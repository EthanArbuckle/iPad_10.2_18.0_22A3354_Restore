char *sub_227D51344(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, char *, uint64_t))
{
  char *v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, _QWORD, uint64_t);
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t, char *, uint64_t);
  uint64_t v24;

  v22 = a2;
  v23 = a3;
  v4 = v3;
  v21 = a1;
  v5 = sub_227E602B4();
  v20 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v6);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_227E6029C();
  v10 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5688];
  MEMORY[0x24BDAC7A8](v9, v11);
  v12 = sub_227E5F978();
  MEMORY[0x24BDAC7A8](v12, v13);
  sub_227D52DBC(0, (unint64_t *)&qword_253F3B040);
  sub_227E5F960();
  v24 = MEMORY[0x24BEE4AF8];
  sub_227D51624((unint64_t *)&unk_253F3B030, v10, MEMORY[0x24BEE5698]);
  sub_227D68330((uint64_t *)&unk_253F3B000);
  sub_227D515E4(&qword_253F3B010, (uint64_t *)&unk_253F3B000, MEMORY[0x24BEE12C8]);
  sub_227E603E0();
  v14 = *(void (**)(char *, _QWORD, uint64_t))(v20 + 104);
  v14(v8, *MEMORY[0x24BEE5750], v5);
  *((_QWORD *)v3 + 2) = sub_227E602E4();
  sub_227E5F96C();
  sub_227E60290();
  v14(v8, *MEMORY[0x24BEE5758], v5);
  v15 = sub_227E602E4();
  v16 = MEMORY[0x24BEE4B00];
  *((_QWORD *)v3 + 3) = v15;
  *((_QWORD *)v3 + 4) = v16;
  v17 = &v4[*(_QWORD *)(*(_QWORD *)v4 + 128)];
  *((_QWORD *)v17 + 1) = 0;
  swift_unknownObjectWeakInit();
  swift_beginAccess();
  *((_QWORD *)v17 + 1) = 0;
  swift_unknownObjectWeakAssign();
  v23(v21, &v4[*(_QWORD *)(*(_QWORD *)v4 + 120)], v22);
  return v4;
}

uint64_t sub_227D515E4(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = sub_227D6717C(a2);
    result = MEMORY[0x22E2AA7D4](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_227D51624(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a2(255);
    result = MEMORY[0x22E2AA7D4](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_227D51664(uint64_t a1)
{
  swift_allocObject();
  return sub_227D525E0(a1);
}

void (**CRDTModelLocalFileManager.init(config:delegate:)(_QWORD *a1, uint64_t a2, uint64_t a3))(uint64_t, uint64_t)
{
  void (**v3)(uint64_t, uint64_t);
  void (*v4)(uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  void (*v42)(char *, _QWORD, uint64_t);
  void (**v43)(uint64_t, uint64_t);
  uint64_t v44;
  id v45;
  _QWORD *v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  NSObject *v66;
  os_log_type_t v67;
  uint8_t *v68;
  void *v69;
  uint64_t v70;
  unint64_t v71;
  id v72;
  void *v73;
  unsigned int v74;
  id v75;
  id v76;
  void *v77;
  void *v78;
  uint64_t v79;
  id v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  void *v91;
  char *v92;
  char *v93;
  uint64_t v94;
  _QWORD v96[3];
  void (*v97)(uint64_t, uint64_t);
  uint64_t v98;
  char *v99;
  char *v100;
  uint64_t v101;
  char *v102;
  char *v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  _QWORD *v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  id aBlock;
  unint64_t v123;
  uint64_t (*v124)(uint64_t);
  void *v125;
  uint64_t (*v126)();
  uint64_t v127;
  uint64_t v128;

  v108 = a3;
  v118 = a1;
  v119 = a2;
  v128 = *MEMORY[0x24BDAC8D0];
  v4 = *v3;
  v111 = sub_227E5F948();
  v110 = *(_QWORD *)(v111 - 8);
  MEMORY[0x24BDAC7A8](v111, v5);
  v109 = (char *)v96 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_227E5F1B0();
  v8 = *(_QWORD *)(v7 - 8);
  v116 = v7;
  v117 = v8;
  v10 = MEMORY[0x24BDAC7A8](v7, v9);
  v103 = (char *)v96 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10, v12);
  v120 = (char *)v96 - v13;
  v14 = sub_227D68330(&qword_253F3A4F0);
  MEMORY[0x24BDAC7A8](v14, v15);
  v102 = (char *)v96 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v97 = v4;
  v17 = *((_QWORD *)v4 + 10);
  v18 = *((_QWORD *)v4 + 13);
  v19 = *((_QWORD *)v4 + 12);
  v98 = v19;
  v101 = v18;
  v20 = type metadata accessor for ModelState.Source(0, v17, v19, v18);
  MEMORY[0x24BDAC7A8](v20, v21);
  v100 = (char *)v96 - v22;
  v115 = type metadata accessor for ModelState(0, v17, v19, v18);
  v107 = *(_QWORD *)(v115 - 8);
  v24 = MEMORY[0x24BDAC7A8](v115, v23);
  v113 = (uint64_t)v96 - v25;
  v114 = *(_QWORD *)(v17 - 8);
  v27 = MEMORY[0x24BDAC7A8](v24, v26);
  v99 = (char *)v96 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v27, v29);
  v112 = (char *)v96 - v30;
  v31 = sub_227E602B4();
  v32 = *(_QWORD *)(v31 - 8);
  v104 = (char *)v31;
  MEMORY[0x24BDAC7A8](v31, v33);
  v35 = (char *)v96 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = sub_227E6029C();
  MEMORY[0x24BDAC7A8](v36, v37);
  v106 = sub_227E5F978();
  v105 = *(_QWORD *)(v106 - 8);
  MEMORY[0x24BDAC7A8](v106, v38);
  v40 = (char *)v96 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  v96[2] = v3 + 2;
  v3[3] = 0;
  swift_unknownObjectWeakInit();
  v41 = qword_253F3A960;
  v96[1] = sub_227D6A668();
  sub_227E5F96C();
  sub_227E60290();
  v42 = *(void (**)(char *, _QWORD, uint64_t))(v32 + 104);
  v42(v35, *MEMORY[0x24BEE5758], v31);
  *(void (**)(uint64_t, uint64_t))((char *)v3 + v41) = (void (*)(uint64_t, uint64_t))sub_227E602E4();
  v96[0] = qword_253F3AA18;
  sub_227E5F960();
  aBlock = (id)MEMORY[0x24BEE4AF8];
  sub_227D51624((unint64_t *)&unk_253F3B030, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5688], MEMORY[0x24BEE5698]);
  sub_227D68330((uint64_t *)&unk_253F3B000);
  sub_227D52D7C(&qword_253F3B010, (uint64_t *)&unk_253F3B000);
  v43 = v3;
  sub_227E603E0();
  v42(v35, *MEMORY[0x24BEE5750], (uint64_t)v104);
  v104 = v40;
  *(void (**)(uint64_t, uint64_t))((char *)v3 + v96[0]) = (void (*)(uint64_t, uint64_t))sub_227E602E4();
  v44 = qword_253F3AA08;
  v45 = objc_msgSend(objc_allocWithZone((Class)BDSOSTransactionProvider), sel_init);
  type metadata accessor for ObservableTransaction();
  v46 = (_QWORD *)swift_allocObject();
  *(void (**)(uint64_t, uint64_t))((char *)v43 + v44) = (void (*)(uint64_t, uint64_t))sub_227D6E4A4(0xD000000000000035, 0x8000000227E6DF40, (uint64_t)v45, v46);
  *((_BYTE *)v43 + qword_253F3C738) = 0;
  aBlock = 0;
  v123 = 0xE000000000000000;
  sub_227E60494();
  swift_bridgeObjectRelease();
  aBlock = (id)0xD000000000000013;
  v123 = 0x8000000227E6DF80;
  v47 = *((_QWORD *)v97 + 11);
  v97 = *(void (**)(uint64_t, uint64_t))(v47 + 8);
  v97(v17, v47);
  sub_227E6002C();
  swift_bridgeObjectRelease();
  sub_227E5F57C();
  v48 = v112;
  v49 = v98;
  sub_227E5FC60();
  v50 = v118[3];
  v51 = v118[4];
  v52 = v118;
  sub_227D572A4(v118, v50);
  *(void (**)(uint64_t, uint64_t))((char *)v43 + qword_253F3A970) = (void (*)(uint64_t, uint64_t))(*(uint64_t (**)(uint64_t, uint64_t))(v51 + 8))(v50, v51);
  swift_beginAccess();
  v43[3] = (void (*)(uint64_t, uint64_t))v108;
  swift_unknownObjectWeakAssign();
  v53 = v114;
  v54 = (uint64_t)v99;
  (*(void (**)(char *, char *, uint64_t))(v114 + 16))(v99, v48, v17);
  LOBYTE(aBlock) = 0;
  v55 = (uint64_t)v100;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v53 + 56))(v100, 1, 2, v17);
  v56 = type metadata accessor for CRDTModelRevisionInfo();
  v57 = (uint64_t)v102;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v56 - 8) + 56))(v102, 1, 1, v56);
  v58 = v113;
  ModelState.init(model:loaded:source:revisionInfo:)(v54, (char *)&aBlock, v55, v57, v17, v49, v101, v113);
  v59 = v115;
  v60 = MEMORY[0x22E2AA7D4](&protocol conformance descriptor for ModelState<A>, v115);
  type metadata accessor for MutableObservableContainer(0, v59, v60, v61);
  v43[4] = (void (*)(uint64_t, uint64_t))sub_227D51664(v58);
  v62 = v52;
  v63 = v52[3];
  v64 = v62[4];
  sub_227D572A4(v62, v63);
  (*(void (**)(uint64_t, uint64_t))(v64 + 16))(v63, v64);
  v108 = v17;
  v97(v17, v47);
  v65 = v103;
  sub_227E5F18C();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, char *))(v117 + 32))((uint64_t)v43 + qword_253F3A958, v65);
  swift_retain();
  v66 = sub_227E5F570();
  v67 = sub_227E60224();
  if (os_log_type_enabled(v66, v67))
  {
    v68 = (uint8_t *)swift_slowAlloc();
    v69 = (void *)swift_slowAlloc();
    aBlock = v69;
    *(_DWORD *)v68 = 136315138;
    sub_227D51624((unint64_t *)&qword_255928A90, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB28]);
    v70 = sub_227E60674();
    v121 = sub_227D634E0(v70, v71, (uint64_t *)&aBlock);
    sub_227E603B0();
    swift_release();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_227D4F000, v66, v67, "CRDTModelLocalFileManager Init: modelFileURL: %s", v68, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x22E2AA8AC](v69, -1, -1);
    MEMORY[0x22E2AA8AC](v68, -1, -1);
  }
  else
  {
    swift_release();
  }

  v72 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  v73 = (void *)sub_227E5F174();
  aBlock = 0;
  v74 = objc_msgSend(v72, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v73, 1, 0, &aBlock);

  if (v74)
  {
    v75 = aBlock;
  }
  else
  {
    v76 = aBlock;
    v77 = (void *)sub_227E5F144();

    swift_willThrow();
    sub_227E60230();
    if (qword_253F39F30 != -1)
      swift_once();
    v78 = (void *)qword_253F39F28;
    sub_227D68330(&qword_253F3B090);
    v79 = swift_allocObject();
    *(_OWORD *)(v79 + 16) = xmmword_227E6F040;
    v80 = v78;
    v81 = sub_227E5F150();
    v83 = v82;
    v84 = MEMORY[0x24BEE0D00];
    *(_QWORD *)(v79 + 56) = MEMORY[0x24BEE0D00];
    v85 = sub_227D57A70();
    *(_QWORD *)(v79 + 64) = v85;
    *(_QWORD *)(v79 + 32) = v81;
    *(_QWORD *)(v79 + 40) = v83;
    swift_getErrorValue();
    v86 = sub_227E606D4();
    *(_QWORD *)(v79 + 96) = v84;
    *(_QWORD *)(v79 + 104) = v85;
    *(_QWORD *)(v79 + 72) = v86;
    *(_QWORD *)(v79 + 80) = v87;
    sub_227E5F564();

    swift_bridgeObjectRelease();
  }
  sub_227D6F854(*(uint64_t *)((char *)v43 + qword_253F3AA08), (uint64_t)&protocol witness table for ObservableTransaction);
  v88 = MEMORY[0x24BEE4AF8];
  *(void (**)(uint64_t, uint64_t))((char *)v43 + qword_253F3AA00) = (void (*)(uint64_t, uint64_t))MEMORY[0x24BEE4AF8];
  v89 = os_transaction_create();
  v90 = swift_allocObject();
  *(_QWORD *)(v90 + 16) = v43;
  *(_QWORD *)(v90 + 24) = v89;
  v126 = sub_227D6CB34;
  v127 = v90;
  aBlock = (id)MEMORY[0x24BDAC760];
  v123 = 1107296256;
  v124 = sub_227D5A858;
  v125 = &unk_24F090D20;
  v91 = _Block_copy(&aBlock);
  swift_retain();
  swift_unknownObjectRetain();
  v92 = v104;
  sub_227E5F960();
  v121 = v88;
  sub_227D51624((unint64_t *)&unk_253F3AED0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  sub_227D68330((uint64_t *)&unk_253F3AFE0);
  sub_227D52D7C((unint64_t *)&unk_253F3AFF0, (uint64_t *)&unk_253F3AFE0);
  v93 = v109;
  v94 = v111;
  sub_227E603E0();
  MEMORY[0x22E2A991C](0, v92, v93, v91);
  _Block_release(v91);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  (*(void (**)(char *, uint64_t))(v110 + 8))(v93, v94);
  (*(void (**)(char *, uint64_t))(v105 + 8))(v92, v106);
  (*(void (**)(char *, uint64_t))(v117 + 8))(v120, v116);
  (*(void (**)(uint64_t, uint64_t))(v107 + 8))(v113, v115);
  (*(void (**)(char *, uint64_t))(v114 + 8))(v112, v108);
  swift_release();
  sub_227D58120((uint64_t)v118);
  return v43;
}

_QWORD *sub_227D5232C(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v6;
  uint64_t (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v19 = a2;
  v20 = a3;
  v6 = sub_227E6029C();
  v7 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5688];
  MEMORY[0x24BDAC7A8](v6, v8);
  v9 = sub_227E5F978();
  MEMORY[0x24BDAC7A8](v9, v10);
  v11 = sub_227E602B4();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11, v13);
  v15 = (char *)&v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  a4[4] = 0;
  sub_227D52DBC(0, (unint64_t *)&qword_253F3B040);
  (*(void (**)(char *, _QWORD, uint64_t))(v12 + 104))(v15, *MEMORY[0x24BEE5758], v11);
  sub_227E5F960();
  v21 = MEMORY[0x24BEE4AF8];
  sub_227D51624((unint64_t *)&unk_253F3B030, v7, MEMORY[0x24BEE5698]);
  sub_227D68330((uint64_t *)&unk_253F3B000);
  sub_227D52D7C(&qword_253F3B010, (uint64_t *)&unk_253F3B000);
  sub_227E603E0();
  a4[5] = sub_227E602E4();
  sub_227E5F57C();
  v16 = v19;
  a4[2] = a1;
  a4[3] = v16;
  a4[6] = v20;
  return a4;
}

uint64_t sub_227D52554(uint64_t (**a1)(_QWORD))
{
  uint64_t v1;

  return (*a1)(*(_QWORD *)(v1 + 32));
}

uint64_t sub_227D52584(uint64_t a1)
{
  uint64_t *v1;

  return sub_227D5264C(a1, v1[4], v1[5], v1[6], v1[7], v1[8], v1[2], v1[3]);
}

uint64_t MutableObservableContainer.init(value:)(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1;
  v4 = sub_227D525E0(a1);
  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v3 + 264) - 8) + 8))(a1);
  return v4;
}

uint64_t sub_227D525E0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v6;

  MEMORY[0x24BDAC7A8](a1, a1);
  v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v4 + 16))(v3);
  ObservableContainer.init(value:)((uint64_t)v3);
  return v1;
}

uint64_t sub_227D5264C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD aBlock[7];
  uint64_t v49;

  v42 = a5;
  v43 = a6;
  v40 = a4;
  v41 = a1;
  v11 = sub_227E5F948();
  v46 = *(_QWORD *)(v11 - 8);
  v47 = v11;
  MEMORY[0x24BDAC7A8](v11, v12);
  v14 = (char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_227E5F978();
  v44 = *(_QWORD *)(v15 - 8);
  v45 = v15;
  MEMORY[0x24BDAC7A8](v15, v16);
  v18 = (char *)&v40 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for ObservableContainer.Event(0, a7, a8, v19);
  v21 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20, v22);
  v24 = (char *)&v40 - v23;
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v26 = result;
    swift_beginAccess();
    v27 = MEMORY[0x22E2AA96C](a3 + 16);
    swift_unknownObjectRelease();
    if (v27)
    {
      v40 = *(_QWORD *)(v26 + 24);
      (*(void (**)(char *, uint64_t, uint64_t))(v21 + 16))(v24, v41, v20);
      v28 = *(unsigned __int8 *)(v21 + 80);
      v41 = v26;
      v29 = (v28 + 48) & ~v28;
      v30 = (char *)swift_allocObject();
      *((_QWORD *)v30 + 2) = a7;
      *((_QWORD *)v30 + 3) = a8;
      v31 = v43;
      *((_QWORD *)v30 + 4) = v42;
      *((_QWORD *)v30 + 5) = v31;
      (*(void (**)(char *, char *, uint64_t))(v21 + 32))(&v30[v29], v24, v20);
      aBlock[4] = sub_227D5AAB0;
      aBlock[5] = v30;
      aBlock[0] = MEMORY[0x24BDAC760];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_227D5A858;
      aBlock[3] = &unk_24F08D358;
      v32 = _Block_copy(aBlock);
      swift_retain();
      sub_227E5F960();
      v49 = MEMORY[0x24BEE4AF8];
      sub_227D51624((unint64_t *)&unk_253F3AED0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
      sub_227D68330((uint64_t *)&unk_253F3AFE0);
      sub_227D52D7C((unint64_t *)&unk_253F3AFF0, (uint64_t *)&unk_253F3AFE0);
      v33 = v47;
      sub_227E603E0();
      MEMORY[0x22E2A991C](0, v18, v14, v32);
      _Block_release(v32);
      (*(void (**)(char *, uint64_t))(v46 + 8))(v14, v33);
      (*(void (**)(char *, uint64_t))(v44 + 8))(v18, v45);
      swift_release();
      return swift_release();
    }
    else
    {
      sub_227E60248();
      sub_227D68330(&qword_253F3B090);
      v34 = swift_allocObject();
      *(_OWORD *)(v34 + 16) = xmmword_227E6F1B0;
      v35 = v40;
      aBlock[0] = v40;
      v36 = sub_227E5FFC0();
      v38 = v37;
      *(_QWORD *)(v34 + 56) = MEMORY[0x24BEE0D00];
      *(_QWORD *)(v34 + 64) = sub_227D57A70();
      *(_QWORD *)(v34 + 32) = v36;
      *(_QWORD *)(v34 + 40) = v38;
      sub_227D52DBC(0, (unint64_t *)&qword_253F3B060);
      v39 = (void *)sub_227E60374();
      sub_227E5F564();
      swift_bridgeObjectRelease();

      aBlock[6] = v35;
      swift_beginAccess();
      swift_getFunctionTypeMetadata1();
      sub_227E5FF24();
      sub_227E5FEF4();
      swift_endAccess();
      swift_release();
      result = v49;
      if (v49)
        return sub_227D5B660(v49);
    }
  }
  return result;
}

char *ObservableContainer.init(value:)(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t (*v6)(uint64_t);
  void (*v7)(char *, _QWORD, uint64_t);
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v2 = v1;
  v13 = *(_QWORD *)v1;
  v14 = a1;
  v3 = sub_227E602B4();
  v12 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8]();
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_227E6029C();
  v6 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5688];
  MEMORY[0x24BDAC7A8]();
  sub_227E5F978();
  MEMORY[0x24BDAC7A8]();
  sub_227D52DBC(0, (unint64_t *)&qword_253F3B040);
  sub_227E5F960();
  v15 = MEMORY[0x24BEE4AF8];
  sub_227D51624((unint64_t *)&unk_253F3B030, v6, MEMORY[0x24BEE5698]);
  sub_227D68330((uint64_t *)&unk_253F3B000);
  sub_227D52D7C(&qword_253F3B010, (uint64_t *)&unk_253F3B000);
  sub_227E603E0();
  v7 = *(void (**)(char *, _QWORD, uint64_t))(v12 + 104);
  v7(v5, *MEMORY[0x24BEE5750], v3);
  *((_QWORD *)v1 + 2) = sub_227E602E4();
  sub_227E5F96C();
  sub_227E60290();
  v7(v5, *MEMORY[0x24BEE5758], v3);
  *((_QWORD *)v1 + 3) = sub_227E602E4();
  v8 = *(_QWORD *)(v13 + 80);
  type metadata accessor for ObservableContainer.Event(255, v8, *(_QWORD *)(v13 + 88), v9);
  swift_getFunctionTypeMetadata1();
  *((_QWORD *)v2 + 4) = sub_227E5FEB8();
  v10 = &v2[*(_QWORD *)(*(_QWORD *)v2 + 128)];
  *((_QWORD *)v10 + 1) = 0;
  swift_unknownObjectWeakInit();
  swift_beginAccess();
  *((_QWORD *)v10 + 1) = 0;
  swift_unknownObjectWeakAssign();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(&v2[*(_QWORD *)(*(_QWORD *)v2 + 120)], v14, v8);
  return v2;
}

uint64_t sub_227D52D7C(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = sub_227D6717C(a2);
    result = MEMORY[0x22E2AA7D4](MEMORY[0x24BEE12C8], v4);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_227D52DBC(uint64_t a1, unint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

void sub_227D52DF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[13];
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v27[8] = a4;
  v27[11] = a3;
  v33 = a2;
  v39 = a1;
  v45 = *MEMORY[0x24BDAC8D0];
  v5 = (_QWORD *)*v4;
  v29 = sub_227E5F1B0();
  v36 = *(_QWORD *)(v29 - 8);
  v7 = MEMORY[0x24BDAC7A8](v29, v6);
  v35 = (char *)v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v7, v9);
  v32 = (char *)v27 - v11;
  v13 = MEMORY[0x24BDAC7A8](v10, v12);
  v37 = (char *)v27 - v14;
  MEMORY[0x24BDAC7A8](v13, v15);
  v40 = (char *)v27 - v16;
  v34 = sub_227E5FEAC();
  v30 = *(_QWORD *)(v34 - 8);
  MEMORY[0x24BDAC7A8](v34, v17);
  v27[12] = (char *)v27 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = type metadata accessor for CRDTModelSyncVersion();
  v20 = MEMORY[0x24BDAC7A8](v28, v19);
  v31 = (char *)v27 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20, v22);
  v27[10] = (char *)v27 - v23;
  v24 = v5[10];
  v38 = v5[11];
  v26 = v5[12];
  v25 = v5[13];
  v41 = v24;
  v42 = v38;
  v43 = v26;
  v44 = v25;
  type metadata accessor for CRDTModelFileSyncInfo();
}

void sub_227D52FD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(uint64_t);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  MEMORY[0x22E2AA7D4](&protocol conformance descriptor for CRDTModelFileSyncInfo<A>, a1);
  *(_QWORD *)(v13 - 240) = a1;
  v15 = sub_227E5FDE0();
  *(_QWORD *)(v13 - 280) = v15;
  *(_QWORD *)(v13 - 408) = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15, v16);
  *(_QWORD *)(v13 - 296) = (char *)&a9 - v17;
  v18 = sub_227D68330(&qword_253F3A4F0);
  MEMORY[0x24BDAC7A8](v18, v19);
  *(_QWORD *)(v13 - 432) = (char *)&a9 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(v13 - 256) = v10;
  *(_QWORD *)(v13 - 248) = v11;
  v21 = type metadata accessor for ModelState.Source(0, v12, v11, v10);
  v23 = MEMORY[0x24BDAC7A8](v21, v22);
  *(_QWORD *)(v13 - 456) = (char *)&a9 - v24;
  *(_QWORD *)(v13 - 464) = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v23, v25);
  *(_QWORD *)(v13 - 472) = (char *)&a9 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = type metadata accessor for ModelState(0, v12, v11, v10);
  *(_QWORD *)(v13 - 264) = v27;
  *(_QWORD *)(v13 - 328) = *(_QWORD *)(v27 - 8);
  v29 = MEMORY[0x24BDAC7A8](v27, v28);
  *(_QWORD *)(v13 - 288) = (char *)&a9 - v30;
  *(_QWORD *)(v13 - 272) = *(_QWORD *)(a1 - 8);
  v32 = MEMORY[0x24BDAC7A8](v29, v31);
  *(_QWORD *)(v13 - 448) = (char *)&a9 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v32, v34);
  v35 = sub_227E602B4();
  v36 = *(_QWORD *)(v35 - 8);
  MEMORY[0x24BDAC7A8](v35, v37);
  v39 = (char *)&a9 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = sub_227E6029C();
  MEMORY[0x24BDAC7A8](v40, v41);
  v42 = sub_227E5F978();
  MEMORY[0x24BDAC7A8](v42, v43);
  *(_QWORD *)(v9 + 24) = 0;
  swift_unknownObjectWeakInit();
  sub_227D6A668();
  sub_227E5F96C();
  sub_227E60290();
  (*(void (**)(char *, _QWORD, uint64_t))(v36 + 104))(v39, *MEMORY[0x24BEE5758], v35);
  *(_QWORD *)(v9 + 48) = sub_227E602E4();
  *(_BYTE *)(v9 + 80) = 0;
  *(_QWORD *)(v13 - 424) = v9 + *(_QWORD *)(*(_QWORD *)v9 + 200);
  *(_QWORD *)(v13 - 128) = 0;
  *(_QWORD *)(v13 - 120) = 0xE000000000000000;
  sub_227E60494();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v13 - 128) = 0xD000000000000012;
  *(_QWORD *)(v13 - 120) = 0x8000000227E6BCA0;
  v44 = *(_QWORD *)(v13 - 224);
  v45 = *(void (**)(uint64_t))(v44 + 8);
  *(_QWORD *)(v13 - 440) = v45;
  v46 = v44;
  v45(v12);
  sub_227E6002C();
  swift_bridgeObjectRelease();
  sub_227E5F57C();
  v47 = *(_QWORD *)(v13 - 248);
  sub_227E5FC60();
  *(_QWORD *)(v13 - 128) = v12;
  *(_QWORD *)(v13 - 120) = v46;
  v48 = *(_QWORD *)(v13 - 256);
  *(_QWORD *)(v13 - 112) = v47;
  *(_QWORD *)(v13 - 104) = v48;
  type metadata accessor for CRDTModelFileSyncInfo();
}

void sub_227D53398(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  id v32;
  void *v33;
  void (*v34)(uint64_t, char *, uint64_t);
  id v35;
  uint64_t v36;
  void (*v37)(uint64_t, uint64_t);
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(void);
  uint64_t v47;
  NSObject *v48;
  os_log_type_t v49;
  uint8_t *v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  void (*v54)(uint64_t, uint64_t);
  void (*v55)(uint64_t, uint64_t);
  id v56;
  void *v57;
  unsigned int v58;
  void *v59;
  id v60;
  id v61;
  void *v62;
  void *v63;
  uint64_t v64;
  id v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;

  *(_QWORD *)(v6 + *(int *)(a1 + 52)) = MEMORY[0x24BEE4B00];
  v8 = *(_QWORD **)(v7 - 216);
  v9 = v8[3];
  v10 = v8[4];
  sub_227D572A4(v8, v9);
  v11 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v10 + 8))(v9, v10);
  v1[12] = v11;
  swift_beginAccess();
  v1[3] = *(_QWORD *)(v7 - 416);
  swift_unknownObjectWeakAssign();
  v12 = *(_QWORD *)(v7 - 336);
  v1[8] = v12;
  type metadata accessor for ObservableTransaction();
  v13 = (_QWORD *)swift_allocObject();
  swift_getObjectType();
  swift_unknownObjectRetain_n();
  v1[7] = sub_227D5232C(v4 + 34, 0x8000000227E6BCC0, v12, v13);
  v14 = *(_QWORD *)(v7 - 464);
  v15 = *(_QWORD *)(v7 - 472);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16))(v15, v6, v2);
  *(_BYTE *)(v7 - 128) = 0;
  v16 = *(_QWORD *)(v7 - 456);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56))(v16, 1, 2, v2);
  v17 = type metadata accessor for CRDTModelRevisionInfo();
  v18 = *(_QWORD *)(v7 - 432);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v18, 1, 1, v17);
  v19 = *(_QWORD *)(v7 - 288);
  ModelState.init(model:loaded:source:revisionInfo:)(v15, (char *)(v7 - 128), v16, v18, v2, v5, v3, v19);
  v20 = *(_QWORD *)(v7 - 264);
  v21 = MEMORY[0x22E2AA7D4](&protocol conformance descriptor for ModelState<A>, v20);
  type metadata accessor for MutableObservableContainer(0, v20, v21, v22);
  v1[4] = sub_227D51664(v19);
  v23 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 272) + 16);
  v24 = *(_QWORD *)(v7 - 448);
  *(_QWORD *)(v7 - 336) = v6;
  v25 = *(_QWORD *)(v7 - 240);
  v23(v24, v6, v25);
  MEMORY[0x22E2AA7D4](&protocol conformance descriptor for CRDTModelFileSyncInfo<A>, v25);
  v26 = *(_QWORD *)(v7 - 296);
  sub_227E5FDD4();
  v27 = (char *)v1 + *(_QWORD *)(*v1 + 192);
  v28 = *(_QWORD *)(v7 - 408);
  v29 = *(_QWORD *)(v7 - 280);
  (*(void (**)(char *, uint64_t, uint64_t))(v28 + 32))(v27, v26, v29);
  swift_beginAccess();
  v30 = v11;
  v31 = *(_QWORD *)(v7 - 368);
  v32 = v30;
  sub_227E5FD8C();
  swift_endAccess();

  v33 = (void *)v1[12];
  v34 = *(void (**)(uint64_t, char *, uint64_t))(v28 + 16);
  *(_QWORD *)(v7 - 392) = v27;
  *(_QWORD *)(v7 - 416) = v34;
  v34(v26, v27, v29);
  v35 = v33;
  v36 = *(_QWORD *)(v7 - 384);
  sub_227E5FDB0();
  v37 = *(void (**)(uint64_t, uint64_t))(v28 + 8);
  *(_QWORD *)(v7 - 408) = v37;
  v37(v26, v29);
  v38 = *(char **)(v7 - 400);
  *(_QWORD *)v38 = v35;
  v39 = (uint64_t)v38;
  (*(void (**)(char *, uint64_t, _QWORD))(*(_QWORD *)(v7 - 360) + 32))(&v38[*(int *)(*(_QWORD *)(v7 - 376) + 20)], v36, *(_QWORD *)(v7 - 320));
  sub_227D68330(&qword_253F3AC50);
  swift_allocObject();
  v40 = *(_QWORD *)(v7 - 352);
  sub_227D64AD8(v39, v40);
  v41 = sub_227D6F8B4(v40);
  sub_227D64888(v39);
  v1[5] = v41;
  v42 = *(_QWORD **)(v7 - 216);
  v43 = v42[3];
  v44 = v42[4];
  sub_227D572A4(v42, v43);
  (*(void (**)(uint64_t, uint64_t))(v44 + 16))(v43, v44);
  *(_QWORD *)(v7 - 320) = v2;
  *(_QWORD *)(v7 - 128) = (*(uint64_t (**)(uint64_t, _QWORD))(v7 - 440))(v2, *(_QWORD *)(v7 - 224));
  *(_QWORD *)(v7 - 120) = v45;
  sub_227E6002C();
  sub_227E5F18C();
  swift_bridgeObjectRelease();
  v46 = *(void (**)(void))(*(_QWORD *)(v7 - 304) + 16);
  v47 = *(_QWORD *)(v7 - 344);
  *(_QWORD *)(v7 - 352) = v46;
  v46();
  v48 = sub_227E5F570();
  v49 = sub_227E60224();
  if (os_log_type_enabled(v48, v49))
  {
    v50 = (uint8_t *)swift_slowAlloc();
    v51 = swift_slowAlloc();
    *(_QWORD *)(v7 - 128) = v51;
    *(_DWORD *)v50 = 136315138;
    sub_227DE2528();
    v52 = sub_227E60674();
    *(_QWORD *)(v7 - 200) = sub_227D634E0(v52, v53, (uint64_t *)(v7 - 128));
    sub_227E603B0();
    swift_bridgeObjectRelease();
    v54 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 304) + 8);
    *(_QWORD *)(v7 - 304) = v54;
    v54(v47, v31);
    _os_log_impl(&dword_227D4F000, v48, v49, "CRDTModelFileSyncManager Init: modelFileURL: %s", v50, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x22E2AA8AC](v51, -1, -1);
    MEMORY[0x22E2AA8AC](v50, -1, -1);
  }
  else
  {
    v55 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 304) + 8);
    *(_QWORD *)(v7 - 304) = v55;
    v55(v47, v31);
  }

  v56 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  v57 = (void *)sub_227E5F174();
  *(_QWORD *)(v7 - 128) = 0;
  v58 = objc_msgSend(v56, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v57, 1, 0, v7 - 128);

  v59 = *(void **)(v7 - 128);
  if (v58)
  {
    v60 = v59;
  }
  else
  {
    v61 = v59;
    v62 = (void *)sub_227E5F144();

    swift_willThrow();
    sub_227E60230();
    if (qword_253F39F30 != -1)
      swift_once();
    v63 = (void *)qword_253F39F28;
    sub_227D68330(&qword_253F3B090);
    v64 = swift_allocObject();
    *(_OWORD *)(v64 + 16) = xmmword_227E6F040;
    v65 = v63;
    v66 = sub_227E5F150();
    v68 = v67;
    v69 = MEMORY[0x24BEE0D00];
    *(_QWORD *)(v64 + 56) = MEMORY[0x24BEE0D00];
    v70 = sub_227D57A70();
    *(_QWORD *)(v64 + 64) = v70;
    *(_QWORD *)(v64 + 32) = v66;
    *(_QWORD *)(v64 + 40) = v68;
    swift_getErrorValue();
    v71 = sub_227E606D4();
    *(_QWORD *)(v64 + 96) = v69;
    *(_QWORD *)(v64 + 104) = v70;
    *(_QWORD *)(v64 + 72) = v71;
    *(_QWORD *)(v64 + 80) = v72;
    sub_227E5F564();

    swift_bridgeObjectRelease();
  }
  v73 = *(_QWORD *)(v7 - 240);
  v74 = MEMORY[0x22E2AA7D4](&protocol conformance descriptor for CRDTModelFileSyncInfo<A>, v73);
  v75 = MEMORY[0x22E2AA7D4](&protocol conformance descriptor for CRDTModelFileSyncInfo<A>, v73);
  *(_QWORD *)(v7 - 128) = v73;
  *(_QWORD *)(v7 - 120) = &protocol witness table for CRDTModelFileSyncInfo<A>;
  *(_QWORD *)(v7 - 112) = v74;
  *(_QWORD *)(v7 - 104) = v75;
  type metadata accessor for CRDTModelFileSyncTransport();
}

uint64_t CRDTModelLocalFileManager.observable.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v1 = type metadata accessor for ModelState(255, *(_QWORD *)(*(_QWORD *)v0 + 80), *(_QWORD *)(*(_QWORD *)v0 + 96), *(_QWORD *)(*(_QWORD *)v0 + 104));
  v2 = MEMORY[0x22E2AA7D4](&protocol conformance descriptor for ModelState<A>, v1);
  type metadata accessor for MutableObservableContainer(0, v1, v2, v3);
  sub_227E602CC();
  return v5;
}

uint64_t type metadata accessor for MutableObservableContainer(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_227D6837C(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for MutableObservableContainer);
}

void sub_227D53D44()
{
  uint64_t v0;

  sub_227D55AD8(*(_QWORD *)(v0 + 24));
}

uint64_t ModelState.init(model:loaded:source:revisionInfo:)@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  char v15;
  int *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v15 = *a2;
  v16 = (int *)type metadata accessor for ModelState(0, a5, a6, a7);
  v17 = a8 + v16[13];
  v18 = type metadata accessor for CRDTModelRevisionInfo();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v17, 1, 1, v18);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a5 - 8) + 32))(a8, a1, a5);
  *(_BYTE *)(a8 + v16[11]) = v15;
  v19 = a8 + v16[12];
  v20 = type metadata accessor for ModelState.Source(0, a5, a6, a7);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v19, a3, v20);
  return sub_227D6E6BC(a4, v17);
}

uint64_t type metadata accessor for ModelState.Source(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_227D6837C(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ModelState.Source);
}

uint64_t storeEnumTagSinglePayload for CRDTModelRevisionInfo()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_227D53E80(uint64_t a1, int a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v16[9];
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v26 = a4;
  v27 = a3;
  v25 = a2;
  v30 = a1;
  v5 = *v4;
  v6 = *(_QWORD *)(*v4 + 80);
  v8 = *(_QWORD *)(*v4 + 96);
  v7 = *(_QWORD *)(*v4 + 104);
  v21 = type metadata accessor for ModelState(0, v6, v8, v7);
  v19 = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21, v9);
  v18 = (char *)v16 - v10;
  v17 = type metadata accessor for ModelState.Source(0, v6, v8, v7);
  v16[8] = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17, v11);
  v20 = (char *)v16 - v12;
  v24 = sub_227E5FCD8();
  v23 = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24, v13);
  v22 = (char *)v16 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *(_QWORD *)(v5 + 88);
  v31 = v6;
  v32 = v15;
  v28 = v15;
  v33 = v8;
  v34 = v7;
  v29 = v7;
  type metadata accessor for CRDTModelFileSyncInfo();
}

void sub_227D53FE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  id *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  char v38;
  void (*v39)(char *, uint64_t);
  char *v40;
  void (*v41)(uint64_t, uint64_t, uint64_t);
  uint64_t v42;
  char *v43;
  NSObject *v44;
  os_log_type_t v45;
  int v46;
  uint64_t v47;
  void (*v48)(uint64_t, uint64_t);
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  NSObject *v57;
  uint64_t v58;
  id *v59;
  uint64_t v60;
  uint64_t v61;
  NSObject *v62;
  os_log_type_t v63;
  int v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  void (*v71)(uint64_t, uint64_t);
  uint64_t v72;
  unint64_t v73;
  unint64_t v74;
  void (*v75)(void);
  NSObject *v76;
  uint64_t v77;
  char *v78;
  void (*v79)(uint64_t, char *, uint64_t);
  uint64_t v80;
  uint64_t v81;

  *(_QWORD *)(v12 - 320) = *(_QWORD *)(a1 - 8);
  v14 = MEMORY[0x24BDAC7A8](a1, a2);
  *(_QWORD *)(v12 - 352) = (char *)&a9 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14, v16);
  *(_QWORD *)(v12 - 240) = (char *)&a9 - v17;
  MEMORY[0x22E2AA7D4](&protocol conformance descriptor for CRDTModelFileSyncInfo<A>, a1);
  v18 = sub_227E5FDE0();
  *(_QWORD *)(v12 - 216) = v18;
  *(_QWORD *)(v12 - 248) = *(_QWORD *)(v18 - 8);
  v20 = MEMORY[0x24BDAC7A8](v18, v19);
  v22 = (char *)&a9 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = MEMORY[0x24BDAC7A8](v20, v23);
  v26 = (char *)&a9 - v25;
  v27 = *(_QWORD *)(v9 - 8);
  v29 = MEMORY[0x24BDAC7A8](v24, v28);
  *(_QWORD *)(v12 - 272) = (char *)&a9 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = MEMORY[0x24BDAC7A8](v29, v31);
  *(_QWORD *)(v12 - 312) = (char *)&a9 - v33;
  MEMORY[0x24BDAC7A8](v32, v34);
  v36 = (char *)&a9 - v35;
  *(_QWORD *)(v12 - 232) = objc_msgSend(v10[8], sel_createTransactionWithName_, "com.apple.ibooks.CRDTModelFileSyncManager.q_sync");
  sub_227D54D04((uint64_t)v36);
  *(_QWORD *)(v12 - 192) = v11;
  v37 = *(_QWORD *)(v12 - 176);
  v38 = sub_227E5FD20();
  v39 = *(void (**)(char *, uint64_t))(v27 + 8);
  *(_QWORD *)(v12 - 208) = v39;
  v39(v36, v9);
  v40 = (char *)v10 + *((_QWORD *)*v10 + 25);
  v41 = *(void (**)(uint64_t, uint64_t, uint64_t))(v27 + 16);
  if ((v38 & 1) != 0)
  {
    *(_QWORD *)(v12 - 424) = v27;
    *(_QWORD *)(v12 - 416) = v22;
    *(_QWORD *)(v12 - 400) = v36;
    *(_QWORD *)(v12 - 344) = v26;
    *(_QWORD *)(v12 - 272) = a1;
    v42 = *(_QWORD *)(v12 - 312);
    *(_QWORD *)(v12 - 392) = v41;
    v43 = v40;
    v41(v42, v37, v9);
    swift_retain_n();
    *(_QWORD *)(v12 - 408) = v43;
    v44 = sub_227E5F570();
    v45 = sub_227E60248();
    v46 = v45;
    if (os_log_type_enabled(v44, v45))
    {
      v47 = swift_slowAlloc();
      v48 = *(void (**)(uint64_t, uint64_t))(v12 - 208);
      v49 = v47;
      v50 = swift_slowAlloc();
      *(_QWORD *)(v12 - 432) = v50;
      *(_QWORD *)(v12 - 120) = v50;
      *(_DWORD *)v49 = 67109634;
      *(_DWORD *)(v12 - 144) = *(_DWORD *)(v12 - 264) & 1;
      sub_227E603B0();
      *(_WORD *)(v49 + 8) = 2080;
      *(_DWORD *)(v12 - 440) = v46;
      *(_QWORD *)(v12 - 448) = v44;
      v51 = sub_227E60674();
      *(_QWORD *)(v12 - 144) = sub_227D634E0(v51, v52, (uint64_t *)(v12 - 120));
      sub_227E603B0();
      swift_bridgeObjectRelease();
      v48(v42, v9);
      *(_WORD *)(v49 + 18) = 2080;
      *(_QWORD *)(v12 - 312) = v49 + 20;
      v53 = *(_QWORD *)(v12 - 400);
      sub_227D54D04(v53);
      v54 = sub_227E60674();
      v56 = v55;
      v48(v53, v9);
      *(_QWORD *)(v12 - 144) = sub_227D634E0(v54, v56, (uint64_t *)(v12 - 120));
      sub_227E603B0();
      swift_release_n();
      swift_bridgeObjectRelease();
      v57 = *(NSObject **)(v12 - 448);
      _os_log_impl(&dword_227D4F000, v57, (os_log_type_t)*(_DWORD *)(v12 - 440), "CRDTModelFileSyncManager q_sync: isRemote=%{BOOL}d, incoming=%s and existing=%s", (uint8_t *)v49, 0x1Cu);
      v58 = *(_QWORD *)(v12 - 432);
      swift_arrayDestroy();
      MEMORY[0x22E2AA8AC](v58, -1, -1);
      MEMORY[0x22E2AA8AC](v49, -1, -1);

      v59 = v10;
      v60 = *(_QWORD *)(v12 - 216);
    }
    else
    {

      (*(void (**)(uint64_t, uint64_t))(v12 - 208))(v42, v9);
      swift_release_n();
      v59 = v10;
      v60 = *(_QWORD *)(v12 - 216);
      v53 = *(_QWORD *)(v12 - 400);
    }
    v78 = (char *)v59 + *((_QWORD *)*v59 + 24);
    swift_beginAccess();
    v79 = *(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v12 - 248) + 16);
    v80 = *(_QWORD *)(v12 - 344);
    *(_QWORD *)(v12 - 432) = v78;
    *(_QWORD *)(v12 - 440) = v79;
    v79(v80, v78, v60);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v12 - 392))(v53, *(_QWORD *)(v12 - 176), v9);
    *(_QWORD *)(v12 - 280) = v9;
    CRDTModelFileSyncInfo.init(model:)();
  }
  v61 = *(_QWORD *)(v12 - 272);
  v41(v61, v37, v9);
  swift_retain_n();
  v62 = sub_227E5F570();
  v63 = sub_227E60248();
  v64 = v63;
  if (os_log_type_enabled(v62, v63))
  {
    v65 = swift_slowAlloc();
    v66 = swift_slowAlloc();
    *(_QWORD *)(v12 - 176) = v66;
    *(_QWORD *)(v12 - 120) = v66;
    *(_DWORD *)v65 = 67109634;
    *(_DWORD *)(v12 - 144) = *(_DWORD *)(v12 - 264) & 1;
    *(_DWORD *)(v12 - 216) = v64;
    v67 = (uint64_t)v36;
    sub_227E603B0();
    *(_WORD *)(v65 + 8) = 2080;
    *(_QWORD *)(v12 - 240) = v62;
    v68 = *(_QWORD *)(v12 - 184);
    v69 = sub_227E60674();
    *(_QWORD *)(v12 - 144) = sub_227D634E0(v69, v70, (uint64_t *)(v12 - 120));
    *(_QWORD *)(v12 - 248) = v12 - 136;
    sub_227E603B0();
    swift_bridgeObjectRelease();
    v71 = *(void (**)(uint64_t, uint64_t))(v12 - 208);
    v71(v61, v9);
    *(_WORD *)(v65 + 18) = 2080;
    sub_227D54D04(v67);
    v72 = sub_227E60674();
    v74 = v73;
    v71(v67, v9);
    *(_QWORD *)(v12 - 144) = sub_227D634E0(v72, v74, (uint64_t *)(v12 - 120));
    v75 = *(void (**)(void))(v12 - 224);
    sub_227E603B0();
    swift_release_n();
    swift_bridgeObjectRelease();
    v76 = *(NSObject **)(v12 - 240);
    _os_log_impl(&dword_227D4F000, v76, (os_log_type_t)*(_DWORD *)(v12 - 216), "CRDTModelFileSyncManager q_sync -- no delta: isRemote=%{BOOL}d, incoming=%s and existing=%s", (uint8_t *)v65, 0x1Cu);
    v77 = *(_QWORD *)(v12 - 176);
    swift_arrayDestroy();
    MEMORY[0x22E2AA8AC](v77, -1, -1);
    MEMORY[0x22E2AA8AC](v65, -1, -1);

  }
  else
  {

    (*(void (**)(uint64_t, uint64_t))(v12 - 208))(v61, v9);
    swift_release_n();
    v68 = *(_QWORD *)(v12 - 184);
    v75 = *(void (**)(void))(v12 - 224);
  }
  v75();
  v81 = *(_QWORD *)(v12 - 200);
  *(_QWORD *)(v12 - 120) = v9;
  *(_QWORD *)(v12 - 112) = v81;
  *(_QWORD *)(v12 - 104) = *(_QWORD *)(v12 - 192);
  *(_QWORD *)(v12 - 96) = v68;
  type metadata accessor for CRDTModelFileSyncManager.SyncError();
}

void sub_227D54998(uint64_t a1)
{
  void *v1;
  _BYTE *v2;

  MEMORY[0x22E2AA7D4](&protocol conformance descriptor for CRDTModelFileSyncManager<A>.SyncError, a1);
  swift_allocError();
  *v2 = 0;
  swift_willThrow();

}

uint64_t sub_227D54A8C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;

  MEMORY[0x22E2AA7D4](&protocol conformance descriptor for CRDTModelFileSyncManager<A>.SyncError, a1);
  swift_allocError();
  *v7 = 1;
  swift_willThrow();

  (*(void (**)(_QWORD, uint64_t))(v4 + 8))(*(_QWORD *)(v6 - 240), v5);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v2, v3);
}

void sub_227D54BDC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  void *v8;
  id v9;
  void (*v10)(uint64_t, uint64_t);

  v4 = *(_QWORD *)(v3 - 416);
  v5 = *(_QWORD *)(v3 - 216);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v3 - 440))(v4, *(_QWORD *)(v3 - 432), v5);
  v6 = (_QWORD *)swift_allocObject();
  v8 = *(void **)(v3 - 232);
  v7 = *(_QWORD *)(v3 - 224);
  v6[2] = v0;
  v6[3] = v7;
  v6[4] = *(_QWORD *)(v3 - 256);
  v6[5] = v8;
  swift_retain();
  swift_retain();
  v9 = v8;
  sub_227DFE958(v4, (uint64_t)sub_227DE2418, (uint64_t)v6);
  swift_release();
  sub_227DD1FD4(*(_QWORD *)(v3 - 184), *(_QWORD *)(v3 - 192));

  v10 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 248) + 8);
  v10(v4, v5);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v3 - 360) + 8))(v1, *(_QWORD *)(v3 - 328));
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v3 - 384) + 8))(*(_QWORD *)(v3 - 336), *(_QWORD *)(v3 - 376));
  (*(void (**)(_QWORD, _QWORD))(v3 - 176))(*(_QWORD *)(v3 - 240), *(_QWORD *)(v3 - 272));
  v10(v2, v5);
  JUMPOUT(0x227D54CE0);
}

uint64_t sub_227D54D04@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 80);
  v4 = type metadata accessor for ModelState(0, v3, *(_QWORD *)(*(_QWORD *)v1 + 96), *(_QWORD *)(*(_QWORD *)v1 + 104));
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v6);
  v8 = (char *)&v10 - v7;
  swift_retain();
  MutableObservableContainer.value.getter();
  swift_release();
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v8, v3);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
}

uint64_t sub_227D54DBC(uint64_t a1, int a2)
{
  _QWORD *v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _BYTE *v36;
  _BYTE *v37;
  uint64_t v38;
  void (*v39)(uint64_t, uint64_t);
  char *v40;
  void (*v41)(_BYTE *, uint64_t, uint64_t);
  _BYTE *v42;
  NSObject *v43;
  os_log_type_t v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  void (*v50)(uint64_t, uint64_t);
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  os_log_t v55;
  uint64_t v56;
  os_log_t v57;
  _BYTE *v58;
  NSObject *v59;
  os_log_type_t v60;
  int v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  unint64_t v65;
  void (*v66)(uint64_t, uint64_t);
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  unint64_t v70;
  os_log_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  void (*v76)(_BYTE *, uint64_t, uint64_t *);
  uint64_t v77;
  uint64_t v78;
  _BYTE *v79;
  uint64_t *v80;
  uint64_t v81;
  unint64_t v82;
  _BYTE *v83;
  NSObject *v84;
  os_log_type_t v85;
  uint8_t *v86;
  uint64_t v87;
  unint64_t v88;
  uint64_t v89;
  unint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  unint64_t v98;
  uint64_t v99;
  _QWORD *v100;
  uint64_t v101;
  void *v102;
  _BYTE *v103;
  _BYTE *v104;
  uint64_t v105;
  _BYTE v107[12];
  int v108;
  os_log_t v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  void (*v113)(_BYTE *, uint64_t, uint64_t);
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  _BYTE *v117;
  uint64_t v118;
  uint64_t v119;
  _BYTE *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  _BYTE *v124;
  _BYTE *v125;
  _BYTE *v126;
  _BYTE *v127;
  _BYTE *v128;
  _BYTE *v129;
  _BYTE *v130;
  uint64_t v131;
  uint64_t *v132;
  os_log_t v133;
  int v134;
  _BYTE *v135;
  uint64_t (*v136)(uint64_t);
  _QWORD *v137;
  uint64_t v138;
  unint64_t v139;
  uint64_t v140;
  void (*v141)(uint64_t, uint64_t);
  uint64_t aBlock;
  uint64_t v143;
  uint64_t (*v144)(uint64_t);
  void *v145;
  uint64_t (*v146)();
  _QWORD *v147;
  uint64_t v148;
  uint64_t v149;

  v3 = v2;
  v134 = a2;
  v138 = a1;
  v4 = (_QWORD *)*v2;
  v122 = sub_227E5F948();
  v121 = *(_QWORD *)(v122 - 8);
  MEMORY[0x24BDAC7A8](v122, v5);
  v120 = &v107[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v119 = sub_227E5F978();
  v118 = *(_QWORD *)(v119 - 8);
  MEMORY[0x24BDAC7A8](v119, v7);
  v117 = &v107[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = v4[10];
  v11 = v4[12];
  v10 = v4[13];
  v137 = v4;
  v123 = type metadata accessor for ModelState(0, v9, v11, v10);
  v116 = *(_QWORD *)(v123 - 8);
  MEMORY[0x24BDAC7A8](v123, v12);
  v125 = &v107[-v13];
  v139 = v10;
  v115 = type metadata accessor for ModelState.Source(0, v9, v11, v10);
  v114 = *(_QWORD *)(v115 - 8);
  MEMORY[0x24BDAC7A8](v115, v14);
  v124 = &v107[-v15];
  v16 = sub_227E5FCD8();
  v131 = *(_QWORD *)(v16 - 8);
  v132 = (uint64_t *)v16;
  v18 = MEMORY[0x24BDAC7A8](v16, v17);
  v130 = &v107[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v20 = *(_QWORD *)(v9 - 8);
  v22 = MEMORY[0x24BDAC7A8](v18, v21);
  v129 = &v107[-((v23 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v25 = MEMORY[0x24BDAC7A8](v22, v24);
  v126 = &v107[-v26];
  v28 = MEMORY[0x24BDAC7A8](v25, v27);
  v30 = &v107[-v29];
  v32 = MEMORY[0x24BDAC7A8](v28, v31);
  v128 = &v107[-v33];
  MEMORY[0x24BDAC7A8](v32, v34);
  v36 = &v107[-v35];
  v140 = os_transaction_create();
  sub_227D54D04((uint64_t)v36);
  v136 = (uint64_t (*)(uint64_t))v11;
  v37 = *(_BYTE **)(v11 + 8);
  v38 = v138;
  LOBYTE(v11) = sub_227E5FD20();
  v39 = *(void (**)(uint64_t, uint64_t))(v20 + 8);
  v135 = v36;
  v141 = v39;
  v39((uint64_t)v36, v9);
  v40 = (char *)v3 + qword_253F3C740;
  v41 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v20 + 16);
  if ((v11 & 1) == 0)
  {
    v58 = v129;
    v41(v129, v38, v9);
    swift_retain_n();
    v59 = sub_227E5F570();
    v60 = sub_227E60248();
    v61 = v60;
    if (os_log_type_enabled(v59, v60))
    {
      v62 = swift_slowAlloc();
      v138 = swift_slowAlloc();
      aBlock = v138;
      *(_DWORD *)v62 = 67109634;
      LODWORD(v148) = v134 & 1;
      v134 = v61;
      sub_227E603B0();
      *(_WORD *)(v62 + 8) = 2080;
      v133 = v59;
      v63 = v139;
      v64 = sub_227E60674();
      v148 = sub_227D634E0(v64, v65, &aBlock);
      v132 = &v149;
      sub_227E603B0();
      swift_bridgeObjectRelease();
      v66 = v141;
      v141((uint64_t)v58, v9);
      *(_WORD *)(v62 + 18) = 2080;
      v67 = (uint64_t)v135;
      sub_227D54D04((uint64_t)v135);
      v68 = sub_227E60674();
      v70 = v69;
      v66(v67, v9);
      v148 = sub_227D634E0(v68, v70, &aBlock);
      sub_227E603B0();
      swift_release_n();
      swift_bridgeObjectRelease();
      v71 = v133;
      _os_log_impl(&dword_227D4F000, v133, (os_log_type_t)v134, "CRDTModelLocalFileManager q_sync -- no delta: isRemote=%{BOOL}d, incoming=%s and existing=%s", (uint8_t *)v62, 0x1Cu);
      v72 = v138;
      swift_arrayDestroy();
      MEMORY[0x22E2AA8AC](v72, -1, -1);
      MEMORY[0x22E2AA8AC](v62, -1, -1);

    }
    else
    {

      v141((uint64_t)v58, v9);
      swift_release_n();
      v63 = v139;
    }
    v91 = v137[11];
    aBlock = v9;
    v143 = v91;
    v144 = v136;
    v145 = (void *)v63;
    type metadata accessor for CRDTModelLocalFileManager.SyncError();
  }
  v129 = v37;
  v111 = v20;
  v127 = v30;
  v42 = v128;
  v113 = v41;
  v41(v128, v38, v9);
  swift_retain_n();
  v112 = v40;
  v43 = sub_227E5F570();
  v44 = sub_227E60248();
  v45 = v44;
  v46 = v38;
  if (os_log_type_enabled(v43, v44))
  {
    v47 = swift_slowAlloc();
    v110 = swift_slowAlloc();
    aBlock = v110;
    *(_DWORD *)v47 = 67109634;
    LODWORD(v148) = v134 & 1;
    sub_227E603B0();
    *(_WORD *)(v47 + 8) = 2080;
    v109 = v43;
    v108 = v45;
    v48 = sub_227E60674();
    v148 = sub_227D634E0(v48, v49, &aBlock);
    sub_227E603B0();
    swift_bridgeObjectRelease();
    v50 = v141;
    v141((uint64_t)v42, v9);
    *(_WORD *)(v47 + 18) = 2080;
    v128 = (_BYTE *)(v47 + 20);
    v51 = (uint64_t)v135;
    sub_227D54D04((uint64_t)v135);
    v52 = sub_227E60674();
    v54 = v53;
    v50(v51, v9);
    v148 = sub_227D634E0(v52, v54, &aBlock);
    sub_227E603B0();
    swift_release_n();
    swift_bridgeObjectRelease();
    v55 = v109;
    _os_log_impl(&dword_227D4F000, v109, (os_log_type_t)v108, "CRDTModelLocalFileManager q_sync: isRemote=%{BOOL}d, incoming=%s and existing=%s", (uint8_t *)v47, 0x1Cu);
    v56 = v110;
    swift_arrayDestroy();
    MEMORY[0x22E2AA8AC](v56, -1, -1);
    MEMORY[0x22E2AA8AC](v47, -1, -1);

    v57 = v133;
  }
  else
  {

    v50 = v141;
    v141((uint64_t)v42, v9);
    swift_release_n();
    v57 = v133;
    v51 = (uint64_t)v135;
  }
  sub_227D54D04(v51);
  v73 = (uint64_t)v127;
  sub_227E5FD44();
  v50(v51, v9);
  v74 = *MEMORY[0x24BE184E0];
  v75 = v131;
  v76 = *(void (**)(_BYTE *, uint64_t, uint64_t *))(v131 + 104);
  v77 = v46;
  v138 = (uint64_t)v3;
  v78 = v9;
  v79 = v130;
  v80 = v132;
  v76(v130, v74, v132);
  v81 = sub_227E5FBF4();
  if (v57)
  {

    (*(void (**)(_BYTE *, uint64_t *))(v75 + 8))(v79, v80);
    v83 = v126;
    v113(v126, v73, v78);
    v84 = sub_227E5F570();
    v85 = sub_227E60230();
    if (os_log_type_enabled(v84, v85))
    {
      v86 = (uint8_t *)swift_slowAlloc();
      v87 = swift_slowAlloc();
      aBlock = v87;
      *(_DWORD *)v86 = 136315138;
      v88 = v139;
      v89 = sub_227E60674();
      v148 = sub_227D634E0(v89, v90, &aBlock);
      sub_227E603B0();
      swift_bridgeObjectRelease();
      v141((uint64_t)v126, v78);
      _os_log_impl(&dword_227D4F000, v84, v85, "CRDTModelLocalFileManager q_sync: couldn't serialize model to sync: %s", v86, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x22E2AA8AC](v87, -1, -1);
      MEMORY[0x22E2AA8AC](v86, -1, -1);

    }
    else
    {

      v141((uint64_t)v83, v78);
      v88 = v139;
    }
    v96 = v137[11];
    aBlock = v78;
    v143 = v96;
    v144 = v136;
    v145 = (void *)v88;
    type metadata accessor for CRDTModelLocalFileManager.SyncError();
  }
  v92 = v81;
  v139 = v82;
  (*(void (**)(_BYTE *, uint64_t *))(v75 + 8))(v79, v80);
  v93 = (uint64_t)v124;
  v94 = v111;
  if ((v134 & 1) != 0)
  {
    v113(v124, v77, v78);
    v95 = 0;
  }
  else
  {
    v95 = 1;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v94 + 56))(v93, v95, 2, v78);
  v97 = v138;
  v137 = (_QWORD *)v78;
  v98 = v139;
  sub_227DD00E0(v92, v139);
  swift_retain();
  v99 = (uint64_t)v125;
  MutableObservableContainer.value.getter();
  swift_release();
  ModelState.updating(model:source:)(v73, v93, v123);
  sub_227E496C4(v99, 0x636E79735F71, 0xE600000000000000);
  v136 = *(uint64_t (**)(uint64_t))(v97 + qword_253F3AA18);
  v100 = (_QWORD *)swift_allocObject();
  v100[2] = v97;
  v100[3] = v92;
  v101 = v140;
  v100[4] = v98;
  v100[5] = v101;
  v146 = sub_227E4A4A8;
  v147 = v100;
  aBlock = MEMORY[0x24BDAC760];
  v143 = 1107296256;
  v144 = sub_227D5A858;
  v145 = &unk_24F090F10;
  v102 = _Block_copy(&aBlock);
  swift_retain();
  sub_227DD00E0(v92, v98);
  swift_unknownObjectRetain();
  v103 = v117;
  sub_227E5F960();
  v148 = MEMORY[0x24BEE4AF8];
  sub_227D51624((unint64_t *)&unk_253F3AED0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  sub_227D68330((uint64_t *)&unk_253F3AFE0);
  sub_227D52D7C((unint64_t *)&unk_253F3AFF0, (uint64_t *)&unk_253F3AFE0);
  v104 = v120;
  v105 = v122;
  sub_227E603E0();
  MEMORY[0x22E2A991C](0, v103, v104, v102);
  _Block_release(v102);
  swift_unknownObjectRelease();
  sub_227DD1FD4(v92, v98);
  sub_227DD1FD4(v92, v98);
  (*(void (**)(_BYTE *, uint64_t))(v121 + 8))(v104, v105);
  (*(void (**)(_BYTE *, uint64_t))(v118 + 8))(v103, v119);
  (*(void (**)(_BYTE *, uint64_t))(v116 + 8))(v125, v123);
  (*(void (**)(_BYTE *, uint64_t))(v114 + 8))(v124, v115);
  v141((uint64_t)v127, (uint64_t)v137);
  return swift_release();
}

void sub_227D55AD8(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v24[14];
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v36 = a1;
  v2 = (_QWORD *)*v1;
  v3 = sub_227D68330(&qword_253F3A4F0);
  MEMORY[0x24BDAC7A8](v3, v4);
  v30 = (char *)v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = v2[10];
  v7 = v2[12];
  v8 = v2[13];
  v9 = type metadata accessor for ModelState(0, v6, v7, v8);
  v32 = *(_QWORD *)(v9 - 8);
  v33 = v9;
  MEMORY[0x24BDAC7A8](v9, v10);
  v31 = (char *)v24 - v11;
  v25 = type metadata accessor for ModelState.Source(0, v6, v7, v8);
  v24[13] = *(_QWORD *)(v25 - 8);
  v13 = MEMORY[0x24BDAC7A8](v25, v12);
  v27 = (char *)v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x24BDAC7A8](v13, v15);
  v24[12] = (char *)v24 - v17;
  v37 = *(_QWORD *)(v6 - 8);
  v19 = MEMORY[0x24BDAC7A8](v16, v18);
  v26 = (char *)v24 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19, v21);
  v34 = (char *)v24 - v22;
  v23 = v2[11];
  v35 = v6;
  v38 = v6;
  v39 = v23;
  v29 = v7;
  v40 = v7;
  v41 = v8;
  v28 = v8;
  type metadata accessor for CRDTModelFileSyncInfo();
}

void sub_227D55C8C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _BYTE *v31;
  uint64_t v32;
  uint64_t v33;
  _BYTE *v34;
  uint64_t v35;
  void (*v36)(_BYTE *, uint64_t, uint64_t);
  uint64_t v37;
  void (*v38)(_BYTE *, uint64_t);
  char v39;
  void (*v40)(uint64_t, _BYTE *, uint64_t);
  uint64_t v41;
  uint64_t v42;
  NSObject *v43;
  os_log_type_t v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  void (*v50)(uint64_t, uint64_t);
  uint64_t v51;
  unint64_t v52;
  NSObject *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  NSObject *v57;
  os_log_type_t v58;
  int v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  void (*v65)(_BYTE *, uint64_t);
  _BYTE *v66;
  uint64_t v67;
  unint64_t v68;
  NSObject *v69;
  uint64_t v70;
  void (*v71)(uint64_t, uint64_t);
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  void (*v75)(uint64_t, uint64_t, uint64_t);
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  void (*v80)(_BYTE *, uint64_t);
  uint64_t v81;
  BOOL v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  _BYTE v96[96];

  MEMORY[0x22E2AA7D4](&protocol conformance descriptor for CRDTModelFileSyncInfo<A>, a1);
  v5 = sub_227E5FDE0();
  v6 = *(_QWORD *)(v5 - 8);
  v8 = MEMORY[0x24BDAC7A8](v5, v7);
  v10 = &v96[-v9];
  v11 = *(_QWORD *)(a1 - 8);
  v13 = MEMORY[0x24BDAC7A8](v8, v12);
  *(_QWORD *)(v3 - 224) = &v96[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v16 = MEMORY[0x24BDAC7A8](v13, v15);
  v18 = &v96[-v17];
  v20 = MEMORY[0x24BDAC7A8](v16, v19);
  *(_QWORD *)(v3 - 336) = &v96[-v21];
  v23 = MEMORY[0x24BDAC7A8](v20, v22);
  *(_QWORD *)(v3 - 376) = &v96[-v24];
  v26 = MEMORY[0x24BDAC7A8](v23, v25);
  *(_QWORD *)(v3 - 384) = &v96[-v27];
  v29 = MEMORY[0x24BDAC7A8](v26, v28);
  v31 = &v96[-v30];
  MEMORY[0x24BDAC7A8](v29, v32);
  v34 = &v96[-v33];
  v35 = v2 + *(_QWORD *)(v1 + 192);
  swift_beginAccess();
  v36 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v6 + 16);
  *(_QWORD *)(v3 - 344) = v35;
  *(_QWORD *)(v3 - 352) = v36;
  v36(v10, v35, v5);
  v37 = MEMORY[0x22E2AA7D4](&protocol conformance descriptor for CRDTModelFileSyncInfo<A>, a1);
  sub_227E5FDC8();
  v38 = *(void (**)(_BYTE *, uint64_t))(v6 + 8);
  *(_QWORD *)(v3 - 328) = v10;
  *(_QWORD *)(v3 - 368) = v38;
  v38(v10, v5);
  *(_QWORD *)(v3 - 360) = v37;
  sub_227E5FDC8();
  *(_DWORD *)(v3 - 196) = sub_227D566D0();
  MEMORY[0x22E2AA7D4](&protocol conformance descriptor for CRDTModelFileSyncInfo<A>, a1);
  v39 = sub_227E5FA5C();
  *(_QWORD *)(v3 - 216) = v11;
  v40 = *(void (**)(uint64_t, _BYTE *, uint64_t))(v11 + 16);
  if ((v39 & 1) != 0)
  {
    *(_QWORD *)(v3 - 224) = v2;
    v41 = *(_QWORD *)(v3 - 384);
    *(_QWORD *)(v3 - 192) = v31;
    v40(v41, v31, a1);
    v42 = *(_QWORD *)(v3 - 376);
    *(_QWORD *)(v3 - 296) = v34;
    v40(v42, v34, a1);
    v43 = sub_227E5F570();
    v44 = sub_227E60248();
    v45 = v44;
    if (os_log_type_enabled(v43, v44))
    {
      v46 = swift_slowAlloc();
      v47 = swift_slowAlloc();
      *(_QWORD *)(v3 - 392) = v47;
      *(_QWORD *)(v3 - 152) = v47;
      *(_DWORD *)v46 = 136315394;
      *(_QWORD *)(v3 - 176) = *(_QWORD *)(a1 + 40);
      *(_DWORD *)(v3 - 396) = v45;
      v48 = sub_227E60674();
      *(_QWORD *)(v3 - 128) = sub_227D634E0(v48, v49, (uint64_t *)(v3 - 152));
      *(_QWORD *)(v3 - 408) = v43;
      sub_227E603B0();
      swift_bridgeObjectRelease();
      v50 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 216) + 8);
      v50(v41, a1);
      *(_WORD *)(v46 + 12) = 2080;
      v51 = sub_227E60674();
      *(_QWORD *)(v3 - 128) = sub_227D634E0(v51, v52, (uint64_t *)(v3 - 152));
      sub_227E603B0();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v3 - 176) = v50;
      v50(v42, a1);
      v53 = *(NSObject **)(v3 - 408);
      _os_log_impl(&dword_227D4F000, v53, (os_log_type_t)*(_DWORD *)(v3 - 396), "CRDTModelFileSyncManager q_handle -- incoming=%s and existing=%s", (uint8_t *)v46, 0x16u);
      v54 = *(_QWORD *)(v3 - 392);
      swift_arrayDestroy();
      MEMORY[0x22E2AA8AC](v54, -1, -1);
      MEMORY[0x22E2AA8AC](v46, -1, -1);

    }
    else
    {

      v71 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 216) + 8);
      v71(v41, a1);
      *(_QWORD *)(v3 - 176) = v71;
      v55 = ((uint64_t (*)(uint64_t, uint64_t))v71)(v42, a1);
    }
    MEMORY[0x24BDAC7A8](v55, v56);
    v72 = *(_QWORD *)(v3 - 192);
    *(_QWORD *)&v96[-16] = v72;
    v73 = *(_QWORD *)(v3 - 344);
    swift_beginAccess();
    sub_227E5FDA4();
    swift_endAccess();
    v74 = *(_QWORD *)(v3 - 168);
    v75 = *(void (**)(uint64_t, uint64_t, uint64_t))(v74 + 16);
    v76 = *(_QWORD *)(v3 - 208);
    v77 = *(_QWORD *)(v3 - 184);
    v75(v76, v72, v77);
    if (sub_227D566D0())
    {
      v78 = *(_QWORD *)(v3 - 320);
      v75(v78, v76, v77);
      v79 = 0;
    }
    else
    {
      v79 = 2;
      v78 = *(_QWORD *)(v3 - 320);
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v74 + 56))(v78, v79, 2, v77);
    v89 = *(_QWORD *)(v3 - 328);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 - 352))(v89, v73, v5);
    v90 = *(_QWORD *)(v3 - 336);
    sub_227E5FDC8();
    (*(void (**)(uint64_t, uint64_t))(v3 - 368))(v89, v5);
    v91 = *(_QWORD *)(v3 - 288);
    v75(v91, v90, v77);
    (*(void (**)(uint64_t, uint64_t))(v3 - 176))(v90, a1);
    *(_BYTE *)(v3 - 152) = 1;
    v92 = *(_QWORD *)(v3 - 280);
    (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v3 - 312) + 16))(v92, v78, *(_QWORD *)(v3 - 304));
    v93 = type metadata accessor for CRDTModelRevisionInfo();
    v94 = *(_QWORD *)(v3 - 256);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v93 - 8) + 56))(v94, 1, 1, v93);
    v95 = *(_QWORD *)(v3 - 248);
    ModelState.init(model:loaded:source:revisionInfo:)(v91, (char *)(v3 - 152), v92, v94, v77, *(_QWORD *)(v3 - 264), *(_QWORD *)(v3 - 272), v95);
    sub_227D6D600(v95, 0x656C646E61685F71, 0xE800000000000000);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v3 - 240) + 8))(v95, *(_QWORD *)(v3 - 232));
    sub_227D568D0();
  }
  v40((uint64_t)v18, v31, a1);
  v40(*(_QWORD *)(v3 - 224), v34, a1);
  v57 = sub_227E5F570();
  v58 = sub_227E60248();
  v59 = v58;
  if (os_log_type_enabled(v57, v58))
  {
    v60 = swift_slowAlloc();
    *(_QWORD *)(v3 - 192) = v31;
    v61 = v60;
    v62 = swift_slowAlloc();
    *(_QWORD *)(v3 - 208) = v62;
    *(_QWORD *)(v3 - 152) = v62;
    *(_DWORD *)v61 = 136315394;
    *(_QWORD *)(v3 - 304) = v57;
    *(_DWORD *)(v3 - 312) = v59;
    v63 = sub_227E60674();
    *(_QWORD *)(v3 - 128) = sub_227D634E0(v63, v64, (uint64_t *)(v3 - 152));
    *(_QWORD *)(v3 - 296) = v34;
    sub_227E603B0();
    swift_bridgeObjectRelease();
    v65 = *(void (**)(_BYTE *, uint64_t))(*(_QWORD *)(v3 - 216) + 8);
    v65(v18, a1);
    *(_WORD *)(v61 + 12) = 2080;
    v66 = *(_BYTE **)(v3 - 224);
    v67 = sub_227E60674();
    *(_QWORD *)(v3 - 128) = sub_227D634E0(v67, v68, (uint64_t *)(v3 - 152));
    sub_227E603B0();
    swift_bridgeObjectRelease();
    v65(v66, a1);
    v69 = *(NSObject **)(v3 - 304);
    _os_log_impl(&dword_227D4F000, v69, (os_log_type_t)*(_DWORD *)(v3 - 312), "CRDTModelFileSyncManager q_handle -- no delta, incoming=%s and existing=%s", (uint8_t *)v61, 0x16u);
    v70 = *(_QWORD *)(v3 - 208);
    swift_arrayDestroy();
    MEMORY[0x22E2AA8AC](v70, -1, -1);
    MEMORY[0x22E2AA8AC](v61, -1, -1);

  }
  else
  {

    v80 = *(void (**)(_BYTE *, uint64_t))(*(_QWORD *)(v3 - 216) + 8);
    v80(v18, a1);
    v80(*(_BYTE **)(v3 - 224), a1);
  }
  v81 = *(_QWORD *)(v3 - 168);
  v82 = sub_227D566D0();
  v83 = *(_QWORD *)(v3 - 184);
  if (!v82)
  {
    v84 = *(_QWORD *)(v3 - 288);
    sub_227D54D04(v84);
    *(_BYTE *)(v3 - 152) = 1;
    v85 = *(_QWORD *)(v3 - 280);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v81 + 56))(v85, 2, 2, v83);
    v86 = type metadata accessor for CRDTModelRevisionInfo();
    v87 = *(_QWORD *)(v3 - 256);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v86 - 8) + 56))(v87, 1, 1, v86);
    v88 = *(_QWORD *)(v3 - 248);
    ModelState.init(model:loaded:source:revisionInfo:)(v84, (char *)(v3 - 152), v85, v87, v83, *(_QWORD *)(v3 - 264), *(_QWORD *)(v3 - 272), v88);
    sub_227D6D600(v88, 0xD000000000000012, 0x8000000227E6BD50);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v3 - 240) + 8))(v88, *(_QWORD *)(v3 - 232));
  }
  sub_227D5681C();
}

void sub_227D565D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v2, v3);
  (*(void (**)(_QWORD, uint64_t))(*(_QWORD *)(v4 - 168) + 8))(*(_QWORD *)(v4 - 208), v0);
  if ((*(_DWORD *)(v4 - 196) & 1) == 0 && sub_227D566D0())
    JUMPOUT(0x227D5662CLL);
  JUMPOUT(0x227D56634);
}

uint64_t sub_227D5666C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 16))();
  *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a1) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a2) & 0xFFFFFFFFFFFFF8);
  swift_bridgeObjectRetain();
  return a1;
}

BOOL sub_227D566D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  unsigned __int8 v6;
  uint64_t v8;
  unsigned __int8 v9;
  unsigned __int8 v10;

  v1 = type metadata accessor for ModelState(0, *(_QWORD *)(*(_QWORD *)v0 + 80), *(_QWORD *)(*(_QWORD *)v0 + 96), *(_QWORD *)(*(_QWORD *)v0 + 104));
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1, v3);
  v5 = (char *)&v8 - v4;
  swift_retain();
  MutableObservableContainer.value.getter();
  swift_release();
  v6 = v5[*(int *)(v1 + 44)];
  (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
  v10 = v6;
  v9 = 1;
  return static ModelState.LoadedState.== infix(_:_:)(&v10, &v9);
}

uint64_t MutableObservableContainer.value.getter()
{
  return sub_227E602CC();
}

uint64_t type metadata accessor for ModelState(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_227D6837C(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ModelState);
}

BOOL static ModelState.LoadedState.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

void sub_227D5681C()
{
  swift_beginAccess();
  type metadata accessor for CRDTModelFileSyncInfo();
}

void sub_227D56868(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  MEMORY[0x22E2AA7D4](&protocol conformance descriptor for CRDTModelFileSyncInfo<A>, a1);
  v3 = sub_227E5FDE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 24))(v2, v1, v3);
  swift_endAccess();
  sub_227D568D0();
}

void type metadata accessor for CRDTModelFileSyncInfo()
{
  JUMPOUT(0x22E2AA750);
}

void sub_227D568D0()
{
  swift_beginAccess();
  type metadata accessor for CRDTModelFileSyncInfo();
}

uint64_t sub_227D56924(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  _QWORD *v4;
  uint64_t v5;
  void *v6;
  uint64_t result;
  _QWORD v8[18];

  MEMORY[0x22E2AA7D4](&protocol conformance descriptor for CRDTModelFileSyncInfo<A>, a1);
  sub_227E5FDE0();
  sub_227E5FD8C();
  swift_endAccess();
  v2 = *(_QWORD *)(v1 + 40);
  v3 = *(NSObject **)(v2 + 16);
  v4 = (_QWORD *)swift_allocObject();
  v4[2] = sub_227D6470C;
  v4[3] = v1;
  v4[4] = v2;
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = sub_227D64650;
  *(_QWORD *)(v5 + 24) = v4;
  v8[4] = sub_227D62A80;
  v8[5] = v5;
  v8[0] = MEMORY[0x24BDAC760];
  v8[1] = 1107296256;
  v8[2] = sub_227D62A60;
  v8[3] = &unk_24F08D628;
  v6 = _Block_copy(v8);
  swift_retain_n();
  swift_retain();
  swift_release();
  dispatch_sync(v3, v6);
  _Block_release(v6);
  LOBYTE(v3) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  result = swift_release();
  if ((v3 & 1) != 0)
    __break(1u);
  return result;
}

_QWORD *ReadingGoalsController.init(dataSource:)(_QWORD *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t (*)(), uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  double v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  _QWORD v20[3];
  uint64_t v21;
  double v22;

  v2 = v1;
  v4 = (uint64_t)(v1 + 2);
  sub_227D572C8((uint64_t)a1, (uint64_t)(v1 + 2));
  v5 = a1[3];
  v6 = a1[4];
  sub_227D572A4(a1, v5);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v6 + 8))(&v21, v5, v6);
  v7 = v21;
  v8 = v22;
  sub_227E60248();
  if (qword_253F39FF8[0] != -1)
    swift_once();
  v9 = (id)qword_253F39FF0;
  sub_227E5F564();

  sub_227D68330((uint64_t *)&unk_253F3AC40);
  swift_allocObject();
  v2[7] = sub_227D6F8C8(v7, 2, v8);
  v10 = swift_allocObject();
  swift_weakInit();
  swift_beginAccess();
  v11 = v2[5];
  v12 = v2[6];
  sub_227D695C8(v4, v11);
  v13 = *(void (**)(uint64_t (*)(), uint64_t, uint64_t, uint64_t))(v12 + 24);
  swift_retain();
  v13(sub_227DE888C, v10, v11, v12);
  swift_endAccess();
  swift_release();
  sub_227E602CC();
  v14 = v21;
  v15 = v22;
  v16 = a1[3];
  v17 = a1[4];
  sub_227D572A4(a1, v16);
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v17 + 8))(v20, v16, v17);
  if (v14 != v20[0] || v15 != *(double *)&v20[1])
  {
    sub_227E60248();
    v18 = (id)qword_253F39FF0;
    sub_227E5F564();

    sub_227DE7FE0();
  }
  sub_227D58120((uint64_t)a1);
  return v2;
}

uint64_t sub_227D56CF0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t result;
  double v6;
  char v7;

  v2 = sub_227D56D64(0);
  if ((v3 & 1) != 0)
    v4 = 3;
  else
    v4 = v2;
  result = sub_227D56D64(1);
  v6 = *(double *)&result;
  if ((v7 & 1) != 0)
    v6 = 300.0;
  *(_QWORD *)a1 = v4;
  *(double *)(a1 + 8) = v6;
  return result;
}

uint64_t sub_227D56D64(char a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  int v10;
  uint64_t v11;
  __int128 v13;
  __int128 v14;
  uint64_t v15;

  v3 = v1[5];
  v4 = v1[6];
  sub_227D572A4(v1 + 2, v3);
  if ((a1 & 1) != 0)
    v5 = 0xD000000000000016;
  else
    v5 = 0xD00000000000001ALL;
  if ((a1 & 1) != 0)
    v6 = 0x8000000227E6D940;
  else
    v6 = 0x8000000227E6D960;
  v7 = (*(uint64_t (**)(unint64_t, unint64_t, uint64_t, uint64_t))(v4 + 8))(v5, v6, v3, v4);
  swift_bridgeObjectRelease();
  if (v7)
  {
    if (*(_QWORD *)(v7 + 16) && (v8 = sub_227DD01C0(1818324839, 0xE400000000000000), (v9 & 1) != 0))
    {
      sub_227D635B0(*(_QWORD *)(v7 + 56) + 32 * v8, (uint64_t)&v13);
    }
    else
    {
      v13 = 0u;
      v14 = 0u;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    v13 = 0u;
    v14 = 0u;
  }
  sub_227D68330(qword_253F3B0B0);
  v10 = swift_dynamicCast();
  v11 = v15;
  if (!v10)
    return 0;
  return v11;
}

uint64_t ReadingGoalsDataStore.init(localStore:syncStore:)(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t DynamicType;
  uint64_t v7;
  id v8;
  uint64_t (*v9)(uint64_t, uint64_t);
  void *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  char v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  unint64_t v34;
  id v35;
  uint64_t v37;
  unint64_t v38;
  __int128 v39;
  unint64_t v40;
  __int128 v41;
  uint64_t v42;
  unint64_t v43;

  v3 = v2;
  *(_QWORD *)(v2 + 96) = 0;
  *(_QWORD *)(v2 + 104) = 0;
  sub_227D572C8((uint64_t)a1, v2 + 16);
  sub_227D572C8((uint64_t)a2, v2 + 56);
  sub_227D572A4(a2, a2[3]);
  DynamicType = swift_getDynamicType();
  v7 = a2[4];
  v8 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  v9 = *(uint64_t (**)(uint64_t, uint64_t))(v7 + 16);
  swift_retain();
  v10 = (void *)v9(DynamicType, v7);
  v11 = a2[3];
  v12 = sub_227D572A4(a2, v11);
  v13 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v12, v12);
  v15 = (char *)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v13 + 16))(v15);
  v16 = sub_227E6068C();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v11);
  objc_msgSend(v8, sel_addObserver_selector_name_object_, v3, sel_handleCloudChangeNotification_, v10, v16);

  v37 = v3;
  swift_release();

  swift_unknownObjectRelease();
  v17 = a2[3];
  v18 = a2[4];
  sub_227D572A4(a2, v17);
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v18 + 24))(v17, v18) & 1) != 0)
  {
    v19 = 0;
    v20 = 0;
    v40 = 0x8000000227E6D960;
    v38 = 0x8000000227E6D940;
    v39 = xmmword_227E6F040;
    v21 = MEMORY[0x24BEE0D00];
    do
    {
      v23 = v19;
      v24 = *((unsigned __int8 *)&unk_24F08BF40 + v20 + 32);
      v26 = a2[3];
      v25 = a2[4];
      sub_227D572A4(a2, v26);
      if (v24)
        v27 = 0xD000000000000016;
      else
        v27 = 0xD00000000000001ALL;
      if (v24)
        v28 = v38;
      else
        v28 = v40;
      v29 = (*(uint64_t (**)(unint64_t, unint64_t, uint64_t))(*(_QWORD *)(v25 + 8) + 8))(v27, v28, v26);
      swift_bridgeObjectRelease();
      v31 = a1[3];
      v30 = a1[4];
      sub_227D572A4(a1, v31);
      (*(void (**)(uint64_t, unint64_t, unint64_t, uint64_t, uint64_t))(v30 + 16))(v29, v27, v28, v31, v30);
      swift_bridgeObjectRelease();
      sub_227E60248();
      if (qword_253F39FF8[0] != -1)
        swift_once();
      v32 = (void *)qword_253F39FF0;
      sub_227D68330(&qword_253F3B090);
      v33 = swift_allocObject();
      *(_OWORD *)(v33 + 16) = v39;
      *(_QWORD *)(v33 + 56) = v21;
      v34 = sub_227D57A70();
      *(_QWORD *)(v33 + 64) = v34;
      *(_QWORD *)(v33 + 32) = v27;
      *(_QWORD *)(v33 + 40) = v28;
      if (v29)
      {
        v42 = sub_227D68330(&qword_255929CF0);
        v43 = sub_227E3E434();
        *(_QWORD *)&v41 = v29;
        sub_227DD3274(&v41, v33 + 72);
      }
      else
      {
        *(_QWORD *)(v33 + 96) = v21;
        *(_QWORD *)(v33 + 104) = v34;
        *(_QWORD *)(v33 + 72) = 7104878;
        *(_QWORD *)(v33 + 80) = 0xE300000000000000;
      }
      v22 = v32;
      sub_227E5F564();

      swift_bridgeObjectRelease();
      v19 = 1;
      v20 = 1u;
    }
    while ((v23 & 1) == 0);
  }
  else
  {
    sub_227E60230();
    if (qword_253F39FF8[0] != -1)
      swift_once();
    v35 = (id)qword_253F39FF0;
    sub_227E5F564();

  }
  sub_227D58120((uint64_t)a1);
  sub_227D58120((uint64_t)a2);
  return v37;
}

_QWORD *sub_227D572A4(_QWORD *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
    return (_QWORD *)(*result
                    + ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80)));
  return result;
}

uint64_t sub_227D572C8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t type metadata accessor for _CRDTModelContextStoreUtils()
{
  return objc_opt_self();
}

uint64_t sub_227D5732C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;

  v2 = sub_227D68330(&qword_253F391A0);
  MEMORY[0x24BDAC7A8](v2, v3);
  v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  v7 = 1;
  v8 = objc_msgSend(v6, sel_URLsForDirectory_inDomains_, 14, 1);

  v9 = sub_227E5F1B0();
  v10 = sub_227E600BC();

  v11 = *(_QWORD *)(v9 - 8);
  if (*(_QWORD *)(v10 + 16))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v11 + 16))(v5, v10 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80)), v9);
    v7 = 0;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v5, v7, 1, v9);
  swift_bridgeObjectRelease();
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48))(v5, 1, v9);
  if ((_DWORD)result != 1)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v11 + 32))(a1, v5, v9);
  __break(1u);
  return result;
}

void type metadata accessor for _CRDTModelContextStore()
{
  JUMPOUT(0x22E2AA750);
}

uint64_t sub_227D57490(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  void (*v31)(void);
  uint64_t v32;
  void *v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  char *v40;
  id v41;
  char *v42;
  void *v43;
  id v44;
  uint64_t v45;
  id v46;
  void *v47;
  void *v48;
  uint64_t v49;
  id v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v58;
  void (*v59)(char *, uint64_t);
  char *v60;
  void (*v61)(void);
  char *v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  __int128 v70;
  __int128 v71;
  uint64_t v72;
  uint64_t v73;

  v67 = a2;
  v73 = *MEMORY[0x24BDAC8D0];
  v7 = sub_227E5F0CC();
  v65 = *(_QWORD *)(v7 - 8);
  v66 = v7;
  MEMORY[0x24BDAC7A8](v7, v8);
  v64 = (char *)&v61 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_227D68330(&qword_253F391A0);
  v12 = MEMORY[0x24BDAC7A8](v10, v11);
  v63 = (char *)&v61 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12, v14);
  v16 = (char *)&v61 - v15;
  v17 = sub_227E5F1B0();
  v18 = *(_QWORD *)(v17 - 8);
  v20 = MEMORY[0x24BDAC7A8](v17, v19);
  v62 = (char *)&v61 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = MEMORY[0x24BDAC7A8](v20, v22);
  v25 = (char *)&v61 - v24;
  v27 = MEMORY[0x24BDAC7A8](v23, v26);
  v29 = (char *)&v61 - v28;
  MEMORY[0x24BDAC7A8](v27, v30);
  v31 = *(void (**)(void))(v18 + 16);
  v68 = (char *)&v61 - v32;
  v61 = v31;
  v31();
  *(_QWORD *)&v70 = a3;
  *((_QWORD *)&v70 + 1) = a4;
  swift_bridgeObjectRetain();
  sub_227E6002C();
  sub_227D57AB4();
  sub_227E6002C();
  swift_bridgeObjectRelease();
  v69 = v29;
  sub_227E5F18C();
  sub_227D580D8(v67, (uint64_t)v16);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) == 1)
  {
    swift_bridgeObjectRelease();
    sub_227D5809C((uint64_t)v16, &qword_253F391A0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v25, v16, v17);
    sub_227D57B20(a1);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v25, v17);
  }
  v67 = v18;
  sub_227E60248();
  if (qword_253F39F30 != -1)
    swift_once();
  v33 = (void *)qword_253F39F28;
  sub_227D68330(&qword_253F3B090);
  v34 = swift_allocObject();
  *(_OWORD *)(v34 + 16) = xmmword_227E6F1B0;
  v35 = v33;
  v36 = sub_227E5F150();
  v38 = v37;
  *(_QWORD *)(v34 + 56) = MEMORY[0x24BEE0D00];
  v39 = sub_227D57A70();
  *(_QWORD *)(v34 + 64) = v39;
  *(_QWORD *)(v34 + 32) = v36;
  *(_QWORD *)(v34 + 40) = v38;
  sub_227E5F564();

  swift_bridgeObjectRelease();
  v40 = v64;
  sub_227E5F0C0();
  sub_227E5F0B4();
  v41 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  v42 = v68;
  v43 = (void *)sub_227E5F174();
  *(_QWORD *)&v70 = 0;
  LODWORD(v34) = objc_msgSend(v41, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v43, 1, 0, &v70);

  if ((_DWORD)v34)
  {
    v44 = (id)v70;
    sub_227E5F168();
    sub_227E5FE4C();
    ((void (*)(char *, char *, uint64_t))v61)(v62, v69, v17);
    v72 = 0;
    v70 = 0u;
    v71 = 0u;
    v45 = v67;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v67 + 56))(v63, 1, 1, v17);
    v58 = sub_227E5FE40();
    (*(void (**)(char *, uint64_t))(v65 + 8))(v40, v66);
    v59 = *(void (**)(char *, uint64_t))(v45 + 8);
    v59(v69, v17);
    v60 = v42;
  }
  else
  {
    v46 = (id)v70;
    v47 = (void *)sub_227E5F144();

    swift_willThrow();
    sub_227E60230();
    v48 = (void *)qword_253F39F28;
    v49 = swift_allocObject();
    *(_OWORD *)(v49 + 16) = xmmword_227E6F040;
    v50 = v48;
    v51 = v69;
    v52 = sub_227E5F150();
    v53 = MEMORY[0x24BEE0D00];
    *(_QWORD *)(v49 + 56) = MEMORY[0x24BEE0D00];
    *(_QWORD *)(v49 + 64) = v39;
    *(_QWORD *)(v49 + 32) = v52;
    *(_QWORD *)(v49 + 40) = v54;
    swift_getErrorValue();
    v55 = sub_227E606D4();
    *(_QWORD *)(v49 + 96) = v53;
    *(_QWORD *)(v49 + 104) = v39;
    *(_QWORD *)(v49 + 72) = v55;
    *(_QWORD *)(v49 + 80) = v56;
    sub_227E5F564();

    swift_bridgeObjectRelease();
    sub_227E5FE4C();
    v72 = 0;
    v70 = 0u;
    v71 = 0u;
    v58 = MEMORY[0x22E2A9478](0, &v70);

    sub_227D5809C((uint64_t)&v70, (uint64_t *)&unk_255928A80);
    (*(void (**)(char *, uint64_t))(v65 + 8))(v40, v66);
    v59 = *(void (**)(char *, uint64_t))(v67 + 8);
    v59(v51, v17);
    v60 = v68;
  }
  v59(v60, v17);
  return v58;
}

unint64_t sub_227D57A70()
{
  unint64_t result;

  result = qword_253F3AFD0;
  if (!qword_253F3AFD0)
  {
    result = MEMORY[0x22E2AA7D4](MEMORY[0x24BDCFB50], MEMORY[0x24BEE0D00]);
    atomic_store(result, (unint64_t *)&qword_253F3AFD0);
  }
  return result;
}

uint64_t sub_227D57AB4()
{
  uint64_t v0;
  uint64_t v2;

  v2 = (*(uint64_t (**)(void))(*(_QWORD *)(v0 + 88) + 8))();
  swift_bridgeObjectRetain();
  sub_227E6002C();
  swift_bridgeObjectRelease();
  return v2;
}

void sub_227D57B20(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  id v14;
  void *v15;
  unsigned int v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  void *v28;
  id v29;
  void *v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  unsigned int v36;
  id v37;
  id v38;
  void *v39;
  void *v40;
  unsigned int v41;
  id v42;
  void *v43;
  uint64_t v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  id v49;
  void *v50;
  void *v51;
  uint64_t v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(char *, uint64_t);
  uint64_t v60;
  __int128 v61;
  uint64_t v62;
  id v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  id v68[2];

  v68[1] = *(id *)MEMORY[0x24BDAC8D0];
  v2 = sub_227E5F1B0();
  v3 = *(_QWORD *)(v2 - 8);
  v5 = MEMORY[0x24BDAC7A8](v2, v4);
  v7 = (char *)&v61 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v5, v8);
  v67 = (char *)&v61 - v10;
  MEMORY[0x24BDAC7A8](v9, v11);
  v13 = (char *)&v61 - v12;
  sub_227E5F18C();
  v14 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  sub_227E5F1A4();
  v15 = (void *)sub_227E5FF78();
  swift_bridgeObjectRelease();
  v16 = objc_msgSend(v14, sel_fileExistsAtPath_, v15);

  if (v16)
  {
    v62 = a1;
    v63 = v14;
    v64 = v7;
    v65 = v3;
    v66 = v2;
    sub_227E60248();
    if (qword_253F39F30 != -1)
      swift_once();
    v17 = (void *)qword_253F39F28;
    v18 = sub_227D68330(&qword_253F3B090);
    v19 = swift_allocObject();
    v61 = xmmword_227E6F1B0;
    *(_OWORD *)(v19 + 16) = xmmword_227E6F1B0;
    v20 = v17;
    v21 = sub_227E5F150();
    v23 = v22;
    *(_QWORD *)(v19 + 56) = MEMORY[0x24BEE0D00];
    v24 = sub_227D57A70();
    *(_QWORD *)(v19 + 64) = v24;
    *(_QWORD *)(v19 + 32) = v21;
    *(_QWORD *)(v19 + 40) = v23;
    sub_227E5F564();

    swift_bridgeObjectRelease();
    v25 = v65;
    v26 = v67;
    (*(void (**)(char *, uint64_t, uint64_t))(v65 + 16))(v67, v62, v66);
    v27 = v64;
    sub_227E5F18C();
    sub_227E5F1A4();
    v28 = (void *)sub_227E5FF78();
    swift_bridgeObjectRelease();
    v29 = v63;
    LODWORD(v23) = objc_msgSend(v63, sel_fileExistsAtPath_, v28);

    if ((_DWORD)v23)
    {
      sub_227E60230();
      v30 = (void *)qword_253F39F28;
      v31 = swift_allocObject();
      *(_OWORD *)(v31 + 16) = v61;
      v32 = v30;
      v33 = sub_227E5F150();
      *(_QWORD *)(v31 + 56) = MEMORY[0x24BEE0D00];
      *(_QWORD *)(v31 + 64) = v24;
      *(_QWORD *)(v31 + 32) = v33;
      *(_QWORD *)(v31 + 40) = v34;
      sub_227E5F564();

      v25 = v65;
      swift_bridgeObjectRelease();
    }
    else
    {
      v62 = v18;
      v35 = (void *)sub_227E5F174();
      v68[0] = 0;
      v36 = objc_msgSend(v29, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v35, 1, 0, v68);

      v37 = v68[0];
      if (!v36)
        goto LABEL_10;
      v38 = v68[0];
      v39 = (void *)sub_227E5F174();
      v40 = (void *)sub_227E5F174();
      v68[0] = 0;
      v41 = objc_msgSend(v29, sel_moveItemAtURL_toURL_error_, v39, v40, v68);

      v37 = v68[0];
      if (v41)
      {
        v42 = v68[0];
        sub_227E60248();
        v43 = (void *)qword_253F39F28;
        v44 = swift_allocObject();
        *(_OWORD *)(v44 + 16) = v61;
        v45 = v43;
        v46 = sub_227E5F150();
        *(_QWORD *)(v44 + 56) = MEMORY[0x24BEE0D00];
        *(_QWORD *)(v44 + 64) = v24;
        *(_QWORD *)(v44 + 32) = v46;
        *(_QWORD *)(v44 + 40) = v47;
        sub_227E5F564();

        v25 = v65;
        swift_bridgeObjectRelease();

      }
      else
      {
LABEL_10:
        v48 = v29;
        v49 = v37;
        v50 = (void *)sub_227E5F144();

        swift_willThrow();
        LODWORD(v61) = sub_227E60230();
        v51 = (void *)qword_253F39F28;
        v52 = swift_allocObject();
        *(_OWORD *)(v52 + 16) = xmmword_227E6F040;
        v53 = v51;
        v54 = sub_227E5F150();
        v55 = MEMORY[0x24BEE0D00];
        *(_QWORD *)(v52 + 56) = MEMORY[0x24BEE0D00];
        *(_QWORD *)(v52 + 64) = v24;
        *(_QWORD *)(v52 + 32) = v54;
        *(_QWORD *)(v52 + 40) = v56;
        swift_getErrorValue();
        v57 = sub_227E606D4();
        *(_QWORD *)(v52 + 96) = v55;
        *(_QWORD *)(v52 + 104) = v24;
        *(_QWORD *)(v52 + 72) = v57;
        *(_QWORD *)(v52 + 80) = v58;
        sub_227E5F564();

        swift_bridgeObjectRelease();
        v26 = v67;
      }
    }
    v59 = *(void (**)(char *, uint64_t))(v25 + 8);
    v60 = v66;
    v59(v27, v66);
    v59(v26, v60);
    v59(v13, v60);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v3 + 8))(v13, v2);

  }
}

uint64_t sub_227D5809C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = sub_227D68330(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_227D580D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_227D68330(&qword_253F391A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_227D58120(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + 24) - 8);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0)
    return swift_release();
  else
    return (*(uint64_t (**)(void))(v1 + 8))();
}

void sub_227D582B0(uint64_t a1, void *a2, void *a3)
{
  id v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;

  v9 = a3;
  v5 = a2;
  objc_opt_class();
  BUDynamicCast();
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  v7 = _Block_copy(*(const void **)(a1 + 32));
  v8 = v7;
  if (v7)
    (*((void (**)(void *, void *, id))v7 + 2))(v7, v6, v9);

}

void sub_227D58344(uint64_t a1, void *a2, void *a3)
{
  id v5;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (**v10)(void *, void *, id);
  void *v11;
  id v12;

  v12 = a2;
  v5 = a3;
  v10 = (void (**)(void *, void *, id))_Block_copy(*(const void **)(a1 + 32));
  if (v10)
  {
    objc_msgSend_value(v12, v6, v7, v8, v9);
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    v10[2](v10, v11, v5);

  }
}

void sub_227D585A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_227D589B8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_227D58CB4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

uint64_t sub_227D58DB0(uint64_t a1, uint64_t a2, void (*a3)(uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t), uint64_t, uint64_t))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t (*v70)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t (*v74)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t result;
  double *v79;
  double v80;
  unsigned __int8 *v81;
  _QWORD *v82;
  unsigned __int8 v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  void (*v90)(_QWORD, _QWORD);
  int v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t (*v95)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v96;
  uint64_t v97;
  void (*v98)(uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t), uint64_t, uint64_t);
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  char **v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t (*v110)(uint64_t, uint64_t, uint64_t, uint64_t);
  char *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t (*v117)(uint64_t, uint64_t, uint64_t);
  uint64_t v118;
  int v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t (*v137)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t (*v143)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t (*v149)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  int v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  void (*v162)(char *, uint64_t);
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  BOOL v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  char *v175;
  uint64_t (*v176)(uint64_t, uint64_t, uint64_t, uint64_t);
  void (*v177)(char *, _QWORD, uint64_t);
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  _QWORD *v182;
  uint64_t v183;
  void *v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  id v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  char *v194;
  uint64_t (*v195)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t (*v196)(uint64_t, uint64_t, uint64_t, uint64_t);
  char *v197;
  char *v198;
  uint64_t v199;
  uint64_t v200;
  char *v201;
  uint64_t v202;
  uint64_t v203;
  char *v204;
  uint64_t v205;
  uint64_t v206;
  _QWORD *v207;
  uint64_t v208;
  char *v209;
  uint64_t v210;
  uint64_t v211;
  char *v212;
  uint64_t v213;
  uint64_t v214;
  _QWORD *v215;
  void (*v216)(uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t), uint64_t, uint64_t);
  uint64_t v217;
  char *v218;
  uint64_t v219;
  uint64_t v220;
  char *v221;
  char *v222;
  uint64_t v223;
  uint64_t v224;
  void (*v225)(uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t), uint64_t, uint64_t);
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  void (*v229)(_QWORD);
  char **v230;
  uint64_t v231;
  _QWORD *v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  char v237[8];
  char v238;
  char v239;
  char v240;
  _BYTE v241[8];
  char v242[8];
  char v243;

  v225 = a3;
  v233 = a2;
  v4 = sub_227D68330(&qword_253F39840);
  MEMORY[0x24BDAC7A8](v4, v5);
  v212 = (char *)&v194 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v220 = sub_227D68330(&qword_253F398D0);
  MEMORY[0x24BDAC7A8](v220, v7);
  v209 = (char *)&v194 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_227D68330(&qword_253F391D0);
  v11 = MEMORY[0x24BDAC7A8](v9, v10);
  v201 = (char *)&v194 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11, v13);
  v204 = (char *)&v194 - v14;
  v219 = type metadata accessor for ReadingHistory.Streak(0);
  v215 = *(_QWORD **)(v219 - 8);
  v16 = MEMORY[0x24BDAC7A8](v219, v15);
  v207 = (char **)((char *)&v194 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v16, v18);
  v208 = (uint64_t)&v194 - v19;
  v223 = sub_227E5F2E8();
  v232 = *(_QWORD **)(v223 - 8);
  MEMORY[0x24BDAC7A8](v223, v20);
  v222 = (char *)&v194 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v214 = sub_227E5F300();
  v216 = *(void (**)(uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t), uint64_t, uint64_t))(v214 - 8);
  MEMORY[0x24BDAC7A8](v214, v22);
  v221 = (char *)&v194 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v231 = type metadata accessor for ReadingHistoryDataStore.State(0);
  v25 = MEMORY[0x24BDAC7A8](v231, v24);
  v211 = (uint64_t)&v194 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v25, v27);
  v218 = (char *)&v194 - v28;
  v29 = sub_227D68330((uint64_t *)&unk_253F39C20);
  v31 = MEMORY[0x24BDAC7A8](v29, v30);
  v202 = (uint64_t)&v194 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = MEMORY[0x24BDAC7A8](v31, v33);
  v205 = (uint64_t)&v194 - v35;
  v37 = MEMORY[0x24BDAC7A8](v34, v36);
  v206 = (uint64_t)&v194 - v38;
  v40 = MEMORY[0x24BDAC7A8](v37, v39);
  v213 = (uint64_t)&v194 - v41;
  MEMORY[0x24BDAC7A8](v40, v42);
  v226 = (uint64_t)&v194 - v43;
  v44 = sub_227D68330(&qword_253F39F90);
  MEMORY[0x24BDAC7A8](v44, v45);
  v230 = (char **)((char *)&v194 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0));
  v229 = (void (*)(_QWORD))type metadata accessor for ReadingHistoryDay(0);
  v228 = *((_QWORD *)v229 - 1);
  MEMORY[0x24BDAC7A8](v229, v47);
  v224 = (uint64_t)&v194 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  v203 = type metadata accessor for ReadingHistoryModel(0);
  v50 = MEMORY[0x24BDAC7A8](v203, v49);
  v210 = (uint64_t)&v194 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = MEMORY[0x24BDAC7A8](v50, v52);
  v217 = (uint64_t)&v194 - v54;
  v56 = MEMORY[0x24BDAC7A8](v53, v55);
  v227 = (uint64_t)&v194 - v57;
  MEMORY[0x24BDAC7A8](v56, v58);
  v60 = (char *)&v194 - v59;
  v61 = sub_227E5F27C();
  v62 = *(_QWORD *)(v61 - 8);
  v64 = MEMORY[0x24BDAC7A8](v61, v63);
  v66 = (char *)&v194 - ((v65 + 15) & 0xFFFFFFFFFFFFFFF0);
  v68 = MEMORY[0x24BDAC7A8](v64, v67);
  v70 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&v194 - v69);
  v72 = MEMORY[0x24BDAC7A8](v68, v71);
  v74 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&v194 - v73);
  MEMORY[0x24BDAC7A8](v72, v75);
  v77 = (char *)&v194 - v76;
  sub_227D5B0DC(a1, (uint64_t)v237, &qword_253F3A088);
  result = sub_227D5B0DC(a1, (uint64_t)v242, &qword_253F3A088);
  if (v243)
    v79 = (double *)&v240;
  else
    v79 = (double *)&v238;
  v80 = *v79;
  if (v243)
    v81 = v241;
  else
    v81 = (unsigned __int8 *)&v239;
  if (*(double *)(v233 + 136) != v80)
  {
    v197 = v77;
    v198 = v60;
    v82 = v232;
    v195 = v70;
    v194 = v66;
    v199 = v62;
    v196 = v74;
    v200 = v61;
    v83 = *v81;
    if (*v81 == 3)
    {
      v84 = v233;
      *(double *)(v233 + 136) = v80;
      v85 = v84 + OBJC_IVAR____TtC13BookDataStore23ReadingHistoryDataStore__state;
      swift_beginAccess();
      v86 = v199;
      v87 = v197;
      v88 = v200;
      (*(void (**)(char *, uint64_t, uint64_t))(v199 + 16))(v197, v85 + *(int *)(v231 + 24), v200);
      v89 = (uint64_t)v198;
      sub_227D5DFFC(v85, (uint64_t)v198, type metadata accessor for ReadingHistoryModel);
      v90 = (void (*)(_QWORD, _QWORD))v230;
      ReadingHistoryModel.readingHistoryDay(for:)((uint64_t)v230);
      if ((*(unsigned int (**)(void (*)(_QWORD, _QWORD), uint64_t, void (*)(_QWORD)))(v228 + 48))(v90, 1, v229) == 1)
      {
        sub_227D5809C((uint64_t)v90, &qword_253F39F90);
        sub_227D64BC4(v89, type metadata accessor for ReadingHistoryModel);
        result = (*(uint64_t (**)(char *, uint64_t))(v86 + 8))(v87, v88);
        *(_BYTE *)v225 = 1;
      }
      else
      {
        v121 = (uint64_t)v90;
        v122 = v224;
        sub_227D5E458(v121, v224, type metadata accessor for ReadingHistoryDay);
        sub_227E5FE58();
        sub_227D68330(&qword_253F3AEE0);
        sub_227E5F984();
        sub_227E5FE58();
        sub_227E5F984();
        sub_227D64BC4(v122, type metadata accessor for ReadingHistoryDay);
        sub_227D64BC4(v89, type metadata accessor for ReadingHistoryModel);
        return (*(uint64_t (**)(char *, uint64_t))(v86 + 8))(v87, v88);
      }
      return result;
    }
    result = sub_227D5B0DC(a1, (uint64_t)v237, &qword_253F3A088);
    if ((v241[1] & 1) == 0 || (v91 = v83) == 0)
    {
      *(double *)(v233 + 136) = v80;
      return result;
    }
    v92 = v200;
    v93 = v231;
    v94 = v227;
    v95 = v196;
    v96 = v199;
    if (v91 == 1)
    {
      v97 = v233 + OBJC_IVAR____TtC13BookDataStore23ReadingHistoryDataStore__state;
      swift_beginAccess();
      v98 = *(void (**)(uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t), uint64_t, uint64_t))(v96 + 16);
      v98(v95, v97 + *(int *)(v93 + 24), v92);
      sub_227D5DFFC(v97, v94, type metadata accessor for ReadingHistoryModel);
      if ((~*(_QWORD *)&v80 & 0x7FF0000000000000) != 0)
      {
        v96 = (uint64_t)v218;
        if (v80 > -9.22337204e18)
        {
          if (v80 < 9.22337204e18)
          {
            ReadingHistoryModel.setGoal(_:date:)((uint64_t)v80, (uint64_t)v95);
            type metadata accessor for ReadingHistoryDataStore(0);
            sub_227D5DFFC(v97, v96, type metadata accessor for ReadingHistoryDataStore.State);
            v99 = v226;
            sub_227DF1210(v96, v94, v95, v226);
            sub_227D64BC4(v96, type metadata accessor for ReadingHistoryDataStore.State);
            v100 = v217;
            sub_227DF322C(v94, v99, v217);
            sub_227D64BC4(v94, type metadata accessor for ReadingHistoryModel);
            sub_227D5E458(v100, v94, type metadata accessor for ReadingHistoryModel);
            v225 = v98;
            v98(v195, (uint64_t)v95, v92);
            sub_227E5F288();
            v96 = v82[13];
            v101 = v222;
            LODWORD(v224) = *MEMORY[0x24BDCF240];
            v98 = (void (*)(uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t), uint64_t, uint64_t))v223;
            ((void (*)(char *))v96)(v222);
            v102 = sub_227E5F2F4();
            v103 = (char **)v82[1];
            ((void (*)(char *, void (*)(uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t), uint64_t, uint64_t)))v103)(v101, v98);
            LODWORD(v218) = *MEMORY[0x24BDCF250];
            v229 = (void (*)(_QWORD))v96;
            ((void (*)(char *))v96)(v101);
            v104 = sub_227E5F2F4();
            v230 = v103;
            ((void (*)(char *, void (*)(uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t), uint64_t, uint64_t)))v103)(v101, v98);
            v105 = 100 * v102;
            if ((unsigned __int128)(v102 * (__int128)100) >> 64 == (100 * v102) >> 63)
            {
              v232 = (_QWORD *)v97;
              v106 = v105 + v104;
              v107 = v220;
              v82 = v215;
              v98 = v216;
              if (!__OFADD__(v105, v104))
              {
                v108 = v222;
                LODWORD(v217) = *MEMORY[0x24BDCF220];
                v109 = v223;
                v229(v222);
                v110 = v195;
                v111 = v221;
                v112 = sub_227E5F2F4();
                v228 = *(_QWORD *)(v199 + 8);
                ((void (*)(uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t), uint64_t))v228)(v110, v92);
                ((void (*)(char *, uint64_t))v230)(v108, v109);
                v113 = v214;
                v216 = (void (*)(uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t), uint64_t, uint64_t))*((_QWORD *)v98 + 1);
                ((void (*)(char *, uint64_t))v216)(v111, v214);
                v114 = v231;
                v115 = (uint64_t)v232;
                v116 = v213;
                sub_227D5DF48((uint64_t)v232 + *(int *)(v231 + 20), v213, (uint64_t *)&unk_253F39C20);
                v117 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v82[6];
                v118 = v219;
                v119 = v117(v116, 1, v219);
                v98 = v225;
                if (v119 == 1)
                {
                  v120 = v116;
LABEL_26:
                  sub_227D5809C(v120, (uint64_t *)&unk_253F39C20);
LABEL_27:
                  v96 = (uint64_t)v209;
LABEL_28:
                  v127 = v211;
                  sub_227D5DFFC(v227, v211, type metadata accessor for ReadingHistoryModel);
                  v128 = v231;
                  sub_227D5DF48(v226, v127 + *(int *)(v231 + 20), (uint64_t *)&unk_253F39C20);
                  v129 = (char *)v196;
                  v98((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(v127 + *(int *)(v128 + 24)), (uint64_t)v196, v200);
                  v130 = v127;
                  sub_227D5D2D4(v129, (char *)(v127 + *(int *)(v128 + 28)));
                  v131 = v233;
                  swift_retain();
                  sub_227E602CC();
                  swift_release();
                  v132 = sub_227D68330(&qword_253F3A1C0);
                  v133 = (uint64_t)v212;
                  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v132 - 8) + 56))(v212, 1, 2, v132);
                  sub_227DFD804(v130, v96, type metadata accessor for ReadingHistoryModel);
                  sub_227D5E414(v133, v96 + *(int *)(v107 + 48), &qword_253F39840);
                  sub_227DF48C4(v130, v96, 0xD000000000000015, 0x8000000227E6C680);
                  *(double *)(v131 + 136) = v80;
                  sub_227D572C8(v131 + 56, (uint64_t)&v234);
                  v134 = v235;
                  v135 = v236;
                  sub_227D572A4(&v234, v235);
                  v136 = v210;
                  sub_227D5DFFC((uint64_t)v232, v210, type metadata accessor for ReadingHistoryModel);
                  (*(void (**)(uint64_t, uint64_t, uint64_t))(v135 + 48))(v136, v134, v135);
                  sub_227D64BC4(v136, type metadata accessor for ReadingHistoryModel);
                  sub_227D58120((uint64_t)&v234);
                  sub_227D5809C(v96, &qword_253F398D0);
                  sub_227D64BC4(v130, type metadata accessor for ReadingHistoryDataStore.State);
                  sub_227D64BC4(v227, type metadata accessor for ReadingHistoryModel);
                  ((void (*)(uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t), uint64_t))v228)(v196, v200);
                  return sub_227D5809C(v226, (uint64_t *)&unk_253F39C20);
                }
                v123 = v116;
                v124 = v208;
                sub_227D5E458(v123, v208, type metadata accessor for ReadingHistory.Streak);
                v125 = v115 + *(int *)(v114 + 28);
                v126 = v206;
                sub_227D5DF48(v125, v206, (uint64_t *)&unk_253F39C20);
                if (v117(v126, 1, v118) == 1)
                {
                  sub_227D64BC4(v124, type metadata accessor for ReadingHistory.Streak);
                  v120 = v126;
                  goto LABEL_26;
                }
                v213 = v112;
                v215 = (_QWORD *)v106;
                sub_227D5E458(v126, (uint64_t)v207, type metadata accessor for ReadingHistory.Streak);
                v98(v195, v124, v200);
                v82 = v221;
                sub_227E5F288();
                v137 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v222;
                v138 = v223;
                v98 = (void (*)(uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t), uint64_t, uint64_t))v229;
                ((void (*)(char *, _QWORD, uint64_t))v229)(v222, v224, v223);
                v139 = sub_227E5F2F4();
                v96 = (uint64_t)v230;
                ((void (*)(uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t), uint64_t))v230)(v137, v138);
                v98(v137, v218, v138);
                v140 = sub_227E5F2F4();
                ((void (*)(uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t), uint64_t))v96)(v137, v138);
                v141 = 100 * v139;
                if ((unsigned __int128)(v139 * (__int128)100) >> 64 == (100 * v139) >> 63)
                {
                  v142 = v141 + v140;
                  v96 = (uint64_t)v215;
                  if (!__OFADD__(v141, v140))
                  {
                    ((void (*)(uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t), _QWORD, uint64_t))v229)(v137, v217, v138);
                    v143 = v195;
                    v144 = sub_227E5F2F4();
                    ((void (*)(uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t), uint64_t))v228)(v143, v200);
                    ((void (*)(uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t), uint64_t))v230)(v137, v138);
                    ((void (*)(_QWORD *, uint64_t))v216)(v82, v113);
                    if (v142 != v96 || v144 != v213)
                      goto LABEL_39;
                    v225(v195, (uint64_t)v207, v200);
                    sub_227E5F288();
                    v96 = (uint64_t)v229;
                    ((void (*)(uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t), _QWORD, uint64_t))v229)(v137, v224, v138);
                    v145 = sub_227E5F2F4();
                    v98 = (void (*)(uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t), uint64_t, uint64_t))v230;
                    ((void (*)(uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t), uint64_t))v230)(v137, v138);
                    ((void (*)(uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t), _QWORD, uint64_t))v96)(v137, v218, v138);
                    v146 = sub_227E5F2F4();
                    ((void (*)(uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t), uint64_t))v98)(v137, v138);
                    v147 = 100 * v145;
                    if ((unsigned __int128)(v145 * (__int128)100) >> 64 == (100 * v145) >> 63)
                    {
                      v148 = v147 + v146;
                      v96 = (uint64_t)v215;
                      if (!__OFADD__(v147, v146))
                      {
                        ((void (*)(uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t), _QWORD, uint64_t))v229)(v137, v217, v138);
                        v149 = v195;
                        v150 = sub_227E5F2F4();
                        ((void (*)(uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t), uint64_t))v228)(v149, v200);
                        ((void (*)(uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t), uint64_t))v230)(v137, v138);
                        ((void (*)(_QWORD *, uint64_t))v216)(v82, v113);
                        if (v148 == v96 && v150 == v213)
                        {
                          v151 = v226;
                          v152 = v219;
                          v153 = v117(v226, 1, v219);
                          v154 = v151;
                          v155 = v205;
                          sub_227D5DF48(v154, v205, (uint64_t *)&unk_253F39C20);
                          v98 = v225;
                          if (v153 == 1)
                          {
                            sub_227D5809C(v155, (uint64_t *)&unk_253F39C20);
                            v156 = (uint64_t)v207;
                            v157 = (uint64_t)v204;
                            v158 = v203;
                            goto LABEL_48;
                          }
                          v159 = v155;
                          v160 = v202;
                          sub_227D5DF48(v159, v202, (uint64_t *)&unk_253F39C20);
                          result = v117(v160, 1, v152);
                          if ((_DWORD)result == 1)
                          {
                            __break(1u);
                            return result;
                          }
                          v98(v195, v160, v200);
                          sub_227D64BC4(v160, type metadata accessor for ReadingHistory.Streak);
                          sub_227E5F288();
                          v98 = (void (*)(uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t), uint64_t, uint64_t))v229;
                          ((void (*)(uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t), _QWORD, uint64_t))v229)(v137, v224, v138);
                          v161 = sub_227E5F2F4();
                          v162 = (void (*)(char *, uint64_t))v230;
                          ((void (*)(uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t), uint64_t))v230)(v137, v138);
                          v98(v137, v218, v138);
                          v163 = sub_227E5F2F4();
                          v162((char *)v137, v138);
                          v164 = 100 * v161;
                          v156 = (uint64_t)v207;
                          if ((unsigned __int128)(v161 * (__int128)100) >> 64 == (100 * v161) >> 63)
                          {
                            v165 = v164 + v163;
                            if (!__OFADD__(v164, v163))
                            {
                              ((void (*)(uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t), _QWORD, uint64_t))v229)(v137, v217, v138);
                              v98 = (void (*)(uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t), uint64_t, uint64_t))v195;
                              v166 = sub_227E5F2F4();
                              ((void (*)(void (*)(uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t), uint64_t, uint64_t), uint64_t))v228)(v98, v200);
                              ((void (*)(uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t), uint64_t))v230)(v137, v138);
                              ((void (*)(_QWORD *, uint64_t))v216)(v82, v113);
                              sub_227D5809C(v205, (uint64_t *)&unk_253F39C20);
                              v167 = 100 * v165;
                              if ((unsigned __int128)(v165 * (__int128)100) >> 64 == (100 * v165) >> 63)
                              {
                                v168 = __OFADD__(v167, v166);
                                v169 = v167 + v166;
                                v107 = v220;
                                v157 = (uint64_t)v204;
                                if (!v168)
                                {
                                  v170 = 100 * v96;
                                  v98 = v225;
                                  if ((unsigned __int128)(v96 * (__int128)100) >> 64 == (100 * v96) >> 63)
                                  {
                                    v168 = __OFADD__(v170, v213);
                                    v171 = v170 + v213;
                                    v158 = v203;
                                    if (!v168)
                                    {
                                      if (v169 >= v171)
                                      {
                                        sub_227D64BC4(v156, type metadata accessor for ReadingHistory.Streak);
                                        sub_227D64BC4(v208, type metadata accessor for ReadingHistory.Streak);
                                        goto LABEL_27;
                                      }
LABEL_48:
                                      v219 = *(int *)(v219 + 20);
                                      v172 = v227 + *(int *)(v158 + 20);
                                      v234 = *(_QWORD *)(v156 + v219);
                                      v225 = (void (*)(uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t), uint64_t, uint64_t))sub_227D68330(&qword_253F3AF30);
                                      sub_227E5FCB4();
                                      v173 = v199;
                                      v174 = v200;
                                      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v199 + 48))(v157, 1, v200) == 1)
                                      {
                                        sub_227D64BC4(v156, type metadata accessor for ReadingHistory.Streak);
                                        sub_227D64BC4(v208, type metadata accessor for ReadingHistory.Streak);
                                        sub_227D5809C(v157, &qword_253F391D0);
LABEL_58:
                                        v96 = (uint64_t)v209;
                                        goto LABEL_59;
                                      }
                                      v206 = v172;
                                      v175 = v194;
                                      (*(void (**)(char *, uint64_t, uint64_t))(v173 + 32))(v194, v157, v174);
                                      v176 = v195;
                                      v98(v195, (uint64_t)v175, v174);
                                      sub_227E5F288();
                                      v177 = (void (*)(char *, _QWORD, uint64_t))v229;
                                      ((void (*)(uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t), _QWORD, uint64_t))v229)(v137, v224, v138);
                                      v178 = sub_227E5F2F4();
                                      v96 = (uint64_t)v230;
                                      ((void (*)(uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t), uint64_t))v230)(v137, v138);
                                      v177((char *)v137, v218, v138);
                                      v179 = sub_227E5F2F4();
                                      ((void (*)(uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t), uint64_t))v96)(v137, v138);
                                      v180 = 100 * v178;
                                      if ((unsigned __int128)(v178 * (__int128)100) >> 64 == (100 * v178) >> 63)
                                      {
                                        v181 = v180 + v179;
                                        v182 = v215;
                                        v96 = v213;
                                        if (!__OFADD__(v180, v179))
                                        {
                                          ((void (*)(uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t), _QWORD, uint64_t))v229)(v137, v217, v138);
                                          v183 = sub_227E5F2F4();
                                          ((void (*)(uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t), uint64_t))v228)(v176, v200);
                                          ((void (*)(uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t), uint64_t))v230)(v137, v138);
                                          ((void (*)(_QWORD *, uint64_t))v216)(v82, v113);
                                          if ((_QWORD *)v181 != v182 || v183 != v96)
                                          {
                                            ((void (*)(char *, uint64_t))v228)(v194, v200);
                                            sub_227D64BC4((uint64_t)v207, type metadata accessor for ReadingHistory.Streak);
                                            sub_227D64BC4(v208, type metadata accessor for ReadingHistory.Streak);
                                            goto LABEL_58;
                                          }
                                          sub_227E60248();
                                          v96 = (uint64_t)v209;
                                          v82 = v207;
                                          if (qword_253F39FF8[0] == -1)
                                          {
LABEL_55:
                                            v184 = (void *)qword_253F39FF0;
                                            sub_227D68330(&qword_253F3B090);
                                            v185 = swift_allocObject();
                                            v186 = *(_QWORD *)((char *)v82 + v219);
                                            v187 = MEMORY[0x24BEE1768];
                                            *(_OWORD *)(v185 + 16) = xmmword_227E6F040;
                                            v188 = MEMORY[0x24BEE17F0];
                                            *(_QWORD *)(v185 + 56) = v187;
                                            *(_QWORD *)(v185 + 64) = v188;
                                            *(_QWORD *)(v185 + 32) = v186;
                                            v189 = v184;
                                            v190 = sub_227E5F210();
                                            v192 = v191;
                                            *(_QWORD *)(v185 + 96) = MEMORY[0x24BEE0D00];
                                            *(_QWORD *)(v185 + 104) = sub_227D57A70();
                                            *(_QWORD *)(v185 + 72) = v190;
                                            *(_QWORD *)(v185 + 80) = v192;
                                            sub_227E5F564();

                                            swift_bridgeObjectRelease();
                                            v193 = v200;
                                            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v199 + 56))(v201, 1, 1, v200);
                                            v234 = v186;
                                            sub_227E5FCC0();
                                            ((void (*)(char *, uint64_t))v228)(v194, v193);
                                            sub_227D64BC4((uint64_t)v82, type metadata accessor for ReadingHistory.Streak);
                                            sub_227D64BC4(v208, type metadata accessor for ReadingHistory.Streak);
LABEL_59:
                                            v107 = v220;
                                            goto LABEL_28;
                                          }
LABEL_77:
                                          swift_once();
                                          goto LABEL_55;
                                        }
LABEL_76:
                                        __break(1u);
                                        goto LABEL_77;
                                      }
LABEL_75:
                                      __break(1u);
                                      goto LABEL_76;
                                    }
LABEL_74:
                                    __break(1u);
                                    goto LABEL_75;
                                  }
LABEL_73:
                                  __break(1u);
                                  goto LABEL_74;
                                }
LABEL_72:
                                __break(1u);
                                goto LABEL_73;
                              }
LABEL_71:
                              __break(1u);
                              goto LABEL_72;
                            }
LABEL_70:
                            __break(1u);
                            goto LABEL_71;
                          }
LABEL_69:
                          __break(1u);
                          goto LABEL_70;
                        }
LABEL_39:
                        sub_227D64BC4((uint64_t)v207, type metadata accessor for ReadingHistory.Streak);
                        sub_227D64BC4(v208, type metadata accessor for ReadingHistory.Streak);
                        v96 = (uint64_t)v209;
                        v107 = v220;
                        v98 = v225;
                        goto LABEL_28;
                      }
LABEL_68:
                      __break(1u);
                      goto LABEL_69;
                    }
LABEL_67:
                    __break(1u);
                    goto LABEL_68;
                  }
LABEL_66:
                  __break(1u);
                  goto LABEL_67;
                }
LABEL_65:
                __break(1u);
                goto LABEL_66;
              }
LABEL_64:
              __break(1u);
              goto LABEL_65;
            }
LABEL_63:
            __break(1u);
            goto LABEL_64;
          }
LABEL_62:
          __break(1u);
          goto LABEL_63;
        }
      }
      else
      {
        __break(1u);
      }
      __break(1u);
      goto LABEL_62;
    }
  }
  return result;
}

uint64_t sub_227D5A5A0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  NSObject *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t result;
  id v18;
  void *v19;
  __int128 aBlock;
  __int128 v21;
  uint64_t (*v22)();
  uint64_t v23;
  char v24;
  _BYTE v25[48];

  v2 = v1;
  v4 = sub_227D68330((uint64_t *)&unk_253F39190);
  MEMORY[0x24BDAC7A8](v4, v5);
  v7 = (char *)&aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_227E5F048();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8, v10);
  v12 = (char *)&aBlock - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_227D5B0DC(a1, (uint64_t)v25, &qword_253F3A088);
  v24 = 0;
  v13 = *(NSObject **)(v2 + 144);
  v14 = swift_allocObject();
  sub_227D5B0DC((uint64_t)v25, v14 + 16, &qword_253F3A088);
  *(_QWORD *)(v14 + 64) = v2;
  *(_QWORD *)(v14 + 72) = &v24;
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = sub_227D7174C;
  *(_QWORD *)(v15 + 24) = v14;
  v22 = sub_227D63158;
  v23 = v15;
  *(_QWORD *)&aBlock = MEMORY[0x24BDAC760];
  *((_QWORD *)&aBlock + 1) = 1107296256;
  *(_QWORD *)&v21 = sub_227D62A60;
  *((_QWORD *)&v21 + 1) = &unk_24F08F2B0;
  v16 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v13, v16);
  _Block_release(v16);
  LOBYTE(v2) = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((v2 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    if (v24 == 1)
    {
      sub_227DFE7D0();
      aBlock = 0u;
      v21 = 0u;
      sub_227E5F36C();
      sub_227D5809C((uint64_t)&aBlock, qword_253F3B0B0);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
      {
        sub_227D5809C((uint64_t)v7, (uint64_t *)&unk_253F39190);
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v12, v7, v8);
        v18 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
        v19 = (void *)sub_227E5F024();
        objc_msgSend(v18, sel_postNotification_, v19);

        (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
      }
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_227D5A858(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  v2 = swift_retain();
  v1(v2);
  return swift_release();
}

uint64_t sub_227D5A888()
{
  return sub_227D5A894();
}

uint64_t sub_227D5A894()
{
  uint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t ObjectType;
  void (*v4)(uint64_t, uint64_t, uint64_t);
  uint64_t v5;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    if (sub_227D5A940())
    {
      v2 = v1;
      ObjectType = swift_getObjectType();
      v4 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16);
      v5 = swift_retain();
      v4(v5, ObjectType, v2);
      swift_release_n();
      return swift_unknownObjectRelease();
    }
    else
    {
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_227D5A940()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 128);
  swift_beginAccess();
  return MEMORY[0x22E2AA96C](v1);
}

uint64_t sub_227D5A98C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ObservableContainer.Event(0, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), a4)- 8)+ 80);
  return sub_227D5A9F4(*(void (**)(uint64_t))(v4 + 32), *(_QWORD *)(v4 + 40), v4 + ((v5 + 48) & ~v5));
}

uint64_t sub_227D5A9F4(void (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;

  a1(a3);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    if (sub_227D5A940())
    {
      v5 = v4;
      ObjectType = swift_getObjectType();
      v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
      v8 = swift_retain();
      v7(v8, ObjectType, v5);
      swift_release_n();
      return swift_unknownObjectRelease();
    }
    else
    {
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_227D5AAB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ObservableContainer.Event(0, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), a4)- 8)+ 80);
  return (*(uint64_t (**)(uint64_t))(v4 + 32))(v4 + ((v5 + 48) & ~v5));
}

uint64_t sub_227D5AAF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  _QWORD *v5;
  uint64_t v6;
  void *v7;
  uint64_t result;
  _QWORD v9[6];

  v1 = v0;
  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v1 + 24);
  v4 = *(NSObject **)(v1 + 40);
  v5 = (_QWORD *)swift_allocObject();
  v5[2] = v1;
  v5[3] = v2;
  v5[4] = v3;
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = sub_227D63340;
  *(_QWORD *)(v6 + 24) = v5;
  v9[4] = sub_227DE0D94;
  v9[5] = v6;
  v9[0] = MEMORY[0x24BDAC760];
  v9[1] = 1107296256;
  v9[2] = sub_227D62A60;
  v9[3] = &unk_24F08D178;
  v7 = _Block_copy(v9);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v4, v7);
  _Block_release(v7);
  LOBYTE(v4) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((v4 & 1) != 0)
    __break(1u);
  return result;
}

uint64_t sub_227D5AC3C()
{
  uint64_t v0;
  void (*v1)(_BYTE *);
  uint64_t v2;
  _BYTE v4[48];

  v1 = *(void (**)(_BYTE *))(v0 + 16);
  v2 = *(_QWORD *)(v0 + 24);
  sub_227D5B0DC(v0 + 32, (uint64_t)v4, &qword_253F3A088);
  return sub_227D5AC94(v1, v2, (uint64_t)v4);
}

uint64_t sub_227D5AC94(void (*a1)(_BYTE *), uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjectType;
  void (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  _BYTE v11[48];

  sub_227D5B0DC(a3, (uint64_t)v11, &qword_253F3A088);
  a1(v11);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v5 = result;
    v6 = result + 64;
    swift_beginAccess();
    if (MEMORY[0x22E2AA96C](v6))
    {
      v7 = *(_QWORD *)(v5 + 72);
      ObjectType = swift_getObjectType();
      v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
      v10 = swift_retain();
      v9(v10, ObjectType, v7);
      swift_release_n();
      return swift_unknownObjectRelease();
    }
    else
    {
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_227D5AD84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t ObjectType;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD aBlock[6];
  _QWORD v34[5];
  __int16 v35;

  v31 = a2;
  v32 = a4;
  v30 = sub_227E5F978();
  v29 = *(_QWORD *)(v30 - 8);
  MEMORY[0x24BDAC7A8](v30, v6);
  v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = sub_227E5F948();
  v9 = *(_QWORD *)(v28 - 8);
  MEMORY[0x24BDAC7A8](v28, v10);
  v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  v13 = *(_QWORD *)(a1 + 40);
  v14 = *(_QWORD *)(a1 + 48);
  v15 = *(unsigned __int8 *)(a1 + 56);
  swift_beginAccess();
  if (MEMORY[0x22E2AA96C](a1 + 64))
  {
    v16 = *(_QWORD *)(a1 + 72);
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 8))(a1, ObjectType, v16);
    swift_unknownObjectRelease();
  }
  sub_227E5F93C();
  v18 = swift_allocObject();
  swift_weakInit();
  v34[0] = v13;
  v34[1] = v14;
  v34[3] = 0;
  v34[4] = 0;
  v34[2] = v15;
  v35 = 0;
  v19 = (_QWORD *)swift_allocObject();
  v20 = v31;
  v19[2] = v31;
  v19[3] = a3;
  sub_227D5B0DC((uint64_t)v34, (uint64_t)(v19 + 4), &qword_253F3A088);
  v19[10] = v18;
  aBlock[4] = sub_227D5AC3C;
  aBlock[5] = v19;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_227D5A858;
  aBlock[3] = &unk_24F08EDD8;
  v21 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  sub_227E5F960();
  MEMORY[0x22E2A991C](0, v8, v12, v21);
  _Block_release(v21);
  (*(void (**)(char *, uint64_t))(v29 + 8))(v8, v30);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v28);
  swift_release();
  swift_release();
  v22 = swift_allocObject();
  swift_weakInit();
  v23 = swift_allocObject();
  v24 = v32;
  swift_unknownObjectWeakInit();
  v25 = (_QWORD *)swift_allocObject();
  v25[2] = v22;
  v25[3] = v23;
  v25[4] = v24;
  v25[5] = v20;
  v25[6] = a3;
  swift_beginAccess();
  swift_retain();
  swift_retain();
  swift_retain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v34[0] = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 32) = 0x8000000000000000;
  sub_227D5B5E4((uint64_t)sub_227DFD720, (uint64_t)v25, v24, isUniquelyReferenced_nonNull_native);
  *(_QWORD *)(a1 + 32) = v34[0];
  swift_bridgeObjectRelease();
  swift_endAccess();
  swift_release();
  return swift_release();
}

uint64_t sub_227D5B0DC(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = sub_227D68330(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_227D5B120(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t (*a5)(void), void (*a6)(void))
{
  _QWORD *v6;
  _QWORD *v9;
  uint64_t v14;
  char v15;
  unint64_t v16;
  uint64_t v17;
  _BOOL8 v18;
  uint64_t result;
  char v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  char v24;
  _QWORD *v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;

  v9 = v6;
  v14 = *v6;
  v16 = sub_227D5B26C(a3);
  v17 = *(_QWORD *)(v14 + 16);
  v18 = (v15 & 1) == 0;
  result = v17 + v18;
  if (__OFADD__(v17, v18))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v20 = v15;
  v21 = *(_QWORD *)(v14 + 24);
  if (v21 >= result && (a4 & 1) != 0)
    goto LABEL_7;
  if (v21 >= result && (a4 & 1) == 0)
  {
    result = a5();
LABEL_7:
    v22 = (_QWORD *)*v9;
    if ((v20 & 1) != 0)
    {
LABEL_8:
      v23 = (_QWORD *)(v22[7] + 16 * v16);
      result = swift_release();
      *v23 = a1;
      v23[1] = a2;
      return result;
    }
LABEL_11:
    v22[(v16 >> 6) + 8] |= 1 << v16;
    *(_QWORD *)(v22[6] + 8 * v16) = a3;
    v25 = (_QWORD *)(v22[7] + 16 * v16);
    *v25 = a1;
    v25[1] = a2;
    v26 = v22[2];
    v27 = __OFADD__(v26, 1);
    v28 = v26 + 1;
    if (!v27)
    {
      v22[2] = v28;
      return result;
    }
    goto LABEL_14;
  }
  a6();
  result = sub_227D5B26C(a3);
  if ((v20 & 1) == (v24 & 1))
  {
    v16 = result;
    v22 = (_QWORD *)*v9;
    if ((v20 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_227E606B0();
  __break(1u);
  return result;
}

unint64_t sub_227D5B26C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_227E60710();
  return sub_227D5B29C(a1, v2);
}

unint64_t sub_227D5B29C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (*(_QWORD *)(v7 + 8 * result) != a1)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (*(_QWORD *)(v7 + 8 * result) == a1)
          break;
      }
    }
  }
  return result;
}

uint64_t sub_227D5B338(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  int64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  __int128 v33;

  v4 = v3;
  v6 = *v3;
  sub_227D68330(a3);
  result = sub_227E60584();
  v8 = result;
  if (*(_QWORD *)(v6 + 16))
  {
    v9 = 0;
    v10 = (uint64_t *)(v6 + 64);
    v11 = 1 << *(_BYTE *)(v6 + 32);
    v30 = -1 << v11;
    if (v11 < 64)
      v12 = ~(-1 << v11);
    else
      v12 = -1;
    v13 = v12 & *(_QWORD *)(v6 + 64);
    v31 = 1 << *(_BYTE *)(v6 + 32);
    v32 = v4;
    v14 = (unint64_t)(v11 + 63) >> 6;
    v15 = result + 64;
    while (1)
    {
      if (v13)
      {
        v20 = __clz(__rbit64(v13));
        v13 &= v13 - 1;
        v21 = v20 | (v9 << 6);
      }
      else
      {
        v22 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        if (v22 >= v14)
          goto LABEL_33;
        v23 = v10[v22];
        ++v9;
        if (!v23)
        {
          v9 = v22 + 1;
          if (v22 + 1 >= v14)
            goto LABEL_33;
          v23 = v10[v9];
          if (!v23)
          {
            v24 = v22 + 2;
            if (v24 >= v14)
            {
LABEL_33:
              if ((a2 & 1) == 0)
              {
                result = swift_release();
                v4 = v32;
                goto LABEL_40;
              }
              if (v31 >= 64)
                bzero((void *)(v6 + 64), 8 * v14);
              else
                *v10 = v30;
              v4 = v32;
              *(_QWORD *)(v6 + 16) = 0;
              break;
            }
            v23 = v10[v24];
            if (!v23)
            {
              while (1)
              {
                v9 = v24 + 1;
                if (__OFADD__(v24, 1))
                  goto LABEL_42;
                if (v9 >= v14)
                  goto LABEL_33;
                v23 = v10[v9];
                ++v24;
                if (v23)
                  goto LABEL_30;
              }
            }
            v9 = v24;
          }
        }
LABEL_30:
        v13 = (v23 - 1) & v23;
        v21 = __clz(__rbit64(v23)) + (v9 << 6);
      }
      v29 = *(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v21);
      v33 = *(_OWORD *)(*(_QWORD *)(v6 + 56) + 16 * v21);
      if ((a2 & 1) == 0)
        swift_retain();
      result = sub_227E60710();
      v16 = -1 << *(_BYTE *)(v8 + 32);
      v17 = result & ~v16;
      v18 = v17 >> 6;
      if (((-1 << v17) & ~*(_QWORD *)(v15 + 8 * (v17 >> 6))) != 0)
      {
        v19 = __clz(__rbit64((-1 << v17) & ~*(_QWORD *)(v15 + 8 * (v17 >> 6)))) | v17 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v16) >> 6;
        do
        {
          if (++v18 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v27 = v18 == v26;
          if (v18 == v26)
            v18 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v15 + 8 * v18);
        }
        while (v28 == -1);
        v19 = __clz(__rbit64(~v28)) + (v18 << 6);
      }
      *(_QWORD *)(v15 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
      *(_QWORD *)(*(_QWORD *)(v8 + 48) + 8 * v19) = v29;
      *(_OWORD *)(*(_QWORD *)(v8 + 56) + 16 * v19) = v33;
      ++*(_QWORD *)(v8 + 16);
    }
  }
  result = swift_release();
LABEL_40:
  *v4 = v8;
  return result;
}

uint64_t sub_227D5B5E4(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_227D5B120(a1, a2, a3, a4, (uint64_t (*)(void))sub_227DD26FC, (void (*)(void))sub_227D5B5F8);
}

uint64_t sub_227D5B5F8(uint64_t a1, char a2)
{
  return sub_227D5B338(a1, a2, &qword_253F3B078);
}

uint64_t sub_227D5B604(uint64_t a1, char a2)
{
  return sub_227D5B338(a1, a2, &qword_253F3B070);
}

void sub_227D5B610()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(sub_227E5FDE0() - 8) + 80);
  sub_227D5B670(v0 + ((v1 + 56) & ~v1));
}

uint64_t sub_227D5B660(uint64_t result)
{
  if (result)
    return swift_release();
  return result;
}

void sub_227D5B670(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  void (*v8)(uint64_t);

  v2 = v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 176);
  if ((*(_BYTE *)(v1 + v4) & 1) == 0)
  {
    if (*(_QWORD *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 168)))
    {
      *(_BYTE *)(v1 + v4) = 1;
      if (MEMORY[0x22E2AA96C](v1 + 16))
      {
        sub_227D6AD84();
        swift_unknownObjectRelease();
      }
    }
    else
    {
      v5 = sub_227E5F570();
      v6 = sub_227E60230();
      if (os_log_type_enabled(v5, v6))
      {
        v7 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v7 = 0;
        _os_log_impl(&dword_227D4F000, v5, v6, "CRDTModelFileSyncTransport: got disconnected before load complete", v7, 2u);
        MEMORY[0x22E2AA8AC](v7, -1, -1);
      }

    }
  }
  v8 = *(void (**)(uint64_t))(v2 + *(_QWORD *)(*(_QWORD *)v2 + 144));
  if (v8)
  {
    swift_retain();
    v8(a1);
    sub_227D5B660((uint64_t)v8);
  }
}

uint64_t sub_227D5B79C(uint64_t a1)
{
  return sub_227D5B7AC(a1);
}

uint64_t sub_227D5B7AC(uint64_t a1)
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_227D5B808(a1);
    return swift_release();
  }
  return result;
}

uint64_t sub_227D5B808(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  _BYTE v9[16];
  uint64_t v10;
  uint64_t v11;

  v3 = sub_227E5F948();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3, v5);
  v7 = &v9[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_227E5F93C();
  v10 = v1;
  v11 = a1;
  sub_227E602C0();
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v7, v3);
}

uint64_t sub_227D5B8BC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(sub_227D68330(&qword_253F3A080) - 8) + 80);
  return sub_227D5B904(*(void (**)(uint64_t))(v0 + 16), *(_QWORD *)(v0 + 24), v0 + ((v1 + 32) & ~v1));
}

uint64_t sub_227D5B904(void (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;

  a1(a3);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v4 = result + *(_QWORD *)(*(_QWORD *)result + 128);
    swift_beginAccess();
    if (MEMORY[0x22E2AA96C](v4))
    {
      v5 = *(_QWORD *)(v4 + 8);
      ObjectType = swift_getObjectType();
      v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
      v8 = swift_retain();
      v7(v8, ObjectType, v5);
      swift_release_n();
      return swift_unknownObjectRelease();
    }
    else
    {
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_227D5B9E0()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t getEnumTagSinglePayload for ReadingHistory.State()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for ReadingHistory.State()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

__n128 ReadingHistory.DayEntry.day.getter@<Q0>(__n128 *a1@<X8>)
{
  __n128 *v1;
  unsigned __int8 v2;
  __n128 result;

  v2 = v1[2].n128_u8[0];
  result = v1[1];
  *a1 = result;
  a1[1].n128_u8[0] = v2;
  return result;
}

uint64_t sub_227D5C548(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  uint64_t v10;
  unint64_t v12;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0x7FFFFFFF)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(_QWORD *)(v4 + 64);
  if (v6 >= a2)
  {
    if (v5 < 0x7FFFFFFF)
    {
      v12 = *(_QWORD *)((a1 + v7 + 7) & 0xFFFFFFFFFFFFF8);
      if (v12 >= 0xFFFFFFFF)
        LODWORD(v12) = -1;
      return (v12 + 1);
    }
    else
    {
      return (*(uint64_t (**)(void))(v4 + 48))();
    }
  }
  else
  {
    if (((((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & 0xFFFFFFF8) != 0)
      v8 = 2;
    else
      v8 = a2 - v6 + 1;
    if (v8 >= 0x10000)
      v9 = 4;
    else
      v9 = 2;
    if (v8 < 0x100)
      v9 = 1;
    if (v8 >= 2)
      v10 = v9;
    else
      v10 = 0;
    return ((uint64_t (*)(void))((char *)&loc_227D5C5C4 + 4 * byte_227E6F470[v10]))();
  }
}

uint64_t sub_227D5C648(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_227D5C658(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_227D5C668(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_227D5C678(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_227D5C688(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_227D5C698(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_227D5C6A8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_227D5C6B8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_227D5C6C8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_227D5C6D8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_227D5C6E8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_227D5C6F8()
{
  return swift_release();
}

uint64_t sub_227D5C700()
{
  return swift_release();
}

uint64_t sub_227D5C708()
{
  return swift_release();
}

uint64_t sub_227D5C710()
{
  return swift_release();
}

uint64_t sub_227D5C718()
{
  return swift_release();
}

uint64_t sub_227D5C720()
{
  return swift_release();
}

uint64_t sub_227D5C728()
{
  return swift_release();
}

uint64_t sub_227D5C730()
{
  return swift_release();
}

uint64_t sub_227D5C738()
{
  return swift_release();
}

uint64_t sub_227D5C740()
{
  return swift_release();
}

uint64_t sub_227D5C748()
{
  return swift_release();
}

ValueMetadata *type metadata accessor for ReadingHistory.Day()
{
  return &type metadata for ReadingHistory.Day;
}

uint64_t sub_227D5CF70(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  uint64_t v10;
  int v11;
  unsigned int v12;
  int v13;
  unsigned int v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unsigned int v19;
  _BOOL8 v20;
  BOOL v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  int v28;
  unsigned int v29;
  int v30;
  int v31;
  uint64_t v32;
  unsigned int v33;
  uint64_t v34;
  uint64_t result;
  unsigned int v36;
  _BOOL8 v37;
  uint64_t v38;
  unint64_t v39;
  unsigned int v40;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned int *)(v6 + 84);
  if (v7 <= 1)
    v8 = 0;
  else
    v8 = v7 - 2;
  if (v7 <= v8)
    v9 = v8;
  else
    v9 = *(_DWORD *)(v6 + 84);
  v10 = *(_QWORD *)(sub_227E5F27C() - 8);
  v11 = *(_DWORD *)(v10 + 84);
  v12 = v11 - 1;
  if (!v11)
    v12 = 0;
  if (v12 <= 0x7FFFFFFE)
    v13 = 2147483646;
  else
    v13 = v12;
  v14 = v13 - 1;
  if (v9 <= v14)
    v15 = v14;
  else
    v15 = v9;
  v16 = *(_QWORD *)(v6 + 64);
  v17 = v16;
  if (v7 <= 1)
  {
    if (v16 <= 3)
    {
      v19 = (~(-1 << (8 * v16)) - v7 + 2) >> (8 * v16);
      if (v19 > 0xFFFE)
      {
        v18 = 4;
      }
      else
      {
        v20 = v19 != 0;
        v21 = v19 >= 0xFF;
        v18 = 2;
        if (!v21)
          v18 = v20;
      }
    }
    else
    {
      v18 = 1;
    }
    v17 = v18 + v16;
  }
  if (v11)
    v22 = *(_QWORD *)(v10 + 64);
  else
    v22 = *(_QWORD *)(v10 + 64) + 1;
  if (!a2)
    return 0;
  v23 = *(unsigned __int8 *)(v6 + 80);
  v24 = *(unsigned __int8 *)(v10 + 80);
  v25 = v24 | 7;
  if (a2 <= v15)
    goto LABEL_46;
  v26 = v22 + ((v24 + 32) & ~v24) + ((v17 + v25 + ((v16 + v23 + 1) & ~v23)) & ~v25);
  v27 = 8 * v26;
  if (v26 > 3)
    goto LABEL_30;
  v29 = ((a2 - v15 + ~(-1 << v27)) >> v27) + 1;
  if (HIWORD(v29))
  {
    v28 = *(_DWORD *)(a1 + v26);
    if (!v28)
      goto LABEL_46;
    goto LABEL_37;
  }
  if (v29 > 0xFF)
  {
    v28 = *(unsigned __int16 *)(a1 + v26);
    if (!*(_WORD *)(a1 + v26))
      goto LABEL_46;
    goto LABEL_37;
  }
  if (v29 >= 2)
  {
LABEL_30:
    v28 = *(unsigned __int8 *)(a1 + v26);
    if (!*(_BYTE *)(a1 + v26))
      goto LABEL_46;
LABEL_37:
    v30 = (v28 - 1) << v27;
    if (v26 > 3)
      v30 = 0;
    if ((_DWORD)v26)
    {
      if (v26 <= 3)
        v31 = v26;
      else
        v31 = 4;
      __asm { BR              X12 }
    }
    return v15 + v30 + 1;
  }
LABEL_46:
  if ((_DWORD)v7 == v15)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, v7, v5);
  v32 = (a1 + v16 + v23 + 1) & ~v23;
  if (v8 == v15)
  {
    if (!(_DWORD)v7)
      return 0;
    v33 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v32, v7, v5);
    v21 = v33 >= 2;
    result = v33 - 2;
    if ((_DWORD)result == 0 || !v21)
      return 0;
  }
  else
  {
    if (v7 <= 1)
    {
      if (v16 <= 3)
      {
        v36 = ((~(-1 << (8 * v16)) - v7 + 2) >> (8 * v16)) + 1;
        if (HIWORD(v36))
        {
          v34 = 4;
        }
        else
        {
          v37 = v36 > 1;
          v21 = v36 >= 0x100;
          v34 = 2;
          if (!v21)
            v34 = v37;
        }
      }
      else
      {
        v34 = 1;
      }
      v16 += v34;
    }
    v38 = (v25 + v32 + v16) & ~v25;
    if (v12 > 0x7FFFFFFE)
    {
      v40 = (*(uint64_t (**)(unint64_t))(v10 + 48))((v24 + ((v38 + 23) & 0xFFFFFFFFFFFFFFF8) + 16) & ~v24);
      LODWORD(v39) = v40 - 1;
    }
    else
    {
      v39 = *(_QWORD *)(v38 + 8);
      if (v39 >= 0xFFFFFFFF)
        LODWORD(v39) = -1;
      v40 = v39 + 1;
    }
    if (v40 < 2)
      LODWORD(v39) = 0;
    if (v39 >= 2)
      return (v39 - 1);
    else
      return 0;
  }
  return result;
}

uint64_t dispatch thunk of ObservableContainer.value.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 184))();
}

uint64_t ReadingHistory.Day.readingTime.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t sub_227D5D2D4@<X0>(char *a1@<X0>, char *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char v24;
  void (*v25)(char *, uint64_t);
  uint64_t v26;
  uint64_t (*v27)(uint64_t, uint64_t, uint64_t, uint64_t);
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v37)(char *, uint64_t, uint64_t);
  char *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  char *v45;
  uint64_t v46;

  v44 = a1;
  v45 = a2;
  v3 = sub_227D68330(&qword_253F391D0);
  MEMORY[0x24BDAC7A8](v3, v4);
  v43 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_227E5F27C();
  v41 = *(_QWORD *)(v6 - 8);
  v42 = v6;
  MEMORY[0x24BDAC7A8](v6, v7);
  v40 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_227D68330(&qword_253F3AF30);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9, v11);
  v13 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_227D68330((uint64_t *)&unk_253F3AEF8);
  v15 = *(_QWORD *)(v14 - 8);
  v17 = MEMORY[0x24BDAC7A8](v14, v16);
  v19 = (char *)&v40 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17, v20);
  v22 = (char *)&v40 - v21;
  v23 = v2 + *(int *)(type metadata accessor for ReadingHistoryModel(0) + 20);
  sub_227D515E4(&qword_253F3AF28, &qword_253F3AF30, MEMORY[0x24BE184B0]);
  sub_227E60164();
  sub_227E60188();
  sub_227D515E4(&qword_253F3AEF0, (uint64_t *)&unk_253F3AEF8, MEMORY[0x24BE18220]);
  v24 = sub_227E5FF6C();
  v25 = *(void (**)(char *, uint64_t))(v15 + 8);
  v25(v19, v14);
  v25(v22, v14);
  if ((v24 & 1) != 0)
  {
    v26 = type metadata accessor for ReadingHistory.Streak(0);
    v27 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56);
    v28 = v45;
  }
  else
  {
    v29 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 16))(v13, v23, v9);
    MEMORY[0x24BDAC7A8](v29, v30);
    *(&v40 - 2) = v44;
    v31 = sub_227E04930(0, (void (*)(uint64_t *__return_ptr, uint64_t *, char *))sub_227E1156C, (uint64_t)(&v40 - 4));
    (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
    v32 = v45;
    if (v31 >= 2)
    {
      v46 = v31;
      v33 = (uint64_t)v43;
      sub_227E5FCB4();
      v34 = v41;
      v35 = v42;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v41 + 48))(v33, 1, v42) != 1)
      {
        v37 = *(void (**)(char *, uint64_t, uint64_t))(v34 + 32);
        v38 = v40;
        v37(v40, v33, v35);
        v37(v32, (uint64_t)v38, v35);
        v39 = type metadata accessor for ReadingHistory.Streak(0);
        *(_QWORD *)&v32[*(int *)(v39 + 20)] = v31;
        return (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 56))(v32, 0, 1, v39);
      }
      sub_227D5809C(v33, &qword_253F391D0);
    }
    v26 = type metadata accessor for ReadingHistory.Streak(0);
    v27 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56);
    v28 = v32;
  }
  return v27((uint64_t)v28, 1, 1, v26);
}

uint64_t sub_227D5D624@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return ReadingHistoryDataStore.readingHistoryState(range:currentTime:)(a1, a2, a3, a4);
}

uint64_t ReadingHistoryDataStore.readingHistoryModelSnapshot(currentTime:)@<X0>(char *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  int v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  int v65;
  uint64_t v66;
  uint64_t v67;
  void (*v68)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v69;
  uint64_t v70;
  _BYTE *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  void (*v89)(uint64_t, uint64_t, uint64_t, uint64_t);
  _BYTE *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  int v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  char *v114;
  char *v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;

  v116 = a1;
  v106 = a2;
  v2 = type metadata accessor for ReadingHistoryModel(0);
  MEMORY[0x24BDAC7A8](v2, v3);
  v110 = (uint64_t)&v95 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v104 = type metadata accessor for ReadingHistory.ModelSnapshot(0);
  MEMORY[0x24BDAC7A8](v104, v5);
  v105 = (char *)&v95 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_227D68330(&qword_253F39A48);
  MEMORY[0x24BDAC7A8](v7, v8);
  v103 = (uint64_t)&v95 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_227D68330((uint64_t *)&unk_253F39C20);
  MEMORY[0x24BDAC7A8](v10, v11);
  v113 = (char *)&v95 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_227D68330(&qword_253F39F90);
  v15 = MEMORY[0x24BDAC7A8](v13, v14);
  v98 = (uint64_t)&v95 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15, v17);
  v19 = (char *)&v95 - v18;
  v20 = type metadata accessor for ReadingHistoryDay(0);
  v107 = *(_QWORD *)(v20 - 8);
  v22 = MEMORY[0x24BDAC7A8](v20, v21);
  v96 = (uint64_t)&v95 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v22, v24);
  v26 = (char *)&v95 - v25;
  v111 = type metadata accessor for ReadingHistory.ModelSnapshot.ModelValues(0);
  v101 = *(_QWORD *)(v111 - 8);
  v28 = MEMORY[0x24BDAC7A8](v111, v27);
  v99 = (uint64_t)&v95 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = MEMORY[0x24BDAC7A8](v28, v30);
  v33 = (char *)&v95 - v32;
  MEMORY[0x24BDAC7A8](v31, v34);
  v112 = (uint64_t)&v95 - v35;
  v36 = sub_227D68330(&qword_253F39840);
  v38 = MEMORY[0x24BDAC7A8](v36, v37);
  v102 = (uint64_t)&v95 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = MEMORY[0x24BDAC7A8](v38, v40);
  v109 = (uint64_t)&v95 - v42;
  MEMORY[0x24BDAC7A8](v41, v43);
  v45 = (char *)&v95 - v44;
  v46 = sub_227D68330(&qword_253F398D0);
  MEMORY[0x24BDAC7A8](v46, v47);
  v49 = (char *)&v95 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  sub_227E602CC();
  swift_release();
  v50 = *(int *)(v46 + 48);
  v100 = v49[*(int *)(v46 + 44)];
  v108 = &v49[v50];
  v114 = v45;
  sub_227D5DF48((uint64_t)&v49[v50], (uint64_t)v45, &qword_253F39840);
  v115 = v49;
  ReadingHistoryModel.readingHistoryDay(for:)((uint64_t)v19);
  v107 = *(_QWORD *)(v107 + 48);
  v51 = ((uint64_t (*)(char *, uint64_t, uint64_t))v107)(v19, 1, v20);
  v97 = v20;
  if (v51 == 1)
  {
    sub_227D5809C((uint64_t)v19, &qword_253F39F90);
    v52 = 0;
    v53 = 0;
    v54 = 2;
  }
  else
  {
    sub_227D5E458((uint64_t)v19, (uint64_t)v26, type metadata accessor for ReadingHistoryDay);
    v52 = sub_227E5FE58();
    sub_227D68330(&qword_253F3AEE0);
    sub_227E5F984();
    v53 = v118;
    v55 = sub_227E5FE58();
    sub_227E5F984();
    v54 = v55 >= v117;
    sub_227D64BC4((uint64_t)v26, type metadata accessor for ReadingHistoryDay);
  }
  v56 = v113;
  v57 = v116;
  sub_227D5D2D4(v116, v113);
  v58 = v111;
  v59 = (uint64_t)&v33[*(int *)(v111 + 20)];
  v60 = type metadata accessor for ReadingHistory.Streak(0);
  v61 = *(char **)(*(_QWORD *)(v60 - 8) + 56);
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v61)(v59, 1, 1, v60);
  *(_QWORD *)v33 = v52;
  *((_QWORD *)v33 + 1) = v53;
  v33[16] = v54;
  sub_227D5E414((uint64_t)v56, v59, (uint64_t *)&unk_253F39C20);
  v62 = v112;
  sub_227D5E458((uint64_t)v33, v112, type metadata accessor for ReadingHistory.ModelSnapshot.ModelValues);
  v63 = v109;
  sub_227D5DF48((uint64_t)v108, v109, &qword_253F39840);
  v64 = sub_227D68330(&qword_253F3A1C0);
  v65 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v64 - 8) + 48))(v63, 2, v64);
  v66 = (uint64_t)v114;
  if (v65)
  {
    v67 = v102;
    sub_227D5DF48((uint64_t)v114, v102, &qword_253F39840);
    sub_227D5DFFC(v62, (uint64_t)v33, type metadata accessor for ReadingHistory.ModelSnapshot.ModelValues);
    v68 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v101 + 56);
    v69 = v62;
    v70 = v103;
    v68(v103, 1, 1, v58);
    v72 = v104;
    v71 = v105;
    v73 = (uint64_t)&v105[*(int *)(v104 + 28)];
    v74 = v58;
    v75 = v69;
    v68(v73, 1, 1, v74);
    *v71 = v100;
    sub_227D5B0DC(v67, (uint64_t)&v71[*(int *)(v72 + 20)], &qword_253F39840);
    sub_227D5E458((uint64_t)v33, (uint64_t)&v71[*(int *)(v72 + 24)], type metadata accessor for ReadingHistory.ModelSnapshot.ModelValues);
    sub_227D5E414(v70, v73, &qword_253F39A48);
    sub_227D5E458((uint64_t)v71, v106, type metadata accessor for ReadingHistory.ModelSnapshot);
  }
  else
  {
    v108 = v61;
    sub_227D5E458(v63, v110, type metadata accessor for ReadingHistoryModel);
    v76 = v98;
    ReadingHistoryModel.readingHistoryDay(for:)(v98);
    if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v107)(v76, 1, v97) == 1)
    {
      sub_227D5809C(v76, &qword_253F39F90);
      v109 = 0;
      v77 = 0;
      v78 = 2;
      v79 = v113;
      v80 = v58;
    }
    else
    {
      v81 = v96;
      sub_227D5E458(v76, v96, type metadata accessor for ReadingHistoryDay);
      v109 = sub_227E5FE58();
      sub_227D68330(&qword_253F3AEE0);
      sub_227E5F984();
      v77 = v118;
      v82 = sub_227E5FE58();
      v80 = v111;
      v57 = v116;
      sub_227E5F984();
      v78 = v82 >= v117;
      v62 = v112;
      sub_227D64BC4(v81, type metadata accessor for ReadingHistoryDay);
      v79 = v113;
    }
    sub_227D5D2D4(v57, v79);
    v83 = (uint64_t)&v33[*(int *)(v80 + 20)];
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v108)(v83, 1, 1, v60);
    *(_QWORD *)v33 = v109;
    *((_QWORD *)v33 + 1) = v77;
    v33[16] = v78;
    sub_227D5E414((uint64_t)v79, v83, (uint64_t *)&unk_253F39C20);
    v84 = v99;
    sub_227D5E458((uint64_t)v33, v99, type metadata accessor for ReadingHistory.ModelSnapshot.ModelValues);
    v85 = v102;
    sub_227D5DF48((uint64_t)v114, v102, &qword_253F39840);
    sub_227D5DFFC(v62, (uint64_t)v33, type metadata accessor for ReadingHistory.ModelSnapshot.ModelValues);
    v86 = v62;
    v87 = v80;
    v88 = v103;
    sub_227D5DFFC(v84, v103, type metadata accessor for ReadingHistory.ModelSnapshot.ModelValues);
    v89 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v101 + 56);
    v89(v88, 0, 1, v87);
    v91 = v104;
    v90 = v105;
    v92 = (uint64_t)&v105[*(int *)(v104 + 28)];
    v93 = v87;
    v75 = v86;
    v89(v92, 1, 1, v93);
    *v90 = v100;
    sub_227D5B0DC(v85, (uint64_t)&v90[*(int *)(v91 + 20)], &qword_253F39840);
    sub_227D5E458((uint64_t)v33, (uint64_t)&v90[*(int *)(v91 + 24)], type metadata accessor for ReadingHistory.ModelSnapshot.ModelValues);
    sub_227D5E414(v88, v92, &qword_253F39A48);
    sub_227D5E458((uint64_t)v90, v106, type metadata accessor for ReadingHistory.ModelSnapshot);
    sub_227D64BC4(v84, type metadata accessor for ReadingHistory.ModelSnapshot.ModelValues);
    v66 = (uint64_t)v114;
    sub_227D64BC4(v110, type metadata accessor for ReadingHistoryModel);
  }
  sub_227D64BC4(v75, type metadata accessor for ReadingHistory.ModelSnapshot.ModelValues);
  sub_227D5809C(v66, &qword_253F39840);
  return sub_227D5809C((uint64_t)v115, &qword_253F398D0);
}

uint64_t _s13ModelSnapshotV11ModelValuesVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_227D5DF00@<X0>(uint64_t (*a1)(_QWORD)@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;

  v6 = a1(0);
  return sub_227D5DF48(v3 + *(int *)(v6 + 20), a3, a2);
}

uint64_t sub_227D5DF48(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = sub_227D68330(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t ReadingHistory.ModelSnapshot.modelValues.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for ReadingHistory.ModelSnapshot(0);
  return sub_227D5DFFC(v1 + *(int *)(v3 + 24), a1, type metadata accessor for ReadingHistory.ModelSnapshot.ModelValues);
}

uint64_t sub_227D5DFC8(uint64_t a1, uint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_227D5DFFC(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t type metadata accessor for ReadingHistory.ModelSnapshot(uint64_t a1)
{
  return sub_227D5DFC8(a1, qword_253F39AB0);
}

uint64_t ReadingHistoryDataStore.readingHistoryState(range:currentTime:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  void (*v31)(char *, uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  void (*v36)(uint64_t, uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  unsigned __int8 v63;

  v51 = a2;
  v52 = a3;
  v50 = a1;
  v58 = a4;
  v57 = type metadata accessor for ReadingHistory.State(0);
  MEMORY[0x24BDAC7A8](v57, v4);
  v55 = (char *)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = sub_227D68330((uint64_t *)&unk_253F39C20);
  v7 = MEMORY[0x24BDAC7A8](v53, v6);
  v56 = (uint64_t)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7, v9);
  v49 = (char *)&v45 - v10;
  v11 = sub_227E5F300();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11, v13);
  v15 = (char *)&v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_227E5F27C();
  v47 = *(_QWORD *)(v16 - 8);
  v17 = v47;
  MEMORY[0x24BDAC7A8](v16, v18);
  v20 = (char *)&v45 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_227D68330(&qword_253F391A8);
  v23 = MEMORY[0x24BDAC7A8](v21, v22);
  v25 = (char *)&v45 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = MEMORY[0x24BDAC7A8](v23, v26);
  v29 = (char *)&v45 - v28;
  v46 = (char *)&v45 + *(int *)(v27 + 48) - v28;
  v30 = v46;
  v31 = *(void (**)(char *, uint64_t, uint64_t))(v17 + 16);
  v31((char *)&v45 - v28, v50, v16);
  v31(v30, v51, v16);
  sub_227E5F288();
  v48 = v20;
  sub_227E5F294();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
  v32 = v54;
  sub_227E602CC();
  v52 = v61;
  v33 = (uint64_t)v49;
  sub_227E602CC();
  v59 = v32;
  v60 = v20;
  sub_227E602CC();
  v53 = v61;
  v51 = v62;
  LODWORD(v50) = v63;
  v34 = (uint64_t)&v25[*(int *)(v21 + 48)];
  v31(v25, (uint64_t)v29, v16);
  v31((char *)v34, (uint64_t)v46, v16);
  v35 = ReadingHistoryDataStore.readingHistory(range:)((uint64_t)v25, v34);
  v36 = *(void (**)(uint64_t, uint64_t))(v47 + 8);
  v36(v34, v16);
  v36((uint64_t)v25, v16);
  v37 = v56;
  sub_227D5DF48(v33, v56, (uint64_t *)&unk_253F39C20);
  v38 = v57;
  v39 = (uint64_t *)v55;
  v40 = (uint64_t)&v55[*(int *)(v57 + 20)];
  v41 = type metadata accessor for ReadingHistory.Streak(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 56))(v40, 1, 1, v41);
  *v39 = v52;
  sub_227D5E414(v37, v40, (uint64_t *)&unk_253F39C20);
  v42 = (char *)v39 + *(int *)(v38 + 24);
  v43 = v51;
  *(_QWORD *)v42 = v53;
  *((_QWORD *)v42 + 1) = v43;
  v42[16] = v50;
  *(uint64_t *)((char *)v39 + *(int *)(v38 + 28)) = (uint64_t)v35;
  sub_227D5E458((uint64_t)v39, v58, type metadata accessor for ReadingHistory.State);
  sub_227D5809C(v33, (uint64_t *)&unk_253F39C20);
  v36((uint64_t)v48, v16);
  return sub_227D5809C((uint64_t)v29, &qword_253F391A8);
}

uint64_t sub_227D5E414(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = sub_227D68330(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

uint64_t sub_227D5E458(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t storeEnumTagSinglePayload for ReadingHistory.Streak()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t type metadata accessor for ReadingHistory.ModelSnapshot.ModelValues(uint64_t a1)
{
  return sub_227D5DFC8(a1, qword_253F39A10);
}

_QWORD *ReadingHistoryDataStore.readingHistory(range:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  void (*v25)(char *, uint64_t, uint64_t);
  id v26;
  void *v27;
  void (*v28)(char *, uint64_t);
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, uint64_t);
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  void *v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  _QWORD *v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v52[2];
  uint64_t v53;
  uint64_t v54;
  void (*v55)(char *, uint64_t);
  id v56;
  char *v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char v65;

  v3 = v2;
  v61 = a2;
  v5 = sub_227E5F27C();
  v6 = *(_QWORD *)(v5 - 8);
  v8 = MEMORY[0x24BDAC7A8](v5, v7);
  v59 = (char *)v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v8, v10);
  v62 = (char *)v52 - v12;
  MEMORY[0x24BDAC7A8](v11, v13);
  v15 = (char *)v52 - v14;
  v16 = sub_227E5F300();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16, v18);
  v20 = (char *)v52 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_227D68330(&qword_253F391A8);
  MEMORY[0x24BDAC7A8](v21, v22);
  v24 = (char *)v52 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = v6;
  v25 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  v25(v24, a1, v5);
  v25(&v24[*(int *)(v21 + 48)], v61, v5);
  v26 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1500]), sel_init);
  sub_227E5F288();
  v27 = (void *)sub_227E5F2AC();
  v28 = *(void (**)(char *, uint64_t))(v17 + 8);
  v28(v20, v16);
  objc_msgSend(v26, sel_setCalendar_, v27);

  v29 = (void *)sub_227E5FF78();
  objc_msgSend(v26, sel_setDateFormat_, v29);

  sub_227E5F288();
  v52[0] = (uint64_t)v24;
  sub_227E5F294();
  v28(v20, v16);
  sub_227E5F288();
  sub_227E5F294();
  v57 = v20;
  v58 = v16;
  v55 = v28;
  v28(v20, v16);
  v30 = sub_227D51624((unint64_t *)&unk_253F391B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE948]);
  v61 = v5;
  v54 = v30;
  v31 = sub_227E5FF60();
  if ((v31 & 1) != 0)
  {

    v33 = *(void (**)(char *, uint64_t))(v60 + 8);
    v34 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  else
  {
    v56 = v26;
    v52[1] = *(_QWORD *)(v3 + 144);
    v34 = (_QWORD *)MEMORY[0x24BEE4AF8];
    v53 = v3;
    do
    {
      MEMORY[0x24BDAC7A8](v31, v32);
      v52[-2] = v3;
      v52[-1] = (uint64_t)v15;
      sub_227E602CC();
      v36 = v63;
      v35 = v64;
      v37 = v65;
      v38 = (void *)sub_227E5F234();
      v39 = objc_msgSend(v56, sel_stringFromDate_, v38);

      v40 = sub_227E5FF84();
      v42 = v41;

      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v34 = sub_227D5E928(0, v34[2] + 1, 1, v34);
      v44 = v34[2];
      v43 = v34[3];
      if (v44 >= v43 >> 1)
        v34 = sub_227D5E928((_QWORD *)(v43 > 1), v44 + 1, 1, v34);
      v34[2] = v44 + 1;
      v45 = &v34[5 * v44];
      v45[4] = v40;
      v45[5] = v42;
      v45[6] = v36;
      v45[7] = v35;
      *((_BYTE *)v45 + 64) = v37;
      v46 = v57;
      sub_227E5F288();
      v47 = v59;
      sub_227E5F204();
      v55(v46, v58);
      v48 = v60;
      v49 = v61;
      v33 = *(void (**)(char *, uint64_t))(v60 + 8);
      v33(v15, v61);
      (*(void (**)(char *, char *, uint64_t))(v48 + 32))(v15, v47, v49);
      v31 = sub_227E5FF60();
      v3 = v53;
    }
    while ((v31 & 1) == 0);

  }
  v50 = v61;
  v33(v62, v61);
  v33(v15, v50);
  sub_227D5809C(v52[0], &qword_253F391A8);
  return v34;
}

_QWORD *sub_227D5E928(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_227D68330(&qword_253F3B080);
      v10 = (_QWORD *)swift_allocObject();
      v11 = j__malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[5 * v8 + 4])
          memmove(v12, a4 + 4, 40 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v12 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_227D5EA48(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_227D5EA48(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 40 * a1 + 32;
    v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_227E605A8();
  __break(1u);
  return result;
}

uint64_t destroy for ReadingHistory.DayEntry()
{
  return swift_bridgeObjectRelease();
}

void sub_227D5EB44(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  unsigned int v10;
  uint64_t v11;
  int v12;
  unsigned int v13;
  int v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unsigned int v19;
  _BOOL8 v20;
  BOOL v21;
  uint64_t v22;
  uint64_t v23;
  size_t v24;
  unsigned int v25;
  int v26;
  unsigned int v27;
  int v28;

  v7 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v8 = *(_DWORD *)(v7 + 84);
  if (v8 <= 1)
    v9 = 0;
  else
    v9 = v8 - 2;
  if (v8 <= v9)
    v10 = v9;
  else
    v10 = *(_DWORD *)(v7 + 84);
  v11 = *(_QWORD *)(sub_227E5F27C() - 8);
  v12 = *(_DWORD *)(v11 + 84);
  if (v12)
    v13 = v12 - 1;
  else
    v13 = 0;
  if (v13 <= 0x7FFFFFFE)
    v14 = 2147483646;
  else
    v14 = v13;
  if (v10 <= v14 - 1)
    v15 = v14 - 1;
  else
    v15 = v10;
  v16 = *(_QWORD *)(v7 + 64);
  v17 = v16;
  if (v8 <= 1)
  {
    if (v16 <= 3)
    {
      v19 = (~(-1 << (8 * v16)) - v8 + 2) >> (8 * v16);
      if (v19 > 0xFFFE)
      {
        v18 = 4;
      }
      else
      {
        v20 = v19 != 0;
        v21 = v19 >= 0xFF;
        v18 = 2;
        if (!v21)
          v18 = v20;
      }
    }
    else
    {
      v18 = 1;
    }
    v17 = v18 + v16;
  }
  v23 = *(_QWORD *)(v11 + 64);
  if (!v12)
    ++v23;
  v22 = *(unsigned __int8 *)(v11 + 80);
  v24 = ((v17
        + (v22 | 7)
        + ((v16 + *(unsigned __int8 *)(v7 + 80) + 1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))) & ~(v22 | 7))
      + ((v22 + 32) & ~v22)
      + v23;
  if (a3 <= v15)
  {
    v25 = 0;
  }
  else if (v24 <= 3)
  {
    v27 = ((a3 - v15 + ~(-1 << (8 * v24))) >> (8 * v24)) + 1;
    if (HIWORD(v27))
    {
      v25 = 4u;
    }
    else if (v27 >= 0x100)
    {
      v25 = 2;
    }
    else
    {
      v25 = v27 > 1;
    }
  }
  else
  {
    v25 = 1u;
  }
  if (v15 < a2)
  {
    v26 = ~v15 + a2;
    if (v24 < 4)
    {
      if ((_DWORD)v24)
      {
        v28 = v26 & ~(-1 << (8 * v24));
        bzero(a1, v24);
        if ((_DWORD)v24 == 3)
        {
          *(_WORD *)a1 = v28;
          a1[2] = BYTE2(v28);
        }
        else if ((_DWORD)v24 == 2)
        {
          *(_WORD *)a1 = v28;
        }
        else
        {
          *a1 = v28;
        }
      }
    }
    else
    {
      bzero(a1, v24);
      *(_DWORD *)a1 = v26;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X24 }
}

uint64_t initializeWithCopy for ReadingHistory.DayEntry(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t ReadingHistory.Day.isStreakDay.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t ReadingHistory.DayEntry.date.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t storeEnumTagSinglePayload for ReadingHistory.Day(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 255;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = a2 + 1;
  }
  return result;
}

uint64_t ReadingHistory.Day.goal.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

void sub_227D5F16C(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  unsigned int v7;
  int v8;
  int v9;
  unsigned int v10;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  if (v6 >= a3)
  {
    v9 = 0;
    if (a2 <= v6)
      goto LABEL_17;
  }
  else
  {
    if (((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) == 0xFFFFFFF8)
      v7 = a3 - v6 + 1;
    else
      v7 = 2;
    if (v7 >= 0x10000)
      v8 = 4;
    else
      v8 = 2;
    if (v7 < 0x100)
      v8 = 1;
    if (v7 >= 2)
      v9 = v8;
    else
      v9 = 0;
    if (a2 <= v6)
LABEL_17:
      __asm { BR              X12 }
  }
  if (((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) != 0xFFFFFFF8)
  {
    v10 = ~v6 + a2;
    bzero(a1, ((*(_QWORD *)(v5 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8);
    *a1 = v10;
  }
  __asm { BR              X10 }
}

void sub_227D5F260()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
  JUMPOUT(0x227D5F2D4);
}

void sub_227D5F268(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x227D5F270);
  JUMPOUT(0x227D5F2D4);
}

void sub_227D5F2B0()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x227D5F2D4);
}

void sub_227D5F2B8()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x227D5F2D4);
}

uint64_t sub_227D5F2C0(uint64_t a1, int a2, unsigned int a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_WORD *)(v5 + v6) = 0;
  if (!a2)
    JUMPOUT(0x227D5F2D4);
  if (a3 < 0x7FFFFFFF)
  {
    if ((a2 & 0x80000000) == 0)
      JUMPOUT(0x227D5F2D0);
    JUMPOUT(0x227D5F2CCLL);
  }
  return (*(uint64_t (**)(uint64_t))(v4 + 56))(v5);
}

uint64_t sub_227D5F2EC(uint64_t a1)
{
  sub_227D5F300(a1);
  return swift_bridgeObjectRetain();
}

uint64_t sub_227D5F300(uint64_t a1)
{
  uint64_t v1;

  return *(_QWORD *)(v1 + *(int *)(a1 + 52));
}

uint64_t storeEnumTagSinglePayload for ReadingHistoryModel()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t _s13BookDataStore14ReadingHistoryO5StateV2eeoiySbAE_AEtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unsigned int (*v31)(uint64_t, uint64_t, uint64_t);
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;

  v4 = type metadata accessor for ReadingHistory.Streak(0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v6);
  v8 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_227D68330(&qword_253F39C38);
  MEMORY[0x24BDAC7A8](v9, v10);
  v12 = (char *)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_227D68330((uint64_t *)&unk_253F39C20);
  v15 = MEMORY[0x24BDAC7A8](v13, v14);
  v17 = (char *)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x24BDAC7A8](v15, v18);
  v21 = (char *)&v43 - v20;
  MEMORY[0x24BDAC7A8](v19, v22);
  v24 = (char *)&v43 - v23;
  if (*a1 != *a2)
    goto LABEL_13;
  v25 = type metadata accessor for ReadingHistory.State(0);
  v26 = a1;
  v27 = a2;
  v28 = v25;
  v29 = *(int *)(v25 + 20);
  v43 = v26;
  sub_227D5F6A4((uint64_t)v26 + v29, (uint64_t)v24);
  v44 = v28;
  sub_227D5F6A4((uint64_t)v27 + *(int *)(v28 + 20), (uint64_t)v21);
  v30 = (uint64_t)&v12[*(int *)(v9 + 48)];
  sub_227D5F6A4((uint64_t)v24, (uint64_t)v12);
  sub_227D5F6A4((uint64_t)v21, v30);
  v31 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v31((uint64_t)v12, 1, v4) != 1)
  {
    sub_227D5F6A4((uint64_t)v12, (uint64_t)v17);
    if (v31(v30, 1, v4) != 1)
    {
      sub_227DEF1AC(v30, (uint64_t)v8);
      if ((sub_227E5F258() & 1) != 0)
      {
        v40 = *(int *)(v4 + 20);
        v41 = *(_QWORD *)&v17[v40];
        v42 = *(_QWORD *)&v8[v40];
        sub_227D64BC4((uint64_t)v8, type metadata accessor for ReadingHistory.Streak);
        sub_227D5809C((uint64_t)v21, (uint64_t *)&unk_253F39C20);
        sub_227D5809C((uint64_t)v24, (uint64_t *)&unk_253F39C20);
        sub_227D64BC4((uint64_t)v17, type metadata accessor for ReadingHistory.Streak);
        sub_227D5809C((uint64_t)v12, (uint64_t *)&unk_253F39C20);
        if (v41 == v42)
          goto LABEL_5;
LABEL_13:
        v32 = 0;
        return v32 & 1;
      }
      sub_227D64BC4((uint64_t)v8, type metadata accessor for ReadingHistory.Streak);
      sub_227D5809C((uint64_t)v21, (uint64_t *)&unk_253F39C20);
      sub_227D5809C((uint64_t)v24, (uint64_t *)&unk_253F39C20);
      sub_227D64BC4((uint64_t)v17, type metadata accessor for ReadingHistory.Streak);
      v38 = (uint64_t)v12;
      v37 = (uint64_t *)&unk_253F39C20;
LABEL_12:
      sub_227D5809C(v38, v37);
      goto LABEL_13;
    }
    sub_227D5809C((uint64_t)v21, (uint64_t *)&unk_253F39C20);
    sub_227D5809C((uint64_t)v24, (uint64_t *)&unk_253F39C20);
    sub_227D64BC4((uint64_t)v17, type metadata accessor for ReadingHistory.Streak);
LABEL_11:
    v37 = &qword_253F39C38;
    v38 = (uint64_t)v12;
    goto LABEL_12;
  }
  sub_227D5809C((uint64_t)v21, (uint64_t *)&unk_253F39C20);
  sub_227D5809C((uint64_t)v24, (uint64_t *)&unk_253F39C20);
  if (v31(v30, 1, v4) != 1)
    goto LABEL_11;
  sub_227D5809C((uint64_t)v12, (uint64_t *)&unk_253F39C20);
LABEL_5:
  v32 = 0;
  v33 = *(int *)(v44 + 24);
  v34 = (uint64_t)v43 + v33;
  v35 = *(_QWORD *)((char *)v43 + v33);
  v36 = (char *)v27 + v33;
  if (v35 == *(_QWORD *)v36
    && *(_QWORD *)(v34 + 8) == *((_QWORD *)v36 + 1)
    && ((*(unsigned __int8 *)(v34 + 16) ^ v36[16]) & 1) == 0)
  {
    v32 = sub_227D5F6EC(*(_QWORD *)((char *)v43 + *(int *)(v44 + 28)), *(_QWORD *)((char *)v27 + *(int *)(v44 + 28)));
  }
  return v32 & 1;
}

uint64_t sub_227D5F6A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_227D68330((uint64_t *)&unk_253F39C20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_227D5F6EC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unsigned __int8 *v3;
  unsigned __int8 *i;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  char v12;
  uint64_t result;
  BOOL v14;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (!v2 || a1 == a2)
    return 1;
  v3 = (unsigned __int8 *)(a2 + 64);
  for (i = (unsigned __int8 *)(a1 + 64); ; i += 40)
  {
    v6 = *((_QWORD *)i - 2);
    v5 = *((_QWORD *)i - 1);
    v7 = *i;
    v9 = *((_QWORD *)v3 - 2);
    v8 = *((_QWORD *)v3 - 1);
    v10 = *v3;
    if (*((_QWORD *)i - 4) == *((_QWORD *)v3 - 4) && *((_QWORD *)i - 3) == *((_QWORD *)v3 - 3))
    {
      result = 0;
    }
    else
    {
      v12 = sub_227E60698();
      result = 0;
      if ((v12 & 1) == 0)
        return result;
    }
    v14 = v6 == v9 && v5 == v8;
    if (!v14 || ((v7 ^ v10) & 1) != 0)
      break;
    v3 += 40;
    if (!--v2)
      return 1;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for ReadingHistory.Day(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 16);
  v4 = v3 >= 2;
  v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

void sub_227D5F8FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_227D5F9EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location, char a17)
{
  objc_destroyWeak(&location);
  _Block_object_dispose(&a17, 8);
  _Unwind_Resume(a1);
}

void sub_227D5FC24(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_227D5FC44()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_227D5FD1C(319, &qword_253F39CD0, (void (*)(uint64_t))type metadata accessor for PBPropertyValue.OneOf_Params);
  if (v0 <= 0x3F)
  {
    sub_227E5F3E4();
    if (v1 <= 0x3F)
    {
      sub_227D5FD1C(319, &qword_253F3AE78, (void (*)(uint64_t))MEMORY[0x24BE5B990]);
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

void sub_227D5FD1C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    v4 = sub_227E6038C();
    if (!v5)
      atomic_store(v4, a2);
  }
}

uint64_t sub_227D5FD68()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;

  result = sub_227E5F3E4();
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for PBPropertySingleFloatParam(319);
    if (v2 <= 0x3F)
    {
      result = type metadata accessor for PBPropertyBookReadParams(319);
      if (v3 <= 0x3F)
      {
        result = type metadata accessor for PBPropertyMarkedAsFinishedParam(319);
        if (v4 <= 0x3F)
        {
          result = type metadata accessor for PBPropertyBookImpressionParam(319);
          if (v5 <= 0x3F)
          {
            swift_initEnumMetadataMultiPayload();
            return 0;
          }
        }
      }
    }
  }
  return result;
}

__n128 initializeWithTake for ReadingHistory.DayEntry(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t sub_227D5FE54()
{
  return swift_bridgeObjectRetain();
}

ValueMetadata *type metadata accessor for ReadingHistory.DayEntry()
{
  return &type metadata for ReadingHistory.DayEntry;
}

uint64_t storeEnumTagSinglePayload for ReadingGoals.StateChange(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 253;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = a2 + 3;
  }
  return result;
}

uint64_t sub_227D5FEB4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_227D5FFFC(v1, a1);
}

uint64_t sub_227D5FECC@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_227D5FEE4(v1, a1);
}

uint64_t sub_227D5FEE4@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;

  v4 = sub_227D68330((uint64_t *)&unk_253F39C20);
  MEMORY[0x24BDAC7A8](v4, v5);
  v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = a1 + OBJC_IVAR____TtC13BookDataStore23ReadingHistoryDataStore__state;
  swift_beginAccess();
  v9 = type metadata accessor for ReadingHistoryDataStore.State(0);
  sub_227D5DF48(v8 + *(int *)(v9 + 20), (uint64_t)v7, (uint64_t *)&unk_253F39C20);
  v10 = type metadata accessor for ReadingHistory.Streak(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v7, 1, v10) == 1)
  {
    result = sub_227D5809C((uint64_t)v7, (uint64_t *)&unk_253F39C20);
    v12 = 0;
  }
  else
  {
    v12 = *(_QWORD *)&v7[*(int *)(v10 + 20)];
    result = sub_227D64BC4((uint64_t)v7, type metadata accessor for ReadingHistory.Streak);
  }
  *a2 = v12;
  return result;
}

uint64_t sub_227D5FFFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a1 + OBJC_IVAR____TtC13BookDataStore23ReadingHistoryDataStore__state;
  swift_beginAccess();
  v4 = type metadata accessor for ReadingHistoryDataStore.State(0);
  return sub_227D5DF48(v3 + *(int *)(v4 + 28), a2, (uint64_t *)&unk_253F39C20);
}

uint64_t type metadata accessor for ReadingHistoryDataStore.State(uint64_t a1)
{
  return sub_227D5DFC8(a1, qword_253F393A0);
}

uint64_t sub_227D60084()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 24))
    swift_release();
  return swift_deallocObject();
}

double sub_227D600C8@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  double result;
  char v4;

  swift_beginAccess();
  result = *(double *)(v1 + 48);
  v4 = *(_BYTE *)(v1 + 56);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 40);
  *(double *)(a1 + 8) = result;
  *(_BYTE *)(a1 + 16) = v4;
  return result;
}

uint64_t sub_227D60120(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;

  v5 = *v2;
  v6 = swift_allocObject();
  swift_weakInit();
  v7 = (_QWORD *)swift_allocObject();
  v7[2] = *(_QWORD *)(v5 + 80);
  v7[3] = *(_QWORD *)(v5 + 88);
  v7[4] = v6;
  type metadata accessor for ObservationToken();
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = sub_227D61114;
  *(_QWORD *)(v8 + 24) = v7;
  v9 = swift_retain();
  sub_227D601DC(v9, a1, a2);
  swift_release();
  return v8;
}

uint64_t sub_227D601DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  NSObject *v8;
  _QWORD *v9;
  uint64_t v10;
  void *v11;
  uint64_t result;
  _QWORD v13[6];

  v4 = v3;
  v8 = *(NSObject **)(v4 + 16);
  v9 = (_QWORD *)swift_allocObject();
  v9[2] = v4;
  v9[3] = a2;
  v9[4] = a3;
  v9[5] = a1;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = sub_227D6314C;
  *(_QWORD *)(v10 + 24) = v9;
  v13[4] = sub_227DE0D94;
  v13[5] = v10;
  v13[0] = MEMORY[0x24BDAC760];
  v13[1] = 1107296256;
  v13[2] = sub_227D62A60;
  v13[3] = &unk_24F08D268;
  v11 = _Block_copy(v13);
  swift_retain();
  swift_retain();
  swift_unknownObjectRetain();
  swift_retain();
  swift_release();
  dispatch_sync(v8, v11);
  _Block_release(v11);
  LOBYTE(v8) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((v8 & 1) != 0)
    __break(1u);
  return result;
}

uint64_t type metadata accessor for ObservationToken()
{
  return objc_opt_self();
}

void sub_227D606FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
  id *v20;
  id *v21;

  objc_destroyWeak(v21);
  objc_destroyWeak(v20);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_227D60A48(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,id location)
{
  id *v21;
  id *v22;

  objc_destroyWeak(v22);
  objc_destroyWeak(v21);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

uint64_t sub_227D60A84@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  if (qword_253F3A200 != -1)
    swift_once();
  v2 = unk_253F3A1D0;
  v4 = qword_253F3A1D8;
  v3 = *(_QWORD *)byte_253F3A1E0;
  v5 = qword_253F3A1E8;
  v6 = qword_253F3A1F0;
  *a1 = qword_253F3A1C8;
  a1[1] = v2;
  a1[2] = v4;
  a1[3] = v3;
  a1[4] = v5;
  a1[5] = v6;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  return swift_retain();
}

ValueMetadata *type metadata accessor for ReadingGoals.State()
{
  return &type metadata for ReadingGoals.State;
}

double ReadingGoals.State.streakDayGoal.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 8);
}

uint64_t sub_227D60B2C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t Strong;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t result;
  _BYTE v12[24];

  v2 = sub_227E5F588();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2, v4);
  v6 = &v12[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v3 + 16))(v6, Strong + *(_QWORD *)(*(_QWORD *)Strong + 192), v2);
    swift_release();
    v8 = sub_227E5F570();
    v9 = sub_227E60224();
    if (os_log_type_enabled(v8, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v10 = 0;
      _os_log_impl(&dword_227D4F000, v8, v9, "CRDTModelFileSyncTransport sink: receiveValue", v10, 2u);
      MEMORY[0x22E2AA8AC](v10, -1, -1);
    }

    (*(void (**)(_BYTE *, uint64_t))(v3 + 8))(v6, v2);
  }
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_227D60CA0(a1);
    return swift_release();
  }
  return result;
}

uint64_t sub_227D60CA0(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  unint64_t v18;
  char *v19;
  void *v20;
  uint64_t v21;
  char *v22;
  _QWORD v24[2];
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD aBlock[6];

  v2 = v1;
  v4 = (_QWORD *)*v1;
  v26 = sub_227E5F948();
  v29 = *(_QWORD *)(v26 - 8);
  MEMORY[0x24BDAC7A8](v26, v5);
  v25 = (char *)v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_227E5F978();
  v27 = *(_QWORD *)(v7 - 8);
  v28 = v7;
  MEMORY[0x24BDAC7A8](v7, v8);
  v10 = (char *)v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = v4[10];
  v12 = v4[12];
  v13 = sub_227E5FDE0();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13, v15);
  v17 = (char *)v24 - v16;
  v24[1] = *(_QWORD *)((char *)v1 + v4[19]);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))((char *)v24 - v16, a1, v13);
  v18 = (*(unsigned __int8 *)(v14 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  v19 = (char *)swift_allocObject();
  *((_QWORD *)v19 + 2) = v11;
  *((_QWORD *)v19 + 3) = v4[11];
  *((_QWORD *)v19 + 4) = v12;
  *((_QWORD *)v19 + 5) = v4[13];
  *((_QWORD *)v19 + 6) = v2;
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(&v19[v18], v17, v13);
  aBlock[4] = sub_227D5B610;
  aBlock[5] = v19;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_227D5A858;
  aBlock[3] = &unk_24F08F558;
  v20 = _Block_copy(aBlock);
  swift_retain();
  sub_227E5F960();
  v30 = MEMORY[0x24BEE4AF8];
  sub_227D51624((unint64_t *)&unk_253F3AED0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  sub_227D68330((uint64_t *)&unk_253F3AFE0);
  sub_227D52D7C((unint64_t *)&unk_253F3AFF0, (uint64_t *)&unk_253F3AFE0);
  v22 = v25;
  v21 = v26;
  sub_227E603E0();
  MEMORY[0x22E2A991C](0, v10, v22, v20);
  _Block_release(v20);
  (*(void (**)(char *, uint64_t))(v29 + 8))(v22, v21);
  (*(void (**)(char *, uint64_t))(v27 + 8))(v10, v28);
  return swift_release();
}

uint64_t MutableObservableContainer.mutate(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  NSObject *v6;
  _QWORD *v7;
  uint64_t v8;
  void *v9;
  uint64_t result;
  _QWORD v11[6];

  v3 = v2;
  v6 = *(NSObject **)(v3 + 16);
  v7 = (_QWORD *)swift_allocObject();
  v7[2] = a1;
  v7[3] = a2;
  v7[4] = v3;
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = sub_227D62A88;
  *(_QWORD *)(v8 + 24) = v7;
  v11[4] = sub_227D5B9E0;
  v11[5] = v8;
  v11[0] = MEMORY[0x24BDAC760];
  v11[1] = 1107296256;
  v11[2] = sub_227D62A60;
  v11[3] = &unk_24F08CD58;
  v9 = _Block_copy(v11);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v6, v9);
  _Block_release(v9);
  LOBYTE(v6) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((v6 & 1) != 0)
    __break(1u);
  return result;
}

uint64_t sub_227D61064()
{
  static CRDTModelFileSyncInfo.fields.getter();
  return 0x6C65646F6DLL;
}

uint64_t static CRDTModelFileSyncInfo.fields.getter()
{
  swift_getKeyPath();
  return 0x6C65646F6DLL;
}

uint64_t ObservationToken.__deallocating_deinit()
{
  uint64_t v0;

  (*(void (**)(uint64_t))(v0 + 16))(v0);
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_227D61114(uint64_t a1)
{
  uint64_t *v1;

  return sub_227D61120(a1, v1[4], v1[2], v1[3]);
}

uint64_t sub_227D61120(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    swift_beginAccess();
    type metadata accessor for ObservableContainer.Event(255, a3, a4, v7);
    swift_getFunctionTypeMetadata1();
    sub_227E5FF24();
    sub_227E5FEF4();
    swift_endAccess();
    swift_release();
    result = v8;
    if (v8)
      return sub_227D5B660(v8);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for ReadingGoals.StateChange(uint64_t a1, unsigned int a2)
{
  int v3;
  int v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFD && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 253);
  if (*(unsigned __int8 *)(a1 + 16) <= 3u)
    v3 = 3;
  else
    v3 = *(unsigned __int8 *)(a1 + 16);
  v4 = v3 - 4;
  if (*(unsigned __int8 *)(a1 + 16) < 3u)
    v5 = -1;
  else
    v5 = v4;
  return (v5 + 1);
}

uint64_t sub_227D61278()
{
  return swift_initClassMetadata2();
}

uint64_t sub_227D612B0()
{
  MEMORY[0x22E2AA7D4](&protocol conformance descriptor for CRDTModelFileSyncInfo<A>);
  return sub_227E5F9B4();
}

uint64_t sub_227D612F0()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t type metadata accessor for ObservableContainer(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_227D6837C(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ObservableContainer);
}

uint64_t sub_227D61394()
{
  uint64_t result;
  unint64_t v1;
  _QWORD v2[6];

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    v2[4] = *(_QWORD *)(result - 8) + 64;
    swift_getTupleTypeLayout2();
    v2[5] = v2;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_227D61410()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t dispatch thunk of ObservableContainer.addObserver(_:callback:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 248))();
}

uint64_t ReadingHistory.State.currentStreak.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t ReadingGoals.State.booksFinishedGoal.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

__n128 initializeWithTake for _ReadingHistoryUpdateProperties(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

id sub_227D61918(_QWORD *a1, id *a2)
{
  if (*a1 != -1)
    swift_once();
  return *a2;
}

id static OS_os_log.readingActivity.getter()
{
  return sub_227D61918(qword_253F39FF8, (id *)&qword_253F39FF0);
}

double sub_227D61970@<D0>(double *a1@<X8>)
{
  double result;
  uint64_t v3;
  double v4;

  sub_227E602CC();
  result = v4;
  *(_QWORD *)a1 = v3;
  a1[1] = v4;
  return result;
}

ValueMetadata *type metadata accessor for ReadingHistoryModel.DayKey()
{
  return &type metadata for ReadingHistoryModel.DayKey;
}

uint64_t sub_227D619E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_227D61A04(a1, a2, a3);
}

uint64_t sub_227D61A04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  NSObject *v8;
  _QWORD *v9;
  uint64_t v10;
  void *v11;
  uint64_t result;
  _QWORD v13[6];

  v4 = v3;
  v8 = *(NSObject **)(v4 + 16);
  v9 = (_QWORD *)swift_allocObject();
  v9[2] = v4;
  v9[3] = a2;
  v9[4] = a3;
  v9[5] = a1;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = sub_227D6436C;
  *(_QWORD *)(v10 + 24) = v9;
  v13[4] = sub_227D63158;
  v13[5] = v10;
  v13[0] = MEMORY[0x24BDAC760];
  v13[1] = 1107296256;
  v13[2] = sub_227D62A60;
  v13[3] = &unk_24F08ED60;
  v11 = _Block_copy(v13);
  swift_retain();
  swift_retain();
  swift_unknownObjectRetain();
  swift_retain();
  swift_release();
  dispatch_sync(v8, v11);
  _Block_release(v11);
  LOBYTE(v8) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((v8 & 1) != 0)
    __break(1u);
  return result;
}

ValueMetadata *type metadata accessor for ReadingGoals.StateChange()
{
  return &type metadata for ReadingGoals.StateChange;
}

uint64_t ModelState.Source.description.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  _QWORD v14[2];

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](a1, v1);
  v6 = (char *)v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4, v7);
  v9 = (char *)v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v10 + 16))(v9);
  v11 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 48))(v9, 2, v2);
  if (v11)
  {
    if (v11 == 1)
      return 0x6C61636F6CLL;
    else
      return 0x6465726F7473;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v6, v9, v2);
    v14[0] = 0x2865746F6D6572;
    v14[1] = 0xE700000000000000;
    sub_227E60674();
    sub_227E6002C();
    swift_bridgeObjectRelease();
    sub_227E6002C();
    v12 = v14[0];
    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  }
  return v12;
}

_BYTE *sub_227D61CC8(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  int v9;
  unsigned int v10;
  int v11;
  int v12;
  uint64_t v13;
  unsigned int v14;
  _BOOL8 v15;
  BOOL v16;
  unsigned int v17;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = *(_QWORD *)(v6 + 64);
  if (v7 > 1)
    goto LABEL_20;
  if (v8 > 3)
    goto LABEL_3;
  v10 = (~(-1 << (8 * v8)) - v7 + 2) >> (8 * v8);
  if (v10 > 0xFFFE)
  {
    v9 = *(_DWORD *)&a2[v8];
    if (!v9)
      goto LABEL_19;
    goto LABEL_10;
  }
  if (v10 > 0xFE)
  {
    v9 = *(unsigned __int16 *)&a2[v8];
    if (!*(_WORD *)&a2[v8])
      goto LABEL_19;
    goto LABEL_10;
  }
  if (v10)
  {
LABEL_3:
    v9 = a2[v8];
    if (!a2[v8])
      goto LABEL_19;
LABEL_10:
    v11 = (v9 - 1) << (8 * v8);
    if (v8 > 3)
      v11 = 0;
    if ((_DWORD)v8)
    {
      if (v8 <= 3)
        v12 = *(_QWORD *)(v6 + 64);
      else
        v12 = 4;
      __asm { BR              X11 }
    }
    if (v11 + v7 != -1)
      goto LABEL_27;
LABEL_33:
    (*(void (**)(_BYTE *, _BYTE *, _QWORD))(v6 + 16))(a1, a2, *(_QWORD *)(a3 + 16));
    if (v8 > 3)
    {
LABEL_37:
      a1[v8] = 0;
      return a1;
    }
    goto LABEL_34;
  }
LABEL_19:
  if (!v7)
    goto LABEL_33;
LABEL_20:
  if ((*(unsigned int (**)(_BYTE *, _QWORD, _QWORD))(v6 + 48))(a2, *(unsigned int *)(v6 + 84), *(_QWORD *)(a3 + 16)))
  {
    if (v7 > 1)
    {
LABEL_40:
      memcpy(a1, a2, v8);
      return a1;
    }
LABEL_27:
    if (v8 <= 3)
    {
      v14 = (~(-1 << (8 * v8)) - v7 + 2) >> (8 * v8);
      if (v14 > 0xFFFE)
      {
        v13 = 4;
      }
      else
      {
        v15 = v14 != 0;
        v16 = v14 >= 0xFF;
        v13 = 2;
        if (!v16)
          v13 = v15;
      }
    }
    else
    {
      v13 = 1;
    }
    v8 += v13;
    goto LABEL_40;
  }
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v6 + 16))(a1, a2, v5);
  if (v7 > 1)
    return a1;
  if (v8 > 3)
    goto LABEL_37;
LABEL_34:
  v17 = (~(-1 << (8 * v8)) - v7 + 2) >> (8 * v8);
  if (v17 > 0xFFFE)
  {
    *(_DWORD *)&a1[v8] = 0;
    return a1;
  }
  if (v17 > 0xFE)
  {
    *(_WORD *)&a1[v8] = 0;
    return a1;
  }
  if (v17)
    goto LABEL_37;
  return a1;
}

uint64_t sub_227D61F0C()
{
  return swift_initClassMetadata2();
}

uint64_t sub_227D61FF0()
{
  uint64_t result;

  sub_227D62058();
  result = sub_227E60380();
  qword_253F3AE60 = result;
  return result;
}

unint64_t sub_227D62058()
{
  unint64_t result;

  result = qword_253F3B060;
  if (!qword_253F3B060)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_253F3B060);
  }
  return result;
}

uint64_t sub_227D62094(uint64_t a1)
{
  return sub_227D60B2C(a1);
}

uint64_t sub_227D620A4()
{
  uint64_t result;
  unint64_t v1;

  result = sub_227E5F3E4();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_227D62110@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;

  v3 = a1 + *(_QWORD *)(*(_QWORD *)a1 + 120);
  swift_beginAccess();
  return sub_227D5DF48(v3, a2, &qword_253F398D0);
}

uint64_t sub_227D62178@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 32);
  return swift_retain();
}

id sub_227D621A0()
{
  swift_beginAccess();
  return (id)swift_unknownObjectRetain();
}

void sub_227D621E4()
{
  unint64_t v0;
  unint64_t v1;

  sub_227D62298(319, &qword_253F3AF48, &qword_253F3AF90, &qword_253F3AF78, (unint64_t *)&unk_253F3AF80);
  if (v0 <= 0x3F)
  {
    sub_227D6A8F4();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

void sub_227D62298(uint64_t a1, unint64_t *a2, uint64_t *a3, unint64_t *a4, unint64_t *a5)
{
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    sub_227D6717C(a3);
    sub_227D515E4(a4, a3, MEMORY[0x24BE18990]);
    sub_227D515E4(a5, a3, MEMORY[0x24BE18998]);
    v9 = sub_227E5FC84();
    if (!v10)
      atomic_store(v9, a2);
  }
}

uint64_t sub_227D6235C()
{
  sub_227D51624(&qword_253F3A210, type metadata accessor for ReadingHistoryModel, (uint64_t)&protocol conformance descriptor for ReadingHistoryModel);
  return sub_227E5FB1C();
}

uint64_t dispatch thunk of ObservableContainer.observe(callback:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 240))();
}

uint64_t sub_227D623B8()
{
  uint64_t result;
  unint64_t v1;

  result = sub_227E5F27C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for ReadingGoals.State(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

void static ReadingGoals.State.default.getter(_QWORD *a1@<X8>)
{
  *a1 = 3;
  a1[1] = 0x4072C00000000000;
}

double ReadingGoals.StateChange.state.getter@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  double result;

  result = *(double *)(v1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(double *)(a1 + 8) = result;
  return result;
}

uint64_t ModelState.loaded.getter@<X0>(uint64_t result@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;

  *a2 = *(_BYTE *)(v2 + *(int *)(result + 44));
  return result;
}

void sub_227D6247C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  if (!qword_253F39848[0])
  {
    v2 = type metadata accessor for ReadingHistoryModel(255);
    v3 = sub_227D62510(&qword_253F3A220, (uint64_t)&protocol conformance descriptor for ReadingHistoryModel);
    v4 = sub_227D62510(&qword_253F3A248, (uint64_t)&protocol conformance descriptor for ReadingHistoryModel);
    v5 = type metadata accessor for ModelState.Source(a1, v2, v3, v4);
    if (!v6)
      atomic_store(v5, qword_253F39848);
  }
}

uint64_t sub_227D62510(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for ReadingHistoryModel(255);
    result = MEMORY[0x22E2AA7D4](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

_BYTE *sub_227D62550(_BYTE *result, char a2)
{
  *result = a2 & 1;
  return result;
}

uint64_t sub_227D62560(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = a2;
  *(_QWORD *)(v6 + 24) = a3;
  swift_retain();
  swift_retain();
  sub_227D625F0(a1, (uint64_t)sub_227DE0D94, v6);
  swift_release();
  return swift_release();
}

uint64_t sub_227D625F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  NSObject *v8;
  _QWORD *v9;
  uint64_t v10;
  void *v11;
  uint64_t result;
  _QWORD v13[6];

  v4 = v3;
  v8 = *(NSObject **)(v4 + 16);
  v9 = (_QWORD *)swift_allocObject();
  v9[2] = v4;
  v9[3] = a2;
  v9[4] = a3;
  v9[5] = a1;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = sub_227D64CFC;
  *(_QWORD *)(v10 + 24) = v9;
  v13[4] = sub_227D63158;
  v13[5] = v10;
  v13[0] = MEMORY[0x24BDAC760];
  v13[1] = 1107296256;
  v13[2] = sub_227D62A60;
  v13[3] = &unk_24F08F058;
  v11 = _Block_copy(v13);
  swift_retain();
  swift_retain();
  swift_unknownObjectRetain();
  swift_retain();
  swift_release();
  dispatch_sync(v8, v11);
  _Block_release(v11);
  LOBYTE(v8) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((v8 & 1) != 0)
    __break(1u);
  return result;
}

ValueMetadata *type metadata accessor for ReadingHistoryDataStore.Config()
{
  return &type metadata for ReadingHistoryDataStore.Config;
}

uint64_t sub_227D62750()
{
  return sub_227D620A4();
}

uint64_t type metadata accessor for ReadingHistory.Notification.AddFakeSession(uint64_t a1)
{
  return sub_227D5DFC8(a1, qword_253F39970);
}

uint64_t sub_227D62A60(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 32))();
}

uint64_t sub_227D62A80()
{
  uint64_t v0;

  return sub_227D6312C(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_227D62A88()
{
  uint64_t v0;

  return sub_227D62A94(*(void (**)(char *))(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t sub_227D62A94(void (*a1)(char *), uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v4 = *(_QWORD *)(*(_QWORD *)a3 + 264);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](a1, a2);
  v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = v9 + *(_QWORD *)(v8 + 120);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v10, v4);
  a1(v7);
  sub_227D62B60((uint64_t)v7, v11);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_227D62B60(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE v14[24];

  v4 = *(_QWORD *)(*(_QWORD *)v2 + 80);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](a1, a2);
  v7 = &v14[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = v2 + *(_QWORD *)(v8 + 120);
  swift_beginAccess();
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v5 + 16))(v7, v9, v4);
  swift_beginAccess();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 24))(v9, a1, v4);
  swift_endAccess();
  sub_227D62C40((uint64_t)v7, v10, v11, v12);
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_227D62C40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t, uint64_t);
  char v20;
  uint64_t result;
  char *v22;
  uint64_t v23;

  v5 = v4;
  v7 = *v4;
  v8 = *(_QWORD *)(*v4 + 80);
  v9 = type metadata accessor for ObservableContainer.Event(0, v8, *(_QWORD *)(v7 + 88), a4);
  v23 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x24BDAC7A8](v9, v10);
  v13 = (char *)&v23 - v12;
  v14 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v11, v15);
  v17 = (char *)&v23 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = (uint64_t)v5 + *(_QWORD *)(v7 + 120);
  swift_beginAccess();
  v19 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 16);
  v19(v17, v18, v8);
  v20 = sub_227E5FF6C();
  result = (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v17, v8);
  if ((v20 & 1) == 0)
  {
    v22 = &v13[*(int *)(swift_getTupleTypeMetadata2() + 48)];
    v19(v13, a1, v8);
    v19(v22, v18, v8);
    swift_storeEnumTagMultiPayload();
    sub_227D62DCC((uint64_t)v13);
    return (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v13, v9);
  }
  return result;
}

uint64_t sub_227D62DCC(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t ObjectType;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t FunctionTypeMetadata1;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  void *v26;
  uint64_t v28;
  void (*v29)(char *, uint64_t);
  void (*v30)(char *, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t aBlock;
  uint64_t v35;
  uint64_t (*v36)(uint64_t);
  void *v37;
  uint64_t (*v38)();
  _QWORD *v39;

  v32 = a1;
  v2 = *v1;
  v3 = sub_227E5F978();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3, v5);
  v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = sub_227E5F948();
  v8 = *(_QWORD *)(v33 - 8);
  MEMORY[0x24BDAC7A8](v33, v9);
  v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (sub_227D5A940())
  {
    v13 = v12;
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v13 + 8))(v1, ObjectType, v13);
    swift_unknownObjectRelease();
  }
  v31 = v1[3];
  sub_227E5F93C();
  v38 = nullsub_1;
  v39 = 0;
  aBlock = MEMORY[0x24BDAC760];
  v35 = 1107296256;
  v36 = sub_227D5A858;
  v37 = &unk_24F08D0B0;
  v15 = _Block_copy(&aBlock);
  sub_227E5F960();
  MEMORY[0x22E2A991C](0, v7, v11, v15);
  _Block_release(v15);
  v30 = *(void (**)(char *, uint64_t))(v4 + 8);
  v30(v7, v3);
  v29 = *(void (**)(char *, uint64_t))(v8 + 8);
  v16 = v33;
  v29(v11, v33);
  swift_beginAccess();
  v17 = v1[4];
  v28 = v3;
  v18 = *(_QWORD *)(v2 + 80);
  v19 = *(_QWORD *)(v2 + 88);
  type metadata accessor for ObservableContainer.Event(255, v18, v19, v20);
  FunctionTypeMetadata1 = swift_getFunctionTypeMetadata1();
  aBlock = v17;
  MEMORY[0x24BDAC7A8](FunctionTypeMetadata1, v22);
  *(&v28 - 4) = v18;
  *(&v28 - 3) = v19;
  *(&v28 - 2) = v32;
  v23 = sub_227E5FF18();
  swift_bridgeObjectRetain();
  MEMORY[0x22E2AA7D4](MEMORY[0x24BEE03C0], v23);
  sub_227E60098();
  swift_bridgeObjectRelease();
  sub_227E5F93C();
  v24 = swift_allocObject();
  swift_weakInit();
  v25 = (_QWORD *)swift_allocObject();
  v25[2] = v18;
  v25[3] = v19;
  v25[4] = v24;
  v38 = sub_227D5A888;
  v39 = v25;
  aBlock = MEMORY[0x24BDAC760];
  v35 = 1107296256;
  v36 = sub_227D5A858;
  v37 = &unk_24F08D100;
  v26 = _Block_copy(&aBlock);
  swift_retain();
  sub_227E5F960();
  MEMORY[0x22E2A991C](0, v7, v11, v26);
  _Block_release(v26);
  v30(v7, v28);
  v29(v11, v16);
  swift_release();
  return swift_release();
}

uint64_t sub_227D6312C(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_227D6314C()
{
  uint64_t v0;

  return sub_227D63844(*(_QWORD **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
}

void sub_227D6315C()
{
  uint64_t v0;

  sub_227D63168(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

void sub_227D63168(uint64_t a1, uint64_t a2, unint64_t a3)
{
  id v6;
  void *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  NSObject *oslog;
  uint64_t v12;

  if (!*(_QWORD *)(a1 + 32))
  {
    v6 = objc_msgSend(*(id *)(a1 + 48), sel_createTransactionWithName_, sub_227E5FFE4() + 32);
    swift_release();
    v7 = *(void **)(a1 + 32);
    *(_QWORD *)(a1 + 32) = v6;

    swift_bridgeObjectRetain_n();
    oslog = sub_227E5F570();
    v8 = sub_227E60218();
    if (os_log_type_enabled(oslog, v8))
    {
      v9 = (uint8_t *)swift_slowAlloc();
      v10 = swift_slowAlloc();
      v12 = v10;
      *(_DWORD *)v9 = 136315138;
      swift_bridgeObjectRetain();
      sub_227D634E0(a2, a3, &v12);
      sub_227E603B0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_227D4F000, oslog, v8, "[Transaction]: Created transaction %s", v9, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x22E2AA8AC](v10, -1, -1);
      MEMORY[0x22E2AA8AC](v9, -1, -1);

    }
    else
    {
      swift_bridgeObjectRelease_n();

    }
  }
}

void sub_227D63340()
{
  uint64_t v0;

  sub_227D6334C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

void sub_227D6334C(uint64_t a1, uint64_t a2, unint64_t a3)
{
  void *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  NSObject *oslog;
  uint64_t v10;

  v5 = *(void **)(a1 + 32);
  *(_QWORD *)(a1 + 32) = 0;

  swift_bridgeObjectRetain_n();
  oslog = sub_227E5F570();
  v6 = sub_227E60218();
  if (os_log_type_enabled(oslog, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = swift_slowAlloc();
    v10 = v8;
    *(_DWORD *)v7 = 136315138;
    swift_bridgeObjectRetain();
    sub_227D634E0(a2, a3, &v10);
    sub_227E603B0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_227D4F000, oslog, v6, "[Transaction]: Ended transaction %s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x22E2AA8AC](v8, -1, -1);
    MEMORY[0x22E2AA8AC](v7, -1, -1);

  }
  else
  {
    swift_bridgeObjectRelease_n();

  }
}

uint64_t sub_227D634E0(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12[3];
  uint64_t ObjectType;

  v6 = sub_227D635EC(v12, 0, 0, 1, a1, a2);
  v7 = v12[0];
  if (v6)
  {
    v8 = v6;
    ObjectType = swift_getObjectType();
    v12[0] = v8;
    v9 = *a3;
    if (*a3)
    {
      sub_227D635B0((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = MEMORY[0x24BEE2520];
    v12[0] = a1;
    v12[1] = a2;
    v10 = *a3;
    if (*a3)
    {
      sub_227D635B0((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  sub_227D58120((uint64_t)v12);
  return v7;
}

uint64_t sub_227D635B0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_227D635EC(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  uint64_t v8;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  _QWORD __src[2];

  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (_QWORD *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_227E603BC();
            result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    result = sub_227D6A5B8(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0)
    goto LABEL_13;
  if ((a5 & 0x1000000000000000) != 0)
  {
    v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  v8 = sub_227E604D0();
  if (!v8)
  {
    sub_227E60554();
    __break(1u);
LABEL_17:
    result = sub_227E605A8();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0)
    return 0;
  else
    return swift_unknownObjectRetain();
}

uint64_t ReadingHistory.State.readingHistory.getter()
{
  type metadata accessor for ReadingHistory.State(0);
  return swift_bridgeObjectRetain();
}

uint64_t ReadingHistory.State.longestStreak.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for ReadingHistory.State(0) + 20);
  return sub_227D5F6A4(v3, a1);
}

__n128 ReadingHistory.State.today.getter@<Q0>(__n128 *a1@<X8>)
{
  uint64_t v1;
  __n128 *v3;
  unsigned __int8 v4;
  __n128 result;

  v3 = (__n128 *)(v1 + *(int *)(type metadata accessor for ReadingHistory.State(0) + 24));
  v4 = v3[1].n128_u8[0];
  result = *v3;
  *a1 = *v3;
  a1[1].n128_u8[0] = v4;
  return result;
}

uint64_t type metadata accessor for ReadingHistory.State(uint64_t a1)
{
  return sub_227D5DFC8(a1, qword_253F39B48);
}

uint64_t sub_227D63844(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  void (*v24)(char *, char *, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t ObjectType;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  void *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t (*v61)(uint64_t);
  _QWORD *v62;
  _QWORD aBlock[6];

  v55 = a4;
  v56 = a3;
  v59 = a2;
  v5 = (_QWORD *)*a1;
  v6 = sub_227E5F978();
  v53 = *(_QWORD *)(v6 - 8);
  v54 = v6;
  MEMORY[0x24BDAC7A8](v6, v7);
  v52 = (char *)&v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = sub_227E5F948();
  v50 = *(_QWORD *)(v51 - 8);
  MEMORY[0x24BDAC7A8](v51, v9);
  v11 = (char *)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = v5[10];
  v58 = v5[11];
  v14 = type metadata accessor for ObservableContainer.Event(0, v12, v58, v13);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(_QWORD *)(v15 + 64);
  v18 = MEMORY[0x24BDAC7A8](v14, v17);
  v19 = (char *)&v49 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18, v20);
  v22 = (char *)&v49 - v21;
  v23 = (char *)a1 + v5[15];
  swift_beginAccess();
  v24 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
  v57 = v12;
  v24(v22, v23, v12);
  swift_storeEnumTagMultiPayload();
  if (sub_227D5A940())
  {
    v26 = v25;
    ObjectType = swift_getObjectType();
    (*(void (**)(_QWORD *, uint64_t, uint64_t))(v26 + 8))(a1, ObjectType, v26);
    swift_unknownObjectRelease();
  }
  sub_227E5F93C();
  v28 = swift_allocObject();
  swift_weakInit();
  (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v19, v22, v14);
  v29 = *(unsigned __int8 *)(v15 + 80);
  v49 = v22;
  v30 = (v29 + 48) & ~v29;
  v31 = (v16 + v30 + 7) & 0xFFFFFFFFFFFFFFF8;
  v32 = (_QWORD *)swift_allocObject();
  v33 = v58;
  v32[2] = v57;
  v32[3] = v33;
  v34 = v14;
  v35 = v56;
  v32[4] = v59;
  v32[5] = v35;
  v36 = (char *)v32 + v30;
  v37 = v15;
  v38 = v19;
  v39 = v34;
  (*(void (**)(char *, char *))(v15 + 32))(v36, v38);
  *(_QWORD *)((char *)v32 + v31) = v28;
  aBlock[4] = sub_227D5A98C;
  aBlock[5] = v32;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_227D5A858;
  aBlock[3] = &unk_24F08D2B8;
  v40 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  v41 = v52;
  sub_227E5F960();
  MEMORY[0x22E2A991C](0, v41, v11, v40);
  _Block_release(v40);
  (*(void (**)(char *, uint64_t))(v53 + 8))(v41, v54);
  (*(void (**)(char *, uint64_t))(v50 + 8))(v11, v51);
  swift_release();
  swift_release();
  v42 = swift_allocObject();
  swift_weakInit();
  v43 = swift_allocObject();
  v44 = v55;
  swift_unknownObjectWeakInit();
  v45 = (_QWORD *)swift_allocObject();
  v46 = v58;
  v45[2] = v57;
  v45[3] = v46;
  v45[4] = v42;
  v45[5] = v43;
  v47 = v59;
  v45[6] = v44;
  v45[7] = v47;
  v45[8] = v35;
  v61 = sub_227D52584;
  v62 = v45;
  v60 = v44;
  swift_beginAccess();
  swift_getFunctionTypeMetadata1();
  sub_227E5FF24();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_227E5FF30();
  swift_endAccess();
  (*(void (**)(char *, uint64_t))(v37 + 8))(v49, v39);
  swift_release();
  return swift_release();
}

uint64_t sub_227D63C8C@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1;
  v4 = (uint64_t)v1 + *(_QWORD *)(*v1 + 120);
  swift_beginAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v3 + 80) - 8) + 16))(a1, v4);
}

uint64_t sub_227D63CF8@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1;
  v4 = (uint64_t)v1 + *(_QWORD *)(*v1 + 120);
  swift_beginAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v3 + 80) - 8) + 16))(a1, v4);
}

uint64_t destroy for ReadingHistory.State(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = a1 + *(int *)(a2 + 20);
  v3 = type metadata accessor for ReadingHistory.Streak(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 48))(v2, 1, v3))
  {
    v4 = sub_227E5F27C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v2, v4);
  }
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for ReadingHistory.State(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for ReadingHistory.Streak(0);
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    v11 = sub_227D68330((uint64_t *)&unk_253F39C20);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    v12 = sub_227E5F27C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v7, v8, v12);
    *(_QWORD *)&v7[*(int *)(v9 + 20)] = *(_QWORD *)&v8[*(int *)(v9 + 20)];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v13 = a3[6];
  v14 = a3[7];
  v15 = (char *)a1 + v13;
  v16 = (char *)a2 + v13;
  *(_OWORD *)v15 = *(_OWORD *)v16;
  v15[16] = v16[16];
  *(_QWORD *)((char *)a1 + v14) = *(_QWORD *)((char *)a2 + v14);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t type metadata accessor for ReadingHistory.Streak(uint64_t a1)
{
  return sub_227D5DFC8(a1, qword_253F39BE0);
}

uint64_t getEnumTagSinglePayload for ReadingHistory.Streak()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t ObservableContainer.Event.currentValue.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  int EnumCaseMultiPayload;
  uint64_t v9;
  uint64_t TupleTypeMetadata2;
  uint64_t v11;
  uint64_t v13;

  MEMORY[0x24BDAC7A8](a1, v2);
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v7 + 16))(v6);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v9 = *(_QWORD *)(a1 + 16);
  if (EnumCaseMultiPayload != 1)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(a2, v6, v9);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v11 = *(_QWORD *)(v9 - 8);
  (*(void (**)(uint64_t, char *, uint64_t))(v11 + 32))(a2, &v6[*(int *)(TupleTypeMetadata2 + 48)], v9);
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v6, v9);
}

__n128 initializeBufferWithCopyOfBuffer for ReadingGoals.StateChange(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t sub_227D63FFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);
  char v14;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(unsigned __int8 *)(v6 + 80);
  v9 = v7 + v8;
  if (((v7 + v8) & ~v8) + v7 <= v7)
    v10 = *(_QWORD *)(v6 + 64);
  else
    v10 = ((v7 + v8) & ~v8) + v7;
  v11 = *(unsigned __int8 *)(a2 + v10);
  if (v11 >= 2)
  {
    if (v10 <= 3)
      v12 = v10;
    else
      v12 = 4;
    __asm { BR              X12 }
  }
  v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
  v13(a1, a2, *(_QWORD *)(a3 + 16));
  if (v11 == 1)
  {
    v13((v9 + a1) & ~v8, (v9 + a2) & ~v8, v5);
    v14 = 1;
  }
  else
  {
    v14 = 0;
  }
  *(_BYTE *)(a1 + v10) = v14;
  return a1;
}

uint64_t sub_227D64114(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t result;
  uint64_t (*v11)(uint64_t, uint64_t);

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  v6 = *(unsigned __int8 *)(v4 + 80);
  v7 = v5 + v6;
  if (((v5 + v6) & ~v6) + v5 > v5)
    v5 += (v5 + v6) & ~v6;
  v8 = *(unsigned __int8 *)(a1 + v5);
  if (v8 >= 2)
  {
    if (v5 <= 3)
      v9 = v5;
    else
      v9 = 4;
    __asm { BR              X13 }
  }
  v11 = *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8);
  result = v11(a1, *(_QWORD *)(a2 + 16));
  if (v8 == 1)
    return v11((v7 + a1) & ~v6, v3);
  return result;
}

uint64_t sub_227D64228()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  _QWORD *v5;
  uint64_t v6;
  void *v7;
  uint64_t result;
  _QWORD v9[6];

  v1 = v0;
  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v1 + 24);
  v4 = *(NSObject **)(v1 + 40);
  v5 = (_QWORD *)swift_allocObject();
  v5[2] = v1;
  v5[3] = v2;
  v5[4] = v3;
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = sub_227D6315C;
  *(_QWORD *)(v6 + 24) = v5;
  v9[4] = sub_227DE0D94;
  v9[5] = v6;
  v9[0] = MEMORY[0x24BDAC760];
  v9[1] = 1107296256;
  v9[2] = sub_227D62A60;
  v9[3] = &unk_24F08D1F0;
  v7 = _Block_copy(v9);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v4, v7);
  _Block_release(v7);
  LOBYTE(v4) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((v4 & 1) != 0)
    __break(1u);
  return result;
}

uint64_t sub_227D6436C()
{
  uint64_t *v0;

  return sub_227D5AD84(v0[2], v0[3], v0[4], v0[5]);
}

uint64_t sub_227D64650()
{
  uint64_t v0;

  return sub_227D6465C(*(void (**)(char *))(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t sub_227D6465C(void (*a1)(char *), uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;

  v5 = type metadata accessor for CRDTModelSyncVersion();
  MEMORY[0x24BDAC7A8](v5, v6);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a3 + *(_QWORD *)(*(_QWORD *)a3 + 120);
  swift_beginAccess();
  sub_227D64AD8(v9, (uint64_t)v8);
  a1(v8);
  return sub_227D648C4((uint64_t)v8);
}

void sub_227D6470C()
{
  sub_227D64714();
}

void sub_227D64714()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_227E5FEAC();
  MEMORY[0x24BDAC7A8](v0, v1);
  type metadata accessor for CRDTModelFileSyncInfo();
}

uint64_t sub_227D6478C(uint64_t a1)
{
  char *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  char *v12;
  id v13;
  uint64_t v14;
  uint64_t v16;

  MEMORY[0x22E2AA7D4](&protocol conformance descriptor for CRDTModelFileSyncInfo<A>, a1);
  v6 = sub_227E5FDE0();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6, v8);
  v10 = (char *)&v16 - v9;
  sub_227D64888((uint64_t)v1);
  v11 = (void *)v2[12];
  v12 = (char *)v2 + *(_QWORD *)(*v2 + 192);
  swift_beginAccess();
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v12, v6);
  v13 = v11;
  sub_227E5FDB0();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  *(_QWORD *)v1 = v13;
  v14 = type metadata accessor for CRDTModelSyncVersion();
  return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 32))(&v1[*(int *)(v14 + 20)], v4, v3);
}

uint64_t sub_227D64888(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for CRDTModelSyncVersion();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_227D648C4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE v18[24];

  v3 = sub_227D68330(qword_253F3A090);
  MEMORY[0x24BDAC7A8](v3, v4);
  v6 = &v18[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for CRDTModelSyncVersion();
  v9 = MEMORY[0x24BDAC7A8](v7, v8);
  v11 = &v18[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v9, v12);
  v14 = &v18[-v13];
  v15 = v1 + *(_QWORD *)(*(_QWORD *)v1 + 120);
  swift_beginAccess();
  sub_227D64AD8(v15, (uint64_t)v14);
  swift_beginAccess();
  sub_227D64C48(a1, v15);
  swift_endAccess();
  sub_227D64AD8(v15, (uint64_t)v11);
  sub_227D52DBC(0, (unint64_t *)&qword_253F3B050);
  if ((sub_227E60350() & 1) != 0 && (sub_227E5FE94() & 1) != 0)
  {
    sub_227D64BC4((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for CRDTModelSyncVersion);
  }
  else
  {
    sub_227D64BC4((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for CRDTModelSyncVersion);
    v16 = (uint64_t)&v6[*(int *)(sub_227D68330(&qword_253F3A398) + 48)];
    sub_227D64AD8((uint64_t)v14, (uint64_t)v6);
    sub_227D64AD8(v15, v16);
    swift_storeEnumTagMultiPayload();
    sub_227D6FCFC((uint64_t)v6);
    sub_227D5809C((uint64_t)v6, qword_253F3A090);
  }
  sub_227D64BC4(a1, (uint64_t (*)(_QWORD))type metadata accessor for CRDTModelSyncVersion);
  return sub_227D64BC4((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for CRDTModelSyncVersion);
}

uint64_t sub_227D64AD8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CRDTModelSyncVersion();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for CRDTModelSyncVersion()
{
  uint64_t result;

  result = qword_253F3A3A0;
  if (!qword_253F3A3A0)
    return swift_getSingletonMetadata();
  return result;
}

void **initializeWithCopy for CRDTModelSyncVersion(void **a1, void **a2, uint64_t a3)
{
  void *v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);
  id v10;

  v4 = *a2;
  *a1 = *a2;
  v5 = *(int *)(a3 + 20);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_227E5FEAC();
  v9 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
  v10 = v4;
  v9(v6, v7, v8);
  return a1;
}

uint64_t sub_227D64BC4(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v3;

  v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t destroy for CRDTModelSyncVersion(id *a1, uint64_t a2)
{
  char *v4;
  uint64_t v5;

  v4 = (char *)a1 + *(int *)(a2 + 20);
  v5 = sub_227E5FEAC();
  return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

uint64_t sub_227D64C48(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CRDTModelSyncVersion();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

void **assignWithCopy for CRDTModelSyncVersion(void **a1, void **a2, uint64_t a3)
{
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;

  v6 = *a2;
  v7 = *a1;
  *a1 = *a2;
  v8 = v6;

  v9 = *(int *)(a3 + 20);
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  v12 = sub_227E5FEAC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 24))(v10, v11, v12);
  return a1;
}

uint64_t sub_227D64CFC()
{
  uint64_t v0;

  return sub_227D64D08(*(_QWORD **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
}

uint64_t sub_227D64D08(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t ObjectType;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD aBlock[6];

  v48 = a3;
  v49 = a4;
  v6 = sub_227E5F978();
  v46 = *(_QWORD *)(v6 - 8);
  v47 = v6;
  MEMORY[0x24BDAC7A8](v6, v7);
  v43 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_227E5F948();
  v44 = *(_QWORD *)(v9 - 8);
  v45 = v9;
  MEMORY[0x24BDAC7A8](v9, v10);
  v12 = (char *)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_227D68330(&qword_253F3A080);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(_QWORD *)(v14 + 64);
  v17 = MEMORY[0x24BDAC7A8](v13, v16);
  v18 = (char *)&v40 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17, v19);
  v21 = (char *)&v40 - v20;
  v22 = (uint64_t)a1 + *(_QWORD *)(*a1 + 120);
  swift_beginAccess();
  sub_227D5DF48(v22, (uint64_t)v21, &qword_253F398D0);
  swift_storeEnumTagMultiPayload();
  v23 = (char *)a1 + *(_QWORD *)(*a1 + 128);
  swift_beginAccess();
  if (MEMORY[0x22E2AA96C](v23))
  {
    v24 = *((_QWORD *)v23 + 1);
    ObjectType = swift_getObjectType();
    (*(void (**)(_QWORD *, uint64_t, uint64_t))(v24 + 8))(a1, ObjectType, v24);
    swift_unknownObjectRelease();
  }
  sub_227E5F93C();
  v26 = swift_allocObject();
  swift_weakInit();
  sub_227D5DF48((uint64_t)v21, (uint64_t)v18, &qword_253F3A080);
  v27 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  v42 = v21;
  v28 = (v15 + v27 + 7) & 0xFFFFFFFFFFFFFFF8;
  v29 = swift_allocObject();
  *(_QWORD *)(v29 + 16) = a2;
  v41 = a2;
  v30 = v48;
  *(_QWORD *)(v29 + 24) = v48;
  sub_227D5B0DC((uint64_t)v18, v29 + v27, &qword_253F3A080);
  *(_QWORD *)(v29 + v28) = v26;
  aBlock[4] = sub_227D5B8BC;
  aBlock[5] = v29;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_227D5A858;
  aBlock[3] = &unk_24F08F0D0;
  v31 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  v32 = v43;
  sub_227E5F960();
  MEMORY[0x22E2A991C](0, v32, v12, v31);
  _Block_release(v31);
  (*(void (**)(char *, uint64_t))(v46 + 8))(v32, v47);
  (*(void (**)(char *, uint64_t))(v44 + 8))(v12, v45);
  swift_release();
  swift_release();
  v33 = swift_allocObject();
  swift_weakInit();
  v34 = swift_allocObject();
  v35 = v49;
  swift_unknownObjectWeakInit();
  v36 = (_QWORD *)swift_allocObject();
  v36[2] = v33;
  v36[3] = v34;
  v37 = v41;
  v36[4] = v35;
  v36[5] = v37;
  v36[6] = v30;
  swift_beginAccess();
  swift_retain();
  swift_retain();
  swift_retain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v50 = a1[4];
  a1[4] = 0x8000000000000000;
  sub_227D65118((uint64_t)sub_227DFDF38, (uint64_t)v36, v35, isUniquelyReferenced_nonNull_native);
  a1[4] = v50;
  swift_bridgeObjectRelease();
  swift_endAccess();
  sub_227D5809C((uint64_t)v42, &qword_253F3A080);
  swift_release();
  return swift_release();
}

uint64_t sub_227D65118(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_227D5B120(a1, a2, a3, a4, (uint64_t (*)(void))sub_227DD2708, (void (*)(void))sub_227D5B604);
}

BOOL sub_227D6512C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return static ModelState.== infix(_:_:)(a1, a2, a3[2], a3[3], a3[4]);
}

uint64_t sub_227D6513C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  size_t v8;
  size_t v9;
  uint64_t v10;
  _BYTE *v11;
  _BYTE *v12;
  uint64_t v13;
  int v14;
  unsigned int (*v15)(_BYTE *, uint64_t, uint64_t);
  unsigned int v16;
  size_t v17;
  unsigned int v18;
  int v19;
  int v20;
  int v21;
  unsigned int v22;
  int v23;
  int v24;
  int v25;
  unsigned int v26;
  int v27;
  int v28;
  uint64_t v29;
  unsigned int v30;
  _BOOL8 v31;
  BOOL v32;
  unsigned int v33;
  uint64_t v34;
  _BOOL8 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  size_t v39;
  _QWORD *v40;
  _QWORD *v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  size_t v45;
  unint64_t v46;
  unsigned int v47;
  unint64_t v48;
  unsigned int v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t (*v53)(void);
  unsigned int v54;
  int v55;
  int v56;
  unsigned int v57;
  _QWORD *v58;
  void *v59;
  uint64_t (*v60)(void *, uint64_t, uint64_t);
  int v61;
  _QWORD *v62;
  unsigned int (*v63)(uint64_t, uint64_t, uint64_t);
  size_t v64;
  size_t v65;
  unint64_t v66;
  size_t v67;
  void *v68;
  const void *v69;
  uint64_t v71;
  size_t v72;
  uint64_t v73;
  uint64_t v74;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 24);
  v7(a1, a2, v5);
  v8 = *(_QWORD *)(v6 + 64);
  v74 = a1;
  v9 = v8 + a2;
  *(_BYTE *)(v8 + a1) = *(_BYTE *)(v8 + a2);
  v10 = *(unsigned __int8 *)(v6 + 80);
  v11 = (_BYTE *)((v10 + 1 + v8 + a1) & ~v10);
  v12 = (_BYTE *)((v10 + 1 + v9) & ~v10);
  v13 = *(unsigned int *)(v6 + 84);
  if (v13 <= 1)
  {
    if (v8 > 3)
      goto LABEL_3;
    v18 = ((1 << (8 * v8)) - v13 + 1) >> (8 * v8);
    if (v18 > 0xFFFE)
    {
      v14 = *(_DWORD *)&v11[v8];
      if (v14)
        goto LABEL_13;
    }
    else
    {
      if (v18 <= 0xFE)
      {
        if (!v18)
          goto LABEL_22;
LABEL_3:
        v14 = v11[v8];
        if (!v11[v8])
          goto LABEL_22;
LABEL_13:
        v19 = (v14 - 1) << (8 * v8);
        if (v8 > 3)
          v19 = 0;
        if ((_DWORD)v8)
        {
          if (v8 <= 3)
            v20 = v8;
          else
            v20 = 4;
          __asm { BR              X11 }
        }
        if (v19 + (_DWORD)v13 == -1)
        {
LABEL_24:
          if (v8 > 3)
            goto LABEL_25;
          v22 = ((1 << (8 * v8)) - v13 + 1) >> (8 * v8);
          if (v22 > 0xFFFE)
          {
            v21 = *(_DWORD *)&v12[v8];
            if (v21)
              goto LABEL_32;
          }
          else
          {
            if (v22 <= 0xFE)
            {
              if (!v22)
                goto LABEL_62;
LABEL_25:
              v21 = v12[v8];
              if (!v12[v8])
                goto LABEL_62;
LABEL_32:
              v23 = (v21 - 1) << (8 * v8);
              if (v8 > 3)
                v23 = 0;
              if ((_DWORD)v8)
              {
                if (v8 <= 3)
                  v24 = v8;
                else
                  v24 = 4;
                __asm { BR              X11 }
              }
              if ((_DWORD)v13 + v23 != -1)
              {
LABEL_65:
                (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v11, v5);
                v17 = v8;
                if (v13 > 1)
                  goto LABEL_77;
                goto LABEL_68;
              }
LABEL_85:
              v7((uint64_t)v11, (uint64_t)v12, v5);
              if (v13 > 1)
                goto LABEL_93;
              goto LABEL_86;
            }
            v21 = *(unsigned __int16 *)&v12[v8];
            if (*(_WORD *)&v12[v8])
              goto LABEL_32;
          }
LABEL_62:
          if (!(_DWORD)v13)
            goto LABEL_85;
          v15 = *(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v6 + 48);
          goto LABEL_64;
        }
LABEL_41:
        if (v8 > 3)
          goto LABEL_42;
        v26 = ((1 << (8 * v8)) - v13 + 1) >> (8 * v8);
        if (v26 > 0xFFFE)
        {
          v25 = *(_DWORD *)&v12[v8];
          if (v25)
            goto LABEL_49;
        }
        else
        {
          if (v26 <= 0xFE)
          {
            if (!v26)
              goto LABEL_58;
LABEL_42:
            v25 = v12[v8];
            if (!v12[v8])
              goto LABEL_58;
LABEL_49:
            v27 = (v25 - 1) << (8 * v8);
            if (v8 > 3)
              v27 = 0;
            if ((_DWORD)v8)
            {
              if (v8 <= 3)
                v28 = v8;
              else
                v28 = 4;
              __asm { BR              X11 }
            }
            if (v27 + (_DWORD)v13 == -1)
            {
LABEL_73:
              (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v6 + 16))(v11, v12, v5);
              if (v8 > 3)
              {
LABEL_74:
                v11[v8] = 0;
LABEL_86:
                v34 = 1;
                if (v8 > 3)
                {
LABEL_92:
                  v8 += v34;
                  goto LABEL_93;
                }
                v33 = ((1 << (8 * v8)) - v13 + 1) >> (8 * v8);
                if (v33 <= 0xFFFE)
                  goto LABEL_88;
LABEL_91:
                v34 = 4;
                goto LABEL_92;
              }
              v33 = ((1 << (8 * v8)) - v13 + 1) >> (8 * v8);
              if (v33 > 0xFFFE)
              {
                *(_DWORD *)&v11[v8] = 0;
                goto LABEL_91;
              }
              if (v33 > 0xFE)
              {
                *(_WORD *)&v11[v8] = 0;
              }
              else if (v33)
              {
                goto LABEL_74;
              }
LABEL_88:
              v35 = v33 != 0;
              v32 = v33 >= 0xFF;
              v34 = 2;
              if (!v32)
                v34 = v35;
              goto LABEL_92;
            }
LABEL_68:
            v29 = 1;
            if (v8 <= 3)
            {
              v30 = ((1 << (8 * v8)) - v13 + 1) >> (8 * v8);
              if (v30 > 0xFFFE)
              {
                v29 = 4;
              }
              else
              {
                v31 = v30 != 0;
                v32 = v30 >= 0xFF;
                v29 = 2;
                if (!v32)
                  v29 = v31;
              }
            }
            v17 = v29 + v8;
            goto LABEL_77;
          }
          v25 = *(unsigned __int16 *)&v12[v8];
          if (*(_WORD *)&v12[v8])
            goto LABEL_49;
        }
LABEL_58:
        if (!(_DWORD)v13 || !(*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v6 + 48))(v12, v13, v5))
          goto LABEL_73;
        goto LABEL_68;
      }
      v14 = *(unsigned __int16 *)&v11[v8];
      if (*(_WORD *)&v11[v8])
        goto LABEL_13;
    }
LABEL_22:
    if (!(_DWORD)v13
      || !(*(unsigned int (**)(size_t, _QWORD, uint64_t))(v6 + 48))((v10 + 1 + v8 + a1) & ~v10, *(unsigned int *)(v6 + 84), v5))
    {
      goto LABEL_24;
    }
    goto LABEL_41;
  }
  v15 = *(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v6 + 48);
  if (!v15(v11, *(unsigned int *)(v6 + 84), v5))
  {
LABEL_64:
    if (v15(v12, v13, v5))
      goto LABEL_65;
    goto LABEL_85;
  }
  v16 = v15(v12, v13, v5);
  v17 = v8;
  if (!v16)
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v6 + 16))(v11, v12, v5);
    goto LABEL_93;
  }
LABEL_77:
  memcpy(v11, v12, v17);
  if (v13 <= 1)
    goto LABEL_86;
LABEL_93:
  v36 = sub_227E5F27C();
  v37 = *(_QWORD *)(v36 - 8);
  v38 = *(unsigned __int8 *)(v37 + 80);
  v39 = (v38 | 7) + v8;
  v40 = (_QWORD *)((unint64_t)&v11[v39] & ~(v38 | 7));
  v41 = (_QWORD *)((unint64_t)&v12[v39] & ~(v38 | 7));
  v42 = *(unsigned int *)(v37 + 84);
  v43 = ~v38;
  v44 = (v38 + 32) & ~v38;
  v45 = *(_QWORD *)(v37 + 64);
  if ((v42 & 0x80000000) == 0)
  {
    v46 = v40[1];
    if (v46 >= 0xFFFFFFFF)
      LODWORD(v46) = -1;
    v47 = v46 + 1;
    v48 = v41[1];
    if (v48 >= 0xFFFFFFFF)
      LODWORD(v48) = -1;
    v49 = v48 + 1;
    if (v47 < 2)
    {
      if (v49 <= 1)
      {
        v50 = (_QWORD *)(((unint64_t)v41 + 23) & 0xFFFFFFFFFFFFFFF8);
        v51 = v38 + 16;
        v52 = ((unint64_t)v50 + v38 + 16) & v43;
        goto LABEL_103;
      }
      v73 = (v38 + 32) & ~v38;
      v51 = v38 + 16;
LABEL_116:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v66 = (v51 + (((unint64_t)v40 + 23) & 0xFFFFFFFFFFFFFFF8)) & v43;
      if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v37 + 48))(v66, 1, v36))
        (*(void (**)(unint64_t, uint64_t))(v37 + 8))(v66, v36);
      if ((_DWORD)v42)
        v67 = v45;
      else
        v67 = v45 + 1;
      v65 = v67 + v73;
      goto LABEL_122;
    }
    if (v49 <= 1)
    {
      v50 = (_QWORD *)(((unint64_t)v41 + 23) & 0xFFFFFFFFFFFFFFF8);
      v51 = v38 + 16;
      v52 = ((unint64_t)v50 + v38 + 16) & v43;
      goto LABEL_109;
    }
LABEL_111:
    if ((_DWORD)v42)
      v64 = v45;
    else
      v64 = v45 + 1;
    v65 = v64 + v44;
LABEL_122:
    v68 = v40;
    v69 = v41;
LABEL_129:
    memcpy(v68, v69, v65);
    return v74;
  }
  v72 = *(_QWORD *)(v37 + 64);
  v73 = (v38 + 32) & ~v38;
  v51 = v38 + 16;
  v53 = *(uint64_t (**)(void))(v37 + 48);
  v54 = ((uint64_t (*)(unint64_t, unint64_t, uint64_t))v53)((v38 + 16 + (((unint64_t)v40 + 23) & 0xFFFFFFFFFFFFFFF8)) & v43, v42, v36);
  v50 = (_QWORD *)(((unint64_t)v41 + 23) & 0xFFFFFFFFFFFFFFF8);
  v71 = v43;
  v55 = v42;
  v42 = ((unint64_t)v50 + v51) & v43;
  v56 = v55;
  v57 = v53();
  if (v54 < 2)
  {
    v52 = v42;
    LODWORD(v42) = v56;
    v43 = v71;
    v45 = v72;
    if (v57 <= 1)
    {
LABEL_103:
      *v40 = *v41;
      v40[1] = v41[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v58 = (_QWORD *)(((unint64_t)v40 + 23) & 0xFFFFFFFFFFFFFFF8);
      *v58 = *v50;
      v58[1] = v50[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v59 = (void *)(((unint64_t)v58 + v51) & v43);
      v60 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v37 + 48);
      LODWORD(v58) = v60(v59, 1, v36);
      v61 = v60((void *)v52, 1, v36);
      if ((_DWORD)v58)
      {
        if (!v61)
          goto LABEL_110;
      }
      else
      {
        if (!v61)
        {
          (*(void (**)(void *, uint64_t, uint64_t))(v37 + 24))(v59, v52, v36);
          return v74;
        }
        (*(void (**)(void *, uint64_t))(v37 + 8))(v59, v36);
      }
      goto LABEL_125;
    }
    goto LABEL_116;
  }
  v52 = v42;
  LODWORD(v42) = v56;
  v43 = v71;
  v45 = v72;
  v44 = v73;
  if (v57 > 1)
    goto LABEL_111;
LABEL_109:
  *v40 = *v41;
  v40[1] = v41[1];
  v62 = (_QWORD *)(((unint64_t)v40 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v62 = *v50;
  v62[1] = v50[1];
  v59 = (void *)(((unint64_t)v62 + v51) & v43);
  v63 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v37 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v63(v52, 1, v36))
  {
LABEL_125:
    if ((_DWORD)v42)
      v65 = v45;
    else
      v65 = v45 + 1;
    v68 = v59;
    v69 = (const void *)v52;
    goto LABEL_129;
  }
LABEL_110:
  (*(void (**)(void *, uint64_t, uint64_t))(v37 + 16))(v59, v52, v36);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v37 + 56))(v59, 0, 1, v36);
  return v74;
}

uint64_t assignWithCopy for ReadingHistoryModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_227D68330(&qword_253F3AF68);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_227D68330(&qword_253F3AF30);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  *(_QWORD *)(a1 + *(int *)(a3 + 24)) = *(_QWORD *)(a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

BOOL static ModelState.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  void (*v51)(char *);
  char v52;
  void (*v53)(char *, uint64_t);
  uint64_t v54;
  uint64_t v55;
  char v56;
  char *v57;
  char *v58;
  char *v59;
  char v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unsigned int (*v68)(uint64_t, uint64_t, uint64_t);
  BOOL v69;
  _QWORD *v71;
  _QWORD *v72;
  _QWORD *v73;
  _QWORD *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  char *v84;
  char *v85;
  uint64_t v86;

  v10 = type metadata accessor for CRDTModelRevisionInfo();
  v76 = *(_QWORD *)(v10 - 8);
  v77 = v10;
  MEMORY[0x24BDAC7A8](v10, v11);
  v73 = (_QWORD **)((char *)&v73 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = sub_227D68330(&qword_253F3A4F0);
  MEMORY[0x24BDAC7A8](v13, v14);
  v74 = (_QWORD **)((char *)&v73 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  v75 = sub_227D68330(&qword_253F3A500);
  MEMORY[0x24BDAC7A8](v75, v16);
  v78 = (uint64_t)&v73 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v79 = a5;
  v83 = a3;
  v80 = a4;
  v18 = type metadata accessor for ModelState(0, a3, a4, a5);
  v19 = *(_QWORD *)(v18 - 8);
  v21 = MEMORY[0x24BDAC7A8](v18, v20);
  v84 = (char *)&v73 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = MEMORY[0x24BDAC7A8](v21, v23);
  v85 = (char *)&v73 - v25;
  v27 = MEMORY[0x24BDAC7A8](v24, v26);
  v81 = (char *)&v73 - v28;
  v30 = MEMORY[0x24BDAC7A8](v27, v29);
  v82 = (char *)&v73 - v31;
  v33 = MEMORY[0x24BDAC7A8](v30, v32);
  v35 = (char *)&v73 - v34;
  v37 = MEMORY[0x24BDAC7A8](v33, v36);
  v39 = (char *)&v73 - v38;
  v41 = MEMORY[0x24BDAC7A8](v37, v40);
  v43 = (char *)&v73 - v42;
  v45 = MEMORY[0x24BDAC7A8](v41, v44);
  v47 = (char *)&v73 - v46;
  v48 = *(int *)(v45 + 44);
  v49 = a1;
  LODWORD(a1) = *(unsigned __int8 *)(a1 + v48);
  v50 = *(unsigned __int8 *)(a2 + v48);
  v51 = *(void (**)(char *))(v19 + 16);
  v86 = v49;
  v51((char *)&v73 - v46);
  ((void (*)(char *, uint64_t, uint64_t))v51)(v43, a2, v18);
  if ((_DWORD)a1 == v50)
    v52 = static ModelState.Source.== infix(_:_:)((uint64_t)&v47[*(int *)(v18 + 48)], (uint64_t)&v43[*(int *)(v18 + 48)], v83);
  else
    v52 = 0;
  v53 = *(void (**)(char *, uint64_t))(v19 + 8);
  v53(v43, v18);
  v53(v47, v18);
  v54 = v86;
  ((void (*)(char *, uint64_t, uint64_t))v51)(v39, v86, v18);
  v55 = a2;
  ((void (*)(char *, uint64_t, uint64_t))v51)(v35, a2, v18);
  if ((v52 & 1) == 0)
  {
    v53(v35, v18);
    v53(v39, v18);
    v57 = v82;
    ((void (*)(char *, uint64_t, uint64_t))v51)(v82, a2, v18);
    v58 = v81;
    ((void (*)(char *, uint64_t, uint64_t))v51)(v81, v54, v18);
    goto LABEL_11;
  }
  v56 = sub_227E5FD20();
  v53(v35, v18);
  v53(v39, v18);
  v57 = v82;
  ((void (*)(char *, uint64_t, uint64_t))v51)(v82, a2, v18);
  v58 = v81;
  ((void (*)(char *, uint64_t, uint64_t))v51)(v81, v54, v18);
  if ((v56 & 1) != 0)
  {
LABEL_11:
    v53(v58, v18);
    v53(v57, v18);
    v61 = v85;
    ((void (*)(char *, uint64_t, uint64_t))v51)(v85, v54, v18);
    v62 = v84;
    ((void (*)(char *, uint64_t, uint64_t))v51)(v84, v55, v18);
    goto LABEL_12;
  }
  v59 = v58;
  v60 = sub_227E5FD20();
  v53(v59, v18);
  v53(v57, v18);
  v61 = v85;
  ((void (*)(char *, uint64_t, uint64_t))v51)(v85, v54, v18);
  v62 = v84;
  ((void (*)(char *, uint64_t, uint64_t))v51)(v84, v55, v18);
  if ((v60 & 1) != 0)
  {
LABEL_12:
    v53(v62, v18);
    v53(v61, v18);
    return 0;
  }
  v63 = *(int *)(v18 + 52);
  v64 = (uint64_t)&v62[v63];
  v65 = v78;
  v66 = v78 + *(int *)(v75 + 48);
  sub_227D6E704((uint64_t)&v61[v63], v78);
  sub_227D6E704(v64, v66);
  v67 = v77;
  v68 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v76 + 48);
  if (v68(v65, 1, v77) != 1)
  {
    v71 = v74;
    sub_227D6E704(v65, (uint64_t)v74);
    if (v68(v66, 1, v67) != 1)
    {
      v72 = v73;
      sub_227DD7B1C(v66, (uint64_t)v73);
      v69 = _s13BookDataStore21CRDTModelRevisionInfoV2eeoiySbAC_ACtFZ_0(v71, v72);
      sub_227DD7BA4((uint64_t)v72);
      v53(v62, v18);
      v53(v61, v18);
      sub_227DD7BA4((uint64_t)v71);
      sub_227D5809C(v65, &qword_253F3A4F0);
      return v69;
    }
    v53(v62, v18);
    v53(v61, v18);
    sub_227DD7BA4((uint64_t)v71);
    goto LABEL_17;
  }
  v53(v62, v18);
  v53(v61, v18);
  if (v68(v66, 1, v67) != 1)
  {
LABEL_17:
    sub_227D5809C(v65, &qword_253F3A500);
    return 0;
  }
  sub_227D5809C(v65, &qword_253F3A4F0);
  return 1;
}

uint64_t sub_227D65F70@<X0>(uint64_t *a1@<X8>)
{
  return sub_227D65F84(a1);
}

uint64_t sub_227D65F84@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_227D6658C(*(_QWORD *)(v1 + 16), *(char **)(v1 + 24), a1);
}

uint64_t sub_227D65F9C()
{
  sub_227D51624(&qword_253F3A210, type metadata accessor for ReadingHistoryModel, (uint64_t)&protocol conformance descriptor for ReadingHistoryModel);
  return sub_227E5FA74();
}

unint64_t ReadingHistoryModel.description.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unsigned int (*v38)(char *, uint64_t, uint64_t);
  uint64_t *v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  _QWORD *v51;
  uint64_t *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t *v57;
  uint64_t v58;
  unint64_t v59;
  unint64_t v60;

  v0 = type metadata accessor for ReadingHistoryMonth(0);
  MEMORY[0x24BDAC7A8](v0, v1);
  v53 = (char *)&v51 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_227D68330(&qword_253F3AF68);
  v54 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3, v4);
  v6 = (char *)&v51 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_227D68330(&qword_253F3AF18);
  v56 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7, v8);
  v10 = (char *)&v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_227D68330((uint64_t *)&unk_253F3B020);
  v13 = MEMORY[0x24BDAC7A8](v11, v12);
  v15 = (char *)&v51 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v13, v16);
  v19 = (char *)&v51 - v18;
  MEMORY[0x24BDAC7A8](v17, v20);
  v57 = (uint64_t *)((char *)&v51 - v21);
  v22 = sub_227D68330(&qword_253F3B018);
  v23 = *(_QWORD *)(v22 - 8);
  v25 = MEMORY[0x24BDAC7A8](v22, v24);
  v51 = (_QWORD **)((char *)&v51 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0));
  v28 = MEMORY[0x24BDAC7A8](v25, v27);
  v30 = (_QWORD **)((char *)&v51 - v29);
  v32 = MEMORY[0x24BDAC7A8](v28, v31);
  v34 = (_QWORD **)((char *)&v51 - v33);
  MEMORY[0x24BDAC7A8](v32, v35);
  v52 = (uint64_t *)((char *)&v51 - v36);
  (*(void (**)(char *, uint64_t, uint64_t))(v54 + 16))(v6, v55, v3);
  sub_227D515E4(&qword_253F3AF60, &qword_253F3AF68, MEMORY[0x24BE184A8]);
  sub_227E60080();
  sub_227D515E4((unint64_t *)&unk_253F3AF08, &qword_253F3AF18, MEMORY[0x24BE18238]);
  sub_227E603A4();
  v37 = v23;
  v38 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48);
  if (v38(v19, 1, v22) == 1)
  {
    (*(void (**)(char *, uint64_t))(v56 + 8))(v10, v7);
    sub_227D5809C((uint64_t)v19, (uint64_t *)&unk_253F3B020);
    v39 = v57;
    (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(v37 + 56))(v57, 1, 1, v22);
  }
  else
  {
    v55 = v37;
    sub_227D5B0DC((uint64_t)v19, (uint64_t)v34, &qword_253F3B018);
    sub_227E603A4();
    while (v38(v15, 1, v22) != 1)
    {
      sub_227D5B0DC((uint64_t)v15, (uint64_t)v30, &qword_253F3B018);
      if (*v34 >= *v30)
      {
        sub_227D5809C((uint64_t)v30, &qword_253F3B018);
      }
      else
      {
        sub_227D5809C((uint64_t)v34, &qword_253F3B018);
        sub_227D5B0DC((uint64_t)v30, (uint64_t)v34, &qword_253F3B018);
      }
      sub_227E603A4();
    }
    (*(void (**)(char *, uint64_t))(v56 + 8))(v10, v7);
    sub_227D5809C((uint64_t)v15, (uint64_t *)&unk_253F3B020);
    v39 = v57;
    sub_227D5B0DC((uint64_t)v34, (uint64_t)v57, &qword_253F3B018);
    (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v55 + 56))(v39, 0, 1, v22);
  }
  v40 = 0xD00000000000001BLL;
  if (v38((char *)v39, 1, v22) == 1)
  {
    sub_227D5809C((uint64_t)v39, (uint64_t *)&unk_253F3B020);
  }
  else
  {
    v41 = *(int *)(v22 + 48);
    v42 = (uint64_t)v52;
    v43 = (char *)v52 + v41;
    v44 = (char *)v39 + v41;
    v45 = *v39;
    *v52 = *v39;
    v46 = sub_227D68330((uint64_t *)&unk_253F3AFB0);
    v47 = *(_QWORD *)(v46 - 8);
    (*(void (**)(char *, char *, uint64_t))(v47 + 32))(v43, v44, v46);
    v59 = 0;
    v60 = 0xE000000000000000;
    sub_227E60494();
    swift_bridgeObjectRelease();
    v59 = 0xD000000000000020;
    v60 = 0x8000000227E6CBA0;
    v58 = v45;
    sub_227E60674();
    sub_227E6002C();
    swift_bridgeObjectRelease();
    sub_227E6002C();
    v48 = (char *)v51 + *(int *)(v22 + 48);
    *v51 = v45;
    (*(void (**)(char *, char *, uint64_t))(v47 + 16))(v48, v43, v46);
    v49 = (uint64_t)v53;
    MEMORY[0x22E2A9430](v46);
    (*(void (**)(char *, uint64_t))(v47 + 8))(v48, v46);
    sub_227E0B0D8(7, 0);
    sub_227D64BC4(v49, type metadata accessor for ReadingHistoryMonth);
    sub_227E6002C();
    swift_bridgeObjectRelease();
    sub_227E6002C();
    v40 = v59;
    sub_227D5809C(v42, &qword_253F3B018);
  }
  return v40;
}

uint64_t storeEnumTagSinglePayload for ReadingHistoryMonth()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_227D6658C@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  unsigned int (*v32)(char *, uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(char *, uint64_t);
  uint64_t result;
  double v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  BOOL v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;

  v51 = a3;
  v53 = a2;
  v52 = sub_227D68330(&qword_253F3AEE0);
  v50 = *(_QWORD *)(v52 - 8);
  MEMORY[0x24BDAC7A8](v52, v4);
  v49 = (char *)&v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_227E5FE7C();
  v46 = *(_QWORD *)(v6 - 8);
  v47 = v6;
  MEMORY[0x24BDAC7A8](v6, v7);
  v9 = (char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for ReadingHistoryModel(0);
  MEMORY[0x24BDAC7A8](v10, v11);
  v13 = (char *)&v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_227D68330(&qword_253F39F90);
  v16 = MEMORY[0x24BDAC7A8](v14, v15);
  v18 = (char *)&v46 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = MEMORY[0x24BDAC7A8](v16, v19);
  v22 = (char *)&v46 - v21;
  v24 = MEMORY[0x24BDAC7A8](v20, v23);
  v26 = (char *)&v46 - v25;
  MEMORY[0x24BDAC7A8](v24, v27);
  v29 = (char *)&v46 - v28;
  v48 = a1;
  v30 = a1 + OBJC_IVAR____TtC13BookDataStore23ReadingHistoryDataStore__state;
  swift_beginAccess();
  sub_227D5DFFC(v30, (uint64_t)v13, type metadata accessor for ReadingHistoryModel);
  ReadingHistoryModel.readingHistoryDay(for:)((uint64_t)v29);
  sub_227D64BC4((uint64_t)v13, type metadata accessor for ReadingHistoryModel);
  sub_227D5DF48((uint64_t)v29, (uint64_t)v26, &qword_253F39F90);
  v31 = type metadata accessor for ReadingHistoryDay(0);
  v32 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 48);
  if (v32(v26, 1, v31) == 1)
  {
    sub_227D5809C((uint64_t)v26, &qword_253F39F90);
    v33 = 0;
  }
  else
  {
    v53 = v18;
    v35 = v46;
    v34 = v47;
    (*(void (**)(char *, char *, uint64_t))(v46 + 16))(v9, v26, v47);
    sub_227D64BC4((uint64_t)v26, type metadata accessor for ReadingHistoryDay);
    v33 = sub_227E5FE58();
    v36 = *(void (**)(char *, uint64_t))(v35 + 8);
    v18 = v53;
    v36(v9, v34);
  }
  sub_227D5DF48((uint64_t)v29, (uint64_t)v22, &qword_253F39F90);
  if (v32(v22, 1, v31) != 1)
  {
    v40 = v49;
    v41 = v50;
    v42 = v52;
    (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v49, &v22[*(int *)(v31 + 20)], v52);
    sub_227D64BC4((uint64_t)v22, type metadata accessor for ReadingHistoryDay);
    sub_227E5F984();
    (*(void (**)(char *, uint64_t))(v41 + 8))(v40, v42);
    v39 = v54;
    goto LABEL_10;
  }
  result = sub_227D5809C((uint64_t)v22, &qword_253F39F90);
  v38 = *(double *)(v48 + 136);
  if ((~*(_QWORD *)&v38 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_15;
  }
  if (v38 <= -9.22337204e18)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if (v38 >= 9.22337204e18)
  {
LABEL_16:
    __break(1u);
    return result;
  }
  v39 = (uint64_t)v38;
LABEL_10:
  sub_227D5DF48((uint64_t)v29, (uint64_t)v18, &qword_253F39F90);
  if (v32(v18, 1, v31) == 1)
  {
    sub_227D5809C((uint64_t)v29, &qword_253F39F90);
    result = sub_227D5809C((uint64_t)v18, &qword_253F39F90);
    v43 = 0;
  }
  else
  {
    v44 = sub_227E5FE58();
    sub_227E5F984();
    v43 = v44 >= v54;
    sub_227D5809C((uint64_t)v29, &qword_253F39F90);
    result = sub_227D64BC4((uint64_t)v18, type metadata accessor for ReadingHistoryDay);
  }
  v45 = v51;
  *v51 = v33;
  v45[1] = v39;
  *((_BYTE *)v45 + 16) = v43;
  return result;
}

uint64_t getEnumTagSinglePayload for ReadingHistoryDay()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t type metadata accessor for ReadingHistoryModel(uint64_t a1)
{
  return sub_227D5DFC8(a1, qword_253F3A250);
}

uint64_t sub_227D669B4(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))();
  return swift_bridgeObjectRelease();
}

unint64_t sub_227D669F4(unint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  void (*v5)(unint64_t, uint64_t);
  uint64_t v6;
  unint64_t v7;
  unsigned int v8;
  int v9;
  unsigned int v10;
  int v11;
  int v12;
  uint64_t v13;
  unsigned int v14;
  _BOOL8 v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t result;
  unint64_t v24;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(void (**)(unint64_t, uint64_t))(v4 + 8);
  v5(a1, v3);
  v6 = *(_QWORD *)(v4 + 64);
  v7 = (a1 + v6 + *(unsigned __int8 *)(v4 + 80) + 1) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v8 = *(_DWORD *)(v4 + 84);
  if (v8 > 1)
  {
LABEL_20:
    if ((*(unsigned int (**)(unint64_t, _QWORD, uint64_t))(v4 + 48))(v7, *(unsigned int *)(v4 + 84), v3))
    {
      goto LABEL_22;
    }
    goto LABEL_21;
  }
  if (v6 <= 3)
  {
    v10 = (~(-1 << (8 * v6)) - v8 + 2) >> (8 * v6);
    if (v10 > 0xFFFE)
    {
      v9 = *(_DWORD *)(v7 + v6);
      if (!v9)
        goto LABEL_19;
      goto LABEL_10;
    }
    if (v10 > 0xFE)
    {
      v9 = *(unsigned __int16 *)(v7 + v6);
      if (!*(_WORD *)(v7 + v6))
        goto LABEL_19;
      goto LABEL_10;
    }
    if (!v10)
    {
LABEL_19:
      if (v8)
        goto LABEL_20;
LABEL_21:
      v5(v7, v3);
      goto LABEL_22;
    }
  }
  v9 = *(unsigned __int8 *)(v7 + v6);
  if (!*(_BYTE *)(v7 + v6))
    goto LABEL_19;
LABEL_10:
  v11 = (v9 - 1) << (8 * v6);
  if (v6 > 3)
    v11 = 0;
  if ((_DWORD)v6)
  {
    if (v6 <= 3)
      v12 = *(_QWORD *)(v4 + 64);
    else
      v12 = 4;
    __asm { BR              X11 }
  }
  if (v8 + v11 == -1)
    goto LABEL_21;
LABEL_22:
  if (v8 <= 1)
  {
    if (v6 <= 3)
    {
      v14 = (~(-1 << (8 * v6)) - v8 + 2) >> (8 * v6);
      if (v14 > 0xFFFE)
      {
        v13 = 4;
      }
      else
      {
        v15 = v14 != 0;
        v16 = v14 >= 0xFF;
        v13 = 2;
        if (!v16)
          v13 = v15;
      }
    }
    else
    {
      v13 = 1;
    }
    v6 += v13;
  }
  v17 = sub_227E5F27C();
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(unsigned __int8 *)(v18 + 80);
  v20 = v6 + (v19 | 7) + v7;
  v21 = v20 & ~(v19 | 7);
  v22 = ~v19;
  if ((*(_DWORD *)(v18 + 84) & 0x80000000) != 0)
  {
    v24 = (v19 + ((v21 + 23) & 0xFFFFFFFFFFFFFFF8) + 16) & v22;
    result = (*(uint64_t (**)(unint64_t))(v18 + 48))(v24);
    if (result > 1)
      return result;
    goto LABEL_37;
  }
  result = *(_QWORD *)((v20 & ~(v19 | 7)) + 8);
  LODWORD(v20) = -1;
  if (result < 0xFFFFFFFF)
    v20 = *(_QWORD *)(v21 + 8);
  if ((v20 + 1) <= 1)
  {
    v24 = (v19 + ((v21 + 23) & 0xFFFFFFFFFFFFFFF8) + 16) & v22;
LABEL_37:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v18 + 48))(v24, 1, v17);
    if (!(_DWORD)result)
      return (*(uint64_t (**)(unint64_t, uint64_t))(v18 + 8))(v24, v17);
  }
  return result;
}

uint64_t destroy for ReadingHistoryModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_227D68330(&qword_253F3AF68);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  v6 = sub_227D68330(&qword_253F3AF30);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  return swift_bridgeObjectRelease();
}

uint64_t ReadingHistoryModel.readingHistoryDay(for:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  void (*v23)(char *, _QWORD, uint64_t);
  uint64_t v24;
  void (*v25)(char *, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t result;
  uint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;

  v53 = a1;
  v1 = sub_227D68330(&qword_253F3AF40);
  v49 = *(_QWORD *)(v1 - 8);
  v50 = v1;
  MEMORY[0x24BDAC7A8](v1, v2);
  v48 = (char *)&v46 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for ReadingHistoryMonth(0);
  MEMORY[0x24BDAC7A8](v4, v5);
  v46 = (char *)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_227D68330((uint64_t *)&unk_253F3AFC0);
  MEMORY[0x24BDAC7A8](v7, v8);
  v10 = (char *)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_227D68330(&qword_253F3AF98);
  MEMORY[0x24BDAC7A8](v11, v12);
  v47 = (char *)&v46 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_227E5F2E8();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14, v16);
  v18 = (char *)&v46 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_227E5F300();
  v51 = *(_QWORD *)(v19 - 8);
  v52 = v19;
  MEMORY[0x24BDAC7A8](v19, v20);
  v22 = (char *)&v46 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_227E5F288();
  v23 = *(void (**)(char *, _QWORD, uint64_t))(v15 + 104);
  v23(v18, *MEMORY[0x24BDCF240], v14);
  v24 = sub_227E5F2F4();
  v25 = *(void (**)(char *, uint64_t))(v15 + 8);
  v25(v18, v14);
  v23(v18, *MEMORY[0x24BDCF250], v14);
  v26 = sub_227E5F2F4();
  v25(v18, v14);
  v23(v18, *MEMORY[0x24BDCF220], v14);
  v27 = sub_227E5F2F4();
  result = ((uint64_t (*)(char *, uint64_t))v25)(v18, v14);
  v29 = 100 * v24;
  if ((unsigned __int128)(v24 * (__int128)100) >> 64 != (100 * v24) >> 63)
  {
    __break(1u);
    goto LABEL_11;
  }
  v30 = __OFADD__(v29, v26);
  v31 = v29 + v26;
  if (v30)
  {
LABEL_11:
    __break(1u);
    return result;
  }
  v54 = v31;
  sub_227D68330(&qword_253F3AF68);
  sub_227E5FCB4();
  v32 = sub_227D68330((uint64_t *)&unk_253F3AFB0);
  v33 = *(_QWORD *)(v32 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v10, 1, v32) == 1)
  {
    (*(void (**)(char *, uint64_t))(v51 + 8))(v22, v52);
    v34 = (uint64_t *)&unk_253F3AFC0;
    v35 = (uint64_t)v10;
LABEL_7:
    sub_227D5809C(v35, v34);
    v43 = type metadata accessor for ReadingHistoryDay(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 56))(v53, 1, 1, v43);
  }
  v36 = (uint64_t)v46;
  MEMORY[0x22E2A9430](v32);
  (*(void (**)(char *, uint64_t))(v33 + 8))(v10, v32);
  v37 = v48;
  v38 = v49;
  v39 = v50;
  (*(void (**)(char *, uint64_t, uint64_t))(v49 + 16))(v48, v36, v50);
  sub_227D64BC4(v36, type metadata accessor for ReadingHistoryMonth);
  v54 = v27;
  v40 = v47;
  sub_227E5FCB4();
  (*(void (**)(char *, uint64_t))(v38 + 8))(v37, v39);
  v41 = sub_227D68330(&qword_253F3AF90);
  v42 = *(_QWORD *)(v41 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48))(v40, 1, v41) == 1)
  {
    (*(void (**)(char *, uint64_t))(v51 + 8))(v22, v52);
    v34 = &qword_253F3AF98;
    v35 = (uint64_t)v40;
    goto LABEL_7;
  }
  v44 = v53;
  MEMORY[0x22E2A9430](v41);
  (*(void (**)(char *, uint64_t))(v51 + 8))(v22, v52);
  (*(void (**)(char *, uint64_t))(v42 + 8))(v40, v41);
  v45 = type metadata accessor for ReadingHistoryDay(0);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 56))(v44, 0, 1, v45);
}

uint64_t getEnumTagSinglePayload for ReadingHistoryMonth()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t type metadata accessor for ReadingHistoryDay(uint64_t a1)
{
  return sub_227D5DFC8(a1, qword_253F39F50);
}

uint64_t type metadata accessor for ReadingHistoryMonth(uint64_t a1)
{
  return sub_227D5DFC8(a1, qword_253F3A300);
}

uint64_t storeEnumTagSinglePayload for ReadingHistoryDay()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_227D6717C(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x22E2AA7C8](255, (char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

uint64_t sub_227D67EF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  size_t v8;
  size_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  int v14;
  unsigned int v15;
  int v16;
  int v17;
  uint64_t v18;
  unsigned int v19;
  _BOOL8 v20;
  BOOL v21;
  unsigned int v22;
  uint64_t v23;
  _BOOL8 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  size_t v28;
  _QWORD *v29;
  unint64_t v30;
  _QWORD *v31;
  int v32;
  uint64_t v33;
  size_t v34;
  unint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  unsigned int v39;
  _QWORD *v40;
  void *v41;
  unsigned int (*v42)(uint64_t, uint64_t, uint64_t);
  size_t v43;
  void *v44;
  const void *v45;
  size_t v46;
  size_t v48;
  uint64_t v49;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
  v7(a1, a2, v5);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = v8 + a2;
  *(_BYTE *)(v8 + a1) = *(_BYTE *)(v8 + a2);
  v10 = *(unsigned __int8 *)(v6 + 80);
  v11 = (char *)((v10 + 1 + v8 + a1) & ~v10);
  v12 = (char *)((v10 + 1 + v9) & ~v10);
  v13 = *(unsigned int *)(v6 + 84);
  v49 = a1;
  if (v13 > 1)
  {
LABEL_20:
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v12, v13, v5))
    {
      if (v13 >= 2)
      {
        memcpy(v11, v12, v8);
        goto LABEL_47;
      }
      goto LABEL_27;
    }
    v7((uint64_t)v11, (uint64_t)v12, v5);
    if (v13 > 1)
      goto LABEL_47;
    if (v8 > 3)
    {
LABEL_36:
      v11[v8] = 0;
      goto LABEL_39;
    }
LABEL_33:
    v22 = ((1 << (8 * v8)) - v13 + 1) >> (8 * v8);
    if (v22 > 0xFFFE)
    {
      *(_DWORD *)&v11[v8] = 0;
      v23 = 4;
      goto LABEL_46;
    }
    if (v22 > 0xFE)
    {
      *(_WORD *)&v11[v8] = 0;
      goto LABEL_44;
    }
    if (!v22)
      goto LABEL_44;
    goto LABEL_36;
  }
  if (v8 <= 3)
  {
    v15 = ((1 << (8 * v8)) - v13 + 1) >> (8 * v8);
    if (v15 > 0xFFFE)
    {
      v14 = *(_DWORD *)&v12[v8];
      if (!v14)
        goto LABEL_19;
      goto LABEL_10;
    }
    if (v15 > 0xFE)
    {
      v14 = *(unsigned __int16 *)&v12[v8];
      if (!*(_WORD *)&v12[v8])
        goto LABEL_19;
      goto LABEL_10;
    }
    if (!v15)
    {
LABEL_19:
      if ((_DWORD)v13)
        goto LABEL_20;
LABEL_32:
      v7((v10 + 1 + v8 + a1) & ~v10, (uint64_t)v12, v5);
      if (v8 > 3)
        goto LABEL_36;
      goto LABEL_33;
    }
  }
  v14 = v12[v8];
  if (!v12[v8])
    goto LABEL_19;
LABEL_10:
  v16 = (v14 - 1) << (8 * v8);
  if (v8 > 3)
    v16 = 0;
  if ((_DWORD)v8)
  {
    if (v8 <= 3)
      v17 = v8;
    else
      v17 = 4;
    __asm { BR              X11 }
  }
  if (v16 + (_DWORD)v13 == -1)
    goto LABEL_32;
LABEL_27:
  v18 = 1;
  if (v8 <= 3)
  {
    v19 = ((1 << (8 * v8)) - v13 + 1) >> (8 * v8);
    if (v19 > 0xFFFE)
    {
      v18 = 4;
    }
    else
    {
      v20 = v19 != 0;
      v21 = v19 >= 0xFF;
      v18 = 2;
      if (!v21)
        v18 = v20;
    }
  }
  memcpy(v11, v12, v18 + v8);
LABEL_39:
  v23 = 1;
  if (v8 <= 3)
  {
    v22 = ((1 << (8 * v8)) - v13 + 1) >> (8 * v8);
    if (v22 > 0xFFFE)
    {
      v23 = 4;
      goto LABEL_46;
    }
LABEL_44:
    v24 = v22 != 0;
    v21 = v22 >= 0xFF;
    v23 = 2;
    if (!v21)
      v23 = v24;
  }
LABEL_46:
  v8 += v23;
LABEL_47:
  v25 = sub_227E5F27C();
  v26 = *(_QWORD *)(v25 - 8);
  v27 = *(unsigned __int8 *)(v26 + 80);
  v28 = (v27 | 7) + v8;
  v29 = (_QWORD *)((unint64_t)&v11[v28] & ~(v27 | 7));
  v30 = (unint64_t)&v12[v28];
  v31 = (_QWORD *)(v30 & ~(v27 | 7));
  v32 = *(_DWORD *)(v26 + 84);
  v33 = ~v27;
  v34 = *(_QWORD *)(v26 + 64);
  if (v32 < 0)
  {
    v36 = (_QWORD *)(((unint64_t)v31 + 23) & 0xFFFFFFFFFFFFFFF8);
    v37 = v27 + 16;
    v38 = ((unint64_t)v36 + v27 + 16) & v33;
    v48 = *(_QWORD *)(v26 + 64);
    v39 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v26 + 48))(v38, *(unsigned int *)(v26 + 84), v25);
    v34 = v48;
    if (v39 <= 1)
      goto LABEL_53;
LABEL_58:
    if (v32)
      v46 = v34;
    else
      v46 = v34 + 1;
    v43 = v46 + ((v27 + 32) & ~v27);
    v44 = v29;
    v45 = v31;
    goto LABEL_62;
  }
  v35 = *(_QWORD *)((v30 & ~(v27 | 7)) + 8);
  if (v35 >= 0xFFFFFFFF)
    LODWORD(v35) = -1;
  if ((v35 + 1) > 1)
    goto LABEL_58;
  v48 = *(_QWORD *)(v26 + 64);
  v36 = (_QWORD *)(((unint64_t)v31 + 23) & 0xFFFFFFFFFFFFFFF8);
  v37 = v27 + 16;
  v38 = ((unint64_t)v36 + v27 + 16) & v33;
LABEL_53:
  *v29 = *v31;
  v29[1] = v31[1];
  v40 = (_QWORD *)(((unint64_t)v29 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v40 = *v36;
  v40[1] = v36[1];
  v41 = (void *)(((unint64_t)v40 + v37) & v33);
  v42 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v26 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (!v42(v38, 1, v25))
  {
    (*(void (**)(void *, uint64_t, uint64_t))(v26 + 16))(v41, v38, v25);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v41, 0, 1, v25);
    return v49;
  }
  if (v32)
    v43 = v48;
  else
    v43 = v48 + 1;
  v44 = v41;
  v45 = (const void *)v38;
LABEL_62:
  memcpy(v44, v45, v43);
  return v49;
}

uint64_t sub_227D68330(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x22E2AA7BC]((char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for ReadingHistoryModel()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_227D6837C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD v6[3];

  v6[0] = a2;
  v6[1] = a3;
  v6[2] = a4;
  return MEMORY[0x22E2AA750](a1, v6, a5);
}

uint64_t initializeWithCopy for ReadingHistoryModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_227D68330(&qword_253F3AF68);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_227D68330(&qword_253F3AF30);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  *(_QWORD *)(a1 + *(int *)(a3 + 24)) = *(_QWORD *)(a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRetain();
  return a1;
}

id BDSCloudKitLog()
{
  if (qword_253F3C730 != -1)
    dispatch_once(&qword_253F3C730, &unk_24F08A010);
  return (id)qword_253F3C728;
}

uint64_t type metadata accessor for ObservableContainer.Event(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_227D6837C(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ObservableContainer.Event);
}

uint64_t getEnumTagSinglePayload for CRDTModelRevisionInfo()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t type metadata accessor for CRDTModelRevisionInfo()
{
  uint64_t result;

  result = qword_253F3A4B0;
  if (!qword_253F3A4B0)
    return swift_getSingletonMetadata();
  return result;
}

id BDSServiceXPCNotificationLog()
{
  if (qword_253F3C608 != -1)
    dispatch_once(&qword_253F3C608, &unk_24F08A0F0);
  return (id)qword_253F3C600;
}

id BDSCloudKitSyncLog()
{
  if (qword_253F3B150 != -1)
    dispatch_once(&qword_253F3B150, &unk_24F08A050);
  return (id)qword_253F3B148;
}

uint64_t BDSXPCNotificationsEnabled()
{
  return _os_feature_enabled_impl();
}

void bds_dispatch_service(void *a1, void *a2, void *a3)
{
  sub_227D694C4(a1, a2, a3, 3);
}

id BDSServiceLog()
{
  if (qword_253F3C5F8 != -1)
    dispatch_once(&qword_253F3C5F8, &unk_24F08A0D0);
  return (id)qword_253F3C5F0;
}

void sub_227D688D8(uint64_t a1)
{
  const char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id WeakRetained;
  void *v7;
  BDSICloudIdentityToken *v8;
  const char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  const char *v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  const char *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  const char *v22;
  uint64_t v23;
  uint64_t v24;
  const char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  const char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  void *v35;
  const char *v36;
  uint64_t v37;
  const char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  const char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  const char *v48;
  uint64_t v49;
  NSObject *v50;
  const char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  int v56;
  uint64_t v57;
  __int16 v58;
  void *v59;
  uint64_t v60;

  v60 = *MEMORY[0x24BDAC8D0];
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    objc_msgSend_currentToken(*(void **)(a1 + 32), v2, v3, v4, v5);
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v8 = [BDSICloudIdentityToken alloc];
    objc_msgSend_plistContents(WeakRetained, v9, v10, v11, v12);
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_objectForKey_(v13, v14, (uint64_t)CFSTR("BDSICloudIdentityTokenTrackerToken"), v15, v16);
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    v21 = (void *)objc_msgSend_initFromArchive_(v8, v18, (uint64_t)v17, v19, v20);

    if (v7 != v21 && (objc_msgSend_isEqual_(v7, v22, (uint64_t)v21, v23, v24) & 1) == 0)
    {
      objc_msgSend_plistContents(WeakRetained, v25, v26, v27, v28);
      v29 = (void *)objc_claimAutoreleasedReturnValue();
      v34 = v29;
      if (v7)
      {
        objc_msgSend_token(v7, v30, v31, v32, v33);
        v35 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend_setObject_forKey_(v34, v36, (uint64_t)v35, (uint64_t)CFSTR("BDSICloudIdentityTokenTrackerToken"), v37);

      }
      else
      {
        objc_msgSend_removeObjectForKey_(v29, v30, (uint64_t)CFSTR("BDSICloudIdentityTokenTrackerToken"), v32, v33);
      }

      objc_msgSend_plistContents(WeakRetained, v38, v39, v40, v41);
      v42 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend_plistURL(WeakRetained, v43, v44, v45, v46);
      v47 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend_writeToURL_atomically_(v42, v48, (uint64_t)v47, 1, v49);

      BDSCloudKitLog();
      v50 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v50, OS_LOG_TYPE_DEFAULT))
      {
        objc_msgSend_plistURL(WeakRetained, v51, v52, v53, v54);
        v55 = (void *)objc_claimAutoreleasedReturnValue();
        v56 = 141558274;
        v57 = 1752392040;
        v58 = 2112;
        v59 = v55;
        _os_log_impl(&dword_227D4F000, v50, OS_LOG_TYPE_DEFAULT, "Done acknowledge iCloud identity: %{mask.hash}@", (uint8_t *)&v56, 0x16u);

      }
    }

  }
}

void sub_227D68ACC(uint64_t a1)
{
  const char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id WeakRetained;
  void *v7;
  const char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  const char *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  BDSICloudIdentityToken *v17;
  const char *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  const char *v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  char v26;
  NSObject *v27;
  const __CFString *v28;
  int v29;
  const __CFString *v30;
  __int16 v31;
  void *v32;
  __int16 v33;
  void *v34;
  uint64_t v35;

  v35 = *MEMORY[0x24BDAC8D0];
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  if (WeakRetained)
  {
    objc_msgSend_currentToken(*(void **)(a1 + 32), v2, v3, v4, v5);
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_plistContents(WeakRetained, v8, v9, v10, v11);
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_objectForKey_(v12, v13, (uint64_t)CFSTR("BDSICloudIdentityTokenTrackerToken"), v14, v15);
    v16 = (void *)objc_claimAutoreleasedReturnValue();

    v17 = [BDSICloudIdentityToken alloc];
    v21 = (void *)objc_msgSend_initFromArchive_(v17, v18, (uint64_t)v16, v19, v20);
    v25 = v21;
    if (v21)
      v26 = objc_msgSend_isEqual_(v21, v22, (uint64_t)v7, v23, v24) ^ 1;
    else
      v26 = 0;
    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = v26;
    BDSCloudKitLog();
    v27 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v27, OS_LOG_TYPE_INFO))
    {
      if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24))
        v28 = CFSTR("YES");
      else
        v28 = CFSTR("NO");
      v29 = 138543874;
      v30 = v28;
      v31 = 2114;
      v32 = v25;
      v33 = 2114;
      v34 = v7;
      _os_log_impl(&dword_227D4F000, v27, OS_LOG_TYPE_INFO, "BDSICloudIdentityTokenTracker didUnacknowledgediCloudLogoutOccur=%{public}@ l=%{public}@ c=%{public}@", (uint8_t *)&v29, 0x20u);
    }

  }
}

id BDSCloudKitAudiobookLog()
{
  if (qword_253F3C638 != -1)
    dispatch_once(&qword_253F3C638, &unk_24F08A070);
  return (id)qword_253F3C630;
}

uint64_t sub_227D69294(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t result;

  result = objc_msgSend_dq_isCloudKitEnabled(*(void **)(a1 + 32), a2, a3, a4, a5);
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = result;
  return result;
}

void sub_227D694C4(void *a1, void *a2, void *a3, uint64_t a4)
{
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  const char *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  void *v17;
  void *v18;
  _QWORD v19[4];
  id v20;
  id v21;
  id v22;
  uint64_t v23;

  v7 = a1;
  v8 = a2;
  v9 = a3;
  v19[0] = MEMORY[0x24BDAC760];
  v19[1] = 3221225472;
  v19[2] = sub_227D9B038;
  v19[3] = &unk_24F08A658;
  v23 = a4;
  v20 = v7;
  v21 = v9;
  v10 = v8;
  v22 = v10;
  v11 = v7;
  v12 = v9;
  objc_msgSend_remoteObjectProxyWithErrorHandler_(v11, v13, (uint64_t)v19, v14, v15);
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  v17 = _Block_copy(v10);
  v18 = v17;
  if (v17)
    (*((void (**)(void *, void *))v17 + 2))(v17, v16);

}

uint64_t sub_227D695C8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

void sub_227D695F0()
{
  os_log_t v0;
  void *v1;

  v0 = os_log_create("com.apple.iBooks.BookDataStore", "BookDataStore.Service.XPCNotification");
  v1 = (void *)qword_253F3C600;
  qword_253F3C600 = (uint64_t)v0;

}

void sub_227D69620()
{
  os_log_t v0;
  void *v1;

  v0 = os_log_create("com.apple.iBooks.BookDataStore", "BookDataStore.Service");
  v1 = (void *)qword_253F3C5F0;
  qword_253F3C5F0 = (uint64_t)v0;

}

void sub_227D69650()
{
  os_log_t v0;
  void *v1;

  v0 = os_log_create("com.apple.iBooks.BookDataStore", "BookDataStore.CloudKitSync");
  v1 = (void *)qword_253F3B148;
  qword_253F3B148 = (uint64_t)v0;

}

void sub_227D69680()
{
  os_log_t v0;
  void *v1;

  v0 = os_log_create("com.apple.iBooks.BookDataStore", "BookDataStore.CloudKit");
  v1 = (void *)qword_253F3C728;
  qword_253F3C728 = (uint64_t)v0;

}

void sub_227D696B0()
{
  os_log_t v0;
  void *v1;

  v0 = os_log_create("com.apple.iBooks.BookDataStore", "BookDataStore.CloudKitAudiobook");
  v1 = (void *)qword_253F3C630;
  qword_253F3C630 = (uint64_t)v0;

}

void sub_227D696E0(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  const char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  const char *v13;
  uint64_t v14;
  uint64_t v15;
  char isEqualToString;
  void *v17;
  NSObject *v18;
  const char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  const char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  void *v30;
  const char *v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  const char *v35;
  uint64_t v36;
  uint64_t v37;
  const char *v38;
  uint64_t v39;
  uint64_t v40;
  const char *v41;
  uint64_t v42;
  uint64_t v43;
  const char *v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  void *v48;
  id v49;
  uint8_t buf[4];
  void *v51;
  __int16 v52;
  uint64_t v53;
  uint64_t v54;

  v54 = *MEMORY[0x24BDAC8D0];
  objc_msgSend_containerIdentifier(*(void **)(a1 + 32), a2, a3, a4, a5);
  v6 = objc_claimAutoreleasedReturnValue();
  if (v6
    && (v11 = (void *)v6,
        objc_msgSend_containerIdentifier(*(void **)(a1 + 32), v7, v8, v9, v10),
        v12 = (void *)objc_claimAutoreleasedReturnValue(),
        isEqualToString = objc_msgSend_isEqualToString_(v12, v13, *(_QWORD *)(a1 + 40), v14, v15),
        v12,
        v11,
        (isEqualToString & 1) == 0))
  {
    BDSCloudKitLog();
    v18 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend_containerIdentifier(*(void **)(a1 + 32), v19, v20, v21, v22);
      v23 = (void *)objc_claimAutoreleasedReturnValue();
      v24 = *(_QWORD *)(a1 + 40);
      *(_DWORD *)buf = 138543618;
      v51 = v23;
      v52 = 2114;
      v53 = v24;
      _os_log_impl(&dword_227D4F000, v18, OS_LOG_TYPE_DEFAULT, "BCCloudKitDatabaseController - containerIdentifer changed from: %{public}@ to: %{public}@", buf, 0x16u);

    }
    if (!*(_BYTE *)(a1 + 56))
    {
      v29 = (void *)MEMORY[0x24BDB9030];
      objc_msgSend_containerIdentifier(*(void **)(a1 + 32), v25, v26, v27, v28);
      v30 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend_containerWithIdentifier_(v29, v31, (uint64_t)v30, v32, v33);
      v34 = (void *)objc_claimAutoreleasedReturnValue();

      objc_msgSend_p_unsubscribeToContainer_(*(void **)(a1 + 32), v35, (uint64_t)v34, v36, v37);
    }
    objc_msgSend_setHasSubscription_(*(void **)(a1 + 32), v25, 0, v27, v28);
    objc_msgSend_setServerChangeToken_(*(void **)(a1 + 32), v38, 0, v39, v40);
    objc_msgSend_setContainerIdentifier_(*(void **)(a1 + 32), v41, 0, v42, v43);
    objc_msgSend_p_scheduleArchiveWithCompletion_(*(void **)(a1 + 32), v44, (uint64_t)&unk_24F08A868, v45, v46);
    v47 = _Block_copy(*(const void **)(a1 + 48));
    v48 = v47;
    if (v47)
      (*((void (**)(void *, uint64_t))v47 + 2))(v47, 1);

  }
  else
  {
    v17 = _Block_copy(*(const void **)(a1 + 48));
    if (v17)
    {
      v49 = v17;
      (*((void (**)(void *, _QWORD))v17 + 2))(v17, 0);
      v17 = v49;
    }

  }
}

void sub_227D698D4()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_227D6A120();
  sub_227D74B98(&dword_227D4F000, v0, v1, "BDSServiceProxy monitorServiceNotificationsWithCompletion Error %{public}@", v2, v3, v4, v5, v6);
  sub_227D6A15C();
}

void sub_227D69934(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  void *v5;
  void *v6;

  v3 = a2;
  BDSServiceLog();
  v4 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    sub_227D698D4();

  v5 = _Block_copy(*(const void **)(a1 + 32));
  v6 = v5;
  if (v5)
    (*((void (**)(void *, id))v5 + 2))(v5, v3);

}

void sub_227D699B4(uint64_t a1, void *a2)
{
  id v2;
  NSObject *v3;
  NSObject *v4;
  uint8_t v5[16];

  v2 = a2;
  BDSServiceXPCNotificationLog();
  v3 = objc_claimAutoreleasedReturnValue();
  v4 = v3;
  if (v2)
  {
    if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
      sub_227E5BD34((uint64_t)v2, v4);
  }
  else if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)v5 = 0;
    _os_log_impl(&dword_227D4F000, v4, OS_LOG_TYPE_DEFAULT, "monitorServiceNotifications: OK", v5, 2u);
  }

}

uint64_t sub_227D69A44(uint64_t a1)
{
  NSObject *v2;
  const __CFString *v3;
  const char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v9;
  const __CFString *v10;
  uint64_t v11;

  v11 = *MEMORY[0x24BDAC8D0];
  BDSCloudKitLog();
  v2 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    if (*(_BYTE *)(a1 + 40))
      v3 = CFSTR("YES");
    else
      v3 = CFSTR("NO");
    v9 = 138543362;
    v10 = v3;
    _os_log_impl(&dword_227D4F000, v2, OS_LOG_TYPE_INFO, "iCloud identity changed. {Refreshing with optedIn: %{public}@}", (uint8_t *)&v9, 0xCu);
  }

  return objc_msgSend_dq_archiveCurrentICloudIdentityToken(*(void **)(a1 + 32), v4, v5, v6, v7);
}

uint64_t sub_227D69B08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return MEMORY[0x24BEDD108](*(_QWORD *)(a1 + 32), sel_q_startMonitoringServiceNotifications, a3, a4, a5);
}

uint64_t sub_227D69B10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return MEMORY[0x24BEDD108](*(_QWORD *)(a1 + 32), sel_p_unarchive, a3, a4, a5);
}

uint64_t sub_227D69B18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return MEMORY[0x24BEDD108](*(_QWORD *)(a1 + 32), sel_setCoordinatingObserver_, *(_QWORD *)(a1 + 40), a4, a5);
}

uint64_t sub_227D69B20(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  void *v6;
  const char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;

  objc_msgSend_reachabilityForInternetConnection(*(void **)(a1 + 32), a2, a3, a4, a5);
  v5 = objc_claimAutoreleasedReturnValue();
  v6 = (void *)qword_253F3C6B0;
  qword_253F3C6B0 = v5;

  result = objc_msgSend_currentReachabilityStatus((void *)qword_253F3C6B0, v7, v8, v9, v10);
  byte_253F3B130 = (_DWORD)result == 0;
  return result;
}

void sub_227D69B6C()
{
  BDSServiceProxy *v0;
  void *v1;

  v0 = objc_alloc_init(BDSServiceProxy);
  v1 = (void *)qword_253F3C6D8;
  qword_253F3C6D8 = (uint64_t)v0;

}

void sub_227D69B94(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  const char *v11;
  uint64_t v12;
  NSObject *v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  __int16 v18;
  uint64_t v19;
  uint64_t v20;

  v20 = *MEMORY[0x24BDAC8D0];
  if (*(_QWORD *)(a1 + 32) && objc_msgSend_length(*(void **)(a1 + 40), a2, a3, a4, a5))
  {
    objc_msgSend_zoneObservers(*(void **)(a1 + 48), v6, v7, v8, v9);
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_setObject_forKey_(v10, v11, *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), v12);

    BDSCloudKitSyncLog();
    v13 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
    {
      v14 = *(_QWORD *)(a1 + 32);
      v15 = *(_QWORD *)(a1 + 40);
      v16 = 134218242;
      v17 = v14;
      v18 = 2114;
      v19 = v15;
      _os_log_impl(&dword_227D4F000, v13, OS_LOG_TYPE_DEFAULT, "BCCloudKitDatabaseController - Setting observer=%p for zone =%{public}@", (uint8_t *)&v16, 0x16u);
    }
  }
  else
  {
    BDSCloudKitSyncLog();
    v13 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
      sub_227E5C904();
  }

}

uint64_t sub_227D69CB0(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t result;
  const char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  const char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  result = objc_msgSend_enableCloudSync(*(void **)(a1 + 32), a2, a3, a4, a5);
  if ((_DWORD)result)
  {
    objc_msgSend__reestablishSyncEngineSaltIfNeeded(*(void **)(a1 + 32), v7, v8, v9, v10);
    return objc_msgSend_aq_requestUpdateAttachment(*(void **)(a1 + 32), v11, v12, v13, v14);
  }
  return result;
}

void sub_227D69CF0()
{
  BCCloudCollectionsManager *v0;
  const char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t inited;
  void *v6;

  v0 = [BCCloudCollectionsManager alloc];
  inited = objc_msgSend_initClientXPCProxy(v0, v1, v2, v3, v4);
  v6 = (void *)qword_253F3C648;
  qword_253F3C648 = inited;

}

uint64_t sub_227D69D1C(uint64_t result, char a2)
{
  *(_BYTE *)(*(_QWORD *)(result + 32) + 8) = a2;
  return result;
}

void sub_227D69D28(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  void *v6;
  _QWORD v7[6];

  v7[5] = *MEMORY[0x24BDAC8D0];
  v7[0] = CFSTR("BKLibrary.ReadingNow");
  v7[1] = CFSTR("BKAudioBookSkipForward");
  v7[2] = CFSTR("BKAudioBookSkipBackward");
  v7[3] = CFSTR("BCOverrideRecentBookAlgorithm");
  v7[4] = CFSTR("BCTimeThresholdPromotionOverride");
  objc_msgSend_arrayWithObjects_count_(MEMORY[0x24BDBCE30], a2, (uint64_t)v7, 5, a5);
  v5 = objc_claimAutoreleasedReturnValue();
  v6 = (void *)qword_253F3C6C0;
  qword_253F3C6C0 = v5;

}

void sub_227D69DC8(uint64_t a1)
{
  id v1;
  void *v2;

  v1 = objc_alloc_init(*(Class *)(a1 + 32));
  v2 = (void *)qword_253F3C610;
  qword_253F3C610 = (uint64_t)v1;

}

void sub_227D69DEC()
{
  BDSCloudGlobalMetadataManager *v0;
  void *v1;

  v0 = objc_alloc_init(BDSCloudGlobalMetadataManager);
  v1 = (void *)qword_253F3C690;
  qword_253F3C690 = (uint64_t)v0;

}

void sub_227D69E14(uint64_t a1)
{
  NSObject *v2;
  const char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  const char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  const char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  const char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  void *v22;
  const char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  const char *v28;
  uint64_t v29;
  uint64_t v30;
  char isEqual;
  const char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  const char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  NSObject *v40;
  const char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  NSObject *v46;
  const char *v47;
  uint64_t v48;
  uint8_t v49[16];
  uint8_t v50[16];
  uint8_t buf[16];

  BDSCloudKitLog();
  v2 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)buf = 0;
    _os_log_impl(&dword_227D4F000, v2, OS_LOG_TYPE_INFO, "BDSLiverpoolStatusMonitor: restartObserving was called", buf, 2u);
  }

  objc_msgSend_dq_refreshICloudAvailabilityStatus(*(void **)(a1 + 32), v3, v4, v5, v6);
  objc_msgSend_lastArchivedICloudIdentityToken(*(void **)(a1 + 32), v7, v8, v9, v10);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_currentICloudIdentityToken(*(void **)(a1 + 32), v12, v13, v14, v15);
  v16 = objc_claimAutoreleasedReturnValue();
  if (v11 == (void *)v16)
  {

  }
  else
  {
    v21 = (void *)v16;
    objc_msgSend_lastArchivedICloudIdentityToken(*(void **)(a1 + 32), v17, v18, v19, v20);
    v22 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_currentICloudIdentityToken(*(void **)(a1 + 32), v23, v24, v25, v26);
    v27 = (void *)objc_claimAutoreleasedReturnValue();
    isEqual = objc_msgSend_isEqual_(v22, v28, (uint64_t)v27, v29, v30);

    if ((isEqual & 1) == 0)
    {
      objc_msgSend_dq_archiveCurrentICloudIdentityToken(*(void **)(a1 + 32), v32, v33, v34, v35);
      objc_msgSend_currentICloudIdentityToken(*(void **)(a1 + 32), v36, v37, v38, v39);
      v40 = objc_claimAutoreleasedReturnValue();
      objc_msgSend_lastArchivedICloudIdentityToken(*(void **)(a1 + 32), v41, v42, v43, v44);
      v45 = (void *)objc_claimAutoreleasedReturnValue();
      BDSCloudKitLog();
      v46 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v46, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)v50 = 0;
        _os_log_impl(&dword_227D4F000, v46, OS_LOG_TYPE_INFO, "BDSLiverpoolStatusMonitor: notifying observers of a token change", v50, 2u);
      }

      objc_msgSend__notifyObserversWithCurrentToken_lastToken_(*(void **)(a1 + 32), v47, (uint64_t)v40, (uint64_t)v45, v48);
      goto LABEL_11;
    }
  }
  BDSCloudKitLog();
  v40 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v40, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)v49 = 0;
    _os_log_impl(&dword_227D4F000, v40, OS_LOG_TYPE_INFO, "BDSLiverpoolStatusMonitor: tokens match ... so we are not notifying anyone", v49, 2u);
  }
LABEL_11:

}

void sub_227D69FD0()
{
  BCCloudAssetManager *v0;
  const char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t inited;
  void *v6;

  v0 = [BCCloudAssetManager alloc];
  inited = objc_msgSend_initClientXPCProxy(v0, v1, v2, v3, v4);
  v6 = (void *)qword_253F3C650;
  qword_253F3C650 = inited;

}

void sub_227D69FFC(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  BCCloudKitController *v5;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  BCCloudKitTransactionManager *v11;
  const char *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  const char *v16;
  uint64_t v17;
  uint64_t v18;
  id v19;

  objc_msgSend_configuration(BCCloudKitConfiguration, a2, a3, a4, a5);
  v19 = (id)objc_claimAutoreleasedReturnValue();
  v5 = [BCCloudKitController alloc];
  v9 = objc_msgSend_initWithConfiguration_(v5, v6, (uint64_t)v19, v7, v8);
  v10 = (void *)qword_253F3C688;
  qword_253F3C688 = v9;

  v11 = [BCCloudKitTransactionManager alloc];
  v15 = (void *)objc_msgSend_initWithCloudKitController_(v11, v12, qword_253F3C688, v13, v14);
  objc_msgSend_setTransactionManager_((void *)qword_253F3C688, v16, (uint64_t)v15, v17, v18);

}

void sub_227D6A080(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v5;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  const char *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;

  objc_msgSend_processInfo(MEMORY[0x24BDD1760], a2, a3, a4, a5);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_environment(v5, v6, v7, v8, v9);
  v14 = (id)objc_claimAutoreleasedReturnValue();

  objc_msgSend_objectForKeyedSubscript_(v14, v10, (uint64_t)CFSTR("XCTestConfigurationFilePath"), v11, v12);
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  byte_253F3B140 = v13 != 0;

}

uint64_t sub_227D6A0F0(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return objc_msgSend_dq_refreshICloudAvailabilityStatus(*(void **)(a1 + 32), a2, a3, a4, a5);
}

void sub_227D6A0F8()
{
  uint64_t v0;
  void *v1;

  v0 = objc_opt_new();
  v1 = (void *)qword_253F3C618;
  qword_253F3C618 = v0;

}

void sub_227D6A170(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint8_t *a5)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, a5, 0x16u);
}

void sub_227D6A1A4(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint8_t *a5)
{
  _os_log_debug_impl(a1, a2, OS_LOG_TYPE_DEBUG, a4, a5, 0x20u);
}

uint64_t sub_227D6A1B0(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  char v6;
  uint64_t result;

  if ((a2 & 0x1000000000000000) != 0)
    goto LABEL_10;
  if ((a2 & 0x2000000000000000) != 0)
    v2 = HIBYTE(a2) & 0xF;
  else
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (v2)
  {
    while (1)
    {
      v3 = sub_227D6A324(v2, 0);
      if (v2 < 0)
        break;
      v4 = v3;
      v5 = sub_227E604A0();
      if ((v6 & 1) != 0)
        goto LABEL_14;
      if (v5 == v2)
        return (uint64_t)v4;
      sub_227E60554();
      __break(1u);
LABEL_10:
      v2 = sub_227E60038();
      if (!v2)
        return MEMORY[0x24BEE4AF8];
    }
    sub_227E605A8();
    __break(1u);
LABEL_14:
    result = sub_227E60554();
    __break(1u);
  }
  else
  {
    return MEMORY[0x24BEE4AF8];
  }
  return result;
}

_QWORD *sub_227D6A324(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  size_t v5;

  if (a2 <= a1)
    v2 = a1;
  else
    v2 = a2;
  if (!v2)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  sub_227D68330(&qword_253F3B088);
  v4 = (_QWORD *)swift_allocObject();
  v5 = j__malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

_QWORD *sub_227D6A388(_QWORD *result, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t *a6)
{
  char v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  int64_t v14;
  uint64_t v15;
  _QWORD *v16;

  v8 = (char)result;
  if ((a3 & 1) == 0)
  {
    v10 = a2;
    goto LABEL_8;
  }
  v9 = a4[3];
  v10 = v9 >> 1;
  if ((uint64_t)(v9 >> 1) >= a2)
    goto LABEL_8;
  if (v10 + 0x4000000000000000 >= 0)
  {
    v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v10 = a2;
LABEL_8:
    v11 = a4[2];
    if (v10 <= v11)
      v12 = a4[2];
    else
      v12 = v10;
    if (v12)
    {
      sub_227D68330(a5);
      v13 = (_QWORD *)swift_allocObject();
      v14 = j__malloc_size(v13);
      v15 = v14 - 32;
      if (v14 < 32)
        v15 = v14 - 17;
      v13[2] = v11;
      v13[3] = 2 * (v15 >> 4);
      v16 = v13 + 4;
      if ((v8 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v13 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v16 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v13 != a4 || v16 >= &a4[2 * v11 + 4])
          memmove(v16, a4 + 4, 16 * v11);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_227D6A4B4(0, v11, (unint64_t)v16, (uint64_t)a4, a6);
LABEL_24:
    swift_bridgeObjectRelease();
    return v13;
  }
  __break(1u);
  return result;
}

_QWORD *sub_227D6A4A0(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_227D6A388(a1, a2, a3, a4, &qword_253F3B098, &qword_253F3B0D0);
}

uint64_t sub_227D6A4B4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t result;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    v6 = a4 + 16 * a1 + 32;
    v7 = a3 + 16 * v5;
    if (v6 >= v7 || v6 + 16 * v5 <= a3)
    {
      sub_227D68330(a5);
      swift_arrayInitWithCopy();
      return v7;
    }
  }
  result = sub_227E605A8();
  __break(1u);
  return result;
}

uint64_t sub_227D6A5B8(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v2 = sub_227D6A1B0(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_227DCFF94(0, *(_QWORD *)(v2 + 16) + 1, 1, (char *)v2);
  v4 = *(_QWORD *)(v2 + 16);
  v3 = *(_QWORD *)(v2 + 24);
  if (v4 >= v3 >> 1)
    v2 = sub_227DCFF94(v3 > 1, v4 + 1, 1, (char *)v2);
  *(_QWORD *)(v2 + 16) = v4 + 1;
  *(_BYTE *)(v2 + 32 + v4) = 0;
  return v2;
}

id static OS_os_log.widget.getter()
{
  return sub_227D61918(&qword_253F3AE70, (id *)&qword_253F3AE60);
}

unint64_t sub_227D6A668()
{
  unint64_t result;

  result = qword_253F3B040;
  if (!qword_253F3B040)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_253F3B040);
  }
  return result;
}

uint64_t sub_227D6A6A4(void (*a1)(__int128 *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t result;
  int64_t v12;
  unint64_t v13;
  unint64_t i;
  unint64_t v16;
  int64_t v17;
  __int128 v18;

  v6 = a3 + 64;
  v7 = 1 << *(_BYTE *)(a3 + 32);
  v8 = -1;
  if (v7 < 64)
    v8 = ~(-1 << v7);
  v9 = v8 & *(_QWORD *)(a3 + 64);
  v10 = (unint64_t)(v7 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v12 = 0;
  if (!v9)
    goto LABEL_5;
LABEL_4:
  v13 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  for (i = v13 | (v12 << 6); ; i = __clz(__rbit64(v16)) + (v12 << 6))
  {
    v18 = *(_OWORD *)(*(_QWORD *)(a3 + 56) + 16 * i);
    swift_retain();
    a1(&v18);
    if (v3)
    {
      swift_release();
      return swift_release();
    }
    result = swift_release();
    if (v9)
      goto LABEL_4;
LABEL_5:
    if (__OFADD__(v12++, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v12 >= v10)
      return swift_release();
    v16 = *(_QWORD *)(v6 + 8 * v12);
    if (!v16)
      break;
LABEL_17:
    v9 = (v16 - 1) & v16;
  }
  v17 = v12 + 1;
  if (v12 + 1 >= v10)
    return swift_release();
  v16 = *(_QWORD *)(v6 + 8 * v17);
  if (v16)
    goto LABEL_16;
  v17 = v12 + 2;
  if (v12 + 2 >= v10)
    return swift_release();
  v16 = *(_QWORD *)(v6 + 8 * v17);
  if (v16)
    goto LABEL_16;
  v17 = v12 + 3;
  if (v12 + 3 >= v10)
    return swift_release();
  v16 = *(_QWORD *)(v6 + 8 * v17);
  if (v16)
    goto LABEL_16;
  v17 = v12 + 4;
  if (v12 + 4 >= v10)
    return swift_release();
  v16 = *(_QWORD *)(v6 + 8 * v17);
  if (v16)
  {
LABEL_16:
    v12 = v17;
    goto LABEL_17;
  }
  while (1)
  {
    v12 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v12 >= v10)
      return swift_release();
    v16 = *(_QWORD *)(v6 + 8 * v12);
    ++v17;
    if (v16)
      goto LABEL_17;
  }
LABEL_28:
  __break(1u);
  return result;
}

void sub_227D6A84C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_253F3AF38)
  {
    sub_227E5F27C();
    sub_227D51624((unint64_t *)&unk_253F391C0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE958]);
    v0 = sub_227E5FC84();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_253F3AF38);
  }
}

void sub_227D6A8F4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_253F3AEE8)
  {
    v0 = sub_227E5F99C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_253F3AEE8);
  }
}

uint64_t sub_227D6A950()
{
  return sub_227D620A4();
}

uint64_t type metadata accessor for PBPropertyMarkedAsFinishedParam(uint64_t a1)
{
  return sub_227D5DFC8(a1, qword_255929C18);
}

uint64_t sub_227D6A970()
{
  uint64_t result;
  unint64_t v1;

  result = sub_227E5F588();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t type metadata accessor for _TransportConnectionManager()
{
  uint64_t result;

  result = qword_253F3AD70;
  if (!qword_253F3AD70)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_227D6AA54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  void *v18;
  void *v19;
  id v20;
  void *v21;
  _QWORD v23[2];
  uint64_t v24;
  uint64_t v25;
  _QWORD aBlock[6];

  v24 = a1;
  v25 = a4;
  v5 = sub_227E602B4();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  v9 = (char *)v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_227E6029C();
  v11 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5688];
  MEMORY[0x24BDAC7A8](v10, v12);
  v13 = sub_227E5F978();
  MEMORY[0x24BDAC7A8](v13, v14);
  *(_QWORD *)(a2 + 32) = 0;
  v23[1] = sub_227D6A668();
  sub_227E5F96C();
  aBlock[0] = MEMORY[0x24BEE4AF8];
  sub_227D51624((unint64_t *)&unk_253F3B030, v11, MEMORY[0x24BEE5698]);
  sub_227D68330((uint64_t *)&unk_253F3B000);
  sub_227D52D7C(&qword_253F3B010, (uint64_t *)&unk_253F3B000);
  sub_227E603E0();
  (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v9, *MEMORY[0x24BEE5750], v5);
  *(_QWORD *)(a2 + 40) = sub_227E602E4();
  *(_BYTE *)(a2 + 48) = 1;
  *(_QWORD *)(a2 + 64) = 0;
  sub_227E5F57C();
  v15 = v25;
  *(_QWORD *)(a2 + 16) = v24;
  *(_QWORD *)(a2 + 24) = v15;
  *(_QWORD *)(a2 + 56) = 0x403E000000000000;
  v16 = swift_allocObject();
  swift_weakInit();
  v17 = objc_allocWithZone(MEMORY[0x24BE0FC00]);
  aBlock[4] = sub_227E006B8;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_227E00324;
  aBlock[3] = &unk_24F08F8C8;
  v18 = _Block_copy(aBlock);
  swift_unknownObjectRetain();
  swift_retain();
  v19 = (void *)sub_227E5FF78();
  v20 = objc_msgSend(v17, sel_initWithNotifyBlock_blockDescription_, v18, v19);

  _Block_release(v18);
  swift_release();
  swift_release();
  objc_msgSend(v20, sel_setCoalescingDelay_, 60.0);
  swift_unknownObjectRelease();
  v21 = *(void **)(a2 + 32);
  *(_QWORD *)(a2 + 32) = v20;

  return a2;
}

void sub_227D6AD84()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  void *v5;
  void *v6;
  id v7;
  _QWORD v8[6];

  v1 = v0;
  v2 = sub_227E5F570();
  v3 = sub_227E60224();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_227D4F000, v2, v3, "CRDTModelFileSyncTransport: reconnected", v4, 2u);
    MEMORY[0x22E2AA8AC](v4, -1, -1);
  }

  v5 = *(void **)(v1 + 32);
  if (v5)
  {
    v8[4] = nullsub_1;
    v8[5] = 0;
    v8[0] = MEMORY[0x24BDAC760];
    v8[1] = 1107296256;
    v8[2] = sub_227D5A858;
    v8[3] = &unk_24F08F580;
    v6 = _Block_copy(v8);
    v7 = v5;
    objc_msgSend(v7, sel_signalWithCompletion_, v6);
    _Block_release(v6);

  }
}

_QWORD *sub_227D6AE98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;

  v4 = v3;
  v24 = a3;
  v25 = a2;
  v22 = *v3;
  v23 = a1;
  v5 = sub_227E6029C();
  v6 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5688];
  MEMORY[0x24BDAC7A8](v5, v7);
  v8 = sub_227E602B4();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8, v10);
  v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_227E5F978();
  MEMORY[0x24BDAC7A8](v13, v14);
  v3[3] = 0;
  swift_unknownObjectWeakInit();
  v15 = (_QWORD *)((char *)v4 + *(_QWORD *)(*v4 + 144));
  *v15 = 0;
  v15[1] = 0;
  v16 = *(_QWORD *)(*v3 + 152);
  sub_227D6A668();
  sub_227E5F96C();
  (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v12, *MEMORY[0x24BEE5758], v8);
  v26 = MEMORY[0x24BEE4AF8];
  sub_227D51624((unint64_t *)&unk_253F3B030, v6, MEMORY[0x24BEE5698]);
  sub_227D68330((uint64_t *)&unk_253F3B000);
  sub_227D52D7C(&qword_253F3B010, (uint64_t *)&unk_253F3B000);
  sub_227E603E0();
  *(_QWORD *)((char *)v3 + v16) = sub_227E602E4();
  *(_QWORD *)((char *)v3 + *(_QWORD *)(*v3 + 160)) = MEMORY[0x24BEE4B08];
  *(_QWORD *)((char *)v3 + *(_QWORD *)(*v3 + 168)) = 0;
  *((_BYTE *)v3 + *(_QWORD *)(*v3 + 176)) = 0;
  *((_BYTE *)v3 + *(_QWORD *)(*v3 + 184)) = 0;
  v26 = 0;
  v27 = 0xE000000000000000;
  sub_227E60494();
  swift_bridgeObjectRelease();
  v26 = 0xD000000000000012;
  v27 = 0x8000000227E6BCA0;
  (*(void (**)(_QWORD))(*(_QWORD *)(v22 + 88) + 8))(*(_QWORD *)(v22 + 80));
  sub_227E6002C();
  swift_bridgeObjectRelease();
  sub_227E5F57C();
  v3[4] = v23;
  v17 = (char *)v4 + *(_QWORD *)(*v4 + 136);
  v18 = sub_227E5F1B0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v17, v24, v18);
  v19 = (char *)v4 + *(_QWORD *)(*v4 + 128);
  v20 = sub_227E5FDE0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v19, v25, v20);
  return v4;
}

uint64_t sub_227D6B1C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t))
{
  swift_allocObject();
  return a4(a1, a2, a3);
}

uint64_t sub_227D6B220()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  result = sub_227E5FDE0();
  if (v1 <= 0x3F)
  {
    result = sub_227E5F1B0();
    if (v2 <= 0x3F)
    {
      result = sub_227E5F588();
      if (v3 <= 0x3F)
        return swift_initClassMetadata2();
    }
  }
  return result;
}

void type metadata accessor for _CRDTModelFileSyncTransport()
{
  JUMPOUT(0x22E2AA750);
}

uint64_t sub_227D6B328(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;

  v3 = (uint64_t *)(v2 + *(_QWORD *)(*(_QWORD *)v2 + 144));
  v4 = *v3;
  *v3 = a1;
  v3[1] = a2;
  sub_227D5B660(v4);
  swift_retain();
  sub_227D6B5D4();
  return swift_release();
}

uint64_t sub_227D6B36C()
{
  uint64_t v0;

  return sub_227D6B378(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
}

uint64_t sub_227D6B378(uint64_t result, char a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)result + 184);
  if (*(_BYTE *)(result + v2) != (a2 & 1))
  {
    *(_BYTE *)(result + v2) = a2 & 1;
    if (*(_QWORD *)(result + *(_QWORD *)(*(_QWORD *)result + 168)))
    {
      swift_retain();
      sub_227E5FCE4();
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_227D6B3E0(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  void *v16;
  _QWORD v18[2];
  _QWORD aBlock[6];

  v2 = v1;
  v4 = sub_227E5F948();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458];
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v7);
  v9 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_227E5F978();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10, v12);
  v14 = (char *)v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18[0] = *(_QWORD *)(v2 + *(_QWORD *)(*(_QWORD *)v2 + 152));
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = v2;
  *(_BYTE *)(v15 + 24) = a1;
  aBlock[4] = sub_227D6B36C;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_227D5A858;
  aBlock[3] = &unk_24F08F990;
  v16 = _Block_copy(aBlock);
  swift_retain();
  sub_227E5F960();
  v18[1] = MEMORY[0x24BEE4AF8];
  sub_227D51624((unint64_t *)&unk_253F3AED0, v5, MEMORY[0x24BEE5468]);
  sub_227D68330((uint64_t *)&unk_253F3AFE0);
  sub_227D52D7C((unint64_t *)&unk_253F3AFF0, (uint64_t *)&unk_253F3AFE0);
  sub_227E603E0();
  MEMORY[0x22E2A991C](0, v14, v9, v16);
  _Block_release(v16);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v4);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
  return swift_release();
}

void sub_227D6B5D4()
{
  char *v0;
  char *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  id v37;
  uint64_t v38;
  _QWORD *v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59[4];

  v1 = v0;
  v2 = *(_QWORD **)v0;
  v3 = sub_227E5FCD8();
  v57 = *(_QWORD *)(v3 - 8);
  v58 = v3;
  MEMORY[0x24BDAC7A8](v3, v4);
  v6 = (char *)&v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_227E5F1B0();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7, v9);
  v11 = (char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = v2[10];
  v13 = v2[12];
  v14 = *(_QWORD *)(v13 + 8);
  v15 = sub_227E5FDE0();
  v16 = sub_227E6038C();
  MEMORY[0x24BDAC7A8](v16, v17);
  v19 = v2[21];
  if (*(_QWORD *)&v1[v19])
  {
    v20 = v2[21];
    swift_retain_n();
    v21 = sub_227E5F570();
    v22 = sub_227E60248();
    if (os_log_type_enabled(v21, v22))
    {
      v23 = (uint8_t *)swift_slowAlloc();
      v24 = swift_slowAlloc();
      *(_DWORD *)v23 = 136315138;
      v25 = v1[*(_QWORD *)(*(_QWORD *)v1 + 176)];
      v59[0] = v24;
      if (v25)
        v26 = 0x657463656E6E6F63;
      else
        v26 = 0x697463656E6E6F63;
      if (v25)
        v27 = 0xE900000000000064;
      else
        v27 = 0xEA0000000000676ELL;
      v59[3] = sub_227D634E0(v26, v27, v59);
      sub_227E603B0();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_227D4F000, v21, v22, "CRDTModelFileSyncTransport reconnect: Already %s", v23, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x22E2AA8AC](v24, -1, -1);
      MEMORY[0x22E2AA8AC](v23, -1, -1);
    }
    else
    {
      swift_release_n();
    }

    if (*(_QWORD *)&v1[v20])
      swift_retain();
    else
      __break(1u);
  }
  else
  {
    v47 = v14;
    v48 = (char *)&v47 - v18;
    v49 = v8;
    v50 = v7;
    v51 = v2;
    v52 = v11;
    v53 = v6;
    v54 = v13;
    v28 = v12;
    v55 = v15;
    v56 = v19;
    v29 = sub_227E5F570();
    v30 = sub_227E60248();
    if (os_log_type_enabled(v29, v30))
    {
      v31 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v31 = 0;
      _os_log_impl(&dword_227D4F000, v29, v30, "CRDTModelFileSyncTransport reconnect: About to initialize file sync manager", v31, 2u);
      MEMORY[0x22E2AA8AC](v31, -1, -1);
    }

    v32 = sub_227E5FCCC();
    MEMORY[0x22E2AA7D4](MEMORY[0x24BE184D0], v32);
    sub_227E5FD08();
    v33 = (void *)*((_QWORD *)v1 + 4);
    v34 = v55;
    v35 = *(_QWORD *)(v55 - 8);
    v36 = v48;
    (*(void (**)(char *, char *, uint64_t))(v35 + 16))(v48, &v1[*(_QWORD *)(*(_QWORD *)v1 + 128)], v55);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v36, 0, 1, v34);
    (*(void (**)(char *, char *, uint64_t))(v49 + 16))(v52, &v1[*(_QWORD *)(*(_QWORD *)v1 + 136)], v50);
    (*(void (**)(char *, _QWORD, uint64_t))(v57 + 104))(v53, *MEMORY[0x24BE184E0], v58);
    v37 = v33;
    *(_QWORD *)&v1[v56] = sub_227E5FD14();
    swift_retain();
    swift_release();
    sub_227E5FCE4();
    v59[0] = sub_227E5FCFC();
    v38 = swift_allocObject();
    swift_weakInit();
    v39 = (_QWORD *)swift_allocObject();
    v39[2] = v12;
    v40 = v51;
    v41 = v51[11];
    v42 = v54;
    v39[3] = v41;
    v39[4] = v42;
    v43 = v40[13];
    v39[5] = v43;
    v39[6] = v38;
    v44 = swift_allocObject();
    swift_weakInit();
    v45 = (_QWORD *)swift_allocObject();
    v45[2] = v28;
    v45[3] = v41;
    v45[4] = v42;
    v45[5] = v43;
    v45[6] = v44;
    sub_227D6717C((uint64_t *)&unk_253F3B0A0);
    v46 = sub_227E5F594();
    MEMORY[0x22E2AA7D4](MEMORY[0x24BDB9AF8], v46);
    sub_227E5F5D0();
    swift_release();
    swift_release();
    swift_release();
    swift_beginAccess();
    sub_227E5F5A0();
    swift_endAccess();
    swift_release();
  }
}

uint64_t dispatch thunk of ReadingGoalsStateObserving.addObserver(_:callback:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t sub_227D6BB5C()
{
  return sub_227D620A4();
}

uint64_t type metadata accessor for PBPropertySingleFloatParam(uint64_t a1)
{
  return sub_227D5DFC8(a1, qword_253F3AC58);
}

double sub_227D6BB80@<D0>(uint64_t a1@<X8>)
{
  return sub_227D600C8(a1);
}

uint64_t sub_227D6BB94@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_227D62110(v1, a1);
}

void sub_227D6BBAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v18 = a2;
  v19 = a3;
  v20 = a1;
  v4 = (_QWORD *)*v3;
  v5 = sub_227E5F1B0();
  v16 = *(_QWORD *)(v5 - 8);
  v17 = v5;
  MEMORY[0x24BDAC7A8](v5, v6);
  v15 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = v4[10];
  v9 = v4[12];
  v14 = sub_227E5FDE0();
  MEMORY[0x24BDAC7A8](v14, v10);
  v13 = (char *)v3 + qword_253F3AB28;
  v21 = 0;
  v22 = 0xE000000000000000;
  sub_227E60494();
  swift_bridgeObjectRelease();
  v21 = 0xD000000000000012;
  v22 = 0x8000000227E6BCA0;
  v11 = v4[11];
  (*(void (**)(unint64_t, unint64_t))(v11 + 8))(v8, v11);
  sub_227E6002C();
  swift_bridgeObjectRelease();
  sub_227E5F57C();
  v12 = v4[13];
  v21 = v8;
  v22 = v11;
  v23 = v9;
  v24 = v12;
  type metadata accessor for _CRDTModelFileSyncTransport();
}

uint64_t sub_227D6BD0C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  (*(void (**)(uint64_t, _QWORD, _QWORD))(v2 + 16))(v3, *(_QWORD *)(v4 - 136), *(_QWORD *)(v4 - 168));
  v6 = *(_QWORD *)(v4 - 160);
  v7 = *(_QWORD *)(v4 - 152);
  v8 = *(_QWORD *)(v4 - 128);
  v9 = *(_QWORD *)(v4 - 144);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v6, v8, v9);
  swift_allocObject();
  *(_QWORD *)(v1 + 16) = sub_227D6AE98((uint64_t)*(id *)(v4 - 120), v3, v6);
  type metadata accessor for _TransportConnectionManager();
  v10 = swift_allocObject();
  v11 = swift_retain();
  v12 = sub_227D6AA54(v11, v10, a1, (uint64_t)&off_24F08F448);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v8, v9);
  *(_QWORD *)(v1 + 24) = v12;
  *(_QWORD *)(*(_QWORD *)(v1 + 16) + 24) = &off_24F08F478;
  swift_unknownObjectWeakAssign();
  return v1;
}

uint64_t sub_227D6BE00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_227D6B1C4(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_227D6BBAC);
}

uint64_t sub_227D6BE0C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_227E5F588();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

void type metadata accessor for CRDTModelFileSyncTransport()
{
  JUMPOUT(0x22E2AA750);
}

uint64_t sub_227D6BE94(uint64_t a1, uint64_t a2)
{
  return sub_227D6B328(a1, a2);
}

uint64_t sub_227D6BEB4(char a1)
{
  return sub_227D6B3E0(a1);
}

uint64_t dispatch thunk of ReadingGoalsStateProvider.observable.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

ValueMetadata *type metadata accessor for MarkedAsFinishedMechanism()
{
  return &type metadata for MarkedAsFinishedMechanism;
}

uint64_t sub_227D6BEEC()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_227E5F1B0();
  if (v1 <= 0x3F)
  {
    result = sub_227E5F588();
    if (v2 <= 0x3F)
      return swift_initClassMetadata2();
  }
  return result;
}

void type metadata accessor for CRDTModelLocalFileManager()
{
  JUMPOUT(0x22E2AA750);
}

uint64_t sub_227D6BFC0()
{
  return swift_allocateGenericValueMetadata();
}

void type metadata accessor for CRDTModelLocalFileManager.SyncError()
{
  JUMPOUT(0x22E2AA750);
}

uint64_t sub_227D6BFD4(uint64_t a1)
{
  uint64_t *v1;

  return sub_227D6BFE4(a1, v1[6], v1[2], v1[3], v1[4], v1[5]);
}

uint64_t sub_227D6BFE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE *v23;
  uint64_t v24;
  uint64_t v25;
  _BYTE v27[7];
  char v28;

  v11 = sub_227D68330(&qword_253F3A4F0);
  MEMORY[0x24BDAC7A8](v11, v12);
  v14 = &v27[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v15 = type metadata accessor for ModelState.Source(0, a3, a5, a6);
  v17 = MEMORY[0x24BDAC7A8](v15, v16);
  v19 = &v27[-v18];
  v20 = *(_QWORD *)(a3 - 8);
  MEMORY[0x24BDAC7A8](v17, v21);
  v23 = &v27[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v24 = type metadata accessor for ModelState(0, a3, a5, a6);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 8))(a1, v24);
  swift_beginAccess();
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v20 + 16))(v23, a2, a3);
  v28 = 1;
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v20 + 56))(v19, 2, 2, a3);
  v25 = type metadata accessor for CRDTModelRevisionInfo();
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v14, 1, 1, v25);
  return ModelState.init(model:loaded:source:revisionInfo:)((uint64_t)v23, &v28, (uint64_t)v19, (uint64_t)v14, a3, a5, a6, a1);
}

uint64_t sub_227D6C190(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  _OWORD v4[3];
  uint64_t v5;

  v2 = *(_OWORD *)(*(_QWORD *)a1 + 96);
  v4[1] = *(_OWORD *)(*(_QWORD *)a1 + 80);
  v4[2] = v2;
  v5 = a2;
  swift_retain();
  MutableObservableContainer.mutate(_:)((uint64_t)sub_227D6BFD4, (uint64_t)v4);
  return swift_release();
}

uint64_t sub_227D6C1E4(uint64_t a1, unint64_t a2, void *a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  id v32;
  NSObject *v33;
  os_log_type_t v34;
  uint8_t *v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint8_t *v39;
  NSObject *v40;
  uint64_t v41;
  uint8_t *v42;
  unint64_t v43;
  uint64_t v44;
  void (*v45)(_QWORD, _QWORD);
  uint64_t v46;
  os_log_type_t v47;
  uint8_t *v48;
  uint64_t v49;
  uint64_t v51;
  char *v52;
  char v53;
  void (*v54)(char *, uint64_t);
  void (*v55)(char *, char *, uint64_t);
  char *v56;
  NSObject *v57;
  os_log_type_t v58;
  _BOOL4 v59;
  uint64_t v60;
  uint64_t v61;
  void (*v62)(char *, uint64_t);
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  unint64_t v67;
  void (*v68)(_QWORD, _QWORD);
  char *v69;
  NSObject *v70;
  os_log_type_t v71;
  uint8_t *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  void (*v77)(char *, uint64_t);
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  char *v82;
  char *v83;
  uint64_t v84;
  void (*v85)(_QWORD, _QWORD);
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95[5];

  v87 = a1;
  v88 = a2;
  v5 = *(_QWORD *)v3;
  v6 = *(_QWORD *)(*(_QWORD *)v3 + 80);
  v7 = sub_227E6038C();
  v8 = *(_QWORD *)(v7 - 8);
  v10 = MEMORY[0x24BDAC7A8](v7, v9);
  v12 = (char *)&v80 - v11;
  v91 = *(_QWORD *)(v6 - 8);
  v92 = v6;
  v14 = MEMORY[0x24BDAC7A8](v10, v13);
  v16 = (char *)&v80 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v14, v17);
  v20 = (char *)&v80 - v19;
  v22 = MEMORY[0x24BDAC7A8](v18, v21);
  v24 = (char *)&v80 - v23;
  v26 = MEMORY[0x24BDAC7A8](v22, v25);
  v28 = (char *)&v80 - v27;
  MEMORY[0x24BDAC7A8](v26, v29);
  v89 = (char *)&v80 - v30;
  sub_227D54D04((uint64_t)&v80 - v30);
  v90 = v3;
  if (a3)
  {
    v31 = a3;
    v32 = a3;
    v33 = sub_227E5F570();
    v34 = sub_227E60230();
    if (!os_log_type_enabled(v33, v34))
    {

      goto LABEL_13;
    }
    v35 = (uint8_t *)swift_slowAlloc();
    v36 = swift_slowAlloc();
    v95[0] = v36;
    *(_DWORD *)v35 = 136315138;
    swift_getErrorValue();
    v37 = sub_227E606D4();
    v94 = sub_227D634E0(v37, v38, v95);
    sub_227E603B0();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_227D4F000, v33, v34, "CRDTModelLocalFileManager Init: couldn't load existing data: %s", v35, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x22E2AA8AC](v36, -1, -1);
    v39 = v35;
    goto LABEL_10;
  }
  v84 = v8;
  v85 = (void (*)(_QWORD, _QWORD))v12;
  v81 = v20;
  v82 = v16;
  v86 = v5;
  v83 = v28;
  v40 = sub_227E5F570();
  v41 = sub_227E60248();
  if (os_log_type_enabled(v40, (os_log_type_t)v41))
  {
    v42 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v42 = 0;
    _os_log_impl(&dword_227D4F000, v40, (os_log_type_t)v41, "CRDTModelLocalFileManager Init: About to deserialize existing data", v42, 2u);
    MEMORY[0x22E2AA8AC](v42, -1, -1);
  }

  v43 = v88;
  if (v88 >> 60 == 15)
  {
    v33 = sub_227E5F570();
    v47 = sub_227E60230();
    if (!os_log_type_enabled(v33, v47))
    {
LABEL_11:

LABEL_13:
      v49 = (uint64_t)v89;
      goto LABEL_14;
    }
    v48 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v48 = 0;
    _os_log_impl(&dword_227D4F000, v33, v47, "CRDTModelLocalFileManager Init: couldn't deserialize existing data", v48, 2u);
    v39 = v48;
LABEL_10:
    MEMORY[0x22E2AA8AC](v39, -1, -1);
    goto LABEL_11;
  }
  v44 = v87;
  sub_227DD00E0(v87, v88);
  sub_227DD00E0(v44, v43);
  v45 = v85;
  v46 = v92;
  v80 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v86 + 96) + 8) + 8);
  sub_227E5FC00();
  v51 = v91;
  (*(void (**)(void (*)(_QWORD, _QWORD), _QWORD, uint64_t, uint64_t))(v91 + 56))(v45, 0, 1, v46);
  v52 = v83;
  (*(void (**)(char *, void (*)(_QWORD, _QWORD), uint64_t))(v51 + 32))(v83, v45, v46);
  sub_227D54D04((uint64_t)v24);
  v53 = sub_227E5FD20();
  v54 = *(void (**)(char *, uint64_t))(v51 + 8);
  v54(v24, v46);
  v55 = *(void (**)(char *, char *, uint64_t))(v51 + 16);
  if ((v53 & 1) == 0)
  {
    v69 = v82;
    v55(v82, v52, v92);
    v70 = sub_227E5F570();
    v71 = sub_227E60248();
    if (os_log_type_enabled(v70, v71))
    {
      v72 = (uint8_t *)swift_slowAlloc();
      v73 = swift_slowAlloc();
      v95[0] = v73;
      v85 = (void (*)(_QWORD, _QWORD))v54;
      v74 = v92;
      *(_DWORD *)v72 = 136315138;
      v75 = sub_227E60674();
      v94 = sub_227D634E0(v75, v76, v95);
      sub_227E603B0();
      swift_bridgeObjectRelease();
      v77 = (void (*)(char *, uint64_t))v85;
      v85(v69, v74);
      _os_log_impl(&dword_227D4F000, v70, v71, "CRDTModelLocalFileManager Init: loaded stored model=%s, no delta", v72, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x22E2AA8AC](v73, -1, -1);
      MEMORY[0x22E2AA8AC](v72, -1, -1);

      sub_227DD7918(v87, v88);
      v77(v52, v74);
    }
    else
    {
      sub_227DD7918(v87, v88);
      v79 = v92;
      v54(v69, v92);

      v54(v52, v79);
    }
    goto LABEL_13;
  }
  v56 = v81;
  v55(v81, v52, v92);
  v57 = sub_227E5F570();
  v58 = sub_227E60248();
  v59 = os_log_type_enabled(v57, v58);
  v60 = v87;
  if (v59)
  {
    v61 = swift_slowAlloc();
    v85 = (void (*)(_QWORD, _QWORD))swift_slowAlloc();
    v95[0] = (uint64_t)v85;
    *(_DWORD *)v61 = 136315394;
    v62 = v54;
    v63 = v92;
    v64 = sub_227E60674();
    v94 = sub_227D634E0(v64, v65, v95);
    sub_227E603B0();
    swift_bridgeObjectRelease();
    v62(v56, v63);
    *(_WORD *)(v61 + 12) = 2080;
    v49 = (uint64_t)v89;
    swift_beginAccess();
    v54 = v62;
    v66 = sub_227E60674();
    v93 = sub_227D634E0(v66, v67, v95);
    v60 = v87;
    sub_227E603B0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_227D4F000, v57, v58, "CRDTModelLocalFileManager Init: loaded stored model=%s, merging into existing=%s", (uint8_t *)v61, 0x16u);
    v68 = v85;
    swift_arrayDestroy();
    MEMORY[0x22E2AA8AC](v68, -1, -1);
    MEMORY[0x22E2AA8AC](v61, -1, -1);

  }
  else
  {

    v54(v56, v92);
    v49 = (uint64_t)v89;
  }
  swift_beginAccess();
  v78 = v92;
  sub_227E5FC0C();
  swift_endAccess();
  sub_227DD7918(v60, v88);
  v54(v52, v78);
LABEL_14:
  sub_227D6C190(v90, v49);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v91 + 8))(v49, v92);
}

uint64_t sub_227D6CA28()
{
  uint64_t v0;

  sub_227D6C1E4(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(void **)(v0 + 40));
  return sub_227D6CC90();
}

uint64_t sub_227D6CA64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  _BYTE v13[16];
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v7 = sub_227E5F948();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7, v9);
  v11 = &v13[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_227E5F93C();
  v14 = v3;
  v15 = a1;
  v16 = a2;
  v17 = a3;
  sub_227E602C0();
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v8 + 8))(v11, v7);
}

uint64_t sub_227D6CB34()
{
  return sub_227D6CB54();
}

uint64_t sub_227D6CB54()
{
  NSObject *v0;
  os_log_type_t v1;
  uint8_t *v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;

  v0 = sub_227E5F570();
  v1 = sub_227E60248();
  if (os_log_type_enabled(v0, v1))
  {
    v2 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v2 = 0;
    _os_log_impl(&dword_227D4F000, v0, v1, "CRDTModelLocalFileManager Init: About to load data", v2, 2u);
    MEMORY[0x22E2AA8AC](v2, -1, -1);
  }

  v3 = sub_227E5F1BC();
  v5 = v4;
  sub_227DD00E0(v3, v4);
  sub_227D6CA64(v3, v5, 0);
  sub_227DD1FD4(v3, v5);
  return sub_227DD1FD4(v3, v5);
}

uint64_t sub_227D6CC90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  __int128 *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD aBlock[6];

  v1 = sub_227E5F978();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1, v3);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_227E5F948();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6, v8);
  v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (uint64_t *)(v0 + qword_253F3AA00);
  swift_beginAccess();
  v12 = *v11;
  *v11 = MEMORY[0x24BEE4AF8];
  v25 = v12;
  v13 = *(_QWORD *)(v12 + 16);
  if (v13)
  {
    v14 = (__int128 *)(v25 + 32);
    v26 = v6;
    do
    {
      v15 = v7;
      v16 = v1;
      v17 = v2;
      v18 = swift_allocObject();
      v19 = *v14++;
      *(_OWORD *)(v18 + 16) = v19;
      swift_retain();
      sub_227E5F93C();
      v20 = swift_allocObject();
      *(_QWORD *)(v20 + 16) = sub_227D62A80;
      *(_QWORD *)(v20 + 24) = v18;
      aBlock[4] = sub_227D5B9E0;
      aBlock[5] = v20;
      aBlock[0] = MEMORY[0x24BDAC760];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_227D5A858;
      aBlock[3] = &unk_24F090FB0;
      v21 = _Block_copy(aBlock);
      swift_retain();
      sub_227E5F960();
      MEMORY[0x22E2A991C](0, v5, v10, v21);
      _Block_release(v21);
      v2 = v17;
      v1 = v16;
      v7 = v15;
      v22 = v26;
      swift_release();
      (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v22);
      swift_release();
      --v13;
    }
    while (v13);
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_227D6CEB8()
{
  uint64_t v0;

  return sub_227D6CED8(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_BYTE *)(v0 + 32), *(uint64_t (**)(uint64_t))(v0 + 40), *(_QWORD *)(v0 + 48));
}

uint64_t sub_227D6CED8(uint64_t a1, uint64_t a2, char a3, uint64_t (*a4)(uint64_t), uint64_t a5)
{
  void *v5;
  BOOL v10;
  uint64_t v11;
  uint64_t v12;

  v10 = sub_227D566D0();
  v11 = a3 & 1;
  if (!v10)
    return sub_227E49A60(a2, v11, (uint64_t)a4, a5);
  v12 = sub_227D54DBC(a2, v11);
  if (v5)

  return a4(v12);
}

uint64_t CRDTModelLocalFileManager.syncAfterLoaded(_:isRemote:completion:)(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  _BYTE v15[16];
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;

  v9 = sub_227E5F948();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9, v11);
  v13 = &v15[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_227E5F93C();
  v16 = v4;
  v17 = a1;
  v18 = a2;
  v19 = a3;
  v20 = a4;
  sub_227E602C0();
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v10 + 8))(v13, v9);
}

uint64_t sub_227D6D044()
{
  return CRDTModelLocalFileManager.DefaultConfig.storeDirectory.getter();
}

id sub_227D6D058()
{
  return (id)sub_227D6D17C();
}

uint64_t sub_227D6D070()
{
  return swift_allocateGenericValueMetadata();
}

void type metadata accessor for CRDTModelLocalFileManager.DefaultConfig()
{
  JUMPOUT(0x22E2AA750);
}

uint64_t CRDTModelLocalFileManager.DefaultConfig.storeDirectory.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  id v5;
  id v6;
  uint64_t v8;

  v0 = sub_227E5F1B0();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0, v2);
  v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = objc_msgSend((id)objc_opt_self(), sel_books);
  v6 = objc_msgSend(v5, sel_containerURL);

  sub_227E5F198();
  sub_227E5F18C();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v4, v0);
}

uint64_t sub_227D6D17C()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

void CRDTModelLocalFileManager.__allocating_init(clientName:delegate:)()
{
  type metadata accessor for CRDTModelLocalFileContextStore();
}

void sub_227D6D1CC()
{
  uint64_t v0;
  uint64_t v1;

  static CRDTModelLocalFileContextStore.persistentContext(_:)(v0, v1);
}

void sub_227D6D1E0()
{
  swift_bridgeObjectRelease();
  type metadata accessor for CRDTModelLocalFileManager.DefaultConfig();
}

uint64_t sub_227D6D200(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  id v3;
  _QWORD v5[15];

  v5[3] = a1;
  v5[4] = &protocol witness table for CRDTModelLocalFileManager<A>.DefaultConfig;
  v5[0] = v1;
  v2 = swift_allocObject();
  v3 = v1;
  CRDTModelLocalFileManager.init(config:delegate:)(v5, 0, 0);

  swift_unknownObjectRelease();
  return v2;
}

void sub_227D6D26C()
{
  type metadata accessor for CRDTModelFileSyncInfo();
}

uint64_t sub_227D6D2E4(uint64_t a1)
{
  uint64_t result;
  unint64_t v2;
  unint64_t v3;

  MEMORY[0x22E2AA7D4](&protocol conformance descriptor for CRDTModelFileSyncInfo<A>, a1);
  result = sub_227E5FDE0();
  if (v2 <= 0x3F)
  {
    result = sub_227E5F588();
    if (v3 <= 0x3F)
      return swift_initClassMetadata2();
  }
  return result;
}

void type metadata accessor for CRDTModelFileSyncManager()
{
  JUMPOUT(0x22E2AA750);
}

uint64_t CRDTModelFileSyncManager.delegate.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_beginAccess();
  *(_QWORD *)(v2 + 24) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

uint64_t CRDTModelFileSyncManager.disableReadingInBackground.setter(char a1)
{
  return sub_227D6BEB4(a1);
}

uint64_t sub_227D6D3FC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;

  return sub_227D6D41C(*(_QWORD *)(v1 + 24), *(_BYTE *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), a1);
}

uint64_t sub_227D6D41C@<X0>(uint64_t a1@<X1>, char a2@<W2>, uint64_t a3@<X3>, uint64_t a4@<X4>, _BYTE *a5@<X8>)
{
  BOOL v10;
  uint64_t v11;
  uint64_t result;

  v10 = sub_227D566D0();
  v11 = a2 & 1;
  if (v10)
    sub_227D53E80(a1, v11, a3, a4);
  result = sub_227D6DD3C(a1, v11, a3, a4);
  *a5 = 0;
  return result;
}

uint64_t CRDTModelFileSyncManager.syncAfterLoaded(_:isRemote:completion:)(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  _BYTE v15[16];
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;

  v9 = sub_227E5F948();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9, v11);
  v13 = &v15[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_227E5F93C();
  v16 = v4;
  v17 = a1;
  v18 = a2;
  v19 = a3;
  v20 = a4;
  sub_227D68330(&qword_253F3B0C8);
  sub_227E602C0();
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v10 + 8))(v13, v9);
}

uint64_t sub_227D6D5A0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = v1[2];
  v4 = v1[4];
  v5 = v1[5];
  v6 = v1[6];
  v7 = type metadata accessor for ModelState(0, v3, v4, v5);
  v8 = *(_QWORD *)(v7 - 8);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(a1, v7);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(a1, v6, v7);
}

uint64_t sub_227D6D600(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD v26[2];
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v27 = a2;
  v6 = *v3;
  v7 = *(_QWORD *)(*v3 + 96);
  v8 = *(_QWORD *)(*v3 + 104);
  v29 = *(_QWORD *)(*v3 + 80);
  v30 = v7;
  v28 = v8;
  v9 = type metadata accessor for ModelState(0, v29, v7, v8);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9, v11);
  v13 = (char *)v26 - v12;
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)v26 - v12, a1, v9);
  swift_bridgeObjectRetain_n();
  v14 = sub_227E5F570();
  v15 = sub_227E60248();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = swift_slowAlloc();
    v26[1] = v3;
    v17 = v16;
    v26[0] = swift_slowAlloc();
    v32 = v26[0];
    *(_DWORD *)v17 = 136315394;
    swift_bridgeObjectRetain();
    v31 = sub_227D634E0(v27, a3, &v32);
    v27 = a1;
    sub_227E603B0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v17 + 12) = 2080;
    v18 = ModelState.description.getter(v9);
    v31 = sub_227D634E0(v18, v19, &v32);
    a1 = v27;
    sub_227E603B0();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
    _os_log_impl(&dword_227D4F000, v14, v15, "CRDTModelFileSyncManager q_updateState (%s) -- newState=%s", (uint8_t *)v17, 0x16u);
    v20 = v26[0];
    swift_arrayDestroy();
    MEMORY[0x22E2AA8AC](v20, -1, -1);
    MEMORY[0x22E2AA8AC](v17, -1, -1);

  }
  else
  {
    swift_bridgeObjectRelease_n();

    v21 = (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v13, v9);
  }
  MEMORY[0x24BDAC7A8](v21, v22);
  v23 = *(_QWORD *)(v6 + 88);
  v26[-6] = v29;
  v26[-5] = v23;
  v24 = v28;
  v26[-4] = v30;
  v26[-3] = v24;
  v26[-2] = a1;
  swift_retain();
  MutableObservableContainer.mutate(_:)((uint64_t)sub_227D6D5A0, (uint64_t)&v26[-8]);
  return swift_release();
}

uint64_t sub_227D6D8A8()
{
  return CRDTModelFileSyncManager.DefaultConfig.storeDirectory.getter();
}

void type metadata accessor for CRDTModelFileSyncManager.DefaultConfig()
{
  JUMPOUT(0x22E2AA750);
}

uint64_t CRDTModelFileSyncManager.DefaultConfig.storeDirectory.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  id v5;
  id v6;
  uint64_t v8;

  v0 = sub_227E5F1B0();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0, v2);
  v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = objc_msgSend((id)objc_opt_self(), sel_books);
  v6 = objc_msgSend(v5, sel_containerURL);

  sub_227E5F198();
  sub_227E5F18C();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v4, v0);
}

uint64_t CRDTModelFileSyncManager.observable.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v1 = type metadata accessor for ModelState(255, *(_QWORD *)(*(_QWORD *)v0 + 80), *(_QWORD *)(*(_QWORD *)v0 + 96), *(_QWORD *)(*(_QWORD *)v0 + 104));
  v2 = MEMORY[0x22E2AA7D4](&protocol conformance descriptor for ModelState<A>, v1);
  type metadata accessor for MutableObservableContainer(0, v1, v2, v3);
  sub_227E602CC();
  return v5;
}

void CRDTModelFileSyncManager.__allocating_init(clientName:groupContext:transactionProvider:delegate:)(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    type metadata accessor for CRDTModelFileSyncInfo();
  type metadata accessor for CRDTModelFileSyncInfo();
}

void sub_227D6DB0C(uint64_t a1)
{
  MEMORY[0x22E2AA7D4](&protocol conformance descriptor for CRDTModelFileSyncInfo<A>, a1);
  MEMORY[0x22E2AA7D4](&protocol conformance descriptor for CRDTModelFileSyncInfo<A>, a1);
  type metadata accessor for CRDTModelFileSyncContextStore();
}

void sub_227D6DB50()
{
  uint64_t v0;
  uint64_t v1;

  static CRDTModelFileSyncContextStore.persistentContext(_:)(v0, v1);
}

void sub_227D6DB84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, _UNKNOWN **a16)
{
  uint64_t v16;

  a15 = a1;
  a16 = &protocol witness table for CRDTModelFileSyncManager<A>.DefaultConfig;
  swift_allocObject();
  sub_227D52DF4((uint64_t)&a12, v16, a11, a10);
}

uint64_t sub_227D6DBBC(uint64_t a1)
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return a1;
}

void type metadata accessor for CRDTModelFileSyncManager.SyncError()
{
  JUMPOUT(0x22E2AA750);
}

void sub_227D6DC00()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 16) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  sub_227D6DC38(*(_QWORD *)(v0 + 48), v0 + v2, *(_BYTE *)(v0 + v2 + *(_QWORD *)(v1 + 64)), *(_QWORD *)(((v2 + *(_QWORD *)(v1 + 64)) & 0xFFFFFFFFFFFFFFF8) + v0 + 8), *(_QWORD *)(((v2 + *(_QWORD *)(v1 + 64)) & 0xFFFFFFFFFFFFFFF8) + v0 + 16));
}

void sub_227D6DC38(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;

  v9 = sub_227E5F570();
  v10 = sub_227E60248();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v11 = 0;
    _os_log_impl(&dword_227D4F000, v9, v10, "CRDTModelFileSyncManager q_enqueuePendingSync -- about to run", v11, 2u);
    MEMORY[0x22E2AA8AC](v11, -1, -1);
  }

  sub_227D53E80(a2, a3 & 1, a4, a5);
}

void sub_227D6DCFC()
{
  void *v0;

  if (v0)

}

uint64_t sub_227D6DD3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v23;
  unint64_t v24;
  _QWORD *v25;
  _BYTE v27[4];
  int v28;
  uint64_t v29;
  uint64_t v30;

  v5 = v4;
  v29 = a3;
  v30 = a4;
  v28 = a2;
  v7 = *v4;
  v8 = *(_QWORD *)(*v4 + 80);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  MEMORY[0x24BDAC7A8](a1, a2);
  v11 = &v27[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = sub_227E5F570();
  v13 = sub_227E60248();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v14 = 0;
    _os_log_impl(&dword_227D4F000, v12, v13, "CRDTModelFileSyncManager q_enqueuePendingSync", v14, 2u);
    MEMORY[0x22E2AA8AC](v14, -1, -1);
  }

  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v9 + 16))(&v27[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)], a1, v8);
  v15 = (*(unsigned __int8 *)(v9 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v16 = v15 + v10;
  v17 = swift_allocObject();
  v18 = (v16 & 0xFFFFFFFFFFFFFFF8) + v17;
  *(_QWORD *)(v17 + 16) = v8;
  *(_OWORD *)(v17 + 24) = *(_OWORD *)(v7 + 88);
  *(_QWORD *)(v17 + 40) = *(_QWORD *)(v7 + 104);
  *(_QWORD *)(v17 + 48) = v5;
  (*(void (**)(unint64_t, _BYTE *, uint64_t))(v9 + 32))(v17 + v15, v11, v8);
  *(_BYTE *)(v17 + v16) = v28 & 1;
  v19 = v30;
  *(_QWORD *)(v18 + 8) = v29;
  *(_QWORD *)(v18 + 16) = v19;
  v20 = v5 + 9;
  swift_beginAccess();
  v21 = (_QWORD *)v5[9];
  swift_retain();
  swift_retain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v5[9] = (uint64_t)v21;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v21 = sub_227D6A4A0(0, v21[2] + 1, 1, v21);
    *v20 = v21;
  }
  v24 = v21[2];
  v23 = v21[3];
  if (v24 >= v23 >> 1)
  {
    v21 = sub_227D6A4A0((_QWORD *)(v23 > 1), v24 + 1, 1, v21);
    *v20 = v21;
  }
  v21[2] = v24 + 1;
  v25 = &v21[2 * v24];
  v25[4] = sub_227D6DC00;
  v25[5] = v17;
  return swift_endAccess();
}

uint64_t sub_227D6DF64()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  __int128 *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD aBlock[6];

  v1 = sub_227E5F978();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1, v3);
  v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_227E5F948();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6, v8);
  v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  v11 = *(_QWORD *)(v0 + 72);
  *(_QWORD *)(v0 + 72) = MEMORY[0x24BEE4AF8];
  v24 = v11;
  v12 = *(_QWORD *)(v11 + 16);
  if (v12)
  {
    v13 = (__int128 *)(v24 + 32);
    v25 = v6;
    do
    {
      v14 = v7;
      v15 = v1;
      v16 = v2;
      v17 = swift_allocObject();
      v18 = *v13++;
      *(_OWORD *)(v17 + 16) = v18;
      swift_retain();
      sub_227E5F93C();
      v19 = swift_allocObject();
      *(_QWORD *)(v19 + 16) = sub_227D62A80;
      *(_QWORD *)(v19 + 24) = v17;
      aBlock[4] = sub_227D5B9E0;
      aBlock[5] = v19;
      aBlock[0] = MEMORY[0x24BDAC760];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_227D5A858;
      aBlock[3] = &unk_24F08D718;
      v20 = _Block_copy(aBlock);
      swift_retain();
      sub_227E5F960();
      MEMORY[0x22E2A991C](0, v5, v10, v20);
      _Block_release(v20);
      v2 = v16;
      v1 = v15;
      v7 = v14;
      v21 = v25;
      swift_release();
      (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v21);
      swift_release();
      --v12;
    }
    while (v12);
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_227D6E178()
{
  uint64_t result;
  unint64_t v1;

  result = sub_227E5F3E4();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for PBPropertyConfiguration(uint64_t a1)
{
  return sub_227D5DFC8(a1, qword_253F3A728);
}

uint64_t type metadata accessor for CloudSecureManagerProxy()
{
  return objc_opt_self();
}

id sub_227D6E2C8()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for CloudSecureManagerProxy()), sel_init);
  qword_253F3A710 = (uint64_t)result;
  return result;
}

uint64_t type metadata accessor for ReadingGoalsController()
{
  return objc_opt_self();
}

uint64_t sub_227D6E38C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 56);
  a1[3] = sub_227D68330((uint64_t *)&unk_253F3AC40);
  a1[4] = &protocol witness table for <> ObservableContainer<A>;
  *a1 = v3;
  return swift_retain();
}

uint64_t sub_227D6E3D0()
{
  uint64_t result;
  unint64_t v1;

  result = sub_227E5F588();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t type metadata accessor for ObservableTransaction()
{
  uint64_t result;

  result = qword_253F3A568;
  if (!qword_253F3A568)
    return swift_getSingletonMetadata();
  return result;
}

_QWORD *sub_227D6E4A4(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v6;
  uint64_t (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v19 = a2;
  v20 = a3;
  v6 = sub_227E6029C();
  v7 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5688];
  MEMORY[0x24BDAC7A8](v6, v8);
  v9 = sub_227E5F978();
  MEMORY[0x24BDAC7A8](v9, v10);
  v11 = sub_227E602B4();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11, v13);
  v15 = (char *)&v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  a4[4] = 0;
  sub_227D6A668();
  (*(void (**)(char *, _QWORD, uint64_t))(v12 + 104))(v15, *MEMORY[0x24BEE5758], v11);
  sub_227E5F960();
  v21 = MEMORY[0x24BEE4AF8];
  sub_227D51624((unint64_t *)&unk_253F3B030, v7, MEMORY[0x24BEE5698]);
  sub_227D68330((uint64_t *)&unk_253F3B000);
  sub_227D52D7C(&qword_253F3B010, (uint64_t *)&unk_253F3B000);
  sub_227E603E0();
  a4[5] = sub_227E602E4();
  sub_227E5F57C();
  v16 = v19;
  a4[2] = a1;
  a4[3] = v16;
  a4[6] = v20;
  return a4;
}

uint64_t sub_227D6E6BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_227D68330(&qword_253F3A4F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_227D6E704(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_227D68330(&qword_253F3A4F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_227D6E74C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_253F3A4F8)
  {
    type metadata accessor for CRDTModelRevisionInfo();
    v0 = sub_227E6038C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_253F3A4F8);
  }
}

void sub_227D6E7A0()
{
  unint64_t v0;

  sub_227D720EC();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t sub_227D6E814(uint64_t a1)
{
  return static CRDTModelFileSyncInfo.modelName.getter(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24));
}

uint64_t sub_227D6E820()
{
  MEMORY[0x22E2AA7D4](&protocol conformance descriptor for CRDTModelFileSyncInfo<A>);
  return sub_227E5FA44();
}

uint64_t sub_227D6E86C()
{
  MEMORY[0x22E2AA7D4](&protocol conformance descriptor for CRDTModelFileSyncInfo<A>);
  return sub_227E5FA08();
}

uint64_t sub_227D6E8C0(uint64_t a1)
{
  MEMORY[0x22E2AA7D4](&protocol conformance descriptor for CRDTModelFileSyncInfo<A>, a1);
  return sub_227E5F9F0();
}

void sub_227D6E8F4()
{
  JUMPOUT(0x22E2AA7D4);
}

void sub_227D6E904()
{
  JUMPOUT(0x22E2AA7D4);
}

void sub_227D6E914()
{
  JUMPOUT(0x22E2AA7D4);
}

void sub_227D6E924()
{
  JUMPOUT(0x22E2AA7D4);
}

uint64_t sub_227D6E934(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)(*(_QWORD *)(a2 + 32) + 8);
}

void sub_227D6E940()
{
  CRDTModelFileSyncInfo.init()();
}

uint64_t sub_227D6E950(uint64_t a1)
{
  MEMORY[0x22E2AA7D4](&protocol conformance descriptor for CRDTModelFileSyncInfo<A>, a1);
  return sub_227E5FA68();
}

void sub_227D6E988(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD))(*a1 + 32))(*a1);
  free(v1);
}

void (*sub_227D6E9B4(_QWORD *a1))(_QWORD *a1)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = CRDTModelFileSyncInfo.additionalFields.modify();
  return sub_227D6E988;
}

void sub_227D6EA04()
{
  JUMPOUT(0x22E2AA7D4);
}

uint64_t sub_227D6EA14()
{
  MEMORY[0x22E2AA7D4](&protocol conformance descriptor for CRDTModelFileSyncInfo<A>);
  return sub_227E5FA38();
}

void sub_227D6EA54()
{
  JUMPOUT(0x22E2AA7D4);
}

uint64_t sub_227D6EA64()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void CRDTModelFileSyncInfo.init()()
{
  sub_227E5FC60();
  type metadata accessor for CRDTModelFileSyncInfo();
}

uint64_t sub_227D6EB24(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + *(int *)(result + 52)) = MEMORY[0x24BEE4B00];
  return result;
}

uint64_t static CRDTModelFileSyncInfo.modelName.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = (*(uint64_t (**)(void))(a2 + 8))();
  sub_227E6002C();
  return v3;
}

uint64_t (*CRDTModelFileSyncInfo.additionalFields.modify())()
{
  return nullsub_1;
}

uint64_t sub_227D6EBB4()
{
  uint64_t result;
  unint64_t v1;

  result = sub_227E5FEAC();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_227D6EC2C()
{
  return sub_227D51624(&qword_253F3A2F8, type metadata accessor for ReadingHistoryMonth, (uint64_t)&protocol conformance descriptor for ReadingHistoryMonth);
}

uint64_t sub_227D6EC58()
{
  return sub_227D51624(&qword_253F3A2F0, type metadata accessor for ReadingHistoryMonth, (uint64_t)&protocol conformance descriptor for ReadingHistoryMonth);
}

uint64_t sub_227D6EC84()
{
  return sub_227D51624(&qword_253F3A2E8, type metadata accessor for ReadingHistoryMonth, (uint64_t)&protocol conformance descriptor for ReadingHistoryMonth);
}

uint64_t assignWithTake for ReadingHistoryModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_227D68330(&qword_253F3AF68);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_227D68330(&qword_253F3AF30);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  *(_QWORD *)(a1 + *(int *)(a3 + 24)) = *(_QWORD *)(a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRelease();
  return a1;
}

void sub_227D6ED50()
{
  unint64_t v0;
  unint64_t v1;

  sub_227D62298(319, &qword_253F3AF70, (uint64_t *)&unk_253F3AFB0, &qword_253F3AFA0, &qword_253F3AFA8);
  if (v0 <= 0x3F)
  {
    sub_227D6A84C();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t sub_227D6EE00()
{
  sub_227D51624(&qword_253F3A210, type metadata accessor for ReadingHistoryModel, (uint64_t)&protocol conformance descriptor for ReadingHistoryModel);
  return sub_227E5FB04();
}

uint64_t sub_227D6EE5C()
{
  sub_227D51624(&qword_253F3A210, type metadata accessor for ReadingHistoryModel, (uint64_t)&protocol conformance descriptor for ReadingHistoryModel);
  return sub_227E5FAC8();
}

uint64_t sub_227D6EEC4()
{
  sub_227D51624(&qword_253F3A210, type metadata accessor for ReadingHistoryModel, (uint64_t)&protocol conformance descriptor for ReadingHistoryModel);
  return sub_227E5FAB0();
}

uint64_t sub_227D6EF04()
{
  return sub_227D51624(&qword_253F3A240, type metadata accessor for ReadingHistoryModel, (uint64_t)&protocol conformance descriptor for ReadingHistoryModel);
}

uint64_t sub_227D6EF30()
{
  return sub_227D51624(&qword_253F3A238, type metadata accessor for ReadingHistoryModel, (uint64_t)&protocol conformance descriptor for ReadingHistoryModel);
}

uint64_t sub_227D6EF5C()
{
  return sub_227D51624(&qword_253F3A218, type metadata accessor for ReadingHistoryModel, (uint64_t)&protocol conformance descriptor for ReadingHistoryModel);
}

uint64_t sub_227D6EF88()
{
  return sub_227D51624(&qword_253F3A220, type metadata accessor for ReadingHistoryModel, (uint64_t)&protocol conformance descriptor for ReadingHistoryModel);
}

uint64_t sub_227D6EFB4()
{
  return sub_227D515E4(&qword_253F3AF20, &qword_253F3AF30, MEMORY[0x24BE18498]);
}

uint64_t sub_227D6EFE0()
{
  return sub_227D515E4((unint64_t *)&unk_253F3AF50, &qword_253F3AF68, MEMORY[0x24BE18498]);
}

uint64_t sub_227D6F00C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;

  sub_227D68330((uint64_t *)&unk_253F3AFB0);
  sub_227D515E4(&qword_253F3AFA0, (uint64_t *)&unk_253F3AFB0, MEMORY[0x24BE18990]);
  sub_227D515E4(&qword_253F3AFA8, (uint64_t *)&unk_253F3AFB0, MEMORY[0x24BE18998]);
  sub_227E5FC78();
  sub_227E5F27C();
  sub_227D51624((unint64_t *)&unk_253F391C0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE958]);
  result = sub_227E5FC78();
  *(_QWORD *)(a2 + *(int *)(a1 + 24)) = MEMORY[0x24BEE4B00];
  return result;
}

uint64_t sub_227D6F128()
{
  sub_227D51624(&qword_253F3A210, type metadata accessor for ReadingHistoryModel, (uint64_t)&protocol conformance descriptor for ReadingHistoryModel);
  return sub_227E5FB28();
}

uint64_t (*sub_227D6F168())()
{
  return nullsub_1;
}

uint64_t sub_227D6F17C()
{
  return sub_227D51624(&qword_253F3A230, type metadata accessor for ReadingHistoryModel, (uint64_t)&protocol conformance descriptor for ReadingHistoryModel);
}

uint64_t sub_227D6F1A8()
{
  sub_227D51624(&qword_253F3A210, type metadata accessor for ReadingHistoryModel, (uint64_t)&protocol conformance descriptor for ReadingHistoryModel);
  return sub_227E5FAF8();
}

uint64_t sub_227D6F1F8()
{
  return sub_227D51624(&qword_253F3A228, type metadata accessor for ReadingHistoryModel, (uint64_t)&protocol conformance descriptor for ReadingHistoryModel);
}

uint64_t sub_227D6F224()
{
  uint64_t result;

  qword_253F3A1C8 = 0x7368746E6F6DLL;
  unk_253F3A1D0 = 0xE600000000000000;
  qword_253F3A1D8 = swift_getKeyPath();
  strcpy(byte_253F3A1E0, "streakRecords");
  HIWORD(qword_253F3A1E8) = -4864;
  result = swift_getKeyPath();
  qword_253F3A1F0 = result;
  return result;
}

uint64_t sub_227D6F29C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t);
  uint64_t result;
  char *v36;
  uint64_t v37;
  char *v38;
  void (*v39)(char *, _QWORD, uint64_t);
  uint64_t v40;
  uint64_t v41;
  void (*v42)(char *, uint64_t);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(uint64_t, uint64_t);
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t *v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  void (*v58)(char *, uint64_t);
  uint64_t v59;

  v55 = sub_227E5F2E8();
  v53 = *(_QWORD *)(v55 - 8);
  MEMORY[0x24BDAC7A8](v55, v4);
  v54 = (char *)&v50 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_227E5F300();
  v59 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6, v7);
  v9 = (char *)&v50 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_227D68330(&qword_253F391F0);
  MEMORY[0x24BDAC7A8](v10, v11);
  v13 = (char *)&v50 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_227D68330(&qword_253F391E8);
  MEMORY[0x24BDAC7A8](v14, v15);
  v17 = (char *)&v50 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_227E5F0A8();
  v57 = *(_QWORD *)(v18 - 8);
  v58 = (void (*)(char *, uint64_t))v18;
  MEMORY[0x24BDAC7A8](v18, v19);
  v21 = (char *)&v50 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_227D68330(&qword_253F391D0);
  MEMORY[0x24BDAC7A8](v22, v23);
  v25 = (char *)&v50 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = sub_227E5F27C();
  v27 = *(_QWORD *)(v26 - 8);
  v29 = MEMORY[0x24BDAC7A8](v26, v28);
  MEMORY[0x24BDAC7A8](v29, v30);
  v56 = (char *)&v50 - v32;
  if (a1 <= 9999)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v27 + 56))(v25, 1, 1, v26);
LABEL_4:
    result = sub_227D5809C((uint64_t)v25, &qword_253F391D0);
    *a2 = 0;
    a2[1] = 0;
    *((_BYTE *)a2 + 16) = 1;
    return result;
  }
  v51 = v31;
  v52 = a2;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v59 + 56))(v17, 1, 1, v6);
  v33 = sub_227E5F30C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v13, 1, 1, v33);
  a2 = v52;
  sub_227E5F09C();
  sub_227E5F288();
  sub_227E5F2B8();
  v34 = *(void (**)(char *, uint64_t))(v59 + 8);
  v34(v9, v6);
  (*(void (**)(char *, _QWORD))(v57 + 8))(v21, v58);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26) == 1)
    goto LABEL_4;
  v58 = v34;
  v59 = v6;
  v36 = v56;
  (*(void (**)(char *, char *, uint64_t))(v27 + 32))(v56, v25, v26);
  (*(void (**)(uint64_t, char *, uint64_t))(v27 + 16))(v51, v36, v26);
  sub_227E5F288();
  v37 = v53;
  v38 = v54;
  v39 = *(void (**)(char *, _QWORD, uint64_t))(v53 + 104);
  v40 = v55;
  v39(v54, *MEMORY[0x24BDCF240], v55);
  v41 = sub_227E5F2F4();
  v42 = *(void (**)(char *, uint64_t))(v37 + 8);
  v42(v38, v40);
  v39(v38, *MEMORY[0x24BDCF250], v40);
  v43 = sub_227E5F2F4();
  result = ((uint64_t (*)(char *, uint64_t))v42)(v38, v40);
  v44 = 100 * v41;
  if ((unsigned __int128)(v41 * (__int128)100) >> 64 == (100 * v41) >> 63)
  {
    v45 = v44 + v43;
    if (!__OFADD__(v44, v43))
    {
      v39(v38, *MEMORY[0x24BDCF220], v40);
      v46 = v51;
      v47 = sub_227E5F2F4();
      v48 = *(void (**)(uint64_t, uint64_t))(v27 + 8);
      v48(v46, v26);
      v42(v38, v40);
      v58(v9, v59);
      result = ((uint64_t (*)(char *, uint64_t))v48)(v56, v26);
      v49 = v52;
      *v52 = v45;
      v49[1] = v47;
      *((_BYTE *)v49 + 16) = 0;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_227D6F79C()
{
  unint64_t v0;
  unint64_t v1;

  sub_227E5F3E4();
  if (v0 <= 0x3F)
  {
    sub_227D5FD1C(319, &qword_253F3AE78, (void (*)(uint64_t))MEMORY[0x24BE5B990]);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t type metadata accessor for PBPropertyTimeSlice(uint64_t a1)
{
  return sub_227D5DFC8(a1, qword_253F3A120);
}

uint64_t sub_227D6F854(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;

  v4 = v2 + *(_QWORD *)(*(_QWORD *)v2 + 128);
  swift_beginAccess();
  *(_QWORD *)(v4 + 8) = a2;
  return swift_unknownObjectWeakAssign();
}

char *sub_227D6F8B4(uint64_t a1)
{
  return sub_227D51344(a1, (uint64_t)type metadata accessor for CRDTModelSyncVersion, (void (*)(uint64_t, char *, uint64_t))sub_227D5E458);
}

uint64_t sub_227D6F8C8(uint64_t a1, int a2, double a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, _QWORD, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;

  v20 = a2;
  v19 = a1;
  v5 = sub_227E602B4();
  v18 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v6);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_227E6029C();
  v10 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5688];
  MEMORY[0x24BDAC7A8](v9, v11);
  v12 = sub_227E5F978();
  MEMORY[0x24BDAC7A8](v12, v13);
  sub_227D52DBC(0, (unint64_t *)&qword_253F3B040);
  sub_227E5F960();
  v21 = MEMORY[0x24BEE4AF8];
  sub_227D51624((unint64_t *)&unk_253F3B030, v10, MEMORY[0x24BEE5698]);
  sub_227D68330((uint64_t *)&unk_253F3B000);
  sub_227D515E4(&qword_253F3B010, (uint64_t *)&unk_253F3B000, MEMORY[0x24BEE12C8]);
  sub_227E603E0();
  v14 = *(void (**)(char *, _QWORD, uint64_t))(v18 + 104);
  v14(v8, *MEMORY[0x24BEE5750], v5);
  *(_QWORD *)(v3 + 16) = sub_227E602E4();
  sub_227E5F96C();
  sub_227E60290();
  v14(v8, *MEMORY[0x24BEE5758], v5);
  v15 = sub_227E602E4();
  v16 = MEMORY[0x24BEE4B00];
  *(_QWORD *)(v3 + 24) = v15;
  *(_QWORD *)(v3 + 32) = v16;
  *(_QWORD *)(v3 + 72) = 0;
  swift_unknownObjectWeakInit();
  swift_beginAccess();
  *(_QWORD *)(v3 + 72) = 0;
  swift_unknownObjectWeakAssign();
  *(_QWORD *)(v3 + 40) = v19;
  *(double *)(v3 + 48) = a3;
  *(_BYTE *)(v3 + 56) = v20;
  return v3;
}

char *sub_227D6FB68(uint64_t a1)
{
  return sub_227D51344(a1, (uint64_t)&qword_253F398D0, (void (*)(uint64_t, char *, uint64_t))sub_227D5B0DC);
}

uint64_t sub_227D6FB7C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  v3 = *(_QWORD *)(v2 + 64);
  v4 = ((v3 + *(unsigned __int8 *)(v2 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80)) + v3;
  if (v4 > v3)
    v3 = v4;
  if (*(unsigned __int8 *)(a1 + v3) < 2u)
    return *(unsigned __int8 *)(a1 + v3);
  if (v3 <= 3)
    v5 = v3;
  else
    v5 = 4;
  return ((uint64_t (*)(void))((char *)&loc_227D6FBD0 + 4 * byte_227E6F2B6[v5]))();
}

uint64_t sub_227D6FC18()
{
  uint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t ObjectType;
  void (*v4)(uint64_t, uint64_t, uint64_t);
  uint64_t v5;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v1 = result + *(_QWORD *)(*(_QWORD *)result + 128);
    swift_beginAccess();
    if (MEMORY[0x22E2AA96C](v1))
    {
      v2 = *(_QWORD *)(v1 + 8);
      ObjectType = swift_getObjectType();
      v4 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16);
      v5 = swift_retain();
      v4(v5, ObjectType, v2);
      swift_release_n();
      return swift_unknownObjectRelease();
    }
    else
    {
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_227D6FCE4()
{
  return sub_227D6FC18();
}

uint64_t sub_227D6FCFC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t ObjectType;
  void *v16;
  void (*v17)(char *, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t);
  uint64_t aBlock;
  uint64_t v28;
  uint64_t (*v29)(uint64_t);
  void *v30;
  uint64_t (*v31)();
  uint64_t v32;

  v3 = sub_227E5F978();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3, v5);
  v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_227E5F948();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8, v10);
  v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = (char *)v1 + *(_QWORD *)(*v1 + 128);
  swift_beginAccess();
  if (MEMORY[0x22E2AA96C](v13))
  {
    v14 = *((_QWORD *)v13 + 1);
    ObjectType = swift_getObjectType();
    (*(void (**)(_QWORD *, uint64_t, uint64_t))(v14 + 8))(v1, ObjectType, v14);
    swift_unknownObjectRelease();
  }
  sub_227E5F93C();
  v31 = nullsub_1;
  v32 = 0;
  aBlock = MEMORY[0x24BDAC760];
  v28 = 1107296256;
  v29 = sub_227D5A858;
  v30 = &unk_24F08E208;
  v16 = _Block_copy(&aBlock);
  sub_227E5F960();
  MEMORY[0x22E2A991C](0, v7, v12, v16);
  _Block_release(v16);
  v26 = *(void (**)(char *, uint64_t))(v4 + 8);
  v26(v7, v3);
  v17 = *(void (**)(char *, uint64_t))(v9 + 8);
  v17(v12, v8);
  v18 = swift_beginAccess();
  v25 = v3;
  v19 = v1[4];
  MEMORY[0x24BDAC7A8](v18, v20);
  *(&v24 - 2) = a1;
  swift_bridgeObjectRetain();
  sub_227D6A6A4((void (*)(__int128 *))sub_227DE8EE8, (uint64_t)(&v24 - 4), v19);
  swift_bridgeObjectRelease();
  sub_227E5F93C();
  v21 = swift_allocObject();
  swift_weakInit();
  v31 = sub_227D6FCE4;
  v32 = v21;
  aBlock = MEMORY[0x24BDAC760];
  v28 = 1107296256;
  v29 = sub_227D5A858;
  v30 = &unk_24F08E258;
  v22 = _Block_copy(&aBlock);
  swift_retain();
  sub_227E5F960();
  MEMORY[0x22E2A991C](0, v7, v12, v22);
  _Block_release(v22);
  v26(v7, v25);
  v17(v12, v8);
  swift_release();
  return swift_release();
}

uint64_t sub_227D6FFD4()
{
  uint64_t result;

  sub_227D62058();
  result = sub_227E60380();
  qword_253F39FF0 = result;
  return result;
}

void sub_227D7003C()
{
  unint64_t v0;
  unint64_t v1;

  sub_227E5FE7C();
  if (v0 <= 0x3F)
  {
    sub_227D6A8F4();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t sub_227D700CC()
{
  return sub_227D51624(&qword_253F39F48, type metadata accessor for ReadingHistoryDay, (uint64_t)&protocol conformance descriptor for ReadingHistoryDay);
}

uint64_t sub_227D700F8()
{
  return sub_227D51624(&qword_253F39F40, type metadata accessor for ReadingHistoryDay, (uint64_t)&protocol conformance descriptor for ReadingHistoryDay);
}

uint64_t sub_227D70124()
{
  return sub_227D51624(&qword_253F39F38, type metadata accessor for ReadingHistoryDay, (uint64_t)&protocol conformance descriptor for ReadingHistoryDay);
}

uint64_t sub_227D70150()
{
  uint64_t result;

  sub_227D62058();
  result = sub_227E60380();
  qword_253F39F28 = result;
  return result;
}

void sub_227D701B8()
{
  unint64_t v0;
  unint64_t v1;

  sub_227E5F3E4();
  if (v0 <= 0x3F)
  {
    sub_227D5FD1C(319, &qword_253F3A770, (void (*)(uint64_t))type metadata accessor for PBPropertyConfiguration);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t type metadata accessor for PBPropertyBundle(uint64_t a1)
{
  return sub_227D5DFC8(a1, qword_253F39E90);
}

uint64_t type metadata accessor for PBPropertyValue(uint64_t a1)
{
  return sub_227D5DFC8(a1, qword_253F39D48);
}

uint64_t type metadata accessor for PBPropertyValue.OneOf_Params(uint64_t a1)
{
  return sub_227D5DFC8(a1, qword_253F39C98);
}

void sub_227D70298()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_253F39C30)
  {
    type metadata accessor for ReadingHistory.Streak(255);
    v0 = sub_227E6038C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_253F39C30);
  }
}

uint64_t sub_227D702EC()
{
  return sub_227D623B8();
}

_QWORD *assignWithCopy for ReadingHistory.State(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v20;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for ReadingHistory.Streak(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      v20 = sub_227E5F27C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 24))(v7, v8, v20);
      *(_QWORD *)&v7[*(int *)(v9 + 20)] = *(_QWORD *)&v8[*(int *)(v9 + 20)];
      goto LABEL_7;
    }
    sub_227D64BC4((uint64_t)v7, type metadata accessor for ReadingHistory.Streak);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v15 = sub_227D68330((uint64_t *)&unk_253F39C20);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  v14 = sub_227E5F27C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v7, v8, v14);
  *(_QWORD *)&v7[*(int *)(v9 + 20)] = *(_QWORD *)&v8[*(int *)(v9 + 20)];
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  v16 = a3[6];
  v17 = (char *)a1 + v16;
  v18 = (char *)a2 + v16;
  *(_QWORD *)v17 = *(_QWORD *)v18;
  *((_QWORD *)v17 + 1) = *((_QWORD *)v18 + 1);
  v17[16] = v18[16];
  *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void sub_227D70488()
{
  unint64_t v0;

  sub_227D70298();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t _s13ModelSnapshotVwxx(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;

  v4 = a1 + a2[5];
  v5 = sub_227D68330(&qword_253F3A1C0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 2, v5))
  {
    v6 = sub_227D68330(&qword_253F3AF68);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v4, v6);
    v7 = v4 + *(int *)(type metadata accessor for ReadingHistoryModel(0) + 20);
    v8 = sub_227D68330(&qword_253F3AF30);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
    swift_bridgeObjectRelease();
  }
  v9 = a1 + a2[6];
  v10 = type metadata accessor for ReadingHistory.ModelSnapshot.ModelValues(0);
  v11 = v9 + *(int *)(v10 + 20);
  v12 = type metadata accessor for ReadingHistory.Streak(0);
  v13 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48);
  if (!v13(v11, 1, v12))
  {
    v14 = sub_227E5F27C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v11, v14);
  }
  v15 = a1 + a2[7];
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v15, 1, v10);
  if (!(_DWORD)result)
  {
    v17 = v15 + *(int *)(v10 + 20);
    result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v13)(v17, 1, v12);
    if (!(_DWORD)result)
    {
      v18 = sub_227E5F27C();
      return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v17, v18);
    }
  }
  return result;
}

void sub_227D706A4()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_227D6247C(319);
  if (v0 <= 0x3F)
  {
    type metadata accessor for ReadingHistory.ModelSnapshot.ModelValues(319);
    if (v1 <= 0x3F)
    {
      sub_227D5FD1C(319, &qword_253F39A50, (void (*)(uint64_t))type metadata accessor for ReadingHistory.ModelSnapshot.ModelValues);
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

void ReadingHistory.ModelSnapshot.loaded.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

uint64_t ReadingHistory.ModelSnapshot.lastSource.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_227D5DF00(type metadata accessor for ReadingHistory.ModelSnapshot, &qword_253F39840, a1);
}

uint64_t _s13ModelSnapshotV11ModelValuesVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_227D7078C()
{
  unint64_t v0;

  sub_227D5FD1C(319, (unint64_t *)&qword_253F39C30, (void (*)(uint64_t))type metadata accessor for ReadingHistory.Streak);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t ReadingHistory.ModelSnapshot.ModelValues.longestStreak.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_227D5DF00(type metadata accessor for ReadingHistory.ModelSnapshot.ModelValues, (uint64_t *)&unk_253F39C20, a1);
}

__n128 ReadingHistory.ModelSnapshot.ModelValues.readingDay.getter@<Q0>(__n128 *a1@<X8>)
{
  __n128 *v1;
  unsigned __int8 v2;
  __n128 result;

  v2 = v1[1].n128_u8[0];
  result = *v1;
  *a1 = *v1;
  a1[1].n128_u8[0] = v2;
  return result;
}

ValueMetadata *type metadata accessor for ReadingHistory.Notification.PlaceholderStreakDayGoalNeedsUpdate()
{
  return &type metadata for ReadingHistory.Notification.PlaceholderStreakDayGoalNeedsUpdate;
}

unint64_t sub_227D70848()
{
  unint64_t result;

  result = qword_253F39A08;
  if (!qword_253F39A08)
  {
    result = MEMORY[0x22E2AA7D4](&protocol conformance descriptor for ReadingHistory.Notification.PlaceholderStreakDayGoalNeedsUpdate, &type metadata for ReadingHistory.Notification.PlaceholderStreakDayGoalNeedsUpdate);
    atomic_store(result, (unint64_t *)&qword_253F39A08);
  }
  return result;
}

unint64_t sub_227D7088C()
{
  unint64_t result;

  result = qword_253F39A00;
  if (!qword_253F39A00)
  {
    result = MEMORY[0x22E2AA7D4](&protocol conformance descriptor for ReadingHistory.Notification.PlaceholderStreakDayGoalNeedsUpdate, &type metadata for ReadingHistory.Notification.PlaceholderStreakDayGoalNeedsUpdate);
    atomic_store(result, (unint64_t *)&qword_253F39A00);
  }
  return result;
}

uint64_t sub_227D708D8()
{
  return sub_227D51624(&qword_253F39968, type metadata accessor for ReadingHistory.Notification.AddFakeSession, (uint64_t)&protocol conformance descriptor for ReadingHistory.Notification.AddFakeSession);
}

uint64_t sub_227D70904()
{
  return sub_227D51624(&qword_253F39960, type metadata accessor for ReadingHistory.Notification.AddFakeSession, (uint64_t)&protocol conformance descriptor for ReadingHistory.Notification.AddFakeSession);
}

ValueMetadata *type metadata accessor for ReadingHistory.Notification.ClearToday()
{
  return &type metadata for ReadingHistory.Notification.ClearToday;
}

unint64_t sub_227D70940()
{
  unint64_t result;

  result = qword_253F39958;
  if (!qword_253F39958)
  {
    result = MEMORY[0x22E2AA7D4](&protocol conformance descriptor for ReadingHistory.Notification.ClearToday, &type metadata for ReadingHistory.Notification.ClearToday);
    atomic_store(result, (unint64_t *)&qword_253F39958);
  }
  return result;
}

unint64_t sub_227D70984()
{
  unint64_t result;

  result = qword_253F39950;
  if (!qword_253F39950)
  {
    result = MEMORY[0x22E2AA7D4](&protocol conformance descriptor for ReadingHistory.Notification.ClearToday, &type metadata for ReadingHistory.Notification.ClearToday);
    atomic_store(result, (unint64_t *)&qword_253F39950);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for ReadingGoals.State(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 16) = v3;
  return result;
}

BOOL sub_227D709F8(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)a1 == *(_QWORD *)a2 && *(double *)(a1 + 8) == *(double *)(a2 + 8);
}

BOOL ReadingGoals.State.isDefaultYearlyReadingGoal.getter()
{
  _QWORD *v0;

  return *v0 == 3;
}

BOOL ReadingGoals.State.isDefaultDailyReadingGoal.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 8) == 300.0;
}

uint64_t sub_227D70A50(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v2 = swift_checkMetadataState();
  v3 = v2;
  if (v4 <= 0x3F)
  {
    v3 = type metadata accessor for ModelState.Source(319, v2, *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32));
    if (v5 <= 0x3F)
    {
      sub_227D6E74C();
      v3 = v6;
      if (v7 <= 0x3F)
      {
        swift_initStructMetadata();
        return 0;
      }
    }
  }
  return v3;
}

uint64_t sub_227D70B14(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned int v5;
  uint64_t v6;
  char v7;
  int v8;
  unsigned int v9;
  int v10;
  uint64_t result;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 > 1)
  {
LABEL_18:
    result = (*(uint64_t (**)(uint64_t))(v4 + 48))(a1);
    if ((_DWORD)result)
      return result;
    return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
  }
  v6 = *(_QWORD *)(v4 + 64);
  v7 = 8 * v6;
  if (v6 <= 3)
  {
    v9 = (~(-1 << v7) - v5 + 2) >> v7;
    if (v9 > 0xFFFE)
    {
      v8 = *(_DWORD *)(a1 + v6);
      if (!v8)
        goto LABEL_17;
      goto LABEL_10;
    }
    if (v9 > 0xFE)
    {
      v8 = *(unsigned __int16 *)(a1 + v6);
      if (!*(_WORD *)(a1 + v6))
        goto LABEL_17;
      goto LABEL_10;
    }
    if (!v9)
    {
LABEL_17:
      if (!v5)
        return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
      goto LABEL_18;
    }
  }
  v8 = *(unsigned __int8 *)(a1 + v6);
  if (!*(_BYTE *)(a1 + v6))
    goto LABEL_17;
LABEL_10:
  v10 = (v8 - 1) << v7;
  if (v6 > 3)
    v10 = 0;
  if ((_DWORD)v6)
  {
    if (v6 > 3)
      LODWORD(v6) = 4;
    __asm { BR              X11 }
  }
  result = v5 + v10 + 1;
  if (v5 + v10 == -1)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
  return result;
}

uint64_t sub_227D70C50()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

uint64_t ModelState.model.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t ModelState.description.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  unint64_t v18;

  v2 = v1;
  v4 = sub_227D68330(&qword_253F3A4F0);
  MEMORY[0x24BDAC7A8](v4, v5);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = 0;
  v18 = 0xE000000000000000;
  sub_227E60494();
  v8 = *(_QWORD *)(a1 + 16);
  v9 = *(_QWORD *)(a1 + 32);
  v10 = sub_227E60674();
  v12 = v11;
  swift_bridgeObjectRelease();
  v17 = v10;
  v18 = v12;
  sub_227E6002C();
  v13 = *(_QWORD *)(a1 + 24);
  sub_227E6002C();
  swift_bridgeObjectRelease();
  sub_227E6002C();
  v14 = type metadata accessor for ModelState.Source(0, v8, v13, v9);
  ModelState.Source.description.getter(v14);
  sub_227E6002C();
  swift_bridgeObjectRelease();
  sub_227E6002C();
  sub_227D6E704(v2 + *(int *)(a1 + 52), (uint64_t)v7);
  v15 = type metadata accessor for CRDTModelRevisionInfo();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 48))(v7, 1, v15) == 1)
  {
    sub_227D5809C((uint64_t)v7, &qword_253F3A4F0);
  }
  else
  {
    CRDTModelRevisionInfo.description.getter();
    sub_227DD7BA4((uint64_t)v7);
  }
  sub_227E6002C();
  swift_bridgeObjectRelease();
  return v17;
}

uint64_t type metadata accessor for ModelState.LoadedState(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_227D6837C(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ModelState.LoadedState);
}

void type metadata accessor for CRDTModelLocalFileContextStore()
{
  JUMPOUT(0x22E2AA750);
}

void static CRDTModelLocalFileContextStore.persistentContext(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t);
  id v16;
  id v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;

  v21 = a1;
  v22 = a2;
  v2 = sub_227D68330(&qword_253F391A0);
  MEMORY[0x24BDAC7A8](v2, v3);
  v4 = sub_227E5F1B0();
  v5 = *(_QWORD *)(v4 - 8);
  v7 = MEMORY[0x24BDAC7A8](v4, v6);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v7, v10);
  v13 = (char *)&v19 - v12;
  MEMORY[0x24BDAC7A8](v11, v14);
  type metadata accessor for _CRDTModelContextStoreUtils();
  sub_227D5732C((uint64_t)v13);
  sub_227E5F18C();
  v15 = *(void (**)(char *, uint64_t))(v5 + 8);
  v15(v13, v4);
  v16 = objc_msgSend((id)objc_opt_self(), sel_books);
  v17 = objc_msgSend(v16, sel_containerURL);

  sub_227E5F198();
  sub_227E5F18C();
  v15(v9, v4);
  v18 = *(_OWORD *)(v20 + 96);
  v23 = *(_OWORD *)(v20 + 80);
  v24 = v18;
  type metadata accessor for _CRDTModelContextStore();
}

uint64_t sub_227D710B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 16))(v2, v4, v1);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v0 + 56))(v2, 0, 1, v1);
  v7 = sub_227D57490(v5, v2, *(_QWORD *)(v6 - 128), *(_QWORD *)(v6 - 120));
  sub_227D5809C(v2, &qword_253F391A0);
  v3(v4, v1);
  v3(v5, v1);
  return v7;
}

void type metadata accessor for CRDTModelFileSyncContextStore()
{
  JUMPOUT(0x22E2AA750);
}

void static CRDTModelFileSyncContextStore.persistentContext(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t);
  id v16;
  id v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;

  v21 = a1;
  v22 = a2;
  v2 = sub_227D68330(&qword_253F391A0);
  MEMORY[0x24BDAC7A8](v2, v3);
  v4 = sub_227E5F1B0();
  v5 = *(_QWORD *)(v4 - 8);
  v7 = MEMORY[0x24BDAC7A8](v4, v6);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v7, v10);
  v13 = (char *)&v19 - v12;
  MEMORY[0x24BDAC7A8](v11, v14);
  type metadata accessor for _CRDTModelContextStoreUtils();
  sub_227D5732C((uint64_t)v13);
  sub_227E5F18C();
  v15 = *(void (**)(char *, uint64_t))(v5 + 8);
  v15(v13, v4);
  v16 = objc_msgSend((id)objc_opt_self(), sel_books);
  v17 = objc_msgSend(v16, sel_containerURL);

  sub_227E5F198();
  sub_227E5F18C();
  v15(v9, v4);
  v18 = *(_OWORD *)(v20 + 96);
  v23 = *(_OWORD *)(v20 + 80);
  v24 = v18;
  type metadata accessor for _CRDTModelContextStore();
}

uint64_t sub_227D712F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 16))(v2, v4, v1);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v0 + 56))(v2, 0, 1, v1);
  v7 = sub_227D57490(v5, v2, *(_QWORD *)(v6 - 128), *(_QWORD *)(v6 - 120));
  sub_227D5809C(v2, &qword_253F391A0);
  v3(v4, v1);
  v3(v5, v1);
  return v7;
}

uint64_t sub_227D71384()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for ReadingHistoryDataStore.State(319);
  if (v1 <= 0x3F)
    return swift_updateClassMetadata2();
  return result;
}

uint64_t type metadata accessor for ReadingHistoryDataStore(uint64_t a1)
{
  return sub_227D5DFC8(a1, qword_253F39418);
}

uint64_t sub_227D7146C()
{
  return sub_227E602CC();
}

uint64_t sub_227D714BC@<X0>(char *a1@<X0>, uint64_t a2@<X8>)
{
  return ReadingHistoryDataStore.readingHistoryModelSnapshot(currentTime:)(a1, a2);
}

BookDataStore::ReadingHistoryDataStore::Config __swiftcall ReadingHistoryDataStore.Config.init(dataPruningEnabled:historicalMonthsToKeep:)(Swift::Bool dataPruningEnabled, Swift::Int historicalMonthsToKeep)
{
  uint64_t v2;
  BookDataStore::ReadingHistoryDataStore::Config result;

  *(_BYTE *)v2 = dataPruningEnabled;
  *(_QWORD *)(v2 + 8) = historicalMonthsToKeep;
  result.historicalMonthsToKeep = historicalMonthsToKeep;
  result.dataPruningEnabled = dataPruningEnabled;
  return result;
}

uint64_t sub_227D714E8(uint64_t a1)
{
  return sub_227D714F0(a1);
}

uint64_t sub_227D714F0(uint64_t a1)
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_227D71DB4(a1);
    return swift_release();
  }
  return result;
}

uint64_t sub_227D7154C(uint64_t *a1)
{
  return sub_227D71554(a1);
}

uint64_t sub_227D71554(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;
  uint64_t result;
  _QWORD v9[5];
  char v10;
  char v11;

  v1 = *a1;
  v2 = a1[1];
  v3 = a1[2];
  v4 = a1[3];
  v5 = a1[4];
  v6 = *((_BYTE *)a1 + 40);
  v7 = *((_BYTE *)a1 + 41);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v9[0] = v1;
    v9[1] = v2;
    v9[2] = v3;
    v9[3] = v4;
    v9[4] = v5;
    v10 = v6;
    v11 = v7;
    sub_227D5A5A0((uint64_t)v9);
    return swift_release();
  }
  return result;
}

uint64_t ReadingHistoryDataStore.init(goals:modelProvider:transactionProvider:config:userDefaults:currentDate:)(_QWORD *a1, uint64_t a2, uint64_t a3, unsigned __int8 *a4, _QWORD *a5, void (*a6)(void), uint64_t a7)
{
  uint64_t v8;

  v8 = sub_227DFB658(a1, a2, a3, a4, a5, a6, a7);
  swift_unknownObjectRelease();

  swift_release();
  return v8;
}

void sub_227D71640()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  type metadata accessor for ReadingHistoryModel(319);
  if (v0 <= 0x3F)
  {
    sub_227D70298();
    if (v1 <= 0x3F)
    {
      sub_227E5F27C();
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

Swift::Void __swiftcall ReadingHistoryDataStore.observeSignificantDateChange(_:)(NSNotificationName a1)
{
  uint64_t v1;
  id v3;

  v3 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  objc_msgSend(v3, sel_addObserver_selector_name_object_, v1, sel__handleSignificantDateChange_, a1, 0);

}

uint64_t sub_227D7174C()
{
  uint64_t v0;

  return sub_227D58DB0(v0 + 16, *(_QWORD *)(v0 + 64), *(void (**)(uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t), uint64_t, uint64_t))(v0 + 72));
}

uint64_t sub_227D71758()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(sub_227D68330(&qword_253F3A080) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  return sub_227D7179C(v0 + v2, *(_QWORD *)(v0 + ((*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_227D7179C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  int EnumCaseMultiPayload;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  uint64_t v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  NSObject *v56;
  _QWORD *v57;
  uint64_t v58;
  void *v59;
  uint64_t result;
  uint64_t *v61;
  uint64_t v62;
  char v63;
  void *v64;
  uint64_t (*v65)();
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD aBlock[3];
  void *v76;
  uint64_t (*v77)();
  uint64_t v78;

  v74 = a2;
  v73 = type metadata accessor for ReadingHistoryModel(0);
  v4 = MEMORY[0x24BDAC7A8](v73, v3);
  v6 = (char *)&v67 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v4, v7);
  v10 = (char *)&v67 - v9;
  MEMORY[0x24BDAC7A8](v8, v11);
  v13 = (char *)&v67 - v12;
  v14 = sub_227D68330(&qword_253F3A080);
  v16 = MEMORY[0x24BDAC7A8](v14, v15);
  v18 = (char *)&v67 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16, v19);
  v21 = (char *)&v67 - v20;
  v72 = sub_227D68330(&qword_253F398D0);
  v23 = MEMORY[0x24BDAC7A8](v72, v22);
  v25 = (char *)&v67 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = MEMORY[0x24BDAC7A8](v23, v26);
  v67 = (uint64_t)&v67 - v28;
  v30 = MEMORY[0x24BDAC7A8](v27, v29);
  v69 = (uint64_t)&v67 - v31;
  v33 = MEMORY[0x24BDAC7A8](v30, v32);
  v68 = (uint64_t)&v67 - v34;
  MEMORY[0x24BDAC7A8](v33, v35);
  v37 = (char *)&v67 - v36;
  v70 = a1;
  sub_227D5DF48(a1, (uint64_t)v21, &qword_253F3A080);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v71 = v6;
  if (EnumCaseMultiPayload == 1)
  {
    v39 = sub_227D68330(&qword_255928C80);
    sub_227D5B0DC((uint64_t)&v21[*(int *)(v39 + 48)], (uint64_t)v37, &qword_253F398D0);
    sub_227D5809C((uint64_t)v21, &qword_253F398D0);
  }
  else
  {
    sub_227D5B0DC((uint64_t)v21, (uint64_t)v37, &qword_253F398D0);
  }
  sub_227D5DFFC((uint64_t)v37, (uint64_t)v13, type metadata accessor for ReadingHistoryModel);
  v40 = v74;
  v41 = v74 + OBJC_IVAR____TtC13BookDataStore23ReadingHistoryDataStore__state;
  swift_beginAccess();
  sub_227D5DFFC(v41, (uint64_t)v10, type metadata accessor for ReadingHistoryModel);
  sub_227D51624(&qword_253F3A210, type metadata accessor for ReadingHistoryModel, (uint64_t)&protocol conformance descriptor for ReadingHistoryModel);
  v42 = sub_227E5FB1C();
  sub_227D64BC4((uint64_t)v10, type metadata accessor for ReadingHistoryModel);
  sub_227D64BC4((uint64_t)v13, type metadata accessor for ReadingHistoryModel);
  if ((v42 & 1) != 0)
  {
    v43 = v37;
    sub_227DF1C34((uint64_t)v37);
    sub_227D5DF48(v70, (uint64_t)v18, &qword_253F3A080);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v44 = (uint64_t)&v18[*(int *)(sub_227D68330(&qword_255928C80) + 48)];
      v45 = v68;
      sub_227D5B0DC((uint64_t)v18, v68, &qword_253F398D0);
      v46 = v69;
      sub_227D5B0DC(v44, v69, &qword_253F398D0);
      v47 = v72;
      LOBYTE(v44) = *(_BYTE *)(v45 + *(int *)(v72 + 44));
      v48 = v67;
      sub_227D5DF48(v46, v67, &qword_253F398D0);
      if ((v44 & 1) != 0)
      {
        sub_227D5809C(v48, &qword_253F398D0);
      }
      else
      {
        v63 = *(_BYTE *)(v48 + *(int *)(v47 + 44));
        sub_227D5809C(v48, &qword_253F398D0);
        if ((v63 & 1) != 0 && *(_BYTE *)(v40 + 152) == 1)
          sub_227DF4BD0();
      }
      sub_227D5809C(v46, &qword_253F398D0);
      v62 = v45;
      v61 = &qword_253F398D0;
    }
    else
    {
      v61 = &qword_253F3A080;
      v62 = (uint64_t)v18;
    }
    sub_227D5809C(v62, v61);
    sub_227D572C8(v40 + 56, (uint64_t)aBlock);
    v64 = v76;
    v65 = v77;
    sub_227D572A4(aBlock, (uint64_t)v76);
    v66 = (uint64_t)v71;
    sub_227D5DFFC(v41, (uint64_t)v71, type metadata accessor for ReadingHistoryModel);
    (*((void (**)(uint64_t, void *, uint64_t (*)()))v65 + 6))(v66, v64, v65);
    sub_227D64BC4(v66, type metadata accessor for ReadingHistoryModel);
    sub_227D58120((uint64_t)aBlock);
    v37 = v43;
    return sub_227D5809C((uint64_t)v37, &qword_253F398D0);
  }
  v49 = v72;
  v50 = v37[*(int *)(v72 + 44)];
  v51 = OBJC_IVAR____TtC13BookDataStore23ReadingHistoryDataStore_lastModelChange;
  swift_retain();
  sub_227E602CC();
  swift_release();
  v52 = v25[*(int *)(v49 + 44)];
  v53 = sub_227D5809C((uint64_t)v25, &qword_253F398D0);
  if (v50 == v52)
    return sub_227D5809C((uint64_t)v37, &qword_253F398D0);
  v55 = *(_QWORD *)(v40 + v51);
  MEMORY[0x24BDAC7A8](v53, v54);
  *(&v67 - 2) = (uint64_t)v37;
  v56 = *(NSObject **)(v55 + 16);
  v57 = (_QWORD *)swift_allocObject();
  v57[2] = sub_227DFE6F8;
  v57[3] = &v67 - 4;
  v57[4] = v55;
  v58 = swift_allocObject();
  *(_QWORD *)(v58 + 16) = sub_227DFE8B4;
  *(_QWORD *)(v58 + 24) = v57;
  v77 = sub_227D63158;
  v78 = v58;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_227D62A60;
  v76 = &unk_24F08F238;
  v59 = _Block_copy(aBlock);
  swift_retain_n();
  swift_retain();
  swift_release();
  dispatch_sync(v56, v59);
  _Block_release(v59);
  LOBYTE(v56) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  result = swift_release();
  if ((v56 & 1) == 0)
    return sub_227D5809C((uint64_t)v37, &qword_253F398D0);
  __break(1u);
  return result;
}

uint64_t sub_227D71DB4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  char isEscapingClosureAtFileLocation;
  uint64_t result;
  _QWORD aBlock[6];

  v3 = sub_227D68330(&qword_253F3A080);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  MEMORY[0x24BDAC7A8](v3, v6);
  v7 = *(NSObject **)(v1 + 144);
  sub_227D5DF48(a1, (uint64_t)aBlock - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_253F3A080);
  v8 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v9 = swift_allocObject();
  sub_227D5B0DC((uint64_t)aBlock - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v9 + v8, &qword_253F3A080);
  *(_QWORD *)(v9 + ((v5 + v8 + 7) & 0xFFFFFFFFFFFFFFF8)) = v1;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = sub_227D71758;
  *(_QWORD *)(v10 + 24) = v9;
  aBlock[4] = sub_227D63158;
  aBlock[5] = v10;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_227D62A60;
  aBlock[3] = &unk_24F08F1C0;
  v11 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v7, v11);
  _Block_release(v11);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  return result;
}

uint64_t ReadingHistoryDataStore.updateCollector.setter(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  sub_227D5E414(a1, v1 + 16, &qword_253F3AE58);
  return swift_endAccess();
}

uint64_t dispatch thunk of ReadingHistoryDataSourceObservable.addObserver(_:modelChange:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t dispatch thunk of ReadingHistoryDataSourceReader.readingHistoryState(range:currentTime:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 40))();
}

uint64_t dispatch thunk of ReadingHistoryDataSourceReader.readingHistoryDay(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of ReadingHistoryDataSourceReader.readingHistoryModelSnapshot(currentTime:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t type metadata accessor for ReadingGoalsDataStore()
{
  return objc_opt_self();
}

uint64_t sub_227D71FF0(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;

  v5 = *v2;
  swift_beginAccess();
  v6 = *(_QWORD *)(v5 + 96);
  *(_QWORD *)(v5 + 96) = a1;
  *(_QWORD *)(v5 + 104) = a2;
  return sub_227D5B660(v6);
}

uint64_t type metadata accessor for PBPropertyBookImpressionParam(uint64_t a1)
{
  return sub_227D5DFC8(a1, qword_255929B88);
}

uint64_t sub_227D72058()
{
  uint64_t result;
  unint64_t v1;

  result = sub_227E5F3E4();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for PBPropertyBookReadParams(uint64_t a1)
{
  return sub_227D5DFC8(a1, qword_253F391F8);
}

void sub_227D720EC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_253F391D8)
  {
    sub_227E5F27C();
    v0 = sub_227E6038C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_253F391D8);
  }
}

void sub_227D735EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_227D74B98(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 0xCu);
}

void sub_227D74BE8()
{
  BDSServiceProxy *v0;
  void *v1;

  v0 = objc_alloc_init(BDSServiceProxy);
  v1 = (void *)qword_253F3C6C8;
  qword_253F3C6C8 = (uint64_t)v0;

}

void sub_227D751B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_227D751CC(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_227D751DC(uint64_t a1)
{

}

void sub_227D751E4(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;

  objc_msgSend_currentSaltVersionIdentifier(*(void **)(a1 + 32), a2, a3, a4, a5);
  v6 = objc_claimAutoreleasedReturnValue();
  v7 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v8 = *(void **)(v7 + 40);
  *(_QWORD *)(v7 + 40) = v6;

}

void sub_227D752E4(_Unwind_Exception *a1)
{
  uint64_t v1;

  objc_destroyWeak((id *)(v1 - 40));
  _Unwind_Resume(a1);
}

void sub_227D752F8(uint64_t a1)
{
  const char *v2;
  uint64_t v3;
  uint64_t v4;
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  objc_msgSend_wq_refreshSalt_(WeakRetained, v2, *(_QWORD *)(a1 + 32), v3, v4);

}

void sub_227D753FC(_Unwind_Exception *a1)
{
  uint64_t v1;

  objc_destroyWeak((id *)(v1 - 40));
  _Unwind_Resume(a1);
}

void sub_227D75410(uint64_t a1)
{
  id WeakRetained;
  NSObject *v3;
  const char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  const char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  const char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  const char *v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  void *v26;
  __int16 v27;
  int isSaltRefreshInProgress;
  uint64_t v29;

  v29 = *MEMORY[0x24BDAC8D0];
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  BDSCloudKitLog();
  v3 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    objc_msgSend_currentSalt(WeakRetained, v4, v5, v6, v7);
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    v25 = 138412546;
    v26 = v8;
    v27 = 1024;
    isSaltRefreshInProgress = objc_msgSend_isSaltRefreshInProgress(WeakRetained, v9, v10, v11, v12);
    _os_log_impl(&dword_227D4F000, v3, OS_LOG_TYPE_DEFAULT, "BDSSyncEngineSaltManager refreshSaltIfNeeded - currentSalt: %@, isSaltRefreshInProgress: %{BOOL}d", (uint8_t *)&v25, 0x12u);

  }
  objc_msgSend_currentSalt(WeakRetained, v13, v14, v15, v16);
  v17 = (void *)objc_claimAutoreleasedReturnValue();
  if (v17)
  {

  }
  else if ((objc_msgSend_isSaltRefreshInProgress(WeakRetained, v18, v19, v20, v21) & 1) == 0)
  {
    objc_msgSend_wq_refreshSalt_(WeakRetained, v22, *(_QWORD *)(a1 + 32), v23, v24);
  }

}

void sub_227D756B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_227D756D4(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id WeakRetained;
  const char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  NSObject *v13;
  id v14;
  const char *v15;
  uint64_t v16;
  uint64_t v17;
  const char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  void *v23;
  void *v24;
  const char *v25;
  id v26;
  _QWORD v27[5];
  id v28;
  id v29;
  id v30;
  id v31;
  uint64_t v32;
  _QWORD v33[2];

  v33[1] = *MEMORY[0x24BDAC8D0];
  v5 = a2;
  v6 = a3;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v12 = WeakRetained;
  if (!WeakRetained)
  {
    v14 = objc_alloc(MEMORY[0x24BDBCE88]);
    objc_msgSend_stringWithFormat_(MEMORY[0x24BDD17C8], v15, (uint64_t)CFSTR("Nil weak self after fetch salt record"), v16, v17);
    v22 = (void *)objc_claimAutoreleasedReturnValue();
    v32 = *MEMORY[0x24BDD1398];
    v23 = v6;
    if (!v6)
    {
      objc_msgSend_null(MEMORY[0x24BDBCEF8], v18, v19, v20, v21);
      v23 = (void *)objc_claimAutoreleasedReturnValue();
    }
    v33[0] = v23;
    objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x24BDBCE70], v18, (uint64_t)v33, (uint64_t)&v32, 1);
    v24 = (void *)objc_claimAutoreleasedReturnValue();
    v26 = (id)objc_msgSend_initWithName_reason_userInfo_(v14, v25, (uint64_t)CFSTR("No Books Salt"), (uint64_t)v22, (uint64_t)v24);

    if (!v6)
    objc_exception_throw(v26);
  }
  objc_msgSend_workQueue(WeakRetained, v8, v9, v10, v11);
  v13 = objc_claimAutoreleasedReturnValue();
  v27[0] = MEMORY[0x24BDAC760];
  v27[1] = 3221225472;
  v27[2] = sub_227D759A4;
  v27[3] = &unk_24F089208;
  v27[4] = v12;
  v28 = v6;
  v29 = v5;
  objc_copyWeak(&v31, (id *)(a1 + 40));
  v30 = *(id *)(a1 + 32);
  dispatch_async(v13, v27);

  objc_destroyWeak(&v31);
}

void sub_227D759A4(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void **v10;
  NSObject *v11;
  id v12;
  const char *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  id v17;
  const char *v18;
  uint64_t v19;
  void *v20;
  const char *v21;
  uint64_t v22;
  void *v23;
  const char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  const char *v29;
  uint64_t v30;
  NSObject *v31;
  const char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  id v37;
  const char *v38;
  uint64_t v39;
  void *v40;
  void *v41;
  const char *v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  const char *v46;
  uint64_t v47;
  uint64_t v48;
  const char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void *v54;
  const char *v55;
  uint64_t v56;
  uint64_t v57;
  NSObject *v58;
  uint64_t v59;
  const char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void *v64;
  const char *v65;
  uint64_t v66;
  id v67;
  const char *v68;
  uint64_t v69;
  uint64_t v70;
  const char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  void *v75;
  void *v76;
  void *v77;
  void *v78;
  const char *v79;
  id v80;
  _QWORD v81[4];
  id v82;
  id v83;
  uint64_t *v84;
  id v85;
  uint8_t buf[16];
  uint64_t v87;
  uint64_t *v88;
  uint64_t v89;
  uint64_t (*v90)(uint64_t, uint64_t);
  void (*v91)(uint64_t);
  id v92;
  uint64_t v93;
  void *v94;
  _OWORD bytes[8];
  uint64_t v96;

  v96 = *MEMORY[0x24BDAC8D0];
  objc_msgSend_setIsSaltRefreshInProgress_(*(void **)(a1 + 32), a2, 0, a4, a5);
  v87 = 0;
  v88 = &v87;
  v89 = 0x3032000000;
  v90 = sub_227D751CC;
  v91 = sub_227D751DC;
  v92 = 0;
  v10 = (void **)(a1 + 40);
  if (*(_QWORD *)(a1 + 40) || (v40 = *(void **)(a1 + 48)) == 0)
  {
    BDSCloudKitLog();
    v11 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
      sub_227E5859C((uint64_t *)(a1 + 40), a1, v11);

    memset(bytes, 0, sizeof(bytes));
    if (SecRandomCopyBytes((SecRandomRef)*MEMORY[0x24BDE94B8], 0x80uLL, bytes))
    {
      v67 = objc_alloc(MEMORY[0x24BDBCE88]);
      objc_msgSend_stringWithFormat_(MEMORY[0x24BDD17C8], v68, (uint64_t)CFSTR("Unable to generate random salt"), v69, v70);
      v75 = (void *)objc_claimAutoreleasedReturnValue();
      v93 = *MEMORY[0x24BDD1398];
      v76 = *v10;
      if (*v10)
      {
        v77 = *v10;
      }
      else
      {
        objc_msgSend_null(MEMORY[0x24BDBCEF8], v71, v72, v73, v74);
        v77 = (void *)objc_claimAutoreleasedReturnValue();
      }
      v94 = v77;
      objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x24BDBCE70], v71, (uint64_t)&v94, (uint64_t)&v93, 1);
      v78 = (void *)objc_claimAutoreleasedReturnValue();
      v80 = (id)objc_msgSend_initWithName_reason_userInfo_(v67, v79, (uint64_t)CFSTR("No Books Record Salt"), (uint64_t)v75, (uint64_t)v78);

      if (!v76)
      objc_exception_throw(v80);
    }
    v12 = objc_alloc(MEMORY[0x24BDB91E8]);
    v16 = (void *)objc_msgSend_initWithRecordName_(v12, v13, (uint64_t)CFSTR("recordIDSalt"), v14, v15);
    v17 = objc_alloc(MEMORY[0x24BDB91D8]);
    v20 = (void *)objc_msgSend_initWithRecordType_recordID_(v17, v18, (uint64_t)CFSTR("recordIDSalt"), (uint64_t)v16, v19);
    objc_msgSend_dataWithBytes_length_(MEMORY[0x24BDBCE50], v21, (uint64_t)bytes, 128, v22);
    v23 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_encryptedValuesByKey(v20, v24, v25, v26, v27);
    v28 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_setObject_forKeyedSubscript_(v28, v29, (uint64_t)v23, (uint64_t)CFSTR("saltEncrypted"), v30);

    BDSCloudKitSyncLog();
    v31 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v31, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)buf = 0;
      _os_log_impl(&dword_227D4F000, v31, OS_LOG_TYPE_INFO, "BDSSyncEngineSaltManager: Will save record salt", buf, 2u);
    }

    objc_msgSend_database(*(void **)(a1 + 32), v32, v33, v34, v35);
    v36 = (void *)objc_claimAutoreleasedReturnValue();
    v81[0] = MEMORY[0x24BDAC760];
    v81[1] = 3221225472;
    v81[2] = sub_227D75E58;
    v81[3] = &unk_24F0891E0;
    objc_copyWeak(&v85, (id *)(a1 + 64));
    v84 = &v87;
    v37 = v23;
    v82 = v37;
    v83 = *(id *)(a1 + 56);
    objc_msgSend_saveRecord_completionHandler_(v36, v38, (uint64_t)v20, (uint64_t)v81, v39);

    objc_destroyWeak(&v85);
  }
  else
  {
    objc_msgSend_encryptedValuesByKey(v40, v6, v7, v8, v9);
    v41 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_objectForKeyedSubscript_(v41, v42, (uint64_t)CFSTR("saltEncrypted"), v43, v44);
    v45 = (void *)objc_claimAutoreleasedReturnValue();

    if (!v45)
    {
      objc_msgSend_objectForKeyedSubscript_(*(void **)(a1 + 48), v46, (uint64_t)CFSTR("salt"), v47, v48);
      v45 = (void *)objc_claimAutoreleasedReturnValue();
    }
    objc_msgSend_setCurrentSalt_(*(void **)(a1 + 32), v46, (uint64_t)v45, v47, v48);
    objc_msgSend_recordChangeTag(*(void **)(a1 + 48), v49, v50, v51, v52);
    v53 = objc_claimAutoreleasedReturnValue();
    v54 = (void *)v88[5];
    v88[5] = v53;

    objc_msgSend_setCurrentSaltVersionIdentifier_(*(void **)(a1 + 32), v55, v88[5], v56, v57);
    BDSCloudKitSyncLog();
    v58 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v58, OS_LOG_TYPE_DEFAULT))
    {
      v59 = v88[5];
      LODWORD(bytes[0]) = 138412546;
      *(_QWORD *)((char *)bytes + 4) = v45;
      WORD6(bytes[0]) = 2112;
      *(_QWORD *)((char *)bytes + 14) = v59;
      _os_log_impl(&dword_227D4F000, v58, OS_LOG_TYPE_DEFAULT, "BDSSyncEngineSaltManager: Successfully read existing record salt salt:(%@) changeTag:(%@). Calling completion", (uint8_t *)bytes, 0x16u);
    }

    objc_msgSend_observer(*(void **)(a1 + 32), v60, v61, v62, v63);
    v64 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_saltManager_updatedSaltWithVersion_(v64, v65, *(_QWORD *)(a1 + 32), v88[5], v66);

  }
  _Block_object_dispose(&v87, 8);

}

void sub_227D75E0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_227D75E58(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id WeakRetained;
  void *v8;
  NSObject *v9;
  const char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  const char *v15;
  uint64_t v16;
  uint64_t v17;
  const char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  const char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  const char *v28;
  uint64_t v29;
  uint64_t v30;
  NSObject *v31;
  const char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  const char *v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  NSObject *v41;
  const char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  const char *v47;
  uint64_t v48;
  uint64_t v49;
  const char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  const char *v57;
  uint64_t v58;
  uint64_t v59;
  NSObject *v60;
  const char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  const char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void *v69;
  void *v70;
  const char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  void *v75;
  const char *v76;
  uint64_t v77;
  uint64_t v78;
  void *v79;
  const char *v80;
  uint64_t v81;
  uint64_t v82;
  const char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  void *v89;
  const char *v90;
  uint64_t v91;
  uint64_t v92;
  void *v93;
  NSObject *v94;
  NSObject *v95;
  const char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  void *v100;
  void *v101;
  const char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  void *v106;
  const char *v107;
  uint64_t v108;
  void *v109;
  id v110;
  const char *v111;
  uint64_t v112;
  uint64_t v113;
  const char *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  void *v118;
  void *v119;
  void *v120;
  const char *v121;
  id v122;
  uint64_t v123;
  void *v124;
  uint8_t buf[4];
  void *v126;
  __int16 v127;
  void *v128;
  __int16 v129;
  id v130;
  uint64_t v131;

  v131 = *MEMORY[0x24BDAC8D0];
  v5 = a2;
  v6 = a3;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  if (!WeakRetained)
  {
    v110 = objc_alloc(MEMORY[0x24BDBCE88]);
    objc_msgSend_stringWithFormat_(MEMORY[0x24BDD17C8], v111, (uint64_t)CFSTR("Nil weak self after save record"), v112, v113);
    v118 = (void *)objc_claimAutoreleasedReturnValue();
    v123 = *MEMORY[0x24BDD1398];
    v119 = v6;
    if (!v6)
    {
      objc_msgSend_null(MEMORY[0x24BDBCEF8], v114, v115, v116, v117, v123);
      v119 = (void *)objc_claimAutoreleasedReturnValue();
    }
    v124 = v119;
    objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x24BDBCE70], v114, (uint64_t)&v124, (uint64_t)&v123, 1);
    v120 = (void *)objc_claimAutoreleasedReturnValue();
    v122 = (id)objc_msgSend_initWithName_reason_userInfo_(v110, v121, (uint64_t)CFSTR("No Books Record Salt"), (uint64_t)v118, (uint64_t)v120);

    if (!v6)
    objc_exception_throw(v122);
  }
  v8 = WeakRetained;
  BDSCloudKitSyncLog();
  v9 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)buf = 0;
    _os_log_impl(&dword_227D4F000, v9, OS_LOG_TYPE_INFO, "BDSSyncEngineSaltManager: Saving record salt....", buf, 2u);
  }

  objc_msgSend_domain(v6, v10, v11, v12, v13);
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  if (objc_msgSend_isEqualToString_(v14, v15, *MEMORY[0x24BDB8EA8], v16, v17))
  {
    v22 = objc_msgSend_code(v6, v18, v19, v20, v21);

    if (v22 == 14)
    {
      objc_msgSend_userInfo(v6, v23, v24, v25, v26);
      v27 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend_objectForKeyedSubscript_(v27, v28, *MEMORY[0x24BDB8F10], v29, v30);
      v31 = objc_claimAutoreleasedReturnValue();

      objc_msgSend_encryptedValuesByKey(v31, v32, v33, v34, v35);
      v36 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend_objectForKeyedSubscript_(v36, v37, (uint64_t)CFSTR("saltEncrypted"), v38, v39);
      v40 = (void *)objc_claimAutoreleasedReturnValue();

      if (v31)
      {
        BDSCloudKitSyncLog();
        v41 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v41, OS_LOG_TYPE_DEFAULT))
        {
          objc_msgSend_recordChangeTag(v31, v42, v43, v44, v45);
          v46 = (void *)objc_claimAutoreleasedReturnValue();
          *(_DWORD *)buf = 138412802;
          v126 = v40;
          v127 = 2112;
          v128 = v46;
          v129 = 2112;
          v130 = v6;
          _os_log_impl(&dword_227D4F000, v41, OS_LOG_TYPE_DEFAULT, "BDSSyncEngineSaltManager: Successfully established record salt from server record salt:(%@) changeTag:(%@) error:(%@)", buf, 0x20u);

        }
        objc_msgSend_setCurrentSalt_(v8, v47, (uint64_t)v40, v48, v49);
        objc_msgSend_recordChangeTag(v31, v50, v51, v52, v53);
        v54 = objc_claimAutoreleasedReturnValue();
        v55 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
        v56 = *(void **)(v55 + 40);
        *(_QWORD *)(v55 + 40) = v54;

        objc_msgSend_setCurrentSaltVersionIdentifier_(v8, v57, *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40), v58, v59);
        v6 = 0;
      }

LABEL_15:
      goto LABEL_19;
    }
  }
  else
  {

  }
  BDSCloudKitSyncLog();
  v60 = objc_claimAutoreleasedReturnValue();
  v31 = v60;
  if (v6)
  {
    if (os_log_type_enabled(v60, OS_LOG_TYPE_ERROR))
      sub_227E58684();
    goto LABEL_15;
  }
  if (os_log_type_enabled(v60, OS_LOG_TYPE_DEFAULT))
  {
    v69 = *(void **)(a1 + 32);
    objc_msgSend_recordChangeTag(v5, v65, v66, v67, v68);
    v70 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 138412546;
    v126 = v69;
    v127 = 2112;
    v128 = v70;
    _os_log_impl(&dword_227D4F000, v31, OS_LOG_TYPE_DEFAULT, "BDSSyncEngineSaltManager: Successfully established record salt for NO ERROR salt:(%@) changeTag:(%@)", buf, 0x16u);

  }
  objc_msgSend_encryptedValuesByKey(v5, v71, v72, v73, v74);
  v75 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_objectForKeyedSubscript_(v75, v76, (uint64_t)CFSTR("saltEncrypted"), v77, v78);
  v79 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_setCurrentSalt_(v8, v80, (uint64_t)v79, v81, v82);

  objc_msgSend_recordChangeTag(v5, v83, v84, v85, v86);
  v87 = objc_claimAutoreleasedReturnValue();
  v88 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
  v89 = *(void **)(v88 + 40);
  *(_QWORD *)(v88 + 40) = v87;

  objc_msgSend_setCurrentSaltVersionIdentifier_(v8, v90, *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40), v91, v92);
  v6 = 0;
LABEL_19:
  objc_msgSend_currentSalt(v8, v61, v62, v63, v64);
  v93 = (void *)objc_claimAutoreleasedReturnValue();

  BDSCloudKitSyncLog();
  v94 = objc_claimAutoreleasedReturnValue();
  v95 = v94;
  if (v6 || !v93)
  {
    if (os_log_type_enabled(v94, OS_LOG_TYPE_ERROR))
      sub_227E58624();

    v109 = _Block_copy(*(const void **)(a1 + 40));
    v106 = v109;
    if (v109)
      (*((void (**)(void *, id))v109 + 2))(v109, v6);
  }
  else
  {
    if (os_log_type_enabled(v94, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend_currentSalt(v8, v96, v97, v98, v99);
      v100 = (void *)objc_claimAutoreleasedReturnValue();
      v101 = *(void **)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40);
      *(_DWORD *)buf = 138412546;
      v126 = v100;
      v127 = 2112;
      v128 = v101;
      _os_log_impl(&dword_227D4F000, v95, OS_LOG_TYPE_DEFAULT, "BDSSyncEngineSaltManager: *** Got record salt:(%@) changeTag:(%@)", buf, 0x16u);

    }
    objc_msgSend_observer(v8, v102, v103, v104, v105);
    v106 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_saltManager_updatedSaltWithVersion_(v106, v107, (uint64_t)v8, *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40), v108);
  }

}

void sub_227D76400(_Unwind_Exception *a1)
{
  uint64_t v1;

  objc_destroyWeak((id *)(v1 - 24));
  _Unwind_Resume(a1);
}

void sub_227D76414(uint64_t a1)
{
  const char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend_wq_invalidateSalt(WeakRetained, v1, v2, v3, v4);

}

void sub_227D76564(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_227D7657C(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v6;

  objc_msgSend_currentSalt(*(void **)(a1 + 32), a2, a3, a4, a5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = v6 != 0;

}

void sub_227D766D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_227D766E8(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  const char *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  const __CFString *v12;
  void *v13;
  NSObject *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v7 = a1 + 32;
  v6 = *(_QWORD *)(a1 + 32);
  if (v6)
  {
    objc_msgSend__wq_saltedAndHashedIDFromLocalID_(*(void **)(a1 + 40), a2, v6, a4, a5);
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    if (v11)
    {
      v12 = *(const __CFString **)(a1 + 48);
      if (!v12)
        v12 = CFSTR("-");
      objc_msgSend_stringWithFormat_(MEMORY[0x24BDD17C8], v8, (uint64_t)CFSTR("%@.%@"), v9, v10, v12, v11);
      v13 = (void *)objc_claimAutoreleasedReturnValue();
    }
    else
    {
      v13 = 0;
    }
    objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40), v13);
    if (v11)

  }
  if (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40))
  {
    BDSCloudKitLog();
    v14 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      sub_227E586E4(v7, v14, v15, v16, v17, v18, v19, v20);

  }
}

id BDSErrorFromUnderlyingError(void *a1, int a2, void *a3)
{
  void *v5;
  id v6;
  id v7;
  const char *v8;
  void *v9;
  const char *v10;
  void *v11;
  uint64_t v13;
  _QWORD v14[2];

  v14[1] = *MEMORY[0x24BDAC8D0];
  v13 = *MEMORY[0x24BDD1398];
  v14[0] = a3;
  v5 = (void *)MEMORY[0x24BDBCE70];
  v6 = a3;
  v7 = a1;
  objc_msgSend_dictionaryWithObjects_forKeys_count_(v5, v8, (uint64_t)v14, (uint64_t)&v13, 1);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_errorWithDomain_code_userInfo_(MEMORY[0x24BDD1540], v10, (uint64_t)v7, a2, (uint64_t)v9);
  v11 = (void *)objc_claimAutoreleasedReturnValue();

  return v11;
}

void sub_227D76C24()
{
  BDSServiceProxy *v0;
  void *v1;

  v0 = objc_alloc_init(BDSServiceProxy);
  v1 = (void *)qword_253F3C6D0;
  qword_253F3C6D0 = (uint64_t)v0;

}

void sub_227D76FC4(uint64_t a1)
{
  const char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend_connectionDelegate(WeakRetained, v1, v2, v3, v4);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_serviceDidRestart(v5, v6, v7, v8, v9);

}

void sub_227D77008()
{
  NSObject *v0;
  uint8_t v1[16];

  BDSCloudKitLog();
  v0 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v0, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)v1 = 0;
    _os_log_impl(&dword_227D4F000, v0, OS_LOG_TYPE_INFO, "The connection to service was interrupted.", v1, 2u);
  }

}

void sub_227D7706C(uint64_t a1)
{
  NSObject *v2;
  id WeakRetained;
  const char *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  const char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint8_t v12[16];

  BDSCloudKitLog();
  v2 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)v12 = 0;
    _os_log_impl(&dword_227D4F000, v2, OS_LOG_TYPE_INFO, "The connection to service was invalidated.", v12, 2u);
  }

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v7 = WeakRetained;
  if (WeakRetained)
  {
    objc_msgSend_setConnectionHealthy_(WeakRetained, v4, 0, v5, v6);
    objc_msgSend_scheduleRestart(v7, v8, v9, v10, v11);
  }

}

void sub_227D770FC(uint64_t a1, void *a2)
{
  id v2;
  NSObject *v3;

  v2 = a2;
  BDSCloudKitLog();
  v3 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
    sub_227E587AC();

}

void sub_227D771F4(uint64_t a1)
{
  id WeakRetained;
  NSObject *v2;
  const char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    BDSCloudKitLog();
    v2 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
    {
      v7 = 134217984;
      v8 = 0x404E000000000000;
      _os_log_impl(&dword_227D4F000, v2, OS_LOG_TYPE_INFO, "Attempting to re-form connection to XPC service %f seconds after invalidation.", (uint8_t *)&v7, 0xCu);
    }

    objc_msgSend_formXPCConnection(WeakRetained, v3, v4, v5, v6);
  }

}

void sub_227D772B0(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  void *v5;
  void *v6;

  v3 = a2;
  BDSCloudKitLog();
  v4 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    sub_227E587AC();

  v5 = _Block_copy(*(const void **)(a1 + 32));
  v6 = v5;
  if (v5)
    (*((void (**)(void *, id))v5 + 2))(v5, v3);

}

void sub_227D773B8(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  void *v5;
  void *v6;

  v3 = a2;
  BDSCloudKitLog();
  v4 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    sub_227E5880C();

  v5 = _Block_copy(*(const void **)(a1 + 32));
  v6 = v5;
  if (v5)
    (*((void (**)(void *, id))v5 + 2))(v5, v3);

}

void sub_227D776FC(uint64_t a1, void *a2)
{
  void *v3;
  void *v4;
  id v5;

  v5 = a2;
  v3 = _Block_copy(*(const void **)(a1 + 32));
  v4 = v3;
  if (v3)
    (*((void (**)(void *, _QWORD, id))v3 + 2))(v3, 0, v5);

}

void sub_227D7785C(uint64_t a1, void *a2)
{
  id v2;
  NSObject *v3;

  v2 = a2;
  BDSServiceLog();
  v3 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
    sub_227E588CC();

}

uint64_t sub_227D778BC(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return objc_msgSend_signalFetchChangesTransaction_(a2, (const char *)a2, *(_QWORD *)(a1 + 32), a4, a5);
}

void sub_227D779D8(uint64_t a1, void *a2)
{
  void *v3;
  void *v4;
  id v5;

  v5 = a2;
  v3 = _Block_copy(*(const void **)(a1 + 32));
  v4 = v3;
  if (v3)
    (*((void (**)(void *, _QWORD, id))v3 + 2))(v3, 0, v5);

}

void sub_227D77C58(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
  uint64_t v27;

  _Block_object_dispose(&a27, 8);
  _Block_object_dispose((const void *)(v27 - 144), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_227D77C7C(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_227D77C8C(uint64_t a1)
{

}

void sub_227D77C94(uint64_t a1, void *a2)
{
  NSObject *v3;
  id v4;
  uint64_t v5;
  void *v6;
  const char *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  const char *v11;
  uint64_t v12;
  _QWORD v13[4];
  id v14;
  id v15;
  int8x16_t v16;
  _QWORD v17[4];
  id v18;
  uint64_t v19;

  v3 = *(NSObject **)(a1 + 32);
  v4 = a2;
  dispatch_group_enter(v3);
  v5 = MEMORY[0x24BDAC760];
  v17[0] = MEMORY[0x24BDAC760];
  v17[1] = 3221225472;
  v17[2] = sub_227D77DA0;
  v17[3] = &unk_24F0893F8;
  v19 = *(_QWORD *)(a1 + 56);
  v6 = *(void **)(a1 + 40);
  v18 = *(id *)(a1 + 32);
  objc_msgSend_remoteObjectProxyWithErrorHandler_(v6, v7, (uint64_t)v17, v8, v9);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v13[0] = v5;
  v13[1] = 3221225472;
  v13[2] = sub_227D77DF4;
  v13[3] = &unk_24F089420;
  v14 = *(id *)(a1 + 48);
  v16 = vextq_s8(*(int8x16_t *)(a1 + 56), *(int8x16_t *)(a1 + 56), 8uLL);
  v15 = *(id *)(a1 + 32);
  objc_msgSend_assetDetailsForAssetIDs_completion_(v10, v11, (uint64_t)v4, (uint64_t)v13, v12);

}

void sub_227D77DA0(uint64_t a1, void *a2)
{
  void *v2;
  uint64_t v4;
  id *v5;
  void *v6;
  void *v7;
  id v8;

  v2 = a2;
  v4 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v7 = *(void **)(v4 + 40);
  v5 = (id *)(v4 + 40);
  v6 = v7;
  if (v7)
    a2 = v6;
  objc_storeStrong(v5, a2);
  v8 = v2;
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));

}

void sub_227D77DF4(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  id v7;
  void *v8;
  const char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;
  uint64_t v15;
  id *v16;
  void *v17;
  void *v18;
  void *v19;
  id v20;

  v7 = a3;
  v8 = *(void **)(a1 + 32);
  v20 = a4;
  objc_msgSend_addObjectsFromArray_(v8, v9, a2, v10, v11);
  v12 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
  v13 = *(void **)(v12 + 40);
  *(_QWORD *)(v12 + 40) = v7;
  v14 = v7;

  v15 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
  v18 = *(void **)(v15 + 40);
  v16 = (id *)(v15 + 40);
  v17 = v18;
  v19 = v20;
  if (v18)
    v19 = v17;
  objc_storeStrong(v16, v19);
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 40));

}

void sub_227D77E98(uint64_t a1)
{
  void *v2;
  id v3;

  v2 = _Block_copy(*(const void **)(a1 + 40));
  if (v2)
  {
    v3 = v2;
    (*((void (**)(void *, _QWORD, _QWORD, _QWORD))v2 + 2))(v2, *(_QWORD *)(a1 + 32), *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40), *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40));
    v2 = v3;
  }

}

void sub_227D78000(uint64_t a1, void *a2)
{
  void *v3;
  void *v4;
  id v5;

  v5 = a2;
  v3 = _Block_copy(*(const void **)(a1 + 32));
  v4 = v3;
  if (v3)
    (*((void (**)(void *, _QWORD, id))v3 + 2))(v3, 0, v5);

}

void sub_227D78058(uint64_t a1)
{
  void *v1;
  id v2;

  v1 = _Block_copy(*(const void **)(a1 + 32));
  if (v1)
  {
    v2 = v1;
    (*((void (**)(void *, _QWORD))v1 + 2))(v1, 0);
    v1 = v2;
  }

}

void sub_227D781BC(uint64_t a1, void *a2)
{
  void *v3;
  void *v4;
  id v5;

  v5 = a2;
  v3 = _Block_copy(*(const void **)(a1 + 32));
  v4 = v3;
  if (v3)
    (*((void (**)(void *, _QWORD, id))v3 + 2))(v3, 0, v5);

}

void sub_227D7831C(uint64_t a1, void *a2)
{
  void *v3;
  void *v4;
  id v5;

  v5 = a2;
  v3 = _Block_copy(*(const void **)(a1 + 32));
  v4 = v3;
  if (v3)
    (*((void (**)(void *, _QWORD, _QWORD, id))v3 + 2))(v3, 0, 0, v5);

}

void sub_227D78378(uint64_t a1, void *a2)
{
  void *v3;
  void *v4;
  id v5;

  v5 = a2;
  v3 = _Block_copy(*(const void **)(a1 + 32));
  v4 = v3;
  if (v3)
    (*((void (**)(void *, _QWORD, _QWORD, _QWORD, id, _QWORD))v3 + 2))(v3, 0, 0, 0, v5, 0);

}

void sub_227D7850C(uint64_t a1, void *a2)
{
  void *v3;
  void *v4;
  id v5;

  v5 = a2;
  v3 = _Block_copy(*(const void **)(a1 + 32));
  v4 = v3;
  if (v3)
    (*((void (**)(void *, _QWORD, _QWORD, id))v3 + 2))(v3, 0, 0, v5);

}

void sub_227D787A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31)
{
  uint64_t v31;

  _Block_object_dispose(&a27, 8);
  _Block_object_dispose(&a31, 8);
  _Block_object_dispose((const void *)(v31 - 144), 8);
  _Unwind_Resume(a1);
}

void sub_227D787D8(uint64_t a1, void *a2)
{
  NSObject *v3;
  id v4;
  const char *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  const char *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  const char *v15;
  uint64_t v16;
  _QWORD v17[4];
  id v18;
  __int128 v19;
  uint64_t v20;
  _QWORD v21[4];
  id v22;
  __int128 v23;

  v3 = *(NSObject **)(a1 + 32);
  v4 = a2;
  dispatch_group_enter(v3);
  objc_msgSend_bds_subDictionaryWithKeys_(*(void **)(a1 + 40), v5, (uint64_t)v4, v6, v7);
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  v9 = *(void **)(a1 + 48);
  v10 = MEMORY[0x24BDAC760];
  v21[0] = MEMORY[0x24BDAC760];
  v21[1] = 3221225472;
  v21[2] = sub_227D788F0;
  v21[3] = &unk_24F089518;
  v23 = *(_OWORD *)(a1 + 56);
  v22 = *(id *)(a1 + 32);
  objc_msgSend_remoteObjectProxyWithErrorHandler_(v9, v11, (uint64_t)v21, v12, v13);
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  v17[0] = v10;
  v17[1] = 3221225472;
  v17[2] = sub_227D78950;
  v17[3] = &unk_24F089540;
  v19 = *(_OWORD *)(a1 + 56);
  v20 = *(_QWORD *)(a1 + 72);
  v18 = *(id *)(a1 + 32);
  objc_msgSend_setAssetDetails_completion_(v14, v15, (uint64_t)v8, (uint64_t)v17, v16);

}

void sub_227D788F0(uint64_t a1, void *a2)
{
  void *v2;
  uint64_t v4;
  id *v5;
  void *v6;
  void *v7;
  id v8;

  v2 = a2;
  v4 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v7 = *(void **)(v4 + 40);
  v5 = (id *)(v4 + 40);
  v6 = v7;
  if (v7)
    a2 = v6;
  objc_storeStrong(v5, a2);
  v8 = v2;
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24) = 0;
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));

}

void sub_227D78950(uint64_t a1, char a2, char a3, void *a4)
{
  uint64_t v8;
  id *v9;
  void *v10;
  void *v11;
  void *v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  char v16;
  id v17;

  v8 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v11 = *(void **)(v8 + 40);
  v9 = (id *)(v8 + 40);
  v10 = v11;
  if (v11)
    v12 = v10;
  else
    v12 = a4;
  objc_storeStrong(v9, v12);
  v17 = a4;
  v13 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
  if (*(_BYTE *)(v13 + 24))
    v14 = a2;
  else
    v14 = 0;
  *(_BYTE *)(v13 + 24) = v14;
  v15 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
  if (*(_BYTE *)(v15 + 24))
    v16 = 1;
  else
    v16 = a3;
  *(_BYTE *)(v15 + 24) = v16;
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));

}

void sub_227D789E4(uint64_t a1)
{
  void *v2;
  id v3;

  v2 = _Block_copy(*(const void **)(a1 + 32));
  if (v2)
  {
    v3 = v2;
    (*((void (**)(void *, _QWORD, _QWORD, _QWORD))v2 + 2))(v2, *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24), *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24), *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40));
    v2 = v3;
  }

}

void sub_227D78B40(uint64_t a1, void *a2)
{
  void *v3;
  void *v4;
  id v5;

  v5 = a2;
  v3 = _Block_copy(*(const void **)(a1 + 32));
  v4 = v3;
  if (v3)
    (*((void (**)(void *, _QWORD, id))v3 + 2))(v3, 0, v5);

}

void sub_227D78C9C(uint64_t a1, void *a2)
{
  void *v3;
  void *v4;
  id v5;

  v5 = a2;
  v3 = _Block_copy(*(const void **)(a1 + 32));
  v4 = v3;
  if (v3)
    (*((void (**)(void *, _QWORD, id))v3 + 2))(v3, 0, v5);

}

void sub_227D78DF0(uint64_t a1, void *a2)
{
  void *v3;
  void *v4;
  id v5;

  v5 = a2;
  v3 = _Block_copy(*(const void **)(a1 + 32));
  v4 = v3;
  if (v3)
    (*((void (**)(void *, _QWORD, id))v3 + 2))(v3, 0, v5);

}

void sub_227D79070(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
  uint64_t v27;

  _Block_object_dispose(&a27, 8);
  _Block_object_dispose((const void *)(v27 - 144), 8);
  _Unwind_Resume(a1);
}

void sub_227D79094(uint64_t a1, void *a2)
{
  NSObject *v3;
  id v4;
  uint64_t v5;
  void *v6;
  const char *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  const char *v11;
  uint64_t v12;
  _QWORD v13[4];
  id v14;
  id v15;
  int8x16_t v16;
  _QWORD v17[4];
  id v18;
  uint64_t v19;

  v3 = *(NSObject **)(a1 + 32);
  v4 = a2;
  dispatch_group_enter(v3);
  v5 = MEMORY[0x24BDAC760];
  v17[0] = MEMORY[0x24BDAC760];
  v17[1] = 3221225472;
  v17[2] = sub_227D791A0;
  v17[3] = &unk_24F0893F8;
  v19 = *(_QWORD *)(a1 + 56);
  v6 = *(void **)(a1 + 40);
  v18 = *(id *)(a1 + 32);
  objc_msgSend_remoteObjectProxyWithErrorHandler_(v6, v7, (uint64_t)v17, v8, v9);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v13[0] = v5;
  v13[1] = 3221225472;
  v13[2] = sub_227D791F4;
  v13[3] = &unk_24F089420;
  v14 = *(id *)(a1 + 48);
  v16 = vextq_s8(*(int8x16_t *)(a1 + 56), *(int8x16_t *)(a1 + 56), 8uLL);
  v15 = *(id *)(a1 + 32);
  objc_msgSend_readingNowDetailsForAssetIDs_completion_(v10, v11, (uint64_t)v4, (uint64_t)v13, v12);

}

void sub_227D791A0(uint64_t a1, void *a2)
{
  void *v2;
  uint64_t v4;
  id *v5;
  void *v6;
  void *v7;
  id v8;

  v2 = a2;
  v4 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v7 = *(void **)(v4 + 40);
  v5 = (id *)(v4 + 40);
  v6 = v7;
  if (v7)
    a2 = v6;
  objc_storeStrong(v5, a2);
  v8 = v2;
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));

}

void sub_227D791F4(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  id v7;
  void *v8;
  const char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;
  uint64_t v15;
  id *v16;
  void *v17;
  void *v18;
  void *v19;
  id v20;

  v7 = a3;
  v8 = *(void **)(a1 + 32);
  v20 = a4;
  objc_msgSend_addObjectsFromArray_(v8, v9, a2, v10, v11);
  v12 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
  v13 = *(void **)(v12 + 40);
  *(_QWORD *)(v12 + 40) = v7;
  v14 = v7;

  v15 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
  v18 = *(void **)(v15 + 40);
  v16 = (id *)(v15 + 40);
  v17 = v18;
  v19 = v20;
  if (v18)
    v19 = v17;
  objc_storeStrong(v16, v19);
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 40));

}

void sub_227D79298(uint64_t a1)
{
  void *v2;
  id v3;

  v2 = _Block_copy(*(const void **)(a1 + 40));
  if (v2)
  {
    v3 = v2;
    (*((void (**)(void *, _QWORD, _QWORD, _QWORD))v2 + 2))(v2, *(_QWORD *)(a1 + 32), *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40), *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40));
    v2 = v3;
  }

}

void sub_227D792F0(uint64_t a1)
{
  void *v1;
  id v2;

  v1 = _Block_copy(*(const void **)(a1 + 32));
  if (v1)
  {
    v2 = v1;
    (*((void (**)(void *, _QWORD))v1 + 2))(v1, 0);
    v1 = v2;
  }

}

void sub_227D79454(uint64_t a1, void *a2)
{
  void *v3;
  void *v4;
  id v5;

  v5 = a2;
  v3 = _Block_copy(*(const void **)(a1 + 32));
  v4 = v3;
  if (v3)
    (*((void (**)(void *, _QWORD, id))v3 + 2))(v3, 0, v5);

}

void sub_227D795C8(uint64_t a1, void *a2)
{
  void *v3;
  void *v4;
  id v5;

  v5 = a2;
  v3 = _Block_copy(*(const void **)(a1 + 32));
  v4 = v3;
  if (v3)
    (*((void (**)(void *, _QWORD, _QWORD, _QWORD, id, _QWORD))v3 + 2))(v3, 0, 0, 0, v5, 0);

}

void sub_227D7986C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31)
{
  uint64_t v31;

  _Block_object_dispose(&a27, 8);
  _Block_object_dispose(&a31, 8);
  _Block_object_dispose((const void *)(v31 - 144), 8);
  _Unwind_Resume(a1);
}

void sub_227D7989C(uint64_t a1, void *a2)
{
  NSObject *v3;
  id v4;
  const char *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  const char *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  const char *v15;
  uint64_t v16;
  _QWORD v17[4];
  id v18;
  __int128 v19;
  uint64_t v20;
  _QWORD v21[4];
  id v22;
  __int128 v23;

  v3 = *(NSObject **)(a1 + 32);
  v4 = a2;
  dispatch_group_enter(v3);
  objc_msgSend_bds_subDictionaryWithKeys_(*(void **)(a1 + 40), v5, (uint64_t)v4, v6, v7);
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  v9 = *(void **)(a1 + 48);
  v10 = MEMORY[0x24BDAC760];
  v21[0] = MEMORY[0x24BDAC760];
  v21[1] = 3221225472;
  v21[2] = sub_227D799B4;
  v21[3] = &unk_24F089518;
  v23 = *(_OWORD *)(a1 + 56);
  v22 = *(id *)(a1 + 32);
  objc_msgSend_remoteObjectProxyWithErrorHandler_(v9, v11, (uint64_t)v21, v12, v13);
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  v17[0] = v10;
  v17[1] = 3221225472;
  v17[2] = sub_227D79A14;
  v17[3] = &unk_24F089540;
  v19 = *(_OWORD *)(a1 + 56);
  v20 = *(_QWORD *)(a1 + 72);
  v18 = *(id *)(a1 + 32);
  objc_msgSend_setReadingNowDetails_completion_(v14, v15, (uint64_t)v8, (uint64_t)v17, v16);

}

void sub_227D799B4(uint64_t a1, void *a2)
{
  void *v2;
  uint64_t v4;
  id *v5;
  void *v6;
  void *v7;
  id v8;

  v2 = a2;
  v4 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v7 = *(void **)(v4 + 40);
  v5 = (id *)(v4 + 40);
  v6 = v7;
  if (v7)
    a2 = v6;
  objc_storeStrong(v5, a2);
  v8 = v2;
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24) = 0;
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));

}

void sub_227D79A14(uint64_t a1, char a2, char a3, void *a4)
{
  uint64_t v8;
  id *v9;
  void *v10;
  void *v11;
  void *v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  char v16;
  id v17;

  v8 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v11 = *(void **)(v8 + 40);
  v9 = (id *)(v8 + 40);
  v10 = v11;
  if (v11)
    v12 = v10;
  else
    v12 = a4;
  objc_storeStrong(v9, v12);
  v17 = a4;
  v13 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
  if (*(_BYTE *)(v13 + 24))
    v14 = a2;
  else
    v14 = 0;
  *(_BYTE *)(v13 + 24) = v14;
  v15 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
  if (*(_BYTE *)(v15 + 24))
    v16 = 1;
  else
    v16 = a3;
  *(_BYTE *)(v15 + 24) = v16;
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));

}

void sub_227D79AA8(uint64_t a1)
{
  void *v2;
  id v3;

  v2 = _Block_copy(*(const void **)(a1 + 32));
  if (v2)
  {
    v3 = v2;
    (*((void (**)(void *, _QWORD, _QWORD, _QWORD))v2 + 2))(v2, *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24), *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24), *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40));
    v2 = v3;
  }

}

void sub_227D79C04(uint64_t a1, void *a2)
{
  void *v3;
  void *v4;
  id v5;

  v5 = a2;
  v3 = _Block_copy(*(const void **)(a1 + 32));
  v4 = v3;
  if (v3)
    (*((void (**)(void *, _QWORD, id))v3 + 2))(v3, 0, v5);

}

void sub_227D79D6C(uint64_t a1, void *a2)
{
  void *v3;
  void *v4;
  id v5;

  v5 = a2;
  v3 = _Block_copy(*(const void **)(a1 + 32));
  v4 = v3;
  if (v3)
    (*((void (**)(void *, _QWORD, id))v3 + 2))(v3, 0, v5);

}

void sub_227D79FEC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
  uint64_t v27;

  _Block_object_dispose(&a27, 8);
  _Block_object_dispose((const void *)(v27 - 144), 8);
  _Unwind_Resume(a1);
}

void sub_227D7A010(uint64_t a1, void *a2)
{
  NSObject *v3;
  id v4;
  uint64_t v5;
  void *v6;
  const char *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  const char *v11;
  uint64_t v12;
  _QWORD v13[4];
  id v14;
  id v15;
  int8x16_t v16;
  _QWORD v17[4];
  id v18;
  uint64_t v19;

  v3 = *(NSObject **)(a1 + 32);
  v4 = a2;
  dispatch_group_enter(v3);
  v5 = MEMORY[0x24BDAC760];
  v17[0] = MEMORY[0x24BDAC760];
  v17[1] = 3221225472;
  v17[2] = sub_227D7A11C;
  v17[3] = &unk_24F0893F8;
  v19 = *(_QWORD *)(a1 + 56);
  v6 = *(void **)(a1 + 40);
  v18 = *(id *)(a1 + 32);
  objc_msgSend_remoteObjectProxyWithErrorHandler_(v6, v7, (uint64_t)v17, v8, v9);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v13[0] = v5;
  v13[1] = 3221225472;
  v13[2] = sub_227D7A170;
  v13[3] = &unk_24F089420;
  v14 = *(id *)(a1 + 48);
  v16 = vextq_s8(*(int8x16_t *)(a1 + 56), *(int8x16_t *)(a1 + 56), 8uLL);
  v15 = *(id *)(a1 + 32);
  objc_msgSend_assetReviewsForAssetReviewIDs_completion_(v10, v11, (uint64_t)v4, (uint64_t)v13, v12);

}

void sub_227D7A11C(uint64_t a1, void *a2)
{
  void *v2;
  uint64_t v4;
  id *v5;
  void *v6;
  void *v7;
  id v8;

  v2 = a2;
  v4 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v7 = *(void **)(v4 + 40);
  v5 = (id *)(v4 + 40);
  v6 = v7;
  if (v7)
    a2 = v6;
  objc_storeStrong(v5, a2);
  v8 = v2;
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));

}

void sub_227D7A170(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  id v7;
  void *v8;
  const char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;
  uint64_t v15;
  id *v16;
  void *v17;
  void *v18;
  void *v19;
  id v20;

  v7 = a3;
  v8 = *(void **)(a1 + 32);
  v20 = a4;
  objc_msgSend_addObjectsFromArray_(v8, v9, a2, v10, v11);
  v12 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
  v13 = *(void **)(v12 + 40);
  *(_QWORD *)(v12 + 40) = v7;
  v14 = v7;

  v15 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
  v18 = *(void **)(v15 + 40);
  v16 = (id *)(v15 + 40);
  v17 = v18;
  v19 = v20;
  if (v18)
    v19 = v17;
  objc_storeStrong(v16, v19);
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 40));

}

void sub_227D7A214(uint64_t a1)
{
  void *v2;
  id v3;

  v2 = _Block_copy(*(const void **)(a1 + 40));
  if (v2)
  {
    v3 = v2;
    (*((void (**)(void *, _QWORD, _QWORD, _QWORD))v2 + 2))(v2, *(_QWORD *)(a1 + 32), *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40), *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40));
    v2 = v3;
  }

}

void sub_227D7A398(uint64_t a1, void *a2)
{
  void *v3;
  void *v4;
  id v5;

  v5 = a2;
  v3 = _Block_copy(*(const void **)(a1 + 32));
  v4 = v3;
  if (v3)
    (*((void (**)(void *, _QWORD, id))v3 + 2))(v3, 0, v5);

}

void sub_227D7A51C(uint64_t a1, void *a2)
{
  void *v3;
  void *v4;
  id v5;

  v5 = a2;
  v3 = _Block_copy(*(const void **)(a1 + 32));
  v4 = v3;
  if (v3)
    (*((void (**)(void *, _QWORD, id))v3 + 2))(v3, 0, v5);

}

void sub_227D7A698(uint64_t a1, void *a2)
{
  void *v3;
  void *v4;
  id v5;

  v5 = a2;
  v3 = _Block_copy(*(const void **)(a1 + 32));
  v4 = v3;
  if (v3)
    (*((void (**)(void *, _QWORD, _QWORD, id))v3 + 2))(v3, 0, 0, v5);

}

void sub_227D7A810(uint64_t a1, void *a2)
{
  void *v3;
  void *v4;
  id v5;

  v5 = a2;
  v3 = _Block_copy(*(const void **)(a1 + 32));
  v4 = v3;
  if (v3)
    (*((void (**)(void *, _QWORD, _QWORD, _QWORD, id, _QWORD))v3 + 2))(v3, 0, 0, 0, v5, 0);

}

void sub_227D7A9A4(uint64_t a1, void *a2)
{
  void *v3;
  void *v4;
  id v5;

  v5 = a2;
  v3 = _Block_copy(*(const void **)(a1 + 32));
  v4 = v3;
  if (v3)
    (*((void (**)(void *, _QWORD, _QWORD, id))v3 + 2))(v3, 0, 0, v5);

}

void sub_227D7AC40(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31)
{
  uint64_t v31;

  _Block_object_dispose(&a27, 8);
  _Block_object_dispose(&a31, 8);
  _Block_object_dispose((const void *)(v31 - 144), 8);
  _Unwind_Resume(a1);
}

void sub_227D7AC70(uint64_t a1, void *a2)
{
  NSObject *v3;
  id v4;
  const char *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  const char *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  const char *v15;
  uint64_t v16;
  _QWORD v17[4];
  id v18;
  __int128 v19;
  uint64_t v20;
  _QWORD v21[4];
  id v22;
  __int128 v23;

  v3 = *(NSObject **)(a1 + 32);
  v4 = a2;
  dispatch_group_enter(v3);
  objc_msgSend_bds_subDictionaryWithKeys_(*(void **)(a1 + 40), v5, (uint64_t)v4, v6, v7);
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  v9 = *(void **)(a1 + 48);
  v10 = MEMORY[0x24BDAC760];
  v21[0] = MEMORY[0x24BDAC760];
  v21[1] = 3221225472;
  v21[2] = sub_227D7AD88;
  v21[3] = &unk_24F089518;
  v23 = *(_OWORD *)(a1 + 56);
  v22 = *(id *)(a1 + 32);
  objc_msgSend_remoteObjectProxyWithErrorHandler_(v9, v11, (uint64_t)v21, v12, v13);
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  v17[0] = v10;
  v17[1] = 3221225472;
  v17[2] = sub_227D7ADE8;
  v17[3] = &unk_24F089540;
  v19 = *(_OWORD *)(a1 + 56);
  v20 = *(_QWORD *)(a1 + 72);
  v18 = *(id *)(a1 + 32);
  objc_msgSend_setAssetReviews_completion_(v14, v15, (uint64_t)v8, (uint64_t)v17, v16);

}

void sub_227D7AD88(uint64_t a1, void *a2)
{
  void *v2;
  uint64_t v4;
  id *v5;
  void *v6;
  void *v7;
  id v8;

  v2 = a2;
  v4 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v7 = *(void **)(v4 + 40);
  v5 = (id *)(v4 + 40);
  v6 = v7;
  if (v7)
    a2 = v6;
  objc_storeStrong(v5, a2);
  v8 = v2;
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24) = 0;
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));

}

void sub_227D7ADE8(uint64_t a1, char a2, char a3, void *a4)
{
  uint64_t v8;
  id *v9;
  void *v10;
  void *v11;
  void *v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  char v16;
  id v17;

  v8 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v11 = *(void **)(v8 + 40);
  v9 = (id *)(v8 + 40);
  v10 = v11;
  if (v11)
    v12 = v10;
  else
    v12 = a4;
  objc_storeStrong(v9, v12);
  v17 = a4;
  v13 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
  if (*(_BYTE *)(v13 + 24))
    v14 = a2;
  else
    v14 = 0;
  *(_BYTE *)(v13 + 24) = v14;
  v15 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
  if (*(_BYTE *)(v15 + 24))
    v16 = 1;
  else
    v16 = a3;
  *(_BYTE *)(v15 + 24) = v16;
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));

}

void sub_227D7AE7C(uint64_t a1)
{
  void *v2;
  id v3;

  v2 = _Block_copy(*(const void **)(a1 + 32));
  if (v2)
  {
    v3 = v2;
    (*((void (**)(void *, _QWORD, _QWORD, _QWORD))v2 + 2))(v2, *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24), *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24), *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40));
    v2 = v3;
  }

}

void sub_227D7B00C(uint64_t a1, void *a2)
{
  void *v3;
  void *v4;
  id v5;

  v5 = a2;
  v3 = _Block_copy(*(const void **)(a1 + 32));
  v4 = v3;
  if (v3)
    (*((void (**)(void *, _QWORD, _QWORD, id))v3 + 2))(v3, 0, 0, v5);

}

void sub_227D7B2A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31)
{
  uint64_t v31;

  _Block_object_dispose(&a27, 8);
  _Block_object_dispose(&a31, 8);
  _Block_object_dispose((const void *)(v31 - 144), 8);
  _Unwind_Resume(a1);
}

void sub_227D7B2D8(uint64_t a1, void *a2)
{
  NSObject *v3;
  id v4;
  const char *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  const char *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  const char *v15;
  uint64_t v16;
  _QWORD v17[4];
  id v18;
  __int128 v19;
  uint64_t v20;
  _QWORD v21[4];
  id v22;
  __int128 v23;

  v3 = *(NSObject **)(a1 + 32);
  v4 = a2;
  dispatch_group_enter(v3);
  objc_msgSend_bds_subDictionaryWithKeys_(*(void **)(a1 + 40), v5, (uint64_t)v4, v6, v7);
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  v9 = *(void **)(a1 + 48);
  v10 = MEMORY[0x24BDAC760];
  v21[0] = MEMORY[0x24BDAC760];
  v21[1] = 3221225472;
  v21[2] = sub_227D7B3F0;
  v21[3] = &unk_24F089518;
  v23 = *(_OWORD *)(a1 + 56);
  v22 = *(id *)(a1 + 32);
  objc_msgSend_remoteObjectProxyWithErrorHandler_(v9, v11, (uint64_t)v21, v12, v13);
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  v17[0] = v10;
  v17[1] = 3221225472;
  v17[2] = sub_227D7B450;
  v17[3] = &unk_24F089540;
  v19 = *(_OWORD *)(a1 + 56);
  v20 = *(_QWORD *)(a1 + 72);
  v18 = *(id *)(a1 + 32);
  objc_msgSend_addStoreItems_completion_(v14, v15, (uint64_t)v8, (uint64_t)v17, v16);

}

void sub_227D7B3F0(uint64_t a1, void *a2)
{
  void *v2;
  uint64_t v4;
  id *v5;
  void *v6;
  void *v7;
  id v8;

  v2 = a2;
  v4 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v7 = *(void **)(v4 + 40);
  v5 = (id *)(v4 + 40);
  v6 = v7;
  if (v7)
    a2 = v6;
  objc_storeStrong(v5, a2);
  v8 = v2;
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24) = 0;
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));

}

void sub_227D7B450(uint64_t a1, char a2, char a3, void *a4)
{
  uint64_t v8;
  id *v9;
  void *v10;
  void *v11;
  void *v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  char v16;
  id v17;

  v8 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v11 = *(void **)(v8 + 40);
  v9 = (id *)(v8 + 40);
  v10 = v11;
  if (v11)
    v12 = v10;
  else
    v12 = a4;
  objc_storeStrong(v9, v12);
  v17 = a4;
  v13 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
  if (*(_BYTE *)(v13 + 24))
    v14 = a2;
  else
    v14 = 0;
  *(_BYTE *)(v13 + 24) = v14;
  v15 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
  if (*(_BYTE *)(v15 + 24))
    v16 = 1;
  else
    v16 = a3;
  *(_BYTE *)(v15 + 24) = v16;
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));

}

void sub_227D7B4E4(uint64_t a1)
{
  void *v2;
  id v3;

  v2 = _Block_copy(*(const void **)(a1 + 32));
  if (v2)
  {
    v3 = v2;
    (*((void (**)(void *, _QWORD, _QWORD, _QWORD))v2 + 2))(v2, *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24), *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24), *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40));
    v2 = v3;
  }

}

void sub_227D7B670(uint64_t a1, void *a2)
{
  void *v3;
  void *v4;
  id v5;

  v5 = a2;
  v3 = _Block_copy(*(const void **)(a1 + 32));
  v4 = v3;
  if (v3)
    (*((void (**)(void *, _QWORD, id))v3 + 2))(v3, 0, v5);

}

void sub_227D7B7F4(uint64_t a1, void *a2)
{
  void *v3;
  void *v4;
  id v5;

  v5 = a2;
  v3 = _Block_copy(*(const void **)(a1 + 32));
  v4 = v3;
  if (v3)
    (*((void (**)(void *, _QWORD, id))v3 + 2))(v3, 0, v5);

}

void sub_227D7B954(uint64_t a1, void *a2)
{
  void *v3;
  void *v4;
  id v5;

  v5 = a2;
  v3 = _Block_copy(*(const void **)(a1 + 32));
  v4 = v3;
  if (v3)
    (*((void (**)(void *, _QWORD, _QWORD, id))v3 + 2))(v3, 0, 0, v5);

}

void sub_227D7BACC(uint64_t a1, void *a2)
{
  void *v3;
  void *v4;
  id v5;

  v5 = a2;
  v3 = _Block_copy(*(const void **)(a1 + 32));
  v4 = v3;
  if (v3)
    (*((void (**)(void *, _QWORD, _QWORD, _QWORD, id, _QWORD))v3 + 2))(v3, 0, 0, 0, v5, 0);

}

void sub_227D7BC40(uint64_t a1, void *a2)
{
  void *v3;
  void *v4;
  id v5;

  v5 = a2;
  v3 = _Block_copy(*(const void **)(a1 + 32));
  v4 = v3;
  if (v3)
    (*((void (**)(void *, _QWORD, id))v3 + 2))(v3, 0, v5);

}

void sub_227D7BDA8(uint64_t a1, void *a2)
{
  void *v3;
  void *v4;
  id v5;

  v5 = a2;
  v3 = _Block_copy(*(const void **)(a1 + 32));
  v4 = v3;
  if (v3)
    (*((void (**)(void *, _QWORD, id))v3 + 2))(v3, 0, v5);

}

void sub_227D7C028(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
  uint64_t v27;

  _Block_object_dispose(&a27, 8);
  _Block_object_dispose((const void *)(v27 - 144), 8);
  _Unwind_Resume(a1);
}

void sub_227D7C04C(uint64_t a1, void *a2)
{
  NSObject *v3;
  id v4;
  uint64_t v5;
  void *v6;
  const char *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  const char *v11;
  uint64_t v12;
  _QWORD v13[4];
  id v14;
  id v15;
  int8x16_t v16;
  _QWORD v17[4];
  id v18;
  uint64_t v19;

  v3 = *(NSObject **)(a1 + 32);
  v4 = a2;
  dispatch_group_enter(v3);
  v5 = MEMORY[0x24BDAC760];
  v17[0] = MEMORY[0x24BDAC760];
  v17[1] = 3221225472;
  v17[2] = sub_227D7C158;
  v17[3] = &unk_24F0893F8;
  v19 = *(_QWORD *)(a1 + 56);
  v6 = *(void **)(a1 + 40);
  v18 = *(id *)(a1 + 32);
  objc_msgSend_remoteObjectProxyWithErrorHandler_(v6, v7, (uint64_t)v17, v8, v9);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v13[0] = v5;
  v13[1] = 3221225472;
  v13[2] = sub_227D7C1AC;
  v13[3] = &unk_24F089420;
  v14 = *(id *)(a1 + 48);
  v16 = vextq_s8(*(int8x16_t *)(a1 + 56), *(int8x16_t *)(a1 + 56), 8uLL);
  v15 = *(id *)(a1 + 32);
  objc_msgSend_assetReviewsForAssetReviewIDs_completion_(v10, v11, (uint64_t)v4, (uint64_t)v13, v12);

}

void sub_227D7C158(uint64_t a1, void *a2)
{
  void *v2;
  uint64_t v4;
  id *v5;
  void *v6;
  void *v7;
  id v8;

  v2 = a2;
  v4 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v7 = *(void **)(v4 + 40);
  v5 = (id *)(v4 + 40);
  v6 = v7;
  if (v7)
    a2 = v6;
  objc_storeStrong(v5, a2);
  v8 = v2;
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));

}

void sub_227D7C1AC(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  id v7;
  void *v8;
  const char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;
  uint64_t v15;
  id *v16;
  void *v17;
  void *v18;
  void *v19;
  id v20;

  v7 = a3;
  v8 = *(void **)(a1 + 32);
  v20 = a4;
  objc_msgSend_addObjectsFromArray_(v8, v9, a2, v10, v11);
  v12 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
  v13 = *(void **)(v12 + 40);
  *(_QWORD *)(v12 + 40) = v7;
  v14 = v7;

  v15 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
  v18 = *(void **)(v15 + 40);
  v16 = (id *)(v15 + 40);
  v17 = v18;
  v19 = v20;
  if (v18)
    v19 = v17;
  objc_storeStrong(v16, v19);
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 40));

}

void sub_227D7C250(uint64_t a1)
{
  void *v2;
  id v3;

  v2 = _Block_copy(*(const void **)(a1 + 40));
  if (v2)
  {
    v3 = v2;
    (*((void (**)(void *, _QWORD, _QWORD, _QWORD))v2 + 2))(v2, *(_QWORD *)(a1 + 32), *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40), *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40));
    v2 = v3;
  }

}

void sub_227D7C2A8(uint64_t a1)
{
  void *v1;
  id v2;

  v1 = _Block_copy(*(const void **)(a1 + 32));
  if (v1)
  {
    v2 = v1;
    (*((void (**)(void *, _QWORD))v1 + 2))(v1, 0);
    v1 = v2;
  }

}

void sub_227D7C414(uint64_t a1, void *a2)
{
  void *v3;
  void *v4;
  id v5;

  v5 = a2;
  v3 = _Block_copy(*(const void **)(a1 + 32));
  v4 = v3;
  if (v3)
    (*((void (**)(void *, _QWORD, id))v3 + 2))(v3, 0, v5);

}

void sub_227D7C5A0(uint64_t a1, void *a2)
{
  void *v3;
  void *v4;
  id v5;

  v5 = a2;
  v3 = _Block_copy(*(const void **)(a1 + 32));
  v4 = v3;
  if (v3)
    (*((void (**)(void *, _QWORD, id))v3 + 2))(v3, 0, v5);

}

void sub_227D7C700(uint64_t a1, void *a2)
{
  void *v3;
  void *v4;
  id v5;

  v5 = a2;
  v3 = _Block_copy(*(const void **)(a1 + 32));
  v4 = v3;
  if (v3)
    (*((void (**)(void *, _QWORD, _QWORD, id))v3 + 2))(v3, 0, 0, v5);

}

void sub_227D7C75C(uint64_t a1, void *a2)
{
  void *v3;
  void *v4;
  id v5;

  v5 = a2;
  v3 = _Block_copy(*(const void **)(a1 + 32));
  v4 = v3;
  if (v3)
    (*((void (**)(void *, _QWORD, _QWORD, _QWORD, id, _QWORD))v3 + 2))(v3, 0, 0, 0, v5, 0);

}

void sub_227D7C8F8(uint64_t a1, void *a2)
{
  void *v3;
  void *v4;
  id v5;

  v5 = a2;
  v3 = _Block_copy(*(const void **)(a1 + 32));
  v4 = v3;
  if (v3)
    (*((void (**)(void *, _QWORD, _QWORD, id))v3 + 2))(v3, 0, 0, v5);

}

void sub_227D7CB94(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31)
{
  uint64_t v31;

  _Block_object_dispose(&a27, 8);
  _Block_object_dispose(&a31, 8);
  _Block_object_dispose((const void *)(v31 - 144), 8);
  _Unwind_Resume(a1);
}

void sub_227D7CBC4(uint64_t a1, void *a2)
{
  NSObject *v3;
  id v4;
  const char *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  const char *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  const char *v15;
  uint64_t v16;
  _QWORD v17[4];
  id v18;
  __int128 v19;
  uint64_t v20;
  _QWORD v21[4];
  id v22;
  __int128 v23;

  v3 = *(NSObject **)(a1 + 32);
  v4 = a2;
  dispatch_group_enter(v3);
  objc_msgSend_bds_subDictionaryWithKeys_(*(void **)(a1 + 40), v5, (uint64_t)v4, v6, v7);
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  v9 = *(void **)(a1 + 48);
  v10 = MEMORY[0x24BDAC760];
  v21[0] = MEMORY[0x24BDAC760];
  v21[1] = 3221225472;
  v21[2] = sub_227D7CCDC;
  v21[3] = &unk_24F089518;
  v23 = *(_OWORD *)(a1 + 56);
  v22 = *(id *)(a1 + 32);
  objc_msgSend_remoteObjectProxyWithErrorHandler_(v9, v11, (uint64_t)v21, v12, v13);
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  v17[0] = v10;
  v17[1] = 3221225472;
  v17[2] = sub_227D7CD3C;
  v17[3] = &unk_24F089540;
  v19 = *(_OWORD *)(a1 + 56);
  v20 = *(_QWORD *)(a1 + 72);
  v18 = *(id *)(a1 + 32);
  objc_msgSend_setCollectionDetails_completion_(v14, v15, (uint64_t)v8, (uint64_t)v17, v16);

}

void sub_227D7CCDC(uint64_t a1, void *a2)
{
  void *v2;
  uint64_t v4;
  id *v5;
  void *v6;
  void *v7;
  id v8;

  v2 = a2;
  v4 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v7 = *(void **)(v4 + 40);
  v5 = (id *)(v4 + 40);
  v6 = v7;
  if (v7)
    a2 = v6;
  objc_storeStrong(v5, a2);
  v8 = v2;
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24) = 0;
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));

}

void sub_227D7CD3C(uint64_t a1, char a2, char a3, void *a4)
{
  uint64_t v8;
  id *v9;
  void *v10;
  void *v11;
  void *v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  char v16;
  id v17;

  v8 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v11 = *(void **)(v8 + 40);
  v9 = (id *)(v8 + 40);
  v10 = v11;
  if (v11)
    v12 = v10;
  else
    v12 = a4;
  objc_storeStrong(v9, v12);
  v17 = a4;
  v13 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
  if (*(_BYTE *)(v13 + 24))
    v14 = a2;
  else
    v14 = 0;
  *(_BYTE *)(v13 + 24) = v14;
  v15 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
  if (*(_BYTE *)(v15 + 24))
    v16 = 1;
  else
    v16 = a3;
  *(_BYTE *)(v15 + 24) = v16;
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));

}

void sub_227D7CDD0(uint64_t a1)
{
  void *v2;
  id v3;

  v2 = _Block_copy(*(const void **)(a1 + 32));
  if (v2)
  {
    v3 = v2;
    (*((void (**)(void *, _QWORD, _QWORD, _QWORD))v2 + 2))(v2, *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24), *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24), *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40));
    v2 = v3;
  }

}

void sub_227D7CF40(uint64_t a1, void *a2)
{
  void *v3;
  void *v4;
  id v5;

  v5 = a2;
  v3 = _Block_copy(*(const void **)(a1 + 32));
  v4 = v3;
  if (v3)
    (*((void (**)(void *, _QWORD, id))v3 + 2))(v3, 0, v5);

}

void sub_227D7CF98(uint64_t a1)
{
  void *v1;
  id v2;

  v1 = _Block_copy(*(const void **)(a1 + 32));
  if (v1)
  {
    v2 = v1;
    (*((void (**)(void *, _QWORD))v1 + 2))(v1, 0);
    v1 = v2;
  }

}

void sub_227D7D104(uint64_t a1, void *a2)
{
  void *v3;
  void *v4;
  id v5;

  v5 = a2;
  v3 = _Block_copy(*(const void **)(a1 + 32));
  v4 = v3;
  if (v3)
    (*((void (**)(void *, _QWORD, id))v3 + 2))(v3, 0, v5);

}

void sub_227D7D290(uint64_t a1, void *a2)
{
  void *v3;
  void *v4;
  id v5;

  v5 = a2;
  v3 = _Block_copy(*(const void **)(a1 + 32));
  v4 = v3;
  if (v3)
    (*((void (**)(void *, _QWORD, id))v3 + 2))(v3, 0, v5);

}

void sub_227D7D3F0(uint64_t a1, void *a2)
{
  void *v3;
  void *v4;
  id v5;

  v5 = a2;
  v3 = _Block_copy(*(const void **)(a1 + 32));
  v4 = v3;
  if (v3)
    (*((void (**)(void *, _QWORD, _QWORD, id))v3 + 2))(v3, 0, 0, v5);

}

void sub_227D7D560(uint64_t a1, void *a2)
{
  void *v3;
  void *v4;
  id v5;

  v5 = a2;
  v3 = _Block_copy(*(const void **)(a1 + 32));
  v4 = v3;
  if (v3)
    (*((void (**)(void *, _QWORD, _QWORD, id))v3 + 2))(v3, 0, 0, v5);

}

void sub_227D7D5BC(uint64_t a1, void *a2)
{
  void *v3;
  void *v4;
  id v5;

  v5 = a2;
  v3 = _Block_copy(*(const void **)(a1 + 32));
  v4 = v3;
  if (v3)
    (*((void (**)(void *, _QWORD, _QWORD, _QWORD, id, _QWORD))v3 + 2))(v3, 0, 0, 0, v5, 0);

}

void sub_227D7D758(uint64_t a1, void *a2)
{
  void *v3;
  void *v4;
  id v5;

  v5 = a2;
  v3 = _Block_copy(*(const void **)(a1 + 32));
  v4 = v3;
  if (v3)
    (*((void (**)(void *, _QWORD, _QWORD, id))v3 + 2))(v3, 0, 0, v5);

}

void sub_227D7D9F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31)
{
  uint64_t v31;

  _Block_object_dispose(&a27, 8);
  _Block_object_dispose(&a31, 8);
  _Block_object_dispose((const void *)(v31 - 144), 8);
  _Unwind_Resume(a1);
}

void sub_227D7DA24(uint64_t a1, void *a2)
{
  NSObject *v3;
  id v4;
  const char *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  const char *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  const char *v15;
  uint64_t v16;
  _QWORD v17[4];
  id v18;
  __int128 v19;
  uint64_t v20;
  _QWORD v21[4];
  id v22;
  __int128 v23;

  v3 = *(NSObject **)(a1 + 32);
  v4 = a2;
  dispatch_group_enter(v3);
  objc_msgSend_bds_subDictionaryWithKeys_(*(void **)(a1 + 40), v5, (uint64_t)v4, v6, v7);
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  v9 = *(void **)(a1 + 48);
  v10 = MEMORY[0x24BDAC760];
  v21[0] = MEMORY[0x24BDAC760];
  v21[1] = 3221225472;
  v21[2] = sub_227D7DB3C;
  v21[3] = &unk_24F089518;
  v23 = *(_OWORD *)(a1 + 56);
  v22 = *(id *)(a1 + 32);
  objc_msgSend_remoteObjectProxyWithErrorHandler_(v9, v11, (uint64_t)v21, v12, v13);
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  v17[0] = v10;
  v17[1] = 3221225472;
  v17[2] = sub_227D7DB9C;
  v17[3] = &unk_24F089540;
  v19 = *(_OWORD *)(a1 + 56);
  v20 = *(_QWORD *)(a1 + 72);
  v18 = *(id *)(a1 + 32);
  objc_msgSend_setCollectionMembers_completion_(v14, v15, (uint64_t)v8, (uint64_t)v17, v16);

}

void sub_227D7DB3C(uint64_t a1, void *a2)
{
  void *v2;
  uint64_t v4;
  id *v5;
  void *v6;
  void *v7;
  id v8;

  v2 = a2;
  v4 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v7 = *(void **)(v4 + 40);
  v5 = (id *)(v4 + 40);
  v6 = v7;
  if (v7)
    a2 = v6;
  objc_storeStrong(v5, a2);
  v8 = v2;
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24) = 0;
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));

}

void sub_227D7DB9C(uint64_t a1, char a2, char a3, void *a4)
{
  uint64_t v8;
  id *v9;
  void *v10;
  void *v11;
  void *v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  char v16;
  id v17;

  v8 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v11 = *(void **)(v8 + 40);
  v9 = (id *)(v8 + 40);
  v10 = v11;
  if (v11)
    v12 = v10;
  else
    v12 = a4;
  objc_storeStrong(v9, v12);
  v17 = a4;
  v13 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
  if (*(_BYTE *)(v13 + 24))
    v14 = a2;
  else
    v14 = 0;
  *(_BYTE *)(v13 + 24) = v14;
  v15 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
  if (*(_BYTE *)(v15 + 24))
    v16 = 1;
  else
    v16 = a3;
  *(_BYTE *)(v15 + 24) = v16;
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));

}

void sub_227D7DC30(uint64_t a1)
{
  void *v2;
  id v3;

  v2 = _Block_copy(*(const void **)(a1 + 32));
  if (v2)
  {
    v3 = v2;
    (*((void (**)(void *, _QWORD, _QWORD, _QWORD))v2 + 2))(v2, *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24), *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24), *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40));
    v2 = v3;
  }

}

void sub_227D7DDA0(uint64_t a1, void *a2)
{
  void *v3;
  void *v4;
  id v5;

  v5 = a2;
  v3 = _Block_copy(*(const void **)(a1 + 32));
  v4 = v3;
  if (v3)
    (*((void (**)(void *, _QWORD, id))v3 + 2))(v3, 0, v5);

}

void sub_227D7DEF4(uint64_t a1, void *a2)
{
  void *v3;
  void *v4;
  id v5;

  v5 = a2;
  v3 = _Block_copy(*(const void **)(a1 + 32));
  v4 = v3;
  if (v3)
    (*((void (**)(void *, _QWORD, id))v3 + 2))(v3, 0, v5);

}

void sub_227D7E078(uint64_t a1, void *a2)
{
  void *v3;
  void *v4;
  id v5;

  v5 = a2;
  v3 = _Block_copy(*(const void **)(a1 + 32));
  v4 = v3;
  if (v3)
    (*((void (**)(void *, id))v3 + 2))(v3, v5);

}

void sub_227D7E1F0(uint64_t a1, void *a2)
{
  void *v3;
  void *v4;
  id v5;

  v5 = a2;
  v3 = _Block_copy(*(const void **)(a1 + 32));
  v4 = v3;
  if (v3)
    (*((void (**)(void *, id))v3 + 2))(v3, v5);

}

void sub_227D7E368(uint64_t a1, void *a2)
{
  void *v3;
  void *v4;
  id v5;

  v5 = a2;
  v3 = _Block_copy(*(const void **)(a1 + 32));
  v4 = v3;
  if (v3)
    (*((void (**)(void *, id))v3 + 2))(v3, v5);

}

void sub_227D7E4C8(uint64_t a1, void *a2)
{
  void *v3;
  void *v4;
  id v5;

  v5 = a2;
  v3 = _Block_copy(*(const void **)(a1 + 32));
  v4 = v3;
  if (v3)
    (*((void (**)(void *, id))v3 + 2))(v3, v5);

}

void sub_227D7E618(uint64_t a1)
{
  const char *v1;
  void *v2;
  void (**v3)(id, _QWORD, void *);

  v3 = (void (**)(id, _QWORD, void *))_Block_copy(*(const void **)(a1 + 32));
  if (v3)
  {
    objc_msgSend_errorWithDomain_code_userInfo_(MEMORY[0x24BDD1540], v1, (uint64_t)CFSTR("BDSErrorDomain"), 1000, 0);
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    v3[2](v3, 0, v2);

  }
}

void sub_227D7E758(uint64_t a1)
{
  void *v1;
  id v2;

  v1 = _Block_copy(*(const void **)(a1 + 32));
  if (v1)
  {
    v2 = v1;
    (*((void (**)(void *, _QWORD))v1 + 2))(v1, 0);
    v1 = v2;
  }

}

void sub_227D7E8A4(uint64_t a1, void *a2)
{
  void *v3;
  void *v4;
  id v5;

  v5 = a2;
  v3 = _Block_copy(*(const void **)(a1 + 32));
  v4 = v3;
  if (v3)
    (*((void (**)(void *, _QWORD, _QWORD, id))v3 + 2))(v3, 0, 0, v5);

}

void sub_227D7EA14(uint64_t a1, void *a2)
{
  void *v3;
  void *v4;
  id v5;

  v5 = a2;
  v3 = _Block_copy(*(const void **)(a1 + 32));
  v4 = v3;
  if (v3)
    (*((void (**)(void *, _QWORD, _QWORD, id))v3 + 2))(v3, 0, 0, v5);

}

void sub_227D7EB80(uint64_t a1, void *a2)
{
  void *v3;
  void *v4;
  id v5;

  v5 = a2;
  v3 = _Block_copy(*(const void **)(a1 + 32));
  v4 = v3;
  if (v3)
    (*((void (**)(void *, _QWORD, id))v3 + 2))(v3, 0, v5);

}

void sub_227D7EBD8(uint64_t a1, void *a2)
{
  void *v3;
  void *v4;
  id v5;

  v5 = a2;
  v3 = _Block_copy(*(const void **)(a1 + 32));
  v4 = v3;
  if (v3)
    (*((void (**)(void *, _QWORD, id))v3 + 2))(v3, 0, v5);

}

void sub_227D7EE08(uint64_t a1, void *a2)
{
  void *v3;
  void *v4;
  id v5;

  v5 = a2;
  v3 = _Block_copy(*(const void **)(a1 + 32));
  v4 = v3;
  if (v3)
    (*((void (**)(void *, _QWORD, _QWORD, id))v3 + 2))(v3, 0, 0, v5);

}

void sub_227D7EF80(uint64_t a1, void *a2)
{
  void *v3;
  void *v4;
  id v5;

  v5 = a2;
  v3 = _Block_copy(*(const void **)(a1 + 32));
  v4 = v3;
  if (v3)
    (*((void (**)(void *, _QWORD, _QWORD, _QWORD, id, _QWORD))v3 + 2))(v3, 0, 0, 0, v5, 0);

}

void sub_227D7F0F4(uint64_t a1, void *a2)
{
  void *v3;
  void *v4;
  id v5;

  v5 = a2;
  v3 = _Block_copy(*(const void **)(a1 + 32));
  v4 = v3;
  if (v3)
    (*((void (**)(void *, _QWORD, id))v3 + 2))(v3, 0, v5);

}

void sub_227D7F25C(uint64_t a1, void *a2)
{
  void *v3;
  void *v4;
  id v5;

  v5 = a2;
  v3 = _Block_copy(*(const void **)(a1 + 32));
  v4 = v3;
  if (v3)
    (*((void (**)(void *, _QWORD, id))v3 + 2))(v3, 0, v5);

}

void sub_227D7F3DC(uint64_t a1, void *a2)
{
  void *v3;
  void *v4;
  id v5;

  v5 = a2;
  v3 = _Block_copy(*(const void **)(a1 + 32));
  v4 = v3;
  if (v3)
    (*((void (**)(void *, id))v3 + 2))(v3, v5);

}

void sub_227D7F564(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  void *v5;
  void *v6;

  v3 = a2;
  BDSServiceLog();
  v4 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    sub_227E58968();

  v5 = _Block_copy(*(const void **)(a1 + 32));
  v6 = v5;
  if (v5)
    (*((void (**)(void *, _QWORD, id))v5 + 2))(v5, 0, v3);

}

void sub_227D7F71C(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  void *v5;
  void *v6;

  v3 = a2;
  BDSServiceLog();
  v4 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    sub_227E589F4();

  v5 = _Block_copy(*(const void **)(a1 + 32));
  v6 = v5;
  if (v5)
    (*((void (**)(void *, _QWORD, id))v5 + 2))(v5, 0, v3);

}

void sub_227D7F8E4(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  void *v5;
  void *v6;

  v3 = a2;
  BDSServiceLog();
  v4 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    sub_227E58A80();

  v5 = _Block_copy(*(const void **)(a1 + 32));
  v6 = v5;
  if (v5)
    (*((void (**)(void *, _QWORD, id))v5 + 2))(v5, 0, v3);

}

void sub_227D7FA94(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  void *v5;
  void *v6;

  v3 = a2;
  BDSServiceLog();
  v4 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    sub_227E58B0C();

  v5 = _Block_copy(*(const void **)(a1 + 32));
  v6 = v5;
  if (v5)
    (*((void (**)(void *, _QWORD, _QWORD, id))v5 + 2))(v5, 0, 0, v3);

}

void sub_227D7FB1C(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  void *v5;
  void *v6;

  v3 = a2;
  BDSServiceLog();
  v4 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    sub_227E58B98();

  v5 = _Block_copy(*(const void **)(a1 + 32));
  v6 = v5;
  if (v5)
    (*((void (**)(void *, _QWORD, _QWORD, _QWORD, id, _QWORD))v5 + 2))(v5, 0, 0, 0, v3, 0);

}

void sub_227D7FCE4(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  void *v5;
  void *v6;

  v3 = a2;
  BDSServiceLog();
  v4 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    sub_227E58C24();

  v5 = _Block_copy(*(const void **)(a1 + 32));
  v6 = v5;
  if (v5)
    (*((void (**)(void *, _QWORD, _QWORD, id))v5 + 2))(v5, 0, 0, v3);

}

void sub_227D7FEA4(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  void *v5;
  void *v6;

  v3 = a2;
  BDSServiceLog();
  v4 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    sub_227E58CB0();

  v5 = _Block_copy(*(const void **)(a1 + 32));
  v6 = v5;
  if (v5)
    (*((void (**)(void *, _QWORD, _QWORD, id))v5 + 2))(v5, 0, 0, v3);

}

void sub_227D80048(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  void *v5;
  void *v6;

  v3 = a2;
  BDSServiceLog();
  v4 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    sub_227E58D3C();

  v5 = _Block_copy(*(const void **)(a1 + 32));
  v6 = v5;
  if (v5)
    (*((void (**)(void *, id))v5 + 2))(v5, v3);

}

void sub_227D801E4(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  void *v5;
  void *v6;

  v3 = a2;
  BDSServiceLog();
  v4 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    sub_227E58DC8();

  v5 = _Block_copy(*(const void **)(a1 + 32));
  v6 = v5;
  if (v5)
    (*((void (**)(void *, id))v5 + 2))(v5, v3);

}

void sub_227D80380(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  void *v5;
  void *v6;

  v3 = a2;
  BDSServiceLog();
  v4 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    sub_227E58E54();

  v5 = _Block_copy(*(const void **)(a1 + 32));
  v6 = v5;
  if (v5)
    (*((void (**)(void *, id))v5 + 2))(v5, v3);

}

void sub_227D8051C(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  void *v5;
  void *v6;

  v3 = a2;
  BDSServiceLog();
  v4 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    sub_227E58EE0();

  v5 = _Block_copy(*(const void **)(a1 + 32));
  v6 = v5;
  if (v5)
    (*((void (**)(void *, id))v5 + 2))(v5, v3);

}

void sub_227D806CC(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  void *v5;
  void *v6;

  v3 = a2;
  BDSServiceLog();
  v4 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    sub_227E58F6C();

  v5 = _Block_copy(*(const void **)(a1 + 32));
  v6 = v5;
  if (v5)
    (*((void (**)(void *, _QWORD, id))v5 + 2))(v5, 0, v3);

}

void sub_227D808A0(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  void *v5;
  void *v6;

  v3 = a2;
  BDSServiceLog();
  v4 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    sub_227E58FF8();

  v5 = _Block_copy(*(const void **)(a1 + 32));
  v6 = v5;
  if (v5)
    (*((void (**)(void *, _QWORD, id))v5 + 2))(v5, 0, v3);

}

void sub_227D80A48(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  void *v5;
  void *v6;

  v3 = a2;
  BDSServiceLog();
  v4 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    sub_227E58FF8();

  v5 = _Block_copy(*(const void **)(a1 + 32));
  v6 = v5;
  if (v5)
    (*((void (**)(void *, _QWORD))v5 + 2))(v5, 0);

}

void sub_227D80BDC(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  void *v5;
  void *v6;

  v3 = a2;
  BDSServiceLog();
  v4 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    sub_227E59084();

  v5 = _Block_copy(*(const void **)(a1 + 32));
  v6 = v5;
  if (v5)
    (*((void (**)(void *, _QWORD))v5 + 2))(v5, 0);

}

void sub_227D80DA0(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  void *v5;
  void *v6;

  v3 = a2;
  BDSServiceLog();
  v4 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    sub_227E59084();

  v5 = _Block_copy(*(const void **)(a1 + 32));
  v6 = v5;
  if (v5)
    (*((void (**)(void *, _QWORD, id))v5 + 2))(v5, 0, v3);

}

void sub_227D80F64(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  void *v5;
  void *v6;

  v3 = a2;
  BDSServiceLog();
  v4 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    sub_227E59110(a1, (uint64_t)v3, v4);

  v5 = _Block_copy(*(const void **)(a1 + 40));
  v6 = v5;
  if (v5)
    (*((void (**)(void *, _QWORD))v5 + 2))(v5, 0);

}

void sub_227D81118(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  void *v5;
  void *v6;

  v3 = a2;
  BDSServiceLog();
  v4 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    sub_227E591BC();

  v5 = _Block_copy(*(const void **)(a1 + 40));
  v6 = v5;
  if (v5)
    (*((void (**)(void *, _QWORD))v5 + 2))(v5, 0);

}

void sub_227D812CC(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  void *v5;
  void *v6;

  v3 = a2;
  BDSServiceLog();
  v4 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    sub_227E59248();

  v5 = _Block_copy(*(const void **)(a1 + 40));
  v6 = v5;
  if (v5)
    (*((void (**)(void *, _QWORD))v5 + 2))(v5, 0);

}

void sub_227D814AC(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  void *v5;
  void *v6;

  v3 = a2;
  BDSServiceLog();
  v4 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    sub_227E591BC();

  v5 = _Block_copy(*(const void **)(a1 + 40));
  v6 = v5;
  if (v5)
    (*((void (**)(void *, id))v5 + 2))(v5, v3);

}

void sub_227D8165C(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  void *v5;
  void *v6;

  v3 = a2;
  BDSServiceLog();
  v4 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    sub_227E592D4();

  v5 = _Block_copy(*(const void **)(a1 + 32));
  v6 = v5;
  if (v5)
    (*((void (**)(void *, id))v5 + 2))(v5, v3);

}

void sub_227D8180C(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  void *v5;
  void *v6;

  v3 = a2;
  BDSServiceLog();
  v4 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    sub_227E59360();

  v5 = _Block_copy(*(const void **)(a1 + 32));
  v6 = v5;
  if (v5)
    (*((void (**)(void *, _QWORD, id))v5 + 2))(v5, 0, v3);

}

void sub_227D819B0(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  void *v5;
  void *v6;

  v3 = a2;
  BDSServiceLog();
  v4 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    sub_227E593EC();

  v5 = _Block_copy(*(const void **)(a1 + 32));
  v6 = v5;
  if (v5)
    (*((void (**)(void *, _QWORD))v5 + 2))(v5, 0);

}

void sub_227D81B54(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  void *v5;
  void *v6;

  v3 = a2;
  BDSServiceLog();
  v4 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    sub_227E59478();

  v5 = _Block_copy(*(const void **)(a1 + 32));
  v6 = v5;
  if (v5)
    (*((void (**)(void *, _QWORD))v5 + 2))(v5, 0);

}

void sub_227D81D0C(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  void *v5;
  void *v6;

  v3 = a2;
  BDSServiceLog();
  v4 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    sub_227E59504();

  v5 = _Block_copy(*(const void **)(a1 + 32));
  v6 = v5;
  if (v5)
    (*((void (**)(void *, _QWORD))v5 + 2))(v5, 0);

}

uint64_t sub_227D81D94(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return objc_msgSend_monitorServiceNotificationsWithChangeToken_completion_(a2, (const char *)a2, *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), a5);
}

void sub_227D81EFC(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  void *v5;
  void *v6;

  v3 = a2;
  BDSServiceLog();
  v4 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    sub_227E595BC();

  v5 = _Block_copy(*(const void **)(a1 + 40));
  v6 = v5;
  if (v5)
    (*((void (**)(void *, id))v5 + 2))(v5, v3);

}

void sub_227D820AC(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  void *v5;
  void *v6;

  v3 = a2;
  BDSServiceLog();
  v4 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    sub_227E59648();

  v5 = _Block_copy(*(const void **)(a1 + 32));
  v6 = v5;
  if (v5)
    (*((void (**)(void *, _QWORD, id))v5 + 2))(v5, 0, v3);

}

void sub_227D82260(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  void *v5;
  void *v6;

  v3 = a2;
  BDSServiceLog();
  v4 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    sub_227E596D4();

  v5 = _Block_copy(*(const void **)(a1 + 32));
  v6 = v5;
  if (v5)
    (*((void (**)(void *, _QWORD, id))v5 + 2))(v5, 0, v3);

}

void sub_227D823F4(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  void *v5;
  void *v6;

  v3 = a2;
  BDSServiceLog();
  v4 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    sub_227E59760();

  v5 = _Block_copy(*(const void **)(a1 + 32));
  v6 = v5;
  if (v5)
    (*((void (**)(void *, _QWORD))v5 + 2))(v5, 0);

}

void sub_227D8258C(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  void *v5;
  void *v6;

  v3 = a2;
  BDSServiceLog();
  v4 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    sub_227E597EC();

  v5 = _Block_copy(*(const void **)(a1 + 32));
  v6 = v5;
  if (v5)
    (*((void (**)(void *, _QWORD))v5 + 2))(v5, 0);

}

void sub_227D82710(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  void *v5;
  void *v6;

  v3 = a2;
  BDSServiceLog();
  v4 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    sub_227E59878();

  v5 = _Block_copy(*(const void **)(a1 + 32));
  v6 = v5;
  if (v5)
    (*((void (**)(void *, _QWORD))v5 + 2))(v5, 0);

}

void sub_227D82890(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  void *v5;
  void *v6;

  v3 = a2;
  BDSServiceLog();
  v4 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    sub_227E59904();

  v5 = _Block_copy(*(const void **)(a1 + 32));
  v6 = v5;
  if (v5)
    (*((void (**)(void *, _QWORD))v5 + 2))(v5, 0);

}

void sub_227D82A14(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  void *v5;
  void *v6;

  v3 = a2;
  BDSServiceLog();
  v4 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    sub_227E59990();

  v5 = _Block_copy(*(const void **)(a1 + 32));
  v6 = v5;
  if (v5)
    (*((void (**)(void *, _QWORD, _QWORD))v5 + 2))(v5, 0, 0);

}

void sub_227D82B98(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  void *v5;
  void *v6;

  v3 = a2;
  BDSServiceLog();
  v4 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    sub_227E59A1C();

  v5 = _Block_copy(*(const void **)(a1 + 32));
  v6 = v5;
  if (v5)
    (*((void (**)(void *, _QWORD))v5 + 2))(v5, 0);

}

void sub_227D82D18(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  void *v5;
  void *v6;

  v3 = a2;
  BDSServiceLog();
  v4 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    sub_227E59AA8();

  v5 = _Block_copy(*(const void **)(a1 + 32));
  v6 = v5;
  if (v5)
    (*((void (**)(void *, _QWORD))v5 + 2))(v5, 0);

}

void sub_227D82EAC(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  void *v5;
  void *v6;

  v3 = a2;
  BDSServiceLog();
  v4 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    sub_227E59B34();

  v5 = _Block_copy(*(const void **)(a1 + 32));
  v6 = v5;
  if (v5)
    (*((void (**)(void *, _QWORD))v5 + 2))(v5, 0);

}

void sub_227D8302C(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  void *v5;
  void *v6;

  v3 = a2;
  BDSServiceLog();
  v4 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    sub_227E59BC0();

  v5 = _Block_copy(*(const void **)(a1 + 32));
  v6 = v5;
  if (v5)
    (*((void (**)(void *, _QWORD))v5 + 2))(v5, 0);

}

void sub_227D83230(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  void *v5;
  void *v6;

  v3 = a2;
  BDSServiceLog();
  v4 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    sub_227E59C4C();

  v5 = _Block_copy(*(const void **)(a1 + 32));
  v6 = v5;
  if (v5)
    (*((void (**)(void *, _QWORD))v5 + 2))(v5, 0);

}

uint64_t sub_227D832B0(uint64_t *a1, void *a2)
{
  return objc_msgSend_readingHistoryHandleSyncFileChangeWithSyncVersionInfo_updateInfo_completion_(a2, (const char *)a2, a1[4], a1[5], a1[6]);
}

void sub_227D833FC(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  void *v5;
  void *v6;

  v3 = a2;
  BDSServiceLog();
  v4 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    sub_227E59CD8();

  v5 = _Block_copy(*(const void **)(a1 + 40));
  v6 = v5;
  if (v5)
    (*((void (**)(void *, _QWORD))v5 + 2))(v5, 0);

}

void sub_227D835C8(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  void *v5;
  void *v6;

  v3 = a2;
  BDSServiceLog();
  v4 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    sub_227E59D94();

  v5 = _Block_copy(*(const void **)(a1 + 32));
  v6 = v5;
  if (v5)
    (*((void (**)(void *, _QWORD, _QWORD))v5 + 2))(v5, 0, 0);

}

void sub_227D8377C(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  void *v5;
  void *v6;

  v3 = a2;
  BDSServiceLog();
  v4 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    sub_227E59E20();

  v5 = _Block_copy(*(const void **)(a1 + 32));
  v6 = v5;
  if (v5)
    (*((void (**)(void *, _QWORD, id))v5 + 2))(v5, 0, v3);

}

void sub_227D83960(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  void *v5;
  void *v6;

  v3 = a2;
  BDSServiceLog();
  v4 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    sub_227E59F14();

  v5 = _Block_copy(*(const void **)(a1 + 40));
  v6 = v5;
  if (v5)
    (*((void (**)(void *, id))v5 + 2))(v5, v3);

}

void sub_227D83B30(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  void *v5;
  void *v6;

  v3 = a2;
  BDSServiceLog();
  v4 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    sub_227E59F14();

  v5 = _Block_copy(*(const void **)(a1 + 40));
  v6 = v5;
  if (v5)
    (*((void (**)(void *, id))v5 + 2))(v5, v3);

}

void sub_227D83CFC(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  void *v5;
  void *v6;

  v3 = a2;
  BDSServiceLog();
  v4 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    sub_227E59F14();

  v5 = _Block_copy(*(const void **)(a1 + 40));
  v6 = v5;
  if (v5)
    (*((void (**)(void *, _QWORD, id))v5 + 2))(v5, 0, v3);

}

void sub_227D83EE4(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  void *v5;
  void *v6;

  v3 = a2;
  BDSServiceLog();
  v4 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    sub_227E59F14();

  v5 = _Block_copy(*(const void **)(a1 + 40));
  v6 = v5;
  if (v5)
    (*((void (**)(void *, id))v5 + 2))(v5, v3);

}

void sub_227D840C8(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  void *v5;
  void *v6;

  v3 = a2;
  BDSServiceLog();
  v4 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    sub_227E59F14();

  v5 = _Block_copy(*(const void **)(a1 + 40));
  v6 = v5;
  if (v5)
    (*((void (**)(void *, id))v5 + 2))(v5, v3);

}

void sub_227D842AC(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  void *v5;
  void *v6;

  v3 = a2;
  BDSServiceLog();
  v4 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    sub_227E59FCC();

  v5 = _Block_copy(*(const void **)(a1 + 40));
  v6 = v5;
  if (v5)
    (*((void (**)(void *, _QWORD, id))v5 + 2))(v5, 0, v3);

}

void sub_227D84468(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  void *v5;
  void *v6;

  v3 = a2;
  BDSServiceLog();
  v4 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    sub_227E5A058();

  v5 = _Block_copy(*(const void **)(a1 + 32));
  v6 = v5;
  if (v5)
    (*((void (**)(void *, _QWORD, _QWORD, id))v5 + 2))(v5, 0, 0, v3);

}

void sub_227D84650(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  void *v5;
  void *v6;

  v3 = a2;
  BDSServiceLog();
  v4 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    sub_227E5A0E4();

  v5 = _Block_copy(*(const void **)(a1 + 40));
  v6 = v5;
  if (v5)
    (*((void (**)(void *, _QWORD, id))v5 + 2))(v5, 0, v3);

}

void sub_227D847DC(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  void *v5;
  void *v6;

  v3 = a2;
  BDSServiceLog();
  v4 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    sub_227E5A170();

  v5 = _Block_copy(*(const void **)(a1 + 32));
  v6 = v5;
  if (v5)
    (*((void (**)(void *, _QWORD, _QWORD))v5 + 2))(v5, 0, 0);

}

void sub_227D84980(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  void *v5;
  void *v6;

  v3 = a2;
  BDSServiceLog();
  v4 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    sub_227E5A1FC();

  v5 = _Block_copy(*(const void **)(a1 + 32));
  v6 = v5;
  if (v5)
    (*((void (**)(void *, _QWORD, id))v5 + 2))(v5, 0, v3);

}

void sub_227D84B24(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  void *v5;
  void *v6;

  v3 = a2;
  BDSServiceLog();
  v4 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    sub_227E5A288();

  v5 = _Block_copy(*(const void **)(a1 + 32));
  v6 = v5;
  if (v5)
    (*((void (**)(void *, _QWORD, id))v5 + 2))(v5, 0, v3);

}

void sub_227D84C24(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 2u);
}

void sub_227D84C58(void *a1, uint64_t a2, os_log_t log, const char *a4, ...)
{
  va_list va;

  va_start(va, a4);
  _os_log_error_impl(a1, log, OS_LOG_TYPE_ERROR, a4, (uint8_t *)va, 0x16u);
}

void sub_227D84C6C(void *a1, uint64_t a2, os_log_t log, const char *a4, ...)
{
  va_list va;

  va_start(va, a4);
  _os_log_error_impl(a1, log, OS_LOG_TYPE_ERROR, a4, (uint8_t *)va, 0x1Cu);
}

void sub_227D84CA0(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  NSObject *v9;

  _os_log_error_impl(a1, v9, OS_LOG_TYPE_ERROR, a4, &a9, 0x20u);
}

void sub_227D84CDC(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 8) = a1;
}

uint64_t sub_227D84CF4()
{
  return objc_opt_class();
}

void sub_227D84D10(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 8) = a1;
}

uint64_t sub_227D84D1C()
{
  return objc_opt_class();
}

uint64_t sub_227D84D24()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 48);
}

uint64_t sub_227D84D30()
{
  uint64_t v0;

  return v0;
}

void sub_227D84D3C(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 8) = a1;
}

void sub_227D86308(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  NSObject *v9;

  _os_log_error_impl(a1, v9, OS_LOG_TYPE_ERROR, a4, &a9, 0xCu);
}

void sub_227D86550(uint64_t a1)
{
  void (**v1)(void);
  void (**v2)(void);

  v1 = (void (**)(void))_Block_copy(*(const void **)(a1 + 32));
  if (v1)
  {
    v2 = v1;
    v1[2]();
    v1 = v2;
  }

}

id sub_227D865D8(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  id v5;
  id v6;
  void *v7;
  id v8;
  const char *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  const char *v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  void *v17;

  v5 = a3;
  v6 = a4;
  v7 = v6;
  if (v5 && v6)
  {
    v8 = objc_alloc(MEMORY[0x24BDBCE30]);
    v12 = (void *)objc_msgSend_initWithObjects_(v8, v9, (uint64_t)v5, v10, v11, v7, 0);
    objc_msgSend_andPredicateWithSubpredicates_(MEMORY[0x24BDD14C0], v13, (uint64_t)v12, v14, v15);
    v16 = (id)objc_claimAutoreleasedReturnValue();

  }
  else
  {
    if (v5)
      v17 = v5;
    else
      v17 = v6;
    v16 = v17;
  }

  return v16;
}

uint64_t sub_227D86674(void *a1, uint64_t a2, void *a3, void *a4)
{
  objc_class *v6;
  id v7;
  id v8;
  id v9;
  const char *v10;
  uint64_t v11;
  void *v12;
  const char *v13;
  uint64_t v14;
  uint64_t v15;
  const char *v16;
  uint64_t v17;
  uint64_t v18;
  const char *v19;
  uint64_t v20;
  uint64_t Request_error;
  id v22;
  const char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  id v29;

  v6 = (objc_class *)MEMORY[0x24BDBB678];
  v7 = a4;
  v8 = a3;
  v9 = objc_alloc_init(v6);
  objc_msgSend_entityForName_inManagedObjectContext_(MEMORY[0x24BDBB658], v10, (uint64_t)v8, (uint64_t)a1, v11);
  v12 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend_setEntity_(v9, v13, (uint64_t)v12, v14, v15);
  objc_msgSend_setPredicate_(v9, v16, (uint64_t)v7, v17, v18);

  v29 = 0;
  Request_error = objc_msgSend_countForFetchRequest_error_(a1, v19, (uint64_t)v9, (uint64_t)&v29, v20);
  v22 = v29;
  v27 = v22;
  if (v22)
    objc_msgSend_logRecursively(v22, v23, v24, v25, v26);
  if (Request_error == 0x7FFFFFFFFFFFFFFFLL)
    Request_error = 0;

  return Request_error;
}

uint64_t sub_227D86758(void *a1, uint64_t a2, void *a3, void *a4, void *a5, void *a6, uint64_t a7, int a8)
{
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  const char *v19;
  uint64_t v20;
  void *v21;
  const char *v22;
  uint64_t v23;
  uint64_t v24;
  const char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  const char *v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  id v33;
  void *v34;
  int v35;
  id v36;
  id v37;
  uint64_t v38;
  void *v39;
  const char *v40;
  uint64_t v41;
  uint64_t v42;
  int isEqualToString;
  const char *v44;
  uint64_t v45;
  uint64_t v46;
  const char *v47;
  uint64_t v48;
  uint64_t v49;
  const char *v50;
  uint64_t v51;
  id v52;
  const char *v53;
  uint64_t v54;
  void *v55;
  id v56;
  const char *v57;
  uint64_t v58;
  uint64_t v59;
  void *v60;
  const char *v61;
  uint64_t v62;
  uint64_t v63;
  void *v64;
  id v65;
  const char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  void *v70;
  const char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  id v77;
  void *context;
  id v79;

  v14 = a3;
  v15 = a4;
  v16 = a5;
  v17 = a6;
  context = (void *)MEMORY[0x22E2AA24C]();
  v18 = objc_alloc_init(MEMORY[0x24BDBB678]);
  objc_msgSend_entityForName_inManagedObjectContext_(MEMORY[0x24BDBB658], v19, (uint64_t)v15, (uint64_t)a1, v20);
  v21 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_setEntity_(v18, v22, (uint64_t)v21, v23, v24);
  if (objc_msgSend_count(v14, v25, v26, v27, v28) != 1)
    goto LABEL_4;
  objc_msgSend_objectAtIndex_(v14, v29, 0, v30, v31);
  v77 = v14;
  v32 = v21;
  v33 = v17;
  v34 = a1;
  v35 = a8;
  v36 = v16;
  v37 = v15;
  v38 = a7;
  v39 = (void *)objc_claimAutoreleasedReturnValue();
  isEqualToString = objc_msgSend_isEqualToString_(v39, v40, (uint64_t)CFSTR("objectID"), v41, v42);

  a7 = v38;
  v15 = v37;
  v16 = v36;
  a8 = v35;
  a1 = v34;
  v17 = v33;
  v21 = v32;
  v14 = v77;
  if (isEqualToString)
  {
    objc_msgSend_setResultType_(v18, v29, 1, v30, v31);
  }
  else
  {
LABEL_4:
    objc_msgSend_setPropertiesToFetch_(v18, v29, (uint64_t)v14, v30, v31);
    objc_msgSend_setResultType_(v18, v47, 2, v48, v49);
    if (a8)
      objc_msgSend_setReturnsDistinctResults_(v18, v44, 1, v45, v46);
  }
  objc_msgSend_setPredicate_(v18, v44, (uint64_t)v16, v45, v46);
  if (v17)
  {
    v52 = objc_alloc(MEMORY[0x24BDD17C0]);
    v55 = (void *)objc_msgSend_initWithKey_ascending_(v52, v53, (uint64_t)v17, a7, v54);
    v56 = objc_alloc(MEMORY[0x24BDBCE30]);
    v60 = (void *)objc_msgSend_initWithObjects_(v56, v57, (uint64_t)v55, v58, v59, 0);
    objc_msgSend_setSortDescriptors_(v18, v61, (uint64_t)v60, v62, v63);

  }
  v79 = 0;
  objc_msgSend_executeFetchRequest_error_(a1, v50, (uint64_t)v18, (uint64_t)&v79, v51);
  v64 = (void *)objc_claimAutoreleasedReturnValue();
  v65 = v79;
  v70 = v65;
  if (v65)
    objc_msgSend_logRecursively(v65, v66, v67, v68, v69);

  objc_autoreleasePoolPop(context);
  v75 = objc_msgSend_copy(v64, v71, v72, v73, v74);

  return v75;
}

uint64_t sub_227D8698C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return MEMORY[0x24BEDD108](a1, sel_copyEntityPropertiesArray_fromEntityName_withPredicate_sortBy_ascending_distinct_, a3, a4, a5);
}

uint64_t sub_227D86994(void *a1, uint64_t a2, uint64_t a3, void *a4, void *a5, void *a6, uint64_t a7)
{
  void *v12;
  id v13;
  id v14;
  id v15;
  const char *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  const char *v20;
  uint64_t v21;

  v12 = (void *)MEMORY[0x24BDBCE30];
  v13 = a6;
  v14 = a5;
  v15 = a4;
  objc_msgSend_arrayWithObject_(v12, v16, a3, v17, v18);
  v19 = (void *)objc_claimAutoreleasedReturnValue();
  v21 = objc_msgSend_copyEntityPropertiesArray_fromEntityName_withPredicate_sortBy_ascending_(a1, v20, (uint64_t)v19, (uint64_t)v15, (uint64_t)v14, v13, a7);

  return v21;
}

uint64_t sub_227D86A40(void *a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v5;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  const char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  const char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v5 = (void *)objc_msgSend_copyEntityPropertyArray_fromEntityName_withPredicate_sortBy_ascending_(a1, a2, a3, a4, a5, 0, 0);
  if (objc_msgSend_count(v5, v6, v7, v8, v9) == 1 || (unint64_t)objc_msgSend_count(v5, v10, v11, v12, v13) >= 2)
  {
    objc_msgSend_lastObject(v5, v10, v11, v12, v13);
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    v19 = objc_msgSend_copy(v14, v15, v16, v17, v18);
  }
  else
  {
    v14 = 0;
    v19 = objc_msgSend_copy(0, v10, v11, v12, v13);
  }
  v20 = v19;

  return v20;
}

uint64_t sub_227D86ABC(uint64_t a1, int a2, Class aClass)
{
  void *v4;
  void *v5;
  const char *v6;
  uint64_t v7;
  uint64_t v8;

  v4 = (void *)MEMORY[0x24BDBB658];
  NSStringFromClass(aClass);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_insertNewObjectForEntityForName_inManagedObjectContext_(v4, v6, (uint64_t)v5, a1, v7);
  v8 = objc_claimAutoreleasedReturnValue();

  return v8;
}

id sub_227D86B18(void *a1, uint64_t a2, void *a3, void *a4)
{
  id v6;
  id v7;
  void *v8;
  id v9;
  const char *v10;
  uint64_t v11;
  void *v12;
  const char *v13;
  uint64_t v14;
  uint64_t v15;
  const char *v16;
  uint64_t v17;
  uint64_t v18;
  const char *v19;
  uint64_t v20;
  uint64_t v21;
  const char *v22;
  uint64_t v23;
  uint64_t v24;
  const char *v25;
  uint64_t v26;
  void *v27;
  id v28;
  const char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  id v35;

  v6 = a3;
  v7 = a4;
  v8 = (void *)MEMORY[0x22E2AA24C]();
  v9 = objc_alloc_init(MEMORY[0x24BDBB678]);
  objc_msgSend_entityForName_inManagedObjectContext_(MEMORY[0x24BDBB658], v10, (uint64_t)v7, (uint64_t)a1, v11);
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_setEntity_(v9, v13, (uint64_t)v12, v14, v15);

  objc_msgSend_setPredicate_(v9, v16, (uint64_t)v6, v17, v18);
  objc_msgSend_setResultType_(v9, v19, 1, v20, v21);
  objc_msgSend_setIncludesPropertyValues_(v9, v22, 0, v23, v24);
  v35 = 0;
  objc_msgSend_executeFetchRequest_error_(a1, v25, (uint64_t)v9, (uint64_t)&v35, v26);
  v27 = (void *)objc_claimAutoreleasedReturnValue();
  v28 = v35;
  v33 = v28;
  if (v28)
    objc_msgSend_logRecursively(v28, v29, v30, v31, v32);

  objc_autoreleasePoolPop(v8);
  return v27;
}

id sub_227D86C18(void *a1, uint64_t a2, void *a3, void *a4)
{
  id v6;
  id v7;
  void *v8;
  id v9;
  const char *v10;
  uint64_t v11;
  void *v12;
  const char *v13;
  uint64_t v14;
  uint64_t v15;
  const char *v16;
  uint64_t v17;
  uint64_t v18;
  const char *v19;
  uint64_t v20;
  uint64_t v21;
  const char *v22;
  uint64_t v23;
  void *v24;
  id v25;
  const char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  id v32;

  v6 = a3;
  v7 = a4;
  v8 = (void *)MEMORY[0x22E2AA24C]();
  v9 = objc_alloc_init(MEMORY[0x24BDBB678]);
  objc_msgSend_entityForName_inManagedObjectContext_(MEMORY[0x24BDBB658], v10, (uint64_t)v7, (uint64_t)a1, v11);
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_setEntity_(v9, v13, (uint64_t)v12, v14, v15);

  objc_msgSend_setPredicate_(v9, v16, (uint64_t)v6, v17, v18);
  objc_msgSend_setIncludesPropertyValues_(v9, v19, 1, v20, v21);
  v32 = 0;
  objc_msgSend_executeFetchRequest_error_(a1, v22, (uint64_t)v9, (uint64_t)&v32, v23);
  v24 = (void *)objc_claimAutoreleasedReturnValue();
  v25 = v32;
  v30 = v25;
  if (v25)
    objc_msgSend_logRecursively(v25, v26, v27, v28, v29);

  objc_autoreleasePoolPop(v8);
  return v24;
}

id sub_227D86D0C(void *a1, uint64_t a2, void *a3, void *a4, void *a5, unint64_t a6, void *a7)
{
  id v12;
  id v13;
  id v14;
  id v15;
  void *v16;
  id v17;
  const char *v18;
  uint64_t v19;
  void *v20;
  const char *v21;
  uint64_t v22;
  uint64_t v23;
  const char *v24;
  uint64_t v25;
  uint64_t v26;
  const char *v27;
  uint64_t v28;
  uint64_t v29;
  const char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  const char *v34;
  uint64_t v35;
  uint64_t v36;
  const char *v37;
  uint64_t v38;
  void *v39;
  id v40;
  const char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  id v47;

  v12 = a3;
  v13 = a4;
  v14 = a5;
  v15 = a7;
  v16 = (void *)MEMORY[0x22E2AA24C]();
  v17 = objc_alloc_init(MEMORY[0x24BDBB678]);
  objc_msgSend_entityForName_inManagedObjectContext_(MEMORY[0x24BDBB658], v18, (uint64_t)v12, (uint64_t)a1, v19);
  v20 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_setEntity_(v17, v21, (uint64_t)v20, v22, v23);

  objc_msgSend_setPredicate_(v17, v24, (uint64_t)v13, v25, v26);
  objc_msgSend_setSortDescriptors_(v17, v27, (uint64_t)v14, v28, v29);
  if (objc_msgSend_count(v15, v30, v31, v32, v33))
    objc_msgSend_setRelationshipKeyPathsForPrefetching_(v17, v34, (uint64_t)v15, v35, v36);
  if (a6)
  {
    if (a6 <= 0xA)
      objc_msgSend_setReturnsObjectsAsFaults_(v17, v34, 0, v35, v36);
    objc_msgSend_setFetchLimit_(v17, v34, a6, v35, v36);
  }
  else
  {
    objc_msgSend_setFetchBatchSize_(v17, v34, 100, v35, v36);
  }
  v47 = 0;
  objc_msgSend_executeFetchRequest_error_(a1, v37, (uint64_t)v17, (uint64_t)&v47, v38);
  v39 = (void *)objc_claimAutoreleasedReturnValue();
  v40 = v47;
  v45 = v40;
  if (v40)
    objc_msgSend_logRecursively(v40, v41, v42, v43, v44);

  objc_autoreleasePoolPop(v16);
  return v39;
}

id sub_227D86E80(void *a1, uint64_t a2, void *a3, void *a4, void *a5, uint64_t a6, uint64_t a7, void *a8)
{
  id v14;
  id v15;
  const char *v16;
  id v17;
  objc_class *v18;
  id v19;
  id v20;
  const char *v21;
  uint64_t v22;
  void *v23;
  id v24;
  const char *v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  void *v29;

  v14 = a3;
  v15 = a4;
  v17 = a8;
  if (a5)
  {
    v18 = (objc_class *)MEMORY[0x24BDD17C0];
    v19 = a5;
    v20 = [v18 alloc];
    v23 = (void *)objc_msgSend_initWithKey_ascending_(v20, v21, (uint64_t)v19, a6, v22);

    v24 = objc_alloc(MEMORY[0x24BDBCE30]);
    v28 = (void *)objc_msgSend_initWithObjects_(v24, v25, (uint64_t)v23, v26, v27, 0);

  }
  else
  {
    v28 = 0;
  }
  objc_msgSend_entity_withPredicate_sortDescriptors_fetchLimit_prefetchRelationships_(a1, v16, (uint64_t)v14, (uint64_t)v15, (uint64_t)v28, a7, v17);
  v29 = (void *)objc_claimAutoreleasedReturnValue();

  return v29;
}

uint64_t sub_227D86F78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return MEMORY[0x24BEDD108](a1, sel_entity_withPredicate_sortBy_ascending_fetchLimit_prefetchRelationships_, a3, a4, a5);
}

uint64_t sub_227D86F80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x24BEDD108](a1, sel_entity_withPredicate_sortBy_ascending_fetchLimit_, a3, a4, 0);
}

void sub_227D86F98(void *a1, uint64_t a2, void *a3)
{
  void (**v4)(_QWORD);
  const char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  const char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v4 = a3;
  objc_msgSend_im_pushSafeAccessState(a1, v5, v6, v7, v8);
  v4[2](v4);
  objc_msgSend_im_popSafeAccessState(a1, v9, v10, v11, v12);

}

void sub_227D87030(_Unwind_Exception *a1)
{
  objc_end_catch();
  _Unwind_Resume(a1);
}

void sub_227D87048(uint64_t a1, int a2)
{
  if (a2)
    objc_terminate();
  JUMPOUT(0x227D8712CLL);
}

void sub_227D87050(_Unwind_Exception *exc_buf, int a2, int a3, int a4, int a5, int a6, int a7, int a8, __int128 a9)
{
  id v9;
  const char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  const char *v15;
  uint64_t v16;
  uint64_t v17;
  int isEqualToString;
  NSObject *v19;

  if (a2)
  {
    if (a2 == 2)
    {
      v9 = objc_begin_catch(exc_buf);
      objc_msgSend_name(v9, v10, v11, v12, v13);
      v14 = (void *)objc_claimAutoreleasedReturnValue();
      isEqualToString = objc_msgSend_isEqualToString_(v14, v15, *MEMORY[0x24BDD1108], v16, v17);

      if (isEqualToString)
      {
        BDSCloudKitLog();
        v19 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v19, OS_LOG_TYPE_INFO))
        {
          LODWORD(a9) = 138412290;
          *(_QWORD *)((char *)&a9 + 4) = v9;
          _os_log_impl(&dword_227D4F000, v19, OS_LOG_TYPE_INFO, "Handled Exception {%@}", (uint8_t *)&a9, 0xCu);
        }

        objc_end_catch();
        JUMPOUT(0x227D86FE0);
      }
      objc_exception_throw(objc_retainAutorelease(v9));
    }
    objc_begin_catch(exc_buf);
    JUMPOUT(0x227D86FE4);
  }
  _Unwind_Resume(exc_buf);
}

void sub_227D87108(_Unwind_Exception *a1, int a2)
{
  if (a2)
  {
    objc_end_catch();
    JUMPOUT(0x227D87118);
  }
  _Unwind_Resume(a1);
}

void sub_227D87134(void *a1, uint64_t a2, void *a3, void *a4, void *a5)
{
  id v8;
  id v9;
  id v10;
  void *v11;
  const char *v12;
  uint64_t v13;
  void *v14;
  id v15;
  const char *v16;
  uint64_t v17;
  uint64_t v18;
  const char *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD v22[4];
  id v23;
  void *v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  int v29;

  v8 = a3;
  v9 = a4;
  v10 = a5;
  v11 = (void *)MEMORY[0x22E2AA24C]();
  objc_msgSend_unbatchedObjectsWithPredicate_forEntity_(a1, v12, (uint64_t)v9, (uint64_t)v8, v13);
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  v26 = 0;
  v27 = &v26;
  v28 = 0x2020000000;
  v29 = 0;
  v22[0] = MEMORY[0x24BDAC760];
  v22[1] = 3221225472;
  v22[2] = sub_227D87268;
  v22[3] = &unk_24F089E50;
  v15 = v14;
  v23 = v15;
  v24 = a1;
  v25 = &v26;
  objc_msgSend_im_performSafeAccess_(a1, v16, (uint64_t)v22, v17, v18);
  if (*((_DWORD *)v27 + 6))
    objc_msgSend_save_(a1, v19, 0, v20, v21);

  _Block_object_dispose(&v26, 8);
  objc_autoreleasePoolPop(v11);

}

void sub_227D87250(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_227D87268(uint64_t a1)
{
  id v2;
  const char *v3;
  uint64_t v4;
  const char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  _BYTE v16[128];
  uint64_t v17;

  v17 = *MEMORY[0x24BDAC8D0];
  v12 = 0u;
  v13 = 0u;
  v14 = 0u;
  v15 = 0u;
  v2 = *(id *)(a1 + 32);
  v4 = objc_msgSend_countByEnumeratingWithState_objects_count_(v2, v3, (uint64_t)&v12, (uint64_t)v16, 16);
  if (v4)
  {
    v8 = v4;
    v9 = *(_QWORD *)v13;
    do
    {
      v10 = 0;
      do
      {
        if (*(_QWORD *)v13 != v9)
          objc_enumerationMutation(v2);
        objc_msgSend_deleteObject_(*(void **)(a1 + 40), v5, *(_QWORD *)(*((_QWORD *)&v12 + 1) + 8 * v10), v6, v7, (_QWORD)v12);
        ++*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24);
        v11 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
        if (*(_DWORD *)(v11 + 24) == 100)
        {
          *(_DWORD *)(v11 + 24) = 0;
          objc_msgSend_save_(*(void **)(a1 + 40), v5, 0, v6, v7);
        }
        ++v10;
      }
      while (v8 != v10);
      v8 = objc_msgSend_countByEnumeratingWithState_objects_count_(v2, v5, (uint64_t)&v12, (uint64_t)v16, 16);
    }
    while (v8);
  }

}

uint64_t sub_227D87390(void *a1, uint64_t a2, void *a3)
{
  void *v4;
  id v5;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  const char *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  const char *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;
  const char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  const char *v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  const char *v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  const char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v4 = (void *)MEMORY[0x24BDBCF20];
  v5 = a3;
  objc_msgSend_persistentStores(a1, v6, v7, v8, v9);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_valueForKey_(v10, v11, (uint64_t)CFSTR("URL"), v12, v13);
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_setWithArray_(v4, v15, (uint64_t)v14, v16, v17);
  v18 = (void *)objc_claimAutoreleasedReturnValue();

  v19 = (void *)MEMORY[0x24BDBCF20];
  objc_msgSend_persistentStores(v5, v20, v21, v22, v23);
  v24 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend_valueForKey_(v24, v25, (uint64_t)CFSTR("URL"), v26, v27);
  v28 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_setWithArray_(v19, v29, (uint64_t)v28, v30, v31);
  v32 = (void *)objc_claimAutoreleasedReturnValue();

  v36 = objc_msgSend_intersectsSet_(v18, v33, (uint64_t)v32, v34, v35);
  return v36;
}

void sub_227D87688(void **a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v6;
  id v7;
  void *v8;
  const char *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v12[4];
  id v13;
  void *v14;
  id v15;
  id v16;

  objc_msgSend_zoneDataManager(a1[4], a2, a3, a4, a5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v12[0] = MEMORY[0x24BDAC760];
  v12[1] = 3221225472;
  v12[2] = sub_227D87738;
  v12[3] = &unk_24F089EA0;
  v7 = a1[5];
  v8 = a1[4];
  v13 = v7;
  v14 = v8;
  v15 = a1[6];
  v16 = a1[7];
  objc_msgSend_dissociateCloudDataFromSyncWithCompletion_(v6, v9, (uint64_t)v12, v10, v11);

}

void sub_227D87738(uint64_t a1, int a2, void *a3)
{
  id v5;
  NSObject *v6;
  uint64_t v7;
  const char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  const char *v14;
  uint64_t v15;
  void *v16;
  NSObject *v17;
  void *v18;
  _QWORD v19[4];
  id v20;
  id v21;
  uint8_t buf[4];
  uint64_t v23;
  __int16 v24;
  int v25;
  __int16 v26;
  id v27;
  uint64_t v28;

  v28 = *MEMORY[0x24BDAC8D0];
  v5 = a3;
  BDSCloudKitSyncLog();
  v6 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    v7 = *(_QWORD *)(a1 + 32);
    *(_DWORD *)buf = 138412802;
    v23 = v7;
    v24 = 1024;
    v25 = a2;
    v26 = 2112;
    v27 = v5;
    _os_log_impl(&dword_227D4F000, v6, OS_LOG_TYPE_DEFAULT, "[BDSSaltVersionIdentifierManager] #saltVersionIdentifierChanged - %@ - 4. dissociateCloudDataFromSyncWithCompletion %{BOOL}d error%@", buf, 0x1Cu);
  }

  if (a2)
  {
    objc_msgSend_tokenController(*(void **)(a1 + 40), v8, v9, v10, v11);
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    v13 = *(_QWORD *)(a1 + 48);
    v19[0] = MEMORY[0x24BDAC760];
    v19[1] = 3221225472;
    v19[2] = sub_227D878E0;
    v19[3] = &unk_24F089E78;
    v20 = *(id *)(a1 + 32);
    v21 = *(id *)(a1 + 56);
    objc_msgSend_updateSaltVersionIdentifier_completion_(v12, v14, v13, (uint64_t)v19, v15);

    v16 = v20;
  }
  else
  {
    BDSCloudKitSyncLog();
    v17 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR))
      sub_227E5A57C(a1, (uint64_t)v5, v17);

    v18 = _Block_copy(*(const void **)(a1 + 56));
    v16 = v18;
    if (v18)
      (*((void (**)(void *, _QWORD))v18 + 2))(v18, 0);
  }

}

void sub_227D878E0(uint64_t a1, uint64_t a2, void *a3)
{
  id v5;
  NSObject *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  int v10;
  uint64_t v11;
  __int16 v12;
  int v13;
  __int16 v14;
  id v15;
  uint64_t v16;

  v16 = *MEMORY[0x24BDAC8D0];
  v5 = a3;
  BDSCloudKitSyncLog();
  v6 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    v7 = *(_QWORD *)(a1 + 32);
    v10 = 138412802;
    v11 = v7;
    v12 = 1024;
    v13 = a2;
    v14 = 2112;
    v15 = v5;
    _os_log_impl(&dword_227D4F000, v6, OS_LOG_TYPE_DEFAULT, "[BDSSaltVersionIdentifierManager] #saltVersionIdentifierChanged - %@ - 5a. updateSaltVersionIdentifier  %{BOOL}d error%@", (uint8_t *)&v10, 0x1Cu);
  }

  v8 = _Block_copy(*(const void **)(a1 + 40));
  v9 = v8;
  if (v8)
    (*((void (**)(void *, uint64_t))v8 + 2))(v8, a2);

}

void sub_227D879D8(uint64_t a1, int a2, void *a3)
{
  id v5;
  NSObject *v6;
  uint64_t v7;
  const char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  const char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  id v17;
  uint64_t v18;
  void *v19;
  const char *v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  _BOOL4 v24;
  uint64_t v25;
  uint64_t v26;
  NSObject *v27;
  _BOOL4 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  void *v33;
  _QWORD v34[4];
  id v35;
  uint64_t v36;
  id v37;
  id v38;
  id v39;
  uint8_t buf[4];
  uint64_t v41;
  __int16 v42;
  int v43;
  __int16 v44;
  id v45;
  uint64_t v46;

  v46 = *MEMORY[0x24BDAC8D0];
  v5 = a3;
  BDSCloudKitSyncLog();
  v6 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    v7 = *(_QWORD *)(a1 + 32);
    *(_DWORD *)buf = 138412802;
    v41 = v7;
    v42 = 1024;
    v43 = a2;
    v44 = 2112;
    v45 = v5;
    _os_log_impl(&dword_227D4F000, v6, OS_LOG_TYPE_DEFAULT, "[BDSSaltVersionIdentifierManager] #saltVersionIdentifierChanged - %@ - 2. needsUpdate: %{BOOL}d error%@", buf, 0x1Cu);
  }

  if (v5)
  {
    if (objc_msgSend_code(v5, v8, v9, v10, v11) == 1003)
    {
      objc_msgSend_zoneDataManager(*(void **)(a1 + 40), v12, v13, v14, v15);
      v16 = (void *)objc_claimAutoreleasedReturnValue();
      v34[0] = MEMORY[0x24BDAC760];
      v34[1] = 3221225472;
      v34[2] = sub_227D87CE0;
      v34[3] = &unk_24F089EF0;
      v35 = *(id *)(a1 + 32);
      v17 = *(id *)(a1 + 56);
      v18 = *(_QWORD *)(a1 + 40);
      v19 = *(void **)(a1 + 48);
      v38 = v17;
      v36 = v18;
      v37 = v19;
      v39 = *(id *)(a1 + 64);
      objc_msgSend_hasSaltChangedWithCompletion_(v16, v20, (uint64_t)v34, v21, v22);

      goto LABEL_24;
    }
    v26 = objc_msgSend_code(v5, v12, v13, v14, v15);
    BDSCloudKitSyncLog();
    v27 = objc_claimAutoreleasedReturnValue();
    v28 = os_log_type_enabled(v27, OS_LOG_TYPE_DEFAULT);
    if (v26 == 1006)
    {
      if (v28)
      {
        v29 = *(_QWORD *)(a1 + 32);
        *(_DWORD *)buf = 138412290;
        v41 = v29;
        _os_log_impl(&dword_227D4F000, v27, OS_LOG_TYPE_DEFAULT, "[BDSSaltVersionIdentifierManager] #saltVersionIdentifierChanged - %@ - 6b - saltIdentifierError ", buf, 0xCu);
      }

LABEL_14:
      (*(void (**)(void))(*(_QWORD *)(a1 + 56) + 16))();
      goto LABEL_24;
    }
    if (v28)
    {
      v31 = *(_QWORD *)(a1 + 32);
      *(_DWORD *)buf = 138412290;
      v41 = v31;
      _os_log_impl(&dword_227D4F000, v27, OS_LOG_TYPE_DEFAULT, "[BDSSaltVersionIdentifierManager] #saltVersionIdentifierChanged - %@ - do nothing", buf, 0xCu);
    }

  }
  else
  {
    BDSCloudKitSyncLog();
    v23 = objc_claimAutoreleasedReturnValue();
    v24 = os_log_type_enabled(v23, OS_LOG_TYPE_DEFAULT);
    if (a2)
    {
      if (v24)
      {
        v25 = *(_QWORD *)(a1 + 32);
        *(_DWORD *)buf = 138412290;
        v41 = v25;
        _os_log_impl(&dword_227D4F000, v23, OS_LOG_TYPE_DEFAULT, "[BDSSaltVersionIdentifierManager] #saltVersionIdentifierChanged - %@ - 3a.Need update. Calling dissociate", buf, 0xCu);
      }

      goto LABEL_14;
    }
    if (v24)
    {
      v30 = *(_QWORD *)(a1 + 32);
      *(_DWORD *)buf = 138412290;
      v41 = v30;
      _os_log_impl(&dword_227D4F000, v23, OS_LOG_TYPE_DEFAULT, "[BDSSaltVersionIdentifierManager] #saltVersionIdentifierChanged - %@ - 3b. No update needed. Calling completion.", buf, 0xCu);
    }

  }
  v32 = _Block_copy(*(const void **)(a1 + 64));
  v33 = v32;
  if (v32)
    (*((void (**)(void *, uint64_t))v32 + 2))(v32, 1);

LABEL_24:
}

void sub_227D87CE0(uint64_t a1, int a2, void *a3)
{
  id v5;
  NSObject *v6;
  uint64_t v7;
  const char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  const char *v14;
  uint64_t v15;
  NSObject *v16;
  uint64_t v17;
  void *v18;
  void *v19;
  _QWORD v20[4];
  id v21;
  id v22;
  uint8_t buf[4];
  uint64_t v24;
  __int16 v25;
  int v26;
  __int16 v27;
  id v28;
  uint64_t v29;

  v29 = *MEMORY[0x24BDAC8D0];
  v5 = a3;
  BDSCloudKitLog();
  v6 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
  {
    v7 = *(_QWORD *)(a1 + 32);
    *(_DWORD *)buf = 138412802;
    v24 = v7;
    v25 = 1024;
    v26 = a2;
    v27 = 2112;
    v28 = v5;
    _os_log_impl(&dword_227D4F000, v6, OS_LOG_TYPE_ERROR, "[BDSSaltVersionIdentifierManager] hasSaltChangedWithCompletion. %@ %{BOOL}d, ERROR:%@", buf, 0x1Cu);
  }

  if (v5 || !a2)
  {
    if (v5 || (a2 & 1) != 0)
    {
      BDSCloudKitSyncLog();
      v16 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
      {
        v17 = *(_QWORD *)(a1 + 32);
        *(_DWORD *)buf = 138412802;
        v24 = v17;
        v25 = 1024;
        v26 = a2;
        v27 = 2112;
        v28 = v5;
        _os_log_impl(&dword_227D4F000, v16, OS_LOG_TYPE_DEFAULT, "[BDSSaltVersionIdentifierManager] #hasSaltChangedWithCompletion - %@ - skip update %{BOOL}d error%@", buf, 0x1Cu);
      }

      v18 = _Block_copy(*(const void **)(a1 + 64));
      v19 = v18;
      if (v18)
        (*((void (**)(void *, uint64_t))v18 + 2))(v18, 1);

    }
    else
    {
      objc_msgSend_tokenController(*(void **)(a1 + 40), v8, v9, v10, v11);
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      v13 = *(_QWORD *)(a1 + 48);
      v20[0] = MEMORY[0x24BDAC760];
      v20[1] = 3221225472;
      v20[2] = sub_227D87EE4;
      v20[3] = &unk_24F089E78;
      v21 = *(id *)(a1 + 32);
      v22 = *(id *)(a1 + 64);
      objc_msgSend_updateSaltVersionIdentifier_completion_(v12, v14, v13, (uint64_t)v20, v15);

    }
  }
  else
  {
    (*(void (**)(void))(*(_QWORD *)(a1 + 56) + 16))();
  }

}

void sub_227D87EE4(uint64_t a1, uint64_t a2, void *a3)
{
  id v5;
  NSObject *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  int v10;
  uint64_t v11;
  __int16 v12;
  int v13;
  __int16 v14;
  id v15;
  uint64_t v16;

  v16 = *MEMORY[0x24BDAC8D0];
  v5 = a3;
  BDSCloudKitSyncLog();
  v6 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    v7 = *(_QWORD *)(a1 + 32);
    v10 = 138412802;
    v11 = v7;
    v12 = 1024;
    v13 = a2;
    v14 = 2112;
    v15 = v5;
    _os_log_impl(&dword_227D4F000, v6, OS_LOG_TYPE_DEFAULT, "[BDSSaltVersionIdentifierManager] #hasSaltChangedWithCompletion - %@ - only update saltversionidentifier %{BOOL}d error%@", (uint8_t *)&v10, 0x1Cu);
  }

  v8 = _Block_copy(*(const void **)(a1 + 40));
  v9 = v8;
  if (v8)
    (*((void (**)(void *, uint64_t))v8 + 2))(v8, a2);

}

uint64_t sub_227D88C6C(void *a1, uint64_t a2, void *a3, void *a4)
{
  id v6;
  id v7;
  const char *v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  const char *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  void *v17;
  const char *v18;
  uint64_t v19;

  v6 = a3;
  v7 = a4;
  objc_msgSend_valueForKey_(a1, v8, (uint64_t)v7, v9, v10);
  v11 = (id)objc_claimAutoreleasedReturnValue();
  v15 = v11;
  if (v11 == v6 || (objc_msgSend_isEqual_(v11, v12, (uint64_t)v6, v13, v14) & 1) != 0)
  {
    v16 = 0;
  }
  else
  {
    BUDynamicCast();
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_setValue_forKey_(a1, v18, (uint64_t)v17, (uint64_t)v7, v19);

    v16 = 1;
  }

  return v16;
}

BOOL sub_227D88D20(void *a1, uint64_t a2, void *a3, void *a4)
{
  id v6;
  id v7;
  const char *v8;
  uint64_t v9;
  uint64_t v10;
  const char *v11;
  uint64_t v12;
  id v13;

  v6 = a3;
  v7 = a4;
  objc_msgSend_valueForKey_(a1, v8, (uint64_t)v7, v9, v10);
  v13 = (id)objc_claimAutoreleasedReturnValue();
  if (v13 != v6)
    objc_msgSend_setValue_forKey_(a1, v11, (uint64_t)v6, (uint64_t)v7, v12);

  return v13 != v6;
}

uint64_t sub_227D88D9C(void *a1, uint64_t a2, void *a3, void *a4)
{
  id v6;
  id v7;
  uint64_t v8;
  const char *v9;
  uint64_t v10;

  v6 = a4;
  v7 = a3;
  v8 = objc_opt_class();
  v10 = objc_msgSend_setDifferentValue_forKey_klass_(a1, v9, (uint64_t)v7, (uint64_t)v6, v8);

  return v10;
}

uint64_t sub_227D88E08(void *a1, uint64_t a2, void *a3, void *a4)
{
  id v6;
  id v7;
  uint64_t v8;
  const char *v9;
  uint64_t v10;

  v6 = a4;
  v7 = a3;
  v8 = objc_opt_class();
  v10 = objc_msgSend_setDifferentValue_forKey_klass_(a1, v9, (uint64_t)v7, (uint64_t)v6, v8);

  return v10;
}

uint64_t sub_227D88E74(void *a1, uint64_t a2, void *a3, void *a4)
{
  id v6;
  id v7;
  uint64_t v8;
  const char *v9;
  uint64_t v10;

  v6 = a4;
  v7 = a3;
  v8 = objc_opt_class();
  v10 = objc_msgSend_setDifferentValue_forKey_klass_(a1, v9, (uint64_t)v7, (uint64_t)v6, v8);

  return v10;
}

id sub_227D88EE0(void *a1, uint64_t a2, void *a3)
{
  id v4;
  const char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  const char *v11;
  uint64_t v12;
  const char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t i;
  uint64_t v19;
  const char *v20;
  uint64_t v21;
  void *v22;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  _BYTE v28[128];
  uint64_t v29;

  v29 = *MEMORY[0x24BDAC8D0];
  v4 = a3;
  objc_msgSend_dictionary(MEMORY[0x24BDBCED8], v5, v6, v7, v8);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v24 = 0u;
  v25 = 0u;
  v26 = 0u;
  v27 = 0u;
  v10 = v4;
  v12 = objc_msgSend_countByEnumeratingWithState_objects_count_(v10, v11, (uint64_t)&v24, (uint64_t)v28, 16);
  if (v12)
  {
    v16 = v12;
    v17 = *(_QWORD *)v25;
    do
    {
      for (i = 0; i != v16; ++i)
      {
        if (*(_QWORD *)v25 != v17)
          objc_enumerationMutation(v10);
        v19 = *(_QWORD *)(*((_QWORD *)&v24 + 1) + 8 * i);
        objc_msgSend_valueForKey_(a1, v13, v19, v14, v15, (_QWORD)v24);
        v22 = (void *)objc_claimAutoreleasedReturnValue();
        if (v22)
          objc_msgSend_setObject_forKey_(v9, v20, (uint64_t)v22, v19, v21);

      }
      v16 = objc_msgSend_countByEnumeratingWithState_objects_count_(v10, v13, (uint64_t)&v24, (uint64_t)v28, 16);
    }
    while (v16);
  }

  return v9;
}

void sub_227D89078()
{
  BDSBookWidgetReadingHistoryDataFile *v0;
  void *v1;

  v0 = objc_alloc_init(BDSBookWidgetReadingHistoryDataFile);
  v1 = (void *)qword_253F3C678;
  qword_253F3C678 = (uint64_t)v0;

}

void sub_227D894CC(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v5;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  const char *v11;
  uint64_t v12;
  void *v13;
  const char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  const char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  const char *v24;
  char v25;
  id v26;
  NSObject *v27;
  id v28;

  objc_msgSend_books(MEMORY[0x24BE0FBF0], a2, a3, a4, a5);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_containerURL(v5, v6, v7, v8, v9);
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend_URLByAppendingPathComponent_isDirectory_(v10, v11, (uint64_t)CFSTR("Library/Application Support/bookdatastored"), 1, v12);
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_URLByAppendingPathComponent_(v13, v14, (uint64_t)CFSTR("currentWidgetReadingHistoryData.plist"), v15, v16);
  v17 = objc_claimAutoreleasedReturnValue();
  v18 = (void *)qword_25592A450;
  qword_25592A450 = v17;

  objc_msgSend_defaultManager(MEMORY[0x24BDD1580], v19, v20, v21, v22);
  v23 = (void *)objc_claimAutoreleasedReturnValue();
  v28 = 0;
  v25 = objc_msgSend_createDirectoryAtURL_withIntermediateDirectories_attributes_error_(v23, v24, (uint64_t)v13, 1, 0, &v28);
  v26 = v28;

  if ((v25 & 1) == 0)
  {
    BDSWidgetLog();
    v27 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v27, OS_LOG_TYPE_ERROR))
      sub_227E5A7D0();

  }
}

void sub_227D896D0()
{
  BDSJaliscoDAAPClient *v0;
  void *v1;

  v0 = objc_alloc_init(BDSJaliscoDAAPClient);
  v1 = (void *)qword_253F3B160;
  qword_253F3B160 = (uint64_t)v0;

}

void sub_227D899B4(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v7;
  id v8;

  objc_msgSend_setFamilyUpdateInProgress_(*(void **)(a1 + 32), a2, 0, a4, a5);
  v7 = _Block_copy(*(const void **)(a1 + 40));
  if (v7)
  {
    v8 = v7;
    (*((void (**)(void *, const char *))v7 + 2))(v7, a2);
    v7 = v8;
  }

}

void sub_227D89AD0(uint64_t a1, uint64_t a2, void *a3)
{
  const char *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;

  v10 = a3;
  objc_msgSend_setFamilyUpdateInProgress_(*(void **)(a1 + 32), v5, 0, v6, v7);
  v8 = _Block_copy(*(const void **)(a1 + 40));
  v9 = v8;
  if (v8)
    (*((void (**)(void *, uint64_t, id))v8 + 2))(v8, a2, v10);

}

id BDSCloudKitDevelopmentLog()
{
  if (qword_25592A468 != -1)
    dispatch_once(&qword_25592A468, &unk_24F08A030);
  return (id)qword_25592A460;
}

void sub_227D8AF18()
{
  os_log_t v0;
  void *v1;

  v0 = os_log_create("com.apple.iBooks.BookDataStore", "BookDataStore.CloudKit.Development");
  v1 = (void *)qword_25592A460;
  qword_25592A460 = (uint64_t)v0;

}

id BDSPriceTrackingLog()
{
  if (qword_25592A478 != -1)
    dispatch_once(&qword_25592A478, &unk_24F08A090);
  return (id)qword_25592A470;
}

void sub_227D8AF88()
{
  os_log_t v0;
  void *v1;

  v0 = os_log_create("com.apple.iBooks.BookDataStore", "BookDataStore.PriceTracking");
  v1 = (void *)qword_25592A470;
  qword_25592A470 = (uint64_t)v0;

}

id BDSServiceCenterLog()
{
  if (qword_25592A488 != -1)
    dispatch_once(&qword_25592A488, &unk_24F08A0B0);
  return (id)qword_25592A480;
}

void sub_227D8AFF8()
{
  os_log_t v0;
  void *v1;

  v0 = os_log_create("com.apple.iBooks.BookDataStore", "BookDataStore.ServiceCenter");
  v1 = (void *)qword_25592A480;
  qword_25592A480 = (uint64_t)v0;

}

id BDSArtworkImporterLog()
{
  if (qword_25592A498 != -1)
    dispatch_once(&qword_25592A498, &unk_24F08A110);
  return (id)qword_25592A490;
}

void sub_227D8B068()
{
  os_log_t v0;
  void *v1;

  v0 = os_log_create("com.apple.iBooks.BookDataStore", "BookDataStore.ArtworkImporter");
  v1 = (void *)qword_25592A490;
  qword_25592A490 = (uint64_t)v0;

}

id BDSCtlLog()
{
  if (qword_25592A4A8 != -1)
    dispatch_once(&qword_25592A4A8, &unk_24F08A130);
  return (id)qword_25592A4A0;
}

void sub_227D8B0D8()
{
  os_log_t v0;
  void *v1;

  v0 = os_log_create("com.apple.iBooks.BookDataStore", "BookDataStore.BDSCtl");
  v1 = (void *)qword_25592A4A0;
  qword_25592A4A0 = (uint64_t)v0;

}

id BDSWidgetLog()
{
  if (qword_25592A4B8 != -1)
    dispatch_once(&qword_25592A4B8, &unk_24F08A150);
  return (id)qword_25592A4B0;
}

void sub_227D8B148()
{
  os_log_t v0;
  void *v1;

  v0 = os_log_create("com.apple.iBooks.BookDataStore", "BookDataStore.Widget");
  v1 = (void *)qword_25592A4B0;
  qword_25592A4B0 = (uint64_t)v0;

}

id BDSUbiquityLog()
{
  if (qword_25592A4C8 != -1)
    dispatch_once(&qword_25592A4C8, &unk_24F08A170);
  return (id)qword_25592A4C0;
}

void sub_227D8B1B8()
{
  os_log_t v0;
  void *v1;

  v0 = os_log_create("com.apple.iBooks.BookDataStore", "BookDataStore.Ubiquity");
  v1 = (void *)qword_25592A4C0;
  qword_25592A4C0 = (uint64_t)v0;

}

id BDSMediaLibraryLog()
{
  if (qword_25592A4D8 != -1)
    dispatch_once(&qword_25592A4D8, &unk_24F08A190);
  return (id)qword_25592A4D0;
}

void sub_227D8B228()
{
  os_log_t v0;
  void *v1;

  v0 = os_log_create("com.apple.iBooks.BookDataStore", "BookDataStore.MediaLibrary");
  v1 = (void *)qword_25592A4D0;
  qword_25592A4D0 = (uint64_t)v0;

}

uint64_t sub_227D8B594(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return MEMORY[0x24BEDD108](BDSSyncUserDefaults, sel__stateForLog, a3, a4, a5);
}

void *sub_227D8BB84(void *a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a3)
    return (void *)objc_msgSend_addObject_(a1, a2, a3, a4, a5);
  return a1;
}

void sub_227D8C960(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  void *v6;
  void *v7;
  id v8;

  v8 = a4;
  v6 = _Block_copy(*(const void **)(a1 + 32));
  v7 = v6;
  if (v6)
    (*((void (**)(void *, uint64_t, id))v6 + 2))(v6, a2, v8);

}

void sub_227D8CA9C(uint64_t a1, uint64_t a2, void *a3)
{
  void *v5;
  void *v6;
  id v7;

  v7 = a3;
  v5 = _Block_copy(*(const void **)(a1 + 32));
  v6 = v5;
  if (v5)
    (*((void (**)(void *, uint64_t, id))v5 + 2))(v5, a2, v7);

}

BOOL BCAnnotationRangeReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  BOOL v23;
  int *v24;
  char v25;
  unsigned int v26;
  uint64_t v27;
  unint64_t v28;
  char v29;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    while (1)
    {
      if (*(_BYTE *)(a2 + *v5))
        return *(_BYTE *)(a2 + *v5) == 0;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        return *(_BYTE *)(a2 + *v5) == 0;
      if ((v10 >> 3) == 1)
        break;
      if ((v10 >> 3) == 2)
      {
        v17 = 0;
        v18 = 0;
        v19 = 0;
        while (1)
        {
          v20 = *v3;
          v21 = *(_QWORD *)(a2 + v20);
          if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
          {
            v24 = &OBJC_IVAR___BCAnnotationRange__length;
            goto LABEL_38;
          }
          v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
          *(_QWORD *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0)
            break;
          v17 += 7;
          v23 = v18++ > 8;
          if (v23)
          {
            v19 = 0;
            v24 = &OBJC_IVAR___BCAnnotationRange__length;
            goto LABEL_41;
          }
        }
        v24 = &OBJC_IVAR___BCAnnotationRange__length;
LABEL_39:
        if (*(_BYTE *)(a2 + *v5))
          v19 = 0;
LABEL_41:
        *(_QWORD *)(a1 + *v24) = v19;
        goto LABEL_42;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        return 0;
LABEL_42:
      if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
        return *(_BYTE *)(a2 + *v5) == 0;
    }
    v25 = 0;
    v26 = 0;
    v19 = 0;
    while (1)
    {
      v27 = *v3;
      v28 = *(_QWORD *)(a2 + v27);
      if (v28 == -1 || v28 >= *(_QWORD *)(a2 + *v4))
        break;
      v29 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v28);
      *(_QWORD *)(a2 + v27) = v28 + 1;
      v19 |= (unint64_t)(v29 & 0x7F) << v25;
      if ((v29 & 0x80) == 0)
      {
        v24 = &OBJC_IVAR___BCAnnotationRange__location;
        goto LABEL_39;
      }
      v25 += 7;
      v23 = v26++ > 8;
      if (v23)
      {
        v19 = 0;
        v24 = &OBJC_IVAR___BCAnnotationRange__location;
        goto LABEL_41;
      }
    }
    v24 = &OBJC_IVAR___BCAnnotationRange__location;
LABEL_38:
    *(_BYTE *)(a2 + *v5) = 1;
    goto LABEL_39;
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

void sub_227D8FD70(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v6;
  const char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  void *v13;
  id v14;
  const char *v15;
  NSObject *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  _QWORD v24[4];
  id v25;
  id v26;
  id v27;
  id v28;

  if ((a2 & 1) != 0)
  {
    objc_msgSend_sharedManager(BCCloudCollectionsManager, a2, a3, a4, a5);
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_collectionMemberManager(v6, v7, v8, v9, v10);
    v11 = (void *)objc_claimAutoreleasedReturnValue();

    v12 = *(void **)(a1 + 56);
    v13 = *(void **)(a1 + 40);
    v24[0] = MEMORY[0x24BDAC760];
    v24[1] = 3221225472;
    v24[2] = sub_227D8FEAC;
    v24[3] = &unk_24F08A2F8;
    v25 = v13;
    v26 = *(id *)(a1 + 32);
    v27 = v11;
    v28 = *(id *)(a1 + 48);
    v14 = v11;
    objc_msgSend__nextSortOrderForCollectionMemberManager_collectionID_completion_(v12, v15, (uint64_t)v14, (uint64_t)v25, (uint64_t)v24);

  }
  else
  {
    BDSServiceCenterLog();
    v16 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR))
      sub_227E5AF40(a1, v16, v17, v18, v19, v20, v21, v22);

    v23 = _Block_copy(*(const void **)(a1 + 48));
    v14 = v23;
    if (v23)
      (*((void (**)(void *, _QWORD))v23 + 2))(v23, 0);
  }

}

void sub_227D8FEAC(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v7;
  BCMutableCollectionMember *v8;
  const char *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  const char *v13;
  uint64_t v14;
  uint64_t v15;
  const char *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  const char *v20;
  uint64_t v21;
  _QWORD v22[4];
  id v23;

  objc_msgSend_collectionMemberIDWithCollectionID_assetID_(BCCollectionMember, a2, *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), a5);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = [BCMutableCollectionMember alloc];
  v12 = (void *)objc_msgSend_initWithCollectionMemberID_(v8, v9, (uint64_t)v7, v10, v11);
  objc_msgSend_setSortOrder_(v12, v13, (uint64_t)a2, v14, v15);
  objc_msgSend_setDeletedFlag_(v12, v16, 0, v17, v18);
  v22[0] = MEMORY[0x24BDAC760];
  v22[1] = 3221225472;
  v22[2] = sub_227D8FF78;
  v22[3] = &unk_24F08A2D0;
  v19 = *(void **)(a1 + 48);
  v23 = *(id *)(a1 + 56);
  objc_msgSend_setCollectionMember_completion_(v19, v20, (uint64_t)v12, (uint64_t)v22, v21);

}

void sub_227D8FF78(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v6;
  NSObject *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;

  v6 = a4;
  if (v6)
  {
    BDSServiceCenterLog();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
      sub_227E5AFA8((uint64_t)v6, v7, v8, v9, v10, v11, v12, v13);

  }
  v14 = _Block_copy(*(const void **)(a1 + 32));
  v15 = v14;
  if (v14)
    (*((void (**)(void *, uint64_t))v14 + 2))(v14, a2);

}

void sub_227D900D4(uint64_t a1, void *a2, void *a3)
{
  id v5;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  NSObject *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  void *v20;

  v5 = a2;
  v10 = a3;
  if (v10)
  {
    BDSServiceCenterLog();
    v11 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
      sub_227E5B00C((uint64_t)v10, v11, v12, v13, v14, v15, v16, v17);

  }
  if (v5)
    v18 = objc_msgSend_deletedFlag(v5, v6, v7, v8, v9) ^ 1;
  else
    v18 = 0;
  v19 = _Block_copy(*(const void **)(a1 + 32));
  v20 = v19;
  if (v19)
    (*((void (**)(void *, uint64_t))v19 + 2))(v19, v18);

}

void sub_227D90240(uint64_t a1, uint64_t a2, void *a3)
{
  id v4;
  NSObject *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = a3;
  if (v4)
  {
    BDSServiceCenterLog();
    v5 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
      sub_227E5B070((uint64_t)v4, v5, v6, v7, v8, v9, v10, v11);

  }
  (*(void (**)(void))(*(_QWORD *)(a1 + 32) + 16))();

}

void sub_227D9184C(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v6;
  const char *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  const char *v11;
  uint64_t v12;
  uint64_t v13;
  const char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  BCCloudKitDataChangedTransaction *v18;
  const char *v19;
  const char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  const char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  const char *v30;
  uint64_t v31;
  const char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id v36;

  objc_msgSend_transactions(*(void **)(a1 + 32), a2, a3, a4, a5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_transactionNameForEntityName_(BCCloudKitDataChangedTransaction, v7, *(_QWORD *)(a1 + 40), v8, v9);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_objectForKey_(v6, v11, (uint64_t)v10, v12, v13);
  v36 = (id)objc_claimAutoreleasedReturnValue();

  if (!v36)
  {
    v18 = [BCCloudKitDataChangedTransaction alloc];
    v36 = (id)objc_msgSend_initWithEntityName_notificationName_delegate_(v18, v19, *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 32));
    objc_msgSend_transactions(*(void **)(a1 + 32), v20, v21, v22, v23);
    v24 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_transactionName(v36, v25, v26, v27, v28);
    v29 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_setObject_forKey_(v24, v30, (uint64_t)v36, (uint64_t)v29, v31);

  }
  objc_msgSend_clientConnected(v36, v14, v15, v16, v17);
  objc_msgSend_signal(v36, v32, v33, v34, v35);

}

void sub_227D91A14(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v6;
  const char *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  const char *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  const char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  const char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  void *v25;
  BCCloudKitSyncToCKTransaction *v26;
  const char *v27;
  const char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  const char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  const char *v37;
  uint64_t v38;
  id v39;
  const char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  const char *v45;
  uint64_t v46;
  NSObject *v47;
  NSObject *v48;
  const char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  const char *v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  void *v58;
  const char *v59;
  uint64_t v60;
  uint64_t v61;
  const char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;

  objc_msgSend_transactions(*(void **)(a1 + 32), a2, a3, a4, a5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_transactionNameForEntityName_(BCCloudKitSyncToCKTransaction, v7, *(_QWORD *)(a1 + 40), v8, v9);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_objectForKey_(v6, v11, (uint64_t)v10, v12, v13);
  v14 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend_transactionName(v14, v15, v16, v17, v18);
  v19 = objc_claimAutoreleasedReturnValue();
  v24 = (void *)v19;
  if (v14)
  {
    v25 = (void *)v19;
  }
  else
  {
    v26 = [BCCloudKitSyncToCKTransaction alloc];
    v14 = (void *)objc_msgSend_initWithEntityName_syncManager_delegate_(v26, v27, *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 32));
    objc_msgSend_transactionName(v14, v28, v29, v30, v31);
    v25 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend_transactions(*(void **)(a1 + 32), v32, v33, v34, v35);
    v36 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_setObject_forKey_(v36, v37, (uint64_t)v14, (uint64_t)v25, v38);

    v39 = objc_alloc_init(MEMORY[0x24BDBCEB8]);
    objc_msgSend_transactionCompletionCallbacks(*(void **)(a1 + 32), v40, v41, v42, v43);
    v44 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_setObject_forKeyedSubscript_(v44, v45, (uint64_t)v39, (uint64_t)v25, v46);

    BDSCloudKitLog();
    v47 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v47, OS_LOG_TYPE_DEBUG))
      sub_227E5B344((uint64_t)v25, v47);

  }
  if (*(_QWORD *)(a1 + 56))
  {
    BDSCloudKitLog();
    v48 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v48, OS_LOG_TYPE_DEBUG))
      sub_227E5B298((const void **)(a1 + 56), (uint64_t)v25, v48);

    objc_msgSend_transactionCompletionCallbacks(*(void **)(a1 + 32), v49, v50, v51, v52);
    v53 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_objectForKeyedSubscript_(v53, v54, (uint64_t)v25, v55, v56);
    v57 = (void *)objc_claimAutoreleasedReturnValue();
    v58 = _Block_copy(*(const void **)(a1 + 56));
    objc_msgSend_addObject_(v57, v59, (uint64_t)v58, v60, v61);

  }
  objc_msgSend_clientConnected(v14, v20, v21, v22, v23);
  objc_msgSend_signal(v14, v62, v63, v64, v65);

}

void sub_227D91CB0(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v6;
  const char *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  const char *v11;
  uint64_t v12;
  uint64_t v13;
  const char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  BCCloudKitFetchChangesTransaction *v18;
  const char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  const char *v24;
  uint64_t v25;
  const char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  const char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  const char *v36;
  uint64_t v37;
  const char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  id v42;

  objc_msgSend_transactions(*(void **)(a1 + 32), a2, a3, a4, a5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_transactionNameForEntityName_(BCCloudKitFetchChangesTransaction, v7, (uint64_t)CFSTR("iBooks"), v8, v9);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_objectForKey_(v6, v11, (uint64_t)v10, v12, v13);
  v42 = (id)objc_claimAutoreleasedReturnValue();

  if (!v42)
  {
    v18 = [BCCloudKitFetchChangesTransaction alloc];
    objc_msgSend_cloudKitController(*(void **)(a1 + 32), v19, v20, v21, v22);
    v23 = (void *)objc_claimAutoreleasedReturnValue();
    v42 = (id)objc_msgSend_initWithCloudKitController_delegate_(v18, v24, (uint64_t)v23, *(_QWORD *)(a1 + 32), v25);

    objc_msgSend_transactions(*(void **)(a1 + 32), v26, v27, v28, v29);
    v30 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_transactionName(v42, v31, v32, v33, v34);
    v35 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_setObject_forKey_(v30, v36, (uint64_t)v42, (uint64_t)v35, v37);

  }
  objc_msgSend_clientConnected(v42, v14, v15, v16, v17);
  objc_msgSend_signal(v42, v38, v39, v40, v41);

}

void sub_227D91E94(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v6;
  NSObject *v7;
  const char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  const char *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  const char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  const void *v22;
  NSObject *v23;
  void *v24;
  void *v25;
  const char *v26;
  void *v27;
  const char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  const char *v33;
  uint64_t v34;
  uint64_t v35;
  const char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  const char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  uint8_t buf[4];
  void *v50;
  __int16 v51;
  void *v52;
  _BYTE v53[128];
  uint64_t v54;

  v54 = *MEMORY[0x24BDAC8D0];
  objc_msgSend_transactionName(*(void **)(a1 + 32), a2, a3, a4, a5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  BDSCloudKitLog();
  v7 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 138412290;
    v50 = v6;
    _os_log_impl(&dword_227D4F000, v7, OS_LOG_TYPE_DEFAULT, "[BCCloudKitTransactionManager] Transaction completed %@", buf, 0xCu);
  }

  v47 = 0u;
  v48 = 0u;
  v45 = 0u;
  v46 = 0u;
  v44 = a1;
  objc_msgSend_transactionCompletionCallbacks(*(void **)(a1 + 40), v8, v9, v10, v11);
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_objectForKeyedSubscript_(v12, v13, (uint64_t)v6, v14, v15);
  v16 = (void *)objc_claimAutoreleasedReturnValue();

  v18 = objc_msgSend_countByEnumeratingWithState_objects_count_(v16, v17, (uint64_t)&v45, (uint64_t)v53, 16);
  if (v18)
  {
    v19 = v18;
    v20 = *(_QWORD *)v46;
    do
    {
      v21 = 0;
      do
      {
        if (*(_QWORD *)v46 != v20)
          objc_enumerationMutation(v16);
        v22 = *(const void **)(*((_QWORD *)&v45 + 1) + 8 * v21);
        BDSCloudKitLog();
        v23 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v23, OS_LOG_TYPE_DEBUG))
        {
          v27 = _Block_copy(v22);
          *(_DWORD *)buf = 138412546;
          v50 = v27;
          v51 = 2112;
          v52 = v6;
          _os_log_debug_impl(&dword_227D4F000, v23, OS_LOG_TYPE_DEBUG, "Calling block %@ for transaction %@ ", buf, 0x16u);

        }
        v24 = _Block_copy(v22);
        v25 = v24;
        if (v24)
          (*((void (**)(void *))v24 + 2))(v24);

        ++v21;
      }
      while (v19 != v21);
      v19 = objc_msgSend_countByEnumeratingWithState_objects_count_(v16, v26, (uint64_t)&v45, (uint64_t)v53, 16);
    }
    while (v19);
  }

  objc_msgSend_transactions(*(void **)(v44 + 40), v28, v29, v30, v31);
  v32 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_removeObjectForKey_(v32, v33, (uint64_t)v6, v34, v35);

  objc_msgSend_transactionCompletionCallbacks(*(void **)(v44 + 40), v36, v37, v38, v39);
  v40 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_removeObjectForKey_(v40, v41, (uint64_t)v6, v42, v43);

}

void sub_227D921B4(void *a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v6;
  const char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  const char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  const char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  const char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  const char *v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  const char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  const char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  const char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  const char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  const char *v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  _BYTE v56[128];
  uint64_t v57;

  v57 = *MEMORY[0x24BDAC8D0];
  objc_msgSend_userInfo(a1, a2, a3, a4, a5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_localizedDescription(a1, v7, v8, v9, v10);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_localizedFailureReason(a1, v12, v13, v14, v15);
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_localizedRecoverySuggestion(a1, v17, v18, v19, v20);
  v21 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_localizedRecoveryOptions(a1, v22, v23, v24, v25);
  v26 = (void *)objc_claimAutoreleasedReturnValue();
  NSLog(CFSTR("NSError %@\n%@\n%@\n%@\n%@\n%@"), a1, v11, v16, v21, v26, v6);

  objc_msgSend_objectForKey_(v6, v27, (uint64_t)CFSTR("NSDetailedErrors"), v28, v29);
  v30 = (void *)objc_claimAutoreleasedReturnValue();
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0 && objc_msgSend_count(v30, v31, v32, v33, v34))
  {
    v39 = objc_msgSend_count(v30, v35, v36, v37, v38);
    NSLog(CFSTR("----------------------- Sub-errors: %03lu"), v39);
    v54 = 0u;
    v55 = 0u;
    v52 = 0u;
    v53 = 0u;
    v40 = v30;
    v42 = objc_msgSend_countByEnumeratingWithState_objects_count_(v40, v41, (uint64_t)&v52, (uint64_t)v56, 16);
    if (v42)
    {
      v43 = v42;
      v44 = *(_QWORD *)v53;
      do
      {
        v45 = 0;
        do
        {
          if (*(_QWORD *)v53 != v44)
            objc_enumerationMutation(v40);
          v46 = *(void **)(*((_QWORD *)&v52 + 1) + 8 * v45);
          objc_opt_class();
          if ((objc_opt_isKindOfClass() & 1) != 0)
            objc_msgSend_logRecursively(v46, v47, v48, v49, v50);
          else
            NSLog(CFSTR("Not an NSError: %@"), v46);
          ++v45;
        }
        while (v43 != v45);
        v43 = objc_msgSend_countByEnumeratingWithState_objects_count_(v40, v51, (uint64_t)&v52, (uint64_t)v56, 16);
      }
      while (v43);
    }

    NSLog(CFSTR("-----------------------"));
  }

}

void sub_227D92694()
{
  BCCloudDataNullPrivacyDelegate *v0;
  void *v1;

  v0 = objc_alloc_init(BCCloudDataNullPrivacyDelegate);
  v1 = (void *)qword_25592A4E0;
  qword_25592A4E0 = (uint64_t)v0;

}

uint64_t BCProtoAnnotationReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  uint64_t v16;
  int v17;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  unsigned int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  char v31;
  unsigned int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  char v37;
  uint64_t v38;
  unint64_t v39;
  char v40;
  unsigned int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  char v46;
  char v47;
  unsigned int v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  char v52;
  uint64_t v53;
  unint64_t v54;
  BCAnnotationRange *v55;
  uint64_t v56;
  unint64_t v57;
  int v58;
  char v59;
  unsigned int v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  char v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t result;
  char v69;
  unsigned int v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  char v74;
  char v75;
  unsigned int v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  char v80;
  char v81;
  unsigned int v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  char v86;
  void *v87;
  uint64_t v88;
  unint64_t v89;
  BOOL v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) >= *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
    return *(_BYTE *)(a2 + *v5) == 0;
  v7 = (int *)MEMORY[0x24BE7AF30];
  while (2)
  {
    if (*(_BYTE *)(a2 + *v5))
      return *(_BYTE *)(a2 + *v5) == 0;
    v8 = 0;
    v9 = 0;
    v10 = 0;
    while (1)
    {
      v11 = *v3;
      v12 = *(_QWORD *)(a2 + v11);
      v13 = v12 + 1;
      if (v12 == -1 || v13 > *(_QWORD *)(a2 + *v4))
        break;
      v14 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
      *(_QWORD *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0)
        goto LABEL_12;
      v8 += 7;
      v15 = v9++ >= 9;
      if (v15)
      {
        v10 = 0;
        v16 = *v5;
        v17 = *(unsigned __int8 *)(a2 + v16);
        goto LABEL_14;
      }
    }
    *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
    v16 = *v5;
    v17 = *(unsigned __int8 *)(a2 + v16);
    if (*(_BYTE *)(a2 + v16))
      v10 = 0;
LABEL_14:
    if (v17 || (v10 & 7) == 4)
      return *(_BYTE *)(a2 + *v5) == 0;
    switch((v10 >> 3))
    {
      case 1u:
        v19 = *v3;
        v20 = *(_QWORD *)(a2 + v19);
        if (v20 <= 0xFFFFFFFFFFFFFFF7 && v20 + 8 <= *(_QWORD *)(a2 + *v4))
        {
          v21 = *(_QWORD *)(*(_QWORD *)(a2 + *v7) + v20);
          *(_QWORD *)(a2 + v19) = v20 + 8;
        }
        else
        {
          *(_BYTE *)(a2 + v16) = 1;
          v21 = 0;
        }
        v93 = 8;
        goto LABEL_161;
      case 2u:
        PBReaderReadString();
        v22 = objc_claimAutoreleasedReturnValue();
        v23 = 72;
        goto LABEL_110;
      case 3u:
        v24 = 0;
        v25 = 0;
        v26 = 0;
        *(_WORD *)(a1 + 204) |= 0x200u;
        while (2)
        {
          v27 = *v3;
          v28 = *(_QWORD *)(a2 + v27);
          v29 = v28 + 1;
          if (v28 == -1 || v29 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v30 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v28);
            *(_QWORD *)(a2 + v27) = v29;
            v26 |= (unint64_t)(v30 & 0x7F) << v24;
            if (v30 < 0)
            {
              v24 += 7;
              v15 = v25++ >= 9;
              if (v15)
              {
                v26 = 0;
                goto LABEL_117;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v26 = 0;
LABEL_117:
        v90 = v26 != 0;
        v91 = 200;
        goto LABEL_134;
      case 4u:
        v31 = 0;
        v32 = 0;
        v33 = 0;
        *(_WORD *)(a1 + 204) |= 0x400u;
        while (2)
        {
          v34 = *v3;
          v35 = *(_QWORD *)(a2 + v34);
          v36 = v35 + 1;
          if (v35 == -1 || v36 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v37 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v35);
            *(_QWORD *)(a2 + v34) = v36;
            v33 |= (unint64_t)(v37 & 0x7F) << v31;
            if (v37 < 0)
            {
              v31 += 7;
              v15 = v32++ >= 9;
              if (v15)
              {
                v33 = 0;
                goto LABEL_121;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v33 = 0;
LABEL_121:
        v90 = v33 != 0;
        v91 = 201;
        goto LABEL_134;
      case 5u:
        PBReaderReadString();
        v22 = objc_claimAutoreleasedReturnValue();
        v23 = 96;
        goto LABEL_110;
      case 6u:
        v38 = *v3;
        v39 = *(_QWORD *)(a2 + v38);
        if (v39 <= 0xFFFFFFFFFFFFFFF7 && v39 + 8 <= *(_QWORD *)(a2 + *v4))
        {
          v21 = *(_QWORD *)(*(_QWORD *)(a2 + *v7) + v39);
          *(_QWORD *)(a2 + v38) = v39 + 8;
        }
        else
        {
          *(_BYTE *)(a2 + v16) = 1;
          v21 = 0;
        }
        v93 = 24;
        goto LABEL_161;
      case 7u:
        PBReaderReadString();
        v22 = objc_claimAutoreleasedReturnValue();
        v23 = 104;
        goto LABEL_110;
      case 8u:
        PBReaderReadString();
        v22 = objc_claimAutoreleasedReturnValue();
        v23 = 160;
        goto LABEL_110;
      case 9u:
        PBReaderReadString();
        v22 = objc_claimAutoreleasedReturnValue();
        v23 = 168;
        goto LABEL_110;
      case 0xAu:
        v40 = 0;
        v41 = 0;
        v42 = 0;
        *(_WORD *)(a1 + 204) |= 0x80u;
        while (2)
        {
          v43 = *v3;
          v44 = *(_QWORD *)(a2 + v43);
          v45 = v44 + 1;
          if (v44 == -1 || v45 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v46 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v44);
            *(_QWORD *)(a2 + v43) = v45;
            v42 |= (unint64_t)(v46 & 0x7F) << v40;
            if (v46 < 0)
            {
              v40 += 7;
              v15 = v41++ >= 9;
              if (v15)
              {
                LODWORD(v42) = 0;
                goto LABEL_125;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v42) = 0;
LABEL_125:
        v92 = 184;
        goto LABEL_147;
      case 0xBu:
        v47 = 0;
        v48 = 0;
        v42 = 0;
        *(_WORD *)(a1 + 204) |= 0x100u;
        while (2)
        {
          v49 = *v3;
          v50 = *(_QWORD *)(a2 + v49);
          v51 = v50 + 1;
          if (v50 == -1 || v51 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v52 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v50);
            *(_QWORD *)(a2 + v49) = v51;
            v42 |= (unint64_t)(v52 & 0x7F) << v47;
            if (v52 < 0)
            {
              v47 += 7;
              v15 = v48++ >= 9;
              if (v15)
              {
                LODWORD(v42) = 0;
                goto LABEL_129;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v42) = 0;
LABEL_129:
        v92 = 188;
        goto LABEL_147;
      case 0xCu:
        PBReaderReadString();
        v22 = objc_claimAutoreleasedReturnValue();
        v23 = 192;
        goto LABEL_110;
      case 0xDu:
        PBReaderReadString();
        v22 = objc_claimAutoreleasedReturnValue();
        v23 = 112;
        goto LABEL_110;
      case 0xEu:
        PBReaderReadString();
        v22 = objc_claimAutoreleasedReturnValue();
        v23 = 40;
        goto LABEL_110;
      case 0xFu:
        PBReaderReadString();
        v22 = objc_claimAutoreleasedReturnValue();
        v23 = 48;
        goto LABEL_110;
      case 0x10u:
        PBReaderReadString();
        v22 = objc_claimAutoreleasedReturnValue();
        v23 = 56;
        goto LABEL_110;
      case 0x11u:
        PBReaderReadString();
        v22 = objc_claimAutoreleasedReturnValue();
        v23 = 64;
        goto LABEL_110;
      case 0x12u:
        *(_WORD *)(a1 + 204) |= 2u;
        v53 = *v3;
        v54 = *(_QWORD *)(a2 + v53);
        if (v54 <= 0xFFFFFFFFFFFFFFF7 && v54 + 8 <= *(_QWORD *)(a2 + *v4))
        {
          v21 = *(_QWORD *)(*(_QWORD *)(a2 + *v7) + v54);
          *(_QWORD *)(a2 + v53) = v54 + 8;
        }
        else
        {
          *(_BYTE *)(a2 + *v5) = 1;
          v21 = 0;
        }
        v93 = 32;
        goto LABEL_161;
      case 0x13u:
        v55 = objc_alloc_init(BCAnnotationRange);
        objc_storeStrong((id *)(a1 + 176), v55);
        if (PBReaderPlaceMark() && BCAnnotationRangeReadFrom((uint64_t)v55, a2))
        {
          PBReaderRecallMark();

LABEL_162:
          if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
            return *(_BYTE *)(a2 + *v5) == 0;
          continue;
        }

        return 0;
      case 0x14u:
        *(_WORD *)(a1 + 204) |= 0x40u;
        v56 = *v3;
        v57 = *(_QWORD *)(a2 + v56);
        if (v57 <= 0xFFFFFFFFFFFFFFFBLL && v57 + 4 <= *(_QWORD *)(a2 + *v4))
        {
          v58 = *(_DWORD *)(*(_QWORD *)(a2 + *v7) + v57);
          *(_QWORD *)(a2 + v56) = v57 + 4;
        }
        else
        {
          *(_BYTE *)(a2 + *v5) = 1;
          v58 = 0;
        }
        v94 = 156;
        goto LABEL_158;
      case 0x15u:
        v59 = 0;
        v60 = 0;
        v61 = 0;
        *(_WORD *)(a1 + 204) |= 0x800u;
        while (2)
        {
          v62 = *v3;
          v63 = *(_QWORD *)(a2 + v62);
          v64 = v63 + 1;
          if (v63 == -1 || v64 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v65 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v63);
            *(_QWORD *)(a2 + v62) = v64;
            v61 |= (unint64_t)(v65 & 0x7F) << v59;
            if (v65 < 0)
            {
              v59 += 7;
              v15 = v60++ >= 9;
              if (v15)
              {
                v61 = 0;
                goto LABEL_133;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v61 = 0;
LABEL_133:
        v90 = v61 != 0;
        v91 = 202;
LABEL_134:
        *(_BYTE *)(a1 + v91) = v90;
        goto LABEL_162;
      case 0x16u:
        *(_WORD *)(a1 + 204) |= 0x20u;
        v66 = *v3;
        v67 = *(_QWORD *)(a2 + v66);
        if (v67 <= 0xFFFFFFFFFFFFFFFBLL && v67 + 4 <= *(_QWORD *)(a2 + *v4))
        {
          v58 = *(_DWORD *)(*(_QWORD *)(a2 + *v7) + v67);
          *(_QWORD *)(a2 + v66) = v67 + 4;
        }
        else
        {
          *(_BYTE *)(a2 + *v5) = 1;
          v58 = 0;
        }
        v94 = 152;
LABEL_158:
        *(_DWORD *)(a1 + v94) = v58;
        goto LABEL_162;
      case 0x17u:
        PBReaderReadString();
        v22 = objc_claimAutoreleasedReturnValue();
        v23 = 80;
        goto LABEL_110;
      case 0x18u:
        PBReaderReadString();
        v22 = objc_claimAutoreleasedReturnValue();
        v23 = 88;
        goto LABEL_110;
      case 0x1Au:
        v69 = 0;
        v70 = 0;
        v42 = 0;
        *(_WORD *)(a1 + 204) |= 4u;
        while (2)
        {
          v71 = *v3;
          v72 = *(_QWORD *)(a2 + v71);
          v73 = v72 + 1;
          if (v72 == -1 || v73 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v74 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v72);
            *(_QWORD *)(a2 + v71) = v73;
            v42 |= (unint64_t)(v74 & 0x7F) << v69;
            if (v74 < 0)
            {
              v69 += 7;
              v15 = v70++ >= 9;
              if (v15)
              {
                LODWORD(v42) = 0;
                goto LABEL_138;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v42) = 0;
LABEL_138:
        v92 = 120;
        goto LABEL_147;
      case 0x1Bu:
        v75 = 0;
        v76 = 0;
        v42 = 0;
        *(_WORD *)(a1 + 204) |= 8u;
        while (2)
        {
          v77 = *v3;
          v78 = *(_QWORD *)(a2 + v77);
          v79 = v78 + 1;
          if (v78 == -1 || v79 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v80 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v78);
            *(_QWORD *)(a2 + v77) = v79;
            v42 |= (unint64_t)(v80 & 0x7F) << v75;
            if (v80 < 0)
            {
              v75 += 7;
              v15 = v76++ >= 9;
              if (v15)
              {
                LODWORD(v42) = 0;
                goto LABEL_142;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v42) = 0;
LABEL_142:
        v92 = 124;
        goto LABEL_147;
      case 0x1Cu:
        v81 = 0;
        v82 = 0;
        v42 = 0;
        *(_WORD *)(a1 + 204) |= 0x10u;
        while (2)
        {
          v83 = *v3;
          v84 = *(_QWORD *)(a2 + v83);
          v85 = v84 + 1;
          if (v84 == -1 || v85 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v86 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v84);
            *(_QWORD *)(a2 + v83) = v85;
            v42 |= (unint64_t)(v86 & 0x7F) << v81;
            if (v86 < 0)
            {
              v81 += 7;
              v15 = v82++ >= 9;
              if (v15)
              {
                LODWORD(v42) = 0;
                goto LABEL_146;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v42) = 0;
LABEL_146:
        v92 = 128;
LABEL_147:
        *(_DWORD *)(a1 + v92) = v42;
        goto LABEL_162;
      case 0x1Du:
        PBReaderReadString();
        v22 = objc_claimAutoreleasedReturnValue();
        v23 = 136;
        goto LABEL_110;
      case 0x1Eu:
        PBReaderReadData();
        v22 = objc_claimAutoreleasedReturnValue();
        v23 = 144;
LABEL_110:
        v87 = *(void **)(a1 + v23);
        *(_QWORD *)(a1 + v23) = v22;

        goto LABEL_162;
      case 0x1Fu:
        *(_WORD *)(a1 + 204) |= 1u;
        v88 = *v3;
        v89 = *(_QWORD *)(a2 + v88);
        if (v89 <= 0xFFFFFFFFFFFFFFF7 && v89 + 8 <= *(_QWORD *)(a2 + *v4))
        {
          v21 = *(_QWORD *)(*(_QWORD *)(a2 + *v7) + v89);
          *(_QWORD *)(a2 + v88) = v89 + 8;
        }
        else
        {
          *(_BYTE *)(a2 + *v5) = 1;
          v21 = 0;
        }
        v93 = 16;
LABEL_161:
        *(_QWORD *)(a1 + v93) = v21;
        goto LABEL_162;
      default:
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
        goto LABEL_162;
    }
  }
}

void sub_227D97618(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  const char *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;

  objc_msgSend_mainBundle(MEMORY[0x24BDD1488], a2, a3, a4, a5);
  v15 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend_objectForInfoDictionaryKey_(v15, v5, (uint64_t)CFSTR("CFBundleShortVersionString"), v6, v7);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v13 = objc_msgSend_copy(v8, v9, v10, v11, v12);
  v14 = (void *)qword_25592A4F0;
  qword_25592A4F0 = v13;

}

void bc_turnProtoAnnotationIntoTombstone(void *a1)
{
  const char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  const char *v5;
  uint64_t v6;
  uint64_t v7;
  const char *v8;
  uint64_t v9;
  uint64_t v10;
  const char *v11;
  uint64_t v12;
  uint64_t v13;
  const char *v14;
  uint64_t v15;
  uint64_t v16;
  const char *v17;
  uint64_t v18;
  uint64_t v19;
  const char *v20;
  uint64_t v21;
  uint64_t v22;
  const char *v23;
  uint64_t v24;
  uint64_t v25;
  const char *v26;
  uint64_t v27;
  uint64_t v28;
  const char *v29;
  uint64_t v30;
  uint64_t v31;
  const char *v32;
  uint64_t v33;
  uint64_t v34;
  const char *v35;
  uint64_t v36;
  uint64_t v37;
  const char *v38;
  uint64_t v39;
  uint64_t v40;
  const char *v41;
  uint64_t v42;
  uint64_t v43;
  const char *v44;
  uint64_t v45;
  uint64_t v46;
  const char *v47;
  uint64_t v48;
  uint64_t v49;
  const char *v50;
  uint64_t v51;
  uint64_t v52;
  const char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  const char *v57;
  uint64_t v58;
  uint64_t v59;
  const char *v60;
  uint64_t v61;
  uint64_t v62;
  double v63;
  const char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  const char *v68;
  uint64_t v69;
  uint64_t v70;
  const char *v71;
  uint64_t v72;
  uint64_t v73;
  const char *v74;
  uint64_t v75;
  uint64_t v76;
  double v77;
  const char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  const char *v82;
  uint64_t v83;
  uint64_t v84;
  const char *v85;
  uint64_t v86;
  uint64_t v87;
  const char *v88;
  uint64_t v89;
  uint64_t v90;
  const char *v91;
  uint64_t v92;
  uint64_t v93;
  const char *v94;
  uint64_t v95;
  uint64_t v96;
  const char *v97;
  uint64_t v98;
  uint64_t v99;
  const char *v100;
  uint64_t v101;
  uint64_t v102;
  const char *v103;
  uint64_t v104;
  uint64_t v105;
  const char *v106;
  uint64_t v107;
  uint64_t v108;
  const char *v109;
  uint64_t v110;
  uint64_t v111;
  const char *v112;
  uint64_t v113;
  uint64_t v114;
  const char *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  const char *v119;
  uint64_t v120;
  uint64_t v121;
  id v122;

  v122 = a1;
  objc_msgSend_setCreationDate_(v122, v1, v2, v3, v4, 0.0);
  objc_msgSend_setDeleted_(v122, v5, 1, v6, v7);
  objc_msgSend_setIsUnderline_(v122, v8, 0, v9, v10);
  objc_msgSend_setHasIsUnderline_(v122, v11, 0, v12, v13);
  objc_msgSend_setLocationCFIString_(v122, v14, 0, v15, v16);
  objc_msgSend_setNote_(v122, v17, 0, v18, v19);
  objc_msgSend_setRepresentativeText_(v122, v20, 0, v21, v22);
  objc_msgSend_setSelectedText_(v122, v23, 0, v24, v25);
  objc_msgSend_setStyle_(v122, v26, 0, v27, v28);
  objc_msgSend_setHasStyle_(v122, v29, 0, v30, v31);
  objc_msgSend_setType_(v122, v32, 0, v33, v34);
  objc_msgSend_setHasType_(v122, v35, 0, v36, v37);
  objc_msgSend_setPhysicalPageNumber_(v122, v38, 0, v39, v40);
  objc_msgSend_setAnnotationVersion_(v122, v41, 0, v42, v43);
  objc_msgSend_setAssetVersion_(v122, v44, 0, v45, v46);
  objc_msgSend_setAttachments_(v122, v47, 0, v48, v49);
  objc_msgSend_setChapterTitle_(v122, v50, 0, v51, v52);
  objc_msgSend_setUserModificationDate_(v122, v53, v54, v55, v56, 0.0);
  objc_msgSend_setHasUserModificationDate_(v122, v57, 0, v58, v59);
  objc_msgSend_setSelectedTextRange_(v122, v60, 0, v61, v62);
  LODWORD(v63) = 0;
  objc_msgSend_setReadingProgressHighWaterMark_(v122, v64, v65, v66, v67, v63);
  objc_msgSend_setHasReadingProgressHighWaterMark_(v122, v68, 0, v69, v70);
  objc_msgSend_setSpineIndexUpdated_(v122, v71, 0, v72, v73);
  objc_msgSend_setHasSpineIndexUpdated_(v122, v74, 0, v75, v76);
  LODWORD(v77) = 0;
  objc_msgSend_setReadingProgress_(v122, v78, v79, v80, v81, v77);
  objc_msgSend_setHasReadingProgress_(v122, v82, 0, v83, v84);
  objc_msgSend_setFutureProofing11_(v122, v85, 0, v86, v87);
  objc_msgSend_setFutureProofing12_(v122, v88, 0, v89, v90);
  objc_msgSend_setPlAbsolutePhysicalLocation_(v122, v91, 0, v92, v93);
  objc_msgSend_setHasPlAbsolutePhysicalLocation_(v122, v94, 0, v95, v96);
  objc_msgSend_setPlLocationRangeEnd_(v122, v97, 0, v98, v99);
  objc_msgSend_setHasPlLocationRangeEnd_(v122, v100, 0, v101, v102);
  objc_msgSend_setPlLocationRangeStart_(v122, v103, 0, v104, v105);
  objc_msgSend_setHasPlLocationRangeStart_(v122, v106, 0, v107, v108);
  objc_msgSend_setPlLocationStorageUUID_(v122, v109, 0, v110, v111);
  objc_msgSend_setPlUserData_(v122, v112, 0, v113, v114);
  objc_msgSend_setLocationModificationDate_(v122, v115, v116, v117, v118, 0.0);
  objc_msgSend_setHasLocationModificationDate_(v122, v119, 0, v120, v121);

}

uint64_t sub_227D98F6C(void *a1)
{
  id v1;
  const char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  const char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  const char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  const char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  const char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  const char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  const char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  const char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  NSObject *v40;
  uint64_t v41;
  char v43;

  v1 = a1;
  objc_msgSend_uuid(v1, v2, v3, v4, v5);
  v6 = objc_claimAutoreleasedReturnValue();
  if (!v6)
    goto LABEL_11;
  v11 = (void *)v6;
  objc_msgSend_creatorIdentifier(v1, v7, v8, v9, v10);
  v12 = objc_claimAutoreleasedReturnValue();
  if (!v12)
  {

LABEL_11:
    goto LABEL_12;
  }
  v17 = (void *)v12;
  objc_msgSend_locationCFIString(v1, v13, v14, v15, v16);
  v18 = (void *)objc_claimAutoreleasedReturnValue();
  if (!objc_msgSend_length(v18, v19, v20, v21, v22))
  {
    objc_msgSend_plUserData(v1, v23, v24, v25, v26);
    v27 = (void *)objc_claimAutoreleasedReturnValue();
    if (objc_msgSend_length(v27, v28, v29, v30, v31))
    {

      goto LABEL_6;
    }
    v43 = objc_msgSend_deleted(v1, v32, v33, v34, v35);

    if ((v43 & 1) != 0)
      goto LABEL_7;
LABEL_12:
    BDSCloudKitLog();
    v40 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v40, OS_LOG_TYPE_ERROR))
      sub_227E5BC2C();
    goto LABEL_14;
  }
LABEL_6:

LABEL_7:
  if (objc_msgSend_type(v1, v36, v37, v38, v39) != 3)
  {
    v41 = 1;
    goto LABEL_15;
  }
  BDSCloudKitLog();
  v40 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v40, OS_LOG_TYPE_ERROR))
    sub_227E5BC90();
LABEL_14:

  v41 = 0;
LABEL_15:

  return v41;
}

void sub_227D990B0(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint8_t *a5)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, a5, 0xCu);
}

void BDSReportAssertionFailureWithMessage(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  id v13;
  const char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  const char *v18;
  uint64_t v19;
  id v20;
  const char *v21;
  uint64_t v22;
  __CFString *v23;
  void *v24;
  const char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __CFString *v29;
  const char *v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  uint8_t buf[4];
  uint64_t v35;
  __int16 v36;
  uint64_t v37;
  __int16 v38;
  __CFString *v39;
  __int16 v40;
  void *v41;
  __int16 v42;
  __CFString *v43;
  uint64_t v44;

  v44 = *MEMORY[0x24BDAC8D0];
  v13 = a5;
  if (objc_msgSend_length(v13, v14, v15, v16, v17))
  {
    v20 = objc_alloc(MEMORY[0x24BDD17C8]);
    v23 = (__CFString *)objc_msgSend_initWithFormat_arguments_(v20, v21, (uint64_t)v13, (uint64_t)&a9, v22);
    if (!a1)
      goto LABEL_6;
LABEL_5:
    objc_msgSend_stringWithCString_encoding_(MEMORY[0x24BDD17C8], v18, a1, 1, v19);
    v24 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_lastPathComponent(v24, v25, v26, v27, v28);
    v29 = (__CFString *)objc_claimAutoreleasedReturnValue();

    if (v29)
      goto LABEL_7;
    goto LABEL_6;
  }
  v23 = &stru_24F091B90;
  if (a1)
    goto LABEL_5;
LABEL_6:
  v29 = &stru_24F091B90;
LABEL_7:
  if (os_log_type_enabled(MEMORY[0x24BDACB70], OS_LOG_TYPE_ERROR))
  {
    objc_msgSend_numberWithInt_(MEMORY[0x24BDD16E0], v30, a2, v31, v32);
    v33 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 136316162;
    v35 = a4;
    v36 = 2080;
    v37 = a3;
    v38 = 2112;
    v39 = v29;
    v40 = 2112;
    v41 = v33;
    v42 = 2112;
    v43 = v23;
    _os_log_error_impl(&dword_227D4F000, MEMORY[0x24BDACB70], OS_LOG_TYPE_ERROR, "*** Assertion failure: %s in %s - %@:%@ %@", buf, 0x34u);

  }
}

void sub_227D9943C()
{
  BDSServiceProxy *v0;
  void *v1;

  v0 = objc_alloc_init(BDSServiceProxy);
  v1 = (void *)qword_253F3C6E0;
  qword_253F3C6E0 = (uint64_t)v0;

}

void sub_227D99E7C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  void *v6;
  void *v7;
  id v8;

  v8 = a4;
  v6 = _Block_copy(*(const void **)(a1 + 32));
  v7 = v6;
  if (v6)
    (*((void (**)(void *, uint64_t, id))v6 + 2))(v6, a2, v8);

}

void sub_227D99FB8(uint64_t a1, uint64_t a2, void *a3)
{
  void *v5;
  void *v6;
  id v7;

  v7 = a3;
  v5 = _Block_copy(*(const void **)(a1 + 32));
  v6 = v5;
  if (v5)
    (*((void (**)(void *, uint64_t, id))v5 + 2))(v5, a2, v7);

}

void sub_227D9A6C8(uint64_t a1, void *a2, void *a3)
{
  id v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;

  v9 = a3;
  v5 = a2;
  objc_opt_class();
  BUDynamicCast();
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  v7 = _Block_copy(*(const void **)(a1 + 32));
  v8 = v7;
  if (v7)
    (*((void (**)(void *, void *, id))v7 + 2))(v7, v6, v9);

}

void sub_227D9A948(uint64_t a1, void *a2, void *a3)
{
  id v5;
  void *v6;
  const char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (**v11)(void *, void *, id);
  void *v12;
  id v13;

  v13 = a3;
  v5 = a2;
  objc_opt_class();
  BUDynamicCast();
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  v11 = (void (**)(void *, void *, id))_Block_copy(*(const void **)(a1 + 32));
  if (v11)
  {
    objc_msgSend_value(v6, v7, v8, v9, v10);
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    v11[2](v11, v12, v13);

  }
}

void sub_227D9AAB8(uint64_t a1, void *a2)
{
  id v3;
  const char *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  BCMutableGlobalMetadatum *v8;
  const char *v9;
  uint64_t v10;
  uint64_t v11;
  const char *v12;
  uint64_t v13;
  uint64_t v14;
  const char *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  const char *v19;
  uint64_t v20;
  _QWORD v21[4];
  id v22;

  v3 = a2;
  if (v3)
  {
    v7 = v3;
    objc_msgSend_setValue_(v3, v4, *(_QWORD *)(a1 + 40), v5, v6);
  }
  else
  {
    v8 = [BCMutableGlobalMetadatum alloc];
    v7 = (void *)objc_msgSend_initWithKey_(v8, v9, *(_QWORD *)(a1 + 32), v10, v11);
    objc_msgSend_setValue_(v7, v12, *(_QWORD *)(a1 + 40), v13, v14);
    objc_msgSend_setModificationDate_(v7, v15, 0, v16, v17);
  }
  v21[0] = MEMORY[0x24BDAC760];
  v21[1] = 3221225472;
  v21[2] = sub_227D9AB7C;
  v21[3] = &unk_24F08A2D0;
  v18 = *(void **)(a1 + 48);
  v22 = *(id *)(a1 + 56);
  objc_msgSend_setMetadatum_completion_(v18, v19, (uint64_t)v7, (uint64_t)v21, v20);

}

void sub_227D9AB7C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  void *v5;
  void *v6;
  id v7;

  v7 = a4;
  v5 = _Block_copy(*(const void **)(a1 + 32));
  v6 = v5;
  if (v5)
    (*((void (**)(void *, id))v5 + 2))(v5, v7);

}

void sub_227D9AD00()
{
  BDSServiceProxy *v0;
  void *v1;

  v0 = objc_alloc_init(BDSServiceProxy);
  v1 = (void *)qword_253F3C6E8;
  qword_253F3C6E8 = (uint64_t)v0;

}

void sub_227D9B038(uint64_t a1, void *a2)
{
  id v3;
  const char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  const char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  const char *v13;
  uint64_t v14;
  uint64_t v15;
  char isEqualToString;
  uint64_t v17;
  NSObject *v18;
  _BOOL4 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  void *v35;

  v3 = a2;
  if (objc_msgSend_code(v3, v4, v5, v6, v7) == 4097
    && (objc_msgSend_domain(v3, v8, v9, v10, v11),
        v12 = (void *)objc_claimAutoreleasedReturnValue(),
        isEqualToString = objc_msgSend_isEqualToString_(v12, v13, *MEMORY[0x24BDD0B88], v14, v15),
        v12,
        (isEqualToString & 1) != 0))
  {
    v17 = *(_QWORD *)(a1 + 56);
    BDSServiceLog();
    v18 = objc_claimAutoreleasedReturnValue();
    v19 = os_log_type_enabled(v18, OS_LOG_TYPE_ERROR);
    v26 = v17 <= 1;
    v27 = v17 - 1;
    if (!v26)
    {
      if (v19)
        sub_227E5BE0C((uint64_t)v3, v27, v18);

      sub_227D694C4(*(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 40), v27);
      goto LABEL_12;
    }
    if (v19)
      sub_227E5BDA8((uint64_t)v3, v18, v20, v21, v22, v23, v24, v25);
  }
  else
  {
    BDSServiceLog();
    v18 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR))
      sub_227E5BE8C((uint64_t)v3, v18, v28, v29, v30, v31, v32, v33);
  }

  v34 = _Block_copy(*(const void **)(a1 + 40));
  v35 = v34;
  if (v34)
    (*((void (**)(void *, id))v34 + 2))(v34, v3);

LABEL_12:
}

void sub_227D9BCE4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_227D9BCFC(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_227D9BD0C(uint64_t a1)
{

}

void sub_227D9BD14(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v6;
  const char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  const char *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  const char *v16;
  uint64_t v17;
  uint64_t v18;
  const char *v19;
  uint64_t v20;
  uint64_t v21;
  const char *v22;
  uint64_t v23;
  void *v24;
  const char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  const char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  BDSBookWidgetInfoMO *v36;
  const char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  void *v43;
  const char *v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  const char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  const char *v53;
  uint64_t v54;
  void *v55;
  const char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void *v60;
  const char *v61;
  uint64_t v62;
  void *v63;
  const char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  void *v68;
  const char *v69;
  uint64_t v70;
  const char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  void *v75;
  const char *v76;
  uint64_t v77;
  uint64_t v78;
  const char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  void *v83;
  const char *v84;
  uint64_t v85;
  uint64_t v86;
  const char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  void *v91;
  const char *v92;
  uint64_t v93;
  uint64_t v94;
  const char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t isExplicit;
  const char *v100;
  uint64_t v101;
  uint64_t v102;
  id v103;

  objc_msgSend_fetchRequest(BDSBookWidgetInfoMO, a2, a3, a4, a5);
  v103 = (id)objc_claimAutoreleasedReturnValue();
  v6 = (void *)MEMORY[0x24BDD1758];
  objc_msgSend_assetID(*(void **)(a1 + 32), v7, v8, v9, v10);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_predicateWithFormat_(v6, v12, (uint64_t)CFSTR("assetID == %@"), v13, v14, v11);
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_setPredicate_(v103, v16, (uint64_t)v15, v17, v18);

  objc_msgSend_setFetchLimit_(v103, v19, 1, v20, v21);
  objc_msgSend_executeFetchRequest_error_(*(void **)(a1 + 40), v22, (uint64_t)v103, 0, v23);
  v24 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_firstObject(v24, v25, v26, v27, v28);
  v29 = objc_claimAutoreleasedReturnValue();
  v30 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
  v31 = *(void **)(v30 + 40);
  *(_QWORD *)(v30 + 40) = v29;

  if (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40))
  {
    v36 = [BDSBookWidgetInfoMO alloc];
    v40 = objc_msgSend_initWithContext_(v36, v37, *(_QWORD *)(a1 + 40), v38, v39);
    v41 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
    v42 = *(void **)(v41 + 40);
    *(_QWORD *)(v41 + 40) = v40;

  }
  objc_msgSend_assetID(*(void **)(a1 + 32), v32, v33, v34, v35);
  v43 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_setAssetID_(*(void **)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40), v44, (uint64_t)v43, v45, v46);

  v47 = *(void **)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40);
  objc_msgSend_title(*(void **)(a1 + 32), v48, v49, v50, v51);
  v52 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_bl_setNonNilValue_forKey_(v47, v53, (uint64_t)v52, (uint64_t)CFSTR("title"), v54);

  v55 = *(void **)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40);
  objc_msgSend_coverURL(*(void **)(a1 + 32), v56, v57, v58, v59);
  v60 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_bl_setNonNilValue_forKey_(v55, v61, (uint64_t)v60, (uint64_t)CFSTR("coverURL"), v62);

  v63 = *(void **)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40);
  objc_msgSend_totalDuration(*(void **)(a1 + 32), v64, v65, v66, v67);
  v68 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_bl_setNonNilValue_forKey_(v63, v69, (uint64_t)v68, (uint64_t)CFSTR("totalDuration"), v70);

  objc_msgSend_pageProgressionDirection(*(void **)(a1 + 32), v71, v72, v73, v74);
  v75 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_setPageProgressionDirection_(*(void **)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40), v76, (uint64_t)v75, v77, v78);

  objc_msgSend_cloudAssetType(*(void **)(a1 + 32), v79, v80, v81, v82);
  v83 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_setCloudAssetType_(*(void **)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40), v84, (uint64_t)v83, v85, v86);

  objc_msgSend_libraryContentAssetType(*(void **)(a1 + 32), v87, v88, v89, v90);
  v91 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_setLibraryContentAssetType_(*(void **)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40), v92, (uint64_t)v91, v93, v94);

  isExplicit = objc_msgSend_isExplicit(*(void **)(a1 + 32), v95, v96, v97, v98);
  objc_msgSend_setIsExplicit_(*(void **)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40), v100, isExplicit, v101, v102);

}

void sub_227D9BFB0()
{
  BDSServiceProxy *v0;
  void *v1;

  v0 = objc_alloc_init(BDSServiceProxy);
  v1 = (void *)qword_253F3C6F0;
  qword_253F3C6F0 = (uint64_t)v0;

}

void sub_227D9C334(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_227D9C35C(uint64_t a1, void *a2)
{
  id *v2;
  void (**v3)(void *);
  id WeakRetained;
  const char *v5;
  uint64_t v6;
  uint64_t v7;
  void (**v8)(void *);
  id v9;

  v2 = (id *)(a1 + 32);
  v3 = a2;
  WeakRetained = objc_loadWeakRetained(v2);
  v9 = WeakRetained;
  if (WeakRetained)
  {
    objc_msgSend_performWorkWithCompletion_(WeakRetained, v5, (uint64_t)v3, v6, v7);
  }
  else
  {
    v8 = (void (**)(void *))_Block_copy(v3);

    if (v8)
      v8[2](v8);
    v3 = v8;
  }

}

void sub_227D9C3D0(uint64_t a1, void *a2)
{
  id v2;
  NSObject *v3;
  int v4;
  id v5;
  uint64_t v6;

  v6 = *MEMORY[0x24BDAC8D0];
  v2 = a2;
  BDSCloudKitLog();
  v3 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
  {
    v4 = 138412290;
    v5 = v2;
    _os_log_impl(&dword_227D4F000, v3, OS_LOG_TYPE_INFO, "_coalescedNotification in %@ did not call notification within 10s.", (uint8_t *)&v4, 0xCu);
  }

}

void sub_227D9C584(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v6;
  uint64_t v7;
  const char *v8;
  uint64_t v9;
  uint64_t v10;
  const char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  const char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;

  v6 = *(void **)(a1 + 32);
  v7 = objc_msgSend_clientCount(v6, a2, a3, a4, a5);
  objc_msgSend_setClientCount_(v6, v8, v7 + 1, v9, v10);
  objc_msgSend_transactionLifetime(*(void **)(a1 + 32), v11, v12, v13, v14);
  v15 = (void *)objc_claimAutoreleasedReturnValue();

  if (v15)
  {
    objc_msgSend_transactionLifetime(*(void **)(a1 + 32), v16, v17, v18, v19);
    v20 = objc_claimAutoreleasedReturnValue();
    dispatch_source_cancel(v20);

  }
}

void sub_227D9C760(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_227D9C78C(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  NSObject *v6;
  _QWORD v7[5];
  id v8;

  objc_msgSend_lifecycleAccessQueue(*(void **)(a1 + 32), a2, a3, a4, a5);
  v6 = objc_claimAutoreleasedReturnValue();
  v7[0] = MEMORY[0x24BDAC760];
  v7[1] = 3221225472;
  v7[2] = sub_227D9C828;
  v7[3] = &unk_24F08A5F0;
  objc_copyWeak(&v8, (id *)(a1 + 40));
  v7[4] = *(_QWORD *)(a1 + 32);
  dispatch_async(v6, v7);

  objc_destroyWeak(&v8);
}

void sub_227D9C828(uint64_t a1)
{
  const char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id WeakRetained;
  void *v7;
  const char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  const char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  const char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  const char *v24;
  uint64_t v25;
  uint64_t v26;
  const char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  const char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  const char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  const char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  NSObject *v45;
  const char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  int v51;
  void *v52;
  uint64_t v53;

  v53 = *MEMORY[0x24BDAC8D0];
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    objc_msgSend_shared(MEMORY[0x24BE0FC08], v2, v3, v4, v5);
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v12 = objc_msgSend_verboseLoggingEnabled(v7, v8, v9, v10, v11);

    if (v12)
    {
      BDSCloudKitDevelopmentLog();
      v17 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
      {
        objc_msgSend_transactionName(*(void **)(a1 + 32), v18, v19, v20, v21);
        v22 = (void *)objc_claimAutoreleasedReturnValue();
        v51 = 138412290;
        v52 = v22;
        _os_log_impl(&dword_227D4F000, v17, OS_LOG_TYPE_DEFAULT, "\"\\\"Transaction client decrementing for %@\\\"\"", (uint8_t *)&v51, 0xCu);

      }
    }
    v23 = objc_msgSend_clientCount(WeakRetained, v13, v14, v15, v16);
    objc_msgSend_setClientCount_(WeakRetained, v24, v23 - 1, v25, v26);
    if (!objc_msgSend_clientCount(WeakRetained, v27, v28, v29, v30))
    {
      objc_msgSend_shared(MEMORY[0x24BE0FC08], v31, v32, v33, v34);
      v35 = (void *)objc_claimAutoreleasedReturnValue();
      v40 = objc_msgSend_verboseLoggingEnabled(v35, v36, v37, v38, v39);

      if (v40)
      {
        BDSCloudKitDevelopmentLog();
        v45 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v45, OS_LOG_TYPE_DEFAULT))
        {
          objc_msgSend_transactionName(*(void **)(a1 + 32), v46, v47, v48, v49);
          v50 = (void *)objc_claimAutoreleasedReturnValue();
          v51 = 138412290;
          v52 = v50;
          _os_log_impl(&dword_227D4F000, v45, OS_LOG_TYPE_DEFAULT, "\"\\\"Transaction clientCount 0 for %@\\\"\"", (uint8_t *)&v51, 0xCu);

        }
      }
      objc_msgSend_laq_scheduleTransactionLifetime(WeakRetained, v41, v42, v43, v44);
    }
  }

}

uint64_t sub_227D9CBB0(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v6;
  const char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  const char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  const char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  void *v22;
  const char *v23;
  uint64_t v24;
  uint64_t v25;
  const char *v26;
  uint64_t v27;
  uint64_t v28;
  const char *v29;
  uint64_t v30;
  uint64_t v31;
  int v33;
  void *v34;
  uint64_t v35;

  v35 = *MEMORY[0x24BDAC8D0];
  objc_msgSend_shared(MEMORY[0x24BE0FC08], a2, a3, a4, a5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v11 = objc_msgSend_verboseLoggingEnabled(v6, v7, v8, v9, v10);

  if (v11)
  {
    BDSCloudKitDevelopmentLog();
    v16 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend_transactionName(*(void **)(a1 + 32), v17, v18, v19, v20);
      v21 = (void *)objc_claimAutoreleasedReturnValue();
      v33 = 138412290;
      v34 = v21;
      _os_log_impl(&dword_227D4F000, v16, OS_LOG_TYPE_DEFAULT, "\"\\\"Transaction Timer Completion fired for %@\\\"\"", (uint8_t *)&v33, 0xCu);

    }
  }
  objc_msgSend_delegate(*(void **)(a1 + 32), v12, v13, v14, v15);
  v22 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_transactionCompleted_(v22, v23, *(_QWORD *)(a1 + 32), v24, v25);

  objc_msgSend_setDelegate_(*(void **)(a1 + 32), v26, 0, v27, v28);
  return objc_msgSend_setTransactionLifetime_(*(void **)(a1 + 32), v29, 0, v30, v31);
}

uint64_t sub_227D9CCC4(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v6;
  const char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  const char *v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  const char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  int v22;
  void *v23;
  uint64_t v24;

  v24 = *MEMORY[0x24BDAC8D0];
  objc_msgSend_shared(MEMORY[0x24BE0FC08], a2, a3, a4, a5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v11 = objc_msgSend_verboseLoggingEnabled(v6, v7, v8, v9, v10);

  if (v11)
  {
    BDSCloudKitDevelopmentLog();
    v15 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend_transactionName(*(void **)(a1 + 32), v16, v17, v18, v19);
      v20 = (void *)objc_claimAutoreleasedReturnValue();
      v22 = 138412290;
      v23 = v20;
      _os_log_impl(&dword_227D4F000, v15, OS_LOG_TYPE_DEFAULT, "\"\\\"Transaction Timer Cancel fired for %@\\\"\"", (uint8_t *)&v22, 0xCu);

    }
  }
  return objc_msgSend_setTransactionLifetime_(*(void **)(a1 + 32), v12, 0, v13, v14);
}

void sub_227D9CF98(uint64_t a1, void *a2)
{
  id v3;
  id WeakRetained;
  NSObject *v5;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  const char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  void *v16;
  void *v17;
  _QWORD block[4];
  id v19;
  id v20;
  id v21;
  uint8_t buf[4];
  void *v23;
  uint64_t v24;

  v24 = *MEMORY[0x24BDAC8D0];
  v3 = a2;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    BDSCloudKitLog();
    v5 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
    {
      objc_msgSend_containerIdentifier(WeakRetained, v6, v7, v8, v9);
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138412290;
      v23 = v10;
      _os_log_impl(&dword_227D4F000, v5, OS_LOG_TYPE_INFO, "_coalescedArchive (%@)", buf, 0xCu);

    }
    objc_msgSend_accessQueue(WeakRetained, v11, v12, v13, v14);
    v15 = objc_claimAutoreleasedReturnValue();
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 3221225472;
    block[2] = sub_227D9D130;
    block[3] = &unk_24F08A740;
    objc_copyWeak(&v21, (id *)(a1 + 40));
    v19 = *(id *)(a1 + 32);
    v20 = v3;
    dispatch_async(v15, block);

    objc_destroyWeak(&v21);
  }
  else
  {
    v16 = _Block_copy(v3);
    v17 = v16;
    if (v16)
      (*((void (**)(void *))v16 + 2))(v16);

  }
}

void sub_227D9D130(uint64_t a1)
{
  const char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  const char *v7;
  uint64_t v8;
  void *v9;
  void *v10;
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  if (WeakRetained)
  {
    objc_msgSend_p_archiveToData(WeakRetained, v2, v3, v4, v5);
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_writeToURL_atomically_(v6, v7, *(_QWORD *)(a1 + 32), 1, v8);

  }
  v9 = _Block_copy(*(const void **)(a1 + 40));
  v10 = v9;
  if (v9)
    (*((void (**)(void *))v9 + 2))(v9);

}

void sub_227D9D1A8(uint64_t a1, void *a2)
{
  id v2;
  NSObject *v3;
  int v4;
  id v5;
  uint64_t v6;

  v6 = *MEMORY[0x24BDAC8D0];
  v2 = a2;
  BDSCloudKitLog();
  v3 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
  {
    v4 = 138543362;
    v5 = v2;
    _os_log_impl(&dword_227D4F000, v3, OS_LOG_TYPE_INFO, "did not call completion after 10s in %{public}@", (uint8_t *)&v4, 0xCu);
  }

}

void sub_227D9D250(uint64_t a1, void *a2)
{
  id v3;
  id *v4;
  id WeakRetained;
  NSObject *v6;
  const char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  const char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  void *v17;
  void *v18;
  _QWORD v19[4];
  id v20;
  id v21;
  uint8_t buf[4];
  void *v23;
  uint64_t v24;

  v24 = *MEMORY[0x24BDAC8D0];
  v3 = a2;
  v4 = (id *)(a1 + 32);
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    BDSCloudKitLog();
    v6 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
    {
      objc_msgSend_containerIdentifier(WeakRetained, v7, v8, v9, v10);
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138412290;
      v23 = v11;
      _os_log_impl(&dword_227D4F000, v6, OS_LOG_TYPE_INFO, "_coalescedZoneFetch (%@)", buf, 0xCu);

    }
    objc_msgSend_accessQueue(WeakRetained, v12, v13, v14, v15);
    v16 = objc_claimAutoreleasedReturnValue();
    v19[0] = MEMORY[0x24BDAC760];
    v19[1] = 3221225472;
    v19[2] = sub_227D9D3D4;
    v19[3] = &unk_24F0891B8;
    objc_copyWeak(&v21, v4);
    v20 = v3;
    dispatch_async(v16, v19);

    objc_destroyWeak(&v21);
  }
  else
  {
    v17 = _Block_copy(v3);
    v18 = v17;
    if (v17)
      (*((void (**)(void *))v17 + 2))(v17);

  }
}

void sub_227D9D3D4(uint64_t a1)
{
  id *v2;
  id WeakRetained;
  const char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  const char *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  _QWORD v15[4];
  id v16;
  id v17;
  id v18;

  v2 = (id *)(a1 + 40);
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v8 = WeakRetained;
  if (WeakRetained
    && (objc_msgSend_database(WeakRetained, v4, v5, v6, v7),
        v9 = (void *)objc_claimAutoreleasedReturnValue(),
        v9,
        v9))
  {
    v15[0] = MEMORY[0x24BDAC760];
    v15[1] = 3221225472;
    v15[2] = sub_227D9D4EC;
    v15[3] = &unk_24F08A7B0;
    v16 = v8;
    objc_copyWeak(&v18, v2);
    v17 = *(id *)(a1 + 32);
    objc_msgSend_p_fetchZoneChanges_(v16, v10, (uint64_t)v15, v11, v12);

    objc_destroyWeak(&v18);
  }
  else
  {
    v13 = _Block_copy(*(const void **)(a1 + 32));
    v14 = v13;
    if (v13)
      (*((void (**)(void *))v13 + 2))(v13);

  }
}

void sub_227D9D4D8(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_227D9D4EC(void **a1, void *a2)
{
  const char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  NSObject *v8;
  NSObject *v9;
  _QWORD v10[4];
  id v11;
  id v12;

  v7 = a2;
  if (v7)
  {
    BDSCloudKitLog();
    v8 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
      sub_227E5BEF0();

  }
  objc_msgSend_accessQueue(a1[4], v3, v4, v5, v6);
  v9 = objc_claimAutoreleasedReturnValue();
  v10[0] = MEMORY[0x24BDAC760];
  v10[1] = 3221225472;
  v10[2] = sub_227D9D5D0;
  v10[3] = &unk_24F0891B8;
  objc_copyWeak(&v12, a1 + 6);
  v11 = a1[5];
  dispatch_async(v9, v10);

  objc_destroyWeak(&v12);
}

void sub_227D9D5D0(uint64_t a1)
{
  id WeakRetained;
  const char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  const char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  const char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  NSObject *v17;
  NSObject *v18;
  const char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  const char *v24;
  uint64_t v25;
  uint64_t v26;
  const char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  void *v35;
  int v36;
  void *v37;
  uint64_t v38;

  v38 = *MEMORY[0x24BDAC8D0];
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v7 = WeakRetained;
  if (WeakRetained
    && (objc_msgSend_attachedToContainer(WeakRetained, v3, v4, v5, v6) & 1) == 0
    && objc_msgSend_fetchRecordZoneChangesSuccess(v7, v8, v9, v10, v11))
  {
    objc_msgSend_database(v7, v12, v13, v14, v15);
    v16 = (void *)objc_claimAutoreleasedReturnValue();

    BDSCloudKitLog();
    v17 = objc_claimAutoreleasedReturnValue();
    v18 = v17;
    if (v16)
    {
      if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
      {
        objc_msgSend_containerIdentifier(v7, v19, v20, v21, v22);
        v23 = (void *)objc_claimAutoreleasedReturnValue();
        v36 = 138412290;
        v37 = v23;
        _os_log_impl(&dword_227D4F000, v18, OS_LOG_TYPE_DEFAULT, "BCCloudKitDatabaseController - attached to container: %@", (uint8_t *)&v36, 0xCu);

      }
      objc_msgSend_setAttachedToContainer_(v7, v24, 1, v25, v26);
      objc_msgSend_p_informObserversOfAttachmentChange(v7, v27, v28, v29, v30);
    }
    else
    {
      if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR))
        sub_227E5BF50(v7, (char *)v18, v31, v32, v33);

    }
  }
  v34 = _Block_copy(*(const void **)(a1 + 32));
  v35 = v34;
  if (v34)
    (*((void (**)(void *))v34 + 2))(v34);

}

void sub_227D9D728(uint64_t a1, void *a2)
{
  id v2;
  NSObject *v3;

  v2 = a2;
  BDSCloudKitLog();
  v3 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
    sub_227E5BFD8();

}

void sub_227D9D944(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_227D9D960(uint64_t a1)
{
  id *v2;
  id WeakRetained;
  const char *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  _QWORD v9[4];
  id v10;
  id v11;

  v2 = (id *)(a1 + 40);
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    v9[0] = MEMORY[0x24BDAC760];
    v9[1] = 3221225472;
    v9[2] = sub_227D9DA48;
    v9[3] = &unk_24F08A820;
    objc_copyWeak(&v11, v2);
    v10 = *(id *)(a1 + 32);
    objc_msgSend_p_fetchDatabaseChanges_(WeakRetained, v4, (uint64_t)v9, v5, v6);

    objc_destroyWeak(&v11);
  }
  else
  {
    v7 = _Block_copy(*(const void **)(a1 + 32));
    v8 = v7;
    if (v7)
      (*((void (**)(void *, _QWORD))v7 + 2))(v7, 0);

  }
}

void sub_227D9DA34(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_227D9DA48(uint64_t a1, void *a2)
{
  char *v3;
  id WeakRetained;
  const char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  NSObject *v10;
  uint64_t v11;
  uint64_t v12;
  void (**v13)(void);
  void (**v14)(void);
  void (*v15)(void);
  void (**v16)(void);
  NSObject *v17;
  _QWORD v18[4];
  id v19;
  id v20;

  v3 = a2;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v9 = WeakRetained;
  if (WeakRetained)
  {
    if (!v3)
    {
      objc_msgSend_accessQueue(WeakRetained, v5, v6, v7, v8);
      v17 = objc_claimAutoreleasedReturnValue();
      v18[0] = MEMORY[0x24BDAC760];
      v18[1] = 3221225472;
      v18[2] = sub_227D9DB98;
      v18[3] = &unk_24F0891B8;
      objc_copyWeak(&v20, (id *)(a1 + 40));
      v19 = *(id *)(a1 + 32);
      dispatch_async(v17, v18);

      objc_destroyWeak(&v20);
      goto LABEL_12;
    }
    BDSCloudKitLog();
    v10 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
      sub_227E5C038(v9, v3, v10, v11, v12);

    v13 = (void (**)(void))_Block_copy(*(const void **)(a1 + 32));
    v14 = v13;
    if (v13)
    {
      v15 = v13[2];
LABEL_9:
      v15();
    }
  }
  else
  {
    v16 = (void (**)(void))_Block_copy(*(const void **)(a1 + 32));
    v14 = v16;
    if (v16)
    {
      v15 = v16[2];
      goto LABEL_9;
    }
  }

LABEL_12:
}

void sub_227D9DB98(uint64_t a1)
{
  id WeakRetained;
  NSObject *v3;
  _BOOL4 v4;
  const char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  const char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  const char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  id v21;
  const char *v22;
  uint64_t v23;
  uint64_t v24;
  const char *v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  const char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  const char *v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  void *v38;
  _QWORD v39[4];
  id v40;
  _BYTE buf[24];
  void *v42;
  id v43;
  uint64_t v44;

  v44 = *MEMORY[0x24BDAC8D0];
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    BDSCloudKitLog();
    v3 = objc_claimAutoreleasedReturnValue();
    v4 = os_log_type_enabled(v3, OS_LOG_TYPE_INFO);
    v9 = MEMORY[0x24BDAC760];
    if (v4)
    {
      objc_msgSend_containerIdentifier(WeakRetained, v5, v6, v7, v8);
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend_changedRecordZoneIDs(WeakRetained, v11, v12, v13, v14);
      v15 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend_allObjects(v15, v16, v17, v18, v19);
      v20 = (void *)objc_claimAutoreleasedReturnValue();
      *(_QWORD *)buf = v9;
      *(_QWORD *)&buf[8] = 3221225472;
      *(_QWORD *)&buf[16] = sub_227DA9AE8;
      v42 = &unk_24F08B088;
      v43 = objc_alloc_init(MEMORY[0x24BDBCEB8]);
      v21 = v43;
      objc_msgSend_enumerateObjectsUsingBlock_(v20, v22, (uint64_t)buf, v23, v24);
      objc_msgSend_componentsJoinedByString_(v21, v25, (uint64_t)CFSTR(","), v26, v27);
      v28 = (void *)objc_claimAutoreleasedReturnValue();

      *(_DWORD *)buf = 138543618;
      *(_QWORD *)&buf[4] = v10;
      *(_WORD *)&buf[12] = 2114;
      *(_QWORD *)&buf[14] = v28;
      _os_log_impl(&dword_227D4F000, v3, OS_LOG_TYPE_INFO, "BCCloudKitDatabaseController (%{public}@) - signal coalescedZoneFetch in fetchChangesWithCompletion for changedRecordZoneIDs:%{public}@", buf, 0x16u);

    }
    objc_msgSend_coalescedZoneFetch(WeakRetained, v29, v30, v31, v32);
    v33 = (void *)objc_claimAutoreleasedReturnValue();
    v39[0] = v9;
    v39[1] = 3221225472;
    v39[2] = sub_227D9DDA4;
    v39[3] = &unk_24F08A7F8;
    v40 = *(id *)(a1 + 32);
    objc_msgSend_signalWithCompletion_(v33, v34, (uint64_t)v39, v35, v36);

  }
  else
  {
    v37 = _Block_copy(*(const void **)(a1 + 32));
    v38 = v37;
    if (v37)
      (*((void (**)(void *, _QWORD))v37 + 2))(v37, 0);

  }
}

void sub_227D9DDA4(uint64_t a1)
{
  void *v1;
  id v2;

  v1 = _Block_copy(*(const void **)(a1 + 32));
  if (v1)
  {
    v2 = v1;
    (*((void (**)(void *, _QWORD))v1 + 2))(v1, 0);
    v1 = v2;
  }

}

void sub_227D9DEC4(_Unwind_Exception *a1)
{
  uint64_t v1;

  objc_destroyWeak((id *)(v1 - 40));
  _Unwind_Resume(a1);
}

void sub_227D9DED8(uint64_t a1)
{
  id WeakRetained;
  const char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  NSObject *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  const char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  const char *v19;
  uint64_t v20;
  void *v21;
  const char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  const __CFString *v27;
  void *v28;
  _QWORD v29[4];
  id v30;
  uint8_t buf[4];
  const __CFString *v32;
  uint64_t v33;

  v33 = *MEMORY[0x24BDAC8D0];
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  objc_msgSend_database(WeakRetained, v3, v4, v5, v6);
  v7 = (void *)objc_claimAutoreleasedReturnValue();

  BDSCloudKitLog();
  v8 = objc_claimAutoreleasedReturnValue();
  v9 = (char *)v8;
  if (v7)
  {
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEBUG))
      sub_227E5C0CC(WeakRetained, v9, v10, v11, v12);

    objc_msgSend_database(WeakRetained, v13, v14, v15, v16);
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    v29[0] = MEMORY[0x24BDAC760];
    v29[1] = 3221225472;
    v29[2] = sub_227D9E06C;
    v29[3] = &unk_24F08A848;
    v18 = *(_QWORD *)(a1 + 32);
    v30 = *(id *)(a1 + 40);
    objc_msgSend_fetchRecordWithID_completionHandler_(v17, v19, v18, (uint64_t)v29, v20);

    v21 = v30;
  }
  else
  {
    if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
    {
      v26 = objc_msgSend_attachedToContainer(WeakRetained, v22, v23, v24, v25);
      v27 = CFSTR("NO");
      if (v26)
        v27 = CFSTR("YES");
      *(_DWORD *)buf = 138412290;
      v32 = v27;
      _os_log_impl(&dword_227D4F000, (os_log_t)v9, OS_LOG_TYPE_INFO, "WARNING: BCCloudKitDatabaseController - fetchRecordForRecordID called without a database.  attached: %@", buf, 0xCu);
    }

    v28 = _Block_copy(*(const void **)(a1 + 40));
    v21 = v28;
    if (v28)
      (*((void (**)(void *, _QWORD))v28 + 2))(v28, 0);
  }

}

void sub_227D9E06C(uint64_t a1, void *a2, uint64_t a3)
{
  void (**v5)(void *, _QWORD);
  id v6;
  id v7;

  v7 = a2;
  v5 = (void (**)(void *, _QWORD))_Block_copy(*(const void **)(a1 + 32));
  if (v5)
  {
    if (a3)
      v6 = 0;
    else
      v6 = v7;
    ((void (**)(void *, id))v5)[2](v5, v6);
  }

}

void sub_227D9E0CC()
{
  NSObject *v0;
  uint8_t v1[16];

  BDSCloudKitLog();
  v0 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v0, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)v1 = 0;
    _os_log_impl(&dword_227D4F000, v0, OS_LOG_TYPE_DEFAULT, "BCCloudKitDatabaseController - archiveComplete (willAttachToContainer)", v1, 2u);
  }

}

void sub_227D9E2C0(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  const char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  NSObject *v12;
  id v13;
  uint64_t v14;
  NSObject *v15;
  NSObject *v16;
  _QWORD block[4];
  id v18;
  id v19;
  id v20;
  uint64_t v21;
  id v22;
  id v23;
  char v24;

  v5 = a2;
  v6 = a3;
  v11 = v6;
  if (!v5 || v6)
  {
    BDSCloudKitLog();
    v15 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
      sub_227E5C164();

    v16 = _Block_copy(*(const void **)(a1 + 64));
    v12 = v16;
    if (v16)
      ((void (*)(NSObject *, _QWORD, void *))v16[2].isa)(v16, 0, v11);
  }
  else
  {
    objc_msgSend_accessQueue(*(void **)(a1 + 32), v7, v8, v9, v10);
    v12 = objc_claimAutoreleasedReturnValue();
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 3221225472;
    block[2] = sub_227D9E41C;
    block[3] = &unk_24F08A8D8;
    v18 = *(id *)(a1 + 40);
    v19 = v5;
    v13 = *(id *)(a1 + 48);
    v14 = *(_QWORD *)(a1 + 32);
    v20 = v13;
    v21 = v14;
    v24 = *(_BYTE *)(a1 + 72);
    v22 = *(id *)(a1 + 56);
    v23 = *(id *)(a1 + 64);
    dispatch_async(v12, block);

  }
}

void sub_227D9E41C(uint64_t a1)
{
  NSObject *v2;
  const char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  const char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  const char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  const char *v22;
  uint64_t v23;
  uint64_t v24;
  const char *v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  void *v29;
  int v30;
  void *v31;
  __int16 v32;
  uint64_t v33;
  __int16 v34;
  uint64_t v35;
  uint64_t v36;

  v36 = *MEMORY[0x24BDAC8D0];
  BDSCloudKitLog();
  v2 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    objc_msgSend_containerIdentifier(*(void **)(a1 + 32), v3, v4, v5, v6);
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v8 = *(_QWORD *)(a1 + 40);
    v9 = *(_QWORD *)(a1 + 48);
    v30 = 138543874;
    v31 = v7;
    v32 = 2114;
    v33 = v8;
    v34 = 2114;
    v35 = v9;
    _os_log_impl(&dword_227D4F000, v2, OS_LOG_TYPE_DEFAULT, "BCCloudKitDatabaseController (%{public}@) - user recordID: %{public}@ database:%{public}@", (uint8_t *)&v30, 0x20u);

  }
  objc_storeStrong((id *)(*(_QWORD *)(a1 + 56) + 16), *(id *)(a1 + 48));
  objc_storeStrong((id *)(*(_QWORD *)(a1 + 56) + 24), *(id *)(a1 + 32));
  *(_BYTE *)(*(_QWORD *)(a1 + 56) + 13) = 0;
  objc_msgSend_containerIdentifier(*(void **)(a1 + 32), v10, v11, v12, v13);
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  v19 = objc_msgSend_copy(v14, v15, v16, v17, v18);
  v20 = *(_QWORD *)(a1 + 56);
  v21 = *(void **)(v20 + 80);
  *(_QWORD *)(v20 + 80) = v19;

  objc_storeStrong((id *)(*(_QWORD *)(a1 + 56) + 88), *(id *)(a1 + 40));
  objc_msgSend_p_scheduleArchiveWithCompletion_(*(void **)(a1 + 56), v22, (uint64_t)&unk_24F08A8B0, v23, v24);
  if (*(_BYTE *)(a1 + 80))
    objc_msgSend_p_subscribeWithCompletion_(*(void **)(a1 + 56), v25, *(_QWORD *)(a1 + 64), v26, v27);
  v28 = _Block_copy(*(const void **)(a1 + 72));
  v29 = v28;
  if (v28)
    (*((void (**)(void *, uint64_t, _QWORD))v28 + 2))(v28, 1, 0);

}

void sub_227D9E594()
{
  NSObject *v0;
  uint8_t v1[16];

  BDSCloudKitLog();
  v0 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v0, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)v1 = 0;
    _os_log_impl(&dword_227D4F000, v0, OS_LOG_TYPE_DEFAULT, "BCCloudKitDatabaseController - archiveComplete (connectUserTo)", v1, 2u);
  }

}

void sub_227D9E728(uint64_t a1)
{
  BDSOSTransaction *v2;
  const char *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  id v8;
  void *v9;
  const char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  id v16;
  NSObject *v17;
  _QWORD v18[5];
  id v19;
  id v20;
  id v21;
  _QWORD aBlock[4];
  id v23;
  id v24;

  v2 = [BDSOSTransaction alloc];
  v6 = (void *)objc_msgSend_initWithTransactionName_(v2, v3, (uint64_t)"attachToZone", v4, v5);
  v7 = MEMORY[0x24BDAC760];
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 3221225472;
  aBlock[2] = sub_227D9E85C;
  aBlock[3] = &unk_24F08A928;
  v23 = v6;
  v24 = *(id *)(a1 + 48);
  v8 = v6;
  v9 = _Block_copy(aBlock);
  objc_msgSend_accessQueue(*(void **)(a1 + 32), v10, v11, v12, v13);
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  v18[0] = v7;
  v18[1] = 3221225472;
  v18[2] = sub_227D9E8A4;
  v18[3] = &unk_24F089EC8;
  v15 = *(void **)(a1 + 40);
  v18[4] = *(_QWORD *)(a1 + 32);
  v19 = v15;
  v20 = v14;
  v21 = v9;
  v16 = v9;
  v17 = v14;
  dispatch_async(v17, v18);

}

void sub_227D9E85C(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void (**v6)(void);
  void (**v7)(void);

  objc_msgSend_endTransaction(*(void **)(a1 + 32), a2, a3, a4, a5);
  v6 = (void (**)(void))_Block_copy(*(const void **)(a1 + 40));
  if (v6)
  {
    v7 = v6;
    v6[2]();
    v6 = v7;
  }

}

void sub_227D9E8A4(uint64_t a1)
{
  NSObject *v2;
  const char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  id v9;
  void *v10;
  uint64_t v11;
  id v12;
  const char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  id v18;
  id v19;
  uint64_t v20;
  void *v21;
  void *v22;
  const char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  id v28;
  uint64_t v29;
  const char *v30;
  uint64_t v31;
  _QWORD v32[4];
  id v33;
  uint64_t v34;
  id v35;
  _QWORD v36[4];
  id v37;
  uint8_t buf[4];
  void *v39;
  __int16 v40;
  uint64_t v41;
  uint64_t v42;

  v42 = *MEMORY[0x24BDAC8D0];
  BDSCloudKitLog();
  v2 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    objc_msgSend_containerIdentifier(*(void **)(a1 + 32), v3, v4, v5, v6);
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v8 = *(_QWORD *)(a1 + 40);
    *(_DWORD *)buf = 138412546;
    v39 = v7;
    v40 = 2112;
    v41 = v8;
    _os_log_impl(&dword_227D4F000, v2, OS_LOG_TYPE_DEFAULT, "[BCCloudKitDatabaseController (%@)] 1. attachToZones Creating Record Zones - zones:%@", buf, 0x16u);

  }
  v9 = objc_alloc_init(MEMORY[0x24BDBCEB8]);
  v10 = *(void **)(a1 + 40);
  v11 = MEMORY[0x24BDAC760];
  v36[0] = MEMORY[0x24BDAC760];
  v36[1] = 3221225472;
  v36[2] = sub_227D9EA84;
  v36[3] = &unk_24F08A950;
  v12 = v9;
  v37 = v12;
  objc_msgSend_enumerateObjectsUsingBlock_(v10, v13, (uint64_t)v36, v14, v15);
  v16 = *(_QWORD *)(a1 + 32);
  v17 = *(void **)(v16 + 40);
  *(_QWORD *)(v16 + 40) = v12;
  v18 = v12;

  v19 = objc_alloc_init(MEMORY[0x24BDBCED8]);
  v20 = *(_QWORD *)(a1 + 32);
  v21 = *(void **)(v20 + 112);
  *(_QWORD *)(v20 + 112) = v19;

  v22 = *(void **)(a1 + 32);
  objc_msgSend_desiredRecordZoneIDs(v22, v23, v24, v25, v26);
  v27 = (void *)objc_claimAutoreleasedReturnValue();
  v32[0] = v11;
  v32[1] = 3221225472;
  v32[2] = sub_227D9EAF4;
  v32[3] = &unk_24F08A978;
  v28 = *(id *)(a1 + 48);
  v29 = *(_QWORD *)(a1 + 32);
  v33 = v28;
  v34 = v29;
  v35 = *(id *)(a1 + 56);
  objc_msgSend_p_createRecordZones_completionHandler_(v22, v30, (uint64_t)v27, (uint64_t)v32, v31);

}

void sub_227D9EA84(uint64_t a1, void *a2)
{
  objc_class *v3;
  id v4;
  id v5;
  const char *v6;
  uint64_t v7;
  const char *v8;
  uint64_t v9;
  uint64_t v10;
  id v11;

  v3 = (objc_class *)MEMORY[0x24BDB91F8];
  v4 = a2;
  v5 = [v3 alloc];
  v11 = (id)objc_msgSend_initWithZoneName_ownerName_(v5, v6, (uint64_t)v4, *MEMORY[0x24BDB8E88], v7);

  objc_msgSend_addObject_(*(void **)(a1 + 32), v8, (uint64_t)v11, v9, v10);
}

void sub_227D9EAF4(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  const char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  const char *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  const char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  const char *v19;
  uint64_t v20;
  NSObject *v21;
  void *v22;
  int v23;
  uint64_t v24;
  const char *v25;
  uint64_t v26;
  NSObject *v27;
  const char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  const char *v33;
  uint64_t v34;
  _QWORD v35[5];
  id v36;
  uint8_t buf[4];
  void *v38;
  __int16 v39;
  void *v40;
  uint64_t v41;

  v41 = *MEMORY[0x24BDAC8D0];
  v3 = a2;
  v4 = v3;
  if (!v3)
  {
    v35[0] = MEMORY[0x24BDAC760];
    v35[1] = 3221225472;
    v35[2] = sub_227D9ED04;
    v35[3] = &unk_24F08A928;
    v21 = *(NSObject **)(a1 + 32);
    v35[4] = *(_QWORD *)(a1 + 40);
    v36 = *(id *)(a1 + 48);
    dispatch_async(v21, v35);

    goto LABEL_14;
  }
  if (!sub_227D9EEB8(v3))
  {
    BDSErrorFromUnderlyingError(CFSTR("BDSCloudKitClientError"), 2002, v4);
    v22 = (void *)objc_claimAutoreleasedReturnValue();
    if (sub_227D9F094(v4))
    {
      v23 = 2006;
    }
    else
    {
      if (!sub_227D9F29C(v4))
      {
        BDSCloudKitLog();
        v27 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v27, OS_LOG_TYPE_ERROR))
        {
          objc_msgSend_containerIdentifier(*(void **)(a1 + 40), v28, v29, v30, v31);
          v32 = (void *)objc_claimAutoreleasedReturnValue();
          *(_DWORD *)buf = 138412546;
          v38 = v32;
          v39 = 2112;
          v40 = v4;
          _os_log_impl(&dword_227D4F000, v27, OS_LOG_TYPE_ERROR, "[BCCloudKitDatabaseController (%@)] attachToZones creating record zones failed, ERROR:%@", buf, 0x16u);

        }
        objc_msgSend_zonesTemporarilyUnreadableWithError_completion_(*(void **)(a1 + 40), v33, (uint64_t)v22, *(_QWORD *)(a1 + 48), v34);
        goto LABEL_13;
      }
      v23 = 2007;
    }
    BDSErrorFromUnderlyingError(CFSTR("BDSCloudKitClientError"), v23, v4);
    v24 = objc_claimAutoreleasedReturnValue();

    v22 = (void *)v24;
    objc_msgSend_zonesTemporarilyUnreadableWithError_completion_(*(void **)(a1 + 40), v25, v24, *(_QWORD *)(a1 + 48), v26);
LABEL_13:

    goto LABEL_14;
  }
  objc_msgSend_userInfo(v4, v5, v6, v7, v8);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_objectForKeyedSubscript_(v9, v10, *MEMORY[0x24BDB8EE8], v11, v12);
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_allKeys(v13, v14, v15, v16, v17);
  v18 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend_zonesUnreadableDueToMissingD2DEncryptionIdentity_completion_(*(void **)(a1 + 40), v19, (uint64_t)v18, *(_QWORD *)(a1 + 48), v20);
LABEL_14:

}

void sub_227D9ED04(uint64_t a1)
{
  void *v1;
  const char *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v5[4];
  void *v6;
  id v7;

  v5[0] = MEMORY[0x24BDAC760];
  v5[1] = 3221225472;
  v5[2] = sub_227D9ED74;
  v5[3] = &unk_24F0898A8;
  v1 = *(void **)(a1 + 40);
  v6 = *(void **)(a1 + 32);
  v7 = v1;
  objc_msgSend_p_createRecordIDSaltWithCompletion_(v6, v2, (uint64_t)v5, v3, v4);

}

void sub_227D9ED74(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v6;
  void (**v7)(void);
  const char *v8;
  uint64_t v9;
  uint64_t v10;
  void (**v11)(void);
  _QWORD v12[5];
  id v13;

  v6 = *(void **)(a1 + 32);
  if (a2)
  {
    objc_msgSend_detachWithError_completion_(*(void **)(a1 + 32), a2, (uint64_t)a2, 0, a5);
    v7 = (void (**)(void))_Block_copy(*(const void **)(a1 + 40));
    if (v7)
    {
      v11 = v7;
      v7[2]();
      v7 = v11;
    }

  }
  else
  {
    v12[0] = MEMORY[0x24BDAC760];
    v12[1] = 3221225472;
    v12[2] = sub_227D9EE2C;
    v12[3] = &unk_24F0898A8;
    v12[4] = v6;
    v13 = *(id *)(a1 + 40);
    objc_msgSend_fetchChangesWithCompletion_(v6, v8, (uint64_t)v12, v9, v10);

  }
}

void sub_227D9EE2C(uint64_t a1, void *a2)
{
  void *v3;
  const char *v4;
  uint64_t v5;
  void *v6;
  void *v7;
  id v8;

  v8 = a2;
  if (v8)
  {
    BDSErrorFromUnderlyingError(CFSTR("BDSCloudKitClientError"), 2004, v8);
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_detachWithError_completion_(*(void **)(a1 + 32), v4, (uint64_t)v3, 0, v5);

  }
  v6 = _Block_copy(*(const void **)(a1 + 40));
  v7 = v6;
  if (v6)
    (*((void (**)(void *))v6 + 2))(v6);

}

uint64_t sub_227D9EEB8(void *a1)
{
  id v1;
  const char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  const char *v8;
  uint64_t v9;
  uint64_t v10;
  int isEqualToString;
  const char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  const char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  const char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  const char *v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  const char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  const char *v35;
  uint64_t v36;
  const char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t i;
  void *v44;
  void *v45;
  const char *v46;
  uint64_t v47;
  uint64_t v48;
  const char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  _BYTE v59[128];
  uint64_t v60;

  v60 = *MEMORY[0x24BDAC8D0];
  v1 = a1;
  objc_msgSend_domain(v1, v2, v3, v4, v5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = *MEMORY[0x24BDB8EA8];
  isEqualToString = objc_msgSend_isEqualToString_(v6, v8, *MEMORY[0x24BDB8EA8], v9, v10);

  if (!isEqualToString)
    goto LABEL_17;
  if (objc_msgSend_code(v1, v12, v13, v14, v15) == 112)
  {
    v20 = 1;
    goto LABEL_18;
  }
  if (objc_msgSend_code(v1, v16, v17, v18, v19) != 2)
  {
LABEL_17:
    v20 = 0;
    goto LABEL_18;
  }
  objc_msgSend_userInfo(v1, v21, v22, v23, v24);
  v25 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_objectForKey_(v25, v26, *MEMORY[0x24BDB8EE8], v27, v28);
  v29 = (void *)objc_claimAutoreleasedReturnValue();

  v57 = 0u;
  v58 = 0u;
  v55 = 0u;
  v56 = 0u;
  objc_msgSend_allValues(v29, v30, v31, v32, v33, 0);
  v34 = (void *)objc_claimAutoreleasedReturnValue();
  v36 = objc_msgSend_countByEnumeratingWithState_objects_count_(v34, v35, (uint64_t)&v55, (uint64_t)v59, 16);
  if (v36)
  {
    v41 = v36;
    v42 = *(_QWORD *)v56;
    do
    {
      for (i = 0; i != v41; ++i)
      {
        if (*(_QWORD *)v56 != v42)
          objc_enumerationMutation(v34);
        v44 = *(void **)(*((_QWORD *)&v55 + 1) + 8 * i);
        objc_msgSend_domain(v44, v37, v38, v39, v40);
        v45 = (void *)objc_claimAutoreleasedReturnValue();
        if (objc_msgSend_isEqualToString_(v45, v46, v7, v47, v48))
        {
          v53 = objc_msgSend_code(v44, v49, v50, v51, v52);

          if (v53 == 112)
          {
            v20 = 1;
            goto LABEL_19;
          }
        }
        else
        {

        }
      }
      v41 = objc_msgSend_countByEnumeratingWithState_objects_count_(v34, v37, (uint64_t)&v55, (uint64_t)v59, 16);
    }
    while (v41);
  }
  v20 = 0;
LABEL_19:

LABEL_18:
  return v20;
}

BOOL sub_227D9F094(void *a1)
{
  id v1;
  const char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  const char *v8;
  uint64_t v9;
  uint64_t v10;
  int isEqualToString;
  const char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  const char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  const char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  const char *v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  const char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  const char *v36;
  uint64_t v37;
  const char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t i;
  void *v45;
  uint64_t v46;
  const char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  const char *v52;
  uint64_t v53;
  uint64_t v54;
  int v55;
  _BOOL8 v57;
  void *v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  _BYTE v64[128];
  uint64_t v65;

  v65 = *MEMORY[0x24BDAC8D0];
  v1 = a1;
  objc_msgSend_domain(v1, v2, v3, v4, v5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = *MEMORY[0x24BDB8EA8];
  isEqualToString = objc_msgSend_isEqualToString_(v6, v8, *MEMORY[0x24BDB8EA8], v9, v10);

  if (isEqualToString)
  {
    v16 = objc_msgSend_code(v1, v12, v13, v14, v15);
    v21 = 1;
    if (v16 != 111 && v16 != 5008)
    {
      if (objc_msgSend_code(v1, v17, v18, v19, v20) == 2)
      {
        objc_msgSend_userInfo(v1, v22, v23, v24, v25);
        v26 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend_objectForKey_(v26, v27, *MEMORY[0x24BDB8EE8], v28, v29);
        v30 = (void *)objc_claimAutoreleasedReturnValue();

        v62 = 0u;
        v63 = 0u;
        v60 = 0u;
        v61 = 0u;
        objc_msgSend_allValues(v30, v31, v32, v33, v34);
        v35 = (void *)objc_claimAutoreleasedReturnValue();
        v37 = objc_msgSend_countByEnumeratingWithState_objects_count_(v35, v36, (uint64_t)&v60, (uint64_t)v64, 16);
        if (v37)
        {
          v42 = v37;
          v59 = v30;
          v43 = *(_QWORD *)v61;
          while (2)
          {
            for (i = 0; i != v42; ++i)
            {
              if (*(_QWORD *)v61 != v43)
                objc_enumerationMutation(v35);
              v45 = *(void **)(*((_QWORD *)&v60 + 1) + 8 * i);
              v46 = objc_msgSend_code(v45, v38, v39, v40, v41);
              objc_msgSend_domain(v45, v47, v48, v49, v50);
              v51 = (void *)objc_claimAutoreleasedReturnValue();
              v55 = objc_msgSend_isEqualToString_(v51, v52, v7, v53, v54);

              if (v55)
              {
                if (v46 == 111 || v46 == 5008)
                {
                  v21 = 1;
                  goto LABEL_21;
                }
              }
            }
            v42 = objc_msgSend_countByEnumeratingWithState_objects_count_(v35, v38, (uint64_t)&v60, (uint64_t)v64, 16);
            if (v42)
              continue;
            break;
          }
          v21 = 0;
LABEL_21:
          v30 = v59;
        }
        else
        {
          v21 = 0;
        }

      }
      else
      {
        v21 = 0;
      }
    }
    v57 = v21 != 0;
  }
  else
  {
    v57 = 0;
  }

  return v57;
}

BOOL sub_227D9F29C(void *a1)
{
  id v1;
  const char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  const char *v8;
  uint64_t v9;
  uint64_t v10;
  int isEqualToString;
  const char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  const char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BOOL4 v21;
  _BOOL8 v22;
  void *v23;
  const char *v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  const char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  const char *v33;
  uint64_t v34;
  const char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t i;
  void *v42;
  uint64_t v43;
  const char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  const char *v49;
  uint64_t v50;
  uint64_t v51;
  int v52;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  _BYTE v58[128];
  uint64_t v59;

  v59 = *MEMORY[0x24BDAC8D0];
  v1 = a1;
  objc_msgSend_domain(v1, v2, v3, v4, v5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = *MEMORY[0x24BDB8EA8];
  isEqualToString = objc_msgSend_isEqualToString_(v6, v8, *MEMORY[0x24BDB8EA8], v9, v10);

  if (isEqualToString)
  {
    v16 = objc_msgSend_code(v1, v12, v13, v14, v15);
    if (v16 == 2)
    {
      objc_msgSend_userInfo(v1, v17, v18, v19, v20);
      v23 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend_objectForKey_(v23, v24, *MEMORY[0x24BDB8EE8], v25, v26);
      v27 = (void *)objc_claimAutoreleasedReturnValue();

      v56 = 0u;
      v57 = 0u;
      v54 = 0u;
      v55 = 0u;
      objc_msgSend_allValues(v27, v28, v29, v30, v31, 0);
      v32 = (void *)objc_claimAutoreleasedReturnValue();
      v34 = objc_msgSend_countByEnumeratingWithState_objects_count_(v32, v33, (uint64_t)&v54, (uint64_t)v58, 16);
      if (v34)
      {
        v39 = v34;
        v40 = *(_QWORD *)v55;
        while (2)
        {
          for (i = 0; i != v39; ++i)
          {
            if (*(_QWORD *)v55 != v40)
              objc_enumerationMutation(v32);
            v42 = *(void **)(*((_QWORD *)&v54 + 1) + 8 * i);
            v43 = objc_msgSend_code(v42, v35, v36, v37, v38);
            objc_msgSend_domain(v42, v44, v45, v46, v47);
            v48 = (void *)objc_claimAutoreleasedReturnValue();
            v52 = objc_msgSend_isEqualToString_(v48, v49, v7, v50, v51);

            if (v52 && v43 == 36)
            {
              v21 = 1;
              goto LABEL_16;
            }
          }
          v39 = objc_msgSend_countByEnumeratingWithState_objects_count_(v32, v35, (uint64_t)&v54, (uint64_t)v58, 16);
          if (v39)
            continue;
          break;
        }
      }
      v21 = 0;
LABEL_16:

    }
    else
    {
      v21 = v16 == 36;
    }
    v22 = v21;
  }
  else
  {
    v22 = 0;
  }

  return v22;
}

void sub_227D9F53C(uint64_t a1)
{
  NSObject *v2;
  const char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  void *v14;
  const char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  void *v20;
  int v21;
  void *v22;
  __int16 v23;
  uint64_t v24;
  uint64_t v25;

  v25 = *MEMORY[0x24BDAC8D0];
  BDSCloudKitLog();
  v2 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_ERROR))
  {
    objc_msgSend_containerIdentifier(*(void **)(a1 + 32), v3, v4, v5, v6);
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v8 = *(_QWORD *)(a1 + 40);
    v21 = 138543618;
    v22 = v7;
    v23 = 2112;
    v24 = v8;
    _os_log_impl(&dword_227D4F000, v2, OS_LOG_TYPE_ERROR, "BCCloudKitDatabaseController - Detaching Container:%{public}@, ERROR:%@", (uint8_t *)&v21, 0x16u);

  }
  v9 = *(_QWORD *)(a1 + 32);
  v10 = *(void **)(v9 + 16);
  *(_QWORD *)(v9 + 16) = 0;

  v11 = *(_QWORD *)(a1 + 32);
  v12 = *(void **)(v11 + 24);
  *(_QWORD *)(v11 + 24) = 0;

  v13 = *(_QWORD *)(a1 + 32);
  v14 = *(void **)(v13 + 112);
  *(_QWORD *)(v13 + 112) = 0;

  *(_BYTE *)(*(_QWORD *)(a1 + 32) + 13) = 0;
  objc_msgSend_p_informObserversOfAttachmentChange(*(void **)(a1 + 32), v15, v16, v17, v18);
  v19 = _Block_copy(*(const void **)(a1 + 48));
  v20 = v19;
  if (v19)
    (*((void (**)(void *))v19 + 2))(v19);

}

void sub_227D9F700(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int isOffline;
  const char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (**v12)(id, uint64_t, _QWORD);

  isOffline = objc_msgSend_isOffline(BDSReachability, a2, a3, a4, a5);
  v12 = (void (**)(id, uint64_t, _QWORD))_Block_copy(*(const void **)(a1 + 40));
  if (v12)
  {
    v11 = objc_msgSend_attachedToContainer(*(void **)(a1 + 32), v7, v8, v9, v10);
    v12[2](v12, v11, isOffline ^ 1u);
  }

}

void sub_227D9F84C(uint64_t a1)
{
  id v2;
  const char *v3;
  uint64_t v4;
  uint64_t v5;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  const char *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  const char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  id v21;

  if (*(_QWORD *)(a1 + 32))
  {
    v2 = objc_alloc(MEMORY[0x24BDB91F8]);
    v5 = objc_msgSend_initWithZoneName_ownerName_(v2, v3, *(_QWORD *)(a1 + 32), *MEMORY[0x24BDB8E88], v4);
    v10 = *(_QWORD *)(a1 + 48);
    if (v5)
    {
      v21 = (id)v5;
      objc_msgSend_recordZones(*(void **)(a1 + 40), v6, v7, v8, v9);
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend_objectForKeyedSubscript_(v11, v12, (uint64_t)v21, v13, v14);
      v15 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend_recordZone(v15, v16, v17, v18, v19);
      v20 = (void *)objc_claimAutoreleasedReturnValue();
      (*(void (**)(uint64_t, void *))(v10 + 16))(v10, v20);

      return;
    }
  }
  else
  {
    v10 = *(_QWORD *)(a1 + 48);
  }
  (*(void (**)(uint64_t, _QWORD))(v10 + 16))(v10, 0);
}

void sub_227D9FD48(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_227D9FD88(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v5;
  id WeakRetained;
  void *v7;
  NSObject *v8;
  const char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  const char *v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  const char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  double v22;
  dispatch_time_t v23;
  const char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  NSObject *v28;
  _QWORD v29[4];
  id v30;
  id v31;
  uint8_t buf[4];
  id v33;
  uint64_t v34;

  v34 = *MEMORY[0x24BDAC8D0];
  v5 = a4;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v7 = WeakRetained;
  if (v5 && WeakRetained)
  {
    BDSCloudKitLog();
    v8 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)buf = 138543362;
      v33 = v5;
      _os_log_impl(&dword_227D4F000, v8, OS_LOG_TYPE_INFO, "CKModifySubscriptionsOperation failed: %{public}@", buf, 0xCu);
    }

    objc_msgSend_userInfo(v5, v9, v10, v11, v12);
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_objectForKeyedSubscript_(v13, v14, *MEMORY[0x24BDB8EB8], v15, v16);
    v17 = (void *)objc_claimAutoreleasedReturnValue();

    if (v17)
    {
      objc_msgSend_doubleValue(v17, v18, v19, v20, v21);
      v23 = dispatch_time(0, (uint64_t)(v22 * 1000000000.0));
      objc_msgSend_accessQueue(v7, v24, v25, v26, v27);
      v28 = objc_claimAutoreleasedReturnValue();
      v29[0] = MEMORY[0x24BDAC760];
      v29[1] = 3221225472;
      v29[2] = sub_227D9FF28;
      v29[3] = &unk_24F08A408;
      v30 = v7;
      v31 = *(id *)(a1 + 32);
      dispatch_after(v23, v28, v29);

    }
  }

}

uint64_t sub_227D9FF28(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return objc_msgSend_p_unsubscribeToContainer_(*(void **)(a1 + 32), a2, *(_QWORD *)(a1 + 40), a4, a5);
}

void sub_227DA0294(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_227DA02DC(void **a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v5;
  id WeakRetained;
  NSObject *v7;
  _BOOL4 v8;
  const char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  const char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  const char *v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  const char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  double v27;
  dispatch_time_t v28;
  const char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  NSObject *v33;
  void *v34;
  void *v35;
  const char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  const char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  NSObject *v45;
  void *v46;
  void *v47;
  void *v48;
  _QWORD v49[4];
  id v50;
  id v51;
  _QWORD block[4];
  id v53;
  id v54;
  uint8_t buf[4];
  void *v56;
  __int16 v57;
  id v58;
  uint64_t v59;

  v59 = *MEMORY[0x24BDAC8D0];
  v5 = a4;
  WeakRetained = objc_loadWeakRetained(a1 + 6);
  if (WeakRetained)
  {
    BDSCloudKitLog();
    v7 = objc_claimAutoreleasedReturnValue();
    v8 = os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT);
    if (v5)
    {
      if (v8)
      {
        objc_msgSend_containerIdentifier(a1[4], v9, v10, v11, v12);
        v13 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138543618;
        v56 = v13;
        v57 = 2114;
        v58 = v5;
        _os_log_impl(&dword_227D4F000, v7, OS_LOG_TYPE_DEFAULT, "CKModifySubscriptionsOperation (%{public}@) failed: %{public}@", buf, 0x16u);

      }
      objc_msgSend_userInfo(v5, v14, v15, v16, v17);
      v18 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend_objectForKeyedSubscript_(v18, v19, *MEMORY[0x24BDB8EB8], v20, v21);
      v22 = (void *)objc_claimAutoreleasedReturnValue();

      if (v22)
      {
        objc_msgSend_doubleValue(v22, v23, v24, v25, v26);
        v28 = dispatch_time(0, (uint64_t)(v27 * 1000000000.0));
        objc_msgSend_accessQueue(WeakRetained, v29, v30, v31, v32);
        v33 = objc_claimAutoreleasedReturnValue();
        block[0] = MEMORY[0x24BDAC760];
        block[1] = 3221225472;
        block[2] = sub_227DA05BC;
        block[3] = &unk_24F08A928;
        v53 = WeakRetained;
        v54 = a1[5];
        dispatch_after(v28, v33, block);

        v34 = v53;
      }
      else
      {
        v48 = _Block_copy(a1[5]);
        v34 = v48;
        if (v48)
          (*((void (**)(void *))v48 + 2))(v48);
      }

      goto LABEL_17;
    }
    if (v8)
    {
      objc_msgSend_containerIdentifier(a1[4], v9, v10, v11, v12);
      v35 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138543362;
      v56 = v35;
      _os_log_impl(&dword_227D4F000, v7, OS_LOG_TYPE_DEFAULT, "CKModifySubscriptionsOperation Success for: (%{public}@)", buf, 0xCu);

    }
    objc_msgSend_accessQueue(WeakRetained, v36, v37, v38, v39);
    v40 = (void *)objc_claimAutoreleasedReturnValue();

    if (v40)
    {
      objc_msgSend_accessQueue(WeakRetained, v41, v42, v43, v44);
      v45 = objc_claimAutoreleasedReturnValue();
      v49[0] = MEMORY[0x24BDAC760];
      v49[1] = 3221225472;
      v49[2] = sub_227DA05C8;
      v49[3] = &unk_24F08A928;
      v50 = WeakRetained;
      v51 = a1[5];
      dispatch_async(v45, v49);

      goto LABEL_17;
    }
  }
  v46 = _Block_copy(a1[5]);
  v47 = v46;
  if (v46)
    (*((void (**)(void *))v46 + 2))(v46);

LABEL_17:
}

uint64_t sub_227DA05BC(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return objc_msgSend_p_subscribeWithCompletion_(*(void **)(a1 + 32), a2, *(_QWORD *)(a1 + 40), a4, a5);
}

uint64_t sub_227DA05C8(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  const char *v6;
  uint64_t v7;
  uint64_t v8;

  objc_msgSend_setHasSubscription_(*(void **)(a1 + 32), a2, 1, a4, a5);
  return objc_msgSend_p_scheduleArchiveWithCompletion_(*(void **)(a1 + 32), v6, *(_QWORD *)(a1 + 40), v7, v8);
}

void sub_227DA0A6C(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 176), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_227DA0A98(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_227DA0AA8(uint64_t a1)
{

}

void sub_227DA0AB0(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  const char *v5;
  uint64_t v6;
  uint64_t v7;
  const char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  id v13;
  _QWORD v14[5];
  id v15;
  uint8_t buf[4];
  id v17;
  uint64_t v18;

  v18 = *MEMORY[0x24BDAC8D0];
  v3 = a2;
  BDSCloudKitLog();
  v4 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 138543362;
    v17 = v3;
    _os_log_impl(&dword_227D4F000, v4, OS_LOG_TYPE_DEFAULT, "CKFetchDatabaseChangesOperation zoneID was deleted: %{public}@", buf, 0xCu);
  }

  objc_msgSend_addObject_(*(void **)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), v5, (uint64_t)v3, v6, v7);
  objc_msgSend_accessQueue(*(void **)(a1 + 32), v8, v9, v10, v11);
  v12 = objc_claimAutoreleasedReturnValue();
  v14[0] = MEMORY[0x24BDAC760];
  v14[1] = 3221225472;
  v14[2] = sub_227DA0BDC;
  v14[3] = &unk_24F08A408;
  v14[4] = *(_QWORD *)(a1 + 32);
  v15 = v3;
  v13 = v3;
  dispatch_async(v12, v14);

}

void sub_227DA0BDC(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  const char *v6;
  uint64_t v7;
  id v8;

  objc_msgSend_recordZones(*(void **)(a1 + 32), a2, a3, a4, a5);
  v8 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend_setObject_forKeyedSubscript_(v8, v6, 0, *(_QWORD *)(a1 + 40), v7);

}

void sub_227DA0C20(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  const char *v5;
  uint64_t v6;
  uint64_t v7;
  const char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  id v13;
  _QWORD v14[5];
  id v15;
  uint8_t buf[4];
  id v17;
  uint64_t v18;

  v18 = *MEMORY[0x24BDAC8D0];
  v3 = a2;
  BDSCloudKitLog();
  v4 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 138543362;
    v17 = v3;
    _os_log_impl(&dword_227D4F000, v4, OS_LOG_TYPE_DEFAULT, "CKFetchDatabaseChangesOperation zoneID was purged: %{public}@", buf, 0xCu);
  }

  objc_msgSend_addObject_(*(void **)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), v5, (uint64_t)v3, v6, v7);
  objc_msgSend_accessQueue(*(void **)(a1 + 32), v8, v9, v10, v11);
  v12 = objc_claimAutoreleasedReturnValue();
  v14[0] = MEMORY[0x24BDAC760];
  v14[1] = 3221225472;
  v14[2] = sub_227DA0D4C;
  v14[3] = &unk_24F08A408;
  v14[4] = *(_QWORD *)(a1 + 32);
  v15 = v3;
  v13 = v3;
  dispatch_async(v12, v14);

}

void sub_227DA0D4C(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  const char *v6;
  uint64_t v7;
  id v8;

  objc_msgSend_recordZones(*(void **)(a1 + 32), a2, a3, a4, a5);
  v8 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend_setObject_forKeyedSubscript_(v8, v6, 0, *(_QWORD *)(a1 + 40), v7);

}

void sub_227DA0D90(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  const char *v5;
  uint64_t v6;
  uint64_t v7;
  const char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  id v13;
  _QWORD v14[5];
  id v15;
  uint8_t buf[4];
  id v17;
  uint64_t v18;

  v18 = *MEMORY[0x24BDAC8D0];
  v3 = a2;
  BDSCloudKitLog();
  v4 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 138543362;
    v17 = v3;
    _os_log_impl(&dword_227D4F000, v4, OS_LOG_TYPE_DEFAULT, "CKFetchDatabaseChangesOperation zoneID was deleted due to user encrypted data reset: %{public}@", buf, 0xCu);
  }

  objc_msgSend_addObject_(*(void **)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), v5, (uint64_t)v3, v6, v7);
  objc_msgSend_accessQueue(*(void **)(a1 + 32), v8, v9, v10, v11);
  v12 = objc_claimAutoreleasedReturnValue();
  v14[0] = MEMORY[0x24BDAC760];
  v14[1] = 3221225472;
  v14[2] = sub_227DA0EBC;
  v14[3] = &unk_24F08A408;
  v14[4] = *(_QWORD *)(a1 + 32);
  v15 = v3;
  v13 = v3;
  dispatch_async(v12, v14);

}

void sub_227DA0EBC(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  const char *v6;
  uint64_t v7;
  id v8;

  objc_msgSend_recordZones(*(void **)(a1 + 32), a2, a3, a4, a5);
  v8 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend_setObject_forKeyedSubscript_(v8, v6, 0, *(_QWORD *)(a1 + 40), v7);

}

void sub_227DA0F00(uint64_t a1, void *a2)
{
  id v3;
  const char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  uint64_t v9;
  id v10;
  _QWORD v11[4];
  id v12;
  uint64_t v13;

  v3 = a2;
  objc_msgSend_accessQueue(*(void **)(a1 + 32), v4, v5, v6, v7);
  v8 = objc_claimAutoreleasedReturnValue();
  v11[0] = MEMORY[0x24BDAC760];
  v11[1] = 3221225472;
  v11[2] = sub_227DA0F9C;
  v11[3] = &unk_24F08A408;
  v9 = *(_QWORD *)(a1 + 32);
  v12 = v3;
  v13 = v9;
  v10 = v3;
  dispatch_async(v8, v11);

}

uint64_t sub_227DA0F9C(uint64_t a1)
{
  NSObject *v2;
  uint64_t v3;
  const char *v4;
  uint64_t v5;
  uint64_t v6;
  const char *v7;
  uint64_t v8;
  uint64_t v9;
  int v11;
  uint64_t v12;
  uint64_t v13;

  v13 = *MEMORY[0x24BDAC8D0];
  BDSCloudKitLog();
  v2 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    v3 = *(_QWORD *)(a1 + 32);
    v11 = 138543362;
    v12 = v3;
    _os_log_impl(&dword_227D4F000, v2, OS_LOG_TYPE_DEFAULT, "CKFetchDatabaseChangesOperation serverChangeToken was updated: %{public}@", (uint8_t *)&v11, 0xCu);
  }

  objc_msgSend_setServerChangeToken_(*(void **)(a1 + 40), v4, *(_QWORD *)(a1 + 32), v5, v6);
  return objc_msgSend_p_scheduleArchiveWithCompletion_(*(void **)(a1 + 40), v7, (uint64_t)&unk_24F08AAB0, v8, v9);
}

void sub_227DA1058()
{
  NSObject *v0;
  uint8_t v1[16];

  BDSCloudKitLog();
  v0 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v0, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)v1 = 0;
    _os_log_impl(&dword_227D4F000, v0, OS_LOG_TYPE_DEFAULT, "BCCloudKitDatabaseController - archiveComplete (changeTokenUpdatedBlock)", v1, 2u);
  }

}

void sub_227DA10BC(uint64_t a1, void *a2)
{
  id v3;
  const char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  id v9;
  uint64_t v10;
  id v11;
  _QWORD block[4];
  id v13;
  id v14;
  uint64_t v15;

  v3 = a2;
  objc_msgSend_accessQueue(*(void **)(a1 + 32), v4, v5, v6, v7);
  v8 = objc_claimAutoreleasedReturnValue();
  block[0] = MEMORY[0x24BDAC760];
  block[1] = 3221225472;
  block[2] = sub_227DA116C;
  block[3] = &unk_24F08A3B8;
  v13 = v3;
  v9 = *(id *)(a1 + 40);
  v10 = *(_QWORD *)(a1 + 32);
  v14 = v9;
  v15 = v10;
  v11 = v3;
  dispatch_async(v8, block);

}

void sub_227DA116C(uint64_t a1)
{
  NSObject *v2;
  uint64_t v3;
  void *v4;
  const char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  const char *v10;
  uint64_t v11;
  uint64_t v12;
  const char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  const char *v18;
  uint64_t v19;
  uint64_t v20;
  const char *v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;

  v26 = *MEMORY[0x24BDAC8D0];
  BDSCloudKitLog();
  v2 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    v3 = *(_QWORD *)(a1 + 32);
    v24 = 138543362;
    v25 = v3;
    _os_log_impl(&dword_227D4F000, v2, OS_LOG_TYPE_DEFAULT, "CKFetchDatabaseChangesOperation zoneID was changed: %{public}@", (uint8_t *)&v24, 0xCu);
  }

  v4 = *(void **)(a1 + 40);
  objc_msgSend_zoneName(*(void **)(a1 + 32), v5, v6, v7, v8);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  LODWORD(v4) = objc_msgSend_containsObject_(v4, v10, (uint64_t)v9, v11, v12);

  if ((_DWORD)v4)
  {
    objc_msgSend_changedRecordZoneIDs(*(void **)(a1 + 48), v13, v14, v15, v16);
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_addObject_(v17, v18, *(_QWORD *)(a1 + 32), v19, v20);

    objc_msgSend_p_scheduleArchiveWithCompletion_(*(void **)(a1 + 48), v21, (uint64_t)&unk_24F08AAF8, v22, v23);
  }
}

void sub_227DA126C()
{
  NSObject *v0;
  uint8_t v1[16];

  BDSCloudKitLog();
  v0 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v0, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)v1 = 0;
    _os_log_impl(&dword_227D4F000, v0, OS_LOG_TYPE_DEFAULT, "BCCloudKitDatabaseController - archiveComplete (recordZoneWithIDChangedBlock)", v1, 2u);
  }

}

void sub_227DA12D0(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  id v6;
  id v7;
  const char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  const char *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  void (**v18)(void);
  void (**v19)(void);
  void (*v20)(void);
  NSObject *v21;
  NSObject *v22;
  const char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  NSObject *v27;
  void (**v28)(void);
  _QWORD v29[5];
  id v30;
  id v31;
  _QWORD v32[5];
  uint8_t buf[4];
  id v34;
  uint64_t v35;

  v35 = *MEMORY[0x24BDAC8D0];
  v6 = a2;
  v7 = a4;
  if (objc_msgSend_count(*(void **)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40), v8, v9, v10, v11))
  {
    v14 = *(void **)(a1 + 32);
    v15 = *(_QWORD *)(a1 + 48);
    v16 = *(_QWORD *)(*(_QWORD *)(v15 + 8) + 40);
    v32[0] = MEMORY[0x24BDAC760];
    v32[1] = 3221225472;
    v32[2] = sub_227DA151C;
    v32[3] = &unk_24F08AB48;
    v32[4] = v15;
    objc_msgSend_zonesDeletedOrReset_completion_(v14, v12, v16, (uint64_t)v32, v13);
  }
  if (v7)
  {
    BDSCloudKitLog();
    v17 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR))
      sub_227E5C2E8();

    v18 = (void (**)(void))_Block_copy(*(const void **)(a1 + 40));
    v19 = v18;
    if (!v18)
      goto LABEL_9;
    v20 = v18[2];
LABEL_8:
    v20();
LABEL_9:

    goto LABEL_14;
  }
  BDSCloudKitLog();
  v21 = objc_claimAutoreleasedReturnValue();
  v22 = v21;
  if (!v6)
  {
    if (os_log_type_enabled(v21, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)buf = 0;
      _os_log_impl(&dword_227D4F000, v22, OS_LOG_TYPE_INFO, "CKFetchDatabaseChangesOperation Success, but no serverChangeToken", buf, 2u);
    }

    v28 = (void (**)(void))_Block_copy(*(const void **)(a1 + 40));
    v19 = v28;
    if (!v28)
      goto LABEL_9;
    v20 = v28[2];
    goto LABEL_8;
  }
  if (os_log_type_enabled(v21, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 138543362;
    v34 = v6;
    _os_log_impl(&dword_227D4F000, v22, OS_LOG_TYPE_DEFAULT, "CKFetchDatabaseChangesOperation Success, serverChangeToken: %{public}@", buf, 0xCu);
  }

  objc_msgSend_accessQueue(*(void **)(a1 + 32), v23, v24, v25, v26);
  v27 = objc_claimAutoreleasedReturnValue();
  v29[0] = MEMORY[0x24BDAC760];
  v29[1] = 3221225472;
  v29[2] = sub_227DA15C8;
  v29[3] = &unk_24F08A9C8;
  v29[4] = *(_QWORD *)(a1 + 32);
  v30 = v6;
  v31 = *(id *)(a1 + 40);
  dispatch_async(v27, v29);

LABEL_14:
}

void sub_227DA151C(uint64_t a1)
{
  NSObject *v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;

  v6 = *MEMORY[0x24BDAC8D0];
  BDSCloudKitLog();
  v2 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    v3 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40);
    v4 = 138543362;
    v5 = v3;
    _os_log_impl(&dword_227D4F000, v2, OS_LOG_TYPE_DEFAULT, "CKFetchDatabaseChangesOperation - zonesDeletedOrReset DONE: %{public}@", (uint8_t *)&v4, 0xCu);
  }

}

void sub_227DA15C8(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v6;
  void *v7;
  void *v8;
  const char *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v12[4];
  id v13;

  objc_msgSend_setServerChangeToken_(*(void **)(a1 + 32), a2, *(_QWORD *)(a1 + 40), a4, a5);
  v6 = _Block_copy(*(const void **)(a1 + 48));
  v7 = v6;
  if (v6)
    (*((void (**)(void *, _QWORD))v6 + 2))(v6, 0);

  v12[0] = MEMORY[0x24BDAC760];
  v12[1] = 3221225472;
  v12[2] = sub_227DA1664;
  v12[3] = &unk_24F08A3E0;
  v8 = *(void **)(a1 + 32);
  v13 = *(id *)(a1 + 40);
  objc_msgSend_p_scheduleArchiveWithCompletion_(v8, v9, (uint64_t)v12, v10, v11);

}

void sub_227DA1664(uint64_t a1)
{
  NSObject *v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;

  v6 = *MEMORY[0x24BDAC8D0];
  BDSCloudKitLog();
  v2 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    v3 = *(_QWORD *)(a1 + 32);
    v4 = 138543362;
    v5 = v3;
    _os_log_impl(&dword_227D4F000, v2, OS_LOG_TYPE_DEFAULT, "BCCloudKitDatabaseController - archiveComplete (fetchDatabaseChangesCompletionBlock), serverChangeToken: %{public}@", (uint8_t *)&v4, 0xCu);
  }

}

void sub_227DA1A3C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
  id *v19;

  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_227DA1A64(id *a1, void *a2, void *a3)
{
  id v5;
  id v6;
  NSObject *v7;
  const char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;
  id v14;
  const char *v15;
  uint64_t v16;
  uint64_t v17;
  const char *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  void *v22;
  id v23;
  id v24;
  const char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (**v29)(_QWORD);
  NSObject *v30;
  const char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  NSObject *v35;
  void *v36;
  void *v37;
  void *v38;
  void *v39;
  const char *v40;
  uint64_t v41;
  uint64_t v42;
  const char *v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  const char *v47;
  uint64_t v48;
  uint64_t v49;
  int isEqualToSet;
  NSObject *v51;
  const char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  NSObject *v56;
  NSObject *v57;
  id v58;
  id v59;
  id v60;
  const char *v61;
  uint64_t v62;
  uint64_t v63;
  const char *v64;
  uint64_t v65;
  uint64_t v66;
  void *v67;
  const char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  id v72;
  id v73;
  id v74;
  const char *v75;
  uint64_t v76;
  uint64_t v77;
  const char *v78;
  uint64_t v79;
  uint64_t v80;
  void *v81;
  const char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  void *v86;
  const char *v87;
  uint64_t v88;
  uint64_t v89;
  id WeakRetained;
  const char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  NSObject *v95;
  const char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  double v100;
  dispatch_time_t v101;
  NSObject *v102;
  NSObject *v103;
  id *location;
  _QWORD block[4];
  id v106;
  id v107;
  id v108;
  _QWORD v109[4];
  id v110;
  id v111;
  id v112;
  id v113;
  id v114;
  id v115;
  id v116;
  _QWORD aBlock[4];
  id v118;
  id v119;
  uint8_t v120[4];
  id *v121;
  __int16 v122;
  void *v123;
  __int128 buf;
  void (*v125)(uint64_t, void *, uint64_t, uint64_t, uint64_t);
  void *v126;
  id v127;
  uint64_t v128;

  v128 = *MEMORY[0x24BDAC8D0];
  v5 = a2;
  v6 = a3;
  BDSCloudKitLog();
  v7 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    objc_msgSend_allKeys(v5, v8, v9, v10, v11);
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    v13 = objc_alloc_init(MEMORY[0x24BDBCEB8]);
    *(_QWORD *)&buf = MEMORY[0x24BDAC760];
    *((_QWORD *)&buf + 1) = 3221225472;
    v125 = sub_227DA9AE8;
    v126 = &unk_24F08B088;
    v127 = v13;
    v14 = v13;
    objc_msgSend_enumerateObjectsUsingBlock_(v12, v15, (uint64_t)&buf, v16, v17);
    objc_msgSend_componentsJoinedByString_(v14, v18, (uint64_t)CFSTR(","), v19, v20);
    v21 = (void *)objc_claimAutoreleasedReturnValue();

    LODWORD(buf) = 138543362;
    *(_QWORD *)((char *)&buf + 4) = v21;
    _os_log_impl(&dword_227D4F000, v7, OS_LOG_TYPE_DEFAULT, "3. BCCloudKitDatabaseController - fetchRecordZonesOperation.fetchRecordZonesCompletionBlock fetchedZones:[%{public}@]", (uint8_t *)&buf, 0xCu);

  }
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 3221225472;
  aBlock[2] = sub_227DA22EC;
  aBlock[3] = &unk_24F08ABC0;
  objc_copyWeak(&v119, a1 + 8);
  v118 = a1[7];
  v22 = _Block_copy(aBlock);
  v109[0] = MEMORY[0x24BDAC760];
  v109[1] = 3221225472;
  v109[2] = sub_227DA25FC;
  v109[3] = &unk_24F08AC60;
  v110 = a1[4];
  v23 = v5;
  v111 = v23;
  v112 = a1[5];
  v113 = a1[6];
  objc_copyWeak(&v116, a1 + 8);
  v114 = a1[7];
  v24 = v22;
  v115 = v24;
  v29 = (void (**)(_QWORD))_Block_copy(v109);
  if (!v6)
  {
    v38 = (void *)MEMORY[0x24BDBCF20];
    objc_msgSend_allKeys(v23, v25, v26, v27, v28);
    v39 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_setWithArray_(v38, v40, (uint64_t)v39, v41, v42);
    v37 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend_setWithArray_(MEMORY[0x24BDBCF20], v43, (uint64_t)a1[4], v44, v45);
    v46 = (void *)objc_claimAutoreleasedReturnValue();
    isEqualToSet = objc_msgSend_isEqualToSet_(v37, v47, (uint64_t)v46, v48, v49);

    if (!isEqualToSet)
    {
      BDSCloudKitLog();
      v57 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v57, OS_LOG_TYPE_ERROR))
      {
        v58 = a1[4];
        v59 = objc_alloc_init(MEMORY[0x24BDBCEB8]);
        *(_QWORD *)&buf = MEMORY[0x24BDAC760];
        *((_QWORD *)&buf + 1) = 3221225472;
        v125 = sub_227DA9AE8;
        v126 = &unk_24F08B088;
        v60 = v59;
        v127 = v60;
        objc_msgSend_enumerateObjectsUsingBlock_(v58, v61, (uint64_t)&buf, v62, v63);
        objc_msgSend_componentsJoinedByString_(v60, v64, (uint64_t)CFSTR(","), v65, v66);
        v67 = (void *)objc_claimAutoreleasedReturnValue();

        location = v67;
        objc_msgSend_allKeys(v23, v68, v69, v70, v71);
        v72 = (id)objc_claimAutoreleasedReturnValue();
        v73 = objc_alloc_init(MEMORY[0x24BDBCEB8]);
        *(_QWORD *)&buf = MEMORY[0x24BDAC760];
        *((_QWORD *)&buf + 1) = 3221225472;
        v125 = sub_227DA9AE8;
        v126 = &unk_24F08B088;
        v74 = v73;
        v127 = v74;
        objc_msgSend_enumerateObjectsUsingBlock_(v72, v75, (uint64_t)&buf, v76, v77);
        objc_msgSend_componentsJoinedByString_(v74, v78, (uint64_t)CFSTR(","), v79, v80);
        v81 = (void *)objc_claimAutoreleasedReturnValue();

        *(_DWORD *)v120 = 138412546;
        v121 = location;
        v122 = 2112;
        v123 = v81;
        _os_log_impl(&dword_227D4F000, v57, OS_LOG_TYPE_ERROR, "CKFetchRecordZonesOperation Wanted:%@ Received:%@", v120, 0x16u);

      }
      v29[2](v29);
      goto LABEL_30;
    }
    BDSCloudKitLog();
    v51 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v51, OS_LOG_TYPE_DEFAULT))
    {
      LOWORD(buf) = 0;
      _os_log_impl(&dword_227D4F000, v51, OS_LOG_TYPE_DEFAULT, "BCCloudKitDatabaseController - calling saveResultsBlock", (uint8_t *)&buf, 2u);
    }

    objc_msgSend_allValues(v23, v52, v53, v54, v55);
    v56 = objc_claimAutoreleasedReturnValue();
    (*((void (**)(id, NSObject *, _QWORD))v24 + 2))(v24, v56, 0);
    goto LABEL_29;
  }
  BDSCloudKitLog();
  v30 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v30, OS_LOG_TYPE_ERROR))
  {
    LODWORD(buf) = 138412290;
    *(_QWORD *)((char *)&buf + 4) = v6;
    _os_log_impl(&dword_227D4F000, v30, OS_LOG_TYPE_ERROR, "BCCloudKitDatabaseController - fetchRecordZonesOperation failed, ERROR:%@", (uint8_t *)&buf, 0xCu);
  }

  if ((sub_227D9EEB8(v6) & 1) != 0 || sub_227D9F094(v6))
  {
    BDSCloudKitLog();
    v35 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v35, OS_LOG_TYPE_DEFAULT))
    {
      LOWORD(buf) = 0;
      _os_log_impl(&dword_227D4F000, v35, OS_LOG_TYPE_DEFAULT, "BCCloudKitDatabaseController - No PCS Identity available", (uint8_t *)&buf, 2u);
    }

    v36 = _Block_copy(a1[7]);
    v37 = v36;
    if (v36)
      (*((void (**)(void *, id))v36 + 2))(v36, v6);
    goto LABEL_30;
  }
  if (objc_msgSend_code(v6, v31, v32, v33, v34) == 6 || objc_msgSend_code(v6, v82, v83, v84, v85) == 7)
  {
    objc_msgSend_userInfo(v6, v82, v83, v84, v85);
    v86 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_objectForKeyedSubscript_(v86, v87, *MEMORY[0x24BDB8EB8], v88, v89);
    v37 = (void *)objc_claimAutoreleasedReturnValue();

    WeakRetained = objc_loadWeakRetained(a1 + 8);
    objc_msgSend_accessQueue(WeakRetained, v91, v92, v93, v94);
    v56 = objc_claimAutoreleasedReturnValue();

    if (v37 && v56)
    {
      BDSCloudKitLog();
      v95 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v95, OS_LOG_TYPE_ERROR))
      {
        LODWORD(buf) = 138412290;
        *(_QWORD *)((char *)&buf + 4) = v6;
        _os_log_impl(&dword_227D4F000, v95, OS_LOG_TYPE_ERROR, "BCCloudKitDatabaseController - fetchRecordZonesOperation failed - retrying, ERROR:%@", (uint8_t *)&buf, 0xCu);
      }

      objc_msgSend_doubleValue(v37, v96, v97, v98, v99);
      v101 = dispatch_time(0, (uint64_t)(v100 * 1000000000.0));
      block[0] = MEMORY[0x24BDAC760];
      block[1] = 3221225472;
      block[2] = sub_227DA2DC8;
      block[3] = &unk_24F08AC10;
      objc_copyWeak(&v108, a1 + 8);
      v107 = a1[7];
      v106 = a1[4];
      dispatch_after(v101, v56, block);

      objc_destroyWeak(&v108);
    }
    else
    {
      BDSCloudKitLog();
      v102 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v102, OS_LOG_TYPE_ERROR))
        sub_227E5C348();

      (*((void (**)(id, _QWORD, id))v24 + 2))(v24, 0, v6);
    }
LABEL_29:

LABEL_30:
    goto LABEL_31;
  }
  if (objc_msgSend_code(v6, v82, v83, v84, v85) == 3)
  {
    BDSCloudKitLog();
    v103 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v103, OS_LOG_TYPE_ERROR))
      sub_227E5C348();
  }
  else
  {
    if (!sub_227D9F29C(v6))
    {
      v29[2](v29);
      goto LABEL_31;
    }
    BDSCloudKitLog();
    v103 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v103, OS_LOG_TYPE_ERROR))
      sub_227E5C3A8();
  }

  (*((void (**)(id, _QWORD, id))v24 + 2))(v24, 0, v6);
LABEL_31:

  objc_destroyWeak(&v116);
  objc_destroyWeak(&v119);

}

void sub_227DA2290(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id *location)
{
  id *v10;

  objc_destroyWeak(v10);
  objc_destroyWeak(location);
  _Unwind_Resume(a1);
}

void sub_227DA22EC(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id WeakRetained;
  const char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  NSObject *v13;
  void *v14;
  void *v15;
  _QWORD v16[4];
  id v17;
  id v18;

  v5 = a2;
  v6 = a3;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v12 = WeakRetained;
  if (WeakRetained)
  {
    objc_msgSend_accessQueue(WeakRetained, v8, v9, v10, v11);
    v13 = objc_claimAutoreleasedReturnValue();
    v16[0] = MEMORY[0x24BDAC760];
    v16[1] = 3221225472;
    v16[2] = sub_227DA23E0;
    v16[3] = &unk_24F08A408;
    v17 = v12;
    v18 = v5;
    dispatch_async(v13, v16);

    v14 = _Block_copy(*(const void **)(a1 + 32));
    v15 = v14;
    if (v14)
      (*((void (**)(void *, id))v14 + 2))(v14, v6);

  }
}

void sub_227DA23E0(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v6;
  NSObject *v7;
  _BOOL4 v8;
  uint64_t v9;
  objc_class *v10;
  id v11;
  id v12;
  const char *v13;
  uint64_t v14;
  uint64_t v15;
  const char *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  void *v20;
  id v21;
  const char *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD v25[4];
  id v26;
  __int128 buf;
  void (*v28)(uint64_t, void *, uint64_t, uint64_t, uint64_t);
  void *v29;
  id v30;
  uint64_t v31;

  v31 = *MEMORY[0x24BDAC8D0];
  objc_msgSend_recordZones(*(void **)(a1 + 32), a2, a3, a4, a5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  BDSCloudKitLog();
  v7 = objc_claimAutoreleasedReturnValue();
  v8 = os_log_type_enabled(v7, OS_LOG_TYPE_INFO);
  v9 = MEMORY[0x24BDAC760];
  if (v8)
  {
    v10 = (objc_class *)MEMORY[0x24BDBCEB8];
    v11 = *(id *)(a1 + 40);
    *(_QWORD *)&buf = v9;
    *((_QWORD *)&buf + 1) = 3221225472;
    v28 = sub_227DA9B2C;
    v29 = &unk_24F08AB98;
    v30 = objc_alloc_init(v10);
    v12 = v30;
    objc_msgSend_enumerateObjectsUsingBlock_(v11, v13, (uint64_t)&buf, v14, v15);
    objc_msgSend_componentsJoinedByString_(v12, v16, (uint64_t)CFSTR(","), v17, v18);
    v19 = (void *)objc_claimAutoreleasedReturnValue();

    LODWORD(buf) = 138543362;
    *(_QWORD *)((char *)&buf + 4) = v19;
    _os_log_impl(&dword_227D4F000, v7, OS_LOG_TYPE_INFO, "BCCloudKitDatabaseController - assigning recordZones[%{public}@]", (uint8_t *)&buf, 0xCu);

  }
  v20 = *(void **)(a1 + 40);
  v25[0] = v9;
  v25[1] = 3221225472;
  v25[2] = sub_227DA257C;
  v25[3] = &unk_24F08AB98;
  v26 = v6;
  v21 = v6;
  objc_msgSend_enumerateObjectsUsingBlock_(v20, v22, (uint64_t)v25, v23, v24);

}

void sub_227DA257C(uint64_t a1, void *a2)
{
  id v3;
  BCCloudKitRecordZone *v4;
  const char *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  const char *v14;
  uint64_t v15;
  id v16;

  v3 = a2;
  v4 = [BCCloudKitRecordZone alloc];
  v16 = (id)objc_msgSend_initWithRecordZone_(v4, v5, (uint64_t)v3, v6, v7);
  v8 = *(void **)(a1 + 32);
  objc_msgSend_zoneID(v3, v9, v10, v11, v12);
  v13 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend_setObject_forKeyedSubscript_(v8, v14, (uint64_t)v16, (uint64_t)v13, v15);
}

void sub_227DA25FC(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v6;
  const char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  const char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  const char *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  const char *v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  id v27;
  const char *v28;
  uint64_t v29;
  uint64_t v30;
  NSObject *v31;
  const char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  id v37;
  id v38;
  const char *v39;
  uint64_t v40;
  uint64_t v41;
  const char *v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  id v46;
  const char *v47;
  uint64_t v48;
  void *v49;
  const char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void *v54;
  const char *v55;
  uint64_t v56;
  uint64_t v57;
  const char *v58;
  uint64_t v59;
  uint64_t v60;
  const char *v61;
  uint64_t v62;
  uint64_t v63;
  id v64;
  id v65;
  const char *v66;
  uint64_t v67;
  uint64_t v68;
  const char *v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD v72[4];
  id v73;
  id v74;
  id v75;
  id v76;
  id v77;
  id v78;
  _QWORD v79[4];
  id v80;
  __int128 buf;
  void (*v82)(uint64_t, void *, uint64_t, uint64_t, uint64_t);
  void *v83;
  id v84;
  uint64_t v85;

  v85 = *MEMORY[0x24BDAC8D0];
  objc_msgSend_setWithArray_(MEMORY[0x24BDBCEF0], a2, *(_QWORD *)(a1 + 32), a4, a5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_allValues(*(void **)(a1 + 40), v7, v8, v9, v10);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  v12 = (void *)MEMORY[0x24BDBCF20];
  objc_msgSend_allKeys(*(void **)(a1 + 40), v13, v14, v15, v16);
  v17 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_setWithArray_(v12, v18, (uint64_t)v17, v19, v20);
  v21 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_minusSet_(v6, v22, (uint64_t)v21, v23, v24);

  v25 = objc_alloc_init(MEMORY[0x24BDBCEB8]);
  v26 = MEMORY[0x24BDAC760];
  v79[0] = MEMORY[0x24BDAC760];
  v79[1] = 3221225472;
  v79[2] = sub_227DA2940;
  v79[3] = &unk_24F08ABE8;
  v27 = v25;
  v80 = v27;
  objc_msgSend_enumerateObjectsUsingBlock_(v6, v28, (uint64_t)v79, v29, v30);
  BDSCloudKitLog();
  v31 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v31, OS_LOG_TYPE_ERROR))
  {
    objc_msgSend_allObjects(v6, v32, v33, v34, v35);
    v36 = (void *)objc_claimAutoreleasedReturnValue();
    v37 = objc_alloc_init(MEMORY[0x24BDBCEB8]);
    *(_QWORD *)&buf = v26;
    *((_QWORD *)&buf + 1) = 3221225472;
    v82 = sub_227DA9AE8;
    v83 = &unk_24F08B088;
    v84 = v37;
    v38 = v37;
    objc_msgSend_enumerateObjectsUsingBlock_(v36, v39, (uint64_t)&buf, v40, v41);
    objc_msgSend_componentsJoinedByString_(v38, v42, (uint64_t)CFSTR(","), v43, v44);
    v45 = (void *)objc_claimAutoreleasedReturnValue();

    LODWORD(buf) = 138543362;
    *(_QWORD *)((char *)&buf + 4) = v45;
    _os_log_impl(&dword_227D4F000, v31, OS_LOG_TYPE_ERROR, "BCCloudKitDatabaseController - One or more zones are missing newRecordZones:[%{public}@]", (uint8_t *)&buf, 0xCu);

  }
  v46 = objc_alloc(MEMORY[0x24BDB9150]);
  v49 = (void *)objc_msgSend_initWithRecordZonesToSave_recordZoneIDsToDelete_(v46, v47, (uint64_t)v27, 0, v48);
  objc_msgSend_bds_defaultConfiguration(MEMORY[0x24BDB9188], v50, v51, v52, v53);
  v54 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_setContainer_(v54, v55, *(_QWORD *)(a1 + 48), v56, v57);
  objc_msgSend_setConfiguration_(v49, v58, (uint64_t)v54, v59, v60);
  objc_msgSend_setDatabase_(v49, v61, *(_QWORD *)(a1 + 56), v62, v63);
  v72[0] = v26;
  v72[1] = 3221225472;
  v72[2] = sub_227DA29A4;
  v72[3] = &unk_24F08AC38;
  objc_copyWeak(&v78, (id *)(a1 + 80));
  v64 = v27;
  v73 = v64;
  v76 = *(id *)(a1 + 64);
  v74 = *(id *)(a1 + 32);
  v77 = *(id *)(a1 + 72);
  v65 = v11;
  v75 = v65;
  objc_msgSend_setModifyRecordZonesCompletionBlock_(v49, v66, (uint64_t)v72, v67, v68);
  objc_msgSend_addOperation_(*(void **)(a1 + 56), v69, (uint64_t)v49, v70, v71);

  objc_destroyWeak(&v78);
}

void sub_227DA2920(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_227DA2940(uint64_t a1, void *a2)
{
  objc_class *v3;
  id v4;
  id v5;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  const char *v9;
  uint64_t v10;
  uint64_t v11;
  id v12;

  v3 = (objc_class *)MEMORY[0x24BDB91F0];
  v4 = a2;
  v5 = [v3 alloc];
  v12 = (id)objc_msgSend_initWithZoneID_(v5, v6, (uint64_t)v4, v7, v8);

  objc_msgSend_addObject_(*(void **)(a1 + 32), v9, (uint64_t)v12, v10, v11);
}

void sub_227DA29A4(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  id v6;
  id v7;
  const char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  const char *v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  id WeakRetained;
  const char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  const char *v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  void *v29;
  NSObject *v30;
  objc_class *v31;
  id v32;
  id v33;
  id v34;
  const char *v35;
  uint64_t v36;
  uint64_t v37;
  const char *v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  NSObject *v42;
  _BOOL4 v43;
  uint64_t v44;
  char *v45;
  objc_class *v46;
  id v47;
  id v48;
  const char *v49;
  uint64_t v50;
  uint64_t v51;
  const char *v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  const char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  double v60;
  dispatch_time_t v61;
  _QWORD block[4];
  id v63;
  id v64;
  id v65;
  _BYTE buf[24];
  void *v67;
  id v68;
  uint64_t v69;

  v69 = *MEMORY[0x24BDAC8D0];
  v6 = a2;
  v7 = a4;
  v12 = v7;
  if (v7)
  {
    objc_msgSend_userInfo(v7, v8, v9, v10, v11);
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_objectForKeyedSubscript_(v13, v14, *MEMORY[0x24BDB8EB8], v15, v16);
    v17 = (void *)objc_claimAutoreleasedReturnValue();

    WeakRetained = objc_loadWeakRetained((id *)(a1 + 72));
    objc_msgSend_accessQueue(WeakRetained, v19, v20, v21, v22);
    v23 = objc_claimAutoreleasedReturnValue();

    if (v17)
      v27 = v23 == 0;
    else
      v27 = 1;
    if (v27)
    {
      v28 = *(_QWORD *)(a1 + 64);
      objc_msgSend_arrayByAddingObjectsFromArray_(*(void **)(a1 + 48), v24, (uint64_t)v6, v25, v26);
      v29 = (void *)objc_claimAutoreleasedReturnValue();
      (*(void (**)(uint64_t, void *, void *))(v28 + 16))(v28, v29, v12);

    }
    else
    {
      BDSCloudKitLog();
      v42 = objc_claimAutoreleasedReturnValue();
      v43 = os_log_type_enabled(v42, OS_LOG_TYPE_ERROR);
      v44 = MEMORY[0x24BDAC760];
      v45 = "CRDTModelLocalFileManager unable to create directory at %@ error=%@" + 64;
      if (v43)
      {
        v46 = (objc_class *)MEMORY[0x24BDBCEB8];
        v47 = *(id *)(a1 + 32);
        *(_QWORD *)buf = v44;
        *(_QWORD *)&buf[8] = 3221225472;
        *(_QWORD *)&buf[16] = sub_227DA9B2C;
        v67 = &unk_24F08AB98;
        v68 = objc_alloc_init(v46);
        v48 = v68;
        objc_msgSend_enumerateObjectsUsingBlock_(v47, v49, (uint64_t)buf, v50, v51);
        objc_msgSend_componentsJoinedByString_(v48, v52, (uint64_t)CFSTR(","), v53, v54);
        v55 = (void *)objc_claimAutoreleasedReturnValue();

        v45 = "=%@";
        *(_DWORD *)buf = 138543618;
        *(_QWORD *)&buf[4] = v55;
        *(_WORD *)&buf[12] = 2112;
        *(_QWORD *)&buf[14] = v12;
        _os_log_impl(&dword_227D4F000, v42, OS_LOG_TYPE_ERROR, "5a CKModifyRecordZonesOperation failed to modify %{public}@ retrying, ERROR:%@", buf, 0x16u);

        v44 = MEMORY[0x24BDAC760];
      }

      objc_msgSend_doubleValue(v17, v56, v57, v58, v59);
      v61 = dispatch_time(0, (uint64_t)(v60 * 1000000000.0));
      block[0] = v44;
      block[1] = *((_QWORD *)v45 + 228);
      block[2] = sub_227DA2D5C;
      block[3] = &unk_24F08AC10;
      objc_copyWeak(&v65, (id *)(a1 + 72));
      v64 = *(id *)(a1 + 56);
      v63 = *(id *)(a1 + 40);
      dispatch_after(v61, v23, block);

      objc_destroyWeak(&v65);
    }

  }
  else
  {
    objc_msgSend_arrayByAddingObjectsFromArray_(*(void **)(a1 + 48), v8, (uint64_t)v6, v10, v11);
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    BDSCloudKitLog();
    v30 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v30, OS_LOG_TYPE_DEFAULT))
    {
      v31 = (objc_class *)MEMORY[0x24BDBCEB8];
      v32 = v17;
      v33 = objc_alloc_init(v31);
      *(_QWORD *)buf = MEMORY[0x24BDAC760];
      *(_QWORD *)&buf[8] = 3221225472;
      *(_QWORD *)&buf[16] = sub_227DA9B2C;
      v67 = &unk_24F08AB98;
      v68 = v33;
      v34 = v33;
      objc_msgSend_enumerateObjectsUsingBlock_(v32, v35, (uint64_t)buf, v36, v37);

      objc_msgSend_componentsJoinedByString_(v34, v38, (uint64_t)CFSTR(","), v39, v40);
      v41 = (void *)objc_claimAutoreleasedReturnValue();

      *(_DWORD *)buf = 138543362;
      *(_QWORD *)&buf[4] = v41;
      _os_log_impl(&dword_227D4F000, v30, OS_LOG_TYPE_DEFAULT, "CKModifyRecordZonesOperation success saving: %{public}@", buf, 0xCu);

    }
    (*(void (**)(void))(*(_QWORD *)(a1 + 64) + 16))();
  }

}

void sub_227DA2D5C(uint64_t a1)
{
  const char *v2;
  uint64_t v3;
  void *v4;
  void *v5;
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  if (WeakRetained)
  {
    objc_msgSend_p_createRecordZones_completionHandler_(WeakRetained, v2, *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), v3);
  }
  else
  {
    v4 = _Block_copy(*(const void **)(a1 + 40));
    v5 = v4;
    if (v4)
      (*((void (**)(void *, _QWORD))v4 + 2))(v4, 0);

  }
}

void sub_227DA2DC8(uint64_t a1)
{
  const char *v2;
  uint64_t v3;
  void *v4;
  void *v5;
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  if (WeakRetained)
  {
    objc_msgSend_p_createRecordZones_completionHandler_(WeakRetained, v2, *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), v3);
  }
  else
  {
    v4 = _Block_copy(*(const void **)(a1 + 40));
    v5 = v4;
    if (v4)
      (*((void (**)(void *, _QWORD))v4 + 2))(v4, 0);

  }
}

void sub_227DA2FF4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_227DA3020(void **a1, void *a2, void *a3)
{
  id v5;
  id WeakRetained;
  const char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  const char *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  const char *v17;
  uint64_t v18;
  uint64_t v19;
  const char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  NSObject *v26;
  const char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  const char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  const char *v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  const char *v44;
  NSObject *v45;
  const char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  id v50;
  const char *v51;
  uint64_t v52;
  uint64_t v53;
  void *v54;
  id v55;
  const char *v56;
  uint64_t v57;
  void *v58;
  const char *v59;
  uint64_t v60;
  void *v61;
  const char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void *v66;
  const char *v67;
  uint64_t v68;
  NSObject *v69;
  const char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  void *v74;
  const char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void *v79;
  id v80;
  const char *v81;
  uint64_t v82;
  void *v83;
  id v84;
  void *v85;
  const char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  void *v90;
  const char *v91;
  uint64_t v92;
  uint64_t v93;
  const char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  void *v98;
  void *v99;
  void *v100;
  const char *v101;
  id v102;
  id v103;
  void *v104;
  const char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  void *v109;
  const char *v110;
  uint64_t v111;
  uint64_t v112;
  const char *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  void *v117;
  void *v118;
  void *v119;
  const char *v120;
  id v121;
  id v122;
  _QWORD v123[5];
  id v124;
  id v125;
  uint64_t *v126;
  id v127;
  uint64_t v128;
  uint64_t *v129;
  uint64_t v130;
  uint64_t (*v131)(uint64_t, uint64_t);
  void (*v132)(uint64_t);
  id v133;
  uint64_t v134;
  void *v135;
  uint64_t v136;
  void *v137;
  uint8_t v138[4];
  void *v139;
  uint8_t buf[32];
  __int128 v141;
  __int128 v142;
  __int128 v143;
  __int128 v144;
  __int128 v145;
  __int128 v146;
  uint64_t v147;

  v147 = *MEMORY[0x24BDAC8D0];
  v5 = a2;
  v122 = a3;
  WeakRetained = objc_loadWeakRetained(a1 + 6);
  if (!WeakRetained)
  {
    v84 = objc_alloc(MEMORY[0x24BDBCE88]);
    v85 = (void *)MEMORY[0x24BDD17C8];
    objc_msgSend_containerIdentifier(a1[4], v86, v87, v88, v89);
    v90 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_stringWithFormat_(v85, v91, (uint64_t)CFSTR("Nil weak self after fetch salt record %@"), v92, v93, v90);
    v98 = (void *)objc_claimAutoreleasedReturnValue();
    v134 = *MEMORY[0x24BDD1398];
    v99 = v122;
    if (!v122)
    {
      objc_msgSend_null(MEMORY[0x24BDBCEF8], v94, v95, v96, v97);
      v99 = (void *)objc_claimAutoreleasedReturnValue();
    }
    v135 = v99;
    objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x24BDBCE70], v94, (uint64_t)&v135, (uint64_t)&v134, 1);
    v100 = (void *)objc_claimAutoreleasedReturnValue();
    v102 = (id)objc_msgSend_initWithName_reason_userInfo_(v84, v101, (uint64_t)CFSTR("No Books Salt"), (uint64_t)v98, (uint64_t)v100);

    if (!v122)
    objc_exception_throw(v102);
  }
  v11 = WeakRetained;
  v128 = 0;
  v129 = &v128;
  v130 = 0x3032000000;
  v131 = sub_227DA0A98;
  v132 = sub_227DA0AA8;
  v133 = 0;
  if (!v5 || v122)
  {
    BDSCloudKitLog();
    v45 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v45, OS_LOG_TYPE_ERROR))
    {
      objc_msgSend_containerIdentifier(a1[4], v46, v47, v48, v49);
      v83 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138543874;
      *(_QWORD *)&buf[4] = v83;
      *(_WORD *)&buf[12] = 2112;
      *(_QWORD *)&buf[14] = v122;
      *(_WORD *)&buf[22] = 2112;
      *(_QWORD *)&buf[24] = v5;
      _os_log_error_impl(&dword_227D4F000, v45, OS_LOG_TYPE_ERROR, "(%{public}@) Error retrieving record salt: %@ serverRecord:%@.. Trying to recover", buf, 0x20u);

    }
    v145 = 0u;
    v146 = 0u;
    v143 = 0u;
    v144 = 0u;
    v141 = 0u;
    v142 = 0u;
    memset(buf, 0, sizeof(buf));
    if (SecRandomCopyBytes((SecRandomRef)*MEMORY[0x24BDE94B8], 0x80uLL, buf))
    {
      v103 = objc_alloc(MEMORY[0x24BDBCE88]);
      v104 = (void *)MEMORY[0x24BDD17C8];
      objc_msgSend_containerIdentifier(a1[4], v105, v106, v107, v108);
      v109 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend_stringWithFormat_(v104, v110, (uint64_t)CFSTR("Unable to generate random salt %@"), v111, v112, v109);
      v117 = (void *)objc_claimAutoreleasedReturnValue();
      v136 = *MEMORY[0x24BDD1398];
      v118 = v122;
      if (!v122)
      {
        objc_msgSend_null(MEMORY[0x24BDBCEF8], v113, v114, v115, v116);
        v118 = (void *)objc_claimAutoreleasedReturnValue();
      }
      v137 = v118;
      objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x24BDBCE70], v113, (uint64_t)&v137, (uint64_t)&v136, 1);
      v119 = (void *)objc_claimAutoreleasedReturnValue();
      v121 = (id)objc_msgSend_initWithName_reason_userInfo_(v103, v120, (uint64_t)CFSTR("No Books Record Salt"), (uint64_t)v117, (uint64_t)v119);

      if (!v122)
      objc_exception_throw(v121);
    }
    v50 = objc_alloc(MEMORY[0x24BDB91E8]);
    v54 = (void *)objc_msgSend_initWithRecordName_(v50, v51, (uint64_t)CFSTR("recordIDSalt"), v52, v53);
    v55 = objc_alloc(MEMORY[0x24BDB91D8]);
    v58 = (void *)objc_msgSend_initWithRecordType_recordID_(v55, v56, (uint64_t)CFSTR("recordIDSalt"), (uint64_t)v54, v57);
    objc_msgSend_dataWithBytes_length_(MEMORY[0x24BDBCE50], v59, (uint64_t)buf, 128, v60);
    v61 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_encryptedValuesByKey(v58, v62, v63, v64, v65);
    v66 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_setObject_forKeyedSubscript_(v66, v67, (uint64_t)v61, (uint64_t)CFSTR("saltEncrypted"), v68);

    BDSCloudKitSyncLog();
    v69 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v69, OS_LOG_TYPE_INFO))
    {
      objc_msgSend_containerIdentifier(a1[4], v70, v71, v72, v73);
      v74 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)v138 = 138543362;
      v139 = v74;
      _os_log_impl(&dword_227D4F000, v69, OS_LOG_TYPE_INFO, "(%{public}@) Will save record salt", v138, 0xCu);

    }
    objc_msgSend_database(a1[4], v75, v76, v77, v78);
    v79 = (void *)objc_claimAutoreleasedReturnValue();
    v123[0] = MEMORY[0x24BDAC760];
    v123[1] = 3221225472;
    v123[2] = sub_227DA377C;
    v123[3] = &unk_24F08ACB0;
    objc_copyWeak(&v127, a1 + 6);
    v123[4] = a1[4];
    v126 = &v128;
    v80 = v61;
    v124 = v80;
    v125 = a1[5];
    objc_msgSend_saveRecord_completionHandler_(v79, v81, (uint64_t)v58, (uint64_t)v123, v82);

    objc_destroyWeak(&v127);
  }
  else
  {
    objc_msgSend_encryptedValuesByKey(v5, v7, v8, v9, v10);
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_objectForKeyedSubscript_(v12, v13, (uint64_t)CFSTR("saltEncrypted"), v14, v15);
    v16 = (void *)objc_claimAutoreleasedReturnValue();

    if (!v16)
    {
      objc_msgSend_objectForKeyedSubscript_(v5, v17, (uint64_t)CFSTR("salt"), v18, v19);
      v16 = (void *)objc_claimAutoreleasedReturnValue();
    }
    objc_msgSend_setRecordIDSalt_(v11, v17, (uint64_t)v16, v18, v19);
    objc_msgSend_recordChangeTag(v5, v20, v21, v22, v23);
    v24 = objc_claimAutoreleasedReturnValue();
    v25 = (void *)v129[5];
    v129[5] = v24;

    BDSCloudKitSyncLog();
    v26 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v26, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend_containerIdentifier(a1[4], v27, v28, v29, v30);
      v31 = (void *)objc_claimAutoreleasedReturnValue();
      v32 = v129[5];
      *(_DWORD *)buf = 138543874;
      *(_QWORD *)&buf[4] = v31;
      *(_WORD *)&buf[12] = 2112;
      *(_QWORD *)&buf[14] = v16;
      *(_WORD *)&buf[22] = 2112;
      *(_QWORD *)&buf[24] = v32;
      _os_log_impl(&dword_227D4F000, v26, OS_LOG_TYPE_DEFAULT, "(%{public}@) Successfully read existing record salt salt:(%@) changeTag:(%@). Calling completion", buf, 0x20u);

    }
    v33 = v129[5];
    v34 = (void *)MEMORY[0x24BDBCF20];
    objc_msgSend_desiredRecordZoneIDs(a1[4], v35, v36, v37, v38);
    v39 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_setWithArray_(v34, v40, (uint64_t)v39, v41, v42);
    v43 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_p_informObserversOfSaltVersionIdentifierChanged_forZones_completion_(v11, v44, v33, (uint64_t)v43, (uint64_t)a1[5]);

  }
  _Block_object_dispose(&v128, 8);

}

void sub_227DA3664(_Unwind_Exception *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  uint64_t v14;
  id v17;
  NSObject *v18;
  const char *v19;
  void (**v20)(void *, void *);
  void *v21;
  va_list va;

  va_start(va, a14);
  _Block_object_dispose(va, 8);
  if (a2 == 1)
  {
    v17 = objc_begin_catch(a1);
    BDSCloudKitSyncLog();
    v18 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR))
      sub_227E5C408();

    v20 = (void (**)(void *, void *))_Block_copy(*(const void **)(v14 + 40));
    if (v20)
    {
      objc_msgSend_errorWithDomain_code_userInfo_(MEMORY[0x24BDD1540], v19, (uint64_t)CFSTR("BDSErrorDomain"), 1005, 0);
      v21 = (void *)objc_claimAutoreleasedReturnValue();
      v20[2](v20, v21);

    }
    objc_end_catch();
    JUMPOUT(0x227DA33F0);
  }
  _Unwind_Resume(a1);
}

void sub_227DA377C(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id WeakRetained;
  void *v8;
  NSObject *v9;
  const char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  const char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  const char *v20;
  uint64_t v21;
  uint64_t v22;
  const char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  const char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  const char *v33;
  uint64_t v34;
  uint64_t v35;
  NSObject *v36;
  const char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  const char *v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  NSObject *v46;
  const char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  const char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  const char *v57;
  uint64_t v58;
  uint64_t v59;
  const char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void *v66;
  NSObject *v67;
  const char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  void *v72;
  void *v73;
  const char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  void *v78;
  const char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  void *v83;
  const char *v84;
  uint64_t v85;
  uint64_t v86;
  void *v87;
  const char *v88;
  uint64_t v89;
  uint64_t v90;
  const char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  const char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  void *v101;
  NSObject *v102;
  NSObject *v103;
  const char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  void *v108;
  const char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  void *v113;
  void *v114;
  uint64_t v115;
  void *v116;
  const char *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  void *v121;
  const char *v122;
  uint64_t v123;
  uint64_t v124;
  void *v125;
  const char *v126;
  void *v127;
  id v128;
  void *v129;
  const char *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  void *v134;
  const char *v135;
  uint64_t v136;
  uint64_t v137;
  const char *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  void *v142;
  void *v143;
  void *v144;
  const char *v145;
  id v146;
  uint64_t v147;
  void *v148;
  uint8_t buf[4];
  void *v150;
  __int16 v151;
  void *v152;
  __int16 v153;
  void *v154;
  __int16 v155;
  id v156;
  uint64_t v157;

  v157 = *MEMORY[0x24BDAC8D0];
  v5 = a2;
  v6 = a3;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 64));
  if (!WeakRetained)
  {
    v128 = objc_alloc(MEMORY[0x24BDBCE88]);
    v129 = (void *)MEMORY[0x24BDD17C8];
    objc_msgSend_containerIdentifier(*(void **)(a1 + 32), v130, v131, v132, v133);
    v134 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_stringWithFormat_(v129, v135, (uint64_t)CFSTR("Nil weak self after save record %@"), v136, v137, v134);
    v142 = (void *)objc_claimAutoreleasedReturnValue();
    v147 = *MEMORY[0x24BDD1398];
    v143 = v6;
    if (!v6)
    {
      objc_msgSend_null(MEMORY[0x24BDBCEF8], v138, v139, v140, v141);
      v143 = (void *)objc_claimAutoreleasedReturnValue();
    }
    v148 = v143;
    objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x24BDBCE70], v138, (uint64_t)&v148, (uint64_t)&v147, 1);
    v144 = (void *)objc_claimAutoreleasedReturnValue();
    v146 = (id)objc_msgSend_initWithName_reason_userInfo_(v128, v145, (uint64_t)CFSTR("No Books Record Salt"), (uint64_t)v142, (uint64_t)v144);

    if (!v6)
    objc_exception_throw(v146);
  }
  v8 = WeakRetained;
  BDSCloudKitSyncLog();
  v9 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
  {
    objc_msgSend_containerIdentifier(*(void **)(a1 + 32), v10, v11, v12, v13);
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 138543362;
    v150 = v14;
    _os_log_impl(&dword_227D4F000, v9, OS_LOG_TYPE_INFO, "(%{public}@) Saving record salt....", buf, 0xCu);

  }
  objc_msgSend_domain(v6, v15, v16, v17, v18);
  v19 = (void *)objc_claimAutoreleasedReturnValue();
  if (objc_msgSend_isEqualToString_(v19, v20, *MEMORY[0x24BDB8EA8], v21, v22))
  {
    v27 = objc_msgSend_code(v6, v23, v24, v25, v26);

    if (v27 == 14)
    {
      objc_msgSend_userInfo(v6, v28, v29, v30, v31);
      v32 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend_objectForKeyedSubscript_(v32, v33, *MEMORY[0x24BDB8F10], v34, v35);
      v36 = objc_claimAutoreleasedReturnValue();

      objc_msgSend_encryptedValuesByKey(v36, v37, v38, v39, v40);
      v41 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend_objectForKeyedSubscript_(v41, v42, (uint64_t)CFSTR("saltEncrypted"), v43, v44);
      v45 = (void *)objc_claimAutoreleasedReturnValue();

      if (v36)
      {
        BDSCloudKitSyncLog();
        v46 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v46, OS_LOG_TYPE_DEFAULT))
        {
          objc_msgSend_containerIdentifier(*(void **)(a1 + 32), v47, v48, v49, v50);
          v51 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend_recordChangeTag(v36, v52, v53, v54, v55);
          v56 = (void *)objc_claimAutoreleasedReturnValue();
          *(_DWORD *)buf = 138544130;
          v150 = v51;
          v151 = 2112;
          v152 = v45;
          v153 = 2112;
          v154 = v56;
          v155 = 2112;
          v156 = v6;
          _os_log_impl(&dword_227D4F000, v46, OS_LOG_TYPE_DEFAULT, "(%{public}@) Successfully established record salt from server record salt:(%@) changeTag:(%@) error:(%@)", buf, 0x2Au);

        }
        objc_msgSend_setRecordIDSalt_(v8, v57, (uint64_t)v45, v58, v59);
        objc_msgSend_recordChangeTag(v36, v60, v61, v62, v63);
        v64 = objc_claimAutoreleasedReturnValue();
        v65 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
        v66 = *(void **)(v65 + 40);
        *(_QWORD *)(v65 + 40) = v64;

        v6 = 0;
      }

      goto LABEL_18;
    }
  }
  else
  {

  }
  BDSCloudKitSyncLog();
  v67 = objc_claimAutoreleasedReturnValue();
  v36 = v67;
  if (v6)
  {
    if (os_log_type_enabled(v67, OS_LOG_TYPE_ERROR))
      sub_227E5C4C8();
  }
  else
  {
    if (os_log_type_enabled(v67, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend_containerIdentifier(*(void **)(a1 + 32), v68, v69, v70, v71);
      v72 = (void *)objc_claimAutoreleasedReturnValue();
      v73 = *(void **)(a1 + 40);
      objc_msgSend_recordChangeTag(v5, v74, v75, v76, v77);
      v78 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138543874;
      v150 = v72;
      v151 = 2112;
      v152 = v73;
      v153 = 2112;
      v154 = v78;
      _os_log_impl(&dword_227D4F000, v36, OS_LOG_TYPE_DEFAULT, "(%{public}@) Successfully established record salt for NO ERROR salt:(%@) changeTag:(%@)", buf, 0x20u);

    }
    objc_msgSend_encryptedValuesByKey(v5, v79, v80, v81, v82);
    v83 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_objectForKeyedSubscript_(v83, v84, (uint64_t)CFSTR("saltEncrypted"), v85, v86);
    v87 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_setRecordIDSalt_(v8, v88, (uint64_t)v87, v89, v90);

    objc_msgSend_recordChangeTag(v5, v91, v92, v93, v94);
    v95 = objc_claimAutoreleasedReturnValue();
    v6 = 0;
    v96 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
    v36 = *(NSObject **)(v96 + 40);
    *(_QWORD *)(v96 + 40) = v95;
  }
LABEL_18:

  objc_msgSend_recordIDSalt(v8, v97, v98, v99, v100);
  v101 = (void *)objc_claimAutoreleasedReturnValue();

  BDSCloudKitSyncLog();
  v102 = objc_claimAutoreleasedReturnValue();
  v103 = v102;
  if (v6 || !v101)
  {
    if (os_log_type_enabled(v102, OS_LOG_TYPE_ERROR))
      sub_227E5C468();

    v127 = _Block_copy(*(const void **)(a1 + 48));
    v121 = v127;
    if (v127)
      (*((void (**)(void *, id))v127 + 2))(v127, v6);
  }
  else
  {
    if (os_log_type_enabled(v102, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend_containerIdentifier(v8, v104, v105, v106, v107);
      v108 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend_recordIDSalt(*(void **)(a1 + 32), v109, v110, v111, v112);
      v113 = (void *)objc_claimAutoreleasedReturnValue();
      v114 = *(void **)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40);
      *(_DWORD *)buf = 138543874;
      v150 = v108;
      v151 = 2112;
      v152 = v113;
      v153 = 2112;
      v154 = v114;
      _os_log_impl(&dword_227D4F000, v103, OS_LOG_TYPE_DEFAULT, "(%{public}@) *** Got record salt:(%@) changeTag:(%@)", buf, 0x20u);

    }
    v115 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40);
    v116 = (void *)MEMORY[0x24BDBCF20];
    objc_msgSend_desiredRecordZoneIDs(*(void **)(a1 + 32), v117, v118, v119, v120);
    v121 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_setWithArray_(v116, v122, (uint64_t)v121, v123, v124);
    v125 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_p_informObserversOfSaltVersionIdentifierChanged_forZones_completion_(v8, v126, v115, (uint64_t)v125, *(_QWORD *)(a1 + 48));

  }
}

void sub_227DA3EF4(void **a1, void *a2)
{
  const char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  const char *v8;
  uint64_t v9;
  uint64_t v10;
  const char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  const char *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  const char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  const char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void **v29;
  void *v30;
  const char *v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  const char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  id v40;

  v40 = a2;
  objc_msgSend_changedRecordZoneIDs(a1[4], v3, v4, v5, v6);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_msgSend_containsObject_(v7, v8, (uint64_t)v40, v9, v10) & 1) != 0)
  {
    objc_msgSend_tokenStores(a1[4], v11, v12, v13, v14);
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_objectForKeyedSubscript_(v15, v16, (uint64_t)v40, v17, v18);
    v19 = (void *)objc_claimAutoreleasedReturnValue();
    v24 = objc_msgSend_cloudSyncEnabled(v19, v20, v21, v22, v23);

    if (v24)
    {
      v29 = a1 + 5;
LABEL_7:
      objc_msgSend_addObject_(*v29, v25, (uint64_t)v40, v27, v28);
      goto LABEL_8;
    }
  }
  else
  {

  }
  objc_msgSend_tokenStores(a1[4], v25, v26, v27, v28);
  v30 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_objectForKeyedSubscript_(v30, v31, (uint64_t)v40, v32, v33);
  v34 = (void *)objc_claimAutoreleasedReturnValue();
  v39 = objc_msgSend_cloudSyncEnabled(v34, v35, v36, v37, v38);

  if (v39)
  {
    v29 = a1 + 6;
    goto LABEL_7;
  }
LABEL_8:

}

void sub_227DA3FD8(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  const char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  id v11;
  const char *v12;
  uint64_t v13;
  const char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  void *v22;
  const char *v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  void *v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  uint8_t v32[128];
  uint8_t buf[4];
  void *v34;
  __int16 v35;
  uint64_t v36;
  uint64_t v37;

  v37 = *MEMORY[0x24BDAC8D0];
  v3 = a2;
  BDSCloudKitLog();
  v4 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    objc_msgSend_containerIdentifier(*(void **)(a1 + 32), v5, v6, v7, v8);
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    v10 = *(_QWORD *)(a1 + 40);
    *(_DWORD *)buf = 138543618;
    v34 = v9;
    v35 = 2114;
    v36 = v10;
    _os_log_impl(&dword_227D4F000, v4, OS_LOG_TYPE_DEFAULT, "BCCloudKitDatabaseController (%{public}@)- record zone changes; unchangedRecordIDS :%{public}@",
      buf,
      0x16u);

  }
  v30 = 0u;
  v31 = 0u;
  v28 = 0u;
  v29 = 0u;
  v11 = *(id *)(a1 + 40);
  v13 = objc_msgSend_countByEnumeratingWithState_objects_count_(v11, v12, (uint64_t)&v28, (uint64_t)v32, 16);
  if (v13)
  {
    v18 = v13;
    v19 = *(_QWORD *)v29;
    do
    {
      v20 = 0;
      do
      {
        if (*(_QWORD *)v29 != v19)
          objc_enumerationMutation(v11);
        v21 = *(void **)(a1 + 32);
        objc_msgSend_zoneName(*(void **)(*((_QWORD *)&v28 + 1) + 8 * v20), v14, v15, v16, v17, (_QWORD)v28);
        v22 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend_p_informObserversOfCompletedFetchOfZone_(v21, v23, (uint64_t)v22, v24, v25);

        ++v20;
      }
      while (v18 != v20);
      v18 = objc_msgSend_countByEnumeratingWithState_objects_count_(v11, v14, (uint64_t)&v28, (uint64_t)v32, 16);
    }
    while (v18);
  }

  v26 = _Block_copy(*(const void **)(a1 + 48));
  v27 = v26;
  if (v26)
    (*((void (**)(void *, id))v26 + 2))(v26, v3);

}

void sub_227DA44A8(uint64_t a1, void *a2)
{
  const char *v3;
  uint64_t v4;
  uint64_t v5;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  const char *v11;
  uint64_t v12;
  uint64_t v13;
  BCCloudKitRecordZone *v14;
  const char *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  const char *v19;
  uint64_t v20;
  id v21;

  v21 = a2;
  objc_msgSend_objectForKeyedSubscript_(*(void **)(a1 + 32), v3, (uint64_t)v21, v4, v5);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  if (v9)
    goto LABEL_4;
  if (objc_msgSend_containsObject_(*(void **)(a1 + 40), v6, (uint64_t)v21, v7, v8))
  {
    v10 = objc_alloc(MEMORY[0x24BDB91F0]);
    v9 = (void *)objc_msgSend_initWithZoneID_(v10, v11, (uint64_t)v21, v12, v13);
    v14 = [BCCloudKitRecordZone alloc];
    v18 = (void *)objc_msgSend_initWithRecordZone_(v14, v15, (uint64_t)v9, v16, v17);
    objc_msgSend_setObject_forKeyedSubscript_(*(void **)(a1 + 32), v19, (uint64_t)v18, (uint64_t)v21, v20);

LABEL_4:
  }

}

void sub_227DA4550(uint64_t a1, void *a2)
{
  id v3;
  const char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const char *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  const char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  id v18;
  const char *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD v22[5];
  id v23;
  id v24;
  id v25;

  v3 = a2;
  objc_msgSend_tokenStores(*(void **)(a1 + 32), v4, v5, v6, v7);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_objectForKeyedSubscript_(v8, v9, (uint64_t)v3, v10, v11);
  v12 = (void *)objc_claimAutoreleasedReturnValue();

  if (v12)
  {
    dispatch_group_enter(*(dispatch_group_t *)(a1 + 40));
    v17 = (void *)objc_msgSend_copy(v3, v13, v14, v15, v16);
    v22[0] = MEMORY[0x24BDAC760];
    v22[1] = 3221225472;
    v22[2] = sub_227DA4644;
    v22[3] = &unk_24F08AD50;
    v22[4] = *(_QWORD *)(a1 + 32);
    v23 = *(id *)(a1 + 48);
    v24 = v17;
    v25 = *(id *)(a1 + 40);
    v18 = v17;
    objc_msgSend_serverChangeTokenWithCompletion_(v12, v19, (uint64_t)v22, v20, v21);

  }
}

void sub_227DA4644(uint64_t a1, void *a2)
{
  id v3;
  const char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  id v9;
  _QWORD block[4];
  id v11;
  id v12;
  id v13;

  v3 = a2;
  objc_msgSend_accessQueue(*(void **)(a1 + 32), v4, v5, v6, v7);
  v8 = objc_claimAutoreleasedReturnValue();
  block[0] = MEMORY[0x24BDAC760];
  block[1] = 3221225472;
  block[2] = sub_227DA4708;
  block[3] = &unk_24F08A3B8;
  v11 = *(id *)(a1 + 40);
  v12 = v3;
  v13 = *(id *)(a1 + 48);
  v9 = v3;
  dispatch_async(v8, block);

  dispatch_group_leave(*(dispatch_group_t *)(a1 + 56));
}

void sub_227DA4708(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  void *v7;
  const char *v8;
  uint64_t v9;
  id v10;

  v7 = *(void **)(a1 + 32);
  v6 = *(_QWORD *)(a1 + 40);
  if (v6)
  {
    objc_msgSend_setObject_forKey_(*(void **)(a1 + 32), a2, v6, *(_QWORD *)(a1 + 48), a5);
  }
  else
  {
    objc_msgSend_null(MEMORY[0x24BDBCEF8], a2, 0, a4, a5);
    v10 = (id)objc_claimAutoreleasedReturnValue();
    objc_msgSend_setObject_forKey_(v7, v8, (uint64_t)v10, *(_QWORD *)(a1 + 48), v9);

  }
}

void sub_227DA4774(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  NSObject *v6;
  const char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  void *v13;
  void *v14;
  id v15;
  const char *v16;
  uint64_t v17;
  uint64_t v18;
  const char *v19;
  void *v20;
  id v21;
  _QWORD v22[4];
  id v23;
  id v24;
  uint8_t buf[4];
  void *v26;
  __int16 v27;
  uint64_t v28;
  uint64_t v29;

  v29 = *MEMORY[0x24BDAC8D0];
  if (objc_msgSend_count(*(void **)(a1 + 32), a2, a3, a4, a5))
  {
    BDSCloudKitLog();
    v6 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend_containerIdentifier(*(void **)(a1 + 40), v7, v8, v9, v10);
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      v12 = *(_QWORD *)(a1 + 48);
      *(_DWORD *)buf = 138543618;
      v26 = v11;
      v27 = 2114;
      v28 = v12;
      _os_log_impl(&dword_227D4F000, v6, OS_LOG_TYPE_DEFAULT, "BCCloudKitDatabaseController (%{public}@) - finished fetching tokens for zones %{public}@", buf, 0x16u);

    }
    v13 = (void *)objc_opt_new();
    v14 = *(void **)(a1 + 48);
    v22[0] = MEMORY[0x24BDAC760];
    v22[1] = 3221225472;
    v22[2] = sub_227DA4928;
    v22[3] = &unk_24F08AD28;
    v23 = *(id *)(a1 + 32);
    v24 = v13;
    v15 = v13;
    objc_msgSend_enumerateObjectsUsingBlock_(v14, v16, (uint64_t)v22, v17, v18);
    objc_msgSend_p_fetchRecordZoneChanges_optionsByRecordZoneID_completionHandler_(*(void **)(a1 + 40), v19, *(_QWORD *)(a1 + 48), (uint64_t)v15, *(_QWORD *)(a1 + 56));

  }
  else
  {
    *(_BYTE *)(*(_QWORD *)(a1 + 40) + 15) = 1;
    v20 = _Block_copy(*(const void **)(a1 + 56));
    if (v20)
    {
      v21 = v20;
      (*((void (**)(void *, _QWORD))v20 + 2))(v20, 0);
      v20 = v21;
    }

  }
}

void sub_227DA4928(uint64_t a1, void *a2)
{
  const char *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  const char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  void *v12;
  uint64_t v13;
  id v14;

  v14 = a2;
  objc_msgSend_objectForKeyedSubscript_(*(void **)(a1 + 32), v3, (uint64_t)v14, v4, v5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v11 = objc_alloc_init(MEMORY[0x24BDB90C0]);
  if (v6)
  {
    objc_msgSend_null(MEMORY[0x24BDBCEF8], v7, v8, v9, v10);
    v12 = (void *)objc_claimAutoreleasedReturnValue();

    if (v6 != v12)
      objc_msgSend_setPreviousServerChangeToken_(v11, v7, (uint64_t)v6, v13, v10);
  }
  objc_msgSend_setObject_forKeyedSubscript_(*(void **)(a1 + 40), v7, (uint64_t)v11, (uint64_t)v14, v10);

}

void sub_227DA5098(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,id location)
{
  id *v46;
  uint64_t v47;

  objc_destroyWeak(v46);
  objc_destroyWeak(&location);
  _Block_object_dispose((const void *)(v47 - 256), 8);
  _Block_object_dispose((const void *)(v47 - 176), 8);
  _Unwind_Resume(a1);
}

void sub_227DA5108(uint64_t a1, void *a2)
{
  id v3;
  const char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  id v9;
  _QWORD block[4];
  id v11;
  __int128 v12;

  v3 = a2;
  objc_msgSend_accessQueue(*(void **)(a1 + 32), v4, v5, v6, v7);
  v8 = objc_claimAutoreleasedReturnValue();
  block[0] = MEMORY[0x24BDAC760];
  block[1] = 3221225472;
  block[2] = sub_227DA51A8;
  block[3] = &unk_24F08AD78;
  v11 = v3;
  v12 = *(_OWORD *)(a1 + 32);
  v9 = v3;
  dispatch_async(v8, block);

}

void sub_227DA51A8(uint64_t a1)
{
  NSObject *v2;
  const char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  const char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  const char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  const char *v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  const char *v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  const char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  const char *v32;
  uint64_t v33;
  const char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  const char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  void *v43;
  const char *v44;
  uint64_t v45;
  const char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  void *v51;
  __int16 v52;
  void *v53;
  uint64_t v54;

  v54 = *MEMORY[0x24BDAC8D0];
  BDSCloudKitLog();
  v2 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    objc_msgSend_recordID(*(void **)(a1 + 32), v3, v4, v5, v6);
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_recordType(*(void **)(a1 + 32), v8, v9, v10, v11);
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    v50 = 138412546;
    v51 = v7;
    v52 = 2112;
    v53 = v12;
    _os_log_impl(&dword_227D4F000, v2, OS_LOG_TYPE_DEFAULT, "BCCloudKitDatabaseController - BCCloudKitDatabaseController fetchRecordZoneChangesOperation.recordChangedBlock record=%@ %@", (uint8_t *)&v50, 0x16u);

  }
  v13 = *(void **)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40);
  objc_msgSend_recordType(*(void **)(a1 + 32), v14, v15, v16, v17);
  v18 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_objectForKey_(v13, v19, (uint64_t)v18, v20, v21);
  v22 = (void *)objc_claimAutoreleasedReturnValue();

  if (!v22)
  {
    v22 = (void *)objc_opt_new();
    v26 = *(void **)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40);
    objc_msgSend_recordType(*(void **)(a1 + 32), v27, v28, v29, v30);
    v31 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_setObject_forKey_(v26, v32, (uint64_t)v22, (uint64_t)v31, v33);

  }
  objc_msgSend_addObject_(v22, v23, *(_QWORD *)(a1 + 32), v24, v25);
  if ((unint64_t)objc_msgSend_count(v22, v34, v35, v36, v37) >= 0x20)
  {
    v42 = *(void **)(a1 + 40);
    objc_msgSend_recordType(*(void **)(a1 + 32), v38, v39, v40, v41);
    v43 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_p_informObserversOfRecordsChanged_forRecordType_(v42, v44, (uint64_t)v22, (uint64_t)v43, v45);

    objc_msgSend_removeAllObjects(v22, v46, v47, v48, v49);
  }

}

void sub_227DA5348(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  const char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  uint64_t v12;
  id v13;
  id v14;
  _QWORD block[4];
  id v16;
  uint64_t v17;
  id v18;

  v5 = a2;
  v6 = a3;
  objc_msgSend_accessQueue(*(void **)(a1 + 32), v7, v8, v9, v10);
  v11 = objc_claimAutoreleasedReturnValue();
  block[0] = MEMORY[0x24BDAC760];
  block[1] = 3221225472;
  block[2] = sub_227DA5408;
  block[3] = &unk_24F08A3B8;
  v12 = *(_QWORD *)(a1 + 32);
  v16 = v5;
  v17 = v12;
  v18 = v6;
  v13 = v6;
  v14 = v5;
  dispatch_async(v11, block);

}

void sub_227DA5408(uint64_t a1)
{
  NSObject *v2;
  uint64_t v3;
  const char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const char *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  const char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  const char *v18;
  uint64_t v19;
  const char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  uint8_t v28[128];
  uint8_t buf[4];
  uint64_t v30;
  uint64_t v31;

  v31 = *MEMORY[0x24BDAC8D0];
  BDSCloudKitLog();
  v2 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    v3 = *(_QWORD *)(a1 + 32);
    *(_DWORD *)buf = 138412290;
    v30 = v3;
    _os_log_impl(&dword_227D4F000, v2, OS_LOG_TYPE_DEFAULT, "BCCloudKitDatabaseController - BCCloudKitDatabaseController recordWithIDWasDeletedBlock recordID=%@", buf, 0xCu);
  }

  objc_msgSend_observers(*(void **)(a1 + 40), v4, v5, v6, v7);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_objectForKeyedSubscript_(v8, v9, *(_QWORD *)(a1 + 48), v10, v11);
  v12 = (void *)objc_claimAutoreleasedReturnValue();

  if (objc_msgSend_count(v12, v13, v14, v15, v16))
  {
    v26 = 0u;
    v27 = 0u;
    v24 = 0u;
    v25 = 0u;
    v17 = v12;
    v19 = objc_msgSend_countByEnumeratingWithState_objects_count_(v17, v18, (uint64_t)&v24, (uint64_t)v28, 16);
    if (v19)
    {
      v21 = v19;
      v22 = *(_QWORD *)v25;
      do
      {
        v23 = 0;
        do
        {
          if (*(_QWORD *)v25 != v22)
            objc_enumerationMutation(v17);
          objc_msgSend_databaseController_recordWithIDWasDeleted_recordType_(*(void **)(*((_QWORD *)&v24 + 1) + 8 * v23++), v20, *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 48), (_QWORD)v24);
        }
        while (v21 != v23);
        v21 = objc_msgSend_countByEnumeratingWithState_objects_count_(v17, v20, (uint64_t)&v24, (uint64_t)v28, 16);
      }
      while (v21);
    }

  }
}

void sub_227DA5588(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  const char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  void *v12;
  id v13;
  uint64_t v14;
  id v15;
  id v16;
  _QWORD block[5];
  id v18;
  id v19;
  id v20;
  uint64_t v21;

  v5 = a2;
  v6 = a3;
  objc_msgSend_accessQueue(*(void **)(a1 + 32), v7, v8, v9, v10);
  v11 = objc_claimAutoreleasedReturnValue();
  block[0] = MEMORY[0x24BDAC760];
  block[1] = 3221225472;
  block[2] = sub_227DA565C;
  block[3] = &unk_24F08ADF0;
  v12 = *(void **)(a1 + 40);
  block[4] = *(_QWORD *)(a1 + 32);
  v13 = v12;
  v14 = *(_QWORD *)(a1 + 48);
  v18 = v13;
  v19 = v5;
  v20 = v6;
  v21 = v14;
  v15 = v6;
  v16 = v5;
  dispatch_async(v11, block);

}

void sub_227DA565C(uint64_t a1)
{
  NSObject *v2;
  const char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  objc_class *v8;
  id v9;
  id v10;
  id v11;
  const char *v12;
  uint64_t v13;
  uint64_t v14;
  const char *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  const char *v19;
  uint64_t v20;
  uint64_t v21;
  const char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  const char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  const char *v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  const char *v35;
  uint64_t v36;
  _BYTE v37[24];
  void *v38;
  id v39;
  uint64_t v40;

  v40 = *MEMORY[0x24BDAC8D0];
  BDSCloudKitLog();
  v2 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    objc_msgSend_containerIdentifier(*(void **)(a1 + 32), v3, v4, v5, v6);
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v8 = (objc_class *)MEMORY[0x24BDBCEB8];
    v9 = *(id *)(a1 + 40);
    v10 = objc_alloc_init(v8);
    *(_QWORD *)v37 = MEMORY[0x24BDAC760];
    *(_QWORD *)&v37[8] = 3221225472;
    *(_QWORD *)&v37[16] = sub_227DA9AE8;
    v38 = &unk_24F08B088;
    v39 = v10;
    v11 = v10;
    objc_msgSend_enumerateObjectsUsingBlock_(v9, v12, (uint64_t)v37, v13, v14);
    objc_msgSend_componentsJoinedByString_(v11, v15, (uint64_t)CFSTR(","), v16, v17, *(_QWORD *)v37, *(_QWORD *)&v37[8], *(_QWORD *)&v37[16], v38);
    v18 = (void *)objc_claimAutoreleasedReturnValue();

    *(_DWORD *)v37 = 138543618;
    *(_QWORD *)&v37[4] = v7;
    *(_WORD *)&v37[12] = 2114;
    *(_QWORD *)&v37[14] = v18;
    _os_log_impl(&dword_227D4F000, v2, OS_LOG_TYPE_DEFAULT, "BCCloudKitDatabaseController (%{public}@) p_fetchRecordZoneChanges recordZoneChangeTokensUpdatedBlock recordZoneIDs=%{public}@ ", v37, 0x16u);

  }
  objc_msgSend_p_informObserversOfRecordsChanged_(*(void **)(a1 + 32), v19, *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 40), v20, v21);
  objc_msgSend_removeAllObjects(*(void **)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 40), v22, v23, v24, v25);
  objc_msgSend_tokenStores(*(void **)(a1 + 32), v26, v27, v28, v29);
  v30 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_objectForKeyedSubscript_(v30, v31, *(_QWORD *)(a1 + 48), v32, v33);
  v34 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend_storeServerChangeToken_completion_(v34, v35, *(_QWORD *)(a1 + 56), 0, v36);
}

void sub_227DA5814(uint64_t a1, void *a2, void *a3, uint64_t a4, int a5, void *a6)
{
  id v10;
  id v11;
  id v12;
  NSObject *v13;
  _BOOL4 v14;
  const char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  void *v21;
  objc_class *v22;
  id v23;
  id v24;
  const char *v25;
  uint64_t v26;
  uint64_t v27;
  const char *v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  const char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  NSObject *v36;
  id v37;
  id v38;
  id v39;
  _QWORD block[5];
  id v41;
  id v42;
  id v43;
  __int128 v44;
  char v45;
  _BYTE buf[24];
  void *v47;
  id v48;
  uint64_t v49;

  v49 = *MEMORY[0x24BDAC8D0];
  v10 = a2;
  v11 = a3;
  v12 = a6;
  BDSCloudKitLog();
  v13 = objc_claimAutoreleasedReturnValue();
  v14 = os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT);
  v19 = MEMORY[0x24BDAC760];
  v20 = "CRDTModelLocalFileManager unable to create directory at %@ error=%@" + 64;
  if (v14)
  {
    objc_msgSend_containerIdentifier(*(void **)(a1 + 32), v15, v16, v17, v18);
    v21 = (void *)objc_claimAutoreleasedReturnValue();
    v22 = (objc_class *)MEMORY[0x24BDBCEB8];
    v23 = *(id *)(a1 + 40);
    *(_QWORD *)buf = v19;
    *(_QWORD *)&buf[8] = 3221225472;
    *(_QWORD *)&buf[16] = sub_227DA9AE8;
    v47 = &unk_24F08B088;
    v48 = objc_alloc_init(v22);
    v24 = v48;
    objc_msgSend_enumerateObjectsUsingBlock_(v23, v25, (uint64_t)buf, v26, v27);
    objc_msgSend_componentsJoinedByString_(v24, v28, (uint64_t)CFSTR(","), v29, v30);
    v31 = (void *)objc_claimAutoreleasedReturnValue();

    *(_DWORD *)buf = 138543874;
    *(_QWORD *)&buf[4] = v21;
    *(_WORD *)&buf[12] = 2114;
    *(_QWORD *)&buf[14] = v31;
    *(_WORD *)&buf[22] = 1024;
    LODWORD(v47) = a5;
    _os_log_impl(&dword_227D4F000, v13, OS_LOG_TYPE_DEFAULT, "BCCloudKitDatabaseController (%{public}@) p_fetchRecordZoneChanges recordZoneFetchCompletionBlock recordZoneIDs=%{public}@ moreComing= %{BOOL}d", buf, 0x1Cu);

    v20 = "=%@";
    v19 = MEMORY[0x24BDAC760];
  }

  objc_msgSend_accessQueue(*(void **)(a1 + 32), v32, v33, v34, v35);
  v36 = objc_claimAutoreleasedReturnValue();
  block[0] = v19;
  block[1] = *((_QWORD *)v20 + 228);
  block[2] = sub_227DA5A54;
  block[3] = &unk_24F08AE60;
  block[4] = *(_QWORD *)(a1 + 32);
  v41 = v10;
  v45 = a5;
  v44 = *(_OWORD *)(a1 + 48);
  v42 = v12;
  v43 = v11;
  v37 = v11;
  v38 = v12;
  v39 = v10;
  dispatch_async(v36, block);

}

void sub_227DA5A54(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v6;
  const char *v7;
  uint64_t v8;
  uint64_t v9;
  const char *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  const char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  void *v19;
  void *v20;
  const char *v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  const char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  const char *v29;
  uint64_t v30;
  NSObject *v31;
  const char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  const char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  int v42;
  const char *v43;
  uint64_t v44;
  uint64_t v45;
  const char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  void *v51;
  const char *v52;
  uint64_t v53;
  uint64_t v54;
  const char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  const char *v60;
  uint64_t v61;
  uint64_t v62;
  void *v63;
  const char *v64;
  uint64_t v65;
  const char *v66;
  void *v67;
  void *v68;
  const char *v69;
  const char *v70;
  void *v71;
  const char *v72;
  void *v73;
  const char *v74;
  uint64_t v75;
  NSObject *v76;
  const char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  const char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  void *v85;
  const char *v86;
  uint64_t v87;
  uint64_t v88;
  const char *v89;
  uint64_t v90;
  uint64_t v91;
  const char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  void *v96;
  const char *v97;
  uint64_t v98;
  uint64_t v99;
  int isEqualToString;
  const char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  unint64_t v105;
  const char *v106;
  uint64_t v107;
  uint64_t v108;
  void *v109;
  void *v110;
  uint64_t v111;
  const char *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  void *v116;
  id v117;
  uint8_t buf[4];
  void *v119;
  __int16 v120;
  void *v121;
  __int16 v122;
  uint64_t v123;
  __int16 v124;
  void *v125;
  uint64_t v126;
  const __CFString *v127;
  uint64_t v128;
  _QWORD v129[2];

  v129[1] = *MEMORY[0x24BDAC8D0];
  objc_msgSend_changedRecordZoneIDs(*(void **)(a1 + 32), a2, a3, a4, a5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_removeObject_(v6, v7, *(_QWORD *)(a1 + 40), v8, v9);

  objc_msgSend_p_scheduleArchiveWithCompletion_(*(void **)(a1 + 32), v10, (uint64_t)&unk_24F08AE38, v11, v12);
  v13 = *(void **)(a1 + 48);
  if (v13)
  {
    v18 = sub_227D9EEB8(v13);
    v19 = *(void **)(a1 + 48);
    if (v18)
    {
      objc_msgSend_userInfo(v19, v14, v15, v16, v17);
      v20 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend_objectForKeyedSubscript_(v20, v21, *MEMORY[0x24BDB8EE8], v22, v23);
      v24 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend_allKeys(v24, v25, v26, v27, v28);
      v117 = (id)objc_claimAutoreleasedReturnValue();

      objc_msgSend_zonesUnreadableDueToMissingD2DEncryptionIdentity_completion_(*(void **)(a1 + 32), v29, (uint64_t)v117, 0, v30);
      return;
    }
    if (sub_227D9F094(v19))
    {
      v67 = (void *)MEMORY[0x24BDD1540];
      v128 = *MEMORY[0x24BDD0FC8];
      v129[0] = CFSTR("Unreadable keychain - cannot fetch record zones");
      objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x24BDBCE70], v66, (uint64_t)v129, (uint64_t)&v128, 1);
      v68 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend_errorWithDomain_code_userInfo_(v67, v69, (uint64_t)CFSTR("BDSCloudKitClientError"), 2006, (uint64_t)v68);
    }
    else
    {
      if (!sub_227D9F29C(*(void **)(a1 + 48)))
      {
        BDSCloudKitSyncLog();
        v76 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v76, OS_LOG_TYPE_ERROR))
        {
          objc_msgSend_containerIdentifier(*(void **)(a1 + 32), v77, v78, v79, v80);
          v109 = (void *)objc_claimAutoreleasedReturnValue();
          v110 = *(void **)(a1 + 40);
          v111 = *(_QWORD *)(a1 + 48);
          objc_msgSend_zoneName(v110, v112, v113, v114, v115);
          v116 = (void *)objc_claimAutoreleasedReturnValue();
          *(_DWORD *)buf = 138544130;
          v119 = v109;
          v120 = 2114;
          v121 = v110;
          v122 = 2114;
          v123 = v111;
          v124 = 2112;
          v125 = v116;
          _os_log_error_impl(&dword_227D4F000, v76, OS_LOG_TYPE_ERROR, "BCCloudKitDatabaseController (%{public}@) - CKFetchRecordZoneChangesOperation zone %{public}@ zoneFetchCompletion failed: %{public}@ time to delete the tokenStore for  %@", buf, 0x2Au);

        }
        objc_msgSend_tokenStores(*(void **)(a1 + 32), v81, v82, v83, v84);
        v85 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend_objectForKeyedSubscript_(v85, v86, *(_QWORD *)(a1 + 40), v87, v88);
        v73 = (void *)objc_claimAutoreleasedReturnValue();

        objc_msgSend_deleteCloudDataWithCompletion_(v73, v89, 0, v90, v91);
        objc_msgSend_domain(*(void **)(a1 + 48), v92, v93, v94, v95);
        v96 = (void *)objc_claimAutoreleasedReturnValue();
        isEqualToString = objc_msgSend_isEqualToString_(v96, v97, *MEMORY[0x24BDB8EA8], v98, v99);

        if (isEqualToString)
        {
          v105 = objc_msgSend_code(*(void **)(a1 + 48), v101, v102, v103, v104);
          if (v105 <= 0x1C && ((1 << v105) & 0x14200000) != 0)
            objc_msgSend_addObject_(*(void **)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 40), v106, *(_QWORD *)(a1 + 40), v107, v108);
        }
        goto LABEL_14;
      }
      v71 = (void *)MEMORY[0x24BDD1540];
      v126 = *MEMORY[0x24BDD0FC8];
      v127 = CFSTR("Account temporarily unavailable - cannot fetch record zones");
      objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x24BDBCE70], v70, (uint64_t)&v127, (uint64_t)&v126, 1);
      v68 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend_errorWithDomain_code_userInfo_(v71, v72, (uint64_t)CFSTR("BDSCloudKitClientError"), 2007, (uint64_t)v68);
    }
    v73 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend_zonesTemporarilyUnreadableWithError_completion_(*(void **)(a1 + 32), v74, (uint64_t)v73, 0, v75);
LABEL_14:

    return;
  }
  BDSCloudKitLog();
  v31 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v31, OS_LOG_TYPE_DEFAULT))
  {
    objc_msgSend_containerIdentifier(*(void **)(a1 + 32), v32, v33, v34, v35);
    v36 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_zoneName(*(void **)(a1 + 40), v37, v38, v39, v40);
    v41 = (void *)objc_claimAutoreleasedReturnValue();
    v42 = *(unsigned __int8 *)(a1 + 80);
    *(_DWORD *)buf = 138543874;
    v119 = v36;
    v120 = 2114;
    v121 = v41;
    v122 = 1024;
    LODWORD(v123) = v42;
    _os_log_impl(&dword_227D4F000, v31, OS_LOG_TYPE_DEFAULT, "BCCloudKitDatabaseController (%{public}@) - CKFetchRecordZoneChangesOperation zone %{public}@ success.  More coming: %{BOOL}d", buf, 0x1Cu);

  }
  objc_msgSend_p_informObserversOfRecordsChanged_(*(void **)(a1 + 32), v43, *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 72) + 8) + 40), v44, v45);
  if (!*(_BYTE *)(a1 + 80))
  {
    v50 = *(void **)(a1 + 32);
    objc_msgSend_zoneName(*(void **)(a1 + 40), v46, v47, v48, v49);
    v51 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_p_informObserversOfCompletedFetchOfZone_(v50, v52, (uint64_t)v51, v53, v54);

  }
  objc_msgSend_removeAllObjects(*(void **)(*(_QWORD *)(*(_QWORD *)(a1 + 72) + 8) + 40), v46, v47, v48, v49);
  objc_msgSend_tokenStores(*(void **)(a1 + 32), v55, v56, v57, v58);
  v59 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_objectForKeyedSubscript_(v59, v60, *(_QWORD *)(a1 + 40), v61, v62);
  v63 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend_storeServerChangeToken_completion_(v63, v64, *(_QWORD *)(a1 + 56), 0, v65);
}

void sub_227DA5EB8()
{
  NSObject *v0;
  uint8_t v1[16];

  BDSCloudKitLog();
  v0 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v0, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)v1 = 0;
    _os_log_impl(&dword_227D4F000, v0, OS_LOG_TYPE_DEFAULT, "BCCloudKitDatabaseController - archiveComplete (recordZoneFetchCompletionBlock)", v1, 2u);
  }

}

void sub_227DA5F1C(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  const char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  const char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  uint64_t v15;
  void *v16;
  id v17;
  uint64_t v18;
  id v19;
  _QWORD block[4];
  id v21;
  uint64_t v22;
  id v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  uint8_t buf[4];
  void *v29;
  uint64_t v30;

  v30 = *MEMORY[0x24BDAC8D0];
  v3 = a2;
  BDSCloudKitLog();
  v4 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    objc_msgSend_containerIdentifier(*(void **)(a1 + 32), v5, v6, v7, v8);
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 138543362;
    v29 = v9;
    _os_log_impl(&dword_227D4F000, v4, OS_LOG_TYPE_DEFAULT, "BCCloudKitDatabaseController (%{public}@) - CKFetchRecordZoneChangesOperation fetchRecordZoneChangesCompletionBlock", buf, 0xCu);

  }
  objc_msgSend_accessQueue(*(void **)(a1 + 32), v10, v11, v12, v13);
  v14 = objc_claimAutoreleasedReturnValue();
  block[0] = MEMORY[0x24BDAC760];
  block[1] = 3221225472;
  block[2] = sub_227DA6098;
  block[3] = &unk_24F08AF20;
  objc_copyWeak(&v27, (id *)(a1 + 72));
  v25 = *(_QWORD *)(a1 + 56);
  v15 = *(_QWORD *)(a1 + 32);
  v16 = *(void **)(a1 + 40);
  v21 = v3;
  v22 = v15;
  v17 = v16;
  v18 = *(_QWORD *)(a1 + 64);
  v23 = v17;
  v26 = v18;
  v24 = *(id *)(a1 + 48);
  v19 = v3;
  dispatch_async(v14, block);

  objc_destroyWeak(&v27);
}

void sub_227DA6098(uint64_t a1)
{
  id *v2;
  id WeakRetained;
  const char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  const char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  const char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  void *v20;
  uint64_t v21;
  const char *v22;
  uint64_t v23;
  uint64_t v24;
  const char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  const char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  NSObject *v34;
  const char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  objc_class *v40;
  id v41;
  id v42;
  id v43;
  const char *v44;
  uint64_t v45;
  uint64_t v46;
  const char *v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  const char *v51;
  uint64_t v52;
  uint64_t v53;
  const char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  const char *v58;
  uint64_t v59;
  uint64_t v60;
  NSObject *v61;
  const char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  const char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  void *v70;
  const char *v71;
  uint64_t v72;
  uint64_t v73;
  int isEqualToString;
  const char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  NSObject *v80;
  const char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  void *v85;
  const char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  NSObject *v90;
  void *v91;
  const char *v92;
  uint64_t v93;
  uint64_t v94;
  int v95;
  NSObject *v96;
  void *v97;
  void *v98;
  objc_class *v99;
  id v100;
  id v101;
  id v102;
  const char *v103;
  uint64_t v104;
  uint64_t v105;
  const char *v106;
  uint64_t v107;
  uint64_t v108;
  void *v109;
  void *v110;
  _QWORD block[5];
  id v112;
  uint64_t v113;
  id v114;
  _QWORD v115[6];
  _BYTE buf[24];
  void *v117;
  id v118;
  uint64_t v119;

  v119 = *MEMORY[0x24BDAC8D0];
  v2 = (id *)(a1 + 80);
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 80));
  v8 = objc_msgSend_count(*(void **)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 40), v4, v5, v6, v7);
  v11 = MEMORY[0x24BDAC760];
  if (v8)
  {
    v12 = *(_QWORD *)(a1 + 64);
    v13 = *(_QWORD *)(*(_QWORD *)(v12 + 8) + 40);
    v115[0] = MEMORY[0x24BDAC760];
    v115[1] = 3221225472;
    v115[2] = sub_227DA65C0;
    v115[3] = &unk_24F08AEB0;
    v115[4] = WeakRetained;
    v115[5] = v12;
    objc_msgSend_zonesDeletedOrReset_completion_(WeakRetained, v9, v13, (uint64_t)v115, v10);
  }
  v14 = *(id *)(a1 + 32);
  v19 = v14;
  if (v14)
  {
    objc_msgSend_domain(v14, v15, v16, v17, v18);
    v20 = (void *)objc_claimAutoreleasedReturnValue();
    v21 = *MEMORY[0x24BDB8EA8];
    if ((objc_msgSend_isEqualToString_(v20, v22, *MEMORY[0x24BDB8EA8], v23, v24) & 1) != 0)
    {
      v29 = objc_msgSend_code(v19, v25, v26, v27, v28);

      if (v29 == 2)
        objc_msgSend_setBackOffInterval_(WeakRetained, v30, v31, v32, v33, 0.0);
    }
    else
    {

    }
    BDSCloudKitLog();
    v61 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v61, OS_LOG_TYPE_ERROR))
    {
      objc_msgSend_containerIdentifier(*(void **)(a1 + 40), v62, v63, v64, v65);
      v110 = (void *)objc_claimAutoreleasedReturnValue();
      v99 = (objc_class *)MEMORY[0x24BDBCEB8];
      v100 = *(id *)(a1 + 48);
      v101 = objc_alloc_init(v99);
      *(_QWORD *)buf = v11;
      *(_QWORD *)&buf[8] = 3221225472;
      *(_QWORD *)&buf[16] = sub_227DA9AE8;
      v117 = &unk_24F08B088;
      v118 = v101;
      v102 = v101;
      objc_msgSend_enumerateObjectsUsingBlock_(v100, v103, (uint64_t)buf, v104, v105);
      objc_msgSend_componentsJoinedByString_(v102, v106, (uint64_t)CFSTR(","), v107, v108);
      v109 = (void *)objc_claimAutoreleasedReturnValue();

      *(_DWORD *)buf = 138543874;
      *(_QWORD *)&buf[4] = v110;
      *(_WORD *)&buf[12] = 2114;
      *(_QWORD *)&buf[14] = v109;
      *(_WORD *)&buf[22] = 2114;
      v117 = v19;
      _os_log_error_impl(&dword_227D4F000, v61, OS_LOG_TYPE_ERROR, "BCCloudKitDatabaseController (%{public}@) - CKFetchRecordZoneChangesOperation fetchRecordZoneChangesCompletionBlock zoneChanges failed: %{public}@ %{public}@", buf, 0x20u);

    }
    objc_msgSend_domain(v19, v66, v67, v68, v69);
    v70 = (void *)objc_claimAutoreleasedReturnValue();
    isEqualToString = objc_msgSend_isEqualToString_(v70, v71, v21, v72, v73);

    if (isEqualToString)
    {
      v79 = objc_msgSend_code(v19, v75, v76, v77, v78);
      if (v79 <= 0x17 && ((1 << v79) & 0x8000C0) != 0)
        goto LABEL_16;
    }
    else
    {
      objc_msgSend_domain(v19, v75, v76, v77, v78);
      v91 = (void *)objc_claimAutoreleasedReturnValue();
      v95 = objc_msgSend_isEqualToString_(v91, v92, *MEMORY[0x24BDD0B88], v93, v94);

      if (v95)
      {
LABEL_16:
        BDSCloudKitLog();
        v80 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v80, OS_LOG_TYPE_DEFAULT))
        {
          objc_msgSend_containerIdentifier(*(void **)(a1 + 40), v81, v82, v83, v84);
          v85 = (void *)objc_claimAutoreleasedReturnValue();
          *(_DWORD *)buf = 138543618;
          *(_QWORD *)&buf[4] = v85;
          *(_WORD *)&buf[12] = 2112;
          *(_QWORD *)&buf[14] = v19;
          _os_log_impl(&dword_227D4F000, v80, OS_LOG_TYPE_DEFAULT, "BCCloudKitDatabaseController (%{public}@) - CKFetchRecordZoneChangesOperation retrying fetch for error: %@", buf, 0x16u);

        }
        objc_msgSend_accessQueue(WeakRetained, v86, v87, v88, v89);
        v90 = objc_claimAutoreleasedReturnValue();
        block[0] = v11;
        block[1] = 3221225472;
        block[2] = sub_227DA6694;
        block[3] = &unk_24F08AEF8;
        block[4] = WeakRetained;
        v112 = v19;
        objc_copyWeak(&v114, v2);
        v113 = *(_QWORD *)(a1 + 40);
        dispatch_async(v90, block);

        objc_destroyWeak(&v114);
        goto LABEL_23;
      }
    }
    BDSCloudKitLog();
    v96 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v96, OS_LOG_TYPE_ERROR))
      sub_227E5C528();

  }
  else
  {
    objc_msgSend_setBackOffInterval_(WeakRetained, v15, v16, v17, v18, 0.0);
    BDSCloudKitLog();
    v34 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v34, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend_containerIdentifier(*(void **)(a1 + 40), v35, v36, v37, v38);
      v39 = (void *)objc_claimAutoreleasedReturnValue();
      v40 = (objc_class *)MEMORY[0x24BDBCEB8];
      v41 = *(id *)(a1 + 48);
      v42 = objc_alloc_init(v40);
      *(_QWORD *)buf = v11;
      *(_QWORD *)&buf[8] = 3221225472;
      *(_QWORD *)&buf[16] = sub_227DA9AE8;
      v117 = &unk_24F08B088;
      v118 = v42;
      v43 = v42;
      objc_msgSend_enumerateObjectsUsingBlock_(v41, v44, (uint64_t)buf, v45, v46);
      objc_msgSend_componentsJoinedByString_(v43, v47, (uint64_t)CFSTR(","), v48, v49);
      v50 = (void *)objc_claimAutoreleasedReturnValue();

      *(_DWORD *)buf = 138543618;
      *(_QWORD *)&buf[4] = v39;
      *(_WORD *)&buf[12] = 2114;
      *(_QWORD *)&buf[14] = v50;
      _os_log_impl(&dword_227D4F000, v34, OS_LOG_TYPE_DEFAULT, "BCCloudKitDatabaseController (%{public}@) - CKFetchRecordZoneChangesOperation fetchRecordZoneChangesCompletionBlock success (%{public}@).", buf, 0x16u);

    }
    objc_msgSend_p_informObserversOfRecordsChanged_(*(void **)(a1 + 40), v51, *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 72) + 8) + 40), v52, v53);
    objc_msgSend_removeAllObjects(*(void **)(*(_QWORD *)(*(_QWORD *)(a1 + 72) + 8) + 40), v54, v55, v56, v57);
    objc_msgSend_setFetchRecordZoneChangesSuccess_(*(void **)(a1 + 40), v58, 1, v59, v60);
  }
LABEL_23:
  v97 = _Block_copy(*(const void **)(a1 + 56));
  v98 = v97;
  if (v97)
    (*((void (**)(void *, void *))v97 + 2))(v97, v19);

}

void sub_227DA65C0(uint64_t a1)
{
  NSObject *v2;
  const char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  int v9;
  void *v10;
  __int16 v11;
  uint64_t v12;
  uint64_t v13;

  v13 = *MEMORY[0x24BDAC8D0];
  BDSCloudKitSyncLog();
  v2 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    objc_msgSend_containerIdentifier(*(void **)(a1 + 32), v3, v4, v5, v6);
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v8 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40);
    v9 = 138543618;
    v10 = v7;
    v11 = 2114;
    v12 = v8;
    _os_log_impl(&dword_227D4F000, v2, OS_LOG_TYPE_DEFAULT, "BCCloudKitDatabaseController (%{public}@) - fetchRecordZoneChangesCompletionBlock - zonesDeletedOrReset DONE: %{public}@", (uint8_t *)&v9, 0x16u);

  }
}

void sub_227DA6694(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  const char *v9;
  uint64_t v10;
  uint64_t v11;
  const char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  dispatch_time_t v17;
  const char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  _QWORD v23[5];
  id v24;

  if ((objc_msgSend_serverFetchPostponed(*(void **)(a1 + 32), a2, a3, a4, a5) & 1) == 0)
  {
    objc_msgSend_setServerFetchPostponed_(*(void **)(a1 + 32), v6, 1, v7, v8);
    objc_msgSend_p_updateRetryParametersFromFetchZoneChangesOperationError_(*(void **)(a1 + 32), v9, *(_QWORD *)(a1 + 40), v10, v11);
    objc_msgSend_backOffInterval(*(void **)(a1 + 32), v12, v13, v14, v15);
    v17 = dispatch_time(0, (uint64_t)(v16 * 1000000000.0));
    objc_msgSend_accessQueue(*(void **)(a1 + 32), v18, v19, v20, v21);
    v22 = objc_claimAutoreleasedReturnValue();
    v23[0] = MEMORY[0x24BDAC760];
    v23[1] = 3221225472;
    v23[2] = sub_227DA6778;
    v23[3] = &unk_24F08A5F0;
    objc_copyWeak(&v24, (id *)(a1 + 56));
    v23[4] = *(_QWORD *)(a1 + 48);
    dispatch_after(v17, v22, v23);

    objc_destroyWeak(&v24);
  }
}

void sub_227DA6778(uint64_t a1)
{
  id WeakRetained;
  const char *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  NSObject *v7;
  const char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  const char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  const char *v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  void *v22;
  uint64_t v23;

  v23 = *MEMORY[0x24BDAC8D0];
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v6 = WeakRetained;
  if (WeakRetained)
  {
    objc_msgSend_setServerFetchPostponed_(WeakRetained, v3, 0, v4, v5);
    BDSCloudKitLog();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend_containerIdentifier(*(void **)(a1 + 32), v8, v9, v10, v11);
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      v21 = 138543362;
      v22 = v12;
      _os_log_impl(&dword_227D4F000, v7, OS_LOG_TYPE_DEFAULT, "BCCloudKitDatabaseController (%{public}@) - signal coalescedZoneFetch in fetchRecordZoneChangesOperation.fetchRecordZoneChangesCompletionBlock retryFetch", (uint8_t *)&v21, 0xCu);

    }
    objc_msgSend_coalescedZoneFetch(v6, v13, v14, v15, v16);
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_signalWithCompletion_(v17, v18, (uint64_t)&unk_24F08AED0, v19, v20);

  }
}

void sub_227DA68E4(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int isOffline;
  NSObject *v7;
  const char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  const __CFString *v14;
  const char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  const char *v19;
  uint64_t v20;
  const char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  const char *v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  const char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  const char *v40;
  uint64_t v41;
  const char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  id obj;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  _BYTE v56[128];
  uint8_t v57[128];
  uint8_t buf[4];
  uint64_t v59;
  __int16 v60;
  const __CFString *v61;
  uint64_t v62;

  v62 = *MEMORY[0x24BDAC8D0];
  isOffline = objc_msgSend_isOffline(BDSReachability, a2, a3, a4, a5);
  BDSCloudKitLog();
  v7 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
  {
    objc_msgSend_containerIdentifier(*(void **)(a1 + 32), v8, v9, v10, v11);
    v12 = objc_claimAutoreleasedReturnValue();
    v13 = (void *)v12;
    v14 = CFSTR("YES");
    if (isOffline)
      v14 = CFSTR("NO");
    *(_DWORD *)buf = 138543618;
    v59 = v12;
    v60 = 2112;
    v61 = v14;
    _os_log_impl(&dword_227D4F000, v7, OS_LOG_TYPE_INFO, "BCCloudKitDatabaseController (%{public}@) - p_internetReachabilityChanged reachable:%@", buf, 0x16u);

  }
  v54 = 0u;
  v55 = 0u;
  v52 = 0u;
  v53 = 0u;
  objc_msgSend_observers(*(void **)(a1 + 32), v15, v16, v17, v18);
  obj = (id)objc_claimAutoreleasedReturnValue();
  v20 = objc_msgSend_countByEnumeratingWithState_objects_count_(obj, v19, (uint64_t)&v52, (uint64_t)v57, 16);
  if (v20)
  {
    v25 = v20;
    v26 = isOffline ^ 1u;
    v27 = *(_QWORD *)v53;
    do
    {
      v28 = 0;
      do
      {
        if (*(_QWORD *)v53 != v27)
          objc_enumerationMutation(obj);
        v29 = *(_QWORD *)(*((_QWORD *)&v52 + 1) + 8 * v28);
        objc_msgSend_observers(*(void **)(a1 + 32), v21, v22, v23, v24);
        v30 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend_objectForKeyedSubscript_(v30, v31, v29, v32, v33);
        v34 = (void *)objc_claimAutoreleasedReturnValue();

        if (objc_msgSend_count(v34, v35, v36, v37, v38))
        {
          v50 = 0u;
          v51 = 0u;
          v48 = 0u;
          v49 = 0u;
          v39 = v34;
          v41 = objc_msgSend_countByEnumeratingWithState_objects_count_(v39, v40, (uint64_t)&v48, (uint64_t)v56, 16);
          if (v41)
          {
            v44 = v41;
            v45 = *(_QWORD *)v49;
            do
            {
              v46 = 0;
              do
              {
                if (*(_QWORD *)v49 != v45)
                  objc_enumerationMutation(v39);
                objc_msgSend_databaseController_reachabilityChanged_(*(void **)(*((_QWORD *)&v48 + 1) + 8 * v46++), v42, *(_QWORD *)(a1 + 32), v26, v43);
              }
              while (v44 != v46);
              v44 = objc_msgSend_countByEnumeratingWithState_objects_count_(v39, v42, (uint64_t)&v48, (uint64_t)v56, 16);
            }
            while (v44);
          }

        }
        ++v28;
      }
      while (v28 != v25);
      v25 = objc_msgSend_countByEnumeratingWithState_objects_count_(obj, v21, (uint64_t)&v52, (uint64_t)v57, 16);
    }
    while (v25);
  }

}

void sub_227DA6EEC(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  NSObject *v7;
  const char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  const char *v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  __int16 v16;
  id v17;
  uint64_t v18;

  v18 = *MEMORY[0x24BDAC8D0];
  v5 = a2;
  v6 = a3;
  BDSCloudKitLog();
  v7 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    v14 = 134218242;
    v15 = objc_msgSend_count(v6, v8, v9, v10, v11);
    v16 = 2114;
    v17 = v5;
    _os_log_impl(&dword_227D4F000, v7, OS_LOG_TYPE_DEFAULT, "p_informObserversOfRecordsChanged: changedRecords.count=%lu recordType=%{public}@", (uint8_t *)&v14, 0x16u);
  }

  objc_msgSend_p_informObserversOfRecordsChanged_forRecordType_(*(void **)(a1 + 32), v12, (uint64_t)v6, (uint64_t)v5, v13);
}

void sub_227DA70AC(void **a1)
{
  NSObject *v2;
  const char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  const char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;
  id v15;
  const char *v16;
  uint64_t v17;
  uint64_t v18;
  const char *v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  const char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  const char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  NSObject *v32;
  id v33;
  const char *v34;
  uint64_t v35;
  const char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t i;
  void *v43;
  void *v44;
  const char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  const char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  const char *v56;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  void *v60;
  uint64_t v61;
  id v62;
  const char *v63;
  NSObject *v64;
  void *v65;
  const char *v66;
  _QWORD block[4];
  id v68;
  _QWORD v69[6];
  id v70;
  NSObject *v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  uint8_t v76[128];
  _BYTE buf[24];
  void *v78;
  id v79[6];

  v79[3] = *(id *)MEMORY[0x24BDAC8D0];
  BDSCloudKitSyncLog();
  v2 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    objc_msgSend_containerIdentifier(a1[4], v3, v4, v5, v6);
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v8 = a1[5];
    objc_msgSend_allObjects(a1[6], v9, v10, v11, v12);
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    v14 = objc_alloc_init(MEMORY[0x24BDBCEB8]);
    *(_QWORD *)buf = MEMORY[0x24BDAC760];
    *(_QWORD *)&buf[8] = 3221225472;
    *(_QWORD *)&buf[16] = sub_227DA9AE8;
    v78 = &unk_24F08B088;
    v79[0] = v14;
    v15 = v14;
    objc_msgSend_enumerateObjectsUsingBlock_(v13, v16, (uint64_t)buf, v17, v18);
    objc_msgSend_componentsJoinedByString_(v15, v19, (uint64_t)CFSTR(","), v20, v21);
    v22 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend_zoneObservers(a1[4], v23, v24, v25, v26);
    v27 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 138544130;
    *(_QWORD *)&buf[4] = v7;
    *(_WORD *)&buf[12] = 2114;
    *(_QWORD *)&buf[14] = v8;
    *(_WORD *)&buf[22] = 2114;
    v78 = v22;
    LOWORD(v79[0]) = 2112;
    *(id *)((char *)v79 + 2) = v27;
    _os_log_impl(&dword_227D4F000, v2, OS_LOG_TYPE_DEFAULT, "BCCloudKitDatabaseController (%{public}@) - p_informObserversOfSaltVersionIdentifierChanged: saltVersionIdentifier=%{public}@ zoneIDs=%{public}@ observers:%@", buf, 0x2Au);

  }
  if (objc_msgSend_length(a1[5], v28, v29, v30, v31))
  {
    v32 = dispatch_group_create();
    v72 = 0u;
    v73 = 0u;
    v74 = 0u;
    v75 = 0u;
    v33 = a1[6];
    v35 = objc_msgSend_countByEnumeratingWithState_objects_count_(v33, v34, (uint64_t)&v72, (uint64_t)v76, 16);
    if (v35)
    {
      v40 = v35;
      v41 = *(_QWORD *)v73;
      do
      {
        for (i = 0; i != v40; ++i)
        {
          if (*(_QWORD *)v73 != v41)
            objc_enumerationMutation(v33);
          v43 = *(void **)(*((_QWORD *)&v72 + 1) + 8 * i);
          objc_msgSend_zoneName(v43, v36, v37, v38, v39);
          v44 = (void *)objc_claimAutoreleasedReturnValue();
          v49 = objc_msgSend_length(v44, v45, v46, v47, v48);

          if (v49)
          {
            objc_msgSend_zoneObservers(a1[4], v36, v37, v38, v39);
            v50 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend_zoneName(v43, v51, v52, v53, v54);
            v55 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend_objectForKey_(v50, v56, (uint64_t)v55, v57, v58);
            v59 = (void *)objc_claimAutoreleasedReturnValue();

            if (v59)
            {
              dispatch_group_enter(v32);
              v61 = (uint64_t)a1[4];
              v60 = a1[5];
              v69[0] = MEMORY[0x24BDAC760];
              v69[1] = 3221225472;
              v69[2] = sub_227DA7478;
              v69[3] = &unk_24F08AF98;
              v69[4] = v61;
              v69[5] = v43;
              v62 = v60;
              v70 = v62;
              v71 = v32;
              objc_msgSend_databaseController_saltVersionIdentifierChanged_completion_(v59, v63, v61, (uint64_t)v62, (uint64_t)v69);

            }
          }
        }
        v40 = objc_msgSend_countByEnumeratingWithState_objects_count_(v33, v36, (uint64_t)&v72, (uint64_t)v76, 16);
      }
      while (v40);
    }

    dispatch_get_global_queue(0, 0);
    v64 = objc_claimAutoreleasedReturnValue();
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 3221225472;
    block[2] = sub_227DA7580;
    block[3] = &unk_24F08A7F8;
    v68 = a1[7];
    dispatch_group_notify(v32, v64, block);

    v65 = v68;
    goto LABEL_18;
  }
  v32 = _Block_copy(a1[7]);
  if (v32)
  {
    objc_msgSend_errorWithDomain_code_userInfo_(MEMORY[0x24BDD1540], v66, (uint64_t)CFSTR("BDSErrorDomain"), 1005, 0);
    v65 = (void *)objc_claimAutoreleasedReturnValue();
    ((void (*)(NSObject *, void *))v32[2].isa)(v32, v65);
LABEL_18:

  }
}

void sub_227DA7478(uint64_t a1, int a2)
{
  NSObject *v4;
  const char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  const char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  int v16;
  void *v17;
  __int16 v18;
  void *v19;
  __int16 v20;
  uint64_t v21;
  __int16 v22;
  int v23;
  uint64_t v24;

  v24 = *MEMORY[0x24BDAC8D0];
  BDSCloudKitSyncLog();
  v4 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    objc_msgSend_containerIdentifier(*(void **)(a1 + 32), v5, v6, v7, v8);
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_zoneName(*(void **)(a1 + 40), v10, v11, v12, v13);
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    v15 = *(_QWORD *)(a1 + 48);
    v16 = 138413058;
    v17 = v9;
    v18 = 2112;
    v19 = v14;
    v20 = 2112;
    v21 = v15;
    v22 = 1024;
    v23 = a2;
    _os_log_impl(&dword_227D4F000, v4, OS_LOG_TYPE_DEFAULT, "%@ name:%@ salt:%@  success:%{BOOL}d  LEAVE GROUP", (uint8_t *)&v16, 0x26u);

  }
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 56));
}

void sub_227DA7580(uint64_t a1)
{
  NSObject *v2;
  void *v3;
  void *v4;
  uint8_t v5[16];

  BDSCloudKitSyncLog();
  v2 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)v5 = 0;
    _os_log_impl(&dword_227D4F000, v2, OS_LOG_TYPE_DEFAULT, "p_informObserversOfSaltVersionIdentifierChanged DONE", v5, 2u);
  }

  v3 = _Block_copy(*(const void **)(a1 + 32));
  v4 = v3;
  if (v3)
    (*((void (**)(void *, _QWORD))v3 + 2))(v3, 0);

}

void sub_227DA8200(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7;
  id v8;
  id v9;
  NSObject *v10;
  void *v11;
  void *v12;

  v7 = a2;
  v8 = a3;
  v9 = a4;
  if (v9)
  {
    BDSCloudKitLog();
    v10 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
      sub_227E5C5E8(a1, (uint64_t)v9, v10);

  }
  v11 = _Block_copy(*(const void **)(a1 + 40));
  v12 = v11;
  if (v11)
    (*((void (**)(void *, id))v11 + 2))(v11, v9);

}

void sub_227DA839C(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v6;
  const char *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  const char *v11;
  void *v12;
  void *v13;
  id v14;
  const char *v15;
  uint64_t v16;
  _QWORD v17[4];
  void *v18;
  id v19;
  id v20;
  id v21;

  objc_msgSend_desiredRecordZoneIDs(*(void **)(a1 + 32), a2, a3, a4, a5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_valueForKey_(v6, v7, (uint64_t)CFSTR("zoneName"), v8, v9);
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend_errorWithDomain_code_userInfo_(MEMORY[0x24BDD1540], v11, (uint64_t)CFSTR("BDSCloudKitClientError"), 2003, 0);
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  v17[0] = MEMORY[0x24BDAC760];
  v17[1] = 3221225472;
  v17[2] = sub_227DA8498;
  v17[3] = &unk_24F089EC8;
  v13 = *(void **)(a1 + 40);
  v18 = *(void **)(a1 + 32);
  v19 = v13;
  v20 = v10;
  v21 = *(id *)(a1 + 48);
  v14 = v10;
  objc_msgSend_detachWithError_completion_(v18, v15, (uint64_t)v12, (uint64_t)v17, v16);

}

void sub_227DA8498(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  const char *v4;
  _QWORD v5[5];
  id v6;
  id v7;

  v2 = *(void **)(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  v5[0] = MEMORY[0x24BDAC760];
  v5[1] = 3221225472;
  v5[2] = sub_227DA8534;
  v5[3] = &unk_24F08A978;
  v5[4] = v2;
  v6 = *(id *)(a1 + 48);
  v7 = *(id *)(a1 + 56);
  objc_msgSend__deleteRecordZonesWithIDs_qualityOfService_completion_(v2, v4, v3, 17, (uint64_t)v5);

}

void sub_227DA8534(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  const char *v3;
  uint64_t v4;
  _QWORD v5[4];
  id v6;

  v1 = *(void **)(a1 + 32);
  v2 = *(_QWORD *)(a1 + 40);
  v5[0] = MEMORY[0x24BDAC760];
  v5[1] = 3221225472;
  v5[2] = sub_227DA85A8;
  v5[3] = &unk_24F08A7F8;
  v6 = *(id *)(a1 + 48);
  objc_msgSend_attachToZones_completion_(v1, v3, v2, (uint64_t)v5, v4);

}

void sub_227DA85A8(uint64_t a1)
{
  void (**v1)(void);
  void (**v2)(void);

  v1 = (void (**)(void))_Block_copy(*(const void **)(a1 + 32));
  if (v1)
  {
    v2 = v1;
    v1[2]();
    v1 = v2;
  }

}

void sub_227DA86C8(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  const char *v3;
  uint64_t v4;
  _QWORD v5[4];
  id v6;

  v1 = *(void **)(a1 + 32);
  v2 = *(_QWORD *)(a1 + 40);
  v5[0] = MEMORY[0x24BDAC760];
  v5[1] = 3221225472;
  v5[2] = sub_227DA873C;
  v5[3] = &unk_24F08A7F8;
  v6 = *(id *)(a1 + 48);
  objc_msgSend_detachWithError_completion_(v1, v3, v2, (uint64_t)v5, v4);

}

void sub_227DA873C(uint64_t a1)
{
  void (**v1)(void);
  void (**v2)(void);

  v1 = (void (**)(void))_Block_copy(*(const void **)(a1 + 32));
  if (v1)
  {
    v2 = v1;
    v1[2]();
    v1 = v2;
  }

}

void sub_227DA88BC(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v6;
  const char *v7;
  uint64_t v8;
  _QWORD v9[4];
  id v10;

  objc_msgSend_invalidateSalt(*(void **)(a1 + 32), a2, a3, a4, a5);
  v9[0] = MEMORY[0x24BDAC760];
  v9[1] = 3221225472;
  v9[2] = sub_227DA8938;
  v9[3] = &unk_24F08A7F8;
  v6 = *(void **)(a1 + 32);
  v10 = *(id *)(a1 + 40);
  objc_msgSend_detachWithError_completion_(v6, v7, 0, (uint64_t)v9, v8);

}

void sub_227DA8938(uint64_t a1)
{
  void (**v1)(void);
  void (**v2)(void);

  v1 = (void (**)(void))_Block_copy(*(const void **)(a1 + 32));
  if (v1)
  {
    v2 = v1;
    v1[2]();
    v1 = v2;
  }

}

void sub_227DA8A68(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  const char *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  const char *v13;
  uint64_t v14;
  const char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  const char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  int v25;
  const char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  void *v31;
  void *v32;
  const char *v33;
  uint64_t v34;
  id v35;

  objc_msgSend_observers(*(void **)(a1 + 32), a2, a3, a4, a5);
  v35 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend_objectForKeyedSubscript_(v35, v6, *(_QWORD *)(a1 + 40), v7, v8);
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  if (!v12)
  {
    v12 = (void *)objc_opt_new();
    objc_msgSend_setObject_forKeyedSubscript_(v35, v13, (uint64_t)v12, *(_QWORD *)(a1 + 40), v14);
  }
  objc_msgSend_addObject_(v12, v9, *(_QWORD *)(a1 + 48), v10, v11);
  objc_msgSend_container(*(void **)(a1 + 32), v15, v16, v17, v18);
  v19 = objc_claimAutoreleasedReturnValue();
  if (v19)
  {
    v24 = (void *)v19;
    v25 = objc_msgSend_attachedToContainer(*(void **)(a1 + 32), v20, v21, v22, v23);

    if (v25)
    {
      v30 = *(void **)(a1 + 48);
      v31 = *(void **)(a1 + 32);
      objc_msgSend_container(v31, v26, v27, v28, v29);
      v32 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend_databaseController_attachmentChanged_(v30, v33, (uint64_t)v31, v32 != 0, v34);

    }
  }

}

void sub_227DA8C40(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v6;
  const char *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  const char *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  const char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  const char *v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  NSObject *v23;
  _QWORD v24[4];
  NSObject *v25;

  objc_msgSend_observers(*(void **)(a1 + 32), a2, a3, a4, a5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_objectForKeyedSubscript_(v6, v7, *(_QWORD *)(a1 + 40), v8, v9);
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  if (v10)
  {
    v24[0] = MEMORY[0x24BDAC760];
    v24[1] = 3221225472;
    v24[2] = sub_227DA8D70;
    v24[3] = &unk_24F08AFE8;
    v25 = *(id *)(a1 + 48);
    objc_msgSend_indexesOfObjectsPassingTest_(v10, v11, (uint64_t)v24, v12, v13);
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    if (objc_msgSend_count(v14, v15, v16, v17, v18))
    {
      objc_msgSend_removeObjectsAtIndexes_(v10, v19, (uint64_t)v14, v20, v21);
    }
    else
    {
      BDSCloudKitLog();
      v23 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v23, OS_LOG_TYPE_ERROR))
        sub_227E5C834();

    }
    v22 = v25;
  }
  else
  {
    BDSCloudKitLog();
    v22 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR))
      sub_227E5C7CC();
  }

}

BOOL sub_227DA8D70(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)(a1 + 32) == a2;
}

void sub_227DA8E48(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v6;
  const char *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v10[4];
  id v11;

  objc_msgSend_observers(*(void **)(a1 + 32), a2, a3, a4, a5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v10[0] = MEMORY[0x24BDAC760];
  v10[1] = 3221225472;
  v10[2] = sub_227DA8EC8;
  v10[3] = &unk_24F08B010;
  v11 = *(id *)(a1 + 40);
  objc_msgSend_enumerateKeysAndObjectsUsingBlock_(v6, v7, (uint64_t)v10, v8, v9);

}

void sub_227DA8EC8(uint64_t a1, uint64_t a2, void *a3)
{
  const char *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  const char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  const char *v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  _QWORD v16[4];
  id v17;

  v15 = a3;
  v16[0] = MEMORY[0x24BDAC760];
  v16[1] = 3221225472;
  v16[2] = sub_227DA8F64;
  v16[3] = &unk_24F08AFE8;
  v17 = *(id *)(a1 + 32);
  objc_msgSend_indexesOfObjectsPassingTest_(v15, v4, (uint64_t)v16, v5, v6);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  if (objc_msgSend_count(v7, v8, v9, v10, v11))
    objc_msgSend_removeObjectsAtIndexes_(v15, v12, (uint64_t)v7, v13, v14);

}

BOOL sub_227DA8F64(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)(a1 + 32) == a2;
}

void sub_227DA909C(_Unwind_Exception *a1)
{
  uint64_t v1;

  objc_destroyWeak((id *)(v1 - 56));
  _Unwind_Resume(a1);
}

void sub_227DA90B0(uint64_t a1)
{
  id WeakRetained;
  NSObject *v3;
  void *v4;
  const char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t *v10;
  const char *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  const char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  const char *v28;
  uint64_t v29;
  const char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  const char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  const char *v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  const char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  NSObject *v47;
  const char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  uint64_t v53;
  const char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void *v58;
  const char *v59;
  uint64_t v60;
  uint64_t v61;
  const char *v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD v65[4];
  NSObject *v66;
  uint8_t buf[4];
  void *v68;
  __int16 v69;
  uint64_t v70;
  uint64_t v71;

  v71 = *MEMORY[0x24BDAC8D0];
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  if (WeakRetained)
  {
    BDSCloudKitLog();
    v3 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
    {
      v4 = *(void **)(a1 + 32);
      *(_DWORD *)buf = 138543362;
      v68 = v4;
      _os_log_impl(&dword_227D4F000, v3, OS_LOG_TYPE_INFO, "BCCloudKitDatabaseController - Registering store for record zone %{public}@", buf, 0xCu);
    }

    objc_msgSend_tokenStores(WeakRetained, v5, v6, v7, v8);
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    v10 = (uint64_t *)(a1 + 32);
    objc_msgSend_objectForKeyedSubscript_(v9, v11, *(_QWORD *)(a1 + 32), v12, v13);
    v14 = (void *)objc_claimAutoreleasedReturnValue();

    if (v14)
    {
      BDSCloudKitLog();
      v19 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v19, OS_LOG_TYPE_ERROR))
        sub_227E5C9CC((uint64_t)v10, v19, v20, v21, v22, v23, v24, v25);
    }
    else
    {
      v26 = *(_QWORD *)(a1 + 40);
      objc_msgSend_tokenStores(WeakRetained, v15, v16, v17, v18);
      v27 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend_setObject_forKeyedSubscript_(v27, v28, v26, *(_QWORD *)(a1 + 32), v29);

      if (objc_msgSend_attachedToContainer(*(void **)(a1 + 48), v30, v31, v32, v33))
      {
        objc_msgSend_changedRecordZoneIDs(WeakRetained, v34, v35, v36, v37);
        v38 = (void *)objc_claimAutoreleasedReturnValue();
        v42 = objc_msgSend_containsObject_(v38, v39, *v10, v40, v41);

        if (v42)
        {
          BDSCloudKitLog();
          v47 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v47, OS_LOG_TYPE_INFO))
          {
            objc_msgSend_containerIdentifier(WeakRetained, v48, v49, v50, v51);
            v52 = (void *)objc_claimAutoreleasedReturnValue();
            v53 = *v10;
            *(_DWORD *)buf = 138543618;
            v68 = v52;
            v69 = 2114;
            v70 = v53;
            _os_log_impl(&dword_227D4F000, v47, OS_LOG_TYPE_INFO, "BCCloudKitDatabaseController (%{public}@) - signal coalescedZoneFetch in registerServerChangeTokenStore:forZoneID: recordZoneID=%{public}@", buf, 0x16u);

          }
          objc_msgSend_coalescedZoneFetch(WeakRetained, v54, v55, v56, v57);
          v58 = (void *)objc_claimAutoreleasedReturnValue();
          v65[0] = MEMORY[0x24BDAC760];
          v65[1] = 3221225472;
          v65[2] = sub_227DA9360;
          v65[3] = &unk_24F08A3E0;
          v66 = (id)*v10;
          objc_msgSend_signalWithCompletion_(v58, v59, (uint64_t)v65, v60, v61);

          v19 = v66;
        }
        else
        {
          objc_msgSend_zoneName((void *)*v10, v43, v44, v45, v46);
          v19 = objc_claimAutoreleasedReturnValue();
          objc_msgSend_p_informObserversOfCompletedFetchOfZone_(WeakRetained, v62, (uint64_t)v19, v63, v64);
        }
      }
      else
      {
        BDSCloudKitLog();
        v19 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v19, OS_LOG_TYPE_INFO))
        {
          *(_WORD *)buf = 0;
          _os_log_impl(&dword_227D4F000, v19, OS_LOG_TYPE_INFO, "BCCloudKitDatabaseController - skipping fetch, we are not yet attached in registerServerChangeTokenStore:forZoneID:", buf, 2u);
        }
      }
    }

  }
}

void sub_227DA9360(uint64_t a1)
{
  NSObject *v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;

  v6 = *MEMORY[0x24BDAC8D0];
  BDSCloudKitLog();
  v2 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    v3 = *(_QWORD *)(a1 + 32);
    v4 = 138543362;
    v5 = v3;
    _os_log_impl(&dword_227D4F000, v2, OS_LOG_TYPE_INFO, "BCCloudKitDatabaseController - performed zone fetch for recordZoneID:%{public}@", (uint8_t *)&v4, 0xCu);
  }

}

void sub_227DA94F8(_Unwind_Exception *a1)
{
  uint64_t v1;

  objc_destroyWeak((id *)(v1 - 40));
  _Unwind_Resume(a1);
}

void sub_227DA950C(uint64_t a1)
{
  id WeakRetained;
  const char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  const char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  NSObject *v14;
  const char *v15;
  uint64_t v16;
  const char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t i;
  uint64_t v23;
  void *v24;
  const char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  NSObject *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  const char *v39;
  uint64_t v40;
  uint64_t v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  _BYTE v46[128];
  uint64_t v47;

  v47 = *MEMORY[0x24BDAC8D0];
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v7 = WeakRetained;
  if (WeakRetained)
  {
    objc_msgSend_tokenStores(WeakRetained, v3, v4, v5, v6);
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    v13 = (void *)objc_msgSend_copy(v8, v9, v10, v11, v12);

    v44 = 0u;
    v45 = 0u;
    v42 = 0u;
    v43 = 0u;
    v14 = v13;
    v16 = objc_msgSend_countByEnumeratingWithState_objects_count_(v14, v15, (uint64_t)&v42, (uint64_t)v46, 16);
    if (v16)
    {
      v20 = v16;
      v21 = *(_QWORD *)v43;
      while (2)
      {
        for (i = 0; i != v20; ++i)
        {
          if (*(_QWORD *)v43 != v21)
            objc_enumerationMutation(v14);
          v23 = *(_QWORD *)(*((_QWORD *)&v42 + 1) + 8 * i);
          objc_msgSend_objectForKeyedSubscript_(v14, v17, v23, v18, v19, (_QWORD)v42);
          v24 = (void *)objc_claimAutoreleasedReturnValue();
          v29 = v24;
          if (*(void **)(a1 + 32) == v24)
          {
            objc_msgSend_tokenStores(v7, v25, v26, v27, v28);
            v38 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend_removeObjectForKey_(v38, v39, v23, v40, v41);

            v30 = v14;
            goto LABEL_13;
          }

        }
        v20 = objc_msgSend_countByEnumeratingWithState_objects_count_(v14, v17, (uint64_t)&v42, (uint64_t)v46, 16);
        if (v20)
          continue;
        break;
      }
    }

    BDSCloudKitLog();
    v30 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v30, OS_LOG_TYPE_ERROR))
      sub_227E5CA68(v30, v31, v32, v33, v34, v35, v36, v37);
LABEL_13:

  }
}

void sub_227DA9804(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 80), 8);
  _Unwind_Resume(a1);
}

void sub_227DA9828(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  const char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;

  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24) = objc_msgSend_attachedToContainer(*(void **)(a1 + 32), a2, a3, a4, a5);
  objc_msgSend_container(*(void **)(a1 + 32), v6, v7, v8, v9);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_description(v10, v11, v12, v13, v14);
  v15 = objc_claimAutoreleasedReturnValue();
  v16 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
  v17 = *(void **)(v16 + 40);
  *(_QWORD *)(v16 + 40) = v15;

  dispatch_group_leave(*(dispatch_group_t *)(a1 + 40));
}

void sub_227DA9AE8(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v5;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  id v9;

  v5 = *(void **)(a1 + 32);
  objc_msgSend_zoneName(a2, (const char *)a2, a3, a4, a5);
  v9 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend_addObject_(v5, v6, (uint64_t)v9, v7, v8);

}

void sub_227DA9B2C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v5;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  const char *v11;
  uint64_t v12;
  uint64_t v13;
  id v14;

  v5 = *(void **)(a1 + 32);
  objc_msgSend_zoneID(a2, (const char *)a2, a3, a4, a5);
  v14 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend_zoneName(v14, v6, v7, v8, v9);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_addObject_(v5, v11, (uint64_t)v10, v12, v13);

}

void sub_227DA9C08()
{
  BDSBookWidgetDataFile *v0;
  void *v1;

  v0 = objc_alloc_init(BDSBookWidgetDataFile);
  v1 = (void *)qword_253F3C680;
  qword_253F3C680 = (uint64_t)v0;

}

void sub_227DAA064(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v5;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  const char *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  const char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  const char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  const char *v25;
  char v26;
  id v27;
  NSObject *v28;
  id v29;

  objc_msgSend_books(MEMORY[0x24BE0FBF0], a2, a3, a4, a5);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_containerURL(v5, v6, v7, v8, v9);
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend_URLByAppendingPathComponent_(v10, v11, (uint64_t)CFSTR("Library/Application Support/bookdatastored/"), v12, v13);
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_URLByAppendingPathComponent_(v14, v15, (uint64_t)CFSTR("/currentWidgetData.plist"), v16, v17);
  v18 = objc_claimAutoreleasedReturnValue();
  v19 = (void *)qword_25592A500;
  qword_25592A500 = v18;

  objc_msgSend_defaultManager(MEMORY[0x24BDD1580], v20, v21, v22, v23);
  v24 = (void *)objc_claimAutoreleasedReturnValue();
  v29 = 0;
  v26 = objc_msgSend_createDirectoryAtURL_withIntermediateDirectories_attributes_error_(v24, v25, (uint64_t)v14, 1, 0, &v29);
  v27 = v29;

  if ((v26 & 1) == 0)
  {
    BDSWidgetLog();
    v28 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v28, OS_LOG_TYPE_ERROR))
      sub_227E5CC1C();

  }
}

const __CFString *BDSLibraryContentAssetTypeFromExtension(void *a1)
{
  id v1;
  const char *v2;
  uint64_t v3;
  uint64_t v4;
  const char *v5;
  uint64_t v6;
  uint64_t v7;
  const char *v8;
  uint64_t v9;
  uint64_t v10;
  const char *v11;
  uint64_t v12;
  uint64_t v13;
  const char *v14;
  uint64_t v15;
  uint64_t v16;
  const char *v17;
  uint64_t v18;
  uint64_t v19;
  const char *v20;
  uint64_t v21;
  uint64_t v22;
  const char *v23;
  uint64_t v24;
  uint64_t v25;
  const char *v26;
  uint64_t v27;
  uint64_t v28;
  const char *v29;
  uint64_t v30;
  uint64_t v31;
  const char *v32;
  uint64_t v33;
  uint64_t v34;
  const char *v35;
  uint64_t v36;
  uint64_t v37;
  const char *v38;
  uint64_t v39;
  uint64_t v40;
  const char *v41;
  uint64_t v42;
  uint64_t v43;
  const char *v44;
  uint64_t v45;
  uint64_t v46;
  const char *v47;
  uint64_t v48;
  uint64_t v49;
  const char *v50;
  uint64_t v51;
  uint64_t v52;
  const char *v53;
  uint64_t v54;
  uint64_t v55;
  const char *v56;
  uint64_t v57;
  uint64_t v58;
  const char *v59;
  uint64_t v60;
  uint64_t v61;
  const char *v62;
  uint64_t v63;
  uint64_t v64;
  const __CFString *v65;

  v1 = a1;
  if (objc_msgSend_caseInsensitiveCompare_(CFSTR("pdf"), v2, (uint64_t)v1, v3, v4))
  {
    if (objc_msgSend_caseInsensitiveCompare_(CFSTR("epub"), v5, (uint64_t)v1, v6, v7)
      && objc_msgSend_caseInsensitiveCompare_(CFSTR("ibooks"), v8, (uint64_t)v1, v9, v10))
    {
      if (objc_msgSend_caseInsensitiveCompare_(CFSTR("m4a"), v11, (uint64_t)v1, v12, v13)
        && objc_msgSend_caseInsensitiveCompare_(CFSTR("m4b"), v14, (uint64_t)v1, v15, v16)
        && objc_msgSend_caseInsensitiveCompare_(CFSTR("m4p"), v17, (uint64_t)v1, v18, v19)
        && objc_msgSend_caseInsensitiveCompare_(CFSTR("aa"), v20, (uint64_t)v1, v21, v22)
        && objc_msgSend_caseInsensitiveCompare_(CFSTR("aax"), v23, (uint64_t)v1, v24, v25)
        && objc_msgSend_caseInsensitiveCompare_(CFSTR("mp3"), v26, (uint64_t)v1, v27, v28)
        && objc_msgSend_caseInsensitiveCompare_(CFSTR("mp4"), v29, (uint64_t)v1, v30, v31)
        && objc_msgSend_caseInsensitiveCompare_(CFSTR("aac"), v32, (uint64_t)v1, v33, v34)
        && objc_msgSend_caseInsensitiveCompare_(CFSTR("adts"), v35, (uint64_t)v1, v36, v37)
        && objc_msgSend_caseInsensitiveCompare_(CFSTR("ac3"), v38, (uint64_t)v1, v39, v40)
        && objc_msgSend_caseInsensitiveCompare_(CFSTR("aif"), v41, (uint64_t)v1, v42, v43)
        && objc_msgSend_caseInsensitiveCompare_(CFSTR("aiff"), v44, (uint64_t)v1, v45, v46)
        && objc_msgSend_caseInsensitiveCompare_(CFSTR("aifc"), v47, (uint64_t)v1, v48, v49)
        && objc_msgSend_caseInsensitiveCompare_(CFSTR("caf"), v50, (uint64_t)v1, v51, v52)
        && objc_msgSend_caseInsensitiveCompare_(CFSTR("snd"), v53, (uint64_t)v1, v54, v55)
        && objc_msgSend_caseInsensitiveCompare_(CFSTR("au"), v56, (uint64_t)v1, v57, v58)
        && objc_msgSend_caseInsensitiveCompare_(CFSTR("sd2"), v59, (uint64_t)v1, v60, v61)
        && objc_msgSend_caseInsensitiveCompare_(CFSTR("wav"), v62, (uint64_t)v1, v63, v64))
      {
        v65 = CFSTR("LibraryContentAssetTypeUnknown");
      }
      else
      {
        v65 = CFSTR("AssetTypeAudiobook");
      }
    }
    else
    {
      v65 = CFSTR("AssetTypeEbook");
    }
  }
  else
  {
    v65 = CFSTR("AssetTypePDF");
  }

  return v65;
}

void sub_227DAA508(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_227DAA520(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_227DAA530(uint64_t a1)
{

}

void sub_227DAA538(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;

  objc_msgSend_dataWithContentsOfURL_(MEMORY[0x24BDBCE50], a2, (uint64_t)a2, a4, a5);
  v6 = objc_claimAutoreleasedReturnValue();
  v7 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8);
  v8 = *(void **)(v7 + 40);
  *(_QWORD *)(v7 + 40) = v6;

}

void sub_227DAA6EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 80), 8);
  _Unwind_Resume(a1);
}

void sub_227DAA710(_QWORD *a1, const char *a2)
{
  void *v3;
  uint64_t v4;
  char v5;
  id obj;

  v3 = (void *)a1[4];
  v4 = *(_QWORD *)(a1[6] + 8);
  obj = *(id *)(v4 + 40);
  v5 = objc_msgSend_writeToURL_options_error_(v3, a2, (uint64_t)a2, 1073741825, (uint64_t)&obj);
  objc_storeStrong((id *)(v4 + 40), obj);
  *(_BYTE *)(*(_QWORD *)(a1[5] + 8) + 24) = v5;
}

void sub_227DAA8C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 64), 8);
  _Unwind_Resume(a1);
}

void sub_227DAA8EC(uint64_t a1, void *a2)
{
  void *v3;
  id v4;
  const char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  const char *v11;
  uint64_t v12;
  char v13;
  id obj;

  v3 = (void *)MEMORY[0x24BDD1580];
  v4 = a2;
  objc_msgSend_defaultManager(v3, v5, v6, v7, v8);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v10 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  obj = *(id *)(v10 + 40);
  v13 = objc_msgSend_removeItemAtURL_error_(v9, v11, (uint64_t)v4, (uint64_t)&obj, v12);

  objc_storeStrong((id *)(v10 + 40), obj);
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = v13;

}

void sub_227DAB020(uint64_t a1)
{
  const char *v1;
  uint64_t v2;
  uint64_t v3;
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend_p_iCloudIdentityDidChange_(WeakRetained, v1, 0, v2, v3);

}

void sub_227DAB194(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_227DAB1AC(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_227DAB1BC(uint64_t a1)
{

}

void sub_227DAB1C4(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;

  objc_msgSend_currentICloudIdentityToken(*(void **)(a1 + 32), a2, a3, a4, a5);
  v6 = objc_claimAutoreleasedReturnValue();
  v7 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v8 = *(void **)(v7 + 40);
  *(_QWORD *)(v7 + 40) = v6;

}

void sub_227DAB298(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v6;
  const char *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  const char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  const char *v18;
  uint64_t v19;
  uint64_t v20;
  id v21;

  objc_msgSend_observers(*(void **)(a1 + 32), a2, a3, a4, a5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v10 = objc_msgSend_containsObject_(v6, v7, *(_QWORD *)(a1 + 40), v8, v9);

  if (v10)
    BDSReportAssertionFailureWithMessage((uint64_t)"/Library/Caches/com.apple.xbs/Sources/AlderServices_Support/frameworks/BookDataStore/Utilities/BDSLiverpoolStatusMonitor.m", 195, (uint64_t)"-[BDSLiverpoolStatusMonitor addObserver:]_block_invoke", (uint64_t)"[self.observers containsObject:observer] == NO", CFSTR("%p is already an observer"), v15, v16, v17, *(_QWORD *)(a1 + 40));
  objc_msgSend_observers(*(void **)(a1 + 32), v11, v12, v13, v14);
  v21 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend_addObject_(v21, v18, *(_QWORD *)(a1 + 40), v19, v20);

}

void sub_227DAB3D4(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v6;
  const char *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  const char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  const char *v15;
  uint64_t v16;
  uint64_t v17;
  id v18;

  objc_msgSend_observers(*(void **)(a1 + 32), a2, a3, a4, a5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v10 = objc_msgSend_containsObject_(v6, v7, *(_QWORD *)(a1 + 40), v8, v9);

  if (v10)
  {
    objc_msgSend_observers(*(void **)(a1 + 32), v11, v12, v13, v14);
    v18 = (id)objc_claimAutoreleasedReturnValue();
    objc_msgSend_removeObject_(v18, v15, *(_QWORD *)(a1 + 40), v16, v17);

  }
}

void sub_227DAB4C0(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v6;
  const char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  const char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  const char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  const char *v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  const __CFString *v24;
  const char *v25;
  uint64_t v26;
  int v27;
  const __CFString *v28;
  uint64_t v29;

  v29 = *MEMORY[0x24BDAC8D0];
  objc_msgSend_currentICloudIdentityToken(*(void **)(a1 + 32), a2, a3, a4, a5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_dq_refreshICloudAvailabilityStatus(*(void **)(a1 + 32), v7, v8, v9, v10);
  objc_msgSend_currentICloudIdentityToken(*(void **)(a1 + 32), v11, v12, v13, v14);
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_dq_archiveCurrentICloudIdentityToken(*(void **)(a1 + 32), v16, v17, v18, v19);
  if (v6 != v15 && (objc_msgSend_isEqual_(v6, v20, (uint64_t)v15, v21, v22) & 1) == 0)
  {
    BDSCloudKitLog();
    v23 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v23, OS_LOG_TYPE_INFO))
    {
      v24 = CFSTR("YES");
      if (!v15)
        v24 = CFSTR("NO");
      v27 = 138412290;
      v28 = v24;
      _os_log_impl(&dword_227D4F000, v23, OS_LOG_TYPE_INFO, "iCloud identity changed. {iCloudEnabled: %@}", (uint8_t *)&v27, 0xCu);
    }

    objc_msgSend__notifyObserversWithCurrentToken_lastToken_(*(void **)(a1 + 32), v25, (uint64_t)v15, (uint64_t)v6, v26);
  }

}

uint64_t sub_227DAB83C(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return MEMORY[0x24BEDD108](a1[4], sel_liverpoolStatusChangedToAvailableWithNewIdentity_oldIdentity_, a1[5], a1[6], a5);
}

uint64_t sub_227DAB84C(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return MEMORY[0x24BEDD108](a1[4], sel_liverpoolStatusChangedToAvailableWithNewIdentity_oldIdentity_, a1[5], a1[6], a5);
}

void sub_227DABA4C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, void *a6)
{
  id v10;
  id v11;
  const char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  const char *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  const char *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  void (*v24)(void *, uint64_t, _QWORD *);
  void *v25;
  void *v26;
  const char *v27;
  void (**v28)(void *, _QWORD, void *);
  void *v29;
  _QWORD v30[5];
  id v31;
  uint64_t v32;

  v10 = a5;
  v11 = a6;
  if (objc_msgSend_count(a1, v12, v13, v14, v15) && !v10 && (a4 & 1) != 0)
  {
    objc_msgSend_pointerAtIndex_(a1, v16, 0, v17, v18);
    v19 = (void *)objc_claimAutoreleasedReturnValue();
    v23 = v19;
    if (v19)
    {
      v24 = (void (*)(void *, uint64_t, _QWORD *))objc_msgSend_methodForSelector_(v19, v20, a3, v21, v22);
      v30[0] = MEMORY[0x24BDAC760];
      v30[1] = 3221225472;
      v30[2] = sub_227DABBB8;
      v30[3] = &unk_24F08B1F8;
      v30[4] = a1;
      v32 = a3;
      v31 = v11;
      v24(v23, a3, v30);

    }
    else
    {
      v28 = (void (**)(void *, _QWORD, void *))_Block_copy(v11);
      if (v28)
      {
        objc_msgSend_errorWithDomain_code_userInfo_(MEMORY[0x24BDD1540], v27, (uint64_t)CFSTR("BDSArrayAdditionsErrorDomain"), 1000, 0);
        v29 = (void *)objc_claimAutoreleasedReturnValue();
        v28[2](v28, 0, v29);

      }
    }

  }
  else
  {
    v25 = _Block_copy(v11);
    v26 = v25;
    if (v25)
      (*((void (**)(void *, uint64_t, id))v25 + 2))(v25, a4, v10);

  }
}

void sub_227DABBB8(uint64_t a1, uint64_t a2, void *a3)
{
  void *v5;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  const char *v9;
  id v10;

  v5 = *(void **)(a1 + 32);
  v10 = a3;
  objc_msgSend_removePointerAtIndex_(v5, v6, 0, v7, v8);
  objc_msgSend_bds_chainSuccessAndErrorCompletionSelectorCallsForSelector_successSoFar_errorSoFar_completion_(*(void **)(a1 + 32), v9, *(_QWORD *)(a1 + 48), a2, (uint64_t)v10, *(_QWORD *)(a1 + 40));

}

void sub_227DABC18(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, void *a6)
{
  id v9;
  id v10;
  const char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  const char *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  const char *v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  void (*v23)(void *, uint64_t, _QWORD *);
  void (**v24)(void);
  void (**v25)(void);
  void (*v26)(void);
  void (**v27)(void);
  const char *v28;
  void (**v29)(void *, _QWORD, void *);
  void *v30;
  _QWORD v31[5];
  id v32;
  uint64_t v33;

  v9 = a5;
  v10 = a6;
  if (!objc_msgSend_count(a1, v11, v12, v13, v14))
  {
    v24 = (void (**)(void))_Block_copy(v10);
    v25 = v24;
    if (v24)
    {
      v26 = v24[2];
LABEL_9:
      v26();
    }
LABEL_10:

    goto LABEL_15;
  }
  if (!v9)
  {
    v27 = (void (**)(void))_Block_copy(v10);
    v25 = v27;
    if (v27)
    {
      v26 = v27[2];
      goto LABEL_9;
    }
    goto LABEL_10;
  }
  objc_msgSend_pointerAtIndex_(a1, v15, 0, v16, v17);
  v18 = (void *)objc_claimAutoreleasedReturnValue();
  v22 = v18;
  if (v18)
  {
    v23 = (void (*)(void *, uint64_t, _QWORD *))objc_msgSend_methodForSelector_(v18, v19, a3, v20, v21);
    v31[0] = MEMORY[0x24BDAC760];
    v31[1] = 3221225472;
    v31[2] = sub_227DABDA4;
    v31[3] = &unk_24F08B1F8;
    v31[4] = a1;
    v33 = a3;
    v32 = v10;
    v23(v22, a3, v31);

  }
  else
  {
    v29 = (void (**)(void *, _QWORD, void *))_Block_copy(v10);
    if (v29)
    {
      objc_msgSend_errorWithDomain_code_userInfo_(MEMORY[0x24BDD1540], v28, (uint64_t)CFSTR("BDSArrayAdditionsErrorDomain"), 1000, 0);
      v30 = (void *)objc_claimAutoreleasedReturnValue();
      v29[2](v29, 0, v30);

    }
  }

LABEL_15:
}

void sub_227DABDA4(uint64_t a1, uint64_t a2, void *a3)
{
  void *v5;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  const char *v9;
  id v10;

  v5 = *(void **)(a1 + 32);
  v10 = a3;
  objc_msgSend_removePointerAtIndex_(v5, v6, 0, v7, v8);
  objc_msgSend_bds_chainSuccessAndErrorCompletionSelectorCallsForSelector_successSoFar_errorSoFar_completion_(*(void **)(a1 + 32), v9, *(_QWORD *)(a1 + 48), a2, (uint64_t)v10, *(_QWORD *)(a1 + 40));

}

id sub_227DABE04(void *a1, uint64_t a2, void *a3, void *a4)
{
  id v6;
  void (**v7)(id, void *, void *);
  void *v8;
  const char *v9;
  uint64_t v10;
  const char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t i;
  void *v17;
  void *v18;
  const char *v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  void *v23;
  const char *v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  void *v28;
  const char *v29;
  uint64_t v30;
  const char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  void *v37;
  id obj;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  _BYTE v43[128];
  uint64_t v44;

  v44 = *MEMORY[0x24BDAC8D0];
  v6 = a3;
  v7 = a4;
  v8 = (void *)objc_opt_new();
  v39 = 0u;
  v40 = 0u;
  v41 = 0u;
  v42 = 0u;
  obj = a1;
  v10 = objc_msgSend_countByEnumeratingWithState_objects_count_(obj, v9, (uint64_t)&v39, (uint64_t)v43, 16);
  if (v10)
  {
    v14 = v10;
    v15 = *(_QWORD *)v40;
    do
    {
      for (i = 0; i != v14; ++i)
      {
        if (*(_QWORD *)v40 != v15)
          objc_enumerationMutation(obj);
        v17 = *(void **)(*((_QWORD *)&v39 + 1) + 8 * i);
        objc_msgSend_valueForKey_(v17, v11, (uint64_t)v6, v12, v13, v37);
        v18 = (void *)objc_claimAutoreleasedReturnValue();
        objc_opt_class();
        v37 = &unk_2559350F8;
        BUClassAndProtocolCast();
        v22 = (void *)objc_claimAutoreleasedReturnValue();
        if (v22)
        {
          objc_msgSend_objectForKeyedSubscript_(v8, v19, (uint64_t)v22, v20, v21, &unk_2559350F8);
          v23 = (void *)objc_claimAutoreleasedReturnValue();

          if (v23)
          {
            objc_msgSend_objectForKeyedSubscript_(v8, v24, (uint64_t)v22, v25, v26);
            v27 = (void *)objc_claimAutoreleasedReturnValue();
            v7[2](v7, v27, v17);
            v28 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend_setObject_forKeyedSubscript_(v8, v29, (uint64_t)v28, (uint64_t)v22, v30);

          }
          else
          {
            objc_msgSend_setObject_forKeyedSubscript_(v8, v24, (uint64_t)v17, (uint64_t)v22, v26);
          }
        }

      }
      v14 = objc_msgSend_countByEnumeratingWithState_objects_count_(obj, v11, (uint64_t)&v39, (uint64_t)v43, 16);
    }
    while (v14);
  }

  v35 = (void *)objc_msgSend_copy(v8, v31, v32, v33, v34);
  return v35;
}

id sub_227DAC000(void *a1, uint64_t a2, void *a3)
{
  id v4;
  void *v5;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  const char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t i;
  void *v17;
  const char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  const char *v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  void *v27;
  void *v28;

  v4 = a3;
  v5 = (void *)objc_opt_new();
  v10 = objc_msgSend_count(a1, v6, v7, v8, v9);
  if (v10)
  {
    v15 = v10;
    for (i = 0; i != v15; ++i)
    {
      objc_msgSend_objectAtIndex_(a1, v11, i, v13, v14);
      v17 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend_null(MEMORY[0x24BDBCEF8], v18, v19, v20, v21);
      v22 = (void *)objc_claimAutoreleasedReturnValue();

      if (v17 == v22)
      {
        v26 = _Block_copy(v4);
        v27 = v26;
        if (v26)
          (*((void (**)(void *, uint64_t))v26 + 2))(v26, i);

      }
      else
      {
        objc_msgSend_addObject_(v5, v23, (uint64_t)v17, v24, v25);
      }

    }
  }
  v28 = (void *)objc_msgSend_copy(v5, v11, v12, v13, v14);

  return v28;
}

uint64_t sub_227DAC0F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return MEMORY[0x24BEDD108](a1, sel_bds_arrayByRemovingNSNullsInvokingBlockForNulls_, 0, a4, a5);
}

void sub_227DAC0F8(void *a1, uint64_t a2, unint64_t a3, void *a4)
{
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  const char *v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  void *v20;
  unint64_t v21;
  unint64_t v22;
  void (**v23)(id, void *, uint64_t, _QWORD);

  v23 = a4;
  if (v23)
  {
    v10 = objc_msgSend_count(a1, v6, v7, v8, v9);
    if (v10)
    {
      v13 = v10;
      v14 = 0;
      v15 = v10 + a3;
      v16 = -(uint64_t)a3;
      v17 = v10;
      do
      {
        v18 = v17 - a3;
        if (v17 >= a3)
        {
          v19 = a3;
          objc_msgSend_subarrayWithRange_(a1, v11, v14, a3, v12);
        }
        else
        {
          v19 = v17;
          objc_msgSend_subarrayWithRange_(a1, v11, v14, v17, v12);
        }
        v20 = (void *)objc_claimAutoreleasedReturnValue();
        v23[2](v23, v20, v14, v19);

        v15 -= a3;
        if (a3 >= v15)
          v21 = v15;
        else
          v21 = a3;
        v16 += a3;
        v22 = v21 + v16;
        v14 += a3;
        v17 = v18;
      }
      while (v22 < v13);
    }
    else
    {
      v23[2](v23, (void *)MEMORY[0x24BDBD1A8], 0x7FFFFFFFFFFFFFFFLL, 0);
    }
  }

}

void sub_227DAC1F0(void *a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v6;
  id v7;
  const char *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  const char *v13;
  uint64_t v14;
  const char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  const char *v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  _BYTE v26[128];
  uint64_t v27;

  v27 = *MEMORY[0x24BDAC8D0];
  v6 = a4;
  v7 = objc_alloc(MEMORY[0x24BDD1748]);
  v11 = (void *)objc_msgSend_initWithOptions_(v7, v8, 5, v9, v10);
  v22 = 0u;
  v23 = 0u;
  v24 = 0u;
  v25 = 0u;
  v12 = a1;
  v14 = objc_msgSend_countByEnumeratingWithState_objects_count_(v12, v13, (uint64_t)&v22, (uint64_t)v26, 16);
  if (v14)
  {
    v18 = v14;
    v19 = *(_QWORD *)v23;
    do
    {
      v20 = 0;
      do
      {
        if (*(_QWORD *)v23 != v19)
          objc_enumerationMutation(v12);
        objc_msgSend_addPointer_(v11, v15, *(_QWORD *)(*((_QWORD *)&v22 + 1) + 8 * v20++), v16, v17, (_QWORD)v22);
      }
      while (v18 != v20);
      v18 = objc_msgSend_countByEnumeratingWithState_objects_count_(v12, v15, (uint64_t)&v22, (uint64_t)v26, 16);
    }
    while (v18);
  }

  objc_msgSend_bds_chainSuccessAndErrorCompletionSelectorCallsForSelector_successSoFar_errorSoFar_completion_(v11, v21, a3, 1, 0, v6);
}

void sub_227DAC328(void *a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v6;
  id v7;
  const char *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  const char *v13;
  uint64_t v14;
  const char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  const char *v21;
  void *v22;
  const char *v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  _BYTE v28[128];
  uint64_t v29;

  v29 = *MEMORY[0x24BDAC8D0];
  v6 = a4;
  v7 = objc_alloc(MEMORY[0x24BDD1748]);
  v11 = (void *)objc_msgSend_initWithOptions_(v7, v8, 5, v9, v10);
  v24 = 0u;
  v25 = 0u;
  v26 = 0u;
  v27 = 0u;
  v12 = a1;
  v14 = objc_msgSend_countByEnumeratingWithState_objects_count_(v12, v13, (uint64_t)&v24, (uint64_t)v28, 16);
  if (v14)
  {
    v18 = v14;
    v19 = *(_QWORD *)v25;
    do
    {
      v20 = 0;
      do
      {
        if (*(_QWORD *)v25 != v19)
          objc_enumerationMutation(v12);
        objc_msgSend_addPointer_(v11, v15, *(_QWORD *)(*((_QWORD *)&v24 + 1) + 8 * v20++), v16, v17, (_QWORD)v24);
      }
      while (v18 != v20);
      v18 = objc_msgSend_countByEnumeratingWithState_objects_count_(v12, v15, (uint64_t)&v24, (uint64_t)v28, 16);
    }
    while (v18);
  }

  objc_msgSend_errorWithDomain_code_userInfo_(MEMORY[0x24BDD1540], v21, (uint64_t)CFSTR("BDSArrayAdditionsErrorDomain"), 0, 0);
  v22 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_bds_chainUntilNoErrorCompletionSelectorCallsForSelector_successSoFar_errorSoFar_completion_(v11, v23, a3, 1, (uint64_t)v22, v6);

}

__CFString *sub_227DAC488()
{
  const __CFUUID *v0;
  __CFString *v1;

  v0 = CFUUIDCreate(0);
  v1 = (__CFString *)CFUUIDCreateString(0, v0);
  CFRelease(v0);
  return v1;
}

void sub_227DAC4C8(uint64_t a1, int a2, void *a3)
{
  id v5;
  NSObject *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  const char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  int v18;
  void *v19;
  uint64_t v20;

  v20 = *MEMORY[0x24BDAC8D0];
  v5 = a3;
  if (v5)
  {
    BDSCloudKitLog();
    v6 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
      sub_227E5CC7C((uint64_t)v5, v6, v7, v8, v9, v10, v11, v12);
  }
  else
  {
    if (!a2)
      goto LABEL_5;
    BDSCloudKitLog();
    v6 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend_zoneName(*(void **)(a1 + 32), v13, v14, v15, v16);
      v17 = (void *)objc_claimAutoreleasedReturnValue();
      v18 = 138412290;
      v19 = v17;
      _os_log_impl(&dword_227D4F000, v6, OS_LOG_TYPE_DEFAULT, "#dissociateCloudData Change Token Controller successfully transitioned to a new cloud container for zone: %@", (uint8_t *)&v18, 0xCu);

    }
  }

LABEL_5:
}

void sub_227DAC830(uint64_t a1)
{
  NSObject *v2;
  const char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  const char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  const char *v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  const char *v18;
  uint64_t v19;
  void *v20;
  id v21;
  const char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  const char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  const char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (**v34)(_QWORD, _QWORD, _QWORD);
  const char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  const char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  NSObject *v44;
  const char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  uint64_t v50;
  void *v51;
  void *v52;
  NSObject *v53;
  const char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void *v58;
  const char *v59;
  NSObject *v60;
  const char *v61;
  id v62;
  uint8_t buf[4];
  void *v64;
  __int16 v65;
  void *v66;
  __int16 v67;
  uint64_t v68;
  __int16 v69;
  int v70;
  uint64_t v71;

  v71 = *MEMORY[0x24BDAC8D0];
  BDSCloudKitSyncLog();
  v2 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    objc_msgSend_zoneName(*(void **)(a1 + 32), v3, v4, v5, v6);
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v8 = *(void **)(a1 + 40);
    *(_DWORD *)buf = 138412546;
    v64 = v7;
    v65 = 2112;
    v66 = v8;
    _os_log_impl(&dword_227D4F000, v2, OS_LOG_TYPE_DEFAULT, "[BCCloudChangeTokenController] #saltVersionIdentifierChanged - %@ - zoneNeedsUpdate serverSaltVersionIdentifier:(%@)", buf, 0x16u);

  }
  objc_msgSend_fetchRequest(BCSaltVersionIdentifier, v9, v10, v11, v12);
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_setReturnsObjectsAsFaults_(v13, v14, 0, v15, v16);
  v17 = *(void **)(a1 + 48);
  v62 = 0;
  objc_msgSend_executeFetchRequest_error_(v17, v18, (uint64_t)v13, (uint64_t)&v62, v19);
  v20 = (void *)objc_claimAutoreleasedReturnValue();
  v21 = v62;
  if (objc_msgSend_count(v20, v22, v23, v24, v25))
  {
    if (objc_msgSend_count(v20, v26, v27, v28, v29) == 1)
    {
      objc_msgSend_firstObject(v20, v30, v31, v32, v33);
      v34 = (void (**)(_QWORD, _QWORD, _QWORD))objc_claimAutoreleasedReturnValue();
      objc_msgSend_localSaltVersionIdentifier(v34, v35, v36, v37, v38);
      v39 = (void *)objc_claimAutoreleasedReturnValue();
      v43 = objc_msgSend_isEqualToString_(v39, v40, *(_QWORD *)(a1 + 40), v41, v42) ^ 1;
      BDSCloudKitSyncLog();
      v44 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v44, OS_LOG_TYPE_DEFAULT))
      {
        objc_msgSend_zoneName(*(void **)(a1 + 32), v45, v46, v47, v48);
        v49 = (void *)objc_claimAutoreleasedReturnValue();
        v50 = *(_QWORD *)(a1 + 40);
        *(_DWORD *)buf = 138413058;
        v64 = v49;
        v65 = 2112;
        v66 = v39;
        v67 = 2112;
        v68 = v50;
        v69 = 1024;
        v70 = v43;
        _os_log_impl(&dword_227D4F000, v44, OS_LOG_TYPE_DEFAULT, "[BCCloudChangeTokenController] #saltVersionIdentifierChanged - %@  Comparing local(%@) to server(%@).Need update:%{BOOL}d", buf, 0x26u);

      }
      v51 = _Block_copy(*(const void **)(a1 + 56));
      v52 = v51;
      if (v51)
        (*((void (**)(void *, uint64_t, _QWORD))v51 + 2))(v51, v43, 0);

      goto LABEL_18;
    }
    BDSCloudKitSyncLog();
    v60 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v60, OS_LOG_TYPE_ERROR))
      sub_227E5CCE4();

    v34 = (void (**)(_QWORD, _QWORD, _QWORD))_Block_copy(*(const void **)(a1 + 56));
    if (v34)
    {
      objc_msgSend_errorWithDomain_code_userInfo_(MEMORY[0x24BDD1540], v61, (uint64_t)CFSTR("BDSErrorDomain"), 1006, 0);
      v39 = (void *)objc_claimAutoreleasedReturnValue();
      ((void (**)(_QWORD, uint64_t, void *))v34)[2](v34, 1, v39);
      goto LABEL_18;
    }
  }
  else
  {
    BDSCloudKitSyncLog();
    v53 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v53, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend_zoneName(*(void **)(a1 + 32), v54, v55, v56, v57);
      v58 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138412290;
      v64 = v58;
      _os_log_impl(&dword_227D4F000, v53, OS_LOG_TYPE_DEFAULT, "[BCCloudChangeTokenController] #saltVersionIdentifierChanged - %@ - no local identifier saved", buf, 0xCu);

    }
    v34 = (void (**)(_QWORD, _QWORD, _QWORD))_Block_copy(*(const void **)(a1 + 56));
    if (v34)
    {
      objc_msgSend_errorWithDomain_code_userInfo_(MEMORY[0x24BDD1540], v59, (uint64_t)CFSTR("BDSErrorDomain"), 1003, 0);
      v39 = (void *)objc_claimAutoreleasedReturnValue();
      ((void (**)(_QWORD, _QWORD, void *))v34)[2](v34, 0, v39);
LABEL_18:

    }
  }

}

void sub_227DACC58(uint64_t a1)
{
  NSObject *v2;
  const char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  const char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  const char *v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  const char *v18;
  uint64_t v19;
  void *v20;
  const char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  const char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t inited;
  const char *v31;
  uint64_t v32;
  uint64_t v33;
  const char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  const char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  void *v44;
  void *v45;
  const char *v46;
  uint64_t v47;
  uint64_t v48;
  const char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  NSObject *v53;
  const char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void *v58;
  uint64_t v59;
  BCSaltVersionIdentifier *v60;
  const char *v61;
  uint64_t v62;
  uint64_t v63;
  const char *v64;
  uint64_t v65;
  uint64_t v66;
  const char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  const char *v71;
  uint64_t v72;
  uint64_t v73;
  void *v74;
  int v75;
  id v76;
  NSObject *v77;
  const char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  void *v82;
  NSObject *v83;
  const char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  void *v88;
  uint64_t v89;
  void *v90;
  void *v91;
  id v92;
  id v93;
  uint8_t buf[4];
  void *v95;
  __int16 v96;
  _BYTE v97[18];
  uint64_t v98;

  v98 = *MEMORY[0x24BDAC8D0];
  BDSCloudKitSyncLog();
  v2 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    objc_msgSend_zoneName(*(void **)(a1 + 32), v3, v4, v5, v6);
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v8 = *(_QWORD *)(a1 + 40);
    *(_DWORD *)buf = 138412546;
    v95 = v7;
    v96 = 2112;
    *(_QWORD *)v97 = v8;
    _os_log_impl(&dword_227D4F000, v2, OS_LOG_TYPE_DEFAULT, "[BCCloudChangeTokenController] #saltVersionIdentifierChanged - %@ - updateSaltVersionIdentifier serverSaltVersionIdentifier:(%@)", buf, 0x16u);

  }
  objc_msgSend_fetchRequest(BCSaltVersionIdentifier, v9, v10, v11, v12);
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_setReturnsObjectsAsFaults_(v13, v14, 0, v15, v16);
  v17 = *(void **)(a1 + 48);
  v93 = 0;
  objc_msgSend_executeFetchRequest_error_(v17, v18, (uint64_t)v13, (uint64_t)&v93, v19);
  v20 = (void *)objc_claimAutoreleasedReturnValue();
  v25 = v93;
  if (v20)
  {
    if (objc_msgSend_count(v20, v21, v22, v23, v24) == 1)
    {
      objc_msgSend_firstObject(v20, v26, v27, v28, v29);
      inited = objc_claimAutoreleasedReturnValue();
    }
    else
    {
      if ((unint64_t)objc_msgSend_count(v20, v26, v27, v28, v29) >= 2)
      {
        objc_msgSend_firstObject(v20, v34, v35, v36, v37);
        v38 = (void *)objc_claimAutoreleasedReturnValue();
        if ((unint64_t)objc_msgSend_count(v20, v39, v40, v41, v42) >= 2)
        {
          v43 = 1;
          do
          {
            v44 = *(void **)(a1 + 48);
            objc_msgSend_objectAtIndexedSubscript_(v20, v31, v43, v32, v33);
            v45 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend_deleteObject_(v44, v46, (uint64_t)v45, v47, v48);

            ++v43;
          }
          while (objc_msgSend_count(v20, v49, v50, v51, v52) > v43);
        }
LABEL_15:
        objc_msgSend_setLocalSaltVersionIdentifier_(v38, v31, *(_QWORD *)(a1 + 40), v32, v33);
        objc_msgSend_setServerSaltVersionIdentifier_(v38, v64, *(_QWORD *)(a1 + 40), v65, v66);
        if (objc_msgSend_hasChanges(*(void **)(a1 + 48), v67, v68, v69, v70))
        {
          v74 = *(void **)(a1 + 48);
          v92 = v25;
          v75 = objc_msgSend_save_(v74, v71, (uint64_t)&v92, v72, v73);
          v76 = v92;

          BDSCloudKitSyncLog();
          v77 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v77, OS_LOG_TYPE_DEFAULT))
          {
            objc_msgSend_zoneName(*(void **)(a1 + 32), v78, v79, v80, v81);
            v82 = (void *)objc_claimAutoreleasedReturnValue();
            *(_DWORD *)buf = 138412802;
            v95 = v82;
            v96 = 1024;
            *(_DWORD *)v97 = v75;
            *(_WORD *)&v97[4] = 2112;
            *(_QWORD *)&v97[6] = v76;
            _os_log_impl(&dword_227D4F000, v77, OS_LOG_TYPE_DEFAULT, "[BCCloudChangeTokenController] #saltVersionIdentifierChanged - %@ - updateSaltVersionIdentifier SAVE success %{BOOL}d error:(%@)", buf, 0x1Cu);

          }
          if ((v75 & 1) != 0)
            goto LABEL_25;
          BDSCloudKitSyncLog();
          v83 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v83, OS_LOG_TYPE_ERROR))
          {
            objc_msgSend_zoneName(*(void **)(a1 + 32), v84, v85, v86, v87);
            v88 = (void *)objc_claimAutoreleasedReturnValue();
            v89 = *(_QWORD *)(a1 + 40);
            *(_DWORD *)buf = 138412802;
            v95 = v88;
            v96 = 2112;
            *(_QWORD *)v97 = v89;
            *(_WORD *)&v97[8] = 2114;
            *(_QWORD *)&v97[10] = v76;
            _os_log_error_impl(&dword_227D4F000, v83, OS_LOG_TYPE_ERROR, "[BCCloudChangeTokenController] #saltVersionIdentifierChanged - %@ - updateSaltVersionIdentifier Error saving saltVersionIdentifier:(%@) Error:%{public}@", buf, 0x20u);

          }
        }
        else
        {
          BDSCloudKitSyncLog();
          v83 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v83, OS_LOG_TYPE_ERROR))
            sub_227E5CD7C();
          v76 = v25;
        }

LABEL_25:
        v25 = v76;
        goto LABEL_26;
      }
      BDSCloudKitSyncLog();
      v53 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v53, OS_LOG_TYPE_DEFAULT))
      {
        objc_msgSend_zoneName(*(void **)(a1 + 32), v54, v55, v56, v57);
        v58 = (void *)objc_claimAutoreleasedReturnValue();
        v59 = *(_QWORD *)(a1 + 40);
        *(_DWORD *)buf = 138412546;
        v95 = v58;
        v96 = 2112;
        *(_QWORD *)v97 = v59;
        _os_log_impl(&dword_227D4F000, v53, OS_LOG_TYPE_DEFAULT, "[BCCloudChangeTokenController] #saltVersionIdentifierChanged - %@ - updateSaltVersionIdentifier NEW record %@", buf, 0x16u);

      }
      v60 = [BCSaltVersionIdentifier alloc];
      inited = objc_msgSend_initIntoManagedObjectContext_(v60, v61, *(_QWORD *)(a1 + 48), v62, v63);
    }
    v38 = (void *)inited;
    goto LABEL_15;
  }
LABEL_26:
  v90 = _Block_copy(*(const void **)(a1 + 56));
  v91 = v90;
  if (v90)
    (*((void (**)(void *, BOOL, id))v90 + 2))(v90, v25 == 0, v25);

}

void sub_227DAD104(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v6;
  id v7;
  const char *v8;
  uint64_t v9;
  uint64_t v10;
  void *Request;
  const char *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  const char *v16;
  uint64_t v17;
  void *v18;
  const char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  NSObject *v24;
  void *v25;
  const char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  const char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  void *v36;
  const char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  const char *v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  const char *v46;
  void *v47;
  const char *v48;
  void *v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  id v54;
  _QWORD v55[3];
  _QWORD v56[4];

  v56[3] = *MEMORY[0x24BDAC8D0];
  objc_msgSend_fetchRequestWithEntityName_(MEMORY[0x24BDBB678], a2, (uint64_t)CFSTR("BCServerChangeToken"), a4, a5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = objc_alloc(MEMORY[0x24BDBB5E8]);
  Request = (void *)objc_msgSend_initWithFetchRequest_(v7, v8, (uint64_t)v6, v9, v10);
  objc_msgSend_setResultType_(Request, v12, 1, v13, v14);
  v15 = *(void **)(a1 + 32);
  v54 = 0;
  objc_msgSend_executeRequest_error_(v15, v16, (uint64_t)Request, (uint64_t)&v54, v17);
  v18 = (void *)objc_claimAutoreleasedReturnValue();
  v23 = v54;
  if (v23)
  {
    BDSCloudKitLog();
    v24 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v24, OS_LOG_TYPE_ERROR))
      sub_227E5CE10();

  }
  if (v18)
  {
    objc_msgSend_defaultCenter(MEMORY[0x24BDD16D0], v19, v20, v21, v22);
    v25 = (void *)objc_claimAutoreleasedReturnValue();
    v51 = *(_QWORD *)(a1 + 32);
    v52 = *MEMORY[0x24BDBB458];
    v55[0] = *MEMORY[0x24BDBB430];
    v53 = v6;
    objc_msgSend_set(MEMORY[0x24BDBCF20], v26, v27, v28, v29);
    v30 = (void *)objc_claimAutoreleasedReturnValue();
    v56[0] = v30;
    v55[1] = *MEMORY[0x24BDBB598];
    objc_msgSend_set(MEMORY[0x24BDBCF20], v31, v32, v33, v34);
    v35 = (void *)objc_claimAutoreleasedReturnValue();
    v56[1] = v35;
    v55[2] = *MEMORY[0x24BDBB3F8];
    v36 = (void *)MEMORY[0x24BDBCF20];
    objc_msgSend_result(v18, v37, v38, v39, v40);
    v41 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_setWithArray_(v36, v42, (uint64_t)v41, v43, v44);
    v45 = (void *)objc_claimAutoreleasedReturnValue();
    v56[2] = v45;
    objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x24BDBCE70], v46, (uint64_t)v56, (uint64_t)v55, 3);
    v47 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_postNotificationName_object_userInfo_(v25, v48, v52, v51, (uint64_t)v47);

    v6 = v53;
  }
  v49 = _Block_copy(*(const void **)(a1 + 48));
  v50 = v49;
  if (v49)
    (*((void (**)(void *, BOOL, id))v49 + 2))(v49, v18 != 0, v23);

}

void sub_227DAD55C(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v6;
  const char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  NSObject *v12;
  const char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  id v19;
  const char *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  const char *v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  const char *v28;
  uint64_t v29;
  void *v30;
  id v31;
  const char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  const char *v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  const char *v40;
  uint64_t v41;
  const char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  const char *v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  id v50;
  NSObject *v51;
  void *v52;
  void *v53;
  id v54;
  id v55;
  uint8_t buf[4];
  void *v57;
  __int16 v58;
  uint64_t v59;
  uint64_t v60;

  v60 = *MEMORY[0x24BDAC8D0];
  objc_msgSend_shared(MEMORY[0x24BE0FC08], a2, a3, a4, a5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v11 = objc_msgSend_verboseLoggingEnabled(v6, v7, v8, v9, v10);

  if (v11)
  {
    BDSCloudKitDevelopmentLog();
    v12 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend_zoneName(*(void **)(a1 + 32), v13, v14, v15, v16);
      v17 = (void *)objc_claimAutoreleasedReturnValue();
      v18 = *(_QWORD *)(a1 + 40);
      *(_DWORD *)buf = 138412546;
      v57 = v17;
      v58 = 2112;
      v59 = v18;
      _os_log_impl(&dword_227D4F000, v12, OS_LOG_TYPE_DEFAULT, "\"\\\"BCCloudChangeTokenController - #recordChange zone: %@ storing server change token: %@\\\"\"", buf, 0x16u);

    }
  }
  v19 = objc_alloc(MEMORY[0x24BDBB678]);
  v23 = (void *)objc_msgSend_initWithEntityName_(v19, v20, (uint64_t)CFSTR("BCServerChangeToken"), v21, v22);
  objc_msgSend_setReturnsObjectsAsFaults_(v23, v24, 0, v25, v26);
  v27 = *(void **)(a1 + 48);
  v55 = 0;
  objc_msgSend_executeFetchRequest_error_(v27, v28, (uint64_t)v23, (uint64_t)&v55, v29);
  v30 = (void *)objc_claimAutoreleasedReturnValue();
  v31 = v55;
  if (objc_msgSend_count(v30, v32, v33, v34, v35))
    objc_msgSend_objectAtIndexedSubscript_(v30, v36, 0, v37, v38);
  else
    objc_msgSend_insertNewObjectForEntityForName_inManagedObjectContext_(MEMORY[0x24BDBB658], v36, (uint64_t)CFSTR("BCServerChangeToken"), *(_QWORD *)(a1 + 48), v38);
  v39 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_setValue_forKey_(v39, v40, *(_QWORD *)(a1 + 56), (uint64_t)CFSTR("serverChangeToken"), v41);

  if (objc_msgSend_hasChanges(*(void **)(a1 + 48), v42, v43, v44, v45))
  {
    v49 = *(void **)(a1 + 48);
    v54 = v31;
    objc_msgSend_save_(v49, v46, (uint64_t)&v54, v47, v48);
    v50 = v54;

    if (v50)
    {
      BDSCloudKitLog();
      v51 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v51, OS_LOG_TYPE_ERROR))
        sub_227E5CE90();

    }
  }
  else
  {
    v50 = v31;
  }
  v52 = _Block_copy(*(const void **)(a1 + 64));
  v53 = v52;
  if (v52)
    (*((void (**)(void *))v52 + 2))(v52);

}

void sub_227DAD8C8(uint64_t a1)
{
  id v2;
  const char *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  const char *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  const char *v11;
  uint64_t v12;
  void *v13;
  const char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  NSObject *v19;
  id v20;
  const char *v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  const char *v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  const char *v29;
  uint64_t v30;
  void *v31;
  id v32;
  NSObject *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  id v41;
  const char *v42;
  uint64_t v43;
  uint64_t v44;
  const char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  NSObject *v49;
  const char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void *v54;
  void *v55;
  void *v56;
  id v57;
  id v58;
  uint8_t buf[4];
  void *v60;
  __int16 v61;
  void *v62;
  uint64_t v63;

  v63 = *MEMORY[0x24BDAC8D0];
  v2 = objc_alloc(MEMORY[0x24BDBB678]);
  v6 = (void *)objc_msgSend_initWithEntityName_(v2, v3, (uint64_t)CFSTR("BCServerChangeToken"), v4, v5);
  objc_msgSend_setReturnsObjectsAsFaults_(v6, v7, 0, v8, v9);
  v10 = *(void **)(a1 + 32);
  v58 = 0;
  objc_msgSend_executeFetchRequest_error_(v10, v11, (uint64_t)v6, (uint64_t)&v58, v12);
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  v18 = v58;
  if (v18)
  {
    BDSCloudKitLog();
    v19 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v19, OS_LOG_TYPE_ERROR))
      sub_227E5CF78();

  }
  if (objc_msgSend_count(v13, v14, v15, v16, v17))
  {
    v20 = objc_alloc(MEMORY[0x24BDD1620]);
    objc_msgSend_objectAtIndexedSubscript_(v13, v21, 0, v22, v23);
    v24 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_valueForKey_(v24, v25, (uint64_t)CFSTR("serverChangeToken"), v26, v27);
    v28 = (void *)objc_claimAutoreleasedReturnValue();
    v57 = 0;
    v31 = (void *)objc_msgSend_initForReadingFromData_error_(v20, v29, (uint64_t)v28, (uint64_t)&v57, v30);
    v32 = v57;

    if (v32)
    {
      BDSCloudKitLog();
      v33 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v33, OS_LOG_TYPE_ERROR))
        sub_227E5CF10((uint64_t)v32, v33, v34, v35, v36, v37, v38, v39);

      v40 = 0;
    }
    else
    {
      v41 = objc_alloc(MEMORY[0x24BDB9228]);
      v40 = (void *)objc_msgSend_initWithCoder_(v41, v42, (uint64_t)v31, v43, v44);
      objc_msgSend_finishDecoding(v31, v45, v46, v47, v48);
    }

  }
  else
  {
    v40 = 0;
  }
  BDSCloudKitLog();
  v49 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v49, OS_LOG_TYPE_INFO))
  {
    objc_msgSend_zoneName(*(void **)(a1 + 40), v50, v51, v52, v53);
    v54 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 138412546;
    v60 = v54;
    v61 = 2112;
    v62 = v40;
    _os_log_impl(&dword_227D4F000, v49, OS_LOG_TYPE_INFO, "BCCloudChangeTokenController - #recordChange zone: %@ returning server change token: %@", buf, 0x16u);

  }
  v55 = _Block_copy(*(const void **)(a1 + 48));
  v56 = v55;
  if (v55)
    (*((void (**)(void *, void *))v55 + 2))(v55, v40);

}

void sub_227DADBC0(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  NSObject *v9;

  _os_log_error_impl(a1, v9, OS_LOG_TYPE_ERROR, a4, &a9, 0x16u);
}

void sub_227DAEE80(uint64_t a1, uint64_t a2, void *a3)
{
  void *v4;
  id v5;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  const char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  const char *v16;
  uint64_t v17;

  v4 = (void *)MEMORY[0x22E2AA24C]();
  v5 = a3;
  objc_msgSend_sharedReachabilityForInternetConnection(BDSReachability, v6, v7, v8, v9);
  v10 = (id)objc_claimAutoreleasedReturnValue();

  if (v10 == v5)
    objc_msgSend__updateIsOffline(BDSReachability, v11, v12, v13, v14);
  objc_msgSend_defaultCenter(MEMORY[0x24BDD16D0], v11, v12, v13, v14);
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_postNotificationName_object_(v15, v16, (uint64_t)CFSTR("kNetworkReachabilityChangedNotification"), (uint64_t)v5, v17);

  objc_autoreleasePoolPop(v4);
}

void sub_227DB011C(_Unwind_Exception *a1)
{
  uint64_t v1;

  objc_destroyWeak((id *)(v1 - 56));
  _Unwind_Resume(a1);
}

void sub_227DB0144(void **a1, int a2, int a3)
{
  NSObject *v6;
  const char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  const char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  const __CFString *v18;
  const __CFString *v19;
  const char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  void *v25;
  void *v26;
  _QWORD block[4];
  id v28;
  id v29;
  id v30;
  uint8_t buf[4];
  uint64_t v32;
  __int16 v33;
  const __CFString *v34;
  __int16 v35;
  const __CFString *v36;
  uint64_t v37;

  v37 = *MEMORY[0x24BDAC8D0];
  BDSCloudKitLog();
  v6 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
  {
    objc_msgSend_delegate(a1[4], v7, v8, v9, v10);
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_entityName(v11, v12, v13, v14, v15);
    v16 = objc_claimAutoreleasedReturnValue();
    v17 = (void *)v16;
    v18 = CFSTR("NO");
    if (a2)
      v19 = CFSTR("YES");
    else
      v19 = CFSTR("NO");
    *(_DWORD *)buf = 138412802;
    v32 = v16;
    v34 = v19;
    v33 = 2112;
    if (a3)
      v18 = CFSTR("YES");
    v35 = 2112;
    v36 = v18;
    _os_log_impl(&dword_227D4F000, v6, OS_LOG_TYPE_INFO, "BCCloudDataSyncManager: syncCloudData: entityName: %@, attachedState: %@ reachable: %@", buf, 0x20u);

  }
  if (a2 && a3)
  {
    objc_msgSend_syncQueue(a1[4], v20, v21, v22, v23);
    v24 = objc_claimAutoreleasedReturnValue();
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 3221225472;
    block[2] = sub_227DB0310;
    block[3] = &unk_24F08A740;
    objc_copyWeak(&v30, a1 + 7);
    v28 = a1[5];
    v29 = a1[6];
    dispatch_async(v24, block);

    objc_destroyWeak(&v30);
  }
  else
  {
    v25 = _Block_copy(a1[6]);
    v26 = v25;
    if (v25)
      (*((void (**)(void *))v25 + 2))(v25);

  }
}

void sub_227DB0310(uint64_t a1)
{
  const char *v2;
  uint64_t v3;
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  objc_msgSend__syncQueueSyncForCloudData_completion_(WeakRetained, v2, *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), v3);

}

void sub_227DB0594(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v5;
  void *v7;
  const char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  NSObject *v13;
  const char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  const char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  const __CFString *v25;
  int v26;
  uint64_t v27;
  __int16 v28;
  const __CFString *v29;
  uint64_t v30;

  v5 = (int)a2;
  v30 = *MEMORY[0x24BDAC8D0];
  objc_msgSend_shared(MEMORY[0x24BE0FC08], a2, a3, a4, a5);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v12 = objc_msgSend_verboseLoggingEnabled(v7, v8, v9, v10, v11);

  if (v12)
  {
    BDSCloudKitDevelopmentLog();
    v13 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend_delegate(*(void **)(a1 + 32), v14, v15, v16, v17);
      v18 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend_entityName(v18, v19, v20, v21, v22);
      v23 = objc_claimAutoreleasedReturnValue();
      v24 = (void *)v23;
      v25 = CFSTR("NO");
      if (v5)
        v25 = CFSTR("YES");
      v26 = 138412546;
      v27 = v23;
      v28 = 2112;
      v29 = v25;
      _os_log_impl(&dword_227D4F000, v13, OS_LOG_TYPE_DEFAULT, "\"\\\"#zonefetch BCCloudDataSyncManager: databaseController:recordsChanged: entityName: %@, success: %@\\\"\"", (uint8_t *)&v26, 0x16u);

    }
  }
}

void sub_227DB08B4(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (**v10)(void);
  void *v11;
  const char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  void *v17;
  const char *v18;
  uint64_t v19;
  uint64_t v20;
  void (**v21)(void);
  _QWORD v22[5];
  id v23;

  if (objc_msgSend_serverPushPostponed(*(void **)(a1 + 32), a2, a3, a4, a5))
  {
    v10 = (void (**)(void))_Block_copy(*(const void **)(a1 + 40));
    if (v10)
    {
      v21 = v10;
      v10[2]();
      v10 = v21;
    }

  }
  else
  {
    objc_msgSend_cloudKitController(*(void **)(a1 + 32), v6, v7, v8, v9);
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_privateCloudDatabaseController(v11, v12, v13, v14, v15);
    v16 = (void *)objc_claimAutoreleasedReturnValue();

    v22[0] = MEMORY[0x24BDAC760];
    v22[1] = 3221225472;
    v22[2] = sub_227DB0990;
    v22[3] = &unk_24F08B340;
    v17 = *(void **)(a1 + 40);
    v22[4] = *(_QWORD *)(a1 + 32);
    v23 = v17;
    objc_msgSend_getAttached_(v16, v18, (uint64_t)v22, v19, v20);

  }
}

void sub_227DB0990(uint64_t a1, uint64_t a2, uint64_t a3)
{
  NSObject *v6;
  const char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  const char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  const char *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  const char *v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  const char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  const char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  const char *v35;
  uint64_t v36;
  void *v37;
  int v38;
  void *v39;
  __int16 v40;
  void *v41;
  __int16 v42;
  void *v43;
  uint64_t v44;

  v44 = *MEMORY[0x24BDAC8D0];
  BDSCloudKitLog();
  v6 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    objc_msgSend_delegate(*(void **)(a1 + 32), v7, v8, v9, v10);
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_entityName(v11, v12, v13, v14, v15);
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_numberWithBool_(MEMORY[0x24BDD16E0], v17, a2, v18, v19);
    v20 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_numberWithBool_(MEMORY[0x24BDD16E0], v21, a3, v22, v23);
    v24 = (void *)objc_claimAutoreleasedReturnValue();
    v38 = 138543874;
    v39 = v16;
    v40 = 2114;
    v41 = v20;
    v42 = 2114;
    v43 = v24;
    _os_log_impl(&dword_227D4F000, v6, OS_LOG_TYPE_DEFAULT, "BCCloudDataSyncManager: startSyncToCKWithCompletion entityName: %{public}@, attachedState: %{public}@ reachable: %{public}@", (uint8_t *)&v38, 0x20u);

  }
  if ((_DWORD)a2
    && (_DWORD)a3
    && (objc_msgSend_delegate(*(void **)(a1 + 32), v25, v26, v27, v28),
        v29 = (void *)objc_claimAutoreleasedReturnValue(),
        v29,
        v29))
  {
    objc_msgSend_delegate(*(void **)(a1 + 32), v30, v31, v32, v33);
    v34 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_syncManager_startSyncToCKWithCompletion_(v34, v35, *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), v36);
  }
  else
  {
    v37 = _Block_copy(*(const void **)(a1 + 40));
    v34 = v37;
    if (v37)
      (*((void (**)(void *))v37 + 2))(v37);
  }

}

void sub_227DB12F0(uint64_t a1, void *a2, void *a3, void *a4)
{
  const char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  const char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  const char *v16;
  uint64_t v17;
  uint64_t v18;
  const char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  const char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  const char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  NSObject *v32;
  unint64_t v33;
  int v34;
  int v35;
  uint64_t v36;
  unint64_t v37;
  id v38;
  const char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t i;
  void *v43;
  NSObject *v44;
  const char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  const char *v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  void *v54;
  const char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  const char *v60;
  uint64_t v61;
  uint64_t v62;
  void *v63;
  const char *v64;
  uint64_t v65;
  uint64_t v66;
  const char *v67;
  uint64_t v68;
  uint64_t v69;
  const char *v70;
  const char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  const char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  void *v81;
  const char *v82;
  uint64_t v83;
  const char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  const char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  _BOOL4 v92;
  NSObject *v93;
  const char *v94;
  uint64_t v95;
  const char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  void *v101;
  uint64_t v102;
  const char *v103;
  uint64_t v104;
  uint64_t v105;
  char isEqualToString;
  const char *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  NSObject *v111;
  const char *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  NSObject *v116;
  NSObject *v117;
  const char *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t (*v122)(uint64_t, uint64_t);
  NSObject *v123;
  NSObject *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  const char *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  void *v136;
  const char *v137;
  uint64_t v138;
  uint64_t v139;
  const char *v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  const char *v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  void *v148;
  const char *v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  void *v153;
  const char *v154;
  uint64_t v155;
  void *v156;
  void *v157;
  const char *v158;
  void *v159;
  const char *v160;
  uint64_t v161;
  void *v162;
  const char *v163;
  uint64_t v164;
  uint64_t v165;
  NSObject *v166;
  const char *v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  id v172;
  const char *v173;
  const char *v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t j;
  uint64_t v181;
  void *v182;
  BOOL v183;
  void *v184;
  const char *v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  void *v189;
  const char *v190;
  uint64_t v191;
  uint64_t v192;
  int isEqual;
  const char *v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  void *v198;
  const char *v199;
  uint64_t v200;
  uint64_t v201;
  NSObject *v202;
  const char *v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  _BOOL4 v207;
  NSObject *v208;
  NSObject *v209;
  const char *v210;
  uint64_t v211;
  NSObject *v212;
  const char *v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  const char *v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  int v223;
  NSObject *v224;
  NSObject *v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  const char *v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  const char *v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  const char *v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  const char *v245;
  const char *v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t k;
  void *v251;
  void *v252;
  const char *v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t m;
  uint64_t v257;
  const char *v258;
  uint64_t v259;
  uint64_t v260;
  void *v261;
  void *v262;
  const char *v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  void *v267;
  const char *v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  NSObject *v272;
  const char *v273;
  uint64_t v274;
  uint64_t v275;
  const char *v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  const char *v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  NSObject *v284;
  const char *v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  id v290;
  const char *v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  void *v295;
  const char *v296;
  uint64_t v297;
  uint64_t v298;
  void *v299;
  const char *v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  void *v304;
  const char *v305;
  uint64_t v306;
  uint64_t v307;
  const char *v308;
  uint64_t v309;
  uint64_t v310;
  const char *v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  void *v315;
  const char *v316;
  uint64_t v317;
  uint64_t v318;
  uint64_t v319;
  void *v320;
  const char *v321;
  uint64_t v322;
  uint64_t v323;
  uint64_t v324;
  void *v325;
  const char *v326;
  uint64_t v327;
  uint64_t v328;
  void *v329;
  const char *v330;
  uint64_t v331;
  uint64_t v332;
  const char *v333;
  uint64_t v334;
  void *v335;
  void *v336;
  NSObject *v337;
  int v338;
  void *v339;
  unint64_t v340;
  id v341;
  void *obj;
  void *v343;
  id v344;
  id v345;
  id *from;
  uint64_t froma;
  id WeakRetained;
  uint64_t v349;
  uint64_t v350;
  void *v351;
  uint64_t v352;
  _QWORD v353[5];
  _QWORD v354[5];
  id v355;
  id v356;
  uint64_t v357;
  id v358;
  _QWORD v359[5];
  id v360;
  uint64_t v361;
  _QWORD v362[5];
  id v363;
  uint64_t v364;
  _QWORD v365[4];
  NSObject *v366;
  id v367;
  id v368;
  id v369;
  uint64_t v370;
  __int128 v371;
  __int128 v372;
  __int128 v373;
  __int128 v374;
  __int128 v375;
  __int128 v376;
  __int128 v377;
  __int128 v378;
  __int128 v379;
  __int128 v380;
  __int128 v381;
  __int128 v382;
  _QWORD v383[5];
  id v384;
  uint64_t v385;
  _QWORD v386[5];
  id v387;
  uint64_t v388;
  __int128 v389;
  __int128 v390;
  __int128 v391;
  __int128 v392;
  _QWORD block[5];
  id v394;
  uint64_t v395;
  const __CFString *v396;
  _BYTE buf[24];
  uint64_t (*v398)(uint64_t, uint64_t);
  void (*v399)(uint64_t);
  id v400;
  _BYTE v401[128];
  _BYTE v402[128];
  _BYTE v403[128];
  _BYTE v404[128];
  uint64_t v405;

  v405 = *MEMORY[0x24BDAC8D0];
  v341 = a2;
  v344 = a3;
  v345 = a4;
  v352 = a1;
  from = (id *)(a1 + 64);
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 64));
  objc_msgSend_delegate(WeakRetained, v7, v8, v9, v10);
  v343 = (void *)objc_claimAutoreleasedReturnValue();
  if (!WeakRetained)
  {
    v33 = 0;
    v34 = 0;
    v35 = 0;
    v36 = v352;
    v37 = *(_QWORD *)(v352 + 72);
LABEL_47:
    objc_msgSend__leaveDispatchGroup_times_(WeakRetained, v11, *(_QWORD *)(v36 + 32), v37 - v33, v14);
    goto LABEL_48;
  }
  if (!v345)
  {
LABEL_5:
    dispatch_group_enter(*(dispatch_group_t *)(a1 + 32));
    objc_msgSend_syncQueue(WeakRetained, v28, v29, v30, v31);
    v32 = objc_claimAutoreleasedReturnValue();
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 3221225472;
    block[2] = sub_227DB25B0;
    block[3] = &unk_24F08A408;
    block[4] = WeakRetained;
    v394 = *(id *)(a1 + 32);
    dispatch_async(v32, block);

    goto LABEL_8;
  }
  objc_msgSend_domain(v345, v11, v12, v13, v14);
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_msgSend_isEqualToString_(v15, v16, *MEMORY[0x24BDB8EA8], v17, v18) & 1) != 0)
  {
    v23 = objc_msgSend_code(v345, v19, v20, v21, v22);

    if (v23 != 2)
      goto LABEL_8;
    goto LABEL_5;
  }

LABEL_8:
  objc_msgSend_array(MEMORY[0x24BDBCEB8], v24, v25, v26, v27);
  v351 = (void *)objc_claimAutoreleasedReturnValue();
  v391 = 0u;
  v392 = 0u;
  v389 = 0u;
  v390 = 0u;
  v38 = v341;
  v40 = objc_msgSend_countByEnumeratingWithState_objects_count_(v38, v39, (uint64_t)&v389, (uint64_t)v404, 16);
  if (v40)
  {
    v41 = *(_QWORD *)v390;
    do
    {
      for (i = 0; i != v40; ++i)
      {
        if (*(_QWORD *)v390 != v41)
          objc_enumerationMutation(v38);
        v43 = *(void **)(*((_QWORD *)&v389 + 1) + 8 * i);
        BDSCloudKitLog();
        v44 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v44, OS_LOG_TYPE_DEFAULT))
        {
          objc_msgSend_encryptedValuesByKey(v43, v45, v46, v47, v48);
          v49 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend_objectForKeyedSubscript_(v49, v50, (uint64_t)CFSTR("localRecordIDEncrypted"), v51, v52);
          v53 = (void *)objc_claimAutoreleasedReturnValue();
          *(_DWORD *)buf = 138412546;
          *(_QWORD *)&buf[4] = v53;
          *(_WORD *)&buf[12] = 2112;
          *(_QWORD *)&buf[14] = v43;
          _os_log_impl(&dword_227D4F000, v44, OS_LOG_TYPE_DEFAULT, "Successful save of CKRecord id=%@ %@", buf, 0x16u);

        }
        v54 = *(void **)(a1 + 40);
        objc_msgSend_recordID(v43, v55, v56, v57, v58);
        v59 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend_objectForKeyedSubscript_(v54, v60, (uint64_t)v59, v61, v62);
        v63 = (void *)objc_claimAutoreleasedReturnValue();

        objc_msgSend_setSystemFields_(v63, v64, (uint64_t)v43, v65, v66);
        objc_msgSend_addObject_(v351, v67, (uint64_t)v63, v68, v69);

      }
      v40 = objc_msgSend_countByEnumeratingWithState_objects_count_(v38, v70, (uint64_t)&v389, (uint64_t)v404, 16);
    }
    while (v40);
  }

  v79 = objc_msgSend_count(v351, v71, v72, v73, v74);
  v80 = 0;
  if (v79)
  {
    v81 = v343;
    if (!v343)
      goto LABEL_21;
    v386[0] = MEMORY[0x24BDAC760];
    v386[1] = 3221225472;
    v386[2] = sub_227DB25DC;
    v386[3] = &unk_24F08B368;
    v386[4] = WeakRetained;
    v387 = *(id *)(a1 + 32);
    v388 = v79;
    objc_msgSend_syncManager_updateSyncGenerationFromCloudData_completion_(v343, v82, (uint64_t)WeakRetained, (uint64_t)v351, (uint64_t)v386);

    v80 = v79;
  }
  v81 = v343;
LABEL_21:
  v340 = v80;
  v83 = objc_msgSend_count(v344, v75, v76, v77, v78);
  if (objc_msgSend_count(v344, v84, v85, v86, v87))
    v92 = v81 != 0;
  else
    v92 = 0;
  if (v92)
  {
    BDSCloudKitLog();
    v93 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v93, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138412290;
      *(_QWORD *)&buf[4] = v344;
      _os_log_impl(&dword_227D4F000, v93, OS_LOG_TYPE_DEFAULT, "Successful removal of CKRecord ids=%@", buf, 0xCu);
    }

    v383[0] = MEMORY[0x24BDAC760];
    v383[1] = 3221225472;
    v383[2] = sub_227DB25EC;
    v383[3] = &unk_24F08B368;
    v383[4] = WeakRetained;
    v384 = *(id *)(v352 + 32);
    v385 = v83;
    objc_msgSend_syncManager_removeCloudDataForIDs_completion_(v343, v94, (uint64_t)WeakRetained, (uint64_t)v344, (uint64_t)v383);

    v340 += v83;
  }
  v95 = objc_msgSend_code(v345, v88, v89, v90, v91);
  if (!v345)
  {
    BDSCloudKitLog();
    v117 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v117, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend_operationID(*(void **)(v352 + 48), v118, v119, v120, v121);
      v122 = (uint64_t (*)(uint64_t, uint64_t))objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 134218498;
      *(_QWORD *)&buf[4] = v79;
      *(_WORD *)&buf[12] = 2048;
      *(_QWORD *)&buf[14] = v83;
      *(_WORD *)&buf[22] = 2114;
      v398 = v122;
      _os_log_impl(&dword_227D4F000, v117, OS_LOG_TYPE_DEFAULT, "Total success saving %lu records and deleting %lu records OperationID: %{public}@", buf, 0x20u);

    }
    goto LABEL_42;
  }
  v100 = v95;
  objc_msgSend_domain(v345, v96, v97, v98, v99);
  v101 = (void *)objc_claimAutoreleasedReturnValue();
  v102 = *MEMORY[0x24BDB8EA8];
  isEqualToString = objc_msgSend_isEqualToString_(v101, v103, *MEMORY[0x24BDB8EA8], v104, v105);

  if ((isEqualToString & 1) == 0)
  {
    BDSCloudKitLog();
    v123 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v123, OS_LOG_TYPE_ERROR))
      sub_227E5D1F0();
    goto LABEL_41;
  }
  if (v100 > 110)
  {
    switch(v100)
    {
      case 111:
        goto LABEL_61;
      case 112:
        v35 = 0;
        LOBYTE(v338) = 1;
        goto LABEL_43;
      case 5008:
LABEL_61:
        LOBYTE(v338) = 0;
        v35 = 1;
        goto LABEL_43;
    }
    goto LABEL_96;
  }
  if ((unint64_t)v100 > 0x1B)
    goto LABEL_96;
  if (((1 << v100) & 0x88000C0) != 0)
  {
    BDSCloudKitLog();
    v111 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v111, OS_LOG_TYPE_ERROR))
      sub_227E5D1F0();

    objc_msgSend_syncQueue(WeakRetained, v112, v113, v114, v115);
    v116 = objc_claimAutoreleasedReturnValue();
    v354[0] = MEMORY[0x24BDAC760];
    v354[1] = 3221225472;
    v354[2] = sub_227DB2858;
    v354[3] = &unk_24F08B3B8;
    v354[4] = WeakRetained;
    v355 = v345;
    v356 = *(id *)(v352 + 40);
    objc_copyWeak(&v358, from);
    v357 = *(_QWORD *)(v352 + 56);
    dispatch_async(v116, v354);

    objc_destroyWeak(&v358);
    goto LABEL_42;
  }
  if (v100 != 2)
  {
LABEL_96:
    BDSCloudKitLog();
    v123 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v123, OS_LOG_TYPE_ERROR))
      sub_227E5D1F0();
LABEL_41:

LABEL_42:
    v35 = 0;
    LOBYTE(v338) = 0;
    goto LABEL_43;
  }
  objc_msgSend_userInfo(v345, v107, v108, v109, v110);
  v162 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_objectForKeyedSubscript_(v162, v163, *MEMORY[0x24BDB8EE8], v164, v165);
  v335 = (void *)objc_claimAutoreleasedReturnValue();

  BDSCloudKitLog();
  v166 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v166, OS_LOG_TYPE_INFO))
  {
    v171 = objc_msgSend_count(v335, v167, v168, v169, v170);
    *(_DWORD *)buf = 134218496;
    *(_QWORD *)&buf[4] = v79;
    *(_WORD *)&buf[12] = 2048;
    *(_QWORD *)&buf[14] = v83;
    *(_WORD *)&buf[22] = 2048;
    v398 = (uint64_t (*)(uint64_t, uint64_t))v171;
    _os_log_impl(&dword_227D4F000, v166, OS_LOG_TYPE_INFO, "Partial failure saving %lu records and deleting %lu records.  Failed %lu.", buf, 0x20u);
  }

  if (v343)
  {
    v337 = objc_opt_new();
    v336 = (void *)objc_opt_new();
    v381 = 0u;
    v382 = 0u;
    v379 = 0u;
    v380 = 0u;
    v172 = v335;
    v178 = objc_msgSend_countByEnumeratingWithState_objects_count_(v172, v173, (uint64_t)&v379, (uint64_t)v403, 16);
    if (v178)
    {
      v338 = 0;
      v179 = *(_QWORD *)v380;
      v349 = *MEMORY[0x24BDB8F10];
      do
      {
        for (j = 0; j != v178; ++j)
        {
          if (*(_QWORD *)v380 != v179)
            objc_enumerationMutation(v172);
          v181 = *(_QWORD *)(*((_QWORD *)&v379 + 1) + 8 * j);
          objc_msgSend_null(MEMORY[0x24BDBCEF8], v174, v175, v176, v177);
          v182 = (void *)objc_claimAutoreleasedReturnValue();
          v183 = v181 == (_QWORD)v182;

          if (!v183)
          {
            objc_msgSend_objectForKeyedSubscript_(v172, v174, v181, v176, v177);
            v184 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend_domain(v184, v185, v186, v187, v188);
            v189 = (void *)objc_claimAutoreleasedReturnValue();
            isEqual = objc_msgSend_isEqual_(v189, v190, v102, v191, v192);

            if (isEqual)
            {
              objc_msgSend_userInfo(v184, v194, v195, v196, v197);
              v198 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend_objectForKey_(v198, v199, v349, v200, v201);
              v202 = objc_claimAutoreleasedReturnValue();

              if (v202)
              {
                v207 = objc_msgSend_code(v184, v203, v204, v205, v206) == 14;
                BDSCloudKitLog();
                v208 = objc_claimAutoreleasedReturnValue();
                v209 = v208;
                if (v207)
                {
                  if (os_log_type_enabled(v208, OS_LOG_TYPE_INFO))
                  {
                    *(_DWORD *)buf = 138543618;
                    *(_QWORD *)&buf[4] = v181;
                    *(_WORD *)&buf[12] = 2114;
                    *(_QWORD *)&buf[14] = v184;
                    _os_log_impl(&dword_227D4F000, v209, OS_LOG_TYPE_INFO, "CKErrorServerRecordChanged record %{public}@ perRecordError %{public}@", buf, 0x16u);
                  }

                  objc_msgSend_setObject_forKeyedSubscript_(v337, v210, (uint64_t)v202, v181, v211);
                }
                else
                {
                  if (os_log_type_enabled(v208, OS_LOG_TYPE_ERROR))
                  {
                    *(_DWORD *)buf = 138543874;
                    *(_QWORD *)&buf[4] = v202;
                    *(_WORD *)&buf[12] = 2114;
                    *(_QWORD *)&buf[14] = v345;
                    *(_WORD *)&buf[22] = 2114;
                    v398 = (uint64_t (*)(uint64_t, uint64_t))v184;
                    _os_log_error_impl(&dword_227D4F000, v209, OS_LOG_TYPE_ERROR, "Error for record %{public}@ operationError %{public}@ perRecordError %{public}@", buf, 0x20u);
                  }

                }
              }
              else
              {
                BDSCloudKitLog();
                v212 = objc_claimAutoreleasedReturnValue();
                if (os_log_type_enabled(v212, OS_LOG_TYPE_ERROR))
                {
                  *(_DWORD *)buf = 138543874;
                  *(_QWORD *)&buf[4] = v181;
                  *(_WORD *)&buf[12] = 2114;
                  *(_QWORD *)&buf[14] = v345;
                  *(_WORD *)&buf[22] = 2114;
                  v398 = (uint64_t (*)(uint64_t, uint64_t))v184;
                  _os_log_error_impl(&dword_227D4F000, v212, OS_LOG_TYPE_ERROR, "Unable to retrieve serverRecord for recordID %{public}@ operationError %{public}@ perRecordError %{public}@", buf, 0x20u);
                }

                if (objc_msgSend_code(v184, v213, v214, v215, v216) == 21
                  || objc_msgSend_code(v184, v217, v218, v219, v220) == 14)
                {
                  objc_msgSend_addObject_(v336, v217, v181, v219, v220);
                }
                else
                {
                  v222 = objc_msgSend_code(v184, v217, v221, v219, v220);
                  v223 = v338;
                  if (v222 == 112)
                    v223 = 1;
                  v338 = v223;
                }
              }
            }
            else
            {
              BDSCloudKitLog();
              v202 = objc_claimAutoreleasedReturnValue();
              if (os_log_type_enabled(v202, OS_LOG_TYPE_ERROR))
              {
                *(_DWORD *)buf = 138412546;
                *(_QWORD *)&buf[4] = v181;
                *(_WORD *)&buf[12] = 2114;
                *(_QWORD *)&buf[14] = v184;
                _os_log_error_impl(&dword_227D4F000, v202, OS_LOG_TYPE_ERROR, "Error modifying record:%@ error=%{public}@", buf, 0x16u);
              }
            }

          }
        }
        v178 = objc_msgSend_countByEnumeratingWithState_objects_count_(v172, v174, (uint64_t)&v379, (uint64_t)v403, 16);
      }
      while (v178);
    }
    else
    {
      LOBYTE(v338) = 0;
    }

    v334 = objc_msgSend_count(v337, v233, v234, v235, v236);
    if (v334)
    {
      objc_msgSend_set(MEMORY[0x24BDBCEF0], v237, v238, v239, v240);
      v339 = (void *)objc_claimAutoreleasedReturnValue();
      v377 = 0u;
      v378 = 0u;
      v375 = 0u;
      v376 = 0u;
      objc_msgSend_allValues(v337, v241, v242, v243, v244);
      obj = (void *)objc_claimAutoreleasedReturnValue();
      v350 = objc_msgSend_countByEnumeratingWithState_objects_count_(obj, v245, (uint64_t)&v375, (uint64_t)v402, 16);
      if (v350)
      {
        froma = *(_QWORD *)v376;
        do
        {
          for (k = 0; k != v350; ++k)
          {
            if (*(_QWORD *)v376 != froma)
              objc_enumerationMutation(obj);
            v251 = *(void **)(*((_QWORD *)&v375 + 1) + 8 * k);
            v371 = 0u;
            v372 = 0u;
            v373 = 0u;
            v374 = 0u;
            objc_msgSend_allKeys(v251, v246, v247, v248, v249, v334);
            v252 = (void *)objc_claimAutoreleasedReturnValue();
            v254 = objc_msgSend_countByEnumeratingWithState_objects_count_(v252, v253, (uint64_t)&v371, (uint64_t)v401, 16);
            if (v254)
            {
              v255 = *(_QWORD *)v372;
              while (2)
              {
                for (m = 0; m != v254; ++m)
                {
                  if (*(_QWORD *)v372 != v255)
                    objc_enumerationMutation(v252);
                  v257 = *(_QWORD *)(*((_QWORD *)&v371 + 1) + 8 * m);
                  objc_opt_class();
                  objc_msgSend_objectForKeyedSubscript_(v251, v258, v257, v259, v260);
                  v261 = (void *)objc_claimAutoreleasedReturnValue();
                  BUDynamicCast();
                  v262 = (void *)objc_claimAutoreleasedReturnValue();

                  if (v262)
                  {
                    objc_msgSend_recordID(v251, v263, v264, v265, v266);
                    v267 = (void *)objc_claimAutoreleasedReturnValue();

                    if (v267)
                    {
                      objc_msgSend_recordID(v251, v268, v269, v270, v271);
                      v272 = objc_claimAutoreleasedReturnValue();
                      objc_msgSend_addObject_(v339, v273, (uint64_t)v272, v274, v275);
                    }
                    else
                    {
                      BDSCloudKitLog();
                      v272 = objc_claimAutoreleasedReturnValue();
                      if (os_log_type_enabled(v272, OS_LOG_TYPE_ERROR))
                      {
                        *(_DWORD *)buf = 138412290;
                        *(_QWORD *)&buf[4] = v251;
                        _os_log_error_impl(&dword_227D4F000, v272, OS_LOG_TYPE_ERROR, "Record ID is nil for record to fetch: %@", buf, 0xCu);
                      }
                    }

                    goto LABEL_122;
                  }
                }
                v254 = objc_msgSend_countByEnumeratingWithState_objects_count_(v252, v263, (uint64_t)&v371, (uint64_t)v401, 16);
                if (v254)
                  continue;
                break;
              }
            }
LABEL_122:

          }
          v350 = objc_msgSend_countByEnumeratingWithState_objects_count_(obj, v246, (uint64_t)&v375, (uint64_t)v402, 16);
        }
        while (v350);
      }

      if (objc_msgSend_count(v339, v276, v277, v278, v279))
      {
        BDSCloudKitLog();
        v284 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v284, OS_LOG_TYPE_INFO))
        {
          v289 = objc_msgSend_count(v339, v285, v286, v287, v288);
          *(_DWORD *)buf = 134217984;
          *(_QWORD *)&buf[4] = v289;
          _os_log_impl(&dword_227D4F000, v284, OS_LOG_TYPE_INFO, "Fetching %lu records that had assets on conflict", buf, 0xCu);
        }

        v290 = objc_alloc(MEMORY[0x24BDB90E8]);
        objc_msgSend_allObjects(v339, v291, v292, v293, v294);
        v295 = (void *)objc_claimAutoreleasedReturnValue();
        v299 = (void *)objc_msgSend_initWithRecordIDs_(v290, v296, (uint64_t)v295, v297, v298);

        objc_msgSend_bds_defaultConfiguration(MEMORY[0x24BDB9188], v300, v301, v302, v303);
        v304 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend_setConfiguration_(v299, v305, (uint64_t)v304, v306, v307);

        v365[0] = MEMORY[0x24BDAC760];
        v365[1] = 3221225472;
        v365[2] = sub_227DB25FC;
        v365[3] = &unk_24F08B390;
        v366 = v337;
        v367 = v343;
        v368 = WeakRetained;
        v369 = *(id *)(v352 + 32);
        v370 = v334;
        objc_msgSend_setFetchRecordsCompletionBlock_(v299, v308, (uint64_t)v365, v309, v310);
        objc_msgSend_cloudKitController(WeakRetained, v311, v312, v313, v314);
        v315 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend_privateCloudDatabaseController(v315, v316, v317, v318, v319);
        v320 = (void *)objc_claimAutoreleasedReturnValue();

        objc_msgSend_database(v320, v321, v322, v323, v324);
        v325 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend_addOperation_(v325, v326, (uint64_t)v299, v327, v328);

      }
      else
      {
        objc_msgSend_allValues(v337, v280, v281, v282, v283);
        v329 = (void *)objc_claimAutoreleasedReturnValue();
        v362[0] = MEMORY[0x24BDAC760];
        v362[1] = 3221225472;
        v362[2] = sub_227DB2838;
        v362[3] = &unk_24F08B368;
        v362[4] = WeakRetained;
        v363 = *(id *)(v352 + 32);
        v364 = v334;
        objc_msgSend_syncManager_resolveConflictsForRecords_completion_(v343, v330, (uint64_t)WeakRetained, (uint64_t)v329, (uint64_t)v362);

      }
      v340 += v334;
    }
    v331 = objc_msgSend_count(v336, v237, v238, v239, v240, v334);
    if (v331)
    {
      v332 = *(_QWORD *)(v352 + 56);
      v359[0] = MEMORY[0x24BDAC760];
      v359[1] = 3221225472;
      v359[2] = sub_227DB2848;
      v359[3] = &unk_24F08B368;
      v359[4] = WeakRetained;
      v360 = *(id *)(v352 + 32);
      v361 = v331;
      objc_msgSend_syncManager_failedRecordIDs_completion_(v343, v333, v332, (uint64_t)v336, (uint64_t)v359);

      v340 += v331;
    }

    v225 = v337;
  }
  else
  {
    BDSCloudKitLog();
    v224 = objc_claimAutoreleasedReturnValue();
    v225 = v224;
    if (os_log_type_enabled(v224, OS_LOG_TYPE_ERROR))
    {
      sub_227E5D250(v224, v226, v227, v228, v229, v230, v231, v232);
      LOBYTE(v338) = 0;
      v225 = v224;
    }
    else
    {
      LOBYTE(v338) = 0;
    }
  }

  v35 = 0;
LABEL_43:

  v34 = v338 & 1;
  v36 = v352;
  v37 = *(_QWORD *)(v352 + 72);
  v33 = v340;
  if (v37 >= v340)
    goto LABEL_47;
  BDSCloudKitLog();
  v124 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v124, OS_LOG_TYPE_ERROR))
    sub_227E5D1BC(v124, v125, v126, v127, v128, v129, v130, v131);

LABEL_48:
  if ((v34 & 1) != 0 || v35)
  {
    *(_QWORD *)buf = 0;
    *(_QWORD *)&buf[8] = buf;
    *(_QWORD *)&buf[16] = 0x3032000000;
    v398 = sub_227DB29F8;
    v399 = sub_227DB2A08;
    objc_msgSend_array(MEMORY[0x24BDBCEB8], v132, v133, v134, v135);
    v400 = (id)objc_claimAutoreleasedReturnValue();
    v136 = *(void **)(v352 + 40);
    v353[0] = MEMORY[0x24BDAC760];
    v353[1] = 3221225472;
    v353[2] = sub_227DB2A10;
    v353[3] = &unk_24F08B3E0;
    v353[4] = buf;
    objc_msgSend_enumerateKeysAndObjectsUsingBlock_(v136, v137, (uint64_t)v353, v138, v139);
    if (objc_msgSend_count(*(void **)(*(_QWORD *)&buf[8] + 40), v140, v141, v142, v143))
    {
      objc_msgSend_cloudKitController(*(void **)(v352 + 56), v144, v145, v146, v147);
      v148 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend_privateCloudDatabaseController(v148, v149, v150, v151, v152);
      v153 = (void *)objc_claimAutoreleasedReturnValue();

      if (v34)
      {
        objc_msgSend_zonesUnreadableDueToMissingD2DEncryptionIdentity_completion_(v153, v154, *(_QWORD *)(*(_QWORD *)&buf[8] + 40), 0, v155);
      }
      else if (v35)
      {
        v156 = (void *)MEMORY[0x24BDD1540];
        v395 = *MEMORY[0x24BDD0FC8];
        v396 = CFSTR("Unsynced keychain - cannot modify records");
        objc_msgSend_dictionaryWithObjects_forKeys_count_(MEMORY[0x24BDBCE70], v154, (uint64_t)&v396, (uint64_t)&v395, 1);
        v157 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend_errorWithDomain_code_userInfo_(v156, v158, (uint64_t)CFSTR("BDSCloudKitClientError"), 2006, (uint64_t)v157);
        v159 = (void *)objc_claimAutoreleasedReturnValue();

        objc_msgSend_zonesTemporarilyUnreadableWithError_completion_(v153, v160, (uint64_t)v159, 0, v161);
      }

    }
    _Block_object_dispose(buf, 8);

  }
}

void sub_227DB2588(_Unwind_Exception *a1)
{
  _Block_object_dispose(&STACK[0x3B0], 8);
  _Unwind_Resume(a1);
}

void sub_227DB25B0(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  objc_msgSend_setBackOffInterval_(*(void **)(a1 + 32), a2, a3, a4, a5, 0.0);
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 40));
}

uint64_t sub_227DB25DC(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return objc_msgSend__leaveDispatchGroup_times_(*(void **)(a1 + 32), a2, *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), a5);
}

uint64_t sub_227DB25EC(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return objc_msgSend__leaveDispatchGroup_times_(*(void **)(a1 + 32), a2, *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), a5);
}

void sub_227DB25FC(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  NSObject *v7;
  NSObject *v8;
  const char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  const char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  const char *v17;
  uint64_t v18;
  const char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t i;
  void *v26;
  void *v27;
  void *v28;
  const char *v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  const char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  void *v38;
  id v39;
  uint64_t v40;
  const char *v41;
  _QWORD v42[5];
  id v43;
  uint64_t v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  uint8_t v49[128];
  uint8_t buf[4];
  uint64_t v51;
  uint64_t v52;

  v52 = *MEMORY[0x24BDAC8D0];
  v5 = a2;
  v6 = a3;
  BDSCloudKitLog();
  v7 = objc_claimAutoreleasedReturnValue();
  v8 = v7;
  if (v6)
  {
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
      sub_227E5D284();
  }
  else
  {
    if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)buf = 134217984;
      v51 = objc_msgSend_count(v5, v9, v10, v11, v12);
      _os_log_impl(&dword_227D4F000, v8, OS_LOG_TYPE_INFO, "Successfully fetched %lu records that had assets on conflict", buf, 0xCu);
    }

    v47 = 0u;
    v48 = 0u;
    v45 = 0u;
    v46 = 0u;
    objc_msgSend_allValues(v5, v13, v14, v15, v16);
    v8 = objc_claimAutoreleasedReturnValue();
    v18 = objc_msgSend_countByEnumeratingWithState_objects_count_(v8, v17, (uint64_t)&v45, (uint64_t)v49, 16);
    if (v18)
    {
      v23 = v18;
      v24 = *(_QWORD *)v46;
      do
      {
        for (i = 0; i != v23; ++i)
        {
          if (*(_QWORD *)v46 != v24)
            objc_enumerationMutation(v8);
          v26 = *(void **)(*((_QWORD *)&v45 + 1) + 8 * i);
          v27 = *(void **)(a1 + 32);
          objc_msgSend_recordID(v26, v19, v20, v21, v22);
          v28 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend_setObject_forKeyedSubscript_(v27, v29, (uint64_t)v26, (uint64_t)v28, v30);

        }
        v23 = objc_msgSend_countByEnumeratingWithState_objects_count_(v8, v19, (uint64_t)&v45, (uint64_t)v49, 16);
      }
      while (v23);
    }
  }

  v32 = *(void **)(a1 + 40);
  v31 = *(_QWORD *)(a1 + 48);
  objc_msgSend_allValues(*(void **)(a1 + 32), v33, v34, v35, v36);
  v37 = (void *)objc_claimAutoreleasedReturnValue();
  v42[0] = MEMORY[0x24BDAC760];
  v42[1] = 3221225472;
  v42[2] = sub_227DB2828;
  v42[3] = &unk_24F08B368;
  v38 = *(void **)(a1 + 56);
  v42[4] = *(_QWORD *)(a1 + 48);
  v39 = v38;
  v40 = *(_QWORD *)(a1 + 64);
  v43 = v39;
  v44 = v40;
  objc_msgSend_syncManager_resolveConflictsForRecords_completion_(v32, v41, v31, (uint64_t)v37, (uint64_t)v42);

}

uint64_t sub_227DB2828(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return objc_msgSend__leaveDispatchGroup_times_(*(void **)(a1 + 32), a2, *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), a5);
}

uint64_t sub_227DB2838(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return objc_msgSend__leaveDispatchGroup_times_(*(void **)(a1 + 32), a2, *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), a5);
}

uint64_t sub_227DB2848(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return objc_msgSend__leaveDispatchGroup_times_(*(void **)(a1 + 32), a2, *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), a5);
}

void sub_227DB2858(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  const char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  const char *v16;
  uint64_t v17;
  const char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  double v22;
  dispatch_time_t v23;
  const char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  NSObject *v28;
  _QWORD v29[5];
  id v30;

  if ((objc_msgSend_serverPushPostponed(*(void **)(a1 + 32), a2, a3, a4, a5) & 1) == 0)
  {
    objc_msgSend_setServerPushPostponed_(*(void **)(a1 + 32), v6, 1, v7, v8);
    v9 = *(void **)(a1 + 32);
    v10 = *(_QWORD *)(a1 + 40);
    v15 = objc_msgSend_count(*(void **)(a1 + 48), v11, v12, v13, v14);
    objc_msgSend__updateRetryParametersFromModifyRecordsOperationError_batchSize_(v9, v16, v10, v15, v17);
    objc_msgSend_backOffInterval(*(void **)(a1 + 32), v18, v19, v20, v21);
    v23 = dispatch_time(0, (uint64_t)(v22 * 1000000000.0));
    objc_msgSend_syncQueue(*(void **)(a1 + 32), v24, v25, v26, v27);
    v28 = objc_claimAutoreleasedReturnValue();
    v29[0] = MEMORY[0x24BDAC760];
    v29[1] = 3221225472;
    v29[2] = sub_227DB2950;
    v29[3] = &unk_24F08A5F0;
    objc_copyWeak(&v30, (id *)(a1 + 64));
    v29[4] = *(_QWORD *)(a1 + 56);
    dispatch_after(v23, v28, v29);

    objc_destroyWeak(&v30);
  }
}

void sub_227DB2950(uint64_t a1)
{
  id WeakRetained;
  const char *v3;
  uint64_t v4;
  uint64_t v5;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  const char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  const char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  const char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  const char *v26;
  uint64_t v27;
  id v28;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    v28 = WeakRetained;
    objc_msgSend_setServerPushPostponed_(WeakRetained, v3, 0, v4, v5);
    objc_msgSend_cloudKitController(*(void **)(a1 + 32), v6, v7, v8, v9);
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_transactionManager(v10, v11, v12, v13, v14);
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_delegate(*(void **)(a1 + 32), v16, v17, v18, v19);
    v20 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_entityName(v20, v21, v22, v23, v24);
    v25 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_signalSyncToCKTransactionForEntityName_syncManager_(v15, v26, (uint64_t)v25, *(_QWORD *)(a1 + 32), v27);

    WeakRetained = v28;
  }

}

uint64_t sub_227DB29F8(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_227DB2A08(uint64_t a1)
{

}

void sub_227DB2A10(uint64_t a1, void *a2)
{
  const char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  const char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  const char *v14;
  uint64_t v15;
  uint64_t v16;
  id v17;

  v17 = a2;
  objc_msgSend_zoneID(v17, v3, v4, v5, v6);
  v7 = (void *)objc_claimAutoreleasedReturnValue();

  if (v7)
  {
    v12 = *(void **)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40);
    objc_msgSend_zoneID(v17, v8, v9, v10, v11);
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_addObject_(v12, v14, (uint64_t)v13, v15, v16);

  }
}

void sub_227DB2E68(_Unwind_Exception *a1)
{
  uint64_t v1;

  objc_destroyWeak((id *)(v1 - 128));
  _Unwind_Resume(a1);
}

void sub_227DB2E84(uint64_t a1)
{
  const char *v2;
  uint64_t v3;
  uint64_t v4;
  const char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  const char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  const char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  const char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  const char *v25;
  uint64_t v26;
  void *v27;
  void *v28;
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  objc_msgSend_setProcessingCloudData_(WeakRetained, v2, 0, v3, v4);
  if (*(_BYTE *)(a1 + 56))
  {
    objc_msgSend_cloudKitController(*(void **)(a1 + 32), v5, v6, v7, v8);
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_transactionManager(v9, v10, v11, v12, v13);
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_delegate(*(void **)(a1 + 32), v15, v16, v17, v18);
    v19 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_entityName(v19, v20, v21, v22, v23);
    v24 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_signalSyncToCKTransactionForEntityName_syncManager_(v14, v25, (uint64_t)v24, *(_QWORD *)(a1 + 32), v26);

  }
  v27 = _Block_copy(*(const void **)(a1 + 40));
  v28 = v27;
  if (v27)
    (*((void (**)(void *))v27 + 2))(v27);

}

id sub_227DB3028()
{
  void *v0;
  const char *v1;
  uint64_t v2;
  uint64_t v3;
  const char *v4;
  uint64_t v5;
  uint64_t v6;
  const char *v7;
  uint64_t v8;
  uint64_t v9;

  v0 = (void *)objc_opt_new();
  objc_msgSend_setQualityOfService_(v0, v1, 17, v2, v3);
  objc_msgSend_setDiscretionaryNetworkBehavior_(v0, v4, 0, v5, v6);
  objc_msgSend_setAutomaticallyRetryNetworkFailures_(v0, v7, 0, v8, v9);
  return v0;
}

void sub_227DB3350()
{
  BCCloudKitController *v0;
  const char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  BCCloudKitTransactionManager *v11;
  const char *v12;
  uint64_t v13;
  uint64_t v14;
  const char *v15;
  uint64_t v16;
  uint64_t v17;
  id v18;

  v0 = [BCCloudKitController alloc];
  objc_msgSend_configuration(BCCloudKitSecureConfiguration, v1, v2, v3, v4);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v9 = objc_msgSend_initWithConfiguration_(v0, v6, (uint64_t)v5, v7, v8);
  v10 = (void *)qword_25592A510;
  qword_25592A510 = v9;

  v11 = [BCCloudKitTransactionManager alloc];
  v18 = (id)objc_msgSend_initWithCloudKitController_(v11, v12, qword_25592A510, v13, v14);
  objc_msgSend_setTransactionManager_((void *)qword_25592A510, v15, (uint64_t)v18, v16, v17);

}

void sub_227DB356C(uint64_t a1)
{
  NSObject *v2;
  void *v3;
  const char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const char *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  const char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  const char *v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  void *v23;
  const char *v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[4];
  id v28;
  id v29;
  id v30;
  uint64_t v31;
  uint8_t buf[16];

  BDSCloudKitLog();
  v2 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)buf = 0;
    _os_log_impl(&dword_227D4F000, v2, OS_LOG_TYPE_INFO, "BCCloudKitController - registerForSecureNotifications", buf, 2u);
  }

  v3 = (void *)MEMORY[0x24BDB9030];
  objc_msgSend_containerIdentifier(*(void **)(a1 + 32), v4, v5, v6, v7);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_containerWithIdentifier_(v3, v9, (uint64_t)v8, v10, v11);
  v12 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend_appBundleIdentifier(*(void **)(a1 + 32), v13, v14, v15, v16);
  v17 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_setSourceApplicationBundleIdentifier_(v12, v18, (uint64_t)v17, v19, v20);

  if (v12)
  {
    v27[0] = MEMORY[0x24BDAC760];
    v27[1] = 3221225472;
    v27[2] = sub_227DB36A4;
    v27[3] = &unk_24F08B4F0;
    v21 = *(id *)(a1 + 40);
    v23 = *(void **)(a1 + 48);
    v22 = *(_QWORD *)(a1 + 56);
    v28 = v21;
    v31 = v22;
    v29 = v23;
    v30 = v12;
    objc_msgSend_accountStatusWithCompletionHandler_(v30, v24, (uint64_t)v27, v25, v26);

  }
}

void sub_227DB36A4(uint64_t a1, uint64_t a2, void *a3)
{
  id v5;
  uint64_t v6;
  NSObject *v7;
  id v8;
  _QWORD block[4];
  id v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;

  v5 = a3;
  block[0] = MEMORY[0x24BDAC760];
  block[1] = 3221225472;
  block[2] = sub_227DB375C;
  block[3] = &unk_24F08B4C8;
  v10 = v5;
  v6 = *(_QWORD *)(a1 + 56);
  v13 = a2;
  v14 = v6;
  v7 = *(NSObject **)(a1 + 32);
  v11 = *(id *)(a1 + 40);
  v12 = *(id *)(a1 + 48);
  v8 = v5;
  dispatch_async(v7, block);

}

void sub_227DB375C(uint64_t a1)
{
  NSObject *v2;
  uint64_t v3;
  const char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  const char *v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  const char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  dispatch_time_t v19;
  NSObject *v20;
  void *v21;
  const char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  const char *v28;
  const char *v29;
  NSObject *v30;
  os_log_type_t v31;
  uint32_t v32;
  uint64_t v33;
  _QWORD v34[4];
  NSObject *v35;
  _QWORD block[5];
  uint8_t buf[4];
  uint64_t v38;
  uint64_t v39;

  v39 = *MEMORY[0x24BDAC8D0];
  switch(*(_QWORD *)(a1 + 56))
  {
    case 0:
      BDSCloudKitLog();
      v2 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
      {
        v3 = *(_QWORD *)(a1 + 32);
        *(_DWORD *)buf = 138412290;
        v38 = v3;
        _os_log_impl(&dword_227D4F000, v2, OS_LOG_TYPE_INFO, "BCCloudKitController - CKAccountStatusCouldNotDetermine: %@", buf, 0xCu);
      }

      v8 = *(void **)(a1 + 32);
      if (v8)
      {
        objc_msgSend_userInfo(v8, v4, v5, v6, v7);
        v9 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend_objectForKeyedSubscript_(v9, v10, *MEMORY[0x24BDB8EB8], v11, v12);
        v13 = objc_claimAutoreleasedReturnValue();

        if (v13)
        {
          objc_msgSend_doubleValue(v13, v14, v15, v16, v17);
          v19 = dispatch_time(0, (uint64_t)(v18 * 1000000000.0));
          block[0] = MEMORY[0x24BDAC760];
          block[1] = 3221225472;
          block[2] = sub_227DB3A80;
          block[3] = &unk_24F08A610;
          block[4] = *(_QWORD *)(a1 + 64);
          dispatch_after(v19, MEMORY[0x24BDAC9B8], block);
          goto LABEL_19;
        }
      }
      BDSCloudKitLog();
      v13 = objc_claimAutoreleasedReturnValue();
      if (!os_log_type_enabled(v13, OS_LOG_TYPE_INFO))
        goto LABEL_19;
      v33 = *(_QWORD *)(a1 + 32);
      *(_DWORD *)buf = 138543362;
      v38 = v33;
      v29 = "BCCloudKitController - Could not determine iCloud status.  Not syncing anything.  Account status error=%{public}@";
      v30 = v13;
      v31 = OS_LOG_TYPE_INFO;
      v32 = 12;
      goto LABEL_18;
    case 1:
      BDSCloudKitLog();
      v20 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v20, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)buf = 0;
        _os_log_impl(&dword_227D4F000, v20, OS_LOG_TYPE_INFO, "BCCloudKitController - Account Available", buf, 2u);
      }

      v21 = *(void **)(a1 + 40);
      objc_msgSend_privateCloudDatabase(*(void **)(a1 + 48), v22, v23, v24, v25);
      v26 = (void *)objc_claimAutoreleasedReturnValue();
      v34[0] = MEMORY[0x24BDAC760];
      v34[1] = 3221225472;
      v34[2] = sub_227DB3ADC;
      v34[3] = &unk_24F08A3E0;
      v27 = *(_QWORD *)(a1 + 48);
      v35 = *(id *)(a1 + 40);
      objc_msgSend_connectUserTo_container_updateSubscription_completion_subscriptionCompletion_(v21, v28, (uint64_t)v26, v27, 1, &unk_24F08B4A0, v34);

      v13 = v35;
      goto LABEL_19;
    case 2:
      BDSCloudKitLog();
      v13 = objc_claimAutoreleasedReturnValue();
      if (!os_log_type_enabled(v13, OS_LOG_TYPE_INFO))
        goto LABEL_19;
      *(_WORD *)buf = 0;
      v29 = "BCCloudKitController - CKAccountStatusRestricted";
      goto LABEL_14;
    case 3:
      BDSCloudKitLog();
      v13 = objc_claimAutoreleasedReturnValue();
      if (!os_log_type_enabled(v13, OS_LOG_TYPE_INFO))
        goto LABEL_19;
      *(_WORD *)buf = 0;
      v29 = "BCCloudKitController - CKAccountStatusNoAccount";
LABEL_14:
      v30 = v13;
      v31 = OS_LOG_TYPE_INFO;
      break;
    case 4:
      BDSCloudKitLog();
      v13 = objc_claimAutoreleasedReturnValue();
      if (!os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
        goto LABEL_19;
      *(_WORD *)buf = 0;
      v29 = "BCCloudKitController - CKAccountStatusTemporarilyUnavailable. Account Temporarily Unavailable";
      v30 = v13;
      v31 = OS_LOG_TYPE_DEFAULT;
      break;
    default:
      return;
  }
  v32 = 2;
LABEL_18:
  _os_log_impl(&dword_227D4F000, v30, v31, v29, buf, v32);
LABEL_19:

}

uint64_t sub_227DB3A80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return MEMORY[0x24BEDD108](*(_QWORD *)(a1 + 32), sel_registerForSecureNotifications, a3, a4, a5);
}

void sub_227DB3A88(uint64_t a1, uint64_t a2, void *a3)
{
  id v3;
  NSObject *v4;

  v3 = a3;
  if (v3)
  {
    BDSCloudKitLog();
    v4 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
      sub_227E5D2E4();

  }
}

uint64_t sub_227DB3ADC(uint64_t a1)
{
  NSObject *v2;
  const char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint8_t v8[16];

  BDSCloudKitLog();
  v2 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)v8 = 0;
    _os_log_impl(&dword_227D4F000, v2, OS_LOG_TYPE_INFO, "BCCloudKitController - connectUserTo:container: subscription completed.", v8, 2u);
  }

  return objc_msgSend_detach(*(void **)(a1 + 32), v3, v4, v5, v6);
}

void sub_227DB3C40(uint64_t a1, void *a2)
{
  id v3;
  id *v4;
  id WeakRetained;
  NSObject *v6;
  const char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  const char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  const char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  void *v22;
  void *v23;
  _QWORD v24[4];
  id v25;
  id v26;
  uint8_t buf[4];
  void *v28;
  uint64_t v29;

  v29 = *MEMORY[0x24BDAC8D0];
  v3 = a2;
  v4 = (id *)(a1 + 32);
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    BDSCloudKitSyncLog();
    v6 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend_configuration(WeakRetained, v7, v8, v9, v10);
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend_containerIdentifier(v11, v12, v13, v14, v15);
      v16 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138543362;
      v28 = v16;
      _os_log_impl(&dword_227D4F000, v6, OS_LOG_TYPE_DEFAULT, "BCCloudKitController (%{public}@) _coalescedAttachment", buf, 0xCu);

    }
    objc_msgSend_accessQueue(WeakRetained, v17, v18, v19, v20);
    v21 = objc_claimAutoreleasedReturnValue();
    v24[0] = MEMORY[0x24BDAC760];
    v24[1] = 3221225472;
    v24[2] = sub_227DB3DD4;
    v24[3] = &unk_24F0891B8;
    objc_copyWeak(&v26, v4);
    v25 = v3;
    dispatch_async(v21, v24);

    objc_destroyWeak(&v26);
  }
  else
  {
    v22 = _Block_copy(v3);
    v23 = v22;
    if (v22)
      (*((void (**)(void *))v22 + 2))(v22);

  }
}

void sub_227DB3DD4(uint64_t a1)
{
  id WeakRetained;
  const char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (**v7)(void);
  void (**v8)(void);

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  objc_msgSend_p_updateAttachment(WeakRetained, v3, v4, v5, v6);

  v7 = (void (**)(void))_Block_copy(*(const void **)(a1 + 32));
  if (v7)
  {
    v8 = v7;
    v7[2]();
    v7 = v8;
  }

}

void sub_227DB3E28(uint64_t a1, void *a2)
{
  id v2;
  NSObject *v3;

  v2 = a2;
  BDSCloudKitLog();
  v3 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
    sub_227E5D348();

}

void sub_227DB3E78(uint64_t a1, void *a2)
{
  id v3;
  id WeakRetained;
  NSObject *v5;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  const char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  const char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  void *v21;
  void *v22;
  _QWORD v23[4];
  id v24;
  id v25;
  uint8_t buf[4];
  void *v27;
  uint64_t v28;

  v28 = *MEMORY[0x24BDAC8D0];
  v3 = a2;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    BDSCloudKitSyncLog();
    v5 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend_configuration(WeakRetained, v6, v7, v8, v9);
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend_containerIdentifier(v10, v11, v12, v13, v14);
      v15 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138543362;
      v27 = v15;
      _os_log_impl(&dword_227D4F000, v5, OS_LOG_TYPE_DEFAULT, "BCCloudKitController (%{public}@) _coalescedChangeAttachment", buf, 0xCu);

    }
    objc_msgSend_accessQueue(WeakRetained, v16, v17, v18, v19);
    v20 = objc_claimAutoreleasedReturnValue();
    v23[0] = MEMORY[0x24BDAC760];
    v23[1] = 3221225472;
    v23[2] = sub_227DB3FFC;
    v23[3] = &unk_24F08A928;
    v24 = WeakRetained;
    v25 = v3;
    dispatch_async(v20, v23);

  }
  else
  {
    v21 = _Block_copy(v3);
    v22 = v21;
    if (v21)
      (*((void (**)(void *))v21 + 2))(v21);

  }
}

void sub_227DB3FFC(uint64_t a1)
{
  void *v2;
  const char *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD v6[4];
  id v7;
  id v8;

  v2 = *(void **)(a1 + 32);
  v6[0] = MEMORY[0x24BDAC760];
  v6[1] = 3221225472;
  v6[2] = sub_227DB4084;
  v6[3] = &unk_24F089FF0;
  v7 = v2;
  v8 = *(id *)(a1 + 40);
  objc_msgSend__updateAccountCacheWithCompletionBlock_(v7, v3, (uint64_t)v6, v4, v5);

}

void sub_227DB4084(uint64_t a1, int a2)
{
  NSObject *v4;
  const char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  const char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  const char *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;
  int v20;
  void *v21;
  __int16 v22;
  int v23;
  uint64_t v24;

  v24 = *MEMORY[0x24BDAC8D0];
  BDSCloudKitSyncLog();
  v4 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    objc_msgSend_configuration(*(void **)(a1 + 32), v5, v6, v7, v8);
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_containerIdentifier(v9, v10, v11, v12, v13);
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    v20 = 138543618;
    v21 = v14;
    v22 = 1024;
    v23 = a2;
    _os_log_impl(&dword_227D4F000, v4, OS_LOG_TYPE_DEFAULT, "BCCloudKitController (%{public}@) _coalescedChangeAttachment hasChanged:%{BOOL}d", (uint8_t *)&v20, 0x12u);

  }
  if (a2)
  {
    objc_msgSend_p_accountReallyChangedWithCompletion_(*(void **)(a1 + 32), v15, *(_QWORD *)(a1 + 40), v16, v17);
  }
  else
  {
    v18 = _Block_copy(*(const void **)(a1 + 40));
    v19 = v18;
    if (v18)
      (*((void (**)(void *))v18 + 2))(v18);

  }
}

void sub_227DB4198(uint64_t a1, void *a2)
{
  id v2;
  NSObject *v3;

  v2 = a2;
  BDSCloudKitSyncLog();
  v3 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
    sub_227E5D3AC();

}

uint64_t sub_227DB434C(uint64_t result, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  const char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *(_BYTE *)(*(_QWORD *)(result + 32) + 11) = *(_BYTE *)(result + 40);
  v5 = *(_QWORD *)(result + 32);
  v6 = *(unsigned __int8 *)(result + 41);
  if (*(unsigned __int8 *)(v5 + 10) != v6)
  {
    v7 = result;
    *(_BYTE *)(v5 + 10) = v6;
    objc_msgSend__reestablishSyncEngineSalt(*(void **)(result + 32), a2, a3, a4, a5);
    return objc_msgSend_aq_requestUpdateAttachment(*(void **)(v7 + 32), v8, v9, v10, v11);
  }
  return result;
}

uint64_t sub_227DB443C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return MEMORY[0x24BEDD108](*(_QWORD *)(a1 + 32), sel_aq_requestUpdateAttachmentWithCompletion_, *(_QWORD *)(a1 + 40), a4, a5);
}

void sub_227DB462C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_227DB4658(uint64_t a1, char a2, char a3)
{
  id *v6;
  id WeakRetained;
  const char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  const char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD v22[4];
  id v23;
  char v24;
  char v25;

  v6 = (id *)(a1 + 40);
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  objc_msgSend_accessQueue(WeakRetained, v8, v9, v10, v11);
  v12 = (void *)objc_claimAutoreleasedReturnValue();

  if (v12)
  {
    objc_msgSend_accessQueue(WeakRetained, v13, v14, v15, v16);
    v17 = objc_claimAutoreleasedReturnValue();
    v22[0] = MEMORY[0x24BDAC760];
    v22[1] = 3221225472;
    v22[2] = sub_227DB475C;
    v22[3] = &unk_24F08B5F0;
    objc_copyWeak(&v23, v6);
    v24 = a2;
    v25 = a3;
    dispatch_async(v17, v22);

    objc_destroyWeak(&v23);
  }
  else
  {
    BDSCloudKitLog();
    v18 = (char *)objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled((os_log_t)v18, OS_LOG_TYPE_ERROR))
      sub_227E5D410(a1, v18, v19, v20, v21);

  }
}

void sub_227DB475C(uint64_t a1)
{
  const char *v2;
  uint64_t v3;
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend_p_flushPendingRequestUpdateAttachmentCompletionBlocksWithAttached_reachable_(WeakRetained, v2, *(unsigned __int8 *)(a1 + 40), *(unsigned __int8 *)(a1 + 41), v3);

}

void sub_227DB4B80(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_227DB4BB4(uint64_t a1, char a2, char a3)
{
  id *v6;
  id WeakRetained;
  const char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  const char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD block[5];
  id v23;
  char v24;
  char v25;

  v6 = (id *)(a1 + 40);
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  objc_msgSend_accessQueue(WeakRetained, v8, v9, v10, v11);
  v12 = (void *)objc_claimAutoreleasedReturnValue();

  if (v12)
  {
    objc_msgSend_accessQueue(WeakRetained, v13, v14, v15, v16);
    v17 = objc_claimAutoreleasedReturnValue();
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 3221225472;
    block[2] = sub_227DB4CC8;
    block[3] = &unk_24F08B668;
    objc_copyWeak(&v23, v6);
    block[4] = *(_QWORD *)(a1 + 32);
    v24 = a2;
    v25 = a3;
    dispatch_async(v17, block);

    objc_destroyWeak(&v23);
  }
  else
  {
    BDSCloudKitLog();
    v18 = (char *)objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled((os_log_t)v18, OS_LOG_TYPE_ERROR))
      sub_227E5D4A8(a1, v18, v19, v20, v21);

  }
}

void sub_227DB4CC8(uint64_t a1)
{
  id *v2;
  id WeakRetained;
  const char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  const char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  const char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  const char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  const __CFString *v23;
  const char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  NSObject *v28;
  const char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  const char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  const char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  const char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  BOOL v48;
  NSObject *v49;
  const char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void *v54;
  const char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  const char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void *v64;
  const char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  __CFString *v69;
  const char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  void *v74;
  const char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void *v79;
  const char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  void *v84;
  const char *v85;
  uint64_t v86;
  uint64_t v87;
  const char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  void *v92;
  const char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  void *v97;
  const char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  void *v102;
  const char *v103;
  uint64_t v104;
  uint64_t v105;
  NSObject *v106;
  const char *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  void *v111;
  const char *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  void *v116;
  const char *v117;
  uint64_t v118;
  uint64_t v119;
  NSObject *v120;
  const char *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  void *v125;
  const char *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  void *v130;
  const char *v131;
  uint64_t v132;
  uint64_t v133;
  const char *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  void *v138;
  const char *v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  const char *v143;
  uint64_t v144;
  _QWORD v145[5];
  id v146;
  uint8_t buf[4];
  void *v148;
  __int16 v149;
  const __CFString *v150;
  __int16 v151;
  int v152;
  uint64_t v153;

  v153 = *MEMORY[0x24BDAC8D0];
  v2 = (id *)(a1 + 40);
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if ((objc_msgSend_gettingAccountInfo(WeakRetained, v4, v5, v6, v7) & 1) != 0)
    goto LABEL_25;
  BDSCloudKitSyncLog();
  v8 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
  {
    objc_msgSend_configuration(*(void **)(a1 + 32), v9, v10, v11, v12);
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_containerIdentifier(v13, v14, v15, v16, v17);
    v22 = (void *)objc_claimAutoreleasedReturnValue();
    if (*(_BYTE *)(a1 + 48))
      v23 = CFSTR("YES");
    else
      v23 = CFSTR("NO");
    *(_DWORD *)buf = 138543874;
    v148 = v22;
    v149 = 2114;
    v150 = v23;
    v151 = 1024;
    v152 = objc_msgSend_enableCloudSync(WeakRetained, v18, v19, v20, v21);
    _os_log_impl(&dword_227D4F000, v8, OS_LOG_TYPE_INFO, "BCCloudKitController (%{public}@) - Update Attachment Current State: attached:%{public}@ enableCloudSync:%{BOOL}d", buf, 0x1Cu);

  }
  if (!*(_BYTE *)(a1 + 48))
  {
    if (objc_msgSend_enableCloudSync(WeakRetained, v24, v25, v26, v27))
    {
      BDSCloudKitSyncLog();
      v106 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v106, OS_LOG_TYPE_DEFAULT))
      {
        objc_msgSend_configuration(*(void **)(a1 + 32), v107, v108, v109, v110);
        v111 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend_containerIdentifier(v111, v112, v113, v114, v115);
        v116 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138543362;
        v148 = v116;
        _os_log_impl(&dword_227D4F000, v106, OS_LOG_TYPE_DEFAULT, "BCCloudKitController (%{public}@) - Update Attachment: getting account info", buf, 0xCu);

      }
      v145[0] = MEMORY[0x24BDAC760];
      v145[1] = 3221225472;
      v145[2] = sub_227DB51AC;
      v145[3] = &unk_24F08B640;
      v145[4] = *(_QWORD *)(a1 + 32);
      objc_copyWeak(&v146, v2);
      objc_msgSend_p_getAccountInfoWithCompletion_(WeakRetained, v117, (uint64_t)v145, v118, v119);
      objc_destroyWeak(&v146);
      goto LABEL_25;
    }
    if (!*(_BYTE *)(a1 + 48))
      goto LABEL_9;
  }
  if ((objc_msgSend_enableCloudSync(WeakRetained, v24, v25, v26, v27) & 1) != 0)
  {
LABEL_9:
    BDSCloudKitSyncLog();
    v28 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v28, OS_LOG_TYPE_INFO))
    {
      objc_msgSend_configuration(*(void **)(a1 + 32), v29, v30, v31, v32);
      v33 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend_containerIdentifier(v33, v34, v35, v36, v37);
      v38 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138543362;
      v148 = v38;
      _os_log_impl(&dword_227D4F000, v28, OS_LOG_TYPE_INFO, "BCCloudKitController (%{public}@) - Update Attachment: No change to attachment.", buf, 0xCu);

    }
    if (objc_msgSend_enableCloudSync(WeakRetained, v39, v40, v41, v42))
    {
      objc_msgSend_container(WeakRetained, v43, v44, v45, v46);
      v47 = (void *)objc_claimAutoreleasedReturnValue();
      if (v47)
      {
        v48 = *(_BYTE *)(a1 + 48) == 0;

        if (!v48)
        {
          BDSCloudKitSyncLog();
          v49 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v49, OS_LOG_TYPE_DEFAULT))
          {
            objc_msgSend_configuration(*(void **)(a1 + 32), v50, v51, v52, v53);
            v54 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend_containerIdentifier(v54, v55, v56, v57, v58);
            v59 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend_configuration(*(void **)(a1 + 32), v60, v61, v62, v63);
            v64 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend_dbSubscriptionID(v64, v65, v66, v67, v68);
            v69 = (__CFString *)objc_claimAutoreleasedReturnValue();
            *(_DWORD *)buf = 138543618;
            v148 = v59;
            v149 = 2114;
            v150 = v69;
            _os_log_impl(&dword_227D4F000, v49, OS_LOG_TYPE_DEFAULT, "BCCloudKitController (%{public}@) - Update Attachment: Signaling fetch changes for %{public}@", buf, 0x16u);

          }
          objc_msgSend_transactionManager(WeakRetained, v70, v71, v72, v73);
          v74 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend_configuration(*(void **)(a1 + 32), v75, v76, v77, v78);
          v79 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend_dbSubscriptionID(v79, v80, v81, v82, v83);
          v84 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend_signalFetchChangesTransaction_(v74, v85, (uint64_t)v84, v86, v87);

          objc_msgSend_transactionManager(WeakRetained, v88, v89, v90, v91);
          v92 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend_configuration(*(void **)(a1 + 32), v93, v94, v95, v96);
          v97 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend_dbSubscriptionID(v97, v98, v99, v100, v101);
          v102 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend_signalFetchChangesTransactionInService_(v92, v103, (uint64_t)v102, v104, v105);

        }
      }
    }
    objc_msgSend_p_flushPendingRequestUpdateAttachmentCompletionBlocksWithAttached_reachable_(WeakRetained, v43, *(unsigned __int8 *)(a1 + 48), *(unsigned __int8 *)(a1 + 49), v46);
    goto LABEL_25;
  }
  BDSCloudKitSyncLog();
  v120 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v120, OS_LOG_TYPE_DEFAULT))
  {
    objc_msgSend_configuration(*(void **)(a1 + 32), v121, v122, v123, v124);
    v125 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_containerIdentifier(v125, v126, v127, v128, v129);
    v130 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 138543362;
    v148 = v130;
    _os_log_impl(&dword_227D4F000, v120, OS_LOG_TYPE_DEFAULT, "BCCloudKitController (%{public}@) - Update Attachment: detaching from database controller", buf, 0xCu);

  }
  objc_msgSend_setContainer_(*(void **)(a1 + 32), v131, 0, v132, v133);
  objc_msgSend_privateCloudDatabaseController(WeakRetained, v134, v135, v136, v137);
  v138 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_detach(v138, v139, v140, v141, v142);

  objc_msgSend_p_flushPendingRequestUpdateAttachmentCompletionBlocksWithAttached_reachable_(WeakRetained, v143, *(unsigned __int8 *)(a1 + 48), *(unsigned __int8 *)(a1 + 49), v144);
LABEL_25:

}

void sub_227DB5190(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_227DB51AC(uint64_t a1, int a2)
{
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  const char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id WeakRetained;

  if (a2)
  {
    BDSCloudKitSyncLog();
    v3 = (char *)objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled((os_log_t)v3, OS_LOG_TYPE_DEBUG))
      sub_227E5D540(a1, v3, v4, v5, v6);

  }
  else
  {
    WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
    objc_msgSend_p_flushPendingRequestUpdateAttachmentCompletionBlocks(WeakRetained, v7, v8, v9, v10);

  }
}

void sub_227DB5444(uint64_t a1, uint64_t a2, void *a3)
{
  id v5;
  void *v6;
  const char *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  _QWORD v12[4];
  id v13;
  id v14;
  uint64_t v15;

  v5 = a3;
  if (*(_BYTE *)(a1 + 48))
  {
    v12[0] = MEMORY[0x24BDAC760];
    v12[1] = 3221225472;
    v12[2] = sub_227DB5518;
    v12[3] = &unk_24F08B690;
    v6 = *(void **)(a1 + 32);
    v14 = *(id *)(a1 + 40);
    v15 = a2;
    v13 = v5;
    objc_msgSend_accountInfoWithCompletionHandler_(v6, v7, (uint64_t)v12, v8, v9);

  }
  else
  {
    v10 = _Block_copy(*(const void **)(a1 + 40));
    v11 = v10;
    if (v10)
      (*((void (**)(void *, uint64_t, id, _QWORD, _QWORD))v10 + 2))(v10, a2, v5, 0, 0);

  }
}

void sub_227DB5518(uint64_t a1, void *a2, void *a3)
{
  id v5;
  void *v6;
  void *v7;
  id v8;

  v8 = a2;
  v5 = a3;
  v6 = _Block_copy(*(const void **)(a1 + 40));
  v7 = v6;
  if (v6)
    (*((void (**)(void *, _QWORD, _QWORD, id, id))v6 + 2))(v6, *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 32), v8, v5);

}

void sub_227DB5860(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_227DB5884(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7;
  id v8;
  id WeakRetained;
  const char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  const char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  _QWORD block[4];
  id v21;
  id v22;
  id v23;
  id v24[2];

  v7 = a3;
  v8 = a4;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  objc_msgSend_accessQueue(WeakRetained, v10, v11, v12, v13);
  v14 = (void *)objc_claimAutoreleasedReturnValue();

  if (v14)
  {
    objc_msgSend_accessQueue(WeakRetained, v15, v16, v17, v18);
    v19 = objc_claimAutoreleasedReturnValue();
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 3221225472;
    block[2] = sub_227DB59A8;
    block[3] = &unk_24F08B708;
    objc_copyWeak(v24, (id *)(a1 + 40));
    v24[1] = a2;
    v21 = v7;
    v22 = v8;
    v23 = *(id *)(a1 + 32);
    dispatch_async(v19, block);

    objc_destroyWeak(v24);
  }

}

void sub_227DB59A8(uint64_t a1)
{
  id *v2;
  id WeakRetained;
  const char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  const char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  const char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  const char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  const char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  void *v30;
  const char *v31;
  uint64_t v32;
  uint64_t v33;
  NSObject *v34;
  uint64_t v35;
  NSObject *v36;
  void *v37;
  const char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  const char *v42;
  uint64_t v43;
  uint64_t v44;
  const char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  uint64_t *v50;
  void *v51;
  void *v52;
  const char *v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  const char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  double v61;
  dispatch_time_t v62;
  const char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  NSObject *v67;
  NSObject *v68;
  const char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  void *v73;
  const char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  void *v78;
  const char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  void *v83;
  const char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  const char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char v92;
  const char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  NSObject *v97;
  const char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  void *v102;
  const char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  void *v107;
  const char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  NSObject *v112;
  void *v113;
  const char *v114;
  void *v115;
  void *v116;
  const char *v117;
  uint64_t v118;
  uint64_t v119;
  NSObject *v120;
  uint64_t v121;
  void *v122;
  const char *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t shouldPerformDatabaseSubscriptionForServiceMode;
  const char *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  void *v131;
  uint64_t v132;
  uint64_t v133;
  const char *v134;
  _QWORD v135[4];
  id v136;
  _QWORD v137[4];
  id v138;
  id v139;
  id v140;
  _QWORD block[4];
  id v142;
  uint8_t buf[4];
  void *v144;
  uint64_t v145;

  v145 = *MEMORY[0x24BDAC8D0];
  v2 = (id *)(a1 + 56);
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  v8 = WeakRetained;
  if (WeakRetained)
  {
    objc_msgSend_container(WeakRetained, v4, v5, v6, v7);
    v9 = (void *)objc_claimAutoreleasedReturnValue();

    if (v9)
    {
      objc_msgSend_privateCloudDatabaseController(v8, v10, v11, v12, v13);
      v14 = (void *)objc_claimAutoreleasedReturnValue();
      v19 = objc_msgSend_serviceMode(v8, v15, v16, v17, v18);
      objc_msgSend_configuration(v8, v20, v21, v22, v23);
      v24 = (void *)objc_claimAutoreleasedReturnValue();
      v29 = v24;
      if ((v19 & 1) != 0)
        objc_msgSend_serviceZones(v24, v25, v26, v27, v28);
      else
        objc_msgSend_appZones(v24, v25, v26, v27, v28);
      v30 = (void *)objc_claimAutoreleasedReturnValue();

      objc_msgSend_setCurrentStatus_(v8, v31, *(_QWORD *)(a1 + 64), v32, v33);
      BDSCloudKitSyncLog();
      v34 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v34, OS_LOG_TYPE_DEBUG))
        sub_227E5D644((uint64_t *)(a1 + 64), v34, v35);

      switch(*(_QWORD *)(a1 + 64))
      {
        case 0:
          BDSCloudKitLog();
          v36 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v36, OS_LOG_TYPE_DEFAULT))
          {
            v37 = *(void **)(a1 + 32);
            *(_DWORD *)buf = 138543362;
            v144 = v37;
            _os_log_impl(&dword_227D4F000, v36, OS_LOG_TYPE_DEFAULT, "BCCloudKitController - CKAccountStatusCouldNotDetermine: %{public}@", buf, 0xCu);
          }

          objc_msgSend_detach(v14, v38, v39, v40, v41);
          objc_msgSend_setGettingAccountInfo_(v8, v42, 0, v43, v44);
          v51 = *(void **)(a1 + 32);
          v50 = (uint64_t *)(a1 + 32);
          v49 = v51;
          if (v51
            && (objc_msgSend_userInfo(v49, v45, v46, v47, v48),
                v52 = (void *)objc_claimAutoreleasedReturnValue(),
                objc_msgSend_objectForKeyedSubscript_(v52, v53, *MEMORY[0x24BDB8EB8], v54, v55),
                v56 = (void *)objc_claimAutoreleasedReturnValue(),
                v52,
                v56))
          {
            objc_msgSend_doubleValue(v56, v57, v58, v59, v60);
            v62 = dispatch_time(0, (uint64_t)(v61 * 1000000000.0));
            objc_msgSend_accessQueue(v8, v63, v64, v65, v66);
            v67 = objc_claimAutoreleasedReturnValue();
            block[0] = MEMORY[0x24BDAC760];
            block[1] = 3221225472;
            block[2] = sub_227DB5F54;
            block[3] = &unk_24F089258;
            objc_copyWeak(&v142, v2);
            dispatch_after(v62, v67, block);

            objc_destroyWeak(&v142);
          }
          else
          {
            BDSCloudKitLog();
            v120 = objc_claimAutoreleasedReturnValue();
            if (os_log_type_enabled(v120, OS_LOG_TYPE_ERROR))
              sub_227E5D5D8(v50, v120, v121);

          }
          goto LABEL_30;
        case 1:
          BDSCloudKitLog();
          v68 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v68, OS_LOG_TYPE_DEFAULT))
          {
            objc_msgSend_configuration(v8, v69, v70, v71, v72);
            v73 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend_containerIdentifier(v73, v74, v75, v76, v77);
            v78 = (void *)objc_claimAutoreleasedReturnValue();
            *(_DWORD *)buf = 138543362;
            v144 = v78;
            _os_log_impl(&dword_227D4F000, v68, OS_LOG_TYPE_DEFAULT, "BCCloudKitController - Account Available for %{public}@", buf, 0xCu);

          }
          objc_msgSend_configuration(v8, v79, v80, v81, v82);
          v83 = (void *)objc_claimAutoreleasedReturnValue();
          if (objc_msgSend_requiresDeviceToDeviceEncryption(v83, v84, v85, v86, v87))
          {
            v92 = objc_msgSend_supportsDeviceToDeviceEncryption(*(void **)(a1 + 40), v88, v89, v90, v91);

            if ((v92 & 1) == 0)
            {
              BDSCloudKitLog();
              v97 = objc_claimAutoreleasedReturnValue();
              if (os_log_type_enabled(v97, OS_LOG_TYPE_DEFAULT))
              {
                objc_msgSend_configuration(v8, v98, v99, v100, v101);
                v102 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend_containerIdentifier(v102, v103, v104, v105, v106);
                v107 = (void *)objc_claimAutoreleasedReturnValue();
                *(_DWORD *)buf = 138543362;
                v144 = v107;
                _os_log_impl(&dword_227D4F000, v97, OS_LOG_TYPE_DEFAULT, "Container %{public}@ requires device-to-device encryption but user's account does not support it.  Not connecting.", buf, 0xCu);

              }
              goto LABEL_29;
            }
          }
          else
          {

          }
          objc_msgSend_configuration(v8, v93, v94, v95, v96);
          v122 = (void *)objc_claimAutoreleasedReturnValue();
          shouldPerformDatabaseSubscriptionForServiceMode = objc_msgSend_shouldPerformDatabaseSubscriptionForServiceMode_(v122, v123, v19, v124, v125);

          objc_msgSend_privateCloudDatabase(*(void **)(a1 + 48), v127, v128, v129, v130);
          v131 = (void *)objc_claimAutoreleasedReturnValue();
          v132 = *(_QWORD *)(a1 + 48);
          v133 = MEMORY[0x24BDAC760];
          v137[0] = MEMORY[0x24BDAC760];
          v137[1] = 3221225472;
          v137[2] = sub_227DB5F80;
          v137[3] = &unk_24F08B6E0;
          v138 = v14;
          v139 = v30;
          v140 = v8;
          v135[0] = v133;
          v135[1] = 3221225472;
          v135[2] = sub_227DB6064;
          v135[3] = &unk_24F08A3E0;
          v136 = v140;
          objc_msgSend_connectUserTo_container_updateSubscription_completion_subscriptionCompletion_(v138, v134, (uint64_t)v131, v132, shouldPerformDatabaseSubscriptionForServiceMode, v137, v135);

          goto LABEL_30;
        case 2:
          BDSCloudKitLog();
          v112 = objc_claimAutoreleasedReturnValue();
          if (!os_log_type_enabled(v112, OS_LOG_TYPE_DEFAULT))
            goto LABEL_28;
          v113 = *(void **)(a1 + 32);
          *(_DWORD *)buf = 138543362;
          v144 = v113;
          v114 = "Account Restricted.  Not syncing anything.  Account status error=%{public}@";
          break;
        case 3:
          BDSCloudKitLog();
          v112 = objc_claimAutoreleasedReturnValue();
          if (!os_log_type_enabled(v112, OS_LOG_TYPE_DEFAULT))
            goto LABEL_28;
          v115 = *(void **)(a1 + 32);
          *(_DWORD *)buf = 138543362;
          v144 = v115;
          v114 = "Books isn't signed into iCloud.  Not syncing anything.  Account status error=%{public}@";
          break;
        case 4:
          BDSCloudKitLog();
          v112 = objc_claimAutoreleasedReturnValue();
          if (!os_log_type_enabled(v112, OS_LOG_TYPE_DEFAULT))
            goto LABEL_28;
          v116 = *(void **)(a1 + 32);
          *(_DWORD *)buf = 138543362;
          v144 = v116;
          v114 = "Account Temporarily Unavailable.  Not syncing anything.  Account status error=%{public}@";
          break;
        default:
          goto LABEL_30;
      }
      _os_log_impl(&dword_227D4F000, v112, OS_LOG_TYPE_DEFAULT, v114, buf, 0xCu);
LABEL_28:

LABEL_29:
      objc_msgSend_detach(v14, v108, v109, v110, v111);
      objc_msgSend_setGettingAccountInfo_(v8, v117, 0, v118, v119);
LABEL_30:

    }
  }

}

void sub_227DB5F54(uint64_t a1)
{
  const char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend_p_getAccountInfo(WeakRetained, v1, v2, v3, v4);

}

void sub_227DB5F80(uint64_t a1, int a2, void *a3)
{
  const char *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  uint64_t v10;
  const char *v11;
  uint64_t v12;
  NSObject *v13;
  _QWORD v14[4];
  id v15;

  v8 = a3;
  if (a2)
  {
    v9 = *(void **)(a1 + 32);
    v10 = *(_QWORD *)(a1 + 40);
    v14[0] = MEMORY[0x24BDAC760];
    v14[1] = 3221225472;
    v14[2] = sub_227DB6058;
    v14[3] = &unk_24F08A3E0;
    v15 = *(id *)(a1 + 48);
    objc_msgSend_attachToZones_completion_(v9, v11, v10, (uint64_t)v14, v12);

    if (!v8)
      goto LABEL_8;
  }
  else
  {
    objc_msgSend_setGettingAccountInfo_(*(void **)(a1 + 48), v5, 0, v6, v7);
    if (!v8)
      goto LABEL_8;
  }
  BDSCloudKitLog();
  v13 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
    sub_227E5D6B0();

LABEL_8:
}

uint64_t sub_227DB6058(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return objc_msgSend_setGettingAccountInfo_(*(void **)(a1 + 32), a2, 0, a4, a5);
}

void sub_227DB6064(uint64_t a1)
{
  NSObject *v2;
  const char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  const char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  int v13;
  void *v14;
  uint64_t v15;

  v15 = *MEMORY[0x24BDAC8D0];
  BDSCloudKitLog();
  v2 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    objc_msgSend_configuration(*(void **)(a1 + 32), v3, v4, v5, v6);
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_containerIdentifier(v7, v8, v9, v10, v11);
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    v13 = 138543362;
    v14 = v12;
    _os_log_impl(&dword_227D4F000, v2, OS_LOG_TYPE_INFO, "BCCloudKitController - connectUserToContainer subscription completed for %{public}@", (uint8_t *)&v13, 0xCu);

  }
}

uint64_t sub_227DB61A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return MEMORY[0x24BEDD108](*(_QWORD *)(a1 + 32), sel_aq_flushPendingGetAccountInfoCompletionBlocksWithWillRetryUpdateAttachment_, 0, a4, a5);
}

void sub_227DB66C4(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 72));
  _Unwind_Resume(a1);
}

void sub_227DB66EC(uint64_t a1, int a2)
{
  id WeakRetained;
  const char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  const char *v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  _QWORD v15[5];
  id v16;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  v9 = WeakRetained;
  if (a2)
  {
    objc_msgSend_transactionManager(WeakRetained, v5, v6, v7, v8);
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_signalFetchChangesTransaction_(v10, v11, *(_QWORD *)(a1 + 32), v12, v13);

  }
  else
  {
    objc_msgSend_accessQueue(WeakRetained, v5, v6, v7, v8);
    v14 = objc_claimAutoreleasedReturnValue();
    v15[0] = MEMORY[0x24BDAC760];
    v15[1] = 3221225472;
    v15[2] = sub_227DB67AC;
    v15[3] = &unk_24F08A408;
    v15[4] = v9;
    v16 = *(id *)(a1 + 40);
    dispatch_async(v14, v15);

  }
}

void sub_227DB67AC(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void **v6;
  int v7;
  NSObject *v8;
  NSObject *v9;
  const char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  const char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  const char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  void *v28;
  __int16 v29;
  uint64_t v30;
  uint64_t v31;

  v31 = *MEMORY[0x24BDAC8D0];
  v6 = (void **)(a1 + 32);
  v7 = objc_msgSend_enableCloudSync(*(void **)(a1 + 32), a2, a3, a4, a5);
  BDSCloudKitSyncLog();
  v8 = objc_claimAutoreleasedReturnValue();
  v9 = v8;
  if (v7)
  {
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend_configuration(*(void **)(a1 + 32), v10, v11, v12, v13);
      v14 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend_containerIdentifier(v14, v15, v16, v17, v18);
      v19 = (void *)objc_claimAutoreleasedReturnValue();
      v20 = *(_QWORD *)(a1 + 40);
      v27 = 138543618;
      v28 = v19;
      v29 = 2114;
      v30 = v20;
      _os_log_impl(&dword_227D4F000, v9, OS_LOG_TYPE_DEFAULT, "BCCloudKitController (%{public}@) - Asked to fetch changes for %{public}@ while detached - attempt attachment.", (uint8_t *)&v27, 0x16u);

    }
    objc_msgSend_aq_requestUpdateAttachment(*v6, v21, v22, v23, v24);
  }
  else
  {
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
      sub_227E5D714(v6, (const char *)a1, v9, v25, v26);

  }
}

void sub_227DB68D4(uint64_t a1)
{
  const char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  const char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (objc_msgSend_enableCloudSync(WeakRetained, v1, v2, v3, v4))
    objc_msgSend__reestablishSyncEngineSaltIfNeeded(WeakRetained, v5, v6, v7, v8);

}

void sub_227DB6AC4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location, char a19)
{
  objc_destroyWeak(&location);
  _Block_object_dispose(&a19, 8);
  _Unwind_Resume(a1);
}

void sub_227DB6AE4(uint64_t a1)
{
  id *v2;
  id WeakRetained;
  const char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  BOOL v9;
  NSObject *v10;
  NSObject *v11;
  const char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  const char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  const char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  id v26;
  const char *v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  void *v31;
  __int128 v32;
  _QWORD v33[5];
  __int128 v34;
  id v35;
  uint8_t buf[4];
  void *v37;
  __int16 v38;
  uint64_t v39;
  uint64_t v40;

  v40 = *MEMORY[0x24BDAC8D0];
  v2 = (id *)(a1 + 56);
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  objc_msgSend_container(WeakRetained, v4, v5, v6, v7);
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  v9 = v8 == 0;
  BDSCloudKitSyncLog();
  v10 = objc_claimAutoreleasedReturnValue();
  v11 = v10;
  if (v9)
  {
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEBUG))
      sub_227E5D860(v11);

    v30 = _Block_copy(*(const void **)(a1 + 40));
    v31 = v30;
    if (v30)
      (*((void (**)(void *, uint64_t))v30 + 2))(v30, 1);

  }
  else
  {
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend_currentUserIDName(*(void **)(a1 + 32), v12, v13, v14, v15);
      v16 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138412546;
      v37 = v16;
      v38 = 2048;
      v39 = objc_msgSend_currentStatus(WeakRetained, v17, v18, v19, v20);
      _os_log_impl(&dword_227D4F000, v11, OS_LOG_TYPE_DEFAULT, "_updateAccountCacheWithTimeout fetchUserRecordIDWithCompletionHandler currentUserIDName:%@ status:%ld ", buf, 0x16u);

    }
    objc_msgSend_container(WeakRetained, v21, v22, v23, v24);
    v25 = (void *)objc_claimAutoreleasedReturnValue();
    v33[0] = MEMORY[0x24BDAC760];
    v33[1] = 3221225472;
    v33[2] = sub_227DB6CD8;
    v33[3] = &unk_24F08B7F8;
    objc_copyWeak(&v35, v2);
    v33[4] = *(_QWORD *)(a1 + 32);
    v32 = *(_OWORD *)(a1 + 40);
    v26 = (id)v32;
    v34 = v32;
    objc_msgSend_fetchUserRecordIDWithCompletionHandler_(v25, v27, (uint64_t)v33, v28, v29);

    objc_destroyWeak(&v35);
  }

}

void sub_227DB6CBC(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_227DB6CD8(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id WeakRetained;
  const char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  const char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  id v18;
  uint64_t v19;
  void *v20;
  NSObject *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  _QWORD block[4];
  id v31;
  id v32;
  uint64_t v33;
  id v34;
  id v35;
  uint64_t v36;
  id v37;

  v5 = a2;
  v6 = a3;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  objc_msgSend_accessQueue(WeakRetained, v8, v9, v10, v11);
  v12 = (void *)objc_claimAutoreleasedReturnValue();

  if (v12)
  {
    objc_msgSend_accessQueue(WeakRetained, v13, v14, v15, v16);
    v17 = objc_claimAutoreleasedReturnValue();
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 3221225472;
    block[2] = sub_227DB6E5C;
    block[3] = &unk_24F08B7D0;
    v31 = v5;
    v18 = WeakRetained;
    v19 = *(_QWORD *)(a1 + 32);
    v32 = v18;
    v33 = v19;
    v36 = *(_QWORD *)(a1 + 48);
    v34 = v6;
    objc_copyWeak(&v37, (id *)(a1 + 56));
    v35 = *(id *)(a1 + 40);
    dispatch_async(v17, block);

    objc_destroyWeak(&v37);
    v20 = v31;
  }
  else
  {
    BDSCloudKitSyncLog();
    v21 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR))
      sub_227E5D89C(v21, v22, v23, v24, v25, v26, v27, v28);

    v29 = _Block_copy(*(const void **)(a1 + 40));
    v20 = v29;
    if (v29)
      (*((void (**)(void *, _QWORD))v29 + 2))(v29, 0);
  }

}

void sub_227DB6E5C(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v6;
  const char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  const char *v12;
  uint64_t v13;
  uint64_t v14;
  char isEqualToString;
  const char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  const char *v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  const char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  const char *v29;
  uint64_t v30;
  uint64_t v31;
  const char *v32;
  uint64_t v33;
  uint64_t v34;
  NSObject *v35;
  const char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  const char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  NSObject *v46;
  const char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  const char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  const char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void *v61;
  const char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void *v66;
  const char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  void *v71;
  const char *v72;
  uint64_t v73;
  uint64_t v74;
  NSObject *v75;
  const char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  void *v80;
  const char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  void *v85;
  const char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  void *v90;
  uint64_t v91;
  NSObject *v92;
  uint64_t v93;
  uint64_t v94;
  void *v95;
  void *v96;
  void *v97;
  id v98;
  id v99;
  const char *v100;
  uint64_t v101;
  uint64_t v102;
  int8x16_t v103;
  __int128 v104;
  _QWORD v105[4];
  int8x16_t v106;
  __int128 v107;
  id v108;
  uint8_t buf[4];
  void *v110;
  __int16 v111;
  void *v112;
  __int16 v113;
  void *v114;
  uint64_t v115;

  v115 = *MEMORY[0x24BDAC8D0];
  objc_msgSend_recordName(*(void **)(a1 + 32), a2, a3, a4, a5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_currentUserIDName(*(void **)(a1 + 40), v7, v8, v9, v10);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  isEqualToString = objc_msgSend_isEqualToString_(v6, v12, (uint64_t)v11, v13, v14);

  if ((isEqualToString & 1) == 0)
  {
    BDSCloudKitSyncLog();
    v46 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v46, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend_configuration(*(void **)(a1 + 48), v47, v48, v49, v50);
      v51 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend_containerIdentifier(v51, v52, v53, v54, v55);
      v56 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend_currentUserIDName(*(void **)(a1 + 48), v57, v58, v59, v60);
      v61 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend_recordName(*(void **)(a1 + 32), v62, v63, v64, v65);
      v66 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138543874;
      v110 = v56;
      v111 = 2112;
      v112 = v61;
      v113 = 2112;
      v114 = v66;
      _os_log_impl(&dword_227D4F000, v46, OS_LOG_TYPE_DEFAULT, "(%{public}@) currentUserIDName from:%@ to:%@ has changed! ", buf, 0x20u);

    }
    objc_msgSend_recordName(*(void **)(a1 + 32), v67, v68, v69, v70);
    v71 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_setCurrentUserIDName_(*(void **)(a1 + 40), v72, (uint64_t)v71, v73, v74);

    goto LABEL_13;
  }
  objc_msgSend_domain(*(void **)(a1 + 56), v16, v17, v18, v19);
  v20 = (void *)objc_claimAutoreleasedReturnValue();
  v24 = objc_msgSend_isEqualToString_(v20, v21, *MEMORY[0x24BDB8EA8], v22, v23);

  if (!v24)
    goto LABEL_14;
  if (objc_msgSend_code(*(void **)(a1 + 56), v25, v26, v27, v28) != 9)
  {
    BDSCloudKitSyncLog();
    v75 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v75, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend_configuration(*(void **)(a1 + 48), v76, v77, v78, v79);
      v80 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend_containerIdentifier(v80, v81, v82, v83, v84);
      v85 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend_currentUserIDName(*(void **)(a1 + 48), v86, v87, v88, v89);
      v90 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138543618;
      v110 = v85;
      v111 = 2112;
      v112 = v90;
      _os_log_impl(&dword_227D4F000, v75, OS_LOG_TYPE_DEFAULT, "(%{public}@) Unknown error while fetching account. Assuming we had a change with currentUserIDName:%@ ", buf, 0x16u);

    }
LABEL_13:
    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 72) + 8) + 24) = 1;
    goto LABEL_14;
  }
  objc_msgSend_setCurrentUserIDName_(*(void **)(a1 + 40), v29, 0, v30, v31);
  objc_msgSend_setCurrentStatus_(*(void **)(a1 + 40), v32, 0, v33, v34);
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 72) + 8) + 24) = 1;
  BDSCloudKitSyncLog();
  v35 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v35, OS_LOG_TYPE_DEFAULT))
  {
    objc_msgSend_configuration(*(void **)(a1 + 48), v36, v37, v38, v39);
    v40 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_containerIdentifier(v40, v41, v42, v43, v44);
    v45 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 138543362;
    v110 = v45;
    _os_log_impl(&dword_227D4F000, v35, OS_LOG_TYPE_DEFAULT, "(%{public}@) CKErrorNotAuthenticated  resetting current account values ", buf, 0xCu);

  }
LABEL_14:
  v91 = a1 + 72;
  if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 72) + 8) + 24))
  {
    BDSCloudKitSyncLog();
    v92 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v92, OS_LOG_TYPE_DEBUG))
      sub_227E5D8CC(a1, (const char *)(a1 + 72), v92, v93, v94);

    v95 = _Block_copy(*(const void **)(a1 + 64));
    v96 = v95;
    if (v95)
      (*((void (**)(void *, _QWORD))v95 + 2))(v95, *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)v91 + 8) + 24));

  }
  else
  {
    objc_msgSend_container(*(void **)(a1 + 40), v25, v26, v27, v28);
    v97 = (void *)objc_claimAutoreleasedReturnValue();
    v105[0] = MEMORY[0x24BDAC760];
    v105[1] = 3221225472;
    v105[2] = sub_227DB7298;
    v105[3] = &unk_24F08B7A8;
    objc_copyWeak(&v108, (id *)(a1 + 80));
    v103 = *(int8x16_t *)(a1 + 40);
    v98 = (id)v103.i64[0];
    v106 = vextq_s8(v103, v103, 8uLL);
    v104 = *(_OWORD *)(a1 + 64);
    v99 = (id)v104;
    v107 = v104;
    objc_msgSend_accountStatusWithCompletionHandler_(v97, v100, (uint64_t)v105, v101, v102);

    objc_destroyWeak(&v108);
  }
}

void sub_227DB727C(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_227DB7298(uint64_t a1, uint64_t a2)
{
  id WeakRetained;
  const char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  const char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  id v15;
  uint64_t v16;
  void *v17;
  id v18;
  void *v19;
  void *v20;
  __int128 v21;
  _QWORD block[4];
  id v23;
  uint64_t v24;
  id v25;
  __int128 v26;
  uint64_t v27;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 64));
  objc_msgSend_accessQueue(WeakRetained, v5, v6, v7, v8);
  v9 = (void *)objc_claimAutoreleasedReturnValue();

  if (v9)
  {
    objc_msgSend_accessQueue(WeakRetained, v10, v11, v12, v13);
    v14 = objc_claimAutoreleasedReturnValue();
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 3221225472;
    block[2] = sub_227DB73B0;
    block[3] = &unk_24F08B780;
    v27 = a2;
    v15 = WeakRetained;
    v16 = *(_QWORD *)(a1 + 32);
    v17 = *(void **)(a1 + 40);
    v23 = v15;
    v24 = v16;
    v25 = v17;
    v21 = *(_OWORD *)(a1 + 48);
    v18 = (id)v21;
    v26 = v21;
    dispatch_async(v14, block);

  }
  else
  {
    v19 = _Block_copy(*(const void **)(a1 + 48));
    v20 = v19;
    if (v19)
      (*((void (**)(void *, _QWORD))v19 + 2))(v19, *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 24));

  }
}

void sub_227DB73B0(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  _BOOL4 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  const char *v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;

  v6 = (const char *)(a1 + 72);
  v7 = *(_QWORD *)(a1 + 72);
  v8 = objc_msgSend_currentStatus(*(void **)(a1 + 32), a2, a3, a4, a5);
  BDSCloudKitSyncLog();
  v9 = objc_claimAutoreleasedReturnValue();
  v10 = os_log_type_enabled(v9, OS_LOG_TYPE_DEBUG);
  if (v7 == v8)
  {
    if (v10)
      sub_227E5D98C(a1, (const char *)v9, v11, v12, v13);

  }
  else
  {
    if (v10)
      sub_227E5DA38(a1, v6, v9, v12, v13);

    objc_msgSend_setCurrentStatus_(*(void **)(a1 + 32), v14, *(_QWORD *)(a1 + 72), v15, v16);
    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 24) = 1;
  }
  v17 = _Block_copy(*(const void **)(a1 + 56));
  v18 = v17;
  if (v17)
    (*((void (**)(void *, _QWORD))v17 + 2))(v17, *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 24));

}

void sub_227DB7868(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_227DB7894(uint64_t a1)
{
  id WeakRetained;
  const char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  const char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  NSObject *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  void *v22;
  _QWORD block[4];
  NSObject *v24;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  objc_msgSend_accessQueue(WeakRetained, v3, v4, v5, v6);
  v7 = (void *)objc_claimAutoreleasedReturnValue();

  if (v7)
  {
    objc_msgSend_accessQueue(WeakRetained, v8, v9, v10, v11);
    v12 = objc_claimAutoreleasedReturnValue();
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 3221225472;
    block[2] = sub_227DB7988;
    block[3] = &unk_24F08A3E0;
    v24 = WeakRetained;
    dispatch_async(v12, block);

    v13 = v24;
  }
  else
  {
    BDSCloudKitLog();
    v13 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
      sub_227E5DD70(v13, v14, v15, v16, v17, v18, v19, v20);
  }

  v21 = _Block_copy(*(const void **)(a1 + 32));
  v22 = v21;
  if (v21)
    (*((void (**)(void *))v21 + 2))(v21);

}

uint64_t sub_227DB7988(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  const char *v6;
  uint64_t v7;
  const char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  objc_msgSend_setContainer_(*(void **)(a1 + 32), a2, 0, a4, a5);
  objc_msgSend_aq_setGettingAccountInfo_willRetryUpdateAttachment_(*(void **)(a1 + 32), v6, 0, 1, v7);
  return objc_msgSend_aq_requestUpdateAttachment(*(void **)(a1 + 32), v8, v9, v10, v11);
}

void sub_227DB7B54(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_227DB7B80(uint64_t a1)
{
  id WeakRetained;
  const char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  const char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  id v13;
  uint64_t v14;
  _QWORD v15[4];
  id v16;
  uint64_t v17;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  objc_msgSend_accessQueue(WeakRetained, v3, v4, v5, v6);
  v7 = (void *)objc_claimAutoreleasedReturnValue();

  if (v7)
  {
    objc_msgSend_accessQueue(WeakRetained, v8, v9, v10, v11);
    v12 = objc_claimAutoreleasedReturnValue();
    v15[0] = MEMORY[0x24BDAC760];
    v15[1] = 3221225472;
    v15[2] = sub_227DB7C30;
    v15[3] = &unk_24F08A408;
    v13 = WeakRetained;
    v14 = *(_QWORD *)(a1 + 32);
    v16 = v13;
    v17 = v14;
    dispatch_async(v12, v15);

  }
}

uint64_t sub_227DB7C30(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  const char *v6;
  uint64_t v7;
  const char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  const char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  objc_msgSend_setContainer_(*(void **)(a1 + 32), a2, 0, a4, a5);
  objc_msgSend_aq_setGettingAccountInfo_willRetryUpdateAttachment_(*(void **)(a1 + 32), v6, 0, 1, v7);
  objc_msgSend__reestablishSyncEngineSalt(*(void **)(a1 + 40), v8, v9, v10, v11);
  return objc_msgSend_aq_requestUpdateAttachment(*(void **)(a1 + 32), v12, v13, v14, v15);
}

void sub_227DB7E14(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint8_t *a5)
{
  _os_log_debug_impl(a1, a2, OS_LOG_TYPE_DEBUG, a4, a5, 0xCu);
}

void sub_227DB7E20(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  NSObject *v9;

  _os_log_debug_impl(a1, v9, OS_LOG_TYPE_DEBUG, a4, &a9, 0x16u);
}

void sub_227DB8628(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_fault_impl(a1, a2, OS_LOG_TYPE_FAULT, a4, &a9, 2u);
}

id sub_227DB8994(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (id)(*(uint64_t (**)(uint64_t, uint64_t, _QWORD, _QWORD))(a3 + 16))(a3, a2, *(_QWORD *)(a1 + 32), 0);
}

BOOL BCAnnotationsProtoBookReadFrom(char *a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  uint64_t v17;
  uint64_t v18;
  BCProtoAnnotation *v19;
  const char *v20;
  uint64_t v21;
  uint64_t v22;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) >= *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
    return *(_BYTE *)(a2 + *v5) == 0;
  v7 = (int *)MEMORY[0x24BE7AF30];
  while (2)
  {
    if (*(_BYTE *)(a2 + *v5))
      return *(_BYTE *)(a2 + *v5) == 0;
    v8 = 0;
    v9 = 0;
    v10 = 0;
    while (1)
    {
      v11 = *v3;
      v12 = *(_QWORD *)(a2 + v11);
      if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
        break;
      v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
      *(_QWORD *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0)
        goto LABEL_12;
      v8 += 7;
      if (v9++ >= 9)
      {
        v10 = 0;
        v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
    v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(_BYTE *)(a2 + *v5))
      v10 = 0;
LABEL_14:
    if (v15 || (v10 & 7) == 4)
      return *(_BYTE *)(a2 + *v5) == 0;
    switch((v10 >> 3))
    {
      case 1u:
        PBReaderReadString();
        v17 = objc_claimAutoreleasedReturnValue();
        v18 = 24;
        goto LABEL_24;
      case 2u:
        PBReaderReadString();
        v17 = objc_claimAutoreleasedReturnValue();
        v18 = 16;
        goto LABEL_24;
      case 3u:
        PBReaderReadString();
        v17 = objc_claimAutoreleasedReturnValue();
        v18 = 32;
LABEL_24:
        v19 = *(BCProtoAnnotation **)&a1[v18];
        *(_QWORD *)&a1[v18] = v17;
        goto LABEL_28;
      case 4u:
        v19 = objc_alloc_init(BCProtoAnnotation);
        objc_msgSend_addAnnotation_(a1, v20, (uint64_t)v19, v21, v22);
        if (PBReaderPlaceMark() && (BCProtoAnnotationReadFrom((uint64_t)v19, a2) & 1) != 0)
        {
          PBReaderRecallMark();
LABEL_28:

LABEL_29:
          if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
            return *(_BYTE *)(a2 + *v5) == 0;
          continue;
        }

        return 0;
      default:
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          return 0;
        goto LABEL_29;
    }
  }
}

id sub_227DBC500(void *a1, uint64_t a2, void *a3)
{
  id v4;
  id v5;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  const char *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  const char *v16;
  uint64_t v17;
  const char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t i;
  uint64_t v24;
  void *v25;
  const char *v26;
  uint64_t v27;
  const char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  _BYTE v38[128];
  uint64_t v39;

  v39 = *MEMORY[0x24BDAC8D0];
  v4 = a3;
  v5 = objc_alloc(MEMORY[0x24BDBCED8]);
  v10 = objc_msgSend_count(v4, v6, v7, v8, v9);
  v14 = (void *)objc_msgSend_initWithCapacity_(v5, v11, v10, v12, v13);
  v34 = 0u;
  v35 = 0u;
  v36 = 0u;
  v37 = 0u;
  v15 = v4;
  v17 = objc_msgSend_countByEnumeratingWithState_objects_count_(v15, v16, (uint64_t)&v34, (uint64_t)v38, 16);
  if (v17)
  {
    v21 = v17;
    v22 = *(_QWORD *)v35;
    do
    {
      for (i = 0; i != v21; ++i)
      {
        if (*(_QWORD *)v35 != v22)
          objc_enumerationMutation(v15);
        v24 = *(_QWORD *)(*((_QWORD *)&v34 + 1) + 8 * i);
        objc_msgSend_objectForKeyedSubscript_(a1, v18, v24, v19, v20, (_QWORD)v34);
        v25 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend_setObject_forKeyedSubscript_(v14, v26, (uint64_t)v25, v24, v27);

      }
      v21 = objc_msgSend_countByEnumeratingWithState_objects_count_(v15, v18, (uint64_t)&v34, (uint64_t)v38, 16);
    }
    while (v21);
  }

  v32 = (void *)objc_msgSend_copy(v14, v28, v29, v30, v31);
  return v32;
}

id BookDataStoreBundle()
{
  if (qword_25592A528 != -1)
    dispatch_once(&qword_25592A528, &unk_24F08B8F8);
  return (id)qword_25592A520;
}

void sub_227DBC6A4()
{
  void *v0;
  uint64_t v1;
  const char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;

  v0 = (void *)MEMORY[0x24BDD1488];
  v1 = objc_opt_class();
  objc_msgSend_bundleForClass_(v0, v2, v1, v3, v4);
  v5 = objc_claimAutoreleasedReturnValue();
  v6 = (void *)qword_25592A520;
  qword_25592A520 = v5;

}

uint64_t BookDataStoreCFBundle()
{
  if (qword_25592A538 != -1)
    dispatch_once(&qword_25592A538, &unk_24F08B918);
  return qword_25592A530;
}

void sub_227DBC72C()
{
  const char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  const char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  const __CFURL *v9;
  id v10;

  BookDataStoreBundle();
  v10 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend_bundleURL(v10, v0, v1, v2, v3);
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  if (v4)
  {
    objc_msgSend_bundleURL(v10, v5, v6, v7, v8);
    v9 = (const __CFURL *)objc_claimAutoreleasedReturnValue();
    qword_25592A530 = (uint64_t)CFBundleCreate(0, v9);

  }
}

id sub_227DBC798(void *a1, uint64_t a2, uint64_t a3, void *a4)
{
  void *v6;
  id v7;
  uint64_t v8;
  const char *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  const char *v13;
  uint64_t v14;
  void *v15;
  void *v16;

  v6 = (void *)MEMORY[0x24BDBCF20];
  v7 = a4;
  v8 = objc_opt_class();
  objc_msgSend_setWithObjects_(v6, v9, v8, v10, v11, a3, 0);
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_decodeObjectOfClasses_forKey_(a1, v13, (uint64_t)v12, (uint64_t)v7, v14);
  v15 = (void *)objc_claimAutoreleasedReturnValue();

  objc_opt_class();
  BUDynamicCast();
  v16 = (void *)objc_claimAutoreleasedReturnValue();

  return v16;
}

uint64_t BDSIsInternalInstall()
{
  return os_variant_has_internal_content();
}

void sub_227DC2478()
{
  void *v0;
  const char *v1;
  uint64_t v2;
  uint64_t v3;
  const char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const char *v9;
  uint64_t v10;
  const char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;

  NSTemporaryDirectory();
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_stringByAppendingPathComponent_(v0, v1, (uint64_t)CFSTR("BDSUnitTest"), v2, v3);
  v16 = (id)objc_claimAutoreleasedReturnValue();

  objc_msgSend_defaultManager(MEMORY[0x24BDD1580], v4, v5, v6, v7);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_removeItemAtPath_error_(v8, v9, (uint64_t)v16, 0, v10);

  objc_msgSend_fileURLWithPath_(MEMORY[0x24BDBCF48], v11, (uint64_t)v16, v12, v13);
  v14 = objc_claimAutoreleasedReturnValue();
  v15 = (void *)qword_25592A550;
  qword_25592A550 = v14;

}

BOOL sub_227DC2D00(void *a1, uint64_t a2, unint64_t *a3, uint64_t a4, void *a5, objc_class *a6, void *a7, _QWORD *a8, _QWORD *a9)
{
  id v15;
  const char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  const char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  const char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  const char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  void *v35;
  const char *v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  const char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  const char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  const char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  const char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void *v58;
  const char *v59;
  uint64_t v60;
  uint64_t v61;
  int v62;
  const char *v63;
  uint64_t v64;
  void *v65;
  const char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  id v70;
  const char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  const char *v75;
  uint64_t v76;
  uint64_t v77;
  const char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  void *v82;
  const char *v83;
  uint64_t v84;
  uint64_t v85;
  const char *v86;
  uint64_t v87;
  uint64_t v88;
  const char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  void *v93;
  const char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  void *v98;
  const char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  void *v103;
  const char *v104;
  uint64_t v105;
  uint64_t v106;
  int isEqualToString;
  const char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  const char *v112;
  uint64_t v113;
  uint64_t v114;
  const char *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  id v119;
  id v120;
  unint64_t *v122;
  _QWORD *v123;
  id v124;
  id v125;
  id v126;
  uint64_t v127;
  void *v128;
  unint64_t v129;
  void *v130;

  v15 = a5;
  v125 = a7;
  objc_msgSend_changes(a1, v16, v17, v18, v19);
  v130 = (void *)objc_claimAutoreleasedReturnValue();
  v24 = objc_msgSend_count(v130, v20, v21, v22, v23);
  objc_msgSend_array(MEMORY[0x24BDBCEB8], v25, v26, v27, v28);
  v126 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend_array(MEMORY[0x24BDBCEB8], v29, v30, v31, v32);
  v124 = (id)objc_claimAutoreleasedReturnValue();
  NSStringFromClass(a6);
  v128 = (void *)objc_claimAutoreleasedReturnValue();
  v129 = v24;
  v33 = *a3;
  v123 = a8;
  if (*a3 < v24 && a4 >= 1)
  {
    v34 = 0;
    v127 = a4;
    v122 = a3;
    do
    {
      v35 = (void *)MEMORY[0x22E2AA24C]();
      objc_msgSend_objectAtIndexedSubscript_(v130, v36, v33, v37, v38);
      v39 = (void *)objc_claimAutoreleasedReturnValue();
      if (objc_msgSend_changeType(v39, v40, v41, v42, v43) && objc_msgSend_changeType(v39, v44, v45, v46, v47) != 1)
      {
        if (objc_msgSend_changeType(v39, v44, v45, v46, v47) != 2)
          goto LABEL_22;
        objc_msgSend_changedObjectID(v39, v89, v90, v91, v92);
        v93 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend_entity(v93, v94, v95, v96, v97);
        v98 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend_name(v98, v99, v100, v101, v102);
        v103 = (void *)objc_claimAutoreleasedReturnValue();
        isEqualToString = objc_msgSend_isEqualToString_(v103, v104, (uint64_t)v128, v105, v106);

        if (!isEqualToString)
        {
          a4 = v127;
          goto LABEL_22;
        }
        objc_msgSend_tombstone(v39, v108, v109, v110, v111);
        v48 = (void *)objc_claimAutoreleasedReturnValue();
        if (v48)
        {
          objc_msgSend_addObject_(v126, v112, (uint64_t)v48, v113, v114);
          ++v34;
        }
      }
      else
      {
        objc_msgSend_changedObjectID(v39, v44, v45, v46, v47);
        v48 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend_entity(v48, v49, v50, v51, v52);
        v53 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend_name(v53, v54, v55, v56, v57);
        v58 = (void *)objc_claimAutoreleasedReturnValue();
        v62 = objc_msgSend_isEqualToString_(v58, v59, (uint64_t)v128, v60, v61);

        if (!v62)
        {

          objc_autoreleasePoolPop(v35);
          a4 = v127;
          goto LABEL_23;
        }
        objc_msgSend_existingObjectWithID_error_(v15, v63, (uint64_t)v48, 0, v64);
        v65 = (void *)objc_claimAutoreleasedReturnValue();
        if ((objc_opt_isKindOfClass() & 1) != 0 && (objc_msgSend_isDeleted(v65, v66, v67, v68, v69) & 1) == 0)
        {
          v70 = v65;
          if ((objc_msgSend_deletedFlag(v70, v71, v72, v73, v74) & 1) == 0)
          {
            objc_msgSend_setPrivacyDelegate_(v70, v75, (uint64_t)v125, v76, v77);
            v82 = (void *)objc_msgSend_mutableCopy(v70, v78, v79, v80, v81);
            objc_msgSend_setPrivacyDelegate_(v82, v83, (uint64_t)v125, v84, v85);
            if (v82)
            {
              objc_msgSend_addObject_(v124, v86, (uint64_t)v82, v87, v88);
              ++v34;
            }
            a3 = v122;

          }
        }
        objc_msgSend_refreshObject_mergeChanges_(v15, v66, (uint64_t)v65, 0, v69);

      }
      a4 = v127;

LABEL_22:
      objc_autoreleasePoolPop(v35);
      objc_msgSend_processPendingChanges(v15, v115, v116, v117, v118);
LABEL_23:
      ++v33;
    }
    while (v33 < v129 && v34 < a4);
  }
  v119 = objc_retainAutorelease(v124);
  *v123 = v119;
  v120 = objc_retainAutorelease(v126);
  *a9 = v120;
  *a3 = v33;

  return v33 == v129;
}

void sub_227DC3048(uint64_t a1, int a2, void *a3)
{
  id v5;
  NSObject *v6;
  const char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  int v12;
  void *v13;
  uint64_t v14;

  v14 = *MEMORY[0x24BDAC8D0];
  v5 = a3;
  if (v5)
  {
    BDSCloudKitLog();
    v6 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
      sub_227E5E960();
  }
  else
  {
    if (!a2)
      goto LABEL_5;
    BDSCloudKitLog();
    v6 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend_entityName(*(void **)(a1 + 32), v7, v8, v9, v10);
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      v12 = 138412290;
      v13 = v11;
      _os_log_impl(&dword_227D4F000, v6, OS_LOG_TYPE_DEFAULT, "#dissociateCloudData Successfully transitioned to a new cloud container for entity: %@", (uint8_t *)&v12, 0xCu);

    }
  }

LABEL_5:
}

void sub_227DC32B4(uint64_t a1, void *a2, char a3)
{
  id v5;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  const char *v11;
  uint64_t v12;
  void *v13;
  void *v14;
  _QWORD v15[4];
  id v16;
  id v17;
  char v18;

  v5 = a2;
  if (objc_msgSend_count(v5, v6, v7, v8, v9))
  {
    v10 = *(void **)(a1 + 32);
    v15[0] = MEMORY[0x24BDAC760];
    v15[1] = 3221225472;
    v15[2] = sub_227DC3388;
    v15[3] = &unk_24F08BAB0;
    v18 = a3;
    v16 = v10;
    v17 = *(id *)(a1 + 40);
    objc_msgSend_syncCloudData_completion_(v16, v11, (uint64_t)v5, (uint64_t)v15, v12);

  }
  else
  {
    v13 = _Block_copy(*(const void **)(a1 + 40));
    v14 = v13;
    if (v13)
      (*((void (**)(void *))v13 + 2))(v13);

  }
}

void sub_227DC3388(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void (**v6)(void);
  void (**v7)(void);

  if (*(_BYTE *)(a1 + 48))
    objc_msgSend_signalSyncToCK(*(void **)(a1 + 32), a2, a3, a4, a5);
  v6 = (void (**)(void))_Block_copy(*(const void **)(a1 + 40));
  if (v6)
  {
    v7 = v6;
    v6[2]();
    v6 = v7;
  }

}

void sub_227DC3554(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_227DC3570(uint64_t a1)
{
  NSObject *v2;
  void *v3;
  void *v4;

  BDSCloudKitLog();
  v2 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_ERROR))
    sub_227E5EA38();

  v3 = _Block_copy(*(const void **)(a1 + 32));
  v4 = v3;
  if (v3)
    (*((void (**)(void *, _QWORD, _QWORD))v3 + 2))(v3, 0, 0);

}

void sub_227DC35DC(uint64_t a1)
{
  id WeakRetained;
  const char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  const char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  const char *v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  const char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  const char *v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  const char *v26;
  uint64_t v27;
  uint64_t v28;
  const char *v29;
  uint64_t v30;
  void *v31;
  id v32;
  const char *v33;
  uint64_t v34;
  const char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  const char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  NSObject *v43;
  const char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  const char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  id v54;
  const char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  const char *v60;
  uint64_t v61;
  uint64_t v62;
  void *v63;
  const char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  void *v68;
  id v69;
  const char *v70;
  uint64_t v71;
  const char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t i;
  void *v78;
  const char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  void *v83;
  const char *v84;
  uint64_t v85;
  const char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  void *v90;
  const char *v91;
  uint64_t v92;
  uint64_t v93;
  const char *v94;
  uint64_t v95;
  uint64_t v96;
  void *v97;
  void *v98;
  const char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  const char *v103;
  uint64_t v104;
  uint64_t v105;
  id v106;
  const char *v107;
  uint64_t v108;
  void *v109;
  void *v110;
  NSObject *v111;
  const char *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  void *v116;
  void *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  void *v121;
  void *v122;
  void *v123;
  id v124;
  __int128 v125;
  __int128 v126;
  __int128 v127;
  __int128 v128;
  id v129;
  uint8_t v130[128];
  uint8_t buf[4];
  void *v132;
  __int16 v133;
  uint64_t v134;
  uint64_t v135;

  v135 = *MEMORY[0x24BDAC8D0];
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  objc_msgSend_moc(WeakRetained, v3, v4, v5, v6);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  if (v7)
  {
    v8 = objc_alloc(MEMORY[0x24BDBB678]);
    objc_msgSend_entityName(WeakRetained, v9, v10, v11, v12);
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    v17 = (void *)objc_msgSend_initWithEntityName_(v8, v14, (uint64_t)v13, v15, v16);

    if (*(_QWORD *)(a1 + 48) >= 0x40uLL)
    {
      v21 = 64;
      objc_msgSend_setFetchLimit_(v17, v18, 64, v19, v20);
    }
    else
    {
      v21 = *(_QWORD *)(a1 + 48);
      objc_msgSend_setFetchLimit_(v17, v18, v21, v19, v20);
    }
    objc_msgSend_predicateWithFormat_(MEMORY[0x24BDD1758], v22, (uint64_t)CFSTR("editGeneration > syncGeneration"), v23, v24);
    v25 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_setPredicate_(v17, v26, (uint64_t)v25, v27, v28);

    v129 = 0;
    objc_msgSend_executeFetchRequest_error_(v7, v29, (uint64_t)v17, (uint64_t)&v129, v30);
    v31 = (void *)objc_claimAutoreleasedReturnValue();
    v32 = v129;
    objc_msgSend__logError_at_(WeakRetained, v33, (uint64_t)v32, (uint64_t)CFSTR("_dirtyMutableCloudDataWithFetchLimit - fetch"), v34);
    if (objc_msgSend_count(v31, v35, v36, v37, v38))
    {
      v119 = v21;
      v120 = a1;
      v121 = v32;
      v123 = v17;
      v118 = objc_msgSend_count(v31, v39, v40, v41, v42);
      BDSCloudKitLog();
      v43 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v43, OS_LOG_TYPE_DEFAULT))
      {
        objc_msgSend_entityName(WeakRetained, v44, v45, v46, v47);
        v48 = (void *)objc_claimAutoreleasedReturnValue();
        v53 = objc_msgSend_count(v31, v49, v50, v51, v52);
        *(_DWORD *)buf = 138543618;
        v132 = v48;
        v133 = 2048;
        v134 = v53;
        _os_log_impl(&dword_227D4F000, v43, OS_LOG_TYPE_DEFAULT, "BCCloudDataManager %{public}@ startSyncToCKWithCompletion found %lu dirty records", buf, 0x16u);

      }
      v54 = objc_alloc(MEMORY[0x24BDBCEB8]);
      v59 = objc_msgSend_count(v31, v55, v56, v57, v58);
      v63 = (void *)objc_msgSend_initWithCapacity_(v54, v60, v59, v61, v62);
      objc_msgSend_privacyDelegate(WeakRetained, v64, v65, v66, v67);
      v68 = (void *)objc_claimAutoreleasedReturnValue();
      v125 = 0u;
      v126 = 0u;
      v127 = 0u;
      v128 = 0u;
      v122 = v31;
      v69 = v31;
      v71 = objc_msgSend_countByEnumeratingWithState_objects_count_(v69, v70, (uint64_t)&v125, (uint64_t)v130, 16);
      if (v71)
      {
        v75 = v71;
        v76 = *(_QWORD *)v126;
        do
        {
          for (i = 0; i != v75; ++i)
          {
            if (*(_QWORD *)v126 != v76)
              objc_enumerationMutation(v69);
            v78 = *(void **)(*((_QWORD *)&v125 + 1) + 8 * i);
            objc_msgSend_setPrivacyDelegate_(v78, v72, (uint64_t)v68, v73, v74);
            v83 = (void *)objc_msgSend_mutableCopy(v78, v79, v80, v81, v82);
            objc_msgSend_refreshObject_mergeChanges_(v7, v84, (uint64_t)v78, 1, v85);
            if (v83)
            {
              objc_msgSend_privacyDelegate(WeakRetained, v86, v87, v88, v89);
              v90 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend_setPrivacyDelegate_(v83, v91, (uint64_t)v90, v92, v93);

              objc_msgSend_addObject_(v63, v94, (uint64_t)v83, v95, v96);
            }

          }
          v75 = objc_msgSend_countByEnumeratingWithState_objects_count_(v69, v72, (uint64_t)&v125, (uint64_t)v130, 16);
        }
        while (v75);
      }

      v97 = _Block_copy(*(const void **)(v120 + 32));
      v98 = v97;
      if (v97)
        (*((void (**)(void *, void *, BOOL))v97 + 2))(v97, v63, v118 == v119);

      v32 = v121;
      if (objc_msgSend_hasChanges(v7, v99, v100, v101, v102))
      {
        v124 = v121;
        objc_msgSend_save_(v7, v103, (uint64_t)&v124, v104, v105);
        v106 = v124;

        objc_msgSend__logError_at_(WeakRetained, v107, (uint64_t)v106, (uint64_t)CFSTR("_dirtyMutableCloudDataWithFetchLimit - fetch"), v108);
        v32 = v106;
      }
      v31 = v122;
      v17 = v123;

    }
    else
    {
      BDSCloudKitLog();
      v111 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v111, OS_LOG_TYPE_DEFAULT))
      {
        objc_msgSend_entityName(WeakRetained, v112, v113, v114, v115);
        v116 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138412290;
        v132 = v116;
        _os_log_impl(&dword_227D4F000, v111, OS_LOG_TYPE_DEFAULT, "BCCloudDataManager %@ startSyncToCKWithCompletion no records need updating", buf, 0xCu);

      }
      v117 = _Block_copy(*(const void **)(a1 + 32));
      v63 = v117;
      if (v117)
        (*((void (**)(void *, _QWORD, _QWORD))v117 + 2))(v117, 0, 0);
    }

  }
  else
  {
    v109 = _Block_copy(*(const void **)(a1 + 32));
    v110 = v109;
    if (v109)
      (*((void (**)(void *, _QWORD, _QWORD))v109 + 2))(v109, 0, 0);

  }
}

void sub_227DC3ABC(uint64_t a1, void *a2)
{
  void *v3;
  void *v4;
  id v5;

  v5 = a2;
  v3 = _Block_copy(*(const void **)(a1 + 32));
  v4 = v3;
  if (v3)
    (*((void (**)(void *, id))v3 + 2))(v3, v5);

}

void sub_227DC3E64(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_227DC3E88(uint64_t a1)
{
  NSObject *v2;
  void *v3;
  void *v4;

  BDSCloudKitLog();
  v2 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_ERROR))
    sub_227E5EA38();

  v3 = _Block_copy(*(const void **)(a1 + 32));
  v4 = v3;
  if (v3)
    (*((void (**)(void *, _QWORD))v3 + 2))(v3, 0);

}

void sub_227DC3EF0(uint64_t a1)
{
  id WeakRetained;
  const char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  const char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  const char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  const char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  const char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  void *v28;
  const char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  void *v34;
  void *v35;
  void *v36;
  void *v37;
  int v38;
  void *v39;
  uint64_t v40;

  v40 = *MEMORY[0x24BDAC8D0];
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  objc_msgSend_moc(WeakRetained, v3, v4, v5, v6);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  if (v11)
  {
    objc_msgSend_shared(MEMORY[0x24BE0FC08], v7, v8, v9, v10);
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    v17 = objc_msgSend_verboseLoggingEnabled(v12, v13, v14, v15, v16);

    if (v17)
    {
      BDSCloudKitDevelopmentLog();
      v22 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v22, OS_LOG_TYPE_DEFAULT))
      {
        objc_msgSend_entityName(WeakRetained, v23, v24, v25, v26);
        v27 = (void *)objc_claimAutoreleasedReturnValue();
        v38 = 138412290;
        v39 = v27;
        _os_log_impl(&dword_227D4F000, v22, OS_LOG_TYPE_DEFAULT, "\"\\\"BCCloudDataManager requesting currentCloudSyncVersions for %@\\\"\"", (uint8_t *)&v38, 0xCu);

      }
    }
    objc_msgSend_mq_cloudSyncVersions(WeakRetained, v18, v19, v20, v21);
    v28 = (void *)objc_claimAutoreleasedReturnValue();
    v33 = (void *)objc_msgSend_mutableCopy(v28, v29, v30, v31, v32);

    v34 = _Block_copy(*(const void **)(a1 + 32));
    v35 = v34;
    if (v34)
      (*((void (**)(void *, void *))v34 + 2))(v34, v33);

  }
  else
  {
    v36 = _Block_copy(*(const void **)(a1 + 32));
    v37 = v36;
    if (v36)
      (*((void (**)(void *, _QWORD))v36 + 2))(v36, 0);

  }
}

void sub_227DC4244(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,id location)
{
  id *v21;

  objc_destroyWeak(v21);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_227DC4268(uint64_t a1)
{
  NSObject *v2;
  void *v3;
  void *v4;

  BDSCloudKitLog();
  v2 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_ERROR))
    sub_227E5EA38();

  v3 = _Block_copy(*(const void **)(a1 + 32));
  v4 = v3;
  if (v3)
    (*((void (**)(void *, _QWORD, _QWORD, _QWORD))v3 + 2))(v3, 0, 0, 0);

}

void sub_227DC42D8(uint64_t a1)
{
  id WeakRetained;
  const char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  const char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  const char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  NSObject *v18;
  const char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  const char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  id v29;
  const char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  const char *v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  const char *v39;
  uint64_t v40;
  uint64_t v41;
  const char *v42;
  uint64_t v43;
  uint64_t v44;
  const char *v45;
  uint64_t v46;
  uint64_t v47;
  const char *v48;
  uint64_t v49;
  void *v50;
  id v51;
  const char *v52;
  uint64_t v53;
  const char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  const char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void *v63;
  void *v64;
  void *v65;
  const char *v66;
  uint64_t v67;
  void *v68;
  const char *v69;
  uint64_t v70;
  uint64_t v71;
  const char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  void *v76;
  const char *v77;
  uint64_t v78;
  uint64_t v79;
  const char *v80;
  uint64_t v81;
  const char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  const char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  NSObject *v90;
  const char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  void *v95;
  const char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  void *v100;
  const char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  const char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  const char *v110;
  uint64_t v111;
  uint64_t v112;
  int v113;
  id v114;
  const char *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  void *v119;
  uint64_t v120;
  uint64_t v121;
  void *v122;
  uint64_t v123;
  const char *v124;
  uint64_t v125;
  void *v126;
  const char *v127;
  uint64_t v128;
  const char *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  void *v133;
  void *v134;
  void *v135;
  void *v136;
  void *v137;
  void *v138;
  id v139;
  id v140;
  void *v141;
  uint8_t buf[4];
  void *v143;
  __int16 v144;
  uint64_t v145;
  __int16 v146;
  void *v147;
  __int16 v148;
  _BOOL4 v149;
  __int16 v150;
  void *v151;
  uint64_t v152;

  v152 = *MEMORY[0x24BDAC8D0];
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 72));
  objc_msgSend_moc(WeakRetained, v3, v4, v5, v6);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  if (v11)
  {
    objc_msgSend_shared(MEMORY[0x24BE0FC08], v7, v8, v9, v10);
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    v17 = objc_msgSend_verboseLoggingEnabled(v12, v13, v14, v15, v16);

    if (v17)
    {
      BDSCloudKitDevelopmentLog();
      v18 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT))
      {
        objc_msgSend_entityName(WeakRetained, v19, v20, v21, v22);
        v23 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend_debugDescription(*(void **)(a1 + 32), v24, v25, v26, v27);
        v28 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138412546;
        v143 = v23;
        v144 = 2112;
        v145 = (uint64_t)v28;
        _os_log_impl(&dword_227D4F000, v18, OS_LOG_TYPE_DEFAULT, "\"\\\"BCCloudDataManager %@ setCloudData %@\\\"\"", buf, 0x16u);

      }
    }
    v29 = objc_alloc(MEMORY[0x24BDBB678]);
    objc_msgSend_entityName(WeakRetained, v30, v31, v32, v33);
    v34 = (void *)objc_claimAutoreleasedReturnValue();
    v38 = (void *)objc_msgSend_initWithEntityName_(v29, v35, (uint64_t)v34, v36, v37);

    objc_msgSend_setReturnsObjectsAsFaults_(v38, v39, 0, v40, v41);
    objc_msgSend_setFetchLimit_(v38, v42, 1, v43, v44);
    objc_msgSend_setPredicate_(v38, v45, *(_QWORD *)(a1 + 40), v46, v47);
    v140 = 0;
    objc_msgSend_executeFetchRequest_error_(v11, v48, (uint64_t)v38, (uint64_t)&v140, v49);
    v50 = (void *)objc_claimAutoreleasedReturnValue();
    v51 = v140;
    objc_msgSend__logError_at_(WeakRetained, v52, (uint64_t)v51, (uint64_t)CFSTR("setCloudData - fetch"), v53);
    v138 = v50;
    objc_msgSend_firstObject(v50, v54, v55, v56, v57);
    v62 = objc_claimAutoreleasedReturnValue();
    v63 = (void *)v62;
    if (!v62)
    {
      v64 = (void *)MEMORY[0x24BDBB658];
      objc_msgSend_entityName(WeakRetained, v58, v59, v60, v61);
      v65 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend_insertNewObjectForEntityForName_inManagedObjectContext_(v64, v66, (uint64_t)v65, (uint64_t)v11, v67);
      v63 = (void *)objc_claimAutoreleasedReturnValue();

    }
    objc_msgSend_privacyDelegate(WeakRetained, v58, v59, v60, v61);
    v68 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_setPrivacyDelegate_(v63, v69, (uint64_t)v68, v70, v71);

    objc_msgSend_privacyDelegate(WeakRetained, v72, v73, v74, v75);
    v76 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_setPrivacyDelegate_(*(void **)(a1 + 32), v77, (uint64_t)v76, v78, v79);

    if ((objc_msgSend_isEqualExceptForDate_ignoringEmptySalt_(v63, v80, *(_QWORD *)(a1 + 32), *(unsigned __int8 *)(a1 + 80), v81) & 1) != 0|| (objc_msgSend_configureFromCloudData_withMergers_(v63, v82, *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 48), v85), !objc_msgSend_hasChanges(v63, v86, v87, v88, v89)))
    {
      v105 = 0;
    }
    else
    {
      BDSCloudKitLog();
      v90 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v90, OS_LOG_TYPE_DEFAULT))
      {
        objc_msgSend_entityName(WeakRetained, v91, v92, v93, v94);
        v95 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend_identifier(v63, v96, v97, v98, v99);
        v100 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138544386;
        v143 = v95;
        v144 = 2160;
        v145 = 1752392040;
        v146 = 2112;
        v147 = v100;
        v148 = 1024;
        v149 = v62 == 0;
        v150 = 2112;
        v151 = v63;
        _os_log_impl(&dword_227D4F000, v90, OS_LOG_TYPE_DEFAULT, "BCCloudDataManager #recordChange %{public}@ setCloudData for id:%{mask.hash}@ isNew:%d data:%@", buf, 0x30u);

      }
      objc_msgSend_incrementEditGeneration(v63, v101, v102, v103, v104);
      v105 = 1;
    }
    if (objc_msgSend_hasChanges(v11, v82, v83, v84, v85))
    {
      objc_msgSend_mq_incrementCloudVersion(WeakRetained, v106, v107, v108, v109);
      v139 = v51;
      v113 = objc_msgSend_save_(v11, v110, (uint64_t)&v139, v111, v112);
      v114 = v139;

      if (!v62)
      {
        if (v113)
        {
          objc_msgSend_monitor(*(void **)(a1 + 56), v115, v116, v117, v118);
          v119 = (void *)objc_claimAutoreleasedReturnValue();

          if (v119)
          {
            if (v63)
            {
              objc_msgSend_monitor(*(void **)(a1 + 56), v115, v120, v121, v118);
              v122 = (void *)objc_claimAutoreleasedReturnValue();
              v123 = *(_QWORD *)(a1 + 56);
              v141 = v63;
              objc_msgSend_arrayWithObjects_count_(MEMORY[0x24BDBCE30], v124, (uint64_t)&v141, 1, v125);
              v126 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend_dataManager_didInsertNewRecords_(v122, v127, v123, (uint64_t)v126, v128);

            }
          }
        }
      }
      objc_msgSend__logError_at_(WeakRetained, v115, (uint64_t)v114, (uint64_t)CFSTR("setCloudData - save"), v118);
      objc_msgSend_mq_signalTransactions(WeakRetained, v129, v130, v131, v132);
    }
    else
    {
      v114 = v51;
    }
    objc_msgSend_mq_sanitizeError_(WeakRetained, v106, (uint64_t)v114, v108, v109);
    v135 = (void *)objc_claimAutoreleasedReturnValue();

    v136 = _Block_copy(*(const void **)(a1 + 64));
    v137 = v136;
    if (v136)
      (*((void (**)(void *, BOOL, uint64_t, void *))v136 + 2))(v136, v63 != 0, v105, v135);

  }
  else
  {
    v133 = _Block_copy(*(const void **)(a1 + 64));
    v134 = v133;
    if (v133)
      (*((void (**)(void *, _QWORD, _QWORD, _QWORD))v133 + 2))(v133, 0, 0, 0);

  }
}

void sub_227DC4994(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,id location)
{
  id *v21;

  objc_destroyWeak(v21);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_227DC49B8(uint64_t a1)
{
  NSObject *v2;
  void *v3;
  void *v4;

  BDSCloudKitLog();
  v2 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_ERROR))
    sub_227E5EA38();

  v3 = _Block_copy(*(const void **)(a1 + 32));
  v4 = v3;
  if (v3)
    (*((void (**)(void *, _QWORD, _QWORD, _QWORD))v3 + 2))(v3, 0, 0, 0);

}

void sub_227DC4A28(uint64_t a1)
{
  const char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  const char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  NSObject *v16;
  const char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  id v22;
  const char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  const char *v28;
  uint64_t v29;
  uint64_t v30;
  const char *v31;
  uint64_t v32;
  uint64_t v33;
  const char *v34;
  uint64_t v35;
  uint64_t v36;
  const char *v37;
  uint64_t v38;
  void *v39;
  id v40;
  const char *v41;
  uint64_t v42;
  void *v43;
  const char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  const char *v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  id v53;
  const char *v54;
  const char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t i;
  void *v61;
  void *v62;
  const char *v63;
  uint64_t v64;
  void *v65;
  id v66;
  id v67;
  const char *v68;
  uint64_t v69;
  uint64_t v70;
  const char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  const char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  const char *v79;
  uint64_t v80;
  uint64_t v81;
  int v82;
  id v83;
  const char *v84;
  uint64_t v85;
  const char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  NSObject *v90;
  const char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  void *v97;
  BOOL v98;
  uint64_t v99;
  void *v100;
  const char *v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  void *v107;
  void *v108;
  void *v109;
  void *v110;
  void *v111;
  void *v112;
  const char *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  void *v117;
  const char *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  void *v122;
  id v123;
  void *v124;
  id WeakRetained;
  id v126;
  _QWORD v127[4];
  id v128;
  id v129;
  id v130;
  id v131;
  __int128 *p_buf;
  uint64_t *v133;
  uint64_t *v134;
  _QWORD *v135;
  char v136;
  _QWORD v137[4];
  uint64_t v138;
  uint64_t *v139;
  uint64_t v140;
  char v141;
  uint64_t v142;
  uint64_t *v143;
  uint64_t v144;
  char v145;
  __int128 v146;
  __int128 v147;
  __int128 v148;
  __int128 v149;
  id v150;
  uint8_t v151[4];
  void *v152;
  __int16 v153;
  void *v154;
  __int16 v155;
  id v156;
  __int128 buf;
  uint64_t v158;
  uint64_t (*v159)(uint64_t, uint64_t);
  void (*v160)(uint64_t);
  id v161;
  _BYTE v162[128];
  uint64_t v163;

  v163 = *MEMORY[0x24BDAC8D0];
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 80));
  objc_msgSend_moc(WeakRetained, v2, v3, v4, v5);
  v124 = (void *)objc_claimAutoreleasedReturnValue();
  if (v124)
  {
    objc_msgSend_shared(MEMORY[0x24BE0FC08], v6, v7, v8, v9);
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    v15 = objc_msgSend_verboseLoggingEnabled(v10, v11, v12, v13, v14);

    if (v15)
    {
      BDSCloudKitDevelopmentLog();
      v16 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
      {
        objc_msgSend_entityName(WeakRetained, v17, v18, v19, v20);
        v21 = (void *)objc_claimAutoreleasedReturnValue();
        LODWORD(buf) = 138412290;
        *(_QWORD *)((char *)&buf + 4) = v21;
        _os_log_impl(&dword_227D4F000, v16, OS_LOG_TYPE_DEFAULT, "\"\\\"BCCloudDataManager %@ setCloudDatas\\\"\"", (uint8_t *)&buf, 0xCu);

      }
    }
    v22 = objc_alloc(MEMORY[0x24BDBB678]);
    objc_msgSend_entityName(WeakRetained, v23, v24, v25, v26);
    v27 = (void *)objc_claimAutoreleasedReturnValue();
    v123 = (id)objc_msgSend_initWithEntityName_(v22, v28, (uint64_t)v27, v29, v30);

    objc_msgSend_setReturnsObjectsAsFaults_(v123, v31, 0, v32, v33);
    objc_msgSend_setPredicate_(v123, v34, *(_QWORD *)(a1 + 32), v35, v36);
    v150 = 0;
    objc_msgSend_executeFetchRequest_error_(v124, v37, (uint64_t)v123, (uint64_t)&v150, v38);
    v39 = (void *)objc_claimAutoreleasedReturnValue();
    v40 = v150;
    objc_msgSend__logError_at_(WeakRetained, v41, (uint64_t)v40, (uint64_t)CFSTR("setCloudData(propertyIDKey) - fetch"), v42);
    v43 = (void *)MEMORY[0x24BDBCED8];
    v48 = objc_msgSend_count(v39, v44, v45, v46, v47);
    objc_msgSend_dictionaryWithCapacity_(v43, v49, v48, v50, v51);
    v52 = (void *)objc_claimAutoreleasedReturnValue();
    v148 = 0u;
    v149 = 0u;
    v146 = 0u;
    v147 = 0u;
    v53 = v39;
    v58 = objc_msgSend_countByEnumeratingWithState_objects_count_(v53, v54, (uint64_t)&v146, (uint64_t)v162, 16);
    if (v58)
    {
      v59 = *(_QWORD *)v147;
      do
      {
        for (i = 0; i != v58; ++i)
        {
          if (*(_QWORD *)v147 != v59)
            objc_enumerationMutation(v53);
          v61 = *(void **)(*((_QWORD *)&v146 + 1) + 8 * i);
          objc_msgSend_valueForKey_(v61, v55, *(_QWORD *)(a1 + 40), v56, v57);
          v62 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend_setObject_forKey_(v52, v63, (uint64_t)v61, (uint64_t)v62, v64);

        }
        v58 = objc_msgSend_countByEnumeratingWithState_objects_count_(v53, v55, (uint64_t)&v146, (uint64_t)v162, 16);
      }
      while (v58);
    }

    v142 = 0;
    v143 = &v142;
    v144 = 0x2020000000;
    v145 = 0;
    v138 = 0;
    v139 = &v138;
    v140 = 0x2020000000;
    v141 = 0;
    v137[0] = 0;
    v137[1] = v137;
    v137[2] = 0x2020000000;
    v137[3] = 0;
    *(_QWORD *)&buf = 0;
    *((_QWORD *)&buf + 1) = &buf;
    v158 = 0x3032000000;
    v159 = sub_227DC5054;
    v160 = sub_227DC5064;
    v161 = objc_alloc_init(MEMORY[0x24BDBCEB8]);
    v65 = *(void **)(a1 + 48);
    v127[0] = MEMORY[0x24BDAC760];
    v127[1] = 3221225472;
    v127[2] = sub_227DC506C;
    v127[3] = &unk_24F08BB78;
    v66 = v52;
    v128 = v66;
    v129 = WeakRetained;
    v67 = v124;
    v130 = v67;
    p_buf = &buf;
    v133 = &v138;
    v136 = *(_BYTE *)(a1 + 88);
    v131 = *(id *)(a1 + 56);
    v134 = &v142;
    v135 = v137;
    objc_msgSend_enumerateKeysAndObjectsUsingBlock_(v65, v68, (uint64_t)v127, v69, v70);
    if ((objc_msgSend_hasChanges(v67, v71, v72, v73, v74) & 1) != 0 || *((_BYTE *)v143 + 24))
    {
      objc_msgSend_mq_incrementCloudVersion(WeakRetained, v75, v76, v77, v78);
      v126 = v40;
      v82 = objc_msgSend_save_(v67, v79, (uint64_t)&v126, v80, v81);
      v83 = v126;

      objc_msgSend__logError_at_(WeakRetained, v84, (uint64_t)v83, (uint64_t)CFSTR("setCloudData(propertyIDKey) - save remaining"), v85);
      objc_msgSend_mq_signalTransactions(WeakRetained, v86, v87, v88, v89);
      BDSCloudKitLog();
      v90 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v90, OS_LOG_TYPE_DEBUG))
      {
        objc_msgSend_entityName(WeakRetained, v91, v92, v93, v94);
        v112 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend_persistentStoreCoordinator(v67, v113, v114, v115, v116);
        v117 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend_persistentStores(v117, v118, v119, v120, v121);
        v122 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)v151 = 138412802;
        v152 = v112;
        v153 = 2112;
        v154 = v122;
        v155 = 2112;
        v156 = v83;
        _os_log_debug_impl(&dword_227D4F000, v90, OS_LOG_TYPE_DEBUG, "BCCloudDataManager: %@ Save to storeID:%@ error:%@", v151, 0x20u);

      }
      if (v82)
      {
        objc_msgSend_monitor(*(void **)(a1 + 64), v75, v95, v77, v78);
        v97 = (void *)objc_claimAutoreleasedReturnValue();
        if (v97)
        {
          v98 = objc_msgSend_count(*(void **)(*((_QWORD *)&buf + 1) + 40), v75, v96, v77, v78) == 0;

          if (!v98)
          {
            objc_msgSend_monitor(*(void **)(a1 + 64), v75, v99, v77, v78);
            v100 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend_dataManager_didInsertNewRecords_(v100, v101, *(_QWORD *)(a1 + 64), *(_QWORD *)(*((_QWORD *)&buf + 1) + 40), v102);

          }
        }
      }
    }
    else
    {
      v83 = v40;
    }
    objc_msgSend_mq_sanitizeError_(WeakRetained, v75, (uint64_t)v83, v77, v78);
    v109 = (void *)objc_claimAutoreleasedReturnValue();

    v110 = _Block_copy(*(const void **)(a1 + 72));
    v111 = v110;
    if (v110)
      (*((void (**)(void *, _QWORD, _QWORD, void *))v110 + 2))(v110, *((unsigned __int8 *)v139 + 24), *((unsigned __int8 *)v143 + 24), v109);

    _Block_object_dispose(&buf, 8);
    _Block_object_dispose(v137, 8);
    _Block_object_dispose(&v138, 8);
    _Block_object_dispose(&v142, 8);

    v107 = v123;
  }
  else
  {
    BDSCloudKitLog();
    v103 = (char *)objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled((os_log_t)v103, OS_LOG_TYPE_ERROR))
      sub_227E5EA64(WeakRetained, v103, v104, v105, v106);

    v107 = _Block_copy(*(const void **)(a1 + 72));
    v108 = v107;
    if (v107)
    {
      (*((void (**)(void *, _QWORD, _QWORD, _QWORD))v107 + 2))(v107, 0, 0, 0);
      v107 = v108;
    }
  }

}

void sub_227DC4FF8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31,uint64_t a32,uint64_t a33,uint64_t a34,char a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,char a53)
{
  _Block_object_dispose(&a53, 8);
  _Block_object_dispose(&a27, 8);
  _Block_object_dispose(&a31, 8);
  _Block_object_dispose(&a35, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_227DC5054(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_227DC5064(uint64_t a1)
{

}

void sub_227DC506C(uint64_t a1, uint64_t a2, void *a3)
{
  id v5;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  const char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  int v15;
  void *v16;
  void *v17;
  const char *v18;
  uint64_t v19;
  const char *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  const char *v24;
  uint64_t v25;
  uint64_t v26;
  const char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  const char *v32;
  uint64_t v33;
  uint64_t v34;
  const char *v35;
  uint64_t v36;
  uint64_t isEqualExceptForDate_ignoringEmptySalt;
  NSObject *v38;
  uint64_t v39;
  uint64_t v40;
  const char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  const char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  const char *hasChanges;
  NSObject *v50;
  uint64_t v51;
  uint64_t v52;
  NSObject *v53;
  const char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void *v58;
  const char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void *v63;
  const char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  const char *v69;
  uint64_t v70;
  uint64_t v71;
  void *v72;
  id v73;
  const char *v74;
  uint64_t v75;
  NSObject *v76;
  const char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  void *v81;
  const char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  void *v86;
  const char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  void *v91;
  id v92;
  uint8_t buf[4];
  void *v94;
  __int16 v95;
  uint64_t v96;
  __int16 v97;
  id v98;
  __int16 v99;
  int v100;
  __int16 v101;
  void *v102;
  uint64_t v103;

  v103 = *MEMORY[0x24BDAC8D0];
  v5 = a3;
  objc_msgSend_objectForKey_(*(void **)(a1 + 32), v6, a2, v7, v8);
  v9 = objc_claimAutoreleasedReturnValue();
  if (v9)
  {
    v14 = (void *)v9;
    v15 = 0;
  }
  else
  {
    v16 = (void *)MEMORY[0x24BDBB658];
    objc_msgSend_entityName(*(void **)(a1 + 40), v10, v11, v12, v13);
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_insertNewObjectForEntityForName_inManagedObjectContext_(v16, v18, (uint64_t)v17, *(_QWORD *)(a1 + 48), v19);
    v14 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend_addObject_(*(void **)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 40), v20, (uint64_t)v14, v21, v22);
    v15 = 1;
  }
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 72) + 8) + 24) |= v14 != 0;
  objc_msgSend_privacyDelegate(*(void **)(a1 + 40), v10, v11, v12, v13);
  v23 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_setPrivacyDelegate_(v14, v24, (uint64_t)v23, v25, v26);

  objc_msgSend_privacyDelegate(*(void **)(a1 + 40), v27, v28, v29, v30);
  v31 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_setPrivacyDelegate_(v5, v32, (uint64_t)v31, v33, v34);

  isEqualExceptForDate_ignoringEmptySalt = objc_msgSend_isEqualExceptForDate_ignoringEmptySalt_(v14, v35, (uint64_t)v5, *(unsigned __int8 *)(a1 + 96), v36);
  BDSCloudKitLog();
  v38 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v38, OS_LOG_TYPE_DEBUG))
    sub_227E5EB6C(v14, (const char *)isEqualExceptForDate_ignoringEmptySalt, (uint64_t)v38, v39, v40);

  if ((isEqualExceptForDate_ignoringEmptySalt & 1) == 0)
  {
    objc_msgSend_configureFromCloudData_withMergers_(v14, v41, (uint64_t)v5, *(_QWORD *)(a1 + 56), v44);
    hasChanges = (const char *)objc_msgSend_hasChanges(v14, v45, v46, v47, v48);
    BDSCloudKitLog();
    v50 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v50, OS_LOG_TYPE_DEBUG))
      sub_227E5EAE8(v14, hasChanges, (uint64_t)v50, v51, v52);

    if ((_DWORD)hasChanges)
    {
      BDSCloudKitLog();
      v53 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v53, OS_LOG_TYPE_DEFAULT))
      {
        objc_msgSend_entityName(*(void **)(a1 + 40), v54, v55, v56, v57);
        v58 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend_identifier(v14, v59, v60, v61, v62);
        v63 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138544386;
        v94 = v58;
        v95 = 2160;
        v96 = 1752392040;
        v97 = 2112;
        v98 = v63;
        v99 = 1024;
        v100 = v15;
        v101 = 2112;
        v102 = v14;
        _os_log_impl(&dword_227D4F000, v53, OS_LOG_TYPE_DEFAULT, "BCCloudDataManager #recordChange %{public}@ setCloudData for id:%{mask.hash}@ isNew:%d data:%@", buf, 0x30u);

      }
      objc_msgSend_incrementEditGeneration(v14, v64, v65, v66, v67);
      *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 80) + 8) + 24) = 1;
      ++*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 88) + 8) + 24);
    }
  }
  v68 = *(_QWORD *)(*(_QWORD *)(a1 + 88) + 8);
  if (*(_QWORD *)(v68 + 24) >= 0x21uLL)
  {
    *(_QWORD *)(v68 + 24) = 0;
    if (objc_msgSend_hasChanges(*(void **)(a1 + 48), v41, v42, v43, v44))
    {
      v72 = *(void **)(a1 + 48);
      v92 = 0;
      objc_msgSend_save_(v72, v69, (uint64_t)&v92, v70, v71);
      v73 = v92;
      objc_msgSend__logError_at_(*(void **)(a1 + 40), v74, (uint64_t)v73, (uint64_t)CFSTR("setCloudData(propertyIDKey) - save batch"), v75);
      BDSCloudKitLog();
      v76 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v76, OS_LOG_TYPE_DEBUG))
      {
        objc_msgSend_entityName(*(void **)(a1 + 40), v77, v78, v79, v80);
        v81 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend_persistentStoreCoordinator(*(void **)(a1 + 48), v82, v83, v84, v85);
        v86 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend_persistentStores(v86, v87, v88, v89, v90);
        v91 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138412802;
        v94 = v81;
        v95 = 2112;
        v96 = (uint64_t)v91;
        v97 = 2112;
        v98 = v73;
        _os_log_debug_impl(&dword_227D4F000, v76, OS_LOG_TYPE_DEBUG, "BCCloudDataManager: %@ Batch save to storeID:%@ with error:%@", buf, 0x20u);

      }
    }
  }

}

void sub_227DC5574(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_227DC5598(uint64_t a1)
{
  NSObject *v2;
  void *v3;
  void *v4;

  BDSCloudKitLog();
  v2 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_ERROR))
    sub_227E5EA38();

  v3 = _Block_copy(*(const void **)(a1 + 32));
  v4 = v3;
  if (v3)
    (*((void (**)(void *, _QWORD, _QWORD))v3 + 2))(v3, 0, 0);

}

void sub_227DC5604(uint64_t a1)
{
  id WeakRetained;
  const char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  const char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  const char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  NSObject *v18;
  const char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  const char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  id v29;
  const char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  const char *v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  const char *v39;
  uint64_t v40;
  uint64_t v41;
  const char *v42;
  uint64_t v43;
  uint64_t v44;
  const char *v45;
  uint64_t v46;
  void *v47;
  id v48;
  const char *v49;
  uint64_t v50;
  const char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  id v57;
  const char *v58;
  uint64_t v59;
  const char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t i;
  const char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  const char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  const char *v74;
  uint64_t v75;
  uint64_t v76;
  id v77;
  const char *v78;
  uint64_t v79;
  const char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  void *v84;
  void *v85;
  NSObject *v86;
  uint64_t v87;
  uint64_t v88;
  void *v89;
  void *v90;
  void *v91;
  uint64_t v92;
  id v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  id v98;
  uint8_t v99[128];
  uint8_t buf[4];
  void *v101;
  __int16 v102;
  void *v103;
  uint64_t v104;

  v104 = *MEMORY[0x24BDAC8D0];
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  objc_msgSend_moc(WeakRetained, v3, v4, v5, v6);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  if (v11)
  {
    objc_msgSend_shared(MEMORY[0x24BE0FC08], v7, v8, v9, v10);
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    v17 = objc_msgSend_verboseLoggingEnabled(v12, v13, v14, v15, v16);

    if (v17)
    {
      BDSCloudKitDevelopmentLog();
      v18 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT))
      {
        objc_msgSend_entityName(WeakRetained, v19, v20, v21, v22);
        v23 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend_debugDescription(*(void **)(a1 + 32), v24, v25, v26, v27);
        v28 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138543618;
        v101 = v23;
        v102 = 2114;
        v103 = v28;
        _os_log_impl(&dword_227D4F000, v18, OS_LOG_TYPE_DEFAULT, "\"\\\"BCCloudDataManager %{public}@ removeCloudDataForPredicate:%{public}@\\\"\"", buf, 0x16u);

      }
    }
    v29 = objc_alloc(MEMORY[0x24BDBB678]);
    objc_msgSend_entityName(WeakRetained, v30, v31, v32, v33);
    v34 = (void *)objc_claimAutoreleasedReturnValue();
    v38 = (void *)objc_msgSend_initWithEntityName_(v29, v35, (uint64_t)v34, v36, v37);

    objc_msgSend_setFetchBatchSize_(v38, v39, 64, v40, v41);
    objc_msgSend_setPredicate_(v38, v42, *(_QWORD *)(a1 + 32), v43, v44);
    v98 = 0;
    objc_msgSend_executeFetchRequest_error_(v11, v45, (uint64_t)v38, (uint64_t)&v98, v46);
    v47 = (void *)objc_claimAutoreleasedReturnValue();
    v48 = v98;
    objc_msgSend__logError_at_(WeakRetained, v49, (uint64_t)v48, (uint64_t)CFSTR("removeCloudData - fetch"), v50);
    v55 = objc_msgSend_count(v47, v51, v52, v53, v54);
    v56 = v55;
    if (v55)
    {
      v92 = v55;
      v96 = 0u;
      v97 = 0u;
      v94 = 0u;
      v95 = 0u;
      v57 = v47;
      v59 = objc_msgSend_countByEnumeratingWithState_objects_count_(v57, v58, (uint64_t)&v94, (uint64_t)v99, 16);
      if (v59)
      {
        v63 = v59;
        v64 = *(_QWORD *)v95;
        do
        {
          for (i = 0; i != v63; ++i)
          {
            if (*(_QWORD *)v95 != v64)
              objc_enumerationMutation(v57);
            objc_msgSend_deleteObject_(v11, v60, *(_QWORD *)(*((_QWORD *)&v94 + 1) + 8 * i), v61, v62, v92);
          }
          v63 = objc_msgSend_countByEnumeratingWithState_objects_count_(v57, v60, (uint64_t)&v94, (uint64_t)v99, 16);
        }
        while (v63);
      }

      if (objc_msgSend_hasChanges(v11, v66, v67, v68, v69))
      {
        objc_msgSend_mq_incrementCloudVersion(WeakRetained, v70, v71, v72, v73);
        v93 = v48;
        objc_msgSend_save_(v11, v74, (uint64_t)&v93, v75, v76);
        v77 = v93;

        objc_msgSend__logError_at_(WeakRetained, v78, (uint64_t)v77, (uint64_t)CFSTR("removeCloudData - save"), v79);
        objc_msgSend_mq_signalTransactions(WeakRetained, v80, v81, v82, v83);
        v48 = v77;
      }
      v56 = v92;
    }
    else
    {
      BDSCloudKitLog();
      v86 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v86, OS_LOG_TYPE_ERROR))
        sub_227E5EBF0(WeakRetained, (const char *)(a1 + 32), v86, v87, v88);

    }
    objc_msgSend_mq_sanitizeError_(WeakRetained, v70, (uint64_t)v48, v72, v73, v92);
    v89 = (void *)objc_claimAutoreleasedReturnValue();

    v90 = _Block_copy(*(const void **)(a1 + 40));
    v91 = v90;
    if (v90)
      (*((void (**)(void *, BOOL, void *))v90 + 2))(v90, v56 != 0, v89);

  }
  else
  {
    v84 = _Block_copy(*(const void **)(a1 + 40));
    v85 = v84;
    if (v84)
      (*((void (**)(void *, _QWORD, _QWORD))v84 + 2))(v84, 0, 0);

  }
}

void sub_227DC5B1C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
  id *v19;

  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_227DC5B40(uint64_t a1)
{
  NSObject *v2;
  void *v3;
  void *v4;

  BDSCloudKitLog();
  v2 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_ERROR))
    sub_227E5EA38();

  v3 = _Block_copy(*(const void **)(a1 + 32));
  v4 = v3;
  if (v3)
    (*((void (**)(void *, _QWORD, _QWORD))v3 + 2))(v3, 0, 0);

}

void sub_227DC5BAC(uint64_t a1)
{
  id WeakRetained;
  const char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  const char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  const char *v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  const char *v18;
  uint64_t v19;
  uint64_t v20;
  const char *v21;
  uint64_t v22;
  uint64_t v23;
  const char *v24;
  uint64_t v25;
  void *v26;
  id v27;
  const char *v28;
  uint64_t v29;
  const char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  const char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  const char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  NSObject *v44;
  id v45;
  const char *v46;
  uint64_t v47;
  uint64_t v48;
  const char *v49;
  uint64_t v50;
  uint64_t v51;
  id v52;
  const char *v53;
  uint64_t v54;
  const char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  const char *v59;
  uint64_t v60;
  uint64_t v61;
  void *v62;
  void *v63;
  NSObject *v64;
  const char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void *v69;
  const char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  void *v74;
  void *v75;
  void *v76;
  void *v77;
  id v78;
  _QWORD v79[4];
  id v80;
  id v81;
  id v82;
  id v83;
  _BYTE *v84;
  id v85;
  _BYTE buf[24];
  uint64_t v87;
  uint64_t v88;

  v88 = *MEMORY[0x24BDAC8D0];
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 64));
  objc_msgSend_moc(WeakRetained, v3, v4, v5, v6);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  if (v7)
  {
    v8 = objc_alloc(MEMORY[0x24BDBB678]);
    objc_msgSend_entityName(WeakRetained, v9, v10, v11, v12);
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    v17 = (void *)objc_msgSend_initWithEntityName_(v8, v14, (uint64_t)v13, v15, v16);

    objc_msgSend_setFetchBatchSize_(v17, v18, 64, v19, v20);
    objc_msgSend_setPredicate_(v17, v21, *(_QWORD *)(a1 + 32), v22, v23);
    v85 = 0;
    objc_msgSend_executeFetchRequest_error_(v7, v24, (uint64_t)v17, (uint64_t)&v85, v25);
    v26 = (void *)objc_claimAutoreleasedReturnValue();
    v27 = v85;
    objc_msgSend__logError_at_(WeakRetained, v28, (uint64_t)v27, (uint64_t)CFSTR("updateSyncGeneration - fetch"), v29);
    v38 = objc_msgSend_count(v26, v30, v31, v32, v33);
    if (v38)
    {
      v39 = objc_msgSend_count(v26, v34, v35, v36, v37);
      if (v39 != objc_msgSend_count(*(void **)(a1 + 40), v40, v41, v42, v43))
      {
        BDSCloudKitLog();
        v44 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v44, OS_LOG_TYPE_ERROR))
          sub_227E5EC9C();

      }
      *(_QWORD *)buf = 0;
      *(_QWORD *)&buf[8] = buf;
      *(_QWORD *)&buf[16] = 0x2020000000;
      v87 = 0;
      v79[0] = MEMORY[0x24BDAC760];
      v79[1] = 3221225472;
      v79[2] = sub_227DC5F18;
      v79[3] = &unk_24F08BBC8;
      v80 = *(id *)(a1 + 48);
      v81 = *(id *)(a1 + 40);
      v82 = WeakRetained;
      v84 = buf;
      v45 = v7;
      v83 = v45;
      objc_msgSend_enumerateObjectsUsingBlock_(v26, v46, (uint64_t)v79, v47, v48);
      v78 = v27;
      objc_msgSend_save_(v45, v49, (uint64_t)&v78, v50, v51);
      v52 = v78;

      objc_msgSend__logError_at_(WeakRetained, v53, (uint64_t)v52, (uint64_t)CFSTR("updateSyncGeneration - save remaining"), v54);
      objc_msgSend_mq_signalTransactions(WeakRetained, v55, v56, v57, v58);

      _Block_object_dispose(buf, 8);
    }
    else
    {
      BDSCloudKitLog();
      v64 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v64, OS_LOG_TYPE_INFO))
      {
        objc_msgSend_entityName(WeakRetained, v65, v66, v67, v68);
        v69 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend_debugDescription(*(void **)(a1 + 40), v70, v71, v72, v73);
        v74 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138543618;
        *(_QWORD *)&buf[4] = v69;
        *(_WORD *)&buf[12] = 2112;
        *(_QWORD *)&buf[14] = v74;
        _os_log_impl(&dword_227D4F000, v64, OS_LOG_TYPE_INFO, "Did not find %{public}@ to update sync gen from cloudData:%@", buf, 0x16u);

      }
      v52 = v27;
    }
    objc_msgSend_mq_sanitizeError_(WeakRetained, v59, (uint64_t)v52, v60, v61);
    v75 = (void *)objc_claimAutoreleasedReturnValue();

    v76 = _Block_copy(*(const void **)(a1 + 56));
    v77 = v76;
    if (v76)
      (*((void (**)(void *, BOOL, void *))v76 + 2))(v76, v38 != 0, v75);

  }
  else
  {
    v62 = _Block_copy(*(const void **)(a1 + 56));
    v63 = v62;
    if (v62)
      (*((void (**)(void *, _QWORD, _QWORD))v62 + 2))(v62, 0, 0);

  }
}

void sub_227DC5EF8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_227DC5F18(uint64_t a1, void *a2)
{
  id v3;
  const char *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  const char *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  const char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  const char *v17;
  uint64_t v18;
  uint64_t v19;
  const char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  const char *v25;
  uint64_t v26;
  uint64_t v27;
  const char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  const char *v33;
  uint64_t v34;
  uint64_t v35;
  const char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  const char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  const char *v46;
  uint64_t v47;
  uint64_t v48;
  NSObject *v49;
  const char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void *v54;
  const char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  const char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  const char *v66;
  uint64_t v67;
  uint64_t v68;
  void *v69;
  id v70;
  const char *v71;
  uint64_t v72;
  id v73;
  uint8_t buf[4];
  void *v75;
  __int16 v76;
  void *v77;
  uint64_t v78;

  v78 = *MEMORY[0x24BDAC8D0];
  v3 = a2;
  objc_msgSend_valueForKey_(v3, v4, *(_QWORD *)(a1 + 32), v5, v6);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_objectForKey_(*(void **)(a1 + 40), v8, (uint64_t)v7, v9, v10);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_privacyDelegate(*(void **)(a1 + 48), v12, v13, v14, v15);
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_setPrivacyDelegate_(v3, v17, (uint64_t)v16, v18, v19);

  v24 = objc_msgSend_editGeneration(v11, v20, v21, v22, v23);
  objc_msgSend_setSyncGeneration_(v3, v25, v24, v26, v27);
  objc_msgSend_systemFields(v11, v28, v29, v30, v31);
  v32 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_setSystemFields_(v3, v33, (uint64_t)v32, v34, v35);

  objc_msgSend_systemFields(v11, v36, v37, v38, v39);
  v40 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_modificationDate(v40, v41, v42, v43, v44);
  v45 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_setModificationDate_(v3, v46, (uint64_t)v45, v47, v48);

  BDSCloudKitLog();
  v49 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v49, OS_LOG_TYPE_DEFAULT))
  {
    objc_msgSend_entityName(*(void **)(a1 + 48), v50, v51, v52, v53);
    v54 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_debugDescription(v3, v55, v56, v57, v58);
    v59 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 138543618;
    v75 = v54;
    v76 = 2112;
    v77 = v59;
    _os_log_impl(&dword_227D4F000, v49, OS_LOG_TYPE_DEFAULT, "BCCloudDataManager #recordChange %{public}@ updateSyncGeneration %@", buf, 0x16u);

  }
  v64 = *(_QWORD *)(*(_QWORD *)(a1 + 64) + 8);
  v65 = *(_QWORD *)(v64 + 24) + 1;
  *(_QWORD *)(v64 + 24) = v65;
  if (v65 >= 0x21)
  {
    *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 24) = 0;
    if (objc_msgSend_hasChanges(*(void **)(a1 + 56), v60, v61, v62, v63))
    {
      v69 = *(void **)(a1 + 56);
      v73 = 0;
      objc_msgSend_save_(v69, v66, (uint64_t)&v73, v67, v68);
      v70 = v73;
      objc_msgSend__logError_at_(*(void **)(a1 + 48), v71, (uint64_t)v70, (uint64_t)CFSTR("updateSyncGeneration - save batch"), v72);

    }
  }

}

void sub_227DC6284(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_227DC62A8(uint64_t a1)
{
  NSObject *v2;
  void *v3;
  void *v4;

  BDSCloudKitLog();
  v2 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_ERROR))
    sub_227E5EA38();

  v3 = _Block_copy(*(const void **)(a1 + 32));
  v4 = v3;
  if (v3)
    (*((void (**)(void *, _QWORD, _QWORD))v3 + 2))(v3, 0, 0);

}

void sub_227DC6314(uint64_t a1)
{
  uint64_t v1;
  id WeakRetained;
  const char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  const char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  const char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  NSObject *v18;
  const char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  const char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  id v29;
  const char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  const char *v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  const char *v39;
  uint64_t v40;
  uint64_t v41;
  const char *v42;
  uint64_t v43;
  uint64_t v44;
  const char *v45;
  uint64_t v46;
  void *v47;
  id v48;
  const char *v49;
  uint64_t v50;
  const char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  const char *v56;
  uint64_t v57;
  id v58;
  const char *v59;
  uint64_t v60;
  const char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t i;
  void *v69;
  void *v70;
  const char *v71;
  uint64_t v72;
  uint64_t v73;
  const char *v74;
  uint64_t v75;
  const char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  NSObject *v80;
  const char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  void *v85;
  const char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  const char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  const char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  const char *v98;
  uint64_t v99;
  uint64_t v100;
  const char *v101;
  uint64_t v102;
  const char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  void *v107;
  void *v108;
  NSObject *v109;
  const char *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  void *v114;
  const char *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  void *v119;
  void *v120;
  void *v121;
  void *v122;
  void *v123;
  uint64_t v124;
  void *v125;
  void *v126;
  uint64_t v127;
  void *v128;
  id v129;
  __int128 v130;
  __int128 v131;
  __int128 v132;
  __int128 v133;
  id v134;
  uint8_t v135[128];
  uint8_t buf[4];
  void *v137;
  __int16 v138;
  void *v139;
  uint64_t v140;

  v1 = a1;
  v140 = *MEMORY[0x24BDAC8D0];
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  objc_msgSend_moc(WeakRetained, v3, v4, v5, v6);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  if (v11)
  {
    objc_msgSend_shared(MEMORY[0x24BE0FC08], v7, v8, v9, v10);
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    v17 = objc_msgSend_verboseLoggingEnabled(v12, v13, v14, v15, v16);

    if (v17)
    {
      BDSCloudKitDevelopmentLog();
      v18 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT))
      {
        objc_msgSend_entityName(WeakRetained, v19, v20, v21, v22);
        v23 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend_debugDescription(*(void **)(v1 + 32), v24, v25, v26, v27);
        v28 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138543618;
        v137 = v23;
        v138 = 2112;
        v139 = v28;
        _os_log_impl(&dword_227D4F000, v18, OS_LOG_TYPE_DEFAULT, "\"\\\"BCCloudDataManager %{public}@ deleteCloudDataForPredicate %@\\\"\"", buf, 0x16u);

      }
    }
    v29 = objc_alloc(MEMORY[0x24BDBB678]);
    objc_msgSend_entityName(WeakRetained, v30, v31, v32, v33);
    v34 = (void *)objc_claimAutoreleasedReturnValue();
    v38 = (void *)objc_msgSend_initWithEntityName_(v29, v35, (uint64_t)v34, v36, v37);

    objc_msgSend_setFetchBatchSize_(v38, v39, 64, v40, v41);
    objc_msgSend_setPredicate_(v38, v42, *(_QWORD *)(v1 + 32), v43, v44);
    v134 = 0;
    objc_msgSend_executeFetchRequest_error_(v11, v45, (uint64_t)v38, (uint64_t)&v134, v46);
    v47 = (void *)objc_claimAutoreleasedReturnValue();
    v48 = v134;
    objc_msgSend__logError_at_(WeakRetained, v49, (uint64_t)v48, (uint64_t)CFSTR("deleteCloudData - fetch"), v50);
    v55 = objc_msgSend_count(v47, v51, v52, v53, v54);
    v57 = v55;
    if (v55)
    {
      v123 = v48;
      v124 = v55;
      v126 = v38;
      v127 = v1;
      v128 = v11;
      v132 = 0u;
      v133 = 0u;
      v130 = 0u;
      v131 = 0u;
      v125 = v47;
      v58 = v47;
      v60 = objc_msgSend_countByEnumeratingWithState_objects_count_(v58, v59, (uint64_t)&v130, (uint64_t)v135, 16);
      if (v60)
      {
        v65 = v60;
        v66 = *(_QWORD *)v131;
        v67 = MEMORY[0x24BDBD1C8];
        do
        {
          for (i = 0; i != v65; ++i)
          {
            if (*(_QWORD *)v131 != v66)
              objc_enumerationMutation(v58);
            v69 = *(void **)(*((_QWORD *)&v130 + 1) + 8 * i);
            objc_msgSend_privacyDelegate(WeakRetained, v61, v62, v63, v64, v123);
            v70 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend_setPrivacyDelegate_(v69, v71, (uint64_t)v70, v72, v73);

            objc_msgSend_setDifferentNumber_forKey_(v69, v74, v67, (uint64_t)CFSTR("deletedFlag"), v75);
            if (objc_msgSend_hasChanges(v69, v76, v77, v78, v79))
            {
              BDSCloudKitLog();
              v80 = objc_claimAutoreleasedReturnValue();
              if (os_log_type_enabled(v80, OS_LOG_TYPE_DEFAULT))
              {
                objc_msgSend_entityName(WeakRetained, v81, v82, v83, v84);
                v85 = (void *)objc_claimAutoreleasedReturnValue();
                *(_DWORD *)buf = 138543618;
                v137 = v85;
                v138 = 2112;
                v139 = v69;
                _os_log_impl(&dword_227D4F000, v80, OS_LOG_TYPE_DEFAULT, "BCCloudDataManager #recordChange %{public}@ deleteCloudDataForPredicate data:%@", buf, 0x16u);

              }
              objc_msgSend_incrementEditGeneration(v69, v86, v87, v88, v89);
            }
          }
          v65 = objc_msgSend_countByEnumeratingWithState_objects_count_(v58, v61, (uint64_t)&v130, (uint64_t)v135, 16);
        }
        while (v65);
      }

      v11 = v128;
      if (objc_msgSend_hasChanges(v128, v90, v91, v92, v93))
      {
        objc_msgSend_mq_incrementCloudVersion(WeakRetained, v94, v95, v96, v97);
        v129 = v123;
        objc_msgSend_save_(v128, v98, (uint64_t)&v129, v99, v100);
        v48 = v129;

        objc_msgSend__logError_at_(WeakRetained, v101, (uint64_t)v48, (uint64_t)CFSTR("deleteCloudData - save"), v102);
        objc_msgSend_mq_signalTransactions(WeakRetained, v103, v104, v105, v106);
        v38 = v126;
        v1 = v127;
        v57 = v124;
        v47 = v125;
      }
      else
      {
        v38 = v126;
        v1 = v127;
        v57 = v124;
        v47 = v125;
        v48 = v123;
      }
    }
    else
    {
      if (!v48)
      {
        objc_msgSend_errorWithDomain_code_userInfo_(MEMORY[0x24BDD1540], v56, *MEMORY[0x24BDD0B88], 4, 0);
        v48 = (id)objc_claimAutoreleasedReturnValue();
      }
      BDSCloudKitLog();
      v109 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v109, OS_LOG_TYPE_INFO))
      {
        objc_msgSend_entityName(WeakRetained, v110, v111, v112, v113);
        v114 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend_debugDescription(*(void **)(v1 + 32), v115, v116, v117, v118);
        v119 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138543618;
        v137 = v114;
        v138 = 2114;
        v139 = v119;
        _os_log_impl(&dword_227D4F000, v109, OS_LOG_TYPE_INFO, "Did not find %{public}@ to delete for predicate %{public}@", buf, 0x16u);

      }
    }
    objc_msgSend_mq_sanitizeError_(WeakRetained, v94, (uint64_t)v48, v96, v97, v123);
    v120 = (void *)objc_claimAutoreleasedReturnValue();

    v121 = _Block_copy(*(const void **)(v1 + 40));
    v122 = v121;
    if (v121)
      (*((void (**)(void *, BOOL, void *))v121 + 2))(v121, v57 != 0, v120);

  }
  else
  {
    v107 = _Block_copy(*(const void **)(v1 + 40));
    v108 = v107;
    if (v107)
      (*((void (**)(void *, _QWORD, _QWORD))v107 + 2))(v107, 0, 0);

  }
}

void sub_227DC6954(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_227DC6978(uint64_t a1)
{
  NSObject *v2;
  void *v3;
  void *v4;

  BDSCloudKitLog();
  v2 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_ERROR))
    sub_227E5EA38();

  v3 = _Block_copy(*(const void **)(a1 + 32));
  v4 = v3;
  if (v3)
    (*((void (**)(void *, _QWORD, _QWORD))v3 + 2))(v3, 0, 0);

}

void sub_227DC69E4(uint64_t a1)
{
  id WeakRetained;
  const char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  const char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  const char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  NSObject *v18;
  const char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  id v24;
  const char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  const char *v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  const char *v34;
  uint64_t v35;
  uint64_t v36;
  const char *v37;
  uint64_t v38;
  id v39;
  const char *v40;
  uint64_t v41;
  const char *v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  id v46;
  uint8_t buf[4];
  void *v48;
  uint64_t v49;

  v49 = *MEMORY[0x24BDAC8D0];
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  objc_msgSend_moc(WeakRetained, v3, v4, v5, v6);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  if (v11)
  {
    objc_msgSend_shared(MEMORY[0x24BE0FC08], v7, v8, v9, v10);
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    v17 = objc_msgSend_verboseLoggingEnabled(v12, v13, v14, v15, v16);

    if (v17)
    {
      BDSCloudKitDevelopmentLog();
      v18 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT))
      {
        objc_msgSend_debugDescription(*(void **)(a1 + 32), v19, v20, v21, v22);
        v23 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138543362;
        v48 = v23;
        _os_log_impl(&dword_227D4F000, v18, OS_LOG_TYPE_DEFAULT, "\"\\\"BCCloudDataManager countWithPredicate:%{public}@\\\"\"", buf, 0xCu);

      }
    }
    v24 = objc_alloc(MEMORY[0x24BDBB678]);
    objc_msgSend_entityName(WeakRetained, v25, v26, v27, v28);
    v29 = (void *)objc_claimAutoreleasedReturnValue();
    v33 = (void *)objc_msgSend_initWithEntityName_(v24, v30, (uint64_t)v29, v31, v32);

    objc_msgSend_setPredicate_(v33, v34, *(_QWORD *)(a1 + 32), v35, v36);
    v46 = 0;
    objc_msgSend_countForFetchRequest_error_(v11, v37, (uint64_t)v33, (uint64_t)&v46, v38);
    v39 = v46;
    objc_msgSend__logError_at_(WeakRetained, v40, (uint64_t)v39, (uint64_t)CFSTR("count"), v41);
    objc_msgSend_mq_sanitizeError_(WeakRetained, v42, (uint64_t)v39, v43, v44);
    v45 = (void *)objc_claimAutoreleasedReturnValue();

    (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
  }
  else
  {
    (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
  }

}

void sub_227DC6CA0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_227DC6CB8(uint64_t a1, void *a2)
{
  objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40), a2);
}

void sub_227DC6CC8(uint64_t a1)
{
  NSObject *v2;
  void *v3;
  void *v4;

  BDSCloudKitLog();
  v2 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_ERROR))
    sub_227E5EA38();

  v3 = _Block_copy(*(const void **)(a1 + 32));
  v4 = v3;
  if (v3)
    (*((void (**)(void *, _QWORD, _QWORD))v3 + 2))(v3, 0, 0);

}

void sub_227DC6D34(uint64_t a1)
{
  id WeakRetained;
  const char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  const char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  const char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  NSObject *v18;
  const char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  id v24;
  const char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  const char *v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  const char *v34;
  uint64_t v35;
  uint64_t v36;
  const char *v37;
  uint64_t v38;
  uint64_t v39;
  const char *v40;
  uint64_t v41;
  uint64_t v42;
  const char *v43;
  uint64_t v44;
  uint64_t v45;
  const char *v46;
  uint64_t v47;
  void *v48;
  id v49;
  const char *v50;
  uint64_t v51;
  const char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  const char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void *v61;
  const char *v62;
  uint64_t v63;
  uint64_t v64;
  const char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void *v69;
  const char *v70;
  uint64_t v71;
  uint64_t v72;
  const char *v73;
  uint64_t v74;
  uint64_t v75;
  void *v76;
  const char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  const char *v81;
  uint64_t v82;
  uint64_t v83;
  id v84;
  const char *v85;
  uint64_t v86;
  id v87;
  id v88;
  uint8_t buf[4];
  void *v90;
  uint64_t v91;

  v91 = *MEMORY[0x24BDAC8D0];
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  objc_msgSend_moc(WeakRetained, v3, v4, v5, v6);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  if (v11)
  {
    objc_msgSend_shared(MEMORY[0x24BE0FC08], v7, v8, v9, v10);
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    v17 = objc_msgSend_verboseLoggingEnabled(v12, v13, v14, v15, v16);

    if (v17)
    {
      BDSCloudKitDevelopmentLog();
      v18 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT))
      {
        objc_msgSend_debugDescription(*(void **)(a1 + 32), v19, v20, v21, v22);
        v23 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138543362;
        v90 = v23;
        _os_log_impl(&dword_227D4F000, v18, OS_LOG_TYPE_DEFAULT, "\"\\\"BCCloudDataManager cloudDataWithPredicate:%{public}@\\\"\"", buf, 0xCu);

      }
    }
    v24 = objc_alloc(MEMORY[0x24BDBB678]);
    objc_msgSend_entityName(WeakRetained, v25, v26, v27, v28);
    v29 = (void *)objc_claimAutoreleasedReturnValue();
    v33 = (void *)objc_msgSend_initWithEntityName_(v24, v30, (uint64_t)v29, v31, v32);

    objc_msgSend_setReturnsObjectsAsFaults_(v33, v34, 0, v35, v36);
    objc_msgSend_setFetchLimit_(v33, v37, 1, v38, v39);
    objc_msgSend_setPredicate_(v33, v40, *(_QWORD *)(a1 + 32), v41, v42);
    objc_msgSend_setSortDescriptors_(v33, v43, *(_QWORD *)(a1 + 40), v44, v45);
    v88 = 0;
    objc_msgSend_executeFetchRequest_error_(v11, v46, (uint64_t)v33, (uint64_t)&v88, v47);
    v48 = (void *)objc_claimAutoreleasedReturnValue();
    v49 = v88;
    objc_msgSend__logError_at_(WeakRetained, v50, (uint64_t)v49, (uint64_t)CFSTR("mutableCloudData - fetch"), v51);
    objc_msgSend_privacyDelegate(WeakRetained, v52, v53, v54, v55);
    v56 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_firstObject(v48, v57, v58, v59, v60);
    v61 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_setPrivacyDelegate_(v61, v62, (uint64_t)v56, v63, v64);
    v69 = (void *)objc_msgSend_mutableCopy(v61, v65, v66, v67, v68);
    objc_msgSend_setPrivacyDelegate_(v69, v70, (uint64_t)v56, v71, v72);
    objc_msgSend_mq_sanitizeError_(WeakRetained, v73, (uint64_t)v49, v74, v75);
    v76 = (void *)objc_claimAutoreleasedReturnValue();

    (*(void (**)(void))(*(_QWORD *)(a1 + 48) + 16))();
    if (objc_msgSend_hasChanges(v11, v77, v78, v79, v80))
    {
      v87 = v76;
      objc_msgSend_save_(v11, v81, (uint64_t)&v87, v82, v83);
      v84 = v87;

      objc_msgSend__logError_at_(WeakRetained, v85, (uint64_t)v84, (uint64_t)CFSTR("mutableCloudData - save"), v86);
      v76 = v84;
    }
    objc_msgSend_refreshObject_mergeChanges_(v11, v81, (uint64_t)v61, 0, v83);

  }
  else
  {
    (*(void (**)(void))(*(_QWORD *)(a1 + 48) + 16))();
  }

}

void sub_227DC71B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
  id *v19;

  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_227DC71D8(uint64_t a1)
{
  NSObject *v2;
  void *v3;
  void *v4;

  BDSCloudKitLog();
  v2 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_ERROR))
    sub_227E5EA38();

  v3 = _Block_copy(*(const void **)(a1 + 32));
  v4 = v3;
  if (v3)
    (*((void (**)(void *, _QWORD, _QWORD, _QWORD))v3 + 2))(v3, 0, 0, 0);

}

void sub_227DC7248(uint64_t a1)
{
  id WeakRetained;
  const char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  const char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  const char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  NSObject *v18;
  const char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  const char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  const __CFString *v31;
  uint64_t v32;
  id v33;
  const char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  const char *v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  const char *v43;
  uint64_t v44;
  uint64_t v45;
  const char *v46;
  uint64_t v47;
  uint64_t v48;
  const char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  const char *v54;
  uint64_t v55;
  void *v56;
  const char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  const char *v62;
  uint64_t v63;
  uint64_t v64;
  void *v65;
  const char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  void *v70;
  id v71;
  const char *v72;
  uint64_t v73;
  const char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  void *v80;
  uint64_t v81;
  const char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  void *v86;
  const char *v87;
  uint64_t v88;
  uint64_t v89;
  const char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  unint64_t v94;
  unint64_t v95;
  const char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  const char *v100;
  uint64_t v101;
  uint64_t v102;
  id v103;
  const char *v104;
  uint64_t v105;
  NSObject *v106;
  void *v107;
  uint64_t v108;
  const char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  void *v113;
  const char *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  void *v118;
  id v119;
  void *v120;
  void *v121;
  void *v122;
  id v123;
  __int128 v124;
  __int128 v125;
  __int128 v126;
  __int128 v127;
  id v128;
  uint8_t v129[128];
  uint8_t buf[4];
  void *v131;
  __int16 v132;
  uint64_t v133;
  __int16 v134;
  uint64_t v135;
  __int16 v136;
  const __CFString *v137;
  __int16 v138;
  uint64_t v139;
  uint64_t v140;

  v140 = *MEMORY[0x24BDAC8D0];
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 64));
  objc_msgSend_moc(WeakRetained, v3, v4, v5, v6);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  if (v11)
  {
    objc_msgSend_shared(MEMORY[0x24BE0FC08], v7, v8, v9, v10);
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    v17 = objc_msgSend_verboseLoggingEnabled(v12, v13, v14, v15, v16);

    if (v17)
    {
      BDSCloudKitDevelopmentLog();
      v18 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT))
      {
        objc_msgSend_entityName(WeakRetained, v19, v20, v21, v22);
        v23 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend_debugDescription(*(void **)(a1 + 32), v24, v25, v26, v27);
        v28 = objc_claimAutoreleasedReturnValue();
        v29 = (void *)v28;
        v30 = *(_QWORD *)(a1 + 40);
        v31 = CFSTR("YES");
        v32 = *(_QWORD *)(a1 + 72);
        if (!*(_QWORD *)(a1 + 48))
          v31 = CFSTR("NO");
        *(_DWORD *)buf = 138544386;
        v131 = v23;
        v132 = 2114;
        v133 = v28;
        v134 = 2114;
        v135 = v30;
        v136 = 2114;
        v137 = v31;
        v138 = 2048;
        v139 = v32;
        _os_log_impl(&dword_227D4F000, v18, OS_LOG_TYPE_DEFAULT, "\"\\\"BCCloudDataManager Entity: %{public}@ cloudDatasWithPredicate:%{public}@ sortDescriptors: %{public}@, has a filter: %{public}@, maximumResultCount: %lu\\\"\"", buf, 0x34u);

      }
    }
    v33 = objc_alloc(MEMORY[0x24BDBB678]);
    objc_msgSend_entityName(WeakRetained, v34, v35, v36, v37);
    v38 = (void *)objc_claimAutoreleasedReturnValue();
    v42 = (void *)objc_msgSend_initWithEntityName_(v33, v39, (uint64_t)v38, v40, v41);

    objc_msgSend_setFetchBatchSize_(v42, v43, 64, v44, v45);
    objc_msgSend_setPredicate_(v42, v46, *(_QWORD *)(a1 + 32), v47, v48);
    v52 = *(_QWORD *)(a1 + 40);
    if (v52)
      objc_msgSend_setSortDescriptors_(v42, v49, v52, v50, v51);
    v128 = 0;
    v120 = v42;
    v121 = v11;
    objc_msgSend_executeFetchRequest_error_(v11, v49, (uint64_t)v42, (uint64_t)&v128, v51);
    v53 = (void *)objc_claimAutoreleasedReturnValue();
    v119 = v128;
    objc_msgSend__logError_at_(WeakRetained, v54, (uint64_t)v119, (uint64_t)CFSTR("cloudDatas(maximumResultCount) - fetch"), v55);
    v56 = (void *)MEMORY[0x24BDBCEB8];
    v61 = objc_msgSend_count(v53, v57, v58, v59, v60);
    objc_msgSend_arrayWithCapacity_(v56, v62, v61, v63, v64);
    v65 = (void *)objc_claimAutoreleasedReturnValue();
    v122 = WeakRetained;
    objc_msgSend_privacyDelegate(WeakRetained, v66, v67, v68, v69);
    v70 = (void *)objc_claimAutoreleasedReturnValue();
    v124 = 0u;
    v125 = 0u;
    v126 = 0u;
    v127 = 0u;
    v71 = v53;
    v73 = objc_msgSend_countByEnumeratingWithState_objects_count_(v71, v72, (uint64_t)&v124, (uint64_t)v129, 16);
    if (v73)
    {
      v77 = v73;
      v78 = *(_QWORD *)v125;
LABEL_12:
      v79 = 0;
      while (1)
      {
        if (*(_QWORD *)v125 != v78)
          objc_enumerationMutation(v71);
        v80 = *(void **)(*((_QWORD *)&v124 + 1) + 8 * v79);
        v81 = *(_QWORD *)(a1 + 48);
        if (!v81
          || (*(unsigned int (**)(uint64_t, _QWORD))(v81 + 16))(v81, *(_QWORD *)(*((_QWORD *)&v124 + 1) + 8 * v79)))
        {
          objc_msgSend_setPrivacyDelegate_(v80, v74, (uint64_t)v70, v75, v76);
          v86 = (void *)objc_msgSend_mutableCopy(v80, v82, v83, v84, v85);
          objc_msgSend_setPrivacyDelegate_(v86, v87, (uint64_t)v70, v88, v89);
          if (v86)
            objc_msgSend_addObject_(v65, v90, (uint64_t)v86, v92, v93);
          v94 = objc_msgSend_count(v65, v90, v91, v92, v93);
          v95 = *(_QWORD *)(a1 + 72);

          if (v94 >= v95)
            break;
        }
        if (v77 == ++v79)
        {
          v77 = objc_msgSend_countByEnumeratingWithState_objects_count_(v71, v74, (uint64_t)&v124, (uint64_t)v129, 16);
          if (v77)
            goto LABEL_12;
          break;
        }
      }
    }

    v11 = v121;
    if (objc_msgSend_hasChanges(v121, v96, v97, v98, v99))
    {
      v123 = v119;
      objc_msgSend_save_(v121, v100, (uint64_t)&v123, v101, v102);
      v103 = v123;

      WeakRetained = v122;
      objc_msgSend__logError_at_(v122, v104, (uint64_t)v103, (uint64_t)CFSTR("cloudDatas(maximumResultCount) - save"), v105);
    }
    else
    {
      WeakRetained = v122;
      v103 = v119;
    }
    objc_msgSend_mq_sanitizeError_(WeakRetained, v100, (uint64_t)v103, v101, v102);
    v107 = (void *)objc_claimAutoreleasedReturnValue();

    v108 = *(_QWORD *)(a1 + 56);
    objc_msgSend_mq_cloudSyncVersions(WeakRetained, v109, v110, v111, v112);
    v113 = (void *)objc_claimAutoreleasedReturnValue();
    v118 = (void *)objc_msgSend_mutableCopy(v113, v114, v115, v116, v117);
    (*(void (**)(uint64_t, void *, void *, void *))(v108 + 16))(v108, v65, v118, v107);

  }
  else
  {
    BDSCloudKitLog();
    v106 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v106, OS_LOG_TYPE_ERROR))
      sub_227E5ECC8();

    (*(void (**)(void))(*(_QWORD *)(a1 + 56) + 16))();
  }

}

void sub_227DC77F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_227DC7814(uint64_t a1)
{
  NSObject *v2;
  void *v3;
  void *v4;

  BDSCloudKitLog();
  v2 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_ERROR))
    sub_227E5EA38();

  v3 = _Block_copy(*(const void **)(a1 + 32));
  v4 = v3;
  if (v3)
    (*((void (**)(void *, _QWORD, _QWORD, _QWORD))v3 + 2))(v3, 0, 0, 0);

}

void sub_227DC7884(uint64_t a1)
{
  id WeakRetained;
  const char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  const char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  const char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  NSObject *v18;
  const char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  const char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  id v29;
  const char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  const char *v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  const char *v39;
  uint64_t v40;
  uint64_t v41;
  const char *v42;
  uint64_t v43;
  uint64_t v44;
  const char *v45;
  uint64_t v46;
  void *v47;
  id v48;
  const char *v49;
  uint64_t v50;
  void *v51;
  const char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  const char *v57;
  uint64_t v58;
  uint64_t v59;
  void *v60;
  const char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void *v65;
  id v66;
  const char *v67;
  uint64_t v68;
  const char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t i;
  void *v75;
  const char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  void *v80;
  const char *v81;
  uint64_t v82;
  uint64_t v83;
  const char *v84;
  uint64_t v85;
  uint64_t v86;
  const char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  const char *v91;
  uint64_t v92;
  uint64_t v93;
  id v94;
  const char *v95;
  uint64_t v96;
  void *v97;
  uint64_t v98;
  const char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  void *v103;
  const char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  void *v108;
  uint64_t v109;
  void *v110;
  id v111;
  __int128 v112;
  __int128 v113;
  __int128 v114;
  __int128 v115;
  id v116;
  uint8_t v117[128];
  uint8_t buf[4];
  void *v119;
  __int16 v120;
  void *v121;
  uint64_t v122;

  v122 = *MEMORY[0x24BDAC8D0];
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  objc_msgSend_moc(WeakRetained, v3, v4, v5, v6);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_shared(MEMORY[0x24BE0FC08], v8, v9, v10, v11);
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  v17 = objc_msgSend_verboseLoggingEnabled(v12, v13, v14, v15, v16);

  if (v17)
  {
    BDSCloudKitDevelopmentLog();
    v18 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend_entityName(WeakRetained, v19, v20, v21, v22);
      v23 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend_debugDescription(*(void **)(a1 + 32), v24, v25, v26, v27);
      v28 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138543618;
      v119 = v23;
      v120 = 2114;
      v121 = v28;
      _os_log_impl(&dword_227D4F000, v18, OS_LOG_TYPE_DEFAULT, "\"\\\"BCCloudDataManager Entity: %{public}@ cloudDatasWithPredicate:%{public}@\\\"\"", buf, 0x16u);

    }
  }
  v29 = objc_alloc(MEMORY[0x24BDBB678]);
  objc_msgSend_entityName(WeakRetained, v30, v31, v32, v33);
  v34 = (void *)objc_claimAutoreleasedReturnValue();
  v38 = (void *)objc_msgSend_initWithEntityName_(v29, v35, (uint64_t)v34, v36, v37);

  objc_msgSend_setFetchBatchSize_(v38, v39, 64, v40, v41);
  v109 = a1;
  objc_msgSend_setPredicate_(v38, v42, *(_QWORD *)(a1 + 32), v43, v44);
  v116 = 0;
  v110 = v7;
  objc_msgSend_executeFetchRequest_error_(v7, v45, (uint64_t)v38, (uint64_t)&v116, v46);
  v47 = (void *)objc_claimAutoreleasedReturnValue();
  v48 = v116;
  objc_msgSend__logError_at_(WeakRetained, v49, (uint64_t)v48, (uint64_t)CFSTR("cloudDatas - fetch"), v50);
  v51 = (void *)MEMORY[0x24BDBCEB8];
  v56 = objc_msgSend_count(v47, v52, v53, v54, v55);
  objc_msgSend_arrayWithCapacity_(v51, v57, v56, v58, v59);
  v60 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_privacyDelegate(WeakRetained, v61, v62, v63, v64);
  v65 = (void *)objc_claimAutoreleasedReturnValue();
  v112 = 0u;
  v113 = 0u;
  v114 = 0u;
  v115 = 0u;
  v66 = v47;
  v68 = objc_msgSend_countByEnumeratingWithState_objects_count_(v66, v67, (uint64_t)&v112, (uint64_t)v117, 16);
  if (v68)
  {
    v72 = v68;
    v73 = *(_QWORD *)v113;
    do
    {
      for (i = 0; i != v72; ++i)
      {
        if (*(_QWORD *)v113 != v73)
          objc_enumerationMutation(v66);
        v75 = *(void **)(*((_QWORD *)&v112 + 1) + 8 * i);
        objc_msgSend_setPrivacyDelegate_(v75, v69, (uint64_t)v65, v70, v71);
        v80 = (void *)objc_msgSend_mutableCopy(v75, v76, v77, v78, v79);
        objc_msgSend_setPrivacyDelegate_(v80, v81, (uint64_t)v65, v82, v83);
        if (v80)
          objc_msgSend_addObject_(v60, v84, (uint64_t)v80, v85, v86);

      }
      v72 = objc_msgSend_countByEnumeratingWithState_objects_count_(v66, v69, (uint64_t)&v112, (uint64_t)v117, 16);
    }
    while (v72);
  }

  if (objc_msgSend_hasChanges(v110, v87, v88, v89, v90))
  {
    v111 = v48;
    objc_msgSend_save_(v110, v91, (uint64_t)&v111, v92, v93);
    v94 = v111;

    objc_msgSend__logError_at_(WeakRetained, v95, (uint64_t)v94, (uint64_t)CFSTR("cloudDatas - save"), v96);
    v48 = v94;
  }
  objc_msgSend_mq_sanitizeError_(WeakRetained, v91, (uint64_t)v48, v92, v93);
  v97 = (void *)objc_claimAutoreleasedReturnValue();

  v98 = *(_QWORD *)(v109 + 40);
  objc_msgSend_mq_cloudSyncVersions(WeakRetained, v99, v100, v101, v102);
  v103 = (void *)objc_claimAutoreleasedReturnValue();
  v108 = (void *)objc_msgSend_mutableCopy(v103, v104, v105, v106, v107);
  (*(void (**)(uint64_t, void *, void *, void *))(v98 + 16))(v98, v60, v108, v97);

}

void sub_227DC7D80(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_227DC7DA4(uint64_t a1)
{
  NSObject *v2;
  void *v3;
  void *v4;

  BDSCloudKitLog();
  v2 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_ERROR))
    sub_227E5EA38();

  v3 = _Block_copy(*(const void **)(a1 + 32));
  v4 = v3;
  if (v3)
    (*((void (**)(void *, _QWORD, _QWORD))v3 + 2))(v3, 0, 0);

}

void sub_227DC7E10(uint64_t a1)
{
  id WeakRetained;
  const char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  const char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  const char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  NSObject *v18;
  const char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  const char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  id v29;
  const char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  const char *v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  const char *v39;
  uint64_t v40;
  uint64_t v41;
  const char *v42;
  uint64_t v43;
  uint64_t v44;
  const char *v45;
  uint64_t v46;
  void *v47;
  id v48;
  const char *v49;
  uint64_t v50;
  void *v51;
  const char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  const char *v57;
  uint64_t v58;
  uint64_t v59;
  void *v60;
  id v61;
  const char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t i;
  const char *v67;
  uint64_t v68;
  uint64_t v69;
  void *v70;
  const char *v71;
  const char *v72;
  uint64_t v73;
  uint64_t v74;
  void *v75;
  void *v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  id v81;
  uint8_t v82[128];
  uint8_t buf[4];
  void *v84;
  __int16 v85;
  void *v86;
  uint64_t v87;

  v87 = *MEMORY[0x24BDAC8D0];
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  objc_msgSend_moc(WeakRetained, v3, v4, v5, v6);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  if (v11)
  {
    objc_msgSend_shared(MEMORY[0x24BE0FC08], v7, v8, v9, v10);
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    v17 = objc_msgSend_verboseLoggingEnabled(v12, v13, v14, v15, v16);

    if (v17)
    {
      BDSCloudKitDevelopmentLog();
      v18 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT))
      {
        objc_msgSend_entityName(WeakRetained, v19, v20, v21, v22);
        v23 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend_debugDescription(*(void **)(a1 + 32), v24, v25, v26, v27);
        v28 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138543618;
        v84 = v23;
        v85 = 2114;
        v86 = v28;
        _os_log_impl(&dword_227D4F000, v18, OS_LOG_TYPE_DEFAULT, "\"\\\"BCCloudDataManager Entity: %{public}@ cloudDatasWithPredicate:%{public}@\\\"\"", buf, 0x16u);

      }
    }
    v29 = objc_alloc(MEMORY[0x24BDBB678]);
    objc_msgSend_entityName(WeakRetained, v30, v31, v32, v33);
    v34 = (void *)objc_claimAutoreleasedReturnValue();
    v38 = (void *)objc_msgSend_initWithEntityName_(v29, v35, (uint64_t)v34, v36, v37);

    objc_msgSend_setFetchBatchSize_(v38, v39, 64, v40, v41);
    objc_msgSend_setPredicate_(v38, v42, *(_QWORD *)(a1 + 32), v43, v44);
    v81 = 0;
    v76 = v11;
    objc_msgSend_executeFetchRequest_error_(v11, v45, (uint64_t)v38, (uint64_t)&v81, v46);
    v47 = (void *)objc_claimAutoreleasedReturnValue();
    v48 = v81;
    objc_msgSend__logError_at_(WeakRetained, v49, (uint64_t)v48, (uint64_t)CFSTR("transformedCloudDatas"), v50);
    v51 = (void *)MEMORY[0x24BDBCEB8];
    v56 = objc_msgSend_count(v47, v52, v53, v54, v55);
    objc_msgSend_arrayWithCapacity_(v51, v57, v56, v58, v59);
    v60 = (void *)objc_claimAutoreleasedReturnValue();
    v77 = 0u;
    v78 = 0u;
    v79 = 0u;
    v80 = 0u;
    v61 = v47;
    v63 = objc_msgSend_countByEnumeratingWithState_objects_count_(v61, v62, (uint64_t)&v77, (uint64_t)v82, 16);
    if (v63)
    {
      v64 = v63;
      v65 = *(_QWORD *)v78;
      do
      {
        for (i = 0; i != v64; ++i)
        {
          if (*(_QWORD *)v78 != v65)
            objc_enumerationMutation(v61);
          (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
          v70 = (void *)objc_claimAutoreleasedReturnValue();
          if (v70)
            objc_msgSend_addObject_(v60, v67, (uint64_t)v70, v68, v69);

        }
        v64 = objc_msgSend_countByEnumeratingWithState_objects_count_(v61, v71, (uint64_t)&v77, (uint64_t)v82, 16);
      }
      while (v64);
    }

    objc_msgSend_mq_sanitizeError_(WeakRetained, v72, (uint64_t)v48, v73, v74);
    v75 = (void *)objc_claimAutoreleasedReturnValue();

    (*(void (**)(void))(*(_QWORD *)(a1 + 48) + 16))();
    v11 = v76;
  }
  else
  {
    (*(void (**)(void))(*(_QWORD *)(a1 + 48) + 16))();
  }

}

void sub_227DC8360(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
  id *v19;

  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_227DC8384(uint64_t a1)
{
  NSObject *v2;
  void *v3;
  void *v4;

  BDSCloudKitLog();
  v2 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_ERROR))
    sub_227E5EA38();

  v3 = _Block_copy(*(const void **)(a1 + 32));
  v4 = v3;
  if (v3)
    (*((void (**)(void *, _QWORD, _QWORD))v3 + 2))(v3, 0, 0);

}

void sub_227DC83F0(uint64_t a1, void *a2)
{
  id v3;
  id WeakRetained;
  const char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  const char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  uint64_t v16;
  void *v17;
  const char *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  void *v22;
  _QWORD v23[4];
  id v24;
  id v25;
  id v26;
  uint64_t v27;
  id v28;
  id v29;
  id v30;

  v3 = a2;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 72));
  objc_msgSend_moc(WeakRetained, v5, v6, v7, v8);
  v9 = (void *)objc_claimAutoreleasedReturnValue();

  if (v9)
  {
    objc_msgSend_moc(WeakRetained, v10, v11, v12, v13);
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    v23[0] = MEMORY[0x24BDAC760];
    v23[1] = 3221225472;
    v23[2] = sub_227DC8560;
    v23[3] = &unk_24F08BCB8;
    objc_copyWeak(&v30, (id *)(a1 + 72));
    v24 = v3;
    v25 = *(id *)(a1 + 32);
    v15 = *(id *)(a1 + 40);
    v16 = *(_QWORD *)(a1 + 48);
    v17 = *(void **)(a1 + 56);
    v26 = v15;
    v27 = v16;
    v28 = v17;
    v29 = *(id *)(a1 + 64);
    objc_msgSend_performBlock_(v14, v18, (uint64_t)v23, v19, v20);

    objc_destroyWeak(&v30);
  }
  else
  {
    v21 = _Block_copy(*(const void **)(a1 + 64));
    v22 = v21;
    if (v21)
      (*((void (**)(void *, _QWORD, _QWORD))v21 + 2))(v21, 0, 0);

  }
}

void sub_227DC854C(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_227DC8560(uint64_t a1)
{
  id WeakRetained;
  const char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  const char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  void *v13;
  const char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  NSObject *v19;
  const char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  id v25;
  const char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  const char *v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  const char *v35;
  uint64_t v36;
  uint64_t v37;
  const char *v38;
  uint64_t v39;
  uint64_t v40;
  const char *v41;
  uint64_t v42;
  uint64_t v43;
  const char *v44;
  uint64_t v45;
  void *v46;
  id v47;
  const char *v48;
  uint64_t v49;
  const char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void *v54;
  const char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  const char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void *v64;
  const char *v65;
  uint64_t v66;
  const char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  void *v71;
  void *v72;
  NSObject *v73;
  const char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  void *v78;
  id v79;
  const char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  void *v84;
  const char *v85;
  uint64_t v86;
  uint64_t v87;
  const char *v88;
  uint64_t v89;
  uint64_t v90;
  const char *v91;
  uint64_t v92;
  uint64_t v93;
  const char *v94;
  uint64_t v95;
  uint64_t v96;
  const char *v97;
  uint64_t v98;
  void *v99;
  id v100;
  const char *v101;
  uint64_t v102;
  const char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  void *v107;
  const char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  void *v112;
  const char *v113;
  uint64_t v114;
  uint64_t v115;
  const char *v116;
  uint64_t v117;
  uint64_t v118;
  void *v119;
  const char *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  void *v124;
  void *v125;
  void *v126;
  void *v127;
  const char *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  int v132;
  const char *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  NSObject *v137;
  const char *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  void *v142;
  const char *v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  void *v147;
  uint64_t v148;
  void *v149;
  const char *v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  void *v154;
  const char *v155;
  uint64_t v156;
  uint64_t v157;
  void *v158;
  const char *v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  void *v163;
  void *v164;
  const char *v165;
  uint64_t v166;
  const char *v167;
  uint64_t v168;
  uint64_t v169;
  const char *v170;
  uint64_t v171;
  uint64_t v172;
  const char *v173;
  uint64_t v174;
  id v175;
  const char *v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  const char *v180;
  uint64_t v181;
  uint64_t v182;
  const char *v183;
  uint64_t v184;
  const char *v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  void *v189;
  const char *v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  void *v194;
  void *v195;
  void *v196;
  id v197;
  id v198;
  id v199;
  uint8_t buf[4];
  void *v201;
  __int16 v202;
  uint64_t v203;
  uint64_t v204;

  v204 = *MEMORY[0x24BDAC8D0];
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 80));
  objc_msgSend_moc(WeakRetained, v3, v4, v5, v6);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  if (v11)
  {
    v12 = *(_QWORD *)(a1 + 32);
    objc_msgSend_shared(MEMORY[0x24BE0FC08], v7, v8, v9, v10);
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    v18 = objc_msgSend_verboseLoggingEnabled(v13, v14, v15, v16, v17);

    if (!v12)
    {
      if (v18)
      {
        BDSCloudKitDevelopmentLog();
        v73 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v73, OS_LOG_TYPE_DEFAULT))
        {
          objc_msgSend_debugDescription(*(void **)(a1 + 40), v74, v75, v76, v77);
          v78 = (void *)objc_claimAutoreleasedReturnValue();
          *(_DWORD *)buf = 138543362;
          v201 = v78;
          _os_log_impl(&dword_227D4F000, v73, OS_LOG_TYPE_DEFAULT, "\"\\\"BCCloudDataManager cloudDataWithPredicate:%{public}@\\\"\"", buf, 0xCu);

        }
      }
      v79 = objc_alloc(MEMORY[0x24BDBB678]);
      objc_msgSend_entityName(WeakRetained, v80, v81, v82, v83);
      v84 = (void *)objc_claimAutoreleasedReturnValue();
      v34 = (void *)objc_msgSend_initWithEntityName_(v79, v85, (uint64_t)v84, v86, v87);

      objc_msgSend_setReturnsObjectsAsFaults_(v34, v88, 0, v89, v90);
      objc_msgSend_setFetchLimit_(v34, v91, 1, v92, v93);
      objc_msgSend_setPredicate_(v34, v94, *(_QWORD *)(a1 + 40), v95, v96);
      v197 = 0;
      objc_msgSend_executeFetchRequest_error_(v11, v97, (uint64_t)v34, (uint64_t)&v197, v98);
      v99 = (void *)objc_claimAutoreleasedReturnValue();
      v100 = v197;
      objc_msgSend__logError_at_(WeakRetained, v101, (uint64_t)v100, (uint64_t)CFSTR("resolvedCloudData - fetch (new)"), v102);
      objc_msgSend_firstObject(v99, v103, v104, v105, v106);
      v107 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend_privacyDelegate(WeakRetained, v108, v109, v110, v111);
      v112 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend_setPrivacyDelegate_(v107, v113, (uint64_t)v112, v114, v115);

      objc_msgSend_mq_sanitizeError_(WeakRetained, v116, (uint64_t)v100, v117, v118);
      v119 = (void *)objc_claimAutoreleasedReturnValue();

      v124 = (void *)objc_msgSend_mutableCopy(v107, v120, v121, v122, v123);
      v125 = _Block_copy(*(const void **)(a1 + 72));
      v126 = v125;
      if (v125)
        (*((void (**)(void *, void *, void *))v125 + 2))(v125, v124, v119);

      goto LABEL_36;
    }
    if (v18)
    {
      BDSCloudKitDevelopmentLog();
      v19 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT))
      {
        objc_msgSend_debugDescription(*(void **)(a1 + 40), v20, v21, v22, v23);
        v24 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138543362;
        v201 = v24;
        _os_log_impl(&dword_227D4F000, v19, OS_LOG_TYPE_DEFAULT, "\"\\\"BCCloudDataManager resolvedCloudDataForCloudData:%{public}@\\\"\"", buf, 0xCu);

      }
    }
    v25 = objc_alloc(MEMORY[0x24BDBB678]);
    objc_msgSend_entityName(WeakRetained, v26, v27, v28, v29);
    v30 = (void *)objc_claimAutoreleasedReturnValue();
    v34 = (void *)objc_msgSend_initWithEntityName_(v25, v31, (uint64_t)v30, v32, v33);

    objc_msgSend_setReturnsObjectsAsFaults_(v34, v35, 0, v36, v37);
    objc_msgSend_setFetchLimit_(v34, v38, 1, v39, v40);
    objc_msgSend_setPredicate_(v34, v41, *(_QWORD *)(a1 + 40), v42, v43);
    v199 = 0;
    objc_msgSend_executeFetchRequest_error_(v11, v44, (uint64_t)v34, (uint64_t)&v199, v45);
    v46 = (void *)objc_claimAutoreleasedReturnValue();
    v47 = v199;
    objc_msgSend__logError_at_(WeakRetained, v48, (uint64_t)v47, (uint64_t)CFSTR("resolvedCloudData - fetch (existing)"), v49);
    objc_msgSend_privacyDelegate(WeakRetained, v50, v51, v52, v53);
    v54 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_firstObject(v46, v55, v56, v57, v58);
    v59 = (void *)objc_claimAutoreleasedReturnValue();
    if (v59)
    {
      v64 = v59;
      objc_msgSend_setPrivacyDelegate_(v59, v60, (uint64_t)v54, v62, v63);
      objc_msgSend_resolveConflictsFromRecord_withResolvers_(v64, v65, *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 48), v66);
      if (!v47)
      {
LABEL_30:
        if (objc_msgSend_hasChanges(v64, v67, v68, v69, v70))
        {
          objc_msgSend_mq_incrementCloudVersion(WeakRetained, v67, v179, v69, v70);
          v198 = 0;
          objc_msgSend_save_(v11, v180, (uint64_t)&v198, v181, v182);
          v47 = v198;
          objc_msgSend__logError_at_(WeakRetained, v183, (uint64_t)v47, (uint64_t)CFSTR("resolvedCloudData - save"), v184);
          objc_msgSend_mq_signalTransactions(WeakRetained, v185, v186, v187, v188);
        }
        else
        {
          v47 = 0;
        }
      }
LABEL_33:
      objc_msgSend_mq_sanitizeError_(WeakRetained, v67, (uint64_t)v47, v69, v70);
      v189 = (void *)objc_claimAutoreleasedReturnValue();

      v194 = (void *)objc_msgSend_mutableCopy(v64, v190, v191, v192, v193);
      v195 = _Block_copy(*(const void **)(a1 + 72));
      v196 = v195;
      if (v195)
        (*((void (**)(void *, void *, void *))v195 + 2))(v195, v194, v189);

LABEL_36:
      goto LABEL_37;
    }
    objc_msgSend_shared(MEMORY[0x24BE0FC08], v60, v61, v62, v63);
    v127 = (void *)objc_claimAutoreleasedReturnValue();
    v132 = objc_msgSend_verboseLoggingEnabled(v127, v128, v129, v130, v131);

    if (v132)
    {
      BDSCloudKitDevelopmentLog();
      v137 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v137, OS_LOG_TYPE_DEFAULT))
      {
        objc_msgSend_recordID(*(void **)(a1 + 32), v138, v139, v140, v141);
        v142 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend_recordName(v142, v143, v144, v145, v146);
        v147 = (void *)objc_claimAutoreleasedReturnValue();
        v148 = *(_QWORD *)(a1 + 32);
        *(_DWORD *)buf = 138543618;
        v201 = v147;
        v202 = 2112;
        v203 = v148;
        _os_log_impl(&dword_227D4F000, v137, OS_LOG_TYPE_DEFAULT, "\"\\\"BCCloudDataManager resolvedCloudDataForCloudData:%{public}@ did not find existing record.  Creating new from %@\\\"\"", buf, 0x16u);

      }
    }
    objc_msgSend_dataMapper(*(void **)(a1 + 56), v133, v134, v135, v136);
    v149 = (void *)objc_claimAutoreleasedReturnValue();

    if (v149)
    {
      objc_msgSend_dataMapper(*(void **)(a1 + 56), v150, v151, v152, v153);
      v154 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend_cloudDataFromRecord_(v154, v155, *(_QWORD *)(a1 + 32), v156, v157);
      v158 = (void *)objc_claimAutoreleasedReturnValue();

      if (v158)
      {
LABEL_26:
        v163 = (void *)MEMORY[0x24BDBB658];
        objc_msgSend_entityName(WeakRetained, v159, v160, v161, v162);
        v164 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend_insertNewObjectForEntityForName_inManagedObjectContext_(v163, v165, (uint64_t)v164, (uint64_t)v11, v166);
        v64 = (void *)objc_claimAutoreleasedReturnValue();

        objc_msgSend_setPrivacyDelegate_(v64, v167, (uint64_t)v54, v168, v169);
        objc_msgSend_setPrivacyDelegate_(v158, v170, (uint64_t)v54, v171, v172);
        objc_msgSend_configureFromCloudData_withMergers_(v64, v173, (uint64_t)v158, *(_QWORD *)(a1 + 64), v174);
        goto LABEL_29;
      }
    }
    else
    {
      v175 = objc_alloc((Class)objc_msgSend_mutableClass(WeakRetained, v150, v151, v152, v153));
      v158 = (void *)objc_msgSend_initWithRecord_(v175, v176, *(_QWORD *)(a1 + 32), v177, v178);
      if (v158)
        goto LABEL_26;
    }
    v64 = 0;
LABEL_29:

    if (!v47)
      goto LABEL_30;
    goto LABEL_33;
  }
  v71 = _Block_copy(*(const void **)(a1 + 72));
  v72 = v71;
  if (v71)
    (*((void (**)(void *, _QWORD, _QWORD))v71 + 2))(v71, 0, 0);

LABEL_37:
}

void sub_227DC8D00(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
  id *v19;

  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_227DC8D24(uint64_t a1)
{
  NSObject *v2;
  void *v3;
  void *v4;

  BDSCloudKitLog();
  v2 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_ERROR))
    sub_227E5EA38();

  v3 = _Block_copy(*(const void **)(a1 + 32));
  v4 = v3;
  if (v3)
    (*((void (**)(void *, _QWORD, _QWORD, _QWORD))v3 + 2))(v3, 0, 0, 0);

}

void sub_227DC8D94(uint64_t a1)
{
  const char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  const char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  const char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  objc_class *v15;
  id v16;
  id v17;
  id v18;
  const char *v19;
  uint64_t v20;
  uint64_t v21;
  const char *v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  const char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  const char *v31;
  const char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t i;
  void *v39;
  void *v40;
  const char *v41;
  uint64_t v42;
  uint64_t v43;
  __CFString *v44;
  const char *v45;
  uint64_t v46;
  uint64_t v47;
  NSObject *v48;
  const char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  const char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  const char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  const char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  const char *v67;
  uint64_t v68;
  uint64_t v69;
  const char *v70;
  uint64_t v71;
  uint64_t v72;
  void *v73;
  void *v74;
  void *v75;
  const char *v76;
  uint64_t v77;
  uint64_t v78;
  const char *v79;
  uint64_t v80;
  uint64_t v81;
  void *v82;
  const char *v83;
  uint64_t v84;
  const char *v85;
  uint64_t v86;
  uint64_t v87;
  const char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  const char *v92;
  uint64_t v93;
  uint64_t v94;
  id v95;
  const char *v96;
  uint64_t v97;
  id v98;
  const char *v99;
  uint64_t v100;
  uint64_t v101;
  int v102;
  void *v103;
  uint64_t v104;
  id v105;
  const char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  void *v110;
  const char *v111;
  uint64_t v112;
  uint64_t v113;
  void *v114;
  const char *v115;
  uint64_t v116;
  void *v117;
  const char *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  void *v122;
  const char *v123;
  uint64_t v124;
  uint64_t v125;
  const char *v126;
  uint64_t v127;
  uint64_t v128;
  void *v129;
  const char *v130;
  uint64_t v131;
  uint64_t v132;
  const char *v133;
  uint64_t v134;
  void *v135;
  id v136;
  const char *v137;
  uint64_t v138;
  const char *v139;
  uint64_t v140;
  void *v141;
  BOOL v142;
  uint64_t v143;
  NSObject *v144;
  const char *v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  void *v149;
  BOOL v150;
  const char *v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  void *v155;
  const char *v156;
  uint64_t v157;
  uint64_t v158;
  void *v159;
  const char *v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  id v164;
  const char *v165;
  uint64_t v166;
  uint64_t v167;
  void *v168;
  const char *v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  void *v173;
  const char *v174;
  uint64_t v175;
  uint64_t v176;
  int shouldArchiveData;
  NSObject *v178;
  const char *v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  void *v183;
  const char *v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  void *v188;
  const char *v189;
  uint64_t v190;
  const char *v191;
  uint64_t v192;
  const char *v193;
  uint64_t v194;
  uint64_t v195;
  const char *v196;
  uint64_t v197;
  uint64_t v198;
  const char *v199;
  uint64_t v200;
  NSObject *v201;
  const char *v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  id v206;
  const char *v207;
  const char *v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t j;
  const char *v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  const char *v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  void *v221;
  const char *v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  void *v226;
  void *v227;
  const char *v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  void *v232;
  id v233;
  const char *v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  const char *v238;
  uint64_t v239;
  void *v240;
  void *v241;
  NSObject *v242;
  const char *v243;
  uint64_t v244;
  uint64_t v245;
  void *v246;
  void *v247;
  void *v248;
  char v249;
  void *v250;
  void *v251;
  void *v252;
  void *v253;
  id v254;
  void *v255;
  id WeakRetained;
  uint64_t v257;
  void *v258;
  uint64_t v259;
  uint64_t v260;
  void *context;
  void *v262;
  void *v264;
  id v265;
  __int128 v266;
  __int128 v267;
  __int128 v268;
  __int128 v269;
  id v270;
  _QWORD v271[4];
  id v272;
  uint64_t *v273;
  id v274;
  uint64_t v275;
  uint64_t *v276;
  uint64_t v277;
  int v278;
  __int128 v279;
  __int128 v280;
  __int128 v281;
  __int128 v282;
  uint8_t v283[128];
  _BYTE buf[24];
  void *v285;
  _BYTE v286[10];
  __int16 v287;
  void *v288;
  _BYTE v289[128];
  uint64_t v290;

  v290 = *MEMORY[0x24BDAC8D0];
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 72));
  objc_msgSend_moc(WeakRetained, v1, v2, v3, v4);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  if (!v9)
  {
    v240 = _Block_copy(*(const void **)(a1 + 64));
    v241 = v240;
    if (v240)
      (*((void (**)(void *, _QWORD, _QWORD, _QWORD))v240 + 2))(v240, 0, 0, 0);

    goto LABEL_81;
  }
  objc_msgSend_privacyDelegate(WeakRetained, v5, v6, v7, v8);
  v251 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_array(MEMORY[0x24BDBCEB8], v10, v11, v12, v13);
  v252 = (void *)objc_claimAutoreleasedReturnValue();
  BDSCloudKitLog();
  v14 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
  {
    v15 = (objc_class *)MEMORY[0x24BDBCEB8];
    v16 = *(id *)(a1 + 32);
    v17 = objc_alloc_init(v15);
    *(_QWORD *)buf = MEMORY[0x24BDAC760];
    *(_QWORD *)&buf[8] = 3221225472;
    *(_QWORD *)&buf[16] = sub_227DCC138;
    v285 = &unk_24F08BDD0;
    *(_QWORD *)v286 = v17;
    v18 = v17;
    objc_msgSend_enumerateObjectsUsingBlock_(v16, v19, (uint64_t)buf, v20, v21);
    objc_msgSend_componentsJoinedByString_(v18, v22, (uint64_t)CFSTR(","), v23, v24);
    v25 = (void *)objc_claimAutoreleasedReturnValue();

    *(_DWORD *)buf = 138543362;
    *(_QWORD *)&buf[4] = v25;
    _os_log_impl(&dword_227D4F000, v14, OS_LOG_TYPE_DEFAULT, "BCCloudDataManager #recordChange resolveConflictsForRecords: %{public}@", buf, 0xCu);

  }
  v259 = objc_msgSend_count(*(void **)(a1 + 32), v26, v27, v28, v29);
  v255 = (void *)objc_opt_new();
  v254 = objc_alloc_init(MEMORY[0x24BDBCED8]);
  v264 = (void *)objc_opt_new();
  v281 = 0u;
  v282 = 0u;
  v279 = 0u;
  v280 = 0u;
  v30 = *(id *)(a1 + 32);
  v36 = objc_msgSend_countByEnumeratingWithState_objects_count_(v30, v31, (uint64_t)&v279, (uint64_t)v289, 16);
  if (v36)
  {
    v37 = *(_QWORD *)v280;
    do
    {
      for (i = 0; i != v36; ++i)
      {
        if (*(_QWORD *)v280 != v37)
          objc_enumerationMutation(v30);
        v39 = *(void **)(*((_QWORD *)&v279 + 1) + 8 * i);
        objc_msgSend_encryptedValuesByKey(v39, v32, v33, v34, v35);
        v40 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend_objectForKeyedSubscript_(v40, v41, (uint64_t)CFSTR("localRecordIDEncrypted"), v42, v43);
        v44 = (__CFString *)objc_claimAutoreleasedReturnValue();

        if (!v44)
        {
          objc_msgSend_valueForKey_(v39, v45, (uint64_t)CFSTR("localRecordID"), v46, v47);
          v44 = (__CFString *)objc_claimAutoreleasedReturnValue();
          if (!v44)
          {
            BDSCloudKitLog();
            v48 = objc_claimAutoreleasedReturnValue();
            if (os_log_type_enabled(v48, OS_LOG_TYPE_ERROR))
            {
              *(_DWORD *)buf = 138543362;
              *(_QWORD *)&buf[4] = v39;
              _os_log_error_impl(&dword_227D4F000, v48, OS_LOG_TYPE_ERROR, "CKRecord unexpected with no local identifier: %{public}@", buf, 0xCu);
            }

            v44 = CFSTR("keyFromMyKitchenDrawer");
          }
        }
        objc_msgSend_addObject_(v264, v45, (uint64_t)v44, v46, v47);

      }
      v36 = objc_msgSend_countByEnumeratingWithState_objects_count_(v30, v32, (uint64_t)&v279, (uint64_t)v289, 16);
    }
    while (v36);
  }

  v53 = (void *)objc_msgSend_immutableClass(WeakRetained, v49, v50, v51, v52);
  objc_msgSend_propertyIDKey(v53, v54, v55, v56, v57);
  v253 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_entityName(WeakRetained, v58, v59, v60, v61);
  v250 = (void *)objc_claimAutoreleasedReturnValue();
  v275 = 0;
  v276 = &v275;
  v277 = 0x2020000000;
  v278 = 0;
  if (!v259)
  {
    v262 = 0;
    goto LABEL_73;
  }
  v249 = 0;
  v260 = 0;
  v262 = 0;
  v66 = 0;
  v257 = 0x7FFFFFFFFFFFFFFFLL;
  v258 = 0;
  do
  {
    context = (void *)MEMORY[0x22E2AA24C]();
    objc_msgSend_objectAtIndexedSubscript_(*(void **)(a1 + 32), v67, v66, v68, v69);
    v73 = (void *)objc_claimAutoreleasedReturnValue();
    if ((v66 & 0xF) != 0)
    {
      v74 = v262;
LABEL_20:
      objc_msgSend_localIdentifierFromRecord_(BCCloudData, v70, (uint64_t)v73, v71, v72);
      v75 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend_objectForKeyedSubscript_(v74, v76, (uint64_t)v75, v77, v78);
      v82 = (void *)objc_claimAutoreleasedReturnValue();
      if (v82)
        goto LABEL_21;
      objc_msgSend_objectForKeyedSubscript_(v254, v79, (uint64_t)v75, v80, v81);
      v141 = (void *)objc_claimAutoreleasedReturnValue();
      v142 = v141 == 0;

      if (v142)
        goto LABEL_36;
      objc_msgSend_objectForKeyedSubscript_(v254, v79, (uint64_t)v75, v80, v81);
      v82 = (void *)objc_claimAutoreleasedReturnValue();
      BDSCloudKitLog();
      v144 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v144, OS_LOG_TYPE_ERROR))
      {
        objc_msgSend_recordID(v73, v145, v146, v147, v148);
        v221 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend_recordName(v221, v222, v223, v224, v225);
        v226 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138544386;
        *(_QWORD *)&buf[4] = v226;
        *(_WORD *)&buf[12] = 2160;
        *(_QWORD *)&buf[14] = 1752392040;
        *(_WORD *)&buf[22] = 2112;
        v285 = v75;
        *(_WORD *)v286 = 2112;
        *(_QWORD *)&v286[2] = v82;
        v287 = 2112;
        v288 = v73;
        _os_log_error_impl(&dword_227D4F000, v144, OS_LOG_TYPE_ERROR, "BCCloudDataManager resolveConflictsForRecords:%{public}@ Already seen (localId: %{mask.hash}@) %@. Updating from %@", buf, 0x34u);

      }
      if (v82)
      {
LABEL_21:
        objc_msgSend_setPrivacyDelegate_(v82, v79, (uint64_t)v251, v80, v81);
        objc_msgSend_resolveConflictsFromRecord_withResolvers_(v82, v83, (uint64_t)v73, *(_QWORD *)(a1 + 40), v84);
      }
      else
      {
LABEL_36:
        objc_msgSend_dataMapper(*(void **)(a1 + 48), v79, v143, v80, v81);
        v149 = (void *)objc_claimAutoreleasedReturnValue();
        v150 = v149 == 0;

        if (v150)
        {
          v164 = objc_alloc((Class)objc_msgSend_mutableClass(WeakRetained, v151, v152, v153, v154));
          v159 = (void *)objc_msgSend_initWithRecord_(v164, v165, (uint64_t)v73, v166, v167);
          if (!v159)
          {
LABEL_52:

            v82 = 0;
            goto LABEL_23;
          }
        }
        else
        {
          objc_msgSend_dataMapper(*(void **)(a1 + 48), v151, v152, v153, v154);
          v155 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend_cloudDataFromRecord_(v155, v156, (uint64_t)v73, v157, v158);
          v159 = (void *)objc_claimAutoreleasedReturnValue();

          if (!v159)
            goto LABEL_52;
        }
        objc_msgSend_cloudKitController(*(void **)(a1 + 48), v160, v161, v162, v163);
        v168 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend_configuration(v168, v169, v170, v171, v172);
        v173 = (void *)objc_claimAutoreleasedReturnValue();
        shouldArchiveData = objc_msgSend_shouldArchiveData_(v173, v174, (uint64_t)v159, v175, v176);

        if (!shouldArchiveData)
        {
          BDSCloudKitLog();
          v201 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v201, OS_LOG_TYPE_ERROR))
          {
            objc_msgSend_recordID(v73, v202, v203, v204, v205);
            v227 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend_recordName(v227, v228, v229, v230, v231);
            v232 = (void *)objc_claimAutoreleasedReturnValue();
            *(_DWORD *)buf = 138543618;
            *(_QWORD *)&buf[4] = v232;
            *(_WORD *)&buf[12] = 2112;
            *(_QWORD *)&buf[14] = v73;
            _os_log_error_impl(&dword_227D4F000, v201, OS_LOG_TYPE_ERROR, "BCCloudDataManager resolveConflictsForRecords:%{public}@ configuration did not allow creation of new record from %@", buf, 0x16u);

          }
          goto LABEL_52;
        }
        BDSCloudKitLog();
        v178 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v178, OS_LOG_TYPE_DEFAULT))
        {
          objc_msgSend_recordID(v73, v179, v180, v181, v182);
          v183 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend_recordName(v183, v184, v185, v186, v187);
          v188 = (void *)objc_claimAutoreleasedReturnValue();
          *(_DWORD *)buf = 138544130;
          *(_QWORD *)&buf[4] = v188;
          *(_WORD *)&buf[12] = 2160;
          *(_QWORD *)&buf[14] = 1752392040;
          *(_WORD *)&buf[22] = 2112;
          v285 = v75;
          *(_WORD *)v286 = 2112;
          *(_QWORD *)&v286[2] = v73;
          _os_log_impl(&dword_227D4F000, v178, OS_LOG_TYPE_DEFAULT, "BCCloudDataManager resolveConflictsForRecords:%{public}@ (localId: %{mask.hash}@) did not find existing record. Creating new from %@", buf, 0x2Au);

        }
        objc_msgSend_insertNewObjectForEntityForName_inManagedObjectContext_(MEMORY[0x24BDBB658], v189, (uint64_t)v250, (uint64_t)v9, v190);
        v82 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend_setObject_forKeyedSubscript_(v254, v191, (uint64_t)v82, (uint64_t)v75, v192);
        objc_msgSend_setPrivacyDelegate_(v82, v193, (uint64_t)v251, v194, v195);
        objc_msgSend_setPrivacyDelegate_(v159, v196, (uint64_t)v251, v197, v198);
        objc_msgSend_configureFromCloudData_withMergers_(v82, v199, (uint64_t)v159, *(_QWORD *)(a1 + 56), v200);

        if (!v82)
        {
LABEL_23:
          if (v66 == v260 + v257 - 1)
          {
            if (!v258 && objc_msgSend_hasChanges(v9, v85, v91, v86, v87))
            {
              v270 = 0;
              objc_msgSend_save_(v9, v92, (uint64_t)&v270, v93, v94);
              v95 = v270;
              if (v95)
              {
                v98 = v95;
                objc_msgSend__logError_at_(WeakRetained, v96, (uint64_t)v95, (uint64_t)CFSTR("resolveConflicts - save batch"), v97);
                objc_msgSend_removeObjectsInArray_(v252, v99, (uint64_t)v255, v100, v101);
                v249 = 1;
                v102 = 4;
                v258 = v98;
LABEL_63:

                v262 = v74;
                goto LABEL_64;
              }
              v249 = 1;
            }
            v268 = 0u;
            v269 = 0u;
            v266 = 0u;
            v267 = 0u;
            v206 = v255;
            v210 = objc_msgSend_countByEnumeratingWithState_objects_count_(v206, v207, (uint64_t)&v266, (uint64_t)v283, 16);
            if (v210)
            {
              v211 = *(_QWORD *)v267;
              do
              {
                for (j = 0; j != v210; ++j)
                {
                  if (*(_QWORD *)v267 != v211)
                    objc_enumerationMutation(v206);
                  objc_msgSend_refreshObject_mergeChanges_(v9, v208, *(_QWORD *)(*((_QWORD *)&v266 + 1) + 8 * j), 0, v209);
                }
                v210 = objc_msgSend_countByEnumeratingWithState_objects_count_(v206, v208, (uint64_t)&v266, (uint64_t)v283, 16);
              }
              while (v210);
            }

            objc_msgSend_removeAllObjects(v206, v213, v214, v215, v216);
            objc_msgSend_removeAllObjects(v254, v217, v218, v219, v220);
          }
          v102 = 0;
          goto LABEL_63;
        }
      }
      objc_msgSend_addObject_(v252, v85, (uint64_t)v82, v86, v87);
      objc_msgSend_addObject_(v255, v88, (uint64_t)v82, v89, v90);
      goto LABEL_23;
    }
    v103 = (void *)MEMORY[0x22E2AA24C]();
    v104 = v259 - v66;
    if ((unint64_t)(v259 - v66) >= 0x10)
      v104 = 16;
    v260 = v104;
    v105 = objc_alloc(MEMORY[0x24BDBB678]);
    objc_msgSend_entityName(WeakRetained, v106, v107, v108, v109);
    v110 = (void *)objc_claimAutoreleasedReturnValue();
    v114 = (void *)objc_msgSend_initWithEntityName_(v105, v111, (uint64_t)v110, v112, v113);

    objc_msgSend_subarrayWithRange_(v264, v115, v66, v260, v116);
    v117 = (void *)objc_claimAutoreleasedReturnValue();
    v122 = (void *)objc_msgSend_mutableCopy(v117, v118, v119, v120, v121);

    objc_msgSend_removeObject_(v122, v123, (uint64_t)CFSTR("keyFromMyKitchenDrawer"), v124, v125);
    objc_msgSend_predicateWithFormat_(MEMORY[0x24BDD1758], v126, (uint64_t)CFSTR("%K IN %@"), v127, v128, v253, v122);
    v129 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_setPredicate_(v114, v130, (uint64_t)v129, v131, v132);

    v274 = v258;
    objc_msgSend_executeFetchRequest_error_(v9, v133, (uint64_t)v114, (uint64_t)&v274, v134);
    v135 = (void *)objc_claimAutoreleasedReturnValue();
    v136 = v274;

    v271[0] = MEMORY[0x24BDAC760];
    v271[1] = 3221225472;
    v271[2] = sub_227DC99E8;
    v271[3] = &unk_24F08BD08;
    v272 = v253;
    v273 = &v275;
    objc_msgSend_bds_dictionaryUsingPropertyAsKey_uniquingKeysWith_(v135, v137, (uint64_t)v272, (uint64_t)v271, v138);
    v74 = (void *)objc_claimAutoreleasedReturnValue();

    if (v136)
    {
      objc_msgSend__logError_at_(WeakRetained, v139, (uint64_t)v136, (uint64_t)CFSTR("resolveConflicts - fetch"), v140);
      v102 = 4;
    }
    else
    {
      v102 = 0;
    }

    objc_autoreleasePoolPop(v103);
    if (!v136)
    {
      v257 = v66;
      v258 = 0;
      goto LABEL_20;
    }
    v262 = v74;
    v257 = v66;
    v258 = v136;
LABEL_64:

    objc_autoreleasePoolPop(context);
    if (v102)
      break;
    ++v66;
  }
  while (v66 != v259);
  v233 = v258;
  if ((v249 & (v258 == 0)) != 1)
    goto LABEL_74;
  objc_msgSend_mq_incrementCloudVersion(WeakRetained, v62, v63, v64, v65);
  if (objc_msgSend_hasChanges(v9, v234, v235, v236, v237))
  {
    v265 = 0;
    objc_msgSend_save_(v9, v62, (uint64_t)&v265, v64, v65);
    v233 = v265;
    objc_msgSend__logError_at_(WeakRetained, v238, (uint64_t)v233, (uint64_t)CFSTR("resolveConflicts - save remaining"), v239);
    goto LABEL_74;
  }
LABEL_73:
  v233 = 0;
LABEL_74:
  if (*((_DWORD *)v276 + 6))
  {
    BDSCloudKitLog();
    v242 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v242, OS_LOG_TYPE_FAULT))
      sub_227E5ECF4();

  }
  objc_msgSend_mq_signalTransactions(WeakRetained, v62, v63, v64, v65);
  objc_msgSend_mq_sanitizeError_(WeakRetained, v243, (uint64_t)v233, v244, v245);
  v246 = (void *)objc_claimAutoreleasedReturnValue();

  v247 = _Block_copy(*(const void **)(a1 + 64));
  v248 = v247;
  if (v247)
    (*((void (**)(void *, uint64_t, void *, void *))v247 + 2))(v247, 1, v252, v246);

  _Block_object_dispose(&v275, 8);
LABEL_81:

}

void sub_227DC997C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,char a53)
{
  _Block_object_dispose(&a53, 8);
  _Unwind_Resume(a1);
}

id sub_227DC99E8(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  const char *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  NSObject *v11;
  int v13;
  uint64_t v14;
  __int16 v15;
  void *v16;
  __int16 v17;
  id v18;
  __int16 v19;
  id v20;
  uint64_t v21;

  v21 = *MEMORY[0x24BDAC8D0];
  v5 = a2;
  v6 = a3;
  objc_msgSend_valueForKey_(v5, v7, *(_QWORD *)(a1 + 32), v8, v9);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  BDSCloudKitLog();
  v11 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
  {
    v13 = 141558786;
    v14 = 1752392040;
    v15 = 2112;
    v16 = v10;
    v17 = 2112;
    v18 = v6;
    v19 = 2112;
    v20 = v5;
    _os_log_error_impl(&dword_227D4F000, v11, OS_LOG_TYPE_ERROR, "BCCloudDataManager resolveConflictsForRecords: Encountered duplicates for %{mask.hash}@, entry=%@, existing=%@", (uint8_t *)&v13, 0x2Au);
  }

  ++*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24);
  return v5;
}

void sub_227DC9C64(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_227DC9C88(uint64_t a1)
{
  NSObject *v2;
  void *v3;
  void *v4;

  BDSCloudKitLog();
  v2 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_ERROR))
    sub_227E5EA38();

  v3 = _Block_copy(*(const void **)(a1 + 32));
  v4 = v3;
  if (v3)
    (*((void (**)(void *, _QWORD, _QWORD))v3 + 2))(v3, 0, 0);

}

void sub_227DC9CF4(uint64_t a1)
{
  id WeakRetained;
  const char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  NSObject *v8;
  uint64_t v9;
  id v10;
  const char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  const char *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  const char *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  const char *v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  const char *v28;
  uint64_t v29;
  uint64_t v30;
  const char *v31;
  uint64_t v32;
  void *v33;
  id v34;
  const char *v35;
  uint64_t v36;
  id v37;
  const char *v38;
  uint64_t v39;
  const char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t i;
  const char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  const char *v50;
  uint64_t v51;
  uint64_t v52;
  id v53;
  const char *v54;
  uint64_t v55;
  const char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void *v60;
  const char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void *v65;
  void *v66;
  void *v67;
  void *v68;
  void *v69;
  id v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  id v75;
  _BYTE v76[128];
  uint64_t v77;

  v77 = *MEMORY[0x24BDAC8D0];
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  objc_msgSend_moc(WeakRetained, v3, v4, v5, v6);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  if (v7)
  {
    BDSCloudKitLog();
    v8 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
      sub_227E5ED6C(a1, v8, v9);

    v10 = objc_alloc(MEMORY[0x24BDBB678]);
    objc_msgSend_entityName(WeakRetained, v11, v12, v13, v14);
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    v19 = (void *)objc_msgSend_initWithEntityName_(v10, v16, (uint64_t)v15, v17, v18);

    objc_msgSend_valueForKey_(*(void **)(a1 + 32), v20, (uint64_t)CFSTR("recordName"), v21, v22);
    v23 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_predicateWithFormat_(MEMORY[0x24BDD1758], v24, (uint64_t)CFSTR("saltedHashedID IN %@"), v25, v26, v23);
    v27 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_setPredicate_(v19, v28, (uint64_t)v27, v29, v30);

    v75 = 0;
    objc_msgSend_executeFetchRequest_error_(v7, v31, (uint64_t)v19, (uint64_t)&v75, v32);
    v33 = (void *)objc_claimAutoreleasedReturnValue();
    v34 = v75;
    objc_msgSend__logError_at_(WeakRetained, v35, (uint64_t)v34, (uint64_t)CFSTR("resolveConflicts - failedRecordIDs - fetch"), v36);
    v73 = 0u;
    v74 = 0u;
    v71 = 0u;
    v72 = 0u;
    v37 = v33;
    v39 = objc_msgSend_countByEnumeratingWithState_objects_count_(v37, v38, (uint64_t)&v71, (uint64_t)v76, 16);
    if (v39)
    {
      v43 = v39;
      v44 = *(_QWORD *)v72;
      do
      {
        for (i = 0; i != v43; ++i)
        {
          if (*(_QWORD *)v72 != v44)
            objc_enumerationMutation(v37);
          objc_msgSend_setSystemFields_(*(void **)(*((_QWORD *)&v71 + 1) + 8 * i), v40, 0, v41, v42);
        }
        v43 = objc_msgSend_countByEnumeratingWithState_objects_count_(v37, v40, (uint64_t)&v71, (uint64_t)v76, 16);
      }
      while (v43);
    }

    if (objc_msgSend_hasChanges(v7, v46, v47, v48, v49))
    {
      v70 = v34;
      objc_msgSend_save_(v7, v50, (uint64_t)&v70, v51, v52);
      v53 = v70;

      objc_msgSend__logError_at_(WeakRetained, v54, (uint64_t)v53, (uint64_t)CFSTR("resolveConflicts - failedRecordIDs - save"), v55);
      objc_msgSend_syncManager(WeakRetained, v56, v57, v58, v59);
      v60 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend_signalSyncToCK(v60, v61, v62, v63, v64);

      v34 = v53;
    }
    objc_msgSend_mq_sanitizeError_(WeakRetained, v50, (uint64_t)v34, v51, v52);
    v65 = (void *)objc_claimAutoreleasedReturnValue();

    v66 = _Block_copy(*(const void **)(a1 + 40));
    v67 = v66;
    if (v66)
      (*((void (**)(void *, uint64_t, void *))v66 + 2))(v66, 1, v65);

  }
  else
  {
    v68 = _Block_copy(*(const void **)(a1 + 40));
    v69 = v68;
    if (v68)
      (*((void (**)(void *, _QWORD, _QWORD))v68 + 2))(v68, 0, 0);

  }
}

void sub_227DCA480(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 80));
  _Unwind_Resume(a1);
}

void sub_227DCA4AC(uint64_t a1)
{
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;

  BDSCloudKitLog();
  v2 = (char *)objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled((os_log_t)v2, OS_LOG_TYPE_FAULT))
    sub_227E5EDD8(a1, v2, v3, v4, v5);

  v6 = _Block_copy(*(const void **)(a1 + 40));
  v7 = v6;
  if (v6)
    (*((void (**)(void *, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))v6 + 2))(v6, 0, 0, 0, 0, 0);

}

void sub_227DCA528(uint64_t a1)
{
  id WeakRetained;
  const char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  const char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  const char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  const char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  const char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  const char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  const char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  const char *v38;
  void *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  void *v45;
  const char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  void **v51;
  void *v52;
  id v53;
  const char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  id v58;
  NSObject *v59;
  const char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void *v64;
  const char *v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  const char *v71;
  uint64_t v72;
  const char *v73;
  uint64_t v74;
  uint64_t v75;
  void *v76;
  void *v77;
  void *v78;
  void *v79;
  const char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  const char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  id v88;
  const char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  const char *v93;
  uint64_t v94;
  uint64_t v95;
  unint64_t v96;
  uint64_t v97;
  uint64_t v98;
  void *v99;
  void *v100;
  const char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  id v105;
  uint64_t v106;
  uint64_t v107;
  const char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  void *v112;
  const char *v113;
  int v114;
  id v115;
  id v116;
  const char *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  const char *v122;
  uint64_t v123;
  uint64_t v124;
  const char *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  const char *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  const char *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  const char *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  const char *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  const char *v147;
  uint64_t v148;
  uint64_t v149;
  const char *v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  const char *v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  void *v158;
  const char *v159;
  uint64_t v160;
  uint64_t v161;
  id v162;
  const char *v163;
  uint64_t v164;
  void *v165;
  NSObject *v166;
  const char *v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  void *v171;
  const char *v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  NSObject *v177;
  const char *v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  void *v182;
  const char *v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  const char *v188;
  uint64_t v189;
  uint64_t v190;
  void *v191;
  void *v192;
  void *v193;
  void *v194;
  const char *v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  void *v199;
  id v200;
  void *v201;
  void *v202;
  void *v203;
  void *v204;
  uint64_t v205;
  id obj;
  uint64_t v207;
  void *v208;
  void *v209;
  void *v210;
  void *v211;
  id v212;
  id v213;
  id v214;
  __int128 v215;
  __int128 v216;
  __int128 v217;
  __int128 v218;
  id v219;
  id v220;
  uint64_t v221;
  uint8_t buf[4];
  void *v223;
  __int16 v224;
  uint64_t v225;
  __int16 v226;
  void *v227;
  __int16 v228;
  void *v229;
  __int16 v230;
  int v231;
  _BYTE v232[128];
  uint64_t v233;

  v233 = *MEMORY[0x24BDAC8D0];
  kdebug_trace();
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  objc_msgSend_moc(WeakRetained, v3, v4, v5, v6);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  if (v11)
  {
    objc_msgSend_mq_cloudSyncVersions(WeakRetained, v7, v8, v9, v10);
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    v221 = 0;
    v17 = objc_msgSend_cloudVersion(*(void **)(a1 + 32), v13, v14, v15, v16);
    v204 = v12;
    if (v17 <= objc_msgSend_cloudVersion(v12, v18, v19, v20, v21))
    {
      objc_msgSend_historyToken(*(void **)(a1 + 32), v22, v23, v24, v25);
      v39 = (void *)objc_claimAutoreleasedReturnValue();
      v221 = objc_msgSend_historyTokenOffset(*(void **)(a1 + 32), v46, v47, v48, v49);
    }
    else
    {
      BDSCloudKitLog();
      v26 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v26, OS_LOG_TYPE_DEFAULT))
      {
        objc_msgSend_entityName(*(void **)(a1 + 40), v27, v28, v29, v30);
        v31 = (void *)objc_claimAutoreleasedReturnValue();
        v32 = *(_QWORD *)(a1 + 32);
        v37 = (void *)objc_msgSend_mutableCopy(v12, v33, v34, v35, v36);
        *(_DWORD *)buf = 138543874;
        v223 = v31;
        v224 = 2114;
        v225 = v32;
        v226 = 2114;
        v227 = v37;
        _os_log_impl(&dword_227D4F000, v26, OS_LOG_TYPE_DEFAULT, "BCCloudDataManager %{public}@ getChangesSince -- About to reset historyToken, cloudSyncVersions:%{public}@, currentSyncVersions:%{public}@", buf, 0x20u);

      }
      v39 = 0;
    }
    v51 = (void **)(a1 + 40);
    v50 = *(void **)(a1 + 40);
    v220 = 0;
    objc_msgSend__fetchHistoryAfterToken_inMoc_error_(v50, v38, (uint64_t)v39, (uint64_t)v11, (uint64_t)&v220);
    v52 = (void *)objc_claimAutoreleasedReturnValue();
    v53 = v220;
    if (!v53)
      goto LABEL_21;
    v58 = v53;
    if (!objc_msgSend__isTokenInvalidError_(*v51, v54, (uint64_t)v53, v56, v57))
      goto LABEL_16;
    BDSCloudKitLog();
    v59 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v59, OS_LOG_TYPE_FAULT))
    {
      objc_msgSend_entityName(*(void **)(a1 + 40), v60, v61, v62, v63);
      v193 = (void *)objc_claimAutoreleasedReturnValue();
      v203 = v52;
      v194 = *(void **)(a1 + 32);
      v199 = (void *)objc_msgSend_mutableCopy(v204, v195, v196, v197, v198);
      *(_DWORD *)buf = 138544130;
      v223 = v193;
      v224 = 2114;
      v225 = (uint64_t)v58;
      v226 = 2114;
      v227 = v194;
      v52 = v203;
      v228 = 2114;
      v229 = v199;
      _os_log_fault_impl(&dword_227D4F000, v59, OS_LOG_TYPE_FAULT, "BCCloudDataManager %{public}@ getChangesSince -- fetchHistoryAfterToken encountered error: %{public}@. About to reset historyToken, cloudSyncVersions:%{public}@, currentSyncVersions:%{public}@", buf, 0x2Au);

    }
    v221 = 0;

    v64 = *v51;
    v219 = 0;
    objc_msgSend__fetchHistoryAfterToken_inMoc_error_(v64, v65, 0, (uint64_t)v11, (uint64_t)&v219);
    v66 = objc_claimAutoreleasedReturnValue();
    v58 = v219;

    v39 = 0;
    v52 = (void *)v66;
    if (v58)
    {
LABEL_16:
      BDSCloudKitLog();
      v67 = (char *)objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled((os_log_t)v67, OS_LOG_TYPE_ERROR))
        sub_227E5EED0((void **)(a1 + 40), v67, v68, v69, v70);

      objc_msgSend__logError_at_(WeakRetained, v71, (uint64_t)v58, (uint64_t)CFSTR("getChangesSince - fetchHistory error"), v72);
      objc_msgSend_mq_sanitizeError_(WeakRetained, v73, (uint64_t)v58, v74, v75);
      v76 = (void *)objc_claimAutoreleasedReturnValue();

      v77 = _Block_copy(*(const void **)(a1 + 48));
      v78 = v77;
      if (v77)
        (*((void (**)(void *, _QWORD, _QWORD, _QWORD, void *, _QWORD))v77 + 2))(v77, 0, 0, 0, v76, 0);
      v79 = 0;
      v45 = v204;
    }
    else
    {
LABEL_21:
      v201 = v39;
      v207 = (uint64_t)v11;
      objc_msgSend_set(MEMORY[0x24BDBCEF0], v54, v55, v56, v57);
      v209 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend_set(MEMORY[0x24BDBCEF0], v80, v81, v82, v83);
      v208 = (void *)objc_claimAutoreleasedReturnValue();
      objc_opt_class();
      v202 = v52;
      if ((objc_opt_isKindOfClass() & 1) != 0)
      {
        v88 = v52;
        v215 = 0u;
        v216 = 0u;
        v217 = 0u;
        v218 = 0u;
        objc_msgSend_result(v88, v89, v90, v91, v92);
        obj = (id)objc_claimAutoreleasedReturnValue();
        v94 = objc_msgSend_countByEnumeratingWithState_objects_count_(obj, v93, (uint64_t)&v215, (uint64_t)v232, 16);
        if (v94)
        {
          v95 = v94;
          v200 = v88;
          v96 = 0;
          v210 = 0;
          v97 = *(_QWORD *)v216;
          while (2)
          {
            v98 = 0;
            v205 = v95;
            do
            {
              if (*(_QWORD *)v216 != v97)
                objc_enumerationMutation(obj);
              v99 = *(void **)(*((_QWORD *)&v215 + 1) + 8 * v98);
              v100 = (void *)MEMORY[0x22E2AA24C]();
              if (objc_msgSend_signalDataChangedTransaction(WeakRetained, v101, v102, v103, v104)
                && v96 > 0x1F)
              {
                objc_autoreleasePoolPop(v100);
                v135 = 1;
                goto LABEL_38;
              }
              objc_opt_class();
              if ((objc_opt_isKindOfClass() & 1) != 0)
              {
                v105 = v99;
                v106 = a1;
                v107 = *(_QWORD *)(a1 + 64);
                objc_msgSend_privacyDelegate(WeakRetained, v108, v109, v110, v111);
                v112 = (void *)objc_claimAutoreleasedReturnValue();
                v213 = 0;
                v214 = 0;
                v114 = objc_msgSend_bds_atOffset_getAtMost_moc_entityClass_privacyDelegate_updated_tombstones_(v105, v113, (uint64_t)&v221, 32 - v96, v207, v107, v112, &v214, &v213);
                v115 = v214;
                v116 = v213;

                if (v114)
                {
                  objc_msgSend_token(v105, v117, v118, v119, v120);
                  v121 = objc_claimAutoreleasedReturnValue();

                  v221 = 0;
                  v210 = (void *)v121;
                }
                objc_msgSend_addObjectsFromArray_(v208, v117, (uint64_t)v115, v119, v120);
                objc_msgSend_addObjectsFromArray_(v209, v122, (uint64_t)v116, v123, v124);
                v129 = objc_msgSend_count(v208, v125, v126, v127, v128);
                v96 = objc_msgSend_count(v209, v130, v131, v132, v133) + v129;

                a1 = v106;
                v95 = v205;
              }
              objc_autoreleasePoolPop(v100);
              ++v98;
            }
            while (v95 != v98);
            v95 = objc_msgSend_countByEnumeratingWithState_objects_count_(obj, v134, (uint64_t)&v215, (uint64_t)v232, 16);
            if (v95)
              continue;
            break;
          }
          v135 = 0;
LABEL_38:
          v136 = (uint64_t)v210;
          v88 = v200;
        }
        else
        {
          v135 = 0;
          v136 = 0;
        }

      }
      else
      {
        v135 = 0;
        v136 = 0;
      }
      v45 = v204;
      v137 = objc_msgSend_syncVersion(v204, v84, v85, v86, v87);
      if (v137 != objc_msgSend_cloudVersion(v204, v138, v139, v140, v141))
      {
        v146 = objc_msgSend_cloudVersion(v204, v142, v143, v144, v145);
        objc_msgSend_setSyncVersion_(v204, v147, v146, v148, v149);
      }
      if (v136)
        objc_msgSend_setHistoryToken_(v204, v142, v136, v144, v145);
      v211 = (void *)v136;
      objc_msgSend_setHistoryTokenOffset_(v204, v142, v221, v144, v145);
      if (objc_msgSend_hasChanges(v204, v150, v151, v152, v153))
      {
        objc_msgSend_moc(WeakRetained, v154, v155, v156, v157);
        v158 = (void *)objc_claimAutoreleasedReturnValue();
        v212 = 0;
        objc_msgSend_save_(v158, v159, (uint64_t)&v212, v160, v161);
        v162 = v212;

        objc_msgSend__logError_at_(WeakRetained, v163, (uint64_t)v162, (uint64_t)CFSTR("getChangesSince - save"), v164);
      }
      v165 = (void *)objc_msgSend_mutableCopy(v204, v154, v155, v156, v157);
      BDSCloudKitLog();
      v166 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v166, OS_LOG_TYPE_DEFAULT))
      {
        objc_msgSend_entityName(WeakRetained, v167, v168, v169, v170);
        v171 = (void *)objc_claimAutoreleasedReturnValue();
        v176 = objc_msgSend_count(v208, v172, v173, v174, v175);
        *(_DWORD *)buf = 138544386;
        v223 = v171;
        v224 = 2048;
        v225 = v176;
        v226 = 2112;
        v227 = v208;
        v228 = 2114;
        v229 = v165;
        v230 = 1024;
        v231 = v135;
        _os_log_impl(&dword_227D4F000, v166, OS_LOG_TYPE_DEFAULT, "BCCloudDataManager %{public}@ getChangesSince returning changedObjects:%lu (%@) currentSyncVersions: %{public}@, fetchAgain:%d", buf, 0x30u);

      }
      BDSCloudKitLog();
      v177 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v177, OS_LOG_TYPE_DEFAULT))
      {
        objc_msgSend_entityName(WeakRetained, v178, v179, v180, v181);
        v182 = (void *)objc_claimAutoreleasedReturnValue();
        v187 = objc_msgSend_count(v209, v183, v184, v185, v186);
        *(_DWORD *)buf = 138544386;
        v223 = v182;
        v224 = 2048;
        v225 = v187;
        v226 = 2112;
        v227 = v209;
        v228 = 2114;
        v229 = v165;
        v230 = 1024;
        v231 = v135;
        _os_log_impl(&dword_227D4F000, v177, OS_LOG_TYPE_DEFAULT, "BCCloudDataManager %{public}@ getChangesSince returning deletedObjects:%lu (%@) currentSyncVersions: %{public}@, fetchAgain:%d", buf, 0x30u);

      }
      objc_msgSend_mq_sanitizeError_(WeakRetained, v188, 0, v189, v190);
      v76 = (void *)objc_claimAutoreleasedReturnValue();
      v191 = _Block_copy(*(const void **)(a1 + 48));
      v192 = v191;
      v78 = v209;
      if (v191)
        (*((void (**)(void *, void *, void *, void *, void *, uint64_t))v191 + 2))(v191, v208, v209, v165, v76, v135);

      v11 = (void *)v207;
      v39 = v201;
      v52 = v202;
      v79 = v211;
    }

  }
  else
  {
    BDSCloudKitLog();
    v40 = (char *)objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled((os_log_t)v40, OS_LOG_TYPE_FAULT))
      sub_227E5EE54(a1, v40, v41, v42, v43);

    v44 = _Block_copy(*(const void **)(a1 + 48));
    v45 = v44;
    if (v44)
      (*((void (**)(void *, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))v44 + 2))(v44, 0, 0, 0, 0, 0);
  }

  kdebug_trace();
}

void sub_227DCAF00(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_227DCAF24(uint64_t a1)
{
  NSObject *v2;
  void *v3;
  void *v4;

  BDSCloudKitLog();
  v2 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_ERROR))
    sub_227E5EA38();

  v3 = _Block_copy(*(const void **)(a1 + 32));
  v4 = v3;
  if (v3)
    (*((void (**)(void *, _QWORD, _QWORD))v3 + 2))(v3, 0, 0);

}

void sub_227DCAF90(uint64_t a1)
{
  id WeakRetained;
  const char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  NSObject *v8;
  const char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  const char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  const char *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  const char *v24;
  uint64_t v25;
  uint64_t v26;
  const char *v27;
  uint64_t v28;
  void *v29;
  id v30;
  const char *v31;
  uint64_t v32;
  const char *v33;
  uint64_t v34;
  const char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  const char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  const char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  const char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  const char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void *v58;
  const char *v59;
  uint64_t v60;
  void *v61;
  void *v62;
  void *v63;
  void *v64;
  void *v65;
  uint64_t v66;
  uint64_t v67;
  void (*v68)(uint64_t, void *);
  void *v69;
  id v70;
  id v71;
  __int128 *p_buf;
  id v73;
  __int128 buf;
  uint64_t v75;
  BOOL v76;
  uint64_t v77;

  v77 = *MEMORY[0x24BDAC8D0];
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  objc_msgSend_moc(WeakRetained, v3, v4, v5, v6);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  if (v7)
  {
    BDSCloudKitLog();
    v8 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend_entityName(WeakRetained, v9, v10, v11, v12);
      v13 = (void *)objc_claimAutoreleasedReturnValue();
      LODWORD(buf) = 138412290;
      *(_QWORD *)((char *)&buf + 4) = v13;
      _os_log_impl(&dword_227D4F000, v8, OS_LOG_TYPE_DEFAULT, "BCCloudDataManager %@ #dissociateCloudData", (uint8_t *)&buf, 0xCu);

    }
    v14 = (void *)MEMORY[0x24BDBB678];
    objc_msgSend_entityName(WeakRetained, v15, v16, v17, v18);
    v19 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_fetchRequestWithEntityName_(v14, v20, (uint64_t)v19, v21, v22);
    v23 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend_setFetchBatchSize_(v23, v24, 20, v25, v26);
    v73 = 0;
    objc_msgSend_executeFetchRequest_error_(v7, v27, (uint64_t)v23, (uint64_t)&v73, v28);
    v29 = (void *)objc_claimAutoreleasedReturnValue();
    v30 = v73;
    objc_msgSend__logError_at_(WeakRetained, v31, (uint64_t)v30, (uint64_t)CFSTR("dissociateCloudData - fetch"), v32);
    *(_QWORD *)&buf = 0;
    *((_QWORD *)&buf + 1) = &buf;
    v75 = 0x2020000000;
    v76 = v30 == 0;
    v66 = MEMORY[0x24BDAC760];
    v67 = 3221225472;
    v68 = sub_227DCB284;
    v69 = &unk_24F08BD80;
    v71 = WeakRetained;
    p_buf = &buf;
    v70 = v7;
    objc_msgSend_bds_traverseBatchesOfSize_block_(v29, v33, 20, (uint64_t)&v66, v34);
    if (objc_msgSend_signalDataChangedTransaction(WeakRetained, v35, v36, v37, v38, v66, v67, v68, v69))
    {
      objc_msgSend_cloudKitController(WeakRetained, v39, v40, v41, v42);
      v43 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend_transactionManager(v43, v44, v45, v46, v47);
      v48 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend_entityName(WeakRetained, v49, v50, v51, v52);
      v53 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend_notificationName(WeakRetained, v54, v55, v56, v57);
      v58 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend_signalDataChangeTransactionForEntityName_notificationName_(v48, v59, (uint64_t)v53, (uint64_t)v58, v60);

    }
    objc_msgSend_mq_sanitizeError_(WeakRetained, v39, (uint64_t)v30, v41, v42);
    v61 = (void *)objc_claimAutoreleasedReturnValue();

    v62 = _Block_copy(*(const void **)(a1 + 32));
    v63 = v62;
    if (v62)
      (*((void (**)(void *, _QWORD, void *))v62 + 2))(v62, *(unsigned __int8 *)(*((_QWORD *)&buf + 1) + 24), v61);

    _Block_object_dispose(&buf, 8);
  }
  else
  {
    v64 = _Block_copy(*(const void **)(a1 + 32));
    v65 = v64;
    if (v64)
      (*((void (**)(void *, _QWORD, _QWORD))v64 + 2))(v64, 0, 0);

  }
}

void sub_227DCB260(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_227DCB284(uint64_t a1, void *a2)
{
  id v3;
  const char *v4;
  uint64_t v5;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t i;
  void *v13;
  const char *v14;
  uint64_t v15;
  const char *v16;
  uint64_t v17;
  uint64_t v18;
  const char *v19;
  uint64_t v20;
  uint64_t v21;
  const char *v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  id v26;
  const char *v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  BOOL v31;
  char v32;
  id v33;
  const char *v34;
  uint64_t v35;
  const char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t j;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  id v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  _BYTE v50[128];
  _BYTE v51[128];
  uint64_t v52;

  v52 = *MEMORY[0x24BDAC8D0];
  v3 = a2;
  v46 = 0u;
  v47 = 0u;
  v48 = 0u;
  v49 = 0u;
  v5 = objc_msgSend_countByEnumeratingWithState_objects_count_(v3, v4, (uint64_t)&v46, (uint64_t)v51, 16);
  if (v5)
  {
    v10 = v5;
    v11 = *(_QWORD *)v47;
    do
    {
      for (i = 0; i != v10; ++i)
      {
        if (*(_QWORD *)v47 != v11)
          objc_enumerationMutation(v3);
        v13 = *(void **)(*((_QWORD *)&v46 + 1) + 8 * i);
        objc_msgSend_setSyncGeneration_(v13, v6, 0, v8, v9);
        objc_msgSend_setValue_forKey_(v13, v14, 0, (uint64_t)CFSTR("saltedHashedID"), v15);
        objc_msgSend_setSystemFields_(v13, v16, 0, v17, v18);
        objc_msgSend_setCkSystemFields_(v13, v19, 0, v20, v21);
      }
      v10 = objc_msgSend_countByEnumeratingWithState_objects_count_(v3, v6, (uint64_t)&v46, (uint64_t)v51, 16);
    }
    while (v10);
  }
  if (objc_msgSend_hasChanges(*(void **)(a1 + 32), v6, v7, v8, v9))
  {
    v25 = *(void **)(a1 + 32);
    v45 = 0;
    objc_msgSend_save_(v25, v22, (uint64_t)&v45, v23, v24);
    v26 = v45;
    v29 = v26;
    v30 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
    if (*(_BYTE *)(v30 + 24))
      v31 = v26 == 0;
    else
      v31 = 0;
    v32 = v31;
    *(_BYTE *)(v30 + 24) = v32;
    objc_msgSend__logError_at_(*(void **)(a1 + 40), v27, (uint64_t)v26, (uint64_t)CFSTR("dissociateCloudData - save"), v28);

  }
  v43 = 0u;
  v44 = 0u;
  v41 = 0u;
  v42 = 0u;
  v33 = v3;
  v35 = objc_msgSend_countByEnumeratingWithState_objects_count_(v33, v34, (uint64_t)&v41, (uint64_t)v50, 16);
  if (v35)
  {
    v38 = v35;
    v39 = *(_QWORD *)v42;
    do
    {
      for (j = 0; j != v38; ++j)
      {
        if (*(_QWORD *)v42 != v39)
          objc_enumerationMutation(v33);
        objc_msgSend_refreshObject_mergeChanges_(*(void **)(a1 + 32), v36, *(_QWORD *)(*((_QWORD *)&v41 + 1) + 8 * j), 0, v37, (_QWORD)v41);
      }
      v38 = objc_msgSend_countByEnumeratingWithState_objects_count_(v33, v36, (uint64_t)&v41, (uint64_t)v50, 16);
    }
    while (v38);
  }

}

void sub_227DCB674(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 64));
  _Unwind_Resume(a1);
}

void sub_227DCB6A0(uint64_t a1)
{
  NSObject *v2;
  const char *v3;
  void (**v4)(void *, _QWORD, void *);
  void *v5;
  uint8_t v6[16];

  BDSCloudKitLog();
  v2 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_ERROR))
  {
    *(_WORD *)v6 = 0;
    _os_log_impl(&dword_227D4F000, v2, OS_LOG_TYPE_ERROR, "No managed object context! #hasSaltChangedWithCompletion", v6, 2u);
  }

  v4 = (void (**)(void *, _QWORD, void *))_Block_copy(*(const void **)(a1 + 32));
  if (v4)
  {
    objc_msgSend_errorWithDomain_code_userInfo_(MEMORY[0x24BDD1540], v3, (uint64_t)CFSTR("BDSErrorDomain"), 1002, 0);
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    v4[2](v4, 0, v5);

  }
}

void sub_227DCB75C(uint64_t a1)
{
  id WeakRetained;
  const char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  const char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  const char *v14;
  uint64_t v15;
  uint64_t v16;
  void (**v17)(_QWORD, _QWORD, _QWORD);
  const char *v18;
  uint64_t v19;
  uint64_t v20;
  const char *v21;
  uint64_t v22;
  uint64_t v23;
  const char *v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  const char *v28;
  uint64_t v29;
  uint64_t v30;
  const char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  const char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  const char *v41;
  uint64_t v42;
  NSObject *v43;
  void *v44;
  id v45;
  const char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  const char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void (**v54)(_QWORD, _QWORD, _QWORD);
  const char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  const char *v60;
  uint64_t v61;
  uint64_t v62;
  const char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  const char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  void *v72;
  const char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  int v77;
  NSObject *v78;
  void *v79;
  void *v80;
  NSObject *v81;
  const char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  void *v86;
  const char *v87;
  const char *v88;
  id v89;
  uint8_t buf[4];
  void *v91;
  __int16 v92;
  int v93;
  uint64_t v94;

  v94 = *MEMORY[0x24BDAC8D0];
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  objc_msgSend_moc(WeakRetained, v3, v4, v5, v6);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  if (v7)
  {
    v8 = objc_alloc(MEMORY[0x24BDBB678]);
    objc_msgSend_entityName(WeakRetained, v9, v10, v11, v12);
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    v17 = (void (**)(_QWORD, _QWORD, _QWORD))objc_msgSend_initWithEntityName_(v8, v14, (uint64_t)v13, v15, v16);

    objc_msgSend_setReturnsObjectsAsFaults_(v17, v18, 0, v19, v20);
    objc_msgSend_setFetchLimit_(v17, v21, 1, v22, v23);
    objc_msgSend_predicateWithFormat_(MEMORY[0x24BDD1758], v24, (uint64_t)CFSTR("syncGeneration >= 1"), v25, v26);
    v27 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_setPredicate_(v17, v28, (uint64_t)v27, v29, v30);

    objc_msgSend_shared(MEMORY[0x24BE0FC08], v31, v32, v33, v34);
    v35 = (void *)objc_claimAutoreleasedReturnValue();
    v40 = objc_msgSend_verboseLoggingEnabled(v35, v36, v37, v38, v39);

    if (v40)
    {
      BDSCloudKitDevelopmentLog();
      v43 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v43, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 138543362;
        v91 = v17;
        _os_log_impl(&dword_227D4F000, v43, OS_LOG_TYPE_DEFAULT, "\"\\\"BCCloudDataManager hasSaltChangedWithCompletion:%{public}@\\\"\"", buf, 0xCu);
      }

    }
    v89 = 0;
    objc_msgSend_executeFetchRequest_error_(v7, v41, (uint64_t)v17, (uint64_t)&v89, v42);
    v44 = (void *)objc_claimAutoreleasedReturnValue();
    v45 = v89;
    if (objc_msgSend_count(v44, v46, v47, v48, v49))
    {
      objc_msgSend_firstObject(v44, v50, v51, v52, v53);
      v54 = (void (**)(_QWORD, _QWORD, _QWORD))objc_claimAutoreleasedReturnValue();
      objc_msgSend_privacyDelegate(WeakRetained, v55, v56, v57, v58);
      v59 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend_setPrivacyDelegate_(v54, v60, (uint64_t)v59, v61, v62);

      v67 = objc_msgSend_hasValidSalt(v54, v63, v64, v65, v66) ^ 1;
      objc_msgSend_shared(MEMORY[0x24BE0FC08], v68, v69, v70, v71);
      v72 = (void *)objc_claimAutoreleasedReturnValue();
      v77 = objc_msgSend_verboseLoggingEnabled(v72, v73, v74, v75, v76);

      if (v77)
      {
        BDSCloudKitDevelopmentLog();
        v78 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v78, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)buf = 138412546;
          v91 = v54;
          v92 = 1024;
          v93 = v67;
          _os_log_impl(&dword_227D4F000, v78, OS_LOG_TYPE_DEFAULT, "\"\\\"Testing with %@  %{BOOL}d\\\"\"", buf, 0x12u);
        }

      }
      v79 = _Block_copy(*(const void **)(a1 + 32));
      v80 = v79;
      if (v79)
        (*((void (**)(void *, uint64_t, _QWORD))v79 + 2))(v79, v67, 0);
    }
    else
    {
      v54 = (void (**)(_QWORD, _QWORD, _QWORD))_Block_copy(*(const void **)(a1 + 32));
      if (!v54)
      {
LABEL_20:

        goto LABEL_21;
      }
      objc_msgSend_errorWithDomain_code_userInfo_(MEMORY[0x24BDD1540], v88, (uint64_t)CFSTR("BDSErrorDomain"), 1003, 0);
      v80 = (void *)objc_claimAutoreleasedReturnValue();
      ((void (**)(_QWORD, _QWORD, void *))v54)[2](v54, 0, v80);
    }

    goto LABEL_20;
  }
  BDSCloudKitLog();
  v81 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v81, OS_LOG_TYPE_ERROR))
  {
    objc_msgSend_entityName(WeakRetained, v82, v83, v84, v85);
    v86 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 138412290;
    v91 = v86;
    _os_log_impl(&dword_227D4F000, v81, OS_LOG_TYPE_ERROR, "BCCloudDataManager %@ #hasSaltChangedWithCompletion no moc", buf, 0xCu);

  }
  v17 = (void (**)(_QWORD, _QWORD, _QWORD))_Block_copy(*(const void **)(a1 + 32));
  if (v17)
  {
    objc_msgSend_errorWithDomain_code_userInfo_(MEMORY[0x24BDD1540], v87, (uint64_t)CFSTR("BDSErrorDomain"), 1002, 0);
    v45 = (id)objc_claimAutoreleasedReturnValue();
    ((void (**)(_QWORD, _QWORD, id))v17)[2](v17, 0, v45);
LABEL_21:

  }
}

void sub_227DCBC54(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location, char a17)
{
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Block_object_dispose(&a17, 8);
  _Unwind_Resume(a1);
}

void sub_227DCBC84(uint64_t a1)
{
  id WeakRetained;
  const char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  const char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  const char *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  const char *v21;
  uint64_t v22;
  uint64_t v23;
  const char *v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  const char *v28;
  uint64_t v29;
  uint64_t v30;
  const char *v31;
  uint64_t v32;
  void *v33;
  id v34;
  const char *v35;
  uint64_t v36;
  const char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  NSObject *v41;
  const char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  const char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  id v52;
  const char *v53;
  uint64_t v54;
  const char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t i;
  void *v62;
  void *v63;
  const char *v64;
  uint64_t v65;
  uint64_t v66;
  void *v67;
  void *v68;
  BDSCloudSyncDiagnosticCloudDataInfo *v69;
  const char *v70;
  uint64_t v71;
  void *v72;
  const char *v73;
  uint64_t v74;
  uint64_t v75;
  id v76;
  void *v77;
  id v78;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  id v84;
  uint8_t v85[128];
  uint8_t buf[4];
  void *v87;
  __int16 v88;
  uint64_t v89;
  uint64_t v90;

  v90 = *MEMORY[0x24BDAC8D0];
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  objc_msgSend_moc(WeakRetained, v2, v3, v4, v5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  if (v6)
  {
    BDSCloudKitLog();
    v7 = (char *)objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled((os_log_t)v7, OS_LOG_TYPE_DEBUG))
      sub_227E5EF54(WeakRetained, v7, v8, v9, v10);

    v11 = objc_alloc(MEMORY[0x24BDBB678]);
    objc_msgSend_entityName(WeakRetained, v12, v13, v14, v15);
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    v20 = (void *)objc_msgSend_initWithEntityName_(v11, v17, (uint64_t)v16, v18, v19);

    objc_msgSend_setFetchBatchSize_(v20, v21, 64, v22, v23);
    objc_msgSend_predicateWithFormat_(MEMORY[0x24BDD1758], v24, (uint64_t)CFSTR("editGeneration > syncGeneration"), v25, v26);
    v27 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend_setPredicate_(v20, v28, (uint64_t)v27, v29, v30);

    v84 = 0;
    objc_msgSend_executeFetchRequest_error_(v6, v31, (uint64_t)v20, (uint64_t)&v84, v32);
    v33 = (void *)objc_claimAutoreleasedReturnValue();
    v34 = v84;
    objc_msgSend__logError_at_(WeakRetained, v35, (uint64_t)v34, (uint64_t)CFSTR("diagnosticDirtyCloudDataInfos"), v36);
    if (objc_msgSend_count(v33, v37, v38, v39, v40))
    {
      v76 = v34;
      v77 = v20;
      BDSCloudKitLog();
      v41 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v41, OS_LOG_TYPE_DEFAULT))
      {
        objc_msgSend_entityName(WeakRetained, v42, v43, v44, v45);
        v46 = (void *)objc_claimAutoreleasedReturnValue();
        v51 = objc_msgSend_count(v33, v47, v48, v49, v50);
        *(_DWORD *)buf = 138412546;
        v87 = v46;
        v88 = 2048;
        v89 = v51;
        _os_log_impl(&dword_227D4F000, v41, OS_LOG_TYPE_DEFAULT, "BCCloudDataManager diagnosticDirtyCloudDataInfos %@, returning %lu results", buf, 0x16u);

      }
      v78 = WeakRetained;

      v82 = 0u;
      v83 = 0u;
      v80 = 0u;
      v81 = 0u;
      v52 = v33;
      v54 = objc_msgSend_countByEnumeratingWithState_objects_count_(v52, v53, (uint64_t)&v80, (uint64_t)v85, 16);
      if (v54)
      {
        v59 = v54;
        v60 = *(_QWORD *)v81;
        do
        {
          for (i = 0; i != v59; ++i)
          {
            if (*(_QWORD *)v81 != v60)
              objc_enumerationMutation(v52);
            v62 = *(void **)(*((_QWORD *)&v80 + 1) + 8 * i);
            objc_msgSend_identifier(v62, v55, v56, v57, v58, v76);
            v63 = (void *)objc_claimAutoreleasedReturnValue();
            objc_opt_class();
            objc_msgSend_valueForKey_(v62, v64, (uint64_t)CFSTR("saltedHashedID"), v65, v66);
            v67 = (void *)objc_claimAutoreleasedReturnValue();
            BUDynamicCast();
            v68 = (void *)objc_claimAutoreleasedReturnValue();

            v69 = [BDSCloudSyncDiagnosticCloudDataInfo alloc];
            v72 = (void *)objc_msgSend_initWithIdentifier_saltedHashedID_(v69, v70, (uint64_t)v63, (uint64_t)v68, v71);
            objc_msgSend_addObject_(*(void **)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40), v73, (uint64_t)v72, v74, v75);

          }
          v59 = objc_msgSend_countByEnumeratingWithState_objects_count_(v52, v55, (uint64_t)&v80, (uint64_t)v85, 16);
        }
        while (v59);
      }

      WeakRetained = v78;
      v20 = v77;
      v34 = v76;
    }

  }
}

void sub_227DCC138(uint64_t a1, void *a2)
{
  void *v3;
  id v4;
  const char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  const char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  const char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  const char *v20;
  uint64_t v21;
  uint64_t v22;
  const char *v23;
  uint64_t v24;
  uint64_t v25;
  id v26;

  v3 = (void *)MEMORY[0x24BDD17C8];
  v4 = a2;
  objc_msgSend_recordID(v4, v5, v6, v7, v8);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_recordName(v9, v10, v11, v12, v13);
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_recordChangeTag(v4, v15, v16, v17, v18);
  v19 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend_stringWithFormat_(v3, v20, (uint64_t)CFSTR("%@-%@"), v21, v22, v14, v19);
  v26 = (id)objc_claimAutoreleasedReturnValue();

  objc_msgSend_addObject_(*(void **)(a1 + 32), v23, (uint64_t)v26, v24, v25);
}

void sub_227DCC1F8(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  NSObject *v9;

  _os_log_fault_impl(a1, v9, OS_LOG_TYPE_FAULT, a4, &a9, 0xCu);
}

void sub_227DCC20C(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  NSObject *v9;

  _os_log_debug_impl(a1, v9, OS_LOG_TYPE_DEBUG, a4, &a9, 0x12u);
}

uint64_t _ReadingHistoryUpdateProperties.daysData.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t _ReadingHistoryUpdateProperties.editGeneration.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

BOOL sub_227DCC230(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_227DCC248()
{
  sub_227E6071C();
  sub_227E60728();
  return sub_227E60734();
}

uint64_t sub_227DCC28C()
{
  return sub_227E60728();
}

uint64_t sub_227DCC2B4()
{
  sub_227E6071C();
  sub_227E60728();
  return sub_227E60734();
}

uint64_t sub_227DCC2F4()
{
  _BYTE *v0;

  if (*v0)
    return 0x656E654774696465;
  else
    return 0x6174614473796164;
}

uint64_t sub_227DCC33C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_227DD3160(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_227DCC360()
{
  return 0;
}

void sub_227DCC36C(_BYTE *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_227DCC378()
{
  sub_227DCC508();
  return sub_227E60758();
}

uint64_t sub_227DCC3A0()
{
  sub_227DCC508();
  return sub_227E60764();
}

uint64_t _ReadingHistoryUpdateProperties.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;
  char v12;
  char v13;
  uint64_t v14;

  v4 = sub_227D68330(&qword_255928238);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v6);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v1;
  v11 = v1[1];
  sub_227D572A4(a1, a1[3]);
  sub_227DCC508();
  sub_227E6074C();
  v14 = v9;
  v13 = 0;
  sub_227D68330(&qword_255928248);
  sub_227DCC54C();
  sub_227E6065C();
  if (!v2)
  {
    v12 = 1;
    sub_227E60650();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
}

unint64_t sub_227DCC508()
{
  unint64_t result;

  result = qword_255928240;
  if (!qword_255928240)
  {
    result = MEMORY[0x22E2AA7D4](&unk_227E6E9EC, &type metadata for _ReadingHistoryUpdateProperties.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255928240);
  }
  return result;
}

unint64_t sub_227DCC54C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255928250;
  if (!qword_255928250)
  {
    v1 = sub_227D6717C(&qword_255928248);
    v2[0] = sub_227D51624(&qword_255928258, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE920]);
    v2[1] = sub_227DCC5D0();
    result = MEMORY[0x22E2AA7D4](MEMORY[0x24BEE04C0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255928250);
  }
  return result;
}

unint64_t sub_227DCC5D0()
{
  unint64_t result;

  result = qword_255928260;
  if (!qword_255928260)
  {
    result = MEMORY[0x22E2AA7D4](MEMORY[0x24BDCDDF8], MEMORY[0x24BDCDDE8]);
    atomic_store(result, (unint64_t *)&qword_255928260);
  }
  return result;
}

uint64_t _ReadingHistoryUpdateProperties.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[16];
  uint64_t v14;

  v5 = sub_227D68330(&qword_255928268);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  v9 = &v13[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_227D572A4(a1, a1[3]);
  sub_227DCC508();
  sub_227E60740();
  if (v2)
    return sub_227D58120((uint64_t)a1);
  sub_227D68330(&qword_255928248);
  v13[15] = 0;
  sub_227DCC7A8();
  sub_227E60608();
  v10 = v14;
  v13[14] = 1;
  swift_bridgeObjectRetain();
  v11 = sub_227E605FC();
  (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v9, v5);
  *a2 = v10;
  a2[1] = v11;
  sub_227D58120((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

unint64_t sub_227DCC7A8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255928270;
  if (!qword_255928270)
  {
    v1 = sub_227D6717C(&qword_255928248);
    v2[0] = sub_227D51624(&qword_255928278, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE960]);
    v2[1] = sub_227DCC82C();
    result = MEMORY[0x22E2AA7D4](MEMORY[0x24BEE04E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255928270);
  }
  return result;
}

unint64_t sub_227DCC82C()
{
  unint64_t result;

  result = qword_255928280;
  if (!qword_255928280)
  {
    result = MEMORY[0x22E2AA7D4](MEMORY[0x24BDCDE38], MEMORY[0x24BDCDDE8]);
    atomic_store(result, (unint64_t *)&qword_255928280);
  }
  return result;
}

uint64_t sub_227DCC870@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return _ReadingHistoryUpdateProperties.init(from:)(a1, a2);
}

uint64_t sub_227DCC884(_QWORD *a1)
{
  return _ReadingHistoryUpdateProperties.encode(to:)(a1);
}

uint64_t ReadingHistoryUpdate.value.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + OBJC_IVAR___BDSReadingHistoryUpdate_value + 8);
  *a1 = *(_QWORD *)(v1 + OBJC_IVAR___BDSReadingHistoryUpdate_value);
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

id ReadingHistoryUpdate.__allocating_init(value:)(uint64_t *a1)
{
  objc_class *v1;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  objc_super v8;

  v3 = (char *)objc_allocWithZone(v1);
  v4 = *a1;
  v5 = a1[1];
  *(_QWORD *)&v3[OBJC_IVAR___BDSReadingHistoryUpdate____lazy_storage___days] = 0;
  v6 = &v3[OBJC_IVAR___BDSReadingHistoryUpdate_value];
  *(_QWORD *)v6 = v4;
  *((_QWORD *)v6 + 1) = v5;
  v8.receiver = v3;
  v8.super_class = v1;
  return objc_msgSendSuper2(&v8, sel_init);
}

id ReadingHistoryUpdate.init(value:)(uint64_t *a1)
{
  char *v1;
  objc_class *ObjectType;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  objc_super v8;

  ObjectType = (objc_class *)swift_getObjectType();
  v4 = *a1;
  v5 = a1[1];
  *(_QWORD *)&v1[OBJC_IVAR___BDSReadingHistoryUpdate____lazy_storage___days] = 0;
  v6 = &v1[OBJC_IVAR___BDSReadingHistoryUpdate_value];
  *(_QWORD *)v6 = v4;
  *((_QWORD *)v6 + 1) = v5;
  v8.receiver = v1;
  v8.super_class = ObjectType;
  return objc_msgSendSuper2(&v8, sel_init);
}

uint64_t ReadingHistoryUpdate.__allocating_init(days:crdtContext:editGeneration:)(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  int64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  void (*v56)(char *, char *, uint64_t);
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  int v60;
  unint64_t v61;
  uint64_t v62;
  _BOOL8 v63;
  uint64_t v64;
  unint64_t v65;
  int v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t *v69;
  uint64_t v70;
  BOOL v71;
  uint64_t v72;
  void (*v73)(uint64_t, uint64_t);
  unint64_t v74;
  objc_class *v75;
  char *v76;
  uint64_t *v77;
  uint64_t v78;
  id v79;
  uint64_t result;
  unint64_t v81;
  unint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  Class v86;
  uint64_t v87;
  uint64_t v88;
  int64_t v89;
  uint64_t v90;
  __int128 v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  int v95;
  uint64_t v96;
  char *v97;
  char *v98;
  unsigned int v99;
  uint64_t v100;
  id v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  unint64_t v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  objc_super v110;

  v85 = a3;
  v101 = a2;
  v4 = sub_227E5FCD8();
  v107 = *(_QWORD *)(v4 - 8);
  v108 = v4;
  MEMORY[0x24BDAC7A8](v4, v5);
  v106 = (char *)&v81 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v103 = type metadata accessor for ReadingHistoryDay(0);
  v93 = *(_QWORD *)(v103 - 8);
  v8 = MEMORY[0x24BDAC7A8](v103, v7);
  v97 = (char *)&v81 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8, v10);
  v12 = (char *)&v81 - v11;
  v13 = sub_227E5F27C();
  v14 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900];
  v15 = *(_QWORD *)(v13 - 8);
  v17 = MEMORY[0x24BDAC7A8](v13, v16);
  v19 = MEMORY[0x24BDAC7A8](v17, v18);
  v84 = (char *)&v81 - v20;
  MEMORY[0x24BDAC7A8](v19, v21);
  v23 = (char *)&v81 - v22;
  v24 = sub_227D68330(&qword_255928298);
  v26 = MEMORY[0x24BDAC7A8](v24, v25);
  v28 = (char *)&v81 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v26, v29);
  v102 = (char *)&v81 - v30;
  sub_227D51624((unint64_t *)&qword_2559282A0, v14, MEMORY[0x24BDCE930]);
  v87 = sub_227E5FF00();
  v32 = 0;
  v94 = a1;
  v35 = *(_QWORD *)(a1 + 64);
  v34 = a1 + 64;
  v33 = v35;
  v36 = 1 << *(_BYTE *)(v34 - 32);
  v37 = -1;
  if (v36 < 64)
    v37 = ~(-1 << v36);
  v38 = v37 & v33;
  v39 = (unint64_t)(v36 + 63) >> 6;
  v99 = *MEMORY[0x24BE184E0];
  v81 = v39 - 1;
  v89 = v39;
  v82 = v39 - 5;
  v88 = v34;
  v83 = v34 + 40;
  *(_QWORD *)&v31 = 136315394;
  v91 = v31;
  v90 = MEMORY[0x24BEE4AD8] + 8;
  v100 = v15;
  v92 = v12;
  v98 = v28;
  if (!v38)
    goto LABEL_6;
LABEL_4:
  v104 = (v38 - 1) & v38;
  v105 = v32;
  v40 = __clz(__rbit64(v38)) | (v32 << 6);
LABEL_5:
  v41 = v94;
  (*(void (**)(char *, unint64_t, uint64_t))(v15 + 16))(v28, *(_QWORD *)(v94 + 48) + *(_QWORD *)(v15 + 72) * v40, v13);
  v42 = *(_QWORD *)(v41 + 56) + *(_QWORD *)(v93 + 72) * v40;
  v43 = sub_227D68330(&qword_2559282A8);
  sub_227DCD3D8(v42, (uint64_t)&v28[*(int *)(v43 + 48)]);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 56))(v28, 0, 1, v43);
  v44 = (uint64_t)v102;
  while (1)
  {
    sub_227D5B0DC((uint64_t)v28, v44, &qword_255928298);
    v48 = sub_227D68330(&qword_2559282A8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 48))(v44, 1, v48) == 1)
    {
      swift_release();
      v75 = v86;
      v76 = (char *)objc_allocWithZone(v86);
      *(_QWORD *)&v76[OBJC_IVAR___BDSReadingHistoryUpdate____lazy_storage___days] = 0;
      v77 = (uint64_t *)&v76[OBJC_IVAR___BDSReadingHistoryUpdate_value];
      v78 = v85;
      *v77 = v87;
      v77[1] = v78;
      v110.receiver = v76;
      v110.super_class = v75;
      v79 = objc_msgSendSuper2(&v110, sel_init);

      return (uint64_t)v79;
    }
    v49 = v44 + *(int *)(v48 + 48);
    v50 = v23;
    v51 = v23;
    v52 = v13;
    (*(void (**)(char *, uint64_t, uint64_t))(v15 + 32))(v51, v44, v13);
    sub_227DCD41C(v49, (uint64_t)v12);
    (*(void (**)(char *, _QWORD, uint64_t))(v107 + 104))(v106, v99, v108);
    sub_227D51624(&qword_2559282B0, type metadata accessor for ReadingHistoryDay, (uint64_t)&protocol conformance descriptor for ReadingHistoryDay);
    v53 = sub_227E5FD2C();
    v55 = v54;
    (*(void (**)(char *, uint64_t))(v107 + 8))(v106, v108);
    v56 = *(void (**)(char *, char *, uint64_t))(v15 + 16);
    v57 = (uint64_t)v84;
    v56(v84, v50, v52);
    sub_227DD00E0(v53, v55);
    v58 = v87;
    LODWORD(v96) = swift_isUniquelyReferenced_nonNull_native();
    v109 = v58;
    v59 = sub_227DD0124(v57);
    v61 = v59;
    v62 = *(_QWORD *)(v58 + 16);
    v63 = (v60 & 1) == 0;
    v64 = v62 + v63;
    if (__OFADD__(v62, v63))
      goto LABEL_44;
    if (*(_QWORD *)(v58 + 24) >= v64)
    {
      if ((v96 & 1) == 0)
      {
        v95 = v60;
        sub_227DD1D60();
        LOBYTE(v60) = v95;
      }
    }
    else
    {
      v95 = v60;
      sub_227DD02BC(v64, v96);
      v65 = sub_227DD0124(v57);
      v66 = v60 & 1;
      LOBYTE(v60) = v95;
      if ((v95 & 1) != v66)
        goto LABEL_46;
      v61 = v65;
    }
    v87 = v109;
    if ((v60 & 1) != 0)
    {
      v67 = *(_QWORD *)(v109 + 56) + 16 * v61;
      sub_227DD1FD4(*(_QWORD *)v67, *(_QWORD *)(v67 + 8));
      *(_QWORD *)v67 = v53;
      *(_QWORD *)(v67 + 8) = v55;
    }
    else
    {
      *(_QWORD *)(v109 + 8 * (v61 >> 6) + 64) |= 1 << v61;
      v56((char *)(*(_QWORD *)(v87 + 48) + *(_QWORD *)(v100 + 72) * v61), (char *)v57, v52);
      v68 = v87;
      v69 = (uint64_t *)(*(_QWORD *)(v87 + 56) + 16 * v61);
      *v69 = v53;
      v69[1] = v55;
      v70 = *(_QWORD *)(v68 + 16);
      v71 = __OFADD__(v70, 1);
      v72 = v70 + 1;
      if (v71)
        goto LABEL_45;
      *(_QWORD *)(v68 + 16) = v72;
    }
    swift_bridgeObjectRelease();
    v15 = v100;
    v73 = *(void (**)(uint64_t, uint64_t))(v100 + 8);
    v73(v57, v52);
    v74 = v55;
    v13 = v52;
    sub_227DD1FD4(v53, v74);
    v12 = v92;
    sub_227DCFC28((uint64_t)v92);
    v23 = v50;
    v73((uint64_t)v50, v13);
    v28 = v98;
    v38 = v104;
    v32 = v105;
    if (v104)
      goto LABEL_4;
LABEL_6:
    v45 = v32 + 1;
    if (__OFADD__(v32, 1))
      break;
    if (v45 >= v89)
    {
      v105 = v32;
      v44 = (uint64_t)v102;
    }
    else
    {
      v46 = *(_QWORD *)(v88 + 8 * v45);
      v44 = (uint64_t)v102;
      if (v46)
        goto LABEL_9;
      if ((uint64_t)(v32 + 2) >= v89)
      {
        v105 = v32 + 1;
      }
      else
      {
        v46 = *(_QWORD *)(v88 + 8 * (v32 + 2));
        if (v46)
        {
          v45 = v32 + 2;
LABEL_9:
          v104 = (v46 - 1) & v46;
          v105 = v45;
          v40 = __clz(__rbit64(v46)) + (v45 << 6);
          goto LABEL_5;
        }
        if ((uint64_t)(v32 + 3) >= v89)
        {
          v105 = v32 + 2;
        }
        else
        {
          v46 = *(_QWORD *)(v88 + 8 * (v32 + 3));
          if (v46)
          {
            v45 = v32 + 3;
            goto LABEL_9;
          }
          v45 = v32 + 4;
          if ((uint64_t)(v32 + 4) >= v89)
          {
            v105 = v32 + 3;
          }
          else
          {
            v46 = *(_QWORD *)(v88 + 8 * v45);
            if (v46)
              goto LABEL_9;
            while (v82 != v32)
            {
              v46 = *(_QWORD *)(v83 + 8 * v32++);
              if (v46)
              {
                v45 = v32 + 4;
                goto LABEL_9;
              }
            }
            v105 = v81;
          }
        }
      }
    }
    v47 = sub_227D68330(&qword_2559282A8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 56))(v28, 1, 1, v47);
    v104 = 0;
  }
  __break(1u);
LABEL_44:
  __break(1u);
LABEL_45:
  __break(1u);
LABEL_46:
  result = sub_227E606B0();
  __break(1u);
  return result;
}

uint64_t sub_227DCD3D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ReadingHistoryDay(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_227DCD41C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ReadingHistoryDay(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t ReadingHistoryUpdate.days.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = OBJC_IVAR___BDSReadingHistoryUpdate____lazy_storage___days;
  if (*(_QWORD *)(v0 + OBJC_IVAR___BDSReadingHistoryUpdate____lazy_storage___days))
  {
    v2 = *(_QWORD *)(v0 + OBJC_IVAR___BDSReadingHistoryUpdate____lazy_storage___days);
  }
  else
  {
    v2 = sub_227DCD53C(v0);
    *(_QWORD *)(v0 + v1) = v2;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_227DCD4C4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = ReadingHistoryUpdate.days.getter();
  *a1 = result;
  return result;
}

uint64_t sub_227DCD4EC(_QWORD *a1, _QWORD *a2)
{
  *(_QWORD *)(*a2 + OBJC_IVAR___BDSReadingHistoryUpdate____lazy_storage___days) = *a1;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t ReadingHistoryUpdate.days.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + OBJC_IVAR___BDSReadingHistoryUpdate____lazy_storage___days) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t sub_227DCD53C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  unint64_t v42;
  __int128 v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  int64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t *v56;
  unint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void (*v66)(unint64_t, uint64_t, uint64_t);
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD *v70;
  unint64_t v71;
  char v72;
  char v73;
  char v74;
  void (*v75)(uint64_t, uint64_t);
  uint64_t v76;
  uint64_t v77;
  _QWORD *v78;
  int isUniquelyReferenced_nonNull_native;
  char v80;
  unint64_t v81;
  uint64_t v82;
  _BOOL8 v83;
  uint64_t v84;
  char v85;
  unint64_t v86;
  char v87;
  _QWORD *v88;
  char *v89;
  uint64_t v90;
  unint64_t v91;
  unint64_t v92;
  uint64_t v93;
  BOOL v94;
  uint64_t v95;
  char *v96;
  uint64_t result;
  uint64_t v98;
  unint64_t v99;
  unint64_t v100;
  void (*v101)(unint64_t, uint64_t, uint64_t);
  uint64_t v102;
  void (*v103)(char *, uint64_t, uint64_t, uint64_t);
  char *v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  _QWORD *v108;
  uint64_t v109;
  int64_t v110;
  uint64_t v111;
  __int128 v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  char *v118;
  unint64_t v119;
  uint64_t v120;
  char *v121;
  _QWORD *v122;

  v2 = type metadata accessor for ReadingHistoryDay(0);
  v3 = *(_QWORD *)(v2 - 8);
  v115 = v2;
  v116 = v3;
  MEMORY[0x24BDAC7A8](v2, v4);
  v105 = (uint64_t)&v98 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_227D68330(&qword_253F39F90);
  v8 = MEMORY[0x24BDAC7A8](v6, v7);
  v104 = (char *)&v98 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v8, v10);
  v106 = (uint64_t)&v98 - v12;
  MEMORY[0x24BDAC7A8](v11, v13);
  v121 = (char *)&v98 - v14;
  v15 = sub_227E5F27C();
  v16 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900];
  v17 = *(_QWORD *)(v15 - 8);
  v19 = MEMORY[0x24BDAC7A8](v15, v18);
  v21 = MEMORY[0x24BDAC7A8](v19, v20);
  v107 = (char *)&v98 - v22;
  MEMORY[0x24BDAC7A8](v21, v23);
  v25 = (char *)&v98 - v24;
  v26 = sub_227D68330(&qword_2559282C8);
  v28 = MEMORY[0x24BDAC7A8](v26, v27);
  v30 = (char *)&v98 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v28, v31);
  v117 = (char *)&v98 - v32;
  v33 = *(_QWORD *)(a1 + OBJC_IVAR___BDSReadingHistoryUpdate_value);
  sub_227D51624((unint64_t *)&qword_2559282A0, v16, MEMORY[0x24BDCE930]);
  v34 = sub_227E5FF00();
  v35 = *(_QWORD *)(v33 + 64);
  v108 = (_QWORD *)v34;
  v109 = v33 + 64;
  v36 = 1 << *(_BYTE *)(v33 + 32);
  v37 = -1;
  if (v36 < 64)
    v37 = ~(-1 << v36);
  v38 = v37 & v35;
  v39 = (unint64_t)(v36 + 63) >> 6;
  v99 = v39 - 1;
  swift_bridgeObjectRetain();
  v40 = 0;
  v110 = v39;
  v41 = v39 - 5;
  v42 = v38;
  v100 = v41;
  v113 = v33;
  v102 = v33 + 104;
  *(_QWORD *)&v43 = 136315138;
  v112 = v43;
  v111 = MEMORY[0x24BEE4AD8] + 8;
  v118 = v25;
  v114 = v30;
  if (!v38)
    goto LABEL_6;
LABEL_4:
  v120 = (v42 - 1) & v42;
  v44 = __clz(__rbit64(v42)) | (v40 << 6);
LABEL_5:
  v45 = v113;
  (*(void (**)(char *, unint64_t, uint64_t))(v17 + 16))(v30, *(_QWORD *)(v113 + 48) + *(_QWORD *)(v17 + 72) * v44, v15);
  v46 = (uint64_t *)(*(_QWORD *)(v45 + 56) + 16 * v44);
  v47 = sub_227D68330((uint64_t *)&unk_2559282D0);
  v48 = (uint64_t *)&v30[*(int *)(v47 + 48)];
  v49 = *v46;
  v50 = v46[1];
  *v48 = v49;
  v48[1] = v50;
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 56))(v30, 0, 1, v47);
  sub_227DD00E0(v49, v50);
  v51 = (uint64_t)v117;
  while (1)
  {
    sub_227D5B0DC((uint64_t)v30, v51, &qword_2559282C8);
    v55 = sub_227D68330((uint64_t *)&unk_2559282D0);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 48))(v51, 1, v55) == 1)
    {
      swift_release();
      return (uint64_t)v108;
    }
    v119 = v40;
    v56 = (uint64_t *)(v51 + *(int *)(v55 + 48));
    v58 = *v56;
    v57 = v56[1];
    v59 = v25;
    v60 = v17;
    v61 = v15;
    (*(void (**)(char *, uint64_t, uint64_t))(v17 + 32))(v59, v51, v15);
    sub_227DD00E0(v58, v57);
    sub_227D51624(&qword_2559282B0, type metadata accessor for ReadingHistoryDay, (uint64_t)&protocol conformance descriptor for ReadingHistoryDay);
    v62 = v121;
    v63 = v115;
    sub_227E5FD38();
    v64 = v63;
    v65 = v116;
    v103 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v116 + 56);
    v103(v62, 0, 1, v64);
    v66 = *(void (**)(unint64_t, uint64_t, uint64_t))(v17 + 16);
    v67 = (uint64_t)v107;
    v101 = v66;
    v66((unint64_t)v107, (uint64_t)v118, v61);
    v68 = (uint64_t)v62;
    v69 = v106;
    sub_227DD2018(v68, v106);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v65 + 48))(v69, 1, v64) != 1)
    {
      sub_227DCD41C(v69, v105);
      v78 = v108;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v122 = v78;
      v81 = sub_227DD0124(v67);
      v82 = v78[2];
      v83 = (v80 & 1) == 0;
      v84 = v82 + v83;
      if (__OFADD__(v82, v83))
        goto LABEL_52;
      v85 = v80;
      if (v78[3] < v84)
      {
        sub_227DD0654(v84, isUniquelyReferenced_nonNull_native);
        v86 = sub_227DD0124(v67);
        if ((v85 & 1) != (v87 & 1))
          goto LABEL_54;
        v81 = v86;
        v89 = v121;
        v88 = v122;
        if ((v85 & 1) == 0)
          goto LABEL_45;
LABEL_35:
        v108 = v88;
        sub_227DD364C(v105, v88[7] + *(_QWORD *)(v116 + 72) * v81);
LABEL_47:
        v42 = v120;
        swift_bridgeObjectRelease();
        v75 = *(void (**)(uint64_t, uint64_t))(v60 + 8);
        v75(v67, v61);
        v90 = (uint64_t)v89;
        goto LABEL_48;
      }
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        v89 = v121;
        v88 = v122;
        if ((v80 & 1) != 0)
          goto LABEL_35;
      }
      else
      {
        v91 = v81;
        sub_227DD2480();
        v81 = v91;
        v89 = v121;
        v88 = v122;
        if ((v85 & 1) != 0)
          goto LABEL_35;
      }
LABEL_45:
      v92 = v81;
      v88[(v81 >> 6) + 8] |= 1 << v81;
      v101(v88[6] + *(_QWORD *)(v60 + 72) * v81, v67, v61);
      sub_227DCD41C(v105, v88[7] + *(_QWORD *)(v116 + 72) * v92);
      v93 = v88[2];
      v94 = __OFADD__(v93, 1);
      v95 = v93 + 1;
      if (v94)
        goto LABEL_53;
      v88[2] = v95;
      v108 = v122;
      goto LABEL_47;
    }
    sub_227DD2060(v69);
    v70 = v108;
    swift_bridgeObjectRetain();
    v71 = sub_227DD0124(v67);
    v73 = v72;
    swift_bridgeObjectRelease();
    if ((v73 & 1) != 0)
    {
      v74 = swift_isUniquelyReferenced_nonNull_native();
      v122 = v70;
      if ((v74 & 1) == 0)
      {
        sub_227DD2480();
        v70 = v122;
      }
      v75 = *(void (**)(uint64_t, uint64_t))(v60 + 8);
      v75(v70[6] + *(_QWORD *)(v60 + 72) * v71, v61);
      v76 = (uint64_t)v122;
      v77 = (uint64_t)v104;
      sub_227DCD41C(v122[7] + *(_QWORD *)(v116 + 72) * v71, (uint64_t)v104);
      v108 = (_QWORD *)v76;
      sub_227E559D8(v71, v76);
      swift_bridgeObjectRelease();
      v103((char *)v77, 0, 1, v115);
    }
    else
    {
      v77 = (uint64_t)v104;
      v103(v104, 1, 1, v115);
      v75 = *(void (**)(uint64_t, uint64_t))(v60 + 8);
    }
    v75((uint64_t)v107, v61);
    sub_227DD2060(v77);
    v42 = v120;
    v90 = (uint64_t)v121;
LABEL_48:
    sub_227DD1FD4(v58, v57);
    v96 = v118;
    v75((uint64_t)v118, v61);
    sub_227DD2060(v90);
    v17 = v60;
    v25 = v96;
    v15 = v61;
    v30 = v114;
    v40 = v119;
    if (v42)
      goto LABEL_4;
LABEL_6:
    v52 = v40 + 1;
    if (__OFADD__(v40, 1))
      break;
    if (v52 >= v110)
    {
      v51 = (uint64_t)v117;
    }
    else
    {
      v53 = *(_QWORD *)(v109 + 8 * v52);
      v51 = (uint64_t)v117;
      if (v53)
        goto LABEL_9;
      if ((uint64_t)(v40 + 2) >= v110)
      {
        ++v40;
      }
      else
      {
        v53 = *(_QWORD *)(v109 + 8 * (v40 + 2));
        if (v53)
        {
          v52 = v40 + 2;
LABEL_9:
          v120 = (v53 - 1) & v53;
          v44 = __clz(__rbit64(v53)) + (v52 << 6);
          v40 = v52;
          goto LABEL_5;
        }
        if ((uint64_t)(v40 + 3) >= v110)
        {
          v40 += 2;
        }
        else
        {
          v53 = *(_QWORD *)(v109 + 8 * (v40 + 3));
          if (v53)
          {
            v52 = v40 + 3;
            goto LABEL_9;
          }
          v52 = v40 + 4;
          if ((uint64_t)(v40 + 4) >= v110)
          {
            v40 += 3;
          }
          else
          {
            v53 = *(_QWORD *)(v109 + 8 * v52);
            if (v53)
              goto LABEL_9;
            while (v100 != v40)
            {
              v53 = *(_QWORD *)(v102 + 8 * v40++);
              if (v53)
              {
                v52 = v40 + 4;
                goto LABEL_9;
              }
            }
            v40 = v99;
          }
        }
      }
    }
    v54 = sub_227D68330((uint64_t *)&unk_2559282D0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 56))(v30, 1, 1, v54);
    v120 = 0;
  }
  __break(1u);
LABEL_52:
  __break(1u);
LABEL_53:
  __break(1u);
LABEL_54:
  result = sub_227E606B0();
  __break(1u);
  return result;
}

uint64_t (*ReadingHistoryUpdate.days.modify(uint64_t *a1))(_QWORD *a1)
{
  uint64_t v1;

  a1[1] = v1;
  *a1 = ReadingHistoryUpdate.days.getter();
  return sub_227DCDFAC;
}

uint64_t sub_227DCDFAC(_QWORD *a1)
{
  *(_QWORD *)(a1[1] + OBJC_IVAR___BDSReadingHistoryUpdate____lazy_storage___days) = *a1;
  return swift_bridgeObjectRelease();
}

uint64_t ReadingHistoryUpdate.editGeneration.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR___BDSReadingHistoryUpdate_value + 8);
}

uint64_t ReadingHistoryUpdate.description.getter()
{
  uint64_t (*v0)(uint64_t);

  sub_227E60494();
  swift_bridgeObjectRelease();
  ReadingHistoryUpdate.days.getter();
  sub_227E5F27C();
  v0 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900];
  type metadata accessor for ReadingHistoryDay(0);
  sub_227D51624((unint64_t *)&qword_2559282A0, v0, MEMORY[0x24BDCE930]);
  sub_227E5FEE8();
  sub_227E6002C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_227E6002C();
  sub_227E60674();
  sub_227E6002C();
  swift_bridgeObjectRelease();
  sub_227E6002C();
  return 0x3A737961647BLL;
}

id ReadingHistoryUpdate.coalesce(newerUpdate:)(char *a1)
{
  char *v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  int64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  unint64_t v30;
  int64_t v31;
  unint64_t v32;
  int64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  unint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  int isUniquelyReferenced_nonNull_native;
  char v43;
  uint64_t v44;
  _BOOL8 v45;
  uint64_t v46;
  char v47;
  unint64_t v48;
  char v49;
  uint64_t *v50;
  uint64_t v51;
  BOOL v52;
  uint64_t v53;
  void *v54;
  id v55;
  id v56;
  NSObject *v57;
  uint64_t v58;
  objc_class *v59;
  char *v60;
  char *v61;
  id result;
  uint64_t v63;
  int64_t v64;
  id v65;
  id v66;
  char *v67;
  char *v68;
  Class ObjectType;
  uint64_t v70;
  int64_t v71;
  uint64_t v72;
  int64_t v73;
  int64_t v74;
  uint64_t v75;
  _QWORD *v76;
  objc_super v77;

  ObjectType = (Class)swift_getObjectType();
  v3 = sub_227E5F27C();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3, v5);
  v75 = (uint64_t)&v63 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_227D68330(&qword_2559282C8);
  v9 = MEMORY[0x24BDAC7A8](v7, v8);
  v11 = (char *)&v63 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9, v12);
  v14 = (char *)&v63 - v13;
  v65 = v1;
  v66 = a1;
  v67 = &a1[OBJC_IVAR___BDSReadingHistoryUpdate_value];
  v68 = &v1[OBJC_IVAR___BDSReadingHistoryUpdate_value];
  v15 = *(_QWORD *)&a1[OBJC_IVAR___BDSReadingHistoryUpdate_value];
  v16 = *(_QWORD *)(*(_QWORD *)v67 + 64);
  v70 = *(_QWORD *)v67 + 64;
  v17 = *(_QWORD **)&v1[OBJC_IVAR___BDSReadingHistoryUpdate_value];
  v18 = 1 << *(_BYTE *)(v15 + 32);
  v19 = -1;
  if (v18 < 64)
    v19 = ~(-1 << v18);
  v20 = v19 & v16;
  v71 = (unint64_t)(v18 + 63) >> 6;
  v64 = v71 - 1;
  swift_bridgeObjectRetain();
  v72 = v15;
  swift_bridgeObjectRetain();
  v73 = 0;
  while (1)
  {
    if (v20)
    {
      v22 = __clz(__rbit64(v20));
      v23 = (v20 - 1) & v20;
      v24 = v22 | (v73 << 6);
LABEL_8:
      v25 = v72;
      (*(void (**)(char *, unint64_t, uint64_t))(v4 + 16))(v11, *(_QWORD *)(v72 + 48) + *(_QWORD *)(v4 + 72) * v24, v3);
      v26 = (uint64_t *)(*(_QWORD *)(v25 + 56) + 16 * v24);
      v27 = sub_227D68330((uint64_t *)&unk_2559282D0);
      v28 = (uint64_t *)&v11[*(int *)(v27 + 48)];
      v29 = *v26;
      v30 = v26[1];
      *v28 = v29;
      v28[1] = v30;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v11, 0, 1, v27);
      sub_227DD00E0(v29, v30);
      goto LABEL_27;
    }
    v31 = v73 + 1;
    if (__OFADD__(v73, 1))
      goto LABEL_44;
    if (v31 < v71)
    {
      v32 = *(_QWORD *)(v70 + 8 * v31);
      if (v32)
        goto LABEL_12;
      v33 = v73 + 2;
      ++v73;
      if (v31 + 1 < v71)
      {
        v32 = *(_QWORD *)(v70 + 8 * v33);
        if (v32)
          goto LABEL_15;
        v73 = v31 + 1;
        if (v31 + 2 < v71)
        {
          v32 = *(_QWORD *)(v70 + 8 * (v31 + 2));
          if (v32)
          {
            v31 += 2;
            goto LABEL_12;
          }
          v33 = v31 + 3;
          v73 = v31 + 2;
          if (v31 + 3 < v71)
            break;
        }
      }
    }
LABEL_26:
    v34 = sub_227D68330((uint64_t *)&unk_2559282D0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v11, 1, 1, v34);
    v23 = 0;
LABEL_27:
    sub_227D5B0DC((uint64_t)v11, (uint64_t)v14, &qword_2559282C8);
    v35 = sub_227D68330((uint64_t *)&unk_2559282D0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 48))(v14, 1, v35) == 1)
    {
      swift_release();
      v4 = *((_QWORD *)v68 + 1);
      v20 = *((_QWORD *)v67 + 1);
      if (v20 < (uint64_t)v4)
      {
        LOBYTE(v15) = sub_227E60230();
        if (qword_253F39FF8[0] != -1)
          goto LABEL_45;
        goto LABEL_39;
      }
LABEL_41:
      v59 = ObjectType;
      v60 = (char *)objc_allocWithZone(ObjectType);
      *(_QWORD *)&v60[OBJC_IVAR___BDSReadingHistoryUpdate____lazy_storage___days] = 0;
      v61 = &v60[OBJC_IVAR___BDSReadingHistoryUpdate_value];
      *(_QWORD *)v61 = v17;
      *((_QWORD *)v61 + 1) = v20;
      v77.receiver = v60;
      v77.super_class = v59;
      return objc_msgSendSuper2(&v77, sel_init);
    }
    v74 = v23;
    v36 = (uint64_t *)&v14[*(int *)(v35 + 48)];
    v15 = *v36;
    v37 = v36[1];
    v20 = v4;
    v38 = v75;
    v39 = v14;
    v40 = v14;
    v41 = v3;
    (*(void (**)(uint64_t, char *, uint64_t))(v4 + 32))(v75, v40, v3);
    sub_227DD00E0(v15, v37);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v76 = v17;
    v4 = sub_227DD0124(v38);
    v44 = v17[2];
    v45 = (v43 & 1) == 0;
    v46 = v44 + v45;
    if (__OFADD__(v44, v45))
    {
      __break(1u);
LABEL_43:
      __break(1u);
LABEL_44:
      __break(1u);
LABEL_45:
      swift_once();
LABEL_39:
      v54 = (void *)qword_253F39FF0;
      if (os_log_type_enabled((os_log_t)qword_253F39FF0, (os_log_type_t)v15))
      {
        v55 = v65;
        v56 = v66;
        v57 = v54;
        v58 = swift_slowAlloc();
        *(_DWORD *)v58 = 134218240;
        v76 = (_QWORD *)v4;
        sub_227E603B0();

        *(_WORD *)(v58 + 12) = 2048;
        v76 = (_QWORD *)v20;
        sub_227E603B0();

        _os_log_impl(&dword_227D4F000, v57, (os_log_type_t)v15, "ReadingHistoryUpdate: coalesce - unexpected editGeneration=%ld, newerUpdate.editGeneration=%ld", (uint8_t *)v58, 0x16u);
        MEMORY[0x22E2AA8AC](v58, -1, -1);

      }
      goto LABEL_41;
    }
    v47 = v43;
    if (v17[3] >= v46)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        sub_227DD1D60();
    }
    else
    {
      sub_227DD02BC(v46, isUniquelyReferenced_nonNull_native);
      v48 = sub_227DD0124(v75);
      if ((v47 & 1) != (v49 & 1))
        goto LABEL_47;
      v4 = v48;
    }
    v3 = v41;
    v17 = v76;
    if ((v47 & 1) != 0)
    {
      v21 = v76[7] + 16 * v4;
      sub_227DD1FD4(*(_QWORD *)v21, *(_QWORD *)(v21 + 8));
      *(_QWORD *)v21 = v15;
      *(_QWORD *)(v21 + 8) = v37;
    }
    else
    {
      v76[(v4 >> 6) + 8] |= 1 << v4;
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v20 + 16))(v17[6] + *(_QWORD *)(v20 + 72) * v4, v75, v41);
      v50 = (uint64_t *)(v17[7] + 16 * v4);
      *v50 = v15;
      v50[1] = v37;
      v51 = v17[2];
      v52 = __OFADD__(v51, 1);
      v53 = v51 + 1;
      if (v52)
        goto LABEL_43;
      v17[2] = v53;
    }
    swift_bridgeObjectRelease();
    v4 = v20;
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v75, v41);
    sub_227DD1FD4(v15, v37);
    v14 = v39;
    v20 = v74;
  }
  v32 = *(_QWORD *)(v70 + 8 * v33);
  if (v32)
  {
LABEL_15:
    v31 = v33;
LABEL_12:
    v23 = (v32 - 1) & v32;
    v24 = __clz(__rbit64(v32)) + (v31 << 6);
    v73 = v31;
    goto LABEL_8;
  }
  while (1)
  {
    v31 = v33 + 1;
    if (__OFADD__(v33, 1))
      break;
    if (v31 >= v71)
    {
      v73 = v64;
      goto LABEL_26;
    }
    v32 = *(_QWORD *)(v70 + 8 * v31);
    ++v33;
    if (v32)
      goto LABEL_12;
  }
  __break(1u);
LABEL_47:
  result = (id)sub_227E606B0();
  __break(1u);
  return result;
}

uint64_t ReadingHistoryUpdate.hasDelta(from:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t result;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  int64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  int v60;
  uint64_t v61;
  id v62;
  os_log_type_t v63;
  NSObject *v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  os_log_type_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  void (*v77)(char *, uint64_t);
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  os_log_t v83;
  os_log_type_t v84;
  uint64_t v85;
  NSObject *v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  _BOOL4 v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  unint64_t v96;
  void (*v97)(char *, uint64_t);
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  unint64_t v102;
  uint64_t v103;
  uint64_t v104;
  unint64_t v105;
  os_log_t v106;
  uint64_t v107;
  void (*v108)(char *, uint64_t);
  void (*v109)(char *, uint64_t);
  uint64_t v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  int64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  os_log_t v126;
  os_log_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130[2];

  v121 = a1;
  v2 = sub_227D68330(&qword_253F39F90);
  v4 = MEMORY[0x24BDAC7A8](v2, v3);
  v120 = (uint64_t)&v110 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4, v6);
  v128 = (uint64_t)&v110 - v7;
  v119 = type metadata accessor for ReadingHistoryDay(0);
  v126 = *(os_log_t *)(v119 - 8);
  v9 = MEMORY[0x24BDAC7A8](v119, v8);
  v114 = (uint64_t)&v110 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v9, v11);
  v113 = (uint64_t)&v110 - v13;
  v15 = MEMORY[0x24BDAC7A8](v12, v14);
  v112 = (uint64_t)&v110 - v16;
  v18 = MEMORY[0x24BDAC7A8](v15, v17);
  v122 = (uint64_t)&v110 - v19;
  MEMORY[0x24BDAC7A8](v18, v20);
  v124 = (uint64_t)&v110 - v21;
  v22 = sub_227E5F27C();
  v23 = *(_QWORD *)(v22 - 8);
  v25 = MEMORY[0x24BDAC7A8](v22, v24);
  v111 = (char *)&v110 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = MEMORY[0x24BDAC7A8](v25, v27);
  v30 = (char *)&v110 - v29;
  MEMORY[0x24BDAC7A8](v28, v31);
  v33 = (char *)&v110 - v32;
  v34 = sub_227D68330(&qword_255928298);
  v36 = MEMORY[0x24BDAC7A8](v34, v35);
  v38 = (char *)&v110 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v36, v39);
  v41 = (char *)&v110 - v40;
  result = ReadingHistoryUpdate.days.getter();
  v125 = 0;
  v43 = *(_QWORD *)(result + 64);
  v115 = result + 64;
  v44 = 1 << *(_BYTE *)(result + 32);
  v45 = -1;
  if (v44 < 64)
    v45 = ~(-1 << v44);
  v46 = v45 & v43;
  v116 = (unint64_t)(v44 + 63) >> 6;
  v117 = result;
  v110 = v116 - 1;
  v123 = v33;
  v118 = v22;
  if (!v46)
    goto LABEL_6;
LABEL_4:
  v127 = (os_log_t)((v46 - 1) & v46);
  v47 = __clz(__rbit64(v46)) | (v125 << 6);
LABEL_5:
  v48 = v117;
  (*(void (**)(char *, unint64_t, uint64_t))(v23 + 16))(v38, *(_QWORD *)(v117 + 48) + *(_QWORD *)(v23 + 72) * v47, v22);
  v49 = *(_QWORD *)(v48 + 56) + (unint64_t)v126[9].isa * v47;
  v50 = sub_227D68330(&qword_2559282A8);
  sub_227DCD3D8(v49, (uint64_t)&v38[*(int *)(v50 + 48)]);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 56))(v38, 0, 1, v50);
  while (1)
  {
    sub_227D5B0DC((uint64_t)v38, (uint64_t)v41, &qword_255928298);
    v55 = sub_227D68330(&qword_2559282A8);
    LODWORD(v1) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 48))(v41, 1, v55);
    if ((_DWORD)v1 == 1)
    {
      swift_release();
      sub_227E60248();
      if (qword_253F39FF8[0] != -1)
        goto LABEL_44;
      goto LABEL_30;
    }
    v56 = (uint64_t)&v41[*(int *)(v55 + 48)];
    (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v33, v41, v22);
    v57 = v124;
    sub_227DCD41C(v56, v124);
    v58 = v128;
    ReadingHistoryModel.readingHistoryDay(for:)(v128);
    v59 = v120;
    sub_227DD2018(v58, v120);
    if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v126[6].isa)(v59, 1, v119) == 1)
    {
      sub_227DD2060(v59);
      v63 = sub_227E60248();
      if (qword_253F39FF8[0] != -1)
        swift_once();
      v64 = qword_253F39FF0;
      v65 = v111;
      v66 = v123;
      v67 = v118;
      (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v111, v123, v118);
      v68 = v124;
      v69 = v114;
      sub_227DCD3D8(v124, v114);
      v70 = v63;
      if (os_log_type_enabled(v64, v63))
      {
        v127 = v64;
        v71 = v67;
        v72 = v65;
        v73 = swift_slowAlloc();
        v74 = swift_slowAlloc();
        v130[0] = v74;
        *(_DWORD *)v73 = 136315394;
        sub_227D51624((unint64_t *)&qword_2559282B8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE988]);
        v75 = sub_227E60674();
        v129 = sub_227D634E0(v75, v76, v130);
        sub_227E603B0();
        swift_bridgeObjectRelease();
        v77 = *(void (**)(char *, uint64_t))(v23 + 8);
        v78 = v72;
        v79 = v71;
        v77(v78, v71);
        *(_WORD *)(v73 + 12) = 2080;
        v80 = v114;
        v81 = ReadingHistoryDay.description.getter();
        v129 = sub_227D634E0(v81, v82, v130);
        sub_227E603B0();
        swift_bridgeObjectRelease();
        sub_227DCFC28(v80);
        v83 = v127;
        _os_log_impl(&dword_227D4F000, v127, v70, "ReadingHistoryUpdate: has forward delta for %s - day=%s modelDay=nil", (uint8_t *)v73, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x22E2AA8AC](v74, -1, -1);
        MEMORY[0x22E2AA8AC](v73, -1, -1);

        sub_227DD2060(v128);
        sub_227DCFC28(v124);
        v77(v123, v79);
      }
      else
      {
        sub_227DCFC28(v69);
        v108 = *(void (**)(char *, uint64_t))(v23 + 8);
        v108(v65, v67);
        sub_227DD2060(v128);
        sub_227DCFC28(v68);
        v108(v66, v67);
      }
      goto LABEL_41;
    }
    v60 = v1;
    v1 = v122;
    sub_227DCD41C(v59, v122);
    sub_227D51624(&qword_2559282E0, type metadata accessor for ReadingHistoryDay, (uint64_t)&protocol conformance descriptor for ReadingHistoryDay);
    v61 = v57;
    if ((sub_227E5FB1C() & 1) != 0)
    {
      v84 = sub_227E60248();
      v85 = v118;
      if (qword_253F39FF8[0] != -1)
        swift_once();
      v86 = qword_253F39FF0;
      v87 = v23;
      v88 = v30;
      (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v30, v123, v85);
      v89 = v112;
      sub_227DCD3D8(v61, v112);
      v90 = v122;
      v91 = v113;
      sub_227DCD3D8(v122, v113);
      LODWORD(v127) = v84;
      v92 = os_log_type_enabled(v86, v84);
      LODWORD(v1) = v60;
      if (v92)
      {
        v126 = v86;
        v93 = v85;
        v94 = swift_slowAlloc();
        v125 = swift_slowAlloc();
        v130[0] = v125;
        *(_DWORD *)v94 = 136315650;
        sub_227D51624((unint64_t *)&qword_2559282B8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE988]);
        v95 = sub_227E60674();
        v129 = sub_227D634E0(v95, v96, v130);
        sub_227E603B0();
        swift_bridgeObjectRelease();
        v97 = *(void (**)(char *, uint64_t))(v87 + 8);
        v98 = v88;
        v99 = v93;
        v97(v98, v93);
        *(_WORD *)(v94 + 12) = 2080;
        v100 = v112;
        v101 = ReadingHistoryDay.description.getter();
        v129 = sub_227D634E0(v101, v102, v130);
        sub_227E603B0();
        swift_bridgeObjectRelease();
        sub_227DCFC28(v100);
        *(_WORD *)(v94 + 22) = 2080;
        v103 = v113;
        v104 = ReadingHistoryDay.description.getter();
        v129 = sub_227D634E0(v104, v105, v130);
        sub_227E603B0();
        swift_bridgeObjectRelease();
        sub_227DCFC28(v103);
        v106 = v126;
        _os_log_impl(&dword_227D4F000, v126, (os_log_type_t)v127, "ReadingHistoryUpdate: has forward delta for %s - day=%s modelDay=%s", (uint8_t *)v94, 0x20u);
        v107 = v125;
        swift_arrayDestroy();
        MEMORY[0x22E2AA8AC](v107, -1, -1);
        MEMORY[0x22E2AA8AC](v94, -1, -1);

        sub_227DCFC28(v122);
        sub_227DD2060(v128);
        sub_227DCFC28(v61);
        v97(v123, v99);
      }
      else
      {
        sub_227DCFC28(v91);
        sub_227DCFC28(v89);
        v109 = *(void (**)(char *, uint64_t))(v87 + 8);
        v109(v88, v85);
        sub_227DCFC28(v90);
        sub_227DD2060(v128);
        sub_227DCFC28(v61);
        v109(v123, v85);
      }
LABEL_41:
      swift_release();
      return (_DWORD)v1 != 1;
    }
    sub_227DCFC28(v1);
    sub_227DD2060(v128);
    sub_227DCFC28(v57);
    v33 = v123;
    v22 = v118;
    result = (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v123, v118);
    v46 = (unint64_t)v127;
    if (v127)
      goto LABEL_4;
LABEL_6:
    v51 = v125 + 1;
    if (__OFADD__(v125, 1))
      break;
    if (v51 < v116)
    {
      v52 = *(_QWORD *)(v115 + 8 * v51);
      if (v52)
        goto LABEL_9;
      v53 = v125 + 2;
      ++v125;
      if (v51 + 1 < v116)
      {
        v52 = *(_QWORD *)(v115 + 8 * v53);
        if (v52)
          goto LABEL_12;
        v125 = v51 + 1;
        if (v51 + 2 < v116)
        {
          v52 = *(_QWORD *)(v115 + 8 * (v51 + 2));
          if (v52)
          {
            v51 += 2;
            goto LABEL_9;
          }
          v53 = v51 + 3;
          v125 = v51 + 2;
          if (v51 + 3 < v116)
          {
            v52 = *(_QWORD *)(v115 + 8 * v53);
            if (!v52)
            {
              while (1)
              {
                v51 = v53 + 1;
                if (__OFADD__(v53, 1))
                  break;
                if (v51 >= v116)
                {
                  v125 = v110;
                  goto LABEL_23;
                }
                v52 = *(_QWORD *)(v115 + 8 * v51);
                ++v53;
                if (v52)
                  goto LABEL_9;
              }
              __break(1u);
              return result;
            }
LABEL_12:
            v51 = v53;
LABEL_9:
            v127 = (os_log_t)((v52 - 1) & v52);
            v47 = __clz(__rbit64(v52)) + (v51 << 6);
            v125 = v51;
            goto LABEL_5;
          }
        }
      }
    }
LABEL_23:
    v54 = sub_227D68330(&qword_2559282A8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 56))(v38, 1, 1, v54);
    v127 = 0;
  }
  __break(1u);
LABEL_44:
  swift_once();
LABEL_30:
  v62 = (id)qword_253F39FF0;
  sub_227E5F564();

  return (_DWORD)v1 != 1;
}

id ReadingHistoryUpdate.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void ReadingHistoryUpdate.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id ReadingHistoryUpdate.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_227DCF364@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;

  v2 = (uint64_t *)(*v1 + OBJC_IVAR___BDSReadingHistoryUpdate_value);
  v3 = *v2;
  v4 = v2[1];
  *a1 = v3;
  a1[1] = v4;
  return swift_bridgeObjectRetain();
}

id sub_227DCF380@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  objc_class *v2;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id result;
  objc_super v10;

  v5 = (char *)objc_allocWithZone(v2);
  v6 = *a1;
  v7 = a1[1];
  *(_QWORD *)&v5[OBJC_IVAR___BDSReadingHistoryUpdate____lazy_storage___days] = 0;
  v8 = &v5[OBJC_IVAR___BDSReadingHistoryUpdate_value];
  *(_QWORD *)v8 = v6;
  *((_QWORD *)v8 + 1) = v7;
  v10.receiver = v5;
  v10.super_class = v2;
  result = objc_msgSendSuper2(&v10, sel_init);
  *a2 = result;
  return result;
}

id BDSReadingHistoryUpdateInfo.update.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR___BDSReadingHistoryUpdateInfo_update);
}

uint64_t static BDSReadingHistoryUpdateInfo.supportsSecureCoding.getter()
{
  return 1;
}

void __swiftcall BDSReadingHistoryUpdateInfo.init(coder:)(BDSReadingHistoryUpdateInfo_optional *__return_ptr retstr, NSCoder coder)
{
  objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithCoder_, coder.super.isa);

}

id BDSReadingHistoryUpdateInfo.init(coder:)(void *a1)
{
  void *v1;
  char *v3;
  id v4;
  id result;
  id v6;
  objc_super v7;

  v3 = v1;
  v4 = a1;
  result = sub_227DCF4DC(v4);
  if (result)
  {
    *(_QWORD *)&v3[OBJC_IVAR___BDSReadingHistoryUpdateInfo_update] = result;

    v7.receiver = v3;
    v7.super_class = (Class)BDSReadingHistoryUpdateInfo;
    v6 = objc_msgSendSuper2(&v7, sel_init);

    return v6;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_227DCF4DC(void *a1)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  objc_class *v11;
  char *v12;
  char *v13;
  id v14;
  objc_super v16;
  uint64_t v17;
  uint64_t v18;

  sub_227D52DBC(0, &qword_255928478);
  v2 = sub_227E60308();
  if (!v2)
  {

    return 0;
  }
  v3 = (void *)v2;
  v4 = sub_227E5F1E0();
  v6 = v5;
  v7 = objc_allocWithZone(MEMORY[0x24BDD1620]);
  v8 = sub_227DD32D0();
  sub_227DD1FD4(v4, v6);
  if (!v8)
  {
LABEL_8:

    return 0;
  }
  sub_227DD3608();
  sub_227E60278();
  v9 = v17;
  if (!v17)
  {
    objc_msgSend(v8, sel_finishDecoding);

    goto LABEL_8;
  }
  v10 = v18;
  v11 = (objc_class *)type metadata accessor for ReadingHistoryUpdate();
  v12 = (char *)objc_allocWithZone(v11);
  *(_QWORD *)&v12[OBJC_IVAR___BDSReadingHistoryUpdate____lazy_storage___days] = 0;
  v13 = &v12[OBJC_IVAR___BDSReadingHistoryUpdate_value];
  *(_QWORD *)v13 = v9;
  *((_QWORD *)v13 + 1) = v10;
  v16.receiver = v12;
  v16.super_class = v11;
  v14 = objc_msgSendSuper2(&v16, sel_init);
  objc_msgSend(v8, sel_finishDecoding);

  return v14;
}

Swift::Void __swiftcall BDSReadingHistoryUpdateInfo.encode(with:)(NSCoder with)
{
  void *v1;
  id v3;

  v3 = objc_msgSend(v1, sel_update);
  sub_227DCF738(with.super.isa);

}

void sub_227DCF738(void *a1)
{
  id v2;
  id v3;
  void *v4;
  void *v5;

  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1618]), sel_initRequiringSecureCoding_, 1);
  sub_227DD35C4();
  swift_bridgeObjectRetain();
  sub_227E6026C();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_finishEncoding);
  v3 = objc_msgSend(v2, sel_encodedData);
  if (v3)
  {
    v4 = v3;
    v5 = (void *)sub_227E5FF78();
    objc_msgSend(a1, sel_encodeObject_forKey_, v4, v5);

  }
  else
  {
    __break(1u);
    swift_unexpectedError();
    __break(1u);
  }
}

void _s13BookDataStore27ReadingHistoryServiceStatusC6encode4withySo7NSCoderC_tF_0(void *a1)
{
  id v2;
  id v3;
  void *v4;
  void *v5;

  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1618]), sel_initRequiringSecureCoding_, 1);
  sub_227DD328C();
  sub_227E6026C();
  objc_msgSend(v2, sel_finishEncoding);
  v3 = objc_msgSend(v2, sel_encodedData);
  if (v3)
  {
    v4 = v3;
    v5 = (void *)sub_227E5FF78();
    objc_msgSend(a1, sel_encodeObject_forKey_, v4, v5);

  }
  else
  {
    __break(1u);
    swift_unexpectedError();
    __break(1u);
  }
}

id BDSReadingHistoryUpdateInfo.init(update:)(void *a1)
{
  id v2;

  v2 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithUpdate_, a1);

  return v2;
}

id BDSReadingHistoryUpdateInfo.init(update:)(uint64_t a1)
{
  uint64_t v1;
  objc_super v3;

  *(_QWORD *)(v1 + OBJC_IVAR___BDSReadingHistoryUpdateInfo_update) = a1;
  v3.super_class = (Class)BDSReadingHistoryUpdateInfo;
  return objc_msgSendSuper2(&v3, sel_init);
}

uint64_t BDSReadingHistoryUpdateInfo.description.getter()
{
  void *v0;
  id v1;
  uint64_t v2;

  v1 = objc_msgSend(v0, sel_update);
  v2 = ReadingHistoryUpdate.description.getter();

  return v2;
}

void __swiftcall BDSReadingHistoryUpdateInfo.init()(BDSReadingHistoryUpdateInfo *__return_ptr retstr)
{
  objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
}

void BDSReadingHistoryUpdateInfo.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_227DCFC28(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ReadingHistoryDay(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_227DCFC64()
{
  sub_227D51624(&qword_255928500, (uint64_t (*)(uint64_t))type metadata accessor for CKError, (uint64_t)&unk_227E6EB9C);
  return sub_227E606C8();
}

uint64_t sub_227DCFCA4()
{
  sub_227D51624(&qword_255928500, (uint64_t (*)(uint64_t))type metadata accessor for CKError, (uint64_t)&unk_227E6EB9C);
  return sub_227E606BC();
}

uint64_t sub_227DCFCE8()
{
  sub_227D51624(&qword_2559284F8, (uint64_t (*)(uint64_t))type metadata accessor for CKError, (uint64_t)&unk_227E6EC84);
  return sub_227E5F0E4();
}

id sub_227DCFD28()
{
  id *v0;

  return *v0;
}

uint64_t sub_227DCFD30@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t sub_227DCFD38()
{
  return sub_227E5FF84();
}

uint64_t sub_227DCFD48()
{
  sub_227D51624(&qword_2559284F8, (uint64_t (*)(uint64_t))type metadata accessor for CKError, (uint64_t)&unk_227E6EC84);
  return sub_227E5F12C();
}

uint64_t sub_227DCFD88()
{
  sub_227D51624(&qword_2559284F8, (uint64_t (*)(uint64_t))type metadata accessor for CKError, (uint64_t)&unk_227E6EC84);
  return sub_227E5F0FC();
}

uint64_t sub_227DCFDC8(void *a1)
{
  id v2;

  sub_227D51624(&qword_2559284F8, (uint64_t (*)(uint64_t))type metadata accessor for CKError, (uint64_t)&unk_227E6EC84);
  v2 = a1;
  return sub_227E5F0F0();
}

uint64_t sub_227DCFE2C()
{
  id *v0;
  id v1;
  uint64_t v2;

  v1 = *v0;
  v2 = sub_227E6035C();

  return v2;
}

uint64_t sub_227DCFE60()
{
  sub_227D51624(&qword_2559284F8, (uint64_t (*)(uint64_t))type metadata accessor for CKError, (uint64_t)&unk_227E6EC84);
  return sub_227E5F120();
}

uint64_t sub_227DCFEB0()
{
  sub_227E6071C();
  sub_227E5FF48();
  return sub_227E60734();
}

_QWORD *sub_227DCFF0C@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *result;
  *(_BYTE *)(a2 + 8) = 0;
  return result;
}

void sub_227DCFF1C(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
}

BOOL sub_227DCFF28(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2;
}

uint64_t sub_227DCFF3C()
{
  sub_227D51624(&qword_2559284F8, (uint64_t (*)(uint64_t))type metadata accessor for CKError, (uint64_t)&unk_227E6EC84);
  return sub_227E5F108();
}

uint64_t sub_227DCFF94(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_227D68330(&qword_253F3B088);
    v10 = (char *)swift_allocObject();
    v11 = j__malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v8])
      memmove(v12, v13, v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_227E605A8();
  __break(1u);
  return result;
}

uint64_t sub_227DD00E0(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_retain();
  }
  return swift_retain();
}

unint64_t sub_227DD0124(uint64_t a1)
{
  uint64_t v2;

  sub_227E5F27C();
  sub_227D51624((unint64_t *)&qword_2559282A0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE930]);
  v2 = sub_227E5FF3C();
  return sub_227DD196C(a1, v2);
}

unint64_t sub_227DD0190(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_227E60440();
  return sub_227DD1AAC(a1, v2);
}

unint64_t sub_227DD01C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_227E6071C();
  sub_227E60008();
  v4 = sub_227E60734();
  return sub_227DD1B70(a1, a2, v4);
}

unint64_t sub_227DD0224(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_227E60344();
  return sub_227DD1C50(a1, v2, &qword_255928450);
}

unint64_t sub_227DD0270(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_227E60344();
  return sub_227DD1C50(a1, v2, &qword_255928490);
}

uint64_t sub_227DD02BC(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t result;
  int64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  char v38;
  unint64_t v39;
  BOOL v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  int64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t i;
  int v48;

  v3 = v2;
  v5 = sub_227E5F27C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  v9 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v2;
  sub_227D68330(&qword_2559284C8);
  v48 = a2;
  v11 = sub_227E60584();
  v12 = v11;
  if (*(_QWORD *)(v10 + 16))
  {
    v43 = v2;
    v13 = 1 << *(_BYTE *)(v10 + 32);
    v14 = *(_QWORD *)(v10 + 64);
    v45 = (_QWORD *)(v10 + 64);
    if (v13 < 64)
      v15 = ~(-1 << v13);
    else
      v15 = -1;
    v16 = v15 & v14;
    v44 = (unint64_t)(v13 + 63) >> 6;
    v17 = v11 + 64;
    result = swift_retain();
    v19 = 0;
    v46 = v6;
    for (i = v10; ; v10 = i)
    {
      if (v16)
      {
        v23 = __clz(__rbit64(v16));
        v16 &= v16 - 1;
        v24 = v23 | (v19 << 6);
      }
      else
      {
        v25 = v19 + 1;
        if (__OFADD__(v19, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v25 >= v44)
          goto LABEL_34;
        v26 = v45[v25];
        ++v19;
        if (!v26)
        {
          v19 = v25 + 1;
          if (v25 + 1 >= v44)
            goto LABEL_34;
          v26 = v45[v19];
          if (!v26)
          {
            v27 = v25 + 2;
            if (v27 >= v44)
            {
LABEL_34:
              swift_release();
              v3 = v43;
              if ((v48 & 1) != 0)
              {
                v42 = 1 << *(_BYTE *)(v10 + 32);
                if (v42 >= 64)
                  bzero(v45, ((unint64_t)(v42 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v45 = -1 << v42;
                *(_QWORD *)(v10 + 16) = 0;
              }
              break;
            }
            v26 = v45[v27];
            if (!v26)
            {
              while (1)
              {
                v19 = v27 + 1;
                if (__OFADD__(v27, 1))
                  goto LABEL_41;
                if (v19 >= v44)
                  goto LABEL_34;
                v26 = v45[v19];
                ++v27;
                if (v26)
                  goto LABEL_21;
              }
            }
            v19 = v27;
          }
        }
LABEL_21:
        v16 = (v26 - 1) & v26;
        v24 = __clz(__rbit64(v26)) + (v19 << 6);
      }
      v28 = v6;
      v29 = *(_QWORD *)(v6 + 72);
      v30 = *(_QWORD *)(v10 + 48) + v29 * v24;
      if ((v48 & 1) != 0)
      {
        (*(void (**)(char *, unint64_t, uint64_t))(v28 + 32))(v9, v30, v5);
        v31 = (uint64_t *)(*(_QWORD *)(v10 + 56) + 16 * v24);
        v32 = *v31;
        v33 = v31[1];
      }
      else
      {
        (*(void (**)(char *, unint64_t, uint64_t))(v28 + 16))(v9, v30, v5);
        v34 = (uint64_t *)(*(_QWORD *)(v10 + 56) + 16 * v24);
        v32 = *v34;
        v33 = v34[1];
        sub_227DD00E0(*v34, v33);
      }
      sub_227D51624((unint64_t *)&qword_2559282A0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE930]);
      result = sub_227E5FF3C();
      v35 = -1 << *(_BYTE *)(v12 + 32);
      v36 = result & ~v35;
      v37 = v36 >> 6;
      if (((-1 << v36) & ~*(_QWORD *)(v17 + 8 * (v36 >> 6))) != 0)
      {
        v20 = __clz(__rbit64((-1 << v36) & ~*(_QWORD *)(v17 + 8 * (v36 >> 6)))) | v36 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v38 = 0;
        v39 = (unint64_t)(63 - v35) >> 6;
        do
        {
          if (++v37 == v39 && (v38 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          v40 = v37 == v39;
          if (v37 == v39)
            v37 = 0;
          v38 |= v40;
          v41 = *(_QWORD *)(v17 + 8 * v37);
        }
        while (v41 == -1);
        v20 = __clz(__rbit64(~v41)) + (v37 << 6);
      }
      *(_QWORD *)(v17 + ((v20 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v20;
      v21 = *(_QWORD *)(v12 + 48) + v29 * v20;
      v6 = v46;
      result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v46 + 32))(v21, v9, v5);
      v22 = (uint64_t *)(*(_QWORD *)(v12 + 56) + 16 * v20);
      *v22 = v32;
      v22[1] = v33;
      ++*(_QWORD *)(v12 + 16);
    }
  }
  result = swift_release();
  *v3 = v12;
  return result;
}

uint64_t sub_227DD0654(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t result;
  int64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  int64_t v27;
  _QWORD *v28;
  unint64_t v29;
  int64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  char v39;
  unint64_t v40;
  BOOL v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  int64_t v46;
  _QWORD *v47;
  uint64_t i;
  uint64_t v49;
  int v50;
  uint64_t v51;

  v3 = v2;
  v5 = type metadata accessor for ReadingHistoryDay(0);
  v49 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v6);
  v51 = (uint64_t)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_227E5F27C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8, v10);
  v12 = (char *)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *v2;
  sub_227D68330(&qword_2559284C0);
  v50 = a2;
  v14 = v13;
  v15 = sub_227E60584();
  v16 = v15;
  if (!*(_QWORD *)(v14 + 16))
    goto LABEL_41;
  v17 = 1 << *(_BYTE *)(v14 + 32);
  v18 = *(_QWORD *)(v14 + 64);
  v47 = (_QWORD *)(v14 + 64);
  if (v17 < 64)
    v19 = ~(-1 << v17);
  else
    v19 = -1;
  v20 = v19 & v18;
  v45 = v2;
  v46 = (unint64_t)(v17 + 63) >> 6;
  v21 = v15 + 64;
  result = swift_retain();
  v23 = 0;
  for (i = v14; ; v14 = i)
  {
    if (v20)
    {
      v25 = __clz(__rbit64(v20));
      v20 &= v20 - 1;
      v26 = v25 | (v23 << 6);
      goto LABEL_22;
    }
    v27 = v23 + 1;
    if (__OFADD__(v23, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v27 >= v46)
      break;
    v28 = v47;
    v29 = v47[v27];
    ++v23;
    if (!v29)
    {
      v23 = v27 + 1;
      if (v27 + 1 >= v46)
        goto LABEL_34;
      v29 = v47[v23];
      if (!v29)
      {
        v30 = v27 + 2;
        if (v30 >= v46)
        {
LABEL_34:
          swift_release();
          v3 = v45;
          if ((v50 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v29 = v47[v30];
        if (!v29)
        {
          while (1)
          {
            v23 = v30 + 1;
            if (__OFADD__(v30, 1))
              goto LABEL_43;
            if (v23 >= v46)
              goto LABEL_34;
            v29 = v47[v23];
            ++v30;
            if (v29)
              goto LABEL_21;
          }
        }
        v23 = v30;
      }
    }
LABEL_21:
    v20 = (v29 - 1) & v29;
    v26 = __clz(__rbit64(v29)) + (v23 << 6);
LABEL_22:
    v31 = *(_QWORD *)(v9 + 72);
    v32 = *(_QWORD *)(v14 + 48) + v31 * v26;
    if ((v50 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v9 + 32))(v12, v32, v8);
      v33 = *(_QWORD *)(v14 + 56);
      v34 = *(_QWORD *)(v49 + 72);
      sub_227DCD41C(v33 + v34 * v26, v51);
    }
    else
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v9 + 16))(v12, v32, v8);
      v35 = *(_QWORD *)(v14 + 56);
      v34 = *(_QWORD *)(v49 + 72);
      sub_227DCD3D8(v35 + v34 * v26, v51);
    }
    sub_227D51624((unint64_t *)&qword_2559282A0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE930]);
    result = sub_227E5FF3C();
    v36 = -1 << *(_BYTE *)(v16 + 32);
    v37 = result & ~v36;
    v38 = v37 >> 6;
    if (((-1 << v37) & ~*(_QWORD *)(v21 + 8 * (v37 >> 6))) != 0)
    {
      v24 = __clz(__rbit64((-1 << v37) & ~*(_QWORD *)(v21 + 8 * (v37 >> 6)))) | v37 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v39 = 0;
      v40 = (unint64_t)(63 - v36) >> 6;
      do
      {
        if (++v38 == v40 && (v39 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v41 = v38 == v40;
        if (v38 == v40)
          v38 = 0;
        v39 |= v41;
        v42 = *(_QWORD *)(v21 + 8 * v38);
      }
      while (v42 == -1);
      v24 = __clz(__rbit64(~v42)) + (v38 << 6);
    }
    *(_QWORD *)(v21 + ((v24 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v24;
    (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(*(_QWORD *)(v16 + 48) + v31 * v24, v12, v8);
    result = sub_227DCD41C(v51, *(_QWORD *)(v16 + 56) + v34 * v24);
    ++*(_QWORD *)(v16 + 16);
  }
  swift_release();
  v3 = v45;
  v28 = v47;
  if ((v50 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v43 = 1 << *(_BYTE *)(v14 + 32);
  if (v43 >= 64)
    bzero(v28, ((unint64_t)(v43 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v28 = -1 << v43;
  *(_QWORD *)(v14 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v16;
  return result;
}

uint64_t sub_227DD0A48(uint64_t a1, char a2)
{
  return sub_227DD1384(a1, a2, &qword_2559284A8);
}

uint64_t sub_227DD0A54(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  int64_t v37;
  _QWORD *v38;
  uint64_t i;
  char v40;
  __int128 v41;

  v3 = v2;
  v5 = *v2;
  sub_227D68330((uint64_t *)&unk_255928460);
  v40 = a2;
  v6 = sub_227E60584();
  v7 = v6;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 1 << *(_BYTE *)(v5 + 32);
    v38 = (_QWORD *)(v5 + 64);
    if (v8 < 64)
      v9 = ~(-1 << v8);
    else
      v9 = -1;
    v10 = v9 & *(_QWORD *)(v5 + 64);
    v37 = (unint64_t)(v8 + 63) >> 6;
    v11 = v6 + 64;
    result = swift_retain();
    v13 = 0;
    for (i = v5; ; v5 = i)
    {
      if (v10)
      {
        v20 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v21 = v20 | (v13 << 6);
      }
      else
      {
        v22 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v22 >= v37)
          goto LABEL_33;
        v23 = v38[v22];
        ++v13;
        if (!v23)
        {
          v13 = v22 + 1;
          if (v22 + 1 >= v37)
            goto LABEL_33;
          v23 = v38[v13];
          if (!v23)
          {
            v24 = v22 + 2;
            if (v24 >= v37)
            {
LABEL_33:
              swift_release();
              v3 = v2;
              if ((v40 & 1) != 0)
              {
                v36 = 1 << *(_BYTE *)(v5 + 32);
                if (v36 >= 64)
                  bzero(v38, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v38 = -1 << v36;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v23 = v38[v24];
            if (!v23)
            {
              while (1)
              {
                v13 = v24 + 1;
                if (__OFADD__(v24, 1))
                  goto LABEL_40;
                if (v13 >= v37)
                  goto LABEL_33;
                v23 = v38[v13];
                ++v24;
                if (v23)
                  goto LABEL_30;
              }
            }
            v13 = v24;
          }
        }
LABEL_30:
        v10 = (v23 - 1) & v23;
        v21 = __clz(__rbit64(v23)) + (v13 << 6);
      }
      v29 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v21);
      v31 = *v29;
      v30 = v29[1];
      v32 = *(_QWORD *)(v5 + 56) + 40 * v21;
      v33 = *(_QWORD *)v32;
      v34 = *(_QWORD *)(v32 + 8);
      v41 = *(_OWORD *)(v32 + 16);
      v35 = *(_BYTE *)(v32 + 32);
      if ((v40 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      sub_227E6071C();
      sub_227E60008();
      result = sub_227E60734();
      v14 = -1 << *(_BYTE *)(v7 + 32);
      v15 = result & ~v14;
      v16 = v15 >> 6;
      if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
      {
        v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          v27 = v16 == v26;
          if (v16 == v26)
            v16 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v11 + 8 * v16);
        }
        while (v28 == -1);
        v17 = __clz(__rbit64(~v28)) + (v16 << 6);
      }
      *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v17);
      *v18 = v31;
      v18[1] = v30;
      v19 = *(_QWORD *)(v7 + 56) + 40 * v17;
      *(_QWORD *)v19 = v33;
      *(_QWORD *)(v19 + 8) = v34;
      *(_OWORD *)(v19 + 16) = v41;
      *(_BYTE *)(v19 + 32) = v35;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_227DD0D88(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  int64_t v35;
  uint64_t v36;
  char v37;

  v3 = v2;
  v5 = *v2;
  sub_227D68330((uint64_t *)&unk_255928498);
  v37 = a2;
  v6 = sub_227E60584();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v36 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v34 = v2;
  v35 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v35)
      break;
    v22 = (_QWORD *)(v5 + 64);
    v23 = *(_QWORD *)(v36 + 8 * v21);
    ++v13;
    if (!v23)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v35)
        goto LABEL_33;
      v23 = *(_QWORD *)(v36 + 8 * v13);
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v35)
        {
LABEL_33:
          swift_release();
          v3 = v34;
          if ((v37 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v23 = *(_QWORD *)(v36 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            v13 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_42;
            if (v13 >= v35)
              goto LABEL_33;
            v23 = *(_QWORD *)(v36 + 8 * v13);
            ++v24;
            if (v23)
              goto LABEL_30;
          }
        }
        v13 = v24;
      }
    }
LABEL_30:
    v10 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    v29 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v20);
    v31 = *v29;
    v30 = v29[1];
    v32 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v20);
    if ((v37 & 1) == 0)
      swift_bridgeObjectRetain();
    sub_227E6071C();
    sub_227E60008();
    result = sub_227E60734();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v27 = v16 == v26;
        if (v16 == v26)
          v16 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v17);
    *v18 = v31;
    v18[1] = v30;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v17) = v32;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v34;
  v22 = (_QWORD *)(v5 + 64);
  if ((v37 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v33 = 1 << *(_BYTE *)(v5 + 32);
  if (v33 >= 64)
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v33;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_227DD1090(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  _QWORD *v19;
  unint64_t v20;
  int64_t v21;
  void *v22;
  __int128 *v23;
  id v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34[2];

  v3 = v2;
  v5 = *v2;
  sub_227D68330(&qword_255928448);
  v6 = sub_227E60584();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_41;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v33 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v11 = (unint64_t)(v8 + 63) >> 6;
  v12 = v6 + 64;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v10)
    {
      v16 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v17 = v16 | (v14 << 6);
      goto LABEL_22;
    }
    v18 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v18 >= v11)
      break;
    v19 = (_QWORD *)(v5 + 64);
    v20 = *(_QWORD *)(v33 + 8 * v18);
    ++v14;
    if (!v20)
    {
      v14 = v18 + 1;
      if (v18 + 1 >= v11)
        goto LABEL_34;
      v20 = *(_QWORD *)(v33 + 8 * v14);
      if (!v20)
      {
        v21 = v18 + 2;
        if (v21 >= v11)
        {
LABEL_34:
          swift_release();
          if ((a2 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v20 = *(_QWORD *)(v33 + 8 * v21);
        if (!v20)
        {
          while (1)
          {
            v14 = v21 + 1;
            if (__OFADD__(v21, 1))
              goto LABEL_43;
            if (v14 >= v11)
              goto LABEL_34;
            v20 = *(_QWORD *)(v33 + 8 * v14);
            ++v21;
            if (v20)
              goto LABEL_21;
          }
        }
        v14 = v21;
      }
    }
LABEL_21:
    v10 = (v20 - 1) & v20;
    v17 = __clz(__rbit64(v20)) + (v14 << 6);
LABEL_22:
    v22 = *(void **)(*(_QWORD *)(v5 + 48) + 8 * v17);
    v23 = (__int128 *)(*(_QWORD *)(v5 + 56) + 40 * v17);
    if ((a2 & 1) != 0)
    {
      sub_227DD3274(v23, (uint64_t)v34);
    }
    else
    {
      sub_227D572C8((uint64_t)v23, (uint64_t)v34);
      v24 = v22;
    }
    result = sub_227E60344();
    v25 = -1 << *(_BYTE *)(v7 + 32);
    v26 = result & ~v25;
    v27 = v26 >> 6;
    if (((-1 << v26) & ~*(_QWORD *)(v12 + 8 * (v26 >> 6))) != 0)
    {
      v15 = __clz(__rbit64((-1 << v26) & ~*(_QWORD *)(v12 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v28 = 0;
      v29 = (unint64_t)(63 - v25) >> 6;
      do
      {
        if (++v27 == v29 && (v28 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v30 = v27 == v29;
        if (v27 == v29)
          v27 = 0;
        v28 |= v30;
        v31 = *(_QWORD *)(v12 + 8 * v27);
      }
      while (v31 == -1);
      v15 = __clz(__rbit64(~v31)) + (v27 << 6);
    }
    *(_QWORD *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    *(_QWORD *)(*(_QWORD *)(v7 + 48) + 8 * v15) = v22;
    result = sub_227DD3274(v34, *(_QWORD *)(v7 + 56) + 40 * v15);
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v19 = (_QWORD *)(v5 + 64);
  if ((a2 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v32 = 1 << *(_BYTE *)(v5 + 32);
  if (v32 >= 64)
    bzero(v19, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v19 = -1 << v32;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_227DD136C(uint64_t a1, char a2)
{
  return sub_227DD16A0(a1, a2, (uint64_t *)&unk_2559297B0);
}

uint64_t sub_227DD1378(uint64_t a1, char a2)
{
  return sub_227DD1384(a1, a2, &qword_255928458);
}

uint64_t sub_227DD1384(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int64_t v35;
  uint64_t v36;
  char v37;

  v4 = v3;
  v6 = *v3;
  sub_227D68330(a3);
  v37 = a2;
  v7 = sub_227E60584();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
    goto LABEL_40;
  v9 = 1 << *(_BYTE *)(v6 + 32);
  v36 = v6 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v6 + 64);
  v35 = (unint64_t)(v9 + 63) >> 6;
  v12 = v7 + 64;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v11)
    {
      v20 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v35)
      break;
    v23 = (_QWORD *)(v6 + 64);
    v24 = *(_QWORD *)(v36 + 8 * v22);
    ++v14;
    if (!v24)
    {
      v14 = v22 + 1;
      if (v22 + 1 >= v35)
        goto LABEL_33;
      v24 = *(_QWORD *)(v36 + 8 * v14);
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v35)
        {
LABEL_33:
          swift_release();
          if ((v37 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v24 = *(_QWORD *)(v36 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            v14 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_42;
            if (v14 >= v35)
              goto LABEL_33;
            v24 = *(_QWORD *)(v36 + 8 * v14);
            ++v25;
            if (v24)
              goto LABEL_30;
          }
        }
        v14 = v25;
      }
    }
LABEL_30:
    v11 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    v30 = (uint64_t *)(*(_QWORD *)(v6 + 48) + 16 * v21);
    v32 = *v30;
    v31 = v30[1];
    v33 = *(_QWORD *)(*(_QWORD *)(v6 + 56) + 8 * v21);
    if ((v37 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
    }
    sub_227E6071C();
    sub_227E60008();
    result = sub_227E60734();
    v15 = -1 << *(_BYTE *)(v8 + 32);
    v16 = result & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v28 = v17 == v27;
        if (v17 == v27)
          v17 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 16 * v18);
    *v19 = v32;
    v19[1] = v31;
    *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v18) = v33;
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release();
  v23 = (_QWORD *)(v6 + 64);
  if ((v37 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v34 = 1 << *(_BYTE *)(v6 + 32);
  if (v34 >= 64)
    bzero(v23, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v34;
  *(_QWORD *)(v6 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v4 = v8;
  return result;
}

uint64_t sub_227DD1694(uint64_t a1, char a2)
{
  return sub_227DD16A0(a1, a2, &qword_255928440);
}

uint64_t sub_227DD16A0(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  uint64_t result;
  int64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  _QWORD *v24;
  unint64_t v25;
  int64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  void *v33;
  id v34;
  id v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;

  v4 = v3;
  v6 = *v3;
  sub_227D68330(a3);
  v7 = sub_227E60584();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
    goto LABEL_40;
  v9 = 1 << *(_BYTE *)(v6 + 32);
  v37 = v3;
  v38 = v6 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v6 + 64);
  v12 = (unint64_t)(v9 + 63) >> 6;
  v13 = v7 + 64;
  result = swift_retain();
  v15 = 0;
  while (1)
  {
    if (v11)
    {
      v21 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v22 = v21 | (v15 << 6);
      goto LABEL_31;
    }
    v23 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v23 >= v12)
      break;
    v24 = (_QWORD *)(v6 + 64);
    v25 = *(_QWORD *)(v38 + 8 * v23);
    ++v15;
    if (!v25)
    {
      v15 = v23 + 1;
      if (v23 + 1 >= v12)
        goto LABEL_33;
      v25 = *(_QWORD *)(v38 + 8 * v15);
      if (!v25)
      {
        v26 = v23 + 2;
        if (v26 >= v12)
        {
LABEL_33:
          swift_release();
          v4 = v37;
          if ((a2 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v25 = *(_QWORD *)(v38 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            v15 = v26 + 1;
            if (__OFADD__(v26, 1))
              goto LABEL_42;
            if (v15 >= v12)
              goto LABEL_33;
            v25 = *(_QWORD *)(v38 + 8 * v15);
            ++v26;
            if (v25)
              goto LABEL_30;
          }
        }
        v15 = v26;
      }
    }
LABEL_30:
    v11 = (v25 - 1) & v25;
    v22 = __clz(__rbit64(v25)) + (v15 << 6);
LABEL_31:
    v31 = 8 * v22;
    v32 = *(void **)(*(_QWORD *)(v6 + 48) + v31);
    v33 = *(void **)(*(_QWORD *)(v6 + 56) + v31);
    if ((a2 & 1) == 0)
    {
      v34 = v32;
      v35 = v33;
    }
    result = sub_227E60344();
    v16 = -1 << *(_BYTE *)(v8 + 32);
    v17 = result & ~v16;
    v18 = v17 >> 6;
    if (((-1 << v17) & ~*(_QWORD *)(v13 + 8 * (v17 >> 6))) != 0)
    {
      v19 = __clz(__rbit64((-1 << v17) & ~*(_QWORD *)(v13 + 8 * (v17 >> 6)))) | v17 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v27 = 0;
      v28 = (unint64_t)(63 - v16) >> 6;
      do
      {
        if (++v18 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v29 = v18 == v28;
        if (v18 == v28)
          v18 = 0;
        v27 |= v29;
        v30 = *(_QWORD *)(v13 + 8 * v18);
      }
      while (v30 == -1);
      v19 = __clz(__rbit64(~v30)) + (v18 << 6);
    }
    *(_QWORD *)(v13 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    v20 = 8 * v19;
    *(_QWORD *)(*(_QWORD *)(v8 + 48) + v20) = v32;
    *(_QWORD *)(*(_QWORD *)(v8 + 56) + v20) = v33;
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release();
  v4 = v37;
  v24 = (_QWORD *)(v6 + 64);
  if ((a2 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v36 = 1 << *(_BYTE *)(v6 + 32);
  if (v36 >= 64)
    bzero(v24, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v24 = -1 << v36;
  *(_QWORD *)(v6 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v4 = v8;
  return result;
}

unint64_t sub_227DD196C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, unint64_t, uint64_t);
  char v15;
  _QWORD v17[2];

  v3 = v2;
  v17[1] = a1;
  v5 = sub_227E5F27C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = -1 << *(_BYTE *)(v3 + 32);
  v11 = a2 & ~v10;
  if (((*(_QWORD *)(v3 + 64 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0)
  {
    v12 = ~v10;
    v13 = *(_QWORD *)(v6 + 72);
    v14 = *(void (**)(char *, unint64_t, uint64_t))(v6 + 16);
    do
    {
      v14(v9, *(_QWORD *)(v3 + 48) + v13 * v11, v5);
      sub_227D51624((unint64_t *)&unk_253F391C0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE958]);
      v15 = sub_227E5FF6C();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
      if ((v15 & 1) != 0)
        break;
      v11 = (v11 + 1) & v12;
    }
    while (((*(_QWORD *)(v3 + 64 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
  }
  return v11;
}

unint64_t sub_227DD1AAC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v6;
  char v7;
  _BYTE v9[40];

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v6 = ~v3;
    do
    {
      sub_227DD3554(*(_QWORD *)(v2 + 48) + 40 * v4, (uint64_t)v9);
      v7 = MEMORY[0x22E2A9A90](v9, a1);
      sub_227DD3590((uint64_t)v9);
      if ((v7 & 1) != 0)
        break;
      v4 = (v4 + 1) & v6;
    }
    while (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

unint64_t sub_227DD1B70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v9;
  _QWORD *v10;
  BOOL v11;
  uint64_t v12;
  _QWORD *v13;
  BOOL v14;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * v6);
    v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_227E60698() & 1) == 0)
    {
      v12 = ~v5;
      do
      {
        v6 = (v6 + 1) & v12;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          break;
        v13 = (_QWORD *)(v9 + 16 * v6);
        v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_227E60698() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_227DD1C50(uint64_t a1, uint64_t a2, unint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t i;
  id v7;
  char v8;
  uint64_t v9;
  id v10;
  char v11;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  i = a2 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
  {
    sub_227D52DBC(0, a3);
    v7 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * i);
    v8 = sub_227E60350();

    if ((v8 & 1) == 0)
    {
      v9 = ~v5;
      for (i = (i + 1) & v9; ((*(_QWORD *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0; i = (i + 1) & v9)
      {
        v10 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * i);
        v11 = sub_227E60350();

        if ((v11 & 1) != 0)
          break;
      }
    }
  }
  return i;
}

void *sub_227DD1D60()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *result;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t *v27;
  int64_t v28;
  unint64_t v29;
  int64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  int64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v38 = sub_227E5F27C();
  v1 = *(_QWORD *)(v38 - 8);
  MEMORY[0x24BDAC7A8](v38, v2);
  v37 = (char *)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_227D68330(&qword_2559284C8);
  v34 = v0;
  v4 = *v0;
  v5 = sub_227E60578();
  v6 = *(_QWORD *)(v4 + 16);
  v40 = v5;
  if (!v6)
  {
    result = (void *)swift_release();
    v32 = v40;
    v31 = v34;
LABEL_28:
    *v31 = v32;
    return result;
  }
  v7 = v5;
  result = (void *)(v5 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v4 || (unint64_t)result >= v4 + 64 + 8 * v9)
  {
    result = memmove(result, (const void *)(v4 + 64), 8 * v9);
    v7 = v40;
  }
  v35 = v4 + 64;
  v11 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v4 + 16);
  v12 = 1 << *(_BYTE *)(v4 + 32);
  v39 = v4;
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v4 + 64);
  v36 = (unint64_t)(v12 + 63) >> 6;
  v16 = v37;
  v15 = v38;
  v17 = v40;
  while (1)
  {
    if (v14)
    {
      v18 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v19 = v18 | (v11 << 6);
      v20 = v39;
      goto LABEL_12;
    }
    v28 = v11 + 1;
    v20 = v39;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v28 >= v36)
      goto LABEL_26;
    v29 = *(_QWORD *)(v35 + 8 * v28);
    ++v11;
    if (!v29)
    {
      v11 = v28 + 1;
      if (v28 + 1 >= v36)
        goto LABEL_26;
      v29 = *(_QWORD *)(v35 + 8 * v11);
      if (!v29)
        break;
    }
LABEL_25:
    v14 = (v29 - 1) & v29;
    v19 = __clz(__rbit64(v29)) + (v11 << 6);
LABEL_12:
    v21 = *(_QWORD *)(v1 + 72) * v19;
    (*(void (**)(char *, unint64_t, uint64_t))(v1 + 16))(v16, *(_QWORD *)(v20 + 48) + v21, v15);
    v22 = *(_QWORD *)(v20 + 56);
    v23 = 16 * v19;
    v24 = (uint64_t *)(v22 + 16 * v19);
    v25 = *v24;
    v26 = v24[1];
    (*(void (**)(unint64_t, char *, uint64_t))(v1 + 32))(*(_QWORD *)(v17 + 48) + v21, v16, v15);
    v27 = (uint64_t *)(*(_QWORD *)(v17 + 56) + v23);
    *v27 = v25;
    v27[1] = v26;
    result = (void *)sub_227DD00E0(v25, v26);
  }
  v30 = v28 + 2;
  if (v30 >= v36)
  {
LABEL_26:
    result = (void *)swift_release();
    v31 = v34;
    v32 = v40;
    goto LABEL_28;
  }
  v29 = *(_QWORD *)(v35 + 8 * v30);
  if (v29)
  {
    v11 = v30;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v30 + 1;
    if (__OFADD__(v30, 1))
      break;
    if (v11 >= v36)
      goto LABEL_26;
    v29 = *(_QWORD *)(v35 + 8 * v11);
    ++v30;
    if (v29)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_227DD1FD4(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_release();
  }
  return swift_release();
}

uint64_t sub_227DD2018(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_227D68330(&qword_253F39F90);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_227DD2060(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_227D68330(&qword_253F39F90);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

_QWORD *initializeBufferWithCopyOfBuffer for _ReadingHistoryUpdateProperties(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for _ReadingHistoryUpdateProperties()
{
  return swift_bridgeObjectRelease();
}

_QWORD *assignWithCopy for _ReadingHistoryUpdateProperties(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  return a1;
}

_QWORD *assignWithTake for _ReadingHistoryUpdateProperties(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  return a1;
}

uint64_t getEnumTagSinglePayload for _ReadingHistoryUpdateProperties(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for _ReadingHistoryUpdateProperties(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for _ReadingHistoryUpdateProperties()
{
  return &type metadata for _ReadingHistoryUpdateProperties;
}

uint64_t type metadata accessor for ReadingHistoryUpdate()
{
  return objc_opt_self();
}

uint64_t method lookup function for ReadingHistoryUpdate()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ReadingHistoryUpdate.__allocating_init(value:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t type metadata accessor for BDSReadingHistoryUpdateInfo(uint64_t a1)
{
  return sub_227D52DBC(a1, &qword_255928420);
}

_BYTE *initializeBufferWithCopyOfBuffer for _ReadingHistoryUpdateProperties.CodingKeys(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for _ReadingHistoryUpdateProperties.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 1;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 1;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 1;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = v6 - 2;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for _ReadingHistoryUpdateProperties.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_227DD2320 + 4 * byte_227E6E855[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_227DD2354 + 4 * byte_227E6E850[v4]))();
}

uint64_t sub_227DD2354(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_227DD235C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x227DD2364);
  return result;
}

uint64_t sub_227DD2370(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x227DD2378);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_227DD237C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_227DD2384(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_227DD2390(unsigned __int8 *a1)
{
  return *a1;
}

ValueMetadata *type metadata accessor for _ReadingHistoryUpdateProperties.CodingKeys()
{
  return &type metadata for _ReadingHistoryUpdateProperties.CodingKeys;
}

unint64_t sub_227DD23AC()
{
  unint64_t result;

  result = qword_255928428;
  if (!qword_255928428)
  {
    result = MEMORY[0x22E2AA7D4](&unk_227E6E9C4, &type metadata for _ReadingHistoryUpdateProperties.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255928428);
  }
  return result;
}

unint64_t sub_227DD23F4()
{
  unint64_t result;

  result = qword_255928430;
  if (!qword_255928430)
  {
    result = MEMORY[0x22E2AA7D4](&unk_227E6E934, &type metadata for _ReadingHistoryUpdateProperties.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255928430);
  }
  return result;
}

unint64_t sub_227DD243C()
{
  unint64_t result;

  result = qword_255928438;
  if (!qword_255928438)
  {
    result = MEMORY[0x22E2AA7D4](&unk_227E6E95C, &type metadata for _ReadingHistoryUpdateProperties.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255928438);
  }
  return result;
}

void *sub_227DD2480()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *result;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  uint64_t *v26;
  uint64_t v27;
  int64_t v28;
  uint64_t v29;

  v1 = type metadata accessor for ReadingHistoryDay(0);
  v29 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1, v2);
  v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_227E5F27C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_227D68330(&qword_2559284C0);
  v26 = v0;
  v10 = *v0;
  v11 = sub_227E60578();
  v12 = v11;
  if (!*(_QWORD *)(v10 + 16))
  {
LABEL_23:
    result = (void *)swift_release();
    *v26 = v12;
    return result;
  }
  result = (void *)(v11 + 64);
  v14 = (unint64_t)((1 << *(_BYTE *)(v12 + 32)) + 63) >> 6;
  if (v12 != v10 || (unint64_t)result >= v10 + 64 + 8 * v14)
    result = memmove(result, (const void *)(v10 + 64), 8 * v14);
  v27 = v10 + 64;
  v15 = 0;
  *(_QWORD *)(v12 + 16) = *(_QWORD *)(v10 + 16);
  v16 = 1 << *(_BYTE *)(v10 + 32);
  v17 = -1;
  if (v16 < 64)
    v17 = ~(-1 << v16);
  v18 = v17 & *(_QWORD *)(v10 + 64);
  v28 = (unint64_t)(v16 + 63) >> 6;
  while (1)
  {
    if (v18)
    {
      v19 = __clz(__rbit64(v18));
      v18 &= v18 - 1;
      v20 = v19 | (v15 << 6);
      goto LABEL_9;
    }
    v23 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v23 >= v28)
      goto LABEL_23;
    v24 = *(_QWORD *)(v27 + 8 * v23);
    ++v15;
    if (!v24)
    {
      v15 = v23 + 1;
      if (v23 + 1 >= v28)
        goto LABEL_23;
      v24 = *(_QWORD *)(v27 + 8 * v15);
      if (!v24)
        break;
    }
LABEL_22:
    v18 = (v24 - 1) & v24;
    v20 = __clz(__rbit64(v24)) + (v15 << 6);
LABEL_9:
    v21 = *(_QWORD *)(v6 + 72) * v20;
    (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v9, *(_QWORD *)(v10 + 48) + v21, v5);
    v22 = *(_QWORD *)(v29 + 72) * v20;
    sub_227DCD3D8(*(_QWORD *)(v10 + 56) + v22, (uint64_t)v4);
    (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(*(_QWORD *)(v12 + 48) + v21, v9, v5);
    result = (void *)sub_227DCD41C((uint64_t)v4, *(_QWORD *)(v12 + 56) + v22);
  }
  v25 = v23 + 2;
  if (v25 >= v28)
    goto LABEL_23;
  v24 = *(_QWORD *)(v27 + 8 * v25);
  if (v24)
  {
    v15 = v25;
    goto LABEL_22;
  }
  while (1)
  {
    v15 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v15 >= v28)
      goto LABEL_23;
    v24 = *(_QWORD *)(v27 + 8 * v15);
    ++v25;
    if (v24)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

void *sub_227DD26FC()
{
  return sub_227DD2714(&qword_253F3B078);
}

void *sub_227DD2708()
{
  return sub_227DD2714(&qword_253F3B070);
}

void *sub_227DD2714(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *result;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;

  v2 = v1;
  sub_227D68330(a1);
  v3 = *v1;
  v4 = sub_227E60578();
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v2 = v5;
    return result;
  }
  result = (void *)(v4 + 64);
  v7 = v3 + 64;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8)
    result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v21 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v21 >= v14)
      goto LABEL_26;
    v22 = *(_QWORD *)(v7 + 8 * v21);
    ++v10;
    if (!v22)
    {
      v10 = v21 + 1;
      if (v21 + 1 >= v14)
        goto LABEL_26;
      v22 = *(_QWORD *)(v7 + 8 * v10);
      if (!v22)
        break;
    }
LABEL_25:
    v13 = (v22 - 1) & v22;
    v16 = __clz(__rbit64(v22)) + (v10 << 6);
LABEL_12:
    v17 = 8 * v16;
    v18 = *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v16);
    v19 = 16 * v16;
    v20 = *(_OWORD *)(*(_QWORD *)(v3 + 56) + v19);
    *(_QWORD *)(*(_QWORD *)(v5 + 48) + v17) = v18;
    *(_OWORD *)(*(_QWORD *)(v5 + 56) + v19) = v20;
    result = (void *)swift_retain();
  }
  v23 = v21 + 2;
  if (v23 >= v14)
    goto LABEL_26;
  v22 = *(_QWORD *)(v7 + 8 * v23);
  if (v22)
  {
    v10 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    v10 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v10 >= v14)
      goto LABEL_26;
    v22 = *(_QWORD *)(v7 + 8 * v10);
    ++v23;
    if (v22)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_227DD28B4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  _QWORD *v25;
  __int128 v26;
  uint64_t v27;
  int64_t v28;
  unint64_t v29;
  int64_t v30;

  v1 = v0;
  sub_227D68330((uint64_t *)&unk_255928460);
  v2 = *v0;
  v3 = sub_227E60578();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v28 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v28 >= v13)
      goto LABEL_26;
    v29 = *(_QWORD *)(v6 + 8 * v28);
    ++v9;
    if (!v29)
    {
      v9 = v28 + 1;
      if (v28 + 1 >= v13)
        goto LABEL_26;
      v29 = *(_QWORD *)(v6 + 8 * v9);
      if (!v29)
        break;
    }
LABEL_25:
    v12 = (v29 - 1) & v29;
    v15 = __clz(__rbit64(v29)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v19 = *v17;
    v18 = v17[1];
    v20 = 40 * v15;
    v21 = *(_QWORD *)(v2 + 56) + v20;
    v22 = *(_QWORD *)v21;
    v23 = *(_QWORD *)(v21 + 8);
    v24 = *(_BYTE *)(v21 + 32);
    v25 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    v26 = *(_OWORD *)(v21 + 16);
    *v25 = v19;
    v25[1] = v18;
    v27 = *(_QWORD *)(v4 + 56) + v20;
    *(_QWORD *)v27 = v22;
    *(_QWORD *)(v27 + 8) = v23;
    *(_OWORD *)(v27 + 16) = v26;
    *(_BYTE *)(v27 + 32) = v24;
    swift_bridgeObjectRetain();
    result = (void *)swift_bridgeObjectRetain();
  }
  v30 = v28 + 2;
  if (v30 >= v13)
    goto LABEL_26;
  v29 = *(_QWORD *)(v6 + 8 * v30);
  if (v29)
  {
    v9 = v30;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v30 + 1;
    if (__OFADD__(v30, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v29 = *(_QWORD *)(v6 + 8 * v9);
    ++v30;
    if (v29)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_227DD2A84()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;

  v1 = v0;
  sub_227D68330((uint64_t *)&unk_255928498);
  v2 = *v0;
  v3 = sub_227E60578();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v23 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v13)
      goto LABEL_26;
    v24 = *(_QWORD *)(v6 + 8 * v23);
    ++v9;
    if (!v24)
    {
      v9 = v23 + 1;
      if (v23 + 1 >= v13)
        goto LABEL_26;
      v24 = *(_QWORD *)(v6 + 8 * v9);
      if (!v24)
        break;
    }
LABEL_25:
    v12 = (v24 - 1) & v24;
    v15 = __clz(__rbit64(v24)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v19 = *v17;
    v18 = v17[1];
    v20 = 8 * v15;
    v21 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v20);
    v22 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v22 = v19;
    v22[1] = v18;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v20) = v21;
    result = (void *)swift_bridgeObjectRetain();
  }
  v25 = v23 + 2;
  if (v25 >= v13)
    goto LABEL_26;
  v24 = *(_QWORD *)(v6 + 8 * v25);
  if (v24)
  {
    v9 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v24 = *(_QWORD *)(v6 + 8 * v9);
    ++v25;
    if (v24)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_227DD2C30()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  __int128 v22[2];

  v1 = v0;
  sub_227D68330(&qword_255928448);
  v2 = *v0;
  v3 = sub_227E60578();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v19 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v13)
      goto LABEL_26;
    v20 = *(_QWORD *)(v6 + 8 * v19);
    ++v9;
    if (!v20)
    {
      v9 = v19 + 1;
      if (v19 + 1 >= v13)
        goto LABEL_26;
      v20 = *(_QWORD *)(v6 + 8 * v9);
      if (!v20)
        break;
    }
LABEL_25:
    v12 = (v20 - 1) & v20;
    v15 = __clz(__rbit64(v20)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(void **)(*(_QWORD *)(v2 + 48) + 8 * v15);
    v18 = 40 * v15;
    sub_227D572C8(*(_QWORD *)(v2 + 56) + 40 * v15, (uint64_t)v22);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    sub_227DD3274(v22, *(_QWORD *)(v4 + 56) + v18);
    result = v17;
  }
  v21 = v19 + 2;
  if (v21 >= v13)
    goto LABEL_26;
  v20 = *(_QWORD *)(v6 + 8 * v21);
  if (v20)
  {
    v9 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v20 = *(_QWORD *)(v6 + 8 * v9);
    ++v21;
    if (v20)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_227DD2DF8()
{
  return sub_227DD2FC4((uint64_t *)&unk_2559297B0);
}

void *sub_227DD2E04()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  sub_227D68330(&qword_255928458);
  v2 = *v0;
  v3 = sub_227E60578();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v18 = v17[1];
    v19 = 8 * v15;
    v20 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v19);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = *v17;
    v21[1] = v18;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    result = (void *)swift_unknownObjectRetain();
  }
  v24 = v22 + 2;
  if (v24 >= v13)
    goto LABEL_26;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_227DD2FB8()
{
  return sub_227DD2FC4(&qword_255928440);
}

id sub_227DD2FC4(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id result;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;
  id v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;

  v2 = v1;
  sub_227D68330(a1);
  v3 = *v1;
  v4 = sub_227E60578();
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v2 = v5;
    return result;
  }
  result = (id)(v4 + 64);
  v7 = v3 + 64;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8)
    result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v21 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v21 >= v14)
      goto LABEL_26;
    v22 = *(_QWORD *)(v7 + 8 * v21);
    ++v10;
    if (!v22)
    {
      v10 = v21 + 1;
      if (v21 + 1 >= v14)
        goto LABEL_26;
      v22 = *(_QWORD *)(v7 + 8 * v10);
      if (!v22)
        break;
    }
LABEL_25:
    v13 = (v22 - 1) & v22;
    v16 = __clz(__rbit64(v22)) + (v10 << 6);
LABEL_12:
    v17 = 8 * v16;
    v18 = *(void **)(*(_QWORD *)(v3 + 48) + v17);
    v19 = *(void **)(*(_QWORD *)(v3 + 56) + v17);
    *(_QWORD *)(*(_QWORD *)(v5 + 48) + v17) = v18;
    *(_QWORD *)(*(_QWORD *)(v5 + 56) + v17) = v19;
    v20 = v18;
    result = v19;
  }
  v23 = v21 + 2;
  if (v23 >= v14)
    goto LABEL_26;
  v22 = *(_QWORD *)(v7 + 8 * v23);
  if (v22)
  {
    v10 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    v10 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v10 >= v14)
      goto LABEL_26;
    v22 = *(_QWORD *)(v7 + 8 * v10);
    ++v23;
    if (v22)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_227DD3160(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6174614473796164 && a2 == 0xE800000000000000;
  if (v2 || (sub_227E60698() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656E654774696465 && a2 == 0xEE006E6F69746172)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_227E60698();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_227DD3274(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_QWORD *)(a2 + 32) = *((_QWORD *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

unint64_t sub_227DD328C()
{
  unint64_t result;

  result = qword_255928470;
  if (!qword_255928470)
  {
    result = MEMORY[0x22E2AA7D4](&protocol conformance descriptor for _ReadingHistoryServiceStatus, &type metadata for _ReadingHistoryServiceStatus);
    atomic_store(result, (unint64_t *)&qword_255928470);
  }
  return result;
}

id sub_227DD32D0()
{
  void *v0;
  void *v1;
  id v2;
  id v3;
  id v4;
  id v6[2];

  v6[1] = *(id *)MEMORY[0x24BDAC8D0];
  v1 = (void *)sub_227E5F1D4();
  v6[0] = 0;
  v2 = objc_msgSend(v0, sel_initForReadingFromData_error_, v1, v6);

  if (v2)
  {
    v3 = v6[0];
  }
  else
  {
    v4 = v6[0];
    sub_227E5F144();

    swift_willThrow();
  }
  return v2;
}

id sub_227DD338C(void *a1)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  id v7;
  id v8;
  id v9;
  objc_class *v11;
  _BYTE *v12;
  objc_super v13;
  char v14;

  sub_227D52DBC(0, &qword_255928478);
  v2 = sub_227E60308();
  if (v2)
  {
    v3 = (void *)v2;
    v4 = sub_227E5F1E0();
    v6 = v5;
    v7 = objc_allocWithZone(MEMORY[0x24BDD1620]);
    v8 = sub_227DD32D0();
    sub_227DD1FD4(v4, v6);
    if (v8)
    {
      sub_227DD3510();
      sub_227E60278();
      if (v14 != 2)
      {
        v11 = (objc_class *)type metadata accessor for ReadingHistoryServiceStatus();
        v12 = objc_allocWithZone(v11);
        v12[OBJC_IVAR___BDSReadingHistoryServiceStatus_value] = v14 & 1;
        v13.receiver = v12;
        v13.super_class = v11;
        v9 = objc_msgSendSuper2(&v13, sel_init);
        objc_msgSend(v8, sel_finishDecoding);

        return v9;
      }
      objc_msgSend(v8, sel_finishDecoding);

    }
  }
  else
  {

  }
  return 0;
}

unint64_t sub_227DD3510()
{
  unint64_t result;

  result = qword_255928480;
  if (!qword_255928480)
  {
    result = MEMORY[0x22E2AA7D4](&protocol conformance descriptor for _ReadingHistoryServiceStatus, &type metadata for _ReadingHistoryServiceStatus);
    atomic_store(result, (unint64_t *)&qword_255928480);
  }
  return result;
}

uint64_t sub_227DD3554(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(MEMORY[0x24BEE23D0] - 8) + 16))(a2, a1);
  return a2;
}

uint64_t sub_227DD3590(uint64_t a1)
{
  (*(void (**)(void))(*(_QWORD *)(MEMORY[0x24BEE23D0] - 8) + 8))();
  return a1;
}

unint64_t sub_227DD35C4()
{
  unint64_t result;

  result = qword_2559284B0;
  if (!qword_2559284B0)
  {
    result = MEMORY[0x22E2AA7D4](&protocol conformance descriptor for _ReadingHistoryUpdateProperties, &type metadata for _ReadingHistoryUpdateProperties);
    atomic_store(result, (unint64_t *)&qword_2559284B0);
  }
  return result;
}

unint64_t sub_227DD3608()
{
  unint64_t result;

  result = qword_2559284B8;
  if (!qword_2559284B8)
  {
    result = MEMORY[0x22E2AA7D4](&protocol conformance descriptor for _ReadingHistoryUpdateProperties, &type metadata for _ReadingHistoryUpdateProperties);
    atomic_store(result, (unint64_t *)&qword_2559284B8);
  }
  return result;
}

uint64_t sub_227DD364C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ReadingHistoryDay(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void type metadata accessor for Code(uint64_t a1)
{
  sub_227DD36B8(a1, &qword_2559284D0);
}

void type metadata accessor for CKError(uint64_t a1)
{
  sub_227DD36B8(a1, &qword_2559284D8);
}

void sub_227DD36B8(uint64_t a1, unint64_t *a2)
{
  unint64_t ForeignTypeMetadata;
  uint64_t v4;

  if (!*a2)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4)
      atomic_store(ForeignTypeMetadata, a2);
  }
}

uint64_t sub_227DD36FC()
{
  return sub_227D51624(&qword_2559284E0, (uint64_t (*)(uint64_t))type metadata accessor for CKError, (uint64_t)&unk_227E6EAB4);
}

uint64_t sub_227DD3728()
{
  return sub_227D51624(&qword_2559284E8, (uint64_t (*)(uint64_t))type metadata accessor for CKError, (uint64_t)&unk_227E6EAE0);
}

uint64_t sub_227DD3754()
{
  return sub_227D51624(&qword_2559284F0, (uint64_t (*)(uint64_t))type metadata accessor for Code, (uint64_t)&unk_227E6EBE0);
}

uint64_t sub_227DD3780()
{
  return sub_227D51624(&qword_2559284F8, (uint64_t (*)(uint64_t))type metadata accessor for CKError, (uint64_t)&unk_227E6EC84);
}

uint64_t sub_227DD37AC()
{
  return sub_227D51624(&qword_255928500, (uint64_t (*)(uint64_t))type metadata accessor for CKError, (uint64_t)&unk_227E6EB9C);
}

uint64_t sub_227DD37D8()
{
  return sub_227D51624(&qword_255928508, (uint64_t (*)(uint64_t))type metadata accessor for CKError, (uint64_t)&unk_227E6EB68);
}

uint64_t sub_227DD3804()
{
  return sub_227D51624((unint64_t *)&unk_255928510, (uint64_t (*)(uint64_t))type metadata accessor for CKError, (uint64_t)&unk_227E6EB24);
}

uint64_t sub_227DD3830()
{
  return sub_227D51624(&qword_2559297C0, (uint64_t (*)(uint64_t))type metadata accessor for Code, (uint64_t)&unk_227E6EC48);
}

uint64_t sub_227DD385C()
{
  return sub_227D51624(&qword_255928520, (uint64_t (*)(uint64_t))type metadata accessor for Code, (uint64_t)&unk_227E6EC0C);
}

unint64_t sub_227DD388C()
{
  unint64_t result;

  result = qword_255928528;
  if (!qword_255928528)
  {
    result = MEMORY[0x22E2AA7D4](MEMORY[0x24BEE17C8], MEMORY[0x24BEE1768]);
    atomic_store(result, (unint64_t *)&qword_255928528);
  }
  return result;
}

uint64_t sub_227DD38D4()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;

  swift_getMetatypeMetadata();
  v0 = sub_227E5FFC0();
  v2 = v1;
  sub_227E60068();
  v3 = sub_227E5FFCC();
  v5 = v4;
  swift_bridgeObjectRelease();
  v6 = sub_227DD92EC(15, v3, v5, v0, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v6;
}

BOOL static CRDTModelSyncManager.SyncError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t CRDTModelSyncManager.SyncError.hash(into:)()
{
  return sub_227E60728();
}

uint64_t CRDTModelSyncManager.SyncError.hashValue.getter()
{
  sub_227E6071C();
  sub_227E60728();
  return sub_227E60734();
}

uint64_t sub_227DD3A14()
{
  sub_227E6071C();
  CRDTModelSyncManager.SyncError.hash(into:)();
  return sub_227E60734();
}

id static CRDTModelSyncManager.defaultDataSource.getter()
{
  uint64_t *v0;

  type metadata accessor for CRDTModelCloudDataManager(0, v0[10], v0[11], v0[12]);
  return sub_227E43414();
}

uint64_t sub_227DD3A88@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;

  v3 = *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v1) + 0x50);
  v4 = type metadata accessor for ModelState(0, v3, *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v1) + 0x58), *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v1) + 0x60));
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v6);
  v8 = (char *)&v10 - v7;
  swift_retain();
  MutableObservableContainer.value.getter();
  swift_release();
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v8, v3);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
}

uint64_t CRDTModelSyncManager.observable.getter()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v1 = type metadata accessor for ModelState(255, *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v0) + 0x50), *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v0) + 0x58), *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v0) + 0x60));
  v2 = MEMORY[0x22E2AA7D4](&protocol conformance descriptor for ModelState<A>, v1);
  type metadata accessor for MutableObservableContainer(0, v1, v2, v3);
  sub_227E602CC();
  return v5;
}

uint64_t sub_227DD3BFC@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(*(_QWORD *)(v1 + 16) + qword_255928720);
  return swift_retain();
}

uint64_t CRDTModelSyncManager.model.getter()
{
  return sub_227E602CC();
}

uint64_t sub_227DD3C8C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;

  v3 = *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *a1) + 0x50);
  v4 = type metadata accessor for ModelState(0, v3, *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *a1) + 0x58), *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *a1) + 0x60));
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v6);
  v8 = (char *)&v10 - v7;
  swift_retain();
  MutableObservableContainer.value.getter();
  swift_release();
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a2, v8, v3);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
}

uint64_t sub_227DD3D70@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_227DD3C8C(*(_QWORD **)(v1 + 16), a1);
}

uint64_t CRDTModelSyncManager.enableCloudSync.getter()
{
  uint64_t v0;
  unsigned __int8 *v1;

  v1 = (unsigned __int8 *)(v0 + qword_25592FEA0);
  swift_beginAccess();
  return *v1;
}

void CRDTModelSyncManager.enableCloudSync.setter(char a1)
{
  uint64_t v1;
  char *v3;
  char v4;

  v3 = (char *)(v1 + qword_25592FEA0);
  swift_beginAccess();
  v4 = *v3;
  *v3 = a1;
  sub_227DD3E24(v4);
}

void sub_227DD3E24(char a1)
{
  uint64_t v1;
  int v2;
  unsigned __int8 *v3;
  int v4;

  v2 = a1 & 1;
  v3 = (unsigned __int8 *)(v1 + qword_25592FEA0);
  swift_beginAccess();
  v4 = *v3;
  if (v4 != v2)
    sub_227E43614(v4);
}

void (*CRDTModelSyncManager.enableCloudSync.modify(_QWORD *a1))(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  _BYTE *v4;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[3] = v1;
  v4 = (_BYTE *)(v1 + qword_25592FEA0);
  swift_beginAccess();
  *((_BYTE *)v3 + 32) = *v4;
  return sub_227DD3EF8;
}

void sub_227DD3EF8(uint64_t a1)
{
  void *v1;

  v1 = *(void **)a1;
  CRDTModelSyncManager.enableCloudSync.setter(*(_BYTE *)(*(_QWORD *)a1 + 32));
  free(v1);
}

char *CRDTModelSyncManager.__allocating_init(cloudKitController:crdtContext:dataSource:transactionProvider:)(void *a1, void *a2, void *a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t *v5;
  id v10;
  id v11;
  id v12;
  char *v13;
  id v14;
  char *v15;

  v5 = v4;
  type metadata accessor for CRDTModelCloudDataManager(0, v5[10], v5[11], v5[12]);
  v10 = a1;
  v11 = a2;
  v12 = a3;
  swift_unknownObjectRetain();
  v13 = sub_227E43498(v10, v11, v12, a4);
  v14 = objc_allocWithZone((Class)v5);
  v15 = sub_227DD4058(v13, v11, a4);

  *(_QWORD *)&v13[qword_25592FED0 + 8] = &off_24F08C3D0;
  swift_unknownObjectWeakAssign();

  return v15;
}

char *sub_227DD4010(void *a1, void *a2, uint64_t a3)
{
  objc_class *v3;
  id v7;

  v7 = objc_allocWithZone(v3);
  return sub_227DD4058(a1, a2, a3);
}

char *sub_227DD4058(void *a1, void *a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  uint64_t v39;
  void (*v40)(char *, char *, uint64_t);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  _QWORD *v49;
  id v50;
  char *v51;
  char *v52;
  NSObject *v53;
  os_log_type_t v54;
  uint8_t *v55;
  uint64_t v56;
  _QWORD *v57;
  char *v59;
  uint64_t v60;
  objc_class *ObjectType;
  char *v62;
  uint64_t v63;
  id v64;
  char *v65;
  void *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  objc_super v73;
  _QWORD v74[2];

  v63 = a3;
  v64 = a2;
  v66 = a1;
  ObjectType = (objc_class *)swift_getObjectType();
  v4 = (_QWORD *)(*MEMORY[0x24BEE4EA0] & *v3);
  v5 = sub_227D68330(&qword_253F3A4F0);
  MEMORY[0x24BDAC7A8](v5, v6);
  v65 = (char *)&v59 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = v4[10];
  v9 = v4[12];
  v10 = v4[11];
  v60 = v10;
  v72 = v9;
  v11 = type metadata accessor for ModelState.Source(0, v8, v10, v9);
  MEMORY[0x24BDAC7A8](v11, v12);
  v62 = (char *)&v59 - v13;
  v14 = type metadata accessor for ModelState(0, v8, v10, v9);
  v68 = *(_QWORD *)(v14 - 8);
  v69 = v14;
  v16 = MEMORY[0x24BDAC7A8](v14, v15);
  v71 = (uint64_t)&v59 - v17;
  v70 = *(_QWORD *)(v8 - 8);
  v19 = MEMORY[0x24BDAC7A8](v16, v18);
  v59 = (char *)&v59 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19, v21);
  v23 = (char *)&v59 - v22;
  v24 = sub_227E602B4();
  v67 = *(char **)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24, v25);
  v27 = (char *)&v59 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = sub_227E6029C();
  MEMORY[0x24BDAC7A8](v28, v29);
  v30 = sub_227E5F978();
  MEMORY[0x24BDAC7A8](v30, v31);
  v74[0] = 0;
  v74[1] = 0xE000000000000000;
  v32 = v3;
  sub_227E60494();
  swift_bridgeObjectRelease();
  strcpy((char *)v74, "CRDTModelSync.");
  HIBYTE(v74[1]) = -18;
  sub_227DD38D4();
  sub_227E6002C();
  swift_bridgeObjectRelease();
  sub_227E5F57C();
  v33 = qword_255928710;
  sub_227D6A668();
  sub_227E5F96C();
  sub_227E60290();
  v34 = v24;
  v35 = v63;
  (*((void (**)(char *, _QWORD, uint64_t))v67 + 13))(v27, *MEMORY[0x24BEE5758], v34);
  *(_QWORD *)((char *)v32 + v33) = sub_227E602E4();
  v36 = v69;
  *((_BYTE *)v32 + qword_25592FEA0) = 0;
  v37 = v60;
  sub_227E5FC60();
  v38 = v64;
  *(_QWORD *)((char *)v32 + qword_255928718) = v64;
  v39 = v70;
  v40 = *(void (**)(char *, char *, uint64_t))(v70 + 16);
  v41 = (uint64_t)v59;
  v67 = v23;
  v40(v59, v23, v8);
  LOBYTE(v74[0]) = 0;
  v42 = (uint64_t)v62;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v39 + 56))(v62, 1, 2, v8);
  v43 = type metadata accessor for CRDTModelRevisionInfo();
  v44 = (uint64_t)v65;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 56))(v65, 1, 1, v43);
  v64 = v38;
  v45 = v71;
  ModelState.init(model:loaded:source:revisionInfo:)(v41, (char *)v74, v42, v44, v8, v37, v72, v71);
  v46 = MEMORY[0x22E2AA7D4](&protocol conformance descriptor for ModelState<A>, v36);
  type metadata accessor for MutableObservableContainer(0, v36, v46, v47);
  *(_QWORD *)((char *)v32 + qword_255928720) = sub_227D51664(v45);
  v48 = v66;
  *(_QWORD *)((char *)v32 + qword_255928730) = v66;
  *(_QWORD *)((char *)v32 + qword_255928738) = v35;
  type metadata accessor for ObservableTransaction();
  v49 = (_QWORD *)swift_allocObject();
  swift_getObjectType();
  swift_unknownObjectRetain_n();
  v50 = v48;
  *(_QWORD *)((char *)v32 + qword_255928728) = sub_227D5232C(0xD000000000000030, 0x8000000227E6B4C0, v35, v49);

  v73.receiver = v32;
  v73.super_class = ObjectType;
  v51 = (char *)objc_msgSendSuper2(&v73, sel_init);
  sub_227D6F854(*(_QWORD *)&v51[qword_255928728], (uint64_t)&protocol witness table for ObservableTransaction);
  v52 = v51;
  v53 = sub_227E5F570();
  v54 = sub_227E60248();
  if (os_log_type_enabled(v53, v54))
  {
    v55 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v55 = 0;
    _os_log_impl(&dword_227D4F000, v53, v54, "CRDTModelSyncManager Init: About to load cloudData", v55, 2u);
    MEMORY[0x22E2AA8AC](v55, -1, -1);
  }

  v56 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v57 = (_QWORD *)swift_allocObject();
  v57[2] = v8;
  v57[3] = v37;
  v57[4] = v72;
  v57[5] = v56;
  swift_retain();
  sub_227E434F0((uint64_t)sub_227DD7CB8, (uint64_t)v57);

  swift_unknownObjectRelease();
  swift_release();

  (*(void (**)(uint64_t, uint64_t))(v68 + 8))(v71, v69);
  (*(void (**)(char *, uint64_t))(v70 + 8))(v67, v8);
  swift_release();
  return v52;
}

uint64_t sub_227DD46A0(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t result;
  void *v15;
  uint64_t v16;
  void *v17;
  id v18;
  id v19;
  _QWORD aBlock[6];

  v4 = sub_227E5F978();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v6);
  v8 = (char *)&aBlock[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_227E5F948();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9, v11);
  v13 = (char *)&aBlock[-1] - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = MEMORY[0x22E2AA96C](a2 + 16);
  if (result)
  {
    v15 = (void *)result;
    sub_227E5F93C();
    v16 = swift_allocObject();
    *(_QWORD *)(v16 + 16) = v15;
    *(_QWORD *)(v16 + 24) = a1;
    aBlock[4] = sub_227DD7CF0;
    aBlock[5] = v16;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_227D5A858;
    aBlock[3] = &unk_24F08C668;
    v17 = _Block_copy(aBlock);
    v18 = a1;
    v19 = v15;
    sub_227E5F960();
    MEMORY[0x22E2A991C](0, v8, v13, v17);
    _Block_release(v17);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);

    return swift_release();
  }
  return result;
}

uint64_t sub_227DD484C(_QWORD *a1, void *a2)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  char *v39;
  uint64_t v40;
  char *v41;
  char *v42;
  _QWORD *v43;
  uint8_t *v44;
  uint8_t *v45;
  id v46;
  uint64_t *v47;
  unint64_t v48;
  uint64_t v49;
  void *v50;
  uint64_t v51;
  id v52;
  NSObject *v53;
  os_log_type_t v54;
  _QWORD *v55;
  uint8_t *v56;
  uint8_t *v57;
  uint64_t v58;
  _QWORD *v59;
  uint8_t *v60;
  uint8_t *v61;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char v66;
  void (*v67)(char *, uint64_t);
  void (*v68)(char *, char *, uint64_t);
  char *v69;
  NSObject *v70;
  os_log_type_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  char *v77;
  void (*v78)(char *, uint64_t);
  uint64_t v79;
  unint64_t v80;
  uint64_t v81;
  id v82;
  char *v83;
  uint64_t v84;
  char *v85;
  char *v86;
  NSObject *v87;
  os_log_type_t v88;
  uint64_t v89;
  uint8_t *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  unint64_t v94;
  void (*v95)(char *, uint64_t);
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  _QWORD *v102;
  uint64_t v103;
  char *v104;
  char *v105;
  uint64_t v106;
  unint64_t v107;
  void (*v108)(char *, uint64_t);
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114[5];

  v3 = a1;
  v4 = *MEMORY[0x24BEE4EA0] & *a1;
  v5 = *(_QWORD *)(v4 + 0x50);
  v6 = sub_227E6038C();
  v106 = *(_QWORD *)(v6 - 8);
  v107 = v6;
  MEMORY[0x24BDAC7A8](v6, v7);
  v9 = (char *)&v99 - v8;
  v10 = sub_227D68330(&qword_253F3A4F0);
  v12 = MEMORY[0x24BDAC7A8](v10, v11);
  v14 = (uint64_t *)((char *)&v99 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v16 = MEMORY[0x24BDAC7A8](v12, v15);
  v18 = (char *)&v99 - v17;
  v110 = *(_QWORD *)(v5 - 8);
  v111 = v5;
  v20 = MEMORY[0x24BDAC7A8](v16, v19);
  v22 = (char *)&v99 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = MEMORY[0x24BDAC7A8](v20, v23);
  v104 = (char *)&v99 - v25;
  v27 = MEMORY[0x24BDAC7A8](v24, v26);
  v29 = (char *)&v99 - v28;
  v31 = MEMORY[0x24BDAC7A8](v27, v30);
  v105 = (char *)&v99 - v32;
  MEMORY[0x24BDAC7A8](v31, v33);
  v35 = (char *)&v99 - v34;
  sub_227DD3A88((uint64_t)&v99 - v34);
  v36 = type metadata accessor for CRDTModelRevisionInfo();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v18, 1, 1, v36);
  if (!a2)
  {
    v53 = sub_227E5F570();
    v58 = sub_227E60248();
    if (os_log_type_enabled(v53, (os_log_type_t)v58))
    {
      v59 = v3;
      v60 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v60 = 0;
      _os_log_impl(&dword_227D4F000, v53, (os_log_type_t)v58, "CRDTModelSyncManager Init: empty cloudData", v60, 2u);
      v61 = v60;
      v3 = v59;
      MEMORY[0x22E2AA8AC](v61, -1, -1);
    }
    goto LABEL_11;
  }
  v109 = a2;
  sub_227DD5184(v14);
  sub_227D5809C((uint64_t)v18, &qword_253F3A4F0);
  sub_227D5B0DC((uint64_t)v14, (uint64_t)v18, &qword_253F3A4F0);
  v108 = (void (*)(char *, uint64_t))((char *)v3 + qword_25592FEA8);
  v37 = sub_227E5F570();
  v38 = sub_227E60248();
  if (os_log_type_enabled(v37, v38))
  {
    v39 = v35;
    v40 = v4;
    v41 = v18;
    v42 = v22;
    v43 = v3;
    v44 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v44 = 0;
    _os_log_impl(&dword_227D4F000, v37, v38, "CRDTModelSyncManager Init: About to deserialize existing data", v44, 2u);
    v45 = v44;
    v3 = v43;
    v22 = v42;
    v18 = v41;
    v4 = v40;
    v35 = v39;
    MEMORY[0x22E2AA8AC](v45, -1, -1);
  }

  v46 = v109;
  v47 = (uint64_t *)&v109[OBJC_IVAR____TtC13BookDataStore13CRDTModelSync_protoData];
  v48 = *(_QWORD *)&v109[OBJC_IVAR____TtC13BookDataStore13CRDTModelSync_protoData + 8];
  if (v48 >> 60 == 15)
  {
    v53 = sub_227E5F570();
    v54 = sub_227E60230();
    if (os_log_type_enabled(v53, v54))
    {
      v55 = v3;
      v56 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v56 = 0;
      _os_log_impl(&dword_227D4F000, v53, v54, "CRDTModelSyncManager Init: couldn't deserialize existing data", v56, 2u);
      v57 = v56;
      v3 = v55;
      v46 = v109;
      MEMORY[0x22E2AA8AC](v57, -1, -1);
    }

LABEL_11:
    goto LABEL_12;
  }
  v102 = v22;
  v49 = *v47;
  v50 = *(void **)((char *)v3 + qword_255928718);
  sub_227DD7904(*v47, v48);
  sub_227DD7904(v49, v48);
  v51 = *(_QWORD *)(*(_QWORD *)(v4 + 88) + 8);
  v52 = v50;
  v103 = v51;
  sub_227E5FD50();
  v101 = v4;
  v106 = v49;
  v107 = v48;
  v64 = v110;
  v63 = v111;
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v110 + 56))(v9, 0, 1, v111);
  v65 = v105;
  (*(void (**)(char *, char *, uint64_t))(v64 + 32))(v105, v9, v63);
  sub_227DD3A88((uint64_t)v29);
  v66 = sub_227E5FD20();
  v67 = *(void (**)(char *, uint64_t))(v64 + 8);
  v67(v29, v63);
  v68 = *(void (**)(char *, char *, uint64_t))(v64 + 16);
  if ((v66 & 1) != 0)
  {
    v69 = v104;
    v68(v104, v65, v111);
    v70 = sub_227E5F570();
    v71 = sub_227E60248();
    if (os_log_type_enabled(v70, v71))
    {
      v72 = swift_slowAlloc();
      v108 = v67;
      v73 = v72;
      v100 = swift_slowAlloc();
      v114[0] = v100;
      *(_DWORD *)v73 = 136315394;
      v102 = v3;
      v74 = v111;
      v75 = sub_227E60674();
      v113 = sub_227D634E0(v75, v76, v114);
      sub_227E603B0();
      swift_bridgeObjectRelease();
      v77 = v69;
      v78 = v108;
      v108(v77, v74);
      *(_WORD *)(v73 + 12) = 2080;
      swift_beginAccess();
      v79 = sub_227E60674();
      v112 = sub_227D634E0(v79, v80, v114);
      v3 = v102;
      sub_227E603B0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_227D4F000, v70, v71, "CRDTModelSyncManager Init: loaded stored model=%s, merging into existing=%s", (uint8_t *)v73, 0x16u);
      v81 = v100;
      swift_arrayDestroy();
      MEMORY[0x22E2AA8AC](v81, -1, -1);
      v82 = v109;
      MEMORY[0x22E2AA8AC](v73, -1, -1);

      v83 = v105;
      v84 = v106;
    }
    else
    {

      v67(v69, v111);
      v78 = v67;
      v83 = v105;
      v84 = v106;
      v82 = v109;
    }
    swift_beginAccess();
    v96 = v111;
    sub_227E5FC0C();
    swift_endAccess();

    sub_227DD7918(v84, v107);
    v78(v83, v96);
  }
  else
  {
    v85 = (char *)v102;
    v68((char *)v102, v65, v111);
    v86 = v65;
    v87 = sub_227E5F570();
    v88 = sub_227E60248();
    if (os_log_type_enabled(v87, v88))
    {
      v89 = swift_slowAlloc();
      v108 = v67;
      v90 = (uint8_t *)v89;
      v91 = swift_slowAlloc();
      v114[0] = v91;
      v104 = v35;
      *(_DWORD *)v90 = 136315138;
      v92 = v111;
      v93 = sub_227E60674();
      v113 = sub_227D634E0(v93, v94, v114);
      v35 = v104;
      sub_227E603B0();
      swift_bridgeObjectRelease();
      v95 = v108;
      v108((char *)v102, v92);
      _os_log_impl(&dword_227D4F000, v87, v88, "CRDTModelSyncManager Init: loaded stored model=%s, no delta", v90, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x22E2AA8AC](v91, -1, -1);
      MEMORY[0x22E2AA8AC](v90, -1, -1);

      sub_227DD7918(v106, v107);
      v95(v105, v92);
    }
    else
    {
      sub_227DD7918(v106, v107);

      v97 = v85;
      v98 = v111;
      v67(v97, v111);

      v67(v86, v98);
    }
  }
LABEL_12:
  sub_227DD5110(v3, (uint64_t)v35, (uint64_t)v18);
  sub_227D5809C((uint64_t)v18, &qword_253F3A4F0);
  return (*(uint64_t (**)(char *, uint64_t))(v110 + 8))(v35, v111);
}

uint64_t sub_227DD5110(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _OWORD v5[2];
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = *MEMORY[0x24BEE4EA0] & *a1;
  v5[1] = *(_OWORD *)(v3 + 0x50);
  v6 = *(_QWORD *)(v3 + 96);
  v7 = a2;
  v8 = a3;
  swift_retain();
  MutableObservableContainer.mutate(_:)((uint64_t)sub_227DD7CF8, (uint64_t)v5);
  return swift_release();
}

uint64_t sub_227DD5184@<X0>(uint64_t *a1@<X8>)
{
  char *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t *v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  void *v20;
  id v21;
  id v22;
  void *v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;

  v2 = v1;
  v4 = sub_227D68330(&qword_253F391D0);
  v6 = MEMORY[0x24BDAC7A8](v4, v5);
  v37 = (uint64_t)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v6, v8);
  v11 = (char *)&v36 - v10;
  MEMORY[0x24BDAC7A8](v9, v12);
  v14 = (char *)&v36 - v13;
  v15 = (uint64_t *)&v1[OBJC_IVAR____TtC13BookDataStore13CRDTModelSync_protoData];
  v16 = *(_QWORD *)&v1[OBJC_IVAR____TtC13BookDataStore13CRDTModelSync_protoData + 8];
  if (v16 >> 60 == 15)
  {
    v17 = 0;
    v18 = 0;
  }
  else
  {
    v19 = *v15;
    sub_227DD00E0(*v15, *(_QWORD *)&v1[OBJC_IVAR____TtC13BookDataStore13CRDTModelSync_protoData + 8]);
    v20 = (void *)sub_227E5F1D4();
    v21 = objc_msgSend(v20, sel_bu_sha256);

    sub_227E5FF84();
    v38 = 0x2D363532616873;
    v39 = 0xE700000000000000;
    sub_227E6002C();
    swift_bridgeObjectRelease();
    sub_227DD7918(v19, v16);
    v17 = v38;
    v18 = v39;
  }
  v22 = objc_msgSend(v2, sel_systemFields);
  v23 = v22;
  if (v22)
  {
    v24 = objc_msgSend(v22, sel_recordChangeTag);

    if (v24)
    {
      v23 = (void *)sub_227E5FF84();
      v26 = v25;

      goto LABEL_9;
    }
    v23 = 0;
  }
  v26 = 0;
LABEL_9:
  v27 = objc_msgSend(v2, sel_modificationDate);
  if (v27)
  {
    v28 = v27;
    sub_227E5F264();

    v29 = sub_227E5F27C();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v11, 0, 1, v29);
  }
  else
  {
    v30 = sub_227E5F27C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v11, 1, 1, v30);
  }
  sub_227D5B0DC((uint64_t)v11, (uint64_t)v14, &qword_253F391D0);
  if (v18)
  {
    v31 = v37;
    sub_227D5DF48((uint64_t)v14, v37, &qword_253F391D0);
  }
  else
  {
    v31 = v37;
    sub_227D5DF48((uint64_t)v14, v37, &qword_253F391D0);
    if (!v26)
    {
      v32 = sub_227E5F27C();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 48))(v31, 1, v32) == 1)
      {
        swift_bridgeObjectRelease_n();
        sub_227D5809C(v31, &qword_253F391D0);
        sub_227D5809C((uint64_t)v14, &qword_253F391D0);
        v33 = type metadata accessor for CRDTModelRevisionInfo();
        return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(a1, 1, 1, v33);
      }
    }
  }
  sub_227D5809C(v31, &qword_253F391D0);
  *a1 = v17;
  a1[1] = v18;
  a1[2] = (uint64_t)v23;
  a1[3] = v26;
  v35 = type metadata accessor for CRDTModelRevisionInfo();
  sub_227D5B0DC((uint64_t)v14, (uint64_t)a1 + *(int *)(v35 + 24), &qword_253F391D0);
  return (*(uint64_t (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(a1, 0, 1, v35);
}

id CRDTModelSyncManager.__deallocating_deinit()
{
  void *v0;
  void *v1;
  objc_class *ObjectType;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  objc_super v7;

  v1 = v0;
  ObjectType = (objc_class *)swift_getObjectType();
  v3 = sub_227E5F570();
  v4 = sub_227E60248();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v5 = 0;
    _os_log_impl(&dword_227D4F000, v3, v4, "CRDTModelSyncManager deinit", v5, 2u);
    MEMORY[0x22E2AA8AC](v5, -1, -1);
  }

  v7.receiver = v1;
  v7.super_class = ObjectType;
  return objc_msgSendSuper2(&v7, sel_dealloc);
}

id sub_227DD55AC(void *a1)
{
  id v1;

  v1 = a1;
  return CRDTModelSyncManager.__deallocating_deinit();
}

uint64_t sub_227DD55D0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1 + qword_25592FEA8;
  v3 = sub_227E5F588();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);

  swift_release();
  swift_release();

  return swift_unknownObjectRelease();
}

uint64_t CRDTModelSyncManager.sync(_:)(uint64_t a1)
{
  return CRDTModelSyncManager.sync(_:isRemote:)(a1, 0);
}

uint64_t CRDTModelSyncManager.sync(_:isRemote:)(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  _BYTE v11[16];
  uint64_t v12;
  uint64_t v13;
  char v14;

  v5 = sub_227E5F948();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  v9 = &v11[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_227E5F93C();
  v12 = v2;
  v13 = a1;
  v14 = a2;
  sub_227E602C0();
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v9, v5);
}

void sub_227DD5760(char *a1, int a2)
{
  char *v2;
  char *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  id v38;
  char *v39;
  void (*v40)(char *, uint64_t);
  char *v41;
  void (*v42)(char *, char *, uint64_t);
  char *v43;
  NSObject *v44;
  os_log_type_t v45;
  int v46;
  _BOOL4 v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  char *v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  char *v55;
  os_log_t v56;
  uint64_t v57;
  uint64_t v58;
  _BYTE *v59;
  char *v60;
  uint64_t v61;
  unint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  char *v66;
  void *v67;
  uint64_t v68;
  unint64_t v69;
  unint64_t v70;
  char *v71;
  NSObject *v72;
  os_log_type_t v73;
  uint64_t v74;
  uint8_t *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  char *v80;
  void (*v81)(char *, uint64_t);
  void (*v82)(char *, uint64_t);
  uint64_t v83;
  unint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  int v90;
  uint64_t v91;
  void *v92;
  id v93;
  uint64_t v94;
  unint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t *v99;
  uint64_t v100;
  uint64_t v101;
  void (*v102)(char *, uint64_t, uint64_t);
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  unint64_t v111;
  NSObject *v112;
  int v113;
  unint64_t v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  unint64_t v118;
  uint64_t v119;
  _BYTE *v120;
  void (*v121)(uint64_t, uint64_t);
  uint64_t v122;
  id v123;
  id v124;
  uint64_t v125;
  os_log_t v126;
  int v127;
  uint64_t v128;
  uint64_t v129;
  id v130;
  void (*v131)(char *, char *, uint64_t);
  char *v132;
  uint64_t v133;
  uint64_t v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  int v139;
  char *v140;
  uint64_t v141;
  uint64_t v142;
  char *v143;
  char *v144;
  char *v145;
  uint64_t v146;
  char *v147;
  uint64_t v148;
  unint64_t v149;
  void *v150;
  char *v151;
  uint64_t v152;
  uint64_t *v153;
  void (*v154)(char *, uint64_t);
  char *v155;
  char *v156;
  uint64_t v157;
  uint64_t v158;
  unint64_t v159;
  uint64_t v160;

  v3 = v2;
  v139 = a2;
  v5 = *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *(_QWORD *)v2) + 0x50);
  v6 = *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *(_QWORD *)v2) + 0x58);
  v7 = *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *(_QWORD *)v2) + 0x60);
  v138 = type metadata accessor for ModelState.Source(0, v5, v6, v7);
  v137 = *(_QWORD *)(v138 - 8);
  MEMORY[0x24BDAC7A8](v138, v8);
  v143 = (char *)&v125 - v9;
  v10 = type metadata accessor for CRDTModelRevisionInfo();
  v141 = *(_QWORD *)(v10 - 8);
  v142 = v10;
  MEMORY[0x24BDAC7A8](v10, v11);
  v134 = (uint64_t)&v125 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_227D68330(&qword_253F3A4F0);
  MEMORY[0x24BDAC7A8](v13, v14);
  v153 = (uint64_t *)((char *)&v125 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  v157 = v7;
  v152 = type metadata accessor for ModelState(0, v5, v6, v7);
  v136 = *(_QWORD *)(v152 - 8);
  MEMORY[0x24BDAC7A8](v152, v16);
  v151 = (char *)&v125 - v17;
  v18 = sub_227E5FCD8();
  v148 = *(_QWORD *)(v18 - 8);
  v149 = v18;
  v20 = MEMORY[0x24BDAC7A8](v18, v19);
  v147 = (char *)&v125 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = *(_QWORD *)(v5 - 8);
  v24 = MEMORY[0x24BDAC7A8](v20, v23);
  v144 = (char *)&v125 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = MEMORY[0x24BDAC7A8](v24, v26);
  v140 = (char *)&v125 - v28;
  v30 = MEMORY[0x24BDAC7A8](v27, v29);
  v155 = (char *)&v125 - v31;
  v33 = MEMORY[0x24BDAC7A8](v30, v32);
  v145 = (char *)&v125 - v34;
  MEMORY[0x24BDAC7A8](v33, v35);
  v37 = (char *)&v125 - v36;
  v38 = objc_msgSend(*(id *)&v3[qword_255928738], sel_createTransactionWithName_, "com.apple.ibooks.CRDTModelSyncManager.q_sync");
  sub_227DD3A88((uint64_t)v37);
  v39 = a1;
  v146 = *(_QWORD *)(v6 + 8);
  LOBYTE(v7) = sub_227E5FD20();
  v40 = *(void (**)(char *, uint64_t))(v22 + 8);
  v40(v37, v5);
  if ((v7 & 1) != 0)
  {
    v130 = v38;
    v133 = v6;
    v41 = &v3[qword_25592FEA8];
    v129 = v22;
    v42 = *(void (**)(char *, char *, uint64_t))(v22 + 16);
    v43 = v145;
    v135 = v39;
    v131 = v42;
    v42(v145, v39, v5);
    v156 = v3;
    v132 = v41;
    v44 = sub_227E5F570();
    v45 = sub_227E60248();
    v46 = v45;
    v47 = os_log_type_enabled(v44, v45);
    v154 = v40;
    if (v47)
    {
      v48 = swift_slowAlloc();
      v128 = swift_slowAlloc();
      v158 = v128;
      *(_DWORD *)v48 = 136315394;
      v127 = v46;
      v126 = v44;
      v49 = sub_227E60674();
      v160 = sub_227D634E0(v49, v50, &v158);
      sub_227E603B0();
      swift_bridgeObjectRelease();
      v154(v43, v5);
      *(_WORD *)(v48 + 12) = 2080;
      v145 = (char *)(v48 + 14);
      v51 = v156;
      sub_227DD3A88((uint64_t)v37);
      v52 = sub_227E60674();
      v54 = v53;
      v154(v37, v5);
      v160 = sub_227D634E0(v52, v54, &v158);
      v55 = v155;
      sub_227E603B0();

      swift_bridgeObjectRelease();
      v56 = v126;
      _os_log_impl(&dword_227D4F000, v126, (os_log_type_t)v127, "CRDTModelSyncManager q_sync: incoming=%s and existing=%s", (uint8_t *)v48, 0x16u);
      v57 = v128;
      swift_arrayDestroy();
      MEMORY[0x22E2AA8AC](v57, -1, -1);
      v40 = v154;
      MEMORY[0x22E2AA8AC](v48, -1, -1);

    }
    else
    {

      v40(v43, v5);
      v60 = v156;

      v55 = v155;
    }
    v61 = v5;
    v62 = v149;
    sub_227DD3A88((uint64_t)v37);
    v63 = v135;
    sub_227E5FD44();
    v40(v37, v61);
    v64 = v55;
    v66 = v147;
    v65 = v148;
    (*(void (**)(char *, _QWORD, unint64_t))(v148 + 104))(v147, *MEMORY[0x24BE184D8], v62);
    v67 = v150;
    v68 = sub_227E5FBF4();
    v70 = v62;
    if (v67)
    {

      (*(void (**)(char *, unint64_t))(v65 + 8))(v66, v62);
      v71 = v144;
      v131(v144, v55, v61);
      v72 = sub_227E5F570();
      v73 = sub_227E60230();
      v74 = v61;
      if (os_log_type_enabled(v72, v73))
      {
        v75 = (uint8_t *)swift_slowAlloc();
        v76 = swift_slowAlloc();
        v158 = v76;
        *(_DWORD *)v75 = 136315138;
        v77 = v157;
        v78 = sub_227E60674();
        v160 = sub_227D634E0(v78, v79, &v158);
        v80 = v155;
        sub_227E603B0();
        swift_bridgeObjectRelease();
        v81 = v154;
        v154(v144, v74);
        v82 = v81;
        _os_log_impl(&dword_227D4F000, v72, v73, "CRDTModelSyncManager q_sync: couldn't serialize model to sync: %s", v75, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x22E2AA8AC](v76, -1, -1);
        MEMORY[0x22E2AA8AC](v75, -1, -1);

      }
      else
      {
        v80 = v64;

        v82 = v154;
        v154(v71, v61);
        v77 = v157;
      }
      v119 = type metadata accessor for CRDTModelSyncManager.SyncError(0, v74, v133, v77);
      MEMORY[0x22E2AA7D4](&protocol conformance descriptor for CRDTModelSyncManager<A>.SyncError, v119);
      swift_allocError();
      *v120 = 1;
      swift_willThrow();

      v82(v80, v74);
    }
    else
    {
      v83 = v68;
      v84 = v69;
      v145 = 0;
      v146 = v61;
      (*(void (**)(char *, unint64_t))(v65 + 8))(v66, v70);
      v149 = v84;
      sub_227DD00E0(v83, v84);
      swift_retain();
      v85 = v151;
      MutableObservableContainer.value.getter();
      swift_release();
      v86 = (uint64_t)&v85[*(int *)(v152 + 52)];
      v87 = v141;
      v88 = v142;
      v89 = 1;
      v90 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v141 + 48))(v86, 1, v142);
      v150 = (void *)v83;
      if (!v90)
      {
        v91 = v134;
        sub_227DD7B60(v86, v134);
        v92 = (void *)sub_227E5F1D4();
        v93 = objc_msgSend(v92, sel_bu_sha256);

        sub_227E5FF84();
        v158 = 0x2D363532616873;
        v159 = 0xE700000000000000;
        sub_227E6002C();
        swift_bridgeObjectRelease();
        v94 = v158;
        v95 = v159;
        v97 = *(_QWORD *)(v91 + 16);
        v96 = *(_QWORD *)(v91 + 24);
        v98 = *(int *)(v88 + 24);
        v99 = v153;
        sub_227D5DF48(v91 + v98, (uint64_t)v153 + v98, &qword_253F391D0);
        *v99 = v94;
        v99[1] = v95;
        v63 = v135;
        v99[2] = v97;
        v99[3] = v96;
        v87 = v141;
        v88 = v142;
        swift_bridgeObjectRetain();
        sub_227DD7BA4(v91);
        v89 = 0;
      }
      v100 = 1;
      (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(v87 + 56))(v153, v89, 1, v88);
      v101 = (uint64_t)v143;
      v102 = (void (*)(char *, uint64_t, uint64_t))v131;
      v103 = (uint64_t)v155;
      if ((v139 & 1) != 0)
      {
        v131(v143, v63, v146);
        v100 = 0;
      }
      v104 = v146;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v129 + 56))(v101, v100, 2, v146);
      v105 = v151;
      v106 = ModelState.updating(model:source:revisionInfo:)(v103, v101, (uint64_t)v153, v152);
      MEMORY[0x24BDAC7A8](v106, v107);
      v108 = v133;
      *(&v125 - 4) = v104;
      *(&v125 - 3) = v108;
      *(&v125 - 2) = v157;
      *(&v125 - 1) = (uint64_t)v105;
      swift_retain();
      MutableObservableContainer.mutate(_:)((uint64_t)sub_227DD7B18, (uint64_t)(&v125 - 6));
      swift_release();
      v109 = v140;
      v102(v140, v103, v104);
      v111 = v149;
      v110 = (uint64_t)v150;
      sub_227DD00E0((uint64_t)v150, v149);
      sub_227DD00E0(v110, v111);
      v112 = sub_227E5F570();
      v113 = sub_227E60248();
      if (os_log_type_enabled(v112, (os_log_type_t)v113))
      {
        LODWORD(v148) = v113;
        v114 = v111 >> 62;
        v115 = v109;
        v116 = swift_slowAlloc();
        v158 = swift_slowAlloc();
        *(_DWORD *)v116 = 136315394;
        v117 = sub_227E60674();
        v160 = sub_227D634E0(v117, v118, &v158);
        sub_227E603B0();
        swift_bridgeObjectRelease();
        v154(v115, v104);
        *(_WORD *)(v116 + 12) = 2048;
        __asm { BR              X10 }
      }
      sub_227DD1FD4(v110, v111);

      v121 = (void (*)(uint64_t, uint64_t))v154;
      v154(v109, v104);
      sub_227DD1FD4(v110, v111);
      v122 = swift_allocObject();
      v123 = v130;
      *(_QWORD *)(v122 + 16) = v130;
      v124 = v123;
      sub_227E4363C(v110, v111, (uint64_t)sub_227DD7C60, v122);

      swift_release();
      sub_227DD1FD4(v110, v111);
      sub_227DD1FD4(v110, v111);
      (*(void (**)(uint64_t, uint64_t))(v137 + 8))(v101, v138);
      sub_227D5809C((uint64_t)v153, &qword_253F3A4F0);
      v121(v103, v104);
      (*(void (**)(char *, uint64_t))(v136 + 8))(v151, v152);
    }
  }
  else
  {
    v58 = type metadata accessor for CRDTModelSyncManager.SyncError(0, v5, v6, v157);
    MEMORY[0x22E2AA7D4](&protocol conformance descriptor for CRDTModelSyncManager<A>.SyncError, v58);
    swift_allocError();
    *v59 = 0;
    swift_willThrow();

  }
}

id CRDTModelSyncManager.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void CRDTModelSyncManager.init()()
{
  sub_227DD76B4();
}

void sub_227DD6500()
{
  sub_227DD76B4();
}

uint64_t sub_227DD6520(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  NSObject *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  unint64_t v23;
  uint64_t v24;
  void *v25;
  id v26;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  char *v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  void *v41;
  id v42;
  char isEscapingClosureAtFileLocation;
  uint64_t result;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  void (*isa)(char *, char *, uint64_t);
  dispatch_queue_t v52;
  char *v53;
  uint64_t v54;
  _QWORD *v55;
  _QWORD aBlock[7];

  v2 = v1;
  v55 = (_QWORD *)(*MEMORY[0x24BEE4EA0] & *v2);
  v4 = v55[10];
  v5 = sub_227E6038C();
  isa = (void (*)(char *, char *, uint64_t))v5[-1].isa;
  v52 = v5;
  v7 = MEMORY[0x24BDAC7A8](v5, v6);
  v9 = (char *)&v45 - v8;
  v54 = *(_QWORD *)(v4 - 8);
  v10 = *(_QWORD *)(v54 + 64);
  v12 = MEMORY[0x24BDAC7A8](v7, v11);
  MEMORY[0x24BDAC7A8](v12, v13);
  v53 = (char *)&v45 - v14;
  v15 = sub_227D68330(&qword_253F3A4F0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(_QWORD *)(v16 + 64);
  v19 = MEMORY[0x24BDAC7A8](v15, v18);
  v49 = (uint64_t)&v45 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19, v20);
  v22 = (char *)&v45 - v21;
  sub_227DD5184((uint64_t *)((char *)&v45 - v21));
  v23 = *(_QWORD *)(a1 + OBJC_IVAR____TtC13BookDataStore13CRDTModelSync_protoData + 8);
  if (v23 >> 60 == 15)
  {
    v27 = sub_227E5F570();
    v28 = sub_227E60230();
    if (os_log_type_enabled(v27, v28))
    {
      v29 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v29 = 0;
      _os_log_impl(&dword_227D4F000, v27, v28, "CRDTModelSyncManager resolveConflictsFor: couldn't deserialize resolved data", v29, 2u);
      MEMORY[0x22E2AA8AC](v29, -1, -1);
    }

    sub_227DD69D8((uint64_t)v22);
    return sub_227D5809C((uint64_t)v22, &qword_253F3A4F0);
  }
  else
  {
    v47 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
    v24 = *(_QWORD *)(a1 + OBJC_IVAR____TtC13BookDataStore13CRDTModelSync_protoData);
    v50 = v2;
    v25 = *(void **)((char *)v2 + qword_255928718);
    sub_227DD7904(v24, v23);
    sub_227DD7904(v24, v23);
    v46 = v55[11];
    v26 = v25;
    v48 = v24;
    sub_227E5FD50();
    v30 = v54;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v54 + 56))(v9, 0, 1, v4);
    isa = *(void (**)(char *, char *, uint64_t))(v30 + 32);
    v31 = v53;
    isa(v53, v9, v4);
    v52 = *(dispatch_queue_t *)((char *)v50 + qword_255928710);
    v32 = v47;
    (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v47, v31, v4);
    v33 = v49;
    sub_227D5DF48((uint64_t)v22, v49, &qword_253F3A4F0);
    v34 = (*(unsigned __int8 *)(v30 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
    v35 = (v10 + v34 + 7) & 0xFFFFFFFFFFFFFFF8;
    v36 = (*(unsigned __int8 *)(v16 + 80) + v35 + 8) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
    v37 = (char *)swift_allocObject();
    v38 = v46;
    *((_QWORD *)v37 + 2) = v4;
    *((_QWORD *)v37 + 3) = v38;
    *((_QWORD *)v37 + 4) = v55[12];
    isa(&v37[v34], v32, v4);
    v39 = v50;
    *(_QWORD *)&v37[v35] = v50;
    sub_227D5B0DC(v33, (uint64_t)&v37[v36], &qword_253F3A4F0);
    v40 = swift_allocObject();
    *(_QWORD *)(v40 + 16) = sub_227DD7A50;
    *(_QWORD *)(v40 + 24) = v37;
    aBlock[4] = sub_227D62A80;
    aBlock[5] = v40;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_227D62A60;
    aBlock[3] = &unk_24F08C5A0;
    v41 = _Block_copy(aBlock);
    v42 = v39;
    swift_retain();
    swift_release();
    dispatch_sync(v52, v41);
    _Block_release(v41);
    sub_227DD7918(v48, v23);
    (*(void (**)(char *, uint64_t))(v30 + 8))(v53, v4);
    sub_227D5809C((uint64_t)v22, &qword_253F3A4F0);
    isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    result = swift_release();
    if ((isEscapingClosureAtFileLocation & 1) != 0)
      __break(1u);
  }
  return result;
}

uint64_t sub_227DD69D8(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v2 = v1;
  v4 = *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v2) + 0x50);
  v5 = *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v2) + 0x60);
  v25 = *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v2) + 0x58);
  v26 = v4;
  v6 = type metadata accessor for ModelState(0, v4, v25, v5);
  v27 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6, v7);
  v9 = (char *)&v24 - v8;
  v10 = sub_227D68330(&qword_253F3A4F0);
  MEMORY[0x24BDAC7A8](v10, v11);
  v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for CRDTModelRevisionInfo();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14, v16);
  v18 = (char *)&v24 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_227D5DF48(a1, (uint64_t)v13, &qword_253F3A4F0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
    return sub_227D5809C((uint64_t)v13, &qword_253F3A4F0);
  sub_227DD7B1C((uint64_t)v13, (uint64_t)v18);
  swift_retain();
  MutableObservableContainer.value.getter();
  swift_release();
  v20 = (uint64_t)&v9[*(int *)(v6 + 52)];
  sub_227D5809C(v20, &qword_253F3A4F0);
  sub_227DD7B60((uint64_t)v18, v20);
  v21 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v15 + 56))(v20, 0, 1, v14);
  MEMORY[0x24BDAC7A8](v21, v22);
  v23 = v25;
  *(&v24 - 4) = v26;
  *(&v24 - 3) = v23;
  *(&v24 - 2) = v5;
  *(&v24 - 1) = (uint64_t)v9;
  swift_retain();
  MutableObservableContainer.mutate(_:)((uint64_t)sub_227DD7B18, (uint64_t)(&v24 - 6));
  swift_release();
  sub_227DD7BA4((uint64_t)v18);
  return (*(uint64_t (**)(char *, uint64_t))(v27 + 8))(v9, v6);
}

uint64_t sub_227DD6C10(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  void (*v30)(char *, uint64_t, uint64_t);
  _QWORD *v31;
  NSObject *v32;
  os_log_type_t v33;
  int v34;
  _BOOL4 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  void (*v40)(char *, uint64_t);
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  char *v44;
  uint64_t v45;
  unint64_t v46;
  os_log_t v47;
  uint64_t v48;
  _QWORD *v49;
  NSObject *v50;
  os_log_type_t v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  char *v56;
  void (*v57)(char *, uint64_t);
  uint64_t v58;
  unint64_t v59;
  unint64_t v60;
  uint64_t v61;
  void (*v62)(char *, uint64_t);
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  NSObject *v72;
  os_log_type_t v73;
  uint8_t *v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  unint64_t v78;
  _QWORD v80[2];
  uint64_t v81;
  os_log_t v82;
  int v83;
  uint64_t v84;
  void (*v85)(char *, uint64_t, uint64_t);
  char *v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint8_t *v98;
  void (*v99)(char *, uint64_t);
  uint64_t v100;
  uint64_t v101[2];

  v98 = (uint8_t *)a3;
  v6 = *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *a2) + 0x58);
  v5 = *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *a2) + 0x50);
  v97 = *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *a2) + 0x60);
  v96 = type metadata accessor for ModelState(0, v5, v6, v97);
  v7 = *(_QWORD *)(v96 - 8);
  MEMORY[0x24BDAC7A8](v96, v8);
  v95 = (char *)v80 - v9;
  v93 = v6;
  v10 = *(_QWORD *)(v6 + 8);
  v90 = *(_QWORD *)(v10 + 16);
  swift_getAssociatedTypeWitness();
  v89 = sub_227E6038C();
  v12 = MEMORY[0x24BDAC7A8](v89, v11);
  v88 = (char *)v80 - v13;
  v14 = *(_QWORD *)(v5 - 8);
  v16 = MEMORY[0x24BDAC7A8](v12, v15);
  v18 = (char *)v80 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = MEMORY[0x24BDAC7A8](v16, v19);
  v94 = (char *)v80 - v21;
  v23 = MEMORY[0x24BDAC7A8](v20, v22);
  v25 = (char *)v80 - v24;
  MEMORY[0x24BDAC7A8](v23, v26);
  v28 = (char *)v80 - v27;
  sub_227DD3A88((uint64_t)v80 - v27);
  v92 = v10;
  LOBYTE(v6) = sub_227E5FD20();
  v99 = *(void (**)(char *, uint64_t))(v14 + 8);
  v99(v28, v5);
  v29 = (char *)a2 + qword_25592FEA8;
  v91 = v14;
  v30 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 16);
  if ((v6 & 1) != 0)
  {
    v30(v25, a1, v5);
    v30(v94, a1, v5);
    v31 = a2;
    v86 = v29;
    v32 = sub_227E5F570();
    v33 = sub_227E60248();
    v34 = v33;
    v35 = os_log_type_enabled(v32, v33);
    v87 = v7;
    v85 = v30;
    if (v35)
    {
      v36 = swift_slowAlloc();
      v84 = a1;
      v83 = v34;
      v37 = v36;
      v81 = swift_slowAlloc();
      v101[0] = v81;
      *(_DWORD *)v37 = 136315650;
      v82 = v32;
      v38 = sub_227E60674();
      v100 = sub_227D634E0(v38, v39, v101);
      sub_227E603B0();
      swift_bridgeObjectRelease();
      v40 = v99;
      v99(v25, v5);
      *(_WORD *)(v37 + 12) = 2080;
      v80[1] = v37 + 14;
      sub_227DD3A88((uint64_t)v28);
      v41 = sub_227E60674();
      v43 = v42;
      v40(v28, v5);
      v100 = sub_227D634E0(v41, v43, v101);
      sub_227E603B0();

      swift_bridgeObjectRelease();
      *(_WORD *)(v37 + 22) = 2080;
      sub_227DD3A88((uint64_t)v28);
      v44 = v94;
      sub_227E5FD68();
      v40(v28, v5);
      v45 = sub_227E5FFD8();
      v100 = sub_227D634E0(v45, v46, v101);
      sub_227E603B0();

      swift_bridgeObjectRelease();
      v40(v44, v5);

      v47 = v82;
      _os_log_impl(&dword_227D4F000, v82, (os_log_type_t)v83, "CRDTModelSyncManager resolveConflictsFor: merging resolved model: incoming=%s vs existing=%s with delta=%s", (uint8_t *)v37, 0x20u);
      v48 = v81;
      swift_arrayDestroy();
      MEMORY[0x22E2AA8AC](v48, -1, -1);
      a1 = v84;
      MEMORY[0x22E2AA8AC](v37, -1, -1);

    }
    else
    {

      v62 = v99;
      v99(v25, v5);

      v62(v94, v5);
    }
    swift_retain();
    v63 = v95;
    MutableObservableContainer.value.getter();
    swift_release();
    sub_227E5FC0C();
    v64 = v96;
    v65 = v97;
    v66 = &v63[*(int *)(v96 + 48)];
    v67 = v93;
    v68 = type metadata accessor for ModelState.Source(0, v5, v93, v97);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v68 - 8) + 8))(v66, v68);
    v85(v66, a1, v5);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v91 + 56))(v66, 0, 2, v5);
    v69 = sub_227DD7AD0((uint64_t)v98, (uint64_t)&v63[*(int *)(v64 + 52)]);
    MEMORY[0x24BDAC7A8](v69, v70);
    v80[-4] = v5;
    v80[-3] = v67;
    v80[-2] = v65;
    v80[-1] = v63;
    swift_retain();
    MutableObservableContainer.mutate(_:)((uint64_t)sub_227DD7B18, (uint64_t)&v80[-6]);
    swift_release();
    v71 = v31;
    v72 = sub_227E5F570();
    v73 = sub_227E60248();
    if (os_log_type_enabled(v72, v73))
    {
      v74 = (uint8_t *)swift_slowAlloc();
      v75 = swift_slowAlloc();
      v101[0] = v75;
      *(_DWORD *)v74 = 136315138;
      v98 = v74 + 4;
      sub_227DD3A88((uint64_t)v28);
      v76 = sub_227E60674();
      v78 = v77;
      v99(v28, v5);
      v100 = sub_227D634E0(v76, v78, v101);
      sub_227E603B0();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_227D4F000, v72, v73, "CRDTModelSyncManager resolveConflictsFor: resolved model=%s", v74, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x22E2AA8AC](v75, -1, -1);
      MEMORY[0x22E2AA8AC](v74, -1, -1);
    }
    else
    {

    }
    return (*(uint64_t (**)(char *, uint64_t))(v87 + 8))(v95, v96);
  }
  else
  {
    v30(v18, a1, v5);
    v49 = a2;
    v50 = sub_227E5F570();
    v51 = sub_227E60248();
    v52 = v51;
    if (os_log_type_enabled(v50, v51))
    {
      v53 = swift_slowAlloc();
      v96 = swift_slowAlloc();
      v101[0] = v96;
      *(_DWORD *)v53 = 136315394;
      LODWORD(v95) = v52;
      v54 = sub_227E60674();
      v100 = sub_227D634E0(v54, v55, v101);
      sub_227E603B0();
      swift_bridgeObjectRelease();
      v56 = v18;
      v57 = v99;
      v99(v56, v5);
      *(_WORD *)(v53 + 12) = 2080;
      v94 = (char *)(v53 + 14);
      sub_227DD3A88((uint64_t)v28);
      v58 = sub_227E60674();
      v60 = v59;
      v57(v28, v5);
      v100 = sub_227D634E0(v58, v60, v101);
      sub_227E603B0();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_227D4F000, v50, (os_log_type_t)v95, "CRDTModelSyncManager resolveConflictsFor: incoming=%s has no delta from existing=%s", (uint8_t *)v53, 0x16u);
      v61 = v96;
      swift_arrayDestroy();
      MEMORY[0x22E2AA8AC](v61, -1, -1);
      MEMORY[0x22E2AA8AC](v53, -1, -1);

    }
    else
    {

      v99(v18, v5);
    }
    return sub_227DD69D8((uint64_t)v98);
  }
}

uint64_t sub_227DD74EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  uint64_t v25;
  _BYTE v27[7];
  char v28;

  v12 = sub_227D68330(&qword_253F3A4F0);
  MEMORY[0x24BDAC7A8](v12, v13);
  v15 = &v27[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v16 = type metadata accessor for ModelState.Source(0, a4, a5, a6);
  v18 = MEMORY[0x24BDAC7A8](v16, v17);
  v20 = &v27[-v19];
  v21 = *(_QWORD *)(a4 - 8);
  MEMORY[0x24BDAC7A8](v18, v22);
  v24 = &v27[-((v23 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v25 = type metadata accessor for ModelState(0, a4, a5, a6);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 8))(a1, v25);
  swift_beginAccess();
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v21 + 16))(v24, a2, a4);
  v28 = 1;
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v21 + 56))(v20, 2, 2, a4);
  sub_227D5DF48(a3, (uint64_t)v15, &qword_253F3A4F0);
  return ModelState.init(model:loaded:source:revisionInfo:)((uint64_t)v24, &v28, (uint64_t)v20, (uint64_t)v15, a4, a5, a6, a1);
}

void sub_227DD768C()
{
  uint64_t v0;

  sub_227DD5760(*(char **)(v0 + 24), *(unsigned __int8 *)(v0 + 32));
}

void sub_227DD76B4()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void sub_227DD76E0()
{
  JUMPOUT(0x22E2AA7D4);
}

uint64_t sub_227DD76F0@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  _BYTE *v3;
  uint64_t result;

  v3 = (_BYTE *)(*a1 + qword_25592FEA0);
  result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

void sub_227DD7740(char *a1)
{
  CRDTModelSyncManager.enableCloudSync.setter(*a1);
}

uint64_t sub_227DD7764()
{
  return 24;
}

__n128 sub_227DD7770(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  a2[1].n128_u64[0] = a1[1].n128_u64[0];
  *a2 = result;
  return result;
}

uint64_t sub_227DD7784()
{
  uint64_t result;
  unint64_t v1;

  result = sub_227E5F588();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t type metadata accessor for CRDTModelSyncManager(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_227D6837C(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for CRDTModelSyncManager);
}

uint64_t method lookup function for CRDTModelSyncManager()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_227DD783C(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_227DD7888 + 4 * byte_227E6ED05[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_227DD78BC + 4 * byte_227E6ED00[v4]))();
}

uint64_t sub_227DD78BC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_227DD78C4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x227DD78CCLL);
  return result;
}

uint64_t sub_227DD78D8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x227DD78E0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_227DD78E4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_227DD78EC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t type metadata accessor for CRDTModelSyncManager.SyncError(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_227D6837C(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for CRDTModelSyncManager.SyncError);
}

uint64_t sub_227DD7904(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_227DD00E0(a1, a2);
  return a1;
}

uint64_t sub_227DD7918(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_227DD1FD4(a1, a2);
  return a1;
}

uint64_t sub_227DD792C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v5 = *(unsigned __int8 *)(*(_QWORD *)(sub_227D68330(&qword_253F3A4F0) - 8) + 80);
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  v6 = v0 + ((v4 + v5 + 8) & ~v5);
  v7 = type metadata accessor for CRDTModelRevisionInfo();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v6, 1, v7))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v8 = v6 + *(int *)(v7 + 24);
    v9 = sub_227E5F27C();
    v10 = *(_QWORD *)(v9 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
      (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
  }
  return swift_deallocObject();
}

uint64_t sub_227DD7A50()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 16) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  v4 = *(unsigned __int8 *)(*(_QWORD *)(sub_227D68330(&qword_253F3A4F0) - 8) + 80);
  return sub_227DD6C10(v0 + v2, *(_QWORD **)(v0 + v3), v0 + ((v3 + v4 + 8) & ~v4));
}

uint64_t sub_227DD7AC0()
{
  return swift_deallocObject();
}

uint64_t sub_227DD7AD0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_227D68330(&qword_253F3A4F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_227DD7B1C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CRDTModelRevisionInfo();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_227DD7B60(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CRDTModelRevisionInfo();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_227DD7BA4(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for CRDTModelRevisionInfo();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_227DD7BE0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = v1[2];
  v4 = v1[3];
  v5 = v1[4];
  v6 = v1[5];
  v7 = type metadata accessor for ModelState(0, v3, v4, v5);
  v8 = *(_QWORD *)(v7 - 8);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(a1, v7);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(a1, v6, v7);
}

uint64_t sub_227DD7C3C()
{
  uint64_t v0;

  return swift_deallocObject();
}

id sub_227DD7C60()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), sel_endTransaction);
}

uint64_t sub_227DD7C70()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_227DD7C94()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_227DD7CB8(void *a1)
{
  uint64_t v1;

  return sub_227DD46A0(a1, *(_QWORD *)(v1 + 40));
}

uint64_t sub_227DD7CC4()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_227DD7CF0()
{
  uint64_t v0;

  return sub_227DD484C(*(_QWORD **)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_227DD7CF8(uint64_t a1)
{
  uint64_t *v1;

  return sub_227DD74EC(a1, v1[5], v1[6], v1[2], v1[3], v1[4]);
}

uint64_t CRDTModelRevisionInfo.changeToken.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;

  v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t CRDTModelRevisionInfo.description.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD v9[2];

  v1 = sub_227D68330(&qword_253F391D0);
  MEMORY[0x24BDAC7A8](v1, v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9[0] = 0;
  v9[1] = 0xE000000000000000;
  swift_bridgeObjectRetain();
  sub_227E6002C();
  swift_bridgeObjectRelease();
  sub_227E6002C();
  swift_bridgeObjectRetain();
  sub_227E6002C();
  swift_bridgeObjectRelease();
  sub_227E6002C();
  v5 = type metadata accessor for CRDTModelRevisionInfo();
  sub_227DD7EC8(v0 + *(int *)(v5 + 24), (uint64_t)v4);
  v6 = sub_227E5F27C();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v4, 1, v6) == 1)
  {
    sub_227D5809C((uint64_t)v4, &qword_253F391D0);
  }
  else
  {
    sub_227E5F210();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v4, v6);
  }
  sub_227E6002C();
  swift_bridgeObjectRelease();
  return v9[0];
}

uint64_t sub_227DD7EC8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_227D68330(&qword_253F391D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

BOOL sub_227DD7F14(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_227DD7F28()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0x684364726F636572;
  if (*v0 != 1)
    v1 = 0xD000000000000010;
  if (*v0)
    return v1;
  else
    return 0x6E6F697369766572;
}

uint64_t sub_227DD7F9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_227DD9120(a1, a2);
  *a3 = result;
  return result;
}

void sub_227DD7FC0(_BYTE *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_227DD7FCC()
{
  sub_227DD87B4();
  return sub_227E60758();
}

uint64_t sub_227DD7FF4()
{
  sub_227DD87B4();
  return sub_227E60764();
}

uint64_t CRDTModelRevisionInfo.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  _BYTE v9[16];

  v3 = sub_227D68330(&qword_2559288A0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3, v5);
  v7 = &v9[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_227D572A4(a1, a1[3]);
  sub_227DD87B4();
  sub_227E6074C();
  v9[15] = 0;
  sub_227E60614();
  if (!v1)
  {
    v9[14] = 1;
    sub_227E60614();
    type metadata accessor for CRDTModelRevisionInfo();
    v9[13] = 2;
    sub_227E5F27C();
    sub_227DD92AC(&qword_255928258, MEMORY[0x24BDCE920]);
    sub_227E60620();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v7, v3);
}

uint64_t CRDTModelRevisionInfo.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  char v28;
  char v29;
  char v30;

  v25 = a2;
  v4 = sub_227D68330(&qword_253F391D0);
  MEMORY[0x24BDAC7A8](v4, v5);
  v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = sub_227D68330(&qword_2559288B0);
  v8 = *(_QWORD *)(v26 - 8);
  MEMORY[0x24BDAC7A8](v26, v9);
  v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for CRDTModelRevisionInfo();
  MEMORY[0x24BDAC7A8](v12, v13);
  v15 = (uint64_t *)((char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v16 = a1[3];
  v27 = a1;
  sub_227D572A4(a1, v16);
  sub_227DD87B4();
  sub_227E60740();
  if (v2)
    return sub_227D58120((uint64_t)v27);
  v17 = v8;
  v24 = v7;
  v30 = 0;
  v18 = v26;
  v19 = (uint64_t)v15;
  *v15 = sub_227E605C0();
  v15[1] = v20;
  v29 = 1;
  v15[2] = sub_227E605C0();
  v15[3] = v21;
  sub_227E5F27C();
  v28 = 2;
  sub_227DD92AC(&qword_255928278, MEMORY[0x24BDCE960]);
  v22 = (uint64_t)v24;
  sub_227E605CC();
  (*(void (**)(char *, uint64_t))(v17 + 8))(v11, v18);
  sub_227DD87F8(v22, v19 + *(int *)(v12 + 24));
  sub_227DD7B60(v19, v25);
  sub_227D58120((uint64_t)v27);
  return sub_227DD7BA4(v19);
}

uint64_t sub_227DD8418@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return CRDTModelRevisionInfo.init(from:)(a1, a2);
}

uint64_t sub_227DD842C(_QWORD *a1)
{
  return CRDTModelRevisionInfo.encode(to:)(a1);
}

BOOL _s13BookDataStore21CRDTModelRevisionInfoV2eeoiySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  _BOOL8 result;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  unsigned int (*v34)(uint64_t, uint64_t, uint64_t);
  char *v35;
  char v36;
  void (*v37)(char *, uint64_t);
  uint64_t v38;
  char *v39;

  v4 = sub_227E5F27C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v6);
  v8 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_227D68330((uint64_t *)&unk_2559288D0);
  MEMORY[0x24BDAC7A8](v9, v10);
  v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_227D68330(&qword_253F391D0);
  v15 = MEMORY[0x24BDAC7A8](v13, v14);
  v17 = (char *)&v38 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x24BDAC7A8](v15, v18);
  v21 = (char *)&v38 - v20;
  MEMORY[0x24BDAC7A8](v19, v22);
  v24 = (char *)&v38 - v23;
  v25 = a1[1];
  v26 = a2[1];
  if (!v25)
  {
    if (v26)
      return 0;
    goto LABEL_8;
  }
  if (!v26)
    return 0;
  if (*a1 == *a2 && v25 == v26 || (v27 = sub_227E60698(), result = 0, (v27 & 1) != 0))
  {
LABEL_8:
    v29 = a1[3];
    v30 = a2[3];
    if (v29)
    {
      if (!v30)
        return 0;
      if (a1[2] != a2[2] || v29 != v30)
      {
        v31 = sub_227E60698();
        result = 0;
        if ((v31 & 1) == 0)
          return result;
      }
    }
    else if (v30)
    {
      return 0;
    }
    v39 = v8;
    v32 = type metadata accessor for CRDTModelRevisionInfo();
    sub_227DD7EC8((uint64_t)a1 + *(int *)(v32 + 24), (uint64_t)v24);
    sub_227DD7EC8((uint64_t)a2 + *(int *)(v32 + 24), (uint64_t)v21);
    v33 = (uint64_t)&v12[*(int *)(v9 + 48)];
    sub_227DD7EC8((uint64_t)v24, (uint64_t)v12);
    sub_227DD7EC8((uint64_t)v21, v33);
    v34 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
    if (v34((uint64_t)v12, 1, v4) == 1)
    {
      sub_227D5809C((uint64_t)v21, &qword_253F391D0);
      sub_227D5809C((uint64_t)v24, &qword_253F391D0);
      if (v34(v33, 1, v4) == 1)
      {
        sub_227D5809C((uint64_t)v12, &qword_253F391D0);
        return 1;
      }
      goto LABEL_20;
    }
    sub_227DD7EC8((uint64_t)v12, (uint64_t)v17);
    if (v34(v33, 1, v4) == 1)
    {
      sub_227D5809C((uint64_t)v21, &qword_253F391D0);
      sub_227D5809C((uint64_t)v24, &qword_253F391D0);
      (*(void (**)(char *, uint64_t))(v5 + 8))(v17, v4);
LABEL_20:
      sub_227D5809C((uint64_t)v12, (uint64_t *)&unk_2559288D0);
      return 0;
    }
    v35 = v39;
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v39, v33, v4);
    sub_227DD92AC((unint64_t *)&unk_253F391C0, MEMORY[0x24BDCE958]);
    v36 = sub_227E5FF6C();
    v37 = *(void (**)(char *, uint64_t))(v5 + 8);
    v37(v35, v4);
    sub_227D5809C((uint64_t)v21, &qword_253F391D0);
    sub_227D5809C((uint64_t)v24, &qword_253F391D0);
    v37(v17, v4);
    sub_227D5809C((uint64_t)v12, &qword_253F391D0);
    return (v36 & 1) != 0;
  }
  return result;
}

unint64_t sub_227DD87B4()
{
  unint64_t result;

  result = qword_2559288A8;
  if (!qword_2559288A8)
  {
    result = MEMORY[0x22E2AA7D4](&unk_227E6EFE4, &type metadata for CRDTModelRevisionInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2559288A8);
  }
  return result;
}

uint64_t sub_227DD87F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_227D68330(&qword_253F391D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t *initializeBufferWithCopyOfBuffer for CRDTModelRevisionInfo(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(char *, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v14 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v14 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    v6 = a2[3];
    a1[2] = a2[2];
    a1[3] = v6;
    v7 = *(int *)(a3 + 24);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_227E5F27C();
    v11 = *(_QWORD *)(v10 - 8);
    v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v12(v9, 1, v10))
    {
      v13 = sub_227D68330(&qword_253F391D0);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
  }
  return v3;
}

uint64_t destroy for CRDTModelRevisionInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 24);
  v5 = sub_227E5F27C();
  v6 = *(_QWORD *)(v5 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  return result;
}

_QWORD *initializeWithCopy for CRDTModelRevisionInfo(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(char *, uint64_t, uint64_t);
  uint64_t v12;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  v6 = *(int *)(a3 + 24);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_227E5F27C();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v11(v8, 1, v9))
  {
    v12 = sub_227D68330(&qword_253F391D0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  return a1;
}

_QWORD *assignWithCopy for CRDTModelRevisionInfo(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 24);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_227E5F27C();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v14 = sub_227D68330(&qword_253F391D0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  return a1;
}

_OWORD *initializeWithTake for CRDTModelRevisionInfo(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = *(int *)(a3 + 24);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_227E5F27C();
  v9 = *(_QWORD *)(v8 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
  {
    v10 = sub_227D68330(&qword_253F391D0);
    memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v6, v7, v8);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
  }
  return a1;
}

_QWORD *assignWithTake for CRDTModelRevisionInfo(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(char *, uint64_t, uint64_t);
  int v14;
  int v15;
  uint64_t v16;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  v8 = *(int *)(a3 + 24);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = sub_227E5F27C();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48);
  v14 = v13(v9, 1, v11);
  v15 = v13(v10, 1, v11);
  if (!v14)
  {
    if (!v15)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 40))(v9, v10, v11);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v9, v11);
    goto LABEL_6;
  }
  if (v15)
  {
LABEL_6:
    v16 = sub_227D68330(&qword_253F391D0);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  return a1;
}

uint64_t sub_227DD8DD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  int v5;
  uint64_t v9;

  if ((_DWORD)a2 == 2147483646)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    v5 = v4 - 1;
    if (v5 < 0)
      v5 = -1;
    return (v5 + 1);
  }
  else
  {
    v9 = sub_227D68330(&qword_253F391D0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v9);
  }
}

uint64_t sub_227DD8E60(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 2147483646)
  {
    *(_QWORD *)(result + 8) = a2;
  }
  else
  {
    v7 = sub_227D68330(&qword_253F391D0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

uint64_t sub_227DD8ED8()
{
  return MEMORY[0x24BEE0D28];
}

uint64_t getEnumTagSinglePayload for CRDTModelRevisionInfo.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_17;
  if (a2 + 2 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 2) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 2;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 2;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 2;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v8 = v6 - 3;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for CRDTModelRevisionInfo.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_227DD8FC0 + 4 * byte_227E6EE65[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_227DD8FF4 + 4 * byte_227E6EE60[v4]))();
}

uint64_t sub_227DD8FF4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_227DD8FFC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x227DD9004);
  return result;
}

uint64_t sub_227DD9010(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x227DD9018);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_227DD901C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_227DD9024(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

_BYTE *sub_227DD9030(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

ValueMetadata *type metadata accessor for CRDTModelRevisionInfo.CodingKeys()
{
  return &type metadata for CRDTModelRevisionInfo.CodingKeys;
}

unint64_t sub_227DD904C()
{
  unint64_t result;

  result = qword_2559288B8;
  if (!qword_2559288B8)
  {
    result = MEMORY[0x22E2AA7D4](&unk_227E6EFBC, &type metadata for CRDTModelRevisionInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2559288B8);
  }
  return result;
}

unint64_t sub_227DD9094()
{
  unint64_t result;

  result = qword_2559288C0;
  if (!qword_2559288C0)
  {
    result = MEMORY[0x22E2AA7D4](&unk_227E6EF2C, &type metadata for CRDTModelRevisionInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2559288C0);
  }
  return result;
}

unint64_t sub_227DD90DC()
{
  unint64_t result;

  result = qword_2559288C8;
  if (!qword_2559288C8)
  {
    result = MEMORY[0x22E2AA7D4](&unk_227E6EF54, &type metadata for CRDTModelRevisionInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2559288C8);
  }
  return result;
}

uint64_t sub_227DD9120(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6E6F697369766572 && a2 == 0xEC000000746E6948;
  if (v2 || (sub_227E60698() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x684364726F636572 && a2 == 0xEF67615465676E61 || (sub_227E60698() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000227E6B500)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_227E60698();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_227DD92AC(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_227E5F27C();
    result = MEMORY[0x22E2AA7D4](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_227DD92EC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t a5)
{
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  unint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v9 = sub_227E60014();
  swift_bridgeObjectRetain();
  sub_227E60398();
  v11 = v10;
  swift_bridgeObjectRelease();
  if ((v11 & 0x1000000000000000) != 0)
    goto LABEL_25;
  swift_bridgeObjectRetain();
  sub_227E60398();
  v13 = v12;
  result = swift_bridgeObjectRelease();
  if ((v13 & 0x1000000000000000) != 0)
    goto LABEL_25;
  v15 = a4 & 0x800000000000000;
  v16 = (a5 & 0x1000000000000000) == 0 || (a4 & 0x800000000000000) != 0;
  v17 = a2;
  if ((a5 & 0x1000000000000000) != 0)
  {
    result = sub_227E60050();
    v18 = result;
    if (v15)
      v19 = 7;
    else
      v19 = 11;
  }
  else
  {
    v18 = 0;
    v19 = 7;
  }
  v20 = 4 << v16;
  if ((a5 & 0x2000000000000000) != 0)
    v21 = HIBYTE(a5) & 0xF;
  else
    v21 = a4 & 0xFFFFFFFFFFFFLL;
  v22 = 4 << (v15 >> 59);
  v23 = v19 | (v21 << 16);
  if ((a5 & 0x1000000000000000) == 0)
    v22 = 8;
  v24 = v9;
  if ((v9 & 0xC) == v22)
  {
    v28 = v18;
    result = sub_227DDD654(v9, a4, a5);
    v18 = v28;
    v24 = result;
  }
  if ((v19 & 0xC) == v20)
  {
    v29 = v18;
    result = sub_227DDD654(v19 | (v21 << 16), a4, a5);
    v18 = v29;
    v23 = result;
    v25 = v17;
    if ((a5 & 0x1000000000000000) == 0)
    {
LABEL_17:
      v26 = (v23 >> 16) - (v24 >> 16);
      if ((a3 & 0x1000000000000000) == 0)
        goto LABEL_18;
      goto LABEL_33;
    }
  }
  else
  {
    v25 = v17;
    if ((a5 & 0x1000000000000000) == 0)
      goto LABEL_17;
  }
  if (v21 < v24 >> 16)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  if (v21 >= v23 >> 16)
  {
    v30 = v18;
    v31 = sub_227E60050();
    v18 = v30;
    v26 = v31;
    if ((a3 & 0x1000000000000000) == 0)
    {
LABEL_18:
      if ((a3 & 0x2000000000000000) != 0)
      {
        result = HIBYTE(a3) & 0xF;
        v27 = v18 + result;
        if (!__OFADD__(v18, result))
          goto LABEL_23;
      }
      else
      {
        result = v25 & 0xFFFFFFFFFFFFLL;
        v27 = v18 + (v25 & 0xFFFFFFFFFFFFLL);
        if (!__OFADD__(v18, v25 & 0xFFFFFFFFFFFFLL))
          goto LABEL_23;
      }
      goto LABEL_35;
    }
LABEL_33:
    v32 = v18;
    result = sub_227E60038();
    v27 = v32 + result;
    if (!__OFADD__(v32, result))
    {
LABEL_23:
      result = v27 + v26;
      if (!__OFADD__(v27, v26))
      {
        MEMORY[0x22E2A9640](result);
LABEL_25:
        sub_227E60074();
        sub_227DDE1EC();
        sub_227E60020();
        swift_bridgeObjectRelease();
        sub_227E60020();
        sub_227DDD708(v9, a4, a5);
        sub_227E60020();
        swift_bridgeObjectRelease();
        return 0;
      }
      goto LABEL_36;
    }
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
LABEL_38:
  __break(1u);
  return result;
}

void sub_227DD95E8(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = objc_msgSend(*a1, sel_type);
  v4 = sub_227E5FF84();
  v6 = v5;

  *a2 = v4;
  a2[1] = v6;
}

void sub_227DD963C(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3;
  void *v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v3 = objc_msgSend(*a1, sel_protoData);
  if (v3)
  {
    v4 = v3;
    v5 = sub_227E5F1E0();
    v7 = v6;

  }
  else
  {
    v5 = 0;
    v7 = 0xF000000000000000;
  }
  *a2 = v5;
  a2[1] = v7;
}

void sub_227DD96A0(uint64_t a1, void **a2)
{
  void *v2;
  uint64_t v3;
  id v4;

  v2 = *a2;
  if (*(_QWORD *)(a1 + 8) >> 60 == 15)
    v3 = 0;
  else
    v3 = sub_227E5F1D4();
  v4 = (id)v3;
  objc_msgSend(v2, sel_setProtoData_);

}

uint64_t sub_227DD9704@<X0>(uint64_t a1@<X8>)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  _QWORD v17[2];

  v2 = v1;
  v4 = sub_227D68330(&qword_255928970);
  v6 = MEMORY[0x24BDAC7A8](v4, v5);
  v8 = (char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6, v9);
  v11 = (char *)v17 - v10;
  v12 = (uint64_t)v2 + OBJC_IVAR____TtC13BookDataStore19CRDTModelSyncEntity____lazy_storage___logger;
  swift_beginAccess();
  sub_227DDE2BC(v12, (uint64_t)v11);
  v13 = sub_227E5F588();
  v14 = *(_QWORD *)(v13 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v11, 1, v13) != 1)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v14 + 32))(a1, v11, v13);
  sub_227D5809C((uint64_t)v11, &qword_255928970);
  v17[0] = 0;
  v17[1] = 0xE000000000000000;
  sub_227E60494();
  swift_bridgeObjectRelease();
  strcpy((char *)v17, "CRDTModelSync.");
  HIBYTE(v17[1]) = -18;
  v15 = objc_msgSend(v2, sel_type, v17[0], v17[1]);
  sub_227E5FF84();

  sub_227E6002C();
  swift_bridgeObjectRelease();
  sub_227E5F57C();
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v8, a1, v13);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v8, 0, 1, v13);
  swift_beginAccess();
  sub_227DDE304((uint64_t)v8, v12);
  return swift_endAccess();
}

uint64_t sub_227DD9914(void *a1, uint64_t a2)
{
  void *v2;
  void *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE *v25;
  uint64_t v26;
  uint64_t result;
  uint64_t (**v28)(_BYTE *, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _BYTE *v33;
  id v34;
  NSObject *v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t ObjectType;
  uint64_t v54;
  uint64_t (*v55)(uint64_t, uint64_t);
  uint64_t v56;
  uint64_t (*v57)(uint64_t, uint64_t);
  uint64_t v58;
  NSObject *v59;
  os_log_type_t v60;
  uint8_t *v61;
  char v62;
  uint64_t v63;
  void *v64;
  void *v65;
  objc_class *v66;
  id v67;
  NSObject *v68;
  int v69;
  _BOOL4 v70;
  uint64_t v71;
  id v72;
  void *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  id v77;
  NSObject *v78;
  os_log_type_t v79;
  int v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  id v84;
  uint64_t v85;
  unint64_t v86;
  unint64_t v87;
  os_log_t v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  os_log_type_t v92;
  void (*v93)(_BYTE *, uint64_t);
  uint64_t v94;
  unint64_t v95;
  unint64_t v96;
  const void *v97;
  uint64_t v98;
  uint64_t v99;
  void *v100;
  id v101;
  NSObject *v102;
  os_log_type_t v103;
  uint64_t v104;
  id v105;
  uint64_t v106;
  uint64_t v107;
  unint64_t v108;
  unint64_t v109;
  id v110;
  uint64_t v111;
  unint64_t v112;
  unint64_t v113;
  uint64_t v114;
  os_log_t v115;
  uint64_t v116;
  NSObject *v117;
  NSObject *v118;
  os_log_type_t v119;
  uint8_t *v120;
  id v121;
  void *v122;
  uint64_t v123;
  uint64_t v124;
  _BYTE v125[12];
  int v126;
  id v127;
  _BYTE *v128;
  uint64_t v129;
  uint64_t v130;
  const void *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  os_log_t v136;
  uint64_t v137;
  void (*v138)(_BYTE *, uint64_t);
  void *v139;
  objc_super v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143[6];

  v3 = v2;
  v6 = sub_227E5F588();
  v7 = MEMORY[0x24BDAC7A8](v6, *(_QWORD *)(v6 - 8));
  v9 = MEMORY[0x24BDAC7A8](v7, v8);
  MEMORY[0x24BDAC7A8](v9, v10);
  v13 = MEMORY[0x24BDAC7A8](&v125[-v11], v12);
  v15 = &v125[-v14];
  v17 = MEMORY[0x24BDAC7A8](v13, v16);
  v19 = MEMORY[0x24BDAC7A8](v17, v18);
  v21 = &v125[-v20];
  v23 = MEMORY[0x24BDAC7A8](v19, v22);
  v25 = &v125[-v24];
  result = MEMORY[0x24BDAC7A8](v23, v26);
  v33 = &v125[-v32];
  if (!a2)
    return result;
  v138 = v28;
  v133 = result;
  v134 = v31;
  v135 = v30;
  v137 = v29;
  v139 = a1;
  v34 = objc_msgSend(a1, sel_recordType);
  v35 = sub_227E5FF84();
  v37 = v36;

  v136 = v35;
  v141 = (uint64_t)v35;
  v142 = v37;
  swift_bridgeObjectRetain();
  sub_227E60458();
  if (!*(_QWORD *)(a2 + 16) || (v38 = sub_227DD0190((uint64_t)v143), (v39 & 1) == 0))
  {
    sub_227DD3590((uint64_t)v143);
    return swift_bridgeObjectRelease();
  }
  v128 = v21;
  v131 = *(const void **)(*(_QWORD *)(a2 + 56) + 8 * v38);
  _Block_copy(v131);
  sub_227DD3590((uint64_t)v143);
  v40 = (uint64_t)v139;
  swift_getObjectType();
  v41 = swift_conformsToProtocol2();
  if (v41)
    v42 = v41;
  else
    v42 = 0;
  if (v41)
    v43 = v40;
  else
    v43 = 0;
  v132 = v43;
  if (v43)
  {
    v130 = v6;
    swift_unknownObjectRetain();
    v44 = objc_msgSend(v3, sel_type);
    v45 = sub_227E5FF84();
    v47 = v46;

    swift_bridgeObjectRelease();
    v48 = HIBYTE(v47) & 0xF;
    if ((v47 & 0x2000000000000000) == 0)
      v48 = v45 & 0xFFFFFFFFFFFFLL;
    if (v48)
    {
      v49 = objc_msgSend(v3, sel_type);
      v50 = sub_227E5FF84();
      v52 = v51;

      ObjectType = swift_getObjectType();
      v54 = v42;
      v55 = *(uint64_t (**)(_QWORD, _QWORD))(v42 + 8);
      v129 = ObjectType;
      v56 = v42;
      v57 = v55;
      if (v50 == v55(ObjectType, v56) && v52 == v58)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        v62 = sub_227E60698();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v62 & 1) == 0)
        {
          swift_bridgeObjectRelease();
          sub_227DD9704((uint64_t)v33);
          swift_unknownObjectRetain_n();
          v77 = v3;
          v78 = sub_227E5F570();
          v79 = sub_227E60230();
          v80 = v79;
          if (os_log_type_enabled(v78, v79))
          {
            v81 = swift_slowAlloc();
            v137 = swift_slowAlloc();
            v143[0] = v137;
            *(_DWORD *)v81 = 136315394;
            v136 = v78;
            LODWORD(v135) = v80;
            v82 = v57(v129, v54);
            v141 = sub_227D634E0(v82, v83, v143);
            sub_227E603B0();
            swift_unknownObjectRelease_n();
            swift_bridgeObjectRelease();
            *(_WORD *)(v81 + 12) = 2080;
            v84 = objc_msgSend(v77, sel_type);
            v85 = sub_227E5FF84();
            v87 = v86;

            v141 = sub_227D634E0(v85, v87, v143);
            sub_227E603B0();

            swift_bridgeObjectRelease();
            v88 = v136;
            _os_log_impl(&dword_227D4F000, v136, (os_log_type_t)v135, "CRDTModelSyncEntity incompatible type %s passed in. Expecting %s", (uint8_t *)v81, 0x16u);
            v89 = v137;
            swift_arrayDestroy();
            MEMORY[0x22E2AA8AC](v89, -1, -1);
            MEMORY[0x22E2AA8AC](v81, -1, -1);
            _Block_release(v131);
            swift_unknownObjectRelease();

          }
          else
          {

            swift_unknownObjectRelease_n();
            _Block_release(v131);

            swift_unknownObjectRelease();
          }
          return v138[1](v33, v130);
        }
      }
    }
    else
    {
      v54 = v42;
      v57 = *(uint64_t (**)(uint64_t, uint64_t))(v42 + 8);
    }
    v63 = v132;
    v129 = swift_getObjectType();
    v57(v129, v54);
    v64 = (void *)sub_227E5FF78();
    swift_bridgeObjectRelease();
    objc_msgSend(v3, sel_setType_, v64);

    swift_unknownObjectRetain();
    sub_227D68330(&qword_2559288E0);
    v65 = (void *)sub_227E5FED0();
    v66 = (objc_class *)type metadata accessor for CRDTModelSyncEntity();
    v140.receiver = v3;
    v140.super_class = v66;
    objc_msgSendSuper2(&v140, sel_configureFromCloudData_withMergers_, v63, v65);
    swift_unknownObjectRelease();

    sub_227DD9704((uint64_t)v25);
    swift_unknownObjectRetain_n();
    v67 = v3;
    v68 = sub_227E5F570();
    v69 = sub_227E60248();
    v70 = os_log_type_enabled(v68, (os_log_type_t)v69);
    v127 = v67;
    if (v70)
    {
      v71 = swift_slowAlloc();
      *(_DWORD *)v71 = 134218240;
      v72 = objc_msgSend(v67, sel_protoData);
      v126 = v69;
      if (v72)
      {
        v73 = v72;
        sub_227E5F1E0();
        v75 = v74;

        __asm { BR              X10 }
      }

      v90 = v130;
      v143[0] = -1;
      sub_227E603B0();

      *(_WORD *)(v71 + 12) = 2048;
      (*(void (**)(uint64_t, uint64_t))(v54 + 16))(v129, v54);
      if (v91 >> 60 != 15)
        __asm { BR              X10 }
      swift_unknownObjectRelease();
      v92 = v126;
      v143[0] = -1;
      sub_227E603B0();
      swift_unknownObjectRelease();
      _os_log_impl(&dword_227D4F000, v68, v92, "CRDTModelSyncEntity Merging: existing data (%ld bytes) with incoming data (%ld bytes)", (uint8_t *)v71, 0x16u);
      MEMORY[0x22E2AA8AC](v71, -1, -1);

      v67 = v127;
      v76 = v90;
    }
    else
    {

      swift_unknownObjectRelease_n();
      v76 = v130;
    }
    v93 = (void (*)(_BYTE *, uint64_t))v138[1];
    v93(v25, v76);
    v94 = (*(uint64_t (**)(uint64_t, uint64_t))(v54 + 16))(v129, v54);
    v96 = v95;
    swift_bridgeObjectRetain();
    v97 = v131;
    _Block_copy(v131);
    sub_227DDDD38(v94, v96, v67, v97);
    v98 = v76;
    swift_bridgeObjectRelease_n();
    sub_227DD7918(v94, v96);
    v99 = (uint64_t)v128;
    sub_227DD9704((uint64_t)v128);
    v100 = v139;
    swift_unknownObjectRetain_n();
    v101 = v67;
    v102 = sub_227E5F570();
    v103 = sub_227E60248();
    if (os_log_type_enabled(v102, v103))
    {
      v104 = swift_slowAlloc();
      v136 = (os_log_t)swift_slowAlloc();
      v143[0] = (uint64_t)v136;
      *(_DWORD *)v104 = 136315394;
      v105 = objc_msgSend(v100, sel_recordType);
      v106 = sub_227E5FF84();
      v138 = (uint64_t (**)(_BYTE *, uint64_t))v93;
      v107 = v106;
      v109 = v108;

      v141 = sub_227D634E0(v107, v109, v143);
      sub_227E603B0();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v104 + 12) = 2080;
      v110 = objc_msgSend(v101, sel_debugDescription);
      v111 = sub_227E5FF84();
      v113 = v112;

      v93 = (void (*)(_BYTE *, uint64_t))v138;
      v114 = v111;
      v98 = v130;
      v141 = sub_227D634E0(v114, v113, v143);
      v67 = v127;
      sub_227E603B0();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_227D4F000, v102, v103, "CRDTModelSyncEntity Merging: Adopted properties from cloudData: %s %s", (uint8_t *)v104, 0x16u);
      v115 = v136;
      swift_arrayDestroy();
      MEMORY[0x22E2AA8AC](v115, -1, -1);
      MEMORY[0x22E2AA8AC](v104, -1, -1);

    }
    else
    {

      swift_unknownObjectRelease_n();
    }
    v93((_BYTE *)v99, v98);
    v116 = v137;
    sub_227DD9704(v137);
    v117 = v67;
    v118 = sub_227E5F570();
    v119 = sub_227E60248();
    if (os_log_type_enabled(v118, v119))
    {
      v120 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v120 = 134217984;
      v121 = -[NSObject protoData](v117, sel_protoData);
      if (v121)
      {
        v122 = v121;
        sub_227E5F1E0();
        v124 = v123;

        __asm { BR              X10 }
      }

      v116 = v137;
      v143[0] = -1;
      sub_227E603B0();

      _os_log_impl(&dword_227D4F000, v118, v119, "CRDTModelSyncEntity Merging: merged data (%ld bytes)", v120, 0xCu);
      MEMORY[0x22E2AA8AC](v120, -1, -1);
      _Block_release(v131);
      swift_unknownObjectRelease();
    }
    else
    {
      swift_unknownObjectRelease();

      _Block_release(v131);
      v118 = v117;
    }

    return ((uint64_t (*)(uint64_t, uint64_t))v93)(v116, v98);
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_227DD9704((uint64_t)v15);
    v59 = sub_227E5F570();
    v60 = sub_227E60230();
    if (os_log_type_enabled(v59, v60))
    {
      v61 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v61 = 0;
      _os_log_impl(&dword_227D4F000, v59, v60, "CRDTModelSyncEntity configure(from:) wrong class passed in", v61, 2u);
      MEMORY[0x22E2AA8AC](v61, -1, -1);
    }
    _Block_release(v131);

    return v138[1](v15, v6);
  }
}

uint64_t sub_227DDAF60(uint64_t a1, char a2)
{
  void *v2;
  void *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t ObjectType;
  uint64_t v14;
  char v16;
  id v17;
  void *v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  char v28;
  objc_super v29;

  v3 = v2;
  swift_getObjectType();
  v6 = swift_conformsToProtocol2();
  if (v6)
    v7 = v6;
  else
    v7 = 0;
  if (v6)
    v8 = a1;
  else
    v8 = 0;
  if (!v8)
    goto LABEL_24;
  v29.receiver = v3;
  v29.super_class = (Class)type metadata accessor for CRDTModelSyncEntity();
  swift_unknownObjectRetain();
  if (!objc_msgSendSuper2(&v29, sel_isEqualExceptForDate_ignoringEmptySalt_, a1, a2 & 1))
    goto LABEL_14;
  v9 = objc_msgSend(v3, sel_type, v29.receiver, v29.super_class);
  v10 = sub_227E5FF84();
  v12 = v11;

  ObjectType = swift_getObjectType();
  if (v10 == (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(ObjectType, v7) && v12 == v14)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v16 = sub_227E60698();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v16 & 1) == 0)
    {
LABEL_14:
      swift_unknownObjectRelease();
LABEL_24:
      v26 = 0;
      return v26 & 1;
    }
  }
  v17 = objc_msgSend(v3, sel_protoData);
  if (v17)
  {
    v18 = v17;
    v19 = sub_227E5F1E0();
    v21 = v20;

    v23 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 16))(ObjectType, v7);
    v24 = v22;
    if (v21 >> 60 != 15)
    {
      if (v22 >> 60 != 15)
      {
        sub_227DD7904(v19, v21);
        sub_227DDDAC0(v19, v21);
        v26 = v28;
        swift_unknownObjectRelease();
        sub_227DD7918(v23, v24);
        sub_227DD7918(v19, v21);
        sub_227DD7918(v19, v21);
        return v26 & 1;
      }
      swift_unknownObjectRelease();
      goto LABEL_23;
    }
  }
  else
  {
    v23 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 16))(ObjectType, v7);
    v24 = v25;
    v19 = 0;
    v21 = 0xF000000000000000;
  }
  swift_unknownObjectRelease();
  if (v24 >> 60 != 15)
  {
LABEL_23:
    sub_227DD7918(v19, v21);
    sub_227DD7918(v23, v24);
    goto LABEL_24;
  }
  v26 = 1;
  return v26 & 1;
}

void sub_227DDB20C(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  id v41;
  uint64_t v42;
  char *v43;
  void *v44;
  uint64_t v45;
  id v46;
  void *v47;
  uint64_t v48;
  void (*v49)(void);
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  objc_class *v54;
  id v55;
  void *v56;
  uint64_t v57;
  id v58;
  id v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  id v64;
  id v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  void *v70;
  void *v71;
  const void *v72;
  uint64_t v73;
  id v74;
  id v75;
  id v76;
  id v77;
  NSObject *v78;
  os_log_type_t v79;
  uint64_t v80;
  uint64_t v81;
  id v82;
  id v83;
  uint64_t v84;
  unint64_t v85;
  unint64_t v86;
  id v87;
  uint64_t v88;
  unint64_t v89;
  unint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  const void *v95;
  char *v96;
  char *v97;
  char *v98;
  char *v99;
  uint64_t v100;
  id v101;
  char *v102;
  id v103;
  objc_super v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107[6];

  v4 = sub_227E5F588();
  v5 = *(_QWORD *)(v4 - 8);
  v7 = MEMORY[0x24BDAC7A8](v4, v6);
  v9 = (char *)&v91 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v7, v10);
  v13 = (char *)&v91 - v12;
  v15 = MEMORY[0x24BDAC7A8](v11, v14);
  v17 = (char *)&v91 - v16;
  MEMORY[0x24BDAC7A8](v15, v18);
  v100 = (uint64_t)&v91 - v19;
  v20 = sub_227D68330(&qword_253F391A0);
  MEMORY[0x24BDAC7A8](v20, v21);
  v102 = (char *)&v91 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_227E5F1B0();
  v24 = *(_QWORD *)(v23 - 8);
  v26 = MEMORY[0x24BDAC7A8](v23, v25);
  MEMORY[0x24BDAC7A8](v26, v27);
  if (!a2)
    return;
  v97 = v17;
  v96 = v13;
  v98 = v9;
  v99 = (char *)&v91 - v28;
  v101 = a1;
  v105 = sub_227E60314();
  v106 = v29;
  swift_bridgeObjectRetain();
  v30 = MEMORY[0x24BEE0D00];
  sub_227E60458();
  if (!*(_QWORD *)(a2 + 16) || (v31 = sub_227DD0190((uint64_t)v107), (v32 & 1) == 0))
  {
    sub_227DD3590((uint64_t)v107);
LABEL_8:
    swift_bridgeObjectRelease();
    return;
  }
  v93 = v24;
  v91 = v5;
  v92 = v4;
  v94 = v23;
  v95 = *(const void **)(*(_QWORD *)(a2 + 56) + 8 * v31);
  _Block_copy(v95);
  sub_227DD3590((uint64_t)v107);
  v33 = sub_227E60314();
  v35 = v34;
  v36 = objc_msgSend(v103, sel_recordType);
  v37 = sub_227E5FF84();
  v39 = v38;

  if (v33 == v37 && v35 == v39)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v40 = sub_227E60698();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v40 & 1) == 0)
    {
LABEL_16:
      _Block_release(v95);
      goto LABEL_8;
    }
  }
  v41 = v101;
  v42 = sub_227E60320();
  if (!v42)
    goto LABEL_16;
  v43 = (char *)v42;
  objc_opt_self();
  v44 = (void *)swift_dynamicCastObjCClass();
  if (!v44)
  {
    _Block_release(v95);
    swift_unknownObjectRelease();
    goto LABEL_8;
  }
  v45 = v30;
  v46 = objc_msgSend(v44, sel_fileURL);
  if (v46)
  {
    v47 = v46;
    sub_227E5F198();

    v48 = v93;
    v49 = *(void (**)(void))(v93 + 32);
    v50 = (uint64_t)v102;
    v51 = v94;
    v49();
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v48 + 56))(v50, 0, 1, v51);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v48 + 48))(v50, 1, v51) != 1)
    {
      v52 = v48;
      ((void (*)(char *, uint64_t, uint64_t))v49)(v99, v50, v51);
      sub_227D68330(&qword_2559288E0);
      v53 = (void *)sub_227E5FED0();
      v54 = (objc_class *)type metadata accessor for CRDTModelSyncEntity();
      v55 = v103;
      v104.receiver = v103;
      v104.super_class = v54;
      objc_msgSendSuper2(&v104, sel_resolveConflictsFromRecord_withResolvers_, v41, v53);

      v69 = sub_227E5F1BC();
      v71 = v70;
      swift_bridgeObjectRetain();
      v72 = v95;
      _Block_copy(v95);
      sub_227DD00E0(v69, (unint64_t)v71);
      sub_227DDDD38(v69, (unint64_t)v71, v55, v72);
      v102 = v43;
      swift_bridgeObjectRelease_n();
      v98 = (char *)v69;
      sub_227DD1FD4(v69, (unint64_t)v71);
      v73 = v100;
      sub_227DD9704(v100);
      v74 = v101;
      v75 = v55;
      v76 = v74;
      v77 = v75;
      v78 = sub_227E5F570();
      v79 = sub_227E60248();
      if (os_log_type_enabled(v78, v79))
      {
        v80 = swift_slowAlloc();
        v81 = swift_slowAlloc();
        v107[0] = v81;
        *(_DWORD *)v80 = 136315394;
        v103 = v71;
        v82 = objc_msgSend(v76, sel_recordID);
        v83 = objc_msgSend(v82, sel_recordName);

        v84 = sub_227E5FF84();
        v86 = v85;

        v105 = sub_227D634E0(v84, v86, v107);
        sub_227E603B0();

        swift_bridgeObjectRelease();
        *(_WORD *)(v80 + 12) = 2080;
        v87 = objc_msgSend(v77, sel_debugDescription);
        v88 = sub_227E5FF84();
        v90 = v89;

        v105 = sub_227D634E0(v88, v90, v107);
        sub_227E603B0();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_227D4F000, v78, v79, "CRDTModelSyncEntity Resolving: Adopted properties from record: %s %s", (uint8_t *)v80, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x22E2AA8AC](v81, -1, -1);
        MEMORY[0x22E2AA8AC](v80, -1, -1);
        _Block_release(v95);

        swift_unknownObjectRelease();
        sub_227DD1FD4((uint64_t)v98, (unint64_t)v103);
        (*(void (**)(uint64_t, uint64_t))(v91 + 8))(v100, v92);
        (*(void (**)(char *, uint64_t))(v93 + 8))(v99, v94);
      }
      else
      {
        _Block_release(v95);

        swift_unknownObjectRelease();
        sub_227DD1FD4((uint64_t)v98, (unint64_t)v71);
        (*(void (**)(uint64_t, uint64_t))(v91 + 8))(v73, v92);
        (*(void (**)(char *, uint64_t))(v52 + 8))(v99, v51);
      }
      return;
    }
  }
  else
  {
    v50 = (uint64_t)v102;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v93 + 56))(v102, 1, 1, v94);
  }
  swift_bridgeObjectRelease();
  sub_227D5809C(v50, &qword_253F391A0);
  sub_227E60230();
  if (qword_253F39F30 != -1)
    swift_once();
  v56 = (void *)qword_253F39F28;
  sub_227D68330(&qword_253F3B090);
  v57 = swift_allocObject();
  *(_OWORD *)(v57 + 16) = xmmword_227E6F040;
  v58 = v56;
  v59 = objc_msgSend(v103, sel_type);
  v60 = sub_227E5FF84();
  v62 = v61;

  *(_QWORD *)(v57 + 56) = v45;
  v63 = sub_227D57A70();
  *(_QWORD *)(v57 + 64) = v63;
  *(_QWORD *)(v57 + 32) = v60;
  *(_QWORD *)(v57 + 40) = v62;
  v64 = objc_msgSend(v101, sel_recordID);
  v65 = objc_msgSend(v64, sel_recordName);

  v66 = sub_227E5FF84();
  v68 = v67;

  *(_QWORD *)(v57 + 96) = v45;
  *(_QWORD *)(v57 + 104) = v63;
  *(_QWORD *)(v57 + 72) = v66;
  *(_QWORD *)(v57 + 80) = v68;
  sub_227E5F564();
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();
  _Block_release(v95);
}

uint64_t sub_227DDC32C(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5)
{
  void *v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v13;
  _OWORD v14[2];
  _BYTE v15[24];
  uint64_t v16;

  v8 = (void *)sub_227E5FF78();
  if (a2 >> 60 == 15)
    v9 = 0;
  else
    v9 = sub_227E5F1D4();
  if (a4 >> 60 == 15)
    v10 = 0;
  else
    v10 = sub_227E5F1D4();
  v11 = (id)(*(uint64_t (**)(uint64_t, void *, uint64_t, uint64_t))(a5 + 16))(a5, v8, v9, v10);

  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  if (v11)
  {
    sub_227E603D4();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v14, 0, sizeof(v14));
  }
  sub_227DDE274((uint64_t)v14, (uint64_t)v15);
  if (v16)
  {
    if (swift_dynamicCast())
      return v13;
    else
      return 0;
  }
  else
  {
    sub_227D5809C((uint64_t)v15, qword_253F3B0B0);
    return 0;
  }
}

id CRDTModelSyncEntity.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  objc_class *v2;
  id v5;

  v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id CRDTModelSyncEntity.init(entity:insertInto:)(void *a1, void *a2)
{
  void *v2;
  id v5;
  objc_super v7;

  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for CRDTModelSyncEntity();
  v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id CRDTModelSyncEntity.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRDTModelSyncEntity();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_227DDC6EC()
{
  void *v0;
  id v1;
  uint64_t v2;

  v1 = objc_msgSend(v0, sel_type);
  v2 = sub_227E5FF84();

  return v2;
}

uint64_t sub_227DDC740()
{
  void *v0;
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend(v0, sel_protoData);
  if (!v1)
    return 0;
  v2 = v1;
  v3 = sub_227E5F1E0();

  return v3;
}

id CRDTModelSyncEntity.mutableCopy()@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  objc_class *v4;
  id result;

  v2 = v1;
  v4 = (objc_class *)type metadata accessor for CRDTModelSync();
  result = objc_msgSend(objc_allocWithZone(v4), sel_initWithCloudData_, v2);
  if (result)
  {
    a1[3] = v4;
    *a1 = result;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t CRDTModelSyncEntity.debugDescription.getter()
{
  void *v0;
  id v1;
  uint64_t v2;
  objc_super v4;

  v4.receiver = v0;
  v4.super_class = (Class)type metadata accessor for CRDTModelSyncEntity();
  v1 = objc_msgSendSuper2(&v4, sel_debugDescription);
  v2 = sub_227E5FF84();

  sub_227DDD754(v0);
  swift_bridgeObjectRetain();
  sub_227E6002C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2;
}

Swift::String __swiftcall CRDTModelSyncEntity.recordType()()
{
  void *v0;
  id v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  uint64_t v11;
  void *v12;
  Swift::String result;

  v1 = objc_msgSend(v0, sel_type);
  v2 = sub_227E5FF84();
  v4 = v3;

  sub_227E60068();
  v5 = sub_227E5FFCC();
  v7 = v6;
  swift_bridgeObjectRelease();
  v8 = sub_227DD92EC(15, v5, v7, v2, v4);
  v10 = v9;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v11 = v8;
  v12 = v10;
  result._object = v12;
  result._countAndFlagsBits = v11;
  return result;
}

Swift::String_optional __swiftcall CRDTModelSyncEntity.identifier()()
{
  void *v0;
  uint64_t v1;
  void *v2;
  Swift::String_optional result;

  v1 = sub_227DDD88C(v0);
  result.value._object = v2;
  result.value._countAndFlagsBits = v1;
  return result;
}

uint64_t CRDTModelSyncEntity.zoneName()()
{
  void *v0;
  id v1;
  uint64_t v2;

  v1 = objc_msgSend(v0, sel_type);
  sub_227E5FF84();

  v2 = sub_227E5FF78();
  swift_bridgeObjectRelease();
  return v2;
}

id sub_227DDCCF4(uint64_t a1)
{
  char *v1;
  void *v2;
  objc_class *ObjectType;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t (*v12)(uint64_t, uint64_t);
  char *v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  unint64_t v22;
  objc_super v24;

  v2 = v1;
  ObjectType = (objc_class *)swift_getObjectType();
  v5 = &v1[OBJC_IVAR____TtC13BookDataStore13CRDTModelSync_type];
  *(_QWORD *)v5 = 0;
  *((_QWORD *)v5 + 1) = 0xE000000000000000;
  v6 = &v1[OBJC_IVAR____TtC13BookDataStore13CRDTModelSync_protoData];
  *(_OWORD *)&v1[OBJC_IVAR____TtC13BookDataStore13CRDTModelSync_protoData] = xmmword_227E6F050;
  swift_getObjectType();
  v7 = swift_conformsToProtocol2();
  if (v7)
    v8 = v7;
  else
    v8 = 0;
  if (v7)
    v9 = a1;
  else
    v9 = 0;
  if (v9)
  {
    v10 = swift_getObjectType();
    v24.receiver = v2;
    v24.super_class = ObjectType;
    swift_unknownObjectRetain_n();
    v11 = objc_msgSendSuper2(&v24, sel_initWithCloudData_, v9);
    swift_unknownObjectRelease();
    if (v11)
    {

      v12 = *(uint64_t (**)(uint64_t, uint64_t))(v8 + 8);
      v13 = (char *)v11;
      v14 = v12(v10, v8);
      v15 = (uint64_t *)&v13[OBJC_IVAR____TtC13BookDataStore13CRDTModelSync_type];
      *v15 = v14;
      v15[1] = v16;
      swift_bridgeObjectRelease();
      v17 = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 16))(v10, v8);
      v19 = v18;
      swift_unknownObjectRelease_n();
      v20 = (uint64_t *)&v13[OBJC_IVAR____TtC13BookDataStore13CRDTModelSync_protoData];
      v21 = *(_QWORD *)&v13[OBJC_IVAR____TtC13BookDataStore13CRDTModelSync_protoData];
      v22 = *(_QWORD *)&v13[OBJC_IVAR____TtC13BookDataStore13CRDTModelSync_protoData + 8];
      *v20 = v17;
      v20[1] = v19;
      sub_227DD7918(v21, v22);

    }
    else
    {
      swift_unknownObjectRelease_n();
    }
  }
  else
  {
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    sub_227DD7918(*(_QWORD *)v6, *((_QWORD *)v6 + 1));
    swift_deallocPartialClassInstance();
    return 0;
  }
  return v11;
}

id sub_227DDCF8C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_227DDD000()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC13BookDataStore13CRDTModelSync_type);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_227DDD038()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC13BookDataStore13CRDTModelSync_protoData);
  sub_227DD7904(v1, *(_QWORD *)(v0 + OBJC_IVAR____TtC13BookDataStore13CRDTModelSync_protoData + 8));
  return v1;
}

uint64_t sub_227DDD0C8()
{
  void *v0;
  id v1;
  uint64_t v2;
  objc_super v4;

  v4.receiver = v0;
  v4.super_class = (Class)swift_getObjectType();
  v1 = objc_msgSendSuper2(&v4, sel_debugDescription);
  v2 = sub_227E5FF84();

  sub_227E6002C();
  sub_227E60494();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_227E6002C();
  swift_bridgeObjectRelease();
  sub_227E6002C();
  sub_227E6002C();
  swift_bridgeObjectRelease();
  sub_227E6002C();
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_227DDD2F0()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC13BookDataStore13CRDTModelSync_type);
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC13BookDataStore13CRDTModelSync_type + 8);
  v3 = HIBYTE(v2) & 0xF;
  if ((v2 & 0x2000000000000000) == 0)
    v3 = v1 & 0xFFFFFFFFFFFFLL;
  if (!v3)
    return 0;
  swift_bridgeObjectRetain();
  return v1;
}

void sub_227DDD3EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  __asm { BR              X10 }
}

uint64_t sub_227DDD44C(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, __int16 a10, char __s2, char a12, char a13, char a14, char a15, char a16, char a17, char a18, char a19, char a20,char a21,char a22,char a23,char a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37)
{
  BOOL *v37;
  const void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t result;
  uint64_t v42;
  __int16 v43;
  char v44;
  char v45;
  char v46;
  char v47;

  v42 = v39;
  v43 = v40;
  v44 = BYTE2(v40);
  v45 = BYTE3(v40);
  v46 = BYTE4(v40);
  v47 = BYTE5(v40);
  if (!v38)
  {
    __break(1u);
    JUMPOUT(0x227DDD630);
  }
  result = memcmp(v38, &v42, BYTE6(v40));
  *v37 = (_DWORD)result == 0;
  return result;
}

uint64_t sub_227DDD654(unint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;

  v3 = a1;
  v4 = (unsigned __int16)a1 >> 14;
  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    v10 = sub_227E6005C();
    v11 = v10 + (v4 << 16);
    v12 = v10 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    v13 = v11 & 0xFFFFFFFFFFFF0000;
    if (!v4)
      v13 = v12;
    return v13 | 4;
  }
  else
  {
    v5 = MEMORY[0x22E2A9688](15, a1 >> 16);
    v6 = v5 + (v4 << 16);
    v7 = v5 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    v8 = v6 & 0xFFFFFFFFFFFF0000;
    if (!v4)
      v8 = v7;
    return v8 | 8;
  }
}

uint64_t type metadata accessor for CRDTModelSyncEntity()
{
  uint64_t result;

  result = qword_255928918;
  if (!qword_255928918)
    return swift_getSingletonMetadata();
  return result;
}

unint64_t sub_227DDD708(unint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v3;

  v3 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0)
    v3 = a2 & 0xFFFFFFFFFFFFLL;
  if (4 * v3 >= result >> 14)
    return sub_227E60074();
  __break(1u);
  return result;
}

uint64_t sub_227DDD754(void *a1)
{
  id v2;
  id v3;
  void *v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;

  sub_227E60494();
  swift_bridgeObjectRelease();
  v2 = objc_msgSend(a1, sel_type);
  sub_227E5FF84();

  sub_227E6002C();
  swift_bridgeObjectRelease();
  sub_227E6002C();
  v3 = objc_msgSend(a1, sel_protoData);
  if (v3)
  {
    v4 = v3;
    v5 = sub_227E5F1E0();
    v7 = v6;

    sub_227DD1FD4(v5, v7);
  }
  sub_227E6002C();
  swift_bridgeObjectRelease();
  return 0x203A65707974;
}

uint64_t sub_227DDD88C(void *a1)
{
  id v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;

  v2 = objc_msgSend(a1, sel_type);
  v3 = sub_227E5FF84();
  v5 = v4;

  swift_bridgeObjectRelease();
  v6 = HIBYTE(v5) & 0xF;
  if ((v5 & 0x2000000000000000) == 0)
    v6 = v3 & 0xFFFFFFFFFFFFLL;
  if (!v6)
    return 0;
  v7 = objc_msgSend(a1, sel_type);
  v8 = sub_227E5FF84();

  return v8;
}

uint64_t sub_227DDD938(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  char v5;
  char v7;
  uint64_t v8;
  __int16 v9;
  char v10;
  char v11;
  char v12;
  char v13;
  uint64_t v14;

  v14 = *MEMORY[0x24BDAC8D0];
  v8 = a1;
  v9 = a2;
  v10 = BYTE2(a2);
  v11 = BYTE3(a2);
  v12 = BYTE4(a2);
  v13 = BYTE5(a2);
  sub_227DDD3EC((uint64_t)&v8, (uint64_t)&v8 + BYTE6(a2), a3, a4);
  if (!v4)
    v5 = v7;
  return v5 & 1;
}

uint64_t sub_227DDDA0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t result;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;

  result = sub_227E5F054();
  v11 = result;
  if (result)
  {
    result = sub_227E5F06C();
    if (__OFSUB__(a1, result))
    {
LABEL_15:
      __break(1u);
      return result;
    }
    v11 += a1 - result;
  }
  v12 = __OFSUB__(a2, a1);
  v13 = a2 - a1;
  if (v12)
  {
    __break(1u);
    goto LABEL_15;
  }
  v14 = sub_227E5F060();
  if (v14 >= v13)
    v15 = v13;
  else
    v15 = v14;
  v16 = v11 + v15;
  if (v11)
    v17 = v16;
  else
    v17 = 0;
  sub_227DDD3EC(v11, v17, a4, a5);
  if (!v5)
    v18 = v19;
  return v18 & 1;
}

void sub_227DDDAC0(uint64_t a1, uint64_t a2)
{
  __asm { BR              X11 }
}

uint64_t sub_227DDDB0C()
{
  unint64_t v0;

  return ((uint64_t (*)(void))((char *)&loc_227DDDB40 + *((int *)qword_227DDDD18 + (v0 >> 62))))();
}

uint64_t sub_227DDDB50@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  if (v1 == BYTE6(v2))
  {
    if (v1 >= 1)
      __asm { BR              X10 }
    v3 = 1;
  }
  else
  {
    v3 = 0;
  }
  return v3 & 1;
}

void sub_227DDDD38(uint64_t a1, unint64_t a2, id a3, const void *a4)
{
  id v8;
  void *v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  char v18;
  _BYTE *v19;
  uint64_t v20;
  unint64_t v21;
  _BYTE *v22;
  void *v23;

  v8 = objc_msgSend(a3, sel_protoData);
  if (!v8)
  {
    v12 = 0xF000000000000000;
    v20 = sub_227DDC32C(0, 0xF000000000000000, a1, a2, (uint64_t)a4);
    v10 = 0;
    if (v21 >> 60 != 15)
    {
      v15 = v20;
      v16 = v21;
      goto LABEL_10;
    }
LABEL_7:
    sub_227DDE230();
    swift_allocError();
    *v22 = 0;
    swift_willThrow();
    goto LABEL_8;
  }
  v9 = v8;
  v10 = sub_227E5F1E0();
  v12 = v11;

  v13 = sub_227DDC32C(v10, v12, a1, a2, (uint64_t)a4);
  if (v14 >> 60 == 15)
    goto LABEL_7;
  v15 = v13;
  v16 = v14;
  if (v12 >> 60 == 15)
  {
LABEL_10:
    sub_227DD00E0(v15, v16);
    sub_227DD7918(v15, v16);
    sub_227DD7918(v10, v12);
    goto LABEL_11;
  }
  sub_227DD00E0(v10, v12);
  sub_227DDDAC0(v15, v16);
  v18 = v17;
  sub_227DD7918(v10, v12);
  if ((v18 & 1) != 0)
  {
    sub_227DDE230();
    swift_allocError();
    *v19 = 1;
    swift_willThrow();
    sub_227DD7918(v15, v16);
LABEL_8:
    sub_227DD7918(v10, v12);
    _Block_release(a4);
    return;
  }
LABEL_11:
  v23 = (void *)sub_227E5F1D4();
  objc_msgSend(a3, sel_setProtoData_, v23);

  sub_227DD7918(v15, v16);
  sub_227DD7918(v10, v12);
  _Block_release(a4);
}

uint64_t type metadata accessor for CRDTModelSync()
{
  return objc_opt_self();
}

char *sub_227DDDF80()
{
  return sel_type;
}

void sub_227DDDF90(uint64_t a1, void **a2)
{
  void *v2;
  id v3;

  v2 = *a2;
  v3 = (id)sub_227E5FF78();
  objc_msgSend(v2, sel_setType_, v3);

}

char *sub_227DDDFE0()
{
  return sel_protoData;
}

uint64_t dispatch thunk of CRDTModelSyncProtocol.type.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of CRDTModelSyncProtocol.protoData.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t sub_227DDE004()
{
  return type metadata accessor for CRDTModelSyncEntity();
}

void sub_227DDE00C()
{
  unint64_t v0;

  sub_227DDE084();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t method lookup function for CRDTModelSyncEntity()
{
  return swift_lookUpClassMethod();
}

void sub_227DDE084()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255928928)
  {
    sub_227E5F588();
    v0 = sub_227E6038C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255928928);
  }
}

uint64_t storeEnumTagSinglePayload for CRDTModelSyncEntity.MergerError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_227DDE124 + 4 * byte_227E6F065[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_227DDE158 + 4 * byte_227E6F060[v4]))();
}

uint64_t sub_227DDE158(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_227DDE160(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x227DDE168);
  return result;
}

uint64_t sub_227DDE174(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x227DDE17CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_227DDE180(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_227DDE188(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CRDTModelSyncEntity.MergerError()
{
  return &type metadata for CRDTModelSyncEntity.MergerError;
}

unint64_t sub_227DDE1A8()
{
  unint64_t result;

  result = qword_255928968;
  if (!qword_255928968)
  {
    result = MEMORY[0x22E2AA7D4](&unk_227E6F174, &type metadata for CRDTModelSyncEntity.MergerError);
    atomic_store(result, (unint64_t *)&qword_255928968);
  }
  return result;
}

unint64_t sub_227DDE1EC()
{
  unint64_t result;

  result = qword_255928978;
  if (!qword_255928978)
  {
    result = MEMORY[0x22E2AA7D4](MEMORY[0x24BEE1E20], MEMORY[0x24BEE1E08]);
    atomic_store(result, (unint64_t *)&qword_255928978);
  }
  return result;
}

unint64_t sub_227DDE230()
{
  unint64_t result;

  result = qword_255928980;
  if (!qword_255928980)
  {
    result = MEMORY[0x22E2AA7D4](&unk_227E6F0F4, &type metadata for CRDTModelSyncEntity.MergerError);
    atomic_store(result, (unint64_t *)&qword_255928980);
  }
  return result;
}

uint64_t sub_227DDE274(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_227D68330(qword_253F3B0B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_227DDE2BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_227D68330(&qword_255928970);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_227DDE304(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_227D68330(&qword_255928970);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_227DDE34C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  id v9;
  uint64_t v11;

  v0 = sub_227E5F384();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0, v2);
  v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_227E5F39C();
  MEMORY[0x24BDAC7A8](v5, v6);
  v7 = sub_227E5F33C();
  sub_227DDF6FC(v7, qword_255928990);
  sub_227DDF6E4(v7, (uint64_t)qword_255928990);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v4, *MEMORY[0x24BE0FB40], v0);
  v8 = objc_msgSend((id)objc_opt_self(), sel_sharedProvider);
  v9 = objc_msgSend(v8, sel_activeStoreAccount);

  sub_227E5F390();
  return sub_227E5F330();
}

uint64_t BDSBookWidgetInfoManager.fetch(adamIDs:)(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t);

  v5 = (uint64_t (*)(uint64_t))((char *)&dword_2559289B0 + dword_2559289B0);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_227DDF748;
  return v5(a1);
}

void sub_227DDE4E8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  int64_t v18;
  uint64_t v19;
  unint64_t v20;
  id v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  char v30;
  unint64_t v31;
  BOOL v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  int64_t v36;
  uint64_t v37;

  v2 = MEMORY[0x24BEE4B00];
  v3 = a1 + 64;
  v37 = MEMORY[0x24BEE4B00];
  v4 = -1 << *(_BYTE *)(a1 + 32);
  if (-v4 < 64)
    v5 = ~(-1 << -(char)v4);
  else
    v5 = -1;
  v6 = v5 & *(_QWORD *)(a1 + 64);
  v36 = (unint64_t)(63 - v4) >> 6;
  swift_bridgeObjectRetain();
  v7 = 0;
  v35 = v3;
  if (!v6)
    goto LABEL_8;
LABEL_5:
  v8 = __clz(__rbit64(v6));
  v6 &= v6 - 1;
  v9 = v8 | (v7 << 6);
  while (1)
  {
    v10 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v9);
    v12 = *v10;
    v11 = v10[1];
    v13 = *(void **)(*(_QWORD *)(a1 + 56) + 8 * v9);
    v14 = swift_dynamicCastObjCProtocolConditional();
    if (v14)
    {
      v19 = v14;
      v20 = *(_QWORD *)(v2 + 16);
      if (*(_QWORD *)(v2 + 24) <= v20)
      {
        v22 = v20 + 1;
        v23 = v13;
        swift_bridgeObjectRetain();
        sub_227DD0A48(v22, 1);
        v2 = v37;
      }
      else
      {
        v21 = v13;
        swift_bridgeObjectRetain();
      }
      sub_227E6071C();
      sub_227E60008();
      v24 = sub_227E60734();
      v25 = v2 + 64;
      v26 = -1 << *(_BYTE *)(v2 + 32);
      v27 = v24 & ~v26;
      v28 = v27 >> 6;
      if (((-1 << v27) & ~*(_QWORD *)(v2 + 64 + 8 * (v27 >> 6))) == 0)
      {
        v30 = 0;
        v31 = (unint64_t)(63 - v26) >> 6;
        v3 = v35;
        while (++v28 != v31 || (v30 & 1) == 0)
        {
          v32 = v28 == v31;
          if (v28 == v31)
            v28 = 0;
          v30 |= v32;
          v33 = *(_QWORD *)(v25 + 8 * v28);
          if (v33 != -1)
          {
            v29 = __clz(__rbit64(~v33)) + (v28 << 6);
            goto LABEL_37;
          }
        }
        goto LABEL_41;
      }
      v29 = __clz(__rbit64((-1 << v27) & ~*(_QWORD *)(v2 + 64 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
      v3 = v35;
LABEL_37:
      *(_QWORD *)(v25 + ((v29 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v29;
      v34 = (_QWORD *)(*(_QWORD *)(v2 + 48) + 16 * v29);
      *v34 = v12;
      v34[1] = v11;
      *(_QWORD *)(*(_QWORD *)(v2 + 56) + 8 * v29) = v19;
      ++*(_QWORD *)(v2 + 16);

      if (v6)
        goto LABEL_5;
    }
    else if (v6)
    {
      goto LABEL_5;
    }
LABEL_8:
    v15 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
LABEL_41:
      __break(1u);
      goto LABEL_42;
    }
    if (v15 >= v36)
      goto LABEL_39;
    v16 = *(_QWORD *)(v3 + 8 * v15);
    v17 = v7 + 1;
    if (!v16)
    {
      v17 = v7 + 2;
      if (v7 + 2 >= v36)
        goto LABEL_39;
      v16 = *(_QWORD *)(v3 + 8 * v17);
      if (!v16)
      {
        v17 = v7 + 3;
        if (v7 + 3 >= v36)
          goto LABEL_39;
        v16 = *(_QWORD *)(v3 + 8 * v17);
        if (!v16)
        {
          v17 = v7 + 4;
          if (v7 + 4 >= v36)
            goto LABEL_39;
          v16 = *(_QWORD *)(v3 + 8 * v17);
          if (!v16)
            break;
        }
      }
    }
LABEL_23:
    v6 = (v16 - 1) & v16;
    v9 = __clz(__rbit64(v16)) + (v17 << 6);
    v7 = v17;
  }
  v18 = v7 + 5;
  if (v7 + 5 >= v36)
  {
LABEL_39:
    sub_227DDF73C();
    return;
  }
  v16 = *(_QWORD *)(v3 + 8 * v18);
  if (v16)
  {
    v17 = v7 + 5;
    goto LABEL_23;
  }
  while (1)
  {
    v17 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v17 >= v36)
      goto LABEL_39;
    v16 = *(_QWORD *)(v3 + 8 * v17);
    ++v18;
    if (v16)
      goto LABEL_23;
  }
LABEL_42:
  __break(1u);
}

uint64_t sub_227DDE94C(int a1, void *aBlock, void *a3)
{
  _QWORD *v3;
  uint64_t v5;
  id v6;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t);

  v3[2] = a3;
  v3[3] = _Block_copy(aBlock);
  v5 = sub_227E600BC();
  v3[4] = v5;
  v9 = (uint64_t (*)(uint64_t))((char *)&dword_2559289B0 + dword_2559289B0);
  v6 = a3;
  v7 = (_QWORD *)swift_task_alloc();
  v3[5] = v7;
  *v7 = v3;
  v7[1] = sub_227DDE9E8;
  return v9(v5);
}

uint64_t sub_227DDE9E8()
{
  void *v0;
  uint64_t *v1;
  void *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void (**v9)(_QWORD, _QWORD, _QWORD);

  v2 = v0;
  v3 = *v1;
  v4 = *(void **)(*v1 + 16);
  v5 = *v1;
  swift_task_dealloc();

  swift_bridgeObjectRelease();
  if (v0)
  {
    v6 = sub_227E5F138();

    v7 = 0;
    v8 = (void *)v6;
  }
  else
  {
    sub_227D68330(&qword_255928A50);
    v7 = sub_227E5FED0();
    swift_bridgeObjectRelease();
    v6 = 0;
    v8 = (void *)v7;
  }
  v9 = *(void (***)(_QWORD, _QWORD, _QWORD))(v3 + 24);
  v9[2](v9, v7, v6);

  _Block_release(v9);
  return (*(uint64_t (**)(void))(v5 + 8))();
}

uint64_t BDSBookWidgetInfoManager.fetch(bookAssets:audiobookAssets:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);

  v7 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_2559289C0 + dword_2559289C0);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_227DDEB44;
  return v7(a1, a2);
}

uint64_t sub_227DDEB44(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;

  v4 = *v2;
  v5 = swift_task_dealloc();
  if (!v1)
    v5 = a1;
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(v5);
}

uint64_t sub_227DDECD0(int a1, int a2, void *aBlock, void *a4)
{
  _QWORD *v4;
  uint64_t v6;
  uint64_t v7;
  id v8;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t);

  v4[2] = a4;
  v4[3] = _Block_copy(aBlock);
  v6 = sub_227E600BC();
  v4[4] = v6;
  v7 = sub_227E600BC();
  v4[5] = v7;
  v11 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_2559289C0 + dword_2559289C0);
  v8 = a4;
  v9 = (_QWORD *)swift_task_alloc();
  v4[6] = v9;
  *v9 = v4;
  v9[1] = sub_227DDED90;
  return v11(v6, v7);
}

uint64_t sub_227DDED90()
{
  void *v0;
  uint64_t *v1;
  void *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void (**v9)(_QWORD, _QWORD, _QWORD);

  v2 = v0;
  v3 = *v1;
  v4 = *(void **)(*v1 + 16);
  v5 = *v1;
  swift_task_dealloc();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v0)
  {
    v6 = sub_227E5F138();

    v7 = 0;
    v8 = (void *)v6;
  }
  else
  {
    sub_227D68330(&qword_255928A50);
    v7 = sub_227E5FED0();
    swift_bridgeObjectRelease();
    v6 = 0;
    v8 = (void *)v7;
  }
  v9 = *(void (***)(_QWORD, _QWORD, _QWORD))(v3 + 24);
  v9[2](v9, v7, v6);

  _Block_release(v9);
  return (*(uint64_t (**)(void))(v5 + 8))();
}

uint64_t sub_227DDEE8C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;

  v1[2] = a1;
  v2 = sub_227E5F348();
  v1[3] = v2;
  v1[4] = *(_QWORD *)(v2 - 8);
  v1[5] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_227DDEEEC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  sub_227E5F354();
  if (qword_255928170 != -1)
    swift_once();
  v1 = sub_227E5F33C();
  sub_227DDF6E4(v1, (uint64_t)qword_255928990);
  *(_QWORD *)(v0 + 48) = sub_227E3C184((uint64_t)&unk_24F08BDF8);
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 56) = v2;
  *v2 = v0;
  v2[1] = sub_227DDEFC8;
  return sub_227E5F324();
}

uint64_t sub_227DDEFC8(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 64) = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (!v1)
    *(_QWORD *)(v4 + 72) = a1;
  return swift_task_switch();
}

uint64_t sub_227DDF044()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *(_QWORD *)(v0 + 32);
  v1 = *(_QWORD *)(v0 + 40);
  v3 = *(_QWORD *)(v0 + 24);
  sub_227DDE4E8(*(_QWORD *)(v0 + 72));
  v5 = v4;
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v5);
}

uint64_t sub_227DDF0BC()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 32) + 8))(*(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 24));
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_227DDF104(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;

  v2[2] = a1;
  v2[3] = a2;
  v3 = sub_227E5F348();
  v2[4] = v3;
  v2[5] = *(_QWORD *)(v3 - 8);
  v2[6] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_227DDF164()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  sub_227E5F354();
  if (qword_255928170 != -1)
    swift_once();
  v1 = sub_227E5F33C();
  sub_227DDF6E4(v1, (uint64_t)qword_255928990);
  *(_QWORD *)(v0 + 56) = sub_227E3C184((uint64_t)&unk_24F08BE38);
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 64) = v2;
  *v2 = v0;
  v2[1] = sub_227DDF250;
  return sub_227E5F318();
}

uint64_t sub_227DDF250(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 72) = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (!v1)
    *(_QWORD *)(v4 + 80) = a1;
  return swift_task_switch();
}

uint64_t sub_227DDF2CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;

  v2 = *(_QWORD *)(v0 + 40);
  v1 = *(_QWORD *)(v0 + 48);
  v3 = *(_QWORD *)(v0 + 32);
  v4 = sub_227E15B78(*(_QWORD *)(v0 + 80));
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  return (*(uint64_t (**)(unint64_t))(v0 + 8))(v4);
}

uint64_t sub_227DDF344()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 40) + 8))(*(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 32));
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_227DDF38C()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 32));
  return swift_deallocObject();
}

uint64_t sub_227DDF3C8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  _QWORD *v6;

  v2 = v0[2];
  v3 = v0[3];
  v5 = (void *)v0[4];
  v4 = (void *)v0[5];
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v6;
  *v6 = v1;
  v6[1] = sub_227DDF744;
  return ((uint64_t (*)(int, int, void *, void *))((char *)&dword_2559289D0 + dword_2559289D0))(v2, v3, v5, v4);
}

uint64_t sub_227DDF444()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int *v4;
  _QWORD *v5;

  v2 = v0[2];
  v3 = v0[3];
  v4 = (int *)v0[4];
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v5;
  *v5 = v1;
  v5[1] = sub_227DDF744;
  return ((uint64_t (*)(uint64_t, uint64_t, int *))((char *)&dword_25592A3E0 + dword_25592A3E0))(v2, v3, v4);
}

uint64_t sub_227DDF4C0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = (int *)v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_227DDF744;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, int *))((char *)&dword_25592A3F0 + dword_25592A3F0))(a1, v4, v5, v6);
}

uint64_t sub_227DDF544()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 24));
  return swift_deallocObject();
}

uint64_t sub_227DDF578()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  _QWORD *v5;

  v2 = v0[2];
  v3 = (void *)v0[3];
  v4 = (void *)v0[4];
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v5;
  *v5 = v1;
  v5[1] = sub_227DDF744;
  return ((uint64_t (*)(int, void *, void *))((char *)&dword_255928A58 + dword_255928A58))(v2, v3, v4);
}

uint64_t sub_227DDF5EC()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_227DDF618(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = (int *)v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_227DDF69C;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, int *))((char *)&dword_25592A3F0 + dword_25592A3F0))(a1, v4, v5, v6);
}

uint64_t sub_227DDF69C()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_227DDF6E4(uint64_t a1, uint64_t a2)
{
  if ((*(_BYTE *)(*(_QWORD *)(a1 - 8) + 82) & 2) != 0)
    return *(_QWORD *)a2;
  return a2;
}

uint64_t *sub_227DDF6FC(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  if ((*(_DWORD *)(*(_QWORD *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t sub_227DDF73C()
{
  return swift_release();
}

void static CRDTModelFileSyncContextStore.groupPersistentContext(_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  id v11;
  id v12;
  __int128 v13;
  _OWORD v14[2];

  v1 = v0;
  v2 = sub_227D68330(&qword_253F391A0);
  MEMORY[0x24BDAC7A8](v2, v3);
  v4 = sub_227E5F1B0();
  v5 = *(_QWORD *)(v4 - 8);
  v7 = MEMORY[0x24BDAC7A8](v4, v6);
  v9 = (char *)v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7, v10);
  v11 = objc_msgSend((id)objc_opt_self(), sel_books);
  v12 = objc_msgSend(v11, sel_containerURL);

  sub_227E5F198();
  sub_227E5F18C();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v9, v4);
  v13 = *(_OWORD *)(v1 + 96);
  v14[0] = *(_OWORD *)(v1 + 80);
  v14[1] = v13;
  type metadata accessor for _CRDTModelContextStore();
}

uint64_t sub_227DDF898()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  uint64_t v7;

  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v0 + 56))(v3, 1, 1, v4);
  v7 = sub_227D57490(v5, v3, v2, v1);
  sub_227D5809C(v3, &qword_253F391A0);
  v6(v5, v4);
  return v7;
}

uint64_t CRDTModelFileSyncContextStore.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t CRDTModelFileSyncContextStore.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t CRDTModelLocalFileContextStore.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t method lookup function for CRDTModelFileSyncContextStore()
{
  return swift_lookUpClassMethod();
}

uint64_t method lookup function for CRDTModelLocalFileContextStore()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_227DDF944()
{
  return swift_deallocClassInstance();
}

uint64_t MutableObservableContainer.__allocating_init(value:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_227D51664(a1);
  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v1 + 264) - 8) + 8))(a1);
  return v3;
}

_QWORD *ObservableTransaction.__allocating_init(name:transactionProvider:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_getObjectType();
  return sub_227DDFF40(a1, a2, a3);
}

uint64_t sub_227DDF9E8()
{
  uint64_t v0;

  return (*(uint64_t (**)(uint64_t))(v0 + 16))(v0);
}

uint64_t ObservationToken.deinit()
{
  uint64_t v0;

  (*(void (**)(uint64_t))(v0 + 16))(v0);
  swift_release();
  return v0;
}

uint64_t sub_227DDFA40(uint64_t a1, uint64_t a2)
{
  sub_227D6F854(a1, a2);
  return swift_unknownObjectRelease();
}

void (*sub_227DDFA64(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[5] = v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 128);
  v3[6] = v4;
  v5 = v1 + v4;
  swift_beginAccess();
  v6 = MEMORY[0x22E2AA96C](v5);
  v7 = *(_QWORD *)(v5 + 8);
  v3[3] = v6;
  v3[4] = v7;
  return sub_227DDFADC;
}

void sub_227DDFADC(uint64_t a1, char a2)
{
  void *v3;

  v3 = *(void **)a1;
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)a1 + 40) + *(_QWORD *)(*(_QWORD *)a1 + 48) + 8) = *(_QWORD *)(*(_QWORD *)a1 + 32);
  swift_unknownObjectWeakAssign();
  if ((a2 & 1) != 0)
  {
    swift_unknownObjectRelease();
    swift_endAccess();
  }
  else
  {
    swift_endAccess();
    swift_unknownObjectRelease();
  }
  free(v3);
}

uint64_t ObservableContainer.__allocating_init(value:)(uint64_t a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  ObservableContainer.init(value:)(a1);
  return v2;
}

uint64_t sub_227DDFB8C(uint64_t a1)
{
  uint64_t v1;
  NSObject *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t result;
  _QWORD v8[6];

  v3 = *(NSObject **)(v1 + 16);
  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = a1;
  *(_QWORD *)(v4 + 24) = v1;
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = sub_227DE001C;
  *(_QWORD *)(v5 + 24) = v4;
  v8[4] = sub_227DE0D94;
  v8[5] = v5;
  v8[0] = MEMORY[0x24BDAC760];
  v8[1] = 1107296256;
  v8[2] = sub_227D62A60;
  v8[3] = &unk_24F08CE20;
  v6 = _Block_copy(v8);
  swift_unknownObjectRetain();
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v3, v6);
  _Block_release(v6);
  LOBYTE(v3) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((v3 & 1) != 0)
    __break(1u);
  return result;
}

uint64_t sub_227DDFCC8(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;

  v2 = *a2;
  swift_beginAccess();
  type metadata accessor for ObservableContainer.Event(255, *(_QWORD *)(v2 + 80), *(_QWORD *)(v2 + 88), v3);
  swift_getFunctionTypeMetadata1();
  sub_227E5FF24();
  sub_227E5FEF4();
  swift_endAccess();
  result = v5;
  if (v5)
    return sub_227D5B660(v5);
  return result;
}

id *ObservableContainer.deinit()
{
  id *v0;
  _QWORD *v1;

  v1 = *v0;

  swift_bridgeObjectRelease();
  (*(void (**)(char *))(*(_QWORD *)(v1[10] - 8) + 8))((char *)v0 + *((_QWORD *)*v0 + 15));
  sub_227DE0034((uint64_t)v0 + *((_QWORD *)*v0 + 16));
  return v0;
}

uint64_t ObservableContainer.__deallocating_deinit()
{
  ObservableContainer.deinit();
  return swift_deallocClassInstance();
}

uint64_t MutableObservableContainer.__deallocating_deinit()
{
  ObservableContainer.deinit();
  return swift_deallocClassInstance();
}

_QWORD *ObservableTransaction.init(name:transactionProvider:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  swift_getObjectType();
  return sub_227D5232C(a1, a2, a3, v3);
}

uint64_t ObservableTransaction.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_bridgeObjectRelease();

  swift_unknownObjectRelease();
  v1 = v0 + OBJC_IVAR____TtC13BookDataStore21ObservableTransaction_logger;
  v2 = sub_227E5F588();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t ObservableTransaction.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_bridgeObjectRelease();

  swift_unknownObjectRelease();
  v1 = v0 + OBJC_IVAR____TtC13BookDataStore21ObservableTransaction_logger;
  v2 = sub_227E5F588();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

_QWORD *sub_227DDFF40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v6;

  type metadata accessor for ObservableTransaction();
  v6 = (_QWORD *)swift_allocObject();
  return sub_227D5232C(a1, a2, a3, v6);
}

uint64_t sub_227DDFF98()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_227DDFFBC()
{
  return swift_deallocObject();
}

uint64_t sub_227DDFFCC()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_227DDFFF0()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_227DE001C()
{
  uint64_t v0;

  return sub_227DDFCC8(*(_QWORD *)(v0 + 16), *(uint64_t **)(v0 + 24));
}

uint64_t sub_227DE0024()
{
  return swift_deallocObject();
}

uint64_t sub_227DE0034(uint64_t a1)
{
  swift_unknownObjectWeakDestroy();
  return a1;
}

uint64_t sub_227DE0058@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_227D5A940();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_227DE0080(uint64_t *a1)
{
  return sub_227D6F854(*a1, a1[1]);
}

uint64_t sub_227DE00AC()
{
  return 16;
}

__n128 sub_227DE00B8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t method lookup function for ObservationToken()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ObservationToken.invalidate()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 96))();
}

uint64_t dispatch thunk of ObservableDelegate.observableCallbacksWillRun(target:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of ObservableDelegate.observableCallbacksDidRun(target:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t method lookup function for ObservableContainer()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ObservableContainer.delegate.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 192))();
}

uint64_t dispatch thunk of ObservableContainer.delegate.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 200))();
}

uint64_t dispatch thunk of ObservableContainer.delegate.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 208))();
}

uint64_t dispatch thunk of ObservableContainer.__allocating_init(value:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 216))();
}

uint64_t dispatch thunk of ObservableContainer.removeObserver(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 256))();
}

uint64_t *sub_227DE0130(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v16;
  unsigned int v17;
  uint64_t v18;
  void (*v19)(uint64_t *, uint64_t *, uint64_t);

  v4 = a1;
  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_DWORD *)(v6 + 80);
  v9 = v8;
  v10 = ~(unint64_t)v8;
  v11 = v7 + v8;
  if (((v7 + v9) & ~v9) + v7 <= v7)
    v12 = *(_QWORD *)(v6 + 64);
  else
    v12 = ((v7 + v8) & ~(unint64_t)v8) + v7;
  v13 = v8 & 0x100000;
  if (v9 > 7 || v13 != 0 || (unint64_t)(v12 + 1) > 0x18)
  {
    v16 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v16 + ((v9 + 16) & v10));
    swift_retain();
  }
  else
  {
    v17 = *((unsigned __int8 *)a2 + v12);
    if (v17 >= 2)
    {
      if (v12 <= 3)
        v18 = v12;
      else
        v18 = 4;
      __asm { BR              X12 }
    }
    v19 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16);
    v19(a1, a2, *(_QWORD *)(a3 + 16));
    if (v17 == 1)
    {
      v19((uint64_t *)(((unint64_t)v4 + v11) & v10), (uint64_t *)(((unint64_t)a2 + v11) & v10), v5);
      *((_BYTE *)v4 + v12) = 1;
    }
    else
    {
      *((_BYTE *)v4 + v12) = 0;
    }
  }
  return v4;
}

uint64_t sub_227DE0280(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t);
  unsigned int v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t, uint64_t);
  char v18;

  if (a1 != a2)
  {
    v5 = *(_QWORD *)(a3 + 16);
    v6 = *(_QWORD *)(v5 - 8);
    v7 = *(_QWORD *)(v6 + 64);
    v8 = *(unsigned __int8 *)(v6 + 80);
    v9 = v7 + v8;
    if (((v7 + v8) & ~v8) + v7 <= v7)
      v10 = *(_QWORD *)(v6 + 64);
    else
      v10 = ((v7 + v8) & ~v8) + v7;
    v11 = *(unsigned __int8 *)(a1 + v10);
    if (v11 >= 2)
    {
      if (v10 <= 3)
        v12 = v10;
      else
        v12 = 4;
      __asm { BR              X12 }
    }
    v13 = ~v8;
    v14 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
    v14(a1, *(_QWORD *)(a3 + 16));
    if (v11 == 1)
      v14((v9 + a1) & v13, v5);
    v15 = *(unsigned __int8 *)(a2 + v10);
    if (v15 >= 2)
    {
      if (v10 <= 3)
        v16 = v10;
      else
        v16 = 4;
      __asm { BR              X11 }
    }
    v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
    v17(a1, a2, v5);
    if (v15 == 1)
    {
      v17((v9 + a1) & v13, (v9 + a2) & v13, v5);
      v18 = 1;
    }
    else
    {
      v18 = 0;
    }
    *(_BYTE *)(a1 + v10) = v18;
  }
  return a1;
}

uint64_t sub_227DE0440(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);
  char v14;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(unsigned __int8 *)(v6 + 80);
  v9 = v7 + v8;
  if (((v7 + v8) & ~v8) + v7 <= v7)
    v10 = *(_QWORD *)(v6 + 64);
  else
    v10 = ((v7 + v8) & ~v8) + v7;
  v11 = *(unsigned __int8 *)(a2 + v10);
  if (v11 >= 2)
  {
    if (v10 <= 3)
      v12 = v10;
    else
      v12 = 4;
    __asm { BR              X12 }
  }
  v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32);
  v13(a1, a2, *(_QWORD *)(a3 + 16));
  if (v11 == 1)
  {
    v13((v9 + a1) & ~v8, (v9 + a2) & ~v8, v5);
    v14 = 1;
  }
  else
  {
    v14 = 0;
  }
  *(_BYTE *)(a1 + v10) = v14;
  return a1;
}

uint64_t sub_227DE0558(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t);
  unsigned int v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t, uint64_t);
  char v18;

  if (a1 != a2)
  {
    v5 = *(_QWORD *)(a3 + 16);
    v6 = *(_QWORD *)(v5 - 8);
    v7 = *(_QWORD *)(v6 + 64);
    v8 = *(unsigned __int8 *)(v6 + 80);
    v9 = v7 + v8;
    if (((v7 + v8) & ~v8) + v7 <= v7)
      v10 = *(_QWORD *)(v6 + 64);
    else
      v10 = ((v7 + v8) & ~v8) + v7;
    v11 = *(unsigned __int8 *)(a1 + v10);
    if (v11 >= 2)
    {
      if (v10 <= 3)
        v12 = v10;
      else
        v12 = 4;
      __asm { BR              X12 }
    }
    v13 = ~v8;
    v14 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
    v14(a1, *(_QWORD *)(a3 + 16));
    if (v11 == 1)
      v14((v9 + a1) & v13, v5);
    v15 = *(unsigned __int8 *)(a2 + v10);
    if (v15 >= 2)
    {
      if (v10 <= 3)
        v16 = v10;
      else
        v16 = 4;
      __asm { BR              X11 }
    }
    v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32);
    v17(a1, a2, v5);
    if (v15 == 1)
    {
      v17((v9 + a1) & v13, (v9 + a2) & v13, v5);
      v18 = 1;
    }
    else
    {
      v18 = 0;
    }
    *(_BYTE *)(a1 + v10) = v18;
  }
  return a1;
}

uint64_t sub_227DE0718(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  char v7;
  int v8;
  unsigned int v10;
  int v11;
  unsigned int v12;

  v3 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v4 = *(_QWORD *)(v3 + 64);
  v5 = ((v4 + *(unsigned __int8 *)(v3 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)) + v4;
  if (v5 > v4)
    v4 = v5;
  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_21;
  v6 = v4 + 1;
  v7 = 8 * (v4 + 1);
  if ((v4 + 1) <= 3)
  {
    v10 = ((a2 + ~(-1 << v7) - 254) >> v7) + 1;
    if (HIWORD(v10))
    {
      v8 = *(_DWORD *)(a1 + v6);
      if (!v8)
        goto LABEL_21;
      goto LABEL_14;
    }
    if (v10 > 0xFF)
    {
      v8 = *(unsigned __int16 *)(a1 + v6);
      if (!*(_WORD *)(a1 + v6))
        goto LABEL_21;
      goto LABEL_14;
    }
    if (v10 < 2)
    {
LABEL_21:
      v12 = *(unsigned __int8 *)(a1 + v4);
      if (v12 >= 2)
        return (v12 ^ 0xFF) + 1;
      else
        return 0;
    }
  }
  v8 = *(unsigned __int8 *)(a1 + v6);
  if (!*(_BYTE *)(a1 + v6))
    goto LABEL_21;
LABEL_14:
  v11 = (v8 - 1) << v7;
  if (v6 > 3)
    v11 = 0;
  if (!(_DWORD)v6)
    return (v11 + 255);
  if (v6 > 3)
    LODWORD(v6) = 4;
  return ((uint64_t (*)(void))((char *)&loc_227DE07E8 + 4 * byte_227E6F2A8[(v6 - 1)]))();
}

void sub_227DE0834(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  size_t v8;
  unsigned int v9;
  unsigned int v10;
  unsigned int v11;
  int v12;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = ((v6 + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)) + v6;
  if (v7 <= v6)
    v7 = v6;
  v8 = v7 + 1;
  if (a3 < 0xFF)
  {
    v9 = 0;
  }
  else if (v8 <= 3)
  {
    v11 = ((a3 + ~(-1 << (8 * v8)) - 254) >> (8 * v8)) + 1;
    if (HIWORD(v11))
    {
      v9 = 4u;
    }
    else if (v11 >= 0x100)
    {
      v9 = 2;
    }
    else
    {
      v9 = v11 > 1;
    }
  }
  else
  {
    v9 = 1u;
  }
  if (a2 <= 0xFE)
    __asm { BR              X11 }
  v10 = a2 - 255;
  if (v8 < 4)
  {
    if ((_DWORD)v7 != -1)
    {
      v12 = v10 & ~(-1 << (8 * v8));
      bzero(a1, v8);
      if ((_DWORD)v8 == 3)
      {
        *a1 = v12;
        *((_BYTE *)a1 + 2) = BYTE2(v12);
      }
      else if ((_DWORD)v8 == 2)
      {
        *a1 = v12;
      }
      else
      {
        *(_BYTE *)a1 = v12;
      }
    }
  }
  else
  {
    bzero(a1, v7 + 1);
    *(_DWORD *)a1 = v10;
  }
  __asm { BR              X10 }
}

void sub_227DE09E8(_BYTE *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  size_t v5;
  size_t v6;
  size_t v7;
  unsigned int v8;
  unsigned int v9;
  int v10;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_QWORD *)(v4 + 64);
  v6 = ((v5 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80)) + v5;
  if (a2 > 1)
  {
    if (v6 <= v5)
      v7 = v5;
    else
      v7 = v6;
    v8 = a2 - 2;
    if (v7 < 4)
    {
      v9 = v8 >> (8 * v7);
      v10 = v8 & ~(-1 << (8 * v7));
      a1[v7] = v9 + 2;
      bzero(a1, v7);
      if ((_DWORD)v7 == 3)
      {
        *(_WORD *)a1 = v10;
        a1[2] = BYTE2(v10);
      }
      else if ((_DWORD)v7 == 2)
      {
        *(_WORD *)a1 = v10;
      }
      else
      {
        *a1 = v10;
      }
    }
    else
    {
      a1[v7] = 2;
      bzero(a1, v7);
      *(_DWORD *)a1 = v8;
    }
  }
  else
  {
    if (v6 > v5)
      v5 = v6;
    a1[v5] = a2;
  }
}

uint64_t sub_227DE0AC4()
{
  return type metadata accessor for ObservableTransaction();
}

uint64_t method lookup function for ObservableTransaction()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ObservableTransaction.__allocating_init(name:transactionProvider:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t dispatch thunk of ObservableTransaction.observableCallbacksWillRun(target:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t dispatch thunk of ObservableTransaction.observableCallbacksDidRun(target:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t sub_227DE0AFC()
{
  return swift_deallocObject();
}

uint64_t sub_227DE0B10()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_227DE0B3C()
{
  return swift_deallocObject();
}

uint64_t sub_227DE0B4C()
{
  swift_release();
  swift_release();
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_227DE0B80()
{
  return swift_deallocObject();
}

uint64_t sub_227DE0B90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int EnumCaseMultiPayload;
  void (*v9)(unint64_t, uint64_t);
  uint64_t TupleTypeMetadata2;

  v5 = *(_QWORD *)(v4 + 16);
  v6 = *(_QWORD *)(type metadata accessor for ObservableContainer.Event(0, v5, *(_QWORD *)(v4 + 24), a4) - 8);
  v7 = (*(unsigned __int8 *)(v6 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  swift_release();
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v9 = *(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
  v9(v4 + v7, v5);
  if (EnumCaseMultiPayload == 1)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    v9(v4 + v7 + *(int *)(TupleTypeMetadata2 + 48), v5);
  }
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_227DE0C74()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_227DE0C98()
{
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_227DE0CCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int EnumCaseMultiPayload;
  void (*v9)(uint64_t, uint64_t);
  uint64_t TupleTypeMetadata2;

  v5 = *(_QWORD *)(v4 + 16);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ObservableContainer.Event(0, v5, *(_QWORD *)(v4 + 24), a4)- 8)+ 80);
  swift_release();
  v7 = v4 + ((v6 + 48) & ~v6);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v9 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
  v9(v7, v5);
  if (EnumCaseMultiPayload == 1)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    v9(v7 + *(int *)(TupleTypeMetadata2 + 48), v5);
  }
  return swift_deallocObject();
}

uint64_t CRDTModelFileSyncInfo.additionalFields.getter(uint64_t a1)
{
  sub_227D5F300(a1);
  return swift_bridgeObjectRetain();
}

uint64_t CRDTModelFileSyncInfo.additionalFields.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t result;

  v4 = *(int *)(a2 + 52);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + v4) = a1;
  return result;
}

void CRDTModelFileSyncInfo.init(model:)()
{
  sub_227E5FC60();
  type metadata accessor for CRDTModelFileSyncInfo();
}

uint64_t sub_227DE0E70(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v3 + *(int *)(a1 + 52)) = MEMORY[0x24BEE4B00];
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 40))(v3, v2, v1);
}

uint64_t sub_227DE0EB4(uint64_t a1)
{
  MEMORY[0x22E2AA7D4](&protocol conformance descriptor for CRDTModelFileSyncInfo<A>, a1);
  return sub_227E5FD74();
}

uint64_t sub_227DE0EE8()
{
  MEMORY[0x22E2AA7D4](&protocol conformance descriptor for CRDTModelFileSyncInfo<A>);
  return sub_227E5F9E4();
}

uint64_t sub_227DE0F30()
{
  MEMORY[0x22E2AA7D4](&protocol conformance descriptor for CRDTModelFileSyncInfo<A>);
  return sub_227E5FA14();
}

uint64_t sub_227DE0F70()
{
  MEMORY[0x22E2AA7D4](&protocol conformance descriptor for CRDTModelFileSyncInfo<A>);
  return sub_227E5FA5C();
}

uint64_t sub_227DE0FB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x22E2AA7D4](&protocol conformance descriptor for CRDTModelFileSyncInfo<A>, a3);
  return sub_227E5FA20();
}

uint64_t sub_227DE100C()
{
  MEMORY[0x22E2AA7D4](&protocol conformance descriptor for CRDTModelFileSyncInfo<A>);
  return sub_227E5FA50();
}

uint64_t sub_227DE104C()
{
  MEMORY[0x22E2AA7D4](&protocol conformance descriptor for CRDTModelFileSyncInfo<A>);
  return sub_227E5FA2C();
}

uint64_t sub_227DE108C()
{
  MEMORY[0x22E2AA7D4](&protocol conformance descriptor for CRDTModelFileSyncInfo<A>);
  return sub_227E5F9FC();
}

uint64_t sub_227DE10D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x22E2AA7D4](&protocol conformance descriptor for CRDTModelFileSyncInfo<A>, a3);
  return sub_227E5F9D8();
}

uint64_t sub_227DE1130()
{
  MEMORY[0x22E2AA7D4](&protocol conformance descriptor for CRDTModelFileSyncInfo<A>);
  return sub_227E5F9C0();
}

uint64_t sub_227DE1174(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x22E2AA7D4](&protocol conformance descriptor for CRDTModelFileSyncInfo<A>, a3);
  return sub_227E5FD2C();
}

uint64_t sub_227DE11CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x22E2AA7D4](&protocol conformance descriptor for CRDTModelFileSyncInfo<A>, a3);
  return sub_227E5FD38();
}

uint64_t sub_227DE1234(uint64_t a1)
{
  MEMORY[0x22E2AA7D4](&protocol conformance descriptor for CRDTModelFileSyncInfo<A>, a1);
  return sub_227E5F9CC();
}

uint64_t CRDTModelFileSyncInfo.description.getter()
{
  return sub_227E60674();
}

id CRDTModelFileSyncManager.DefaultConfig.crdtContext.getter()
{
  return (id)sub_227D6D17C();
}

void CRDTModelFileSyncManager.DefaultConfig.crdtContext.setter(void *a1)
{
  id *v1;

  *v1 = a1;
}

uint64_t (*CRDTModelFileSyncManager.DefaultConfig.crdtContext.modify())()
{
  return nullsub_1;
}

uint64_t CRDTModelFileSyncManager.DefaultConfig.init(crdtContext:)@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

BOOL static CRDTModelFileSyncManager.SyncError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t CRDTModelFileSyncManager.SyncError.hash(into:)()
{
  return sub_227E60728();
}

uint64_t CRDTModelFileSyncManager.SyncError.hashValue.getter()
{
  sub_227E6071C();
  sub_227E60728();
  return sub_227E60734();
}

uint64_t sub_227DE1378()
{
  sub_227E6071C();
  CRDTModelFileSyncManager.SyncError.hash(into:)();
  return sub_227E60734();
}

uint64_t CRDTModelFileSyncManager.delegate.getter()
{
  uint64_t v0;

  swift_beginAccess();
  return MEMORY[0x22E2AA96C](v0 + 16);
}

void (*CRDTModelFileSyncManager.delegate.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[5] = v1;
  swift_beginAccess();
  v4 = MEMORY[0x22E2AA96C](v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v3[3] = v4;
  v3[4] = v5;
  return sub_227DE1460;
}

void sub_227DE1460(uint64_t a1, char a2)
{
  void *v3;

  v3 = *(void **)a1;
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)a1 + 40) + 24) = *(_QWORD *)(*(_QWORD *)a1 + 32);
  swift_unknownObjectWeakAssign();
  if ((a2 & 1) != 0)
  {
    swift_unknownObjectRelease();
    swift_endAccess();
  }
  else
  {
    swift_endAccess();
    swift_unknownObjectRelease();
  }
  free(v3);
}

uint64_t CRDTModelFileSyncManager.model.getter()
{
  return sub_227E602CC();
}

uint64_t sub_227DE1518@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;

  v3 = *(_QWORD *)(*(_QWORD *)a1 + 80);
  v4 = type metadata accessor for ModelState(0, v3, *(_QWORD *)(*(_QWORD *)a1 + 96), *(_QWORD *)(*(_QWORD *)a1 + 104));
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v6);
  v8 = (char *)&v10 - v7;
  swift_retain();
  MutableObservableContainer.value.getter();
  swift_release();
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a2, v8, v3);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
}

uint64_t CRDTModelFileSyncManager.modelSyncVersion.getter()
{
  type metadata accessor for CRDTModelSyncVersion();
  return sub_227E602CC();
}

uint64_t sub_227DE163C()
{
  type metadata accessor for CRDTModelSyncVersion();
  swift_retain();
  sub_227E602CC();
  return swift_release();
}

uint64_t CRDTModelFileSyncManager.modelSyncVersionObservable.getter()
{
  uint64_t v1;

  sub_227D68330(&qword_253F3AC50);
  sub_227E602CC();
  return v1;
}

uint64_t CRDTModelFileSyncManager.disableReadingInBackground.getter()
{
  return sub_227DFE900() & 1;
}

uint64_t (*CRDTModelFileSyncManager.disableReadingInBackground.modify(uint64_t a1))(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)a1 = v1;
  *(_BYTE *)(a1 + 8) = sub_227DFE900() & 1;
  return sub_227DE1768;
}

uint64_t sub_227DE1768(uint64_t a1)
{
  return sub_227D6BEB4(*(_BYTE *)(a1 + 8));
}

uint64_t CRDTModelFileSyncManager.enableCloudSync.getter()
{
  uint64_t v0;

  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 80);
}

uint64_t CRDTModelFileSyncManager.enableCloudSync.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_beginAccess();
  *(_BYTE *)(v1 + 80) = a1;
  return result;
}

uint64_t (*CRDTModelFileSyncManager.enableCloudSync.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

id CRDTModelFileSyncManager.crdtContext.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 96);
}

void CRDTModelFileSyncManager.__allocating_init(config:transactionProvider:delegate:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_227DE185C(a1, a2, a3, a4, (void (*)(void))sub_227DE1E98);
}

void CRDTModelFileSyncManager.init(config:transactionProvider:delegate:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_227DE185C(a1, a2, a3, a4, (void (*)(void))sub_227D52DF4);
}

void sub_227DE185C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void))
{
  a5();
  JUMPOUT(0x227DE1878);
}

uint64_t CRDTModelFileSyncManager.sync(_:)(uint64_t a1)
{
  return CRDTModelFileSyncManager.sync(_:isRemote:)(a1, 0);
}

uint64_t CRDTModelFileSyncManager.sync(_:isRemote:)(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  _BYTE v11[16];
  uint64_t v12;
  uint64_t v13;
  char v14;

  v5 = sub_227E5F948();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  v9 = &v11[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_227E5F93C();
  v12 = v2;
  v13 = a1;
  v14 = a2;
  sub_227E602C0();
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v9, v5);
}

uint64_t sub_227DE1988(_QWORD *a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t *, _QWORD);
  uint64_t v4;

  v1 = *(_QWORD *)(*a1 + *MEMORY[0x24BE18888]);
  MEMORY[0x22E2AA7D4](&protocol conformance descriptor for CRDTModelFileSyncInfo<A>, v1);
  v2 = (uint64_t (*)(uint64_t *, _QWORD))sub_227E5FD98();
  MEMORY[0x22E2AA7D4](&protocol conformance descriptor for CRDTModelFileSyncInfo<A>, v1);
  sub_227E5FA38();
  return v2(&v4, 0);
}

uint64_t sub_227DE1A2C(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;

  v3 = sub_227E5F570();
  v4 = sub_227E60248();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v5 = 0;
    _os_log_impl(&dword_227D4F000, v3, v4, "CRDTModelFileSyncManager q_sync: finished", v5, 2u);
    MEMORY[0x22E2AA8AC](v5, -1, -1);
  }

  v6 = sub_227DE1AE8();
  return a2(v6);
}

uint64_t sub_227DE1AE8()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t ObjectType;
  _QWORD v16[2];
  uint64_t v17[4];

  v1 = *v0;
  v2 = type metadata accessor for CRDTModelSyncVersion();
  MEMORY[0x24BDAC7A8](v2, v3);
  v5 = (char *)v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_227E5F570();
  v7 = sub_227E60248();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc();
    v9 = swift_slowAlloc();
    v16[0] = v2;
    v10 = v9;
    *(_DWORD *)v8 = 136315138;
    v17[0] = v9;
    v11 = (*(uint64_t (**)(_QWORD))(*(_QWORD *)(v1 + 88) + 8))(*(_QWORD *)(v1 + 80));
    v16[1] = sub_227D634E0(v11, v12, v17);
    sub_227E603B0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_227D4F000, v6, v7, "CRDTModelFileSyncManager: Model did sync %s", v8, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x22E2AA8AC](v10, -1, -1);
    MEMORY[0x22E2AA8AC](v8, -1, -1);
  }

  swift_beginAccess();
  result = MEMORY[0x22E2AA96C](v0 + 2);
  if (result)
  {
    v14 = v0[3];
    ObjectType = swift_getObjectType();
    sub_227E602CC();
    (*(void (**)(char *, uint64_t, uint64_t))(v14 + 8))(v5, ObjectType, v14);
    swift_unknownObjectRelease();
    return sub_227D64888((uint64_t)v5);
  }
  return result;
}

Swift::Void __swiftcall CRDTModelFileSyncManager.suspend()()
{
  sub_227DFE978();
}

Swift::Void __swiftcall CRDTModelFileSyncManager.resume()()
{
  sub_227DFEB40();
}

void CRDTModelFileSyncManager.deinit()
{
  uint64_t v0;

  sub_227DE0034(v0 + 16);
  swift_release();
  swift_release();

  swift_release();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  type metadata accessor for CRDTModelFileSyncInfo();
}

uint64_t sub_227DE1DB0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  MEMORY[0x22E2AA7D4](&protocol conformance descriptor for CRDTModelFileSyncInfo<A>, a1);
  v3 = sub_227E5FDE0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v1, v3);
  v4 = v2 + *(_QWORD *)(*(_QWORD *)v2 + 200);
  v5 = sub_227E5F588();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  return v2;
}

void CRDTModelFileSyncManager.__deallocating_deinit()
{
  CRDTModelFileSyncManager.deinit();
}

uint64_t sub_227DE1E34()
{
  return swift_deallocClassInstance();
}

uint64_t sub_227DE1E4C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_227DE1518(v1, a1);
}

uint64_t sub_227DE1E64()
{
  return sub_227DE163C();
}

uint64_t sub_227DE1E7C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 40);
  return swift_retain();
}

void sub_227DE1E98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_allocObject();
  sub_227D52DF4(a1, a2, a3, a4);
}

void sub_227DE1EF8()
{
  uint64_t v0;

  sub_227D53E80(*(_QWORD *)(v0 + 24), *(unsigned __int8 *)(v0 + 32), (uint64_t)nullsub_1, 0);
}

void sub_227DE1F2C()
{
  JUMPOUT(0x22E2AA7D4);
}

void sub_227DE1F3C()
{
  JUMPOUT(0x22E2AA7D4);
}

uint64_t sub_227DE1F4C@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;

  v3 = *a1;
  v4 = *a1 + 16;
  swift_beginAccess();
  result = MEMORY[0x22E2AA96C](v4);
  v6 = *(_QWORD *)(v3 + 24);
  *a2 = result;
  a2[1] = v6;
  return result;
}

uint64_t sub_227DE1FA4(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *a2;
  swift_beginAccess();
  *(_QWORD *)(v3 + 24) = v2;
  return swift_unknownObjectWeakAssign();
}

uint64_t sub_227DE1FFC()
{
  return 32;
}

__n128 sub_227DE2008(uint64_t a1, _OWORD *a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a1;
  v3 = *(_OWORD *)(a1 + 16);
  *a2 = *(_OWORD *)a1;
  a2[1] = v3;
  return result;
}

uint64_t sub_227DE2014@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = CRDTModelFileSyncManager.disableReadingInBackground.getter();
  *a1 = result & 1;
  return result;
}

uint64_t sub_227DE2040(char *a1)
{
  return CRDTModelFileSyncManager.disableReadingInBackground.setter(*a1);
}

uint64_t sub_227DE2064()
{
  return 32;
}

__n128 sub_227DE2070(uint64_t a1, _OWORD *a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a1;
  v3 = *(_OWORD *)(a1 + 16);
  *a2 = *(_OWORD *)a1;
  a2[1] = v3;
  return result;
}

uint64_t sub_227DE207C@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  result = swift_beginAccess();
  *a2 = *(_BYTE *)(v3 + 80);
  return result;
}

uint64_t sub_227DE20C0(char *a1)
{
  return CRDTModelFileSyncManager.enableCloudSync.setter(*a1);
}

uint64_t sub_227DE20E4()
{
  return 32;
}

__n128 sub_227DE20F0(uint64_t a1, _OWORD *a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a1;
  v3 = *(_OWORD *)(a1 + 16);
  *a2 = *(_OWORD *)a1;
  a2[1] = v3;
  return result;
}

uint64_t dispatch thunk of static CRDTModelNameSupport.modelName.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of CRDTModelFileSyncManagerDelegate.modelDidSave(syncVersion:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of CRDTModelFileSyncManagerConfig.crdtContext.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of CRDTModelFileSyncManagerConfig.storeDirectory.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t *sub_227DE211C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v9;

  v4 = a1;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 8 > 0x18)
  {
    v9 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    *(_QWORD *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFF8);
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_227DE21D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 24))();
  *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a1) & 0xFFFFFFFFFFFFFFF8) = *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a2) & 0xFFFFFFFFFFFFF8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_227DE223C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 32))();
  *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a1) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a2) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_227DE2298(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 40))();
  *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a1) & 0xFFFFFFFFFFFFFFF8) = *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a2) & 0xFFFFFFFFFFFFF8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t method lookup function for CRDTModelFileSyncManager()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of CRDTModelFileSyncManager.__allocating_init(config:transactionProvider:delegate:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 208))();
}

uint64_t sub_227DE2310(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_227DE235C + 4 * byte_227E6F484[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_227DE2390 + 4 * byte_227E6F47F[v4]))();
}

uint64_t sub_227DE2390(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_227DE2398(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x227DE23A0);
  return result;
}

uint64_t sub_227DE23AC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x227DE23B4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_227DE23B8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_227DE23C0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_227DE23CC(_QWORD *a1)
{
  return sub_227DE1988(a1);
}

uint64_t sub_227DE23E4()
{
  uint64_t v0;

  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_227DE2418()
{
  uint64_t v0;

  return sub_227DE1A2C(*(_QWORD *)(v0 + 16), *(uint64_t (**)(uint64_t))(v0 + 24));
}

uint64_t sub_227DE2424()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_227DE2448()
{
  return swift_deallocObject();
}

uint64_t sub_227DE2458()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_227DE24E0()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_227DE2504()
{
  swift_release();
  return swift_deallocObject();
}

unint64_t sub_227DE2528()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255928A90;
  if (!qword_255928A90)
  {
    v1 = sub_227E5F1B0();
    result = MEMORY[0x22E2AA7D4](MEMORY[0x24BDCDB28], v1);
    atomic_store(result, (unint64_t *)&qword_255928A90);
  }
  return result;
}

uint64_t sub_227DE2570()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_227DE2594@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_227DE741C(v1, a1);
}

uint64_t sub_227DE25B8(_QWORD *a1)
{
  return sub_227DE23CC(a1);
}

uint64_t sub_227DE25CC(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  _BYTE v9[16];

  v3 = sub_227D68330(&qword_255928C38);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3, v5);
  v7 = &v9[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_227D572A4(a1, a1[3]);
  sub_227DE3974();
  sub_227E6074C();
  v9[15] = 0;
  sub_227E6062C();
  if (!v1)
  {
    type metadata accessor for BDSSyncEngineStateMetadata();
    v9[14] = 1;
    sub_227E5F8D0();
    sub_227D51624(&qword_255928C40, (uint64_t (*)(uint64_t))MEMORY[0x24BDB8AF0], MEMORY[0x24BDB8B00]);
    sub_227E60620();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v7, v3);
}

uint64_t sub_227DE2720@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  char v28;

  v23 = a2;
  v3 = sub_227D68330((uint64_t *)&unk_2559294F0);
  MEMORY[0x24BDAC7A8](v3, v4);
  v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = sub_227D68330(&qword_255928C20);
  v7 = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24, v8);
  v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for BDSSyncEngineStateMetadata();
  v13 = MEMORY[0x24BDAC7A8](v11, v12);
  v15 = (uint64_t *)((char *)&v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v16 = (uint64_t)v15 + *(int *)(v13 + 20);
  v17 = sub_227E5F8D0();
  v18 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56);
  v26 = v16;
  v18(v16, 1, 1, v17);
  sub_227D572A4(a1, a1[3]);
  sub_227DE3974();
  v19 = v25;
  sub_227E60740();
  if (v19)
  {
    sub_227D58120((uint64_t)a1);
    return sub_227D5809C(v26, (uint64_t *)&unk_2559294F0);
  }
  else
  {
    v28 = 0;
    v20 = v24;
    *v15 = sub_227E605D8();
    v15[1] = v21;
    v27 = 1;
    sub_227D51624(&qword_255928C30, (uint64_t (*)(uint64_t))MEMORY[0x24BDB8AF0], MEMORY[0x24BDB8B08]);
    sub_227E605CC();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v20);
    sub_227DE39B8((uint64_t)v6, v26);
    sub_227DE3A00((uint64_t)v15, v23);
    sub_227D58120((uint64_t)a1);
    return sub_227DE3A44((uint64_t)v15);
  }
}

uint64_t sub_227DE2980()
{
  _BYTE *v0;

  if (*v0)
    return 0x6574617473;
  else
    return 1701667182;
}

uint64_t sub_227DE29B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_227DE3C24(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_227DE29D4()
{
  sub_227DE3974();
  return sub_227E60758();
}

uint64_t sub_227DE29FC()
{
  sub_227DE3974();
  return sub_227E60764();
}

uint64_t sub_227DE2A24@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_227DE2720(a1, a2);
}

uint64_t sub_227DE2A38(_QWORD *a1)
{
  return sub_227DE25CC(a1);
}

uint64_t sub_227DE2A4C()
{
  uint64_t v0;

  v0 = sub_227E5F588();
  sub_227DDF6FC(v0, qword_255928AA0);
  sub_227DDF6E4(v0, (uint64_t)qword_255928AA0);
  return sub_227E5F57C();
}

uint64_t sub_227DE2AC8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  id v12;
  id v13;
  void *v14;
  void *v15;
  unsigned int v16;
  id v17;
  id v18;
  void *v19;
  uint64_t v21;
  id v22;
  char v23;
  uint64_t v24;

  v24 = *MEMORY[0x24BDAC8D0];
  v2 = sub_227E5F1B0();
  v3 = *(_QWORD *)(v2 - 8);
  v5 = MEMORY[0x24BDAC7A8](v2, v4);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5, v8);
  v10 = (char *)&v21 - v9;
  v11 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  v12 = objc_msgSend((id)objc_opt_self(), sel_books);
  v13 = objc_msgSend(v12, sel_containerURL);

  sub_227E5F198();
  sub_227E5F180();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v7, v2);
  v23 = 1;
  sub_227E5F1A4();
  v14 = (void *)sub_227E5FF78();
  swift_bridgeObjectRelease();
  LOBYTE(v7) = objc_msgSend(v11, sel_fileExistsAtPath_isDirectory_, v14, &v23);

  if ((v7 & 1) == 0)
  {
    v15 = (void *)sub_227E5F174();
    v22 = 0;
    v16 = objc_msgSend(v11, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v15, 1, 0, &v22);

    if (!v16)
    {
      v18 = v22;
      v19 = (void *)sub_227E5F144();

      swift_willThrow();
      goto LABEL_6;
    }
    v17 = v22;
  }

LABEL_6:
  (*(void (**)(uint64_t, char *, uint64_t))(v3 + 32))(a1, v10, v2);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v3 + 56))(a1, 0, 1, v2);
}

uint64_t sub_227DE2D18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  id v21;
  void *v22;
  unsigned int v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  uint64_t v28;
  unint64_t v29;
  void (*v30)(char *, uint64_t);
  uint8_t *v31;
  void *v32;
  void (*v33)(char *, uint64_t);
  void *v34;
  unsigned int v35;
  id v36;
  uint64_t v37;
  id v39;
  _QWORD v40[2];
  uint8_t *v41;
  void *v42;
  uint64_t v43;
  id v44[2];

  v44[1] = *(id *)MEMORY[0x24BDAC8D0];
  v0 = sub_227D68330(&qword_253F391A0);
  MEMORY[0x24BDAC7A8](v0, v1);
  v3 = (char *)v40 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_227E5F1B0();
  v5 = *(_QWORD *)(v4 - 8);
  v7 = MEMORY[0x24BDAC7A8](v4, v6);
  v9 = (char *)v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v7, v10);
  v13 = (char *)v40 - v12;
  MEMORY[0x24BDAC7A8](v11, v14);
  v16 = (char *)v40 - v15;
  sub_227DE2AC8((uint64_t)v3);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {
    sub_227D5809C((uint64_t)v3, &qword_253F391A0);
    if (qword_255928178 != -1)
      swift_once();
    v17 = sub_227E5F588();
    sub_227DDF6E4(v17, (uint64_t)qword_255928AA0);
    v18 = sub_227E5F570();
    v19 = sub_227E60230();
    if (os_log_type_enabled(v18, v19))
    {
      v20 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v20 = 0;
      _os_log_impl(&dword_227D4F000, v18, v19, "Could not get metadata. No BaseURL", v20, 2u);
      MEMORY[0x22E2AA8AC](v20, -1, -1);
    }

  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v16, v3, v4);
    v21 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
    sub_227E5F18C();
    sub_227E5F1A4();
    v22 = (void *)sub_227E5FF78();
    swift_bridgeObjectRelease();
    v23 = objc_msgSend(v21, sel_fileExistsAtPath_, v22);

    if (v23)
    {
      if (qword_255928178 != -1)
        swift_once();
      v24 = sub_227E5F588();
      sub_227DDF6E4(v24, (uint64_t)qword_255928AA0);
      (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v9, v13, v4);
      v25 = sub_227E5F570();
      v26 = sub_227E60248();
      if (os_log_type_enabled(v25, v26))
      {
        v27 = (uint8_t *)swift_slowAlloc();
        v42 = (void *)swift_slowAlloc();
        v44[0] = v42;
        v41 = v27;
        *(_DWORD *)v27 = 136315138;
        v40[1] = v27 + 4;
        sub_227D51624((unint64_t *)&qword_255928A90, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB28]);
        v28 = sub_227E60674();
        v43 = sub_227D634E0(v28, v29, (uint64_t *)v44);
        sub_227E603B0();
        swift_bridgeObjectRelease();
        v30 = *(void (**)(char *, uint64_t))(v5 + 8);
        v30(v9, v4);
        v31 = v41;
        _os_log_impl(&dword_227D4F000, v25, v26, "Removing sync engine metadata at: %s", v41, 0xCu);
        v32 = v42;
        swift_arrayDestroy();
        MEMORY[0x22E2AA8AC](v32, -1, -1);
        MEMORY[0x22E2AA8AC](v31, -1, -1);
      }
      else
      {
        v30 = *(void (**)(char *, uint64_t))(v5 + 8);
        v30(v9, v4);
      }

      v34 = (void *)sub_227E5F174();
      v44[0] = 0;
      v35 = objc_msgSend(v21, sel_removeItemAtURL_error_, v34, v44);

      if (!v35)
      {
        v39 = v44[0];
        v37 = sub_227E5F144();

        swift_willThrow();
        v30(v13, v4);
        v30(v16, v4);
        return v37;
      }
      v36 = v44[0];

      v30(v13, v4);
      v30(v16, v4);
    }
    else
    {

      v33 = *(void (**)(char *, uint64_t))(v5 + 8);
      v33(v13, v4);
      v33(v16, v4);
    }
  }
  return 0;
}

uint64_t type metadata accessor for BDSSyncEngineMetadataStore()
{
  return objc_opt_self();
}

uint64_t *sub_227DE3224(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(char *, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v13 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v13 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    v6 = *(int *)(a3 + 20);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = sub_227E5F8D0();
    v10 = *(_QWORD *)(v9 - 8);
    v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
    swift_bridgeObjectRetain();
    if (v11(v8, 1, v9))
    {
      v12 = sub_227D68330((uint64_t *)&unk_2559294F0);
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
    }
  }
  return v3;
}

uint64_t sub_227DE331C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_227E5F8D0();
  v6 = *(_QWORD *)(v5 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  return result;
}

_QWORD *sub_227DE3398(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int (*v10)(char *, uint64_t, uint64_t);
  uint64_t v11;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = *(int *)(a3 + 20);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_227E5F8D0();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
  swift_bridgeObjectRetain();
  if (v10(v7, 1, v8))
  {
    v11 = sub_227D68330((uint64_t *)&unk_2559294F0);
    memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v6, v7, v8);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
  }
  return a1;
}

_QWORD *sub_227DE3464(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_227E5F8D0();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v14 = sub_227D68330((uint64_t *)&unk_2559294F0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  return a1;
}

_OWORD *sub_227DE358C(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_227E5F8D0();
  v8 = *(_QWORD *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    v9 = sub_227D68330((uint64_t *)&unk_2559294F0);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v5, v6, v7);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

_QWORD *sub_227DE3648(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(char *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_227E5F8D0();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v8, v9, v10);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    v15 = sub_227D68330((uint64_t *)&unk_2559294F0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  return a1;
}

uint64_t sub_227DE3760()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_227DE376C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_227D68330((uint64_t *)&unk_2559294F0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t sub_227DE37EC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_227DE37F8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_227D68330((uint64_t *)&unk_2559294F0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for BDSSyncEngineStateMetadata()
{
  uint64_t result;

  result = qword_255928BE0;
  if (!qword_255928BE0)
    return swift_getSingletonMetadata();
  return result;
}

void sub_227DE38AC()
{
  unint64_t v0;

  sub_227DE3920();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void sub_227DE3920()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255928BF0)
  {
    sub_227E5F8D0();
    v0 = sub_227E6038C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255928BF0);
  }
}

unint64_t sub_227DE3974()
{
  unint64_t result;

  result = qword_255928C28;
  if (!qword_255928C28)
  {
    result = MEMORY[0x22E2AA7D4](&unk_227E6FB2C, &type metadata for BDSSyncEngineStateMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255928C28);
  }
  return result;
}

uint64_t sub_227DE39B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_227D68330((uint64_t *)&unk_2559294F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_227DE3A00(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for BDSSyncEngineStateMetadata();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_227DE3A44(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for BDSSyncEngineStateMetadata();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t storeEnumTagSinglePayload for BDSSyncEngineStateMetadata.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_227DE3ACC + 4 * byte_227E6F9B5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_227DE3B00 + 4 * byte_227E6F9B0[v4]))();
}

uint64_t sub_227DE3B00(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_227DE3B08(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x227DE3B10);
  return result;
}

uint64_t sub_227DE3B1C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x227DE3B24);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_227DE3B28(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_227DE3B30(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for BDSSyncEngineStateMetadata.CodingKeys()
{
  return &type metadata for BDSSyncEngineStateMetadata.CodingKeys;
}

unint64_t sub_227DE3B50()
{
  unint64_t result;

  result = qword_255928C48;
  if (!qword_255928C48)
  {
    result = MEMORY[0x22E2AA7D4](&unk_227E6FB04, &type metadata for BDSSyncEngineStateMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255928C48);
  }
  return result;
}

unint64_t sub_227DE3B98()
{
  unint64_t result;

  result = qword_255928C50;
  if (!qword_255928C50)
  {
    result = MEMORY[0x22E2AA7D4](&unk_227E6FA74, &type metadata for BDSSyncEngineStateMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255928C50);
  }
  return result;
}

unint64_t sub_227DE3BE0()
{
  unint64_t result;

  result = qword_255928C58;
  if (!qword_255928C58)
  {
    result = MEMORY[0x22E2AA7D4](&unk_227E6FA9C, &type metadata for BDSSyncEngineStateMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255928C58);
  }
  return result;
}

uint64_t sub_227DE3C24(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1701667182 && a2 == 0xE400000000000000;
  if (v2 || (sub_227E60698() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6574617473 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_227E60698();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t ModelState.updating(model:source:revisionInfo:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  ModelState.updating(model:source:)(a1, a2, a4);
  return sub_227DD7AD0(a3, v4 + *(int *)(a4 + 52));
}

uint64_t ModelState.updating(model:source:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = *(_QWORD *)(a3 + 16);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(v3, a1, v6);
  v7 = v3 + *(int *)(a3 + 48);
  v8 = type metadata accessor for ModelState.Source(0, v6, *(_QWORD *)(a3 + 24), *(_QWORD *)(a3 + 32));
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 24))(v7, a2, v8);
}

uint64_t ModelState.LoadedState.description.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0x7964616572;
  else
    return 0x676E6964616F6CLL;
}

uint64_t ModelState.LoadedState.hash(into:)()
{
  return sub_227E60728();
}

uint64_t ModelState.LoadedState.hashValue.getter()
{
  sub_227E6071C();
  sub_227E60728();
  return sub_227E60734();
}

uint64_t sub_227DE3E54()
{
  sub_227E6071C();
  ModelState.LoadedState.hash(into:)();
  return sub_227E60734();
}

uint64_t static ModelState.Source.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t TupleTypeMetadata2;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  void (*v31)(char *, uint64_t, uint64_t);
  uint64_t (*v32)(char *, uint64_t, uint64_t);
  int v33;
  char v34;
  uint64_t v35;
  uint64_t v37;
  void (*v38)(char *, char *, uint64_t);
  char *v39;
  void (*v40)(char *, char *, uint64_t);
  char *v41;
  char *v42;
  void (*v43)(char *, uint64_t);
  _QWORD v44[2];
  char *v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  v50 = a2;
  v5 = *(_QWORD *)(a3 - 8);
  v6 = MEMORY[0x24BDAC7A8](a1, a2);
  v47 = (char *)v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v6, v8);
  v46 = (char *)v44 - v10;
  v12 = MEMORY[0x24BDAC7A8](v9, v11);
  v45 = (char *)v44 - v13;
  MEMORY[0x24BDAC7A8](v12, v14);
  v16 = (char *)v44 - v15;
  v44[1] = v17;
  v20 = type metadata accessor for ModelState.Source(0, v18, v17, v19);
  v21 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20, v22);
  v24 = (char *)v44 - v23;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v49 = *(_QWORD *)(TupleTypeMetadata2 - 8);
  v27 = MEMORY[0x24BDAC7A8](TupleTypeMetadata2, v26);
  v29 = (char *)v44 - v28;
  v30 = (char *)v44 + *(int *)(v27 + 48) - v28;
  v48 = v21;
  v31 = *(void (**)(char *, uint64_t, uint64_t))(v21 + 16);
  v31((char *)v44 - v28, a1, v20);
  v31(v30, v50, v20);
  v32 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48);
  v33 = v32(v29, 2, a3);
  if (v33)
  {
    if (v33 == 1)
    {
      if (v32(v30, 2, a3) != 1)
        goto LABEL_9;
      goto LABEL_8;
    }
    if (v32(v30, 2, a3) == 2)
    {
LABEL_8:
      v34 = 1;
      v35 = v48;
      goto LABEL_10;
    }
LABEL_9:
    v34 = 0;
    v35 = v49;
    v20 = TupleTypeMetadata2;
    goto LABEL_10;
  }
  v31(v24, (uint64_t)v29, v20);
  if (v32(v30, 2, a3))
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v24, a3);
    goto LABEL_9;
  }
  v37 = v5;
  v38 = *(void (**)(char *, char *, uint64_t))(v5 + 32);
  v38(v16, v24, a3);
  v39 = v45;
  v38(v45, v30, a3);
  LOBYTE(v38) = sub_227E5FD20();
  v50 = v37;
  v40 = *(void (**)(char *, char *, uint64_t))(v37 + 16);
  v41 = v46;
  v40(v46, v39, a3);
  v42 = v47;
  v40(v47, v16, a3);
  if ((v38 & 1) != 0)
    v34 = 0;
  else
    v34 = sub_227E5FD20() ^ 1;
  v43 = *(void (**)(char *, uint64_t))(v50 + 8);
  v43(v42, a3);
  v43(v41, a3);
  v43(v39, a3);
  v43(v16, a3);
  v35 = v48;
LABEL_10:
  (*(void (**)(char *, uint64_t))(v35 + 8))(v29, v20);
  return v34 & 1;
}

uint64_t sub_227DE41BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return static ModelState.Source.== infix(_:_:)(a1, a2, *(_QWORD *)(a3 + 16));
}

uint64_t ModelState.model.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 40))(v2, a1);
}

uint64_t (*ModelState.model.modify())()
{
  return nullsub_1;
}

_BYTE *ModelState.loaded.setter(_BYTE *result, uint64_t a2)
{
  uint64_t v2;

  *(_BYTE *)(v2 + *(int *)(a2 + 44)) = *result;
  return result;
}

uint64_t (*ModelState.loaded.modify())()
{
  return nullsub_1;
}

uint64_t ModelState.lastSource.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 48);
  v5 = type metadata accessor for ModelState.Source(0, *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32));
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t ModelState.lastSource.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a2 + 48);
  v5 = type metadata accessor for ModelState.Source(0, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), *(_QWORD *)(a2 + 32));
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(v4, a1, v5);
}

uint64_t (*ModelState.lastSource.modify())()
{
  return nullsub_1;
}

uint64_t ModelState.revisionInfo.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_227D6E704(v2 + *(int *)(a1 + 52), a2);
}

uint64_t ModelState.revisionInfo.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_227D6E6BC(a1, v2 + *(int *)(a2 + 52));
}

uint64_t (*ModelState.revisionInfo.modify())()
{
  return nullsub_1;
}

void sub_227DE42F4()
{
  JUMPOUT(0x22E2AA7D4);
}

_QWORD *sub_227DE4304(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  size_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  size_t v9;
  uint64_t v10;
  unsigned int v11;
  _BOOL8 v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  size_t v20;
  unint64_t v21;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  char *v28;
  char *v29;
  _BYTE *v30;
  int v31;
  unsigned int v32;
  int v33;
  int v34;
  uint64_t v35;
  char *v36;
  int v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  unsigned int v42;
  uint64_t v43;
  uint64_t v44;
  unsigned int v45;
  _BOOL8 v46;
  uint64_t v47;
  _QWORD *v48;
  unint64_t v49;
  _QWORD *v50;
  unint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t v54;
  const void *v55;
  _QWORD *v56;
  void *v57;
  unsigned int (*v58)(const void *, uint64_t, uint64_t);
  size_t __n;
  void (*v61)(char *, _BYTE *, uint64_t);
  size_t v62;
  uint64_t v63;
  int v64;
  uint64_t v65;
  uint64_t v66;

  v66 = *(_QWORD *)(a3 + 16);
  v4 = *(_QWORD *)(v66 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  v6 = *(_DWORD *)(v4 + 80);
  v7 = *(unsigned int *)(v4 + 84);
  v8 = v6;
  v9 = v5;
  if (v7 <= 1)
  {
    if (v5 <= 3)
    {
      v11 = (~(-1 << (8 * v5)) - v7 + 2) >> (8 * v5);
      if (v11 > 0xFFFE)
      {
        v10 = 4;
      }
      else
      {
        v12 = v11 != 0;
        v13 = v11 >= 0xFF;
        v10 = 2;
        if (!v13)
          v10 = v12;
      }
    }
    else
    {
      v10 = 1;
    }
    v9 = v10 + v5;
  }
  v14 = sub_227E5F27C();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(_DWORD *)(v15 + 80);
  v17 = v16 | 7;
  v18 = (v16 + 32) & ~v16;
  if (*(_DWORD *)(v15 + 84))
    v19 = *(_QWORD *)(v15 + 64);
  else
    v19 = *(_QWORD *)(v15 + 64) + 1;
  v20 = v18 + v19;
  v21 = ((v9 + (v16 | 7) + ((v6 + v5 + 1) & ~(unint64_t)v6)) & ~(v16 | 7))
      + v18
      + v19;
  if ((v17 | v6) != 7 || ((*(_DWORD *)(v15 + 80) | v6) & 0x100000) != 0 || v21 > 0x18)
  {
    v24 = *a2;
    *a1 = *a2;
    v27 = (_QWORD *)(v24 + (((v17 | v6) + 16) & ~(v17 | v6)));
    swift_retain();
    return v27;
  }
  v64 = *(_DWORD *)(v15 + 84);
  v62 = v20;
  v63 = v14;
  v65 = *(_QWORD *)(v14 - 8);
  v25 = ~(unint64_t)v6;
  v26 = v66;
  v27 = a1;
  __n = v19;
  v61 = *(void (**)(char *, _BYTE *, uint64_t))(v4 + 16);
  v61((char *)a1, a2, v66);
  *((_BYTE *)a1 + v5) = *((_BYTE *)a2 + v5);
  v28 = (char *)a2 + v5 + v8;
  v29 = (char *)(((unint64_t)a1 + v5 + v8 + 1) & v25);
  v30 = (_BYTE *)((unint64_t)(v28 + 1) & v25);
  if (v7 > 1)
    goto LABEL_41;
  if (v5 > 3)
    goto LABEL_24;
  v32 = (~(-1 << (8 * v5)) - v7 + 2) >> (8 * v5);
  if (v32 > 0xFFFE)
  {
    v31 = *(_DWORD *)&v30[v5];
    if (!v31)
      goto LABEL_40;
    goto LABEL_31;
  }
  if (v32 > 0xFE)
  {
    v31 = *(unsigned __int16 *)&v30[v5];
    if (!*(_WORD *)&v30[v5])
      goto LABEL_40;
    goto LABEL_31;
  }
  if (v32)
  {
LABEL_24:
    v31 = v30[v5];
    if (!v30[v5])
      goto LABEL_40;
LABEL_31:
    v33 = (v31 - 1) << (8 * v5);
    if (v5 > 3)
      v33 = 0;
    if ((_DWORD)v5)
    {
      if (v5 <= 3)
        v34 = v5;
      else
        v34 = 4;
      __asm { BR              X11 }
    }
    v35 = v66;
    if (v33 + (_DWORD)v7 != -1)
    {
LABEL_49:
      if (v5 <= 3)
      {
        v42 = (~(-1 << (8 * v5)) - v7 + 2) >> (8 * v5);
        v43 = v42 != 0;
        if (v42 >= 0xFF)
          v43 = 2;
        if (v42 <= 0xFFFE)
          v41 = v43;
        else
          v41 = 4;
      }
      else
      {
        v41 = 1;
      }
      memcpy(v29, v30, v41 + v5);
      v37 = v64;
      v38 = ~v17;
      goto LABEL_61;
    }
    v39 = v29;
    v40 = (unint64_t)(v28 + 1) & v25;
    goto LABEL_58;
  }
LABEL_40:
  v26 = v66;
  if (!(_DWORD)v7)
  {
    v39 = v29;
    v40 = (unint64_t)(v28 + 1) & v25;
    v35 = v66;
LABEL_58:
    v61(v39, (_BYTE *)v40, v35);
    goto LABEL_59;
  }
LABEL_41:
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v4 + 48))(v30, v7, v26))
  {
    if (v7 >= 2)
    {
      v36 = v29;
      memcpy(v29, v30, v5);
LABEL_46:
      v37 = v64;
      v38 = ~v17;
      goto LABEL_74;
    }
    goto LABEL_49;
  }
  v61(v29, v30, v26);
  if (v7 > 1)
  {
    v36 = v29;
    goto LABEL_46;
  }
LABEL_59:
  v37 = v64;
  v38 = ~v17;
  if (v5 <= 3)
  {
    v45 = (~(-1 << (8 * v5)) - v7 + 2) >> (8 * v5);
    if (v45 > 0xFFFE)
    {
      v36 = v29;
      *(_DWORD *)&v29[v5] = 0;
      v44 = 4;
      goto LABEL_73;
    }
    if (v45 > 0xFE)
    {
      v36 = v29;
      *(_WORD *)&v29[v5] = 0;
      goto LABEL_71;
    }
    if (!v45)
    {
      v36 = v29;
      goto LABEL_71;
    }
  }
  v29[v5] = 0;
LABEL_61:
  v36 = v29;
  if (v5 <= 3)
  {
    v45 = (~(-1 << (8 * v5)) - v7 + 2) >> (8 * v5);
    if (v45 > 0xFFFE)
    {
      v44 = 4;
      goto LABEL_73;
    }
LABEL_71:
    v46 = v45 != 0;
    v13 = v45 >= 0xFF;
    v44 = 2;
    if (!v13)
      v44 = v46;
    goto LABEL_73;
  }
  v44 = 1;
LABEL_73:
  v5 += v44;
LABEL_74:
  v47 = ~v16;
  v48 = (_QWORD *)((unint64_t)&v36[v17 + v5] & v38);
  v49 = (unint64_t)&v30[v17 + v5];
  v50 = (_QWORD *)(v49 & v38);
  if (v37 < 0)
  {
    v53 = (_QWORD *)(((unint64_t)v50 + 23) & 0xFFFFFFFFFFFFFFF8);
    v54 = v16 + 16;
    v55 = (const void *)(((unint64_t)v53 + v16 + 16) & v47);
    v52 = v65;
    if ((*(unsigned int (**)(const void *))(v65 + 48))(v55) <= 1)
      goto LABEL_80;
LABEL_82:
    memcpy(v48, v50, v62);
    return v27;
  }
  v51 = *(_QWORD *)((v49 & v38) + 8);
  if (v51 >= 0xFFFFFFFF)
    LODWORD(v51) = -1;
  v52 = v65;
  if ((v51 + 1) > 1)
    goto LABEL_82;
  v53 = (_QWORD *)(((unint64_t)v50 + 23) & 0xFFFFFFFFFFFFFFF8);
  v54 = v16 + 16;
  v55 = (const void *)(((unint64_t)v53 + v16 + 16) & v47);
LABEL_80:
  *v48 = *v50;
  v48[1] = v50[1];
  v56 = (_QWORD *)(((unint64_t)v48 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v56 = *v53;
  v56[1] = v53[1];
  v57 = (void *)(((unint64_t)v56 + v54) & v47);
  v58 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v52 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v58(v55, 1, v63))
  {
    memcpy(v57, v55, __n);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v52 + 16))(v57, v55, v63);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v52 + 56))(v57, 0, 1, v63);
  }
  return a1;
}

uint64_t sub_227DE4888(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  size_t v8;
  size_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  int v14;
  unsigned int v15;
  int v16;
  int v17;
  uint64_t v18;
  unsigned int v19;
  _BOOL8 v20;
  BOOL v21;
  unsigned int v22;
  uint64_t v23;
  _BOOL8 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  size_t v28;
  _OWORD *v29;
  unint64_t v30;
  _OWORD *v31;
  int v32;
  uint64_t v33;
  size_t v34;
  unint64_t v35;
  unsigned int (*v36)(const void *, uint64_t, uint64_t);
  _OWORD *v37;
  uint64_t v38;
  const void *v39;
  uint64_t v40;
  unsigned int v41;
  _OWORD *v42;
  void *v43;
  size_t v44;
  size_t v45;
  unsigned int (*v47)(const void *, uint64_t, uint64_t);
  size_t v48;
  uint64_t v49;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32);
  v7(a1, a2, v5);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = v8 + a2;
  *(_BYTE *)(v8 + a1) = *(_BYTE *)(v8 + a2);
  v10 = *(unsigned __int8 *)(v6 + 80);
  v11 = (char *)((v10 + 1 + v8 + a1) & ~v10);
  v12 = (char *)((v10 + 1 + v9) & ~v10);
  v13 = *(unsigned int *)(v6 + 84);
  v49 = a1;
  if (v13 > 1)
  {
LABEL_20:
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v12, v13, v5))
    {
      if (v13 >= 2)
      {
        memcpy(v11, v12, v8);
        goto LABEL_47;
      }
      goto LABEL_27;
    }
    v7((uint64_t)v11, (uint64_t)v12, v5);
    if (v13 > 1)
      goto LABEL_47;
    if (v8 > 3)
    {
LABEL_36:
      v11[v8] = 0;
      goto LABEL_39;
    }
LABEL_33:
    v22 = ((1 << (8 * v8)) - v13 + 1) >> (8 * v8);
    if (v22 > 0xFFFE)
    {
      *(_DWORD *)&v11[v8] = 0;
      v23 = 4;
      goto LABEL_46;
    }
    if (v22 > 0xFE)
    {
      *(_WORD *)&v11[v8] = 0;
      goto LABEL_44;
    }
    if (!v22)
      goto LABEL_44;
    goto LABEL_36;
  }
  if (v8 <= 3)
  {
    v15 = ((1 << (8 * v8)) - v13 + 1) >> (8 * v8);
    if (v15 > 0xFFFE)
    {
      v14 = *(_DWORD *)&v12[v8];
      if (!v14)
        goto LABEL_19;
      goto LABEL_10;
    }
    if (v15 > 0xFE)
    {
      v14 = *(unsigned __int16 *)&v12[v8];
      if (!*(_WORD *)&v12[v8])
        goto LABEL_19;
      goto LABEL_10;
    }
    if (!v15)
    {
LABEL_19:
      if ((_DWORD)v13)
        goto LABEL_20;
LABEL_32:
      v7((v10 + 1 + v8 + a1) & ~v10, (uint64_t)v12, v5);
      if (v8 > 3)
        goto LABEL_36;
      goto LABEL_33;
    }
  }
  v14 = v12[v8];
  if (!v12[v8])
    goto LABEL_19;
LABEL_10:
  v16 = (v14 - 1) << (8 * v8);
  if (v8 > 3)
    v16 = 0;
  if ((_DWORD)v8)
  {
    if (v8 <= 3)
      v17 = v8;
    else
      v17 = 4;
    __asm { BR              X11 }
  }
  if (v16 + (_DWORD)v13 == -1)
    goto LABEL_32;
LABEL_27:
  v18 = 1;
  if (v8 <= 3)
  {
    v19 = ((1 << (8 * v8)) - v13 + 1) >> (8 * v8);
    if (v19 > 0xFFFE)
    {
      v18 = 4;
    }
    else
    {
      v20 = v19 != 0;
      v21 = v19 >= 0xFF;
      v18 = 2;
      if (!v21)
        v18 = v20;
    }
  }
  memcpy(v11, v12, v18 + v8);
LABEL_39:
  v23 = 1;
  if (v8 <= 3)
  {
    v22 = ((1 << (8 * v8)) - v13 + 1) >> (8 * v8);
    if (v22 > 0xFFFE)
    {
      v23 = 4;
      goto LABEL_46;
    }
LABEL_44:
    v24 = v22 != 0;
    v21 = v22 >= 0xFF;
    v23 = 2;
    if (!v21)
      v23 = v24;
  }
LABEL_46:
  v8 += v23;
LABEL_47:
  v25 = sub_227E5F27C();
  v26 = *(_QWORD *)(v25 - 8);
  v27 = *(unsigned __int8 *)(v26 + 80);
  v28 = (v27 | 7) + v8;
  v29 = (_OWORD *)((unint64_t)&v11[v28] & ~(v27 | 7));
  v30 = (unint64_t)&v12[v28];
  v31 = (_OWORD *)(v30 & ~(v27 | 7));
  v32 = *(_DWORD *)(v26 + 84);
  v33 = ~v27;
  v34 = *(_QWORD *)(v26 + 64);
  if (v32 < 0)
  {
    v37 = (_OWORD *)(((unint64_t)v31 + 23) & 0xFFFFFFFFFFFFFFF8);
    v38 = v27 + 16;
    v39 = (const void *)(((unint64_t)v37 + v27 + 16) & v33);
    v47 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v26 + 48);
    v48 = *(_QWORD *)(v26 + 64);
    v41 = v47(v39, *(unsigned int *)(v26 + 84), v25);
    v34 = v48;
    if (v41 <= 1)
    {
      v40 = v49;
      v36 = v47;
LABEL_54:
      *v29 = *v31;
      v42 = (_OWORD *)(((unint64_t)v29 + 23) & 0xFFFFFFFFFFFFFFF8);
      *v42 = *v37;
      v43 = (void *)(((unint64_t)v42 + v38) & v33);
      if (v36(v39, 1, v25))
      {
        if (v32)
          v44 = v48;
        else
          v44 = v48 + 1;
        memcpy(v43, v39, v44);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v26 + 32))(v43, v39, v25);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v43, 0, 1, v25);
      }
      return v40;
    }
  }
  else
  {
    v35 = *(_QWORD *)((v30 & ~(v27 | 7)) + 8);
    if (v35 >= 0xFFFFFFFF)
      LODWORD(v35) = -1;
    if ((v35 + 1) <= 1)
    {
      v48 = *(_QWORD *)(v26 + 64);
      v36 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v26 + 48);
      v37 = (_OWORD *)(((unint64_t)v31 + 23) & 0xFFFFFFFFFFFFFFF8);
      v38 = v27 + 16;
      v39 = (const void *)(((unint64_t)v37 + v27 + 16) & v33);
      v40 = v49;
      goto LABEL_54;
    }
  }
  if (v32)
    v45 = v34;
  else
    v45 = v34 + 1;
  memcpy(v29, v31, v45 + ((v27 + 32) & ~v27));
  return v49;
}

uint64_t sub_227DE4CB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  size_t v8;
  size_t v9;
  uint64_t v10;
  _BYTE *v11;
  _BYTE *v12;
  uint64_t v13;
  int v14;
  unsigned int (*v15)(_BYTE *, uint64_t, uint64_t);
  unsigned int v16;
  size_t v17;
  unsigned int v18;
  int v19;
  int v20;
  int v21;
  unsigned int v22;
  int v23;
  int v24;
  int v25;
  unsigned int v26;
  int v27;
  int v28;
  uint64_t v29;
  unsigned int v30;
  _BOOL8 v31;
  BOOL v32;
  unsigned int v33;
  uint64_t v34;
  _BOOL8 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  size_t v39;
  _QWORD *v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  unsigned int v46;
  unint64_t v47;
  unsigned int v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t (*v52)(void);
  unsigned int v53;
  unsigned int v54;
  _QWORD *v55;
  void *v56;
  uint64_t (*v57)(void *, uint64_t, uint64_t);
  int v58;
  int v59;
  uint64_t v60;
  _OWORD *v61;
  size_t v62;
  void *v63;
  const void *v64;
  unint64_t v65;
  size_t v66;
  uint64_t v68;
  size_t v69;
  uint64_t v70;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 40);
  v7(a1, a2, v5);
  v8 = *(_QWORD *)(v6 + 64);
  v70 = a1;
  v9 = v8 + a2;
  *(_BYTE *)(v8 + a1) = *(_BYTE *)(v8 + a2);
  v10 = *(unsigned __int8 *)(v6 + 80);
  v11 = (_BYTE *)((v10 + 1 + v8 + a1) & ~v10);
  v12 = (_BYTE *)((v10 + 1 + v9) & ~v10);
  v13 = *(unsigned int *)(v6 + 84);
  if (v13 <= 1)
  {
    if (v8 > 3)
      goto LABEL_3;
    v18 = ((1 << (8 * v8)) - v13 + 1) >> (8 * v8);
    if (v18 > 0xFFFE)
    {
      v14 = *(_DWORD *)&v11[v8];
      if (v14)
        goto LABEL_13;
    }
    else
    {
      if (v18 <= 0xFE)
      {
        if (!v18)
          goto LABEL_22;
LABEL_3:
        v14 = v11[v8];
        if (!v11[v8])
          goto LABEL_22;
LABEL_13:
        v19 = (v14 - 1) << (8 * v8);
        if (v8 > 3)
          v19 = 0;
        if ((_DWORD)v8)
        {
          if (v8 <= 3)
            v20 = v8;
          else
            v20 = 4;
          __asm { BR              X11 }
        }
        if (v19 + (_DWORD)v13 == -1)
        {
LABEL_24:
          if (v8 > 3)
            goto LABEL_25;
          v22 = ((1 << (8 * v8)) - v13 + 1) >> (8 * v8);
          if (v22 > 0xFFFE)
          {
            v21 = *(_DWORD *)&v12[v8];
            if (v21)
              goto LABEL_32;
          }
          else
          {
            if (v22 <= 0xFE)
            {
              if (!v22)
                goto LABEL_62;
LABEL_25:
              v21 = v12[v8];
              if (!v12[v8])
                goto LABEL_62;
LABEL_32:
              v23 = (v21 - 1) << (8 * v8);
              if (v8 > 3)
                v23 = 0;
              if ((_DWORD)v8)
              {
                if (v8 <= 3)
                  v24 = v8;
                else
                  v24 = 4;
                __asm { BR              X11 }
              }
              if ((_DWORD)v13 + v23 != -1)
              {
LABEL_65:
                (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v11, v5);
                v17 = v8;
                if (v13 > 1)
                  goto LABEL_77;
                goto LABEL_68;
              }
LABEL_85:
              v7((uint64_t)v11, (uint64_t)v12, v5);
              if (v13 > 1)
                goto LABEL_93;
              goto LABEL_86;
            }
            v21 = *(unsigned __int16 *)&v12[v8];
            if (*(_WORD *)&v12[v8])
              goto LABEL_32;
          }
LABEL_62:
          if (!(_DWORD)v13)
            goto LABEL_85;
          v15 = *(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v6 + 48);
          goto LABEL_64;
        }
LABEL_41:
        if (v8 > 3)
          goto LABEL_42;
        v26 = ((1 << (8 * v8)) - v13 + 1) >> (8 * v8);
        if (v26 > 0xFFFE)
        {
          v25 = *(_DWORD *)&v12[v8];
          if (v25)
            goto LABEL_49;
        }
        else
        {
          if (v26 <= 0xFE)
          {
            if (!v26)
              goto LABEL_58;
LABEL_42:
            v25 = v12[v8];
            if (!v12[v8])
              goto LABEL_58;
LABEL_49:
            v27 = (v25 - 1) << (8 * v8);
            if (v8 > 3)
              v27 = 0;
            if ((_DWORD)v8)
            {
              if (v8 <= 3)
                v28 = v8;
              else
                v28 = 4;
              __asm { BR              X11 }
            }
            if (v27 + (_DWORD)v13 == -1)
            {
LABEL_73:
              (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v6 + 32))(v11, v12, v5);
              if (v8 > 3)
              {
LABEL_74:
                v11[v8] = 0;
LABEL_86:
                v34 = 1;
                if (v8 > 3)
                {
LABEL_92:
                  v8 += v34;
                  goto LABEL_93;
                }
                v33 = ((1 << (8 * v8)) - v13 + 1) >> (8 * v8);
                if (v33 <= 0xFFFE)
                  goto LABEL_88;
LABEL_91:
                v34 = 4;
                goto LABEL_92;
              }
              v33 = ((1 << (8 * v8)) - v13 + 1) >> (8 * v8);
              if (v33 > 0xFFFE)
              {
                *(_DWORD *)&v11[v8] = 0;
                goto LABEL_91;
              }
              if (v33 > 0xFE)
              {
                *(_WORD *)&v11[v8] = 0;
              }
              else if (v33)
              {
                goto LABEL_74;
              }
LABEL_88:
              v35 = v33 != 0;
              v32 = v33 >= 0xFF;
              v34 = 2;
              if (!v32)
                v34 = v35;
              goto LABEL_92;
            }
LABEL_68:
            v29 = 1;
            if (v8 <= 3)
            {
              v30 = ((1 << (8 * v8)) - v13 + 1) >> (8 * v8);
              if (v30 > 0xFFFE)
              {
                v29 = 4;
              }
              else
              {
                v31 = v30 != 0;
                v32 = v30 >= 0xFF;
                v29 = 2;
                if (!v32)
                  v29 = v31;
              }
            }
            v17 = v29 + v8;
            goto LABEL_77;
          }
          v25 = *(unsigned __int16 *)&v12[v8];
          if (*(_WORD *)&v12[v8])
            goto LABEL_49;
        }
LABEL_58:
        if (!(_DWORD)v13 || !(*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v6 + 48))(v12, v13, v5))
          goto LABEL_73;
        goto LABEL_68;
      }
      v14 = *(unsigned __int16 *)&v11[v8];
      if (*(_WORD *)&v11[v8])
        goto LABEL_13;
    }
LABEL_22:
    if (!(_DWORD)v13
      || !(*(unsigned int (**)(size_t, _QWORD, uint64_t))(v6 + 48))((v10 + 1 + v8 + a1) & ~v10, *(unsigned int *)(v6 + 84), v5))
    {
      goto LABEL_24;
    }
    goto LABEL_41;
  }
  v15 = *(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v6 + 48);
  if (!v15(v11, *(unsigned int *)(v6 + 84), v5))
  {
LABEL_64:
    if (v15(v12, v13, v5))
      goto LABEL_65;
    goto LABEL_85;
  }
  v16 = v15(v12, v13, v5);
  v17 = v8;
  if (!v16)
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v6 + 32))(v11, v12, v5);
    goto LABEL_93;
  }
LABEL_77:
  memcpy(v11, v12, v17);
  if (v13 <= 1)
    goto LABEL_86;
LABEL_93:
  v36 = sub_227E5F27C();
  v37 = *(_QWORD *)(v36 - 8);
  v38 = *(unsigned __int8 *)(v37 + 80);
  v39 = (v38 | 7) + v8;
  v40 = (_QWORD *)((unint64_t)&v11[v39] & ~(v38 | 7));
  v41 = (_QWORD *)((unint64_t)&v12[v39] & ~(v38 | 7));
  v42 = *(unsigned int *)(v37 + 84);
  v43 = ~v38;
  v44 = (v38 + 32) & ~v38;
  v69 = *(_QWORD *)(v37 + 64);
  if ((v42 & 0x80000000) != 0)
  {
    v68 = (v38 + 32) & ~v38;
    v50 = v38 + 16;
    v52 = *(uint64_t (**)(void))(v37 + 48);
    v53 = ((uint64_t (*)(unint64_t, uint64_t, uint64_t))v52)((v38 + 16 + (((unint64_t)v40 + 23) & 0xFFFFFFFFFFFFFFF8)) & v43, v42, v36);
    v49 = (_QWORD *)(((unint64_t)v41 + 23) & 0xFFFFFFFFFFFFFFF8);
    v54 = v52();
    if (v53 < 2)
    {
      v51 = ((unint64_t)v49 + v50) & v43;
      v44 = v68;
      if (v54 <= 1)
        goto LABEL_103;
LABEL_116:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v65 = (v50 + (((unint64_t)v40 + 23) & 0xFFFFFFFFFFFFFFF8)) & v43;
      if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v37 + 48))(v65, 1, v36))
        (*(void (**)(unint64_t, uint64_t))(v37 + 8))(v65, v36);
      goto LABEL_118;
    }
    v44 = v68;
    if (v54 <= 1)
    {
      v60 = ((unint64_t)v49 + v50) & v43;
      goto LABEL_110;
    }
LABEL_118:
    v66 = v69;
    if (!(_DWORD)v42)
      v66 = v69 + 1;
    v62 = v66 + v44;
    v63 = v40;
    v64 = v41;
    goto LABEL_127;
  }
  v45 = v40[1];
  if (v45 >= 0xFFFFFFFF)
    LODWORD(v45) = -1;
  v46 = v45 + 1;
  v47 = v41[1];
  if (v47 >= 0xFFFFFFFF)
    LODWORD(v47) = -1;
  v48 = v47 + 1;
  if (v46 < 2)
  {
    if (v48 <= 1)
    {
      v49 = (_QWORD *)(((unint64_t)v41 + 23) & 0xFFFFFFFFFFFFFFF8);
      v50 = v38 + 16;
      v51 = ((unint64_t)v49 + v38 + 16) & v43;
LABEL_103:
      *v40 = *v41;
      v40[1] = v41[1];
      swift_bridgeObjectRelease();
      v55 = (_QWORD *)(((unint64_t)v40 + 23) & 0xFFFFFFFFFFFFFFF8);
      *v55 = *v49;
      v55[1] = v49[1];
      swift_bridgeObjectRelease();
      v56 = (void *)(((unint64_t)v55 + v50) & v43);
      v57 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v37 + 48);
      v58 = v57(v56, 1, v36);
      v59 = v57((void *)v51, 1, v36);
      if (v58)
      {
        if (!v59)
        {
          (*(void (**)(void *, uint64_t, uint64_t))(v37 + 32))(v56, v51, v36);
LABEL_130:
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v37 + 56))(v56, 0, 1, v36);
          return v70;
        }
      }
      else
      {
        if (!v59)
        {
          (*(void (**)(void *, uint64_t, uint64_t))(v37 + 40))(v56, v51, v36);
          return v70;
        }
        (*(void (**)(void *, uint64_t))(v37 + 8))(v56, v36);
      }
      if ((_DWORD)v42)
        v62 = v69;
      else
        v62 = v69 + 1;
      v63 = v56;
      v64 = (const void *)v51;
      goto LABEL_127;
    }
    v50 = v38 + 16;
    goto LABEL_116;
  }
  if (v48 > 1)
    goto LABEL_118;
  v52 = *(uint64_t (**)(void))(v37 + 48);
  v49 = (_QWORD *)(((unint64_t)v41 + 23) & 0xFFFFFFFFFFFFFFF8);
  v50 = v38 + 16;
  v60 = ((unint64_t)v49 + v38 + 16) & v43;
LABEL_110:
  *(_OWORD *)v40 = *(_OWORD *)v41;
  v61 = (_OWORD *)(((unint64_t)v40 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v61 = *(_OWORD *)v49;
  v56 = (void *)(((unint64_t)v61 + v50) & v43);
  if (!((unsigned int (*)(uint64_t, uint64_t, uint64_t))v52)(v60, 1, v36))
  {
    (*(void (**)(void *, uint64_t, uint64_t))(v37 + 32))(v56, v60, v36);
    goto LABEL_130;
  }
  if ((_DWORD)v42)
    v62 = v69;
  else
    v62 = v69 + 1;
  v63 = v56;
  v64 = (const void *)v60;
LABEL_127:
  memcpy(v63, v64, v62);
  return v70;
}

uint64_t sub_227DE5490(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_227DE54DC + 4 * byte_227E6FBCB[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_227DE5510 + 4 * byte_227E6FBC6[v4]))();
}

uint64_t sub_227DE5510(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_227DE5518(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x227DE5520);
  return result;
}

uint64_t sub_227DE552C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x227DE5534);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_227DE5538(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_227DE5540(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

_QWORD *sub_227DE554C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  unint64_t v9;
  uint64_t v10;
  unsigned int v11;
  _BOOL8 v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v17;
  int v18;
  unsigned int v19;
  int v20;
  int v21;
  uint64_t v22;
  unsigned int v23;
  _BOOL8 v24;
  unsigned int v25;

  v4 = a1;
  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = v8;
  if (v7 <= 1)
  {
    if (v8 <= 3)
    {
      v11 = (~(-1 << (8 * v8)) - v7 + 2) >> (8 * v8);
      if (v11 > 0xFFFE)
      {
        v10 = 4;
      }
      else
      {
        v12 = v11 != 0;
        v13 = v11 >= 0xFF;
        v10 = 2;
        if (!v13)
          v10 = v12;
      }
    }
    else
    {
      v10 = 1;
    }
    v9 = v10 + v8;
  }
  v14 = *(_DWORD *)(v6 + 80);
  if (v14 > 7 || v9 > 0x18 || (*(_DWORD *)(v6 + 80) & 0x100000) != 0)
  {
    v17 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v17 + ((v14 + 16) & ~v14));
    swift_retain();
    return v4;
  }
  if (v7 <= 1)
  {
    if (v8 <= 3)
    {
      v19 = (~(-1 << (8 * v8)) - v7 + 2) >> (8 * v8);
      if (v19 > 0xFFFE)
      {
        v18 = *(_DWORD *)((char *)a2 + v8);
        if (!v18)
          goto LABEL_36;
        goto LABEL_27;
      }
      if (v19 > 0xFE)
      {
        v18 = *(unsigned __int16 *)((char *)a2 + v8);
        if (!*(_WORD *)((char *)a2 + v8))
          goto LABEL_36;
        goto LABEL_27;
      }
      if (!v19)
      {
LABEL_36:
        if (v7)
          goto LABEL_37;
LABEL_50:
        (*(void (**)(_QWORD *, _QWORD *, _QWORD))(v6 + 16))(a1, a2, *(_QWORD *)(a3 + 16));
        if (v8 > 3)
          goto LABEL_54;
        goto LABEL_51;
      }
    }
    v18 = *((unsigned __int8 *)a2 + v8);
    if (!*((_BYTE *)a2 + v8))
      goto LABEL_36;
LABEL_27:
    v20 = (v18 - 1) << (8 * v8);
    if (v8 > 3)
      v20 = 0;
    if ((_DWORD)v8)
    {
      if (v8 <= 3)
        v21 = v8;
      else
        v21 = 4;
      __asm { BR              X11 }
    }
    if (v20 + v7 != -1)
      goto LABEL_44;
    goto LABEL_50;
  }
LABEL_37:
  if ((*(unsigned int (**)(_QWORD *, _QWORD, _QWORD))(v6 + 48))(a2, *(unsigned int *)(v6 + 84), *(_QWORD *)(a3 + 16)))
  {
    if (v7 > 1)
    {
LABEL_57:
      memcpy(v4, a2, v8);
      return v4;
    }
LABEL_44:
    if (v8 <= 3)
    {
      v23 = (~(-1 << (8 * v8)) - v7 + 2) >> (8 * v8);
      if (v23 > 0xFFFE)
      {
        v22 = 4;
      }
      else
      {
        v24 = v23 != 0;
        v13 = v23 >= 0xFF;
        v22 = 2;
        if (!v13)
          v22 = v24;
      }
    }
    else
    {
      v22 = 1;
    }
    v8 += v22;
    goto LABEL_57;
  }
  (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v6 + 16))(v4, a2, v5);
  if (v7 > 1)
    return v4;
  if (v8 > 3)
  {
LABEL_54:
    *((_BYTE *)v4 + v8) = 0;
    return v4;
  }
LABEL_51:
  v25 = (~(-1 << (8 * v8)) - v7 + 2) >> (8 * v8);
  if (v25 > 0xFFFE)
  {
    *(_DWORD *)((char *)v4 + v8) = 0;
    return v4;
  }
  if (v25 > 0xFE)
  {
    *(_WORD *)((char *)v4 + v8) = 0;
    return v4;
  }
  if (v25)
    goto LABEL_54;
  return v4;
}

_BYTE *sub_227DE582C(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  int v9;
  unsigned int (*v10)(_BYTE *, uint64_t, uint64_t);
  unsigned int v11;
  int v12;
  int v13;
  int v14;
  unsigned int v15;
  int v16;
  int v17;
  int v18;
  unsigned int v19;
  int v20;
  int v21;
  uint64_t v22;
  unsigned int v23;
  _BOOL8 v24;
  BOOL v25;
  unsigned int v26;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned int *)(v6 + 84);
  v8 = *(_QWORD *)(v6 + 64);
  if (v7 <= 1)
  {
    if (v8 > 3)
      goto LABEL_3;
    v11 = (~(-1 << (8 * v8)) - v7 + 2) >> (8 * v8);
    if (v11 > 0xFFFE)
    {
      v9 = *(_DWORD *)&a1[v8];
      if (v9)
        goto LABEL_13;
    }
    else
    {
      if (v11 <= 0xFE)
      {
        if (!v11)
          goto LABEL_22;
LABEL_3:
        v9 = a1[v8];
        if (!a1[v8])
          goto LABEL_22;
LABEL_13:
        v12 = (v9 - 1) << (8 * v8);
        if (v8 > 3)
          v12 = 0;
        if ((_DWORD)v8)
        {
          if (v8 <= 3)
            v13 = *(_QWORD *)(v6 + 64);
          else
            v13 = 4;
          __asm { BR              X11 }
        }
        if (v12 + (_DWORD)v7 == -1)
        {
LABEL_24:
          if (v8 > 3)
            goto LABEL_25;
          v15 = (~(-1 << (8 * v8)) - v7 + 2) >> (8 * v8);
          if (v15 > 0xFFFE)
          {
            v14 = *(_DWORD *)&a2[v8];
            if (v14)
              goto LABEL_32;
          }
          else
          {
            if (v15 <= 0xFE)
            {
              if (!v15)
                goto LABEL_62;
LABEL_25:
              v14 = a2[v8];
              if (!a2[v8])
                goto LABEL_62;
LABEL_32:
              v16 = (v14 - 1) << (8 * v8);
              if (v8 > 3)
                v16 = 0;
              if ((_DWORD)v8)
              {
                if (v8 <= 3)
                  v17 = v8;
                else
                  v17 = 4;
                __asm { BR              X11 }
              }
              if ((_DWORD)v7 + v16 != -1)
              {
LABEL_65:
                (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(a1, v5);
                if (v7 <= 1)
                {
LABEL_68:
                  if (v8 <= 3)
                  {
                    v23 = (~(-1 << (8 * v8)) - v7 + 2) >> (8 * v8);
                    if (v23 > 0xFFFE)
                    {
                      v22 = 4;
                    }
                    else
                    {
                      v24 = v23 != 0;
                      v25 = v23 >= 0xFF;
                      v22 = 2;
                      if (!v25)
                        v22 = v24;
                    }
                  }
                  else
                  {
                    v22 = 1;
                  }
                  v8 += v22;
                }
LABEL_78:
                memcpy(a1, a2, v8);
                return a1;
              }
LABEL_85:
              (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v6 + 24))(a1, a2, v5);
              return a1;
            }
            v14 = *(unsigned __int16 *)&a2[v8];
            if (*(_WORD *)&a2[v8])
              goto LABEL_32;
          }
LABEL_62:
          if (!(_DWORD)v7)
            goto LABEL_85;
          v10 = *(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v6 + 48);
          goto LABEL_64;
        }
LABEL_41:
        if (v8 > 3)
          goto LABEL_42;
        v19 = (~(-1 << (8 * v8)) - v7 + 2) >> (8 * v8);
        if (v19 > 0xFFFE)
        {
          v18 = *(_DWORD *)&a2[v8];
          if (v18)
            goto LABEL_49;
        }
        else
        {
          if (v19 <= 0xFE)
          {
            if (!v19)
              goto LABEL_58;
LABEL_42:
            v18 = a2[v8];
            if (!a2[v8])
              goto LABEL_58;
LABEL_49:
            v20 = (v18 - 1) << (8 * v8);
            if (v8 > 3)
              v20 = 0;
            if ((_DWORD)v8)
            {
              if (v8 <= 3)
                v21 = v8;
              else
                v21 = 4;
              __asm { BR              X11 }
            }
            if (v20 + (_DWORD)v7 != -1)
              goto LABEL_68;
LABEL_74:
            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v6 + 16))(a1, a2, v5);
            if (v8 <= 3)
            {
              v26 = (~(-1 << (8 * v8)) - v7 + 2) >> (8 * v8);
              if (v26 > 0xFFFE)
              {
                *(_DWORD *)&a1[v8] = 0;
                return a1;
              }
              if (v26 > 0xFE)
              {
                *(_WORD *)&a1[v8] = 0;
                return a1;
              }
              if (!v26)
                return a1;
            }
            a1[v8] = 0;
            return a1;
          }
          v18 = *(unsigned __int16 *)&a2[v8];
          if (*(_WORD *)&a2[v8])
            goto LABEL_49;
        }
LABEL_58:
        if ((_DWORD)v7 && (*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v6 + 48))(a2, v7, v5))
          goto LABEL_68;
        goto LABEL_74;
      }
      v9 = *(unsigned __int16 *)&a1[v8];
      if (*(_WORD *)&a1[v8])
        goto LABEL_13;
    }
LABEL_22:
    if (!(_DWORD)v7
      || !(*(unsigned int (**)(_BYTE *, _QWORD, _QWORD))(v6 + 48))(a1, *(unsigned int *)(v6 + 84), *(_QWORD *)(a3 + 16)))
    {
      goto LABEL_24;
    }
    goto LABEL_41;
  }
  v10 = *(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v6 + 48);
  if (!v10(a1, *(unsigned int *)(v6 + 84), *(_QWORD *)(a3 + 16)))
  {
LABEL_64:
    if (v10(a2, v7, v5))
      goto LABEL_65;
    goto LABEL_85;
  }
  if (v10(a2, v7, v5))
    goto LABEL_78;
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v6 + 16))(a1, a2, v5);
  return a1;
}

_BYTE *sub_227DE5C9C(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  int v9;
  unsigned int v10;
  int v11;
  int v12;
  uint64_t v13;
  unsigned int v14;
  _BOOL8 v15;
  BOOL v16;
  unsigned int v17;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = *(_QWORD *)(v6 + 64);
  if (v7 > 1)
    goto LABEL_20;
  if (v8 > 3)
    goto LABEL_3;
  v10 = (~(-1 << (8 * v8)) - v7 + 2) >> (8 * v8);
  if (v10 > 0xFFFE)
  {
    v9 = *(_DWORD *)&a2[v8];
    if (!v9)
      goto LABEL_19;
    goto LABEL_10;
  }
  if (v10 > 0xFE)
  {
    v9 = *(unsigned __int16 *)&a2[v8];
    if (!*(_WORD *)&a2[v8])
      goto LABEL_19;
    goto LABEL_10;
  }
  if (v10)
  {
LABEL_3:
    v9 = a2[v8];
    if (!a2[v8])
      goto LABEL_19;
LABEL_10:
    v11 = (v9 - 1) << (8 * v8);
    if (v8 > 3)
      v11 = 0;
    if ((_DWORD)v8)
    {
      if (v8 <= 3)
        v12 = *(_QWORD *)(v6 + 64);
      else
        v12 = 4;
      __asm { BR              X11 }
    }
    if (v11 + v7 != -1)
      goto LABEL_27;
LABEL_33:
    (*(void (**)(_BYTE *, _BYTE *, _QWORD))(v6 + 32))(a1, a2, *(_QWORD *)(a3 + 16));
    if (v8 > 3)
    {
LABEL_37:
      a1[v8] = 0;
      return a1;
    }
    goto LABEL_34;
  }
LABEL_19:
  if (!v7)
    goto LABEL_33;
LABEL_20:
  if ((*(unsigned int (**)(_BYTE *, _QWORD, _QWORD))(v6 + 48))(a2, *(unsigned int *)(v6 + 84), *(_QWORD *)(a3 + 16)))
  {
    if (v7 > 1)
    {
LABEL_40:
      memcpy(a1, a2, v8);
      return a1;
    }
LABEL_27:
    if (v8 <= 3)
    {
      v14 = (~(-1 << (8 * v8)) - v7 + 2) >> (8 * v8);
      if (v14 > 0xFFFE)
      {
        v13 = 4;
      }
      else
      {
        v15 = v14 != 0;
        v16 = v14 >= 0xFF;
        v13 = 2;
        if (!v16)
          v13 = v15;
      }
    }
    else
    {
      v13 = 1;
    }
    v8 += v13;
    goto LABEL_40;
  }
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v6 + 32))(a1, a2, v5);
  if (v7 > 1)
    return a1;
  if (v8 > 3)
    goto LABEL_37;
LABEL_34:
  v17 = (~(-1 << (8 * v8)) - v7 + 2) >> (8 * v8);
  if (v17 > 0xFFFE)
  {
    *(_DWORD *)&a1[v8] = 0;
    return a1;
  }
  if (v17 > 0xFE)
  {
    *(_WORD *)&a1[v8] = 0;
    return a1;
  }
  if (v17)
    goto LABEL_37;
  return a1;
}

_BYTE *sub_227DE5EE0(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  int v9;
  unsigned int (*v10)(_BYTE *, uint64_t, uint64_t);
  unsigned int v11;
  int v12;
  int v13;
  int v14;
  unsigned int v15;
  int v16;
  int v17;
  int v18;
  unsigned int v19;
  int v20;
  int v21;
  uint64_t v22;
  unsigned int v23;
  _BOOL8 v24;
  BOOL v25;
  unsigned int v26;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned int *)(v6 + 84);
  v8 = *(_QWORD *)(v6 + 64);
  if (v7 <= 1)
  {
    if (v8 > 3)
      goto LABEL_3;
    v11 = (~(-1 << (8 * v8)) - v7 + 2) >> (8 * v8);
    if (v11 > 0xFFFE)
    {
      v9 = *(_DWORD *)&a1[v8];
      if (v9)
        goto LABEL_13;
    }
    else
    {
      if (v11 <= 0xFE)
      {
        if (!v11)
          goto LABEL_22;
LABEL_3:
        v9 = a1[v8];
        if (!a1[v8])
          goto LABEL_22;
LABEL_13:
        v12 = (v9 - 1) << (8 * v8);
        if (v8 > 3)
          v12 = 0;
        if ((_DWORD)v8)
        {
          if (v8 <= 3)
            v13 = *(_QWORD *)(v6 + 64);
          else
            v13 = 4;
          __asm { BR              X11 }
        }
        if (v12 + (_DWORD)v7 == -1)
        {
LABEL_24:
          if (v8 > 3)
            goto LABEL_25;
          v15 = (~(-1 << (8 * v8)) - v7 + 2) >> (8 * v8);
          if (v15 > 0xFFFE)
          {
            v14 = *(_DWORD *)&a2[v8];
            if (v14)
              goto LABEL_32;
          }
          else
          {
            if (v15 <= 0xFE)
            {
              if (!v15)
                goto LABEL_62;
LABEL_25:
              v14 = a2[v8];
              if (!a2[v8])
                goto LABEL_62;
LABEL_32:
              v16 = (v14 - 1) << (8 * v8);
              if (v8 > 3)
                v16 = 0;
              if ((_DWORD)v8)
              {
                if (v8 <= 3)
                  v17 = v8;
                else
                  v17 = 4;
                __asm { BR              X11 }
              }
              if ((_DWORD)v7 + v16 != -1)
              {
LABEL_65:
                (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(a1, v5);
                if (v7 <= 1)
                {
LABEL_68:
                  if (v8 <= 3)
                  {
                    v23 = (~(-1 << (8 * v8)) - v7 + 2) >> (8 * v8);
                    if (v23 > 0xFFFE)
                    {
                      v22 = 4;
                    }
                    else
                    {
                      v24 = v23 != 0;
                      v25 = v23 >= 0xFF;
                      v22 = 2;
                      if (!v25)
                        v22 = v24;
                    }
                  }
                  else
                  {
                    v22 = 1;
                  }
                  v8 += v22;
                }
LABEL_78:
                memcpy(a1, a2, v8);
                return a1;
              }
LABEL_85:
              (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v6 + 40))(a1, a2, v5);
              return a1;
            }
            v14 = *(unsigned __int16 *)&a2[v8];
            if (*(_WORD *)&a2[v8])
              goto LABEL_32;
          }
LABEL_62:
          if (!(_DWORD)v7)
            goto LABEL_85;
          v10 = *(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v6 + 48);
          goto LABEL_64;
        }
LABEL_41:
        if (v8 > 3)
          goto LABEL_42;
        v19 = (~(-1 << (8 * v8)) - v7 + 2) >> (8 * v8);
        if (v19 > 0xFFFE)
        {
          v18 = *(_DWORD *)&a2[v8];
          if (v18)
            goto LABEL_49;
        }
        else
        {
          if (v19 <= 0xFE)
          {
            if (!v19)
              goto LABEL_58;
LABEL_42:
            v18 = a2[v8];
            if (!a2[v8])
              goto LABEL_58;
LABEL_49:
            v20 = (v18 - 1) << (8 * v8);
            if (v8 > 3)
              v20 = 0;
            if ((_DWORD)v8)
            {
              if (v8 <= 3)
                v21 = v8;
              else
                v21 = 4;
              __asm { BR              X11 }
            }
            if (v20 + (_DWORD)v7 != -1)
              goto LABEL_68;
LABEL_74:
            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v6 + 32))(a1, a2, v5);
            if (v8 <= 3)
            {
              v26 = (~(-1 << (8 * v8)) - v7 + 2) >> (8 * v8);
              if (v26 > 0xFFFE)
              {
                *(_DWORD *)&a1[v8] = 0;
                return a1;
              }
              if (v26 > 0xFE)
              {
                *(_WORD *)&a1[v8] = 0;
                return a1;
              }
              if (!v26)
                return a1;
            }
            a1[v8] = 0;
            return a1;
          }
          v18 = *(unsigned __int16 *)&a2[v8];
          if (*(_WORD *)&a2[v8])
            goto LABEL_49;
        }
LABEL_58:
        if ((_DWORD)v7 && (*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v6 + 48))(a2, v7, v5))
          goto LABEL_68;
        goto LABEL_74;
      }
      v9 = *(unsigned __int16 *)&a1[v8];
      if (*(_WORD *)&a1[v8])
        goto LABEL_13;
    }
LABEL_22:
    if (!(_DWORD)v7
      || !(*(unsigned int (**)(_BYTE *, _QWORD, _QWORD))(v6 + 48))(a1, *(unsigned int *)(v6 + 84), *(_QWORD *)(a3 + 16)))
    {
      goto LABEL_24;
    }
    goto LABEL_41;
  }
  v10 = *(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v6 + 48);
  if (!v10(a1, *(unsigned int *)(v6 + 84), *(_QWORD *)(a3 + 16)))
  {
LABEL_64:
    if (v10(a2, v7, v5))
      goto LABEL_65;
    goto LABEL_85;
  }
  if (v10(a2, v7, v5))
    goto LABEL_78;
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v6 + 32))(a1, a2, v5);
  return a1;
}

uint64_t sub_227DE6350(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  _BOOL8 v10;
  BOOL v11;
  int v12;
  char v13;
  int v14;
  unsigned int v15;
  int v16;
  int v17;
  unsigned int v18;
  uint64_t result;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  v6 = v5 - 2;
  v7 = *(_QWORD *)(v4 + 64);
  if (v5 <= 1)
  {
    v6 = 0;
    if (v7 <= 3)
    {
      v9 = (~(-1 << (8 * v7)) - v5 + 2) >> (8 * v7);
      if (v9 > 0xFFFE)
      {
        v8 = 4;
      }
      else
      {
        v10 = v9 != 0;
        v11 = v9 >= 0xFF;
        v8 = 2;
        if (!v11)
          v8 = v10;
      }
    }
    else
    {
      v8 = 1;
    }
    v7 += v8;
  }
  if (!a2)
    return 0;
  v12 = a2 - v6;
  if (a2 <= v6)
    goto LABEL_29;
  v13 = 8 * v7;
  if (v7 > 3)
    goto LABEL_13;
  v15 = ((v12 + ~(-1 << v13)) >> v13) + 1;
  if (HIWORD(v15))
  {
    v14 = *(_DWORD *)(a1 + v7);
    if (v14)
      goto LABEL_20;
  }
  else
  {
    if (v15 <= 0xFF)
    {
      if (v15 < 2)
        goto LABEL_29;
LABEL_13:
      v14 = *(unsigned __int8 *)(a1 + v7);
      if (!*(_BYTE *)(a1 + v7))
        goto LABEL_29;
LABEL_20:
      v16 = (v14 - 1) << v13;
      if (v7 > 3)
        v16 = 0;
      if ((_DWORD)v7)
      {
        if (v7 <= 3)
          v17 = v7;
        else
          v17 = 4;
        __asm { BR              X12 }
      }
      return v6 + v16 + 1;
    }
    v14 = *(unsigned __int16 *)(a1 + v7);
    if (*(_WORD *)(a1 + v7))
      goto LABEL_20;
  }
LABEL_29:
  if (!v6)
    return 0;
  if (!v5)
    return 0;
  v18 = (*(uint64_t (**)(void))(v4 + 48))();
  v11 = v18 >= 2;
  result = v18 - 2;
  if ((_DWORD)result == 0 || !v11)
    return 0;
  return result;
}

void sub_227DE64DC(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6;
  unsigned int v7;
  unsigned int v8;
  size_t v9;
  size_t v10;
  uint64_t v11;
  unsigned int v12;
  _BOOL8 v13;
  BOOL v14;
  unsigned int v15;
  unsigned int v16;
  int v17;
  unsigned int v18;
  int v19;

  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = v7 - 2;
  v9 = *(_QWORD *)(v6 + 64);
  v10 = v9;
  if (v7 <= 1)
  {
    v8 = 0;
    if (v9 <= 3)
    {
      v12 = (~(-1 << (8 * v9)) - v7 + 2) >> (8 * v9);
      if (v12 > 0xFFFE)
      {
        v11 = 4;
      }
      else
      {
        v13 = v12 != 0;
        v14 = v12 >= 0xFF;
        v11 = 2;
        if (!v14)
          v11 = v13;
      }
    }
    else
    {
      v11 = 1;
    }
    v10 = v11 + v9;
  }
  v14 = a3 >= v8;
  v15 = a3 - v8;
  if (v15 != 0 && v14)
  {
    if (v10 <= 3)
    {
      v18 = ((v15 + ~(-1 << (8 * v10))) >> (8 * v10)) + 1;
      if (HIWORD(v18))
      {
        v16 = 4u;
      }
      else if (v18 >= 0x100)
      {
        v16 = 2;
      }
      else
      {
        v16 = v18 > 1;
      }
    }
    else
    {
      v16 = 1u;
    }
  }
  else
  {
    v16 = 0;
  }
  if (v8 < a2)
  {
    v17 = ~v8 + a2;
    if (v10 < 4)
    {
      if ((_DWORD)v10)
      {
        v19 = v17 & ~(-1 << (8 * v10));
        bzero(a1, v10);
        if ((_DWORD)v10 == 3)
        {
          *a1 = v19;
          *((_BYTE *)a1 + 2) = BYTE2(v19);
        }
        else if ((_DWORD)v10 == 2)
        {
          *a1 = v19;
        }
        else
        {
          *(_BYTE *)a1 = v19;
        }
      }
    }
    else
    {
      bzero(a1, v10);
      *(_DWORD *)a1 = v17;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X12 }
}

void sub_227DE6768()
{
  uint64_t v0;
  int v1;

  *(_WORD *)v0 = v1;
  *(_BYTE *)(v0 + 2) = BYTE2(v1);
  JUMPOUT(0x227DE6754);
}

void sub_227DE6778()
{
  _WORD *v0;
  __int16 v1;

  *v0 = v1;
  JUMPOUT(0x227DE6754);
}

void sub_227DE6780()
{
  _DWORD *v0;
  int v1;

  *v0 = v1;
  JUMPOUT(0x227DE6754);
}

uint64_t sub_227DE678C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unsigned int v3;
  uint64_t v4;
  char v5;
  int v6;
  unsigned int v7;
  int v8;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  v3 = *(_DWORD *)(v2 + 84);
  if (v3 > 1)
    return (*(uint64_t (**)(void))(v2 + 48))();
  v4 = *(_QWORD *)(v2 + 64);
  v5 = 8 * v4;
  if (v4 > 3)
    goto LABEL_3;
  v7 = (~(-1 << v5) - v3 + 2) >> v5;
  if (v7 > 0xFFFE)
  {
    v6 = *(_DWORD *)(a1 + v4);
    if (v6)
      goto LABEL_10;
  }
  else
  {
    if (v7 <= 0xFE)
    {
      if (!v7)
        goto LABEL_17;
LABEL_3:
      v6 = *(unsigned __int8 *)(a1 + v4);
      if (!*(_BYTE *)(a1 + v4))
        goto LABEL_17;
LABEL_10:
      v8 = (v6 - 1) << v5;
      if (v4 > 3)
        v8 = 0;
      if (!(_DWORD)v4)
        return v3 + v8 + 1;
      if (v4 > 3)
        LODWORD(v4) = 4;
      return ((uint64_t (*)(void))((char *)&loc_227DE6834 + 4 * byte_227E6FC0A[(v4 - 1)]))();
    }
    v6 = *(unsigned __int16 *)(a1 + v4);
    if (*(_WORD *)(a1 + v4))
      goto LABEL_10;
  }
LABEL_17:
  if (v3)
    return (*(uint64_t (**)(void))(v2 + 48))();
  return 0;
}

void sub_227DE6884(_WORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  size_t v6;
  unsigned int v7;
  int v8;
  unsigned int v9;
  int v10;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  v6 = *(_QWORD *)(v4 + 64);
  if (v5 > 1)
  {
    v7 = 0;
  }
  else if (v6 <= 3)
  {
    v9 = (~(-1 << (8 * v6)) - v5 + 2) >> (8 * v6);
    if (v9 > 0xFFFE)
    {
      v7 = 4u;
    }
    else if (v9 >= 0xFF)
    {
      v7 = 2;
    }
    else
    {
      v7 = v9 != 0;
    }
  }
  else
  {
    v7 = 1u;
  }
  if (v5 < a2)
  {
    v8 = ~v5 + a2;
    if (v6 < 4)
    {
      if ((_DWORD)v6)
      {
        v10 = v8 & ~(-1 << (8 * v6));
        bzero(a1, v6);
        if ((_DWORD)v6 == 3)
        {
          *a1 = v10;
          *((_BYTE *)a1 + 2) = BYTE2(v10);
        }
        else if ((_DWORD)v6 == 2)
        {
          *a1 = v10;
        }
        else
        {
          *(_BYTE *)a1 = v10;
        }
      }
    }
    else
    {
      bzero(a1, v6);
      *(_DWORD *)a1 = v8;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X11 }
}

uint64_t sub_227DE6A34(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  _BYTE v19[24];

  v3 = sub_227D68330(&qword_253F3A080);
  MEMORY[0x24BDAC7A8](v3, v4);
  v6 = &v19[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = sub_227D68330(&qword_253F398D0);
  v9 = MEMORY[0x24BDAC7A8](v7, v8);
  v11 = &v19[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v9, v12);
  v14 = &v19[-v13];
  v15 = v1 + *(_QWORD *)(*(_QWORD *)v1 + 120);
  swift_beginAccess();
  sub_227D5DF48(v15, (uint64_t)v14, &qword_253F398D0);
  swift_beginAccess();
  sub_227DE8D90(a1, v15);
  swift_endAccess();
  sub_227D5DF48(v15, (uint64_t)v11, &qword_253F398D0);
  v16 = sub_227DE7620((uint64_t)v14, (uint64_t)v11);
  sub_227D5809C((uint64_t)v11, &qword_253F398D0);
  if (!v16)
  {
    v17 = (uint64_t)&v6[*(int *)(sub_227D68330(&qword_255928C80) + 48)];
    sub_227D5DF48((uint64_t)v14, (uint64_t)v6, &qword_253F398D0);
    sub_227D5DF48(v15, v17, &qword_253F398D0);
    swift_storeEnumTagMultiPayload();
    sub_227DE6F08((uint64_t)v6);
    sub_227D5809C((uint64_t)v6, &qword_253F3A080);
  }
  sub_227D5809C(a1, &qword_253F398D0);
  return sub_227D5809C((uint64_t)v14, &qword_253F398D0);
}

uint64_t sub_227DE6C18(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t ObjectType;
  void *v16;
  void (*v17)(char *, uint64_t);
  void (*v18)(char *, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t aBlock;
  uint64_t v28;
  uint64_t (*v29)(uint64_t);
  void *v30;
  uint64_t (*v31)();
  uint64_t v32;
  _BYTE v33[56];

  v2 = v1;
  v4 = sub_227E5F978();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v6);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_227E5F948();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9, v11);
  v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_227D5B0DC(a1, (uint64_t)v33, &qword_253F3A088);
  swift_beginAccess();
  if (MEMORY[0x22E2AA96C](v2 + 64))
  {
    v14 = *(_QWORD *)(v2 + 72);
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 8))(v2, ObjectType, v14);
    swift_unknownObjectRelease();
  }
  sub_227E5F93C();
  v31 = nullsub_1;
  v32 = 0;
  aBlock = MEMORY[0x24BDAC760];
  v28 = 1107296256;
  v29 = sub_227D5A858;
  v30 = &unk_24F08E118;
  v16 = _Block_copy(&aBlock);
  sub_227E5F960();
  MEMORY[0x22E2A991C](0, v8, v13, v16);
  _Block_release(v16);
  v17 = *(void (**)(char *, uint64_t))(v5 + 8);
  v17(v8, v4);
  v18 = *(void (**)(char *, uint64_t))(v10 + 8);
  v18(v13, v9);
  v19 = swift_beginAccess();
  v26 = v9;
  v20 = *(_QWORD *)(v2 + 32);
  MEMORY[0x24BDAC7A8](v19, v21);
  *(&v25 - 2) = (uint64_t)v33;
  swift_bridgeObjectRetain();
  sub_227D6A6A4((void (*)(__int128 *))sub_227DE8E08, (uint64_t)(&v25 - 4), v20);
  swift_bridgeObjectRelease();
  sub_227E5F93C();
  v22 = swift_allocObject();
  swift_weakInit();
  v31 = sub_227DE8E60;
  v32 = v22;
  aBlock = MEMORY[0x24BDAC760];
  v28 = 1107296256;
  v29 = sub_227D5A858;
  v30 = &unk_24F08E168;
  v23 = _Block_copy(&aBlock);
  swift_retain();
  sub_227E5F960();
  MEMORY[0x22E2A991C](0, v8, v13, v23);
  _Block_release(v23);
  v17(v8, v4);
  v18(v13, v26);
  swift_release();
  return swift_release();
}

uint64_t sub_227DE6F08(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t ObjectType;
  void *v16;
  void (*v17)(char *, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t);
  uint64_t aBlock;
  uint64_t v28;
  uint64_t (*v29)(uint64_t);
  void *v30;
  uint64_t (*v31)();
  uint64_t v32;

  v3 = sub_227E5F978();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3, v5);
  v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_227E5F948();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8, v10);
  v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = (char *)v1 + *(_QWORD *)(*v1 + 128);
  swift_beginAccess();
  if (MEMORY[0x22E2AA96C](v13))
  {
    v14 = *((_QWORD *)v13 + 1);
    ObjectType = swift_getObjectType();
    (*(void (**)(_QWORD *, uint64_t, uint64_t))(v14 + 8))(v1, ObjectType, v14);
    swift_unknownObjectRelease();
  }
  sub_227E5F93C();
  v31 = nullsub_1;
  v32 = 0;
  aBlock = MEMORY[0x24BDAC760];
  v28 = 1107296256;
  v29 = sub_227D5A858;
  v30 = &unk_24F08E0A0;
  v16 = _Block_copy(&aBlock);
  sub_227E5F960();
  MEMORY[0x22E2A991C](0, v7, v12, v16);
  _Block_release(v16);
  v26 = *(void (**)(char *, uint64_t))(v4 + 8);
  v26(v7, v3);
  v17 = *(void (**)(char *, uint64_t))(v9 + 8);
  v17(v12, v8);
  v18 = swift_beginAccess();
  v25 = v3;
  v19 = v1[4];
  MEMORY[0x24BDAC7A8](v18, v20);
  *(&v24 - 2) = a1;
  swift_bridgeObjectRetain();
  sub_227D6A6A4((void (*)(__int128 *))sub_227DE8DD8, (uint64_t)(&v24 - 4), v19);
  swift_bridgeObjectRelease();
  sub_227E5F93C();
  v21 = swift_allocObject();
  swift_weakInit();
  v31 = sub_227D6FCE4;
  v32 = v21;
  aBlock = MEMORY[0x24BDAC760];
  v28 = 1107296256;
  v29 = sub_227D5A858;
  v30 = &unk_24F08E0F0;
  v22 = _Block_copy(&aBlock);
  swift_retain();
  sub_227E5F960();
  MEMORY[0x22E2A991C](0, v7, v12, v22);
  _Block_release(v22);
  v26(v7, v25);
  v17(v12, v8);
  swift_release();
  return swift_release();
}

uint64_t sub_227DE71E0(uint64_t (*a1)(uint64_t *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t result;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;

  v6 = a3 + 64;
  v7 = 1 << *(_BYTE *)(a3 + 32);
  v8 = -1;
  if (v7 < 64)
    v8 = ~(-1 << v7);
  v9 = v8 & *(_QWORD *)(a3 + 64);
  v10 = (unint64_t)(v7 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v12 = 0;
  while (v9)
  {
    v13 = __clz(__rbit64(v9));
    v9 &= v9 - 1;
    v14 = v13 | (v12 << 6);
LABEL_5:
    v18 = *(_QWORD *)(*(_QWORD *)(a3 + 48) + 8 * v14);
    result = a1(&v18);
    if (v3)
      return swift_release();
  }
  if (__OFADD__(v12++, 1))
  {
    __break(1u);
    goto LABEL_26;
  }
  if (v12 >= v10)
    return swift_release();
  v16 = *(_QWORD *)(v6 + 8 * v12);
  if (v16)
  {
LABEL_19:
    v9 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v12 << 6);
    goto LABEL_5;
  }
  v17 = v12 + 1;
  if (v12 + 1 >= v10)
    return swift_release();
  v16 = *(_QWORD *)(v6 + 8 * v17);
  if (v16)
    goto LABEL_18;
  v17 = v12 + 2;
  if (v12 + 2 >= v10)
    return swift_release();
  v16 = *(_QWORD *)(v6 + 8 * v17);
  if (v16)
    goto LABEL_18;
  v17 = v12 + 3;
  if (v12 + 3 >= v10)
    return swift_release();
  v16 = *(_QWORD *)(v6 + 8 * v17);
  if (v16)
    goto LABEL_18;
  v17 = v12 + 4;
  if (v12 + 4 >= v10)
    return swift_release();
  v16 = *(_QWORD *)(v6 + 8 * v17);
  if (v16)
  {
LABEL_18:
    v12 = v17;
    goto LABEL_19;
  }
  while (1)
  {
    v12 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v12 >= v10)
      return swift_release();
    v16 = *(_QWORD *)(v6 + 8 * v12);
    ++v17;
    if (v16)
      goto LABEL_19;
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_227DE7358()
{
  uint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t ObjectType;
  void (*v5)(uint64_t, uint64_t, uint64_t);
  uint64_t v6;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v1 = result;
    v2 = result + 64;
    swift_beginAccess();
    if (MEMORY[0x22E2AA96C](v2))
    {
      v3 = *(_QWORD *)(v1 + 72);
      ObjectType = swift_getObjectType();
      v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
      v6 = swift_retain();
      v5(v6, ObjectType, v3);
      swift_release_n();
      return swift_unknownObjectRelease();
    }
    else
    {
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_227DE741C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;

  v3 = a1 + *(_QWORD *)(*(_QWORD *)a1 + 120);
  swift_beginAccess();
  return sub_227D64AD8(v3, a2);
}

uint64_t sub_227DE747C(uint64_t (*a1)(uint64_t *), uint64_t a2, uint64_t a3)
{
  double v5;
  unsigned __int8 v6;
  uint64_t result;
  uint64_t v8;
  double v9;
  int v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  uint64_t v14;
  double v15;
  unsigned __int8 v16;
  _QWORD v17[5];
  char v18;
  char v19;

  swift_beginAccess();
  v5 = *(double *)(a3 + 48);
  v6 = *(_BYTE *)(a3 + 56);
  v14 = *(_QWORD *)(a3 + 40);
  v15 = v5;
  v16 = v6;
  result = a1(&v14);
  v8 = v14;
  v9 = v15;
  v10 = v16;
  v11 = *(_QWORD *)(a3 + 40);
  v12 = *(double *)(a3 + 48);
  v13 = *(unsigned __int8 *)(a3 + 56);
  *(_QWORD *)(a3 + 40) = v14;
  *(double *)(a3 + 48) = v9;
  *(_BYTE *)(a3 + 56) = v10;
  if (v11 != v8 || v12 != v9)
    goto LABEL_8;
  if ((_DWORD)v13 == 3)
  {
    if (v10 == 3)
      return result;
LABEL_8:
    v17[0] = v11;
    *(double *)&v17[1] = v12;
    v17[2] = v13;
    v17[3] = v8;
    *(double *)&v17[4] = v9;
    v18 = v10;
    v19 = 1;
    return sub_227DE6C18((uint64_t)v17);
  }
  if (v10 == 3 || (_DWORD)v13 != v10)
    goto LABEL_8;
  return result;
}

uint64_t sub_227DE7564(void (*a1)(char *), uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;

  v5 = sub_227D68330(&qword_253F398D0);
  MEMORY[0x24BDAC7A8](v5, v6);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a3 + *(_QWORD *)(*(_QWORD *)a3 + 120);
  swift_beginAccess();
  sub_227D5DF48(v9, (uint64_t)v8, &qword_253F398D0);
  a1(v8);
  return sub_227DE6A34((uint64_t)v8);
}

BOOL sub_227DE7620(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  int v42;
  int v43;
  uint64_t v44;
  char v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unsigned int (*v57)(uint64_t, uint64_t, uint64_t);
  BOOL v58;
  uint64_t v59;
  uint64_t *v60;
  _QWORD *v62;
  uint64_t v63;
  _QWORD *v64;
  _QWORD *v65;
  _QWORD *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;

  v4 = type metadata accessor for CRDTModelRevisionInfo();
  v68 = *(_QWORD *)(v4 - 8);
  v69 = v4;
  MEMORY[0x24BDAC7A8](v4, v5);
  v65 = (_QWORD **)((char *)&v65 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = sub_227D68330(&qword_253F3A4F0);
  MEMORY[0x24BDAC7A8](v7, v8);
  v66 = (_QWORD **)((char *)&v65 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v67 = sub_227D68330(&qword_253F3A500);
  MEMORY[0x24BDAC7A8](v67, v10);
  v70 = (uint64_t)&v65 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_227D68330(&qword_253F398D0);
  v14 = MEMORY[0x24BDAC7A8](v12, v13);
  v73 = (uint64_t)&v65 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v14, v16);
  v74 = (uint64_t)&v65 - v18;
  v20 = MEMORY[0x24BDAC7A8](v17, v19);
  v71 = (uint64_t)&v65 - v21;
  v23 = MEMORY[0x24BDAC7A8](v20, v22);
  v72 = (uint64_t)&v65 - v24;
  v26 = MEMORY[0x24BDAC7A8](v23, v25);
  v28 = (char *)&v65 - v27;
  v30 = MEMORY[0x24BDAC7A8](v26, v29);
  v32 = (char *)&v65 - v31;
  v34 = MEMORY[0x24BDAC7A8](v30, v33);
  v36 = (char *)&v65 - v35;
  v38 = MEMORY[0x24BDAC7A8](v34, v37);
  v40 = (char *)&v65 - v39;
  v41 = *(int *)(v38 + 44);
  v42 = *(unsigned __int8 *)(a1 + v41);
  v43 = *(unsigned __int8 *)(a2 + v41);
  v44 = a1;
  sub_227D5DF48(a1, (uint64_t)&v65 - v39, &qword_253F398D0);
  sub_227D5DF48(a2, (uint64_t)v36, &qword_253F398D0);
  if (v42 != v43)
  {
    sub_227D5809C((uint64_t)v36, &qword_253F398D0);
    sub_227D5809C((uint64_t)v40, &qword_253F398D0);
    sub_227D5DF48(a1, (uint64_t)v32, &qword_253F398D0);
    sub_227D5DF48(a2, (uint64_t)v28, &qword_253F398D0);
LABEL_9:
    sub_227D5809C((uint64_t)v28, &qword_253F398D0);
    sub_227D5809C((uint64_t)v32, &qword_253F398D0);
    v47 = v72;
    sub_227D5DF48(a2, v72, &qword_253F398D0);
    v48 = v71;
    sub_227D5DF48(v44, v71, &qword_253F398D0);
    goto LABEL_10;
  }
  v45 = sub_227E3F5D4((uint64_t)&v40[*(int *)(v12 + 48)], (uint64_t)&v36[*(int *)(v12 + 48)]);
  sub_227D5809C((uint64_t)v36, &qword_253F398D0);
  sub_227D5809C((uint64_t)v40, &qword_253F398D0);
  sub_227D5DF48(v44, (uint64_t)v32, &qword_253F398D0);
  sub_227D5DF48(a2, (uint64_t)v28, &qword_253F398D0);
  if ((v45 & 1) == 0)
    goto LABEL_9;
  type metadata accessor for ReadingHistoryModel(0);
  sub_227D51624(&qword_253F3A230, type metadata accessor for ReadingHistoryModel, (uint64_t)&protocol conformance descriptor for ReadingHistoryModel);
  v46 = sub_227E5FD20();
  sub_227D5809C((uint64_t)v28, &qword_253F398D0);
  sub_227D5809C((uint64_t)v32, &qword_253F398D0);
  v47 = v72;
  sub_227D5DF48(a2, v72, &qword_253F398D0);
  v48 = v71;
  sub_227D5DF48(v44, v71, &qword_253F398D0);
  if ((v46 & 1) != 0)
  {
LABEL_10:
    sub_227D5809C(v48, &qword_253F398D0);
    sub_227D5809C(v47, &qword_253F398D0);
    v50 = v74;
    sub_227D5DF48(v44, v74, &qword_253F398D0);
    v51 = v73;
    sub_227D5DF48(a2, v73, &qword_253F398D0);
    goto LABEL_11;
  }
  v49 = sub_227E5FD20();
  sub_227D5809C(v48, &qword_253F398D0);
  sub_227D5809C(v47, &qword_253F398D0);
  v50 = v74;
  sub_227D5DF48(v44, v74, &qword_253F398D0);
  v51 = v73;
  sub_227D5DF48(a2, v73, &qword_253F398D0);
  if ((v49 & 1) != 0)
  {
LABEL_11:
    sub_227D5809C(v51, &qword_253F398D0);
    v59 = v50;
    v60 = &qword_253F398D0;
LABEL_12:
    sub_227D5809C(v59, v60);
    return 0;
  }
  v52 = *(int *)(v12 + 52);
  v53 = v51 + v52;
  v54 = v70;
  v55 = v70 + *(int *)(v67 + 48);
  sub_227D5DF48(v50 + v52, v70, &qword_253F3A4F0);
  sub_227D5DF48(v53, v55, &qword_253F3A4F0);
  v56 = v69;
  v57 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v68 + 48);
  if (v57(v54, 1, v69) != 1)
  {
    v62 = v66;
    sub_227D5DF48(v54, (uint64_t)v66, &qword_253F3A4F0);
    if (v57(v55, 1, v56) != 1)
    {
      v63 = v55;
      v64 = v65;
      sub_227D5E458(v63, (uint64_t)v65, (uint64_t (*)(_QWORD))type metadata accessor for CRDTModelRevisionInfo);
      v58 = _s13BookDataStore21CRDTModelRevisionInfoV2eeoiySbAC_ACtFZ_0(v62, v64);
      sub_227D64BC4((uint64_t)v64, (uint64_t (*)(_QWORD))type metadata accessor for CRDTModelRevisionInfo);
      sub_227D5809C(v51, &qword_253F398D0);
      sub_227D5809C(v50, &qword_253F398D0);
      sub_227D64BC4((uint64_t)v62, (uint64_t (*)(_QWORD))type metadata accessor for CRDTModelRevisionInfo);
      sub_227D5809C(v54, &qword_253F3A4F0);
      return v58;
    }
    sub_227D5809C(v51, &qword_253F398D0);
    sub_227D5809C(v50, &qword_253F398D0);
    sub_227D64BC4((uint64_t)v62, (uint64_t (*)(_QWORD))type metadata accessor for CRDTModelRevisionInfo);
    goto LABEL_16;
  }
  sub_227D5809C(v51, &qword_253F398D0);
  sub_227D5809C(v50, &qword_253F398D0);
  if (v57(v55, 1, v56) != 1)
  {
LABEL_16:
    v60 = &qword_253F3A500;
    v59 = v54;
    goto LABEL_12;
  }
  sub_227D5809C(v54, &qword_253F3A4F0);
  return 1;
}

uint64_t ReadingGoals.State.booksFinishedGoal.setter(uint64_t result)
{
  _QWORD *v1;

  *v1 = result;
  return result;
}

uint64_t (*ReadingGoals.State.booksFinishedGoal.modify())()
{
  return nullsub_1;
}

void ReadingGoals.State.streakDayGoal.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 8) = a1;
}

uint64_t (*ReadingGoals.State.streakDayGoal.modify())()
{
  return nullsub_1;
}

BookDataStore::ReadingGoals::State __swiftcall ReadingGoals.State.init(booksFinishedGoal:streakDayGoal:)(Swift::Int booksFinishedGoal, Swift::Double streakDayGoal)
{
  uint64_t v2;
  BookDataStore::ReadingGoals::State result;

  *(_QWORD *)v2 = booksFinishedGoal;
  *(Swift::Double *)(v2 + 8) = streakDayGoal;
  result.streakDayGoal = streakDayGoal;
  result.booksFinishedGoal = booksFinishedGoal;
  return result;
}

void static ReadingGoals.State.initial.getter(_QWORD *a1@<X8>)
{
  *a1 = 3;
  a1[1] = 0x4072C00000000000;
}

BOOL static ReadingGoals.State.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)a1 == *(_QWORD *)a2 && *(double *)(a1 + 8) == *(double *)(a2 + 8);
}

BookDataStore::ReadingGoals::Goal_optional __swiftcall ReadingGoals.Goal.init(rawValue:)(Swift::Int rawValue)
{
  BookDataStore::ReadingGoals::Goal_optional v1;

  if (rawValue == 1)
    v1.value = BookDataStore_ReadingGoals_Goal_dailyReading;
  else
    v1.value = BookDataStore_ReadingGoals_Goal_unknownDefault;
  if (rawValue)
    return v1;
  else
    return 0;
}

void *static ReadingGoals.Goal.allCases.getter()
{
  return &unk_24F08BE78;
}

uint64_t ReadingGoals.Goal.rawValue.getter(char a1)
{
  return a1 & 1;
}

_QWORD *sub_227DE7CEC@<X0>(_QWORD *result@<X0>, char *a2@<X8>)
{
  char v2;
  char v3;

  if (*result == 1)
    v2 = 1;
  else
    v2 = 2;
  if (*result)
    v3 = v2;
  else
    v3 = 0;
  *a2 = v3;
  return result;
}

void sub_227DE7D0C(_QWORD *a1@<X8>)
{
  unsigned __int8 *v1;

  *a1 = *v1;
}

void sub_227DE7D18(_QWORD *a1@<X8>)
{
  *a1 = &unk_24F08BEA0;
}

BOOL static ReadingGoals.StateChange.Source.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  int v2;
  int v3;

  v2 = *a1;
  v3 = *a2;
  if (v2 == 3)
    return v3 == 3;
  if (v3 == 3)
    return 0;
  return v2 == v3;
}

BOOL static ReadingGoals.StateChange.ChangeOrigin.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

BOOL sub_227DE7D78(unsigned __int8 *a1, unsigned __int8 *a2)
{
  int v2;
  int v3;
  _BOOL4 v4;
  _BOOL4 v6;

  v2 = *a1;
  v3 = *a2;
  v4 = v3 == 3;
  v6 = v3 != 3 && v2 == v3;
  if (v2 == 3)
    return v4;
  else
    return v6;
}

uint64_t ReadingGoals.StateChange.ChangeOrigin.hash(into:)()
{
  return sub_227E60728();
}

uint64_t ReadingGoals.StateChange.ChangeOrigin.hashValue.getter()
{
  sub_227E6071C();
  sub_227E60728();
  return sub_227E60734();
}

void ReadingGoals.StateChange.source.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 16);
}

double ReadingGoals.StateChange.init(state:source:)@<D0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X8>)
{
  double result;
  char v4;

  result = *(double *)(a1 + 8);
  v4 = *a2;
  *(_QWORD *)a3 = *(_QWORD *)a1;
  *(double *)(a3 + 8) = result;
  *(_BYTE *)(a3 + 16) = v4;
  return result;
}

uint64_t ReadingGoalsController.observable.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(_QWORD *)(v1 + 56);
  a1[3] = sub_227D68330((uint64_t *)&unk_253F3AC40);
  a1[4] = &protocol witness table for <> ObservableContainer<A>;
  *a1 = v3;
  return swift_retain();
}

double ReadingGoalsController.state.getter@<D0>(double *a1@<X8>)
{
  double result;
  uint64_t v3;
  double v4;

  sub_227E602CC();
  result = v4;
  *(_QWORD *)a1 = v3;
  a1[1] = v4;
  return result;
}

uint64_t ReadingGoalsController.__allocating_init(dataSource:)(_QWORD *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  ReadingGoalsController.init(dataSource:)(a1);
  return v2;
}

uint64_t sub_227DE7F14()
{
  uint64_t result;
  id v1;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_227E60248();
    if (qword_253F39FF8[0] != -1)
      swift_once();
    v1 = (id)qword_253F39FF0;
    sub_227E5F564();

    sub_227DE7FE0();
    return swift_release();
  }
  return result;
}

uint64_t sub_227DE7FE0()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  NSObject *v9;
  _QWORD *v10;
  uint64_t v11;
  void *v12;
  uint64_t result;
  _BYTE v14[16];
  uint64_t v15;
  uint64_t v16;
  uint64_t aBlock;
  uint64_t v18;
  uint64_t (*v19)(uint64_t);
  void *v20;
  uint64_t (*v21)();
  uint64_t v22;

  v1 = v0;
  swift_beginAccess();
  v2 = v0[5];
  v3 = v0[6];
  v4 = sub_227D572A4(v0 + 2, v2);
  v5 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v4, v4);
  v7 = &v14[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(_BYTE *))(v5 + 16))(v7);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v3 + 8))(&aBlock, v2, v3);
  (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v2);
  v8 = v1[7];
  v15 = aBlock;
  v16 = v18;
  v9 = *(NSObject **)(v8 + 16);
  v10 = (_QWORD *)swift_allocObject();
  v10[2] = sub_227DE8E68;
  v10[3] = v14;
  v10[4] = v8;
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = sub_227DE8EFC;
  *(_QWORD *)(v11 + 24) = v10;
  v21 = sub_227D63158;
  v22 = v11;
  aBlock = MEMORY[0x24BDAC760];
  v18 = 1107296256;
  v19 = sub_227D62A60;
  v20 = &unk_24F08E1E0;
  v12 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v9, v12);
  _Block_release(v12);
  LOBYTE(v9) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((v9 & 1) != 0)
    __break(1u);
  return result;
}

uint64_t ReadingGoalsController.deinit()
{
  uint64_t v0;

  sub_227D58120(v0 + 16);
  swift_release();
  return v0;
}

uint64_t ReadingGoalsController.__deallocating_deinit()
{
  uint64_t v0;

  sub_227D58120(v0 + 16);
  swift_release();
  return swift_deallocClassInstance();
}

Swift::Void __swiftcall ReadingGoalsController.changeBooksFinishedGoal(to:)(Swift::Int to)
{
  uint64_t v1;
  void *v3;
  uint64_t (*v4)();
  uint64_t v5;
  NSObject *v6;
  _QWORD *v7;
  uint64_t v8;
  void *v9;
  _QWORD v10[4];
  uint64_t aBlock;
  uint64_t v12;
  uint64_t (*v13)(uint64_t);
  void *v14;
  uint64_t (*v15)();
  uint64_t v16;
  _QWORD v17[2];

  swift_beginAccess();
  sub_227D572C8(v1 + 16, (uint64_t)&aBlock);
  v3 = v14;
  v4 = v15;
  sub_227D572A4(&aBlock, (uint64_t)v14);
  (*((void (**)(Swift::Int, void *, uint64_t (*)()))v4 + 5))(to, v3, v4);
  sub_227D58120((uint64_t)&aBlock);
  v5 = *(_QWORD *)(v1 + 56);
  sub_227E602CC();
  v17[1] = v12;
  v17[0] = to;
  v10[2] = v17;
  v6 = *(NSObject **)(v5 + 16);
  v7 = (_QWORD *)swift_allocObject();
  v7[2] = sub_227DE8EBC;
  v7[3] = v10;
  v7[4] = v5;
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = sub_227DE8894;
  *(_QWORD *)(v8 + 24) = v7;
  v15 = sub_227D62A80;
  v16 = v8;
  aBlock = MEMORY[0x24BDAC760];
  v12 = 1107296256;
  v13 = sub_227D62A60;
  v14 = &unk_24F08DC70;
  v9 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v6, v9);
  _Block_release(v9);
  LOBYTE(v6) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  if ((v6 & 1) != 0)
    __break(1u);
}

Swift::Void __swiftcall ReadingGoalsController.changeDailyGoal(to:)(Swift::Double to)
{
  uint64_t v1;
  void *v3;
  uint64_t (*v4)();
  uint64_t v5;
  NSObject *v6;
  _QWORD *v7;
  uint64_t v8;
  void *v9;
  _QWORD v10[4];
  _QWORD aBlock[3];
  void *v12;
  uint64_t (*v13)();
  uint64_t v14;
  _QWORD v15[2];

  swift_beginAccess();
  sub_227D572C8(v1 + 16, (uint64_t)aBlock);
  v3 = v12;
  v4 = v13;
  sub_227D572A4(aBlock, (uint64_t)v12);
  (*((void (**)(void *, uint64_t (*)(), Swift::Double))v4 + 6))(v3, v4, to);
  sub_227D58120((uint64_t)aBlock);
  v5 = *(_QWORD *)(v1 + 56);
  sub_227E602CC();
  v15[0] = aBlock[0];
  *(Swift::Double *)&v15[1] = to;
  v10[2] = v15;
  v6 = *(NSObject **)(v5 + 16);
  v7 = (_QWORD *)swift_allocObject();
  v7[2] = sub_227DE88B0;
  v7[3] = v10;
  v7[4] = v5;
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = sub_227DE8EFC;
  *(_QWORD *)(v8 + 24) = v7;
  v13 = sub_227D63158;
  v14 = v8;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_227D62A60;
  v12 = &unk_24F08DCE8;
  v9 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v6, v9);
  _Block_release(v9);
  LOBYTE(v6) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  if ((v6 & 1) != 0)
    __break(1u);
}

Swift::Void __swiftcall ReadingGoalsController.clearData()()
{
  _QWORD *v0;
  _QWORD *v1;
  void *v2;
  uint64_t (*v3)();
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  NSObject *v11;
  _QWORD *v12;
  uint64_t v13;
  void *v14;
  _BYTE v15[16];
  uint64_t v16;
  uint64_t v17;
  uint64_t aBlock;
  uint64_t v19;
  uint64_t (*v20)(uint64_t);
  void *v21;
  uint64_t (*v22)();
  uint64_t v23;

  v1 = v0;
  swift_beginAccess();
  sub_227D572C8((uint64_t)(v0 + 2), (uint64_t)&aBlock);
  v2 = v21;
  v3 = v22;
  sub_227D572A4(&aBlock, (uint64_t)v21);
  (*((void (**)(void *, uint64_t (*)()))v3 + 7))(v2, v3);
  sub_227D58120((uint64_t)&aBlock);
  v4 = v0[5];
  v5 = v0[6];
  v6 = sub_227D572A4(v0 + 2, v4);
  v7 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v6, v6);
  v9 = &v15[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(_BYTE *))(v7 + 16))(v9);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v5 + 8))(&aBlock, v4, v5);
  (*(void (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v4);
  v10 = v1[7];
  v16 = aBlock;
  v17 = v19;
  v11 = *(NSObject **)(v10 + 16);
  v12 = (_QWORD *)swift_allocObject();
  v12[2] = sub_227DE8904;
  v12[3] = v15;
  v12[4] = v10;
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = sub_227DE8EFC;
  *(_QWORD *)(v13 + 24) = v12;
  v22 = sub_227D63158;
  v23 = v13;
  aBlock = MEMORY[0x24BDAC760];
  v19 = 1107296256;
  v20 = sub_227D62A60;
  v21 = &unk_24F08DD60;
  v14 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v11, v14);
  _Block_release(v14);
  LOBYTE(v11) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  if ((v11 & 1) != 0)
    __break(1u);
}

void sub_227DE87B8(Swift::Int a1)
{
  ReadingGoalsController.changeBooksFinishedGoal(to:)(a1);
}

void sub_227DE87D8(Swift::Double a1)
{
  ReadingGoalsController.changeDailyGoal(to:)(a1);
}

void sub_227DE87F8()
{
  ReadingGoalsController.clearData()();
}

uint64_t _s13BookDataStore12ReadingGoalsO11StateChangeV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  int v3;
  int v4;

  if (*(_QWORD *)a1 != *(_QWORD *)a2 || *(double *)(a1 + 8) != *(double *)(a2 + 8))
    return 0;
  v3 = *(unsigned __int8 *)(a1 + 16);
  v4 = *(unsigned __int8 *)(a2 + 16);
  if (v3 == 3)
  {
    if (v4 != 3)
      return 0;
  }
  else if (v4 == 3 || v3 != v4)
  {
    return 0;
  }
  return 1;
}

uint64_t sub_227DE8868()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_227DE888C()
{
  return sub_227DE7F14();
}

uint64_t sub_227DE8894()
{
  uint64_t v0;

  return sub_227DE747C(*(uint64_t (**)(uint64_t *))(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t sub_227DE88A0()
{
  return swift_deallocObject();
}

double sub_227DE88B0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  double result;

  v2 = *(_QWORD *)(v1 + 16);
  result = *(double *)(v2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)v2;
  *(double *)(a1 + 8) = result;
  *(_BYTE *)(a1 + 16) = 1;
  return result;
}

uint64_t sub_227DE88D0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_227DE88F4()
{
  return swift_deallocObject();
}

double sub_227DE8904(uint64_t a1)
{
  uint64_t v1;
  double result;

  result = *(double *)(v1 + 24);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 16);
  *(double *)(a1 + 8) = result;
  *(_BYTE *)(a1 + 16) = 0;
  return result;
}

uint64_t sub_227DE891C()
{
  return swift_deallocObject();
}

unint64_t sub_227DE8930()
{
  unint64_t result;

  result = qword_255928C60;
  if (!qword_255928C60)
  {
    result = MEMORY[0x22E2AA7D4](&protocol conformance descriptor for ReadingGoals.Goal, &type metadata for ReadingGoals.Goal);
    atomic_store(result, (unint64_t *)&qword_255928C60);
  }
  return result;
}

uint64_t sub_227DE8974()
{
  return sub_227D515E4(&qword_255928C68, &qword_255928C70, MEMORY[0x24BEE12E0]);
}

unint64_t sub_227DE89A4()
{
  unint64_t result;

  result = qword_255928C78;
  if (!qword_255928C78)
  {
    result = MEMORY[0x22E2AA7D4](&protocol conformance descriptor for ReadingGoals.StateChange.ChangeOrigin, &type metadata for ReadingGoals.StateChange.ChangeOrigin);
    atomic_store(result, (unint64_t *)&qword_255928C78);
  }
  return result;
}

ValueMetadata *type metadata accessor for ReadingGoals()
{
  return &type metadata for ReadingGoals;
}

uint64_t storeEnumTagSinglePayload for ReadingGoals.Goal(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_227DE8A44 + 4 * byte_227E6FD75[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_227DE8A78 + 4 * byte_227E6FD70[v4]))();
}

uint64_t sub_227DE8A78(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_227DE8A80(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x227DE8A88);
  return result;
}

uint64_t sub_227DE8A94(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x227DE8A9CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_227DE8AA0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_227DE8AA8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ReadingGoals.Goal()
{
  return &type metadata for ReadingGoals.Goal;
}

uint64_t getEnumTagSinglePayload for ReadingGoals.StateChange.Source(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v2;
  unsigned int v3;
  uint64_t v4;
  unsigned int v6;
  BOOL v7;
  unsigned int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFD)
  {
    v6 = *a1;
    v7 = v6 >= 3;
    v8 = v6 - 3;
    if (!v7)
      v8 = -1;
    if (v8 + 1 >= 2)
      return v8;
    else
      return 0;
  }
  else
  {
    v2 = a2 + 3;
    if (a2 + 3 >= 0xFFFF00)
      v3 = 4;
    else
      v3 = 2;
    if (v2 >> 8 < 0xFF)
      v3 = 1;
    if (v2 >= 0x100)
      v4 = v3;
    else
      v4 = 0;
    return ((uint64_t (*)(void))((char *)&loc_227DE8B14 + 4 * byte_227E6FD7A[v4]))();
  }
}

uint64_t storeEnumTagSinglePayload for ReadingGoals.StateChange.Source(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  unsigned int v3;
  int v4;
  uint64_t v5;

  v3 = a3 + 3;
  if (a3 + 3 >= 0xFFFF00)
    v4 = 4;
  else
    v4 = 2;
  if (v3 >> 8 < 0xFF)
    v4 = 1;
  if (v3 >= 0x100)
    LODWORD(v5) = v4;
  else
    LODWORD(v5) = 0;
  if (a3 >= 0xFD)
    v5 = v5;
  else
    v5 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_227DE8BBC + 4 * byte_227E6FD84[v5]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_227DE8BF0 + 4 * byte_227E6FD7F[v5]))();
}

uint64_t sub_227DE8BF0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_227DE8BF8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x227DE8C00);
  return result;
}

uint64_t sub_227DE8C0C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x227DE8C14);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_227DE8C18(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_227DE8C20(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_227DE8C2C(unsigned __int8 *a1)
{
  unsigned int v1;

  v1 = *a1;
  if (v1 >= 3)
    return v1 - 2;
  else
    return 0;
}

_BYTE *sub_227DE8C40(_BYTE *result, int a2)
{
  if (a2)
    *result = a2 + 2;
  return result;
}

ValueMetadata *type metadata accessor for ReadingGoals.StateChange.Source()
{
  return &type metadata for ReadingGoals.StateChange.Source;
}

uint64_t storeEnumTagSinglePayload for ReadingGoals.StateChange.ChangeOrigin(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_227DE8CAC + 4 * byte_227E6FD8E[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_227DE8CE0 + 4 * byte_227E6FD89[v4]))();
}

uint64_t sub_227DE8CE0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_227DE8CE8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x227DE8CF0);
  return result;
}

uint64_t sub_227DE8CFC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x227DE8D04);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_227DE8D08(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_227DE8D10(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ReadingGoals.StateChange.ChangeOrigin()
{
  return &type metadata for ReadingGoals.StateChange.ChangeOrigin;
}

uint64_t dispatch thunk of ReadingGoalsEventProcessor.changeBooksFinishedGoal(to:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of ReadingGoalsEventProcessor.changeDailyGoal(to:)(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of ReadingGoalsEventProcessor.clearData()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of ReadingGoalsDataSource.state.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of ReadingGoalsDataSource.onRemoteChange.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of ReadingGoalsDataSource.onRemoteChange.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t dispatch thunk of ReadingGoalsDataSource.onRemoteChange.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of ReadingGoalsDataSource.changeBooksFinishedGoal(to:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t dispatch thunk of ReadingGoalsDataSource.changeDailyGoal(to:)(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of ReadingGoalsDataSource.clearData()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t method lookup function for ReadingGoalsController()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ReadingGoalsController.__allocating_init(dataSource:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t sub_227DE8D90(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_227D68330(&qword_253F398D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_227DE8DD8(uint64_t (**a1)(_QWORD))
{
  uint64_t v1;

  return (*a1)(*(_QWORD *)(v1 + 16));
}

uint64_t sub_227DE8E08(uint64_t (**a1)(_OWORD *))
{
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(_OWORD *);
  uint64_t v4;
  char v5;
  char v6;
  __int128 v7;
  _OWORD v9[2];
  uint64_t v10;
  char v11;
  char v12;

  v2 = *(_QWORD *)(v1 + 16);
  v3 = *a1;
  v4 = *(_QWORD *)(v2 + 32);
  v5 = *(_BYTE *)(v2 + 40);
  v6 = *(_BYTE *)(v2 + 41);
  v7 = *(_OWORD *)(v2 + 16);
  v9[0] = *(_OWORD *)v2;
  v9[1] = v7;
  v10 = v4;
  v11 = v5;
  v12 = v6;
  return v3(v9);
}

uint64_t sub_227DE8E60()
{
  return sub_227DE7358();
}

double sub_227DE8E68(uint64_t a1)
{
  uint64_t v1;
  double result;

  result = *(double *)(v1 + 24);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 16);
  *(double *)(a1 + 8) = result;
  *(_BYTE *)(a1 + 16) = 3;
  return result;
}

uint64_t sub_227DE8E84()
{
  return swift_deallocObject();
}

uint64_t sub_227DE8EE8(uint64_t (**a1)(_QWORD))
{
  return sub_227DE8DD8(a1);
}

uint64_t sub_227DE8F00()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t Params;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  _QWORD v37[2];
  uint64_t v38;
  char *v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  __int128 v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;

  v1 = v0;
  v2 = type metadata accessor for PBPropertyBookImpressionParam(0);
  MEMORY[0x24BDAC7A8](v2, v3);
  v40 = (char *)v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = type metadata accessor for PBPropertyMarkedAsFinishedParam(0);
  MEMORY[0x24BDAC7A8](v38, v5);
  v39 = (char *)v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37[0] = type metadata accessor for PBPropertySingleFloatParam(0);
  MEMORY[0x24BDAC7A8](v37[0], v7);
  v37[1] = (char *)v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  Params = type metadata accessor for PBPropertyBookReadParams(0);
  MEMORY[0x24BDAC7A8](Params, v10);
  v41 = (char *)v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_227D68330(&qword_255928C90);
  MEMORY[0x24BDAC7A8](v12, v13);
  *(_QWORD *)&v44 = (char *)v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_227E5F27C();
  v16 = *(_QWORD *)(v15 - 8);
  v42 = v15;
  v43 = v16;
  MEMORY[0x24BDAC7A8](v15, v17);
  v19 = (char *)v37 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_227D68330(&qword_255928C98);
  MEMORY[0x24BDAC7A8](v20, v21);
  v23 = (char *)v37 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = sub_227E5F3C0();
  v25 = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24, v26);
  v28 = (char *)v37 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = 0;
  v47 = 0xE000000000000000;
  v29 = type metadata accessor for PBPropertyValue(0);
  swift_bridgeObjectRetain();
  sub_227E6002C();
  swift_bridgeObjectRelease();
  sub_227E6002C();
  v45 = *v0;
  sub_227E60674();
  sub_227E6002C();
  swift_bridgeObjectRelease();
  sub_227E6002C();
  sub_227D5DF48((uint64_t)v0 + *(int *)(v29 + 28), (uint64_t)v23, &qword_255928C98);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24) == 1)
  {
    sub_227E5F3B4();
    sub_227D5809C((uint64_t)v23, &qword_255928C98);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v28, v23, v24);
  }
  sub_227E5F3A8();
  (*(void (**)(char *, uint64_t))(v25 + 8))(v28, v24);
  sub_227DE98DC();
  v30 = v42;
  sub_227E60674();
  sub_227E6002C();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v43 + 8))(v19, v30);
  v31 = v46;
  v32 = v47;
  v33 = v44;
  sub_227D5DF48((uint64_t)v1 + *(int *)(v29 + 20), v44, &qword_255928C90);
  v34 = type metadata accessor for PBPropertyValue.OneOf_Params(0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 48))(v33, 1, v34) != 1)
  {
    v35 = (char *)&loc_227DE92C4 + 4 * byte_227E700B8[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v46 = v31;
  v47 = v32;
  sub_227E6002C();
  swift_bridgeObjectRelease();
  return v46;
}

uint64_t sub_227DE95DC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  _QWORD v24[2];
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;

  v1 = v0;
  v2 = type metadata accessor for PBPropertyValue(0);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2, v4);
  v6 = (char *)v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_227D68330(&qword_255928C88);
  MEMORY[0x24BDAC7A8](v7, v8);
  v10 = (char *)v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for PBPropertyConfiguration(0);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11, v13);
  v15 = (_QWORD *)((char *)v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v27 = 0;
  v28 = 0xE000000000000000;
  v16 = type metadata accessor for PBPropertyBundle(0);
  sub_227D5DF48((uint64_t)v1 + *(int *)(v16 + 28), (uint64_t)v10, &qword_255928C88);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    *v15 = 0;
    v15[1] = 0;
    v15[2] = 0;
    v15[3] = 0xE000000000000000;
    v15[4] = 0;
    _s13BookDataStore18PBPropertyNoParamsVACycfC_0();
    sub_227D5809C((uint64_t)v10, &qword_255928C88);
  }
  else
  {
    sub_227D5E458((uint64_t)v10, (uint64_t)v15, type metadata accessor for PBPropertyConfiguration);
  }
  swift_bridgeObjectRetain();
  sub_227D64BC4((uint64_t)v15, type metadata accessor for PBPropertyConfiguration);
  sub_227E6002C();
  swift_bridgeObjectRelease();
  sub_227E6002C();
  v17 = *v1;
  v18 = *(_QWORD *)(*v1 + 16);
  if (v18)
  {
    v19 = v17 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    v20 = *(_QWORD *)(v3 + 72);
    v24[1] = v17;
    swift_bridgeObjectRetain_n();
    v21 = 0;
    v22 = 0xE000000000000000;
    do
    {
      sub_227DE9898(v19, (uint64_t)v6);
      v25 = v21;
      v26 = v22;
      swift_bridgeObjectRetain();
      sub_227E6002C();
      swift_bridgeObjectRelease();
      sub_227DE8F00();
      sub_227E6002C();
      swift_bridgeObjectRelease();
      v21 = v25;
      v22 = v26;
      sub_227D64BC4((uint64_t)v6, type metadata accessor for PBPropertyValue);
      swift_bridgeObjectRelease();
      v19 += v20;
      --v18;
    }
    while (v18);
    swift_bridgeObjectRelease_n();
  }
  sub_227E6002C();
  swift_bridgeObjectRelease();
  return v27;
}

uint64_t sub_227DE9898(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PBPropertyValue(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_227DE98DC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2559282B8;
  if (!qword_2559282B8)
  {
    v1 = sub_227E5F27C();
    result = MEMORY[0x22E2AA7D4](MEMORY[0x24BDCE988], v1);
    atomic_store(result, (unint64_t *)&qword_2559282B8);
  }
  return result;
}

uint64_t ReadingHistory.Day.readingTime.setter(uint64_t result)
{
  _QWORD *v1;

  *v1 = result;
  return result;
}

uint64_t (*ReadingHistory.Day.readingTime.modify())()
{
  return nullsub_1;
}

uint64_t ReadingHistory.Day.goal.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 8) = result;
  return result;
}

uint64_t (*ReadingHistory.Day.goal.modify())()
{
  return nullsub_1;
}

uint64_t ReadingHistory.Day.isStreakDay.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 16) = result;
  return result;
}

uint64_t (*ReadingHistory.Day.isStreakDay.modify())()
{
  return nullsub_1;
}

uint64_t ReadingHistory.Day.description.getter()
{
  sub_227E60494();
  swift_bridgeObjectRelease();
  sub_227E60674();
  sub_227E6002C();
  swift_bridgeObjectRelease();
  sub_227E6002C();
  sub_227E60674();
  sub_227E6002C();
  swift_bridgeObjectRelease();
  sub_227E6002C();
  sub_227E6002C();
  swift_bridgeObjectRelease();
  sub_227E6002C();
  return 0x3A656D69747BLL;
}

BookDataStore::ReadingHistory::Day __swiftcall ReadingHistory.Day.init(readingTime:goal:isStreakDay:)(Swift::Int readingTime, Swift::Int goal, Swift::Bool isStreakDay)
{
  uint64_t v3;
  BookDataStore::ReadingHistory::Day result;

  *(_QWORD *)v3 = readingTime;
  *(_QWORD *)(v3 + 8) = goal;
  *(_BYTE *)(v3 + 16) = isStreakDay;
  result.goal = goal;
  result.readingTime = readingTime;
  result.isStreakDay = isStreakDay;
  return result;
}

uint64_t static ReadingHistory.Day.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8))
    return (*(unsigned __int8 *)(a2 + 16) ^ *(unsigned __int8 *)(a1 + 16) ^ 1) & 1;
  else
    return 0;
}

uint64_t sub_227DE9B08()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 1818324839;
  if (*v0 != 1)
    v1 = 0x6B61657274537369;
  if (*v0)
    return v1;
  else
    return 0x54676E6964616572;
}

uint64_t sub_227DE9B6C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_227DEEB8C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_227DE9B90()
{
  sub_227DE9D34();
  return sub_227E60758();
}

uint64_t sub_227DE9BB8()
{
  sub_227DE9D34();
  return sub_227E60764();
}

uint64_t ReadingHistory.Day.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _QWORD v10[2];
  int v11;
  char v12;
  char v13;
  char v14;

  v4 = sub_227D68330(&qword_255928CA0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v6);
  v8 = (char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10[1] = *(_QWORD *)(v1 + 8);
  v11 = *(unsigned __int8 *)(v1 + 16);
  sub_227D572A4(a1, a1[3]);
  sub_227DE9D34();
  sub_227E6074C();
  v14 = 0;
  sub_227E60650();
  if (!v2)
  {
    v13 = 1;
    sub_227E60650();
    v12 = 2;
    sub_227E60638();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
}

unint64_t sub_227DE9D34()
{
  unint64_t result;

  result = qword_255928CA8;
  if (!qword_255928CA8)
  {
    result = MEMORY[0x22E2AA7D4](&unk_227E70BC4, &type metadata for ReadingHistory.Day.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255928CA8);
  }
  return result;
}

uint64_t ReadingHistory.Day.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v12;
  char v13;
  uint64_t v14;
  char v15;
  char v16;
  char v17;

  v5 = sub_227D68330(&qword_255928CB0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_227D572A4(a1, a1[3]);
  sub_227DE9D34();
  sub_227E60740();
  if (!v2)
  {
    v17 = 0;
    v10 = sub_227E605FC();
    v16 = 1;
    v12 = sub_227E605FC();
    v15 = 2;
    v13 = sub_227E605E4();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    *(_QWORD *)a2 = v10;
    *(_QWORD *)(a2 + 8) = v12;
    *(_BYTE *)(a2 + 16) = v13 & 1;
  }
  return sub_227D58120((uint64_t)a1);
}

uint64_t sub_227DE9EF0(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8))
    return (*(unsigned __int8 *)(a2 + 16) ^ *(unsigned __int8 *)(a1 + 16) ^ 1) & 1;
  else
    return 0;
}

uint64_t sub_227DE9F24@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return ReadingHistory.Day.init(from:)(a1, a2);
}

uint64_t sub_227DE9F38(_QWORD *a1)
{
  return ReadingHistory.Day.encode(to:)(a1);
}

uint64_t ReadingHistory.DayEntry.date.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*ReadingHistory.DayEntry.date.modify())()
{
  return nullsub_1;
}

__n128 ReadingHistory.DayEntry.day.setter(__n128 *a1)
{
  __n128 *v1;
  unsigned __int8 v2;
  __n128 result;

  v2 = a1[1].n128_u8[0];
  result = *a1;
  v1[1] = *a1;
  v1[2].n128_u8[0] = v2;
  return result;
}

uint64_t (*ReadingHistory.DayEntry.day.modify())()
{
  return nullsub_1;
}

uint64_t ReadingHistory.DayEntry.description.getter()
{
  swift_bridgeObjectRetain();
  sub_227E6002C();
  swift_bridgeObjectRelease();
  sub_227E6002C();
  ReadingHistory.Day.description.getter();
  sub_227E6002C();
  swift_bridgeObjectRelease();
  sub_227E6002C();
  return 123;
}

void __swiftcall ReadingHistory.DayEntry.init(date:day:)(BookDataStore::ReadingHistory::DayEntry *__return_ptr retstr, Swift::String date, BookDataStore::ReadingHistory::Day day)
{
  char v3;

  v3 = *(_BYTE *)(day.readingTime + 16);
  retstr->date = date;
  *(_OWORD *)&retstr->day.readingTime = *(_OWORD *)day.readingTime;
  retstr->day.isStreakDay = v3;
}

uint64_t sub_227DEA080()
{
  _BYTE *v0;

  if (*v0)
    return 7954788;
  else
    return 1702125924;
}

uint64_t sub_227DEA0AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_227DEED00(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_227DEA0D0()
{
  sub_227DED4F0();
  return sub_227E60758();
}

uint64_t sub_227DEA0F8()
{
  sub_227DED4F0();
  return sub_227E60764();
}

uint64_t ReadingHistory.DayEntry.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  int v16;
  char v17;

  v4 = sub_227D68330(&qword_255928CB8);
  v12 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v5);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(v1 + 16);
  v10 = *(_QWORD *)(v1 + 24);
  v11 = v8;
  v16 = *(unsigned __int8 *)(v1 + 32);
  sub_227D572A4(a1, a1[3]);
  sub_227DED4F0();
  sub_227E6074C();
  LOBYTE(v13) = 0;
  sub_227E6062C();
  if (!v2)
  {
    v13 = v11;
    v14 = v10;
    v15 = v16;
    v17 = 1;
    sub_227DED534();
    sub_227E6065C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v7, v4);
}

uint64_t ReadingHistory.DayEntry.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  __int128 v14;
  __int128 v16;
  char v17;
  char v18;

  v5 = sub_227D68330(&qword_255928CD0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_227D572A4(a1, a1[3]);
  sub_227DED4F0();
  sub_227E60740();
  if (v2)
    return sub_227D58120((uint64_t)a1);
  LOBYTE(v16) = 0;
  v10 = sub_227E605D8();
  v12 = v11;
  v18 = 1;
  sub_227DED578();
  swift_bridgeObjectRetain();
  sub_227E60608();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  v13 = v17;
  v14 = v16;
  *(_QWORD *)a2 = v10;
  *(_QWORD *)(a2 + 8) = v12;
  *(_OWORD *)(a2 + 16) = v14;
  *(_BYTE *)(a2 + 32) = v13;
  sub_227D58120((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_227DEA430@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return ReadingHistory.DayEntry.init(from:)(a1, a2);
}

uint64_t sub_227DEA444(_QWORD *a1)
{
  return ReadingHistory.DayEntry.encode(to:)(a1);
}

uint64_t ReadingHistory.Streak.length.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for ReadingHistory.Streak(0) + 20));
}

uint64_t ReadingHistory.Streak.description.getter()
{
  sub_227E60494();
  swift_bridgeObjectRelease();
  sub_227E5F27C();
  sub_227D51624((unint64_t *)&qword_2559282B8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE988]);
  sub_227E60674();
  sub_227E6002C();
  swift_bridgeObjectRelease();
  sub_227E6002C();
  type metadata accessor for ReadingHistory.Streak(0);
  sub_227E60674();
  sub_227E6002C();
  swift_bridgeObjectRelease();
  sub_227E6002C();
  return 0x65746144646E657BLL;
}

uint64_t ReadingHistory.Streak.init(endDate:length:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t result;

  v6 = sub_227E5F27C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a3, a1, v6);
  result = type metadata accessor for ReadingHistory.Streak(0);
  *(_QWORD *)(a3 + *(int *)(result + 20)) = a2;
  return result;
}

BOOL static ReadingHistory.Streak.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  if ((sub_227E5F258() & 1) == 0)
    return 0;
  v4 = type metadata accessor for ReadingHistory.Streak(0);
  return *(_QWORD *)(a1 + *(int *)(v4 + 20)) == *(_QWORD *)(a2 + *(int *)(v4 + 20));
}

uint64_t sub_227DEA648()
{
  _BYTE *v0;

  if (*v0)
    return 0x6874676E656CLL;
  else
    return 0x65746144646E65;
}

uint64_t sub_227DEA680@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_227DEEDD0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_227DEA6A4()
{
  sub_227DED5BC();
  return sub_227E60758();
}

uint64_t sub_227DEA6CC()
{
  sub_227DED5BC();
  return sub_227E60764();
}

uint64_t ReadingHistory.Streak.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  _BYTE v9[16];

  v3 = sub_227D68330(&qword_255928CE0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3, v5);
  v7 = &v9[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_227D572A4(a1, a1[3]);
  sub_227DED5BC();
  sub_227E6074C();
  v9[15] = 0;
  sub_227E5F27C();
  sub_227D51624(&qword_255928258, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE920]);
  sub_227E6065C();
  if (!v1)
  {
    type metadata accessor for ReadingHistory.Streak(0);
    v9[14] = 1;
    sub_227E60650();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v7, v3);
}

uint64_t ReadingHistory.Streak.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, char *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  char v34;

  v28 = a2;
  v4 = sub_227E5F27C();
  v5 = *(_QWORD *)(v4 - 8);
  v31 = v4;
  v32 = v5;
  MEMORY[0x24BDAC7A8](v4, v6);
  v29 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = sub_227D68330(&qword_255928CF0);
  v8 = *(_QWORD *)(v30 - 8);
  MEMORY[0x24BDAC7A8](v30, v9);
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for ReadingHistory.Streak(0);
  MEMORY[0x24BDAC7A8](v12, v13);
  v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_227D572A4(a1, a1[3]);
  sub_227DED5BC();
  sub_227E60740();
  if (v2)
    return sub_227D58120((uint64_t)a1);
  v26 = v12;
  v27 = v15;
  v16 = v8;
  v17 = v32;
  v34 = 0;
  sub_227D51624(&qword_255928278, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE960]);
  v18 = v29;
  v19 = v30;
  v20 = v31;
  sub_227E60608();
  v21 = *(void (**)(char *, char *, uint64_t))(v17 + 32);
  v22 = (uint64_t)v27;
  v21(v27, v18, v20);
  v33 = 1;
  v23 = sub_227E605FC();
  (*(void (**)(char *, uint64_t))(v16 + 8))(v11, v19);
  *(_QWORD *)(v22 + *(int *)(v26 + 20)) = v23;
  sub_227D5DFFC(v22, v28, type metadata accessor for ReadingHistory.Streak);
  sub_227D58120((uint64_t)a1);
  return sub_227D64BC4(v22, type metadata accessor for ReadingHistory.Streak);
}

BOOL sub_227DEAABC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (sub_227E5F258() & 1) != 0 && *(_QWORD *)(a1 + *(int *)(a3 + 20)) == *(_QWORD *)(a2 + *(int *)(a3 + 20));
}

uint64_t sub_227DEAB0C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return ReadingHistory.Streak.init(from:)(a1, a2);
}

uint64_t sub_227DEAB20(_QWORD *a1)
{
  return ReadingHistory.Streak.encode(to:)(a1);
}

uint64_t ReadingHistory.State.currentStreak.setter(uint64_t result)
{
  _QWORD *v1;

  *v1 = result;
  return result;
}

uint64_t (*ReadingHistory.State.currentStreak.modify())()
{
  return nullsub_1;
}

uint64_t ReadingHistory.State.longestStreak.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for ReadingHistory.State(0) + 20);
  return sub_227DED600(a1, v3);
}

uint64_t (*ReadingHistory.State.longestStreak.modify())()
{
  type metadata accessor for ReadingHistory.State(0);
  return nullsub_1;
}

uint64_t ReadingHistory.State.today.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t result;
  uint64_t v6;

  v2 = *a1;
  v3 = a1[1];
  v4 = *((_BYTE *)a1 + 16);
  result = type metadata accessor for ReadingHistory.State(0);
  v6 = v1 + *(int *)(result + 24);
  *(_QWORD *)v6 = v2;
  *(_QWORD *)(v6 + 8) = v3;
  *(_BYTE *)(v6 + 16) = v4;
  return result;
}

uint64_t (*ReadingHistory.State.today.modify())()
{
  type metadata accessor for ReadingHistory.State(0);
  return nullsub_1;
}

uint64_t ReadingHistory.State.readingHistory.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;

  v3 = *(int *)(type metadata accessor for ReadingHistory.State(0) + 28);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + v3) = a1;
  return result;
}

uint64_t (*ReadingHistory.State.readingHistory.modify())()
{
  type metadata accessor for ReadingHistory.State(0);
  return nullsub_1;
}

uint64_t ReadingHistory.State.description.getter()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int *v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  char *v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD v35[2];
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  __int128 v42;
  char v43;

  v1 = v0;
  v2 = sub_227D68330((uint64_t *)&unk_253F39C20);
  MEMORY[0x24BDAC7A8](v2, v3);
  v5 = (char *)v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_227D68330(&qword_253F3B090);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_227E700C0;
  *(_QWORD *)&v42 = *v0;
  sub_227DED648();
  v7 = sub_227E603C8();
  v9 = v8;
  v10 = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v6 + 56) = MEMORY[0x24BEE0D00];
  v11 = sub_227D57A70();
  *(_QWORD *)(v6 + 64) = v11;
  *(_QWORD *)(v6 + 32) = v7;
  *(_QWORD *)(v6 + 40) = v9;
  v12 = (int *)type metadata accessor for ReadingHistory.State(0);
  sub_227D5F6A4((uint64_t)v1 + v12[5], (uint64_t)v5);
  v13 = type metadata accessor for ReadingHistory.Streak(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 48))(v5, 1, v13) == 1)
  {
    sub_227D5809C((uint64_t)v5, (uint64_t *)&unk_253F39C20);
    v14 = (uint64_t *)(v6 + 72);
    *(_QWORD *)(v6 + 96) = v10;
    *(_QWORD *)(v6 + 104) = v11;
  }
  else
  {
    v15 = ReadingHistory.Streak.description.getter();
    v17 = v16;
    sub_227D64BC4((uint64_t)v5, type metadata accessor for ReadingHistory.Streak);
    v14 = (uint64_t *)(v6 + 72);
    *(_QWORD *)(v6 + 96) = v10;
    *(_QWORD *)(v6 + 104) = v11;
    if (v17)
    {
      *v14 = v15;
      goto LABEL_6;
    }
  }
  *v14 = 7104878;
  v17 = 0xE300000000000000;
LABEL_6:
  *(_QWORD *)(v6 + 80) = v17;
  v18 = (char *)v1 + v12[6];
  v19 = v18[16];
  v42 = *(_OWORD *)v18;
  v43 = v19;
  v20 = ReadingHistory.Day.description.getter();
  *(_QWORD *)(v6 + 136) = v10;
  *(_QWORD *)(v6 + 144) = v11;
  *(_QWORD *)(v6 + 112) = v20;
  *(_QWORD *)(v6 + 120) = v21;
  v22 = *(_QWORD *)((char *)v1 + v12[7]);
  v23 = *(_QWORD *)(v22 + 16);
  v24 = MEMORY[0x24BEE4AF8];
  if (v23)
  {
    v36 = v11;
    v37 = v6;
    v41 = MEMORY[0x24BEE4AF8];
    swift_bridgeObjectRetain();
    sub_227DECBC4(0, v23, 0);
    v24 = v41;
    v35[1] = v22;
    v25 = v22 + 64;
    do
    {
      v27 = *(_QWORD *)(v25 - 16);
      v26 = *(_QWORD *)(v25 - 8);
      *(_QWORD *)&v42 = 123;
      *((_QWORD *)&v42 + 1) = 0xE100000000000000;
      swift_bridgeObjectRetain_n();
      sub_227E6002C();
      sub_227E6002C();
      v39 = 0;
      v40 = 0xE000000000000000;
      sub_227E60494();
      swift_bridgeObjectRelease();
      v38 = v27;
      v39 = 0x3A656D69747BLL;
      v40 = 0xE600000000000000;
      sub_227E60674();
      sub_227E6002C();
      swift_bridgeObjectRelease();
      sub_227E6002C();
      v38 = v26;
      sub_227E60674();
      sub_227E6002C();
      swift_bridgeObjectRelease();
      sub_227E6002C();
      sub_227E6002C();
      swift_bridgeObjectRelease();
      sub_227E6002C();
      sub_227E6002C();
      swift_bridgeObjectRelease();
      sub_227E6002C();
      swift_bridgeObjectRelease_n();
      v28 = v42;
      v41 = v24;
      v30 = *(_QWORD *)(v24 + 16);
      v29 = *(_QWORD *)(v24 + 24);
      if (v30 >= v29 >> 1)
      {
        sub_227DECBC4(v29 > 1, v30 + 1, 1);
        v24 = v41;
      }
      *(_QWORD *)(v24 + 16) = v30 + 1;
      *(_OWORD *)(v24 + 16 * v30 + 32) = v28;
      v25 += 40;
      --v23;
    }
    while (v23);
    swift_bridgeObjectRelease();
    v11 = v36;
    v6 = v37;
    v10 = MEMORY[0x24BEE0D00];
  }
  *(_QWORD *)&v42 = v24;
  sub_227D68330(&qword_255928D00);
  sub_227DED68C();
  v31 = sub_227E5FF54();
  v33 = v32;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v6 + 176) = v10;
  *(_QWORD *)(v6 + 184) = v11;
  *(_QWORD *)(v6 + 152) = v31;
  *(_QWORD *)(v6 + 160) = v33;
  return sub_227E5FF9C();
}

uint64_t ReadingHistory.State.init(currentStreak:longestStreak:today:readingHistory:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  char v11;
  int *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  char *v16;

  v9 = *a3;
  v10 = a3[1];
  v11 = *((_BYTE *)a3 + 16);
  v12 = (int *)type metadata accessor for ReadingHistory.State(0);
  v13 = (uint64_t)a5 + v12[5];
  v14 = type metadata accessor for ReadingHistory.Streak(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v13, 1, 1, v14);
  *a5 = a1;
  result = sub_227DED600(a2, v13);
  v16 = (char *)a5 + v12[6];
  *(_QWORD *)v16 = v9;
  *((_QWORD *)v16 + 1) = v10;
  v16[16] = v11;
  *(_QWORD *)((char *)a5 + v12[7]) = a4;
  return result;
}

uint64_t sub_227DEB178()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_227DEB1B4 + 4 * byte_227E700D0[*v0]))(0x53746E6572727563, 0xED00006B61657274);
}

uint64_t sub_227DEB1B4()
{
  return 0x53747365676E6F6CLL;
}

uint64_t sub_227DEB1C8()
{
  return 0x7961646F74;
}

uint64_t sub_227DEB1DC()
{
  return 0x48676E6964616572;
}

uint64_t sub_227DEB200@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_227DEEEB8(a1, a2);
  *a3 = result;
  return result;
}

void sub_227DEB224(_BYTE *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_227DEB230()
{
  sub_227DED6D8();
  return sub_227E60758();
}

uint64_t sub_227DEB258()
{
  sub_227DED6D8();
  return sub_227E60764();
}

uint64_t ReadingHistory.State.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  __int128 *v11;
  char v12;
  uint64_t v14;
  char v15;
  __int128 v16;
  char v17;

  v3 = v1;
  v5 = sub_227D68330(&qword_255928D08);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_227D572A4(a1, a1[3]);
  sub_227DED6D8();
  sub_227E6074C();
  LOBYTE(v16) = 0;
  sub_227E60650();
  if (!v2)
  {
    v10 = type metadata accessor for ReadingHistory.State(0);
    LOBYTE(v16) = 1;
    type metadata accessor for ReadingHistory.Streak(0);
    sub_227D51624(&qword_255928D18, type metadata accessor for ReadingHistory.Streak, (uint64_t)&protocol conformance descriptor for ReadingHistory.Streak);
    sub_227E60620();
    v11 = (__int128 *)(v3 + *(int *)(v10 + 24));
    v12 = *((_BYTE *)v11 + 16);
    v16 = *v11;
    v17 = v12;
    v15 = 2;
    sub_227DED534();
    sub_227E6065C();
    *(_QWORD *)&v16 = *(_QWORD *)(v3 + *(int *)(v10 + 28));
    v15 = 3;
    sub_227D68330(&qword_255928D20);
    sub_227DED760(&qword_255928D28, (uint64_t (*)(void))sub_227DED71C, MEMORY[0x24BEE12A0]);
    sub_227E6065C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
}

uint64_t ReadingHistory.State.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  char *v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  _QWORD *v33;
  __int128 v34;
  char v35;
  char v36;

  v28 = a2;
  v3 = sub_227D68330((uint64_t *)&unk_253F39C20);
  MEMORY[0x24BDAC7A8](v3, v4);
  v30 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = sub_227D68330(&qword_255928D38);
  v29 = *(_QWORD *)(v32 - 8);
  MEMORY[0x24BDAC7A8](v32, v6);
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for ReadingHistory.State(0);
  v11 = MEMORY[0x24BDAC7A8](v9, v10);
  v13 = (uint64_t *)((char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = (uint64_t)v13 + *(int *)(v11 + 20);
  v15 = type metadata accessor for ReadingHistory.Streak(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v14, 1, 1, v15);
  sub_227D572A4(a1, a1[3]);
  sub_227DED6D8();
  v31 = v8;
  v16 = (uint64_t)v33;
  v17 = v14;
  sub_227E60740();
  if (v16)
  {
    sub_227D58120((uint64_t)a1);
    return sub_227D5809C(v14, (uint64_t *)&unk_253F39C20);
  }
  else
  {
    v27 = v9;
    v33 = a1;
    v19 = v29;
    v18 = (uint64_t)v30;
    LOBYTE(v34) = 0;
    v20 = v31;
    v21 = v32;
    *v13 = sub_227E605FC();
    LOBYTE(v34) = 1;
    sub_227D51624(&qword_255928D40, type metadata accessor for ReadingHistory.Streak, (uint64_t)&protocol conformance descriptor for ReadingHistory.Streak);
    sub_227E605CC();
    sub_227DED600(v18, v17);
    v36 = 2;
    sub_227DED578();
    sub_227E60608();
    v22 = v35;
    v23 = v27;
    v24 = (char *)v13 + *(int *)(v27 + 24);
    *(_OWORD *)v24 = v34;
    v24[16] = v22;
    sub_227D68330(&qword_255928D20);
    v36 = 3;
    sub_227DED760(&qword_255928D48, (uint64_t (*)(void))sub_227DED7C8, MEMORY[0x24BEE12D0]);
    sub_227E60608();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v20, v21);
    *(uint64_t *)((char *)v13 + *(int *)(v23 + 28)) = v34;
    sub_227D5DFFC((uint64_t)v13, v28, type metadata accessor for ReadingHistory.State);
    sub_227D58120((uint64_t)v33);
    return sub_227D64BC4((uint64_t)v13, type metadata accessor for ReadingHistory.State);
  }
}

uint64_t sub_227DEB7C4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return ReadingHistory.State.init(from:)(a1, a2);
}

uint64_t sub_227DEB7D8(_QWORD *a1)
{
  return ReadingHistory.State.encode(to:)(a1);
}

unint64_t static ReadingHistory.UserDefaults.sessionStartOffset.getter()
{
  return 0xD00000000000002ELL;
}

uint64_t sub_227DEB80C()
{
  return 0;
}

void sub_227DEB818(_BYTE *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_227DEB824()
{
  sub_227DED80C();
  return sub_227E60758();
}

uint64_t sub_227DEB84C()
{
  sub_227DED80C();
  return sub_227E60764();
}

uint64_t ReadingHistory.Notification.PlaceholderStreakDayGoalNeedsUpdate.encode(to:)(_QWORD *a1)
{
  return sub_227DEBF24(a1, &qword_255928D58, (void (*)(void))sub_227DED80C);
}

uint64_t ReadingHistory.Notification.PlaceholderStreakDayGoalNeedsUpdate.init(from:)(uint64_t a1)
{
  return sub_227D58120(a1);
}

uint64_t sub_227DEB8D0(uint64_t a1)
{
  return sub_227D58120(a1);
}

uint64_t sub_227DEB8F4(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_227DEC044(a1, a2, a3, &qword_255928D58, (void (*)(void))sub_227DED80C);
}

uint64_t _s13BookDataStore14ReadingHistoryO6StreakV7endDate10Foundation0H0Vvg_0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_227E5F27C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

double ReadingHistory.Notification.AddFakeSession.duration.getter()
{
  uint64_t v0;

  return *(double *)(v0 + *(int *)(type metadata accessor for ReadingHistory.Notification.AddFakeSession(0) + 20));
}

uint64_t ReadingHistory.Notification.AddFakeSession.init(date:duration:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D0>)
{
  uint64_t v6;
  uint64_t result;

  v6 = sub_227E5F27C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a2, a1, v6);
  result = type metadata accessor for ReadingHistory.Notification.AddFakeSession(0);
  *(double *)(a2 + *(int *)(result + 20)) = a3;
  return result;
}

uint64_t sub_227DEB9D8()
{
  _BYTE *v0;

  if (*v0)
    return 0x6E6F697461727564;
  else
    return 1702125924;
}

uint64_t sub_227DEBA0C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_227DEF0CC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_227DEBA30()
{
  sub_227DED850();
  return sub_227E60758();
}

uint64_t sub_227DEBA58()
{
  sub_227DED850();
  return sub_227E60764();
}

uint64_t ReadingHistory.Notification.AddFakeSession.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  _BYTE v9[16];

  v3 = sub_227D68330(&qword_255928D68);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3, v5);
  v7 = &v9[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_227D572A4(a1, a1[3]);
  sub_227DED850();
  sub_227E6074C();
  v9[15] = 0;
  sub_227E5F27C();
  sub_227D51624(&qword_255928258, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE920]);
  sub_227E6065C();
  if (!v1)
  {
    type metadata accessor for ReadingHistory.Notification.AddFakeSession(0);
    v9[14] = 1;
    sub_227E60644();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v7, v3);
}

uint64_t ReadingHistory.Notification.AddFakeSession.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, char *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  char v34;

  v28 = a2;
  v4 = sub_227E5F27C();
  v5 = *(_QWORD *)(v4 - 8);
  v31 = v4;
  v32 = v5;
  MEMORY[0x24BDAC7A8](v4, v6);
  v29 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = sub_227D68330(&qword_255928D78);
  v8 = *(_QWORD *)(v30 - 8);
  MEMORY[0x24BDAC7A8](v30, v9);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for ReadingHistory.Notification.AddFakeSession(0);
  MEMORY[0x24BDAC7A8](v12, v13);
  v15 = (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_227D572A4(a1, a1[3]);
  sub_227DED850();
  sub_227E60740();
  if (v2)
    return sub_227D58120((uint64_t)a1);
  v26 = v12;
  v27 = v15;
  v16 = v8;
  v17 = v32;
  v34 = 0;
  sub_227D51624(&qword_255928278, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE960]);
  v18 = v29;
  v19 = v30;
  v20 = v31;
  sub_227E60608();
  v21 = *(void (**)(char *, char *, uint64_t))(v17 + 32);
  v22 = (uint64_t)v27;
  v21(v27, v18, v20);
  v33 = 1;
  sub_227E605F0();
  v24 = v23;
  (*(void (**)(char *, uint64_t))(v16 + 8))(v11, v19);
  *(_QWORD *)(v22 + *(int *)(v26 + 20)) = v24;
  sub_227D5DFFC(v22, v28, type metadata accessor for ReadingHistory.Notification.AddFakeSession);
  sub_227D58120((uint64_t)a1);
  return sub_227D64BC4(v22, type metadata accessor for ReadingHistory.Notification.AddFakeSession);
}

uint64_t sub_227DEBE50@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return ReadingHistory.Notification.AddFakeSession.init(from:)(a1, a2);
}

uint64_t sub_227DEBE64(_QWORD *a1)
{
  return ReadingHistory.Notification.AddFakeSession.encode(to:)(a1);
}

uint64_t sub_227DEBE7C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *a1 = 1;
  return result;
}

uint64_t sub_227DEBEA8()
{
  sub_227DED894();
  return sub_227E60758();
}

uint64_t sub_227DEBED0()
{
  sub_227DED894();
  return sub_227E60764();
}

uint64_t ReadingHistory.Notification.ClearToday.encode(to:)(_QWORD *a1)
{
  return sub_227DEBF24(a1, &qword_255928D80, (void (*)(void))sub_227DED894);
}

uint64_t sub_227DEBF24(_QWORD *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;

  v5 = sub_227D68330(a2);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_227D572A4(a1, a1[3]);
  a3();
  sub_227E6074C();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
}

uint64_t ReadingHistory.Notification.ClearToday.init(from:)(uint64_t a1)
{
  return sub_227D58120(a1);
}

uint64_t sub_227DEC018(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_227DEC044(a1, a2, a3, &qword_255928D80, (void (*)(void))sub_227DED894);
}

uint64_t sub_227DEC044(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t *a4, void (*a5)(void))
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v13;

  v7 = sub_227D68330(a4);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7, v9);
  v11 = (char *)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_227D572A4(a1, a1[3]);
  a5();
  sub_227E6074C();
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, v7);
}

BDSReadingHistoryDayInfo __swiftcall ReadingHistory.Day.toInfo()()
{
  uint64_t v0;
  objc_class *v1;
  BOOL v2;
  int64_t v3;
  int64_t v4;
  BDSReadingHistoryDayInfo result;

  v1 = (objc_class *)objc_msgSend(objc_allocWithZone((Class)BDSReadingHistoryDayInfo), sel_initWithReadingTime_goal_isStreakDay_, *(_QWORD *)v0, *(_QWORD *)(v0 + 8), *(unsigned __int8 *)(v0 + 16));
  result._goal = v4;
  result._readingTime = v3;
  result.super.isa = v1;
  result._isStreakDay = v2;
  return result;
}

id static ReadingHistory.Day.from(info:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v4;
  id v5;
  id result;

  v4 = objc_msgSend(a1, sel_readingTime);
  v5 = objc_msgSend(a1, sel_goal);
  result = objc_msgSend(a1, sel_isStreakDay);
  *(_QWORD *)a2 = v4;
  *(_QWORD *)(a2 + 8) = v5;
  *(_BYTE *)(a2 + 16) = (_BYTE)result;
  return result;
}

BDSReadingHistoryDayEntryInfo __swiftcall ReadingHistory.DayEntry.toInfo()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  id v5;
  id v6;
  void *v7;
  objc_class *v8;
  NSString *v9;
  BDSReadingHistoryDayInfo *v10;
  objc_class *v11;
  BDSReadingHistoryDayEntryInfo result;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 24);
  v3 = *(unsigned __int8 *)(v0 + 32);
  v4 = objc_allocWithZone((Class)BDSReadingHistoryDayInfo);
  swift_bridgeObjectRetain();
  v5 = objc_msgSend(v4, sel_initWithReadingTime_goal_isStreakDay_, v1, v2, v3);
  v6 = objc_allocWithZone((Class)BDSReadingHistoryDayEntryInfo);
  v7 = (void *)sub_227E5FF78();
  swift_bridgeObjectRelease();
  v8 = (objc_class *)objc_msgSend(v6, sel_initWithDate_day_, v7, v5);

  v11 = v8;
  result._day = v10;
  result._date = v9;
  result.super.isa = v11;
  return result;
}

void static ReadingHistory.DayEntry.from(info:)(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  id v9;
  id v10;
  unsigned __int8 v11;

  v4 = objc_msgSend(a1, sel_date);
  v5 = sub_227E5FF84();
  v7 = v6;

  v8 = objc_msgSend(a1, "day");
  v9 = objc_msgSend(v8, sel_readingTime);
  v10 = objc_msgSend(v8, sel_goal);
  v11 = objc_msgSend(v8, sel_isStreakDay);

  *(_QWORD *)a2 = v5;
  *(_QWORD *)(a2 + 8) = v7;
  *(_QWORD *)(a2 + 16) = v9;
  *(_QWORD *)(a2 + 24) = v10;
  *(_BYTE *)(a2 + 32) = v11;
}

BDSReadingHistoryStreakInfo __swiftcall ReadingHistory.Streak.toInfo()()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  void *v3;
  objc_class *v4;
  NSDate *v5;
  int64_t v6;
  objc_class *v7;
  BDSReadingHistoryStreakInfo result;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for ReadingHistory.Streak(0) + 20));
  v2 = objc_allocWithZone((Class)BDSReadingHistoryStreakInfo);
  v3 = (void *)sub_227E5F234();
  v4 = (objc_class *)objc_msgSend(v2, sel_initWithEndDate_length_, v3, v1);

  v7 = v4;
  result._length = v6;
  result._endDate = v5;
  result.super.isa = v7;
  return result;
}

uint64_t static ReadingHistory.Streak.from(info:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v4;
  id v5;
  uint64_t result;

  v4 = objc_msgSend(a1, sel_endDate);
  sub_227E5F264();

  v5 = objc_msgSend(a1, sel_length);
  result = type metadata accessor for ReadingHistory.Streak(0);
  *(_QWORD *)(a2 + *(int *)(result + 20)) = v5;
  return result;
}

void __swiftcall ReadingHistory.State.toInfo()(BDSReadingHistoryStateInfo *__return_ptr retstr)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  id v12;
  void *v13;
  char *v14;
  id v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  unsigned __int8 *v19;
  uint64_t v20;
  uint64_t v21;
  unsigned int v22;
  id v23;
  id v24;
  id v25;
  void *v26;
  id v27;
  void *v28;
  _QWORD v29[2];
  id v30;
  id v31;
  uint64_t v32;
  uint64_t v33;

  v2 = v1;
  v3 = sub_227D68330((uint64_t *)&unk_253F39C20);
  MEMORY[0x24BDAC7A8](v3, v4);
  v6 = (char *)v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v2;
  v8 = (int *)type metadata accessor for ReadingHistory.State(0);
  sub_227D5F6A4((uint64_t)v2 + v8[5], (uint64_t)v6);
  v9 = type metadata accessor for ReadingHistory.Streak(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v6, 1, v9) == 1)
  {
    sub_227D5809C((uint64_t)v6, (uint64_t *)&unk_253F39C20);
    v10 = 0;
  }
  else
  {
    v11 = *(_QWORD *)&v6[*(int *)(v9 + 20)];
    v12 = objc_allocWithZone((Class)BDSReadingHistoryStreakInfo);
    v13 = (void *)sub_227E5F234();
    v10 = objc_msgSend(v12, sel_initWithEndDate_length_, v13, v11);

    sub_227D64BC4((uint64_t)v6, type metadata accessor for ReadingHistory.Streak);
  }
  v14 = (char *)v2 + v8[6];
  v15 = objc_msgSend(objc_allocWithZone((Class)BDSReadingHistoryDayInfo), sel_initWithReadingTime_goal_isStreakDay_, *(_QWORD *)v14, *((_QWORD *)v14 + 1), v14[16]);
  v16 = v15;
  v17 = *(uint64_t *)((char *)v2 + v8[7]);
  v18 = *(_QWORD *)(v17 + 16);
  if (v18)
  {
    v30 = v15;
    v31 = v10;
    v32 = v7;
    v33 = MEMORY[0x24BEE4AF8];
    swift_bridgeObjectRetain();
    sub_227E604F4();
    v29[1] = v17;
    v19 = (unsigned __int8 *)(v17 + 64);
    do
    {
      v20 = *((_QWORD *)v19 - 2);
      v21 = *((_QWORD *)v19 - 1);
      v22 = *v19;
      v19 += 40;
      v23 = objc_allocWithZone((Class)BDSReadingHistoryDayInfo);
      swift_bridgeObjectRetain();
      v24 = objc_msgSend(v23, (SEL)0x24F0A9DA9, v20, v21, v22);
      v25 = objc_allocWithZone((Class)BDSReadingHistoryDayEntryInfo);
      v26 = (void *)sub_227E5FF78();
      objc_msgSend(v25, sel_initWithDate_day_, v26, v24);
      swift_bridgeObjectRelease();

      sub_227E604DC();
      sub_227E60500();
      sub_227E6050C();
      sub_227E604E8();
      --v18;
    }
    while (v18);
    swift_bridgeObjectRelease();
    v10 = v31;
    v7 = v32;
    v16 = v30;
  }
  v27 = objc_allocWithZone((Class)BDSReadingHistoryStateInfo);
  sub_227DED8D8();
  v28 = (void *)sub_227E600B0();
  swift_bridgeObjectRelease();
  objc_msgSend(v27, sel_initWithCurrentStreak_longestStreak_today_readingHistory_, v7, v10, v16, v28);

}

uint64_t static ReadingHistory.State.from(info:)@<X0>(void *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  id v16;
  id v17;
  unsigned int v18;
  id v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t result;
  uint64_t v24;
  uint64_t v25;
  id v26;
  void *v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  id v33;
  id v34;
  unsigned __int8 v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  int *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  id v44;
  id v45;
  id v46;
  char *v47;
  _QWORD *v48;
  unint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;

  v4 = sub_227D68330((uint64_t *)&unk_253F39C20);
  MEMORY[0x24BDAC7A8](v4, v5);
  v7 = (char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = objc_msgSend(a1, sel_currentStreak);
  v9 = objc_msgSend(a1, sel_longestStreak);
  if (v9)
  {
    v10 = v9;
    v11 = objc_msgSend(v9, sel_endDate);
    sub_227E5F264();

    v12 = objc_msgSend(v10, sel_length);
    v13 = type metadata accessor for ReadingHistory.Streak(0);
    *(_QWORD *)&v7[*(int *)(v13 + 20)] = v12;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v7, 0, 1, v13);
  }
  else
  {
    v14 = type metadata accessor for ReadingHistory.Streak(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v7, 1, 1, v14);
  }
  v15 = objc_msgSend(a1, sel_today);
  v16 = objc_msgSend(v15, sel_readingTime);
  v17 = objc_msgSend(v15, sel_goal);
  v18 = objc_msgSend(v15, sel_isStreakDay);

  v19 = objc_msgSend(a1, sel_readingHistory);
  sub_227DED8D8();
  v20 = sub_227E600BC();

  v21 = v20;
  v51 = v20;
  if (!(v20 >> 62))
  {
    v22 = *(_QWORD *)((v20 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v22)
      goto LABEL_6;
LABEL_16:
    swift_bridgeObjectRelease();
    v25 = MEMORY[0x24BEE4AF8];
LABEL_17:
    v39 = (int *)type metadata accessor for ReadingHistory.State(0);
    v40 = (uint64_t)a2 + v39[5];
    v41 = type metadata accessor for ReadingHistory.Streak(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 56))(v40, 1, 1, v41);
    *a2 = v8;
    result = sub_227DED600((uint64_t)v7, v40);
    v42 = (char *)a2 + v39[6];
    *(_QWORD *)v42 = v16;
    *((_QWORD *)v42 + 1) = v17;
    v42[16] = v18;
    *(_QWORD *)((char *)a2 + v39[7]) = v25;
    return result;
  }
  swift_bridgeObjectRetain();
  v21 = v51;
  v22 = sub_227E6056C();
  swift_bridgeObjectRelease();
  if (!v22)
    goto LABEL_16;
LABEL_6:
  v52 = MEMORY[0x24BEE4AF8];
  result = sub_227DECBE0(0, v22 & ~(v22 >> 63), 0);
  if ((v22 & 0x8000000000000000) == 0)
  {
    v50 = v22;
    HIDWORD(v43) = v18;
    v44 = v17;
    v45 = v16;
    v46 = v8;
    v47 = v7;
    v24 = 0;
    v25 = v52;
    v48 = a2;
    v49 = v21 & 0xC000000000000001;
    do
    {
      if (v49)
        v26 = (id)MEMORY[0x22E2A9AFC](v24, v21);
      else
        v26 = *(id *)(v21 + 8 * v24 + 32);
      v27 = v26;
      v28 = objc_msgSend(v26, sel_date);
      v29 = sub_227E5FF84();
      v31 = v30;

      v32 = objc_msgSend(v27, "day");
      v33 = objc_msgSend(v32, sel_readingTime);
      v34 = objc_msgSend(v32, sel_goal);
      v35 = objc_msgSend(v32, sel_isStreakDay);

      v52 = v25;
      v37 = *(_QWORD *)(v25 + 16);
      v36 = *(_QWORD *)(v25 + 24);
      if (v37 >= v36 >> 1)
      {
        sub_227DECBE0(v36 > 1, v37 + 1, 1);
        v25 = v52;
      }
      ++v24;
      *(_QWORD *)(v25 + 16) = v37 + 1;
      v38 = v25 + 40 * v37;
      *(_QWORD *)(v38 + 32) = v29;
      *(_QWORD *)(v38 + 40) = v31;
      *(_QWORD *)(v38 + 48) = v33;
      *(_QWORD *)(v38 + 56) = v34;
      *(_BYTE *)(v38 + 64) = v35;
      v21 = v51;
    }
    while (v50 != v24);
    swift_bridgeObjectRelease();
    v7 = v47;
    a2 = v48;
    v16 = v45;
    v8 = v46;
    v17 = v44;
    LOBYTE(v18) = BYTE4(v43);
    goto LABEL_17;
  }
  __break(1u);
  return result;
}

uint64_t BDSReadingHistoryStreakInfo.toStreak()@<X0>(uint64_t a1@<X8>)
{
  void *v1;
  id v3;
  id v4;
  uint64_t result;

  v3 = objc_msgSend(v1, sel_endDate);
  sub_227E5F264();

  v4 = objc_msgSend(v1, sel_length);
  result = type metadata accessor for ReadingHistory.Streak(0);
  *(_QWORD *)(a1 + *(int *)(result + 20)) = v4;
  return result;
}

BookDataStore::ReadingHistory::Day __swiftcall BDSReadingHistoryDayInfo.toDay()()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  id v5;
  Swift::Int v6;
  Swift::Bool v7;
  BookDataStore::ReadingHistory::Day result;

  v2 = v0;
  v3 = objc_msgSend(v1, sel_readingTime);
  v4 = objc_msgSend(v1, sel_goal);
  v5 = objc_msgSend(v1, sel_isStreakDay);
  *(_QWORD *)v2 = v3;
  *(_QWORD *)(v2 + 8) = v4;
  *(_BYTE *)(v2 + 16) = (_BYTE)v5;
  result.goal = v6;
  result.readingTime = (Swift::Int)v5;
  result.isStreakDay = v7;
  return result;
}

uint64_t sub_227DECBC4(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_227DECC28(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_227DECBE0(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_227DECDA4(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_227DECBFC(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_227DED290(a1, a2, a3, (_QWORD *)*v3, &qword_255928E30, (uint64_t (*)(_QWORD))MEMORY[0x24BDB88E0]);
  *v3 = result;
  return result;
}

uint64_t sub_227DECC28(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_227D68330((uint64_t *)&unk_255928ED0);
    v10 = (char *)swift_allocObject();
    v11 = j__malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_227E605A8();
  __break(1u);
  return result;
}

uint64_t sub_227DECD90(char a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_227DED0B0(a1, a2, a3, a4, &qword_255928E68, (uint64_t *)&unk_255928E70);
}

uint64_t sub_227DECDA4(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  size_t v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_227D68330(&qword_253F3B080);
    v10 = (char *)swift_allocObject();
    v11 = j__malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  v14 = 40 * v8;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v14])
      memmove(v12, v13, v14);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v14] || v12 >= &v13[v14])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_227E605A8();
  __break(1u);
  return result;
}

uint64_t sub_227DECF18(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_227D68330(&qword_255928E58);
    v10 = (char *)swift_allocObject();
    v11 = j__malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    memcpy(v13, v14, 16 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_227E605A8();
  __break(1u);
  return result;
}

uint64_t sub_227DED074(char a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_227DED290(a1, a2, a3, a4, &qword_255928E60, (uint64_t (*)(_QWORD))MEMORY[0x24BDCE900]);
}

uint64_t sub_227DED088(char a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_227DED0B0(a1, a2, a3, a4, &qword_255928E38, &qword_255928E40);
}

uint64_t sub_227DED09C(char a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_227DED0B0(a1, a2, a3, a4, &qword_255928E48, &qword_253F3B018);
}

uint64_t sub_227DED0B0(char a1, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t *a6)
{
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  size_t v17;
  uint64_t v19;
  unint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  unint64_t v25;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = a4[3];
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = a4[2];
  if (v10 <= v11)
    v12 = a4[2];
  else
    v12 = v10;
  if (!v12)
  {
    v16 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_19;
  }
  sub_227D68330(a5);
  v13 = *(_QWORD *)(sub_227D68330(a6) - 8);
  v14 = *(_QWORD *)(v13 + 72);
  v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v16 = (_QWORD *)swift_allocObject();
  v17 = j__malloc_size(v16);
  if (!v14)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v17 - v15 == 0x8000000000000000 && v14 == -1)
    goto LABEL_34;
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  v19 = *(_QWORD *)(sub_227D68330(a6) - 8);
  v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = (char *)v16 + v20;
  v22 = (char *)a4 + v20;
  if ((a1 & 1) != 0)
  {
    if (v16 < a4 || v21 >= &v22[*(_QWORD *)(v19 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  v23 = *(_QWORD *)(v19 + 72) * v11;
  v24 = &v21[v23];
  v25 = (unint64_t)&v22[v23];
  if (v22 >= v24 || (unint64_t)v21 >= v25)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v16;
  }
LABEL_36:
  result = sub_227E605A8();
  __break(1u);
  return result;
}

uint64_t sub_227DED290(char a1, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t (*a6)(_QWORD))
{
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  size_t v17;
  uint64_t v19;
  unint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  unint64_t v25;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = a4[3];
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = a4[2];
  if (v10 <= v11)
    v12 = a4[2];
  else
    v12 = v10;
  if (!v12)
  {
    v16 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_19;
  }
  sub_227D68330(a5);
  v13 = *(_QWORD *)(a6(0) - 8);
  v14 = *(_QWORD *)(v13 + 72);
  v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v16 = (_QWORD *)swift_allocObject();
  v17 = j__malloc_size(v16);
  if (!v14)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v17 - v15 == 0x8000000000000000 && v14 == -1)
    goto LABEL_34;
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  v19 = *(_QWORD *)(a6(0) - 8);
  v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = (char *)v16 + v20;
  v22 = (char *)a4 + v20;
  if ((a1 & 1) != 0)
  {
    if (v16 < a4 || v21 >= &v22[*(_QWORD *)(v19 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  v23 = *(_QWORD *)(v19 + 72) * v11;
  v24 = &v21[v23];
  v25 = (unint64_t)&v22[v23];
  if (v22 >= v24 || (unint64_t)v21 >= v25)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v16;
  }
LABEL_36:
  result = sub_227E605A8();
  __break(1u);
  return result;
}

uint64_t _s13BookDataStore14ReadingHistoryO8DayEntryV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  BOOL v8;
  char v9;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 24);
  v4 = *(unsigned __int8 *)(a1 + 32);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(unsigned __int8 *)(a2 + 32);
  v8 = *(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8);
  if (v8 || (v9 = sub_227E60698(), result = 0, (v9 & 1) != 0))
  {
    if (v2 == v5 && v3 == v6)
      return v4 ^ v7 ^ 1u;
    else
      return 0;
  }
  return result;
}

unint64_t sub_227DED4F0()
{
  unint64_t result;

  result = qword_255928CC0;
  if (!qword_255928CC0)
  {
    result = MEMORY[0x22E2AA7D4](&unk_227E70B74, &type metadata for ReadingHistory.DayEntry.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255928CC0);
  }
  return result;
}

unint64_t sub_227DED534()
{
  unint64_t result;

  result = qword_255928CC8;
  if (!qword_255928CC8)
  {
    result = MEMORY[0x22E2AA7D4](&protocol conformance descriptor for ReadingHistory.Day, &type metadata for ReadingHistory.Day);
    atomic_store(result, (unint64_t *)&qword_255928CC8);
  }
  return result;
}

unint64_t sub_227DED578()
{
  unint64_t result;

  result = qword_255928CD8;
  if (!qword_255928CD8)
  {
    result = MEMORY[0x22E2AA7D4](&protocol conformance descriptor for ReadingHistory.Day, &type metadata for ReadingHistory.Day);
    atomic_store(result, (unint64_t *)&qword_255928CD8);
  }
  return result;
}

unint64_t sub_227DED5BC()
{
  unint64_t result;

  result = qword_255928CE8;
  if (!qword_255928CE8)
  {
    result = MEMORY[0x22E2AA7D4](&unk_227E70B24, &type metadata for ReadingHistory.Streak.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255928CE8);
  }
  return result;
}

uint64_t sub_227DED600(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_227D68330((uint64_t *)&unk_253F39C20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

unint64_t sub_227DED648()
{
  unint64_t result;

  result = qword_255928CF8;
  if (!qword_255928CF8)
  {
    result = MEMORY[0x22E2AA7D4](MEMORY[0x24BEE17B0], MEMORY[0x24BEE1768]);
    atomic_store(result, (unint64_t *)&qword_255928CF8);
  }
  return result;
}

unint64_t sub_227DED68C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255928EE0;
  if (!qword_255928EE0)
  {
    v1 = sub_227D6717C(&qword_255928D00);
    result = MEMORY[0x22E2AA7D4](MEMORY[0x24BEE12B0], v1);
    atomic_store(result, (unint64_t *)&qword_255928EE0);
  }
  return result;
}

unint64_t sub_227DED6D8()
{
  unint64_t result;

  result = qword_255928D10;
  if (!qword_255928D10)
  {
    result = MEMORY[0x22E2AA7D4](&unk_227E70AD4, &type metadata for ReadingHistory.State.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255928D10);
  }
  return result;
}

unint64_t sub_227DED71C()
{
  unint64_t result;

  result = qword_255928D30;
  if (!qword_255928D30)
  {
    result = MEMORY[0x22E2AA7D4](&protocol conformance descriptor for ReadingHistory.DayEntry, &type metadata for ReadingHistory.DayEntry);
    atomic_store(result, (unint64_t *)&qword_255928D30);
  }
  return result;
}

uint64_t sub_227DED760(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = sub_227D6717C(&qword_255928D20);
    v8 = a2();
    result = MEMORY[0x22E2AA7D4](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_227DED7C8()
{
  unint64_t result;

  result = qword_255928D50;
  if (!qword_255928D50)
  {
    result = MEMORY[0x22E2AA7D4](&protocol conformance descriptor for ReadingHistory.DayEntry, &type metadata for ReadingHistory.DayEntry);
    atomic_store(result, (unint64_t *)&qword_255928D50);
  }
  return result;
}

unint64_t sub_227DED80C()
{
  unint64_t result;

  result = qword_255928D60;
  if (!qword_255928D60)
  {
    result = MEMORY[0x22E2AA7D4](&unk_227E70A84, &type metadata for ReadingHistory.Notification.PlaceholderStreakDayGoalNeedsUpdate.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255928D60);
  }
  return result;
}

unint64_t sub_227DED850()
{
  unint64_t result;

  result = qword_255928D70;
  if (!qword_255928D70)
  {
    result = MEMORY[0x22E2AA7D4](&unk_227E70A34, &type metadata for ReadingHistory.Notification.AddFakeSession.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255928D70);
  }
  return result;
}

unint64_t sub_227DED894()
{
  unint64_t result;

  result = qword_255928D88;
  if (!qword_255928D88)
  {
    result = MEMORY[0x22E2AA7D4](&unk_227E709E4, &type metadata for ReadingHistory.Notification.ClearToday.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255928D88);
  }
  return result;
}

unint64_t sub_227DED8D8()
{
  unint64_t result;

  result = qword_255928D90;
  if (!qword_255928D90)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_255928D90);
  }
  return result;
}

ValueMetadata *type metadata accessor for ReadingHistory()
{
  return &type metadata for ReadingHistory;
}

uint64_t initializeBufferWithCopyOfBuffer for ReadingHistory.DayEntry(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a2;
  *a1 = *a2;
  v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t assignWithCopy for ReadingHistory.DayEntry(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  return a1;
}

uint64_t assignWithTake for ReadingHistory.DayEntry(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for ReadingHistory.DayEntry(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 33))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ReadingHistory.DayEntry(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 33) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 33) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t assignWithCopy for ReadingHistory.Streak(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_227E5F27C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithTake for ReadingHistory.Streak(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_227E5F27C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t *initializeBufferWithCopyOfBuffer for ReadingHistory.State(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    v7 = a3[5];
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = type metadata accessor for ReadingHistory.Streak(0);
    v11 = *(_QWORD *)(v10 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    {
      v12 = sub_227D68330((uint64_t *)&unk_253F39C20);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      v14 = sub_227E5F27C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v8, v9, v14);
      *(_QWORD *)&v8[*(int *)(v10 + 20)] = *(_QWORD *)&v9[*(int *)(v10 + 20)];
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
    v15 = a3[6];
    v16 = a3[7];
    v17 = (char *)v4 + v15;
    v18 = (char *)a2 + v15;
    *(_OWORD *)v17 = *(_OWORD *)v18;
    v17[16] = v18[16];
    *(uint64_t *)((char *)v4 + v16) = *(uint64_t *)((char *)a2 + v16);
    swift_bridgeObjectRetain();
  }
  return v4;
}

_QWORD *initializeWithTake for ReadingHistory.State(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for ReadingHistory.Streak(0);
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    v11 = sub_227D68330((uint64_t *)&unk_253F39C20);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    v12 = sub_227E5F27C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v7, v8, v12);
    *(_QWORD *)&v7[*(int *)(v9 + 20)] = *(_QWORD *)&v8[*(int *)(v9 + 20)];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v13 = a3[6];
  v14 = a3[7];
  v15 = (char *)a1 + v13;
  v16 = (char *)a2 + v13;
  *(_OWORD *)v15 = *(_OWORD *)v16;
  v15[16] = v16[16];
  *(_QWORD *)((char *)a1 + v14) = *(_QWORD *)((char *)a2 + v14);
  return a1;
}

_QWORD *assignWithTake for ReadingHistory.State(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v21;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for ReadingHistory.Streak(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      v21 = sub_227E5F27C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 40))(v7, v8, v21);
      *(_QWORD *)&v7[*(int *)(v9 + 20)] = *(_QWORD *)&v8[*(int *)(v9 + 20)];
      goto LABEL_7;
    }
    sub_227D64BC4((uint64_t)v7, type metadata accessor for ReadingHistory.Streak);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v15 = sub_227D68330((uint64_t *)&unk_253F39C20);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  v14 = sub_227E5F27C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v7, v8, v14);
  *(_QWORD *)&v7[*(int *)(v9 + 20)] = *(_QWORD *)&v8[*(int *)(v9 + 20)];
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  v16 = a3[6];
  v17 = a3[7];
  v18 = (char *)a1 + v16;
  v19 = (char *)a2 + v16;
  *(_OWORD *)v18 = *(_OWORD *)v19;
  v18[16] = v19[16];
  *(_QWORD *)((char *)a1 + v17) = *(_QWORD *)((char *)a2 + v17);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_227DEDF0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_227D68330((uint64_t *)&unk_253F39C20);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + *(int *)(a3 + 20), a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 28));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_227DEDF90(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_227D68330((uint64_t *)&unk_253F39C20);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + *(int *)(a4 + 20), a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 28)) = (a2 - 1);
  return result;
}

ValueMetadata *type metadata accessor for ReadingHistory.UserDefaults()
{
  return &type metadata for ReadingHistory.UserDefaults;
}

ValueMetadata *type metadata accessor for ReadingHistory.Notification()
{
  return &type metadata for ReadingHistory.Notification;
}

uint64_t *_s13BookDataStore14ReadingHistoryO6StreakVwCP_0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_227E5F27C();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
  }
  return a1;
}

uint64_t _s13BookDataStore14ReadingHistoryO6StreakVwxx_0(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_227E5F27C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t _s13BookDataStore14ReadingHistoryO6StreakVwcp_0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_227E5F27C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithCopy for ReadingHistory.Notification.AddFakeSession(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_227E5F27C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t _s13BookDataStore14ReadingHistoryO6StreakVwtk_0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_227E5F27C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithTake for ReadingHistory.Notification.AddFakeSession(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_227E5F27C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t getEnumTagSinglePayload for ReadingHistory.Notification.AddFakeSession()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_227DEE26C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_227E5F27C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for ReadingHistory.Notification.AddFakeSession()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_227DEE2B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_227E5F27C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

ValueMetadata *type metadata accessor for ReadingHistory.Notification.ClearToday.CodingKeys()
{
  return &type metadata for ReadingHistory.Notification.ClearToday.CodingKeys;
}

ValueMetadata *type metadata accessor for ReadingHistory.Notification.AddFakeSession.CodingKeys()
{
  return &type metadata for ReadingHistory.Notification.AddFakeSession.CodingKeys;
}

ValueMetadata *type metadata accessor for ReadingHistory.Notification.PlaceholderStreakDayGoalNeedsUpdate.CodingKeys()
{
  return &type metadata for ReadingHistory.Notification.PlaceholderStreakDayGoalNeedsUpdate.CodingKeys;
}

uint64_t getEnumTagSinglePayload for ReadingHistory.State.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFD)
    goto LABEL_17;
  if (a2 + 3 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 3) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 3;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 3;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 3;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 4;
  v8 = v6 - 4;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for ReadingHistory.State.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_227DEE40C + 4 * byte_227E700D9[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_227DEE440 + 4 * byte_227E700D4[v4]))();
}

uint64_t sub_227DEE440(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_227DEE448(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x227DEE450);
  return result;
}

uint64_t sub_227DEE45C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x227DEE464);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_227DEE468(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_227DEE470(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ReadingHistory.State.CodingKeys()
{
  return &type metadata for ReadingHistory.State.CodingKeys;
}

ValueMetadata *type metadata accessor for ReadingHistory.Streak.CodingKeys()
{
  return &type metadata for ReadingHistory.Streak.CodingKeys;
}

uint64_t _s13BookDataStore14ReadingHistoryO12NotificationO14AddFakeSessionV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_227DEE4E8 + 4 * byte_227E700E3[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_227DEE51C + 4 * byte_227E700DE[v4]))();
}

uint64_t sub_227DEE51C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_227DEE524(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x227DEE52CLL);
  return result;
}

uint64_t sub_227DEE538(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x227DEE540);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_227DEE544(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_227DEE54C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ReadingHistory.DayEntry.CodingKeys()
{
  return &type metadata for ReadingHistory.DayEntry.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for ReadingHistory.Day.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_227DEE5B4 + 4 * byte_227E700ED[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_227DEE5E8 + 4 * byte_227E700E8[v4]))();
}

uint64_t sub_227DEE5E8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_227DEE5F0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x227DEE5F8);
  return result;
}

uint64_t sub_227DEE604(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x227DEE60CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_227DEE610(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_227DEE618(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ReadingHistory.Day.CodingKeys()
{
  return &type metadata for ReadingHistory.Day.CodingKeys;
}

unint64_t sub_227DEE638()
{
  unint64_t result;

  result = qword_255928D98;
  if (!qword_255928D98)
  {
    result = MEMORY[0x22E2AA7D4](&unk_227E7063C, &type metadata for ReadingHistory.Day.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255928D98);
  }
  return result;
}

unint64_t sub_227DEE680()
{
  unint64_t result;

  result = qword_255928DA0;
  if (!qword_255928DA0)
  {
    result = MEMORY[0x22E2AA7D4](&unk_227E706F4, &type metadata for ReadingHistory.DayEntry.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255928DA0);
  }
  return result;
}

unint64_t sub_227DEE6C8()
{
  unint64_t result;

  result = qword_255928DA8;
  if (!qword_255928DA8)
  {
    result = MEMORY[0x22E2AA7D4](&unk_227E707AC, &type metadata for ReadingHistory.Streak.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255928DA8);
  }
  return result;
}

unint64_t sub_227DEE710()
{
  unint64_t result;

  result = qword_255928DB0;
  if (!qword_255928DB0)
  {
    result = MEMORY[0x22E2AA7D4](&unk_227E70864, &type metadata for ReadingHistory.State.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255928DB0);
  }
  return result;
}

unint64_t sub_227DEE758()
{
  unint64_t result;

  result = qword_255928DB8;
  if (!qword_255928DB8)
  {
    result = MEMORY[0x22E2AA7D4](&unk_227E7096C, &type metadata for ReadingHistory.Notification.AddFakeSession.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255928DB8);
  }
  return result;
}

unint64_t sub_227DEE7A0()
{
  unint64_t result;

  result = qword_255928DC0;
  if (!qword_255928DC0)
  {
    result = MEMORY[0x22E2AA7D4](&unk_227E70994, &type metadata for ReadingHistory.Notification.ClearToday.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255928DC0);
  }
  return result;
}

unint64_t sub_227DEE7E8()
{
  unint64_t result;

  result = qword_255928DC8;
  if (!qword_255928DC8)
  {
    result = MEMORY[0x22E2AA7D4](&unk_227E709BC, &type metadata for ReadingHistory.Notification.ClearToday.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255928DC8);
  }
  return result;
}

unint64_t sub_227DEE830()
{
  unint64_t result;

  result = qword_255928DD0;
  if (!qword_255928DD0)
  {
    result = MEMORY[0x22E2AA7D4](&unk_227E708DC, &type metadata for ReadingHistory.Notification.AddFakeSession.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255928DD0);
  }
  return result;
}

unint64_t sub_227DEE878()
{
  unint64_t result;

  result = qword_255928DD8;
  if (!qword_255928DD8)
  {
    result = MEMORY[0x22E2AA7D4](&unk_227E70904, &type metadata for ReadingHistory.Notification.AddFakeSession.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255928DD8);
  }
  return result;
}

unint64_t sub_227DEE8C0()
{
  unint64_t result;

  result = qword_255928DE0;
  if (!qword_255928DE0)
  {
    result = MEMORY[0x22E2AA7D4](&unk_227E7088C, &type metadata for ReadingHistory.Notification.PlaceholderStreakDayGoalNeedsUpdate.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255928DE0);
  }
  return result;
}

unint64_t sub_227DEE908()
{
  unint64_t result;

  result = qword_255928DE8;
  if (!qword_255928DE8)
  {
    result = MEMORY[0x22E2AA7D4](&unk_227E708B4, &type metadata for ReadingHistory.Notification.PlaceholderStreakDayGoalNeedsUpdate.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255928DE8);
  }
  return result;
}

unint64_t sub_227DEE950()
{
  unint64_t result;

  result = qword_255928DF0;
  if (!qword_255928DF0)
  {
    result = MEMORY[0x22E2AA7D4](&unk_227E707D4, &type metadata for ReadingHistory.State.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255928DF0);
  }
  return result;
}

unint64_t sub_227DEE998()
{
  unint64_t result;

  result = qword_255928DF8;
  if (!qword_255928DF8)
  {
    result = MEMORY[0x22E2AA7D4](&unk_227E707FC, &type metadata for ReadingHistory.State.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255928DF8);
  }
  return result;
}

unint64_t sub_227DEE9E0()
{
  unint64_t result;

  result = qword_255928E00;
  if (!qword_255928E00)
  {
    result = MEMORY[0x22E2AA7D4](&unk_227E7071C, &type metadata for ReadingHistory.Streak.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255928E00);
  }
  return result;
}

unint64_t sub_227DEEA28()
{
  unint64_t result;

  result = qword_255928E08;
  if (!qword_255928E08)
  {
    result = MEMORY[0x22E2AA7D4](&unk_227E70744, &type metadata for ReadingHistory.Streak.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255928E08);
  }
  return result;
}

unint64_t sub_227DEEA70()
{
  unint64_t result;

  result = qword_255928E10;
  if (!qword_255928E10)
  {
    result = MEMORY[0x22E2AA7D4](&unk_227E70664, &type metadata for ReadingHistory.DayEntry.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255928E10);
  }
  return result;
}

unint64_t sub_227DEEAB8()
{
  unint64_t result;

  result = qword_255928E18;
  if (!qword_255928E18)
  {
    result = MEMORY[0x22E2AA7D4](&unk_227E7068C, &type metadata for ReadingHistory.DayEntry.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255928E18);
  }
  return result;
}

unint64_t sub_227DEEB00()
{
  unint64_t result;

  result = qword_255928E20;
  if (!qword_255928E20)
  {
    result = MEMORY[0x22E2AA7D4](&unk_227E705AC, &type metadata for ReadingHistory.Day.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255928E20);
  }
  return result;
}

unint64_t sub_227DEEB48()
{
  unint64_t result;

  result = qword_255928E28;
  if (!qword_255928E28)
  {
    result = MEMORY[0x22E2AA7D4](&unk_227E705D4, &type metadata for ReadingHistory.Day.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255928E28);
  }
  return result;
}

uint64_t sub_227DEEB8C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x54676E6964616572 && a2 == 0xEB00000000656D69;
  if (v2 || (sub_227E60698() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1818324839 && a2 == 0xE400000000000000 || (sub_227E60698() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6B61657274537369 && a2 == 0xEB00000000796144)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_227E60698();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_227DEED00(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1702125924 && a2 == 0xE400000000000000;
  if (v2 || (sub_227E60698() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 7954788 && a2 == 0xE300000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_227E60698();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_227DEEDD0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x65746144646E65 && a2 == 0xE700000000000000;
  if (v2 || (sub_227E60698() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6874676E656CLL && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_227E60698();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_227DEEEB8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x53746E6572727563 && a2 == 0xED00006B61657274;
  if (v2 || (sub_227E60698() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x53747365676E6F6CLL && a2 == 0xED00006B61657274 || (sub_227E60698() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7961646F74 && a2 == 0xE500000000000000 || (sub_227E60698() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x48676E6964616572 && a2 == 0xEE0079726F747369)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_227E60698();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_227DEF0CC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1702125924 && a2 == 0xE400000000000000;
  if (v2 || (sub_227E60698() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E6F697461727564 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_227E60698();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_227DEF1AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ReadingHistory.Streak(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_227DEF20C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  unsigned int (*v25)(char *, uint64_t, uint64_t);
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v35 = a2;
  v36 = a1;
  v2 = sub_227D68330((uint64_t *)&unk_253F3AFC0);
  MEMORY[0x24BDAC7A8](v2, v3);
  v33 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_227D68330(&qword_253F3B018);
  v6 = *(_QWORD *)(v5 - 8);
  v30 = v5;
  v31 = v6;
  MEMORY[0x24BDAC7A8](v5, v7);
  v9 = (uint64_t *)((char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = sub_227D68330((uint64_t *)&unk_253F3B020);
  MEMORY[0x24BDAC7A8](v10, v11);
  v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_227D68330(&qword_253F3AF68);
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14, v16);
  v18 = (char *)&v30 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_227D68330(&qword_253F3AF18);
  v32 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19, v20);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v18, v36, v14);
  sub_227D515E4(&qword_253F3AF60, &qword_253F3AF68, MEMORY[0x24BE184A8]);
  v34 = v14;
  sub_227E60080();
  sub_227D515E4((unint64_t *)&unk_253F3AF08, &qword_253F3AF18, MEMORY[0x24BE18238]);
  v23 = v22;
  v36 = v19;
  sub_227E603A4();
  v24 = v30;
  v25 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48);
  if (v25(v13, 1, v30) != 1)
  {
    v26 = v33;
    do
    {
      sub_227D5B0DC((uint64_t)v13, (uint64_t)v9, &qword_253F3B018);
      v27 = *v9;
      v28 = sub_227D68330((uint64_t *)&unk_253F3AFB0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v26, 1, 1, v28);
      v37 = v27;
      sub_227E5FCC0();
      sub_227D5809C((uint64_t)v9, &qword_253F3B018);
      sub_227E603A4();
    }
    while (v25(v13, 1, v24) != 1);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v23, v36);
}

uint64_t sub_227DEF4D0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  unsigned int (*v25)(char *, uint64_t, uint64_t);
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v35 = a2;
  v36 = a1;
  v2 = sub_227D68330(&qword_253F391D0);
  MEMORY[0x24BDAC7A8](v2, v3);
  v33 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_227D68330(&qword_255928E40);
  v6 = *(_QWORD *)(v5 - 8);
  v30 = v5;
  v31 = v6;
  MEMORY[0x24BDAC7A8](v5, v7);
  v9 = (uint64_t *)((char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = sub_227D68330(&qword_255928EF0);
  MEMORY[0x24BDAC7A8](v10, v11);
  v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_227D68330(&qword_253F3AF30);
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14, v16);
  v18 = (char *)&v30 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_227D68330(&qword_255928EF8);
  v32 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19, v20);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v18, v36, v14);
  sub_227D515E4(&qword_255928F00, &qword_253F3AF30, MEMORY[0x24BE184A8]);
  v34 = v14;
  sub_227E60080();
  sub_227D515E4((unint64_t *)&unk_255928F08, &qword_255928EF8, MEMORY[0x24BE18238]);
  v23 = v22;
  v36 = v19;
  sub_227E603A4();
  v24 = v30;
  v25 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48);
  if (v25(v13, 1, v30) != 1)
  {
    v26 = v33;
    do
    {
      sub_227D5B0DC((uint64_t)v13, (uint64_t)v9, &qword_255928E40);
      v27 = *v9;
      v28 = sub_227E5F27C();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v26, 1, 1, v28);
      v37 = v27;
      type metadata accessor for ReadingHistoryModel(0);
      sub_227E5FCC0();
      sub_227D5809C((uint64_t)v9, &qword_255928E40);
      sub_227E603A4();
    }
    while (v25(v13, 1, v24) != 1);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v23, v36);
}

uint64_t sub_227DEF7A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD aBlock[6];
  _BYTE v35[48];

  v31 = a4;
  v10 = sub_227E5F948();
  v32 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10, v11);
  v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_227E5F978();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14, v16);
  v18 = (char *)&v31 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v20 = result;
    swift_beginAccess();
    v21 = MEMORY[0x22E2AA96C](a3 + 16);
    swift_unknownObjectRelease();
    if (v21)
    {
      v31 = *(_QWORD *)(v20 + 24);
      sub_227D5B0DC(a1, (uint64_t)v35, &qword_253F3A088);
      v22 = swift_allocObject();
      *(_QWORD *)(v22 + 16) = a5;
      *(_QWORD *)(v22 + 24) = a6;
      sub_227D5B0DC((uint64_t)v35, v22 + 32, &qword_253F3A088);
      aBlock[4] = sub_227DFD7B4;
      aBlock[5] = v22;
      aBlock[0] = MEMORY[0x24BDAC760];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_227D5A858;
      aBlock[3] = &unk_24F08EE78;
      v23 = _Block_copy(aBlock);
      swift_retain();
      sub_227E5F960();
      v33 = MEMORY[0x24BEE4AF8];
      sub_227D51624((unint64_t *)&unk_253F3AED0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
      sub_227D68330((uint64_t *)&unk_253F3AFE0);
      sub_227D515E4((unint64_t *)&unk_253F3AFF0, (uint64_t *)&unk_253F3AFE0, MEMORY[0x24BEE12C8]);
      sub_227E603E0();
      MEMORY[0x22E2A991C](0, v18, v13, v23);
      _Block_release(v23);
      (*(void (**)(char *, uint64_t))(v32 + 8))(v13, v10);
      (*(void (**)(char *, uint64_t))(v15 + 8))(v18, v14);
      swift_release();
      return swift_release();
    }
    else
    {
      sub_227E60248();
      sub_227D68330(&qword_253F3B090);
      v24 = swift_allocObject();
      *(_OWORD *)(v24 + 16) = xmmword_227E6F1B0;
      v25 = v31;
      aBlock[0] = v31;
      v26 = sub_227E5FFC0();
      v28 = v27;
      *(_QWORD *)(v24 + 56) = MEMORY[0x24BEE0D00];
      *(_QWORD *)(v24 + 64) = sub_227D57A70();
      *(_QWORD *)(v24 + 32) = v26;
      *(_QWORD *)(v24 + 40) = v28;
      sub_227D52DBC(0, (unint64_t *)&qword_253F3B060);
      v29 = (void *)sub_227E60374();
      sub_227E5F564();
      swift_bridgeObjectRelease();

      swift_beginAccess();
      v30 = sub_227E556DC(v25);
      swift_endAccess();
      result = swift_release();
      if (v30)
        return sub_227D5B660(v30);
    }
  }
  return result;
}

uint64_t sub_227DEFB38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t result;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD aBlock[6];

  v36 = a5;
  v37 = a6;
  v35 = a4;
  v8 = sub_227E5F948();
  v39 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8, v9);
  v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = sub_227E5F978();
  v12 = *(_QWORD *)(v38 - 8);
  MEMORY[0x24BDAC7A8](v38, v13);
  v15 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_227D68330(&qword_253F3A080);
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(_QWORD *)(v17 + 64);
  MEMORY[0x24BDAC7A8](v16, v19);
  v20 = (char *)&v35 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v22 = result;
    swift_beginAccess();
    v23 = MEMORY[0x22E2AA96C](a3 + 16);
    swift_unknownObjectRelease();
    if (v23)
    {
      v35 = *(_QWORD *)(v22 + 24);
      sub_227D5DF48(a1, (uint64_t)&v35 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_253F3A080);
      v24 = (*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
      v25 = swift_allocObject();
      v26 = v37;
      *(_QWORD *)(v25 + 16) = v36;
      *(_QWORD *)(v25 + 24) = v26;
      sub_227D5B0DC((uint64_t)v20, v25 + v24, &qword_253F3A080);
      aBlock[4] = sub_227DFE2F0;
      aBlock[5] = v25;
      aBlock[0] = MEMORY[0x24BDAC760];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_227D5A858;
      aBlock[3] = &unk_24F08F148;
      v27 = _Block_copy(aBlock);
      swift_retain();
      sub_227E5F960();
      v40 = MEMORY[0x24BEE4AF8];
      sub_227D51624((unint64_t *)&unk_253F3AED0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
      sub_227D68330((uint64_t *)&unk_253F3AFE0);
      sub_227D515E4((unint64_t *)&unk_253F3AFF0, (uint64_t *)&unk_253F3AFE0, MEMORY[0x24BEE12C8]);
      sub_227E603E0();
      MEMORY[0x22E2A991C](0, v15, v11, v27);
      _Block_release(v27);
      (*(void (**)(char *, uint64_t))(v39 + 8))(v11, v8);
      (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v38);
      swift_release();
      return swift_release();
    }
    else
    {
      sub_227E60248();
      sub_227D68330(&qword_253F3B090);
      v28 = swift_allocObject();
      *(_OWORD *)(v28 + 16) = xmmword_227E6F1B0;
      v29 = v35;
      aBlock[0] = v35;
      v30 = sub_227E5FFC0();
      v32 = v31;
      *(_QWORD *)(v28 + 56) = MEMORY[0x24BEE0D00];
      *(_QWORD *)(v28 + 64) = sub_227D57A70();
      *(_QWORD *)(v28 + 32) = v30;
      *(_QWORD *)(v28 + 40) = v32;
      sub_227D52DBC(0, (unint64_t *)&qword_253F3B060);
      v33 = (void *)sub_227E60374();
      sub_227E5F564();
      swift_bridgeObjectRelease();

      swift_beginAccess();
      v34 = sub_227E556E8(v29);
      swift_endAccess();
      result = swift_release();
      if (v34)
        return sub_227D5B660(v34);
    }
  }
  return result;
}

uint64_t sub_227DEFF14(uint64_t a1, uint64_t a2)
{
  uint64_t *v3;
  unint64_t v4;
  char v5;
  unint64_t v6;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  uint64_t v10;

  v3 = (uint64_t *)(a2 + 32);
  swift_beginAccess();
  v4 = sub_227D5B26C(a1);
  if ((v5 & 1) == 0)
    return swift_endAccess();
  v6 = v4;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v8 = *v3;
  v10 = *v3;
  *v3 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_227DD2708();
    v8 = v10;
  }
  sub_227E55CAC(v6, v8);
  *v3 = v8;
  swift_bridgeObjectRelease();
  swift_endAccess();
  return swift_release();
}

uint64_t ReadingHistoryDataStore.updateCollector.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  swift_beginAccess();
  return sub_227D5DF48(v1 + 16, a1, &qword_253F3AE58);
}

uint64_t (*ReadingHistoryDataStore.updateCollector.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_227DF0068()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v19[2];

  v1 = sub_227D68330((uint64_t *)&unk_253F39C20);
  v3 = MEMORY[0x24BDAC7A8](v1, v2);
  v5 = (char *)v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3, v6);
  v8 = (char *)v19 - v7;
  sub_227D68330((uint64_t *)&unk_255928ED0);
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_227E700C0;
  v19[0] = 0x3D6C65646F6DLL;
  v19[1] = 0xE600000000000000;
  ReadingHistoryModel.description.getter();
  sub_227E6002C();
  swift_bridgeObjectRelease();
  v10 = v19[1];
  *(_QWORD *)(v9 + 32) = v19[0];
  *(_QWORD *)(v9 + 40) = v10;
  v19[0] = 0;
  v19[1] = 0xE000000000000000;
  sub_227E60494();
  swift_bridgeObjectRelease();
  strcpy((char *)v19, "currentStreak=");
  HIBYTE(v19[1]) = -18;
  v11 = type metadata accessor for ReadingHistoryDataStore.State(0);
  sub_227D5DF48(v0 + *(int *)(v11 + 20), (uint64_t)v8, (uint64_t *)&unk_253F39C20);
  v12 = type metadata accessor for ReadingHistory.Streak(0);
  v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48);
  if (v13(v8, 1, v12) == 1)
  {
    sub_227D5809C((uint64_t)v8, (uint64_t *)&unk_253F39C20);
  }
  else
  {
    ReadingHistory.Streak.description.getter();
    sub_227D64BC4((uint64_t)v8, type metadata accessor for ReadingHistory.Streak);
  }
  sub_227E6002C();
  swift_bridgeObjectRelease();
  v14 = v19[1];
  *(_QWORD *)(v9 + 48) = v19[0];
  *(_QWORD *)(v9 + 56) = v14;
  v19[0] = 0x3D7961646F74;
  v19[1] = 0xE600000000000000;
  sub_227E5F210();
  sub_227E6002C();
  swift_bridgeObjectRelease();
  v15 = v19[1];
  *(_QWORD *)(v9 + 64) = v19[0];
  *(_QWORD *)(v9 + 72) = v15;
  v19[0] = 0;
  v19[1] = 0xE000000000000000;
  sub_227E60494();
  swift_bridgeObjectRelease();
  strcpy((char *)v19, "longestStreak=");
  HIBYTE(v19[1]) = -18;
  sub_227D5DF48(v0 + *(int *)(v11 + 28), (uint64_t)v5, (uint64_t *)&unk_253F39C20);
  if (v13(v5, 1, v12) == 1)
  {
    sub_227D5809C((uint64_t)v5, (uint64_t *)&unk_253F39C20);
  }
  else
  {
    ReadingHistory.Streak.description.getter();
    sub_227D64BC4((uint64_t)v5, type metadata accessor for ReadingHistory.Streak);
  }
  sub_227E6002C();
  swift_bridgeObjectRelease();
  v16 = v19[1];
  *(_QWORD *)(v9 + 80) = v19[0];
  *(_QWORD *)(v9 + 88) = v16;
  v19[0] = v9;
  sub_227D68330(&qword_255928D00);
  sub_227D515E4((unint64_t *)&qword_255928EE0, &qword_255928D00, MEMORY[0x24BEE12B0]);
  v17 = sub_227E5FF54();
  swift_bridgeObjectRelease();
  return v17;
}

uint64_t sub_227DF03B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unsigned int (*v33)(char *, uint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, _QWORD, uint64_t, uint64_t);
  unsigned int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  void *v51;
  char *v52;
  char *v53;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  _QWORD aBlock[6];

  v1 = sub_227E5F948();
  v64 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1, v2);
  v67 = (char *)&v55 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_227E5F978();
  v65 = *(_QWORD *)(v4 - 8);
  v66 = v4;
  MEMORY[0x24BDAC7A8](v4, v5);
  v63 = (char *)&v55 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_227E5F954();
  v59 = *(_QWORD *)(v7 - 8);
  v60 = v7;
  MEMORY[0x24BDAC7A8](v7, v8);
  v57 = (char *)&v55 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_227D68330((uint64_t *)&unk_253F39C20);
  v12 = MEMORY[0x24BDAC7A8](v10, v11);
  v14 = (char *)&v55 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12, v15);
  v17 = (char *)&v55 - v16;
  v18 = sub_227D68330(&qword_253F391D0);
  v55 = *(_QWORD *)(v18 - 8);
  v20 = MEMORY[0x24BDAC7A8](v18, v19);
  v58 = (uint64_t)&v55 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = v21;
  MEMORY[0x24BDAC7A8](v20, v22);
  v24 = (char *)&v55 - v23;
  v25 = type metadata accessor for ReadingHistoryDataStore.State(0);
  MEMORY[0x24BDAC7A8](v25, v26);
  v28 = (char *)&v55 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = v0;
  v29 = v0 + OBJC_IVAR____TtC13BookDataStore23ReadingHistoryDataStore__state;
  swift_beginAccess();
  sub_227D5DFFC(v29, (uint64_t)v28, type metadata accessor for ReadingHistoryDataStore.State);
  v30 = *(int *)(v25 + 20);
  v62 = v28;
  v31 = (uint64_t)&v28[v30];
  sub_227D5DF48((uint64_t)&v28[v30], (uint64_t)v17, (uint64_t *)&unk_253F39C20);
  v32 = type metadata accessor for ReadingHistory.Streak(0);
  v33 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 48);
  if (v33(v17, 1, v32) == 1)
  {
    sub_227D5809C((uint64_t)v17, (uint64_t *)&unk_253F39C20);
    v34 = sub_227E5F27C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v24, 1, 1, v34);
  }
  else
  {
    v35 = sub_227E5F27C();
    v36 = v1;
    v37 = *(_QWORD *)(v35 - 8);
    (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v24, v17, v35);
    sub_227D64BC4((uint64_t)v17, type metadata accessor for ReadingHistory.Streak);
    v38 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v37 + 56);
    v1 = v36;
    v38(v24, 0, 1, v35);
  }
  sub_227D5DF48(v31, (uint64_t)v14, (uint64_t *)&unk_253F39C20);
  v39 = v33(v14, 1, v32);
  v40 = (uint64_t)v24;
  if (v39 == 1)
  {
    sub_227D5809C((uint64_t)v14, (uint64_t *)&unk_253F39C20);
    v41 = 0;
  }
  else
  {
    v41 = *(_QWORD *)&v14[*(int *)(v32 + 20)];
    sub_227D64BC4((uint64_t)v14, type metadata accessor for ReadingHistory.Streak);
  }
  sub_227D52DBC(0, (unint64_t *)&qword_253F3B040);
  v43 = v59;
  v42 = v60;
  v44 = v57;
  (*(void (**)(char *, _QWORD, uint64_t))(v59 + 104))(v57, *MEMORY[0x24BEE5470], v60);
  v45 = (void *)sub_227E602F0();
  (*(void (**)(char *, uint64_t))(v43 + 8))(v44, v42);
  v46 = swift_allocObject();
  swift_weakInit();
  v47 = v58;
  sub_227D5DF48(v40, v58, &qword_253F391D0);
  v48 = (*(unsigned __int8 *)(v55 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v55 + 80);
  v49 = (v56 + v48 + 7) & 0xFFFFFFFFFFFFFFF8;
  v50 = swift_allocObject();
  *(_QWORD *)(v50 + 16) = v46;
  sub_227D5B0DC(v47, v50 + v48, &qword_253F391D0);
  *(_QWORD *)(v50 + v49) = v41;
  aBlock[4] = sub_227DFD9A0;
  aBlock[5] = v50;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_227D5A858;
  aBlock[3] = &unk_24F08EF68;
  v51 = _Block_copy(aBlock);
  swift_retain();
  v52 = v63;
  sub_227E5F960();
  v68 = MEMORY[0x24BEE4AF8];
  sub_227D51624((unint64_t *)&unk_253F3AED0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  sub_227D68330((uint64_t *)&unk_253F3AFE0);
  sub_227D515E4((unint64_t *)&unk_253F3AFF0, (uint64_t *)&unk_253F3AFE0, MEMORY[0x24BEE12C8]);
  v53 = v67;
  sub_227E603E0();
  MEMORY[0x22E2A991C](0, v52, v53, v51);
  _Block_release(v51);

  (*(void (**)(char *, uint64_t))(v64 + 8))(v53, v1);
  (*(void (**)(char *, uint64_t))(v65 + 8))(v52, v66);
  sub_227D5809C(v40, &qword_253F391D0);
  sub_227D64BC4((uint64_t)v62, type metadata accessor for ReadingHistoryDataStore.State);
  swift_release();
  return swift_release();
}

void sub_227DF0954(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t Strong;
  uint64_t v25;
  void *v26;
  id v27;
  void *v28;
  char **v29;
  char *v30;
  void (*v31)(char *, _QWORD, uint64_t);
  uint64_t v32;
  void (*v33)(char *, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, uint64_t);
  uint64_t v39;
  BOOL v40;
  uint64_t v41;
  void *v42;
  void *v43;
  id v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;

  v49 = a3;
  v50 = a2;
  v3 = sub_227E5F2E8();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3, v5);
  v7 = (char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_227E5F300();
  v47 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8, v9);
  v11 = (char *)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_227D68330(&qword_253F391D0);
  MEMORY[0x24BDAC7A8](v12, v13);
  v15 = (char *)&v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_227E5F27C();
  v17 = *(_QWORD *)(v16 - 8);
  v19 = MEMORY[0x24BDAC7A8](v16, v18);
  v21 = (char *)&v44 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19, v22);
  v48 = (char *)&v44 - v23;
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v25 = Strong;
    v46 = v8;
    v26 = *(void **)(Strong + 112);
    sub_227D5DF48(v50, (uint64_t)v15, &qword_253F391D0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
    {
      v27 = v26;
      sub_227D5809C((uint64_t)v15, &qword_253F391D0);
      v28 = (void *)sub_227E5FF78();
      objc_msgSend(v27, sel_removeObjectForKey_, v28);

      v29 = &selRef__updatedReachability;
LABEL_9:
      v43 = (void *)sub_227E5FF78();
      objc_msgSend(v26, v29[26], v49, v43);
      swift_release();

      return;
    }
    v50 = v25;
    v30 = v48;
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v48, v15, v16);
    (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v21, v30, v16);
    v45 = v26;
    v44 = v26;
    sub_227E5F288();
    v31 = *(void (**)(char *, _QWORD, uint64_t))(v4 + 104);
    v31(v7, *MEMORY[0x24BDCF240], v3);
    v32 = sub_227E5F2F4();
    v33 = *(void (**)(char *, uint64_t))(v4 + 8);
    v33(v7, v3);
    v31(v7, *MEMORY[0x24BDCF250], v3);
    v34 = sub_227E5F2F4();
    v33(v7, v3);
    v35 = 100 * v32;
    if ((unsigned __int128)(v32 * (__int128)100) >> 64 == (100 * v32) >> 63)
    {
      v36 = v35 + v34;
      if (!__OFADD__(v35, v34))
      {
        v31(v7, *MEMORY[0x24BDCF220], v3);
        v37 = sub_227E5F2F4();
        v38 = *(void (**)(char *, uint64_t))(v17 + 8);
        v38(v21, v16);
        v33(v7, v3);
        (*(void (**)(char *, uint64_t))(v47 + 8))(v11, v46);
        v39 = 100 * v36;
        if ((unsigned __int128)(v36 * (__int128)100) >> 64 == (100 * v36) >> 63)
        {
          v40 = __OFADD__(v39, v37);
          v41 = v39 + v37;
          if (!v40)
          {
            v42 = (void *)sub_227E5FF78();
            v29 = &selRef__updatedReachability;
            objc_msgSend(v44, sel_setInteger_forKey_, v41, v42);

            v38(v48, v16);
            v26 = v45;
            goto LABEL_9;
          }
LABEL_14:
          __break(1u);
          return;
        }
LABEL_13:
        __break(1u);
        goto LABEL_14;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_13;
  }
}

uint64_t static ReadingHistoryDataStore.recalculationCount.getter()
{
  swift_beginAccess();
  return qword_255928E80;
}

uint64_t static ReadingHistoryDataStore.recalculationCount.setter(uint64_t a1)
{
  uint64_t result;

  result = swift_beginAccess();
  qword_255928E80 = a1;
  return result;
}

uint64_t (*static ReadingHistoryDataStore.recalculationCount.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t ReadingHistoryDataStore.__allocating_init(goals:modelProvider:transactionProvider:config:userDefaults:currentDate:)(_QWORD *a1, uint64_t a2, uint64_t a3, unsigned __int8 *a4, _QWORD *a5, void (*a6)(void), uint64_t a7)
{
  uint64_t v14;

  swift_allocObject();
  v14 = sub_227DFB658(a1, a2, a3, a4, a5, a6, a7);
  swift_unknownObjectRelease();

  swift_release();
  return v14;
}

uint64_t sub_227DF0EA0@<X0>(uint64_t (*a1)(uint64_t, uint64_t, uint64_t, uint64_t)@<X1>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t, uint64_t, uint64_t, uint64_t);
  BOOL v17;
  uint64_t (*v18)(uint64_t, uint64_t, uint64_t, uint64_t);
  id v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  void (*v29)(uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t), uint64_t);
  void (*v30)(uint64_t, char *, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;

  v35 = a2;
  v3 = sub_227E5F300();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3, v5);
  v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_227E5F27C();
  v9 = *(_QWORD *)(v8 - 8);
  v11 = MEMORY[0x24BDAC7A8](v8, v10);
  v13 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11, v14);
  v16 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&v35 - v15);
  sub_227E5F288();
  sub_227E5F1F8();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  v17 = sub_227E05058(a1, 1);
  if (!sub_227E05058(v16, 1))
  {
    sub_227E60248();
    if (qword_253F39FF8[0] == -1)
    {
LABEL_6:
      v19 = (id)qword_253F39FF0;
      sub_227E5F564();

      (*(void (**)(uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t), uint64_t))(v9 + 8))(v16, v8);
      goto LABEL_13;
    }
LABEL_15:
    swift_once();
    goto LABEL_6;
  }
  swift_beginAccess();
  if (__OFADD__(qword_255928E80, 1))
  {
    __break(1u);
    goto LABEL_15;
  }
  ++qword_255928E80;
  if (v17)
    v18 = a1;
  else
    v18 = v16;
  (*(void (**)(char *, uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t), uint64_t))(v9 + 16))(v13, v18, v8);
  v20 = sub_227E052F0((uint64_t)v13, 1);
  sub_227E60248();
  if (qword_253F39FF8[0] != -1)
    swift_once();
  v21 = (void *)qword_253F39FF0;
  sub_227D68330(&qword_253F3B090);
  v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_227E6F040;
  v23 = v21;
  v24 = sub_227E5F210();
  v26 = v25;
  *(_QWORD *)(v22 + 56) = MEMORY[0x24BEE0D00];
  v27 = sub_227D57A70();
  *(_QWORD *)(v22 + 32) = v24;
  *(_QWORD *)(v22 + 40) = v26;
  v28 = MEMORY[0x24BEE17F0];
  *(_QWORD *)(v22 + 96) = MEMORY[0x24BEE1768];
  *(_QWORD *)(v22 + 104) = v28;
  *(_QWORD *)(v22 + 64) = v27;
  *(_QWORD *)(v22 + 72) = v20;
  sub_227E5F564();

  swift_bridgeObjectRelease();
  v29 = *(void (**)(uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t), uint64_t))(v9 + 8);
  v29(v16, v8);
  if (v20 >= 2)
  {
    v30 = *(void (**)(uint64_t, char *, uint64_t))(v9 + 32);
    v31 = v35;
    v30(v35, v13, v8);
    v32 = type metadata accessor for ReadingHistory.Streak(0);
    *(_QWORD *)(v31 + *(int *)(v32 + 20)) = v20;
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v31, 0, 1, v32);
  }
  v29((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v13, v8);
LABEL_13:
  v34 = type metadata accessor for ReadingHistory.Streak(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v35, 1, 1, v34);
}

uint64_t sub_227DF1210@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t, uint64_t)@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t (*v33)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t (*v34)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  void (*v37)(char *, uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t), void (*)(_QWORD));
  void (*v38)(char *);
  uint64_t v39;
  uint64_t (*v40)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v41;
  uint64_t v42;
  BOOL v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(_QWORD);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t (*v56)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v58;
  BOOL v59;
  BOOL v60;
  char v61;
  uint64_t v62;
  void *v63;
  uint64_t v64;
  id v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  void (*v71)(uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t), void (*)(_QWORD));
  id v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unsigned int v81;
  unsigned int v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  void (*v86)(char *, uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t), void (*)(_QWORD));
  uint64_t v87;
  uint64_t (*v88)(uint64_t, uint64_t, uint64_t, uint64_t);
  void (*v89)(char *, uint64_t);
  uint64_t v90;
  void (*v91)(_QWORD);
  uint64_t (*v92)(uint64_t, uint64_t, uint64_t, uint64_t);

  v92 = a3;
  v84 = a2;
  v78 = a4;
  v79 = a1;
  v4 = sub_227D68330((uint64_t *)&unk_253F39C20);
  v6 = MEMORY[0x24BDAC7A8](v4, v5);
  v74 = (char *)&v73 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6, v8);
  v80 = (uint64_t)&v73 - v9;
  v87 = type metadata accessor for ReadingHistory.Streak(0);
  v85 = *(_QWORD *)(v87 - 8);
  MEMORY[0x24BDAC7A8](v87, v10);
  v76 = (uint64_t)&v73 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_227E5F2E8();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12, v14);
  v16 = (char *)&v73 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_227E5F300();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17, v19);
  v21 = (char *)&v73 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_227E5F27C();
  v23 = *(_QWORD *)(v22 - 8);
  v25 = MEMORY[0x24BDAC7A8](v22, v24);
  v75 = (char *)&v73 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = MEMORY[0x24BDAC7A8](v25, v27);
  v30 = (char *)&v73 - v29;
  MEMORY[0x24BDAC7A8](v28, v31);
  v33 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&v73 - v32);
  sub_227E5F288();
  v88 = v33;
  v34 = v92;
  sub_227E5F1F8();
  v89 = *(void (**)(char *, uint64_t))(v18 + 8);
  v90 = v17;
  v35 = v17;
  v36 = v23;
  v89(v21, v35);
  v37 = *(void (**)(char *, uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t), void (*)(_QWORD)))(v23 + 16);
  v91 = (void (*)(_QWORD))v22;
  v86 = v37;
  v37(v30, v34, (void (*)(_QWORD))v22);
  sub_227E5F288();
  v38 = *(void (**)(char *))(v13 + 104);
  v82 = *MEMORY[0x24BDCF240];
  v38(v16);
  v39 = sub_227E5F2F4();
  v40 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 8);
  ((void (*)(char *, uint64_t))v40)(v16, v12);
  v81 = *MEMORY[0x24BDCF250];
  v38(v16);
  v41 = sub_227E5F2F4();
  ((void (*)(char *, uint64_t))v40)(v16, v12);
  v42 = 100 * v39;
  if ((unsigned __int128)(v39 * (__int128)100) >> 64 != (100 * v39) >> 63)
  {
    __break(1u);
    goto LABEL_35;
  }
  v43 = __OFADD__(v42, v41);
  v44 = v42 + v41;
  if (v43)
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  v77 = v44;
  v39 = *MEMORY[0x24BDCF220];
  ((void (*)(char *, uint64_t, uint64_t))v38)(v16, v39, v12);
  v45 = sub_227E5F2F4();
  v46 = v91;
  v83 = *(char **)(v36 + 8);
  ((void (*)(char *, void (*)(_QWORD)))v83)(v30, v91);
  ((void (*)(char *, uint64_t))v40)(v16, v12);
  v89(v21, v90);
  v86(v30, v88, v46);
  sub_227E5F288();
  ((void (*)(char *, _QWORD, uint64_t))v38)(v16, v82, v12);
  v36 = sub_227E5F2F4();
  ((void (*)(char *, uint64_t))v40)(v16, v12);
  ((void (*)(char *, _QWORD, uint64_t))v38)(v16, v81, v12);
  v47 = sub_227E5F2F4();
  ((void (*)(char *, uint64_t))v40)(v16, v12);
  v48 = 100 * v36;
  if ((unsigned __int128)(v36 * (__int128)100) >> 64 != (100 * v36) >> 63)
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  v36 = v48 + v47;
  if (__OFADD__(v48, v47))
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  ((void (*)(char *, uint64_t, uint64_t))v38)(v16, v39, v12);
  v49 = sub_227E5F2F4();
  v50 = v30;
  v38 = (void (*)(char *))v91;
  v30 = v83;
  ((void (*)(char *, void (*)(_QWORD)))v83)(v50, v91);
  ((void (*)(char *, uint64_t))v40)(v16, v12);
  v89(v21, v90);
  v51 = v79;
  v52 = sub_227E05848(v84);
  v53 = *(_QWORD *)(sub_227DF9298(v52, v77, v45, v36, v49) + 16);
  swift_release();
  v54 = v51 + *(int *)(type metadata accessor for ReadingHistoryDataStore.State(0) + 20);
  v55 = v80;
  sub_227D5DF48(v54, v80, (uint64_t *)&unk_253F39C20);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v85 + 48))(v55, 1, v87) == 1)
  {
    sub_227D5809C(v55, (uint64_t *)&unk_253F39C20);
    v40 = v88;
    v56 = v92;
LABEL_9:
    sub_227DF0EA0(v56, v78);
    return ((uint64_t (*)(uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t), void (*)(char *)))v30)(v40, v38);
  }
  v39 = v76;
  sub_227D5E458(v55, v76, type metadata accessor for ReadingHistory.Streak);
  v40 = v88;
  v56 = v92;
  if (v53)
  {
    sub_227D64BC4(v39, type metadata accessor for ReadingHistory.Streak);
    goto LABEL_9;
  }
  v36 = (uint64_t)v75;
  v86(v75, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v39, (void (*)(_QWORD))v38);
  v58 = *(_QWORD *)(v39 + *(int *)(v87 + 20));
  v59 = sub_227E05058(v56, 1);
  v60 = sub_227E05058(v40, 1);
  if ((sub_227E5F258() & 1) != 0)
  {
    v21 = v74;
    if (v59)
    {
      sub_227D5DFFC(v39, (uint64_t)v74, type metadata accessor for ReadingHistory.Streak);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v85 + 56))(v21, 0, 1, v87);
      sub_227E60224();
      if (qword_253F39FF8[0] == -1)
        goto LABEL_28;
    }
    else if (v58 < 2)
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v85 + 56))(v74, 1, 1, v87);
      sub_227E60224();
      if (qword_253F39FF8[0] == -1)
      {
LABEL_28:
        v72 = (id)qword_253F39FF0;
        sub_227E5F564();

LABEL_29:
        ((void (*)(uint64_t, void (*)(char *)))v30)(v36, v38);
        sub_227D64BC4(v39, type metadata accessor for ReadingHistory.Streak);
        ((void (*)(uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t), void (*)(char *)))v30)(v40, v38);
        return sub_227D5B0DC((uint64_t)v21, v78, (uint64_t *)&unk_253F39C20);
      }
    }
    else
    {
      v86(v74, v40, (void (*)(_QWORD))v38);
      *(_QWORD *)&v21[*(int *)(v87 + 20)] = v58 - 1;
      (*(void (**)(char *, _QWORD, uint64_t))(v85 + 56))(v21, 0, 1);
      sub_227E60224();
      if (qword_253F39FF8[0] == -1)
        goto LABEL_28;
    }
LABEL_38:
    swift_once();
    goto LABEL_28;
  }
  v61 = sub_227E5F258();
  v21 = v74;
  if ((v61 & 1) == 0)
  {
    if ((sub_227E5F24C() & 1) != 0 && !v60)
    {
      ((void (*)(uint64_t, void (*)(char *)))v30)(v36, v38);
      sub_227D64BC4(v39, type metadata accessor for ReadingHistory.Streak);
      ((void (*)(uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t), void (*)(char *)))v30)(v40, v38);
      if (v59)
      {
        v86(v21, v56, (void (*)(_QWORD))v38);
        *(_QWORD *)&v21[*(int *)(v87 + 20)] = 1;
        (*(void (**)(char *, _QWORD, uint64_t))(v85 + 56))(v21, 0, 1);
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v85 + 56))(v21, 1, 1, v87);
      }
      return sub_227D5B0DC((uint64_t)v21, v78, (uint64_t *)&unk_253F39C20);
    }
    sub_227DF0EA0(v56, (uint64_t)v21);
    goto LABEL_29;
  }
  if (!v59)
  {
    v86(v74, v40, (void (*)(_QWORD))v38);
    *(_QWORD *)&v21[*(int *)(v87 + 20)] = v58;
    (*(void (**)(char *, _QWORD, uint64_t))(v85 + 56))(v21, 0, 1);
    sub_227E60224();
    if (qword_253F39FF8[0] == -1)
      goto LABEL_28;
    goto LABEL_38;
  }
  v86(v74, v56, (void (*)(_QWORD))v38);
  v62 = v58 + 1;
  if (__OFADD__(v58, 1))
  {
    __break(1u);
    goto LABEL_40;
  }
  *(_QWORD *)&v21[*(int *)(v87 + 20)] = v62;
  (*(void (**)(char *, _QWORD, uint64_t))(v85 + 56))(v21, 0, 1);
  sub_227E60248();
  if (qword_253F39FF8[0] != -1)
LABEL_40:
    swift_once();
  v63 = (void *)qword_253F39FF0;
  sub_227D68330(&qword_253F3B090);
  v64 = swift_allocObject();
  *(_OWORD *)(v64 + 16) = xmmword_227E6F040;
  v65 = v63;
  v66 = sub_227E5F210();
  v68 = v67;
  *(_QWORD *)(v64 + 56) = MEMORY[0x24BEE0D00];
  v69 = sub_227D57A70();
  *(_QWORD *)(v64 + 32) = v66;
  *(_QWORD *)(v64 + 40) = v68;
  v70 = MEMORY[0x24BEE17F0];
  *(_QWORD *)(v64 + 96) = MEMORY[0x24BEE1768];
  *(_QWORD *)(v64 + 104) = v70;
  *(_QWORD *)(v64 + 64) = v69;
  *(_QWORD *)(v64 + 72) = v62;
  sub_227E5F564();

  swift_bridgeObjectRelease();
  v71 = (void (*)(uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t), void (*)(_QWORD)))v83;
  ((void (*)(char *, void (*)(char *)))v83)(v75, v38);
  sub_227D64BC4(v39, type metadata accessor for ReadingHistory.Streak);
  v71(v40, (void (*)(_QWORD))v38);
  return sub_227D5B0DC((uint64_t)v21, v78, (uint64_t *)&unk_253F39C20);
}

uint64_t sub_227DF1C34(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  char v64;
  uint64_t result;
  unsigned int (**v66)(char *, uint64_t, _QWORD *);
  _QWORD *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  void (*v77)(char *, uint64_t, uint64_t);
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unsigned int (**v81)(char *, uint64_t, _QWORD *);
  char *v82;
  uint64_t v83;
  uint64_t v84;
  void (*v85)(char *, uint64_t);
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  BOOL v90;
  uint64_t v91;
  char *v92;
  char *v93;
  char *v94;
  uint64_t v95;
  void *v96;
  uint64_t v97;
  id v98;
  uint64_t (*v99)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  unint64_t v109;
  uint64_t v110;
  uint64_t v111;
  unint64_t v112;
  unint64_t v113;
  unint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  unsigned int (*v129)(uint64_t, uint64_t, uint64_t);
  uint64_t v130;
  uint64_t v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  char *v139;
  uint64_t v140;
  id v141;
  uint64_t v142;
  uint64_t v143;
  char v144;
  char *v145;
  char *v146;
  _QWORD v147[2];
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  _QWORD *v155;
  char *v156;
  uint64_t v157;
  _QWORD *v158;
  char *v159;
  char *v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  unsigned int (**v165)(char *, uint64_t, _QWORD *);
  uint64_t v166;
  uint64_t v167;
  uint64_t (*v168)(uint64_t, uint64_t, uint64_t, uint64_t);
  _QWORD *v169;
  uint64_t v170;
  char *v171;
  uint64_t v172;
  uint64_t v173;
  char *v174;
  char *v175;
  uint64_t v176;
  uint64_t v177;
  char *v178;
  char *v179;
  char *v180;
  char *v181;
  uint64_t v182;

  v152 = *v1;
  v163 = sub_227D68330(&qword_253F3AEE0);
  v162 = *(_QWORD *)(v163 - 8);
  MEMORY[0x24BDAC7A8](v163, v3);
  v160 = (char *)v147 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_227D68330(&qword_253F39F90);
  v7 = MEMORY[0x24BDAC7A8](v5, v6);
  v167 = (uint64_t)v147 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7, v9);
  v161 = (uint64_t)v147 - v10;
  v11 = sub_227D68330(&qword_253F391F0);
  MEMORY[0x24BDAC7A8](v11, v12);
  v175 = (char *)v147 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_227D68330(&qword_253F391E8);
  MEMORY[0x24BDAC7A8](v14, v15);
  v174 = (char *)v147 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_227E5F0A8();
  v172 = *(_QWORD *)(v17 - 8);
  v173 = v17;
  MEMORY[0x24BDAC7A8](v17, v18);
  v171 = (char *)v147 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_227D68330(&qword_253F391D0);
  MEMORY[0x24BDAC7A8](v20, v21);
  v181 = (char *)v147 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v164 = type metadata accessor for ReadingHistoryDataStore.State(0);
  MEMORY[0x24BDAC7A8](v164, v23);
  v150 = (uint64_t)v147 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v154 = sub_227E5F2E8();
  v153 = *(_QWORD *)(v154 - 8);
  MEMORY[0x24BDAC7A8](v154, v25);
  v180 = (char *)v147 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = sub_227E5F300();
  v176 = *(_QWORD *)(v27 - 8);
  v177 = v27;
  MEMORY[0x24BDAC7A8](v27, v28);
  v178 = (char *)v147 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v166 = sub_227E5F27C();
  v30 = *(_QWORD *)(v166 - 8);
  v32 = MEMORY[0x24BDAC7A8](v166, v31);
  v170 = (uint64_t)v147 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = MEMORY[0x24BDAC7A8](v32, v34);
  v179 = (char *)v147 - v36;
  MEMORY[0x24BDAC7A8](v35, v37);
  v168 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)v147 - v38);
  v39 = sub_227D68330((uint64_t *)&unk_253F39C20);
  v41 = MEMORY[0x24BDAC7A8](v39, v40);
  v151 = (uint64_t)v147 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v41, v43);
  v157 = (uint64_t)v147 - v44;
  v45 = sub_227D68330(&qword_255928F18);
  MEMORY[0x24BDAC7A8](v45, v46);
  v48 = (char *)v147 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  v169 = (_QWORD *)sub_227D68330(&qword_255928F20);
  v165 = (unsigned int (**)(char *, uint64_t, _QWORD *))*(v169 - 1);
  MEMORY[0x24BDAC7A8](v169, v49);
  v159 = (char *)v147 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = type metadata accessor for ReadingHistoryModel(0);
  v53 = MEMORY[0x24BDAC7A8](v51, v52);
  v55 = (char *)v147 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = MEMORY[0x24BDAC7A8](v53, v56);
  v59 = (char *)v147 - v58;
  MEMORY[0x24BDAC7A8](v57, v60);
  v62 = (char *)v147 - v61;
  v155 = v1;
  v63 = (uint64_t)v1 + OBJC_IVAR____TtC13BookDataStore23ReadingHistoryDataStore__state;
  swift_beginAccess();
  sub_227D5DFFC(v63, (uint64_t)v62, type metadata accessor for ReadingHistoryModel);
  sub_227D51624(&qword_253F3A210, type metadata accessor for ReadingHistoryModel, (uint64_t)&protocol conformance descriptor for ReadingHistoryModel);
  v64 = sub_227E5FB1C();
  v156 = v62;
  result = sub_227D64BC4((uint64_t)v62, type metadata accessor for ReadingHistoryModel);
  if ((v64 & 1) != 0)
  {
    sub_227D5DFFC(v63, (uint64_t)v59, type metadata accessor for ReadingHistoryModel);
    sub_227D51624(&qword_253F3A230, type metadata accessor for ReadingHistoryModel, (uint64_t)&protocol conformance descriptor for ReadingHistoryModel);
    v149 = a1;
    sub_227E5FD44();
    sub_227D68330(&qword_253F3AF30);
    sub_227D515E4((unint64_t *)&unk_255928F28, &qword_253F3AF30, MEMORY[0x24BE184A0]);
    sub_227E5FD68();
    v66 = v165;
    v67 = v169;
    if (v165[6](v48, 1, v169) == 1)
    {
      sub_227D5809C((uint64_t)v48, &qword_255928F18);
    }
    else
    {
      v68 = (uint64_t)v159;
      v66[4](v159, (uint64_t)v48, v67);
      v69 = sub_227E5FC30();
      v158 = v147;
      MEMORY[0x24BDAC7A8](v69, v70);
      v145 = v59;
      v146 = v55;
      sub_227DE71E0(sub_227DFE784, (uint64_t)&v143, v69);
      swift_bridgeObjectRelease();
      ((void (*)(uint64_t, _QWORD *))v66[1])(v68, v67);
    }
    v71 = (char *)v168;
    v72 = v157;
    v73 = (uint64_t)v59;
    v74 = v164;
    sub_227D5DF48(v63 + *(int *)(v164 + 20), v157, (uint64_t *)&unk_253F39C20);
    v75 = *(int *)(v74 + 24);
    v148 = v63;
    v76 = v63 + v75;
    v77 = *(void (**)(char *, uint64_t, uint64_t))(v30 + 16);
    v78 = v166;
    v77(v71, v76, v166);
    v79 = sub_227E05848((uint64_t)v55);
    if (!*(_QWORD *)(v79 + 16))
    {
      swift_bridgeObjectRelease();
      sub_227DF2FC0((uint64_t)v55, v72, v71, (uint64_t)v155, v149);
      (*(void (**)(char *, uint64_t))(v30 + 8))(v71, v78);
      goto LABEL_54;
    }
    v147[1] = 0;
    v158 = v59;
    v159 = v55;
    v77(v179, (uint64_t)v71, v78);
    sub_227E5F288();
    v80 = v153;
    v81 = *(unsigned int (***)(char *, uint64_t, _QWORD *))(v153 + 104);
    v82 = v180;
    v83 = v154;
    ((void (*)(char *, _QWORD, uint64_t))v81)(v180, *MEMORY[0x24BDCF240], v154);
    v84 = sub_227E5F2F4();
    v85 = *(void (**)(char *, uint64_t))(v80 + 8);
    v85(v82, v83);
    v86 = *MEMORY[0x24BDCF250];
    v165 = v81;
    ((void (*)(char *, uint64_t, uint64_t))v81)(v82, v86, v83);
    v87 = sub_227E5F2F4();
    v169 = v85;
    v85(v82, v83);
    v88 = 100 * v84;
    v89 = v166;
    if ((unsigned __int128)(v84 * (__int128)100) >> 64 == (100 * v84) >> 63)
    {
      v90 = __OFADD__(v88, v87);
      v91 = v88 + v87;
      if (!v90)
      {
        v92 = v180;
        ((void (*)(char *, _QWORD, uint64_t))v165)(v180, *MEMORY[0x24BDCF220], v83);
        v93 = v178;
        v94 = v179;
        v95 = sub_227E5F2F4();
        v165 = *(unsigned int (***)(char *, uint64_t, _QWORD *))(v30 + 8);
        ((void (*)(char *, uint64_t))v165)(v94, v89);
        ((void (*)(char *, uint64_t))v169)(v92, v83);
        v169 = *(_QWORD **)(v176 + 8);
        ((void (*)(char *, uint64_t))v169)(v93, v177);
        if (*(_QWORD *)(v79 + 16) == 1 && (sub_227E4A6B4(v91, v95, v79) & 1) != 0)
        {
          swift_bridgeObjectRelease();
          sub_227E60224();
          if (qword_253F39FF8[0] != -1)
            swift_once();
          v96 = (void *)qword_253F39FF0;
          sub_227D68330(&qword_253F3B090);
          v97 = swift_allocObject();
          *(_OWORD *)(v97 + 16) = xmmword_227E6F1B0;
          v98 = v96;
          v99 = v168;
          v100 = sub_227E5F210();
          v102 = v101;
          *(_QWORD *)(v97 + 56) = MEMORY[0x24BEE0D00];
          *(_QWORD *)(v97 + 64) = sub_227D57A70();
          *(_QWORD *)(v97 + 32) = v100;
          *(_QWORD *)(v97 + 40) = v102;
          sub_227E5F564();

          swift_bridgeObjectRelease();
          v103 = v150;
          sub_227D5DFFC(v148, v150, type metadata accessor for ReadingHistoryDataStore.State);
          v104 = v151;
          v55 = v159;
          sub_227DF1210(v103, (uint64_t)v159, v99, v151);
          sub_227D64BC4(v103, type metadata accessor for ReadingHistoryDataStore.State);
          v72 = v157;
          sub_227D5809C(v157, (uint64_t *)&unk_253F39C20);
          sub_227D5B0DC(v104, v72, (uint64_t *)&unk_253F39C20);
          sub_227DF322C((uint64_t)v55, v72, (uint64_t)v156);
          v105 = v149;
          v89 = v166;
LABEL_52:
          sub_227DFE740((uint64_t)v156, (uint64_t)v55);
          sub_227DF2FC0((uint64_t)v55, v72, (char *)v99, (uint64_t)v155, v105);
          ((void (*)(uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t), uint64_t))v165)(v99, v89);
          v73 = (uint64_t)v158;
LABEL_54:
          sub_227D5809C(v72, (uint64_t *)&unk_253F39C20);
          sub_227D64BC4(v73, type metadata accessor for ReadingHistoryModel);
          return sub_227D64BC4((uint64_t)v55, type metadata accessor for ReadingHistoryModel);
        }
        v106 = *(_QWORD *)(v79 + 56);
        v179 = (char *)(v79 + 56);
        v107 = 1 << *(_BYTE *)(v79 + 32);
        v108 = -1;
        if (v107 < 64)
          v108 = ~(-1 << v107);
        v109 = v108 & v106;
        v180 = (char *)((unint64_t)(v107 + 63) >> 6);
        swift_bridgeObjectRetain();
        v110 = 0;
        v111 = (uint64_t)v181;
        v164 = v79;
        while (1)
        {
          if (v109)
          {
            v112 = __clz(__rbit64(v109));
            v109 &= v109 - 1;
            v113 = v112 | (v110 << 6);
          }
          else
          {
            v90 = __OFADD__(v110++, 1);
            if (v90)
              goto LABEL_58;
            if (v110 >= (uint64_t)v180)
            {
LABEL_50:
              swift_release();
              sub_227E60248();
              if (qword_253F39FF8[0] != -1)
                goto LABEL_62;
              goto LABEL_51;
            }
            v114 = *(_QWORD *)&v179[8 * v110];
            if (!v114)
            {
              v115 = v110 + 1;
              if (v110 + 1 >= (uint64_t)v180)
                goto LABEL_50;
              v114 = *(_QWORD *)&v179[8 * v115];
              if (!v114)
              {
                v115 = v110 + 2;
                if (v110 + 2 >= (uint64_t)v180)
                  goto LABEL_50;
                v114 = *(_QWORD *)&v179[8 * v115];
                if (!v114)
                {
                  v115 = v110 + 3;
                  if (v110 + 3 >= (uint64_t)v180)
                    goto LABEL_50;
                  v114 = *(_QWORD *)&v179[8 * v115];
                  if (!v114)
                  {
                    while (1)
                    {
                      v110 = v115 + 1;
                      if (__OFADD__(v115, 1))
                        goto LABEL_59;
                      if (v110 >= (uint64_t)v180)
                        goto LABEL_50;
                      v114 = *(_QWORD *)&v179[8 * v110];
                      ++v115;
                      if (v114)
                        goto LABEL_30;
                    }
                  }
                }
              }
              v110 = v115;
            }
LABEL_30:
            v109 = (v114 - 1) & v114;
            v113 = __clz(__rbit64(v114)) + (v110 << 6);
          }
          v116 = *(_QWORD *)(v79 + 48);
          v117 = *(_QWORD *)(v116 + 16 * v113);
          v118 = 100 * v117;
          if ((unsigned __int128)(v117 * (__int128)100) >> 64 != (100 * v117) >> 63)
          {
            __break(1u);
LABEL_57:
            __break(1u);
LABEL_58:
            __break(1u);
LABEL_59:
            __break(1u);
            goto LABEL_60;
          }
          v119 = *(_QWORD *)(v116 + 16 * v113 + 8);
          if (__OFADD__(v118, v119))
            goto LABEL_57;
          if (v118 + v119 <= 9999)
            break;
          v120 = v30;
          v121 = v177;
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v176 + 56))(v174, 1, 1, v177);
          v122 = sub_227E5F30C();
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v122 - 8) + 56))(v175, 1, 1, v122);
          LOBYTE(v146) = 1;
          v145 = 0;
          v144 = 1;
          v143 = 0;
          v123 = v171;
          sub_227E5F09C();
          v124 = v178;
          sub_227E5F288();
          sub_227E5F2B8();
          v111 = (uint64_t)v181;
          v125 = v121;
          v30 = v120;
          ((void (*)(char *, uint64_t))v169)(v124, v125);
          (*(void (**)(char *, uint64_t))(v172 + 8))(v123, v173);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v120 + 48))(v111, 1, v89) == 1)
          {
LABEL_17:
            sub_227D5809C(v111, &qword_253F391D0);
          }
          else
          {
            v126 = v170;
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v120 + 32))(v170, v111, v89);
            if ((sub_227E5F24C() & 1) != 0)
            {
              v127 = v161;
              ReadingHistoryModel.readingHistoryDay(for:)(v161);
              v128 = type metadata accessor for ReadingHistoryDay(0);
              v129 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v128 - 8) + 48);
              if (v129(v127, 1, v128) == 1)
              {
                sub_227D5809C(v127, &qword_253F39F90);
                v130 = 0;
              }
              else
              {
                v131 = v127 + *(int *)(v128 + 20);
                v132 = v160;
                v133 = v162;
                v134 = v127;
                v135 = v163;
                (*(void (**)(char *, uint64_t, uint64_t))(v162 + 16))(v160, v131, v163);
                sub_227D64BC4(v134, type metadata accessor for ReadingHistoryDay);
                sub_227E5F984();
                (*(void (**)(char *, uint64_t))(v133 + 8))(v132, v135);
                v130 = v182;
              }
              ReadingHistoryModel.readingHistoryDay(for:)(v167);
              v136 = v167;
              if (v129(v167, 1, v128) == 1)
              {
                sub_227D5809C(v136, &qword_253F39F90);
                v89 = v166;
                v30 = v120;
                v79 = v164;
              }
              else
              {
                v137 = v136 + *(int *)(v128 + 20);
                v138 = v162;
                v139 = v160;
                v140 = v163;
                (*(void (**)(char *, uint64_t, uint64_t))(v162 + 16))(v160, v137, v163);
                sub_227D64BC4(v136, type metadata accessor for ReadingHistoryDay);
                sub_227E5F984();
                (*(void (**)(char *, uint64_t))(v138 + 8))(v139, v140);
                v89 = v166;
                v30 = v120;
                v79 = v164;
                if (v130 >= 1 && v130 < v182)
                  ReadingHistoryModel.setGoal(_:date:)(v130, v170);
              }
              ((void (*)(uint64_t, uint64_t))v165)(v170, v89);
              v111 = (uint64_t)v181;
            }
            else
            {
              ((void (*)(uint64_t, uint64_t))v165)(v126, v89);
              v79 = v164;
            }
          }
        }
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v30 + 56))(v111, 1, 1, v89);
        goto LABEL_17;
      }
    }
    else
    {
LABEL_60:
      __break(1u);
    }
    __break(1u);
LABEL_62:
    swift_once();
LABEL_51:
    v141 = (id)qword_253F39FF0;
    sub_227E5F564();

    v142 = v151;
    v55 = v159;
    v99 = v168;
    sub_227DF0EA0(v168, v151);
    v72 = v157;
    sub_227D5809C(v157, (uint64_t *)&unk_253F39C20);
    sub_227D5B0DC(v142, v72, (uint64_t *)&unk_253F39C20);
    sub_227DF3614((uint64_t)v55, v79, v142);
    swift_bridgeObjectRelease();
    sub_227DF322C((uint64_t)v55, v142, (uint64_t)v156);
    sub_227D5809C(v142, (uint64_t *)&unk_253F39C20);
    v105 = v149;
    goto LABEL_52;
  }
  return result;
}

uint64_t sub_227DF2D20(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int (*v23)(char *, uint64_t, uint64_t);
  char *v25;
  void (*v26)(char *, char *, uint64_t);
  char *v27;
  char *v28;
  char *v29;
  void (*v30)(char *, uint64_t);
  void (*v31)(char *, uint64_t);
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;

  v35 = a3;
  v4 = sub_227D68330(&qword_253F391D0);
  v6 = MEMORY[0x24BDAC7A8](v4, v5);
  v33 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v6, v8);
  v11 = (char *)&v32 - v10;
  MEMORY[0x24BDAC7A8](v9, v12);
  v14 = (char *)&v32 - v13;
  v15 = sub_227E5F27C();
  v16 = *(_QWORD *)(v15 - 8);
  v18 = MEMORY[0x24BDAC7A8](v15, v17);
  v34 = (char *)&v32 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18, v20);
  v36 = (char *)&v32 - v21;
  v22 = *a1;
  type metadata accessor for ReadingHistoryModel(0);
  v37 = v22;
  sub_227D68330(&qword_253F3AF30);
  sub_227E5FCB4();
  v23 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
  if (v23(v14, 1, v15) == 1)
    return sub_227D5809C((uint64_t)v14, &qword_253F391D0);
  v25 = v14;
  v26 = *(void (**)(char *, char *, uint64_t))(v16 + 32);
  v26(v36, v25, v15);
  v37 = v22;
  sub_227E5FCB4();
  if (v23(v11, 1, v15) == 1)
  {
    (*(void (**)(char *, uint64_t))(v16 + 8))(v36, v15);
    return sub_227D5809C((uint64_t)v11, &qword_253F391D0);
  }
  else
  {
    v27 = v34;
    v26(v34, v11, v15);
    if ((sub_227E5F24C() & 1) != 0)
    {
      v28 = v33;
      v29 = v36;
      (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v33, v36, v15);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v28, 0, 1, v15);
      v37 = v22;
      sub_227E5FCC0();
      v30 = *(void (**)(char *, uint64_t))(v16 + 8);
      v30(v27, v15);
      return ((uint64_t (*)(char *, uint64_t))v30)(v29, v15);
    }
    else
    {
      v31 = *(void (**)(char *, uint64_t))(v16 + 8);
      v31(v27, v15);
      return ((uint64_t (*)(char *, uint64_t))v31)(v36, v15);
    }
  }
}

uint64_t sub_227DF2FC0(uint64_t a1, uint64_t a2, char *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  int *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  void (*v29)(char *, char *, uint64_t);
  char *v30;
  char *v31;
  char *v32;
  uint64_t v33;
  char *v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;

  v42 = a5;
  v43 = a4;
  v41 = a3;
  v38 = a2;
  v40 = sub_227E5F27C();
  v37 = *(_QWORD *)(v40 - 8);
  v6 = v37;
  MEMORY[0x24BDAC7A8](v40, v7);
  v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_227D68330((uint64_t *)&unk_253F39C20);
  v12 = MEMORY[0x24BDAC7A8](v10, v11);
  v39 = (char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12, v14);
  v16 = (char *)&v36 - v15;
  v17 = type metadata accessor for ReadingHistoryModel(0);
  v19 = MEMORY[0x24BDAC7A8](v17, v18);
  v21 = (char *)&v36 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19, v22);
  v24 = (char *)&v36 - v23;
  v25 = (int *)type metadata accessor for ReadingHistoryDataStore.State(0);
  MEMORY[0x24BDAC7A8](v25, v26);
  v28 = (char *)&v36 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_227D5DFFC(a1, (uint64_t)v24, type metadata accessor for ReadingHistoryModel);
  sub_227D5DF48(v38, (uint64_t)v16, (uint64_t *)&unk_253F39C20);
  v29 = *(void (**)(char *, char *, uint64_t))(v6 + 16);
  v30 = v9;
  v31 = v9;
  v33 = v40;
  v32 = v41;
  v29(v31, v41, v40);
  sub_227D5DFFC(a1, (uint64_t)v21, type metadata accessor for ReadingHistoryModel);
  v34 = v39;
  sub_227D5D2D4(v32, v39);
  sub_227D64BC4((uint64_t)v21, type metadata accessor for ReadingHistoryModel);
  sub_227D5E458((uint64_t)v24, (uint64_t)v28, type metadata accessor for ReadingHistoryModel);
  sub_227D5B0DC((uint64_t)v16, (uint64_t)&v28[v25[5]], (uint64_t *)&unk_253F39C20);
  (*(void (**)(char *, char *, uint64_t))(v37 + 32))(&v28[v25[6]], v30, v33);
  sub_227D5B0DC((uint64_t)v34, (uint64_t)&v28[v25[7]], (uint64_t *)&unk_253F39C20);
  sub_227DF48C4((uint64_t)v28, v42, 0x656772656DLL, 0xE500000000000000);
  return sub_227D64BC4((uint64_t)v28, type metadata accessor for ReadingHistoryDataStore.State);
}

uint64_t sub_227DF322C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  unsigned int (*v26)(char *, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _DWORD v45[4];
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v48 = a3;
  v5 = sub_227D68330(&qword_253F391D0);
  v7 = MEMORY[0x24BDAC7A8](v5, v6);
  v9 = (char *)v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7, v10);
  v12 = (char *)v45 - v11;
  v13 = sub_227D68330((uint64_t *)&unk_253F39C20);
  v15 = MEMORY[0x24BDAC7A8](v13, v14);
  v17 = (char *)v45 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15, v18);
  v20 = (char *)v45 - v19;
  v21 = type metadata accessor for ReadingHistory.Streak(0);
  v22 = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21, v23);
  v25 = (char *)v45 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_227D5DF48(a2, (uint64_t)v20, (uint64_t *)&unk_253F39C20);
  v26 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48);
  if (v26(v20, 1, v21) == 1)
  {
    sub_227D5809C((uint64_t)v20, (uint64_t *)&unk_253F39C20);
    return sub_227D5DFFC(a1, v48, type metadata accessor for ReadingHistoryModel);
  }
  sub_227D5E458((uint64_t)v20, (uint64_t)v25, type metadata accessor for ReadingHistory.Streak);
  v27 = *(int *)(v21 + 20);
  v28 = *(_QWORD *)&v25[v27];
  sub_227D5D2D4(v25, v17);
  if (v26(v17, 1, v21) == 1)
  {
    sub_227D5809C((uint64_t)v17, (uint64_t *)&unk_253F39C20);
    if (v28 < 1)
      goto LABEL_11;
  }
  else
  {
    v29 = *(_QWORD *)&v17[*(int *)(v21 + 20)];
    sub_227D64BC4((uint64_t)v17, type metadata accessor for ReadingHistory.Streak);
    if (v29 >= v28)
    {
LABEL_11:
      sub_227D64BC4((uint64_t)v25, type metadata accessor for ReadingHistory.Streak);
      return sub_227D5DFFC(a1, v48, type metadata accessor for ReadingHistoryModel);
    }
  }
  v30 = type metadata accessor for ReadingHistoryModel(0);
  v49 = *(_QWORD *)&v25[v27];
  v31 = sub_227D68330(&qword_253F3AF30);
  sub_227E5FCB4();
  v32 = sub_227E5F27C();
  v33 = *(_QWORD *)(v32 - 8);
  v34 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v33 + 48))(v12, 1, v32);
  sub_227D5809C((uint64_t)v12, &qword_253F391D0);
  if (v34 != 1)
    goto LABEL_11;
  v46 = v31;
  v47 = v30;
  v45[3] = sub_227E60248();
  if (qword_253F39FF8[0] != -1)
    swift_once();
  v35 = (void *)qword_253F39FF0;
  sub_227D68330(&qword_253F3B090);
  v36 = swift_allocObject();
  v37 = *(_QWORD *)&v25[v27];
  v38 = MEMORY[0x24BEE1768];
  *(_OWORD *)(v36 + 16) = xmmword_227E6F040;
  v39 = MEMORY[0x24BEE17F0];
  *(_QWORD *)(v36 + 56) = v38;
  *(_QWORD *)(v36 + 64) = v39;
  *(_QWORD *)(v36 + 32) = v37;
  v40 = v35;
  v41 = sub_227E5F210();
  v43 = v42;
  *(_QWORD *)(v36 + 96) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v36 + 104) = sub_227D57A70();
  *(_QWORD *)(v36 + 72) = v41;
  *(_QWORD *)(v36 + 80) = v43;
  sub_227E5F564();

  swift_bridgeObjectRelease();
  sub_227D5DFFC(a1, v48, type metadata accessor for ReadingHistoryModel);
  (*(void (**)(char *, char *, uint64_t))(v33 + 16))(v9, v25, v32);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v9, 0, 1, v32);
  v49 = v37;
  sub_227E5FCC0();
  return sub_227D64BC4((uint64_t)v25, type metadata accessor for ReadingHistory.Streak);
}

uint64_t sub_227DF3614@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  _QWORD *v73;
  uint64_t v74;
  _QWORD *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  void (**v80)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v81;
  char *v82;
  char *v83;
  void (*v84)(char *, uint64_t, uint64_t, uint64_t);
  void (*v85)(char *, char *, uint64_t);
  char *v86;
  unint64_t v87;
  unint64_t v88;
  uint64_t v89;
  unint64_t v90;
  unint64_t v91;
  char *v92;
  char *v93;
  char *v94;
  uint64_t v95;
  unint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  unint64_t v100;
  void (**v101)(char *, uint64_t, uint64_t, uint64_t);
  char *v102;
  uint64_t v103;
  void (*v104)(uint64_t, _QWORD, uint64_t);
  uint64_t v105;
  char *v106;
  uint64_t v107;
  void (*v108)(char *, char *, uint64_t);
  char *v109;
  char *v110;
  uint64_t v111;
  void (*v112)(char *, _QWORD, uint64_t);
  char *v113;
  uint64_t v114;
  uint64_t v115;
  void (*v116)(char *, uint64_t);
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  BOOL v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  int v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  char *v138;
  char *v139;
  uint64_t v140;
  uint64_t v141;
  char *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t result;
  char *v146;
  uint64_t v147;
  char *v148;
  void (*v149)(uint64_t, _QWORD, uint64_t);
  char *v150;
  uint64_t v151;
  uint64_t v152;
  char *v153;
  char *v154;
  uint64_t v155;
  char *v156;
  char *v157;
  char *v158;
  char *v159;
  char *v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  unsigned int v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  char *v168;
  char *v169;
  char *v170;
  uint64_t v171;
  uint64_t v172;
  char *v173;
  uint64_t v174;
  char *v175;
  char *v176;
  char *v177;
  uint64_t v178;
  char *v179;
  uint64_t v180;
  uint64_t v181;
  char *v182;
  uint64_t v183;
  uint64_t v184;
  char *v185;
  void (**v186)(char *, uint64_t, uint64_t, uint64_t);
  char *v187;
  char *v188;
  unint64_t v189;
  uint64_t v190;
  char v191[8];
  uint64_t v192;
  _QWORD *v193;

  v155 = a3;
  v162 = sub_227D68330(&qword_253F3AF40);
  v161 = *(_QWORD *)(v162 - 8);
  MEMORY[0x24BDAC7A8](v162, v5);
  v160 = (char *)&v147 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for ReadingHistoryMonth(0);
  MEMORY[0x24BDAC7A8](v7, v8);
  v159 = (char *)&v147 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_227D68330((uint64_t *)&unk_253F3AFC0);
  MEMORY[0x24BDAC7A8](v10, v11);
  v13 = (char *)&v147 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_227D68330(&qword_253F3AF98);
  MEMORY[0x24BDAC7A8](v14, v15);
  v158 = (char *)&v147 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v172 = sub_227E5F2E8();
  v171 = *(_QWORD *)(v172 - 8);
  MEMORY[0x24BDAC7A8](v172, v17);
  v170 = (char *)&v147 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_227D68330(&qword_253F39F90);
  MEMORY[0x24BDAC7A8](v19, v20);
  v22 = (char *)&v147 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v167 = type metadata accessor for ReadingHistoryDay(0);
  v166 = *(_QWORD *)(v167 - 8);
  MEMORY[0x24BDAC7A8](v167, v23);
  v178 = (uint64_t)&v147 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = sub_227D68330((uint64_t *)&unk_253F39C20);
  v27 = MEMORY[0x24BDAC7A8](v25, v26);
  v153 = (char *)&v147 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v27, v29);
  v156 = (char *)&v147 - v30;
  v31 = sub_227E5F300();
  v186 = *(void (***)(char *, uint64_t, uint64_t, uint64_t))(v31 - 8);
  v33 = MEMORY[0x24BDAC7A8](v31, v32);
  v179 = (char *)&v147 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v33, v35);
  v188 = (char *)&v147 - v36;
  v37 = sub_227D68330(&qword_253F391F0);
  MEMORY[0x24BDAC7A8](v37, v38);
  v187 = (char *)&v147 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = sub_227D68330(&qword_253F391E8);
  MEMORY[0x24BDAC7A8](v40, v41);
  v185 = (char *)&v147 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = sub_227E5F0A8();
  v183 = *(_QWORD *)(v43 - 8);
  v184 = v43;
  MEMORY[0x24BDAC7A8](v43, v44);
  v182 = (char *)&v147 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = sub_227D68330(&qword_253F391D0);
  v48 = MEMORY[0x24BDAC7A8](v46, v47);
  v177 = (char *)&v147 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v48, v50);
  v52 = (char *)&v147 - v51;
  v53 = sub_227E5F27C();
  v190 = *(_QWORD *)(v53 - 8);
  v55 = MEMORY[0x24BDAC7A8](v53, v54);
  v57 = (char *)&v147 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = MEMORY[0x24BDAC7A8](v55, v58);
  v176 = (char *)&v147 - v60;
  v62 = MEMORY[0x24BDAC7A8](v59, v61);
  v175 = (char *)&v147 - v63;
  v65 = MEMORY[0x24BDAC7A8](v62, v64);
  v157 = (char *)&v147 - v66;
  v68 = MEMORY[0x24BDAC7A8](v65, v67);
  v181 = (uint64_t)&v147 - v69;
  MEMORY[0x24BDAC7A8](v68, v70);
  v173 = (char *)&v147 - v71;
  v174 = a1;
  v192 = a1;
  swift_bridgeObjectRetain();
  sub_227DF943C((uint64_t)sub_227DFDAD8, (uint64_t)v191, a2);
  v72 = swift_bridgeObjectRetain();
  v73 = sub_227E14644(v72);
  swift_release();
  v193 = v73;
  sub_227DF8D3C((uint64_t *)&v193);
  swift_release();
  v74 = v193[2];
  v168 = v13;
  v180 = v31;
  v154 = v57;
  v169 = v22;
  if (v74)
  {
    v165 = swift_retain();
    v75 = (_QWORD *)(v165 + 40);
    v189 = MEMORY[0x24BEE4AF8];
    v76 = v190;
    while (1)
    {
      v77 = *(v75 - 1);
      v78 = 100 * v77;
      if ((unsigned __int128)(v77 * (__int128)100) >> 64 != (100 * v77) >> 63)
      {
        __break(1u);
LABEL_51:
        __break(1u);
LABEL_52:
        __break(1u);
LABEL_53:
        __break(1u);
LABEL_54:
        __break(1u);
LABEL_55:
        __break(1u);
LABEL_56:
        __break(1u);
        result = swift_release();
        __break(1u);
        return result;
      }
      if (__OFADD__(v78, *v75))
        goto LABEL_51;
      if (v78 + *v75 <= 9999)
      {
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v76 + 56))(v52, 1, 1, v53);
      }
      else
      {
        v79 = v31;
        v80 = v186;
        v186[7](v185, 1, 1, v79);
        v81 = sub_227E5F30C();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v81 - 8) + 56))(v187, 1, 1, v81);
        v82 = v182;
        sub_227E5F09C();
        v83 = v188;
        sub_227E5F288();
        sub_227E5F2B8();
        v84 = v80[1];
        v31 = v79;
        v76 = v190;
        ((void (*)(char *, uint64_t))v84)(v83, v31);
        (*(void (**)(char *, uint64_t))(v183 + 8))(v82, v184);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v76 + 48))(v52, 1, v53) != 1)
        {
          v85 = *(void (**)(char *, char *, uint64_t))(v76 + 32);
          v86 = v173;
          v85(v173, v52, v53);
          v85((char *)v181, v86, v53);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v189 = sub_227DF8F44(0, *(_QWORD *)(v189 + 16) + 1, 1, v189, &qword_255928E60, (uint64_t (*)(_QWORD))MEMORY[0x24BDCE900]);
          v88 = *(_QWORD *)(v189 + 16);
          v87 = *(_QWORD *)(v189 + 24);
          if (v88 >= v87 >> 1)
            v189 = sub_227DF8F44(v87 > 1, v88 + 1, 1, v189, &qword_255928E60, (uint64_t (*)(_QWORD))MEMORY[0x24BDCE900]);
          v90 = v189;
          v89 = v190;
          *(_QWORD *)(v189 + 16) = v88 + 1;
          v76 = v89;
          v85((char *)(v90+ ((*(unsigned __int8 *)(v89 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v89 + 80))+ *(_QWORD *)(v89 + 72) * v88), (char *)v181, v53);
          v31 = v180;
          goto LABEL_5;
        }
      }
      sub_227D5809C((uint64_t)v52, &qword_253F391D0);
LABEL_5:
      v75 += 2;
      if (!--v74)
      {
        swift_release();
        v91 = v189;
        goto LABEL_17;
      }
    }
  }
  v91 = MEMORY[0x24BEE4AF8];
LABEL_17:
  swift_release();
  v92 = *(char **)(v91 + 16);
  v94 = v176;
  v93 = v177;
  if (!v92)
  {
    v144 = type metadata accessor for ReadingHistory.Streak(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v144 - 8) + 56))(v155, 1, 1, v144);
    return swift_bridgeObjectRelease();
  }
  v95 = v190;
  v96 = v91 + ((*(unsigned __int8 *)(v95 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v95 + 80));
  v183 = *(_QWORD *)(v190 + 16);
  v184 = v96;
  ((void (*)(char *))v183)(v157);
  v97 = v188;
  sub_227E5F288();
  v189 = v91;
  v98 = (uint64_t)v175;
  v185 = v92;
  sub_227E5F1F8();
  v181 = sub_227E052F0(v98, 1);
  v99 = v98;
  v100 = v189;
  v187 = *(char **)(v95 + 8);
  ((void (*)(uint64_t, uint64_t))v187)(v99, v53);
  v101 = (void (**)(char *, uint64_t, uint64_t, uint64_t))v186[1];
  ((void (*)(char *, uint64_t))v101)(v97, v31);
  sub_227E5F288();
  v102 = v154;
  sub_227E5F1F8();
  v186 = v101;
  ((void (*)(char *, uint64_t))v101)(v97, v31);
  v103 = type metadata accessor for ReadingHistory.Streak(0);
  v151 = *(_QWORD *)(v103 - 8);
  v104 = *(void (**)(uint64_t, _QWORD, uint64_t))(v151 + 56);
  v105 = (uint64_t)v156;
  v152 = v103;
  v149 = v104;
  v104((uint64_t)v156, 1, 1);
  LODWORD(v173) = *MEMORY[0x24BDCF240];
  LODWORD(v165) = *MEMORY[0x24BDCF250];
  v164 = *MEMORY[0x24BDCF220];
  v150 = v185 - 1;
  v106 = 0;
  do
  {
LABEL_19:
    if ((unint64_t)v106 >= *(_QWORD *)(v100 + 16))
      goto LABEL_52;
    v107 = v190;
    ((void (*)(char *, uint64_t, uint64_t))v183)(v93, v184 + *(_QWORD *)(v190 + 72) * (_QWORD)v106, v53);
    v182 = *(char **)(v107 + 56);
    ((void (*)(char *, _QWORD, uint64_t, uint64_t))v182)(v93, 0, 1, v53);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v107 + 48))(v93, 1, v53) == 1)
      goto LABEL_49;
    v108 = *(void (**)(char *, char *, uint64_t))(v107 + 32);
    v108(v102, v93, v53);
    if ((sub_227E5F240() & 1) != 0)
    {
      v109 = v188;
      sub_227E5F288();
      v110 = v175;
      sub_227E5F204();
      ((void (*)(char *, uint64_t))v186)(v109, v31);
      ((void (*)(char *, uint64_t))v187)(v94, v53);
      v108(v94, v110, v53);
      if (__OFADD__(v181, 1))
        goto LABEL_56;
      ++v181;
      v163 = v53;
      v148 = v106 + 1;
      while (1)
      {
        sub_227E5F288();
        v111 = v171;
        v112 = *(void (**)(char *, _QWORD, uint64_t))(v171 + 104);
        v113 = v170;
        v114 = v172;
        v112(v170, v173, v172);
        v115 = sub_227E5F2F4();
        v116 = *(void (**)(char *, uint64_t))(v111 + 8);
        v116(v113, v114);
        v112(v113, v165, v114);
        v117 = sub_227E5F2F4();
        v116(v113, v114);
        v112(v113, v164, v114);
        v118 = sub_227E5F2F4();
        v116(v113, v114);
        v119 = 100 * v115;
        if ((unsigned __int128)(v115 * (__int128)100) >> 64 != (100 * v115) >> 63)
          goto LABEL_53;
        v120 = __OFADD__(v119, v117);
        v121 = v119 + v117;
        v122 = (uint64_t)v169;
        if (v120)
          goto LABEL_54;
        v193 = (_QWORD *)v121;
        sub_227D68330(&qword_253F3AF68);
        v123 = (uint64_t)v168;
        sub_227E5FCB4();
        v124 = sub_227D68330((uint64_t *)&unk_253F3AFB0);
        v125 = *(_QWORD *)(v124 - 8);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v125 + 48))(v123, 1, v124) == 1)
        {
          v31 = v180;
          ((void (*)(char *, uint64_t))v186)(v179, v180);
          sub_227D5809C(v123, (uint64_t *)&unk_253F3AFC0);
          v126 = 1;
          v94 = v176;
          v93 = v177;
          v53 = v163;
        }
        else
        {
          v127 = (uint64_t)v159;
          MEMORY[0x22E2A9430](v124);
          (*(void (**)(uint64_t, uint64_t))(v125 + 8))(v123, v124);
          v128 = v161;
          v129 = v160;
          v130 = v162;
          (*(void (**)(char *, uint64_t, uint64_t))(v161 + 16))(v160, v127, v162);
          sub_227D64BC4(v127, type metadata accessor for ReadingHistoryMonth);
          v193 = (_QWORD *)v118;
          v131 = (uint64_t)v158;
          sub_227E5FCB4();
          (*(void (**)(char *, uint64_t))(v128 + 8))(v129, v130);
          v132 = sub_227D68330(&qword_253F3AF90);
          v133 = *(_QWORD *)(v132 - 8);
          v134 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v133 + 48))(v131, 1, v132);
          v53 = v163;
          if (v134 == 1)
          {
            v31 = v180;
            ((void (*)(char *, uint64_t))v186)(v179, v180);
            sub_227D5809C(v131, &qword_253F3AF98);
            v126 = 1;
          }
          else
          {
            MEMORY[0x22E2A9430](v132);
            v31 = v180;
            ((void (*)(char *, uint64_t))v186)(v179, v180);
            (*(void (**)(uint64_t, uint64_t))(v133 + 8))(v131, v132);
            v126 = 0;
          }
          v94 = v176;
          v93 = v177;
        }
        v135 = v166;
        v136 = v167;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v166 + 56))(v122, v126, 1, v167);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v135 + 48))(v122, 1, v136) == 1)
        {
          sub_227D5809C(v122, &qword_253F39F90);
          goto LABEL_40;
        }
        sub_227D5E458(v122, v178, type metadata accessor for ReadingHistoryDay);
        v137 = sub_227E5FE58();
        sub_227D68330(&qword_253F3AEE0);
        sub_227E5F984();
        if (v137 < (uint64_t)v193)
          break;
        if (__OFADD__(v181, 1))
          goto LABEL_55;
        ++v181;
        v138 = v188;
        sub_227E5F288();
        v139 = v175;
        sub_227E5F204();
        ((void (*)(char *, uint64_t))v186)(v138, v31);
        sub_227D64BC4(v178, type metadata accessor for ReadingHistoryDay);
        ((void (*)(char *, uint64_t))v187)(v94, v53);
        v108(v94, v139, v53);
      }
      sub_227D64BC4(v178, type metadata accessor for ReadingHistoryDay);
LABEL_40:
      v105 = (uint64_t)v156;
      v102 = v154;
      v140 = v152;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v151 + 48))(v156, 1, v152))
      {
        v141 = v181;
        if (v181 >= 1)
        {
LABEL_42:
          v181 = v141;
          v142 = v188;
          sub_227E5F288();
          sub_227E5F1F8();
          v105 = (uint64_t)v156;
          ((void (*)(char *, uint64_t))v186)(v142, v31);
          ((void (*)(char *, uint64_t))v187)(v102, v53);
          v143 = (uint64_t)v153;
          v108(v153, v175, v53);
          *(_QWORD *)(v143 + *(int *)(v152 + 20)) = v181;
          v149(v143, 0, 1);
          sub_227D5E414(v143, v105, (uint64_t *)&unk_253F39C20);
LABEL_45:
          v100 = v189;
          v181 = 0;
          if (v150 == v106)
            break;
          v106 = v148;
          goto LABEL_19;
        }
      }
      else
      {
        v141 = v181;
        if (*(_QWORD *)(v105 + *(int *)(v140 + 20)) < v181)
          goto LABEL_42;
      }
      ((void (*)(char *, uint64_t))v187)(v102, v53);
      goto LABEL_45;
    }
    ++v106;
    ((void (*)(char *, uint64_t))v187)(v102, v53);
  }
  while (v185 != v106);
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v182)(v93, 1, 1, v53);
LABEL_49:
  swift_bridgeObjectRelease();
  v146 = v187;
  ((void (*)(char *, uint64_t))v187)(v94, v53);
  ((void (*)(char *, uint64_t))v146)(v157, v53);
  return sub_227D5B0DC(v105, v155, (uint64_t *)&unk_253F39C20);
}

uint64_t sub_227DF46D8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  _QWORD *v12;
  uint64_t v13;
  void *v14;
  uint64_t result;
  _BYTE v16[16];
  uint64_t v17;
  _QWORD aBlock[6];

  v5 = type metadata accessor for ReadingHistoryDataStore.State(0);
  MEMORY[0x24BDAC7A8](v5, v6);
  v8 = &v16[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_227D5DFFC(a1, (uint64_t)v8, type metadata accessor for ReadingHistoryDataStore.State);
  v9 = v2 + OBJC_IVAR____TtC13BookDataStore23ReadingHistoryDataStore__state;
  swift_beginAccess();
  sub_227DFD804((uint64_t)v8, v9, type metadata accessor for ReadingHistoryDataStore.State);
  swift_endAccess();
  sub_227DF03B4();
  sub_227D64BC4((uint64_t)v8, type metadata accessor for ReadingHistoryDataStore.State);
  v10 = *(_QWORD *)(v2 + OBJC_IVAR____TtC13BookDataStore23ReadingHistoryDataStore_lastModelChange);
  v17 = a2;
  v11 = *(NSObject **)(v10 + 16);
  v12 = (_QWORD *)swift_allocObject();
  v12[2] = sub_227DFD848;
  v12[3] = v16;
  v12[4] = v10;
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = sub_227DFD8B4;
  *(_QWORD *)(v13 + 24) = v12;
  aBlock[4] = sub_227D63158;
  aBlock[5] = v13;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_227D62A60;
  aBlock[3] = &unk_24F08EEF0;
  v14 = _Block_copy(aBlock);
  swift_retain_n();
  swift_retain();
  swift_release();
  dispatch_sync(v11, v14);
  _Block_release(v14);
  LOBYTE(v11) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  result = swift_release();
  if ((v11 & 1) != 0)
    __break(1u);
  return result;
}

uint64_t sub_227DF48C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;

  sub_227E60248();
  if (qword_253F39FF8[0] != -1)
    swift_once();
  v8 = (void *)qword_253F39FF0;
  sub_227D68330(&qword_253F3B090);
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_227E700C0;
  v10 = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v9 + 56) = MEMORY[0x24BEE0D00];
  v11 = sub_227D57A70();
  *(_QWORD *)(v9 + 64) = v11;
  *(_QWORD *)(v9 + 32) = a3;
  *(_QWORD *)(v9 + 40) = a4;
  v12 = v8;
  swift_bridgeObjectRetain();
  v13 = sub_227DF0068();
  *(_QWORD *)(v9 + 96) = v10;
  *(_QWORD *)(v9 + 104) = v11;
  *(_QWORD *)(v9 + 72) = v13;
  *(_QWORD *)(v9 + 80) = v14;
  v15 = sub_227D68330(&qword_253F398D0);
  v16 = 0x676E6964616F6CLL;
  if (*(_BYTE *)(a2 + *(int *)(v15 + 44)))
    v16 = 0x7964616572;
  v17 = 0xE700000000000000;
  if (*(_BYTE *)(a2 + *(int *)(v15 + 44)))
    v17 = 0xE500000000000000;
  *(_QWORD *)(v9 + 136) = v10;
  *(_QWORD *)(v9 + 144) = v11;
  *(_QWORD *)(v9 + 112) = v16;
  *(_QWORD *)(v9 + 120) = v17;
  v18 = sub_227E3F8FC();
  *(_QWORD *)(v9 + 176) = v10;
  *(_QWORD *)(v9 + 184) = v11;
  *(_QWORD *)(v9 + 152) = v18;
  *(_QWORD *)(v9 + 160) = v19;
  sub_227E5F564();

  swift_bridgeObjectRelease();
  return sub_227DF46D8(a1, a2);
}

uint64_t ReadingHistoryModel.readingDay(for:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD v16[2];

  v2 = sub_227D68330(&qword_253F39F90);
  MEMORY[0x24BDAC7A8](v2, v3);
  v5 = (char *)v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for ReadingHistoryDay(0);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6, v8);
  v10 = (char *)v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  ReadingHistoryModel.readingHistoryDay(for:)((uint64_t)v5);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    result = sub_227D5809C((uint64_t)v5, &qword_253F39F90);
    v12 = 0;
    v13 = 0;
    v14 = 2;
  }
  else
  {
    sub_227D5E458((uint64_t)v5, (uint64_t)v10, type metadata accessor for ReadingHistoryDay);
    v12 = sub_227E5FE58();
    sub_227D68330(&qword_253F3AEE0);
    sub_227E5F984();
    v13 = v16[1];
    v15 = sub_227E5FE58();
    sub_227E5F984();
    v14 = v15 >= v16[0];
    result = sub_227D64BC4((uint64_t)v10, type metadata accessor for ReadingHistoryDay);
  }
  *(_QWORD *)a1 = v12;
  *(_QWORD *)(a1 + 8) = v13;
  *(_BYTE *)(a1 + 16) = v14;
  return result;
}

uint64_t sub_227DF4BD0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  int v27;
  uint64_t result;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  _QWORD v65[3];
  uint64_t v66;
  uint64_t v67;

  v1 = sub_227D68330(&qword_253F39840);
  MEMORY[0x24BDAC7A8](v1, v2);
  v63 = (char *)&v53 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = type metadata accessor for ReadingHistoryDataStore.State(0);
  MEMORY[0x24BDAC7A8](v60, v4);
  v64 = (uint64_t)&v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_227D68330(&qword_253F3AF30);
  v58 = *(_QWORD *)(v6 - 8);
  v59 = v6;
  MEMORY[0x24BDAC7A8](v6, v7);
  v57 = (char *)&v53 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = sub_227D68330(&qword_253F3AF68);
  v9 = *(_QWORD *)(v55 - 8);
  MEMORY[0x24BDAC7A8](v55, v10);
  v12 = (char *)&v53 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = type metadata accessor for ReadingHistoryModel(0);
  v14 = MEMORY[0x24BDAC7A8](v54, v13);
  v62 = (uint64_t)&v53 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14, v16);
  v18 = (char *)&v53 - v17;
  v19 = sub_227D68330(&qword_253F398D0);
  v21 = MEMORY[0x24BDAC7A8](v19, v20);
  v61 = (char *)&v53 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v21, v23);
  v25 = (char *)&v53 - v24;
  v26 = v0;
  v56 = OBJC_IVAR____TtC13BookDataStore23ReadingHistoryDataStore_lastModelChange;
  swift_retain();
  sub_227E602CC();
  swift_release();
  v27 = v25[*(int *)(v19 + 44)];
  result = sub_227D5809C((uint64_t)v25, &qword_253F398D0);
  if (v27 == 1)
  {
    v29 = v26;
    *(_QWORD *)(v26 + 136) = 0x4072C00000000000;
    v30 = v26 + OBJC_IVAR____TtC13BookDataStore23ReadingHistoryDataStore__state;
    swift_beginAccess();
    v31 = v30;
    v53 = v30;
    sub_227D5DFFC(v30, (uint64_t)v18, type metadata accessor for ReadingHistoryModel);
    v32 = v55;
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v12, v18, v55);
    sub_227DEF20C((uint64_t)v12, (uint64_t)v18);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v32);
    v34 = (uint64_t)v57;
    v33 = v58;
    v35 = v59;
    (*(void (**)(char *, char *, uint64_t))(v58 + 16))(v57, &v18[*(int *)(v54 + 20)], v59);
    sub_227DEF4D0(v34, (uint64_t)v18);
    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v34, v35);
    v36 = v64;
    sub_227D5DFFC((uint64_t)v18, v64, type metadata accessor for ReadingHistoryModel);
    v37 = v60;
    v38 = v36 + *(int *)(v60 + 20);
    v39 = type metadata accessor for ReadingHistory.Streak(0);
    v40 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 56);
    v40(v38, 1, 1, v39);
    v41 = v31 + *(int *)(v37 + 24);
    v40(v36 + *(int *)(v37 + 28), 1, 1, v39);
    v42 = v36 + *(int *)(v37 + 24);
    v43 = sub_227E5F27C();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 16))(v42, v41, v43);
    swift_retain();
    v44 = (uint64_t)v61;
    sub_227E602CC();
    v60 = 0;
    swift_release();
    v45 = sub_227D68330(&qword_253F3A1C0);
    v46 = (uint64_t)v63;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 56))(v63, 1, 2, v45);
    sub_227DFD804((uint64_t)v18, v44, type metadata accessor for ReadingHistoryModel);
    sub_227D5E414(v46, v44 + *(int *)(v19 + 48), &qword_253F39840);
    sub_227DF48C4(v36, v44, 0x7461447261656C63, 0xE900000000000061);
    sub_227D572C8(v29 + 56, (uint64_t)v65);
    v47 = v66;
    v48 = v67;
    sub_227D572A4(v65, v66);
    v49 = v62;
    sub_227D5DFFC(v53, v62, type metadata accessor for ReadingHistoryModel);
    v50 = (void *)v60;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v48 + 48))(v49, v47, v48);
    v51 = v29;
    if (v50)

    sub_227D64BC4(v49, type metadata accessor for ReadingHistoryModel);
    sub_227D58120((uint64_t)v65);
    sub_227D5809C(v44, &qword_253F398D0);
    sub_227D64BC4(v36, type metadata accessor for ReadingHistoryDataStore.State);
    result = sub_227D64BC4((uint64_t)v18, type metadata accessor for ReadingHistoryModel);
    v52 = 0;
  }
  else
  {
    v52 = 1;
    v51 = v26;
  }
  *(_BYTE *)(v51 + 152) = v52;
  return result;
}

Swift::Void __swiftcall ReadingHistoryDataStore.handleSignificantDateChange()()
{
  uint64_t v0;
  NSObject *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  void *v19;
  uint64_t v20;
  void (*v21)(void);
  id v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  void (*v31)(char *, char *, uint64_t);
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(uint64_t, char *, uint64_t);
  uint64_t v39;
  void *v40;
  void (*v41)(char *, uint64_t);
  uint64_t v42;
  uint64_t v43;
  int v44;
  char *v45;
  void (*v46)(char *, uint64_t);
  uint64_t v47;
  char *v48;
  Class isa;
  dispatch_queue_t v50;
  char *v51;
  char *v52;
  char *v53;
  _QWORD aBlock[6];

  v1 = sub_227E5F300();
  isa = v1[-1].isa;
  v50 = v1;
  MEMORY[0x24BDAC7A8](v1, v2);
  v48 = (char *)&v42 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_227E5F27C();
  v5 = *(_QWORD *)(v4 - 8);
  v7 = MEMORY[0x24BDAC7A8](v4, v6);
  v52 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v7, v9);
  v51 = (char *)&v42 - v11;
  v13 = MEMORY[0x24BDAC7A8](v10, v12);
  v53 = (char *)&v42 - v14;
  v47 = v15;
  MEMORY[0x24BDAC7A8](v13, v16);
  v18 = (char *)&v42 - v17;
  v44 = sub_227E60248();
  if (qword_253F39FF8[0] != -1)
    swift_once();
  v19 = (void *)qword_253F39FF0;
  sub_227D68330(&qword_253F3B090);
  v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_227E6F1B0;
  v21 = *(void (**)(void))(v0 + 120);
  v22 = v19;
  v43 = v0;
  v23 = v22;
  v21();
  v24 = sub_227E5F210();
  v26 = v25;
  v46 = *(void (**)(char *, uint64_t))(v5 + 8);
  v46(v18, v4);
  *(_QWORD *)(v20 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v20 + 64) = sub_227D57A70();
  *(_QWORD *)(v20 + 32) = v24;
  *(_QWORD *)(v20 + 40) = v26;
  sub_227E5F564();

  v27 = swift_bridgeObjectRelease();
  ((void (*)(uint64_t))v21)(v27);
  v28 = v48;
  sub_227E5F288();
  v29 = v53;
  v45 = v18;
  sub_227E5F294();
  (*((void (**)(char *, dispatch_queue_t))isa + 1))(v28, v50);
  v30 = v43;
  v50 = *(dispatch_queue_t *)(v43 + 144);
  v31 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
  v32 = v51;
  v31(v51, v29, v4);
  v33 = v52;
  v31(v52, v18, v4);
  v34 = *(unsigned __int8 *)(v5 + 80);
  v35 = (v34 + 24) & ~v34;
  v36 = (v47 + v34 + v35) & ~v34;
  v37 = swift_allocObject();
  *(_QWORD *)(v37 + 16) = v30;
  v38 = *(void (**)(uint64_t, char *, uint64_t))(v5 + 32);
  v38(v37 + v35, v32, v4);
  v38(v37 + v36, v33, v4);
  v39 = swift_allocObject();
  *(_QWORD *)(v39 + 16) = sub_227DFC1B8;
  *(_QWORD *)(v39 + 24) = v37;
  aBlock[4] = sub_227D62A80;
  aBlock[5] = v39;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_227D62A60;
  aBlock[3] = &unk_24F08E8E0;
  v40 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v50, v40);
  _Block_release(v40);
  v41 = v46;
  v46(v29, v4);
  v41(v45, v4);
  LOBYTE(v30) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  if ((v30 & 1) != 0)
    __break(1u);
}

void sub_227DF5548(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t, uint64_t, uint64_t), char *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  int *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unsigned int (*v59)(uint64_t, uint64_t, uint64_t);
  uint64_t v60;
  uint64_t v61;
  id v62;
  uint64_t v63;
  unsigned int v64;
  uint64_t v65;
  uint64_t (*v66)(uint64_t, uint64_t, uint64_t, uint64_t);
  int *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  BOOL v72;
  BOOL v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  void *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  _QWORD v87[2];
  uint64_t v88;
  void *v89;
  char *v90;
  uint64_t v91;
  char *v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  char *v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t (*v106)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v107;
  _QWORD v108[3];
  uint64_t v109;
  uint64_t v110;

  v93 = a3;
  v106 = a2;
  v4 = sub_227D68330(&qword_253F39840);
  MEMORY[0x24BDAC7A8](v4, v5);
  v101 = (char *)v87 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for ReadingHistoryModel(0);
  v9 = MEMORY[0x24BDAC7A8](v7, v8);
  v103 = (uint64_t)v87 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v9, v11);
  v97 = (uint64_t)v87 - v13;
  MEMORY[0x24BDAC7A8](v12, v14);
  v16 = (char *)v87 - v15;
  v95 = type metadata accessor for ReadingHistoryDataStore.State(0);
  v18 = MEMORY[0x24BDAC7A8](v95, v17);
  v102 = (char *)v87 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18, v20);
  v22 = (char *)v87 - v21;
  v23 = sub_227D68330((uint64_t *)&unk_253F39C20);
  v25 = MEMORY[0x24BDAC7A8](v23, v24);
  v92 = (char *)v87 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = MEMORY[0x24BDAC7A8](v25, v27);
  v96 = (uint64_t)v87 - v29;
  v31 = MEMORY[0x24BDAC7A8](v28, v30);
  v94 = (uint64_t)v87 - v32;
  v34 = MEMORY[0x24BDAC7A8](v31, v33);
  v107 = (uint64_t)v87 - v35;
  v37 = MEMORY[0x24BDAC7A8](v34, v36);
  v39 = (char *)v87 - v38;
  MEMORY[0x24BDAC7A8](v37, v40);
  v104 = (uint64_t)v87 - v41;
  v42 = sub_227D68330(&qword_253F398D0);
  v44 = MEMORY[0x24BDAC7A8](v42, v43);
  v105 = (uint64_t)v87 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v44, v46);
  v48 = (char *)v87 - v47;
  v98 = OBJC_IVAR____TtC13BookDataStore23ReadingHistoryDataStore_lastModelChange;
  v49 = a1;
  swift_retain();
  sub_227E602CC();
  swift_release();
  v99 = v42;
  LODWORD(a1) = v48[*(int *)(v42 + 44)];
  sub_227D5809C((uint64_t)v48, &qword_253F398D0);
  if ((_DWORD)a1 == 1)
  {
    v89 = 0;
    v91 = v49;
    v50 = v49 + OBJC_IVAR____TtC13BookDataStore23ReadingHistoryDataStore__state;
    swift_beginAccess();
    v51 = v95;
    v52 = v104;
    sub_227D5DF48(v50 + *(int *)(v95 + 20), v104, (uint64_t *)&unk_253F39C20);
    v53 = type metadata accessor for ReadingHistoryDataStore(0);
    sub_227D5DFFC(v50, (uint64_t)v22, type metadata accessor for ReadingHistoryDataStore.State);
    sub_227D5DFFC(v50, (uint64_t)v16, type metadata accessor for ReadingHistoryModel);
    v87[1] = v53;
    sub_227DF1210((uint64_t)v22, (uint64_t)v16, v106, (uint64_t)v39);
    v90 = v16;
    sub_227D64BC4((uint64_t)v16, type metadata accessor for ReadingHistoryModel);
    sub_227D64BC4((uint64_t)v22, type metadata accessor for ReadingHistoryDataStore.State);
    v54 = v97;
    sub_227D5DFFC(v50, v97, type metadata accessor for ReadingHistoryModel);
    v55 = (int *)v51;
    v56 = *(int *)(v51 + 28);
    v88 = v50;
    sub_227D5DF48(v50 + v56, v107, (uint64_t *)&unk_253F39C20);
    v100 = v39;
    v57 = v94;
    sub_227D5DF48((uint64_t)v39, v94, (uint64_t *)&unk_253F39C20);
    v58 = type metadata accessor for ReadingHistory.Streak(0);
    v59 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 48);
    v60 = v54;
    if (v59(v57, 1, v58) == 1)
    {
      sub_227D5809C(v57, (uint64_t *)&unk_253F39C20);
      v61 = 0;
    }
    else
    {
      v61 = *(_QWORD *)(v57 + *(int *)(v58 + 20));
      sub_227D64BC4(v57, type metadata accessor for ReadingHistory.Streak);
    }
    v63 = v96;
    sub_227D5DF48(v52, v96, (uint64_t *)&unk_253F39C20);
    v64 = v59(v63, 1, v58);
    v65 = v91;
    v66 = v106;
    v67 = v55;
    if (v64 == 1)
    {
      sub_227D5809C(v63, (uint64_t *)&unk_253F39C20);
      v68 = 0;
    }
    else
    {
      v69 = v63;
      v68 = *(_QWORD *)(v63 + *(int *)(v58 + 20));
      sub_227D64BC4(v69, type metadata accessor for ReadingHistory.Streak);
    }
    v70 = v107;
    v71 = (uint64_t)v90;
    v72 = sub_227E07030(v66, 1);
    v73 = v68 < v61;
    v74 = (uint64_t)v102;
    v75 = (uint64_t)v100;
    if (v73 || v72)
    {
      sub_227DF322C(v60, (uint64_t)v100, v71);
      sub_227D64BC4(v60, type metadata accessor for ReadingHistoryModel);
      sub_227D5E458(v71, v60, type metadata accessor for ReadingHistoryModel);
      v76 = v92;
      sub_227D5D2D4(v93, v92);
      sub_227D5809C(v70, (uint64_t *)&unk_253F39C20);
      sub_227D5B0DC((uint64_t)v76, v70, (uint64_t *)&unk_253F39C20);
    }
    sub_227D5DFFC(v60, v74, type metadata accessor for ReadingHistoryModel);
    sub_227D5DF48(v75, v74 + v67[5], (uint64_t *)&unk_253F39C20);
    v77 = v74 + v67[6];
    v78 = sub_227E5F27C();
    (*(void (**)(uint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t), uint64_t))(*(_QWORD *)(v78 - 8) + 16))(v77, v106, v78);
    sub_227D5DF48(v70, v74 + v67[7], (uint64_t *)&unk_253F39C20);
    swift_retain();
    v79 = v105;
    v80 = v99;
    v81 = v89;
    sub_227E602CC();
    swift_release();
    v82 = sub_227D68330(&qword_253F3A1C0);
    v83 = (uint64_t)v101;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v82 - 8) + 56))(v101, 1, 2, v82);
    sub_227DFD804(v74, v79, type metadata accessor for ReadingHistoryModel);
    sub_227D5E414(v83, v79 + *(int *)(v80 + 48), &qword_253F39840);
    sub_227DF48C4(v74, v79, 0xD00000000000001BLL, 0x8000000227E6C560);
    sub_227D572C8(v65 + 56, (uint64_t)v108);
    v84 = v109;
    v85 = v110;
    sub_227D572A4(v108, v109);
    v86 = v103;
    sub_227D5DFFC(v88, v103, type metadata accessor for ReadingHistoryModel);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v85 + 48))(v86, v84, v85);
    if (v81)

    sub_227D64BC4(v86, type metadata accessor for ReadingHistoryModel);
    sub_227D58120((uint64_t)v108);
    sub_227D5809C(v105, &qword_253F398D0);
    sub_227D64BC4(v74, type metadata accessor for ReadingHistoryDataStore.State);
    sub_227D5809C(v107, (uint64_t *)&unk_253F39C20);
    sub_227D64BC4(v60, type metadata accessor for ReadingHistoryModel);
    sub_227D5809C((uint64_t)v100, (uint64_t *)&unk_253F39C20);
    sub_227D5809C(v104, (uint64_t *)&unk_253F39C20);
  }
  else
  {
    sub_227E60248();
    if (qword_253F39FF8[0] != -1)
      swift_once();
    v62 = (id)qword_253F39FF0;
    sub_227E5F564();

  }
}

BOOL sub_227DF5D4C(__int128 *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t *v21;
  uint64_t v22;
  _BOOL8 v23;
  uint64_t v24;
  _QWORD v26[2];
  __int128 v27;

  v26[1] = a2;
  v3 = sub_227D68330(&qword_253F39F90);
  MEMORY[0x24BDAC7A8](v3, v4);
  v6 = (char *)v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for ReadingHistoryDay(0);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7, v9);
  v11 = (char *)v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_227D68330(&qword_253F391D0);
  MEMORY[0x24BDAC7A8](v12, v13);
  v15 = (char *)v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_227E5F27C();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16, v18);
  v20 = (char *)v26 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = *a1;
  sub_227E04D68((uint64_t)v15);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
  {
    v21 = &qword_253F391D0;
    v22 = (uint64_t)v15;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v20, v15, v16);
    ReadingHistoryModel.readingHistoryDay(for:)((uint64_t)v6);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) != 1)
    {
      sub_227D5E458((uint64_t)v6, (uint64_t)v11, type metadata accessor for ReadingHistoryDay);
      v24 = sub_227E5FE58();
      sub_227D68330(&qword_253F3AEE0);
      sub_227E5F984();
      v23 = v24 >= (uint64_t)v27;
      sub_227D64BC4((uint64_t)v11, type metadata accessor for ReadingHistoryDay);
      (*(void (**)(char *, uint64_t))(v17 + 8))(v20, v16);
      return v23;
    }
    (*(void (**)(char *, uint64_t))(v17 + 8))(v20, v16);
    v21 = &qword_253F39F90;
    v22 = (uint64_t)v6;
  }
  sub_227D5809C(v22, v21);
  return 0;
}

uint64_t ReadingHistoryDataStore.deinit()
{
  uint64_t v0;

  sub_227D5809C(v0 + 16, &qword_253F3AE58);
  sub_227D58120(v0 + 56);

  swift_release();
  sub_227D64BC4(v0 + OBJC_IVAR____TtC13BookDataStore23ReadingHistoryDataStore__state, type metadata accessor for ReadingHistoryDataStore.State);
  swift_release();
  swift_release();
  swift_unknownObjectRelease();
  return v0;
}

uint64_t ReadingHistoryDataStore.__deallocating_deinit()
{
  ReadingHistoryDataStore.deinit();
  return swift_deallocClassInstance();
}

uint64_t ReadingHistoryDataStore.addObserver(_:modelChange:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = a2;
  *(_QWORD *)(v6 + 24) = a3;
  swift_retain();
  swift_retain();
  sub_227D625F0(a1, (uint64_t)sub_227D5B9E0, v6);
  swift_release();
  return swift_release();
}

uint64_t ReadingHistoryDataStore.addObserverWithEvent(_:modelChange:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_retain();
  sub_227D625F0(a1, a2, a3);
  return swift_release();
}

uint64_t ReadingHistoryDataStore.removeObserver(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  NSObject *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t result;
  _QWORD v9[6];

  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC13BookDataStore23ReadingHistoryDataStore_lastModelChange);
  v4 = *(NSObject **)(v3 + 16);
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = a1;
  *(_QWORD *)(v5 + 24) = v3;
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = sub_227DFC25C;
  *(_QWORD *)(v6 + 24) = v5;
  v9[4] = sub_227D63158;
  v9[5] = v6;
  v9[0] = MEMORY[0x24BDAC760];
  v9[1] = 1107296256;
  v9[2] = sub_227D62A60;
  v9[3] = &unk_24F08E980;
  v7 = _Block_copy(v9);
  swift_retain_n();
  swift_unknownObjectRetain();
  swift_retain();
  swift_release();
  dispatch_sync(v4, v7);
  _Block_release(v7);
  LOBYTE(v4) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  result = swift_release();
  if ((v4 & 1) != 0)
    __break(1u);
  return result;
}

uint64_t ReadingHistoryDataStore.increment(date:by:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t result;
  _QWORD aBlock[6];

  v5 = sub_227E5F27C();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  MEMORY[0x24BDAC7A8](v5, v8);
  v9 = *(NSObject **)(v2 + 144);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)aBlock - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v5);
  v10 = (*(unsigned __int8 *)(v6 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = v2;
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v11 + v10, (char *)aBlock - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v5);
  *(_QWORD *)(v11 + ((v7 + v10 + 7) & 0xFFFFFFFFFFFFFFF8)) = a2;
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = sub_227DFC2F4;
  *(_QWORD *)(v12 + 24) = v11;
  aBlock[4] = sub_227D63158;
  aBlock[5] = v12;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_227D62A60;
  aBlock[3] = &unk_24F08E9F8;
  v13 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v9, v13);
  _Block_release(v13);
  LOBYTE(v9) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((v9 & 1) != 0)
    __break(1u);
  return result;
}

uint64_t sub_227DF6428(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  double v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  _QWORD v33[3];
  uint64_t v34;
  uint64_t v35;

  v6 = sub_227D68330(&qword_253F39F90);
  MEMORY[0x24BDAC7A8](v6, v7);
  v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for ReadingHistoryDay(0);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10, v12);
  v14 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for ReadingHistoryModel(0);
  MEMORY[0x24BDAC7A8](v15, v16);
  v18 = (char *)&v30 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = *(double *)(a1 + 136);
  v20 = a1 + OBJC_IVAR____TtC13BookDataStore23ReadingHistoryDataStore__state;
  swift_beginAccess();
  result = sub_227D5DFFC(v20, (uint64_t)v18, type metadata accessor for ReadingHistoryModel);
  if ((~*(_QWORD *)&v19 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_10;
  }
  if (v19 <= -9.22337204e18)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if (v19 >= 9.22337204e18)
  {
LABEL_11:
    __break(1u);
    return result;
  }
  v31 = v14;
  ReadingHistoryModel.incrementReadingTime(date:amount:defaultGoal:)(a2, a3, (uint64_t)v19);
  sub_227D68330(&qword_255928E60);
  v22 = sub_227E5F27C();
  v23 = *(_QWORD *)(v22 - 8);
  v24 = *(unsigned __int8 *)(v23 + 80);
  v32 = v10;
  v25 = (v24 + 32) & ~v24;
  v26 = swift_allocObject();
  *(_OWORD *)(v26 + 16) = xmmword_227E6F1B0;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 16))(v26 + v25, a2, v22);
  sub_227DF6790((void (*)(char *))v26, (uint64_t)v18, 0x6E656D6572636E69, 0xE900000000000074);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  ReadingHistoryModel.readingHistoryDay(for:)((uint64_t)v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v32) == 1)
  {
    sub_227D64BC4((uint64_t)v18, type metadata accessor for ReadingHistoryModel);
    return sub_227D5809C((uint64_t)v9, &qword_253F39F90);
  }
  else
  {
    v27 = (uint64_t)v31;
    sub_227D5E458((uint64_t)v9, (uint64_t)v31, type metadata accessor for ReadingHistoryDay);
    swift_beginAccess();
    if (*(_QWORD *)(a1 + 40))
    {
      sub_227D572C8(a1 + 16, (uint64_t)v33);
      swift_endAccess();
      v28 = v34;
      v29 = v35;
      sub_227D572A4(v33, v34);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v29 + 8))(a2, v27, v28, v29);
      sub_227D64BC4(v27, type metadata accessor for ReadingHistoryDay);
      sub_227D64BC4((uint64_t)v18, type metadata accessor for ReadingHistoryModel);
      return sub_227D58120((uint64_t)v33);
    }
    else
    {
      sub_227D64BC4(v27, type metadata accessor for ReadingHistoryDay);
      sub_227D64BC4((uint64_t)v18, type metadata accessor for ReadingHistoryModel);
      return swift_endAccess();
    }
  }
}

uint64_t sub_227DF6790(void (*a1)(char *), uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t (*v53)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v54;
  uint64_t v55;
  void (*v56)(uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t), uint64_t, uint64_t);
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t result;
  char *v77;
  void (*v78)(char *, uint64_t);
  void (*v79)(char *);
  uint64_t v80;
  uint64_t v81;
  void (*v82)(char *, uint64_t);
  uint64_t v83;
  uint64_t v84;
  BOOL v85;
  uint64_t v86;
  void (*v87)(char *);
  char *v88;
  char *v89;
  void (*v90)(char *, uint64_t);
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  char *v96;
  uint64_t v97;
  void (*v98)(char *, uint64_t);
  uint64_t v99;
  unsigned int v100;
  void (*v101)(char *, uint64_t);
  uint64_t v102;
  unsigned int v103;
  void (*v104)(uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t), uint64_t, uint64_t);
  uint64_t v105;
  void (*v106)(char *, uint64_t);
  uint64_t v107;
  uint64_t v108;
  char *v109;
  uint64_t (*v110)(uint64_t, uint64_t, uint64_t, uint64_t);
  char *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  uint64_t v117;
  char *v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  _QWORD *v122;
  char *v123;
  void (*v124)(char *);
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;

  v120 = a3;
  v121 = a4;
  v124 = a1;
  v128 = *v4;
  v6 = sub_227D68330(&qword_253F39840);
  MEMORY[0x24BDAC7A8](v6, v7);
  v118 = (char *)&v99 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v117 = sub_227D68330(&qword_253F398D0);
  MEMORY[0x24BDAC7A8](v117, v9);
  v123 = (char *)&v99 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for ReadingHistoryModel(0);
  v13 = MEMORY[0x24BDAC7A8](v11, v12);
  v119 = (char *)&v99 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x24BDAC7A8](v13, v15);
  v115 = (uint64_t)&v99 - v17;
  MEMORY[0x24BDAC7A8](v16, v18);
  v113 = (uint64_t)&v99 - v19;
  v107 = sub_227E5F2E8();
  v106 = *(void (**)(char *, uint64_t))(v107 - 8);
  MEMORY[0x24BDAC7A8](v107, v20);
  v22 = (char *)&v99 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v108 = sub_227E5F300();
  v105 = *(_QWORD *)(v108 - 8);
  MEMORY[0x24BDAC7A8](v108, v23);
  v111 = (char *)&v99 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = sub_227D68330(&qword_253F391D0);
  MEMORY[0x24BDAC7A8](v25, v26);
  v28 = (char *)&v99 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = type metadata accessor for ReadingHistoryDataStore.State(0);
  v31 = MEMORY[0x24BDAC7A8](v29, v30);
  v116 = (char *)&v99 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v31, v33);
  v35 = (char *)&v99 - v34;
  v36 = sub_227D68330((uint64_t *)&unk_253F39C20);
  v38 = MEMORY[0x24BDAC7A8](v36, v37);
  v112 = (uint64_t)&v99 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v38, v40);
  v42 = (char *)&v99 - v41;
  v43 = sub_227E5F27C();
  v44 = *(_QWORD *)(v43 - 8);
  v46 = MEMORY[0x24BDAC7A8](v43, v45);
  v110 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&v99 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0));
  v49 = MEMORY[0x24BDAC7A8](v46, v48);
  v109 = (char *)&v99 - v50;
  MEMORY[0x24BDAC7A8](v49, v51);
  v53 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&v99 - v52);
  v122 = v4;
  v54 = (uint64_t)v4 + OBJC_IVAR____TtC13BookDataStore23ReadingHistoryDataStore__state;
  swift_beginAccess();
  v114 = v29;
  v55 = v54 + *(int *)(v29 + 24);
  v125 = v43;
  v126 = v44;
  v56 = *(void (**)(uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t), uint64_t, uint64_t))(v44 + 16);
  v56(v53, v55, v43);
  v127 = v54;
  sub_227D5DFFC(v54, (uint64_t)v35, type metadata accessor for ReadingHistoryDataStore.State);
  v129 = v42;
  v130 = (char *)v53;
  sub_227DF1210((uint64_t)v35, a2, v53, (uint64_t)v42);
  sub_227D64BC4((uint64_t)v35, type metadata accessor for ReadingHistoryDataStore.State);
  if (*((_QWORD *)v124 + 2) != 1)
    goto LABEL_4;
  v58 = v125;
  v57 = v126;
  v56((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v28, (uint64_t)v124 + ((*(unsigned __int8 *)(v126 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v126 + 80)), v125);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v57 + 56))(v28, 0, 1, v58);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v57 + 48))(v28, 1, v58) == 1)
  {
    sub_227D5809C((uint64_t)v28, &qword_253F391D0);
    goto LABEL_4;
  }
  v77 = v109;
  (*(void (**)(char *, char *, uint64_t))(v57 + 32))(v109, v28, v58);
  v104 = v56;
  v56(v110, (uint64_t)v77, v58);
  sub_227E5F288();
  v78 = v106;
  v79 = (void (*)(char *))*((_QWORD *)v106 + 13);
  v103 = *MEMORY[0x24BDCF240];
  v80 = v107;
  v79(v22);
  v81 = sub_227E5F2F4();
  v82 = (void (*)(char *, uint64_t))*((_QWORD *)v78 + 1);
  v82(v22, v80);
  LODWORD(v106) = *MEMORY[0x24BDCF250];
  v124 = v79;
  v79(v22);
  v83 = sub_227E5F2F4();
  result = ((uint64_t (*)(char *, uint64_t))v82)(v22, v80);
  v84 = 100 * v81;
  if ((unsigned __int128)(v81 * (__int128)100) >> 64 != (100 * v81) >> 63)
  {
    __break(1u);
    goto LABEL_17;
  }
  v85 = __OFADD__(v84, v83);
  v86 = v84 + v83;
  if (v85)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v102 = v86;
  v100 = *MEMORY[0x24BDCF220];
  v87 = v124;
  v124(v22);
  v88 = (char *)v110;
  v89 = v111;
  v99 = sub_227E5F2F4();
  v101 = *(void (**)(char *, uint64_t))(v57 + 8);
  v101(v88, v58);
  v82(v22, v80);
  v105 = *(_QWORD *)(v105 + 8);
  ((void (*)(char *, uint64_t))v105)(v89, v108);
  v90 = v82;
  v56 = v104;
  v104((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v88, (uint64_t)v130, v58);
  sub_227E5F288();
  ((void (*)(char *, _QWORD, uint64_t))v87)(v22, v103, v80);
  v91 = sub_227E5F2F4();
  v90(v22, v80);
  ((void (*)(char *, _QWORD, uint64_t))v87)(v22, v106, v80);
  v92 = sub_227E5F2F4();
  v106 = v90;
  result = ((uint64_t (*)(char *, uint64_t))v90)(v22, v80);
  v93 = 100 * v91;
  if ((unsigned __int128)(v91 * (__int128)100) >> 64 != (100 * v91) >> 63)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v94 = v93 + v92;
  if (__OFADD__(v93, v92))
  {
LABEL_19:
    __break(1u);
    return result;
  }
  ((void (*)(char *, _QWORD, uint64_t))v124)(v22, v100, v80);
  v95 = (char *)v110;
  v96 = v111;
  v97 = sub_227E5F2F4();
  v98 = v101;
  v101(v95, v58);
  v106(v22, v80);
  ((void (*)(char *, uint64_t))v105)(v96, v108);
  v98(v109, v58);
  if (v102 == v94 && v99 == v97)
  {
    v59 = v113;
    sub_227DF322C(a2, (uint64_t)v129, v113);
    sub_227D64BC4(a2, type metadata accessor for ReadingHistoryModel);
    goto LABEL_5;
  }
LABEL_4:
  v59 = v113;
  sub_227D5DFFC(v127, v113, type metadata accessor for ReadingHistoryModel);
  v60 = sub_227E05848(a2);
  sub_227D64BC4(v59, type metadata accessor for ReadingHistoryModel);
  v61 = v112;
  sub_227DF3614(a2, v60, v112);
  swift_bridgeObjectRelease();
  sub_227DF322C(a2, v61, v59);
  sub_227D64BC4(a2, type metadata accessor for ReadingHistoryModel);
  sub_227D5809C(v61, (uint64_t *)&unk_253F39C20);
LABEL_5:
  sub_227D5E458(v59, a2, type metadata accessor for ReadingHistoryModel);
  v62 = v122;
  v63 = (uint64_t)v123;
  v64 = (uint64_t)v119;
  v65 = v125;
  v66 = (uint64_t)v116;
  v67 = v115;
  if (*((_BYTE *)v122 + 96) == 1)
  {
    v68 = v122[13];
    sub_227D5DFFC(a2, v115, type metadata accessor for ReadingHistoryModel);
    sub_227E08A3C(v68);
  }
  else
  {
    sub_227D5DFFC(a2, v115, type metadata accessor for ReadingHistoryModel);
  }
  sub_227D64BC4(a2, type metadata accessor for ReadingHistoryModel);
  sub_227D5E458(v67, a2, type metadata accessor for ReadingHistoryModel);
  sub_227D5DFFC(a2, v66, type metadata accessor for ReadingHistoryModel);
  v69 = v114;
  sub_227D5DF48((uint64_t)v129, v66 + *(int *)(v114 + 20), (uint64_t *)&unk_253F39C20);
  v70 = v130;
  v56((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(v66 + *(int *)(v69 + 24)), (uint64_t)v130, v65);
  sub_227D5D2D4(v70, (char *)(v66 + *(int *)(v69 + 28)));
  swift_retain();
  v71 = v117;
  sub_227E602CC();
  swift_release();
  v72 = sub_227D68330(&qword_253F3A1C0);
  v73 = (uint64_t)v118;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v72 - 8) + 56))(v118, 1, 2, v72);
  sub_227DFD804(v66, v63, type metadata accessor for ReadingHistoryModel);
  sub_227D5E414(v73, v63 + *(int *)(v71 + 48), &qword_253F39840);
  sub_227DF48C4(v66, v63, v120, v121);
  sub_227D572C8((uint64_t)(v62 + 7), (uint64_t)&v131);
  v74 = v132;
  v75 = v133;
  sub_227D572A4(&v131, v132);
  sub_227D5DFFC(v127, v64, type metadata accessor for ReadingHistoryModel);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v75 + 48))(v64, v74, v75);
  sub_227D64BC4(v64, type metadata accessor for ReadingHistoryModel);
  sub_227D58120((uint64_t)&v131);
  sub_227D5809C(v63, &qword_253F398D0);
  sub_227D64BC4(v66, type metadata accessor for ReadingHistoryDataStore.State);
  sub_227D5809C((uint64_t)v129, (uint64_t *)&unk_253F39C20);
  return (*(uint64_t (**)(char *, uint64_t))(v126 + 8))(v130, v65);
}

uint64_t ReadingHistoryDataStore.applyUpdate(update:)(void *a1)
{
  uint64_t v1;
  NSObject *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  uint64_t result;
  _QWORD v9[6];

  v3 = *(NSObject **)(v1 + 144);
  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = v1;
  *(_QWORD *)(v4 + 24) = a1;
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = sub_227DFC374;
  *(_QWORD *)(v5 + 24) = v4;
  v9[4] = sub_227D63158;
  v9[5] = v5;
  v9[0] = MEMORY[0x24BDAC760];
  v9[1] = 1107296256;
  v9[2] = sub_227D62A60;
  v9[3] = &unk_24F08EA70;
  v6 = _Block_copy(v9);
  swift_retain();
  v7 = a1;
  swift_retain();
  swift_release();
  dispatch_sync(v3, v6);
  _Block_release(v6);
  LOBYTE(v3) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((v3 & 1) != 0)
    __break(1u);
  return result;
}

uint64_t sub_227DF731C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *);
  uint64_t v24;
  char *v25;
  uint64_t v26;
  void (*v27)(_QWORD, _QWORD, _QWORD);
  void (*v28)(char *, uint64_t, uint64_t, uint64_t);
  unint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(char *);
  uint64_t v37;
  uint64_t v39;
  void (*v40)(char *);
  uint64_t v41;
  void (*v42)(_QWORD, _QWORD, _QWORD);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  void (*v48)(char *);

  v2 = type metadata accessor for ReadingHistoryDay(0);
  v46 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2, v3);
  v45 = (uint64_t)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4, v6);
  v44 = (uint64_t)&v39 - v7;
  v8 = sub_227E5F27C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8, v10);
  v12 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_227D68330(&qword_253F391D0);
  MEMORY[0x24BDAC7A8](v13, v14);
  v16 = (char *)&v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for ReadingHistoryModel(0);
  MEMORY[0x24BDAC7A8](v17, v18);
  v20 = (char *)&v39 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = a1 + OBJC_IVAR____TtC13BookDataStore23ReadingHistoryDataStore__state;
  swift_beginAccess();
  v47 = v20;
  sub_227D5DFFC(v21, (uint64_t)v20, type metadata accessor for ReadingHistoryModel);
  v22 = ReadingHistoryUpdate.days.getter();
  swift_bridgeObjectRetain_n();
  v23 = (void (*)(char *))sub_227E14658(v22);
  swift_bridgeObjectRelease();
  v48 = v23;
  sub_227DF8DA4((_QWORD **)&v48);
  v41 = a1;
  swift_bridgeObjectRelease();
  v24 = *((_QWORD *)v48 + 2);
  v40 = v48;
  if (v24)
  {
    v25 = (char *)v48 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    v26 = *(_QWORD *)(v9 + 72);
    v27 = *(void (**)(_QWORD, _QWORD, _QWORD))(v9 + 16);
    swift_retain();
    v42 = v27;
    v43 = v22;
    while (1)
    {
      v27(v16, v25, v8);
      v28 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
      v28(v16, 0, 1, v8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v16, 1, v8) == 1)
        break;
      (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v12, v16, v8);
      if (*(_QWORD *)(v22 + 16))
      {
        v29 = sub_227DD0124((uint64_t)v12);
        if ((v30 & 1) != 0)
        {
          v31 = v45;
          sub_227D5DFFC(*(_QWORD *)(v22 + 56) + *(_QWORD *)(v46 + 72) * v29, v45, type metadata accessor for ReadingHistoryDay);
          v32 = v31;
          v33 = v26;
          v34 = v44;
          sub_227D5E458(v32, v44, type metadata accessor for ReadingHistoryDay);
          ReadingHistoryModel.mergeDay(date:day:)((uint64_t)v12, v34);
          v35 = v34;
          v26 = v33;
          v27 = v42;
          v22 = v43;
          sub_227D64BC4(v35, type metadata accessor for ReadingHistoryDay);
        }
      }
      (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
      v25 += v26;
      if (!--v24)
        goto LABEL_9;
    }
  }
  else
  {
    v28 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
    swift_retain();
LABEL_9:
    v28(v16, 1, 1, v8);
  }
  swift_bridgeObjectRelease();
  v36 = v40;
  swift_release();
  v37 = (uint64_t)v47;
  sub_227DF6790(v36, (uint64_t)v47, 0x647055796C707061, 0xEB00000000657461);
  swift_release();
  return sub_227D64BC4(v37, type metadata accessor for ReadingHistoryModel);
}

Swift::Void __swiftcall ReadingHistoryDataStore.clearData()()
{
  uint64_t v0;
  NSObject *v1;
  uint64_t v2;
  void *v3;
  _QWORD v4[6];

  v1 = *(NSObject **)(v0 + 144);
  v2 = swift_allocObject();
  *(_QWORD *)(v2 + 16) = sub_227DFC38C;
  *(_QWORD *)(v2 + 24) = v0;
  v4[4] = sub_227D63158;
  v4[5] = v2;
  v4[0] = MEMORY[0x24BDAC760];
  v4[1] = 1107296256;
  v4[2] = sub_227D62A60;
  v4[3] = &unk_24F08EAC0;
  v3 = _Block_copy(v4);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v1, v3);
  _Block_release(v3);
  LOBYTE(v1) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  if ((v1 & 1) != 0)
    __break(1u);
}

void static ReadingHistoryDataStore.clearCachedData(in:)(void *a1)
{
  void *v2;
  id v3;

  v2 = (void *)sub_227E5FF78();
  objc_msgSend(a1, sel_removeObjectForKey_, v2);

  v3 = (id)sub_227E5FF78();
  objc_msgSend(a1, sel_setInteger_forKey_, 0, v3);

}

uint64_t ReadingHistoryDataStore.longestStreak.getter()
{
  sub_227D68330((uint64_t *)&unk_253F39C20);
  return sub_227E602CC();
}

uint64_t ReadingHistoryDataStore.currentStreakLength.getter()
{
  uint64_t v1;

  sub_227E602CC();
  return v1;
}

uint64_t ReadingHistoryDataStore.readingHistoryDay(for:)()
{
  return sub_227E602CC();
}

uint64_t sub_227DF792C()
{
  sub_227D68330((uint64_t *)&unk_253F39C20);
  return sub_227E602CC();
}

uint64_t sub_227DF7988()
{
  uint64_t v1;

  sub_227E602CC();
  return v1;
}

_QWORD *sub_227DF79D8(uint64_t a1, uint64_t a2)
{
  return ReadingHistoryDataStore.readingHistory(range:)(a1, a2);
}

uint64_t sub_227DF79F8(uint64_t a1)
{
  return ReadingHistoryDataStore.removeObserver(_:)(a1);
}

void sub_227DF7A18()
{
  ReadingHistoryDataStore.clearData()();
}

uint64_t sub_227DF7A38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  v1 = sub_227E5F27C();
  v2 = *(_QWORD *)(v1 - 8);
  v4 = MEMORY[0x24BDAC7A8](v1, v3);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t))(*(_QWORD *)v0 + 120))(v4);
  sub_227DF7BC4((uint64_t)v6, 0x646F547261656C63, 0xEA00000000007961);
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v6, v1);
}

Swift::Void __swiftcall ReadingHistoryDataStore.clearToday()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;

  v1 = sub_227E5F27C();
  v2 = *(_QWORD *)(v1 - 8);
  v4 = MEMORY[0x24BDAC7A8](v1, v3);
  v6 = (char *)&v7 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t))(v0 + 120))(v4);
  sub_227DF7BC4((uint64_t)v6, 0x646F547261656C63, 0xEA00000000007961);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v6, v1);
}

uint64_t sub_227DF7B88(uint64_t a1, uint64_t a2)
{
  return ReadingHistoryDataStore.increment(date:by:)(a1, a2);
}

uint64_t ReadingHistoryDataStore.clearDate(_:)(uint64_t a1)
{
  return sub_227DF7BC4(a1, 0x7461447261656C63, 0xE900000000000065);
}

uint64_t sub_227DF7BC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  void *v17;
  uint64_t result;
  uint64_t v19;
  dispatch_queue_t v20;
  _QWORD aBlock[6];

  v7 = sub_227E5F27C();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  MEMORY[0x24BDAC7A8](v7, v10);
  v11 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = *(dispatch_queue_t *)(v3 + 144);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v11, a1, v7);
  v12 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v13 = (v9 + v12 + 7) & 0xFFFFFFFFFFFFFFF8;
  v14 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v14 + v12, v11, v7);
  *(_QWORD *)(v14 + v13) = v3;
  v15 = (_QWORD *)(v14 + ((v13 + 15) & 0xFFFFFFFFFFFFFFF8));
  *v15 = a2;
  v15[1] = a3;
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = sub_227DFDA78;
  *(_QWORD *)(v16 + 24) = v14;
  aBlock[4] = sub_227D63158;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_227D62A60;
  aBlock[3] = &unk_24F08EFE0;
  v17 = _Block_copy(aBlock);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  dispatch_sync(v20, v17);
  _Block_release(v17);
  LOBYTE(a3) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((a3 & 1) != 0)
    __break(1u);
  return result;
}

uint64_t sub_227DF7D98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t (*v36)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  void (*v41)(char *, uint64_t, uint64_t);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void (*v55)(uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t), uint64_t);
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  char *v61;
  uint64_t (*v62)(uint64_t, uint64_t, uint64_t, uint64_t);
  char *v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD v69[3];
  uint64_t v70;
  uint64_t v71;

  v66 = a3;
  v67 = a4;
  v68 = a2;
  v5 = sub_227D68330(&qword_253F39840);
  MEMORY[0x24BDAC7A8](v5, v6);
  v63 = (char *)&v57 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = sub_227D68330(&qword_253F398D0);
  MEMORY[0x24BDAC7A8](v60, v8);
  v59 = (char *)&v57 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (int *)type metadata accessor for ReadingHistoryDataStore.State(0);
  v12 = MEMORY[0x24BDAC7A8](v10, v11);
  v14 = (char *)&v57 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12, v15);
  v17 = (char *)&v57 - v16;
  v18 = sub_227D68330((uint64_t *)&unk_253F39C20);
  MEMORY[0x24BDAC7A8](v18, v19);
  v21 = (char *)&v57 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = type metadata accessor for ReadingHistoryModel(0);
  v24 = MEMORY[0x24BDAC7A8](v22, v23);
  v58 = (char *)&v57 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = MEMORY[0x24BDAC7A8](v24, v26);
  v65 = (char *)&v57 - v28;
  MEMORY[0x24BDAC7A8](v27, v29);
  v31 = (char *)&v57 - v30;
  v32 = sub_227E5F27C();
  v34 = MEMORY[0x24BDAC7A8](v32, v33);
  v36 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&v57 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v34, v37);
  v39 = (char *)&v57 - v38;
  v64 = v40;
  v41 = *(void (**)(char *, uint64_t, uint64_t))(v40 + 16);
  v41((char *)&v57 - v38, a1, v32);
  v42 = v68 + OBJC_IVAR____TtC13BookDataStore23ReadingHistoryDataStore__state;
  swift_beginAccess();
  v41((char *)v36, v42 + v10[6], v32);
  v57 = v42;
  sub_227D5DFFC(v42, (uint64_t)v31, type metadata accessor for ReadingHistoryModel);
  v61 = v39;
  sub_227E07D40((uint64_t)v39);
  type metadata accessor for ReadingHistoryDataStore(0);
  sub_227D5DFFC(v42, (uint64_t)v17, type metadata accessor for ReadingHistoryDataStore.State);
  sub_227DF1210((uint64_t)v17, (uint64_t)v31, v36, (uint64_t)v21);
  sub_227D64BC4((uint64_t)v17, type metadata accessor for ReadingHistoryDataStore.State);
  v43 = (uint64_t)v65;
  sub_227DF322C((uint64_t)v31, (uint64_t)v21, (uint64_t)v65);
  sub_227D64BC4((uint64_t)v31, type metadata accessor for ReadingHistoryModel);
  sub_227D5E458(v43, (uint64_t)v31, type metadata accessor for ReadingHistoryModel);
  sub_227D5DFFC((uint64_t)v31, (uint64_t)v14, type metadata accessor for ReadingHistoryModel);
  v44 = (uint64_t)&v14[v10[5]];
  v65 = v21;
  sub_227D5DF48((uint64_t)v21, v44, (uint64_t *)&unk_253F39C20);
  v41(&v14[v10[6]], (uint64_t)v36, v32);
  v45 = (uint64_t)v59;
  v46 = &v14[v10[7]];
  v62 = v36;
  sub_227D5D2D4((char *)v36, v46);
  v47 = v68;
  swift_retain();
  v48 = v60;
  sub_227E602CC();
  swift_release();
  v49 = sub_227D68330(&qword_253F3A1C0);
  v50 = (uint64_t)v63;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 56))(v63, 1, 2, v49);
  sub_227DFD804((uint64_t)v14, v45, type metadata accessor for ReadingHistoryModel);
  v51 = *(int *)(v48 + 48);
  v52 = (uint64_t)v58;
  sub_227D5E414(v50, v45 + v51, &qword_253F39840);
  sub_227DF48C4((uint64_t)v14, v45, v66, v67);
  sub_227D572C8(v47 + 56, (uint64_t)v69);
  v53 = v70;
  v54 = v71;
  sub_227D572A4(v69, v70);
  sub_227D5DFFC(v57, v52, type metadata accessor for ReadingHistoryModel);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v54 + 48))(v52, v53, v54);
  sub_227D64BC4(v52, type metadata accessor for ReadingHistoryModel);
  sub_227D58120((uint64_t)v69);
  sub_227D5809C(v45, &qword_253F398D0);
  sub_227D64BC4((uint64_t)v14, type metadata accessor for ReadingHistoryDataStore.State);
  sub_227D5809C((uint64_t)v65, (uint64_t *)&unk_253F39C20);
  sub_227D64BC4((uint64_t)v31, type metadata accessor for ReadingHistoryModel);
  v55 = *(void (**)(uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t), uint64_t))(v64 + 8);
  v55(v62, v32);
  return ((uint64_t (*)(char *, uint64_t))v55)(v61, v32);
}

uint64_t ReadingHistoryDataStore.serializedModel(_:)(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  NSObject *v4;
  _QWORD *v5;
  uint64_t v6;
  void *v7;
  id v8;
  uint64_t result;
  uint64_t v10;
  _QWORD v11[6];
  __int128 v12;

  v2 = v1;
  v12 = xmmword_227E6F050;
  v4 = *(NSObject **)(v1 + 144);
  v5 = (_QWORD *)swift_allocObject();
  v5[2] = &v12;
  v5[3] = v2;
  v5[4] = a1;
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = sub_227DFC3CC;
  *(_QWORD *)(v6 + 24) = v5;
  v11[4] = sub_227D63158;
  v11[5] = v6;
  v11[0] = MEMORY[0x24BDAC760];
  v11[1] = 1107296256;
  v11[2] = sub_227D62A60;
  v11[3] = &unk_24F08EB38;
  v7 = _Block_copy(v11);
  swift_retain();
  v8 = a1;
  swift_retain();
  swift_release();
  dispatch_sync(v4, v7);
  _Block_release(v7);
  LOBYTE(v4) = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((v4 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v10 = v12;
    swift_release();
    return v10;
  }
  return result;
}

uint64_t sub_227DF83D8(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v20;

  v4 = sub_227E5FCD8();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v6);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for ReadingHistoryModel(0);
  MEMORY[0x24BDAC7A8](v9, v10);
  v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = a2 + OBJC_IVAR____TtC13BookDataStore23ReadingHistoryDataStore__state;
  swift_beginAccess();
  sub_227D5DFFC(v13, (uint64_t)v12, type metadata accessor for ReadingHistoryModel);
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v8, *MEMORY[0x24BE184D8], v4);
  sub_227D51624(&qword_253F3A230, type metadata accessor for ReadingHistoryModel, (uint64_t)&protocol conformance descriptor for ReadingHistoryModel);
  v14 = sub_227E5FD2C();
  v16 = v15;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  sub_227D64BC4((uint64_t)v12, type metadata accessor for ReadingHistoryModel);
  v17 = *a1;
  v18 = a1[1];
  *a1 = v14;
  a1[1] = v16;
  return sub_227DD7918(v17, v18);
}

Swift::Void __swiftcall ReadingHistoryDataStore.forceSummarizeAndPrune(year:month:)(Swift::Int year, Swift::Int month)
{
  uint64_t v2;
  uint64_t v3;
  NSObject *v6;
  _QWORD *v7;
  uint64_t v8;
  void *v9;
  _QWORD v10[6];

  v3 = v2;
  v6 = *(NSObject **)(v3 + 144);
  v7 = (_QWORD *)swift_allocObject();
  v7[2] = v3;
  v7[3] = year;
  v7[4] = month;
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = sub_227DFC40C;
  *(_QWORD *)(v8 + 24) = v7;
  v10[4] = sub_227D63158;
  v10[5] = v8;
  v10[0] = MEMORY[0x24BDAC760];
  v10[1] = 1107296256;
  v10[2] = sub_227D62A60;
  v10[3] = &unk_24F08EBB0;
  v9 = _Block_copy(v10);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v6, v9);
  _Block_release(v9);
  LOBYTE(v6) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  if ((v6 & 1) != 0)
    __break(1u);
}

uint64_t sub_227DF8798(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t (*v32)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  void (*v35)(uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t), uint64_t, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  _QWORD v64[3];
  uint64_t v65;
  uint64_t v66;

  v3 = v2;
  v57 = a1;
  v4 = *v2;
  v62 = a2;
  v63 = (char *)v4;
  v5 = sub_227D68330(&qword_253F39840);
  MEMORY[0x24BDAC7A8](v5, v6);
  v60 = (uint64_t)&v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = sub_227D68330(&qword_253F398D0);
  MEMORY[0x24BDAC7A8](v59, v8);
  v56 = (char *)&v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for ReadingHistoryDataStore.State(0);
  v53 = v10;
  v12 = MEMORY[0x24BDAC7A8](v10, v11);
  v55 = (uint64_t)&v52 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12, v14);
  v16 = (char *)&v52 - v15;
  v17 = sub_227D68330((uint64_t *)&unk_253F39C20);
  MEMORY[0x24BDAC7A8](v17, v18);
  v20 = (char *)&v52 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for ReadingHistoryModel(0);
  v23 = MEMORY[0x24BDAC7A8](v21, v22);
  v58 = (uint64_t)&v52 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v23, v25);
  v27 = (char *)&v52 - v26;
  v28 = sub_227E5F27C();
  v29 = *(_QWORD *)(v28 - 8);
  MEMORY[0x24BDAC7A8](v28, v30);
  v32 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&v52 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0));
  v33 = (uint64_t)v3 + OBJC_IVAR____TtC13BookDataStore23ReadingHistoryDataStore__state;
  swift_beginAccess();
  v34 = v33 + *(int *)(v10 + 24);
  v61 = v29;
  v35 = *(void (**)(uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t), uint64_t, uint64_t))(v29 + 16);
  v35(v32, v34, v28);
  sub_227D5DFFC(v33, (uint64_t)v27, type metadata accessor for ReadingHistoryModel);
  sub_227E08188(v57, v62);
  sub_227D5DFFC(v33, (uint64_t)v16, type metadata accessor for ReadingHistoryDataStore.State);
  sub_227DF1210((uint64_t)v16, (uint64_t)v27, v32, (uint64_t)v20);
  sub_227D64BC4((uint64_t)v16, type metadata accessor for ReadingHistoryDataStore.State);
  v36 = v55;
  sub_227D5DFFC((uint64_t)v27, v55, type metadata accessor for ReadingHistoryModel);
  v37 = v53;
  v38 = v36 + *(int *)(v53 + 20);
  v63 = v20;
  v39 = (uint64_t)v20;
  v40 = (uint64_t)v56;
  sub_227D5DF48(v39, v38, (uint64_t *)&unk_253F39C20);
  v41 = v36 + *(int *)(v37 + 24);
  v62 = v28;
  v35((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v41, (uint64_t)v32, v28);
  v42 = (char *)(v36 + *(int *)(v37 + 28));
  v57 = (uint64_t)v32;
  sub_227D5D2D4((char *)v32, v42);
  v43 = v54;
  swift_retain();
  v44 = v59;
  sub_227E602CC();
  swift_release();
  v45 = v40 + *(int *)(v44 + 48);
  v46 = v60;
  sub_227D5DF48(v45, v60, &qword_253F39840);
  sub_227DFD804((uint64_t)v27, v40, type metadata accessor for ReadingHistoryModel);
  sub_227D5E414(v46, v45, &qword_253F39840);
  sub_227DF48C4(v36, v40, 0xD000000000000016, 0x8000000227E6C1C0);
  sub_227D572C8(v43 + 56, (uint64_t)v64);
  v47 = v65;
  v48 = v66;
  sub_227D572A4(v64, v65);
  v49 = v33;
  v50 = v58;
  sub_227D5DFFC(v49, v58, type metadata accessor for ReadingHistoryModel);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v48 + 48))(v50, v47, v48);
  sub_227D64BC4(v50, type metadata accessor for ReadingHistoryModel);
  sub_227D58120((uint64_t)v64);
  sub_227D5809C(v40, &qword_253F398D0);
  sub_227D64BC4(v36, type metadata accessor for ReadingHistoryDataStore.State);
  sub_227D5809C((uint64_t)v63, (uint64_t *)&unk_253F39C20);
  sub_227D64BC4((uint64_t)v27, type metadata accessor for ReadingHistoryModel);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v61 + 8))(v57, v62);
}

uint64_t ReadingHistoryDataStore.readingHistoryModelLoadedState()()
{
  sub_227D68330((uint64_t *)&unk_255928E88);
  return sub_227E602CC();
}

uint64_t sub_227DF8C60@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  char v6;
  uint64_t result;
  uint64_t v8;

  v2 = sub_227D68330(&qword_253F398D0);
  MEMORY[0x24BDAC7A8](v2, v3);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  sub_227E602CC();
  swift_release();
  v6 = v5[*(int *)(v2 + 44)];
  result = sub_227D5809C((uint64_t)v5, &qword_253F398D0);
  *a1 = v6;
  return result;
}

uint64_t sub_227DF8D3C(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_227E15824(v2);
  v3 = *(_QWORD *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  result = sub_227DF98F8(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_227DF8DA4(_QWORD **a1)
{
  uint64_t v2;
  _QWORD *v3;
  char *v4;
  uint64_t result;
  char *v6[2];

  v2 = *(_QWORD *)(sub_227E5F27C() - 8);
  v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v3 = (_QWORD *)sub_227E15838(v3);
  v4 = (char *)v3[2];
  v6[0] = (char *)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v6[1] = v4;
  result = sub_227DFA040(v6);
  *a1 = v3;
  return result;
}

_QWORD *sub_227DF8E24(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_227D68330(&qword_255928E50);
      v10 = (_QWORD *)swift_allocObject();
      v11 = j__malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 25;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4])
          memmove(v13, a4 + 4, 8 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_227DFD3C8(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_227DF8F30(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_227DF8F44(a1, a2, a3, a4, &qword_255928EC8, type metadata accessor for PBPropertyBundle);
}

uint64_t sub_227DF8F44(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t (*a6)(_QWORD))
{
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  size_t v17;
  BOOL v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = *(_QWORD *)(a4 + 24);
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = *(_QWORD *)(a4 + 16);
  if (v10 <= v11)
    v12 = *(_QWORD *)(a4 + 16);
  else
    v12 = v10;
  if (!v12)
  {
    v16 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_19;
  }
  sub_227D68330(a5);
  v13 = *(_QWORD *)(a6(0) - 8);
  v14 = *(_QWORD *)(v13 + 72);
  v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v16 = (_QWORD *)swift_allocObject();
  v17 = j__malloc_size(v16);
  if (!v14 || (v17 - v15 == 0x8000000000000000 ? (v18 = v14 == -1) : (v18 = 0), v18))
  {
LABEL_29:
    result = sub_227E60554();
    __break(1u);
    return result;
  }
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  v19 = *(_QWORD *)(a6(0) - 8);
  v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = (unint64_t)v16 + v20;
  if ((a1 & 1) != 0)
  {
    if ((unint64_t)v16 < a4 || v21 >= a4 + v20 + *(_QWORD *)(v19 + 72) * v11)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != (_QWORD *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_227DFD5A0(0, v11, v21, a4, a6);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v16;
}

uint64_t sub_227DF9150(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_227DF8F44(a1, a2, a3, a4, &qword_255928EC0, type metadata accessor for PBPropertyValue);
}

_QWORD *sub_227DF9164(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_227D68330(&qword_255928EB0);
      v10 = (_QWORD *)swift_allocObject();
      v11 = j__malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 1;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4])
          memmove(v13, a4 + 4, 32 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_227DFD4B0(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_227DF9270(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_227DF8F44(a1, a2, a3, a4, &qword_255928EB8, (uint64_t (*)(_QWORD))MEMORY[0x24BDB8940]);
}

_QWORD *sub_227DF9284(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_227D6A388(a1, a2, a3, a4, &qword_255928E98, (uint64_t *)&unk_255928EA0);
}

uint64_t sub_227DF9298(uint64_t isStackAllocationSafe, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v10;
  char v11;
  unint64_t v12;
  size_t v13;
  uint64_t v14;
  void *v15;
  _QWORD v17[2];

  v10 = isStackAllocationSafe;
  v17[1] = *MEMORY[0x24BDAC8D0];
  v11 = *(_BYTE *)(isStackAllocationSafe + 32);
  v12 = (unint64_t)((1 << v11) + 63) >> 6;
  v13 = 8 * v12;
  if ((v11 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    v17[0] = v17;
    MEMORY[0x24BDAC7A8](isStackAllocationSafe, a2);
    bzero((char *)v17 - ((v13 + 15) & 0x3FFFFFFFFFFFFFF0), v13);
    v14 = sub_227DF95B8((uint64_t)v17 - ((v13 + 15) & 0x3FFFFFFFFFFFFFF0), v12, v10, a2, a3, a4, a5);
    swift_release();
    if (v5)
      swift_willThrow();
  }
  else
  {
    v15 = (void *)swift_slowAlloc();
    bzero(v15, v13);
    v14 = sub_227DF95B8((uint64_t)v15, v12, v10, a2, a3, a4, a5);
    swift_release();
    MEMORY[0x22E2AA8AC](v15, -1, -1);
  }
  return v14;
}

uint64_t sub_227DF943C(uint64_t isStackAllocationSafe, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t (*v5)(__int128 *);
  char v6;
  unint64_t v7;
  size_t v8;
  uint64_t v9;
  void *v10;
  _QWORD v12[2];

  v5 = (uint64_t (*)(__int128 *))isStackAllocationSafe;
  v12[1] = *MEMORY[0x24BDAC8D0];
  v6 = *(_BYTE *)(a3 + 32);
  v7 = (unint64_t)((1 << v6) + 63) >> 6;
  v8 = 8 * v7;
  if ((v6 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x24BDAC7A8](isStackAllocationSafe, a2);
    bzero((char *)v12 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0), v8);
    v9 = sub_227DF973C((uint64_t)v12 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0), v7, a3, v5);
    swift_release();
    if (v3)
      swift_willThrow();
  }
  else
  {
    v10 = (void *)swift_slowAlloc();
    bzero(v10, v8);
    v9 = sub_227DF973C((uint64_t)v10, v7, a3, v5);
    swift_release();
    MEMORY[0x22E2AA8AC](v10, -1, -1);
  }
  return v9;
}

uint64_t sub_227DF95B8(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  unint64_t *v9;
  uint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;

  v9 = (unint64_t *)result;
  v10 = 0;
  v11 = 0;
  v12 = a3 + 56;
  v13 = 1 << *(_BYTE *)(a3 + 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v15 = v14 & *(_QWORD *)(a3 + 56);
  v16 = (unint64_t)(v13 + 63) >> 6;
  while (v15)
  {
    v17 = __clz(__rbit64(v15));
    v15 &= v15 - 1;
    v18 = v17 | (v11 << 6);
LABEL_20:
    v22 = (uint64_t *)(*(_QWORD *)(a3 + 48) + 16 * v18);
    v23 = *v22;
    v24 = v22[1];
    if ((v23 != a4 || v24 != a5) && (v23 != a6 || v24 != a7))
    {
      *(_QWORD *)(result + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      if (__OFADD__(v10++, 1))
      {
        __break(1u);
LABEL_31:
        swift_retain();
        return sub_227E3E524(v9, a2, v10, a3);
      }
    }
  }
  v19 = v11 + 1;
  if (__OFADD__(v11, 1))
  {
    __break(1u);
    goto LABEL_33;
  }
  if (v19 >= v16)
    goto LABEL_31;
  v20 = *(_QWORD *)(v12 + 8 * v19);
  ++v11;
  if (v20)
    goto LABEL_19;
  v11 = v19 + 1;
  if (v19 + 1 >= v16)
    goto LABEL_31;
  v20 = *(_QWORD *)(v12 + 8 * v11);
  if (v20)
    goto LABEL_19;
  v11 = v19 + 2;
  if (v19 + 2 >= v16)
    goto LABEL_31;
  v20 = *(_QWORD *)(v12 + 8 * v11);
  if (v20)
  {
LABEL_19:
    v15 = (v20 - 1) & v20;
    v18 = __clz(__rbit64(v20)) + (v11 << 6);
    goto LABEL_20;
  }
  v21 = v19 + 3;
  if (v21 >= v16)
    goto LABEL_31;
  v20 = *(_QWORD *)(v12 + 8 * v21);
  if (v20)
  {
    v11 = v21;
    goto LABEL_19;
  }
  while (1)
  {
    v11 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v11 >= v16)
      goto LABEL_31;
    v20 = *(_QWORD *)(v12 + 8 * v11);
    ++v21;
    if (v20)
      goto LABEL_19;
  }
LABEL_33:
  __break(1u);
  return result;
}

uint64_t sub_227DF973C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t (*a4)(__int128 *))
{
  uint64_t v4;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v17;
  int64_t v18;
  unint64_t *v20;
  __int128 v21;
  uint64_t v22;

  v20 = (unint64_t *)result;
  v7 = 0;
  v8 = 0;
  v9 = a3 + 56;
  v10 = 1 << *(_BYTE *)(a3 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(a3 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
LABEL_4:
  v22 = v7;
  while (v12)
  {
    v14 = __clz(__rbit64(v12));
    v12 &= v12 - 1;
    v15 = v14 | (v8 << 6);
LABEL_18:
    v21 = *(_OWORD *)(*(_QWORD *)(a3 + 48) + 16 * v15);
    result = a4(&v21);
    if (v4)
      return result;
    if ((result & 1) != 0)
    {
      *(unint64_t *)((char *)v20 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      v7 = v22 + 1;
      if (!__OFADD__(v22, 1))
        goto LABEL_4;
      __break(1u);
LABEL_28:
      swift_retain();
      return sub_227E3E524(v20, a2, v22, a3);
    }
  }
  if (__OFADD__(v8++, 1))
  {
    __break(1u);
    goto LABEL_31;
  }
  if (v8 >= v13)
    goto LABEL_28;
  v17 = *(_QWORD *)(v9 + 8 * v8);
  if (v17)
  {
LABEL_17:
    v12 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v8 << 6);
    goto LABEL_18;
  }
  v18 = v8 + 1;
  if (v8 + 1 >= v13)
    goto LABEL_28;
  v17 = *(_QWORD *)(v9 + 8 * v18);
  if (v17)
    goto LABEL_16;
  v18 = v8 + 2;
  if (v8 + 2 >= v13)
    goto LABEL_28;
  v17 = *(_QWORD *)(v9 + 8 * v18);
  if (v17)
    goto LABEL_16;
  v18 = v8 + 3;
  if (v8 + 3 >= v13)
    goto LABEL_28;
  v17 = *(_QWORD *)(v9 + 8 * v18);
  if (v17)
  {
LABEL_16:
    v8 = v18;
    goto LABEL_17;
  }
  while (1)
  {
    v8 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v8 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v9 + 8 * v8);
    ++v18;
    if (v17)
      goto LABEL_17;
  }
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_227DF98F8(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 *v29;
  uint64_t v30;
  uint64_t v31;
  __int128 *v32;
  __int128 v33;
  uint64_t v34;
  uint64_t *v35;
  __int128 v36;
  uint64_t v37;
  uint64_t v38;
  BOOL v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _OWORD *v47;
  __int128 v48;
  unint64_t v49;
  unint64_t v50;
  unint64_t v51;
  char *v52;
  char *v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  BOOL v65;
  unint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  BOOL v75;
  uint64_t v76;
  char v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  BOOL v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  char *v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  unint64_t v98;
  char *v99;
  char *v100;
  uint64_t v101;
  unint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  unint64_t v107;
  uint64_t *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t *__dst;

  v3 = a1[1];
  result = sub_227E60668();
  if (result >= v3)
  {
    if ((v3 & 0x8000000000000000) == 0)
    {
      if (v3)
        return sub_227DFAAB8(0, v3, 1, a1);
      return result;
    }
    goto LABEL_156;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_164;
  v6 = result;
  v108 = a1;
  if (v3 < 2)
  {
    v9 = MEMORY[0x24BEE4AF8];
    __dst = (uint64_t *)(MEMORY[0x24BEE4AF8] + 32);
    if (v3 != 1)
    {
      v51 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
      v12 = (char *)MEMORY[0x24BEE4AF8];
LABEL_112:
      v100 = v12;
      v111 = v9;
      if (v51 < 2)
      {
LABEL_123:
        swift_bridgeObjectRelease();
        *(_QWORD *)(v111 + 16) = 0;
        return swift_bridgeObjectRelease();
      }
      v101 = *v108;
      while (1)
      {
        v102 = v51 - 2;
        if (v51 < 2)
          goto LABEL_146;
        if (!v101)
          goto LABEL_163;
        v103 = v100;
        v104 = *(_QWORD *)&v100[16 * v102 + 32];
        v105 = *(_QWORD *)&v100[16 * v51 + 24];
        sub_227DFADF4((uint64_t *)(v101 + 16 * v104), (uint64_t *)(v101 + 16 * *(_QWORD *)&v100[16 * v51 + 16]), v101 + 16 * v105, __dst);
        if (v1)
          goto LABEL_123;
        if (v105 < v104)
          goto LABEL_147;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v103 = sub_227E157FC((uint64_t)v103);
        if (v102 >= *((_QWORD *)v103 + 2))
          goto LABEL_148;
        v106 = &v103[16 * v102 + 32];
        *(_QWORD *)v106 = v104;
        *((_QWORD *)v106 + 1) = v105;
        v107 = *((_QWORD *)v103 + 2);
        if (v51 > v107)
          goto LABEL_149;
        memmove(&v103[16 * v51 + 16], &v103[16 * v51 + 32], 16 * (v107 - v51));
        v100 = v103;
        *((_QWORD *)v103 + 2) = v107 - 1;
        v51 = v107 - 1;
        if (v107 <= 2)
          goto LABEL_123;
      }
    }
    v111 = MEMORY[0x24BEE4AF8];
  }
  else
  {
    v7 = v5 >> 1;
    v8 = sub_227E600EC();
    *(_QWORD *)(v8 + 16) = v7;
    v111 = v8;
    __dst = (uint64_t *)(v8 + 32);
  }
  v10 = 0;
  v11 = *a1;
  v109 = *a1 - 16;
  v110 = *a1 + 40;
  v12 = (char *)MEMORY[0x24BEE4AF8];
  v112 = v6;
  v113 = v3;
  v114 = v11;
  while (1)
  {
    v13 = v10++;
    if (v10 >= v3)
      goto LABEL_36;
    v14 = *(_QWORD *)(v11 + 16 * v10);
    v15 = 100 * v14;
    if ((unsigned __int128)(v14 * (__int128)100) >> 64 != (100 * v14) >> 63)
      goto LABEL_151;
    v16 = *(_QWORD *)(v11 + 16 * v10 + 8);
    v65 = __OFADD__(v15, v16);
    v17 = v15 + v16;
    if (v65)
      goto LABEL_152;
    v18 = (uint64_t *)(v11 + 16 * v13);
    v19 = 100 * *v18;
    if ((unsigned __int128)(*v18 * (__int128)100) >> 64 != v19 >> 63)
      goto LABEL_153;
    v20 = v18[1];
    v65 = __OFADD__(v19, v20);
    v21 = v19 + v20;
    if (v65)
      goto LABEL_154;
    v10 = v13 + 2;
    if (v13 + 2 >= v3)
      goto LABEL_27;
    v22 = (_QWORD *)(v110 + 16 * v13);
    do
    {
      v23 = *(v22 - 1);
      v24 = 100 * v23;
      if ((unsigned __int128)(v23 * (__int128)100) >> 64 != (100 * v23) >> 63)
        goto LABEL_132;
      v25 = *v22;
      v65 = __OFADD__(v24, *v22);
      v26 = v24 + *v22;
      if (v65)
      {
LABEL_133:
        __break(1u);
LABEL_134:
        __break(1u);
LABEL_135:
        __break(1u);
LABEL_136:
        __break(1u);
LABEL_137:
        __break(1u);
LABEL_138:
        __break(1u);
LABEL_139:
        __break(1u);
LABEL_140:
        __break(1u);
LABEL_141:
        __break(1u);
LABEL_142:
        __break(1u);
LABEL_143:
        __break(1u);
LABEL_144:
        __break(1u);
LABEL_145:
        __break(1u);
LABEL_146:
        __break(1u);
LABEL_147:
        __break(1u);
LABEL_148:
        __break(1u);
LABEL_149:
        __break(1u);
LABEL_150:
        __break(1u);
LABEL_151:
        __break(1u);
LABEL_152:
        __break(1u);
LABEL_153:
        __break(1u);
LABEL_154:
        __break(1u);
LABEL_155:
        __break(1u);
LABEL_156:
        __break(1u);
LABEL_157:
        __break(1u);
LABEL_158:
        __break(1u);
        goto LABEL_159;
      }
      v27 = 100 * v14;
      v65 = __OFADD__(v27, v16);
      v28 = v27 + v16;
      if (v65)
        goto LABEL_134;
      if (v17 < v21 == v26 >= v28)
        goto LABEL_27;
      ++v10;
      v22 += 2;
      v16 = v25;
      v14 = v23;
    }
    while (v3 != v10);
    v10 = v3;
LABEL_27:
    if (v17 < v21)
      break;
LABEL_36:
    if (v10 < v3)
    {
      if (__OFSUB__(v10, v13))
        goto LABEL_155;
      if (v10 - v13 < v6)
      {
        v34 = v13 + v6;
        if (__OFADD__(v13, v6))
          goto LABEL_157;
        if (v34 >= v3)
          v34 = v3;
        if (v34 < v13)
          goto LABEL_158;
        if (v10 != v34)
        {
          v35 = (uint64_t *)(v109 + 16 * v10);
          do
          {
            v36 = *(_OWORD *)(v11 + 16 * v10);
            v37 = *(_QWORD *)(v11 + 16 * v10);
            v38 = 100 * v37;
            v39 = (unsigned __int128)(v37 * (__int128)100) >> 64 != (100 * v37) >> 63;
            v65 = __OFADD__(v38, *((_QWORD *)&v36 + 1));
            v40 = v38 + *((_QWORD *)&v36 + 1);
            v41 = v65;
            v42 = v13;
            v43 = v35;
            do
            {
              if (v39)
              {
                __break(1u);
LABEL_125:
                __break(1u);
LABEL_126:
                __break(1u);
LABEL_127:
                __break(1u);
LABEL_128:
                __break(1u);
LABEL_129:
                __break(1u);
LABEL_130:
                __break(1u);
LABEL_131:
                __break(1u);
LABEL_132:
                __break(1u);
                goto LABEL_133;
              }
              if ((v41 & 1) != 0)
                goto LABEL_125;
              v44 = 100 * *v43;
              if ((unsigned __int128)(*v43 * (__int128)100) >> 64 != v44 >> 63)
                goto LABEL_126;
              v45 = v43[1];
              v65 = __OFADD__(v44, v45);
              v46 = v44 + v45;
              if (v65)
                goto LABEL_127;
              if (v40 >= v46)
                break;
              if (!v11)
                goto LABEL_160;
              v47 = v43 + 2;
              v48 = *(_OWORD *)v43;
              *(_OWORD *)v43 = v36;
              v43 -= 2;
              *v47 = v48;
              ++v42;
            }
            while (v10 != v42);
            ++v10;
            v35 += 2;
          }
          while (v10 != v34);
          v10 = v34;
        }
      }
    }
    if (v10 < v13)
      goto LABEL_150;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v12 = sub_227E15378(0, *((_QWORD *)v12 + 2) + 1, 1, v12);
    v50 = *((_QWORD *)v12 + 2);
    v49 = *((_QWORD *)v12 + 3);
    v51 = v50 + 1;
    v11 = v114;
    if (v50 >= v49 >> 1)
    {
      v99 = sub_227E15378((char *)(v49 > 1), v50 + 1, 1, v12);
      v11 = v114;
      v12 = v99;
    }
    *((_QWORD *)v12 + 2) = v51;
    v52 = v12 + 32;
    v53 = &v12[16 * v50 + 32];
    *(_QWORD *)v53 = v13;
    *((_QWORD *)v53 + 1) = v10;
    if (v50)
    {
      while (1)
      {
        v54 = v51 - 1;
        if (v51 >= 4)
        {
          v59 = &v52[16 * v51];
          v60 = *((_QWORD *)v59 - 8);
          v61 = *((_QWORD *)v59 - 7);
          v65 = __OFSUB__(v61, v60);
          v62 = v61 - v60;
          if (v65)
            goto LABEL_135;
          v64 = *((_QWORD *)v59 - 6);
          v63 = *((_QWORD *)v59 - 5);
          v65 = __OFSUB__(v63, v64);
          v57 = v63 - v64;
          v58 = v65;
          if (v65)
            goto LABEL_136;
          v66 = v51 - 2;
          v67 = &v52[16 * v51 - 32];
          v69 = *(_QWORD *)v67;
          v68 = *((_QWORD *)v67 + 1);
          v65 = __OFSUB__(v68, v69);
          v70 = v68 - v69;
          if (v65)
            goto LABEL_138;
          v65 = __OFADD__(v57, v70);
          v71 = v57 + v70;
          if (v65)
            goto LABEL_141;
          if (v71 >= v62)
          {
            v89 = &v52[16 * v54];
            v91 = *(_QWORD *)v89;
            v90 = *((_QWORD *)v89 + 1);
            v65 = __OFSUB__(v90, v91);
            v92 = v90 - v91;
            if (v65)
              goto LABEL_145;
            v82 = v57 < v92;
            goto LABEL_96;
          }
        }
        else
        {
          if (v51 != 3)
          {
            v83 = *((_QWORD *)v12 + 4);
            v84 = *((_QWORD *)v12 + 5);
            v65 = __OFSUB__(v84, v83);
            v76 = v84 - v83;
            v77 = v65;
            goto LABEL_90;
          }
          v56 = *((_QWORD *)v12 + 4);
          v55 = *((_QWORD *)v12 + 5);
          v65 = __OFSUB__(v55, v56);
          v57 = v55 - v56;
          v58 = v65;
        }
        if ((v58 & 1) != 0)
          goto LABEL_137;
        v66 = v51 - 2;
        v72 = &v52[16 * v51 - 32];
        v74 = *(_QWORD *)v72;
        v73 = *((_QWORD *)v72 + 1);
        v75 = __OFSUB__(v73, v74);
        v76 = v73 - v74;
        v77 = v75;
        if (v75)
          goto LABEL_140;
        v78 = &v52[16 * v54];
        v80 = *(_QWORD *)v78;
        v79 = *((_QWORD *)v78 + 1);
        v65 = __OFSUB__(v79, v80);
        v81 = v79 - v80;
        if (v65)
          goto LABEL_143;
        if (__OFADD__(v76, v81))
          goto LABEL_144;
        if (v76 + v81 >= v57)
        {
          v82 = v57 < v81;
LABEL_96:
          if (v82)
            v54 = v66;
          goto LABEL_98;
        }
LABEL_90:
        if ((v77 & 1) != 0)
          goto LABEL_139;
        v85 = &v52[16 * v54];
        v87 = *(_QWORD *)v85;
        v86 = *((_QWORD *)v85 + 1);
        v65 = __OFSUB__(v86, v87);
        v88 = v86 - v87;
        if (v65)
          goto LABEL_142;
        if (v88 < v76)
          goto LABEL_107;
LABEL_98:
        v93 = v54 - 1;
        if (v54 - 1 >= v51)
          goto LABEL_128;
        if (!v11)
          goto LABEL_161;
        v94 = &v52[16 * v93];
        v95 = *(_QWORD *)v94;
        v96 = &v52[16 * v54];
        v97 = *((_QWORD *)v96 + 1);
        sub_227DFADF4((uint64_t *)(v11 + 16 * *(_QWORD *)v94), (uint64_t *)(v11 + 16 * *(_QWORD *)v96), v11 + 16 * v97, __dst);
        if (v1)
          goto LABEL_123;
        if (v97 < v95)
          goto LABEL_129;
        if (v54 > *((_QWORD *)v12 + 2))
          goto LABEL_130;
        *(_QWORD *)v94 = v95;
        *(_QWORD *)&v52[16 * v93 + 8] = v97;
        v98 = *((_QWORD *)v12 + 2);
        if (v54 >= v98)
          goto LABEL_131;
        v51 = v98 - 1;
        memmove(&v52[16 * v54], v96 + 16, 16 * (v98 - 1 - v54));
        *((_QWORD *)v12 + 2) = v98 - 1;
        v11 = v114;
        if (v98 <= 2)
          goto LABEL_107;
      }
    }
    v51 = 1;
LABEL_107:
    v6 = v112;
    v3 = v113;
    if (v10 >= v113)
    {
      v9 = v111;
      goto LABEL_112;
    }
  }
  if (v10 >= v13)
  {
    if (v13 < v10)
    {
      v29 = (__int128 *)(v109 + 16 * v10);
      v30 = v10;
      v31 = v13;
      v32 = (__int128 *)(v11 + 16 * v13);
      while (1)
      {
        if (v31 != --v30)
        {
          if (!v11)
            goto LABEL_162;
          v33 = *v32;
          *v32 = *v29;
          *v29 = v33;
        }
        ++v31;
        --v29;
        ++v32;
        if (v31 >= v30)
          goto LABEL_36;
      }
    }
    goto LABEL_36;
  }
LABEL_159:
  __break(1u);
LABEL_160:
  __break(1u);
LABEL_161:
  __break(1u);
LABEL_162:
  __break(1u);
LABEL_163:
  __break(1u);
LABEL_164:
  result = sub_227E60554();
  __break(1u);
  return result;
}

uint64_t sub_227DFA040(char **a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, char *, uint64_t);
  char *v30;
  char *v31;
  char *v32;
  void (*v33)(char *, uint64_t);
  char *v34;
  char *v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char **v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  char **v63;
  void (*v64)(char *, char *, uint64_t);
  char *v65;
  char *v66;
  void (*v67)(char *, uint64_t);
  char *v68;
  char *v69;
  void (*v70)(char *, char *, uint64_t);
  char isUniquelyReferenced_nonNull_native;
  unint64_t v72;
  unint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  BOOL v88;
  unint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  BOOL v98;
  uint64_t v99;
  char v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  BOOL v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  unint64_t v116;
  char *v117;
  char *v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  unint64_t v123;
  char *v124;
  unint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  unint64_t v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  uint64_t v134;
  char *v135;
  uint64_t v136;
  unint64_t v137;
  uint64_t v138;
  char *v139;
  uint64_t v140;
  void (*v141)(char *, char *, uint64_t);
  char *v142;
  char *v143;
  uint64_t v144;
  char **v145;
  char *v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;

  v3 = sub_227E5F27C();
  v149 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x24BDAC7A8](v3, v4);
  v135 = (char *)&v131 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v5, v7);
  v146 = (char *)&v131 - v9;
  v11 = MEMORY[0x24BDAC7A8](v8, v10);
  v143 = (char *)&v131 - v12;
  MEMORY[0x24BDAC7A8](v11, v13);
  v142 = (char *)&v131 - v14;
  v15 = (uint64_t)a1[1];
  result = sub_227E60668();
  if (result >= v15)
  {
    if (v15 < 0)
      goto LABEL_141;
    if (v15)
      return sub_227DFAB7C(0, v15, 1, a1);
    return result;
  }
  if (v15 >= 0)
    v17 = v15;
  else
    v17 = v15 + 1;
  if (v15 < -1)
    goto LABEL_149;
  v145 = a1;
  v132 = result;
  v138 = v1;
  if (v15 < 2)
  {
    v21 = (char *)MEMORY[0x24BEE4AF8];
    v137 = MEMORY[0x24BEE4AF8]
         + ((*(unsigned __int8 *)(v149 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v149 + 80));
    v131 = MEMORY[0x24BEE4AF8];
    if (v15 != 1)
    {
      v23 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
LABEL_107:
      if (v23 >= 2)
      {
        v124 = *v145;
        do
        {
          v125 = v23 - 2;
          if (v23 < 2)
            goto LABEL_136;
          if (!v124)
            goto LABEL_148;
          v126 = *(_QWORD *)&v21[16 * v125 + 32];
          v127 = *(_QWORD *)&v21[16 * v23 + 24];
          v128 = v138;
          sub_227DFB104((unint64_t)&v124[*(_QWORD *)(v149 + 72) * v126], (unint64_t)&v124[*(_QWORD *)(v149 + 72) * *(_QWORD *)&v21[16 * v23 + 16]], (unint64_t)&v124[*(_QWORD *)(v149 + 72) * v127], v137);
          v138 = v128;
          if (v128)
            break;
          if (v127 < v126)
            goto LABEL_137;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v21 = sub_227E157FC((uint64_t)v21);
          if (v125 >= *((_QWORD *)v21 + 2))
            goto LABEL_138;
          v129 = &v21[16 * v125 + 32];
          *(_QWORD *)v129 = v126;
          *((_QWORD *)v129 + 1) = v127;
          v130 = *((_QWORD *)v21 + 2);
          if (v23 > v130)
            goto LABEL_139;
          memmove(&v21[16 * v23 + 16], &v21[16 * v23 + 32], 16 * (v130 - v23));
          *((_QWORD *)v21 + 2) = v130 - 1;
          v23 = v130 - 1;
        }
        while (v130 > 2);
      }
LABEL_118:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v131 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    v18 = v17 >> 1;
    v19 = sub_227E600EC();
    *(_QWORD *)(v19 + 16) = v18;
    v20 = *(unsigned __int8 *)(v149 + 80);
    v131 = v19;
    v137 = v19 + ((v20 + 32) & ~v20);
  }
  v22 = 0;
  v21 = (char *)MEMORY[0x24BEE4AF8];
  while (1)
  {
    v24 = v22;
    v25 = v22 + 1;
    v136 = v22;
    if (v22 + 1 >= v15)
    {
      v36 = v22 + 1;
      v45 = v138;
      goto LABEL_58;
    }
    v26 = *v145;
    v147 = v15;
    v27 = v149;
    v28 = *(_QWORD *)(v149 + 72);
    v29 = *(void (**)(_QWORD, _QWORD, _QWORD))(v149 + 16);
    v30 = v142;
    v29(v142, &v26[v28 * v25], v3);
    v31 = &v26[v28 * v24];
    v32 = v143;
    v29(v143, v31, v3);
    v144 = sub_227D51624((unint64_t *)&unk_253F391B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE948]);
    LODWORD(v141) = sub_227E5FF60();
    v33 = *(void (**)(_QWORD, _QWORD))(v27 + 8);
    v34 = v32;
    v24 = v136;
    v33(v34, v3);
    v33(v30, v3);
    v35 = v26;
    v36 = v24 + 2;
    v139 = v35;
    v148 = v28;
    if (v24 + 2 >= v147)
    {
      v45 = v138;
      v44 = v147;
      v43 = v28;
      if ((v141 & 1) == 0)
        break;
    }
    else
    {
      v133 = v21;
      v140 = v28 * v25;
      v37 = v35;
      v38 = v28 * v36;
      do
      {
        v39 = v36;
        v40 = v142;
        v29(v142, &v37[v38], v3);
        v41 = v143;
        v29(v143, &v37[v140], v3);
        v42 = sub_227E5FF60();
        v33(v41, v3);
        v33(v40, v3);
        if (((v141 ^ v42) & 1) != 0)
        {
          v45 = v138;
          v21 = v133;
          v36 = v39;
          v24 = v136;
          v44 = v147;
          v43 = v148;
          if ((v141 & 1) == 0)
            goto LABEL_38;
          goto LABEL_26;
        }
        v36 = v39 + 1;
        v43 = v148;
        v37 += v148;
      }
      while (v147 != v39 + 1);
      v44 = v147;
      v36 = v147;
      v45 = v138;
      v21 = v133;
      v24 = v136;
      if ((v141 & 1) == 0)
        break;
    }
LABEL_26:
    if (v36 < v24)
      goto LABEL_142;
    if (v24 >= v36)
      break;
    v133 = v21;
    v46 = 0;
    v47 = v43 * (v36 - 1);
    v48 = v36 * v43;
    v49 = v24;
    v50 = v24 * v43;
    v51 = v145;
    v144 = v36;
    do
    {
      if (v49 != v36 + v46 - 1)
      {
        if (!v139)
          goto LABEL_147;
        v52 = v45;
        v53 = &v139[v50];
        v54 = &v139[v47];
        v141 = *(char **)(v149 + 32);
        ((void (*)(char *, char *, uint64_t))v141)(v135, &v139[v50], v3);
        if (v50 < v47 || v53 >= &v139[v48])
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (v50 != v47)
        {
          swift_arrayInitWithTakeBackToFront();
        }
        ((void (*)(char *, char *, uint64_t))v141)(v54, v135, v3);
        v45 = v52;
        v36 = v144;
        v51 = v145;
        v43 = v148;
      }
      ++v49;
      --v46;
      v47 -= v43;
      v48 -= v43;
      v50 += v43;
    }
    while (v49 < v36 + v46);
    v21 = v133;
    v24 = v136;
    v44 = v147;
    if (v36 < v147)
      goto LABEL_41;
LABEL_58:
    if (v36 < v24)
      goto LABEL_135;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v138 = v45;
    v144 = v36;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      v21 = sub_227E15378(0, *((_QWORD *)v21 + 2) + 1, 1, v21);
    v73 = *((_QWORD *)v21 + 2);
    v72 = *((_QWORD *)v21 + 3);
    v23 = v73 + 1;
    if (v73 >= v72 >> 1)
      v21 = sub_227E15378((char *)(v72 > 1), v73 + 1, 1, v21);
    *((_QWORD *)v21 + 2) = v23;
    v74 = v21 + 32;
    v75 = &v21[16 * v73 + 32];
    v76 = v144;
    *(_QWORD *)v75 = v24;
    *((_QWORD *)v75 + 1) = v76;
    if (v73)
    {
      while (1)
      {
        v77 = v23 - 1;
        if (v23 >= 4)
        {
          v82 = &v74[16 * v23];
          v83 = *((_QWORD *)v82 - 8);
          v84 = *((_QWORD *)v82 - 7);
          v88 = __OFSUB__(v84, v83);
          v85 = v84 - v83;
          if (v88)
            goto LABEL_124;
          v87 = *((_QWORD *)v82 - 6);
          v86 = *((_QWORD *)v82 - 5);
          v88 = __OFSUB__(v86, v87);
          v80 = v86 - v87;
          v81 = v88;
          if (v88)
            goto LABEL_125;
          v89 = v23 - 2;
          v90 = &v74[16 * v23 - 32];
          v92 = *(_QWORD *)v90;
          v91 = *((_QWORD *)v90 + 1);
          v88 = __OFSUB__(v91, v92);
          v93 = v91 - v92;
          if (v88)
            goto LABEL_127;
          v88 = __OFADD__(v80, v93);
          v94 = v80 + v93;
          if (v88)
            goto LABEL_130;
          if (v94 >= v85)
          {
            v112 = &v74[16 * v77];
            v114 = *(_QWORD *)v112;
            v113 = *((_QWORD *)v112 + 1);
            v88 = __OFSUB__(v113, v114);
            v115 = v113 - v114;
            if (v88)
              goto LABEL_134;
            v105 = v80 < v115;
            goto LABEL_95;
          }
        }
        else
        {
          if (v23 != 3)
          {
            v106 = *((_QWORD *)v21 + 4);
            v107 = *((_QWORD *)v21 + 5);
            v88 = __OFSUB__(v107, v106);
            v99 = v107 - v106;
            v100 = v88;
            goto LABEL_89;
          }
          v79 = *((_QWORD *)v21 + 4);
          v78 = *((_QWORD *)v21 + 5);
          v88 = __OFSUB__(v78, v79);
          v80 = v78 - v79;
          v81 = v88;
        }
        if ((v81 & 1) != 0)
          goto LABEL_126;
        v89 = v23 - 2;
        v95 = &v74[16 * v23 - 32];
        v97 = *(_QWORD *)v95;
        v96 = *((_QWORD *)v95 + 1);
        v98 = __OFSUB__(v96, v97);
        v99 = v96 - v97;
        v100 = v98;
        if (v98)
          goto LABEL_129;
        v101 = &v74[16 * v77];
        v103 = *(_QWORD *)v101;
        v102 = *((_QWORD *)v101 + 1);
        v88 = __OFSUB__(v102, v103);
        v104 = v102 - v103;
        if (v88)
          goto LABEL_132;
        if (__OFADD__(v99, v104))
          goto LABEL_133;
        if (v99 + v104 >= v80)
        {
          v105 = v80 < v104;
LABEL_95:
          if (v105)
            v77 = v89;
          goto LABEL_97;
        }
LABEL_89:
        if ((v100 & 1) != 0)
          goto LABEL_128;
        v108 = &v74[16 * v77];
        v110 = *(_QWORD *)v108;
        v109 = *((_QWORD *)v108 + 1);
        v88 = __OFSUB__(v109, v110);
        v111 = v109 - v110;
        if (v88)
          goto LABEL_131;
        if (v111 < v99)
          goto LABEL_14;
LABEL_97:
        v116 = v77 - 1;
        if (v77 - 1 >= v23)
        {
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
          goto LABEL_144;
        }
        if (!*v145)
          goto LABEL_146;
        v117 = v21;
        v118 = &v74[16 * v116];
        v119 = *(_QWORD *)v118;
        v120 = &v74[16 * v77];
        v121 = *((_QWORD *)v120 + 1);
        v122 = v138;
        sub_227DFB104((unint64_t)&(*v145)[*(_QWORD *)(v149 + 72) * *(_QWORD *)v118], (unint64_t)&(*v145)[*(_QWORD *)(v149 + 72) * *(_QWORD *)v120], (unint64_t)&(*v145)[*(_QWORD *)(v149 + 72) * v121], v137);
        v138 = v122;
        if (v122)
          goto LABEL_118;
        if (v121 < v119)
          goto LABEL_121;
        if (v77 > *((_QWORD *)v117 + 2))
          goto LABEL_122;
        *(_QWORD *)v118 = v119;
        *(_QWORD *)&v74[16 * v116 + 8] = v121;
        v123 = *((_QWORD *)v117 + 2);
        if (v77 >= v123)
          goto LABEL_123;
        v21 = v117;
        v23 = v123 - 1;
        memmove(&v74[16 * v77], v120 + 16, 16 * (v123 - 1 - v77));
        *((_QWORD *)v117 + 2) = v123 - 1;
        if (v123 <= 2)
          goto LABEL_14;
      }
    }
    v23 = 1;
LABEL_14:
    v15 = (uint64_t)v145[1];
    v22 = v144;
    if (v144 >= v15)
      goto LABEL_107;
  }
LABEL_38:
  v51 = v145;
  if (v36 >= v44)
    goto LABEL_58;
LABEL_41:
  if (__OFSUB__(v36, v24))
    goto LABEL_140;
  if (v36 - v24 >= v132)
    goto LABEL_58;
  if (__OFADD__(v24, v132))
    goto LABEL_143;
  if (v24 + v132 >= v44)
    v55 = v44;
  else
    v55 = v24 + v132;
  if (v55 >= v24)
  {
    if (v36 != v55)
    {
      v133 = v21;
      v134 = v55;
      v56 = *(_QWORD *)(v149 + 72);
      v57 = *(char **)(v149 + 16);
      v138 = v45;
      v139 = v57;
      v58 = v56 * (v36 - 1);
      v140 = v56;
      v148 = v36 * v56;
      do
      {
        v60 = 0;
        v144 = v36;
        v141 = (char *)v58;
        while (1)
        {
          v147 = v24;
          v61 = *v51;
          v62 = v142;
          v63 = v51;
          v64 = (void (*)(_QWORD, _QWORD, _QWORD))v139;
          ((void (*)(char *, char *, uint64_t))v139)(v142, &(*v51)[v148 + v60], v3);
          v65 = &v61[v58 + v60];
          v66 = v143;
          v64(v143, v65, v3);
          sub_227D51624((unint64_t *)&unk_253F391B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE948]);
          LOBYTE(v61) = sub_227E5FF60();
          v67 = *(void (**)(_QWORD, _QWORD))(v149 + 8);
          v67(v66, v3);
          v67(v62, v3);
          if ((v61 & 1) == 0)
            break;
          v68 = *v63;
          if (!*v63)
            goto LABEL_145;
          v58 = (uint64_t)v141;
          v69 = &v141[(_QWORD)v68 + v60];
          v70 = *(void (**)(_QWORD, _QWORD, _QWORD))(v149 + 32);
          v70(v146, &v68[v148 + v60], v3);
          swift_arrayInitWithTakeFrontToBack();
          v70(v69, v146, v3);
          v60 -= v140;
          v24 = v147 + 1;
          v59 = v144;
          v51 = v145;
          if (v144 == v147 + 1)
            goto LABEL_51;
        }
        v59 = v144;
        v51 = v63;
        v58 = (uint64_t)v141;
LABEL_51:
        v36 = v59 + 1;
        v58 += v140;
        v148 += v140;
        v24 = v136;
      }
      while (v36 != v134);
      v36 = v134;
      v45 = v138;
      v21 = v133;
    }
    goto LABEL_58;
  }
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  __break(1u);
LABEL_148:
  __break(1u);
LABEL_149:
  result = sub_227E60554();
  __break(1u);
  return result;
}

uint64_t sub_227DFAAB8(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  BOOL v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _OWORD *v18;
  __int128 v19;

  if (a3 != a2)
  {
    v4 = *a4;
    v5 = *a4 + 16 * a3 - 16;
LABEL_5:
    v6 = *(_OWORD *)(v4 + 16 * a3);
    v7 = *(_QWORD *)(v4 + 16 * a3);
    v8 = 100 * v7;
    v9 = (unsigned __int128)(v7 * (__int128)100) >> 64 != (100 * v7) >> 63;
    v10 = __OFADD__(v8, *((_QWORD *)&v6 + 1));
    v11 = v8 + *((_QWORD *)&v6 + 1);
    v12 = v10;
    v13 = result;
    v14 = (uint64_t *)v5;
    while (!v9)
    {
      if ((v12 & 1) != 0)
        goto LABEL_18;
      v15 = 100 * *v14;
      if ((unsigned __int128)(*v14 * (__int128)100) >> 64 != v15 >> 63)
        goto LABEL_19;
      v16 = v14[1];
      v10 = __OFADD__(v15, v16);
      v17 = v15 + v16;
      if (v10)
        goto LABEL_20;
      if (v11 < v17)
      {
        if (!v4)
          goto LABEL_21;
        v18 = v14 + 2;
        v19 = *(_OWORD *)v14;
        *(_OWORD *)v14 = v6;
        v14 -= 2;
        *v18 = v19;
        if (a3 != ++v13)
          continue;
      }
      ++a3;
      v5 += 16;
      if (a3 == a2)
        return result;
      goto LABEL_5;
    }
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
  }
  return result;
}

uint64_t sub_227DFAB7C(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  void (*v22)(char *, uint64_t, uint64_t);
  char *v23;
  void (*v24)(char *, uint64_t);
  char *v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t, uint64_t);
  _QWORD *v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;

  v31 = a1;
  v7 = sub_227E5F27C();
  v39 = *(_QWORD **)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7, v8);
  v38 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v9, v11);
  v35 = (char *)&v29 - v13;
  result = MEMORY[0x24BDAC7A8](v12, v14);
  v34 = (char *)&v29 - v16;
  v37 = a3;
  v30 = a2;
  if (a3 != a2)
  {
    v17 = v39[9];
    v32 = (void (*)(char *, uint64_t, uint64_t))v39[2];
    v33 = a4;
    v41 = v17 * (v37 - 1);
    v36 = v17;
    v40 = v17 * v37;
LABEL_5:
    v18 = 0;
    v19 = v31;
    while (1)
    {
      v20 = *a4;
      v21 = v34;
      v22 = v32;
      v32(v34, v40 + v18 + *a4, v7);
      v23 = v35;
      v22(v35, v41 + v18 + v20, v7);
      sub_227D51624((unint64_t *)&unk_253F391B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE948]);
      LOBYTE(v20) = sub_227E5FF60();
      v24 = (void (*)(char *, uint64_t))v39[1];
      v25 = v23;
      a4 = v33;
      v24(v25, v7);
      result = ((uint64_t (*)(char *, uint64_t))v24)(v21, v7);
      if ((v20 & 1) == 0)
      {
LABEL_4:
        v41 += v36;
        v40 += v36;
        if (++v37 == v30)
          return result;
        goto LABEL_5;
      }
      v26 = *a4;
      if (!*a4)
        break;
      v27 = v26 + v41 + v18;
      v28 = (void (*)(char *, uint64_t, uint64_t))v39[4];
      v28(v38, v26 + v40 + v18, v7);
      swift_arrayInitWithTakeFrontToBack();
      result = ((uint64_t (*)(uint64_t, char *, uint64_t))v28)(v27, v38, v7);
      v18 -= v36;
      if (v37 == ++v19)
        goto LABEL_4;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_227DFADF4(uint64_t *__src, uint64_t *a2, unint64_t a3, uint64_t *__dst)
{
  uint64_t *v4;
  uint64_t *v6;
  uint64_t *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t *v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t result;
  uint64_t *v36;
  uint64_t *v37;
  uint64_t *v38;

  v4 = __dst;
  v6 = a2;
  v7 = __src;
  v8 = (char *)a2 - (char *)__src;
  v9 = (char *)a2 - (char *)__src + 15;
  if ((char *)a2 - (char *)__src >= 0)
    v9 = (char *)a2 - (char *)__src;
  v10 = v9 >> 4;
  v11 = a3 - (_QWORD)a2;
  v12 = a3 - (_QWORD)a2 + 15;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v12 = a3 - (_QWORD)a2;
  v13 = v12 >> 4;
  v38 = __src;
  v37 = __dst;
  if (v10 >= v12 >> 4)
  {
    if (v11 >= -15)
    {
      if (__dst != a2 || &a2[2 * v13] <= __dst)
        memmove(__dst, a2, 16 * v13);
      v23 = &v4[2 * v13];
      v36 = v23;
      v38 = v6;
      if (v7 < v6 && v11 >= 16)
      {
        v24 = (uint64_t *)(a3 - 16);
        while (1)
        {
          v25 = *(v23 - 2);
          v26 = 100 * v25;
          if ((unsigned __int128)(v25 * (__int128)100) >> 64 != (100 * v25) >> 63)
            break;
          v27 = *(v23 - 1);
          v17 = __OFADD__(v26, v27);
          v28 = v26 + v27;
          if (v17)
            goto LABEL_52;
          v29 = v6 - 2;
          v30 = *(v6 - 2);
          v31 = 100 * v30;
          if ((unsigned __int128)(v30 * (__int128)100) >> 64 != (100 * v30) >> 63)
            goto LABEL_53;
          v32 = *(v6 - 1);
          v17 = __OFADD__(v31, v32);
          v33 = v31 + v32;
          if (v17)
            goto LABEL_54;
          v34 = v24 + 2;
          if (v28 >= v33)
          {
            v36 = v23 - 2;
            if (v34 < v23 || v24 >= v23 || v34 != v23)
              *(_OWORD *)v24 = *((_OWORD *)v23 - 1);
            v29 = v6;
            v23 -= 2;
            if (v6 <= v7)
              goto LABEL_50;
          }
          else
          {
            if (v34 != v6 || v24 >= v6)
              *(_OWORD *)v24 = *(_OWORD *)v29;
            v38 = v6 - 2;
            if (v29 <= v7)
              goto LABEL_50;
          }
          v24 -= 2;
          v6 = v29;
          if (v23 <= v4)
            goto LABEL_50;
        }
        __break(1u);
LABEL_52:
        __break(1u);
LABEL_53:
        __break(1u);
LABEL_54:
        __break(1u);
        goto LABEL_55;
      }
LABEL_50:
      sub_227E1547C((void **)&v38, (const void **)&v37, &v36);
      return 1;
    }
  }
  else if (v8 >= -15)
  {
    if (__dst != __src || &__src[2 * v10] <= __dst)
      memmove(__dst, __src, 16 * v10);
    v14 = &v4[2 * v10];
    v36 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 16)
    {
      while (1)
      {
        v15 = 100 * *v6;
        if ((unsigned __int128)(*v6 * (__int128)100) >> 64 != v15 >> 63)
          break;
        v16 = v6[1];
        v17 = __OFADD__(v15, v16);
        v18 = v15 + v16;
        if (v17)
          goto LABEL_56;
        v19 = 100 * *v4;
        if ((unsigned __int128)(*v4 * (__int128)100) >> 64 != v19 >> 63)
          goto LABEL_57;
        v20 = v4[1];
        v17 = __OFADD__(v19, v20);
        v21 = v19 + v20;
        if (v17)
          goto LABEL_58;
        if (v18 >= v21)
        {
          if (v7 != v4)
            *(_OWORD *)v7 = *(_OWORD *)v4;
          v4 += 2;
          v37 = v4;
          v22 = v6;
        }
        else
        {
          v22 = v6 + 2;
          if (v7 < v6 || v7 >= v22 || v7 != v6)
            *(_OWORD *)v7 = *(_OWORD *)v6;
        }
        v7 += 2;
        if (v4 < v14)
        {
          v6 = v22;
          if ((unint64_t)v22 < a3)
            continue;
        }
        v38 = v7;
        goto LABEL_50;
      }
LABEL_55:
      __break(1u);
LABEL_56:
      __break(1u);
LABEL_57:
      __break(1u);
LABEL_58:
      __break(1u);
      goto LABEL_59;
    }
    goto LABEL_50;
  }
LABEL_59:
  result = sub_227E605A8();
  __break(1u);
  return result;
}

uint64_t sub_227DFB104(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v21)(char *, unint64_t, uint64_t);
  unint64_t v22;
  char *v23;
  char *v24;
  char v25;
  void (*v26)(char *, uint64_t);
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v32;
  char *v33;
  void (*v34)(char *, unint64_t, uint64_t);
  unint64_t v35;
  uint64_t v36;
  char *v37;
  void (*v38)(char *, uint64_t);
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t result;
  uint64_t v44;
  void (*v45)(char *, unint64_t, uint64_t);
  _QWORD *v46;
  unint64_t v47;
  unint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  unint64_t v54;

  v8 = sub_227E5F27C();
  v9 = *(_QWORD **)(v8 - 8);
  v11 = MEMORY[0x24BDAC7A8](v8, v10);
  v50 = (char *)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11, v13);
  v49 = (char *)&v44 - v14;
  v51 = v9[9];
  if (!v51)
  {
    __break(1u);
LABEL_62:
    __break(1u);
LABEL_63:
    __break(1u);
    goto LABEL_64;
  }
  if (a2 - a1 == 0x8000000000000000 && v51 == -1)
    goto LABEL_62;
  v15 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v51 == -1)
    goto LABEL_63;
  v16 = (uint64_t)(a2 - a1) / v51;
  v54 = a1;
  v53 = a4;
  v17 = v15 / v51;
  if (v16 >= v15 / v51)
  {
    if ((v17 & 0x8000000000000000) == 0)
    {
      v19 = v17 * v51;
      if (a4 < a2 || a2 + v19 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      v30 = a4 + v19;
      v52 = a4 + v19;
      v54 = a2;
      if (v19 >= 1 && a1 < a2)
      {
        v32 = -v51;
        v45 = (void (*)(char *, unint64_t, uint64_t))v9[2];
        v46 = v9;
        v47 = a4;
        v48 = a1;
        do
        {
          v51 = a3 + v32;
          v33 = v49;
          v34 = v45;
          v45(v49, v30 + v32, v8);
          v35 = a2 + v32;
          v36 = v32;
          v37 = v50;
          v34(v50, v35, v8);
          sub_227D51624((unint64_t *)&unk_253F391B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE948]);
          LOBYTE(v34) = sub_227E5FF60();
          v38 = (void (*)(char *, uint64_t))v9[1];
          v38(v37, v8);
          v38(v33, v8);
          if ((v34 & 1) != 0)
          {
            v32 = v36;
            v39 = v51;
            if (a3 < a2 || v51 >= a2)
            {
              swift_arrayInitWithTakeFrontToBack();
              v9 = v46;
              v40 = v47;
              v41 = v48;
            }
            else
            {
              v9 = v46;
              v40 = v47;
              v41 = v48;
              if (a3 != a2)
                swift_arrayInitWithTakeBackToFront();
            }
            v54 += v32;
          }
          else
          {
            v42 = v52;
            v52 += v36;
            v32 = v36;
            v39 = v51;
            if (a3 < v42 || v51 >= v42)
            {
              swift_arrayInitWithTakeFrontToBack();
              v35 = a2;
              v9 = v46;
              v40 = v47;
              v41 = v48;
            }
            else
            {
              v9 = v46;
              v40 = v47;
              v41 = v48;
              if (a3 != v42)
                swift_arrayInitWithTakeBackToFront();
              v35 = a2;
            }
          }
          v30 = v52;
          if (v52 <= v40)
            break;
          a2 = v35;
          a3 = v39;
        }
        while (v35 > v41);
      }
      goto LABEL_60;
    }
  }
  else if ((v16 & 0x8000000000000000) == 0)
  {
    v18 = v16 * v51;
    if (a4 < a1 || a1 + v18 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    v48 = a4 + v18;
    v52 = a4 + v18;
    if (v18 >= 1 && a2 < a3)
    {
      v21 = (void (*)(char *, unint64_t, uint64_t))v9[2];
      do
      {
        v22 = a3;
        v23 = v49;
        v21(v49, a2, v8);
        v24 = v50;
        v21(v50, a4, v8);
        sub_227D51624((unint64_t *)&unk_253F391B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE948]);
        v25 = sub_227E5FF60();
        v26 = (void (*)(char *, uint64_t))v9[1];
        v26(v24, v8);
        v26(v23, v8);
        v27 = v54;
        if ((v25 & 1) != 0)
        {
          v28 = a2 + v51;
          if (v54 < a2 || v54 >= v28)
          {
            swift_arrayInitWithTakeFrontToBack();
            a3 = v22;
          }
          else
          {
            a3 = v22;
            if (v54 == a2)
              v27 = a2;
            else
              swift_arrayInitWithTakeBackToFront();
          }
        }
        else
        {
          v29 = v53 + v51;
          if (v54 < v53 || v54 >= v29)
          {
            swift_arrayInitWithTakeFrontToBack();
            a3 = v22;
          }
          else
          {
            a3 = v22;
            if (v54 != v53)
              swift_arrayInitWithTakeBackToFront();
          }
          v53 = v29;
          v28 = a2;
        }
        v54 = v27 + v51;
        a4 = v53;
        if (v53 >= v48)
          break;
        a2 = v28;
      }
      while (v28 < a3);
    }
LABEL_60:
    sub_227E155CC(&v54, &v53, (uint64_t *)&v52);
    return 1;
  }
LABEL_64:
  result = sub_227E605A8();
  __break(1u);
  return result;
}

uint64_t sub_227DFB658(_QWORD *a1, uint64_t a2, uint64_t a3, unsigned __int8 *a4, _QWORD *a5, void (*a6)(void), uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  _QWORD *v52;
  _QWORD *v53;
  uint64_t v54;
  void (*v55)(void);
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(__int128 *__return_ptr, uint64_t, uint64_t);
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  _QWORD *v70;
  id v71;
  void *v72;
  id v73;
  uint64_t v74;
  uint64_t v75;
  id v76;
  void *v77;
  id v78;
  uint64_t v79;
  void (*v80)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  void (*v85)(char *, uint64_t, uint64_t);
  char *v86;
  char *v87;
  uint64_t v88;
  int *v89;
  uint64_t v90;
  _QWORD *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  void (*v98)(uint64_t, uint64_t (*)(uint64_t *), uint64_t, uint64_t, uint64_t);
  uint64_t v99;
  uint64_t v100;
  _QWORD *v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  void (*v107)(char *, uint64_t);
  char *v109;
  int v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  void (*v114)(void);
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  _QWORD *v120;
  uint64_t v121;
  char *v122;
  uint64_t v123;
  char *v124;
  _QWORD *v125;
  uint64_t v126;
  uint64_t v127;
  _QWORD *v128;
  char *v129;
  uint64_t v130;
  __int128 v131;
  char v132;
  uint64_t v133;
  uint64_t v134;
  __int128 v135;

  v8 = v7;
  v115 = a7;
  v114 = a6;
  v120 = a5;
  v118 = a3;
  v128 = (_QWORD *)a2;
  v125 = a1;
  v10 = sub_227D68330((uint64_t *)&unk_253F39C20);
  v12 = MEMORY[0x24BDAC7A8](v10, v11);
  v122 = (char *)&v109 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12, v14);
  v127 = (uint64_t)&v109 - v15;
  v16 = sub_227D68330(&qword_253F391D0);
  v18 = MEMORY[0x24BDAC7A8](v16, v17);
  v121 = (uint64_t)&v109 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18, v20);
  v126 = (uint64_t)&v109 - v21;
  v22 = sub_227D68330(&qword_253F398D0);
  v24 = MEMORY[0x24BDAC7A8](v22, v23);
  v117 = (uint64_t)&v109 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = MEMORY[0x24BDAC7A8](v24, v26);
  v116 = (uint64_t)&v109 - v28;
  MEMORY[0x24BDAC7A8](v27, v29);
  v123 = (uint64_t)&v109 - v30;
  v113 = sub_227E5F300();
  v112 = *(_QWORD *)(v113 - 8);
  MEMORY[0x24BDAC7A8](v113, v31);
  v33 = (char *)&v109 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v119 = sub_227E5F27C();
  v130 = *(_QWORD *)(v119 - 8);
  v35 = MEMORY[0x24BDAC7A8](v119, v34);
  v109 = (char *)&v109 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = MEMORY[0x24BDAC7A8](v35, v37);
  v129 = (char *)&v109 - v39;
  MEMORY[0x24BDAC7A8](v38, v40);
  v42 = (char *)&v109 - v41;
  v43 = sub_227E6029C();
  MEMORY[0x24BDAC7A8](v43, v44);
  v45 = sub_227E5F978();
  MEMORY[0x24BDAC7A8](v45, v46);
  v47 = sub_227E602B4();
  v48 = *(_QWORD *)(v47 - 8);
  MEMORY[0x24BDAC7A8](v47, v49);
  v51 = (char *)&v109 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  v110 = *a4;
  v111 = *((_QWORD *)a4 + 1);
  v124 = (char *)sub_227D52DBC(0, (unint64_t *)&qword_253F3B040);
  *(_OWORD *)(v7 + 16) = 0u;
  *(_OWORD *)(v7 + 32) = 0u;
  *(_QWORD *)(v7 + 48) = 0;
  (*(void (**)(char *, _QWORD, uint64_t))(v48 + 104))(v51, *MEMORY[0x24BEE5758], v47);
  sub_227E5F960();
  *(_QWORD *)&v131 = MEMORY[0x24BEE4AF8];
  sub_227D51624((unint64_t *)&unk_253F3B030, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5688], MEMORY[0x24BEE5698]);
  sub_227D68330((uint64_t *)&unk_253F3B000);
  sub_227D515E4(&qword_253F3B010, (uint64_t *)&unk_253F3B000, MEMORY[0x24BEE12C8]);
  v52 = v128;
  sub_227E603E0();
  v53 = v125;
  *(_QWORD *)(v7 + 144) = sub_227E602E4();
  v54 = v115;
  v55 = v114;
  v114();
  sub_227E5F288();
  v124 = v42;
  sub_227E5F294();
  (*(void (**)(char *, uint64_t))(v112 + 8))(v33, v113);
  *(_BYTE *)(v7 + 96) = v110;
  *(_QWORD *)(v7 + 120) = v55;
  *(_QWORD *)(v7 + 128) = v54;
  v56 = v120;
  *(_QWORD *)(v7 + 104) = v111;
  *(_QWORD *)(v7 + 112) = v56;
  v57 = v53[3];
  v58 = v53[4];
  sub_227D572A4(v53, v57);
  v59 = *(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v58 + 8);
  swift_retain();
  v60 = v56;
  v59(&v131, v57, v58);
  *(_QWORD *)(v7 + 136) = *((_QWORD *)&v131 + 1);
  v120 = (_QWORD *)(v7 + 56);
  sub_227D572C8((uint64_t)v52, v7 + 56);
  v61 = v52[3];
  v62 = v52[4];
  sub_227D572A4(v52, v61);
  v63 = (*(uint64_t (**)(uint64_t, uint64_t))(v62 + 40))(v61, v62);
  v64 = v123;
  (*(void (**)(uint64_t))(*(_QWORD *)v63 + 184))(v63);
  swift_release();
  v65 = v118;
  *(_QWORD *)(v7 + OBJC_IVAR____TtC13BookDataStore23ReadingHistoryDataStore_transactionProvider) = v118;
  v66 = v64;
  v67 = v116;
  sub_227D5DF48(v64, v116, &qword_253F398D0);
  sub_227D68330(&qword_253F3AC38);
  swift_allocObject();
  v68 = v117;
  sub_227D5DF48(v67, v117, &qword_253F398D0);
  swift_unknownObjectRetain();
  v69 = sub_227D6FB68(v68);
  sub_227D5809C(v67, &qword_253F398D0);
  *(_QWORD *)(v8 + OBJC_IVAR____TtC13BookDataStore23ReadingHistoryDataStore_lastModelChange) = v69;
  type metadata accessor for ObservableTransaction();
  v70 = (_QWORD *)swift_allocObject();
  swift_getObjectType();
  swift_unknownObjectRetain();
  *(_QWORD *)(v8 + OBJC_IVAR____TtC13BookDataStore23ReadingHistoryDataStore_lastModelChangeObservableTransaction) = sub_227D5232C(0xD000000000000038, 0x8000000227E6C5B0, v65, v70);
  *(_BYTE *)(v8 + 152) = 0;
  v71 = *(id *)(v8 + 112);
  v72 = (void *)sub_227E5FF78();
  v73 = objc_msgSend(v71, sel_integerForKey_, v72);

  sub_227D6F29C((uint64_t)v73, (uint64_t *)&v131);
  if (v132 == 1)
  {
    v74 = v126;
    v75 = v119;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v130 + 56))(v126, 1, 1, v119);
  }
  else
  {
    v135 = v131;
    v74 = v126;
    sub_227E04D68(v126);
    v75 = v119;
  }
  v76 = *(id *)(v8 + 112);
  v77 = (void *)sub_227E5FF78();
  v78 = objc_msgSend(v76, sel_integerForKey_, v77);

  v79 = type metadata accessor for ReadingHistory.Streak(0);
  v80 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v79 - 8) + 56);
  v81 = v127;
  v80(v127, 1, 1, v79);
  v82 = v121;
  sub_227D5DF48(v74, v121, &qword_253F391D0);
  v83 = v75;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v130 + 48))(v82, 1, v75) == 1)
  {
    sub_227D5809C(v82, &qword_253F391D0);
  }
  else
  {
    sub_227D5809C(v81, (uint64_t *)&unk_253F39C20);
    v84 = v75;
    v85 = *(void (**)(char *, uint64_t, uint64_t))(v130 + 32);
    v86 = v109;
    v85(v109, v82, v84);
    v85((char *)v81, (uint64_t)v86, v84);
    v83 = v84;
    *(_QWORD *)(v81 + *(int *)(v79 + 20)) = v78;
    v80(v81, 0, 1, v79);
  }
  v87 = v122;
  sub_227D5D2D4(v124, v122);
  v88 = v8 + OBJC_IVAR____TtC13BookDataStore23ReadingHistoryDataStore__state;
  sub_227D5DFFC(v66, v8 + OBJC_IVAR____TtC13BookDataStore23ReadingHistoryDataStore__state, type metadata accessor for ReadingHistoryModel);
  v89 = (int *)type metadata accessor for ReadingHistoryDataStore.State(0);
  sub_227D5DF48(v81, v88 + v89[5], (uint64_t *)&unk_253F39C20);
  (*(void (**)(uint64_t, char *, uint64_t))(v130 + 16))(v88 + v89[6], v129, v83);
  sub_227D5DF48((uint64_t)v87, v88 + v89[7], (uint64_t *)&unk_253F39C20);
  v90 = *(_QWORD *)(v8 + OBJC_IVAR____TtC13BookDataStore23ReadingHistoryDataStore_lastModelChange)
      + *(_QWORD *)(**(_QWORD **)(v8 + OBJC_IVAR____TtC13BookDataStore23ReadingHistoryDataStore_lastModelChange) + 128);
  swift_beginAccess();
  *(_QWORD *)(v90 + 8) = &protocol witness table for ObservableTransaction;
  swift_unknownObjectWeakAssign();
  v91 = v125;
  v92 = v125[3];
  v93 = v125[4];
  sub_227D572A4(v125, v92);
  (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v93 + 16))(&v131, v92, v93);
  v94 = v133;
  v95 = v134;
  sub_227D572A4(&v131, v133);
  v96 = v83;
  v97 = swift_allocObject();
  swift_weakInit();
  v98 = *(void (**)(uint64_t, uint64_t (*)(uint64_t *), uint64_t, uint64_t, uint64_t))(v95 + 8);
  swift_retain();
  swift_retain();
  v98(v8, sub_227D7154C, v97, v94, v95);
  swift_release();
  swift_release_n();
  sub_227D58120((uint64_t)&v131);
  v99 = *(_QWORD *)(v8 + 80);
  v100 = *(_QWORD *)(v8 + 88);
  v101 = sub_227D572A4(v120, v99);
  v102 = *(_QWORD *)(v99 - 8);
  MEMORY[0x24BDAC7A8](v101, v101);
  v104 = (char *)&v109 - ((v103 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v102 + 16))(v104);
  (*(void (**)(uint64_t, uint64_t))(v100 + 40))(v99, v100);
  (*(void (**)(char *, uint64_t))(v102 + 8))(v104, v99);
  v105 = swift_allocObject();
  swift_weakInit();
  v106 = swift_retain();
  sub_227D625F0(v106, (uint64_t)sub_227D714E8, v105);
  swift_release();
  swift_release();
  swift_release();
  sub_227D5809C((uint64_t)v87, (uint64_t *)&unk_253F39C20);
  sub_227D5809C(v127, (uint64_t *)&unk_253F39C20);
  sub_227D5809C(v126, &qword_253F391D0);
  sub_227D5809C(v123, &qword_253F398D0);
  v107 = *(void (**)(char *, uint64_t))(v130 + 8);
  v107(v129, v96);
  v107(v124, v96);
  sub_227D58120((uint64_t)v128);
  sub_227D58120((uint64_t)v91);
  return v8;
}

uint64_t sub_227DFC124()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);

  v1 = sub_227E5F27C();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = (*(_QWORD *)(v2 + 64) + v3 + v4) & ~v3;
  swift_release();
  v6 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v6(v0 + v4, v1);
  v6(v0 + v5, v1);
  return swift_deallocObject();
}

void sub_227DFC1B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(sub_227E5F27C() - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  sub_227DF5548(*(_QWORD *)(v0 + 16), (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(v0 + ((v2 + 24) & ~v2)), (char *)(v0 + ((*(_QWORD *)(v1 + 64) + v2 + ((v2 + 24) & ~v2)) & ~v2)));
}

uint64_t sub_227DFC1FC()
{
  return swift_deallocObject();
}

uint64_t sub_227DFC20C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_227DFC230()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_227DFC25C()
{
  uint64_t v0;

  return sub_227DEFF14(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_227DFC264()
{
  return swift_deallocObject();
}

uint64_t sub_227DFC274()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_227E5F27C();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_227DFC2F4()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(sub_227E5F27C() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  return sub_227DF6428(*(_QWORD *)(v0 + 16), v0 + v2, *(_QWORD *)(v0 + ((*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_227DFC338()
{
  return swift_deallocObject();
}

uint64_t sub_227DFC348()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

uint64_t sub_227DFC374()
{
  uint64_t v0;

  return sub_227DF731C(*(_QWORD *)(v0 + 16));
}

uint64_t sub_227DFC37C()
{
  return swift_deallocObject();
}

uint64_t sub_227DFC390()
{
  return swift_deallocObject();
}

uint64_t sub_227DFC3A0()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

uint64_t sub_227DFC3CC()
{
  uint64_t v0;

  return sub_227DF83D8(*(uint64_t **)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_227DFC3D8()
{
  return swift_deallocObject();
}

uint64_t sub_227DFC3E8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_227DFC40C()
{
  uint64_t v0;

  return sub_227DF8798(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t sub_227DFC434()
{
  return swift_deallocObject();
}

uint64_t sub_227DFC444@<X0>(char *a1@<X8>)
{
  return sub_227DF8C60(a1);
}

uint64_t dispatch thunk of ReadingHistoryModelProvider.enableCloudSync.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of ReadingHistoryModelProvider.enableCloudSync.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of ReadingHistoryModelProvider.enableCloudSync.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of ReadingHistoryModelProvider.observable.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of ReadingHistoryModelProvider.sync(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of ReadingHistoryDataSourceReader.longestStreak.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of ReadingHistoryDataSourceReader.currentStreakLength.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of ReadingHistoryDataSourceReader.readingHistory(range:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

uint64_t dispatch thunk of ReadingHistoryDataSourceActions.clearData()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of ReadingHistoryDataSourceActions.clearToday()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of ReadingHistoryDataSourceActions.increment(date:by:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t dispatch thunk of ReadingHistoryDataSourceObservable.removeObserver(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t sub_227DFC4CC()
{
  return type metadata accessor for ReadingHistoryDataStore(0);
}

uint64_t method lookup function for ReadingHistoryDataStore()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ReadingHistoryDataStore.__allocating_init(goals:modelProvider:transactionProvider:config:userDefaults:currentDate:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 176))();
}

uint64_t getEnumTagSinglePayload for ReadingHistoryDataStore.Config(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && a1[16])
    return (*(_DWORD *)a1 + 255);
  v3 = *a1;
  v4 = v3 >= 2;
  v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for ReadingHistoryDataStore.Config(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)result = a2 - 255;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_BYTE *)result = a2 + 1;
  }
  return result;
}

uint64_t *sub_227DFC57C(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int (*v18)(char *, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  void (*v26)(char *, char *, uint64_t);
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v20 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_227D68330(&qword_253F3AF68);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = type metadata accessor for ReadingHistoryModel(0);
    v9 = *(int *)(v8 + 20);
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = sub_227D68330(&qword_253F3AF30);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
    *(uint64_t *)((char *)a1 + *(int *)(v8 + 24)) = *(uint64_t *)((char *)a2 + *(int *)(v8 + 24));
    v13 = a3[5];
    v14 = (char *)a1 + v13;
    v15 = (char *)a2 + v13;
    v16 = type metadata accessor for ReadingHistory.Streak(0);
    v17 = *(_QWORD *)(v16 - 8);
    v18 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48);
    swift_bridgeObjectRetain();
    if (v18(v15, 1, v16))
    {
      v19 = sub_227D68330((uint64_t *)&unk_253F39C20);
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
    else
    {
      v21 = sub_227E5F27C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v14, v15, v21);
      *(_QWORD *)&v14[*(int *)(v16 + 20)] = *(_QWORD *)&v15[*(int *)(v16 + 20)];
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
    }
    v22 = a3[6];
    v23 = (char *)a1 + v22;
    v24 = (char *)a2 + v22;
    v25 = sub_227E5F27C();
    v26 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16);
    v26(v23, v24, v25);
    v27 = a3[7];
    v28 = (char *)a1 + v27;
    v29 = (char *)a2 + v27;
    if (v18(v29, 1, v16))
    {
      v30 = sub_227D68330((uint64_t *)&unk_253F39C20);
      memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    }
    else
    {
      v26(v28, v29, v25);
      *(_QWORD *)&v28[*(int *)(v16 + 20)] = *(_QWORD *)&v29[*(int *)(v16 + 20)];
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v28, 0, 1, v16);
    }
  }
  return a1;
}

uint64_t sub_227DFC7A8(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  void (*v15)(uint64_t, uint64_t);

  v4 = sub_227D68330(&qword_253F3AF68);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(type metadata accessor for ReadingHistoryModel(0) + 20);
  v6 = sub_227D68330(&qword_253F3AF30);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  swift_bridgeObjectRelease();
  v7 = a1 + a2[5];
  v8 = type metadata accessor for ReadingHistory.Streak(0);
  v9 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
  if (!v9(v7, 1, v8))
  {
    v10 = sub_227E5F27C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v7, v10);
  }
  v11 = a1 + a2[6];
  v12 = sub_227E5F27C();
  v15 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8);
  v15(v11, v12);
  v13 = a1 + a2[7];
  result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v9)(v13, 1, v8);
  if (!(_DWORD)result)
    return ((uint64_t (*)(uint64_t, uint64_t))v15)(v13, v12);
  return result;
}

uint64_t sub_227DFC8F8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int (*v17)(char *, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(uint64_t, uint64_t, uint64_t);
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;

  v6 = sub_227D68330(&qword_253F3AF68);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = type metadata accessor for ReadingHistoryModel(0);
  v8 = *(int *)(v7 + 20);
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = sub_227D68330(&qword_253F3AF30);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
  *(_QWORD *)(a1 + *(int *)(v7 + 24)) = *(_QWORD *)(a2 + *(int *)(v7 + 24));
  v12 = a3[5];
  v13 = (char *)(a1 + v12);
  v14 = (char *)(a2 + v12);
  v15 = type metadata accessor for ReadingHistory.Streak(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
  swift_bridgeObjectRetain();
  if (v17(v14, 1, v15))
  {
    v18 = sub_227D68330((uint64_t *)&unk_253F39C20);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  else
  {
    v19 = sub_227E5F27C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v13, v14, v19);
    *(_QWORD *)&v13[*(int *)(v15 + 20)] = *(_QWORD *)&v14[*(int *)(v15 + 20)];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  v20 = a3[6];
  v21 = a1 + v20;
  v22 = a2 + v20;
  v23 = sub_227E5F27C();
  v24 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 16);
  v24(v21, v22, v23);
  v25 = a3[7];
  v26 = (char *)(a1 + v25);
  v27 = (char *)(a2 + v25);
  if (v17(v27, 1, v15))
  {
    v28 = sub_227D68330((uint64_t *)&unk_253F39C20);
    memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
  }
  else
  {
    v24((uint64_t)v26, (uint64_t)v27, v23);
    *(_QWORD *)&v26[*(int *)(v15 + 20)] = *(_QWORD *)&v27[*(int *)(v15 + 20)];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v26, 0, 1, v15);
  }
  return a1;
}

uint64_t sub_227DFCAF8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(char *, uint64_t, uint64_t);
  int v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(uint64_t, uint64_t, uint64_t);
  uint64_t v28;
  char *v29;
  char *v30;
  int v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;

  v6 = sub_227D68330(&qword_253F3AF68);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = type metadata accessor for ReadingHistoryModel(0);
  v8 = *(int *)(v7 + 20);
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = sub_227D68330(&qword_253F3AF30);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 24))(v9, v10, v11);
  *(_QWORD *)(a1 + *(int *)(v7 + 24)) = *(_QWORD *)(a2 + *(int *)(v7 + 24));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v12 = a3[5];
  v13 = (char *)(a1 + v12);
  v14 = (char *)(a2 + v12);
  v15 = type metadata accessor for ReadingHistory.Streak(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48);
  v18 = v17(v13, 1, v15);
  v19 = v17(v14, 1, v15);
  v35 = v16;
  if (v18)
  {
    if (!v19)
    {
      v20 = sub_227E5F27C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v13, v14, v20);
      *(_QWORD *)&v13[*(int *)(v15 + 20)] = *(_QWORD *)&v14[*(int *)(v15 + 20)];
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v19)
  {
    sub_227D64BC4((uint64_t)v13, type metadata accessor for ReadingHistory.Streak);
LABEL_6:
    v21 = sub_227D68330((uint64_t *)&unk_253F39C20);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    goto LABEL_7;
  }
  v34 = sub_227E5F27C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 24))(v13, v14, v34);
  *(_QWORD *)&v13[*(int *)(v15 + 20)] = *(_QWORD *)&v14[*(int *)(v15 + 20)];
LABEL_7:
  v22 = a3[6];
  v23 = a1 + v22;
  v24 = a2 + v22;
  v25 = sub_227E5F27C();
  v26 = *(_QWORD *)(v25 - 8);
  v27 = *(void (**)(uint64_t, uint64_t, uint64_t))(v26 + 24);
  v27(v23, v24, v25);
  v28 = a3[7];
  v29 = (char *)(a1 + v28);
  v30 = (char *)(a2 + v28);
  LODWORD(v23) = v17((char *)(a1 + v28), 1, v15);
  v31 = v17(v30, 1, v15);
  if (!(_DWORD)v23)
  {
    if (!v31)
    {
      v27((uint64_t)v29, (uint64_t)v30, v25);
      *(_QWORD *)&v29[*(int *)(v15 + 20)] = *(_QWORD *)&v30[*(int *)(v15 + 20)];
      return a1;
    }
    sub_227D64BC4((uint64_t)v29, type metadata accessor for ReadingHistory.Streak);
    goto LABEL_12;
  }
  if (v31)
  {
LABEL_12:
    v32 = sub_227D68330((uint64_t *)&unk_253F39C20);
    memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v26 + 16))(v29, v30, v25);
  *(_QWORD *)&v29[*(int *)(v15 + 20)] = *(_QWORD *)&v30[*(int *)(v15 + 20)];
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v29, 0, 1, v15);
  return a1;
}

uint64_t sub_227DFCDBC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int (*v17)(char *, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(uint64_t, uint64_t, uint64_t);
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;

  v6 = sub_227D68330(&qword_253F3AF68);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = type metadata accessor for ReadingHistoryModel(0);
  v8 = *(int *)(v7 + 20);
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = sub_227D68330(&qword_253F3AF30);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
  *(_QWORD *)(a1 + *(int *)(v7 + 24)) = *(_QWORD *)(a2 + *(int *)(v7 + 24));
  v12 = a3[5];
  v13 = (char *)(a1 + v12);
  v14 = (char *)(a2 + v12);
  v15 = type metadata accessor for ReadingHistory.Streak(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
  if (v17(v14, 1, v15))
  {
    v18 = sub_227D68330((uint64_t *)&unk_253F39C20);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  else
  {
    v19 = sub_227E5F27C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v13, v14, v19);
    *(_QWORD *)&v13[*(int *)(v15 + 20)] = *(_QWORD *)&v14[*(int *)(v15 + 20)];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  v20 = a3[6];
  v21 = a1 + v20;
  v22 = a2 + v20;
  v23 = sub_227E5F27C();
  v24 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 32);
  v24(v21, v22, v23);
  v25 = a3[7];
  v26 = (char *)(a1 + v25);
  v27 = (char *)(a2 + v25);
  if (v17(v27, 1, v15))
  {
    v28 = sub_227D68330((uint64_t *)&unk_253F39C20);
    memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
  }
  else
  {
    v24((uint64_t)v26, (uint64_t)v27, v23);
    *(_QWORD *)&v26[*(int *)(v15 + 20)] = *(_QWORD *)&v27[*(int *)(v15 + 20)];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v26, 0, 1, v15);
  }
  return a1;
}

uint64_t sub_227DFCFB4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(char *, uint64_t, uint64_t);
  int v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(uint64_t, uint64_t, uint64_t);
  uint64_t v28;
  char *v29;
  char *v30;
  int v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;

  v6 = sub_227D68330(&qword_253F3AF68);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = type metadata accessor for ReadingHistoryModel(0);
  v8 = *(int *)(v7 + 20);
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = sub_227D68330(&qword_253F3AF30);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 40))(v9, v10, v11);
  *(_QWORD *)(a1 + *(int *)(v7 + 24)) = *(_QWORD *)(a2 + *(int *)(v7 + 24));
  swift_bridgeObjectRelease();
  v12 = a3[5];
  v13 = (char *)(a1 + v12);
  v14 = (char *)(a2 + v12);
  v15 = type metadata accessor for ReadingHistory.Streak(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48);
  v18 = v17(v13, 1, v15);
  v19 = v17(v14, 1, v15);
  v35 = v16;
  if (v18)
  {
    if (!v19)
    {
      v20 = sub_227E5F27C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v13, v14, v20);
      *(_QWORD *)&v13[*(int *)(v15 + 20)] = *(_QWORD *)&v14[*(int *)(v15 + 20)];
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v19)
  {
    sub_227D64BC4((uint64_t)v13, type metadata accessor for ReadingHistory.Streak);
LABEL_6:
    v21 = sub_227D68330((uint64_t *)&unk_253F39C20);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    goto LABEL_7;
  }
  v34 = sub_227E5F27C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 40))(v13, v14, v34);
  *(_QWORD *)&v13[*(int *)(v15 + 20)] = *(_QWORD *)&v14[*(int *)(v15 + 20)];
LABEL_7:
  v22 = a3[6];
  v23 = a1 + v22;
  v24 = a2 + v22;
  v25 = sub_227E5F27C();
  v26 = *(_QWORD *)(v25 - 8);
  v27 = *(void (**)(uint64_t, uint64_t, uint64_t))(v26 + 40);
  v27(v23, v24, v25);
  v28 = a3[7];
  v29 = (char *)(a1 + v28);
  v30 = (char *)(a2 + v28);
  LODWORD(v23) = v17((char *)(a1 + v28), 1, v15);
  v31 = v17(v30, 1, v15);
  if (!(_DWORD)v23)
  {
    if (!v31)
    {
      v27((uint64_t)v29, (uint64_t)v30, v25);
      *(_QWORD *)&v29[*(int *)(v15 + 20)] = *(_QWORD *)&v30[*(int *)(v15 + 20)];
      return a1;
    }
    sub_227D64BC4((uint64_t)v29, type metadata accessor for ReadingHistory.Streak);
    goto LABEL_12;
  }
  if (v31)
  {
LABEL_12:
    v32 = sub_227D68330((uint64_t *)&unk_253F39C20);
    memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v26 + 32))(v29, v30, v25);
  *(_QWORD *)&v29[*(int *)(v15 + 20)] = *(_QWORD *)&v30[*(int *)(v15 + 20)];
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v29, 0, 1, v15);
  return a1;
}

uint64_t sub_227DFD270()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_227DFD27C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = type metadata accessor for ReadingHistoryModel(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    v11 = sub_227D68330((uint64_t *)&unk_253F39C20);
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = *(int *)(a3 + 20);
    }
    else
    {
      v8 = sub_227E5F27C();
      v12 = *(_QWORD *)(v8 - 8);
      v13 = *(int *)(a3 + 24);
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t sub_227DFD318()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_227DFD324(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v8 = type metadata accessor for ReadingHistoryModel(0);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v13 = sub_227D68330((uint64_t *)&unk_253F39C20);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = *(int *)(a4 + 20);
    }
    else
    {
      v10 = sub_227E5F27C();
      v14 = *(_QWORD *)(v10 - 8);
      v15 = *(int *)(a4 + 24);
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

char *sub_227DFD3C8(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  size_t v6;
  char *v7;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + 8 * a1 + 32);
    v6 = 8 * v4;
    v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  result = (char *)sub_227E605A8();
  __break(1u);
  return result;
}

uint64_t sub_227DFD4B0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 32 * a1 + 32;
    v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_227E605A8();
  __break(1u);
  return result;
}

uint64_t sub_227DFD5A0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t result;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    v9 = *(_QWORD *)(a5(0) - 8);
    v10 = *(unsigned __int8 *)(v9 + 80);
    v11 = *(_QWORD *)(v9 + 72);
    v12 = a4 + ((v10 + 32) & ~v10) + v11 * a1;
    v13 = v11 * v5;
    v14 = a3 + v13;
    v15 = v12 + v13;
    if (v12 >= v14 || v15 <= a3)
    {
      swift_arrayInitWithCopy();
      return v14;
    }
  }
  result = sub_227E605A8();
  __break(1u);
  return result;
}

uint64_t sub_227DFD6BC()
{
  return swift_deallocObject();
}

uint64_t sub_227DFD6CC()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_227DFD6F8()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_227DFD720(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE v8[48];

  v2 = v1[2];
  v3 = v1[3];
  v4 = v1[4];
  v5 = v1[5];
  v6 = v1[6];
  sub_227D5B0DC(a1, (uint64_t)v8, &qword_253F3A088);
  return sub_227DEF7A0((uint64_t)v8, v2, v3, v4, v5, v6);
}

uint64_t sub_227DFD790()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_227DFD7B4()
{
  uint64_t v0;
  uint64_t (*v1)(_OWORD *);
  uint64_t v2;
  char v3;
  char v4;
  __int128 v5;
  _OWORD v7[2];
  uint64_t v8;
  char v9;
  char v10;

  v1 = *(uint64_t (**)(_OWORD *))(v0 + 16);
  v2 = *(_QWORD *)(v0 + 64);
  v3 = *(_BYTE *)(v0 + 72);
  v4 = *(_BYTE *)(v0 + 73);
  v5 = *(_OWORD *)(v0 + 48);
  v7[0] = *(_OWORD *)(v0 + 32);
  v7[1] = v5;
  v8 = v2;
  v9 = v3;
  v10 = v4;
  return v1(v7);
}

uint64_t sub_227DFD804(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 24))(a2, a1, v5);
  return a2;
}

uint64_t sub_227DFD848(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(_QWORD *)(v1 + 16);
  sub_227D5809C(a1, &qword_253F398D0);
  return sub_227D5DF48(v3, a1, &qword_253F398D0);
}

uint64_t sub_227DFD890()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_227DFD8B4()
{
  uint64_t v0;

  return sub_227DE7564(*(void (**)(char *))(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t sub_227DFD8C0()
{
  return swift_deallocObject();
}

uint64_t sub_227DFD8D0()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_227DFD8F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(sub_227D68330(&qword_253F391D0) - 8) + 80);
  v2 = (v1 + 24) & ~v1;
  swift_release();
  v3 = sub_227E5F27C();
  v4 = *(_QWORD *)(v3 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v0 + v2, 1, v3))
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v0 + v2, v3);
  return swift_deallocObject();
}

void sub_227DFD9A0()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(sub_227D68330(&qword_253F391D0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  sub_227DF0954(*(_QWORD *)(v0 + 16), v0 + v2, *(_QWORD *)(v0 + ((*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_227DFD9E8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_227E5F27C();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_227DFDA78()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(sub_227E5F27C() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_227DF7D98(v0 + v2, *(_QWORD *)(v0 + v3), *(_QWORD *)(v0 + ((v3 + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v0 + ((v3 + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t sub_227DFDAC8()
{
  return swift_deallocObject();
}

BOOL sub_227DFDAD8(__int128 *a1)
{
  uint64_t v1;

  return sub_227DF5D4C(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_227DFDAF8()
{
  swift_release();
  swift_release();
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_227DFDB2C()
{
  return swift_deallocObject();
}

uint64_t sub_227DFDB3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  int EnumCaseMultiPayload;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(unint64_t, uint64_t, uint64_t);
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  unsigned int (*v29)(uint64_t, uint64_t, uint64_t);
  void (*v30)(unint64_t, uint64_t);
  void (*v31)(unint64_t, uint64_t);

  v1 = v0;
  v2 = *(_QWORD *)(sub_227D68330(&qword_253F3A080) - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  v4 = v1 + v3;
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v6 = sub_227D68330(&qword_253F3AF68);
  v31 = *(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8);
  v31(v1 + v3, v6);
  v7 = type metadata accessor for ReadingHistoryModel(0);
  v8 = v1 + v3 + *(int *)(v7 + 20);
  v9 = sub_227D68330(&qword_253F3AF30);
  v30 = *(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8);
  v30(v8, v9);
  swift_bridgeObjectRelease();
  v10 = sub_227D68330(&qword_253F398D0);
  v11 = v1 + v3 + *(int *)(v10 + 48);
  v12 = sub_227D68330(&qword_253F3A1C0);
  v13 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48);
  v14 = v13(v11, 2, v12);
  if (EnumCaseMultiPayload == 1)
  {
    if (!v14)
    {
      v31(v11, v6);
      v30(v11 + *(int *)(v7 + 20), v9);
      swift_bridgeObjectRelease();
    }
    v15 = v4 + *(int *)(v10 + 52);
    v16 = type metadata accessor for CRDTModelRevisionInfo();
    v29 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 48);
    if (!v29(v15, 1, v16))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v17 = v15 + *(int *)(v16 + 24);
      v18 = sub_227E5F27C();
      v28 = *(_QWORD *)(v18 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v28 + 48))(v17, 1, v18))
        (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v17, v18);
    }
    v19 = v4 + *(int *)(sub_227D68330(&qword_255928C80) + 48);
    v31(v19, v6);
    v30(v19 + *(int *)(v7 + 20), v9);
    swift_bridgeObjectRelease();
    v20 = v19 + *(int *)(v10 + 48);
    if (!v13(v20, 2, v12))
    {
      v31(v20, v6);
      v30(v20 + *(int *)(v7 + 20), v9);
      swift_bridgeObjectRelease();
    }
    v21 = v19 + *(int *)(v10 + 52);
    if (!v29(v21, 1, v16))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v22 = *(int *)(v16 + 24);
      goto LABEL_15;
    }
  }
  else
  {
    if (!v14)
    {
      v31(v11, v6);
      v30(v11 + *(int *)(v7 + 20), v9);
      swift_bridgeObjectRelease();
    }
    v21 = v4 + *(int *)(v10 + 52);
    v23 = type metadata accessor for CRDTModelRevisionInfo();
    if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 48))(v21, 1, v23))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v22 = *(int *)(v23 + 24);
LABEL_15:
      v24 = v21 + v22;
      v25 = sub_227E5F27C();
      v26 = *(_QWORD *)(v25 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25))
        (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v24, v25);
    }
  }
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_227DFDF04()
{
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_227DFDF38(uint64_t a1)
{
  uint64_t *v1;

  return sub_227DEFB38(a1, v1[2], v1[3], v1[4], v1[5], v1[6]);
}

uint64_t sub_227DFDF48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  int EnumCaseMultiPayload;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(unint64_t, uint64_t, uint64_t);
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  unsigned int (*v29)(uint64_t, uint64_t, uint64_t);
  void (*v30)(unint64_t, uint64_t);
  void (*v31)(unint64_t, uint64_t);

  v1 = v0;
  v2 = *(_QWORD *)(sub_227D68330(&qword_253F3A080) - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  v4 = v1 + v3;
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v6 = sub_227D68330(&qword_253F3AF68);
  v31 = *(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8);
  v31(v1 + v3, v6);
  v7 = type metadata accessor for ReadingHistoryModel(0);
  v8 = v1 + v3 + *(int *)(v7 + 20);
  v9 = sub_227D68330(&qword_253F3AF30);
  v30 = *(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8);
  v30(v8, v9);
  swift_bridgeObjectRelease();
  v10 = sub_227D68330(&qword_253F398D0);
  v11 = v1 + v3 + *(int *)(v10 + 48);
  v12 = sub_227D68330(&qword_253F3A1C0);
  v13 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48);
  v14 = v13(v11, 2, v12);
  if (EnumCaseMultiPayload == 1)
  {
    if (!v14)
    {
      v31(v11, v6);
      v30(v11 + *(int *)(v7 + 20), v9);
      swift_bridgeObjectRelease();
    }
    v15 = v4 + *(int *)(v10 + 52);
    v16 = type metadata accessor for CRDTModelRevisionInfo();
    v29 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 48);
    if (!v29(v15, 1, v16))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v17 = v15 + *(int *)(v16 + 24);
      v18 = sub_227E5F27C();
      v28 = *(_QWORD *)(v18 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v28 + 48))(v17, 1, v18))
        (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v17, v18);
    }
    v19 = v4 + *(int *)(sub_227D68330(&qword_255928C80) + 48);
    v31(v19, v6);
    v30(v19 + *(int *)(v7 + 20), v9);
    swift_bridgeObjectRelease();
    v20 = v19 + *(int *)(v10 + 48);
    if (!v13(v20, 2, v12))
    {
      v31(v20, v6);
      v30(v20 + *(int *)(v7 + 20), v9);
      swift_bridgeObjectRelease();
    }
    v21 = v19 + *(int *)(v10 + 52);
    if (!v29(v21, 1, v16))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v22 = *(int *)(v16 + 24);
      goto LABEL_15;
    }
  }
  else
  {
    if (!v14)
    {
      v31(v11, v6);
      v30(v11 + *(int *)(v7 + 20), v9);
      swift_bridgeObjectRelease();
    }
    v21 = v4 + *(int *)(v10 + 52);
    v23 = type metadata accessor for CRDTModelRevisionInfo();
    if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 48))(v21, 1, v23))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v22 = *(int *)(v23 + 24);
LABEL_15:
      v24 = v21 + v22;
      v25 = sub_227E5F27C();
      v26 = *(_QWORD *)(v25 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25))
        (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v24, v25);
    }
  }
  return swift_deallocObject();
}

uint64_t sub_227DFE2F0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(sub_227D68330(&qword_253F3A080) - 8) + 80);
  return (*(uint64_t (**)(uint64_t))(v0 + 16))(v0 + ((v1 + 32) & ~v1));
}

uint64_t sub_227DFE334()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int EnumCaseMultiPayload;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t);
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  unsigned int (*v27)(uint64_t, uint64_t, uint64_t);
  void (*v28)(uint64_t, uint64_t);
  void (*v29)(uint64_t, uint64_t);

  v1 = *(_QWORD *)(sub_227D68330(&qword_253F3A080) - 8);
  v2 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v4 = sub_227D68330(&qword_253F3AF68);
  v29 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v29(v2, v4);
  v5 = type metadata accessor for ReadingHistoryModel(0);
  v6 = v2 + *(int *)(v5 + 20);
  v7 = sub_227D68330(&qword_253F3AF30);
  v28 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8);
  v28(v6, v7);
  swift_bridgeObjectRelease();
  v8 = sub_227D68330(&qword_253F398D0);
  v9 = v2 + *(int *)(v8 + 48);
  v10 = sub_227D68330(&qword_253F3A1C0);
  v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48);
  v12 = v11(v9, 2, v10);
  if (EnumCaseMultiPayload == 1)
  {
    if (!v12)
    {
      v29(v9, v4);
      v28(v9 + *(int *)(v5 + 20), v7);
      swift_bridgeObjectRelease();
    }
    v13 = v2 + *(int *)(v8 + 52);
    v14 = type metadata accessor for CRDTModelRevisionInfo();
    v27 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48);
    if (!v27(v13, 1, v14))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v15 = v13 + *(int *)(v14 + 24);
      v16 = sub_227E5F27C();
      v26 = *(_QWORD *)(v16 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v26 + 48))(v15, 1, v16))
        (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v15, v16);
    }
    v17 = v2 + *(int *)(sub_227D68330(&qword_255928C80) + 48);
    v29(v17, v4);
    v28(v17 + *(int *)(v5 + 20), v7);
    swift_bridgeObjectRelease();
    v18 = v17 + *(int *)(v8 + 48);
    if (!v11(v18, 2, v10))
    {
      v29(v18, v4);
      v28(v18 + *(int *)(v5 + 20), v7);
      swift_bridgeObjectRelease();
    }
    v19 = v17 + *(int *)(v8 + 52);
    if (!v27(v19, 1, v14))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v20 = *(int *)(v14 + 24);
      goto LABEL_15;
    }
  }
  else
  {
    if (!v12)
    {
      v29(v9, v4);
      v28(v9 + *(int *)(v5 + 20), v7);
      swift_bridgeObjectRelease();
    }
    v19 = v2 + *(int *)(v8 + 52);
    v21 = type metadata accessor for CRDTModelRevisionInfo();
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 48))(v19, 1, v21))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v20 = *(int *)(v21 + 24);
LABEL_15:
      v22 = v19 + v20;
      v23 = sub_227E5F27C();
      v24 = *(_QWORD *)(v23 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
        (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v22, v23);
    }
  }
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_227DFE6E8()
{
  return swift_deallocObject();
}

uint64_t sub_227DFE6F8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;

  v3 = *(_QWORD *)(v1 + 16);
  result = sub_227D68330(&qword_253F398D0);
  *(_BYTE *)(a1 + *(int *)(result + 44)) = *(_BYTE *)(v3 + *(int *)(result + 44));
  return result;
}

uint64_t sub_227DFE730()
{
  return swift_deallocObject();
}

uint64_t sub_227DFE740(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ReadingHistoryModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_227DFE784(uint64_t *a1)
{
  uint64_t v1;

  return sub_227DF2D20(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_227DFE79C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_227DFE7C0()
{
  return swift_deallocObject();
}

unint64_t sub_227DFE7D0()
{
  unint64_t result;

  result = qword_255928F38;
  if (!qword_255928F38)
  {
    result = MEMORY[0x22E2AA7D4](&protocol conformance descriptor for ReadingHistory.Notification.PlaceholderStreakDayGoalNeedsUpdate, &type metadata for ReadingHistory.Notification.PlaceholderStreakDayGoalNeedsUpdate);
    atomic_store(result, (unint64_t *)&qword_255928F38);
  }
  return result;
}

id static OS_os_log.crdtModelSync.getter()
{
  if (qword_253F39F30 != -1)
    swift_once();
  return (id)qword_253F39F28;
}

uint64_t sub_227DFE900()
{
  unsigned __int8 v1;

  sub_227E602CC();
  return v1;
}

uint64_t sub_227DFE958(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_227DFFE44(a1, a2, a3);
}

uint64_t sub_227DFE978()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  NSObject *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t result;
  _QWORD v11[6];

  v1 = v0;
  v2 = sub_227E5F570();
  v3 = sub_227E60248();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_227D4F000, v2, v3, "CRDTModelFileSyncTransport: About to disconnect", v4, 2u);
    MEMORY[0x22E2AA8AC](v4, -1, -1);
  }

  v5 = *(_QWORD *)(v1 + 24);
  v6 = *(NSObject **)(v5 + 40);
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = v5;
  *(_BYTE *)(v7 + 24) = 0;
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = sub_227E006E4;
  *(_QWORD *)(v8 + 24) = v7;
  v11[4] = sub_227D63158;
  v11[5] = v8;
  v11[0] = MEMORY[0x24BDAC760];
  v11[1] = 1107296256;
  v11[2] = sub_227D62A60;
  v11[3] = &unk_24F08F850;
  v9 = _Block_copy(v11);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v6, v9);
  _Block_release(v9);
  LOBYTE(v6) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((v6 & 1) == 0)
    return sub_227DFFBE8((uint64_t)sub_227E00470, (uint64_t)&unk_24F08F5A8);
  __break(1u);
  return result;
}

uint64_t sub_227DFEB40()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  NSObject *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t result;
  _QWORD v11[6];

  v1 = v0;
  v2 = sub_227E5F570();
  v3 = sub_227E60248();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_227D4F000, v2, v3, "CRDTModelFileSyncTransport: About to reconnect", v4, 2u);
    MEMORY[0x22E2AA8AC](v4, -1, -1);
  }

  v5 = *(_QWORD *)(v1 + 24);
  v6 = *(NSObject **)(v5 + 40);
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = v5;
  *(_BYTE *)(v7 + 24) = 1;
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = sub_227E00518;
  *(_QWORD *)(v8 + 24) = v7;
  v11[4] = sub_227D63158;
  v11[5] = v8;
  v11[0] = MEMORY[0x24BDAC760];
  v11[1] = 1107296256;
  v11[2] = sub_227D62A60;
  v11[3] = &unk_24F08F760;
  v9 = _Block_copy(v11);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v6, v9);
  _Block_release(v9);
  LOBYTE(v6) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((v6 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    sub_227DFF678();
    return sub_227DFFBE8((uint64_t)sub_227E00308, (uint64_t)&unk_24F08F490);
  }
  return result;
}

uint64_t sub_227DFED10()
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_227DFED64();
    return swift_release();
  }
  return result;
}

uint64_t sub_227DFED64()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t ObjectType;
  uint64_t result;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  NSObject *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  char isEscapingClosureAtFileLocation;
  _QWORD v14[6];

  v1 = v0;
  v2 = *v0;
  v3 = v0[3];
  ObjectType = swift_getObjectType();
  result = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(ObjectType, v3);
  if ((result & 1) != 0)
  {
    v6 = sub_227E5F570();
    v7 = sub_227E60248();
    if (os_log_type_enabled(v6, v7))
    {
      v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v8 = 0;
      _os_log_impl(&dword_227D4F000, v6, v7, "CRDTModelFileSyncTransport: assume connection is healthy", v8, 2u);
      MEMORY[0x22E2AA8AC](v8, -1, -1);
    }

    v9 = v1[5];
    v10 = swift_allocObject();
    *(_QWORD *)(v10 + 16) = v1;
    *(_QWORD *)(v10 + 24) = v2;
    v11 = swift_allocObject();
    *(_QWORD *)(v11 + 16) = sub_227E006E8;
    *(_QWORD *)(v11 + 24) = v10;
    v14[4] = sub_227D63158;
    v14[5] = v11;
    v14[0] = MEMORY[0x24BDAC760];
    v14[1] = 1107296256;
    v14[2] = sub_227D62A60;
    v14[3] = &unk_24F08F940;
    v12 = _Block_copy(v14);
    swift_retain();
    swift_retain();
    swift_release();
    dispatch_sync(v9, v12);
    _Block_release(v12);
    isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    result = swift_release();
    if ((isEscapingClosureAtFileLocation & 1) != 0)
      __break(1u);
  }
  return result;
}

uint64_t sub_227DFEF28()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  NSObject *v5;
  uint64_t v6;
  void *v7;
  uint64_t result;
  _QWORD v9[6];

  v1 = v0;
  v2 = sub_227E5F570();
  v3 = sub_227E60248();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_227D4F000, v2, v3, "CRDTModelFileSyncTransport: disconnected", v4, 2u);
    MEMORY[0x22E2AA8AC](v4, -1, -1);
  }

  v5 = *(NSObject **)(v1 + 40);
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = sub_227E00474;
  *(_QWORD *)(v6 + 24) = v1;
  v9[4] = sub_227D62A80;
  v9[5] = v6;
  v9[0] = MEMORY[0x24BDAC760];
  v9[1] = 1107296256;
  v9[2] = sub_227D62A60;
  v9[3] = &unk_24F08F5F8;
  v7 = _Block_copy(v9);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v5, v7);
  _Block_release(v7);
  LOBYTE(v5) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((v5 & 1) != 0)
    __break(1u);
  return result;
}

void sub_227DFF0AC(uint64_t a1)
{
  double v2;
  os_log_type_t v3;
  uint8_t *v4;
  NSObject *oslog;

  if (*(_BYTE *)(a1 + 48) == 1)
  {
    sub_227DFF190(*(double *)(a1 + 56));
    v2 = *(double *)(a1 + 56) + *(double *)(a1 + 56);
    *(double *)(a1 + 56) = v2;
    if (v2 > 3600.0)
      *(_QWORD *)(a1 + 56) = 0x40AC200000000000;
  }
  else
  {
    oslog = sub_227E5F570();
    v3 = sub_227E60248();
    if (os_log_type_enabled(oslog, v3))
    {
      v4 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v4 = 0;
      _os_log_impl(&dword_227D4F000, oslog, v3, "CRDTModelFileSyncTransport: not reconnecting automatically", v4, 2u);
      MEMORY[0x22E2AA8AC](v4, -1, -1);
    }

  }
}

void sub_227DFF190(double a1)
{
  uint64_t v1;
  uint64_t v2;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  void *v7;
  uint64_t v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  void *v14;
  void *v15;
  id v16;
  double v17;
  uint64_t v18;
  void *v19;
  void *v20;
  uint64_t (*v21)();
  uint64_t v22;

  v2 = v1;
  v4 = sub_227E5F570();
  v5 = sub_227E60248();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v6 = 134217984;
    v17 = a1;
    sub_227E603B0();
    _os_log_impl(&dword_227D4F000, v4, v5, "CRDTModelFileSyncTransport: attempt auto-reconnect in %f sec", v6, 0xCu);
    MEMORY[0x22E2AA8AC](v6, -1, -1);
  }

  v7 = *(void **)(v2 + 64);
  if (v7)
    goto LABEL_5;
  v8 = swift_allocObject();
  swift_weakInit();
  v9 = objc_allocWithZone(MEMORY[0x24BE0FC00]);
  v21 = sub_227E0048C;
  v22 = v8;
  v17 = MEMORY[0x24BDAC760];
  v18 = 1107296256;
  v19 = sub_227E00324;
  v20 = &unk_24F08F670;
  v10 = _Block_copy(&v17);
  swift_retain();
  v11 = (void *)sub_227E5FF78();
  v12 = objc_msgSend(v9, sel_initWithNotifyBlock_blockDescription_, v10, v11);

  _Block_release(v10);
  swift_release();
  swift_release();
  v13 = *(void **)(v2 + 64);
  *(_QWORD *)(v2 + 64) = v12;

  v7 = *(void **)(v2 + 64);
  if (v7)
  {
LABEL_5:
    objc_msgSend(v7, sel_setCoalescingDelay_, a1, *(_QWORD *)&v17);
    v14 = *(void **)(v2 + 64);
    if (v14)
    {
      v21 = nullsub_1;
      v22 = 0;
      v17 = MEMORY[0x24BDAC760];
      v18 = 1107296256;
      v19 = sub_227D5A858;
      v20 = &unk_24F08F620;
      v15 = _Block_copy(&v17);
      v16 = v14;
      objc_msgSend(v16, sel_signalWithCompletion_, v15);
      _Block_release(v15);

    }
  }
}

uint64_t sub_227DFF3E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t Strong;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t result;
  _BYTE v10[24];

  v0 = sub_227E5F588();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0, v2);
  v4 = &v10[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v1 + 16))(v4, Strong + OBJC_IVAR____TtC13BookDataStoreP33_8BA727A02A5A0740DF907C88E66860CE27_TransportConnectionManager_logger, v0);
    swift_release();
    v6 = sub_227E5F570();
    v7 = sub_227E60248();
    if (os_log_type_enabled(v6, v7))
    {
      v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v8 = 0;
      _os_log_impl(&dword_227D4F000, v6, v7, "CRDTModelFileSyncTransport: About to auto-reconnect", v8, 2u);
      MEMORY[0x22E2AA8AC](v8, -1, -1);
    }

    (*(void (**)(_BYTE *, uint64_t))(v1 + 8))(v4, v0);
  }
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_227DFF554();
    return swift_release();
  }
  return result;
}

uint64_t sub_227DFF554()
{
  uint64_t v0;
  NSObject *v1;
  uint64_t v2;
  void *v3;
  uint64_t result;
  uint64_t v5;
  uint64_t ObjectType;
  _QWORD v7[6];

  v1 = *(NSObject **)(v0 + 40);
  v2 = swift_allocObject();
  *(_QWORD *)(v2 + 16) = sub_227E004C4;
  *(_QWORD *)(v2 + 24) = v0;
  v7[4] = sub_227D63158;
  v7[5] = v2;
  v7[0] = MEMORY[0x24BDAC760];
  v7[1] = 1107296256;
  v7[2] = sub_227D62A60;
  v7[3] = &unk_24F08F6E8;
  v3 = _Block_copy(v7);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v1, v3);
  _Block_release(v3);
  LOBYTE(v1) = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((v1 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v5 = *(_QWORD *)(v0 + 24);
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v5 + 40))(ObjectType, v5);
    return swift_release();
  }
  return result;
}

uint64_t sub_227DFF678()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  NSObject *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t result;
  _QWORD v8[6];

  v1 = v0;
  v2 = *v0;
  v3 = v1[5];
  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = v1;
  *(_QWORD *)(v4 + 24) = v2;
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = sub_227E0055C;
  *(_QWORD *)(v5 + 24) = v4;
  v8[4] = sub_227D63158;
  v8[5] = v5;
  v8[0] = MEMORY[0x24BDAC760];
  v8[1] = 1107296256;
  v8[2] = sub_227D62A60;
  v8[3] = &unk_24F08F7D8;
  v6 = _Block_copy(v8);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v3, v6);
  _Block_release(v6);
  LOBYTE(v1) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((v1 & 1) != 0)
    __break(1u);
  return result;
}

uint64_t sub_227DFF7A4()
{
  id *v0;
  char *v1;
  uint64_t v2;

  swift_unknownObjectRelease();

  v1 = (char *)v0
     + OBJC_IVAR____TtC13BookDataStoreP33_8BA727A02A5A0740DF907C88E66860CE27_TransportConnectionManager_logger;
  v2 = sub_227E5F588();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_227DFF814()
{
  return type metadata accessor for _TransportConnectionManager();
}

uint64_t sub_227DFF81C()
{
  unsigned __int8 v1;

  sub_227E602CC();
  return v1;
}

uint64_t sub_227DFF874(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_227D6B1C4(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_227D6AE98);
}

void sub_227DFF880(void **a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  uint64_t Strong;
  id v13;
  id v14;
  id v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  id v26;
  _QWORD v27[2];
  uint64_t v28;
  uint64_t v29;
  uint64_t v30[3];

  v2 = sub_227E5F588();
  v3 = *(_QWORD *)(v2 - 8);
  v5 = MEMORY[0x24BDAC7A8](v2, v4);
  v7 = (char *)v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5, v8);
  v10 = (char *)v27 - v9;
  v11 = *a1;
  if (v11)
  {
    swift_beginAccess();
    Strong = swift_weakLoadStrong();
    if (Strong)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v10, Strong + *(_QWORD *)(*(_QWORD *)Strong + 192), v2);
      v13 = v11;
      swift_release();
      v14 = v11;
      v15 = v11;
      v16 = sub_227E5F570();
      v17 = sub_227E60230();
      if (os_log_type_enabled(v16, v17))
      {
        v18 = (uint8_t *)swift_slowAlloc();
        v28 = swift_slowAlloc();
        v30[0] = v28;
        *(_DWORD *)v18 = 136315138;
        v27[1] = v18 + 4;
        swift_getErrorValue();
        v19 = sub_227E606D4();
        v29 = sub_227D634E0(v19, v20, v30);
        sub_227E603B0();
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_227D4F000, v16, v17, "CRDTModelFileSyncTransport sink: error: %s", v18, 0xCu);
        v21 = v28;
        swift_arrayDestroy();
        MEMORY[0x22E2AA8AC](v21, -1, -1);
        MEMORY[0x22E2AA8AC](v18, -1, -1);
      }
      else
      {

      }
      (*(void (**)(char *, uint64_t))(v3 + 8))(v10, v2);
    }
    else
    {
      v26 = v11;
    }
    swift_beginAccess();
    if (swift_weakLoadStrong())
    {
      sub_227DFFBE8((uint64_t)sub_227E00470, (uint64_t)&unk_24F08F5A8);

      swift_release();
    }
    else
    {

    }
  }
  else
  {
    swift_beginAccess();
    v22 = swift_weakLoadStrong();
    if (v22)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v7, v22 + *(_QWORD *)(*(_QWORD *)v22 + 192), v2);
      swift_release();
      v23 = sub_227E5F570();
      v24 = sub_227E60248();
      if (os_log_type_enabled(v23, v24))
      {
        v25 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v25 = 0;
        _os_log_impl(&dword_227D4F000, v23, v24, "CRDTModelFileSyncTransport sink: finished", v25, 2u);
        MEMORY[0x22E2AA8AC](v25, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v3 + 8))(v7, v2);
    }
  }
}

uint64_t sub_227DFFBE8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  void *v17;
  _QWORD v19[2];
  _QWORD aBlock[6];

  v5 = v2;
  v6 = sub_227E5F948();
  v7 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458];
  v8 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6, v9);
  v11 = (char *)v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_227E5F978();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12, v14);
  v16 = (char *)v19 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19[0] = *(_QWORD *)(v5 + *(_QWORD *)(*(_QWORD *)v5 + 152));
  aBlock[4] = a1;
  aBlock[5] = v5;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_227D5A858;
  aBlock[3] = a2;
  v17 = _Block_copy(aBlock);
  swift_retain();
  sub_227E5F960();
  v19[1] = MEMORY[0x24BEE4AF8];
  sub_227D51624((unint64_t *)&unk_253F3AED0, v7, MEMORY[0x24BEE5468]);
  sub_227D68330((uint64_t *)&unk_253F3AFE0);
  sub_227D52D7C((unint64_t *)&unk_253F3AFF0, (uint64_t *)&unk_253F3AFE0);
  sub_227E603E0();
  MEMORY[0x22E2A991C](0, v16, v11, v17);
  _Block_release(v17);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v6);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v12);
  return swift_release();
}

uint64_t sub_227DFFDB4()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t result;

  v1 = (_QWORD *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 160));
  swift_beginAccess();
  *v1 = MEMORY[0x24BEE4B08];
  swift_bridgeObjectRelease();
  *(_QWORD *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 168)) = 0;
  swift_release();
  *(_BYTE *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 176)) = 0;
  result = MEMORY[0x22E2AA96C](v0 + 16);
  if (result)
  {
    sub_227DFEF28();
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_227DFFE44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  unint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  void *v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD aBlock[6];

  v4 = v3;
  v37 = a2;
  v38 = a3;
  v6 = (_QWORD *)*v3;
  v7 = sub_227E5F948();
  v35 = *(_QWORD *)(v7 - 8);
  v36 = v7;
  MEMORY[0x24BDAC7A8](v7, v8);
  v34 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_227E5F978();
  v32 = *(_QWORD *)(v10 - 8);
  v33 = v10;
  MEMORY[0x24BDAC7A8](v10, v11);
  v31 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = v6[10];
  v14 = v6[12];
  v15 = sub_227E5FDE0();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(_QWORD *)(v16 + 64);
  MEMORY[0x24BDAC7A8](v15, v18);
  v20 = (char *)&v30 - v19;
  if (*(_QWORD *)((char *)v3 + v6[21]))
  {
    swift_retain();
    sub_227E5FCF0();
  }
  else
  {
    v30 = *(_QWORD *)((char *)v3 + v6[19]);
    (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v20, a1, v15);
    v22 = (*(unsigned __int8 *)(v16 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
    v23 = (char *)swift_allocObject();
    *((_QWORD *)v23 + 2) = v13;
    *((_QWORD *)v23 + 3) = v6[11];
    *((_QWORD *)v23 + 4) = v14;
    *((_QWORD *)v23 + 5) = v6[13];
    *((_QWORD *)v23 + 6) = v4;
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(&v23[v22], v20, v15);
    v24 = &v23[(v17 + v22 + 7) & 0xFFFFFFFFFFFFFFF8];
    v25 = v38;
    *(_QWORD *)v24 = v37;
    *((_QWORD *)v24 + 1) = v25;
    aBlock[4] = sub_227E00630;
    aBlock[5] = v23;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_227D5A858;
    aBlock[3] = &unk_24F08F8A0;
    v26 = _Block_copy(aBlock);
    swift_retain();
    swift_retain();
    v27 = v31;
    sub_227E5F960();
    v39 = MEMORY[0x24BEE4AF8];
    sub_227D51624((unint64_t *)&unk_253F3AED0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
    sub_227D68330((uint64_t *)&unk_253F3AFE0);
    sub_227D52D7C((unint64_t *)&unk_253F3AFF0, (uint64_t *)&unk_253F3AFE0);
    v28 = v34;
    v29 = v36;
    sub_227E603E0();
    MEMORY[0x22E2A991C](0, v27, v28, v26);
    _Block_release(v26);
    (*(void (**)(char *, uint64_t))(v35 + 8))(v28, v29);
    (*(void (**)(char *, uint64_t))(v32 + 8))(v27, v33);
  }
  return swift_release();
}

id *sub_227E00144()
{
  id *v0;
  char *v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;

  sub_227DE0034((uint64_t)(v0 + 2));

  v1 = (char *)v0 + *((_QWORD *)*v0 + 16);
  v2 = sub_227E5FDE0();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = (char *)v0 + *((_QWORD *)*v0 + 17);
  v4 = sub_227E5F1B0();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  sub_227D5B660(*(uint64_t *)((char *)v0 + *((_QWORD *)*v0 + 18)));

  swift_bridgeObjectRelease();
  swift_release();
  v5 = (char *)v0 + *((_QWORD *)*v0 + 24);
  v6 = sub_227E5F588();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  return v0;
}

uint64_t sub_227E00248()
{
  sub_227E00144();
  return swift_deallocClassInstance();
}

uint64_t sub_227E0026C()
{
  return sub_227DFFBE8((uint64_t)sub_227E00308, (uint64_t)&unk_24F08F490);
}

uint64_t sub_227E00290()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_release();
  swift_release();
  v1 = v0 + qword_253F3AB28;
  v2 = sub_227E5F588();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t sub_227E002E4()
{
  sub_227E00290();
  return swift_deallocClassInstance();
}

uint64_t sub_227E00308()
{
  sub_227D6B5D4();
  return swift_release();
}

uint64_t sub_227E0031C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 16))();
}

uint64_t sub_227E00324(uint64_t a1, void *aBlock)
{
  void (*v2)(uint64_t (*)(), uint64_t);
  void *v3;
  uint64_t v4;

  v2 = *(void (**)(uint64_t (*)(), uint64_t))(a1 + 32);
  v3 = _Block_copy(aBlock);
  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = v3;
  swift_retain();
  v2(sub_227E004B8, v4);
  swift_release();
  return swift_release();
}

uint64_t sub_227E00394()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_227E003B8()
{
  swift_release();
  return swift_deallocObject();
}

void sub_227E003DC(void **a1)
{
  sub_227DFF880(a1);
}

uint64_t sub_227E003EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_227E5FDE0();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

void sub_227E00474()
{
  uint64_t v0;

  sub_227DFF0AC(v0);
}

uint64_t sub_227E0047C()
{
  return swift_deallocObject();
}

uint64_t sub_227E0048C()
{
  return sub_227DFF3E8();
}

uint64_t sub_227E00494()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

uint64_t sub_227E004B8()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v0 + 16) + 16))();
}

void sub_227E004C4()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 64);
  *(_QWORD *)(v0 + 64) = 0;

}

uint64_t sub_227E004D0()
{
  return swift_deallocObject();
}

void sub_227E004E0(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 176));
}

uint64_t sub_227E004F4()
{
  swift_release();
  return swift_deallocObject();
}

void sub_227E00518()
{
  uint64_t v0;

  *(_BYTE *)(*(_QWORD *)(v0 + 16) + 48) = *(_BYTE *)(v0 + 24);
}

uint64_t sub_227E00528()
{
  return swift_deallocObject();
}

uint64_t sub_227E00538()
{
  swift_release();
  return swift_deallocObject();
}

void sub_227E0055C()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)(v0 + 16) + 56) = 0x403E000000000000;
}

uint64_t sub_227E0056C()
{
  return swift_deallocObject();
}

uint64_t sub_227E0057C()
{
  return swift_deallocObject();
}

uint64_t sub_227E0058C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_227E5FDE0();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_227E00630()
{
  sub_227E5FDE0();
  sub_227D6B5D4();
  sub_227E5FCF0();
  return swift_release();
}

uint64_t sub_227E006B8()
{
  return sub_227DFED10();
}

uint64_t sub_227E006C0()
{
  return swift_deallocObject();
}

void sub_227E006D0(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 184));
}

uint64_t sub_227E00764()
{
  uint64_t result;

  sub_227D62058();
  result = sub_227E60380();
  qword_255928F40 = result;
  return result;
}

id ReadingHistoryStateEstimator.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id ReadingHistoryStateEstimator.init()()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  char *v7;
  id v8;
  uint64_t v9;
  id v10;
  void *v11;
  id v12;
  void *v13;
  objc_class *v14;
  objc_super v16;

  v1 = sub_227E5F300();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1, v3);
  v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = objc_allocWithZone(MEMORY[0x24BDD1500]);
  v7 = v0;
  v8 = objc_msgSend(v6, sel_init);
  v9 = OBJC_IVAR___BDSReadingHistoryStateEstimator_dateFormatter;
  *(_QWORD *)&v7[OBJC_IVAR___BDSReadingHistoryStateEstimator_dateFormatter] = v8;
  v10 = v8;
  sub_227E5F288();
  v11 = (void *)sub_227E5F2AC();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
  objc_msgSend(v10, sel_setCalendar_, v11);

  v12 = *(id *)&v7[v9];
  v13 = (void *)sub_227E5FF78();
  objc_msgSend(v12, sel_setDateFormat_, v13);

  v14 = (objc_class *)type metadata accessor for ReadingHistoryStateEstimator();
  v16.receiver = v7;
  v16.super_class = v14;
  return objc_msgSendSuper2(&v16, sel_init);
}

uint64_t type metadata accessor for ReadingHistoryStateEstimator()
{
  return objc_opt_self();
}

uint64_t sub_227E00974(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  id v30;
  char *v31;
  void (*v32)(char *, char *, uint64_t);
  char *v33;
  char *v34;
  char *v35;
  void (*v36)(char *, char *, uint64_t);
  uint64_t v37;
  void (*v38)(uint64_t, char *, uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  char *v45;
  char *v46;
  id v47;

  v7 = sub_227D68330(&qword_253F391D0);
  MEMORY[0x24BDAC7A8](v7, v8);
  v10 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_227E5F27C();
  v12 = *(_QWORD *)(v11 - 8);
  v14 = MEMORY[0x24BDAC7A8](v11, v13);
  v46 = (char *)&v40 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14, v16);
  v18 = (char *)&v40 - v17;
  v19 = sub_227D68330(&qword_253F391A8);
  v21 = MEMORY[0x24BDAC7A8](v19, v20);
  v43 = (char *)&v40 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = MEMORY[0x24BDAC7A8](v21, v23);
  v25 = (char *)&v40 + *(int *)(v42 + 48) - v24;
  v45 = (char *)&v40 - v24;
  sub_227E5F228();
  v44 = v25;
  sub_227E5F21C();
  v26 = *(_QWORD *)(a3 + 16);
  if (v26)
  {
    v40 = a1;
    v41 = a2;
    v47 = *(id *)(v3 + OBJC_IVAR___BDSReadingHistoryStateEstimator_dateFormatter);
    swift_bridgeObjectRetain();
    v27 = a3 + 40;
    while (1)
    {
      v28 = a3;
      swift_bridgeObjectRetain();
      v29 = (void *)sub_227E5FF78();
      swift_bridgeObjectRelease();
      v30 = objc_msgSend(v47, sel_dateFromString_, v29);

      if (v30)
      {
        v31 = v46;
        sub_227E5F264();

        v32 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
        v32(v10, v31, v11);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v10, 0, 1, v11);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) != 1)
        {
          v32(v18, v10, v11);
          if ((sub_227E5F240() & 1) != 0)
            (*(void (**)(char *, char *, uint64_t))(v12 + 24))(v45, v18, v11);
          v33 = v44;
          a3 = v28;
          if ((sub_227E5F24C() & 1) != 0)
            (*(void (**)(char *, char *, uint64_t))(v12 + 40))(v33, v18, v11);
          else
            (*(void (**)(char *, uint64_t))(v12 + 8))(v18, v11);
          goto LABEL_5;
        }
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v10, 1, 1, v11);
      }
      sub_227D5809C((uint64_t)v10, &qword_253F391D0);
      a3 = v28;
LABEL_5:
      v27 += 40;
      if (!--v26)
      {
        swift_bridgeObjectRelease();
        a1 = v40;
        a2 = v41;
        break;
      }
    }
  }
  v34 = v43;
  v35 = &v43[*(int *)(v42 + 48)];
  v36 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
  v37 = (uint64_t)v45;
  v36(v43, v45, v11);
  v36(v35, v44, v11);
  v38 = *(void (**)(uint64_t, char *, uint64_t))(v12 + 32);
  v38(a1, v34, v11);
  v38(a2, v35, v11);
  return sub_227D5809C(v37, &qword_253F391A8);
}

uint64_t sub_227E00CC4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t, uint64_t);
  id v17;
  char *v18;
  void *v19;
  void (*v20)(char *, uint64_t);
  id v21;
  char *v22;
  uint64_t v23;
  void *v24;
  id v25;
  uint64_t v26;
  uint64_t v28;
  char *v29;
  char *v30;
  char *v31;
  uint64_t v32;
  unint64_t v33;

  v4 = sub_227D68330(&qword_253F391A8);
  v6 = MEMORY[0x24BDAC7A8](v4, v5);
  v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v6, v9);
  v12 = (char *)&v28 - v11;
  v13 = (char *)&v28 + *(int *)(v10 + 48) - v11;
  v14 = sub_227E5F27C();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 16);
  v30 = v12;
  v16(v12, a1, v14);
  v31 = v13;
  v16(v13, a2, v14);
  v32 = 0;
  v33 = 0xE000000000000000;
  sub_227E60494();
  swift_bridgeObjectRelease();
  v32 = 91;
  v33 = 0xE100000000000000;
  v29 = *(char **)&v29[OBJC_IVAR___BDSReadingHistoryStateEstimator_dateFormatter];
  v17 = v29;
  v18 = &v8[*(int *)(v4 + 48)];
  v16(v8, (uint64_t)v12, v14);
  v16(v18, (uint64_t)v13, v14);
  v19 = (void *)sub_227E5F234();
  v20 = *(void (**)(char *, uint64_t))(v15 + 8);
  v20(v18, v14);
  v20(v8, v14);
  v21 = objc_msgSend(v17, sel_stringFromDate_, v19);

  sub_227E5FF84();
  sub_227E6002C();
  swift_bridgeObjectRelease();
  sub_227E6002C();
  v22 = &v8[*(int *)(v4 + 48)];
  v23 = (uint64_t)v30;
  v16(v8, (uint64_t)v30, v14);
  v16(v22, (uint64_t)v31, v14);
  v24 = (void *)sub_227E5F234();
  v20(v22, v14);
  v20(v8, v14);
  v25 = objc_msgSend(v29, sel_stringFromDate_, v24);

  sub_227E5FF84();
  sub_227E6002C();
  swift_bridgeObjectRelease();
  sub_227E6002C();
  sub_227D51624((unint64_t *)&qword_2559282B8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE988]);
  sub_227E60674();
  sub_227E6002C();
  swift_bridgeObjectRelease();
  sub_227E6002C();
  sub_227E60674();
  sub_227E6002C();
  swift_bridgeObjectRelease();
  sub_227E6002C();
  v26 = v32;
  sub_227D5809C(v23, &qword_253F391A8);
  return v26;
}

_QWORD *sub_227E00FE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  void (*v25)(char *, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t);
  uint64_t v30;
  void (*v31)(char *, uint64_t);
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  _QWORD *v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  int v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  void (*v66)(char *, uint64_t);
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;

  v64 = a4;
  v67 = a2;
  v68 = a3;
  v5 = sub_227E5F300();
  v70 = *(char **)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v6);
  v8 = (char *)&v59 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_227E5F27C();
  v10 = *(_QWORD *)(v9 - 8);
  v12 = MEMORY[0x24BDAC7A8](v9, v11);
  v69 = (char *)&v59 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v12, v14);
  v17 = (char *)&v59 - v16;
  MEMORY[0x24BDAC7A8](v15, v18);
  v20 = (char *)&v59 - v19;
  v21 = sub_227D68330(&qword_253F391A8);
  MEMORY[0x24BDAC7A8](v21, v22);
  v24 = (char *)&v59 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v25(v24, a1, v9);
  v26 = *(int *)(v21 + 48);
  v27 = v5;
  v25(&v24[v26], v67, v9);
  v28 = sub_227E03D48(v68);
  sub_227E5F288();
  v60 = v24;
  sub_227E5F294();
  v29 = (void (*)(char *, uint64_t))*((_QWORD *)v70 + 1);
  v29(v8, v27);
  sub_227E5F288();
  sub_227E5F294();
  v29(v8, v27);
  v30 = sub_227D51624((unint64_t *)&unk_253F391B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE948]);
  v70 = v17;
  if ((sub_227E5FF60() & 1) == 0)
  {
    v66 = v29;
    v67 = v10;
    v68 = v28;
    v65 = *(char **)&v65[OBJC_IVAR___BDSReadingHistoryStateEstimator_dateFormatter];
    v32 = (_QWORD *)MEMORY[0x24BEE4AF8];
    v61 = v27;
    while (1)
    {
      v38 = v30;
      v39 = (void *)sub_227E5F234();
      v40 = objc_msgSend(v65, sel_stringFromDate_, v39);

      v41 = sub_227E5FF84();
      v43 = v42;

      v44 = v68;
      if (!*(_QWORD *)(v68 + 16))
        goto LABEL_14;
      swift_bridgeObjectRetain();
      v45 = sub_227DD01C0(v41, v43);
      if ((v46 & 1) == 0)
        break;
      v47 = *(_QWORD *)(v44 + 56) + 40 * v45;
      v49 = *(_QWORD *)v47;
      v48 = *(_QWORD *)(v47 + 8);
      v50 = *(_QWORD *)(v47 + 16);
      v63 = *(_QWORD *)(v47 + 24);
      v62 = *(unsigned __int8 *)(v47 + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease_n();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v32 = sub_227D5E928(0, v32[2] + 1, 1, v32);
      v52 = v32[2];
      v51 = v32[3];
      if (v52 >= v51 >> 1)
        v32 = sub_227D5E928((_QWORD *)(v51 > 1), v52 + 1, 1, v32);
      v32[2] = v52 + 1;
      v53 = &v32[5 * v52];
      v53[4] = v49;
      v53[5] = v48;
      v54 = v63;
      v53[6] = v50;
      v53[7] = v54;
      *((_BYTE *)v53 + 64) = v62;
      v35 = v61;
LABEL_5:
      sub_227E5F288();
      v36 = v69;
      sub_227E5F204();
      v27 = v35;
      v66(v8, v35);
      v37 = v67;
      v31 = *(void (**)(char *, uint64_t))(v67 + 8);
      v31(v20, v9);
      (*(void (**)(char *, char *, uint64_t))(v37 + 32))(v20, v36, v9);
      v30 = v38;
      if ((sub_227E5FF60() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        goto LABEL_19;
      }
    }
    swift_bridgeObjectRelease();
LABEL_14:
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v32 = sub_227D5E928(0, v32[2] + 1, 1, v32);
    v56 = v32[2];
    v55 = v32[3];
    if (v56 >= v55 >> 1)
      v32 = sub_227D5E928((_QWORD *)(v55 > 1), v56 + 1, 1, v32);
    v32[2] = v56 + 1;
    v33 = &v32[5 * v56];
    v33[4] = v41;
    v33[5] = v43;
    v34 = v64;
    v33[6] = 0;
    v33[7] = v34;
    *((_BYTE *)v33 + 64) = 0;
    v35 = v27;
    goto LABEL_5;
  }
  swift_bridgeObjectRelease();
  v31 = *(void (**)(char *, uint64_t))(v10 + 8);
  v32 = (_QWORD *)MEMORY[0x24BEE4AF8];
LABEL_19:
  v57 = (uint64_t)v60;
  v31(v70, v9);
  v31(v20, v9);
  sub_227D5809C(v57, &qword_253F391A8);
  return v32;
}

uint64_t sub_227E01488@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  char v22;
  char v23;
  uint64_t result;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v6 = sub_227E5F300();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6, v8);
  v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_227E5F0A8();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11, v13);
  v15 = (char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = 0;
  if ((sub_227E5F24C() & 1) != 0)
  {
    sub_227E5F288();
    sub_227D68330(&qword_255928F80);
    v34 = a3;
    v17 = sub_227E5F2E8();
    v32 = v6;
    v33 = a1;
    v18 = v17;
    v19 = *(_QWORD *)(v17 - 8);
    v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
    v21 = swift_allocObject();
    *(_OWORD *)(v21 + 16) = xmmword_227E6F1B0;
    (*(void (**)(unint64_t, _QWORD, uint64_t))(v19 + 104))(v21 + v20, *MEMORY[0x24BDCF220], v18);
    sub_227E03AE0(v21);
    swift_setDeallocating();
    a1 = v33;
    swift_arrayDestroy();
    a3 = v34;
    swift_deallocClassInstance();
    sub_227E5F2A0();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v32);
    v16 = sub_227E5F078();
    v23 = v22;
    (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
    if ((v23 & 1) != 0)
      v16 = 0;
  }
  result = type metadata accessor for ReadingHistory.Streak(0);
  v25 = *(_QWORD *)(a2 + *(int *)(result + 20));
  v26 = __OFSUB__(v25, v16);
  v27 = v25 - v16;
  if (v26)
  {
    __break(1u);
  }
  else
  {
    v28 = result;
    if (v27 >= 2)
    {
      v30 = sub_227E5F27C();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(a3, a1, v30);
      v29 = 0;
      *(_QWORD *)(a3 + *(int *)(v28 + 20)) = v27;
    }
    else
    {
      v29 = 1;
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(a3, v29, 1, v28);
  }
  return result;
}

void sub_227E016DC(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  void (*v96)(char *, uint64_t, uint64_t);
  uint64_t v97;
  uint64_t v98;
  void (*v99)(char *, uint64_t);
  uint64_t v100;
  NSObject *v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  id v110;
  int v111;
  _BOOL4 v112;
  void (*v113)(char *, uint64_t, uint64_t);
  id v114;
  id v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  unint64_t v123;
  unint64_t v124;
  void (*v125)(uint64_t, uint64_t);
  uint64_t v126;
  uint64_t v127;
  char *v128;
  uint64_t v129;
  unint64_t v130;
  unint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  os_log_t v135;
  uint64_t v136;
  uint64_t v137;
  char v138;
  uint64_t v139;
  id v140;
  void (*v141)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v142;
  id v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  void (*v151)(char *, char *, uint64_t);
  void (*v152)(char *, char *, uint64_t);
  _QWORD *v153;
  void (*v154)(uint64_t, uint64_t);
  unint64_t v155;
  id v156;
  uint64_t v157;
  _QWORD *v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  int *v163;
  _QWORD *v164;
  char v165;
  uint64_t v166;
  id v167;
  uint64_t v168;
  unint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t (*v174)(uint64_t, uint64_t, uint64_t);
  int v175;
  uint64_t v176;
  uint64_t v177;
  id v178;
  uint64_t v179;
  os_log_type_t v180;
  void *v181;
  os_log_type_t v182;
  NSObject *v183;
  uint8_t *v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t *v187;
  uint64_t v188;
  char *v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  char *v196;
  char *v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  int v201;
  os_log_type_t v202;
  NSObject *v203;
  NSObject *v204;
  uint8_t *v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  unint64_t v209;
  uint64_t v210;
  unint64_t v211;
  uint64_t v212;
  _QWORD *v213;
  uint64_t v214;
  uint64_t v215;
  char *v216;
  uint64_t v217;
  char *v218;
  char *v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t (*v222)(uint64_t, uint64_t, uint64_t);
  int v223;
  uint64_t v224;
  id v225;
  uint64_t v226;
  uint64_t v227;
  int v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  int v233;
  os_log_type_t v234;
  NSObject *v235;
  uint64_t v236;
  uint64_t v237;
  NSObject *v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  unint64_t v248;
  unint64_t v249;
  uint64_t v250;
  int *v251;
  uint64_t v252;
  uint64_t v253;
  _QWORD *v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  char *v258;
  uint64_t v259;
  _QWORD v260[2];
  uint64_t v261;
  os_log_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  void (*v266)(char *, uint64_t);
  char *v267;
  uint64_t v268;
  uint64_t v269;
  char *v270;
  char *v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  char *v283;
  uint64_t v284;
  uint64_t v285;
  void (*v286)(char *, uint64_t, uint64_t);
  uint64_t v287;
  char *v288;
  uint64_t v289;
  char *v290;
  uint64_t v291;
  char *v292;
  uint64_t v293;
  int v294;
  char *v295;
  char *v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t *v302;
  _QWORD *v303;
  uint64_t v304;
  uint64_t v305;
  id v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;

  v302 = a3;
  v300 = a2;
  v298 = a4;
  v5 = sub_227E5F27C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  v270 = (char *)v260 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v285 = type metadata accessor for ReadingHistory.Streak(0);
  v284 = *(_QWORD *)(v285 - 8);
  MEMORY[0x24BDAC7A8](v285, v9);
  v278 = (uint64_t)v260 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v307 = type metadata accessor for ReadingHistory.State(0);
  v293 = *(_QWORD *)(v307 - 8);
  MEMORY[0x24BDAC7A8](v307, v11);
  v283 = (char *)v260 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_227D68330((uint64_t *)&unk_253F39C20);
  v15 = MEMORY[0x24BDAC7A8](v13, v14);
  v271 = (char *)v260 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v15, v17);
  v265 = (uint64_t)v260 - v19;
  v21 = MEMORY[0x24BDAC7A8](v18, v20);
  v264 = (uint64_t)v260 - v22;
  v24 = MEMORY[0x24BDAC7A8](v21, v23);
  v274 = (uint64_t)v260 - v25;
  v27 = MEMORY[0x24BDAC7A8](v24, v26);
  v272 = (uint64_t)v260 - v28;
  v30 = MEMORY[0x24BDAC7A8](v27, v29);
  v263 = (uint64_t)v260 - v31;
  v33 = MEMORY[0x24BDAC7A8](v30, v32);
  v269 = (uint64_t)v260 - v34;
  v36 = MEMORY[0x24BDAC7A8](v33, v35);
  v275 = (uint64_t)v260 - v37;
  v39 = MEMORY[0x24BDAC7A8](v36, v38);
  v279 = (uint64_t)v260 - v40;
  v42 = MEMORY[0x24BDAC7A8](v39, v41);
  v277 = (uint64_t)v260 - v43;
  v45 = MEMORY[0x24BDAC7A8](v42, v44);
  v296 = (char *)v260 - v46;
  v48 = MEMORY[0x24BDAC7A8](v45, v47);
  v276 = (uint64_t)v260 - v49;
  v51 = MEMORY[0x24BDAC7A8](v48, v50);
  v280 = (uint64_t)v260 - v52;
  v54 = MEMORY[0x24BDAC7A8](v51, v53);
  v281 = (uint64_t)v260 - v55;
  MEMORY[0x24BDAC7A8](v54, v56);
  v282 = (uint64_t)v260 - v57;
  v58 = sub_227E5F300();
  v297 = *(_QWORD *)(v58 - 8);
  MEMORY[0x24BDAC7A8](v58, v59);
  v61 = (char *)v260 - ((v60 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = sub_227D68330(&qword_253F391A8);
  v64 = MEMORY[0x24BDAC7A8](v62, v63);
  v290 = (char *)v260 - ((v65 + 15) & 0xFFFFFFFFFFFFFFF0);
  v67 = MEMORY[0x24BDAC7A8](v64, v66);
  v301 = (uint64_t)v260 - v68;
  v70 = MEMORY[0x24BDAC7A8](v67, v69);
  v303 = (_QWORD *)((char *)v260 - v71);
  v73 = MEMORY[0x24BDAC7A8](v70, v72);
  v295 = (char *)v260 - v74;
  v76 = MEMORY[0x24BDAC7A8](v73, v75);
  v304 = (uint64_t)v260 - v77;
  v79 = MEMORY[0x24BDAC7A8](v76, v78);
  v305 = (uint64_t)v260 - v80;
  v82 = MEMORY[0x24BDAC7A8](v79, v81);
  v84 = (char *)v260 - v83;
  v86 = MEMORY[0x24BDAC7A8](v82, v85);
  v88 = (char *)v260 - v87;
  v90 = MEMORY[0x24BDAC7A8](v86, v89);
  v92 = (char *)v260 - v91;
  MEMORY[0x24BDAC7A8](v90, v93);
  v95 = (char *)v260 - v94;
  v291 = v6;
  v96 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  v96((char *)v260 - v94, a1, v5);
  v97 = (uint64_t)&v95[*(int *)(v62 + 48)];
  v299 = v5;
  v96((char *)v97, v300, v5);
  v98 = (uint64_t)&v92[*(int *)(v62 + 48)];
  sub_227E5F288();
  v292 = v95;
  sub_227E5F294();
  v99 = *(void (**)(char *, uint64_t))(v297 + 8);
  v99(v61, v58);
  sub_227E5F288();
  v273 = v97;
  sub_227E5F294();
  v267 = v61;
  v268 = v58;
  v266 = v99;
  v99(v61, v58);
  v100 = (uint64_t)&v88[*(int *)(v62 + 48)];
  v287 = *(int *)(v307 + 28);
  sub_227E00974((uint64_t)v88, v100, *(uint64_t *)((char *)v302 + v287));
  v294 = sub_227E60248();
  if (qword_255928188 != -1)
    swift_once();
  v101 = qword_255928F40;
  v102 = v62;
  v103 = &v84[*(int *)(v62 + 48)];
  v104 = v299;
  v96(v84, (uint64_t)v92, v299);
  v297 = v98;
  v96(v103, v98, v104);
  sub_227D5DF48((uint64_t)v84, v305, &qword_253F391A8);
  sub_227E03A10((uint64_t)v84, v304);
  v300 = v102;
  v105 = *(int *)(v102 + 48);
  v106 = (uint64_t)v295;
  v107 = &v295[v105];
  v96(v295, (uint64_t)v88, v104);
  v289 = v100;
  v96(v107, v100, v104);
  v108 = (uint64_t)v303;
  sub_227D5DF48(v106, (uint64_t)v303, &qword_253F391A8);
  v109 = v301;
  sub_227E03A10(v106, v301);
  v110 = v306;
  v111 = v294;
  v112 = os_log_type_enabled(v101, (os_log_type_t)v294);
  v286 = v96;
  v306 = v110;
  if (v112)
  {
    v113 = v96;
    v114 = v110;
    v294 = v111;
    v115 = v114;
    v262 = v101;
    v116 = swift_slowAlloc();
    v261 = swift_slowAlloc();
    v308 = v261;
    *(_DWORD *)v116 = 136315394;
    v288 = v88;
    v260[1] = v116 + 4;
    v117 = *(int *)(v300 + 48);
    v118 = (uint64_t)v290;
    v119 = (uint64_t)&v290[v117];
    v120 = v305;
    v121 = v305 + v117;
    v113(v290, v305, v104);
    v113((char *)v119, v121, v104);
    v122 = sub_227E00CC4(v118, v119);
    v295 = v92;
    v124 = v123;
    v125 = *(void (**)(uint64_t, uint64_t))(v291 + 8);
    v125(v119, v104);
    v125(v118, v104);
    v309 = sub_227D634E0(v122, v124, &v308);
    sub_227E603B0();

    swift_bridgeObjectRelease();
    sub_227D5809C(v304, &qword_253F391A8);

    sub_227D5809C(v120, &qword_253F391A8);
    *(_WORD *)(v116 + 12) = 2080;
    v305 = v116 + 14;
    v126 = *(int *)(v300 + 48);
    v127 = v118 + v126;
    v128 = (char *)v303 + v126;
    ((void (*)(uint64_t))v113)(v118);
    v113((char *)v127, (uint64_t)v128, v104);
    v129 = sub_227E00CC4(v118, v127);
    v131 = v130;
    v132 = v127;
    v92 = v295;
    v125(v132, v104);
    v125(v118, v104);
    v133 = v129;
    v88 = v288;
    v134 = v298;
    v309 = sub_227D634E0(v133, v131, &v308);
    sub_227E603B0();

    swift_bridgeObjectRelease();
    sub_227D5809C(v301, &qword_253F391A8);

    sub_227D5809C((uint64_t)v303, &qword_253F391A8);
    v135 = v262;
    _os_log_impl(&dword_227D4F000, v262, (os_log_type_t)v294, "estimateState - new range: %s, existing: %s", (uint8_t *)v116, 0x16u);
    v136 = v261;
    swift_arrayDestroy();
    MEMORY[0x22E2AA8AC](v136, -1, -1);
    MEMORY[0x22E2AA8AC](v116, -1, -1);

    v137 = (uint64_t)v296;
  }
  else
  {
    sub_227D5809C(v304, &qword_253F391A8);
    sub_227D5809C(v305, &qword_253F391A8);

    sub_227D5809C(v109, &qword_253F391A8);
    sub_227D5809C(v108, &qword_253F391A8);
    v137 = (uint64_t)v296;
    v134 = v298;
  }
  v138 = sub_227E5F24C();
  v139 = v297;
  if ((v138 & 1) != 0)
  {
    sub_227E60230();
    v140 = (id)qword_255928F40;
    sub_227E5F564();

    sub_227D5809C((uint64_t)v88, &qword_253F391A8);
    sub_227D5809C((uint64_t)v92, &qword_253F391A8);
    sub_227D5809C((uint64_t)v292, &qword_253F391A8);
    v141 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v293 + 56);
    v142 = v134;
LABEL_16:
    v144 = 1;
    goto LABEL_17;
  }
  if ((sub_227E5F258() & 1) != 0)
  {
    sub_227E60248();
    v143 = (id)qword_255928F40;
    sub_227E5F564();

    sub_227D5809C((uint64_t)v88, &qword_253F391A8);
    sub_227D5809C((uint64_t)v92, &qword_253F391A8);
    sub_227D5809C((uint64_t)v292, &qword_253F391A8);
    sub_227E03A9C((uint64_t)v302, v134);
    v141 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v293 + 56);
    v142 = v134;
    v144 = 0;
LABEL_17:
    v141(v142, v144, 1, v307);
    return;
  }
  v145 = *(uint64_t *)((char *)v302 + v287);
  v146 = *(_QWORD *)(v145 + 16);
  v288 = v88;
  if (v146)
    v147 = *(_QWORD *)(v145 + 40 * v146 + 16);
  else
    v147 = 300;
  v148 = v299;
  v149 = (uint64_t)v290;
  v150 = (uint64_t)&v290[*(int *)(v300 + 48)];
  v151 = (void (*)(char *, char *, uint64_t))v286;
  v286(v290, (uint64_t)v92, v299);
  v152 = v151;
  v151((char *)v150, (char *)v139, v148);
  v153 = sub_227E00FE8(v149, v150, v145, v147);
  v154 = *(void (**)(uint64_t, uint64_t))(v291 + 8);
  v154(v150, v148);
  v154(v149, v148);
  v155 = v153[2];
  if (v155 <= 1)
  {
    swift_bridgeObjectRelease();
    sub_227E60230();
    v156 = (id)qword_255928F40;
    sub_227E5F564();

    sub_227D5809C((uint64_t)v288, &qword_253F391A8);
    v157 = (uint64_t)v92;
LABEL_15:
    sub_227D5809C(v157, &qword_253F391A8);
    sub_227D5809C((uint64_t)v292, &qword_253F391A8);
    v141 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v293 + 56);
    v142 = v298;
    goto LABEL_16;
  }
  v295 = v92;
  v158 = v153 + 4;
  v159 = (uint64_t)&v153[5 * v155 + 4];
  v160 = v153[5 * v155];
  v161 = *(_QWORD *)(v159 - 24);
  v304 = *(_QWORD *)(v159 - 16);
  v305 = v160;
  LODWORD(v306) = *(unsigned __int8 *)(v159 - 8);
  swift_bridgeObjectRetain();
  if ((sub_227E5F240() & 1) != 0)
  {
    v162 = *v302;
    v309 = v162;
    if (v162 < 1)
    {
      v164 = v153;
      v163 = (int *)v307;
    }
    else
    {
      v163 = (int *)v307;
      if ((v306 & 1) == 0)
      {
        if (v155 - 2 < v153[2])
        {
          v164 = v153;
          v165 = v158[5 * v155 - 6];
          v166 = v285;
          if ((v165 & 1) == 0)
          {
            v162 = 0;
            v309 = 0;
          }
          goto LABEL_35;
        }
        __break(1u);
        goto LABEL_75;
      }
      v164 = v153;
    }
    v166 = v285;
LABEL_35:
    v179 = v161;
    v180 = sub_227E60248();
    v181 = (void *)qword_255928F40;
    v182 = v180;
    if (os_log_type_enabled((os_log_t)qword_255928F40, v180))
    {
      v183 = v181;
      v184 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v184 = 134217984;
      v308 = v162;
      sub_227E603B0();
      _os_log_impl(&dword_227D4F000, v183, v182, "estimateState - forward time change, estimated: currentStreak=%ld", v184, 0xCu);
      MEMORY[0x22E2AA8AC](v184, -1, -1);

    }
    swift_beginAccess();
    v185 = v309;
    v186 = v282;
    sub_227D5DF48((uint64_t)v302 + v163[5], v282, (uint64_t *)&unk_253F39C20);
    v187 = (uint64_t *)v283;
    v188 = (uint64_t)&v283[v163[5]];
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v284 + 56))(v188, 1, 1, v166);
    *v187 = v185;
    sub_227DED600(v186, v188);
    v189 = (char *)v187 + v163[6];
    v190 = v304;
    *(_QWORD *)v189 = v179;
    *((_QWORD *)v189 + 1) = v190;
    v189[16] = (char)v306;
    *(uint64_t *)((char *)v187 + v163[7]) = (uint64_t)v164;
    v191 = v298;
    sub_227E03A58((uint64_t)v187, v298);
    swift_bridgeObjectRelease();
    sub_227D5809C((uint64_t)v288, &qword_253F391A8);
    v192 = (uint64_t)v295;
LABEL_38:
    sub_227D5809C(v192, &qword_253F391A8);
    sub_227D5809C((uint64_t)v292, &qword_253F391A8);
    (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v293 + 56))(v191, 0, 1, v163);
    return;
  }
  if ((sub_227E5F24C() & 1) == 0)
    goto LABEL_30;
  v301 = v161;
  sub_227E60248();
  v303 = v153;
  v167 = (id)qword_255928F40;
  v168 = (uint64_t)v303;
  sub_227E5F564();

  v169 = v155 - 2;
  if (v155 - 2 >= *(_QWORD *)(v168 + 16))
  {
LABEL_75:
    __break(1u);
    goto LABEL_76;
  }
  v170 = v285;
  if ((v306 & 1) == 0 && (v158[5 * v169 + 4] & 1) == 0)
  {
    v163 = (int *)v307;
    v171 = (uint64_t)v302 + *(int *)(v307 + 20);
    v172 = v280;
    sub_227D5DF48(v171, v280, (uint64_t *)&unk_253F39C20);
    v173 = v284;
    v174 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v284 + 48);
    v175 = v174(v172, 1, v170);
    sub_227D5809C(v172, (uint64_t *)&unk_253F39C20);
    if (v175 == 1)
    {
      v176 = v281;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v173 + 56))(v281, 1, 1, v170);
      v177 = (uint64_t)v295;
    }
    else
    {
      v199 = v171;
      v200 = v276;
      sub_227D5DF48(v199, v276, (uint64_t *)&unk_253F39C20);
      v201 = v174(v200, 1, v170);
      v177 = (uint64_t)v295;
      v176 = v281;
      if (v201 == 1)
      {
LABEL_76:
        __break(1u);
        goto LABEL_77;
      }
      sub_227E01488(v297, v200, v281);
      sub_227D64BC4(v200, type metadata accessor for ReadingHistory.Streak);
    }
    v202 = sub_227E60248();
    v203 = qword_255928F40;
    sub_227D5DF48(v176, v137, (uint64_t *)&unk_253F39C20);
    if (os_log_type_enabled(v203, v202))
    {
      v204 = v203;
      v205 = (uint8_t *)swift_slowAlloc();
      v206 = swift_slowAlloc();
      v308 = v206;
      *(_DWORD *)v205 = 136315138;
      v207 = v277;
      sub_227D5DF48(v137, v277, (uint64_t *)&unk_253F39C20);
      if (v174(v207, 1, v170) == 1)
      {
        v208 = 7104878;
        sub_227D5809C(v207, (uint64_t *)&unk_253F39C20);
        v209 = 0xE300000000000000;
      }
      else
      {
        v210 = v207;
        v208 = ReadingHistory.Streak.description.getter();
        v209 = v211;
        sub_227D64BC4(v210, type metadata accessor for ReadingHistory.Streak);
      }
      v309 = sub_227D634E0(v208, v209, &v308);
      sub_227E603B0();
      swift_bridgeObjectRelease();
      sub_227D5809C(v137, (uint64_t *)&unk_253F39C20);
      _os_log_impl(&dword_227D4F000, v204, v202, "estimateState - estimated: no currentStreak, longestStreak=%s", v205, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x22E2AA8AC](v206, -1, -1);
      MEMORY[0x22E2AA8AC](v205, -1, -1);

      v177 = (uint64_t)v295;
      v170 = v285;
      v173 = v284;
      v176 = v281;
    }
    else
    {
      sub_227D5809C(v137, (uint64_t *)&unk_253F39C20);
    }
    v212 = v282;
    sub_227D5DF48(v176, v282, (uint64_t *)&unk_253F39C20);
    v213 = v283;
    v214 = v176;
    v215 = (uint64_t)&v283[v163[5]];
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v173 + 56))(v215, 1, 1, v170);
    *v213 = 0;
    sub_227DED600(v212, v215);
    v216 = (char *)v213 + v163[6];
    v217 = v304;
    *(_QWORD *)v216 = v301;
    *((_QWORD *)v216 + 1) = v217;
    v216[16] = 0;
    *(_QWORD *)((char *)v213 + v163[7]) = v303;
    v191 = v298;
    sub_227E03A58((uint64_t)v213, v298);
    swift_bridgeObjectRelease();
    sub_227D5809C(v214, (uint64_t *)&unk_253F39C20);
    sub_227D5809C((uint64_t)v288, &qword_253F391A8);
    v192 = v177;
    goto LABEL_38;
  }
  v193 = *v302;
  if (!*v302)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_227E60248();
    v178 = (id)qword_255928F40;
    goto LABEL_31;
  }
  v194 = *(uint64_t *)((char *)v302 + v287);
  v195 = *(_QWORD *)(v194 + 16);
  if (!v195)
  {
LABEL_30:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_227E60230();
    v178 = (id)qword_255928F40;
LABEL_31:
    sub_227E5F564();

    sub_227D5809C((uint64_t)v288, &qword_253F391A8);
    v157 = (uint64_t)v295;
    goto LABEL_15;
  }
  if (*(_BYTE *)(v194 + 40 * v195 + 24) == 1)
  {
    v196 = v290;
    v197 = &v290[*(int *)(v300 + 48)];
    v152(v290, v288, v148);
    v152(v197, (char *)v289, v148);
    v198 = v278;
    (*(void (**)(uint64_t, char *, uint64_t))(v291 + 32))(v278, v197, v148);
    *(_QWORD *)(v198 + *(int *)(v170 + 20)) = v193;
    v154((uint64_t)v196, v148);
  }
  else
  {
    v218 = v267;
    sub_227E5F2DC();
    v219 = v270;
    sub_227E5F1F8();
    v266(v218, v268);
    v220 = *v302;
    v198 = v278;
    (*(void (**)(uint64_t, char *, uint64_t))(v291 + 32))(v278, v219, v148);
    *(_QWORD *)(v198 + *(int *)(v170 + 20)) = v220;
  }
  v221 = v279;
  sub_227E01488(v273, v198, v279);
  v222 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v284 + 48);
  v223 = v222(v221, 1, v170);
  v224 = v298;
  if (v223 == 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_227E60248();
    v225 = (id)qword_255928F40;
    sub_227E5F564();

    sub_227D64BC4(v198, type metadata accessor for ReadingHistory.Streak);
    sub_227D5809C((uint64_t)v288, &qword_253F391A8);
    sub_227D5809C((uint64_t)v295, &qword_253F391A8);
    sub_227D5809C((uint64_t)v292, &qword_253F391A8);
    sub_227D5809C(v221, (uint64_t *)&unk_253F39C20);
    v141 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v293 + 56);
    v142 = v224;
    goto LABEL_16;
  }
  v226 = (uint64_t)v302 + *(int *)(v307 + 20);
  v227 = v269;
  sub_227D5DF48(v226, v269, (uint64_t *)&unk_253F39C20);
  v228 = v222(v227, 1, v170);
  sub_227D5809C(v227, (uint64_t *)&unk_253F39C20);
  if (v228 == 1)
  {
    v229 = v275;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v284 + 56))(v275, 1, 1, v170);
    v230 = v272;
  }
  else
  {
    v231 = v226;
    v232 = v263;
    sub_227D5DF48(v231, v263, (uint64_t *)&unk_253F39C20);
    v233 = v222(v232, 1, v170);
    v229 = v275;
    v230 = v272;
    if (v233 == 1)
    {
LABEL_77:
      __break(1u);
      return;
    }
    sub_227E01488(v297, v232, v275);
    sub_227D64BC4(v232, type metadata accessor for ReadingHistory.Streak);
  }
  v234 = sub_227E60248();
  v235 = qword_255928F40;
  sub_227D5DF48(v221, v230, (uint64_t *)&unk_253F39C20);
  v236 = v229;
  v237 = v274;
  sub_227D5DF48(v236, v274, (uint64_t *)&unk_253F39C20);
  if (os_log_type_enabled(v235, v234))
  {
    v238 = v235;
    v239 = swift_slowAlloc();
    v240 = swift_slowAlloc();
    v308 = v240;
    *(_DWORD *)v239 = 134218242;
    v241 = v264;
    sub_227D5DF48(v230, v264, (uint64_t *)&unk_253F39C20);
    v242 = v240;
    if (v222(v241, 1, v170) == 1)
    {
      sub_227D5809C(v241, (uint64_t *)&unk_253F39C20);
      v243 = v170;
      v244 = 0;
    }
    else
    {
      v243 = v170;
      v244 = *(_QWORD *)(v241 + *(int *)(v170 + 20));
      sub_227D64BC4(v241, type metadata accessor for ReadingHistory.Streak);
    }
    sub_227D5809C(v272, (uint64_t *)&unk_253F39C20);
    v309 = v244;
    sub_227E603B0();
    *(_WORD *)(v239 + 12) = 2080;
    v246 = v265;
    sub_227D5DF48(v274, v265, (uint64_t *)&unk_253F39C20);
    if (v222(v246, 1, v243) == 1)
    {
      v247 = 7104878;
      sub_227D5809C(v246, (uint64_t *)&unk_253F39C20);
      v248 = 0xE300000000000000;
    }
    else
    {
      v247 = ReadingHistory.Streak.description.getter();
      v248 = v249;
      sub_227D64BC4(v246, type metadata accessor for ReadingHistory.Streak);
    }
    v245 = (uint64_t)v271;
    v309 = sub_227D634E0(v247, v248, &v308);
    sub_227E603B0();
    swift_bridgeObjectRelease();
    sub_227D5809C(v274, (uint64_t *)&unk_253F39C20);
    _os_log_impl(&dword_227D4F000, v238, v234, "estimateState - estimated: currentStreak=%ld, longestStreak=%s", (uint8_t *)v239, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x22E2AA8AC](v242, -1, -1);
    MEMORY[0x22E2AA8AC](v239, -1, -1);

    v170 = v285;
    v221 = v279;
  }
  else
  {
    sub_227D5809C(v230, (uint64_t *)&unk_253F39C20);
    sub_227D5809C(v237, (uint64_t *)&unk_253F39C20);
    v245 = (uint64_t)v271;
  }
  sub_227D5DF48(v221, v245, (uint64_t *)&unk_253F39C20);
  if (v222(v245, 1, v170) == 1)
  {
    sub_227D5809C(v245, (uint64_t *)&unk_253F39C20);
    v250 = 0;
  }
  else
  {
    v250 = *(_QWORD *)(v245 + *(int *)(v170 + 20));
    sub_227D64BC4(v245, type metadata accessor for ReadingHistory.Streak);
  }
  v251 = (int *)v307;
  v252 = (uint64_t)v292;
  v253 = v293;
  v254 = v283;
  v255 = v275;
  v256 = v282;
  sub_227D5DF48(v275, v282, (uint64_t *)&unk_253F39C20);
  v257 = (uint64_t)v254 + v251[5];
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v284 + 56))(v257, 1, 1, v170);
  *v254 = v250;
  sub_227DED600(v256, v257);
  v258 = (char *)v254 + v251[6];
  v259 = v304;
  *(_QWORD *)v258 = v301;
  *((_QWORD *)v258 + 1) = v259;
  v258[16] = (char)v306;
  *(_QWORD *)((char *)v254 + v251[7]) = v303;
  sub_227E03A58((uint64_t)v254, v224);
  swift_bridgeObjectRelease();
  sub_227D5809C(v255, (uint64_t *)&unk_253F39C20);
  sub_227D64BC4(v278, type metadata accessor for ReadingHistory.Streak);
  sub_227D5809C((uint64_t)v288, &qword_253F391A8);
  sub_227D5809C((uint64_t)v295, &qword_253F391A8);
  sub_227D5809C(v252, &qword_253F391A8);
  sub_227D5809C(v279, (uint64_t *)&unk_253F39C20);
  (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v253 + 56))(v224, 0, 1, v251);
}

uint64_t sub_227E03208(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  void (*v36)(char *, uint64_t);
  uint64_t v37;
  void (*v38)(char *, uint64_t, uint64_t);
  void (*v39)(char *, char *, uint64_t);
  char *v40;
  char *v41;
  uint64_t v42;
  char *v43;
  char *v44;
  char *v45;
  char *v46;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;

  v56 = a1;
  v57 = a2;
  v54 = sub_227D68330(&qword_253F391A8);
  v5 = MEMORY[0x24BDAC7A8](v54, v4);
  v55 = (char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5, v7);
  v53 = (char *)&v48 - v8;
  v9 = sub_227E5F2E8();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9, v11);
  v13 = (char *)&v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = sub_227E5F300();
  v51 = *(_QWORD *)(v49 - 8);
  MEMORY[0x24BDAC7A8](v49, v14);
  v16 = (char *)&v48 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_227D68330(&qword_253F391D0);
  MEMORY[0x24BDAC7A8](v17, v18);
  v20 = (char *)&v48 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_227E5F27C();
  v22 = *(_QWORD *)(v21 - 8);
  v24 = MEMORY[0x24BDAC7A8](v21, v23);
  v52 = (char *)&v48 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = MEMORY[0x24BDAC7A8](v24, v26);
  v50 = (char *)&v48 - v28;
  v30 = MEMORY[0x24BDAC7A8](v27, v29);
  v32 = (char *)&v48 - v31;
  MEMORY[0x24BDAC7A8](v30, v33);
  v35 = (char *)&v48 - v34;
  sub_227E5F288();
  (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v13, *MEMORY[0x24BDCF220], v9);
  sub_227E5F2D0();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
  v36 = *(void (**)(char *, uint64_t))(v51 + 8);
  v37 = v49;
  v36(v16, v49);
  v38 = *(void (**)(char *, uint64_t, uint64_t))(v22 + 16);
  v51 = a3;
  v38(v32, a3, v21);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21) == 1)
  {
    v39 = *(void (**)(char *, char *, uint64_t))(v22 + 32);
    v39(v35, v32, v21);
    sub_227D5809C((uint64_t)v20, &qword_253F391D0);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v22 + 8))(v32, v21);
    v39 = *(void (**)(char *, char *, uint64_t))(v22 + 32);
    v39(v35, v20, v21);
  }
  sub_227E5F288();
  v40 = v50;
  sub_227E5F294();
  v36(v16, v37);
  sub_227E5F288();
  v41 = v52;
  sub_227E5F294();
  v36(v16, v37);
  (*(void (**)(char *, uint64_t))(v22 + 8))(v35, v21);
  v43 = v53;
  v42 = v54;
  v44 = &v53[*(int *)(v54 + 48)];
  v39(v53, v40, v21);
  v39(v44, v41, v21);
  v45 = v55;
  v46 = &v55[*(int *)(v42 + 48)];
  v39(v55, v43, v21);
  v39(v46, v44, v21);
  v39(v56, v45, v21);
  return ((uint64_t (*)(uint64_t, char *, uint64_t))v39)(v57, v46, v21);
}

uint64_t sub_227E035A0(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t, uint64_t);
  uint64_t v28;
  void (*v29)(uint64_t, uint64_t);
  BDSReadingHistoryStateInfo *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;

  v35 = a2;
  v36 = a3;
  v34 = a1;
  v3 = sub_227D68330(&qword_255928F78);
  v5 = MEMORY[0x24BDAC7A8](v3, v4);
  v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5, v8);
  v10 = (char *)&v34 - v9;
  v11 = type metadata accessor for ReadingHistory.State(0);
  v37 = *(_QWORD *)(v11 - 8);
  v38 = v11;
  MEMORY[0x24BDAC7A8](v11, v12);
  v14 = (uint64_t *)((char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v15 = sub_227D68330(&qword_253F391A8);
  v17 = MEMORY[0x24BDAC7A8](v15, v16);
  v19 = (char *)&v34 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = MEMORY[0x24BDAC7A8](v17, v20);
  v23 = (char *)&v34 - v22;
  v24 = (char *)&v34 + *(int *)(v21 + 48) - v22;
  v25 = sub_227E5F27C();
  v26 = *(_QWORD *)(v25 - 8);
  v27 = *(void (**)(char *, uint64_t, uint64_t))(v26 + 16);
  v27(v23, v34, v25);
  v27(v24, v35, v25);
  static ReadingHistory.State.from(info:)(v36, v14);
  v28 = (uint64_t)&v19[*(int *)(v15 + 48)];
  v27(v19, (uint64_t)v23, v25);
  v27((char *)v28, (uint64_t)v24, v25);
  sub_227E016DC((uint64_t)v19, v28, v14, (uint64_t)v10);
  v29 = *(void (**)(uint64_t, uint64_t))(v26 + 8);
  v29(v28, v25);
  v29((uint64_t)v19, v25);
  sub_227D5DF48((uint64_t)v10, (uint64_t)v7, &qword_255928F78);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v7, 1, v38) == 1)
  {
    sub_227D5809C((uint64_t)v10, &qword_255928F78);
    sub_227D64BC4((uint64_t)v14, type metadata accessor for ReadingHistory.State);
    sub_227D5809C((uint64_t)v23, &qword_253F391A8);
    sub_227D5809C((uint64_t)v7, &qword_255928F78);
    return 0;
  }
  else
  {
    ReadingHistory.State.toInfo()(v30);
    v31 = v32;
    sub_227D5809C((uint64_t)v10, &qword_255928F78);
    sub_227D64BC4((uint64_t)v14, type metadata accessor for ReadingHistory.State);
    sub_227D5809C((uint64_t)v23, &qword_253F391A8);
    sub_227D64BC4((uint64_t)v7, type metadata accessor for ReadingHistory.State);
  }
  return v31;
}

id ReadingHistoryStateEstimator.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ReadingHistoryStateEstimator();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t method lookup function for ReadingHistoryStateEstimator()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_227E03A10(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_227D68330(&qword_253F391A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_227E03A58(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ReadingHistory.State(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_227E03A9C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ReadingHistory.State(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_227E03AE0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t);
  uint64_t result;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, uint64_t, uint64_t);
  uint64_t v34;

  v2 = sub_227E5F2E8();
  v3 = *(_QWORD *)(v2 - 8);
  v5 = MEMORY[0x24BDAC7A8](v2, v4);
  v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5, v8);
  v10 = (char *)&v29 - v9;
  v11 = *(_QWORD *)(a1 + 16);
  if (v11)
  {
    sub_227D68330(&qword_255928F88);
    v12 = sub_227E60488();
    v13 = 0;
    v14 = *(unsigned __int8 *)(v3 + 80);
    v30 = v11;
    v31 = a1 + ((v14 + 32) & ~v14);
    v15 = *(_QWORD *)(v3 + 72);
    v33 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    v34 = v12 + 56;
    while (1)
    {
      v32 = v13;
      v33(v10, v31 + v15 * v13, v2);
      sub_227D51624(&qword_255928F90, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF290], MEMORY[0x24BDCF2A8]);
      v16 = sub_227E5FF3C();
      v17 = ~(-1 << *(_BYTE *)(v12 + 32));
      v18 = v16 & v17;
      v19 = (v16 & (unint64_t)v17) >> 6;
      v20 = *(_QWORD *)(v34 + 8 * v19);
      v21 = 1 << (v16 & v17);
      if ((v21 & v20) != 0)
      {
        do
        {
          v33(v7, *(_QWORD *)(v12 + 48) + v18 * v15, v2);
          sub_227D51624(qword_255928F98, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF290], MEMORY[0x24BDCF2C0]);
          v22 = sub_227E5FF6C();
          v23 = v3;
          v24 = *(void (**)(char *, uint64_t))(v3 + 8);
          v24(v7, v2);
          if ((v22 & 1) != 0)
          {
            v24(v10, v2);
            v3 = v23;
            v11 = v30;
            goto LABEL_4;
          }
          v18 = (v18 + 1) & v17;
          v19 = v18 >> 6;
          v20 = *(_QWORD *)(v34 + 8 * (v18 >> 6));
          v21 = 1 << v18;
          v3 = v23;
        }
        while ((v20 & (1 << v18)) != 0);
        v11 = v30;
      }
      *(_QWORD *)(v34 + 8 * v19) = v21 | v20;
      result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(v12 + 48) + v18 * v15, v10, v2);
      v26 = *(_QWORD *)(v12 + 16);
      v27 = __OFADD__(v26, 1);
      v28 = v26 + 1;
      if (v27)
        break;
      *(_QWORD *)(v12 + 16) = v28;
LABEL_4:
      v13 = v32 + 1;
      if (v32 + 1 == v11)
        return v12;
    }
    __break(1u);
  }
  else
  {
    return MEMORY[0x24BEE4B08];
  }
  return result;
}

uint64_t sub_227E03D48(uint64_t a1)
{
  uint64_t v1;
  _BYTE *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char isUniquelyReferenced_nonNull_native;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  unint64_t v17;
  char v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  uint64_t result;
  uint64_t v25;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return MEMORY[0x24BEE4B00];
  v2 = (_BYTE *)(swift_bridgeObjectRetain() + 64);
  v3 = (_QWORD *)MEMORY[0x24BEE4B00];
  while (1)
  {
    v25 = v1;
    v6 = *((_QWORD *)v2 - 4);
    v5 = *((_QWORD *)v2 - 3);
    v8 = *((_QWORD *)v2 - 2);
    v7 = *((_QWORD *)v2 - 1);
    v9 = *v2;
    swift_bridgeObjectRetain_n();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v12 = sub_227DD01C0(v6, v5);
    v13 = v3[2];
    v14 = (v11 & 1) == 0;
    v15 = v13 + v14;
    if (__OFADD__(v13, v14))
      break;
    v16 = v11;
    if (v3[3] >= v15)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        if ((v11 & 1) != 0)
          goto LABEL_3;
      }
      else
      {
        sub_227DD28B4();
        if ((v16 & 1) != 0)
          goto LABEL_3;
      }
    }
    else
    {
      sub_227DD0A54(v15, isUniquelyReferenced_nonNull_native);
      v17 = sub_227DD01C0(v6, v5);
      if ((v16 & 1) != (v18 & 1))
        goto LABEL_21;
      v12 = v17;
      if ((v16 & 1) != 0)
      {
LABEL_3:
        v4 = v3[7] + 40 * v12;
        swift_bridgeObjectRelease();
        *(_QWORD *)v4 = v6;
        *(_QWORD *)(v4 + 8) = v5;
        *(_QWORD *)(v4 + 16) = v8;
        *(_QWORD *)(v4 + 24) = v7;
        *(_BYTE *)(v4 + 32) = v9;
        goto LABEL_4;
      }
    }
    v3[(v12 >> 6) + 8] |= 1 << v12;
    v19 = (uint64_t *)(v3[6] + 16 * v12);
    *v19 = v6;
    v19[1] = v5;
    v20 = v3[7] + 40 * v12;
    *(_QWORD *)v20 = v6;
    *(_QWORD *)(v20 + 8) = v5;
    *(_QWORD *)(v20 + 16) = v8;
    *(_QWORD *)(v20 + 24) = v7;
    *(_BYTE *)(v20 + 32) = v9;
    v21 = v3[2];
    v22 = __OFADD__(v21, 1);
    v23 = v21 + 1;
    if (v22)
      goto LABEL_20;
    v3[2] = v23;
    swift_bridgeObjectRetain();
LABEL_4:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v2 += 40;
    v1 = v25 - 1;
    if (v25 == 1)
    {
      swift_bridgeObjectRelease();
      return (uint64_t)v3;
    }
  }
  __break(1u);
LABEL_20:
  __break(1u);
LABEL_21:
  result = sub_227E606B0();
  __break(1u);
  return result;
}

uint64_t static CRDTModelContextStore.persistentContext()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  void (*v23)(char *, uint64_t);
  void *v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  id v31;
  void *v32;
  unsigned int v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  void *v38;
  void *v39;
  uint64_t v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(char *, uint64_t);
  uint64_t v49;
  char *v50;
  uint64_t v51;
  char *v52;
  char *v53;
  void (*v54)(char *, uint64_t);
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  __int128 v58;
  __int128 v59;
  uint64_t v60;
  uint64_t v61;

  v61 = *MEMORY[0x24BDAC8D0];
  v0 = sub_227D68330(&qword_253F391A0);
  MEMORY[0x24BDAC7A8](v0, v1);
  v53 = (char *)&v51 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_227E5F0CC();
  v55 = *(_QWORD *)(v3 - 8);
  v56 = v3;
  MEMORY[0x24BDAC7A8](v3, v4);
  v6 = (char *)&v51 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_227E5F1B0();
  v8 = *(_QWORD *)(v7 - 8);
  v10 = MEMORY[0x24BDAC7A8](v7, v9);
  v52 = (char *)&v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v10, v12);
  v15 = (char *)&v51 - v14;
  v17 = MEMORY[0x24BDAC7A8](v13, v16);
  v19 = (char *)&v51 - v18;
  MEMORY[0x24BDAC7A8](v17, v20);
  v22 = (char *)&v51 - v21;
  sub_227E0440C();
  sub_227E0440C();
  sub_227E04504();
  sub_227E5F18C();
  swift_bridgeObjectRelease();
  v51 = v8;
  v23 = *(void (**)(char *, uint64_t))(v8 + 8);
  v57 = v7;
  v54 = v23;
  v23(v15, v7);
  sub_227E60218();
  if (qword_253F39F30 != -1)
    swift_once();
  v24 = (void *)qword_253F39F28;
  sub_227D68330(&qword_253F3B090);
  v25 = swift_allocObject();
  *(_OWORD *)(v25 + 16) = xmmword_227E6F1B0;
  v26 = v24;
  v27 = sub_227E5F150();
  v29 = v28;
  *(_QWORD *)(v25 + 56) = MEMORY[0x24BEE0D00];
  v30 = sub_227D57A70();
  *(_QWORD *)(v25 + 64) = v30;
  *(_QWORD *)(v25 + 32) = v27;
  *(_QWORD *)(v25 + 40) = v29;
  sub_227E5F564();

  swift_bridgeObjectRelease();
  sub_227E5F0C0();
  sub_227E5F0B4();
  v31 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  v32 = (void *)sub_227E5F174();
  *(_QWORD *)&v58 = 0;
  v33 = objc_msgSend(v31, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v32, 1, 0, &v58);

  if (v33)
  {
    v34 = (id)v58;
    sub_227E5F168();
    sub_227E5FE4C();
    v35 = v51;
    v36 = v57;
    (*(void (**)(char *, char *, uint64_t))(v51 + 16))(v52, v19, v57);
    v60 = 0;
    v58 = 0u;
    v59 = 0u;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v35 + 56))(v53, 1, 1, v36);
    v49 = sub_227E5FE40();
    (*(void (**)(char *, uint64_t))(v55 + 8))(v6, v56);
    v50 = v19;
  }
  else
  {
    v37 = (id)v58;
    v38 = (void *)sub_227E5F144();

    swift_willThrow();
    sub_227E60230();
    v39 = (void *)qword_253F39F28;
    v40 = swift_allocObject();
    *(_OWORD *)(v40 + 16) = xmmword_227E6F040;
    v41 = v39;
    v42 = sub_227E5F150();
    v43 = MEMORY[0x24BEE0D00];
    *(_QWORD *)(v40 + 56) = MEMORY[0x24BEE0D00];
    *(_QWORD *)(v40 + 64) = v30;
    *(_QWORD *)(v40 + 32) = v42;
    *(_QWORD *)(v40 + 40) = v44;
    swift_getErrorValue();
    v45 = sub_227E606D4();
    *(_QWORD *)(v40 + 96) = v43;
    *(_QWORD *)(v40 + 104) = v30;
    *(_QWORD *)(v40 + 72) = v45;
    *(_QWORD *)(v40 + 80) = v46;
    sub_227E5F564();

    swift_bridgeObjectRelease();
    sub_227E5FE4C();
    v60 = 0;
    v58 = 0u;
    v59 = 0u;
    v49 = MEMORY[0x22E2A9478](0, &v58);

    sub_227E04578((uint64_t)&v58);
    (*(void (**)(char *, uint64_t))(v55 + 8))(v6, v56);
    v50 = v19;
    v36 = v57;
  }
  v47 = v54;
  v54(v50, v36);
  v47(v22, v36);
  return v49;
}

uint64_t sub_227E0440C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  id v5;
  id v6;
  uint64_t v8;

  v0 = sub_227E5F1B0();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0, v2);
  v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = objc_msgSend((id)objc_opt_self(), sel_books);
  v6 = objc_msgSend(v5, sel_containerURL);

  sub_227E5F198();
  sub_227E5F18C();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v4, v0);
}

uint64_t sub_227E04504()
{
  uint64_t v1;

  swift_getMetatypeMetadata();
  v1 = sub_227E5FFD8();
  swift_bridgeObjectRetain();
  sub_227E6002C();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_227E04578(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_227D68330((uint64_t *)&unk_255928A80);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t CRDTModelContextStore.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t CRDTModelContextStore.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_227E045D0()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for CRDTModelContextStore(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_227D6837C(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for CRDTModelContextStore);
}

uint64_t method lookup function for CRDTModelContextStore()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ReadingHistoryUpdateCollecting.readingTimeDidIncrement(date:day:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t ReadingHistoryDay.description.getter()
{
  uint64_t v1;

  sub_227E5FE58();
  v1 = sub_227E60674();
  sub_227E6002C();
  type metadata accessor for ReadingHistoryDay(0);
  sub_227D68330(&qword_253F3AEE0);
  sub_227E5F984();
  sub_227E60674();
  sub_227E6002C();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_227E046E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  unsigned int (*v20)(char *, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  uint64_t v28;

  v26 = a2;
  v28 = a3;
  v23 = a1;
  v3 = sub_227D68330((uint64_t *)&unk_255928E70);
  v24 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3, v4);
  v6 = (uint64_t *)((char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = sub_227D68330(&qword_255929188);
  MEMORY[0x24BDAC7A8](v7, v8);
  v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_227D68330(&qword_253F3AF40);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11, v13);
  v15 = (char *)&v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_227D68330(&qword_255929190);
  v25 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16, v17);
  v19 = (char *)&v22 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v15, v23, v11);
  sub_227D515E4(&qword_255929198, &qword_253F3AF40, MEMORY[0x24BE184A8]);
  sub_227E60080();
  sub_227D515E4(&qword_2559291A0, &qword_255929190, MEMORY[0x24BE18238]);
  sub_227E603A4();
  v20 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48);
  while (v20(v10, 1, v3) != 1)
  {
    sub_227D5B0DC((uint64_t)v10, (uint64_t)v6, (uint64_t *)&unk_255928E70);
    sub_227E22960(&v27, v28, *v6);
    sub_227D5809C((uint64_t)v6, (uint64_t *)&unk_255928E70);
    sub_227E603A4();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v19, v16);
}

uint64_t sub_227E04930(uint64_t a1, void (*a2)(uint64_t *__return_ptr, uint64_t *, char *), uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  unsigned int (*v22)(char *, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t *__return_ptr, uint64_t *, char *);
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v28 = a2;
  v29 = a3;
  v5 = sub_227D68330(&qword_255928E40);
  v25 = *(_QWORD *)(v5 - 8);
  v26 = v5;
  MEMORY[0x24BDAC7A8](v5, v6);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_227D68330(&qword_255928EF0);
  MEMORY[0x24BDAC7A8](v9, v10);
  v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_227D68330(&qword_253F3AF30);
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13, v15);
  v17 = (char *)&v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_227D68330(&qword_255928EF8);
  v27 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18, v19);
  v21 = (char *)&v25 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = a1;
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v17, v31, v13);
  sub_227D515E4(&qword_255928F00, &qword_253F3AF30, MEMORY[0x24BE184A8]);
  sub_227E60080();
  sub_227D515E4((unint64_t *)&unk_255928F08, &qword_255928EF8, MEMORY[0x24BE18238]);
  v30 = v21;
  v31 = v18;
  sub_227E603A4();
  v22 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48);
  v23 = v26;
  if (((unsigned int (*)(char *, uint64_t))v22)(v12, 1) != 1)
  {
    do
    {
      sub_227D5B0DC((uint64_t)v12, (uint64_t)v8, &qword_255928E40);
      v28(&v32, &v33, v8);
      sub_227D5809C((uint64_t)v8, &qword_255928E40);
      if (v3)
        break;
      a1 = v32;
      v33 = v32;
      sub_227E603A4();
    }
    while (v22(v12, 1, v23) != 1);
  }
  (*(void (**)(char *, uint64_t))(v27 + 8))(v30, v31);
  return a1;
}

uint64_t ReadingHistoryModel.DayKey.init(_:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void (*v13)(char *, _QWORD, uint64_t);
  uint64_t v14;
  void (*v15)(char *, uint64_t);
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t *v24;

  v24 = a2;
  v3 = sub_227E5F2E8();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3, v5);
  v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_227E5F300();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8, v10);
  v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_227E5F288();
  v13 = *(void (**)(char *, _QWORD, uint64_t))(v4 + 104);
  v13(v7, *MEMORY[0x24BDCF240], v3);
  v14 = sub_227E5F2F4();
  v15 = *(void (**)(char *, uint64_t))(v4 + 8);
  v15(v7, v3);
  v13(v7, *MEMORY[0x24BDCF250], v3);
  v16 = sub_227E5F2F4();
  result = ((uint64_t (*)(char *, uint64_t))v15)(v7, v3);
  v18 = 100 * v14;
  if ((unsigned __int128)(v14 * (__int128)100) >> 64 == (100 * v14) >> 63)
  {
    v19 = v18 + v16;
    if (!__OFADD__(v18, v16))
    {
      v13(v7, *MEMORY[0x24BDCF220], v3);
      v20 = sub_227E5F2F4();
      v21 = sub_227E5F27C();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 8))(a1, v21);
      v15(v7, v3);
      result = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v12, v8);
      v22 = v24;
      *v24 = v19;
      v22[1] = v20;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_227E04D68@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v26;
  _QWORD v27[2];

  v3 = sub_227E5F300();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3, v5);
  v7 = (char *)v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_227D68330(&qword_253F391F0);
  MEMORY[0x24BDAC7A8](v8, v9);
  v11 = (char *)v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_227D68330(&qword_253F391E8);
  MEMORY[0x24BDAC7A8](v12, v13);
  v15 = (char *)v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_227E5F0A8();
  v17 = *(_QWORD *)(v16 - 8);
  result = MEMORY[0x24BDAC7A8](v16, v18);
  v21 = (char *)v27 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = 100 * *v1;
  if ((unsigned __int128)(*v1 * (__int128)100) >> 64 != v22 >> 63)
  {
    __break(1u);
    goto LABEL_7;
  }
  v23 = v1[1];
  if (__OFADD__(v22, v23))
  {
LABEL_7:
    __break(1u);
    return result;
  }
  if (v22 + v23 > 9999)
  {
    v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
    v27[1] = a1;
    v25(v15, 1, 1, v3);
    v26 = sub_227E5F30C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v11, 1, 1, v26);
    sub_227E5F09C();
    sub_227E5F288();
    sub_227E5F2B8();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
    return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v21, v16);
  }
  else
  {
    v24 = sub_227E5F27C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(a1, 1, 1, v24);
  }
}

BOOL sub_227E05058(uint64_t (*a1)(uint64_t, uint64_t, uint64_t, uint64_t), int a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t (*v25)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  BOOL v28;
  char v29;
  uint64_t v31;
  char *v32;
  int v33;
  uint64_t v34;

  v33 = a2;
  v3 = sub_227E5F27C();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3, v5);
  v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_227D68330(&qword_253F391D0);
  v10 = MEMORY[0x24BDAC7A8](v8, v9);
  v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10, v13);
  v15 = (char *)&v31 - v14;
  v16 = sub_227D68330(&qword_253F39F90);
  MEMORY[0x24BDAC7A8](v16, v17);
  v19 = (char *)&v31 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  ReadingHistoryModel.readingHistoryDay(for:)((uint64_t)v19);
  v20 = type metadata accessor for ReadingHistoryDay(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 48))(v19, 1, v20) == 1)
  {
    sub_227D5809C((uint64_t)v19, &qword_253F39F90);
  }
  else
  {
    v21 = sub_227E5FE58();
    v32 = v12;
    v22 = v4;
    v23 = v3;
    v24 = v7;
    v25 = a1;
    v26 = v21;
    sub_227D68330(&qword_253F3AEE0);
    sub_227E5F984();
    v27 = v34;
    sub_227D64BC4((uint64_t)v19, type metadata accessor for ReadingHistoryDay);
    v28 = v26 < v27;
    a1 = v25;
    v7 = v24;
    v3 = v23;
    v4 = v22;
    v12 = v32;
    if (!v28)
      return 1;
  }
  if ((v33 & 1) != 0)
  {
    sub_227E0C8B8(a1, (uint64_t)v15);
    sub_227D5DF48((uint64_t)v15, (uint64_t)v12, &qword_253F391D0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v12, 1, v3) == 1)
    {
      sub_227D5809C((uint64_t)v15, &qword_253F391D0);
      sub_227D5809C((uint64_t)v12, &qword_253F391D0);
      return 0;
    }
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v7, v12, v3);
    v29 = sub_227E5F24C();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
    sub_227D5809C((uint64_t)v15, &qword_253F391D0);
    return (v29 & 1) != 0;
  }
  return 0;
}

uint64_t sub_227E052F0(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t (*v33)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(void);
  uint64_t v39;
  void (*v40)(void);
  char *v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  char v48;
  uint64_t result;
  BOOL v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  __int128 v58;
  unsigned int v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void (*v64)(void);
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  char *v71;
  int v72;
  uint64_t v73;
  uint64_t v74;

  v3 = v2;
  v72 = a2;
  v5 = sub_227D68330(&qword_253F39F90);
  MEMORY[0x24BDAC7A8](v5, v6);
  v8 = (char *)&v56 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for ReadingHistoryDay(0);
  v67 = *(_QWORD *)(v9 - 8);
  v68 = v9;
  MEMORY[0x24BDAC7A8](v9, v10);
  v73 = (uint64_t)&v56 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_227E5F0A8();
  v61 = *(_QWORD *)(v12 - 8);
  v62 = v12;
  MEMORY[0x24BDAC7A8](v12, v13);
  v60 = (char *)&v56 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_227D68330(&qword_253F391D0);
  v17 = MEMORY[0x24BDAC7A8](v15, v16);
  v19 = (char *)&v56 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17, v20);
  v22 = (char *)&v56 - v21;
  v23 = sub_227E5F27C();
  v24 = *(_QWORD *)(v23 - 8);
  v26 = MEMORY[0x24BDAC7A8](v23, v25);
  v66 = (char *)&v56 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = MEMORY[0x24BDAC7A8](v26, v28);
  v65 = (char *)&v56 - v30;
  MEMORY[0x24BDAC7A8](v29, v31);
  v33 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&v56 - v32);
  v34 = sub_227E5F300();
  v56 = *(_QWORD *)(v34 - 8);
  v57 = v34;
  MEMORY[0x24BDAC7A8](v34, v35);
  v71 = (char *)&v56 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_227E5F288();
  (*(void (**)(uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t), uint64_t, uint64_t))(v24 + 16))(v33, a1, v23);
  v37 = 0;
  v59 = *MEMORY[0x24BDCF220];
  v58 = xmmword_227E6F1B0;
  v69 = v22;
  v70 = v19;
  v63 = v2;
  while (1)
  {
    while (1)
    {
      if ((v72 & 1) == 0)
        goto LABEL_15;
      sub_227E0C8B8(v33, (uint64_t)v22);
      sub_227D5DF48((uint64_t)v22, (uint64_t)v19, &qword_253F391D0);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v19, 1, v23) == 1)
        break;
      v40 = *(void (**)(void))(v24 + 32);
      v41 = v65;
      v40();
      if ((sub_227E5F24C() & 1) == 0)
      {
        (*(void (**)(char *, uint64_t))(v24 + 8))(v41, v23);
        v39 = (uint64_t)v22;
        goto LABEL_14;
      }
      v64 = v40;
      sub_227D68330(&qword_255928F80);
      v42 = sub_227E5F2E8();
      v43 = *(_QWORD *)(v42 - 8);
      v44 = (*(unsigned __int8 *)(v43 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80);
      v45 = swift_allocObject();
      *(_OWORD *)(v45 + 16) = v58;
      (*(void (**)(unint64_t, _QWORD, uint64_t))(v43 + 104))(v45 + v44, v59, v42);
      sub_227E03AE0(v45);
      swift_setDeallocating();
      swift_arrayDestroy();
      swift_deallocClassInstance();
      v46 = v60;
      sub_227E5F2A0();
      v22 = v69;
      swift_bridgeObjectRelease();
      v47 = sub_227E5F078();
      LOBYTE(v44) = v48;
      (*(void (**)(char *, uint64_t))(v61 + 8))(v46, v62);
      sub_227D5809C((uint64_t)v22, &qword_253F391D0);
      result = (*(uint64_t (**)(uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t), uint64_t))(v24 + 8))(v33, v23);
      if ((v44 & 1) != 0 || v47 < 1)
      {
        v3 = v63;
        v38 = v64;
        v19 = v70;
      }
      else
      {
        v50 = __OFADD__(v37, v47);
        v37 += v47;
        v3 = v63;
        v38 = v64;
        v19 = v70;
        if (v50)
          goto LABEL_23;
      }
      ((void (*)(uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t), char *, uint64_t))v38)(v33, v65, v23);
    }
    sub_227D5809C((uint64_t)v22, &qword_253F391D0);
    v39 = (uint64_t)v19;
LABEL_14:
    sub_227D5809C(v39, &qword_253F391D0);
LABEL_15:
    ReadingHistoryModel.readingHistoryDay(for:)((uint64_t)v8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v67 + 48))(v8, 1, v68) == 1)
    {
      sub_227D5809C((uint64_t)v8, &qword_253F39F90);
LABEL_21:
      (*(void (**)(uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t), uint64_t))(v24 + 8))(v33, v23);
      (*(void (**)(char *, uint64_t))(v56 + 8))(v71, v57);
      return v37;
    }
    sub_227D5E458((uint64_t)v8, v73, type metadata accessor for ReadingHistoryDay);
    v51 = sub_227E5FE58();
    sub_227D68330(&qword_253F3AEE0);
    result = sub_227E5F984();
    if (v51 < v74)
    {
      sub_227D64BC4(v73, type metadata accessor for ReadingHistoryDay);
      goto LABEL_21;
    }
    v50 = __OFADD__(v37++, 1);
    v22 = v69;
    v19 = v70;
    if (v50)
      break;
    v52 = v8;
    v53 = v3;
    v54 = v66;
    sub_227E5F1F8();
    sub_227D64BC4(v73, type metadata accessor for ReadingHistoryDay);
    (*(void (**)(uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t), uint64_t))(v24 + 8))(v33, v23);
    v55 = v54;
    v3 = v53;
    v8 = v52;
    (*(void (**)(uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t), char *, uint64_t))(v24 + 32))(v33, v55, v23);
  }
  __break(1u);
LABEL_23:
  __break(1u);
  return result;
}

uint64_t sub_227E05848(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  unsigned int (*v67)(char *, uint64_t, uint64_t);
  uint64_t v68;
  uint64_t *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  int v79;
  uint64_t result;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  unint64_t v87;
  unint64_t i;
  BOOL v89;
  unint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  int64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  int v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  unint64_t v110;
  uint64_t v111;
  char *v112;
  unint64_t v113;
  unint64_t v114;
  uint64_t v115;
  unint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  int64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  unint64_t v136;
  unint64_t v137;
  uint64_t v138;
  unint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t *v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  unsigned int (*v161)(uint64_t, uint64_t, uint64_t);
  uint64_t v162;
  int64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  unint64_t v167;
  int64_t v168;
  unint64_t v169;
  unint64_t v170;
  unint64_t v171;
  int64_t v172;
  uint64_t v173;
  uint64_t v174;
  int64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  unint64_t v179;
  int64_t v180;
  unint64_t v181;
  unint64_t v182;
  unint64_t v183;
  int64_t v184;
  uint64_t v185;
  uint64_t v186;
  int64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  unint64_t v191;
  unint64_t v192;
  unint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t *v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  unint64_t v201;
  int64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t (*v205)(uint64_t, uint64_t, uint64_t);
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  char *v210;
  char *v211;
  uint64_t v212;
  char *v213;
  uint64_t *v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  char *v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  char *v225;
  char *v226;
  uint64_t v227;
  uint64_t v228;
  char *v229;
  uint64_t v230;
  int64_t v231;
  uint64_t *v232;
  uint64_t v233;
  __int128 v234;
  uint64_t v235;

  v233 = sub_227D68330(&qword_255929130);
  MEMORY[0x24BDAC7A8](v233, v3);
  v232 = (uint64_t *)((char *)&v203 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = sub_227D68330(&qword_255929138);
  v7 = MEMORY[0x24BDAC7A8](v5, v6);
  v212 = (uint64_t)&v203 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v7, v9);
  v213 = (char *)&v203 - v11;
  v13 = MEMORY[0x24BDAC7A8](v10, v12);
  v219 = (uint64_t)&v203 - v14;
  MEMORY[0x24BDAC7A8](v13, v15);
  v224 = (uint64_t)&v203 - v16;
  v17 = sub_227D68330(&qword_255929140);
  v217 = *(_QWORD *)(v17 - 8);
  v218 = v17;
  v19 = MEMORY[0x24BDAC7A8](v17, v18);
  v216 = (uint64_t)&v203 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19, v21);
  v221 = (uint64_t)&v203 - v22;
  v215 = sub_227D68330(&qword_255929148);
  MEMORY[0x24BDAC7A8](v215, v23);
  v214 = (uint64_t *)((char *)&v203 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  v25 = sub_227D68330(&qword_253F3AF40);
  v230 = *(_QWORD *)(v25 - 8);
  v231 = v25;
  MEMORY[0x24BDAC7A8](v25, v26);
  v229 = (char *)&v203 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = type metadata accessor for ReadingHistoryMonth(0);
  MEMORY[0x24BDAC7A8](v28, v29);
  v31 = (char *)&v203 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = sub_227D68330((uint64_t *)&unk_253F3AFC0);
  v34 = MEMORY[0x24BDAC7A8](v32, v33);
  v226 = (char *)&v203 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v34, v36);
  v38 = (char *)&v203 - v37;
  v39 = sub_227D68330(&qword_255929150);
  v41 = MEMORY[0x24BDAC7A8](v39, v40);
  v209 = (uint64_t)&v203 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = MEMORY[0x24BDAC7A8](v41, v43);
  v211 = (char *)&v203 - v45;
  MEMORY[0x24BDAC7A8](v44, v46);
  v223 = (uint64_t)&v203 - v47;
  v48 = sub_227D68330(&qword_255929158);
  MEMORY[0x24BDAC7A8](v48, v49);
  v51 = (char *)&v203 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = sub_227D68330(&qword_255929160);
  v53 = *(_QWORD *)(v52 - 8);
  v55 = MEMORY[0x24BDAC7A8](v52, v54);
  v208 = (uint64_t)&v203 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = MEMORY[0x24BDAC7A8](v55, v57);
  v210 = (char *)&v203 - v59;
  v61 = MEMORY[0x24BDAC7A8](v58, v60);
  v63 = (char *)&v203 - v62;
  MEMORY[0x24BDAC7A8](v61, v64);
  v66 = (char *)&v203 - v65;
  v235 = MEMORY[0x24BEE4B08];
  type metadata accessor for ReadingHistoryModel(0);
  sub_227D51624(&qword_253F3A238, type metadata accessor for ReadingHistoryModel, (uint64_t)&protocol conformance descriptor for ReadingHistoryModel);
  v227 = a1;
  v228 = v1;
  sub_227E5FD68();
  v67 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v53 + 48);
  v68 = v52;
  if (v67(v51, 1, v52) == 1)
  {
    v69 = &qword_255929158;
    goto LABEL_154;
  }
  v70 = *(int *)(v52 + 48);
  v71 = (uint64_t)&v66[v70];
  v72 = (uint64_t)&v51[v70];
  sub_227D5B0DC((uint64_t)v51, (uint64_t)v66, &qword_255929150);
  sub_227D5B0DC(v72, v71, &qword_255928F18);
  v73 = (uint64_t)&v63[*(int *)(v68 + 48)];
  v220 = v66;
  sub_227D5DF48((uint64_t)v66, (uint64_t)v63, &qword_255929150);
  v207 = v71;
  v74 = v71;
  v75 = v73;
  sub_227D5DF48(v74, v73, &qword_255928F18);
  v76 = v223;
  sub_227D5B0DC((uint64_t)v63, v223, &qword_255929150);
  v77 = sub_227D68330(&qword_255929168);
  v78 = *(_QWORD *)(v77 - 8);
  v205 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v78 + 48);
  v79 = v205(v76, 1, v77);
  v204 = v68;
  v206 = v77;
  v203 = v78;
  if (v79 == 1)
  {
    sub_227D5809C(v75, &qword_255928F18);
    result = sub_227D5809C(v76, &qword_255929150);
    v81 = MEMORY[0x24BEE4B08];
  }
  else
  {
    v81 = sub_227E5FC18();
    (*(void (**)(uint64_t, uint64_t))(v78 + 8))(v76, v77);
    result = sub_227D5809C(v75, &qword_255928F18);
  }
  v82 = 0;
  v83 = *(_QWORD *)(v81 + 56);
  v222 = v81 + 56;
  v84 = 1 << *(_BYTE *)(v81 + 32);
  v85 = -1;
  if (v84 < 64)
    v85 = ~(-1 << v84);
  v86 = v85 & v83;
  v223 = (unint64_t)(v84 + 63) >> 6;
  if ((v85 & v83) == 0)
    goto LABEL_10;
LABEL_9:
  v87 = __clz(__rbit64(v86));
  v86 &= v86 - 1;
  for (i = v87 | (v82 << 6); ; i = __clz(__rbit64(v90)) + (v82 << 6))
  {
    v92 = v81;
    v93 = *(_QWORD *)(*(_QWORD *)(v81 + 48) + 8 * i);
    *(_QWORD *)&v234 = v93;
    sub_227D68330(&qword_253F3AF68);
    sub_227E5FCB4();
    v94 = sub_227D68330((uint64_t *)&unk_253F3AFB0);
    v95 = *(_QWORD *)(v94 - 8);
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v95 + 48))(v38, 1, v94);
    if ((_DWORD)result == 1)
      goto LABEL_167;
    MEMORY[0x22E2A9430](v94);
    (*(void (**)(char *, uint64_t))(v95 + 8))(v38, v94);
    v97 = (uint64_t)v229;
    v96 = v230;
    v98 = v231;
    (*(void (**)(char *, char *, int64_t))(v230 + 16))(v229, v31, v231);
    sub_227D64BC4((uint64_t)v31, type metadata accessor for ReadingHistoryMonth);
    sub_227E046E0(v97, (uint64_t)&v235, v93);
    result = (*(uint64_t (**)(uint64_t, int64_t))(v96 + 8))(v97, v98);
    v81 = v92;
    if (v86)
      goto LABEL_9;
LABEL_10:
    v89 = __OFADD__(v82++, 1);
    if (v89)
      goto LABEL_161;
    if (v82 >= v223)
      goto LABEL_28;
    v90 = *(_QWORD *)(v222 + 8 * v82);
    if (!v90)
      break;
LABEL_20:
    v86 = (v90 - 1) & v90;
  }
  v91 = v82 + 1;
  if (v82 + 1 >= v223)
    goto LABEL_28;
  v90 = *(_QWORD *)(v222 + 8 * v91);
  if (v90)
    goto LABEL_19;
  v91 = v82 + 2;
  if (v82 + 2 >= v223)
    goto LABEL_28;
  v90 = *(_QWORD *)(v222 + 8 * v91);
  if (v90)
    goto LABEL_19;
  v91 = v82 + 3;
  if (v82 + 3 >= v223)
    goto LABEL_28;
  v90 = *(_QWORD *)(v222 + 8 * v91);
  if (v90)
  {
LABEL_19:
    v82 = v91;
    goto LABEL_20;
  }
  while (1)
  {
    v82 = v91 + 1;
    if (__OFADD__(v91, 1))
      goto LABEL_163;
    if (v82 >= v223)
      break;
    v90 = *(_QWORD *)(v222 + 8 * v82);
    ++v91;
    if (v90)
      goto LABEL_20;
  }
LABEL_28:
  v99 = v204;
  v100 = (uint64_t)v211;
  v101 = (uint64_t)v210;
  swift_release();
  v102 = v101 + *(int *)(v99 + 48);
  sub_227D5DF48((uint64_t)v220, v101, &qword_255929150);
  sub_227D5DF48(v207, v102, &qword_255928F18);
  sub_227D5B0DC(v101, v100, &qword_255929150);
  v103 = v206;
  v104 = v205(v100, 1, v206);
  v225 = v31;
  if (v104 == 1)
  {
    sub_227D5809C(v102, &qword_255928F18);
    result = sub_227D5809C(v100, &qword_255929150);
    v105 = MEMORY[0x24BEE4B08];
  }
  else
  {
    v105 = sub_227E5FC24();
    (*(void (**)(uint64_t, uint64_t))(v203 + 8))(v100, v103);
    result = sub_227D5809C(v102, &qword_255928F18);
  }
  v106 = 0;
  v107 = *(_QWORD *)(v105 + 56);
  v222 = v105 + 56;
  v108 = 1 << *(_BYTE *)(v105 + 32);
  v109 = -1;
  if (v108 < 64)
    v109 = ~(-1 << v108);
  v110 = v109 & v107;
  v223 = (unint64_t)(v108 + 63) >> 6;
  v111 = (uint64_t)v225;
  v112 = v226;
  if ((v109 & v107) == 0)
    goto LABEL_35;
  while (2)
  {
    v113 = __clz(__rbit64(v110));
    v110 &= v110 - 1;
    v228 = v106;
    v114 = v113 | (v106 << 6);
LABEL_46:
    v118 = v105;
    v119 = *(_QWORD *)(*(_QWORD *)(v105 + 48) + 8 * v114);
    *(_QWORD *)&v234 = v119;
    sub_227D68330(&qword_253F3AF68);
    sub_227E5FCB4();
    v120 = sub_227D68330((uint64_t *)&unk_253F3AFB0);
    v121 = *(_QWORD *)(v120 - 8);
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v121 + 48))(v112, 1, v120);
    if ((_DWORD)result == 1)
      goto LABEL_168;
    MEMORY[0x22E2A9430](v120);
    (*(void (**)(char *, uint64_t))(v121 + 8))(v112, v120);
    v123 = (uint64_t)v229;
    v122 = v230;
    v124 = v231;
    (*(void (**)(char *, uint64_t, int64_t))(v230 + 16))(v229, v111, v231);
    sub_227D64BC4(v111, type metadata accessor for ReadingHistoryMonth);
    sub_227E046E0(v123, (uint64_t)&v235, v119);
    result = (*(uint64_t (**)(uint64_t, int64_t))(v122 + 8))(v123, v124);
    v105 = v118;
    v106 = v228;
    if (v110)
      continue;
    break;
  }
LABEL_35:
  v89 = __OFADD__(v106, 1);
  v115 = v106 + 1;
  if (v89)
    goto LABEL_162;
  if (v115 >= v223)
    goto LABEL_53;
  v116 = *(_QWORD *)(v222 + 8 * v115);
  if (v116)
  {
LABEL_45:
    v110 = (v116 - 1) & v116;
    v228 = v115;
    v114 = __clz(__rbit64(v116)) + (v115 << 6);
    goto LABEL_46;
  }
  v117 = v115 + 1;
  if (v115 + 1 >= v223)
    goto LABEL_53;
  v116 = *(_QWORD *)(v222 + 8 * v117);
  if (v116)
    goto LABEL_44;
  v117 = v115 + 2;
  if (v115 + 2 >= v223)
    goto LABEL_53;
  v116 = *(_QWORD *)(v222 + 8 * v117);
  if (v116)
    goto LABEL_44;
  v117 = v115 + 3;
  if (v115 + 3 >= v223)
    goto LABEL_53;
  v116 = *(_QWORD *)(v222 + 8 * v117);
  if (v116)
  {
LABEL_44:
    v115 = v117;
    goto LABEL_45;
  }
  while (1)
  {
    v115 = v117 + 1;
    if (__OFADD__(v117, 1))
      goto LABEL_164;
    if (v115 >= v223)
      break;
    v116 = *(_QWORD *)(v222 + 8 * v115);
    ++v117;
    if (v116)
      goto LABEL_45;
  }
LABEL_53:
  v223 = 0;
  v125 = v204;
  swift_release();
  v126 = v208;
  v127 = v208 + *(int *)(v125 + 48);
  v51 = v220;
  sub_227D5DF48((uint64_t)v220, v208, &qword_255929150);
  sub_227D5DF48(v207, v127, &qword_255928F18);
  v128 = v126;
  v129 = v209;
  sub_227D5B0DC(v128, v209, &qword_255929150);
  v130 = v206;
  if (v205(v129, 1, v206) == 1)
  {
    sub_227D5809C(v127, &qword_255928F18);
    sub_227D5809C(v129, &qword_255929150);
    goto LABEL_153;
  }
  v131 = sub_227E5FC30();
  (*(void (**)(uint64_t, uint64_t))(v203 + 8))(v129, v130);
  result = sub_227D5809C(v127, &qword_255928F18);
  v132 = 0;
  v133 = *(_QWORD *)(v131 + 64);
  v225 = (char *)(v131 + 64);
  v134 = 1 << *(_BYTE *)(v131 + 32);
  if (v134 < 64)
    v135 = ~(-1 << v134);
  else
    v135 = -1;
  v136 = v135 & v133;
  v226 = (char *)((unint64_t)(v134 + 63) >> 6);
  v227 = v131;
  while (2)
  {
    if (v136)
    {
      v228 = (v136 - 1) & v136;
      v229 = v132;
      v137 = __clz(__rbit64(v136)) | ((_QWORD)v132 << 6);
    }
    else
    {
      v89 = __OFADD__(v132, 1);
      v138 = (uint64_t)(v132 + 1);
      if (v89)
        goto LABEL_165;
      if (v138 >= (uint64_t)v226)
        goto LABEL_152;
      v139 = *(_QWORD *)&v225[8 * v138];
      if (!v139)
      {
        v140 = v138 + 1;
        if (v138 + 1 >= (uint64_t)v226)
          goto LABEL_152;
        v139 = *(_QWORD *)&v225[8 * v140];
        if (!v139)
        {
          v140 = v138 + 2;
          if (v138 + 2 >= (uint64_t)v226)
            goto LABEL_152;
          v139 = *(_QWORD *)&v225[8 * v140];
          if (!v139)
          {
            v140 = v138 + 3;
            if (v138 + 3 >= (uint64_t)v226)
              goto LABEL_152;
            v139 = *(_QWORD *)&v225[8 * v140];
            if (!v139)
            {
              while (1)
              {
                v138 = v140 + 1;
                if (__OFADD__(v140, 1))
                  goto LABEL_166;
                if (v138 >= (uint64_t)v226)
                  break;
                v139 = *(_QWORD *)&v225[8 * v138];
                ++v140;
                if (v139)
                  goto LABEL_73;
              }
LABEL_152:
              swift_release();
LABEL_153:
              v69 = &qword_255929160;
LABEL_154:
              sub_227D5809C((uint64_t)v51, v69);
              return v235;
            }
          }
        }
        v138 = v140;
      }
LABEL_73:
      v228 = (v139 - 1) & v139;
      v229 = (char *)v138;
      v137 = __clz(__rbit64(v139)) + (v138 << 6);
    }
    v141 = *(_QWORD *)(v227 + 56);
    v142 = *(_QWORD *)(*(_QWORD *)(v227 + 48) + 8 * v137);
    v143 = v214;
    *v214 = v142;
    v144 = (uint64_t)v143 + *(int *)(v215 + 48);
    sub_227D5DF48(v141 + *(_QWORD *)(v217 + 72) * v137, v144, &qword_255929140);
    v145 = v218;
    v146 = *(int *)(v218 + 48);
    v147 = v221;
    v148 = v221 + v146;
    v149 = *(int *)(v218 + 64);
    v150 = v221 + v149;
    v151 = v144 + v146;
    v152 = v144 + v149;
    sub_227D5B0DC(v144, v221, &qword_255929138);
    sub_227D5B0DC(v151, v148, &qword_255929170);
    sub_227D5B0DC(v152, v150, &qword_255929170);
    v153 = v216;
    v154 = v216 + *(int *)(v145 + 48);
    v155 = v216 + *(int *)(v145 + 64);
    sub_227D5DF48(v147, v216, &qword_255929138);
    sub_227D5DF48(v148, v154, &qword_255929170);
    sub_227D5DF48(v150, v155, &qword_255929170);
    v156 = v224;
    sub_227D5B0DC(v153, v224, &qword_255929138);
    sub_227D5809C(v155, &qword_255929170);
    sub_227D5809C(v154, &qword_255929170);
    v157 = v156;
    v158 = v219;
    sub_227D5DF48(v157, v219, &qword_255929138);
    v159 = sub_227D68330(&qword_255929178);
    v160 = *(_QWORD *)(v159 - 8);
    v161 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v160 + 48);
    if (v161(v158, 1, v159) == 1)
    {
      result = sub_227D5809C(v158, &qword_255929138);
      v162 = MEMORY[0x24BEE4B08];
    }
    else
    {
      v162 = sub_227E5FC18();
      result = (*(uint64_t (**)(uint64_t, uint64_t))(v160 + 8))(v158, v159);
    }
    v163 = 0;
    v164 = v162 + 56;
    v165 = 1 << *(_BYTE *)(v162 + 32);
    if (v165 < 64)
      v166 = ~(-1 << v165);
    else
      v166 = -1;
    v167 = v166 & *(_QWORD *)(v162 + 56);
    v168 = (unint64_t)(v165 + 63) >> 6;
    while (2)
    {
      if (v167)
      {
        v169 = __clz(__rbit64(v167));
        v167 &= v167 - 1;
        v170 = v169 | (v163 << 6);
        goto LABEL_82;
      }
      v89 = __OFADD__(v163++, 1);
      if (v89)
      {
        __break(1u);
LABEL_156:
        __break(1u);
LABEL_157:
        __break(1u);
        goto LABEL_158;
      }
      if (v163 >= v168)
        break;
      v171 = *(_QWORD *)(v164 + 8 * v163);
      if (v171)
        goto LABEL_94;
      v172 = v163 + 1;
      if (v163 + 1 >= v168)
        break;
      v171 = *(_QWORD *)(v164 + 8 * v172);
      if (v171)
        goto LABEL_93;
      v172 = v163 + 2;
      if (v163 + 2 >= v168)
        break;
      v171 = *(_QWORD *)(v164 + 8 * v172);
      if (v171)
        goto LABEL_93;
      v172 = v163 + 3;
      if (v163 + 3 < v168)
      {
        v171 = *(_QWORD *)(v164 + 8 * v172);
        if (!v171)
        {
          while (1)
          {
            v163 = v172 + 1;
            if (__OFADD__(v172, 1))
              break;
            if (v163 >= v168)
              goto LABEL_99;
            v171 = *(_QWORD *)(v164 + 8 * v163);
            ++v172;
            if (v171)
              goto LABEL_94;
          }
LABEL_158:
          __break(1u);
          goto LABEL_159;
        }
LABEL_93:
        v163 = v172;
LABEL_94:
        v167 = (v171 - 1) & v171;
        v170 = __clz(__rbit64(v171)) + (v163 << 6);
LABEL_82:
        result = sub_227E22960(&v234, v142, *(_QWORD *)(*(_QWORD *)(v162 + 48) + 8 * v170));
        continue;
      }
      break;
    }
LABEL_99:
    v173 = (uint64_t)v213;
    swift_release();
    sub_227D5DF48(v224, v173, &qword_255929138);
    if (v161(v173, 1, v159) == 1)
    {
      result = sub_227D5809C(v173, &qword_255929138);
      v174 = MEMORY[0x24BEE4B08];
    }
    else
    {
      v174 = sub_227E5FC24();
      result = (*(uint64_t (**)(uint64_t, uint64_t))(v160 + 8))(v173, v159);
    }
    v175 = 0;
    v176 = v174 + 56;
    v177 = 1 << *(_BYTE *)(v174 + 32);
    if (v177 < 64)
      v178 = ~(-1 << v177);
    else
      v178 = -1;
    v179 = v178 & *(_QWORD *)(v174 + 56);
    v180 = (unint64_t)(v177 + 63) >> 6;
    while (2)
    {
      if (v179)
      {
        v181 = __clz(__rbit64(v179));
        v179 &= v179 - 1;
        v182 = v181 | (v175 << 6);
LABEL_107:
        result = sub_227E22960(&v234, v142, *(_QWORD *)(*(_QWORD *)(v174 + 48) + 8 * v182));
        continue;
      }
      break;
    }
    v89 = __OFADD__(v175++, 1);
    if (v89)
      goto LABEL_156;
    if (v175 < v180)
    {
      v183 = *(_QWORD *)(v176 + 8 * v175);
      if (!v183)
      {
        v184 = v175 + 1;
        if (v175 + 1 >= v180)
          goto LABEL_124;
        v183 = *(_QWORD *)(v176 + 8 * v184);
        if (!v183)
        {
          v184 = v175 + 2;
          if (v175 + 2 >= v180)
            goto LABEL_124;
          v183 = *(_QWORD *)(v176 + 8 * v184);
          if (!v183)
          {
            v184 = v175 + 3;
            if (v175 + 3 >= v180)
              goto LABEL_124;
            v183 = *(_QWORD *)(v176 + 8 * v184);
            if (!v183)
            {
              while (1)
              {
                v175 = v184 + 1;
                if (__OFADD__(v184, 1))
                  break;
                if (v175 >= v180)
                  goto LABEL_124;
                v183 = *(_QWORD *)(v176 + 8 * v175);
                ++v184;
                if (v183)
                  goto LABEL_119;
              }
LABEL_159:
              __break(1u);
              goto LABEL_160;
            }
          }
        }
        v175 = v184;
      }
LABEL_119:
      v179 = (v183 - 1) & v183;
      v182 = __clz(__rbit64(v183)) + (v175 << 6);
      goto LABEL_107;
    }
LABEL_124:
    swift_release();
    v185 = v212;
    sub_227D5DF48(v224, v212, &qword_255929138);
    if (v161(v185, 1, v159) == 1)
    {
      sub_227D5809C(v185, &qword_255929138);
      v51 = v220;
      v132 = v229;
LABEL_60:
      v136 = v228;
      sub_227D5809C(v224, &qword_255929138);
      result = sub_227D5809C(v221, &qword_255929140);
      continue;
    }
    break;
  }
  v186 = sub_227E5FC30();
  result = (*(uint64_t (**)(uint64_t, uint64_t))(v160 + 8))(v185, v159);
  v187 = 0;
  v188 = *(_QWORD *)(v186 + 64);
  v230 = v186 + 64;
  v189 = 1 << *(_BYTE *)(v186 + 32);
  if (v189 < 64)
    v190 = ~(-1 << v189);
  else
    v190 = -1;
  v191 = v190 & v188;
  v231 = (unint64_t)(v189 + 63) >> 6;
  while (2)
  {
    if (v191)
    {
      v192 = __clz(__rbit64(v191));
      v191 &= v191 - 1;
      v193 = v192 | (v187 << 6);
LABEL_130:
      v194 = *(_QWORD *)(v186 + 56);
      v195 = *(_QWORD *)(*(_QWORD *)(v186 + 48) + 8 * v193);
      v196 = v232;
      *v232 = v195;
      v197 = sub_227D68330(&qword_255929180);
      v198 = v194 + *(_QWORD *)(*(_QWORD *)(v197 - 8) + 72) * v193;
      v199 = (uint64_t)v196 + *(int *)(v233 + 48);
      sub_227D5DF48(v198, v199, &qword_255929180);
      v200 = v199 + *(int *)(v197 + 48);
      sub_227E22960(&v234, v142, v195);
      result = sub_227D5809C(v200, &qword_255929170);
      continue;
    }
    break;
  }
  v89 = __OFADD__(v187++, 1);
  if (v89)
    goto LABEL_157;
  if (v187 >= v231)
  {
LABEL_147:
    swift_release();
    v51 = v220;
    v132 = v229;
    goto LABEL_60;
  }
  v201 = *(_QWORD *)(v230 + 8 * v187);
  if (v201)
  {
LABEL_142:
    v191 = (v201 - 1) & v201;
    v193 = __clz(__rbit64(v201)) + (v187 << 6);
    goto LABEL_130;
  }
  v202 = v187 + 1;
  if (v187 + 1 >= v231)
    goto LABEL_147;
  v201 = *(_QWORD *)(v230 + 8 * v202);
  if (v201)
    goto LABEL_141;
  v202 = v187 + 2;
  if (v187 + 2 >= v231)
    goto LABEL_147;
  v201 = *(_QWORD *)(v230 + 8 * v202);
  if (v201)
    goto LABEL_141;
  v202 = v187 + 3;
  if (v187 + 3 >= v231)
    goto LABEL_147;
  v201 = *(_QWORD *)(v230 + 8 * v202);
  if (v201)
  {
LABEL_141:
    v187 = v202;
    goto LABEL_142;
  }
  while (1)
  {
    v187 = v202 + 1;
    if (__OFADD__(v202, 1))
      break;
    if (v187 >= v231)
      goto LABEL_147;
    v201 = *(_QWORD *)(v230 + 8 * v187);
    ++v202;
    if (v201)
      goto LABEL_142;
  }
LABEL_160:
  __break(1u);
LABEL_161:
  __break(1u);
LABEL_162:
  __break(1u);
LABEL_163:
  __break(1u);
LABEL_164:
  __break(1u);
LABEL_165:
  __break(1u);
LABEL_166:
  __break(1u);
LABEL_167:
  __break(1u);
LABEL_168:
  __break(1u);
  return result;
}

uint64_t ReadingHistoryModel.setGoal(_:date:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  void (*v28)(char *, _QWORD, uint64_t);
  uint64_t v29;
  void (*v30)(char *, uint64_t);
  uint64_t v31;
  uint64_t result;
  uint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(_QWORD *, _QWORD);
  void (*v42)(char *, _QWORD);
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char v54[32];
  _QWORD v55[7];

  v47 = a1;
  v3 = sub_227D68330((uint64_t *)&unk_253F3AFC0);
  MEMORY[0x24BDAC7A8](v3, v4);
  v53 = (char *)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_227D68330((uint64_t *)&unk_253F3AFB0);
  v51 = *(_QWORD *)(v6 - 8);
  v52 = v6;
  MEMORY[0x24BDAC7A8](v6, v7);
  v46 = (char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = type metadata accessor for ReadingHistoryMonth(0);
  v10 = MEMORY[0x24BDAC7A8](v49, v9);
  v48 = (uint64_t)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10, v12);
  v50 = (char *)&v44 - v13;
  v14 = sub_227E5F2E8();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14, v16);
  v18 = (char *)&v44 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_227E5F300();
  v44 = *(_QWORD *)(v19 - 8);
  v45 = v19;
  MEMORY[0x24BDAC7A8](v19, v20);
  v22 = (char *)&v44 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_227E5F27C();
  v24 = *(_QWORD *)(v23 - 8);
  MEMORY[0x24BDAC7A8](v23, v25);
  v27 = (char *)&v44 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v24 + 16))(v27, a2, v23);
  sub_227E5F288();
  v28 = *(void (**)(char *, _QWORD, uint64_t))(v15 + 104);
  v28(v18, *MEMORY[0x24BDCF240], v14);
  v29 = sub_227E5F2F4();
  v30 = *(void (**)(char *, uint64_t))(v15 + 8);
  v30(v18, v14);
  v28(v18, *MEMORY[0x24BDCF250], v14);
  v31 = sub_227E5F2F4();
  result = ((uint64_t (*)(char *, uint64_t))v30)(v18, v14);
  v33 = 100 * v29;
  if ((unsigned __int128)(v29 * (__int128)100) >> 64 == (100 * v29) >> 63)
  {
    v34 = __OFADD__(v33, v31);
    v35 = v33 + v31;
    if (!v34)
    {
      v28(v18, *MEMORY[0x24BDCF220], v14);
      v36 = sub_227E5F2F4();
      (*(void (**)(char *, uint64_t))(v24 + 8))(v27, v23);
      v30(v18, v14);
      (*(void (**)(char *, uint64_t))(v44 + 8))(v22, v45);
      v55[0] = v35;
      sub_227D68330(&qword_253F3AF68);
      v37 = v46;
      sub_227E5FC9C();
      v38 = (uint64_t)v50;
      v39 = v52;
      MEMORY[0x22E2A9448](v52);
      v40 = v51;
      (*(void (**)(char *, uint64_t))(v51 + 8))(v37, v39);
      v55[4] = v36;
      v55[5] = v47;
      sub_227D68330(&qword_253F3AF40);
      v41 = (void (*)(_QWORD *, _QWORD))sub_227E5FC90();
      sub_227D68330(&qword_253F3AF90);
      v42 = (void (*)(char *, _QWORD))sub_227E5FDF8();
      type metadata accessor for ReadingHistoryDay(0);
      sub_227D68330(&qword_253F3AEE0);
      sub_227E5F990();
      v42(v54, 0);
      v41(v55, 0);
      sub_227D5DFFC(v38, v48, type metadata accessor for ReadingHistoryMonth);
      sub_227D51624(&qword_255929098, type metadata accessor for ReadingHistoryMonth, (uint64_t)&protocol conformance descriptor for ReadingHistoryMonth);
      v43 = v53;
      sub_227E5FE10();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v43, 0, 1, v39);
      v55[0] = v35;
      sub_227E5FCC0();
      return sub_227D64BC4(v38, type metadata accessor for ReadingHistoryMonth);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

BOOL static ReadingHistoryModel.DayKey.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2 && a1[1] == a2[1];
}

uint64_t *static ReadingHistoryModel.DayKey.< infix(_:_:)(uint64_t *result, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  BOOL v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = 100 * *result;
  if ((unsigned __int128)(*result * (__int128)100) >> 64 != v2 >> 63)
  {
    __break(1u);
    goto LABEL_7;
  }
  v3 = result[1];
  v4 = __OFADD__(v2, v3);
  v5 = v2 + v3;
  if (v4)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  v6 = 100 * *a2;
  if ((unsigned __int128)(*a2 * (__int128)100) >> 64 != v6 >> 63)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v7 = a2[1];
  v4 = __OFADD__(v6, v7);
  v8 = v6 + v7;
  if (!v4)
    return (uint64_t *)(v5 < v8);
LABEL_9:
  __break(1u);
  return result;
}

BOOL sub_227E07030(uint64_t (*a1)(uint64_t, uint64_t, uint64_t, uint64_t), int a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t (*v23)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char v28;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  int v33;

  v33 = a2;
  v32 = sub_227E5F27C();
  v3 = *(_QWORD *)(v32 - 8);
  MEMORY[0x24BDAC7A8](v32, v4);
  v31 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_227D68330(&qword_253F391D0);
  v8 = MEMORY[0x24BDAC7A8](v6, v7);
  v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8, v11);
  v13 = (char *)&v30 - v12;
  v14 = sub_227E5FE7C();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14, v16);
  v18 = (char *)&v30 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_227D68330(&qword_253F39F90);
  MEMORY[0x24BDAC7A8](v19, v20);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = a1;
  ReadingHistoryModel.readingHistoryDay(for:)((uint64_t)v22);
  v24 = type metadata accessor for ReadingHistoryDay(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 48))(v22, 1, v24) == 1)
  {
    sub_227D5809C((uint64_t)v22, &qword_253F39F90);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v18, v22, v14);
    sub_227D64BC4((uint64_t)v22, type metadata accessor for ReadingHistoryDay);
    v25 = sub_227E5FE58();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v18, v14);
    if (v25 > 0)
      return 1;
  }
  if ((v33 & 1) != 0)
  {
    sub_227E0C8B8(v23, (uint64_t)v13);
    sub_227D5DF48((uint64_t)v13, (uint64_t)v10, &qword_253F391D0);
    v26 = v32;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v10, 1, v32) == 1)
    {
      sub_227D5809C((uint64_t)v13, &qword_253F391D0);
      sub_227D5809C((uint64_t)v10, &qword_253F391D0);
      return 0;
    }
    v27 = v31;
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v31, v10, v26);
    v28 = sub_227E5F24C();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v27, v26);
    sub_227D5809C((uint64_t)v13, &qword_253F391D0);
    return (v28 & 1) != 0;
  }
  return 0;
}

uint64_t ReadingHistoryModel.incrementReadingTime(date:amount:defaultGoal:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  void (*v29)(char *, _QWORD, uint64_t);
  uint64_t v30;
  void (*v31)(char *, uint64_t);
  uint64_t v32;
  uint64_t result;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(_QWORD *, _QWORD);
  void (*v43)(char *, _QWORD);
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char v56[32];
  _QWORD v57[6];

  v48 = a3;
  v51 = a2;
  v4 = sub_227D68330((uint64_t *)&unk_253F3AFC0);
  MEMORY[0x24BDAC7A8](v4, v5);
  v55 = (char *)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_227D68330((uint64_t *)&unk_253F3AFB0);
  v53 = *(_QWORD *)(v7 - 8);
  v54 = v7;
  MEMORY[0x24BDAC7A8](v7, v8);
  v47 = (char *)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = type metadata accessor for ReadingHistoryMonth(0);
  v11 = MEMORY[0x24BDAC7A8](v50, v10);
  v49 = (uint64_t)&v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11, v13);
  v52 = (char *)&v45 - v14;
  v15 = sub_227E5F2E8();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15, v17);
  v19 = (char *)&v45 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_227E5F300();
  v45 = *(_QWORD *)(v20 - 8);
  v46 = v20;
  MEMORY[0x24BDAC7A8](v20, v21);
  v23 = (char *)&v45 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = sub_227E5F27C();
  v25 = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24, v26);
  v28 = (char *)&v45 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v25 + 16))(v28, a1, v24);
  sub_227E5F288();
  v29 = *(void (**)(char *, _QWORD, uint64_t))(v16 + 104);
  v29(v19, *MEMORY[0x24BDCF240], v15);
  v30 = sub_227E5F2F4();
  v31 = *(void (**)(char *, uint64_t))(v16 + 8);
  v31(v19, v15);
  v29(v19, *MEMORY[0x24BDCF250], v15);
  v32 = sub_227E5F2F4();
  result = ((uint64_t (*)(char *, uint64_t))v31)(v19, v15);
  v34 = 100 * v30;
  if ((unsigned __int128)(v30 * (__int128)100) >> 64 == (100 * v30) >> 63)
  {
    v35 = v34 + v32;
    if (!__OFADD__(v34, v32))
    {
      v29(v19, *MEMORY[0x24BDCF220], v15);
      v36 = sub_227E5F2F4();
      (*(void (**)(char *, uint64_t))(v25 + 8))(v28, v24);
      v31(v19, v15);
      (*(void (**)(char *, uint64_t))(v45 + 8))(v23, v46);
      v57[0] = v35;
      sub_227D68330(&qword_253F3AF68);
      v37 = v47;
      sub_227E5FC9C();
      v38 = (uint64_t)v52;
      v39 = v54;
      MEMORY[0x22E2A9448](v54);
      v40 = v53;
      (*(void (**)(char *, uint64_t))(v53 + 8))(v37, v39);
      *(_QWORD *)(swift_allocObject() + 16) = v48;
      v57[4] = v36;
      sub_227D68330(&qword_253F3AF40);
      v41 = v35;
      v42 = (void (*)(_QWORD *, _QWORD))sub_227E5FC90();
      sub_227D68330(&qword_253F3AF90);
      v43 = (void (*)(char *, _QWORD))sub_227E5FDF8();
      sub_227E5FE64();
      v43(v56, 0);
      v42(v57, 0);
      sub_227D5DFFC(v38, v49, type metadata accessor for ReadingHistoryMonth);
      sub_227D51624(&qword_255929098, type metadata accessor for ReadingHistoryMonth, (uint64_t)&protocol conformance descriptor for ReadingHistoryMonth);
      v44 = v55;
      sub_227E5FE10();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v44, 0, 1, v39);
      v57[0] = v41;
      sub_227E5FCC0();
      sub_227D64BC4(v38, type metadata accessor for ReadingHistoryMonth);
      return swift_release();
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t ReadingHistoryModel.mergeDay(date:day:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  void (*v36)(char *, _QWORD, uint64_t);
  uint64_t v37;
  void (*v38)(char *, uint64_t);
  uint64_t v39;
  uint64_t result;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t (*v50)(uint64_t, uint64_t, uint64_t);
  int v51;
  char *v52;
  void (*v53)(_QWORD *, _QWORD);
  uint64_t v54;
  void (*v55)(char *, _QWORD);
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  char v72[32];
  _QWORD v73[6];

  v62 = a2;
  v3 = sub_227D68330((uint64_t *)&unk_253F3AFC0);
  MEMORY[0x24BDAC7A8](v3, v4);
  v64 = (char *)&v57 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = type metadata accessor for ReadingHistoryDay(0);
  MEMORY[0x24BDAC7A8](v61, v6);
  v58 = (uint64_t)&v57 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_227D68330(&qword_253F3AF98);
  v10 = MEMORY[0x24BDAC7A8](v8, v9);
  v59 = (char *)&v57 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10, v12);
  v68 = (char *)&v57 - v13;
  v14 = sub_227D68330((uint64_t *)&unk_253F3AFB0);
  v70 = *(_QWORD *)(v14 - 8);
  v71 = v14;
  MEMORY[0x24BDAC7A8](v14, v15);
  v67 = (char *)&v57 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = type metadata accessor for ReadingHistoryMonth(0);
  v18 = MEMORY[0x24BDAC7A8](v63, v17);
  v60 = (uint64_t)&v57 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18, v20);
  v69 = (char *)&v57 - v21;
  v22 = sub_227E5F2E8();
  v23 = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22, v24);
  v26 = (char *)&v57 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = sub_227E5F300();
  v65 = *(_QWORD *)(v27 - 8);
  v66 = v27;
  MEMORY[0x24BDAC7A8](v27, v28);
  v30 = (char *)&v57 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = sub_227E5F27C();
  v32 = *(_QWORD *)(v31 - 8);
  MEMORY[0x24BDAC7A8](v31, v33);
  v35 = (char *)&v57 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v32 + 16))(v35, a1, v31);
  sub_227E5F288();
  v36 = *(void (**)(char *, _QWORD, uint64_t))(v23 + 104);
  v36(v26, *MEMORY[0x24BDCF240], v22);
  v37 = sub_227E5F2F4();
  v38 = *(void (**)(char *, uint64_t))(v23 + 8);
  v38(v26, v22);
  v36(v26, *MEMORY[0x24BDCF250], v22);
  v39 = sub_227E5F2F4();
  result = ((uint64_t (*)(char *, uint64_t))v38)(v26, v22);
  v41 = 100 * v37;
  if ((unsigned __int128)(v37 * (__int128)100) >> 64 != (100 * v37) >> 63)
  {
    __break(1u);
    goto LABEL_9;
  }
  v42 = v41 + v39;
  if (__OFADD__(v41, v39))
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v36(v26, *MEMORY[0x24BDCF220], v22);
  v43 = sub_227E5F2F4();
  (*(void (**)(char *, uint64_t))(v32 + 8))(v35, v31);
  v38(v26, v22);
  (*(void (**)(char *, uint64_t))(v65 + 8))(v30, v66);
  v66 = v42;
  v73[0] = v42;
  sub_227D68330(&qword_253F3AF68);
  v44 = v67;
  sub_227E5FC9C();
  v45 = (uint64_t)v69;
  v46 = v71;
  MEMORY[0x22E2A9448](v71);
  (*(void (**)(char *, uint64_t))(v70 + 8))(v44, v46);
  v73[0] = v43;
  sub_227D68330(&qword_253F3AF40);
  v47 = (uint64_t)v68;
  sub_227E5FCB4();
  v48 = sub_227D68330(&qword_253F3AF90);
  v49 = *(_QWORD *)(v48 - 8);
  v50 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v49 + 48);
  v51 = v50(v47, 1, v48);
  sub_227D5809C(v47, &qword_253F3AF98);
  if (v51 == 1)
  {
    sub_227D5DFFC(v62, v58, type metadata accessor for ReadingHistoryDay);
    sub_227D51624(&qword_2559282B0, type metadata accessor for ReadingHistoryDay, (uint64_t)&protocol conformance descriptor for ReadingHistoryDay);
    v52 = v59;
    sub_227E5FE10();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v49 + 56))(v52, 0, 1, v48);
    v73[0] = v43;
    sub_227E5FCC0();
LABEL_7:
    v56 = v64;
    sub_227D5DFFC(v45, v60, type metadata accessor for ReadingHistoryMonth);
    sub_227D51624(&qword_255929098, type metadata accessor for ReadingHistoryMonth, (uint64_t)&protocol conformance descriptor for ReadingHistoryMonth);
    sub_227E5FE10();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v70 + 56))(v56, 0, 1, v71);
    v73[0] = v66;
    sub_227E5FCC0();
    return sub_227D64BC4(v45, type metadata accessor for ReadingHistoryMonth);
  }
  v73[4] = v43;
  v53 = (void (*)(_QWORD *, _QWORD))sub_227E5FCA8();
  result = v50(v54, 1, v48);
  if ((_DWORD)result != 1)
  {
    v55 = (void (*)(char *, _QWORD))sub_227E5FDF8();
    sub_227D51624(&qword_2559282E0, type metadata accessor for ReadingHistoryDay, (uint64_t)&protocol conformance descriptor for ReadingHistoryDay);
    sub_227E5FAF8();
    v55(v72, 0);
    v53(v73, 0);
    goto LABEL_7;
  }
LABEL_10:
  __break(1u);
  return result;
}

uint64_t sub_227E07D40(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  void (*v30)(char *, _QWORD, uint64_t);
  uint64_t v31;
  void (*v32)(char *, uint64_t);
  uint64_t v33;
  uint64_t result;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;

  v2 = sub_227D68330((uint64_t *)&unk_253F3AFC0);
  MEMORY[0x24BDAC7A8](v2, v3);
  v53 = (char *)&v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_227D68330(&qword_253F3AF98);
  MEMORY[0x24BDAC7A8](v5, v6);
  v49 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_227D68330((uint64_t *)&unk_253F3AFB0);
  v51 = *(_QWORD *)(v8 - 8);
  v52 = v8;
  MEMORY[0x24BDAC7A8](v8, v9);
  v46 = (char *)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = type metadata accessor for ReadingHistoryMonth(0);
  v12 = MEMORY[0x24BDAC7A8](v48, v11);
  v47 = (uint64_t)&v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12, v14);
  v50 = (char *)&v44 - v15;
  v16 = sub_227E5F2E8();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16, v18);
  v20 = (char *)&v44 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_227E5F300();
  v44 = *(_QWORD *)(v21 - 8);
  v45 = v21;
  MEMORY[0x24BDAC7A8](v21, v22);
  v24 = (char *)&v44 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = sub_227E5F27C();
  v26 = *(_QWORD *)(v25 - 8);
  MEMORY[0x24BDAC7A8](v25, v27);
  v29 = (char *)&v44 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v26 + 16))(v29, a1, v25);
  sub_227E5F288();
  v30 = *(void (**)(char *, _QWORD, uint64_t))(v17 + 104);
  v30(v20, *MEMORY[0x24BDCF240], v16);
  v31 = sub_227E5F2F4();
  v32 = *(void (**)(char *, uint64_t))(v17 + 8);
  v32(v20, v16);
  v30(v20, *MEMORY[0x24BDCF250], v16);
  v33 = sub_227E5F2F4();
  result = ((uint64_t (*)(char *, uint64_t))v32)(v20, v16);
  v35 = 100 * v31;
  if ((unsigned __int128)(v31 * (__int128)100) >> 64 == (100 * v31) >> 63)
  {
    v36 = v35 + v33;
    if (!__OFADD__(v35, v33))
    {
      v30(v20, *MEMORY[0x24BDCF220], v16);
      v37 = sub_227E5F2F4();
      (*(void (**)(char *, uint64_t))(v26 + 8))(v29, v25);
      v32(v20, v16);
      (*(void (**)(char *, uint64_t))(v44 + 8))(v24, v45);
      v54 = v36;
      sub_227D68330(&qword_253F3AF68);
      v38 = v46;
      sub_227E5FC9C();
      v39 = (uint64_t)v50;
      v40 = v52;
      MEMORY[0x22E2A9448](v52);
      v41 = v51;
      (*(void (**)(char *, uint64_t))(v51 + 8))(v38, v40);
      v42 = sub_227D68330(&qword_253F3AF90);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 56))(v49, 1, 1, v42);
      v54 = v37;
      sub_227D68330(&qword_253F3AF40);
      sub_227E5FCC0();
      sub_227D5DFFC(v39, v47, type metadata accessor for ReadingHistoryMonth);
      sub_227D51624(&qword_255929098, type metadata accessor for ReadingHistoryMonth, (uint64_t)&protocol conformance descriptor for ReadingHistoryMonth);
      v43 = v53;
      sub_227E5FE10();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v41 + 56))(v43, 0, 1, v40);
      v54 = v36;
      sub_227E5FCC0();
      return sub_227D64BC4(v39, type metadata accessor for ReadingHistoryMonth);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_227E08188(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  BOOL v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  os_log_t v60;
  void *v61;
  _BOOL4 v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  os_log_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  char *v94;
  char *v95;
  Class isa;
  os_log_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;

  v4 = sub_227D68330(&qword_253F3AF98);
  MEMORY[0x24BDAC7A8](v4, v5);
  v102 = (char *)&v82 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_227D68330(&qword_255929188);
  v9 = MEMORY[0x24BDAC7A8](v7, v8);
  v103 = (char *)&v82 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9, v11);
  v13 = (uint64_t *)((char *)&v82 - v12);
  v104 = sub_227D68330(&qword_255929190);
  v98 = *(_QWORD *)(v104 - 8);
  MEMORY[0x24BDAC7A8](v104, v14);
  v106 = (char *)&v82 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_227D68330(&qword_2559291A8);
  isa = v16[-1].isa;
  v97 = v16;
  v18 = MEMORY[0x24BDAC7A8](v16, v17);
  v95 = (char *)&v82 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18, v20);
  v94 = (char *)&v82 - v21;
  v22 = type metadata accessor for ReadingHistoryMonth(0);
  v24 = MEMORY[0x24BDAC7A8](v22, v23);
  v26 = (char *)&v82 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = MEMORY[0x24BDAC7A8](v24, v27);
  v105 = (uint64_t)&v82 - v29;
  MEMORY[0x24BDAC7A8](v28, v30);
  v101 = (uint64_t)&v82 - v31;
  v32 = sub_227D68330((uint64_t *)&unk_253F3AFB0);
  v33 = *(_QWORD *)(v32 - 8);
  MEMORY[0x24BDAC7A8](v32, v34);
  v36 = (char *)&v82 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = sub_227D68330((uint64_t *)&unk_253F3AFC0);
  v39 = MEMORY[0x24BDAC7A8](v37, v38);
  v41 = MEMORY[0x24BDAC7A8](v39, v40);
  v43 = (char *)&v82 - v42;
  MEMORY[0x24BDAC7A8](v41, v44);
  v47 = (char *)&v82 - v46;
  v48 = 100 * a1;
  if ((unsigned __int128)(a1 * (__int128)100) >> 64 != (100 * a1) >> 63)
  {
    __break(1u);
    goto LABEL_26;
  }
  v49 = __OFADD__(v48, a2);
  v50 = v48 + a2;
  if (v49)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  v92 = v45;
  v93 = v26;
  v99 = v50;
  v107 = v50;
  v91 = sub_227D68330(&qword_253F3AF68);
  sub_227E5FCB4();
  sub_227D5DF48((uint64_t)v47, (uint64_t)v43, (uint64_t *)&unk_253F3AFC0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v43, 1, v32) != 1)
  {
    v90 = v47;
    v100 = v22;
    (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v36, v43, v32);
    v52 = v33;
    v53 = v101;
    MEMORY[0x22E2A9430](v32);
    v54 = sub_227D68330(&qword_253F3AF40);
    sub_227D515E4(&qword_2559291B0, &qword_253F3AF40, MEMORY[0x24BE184B0]);
    if ((sub_227E60170() & 1) == 0)
    {
      sub_227D64BC4(v53, type metadata accessor for ReadingHistoryMonth);
      (*(void (**)(char *, uint64_t))(v52 + 8))(v36, v32);
LABEL_23:
      v51 = (uint64_t)v90;
      return sub_227D5809C(v51, (uint64_t *)&unk_253F3AFC0);
    }
    v86 = v52;
    v89 = v36;
    v55 = sub_227D68330(&qword_253F3AEE0);
    v56 = a2;
    v87 = a2;
    v57 = v55;
    sub_227E5F984();
    v83 = v107;
    v88 = sub_227E0CEC8(a1, v56);
    v85 = v57;
    sub_227E5F984();
    v84 = v107;
    a1 = sub_227E0D0E4(a1, v87);
    v87 = v32;
    MEMORY[0x22E2A9448](v32);
    v58 = v94;
    sub_227E60164();
    v59 = v95;
    sub_227E60188();
    v82 = sub_227E6017C();
    v60 = v97;
    v43 = (char *)*((_QWORD *)isa + 1);
    ((void (*)(char *, os_log_t))v43)(v59, v97);
    ((void (*)(char *, os_log_t))v43)(v58, v60);
    LOBYTE(v43) = sub_227E60248();
    v32 = v54;
    if (qword_253F39FF8[0] == -1)
    {
LABEL_7:
      v61 = (void *)qword_253F39FF0;
      v62 = os_log_type_enabled((os_log_t)qword_253F39FF0, (os_log_type_t)v43);
      v63 = v84;
      v64 = v83;
      v65 = a1;
      if (v62)
      {
        v97 = v61;
        v66 = swift_slowAlloc();
        *(_DWORD *)v66 = 134219264;
        v107 = v82;
        sub_227E603B0();
        *(_WORD *)(v66 + 12) = 2048;
        v107 = v99;
        sub_227E603B0();
        *(_WORD *)(v66 + 22) = 2048;
        v107 = v64;
        sub_227E603B0();
        *(_WORD *)(v66 + 32) = 2048;
        v107 = v88;
        sub_227E603B0();
        *(_WORD *)(v66 + 42) = 2048;
        v107 = v63;
        sub_227E603B0();
        *(_WORD *)(v66 + 52) = 2048;
        v107 = a1;
        sub_227E603B0();
        v67 = v97;
        _os_log_impl(&dword_227D4F000, v97, (os_log_type_t)v43, "summarizeAndPrune: Prune %ld days in %ld - lastDayStreak: (old=%ld, computed=%ld), totalTime: (old=%ld, computed=%ld)", (uint8_t *)v66, 0x3Eu);
        MEMORY[0x22E2AA8AC](v66, -1, -1);

      }
      v68 = v88;
      if (v88 != v64)
      {
        if (v64 > v88)
          v68 = v64;
        v107 = v68;
        sub_227E5F990();
      }
      if (v65 != v63)
      {
        if (v63 <= v65)
          v69 = v65;
        else
          v69 = v63;
        v107 = v69;
        sub_227E5F990();
      }
      sub_227E5FC6C();
      while (1)
      {
        v70 = (uint64_t)v103;
        sub_227E5FC3C();
        sub_227D5B0DC(v70, (uint64_t)v13, &qword_255929188);
        v71 = sub_227D68330((uint64_t *)&unk_255928E70);
        if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v71 - 8) + 48))(v13, 1, v71) == 1)
          break;
        v72 = v32;
        v73 = *v13;
        v74 = (char *)v13 + *(int *)(v71 + 48);
        v75 = sub_227D68330(&qword_253F3AF90);
        v76 = *(_QWORD *)(v75 - 8);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v76 + 56))(v102, 1, 1, v75);
        v107 = v73;
        v32 = v72;
        sub_227E5FCC0();
        (*(void (**)(char *, uint64_t))(v76 + 8))(v74, v75);
      }
      (*(void (**)(char *, uint64_t))(v98 + 8))(v106, v104);
      v77 = v105;
      sub_227D5DFFC(v105, (uint64_t)v93, type metadata accessor for ReadingHistoryMonth);
      sub_227D51624(&qword_255929098, type metadata accessor for ReadingHistoryMonth, (uint64_t)&protocol conformance descriptor for ReadingHistoryMonth);
      v78 = v92;
      sub_227E5FE10();
      v79 = v86;
      v80 = v87;
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v86 + 56))(v78, 0, 1, v87);
      v107 = v99;
      sub_227E5FCC0();
      sub_227D64BC4(v77, type metadata accessor for ReadingHistoryMonth);
      sub_227D64BC4(v101, type metadata accessor for ReadingHistoryMonth);
      (*(void (**)(char *, uint64_t))(v79 + 8))(v89, v80);
      goto LABEL_23;
    }
LABEL_27:
    swift_once();
    goto LABEL_7;
  }
  sub_227D5809C((uint64_t)v47, (uint64_t *)&unk_253F3AFC0);
  v51 = (uint64_t)v43;
  return sub_227D5809C(v51, (uint64_t *)&unk_253F3AFC0);
}

void sub_227E08A3C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  uint64_t v70;
  uint64_t v71;
  void (*v72)(char *, uint64_t, uint64_t);
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  char *v80;
  char *v81;
  char *v82;
  uint64_t v83;
  char v84;
  void (*v85)(char *, uint64_t);
  _QWORD *v86;
  void (*v87)(char *, uint64_t);
  unint64_t v88;
  unint64_t v89;
  uint64_t v90;
  uint64_t v91;
  os_log_type_t v92;
  void *v93;
  NSObject *v94;
  uint8_t *v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  void (*v101)(char *, uint64_t);
  uint64_t v102;
  uint64_t v103;
  unsigned int (*v104)(uint64_t, uint64_t, uint64_t);
  uint64_t v105;
  id v106;
  void (*v107)(char *, uint64_t, uint64_t);
  char *v108;
  void (*v109)(char *, uint64_t);
  uint64_t v110;
  void (*v111)(_QWORD);
  char *v112;
  char *v113;
  uint64_t v114;
  void (*v115)(char *, char *);
  uint64_t v116;
  char *v117;
  uint64_t v118;
  void (*v119)(uint64_t, uint64_t);
  uint64_t v120;
  char *v121;
  uint64_t v122;
  unsigned int v123;
  char *v124;
  uint64_t v125;
  void (*v126)(char *, _QWORD, char *);
  uint64_t v127;
  uint64_t v128;
  void *v129;
  uint64_t v130;
  NSObject *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t *v135;
  uint64_t v136;
  uint64_t v137;
  char *v138;
  char *v139;
  char *v140;
  void (*v141)(char *, uint64_t);
  char *v142;
  uint64_t v143;
  char *v144;
  uint64_t v145;
  char *v146;
  uint64_t v147;
  void (*v148)(char *, uint64_t);
  uint64_t v149;
  char *v150;
  uint64_t v151;
  char *v152;
  uint64_t v153;
  char *v154;
  uint64_t v155;
  char *v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  char *v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  _QWORD *v165;
  uint64_t v166;
  char *v167;
  uint64_t v168;
  char *v169;
  uint64_t v170;
  uint64_t v171;
  char *v172;
  char *v173;
  uint64_t v174;
  _QWORD *v175;
  char *v176;
  void (*v177)(char *, uint64_t, uint64_t);
  _QWORD *v178;
  void (*v179)(char *, uint64_t);
  _QWORD *v180;
  uint64_t v181;
  uint64_t v182;
  _QWORD *v183;

  v159 = a1;
  v145 = sub_227E5F2E8();
  v143 = *(_QWORD *)(v145 - 8);
  MEMORY[0x24BDAC7A8](v145, v2);
  v144 = (char *)&v138 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v161 = sub_227E5F27C();
  v158 = *(_QWORD *)(v161 - 8);
  v5 = MEMORY[0x24BDAC7A8](v161, v4);
  v138 = (char *)&v138 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v5, v7);
  v140 = (char *)&v138 - v9;
  v11 = MEMORY[0x24BDAC7A8](v8, v10);
  v141 = (void (*)(char *, uint64_t))((char *)&v138 - v12);
  MEMORY[0x24BDAC7A8](v11, v13);
  v146 = (char *)&v138 - v14;
  v15 = sub_227D68330(&qword_253F391F0);
  MEMORY[0x24BDAC7A8](v15, v16);
  v154 = (char *)&v138 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_227D68330(&qword_253F391E8);
  MEMORY[0x24BDAC7A8](v18, v19);
  v150 = (char *)&v138 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v155 = sub_227E5F0A8();
  v153 = *(_QWORD *)(v155 - 8);
  MEMORY[0x24BDAC7A8](v155, v21);
  v152 = (char *)&v138 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v162 = sub_227E5F300();
  v151 = *(_QWORD *)(v162 - 8);
  v24 = MEMORY[0x24BDAC7A8](v162, v23);
  v148 = (void (*)(char *, uint64_t))((char *)&v138 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v24, v26);
  v156 = (char *)&v138 - v27;
  v28 = sub_227D68330(&qword_253F391D0);
  v30 = MEMORY[0x24BDAC7A8](v28, v29);
  v32 = (char *)&v138 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = MEMORY[0x24BDAC7A8](v30, v33);
  v160 = (char *)&v138 - v35;
  v37 = MEMORY[0x24BDAC7A8](v34, v36);
  v39 = (char *)&v138 - v38;
  v41 = MEMORY[0x24BDAC7A8](v37, v40);
  v147 = (uint64_t)&v138 - v42;
  v44 = MEMORY[0x24BDAC7A8](v41, v43);
  v149 = (uint64_t)&v138 - v45;
  MEMORY[0x24BDAC7A8](v44, v46);
  v163 = (uint64_t)&v138 - v47;
  v170 = sub_227D68330(&qword_2559291A8);
  v174 = *(_QWORD *)(v170 - 8);
  v49 = MEMORY[0x24BDAC7A8](v170, v48);
  v173 = (char *)&v138 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v49, v51);
  v172 = (char *)&v138 - v52;
  v168 = sub_227D68330(&qword_253F3AF40);
  v171 = *(_QWORD *)(v168 - 8);
  MEMORY[0x24BDAC7A8](v168, v53);
  v167 = (char *)&v138 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = type metadata accessor for ReadingHistoryMonth(0);
  MEMORY[0x24BDAC7A8](v55, v56);
  v169 = (char *)&v138 - ((v57 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = sub_227D68330((uint64_t *)&unk_253F3AFB0);
  v59 = *(_QWORD *)(v58 - 8);
  MEMORY[0x24BDAC7A8](v58, v60);
  v62 = (char *)&v138 - ((v61 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = sub_227D68330((uint64_t *)&unk_253F3B020);
  v65 = MEMORY[0x24BDAC7A8](v63, v64);
  v176 = (char *)&v138 - ((v66 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v65, v67);
  v69 = (char **)((char *)&v138 - v68);
  v178 = (_QWORD *)sub_227D68330(&qword_253F3AF18);
  v164 = *(v178 - 1);
  MEMORY[0x24BDAC7A8](v178, v70);
  v72 = (void (*)(char *, uint64_t, uint64_t))((char *)&v138 - ((v71 + 15) & 0xFFFFFFFFFFFFFFF0));
  v175 = (_QWORD *)MEMORY[0x24BEE4AF8];
  v183 = (_QWORD *)MEMORY[0x24BEE4AF8];
  sub_227D68330(&qword_253F3AF68);
  v177 = v72;
  v157 = v1;
  sub_227E5FC6C();
  v139 = v32;
  v142 = v39;
  v166 = v59;
  v165 = v69;
  v73 = v168;
  while (1)
  {
    v74 = (uint64_t)v176;
    sub_227E5FC3C();
    sub_227D5B0DC(v74, (uint64_t)v69, (uint64_t *)&unk_253F3B020);
    v75 = sub_227D68330(&qword_253F3B018);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v75 - 8) + 48))(v69, 1, v75) == 1)
      break;
    v179 = (void (*)(char *, uint64_t))*v69;
    (*(void (**)(char *, char *, uint64_t))(v59 + 32))(v62, (char *)v69 + *(int *)(v75 + 48), v58);
    v76 = (uint64_t)v169;
    v77 = v58;
    v78 = v62;
    MEMORY[0x22E2A9430](v58);
    v79 = v171;
    v80 = v167;
    (*(void (**)(char *, uint64_t, uint64_t))(v171 + 16))(v167, v76, v73);
    sub_227D64BC4(v76, type metadata accessor for ReadingHistoryMonth);
    sub_227D515E4(&qword_2559291B0, &qword_253F3AF40, MEMORY[0x24BE184B0]);
    v81 = v172;
    sub_227E60164();
    v82 = v173;
    sub_227E60188();
    sub_227D515E4(&qword_2559291B8, &qword_2559291A8, MEMORY[0x24BE18220]);
    v83 = v170;
    v84 = sub_227E5FF6C();
    v85 = *(void (**)(char *, uint64_t))(v174 + 8);
    v85(v82, v83);
    v85(v81, v83);
    (*(void (**)(char *, uint64_t))(v79 + 8))(v80, v73);
    if ((v84 & 1) != 0)
    {
      v58 = v77;
      v59 = v166;
      v62 = v78;
      v69 = v165;
    }
    else
    {
      v86 = v175;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v86 = sub_227DF8E24(0, v86[2] + 1, 1, v86);
      v58 = v77;
      v59 = v166;
      v62 = v78;
      v69 = v165;
      v87 = v179;
      v89 = v86[2];
      v88 = v86[3];
      if (v89 >= v88 >> 1)
        v86 = sub_227DF8E24((_QWORD *)(v88 > 1), v89 + 1, 1, v86);
      v86[2] = v89 + 1;
      v86[v89 + 4] = v87;
      v175 = v86;
      v183 = v86;
    }
    (*(void (**)(char *, uint64_t))(v59 + 8))(v62, v58);
  }
  (*(void (**)(void (*)(char *, uint64_t, uint64_t), _QWORD *))(v164 + 8))(v177, v178);
  if (v175[2] >= 2uLL)
  {
    v182 = v159;
    v90 = v161;
    v91 = v163;
    if (v159 <= 0)
    {
      v92 = sub_227E60230();
      if (qword_253F39FF8[0] != -1)
        swift_once();
      v93 = (void *)qword_253F39FF0;
      if (os_log_type_enabled((os_log_t)qword_253F39FF0, v92))
      {
        v94 = v93;
        v95 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)v95 = 134217984;
        swift_beginAccess();
        v181 = v182;
        sub_227E603B0();
        _os_log_impl(&dword_227D4F000, v94, v92, "summarizeAndPrune: expect monthsToKeep >= 1, got %ld", v95, 0xCu);
        MEMORY[0x22E2AA8AC](v95, -1, -1);

      }
      swift_beginAccess();
      v182 = 1;
    }
    sub_227E0D440(&v183);
    if (!v183[2])
    {
      swift_bridgeObjectRelease();
      return;
    }
    v96 = v156;
    sub_227E5F288();
    v97 = v151;
    v98 = v162;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v151 + 56))(v150, 1, 1, v162);
    v99 = sub_227E5F30C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v99 - 8) + 56))(v154, 1, 1, v99);
    v100 = v152;
    sub_227E5F09C();
    sub_227E5F084();
    sub_227E5F090();
    sub_227E5F2B8();
    (*(void (**)(char *, uint64_t))(v153 + 8))(v100, v155);
    v101 = *(void (**)(char *, uint64_t))(v97 + 8);
    v101(v96, v98);
    v102 = v149;
    sub_227D5DF48(v91, v149, &qword_253F391D0);
    v103 = v158;
    v104 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v158 + 48);
    if (v104(v102, 1, v90) == 1)
    {
      sub_227D5809C(v91, &qword_253F391D0);
      swift_bridgeObjectRelease();
      v105 = v102;
LABEL_42:
      sub_227D5809C(v105, &qword_253F391D0);
      return;
    }
    v179 = v101;
    v107 = *(void (**)(char *, uint64_t, uint64_t))(v103 + 32);
    v108 = v146;
    v177 = v107;
    v107(v146, v102, v90);
    v109 = v148;
    sub_227E5F288();
    v110 = v143;
    v111 = *(void (**)(_QWORD))(v143 + 104);
    v112 = v144;
    LODWORD(v176) = *MEMORY[0x24BDCF250];
    v113 = (char *)v145;
    v178 = v111;
    v111(v144);
    swift_beginAccess();
    if (__OFSUB__(0, v182))
    {
      __break(1u);
    }
    else
    {
      v114 = v147;
      sub_227E5F2D0();
      v115 = *(void (**)(char *, char *))(v110 + 8);
      v115(v112, v113);
      v116 = (uint64_t)v142;
      sub_227D5DF48(v114, (uint64_t)v142, &qword_253F391D0);
      if (v104(v116, 1, v90) == 1)
      {
        sub_227D5809C(v114, &qword_253F391D0);
        v179((char *)v109, v162);
        (*(void (**)(char *, uint64_t))(v158 + 8))(v108, v90);
        sub_227D5809C(v163, &qword_253F391D0);
        swift_bridgeObjectRelease();
        v105 = v116;
        goto LABEL_42;
      }
      v109 = v141;
      v177((char *)v141, v116, v90);
      v117 = v156;
      sub_227E5F288();
      v118 = (uint64_t)v140;
      sub_227E5F1F8();
      v102 = sub_227E052F0(v118, 1);
      v119 = *(void (**)(uint64_t, uint64_t))(v158 + 8);
      v119(v118, v90);
      v179(v117, v162);
      ((void (*)(char *, _QWORD, char *))v178)(v112, *MEMORY[0x24BDCF220], v113);
      v175 = (_QWORD *)v102;
      if (!__OFSUB__(0, v102))
      {
        v120 = (uint64_t)v160;
        v121 = (char *)v148;
        sub_227E5F2D0();
        v115(v112, v113);
        v122 = (uint64_t)v139;
        sub_227D5DF48(v120, (uint64_t)v139, &qword_253F391D0);
        v123 = v104(v122, 1, v90);
        v124 = v113;
        v125 = v147;
        if (v123 == 1)
        {
          sub_227D5809C(v120, &qword_253F391D0);
          v119((uint64_t)v109, v90);
          sub_227D5809C(v125, &qword_253F391D0);
          v179(v121, v162);
          v119((uint64_t)v146, v90);
          sub_227D5809C(v163, &qword_253F391D0);
          swift_bridgeObjectRelease();
          v105 = v122;
          goto LABEL_42;
        }
        v113 = v138;
        v177(v138, v122, v90);
        v126 = (void (*)(char *, _QWORD, char *))v178;
        ((void (*)(char *, _QWORD, char *))v178)(v112, v176, v124);
        v127 = sub_227E5F2F4();
        v115(v112, v124);
        v126(v112, *MEMORY[0x24BDCF240], v124);
        v102 = sub_227E5F2F4();
        v115(v112, v124);
        v128 = 100 * v102;
        if ((unsigned __int128)(v102 * (__int128)100) >> 64 == (100 * v102) >> 63)
        {
          v112 = (char *)(v128 + v127);
          if (!__OFADD__(v128, v127))
          {
            v109 = (void (*)(char *, uint64_t))v119;
            LOBYTE(v102) = sub_227E60248();
            if (qword_253F39FF8[0] == -1)
            {
LABEL_34:
              v129 = (void *)qword_253F39FF0;
              if (os_log_type_enabled((os_log_t)qword_253F39FF0, (os_log_type_t)v102))
              {
                v130 = v182;
                v131 = v129;
                v132 = swift_slowAlloc();
                *(_DWORD *)v132 = 134218496;
                v180 = v112;
                sub_227E603B0();
                *(_WORD *)(v132 + 12) = 2048;
                v180 = (_QWORD *)v130;
                sub_227E603B0();
                *(_WORD *)(v132 + 22) = 2048;
                v90 = v161;
                v180 = v175;
                sub_227E603B0();
                _os_log_impl(&dword_227D4F000, v131, (os_log_type_t)v102, "summarizeAndPrune: About to prune: lastMonthToKeep=%ld, historicalMonthsToKeep: %ld, streakDays=%ld", (uint8_t *)v132, 0x20u);
                MEMORY[0x22E2AA8AC](v132, -1, -1);

              }
              v133 = v183[2];
              v134 = (uint64_t)v160;
              if (v133)
              {
                v135 = v183 + 4;
                do
                {
                  v137 = *v135++;
                  v136 = v137;
                  if (v137 < (uint64_t)v112)
                  {
                    sub_227E08188(v136 / 100, v136 % 100);
                    v134 = (uint64_t)v160;
                  }
                  --v133;
                }
                while (v133);
              }
              swift_bridgeObjectRelease();
              v109(v113, v90);
              sub_227D5809C(v134, &qword_253F391D0);
              v109((char *)v141, v90);
              sub_227D5809C(v147, &qword_253F391D0);
              v179((char *)v148, v162);
              v109(v146, v90);
              v105 = v163;
              goto LABEL_42;
            }
LABEL_47:
            swift_once();
            goto LABEL_34;
          }
LABEL_46:
          __break(1u);
          goto LABEL_47;
        }
LABEL_45:
        __break(1u);
        goto LABEL_46;
      }
    }
    __break(1u);
    goto LABEL_45;
  }
  swift_bridgeObjectRelease();
  sub_227E60248();
  if (qword_253F39FF8[0] != -1)
    swift_once();
  v106 = (id)qword_253F39FF0;
  sub_227E5F564();

}

uint64_t ReadingHistoryDay.additionalFields.getter()
{
  return sub_227E0B984((void (*)(_QWORD))type metadata accessor for ReadingHistoryDay);
}

uint64_t ReadingHistoryDay.additionalFields.setter(uint64_t a1)
{
  return sub_227E0B9B4(a1, type metadata accessor for ReadingHistoryDay);
}

uint64_t (*ReadingHistoryDay.additionalFields.modify())()
{
  type metadata accessor for ReadingHistoryDay(0);
  return nullsub_1;
}

uint64_t sub_227E09BCC()
{
  uint64_t result;

  qword_255929020 = 0x54676E6964616572;
  *(_QWORD *)algn_255929028 = 0xEB00000000656D69;
  qword_255929030 = swift_getKeyPath();
  unk_255929038 = 0x47676E6964616572;
  qword_255929040 = 0xEB000000006C616FLL;
  result = swift_getKeyPath();
  qword_255929048 = result;
  return result;
}

uint64_t static ReadingHistoryDay.fields.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  if (qword_255928190 != -1)
    swift_once();
  v2 = *(_QWORD *)algn_255929028;
  v4 = qword_255929030;
  v3 = unk_255929038;
  v5 = qword_255929040;
  v6 = qword_255929048;
  *a1 = qword_255929020;
  a1[1] = v2;
  a1[2] = v4;
  a1[3] = v3;
  a1[4] = v5;
  a1[5] = v6;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  return swift_retain();
}

uint64_t ReadingHistoryDay.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  sub_227E5FE70();
  v2 = type metadata accessor for ReadingHistoryDay(0);
  result = sub_227E5F9A8();
  *(_QWORD *)(a1 + *(int *)(v2 + 24)) = MEMORY[0x24BEE4B00];
  return result;
}

uint64_t ReadingHistoryDay.init(defaultGoal:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;

  v4 = sub_227D68330(&qword_253F3AEE0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v6);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_227E5FE70();
  v9 = type metadata accessor for ReadingHistoryDay(0);
  v10 = a2 + *(int *)(v9 + 20);
  v13 = 0;
  sub_227E5F9A8();
  *(_QWORD *)(a2 + *(int *)(v9 + 24)) = MEMORY[0x24BEE4B00];
  v13 = a1;
  sub_227E5F9A8();
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v5 + 40))(v10, v8, v4);
}

uint64_t sub_227E09E3C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  if (qword_255928190 != -1)
    swift_once();
  v2 = *(_QWORD *)algn_255929028;
  v4 = qword_255929030;
  v3 = unk_255929038;
  v5 = qword_255929040;
  v6 = qword_255929048;
  *a1 = qword_255929020;
  a1[1] = v2;
  a1[2] = v4;
  a1[3] = v3;
  a1[4] = v5;
  a1[5] = v6;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  return swift_retain();
}

uint64_t sub_227E09EC0()
{
  sub_227D51624(&qword_2559282E0, type metadata accessor for ReadingHistoryDay, (uint64_t)&protocol conformance descriptor for ReadingHistoryDay);
  return sub_227E5FB28();
}

uint64_t sub_227E09F00(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t result;

  v4 = *(int *)(a2 + 24);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + v4) = a1;
  return result;
}

uint64_t sub_227E09F34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;

  sub_227E5FE70();
  result = sub_227E5F9A8();
  *(_QWORD *)(a2 + *(int *)(a1 + 24)) = MEMORY[0x24BEE4B00];
  return result;
}

uint64_t sub_227E09F94()
{
  sub_227D51624(&qword_253F39F40, type metadata accessor for ReadingHistoryDay, (uint64_t)&protocol conformance descriptor for ReadingHistoryDay);
  return sub_227E5FD74();
}

uint64_t sub_227E09FD4()
{
  sub_227D51624(&qword_2559282E0, type metadata accessor for ReadingHistoryDay, (uint64_t)&protocol conformance descriptor for ReadingHistoryDay);
  return sub_227E5FAA4();
}

uint64_t sub_227E0A02C()
{
  sub_227D51624(&qword_2559282E0, type metadata accessor for ReadingHistoryDay, (uint64_t)&protocol conformance descriptor for ReadingHistoryDay);
  return sub_227E5FAD4();
}

uint64_t sub_227E0A07C()
{
  sub_227D51624(&qword_2559282E0, type metadata accessor for ReadingHistoryDay, (uint64_t)&protocol conformance descriptor for ReadingHistoryDay);
  return sub_227E5FB1C();
}

uint64_t sub_227E0A0CC()
{
  sub_227D51624(&qword_2559282E0, type metadata accessor for ReadingHistoryDay, (uint64_t)&protocol conformance descriptor for ReadingHistoryDay);
  return sub_227E5FAE0();
}

uint64_t sub_227E0A134()
{
  sub_227D51624(&qword_2559282E0, type metadata accessor for ReadingHistoryDay, (uint64_t)&protocol conformance descriptor for ReadingHistoryDay);
  return sub_227E5FB10();
}

uint64_t sub_227E0A184()
{
  sub_227D51624(&qword_2559282E0, type metadata accessor for ReadingHistoryDay, (uint64_t)&protocol conformance descriptor for ReadingHistoryDay);
  return sub_227E5FAEC();
}

uint64_t sub_227E0A1D4()
{
  sub_227D51624(&qword_2559282E0, type metadata accessor for ReadingHistoryDay, (uint64_t)&protocol conformance descriptor for ReadingHistoryDay);
  return sub_227E5FABC();
}

uint64_t sub_227E0A22C()
{
  sub_227D51624(&qword_2559282E0, type metadata accessor for ReadingHistoryDay, (uint64_t)&protocol conformance descriptor for ReadingHistoryDay);
  return sub_227E5FA98();
}

uint64_t sub_227E0A294()
{
  sub_227D51624(&qword_2559282E0, type metadata accessor for ReadingHistoryDay, (uint64_t)&protocol conformance descriptor for ReadingHistoryDay);
  return sub_227E5FA74();
}

uint64_t sub_227E0A2E4()
{
  sub_227D51624(&qword_2559282E0, type metadata accessor for ReadingHistoryDay, (uint64_t)&protocol conformance descriptor for ReadingHistoryDay);
  return sub_227E5FAB0();
}

uint64_t sub_227E0A324()
{
  sub_227D51624(&qword_2559282E0, type metadata accessor for ReadingHistoryDay, (uint64_t)&protocol conformance descriptor for ReadingHistoryDay);
  return sub_227E5FA80();
}

uint64_t sub_227E0A374()
{
  sub_227D51624(&qword_2559282E0, type metadata accessor for ReadingHistoryDay, (uint64_t)&protocol conformance descriptor for ReadingHistoryDay);
  return sub_227E5FAF8();
}

uint64_t sub_227E0A3C4()
{
  sub_227D51624(&qword_2559282B0, type metadata accessor for ReadingHistoryDay, (uint64_t)&protocol conformance descriptor for ReadingHistoryDay);
  return sub_227E5FD2C();
}

uint64_t sub_227E0A428()
{
  sub_227D51624(&qword_2559282B0, type metadata accessor for ReadingHistoryDay, (uint64_t)&protocol conformance descriptor for ReadingHistoryDay);
  return sub_227E5FD38();
}

uint64_t sub_227E0A49C()
{
  sub_227D51624(&qword_2559282E0, type metadata accessor for ReadingHistoryDay, (uint64_t)&protocol conformance descriptor for ReadingHistoryDay);
  return sub_227E5FAC8();
}

uint64_t sub_227E0A500()
{
  sub_227D51624(&qword_2559282E0, type metadata accessor for ReadingHistoryDay, (uint64_t)&protocol conformance descriptor for ReadingHistoryDay);
  return sub_227E5FB04();
}

uint64_t sub_227E0A55C()
{
  sub_227D51624(&qword_2559282E0, type metadata accessor for ReadingHistoryDay, (uint64_t)&protocol conformance descriptor for ReadingHistoryDay);
  return sub_227E5FA8C();
}

uint64_t ReadingHistoryMonth.additionalFields.getter()
{
  type metadata accessor for ReadingHistoryMonth(0);
  return swift_bridgeObjectRetain();
}

uint64_t ReadingHistoryMonth.additionalFields.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;

  v3 = *(int *)(type metadata accessor for ReadingHistoryMonth(0) + 28);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + v3) = a1;
  return result;
}

uint64_t (*ReadingHistoryMonth.additionalFields.modify())()
{
  type metadata accessor for ReadingHistoryMonth(0);
  return nullsub_1;
}

uint64_t sub_227E0A634()
{
  uint64_t result;

  qword_255929050 = 1937334628;
  *(_QWORD *)algn_255929058 = 0xE400000000000000;
  qword_255929060 = swift_getKeyPath();
  unk_255929068 = 0x6D69546C61746F74;
  qword_255929070 = 0xE900000000000065;
  qword_255929078 = swift_getKeyPath();
  qword_255929080 = 0xD000000000000014;
  qword_255929088 = 0x8000000227E6CC10;
  result = swift_getKeyPath();
  qword_255929090 = result;
  return result;
}

uint64_t static ReadingHistoryMonth.fields.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  if (qword_255928198 != -1)
    swift_once();
  v2 = *(_QWORD *)algn_255929058;
  v4 = qword_255929060;
  v3 = unk_255929068;
  v5 = qword_255929070;
  v6 = qword_255929078;
  v7 = qword_255929080;
  v8 = qword_255929088;
  v9 = qword_255929090;
  *a1 = qword_255929050;
  a1[1] = v2;
  a1[2] = v4;
  a1[3] = v3;
  a1[4] = v5;
  a1[5] = v6;
  a1[6] = v7;
  a1[7] = v8;
  a1[8] = v9;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  return swift_retain();
}

uint64_t ReadingHistoryMonth.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  sub_227D68330(&qword_253F3AF90);
  sub_227D515E4(&qword_253F3AF78, &qword_253F3AF90, MEMORY[0x24BE18990]);
  sub_227D515E4((unint64_t *)&unk_253F3AF80, &qword_253F3AF90, MEMORY[0x24BE18998]);
  sub_227E5FC78();
  v2 = type metadata accessor for ReadingHistoryMonth(0);
  sub_227E5F9A8();
  result = sub_227E5F9A8();
  *(_QWORD *)(a1 + *(int *)(v2 + 28)) = MEMORY[0x24BEE4B00];
  return result;
}

uint64_t sub_227E0A880@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  if (qword_255928198 != -1)
    swift_once();
  v2 = *(_QWORD *)algn_255929058;
  v4 = qword_255929060;
  v3 = unk_255929068;
  v5 = qword_255929070;
  v6 = qword_255929078;
  v7 = qword_255929080;
  v8 = qword_255929088;
  v9 = qword_255929090;
  *a1 = qword_255929050;
  a1[1] = v2;
  a1[2] = v4;
  a1[3] = v3;
  a1[4] = v5;
  a1[5] = v6;
  a1[6] = v7;
  a1[7] = v8;
  a1[8] = v9;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  return swift_retain();
}

uint64_t sub_227E0A92C()
{
  sub_227D51624(&qword_255929120, type metadata accessor for ReadingHistoryMonth, (uint64_t)&protocol conformance descriptor for ReadingHistoryMonth);
  return sub_227E5FBE8();
}

uint64_t sub_227E0A96C()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_227E0A978(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t result;

  v4 = *(int *)(a2 + 28);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + v4) = a1;
  return result;
}

uint64_t (*sub_227E0A9AC())()
{
  return nullsub_1;
}

uint64_t sub_227E0A9C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;

  sub_227D68330(&qword_253F3AF90);
  sub_227D515E4(&qword_253F3AF78, &qword_253F3AF90, MEMORY[0x24BE18990]);
  sub_227D515E4((unint64_t *)&unk_253F3AF80, &qword_253F3AF90, MEMORY[0x24BE18998]);
  sub_227E5FC78();
  sub_227E5F9A8();
  result = sub_227E5F9A8();
  *(_QWORD *)(a2 + *(int *)(a1 + 28)) = MEMORY[0x24BEE4B00];
  return result;
}

uint64_t sub_227E0AAC0()
{
  sub_227D51624(&qword_253F3A2F0, type metadata accessor for ReadingHistoryMonth, (uint64_t)&protocol conformance descriptor for ReadingHistoryMonth);
  return sub_227E5FD74();
}

uint64_t sub_227E0AB00()
{
  sub_227D51624(&qword_255929120, type metadata accessor for ReadingHistoryMonth, (uint64_t)&protocol conformance descriptor for ReadingHistoryMonth);
  return sub_227E5FB64();
}

uint64_t sub_227E0AB58()
{
  sub_227D51624(&qword_255929120, type metadata accessor for ReadingHistoryMonth, (uint64_t)&protocol conformance descriptor for ReadingHistoryMonth);
  return sub_227E5FB94();
}

uint64_t sub_227E0ABA8()
{
  sub_227D51624(&qword_255929120, type metadata accessor for ReadingHistoryMonth, (uint64_t)&protocol conformance descriptor for ReadingHistoryMonth);
  return sub_227E5FBDC();
}

uint64_t sub_227E0ABF8()
{
  sub_227D51624(&qword_255929120, type metadata accessor for ReadingHistoryMonth, (uint64_t)&protocol conformance descriptor for ReadingHistoryMonth);
  return sub_227E5FBA0();
}

uint64_t sub_227E0AC60()
{
  sub_227D51624(&qword_255929120, type metadata accessor for ReadingHistoryMonth, (uint64_t)&protocol conformance descriptor for ReadingHistoryMonth);
  return sub_227E5FBD0();
}

uint64_t sub_227E0ACB0()
{
  sub_227D51624(&qword_255929120, type metadata accessor for ReadingHistoryMonth, (uint64_t)&protocol conformance descriptor for ReadingHistoryMonth);
  return sub_227E5FBAC();
}

uint64_t sub_227E0AD00()
{
  sub_227D51624(&qword_255929120, type metadata accessor for ReadingHistoryMonth, (uint64_t)&protocol conformance descriptor for ReadingHistoryMonth);
  return sub_227E5FB7C();
}

uint64_t sub_227E0AD58()
{
  sub_227D51624(&qword_255929120, type metadata accessor for ReadingHistoryMonth, (uint64_t)&protocol conformance descriptor for ReadingHistoryMonth);
  return sub_227E5FB58();
}

uint64_t sub_227E0ADC0()
{
  sub_227D51624(&qword_255929120, type metadata accessor for ReadingHistoryMonth, (uint64_t)&protocol conformance descriptor for ReadingHistoryMonth);
  return sub_227E5FB34();
}

uint64_t sub_227E0AE10()
{
  sub_227D51624(&qword_255929120, type metadata accessor for ReadingHistoryMonth, (uint64_t)&protocol conformance descriptor for ReadingHistoryMonth);
  return sub_227E5FB70();
}

uint64_t sub_227E0AE50()
{
  sub_227D51624(&qword_255929120, type metadata accessor for ReadingHistoryMonth, (uint64_t)&protocol conformance descriptor for ReadingHistoryMonth);
  return sub_227E5FB40();
}

uint64_t sub_227E0AEA0()
{
  sub_227D51624(&qword_255929120, type metadata accessor for ReadingHistoryMonth, (uint64_t)&protocol conformance descriptor for ReadingHistoryMonth);
  return sub_227E5FBB8();
}

uint64_t sub_227E0AEF0()
{
  sub_227D51624(&qword_255929098, type metadata accessor for ReadingHistoryMonth, (uint64_t)&protocol conformance descriptor for ReadingHistoryMonth);
  return sub_227E5FD2C();
}

uint64_t sub_227E0AF54()
{
  sub_227D51624(&qword_255929098, type metadata accessor for ReadingHistoryMonth, (uint64_t)&protocol conformance descriptor for ReadingHistoryMonth);
  return sub_227E5FD38();
}

uint64_t sub_227E0AFC8()
{
  sub_227D51624(&qword_255929120, type metadata accessor for ReadingHistoryMonth, (uint64_t)&protocol conformance descriptor for ReadingHistoryMonth);
  return sub_227E5FB88();
}

uint64_t sub_227E0B02C()
{
  sub_227D51624(&qword_255929120, type metadata accessor for ReadingHistoryMonth, (uint64_t)&protocol conformance descriptor for ReadingHistoryMonth);
  return sub_227E5FBC4();
}

uint64_t sub_227E0B088()
{
  sub_227D51624(&qword_255929120, type metadata accessor for ReadingHistoryMonth, (uint64_t)&protocol conformance descriptor for ReadingHistoryMonth);
  return sub_227E5FB4C();
}

uint64_t sub_227E0B0D8(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  _QWORD *v28;
  unint64_t v29;
  uint64_t v30;
  char v31;
  char *v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t);
  uint64_t v35;
  BOOL v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  unint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t result;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t *v77;
  uint64_t *v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  uint64_t v91;

  LODWORD(v76) = a2;
  v83 = a1;
  v82 = type metadata accessor for ReadingHistoryDay(0);
  MEMORY[0x24BDAC7A8](v82, v3);
  v81 = (char *)&v70 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_227D68330((uint64_t *)&unk_255928E70);
  v79 = *(_QWORD *)(v5 - 8);
  v80 = v5;
  v7 = MEMORY[0x24BDAC7A8](v5, v6);
  v78 = (uint64_t *)((char *)&v70 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v7, v9);
  v77 = (uint64_t *)((char *)&v70 - v10);
  v11 = sub_227D68330(&qword_253F3AF40);
  v74 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11, v12);
  v75 = (char *)&v70 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = sub_227D68330(&qword_2559291A8);
  v14 = *(_QWORD *)(v72 - 8);
  v16 = MEMORY[0x24BDAC7A8](v72, v15);
  v71 = (char *)&v70 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16, v18);
  v20 = (char *)&v70 - v19;
  v21 = type metadata accessor for ReadingHistoryMonth(0);
  MEMORY[0x24BDAC7A8](v21, v22);
  v24 = (char *)&v70 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_227D68330((uint64_t *)&unk_255928ED0);
  v73 = swift_allocObject();
  *(_OWORD *)(v73 + 16) = xmmword_227E700C0;
  v25 = sub_227D68330(&qword_253F3AEE0);
  sub_227E5F984();
  v84 = v2;
  if (v89 < 0)
  {
    v26 = 0;
    v27 = 0xE000000000000000;
  }
  else
  {
    v89 = 0x6D69546C61746F74;
    v90 = 0xEA00000000003D65;
    sub_227E5F984();
    v91 = v87;
    sub_227E60674();
    sub_227E6002C();
    swift_bridgeObjectRelease();
    sub_227E6002C();
    v26 = v89;
    v27 = v90;
  }
  v28 = (_QWORD *)v73;
  *(_QWORD *)(v73 + 32) = v26;
  v28[5] = v27;
  sub_227E5F984();
  v29 = 0xE000000000000000;
  if (v89 < 0)
  {
    v30 = 0;
  }
  else
  {
    v89 = 0;
    v90 = 0xE000000000000000;
    sub_227E60494();
    swift_bridgeObjectRelease();
    v89 = 0xD000000000000015;
    v90 = 0x8000000227E6CC60;
    sub_227E5F984();
    v91 = v87;
    sub_227E60674();
    sub_227E6002C();
    swift_bridgeObjectRelease();
    sub_227E6002C();
    v30 = v89;
    v29 = v90;
  }
  v31 = v76;
  v28[6] = v30;
  v28[7] = v29;
  sub_227D5DFFC(v84, (uint64_t)v24, type metadata accessor for ReadingHistoryMonth);
  if ((v31 & 1) != 0)
  {
    sub_227D64BC4((uint64_t)v24, type metadata accessor for ReadingHistoryMonth);
    v37 = v83;
  }
  else
  {
    sub_227D515E4(&qword_2559291B0, &qword_253F3AF40, MEMORY[0x24BE184B0]);
    sub_227E60164();
    v32 = v71;
    sub_227E60188();
    v33 = sub_227E6017C();
    v34 = *(void (**)(char *, uint64_t))(v14 + 8);
    v35 = v72;
    v34(v32, v72);
    v34(v20, v35);
    sub_227D64BC4((uint64_t)v24, type metadata accessor for ReadingHistoryMonth);
    v36 = v33 <= v83;
    v37 = v83;
    if (!v36)
    {
      v38 = 0xA400000000000000;
      v39 = 548375522;
      goto LABEL_12;
    }
  }
  v39 = 0;
  v38 = 0xE000000000000000;
LABEL_12:
  v28[8] = v39;
  v28[9] = v38;
  (*(void (**)(char *, uint64_t, uint64_t))(v74 + 16))(v75, v84, v11);
  sub_227D515E4(&qword_255929198, &qword_253F3AF40, MEMORY[0x24BE184A8]);
  v89 = sub_227E6008C();
  sub_227E0D4AC(&v89, (uint64_t *)&unk_255928E70, (uint64_t (*)(uint64_t))sub_227E15810, (void (*)(unint64_t *, unint64_t *, unint64_t *))sub_227E15470);
  if ((v31 & 1) != 0)
    v40 = 0x7FFFFFFFFFFFFFFFLL;
  else
    v40 = v37;
  v41 = sub_227E0B8E0(v40, v89);
  v76 = v42;
  v83 = v44 >> 1;
  v84 = v43;
  v45 = (v44 >> 1) - v43;
  if (__OFSUB__(v44 >> 1, v43))
    goto LABEL_32;
  v46 = v41;
  if (v45)
  {
    v91 = MEMORY[0x24BEE4AF8];
    sub_227DECBC4(0, v45 & ~(v45 >> 63), 0);
    if (v45 < 0)
    {
LABEL_33:
      __break(1u);
      result = swift_release();
      __break(1u);
      return result;
    }
    v72 = v46;
    v74 = v45;
    v75 = (char *)v25;
    v47 = 0;
    while (1)
    {
      v48 = v47 + 1;
      if (__OFADD__(v47, 1))
        break;
      if (v84 + v47 >= v83 || v47 >= v45)
        goto LABEL_31;
      v49 = v77;
      sub_227D5DF48(v76 + *(_QWORD *)(v79 + 72) * (v84 + v47), (uint64_t)v77, (uint64_t *)&unk_255928E70);
      v89 = 35;
      v90 = 0xE100000000000000;
      v87 = *v49;
      v50 = v87;
      sub_227E60674();
      sub_227E6002C();
      swift_bridgeObjectRelease();
      sub_227E6002C();
      v51 = *(int *)(v80 + 48);
      v52 = (char *)v78 + v51;
      v53 = (char *)v49 + v51;
      *v78 = v50;
      v54 = sub_227D68330(&qword_253F3AF90);
      v55 = *(_QWORD *)(v54 - 8);
      (*(void (**)(char *, char *, uint64_t))(v55 + 16))(v52, v53, v54);
      v56 = (uint64_t)v81;
      MEMORY[0x22E2A9430](v54);
      (*(void (**)(char *, uint64_t))(v55 + 8))(v52, v54);
      v86 = sub_227E5FE58();
      v87 = sub_227E60674();
      v88 = v57;
      sub_227E6002C();
      sub_227E5F984();
      v85 = v86;
      sub_227E60674();
      sub_227E6002C();
      swift_bridgeObjectRelease();
      sub_227D64BC4(v56, type metadata accessor for ReadingHistoryDay);
      sub_227E6002C();
      swift_bridgeObjectRelease();
      v58 = v89;
      v59 = v90;
      sub_227D5809C((uint64_t)v49, (uint64_t *)&unk_255928E70);
      v60 = v91;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_227DECBC4(0, *(_QWORD *)(v60 + 16) + 1, 1);
        v60 = v91;
      }
      v62 = *(_QWORD *)(v60 + 16);
      v61 = *(_QWORD *)(v60 + 24);
      if (v62 >= v61 >> 1)
      {
        sub_227DECBC4(v61 > 1, v62 + 1, 1);
        v60 = v91;
      }
      *(_QWORD *)(v60 + 16) = v62 + 1;
      v63 = v60 + 16 * v62;
      *(_QWORD *)(v63 + 32) = v58;
      *(_QWORD *)(v63 + 40) = v59;
      ++v47;
      v45 = v74;
      if (v48 == v74)
      {
        swift_unknownObjectRelease();
        goto LABEL_29;
      }
    }
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  swift_unknownObjectRelease();
  v60 = MEMORY[0x24BEE4AF8];
LABEL_29:
  v89 = v60;
  sub_227D68330(&qword_255928D00);
  sub_227D515E4((unint64_t *)&qword_255928EE0, &qword_255928D00, MEMORY[0x24BEE12B0]);
  v64 = sub_227E5FF54();
  v66 = v65;
  swift_bridgeObjectRelease();
  v67 = v73;
  *(_QWORD *)(v73 + 80) = v64;
  *(_QWORD *)(v67 + 88) = v66;
  v89 = v67;
  v68 = sub_227E5FF54();
  swift_bridgeObjectRelease();
  return v68;
}

uint64_t sub_227E0B8E0(uint64_t result, uint64_t a2)
{
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    sub_227D68330((uint64_t *)&unk_255928E70);
    return a2;
  }
  return result;
}

uint64_t ReadingHistoryMonth.description.getter()
{
  return sub_227E0B0D8(7, 0);
}

uint64_t ReadingHistoryMonth.debugDescription.getter()
{
  return sub_227E0B0D8(0, 1);
}

uint64_t sub_227E0B960()
{
  return sub_227E0B0D8(7, 0);
}

uint64_t sub_227E0B96C()
{
  return sub_227E0B0D8(0, 1);
}

uint64_t ReadingHistoryModel.additionalFields.getter()
{
  return sub_227E0B984((void (*)(_QWORD))type metadata accessor for ReadingHistoryModel);
}

uint64_t sub_227E0B984(void (*a1)(_QWORD))
{
  a1(0);
  return swift_bridgeObjectRetain();
}

uint64_t ReadingHistoryModel.additionalFields.setter(uint64_t a1)
{
  return sub_227E0B9B4(a1, type metadata accessor for ReadingHistoryModel);
}

uint64_t sub_227E0B9B4(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;
  uint64_t v4;
  uint64_t result;

  v4 = *(int *)(a2(0) + 24);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + v4) = a1;
  return result;
}

uint64_t (*ReadingHistoryModel.additionalFields.modify())()
{
  type metadata accessor for ReadingHistoryModel(0);
  return nullsub_1;
}

uint64_t static ReadingHistoryModel.fields.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  if (qword_253F3A200 != -1)
    swift_once();
  v2 = unk_253F3A1D0;
  v4 = qword_253F3A1D8;
  v3 = *(_QWORD *)byte_253F3A1E0;
  v5 = qword_253F3A1E8;
  v6 = qword_253F3A1F0;
  *a1 = qword_253F3A1C8;
  a1[1] = v2;
  a1[2] = v4;
  a1[3] = v3;
  a1[4] = v5;
  a1[5] = v6;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  return swift_retain();
}

uint64_t ReadingHistoryModel.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  sub_227D68330((uint64_t *)&unk_253F3AFB0);
  sub_227D515E4(&qword_253F3AFA0, (uint64_t *)&unk_253F3AFB0, MEMORY[0x24BE18990]);
  sub_227D515E4(&qword_253F3AFA8, (uint64_t *)&unk_253F3AFB0, MEMORY[0x24BE18998]);
  sub_227E5FC78();
  v2 = type metadata accessor for ReadingHistoryModel(0);
  sub_227E5F27C();
  sub_227D51624((unint64_t *)&unk_253F391C0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE958]);
  result = sub_227E5FC78();
  *(_QWORD *)(a1 + *(int *)(v2 + 24)) = MEMORY[0x24BEE4B00];
  return result;
}

uint64_t sub_227E0BBC0()
{
  sub_227D51624(&qword_253F3A238, type metadata accessor for ReadingHistoryModel, (uint64_t)&protocol conformance descriptor for ReadingHistoryModel);
  return sub_227E5FD74();
}

uint64_t sub_227E0BC00()
{
  sub_227D51624(&qword_253F3A210, type metadata accessor for ReadingHistoryModel, (uint64_t)&protocol conformance descriptor for ReadingHistoryModel);
  return sub_227E5FAA4();
}

uint64_t sub_227E0BC58()
{
  sub_227D51624(&qword_253F3A210, type metadata accessor for ReadingHistoryModel, (uint64_t)&protocol conformance descriptor for ReadingHistoryModel);
  return sub_227E5FAD4();
}

uint64_t sub_227E0BCA8()
{
  sub_227D51624(&qword_253F3A210, type metadata accessor for ReadingHistoryModel, (uint64_t)&protocol conformance descriptor for ReadingHistoryModel);
  return sub_227E5FAE0();
}

uint64_t sub_227E0BD10()
{
  sub_227D51624(&qword_253F3A210, type metadata accessor for ReadingHistoryModel, (uint64_t)&protocol conformance descriptor for ReadingHistoryModel);
  return sub_227E5FB10();
}

uint64_t sub_227E0BD60()
{
  sub_227D51624(&qword_253F3A210, type metadata accessor for ReadingHistoryModel, (uint64_t)&protocol conformance descriptor for ReadingHistoryModel);
  return sub_227E5FAEC();
}

uint64_t sub_227E0BDB0()
{
  sub_227D51624(&qword_253F3A210, type metadata accessor for ReadingHistoryModel, (uint64_t)&protocol conformance descriptor for ReadingHistoryModel);
  return sub_227E5FABC();
}

uint64_t sub_227E0BE08()
{
  sub_227D51624(&qword_253F3A210, type metadata accessor for ReadingHistoryModel, (uint64_t)&protocol conformance descriptor for ReadingHistoryModel);
  return sub_227E5FA98();
}

uint64_t sub_227E0BE70()
{
  sub_227D51624(&qword_253F3A210, type metadata accessor for ReadingHistoryModel, (uint64_t)&protocol conformance descriptor for ReadingHistoryModel);
  return sub_227E5FA80();
}

uint64_t sub_227E0BEC0()
{
  sub_227D51624(&qword_253F3A230, type metadata accessor for ReadingHistoryModel, (uint64_t)&protocol conformance descriptor for ReadingHistoryModel);
  return sub_227E5FD2C();
}

uint64_t sub_227E0BF24()
{
  sub_227D51624(&qword_253F3A230, type metadata accessor for ReadingHistoryModel, (uint64_t)&protocol conformance descriptor for ReadingHistoryModel);
  return sub_227E5FD38();
}

uint64_t sub_227E0BF98()
{
  sub_227D51624(&qword_253F3A210, type metadata accessor for ReadingHistoryModel, (uint64_t)&protocol conformance descriptor for ReadingHistoryModel);
  return sub_227E5FA8C();
}

Swift::Int __swiftcall ReadingHistoryModel.readingTimeToday()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  Swift::Int v15;
  uint64_t v17;

  v0 = sub_227E5FE7C();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0, v2);
  v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_227E5F27C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_227D68330(&qword_253F39F90);
  MEMORY[0x24BDAC7A8](v10, v11);
  v13 = (char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_227E5F270();
  ReadingHistoryModel.readingHistoryDay(for:)((uint64_t)v13);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  v14 = type metadata accessor for ReadingHistoryDay(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(v13, 1, v14) == 1)
  {
    sub_227D5809C((uint64_t)v13, &qword_253F39F90);
    return 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v1 + 16))(v4, v13, v0);
    sub_227D64BC4((uint64_t)v13, type metadata accessor for ReadingHistoryDay);
    v15 = sub_227E5FE58();
    (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
  }
  return v15;
}

uint64_t ReadingHistoryModel.readingHistoryMonth(year:month:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v18[2];

  v6 = sub_227D68330((uint64_t *)&unk_253F3AFC0);
  result = MEMORY[0x24BDAC7A8](v6, v7);
  v10 = (char *)v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = 100 * a1;
  if ((unsigned __int128)(a1 * (__int128)100) >> 64 != (100 * a1) >> 63)
  {
    __break(1u);
    goto LABEL_8;
  }
  v12 = __OFADD__(v11, a2);
  v13 = v11 + a2;
  if (v12)
  {
LABEL_8:
    __break(1u);
    return result;
  }
  v18[1] = v13;
  sub_227D68330(&qword_253F3AF68);
  sub_227E5FCB4();
  v14 = sub_227D68330((uint64_t *)&unk_253F3AFB0);
  v15 = *(_QWORD *)(v14 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v10, 1, v14) == 1)
  {
    sub_227D5809C((uint64_t)v10, (uint64_t *)&unk_253F3AFC0);
    v16 = type metadata accessor for ReadingHistoryMonth(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(a3, 1, 1, v16);
  }
  else
  {
    MEMORY[0x22E2A9430](v14);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v10, v14);
    v17 = type metadata accessor for ReadingHistoryMonth(0);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(a3, 0, 1, v17);
  }
}

uint64_t sub_227E0C2CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v18;
  uint64_t v19;

  v18 = a2;
  v3 = sub_227D68330(&qword_253F3AEE0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3, v5);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ReadingHistoryDay(0);
  v10 = MEMORY[0x24BDAC7A8](v8, v9);
  v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10, v13);
  v15 = (char *)&v18 - v14;
  sub_227E5FE70();
  v16 = &v12[*(int *)(v8 + 20)];
  v19 = 0;
  sub_227E5F9A8();
  *(_QWORD *)&v12[*(int *)(v8 + 24)] = MEMORY[0x24BEE4B00];
  v19 = a1;
  sub_227E5F9A8();
  (*(void (**)(char *, char *, uint64_t))(v4 + 40))(v16, v7, v3);
  sub_227D5E458((uint64_t)v12, (uint64_t)v15, type metadata accessor for ReadingHistoryDay);
  sub_227D51624(&qword_2559282B0, type metadata accessor for ReadingHistoryDay, (uint64_t)&protocol conformance descriptor for ReadingHistoryDay);
  return sub_227E5FE10();
}

uint64_t sub_227E0C45C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  _QWORD v5[2];

  v0 = type metadata accessor for ReadingHistoryDay(0);
  MEMORY[0x24BDAC7A8](v0, v1);
  v3 = (char *)v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_227E5FE70();
  v5[1] = 0;
  sub_227E5F9A8();
  *(_QWORD *)&v3[*(int *)(v0 + 24)] = MEMORY[0x24BEE4B00];
  sub_227D51624(&qword_2559282B0, type metadata accessor for ReadingHistoryDay, (uint64_t)&protocol conformance descriptor for ReadingHistoryDay);
  return sub_227E5FE10();
}

uint64_t sub_227E0C530()
{
  return swift_deallocObject();
}

uint64_t sub_227E0C540@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_227E0C2CC(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_227E0C548()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v5;
  uint64_t v6;

  v0 = type metadata accessor for ReadingHistoryMonth(0);
  MEMORY[0x24BDAC7A8](v0, v1);
  v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_227D68330(&qword_253F3AF90);
  sub_227D515E4(&qword_253F3AF78, &qword_253F3AF90, MEMORY[0x24BE18990]);
  sub_227D515E4((unint64_t *)&unk_253F3AF80, &qword_253F3AF90, MEMORY[0x24BE18998]);
  sub_227E5FC78();
  v6 = 0;
  sub_227E5F9A8();
  v6 = -1;
  sub_227E5F9A8();
  *(_QWORD *)&v3[*(int *)(v0 + 28)] = MEMORY[0x24BEE4B00];
  sub_227D51624(&qword_255929098, type metadata accessor for ReadingHistoryMonth, (uint64_t)&protocol conformance descriptor for ReadingHistoryMonth);
  return sub_227E5FE10();
}

uint64_t sub_227E0C6B8@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  char *v25;
  void (*v26)(void);
  uint64_t *v27;
  uint64_t *v28;
  char v29;
  void (*v30)(char *, uint64_t);
  uint64_t result;
  _QWORD *v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  void (*v36)(void);
  char *v37;
  char *v38;
  char *v39;
  uint64_t *v40;
  _QWORD *v41;
  uint64_t v42;

  v41 = a4;
  v42 = a3;
  v6 = sub_227E5F27C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6, v8);
  v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_227D68330(&qword_255928E40);
  v13 = MEMORY[0x24BDAC7A8](v11, v12);
  v39 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x24BDAC7A8](v13, v15);
  v18 = (char *)&v35 - v17;
  v19 = *a1;
  v20 = *a2;
  v21 = *(int *)(v16 + 48);
  v22 = (char *)&v35 + v21 - v17;
  v40 = a2;
  v23 = (char *)a2 + v21;
  v24 = v7;
  v25 = v23;
  *(uint64_t *)((char *)&v35 - v17) = v20;
  v26 = *(void (**)(void))(v24 + 16);
  v38 = v22;
  v26();
  ((void (*)(char *, uint64_t, uint64_t))v26)(v10, v42, v6);
  v42 = v19;
  if (v19 >= v20)
  {
    (*(void (**)(char *, uint64_t))(v24 + 8))(v10, v6);
    result = sub_227D5809C((uint64_t)v18, &qword_255928E40);
    v32 = v41;
    v33 = v42;
  }
  else
  {
    v36 = v26;
    v37 = v25;
    v27 = (uint64_t *)v39;
    v28 = v40;
    sub_227D51624((unint64_t *)&unk_253F391B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE948]);
    v29 = sub_227E5FF60();
    v30 = *(void (**)(char *, uint64_t))(v24 + 8);
    v30(v10, v6);
    result = sub_227D5809C((uint64_t)v18, &qword_255928E40);
    v32 = v41;
    v33 = v42;
    if ((v29 & 1) == 0)
    {
      v34 = (char *)v27 + *(int *)(v11 + 48);
      v33 = *v28;
      *v27 = *v28;
      ((void (*)(char *, char *, uint64_t))v36)(v34, v37, v6);
      result = ((uint64_t (*)(char *, uint64_t))v30)(v34, v6);
    }
  }
  *v32 = v33;
  return result;
}

