uint64_t sub_227E0C8B8@<X0>(uint64_t (*a1)(uint64_t, uint64_t, uint64_t, uint64_t)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  void (*v38)(char *);
  uint64_t v39;
  void (*v40)(char *, uint64_t);
  uint64_t (*v41)(uint64_t, uint64_t, uint64_t, uint64_t);
  char *v42;
  uint64_t v43;
  void (*v44)(char *, uint64_t);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  void (*v57)(char *);
  uint64_t v58;
  void (*v59)(char *, uint64_t);
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  void (*v64)(char *, uint64_t);
  unsigned int (*v65)(uint64_t, uint64_t, uint64_t);
  uint64_t (*v66)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v67;
  char *v68;
  uint64_t v69;
  char *v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  char *v75;
  void (*v76)(char *, uint64_t);
  void (*v77)(char *, uint64_t);
  void (*v78)(char *);
  unsigned int v79;
  unsigned int v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  char *v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t (*v88)(uint64_t, uint64_t, uint64_t, uint64_t);
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;

  v94 = a2;
  v3 = sub_227E5F27C();
  v90 = *(_QWORD *)(v3 - 8);
  v91 = v3;
  MEMORY[0x24BDAC7A8](v3, v4);
  v84 = (char *)&v74 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_227D68330(&qword_253F391D0);
  v8 = MEMORY[0x24BDAC7A8](v6, v7);
  v82 = (uint64_t)&v74 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v8, v10);
  v81 = (uint64_t)&v74 - v12;
  MEMORY[0x24BDAC7A8](v11, v13);
  v83 = (char *)&v74 - v14;
  v15 = sub_227D68330(&qword_253F3AEE0);
  v86 = *(_QWORD *)(v15 - 8);
  v87 = v15;
  MEMORY[0x24BDAC7A8](v15, v16);
  v85 = (char *)&v74 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_227E5F2E8();
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18, v20);
  v22 = (char *)&v74 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_227E5F300();
  v92 = *(_QWORD *)(v23 - 8);
  v25 = MEMORY[0x24BDAC7A8](v23, v24);
  v89 = (char *)&v74 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v25, v27);
  v29 = (char *)&v74 - v28;
  v30 = sub_227D68330(&qword_255929128);
  v32 = MEMORY[0x24BDAC7A8](v30, v31);
  v34 = (char *)&v74 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v32, v35);
  v37 = (char *)&v74 - v36;
  sub_227E5F288();
  v38 = *(void (**)(char *))(v19 + 104);
  v80 = *MEMORY[0x24BDCF240];
  v38(v22);
  v39 = sub_227E5F2F4();
  v40 = *(void (**)(char *, uint64_t))(v19 + 8);
  v40(v22, v18);
  v79 = *MEMORY[0x24BDCF250];
  v38(v22);
  v41 = a1;
  v42 = v29;
  v88 = v41;
  v43 = sub_227E5F2F4();
  v40(v22, v18);
  ReadingHistoryModel.readingHistoryMonth(year:month:)(v39, v43, (uint64_t)v37);
  v44 = *(void (**)(char *, uint64_t))(v92 + 8);
  v44(v42, v23);
  v93 = v37;
  sub_227D5DF48((uint64_t)v37, (uint64_t)v34, &qword_255929128);
  v45 = type metadata accessor for ReadingHistoryMonth(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 48))(v34, 1, v45) == 1)
  {
    sub_227D5809C((uint64_t)v34, &qword_255929128);
    v47 = v90;
    v46 = v91;
    v48 = v94;
LABEL_6:
    sub_227D5809C((uint64_t)v93, &qword_255929128);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v47 + 56))(v48, 1, 1, v46);
  }
  v75 = v42;
  v76 = v44;
  v77 = v40;
  v78 = v38;
  v49 = v87;
  v92 = v23;
  v50 = &v34[*(int *)(v45 + 24)];
  v51 = v85;
  v52 = v86;
  (*(void (**)(char *, char *, uint64_t))(v86 + 16))(v85, v50, v87);
  sub_227D64BC4((uint64_t)v34, type metadata accessor for ReadingHistoryMonth);
  sub_227E5F984();
  (*(void (**)(char *, uint64_t))(v52 + 8))(v51, v49);
  v48 = v94;
  v47 = v90;
  v46 = v91;
  if (v95 < 0)
    goto LABEL_6;
  v87 = v95;
  sub_227E5F288();
  v53 = v75;
  sub_227E5F288();
  v54 = v22;
  v55 = v18;
  v56 = v18;
  v57 = v78;
  ((void (*)(char *, _QWORD, uint64_t))v78)(v22, v79, v56);
  v58 = sub_227E5F2F4();
  v59 = v77;
  v77(v22, v55);
  ((void (*)(char *, _QWORD, uint64_t))v57)(v22, v80, v55);
  v60 = sub_227E5F2F4();
  v59(v54, v55);
  v61 = v81;
  sub_227E0E7F8(v60, v58, v81);
  v62 = v53;
  v63 = v61;
  v64 = v76;
  v76(v62, v92);
  v65 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v47 + 48);
  if (v65(v61, 1, v46) == 1)
  {
    sub_227D5809C(v61, &qword_253F391D0);
    v66 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v47 + 56);
    v67 = (uint64_t)v83;
    v68 = v83;
    v69 = 1;
  }
  else
  {
    v67 = (uint64_t)v83;
    sub_227E5F1F8();
    (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v63, v46);
    v66 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v47 + 56);
    v68 = (char *)v67;
    v69 = 0;
  }
  v88 = v66;
  v66((uint64_t)v68, v69, 1, v46);
  v71 = v84;
  v72 = v82;
  sub_227D5DF48(v67, v82, &qword_253F391D0);
  if (v65(v72, 1, v46) == 1)
  {
    sub_227D5809C(v67, &qword_253F391D0);
    v64(v89, v92);
    sub_227D5809C((uint64_t)v93, &qword_255929128);
    sub_227D5809C(v72, &qword_253F391D0);
    return v88(v94, 1, 1, v46);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v47 + 32))(v71, v72, v46);
    ((void (*)(char *, _QWORD, uint64_t))v78)(v54, *MEMORY[0x24BDCF220], v55);
    v73 = v89;
    sub_227E5F2D0();
    v59(v54, v55);
    (*(void (**)(char *, uint64_t))(v47 + 8))(v71, v46);
    sub_227D5809C(v67, &qword_253F391D0);
    v64(v73, v92);
    return sub_227D5809C((uint64_t)v93, &qword_255929128);
  }
}

uint64_t sub_227E0CEC8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  void (*v25)(char *, uint64_t);
  uint64_t v26;
  void (*v27)(char *, uint64_t);
  uint64_t v29;
  uint64_t v30;

  v30 = a2;
  v3 = sub_227E5F27C();
  v4 = *(_QWORD *)(v3 - 8);
  v6 = MEMORY[0x24BDAC7A8](v3, v5);
  v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6, v9);
  v11 = (char *)&v29 - v10;
  v12 = sub_227E5F300();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12, v14);
  v16 = (char *)&v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_227D68330(&qword_253F391D0);
  v19 = MEMORY[0x24BDAC7A8](v17, v18);
  v21 = (char *)&v29 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19, v22);
  v24 = (char *)&v29 - v23;
  sub_227E5F288();
  sub_227E0E7F8(a1, v30, (uint64_t)v24);
  v25 = *(void (**)(char *, uint64_t))(v13 + 8);
  v25(v16, v12);
  sub_227D5DF48((uint64_t)v24, (uint64_t)v21, &qword_253F391D0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v21, 1, v3) == 1)
  {
    sub_227D5809C((uint64_t)v24, &qword_253F391D0);
    v26 = 0;
    v24 = v21;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v11, v21, v3);
    sub_227E5F288();
    sub_227E5F1F8();
    v26 = sub_227E052F0((uint64_t)v8, 1);
    v27 = *(void (**)(char *, uint64_t))(v4 + 8);
    v27(v8, v3);
    v25(v16, v12);
    v27(v11, v3);
  }
  sub_227D5809C((uint64_t)v24, &qword_253F391D0);
  return v26;
}

uint64_t sub_227E0D0E4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  unsigned int (*v35)(char *, uint64_t, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  BOOL v41;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;

  v49 = (char *)a2;
  v3 = type metadata accessor for ReadingHistoryDay(0);
  MEMORY[0x24BDAC7A8](v3, v4);
  v6 = (char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_227D68330(&qword_253F3AF90);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7, v9);
  v11 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_227D68330(&qword_255929188);
  v14 = MEMORY[0x24BDAC7A8](v12, v13);
  v16 = (char *)&v43 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14, v17);
  v19 = (char *)&v43 - v18;
  v20 = sub_227D68330(&qword_255929190);
  v44 = *(_QWORD *)(v20 - 8);
  v45 = v20;
  MEMORY[0x24BDAC7A8](v20, v21);
  v23 = (char *)&v43 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = type metadata accessor for ReadingHistoryMonth(0);
  v47 = *(_QWORD *)(v24 - 8);
  v48 = v24;
  MEMORY[0x24BDAC7A8](v24, v25);
  v46 = (uint64_t)&v43 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = sub_227D68330(&qword_255929128);
  v29 = MEMORY[0x24BDAC7A8](v27, v28);
  v31 = (char *)&v43 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v29, v32);
  v34 = (char *)&v43 - v33;
  ReadingHistoryModel.readingHistoryMonth(year:month:)(a1, (uint64_t)v49, (uint64_t)&v43 - v33);
  sub_227D5DF48((uint64_t)v34, (uint64_t)v31, &qword_255929128);
  v35 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v47 + 48);
  v50 = v31;
  if (v35(v31, 1, v48) == 1)
  {
    sub_227D5809C((uint64_t)v34, &qword_255929128);
    v36 = 0;
    v37 = (uint64_t)v50;
  }
  else
  {
    v49 = v34;
    sub_227D5E458((uint64_t)v50, v46, type metadata accessor for ReadingHistoryMonth);
    sub_227D68330(&qword_253F3AF40);
    sub_227E5FC6C();
    v36 = 0;
    v38 = v45;
    while (1)
    {
      sub_227E5FC3C();
      sub_227D5B0DC((uint64_t)v16, (uint64_t)v19, &qword_255929188);
      v39 = sub_227D68330((uint64_t *)&unk_255928E70);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 48))(v19, 1, v39) == 1)
        break;
      (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v11, &v19[*(int *)(v39 + 48)], v7);
      MEMORY[0x22E2A9430](v7);
      v40 = sub_227E5FE58();
      sub_227D64BC4((uint64_t)v6, type metadata accessor for ReadingHistoryDay);
      (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
      v41 = __OFADD__(v36, v40);
      v36 += v40;
      if (v41)
      {
        __break(1u);
        break;
      }
    }
    (*(void (**)(char *, uint64_t))(v44 + 8))(v23, v38);
    sub_227D64BC4(v46, type metadata accessor for ReadingHistoryMonth);
    v37 = (uint64_t)v49;
  }
  sub_227D5809C(v37, &qword_255929128);
  return v36;
}

uint64_t sub_227E0D440(_QWORD **a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t result;
  _QWORD v5[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_227E11558(v2);
  v3 = v2[2];
  v5[0] = v2 + 4;
  v5[1] = v3;
  result = sub_227E0FB7C(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_227E0D4AC(uint64_t *a1, uint64_t *a2, uint64_t (*a3)(uint64_t), void (*a4)(unint64_t *, unint64_t *, unint64_t *))
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  _QWORD v12[2];

  v8 = *(_QWORD *)(sub_227D68330(a2) - 8);
  v9 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v9 = a3(v9);
  v10 = *(_QWORD *)(v9 + 16);
  v12[0] = v9 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
  v12[1] = v10;
  result = sub_227E10204(v12, a2, a4);
  *a1 = v9;
  return result;
}

Swift::Bool __swiftcall ReadingHistoryModel.DayKey.isTheDayBefore(_:)(BookDataStore::ReadingHistoryModel::DayKey a1)
{
  uint64_t *v1;
  uint64_t *yearMonth;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(char *, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unsigned int (*v45)(char *, uint64_t, uint64_t);
  uint64_t v46;
  void (*v47)(char *, char *, uint64_t);
  char *v48;
  char *v49;
  char *v50;
  void (*v51)(char *, uint64_t);
  unsigned int v52;
  Swift::Bool result;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  void (*v58)(char *, _QWORD, uint64_t);
  uint64_t v59;
  uint64_t v60;
  void (*v61)(char *, uint64_t);
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  void (*v68)(char *, uint64_t);
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  char *v77;
  char *v78;
  char *v79;
  void (*v80)(char *, uint64_t);
  char *v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;

  yearMonth = (uint64_t *)a1.yearMonth;
  v76 = sub_227E5F2E8();
  v74 = *(_QWORD *)(v76 - 8);
  MEMORY[0x24BDAC7A8](v76, v3);
  v75 = (char *)&v70 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_227E5F300();
  v6 = *(void (**)(char *, uint64_t))(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  v81 = (char *)&v70 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_227D68330(&qword_253F391D0);
  v11 = MEMORY[0x24BDAC7A8](v9, v10);
  v79 = (char *)&v70 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11, v13);
  v15 = (char *)&v70 - v14;
  v16 = sub_227E5F27C();
  v17 = *(_QWORD *)(v16 - 8);
  v19 = MEMORY[0x24BDAC7A8](v16, v18);
  v77 = (char *)&v70 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = MEMORY[0x24BDAC7A8](v19, v21);
  v78 = (char *)&v70 - v23;
  MEMORY[0x24BDAC7A8](v22, v24);
  v83 = (char *)&v70 - v25;
  v26 = sub_227D68330(&qword_253F391F0);
  MEMORY[0x24BDAC7A8](v26, v27);
  v29 = (char *)&v70 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = sub_227D68330(&qword_253F391E8);
  MEMORY[0x24BDAC7A8](v30, v31);
  v33 = (char *)&v70 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = sub_227E5F0A8();
  v84 = *(_QWORD *)(v34 - 8);
  v85 = v34;
  MEMORY[0x24BDAC7A8](v34, v35);
  v37 = (char *)&v70 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = *yearMonth;
  v72 = yearMonth[1];
  v73 = v38;
  v40 = *v1;
  v39 = v1[1];
  v80 = v6;
  v41 = (void (*)(char *, uint64_t, uint64_t, uint64_t))*((_QWORD *)v6 + 7);
  v82 = v5;
  v41(v33, 1, 1, v5);
  v42 = sub_227E5F30C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 56))(v29, 1, 1, v42);
  v43 = v17;
  v44 = v16;
  sub_227E5F09C();
  v86 = v40;
  v87 = v39;
  sub_227E04D68((uint64_t)v15);
  v45 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48);
  if (v45(v15, 1, v16) == 1)
  {
    v46 = (uint64_t)v15;
LABEL_5:
    sub_227D5809C(v46, &qword_253F391D0);
    (*(void (**)(char *, uint64_t))(v84 + 8))(v37, v85);
    return 0;
  }
  v47 = *(void (**)(char *, char *, uint64_t))(v43 + 32);
  v48 = v83;
  v47(v83, v15, v16);
  v49 = v81;
  sub_227E5F288();
  v50 = v79;
  v71 = v37;
  sub_227E5F2C4();
  v51 = (void (*)(char *, uint64_t))*((_QWORD *)v80 + 1);
  v51(v49, v82);
  v52 = v45(v50, 1, v16);
  v46 = (uint64_t)v50;
  if (v52 == 1)
  {
    (*(void (**)(char *, uint64_t))(v43 + 8))(v48, v16);
    v37 = v71;
    goto LABEL_5;
  }
  v80 = v51;
  v54 = v78;
  v47(v78, (char *)v46, v16);
  v55 = v43;
  (*(void (**)(char *, char *, uint64_t))(v43 + 16))(v77, v54, v16);
  sub_227E5F288();
  v56 = v74;
  v57 = v75;
  v58 = *(void (**)(char *, _QWORD, uint64_t))(v74 + 104);
  v59 = v76;
  v58(v75, *MEMORY[0x24BDCF240], v76);
  v60 = sub_227E5F2F4();
  v61 = *(void (**)(char *, uint64_t))(v56 + 8);
  v61(v57, v59);
  v58(v57, *MEMORY[0x24BDCF250], v59);
  v62 = v49;
  v63 = sub_227E5F2F4();
  result = ((uint64_t (*)(char *, uint64_t))v61)(v57, v59);
  v64 = 100 * v60;
  if ((unsigned __int128)(v60 * (__int128)100) >> 64 != (100 * v60) >> 63)
  {
    __break(1u);
    goto LABEL_16;
  }
  v65 = v64 + v63;
  if (__OFADD__(v64, v63))
  {
LABEL_16:
    __break(1u);
    return result;
  }
  v58(v57, *MEMORY[0x24BDCF220], v59);
  v66 = v77;
  v67 = sub_227E5F2F4();
  v68 = *(void (**)(char *, uint64_t))(v55 + 8);
  v68(v66, v44);
  v61(v57, v59);
  v80(v62, v82);
  v68(v78, v44);
  v68(v83, v44);
  (*(void (**)(char *, uint64_t))(v84 + 8))(v71, v85);
  return v73 == v65 && v72 == v67;
}

uint64_t ReadingHistoryModel.DayKey.hash(into:)()
{
  sub_227E60728();
  return sub_227E60728();
}

uint64_t ReadingHistoryModel.DayKey.hashValue.getter()
{
  sub_227E6071C();
  sub_227E60728();
  sub_227E60728();
  return sub_227E60734();
}

BOOL sub_227E0DB58(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2 && a1[1] == a2[1];
}

uint64_t *sub_227E0DB70(uint64_t *result, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  BOOL v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = 100 * *result;
  if ((unsigned __int128)(*result * (__int128)100) >> 64 != v2 >> 63)
  {
    __break(1u);
    goto LABEL_7;
  }
  v3 = result[1];
  v4 = __OFADD__(v2, v3);
  v5 = v2 + v3;
  if (v4)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  v6 = 100 * *a2;
  if ((unsigned __int128)(*a2 * (__int128)100) >> 64 != v6 >> 63)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v7 = a2[1];
  v4 = __OFADD__(v6, v7);
  v8 = v6 + v7;
  if (!v4)
    return (uint64_t *)(v5 < v8);
LABEL_9:
  __break(1u);
  return result;
}

uint64_t *sub_227E0DBD4(uint64_t *result, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  BOOL v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = 100 * *a2;
  if ((unsigned __int128)(*a2 * (__int128)100) >> 64 != v2 >> 63)
  {
    __break(1u);
    goto LABEL_7;
  }
  v3 = a2[1];
  v4 = __OFADD__(v2, v3);
  v5 = v2 + v3;
  if (v4)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  v6 = 100 * *result;
  if ((unsigned __int128)(*result * (__int128)100) >> 64 != v6 >> 63)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v7 = result[1];
  v4 = __OFADD__(v6, v7);
  v8 = v6 + v7;
  if (!v4)
    return (uint64_t *)(v5 >= v8);
LABEL_9:
  __break(1u);
  return result;
}

uint64_t *sub_227E0DC38(uint64_t *result, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  BOOL v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = 100 * *result;
  if ((unsigned __int128)(*result * (__int128)100) >> 64 != v2 >> 63)
  {
    __break(1u);
    goto LABEL_7;
  }
  v3 = result[1];
  v4 = __OFADD__(v2, v3);
  v5 = v2 + v3;
  if (v4)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  v6 = 100 * *a2;
  if ((unsigned __int128)(*a2 * (__int128)100) >> 64 != v6 >> 63)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v7 = a2[1];
  v4 = __OFADD__(v6, v7);
  v8 = v6 + v7;
  if (!v4)
    return (uint64_t *)(v5 >= v8);
LABEL_9:
  __break(1u);
  return result;
}

uint64_t *sub_227E0DC9C(uint64_t *result, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  BOOL v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = 100 * *a2;
  if ((unsigned __int128)(*a2 * (__int128)100) >> 64 != v2 >> 63)
  {
    __break(1u);
    goto LABEL_7;
  }
  v3 = a2[1];
  v4 = __OFADD__(v2, v3);
  v5 = v2 + v3;
  if (v4)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  v6 = 100 * *result;
  if ((unsigned __int128)(*result * (__int128)100) >> 64 != v6 >> 63)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v7 = result[1];
  v4 = __OFADD__(v6, v7);
  v8 = v6 + v7;
  if (!v4)
    return (uint64_t *)(v5 < v8);
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_227E0DD00()
{
  sub_227E6071C();
  sub_227E60728();
  sub_227E60728();
  return sub_227E60734();
}

uint64_t sub_227E0DD58()
{
  sub_227E60728();
  return sub_227E60728();
}

uint64_t sub_227E0DD90()
{
  sub_227E6071C();
  sub_227E60728();
  sub_227E60728();
  return sub_227E60734();
}

uint64_t ReadingHistoryModel.debugDescription.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char v32;
  void (*v33)(char *, uint64_t);
  uint64_t result;
  uint64_t v35;
  int64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  int64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t *v62;
  id v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  void *v71;
  id v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  unint64_t v77;
  uint64_t v78;
  char *v79;
  char *v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  void (*v86)(char *, uint64_t);
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  _QWORD *v99;
  uint64_t v100;
  char *v101;
  _QWORD *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  unint64_t v106;
  uint64_t v107;

  v103 = sub_227D68330(&qword_255928E40);
  v89 = *(_QWORD *)(v103 - 8);
  v2 = MEMORY[0x24BDAC7A8](v103, v1);
  v102 = (uint64_t *)((char *)&v84 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v2, v4);
  v101 = (char *)&v84 - v5;
  v6 = type metadata accessor for ReadingHistoryMonth(0);
  MEMORY[0x24BDAC7A8](v6, v7);
  v9 = (char *)&v84 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v100 = sub_227D68330(&qword_253F3B018);
  v88 = *(_QWORD *)(v100 - 8);
  v11 = MEMORY[0x24BDAC7A8](v100, v10);
  v99 = (uint64_t *)((char *)&v84 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v11, v13);
  v15 = (uint64_t *)((char *)&v84 - v14);
  v92 = sub_227D68330(&qword_253F3AF30);
  v90 = *(_QWORD *)(v92 - 8);
  MEMORY[0x24BDAC7A8](v92, v16);
  v91 = (char *)&v84 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_227D68330(&qword_253F3AF68);
  v98 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18, v19);
  v21 = (char *)&v84 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_227D68330(&qword_2559290A0);
  v23 = *(_QWORD *)(v22 - 8);
  v25 = MEMORY[0x24BDAC7A8](v22, v24);
  v27 = (char *)&v84 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v25, v28);
  v30 = (char *)&v84 - v29;
  v31 = sub_227D515E4(&qword_2559290A8, &qword_253F3AF68, MEMORY[0x24BE184B0]);
  sub_227E60164();
  v97 = v0;
  v93 = v31;
  sub_227E60188();
  sub_227D515E4(&qword_2559290B0, &qword_2559290A0, MEMORY[0x24BE18220]);
  v32 = sub_227E5FF6C();
  v33 = *(void (**)(char *, uint64_t))(v23 + 8);
  v95 = v27;
  v33(v27, v22);
  v94 = v30;
  v96 = v22;
  v33(v30, v22);
  if ((v32 & 1) != 0)
    return 0xD00000000000001BLL;
  (*(void (**)(char *, uint64_t, uint64_t))(v98 + 16))(v21, v97, v18);
  sub_227D515E4(&qword_253F3AF60, &qword_253F3AF68, MEMORY[0x24BE184A8]);
  v105 = sub_227E6008C();
  sub_227E0D4AC(&v105, &qword_253F3B018, (uint64_t (*)(uint64_t))sub_227E15860, (void (*)(unint64_t *, unint64_t *, unint64_t *))sub_227E156E4);
  v35 = v105;
  v85 = 0;
  v36 = *(_QWORD *)(v105 + 16);
  v87 = v18;
  v86 = v33;
  if (v36)
  {
    v107 = MEMORY[0x24BEE4AF8];
    sub_227DECBC4(0, v36, 0);
    v37 = (*(unsigned __int8 *)(v88 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v88 + 80);
    v84 = v35;
    v38 = v35 + v37;
    v98 = *(_QWORD *)(v88 + 72);
    do
    {
      sub_227D5DF48(v38, (uint64_t)v15, &qword_253F3B018);
      v105 = 0x2068746E6F4DLL;
      v106 = 0xE600000000000000;
      v104 = *v15;
      v39 = v104;
      sub_227E60674();
      sub_227E6002C();
      swift_bridgeObjectRelease();
      sub_227E6002C();
      v40 = *(int *)(v100 + 48);
      v41 = (char *)v99 + v40;
      v42 = (char *)v15 + v40;
      *v99 = v39;
      v43 = sub_227D68330((uint64_t *)&unk_253F3AFB0);
      v44 = *(_QWORD *)(v43 - 8);
      (*(void (**)(char *, char *, uint64_t))(v44 + 16))(v41, v42, v43);
      MEMORY[0x22E2A9430](v43);
      (*(void (**)(char *, uint64_t))(v44 + 8))(v41, v43);
      sub_227E0B0D8(0, 1);
      sub_227D64BC4((uint64_t)v9, type metadata accessor for ReadingHistoryMonth);
      sub_227E6002C();
      swift_bridgeObjectRelease();
      sub_227E6002C();
      v46 = v105;
      v45 = v106;
      sub_227D5809C((uint64_t)v15, &qword_253F3B018);
      v47 = v107;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_227DECBC4(0, *(_QWORD *)(v47 + 16) + 1, 1);
        v47 = v107;
      }
      v49 = *(_QWORD *)(v47 + 16);
      v48 = *(_QWORD *)(v47 + 24);
      if (v49 >= v48 >> 1)
      {
        sub_227DECBC4(v48 > 1, v49 + 1, 1);
        v47 = v107;
      }
      *(_QWORD *)(v47 + 16) = v49 + 1;
      v50 = v47 + 16 * v49;
      *(_QWORD *)(v50 + 32) = v46;
      *(_QWORD *)(v50 + 40) = v45;
      v38 += v98;
      --v36;
    }
    while (v36);
    swift_release();
    v33 = v86;
  }
  else
  {
    swift_release();
    v47 = MEMORY[0x24BEE4AF8];
  }
  v105 = v47;
  v51 = sub_227D68330(&qword_255928D00);
  v52 = sub_227D515E4((unint64_t *)&qword_255928EE0, &qword_255928D00, MEMORY[0x24BEE12B0]);
  v98 = v51;
  v88 = v52;
  v53 = sub_227E5FF54();
  v55 = v54;
  swift_bridgeObjectRelease();
  v56 = type metadata accessor for ReadingHistoryModel(0);
  (*(void (**)(char *, uint64_t, uint64_t))(v90 + 16))(v91, v97 + *(int *)(v56 + 20), v92);
  sub_227D515E4(&qword_255928F00, &qword_253F3AF30, MEMORY[0x24BE184A8]);
  v105 = sub_227E6008C();
  v57 = v85;
  sub_227E0D4AC(&v105, &qword_255928E40, (uint64_t (*)(uint64_t))sub_227E1584C, (void (*)(unint64_t *, unint64_t *, unint64_t *))sub_227E156D8);
  v58 = v105;
  if (v57)
  {
    result = swift_release();
    __break(1u);
  }
  else
  {
    v99 = (_QWORD *)v53;
    v59 = *(_QWORD *)(v105 + 16);
    if (v59)
    {
      v92 = v55;
      v107 = MEMORY[0x24BEE4AF8];
      sub_227DECBC4(0, v59, 0);
      v60 = *(unsigned __int8 *)(v89 + 80);
      v91 = (char *)v58;
      v61 = v58 + ((v60 + 32) & ~v60);
      v100 = *(_QWORD *)(v89 + 72);
      v62 = (uint64_t *)v101;
      do
      {
        sub_227D5DF48(v61, (uint64_t)v62, &qword_255928E40);
        v63 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD15D0]), sel_init);
        objc_msgSend(v63, sel_setFormatOptions_, 275);
        v104 = *v62;
        v64 = v104;
        v105 = sub_227E60674();
        v106 = v65;
        sub_227E6002C();
        v66 = *(int *)(v103 + 48);
        v67 = (char *)v102 + v66;
        v68 = (char *)v62 + v66;
        *v102 = v64;
        v69 = sub_227E5F27C();
        v70 = *(_QWORD *)(v69 - 8);
        (*(void (**)(char *, char *, uint64_t))(v70 + 16))(v67, v68, v69);
        v71 = (void *)sub_227E5F234();
        (*(void (**)(char *, uint64_t))(v70 + 8))(v67, v69);
        v72 = objc_msgSend(v63, sel_stringFromDate_, v71);

        sub_227E5FF84();
        sub_227E6002C();

        swift_bridgeObjectRelease();
        v74 = v105;
        v73 = v106;
        sub_227D5809C((uint64_t)v62, &qword_255928E40);
        v75 = v107;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_227DECBC4(0, *(_QWORD *)(v75 + 16) + 1, 1);
          v75 = v107;
        }
        v77 = *(_QWORD *)(v75 + 16);
        v76 = *(_QWORD *)(v75 + 24);
        if (v77 >= v76 >> 1)
        {
          sub_227DECBC4(v76 > 1, v77 + 1, 1);
          v75 = v107;
        }
        *(_QWORD *)(v75 + 16) = v77 + 1;
        v78 = v75 + 16 * v77;
        *(_QWORD *)(v78 + 32) = v74;
        *(_QWORD *)(v78 + 40) = v73;
        v61 += v100;
        --v59;
      }
      while (v59);
      swift_release();
      v33 = v86;
    }
    else
    {
      swift_release();
      v75 = MEMORY[0x24BEE4AF8];
    }
    v105 = v75;
    sub_227E5FF54();
    swift_bridgeObjectRelease();
    v105 = 0;
    v106 = 0xE000000000000000;
    sub_227E60494();
    sub_227E6002C();
    v79 = v94;
    sub_227E60164();
    v80 = v95;
    sub_227E60188();
    v81 = sub_227E6017C();
    v82 = v80;
    v83 = v96;
    v33(v82, v96);
    v33(v79, v83);
    v107 = v81;
    sub_227E60674();
    sub_227E6002C();
    swift_bridgeObjectRelease();
    sub_227E6002C();
    sub_227E6002C();
    swift_bridgeObjectRelease();
    sub_227E6002C();
    sub_227E6002C();
    swift_bridgeObjectRelease();
    sub_227E6002C();
    return v105;
  }
  return result;
}

uint64_t sub_227E0E7F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v42 = a1;
  v43 = a2;
  v44 = a3;
  v3 = sub_227E5F2E8();
  v40 = *(_QWORD *)(v3 - 8);
  v41 = v3;
  MEMORY[0x24BDAC7A8](v3, v4);
  v39 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_227E5F27C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6, v8);
  v38 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_227D68330(&qword_253F391F0);
  MEMORY[0x24BDAC7A8](v10, v11);
  v13 = (char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_227D68330(&qword_253F391E8);
  MEMORY[0x24BDAC7A8](v14, v15);
  v17 = (char *)&v38 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_227E5F0A8();
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18, v20);
  v22 = (char *)&v38 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_227D68330(&qword_253F391D0);
  v25 = MEMORY[0x24BDAC7A8](v23, v24);
  v27 = (char *)&v38 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v25, v28);
  v30 = (char *)&v38 - v29;
  v31 = sub_227E5F300();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v17, 1, 1, v31);
  v32 = sub_227E5F30C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v13, 1, 1, v32);
  sub_227E5F09C();
  sub_227E5F084();
  sub_227E5F090();
  sub_227E5F2B8();
  (*(void (**)(char *, uint64_t))(v19 + 8))(v22, v18);
  sub_227D5DF48((uint64_t)v30, (uint64_t)v27, &qword_253F391D0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v27, 1, v6) == 1)
  {
    sub_227D5809C((uint64_t)v30, &qword_253F391D0);
    sub_227D5809C((uint64_t)v27, &qword_253F391D0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(v44, 1, 1, v6);
  }
  else
  {
    v34 = v38;
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v38, v27, v6);
    v36 = v39;
    v35 = v40;
    v37 = v41;
    (*(void (**)(char *, _QWORD, uint64_t))(v40 + 104))(v39, *MEMORY[0x24BDCF250], v41);
    sub_227E5F2D0();
    (*(void (**)(char *, uint64_t))(v35 + 8))(v36, v37);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v34, v6);
    return sub_227D5809C((uint64_t)v30, &qword_253F391D0);
  }
}

uint64_t sub_227E0EBBC()
{
  return sub_227D51624(&qword_2559290B8, type metadata accessor for ReadingHistoryDay, (uint64_t)&protocol conformance descriptor for ReadingHistoryDay);
}

uint64_t sub_227E0EBE8()
{
  return sub_227D51624(&qword_2559290C0, type metadata accessor for ReadingHistoryDay, (uint64_t)&protocol conformance descriptor for ReadingHistoryDay);
}

uint64_t sub_227E0EC14()
{
  return MEMORY[0x24BE189F8];
}

uint64_t sub_227E0EC20()
{
  return sub_227D515E4(&qword_2559290C8, &qword_253F3AEE0, MEMORY[0x24BE17EB8]);
}

uint64_t sub_227E0EC4C()
{
  return sub_227D51624(&qword_2559282B0, type metadata accessor for ReadingHistoryDay, (uint64_t)&protocol conformance descriptor for ReadingHistoryDay);
}

uint64_t sub_227E0EC78()
{
  return sub_227D515E4(&qword_2559290D0, &qword_2559290D8, MEMORY[0x24BE185D0]);
}

uint64_t sub_227E0ECA4()
{
  return sub_227D51624(&qword_2559290E0, type metadata accessor for ReadingHistoryMonth, (uint64_t)&protocol conformance descriptor for ReadingHistoryMonth);
}

uint64_t sub_227E0ECD0()
{
  return sub_227D51624(&qword_2559290E8, type metadata accessor for ReadingHistoryMonth, (uint64_t)&protocol conformance descriptor for ReadingHistoryMonth);
}

uint64_t sub_227E0ECFC()
{
  return sub_227D515E4(&qword_2559290F0, &qword_253F3AF40, MEMORY[0x24BE18498]);
}

uint64_t sub_227E0ED28()
{
  return sub_227D51624(&qword_255929098, type metadata accessor for ReadingHistoryMonth, (uint64_t)&protocol conformance descriptor for ReadingHistoryMonth);
}

uint64_t sub_227E0ED54()
{
  return sub_227D515E4(&qword_2559290F8, &qword_255929100, MEMORY[0x24BE185E0]);
}

uint64_t sub_227E0ED80()
{
  return sub_227D515E4(&qword_255929108, &qword_255929110, MEMORY[0x24BE185D0]);
}

unint64_t sub_227E0EDB0()
{
  unint64_t result;

  result = qword_255929118;
  if (!qword_255929118)
  {
    result = MEMORY[0x22E2AA7D4](&protocol conformance descriptor for ReadingHistoryModel.DayKey, &type metadata for ReadingHistoryModel.DayKey);
    atomic_store(result, (unint64_t *)&qword_255929118);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for ReadingHistoryDay(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_227E5FE7C();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_227D68330(&qword_253F3AEE0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 24)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 24));
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for ReadingHistoryDay(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_227E5FE7C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  v6 = sub_227D68330(&qword_253F3AEE0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ReadingHistoryDay(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_227E5FE7C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_227D68330(&qword_253F3AEE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  *(_QWORD *)(a1 + *(int *)(a3 + 24)) = *(_QWORD *)(a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ReadingHistoryDay(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_227E5FE7C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_227D68330(&qword_253F3AEE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  *(_QWORD *)(a1 + *(int *)(a3 + 24)) = *(_QWORD *)(a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for ReadingHistoryDay(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_227E5FE7C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_227D68330(&qword_253F3AEE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  *(_QWORD *)(a1 + *(int *)(a3 + 24)) = *(_QWORD *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t assignWithTake for ReadingHistoryDay(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_227E5FE7C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_227D68330(&qword_253F3AEE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  *(_QWORD *)(a1 + *(int *)(a3 + 24)) = *(_QWORD *)(a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_227E0F198(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v14;

  v6 = sub_227E5FE7C();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = sub_227D68330(&qword_253F3AEE0);
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(_QWORD *)(a1 + *(int *)(a3 + 24));
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  return (v14 + 1);
}

uint64_t sub_227E0F244(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v8 = sub_227E5FE7C();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = sub_227D68330(&qword_253F3AEE0);
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_QWORD *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  return result;
}

char *initializeBufferWithCopyOfBuffer for ReadingHistoryMonth(char *a1, char *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = (char *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_227D68330(&qword_253F3AF40);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = &a1[v8];
    v10 = &a2[v8];
    v11 = sub_227D68330(&qword_253F3AEE0);
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    v12(v9, v10, v11);
    v12(&a1[a3[6]], &a2[a3[6]], v11);
    *(_QWORD *)&a1[a3[7]] = *(_QWORD *)&a2[a3[7]];
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for ReadingHistoryMonth(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);

  v4 = sub_227D68330(&qword_253F3AF40);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  v6 = sub_227D68330(&qword_253F3AEE0);
  v7 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8);
  v7(v5, v6);
  v7(a1 + *(int *)(a2 + 24), v6);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ReadingHistoryMonth(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);

  v6 = sub_227D68330(&qword_253F3AF40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_227D68330(&qword_253F3AEE0);
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  v11(v8, v9, v10);
  v11(a1 + a3[6], a2 + a3[6], v10);
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ReadingHistoryMonth(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);

  v6 = sub_227D68330(&qword_253F3AF40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_227D68330(&qword_253F3AEE0);
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24);
  v11(v8, v9, v10);
  v11(a1 + a3[6], a2 + a3[6], v10);
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for ReadingHistoryMonth(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);

  v6 = sub_227D68330(&qword_253F3AF40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_227D68330(&qword_253F3AEE0);
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32);
  v11(v8, v9, v10);
  v11(a1 + a3[6], a2 + a3[6], v10);
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  return a1;
}

uint64_t assignWithTake for ReadingHistoryMonth(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);

  v6 = sub_227D68330(&qword_253F3AF40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_227D68330(&qword_253F3AEE0);
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40);
  v11(v8, v9, v10);
  v11(a1 + a3[6], a2 + a3[6], v10);
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_227E0F764(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v14;

  v6 = sub_227D68330(&qword_253F3AF40);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = sub_227D68330(&qword_253F3AEE0);
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(_QWORD *)(a1 + *(int *)(a3 + 28));
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  return (v14 + 1);
}

uint64_t sub_227E0F814(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v8 = sub_227D68330(&qword_253F3AF40);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = sub_227D68330(&qword_253F3AEE0);
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_QWORD *)(a1 + *(int *)(a4 + 28)) = (a2 - 1);
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for ReadingHistoryModel(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_227D68330(&qword_253F3AF68);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_227D68330(&qword_253F3AF30);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 24)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 24));
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t initializeWithTake for ReadingHistoryModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_227D68330(&qword_253F3AF68);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_227D68330(&qword_253F3AF30);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  *(_QWORD *)(a1 + *(int *)(a3 + 24)) = *(_QWORD *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_227E0FA20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v14;

  v6 = sub_227D68330(&qword_253F3AF68);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = sub_227D68330(&qword_253F3AF30);
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(_QWORD *)(a1 + *(int *)(a3 + 24));
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  return (v14 + 1);
}

uint64_t sub_227E0FAD0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v8 = sub_227D68330(&qword_253F3AF68);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = sub_227D68330(&qword_253F3AF30);
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_QWORD *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  return result;
}

uint64_t sub_227E0FB7C(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char *v29;
  char *v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  BOOL v42;
  unint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  BOOL v52;
  uint64_t v53;
  char v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  BOOL v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  char *v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  unint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t i;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  unint64_t v91;
  _QWORD *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *__dst;

  v2 = a1;
  v3 = a1[1];
  result = sub_227E60668();
  if (result >= v3)
  {
    if (v3 < 0)
      goto LABEL_137;
    if ((unint64_t)v3 >= 2)
    {
      v78 = 0;
      v79 = *v2;
      for (i = 1; i != v3; ++i)
      {
        v81 = *(_QWORD *)(v79 + 8 * i);
        v82 = v78;
        do
        {
          v83 = *(_QWORD *)(v79 + v82);
          if (v81 >= v83)
            break;
          if (!v79)
            goto LABEL_141;
          *(_QWORD *)(v79 + v82 + 8) = v83;
          *(_QWORD *)(v79 + v82) = v81;
          v82 -= 8;
        }
        while (v82 != -8);
        v78 += 8;
      }
    }
    return result;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_146;
  v95 = result;
  v96 = v3;
  if (v3 < 2)
  {
    v8 = MEMORY[0x24BEE4AF8];
    __dst = (char *)(MEMORY[0x24BEE4AF8] + 32);
    if (v3 != 1)
    {
      v12 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
      v11 = (char *)MEMORY[0x24BEE4AF8];
LABEL_103:
      v94 = v8;
      if (v12 >= 2)
      {
        v84 = *v2;
        do
        {
          v85 = v12 - 2;
          if (v12 < 2)
            goto LABEL_132;
          if (!v84)
            goto LABEL_145;
          v86 = v11;
          v87 = v11 + 32;
          v88 = *(_QWORD *)&v11[16 * v85 + 32];
          v89 = *(_QWORD *)&v11[16 * v12 + 24];
          sub_227E10E2C((char *)(v84 + 8 * v88), (char *)(v84 + 8 * *(_QWORD *)&v87[16 * v12 - 16]), v84 + 8 * v89, __dst);
          if (v1)
            break;
          if (v89 < v88)
            goto LABEL_133;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v86 = sub_227E157FC((uint64_t)v86);
          if (v85 >= *((_QWORD *)v86 + 2))
            goto LABEL_134;
          v90 = &v86[16 * v85 + 32];
          *(_QWORD *)v90 = v88;
          *((_QWORD *)v90 + 1) = v89;
          v91 = *((_QWORD *)v86 + 2);
          if (v12 > v91)
            goto LABEL_135;
          memmove(&v86[16 * v12 + 16], &v86[16 * v12 + 32], 16 * (v91 - v12));
          v11 = v86;
          *((_QWORD *)v86 + 2) = v91 - 1;
          v12 = v91 - 1;
        }
        while (v91 > 2);
      }
LABEL_114:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v94 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    v94 = MEMORY[0x24BEE4AF8];
  }
  else
  {
    v6 = v5 >> 1;
    v7 = sub_227E600EC();
    *(_QWORD *)(v7 + 16) = v6;
    v3 = v96;
    v94 = v7;
    __dst = (char *)(v7 + 32);
  }
  v9 = 0;
  v10 = *v2;
  v92 = v2;
  v93 = *v2 - 8;
  v11 = (char *)MEMORY[0x24BEE4AF8];
  v97 = *v2;
  while (1)
  {
    v13 = v9++;
    if (v9 < v3)
    {
      v14 = *(_QWORD *)(v10 + 8 * v9);
      v15 = *(_QWORD *)(v10 + 8 * v13);
      v9 = v13 + 2;
      if (v13 + 2 < v3)
      {
        v16 = v14;
        while (1)
        {
          v17 = *(_QWORD *)(v10 + 8 * v9);
          if (v14 < v15 == v17 >= v16)
            break;
          ++v9;
          v16 = v17;
          if (v3 == v9)
          {
            v9 = v3;
            break;
          }
        }
      }
      if (v14 < v15)
      {
        if (v9 < v13)
          goto LABEL_138;
        if (v13 < v9)
        {
          v18 = v9 - 1;
          v19 = v13;
          do
          {
            if (v19 != v18)
            {
              if (!v10)
                goto LABEL_144;
              v20 = *(_QWORD *)(v10 + 8 * v19);
              *(_QWORD *)(v10 + 8 * v19) = *(_QWORD *)(v10 + 8 * v18);
              *(_QWORD *)(v10 + 8 * v18) = v20;
            }
            v59 = ++v19 < v18--;
          }
          while (v59);
        }
      }
    }
    if (v9 >= v3)
      goto LABEL_47;
    if (__OFSUB__(v9, v13))
      goto LABEL_136;
    if (v9 - v13 >= v95)
      goto LABEL_47;
    v21 = v13 + v95;
    if (__OFADD__(v13, v95))
      goto LABEL_139;
    if (v21 >= v3)
      v21 = v3;
    if (v21 < v13)
      break;
    if (v9 != v21)
    {
      v22 = (uint64_t *)(v93 + 8 * v9);
      do
      {
        v23 = *(_QWORD *)(v10 + 8 * v9);
        v24 = v13;
        v25 = v22;
        do
        {
          v26 = *v25;
          if (v23 >= *v25)
            break;
          if (!v10)
            goto LABEL_142;
          *v25 = v23;
          v25[1] = v26;
          --v25;
          ++v24;
        }
        while (v9 != v24);
        ++v9;
        ++v22;
      }
      while (v9 != v21);
      v9 = v21;
    }
LABEL_47:
    if (v9 < v13)
      goto LABEL_131;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v11 = sub_227E15378(0, *((_QWORD *)v11 + 2) + 1, 1, v11);
    v28 = *((_QWORD *)v11 + 2);
    v27 = *((_QWORD *)v11 + 3);
    v12 = v28 + 1;
    v10 = v97;
    if (v28 >= v27 >> 1)
    {
      v77 = sub_227E15378((char *)(v27 > 1), v28 + 1, 1, v11);
      v10 = v97;
      v11 = v77;
    }
    *((_QWORD *)v11 + 2) = v12;
    v29 = v11 + 32;
    v30 = &v11[16 * v28 + 32];
    *(_QWORD *)v30 = v13;
    *((_QWORD *)v30 + 1) = v9;
    if (v28)
    {
      while (1)
      {
        v31 = v12 - 1;
        if (v12 >= 4)
        {
          v36 = &v29[16 * v12];
          v37 = *((_QWORD *)v36 - 8);
          v38 = *((_QWORD *)v36 - 7);
          v42 = __OFSUB__(v38, v37);
          v39 = v38 - v37;
          if (v42)
            goto LABEL_120;
          v41 = *((_QWORD *)v36 - 6);
          v40 = *((_QWORD *)v36 - 5);
          v42 = __OFSUB__(v40, v41);
          v34 = v40 - v41;
          v35 = v42;
          if (v42)
            goto LABEL_121;
          v43 = v12 - 2;
          v44 = &v29[16 * v12 - 32];
          v46 = *(_QWORD *)v44;
          v45 = *((_QWORD *)v44 + 1);
          v42 = __OFSUB__(v45, v46);
          v47 = v45 - v46;
          if (v42)
            goto LABEL_123;
          v42 = __OFADD__(v34, v47);
          v48 = v34 + v47;
          if (v42)
            goto LABEL_126;
          if (v48 >= v39)
          {
            v66 = &v29[16 * v31];
            v68 = *(_QWORD *)v66;
            v67 = *((_QWORD *)v66 + 1);
            v42 = __OFSUB__(v67, v68);
            v69 = v67 - v68;
            if (v42)
              goto LABEL_130;
            v59 = v34 < v69;
            goto LABEL_84;
          }
        }
        else
        {
          if (v12 != 3)
          {
            v60 = *((_QWORD *)v11 + 4);
            v61 = *((_QWORD *)v11 + 5);
            v42 = __OFSUB__(v61, v60);
            v53 = v61 - v60;
            v54 = v42;
            goto LABEL_78;
          }
          v33 = *((_QWORD *)v11 + 4);
          v32 = *((_QWORD *)v11 + 5);
          v42 = __OFSUB__(v32, v33);
          v34 = v32 - v33;
          v35 = v42;
        }
        if ((v35 & 1) != 0)
          goto LABEL_122;
        v43 = v12 - 2;
        v49 = &v29[16 * v12 - 32];
        v51 = *(_QWORD *)v49;
        v50 = *((_QWORD *)v49 + 1);
        v52 = __OFSUB__(v50, v51);
        v53 = v50 - v51;
        v54 = v52;
        if (v52)
          goto LABEL_125;
        v55 = &v29[16 * v31];
        v57 = *(_QWORD *)v55;
        v56 = *((_QWORD *)v55 + 1);
        v42 = __OFSUB__(v56, v57);
        v58 = v56 - v57;
        if (v42)
          goto LABEL_128;
        if (__OFADD__(v53, v58))
          goto LABEL_129;
        if (v53 + v58 >= v34)
        {
          v59 = v34 < v58;
LABEL_84:
          if (v59)
            v31 = v43;
          goto LABEL_86;
        }
LABEL_78:
        if ((v54 & 1) != 0)
          goto LABEL_124;
        v62 = &v29[16 * v31];
        v64 = *(_QWORD *)v62;
        v63 = *((_QWORD *)v62 + 1);
        v42 = __OFSUB__(v63, v64);
        v65 = v63 - v64;
        if (v42)
          goto LABEL_127;
        if (v65 < v53)
          goto LABEL_15;
LABEL_86:
        v70 = v31 - 1;
        if (v31 - 1 >= v12)
        {
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
          goto LABEL_140;
        }
        if (!v10)
          goto LABEL_143;
        v71 = &v29[16 * v70];
        v72 = *(_QWORD *)v71;
        v73 = v29;
        v74 = &v29[16 * v31];
        v75 = *((_QWORD *)v74 + 1);
        sub_227E10E2C((char *)(v10 + 8 * *(_QWORD *)v71), (char *)(v10 + 8 * *(_QWORD *)v74), v10 + 8 * v75, __dst);
        if (v1)
          goto LABEL_114;
        if (v75 < v72)
          goto LABEL_117;
        if (v31 > *((_QWORD *)v11 + 2))
          goto LABEL_118;
        *(_QWORD *)v71 = v72;
        *(_QWORD *)&v73[16 * v70 + 8] = v75;
        v76 = *((_QWORD *)v11 + 2);
        if (v31 >= v76)
          goto LABEL_119;
        v12 = v76 - 1;
        memmove(v74, v74 + 16, 16 * (v76 - 1 - v31));
        v29 = v73;
        *((_QWORD *)v11 + 2) = v76 - 1;
        v10 = v97;
        if (v76 <= 2)
          goto LABEL_15;
      }
    }
    v12 = 1;
LABEL_15:
    v3 = v96;
    if (v9 >= v96)
    {
      v8 = v94;
      v2 = v92;
      goto LABEL_103;
    }
  }
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  result = sub_227E60554();
  __break(1u);
  return result;
}

uint64_t sub_227E10204(_QWORD *a1, uint64_t *a2, void (*a3)(unint64_t *, unint64_t *, unint64_t *))
{
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  uint64_t *v42;
  uint64_t *v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v72;
  unint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  BOOL v88;
  unint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  BOOL v98;
  uint64_t v99;
  char v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  BOOL v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  unint64_t v116;
  char *v117;
  char *v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  unint64_t v122;
  char *v123;
  uint64_t v124;
  unint64_t v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  char *v130;
  char *v131;
  unint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  unint64_t v141;
  _QWORD *v142;
  void (*v143)(unint64_t *, unint64_t *, unint64_t *);
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t *v148;
  uint64_t *v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t *v154;

  v143 = a3;
  v4 = a2;
  v5 = v3;
  v7 = sub_227D68330(a2);
  v144 = *(_QWORD *)(v7 - 8);
  v145 = v7;
  v9 = MEMORY[0x24BDAC7A8](v7, v8);
  v139 = (uint64_t)&v133 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v9, v11);
  v151 = (uint64_t)&v133 - v13;
  v15 = MEMORY[0x24BDAC7A8](v12, v14);
  v149 = (uint64_t *)((char *)&v133 - v16);
  MEMORY[0x24BDAC7A8](v15, v17);
  v148 = (uint64_t *)((char *)&v133 - v18);
  v19 = a1[1];
  result = sub_227E60668();
  if (result >= v19)
  {
    if (v19 < 0)
      goto LABEL_139;
    if (v19)
      return sub_227E10BE8(0, v19, 1, a1, v4);
    return result;
  }
  if (v19 >= 0)
    v21 = v19;
  else
    v21 = v19 + 1;
  if (v19 < -1)
    goto LABEL_147;
  v135 = result;
  if (v19 < 2)
  {
    v25 = (char *)MEMORY[0x24BEE4AF8];
    v141 = MEMORY[0x24BEE4AF8]
         + ((*(unsigned __int8 *)(v144 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v144 + 80));
    v134 = MEMORY[0x24BEE4AF8];
    if (v19 != 1)
    {
      v27 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
LABEL_106:
      v123 = v25;
      if (v27 >= 2)
      {
        v124 = *a1;
        do
        {
          v125 = v27 - 2;
          if (v27 < 2)
            goto LABEL_134;
          if (!v124)
            goto LABEL_146;
          v126 = v123;
          v127 = *(_QWORD *)&v123[16 * v125 + 32];
          v128 = *(_QWORD *)&v123[16 * v27 + 24];
          sub_227E11098(v124 + *(_QWORD *)(v144 + 72) * v127, v124 + *(_QWORD *)(v144 + 72) * *(_QWORD *)&v123[16 * v27 + 16], v124 + *(_QWORD *)(v144 + 72) * v128, v141, v4, v143);
          if (v5)
            break;
          if (v128 < v127)
            goto LABEL_135;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v126 = sub_227E157FC((uint64_t)v126);
          if (v125 >= *((_QWORD *)v126 + 2))
            goto LABEL_136;
          v129 = v126 + 32;
          v130 = &v126[16 * v125 + 32];
          *(_QWORD *)v130 = v127;
          *((_QWORD *)v130 + 1) = v128;
          v131 = v126;
          v132 = *((_QWORD *)v126 + 2);
          if (v27 > v132)
            goto LABEL_137;
          memmove(&v129[16 * v27 - 16], &v129[16 * v27], 16 * (v132 - v27));
          v123 = v131;
          *((_QWORD *)v131 + 2) = v132 - 1;
          v27 = v132 - 1;
        }
        while (v132 > 2);
      }
LABEL_103:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v134 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    v22 = v21 >> 1;
    v23 = sub_227E600EC();
    *(_QWORD *)(v23 + 16) = v22;
    v24 = *(unsigned __int8 *)(v144 + 80);
    v134 = v23;
    v141 = v23 + ((v24 + 32) & ~v24);
  }
  v26 = 0;
  v25 = (char *)MEMORY[0x24BEE4AF8];
  v154 = v4;
  v142 = a1;
  while (1)
  {
    v28 = v26 + 1;
    v140 = v26;
    if (v26 + 1 >= v19)
    {
      v35 = v26;
      v38 = v26 + 1;
    }
    else
    {
      v146 = *a1;
      v29 = v146;
      v30 = *(_QWORD *)(v144 + 72);
      v31 = v148;
      sub_227D5DF48(v146 + v30 * v28, (uint64_t)v148, v4);
      v32 = v29 + v30 * v140;
      v33 = v149;
      sub_227D5DF48(v32, (uint64_t)v149, v4);
      v152 = *v31;
      v150 = *v33;
      sub_227D5809C((uint64_t)v33, v4);
      v34 = (uint64_t)v31;
      v35 = v140;
      sub_227D5809C(v34, v4);
      v36 = v30;
      v37 = v146;
      v38 = v35 + 2;
      v153 = v36;
      if (v35 + 2 < v19)
      {
        v136 = v25;
        v137 = v5;
        v147 = v36 * v28;
        v39 = v36 * v38;
        while (1)
        {
          v40 = v19;
          v41 = v152 < v150;
          v42 = v148;
          sub_227D5DF48(v37 + v39, (uint64_t)v148, v4);
          v43 = v149;
          sub_227D5DF48(v37 + v147, (uint64_t)v149, v4);
          v44 = *v42 >= *v43;
          sub_227D5809C((uint64_t)v43, v4);
          sub_227D5809C((uint64_t)v42, v4);
          if (v41 == v44)
            break;
          v37 += v153;
          ++v38;
          v19 = v40;
          if (v40 == v38)
          {
            v38 = v40;
            a1 = v142;
            v25 = v136;
            v35 = v140;
            goto LABEL_23;
          }
        }
        a1 = v142;
        v25 = v136;
        v35 = v140;
        v19 = v40;
LABEL_23:
        v5 = v137;
      }
      if (v152 < v150)
      {
        if (v38 < v35)
          goto LABEL_140;
        if (v35 < v38)
        {
          v152 = v19;
          v136 = v25;
          v137 = v5;
          v45 = 0;
          v46 = v153;
          v47 = v153 * (v38 - 1);
          v48 = v35;
          v49 = v38 * v153;
          v50 = v48;
          v51 = v48 * v153;
          do
          {
            if (v50 != v38 + v45 - 1)
            {
              v52 = v146;
              if (!v146)
                goto LABEL_145;
              v53 = v146 + v51;
              v54 = v146 + v47;
              sub_227D5B0DC(v146 + v51, v139, v154);
              if (v51 < v47 || v53 >= v52 + v49)
              {
                swift_arrayInitWithTakeFrontToBack();
                v46 = v153;
              }
              else
              {
                v46 = v153;
                if (v51 != v47)
                  swift_arrayInitWithTakeBackToFront();
              }
              v4 = v154;
              sub_227D5B0DC(v139, v54, v154);
            }
            ++v50;
            --v45;
            v47 -= v46;
            v49 -= v46;
            v51 += v46;
          }
          while (v50 < v38 + v45);
          v25 = v136;
          v5 = v137;
          a1 = v142;
          v35 = v140;
          v19 = v152;
        }
      }
    }
    if (v38 < v19)
    {
      if (__OFSUB__(v38, v35))
        goto LABEL_138;
      if (v38 - v35 < v135)
        break;
    }
LABEL_56:
    if (v38 < v35)
      goto LABEL_133;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v150 = v38;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      v25 = sub_227E15378(0, *((_QWORD *)v25 + 2) + 1, 1, v25);
    v73 = *((_QWORD *)v25 + 2);
    v72 = *((_QWORD *)v25 + 3);
    v27 = v73 + 1;
    if (v73 >= v72 >> 1)
      v25 = sub_227E15378((char *)(v72 > 1), v73 + 1, 1, v25);
    *((_QWORD *)v25 + 2) = v27;
    v74 = v25 + 32;
    v75 = &v25[16 * v73 + 32];
    v76 = v150;
    *(_QWORD *)v75 = v140;
    *((_QWORD *)v75 + 1) = v76;
    if (v73)
    {
      while (1)
      {
        v77 = v27 - 1;
        if (v27 >= 4)
        {
          v82 = &v74[16 * v27];
          v83 = *((_QWORD *)v82 - 8);
          v84 = *((_QWORD *)v82 - 7);
          v88 = __OFSUB__(v84, v83);
          v85 = v84 - v83;
          if (v88)
            goto LABEL_122;
          v87 = *((_QWORD *)v82 - 6);
          v86 = *((_QWORD *)v82 - 5);
          v88 = __OFSUB__(v86, v87);
          v80 = v86 - v87;
          v81 = v88;
          if (v88)
            goto LABEL_123;
          v89 = v27 - 2;
          v90 = &v74[16 * v27 - 32];
          v92 = *(_QWORD *)v90;
          v91 = *((_QWORD *)v90 + 1);
          v88 = __OFSUB__(v91, v92);
          v93 = v91 - v92;
          if (v88)
            goto LABEL_125;
          v88 = __OFADD__(v80, v93);
          v94 = v80 + v93;
          if (v88)
            goto LABEL_128;
          if (v94 >= v85)
          {
            v112 = &v74[16 * v77];
            v114 = *(_QWORD *)v112;
            v113 = *((_QWORD *)v112 + 1);
            v88 = __OFSUB__(v113, v114);
            v115 = v113 - v114;
            if (v88)
              goto LABEL_132;
            v105 = v80 < v115;
            goto LABEL_93;
          }
        }
        else
        {
          if (v27 != 3)
          {
            v106 = *((_QWORD *)v25 + 4);
            v107 = *((_QWORD *)v25 + 5);
            v88 = __OFSUB__(v107, v106);
            v99 = v107 - v106;
            v100 = v88;
            goto LABEL_87;
          }
          v79 = *((_QWORD *)v25 + 4);
          v78 = *((_QWORD *)v25 + 5);
          v88 = __OFSUB__(v78, v79);
          v80 = v78 - v79;
          v81 = v88;
        }
        if ((v81 & 1) != 0)
          goto LABEL_124;
        v89 = v27 - 2;
        v95 = &v74[16 * v27 - 32];
        v97 = *(_QWORD *)v95;
        v96 = *((_QWORD *)v95 + 1);
        v98 = __OFSUB__(v96, v97);
        v99 = v96 - v97;
        v100 = v98;
        if (v98)
          goto LABEL_127;
        v101 = &v74[16 * v77];
        v103 = *(_QWORD *)v101;
        v102 = *((_QWORD *)v101 + 1);
        v88 = __OFSUB__(v102, v103);
        v104 = v102 - v103;
        if (v88)
          goto LABEL_130;
        if (__OFADD__(v99, v104))
          goto LABEL_131;
        if (v99 + v104 >= v80)
        {
          v105 = v80 < v104;
LABEL_93:
          if (v105)
            v77 = v89;
          goto LABEL_95;
        }
LABEL_87:
        if ((v100 & 1) != 0)
          goto LABEL_126;
        v108 = &v74[16 * v77];
        v110 = *(_QWORD *)v108;
        v109 = *((_QWORD *)v108 + 1);
        v88 = __OFSUB__(v109, v110);
        v111 = v109 - v110;
        if (v88)
          goto LABEL_129;
        if (v111 < v99)
          goto LABEL_14;
LABEL_95:
        v116 = v77 - 1;
        if (v77 - 1 >= v27)
        {
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
          goto LABEL_142;
        }
        if (!*v142)
          goto LABEL_144;
        v117 = v25;
        v118 = &v74[16 * v116];
        v119 = *(_QWORD *)v118;
        v120 = &v74[16 * v77];
        v121 = *((_QWORD *)v120 + 1);
        sub_227E11098(*v142 + *(_QWORD *)(v144 + 72) * *(_QWORD *)v118, *v142 + *(_QWORD *)(v144 + 72) * *(_QWORD *)v120, *v142 + *(_QWORD *)(v144 + 72) * v121, v141, v154, v143);
        if (v5)
          goto LABEL_103;
        if (v121 < v119)
          goto LABEL_119;
        if (v77 > *((_QWORD *)v117 + 2))
          goto LABEL_120;
        *(_QWORD *)v118 = v119;
        *(_QWORD *)&v74[16 * v116 + 8] = v121;
        v122 = *((_QWORD *)v117 + 2);
        if (v77 >= v122)
          goto LABEL_121;
        v25 = v117;
        v27 = v122 - 1;
        memmove(&v74[16 * v77], v120 + 16, 16 * (v122 - 1 - v77));
        *((_QWORD *)v117 + 2) = v122 - 1;
        v4 = v154;
        if (v122 <= 2)
          goto LABEL_14;
      }
    }
    v27 = 1;
LABEL_14:
    a1 = v142;
    v19 = v142[1];
    v26 = v150;
    if (v150 >= v19)
      goto LABEL_106;
  }
  if (__OFADD__(v35, v135))
    goto LABEL_141;
  if (v35 + v135 >= v19)
    v55 = v19;
  else
    v55 = v35 + v135;
  if (v55 >= v35)
  {
    if (v38 != v55)
    {
      v136 = v25;
      v137 = v5;
      v56 = *(_QWORD *)(v144 + 72);
      v57 = v56 * (v38 - 1);
      v146 = v56;
      v58 = v38 * v56;
      v138 = v55;
      do
      {
        v60 = 0;
        v61 = v140;
        v150 = v38;
        v147 = v58;
        while (1)
        {
          v152 = v61;
          v62 = *a1;
          v63 = v58 + v60 + *a1;
          v64 = v148;
          sub_227D5DF48(v63, (uint64_t)v148, v4);
          v65 = v57;
          v66 = v57 + v60 + v62;
          v67 = v149;
          sub_227D5DF48(v66, (uint64_t)v149, v4);
          v153 = *v64;
          v68 = *v67;
          sub_227D5809C((uint64_t)v67, v4);
          sub_227D5809C((uint64_t)v64, v4);
          if (v153 >= v68)
            break;
          v69 = *a1;
          if (!*a1)
            goto LABEL_143;
          v58 = v147;
          v57 = v65;
          v70 = v69 + v65 + v60;
          sub_227D5B0DC(v69 + v147 + v60, v151, v154);
          swift_arrayInitWithTakeFrontToBack();
          v4 = v154;
          sub_227D5B0DC(v151, v70, v154);
          v60 -= v146;
          v61 = v152 + 1;
          v59 = v150;
          if (v150 == v152 + 1)
            goto LABEL_49;
        }
        v4 = v154;
        v59 = v150;
        v57 = v65;
        v58 = v147;
LABEL_49:
        v38 = v59 + 1;
        v57 += v146;
        v58 += v146;
      }
      while (v38 != v138);
      v38 = v138;
      v25 = v136;
      v5 = v137;
      v35 = v140;
    }
    goto LABEL_56;
  }
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  result = sub_227E60554();
  __break(1u);
  return result;
}

uint64_t sub_227E10BE8(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t *a5)
{
  uint64_t *v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v5 = a5;
  v37 = a1;
  v38 = sub_227D68330(a5);
  v10 = MEMORY[0x24BDAC7A8](v38, v9);
  v44 = (uint64_t)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v10, v12);
  v40 = (uint64_t *)((char *)&v35 - v14);
  result = MEMORY[0x24BDAC7A8](v13, v15);
  v39 = (uint64_t *)((char *)&v35 - v18);
  v43 = a3;
  v36 = a2;
  if (a3 != a2)
  {
    v19 = *(_QWORD *)(v17 + 72);
    v46 = v19 * (v43 - 1);
    v41 = v19;
    v20 = v19 * v43;
LABEL_5:
    v21 = 0;
    v22 = v37;
    v42 = v20;
    while (1)
    {
      v23 = a4;
      v24 = *a4;
      v25 = v20 + v21 + v24;
      v26 = v39;
      sub_227D5DF48(v25, (uint64_t)v39, v5);
      v27 = v46 + v21 + v24;
      v28 = v5;
      v29 = v40;
      sub_227D5DF48(v27, (uint64_t)v40, v28);
      v45 = *v26;
      v30 = *v29;
      v31 = (uint64_t)v29;
      v5 = v28;
      sub_227D5809C(v31, v28);
      v32 = (uint64_t)v26;
      v20 = v42;
      result = sub_227D5809C(v32, v28);
      a4 = v23;
      if (v45 >= v30)
      {
LABEL_4:
        v46 += v41;
        v20 += v41;
        if (++v43 == v36)
          return result;
        goto LABEL_5;
      }
      v33 = *v23;
      if (!*v23)
        break;
      v34 = v33 + v46 + v21;
      sub_227D5B0DC(v33 + v20 + v21, v44, v5);
      swift_arrayInitWithTakeFrontToBack();
      result = sub_227D5B0DC(v44, v34, v5);
      v21 -= v41;
      ++v22;
      a4 = v23;
      if (v43 == v22)
        goto LABEL_4;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_227E10E2C(char *__src, char *a2, unint64_t a3, char *__dst)
{
  char *v4;
  char *v6;
  char *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t result;
  char *v22;
  char *v23;
  char *v24;

  v4 = __dst;
  v6 = a2;
  v7 = __src;
  v8 = a2 - __src;
  v9 = a2 - __src + 7;
  if (a2 - __src >= 0)
    v9 = a2 - __src;
  v10 = v9 >> 3;
  v11 = a3 - (_QWORD)a2;
  v12 = a3 - (_QWORD)a2 + 7;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v12 = a3 - (_QWORD)a2;
  v13 = v12 >> 3;
  v24 = __src;
  v23 = __dst;
  if (v10 >= v12 >> 3)
  {
    if (v11 >= -7)
    {
      if (__dst != a2 || &a2[8 * v13] <= __dst)
        memmove(__dst, a2, 8 * v13);
      v16 = &v4[8 * v13];
      v22 = v16;
      v24 = v6;
      if (v7 < v6 && v11 >= 8)
      {
        v17 = (char *)(a3 - 8);
        while (1)
        {
          v18 = v17 + 8;
          v19 = v6 - 8;
          v20 = *((_QWORD *)v6 - 1);
          if (*((_QWORD *)v16 - 1) >= v20)
          {
            v22 = v16 - 8;
            if (v18 < v16 || v17 >= v16 || v18 != v16)
              *(_QWORD *)v17 = *((_QWORD *)v16 - 1);
            v16 -= 8;
            if (v6 <= v7)
              goto LABEL_42;
          }
          else
          {
            if (v18 != v6 || v17 >= v6)
              *(_QWORD *)v17 = v20;
            v24 = v6 - 8;
            v6 -= 8;
            if (v19 <= v7)
              goto LABEL_42;
          }
          v17 -= 8;
          if (v16 <= v4)
            goto LABEL_42;
        }
      }
      goto LABEL_42;
    }
  }
  else if (v8 >= -7)
  {
    if (__dst != __src || &__src[8 * v10] <= __dst)
      memmove(__dst, __src, 8 * v10);
    v14 = &v4[8 * v10];
    v22 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 8)
    {
      do
      {
        if (*(_QWORD *)v6 >= *(_QWORD *)v4)
        {
          if (v7 != v4)
            *(_QWORD *)v7 = *(_QWORD *)v4;
          v4 += 8;
          v23 = v4;
          v15 = v6;
        }
        else
        {
          v15 = v6 + 8;
          if (v7 < v6 || v7 >= v15 || v7 != v6)
            *(_QWORD *)v7 = *(_QWORD *)v6;
        }
        v7 += 8;
        if (v4 >= v14)
          break;
        v6 = v15;
      }
      while ((unint64_t)v15 < a3);
      v24 = v7;
    }
LABEL_42:
    sub_227E15524((void **)&v24, (const void **)&v23, &v22);
    return 1;
  }
  result = sub_227E605A8();
  __break(1u);
  return result;
}

uint64_t sub_227E11098(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4, uint64_t *a5, void (*a6)(unint64_t *, unint64_t *, unint64_t *))
{
  uint64_t *v7;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v40;
  unint64_t v42;
  uint64_t v44;
  unint64_t v45;
  uint64_t *v46;
  _QWORD *v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  unint64_t v55;
  BOOL v56;
  uint64_t result;
  uint64_t v58;
  void (*v59)(unint64_t *, unint64_t *, unint64_t *);
  unint64_t v60;
  unint64_t v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t *v64;
  unint64_t v65;
  unint64_t v66;
  unint64_t v67;

  v7 = a5;
  v62 = sub_227D68330(a5);
  v13 = MEMORY[0x24BDAC7A8](v62, v12);
  v64 = (uint64_t *)((char *)&v58 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v13, v15);
  v17 = (uint64_t *)((char *)&v58 - v16);
  v19 = *(_QWORD *)(v18 + 72);
  if (!v19)
  {
    __break(1u);
LABEL_71:
    __break(1u);
LABEL_72:
    __break(1u);
    goto LABEL_73;
  }
  v20 = a1;
  if (a2 - a1 == 0x8000000000000000 && v19 == -1)
    goto LABEL_71;
  v21 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v19 == -1)
    goto LABEL_72;
  v22 = (uint64_t)(a2 - a1) / v19;
  v67 = a1;
  v66 = a4;
  v23 = v21 / v19;
  v61 = a4;
  v59 = a6;
  if (v22 >= v21 / v19)
  {
    if ((v23 & 0x8000000000000000) == 0)
    {
      v60 = a1;
      v26 = v23 * v19;
      v27 = v61;
      if (v61 < a2 || a2 + v26 <= v61)
      {
        swift_arrayInitWithTakeFrontToBack();
        v28 = a3;
      }
      else
      {
        v28 = a3;
        if (v61 != a2)
          swift_arrayInitWithTakeBackToFront();
      }
      v42 = v27 + v26;
      v65 = v27 + v26;
      v67 = a2;
      if (v26 >= 1 && v60 < a2)
      {
        v44 = -v19;
        do
        {
          v63 = v28 + v44;
          sub_227D5DF48(v42 + v44, (uint64_t)v17, v7);
          v45 = a2 + v44;
          v46 = v7;
          v47 = v17;
          v48 = v64;
          sub_227D5DF48(a2 + v44, (uint64_t)v64, v46);
          v49 = v44;
          v50 = *v47;
          v51 = *v48;
          v52 = (uint64_t)v48;
          v17 = v47;
          v7 = v46;
          sub_227D5809C(v52, v46);
          sub_227D5809C((uint64_t)v17, v46);
          if (v50 >= v51)
          {
            v55 = v65;
            v65 += v49;
            v56 = v28 < v55 || v63 >= v55;
            v44 = v49;
            v53 = v63;
            if (v56)
            {
              swift_arrayInitWithTakeFrontToBack();
              v45 = a2;
              v54 = v61;
            }
            else
            {
              v54 = v61;
              if (v28 != v55)
                swift_arrayInitWithTakeBackToFront();
              v45 = a2;
            }
          }
          else
          {
            v44 = v49;
            v53 = v63;
            if (v28 < a2 || v63 >= a2)
            {
              swift_arrayInitWithTakeFrontToBack();
              v54 = v61;
            }
            else
            {
              v54 = v61;
              if (v28 != a2)
                swift_arrayInitWithTakeBackToFront();
            }
            v67 += v44;
          }
          v42 = v65;
          if (v65 <= v54)
            break;
          a2 = v45;
          v28 = v53;
        }
        while (v45 > v60);
      }
      goto LABEL_69;
    }
  }
  else if ((v22 & 0x8000000000000000) == 0)
  {
    v24 = v22 * v19;
    v25 = v61;
    if (v61 < v20 || v20 + v24 <= v61)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v61 != v20)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    v29 = v25 + v24;
    v65 = v25 + v24;
    if (v24 >= 1 && a2 < a3)
    {
      v31 = a3;
      v32 = v25;
      do
      {
        sub_227D5DF48(a2, (uint64_t)v17, v7);
        v33 = v32;
        v34 = v64;
        sub_227D5DF48(v33, (uint64_t)v64, v7);
        v35 = *v17;
        v36 = *v34;
        sub_227D5809C((uint64_t)v34, v7);
        sub_227D5809C((uint64_t)v17, v7);
        v37 = v67;
        if (v35 >= v36)
        {
          v40 = v66 + v19;
          if (v67 < v66 || v67 >= v40)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v67 != v66)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          v66 = v40;
          v38 = a2;
        }
        else
        {
          v38 = a2 + v19;
          if (v67 < a2 || v67 >= v38)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v67 == a2)
          {
            v37 = a2;
          }
          else
          {
            swift_arrayInitWithTakeBackToFront();
          }
        }
        v67 = v37 + v19;
        v32 = v66;
        if (v66 >= v29)
          break;
        a2 = v38;
      }
      while (v38 < v31);
    }
LABEL_69:
    v59(&v67, &v66, &v65);
    return 1;
  }
LABEL_73:
  result = sub_227E605A8();
  __break(1u);
  return result;
}

_QWORD *sub_227E11558(_QWORD *a1)
{
  return sub_227DF8E24(0, a1[2], 0, a1);
}

uint64_t sub_227E1156C@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;

  return sub_227E0C6B8(a1, a2, *(_QWORD *)(v3 + 16), a3);
}

uint64_t sub_227E11588(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_227E15874(v2);
  v3 = *(_QWORD *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  result = sub_227E1492C(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_227E115F0()
{
  uint64_t v0;

  v0 = sub_227E5F588();
  sub_227DDF6FC(v0, qword_2559291C0);
  sub_227DDF6E4(v0, (uint64_t)qword_2559291C0);
  return sub_227E5F57C();
}

id sub_227E11670()
{
  id result;

  result = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD15D0]), sel_init);
  qword_2559291D8 = (uint64_t)result;
  return result;
}

uint64_t static SecureEngagementDataHelper.mergedTimeSliceData(local:remote:)(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  unint64_t v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  int v31;
  uint64_t v32;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  unint64_t v39;
  __int128 v40;
  __int128 v41;
  uint64_t v42;

  v38 = a1;
  v39 = a2;
  v6 = sub_227D68330(&qword_2559291E0);
  MEMORY[0x24BDAC7A8](v6, v7);
  v37 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_227E5F3FC();
  v11 = MEMORY[0x24BDAC7A8](v9, v10);
  MEMORY[0x24BDAC7A8](v11, v12);
  v13 = type metadata accessor for PBPropertyTimeSlice(0);
  v14 = *(_QWORD *)(v13 - 8);
  v16 = MEMORY[0x24BDAC7A8](v13, v15);
  v18 = (char *)&v35 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = MEMORY[0x24BDAC7A8](v16, v19);
  v22 = (uint64_t *)((char *)&v35 - v21);
  MEMORY[0x24BDAC7A8](v20, v23);
  v25 = (char *)&v35 - v24;
  v42 = 0;
  v40 = 0u;
  v41 = 0u;
  sub_227DD00E0(a3, a4);
  sub_227E5F3F0();
  sub_227D51624(&qword_2559291E8, type metadata accessor for PBPropertyTimeSlice, (uint64_t)&protocol conformance descriptor for PBPropertyTimeSlice);
  sub_227E5F4B0();
  v35 = v18;
  v36 = v14;
  v26 = (unint64_t)v37;
  if (*(_QWORD *)(*(_QWORD *)v25 + 16))
  {
    v42 = 0;
    v40 = 0u;
    v41 = 0u;
    sub_227DD00E0(v38, v39);
    sub_227E5F3F0();
    sub_227E5F4B0();
    static SecureEngagementDataHelper.mergeIntoTimeSlice(_:from:)(v22, (unint64_t)v25, v26);
    v31 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v36 + 48))(v26, 1, v13);
    if (v31 != 1)
    {
      v34 = (uint64_t)v35;
      sub_227D5E458(v26, (uint64_t)v35, type metadata accessor for PBPropertyTimeSlice);
      v32 = sub_227E5F4BC();
      sub_227D64BC4(v34, type metadata accessor for PBPropertyTimeSlice);
      sub_227D64BC4((uint64_t)v22, type metadata accessor for PBPropertyTimeSlice);
      sub_227D64BC4((uint64_t)v25, type metadata accessor for PBPropertyTimeSlice);
      return v32;
    }
    sub_227D64BC4((uint64_t)v22, type metadata accessor for PBPropertyTimeSlice);
    sub_227D64BC4((uint64_t)v25, type metadata accessor for PBPropertyTimeSlice);
    sub_227D5809C(v26, &qword_2559291E0);
  }
  else
  {
    if (qword_2559281A8 != -1)
      swift_once();
    v27 = sub_227E5F588();
    sub_227DDF6E4(v27, (uint64_t)qword_2559291C0);
    v28 = sub_227E5F570();
    v29 = sub_227E60224();
    if (os_log_type_enabled(v28, v29))
    {
      v30 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v30 = 0;
      _os_log_impl(&dword_227D4F000, v28, v29, "Not merging empty secure engagement data", v30, 2u);
      MEMORY[0x22E2AA8AC](v30, -1, -1);
    }

    sub_227D64BC4((uint64_t)v25, type metadata accessor for PBPropertyTimeSlice);
  }
  return 0;
}

uint64_t static SecureEngagementDataHelper.mergeIntoTimeSlice(_:from:)@<X0>(uint64_t *a1@<X0>, unint64_t a2@<X1>, unint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t isa;
  uint64_t *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t *v90;
  uint64_t v91;
  uint64_t v92;
  NSObject *v93;
  unint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  unint64_t v103;
  uint64_t v104;
  uint64_t v105;
  void (*v106)(void);
  uint64_t (*v107)(NSObject *, uint64_t, unint64_t);
  int v108;
  uint64_t *v109;
  char *v110;
  int v111;
  uint64_t v112;
  int v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  int v119;
  char *v120;
  int v121;
  char *v122;
  unint64_t v123;
  uint64_t v124;
  uint64_t v125;
  unint64_t v126;
  int v127;
  void (*v128)(uint64_t, unint64_t);
  int v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  char *v135;
  __int128 v136;
  unint64_t v137;
  char *v138;
  unint64_t *v139;
  uint64_t v140;
  unint64_t v141;
  char v142;
  unint64_t v143;
  char v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  void *v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  char *v155;
  unint64_t v156;
  char v157;
  unint64_t v158;
  char v159;
  unint64_t v160;
  uint64_t v161;
  unint64_t v162;
  unint64_t v163;
  unint64_t v164;
  uint64_t v165;
  uint64_t v166;
  os_log_type_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  unint64_t v172;
  uint64_t v173;
  uint64_t v174;
  unint64_t v175;
  char v176;
  unint64_t v177;
  unint64_t v178;
  uint64_t v179;
  unint64_t v180;
  unint64_t v181;
  unint64_t v182;
  uint64_t v183;
  uint64_t v184;
  os_log_type_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  unint64_t v189;
  uint64_t v190;
  unint64_t v191;
  unint64_t v192;
  uint64_t v193;
  unint64_t v194;
  unint64_t v195;
  uint64_t v196;
  uint64_t v197;
  os_log_type_t v198;
  uint64_t v199;
  unint64_t v200;
  uint64_t v201;
  unint64_t v202;
  char v203;
  unint64_t v204;
  uint64_t v205;
  unint64_t v206;
  unint64_t v207;
  unint64_t v208;
  uint64_t v209;
  os_log_type_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  unint64_t v214;
  uint64_t v215;
  unint64_t v216;
  uint64_t v217;
  uint64_t v218;
  unint64_t v219;
  unint64_t v220;
  unint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  os_log_type_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  unint64_t v230;
  uint64_t v231;
  uint64_t *v232;
  uint64_t **v233;
  uint64_t v234;
  uint64_t v235;
  void (*v236)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  _QWORD *v240;
  uint64_t v241;
  unint64_t v242;
  unint64_t v243;
  uint64_t v244;
  os_log_type_t v245;
  uint64_t v246;
  uint64_t v247;
  unint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t result;
  os_log_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t *v256;
  char *v257;
  uint64_t v258;
  uint64_t v259;
  unint64_t v260;
  unint64_t v261;
  uint64_t v262;
  uint64_t **v263;
  _QWORD *v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  void *v268;
  unint64_t v269;
  NSObject *v270;
  char *v271;
  char *v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  char *v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t *v279;
  uint64_t v280;
  uint64_t *v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  unint64_t *v286;
  char *v287;
  __int128 v288;
  uint64_t v289;
  uint64_t v290;
  char *v291;
  unint64_t v292;
  char *v293;
  char *v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  void (*v298)(void);
  unint64_t v299;
  uint64_t *v300;
  uint64_t v301;
  char *v302;
  char *v303;

  v281 = a1;
  v261 = a3;
  v4 = sub_227D68330(&qword_255928C88);
  MEMORY[0x24BDAC7A8](v4, v5);
  v267 = (uint64_t)&v252 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v266 = type metadata accessor for PBPropertyConfiguration(0);
  v265 = *(_QWORD *)(v266 - 8);
  MEMORY[0x24BDAC7A8](v266, v7);
  v264 = (os_log_t *)((char *)&v252 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = type metadata accessor for PBPropertyValue(0);
  v290 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x24BDAC7A8](v9, v10);
  v258 = (uint64_t)&v252 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v11, v13);
  v296 = (uint64_t)&v252 - v15;
  MEMORY[0x24BDAC7A8](v14, v16);
  v254 = (uint64_t)&v252 - v17;
  v275 = type metadata accessor for PBPropertyBundle(0);
  v272 = *(char **)(v275 - 8);
  v19 = MEMORY[0x24BDAC7A8](v275, v18);
  v271 = (char *)&v252 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = MEMORY[0x24BDAC7A8](v19, v21);
  v284 = (uint64_t)&v252 - v23;
  v25 = MEMORY[0x24BDAC7A8](v22, v24);
  v292 = (unint64_t)&v252 - v26;
  v28 = MEMORY[0x24BDAC7A8](v25, v27);
  v277 = (uint64_t)&v252 - v29;
  v31 = MEMORY[0x24BDAC7A8](v28, v30);
  v283 = (uint64_t)&v252 - v32;
  v34 = MEMORY[0x24BDAC7A8](v31, v33);
  v282 = (uint64_t)&v252 - v35;
  v37 = MEMORY[0x24BDAC7A8](v34, v36);
  v274 = (uint64_t)&v252 - v38;
  v40 = MEMORY[0x24BDAC7A8](v37, v39);
  v263 = (uint64_t **)((char *)&v252 - v41);
  v43 = MEMORY[0x24BDAC7A8](v40, v42);
  v255 = (uint64_t)&v252 - v44;
  v46 = MEMORY[0x24BDAC7A8](v43, v45);
  v289 = (uint64_t)&v252 - v47;
  v49 = MEMORY[0x24BDAC7A8](v46, v48);
  v253 = (uint64_t)&v252 - v50;
  v52 = MEMORY[0x24BDAC7A8](v49, v51);
  v278 = (uint64_t)&v252 - v53;
  MEMORY[0x24BDAC7A8](v52, v54);
  v280 = (uint64_t)&v252 - v55;
  isa = sub_227E5F3C0();
  v57 = *(uint64_t **)(isa - 8);
  v59 = MEMORY[0x24BDAC7A8](isa, v58);
  v276 = (char *)&v252 - ((v60 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = MEMORY[0x24BDAC7A8](v59, v61);
  v294 = (char *)&v252 - v63;
  v65 = MEMORY[0x24BDAC7A8](v62, v64);
  *(_QWORD *)&v288 = (char *)&v252 - v66;
  MEMORY[0x24BDAC7A8](v65, v67);
  v287 = (char *)&v252 - v68;
  v69 = sub_227D68330(&qword_255928C98);
  v71 = MEMORY[0x24BDAC7A8](v69, v70);
  v273 = (uint64_t)&v252 - ((v72 + 15) & 0xFFFFFFFFFFFFFFF0);
  v74 = MEMORY[0x24BDAC7A8](v71, v73);
  v76 = (char *)&v252 - v75;
  v78 = MEMORY[0x24BDAC7A8](v74, v77);
  v293 = (char *)&v252 - v79;
  v81 = MEMORY[0x24BDAC7A8](v78, v80);
  v285 = (uint64_t)&v252 - v82;
  v84 = MEMORY[0x24BDAC7A8](v81, v83);
  v86 = (char *)&v252 - v85;
  v88 = MEMORY[0x24BDAC7A8](v84, v87);
  v90 = (unint64_t *)((char *)&v252 - v89);
  MEMORY[0x24BDAC7A8](v88, v91);
  v93 = ((char *)&v252 - v92);
  v94 = type metadata accessor for PBPropertyTimeSlice(0);
  v259 = *(_QWORD *)(v94 - 8);
  v96 = MEMORY[0x24BDAC7A8](v94, v95);
  v299 = (unint64_t)&v252 - ((v97 + 15) & 0xFFFFFFFFFFFFFFF0);
  v99 = MEMORY[0x24BDAC7A8](v96, v98);
  v295 = (uint64_t)&v252 - v100;
  MEMORY[0x24BDAC7A8](v99, v101);
  v103 = (unint64_t)&v252 - v102;
  if (qword_2559281B0 != -1)
    goto LABEL_149;
LABEL_2:
  v268 = (void *)qword_2559291D8;
  *(_QWORD *)v103 = MEMORY[0x24BEE4AF8];
  _s13BookDataStore18PBPropertyNoParamsVACycfC_0();
  v104 = *(int *)(v94 + 24);
  v286 = (unint64_t *)v103;
  v105 = v103 + v104;
  v106 = (void (*)(void))v57[7];
  v297 = v105;
  v298 = v106;
  v106();
  v291 = (char *)(a2 + *(int *)(v94 + 24));
  sub_227D5DF48((uint64_t)v291, (uint64_t)v93, &qword_255928C98);
  v300 = v57;
  v107 = (uint64_t (*)(NSObject *, uint64_t, unint64_t))v57[6];
  v108 = v107(v93, 1, isa);
  sub_227D5809C((uint64_t)v93, &qword_255928C98);
  v260 = v94;
  v109 = v281;
  v110 = (char *)v281 + *(int *)(v94 + 24);
  v279 = (uint64_t *)a2;
  if (v108 != 1)
  {
    sub_227D5DF48((uint64_t)v110, (uint64_t)v90, &qword_255928C98);
    v113 = v107(v90, 1, isa);
    sub_227D5809C((uint64_t)v90, &qword_255928C98);
    v114 = v295;
    sub_227D5DFFC(a2, v295, type metadata accessor for PBPropertyTimeSlice);
    v115 = (uint64_t)v109;
    v116 = v299;
    sub_227D5DFFC(v115, v299, type metadata accessor for PBPropertyTimeSlice);
    if (v113 == 1)
    {
      sub_227D64BC4(v116, type metadata accessor for PBPropertyTimeSlice);
      sub_227D64BC4(v114, type metadata accessor for PBPropertyTimeSlice);
      LODWORD(v285) = 0;
      v103 = v292;
      v117 = (uint64_t)v293;
      v90 = v286;
    }
    else
    {
      sub_227D5DF48(v114 + *(int *)(v260 + 24), (uint64_t)v86, &qword_255928C98);
      v121 = v107(v86, 1, isa);
      v103 = v292;
      v117 = (uint64_t)v293;
      v90 = v286;
      v122 = v287;
      if (v121 == 1)
      {
        sub_227E5F3B4();
        sub_227D5809C((uint64_t)v86, &qword_255928C98);
      }
      else
      {
        ((void (*)(char *, char *, unint64_t))v300[4])(v287, v86, isa);
      }
      v124 = v288;
      v125 = v285;
      sub_227D5DF48(v299 + *(int *)(v260 + 24), v285, &qword_255928C98);
      if (v107(v125, 1, isa) == 1)
      {
        sub_227E5F3B4();
        sub_227D5809C(v125, &qword_255928C98);
        v126 = (unint64_t)v300;
      }
      else
      {
        v126 = (unint64_t)v300;
        ((void (*)(uint64_t, uint64_t, unint64_t))v300[4])(v124, v125, isa);
      }
      sub_227D51624(&qword_2559291F0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B990], MEMORY[0x24BE5B9A0]);
      v127 = sub_227E5FF6C();
      v128 = *(void (**)(uint64_t, unint64_t))(v126 + 8);
      v128(v124, isa);
      v128((uint64_t)v122, isa);
      sub_227D64BC4(v299, type metadata accessor for PBPropertyTimeSlice);
      sub_227D64BC4(v295, type metadata accessor for PBPropertyTimeSlice);
      LODWORD(v285) = v127 ^ 1;
    }
    v120 = v294;
    sub_227D5DF48((uint64_t)v291, v117, &qword_255928C98);
    v129 = v107(v117, 1, isa);
    v86 = v272;
    v112 = (uint64_t)v271;
    if (v129 != 1)
    {
      v123 = (unint64_t)v300;
      ((void (*)(char *, uint64_t, unint64_t))v300[4])(v120, v117, isa);
      a2 = v261;
      goto LABEL_21;
    }
    sub_227E5F3B4();
    sub_227D5809C(v117, &qword_255928C98);
    a2 = v261;
    goto LABEL_19;
  }
  sub_227D5DF48((uint64_t)v110, (uint64_t)v76, &qword_255928C98);
  v111 = v107(v76, 1, isa);
  sub_227D5809C((uint64_t)v76, &qword_255928C98);
  if (v111 != 1)
  {
    v118 = v273;
    sub_227D5DF48((uint64_t)v110, v273, &qword_255928C98);
    v119 = v107(v118, 1, isa);
    v86 = v272;
    v112 = (uint64_t)v271;
    v103 = v292;
    if (v119 != 1)
    {
      v123 = (unint64_t)v300;
      v120 = v276;
      ((void (*)(char *, uint64_t, unint64_t))v300[4])(v276, v118, isa);
      LODWORD(v285) = 0;
      a2 = v261;
      v90 = v286;
LABEL_21:
      v130 = v297;
      sub_227D5809C(v297, &qword_255928C98);
      (*(void (**)(uint64_t, char *, unint64_t))(v123 + 32))(v130, v120, isa);
      ((void (*)(uint64_t, _QWORD, uint64_t, unint64_t))v298)(v130, 0, 1, isa);
      goto LABEL_22;
    }
    v120 = v276;
    sub_227E5F3B4();
    sub_227D5809C(v118, &qword_255928C98);
    LODWORD(v285) = 0;
    a2 = v261;
    v90 = v286;
LABEL_19:
    v123 = (unint64_t)v300;
    goto LABEL_21;
  }
  LODWORD(v285) = 0;
  a2 = v261;
  v86 = v272;
  v112 = (uint64_t)v271;
  v103 = v292;
  v90 = v286;
LABEL_22:
  v76 = (char *)sub_227E13C4C(v281);
  v132 = v131;
  v297 = sub_227E13C4C(v279);
  v134 = sub_227E13FEC(v133, v132);
  v135 = (char *)sub_227E14750(v134, (uint64_t *)&unk_255928ED0, (uint64_t (*)(uint64_t *, _QWORD *, uint64_t, uint64_t))sub_227E5669C);
  swift_bridgeObjectRelease();
  v302 = v135;
  swift_retain();
  sub_227E11588((uint64_t *)&v302);
  v276 = 0;
  swift_release();
  v295 = *((_QWORD *)v302 + 2);
  if (!v295)
  {
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v285 & 1) != 0)
      goto LABEL_135;
    goto LABEL_133;
  }
  v137 = 0;
  v294 = v302 + 32;
  v256 = (uint64_t *)&v302;
  *(_QWORD *)&v136 = 136315138;
  v288 = v136;
  v262 = MEMORY[0x24BEE4AD8] + 8;
  v57 = &qword_255928C88;
  v287 = v76;
  v293 = v302;
  while (1)
  {
    v139 = (unint64_t *)&v294[16 * v137];
    v94 = *v139;
    v93 = v139[1];
    v299 = v137 + 1;
    v140 = *((_QWORD *)v76 + 2);
    swift_bridgeObjectRetain();
    if (v140)
    {
      v141 = sub_227DD01C0(v94, (uint64_t)v93);
      if ((v142 & 1) != 0)
        break;
    }
    isa = v297;
    if (!*(_QWORD *)(v297 + 16) || (v201 = v94, v94 = v297, v202 = sub_227DD01C0(v201, (uint64_t)v93), (v203 & 1) == 0))
    {
      swift_bridgeObjectRelease();
LABEL_25:
      v138 = v293;
      v137 = v299;
      goto LABEL_26;
    }
    isa = *(_QWORD *)(*(_QWORD *)(isa + 56) + 8 * v202);
    swift_bridgeObjectRelease();
    if ((isa & 0x8000000000000000) != 0)
      goto LABEL_142;
    if (isa >= *(_QWORD *)(*v279 + 16))
      goto LABEL_143;
    v204 = (v86[80] + 32) & ~(unint64_t)v86[80];
    v205 = *((_QWORD *)v86 + 9);
    sub_227D5DFFC(*v279 + v204 + v205 * isa, v103, type metadata accessor for PBPropertyBundle);
    sub_227D5DFFC(v103, v284, type metadata accessor for PBPropertyBundle);
    v206 = *v90;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v206 = sub_227DF8F30(0, *(_QWORD *)(v206 + 16) + 1, 1, v206);
    v208 = *(_QWORD *)(v206 + 16);
    v207 = *(_QWORD *)(v206 + 24);
    if (v208 >= v207 >> 1)
      v206 = sub_227DF8F30(v207 > 1, v208 + 1, 1, v206);
    *(_QWORD *)(v206 + 16) = v208 + 1;
    a2 = (unint64_t)type metadata accessor for PBPropertyBundle;
    sub_227D5E458(v284, v206 + v204 + v208 * v205, type metadata accessor for PBPropertyBundle);
    *v90 = v206;
    if (qword_2559281A8 != -1)
      swift_once();
    v209 = sub_227E5F588();
    isa = sub_227DDF6E4(v209, (uint64_t)qword_2559291C0);
    v103 = v292;
    sub_227D5DFFC(v292, v112, type metadata accessor for PBPropertyBundle);
    v93 = sub_227E5F570();
    v210 = sub_227E60224();
    v94 = v210;
    if (os_log_type_enabled(v93, v210))
    {
      v211 = swift_slowAlloc();
      v212 = swift_slowAlloc();
      v303 = (char *)v212;
      *(_DWORD *)v211 = v288;
      v213 = sub_227DE95DC();
      isa = v214;
      *(_QWORD *)(v211 + 4) = sub_227D634E0(v213, v214, (uint64_t *)&v303);
      swift_bridgeObjectRelease();
      sub_227D64BC4(v112, type metadata accessor for PBPropertyBundle);
      _os_log_impl(&dword_227D4F000, v93, (os_log_type_t)v94, "Taking on cloud property bundle %s", (uint8_t *)v211, 0xCu);
      swift_arrayDestroy();
      v215 = v212;
      v103 = v292;
      MEMORY[0x22E2AA8AC](v215, -1, -1);
      MEMORY[0x22E2AA8AC](v211, -1, -1);

    }
    else
    {

      sub_227D64BC4(v112, type metadata accessor for PBPropertyBundle);
    }
    sub_227D64BC4(v103, type metadata accessor for PBPropertyBundle);
    v76 = v287;
    v138 = v293;
    v137 = v299;
    if (v299 == v295)
    {
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      a2 = v261;
      goto LABEL_135;
    }
    LODWORD(v285) = 1;
LABEL_27:
    if (v137 >= *((_QWORD *)v138 + 2))
    {
LABEL_138:
      __break(1u);
LABEL_139:
      __break(1u);
LABEL_140:
      __break(1u);
LABEL_141:
      __break(1u);
LABEL_142:
      __break(1u);
LABEL_143:
      __break(1u);
LABEL_144:
      __break(1u);
LABEL_145:
      __break(1u);
LABEL_146:
      __break(1u);
LABEL_147:
      __break(1u);
LABEL_148:
      __break(1u);
LABEL_149:
      swift_once();
      goto LABEL_2;
    }
  }
  v103 = *(_QWORD *)(*((_QWORD *)v76 + 7) + 8 * v141);
  isa = v297;
  if (!*(_QWORD *)(v297 + 16) || (v143 = sub_227DD01C0(v94, (uint64_t)v93), (v144 & 1) == 0))
  {
    swift_bridgeObjectRelease();
    if ((v103 & 0x8000000000000000) != 0)
      goto LABEL_141;
    if (v103 >= *(_QWORD *)(*v281 + 16))
      goto LABEL_144;
    v216 = (v86[80] + 32) & ~(unint64_t)v86[80];
    v217 = *((_QWORD *)v86 + 9);
    v218 = v282;
    sub_227D5DFFC(*v281 + v216 + v217 * v103, v282, type metadata accessor for PBPropertyBundle);
    sub_227D5DFFC(v218, v283, type metadata accessor for PBPropertyBundle);
    v219 = *v90;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v219 = sub_227DF8F30(0, *(_QWORD *)(v219 + 16) + 1, 1, v219);
    v221 = *(_QWORD *)(v219 + 16);
    v220 = *(_QWORD *)(v219 + 24);
    if (v221 >= v220 >> 1)
      v219 = sub_227DF8F30(v220 > 1, v221 + 1, 1, v219);
    *(_QWORD *)(v219 + 16) = v221 + 1;
    a2 = (unint64_t)type metadata accessor for PBPropertyBundle;
    sub_227D5E458(v283, v219 + v216 + v221 * v217, type metadata accessor for PBPropertyBundle);
    *v90 = v219;
    if (qword_2559281A8 != -1)
      swift_once();
    v222 = sub_227E5F588();
    isa = sub_227DDF6E4(v222, (uint64_t)qword_2559291C0);
    v223 = v282;
    v224 = v277;
    sub_227D5DFFC(v282, v277, type metadata accessor for PBPropertyBundle);
    v93 = sub_227E5F570();
    v225 = sub_227E60224();
    v94 = v225;
    if (os_log_type_enabled(v93, v225))
    {
      v226 = v224;
      v227 = swift_slowAlloc();
      v228 = swift_slowAlloc();
      v303 = (char *)v228;
      *(_DWORD *)v227 = v288;
      v229 = sub_227DE95DC();
      isa = v230;
      *(_QWORD *)(v227 + 4) = sub_227D634E0(v229, v230, (uint64_t *)&v303);
      swift_bridgeObjectRelease();
      v231 = v226;
      v57 = &qword_255928C88;
      sub_227D64BC4(v231, type metadata accessor for PBPropertyBundle);
      _os_log_impl(&dword_227D4F000, v93, (os_log_type_t)v94, "Keeping local property bundle %s unchanged", (uint8_t *)v227, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x22E2AA8AC](v228, -1, -1);
      MEMORY[0x22E2AA8AC](v227, -1, -1);

    }
    else
    {

      sub_227D64BC4(v224, type metadata accessor for PBPropertyBundle);
    }
    sub_227D64BC4(v223, type metadata accessor for PBPropertyBundle);
    v103 = v292;
    v90 = v286;
    v76 = v287;
    goto LABEL_25;
  }
  isa = *(_QWORD *)(*(_QWORD *)(v297 + 56) + 8 * v143);
  swift_bridgeObjectRelease();
  if ((v103 & 0x8000000000000000) != 0)
    goto LABEL_145;
  if (v103 >= *(_QWORD *)(*v281 + 16))
    goto LABEL_146;
  v93 = ((v86[80] + 32) & ~(unint64_t)v86[80]);
  v94 = *((_QWORD *)v86 + 9);
  v145 = v280;
  a2 = (unint64_t)type metadata accessor for PBPropertyBundle;
  sub_227D5DFFC((uint64_t)v93 + *v281 + v94 * v103, v280, type metadata accessor for PBPropertyBundle);
  if ((isa & 0x8000000000000000) != 0)
    goto LABEL_147;
  v146 = *v279;
  if (isa >= *(_QWORD *)(*v279 + 16))
    goto LABEL_148;
  v270 = v93;
  v269 = v94;
  v147 = (uint64_t)v93 + v146 + v94 * isa;
  v148 = v278;
  sub_227D5DFFC(v147, v278, type metadata accessor for PBPropertyBundle);
  v149 = v268;
  v93 = sub_227E14168(v145, v268);
  v151 = v150;
  v86 = (char *)sub_227E14168(v148, v149);
  v153 = sub_227E13FEC(v152, v151);
  isa = (unint64_t)sub_227E14750(v153, (uint64_t *)&unk_255928ED0, (uint64_t (*)(uint64_t *, _QWORD *, uint64_t, uint64_t))sub_227E5669C);
  swift_bridgeObjectRelease();
  v303 = (char *)isa;
  swift_retain();
  v94 = (unint64_t)v276;
  sub_227E11588((uint64_t *)&v303);
  v276 = (char *)v94;
  if (v94)
    goto LABEL_154;
  swift_release();
  v76 = v303;
  v154 = *((_QWORD *)v303 + 2);
  if (!v154)
  {
    swift_bridgeObjectRelease();
    swift_release();
    LODWORD(v273) = 0;
    v232 = (uint64_t *)MEMORY[0x24BEE4AF8];
    v300 = (uint64_t *)MEMORY[0x24BEE4AF8];
LABEL_117:
    swift_bridgeObjectRelease();
    v233 = v263;
    *v263 = v232;
    v233[1] = v232;
    v234 = v275;
    _s13BookDataStore18PBPropertyNoParamsVACycfC_0();
    v235 = v265;
    v236 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v265 + 56);
    v237 = v266;
    v236((char *)v233 + *(int *)(v234 + 28), 1, 1, v266);
    v238 = v278 + *(int *)(v234 + 28);
    v239 = v267;
    sub_227D5DF48(v238, v267, &qword_255928C88);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v235 + 48))(v239, 1, v237) == 1)
    {
      v240 = v264;
      *v264 = 0;
      v240[1] = 0;
      v240[2] = 0;
      v240[3] = 0xE000000000000000;
      v240[4] = 0;
      _s13BookDataStore18PBPropertyNoParamsVACycfC_0();
      sub_227D5809C(v239, &qword_255928C88);
    }
    else
    {
      v240 = v264;
      sub_227D5E458(v239, (uint64_t)v264, type metadata accessor for PBPropertyConfiguration);
    }
    swift_beginAccess();
    v241 = (uint64_t)v233 + *(int *)(v275 + 28);
    sub_227D5809C(v241, &qword_255928C88);
    sub_227D5E458((uint64_t)v240, v241, type metadata accessor for PBPropertyConfiguration);
    v236((char *)v241, 0, 1, v237);
    *v233 = v300;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    sub_227D5DFFC((uint64_t)v233, v274, type metadata accessor for PBPropertyBundle);
    v242 = *v90;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v242 = sub_227DF8F30(0, *(_QWORD *)(v242 + 16) + 1, 1, v242);
    v94 = *(_QWORD *)(v242 + 16);
    v243 = *(_QWORD *)(v242 + 24);
    if (v94 >= v243 >> 1)
      v242 = sub_227DF8F30(v243 > 1, v94 + 1, 1, v242);
    *(_QWORD *)(v242 + 16) = v94 + 1;
    sub_227D5E458(v274, (uint64_t)v270 + v242 + v94 * v269, type metadata accessor for PBPropertyBundle);
    *v90 = v242;
    if (qword_2559281A8 != -1)
      swift_once();
    v244 = sub_227E5F588();
    isa = sub_227DDF6E4(v244, (uint64_t)qword_2559291C0);
    v93 = sub_227E5F570();
    v245 = sub_227E60224();
    if (os_log_type_enabled(v93, v245))
    {
      v94 = swift_slowAlloc();
      v246 = swift_slowAlloc();
      v303 = (char *)v246;
      *(_DWORD *)v94 = v288;
      a2 = v94 + 4;
      v247 = sub_227DE95DC();
      isa = v248;
      v301 = sub_227D634E0(v247, v248, (uint64_t *)&v303);
      sub_227E603B0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_227D4F000, v93, v245, "Merged property bundle %s", (uint8_t *)v94, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x22E2AA8AC](v246, -1, -1);
      MEMORY[0x22E2AA8AC](v94, -1, -1);

      sub_227D64BC4(v278, type metadata accessor for PBPropertyBundle);
      sub_227D64BC4(v145, type metadata accessor for PBPropertyBundle);
      v249 = (uint64_t)v233;
      v57 = &qword_255928C88;
    }
    else
    {
      swift_bridgeObjectRelease();

      sub_227D64BC4(v278, type metadata accessor for PBPropertyBundle);
      sub_227D64BC4(v145, type metadata accessor for PBPropertyBundle);
      v249 = (uint64_t)v233;
    }
    sub_227D64BC4(v249, type metadata accessor for PBPropertyBundle);
    v103 = v292;
    v138 = v293;
    v76 = v287;
    v137 = v299;
    LODWORD(v285) = v285 | v273;
    v86 = v272;
    v112 = (uint64_t)v271;
    v90 = v286;
LABEL_26:
    if (v137 != v295)
      goto LABEL_27;
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    a2 = v261;
    if ((v285 & 1) != 0)
    {
LABEL_135:
      sub_227D5E458((uint64_t)v90, a2, type metadata accessor for PBPropertyTimeSlice);
      v250 = 0;
      return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t, unint64_t))(v259 + 56))(a2, v250, 1, v260);
    }
LABEL_133:
    sub_227D64BC4((uint64_t)v90, type metadata accessor for PBPropertyTimeSlice);
    v250 = 1;
    return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t, unint64_t))(v259 + 56))(a2, v250, 1, v260);
  }
  LODWORD(v273) = 0;
  v57 = 0;
  v298 = (void (*)(void))-v154;
  v155 = v303 + 40;
  v300 = (uint64_t *)MEMORY[0x24BEE4AF8];
  v291 = v303;
  v257 = v303 + 40;
LABEL_39:
  v90 = (unint64_t *)&v155[16 * (_QWORD)v57];
  v57 = (uint64_t *)((char *)v57 + 1);
  while (1)
  {
    if ((unint64_t)v57 - 1 >= *((_QWORD *)v76 + 2))
    {
      __break(1u);
      goto LABEL_138;
    }
    v103 = *(v90 - 1);
    v94 = *v90;
    isa = (unint64_t)v93[2].isa;
    swift_bridgeObjectRetain();
    if (isa)
    {
      isa = (unint64_t)v93;
      v156 = sub_227DD01C0(v103, v94);
      if ((v157 & 1) != 0)
        break;
    }
    if (*((_QWORD *)v86 + 2))
    {
      isa = (unint64_t)v86;
      v175 = sub_227DD01C0(v103, v94);
      if ((v176 & 1) != 0)
      {
        v177 = *(_QWORD *)(*((_QWORD *)v86 + 7) + 8 * v175);
        swift_bridgeObjectRelease();
        if ((v177 & 0x8000000000000000) != 0)
        {
          __break(1u);
        }
        else if (v177 < *(_QWORD *)(*(_QWORD *)v278 + 16))
        {
          v178 = (*(unsigned __int8 *)(v290 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v290 + 80);
          v179 = *(_QWORD *)(v290 + 72);
          sub_227D5DFFC(*(_QWORD *)v278 + v178 + v179 * v177, v258, type metadata accessor for PBPropertyValue);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v300 = (uint64_t *)sub_227DF9150(0, v300[2] + 1, 1, (unint64_t)v300);
          v181 = v300[2];
          v180 = v300[3];
          if (v181 >= v180 >> 1)
            v300 = (uint64_t *)sub_227DF9150(v180 > 1, v181 + 1, 1, (unint64_t)v300);
          v182 = (unint64_t)v300;
          v300[2] = v181 + 1;
          sub_227D5E458(v258, v182 + v178 + v181 * v179, type metadata accessor for PBPropertyValue);
          if (qword_2559281A8 != -1)
            swift_once();
          v183 = sub_227E5F588();
          isa = sub_227DDF6E4(v183, (uint64_t)qword_2559291C0);
          v184 = v255;
          sub_227D5DFFC(v278, v255, type metadata accessor for PBPropertyBundle);
          v94 = sub_227E5F570();
          v185 = sub_227E60224();
          v103 = v185;
          if (os_log_type_enabled((os_log_t)v94, v185))
          {
            v186 = swift_slowAlloc();
            v187 = swift_slowAlloc();
            v303 = (char *)v187;
            *(_DWORD *)v186 = v288;
            v188 = sub_227DE95DC();
            isa = v189;
            *(_QWORD *)(v186 + 4) = sub_227D634E0(v188, v189, (uint64_t *)&v303);
            swift_bridgeObjectRelease();
            sub_227D64BC4(v184, type metadata accessor for PBPropertyBundle);
            _os_log_impl(&dword_227D4F000, (os_log_t)v94, (os_log_type_t)v103, "Taking on cloud property value %s", (uint8_t *)v186, 0xCu);
            swift_arrayDestroy();
            v190 = v187;
            a2 = (unint64_t)type metadata accessor for PBPropertyBundle;
            MEMORY[0x22E2AA8AC](v190, -1, -1);
            MEMORY[0x22E2AA8AC](v186, -1, -1);

          }
          else
          {

            sub_227D64BC4(v184, type metadata accessor for PBPropertyBundle);
          }
          v90 = v286;
LABEL_74:
          LODWORD(v273) = 1;
          v76 = v291;
          v155 = v257;
          if ((uint64_t *)((char *)v57 + (_QWORD)v298))
            goto LABEL_39;
          swift_bridgeObjectRelease();
          swift_release();
          LODWORD(v273) = 1;
LABEL_115:
          v232 = (uint64_t *)MEMORY[0x24BEE4AF8];
          v57 = &qword_255928C88;
          goto LABEL_117;
        }
        __break(1u);
        goto LABEL_152;
      }
    }
    swift_bridgeObjectRelease();
LABEL_41:
    v57 = (uint64_t *)((char *)v57 + 1);
    v90 += 2;
    if ((uint64_t *)((char *)v57 + (_QWORD)v298) == (uint64_t *)1)
    {
      swift_bridgeObjectRelease();
      swift_release();
      v90 = v286;
      goto LABEL_115;
    }
  }
  a2 = *((_QWORD *)v93[7].isa + v156);
  if (!*((_QWORD *)v86 + 2) || (isa = (unint64_t)v86, v158 = sub_227DD01C0(v103, v94), (v159 & 1) == 0))
  {
    swift_bridgeObjectRelease();
    if ((a2 & 0x8000000000000000) != 0)
      goto LABEL_139;
    if (a2 >= *(_QWORD *)(*(_QWORD *)v145 + 16))
      goto LABEL_140;
    v160 = (*(unsigned __int8 *)(v290 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v290 + 80);
    v161 = *(_QWORD *)(v290 + 72);
    sub_227D5DFFC(*(_QWORD *)v145 + v160 + v161 * a2, v296, type metadata accessor for PBPropertyValue);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v300 = (uint64_t *)sub_227DF9150(0, v300[2] + 1, 1, (unint64_t)v300);
    a2 = (unint64_t)type metadata accessor for PBPropertyBundle;
    v163 = v300[2];
    v162 = v300[3];
    if (v163 >= v162 >> 1)
      v300 = (uint64_t *)sub_227DF9150(v162 > 1, v163 + 1, 1, (unint64_t)v300);
    v164 = (unint64_t)v300;
    v300[2] = v163 + 1;
    sub_227D5E458(v296, v164 + v160 + v163 * v161, type metadata accessor for PBPropertyValue);
    if (qword_2559281A8 != -1)
      swift_once();
    v165 = sub_227E5F588();
    isa = sub_227DDF6E4(v165, (uint64_t)qword_2559291C0);
    v166 = v289;
    sub_227D5DFFC(v145, v289, type metadata accessor for PBPropertyBundle);
    v94 = sub_227E5F570();
    v167 = sub_227E60224();
    v103 = v167;
    if (os_log_type_enabled((os_log_t)v94, v167))
    {
      v168 = v166;
      v169 = swift_slowAlloc();
      v170 = swift_slowAlloc();
      v303 = (char *)v170;
      *(_DWORD *)v169 = v288;
      v171 = sub_227DE95DC();
      isa = v172;
      *(_QWORD *)(v169 + 4) = sub_227D634E0(v171, v172, (uint64_t *)&v303);
      swift_bridgeObjectRelease();
      v173 = v168;
      v145 = v280;
      sub_227D64BC4(v173, type metadata accessor for PBPropertyBundle);
      _os_log_impl(&dword_227D4F000, (os_log_t)v94, (os_log_type_t)v103, "Keeping property bundle %s unchanged", (uint8_t *)v169, 0xCu);
      swift_arrayDestroy();
      v174 = v170;
      a2 = (unint64_t)type metadata accessor for PBPropertyBundle;
      MEMORY[0x22E2AA8AC](v174, -1, -1);
      MEMORY[0x22E2AA8AC](v169, -1, -1);

    }
    else
    {

      sub_227D64BC4(v166, type metadata accessor for PBPropertyBundle);
    }
    v76 = v291;
    goto LABEL_41;
  }
  v191 = *(_QWORD *)(*((_QWORD *)v86 + 7) + 8 * v158);
  swift_bridgeObjectRelease();
  if ((v191 & 0x8000000000000000) != 0)
  {
LABEL_152:
    __break(1u);
    goto LABEL_153;
  }
  v90 = v286;
  a2 = (unint64_t)type metadata accessor for PBPropertyBundle;
  if (v191 < *(_QWORD *)(*(_QWORD *)v278 + 16))
  {
    v192 = (*(unsigned __int8 *)(v290 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v290 + 80);
    v193 = *(_QWORD *)(v290 + 72);
    sub_227D5DFFC(*(_QWORD *)v278 + v192 + v193 * v191, v254, type metadata accessor for PBPropertyValue);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v300 = (uint64_t *)sub_227DF9150(0, v300[2] + 1, 1, (unint64_t)v300);
    v103 = v300[2];
    v194 = v300[3];
    if (v103 >= v194 >> 1)
      v300 = (uint64_t *)sub_227DF9150(v194 > 1, v103 + 1, 1, (unint64_t)v300);
    v195 = (unint64_t)v300;
    v300[2] = v103 + 1;
    sub_227D5E458(v254, v195 + v192 + v103 * v193, type metadata accessor for PBPropertyValue);
    if (qword_2559281A8 != -1)
      swift_once();
    v196 = sub_227E5F588();
    sub_227DDF6E4(v196, (uint64_t)qword_2559291C0);
    v197 = v253;
    sub_227D5DFFC(v278, v253, type metadata accessor for PBPropertyBundle);
    isa = sub_227E5F570();
    v198 = sub_227E60224();
    v94 = v198;
    if (os_log_type_enabled((os_log_t)isa, v198))
    {
      v103 = swift_slowAlloc();
      v273 = swift_slowAlloc();
      v303 = (char *)v273;
      *(_DWORD *)v103 = v288;
      v252 = (os_log_t)isa;
      v199 = sub_227DE95DC();
      *(_QWORD *)(v103 + 4) = sub_227D634E0(v199, v200, (uint64_t *)&v303);
      swift_bridgeObjectRelease();
      sub_227D64BC4(v197, type metadata accessor for PBPropertyBundle);
      isa = (unint64_t)v252;
      _os_log_impl(&dword_227D4F000, v252, (os_log_type_t)v94, "Taking on cloud property value %s instead of the local version", (uint8_t *)v103, 0xCu);
      v94 = v273;
      swift_arrayDestroy();
      MEMORY[0x22E2AA8AC](v94, -1, -1);
      MEMORY[0x22E2AA8AC](v103, -1, -1);

    }
    else
    {

      sub_227D64BC4(v197, type metadata accessor for PBPropertyBundle);
    }
    goto LABEL_74;
  }
LABEL_153:
  __break(1u);
LABEL_154:
  swift_release();
  __break(1u);
  result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_227E13C4C(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  unint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  char isUniquelyReferenced_nonNull_native;
  char v21;
  unint64_t v22;
  uint64_t v23;
  _BOOL8 v24;
  uint64_t v25;
  char v26;
  unint64_t v27;
  char v28;
  uint64_t *v29;
  uint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t result;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43[3];

  v2 = sub_227D68330(&qword_255928C88);
  MEMORY[0x24BDAC7A8](v2, v3);
  v5 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for PBPropertyConfiguration(0);
  v42 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6, v7);
  v9 = (uint64_t *)((char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = type metadata accessor for PBPropertyBundle(0);
  v40 = *(_QWORD *)(v10 - 8);
  v41 = v10;
  MEMORY[0x24BDAC7A8](v10, v11);
  v13 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43[2] = MEMORY[0x24BEE4B08];
  v39 = *(_QWORD *)(*a1 + 16);
  if (!v39)
    return MEMORY[0x24BEE4B00];
  v14 = 0;
  v15 = *a1;
  v16 = (_QWORD *)MEMORY[0x24BEE4B00];
  v37 = v6;
  v38 = v5;
  v35 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = v15;
  while (v14 < *(_QWORD *)(v15 + 16))
  {
    sub_227D5DFFC(v15+ ((*(unsigned __int8 *)(v40 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80))+ *(_QWORD *)(v40 + 72) * v14, (uint64_t)v13, type metadata accessor for PBPropertyBundle);
    sub_227D5DF48((uint64_t)&v13[*(int *)(v41 + 28)], (uint64_t)v5, &qword_255928C88);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48))(v5, 1, v6) == 1)
    {
      *v9 = 0;
      v9[1] = 0;
      v9[2] = 0;
      v9[3] = 0xE000000000000000;
      v9[4] = 0;
      _s13BookDataStore18PBPropertyNoParamsVACycfC_0();
      sub_227D5809C((uint64_t)v5, &qword_255928C88);
    }
    else
    {
      sub_227D5E458((uint64_t)v5, (uint64_t)v9, type metadata accessor for PBPropertyConfiguration);
    }
    sub_227D64BC4((uint64_t)v13, type metadata accessor for PBPropertyBundle);
    v17 = v9[2];
    v18 = v9[3];
    swift_bridgeObjectRetain();
    v19 = v9;
    sub_227D64BC4((uint64_t)v9, type metadata accessor for PBPropertyConfiguration);
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v43[0] = (uint64_t)v16;
    v22 = sub_227DD01C0(v17, v18);
    v23 = v16[2];
    v24 = (v21 & 1) == 0;
    v25 = v23 + v24;
    if (__OFADD__(v23, v24))
      goto LABEL_24;
    v26 = v21;
    if (v16[3] >= v25)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        v16 = (_QWORD *)v43[0];
        if ((v21 & 1) != 0)
          goto LABEL_3;
      }
      else
      {
        sub_227DD2A84();
        v16 = (_QWORD *)v43[0];
        if ((v26 & 1) != 0)
          goto LABEL_3;
      }
    }
    else
    {
      sub_227DD0D88(v25, isUniquelyReferenced_nonNull_native);
      v27 = sub_227DD01C0(v17, v18);
      if ((v26 & 1) != (v28 & 1))
        goto LABEL_26;
      v22 = v27;
      v16 = (_QWORD *)v43[0];
      if ((v26 & 1) != 0)
      {
LABEL_3:
        *(_QWORD *)(v16[7] + 8 * v22) = v14;
        goto LABEL_4;
      }
    }
    v16[(v22 >> 6) + 8] |= 1 << v22;
    v29 = (uint64_t *)(v16[6] + 16 * v22);
    *v29 = v17;
    v29[1] = v18;
    *(_QWORD *)(v16[7] + 8 * v22) = v14;
    v30 = v16[2];
    v31 = __OFADD__(v30, 1);
    v32 = v30 + 1;
    if (v31)
      goto LABEL_25;
    v16[2] = v32;
    swift_bridgeObjectRetain();
LABEL_4:
    ++v14;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_227E22A9C(v43, v17, v18);
    swift_bridgeObjectRelease();
    v5 = v38;
    v15 = v36;
    v6 = v37;
    v13 = v35;
    v9 = v19;
    if (v39 == v14)
      return (uint64_t)v16;
  }
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  result = sub_227E606B0();
  __break(1u);
  return result;
}

uint64_t sub_227E13FEC(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;

  v2 = result;
  v3 = 0;
  v18 = a2;
  v4 = result + 56;
  v5 = 1 << *(_BYTE *)(result + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(result + 56);
  v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v10 = v9 | (v3 << 6);
      goto LABEL_5;
    }
    v14 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v14 >= v8)
      goto LABEL_23;
    v15 = *(_QWORD *)(v4 + 8 * v14);
    ++v3;
    if (!v15)
    {
      v3 = v14 + 1;
      if (v14 + 1 >= v8)
        goto LABEL_23;
      v15 = *(_QWORD *)(v4 + 8 * v3);
      if (!v15)
      {
        v3 = v14 + 2;
        if (v14 + 2 >= v8)
          goto LABEL_23;
        v15 = *(_QWORD *)(v4 + 8 * v3);
        if (!v15)
        {
          v3 = v14 + 3;
          if (v14 + 3 >= v8)
            goto LABEL_23;
          v15 = *(_QWORD *)(v4 + 8 * v3);
          if (!v15)
            break;
        }
      }
    }
LABEL_22:
    v7 = (v15 - 1) & v15;
    v10 = __clz(__rbit64(v15)) + (v3 << 6);
LABEL_5:
    v11 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v10);
    v12 = *v11;
    v13 = v11[1];
    swift_bridgeObjectRetain();
    sub_227E22A9C(&v17, v12, v13);
    result = swift_bridgeObjectRelease();
  }
  v16 = v14 + 4;
  if (v16 >= v8)
  {
LABEL_23:
    swift_release();
    return v18;
  }
  v15 = *(_QWORD *)(v4 + 8 * v16);
  if (v15)
  {
    v3 = v16;
    goto LABEL_22;
  }
  while (1)
  {
    v3 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v3 >= v8)
      goto LABEL_23;
    v15 = *(_QWORD *)(v4 + 8 * v3);
    ++v16;
    if (v15)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_227E14168(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  char *v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char isUniquelyReferenced_nonNull_native;
  char *v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t);
  uint64_t v27;
  void *v28;
  id v29;
  uint64_t *v30;
  unint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;

  v38 = a2;
  v3 = sub_227E5F27C();
  v36 = *(_QWORD *)(v3 - 8);
  v37 = v3;
  MEMORY[0x24BDAC7A8](v3, v4);
  v35 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_227D68330(&qword_255928C98);
  MEMORY[0x24BDAC7A8](v6, v7);
  v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_227E5F3C0();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10, v12);
  v14 = (char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = type metadata accessor for PBPropertyValue(0);
  v34 = *(_QWORD *)(v40 - 8);
  result = MEMORY[0x24BDAC7A8](v40, v15);
  v18 = (char *)&v32 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = MEMORY[0x24BEE4B08];
  v39 = a1;
  v33 = *(_QWORD *)(*(_QWORD *)a1 + 16);
  if (v33)
  {
    v19 = 0;
    v20 = MEMORY[0x24BEE4B00];
    v32 = v9;
    while (v19 < *(_QWORD *)(*(_QWORD *)v39 + 16))
    {
      sub_227D5DFFC(*(_QWORD *)v39+ ((*(unsigned __int8 *)(v34 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80))+ *(_QWORD *)(v34 + 72) * v19, (uint64_t)v18, type metadata accessor for PBPropertyValue);
      sub_227D5DF48((uint64_t)&v18[*(int *)(v40 + 28)], (uint64_t)v9, &qword_255928C98);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
      {
        sub_227E5F3B4();
        sub_227D5809C((uint64_t)v9, &qword_255928C98);
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v14, v9, v10);
      }
      v24 = v35;
      sub_227E5F3A8();
      v25 = v11;
      v26 = *(void (**)(char *, uint64_t))(v11 + 8);
      v27 = v10;
      v26(v14, v10);
      v28 = (void *)sub_227E5F234();
      (*(void (**)(char *, uint64_t))(v36 + 8))(v24, v37);
      v29 = objc_msgSend(v38, sel_stringFromDate_, v28);

      sub_227E5FF84();
      v30 = (uint64_t *)&v18[*(int *)(v40 + 32)];
      v31 = v30[1];
      if (v31)
      {
        v41 = *v30;
        v42 = v31;
        swift_bridgeObjectRetain();
        sub_227E6002C();
        swift_bridgeObjectRetain();
        sub_227E6002C();
        swift_bridgeObjectRelease();
      }
      else
      {
        v41 = 124;
        v42 = 0xE100000000000000;
        sub_227E6002C();
      }
      swift_bridgeObjectRelease();
      v21 = v41;
      v22 = v42;
      swift_bridgeObjectRetain();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v41 = v20;
      sub_227E21DA8(v19, v21, v22, isUniquelyReferenced_nonNull_native);
      v20 = v41;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_227E22A9C(&v41, v21, v22);
      swift_bridgeObjectRelease();
      result = sub_227D64BC4((uint64_t)v18, type metadata accessor for PBPropertyValue);
      ++v19;
      v9 = v32;
      v10 = v27;
      v11 = v25;
      if (v33 == v19)
        return v20;
    }
    __break(1u);
  }
  else
  {
    return MEMORY[0x24BEE4B00];
  }
  return result;
}

id SecureEngagementDataHelper.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id SecureEngagementDataHelper.init()()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SecureEngagementDataHelper();
  return objc_msgSendSuper2(&v2, sel_init);
}

id SecureEngagementDataHelper.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SecureEngagementDataHelper();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

_QWORD *sub_227E14644(uint64_t a1)
{
  return sub_227E14750(a1, &qword_255928E58, (uint64_t (*)(uint64_t *, _QWORD *, uint64_t, uint64_t))sub_227E561B8);
}

size_t sub_227E14658(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD *v6;
  size_t result;
  uint64_t v9;
  uint64_t v10;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return MEMORY[0x24BEE4AF8];
  sub_227D68330(&qword_255928E60);
  v3 = *(_QWORD *)(sub_227E5F27C() - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v6 = (_QWORD *)swift_allocObject();
  result = j__malloc_size(v6);
  if (v4)
  {
    if (result - v5 != 0x8000000000000000 || v4 != -1)
    {
      v6[2] = v1;
      v6[3] = 2 * ((uint64_t)(result - v5) / v4);
      swift_bridgeObjectRetain();
      v9 = sub_227E5634C(&v10, (uint64_t)v6 + v5, v1, a1);
      sub_227DDF73C();
      if (v9 == v1)
        return (size_t)v6;
      __break(1u);
      return MEMORY[0x24BEE4AF8];
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

_QWORD *sub_227E14750(uint64_t a1, uint64_t *a2, uint64_t (*a3)(uint64_t *, _QWORD *, uint64_t, uint64_t))
{
  uint64_t v3;
  _QWORD *v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  sub_227D68330(a2);
  v6 = (_QWORD *)swift_allocObject();
  v7 = j__malloc_size(v6);
  v8 = v7 - 32;
  if (v7 < 32)
    v8 = v7 - 17;
  v6[2] = v3;
  v6[3] = 2 * (v8 >> 4);
  v9 = a3(&v11, v6 + 4, v3, a1);
  swift_bridgeObjectRetain();
  sub_227DDF73C();
  if (v9 != v3)
  {
    __break(1u);
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  return v6;
}

uint64_t sub_227E14834(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t result;
  uint64_t v8;

  if ((a1 & 0xC000000000000001) != 0)
  {
    v2 = sub_227E60410();
    if (v2)
      goto LABEL_3;
    return MEMORY[0x24BEE4AF8];
  }
  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
    return MEMORY[0x24BEE4AF8];
LABEL_3:
  if (v2 <= 0)
  {
    v3 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  else
  {
    sub_227D68330(&qword_255929820);
    v3 = (_QWORD *)swift_allocObject();
    v4 = j__malloc_size(v3);
    v5 = v4 - 32;
    if (v4 < 32)
      v5 = v4 - 25;
    v3[2] = v2;
    v3[3] = (2 * (v5 >> 3)) | 1;
  }
  swift_bridgeObjectRetain();
  v6 = sub_227E56898(&v8, v3 + 4, v2, a1);
  result = sub_227DDF73C();
  if (v6 == (_QWORD *)v2)
    return (uint64_t)v3;
  __break(1u);
  return result;
}

uint64_t sub_227E1492C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  int v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  BOOL v39;
  unint64_t v40;
  unint64_t v41;
  char *v42;
  char *v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  BOOL v55;
  unint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  BOOL v65;
  uint64_t v66;
  char v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  BOOL v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  char *v88;
  unint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  char *v94;
  uint64_t v95;
  unint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  unint64_t v101;
  uint64_t *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *__dst;

  v3 = a1[1];
  result = sub_227E60668();
  if (result >= v3)
  {
    if (v3 < 0)
      goto LABEL_152;
    if (v3)
      return sub_227E15014(0, v3, 1, a1);
    return result;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_160;
  v105 = result;
  v102 = a1;
  if (v3 < 2)
  {
    v8 = MEMORY[0x24BEE4AF8];
    __dst = (char *)(MEMORY[0x24BEE4AF8] + 32);
    if (v3 != 1)
    {
      v12 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
      v11 = (char *)MEMORY[0x24BEE4AF8];
LABEL_118:
      v94 = v11;
      v104 = v8;
      if (v12 >= 2)
      {
        v95 = *v102;
        do
        {
          v96 = v12 - 2;
          if (v12 < 2)
            goto LABEL_147;
          if (!v95)
            goto LABEL_159;
          v97 = v94;
          v98 = *(_QWORD *)&v94[16 * v96 + 32];
          v99 = *(_QWORD *)&v94[16 * v12 + 24];
          sub_227E150E0((char *)(v95 + 16 * v98), (char *)(v95 + 16 * *(_QWORD *)&v94[16 * v12 + 16]), v95 + 16 * v99, __dst);
          if (v1)
            break;
          if (v99 < v98)
            goto LABEL_148;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v97 = sub_227E157FC((uint64_t)v97);
          if (v96 >= *((_QWORD *)v97 + 2))
            goto LABEL_149;
          v100 = &v97[16 * v96 + 32];
          *(_QWORD *)v100 = v98;
          *((_QWORD *)v100 + 1) = v99;
          v101 = *((_QWORD *)v97 + 2);
          if (v12 > v101)
            goto LABEL_150;
          memmove(&v97[16 * v12 + 16], &v97[16 * v12 + 32], 16 * (v101 - v12));
          v94 = v97;
          *((_QWORD *)v97 + 2) = v101 - 1;
          v12 = v101 - 1;
        }
        while (v101 > 2);
      }
LABEL_115:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v104 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    v104 = MEMORY[0x24BEE4AF8];
  }
  else
  {
    v6 = v5 >> 1;
    v7 = sub_227E600EC();
    *(_QWORD *)(v7 + 16) = v6;
    v104 = v7;
    __dst = (char *)(v7 + 32);
  }
  v9 = 0;
  v10 = *a1;
  v103 = v10 + 8;
  v11 = (char *)MEMORY[0x24BEE4AF8];
  v106 = v3;
  while (1)
  {
    v13 = v9++;
    if (v9 >= v3)
      goto LABEL_46;
    v14 = (uint64_t *)(v10 + 16 * v9);
    v15 = *v14;
    v16 = v14[1];
    v17 = (_QWORD *)(v10 + 16 * v13);
    if (v15 == *v17 && v16 == v17[1])
    {
      v20 = v13 + 2;
      if (v13 + 2 >= v3)
        goto LABEL_45;
      v19 = 0;
    }
    else
    {
      v19 = sub_227E60698();
      v20 = v13 + 2;
      if (v13 + 2 >= v3)
        goto LABEL_36;
    }
    v21 = (_QWORD *)(v103 + 16 * v20);
    do
    {
      v23 = (_QWORD *)(v10 + 16 * v9);
      if (*(v21 - 1) == *v23 && *v21 == v23[1])
      {
        if ((v19 & 1) != 0)
          goto LABEL_37;
      }
      else if (((v19 ^ sub_227E60698()) & 1) != 0)
      {
        goto LABEL_36;
      }
      v21 += 2;
      v22 = v20 + 1;
      v9 = v20;
      v20 = v22;
    }
    while (v22 < v3);
    v20 = v22;
LABEL_36:
    v9 = v20;
    if ((v19 & 1) != 0)
    {
LABEL_37:
      if (v20 < v13)
        goto LABEL_155;
      if (v13 < v20)
      {
        v25 = 16 * v20;
        v26 = 16 * v13;
        v27 = v20;
        v28 = v13;
        do
        {
          if (v28 != --v27)
          {
            if (!v10)
              goto LABEL_158;
            v29 = v10 + v25;
            v30 = *(_QWORD *)(v10 + v26);
            v31 = *(_QWORD *)(v10 + v26 + 8);
            *(_OWORD *)(v10 + v26) = *(_OWORD *)(v10 + v25 - 16);
            *(_QWORD *)(v29 - 16) = v30;
            *(_QWORD *)(v29 - 8) = v31;
          }
          ++v28;
          v25 -= 16;
          v26 += 16;
        }
        while (v28 < v27);
      }
LABEL_45:
      v9 = v20;
    }
LABEL_46:
    if (v9 < v3)
    {
      if (__OFSUB__(v9, v13))
        goto LABEL_151;
      if (v9 - v13 < v105)
        break;
    }
LABEL_67:
    if (v9 < v13)
      goto LABEL_146;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v11 = sub_227E15378(0, *((_QWORD *)v11 + 2) + 1, 1, v11);
    v41 = *((_QWORD *)v11 + 2);
    v40 = *((_QWORD *)v11 + 3);
    v12 = v41 + 1;
    if (v41 >= v40 >> 1)
      v11 = sub_227E15378((char *)(v40 > 1), v41 + 1, 1, v11);
    *((_QWORD *)v11 + 2) = v12;
    v42 = v11 + 32;
    v43 = &v11[16 * v41 + 32];
    *(_QWORD *)v43 = v13;
    *((_QWORD *)v43 + 1) = v9;
    if (v41)
    {
      v107 = v9;
      while (1)
      {
        v44 = v12 - 1;
        if (v12 >= 4)
        {
          v49 = &v42[16 * v12];
          v50 = *((_QWORD *)v49 - 8);
          v51 = *((_QWORD *)v49 - 7);
          v55 = __OFSUB__(v51, v50);
          v52 = v51 - v50;
          if (v55)
            goto LABEL_135;
          v54 = *((_QWORD *)v49 - 6);
          v53 = *((_QWORD *)v49 - 5);
          v55 = __OFSUB__(v53, v54);
          v47 = v53 - v54;
          v48 = v55;
          if (v55)
            goto LABEL_136;
          v56 = v12 - 2;
          v57 = &v42[16 * v12 - 32];
          v59 = *(_QWORD *)v57;
          v58 = *((_QWORD *)v57 + 1);
          v55 = __OFSUB__(v58, v59);
          v60 = v58 - v59;
          if (v55)
            goto LABEL_138;
          v55 = __OFADD__(v47, v60);
          v61 = v47 + v60;
          if (v55)
            goto LABEL_141;
          if (v61 >= v52)
          {
            v79 = &v42[16 * v44];
            v81 = *(_QWORD *)v79;
            v80 = *((_QWORD *)v79 + 1);
            v55 = __OFSUB__(v80, v81);
            v82 = v80 - v81;
            if (v55)
              goto LABEL_145;
            v72 = v47 < v82;
            goto LABEL_105;
          }
        }
        else
        {
          if (v12 != 3)
          {
            v73 = *((_QWORD *)v11 + 4);
            v74 = *((_QWORD *)v11 + 5);
            v55 = __OFSUB__(v74, v73);
            v66 = v74 - v73;
            v67 = v55;
            goto LABEL_99;
          }
          v46 = *((_QWORD *)v11 + 4);
          v45 = *((_QWORD *)v11 + 5);
          v55 = __OFSUB__(v45, v46);
          v47 = v45 - v46;
          v48 = v55;
        }
        if ((v48 & 1) != 0)
          goto LABEL_137;
        v56 = v12 - 2;
        v62 = &v42[16 * v12 - 32];
        v64 = *(_QWORD *)v62;
        v63 = *((_QWORD *)v62 + 1);
        v65 = __OFSUB__(v63, v64);
        v66 = v63 - v64;
        v67 = v65;
        if (v65)
          goto LABEL_140;
        v68 = &v42[16 * v44];
        v70 = *(_QWORD *)v68;
        v69 = *((_QWORD *)v68 + 1);
        v55 = __OFSUB__(v69, v70);
        v71 = v69 - v70;
        if (v55)
          goto LABEL_143;
        if (__OFADD__(v66, v71))
          goto LABEL_144;
        if (v66 + v71 >= v47)
        {
          v72 = v47 < v71;
LABEL_105:
          if (v72)
            v44 = v56;
          goto LABEL_107;
        }
LABEL_99:
        if ((v67 & 1) != 0)
          goto LABEL_139;
        v75 = &v42[16 * v44];
        v77 = *(_QWORD *)v75;
        v76 = *((_QWORD *)v75 + 1);
        v55 = __OFSUB__(v76, v77);
        v78 = v76 - v77;
        if (v55)
          goto LABEL_142;
        if (v78 < v66)
          goto LABEL_15;
LABEL_107:
        v83 = v44 - 1;
        if (v44 - 1 >= v12)
        {
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
          goto LABEL_154;
        }
        v84 = v10;
        if (!v10)
          goto LABEL_157;
        v85 = v11;
        v86 = &v42[16 * v83];
        v87 = *(_QWORD *)v86;
        v88 = v42;
        v89 = v44;
        v90 = &v42[16 * v44];
        v91 = *((_QWORD *)v90 + 1);
        v92 = v84;
        sub_227E150E0((char *)(v84 + 16 * *(_QWORD *)v86), (char *)(v84 + 16 * *(_QWORD *)v90), v84 + 16 * v91, __dst);
        if (v1)
          goto LABEL_115;
        if (v91 < v87)
          goto LABEL_132;
        if (v89 > *((_QWORD *)v85 + 2))
          goto LABEL_133;
        *(_QWORD *)v86 = v87;
        *(_QWORD *)&v88[16 * v83 + 8] = v91;
        v93 = *((_QWORD *)v85 + 2);
        if (v89 >= v93)
          goto LABEL_134;
        v11 = v85;
        v12 = v93 - 1;
        memmove(v90, v90 + 16, 16 * (v93 - 1 - v89));
        v42 = v88;
        *((_QWORD *)v85 + 2) = v93 - 1;
        v10 = v92;
        v9 = v107;
        if (v93 <= 2)
          goto LABEL_15;
      }
    }
    v12 = 1;
LABEL_15:
    v3 = v106;
    if (v9 >= v106)
    {
      v8 = v104;
      goto LABEL_118;
    }
  }
  if (__OFADD__(v13, v105))
    goto LABEL_153;
  if (v13 + v105 >= v3)
    v32 = v3;
  else
    v32 = v13 + v105;
  if (v32 >= v13)
  {
    if (v9 != v32)
    {
      v33 = (_QWORD *)(v10 + 16 * v9);
      do
      {
        v34 = (uint64_t *)(v10 + 16 * v9);
        v35 = *v34;
        v36 = v34[1];
        v37 = v13;
        v38 = v33;
        do
        {
          v39 = v35 == *(v38 - 2) && v36 == *(v38 - 1);
          if (v39 || (sub_227E60698() & 1) == 0)
            break;
          if (!v10)
            goto LABEL_156;
          v35 = *v38;
          v36 = v38[1];
          *(_OWORD *)v38 = *((_OWORD *)v38 - 1);
          *(v38 - 1) = v36;
          *(v38 - 2) = v35;
          v38 -= 2;
          ++v37;
        }
        while (v9 != v37);
        ++v9;
        v33 += 2;
      }
      while (v9 != v32);
      v9 = v32;
    }
    goto LABEL_67;
  }
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  __break(1u);
LABEL_159:
  __break(1u);
LABEL_160:
  result = sub_227E60554();
  __break(1u);
  return result;
}

uint64_t sub_227E15014(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  BOOL v13;

  if (a3 != a2)
  {
    v4 = a3;
    v6 = result;
    v7 = *a4;
    v8 = *a4 + 16 * a3;
LABEL_5:
    v9 = (uint64_t *)(v7 + 16 * v4);
    result = *v9;
    v10 = v9[1];
    v11 = v6;
    v12 = (uint64_t *)v8;
    while (1)
    {
      v13 = result == *(v12 - 2) && v10 == *(v12 - 1);
      if (v13 || (result = sub_227E60698(), (result & 1) == 0))
      {
LABEL_4:
        ++v4;
        v8 += 16;
        if (v4 == a2)
          return result;
        goto LABEL_5;
      }
      if (!v7)
        break;
      result = *v12;
      v10 = v12[1];
      *(_OWORD *)v12 = *((_OWORD *)v12 - 1);
      *(v12 - 1) = v10;
      *(v12 - 2) = result;
      v12 -= 2;
      if (v4 == ++v11)
        goto LABEL_4;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_227E150E0(char *__src, char *a2, unint64_t a3, char *__dst)
{
  char *v4;
  char *v6;
  char *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  BOOL v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t result;
  char *v25;
  char *v26;
  char *v27;

  v4 = __dst;
  v6 = a2;
  v7 = __src;
  v8 = a2 - __src;
  v9 = a2 - __src + 15;
  if (a2 - __src >= 0)
    v9 = a2 - __src;
  v10 = v9 >> 4;
  v11 = a3 - (_QWORD)a2;
  v12 = a3 - (_QWORD)a2 + 15;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v12 = a3 - (_QWORD)a2;
  v13 = v12 >> 4;
  v27 = __src;
  v26 = __dst;
  if (v10 >= v12 >> 4)
  {
    if (v11 >= -15)
    {
      if (__dst != a2 || &a2[16 * v13] <= __dst)
        memmove(__dst, a2, 16 * v13);
      v17 = &v4[16 * v13];
      v25 = v17;
      v27 = v6;
      if (v7 < v6 && v11 >= 16)
      {
        v18 = (char *)(a3 - 16);
        v19 = v6;
        while (1)
        {
          v20 = v18 + 16;
          v21 = *((_QWORD *)v19 - 2);
          v22 = *((_QWORD *)v19 - 1);
          v19 -= 16;
          v23 = *((_QWORD *)v17 - 2) == v21 && *((_QWORD *)v17 - 1) == v22;
          if (v23 || (sub_227E60698() & 1) == 0)
          {
            v25 = v17 - 16;
            if (v20 < v17 || v18 >= v17 || v20 != v17)
              *(_OWORD *)v18 = *((_OWORD *)v17 - 1);
            v19 = v6;
            v17 -= 16;
            if (v6 <= v7)
              goto LABEL_50;
          }
          else
          {
            if (v20 != v6 || v18 >= v6)
              *(_OWORD *)v18 = *(_OWORD *)v19;
            v27 = v19;
            if (v19 <= v7)
              goto LABEL_50;
          }
          v18 -= 16;
          v6 = v19;
          if (v17 <= v4)
            goto LABEL_50;
        }
      }
      goto LABEL_50;
    }
  }
  else if (v8 >= -15)
  {
    if (__dst != __src || &__src[16 * v10] <= __dst)
      memmove(__dst, __src, 16 * v10);
    v14 = &v4[16 * v10];
    v25 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 16)
    {
      do
      {
        v15 = *(_QWORD *)v6 == *(_QWORD *)v4 && *((_QWORD *)v6 + 1) == *((_QWORD *)v4 + 1);
        if (v15 || (sub_227E60698() & 1) == 0)
        {
          if (v7 != v4)
            *(_OWORD *)v7 = *(_OWORD *)v4;
          v4 += 16;
          v26 = v4;
          v16 = v6;
        }
        else
        {
          v16 = v6 + 16;
          if (v7 < v6 || v7 >= v16 || v7 != v6)
            *(_OWORD *)v7 = *(_OWORD *)v6;
        }
        v7 += 16;
        if (v4 >= v14)
          break;
        v6 = v16;
      }
      while ((unint64_t)v16 < a3);
      v27 = v7;
    }
LABEL_50:
    sub_227E1547C((void **)&v27, (const void **)&v26, &v25);
    return 1;
  }
  result = sub_227E605A8();
  __break(1u);
  return result;
}

char *sub_227E15378(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_227D68330(&qword_255929220);
    v10 = (char *)swift_allocObject();
    v11 = j__malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_227E15470(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  return sub_227E156F0(a1, a2, a3, (uint64_t *)&unk_255928E70);
}

char *sub_227E1547C(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *result;
  uint64_t v7;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  v5 = v4 + 15;
  if (v4 >= 0)
    v5 = *a3 - (_QWORD)v3;
  if (v4 <= -16)
  {
    result = (char *)sub_227E605A8();
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v7 = v5 >> 4;
    if (result != v3 || result >= &v3[16 * v7])
      return (char *)memmove(result, v3, 16 * v7);
  }
  return result;
}

char *sub_227E15524(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *result;
  uint64_t v7;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  v5 = v4 + 7;
  if (v4 >= 0)
    v5 = *a3 - (_QWORD)v3;
  if (v4 <= -8)
  {
    result = (char *)sub_227E605A8();
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v7 = v5 >> 3;
    if (result != v3 || result >= &v3[8 * v7])
      return (char *)memmove(result, v3, 8 * v7);
  }
  return result;
}

uint64_t sub_227E155CC(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  v3 = *a1;
  v4 = *a2;
  v5 = *a3;
  result = sub_227E5F27C();
  v7 = *(_QWORD *)(*(_QWORD *)(result - 8) + 72);
  if (!v7)
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v8 = v5 - v4;
  if (v5 - v4 == 0x8000000000000000 && v7 == -1)
    goto LABEL_14;
  if (v8 / v7 < 0)
  {
LABEL_15:
    result = sub_227E605A8();
    __break(1u);
    return result;
  }
  if (v3 < v4 || v3 >= v4 + v8 / v7 * v7)
    return swift_arrayInitWithTakeFrontToBack();
  if (v3 != v4)
    return swift_arrayInitWithTakeBackToFront();
  return result;
}

uint64_t sub_227E156D8(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  return sub_227E156F0(a1, a2, a3, &qword_255928E40);
}

uint64_t sub_227E156E4(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  return sub_227E156F0(a1, a2, a3, &qword_253F3B018);
}

uint64_t sub_227E156F0(unint64_t *a1, unint64_t *a2, uint64_t *a3, uint64_t *a4)
{
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;

  v4 = *a1;
  v5 = *a2;
  v6 = *a3;
  result = sub_227D68330(a4);
  v8 = *(_QWORD *)(*(_QWORD *)(result - 8) + 72);
  if (!v8)
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v9 = v6 - v5;
  if (v6 - v5 == 0x8000000000000000 && v8 == -1)
    goto LABEL_14;
  if (v9 / v8 < 0)
  {
LABEL_15:
    result = sub_227E605A8();
    __break(1u);
    return result;
  }
  if (v4 < v5 || v4 >= v5 + v9 / v8 * v8)
    return swift_arrayInitWithTakeFrontToBack();
  if (v4 != v5)
    return swift_arrayInitWithTakeBackToFront();
  return result;
}

char *sub_227E157FC(uint64_t a1)
{
  return sub_227E15378(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_227E15810(_QWORD *a1)
{
  return sub_227DECD90(0, a1[2], 0, a1);
}

uint64_t sub_227E15824(uint64_t a1)
{
  return sub_227DECF18(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_227E15838(_QWORD *a1)
{
  return sub_227DED074(0, a1[2], 0, a1);
}

uint64_t sub_227E1584C(_QWORD *a1)
{
  return sub_227DED088(0, a1[2], 0, a1);
}

uint64_t sub_227E15860(_QWORD *a1)
{
  return sub_227DED09C(0, a1[2], 0, a1);
}

uint64_t sub_227E15874(uint64_t a1)
{
  return sub_227DECC28(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

BOOL _s13BookDataStore016SecureEngagementB6HelperC7isEmpty9timeSliceSb10Foundation0B0V_tFZ_0(uint64_t a1, unint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  _BOOL8 v10;
  _BYTE v12[48];
  uint64_t v13;

  v4 = sub_227E5F3FC();
  MEMORY[0x24BDAC7A8](v4, v5);
  v6 = type metadata accessor for PBPropertyTimeSlice(0);
  MEMORY[0x24BDAC7A8](v6, v7);
  v9 = &v12[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = 0;
  memset(&v12[16], 0, 32);
  sub_227DD00E0(a1, a2);
  sub_227E5F3F0();
  sub_227D51624(&qword_2559291E8, type metadata accessor for PBPropertyTimeSlice, (uint64_t)&protocol conformance descriptor for PBPropertyTimeSlice);
  sub_227E5F4B0();
  v10 = *(_QWORD *)(*(_QWORD *)v9 + 16) == 0;
  sub_227D64BC4((uint64_t)v9, type metadata accessor for PBPropertyTimeSlice);
  return v10;
}

uint64_t type metadata accessor for SecureEngagementDataHelper()
{
  return objc_opt_self();
}

uint64_t dispatch thunk of BDSXPCValueContainerBase.value.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of BDSXPCValueContainerBase.init(value:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

unint64_t sub_227E15B78(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t result;
  int64_t i;
  uint64_t *v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  int64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;
  unint64_t v21;
  char v22;
  uint64_t *v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  int64_t v27;
  uint64_t v28;

  if (*(_QWORD *)(a1 + 16))
  {
    sub_227D68330(&qword_2559284A8);
    v2 = (_QWORD *)sub_227E6059C();
  }
  else
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
  }
  v28 = a1 + 64;
  v3 = -1 << *(_BYTE *)(a1 + 32);
  if (-v3 < 64)
    v4 = ~(-1 << -(char)v3);
  else
    v4 = -1;
  v5 = v4 & *(_QWORD *)(a1 + 64);
  v27 = (unint64_t)(63 - v3) >> 6;
  result = swift_bridgeObjectRetain();
  i = 0;
  if (v5)
    goto LABEL_10;
LABEL_11:
  v12 = i + 1;
  if (__OFADD__(i, 1))
    goto LABEL_35;
  if (v12 >= v27)
    goto LABEL_32;
  v13 = *(_QWORD *)(v28 + 8 * v12);
  v14 = i + 1;
  if (!v13)
  {
    v14 = i + 2;
    if (i + 2 >= v27)
      goto LABEL_32;
    v13 = *(_QWORD *)(v28 + 8 * v14);
    if (!v13)
    {
      v14 = i + 3;
      if (i + 3 >= v27)
        goto LABEL_32;
      v13 = *(_QWORD *)(v28 + 8 * v14);
      if (!v13)
      {
        v14 = i + 4;
        if (i + 4 >= v27)
          goto LABEL_32;
        v13 = *(_QWORD *)(v28 + 8 * v14);
        if (!v13)
        {
          v15 = i + 5;
          if (i + 5 < v27)
          {
            v13 = *(_QWORD *)(v28 + 8 * v15);
            if (v13)
            {
              v14 = i + 5;
              goto LABEL_26;
            }
            while (1)
            {
              v14 = v15 + 1;
              if (__OFADD__(v15, 1))
                goto LABEL_36;
              if (v14 >= v27)
                break;
              v13 = *(_QWORD *)(v28 + 8 * v14);
              ++v15;
              if (v13)
                goto LABEL_26;
            }
          }
LABEL_32:
          sub_227DDF73C();
          return (unint64_t)v2;
        }
      }
    }
  }
LABEL_26:
  v5 = (v13 - 1) & v13;
  v11 = __clz(__rbit64(v13)) + (v14 << 6);
  for (i = v14; ; v11 = v10 | (i << 6))
  {
    v16 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v11);
    v18 = *v16;
    v17 = v16[1];
    v19 = *(void **)(*(_QWORD *)(a1 + 56) + 8 * v11);
    swift_bridgeObjectRetain();
    v20 = v19;
    result = sub_227DD01C0(v18, v17);
    v21 = result;
    if ((v22 & 1) != 0)
    {
      v8 = (uint64_t *)(v2[6] + 16 * result);
      swift_bridgeObjectRelease();
      *v8 = v18;
      v8[1] = v17;
      v9 = v2[7];
      result = swift_unknownObjectRelease();
      *(_QWORD *)(v9 + 8 * v21) = v20;
      if (!v5)
        goto LABEL_11;
      goto LABEL_10;
    }
    if (v2[2] >= v2[3])
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v23 = (uint64_t *)(v2[6] + 16 * result);
    *v23 = v18;
    v23[1] = v17;
    *(_QWORD *)(v2[7] + 8 * result) = v20;
    v24 = v2[2];
    v25 = __OFADD__(v24, 1);
    v26 = v24 + 1;
    if (v25)
      goto LABEL_34;
    v2[2] = v26;
    if (!v5)
      goto LABEL_11;
LABEL_10:
    v10 = __clz(__rbit64(v5));
    v5 &= v5 - 1;
  }
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

unint64_t sub_227E15E18(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t result;
  uint64_t *v7;
  _OWORD *v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  int64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  uint64_t *v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  int64_t v26;
  uint64_t v27;
  int64_t i;
  __int128 v29;
  __int128 v30;
  _OWORD v31[2];
  _OWORD v32[2];
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  if (*(_QWORD *)(a1 + 16))
  {
    sub_227D68330(&qword_255929370);
    v2 = (_QWORD *)sub_227E6059C();
  }
  else
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
  }
  v27 = a1 + 64;
  v3 = -1 << *(_BYTE *)(a1 + 32);
  if (-v3 < 64)
    v4 = ~(-1 << -(char)v3);
  else
    v4 = -1;
  v5 = v4 & *(_QWORD *)(a1 + 64);
  v26 = (unint64_t)(63 - v3) >> 6;
  result = swift_bridgeObjectRetain();
  i = 0;
  if (v5)
    goto LABEL_10;
LABEL_11:
  v11 = i + 1;
  if (__OFADD__(i, 1))
    goto LABEL_35;
  if (v11 >= v26)
    goto LABEL_32;
  v12 = *(_QWORD *)(v27 + 8 * v11);
  v13 = i + 1;
  if (!v12)
  {
    v13 = i + 2;
    if (i + 2 >= v26)
      goto LABEL_32;
    v12 = *(_QWORD *)(v27 + 8 * v13);
    if (!v12)
    {
      v13 = i + 3;
      if (i + 3 >= v26)
        goto LABEL_32;
      v12 = *(_QWORD *)(v27 + 8 * v13);
      if (!v12)
      {
        v13 = i + 4;
        if (i + 4 >= v26)
          goto LABEL_32;
        v12 = *(_QWORD *)(v27 + 8 * v13);
        if (!v12)
        {
          v14 = i + 5;
          if (i + 5 < v26)
          {
            v12 = *(_QWORD *)(v27 + 8 * v14);
            if (v12)
            {
              v13 = i + 5;
              goto LABEL_26;
            }
            while (1)
            {
              v13 = v14 + 1;
              if (__OFADD__(v14, 1))
                goto LABEL_36;
              if (v13 >= v26)
                break;
              v12 = *(_QWORD *)(v27 + 8 * v13);
              ++v14;
              if (v12)
                goto LABEL_26;
            }
          }
LABEL_32:
          sub_227DDF73C();
          return (unint64_t)v2;
        }
      }
    }
  }
LABEL_26:
  v5 = (v12 - 1) & v12;
  v10 = __clz(__rbit64(v12)) + (v13 << 6);
  for (i = v13; ; v10 = v9 | (i << 6))
  {
    v15 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v10);
    v17 = *v15;
    v16 = v15[1];
    sub_227DD3554(*(_QWORD *)(a1 + 56) + 40 * v10, (uint64_t)&v35);
    v33 = v17;
    v34 = v16;
    swift_bridgeObjectRetain();
    swift_dynamicCast();
    v19 = v17;
    v18 = v16;
    sub_227E1734C(&v29, v31);
    sub_227E1734C(v31, v32);
    sub_227E1734C(v32, &v30);
    result = sub_227DD01C0(v19, v16);
    v20 = result;
    if ((v21 & 1) != 0)
    {
      v7 = (uint64_t *)(v2[6] + 16 * result);
      swift_bridgeObjectRelease();
      *v7 = v19;
      v7[1] = v18;
      v8 = (_OWORD *)(v2[7] + 32 * v20);
      sub_227D58120((uint64_t)v8);
      result = (unint64_t)sub_227E1734C(&v30, v8);
      if (!v5)
        goto LABEL_11;
      goto LABEL_10;
    }
    if (v2[2] >= v2[3])
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v22 = (uint64_t *)(v2[6] + 16 * result);
    *v22 = v19;
    v22[1] = v18;
    result = (unint64_t)sub_227E1734C(&v30, (_OWORD *)(v2[7] + 32 * result));
    v23 = v2[2];
    v24 = __OFADD__(v23, 1);
    v25 = v23 + 1;
    if (v24)
      goto LABEL_34;
    v2[2] = v25;
    if (!v5)
      goto LABEL_11;
LABEL_10:
    v9 = __clz(__rbit64(v5));
    v5 &= v5 - 1;
  }
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_227E16164(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t result;
  int64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  int64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  int64_t v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  _OWORD v32[2];
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  _OWORD v36[2];
  _OWORD v37[3];
  _OWORD v38[2];
  __int128 v39;
  _OWORD v40[2];

  if (*(_QWORD *)(a1 + 16))
  {
    sub_227D68330((uint64_t *)&unk_255929380);
    v2 = sub_227E6059C();
  }
  else
  {
    v2 = MEMORY[0x24BEE4B00];
  }
  v28 = a1 + 64;
  v3 = -1 << *(_BYTE *)(a1 + 32);
  if (-v3 < 64)
    v4 = ~(-1 << -(char)v3);
  else
    v4 = -1;
  v5 = v4 & *(_QWORD *)(a1 + 64);
  v27 = (unint64_t)(63 - v3) >> 6;
  v6 = v2 + 64;
  swift_bridgeObjectRetain();
  result = swift_retain();
  v8 = 0;
  while (1)
  {
    if (v5)
    {
      v11 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      v12 = v11 | (v8 << 6);
      goto LABEL_28;
    }
    v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v13 >= v27)
      goto LABEL_37;
    v14 = *(_QWORD *)(v28 + 8 * v13);
    v15 = v8 + 1;
    if (!v14)
    {
      v15 = v8 + 2;
      if (v8 + 2 >= v27)
        goto LABEL_37;
      v14 = *(_QWORD *)(v28 + 8 * v15);
      if (!v14)
      {
        v15 = v8 + 3;
        if (v8 + 3 >= v27)
          goto LABEL_37;
        v14 = *(_QWORD *)(v28 + 8 * v15);
        if (!v14)
        {
          v15 = v8 + 4;
          if (v8 + 4 >= v27)
            goto LABEL_37;
          v14 = *(_QWORD *)(v28 + 8 * v15);
          if (!v14)
            break;
        }
      }
    }
LABEL_27:
    v5 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v15 << 6);
    v8 = v15;
LABEL_28:
    v17 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v12);
    v19 = *v17;
    v18 = v17[1];
    sub_227D635B0(*(_QWORD *)(a1 + 56) + 32 * v12, (uint64_t)v40);
    *(_QWORD *)&v39 = v19;
    *((_QWORD *)&v39 + 1) = v18;
    v37[2] = v39;
    v38[0] = v40[0];
    v38[1] = v40[1];
    *(_QWORD *)&v37[0] = v19;
    *((_QWORD *)&v37[0] + 1) = v18;
    swift_bridgeObjectRetain();
    swift_dynamicCast();
    sub_227E1734C(v38, v32);
    v33 = v29;
    v34 = v30;
    v35 = v31;
    sub_227E1734C(v32, v36);
    v29 = v33;
    v30 = v34;
    v31 = v35;
    sub_227E1734C(v36, v37);
    sub_227E1734C(v37, &v33);
    result = sub_227E60440();
    v20 = -1 << *(_BYTE *)(v2 + 32);
    v21 = result & ~v20;
    v22 = v21 >> 6;
    if (((-1 << v21) & ~*(_QWORD *)(v6 + 8 * (v21 >> 6))) != 0)
    {
      v9 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v6 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v23 = 0;
      v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v25 = v22 == v24;
        if (v22 == v24)
          v22 = 0;
        v23 |= v25;
        v26 = *(_QWORD *)(v6 + 8 * v22);
      }
      while (v26 == -1);
      v9 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(_QWORD *)(v6 + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v9;
    v10 = *(_QWORD *)(v2 + 48) + 40 * v9;
    *(_OWORD *)v10 = v29;
    *(_OWORD *)(v10 + 16) = v30;
    *(_QWORD *)(v10 + 32) = v31;
    result = (uint64_t)sub_227E1734C(&v33, (_OWORD *)(*(_QWORD *)(v2 + 56) + 32 * v9));
    ++*(_QWORD *)(v2 + 16);
  }
  v16 = v8 + 5;
  if (v8 + 5 >= v27)
  {
LABEL_37:
    swift_release();
    sub_227DDF73C();
    return v2;
  }
  v14 = *(_QWORD *)(v28 + 8 * v16);
  if (v14)
  {
    v15 = v8 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    v15 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v15 >= v27)
      goto LABEL_37;
    v14 = *(_QWORD *)(v28 + 8 * v15);
    ++v16;
    if (v14)
      goto LABEL_27;
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_227E16528()
{
  uint64_t v0;

  v0 = sub_227E5F588();
  sub_227DDF6FC(v0, qword_25592FEB0);
  sub_227DDF6E4(v0, (uint64_t)qword_25592FEB0);
  type metadata accessor for CloudSecureManagerProxy();
  sub_227D68330(&qword_255929378);
  sub_227E5FFC0();
  return sub_227E5F57C();
}

id sub_227E165BC(char a1)
{
  uint64_t v1;

  return objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC13BookDataStore23CloudSecureManagerProxy_serviceProxy), sel_setEnableSecureCloudSync_, a1 & 1);
}

void sub_227E165F4(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  id v9;
  uint64_t v10;

  sub_227E16164(a1);
  v1 = (void *)sub_227E5FED0();
  swift_bridgeObjectRelease();
  v9 = objc_msgSend((id)objc_opt_self(), sel_notificationFromRemoteNotificationDictionary_, v1);

  if (v9)
  {
    sub_227E168A4(v9);

  }
  else
  {
    if (qword_2559281B8 != -1)
      swift_once();
    v2 = sub_227E5F588();
    sub_227DDF6E4(v2, (uint64_t)qword_25592FEB0);
    swift_bridgeObjectRetain_n();
    v3 = sub_227E5F570();
    v4 = sub_227E60230();
    if (os_log_type_enabled(v3, v4))
    {
      v5 = (uint8_t *)swift_slowAlloc();
      v6 = swift_slowAlloc();
      v10 = v6;
      *(_DWORD *)v5 = 136315138;
      v7 = sub_227E5FEE8();
      sub_227D634E0(v7, v8, &v10);
      sub_227E603B0();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_227D4F000, v3, v4, "CloudSecureManagerService cannot handle notification with userInfo %s", v5, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x22E2AA8AC](v6, -1, -1);
      MEMORY[0x22E2AA8AC](v5, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
  }
}

void sub_227E168A4(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  _QWORD *v10;
  id v11;
  id v12;

  v2 = v1;
  sub_227E60254();
  if (v4)
  {
    v5 = *(void **)(v2 + OBJC_IVAR____TtC13BookDataStore23CloudSecureManagerProxy_serviceProxy);
    v12 = (id)sub_227E5FF78();
    swift_bridgeObjectRelease();
    objc_msgSend(v5, sel_signalFetchChangesTransaction_, v12);
  }
  else
  {
    if (qword_2559281B8 != -1)
      swift_once();
    v6 = sub_227E5F588();
    sub_227DDF6E4(v6, (uint64_t)qword_25592FEB0);
    v12 = a1;
    v7 = sub_227E5F570();
    v8 = sub_227E60230();
    if (os_log_type_enabled(v7, v8))
    {
      v9 = (uint8_t *)swift_slowAlloc();
      v10 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v9 = 138412290;
      v11 = v12;
      sub_227E603B0();
      *v10 = v12;

      _os_log_impl(&dword_227D4F000, v7, v8, "CloudSecureManagerService cannot handle notification %@ with no subscriptionID", v9, 0xCu);
      sub_227D68330(&qword_255929230);
      swift_arrayDestroy();
      MEMORY[0x22E2AA8AC](v10, -1, -1);
      MEMORY[0x22E2AA8AC](v9, -1, -1);

      return;
    }

  }
}

uint64_t sub_227E16AF0()
{
  return sub_227E16B64();
}

uint64_t sub_227E16B08(uint64_t a1)
{
  return sub_227E16C20(a1, &OBJC_IVAR____TtC13BookDataStore23CloudSecureManagerProxy_engagementManager);
}

uint64_t (*sub_227E16B14())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_227E16B58()
{
  return sub_227E16B64();
}

uint64_t sub_227E16B64()
{
  swift_beginAccess();
  return swift_unknownObjectRetain();
}

uint64_t sub_227E16BB4(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  _QWORD *v5;

  v5 = (_QWORD *)(a1 + *a4);
  swift_beginAccess();
  *v5 = a3;
  swift_unknownObjectRetain();
  return swift_unknownObjectRelease();
}

uint64_t sub_227E16C14(uint64_t a1)
{
  return sub_227E16C20(a1, &OBJC_IVAR____TtC13BookDataStore23CloudSecureManagerProxy_userDataManager);
}

uint64_t sub_227E16C20(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)(v2 + *a2);
  swift_beginAccess();
  *v4 = a1;
  return swift_unknownObjectRelease();
}

uint64_t sub_227E16C6C(uint64_t *a1, _QWORD *a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v5;
  _QWORD *v6;

  v5 = *a1;
  v6 = (_QWORD *)(*a2 + *a5);
  swift_beginAccess();
  *v6 = v5;
  swift_unknownObjectRetain();
  return swift_unknownObjectRelease();
}

uint64_t (*sub_227E16CD0())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t static CloudSecureManagerProxy.shared.getter()
{
  if (qword_253F3A720 != -1)
    swift_once();
  swift_beginAccess();
  return swift_unknownObjectRetain();
}

uint64_t static CloudSecureManagerProxy.shared.setter(uint64_t a1)
{
  if (qword_253F3A720 != -1)
    swift_once();
  swift_beginAccess();
  qword_253F3A710 = a1;
  return swift_unknownObjectRelease();
}

uint64_t (*static CloudSecureManagerProxy.shared.modify())()
{
  if (qword_253F3A720 != -1)
    swift_once();
  swift_beginAccess();
  return j_j__swift_endAccess;
}

id CloudSecureManagerProxy.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CloudSecureManagerProxy();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void CloudSecureManagerProxy.dissociateCloudDataFromSync(completion:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *v3;
  void *v4;
  _QWORD v5[6];

  v3 = *(void **)(v2 + OBJC_IVAR____TtC13BookDataStore23CloudSecureManagerProxy_serviceProxy);
  if (a1)
  {
    v5[4] = a1;
    v5[5] = a2;
    v5[0] = MEMORY[0x24BDAC760];
    v5[1] = 1107296256;
    v5[2] = sub_227E17004;
    v5[3] = &unk_24F08FDD8;
    v4 = _Block_copy(v5);
    swift_retain();
    swift_release();
  }
  else
  {
    v4 = 0;
  }
  objc_msgSend(v3, sel_dissociateCloudDataFromSyncWithCompletion_, v4);
  _Block_release(v4);
}

void sub_227E17004(uint64_t a1, uint64_t a2, void *a3)
{
  void (*v5)(uint64_t, void *);
  id v6;

  v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  swift_retain();
  v6 = a3;
  v5(a2, a3);
  swift_release();

}

uint64_t sub_227E17178@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_227E171AC(a1, &OBJC_IVAR____TtC13BookDataStore23CloudSecureManagerProxy_engagementManager, a2);
}

uint64_t sub_227E17184(uint64_t *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_227E16C6C(a1, a2, a3, a4, &OBJC_IVAR____TtC13BookDataStore23CloudSecureManagerProxy_engagementManager);
}

uint64_t sub_227E171A0@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_227E171AC(a1, &OBJC_IVAR____TtC13BookDataStore23CloudSecureManagerProxy_userDataManager, a2);
}

uint64_t sub_227E171AC@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X3>, _QWORD *a3@<X8>)
{
  _QWORD *v4;

  v4 = (_QWORD *)(*a1 + *a2);
  swift_beginAccess();
  *a3 = *v4;
  return swift_unknownObjectRetain();
}

uint64_t sub_227E171FC(uint64_t *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_227E16C6C(a1, a2, a3, a4, &OBJC_IVAR____TtC13BookDataStore23CloudSecureManagerProxy_userDataManager);
}

uint64_t method lookup function for CloudSecureManagerProxy()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of CloudSecureManagerProxy.setEnableCloudSync(_:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x68))();
}

uint64_t dispatch thunk of CloudSecureManagerProxy.handle(_:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x70))();
}

uint64_t dispatch thunk of CloudSecureManagerProxy.handleRemoteCKNotification(_:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x78))();
}

uint64_t dispatch thunk of CloudSecureManagerProxy.engagementManager.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x80))();
}

uint64_t dispatch thunk of CloudSecureManagerProxy.engagementManager.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x88))();
}

uint64_t dispatch thunk of CloudSecureManagerProxy.engagementManager.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x90))();
}

uint64_t dispatch thunk of CloudSecureManagerProxy.userDataManager.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x98))();
}

uint64_t dispatch thunk of CloudSecureManagerProxy.userDataManager.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of CloudSecureManagerProxy.userDataManager.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xA8))();
}

uint64_t sub_227E17320()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

void sub_227E17344(char a1, uint64_t a2)
{
  uint64_t v2;

  sub_227E4387C(a1, a2, *(_QWORD *)(v2 + 16));
}

_OWORD *sub_227E1734C(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;

  v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t sub_227E17364()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  id v7;
  uint64_t v9;

  v0 = sub_227E5F1B0();
  v1 = *(_QWORD *)(v0 - 8);
  v3 = MEMORY[0x24BDAC7A8](v0, v2);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_227DDF6FC(v3, qword_255929390);
  sub_227DDF6E4(v0, (uint64_t)qword_255929390);
  v6 = objc_msgSend((id)objc_opt_self(), sel_books);
  v7 = objc_msgSend(v6, sel_containerURL);

  sub_227E5F198();
  sub_227E5F180();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v5, v0);
}

uint64_t sub_227E17474()
{
  uint64_t v0;

  v0 = sub_227E5F1B0();
  sub_227DDF6FC(v0, qword_2559293A8);
  sub_227DDF6E4(v0, (uint64_t)qword_2559293A8);
  if (qword_2559281C8 != -1)
    swift_once();
  sub_227DDF6E4(v0, (uint64_t)qword_255929390);
  return sub_227E5F18C();
}

uint64_t CRDTModelSyncMapper.__allocating_init()()
{
  uint64_t v0;

  v0 = swift_allocObject();
  CRDTModelSyncMapper.init()();
  return v0;
}

uint64_t CRDTModelSyncMapper.init()()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  uint64_t v3;
  void *v4;
  unsigned int v5;
  id v6;
  void *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v20[2];

  v1 = v0;
  v20[1] = *(id *)MEMORY[0x24BDAC8D0];
  v2 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  if (qword_2559281D0 != -1)
    swift_once();
  v3 = sub_227E5F1B0();
  sub_227DDF6E4(v3, (uint64_t)qword_2559293A8);
  v4 = (void *)sub_227E5F174();
  v20[0] = 0;
  v5 = objc_msgSend(v2, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v4, 1, 0, v20);

  v6 = v20[0];
  if (!v5)
  {
    v7 = v6;
    v8 = (void *)sub_227E5F144();

    swift_willThrow();
    sub_227E60230();
    if (qword_253F39F30 != -1)
      swift_once();
    v9 = (void *)qword_253F39F28;
    sub_227D68330(&qword_253F3B090);
    v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_227E6F040;
    v11 = v9;
    v12 = sub_227E5F150();
    v14 = v13;
    v15 = MEMORY[0x24BEE0D00];
    *(_QWORD *)(v10 + 56) = MEMORY[0x24BEE0D00];
    v16 = sub_227D57A70();
    *(_QWORD *)(v10 + 64) = v16;
    *(_QWORD *)(v10 + 32) = v12;
    *(_QWORD *)(v10 + 40) = v14;
    swift_getErrorValue();
    v17 = sub_227E606D4();
    *(_QWORD *)(v10 + 96) = v15;
    *(_QWORD *)(v10 + 104) = v16;
    *(_QWORD *)(v10 + 72) = v17;
    *(_QWORD *)(v10 + 80) = v18;
    sub_227E5F564();

    swift_bridgeObjectRelease();
  }
  return v1;
}

uint64_t sub_227E17770@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t ObjectType;
  unint64_t v10;
  unint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v15;

  v4 = sub_227E5FFB4();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v6);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t))(a1 + 8))(ObjectType, a1);
  sub_227E5FFA8();
  sub_227E5FF90();
  v11 = v10;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  if (v11 >> 60 != 15)
    __asm { BR              X10 }
  sub_227E60230();
  if (qword_253F39F30 != -1)
    swift_once();
  v12 = (id)qword_253F39F28;
  sub_227E5F564();

  v13 = sub_227E5F1B0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(a2, 1, 1, v13);
}

id sub_227E17A28(uint64_t a1, uint64_t a2, void *a3, uint64_t (*a4)(id))
{
  id v5;
  void *v6;

  v5 = a3;
  swift_retain();
  v6 = (void *)a4(v5);

  swift_release();
  return v6;
}

uint64_t CRDTModelSyncMapper.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t CRDTModelSyncMapper.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

char *_s13BookDataStore19CRDTModelSyncMapperC05cloudB04fromSo014BCMutableCloudB0CSgSo8CKRecordC_tF_0(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  id v28;
  void *v29;
  void (*v30)(char *, char *, uint64_t);
  id v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  char *v37;
  id v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;

  v53 = sub_227E5F27C();
  v2 = *(_QWORD *)(v53 - 8);
  MEMORY[0x24BDAC7A8](v53, v3);
  v5 = (char *)&v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_227D68330(&qword_253F391D0);
  MEMORY[0x24BDAC7A8](v6, v7);
  v9 = (char *)&v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_227D68330(&qword_253F391A0);
  MEMORY[0x24BDAC7A8](v10, v11);
  v13 = (char *)&v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_227E5F1B0();
  v15 = *(_QWORD *)(v14 - 8);
  v17 = MEMORY[0x24BDAC7A8](v14, v16);
  v19 = (char *)&v48 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17, v20);
  v22 = (char *)&v48 - v21;
  v23 = sub_227E60320();
  if (!v23)
    goto LABEL_12;
  v56 = v23;
  sub_227D68330(qword_2559294D0);
  if ((swift_dynamicCast() & 1) == 0)
    goto LABEL_12;
  v24 = v55;
  v52 = v54;
  v25 = sub_227E60320();
  if (!v25)
    goto LABEL_9;
  v49 = v2;
  v26 = v25;
  objc_opt_self();
  v27 = (void *)swift_dynamicCastObjCClass();
  if (!v27)
  {
    swift_unknownObjectRelease();
LABEL_9:
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  v50 = v26;
  v51 = v24;
  v28 = objc_msgSend(v27, sel_fileURL);
  if (v28)
  {
    v29 = v28;
    sub_227E5F198();

    v30 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
    v30(v13, v19, v14);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v13, 0, 1, v14);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) != 1)
    {
      v30(v22, v13, v14);
      v33 = sub_227E5F1BC();
      v35 = v34;
      v36 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for CRDTModelSync()), sel_init);
      objc_msgSend(v36, sel_setSystemFields_, a1);
      v37 = (char *)v36;
      v38 = objc_msgSend(a1, sel_modificationDate);
      v39 = v38;
      if (v38)
      {
        v48 = v35;
        sub_227E5F264();

        v40 = v49;
        v41 = v53;
        (*(void (**)(char *, char *, uint64_t))(v49 + 32))(v9, v5, v53);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v9, 0, 1, v41);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v9, 1, v41) == 1)
        {
          v39 = 0;
        }
        else
        {
          v39 = (void *)sub_227E5F234();
          (*(void (**)(char *, uint64_t))(v40 + 8))(v9, v41);
        }
        v42 = v52;
        v35 = v48;
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v49 + 56))(v9, 1, 1, v53);
        v42 = v52;
      }
      objc_msgSend(v37, sel_setModificationDate_, v39);

      swift_unknownObjectRelease();
      (*(void (**)(char *, uint64_t))(v15 + 8))(v22, v14);
      v43 = &v37[OBJC_IVAR____TtC13BookDataStore13CRDTModelSync_type];
      v44 = v51;
      *(_QWORD *)v43 = v42;
      *((_QWORD *)v43 + 1) = v44;
      swift_bridgeObjectRelease();
      v45 = (uint64_t *)&v37[OBJC_IVAR____TtC13BookDataStore13CRDTModelSync_protoData];
      v46 = *(_QWORD *)&v37[OBJC_IVAR____TtC13BookDataStore13CRDTModelSync_protoData];
      v47 = *(_QWORD *)&v37[OBJC_IVAR____TtC13BookDataStore13CRDTModelSync_protoData + 8];
      *v45 = v33;
      v45[1] = v35;
      sub_227DD7918(v46, v47);
      return v37;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56))(v13, 1, 1, v14);
  }
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  sub_227E18478((uint64_t)v13);
LABEL_12:
  sub_227E60230();
  if (qword_253F39F30 != -1)
    swift_once();
  v31 = (id)qword_253F39F28;
  sub_227E5F564();

  return 0;
}

id _s13BookDataStore19CRDTModelSyncMapperC6record4fromSo8CKRecordCSgSo014BCMutableCloudB0C_tF_0(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t ObjectType;
  id v16;
  void *v17;
  id v18;
  char *v19;
  id v20;
  id v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  id v29;
  void *v30;
  id v31;
  id v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v2 = sub_227D68330(&qword_253F391A0);
  MEMORY[0x24BDAC7A8](v2, v3);
  v5 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_227E5F1B0();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6, v8);
  v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = objc_msgSend(a1, sel_systemFields);
  if (v11)
  {
    swift_getObjectType();
    v12 = swift_conformsToProtocol2();
    if (v12)
      v13 = v12;
    else
      v13 = 0;
    if (v12)
      v14 = a1;
    else
      v14 = 0;
    if (v14)
    {
      ObjectType = swift_getObjectType();
      v37 = a1;
      v16 = objc_msgSend(v14, sel_identifier);
      if (v16)
      {
        v17 = v16;
        v18 = objc_msgSend(v11, sel_encryptedValuesByKey);
        v35 = v6;
        v36 = v7;
        v19 = v10;
        v20 = v18;
        sub_227E5FF84();
        v21 = v17;
        v22 = (void *)sub_227E5FF78();
        swift_bridgeObjectRelease();
        objc_msgSend(v20, sel_setObject_forKeyedSubscript_, v21, v22);
        v10 = v19;
        v6 = v35;
        v7 = v36;
        swift_unknownObjectRelease();

      }
      v23 = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 8))(ObjectType, v13);
      v40 = MEMORY[0x24BEE0D00];
      v41 = MEMORY[0x24BDB8BD8];
      v38 = v23;
      v39 = v24;
      sub_227E1843C();
      sub_227E602FC();
      type metadata accessor for CRDTModelSyncMapper();
      sub_227E17770(v13, (uint64_t)v5);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
      {

        sub_227E18478((uint64_t)v5);
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v10, v5, v6);
        v25 = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 16))(ObjectType, v13);
        if (v26 >> 60 == 15)
        {
          (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);

        }
        else
        {
          v27 = v25;
          v28 = v26;
          sub_227E5F1EC();
          v29 = objc_allocWithZone(MEMORY[0x24BDB9010]);
          v30 = (void *)sub_227E5F174();
          v31 = objc_msgSend(v29, sel_initWithFileURL_, v30);

          v32 = v31;
          sub_227E6032C();
          sub_227DD7918(v27, v28);

          (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
        }
      }
    }
    else
    {

      return 0;
    }
  }
  return v11;
}

uint64_t type metadata accessor for CRDTModelSyncMapper()
{
  return objc_opt_self();
}

uint64_t method lookup function for CRDTModelSyncMapper()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of CRDTModelSyncMapper.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 80))();
}

unint64_t sub_227E1843C()
{
  unint64_t result;

  result = qword_255929460;
  if (!qword_255929460)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_255929460);
  }
  return result;
}

uint64_t sub_227E18478(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_227D68330(&qword_253F391A0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_227E184B8(uint64_t a1, void *a2)
{
  uint64_t *v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v10;
  _BYTE v11[24];
  uint64_t v12;

  if (*(_QWORD *)(a1 + 24))
  {
    sub_227DD3274((__int128 *)a1, (uint64_t)v11);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v10 = *v2;
    *v2 = 0x8000000000000000;
    v5 = sub_227D695C8((uint64_t)v11, v12);
    MEMORY[0x24BDAC7A8](v5, v5);
    v7 = (uint64_t *)&v11[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
    (*(void (**)(uint64_t *))(v8 + 16))(v7);
    sub_227E24BC0(*v7, a2, isUniquelyReferenced_nonNull_native, &v10);
    sub_227D58120((uint64_t)v11);
    *v2 = v10;

    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_227D5809C(a1, (uint64_t *)&unk_255929780);
    sub_227E557A0((uint64_t)a2, (uint64_t)v11);

    return sub_227D5809C((uint64_t)v11, (uint64_t *)&unk_255929780);
  }
}

void sub_227E185D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  uint64_t v28;
  unint64_t v29;
  void (*v30)(char *, uint64_t);
  os_log_type_t v31;
  uint8_t *v32;
  uint64_t v33;
  _QWORD v34[2];
  uint8_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v0 = sub_227D68330(&qword_253F391A0);
  MEMORY[0x24BDAC7A8](v0, v1);
  v3 = (char *)v34 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_227E5F1B0();
  v5 = *(_QWORD *)(v4 - 8);
  v7 = MEMORY[0x24BDAC7A8](v4, v6);
  v9 = (char *)v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v7, v10);
  v13 = (char *)v34 - v12;
  MEMORY[0x24BDAC7A8](v11, v14);
  v16 = (char *)v34 - v15;
  type metadata accessor for BDSSyncEngineMetadataStore();
  sub_227DE2AC8((uint64_t)v3);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {
    sub_227D5809C((uint64_t)v3, &qword_253F391A0);
    if (qword_255928178 != -1)
      swift_once();
    v17 = sub_227E5F588();
    sub_227DDF6E4(v17, (uint64_t)qword_255928AA0);
    v18 = sub_227E5F570();
    v19 = sub_227E60230();
    if (os_log_type_enabled(v18, v19))
    {
      v20 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v20 = 0;
      _os_log_impl(&dword_227D4F000, v18, v19, "Could not save metadata. No BaseURL", v20, 2u);
      MEMORY[0x22E2AA8AC](v20, -1, -1);
    }

  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v16, v3, v4);
    sub_227E5F18C();
    sub_227E5F018();
    swift_allocObject();
    sub_227E5F00C();
    type metadata accessor for BDSSyncEngineStateMetadata();
    sub_227D51624((unint64_t *)&unk_255929808, (uint64_t (*)(uint64_t))type metadata accessor for BDSSyncEngineStateMetadata, (uint64_t)&unk_227E6FA18);
    v21 = sub_227E5F000();
    v23 = v22;
    swift_release();
    sub_227E5F1EC();
    v37 = v21;
    if (qword_255928178 != -1)
      swift_once();
    v24 = sub_227E5F588();
    sub_227DDF6E4(v24, (uint64_t)qword_255928AA0);
    (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v9, v13, v4);
    v25 = sub_227E5F570();
    v26 = sub_227E60248();
    if (os_log_type_enabled(v25, v26))
    {
      v27 = (uint8_t *)swift_slowAlloc();
      v36 = swift_slowAlloc();
      v39 = v36;
      v35 = v27;
      *(_DWORD *)v27 = 136315138;
      v34[1] = v27 + 4;
      sub_227D51624((unint64_t *)&qword_255928A90, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB28]);
      v28 = sub_227E60674();
      v38 = sub_227D634E0(v28, v29, &v39);
      sub_227E603B0();
      swift_bridgeObjectRelease();
      v30 = *(void (**)(char *, uint64_t))(v5 + 8);
      v30(v9, v4);
      v31 = v26;
      v32 = v35;
      _os_log_impl(&dword_227D4F000, v25, v31, "Saved sync engine metadata at: %s", v35, 0xCu);
      v33 = v36;
      swift_arrayDestroy();
      MEMORY[0x22E2AA8AC](v33, -1, -1);
      MEMORY[0x22E2AA8AC](v32, -1, -1);
      sub_227DD1FD4(v37, v23);

    }
    else
    {
      sub_227DD1FD4(v37, v23);

      v30 = *(void (**)(char *, uint64_t))(v5 + 8);
      v30(v9, v4);
    }
    v30(v13, v4);
    v30(v16, v4);
  }
}

uint64_t sub_227E18CB4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  BOOL v25;
  uint64_t v26;
  uint8_t *v27;
  uint64_t v28;
  id v29;
  void *v30;
  unsigned __int8 v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  NSObject *v36;
  os_log_type_t v37;
  uint8_t *v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  void (*v42)(char *, uint64_t);
  uint8_t *v43;
  void (*v44)(char *, uint64_t);
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  void (*v48)(char *, uint64_t);
  _QWORD v50[3];
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;

  v54 = a1;
  v1 = sub_227D68330(&qword_253F391A0);
  MEMORY[0x24BDAC7A8](v1, v2);
  v4 = (char *)v50 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_227E5F1B0();
  v6 = *(_QWORD *)(v5 - 8);
  v8 = MEMORY[0x24BDAC7A8](v5, v7);
  v10 = MEMORY[0x24BDAC7A8](v8, v9);
  v12 = (char *)v50 - v11;
  v14 = MEMORY[0x24BDAC7A8](v10, v13);
  v16 = (char *)v50 - v15;
  MEMORY[0x24BDAC7A8](v14, v17);
  v19 = (char *)v50 - v18;
  v53 = type metadata accessor for BDSSyncEngineStateMetadata();
  type metadata accessor for BDSSyncEngineMetadataStore();
  sub_227DE2AC8((uint64_t)v4);
  v20 = v6;
  v21 = v5;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v4, 1, v5) == 1)
  {
    sub_227D5809C((uint64_t)v4, &qword_253F391A0);
    if (qword_255928178 != -1)
      swift_once();
    v22 = sub_227E5F588();
    sub_227DDF6E4(v22, (uint64_t)qword_255928AA0);
    v23 = sub_227E5F570();
    v24 = sub_227E60230();
    v25 = os_log_type_enabled(v23, v24);
    v26 = v54;
    if (v25)
    {
      v27 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v27 = 0;
      _os_log_impl(&dword_227D4F000, v23, v24, "Could not get metadata. No BaseURL", v27, 2u);
      MEMORY[0x22E2AA8AC](v27, -1, -1);
    }

    v28 = 1;
  }
  else
  {
    v52 = v20;
    (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v19, v4, v5);
    v51 = v19;
    sub_227E5F18C();
    v29 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
    sub_227E5F1A4();
    v30 = (void *)sub_227E5FF78();
    swift_bridgeObjectRelease();
    v31 = objc_msgSend(v29, sel_fileExistsAtPath_, v30);

    if ((v31 & 1) != 0)
    {
      v32 = v16;
      v33 = sub_227E5F1BC();
      v26 = v54;
      v45 = v33;
      v47 = v46;
      sub_227E5EFF4();
      swift_allocObject();
      sub_227E5EFE8();
      sub_227D51624(&qword_255929840, (uint64_t (*)(uint64_t))type metadata accessor for BDSSyncEngineStateMetadata, (uint64_t)&unk_227E6FA40);
      sub_227E5EFDC();
      swift_release();
      sub_227DD1FD4(v45, v47);
      v48 = *(void (**)(char *, uint64_t))(v52 + 8);
      v48(v32, v21);
      v48(v51, v21);
      v28 = 0;
    }
    else
    {
      v26 = v54;
      if (qword_255928178 != -1)
        swift_once();
      v34 = sub_227E5F588();
      sub_227DDF6E4(v34, (uint64_t)qword_255928AA0);
      v35 = v52;
      (*(void (**)(char *, char *, uint64_t))(v52 + 16))(v12, v16, v21);
      v36 = sub_227E5F570();
      v37 = sub_227E60230();
      if (os_log_type_enabled(v36, v37))
      {
        v38 = (uint8_t *)swift_slowAlloc();
        v39 = swift_slowAlloc();
        v56 = v39;
        *(_DWORD *)v38 = 136315138;
        v50[2] = v38 + 4;
        sub_227D51624((unint64_t *)&qword_255928A90, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB28]);
        v40 = sub_227E60674();
        v55 = sub_227D634E0(v40, v41, &v56);
        sub_227E603B0();
        swift_bridgeObjectRelease();
        v42 = *(void (**)(char *, uint64_t))(v35 + 8);
        v42(v12, v21);
        _os_log_impl(&dword_227D4F000, v36, v37, "Could not locate metadata file at %s", v38, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x22E2AA8AC](v39, -1, -1);
        v43 = v38;
        v26 = v54;
        MEMORY[0x22E2AA8AC](v43, -1, -1);

        v42(v16, v21);
        v42(v51, v21);
      }
      else
      {

        v44 = *(void (**)(char *, uint64_t))(v35 + 8);
        v44(v12, v21);
        v44(v16, v21);
        v44(v51, v21);
      }
      v28 = 1;
    }
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 56))(v26, v28, 1);
}

id sub_227E195C0()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for BDSSyncEngine()), sel_init);
  qword_253F39920 = (uint64_t)result;
  return result;
}

id BDSSyncEngine.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id static BDSSyncEngine.shared.getter()
{
  if (qword_253F39928 != -1)
    swift_once();
  return (id)qword_253F39920;
}

Swift::Void __swiftcall BDSSyncEngine.setDatabase(_:config:)(CKDatabase _, BCCloudKitConfiguration *config)
{
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  Class v30;
  BCCloudKitConfiguration *v31;
  objc_class *v32;
  char *v33;
  NSString *v34;
  NSString *v35;
  uint64_t v36;
  id v37;
  void **v38;
  void *v39;
  void *v40;
  uint64_t v41;
  void *v42;
  char *v43;
  id v44;
  Class isa;
  BCCloudKitConfiguration *v46;
  uint64_t v47;
  _QWORD aBlock[6];

  v3 = v2;
  isa = _.super.isa;
  v46 = config;
  v4 = sub_227E5F648();
  v47 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4, v5);
  v8 = (char *)&isa - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6, v9);
  v11 = (char *)&isa - v10;
  v12 = sub_227D68330(&qword_2559294E8);
  MEMORY[0x24BDAC7A8](v12, v13);
  v15 = (char *)&isa - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_227D68330((uint64_t *)&unk_2559294F0);
  v18 = MEMORY[0x24BDAC7A8](v16, v17);
  v20 = (char *)&isa - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18, v21);
  v23 = (char *)&isa - v22;
  v24 = sub_227E5F570();
  v25 = sub_227E60248();
  if (os_log_type_enabled(v24, v25))
  {
    v26 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v26 = 0;
    _os_log_impl(&dword_227D4F000, v24, v25, "Setting up CKSyncEngine...", v26, 2u);
    MEMORY[0x22E2AA8AC](v26, -1, -1);
  }

  sub_227E18CB4((uint64_t)v15);
  v27 = type metadata accessor for BDSSyncEngineStateMetadata();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 48))(v15, 1, v27) == 1)
  {
    sub_227D5809C((uint64_t)v15, &qword_2559294E8);
    v28 = sub_227E5F8D0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v23, 1, 1, v28);
  }
  else
  {
    sub_227E19B78((uint64_t)&v15[*(int *)(v27 + 20)], (uint64_t)v23);
    sub_227DE3A44((uint64_t)v15);
  }
  v29 = v4;
  v30 = isa;
  v31 = v46;
  sub_227E19B78((uint64_t)v23, (uint64_t)v20);
  sub_227D51624(&qword_255929500, (uint64_t (*)(uint64_t))type metadata accessor for BDSSyncEngine, (uint64_t)&protocol conformance descriptor for BDSSyncEngine);
  v32 = v30;
  v33 = v3;
  sub_227E5F63C();
  swift_bridgeObjectRetain();
  sub_227E5F630();
  v34 = -[BCCloudKitConfiguration dbSubscriptionID](v31, sel_dbSubscriptionID);
  if (v34)
  {
    v35 = v34;
    sub_227E5FF84();

  }
  sub_227E5F624();
  v36 = v47;
  (*(void (**)(char *, char *, uint64_t))(v47 + 16))(v8, v11, v29);
  sub_227E5F90C();
  swift_allocObject();
  *(_QWORD *)&v33[OBJC_IVAR____TtC13BookDataStore13BDSSyncEngine_syncEngine] = sub_227E5F918();
  swift_release();
  sub_227E1A5B8("BDSSyncEngine - setting hasPendingUntrackedChanges=false", 0, 0xD00000000000001FLL, 0x8000000227E6D770);
  v37 = objc_msgSend(objc_allocWithZone((Class)BDSSyncEngineSaltManager), sel_initWithDatabase_observer_, v32, v33);
  v38 = (void **)&v33[OBJC_IVAR____TtC13BookDataStore13BDSSyncEngine_saltManager];
  swift_beginAccess();
  v39 = *v38;
  *v38 = v37;

  swift_beginAccess();
  v40 = *v38;
  if (*v38)
  {
    swift_endAccess();
    v41 = swift_allocObject();
    *(_QWORD *)(v41 + 16) = v33;
    aBlock[4] = sub_227E19C20;
    aBlock[5] = v41;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_227E19C38;
    aBlock[3] = &unk_24F08FE98;
    v42 = _Block_copy(aBlock);
    v43 = v33;
    v44 = v40;
    swift_release();
    objc_msgSend(v44, sel_refreshSalt_, v42);
    _Block_release(v42);

    (*(void (**)(char *, uint64_t))(v36 + 8))(v11, v29);
    sub_227D5809C((uint64_t)v23, (uint64_t *)&unk_2559294F0);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v36 + 8))(v11, v29);
    sub_227D5809C((uint64_t)v23, (uint64_t *)&unk_2559294F0);
    swift_endAccess();
  }
}

uint64_t sub_227E19B78(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_227D68330((uint64_t *)&unk_2559294F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for BDSSyncEngine()
{
  uint64_t result;

  result = qword_253F39940;
  if (!qword_253F39940)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_227E19BFC()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_227E19C20(void *a1)
{
  sub_227E1A2C0(a1);
}

void sub_227E19C38(uint64_t a1, void *a2)
{
  void (*v3)(void);
  id v4;

  v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  v4 = a2;
  v3();
  swift_release();

}

uint64_t BDSSyncEngine.addSaltChangeObserver(_:)(uint64_t a1)
{
  uint64_t v1;

  swift_getObjectType();
  return sub_227E24D68(a1, v1);
}

void sub_227E19D0C(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id *v6;
  id v7;
  void *v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  void *v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;

  v3 = a1 + 16;
  swift_beginAccess();
  v4 = MEMORY[0x22E2AA96C](v3);
  if (v4)
  {
    v5 = (char *)v4;
    objc_msgSend(*(id *)(v4 + OBJC_IVAR____TtC13BookDataStore13BDSSyncEngine_saltObservers), sel_addObject_, a2);
    v6 = (id *)&v5[OBJC_IVAR____TtC13BookDataStore13BDSSyncEngine_saltManager];
    swift_beginAccess();
    if (*v6
      && objc_msgSend(*v6, sel_establishedSalt)
      && *v6
      && (v7 = objc_msgSend(*v6, sel_establishedSaltVersionIdentifier)) != 0)
    {
      v8 = v7;
      sub_227E5FF84();

      v9 = sub_227E5F570();
      v10 = sub_227E60248();
      if (os_log_type_enabled(v9, v10))
      {
        v11 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v11 = 0;
        _os_log_impl(&dword_227D4F000, v9, v10, "BDSSyncEngine: Added salt change observer with a valid salt. Calling -saltUpdated with current salt", v11, 2u);
        MEMORY[0x22E2AA8AC](v11, -1, -1);
      }

      v12 = (void *)sub_227E5FF78();
      swift_bridgeObjectRelease();
      objc_msgSend(a2, sel_saltUpdatedWithSaltVersionIdentifier_, v12);
    }
    else
    {
      v13 = sub_227E5F570();
      v14 = sub_227E60248();
      if (os_log_type_enabled(v13, v14))
      {
        v15 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v15 = 0;
        _os_log_impl(&dword_227D4F000, v13, v14, "BDSSyncEngine: Added salt change observer but no valid salt yet", v15, 2u);
        MEMORY[0x22E2AA8AC](v15, -1, -1);
      }
      v12 = v5;
      v5 = (char *)v13;
    }

  }
}

Swift::Bool __swiftcall BDSSyncEngine.establishedSalt()()
{
  uint64_t v0;
  void **v1;
  void *v2;

  v1 = (void **)(v0 + OBJC_IVAR____TtC13BookDataStore13BDSSyncEngine_saltManager);
  swift_beginAccess();
  v2 = *v1;
  if (*v1)
    LOBYTE(v2) = objc_msgSend(v2, sel_establishedSalt);
  return (char)v2;
}

Swift::Void __swiftcall BDSSyncEngine.reestablishSalt()()
{
  char *v0;
  void **v1;
  void *v2;
  uint64_t v3;
  void *v4;
  NSObject *v5;
  char *v6;
  os_log_type_t v7;
  uint8_t *v8;
  _QWORD aBlock[6];

  v1 = (void **)&v0[OBJC_IVAR____TtC13BookDataStore13BDSSyncEngine_saltManager];
  swift_beginAccess();
  v2 = *v1;
  if (v2)
  {
    v3 = swift_allocObject();
    *(_QWORD *)(v3 + 16) = v0;
    aBlock[4] = sub_227E2BFC4;
    aBlock[5] = v3;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_227E19C38;
    aBlock[3] = &unk_24F08FEE8;
    v4 = _Block_copy(aBlock);
    v5 = v2;
    v6 = v0;
    swift_release();
    -[NSObject refreshSalt:](v5, sel_refreshSalt_, v4);
    _Block_release(v4);
  }
  else
  {
    v5 = sub_227E5F570();
    v7 = sub_227E60230();
    if (os_log_type_enabled(v5, v7))
    {
      v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v8 = 0;
      _os_log_impl(&dword_227D4F000, v5, v7, "BDSSyncEngine - reestablishSalt: saltManager not initialized", v8, 2u);
      MEMORY[0x22E2AA8AC](v8, -1, -1);
    }
  }

}

Swift::Void __swiftcall BDSSyncEngine.reestablishSaltIfNeeded()()
{
  char *v0;
  void **v1;
  void *v2;
  uint64_t v3;
  void *v4;
  NSObject *v5;
  char *v6;
  os_log_type_t v7;
  uint8_t *v8;
  _QWORD aBlock[6];

  v1 = (void **)&v0[OBJC_IVAR____TtC13BookDataStore13BDSSyncEngine_saltManager];
  swift_beginAccess();
  v2 = *v1;
  if (v2)
  {
    v3 = swift_allocObject();
    *(_QWORD *)(v3 + 16) = v0;
    aBlock[4] = sub_227E2BFC4;
    aBlock[5] = v3;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_227E19C38;
    aBlock[3] = &unk_24F08FF38;
    v4 = _Block_copy(aBlock);
    v5 = v2;
    v6 = v0;
    swift_release();
    -[NSObject refreshSaltIfNeeded:](v5, sel_refreshSaltIfNeeded_, v4);
    _Block_release(v4);
  }
  else
  {
    v5 = sub_227E5F570();
    v7 = sub_227E60230();
    if (os_log_type_enabled(v5, v7))
    {
      v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v8 = 0;
      _os_log_impl(&dword_227D4F000, v5, v7, "BDSSyncEngine - reestablishSaltIfNeeded: saltManager not initialized", v8, 2u);
      MEMORY[0x22E2AA8AC](v8, -1, -1);
    }
  }

}

void sub_227E1A2C0(void *a1)
{
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  _QWORD *v7;
  id v8;
  uint64_t v9;

  v2 = a1;
  v3 = a1;
  v4 = sub_227E5F570();
  v5 = sub_227E60230();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc();
    v7 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v6 = 138543362;
    v8 = a1;
    v9 = _swift_stdlib_bridgeErrorToNSError();
    sub_227E603B0();
    *v7 = v9;

    _os_log_impl(&dword_227D4F000, v4, v5, "BDSSyncEngine: Error encountered while trying to refresh salt: %{public}@", v6, 0xCu);
    sub_227D68330(&qword_255929230);
    swift_arrayDestroy();
    MEMORY[0x22E2AA8AC](v7, -1, -1);
    MEMORY[0x22E2AA8AC](v6, -1, -1);

  }
  else
  {

  }
}

uint64_t sub_227E1A474(uint64_t a1, void *a2, uint64_t a3)
{
  _BYTE v5[40];

  sub_227D572C8(a3, (uint64_t)v5);
  swift_beginAccess();
  sub_227E184B8((uint64_t)v5, a2);
  return swift_endAccess();
}

uint64_t sub_227E1A4E0@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t *v5;
  uint64_t v6;
  id v7;
  unint64_t v8;
  char v9;

  v5 = (uint64_t *)(a1 + OBJC_IVAR____TtC13BookDataStore13BDSSyncEngine_registeredDataSourceByRecordType);
  swift_beginAccess();
  v6 = *v5;
  if (*(_QWORD *)(v6 + 16))
  {
    v7 = a2;
    v8 = sub_227DD0224((uint64_t)v7);
    if ((v9 & 1) != 0)
    {
      sub_227D572C8(*(_QWORD *)(v6 + 56) + 40 * v8, a3);
    }
    else
    {
      *(_QWORD *)(a3 + 32) = 0;
      *(_OWORD *)a3 = 0u;
      *(_OWORD *)(a3 + 16) = 0u;
    }

  }
  else
  {
    *(_QWORD *)(a3 + 32) = 0;
    *(_OWORD *)a3 = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
  }
  return swift_endAccess();
}

Swift::Void __swiftcall BDSSyncEngine.add(recordZonesToSave:)(Swift::OpaquePointer recordZonesToSave)
{
  sub_227E1A804((unint64_t)recordZonesToSave._rawValue, MEMORY[0x24BDB88D8], 0xD000000000000017, 0x8000000227E6D0F0);
}

void sub_227E1A5B8(const char *a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v4;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  NSObject *oslog;
  uint64_t v15;

  if (*(_QWORD *)(v4 + OBJC_IVAR____TtC13BookDataStore13BDSSyncEngine_syncEngine))
  {
    swift_retain();
    v6 = sub_227E5F570();
    v7 = sub_227E60248();
    if (os_log_type_enabled(v6, v7))
    {
      v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v8 = 0;
      _os_log_impl(&dword_227D4F000, v6, v7, a1, v8, 2u);
      MEMORY[0x22E2AA8AC](v8, -1, -1);
    }

    sub_227E5F900();
    sub_227E5F8E8();
    swift_release();
    swift_release();
  }
  else
  {
    oslog = sub_227E5F570();
    v11 = sub_227E60230();
    if (os_log_type_enabled(oslog, v11))
    {
      v12 = (uint8_t *)swift_slowAlloc();
      v13 = swift_slowAlloc();
      v15 = v13;
      *(_DWORD *)v12 = 136315138;
      sub_227D634E0(a3, a4, &v15);
      sub_227E603B0();
      _os_log_impl(&dword_227D4F000, oslog, v11, "BDSSyncEngine - %s: syncEngine not initialized", v12, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x22E2AA8AC](v13, -1, -1);
      MEMORY[0x22E2AA8AC](v12, -1, -1);

    }
    else
    {

    }
  }
}

Swift::Void __swiftcall BDSSyncEngine.add(recordZoneIDsToDelete:)(Swift::OpaquePointer recordZoneIDsToDelete)
{
  sub_227E1A804((unint64_t)recordZoneIDsToDelete._rawValue, MEMORY[0x24BDB88D0], 0xD00000000000001BLL, 0x8000000227E6D110);
}

void sub_227E1A804(unint64_t a1, _DWORD *a2, uint64_t a3, unint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void **v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  os_log_type_t v27;
  uint8_t *v28;
  uint64_t v29;
  void **v30;
  void *v31;
  unint64_t v32;
  unint64_t v33;
  id v34;
  _QWORD v35[4];
  void (*v36)(void **, _QWORD, uint64_t);
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v8 = v4;
  v10 = sub_227E5F6F0();
  v11 = *(_QWORD *)(v10 - 8);
  v13 = MEMORY[0x24BDAC7A8](v10, v12);
  v15 = (void **)((char *)v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v13, v16);
  v18 = (_QWORD *)((char *)v35 - v17);
  v19 = *(_QWORD *)(v8 + OBJC_IVAR____TtC13BookDataStore13BDSSyncEngine_syncEngine);
  if (v19)
  {
    swift_retain();
    v37 = a1;
    v35[3] = sub_227E5F900();
    if (v37 >> 62)
    {
      swift_bridgeObjectRetain();
      v20 = sub_227E6056C();
      swift_bridgeObjectRelease();
    }
    else
    {
      v20 = *(_QWORD *)((v37 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    if (!v20)
    {
LABEL_20:
      sub_227E5F8F4();
      swift_release();
      swift_bridgeObjectRelease();
      sub_227E1A5B8("BDSSyncEngine - setting hasPendingUntrackedChanges=true", 1, 0x6C7564656863735FLL, 0xEF2928636E795365);
      swift_release();
      return;
    }
    v39 = MEMORY[0x24BEE4AF8];
    sub_227DECBFC(0, v20 & ~(v20 >> 63), 0);
    if ((v20 & 0x8000000000000000) == 0)
    {
      v35[1] = v19;
      v35[2] = v8;
      v21 = v39;
      v22 = v37;
      if ((v37 & 0xC000000000000001) != 0)
      {
        v23 = 0;
        v24 = *a2;
        do
        {
          *v18 = MEMORY[0x22E2A9AFC](v23, v22);
          (*(void (**)(_QWORD *, uint64_t, uint64_t))(v11 + 104))(v18, v24, v10);
          v39 = v21;
          v26 = *(_QWORD *)(v21 + 16);
          v25 = *(_QWORD *)(v21 + 24);
          if (v26 >= v25 >> 1)
          {
            sub_227DECBFC(v25 > 1, v26 + 1, 1);
            v22 = v37;
            v21 = v39;
          }
          ++v23;
          *(_QWORD *)(v21 + 16) = v26 + 1;
          (*(void (**)(unint64_t, _QWORD *, uint64_t))(v11 + 32))(v21+ ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80))+ *(_QWORD *)(v11 + 72) * v26, v18, v10);
        }
        while (v20 != v23);
      }
      else
      {
        v30 = (void **)(v37 + 32);
        LODWORD(v37) = *a2;
        v36 = *(void (**)(void **, _QWORD, uint64_t))(v11 + 104);
        do
        {
          v31 = *v30;
          *v15 = *v30;
          v36(v15, v37, v10);
          v39 = v21;
          v33 = *(_QWORD *)(v21 + 16);
          v32 = *(_QWORD *)(v21 + 24);
          v34 = v31;
          if (v33 >= v32 >> 1)
          {
            sub_227DECBFC(v32 > 1, v33 + 1, 1);
            v21 = v39;
          }
          *(_QWORD *)(v21 + 16) = v33 + 1;
          (*(void (**)(unint64_t, void **, uint64_t))(v11 + 32))(v21+ ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80))+ *(_QWORD *)(v11 + 72) * v33, v15, v10);
          ++v30;
          --v20;
        }
        while (v20);
      }
      goto LABEL_20;
    }
    __break(1u);
  }
  else
  {
    v37 = sub_227E5F570();
    v27 = sub_227E6023C();
    if (os_log_type_enabled((os_log_t)v37, v27))
    {
      v28 = (uint8_t *)swift_slowAlloc();
      v29 = swift_slowAlloc();
      v39 = v29;
      *(_DWORD *)v28 = 136315138;
      v38 = sub_227D634E0(a3, a4, &v39);
      sub_227E603B0();
      _os_log_impl(&dword_227D4F000, (os_log_t)v37, v27, "BDSSyncEngine - %s: syncEngine not initialized", v28, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x22E2AA8AC](v29, -1, -1);
      MEMORY[0x22E2AA8AC](v28, -1, -1);
    }

  }
}

void sub_227E1AC20(void *a1)
{
  uint64_t v1;
  id v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  char v10;
  NSObject *v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  NSObject *v15;
  _QWORD *v16;
  os_log_type_t type;
  uint64_t v18;
  uint64_t v19[3];

  v3 = objc_msgSend(a1, sel_zoneID);
  v4 = objc_msgSend(v3, sel_zoneName);

  v5 = sub_227E5FF84();
  v7 = v6;

  v8 = (uint64_t *)(v1 + OBJC_IVAR____TtC13BookDataStore13BDSSyncEngine_zoneResetsInProgress);
  swift_beginAccess();
  v9 = *v8;
  swift_bridgeObjectRetain();
  v10 = sub_227E4A788(v5, v7, v9);
  swift_bridgeObjectRelease();
  if ((v10 & 1) != 0)
  {
    v11 = a1;
    v12 = sub_227E5F570();
    v13 = sub_227E60248();
    if (os_log_type_enabled(v12, v13))
    {
      type = v13;
      v14 = swift_slowAlloc();
      v16 = (_QWORD *)swift_slowAlloc();
      v18 = swift_slowAlloc();
      v19[0] = v18;
      *(_DWORD *)v14 = 136315394;
      sub_227D634E0(0xD000000000000017, 0x8000000227E6D5E0, v19);
      sub_227E603B0();
      *(_WORD *)(v14 + 12) = 2114;
      v15 = v11;
      sub_227E603B0();
      *v16 = v11;

      v11 = v12;
      _os_log_impl(&dword_227D4F000, v12, type, "BDSSyncEngine - %s. Zone reset in progress while a new zone was added - %{public}@. Re-establishing salt", (uint8_t *)v14, 0x16u);
      sub_227D68330(&qword_255929230);
      swift_arrayDestroy();
      MEMORY[0x22E2AA8AC](v16, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x22E2AA8AC](v18, -1, -1);
      MEMORY[0x22E2AA8AC](v14, -1, -1);
    }
    else
    {

    }
    swift_beginAccess();
    sub_227E24200(v5, v7);
    swift_endAccess();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    BDSSyncEngine.reestablishSalt()();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
}

Swift::Void __swiftcall BDSSyncEngine.scheduleSync()()
{
  NSObject *v0;
  os_log_type_t v1;
  uint8_t *v2;
  uint64_t v3;
  uint64_t v4;

  v0 = sub_227E5F570();
  v1 = sub_227E60248();
  if (os_log_type_enabled(v0, v1))
  {
    v2 = (uint8_t *)swift_slowAlloc();
    v3 = swift_slowAlloc();
    v4 = v3;
    *(_DWORD *)v2 = 136315138;
    sub_227D634E0(0x656C756465686373, 0xEE002928636E7953, &v4);
    sub_227E603B0();
    _os_log_impl(&dword_227D4F000, v0, v1, "BDSSyncEngine - %s", v2, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x22E2AA8AC](v3, -1, -1);
    MEMORY[0x22E2AA8AC](v2, -1, -1);
  }

  sub_227E1B050(1);
}

uint64_t sub_227E1B050(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  _QWORD v18[2];
  uint64_t v19;
  uint64_t v20;
  _QWORD aBlock[6];

  v2 = v1;
  v4 = sub_227E5F948();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458];
  v19 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v6);
  v8 = (char *)v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_227E5F978();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9, v11);
  v13 = (char *)v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18[1] = *(_QWORD *)(v2 + OBJC_IVAR____TtC13BookDataStore13BDSSyncEngine_queue);
  v14 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = v14;
  *(_BYTE *)(v15 + 24) = a1;
  aBlock[4] = sub_227E2BF6C;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_227D5A858;
  aBlock[3] = &unk_24F090230;
  v16 = _Block_copy(aBlock);
  swift_retain();
  sub_227E5F960();
  v20 = MEMORY[0x24BEE4AF8];
  sub_227D51624((unint64_t *)&unk_253F3AED0, v5, MEMORY[0x24BEE5468]);
  sub_227D68330((uint64_t *)&unk_253F3AFE0);
  sub_227D515E4((unint64_t *)&unk_253F3AFF0, (uint64_t *)&unk_253F3AFE0, MEMORY[0x24BEE12C8]);
  sub_227E603E0();
  MEMORY[0x22E2A991C](0, v13, v8, v16);
  _Block_release(v16);
  (*(void (**)(char *, uint64_t))(v19 + 8))(v8, v4);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
  swift_release();
  return swift_release();
}

uint64_t BDSSyncEngine.sendChangesIfReady()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1[3] = v0;
  v2 = sub_227E5F660();
  v1[4] = v2;
  v1[5] = *(_QWORD *)(v2 - 8);
  v1[6] = swift_task_alloc();
  v3 = sub_227E5F684();
  v1[7] = v3;
  v1[8] = *(_QWORD *)(v3 - 8);
  v1[9] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_227E1B308()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v8;

  v1 = sub_227E5F570();
  v2 = sub_227E60248();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    v4 = swift_slowAlloc();
    v8 = v4;
    *(_DWORD *)v3 = 136315138;
    *(_QWORD *)(v0 + 16) = sub_227D634E0(0xD000000000000014, 0x8000000227E6D130, &v8);
    sub_227E603B0();
    _os_log_impl(&dword_227D4F000, v1, v2, "BDSSyncEngine - %s", v3, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x22E2AA8AC](v4, -1, -1);
    MEMORY[0x22E2AA8AC](v3, -1, -1);
  }

  if ((sub_227E1B610() & 1) != 0
    && (v5 = *(_QWORD *)(*(_QWORD *)(v0 + 24) + OBJC_IVAR____TtC13BookDataStore13BDSSyncEngine_syncEngine),
        (*(_QWORD *)(v0 + 80) = v5) != 0))
  {
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 40) + 104))(*(_QWORD *)(v0 + 48), *MEMORY[0x24BDB8840], *(_QWORD *)(v0 + 32));
    swift_retain();
    sub_227E5F66C();
    v6 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 88) = v6;
    *v6 = v0;
    v6[1] = sub_227E1B514;
    return sub_227E5F60C();
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_227E1B514()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD *)(*v1 + 64);
  v2 = *(_QWORD *)(*v1 + 72);
  v4 = *(_QWORD *)(*v1 + 56);
  v5 = *v1;
  *(_QWORD *)(v5 + 96) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_release();
  if (v0)
    return swift_task_switch();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v5 + 8))();
}

uint64_t sub_227E1B5D0()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id sub_227E1B610()
{
  uint64_t v0;
  id *v1;
  id result;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;

  v1 = (id *)(v0 + OBJC_IVAR____TtC13BookDataStore13BDSSyncEngine_saltManager);
  swift_beginAccess();
  result = *v1;
  if (*v1)
  {
    result = objc_msgSend(result, sel_establishedSalt);
    if ((_DWORD)result)
    {
      v3 = OBJC_IVAR____TtC13BookDataStore13BDSSyncEngine_zoneLock;
      objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC13BookDataStore13BDSSyncEngine_zoneLock), sel_lock);
      v4 = (uint64_t *)(v0 + OBJC_IVAR____TtC13BookDataStore13BDSSyncEngine_validCKZones);
      swift_beginAccess();
      v5 = *v4;
      v6 = *(void **)(v0 + v3);
      swift_bridgeObjectRetain();
      objc_msgSend(v6, sel_unlock);
      if ((v5 & 0xC000000000000001) != 0)
        v7 = sub_227E60410();
      else
        v7 = *(_QWORD *)(v5 + 16);
      swift_bridgeObjectRelease();
      return (id)(v7 != 0);
    }
  }
  return result;
}

Swift::Void __swiftcall BDSSyncEngine.setCloudKitZone(_:enabled:)(CKRecordZoneID _, Swift::Bool enabled)
{
  uint64_t v2;
  uint64_t v3;
  objc_class *v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  objc_class *v9;
  uint64_t v10;
  void *v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  _QWORD *v18;
  uint64_t v19;
  id v20;
  uint64_t v21[3];

  v3 = v2;
  v5 = _.super.isa;
  v6 = sub_227E5F570();
  v7 = sub_227E60248();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = swift_slowAlloc();
    v18 = (_QWORD *)swift_slowAlloc();
    v19 = swift_slowAlloc();
    v21[0] = v19;
    *(_DWORD *)v8 = 136315650;
    sub_227D634E0(0xD00000000000001BLL, 0x8000000227E6D150, v21);
    sub_227E603B0();
    *(_WORD *)(v8 + 12) = 2114;
    HIDWORD(v20) = HIDWORD(v5);
    v9 = v5;
    sub_227E603B0();
    *v18 = v5;

    *(_WORD *)(v8 + 22) = 1024;
    LODWORD(v20) = enabled;
    sub_227E603B0();
    _os_log_impl(&dword_227D4F000, v6, v7, "BDSSyncEngine - %s. Zone: %{public}@. Enabled: %{BOOL}d", (uint8_t *)v8, 0x1Cu);
    sub_227D68330(&qword_255929230);
    swift_arrayDestroy();
    MEMORY[0x22E2AA8AC](v18, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x22E2AA8AC](v19, -1, -1);
    MEMORY[0x22E2AA8AC](v8, -1, -1);

  }
  else
  {

  }
  v10 = OBJC_IVAR____TtC13BookDataStore13BDSSyncEngine_zoneLock;
  objc_msgSend(*(id *)(v3 + OBJC_IVAR____TtC13BookDataStore13BDSSyncEngine_zoneLock), sel_lock);
  swift_beginAccess();
  if (enabled)
  {
    sub_227E22C48(&v20, v5);
    swift_endAccess();

  }
  else
  {
    v11 = (void *)sub_227E2438C(v5);
    swift_endAccess();

  }
  v12 = (uint64_t *)(v3 + OBJC_IVAR____TtC13BookDataStore13BDSSyncEngine_validCKZones);
  swift_beginAccess();
  v13 = *v12;
  if ((v13 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    v14 = sub_227E60410();
    swift_bridgeObjectRelease();
  }
  else
  {
    v14 = *(_QWORD *)(v13 + 16);
  }
  objc_msgSend(*(id *)(v3 + v10), sel_unlock);
  if (v14)
  {
    v15 = sub_227E5F570();
    v16 = sub_227E60248();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v17 = 0;
      _os_log_impl(&dword_227D4F000, v15, v16, "BDSSyncEngine - Valid zones found", v17, 2u);
      MEMORY[0x22E2AA8AC](v17, -1, -1);
    }

    BDSSyncEngine.fetchRemoteChanges()();
  }
}

Swift::Void __swiftcall BDSSyncEngine.fetchRemoteChanges()()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  int v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[4];

  v1 = sub_227D68330(&qword_255929530);
  MEMORY[0x24BDAC7A8](v1, v2);
  v4 = (char *)v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_227E60128();
  v6 = *(_QWORD *)(v5 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
  v7 = (_QWORD *)swift_allocObject();
  v7[2] = 0;
  v7[3] = 0;
  v7[4] = v0;
  v8 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  v9 = v0;
  if (v8 == 1)
  {
    sub_227D5809C((uint64_t)v4, &qword_255929530);
    v10 = 0;
    v11 = 0;
  }
  else
  {
    sub_227E6011C();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v4, v5);
    if (v7[2])
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      v10 = sub_227E60104();
      v11 = v12;
      swift_unknownObjectRelease();
    }
    else
    {
      v10 = 0;
      v11 = 0;
    }
  }
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = &unk_255929540;
  *(_QWORD *)(v13 + 24) = v7;
  if (v11 | v10)
  {
    v14[0] = 0;
    v14[1] = 0;
    v14[2] = v10;
    v14[3] = v11;
  }
  swift_task_create();
  swift_release();
}

uint64_t BDSSyncEngine.enabledCloudKitZones()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  void *v4;

  v1 = OBJC_IVAR____TtC13BookDataStore13BDSSyncEngine_zoneLock;
  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC13BookDataStore13BDSSyncEngine_zoneLock), sel_lock);
  v2 = (uint64_t *)(v0 + OBJC_IVAR____TtC13BookDataStore13BDSSyncEngine_validCKZones);
  swift_beginAccess();
  v3 = *v2;
  v4 = *(void **)(v0 + v1);
  swift_bridgeObjectRetain();
  objc_msgSend(v4, sel_unlock);
  return v3;
}

Swift::Void __swiftcall BDSSyncEngine.resetCloudKitZone(_:)(CKRecordZone a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  objc_class *v9;
  NSObject *v10;
  os_log_type_t v11;
  _BOOL4 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  objc_class *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;
  id *v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  NSObject *v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  NSObject *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  NSObject *v44;
  uint64_t v45[3];
  uint64_t v46;

  v2 = v1;
  v4 = sub_227D68330(&qword_255929530);
  MEMORY[0x24BDAC7A8](v4, v5);
  v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(v1 + OBJC_IVAR____TtC13BookDataStore13BDSSyncEngine_syncEngine);
  if (v8)
  {
    v9 = a1.super.isa;
    swift_retain();
    v10 = sub_227E5F570();
    v11 = sub_227E60248();
    v12 = os_log_type_enabled(v10, v11);
    v44 = v9;
    if (v12)
    {
      v13 = swift_slowAlloc();
      v43 = v7;
      v14 = v13;
      v15 = swift_slowAlloc();
      v41 = v8;
      v16 = (_QWORD *)v15;
      v17 = swift_slowAlloc();
      v42 = v1;
      v40 = v17;
      v45[0] = v17;
      *(_DWORD *)v14 = 136315394;
      v46 = sub_227D634E0(0xD000000000000015, 0x8000000227E6D170, v45);
      sub_227E603B0();
      *(_WORD *)(v14 + 12) = 2114;
      v46 = (uint64_t)v9;
      v18 = v9;
      sub_227E603B0();
      *v16 = v9;

      _os_log_impl(&dword_227D4F000, v10, v11, "BDSSyncEngine - %s. Removing zone - %{public}@", (uint8_t *)v14, 0x16u);
      sub_227D68330(&qword_255929230);
      swift_arrayDestroy();
      v19 = v16;
      v8 = v41;
      MEMORY[0x22E2AA8AC](v19, -1, -1);
      v20 = v40;
      swift_arrayDestroy();
      v2 = v42;
      MEMORY[0x22E2AA8AC](v20, -1, -1);
      v21 = v14;
      v7 = v43;
      MEMORY[0x22E2AA8AC](v21, -1, -1);

    }
    else
    {

    }
    v25 = (id *)(v2 + OBJC_IVAR____TtC13BookDataStore13BDSSyncEngine_saltManager);
    swift_beginAccess();
    if (*v25)
    {
      objc_msgSend(*v25, sel_invalidateSalt);
    }
    else
    {
      v26 = sub_227E5F570();
      v27 = sub_227E60230();
      if (os_log_type_enabled(v26, v27))
      {
        v28 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v28 = 0;
        _os_log_impl(&dword_227D4F000, v26, v27, "BDSSyncEngine - invalidateSalt: saltManager not initialized", v28, 2u);
        MEMORY[0x22E2AA8AC](v28, -1, -1);
      }

    }
    sub_227E5F900();
    sub_227D68330(&qword_255928E30);
    v29 = sub_227E5F6F0();
    v30 = *(_QWORD *)(v29 - 8);
    v31 = (*(unsigned __int8 *)(v30 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
    v32 = swift_allocObject();
    *(_OWORD *)(v32 + 16) = xmmword_227E6F1B0;
    v33 = (_QWORD *)(v32 + v31);
    v34 = v44;
    *v33 = -[NSObject zoneID](v44, sel_zoneID);
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(v30 + 104))(v33, *MEMORY[0x24BDB88D0], v29);
    sub_227E5F8F4();
    swift_bridgeObjectRelease();
    swift_release();
    v35 = sub_227E60128();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v7, 1, 1, v35);
    v36 = swift_allocObject();
    swift_unknownObjectWeakInit();
    v37 = (_QWORD *)swift_allocObject();
    v37[2] = 0;
    v37[3] = 0;
    v37[4] = v36;
    v37[5] = v8;
    v37[6] = v34;
    v38 = v34;
    sub_227E1D478((uint64_t)v7, (uint64_t)&unk_255929568, (uint64_t)v37);
    swift_release();
  }
  else
  {
    v44 = sub_227E5F570();
    v22 = sub_227E6023C();
    if (os_log_type_enabled(v44, v22))
    {
      v23 = (uint8_t *)swift_slowAlloc();
      v24 = swift_slowAlloc();
      v45[0] = v24;
      *(_DWORD *)v23 = 136315138;
      v46 = sub_227D634E0(0xD000000000000015, 0x8000000227E6D170, v45);
      sub_227E603B0();
      _os_log_impl(&dword_227D4F000, v44, v22, "BDSSyncEngine - %s: syncEngine not initialized", v23, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x22E2AA8AC](v24, -1, -1);
      MEMORY[0x22E2AA8AC](v23, -1, -1);
    }

  }
}

uint64_t sub_227E1C35C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6[15] = a5;
  v6[16] = a6;
  v6[14] = a4;
  v7 = sub_227E5F948();
  v6[17] = v7;
  v6[18] = *(_QWORD *)(v7 - 8);
  v6[19] = swift_task_alloc();
  v8 = sub_227E5F978();
  v6[20] = v8;
  v6[21] = *(_QWORD *)(v8 - 8);
  v6[22] = swift_task_alloc();
  v9 = sub_227E5F660();
  v6[23] = v9;
  v6[24] = *(_QWORD *)(v9 - 8);
  v6[25] = swift_task_alloc();
  v10 = sub_227E5F684();
  v6[26] = v10;
  v6[27] = *(_QWORD *)(v10 - 8);
  v6[28] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_227E1C438()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  _QWORD *v8;

  v1 = *(_QWORD *)(v0 + 112) + 16;
  swift_beginAccess();
  v2 = MEMORY[0x22E2AA96C](v1);
  *(_QWORD *)(v0 + 232) = v2;
  v3 = *(uint64_t **)(v0 + 200);
  if (v2)
  {
    v4 = *(_QWORD *)(v0 + 184);
    v5 = *(_QWORD *)(v0 + 192);
    v6 = *(void **)(v0 + 128);
    sub_227D68330(&qword_255929820);
    v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = xmmword_227E71B30;
    *(_QWORD *)(v7 + 32) = objc_msgSend(v6, sel_zoneID);
    sub_227E600D4();
    *v3 = v7;
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(v5 + 104))(v3, *MEMORY[0x24BDB8848], v4);
    sub_227E5F66C();
    v8 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 240) = v8;
    *v8 = v0;
    v8[1] = sub_227E1C5AC;
    return sub_227E5F60C();
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_227E1C5AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 216);
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 224);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 208);
  *(_QWORD *)(*(_QWORD *)v1 + 248) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  return swift_task_switch();
}

uint64_t sub_227E1C630()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  void *v7;
  id v8;
  id v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v1 = (void *)v0[29];
  v2 = v0[22];
  v3 = v0[19];
  v12 = v0[21];
  v13 = v0[20];
  v4 = v0[17];
  v5 = (void *)v0[16];
  v11 = v0[18];
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = v1;
  *(_QWORD *)(v6 + 24) = v5;
  v0[6] = sub_227E2BE24;
  v0[7] = v6;
  v0[2] = MEMORY[0x24BDAC760];
  v0[3] = 1107296256;
  v0[4] = sub_227D5A858;
  v0[5] = &unk_24F090190;
  v7 = _Block_copy(v0 + 2);
  v8 = v1;
  v9 = v5;
  sub_227E5F960();
  v0[13] = MEMORY[0x24BEE4AF8];
  sub_227D51624((unint64_t *)&unk_253F3AED0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  sub_227D68330((uint64_t *)&unk_253F3AFE0);
  sub_227D515E4((unint64_t *)&unk_253F3AFF0, (uint64_t *)&unk_253F3AFE0, MEMORY[0x24BEE12C8]);
  sub_227E603E0();
  MEMORY[0x22E2A991C](0, v2, v3, v7);
  _Block_release(v7);
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v3, v4);
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v2, v13);

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return ((uint64_t (*)(void))v0[1])();
}

uint64_t sub_227E1C808()
{
  uint64_t v0;
  id v1;
  NSObject *v2;
  os_log_type_t v3;
  void *v4;
  uint64_t v5;
  id v6;
  void *v7;
  void *v8;
  _QWORD *v10;
  uint64_t v11;
  id v12;
  void *v13;
  uint64_t v14;

  v1 = *(id *)(v0 + 128);
  v2 = sub_227E5F570();
  v3 = sub_227E60230();
  if (os_log_type_enabled(v2, v3))
  {
    v12 = *(id *)(v0 + 248);
    v13 = *(void **)(v0 + 232);
    v4 = *(void **)(v0 + 128);
    v5 = swift_slowAlloc();
    v10 = (_QWORD *)swift_slowAlloc();
    v11 = swift_slowAlloc();
    v14 = v11;
    *(_DWORD *)v5 = 136315394;
    *(_QWORD *)(v0 + 88) = sub_227D634E0(0xD000000000000015, 0x8000000227E6D170, &v14);
    sub_227E603B0();
    *(_WORD *)(v5 + 12) = 2114;
    *(_QWORD *)(v0 + 96) = v4;
    v6 = v4;
    sub_227E603B0();
    *v10 = v4;

    _os_log_impl(&dword_227D4F000, v2, v3, "BDSSyncEngine - %s: Could not delete %{public}@", (uint8_t *)v5, 0x16u);
    sub_227D68330(&qword_255929230);
    swift_arrayDestroy();
    MEMORY[0x22E2AA8AC](v10, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x22E2AA8AC](v11, -1, -1);
    MEMORY[0x22E2AA8AC](v5, -1, -1);

  }
  else
  {
    v7 = *(void **)(v0 + 232);
    v8 = *(void **)(v0 + 128);

  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_227E1CA50(char *a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  id v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  _QWORD *v22;
  id v23;
  char *v24;
  uint64_t v27[3];
  uint64_t v28;

  v4 = sub_227D68330(&qword_255929530);
  MEMORY[0x24BDAC7A8](v4, v5);
  v7 = (char *)&v27[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_227E5F570();
  v9 = sub_227E60248();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc();
    v11 = swift_slowAlloc();
    v27[0] = v11;
    *(_DWORD *)v10 = 136315138;
    v28 = sub_227D634E0(0xD000000000000015, 0x8000000227E6D170, v27);
    sub_227E603B0();
    _os_log_impl(&dword_227D4F000, v8, v9, "BDSSyncEngine - %s. Zone removed. Saving it again...", v10, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x22E2AA8AC](v11, -1, -1);
    MEMORY[0x22E2AA8AC](v10, -1, -1);
  }

  v12 = objc_msgSend(a2, sel_zoneID);
  v13 = objc_msgSend(v12, sel_zoneName);

  v14 = sub_227E5FF84();
  v16 = v15;

  swift_beginAccess();
  sub_227E22A9C(&v28, v14, v16);
  swift_endAccess();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)&a1[OBJC_IVAR____TtC13BookDataStore13BDSSyncEngine_syncEngine])
  {
    swift_retain();
    sub_227E5F900();
    swift_release();
    sub_227D68330(&qword_255928E30);
    v17 = *(_QWORD *)(sub_227E5F6F0() - 8);
    v18 = (*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
    v19 = swift_allocObject();
    *(_OWORD *)(v19 + 16) = xmmword_227E6F1B0;
    *(_QWORD *)(v19 + v18) = a2;
    (*(void (**)(void))(v17 + 104))();
    v20 = a2;
    sub_227E5F8F4();
    swift_bridgeObjectRelease();
    swift_release();
  }
  v21 = sub_227E60128();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v7, 1, 1, v21);
  v22 = (_QWORD *)swift_allocObject();
  v22[2] = 0;
  v22[3] = 0;
  v22[4] = a1;
  v22[5] = a2;
  v23 = a2;
  v24 = a1;
  sub_227E1D478((uint64_t)v7, (uint64_t)&unk_255929830, (uint64_t)v22);
  return swift_release();
}

uint64_t sub_227E1CD80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;

  v5[5] = a4;
  v5[6] = a5;
  v6 = sub_227E5F660();
  v5[7] = v6;
  v5[8] = *(_QWORD *)(v6 - 8);
  v5[9] = swift_task_alloc();
  v7 = sub_227E5F684();
  v5[10] = v7;
  v5[11] = *(_QWORD *)(v7 - 8);
  v5[12] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_227E1CE08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 40) + OBJC_IVAR____TtC13BookDataStore13BDSSyncEngine_syncEngine);
  *(_QWORD *)(v0 + 104) = v1;
  if (v1)
  {
    v3 = *(_QWORD *)(v0 + 64);
    v2 = *(uint64_t **)(v0 + 72);
    v4 = *(void **)(v0 + 48);
    v5 = *(_QWORD *)(v0 + 56);
    sub_227D68330(&qword_255929820);
    v6 = swift_allocObject();
    *(_OWORD *)(v6 + 16) = xmmword_227E71B30;
    swift_retain();
    *(_QWORD *)(v6 + 32) = objc_msgSend(v4, sel_zoneID);
    v13 = v6;
    sub_227E600D4();
    *v2 = v6;
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(v3 + 104))(v2, *MEMORY[0x24BDB8848], v5);
    sub_227E5F66C();
    v7 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 112) = v7;
    *v7 = v0;
    v7[1] = sub_227E1D06C;
    return sub_227E5F60C();
  }
  else
  {
    v9 = sub_227E5F570();
    v10 = sub_227E60248();
    if (os_log_type_enabled(v9, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc();
      v12 = swift_slowAlloc();
      v13 = v12;
      *(_DWORD *)v11 = 136315138;
      *(_QWORD *)(v0 + 32) = sub_227D634E0(0xD000000000000015, 0x8000000227E6D170, &v13);
      sub_227E603B0();
      _os_log_impl(&dword_227D4F000, v9, v10, "BDSSyncEngine - %s  Zone should have been created again!", v11, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x22E2AA8AC](v12, -1, -1);
      MEMORY[0x22E2AA8AC](v11, -1, -1);
    }

    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_227E1D06C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 88);
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 96);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 80);
  *(_QWORD *)(*(_QWORD *)v1 + 120) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_release();
  return swift_task_switch();
}

uint64_t sub_227E1D100()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;
  uint64_t v4;
  uint64_t v6;

  v1 = sub_227E5F570();
  v2 = sub_227E60248();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    v4 = swift_slowAlloc();
    v6 = v4;
    *(_DWORD *)v3 = 136315138;
    *(_QWORD *)(v0 + 32) = sub_227D634E0(0xD000000000000015, 0x8000000227E6D170, &v6);
    sub_227E603B0();
    _os_log_impl(&dword_227D4F000, v1, v2, "BDSSyncEngine - %s  Zone should have been created again!", v3, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x22E2AA8AC](v4, -1, -1);
    MEMORY[0x22E2AA8AC](v3, -1, -1);
  }

  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_227E1D260()
{
  uint64_t v0;
  id v1;
  NSObject *v2;
  os_log_type_t v3;
  void *v4;
  uint64_t v5;
  id v6;
  void *v7;
  _QWORD *v9;
  uint64_t v10;
  id v11;
  uint64_t v12;

  v1 = *(id *)(v0 + 48);
  v2 = sub_227E5F570();
  v3 = sub_227E60230();
  if (os_log_type_enabled(v2, v3))
  {
    v11 = *(id *)(v0 + 120);
    v4 = *(void **)(v0 + 48);
    v5 = swift_slowAlloc();
    v9 = (_QWORD *)swift_slowAlloc();
    v10 = swift_slowAlloc();
    v12 = v10;
    *(_DWORD *)v5 = 136315394;
    *(_QWORD *)(v0 + 16) = sub_227D634E0(0xD000000000000015, 0x8000000227E6D170, &v12);
    sub_227E603B0();
    *(_WORD *)(v5 + 12) = 2114;
    *(_QWORD *)(v0 + 24) = v4;
    v6 = v4;
    sub_227E603B0();
    *v9 = v4;

    _os_log_impl(&dword_227D4F000, v2, v3, "BDSSyncEngine - %s: Could not add %{public}@", (uint8_t *)v5, 0x16u);
    sub_227D68330(&qword_255929230);
    swift_arrayDestroy();
    MEMORY[0x22E2AA8AC](v9, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x22E2AA8AC](v10, -1, -1);
    MEMORY[0x22E2AA8AC](v5, -1, -1);

  }
  else
  {
    v7 = *(void **)(v0 + 48);

  }
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_227E1D478(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_227E60128();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_227E6011C();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(_QWORD *)(a3 + 16))
      goto LABEL_5;
    goto LABEL_3;
  }
  sub_227D5809C(a1, &qword_255929530);
  if (*(_QWORD *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_227E60104();
    swift_unknownObjectRelease();
  }
LABEL_5:
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a2;
  *(_QWORD *)(v8 + 24) = a3;
  return swift_task_create();
}

void sub_227E1D608(void *a1)
{
  uint64_t v1;
  id v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  os_log_type_t v11;
  uint8_t *v12;
  NSObject *oslog;
  uint64_t v14;

  if (*(_QWORD *)(v1 + OBJC_IVAR____TtC13BookDataStore13BDSSyncEngine_syncEngine))
  {
    v2 = a1;
    swift_retain();
    v3 = sub_227E5F570();
    v4 = sub_227E60248();
    if (os_log_type_enabled(v3, v4))
    {
      v5 = (uint8_t *)swift_slowAlloc();
      v6 = swift_slowAlloc();
      v14 = v6;
      *(_DWORD *)v5 = 136446210;
      v7 = objc_msgSend(v2, sel_zoneName);
      v8 = sub_227E5FF84();
      v10 = v9;

      sub_227D634E0(v8, v10, &v14);
      sub_227E603B0();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_227D4F000, v3, v4, "BDSSyncEngine - resetChangeToken: resetting change token for %{public}s", v5, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x22E2AA8AC](v6, -1, -1);
      MEMORY[0x22E2AA8AC](v5, -1, -1);
    }
    else
    {

    }
    sub_227E5F900();
    sub_227E5F8DC();
    swift_release();
    swift_release();
  }
  else
  {
    oslog = sub_227E5F570();
    v11 = sub_227E6023C();
    if (os_log_type_enabled(oslog, v11))
    {
      v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v12 = 0;
      _os_log_impl(&dword_227D4F000, oslog, v11, "BDSSyncEngine - resetChangeToken: syncEngine not initialized", v12, 2u);
      MEMORY[0x22E2AA8AC](v12, -1, -1);
    }

  }
}

uint64_t BDSSyncEngine.handleEvent(_:syncEngine:)(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t);

  v5 = (uint64_t (*)(uint64_t))((char *)&dword_255929578 + dword_255929578);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_227DDF69C;
  return v5(a1);
}

void BDSSyncEngine.syncEngine(_:accountChangedFromUserRecordID:toUserRecordID:)(uint64_t a1, uint64_t a2, void *a3)
{
  sub_227E251A8(a3);
}

uint64_t BDSSyncEngine.syncEngine(_:failedToFetchChangesFor:error:)(int a1, void *a2, id a3)
{
  return sub_227E27FC0(a2, a3);
}

uint64_t BDSSyncEngine.nextRecordZoneChangeBatch(_:syncEngine:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3[37] = a2;
  v3[38] = v2;
  v3[36] = a1;
  v4 = sub_227E5F738();
  v3[39] = v4;
  v3[40] = *(_QWORD *)(v4 - 8);
  v3[41] = swift_task_alloc();
  v3[42] = swift_task_alloc();
  sub_227D68330(&qword_255929588);
  v3[43] = swift_task_alloc();
  v3[44] = swift_task_alloc();
  v3[45] = swift_task_alloc();
  v5 = sub_227E5F72C();
  v3[46] = v5;
  v3[47] = *(_QWORD *)(v5 - 8);
  v3[48] = swift_task_alloc();
  v6 = sub_227E5F684();
  v3[49] = v6;
  v3[50] = *(_QWORD *)(v6 - 8);
  v3[51] = swift_task_alloc();
  v7 = sub_227E5F660();
  v3[52] = v7;
  v3[53] = *(_QWORD *)(v7 - 8);
  v3[54] = swift_task_alloc();
  v3[55] = swift_task_alloc();
  v3[56] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_227E1DA80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  int v11;
  unint64_t *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  void *v23;
  NSObject *v24;
  os_log_type_t v25;
  _BOOL4 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint8_t *v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  void (*v34)(uint64_t, uint64_t);
  uint64_t v35;
  void (*v36)(uint64_t, uint64_t);
  NSObject *v37;
  os_log_type_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  id *v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  _QWORD *v59;
  NSObject *v61;
  os_log_type_t v62;
  _BOOL4 v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint8_t *v67;
  uint64_t v68;
  NSObject *v69;
  os_log_type_t v70;
  _BOOL4 v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint8_t *v75;
  uint64_t v76;
  const char *v77;
  _BOOL4 v78;
  unint64_t v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94[2];

  v2 = *(_QWORD *)(v0 + 440);
  v1 = *(_QWORD *)(v0 + 448);
  v3 = *(_QWORD *)(v0 + 416);
  v4 = *(_QWORD *)(v0 + 424);
  v6 = *(_QWORD *)(v0 + 400);
  v5 = *(_QWORD *)(v0 + 408);
  v7 = *(_QWORD *)(v0 + 392);
  v8 = sub_227E5F654();
  MEMORY[0x22E2A8CBC](v8);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  *(_QWORD *)(v0 + 224) = MEMORY[0x24BEE4B08];
  v9 = (_QWORD *)(v0 + 224);
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
  v10(v2, v1, v3);
  v11 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 88))(v2, v3);
  v91 = v0 + 224;
  if (v11 == *MEMORY[0x24BDB8848])
  {
    v12 = *(unint64_t **)(v0 + 440);
    v13 = *(_QWORD *)(v0 + 304);
    (*(void (**)(unint64_t *, _QWORD))(*(_QWORD *)(v0 + 424) + 96))(v12, *(_QWORD *)(v0 + 416));
    v14 = *v12;
    v15 = OBJC_IVAR____TtC13BookDataStore13BDSSyncEngine_zoneLock;
    objc_msgSend(*(id *)(v13 + OBJC_IVAR____TtC13BookDataStore13BDSSyncEngine_zoneLock), sel_lock);
    swift_beginAccess();
    swift_bridgeObjectRetain();
    v16 = swift_bridgeObjectRetain();
    sub_227E2B48C(v16, v14);
    v18 = v17;
    swift_bridgeObjectRelease();
    objc_msgSend(*(id *)(v13 + v15), sel_unlock);
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 224) = v18;
  }
  else if (v11 == *MEMORY[0x24BDB8840])
  {
    v19 = *(_QWORD *)(v0 + 304);
    v20 = OBJC_IVAR____TtC13BookDataStore13BDSSyncEngine_zoneLock;
    objc_msgSend(*(id *)(v19 + OBJC_IVAR____TtC13BookDataStore13BDSSyncEngine_zoneLock), sel_lock);
    v21 = (uint64_t *)(v19 + OBJC_IVAR____TtC13BookDataStore13BDSSyncEngine_validCKZones);
    swift_beginAccess();
    v22 = *v21;
    v23 = *(void **)(v19 + v20);
    swift_bridgeObjectRetain();
    objc_msgSend(v23, sel_unlock);
    *(_QWORD *)(v0 + 224) = v22;
  }
  else
  {
    v10(*(_QWORD *)(v0 + 432), *(_QWORD *)(v0 + 448), *(_QWORD *)(v0 + 416));
    v24 = sub_227E5F570();
    v25 = sub_227E6023C();
    v26 = os_log_type_enabled(v24, v25);
    v27 = *(_QWORD *)(v0 + 424);
    v28 = *(_QWORD *)(v0 + 432);
    v29 = *(_QWORD *)(v0 + 416);
    if (v26)
    {
      v30 = (uint8_t *)swift_slowAlloc();
      v31 = swift_slowAlloc();
      v94[0] = v31;
      *(_DWORD *)v30 = 136315138;
      sub_227D51624(&qword_2559295A8, (uint64_t (*)(uint64_t))MEMORY[0x24BDB8858], MEMORY[0x24BDB8860]);
      v32 = sub_227E60674();
      *(_QWORD *)(v0 + 264) = sub_227D634E0(v32, v33, v94);
      sub_227E603B0();
      swift_bridgeObjectRelease();
      v34 = *(void (**)(uint64_t, uint64_t))(v27 + 8);
      v34(v28, v29);
      _os_log_impl(&dword_227D4F000, v24, v25, "BDSSyncEngine - Ignoring scope %s. This is unexpected", v30, 0xCu);
      swift_arrayDestroy();
      v35 = v31;
      v9 = (_QWORD *)(v0 + 224);
      MEMORY[0x22E2AA8AC](v35, -1, -1);
      MEMORY[0x22E2AA8AC](v30, -1, -1);

      v34(*(_QWORD *)(v0 + 440), *(_QWORD *)(v0 + 416));
    }
    else
    {

      v36 = *(void (**)(uint64_t, uint64_t))(v27 + 8);
      v36(v28, v29);
      v36(*(_QWORD *)(v0 + 440), *(_QWORD *)(v0 + 416));
    }
  }
  v37 = sub_227E5F570();
  v38 = sub_227E60248();
  v89 = v9 + 3;
  if (os_log_type_enabled(v37, v38))
  {
    v39 = swift_slowAlloc();
    v40 = swift_slowAlloc();
    v94[0] = v40;
    *(_DWORD *)v39 = 136315394;
    v9[2] = sub_227D634E0(0xD000000000000028, 0x8000000227E6D190, v94);
    sub_227E603B0();
    *(_WORD *)(v39 + 12) = 2082;
    swift_beginAccess();
    sub_227D52DBC(0, (unint64_t *)&unk_25592A2C0);
    sub_227E2AED4();
    swift_bridgeObjectRetain();
    v41 = sub_227E60140();
    v43 = v42;
    swift_bridgeObjectRelease();
    v9[4] = sub_227D634E0(v41, v43, v94);
    sub_227E603B0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_227D4F000, v37, v38, "BDSSyncEngine - %s, enabledZoneIDs: %{public}s", (uint8_t *)v39, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x22E2AA8AC](v40, -1, -1);
    MEMORY[0x22E2AA8AC](v39, -1, -1);
  }

  v44 = *(_QWORD *)(v0 + 304);
  *(_QWORD *)(swift_task_alloc() + 16) = v44;
  sub_227D68330(&qword_255929598);
  sub_227E602CC();
  swift_task_dealloc();
  v45 = *(_QWORD *)(v0 + 272);
  *(_QWORD *)(v0 + 456) = v45;
  if (!*(_QWORD *)(v45 + 16))
  {
    v69 = sub_227E5F570();
    v70 = sub_227E60248();
    v71 = os_log_type_enabled(v69, v70);
    v72 = *(_QWORD *)(v0 + 448);
    v73 = *(_QWORD *)(v0 + 416);
    v74 = *(_QWORD *)(v0 + 424);
    if (v71)
    {
      v93 = *(_QWORD *)(v0 + 416);
      v90 = *(_QWORD *)(v0 + 448);
      v75 = (uint8_t *)swift_slowAlloc();
      v76 = swift_slowAlloc();
      v94[0] = v76;
      *(_DWORD *)v75 = 136315138;
      *(_QWORD *)(v0 + 232) = sub_227D634E0(0xD000000000000028, 0x8000000227E6D190, v94);
      sub_227E603B0();
      v77 = "BDSSyncEngine - %s, record sources not found";
LABEL_25:
      _os_log_impl(&dword_227D4F000, v69, v70, v77, v75, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x22E2AA8AC](v76, -1, -1);
      MEMORY[0x22E2AA8AC](v75, -1, -1);

      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v74 + 8))(v90, v93);
LABEL_32:
      (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 376) + 56))(*(_QWORD *)(v0 + 288), 1, 1, *(_QWORD *)(v0 + 368));
      goto LABEL_33;
    }
LABEL_30:
    swift_bridgeObjectRelease();

    (*(void (**)(uint64_t, uint64_t))(v74 + 8))(v72, v73);
    goto LABEL_32;
  }
  v46 = (id *)(*(_QWORD *)(v0 + 304) + OBJC_IVAR____TtC13BookDataStore13BDSSyncEngine_saltManager);
  swift_beginAccess();
  if (!*v46 || !objc_msgSend(*v46, sel_establishedSalt))
  {
    v61 = sub_227E5F570();
    v62 = sub_227E60248();
    v63 = os_log_type_enabled(v61, v62);
    v64 = *(_QWORD *)(v0 + 448);
    v66 = *(_QWORD *)(v0 + 416);
    v65 = *(_QWORD *)(v0 + 424);
    if (v63)
    {
      v92 = *(_QWORD *)(v0 + 448);
      v67 = (uint8_t *)swift_slowAlloc();
      v68 = swift_slowAlloc();
      v94[0] = v68;
      *(_DWORD *)v67 = 136315138;
      *v89 = sub_227D634E0(0xD000000000000028, 0x8000000227E6D190, v94);
      sub_227E603B0();
      _os_log_impl(&dword_227D4F000, v61, v62, "BDSSyncEngine - %s, salt not ready", v67, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x22E2AA8AC](v68, -1, -1);
      MEMORY[0x22E2AA8AC](v67, -1, -1);

      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v65 + 8))(v92, v66);
    }
    else
    {
      swift_bridgeObjectRelease();

      (*(void (**)(uint64_t, uint64_t))(v65 + 8))(v64, v66);
    }
    goto LABEL_32;
  }
  swift_beginAccess();
  if ((*(_QWORD *)v91 & 0xC000000000000001) == 0)
  {
    if (*(_QWORD *)(*(_QWORD *)v91 + 16))
      goto LABEL_16;
LABEL_28:
    v69 = sub_227E5F570();
    v70 = sub_227E60248();
    v78 = os_log_type_enabled(v69, v70);
    v72 = *(_QWORD *)(v0 + 448);
    v73 = *(_QWORD *)(v0 + 416);
    v74 = *(_QWORD *)(v0 + 424);
    if (v78)
    {
      v93 = *(_QWORD *)(v0 + 416);
      v90 = *(_QWORD *)(v0 + 448);
      v75 = (uint8_t *)swift_slowAlloc();
      v76 = swift_slowAlloc();
      v94[0] = v76;
      *(_DWORD *)v75 = 136315138;
      *(_QWORD *)(v0 + 280) = sub_227D634E0(0xD000000000000028, 0x8000000227E6D190, v94);
      sub_227E603B0();
      v77 = "BDSSyncEngine - %s, enabledZoneIDs is empty";
      goto LABEL_25;
    }
    goto LABEL_30;
  }
  swift_bridgeObjectRetain();
  v47 = sub_227E60410();
  swift_bridgeObjectRelease();
  if (!v47)
    goto LABEL_28;
LABEL_16:
  v48 = *(_BYTE *)(v45 + 32);
  *(_BYTE *)(v0 + 528) = v48;
  v49 = -1;
  v50 = -1 << v48;
  if (-(-1 << v48) < 64)
    v49 = ~(-1 << -(char)(-1 << v48));
  v51 = v49 & *(_QWORD *)(v45 + 64);
  *(_DWORD *)(v0 + 520) = *MEMORY[0x24BDB8930];
  *(_DWORD *)(v0 + 524) = *MEMORY[0x24BDB8938];
  v52 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v0 + 480) = MEMORY[0x24BEE4AF8];
  v53 = MEMORY[0x24BEE4B00];
  *(_QWORD *)(v0 + 464) = MEMORY[0x24BEE4B00];
  *(_QWORD *)(v0 + 472) = 250;
  swift_bridgeObjectRetain();
  if (v51)
  {
    v54 = 0;
    v55 = __clz(__rbit64(v51));
    v56 = (v51 - 1) & v51;
    v57 = *(_QWORD **)(v0 + 456);
LABEL_20:
    *(_QWORD *)(v0 + 488) = v56;
    *(_QWORD *)(v0 + 496) = v54;
    sub_227D572C8(v57[7] + 40 * v55, v0 + 56);
    sub_227DD3274((__int128 *)(v0 + 56), v0 + 16);
    sub_227D572A4((_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 40));
    v58 = *(_QWORD *)(v0 + 224);
    *(_QWORD *)(v0 + 504) = v58;
    swift_bridgeObjectRetain();
    v59 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 512) = v59;
    *v59 = v0;
    v59[1] = sub_227E1E7B4;
    return sub_227E4E374(*(_QWORD *)(v0 + 360), v58, 250);
  }
  v79 = 63 - v50;
  v57 = *(_QWORD **)(v0 + 456);
  if ((unint64_t)(63 - v50) > 0x7F)
  {
    v80 = v57[9];
    if (v80)
    {
      v54 = 1;
LABEL_37:
      v56 = (v80 - 1) & v80;
      v55 = __clz(__rbit64(v80)) + (v54 << 6);
      goto LABEL_20;
    }
    if (v79 >= 0xC0)
    {
      v80 = v57[10];
      if (v80)
      {
        v54 = 2;
        goto LABEL_37;
      }
      if (v79 >= 0x100)
      {
        v80 = v57[11];
        if (v80)
        {
          v54 = 3;
          goto LABEL_37;
        }
        if (v79 >= 0x140)
        {
          v80 = v57[12];
          if (v80)
          {
            v54 = 4;
            goto LABEL_37;
          }
          if (v79 > 0x17F)
          {
            v80 = v57[13];
            if (v80)
            {
              v54 = 5;
              goto LABEL_37;
            }
            v86 = 0;
            v87 = v79 >> 6;
            if (v87 <= 6)
              v87 = 6;
            v88 = v87 - 6;
            while (v88 != v86)
            {
              v80 = v57[v86++ + 14];
              if (v80)
              {
                v54 = v86 + 5;
                goto LABEL_37;
              }
            }
          }
        }
      }
    }
  }
  swift_release();
  (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 376) + 56))(*(_QWORD *)(v0 + 352), 1, 1, *(_QWORD *)(v0 + 368));
  v81 = *(_QWORD *)(v0 + 448);
  v82 = *(_QWORD *)(v0 + 416);
  v83 = *(_QWORD *)(v0 + 424);
  if (*(_QWORD *)(v52 + 16))
  {
    v85 = *(_QWORD *)(v0 + 344);
    v84 = *(_QWORD *)(v0 + 352);
    *(_QWORD *)(swift_task_alloc() + 16) = v53;
    sub_227E5F714();
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    sub_227D5809C(v84, &qword_255929588);
    (*(void (**)(uint64_t, uint64_t))(v83 + 8))(v81, v82);
    swift_bridgeObjectRelease();
    sub_227E2AE8C(v85, v84);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_227E1A5B8("BDSSyncEngine - setting hasPendingUntrackedChanges=false", 0, 0xD00000000000001FLL, 0x8000000227E6D770);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v83 + 8))(v81, v82);
  }
  sub_227E2AE8C(*(_QWORD *)(v0 + 352), *(_QWORD *)(v0 + 288));
LABEL_33:
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_227E1E7B4()
{
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

unint64_t sub_227E1E810()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  id v29;
  char v30;
  unint64_t v31;
  uint64_t v32;
  _BOOL8 v33;
  uint64_t v34;
  char v35;
  unint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  BOOL v40;
  uint64_t v41;
  id v42;
  unint64_t result;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  void *v48;
  uint64_t v49;
  id v50;
  unint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  int64_t v65;
  unint64_t v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t v69;
  _QWORD *v70;
  int64_t v71;
  int64_t v72;
  unint64_t v73;
  unint64_t v74;
  int64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  unint64_t v83;
  uint64_t *v84;
  unint64_t v85;

  v1 = (_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 368);
  v3 = *(_QWORD *)(v0 + 376);
  v4 = *(_QWORD *)(v0 + 360);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v4, 1, v2) == 1)
  {
    sub_227D5809C(v4, &qword_255929588);
    v5 = *(_QWORD *)(v0 + 472);
    v6 = *(_QWORD *)(v0 + 480);
    v7 = *(_QWORD *)(v0 + 464);
    goto LABEL_61;
  }
  (*(void (**)(_QWORD, uint64_t, uint64_t))(v3 + 32))(*(_QWORD *)(v0 + 384), v4, v2);
  isUniquelyReferenced_nonNull_native = sub_227E5F708();
  if (isUniquelyReferenced_nonNull_native >> 62)
    goto LABEL_37;
  v9 = *(_QWORD *)((isUniquelyReferenced_nonNull_native & 0xFFFFFFFFFFFFF8) + 0x10);
  while (v9)
  {
    v10 = 0;
    v83 = isUniquelyReferenced_nonNull_native & 0xC000000000000001;
    v84 = (uint64_t *)(v0 + 216);
    v85 = *(_QWORD *)(v0 + 480);
    v7 = *(_QWORD *)(v0 + 464);
    v81 = v9;
    v82 = isUniquelyReferenced_nonNull_native;
    while (1)
    {
      v13 = v83
          ? (id)MEMORY[0x22E2A9AFC](v10, isUniquelyReferenced_nonNull_native)
          : *(id *)(isUniquelyReferenced_nonNull_native + 8 * v10 + 32);
      v14 = v13;
      v15 = v10 + 1;
      if (__OFADD__(v10, 1))
        break;
      v16 = *(unsigned int *)(v0 + 520);
      v17 = *(_QWORD **)(v0 + 336);
      v18 = *(_QWORD *)(v0 + 312);
      v19 = *(_QWORD *)(v0 + 320);
      *v17 = objc_msgSend(v13, sel_recordID);
      (*(void (**)(_QWORD *, uint64_t, uint64_t))(v19 + 104))(v17, v16, v18);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v85 = sub_227DF9270(0, *(_QWORD *)(v85 + 16) + 1, 1, v85);
      v21 = *(_QWORD *)(v85 + 16);
      v20 = *(_QWORD *)(v85 + 24);
      if (v21 >= v20 >> 1)
        v85 = sub_227DF9270(v20 > 1, v21 + 1, 1, v85);
      v22 = *(_QWORD *)(v0 + 336);
      v23 = *(_QWORD *)(v0 + 312);
      v24 = *(_QWORD *)(v0 + 320);
      *(_QWORD *)(v85 + 16) = v21 + 1;
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v24 + 32))(v85+ ((*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80))+ *(_QWORD *)(v24 + 72) * v21, v22, v23);
      v25 = objc_msgSend(v14, sel_recordID);
      if ((v7 & 0xC000000000000001) != 0)
      {
        if (v7 < 0)
          v26 = v7;
        else
          v26 = v7 & 0xFFFFFFFFFFFFFF8;
        v27 = v14;
        v28 = sub_227E60410();
        if (__OFADD__(v28, 1))
          goto LABEL_35;
        v7 = sub_227E21B5C(v26, v28 + 1, (uint64_t *)&unk_2559297B0, (unint64_t *)&qword_255929460, 0x24BDB91D8, (void (*)(unint64_t, uint64_t))sub_227DD136C);
      }
      else
      {
        v29 = v14;
      }
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *v84 = v7;
      v31 = sub_227DD0270((uint64_t)v25);
      v32 = *(_QWORD *)(v7 + 16);
      v33 = (v30 & 1) == 0;
      v34 = v32 + v33;
      if (__OFADD__(v32, v33))
        goto LABEL_34;
      v35 = v30;
      if (*(_QWORD *)(v7 + 24) >= v34)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          sub_227DD2DF8();
      }
      else
      {
        sub_227DD136C(v34, isUniquelyReferenced_nonNull_native);
        v36 = sub_227DD0270((uint64_t)v25);
        if ((v35 & 1) != (v37 & 1))
        {
          sub_227D52DBC(0, &qword_255928490);
          return sub_227E606B0();
        }
        v31 = v36;
      }
      v7 = *v84;
      isUniquelyReferenced_nonNull_native = v82;
      if ((v35 & 1) != 0)
      {
        v11 = *(_QWORD *)(v7 + 56);
        v12 = 8 * v31;

        *(_QWORD *)(v11 + v12) = v14;
      }
      else
      {
        *(_QWORD *)(v7 + 8 * (v31 >> 6) + 64) |= 1 << v31;
        v38 = 8 * v31;
        *(_QWORD *)(*(_QWORD *)(v7 + 48) + v38) = v25;
        *(_QWORD *)(*(_QWORD *)(v7 + 56) + v38) = v14;
        v39 = *(_QWORD *)(v7 + 16);
        v40 = __OFADD__(v39, 1);
        v41 = v39 + 1;
        if (v40)
          goto LABEL_36;
        *(_QWORD *)(v7 + 16) = v41;
        v42 = v25;
      }
      swift_bridgeObjectRelease();

      ++v10;
      if (v15 == v81)
        goto LABEL_39;
    }
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    swift_bridgeObjectRetain();
    v9 = sub_227E6056C();
    swift_bridgeObjectRelease();
  }
  v85 = *(_QWORD *)(v0 + 480);
  v7 = *(_QWORD *)(v0 + 464);
LABEL_39:
  swift_bridgeObjectRelease();
  result = sub_227E5F720();
  v44 = result;
  if (result >> 62)
  {
    result = sub_227E6056C();
    v45 = result;
    v6 = v85;
    if (!result)
      goto LABEL_53;
  }
  else
  {
    v45 = *(_QWORD *)((result & 0xFFFFFFFFFFFFF8) + 0x10);
    v6 = v85;
    if (!v45)
      goto LABEL_53;
  }
  if (v45 < 1)
  {
LABEL_91:
    __break(1u);
LABEL_92:
    __break(1u);
    return result;
  }
  v46 = 0;
  do
  {
    if ((v44 & 0xC000000000000001) != 0)
      v47 = (id)MEMORY[0x22E2A9AFC](v46, v44);
    else
      v47 = *(id *)(v44 + 8 * v46 + 32);
    v48 = v47;
    v49 = *(_QWORD *)(v0 + 320);
    **(_QWORD **)(v0 + 328) = v47;
    (*(void (**)(void))(v49 + 104))();
    v50 = v48;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v6 = sub_227DF9270(0, *(_QWORD *)(v6 + 16) + 1, 1, v6);
    v52 = *(_QWORD *)(v6 + 16);
    v51 = *(_QWORD *)(v6 + 24);
    if (v52 >= v51 >> 1)
      v6 = sub_227DF9270(v51 > 1, v52 + 1, 1, v6);
    ++v46;
    v54 = *(_QWORD *)(v0 + 320);
    v53 = *(_QWORD *)(v0 + 328);
    v55 = *(_QWORD *)(v0 + 312);
    *(_QWORD *)(v6 + 16) = v52 + 1;
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v54 + 32))(v6+ ((*(unsigned __int8 *)(v54 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v54 + 80))+ *(_QWORD *)(v54 + 72) * v52, v53, v55);

  }
  while (v45 != v46);
LABEL_53:
  swift_bridgeObjectRelease();
  v56 = sub_227E5F708();
  if (v56 >> 62)
    v57 = sub_227E6056C();
  else
    v57 = *(_QWORD *)((v56 & 0xFFFFFFFFFFFFF8) + 0x10);
  v58 = *(_QWORD *)(v0 + 472);
  swift_bridgeObjectRelease();
  v40 = __OFSUB__(v58, v57);
  v59 = v58 - v57;
  if (v40)
  {
    __break(1u);
    goto LABEL_88;
  }
  v60 = sub_227E5F720();
  if (v60 >> 62)
  {
LABEL_88:
    v61 = sub_227E6056C();
    goto LABEL_58;
  }
  v61 = *(_QWORD *)((v60 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_58:
  v63 = *(_QWORD *)(v0 + 376);
  v62 = *(_QWORD *)(v0 + 384);
  v64 = *(_QWORD *)(v0 + 368);
  swift_bridgeObjectRelease();
  result = (*(uint64_t (**)(uint64_t, uint64_t))(v63 + 8))(v62, v64);
  v5 = v59 - v61;
  if (__OFSUB__(v59, v61))
  {
    __break(1u);
LABEL_90:
    __break(1u);
    goto LABEL_91;
  }
  if (v5 <= 0)
  {
    swift_release();
    sub_227D58120(v0 + 16);
    goto LABEL_82;
  }
  v1 = (_QWORD *)(v0 + 16);
LABEL_61:
  result = sub_227D58120((uint64_t)v1);
  v66 = *(_QWORD *)(v0 + 488);
  v65 = *(_QWORD *)(v0 + 496);
  *(_QWORD *)(v0 + 472) = v5;
  *(_QWORD *)(v0 + 480) = v6;
  *(_QWORD *)(v0 + 464) = v7;
  if (v66)
  {
    v67 = (v66 - 1) & v66;
    v68 = __clz(__rbit64(v66)) | (v65 << 6);
    result = *(_QWORD *)(v0 + 456);
LABEL_63:
    *(_QWORD *)(v0 + 488) = v67;
    *(_QWORD *)(v0 + 496) = v65;
    sub_227D572C8(*(_QWORD *)(result + 56) + 40 * v68, v0 + 56);
    sub_227DD3274((__int128 *)(v0 + 56), (uint64_t)v1);
    sub_227D572A4(v1, *(_QWORD *)(v0 + 40));
    v69 = *(_QWORD *)(v0 + 224);
    *(_QWORD *)(v0 + 504) = v69;
    swift_bridgeObjectRetain();
    v70 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 512) = v70;
    *v70 = v0;
    v70[1] = sub_227E1E7B4;
    return sub_227E4E374(*(_QWORD *)(v0 + 360), v69, v5);
  }
  v71 = v65 + 1;
  if (__OFADD__(v65, 1))
    goto LABEL_90;
  v72 = (unint64_t)((1 << *(_BYTE *)(v0 + 528)) + 63) >> 6;
  result = *(_QWORD *)(v0 + 456);
  if (v71 < v72)
  {
    v73 = result + 64;
    v74 = *(_QWORD *)(result + 64 + 8 * v71);
    ++v65;
    if (v74)
    {
LABEL_67:
      v67 = (v74 - 1) & v74;
      v68 = __clz(__rbit64(v74)) + (v65 << 6);
      goto LABEL_63;
    }
    v65 = v71 + 1;
    if (v71 + 1 < v72)
    {
      v74 = *(_QWORD *)(v73 + 8 * v65);
      if (v74)
        goto LABEL_67;
      v65 = v71 + 2;
      if (v71 + 2 < v72)
      {
        v74 = *(_QWORD *)(v73 + 8 * v65);
        if (v74)
          goto LABEL_67;
        v65 = v71 + 3;
        if (v71 + 3 < v72)
        {
          v74 = *(_QWORD *)(v73 + 8 * v65);
          if (v74)
            goto LABEL_67;
          v75 = v71 + 4;
          if (v75 < v72)
          {
            v74 = *(_QWORD *)(v73 + 8 * v75);
            if (v74)
            {
              v65 = v75;
              goto LABEL_67;
            }
            while (1)
            {
              v65 = v75 + 1;
              if (__OFADD__(v75, 1))
                goto LABEL_92;
              if (v65 >= v72)
                break;
              v74 = *(_QWORD *)(v73 + 8 * v65);
              ++v75;
              if (v74)
                goto LABEL_67;
            }
          }
        }
      }
    }
  }
  swift_release();
LABEL_82:
  (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 376) + 56))(*(_QWORD *)(v0 + 352), 1, 1, *(_QWORD *)(v0 + 368));
  v76 = *(_QWORD *)(v0 + 448);
  v78 = *(_QWORD *)(v0 + 416);
  v77 = *(_QWORD *)(v0 + 424);
  if (*(_QWORD *)(v6 + 16))
  {
    v80 = *(_QWORD *)(v0 + 344);
    v79 = *(_QWORD *)(v0 + 352);
    *(_QWORD *)(swift_task_alloc() + 16) = v7;
    sub_227E5F714();
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    sub_227D5809C(v79, &qword_255929588);
    (*(void (**)(uint64_t, uint64_t))(v77 + 8))(v76, v78);
    swift_bridgeObjectRelease();
    sub_227E2AE8C(v80, v79);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_227E1A5B8("BDSSyncEngine - setting hasPendingUntrackedChanges=false", 0, 0xD00000000000001FLL, 0x8000000227E6D770);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v77 + 8))(v76, v78);
  }
  sub_227E2AE8C(*(_QWORD *)(v0 + 352), *(_QWORD *)(v0 + 288));
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_227E1F124(unint64_t a1)
{
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;

  swift_bridgeObjectRetain_n();
  v2 = sub_227E5F570();
  v3 = sub_227E60248();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    v5 = swift_slowAlloc();
    v11 = v5;
    *(_DWORD *)v4 = 136446210;
    v6 = sub_227D52DBC(0, (unint64_t *)&unk_25592A2C0);
    v7 = swift_bridgeObjectRetain();
    v8 = MEMORY[0x22E2A970C](v7, v6);
    v10 = v9;
    swift_bridgeObjectRelease();
    sub_227D634E0(v8, v10, &v11);
    sub_227E603B0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_227D4F000, v2, v3, "BDSSyncEngine - handleZoneMissingOrDeleted: %{public}s", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x22E2AA8AC](v5, -1, -1);
    MEMORY[0x22E2AA8AC](v4, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  sub_227E1F2DC(a1, 1);
}

void sub_227E1F2DC(unint64_t a1, char a2)
{
  uint64_t v2;
  id *v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  void *v12;
  Swift::OpaquePointer v13;
  uint64_t v14;
  Swift::OpaquePointer recordZonesToSave;

  v5 = (id *)(v2 + OBJC_IVAR____TtC13BookDataStore13BDSSyncEngine_saltManager);
  swift_beginAccess();
  if (*v5)
  {
    objc_msgSend(*v5, sel_invalidateSalt);
  }
  else
  {
    v6 = sub_227E5F570();
    v7 = sub_227E60230();
    if (os_log_type_enabled(v6, v7))
    {
      v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v8 = 0;
      _os_log_impl(&dword_227D4F000, v6, v7, "BDSSyncEngine - invalidateSalt: saltManager not initialized", v8, 2u);
      MEMORY[0x22E2AA8AC](v8, -1, -1);
    }

  }
  BDSSyncEngine.reestablishSalt()();
  if ((a2 & 1) != 0)
  {
    if (!(a1 >> 62))
    {
      v9 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (!v9)
        return;
      recordZonesToSave._rawValue = (void *)MEMORY[0x24BEE4AF8];
      sub_227E604F4();
      goto LABEL_10;
    }
    swift_bridgeObjectRetain();
    v14 = sub_227E6056C();
    swift_bridgeObjectRelease();
    if (v14)
    {
      swift_bridgeObjectRetain();
      v9 = sub_227E6056C();
      swift_bridgeObjectRelease();
      v13._rawValue = (void *)MEMORY[0x24BEE4AF8];
      if (!v9)
      {
LABEL_16:
        BDSSyncEngine.add(recordZonesToSave:)(v13);
        swift_bridgeObjectRelease();
        return;
      }
      recordZonesToSave._rawValue = (void *)MEMORY[0x24BEE4AF8];
      sub_227E604F4();
      if (v9 < 0)
      {
        __break(1u);
        return;
      }
LABEL_10:
      v10 = 0;
      do
      {
        if ((a1 & 0xC000000000000001) != 0)
          v11 = (id)MEMORY[0x22E2A9AFC](v10, a1);
        else
          v11 = *(id *)(a1 + 8 * v10 + 32);
        v12 = v11;
        ++v10;
        objc_msgSend(objc_allocWithZone(MEMORY[0x24BDB91F0]), sel_initWithZoneID_, v11);

        sub_227E604DC();
        sub_227E60500();
        sub_227E6050C();
        sub_227E604E8();
      }
      while (v9 != v10);
      v13._rawValue = recordZonesToSave._rawValue;
      goto LABEL_16;
    }
  }
}

void sub_227E1F528()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint8_t *v11;
  id *v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16[3];

  v1 = v0;
  swift_bridgeObjectRetain_n();
  v2 = sub_227E5F570();
  v3 = sub_227E60248();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    v5 = swift_slowAlloc();
    v16[0] = v5;
    *(_DWORD *)v4 = 136446210;
    v6 = sub_227D52DBC(0, (unint64_t *)&unk_25592A2C0);
    v7 = swift_bridgeObjectRetain();
    v8 = MEMORY[0x22E2A970C](v7, v6);
    v10 = v9;
    swift_bridgeObjectRelease();
    sub_227D634E0(v8, v10, v16);
    sub_227E603B0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_227D4F000, v2, v3, "BDSSyncEngine - handleZoneDidReset: %{public}s", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x22E2AA8AC](v5, -1, -1);
    v11 = v4;
    v1 = v0;
    MEMORY[0x22E2AA8AC](v11, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v12 = (id *)(v1 + OBJC_IVAR____TtC13BookDataStore13BDSSyncEngine_saltManager);
  swift_beginAccess();
  if (*v12)
  {
    objc_msgSend(*v12, sel_invalidateSalt);
  }
  else
  {
    v13 = sub_227E5F570();
    v14 = sub_227E60230();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v15 = 0;
      _os_log_impl(&dword_227D4F000, v13, v14, "BDSSyncEngine - invalidateSalt: saltManager not initialized", v15, 2u);
      MEMORY[0x22E2AA8AC](v15, -1, -1);
    }

  }
  BDSSyncEngine.reestablishSalt()();
}

void sub_227E1F784(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;

  v3 = a1 + 16;
  swift_beginAccess();
  v4 = MEMORY[0x22E2AA96C](v3);
  if (v4)
  {
    v5 = (void *)v4;
    sub_227E1AC20(a2);

  }
}

void sub_227E1F7DC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;

  v3 = a1 + 16;
  swift_beginAccess();
  v4 = MEMORY[0x22E2AA96C](v3);
  if (v4)
  {
    v5 = (void *)v4;
    sub_227E1F834(a2);

  }
}

uint64_t sub_227E1F834(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  void *v21;
  _QWORD v23[2];
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD aBlock[6];

  v2 = v1;
  v4 = sub_227E5F948();
  v26 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v5);
  v7 = (char *)v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_227E5F978();
  v24 = *(_QWORD *)(v8 - 8);
  v25 = v8;
  MEMORY[0x24BDAC7A8](v8, v9);
  v11 = (char *)v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_227E5F8D0();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(_QWORD *)(v13 + 64);
  MEMORY[0x24BDAC7A8](v12, v15);
  v16 = (char *)v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = *(_QWORD *)(v2 + OBJC_IVAR____TtC13BookDataStore13BDSSyncEngine_persistFetchCoordinatorGroup);
  v23[0] = *(_QWORD *)(v2 + OBJC_IVAR____TtC13BookDataStore13BDSSyncEngine_queue);
  v23[1] = v17;
  v18 = swift_allocObject();
  swift_unknownObjectWeakInit();
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v16, a1, v12);
  v19 = (*(unsigned __int8 *)(v13 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v20 = swift_allocObject();
  *(_QWORD *)(v20 + 16) = v18;
  (*(void (**)(unint64_t, char *, uint64_t))(v13 + 32))(v20 + v19, v16, v12);
  aBlock[4] = sub_227E2BD60;
  aBlock[5] = v20;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_227D5A858;
  aBlock[3] = &unk_24F0900F0;
  v21 = _Block_copy(aBlock);
  swift_retain();
  sub_227E5F960();
  v27 = MEMORY[0x24BEE4AF8];
  sub_227D51624((unint64_t *)&unk_253F3AED0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  sub_227D68330((uint64_t *)&unk_253F3AFE0);
  sub_227D515E4((unint64_t *)&unk_253F3AFF0, (uint64_t *)&unk_253F3AFE0, MEMORY[0x24BEE12C8]);
  sub_227E603E0();
  sub_227E60284();
  _Block_release(v21);
  (*(void (**)(char *, uint64_t))(v26 + 8))(v7, v4);
  (*(void (**)(char *, uint64_t))(v24 + 8))(v11, v25);
  swift_release();
  return swift_release();
}

uint64_t sub_227E1FAD4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  void *v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;

  v4 = type metadata accessor for BDSSyncEngineStateMetadata();
  MEMORY[0x24BDAC7A8](v4, v5);
  v7 = (uint64_t *)((char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = sub_227E5F588();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8, v10);
  v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  v13 = MEMORY[0x22E2AA96C](a1 + 16);
  if (v13)
  {
    v14 = (void *)v13;
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v12, v13 + OBJC_IVAR____TtC13BookDataStore13BDSSyncEngine_logger, v8);

    v15 = sub_227E5F570();
    v16 = sub_227E60224();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v17 = 0;
      _os_log_impl(&dword_227D4F000, v15, v16, "BDSSyncEngine - q_saveMetadataState: About to save state metadata", v17, 2u);
      MEMORY[0x22E2AA8AC](v17, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  }
  v18 = (char *)v7 + *(int *)(v4 + 20);
  v19 = sub_227E5F8D0();
  v20 = *(_QWORD *)(v19 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v20 + 16))(v18, a2, v19);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v18, 0, 1, v19);
  *v7 = 0x69676E45636E7953;
  v7[1] = 0xEF6574617453656ELL;
  sub_227E185D4();
  return sub_227DE3A44((uint64_t)v7);
}

uint64_t BDSSyncEngine.nextFetchChangesOptions(_:syncEngine:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3[21] = a2;
  v3[22] = v2;
  v3[20] = a1;
  v4 = sub_227E5F600();
  v3[23] = v4;
  v3[24] = *(_QWORD *)(v4 - 8);
  v3[25] = swift_task_alloc();
  v5 = sub_227E5F6A8();
  v3[26] = v5;
  v3[27] = *(_QWORD *)(v5 - 8);
  v3[28] = swift_task_alloc();
  v6 = sub_227E5F6C0();
  v3[29] = v6;
  v3[30] = *(_QWORD *)(v6 - 8);
  v3[31] = swift_task_alloc();
  v7 = sub_227E5F6E4();
  v3[32] = v7;
  v3[33] = *(_QWORD *)(v7 - 8);
  v3[34] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_227E1FDC4()
{
  uint64_t v0;
  uint64_t v1;
  id *v2;
  unsigned __int8 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  os_log_type_t type;
  int v48;
  uint64_t v49;

  v1 = *(_QWORD *)(v0 + 176);
  sub_227E5F69C();
  v2 = (id *)(v1 + OBJC_IVAR____TtC13BookDataStore13BDSSyncEngine_saltManager);
  swift_beginAccess();
  if (*v2)
  {
    v3 = objc_msgSend(*v2, sel_establishedSalt);
    v4 = swift_allocObject();
    if ((v3 & 1) != 0)
    {
      v5 = *(_QWORD *)(v0 + 176);
      v6 = OBJC_IVAR____TtC13BookDataStore13BDSSyncEngine_zoneLock;
      objc_msgSend(*(id *)(v5 + OBJC_IVAR____TtC13BookDataStore13BDSSyncEngine_zoneLock), sel_lock);
      v7 = (uint64_t *)(v5 + OBJC_IVAR____TtC13BookDataStore13BDSSyncEngine_validCKZones);
      swift_beginAccess();
      v8 = *v7;
      v9 = *(void **)(v5 + v6);
      swift_bridgeObjectRetain();
      objc_msgSend(v9, sel_unlock);
      v10 = sub_227E14834(v8);
      swift_bridgeObjectRelease();
      *(_QWORD *)(v4 + 16) = v10;
      v48 = 1;
      goto LABEL_6;
    }
  }
  else
  {
    v4 = swift_allocObject();
  }
  v48 = 0;
  v10 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v4 + 16) = MEMORY[0x24BEE4AF8];
LABEL_6:
  v11 = *(_QWORD *)(v0 + 240);
  v12 = *(uint64_t **)(v0 + 248);
  v14 = *(_QWORD *)(v0 + 224);
  v13 = *(_QWORD *)(v0 + 232);
  v15 = *(_QWORD *)(v0 + 208);
  v16 = *(_QWORD *)(v0 + 216);
  v17 = *(_QWORD *)(v0 + 168);
  *v12 = v10;
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v11 + 104))(v12, *MEMORY[0x24BDB88A8], v13);
  swift_bridgeObjectRetain();
  sub_227E5F6D8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16))(v14, v17, v15);
  v18 = sub_227E5F570();
  v19 = sub_227E60248();
  if (os_log_type_enabled(v18, v19))
  {
    type = v19;
    v20 = *(_QWORD *)(v0 + 224);
    v44 = *(_QWORD *)(v0 + 216);
    v21 = *(_QWORD *)(v0 + 200);
    v45 = *(_QWORD *)(v0 + 208);
    v42 = *(_QWORD *)(v0 + 192);
    v43 = *(_QWORD *)(v0 + 184);
    v22 = swift_slowAlloc();
    v46 = swift_slowAlloc();
    v49 = v46;
    *(_DWORD *)v22 = 136446978;
    swift_beginAccess();
    v23 = sub_227E5F6B4();
    *(_QWORD *)(v0 + 136) = sub_227D634E0(v23, v24, &v49);
    sub_227E603B0();
    swift_retain();
    v25 = swift_bridgeObjectRelease();
    *(_WORD *)(v22 + 12) = 2082;
    MEMORY[0x22E2A8CD4](v25);
    v26 = sub_227E5F5F4();
    v28 = v27;
    (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v21, v43);
    *(_QWORD *)(v0 + 152) = sub_227D634E0(v26, v28, &v49);
    sub_227E603B0();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v20, v45);
    *(_WORD *)(v22 + 22) = 1024;
    *(_DWORD *)(v0 + 280) = v48;
    sub_227E603B0();
    *(_WORD *)(v22 + 28) = 2082;
    swift_beginAccess();
    v29 = sub_227D52DBC(0, (unint64_t *)&unk_25592A2C0);
    v30 = swift_bridgeObjectRetain();
    v31 = MEMORY[0x22E2A970C](v30, v29);
    v33 = v32;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 144) = sub_227D634E0(v31, v33, &v49);
    sub_227E603B0();
    swift_bridgeObjectRelease();
    swift_release();
    _os_log_impl(&dword_227D4F000, v18, type, "BDSSyncEngine: Returning %{public}s for nextFetchChangesOptions:syncEngine:%{public}s.\nValid salt: %{BOOL}d. Allowed zones: %{public}s", (uint8_t *)v22, 0x26u);
    swift_arrayDestroy();
    MEMORY[0x22E2AA8AC](v46, -1, -1);
    MEMORY[0x22E2AA8AC](v22, -1, -1);

  }
  else
  {
    v35 = *(_QWORD *)(v0 + 216);
    v34 = *(_QWORD *)(v0 + 224);
    v36 = *(_QWORD *)(v0 + 208);
    swift_retain();

    (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v34, v36);
    swift_release();
  }
  v38 = *(_QWORD *)(v0 + 264);
  v37 = *(_QWORD *)(v0 + 272);
  v39 = *(_QWORD *)(v0 + 256);
  v40 = *(_QWORD *)(v0 + 160);
  swift_beginAccess();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v38 + 16))(v40, v37, v39);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v37, v39);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

Swift::Void __swiftcall BDSSyncEngine.saltManager(_:updatedSaltWithVersion:)(BDSSyncEngineSaltManager *_, Swift::String updatedSaltWithVersion)
{
  sub_227E2B834(updatedSaltWithVersion._countAndFlagsBits, (unint64_t)updatedSaltWithVersion._object);
}

void sub_227E202B0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  id *v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  id v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;

  v1 = a1 + 16;
  swift_beginAccess();
  v2 = MEMORY[0x22E2AA96C](v1);
  if (v2)
  {
    v3 = (char *)v2;
    v4 = (id *)(v2 + OBJC_IVAR____TtC13BookDataStore13BDSSyncEngine_saltManager);
    swift_beginAccess();
    if (*v4 && objc_msgSend(*v4, sel_establishedSalt))
    {
      v5 = sub_227E5F570();
      v6 = sub_227E60248();
      if (os_log_type_enabled(v5, v6))
      {
        v7 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v7 = 0;
        _os_log_impl(&dword_227D4F000, v5, v6, "BDSSyncEngine - salt established. Fetching remote changes and updating pending modifications", v7, 2u);
        MEMORY[0x22E2AA8AC](v7, -1, -1);
      }

      BDSSyncEngine.fetchRemoteChanges()();
      sub_227E1B050(0);
    }
    v8 = objc_msgSend(*(id *)&v3[OBJC_IVAR____TtC13BookDataStore13BDSSyncEngine_saltObservers], sel_allObjects);
    sub_227D68330(&qword_2559297A0);
    v9 = sub_227E600BC();

    if (v9 >> 62)
    {
      swift_bridgeObjectRetain();
      v10 = sub_227E6056C();
      swift_bridgeObjectRelease();
      if (v10)
        goto LABEL_9;
    }
    else
    {
      v10 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v10)
      {
LABEL_9:
        if (v10 < 1)
        {
          __break(1u);
          return;
        }
        v11 = 0;
        do
        {
          if ((v9 & 0xC000000000000001) != 0)
          {
            v12 = (void *)MEMORY[0x22E2A9AFC](v11, v9);
          }
          else
          {
            v12 = *(void **)(v9 + 8 * v11 + 32);
            swift_unknownObjectRetain();
          }
          ++v11;
          v13 = (void *)sub_227E5FF78();
          objc_msgSend(v12, sel_saltUpdatedWithSaltVersionIdentifier_, v13);

          swift_unknownObjectRelease();
        }
        while (v10 != v11);
      }
    }
    swift_bridgeObjectRelease();

  }
}

uint64_t BDSSyncEngine.clearMetadata()()
{
  uint64_t v1;

  sub_227D68330(&qword_2559295B8);
  sub_227E602CC();
  return v1;
}

uint64_t sub_227E205B8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  type metadata accessor for BDSSyncEngineMetadataStore();
  result = sub_227DE2D18();
  *a1 = result;
  return result;
}

uint64_t sub_227E20618(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  v4[3] = a4;
  v5 = sub_227E5F6C0();
  v4[4] = v5;
  v4[5] = *(_QWORD *)(v5 - 8);
  v4[6] = swift_task_alloc();
  v6 = sub_227E5F6E4();
  v4[7] = v6;
  v4[8] = *(_QWORD *)(v6 - 8);
  v4[9] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_227E206A0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 24) + OBJC_IVAR____TtC13BookDataStore13BDSSyncEngine_syncEngine);
  *(_QWORD *)(v0 + 80) = v1;
  if (v1)
  {
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 40) + 104))(*(_QWORD *)(v0 + 48), *MEMORY[0x24BDB88A0], *(_QWORD *)(v0 + 32));
    swift_retain();
    sub_227E5F6CC();
    v2 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 88) = v2;
    *v2 = v0;
    v2[1] = sub_227E20774;
    return sub_227E5F618();
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_227E20774()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD *)(*v1 + 64);
  v2 = *(_QWORD *)(*v1 + 72);
  v4 = *(_QWORD *)(*v1 + 56);
  v5 = *v1;
  *(_QWORD *)(v5 + 96) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_release();
  if (v0)
    return swift_task_switch();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v5 + 8))();
}

uint64_t sub_227E2082C()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  void *v7;
  uint8_t *v8;
  _QWORD *v9;
  id v10;
  uint64_t v11;
  void *v12;

  v1 = *(void **)(v0 + 96);
  v2 = v1;
  v3 = v1;
  v4 = v1;
  v5 = sub_227E5F570();
  v6 = sub_227E60230();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = *(void **)(v0 + 96);
    v8 = (uint8_t *)swift_slowAlloc();
    v9 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v8 = 138412290;
    v10 = v7;
    v11 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 16) = v11;
    sub_227E603B0();
    *v9 = v11;

    _os_log_impl(&dword_227D4F000, v5, v6, "BDSSyncEngine - Error fetching remote changes - %@", v8, 0xCu);
    sub_227D68330(&qword_255929230);
    swift_arrayDestroy();
    MEMORY[0x22E2AA8AC](v9, -1, -1);
    MEMORY[0x22E2AA8AC](v8, -1, -1);

  }
  else
  {
    v12 = *(void **)(v0 + 96);

  }
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t BDSSyncEngine.fetchRemoteChanges()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1[2] = v0;
  v2 = sub_227E5F6C0();
  v1[3] = v2;
  v1[4] = *(_QWORD *)(v2 - 8);
  v1[5] = swift_task_alloc();
  v3 = sub_227E5F6E4();
  v1[6] = v3;
  v1[7] = *(_QWORD *)(v3 - 8);
  v1[8] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_227E20A7C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC13BookDataStore13BDSSyncEngine_syncEngine);
  *(_QWORD *)(v0 + 72) = v1;
  if (v1)
  {
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 32) + 104))(*(_QWORD *)(v0 + 40), *MEMORY[0x24BDB88A0], *(_QWORD *)(v0 + 24));
    swift_retain();
    sub_227E5F6CC();
    v2 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 80) = v2;
    *v2 = v0;
    v2[1] = sub_227E20B54;
    return sub_227E5F618();
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
  }
}

uint64_t sub_227E20B54()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD *)(*v1 + 56);
  v2 = *(_QWORD *)(*v1 + 64);
  v4 = *(_QWORD *)(*v1 + 48);
  v5 = *v1;
  *(_QWORD *)(v5 + 88) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_release();
  if (v0)
    return swift_task_switch();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v5 + 8))(0);
}

uint64_t sub_227E20C10()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 88);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
}

Swift::String_optional __swiftcall BDSSyncEngine.recordName(fromRecordType:identifier:)(Swift::String fromRecordType, Swift::String identifier)
{
  uint64_t v2;
  id *v3;
  id v4;
  void *v5;
  void *v6;
  id v7;
  uint64_t v8;
  void *v9;
  void *v10;
  uint64_t v11;
  void *v12;
  Swift::String_optional result;

  v3 = (id *)(v2 + OBJC_IVAR____TtC13BookDataStore13BDSSyncEngine_saltManager);
  swift_beginAccess();
  if (*v3
    && (v4 = *v3,
        v5 = (void *)sub_227E5FF78(),
        v6 = (void *)sub_227E5FF78(),
        v7 = objc_msgSend(v4, sel_recordNameFromRecordType_identifier_, v5, v6),
        v4,
        v5,
        v6,
        v7))
  {
    v8 = sub_227E5FF84();
    v10 = v9;

  }
  else
  {
    v8 = 0;
    v10 = 0;
  }
  v11 = v8;
  v12 = v10;
  result.value._object = v12;
  result.value._countAndFlagsBits = v11;
  return result;
}

id BDSSyncEngine.init()()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  objc_class *ObjectType;
  objc_super v26;
  uint64_t v27;

  ObjectType = (objc_class *)swift_getObjectType();
  v1 = sub_227E602B4();
  v23 = *(_QWORD *)(v1 - 8);
  v24 = v1;
  MEMORY[0x24BDAC7A8](v1, v2);
  v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_227E6029C();
  v6 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5688];
  MEMORY[0x24BDAC7A8](v5, v7);
  v8 = sub_227E5F978();
  MEMORY[0x24BDAC7A8](v8, v9);
  *(_QWORD *)&v0[OBJC_IVAR____TtC13BookDataStore13BDSSyncEngine_registeredDataSourceByRecordType] = MEMORY[0x24BEE4B00];
  *(_QWORD *)&v0[OBJC_IVAR____TtC13BookDataStore13BDSSyncEngine_maxRecordCountPerBatch] = 250;
  v10 = OBJC_IVAR____TtC13BookDataStore13BDSSyncEngine_recordChangePublisher;
  sub_227D68330((uint64_t *)&unk_253F3AEB0);
  swift_allocObject();
  v11 = v0;
  *(_QWORD *)&v0[v10] = sub_227E5F5B8();
  v12 = OBJC_IVAR____TtC13BookDataStore13BDSSyncEngine_recordDeletionPublisher;
  sub_227D68330((uint64_t *)&unk_253F3AE90);
  swift_allocObject();
  *(_QWORD *)&v11[v12] = sub_227E5F5B8();
  v13 = OBJC_IVAR____TtC13BookDataStore13BDSSyncEngine_accountChangedPublisher;
  sub_227D68330((uint64_t *)&unk_253F3AE80);
  swift_allocObject();
  *(_QWORD *)&v11[v13] = sub_227E5F5B8();
  v14 = OBJC_IVAR____TtC13BookDataStore13BDSSyncEngine_endFetchingChangesPublisher;
  sub_227D68330((uint64_t *)&unk_253F3AEA0);
  swift_allocObject();
  *(_QWORD *)&v11[v14] = sub_227E5F5B8();
  v15 = OBJC_IVAR____TtC13BookDataStore13BDSSyncEngine_updateMetadataPublisher;
  sub_227D68330((uint64_t *)&unk_253F3AEC0);
  swift_allocObject();
  *(_QWORD *)&v11[v15] = sub_227E5F5B8();
  v16 = OBJC_IVAR____TtC13BookDataStore13BDSSyncEngine_queue;
  sub_227D52DBC(0, (unint64_t *)&qword_253F3B040);
  sub_227E5F960();
  v27 = MEMORY[0x24BEE4AF8];
  sub_227D51624((unint64_t *)&unk_253F3B030, v6, MEMORY[0x24BEE5698]);
  sub_227D68330((uint64_t *)&unk_253F3B000);
  sub_227D515E4(&qword_253F3B010, (uint64_t *)&unk_253F3B000, MEMORY[0x24BEE12C8]);
  sub_227E603E0();
  (*(void (**)(char *, _QWORD, uint64_t))(v23 + 104))(v4, *MEMORY[0x24BEE5750], v24);
  *(_QWORD *)&v11[v16] = sub_227E602E4();
  v17 = OBJC_IVAR____TtC13BookDataStore13BDSSyncEngine_persistFetchCoordinatorGroup;
  *(_QWORD *)&v11[v17] = dispatch_group_create();
  v18 = &v11[OBJC_IVAR____TtC13BookDataStore13BDSSyncEngine_BDSAPSDelegatePort];
  *(_QWORD *)v18 = 0xD00000000000001CLL;
  *((_QWORD *)v18 + 1) = 0x8000000227E6D1E0;
  *(_QWORD *)&v11[OBJC_IVAR____TtC13BookDataStore13BDSSyncEngine_syncEngine] = 0;
  sub_227E5F57C();
  *(_QWORD *)&v11[OBJC_IVAR____TtC13BookDataStore13BDSSyncEngine_saltManager] = 0;
  v19 = OBJC_IVAR____TtC13BookDataStore13BDSSyncEngine_saltObservers;
  *(_QWORD *)&v11[v19] = objc_msgSend((id)objc_opt_self(), sel_weakObjectsHashTable);
  v20 = MEMORY[0x24BEE4B08];
  *(_QWORD *)&v11[OBJC_IVAR____TtC13BookDataStore13BDSSyncEngine_validCKZones] = MEMORY[0x24BEE4B08];
  v21 = OBJC_IVAR____TtC13BookDataStore13BDSSyncEngine_zoneLock;
  *(_QWORD *)&v11[v21] = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1648]), sel_init);
  v11[OBJC_IVAR____TtC13BookDataStore13BDSSyncEngine_waitingPendingModifications] = 0;
  *(_QWORD *)&v11[OBJC_IVAR____TtC13BookDataStore13BDSSyncEngine_zoneResetsInProgress] = v20;
  *(_QWORD *)&v11[OBJC_IVAR____TtC13BookDataStore13BDSSyncEngine_invalidTokenZoneIDs] = MEMORY[0x24BEE4AF8];

  v26.receiver = v11;
  v26.super_class = ObjectType;
  return objc_msgSendSuper2(&v26, sel_init);
}

id BDSSyncEngine.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_227E21408(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t);

  v5 = (uint64_t (*)(uint64_t))((char *)&dword_255929578 + dword_255929578);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_227DDF744;
  return v5(a1);
}

uint64_t sub_227E2146C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_227DDF744;
  return BDSSyncEngine.nextRecordZoneChangeBatch(_:syncEngine:)(a1, a2);
}

uint64_t sub_227E214CC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_227DDF744;
  return BDSSyncEngine.nextFetchChangesOptions(_:syncEngine:)(a1, a2);
}

uint64_t sub_227E2152C()
{
  uint64_t v0;
  _QWORD *v1;

  swift_getObjectType();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_227E215AC;
  return sub_227E5F924();
}

uint64_t sub_227E215AC(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v4;

  v4 = *v1;
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(a1);
}

uint64_t sub_227E215FC()
{
  uint64_t v0;
  _QWORD *v1;

  swift_getObjectType();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_227E215AC;
  return sub_227E5F930();
}

BDSCloudSyncDiagnosticSyncEngineInfo __swiftcall BDSSyncEngine.diagnosticSyncEngineInfo()()
{
  uint64_t v0;
  id *v1;
  id v2;
  BOOL v3;
  BDSCloudSyncDiagnosticSyncEngineInfo result;

  v1 = (id *)(v0 + OBJC_IVAR____TtC13BookDataStore13BDSSyncEngine_saltManager);
  swift_beginAccess();
  if (*v1)
    v2 = objc_msgSend(*v1, sel_establishedSalt);
  else
    v2 = 0;
  result.super.isa = (Class)objc_msgSend(objc_allocWithZone((Class)BDSCloudSyncDiagnosticSyncEngineInfo), sel_initWithEstablishedSalt_, v2);
  result._establishedSalt = v3;
  return result;
}

void sub_227E21794(uint64_t a1, char a2)
{
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;

  v3 = a1 + 16;
  swift_beginAccess();
  v4 = MEMORY[0x22E2AA96C](v3);
  if (v4)
  {
    v5 = (_BYTE *)v4;
    if ((sub_227E1B610() & 1) == 0)
    {
      if ((a2 & 1) != 0)
      {
        v11 = sub_227E5F570();
        v12 = sub_227E60248();
        if (os_log_type_enabled(v11, v12))
        {
          v13 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v13 = 0;
          _os_log_impl(&dword_227D4F000, v11, v12, "BDSSyncEngine - setting waitingPendingModifications=true since there are pending modifications", v13, 2u);
          MEMORY[0x22E2AA8AC](v13, -1, -1);
        }

        v5[OBJC_IVAR____TtC13BookDataStore13BDSSyncEngine_waitingPendingModifications] = 1;
      }
      goto LABEL_13;
    }
    v6 = OBJC_IVAR____TtC13BookDataStore13BDSSyncEngine_waitingPendingModifications;
    if ((v5[OBJC_IVAR____TtC13BookDataStore13BDSSyncEngine_waitingPendingModifications] & 1) == 0 && (a2 & 1) == 0)
    {
LABEL_13:

      return;
    }
    v7 = *(_QWORD *)&v5[OBJC_IVAR____TtC13BookDataStore13BDSSyncEngine_syncEngine];
    v8 = sub_227E5F570();
    if (v7)
    {
      v9 = sub_227E60248();
      if (os_log_type_enabled(v8, v9))
      {
        v10 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v10 = 0;
        _os_log_impl(&dword_227D4F000, v8, v9, "BDSSyncEngine - CKSyncEngine.setHasPendingModifications called since there were pending modifications", v10, 2u);
        MEMORY[0x22E2AA8AC](v10, -1, -1);
      }

      sub_227E1A5B8("BDSSyncEngine - setting hasPendingUntrackedChanges=true", 1, 0x6C7564656863735FLL, 0xEF2928636E795365);
      v5[v6] = 0;
      goto LABEL_13;
    }
    v14 = sub_227E60230();
    if (os_log_type_enabled(v8, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc();
      v16 = swift_slowAlloc();
      v17 = v16;
      *(_DWORD *)v15 = 136315138;
      sub_227D634E0(0xD00000000000002DLL, 0x8000000227E6D740, &v17);
      sub_227E603B0();
      _os_log_impl(&dword_227D4F000, v8, v14, "BDSSyncEngine - %s: syncEngine not initialized", v15, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x22E2AA8AC](v16, -1, -1);
      MEMORY[0x22E2AA8AC](v15, -1, -1);
    }

  }
}

uint64_t sub_227E21A64(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_227E21AC8;
  return v6(a1);
}

uint64_t sub_227E21AC8()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_227E21B14(uint64_t a1, uint64_t a2)
{
  return sub_227E21B5C(a1, a2, (uint64_t *)&unk_2559297B0, (unint64_t *)&qword_255929460, 0x24BDB91D8, (void (*)(unint64_t, uint64_t))sub_227DD136C);
}

uint64_t sub_227E21B38(uint64_t a1, uint64_t a2)
{
  return sub_227E21B5C(a1, a2, &qword_255928440, &qword_25592A2B0, (uint64_t)off_24F0884D8, (void (*)(unint64_t, uint64_t))sub_227DD1694);
}

uint64_t sub_227E21B5C(uint64_t a1, uint64_t a2, uint64_t *a3, unint64_t *a4, uint64_t a5, void (*a6)(unint64_t, uint64_t))
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  unint64_t v19;
  BOOL v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;

  if (a2)
  {
    sub_227D68330(a3);
    v7 = sub_227E60590();
    v24 = v7;
    sub_227E60524();
    v8 = sub_227E60548();
    if (v8)
    {
      v9 = v8;
      sub_227D52DBC(0, &qword_255928490);
      do
      {
        swift_dynamicCast();
        sub_227D52DBC(0, a4);
        swift_dynamicCast();
        v7 = v24;
        v17 = *(_QWORD *)(v24 + 16);
        if (*(_QWORD *)(v24 + 24) <= v17)
        {
          a6(v17 + 1, 1);
          v7 = v24;
        }
        result = sub_227E60344();
        v11 = v7 + 64;
        v12 = -1 << *(_BYTE *)(v7 + 32);
        v13 = result & ~v12;
        v14 = v13 >> 6;
        if (((-1 << v13) & ~*(_QWORD *)(v7 + 64 + 8 * (v13 >> 6))) != 0)
        {
          v15 = __clz(__rbit64((-1 << v13) & ~*(_QWORD *)(v7 + 64 + 8 * (v13 >> 6)))) | v13 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          v18 = 0;
          v19 = (unint64_t)(63 - v12) >> 6;
          do
          {
            if (++v14 == v19 && (v18 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            v20 = v14 == v19;
            if (v14 == v19)
              v14 = 0;
            v18 |= v20;
            v21 = *(_QWORD *)(v11 + 8 * v14);
          }
          while (v21 == -1);
          v15 = __clz(__rbit64(~v21)) + (v14 << 6);
        }
        *(_QWORD *)(v11 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
        v16 = 8 * v15;
        *(_QWORD *)(*(_QWORD *)(v7 + 48) + v16) = v23;
        *(_QWORD *)(*(_QWORD *)(v7 + 56) + v16) = v9;
        ++*(_QWORD *)(v7 + 16);
        v9 = sub_227E60548();
      }
      while (v9);
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x24BEE4B00];
  }
  return v7;
}

uint64_t sub_227E21DA8(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t result;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  char v19;
  uint64_t *v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;

  v5 = v4;
  v10 = *v4;
  v12 = sub_227DD01C0(a2, a3);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = (v11 & 1) == 0;
  result = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v16 = v11;
  v17 = *(_QWORD *)(v10 + 24);
  if (v17 >= result && (a4 & 1) != 0)
    goto LABEL_7;
  if (v17 >= result && (a4 & 1) == 0)
  {
    result = (uint64_t)sub_227DD2A84();
LABEL_7:
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
    {
LABEL_8:
      *(_QWORD *)(v18[7] + 8 * v12) = a1;
      return result;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    v20 = (uint64_t *)(v18[6] + 16 * v12);
    *v20 = a2;
    v20[1] = a3;
    *(_QWORD *)(v18[7] + 8 * v12) = a1;
    v21 = v18[2];
    v22 = __OFADD__(v21, 1);
    v23 = v21 + 1;
    if (!v22)
    {
      v18[2] = v23;
      return swift_bridgeObjectRetain();
    }
    goto LABEL_14;
  }
  sub_227DD0D88(result, a4 & 1);
  result = sub_227DD01C0(a2, a3);
  if ((v16 & 1) == (v19 & 1))
  {
    v12 = result;
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_227E606B0();
  __break(1u);
  return result;
}

void sub_227E21EF8(uint64_t a1, void *a2, char a3)
{
  sub_227E21F20(a1, a2, a3, (void (*)(void))sub_227DD2DF8, (void (*)(void))sub_227DD136C);
}

void sub_227E21F0C(uint64_t a1, void *a2, char a3)
{
  sub_227E21F20(a1, a2, a3, (void (*)(void))sub_227DD2FB8, (void (*)(void))sub_227DD1694);
}

void sub_227E21F20(uint64_t a1, void *a2, char a3, void (*a4)(void), void (*a5)(void))
{
  _QWORD *v5;
  _QWORD *v8;
  uint64_t v11;
  char v12;
  unint64_t v13;
  uint64_t v14;
  _BOOL8 v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  id v27;

  v8 = v5;
  v11 = *v5;
  v13 = sub_227DD0270((uint64_t)a2);
  v14 = *(_QWORD *)(v11 + 16);
  v15 = (v12 & 1) == 0;
  v16 = v14 + v15;
  if (__OFADD__(v14, v15))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v17 = v12;
  v18 = *(_QWORD *)(v11 + 24);
  if (v18 >= v16 && (a3 & 1) != 0)
    goto LABEL_7;
  if (v18 >= v16 && (a3 & 1) == 0)
  {
    a4();
LABEL_7:
    v19 = (_QWORD *)*v8;
    if ((v17 & 1) != 0)
    {
LABEL_8:
      v20 = v19[7];

      *(_QWORD *)(v20 + 8 * v13) = a1;
      return;
    }
LABEL_11:
    v19[(v13 >> 6) + 8] |= 1 << v13;
    v23 = 8 * v13;
    *(_QWORD *)(v19[6] + v23) = a2;
    *(_QWORD *)(v19[7] + v23) = a1;
    v24 = v19[2];
    v25 = __OFADD__(v24, 1);
    v26 = v24 + 1;
    if (!v25)
    {
      v19[2] = v26;
      v27 = a2;
      return;
    }
    goto LABEL_14;
  }
  a5();
  v21 = sub_227DD0270((uint64_t)a2);
  if ((v17 & 1) == (v22 & 1))
  {
    v13 = v21;
    v19 = (_QWORD *)*v8;
    if ((v17 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  sub_227D52DBC(0, &qword_255928490);
  sub_227E606B0();
  __break(1u);
}

uint64_t sub_227E22094()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  unint64_t v11;
  _QWORD *v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;

  v1 = v0;
  v2 = *v0;
  sub_227D68330(&qword_255929848);
  result = sub_227E60470();
  v4 = result;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 0;
    v29 = (_QWORD *)(v2 + 56);
    v6 = 1 << *(_BYTE *)(v2 + 32);
    if (v6 < 64)
      v7 = ~(-1 << v6);
    else
      v7 = -1;
    v8 = v7 & *(_QWORD *)(v2 + 56);
    v9 = (unint64_t)(v6 + 63) >> 6;
    v10 = result + 56;
    while (1)
    {
      if (v8)
      {
        v13 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        v14 = v13 | (v5 << 6);
      }
      else
      {
        v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v9)
          goto LABEL_33;
        v16 = v29[v15];
        ++v5;
        if (!v16)
        {
          v5 = v15 + 1;
          if (v15 + 1 >= v9)
            goto LABEL_33;
          v16 = v29[v5];
          if (!v16)
          {
            v5 = v15 + 2;
            if (v15 + 2 >= v9)
              goto LABEL_33;
            v16 = v29[v5];
            if (!v16)
            {
              v17 = v15 + 3;
              if (v17 >= v9)
              {
LABEL_33:
                v28 = 1 << *(_BYTE *)(v2 + 32);
                if (v28 > 63)
                  bzero(v29, ((unint64_t)(v28 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v29 = -1 << v28;
                v1 = v0;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v16 = v29[v17];
              if (!v16)
              {
                while (1)
                {
                  v5 = v17 + 1;
                  if (__OFADD__(v17, 1))
                    goto LABEL_39;
                  if (v5 >= v9)
                    goto LABEL_33;
                  v16 = v29[v5];
                  ++v17;
                  if (v16)
                    goto LABEL_23;
                }
              }
              v5 = v17;
            }
          }
        }
LABEL_23:
        v8 = (v16 - 1) & v16;
        v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      v18 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v14);
      v19 = *v18;
      v20 = v18[1];
      sub_227E6071C();
      sub_227E60728();
      sub_227E60728();
      result = sub_227E60734();
      v21 = -1 << *(_BYTE *)(v4 + 32);
      v22 = result & ~v21;
      v23 = v22 >> 6;
      if (((-1 << v22) & ~*(_QWORD *)(v10 + 8 * (v22 >> 6))) != 0)
      {
        v11 = __clz(__rbit64((-1 << v22) & ~*(_QWORD *)(v10 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v24 = 0;
        v25 = (unint64_t)(63 - v21) >> 6;
        do
        {
          if (++v23 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v26 = v23 == v25;
          if (v23 == v25)
            v23 = 0;
          v24 |= v26;
          v27 = *(_QWORD *)(v10 + 8 * v23);
        }
        while (v27 == -1);
        v11 = __clz(__rbit64(~v27)) + (v23 << 6);
      }
      *(_QWORD *)(v10 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
      v12 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v11);
      *v12 = v19;
      v12[1] = v20;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_227E22368()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;

  v1 = v0;
  v2 = *v0;
  sub_227D68330((uint64_t *)&unk_255929790);
  v3 = sub_227E60470();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v30 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v6 = ~(-1 << v5);
    else
      v6 = -1;
    v7 = v6 & *(_QWORD *)(v2 + 56);
    v8 = (unint64_t)(v5 + 63) >> 6;
    v9 = v3 + 56;
    result = swift_retain();
    v11 = 0;
    while (1)
    {
      if (v7)
      {
        v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        v15 = v14 | (v11 << 6);
      }
      else
      {
        v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v8)
          goto LABEL_33;
        v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          v11 = v16 + 1;
          if (v16 + 1 >= v8)
            goto LABEL_33;
          v17 = v30[v11];
          if (!v17)
          {
            v11 = v16 + 2;
            if (v16 + 2 >= v8)
              goto LABEL_33;
            v17 = v30[v11];
            if (!v17)
            {
              v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_33:
                swift_release();
                v1 = v0;
                v29 = 1 << *(_BYTE *)(v2 + 32);
                if (v29 > 63)
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v30 = -1 << v29;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  v11 = v18 + 1;
                  if (__OFADD__(v18, 1))
                    goto LABEL_39;
                  if (v11 >= v8)
                    goto LABEL_33;
                  v17 = v30[v11];
                  ++v18;
                  if (v17)
                    goto LABEL_23;
                }
              }
              v11 = v18;
            }
          }
        }
LABEL_23:
        v7 = (v17 - 1) & v17;
        v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      v19 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
      v20 = *v19;
      v21 = v19[1];
      sub_227E6071C();
      sub_227E60008();
      result = sub_227E60734();
      v22 = -1 << *(_BYTE *)(v4 + 32);
      v23 = result & ~v22;
      v24 = v23 >> 6;
      if (((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        v12 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v27 = v24 == v26;
          if (v24 == v26)
            v24 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(_QWORD *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      v13 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v12);
      *v13 = v20;
      v13[1] = v21;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_227E22644()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t result;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;

  v1 = v0;
  v2 = *v0;
  sub_227D68330(&qword_2559297A8);
  v3 = sub_227E60470();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v28 = v0;
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v6 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v7 = ~(-1 << v5);
    else
      v7 = -1;
    v8 = v7 & *(_QWORD *)(v2 + 56);
    v9 = (unint64_t)(v5 + 63) >> 6;
    v10 = v3 + 56;
    result = swift_retain();
    v12 = 0;
    while (1)
    {
      if (v8)
      {
        v14 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        v15 = v14 | (v12 << 6);
      }
      else
      {
        v16 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v9)
          goto LABEL_33;
        v17 = v6[v16];
        ++v12;
        if (!v17)
        {
          v12 = v16 + 1;
          if (v16 + 1 >= v9)
            goto LABEL_33;
          v17 = v6[v12];
          if (!v17)
          {
            v12 = v16 + 2;
            if (v16 + 2 >= v9)
              goto LABEL_33;
            v17 = v6[v12];
            if (!v17)
            {
              v18 = v16 + 3;
              if (v18 >= v9)
              {
LABEL_33:
                swift_release();
                v1 = v28;
                v27 = 1 << *(_BYTE *)(v2 + 32);
                if (v27 > 63)
                  bzero((void *)(v2 + 56), ((unint64_t)(v27 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v6 = -1 << v27;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v17 = v6[v18];
              if (!v17)
              {
                while (1)
                {
                  v12 = v18 + 1;
                  if (__OFADD__(v18, 1))
                    goto LABEL_39;
                  if (v12 >= v9)
                    goto LABEL_33;
                  v17 = v6[v12];
                  ++v18;
                  if (v17)
                    goto LABEL_23;
                }
              }
              v12 = v18;
            }
          }
        }
LABEL_23:
        v8 = (v17 - 1) & v17;
        v15 = __clz(__rbit64(v17)) + (v12 << 6);
      }
      v19 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v15);
      result = sub_227E60344();
      v20 = -1 << *(_BYTE *)(v4 + 32);
      v21 = result & ~v20;
      v22 = v21 >> 6;
      if (((-1 << v21) & ~*(_QWORD *)(v10 + 8 * (v21 >> 6))) != 0)
      {
        v13 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v23 = 0;
        v24 = (unint64_t)(63 - v20) >> 6;
        do
        {
          if (++v22 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v25 = v22 == v24;
          if (v22 == v24)
            v22 = 0;
          v23 |= v25;
          v26 = *(_QWORD *)(v10 + 8 * v22);
        }
        while (v26 == -1);
        v13 = __clz(__rbit64(~v26)) + (v22 << 6);
      }
      *(_QWORD *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v13) = v19;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

unint64_t sub_227E228E0(uint64_t a1, uint64_t a2)
{
  unint64_t result;

  sub_227E60344();
  result = sub_227E603F8();
  *(_QWORD *)(a2 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
  *(_QWORD *)(*(_QWORD *)(a2 + 48) + 8 * result) = a1;
  ++*(_QWORD *)(a2 + 16);
  return result;
}

uint64_t sub_227E22960(_OWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  char isUniquelyReferenced_nonNull_native;
  __int128 v17;
  uint64_t result;
  uint64_t v19;

  v7 = *v3;
  sub_227E6071C();
  sub_227E60728();
  sub_227E60728();
  v8 = sub_227E60734();
  v9 = -1 << *(_BYTE *)(v7 + 32);
  v10 = v8 & ~v9;
  if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
  {
    v11 = ~v9;
    while (1)
    {
      v12 = (uint64_t *)(*(_QWORD *)(v7 + 48) + 16 * v10);
      v14 = *v12;
      v13 = v12[1];
      if (v14 == a2 && v13 == a3)
        break;
      v10 = (v10 + 1) & v11;
      if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
        goto LABEL_8;
    }
    result = 0;
    v17 = *(_OWORD *)(*(_QWORD *)(*v3 + 48) + 16 * v10);
  }
  else
  {
LABEL_8:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v19 = *v3;
    *v3 = 0x8000000000000000;
    sub_227E230D8(a2, a3, v10, isUniquelyReferenced_nonNull_native);
    *v3 = v19;
    swift_bridgeObjectRelease();
    *(_QWORD *)&v17 = a2;
    *((_QWORD *)&v17 + 1) = a3;
    result = 1;
  }
  *a1 = v17;
  return result;
}

uint64_t sub_227E22A9C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  BOOL v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v17;
  _QWORD *v18;
  BOOL v19;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v21;

  v7 = *v3;
  sub_227E6071C();
  swift_bridgeObjectRetain();
  sub_227E60008();
  v8 = sub_227E60734();
  v9 = -1 << *(_BYTE *)(v7 + 32);
  v10 = v8 & ~v9;
  if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
  {
    v11 = *(_QWORD *)(v7 + 48);
    v12 = (_QWORD *)(v11 + 16 * v10);
    v13 = *v12 == a2 && v12[1] == a3;
    if (v13 || (sub_227E60698() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v14 = (uint64_t *)(*(_QWORD *)(*v3 + 48) + 16 * v10);
      v15 = v14[1];
      *a1 = *v14;
      a1[1] = v15;
      swift_bridgeObjectRetain();
      return 0;
    }
    v17 = ~v9;
    while (1)
    {
      v10 = (v10 + 1) & v17;
      if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
        break;
      v18 = (_QWORD *)(v11 + 16 * v10);
      v19 = *v18 == a2 && v18[1] == a3;
      if (v19 || (sub_227E60698() & 1) != 0)
        goto LABEL_7;
    }
  }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v21 = *v3;
  *v3 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_227E23234(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  *v3 = v21;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_227E22C48(_QWORD *a1, void *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  id v14;
  char v15;
  uint64_t v16;
  id v17;
  char v18;
  void *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  char isUniquelyReferenced_nonNull_native;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v3 = v2;
  v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0)
      v7 = *v2;
    else
      v7 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v8 = a2;
    v9 = sub_227E6041C();

    if (v9)
    {
      swift_bridgeObjectRelease();

      sub_227D52DBC(0, (unint64_t *)&unk_25592A2C0);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v26;
      swift_unknownObjectRelease();
      return 0;
    }
    result = sub_227E60410();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    v21 = sub_227E22EE4(v7, result + 1);
    v27 = v21;
    if (*(_QWORD *)(v21 + 24) <= *(_QWORD *)(v21 + 16))
    {
      v25 = v8;
      sub_227E22644();
      v22 = v27;
    }
    else
    {
      v22 = v21;
      v23 = v8;
    }
    sub_227E228E0((uint64_t)v8, v22);
    *v3 = v22;
  }
  else
  {
    swift_bridgeObjectRetain();
    v11 = sub_227E60344();
    v12 = -1 << *(_BYTE *)(v6 + 32);
    v13 = v11 & ~v12;
    if (((*(_QWORD *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0)
    {
      sub_227D52DBC(0, (unint64_t *)&unk_25592A2C0);
      v14 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v13);
      v15 = sub_227E60350();

      if ((v15 & 1) != 0)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        v19 = *(void **)(*(_QWORD *)(*v2 + 48) + 8 * v13);
        *a1 = v19;
        v20 = v19;
        return 0;
      }
      v16 = ~v12;
      while (1)
      {
        v13 = (v13 + 1) & v16;
        if (((*(_QWORD *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
          break;
        v17 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v13);
        v18 = sub_227E60350();

        if ((v18 & 1) != 0)
          goto LABEL_12;
      }
    }
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v28 = *v2;
    *v2 = 0x8000000000000000;
    v8 = a2;
    sub_227E233CC((uint64_t)v8, v13, isUniquelyReferenced_nonNull_native);
    *v2 = v28;
  }
  swift_bridgeObjectRelease();
  *a1 = v8;
  return 1;
}

uint64_t sub_227E22EE4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  char v9;
  unint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  if (a2)
  {
    sub_227D68330(&qword_2559297A8);
    v2 = sub_227E6047C();
    v14 = v2;
    sub_227E60404();
    if (sub_227E60428())
    {
      sub_227D52DBC(0, (unint64_t *)&unk_25592A2C0);
      do
      {
        swift_dynamicCast();
        v2 = v14;
        if (*(_QWORD *)(v14 + 24) <= *(_QWORD *)(v14 + 16))
        {
          sub_227E22644();
          v2 = v14;
        }
        result = sub_227E60344();
        v4 = v2 + 56;
        v5 = -1 << *(_BYTE *)(v2 + 32);
        v6 = result & ~v5;
        v7 = v6 >> 6;
        if (((-1 << v6) & ~*(_QWORD *)(v2 + 56 + 8 * (v6 >> 6))) != 0)
        {
          v8 = __clz(__rbit64((-1 << v6) & ~*(_QWORD *)(v2 + 56 + 8 * (v6 >> 6)))) | v6 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          v9 = 0;
          v10 = (unint64_t)(63 - v5) >> 6;
          do
          {
            if (++v7 == v10 && (v9 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            v11 = v7 == v10;
            if (v7 == v10)
              v7 = 0;
            v9 |= v11;
            v12 = *(_QWORD *)(v4 + 8 * v7);
          }
          while (v12 == -1);
          v8 = __clz(__rbit64(~v12)) + (v7 << 6);
        }
        *(_QWORD *)(v4 + ((v8 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v8;
        *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v8) = v13;
        ++*(_QWORD *)(v2 + 16);
      }
      while (sub_227E60428());
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x24BEE4B08];
  }
  return v2;
}

uint64_t sub_227E230D8(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t *v4;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;

  v7 = result;
  v8 = *(_QWORD *)(*v4 + 16);
  v9 = *(_QWORD *)(*v4 + 24);
  if (v9 > v8 && (a4 & 1) != 0)
    goto LABEL_15;
  if ((a4 & 1) != 0)
  {
    sub_227E22094();
  }
  else
  {
    if (v9 > v8)
    {
      result = (uint64_t)sub_227E23550();
      goto LABEL_15;
    }
    sub_227E23A3C();
  }
  v10 = *v4;
  sub_227E6071C();
  sub_227E60728();
  sub_227E60728();
  result = sub_227E60734();
  v11 = -1 << *(_BYTE *)(v10 + 32);
  a3 = result & ~v11;
  if (((*(_QWORD *)(v10 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) != 0)
  {
    v12 = ~v11;
    do
    {
      v13 = (uint64_t *)(*(_QWORD *)(v10 + 48) + 16 * a3);
      v15 = *v13;
      v14 = v13[1];
      if (v15 == v7 && v14 == a2)
        goto LABEL_18;
      a3 = (a3 + 1) & v12;
    }
    while (((*(_QWORD *)(v10 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) != 0);
  }
LABEL_15:
  v17 = *v4;
  *(_QWORD *)(*v4 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  v18 = (uint64_t *)(*(_QWORD *)(v17 + 48) + 16 * a3);
  *v18 = v7;
  v18[1] = a2;
  v19 = *(_QWORD *)(v17 + 16);
  v20 = __OFADD__(v19, 1);
  v21 = v19 + 1;
  if (!v20)
  {
    *(_QWORD *)(v17 + 16) = v21;
    return result;
  }
  __break(1u);
LABEL_18:
  result = sub_227E606A4();
  __break(1u);
  return result;
}

uint64_t sub_227E23234(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  BOOL v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;

  v5 = v4;
  v8 = result;
  v9 = *(_QWORD *)(*v4 + 16);
  v10 = *(_QWORD *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0)
    goto LABEL_22;
  if ((a4 & 1) != 0)
  {
    sub_227E22368();
  }
  else
  {
    if (v10 > v9)
    {
      result = (uint64_t)sub_227E236E4();
      goto LABEL_22;
    }
    sub_227E23CDC();
  }
  v11 = *v4;
  sub_227E6071C();
  sub_227E60008();
  result = sub_227E60734();
  v12 = -1 << *(_BYTE *)(v11 + 32);
  a3 = result & ~v12;
  v13 = v11 + 56;
  if (((*(_QWORD *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) != 0)
  {
    v14 = *(_QWORD *)(v11 + 48);
    v15 = (_QWORD *)(v14 + 16 * a3);
    v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (result = sub_227E60698(), (result & 1) != 0))
    {
LABEL_21:
      result = sub_227E606A4();
      __break(1u);
    }
    else
    {
      v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(_QWORD *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) == 0)
          break;
        v18 = (_QWORD *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          result = sub_227E60698();
          if ((result & 1) == 0)
            continue;
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  v20 = *v5;
  *(_QWORD *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  v21 = (uint64_t *)(*(_QWORD *)(v20 + 48) + 16 * a3);
  *v21 = v8;
  v21[1] = a2;
  v22 = *(_QWORD *)(v20 + 16);
  v23 = __OFADD__(v22, 1);
  v24 = v22 + 1;
  if (v23)
    __break(1u);
  else
    *(_QWORD *)(v20 + 16) = v24;
  return result;
}

void sub_227E233CC(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  char v12;
  uint64_t v13;
  id v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;

  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0)
    goto LABEL_14;
  if ((a3 & 1) != 0)
  {
    sub_227E22644();
  }
  else
  {
    if (v7 > v6)
    {
      sub_227E23894();
      goto LABEL_14;
    }
    sub_227E23F88();
  }
  v8 = *v3;
  v9 = sub_227E60344();
  v10 = -1 << *(_BYTE *)(v8 + 32);
  a2 = v9 & ~v10;
  if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    sub_227D52DBC(0, (unint64_t *)&unk_25592A2C0);
    v11 = *(id *)(*(_QWORD *)(v8 + 48) + 8 * a2);
    v12 = sub_227E60350();

    if ((v12 & 1) != 0)
    {
LABEL_13:
      sub_227E606A4();
      __break(1u);
    }
    else
    {
      v13 = ~v10;
      while (1)
      {
        a2 = (a2 + 1) & v13;
        if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        v14 = *(id *)(*(_QWORD *)(v8 + 48) + 8 * a2);
        v15 = sub_227E60350();

        if ((v15 & 1) != 0)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v16 = *v3;
  *(_QWORD *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v16 + 48) + 8 * a2) = a1;
  v17 = *(_QWORD *)(v16 + 16);
  v18 = __OFADD__(v17, 1);
  v19 = v17 + 1;
  if (v18)
    __break(1u);
  else
    *(_QWORD *)(v16 + 16) = v19;
}

void *sub_227E23550()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;

  v1 = v0;
  sub_227D68330(&qword_255929848);
  v2 = *v0;
  v3 = sub_227E60464();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      v9 = v16 + 1;
      if (v16 + 1 >= v13)
        goto LABEL_28;
      v17 = *(_QWORD *)(v6 + 8 * v9);
      if (!v17)
      {
        v9 = v16 + 2;
        if (v16 + 2 >= v13)
          goto LABEL_28;
        v17 = *(_QWORD *)(v6 + 8 * v9);
        if (!v17)
          break;
      }
    }
LABEL_27:
    v12 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(_OWORD *)(*(_QWORD *)(v4 + 48) + 16 * v15) = *(_OWORD *)(*(_QWORD *)(v2 + 48) + 16 * v15);
  }
  v18 = v16 + 3;
  if (v18 >= v13)
    goto LABEL_28;
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v9);
    ++v18;
    if (v17)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_227E236E4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  sub_227D68330((uint64_t *)&unk_255929790);
  v2 = *v0;
  v3 = sub_227E60464();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13)
      goto LABEL_28;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_28;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
      {
        v9 = v20 + 2;
        if (v20 + 2 >= v13)
          goto LABEL_28;
        v21 = *(_QWORD *)(v6 + 8 * v9);
        if (!v21)
          break;
      }
    }
LABEL_27:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    v18 = v17[1];
    v19 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v19 = *v17;
    v19[1] = v18;
    result = (void *)swift_bridgeObjectRetain();
  }
  v22 = v20 + 3;
  if (v22 >= v13)
    goto LABEL_28;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

id sub_227E23894()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;

  v1 = v0;
  sub_227D68330(&qword_2559297A8);
  v2 = *v0;
  v3 = sub_227E60464();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (id)swift_release();
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v18 >= v13)
      goto LABEL_28;
    v19 = *(_QWORD *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      v9 = v18 + 1;
      if (v18 + 1 >= v13)
        goto LABEL_28;
      v19 = *(_QWORD *)(v6 + 8 * v9);
      if (!v19)
      {
        v9 = v18 + 2;
        if (v18 + 2 >= v13)
          goto LABEL_28;
        v19 = *(_QWORD *)(v6 + 8 * v9);
        if (!v19)
          break;
      }
    }
LABEL_27:
    v12 = (v19 - 1) & v19;
    v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(void **)(*(_QWORD *)(v2 + 48) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    result = v17;
  }
  v20 = v18 + 3;
  if (v20 >= v13)
    goto LABEL_28;
  v19 = *(_QWORD *)(v6 + 8 * v20);
  if (v19)
  {
    v9 = v20;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v19 = *(_QWORD *)(v6 + 8 * v9);
    ++v20;
    if (v19)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_227E23A3C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  _QWORD *v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  int64_t v28;

  v1 = v0;
  v2 = *v0;
  sub_227D68330(&qword_255929848);
  result = sub_227E60470();
  v4 = result;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v5 = 0;
  v6 = v2 + 56;
  v7 = 1 << *(_BYTE *)(v2 + 32);
  if (v7 < 64)
    v8 = ~(-1 << v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(v2 + 56);
  v28 = (unint64_t)(v7 + 63) >> 6;
  v10 = result + 56;
  while (1)
  {
    if (v9)
    {
      v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v14 = v13 | (v5 << 6);
      goto LABEL_24;
    }
    v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v28)
      goto LABEL_33;
    v16 = *(_QWORD *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      v5 = v15 + 1;
      if (v15 + 1 >= v28)
        goto LABEL_33;
      v16 = *(_QWORD *)(v6 + 8 * v5);
      if (!v16)
      {
        v5 = v15 + 2;
        if (v15 + 2 >= v28)
          goto LABEL_33;
        v16 = *(_QWORD *)(v6 + 8 * v5);
        if (!v16)
          break;
      }
    }
LABEL_23:
    v9 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_24:
    v18 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v14);
    v19 = *v18;
    v20 = v18[1];
    sub_227E6071C();
    sub_227E60728();
    sub_227E60728();
    result = sub_227E60734();
    v21 = -1 << *(_BYTE *)(v4 + 32);
    v22 = result & ~v21;
    v23 = v22 >> 6;
    if (((-1 << v22) & ~*(_QWORD *)(v10 + 8 * (v22 >> 6))) != 0)
    {
      v11 = __clz(__rbit64((-1 << v22) & ~*(_QWORD *)(v10 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v24 = 0;
      v25 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v26 = v23 == v25;
        if (v23 == v25)
          v23 = 0;
        v24 |= v26;
        v27 = *(_QWORD *)(v10 + 8 * v23);
      }
      while (v27 == -1);
      v11 = __clz(__rbit64(~v27)) + (v23 << 6);
    }
    *(_QWORD *)(v10 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
    v12 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v11);
    *v12 = v19;
    v12[1] = v20;
    ++*(_QWORD *)(v4 + 16);
  }
  v17 = v15 + 3;
  if (v17 >= v28)
  {
LABEL_33:
    result = swift_release();
    v1 = v0;
    goto LABEL_35;
  }
  v16 = *(_QWORD *)(v6 + 8 * v17);
  if (v16)
  {
    v5 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    v5 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v5 >= v28)
      goto LABEL_33;
    v16 = *(_QWORD *)(v6 + 8 * v5);
    ++v17;
    if (v16)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_227E23CDC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  int64_t v29;

  v1 = v0;
  v2 = *v0;
  sub_227D68330((uint64_t *)&unk_255929790);
  v3 = sub_227E60470();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v6 = v2 + 56;
  if (v5 < 64)
    v7 = ~(-1 << v5);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v2 + 56);
  v29 = (unint64_t)(v5 + 63) >> 6;
  v9 = v3 + 56;
  result = swift_retain();
  v11 = 0;
  while (1)
  {
    if (v8)
    {
      v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v29)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      v11 = v16 + 1;
      if (v16 + 1 >= v29)
        goto LABEL_33;
      v17 = *(_QWORD *)(v6 + 8 * v11);
      if (!v17)
      {
        v11 = v16 + 2;
        if (v16 + 2 >= v29)
          goto LABEL_33;
        v17 = *(_QWORD *)(v6 + 8 * v11);
        if (!v17)
          break;
      }
    }
LABEL_23:
    v8 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    v19 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v20 = *v19;
    v21 = v19[1];
    sub_227E6071C();
    swift_bridgeObjectRetain();
    sub_227E60008();
    result = sub_227E60734();
    v22 = -1 << *(_BYTE *)(v4 + 32);
    v23 = result & ~v22;
    v24 = v23 >> 6;
    if (((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      v12 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v27 = v24 == v26;
        if (v24 == v26)
          v24 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(_QWORD *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    v13 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v12);
    *v13 = v20;
    v13[1] = v21;
    ++*(_QWORD *)(v4 + 16);
  }
  v18 = v16 + 3;
  if (v18 >= v29)
  {
LABEL_33:
    result = swift_release_n();
    v1 = v0;
    goto LABEL_35;
  }
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    v11 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v11 >= v29)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v11);
    ++v18;
    if (v17)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_227E23F88()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t result;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  id v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t *v27;

  v1 = v0;
  v2 = *v0;
  sub_227D68330(&qword_2559297A8);
  v3 = sub_227E60470();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v27 = v0;
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v6 = v2 + 56;
  if (v5 < 64)
    v7 = ~(-1 << v5);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v2 + 56);
  v9 = (unint64_t)(v5 + 63) >> 6;
  v10 = v3 + 56;
  result = swift_retain();
  v12 = 0;
  while (1)
  {
    if (v8)
    {
      v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v15 = v14 | (v12 << 6);
      goto LABEL_24;
    }
    v16 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v9)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v12;
    if (!v17)
    {
      v12 = v16 + 1;
      if (v16 + 1 >= v9)
        goto LABEL_33;
      v17 = *(_QWORD *)(v6 + 8 * v12);
      if (!v17)
      {
        v12 = v16 + 2;
        if (v16 + 2 >= v9)
          goto LABEL_33;
        v17 = *(_QWORD *)(v6 + 8 * v12);
        if (!v17)
          break;
      }
    }
LABEL_23:
    v8 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v12 << 6);
LABEL_24:
    v19 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * v15);
    result = sub_227E60344();
    v20 = -1 << *(_BYTE *)(v4 + 32);
    v21 = result & ~v20;
    v22 = v21 >> 6;
    if (((-1 << v21) & ~*(_QWORD *)(v10 + 8 * (v21 >> 6))) != 0)
    {
      v13 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v23 = 0;
      v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v25 = v22 == v24;
        if (v22 == v24)
          v22 = 0;
        v23 |= v25;
        v26 = *(_QWORD *)(v10 + 8 * v22);
      }
      while (v26 == -1);
      v13 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(_QWORD *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v13) = v19;
    ++*(_QWORD *)(v4 + 16);
  }
  v18 = v16 + 3;
  if (v18 >= v9)
  {
LABEL_33:
    result = swift_release_n();
    v1 = v27;
    goto LABEL_35;
  }
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v12 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    v12 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v12 >= v9)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v12);
    ++v18;
    if (v17)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_227E24200(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  BOOL v11;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  BOOL v17;
  uint64_t v19;

  v5 = *v2;
  sub_227E6071C();
  swift_bridgeObjectRetain();
  sub_227E60008();
  v6 = sub_227E60734();
  v7 = -1 << *(_BYTE *)(v5 + 32);
  v8 = v6 & ~v7;
  if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
  {
LABEL_18:
    swift_bridgeObjectRelease();
    return 0;
  }
  v9 = *(_QWORD *)(v5 + 48);
  v10 = (_QWORD *)(v9 + 16 * v8);
  v11 = *v10 == a1 && v10[1] == a2;
  if (!v11 && (sub_227E60698() & 1) == 0)
  {
    v15 = ~v7;
    do
    {
      v8 = (v8 + 1) & v15;
      if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
        goto LABEL_18;
      v16 = (_QWORD *)(v9 + 16 * v8);
      v17 = *v16 == a1 && v16[1] == a2;
    }
    while (!v17 && (sub_227E60698() & 1) == 0);
  }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v13 = *v2;
  v19 = *v2;
  *v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_227E236E4();
    v13 = v19;
  }
  v14 = *(_QWORD *)(*(_QWORD *)(v13 + 48) + 16 * v8);
  sub_227E246F8(v8);
  *v2 = v19;
  swift_bridgeObjectRelease();
  return v14;
}

uint64_t sub_227E2438C(void *a1)
{
  uint64_t *v1;
  uint64_t v3;
  id v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  id v10;
  char v11;
  uint64_t v12;
  id v13;
  char v14;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v16;
  uint64_t v18;

  v3 = *v1;
  if ((*v1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    v4 = a1;
    v5 = sub_227E60434();

    if ((v5 & 1) != 0)
    {
      v6 = sub_227E24560();
      swift_bridgeObjectRelease();
      return v6;
    }
LABEL_12:
    swift_bridgeObjectRelease();
    return 0;
  }
  swift_bridgeObjectRetain();
  v7 = sub_227E60344();
  v8 = -1 << *(_BYTE *)(v3 + 32);
  v9 = v7 & ~v8;
  if (((*(_QWORD *)(v3 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
    goto LABEL_12;
  sub_227D52DBC(0, (unint64_t *)&unk_25592A2C0);
  v10 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v9);
  v11 = sub_227E60350();

  if ((v11 & 1) == 0)
  {
    v12 = ~v8;
    do
    {
      v9 = (v9 + 1) & v12;
      if (((*(_QWORD *)(v3 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
        goto LABEL_12;
      v13 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v9);
      v14 = sub_227E60350();

    }
    while ((v14 & 1) == 0);
  }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v16 = *v1;
  v18 = *v1;
  *v1 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_227E23894();
    v16 = v18;
  }
  v6 = *(_QWORD *)(*(_QWORD *)(v16 + 48) + 8 * v9);
  sub_227E248BC(v9);
  *v1 = v18;
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_227E24560()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  id v8;
  char v9;
  uint64_t v10;
  id v11;
  char v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;

  v1 = v0;
  swift_bridgeObjectRelease();
  v2 = sub_227E60410();
  v3 = swift_unknownObjectRetain();
  v4 = sub_227E22EE4(v3, v2);
  v15 = v4;
  swift_retain();
  v5 = sub_227E60344();
  v6 = -1 << *(_BYTE *)(v4 + 32);
  v7 = v5 & ~v6;
  if (((*(_QWORD *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) != 0)
  {
    sub_227D52DBC(0, (unint64_t *)&unk_25592A2C0);
    v8 = *(id *)(*(_QWORD *)(v4 + 48) + 8 * v7);
    v9 = sub_227E60350();

    if ((v9 & 1) != 0)
    {
LABEL_6:
      swift_release();
      v13 = *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v7);
      sub_227E248BC(v7);
      if ((sub_227E60350() & 1) != 0)
      {
        *v1 = v15;
        return v13;
      }
      __break(1u);
    }
    else
    {
      v10 = ~v6;
      while (1)
      {
        v7 = (v7 + 1) & v10;
        if (((*(_QWORD *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) == 0)
          break;
        v11 = *(id *)(*(_QWORD *)(v4 + 48) + 8 * v7);
        v12 = sub_227E60350();

        if ((v12 & 1) != 0)
          goto LABEL_6;
      }
    }
    swift_release();
    __break(1u);
  }
  result = swift_release();
  __break(1u);
  return result;
}

unint64_t sub_227E246F8(unint64_t result)
{
  uint64_t *v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _OWORD *v13;
  _OWORD *v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;

  v2 = result;
  v3 = *v1;
  v4 = *v1 + 56;
  v5 = -1 << *(_BYTE *)(*v1 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    swift_retain();
    v8 = sub_227E603EC();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      do
      {
        sub_227E6071C();
        swift_bridgeObjectRetain();
        sub_227E60008();
        v10 = sub_227E60734();
        swift_bridgeObjectRelease();
        v11 = v10 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v11 < v9)
            goto LABEL_5;
        }
        else if (v11 >= v9)
        {
          goto LABEL_11;
        }
        if (v2 >= (uint64_t)v11)
        {
LABEL_11:
          v12 = *(_QWORD *)(v3 + 48);
          v13 = (_OWORD *)(v12 + 16 * v2);
          v14 = (_OWORD *)(v12 + 16 * v6);
          if (v2 != v6 || (v2 = v6, v13 >= v14 + 1))
          {
            *v13 = *v14;
            v2 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(_QWORD *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    result = swift_release();
  }
  else
  {
    *(_QWORD *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  v15 = *(_QWORD *)(v3 + 16);
  v16 = __OFSUB__(v15, 1);
  v17 = v15 - 1;
  if (v16)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v3 + 16) = v17;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

unint64_t sub_227E248BC(unint64_t result)
{
  uint64_t *v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  id v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;

  v2 = result;
  v3 = *v1;
  v4 = *v1 + 56;
  v5 = -1 << *(_BYTE *)(*v1 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    swift_retain();
    v8 = sub_227E603EC();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      do
      {
        v10 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v6);
        v11 = sub_227E60344();

        v12 = v11 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v12 >= v9 && v2 >= (uint64_t)v12)
          {
LABEL_16:
            v15 = *(_QWORD *)(v3 + 48);
            v16 = (_QWORD *)(v15 + 8 * v2);
            v17 = (_QWORD *)(v15 + 8 * v6);
            if (v2 != v6 || (v2 = v6, v16 >= v17 + 1))
            {
              *v16 = *v17;
              v2 = v6;
            }
          }
        }
        else if (v12 >= v9 || v2 >= (uint64_t)v12)
        {
          goto LABEL_16;
        }
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(_QWORD *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    result = swift_release();
  }
  else
  {
    *(_QWORD *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  v18 = *(_QWORD *)(v3 + 16);
  v19 = __OFSUB__(v18, 1);
  v20 = v18 - 1;
  if (v19)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v3 + 16) = v20;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

void (*sub_227E24A5C(void (**a1)(id *a1), unint64_t a2, uint64_t a3))(_QWORD *a1)
{
  void (*v6)(id *);

  v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((_QWORD *)v6 + 4) = sub_227E24AB0(v6, a2, a3);
  return sub_227D6E988;
}

void (*sub_227E24AB0(void (*result)(id *a1), unint64_t a2, uint64_t a3))(id *a1)
{
  void (*v3)(id *);
  id v4;

  v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = (id)MEMORY[0x22E2A9AFC](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(_QWORD *)v3 = v4;
    return sub_227E24B1C;
  }
  __break(1u);
  return result;
}

void sub_227E24B1C(id *a1)
{

}

uint64_t sub_227E24B24(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t result;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  _UNKNOWN **v14;

  v13 = type metadata accessor for BDSSyncEnginePipeline();
  v14 = &off_24F091278;
  *(_QWORD *)&v12 = a3;
  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(_QWORD *)(a4[6] + 8 * a1) = a2;
  result = sub_227DD3274(&v12, a4[7] + 40 * a1);
  v9 = a4[2];
  v10 = __OFADD__(v9, 1);
  v11 = v9 + 1;
  if (v10)
    __break(1u);
  else
    a4[2] = v11;
  return result;
}

uint64_t sub_227E24BC0(uint64_t a1, void *a2, char a3, _QWORD *a4)
{
  uint64_t v8;
  _QWORD *v9;
  char v10;
  unint64_t v11;
  uint64_t v12;
  _BOOL8 v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t result;
  unint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;
  _UNKNOWN **v30;

  v8 = type metadata accessor for BDSSyncEnginePipeline();
  v29 = v8;
  v30 = &off_24F091278;
  *(_QWORD *)&v28 = a1;
  v9 = (_QWORD *)*a4;
  v11 = sub_227DD0224((uint64_t)a2);
  v12 = v9[2];
  v13 = (v10 & 1) == 0;
  v14 = v12 + v13;
  if (__OFADD__(v12, v13))
  {
    __break(1u);
    goto LABEL_14;
  }
  v15 = v10;
  v16 = v9[3];
  if (v16 >= v14 && (a3 & 1) != 0)
  {
LABEL_7:
    v17 = (_QWORD *)*a4;
    if ((v15 & 1) != 0)
    {
LABEL_8:
      v18 = v17[7] + 40 * v11;
      sub_227D58120(v18);
      return sub_227DD3274(&v28, v18);
    }
    goto LABEL_11;
  }
  if (v16 >= v14 && (a3 & 1) == 0)
  {
    sub_227DD2C30();
    goto LABEL_7;
  }
  sub_227DD1090(v14, a3 & 1);
  v20 = sub_227DD0224((uint64_t)a2);
  if ((v15 & 1) != (v21 & 1))
  {
LABEL_14:
    sub_227D52DBC(0, &qword_255928450);
    result = sub_227E606B0();
    __break(1u);
    return result;
  }
  v11 = v20;
  v17 = (_QWORD *)*a4;
  if ((v15 & 1) != 0)
    goto LABEL_8;
LABEL_11:
  v22 = sub_227D695C8((uint64_t)&v28, v8);
  MEMORY[0x24BDAC7A8](v22, v22);
  v24 = (uint64_t *)((char *)&v27 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v25 + 16))(v24);
  sub_227E24B24(v11, (uint64_t)a2, *v24, v17);
  v26 = a2;
  return sub_227D58120((uint64_t)&v28);
}

uint64_t sub_227E24D68(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  _QWORD v18[2];
  uint64_t v19;
  uint64_t v20;
  _QWORD aBlock[6];

  v4 = sub_227E5F948();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458];
  v19 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v6);
  v8 = (char *)v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_227E5F978();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9, v11);
  v13 = (char *)v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18[1] = *(_QWORD *)(a2 + OBJC_IVAR____TtC13BookDataStore13BDSSyncEngine_queue);
  v14 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = v14;
  *(_QWORD *)(v15 + 24) = a1;
  aBlock[4] = sub_227E2BFA4;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_227D5A858;
  aBlock[3] = &unk_24F090280;
  v16 = _Block_copy(aBlock);
  swift_retain();
  swift_unknownObjectRetain();
  sub_227E5F960();
  v20 = MEMORY[0x24BEE4AF8];
  sub_227D51624((unint64_t *)&unk_253F3AED0, v5, MEMORY[0x24BEE5468]);
  sub_227D68330((uint64_t *)&unk_253F3AFE0);
  sub_227D515E4((unint64_t *)&unk_253F3AFF0, (uint64_t *)&unk_253F3AFE0, MEMORY[0x24BEE12C8]);
  sub_227E603E0();
  MEMORY[0x22E2A991C](0, v13, v8, v16);
  _Block_release(v16);
  (*(void (**)(char *, uint64_t))(v19 + 8))(v8, v4);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
  swift_release();
  return swift_release();
}

uint64_t sub_227E24F9C()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_227E24FC8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_227DDF744;
  return sub_227E20618(a1, v4, v5, v6);
}

uint64_t sub_227E25034()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_227E25058(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_227DDF744;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_255929548 + dword_255929548))(a1, v4);
}

uint64_t sub_227E250C8()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_227E250EC()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_227E25128(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_227DDF744;
  return sub_227E1C35C(a1, v4, v5, v6, v7, v8);
}

void sub_227E251A8(void *a1)
{
  id v2;
  NSObject *v3;
  os_log_type_t v4;
  uint64_t v5;
  _QWORD *v6;
  id v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12[2];

  v12[1] = *MEMORY[0x24BDAC8D0];
  v2 = a1;
  v3 = sub_227E5F570();
  v4 = sub_227E60248();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = swift_slowAlloc();
    v6 = (_QWORD *)swift_slowAlloc();
    v11 = swift_slowAlloc();
    v12[0] = v11;
    *(_DWORD *)v5 = 136315394;
    sub_227D634E0(0xD00000000000003CLL, 0x8000000227E6D4A0, v12);
    sub_227E603B0();
    *(_WORD *)(v5 + 12) = 2112;
    if (a1)
      v7 = v2;
    sub_227E603B0();
    *v6 = a1;

    _os_log_impl(&dword_227D4F000, v3, v4, "BDSSyncEngine - %s. newUserRecordID - %@", (uint8_t *)v5, 0x16u);
    sub_227D68330(&qword_255929230);
    swift_arrayDestroy();
    MEMORY[0x22E2AA8AC](v6, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x22E2AA8AC](v11, -1, -1);
    MEMORY[0x22E2AA8AC](v5, -1, -1);

  }
  else
  {

  }
  v12[0] = (uint64_t)a1;
  sub_227E5F5AC();
  if (a1)
  {
    BDSSyncEngine.reestablishSalt()();
  }
  else
  {
    v8 = sub_227E5F570();
    v9 = sub_227E60248();
    if (os_log_type_enabled(v8, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v10 = 0;
      _os_log_impl(&dword_227D4F000, v8, v9, "BDSSyncEngine - Skipping salt establishment since no valid account found", v10, 2u);
      MEMORY[0x22E2AA8AC](v10, -1, -1);
    }

  }
}

uint64_t sub_227E25460(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  void *v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t aBlock[6];

  v2 = sub_227E5F948();
  v31 = *(_QWORD *)(v2 - 8);
  v32 = v2;
  MEMORY[0x24BDAC7A8](v2, v3);
  v30 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_227E5F978();
  v28 = *(_QWORD *)(v5 - 8);
  v29 = v5;
  MEMORY[0x24BDAC7A8](v5, v6);
  v27 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = sub_227E5F8D0();
  v8 = *(_QWORD *)(v26 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  MEMORY[0x24BDAC7A8](v26, v10);
  v11 = sub_227E5F570();
  v12 = sub_227E60248();
  if (os_log_type_enabled(v11, v12))
  {
    v25 = a1;
    v13 = (uint8_t *)swift_slowAlloc();
    v14 = swift_slowAlloc();
    aBlock[0] = v14;
    *(_DWORD *)v13 = 136315138;
    v33 = sub_227D634E0(0xD00000000000001DLL, 0x8000000227E6D510, aBlock);
    a1 = v25;
    sub_227E603B0();
    _os_log_impl(&dword_227D4F000, v11, v12, "BDSSyncEngine - %s", v13, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x22E2AA8AC](v14, -1, -1);
    MEMORY[0x22E2AA8AC](v13, -1, -1);
  }

  sub_227D68330((uint64_t *)&unk_253F3AEC0);
  sub_227D515E4((unint64_t *)&unk_2559297F8, (uint64_t *)&unk_253F3AEC0, MEMORY[0x24BDB9CA8]);
  sub_227E5F5C4();
  v15 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v16 = v26;
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v26);
  v17 = (*(unsigned __int8 *)(v8 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = v15;
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v18 + v17, (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v16);
  aBlock[4] = (uint64_t)sub_227E2BCDC;
  aBlock[5] = v18;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_227D5A858;
  aBlock[3] = (uint64_t)&unk_24F0900A0;
  v19 = _Block_copy(aBlock);
  swift_retain();
  v20 = v27;
  sub_227E5F960();
  v33 = MEMORY[0x24BEE4AF8];
  sub_227D51624((unint64_t *)&unk_253F3AED0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  sub_227D68330((uint64_t *)&unk_253F3AFE0);
  sub_227D515E4((unint64_t *)&unk_253F3AFF0, (uint64_t *)&unk_253F3AFE0, MEMORY[0x24BEE12C8]);
  v21 = v30;
  v22 = v32;
  sub_227E603E0();
  MEMORY[0x22E2A991C](0, v20, v21, v19);
  _Block_release(v19);
  (*(void (**)(char *, uint64_t))(v31 + 8))(v21, v22);
  (*(void (**)(char *, uint64_t))(v28 + 8))(v20, v29);
  swift_release();
  return swift_release();
}

void sub_227E25858(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int v9;
  unint64_t v10;
  uint64_t v11;
  id v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  id v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v4 = sub_227E601AC();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v6);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, a2, v4);
  v9 = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v8, v4);
  if (v9 == *MEMORY[0x24BDB8C48])
  {
    v10 = 0xE700000000000000;
    v11 = 0x646574656C6564;
  }
  else if (v9 == *MEMORY[0x24BDB8C40])
  {
    v10 = 0xE600000000000000;
    v11 = 0x646567727570;
  }
  else if (v9 == *MEMORY[0x24BDB8C38])
  {
    v11 = 0xD000000000000012;
    v10 = 0x8000000227E6D560;
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    v10 = 0xE700000000000000;
    v11 = 0x6E776F6E6B6E75;
  }
  v12 = a1;
  swift_bridgeObjectRetain();
  v13 = sub_227E5F570();
  v14 = sub_227E60248();
  if (os_log_type_enabled(v13, v14))
  {
    v15 = swift_slowAlloc();
    v19 = (_QWORD *)swift_slowAlloc();
    v20 = swift_slowAlloc();
    v22 = v20;
    *(_DWORD *)v15 = 136315650;
    v21 = sub_227D634E0(0xD00000000000002ALL, 0x8000000227E6D530, &v22);
    sub_227E603B0();
    *(_WORD *)(v15 + 12) = 2114;
    v21 = (uint64_t)v12;
    v16 = v12;
    sub_227E603B0();
    v17 = v19;
    *v19 = v12;

    *(_WORD *)(v15 + 22) = 2082;
    swift_bridgeObjectRetain();
    v21 = sub_227D634E0(v11, v10, &v22);
    sub_227E603B0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_227D4F000, v13, v14, "BDSSyncEngine - %s: %{public}@, reason=%{public}s", (uint8_t *)v15, 0x20u);
    sub_227D68330(&qword_255929230);
    swift_arrayDestroy();
    MEMORY[0x22E2AA8AC](v17, -1, -1);
    v18 = v20;
    swift_arrayDestroy();
    MEMORY[0x22E2AA8AC](v18, -1, -1);
    MEMORY[0x22E2AA8AC](v15, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();

  }
}

uint64_t sub_227E25BA0(unint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t i;
  unint64_t v5;
  id v6;
  void *v7;
  char v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  id v13;
  char v14;
  uint64_t v15;
  unint64_t j;
  uint64_t v17;
  id v18;
  char v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v3 = a1;
  v27 = MEMORY[0x24BEE4AF8];
  if (a1 >> 62)
    goto LABEL_27;
  for (i = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10); i; i = sub_227E6056C())
  {
    v21 = v3;
    v5 = 0;
    v24 = v3 & 0xFFFFFFFFFFFFFF8;
    v25 = v3 & 0xC000000000000001;
    v23 = v3 + 32;
    v22 = i;
    v26 = a2 + 56;
    while (1)
    {
      if (v25)
      {
        v6 = (id)MEMORY[0x22E2A9AFC](v5, v21);
        goto LABEL_9;
      }
      if (v5 >= *(_QWORD *)(v24 + 16))
        break;
      v6 = *(id *)(v23 + 8 * v5);
LABEL_9:
      v7 = v6;
      if (__OFADD__(v5++, 1))
        goto LABEL_26;
      if ((a2 & 0xC000000000000001) != 0)
      {
        v3 = (uint64_t)v6;
        v9 = sub_227E60434();

        if ((v9 & 1) == 0)
        {

          goto LABEL_5;
        }
LABEL_4:
        v3 = (uint64_t)&v27;
        sub_227E604DC();
        sub_227E60500();
        sub_227E6050C();
        sub_227E604E8();
LABEL_5:
        i = v22;
        if (v5 == v22)
          return v27;
      }
      else
      {
        if (*(_QWORD *)(a2 + 16))
        {
          v3 = (uint64_t)v6;
          v10 = sub_227E60344();
          v11 = -1 << *(_BYTE *)(a2 + 32);
          v12 = v10 & ~v11;
          if (((*(_QWORD *)(v26 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) != 0)
          {
            v3 = sub_227D52DBC(0, (unint64_t *)&unk_25592A2C0);
            v13 = *(id *)(*(_QWORD *)(a2 + 48) + 8 * v12);
            v14 = sub_227E60350();

            if ((v14 & 1) == 0)
            {
              v15 = ~v11;
              for (j = v12 + 1; ; j = v17 + 1)
              {
                v17 = j & v15;
                if (((*(_QWORD *)(v26 + (((j & v15) >> 3) & 0xFFFFFFFFFFFFF8)) >> (j & v15)) & 1) == 0)
                  break;
                v18 = *(id *)(*(_QWORD *)(a2 + 48) + 8 * v17);
                v19 = sub_227E60350();

                if ((v19 & 1) != 0)
                  goto LABEL_4;
              }

              goto LABEL_5;
            }
            goto LABEL_4;
          }
        }

        if (v5 == i)
          return v27;
      }
    }
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    ;
  }
  return MEMORY[0x24BEE4AF8];
}

uint64_t sub_227E25E04(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t, uint64_t);
  uint64_t v16;
  char *v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  char *v22;
  void *v23;
  void (*v24)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t (*v34)(char *, uint64_t, uint64_t);
  char *v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  void (*v39)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v40;
  void (*v41)(char *, uint64_t, uint64_t);
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  unint64_t v47;

  v2 = sub_227E601AC();
  v43 = *(_QWORD *)(v2 - 8);
  v44 = v2;
  MEMORY[0x24BDAC7A8](v2, v3);
  v42 = (char *)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_227E601D0();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  v45 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_227D68330(&qword_255929818);
  MEMORY[0x24BDAC7A8](v9, v10);
  v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(_QWORD *)(a1 + 16);
  if (v13)
  {
    v14 = a1 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    v15 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
    v40 = *(_QWORD *)(v6 + 72);
    v41 = v15;
    v38 = a1;
    swift_bridgeObjectRetain();
    v16 = v13;
    v17 = v45;
    v18 = (uint64_t)v42;
    while (1)
    {
      v41(v12, v14, v5);
      v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
      v19(v12, 0, 1, v5);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v12, 1, v5) == 1)
        break;
      v39 = v19;
      v20 = (*(uint64_t (**)(char *, char *, uint64_t))(v6 + 32))(v17, v12, v5);
      v21 = v5;
      v22 = v12;
      v23 = (void *)MEMORY[0x22E2A9808](v20);
      sub_227E601B8();
      sub_227E25858(v23, v18);

      v12 = v22;
      v5 = v21;
      (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v18, v44);
      (*(void (**)(char *, uint64_t))(v6 + 8))(v17, v21);
      v14 += v40;
      if (!--v16)
      {
        a1 = v38;
        v39(v12, 1, 1, v21);
        goto LABEL_7;
      }
    }
    a1 = v38;
    swift_bridgeObjectRelease();
LABEL_10:
    v26 = v6;
    v27 = OBJC_IVAR____TtC13BookDataStore13BDSSyncEngine_zoneLock;
    v28 = v46;
    objc_msgSend(*(id *)(v46 + OBJC_IVAR____TtC13BookDataStore13BDSSyncEngine_zoneLock), sel_lock);
    v29 = (uint64_t *)(v28 + OBJC_IVAR____TtC13BookDataStore13BDSSyncEngine_validCKZones);
    swift_beginAccess();
    v30 = *v29;
    v31 = *(void **)(v28 + v27);
    swift_bridgeObjectRetain();
    objc_msgSend(v31, sel_unlock);
    v47 = MEMORY[0x24BEE4AF8];
    sub_227E604F4();
    v44 = v30;
    v32 = a1 + ((*(unsigned __int8 *)(v26 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80));
    v33 = *(_QWORD *)(v26 + 72);
    v34 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v26 + 16);
    v35 = v45;
    do
    {
      v36 = v34(v35, v32, v5);
      MEMORY[0x22E2A9808](v36);
      (*(void (**)(char *, uint64_t))(v26 + 8))(v35, v5);
      sub_227E604DC();
      sub_227E60500();
      sub_227E6050C();
      sub_227E604E8();
      v32 += v33;
      --v13;
    }
    while (v13);
    v37 = sub_227E25BA0(v47, v44);
    swift_bridgeObjectRelease();
    swift_release();
    sub_227E1F124(v37);
    return swift_bridgeObjectRelease();
  }
  v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  swift_bridgeObjectRetain();
  v24(v12, 1, 1, v5);
LABEL_7:
  result = swift_bridgeObjectRelease();
  if (v13)
    goto LABEL_10;
  return result;
}

uint64_t sub_227E2618C(void *a1)
{
  id v1;
  NSObject *v2;
  os_log_type_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v8;
  id v9;
  uint64_t v10;

  v1 = a1;
  v2 = sub_227E5F570();
  v3 = sub_227E60248();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = swift_slowAlloc();
    v5 = (_QWORD *)swift_slowAlloc();
    v6 = swift_slowAlloc();
    v10 = v6;
    *(_DWORD *)v4 = 136315394;
    v8 = sub_227D634E0(0xD000000000000017, 0x8000000227E6D580, &v10);
    sub_227E603B0();
    *(_WORD *)(v4 + 12) = 2112;
    v9 = objc_msgSend(v1, sel_recordID, v8);
    sub_227E603B0();
    *v5 = v9;

    _os_log_impl(&dword_227D4F000, v2, v3, "BDSSyncEngine - %s: %@", (uint8_t *)v4, 0x16u);
    sub_227D68330(&qword_255929230);
    swift_arrayDestroy();
    MEMORY[0x22E2AA8AC](v5, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x22E2AA8AC](v6, -1, -1);
    MEMORY[0x22E2AA8AC](v4, -1, -1);
  }
  else
  {

  }
  v10 = (uint64_t)v1;
  return sub_227E5F5AC();
}

uint64_t sub_227E26388(void *a1)
{
  id v1;
  NSObject *v2;
  os_log_type_t v3;
  uint64_t v4;
  _QWORD *v5;
  id v6;
  uint64_t v8;
  uint64_t v9;

  v1 = a1;
  v2 = sub_227E5F570();
  v3 = sub_227E60248();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = swift_slowAlloc();
    v5 = (_QWORD *)swift_slowAlloc();
    v8 = swift_slowAlloc();
    v9 = v8;
    *(_DWORD *)v4 = 136315394;
    sub_227D634E0(0xD000000000000030, 0x8000000227E6D5A0, &v9);
    sub_227E603B0();
    *(_WORD *)(v4 + 12) = 2112;
    v6 = v1;
    sub_227E603B0();
    *v5 = v1;

    _os_log_impl(&dword_227D4F000, v2, v3, "BDSSyncEngine - %s: %@", (uint8_t *)v4, 0x16u);
    sub_227D68330(&qword_255929230);
    swift_arrayDestroy();
    MEMORY[0x22E2AA8AC](v5, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x22E2AA8AC](v8, -1, -1);
    MEMORY[0x22E2AA8AC](v4, -1, -1);
  }
  else
  {

  }
  v9 = (uint64_t)v1;
  return sub_227E5F5AC();
}

uint64_t sub_227E26580(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  uint8_t *v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  id v20;
  _QWORD *v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  id v26;
  char *v27;
  _QWORD v29[2];
  char *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD aBlock[6];

  v2 = v1;
  v4 = sub_227E5F948();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v6);
  v8 = (char *)v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_227E5F978();
  v33 = *(_QWORD *)(v9 - 8);
  v34 = v9;
  MEMORY[0x24BDAC7A8](v9, v10);
  v32 = (char *)v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a1;
  v13 = sub_227E5F570();
  v14 = sub_227E60248();
  if (os_log_type_enabled(v13, v14))
  {
    v29[1] = v2;
    v15 = swift_slowAlloc();
    v31 = v4;
    v16 = (uint8_t *)v15;
    v17 = swift_slowAlloc();
    v30 = v8;
    v18 = (_QWORD *)v17;
    *(_DWORD *)v16 = 138543362;
    aBlock[0] = v12;
    v19 = v5;
    v20 = v12;
    sub_227E603B0();
    *v18 = v12;

    v5 = v19;
    _os_log_impl(&dword_227D4F000, v13, v14, "BDSSyncEngine - didSave recordZone: %{public}@", v16, 0xCu);
    sub_227D68330(&qword_255929230);
    swift_arrayDestroy();
    v21 = v18;
    v8 = v30;
    MEMORY[0x22E2AA8AC](v21, -1, -1);
    v22 = v16;
    v4 = v31;
    MEMORY[0x22E2AA8AC](v22, -1, -1);

  }
  else
  {

  }
  v23 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v24 = swift_allocObject();
  *(_QWORD *)(v24 + 16) = v23;
  *(_QWORD *)(v24 + 24) = v12;
  aBlock[4] = sub_227E2BDD8;
  aBlock[5] = v24;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_227D5A858;
  aBlock[3] = &unk_24F090140;
  v25 = _Block_copy(aBlock);
  v26 = v12;
  swift_retain();
  v27 = v32;
  sub_227E5F960();
  v35 = MEMORY[0x24BEE4AF8];
  sub_227D51624((unint64_t *)&unk_253F3AED0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  sub_227D68330((uint64_t *)&unk_253F3AFE0);
  sub_227D515E4((unint64_t *)&unk_253F3AFF0, (uint64_t *)&unk_253F3AFE0, MEMORY[0x24BEE12C8]);
  sub_227E603E0();
  MEMORY[0x22E2A991C](0, v27, v8, v25);
  _Block_release(v25);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  (*(void (**)(char *, uint64_t))(v33 + 8))(v27, v34);
  swift_release();
  return swift_release();
}

void sub_227E268E0(void *a1)
{
  id v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  _QWORD *v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  void *v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17[5];

  v1 = a1;
  v2 = sub_227E5F570();
  v3 = sub_227E60248();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    v5 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v4 = 138412290;
    v17[0] = (uint64_t)objc_msgSend(v1, sel_recordID);
    sub_227E603B0();
    *v5 = v17[0];

    _os_log_impl(&dword_227D4F000, v2, v3, "BDSSyncEngine - didSave recordID: %@", v4, 0xCu);
    sub_227D68330(&qword_255929230);
    swift_arrayDestroy();
    MEMORY[0x22E2AA8AC](v5, -1, -1);
    MEMORY[0x22E2AA8AC](v4, -1, -1);
  }
  else
  {

  }
  v6 = sub_227E60314();
  v8 = v7;
  v9 = (void *)sub_227E5FF78();
  MEMORY[0x24BDAC7A8](v9, v10);
  sub_227D68330((uint64_t *)&unk_255929780);
  sub_227E602CC();

  if (v16)
  {
    swift_bridgeObjectRelease();
    sub_227DD3274(&v15, (uint64_t)v17);
    sub_227D572A4(v17, v17[3]);
    sub_227E4FD28(v1);
    sub_227D58120((uint64_t)v17);
  }
  else
  {
    sub_227D5809C((uint64_t)&v15, (uint64_t *)&unk_255929780);
    swift_bridgeObjectRetain();
    v11 = sub_227E5F570();
    v12 = sub_227E60230();
    if (os_log_type_enabled(v11, v12))
    {
      v13 = swift_slowAlloc();
      v14 = swift_slowAlloc();
      v17[0] = v14;
      *(_DWORD *)v13 = 136315394;
      *(_QWORD *)&v15 = sub_227D634E0(0xD000000000000016, 0x8000000227E6D6C0, v17);
      sub_227E603B0();
      *(_WORD *)(v13 + 12) = 2082;
      swift_bridgeObjectRetain();
      *(_QWORD *)&v15 = sub_227D634E0(v6, v8, v17);
      sub_227E603B0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_227D4F000, v11, v12, "BDSSyncEngine - %s: missing pipeline for %{public}s", (uint8_t *)v13, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x22E2AA8AC](v14, -1, -1);
      MEMORY[0x22E2AA8AC](v13, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

  }
}

void sub_227E26C6C(void *a1, void *a2)
{
  id v3;
  id v4;
  id v5;
  id v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  _QWORD *v10;
  id v11;
  id v12;
  id v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  NSObject *v31;
  os_log_type_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  NSObject *v38;
  __int128 v39;
  uint64_t v40;
  uint64_t v41[6];

  v3 = a1;
  v4 = a2;
  v5 = v3;
  v6 = a2;
  v7 = sub_227E5F570();
  v8 = sub_227E60248();
  v38 = v7;
  if (os_log_type_enabled(v7, v8))
  {
    v9 = swift_slowAlloc();
    v10 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v9 = 138412546;
    v11 = v5;
    sub_227E603B0();
    *v10 = v5;

    *(_WORD *)(v9 + 12) = 2112;
    v12 = a2;
    v41[0] = _swift_stdlib_bridgeErrorToNSError();
    sub_227E603B0();
    v10[1] = v41[0];

    _os_log_impl(&dword_227D4F000, v38, v8, "BDSSyncEngine - failedToSaveRecordWith recordID: %@, error: %@", (uint8_t *)v9, 0x16u);
    sub_227D68330(&qword_255929230);
    swift_arrayDestroy();
    MEMORY[0x22E2AA8AC](v10, -1, -1);
    MEMORY[0x22E2AA8AC](v9, -1, -1);

  }
  else
  {

  }
  v13 = objc_msgSend(v5, sel_recordName);
  v14 = sub_227E5FF84();
  v16 = v15;

  v41[0] = 46;
  v41[1] = 0xE100000000000000;
  MEMORY[0x24BDAC7A8](v17, v18);
  v36 = v41;
  swift_bridgeObjectRetain();
  v19 = (_QWORD *)sub_227E550E8(0x7FFFFFFFFFFFFFFFLL, 1, sub_227E2BFAC, (uint64_t)&v35, v14, v16);
  swift_bridgeObjectRelease();
  if (v19[2])
  {
    v20 = v19[4];
    v21 = v19[5];
    v22 = v19[6];
    v23 = v19[7];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v24 = MEMORY[0x22E2A9634](v20, v21, v22, v23);
    v26 = v25;
    swift_bridgeObjectRelease();
    v27 = (void *)sub_227E5FF78();
    v29 = MEMORY[0x24BDAC7A8](v27, v28);
    v36 = v30;
    v37 = v29;
    sub_227D68330((uint64_t *)&unk_255929780);
    sub_227E602CC();

    if (v40)
    {
      swift_bridgeObjectRelease();
      sub_227DD3274(&v39, (uint64_t)v41);
      sub_227D572A4(v41, v41[3]);
      sub_227E50444(v5, a2);
      sub_227D58120((uint64_t)v41);
    }
    else
    {
      sub_227D5809C((uint64_t)&v39, (uint64_t *)&unk_255929780);
      swift_bridgeObjectRetain();
      v31 = sub_227E5F570();
      v32 = sub_227E60230();
      if (os_log_type_enabled(v31, v32))
      {
        v33 = swift_slowAlloc();
        v34 = swift_slowAlloc();
        v41[0] = v34;
        *(_DWORD *)v33 = 136315394;
        *(_QWORD *)&v39 = sub_227D634E0(0xD00000000000002BLL, 0x8000000227E6D690, v41);
        sub_227E603B0();
        *(_WORD *)(v33 + 12) = 2082;
        swift_bridgeObjectRetain();
        *(_QWORD *)&v39 = sub_227D634E0(v24, v26, v41);
        sub_227E603B0();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_227D4F000, v31, v32, "BDSSyncEngine - %s: missing pipeline for %{public}s", (uint8_t *)v33, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x22E2AA8AC](v34, -1, -1);
        MEMORY[0x22E2AA8AC](v33, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease_n();
      }

    }
  }
  else
  {
    __break(1u);
  }
}

void sub_227E27158(void *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  id v7;
  _QWORD *v8;
  id v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  _QWORD *v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36[6];

  v2 = v1;
  v3 = a1;
  v4 = sub_227E5F570();
  v5 = sub_227E60248();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc();
    v33 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v6 = 138412290;
    v36[0] = (uint64_t)v3;
    v7 = v3;
    sub_227E603B0();
    v8 = v33;
    *v33 = v3;

    _os_log_impl(&dword_227D4F000, v4, v5, "BDSSyncEngine - didDeleteRecordWith recordID: %@", v6, 0xCu);
    sub_227D68330(&qword_255929230);
    swift_arrayDestroy();
    MEMORY[0x22E2AA8AC](v8, -1, -1);
    MEMORY[0x22E2AA8AC](v6, -1, -1);
  }
  else
  {

  }
  v9 = objc_msgSend(v3, sel_recordName);
  v10 = sub_227E5FF84();
  v12 = v11;

  v36[0] = 46;
  v36[1] = 0xE100000000000000;
  MEMORY[0x24BDAC7A8](v13, v14);
  v31 = v36;
  swift_bridgeObjectRetain();
  v15 = (_QWORD *)sub_227E550E8(0x7FFFFFFFFFFFFFFFLL, 1, sub_227E2BFAC, (uint64_t)&v30, v10, v12);
  swift_bridgeObjectRelease();
  if (v15[2])
  {
    v16 = v15[4];
    v17 = v15[5];
    v18 = v15[6];
    v19 = v15[7];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v20 = MEMORY[0x22E2A9634](v16, v17, v18, v19);
    v22 = v21;
    swift_bridgeObjectRelease();
    v23 = (void *)sub_227E5FF78();
    v25 = MEMORY[0x24BDAC7A8](v23, v24);
    v31 = v2;
    v32 = v25;
    sub_227D68330((uint64_t *)&unk_255929780);
    sub_227E602CC();

    if (v35)
    {
      swift_bridgeObjectRelease();
      sub_227DD3274(&v34, (uint64_t)v36);
      sub_227D572A4(v36, v36[3]);
      sub_227E50830(v3);
      sub_227D58120((uint64_t)v36);
    }
    else
    {
      sub_227D5809C((uint64_t)&v34, (uint64_t *)&unk_255929780);
      swift_bridgeObjectRetain();
      v26 = sub_227E5F570();
      v27 = sub_227E60230();
      if (os_log_type_enabled(v26, v27))
      {
        v28 = swift_slowAlloc();
        v29 = swift_slowAlloc();
        v36[0] = v29;
        *(_DWORD *)v28 = 136315394;
        *(_QWORD *)&v34 = sub_227D634E0(0xD000000000000022, 0x8000000227E6D660, v36);
        sub_227E603B0();
        *(_WORD *)(v28 + 12) = 2082;
        swift_bridgeObjectRetain();
        *(_QWORD *)&v34 = sub_227D634E0(v20, v22, v36);
        sub_227E603B0();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_227D4F000, v26, v27, "BDSSyncEngine - %s: missing pipeline for %{public}s", (uint8_t *)v28, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x22E2AA8AC](v29, -1, -1);
        MEMORY[0x22E2AA8AC](v28, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease_n();
      }

    }
  }
  else
  {
    __break(1u);
  }
}

void sub_227E275C4(void *a1, void *a2)
{
  id v3;
  id v4;
  id v5;
  id v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  _QWORD *v10;
  id v11;
  id v12;
  id v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  NSObject *v31;
  os_log_type_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  NSObject *v38;
  __int128 v39;
  uint64_t v40;
  uint64_t v41[6];

  v3 = a1;
  v4 = a2;
  v5 = v3;
  v6 = a2;
  v7 = sub_227E5F570();
  v8 = sub_227E60248();
  v38 = v7;
  if (os_log_type_enabled(v7, v8))
  {
    v9 = swift_slowAlloc();
    v10 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v9 = 138412546;
    v11 = v5;
    sub_227E603B0();
    *v10 = v5;

    *(_WORD *)(v9 + 12) = 2112;
    v12 = a2;
    v41[0] = _swift_stdlib_bridgeErrorToNSError();
    sub_227E603B0();
    v10[1] = v41[0];

    _os_log_impl(&dword_227D4F000, v38, v8, "BDSSyncEngine - failedToDeleteRecordWith recordID: %@, error: %@", (uint8_t *)v9, 0x16u);
    sub_227D68330(&qword_255929230);
    swift_arrayDestroy();
    MEMORY[0x22E2AA8AC](v10, -1, -1);
    MEMORY[0x22E2AA8AC](v9, -1, -1);

  }
  else
  {

  }
  v13 = objc_msgSend(v5, sel_recordName);
  v14 = sub_227E5FF84();
  v16 = v15;

  v41[0] = 46;
  v41[1] = 0xE100000000000000;
  MEMORY[0x24BDAC7A8](v17, v18);
  v36 = v41;
  swift_bridgeObjectRetain();
  v19 = (_QWORD *)sub_227E550E8(0x7FFFFFFFFFFFFFFFLL, 1, sub_227E2BFAC, (uint64_t)&v35, v14, v16);
  swift_bridgeObjectRelease();
  if (v19[2])
  {
    v20 = v19[4];
    v21 = v19[5];
    v22 = v19[6];
    v23 = v19[7];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v24 = MEMORY[0x22E2A9634](v20, v21, v22, v23);
    v26 = v25;
    swift_bridgeObjectRelease();
    v27 = (void *)sub_227E5FF78();
    v29 = MEMORY[0x24BDAC7A8](v27, v28);
    v36 = v30;
    v37 = v29;
    sub_227D68330((uint64_t *)&unk_255929780);
    sub_227E602CC();

    if (v40)
    {
      swift_bridgeObjectRelease();
      sub_227DD3274(&v39, (uint64_t)v41);
      sub_227D572A4(v41, v41[3]);
      sub_227E50CE4(v5, a2);
      sub_227D58120((uint64_t)v41);
    }
    else
    {
      sub_227D5809C((uint64_t)&v39, (uint64_t *)&unk_255929780);
      swift_bridgeObjectRetain();
      v31 = sub_227E5F570();
      v32 = sub_227E60230();
      if (os_log_type_enabled(v31, v32))
      {
        v33 = swift_slowAlloc();
        v34 = swift_slowAlloc();
        v41[0] = v34;
        *(_DWORD *)v33 = 136315394;
        *(_QWORD *)&v39 = sub_227D634E0(0xD00000000000002DLL, 0x8000000227E6D630, v41);
        sub_227E603B0();
        *(_WORD *)(v33 + 12) = 2082;
        swift_bridgeObjectRetain();
        *(_QWORD *)&v39 = sub_227D634E0(v24, v26, v41);
        sub_227E603B0();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_227D4F000, v31, v32, "BDSSyncEngine - %s: missing pipeline for %{public}s", (uint8_t *)v33, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x22E2AA8AC](v34, -1, -1);
        MEMORY[0x22E2AA8AC](v33, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease_n();
      }

    }
  }
  else
  {
    __break(1u);
  }
}

void sub_227E27AB0(uint64_t a1)
{
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t i;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  unint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int64_t v29;
  uint64_t v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33[5];

  swift_bridgeObjectRetain_n();
  v2 = sub_227E5F570();
  v3 = sub_227E60248();
  v30 = a1;
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    v5 = swift_slowAlloc();
    v33[0] = v5;
    *(_DWORD *)v4 = 136446210;
    swift_bridgeObjectRetain();
    v6 = sub_227E60140();
    v8 = v7;
    swift_bridgeObjectRelease();
    v9 = v6;
    a1 = v30;
    *(_QWORD *)&v31 = sub_227D634E0(v9, v8, v33);
    sub_227E603B0();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_227D4F000, v2, v3, "BDSSyncEngine - didCompleteModifyRecordsBatch recordTypes: %{public}s", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x22E2AA8AC](v5, -1, -1);
    MEMORY[0x22E2AA8AC](v4, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  v28 = a1 + 56;
  v10 = 1 << *(_BYTE *)(a1 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(a1 + 56);
  v29 = (unint64_t)(v10 + 63) >> 6;
  swift_bridgeObjectRetain();
  v13 = 0;
  if (!v12)
    goto LABEL_8;
LABEL_7:
  v14 = __clz(__rbit64(v12));
  v12 &= v12 - 1;
  for (i = v14 | (v13 << 6); ; i = __clz(__rbit64(v17)) + (v13 << 6))
  {
    v19 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * i);
    v21 = *v19;
    v20 = v19[1];
    swift_bridgeObjectRetain();
    v22 = (void *)sub_227E5FF78();
    MEMORY[0x24BDAC7A8](v22, v23);
    sub_227D68330((uint64_t *)&unk_255929780);
    sub_227E602CC();

    if (!v32)
      break;
    swift_bridgeObjectRelease();
    sub_227DD3274(&v31, (uint64_t)v33);
    sub_227D572A4(v33, v33[3]);
    sub_227E52AB4();
    sub_227D58120((uint64_t)v33);
    a1 = v30;
    if (v12)
      goto LABEL_7;
LABEL_8:
    if (__OFADD__(v13++, 1))
    {
      __break(1u);
LABEL_31:
      __break(1u);
      return;
    }
    if (v13 >= v29)
      goto LABEL_28;
    v17 = *(_QWORD *)(v28 + 8 * v13);
    if (!v17)
    {
      v18 = v13 + 1;
      if (v13 + 1 >= v29)
        goto LABEL_28;
      v17 = *(_QWORD *)(v28 + 8 * v18);
      if (!v17)
      {
        v18 = v13 + 2;
        if (v13 + 2 >= v29)
          goto LABEL_28;
        v17 = *(_QWORD *)(v28 + 8 * v18);
        if (!v17)
        {
          v18 = v13 + 3;
          if (v13 + 3 >= v29)
          {
LABEL_28:
            swift_release();
            return;
          }
          v17 = *(_QWORD *)(v28 + 8 * v18);
          if (!v17)
          {
            while (1)
            {
              v13 = v18 + 1;
              if (__OFADD__(v18, 1))
                goto LABEL_31;
              if (v13 >= v29)
                goto LABEL_28;
              v17 = *(_QWORD *)(v28 + 8 * v13);
              ++v18;
              if (v17)
                goto LABEL_18;
            }
          }
        }
      }
      v13 = v18;
    }
LABEL_18:
    v12 = (v17 - 1) & v17;
  }
  sub_227D5809C((uint64_t)&v31, (uint64_t *)&unk_255929780);
  swift_bridgeObjectRetain();
  v24 = sub_227E5F570();
  v25 = sub_227E60230();
  if (os_log_type_enabled(v24, v25))
  {
    v26 = swift_slowAlloc();
    v27 = swift_slowAlloc();
    v33[0] = v27;
    *(_DWORD *)v26 = 136315394;
    *(_QWORD *)&v31 = sub_227D634E0(0xD00000000000002CLL, 0x8000000227E6D600, v33);
    sub_227E603B0();
    *(_WORD *)(v26 + 12) = 2082;
    swift_bridgeObjectRetain();
    *(_QWORD *)&v31 = sub_227D634E0(v21, v20, v33);
    sub_227E603B0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_227D4F000, v24, v25, "BDSSyncEngine - %s: missing pipeline for %{public}s", (uint8_t *)v26, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x22E2AA8AC](v27, -1, -1);
    MEMORY[0x22E2AA8AC](v26, -1, -1);
    swift_release();

  }
  else
  {
    swift_release();

    swift_bridgeObjectRelease_n();
  }
}

uint64_t sub_227E27FC0(void *a1, id a2)
{
  uint64_t v2;
  uint64_t v3;
  id v6;
  id v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  id v13;
  _QWORD *v14;
  void *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v22;
  id v23;
  id v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  _QWORD *v28;
  id v29;
  uint64_t v30;
  uint64_t result;
  _QWORD *v32;
  id v33;
  void *v34;
  uint64_t v35;
  uint64_t v36[3];

  v3 = v2;
  v6 = a2;
  v7 = a2;
  v8 = sub_227E5F570();
  v9 = sub_227E60230();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = swift_slowAlloc();
    v34 = a1;
    v11 = (_QWORD *)swift_slowAlloc();
    v12 = swift_slowAlloc();
    v36[0] = v12;
    *(_DWORD *)v10 = 136315394;
    sub_227D634E0(0xD00000000000002CLL, 0x8000000227E6D470, v36);
    sub_227E603B0();
    *(_WORD *)(v10 + 12) = 2112;
    v13 = a2;
    v35 = _swift_stdlib_bridgeErrorToNSError();
    sub_227E603B0();
    *v11 = v35;

    _os_log_impl(&dword_227D4F000, v8, v9, "BDSSyncEngine - %s. Error - %@", (uint8_t *)v10, 0x16u);
    sub_227D68330(&qword_255929230);
    swift_arrayDestroy();
    v14 = v11;
    a1 = v34;
    MEMORY[0x22E2AA8AC](v14, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x22E2AA8AC](v12, -1, -1);
    MEMORY[0x22E2AA8AC](v10, -1, -1);

  }
  else
  {

  }
  v15 = (void *)sub_227E5F138();
  v16 = objc_msgSend(v15, sel_domain);

  v17 = sub_227E5FF84();
  v19 = v18;

  if (v17 == sub_227E5FF84() && v19 == v20)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v22 = sub_227E60698();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v22 & 1) == 0)
      goto LABEL_14;
  }
  v23 = a2;
  v24 = a2;
  v25 = sub_227E5F570();
  v26 = sub_227E6023C();
  if (os_log_type_enabled(v25, v26))
  {
    v27 = (uint8_t *)swift_slowAlloc();
    v28 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v27 = 138412290;
    v29 = a2;
    v30 = _swift_stdlib_bridgeErrorToNSError();
    v36[0] = v30;
    sub_227E603B0();
    *v28 = v30;

    _os_log_impl(&dword_227D4F000, v25, v26, "BDSSyncEngineDataSource. Receieved error with NSCocoaErrorDomain - %@", v27, 0xCu);
    sub_227D68330(&qword_255929230);
    swift_arrayDestroy();
    MEMORY[0x22E2AA8AC](v28, -1, -1);
    MEMORY[0x22E2AA8AC](v27, -1, -1);

  }
  else
  {

  }
LABEL_14:
  type metadata accessor for Code(0);
  v36[0] = 21;
  sub_227D51624(&qword_2559297C0, (uint64_t (*)(uint64_t))type metadata accessor for Code, (uint64_t)&unk_227E6EC48);
  if ((sub_227E5F0D8() & 1) != 0
    || (v36[0] = 26, (sub_227E5F0D8() & 1) != 0)
    || (v36[0] = 28, result = sub_227E5F0D8(), (result & 1) != 0))
  {
    v32 = (_QWORD *)(v3 + OBJC_IVAR____TtC13BookDataStore13BDSSyncEngine_invalidTokenZoneIDs);
    swift_beginAccess();
    v33 = a1;
    MEMORY[0x22E2A96E8]();
    if (*(_QWORD *)((*v32 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*v32 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_227E600E0();
    sub_227E600F8();
    sub_227E600D4();
    return swift_endAccess();
  }
  return result;
}

void sub_227E28494(void *a1)
{
  id v1;
  NSObject *v2;
  os_log_type_t v3;
  uint64_t v4;
  _QWORD *v5;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;

  v1 = a1;
  v2 = sub_227E5F570();
  v3 = sub_227E60248();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = swift_slowAlloc();
    v5 = (_QWORD *)swift_slowAlloc();
    v8 = swift_slowAlloc();
    v9 = v8;
    *(_DWORD *)v4 = 136315394;
    sub_227D634E0(0xD000000000000027, 0x8000000227E6D6E0, &v9);
    sub_227E603B0();
    *(_WORD *)(v4 + 12) = 2114;
    v6 = v1;
    sub_227E603B0();
    *v5 = v1;

    _os_log_impl(&dword_227D4F000, v2, v3, "BDSSyncEngine - %s: zoneID: %{public}@", (uint8_t *)v4, 0x16u);
    sub_227D68330(&qword_255929230);
    swift_arrayDestroy();
    MEMORY[0x22E2AA8AC](v5, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x22E2AA8AC](v8, -1, -1);
    MEMORY[0x22E2AA8AC](v4, -1, -1);
  }
  else
  {

  }
  v9 = (uint64_t)v1;
  v7 = v1;
  sub_227E5F5AC();

}

uint64_t sub_227E28698()
{
  void *v0;
  char *v1;
  NSObject *v2;
  os_log_type_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  char *v11;
  uint64_t v13;
  uint64_t v14[3];

  v1 = v0;
  v2 = sub_227E5F570();
  v3 = sub_227E60248();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = swift_slowAlloc();
    v5 = swift_slowAlloc();
    v14[0] = v5;
    *(_DWORD *)v4 = 136315394;
    sub_227D634E0(0xD000000000000023, 0x8000000227E6D710, v14);
    sub_227E603B0();
    *(_WORD *)(v4 + 12) = 2082;
    swift_beginAccess();
    v6 = sub_227D52DBC(0, (unint64_t *)&unk_25592A2C0);
    v7 = swift_bridgeObjectRetain();
    v8 = MEMORY[0x22E2A970C](v7, v6);
    v10 = v9;
    swift_bridgeObjectRelease();
    sub_227D634E0(v8, v10, v14);
    sub_227E603B0();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_227D4F000, v2, v3, "BDSSyncEngine - %s: invalidTokenZoneIDs: %{public}s", (uint8_t *)v4, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x22E2AA8AC](v5, -1, -1);
    MEMORY[0x22E2AA8AC](v4, -1, -1);

  }
  else
  {

  }
  v11 = &v1[OBJC_IVAR____TtC13BookDataStore13BDSSyncEngine_invalidTokenZoneIDs];
  swift_beginAccess();
  if (*(_QWORD *)v11 >> 62)
  {
    swift_bridgeObjectRetain();
    v13 = sub_227E6056C();
    swift_bridgeObjectRelease();
    if (!v13)
      return sub_227E5F5AC();
    goto LABEL_6;
  }
  if (*(_QWORD *)((*(_QWORD *)v11 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_6:
    swift_bridgeObjectRetain();
    sub_227E1F528();
    swift_bridgeObjectRelease();
    *(_QWORD *)v11 = MEMORY[0x24BEE4AF8];
    swift_bridgeObjectRelease();
  }
  return sub_227E5F5AC();
}

uint64_t sub_227E28948(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v2[13] = a1;
  v2[14] = v1;
  v3 = sub_227E5F780();
  v2[15] = v3;
  v2[16] = *(_QWORD *)(v3 - 8);
  v2[17] = swift_task_alloc();
  v2[18] = swift_task_alloc();
  v4 = sub_227E5F78C();
  v2[19] = v4;
  v2[20] = *(_QWORD *)(v4 - 8);
  v2[21] = swift_task_alloc();
  v2[22] = swift_task_alloc();
  v5 = sub_227E5F8A0();
  v2[23] = v5;
  v2[24] = *(_QWORD *)(v5 - 8);
  v2[25] = swift_task_alloc();
  v6 = sub_227E5F8B8();
  v2[26] = v6;
  v2[27] = *(_QWORD *)(v6 - 8);
  v2[28] = swift_task_alloc();
  v2[29] = swift_task_alloc();
  v7 = sub_227E5F7F8();
  v2[30] = v7;
  v2[31] = *(_QWORD *)(v7 - 8);
  v2[32] = swift_task_alloc();
  v8 = sub_227E5F834();
  v2[33] = v8;
  v2[34] = *(_QWORD *)(v8 - 8);
  v2[35] = swift_task_alloc();
  v9 = sub_227E5F7D4();
  v2[36] = v9;
  v2[37] = *(_QWORD *)(v9 - 8);
  v2[38] = swift_task_alloc();
  v2[39] = swift_task_alloc();
  v10 = sub_227E6020C();
  v2[40] = v10;
  v2[41] = *(_QWORD *)(v10 - 8);
  v2[42] = swift_task_alloc();
  sub_227D68330(&qword_2559297C8);
  v2[43] = swift_task_alloc();
  v11 = sub_227E601E8();
  v2[44] = v11;
  v2[45] = *(_QWORD *)(v11 - 8);
  v2[46] = swift_task_alloc();
  sub_227D68330(&qword_2559297D0);
  v2[47] = swift_task_alloc();
  v12 = sub_227E5F87C();
  v2[48] = v12;
  v2[49] = *(_QWORD *)(v12 - 8);
  v2[50] = swift_task_alloc();
  v13 = sub_227E601A0();
  v2[51] = v13;
  v2[52] = *(_QWORD *)(v13 - 8);
  v2[53] = swift_task_alloc();
  sub_227D68330(&qword_2559297D8);
  v2[54] = swift_task_alloc();
  v14 = sub_227E5F858();
  v2[55] = v14;
  v2[56] = *(_QWORD *)(v14 - 8);
  v2[57] = swift_task_alloc();
  v15 = sub_227E5F8D0();
  v2[58] = v15;
  v2[59] = *(_QWORD *)(v15 - 8);
  v2[60] = swift_task_alloc();
  v16 = sub_227E5F750();
  v2[61] = v16;
  v2[62] = *(_QWORD *)(v16 - 8);
  v2[63] = swift_task_alloc();
  v17 = sub_227E5F75C();
  v2[64] = v17;
  v2[65] = *(_QWORD *)(v17 - 8);
  v2[66] = swift_task_alloc();
  v18 = sub_227E5F774();
  v2[67] = v18;
  v2[68] = *(_QWORD *)(v18 - 8);
  v2[69] = swift_task_alloc();
  v19 = sub_227E5F8C4();
  v2[70] = v19;
  v2[71] = *(_QWORD *)(v19 - 8);
  v2[72] = swift_task_alloc();
  v2[73] = swift_task_alloc();
  return swift_task_switch();
}

unint64_t sub_227E28CE4()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t);
  unint64_t result;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void **v31;
  void *v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v47;
  id v48;
  NSObject *v49;
  os_log_type_t v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  id *v59;
  id v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  void (*v72)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  void *v76;
  uint64_t v77;
  void *v78;
  void *v79;
  id v80;
  id v81;
  uint64_t *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  uint64_t v92;
  uint64_t i;
  id v94;
  void *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  NSObject *v101;
  os_log_type_t v102;
  uint8_t *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  id v117;
  void *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  unint64_t v125;
  uint64_t v126;
  uint64_t v127;
  void (*v128)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  void *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  NSObject *v136;
  os_log_type_t v137;
  uint8_t *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  NSObject *v149;
  os_log_type_t v150;
  _BOOL4 v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint8_t *v155;
  _QWORD *v156;
  uint64_t v157;
  void (*v158)(uint64_t, uint64_t);
  _QWORD *v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  void *v165;
  void *v166;
  id v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t *v170;
  uint64_t *v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  NSObject *v177;
  _QWORD *v178;
  os_log_type_t v179;
  _BOOL4 v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint8_t *v185;
  uint64_t v186;
  uint64_t v187;
  unint64_t v188;
  void (*v189)(uint64_t, uint64_t);
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  NSObject *v196;
  _QWORD *v197;
  os_log_type_t v198;
  _BOOL4 v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t *v202;
  uint8_t *v203;
  uint64_t v204;
  uint64_t v205;
  unint64_t v206;
  NSObject *v207;
  os_log_type_t v208;
  _BOOL4 v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint8_t *v213;
  uint64_t v214;
  uint64_t v215;
  unint64_t v216;
  void (*v217)(uint64_t, uint64_t);
  uint64_t v218;
  uint64_t v219;
  NSObject *v220;
  os_log_type_t v221;
  _BOOL4 v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint8_t *v226;
  uint64_t v227;
  uint64_t *v228;
  uint64_t v229;
  unint64_t v230;
  unint64_t v231;
  unint64_t v232;
  uint64_t v233;
  uint64_t v234;
  unint64_t v235;
  uint64_t j;
  id v237;
  NSObject *v238;
  os_log_type_t v239;
  uint64_t v240;
  _QWORD *v241;
  uint64_t v242;
  uint64_t v243;
  int64_t v244;
  uint64_t v245;
  uint64_t v246;
  unint64_t v247;
  unint64_t v248;
  unint64_t v249;
  int64_t v250;
  unint64_t v251;
  int64_t v252;
  uint64_t v253;
  id v254;
  id v255;
  id v256;
  id v257;
  id v258;
  NSObject *v259;
  os_log_type_t v260;
  uint64_t v261;
  _QWORD *v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  unint64_t v269;
  uint64_t v270;
  void *v271;
  id v272;
  id v273;
  uint64_t v274;
  unint64_t v275;
  unint64_t v276;
  uint64_t v277;
  uint64_t v278;
  _QWORD *v279;
  uint64_t v280;
  unint64_t v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  void *v290;
  uint64_t v291;
  uint64_t v292;
  _QWORD *v293;
  uint64_t v294;
  id v295;
  void *v296;
  id v297;
  unint64_t v298;
  unint64_t v299;
  uint64_t v300;
  _QWORD *v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;
  int64_t v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  unint64_t v314;
  unint64_t v315;
  unint64_t v316;
  int64_t v317;
  unint64_t v318;
  int64_t v319;
  uint64_t v320;
  uint64_t v321;
  void *v322;
  id v323;
  id v324;
  id v325;
  unint64_t v326;
  unint64_t v327;
  uint64_t v328;
  _QWORD *v329;
  uint64_t v330;
  uint64_t v331;
  uint64_t v332;
  uint64_t v333;
  uint64_t v334;
  uint64_t v335;
  uint64_t v336;
  id v337;
  uint64_t v338;
  uint64_t v339;
  uint64_t v340;
  _QWORD *v341;
  uint64_t v342;
  uint64_t v343;
  uint64_t (*v344)(_QWORD, unint64_t, _QWORD);
  uint64_t v345;
  _QWORD *v346;
  int64_t v347;
  uint64_t v348;
  uint64_t v349;
  uint64_t v350;
  _QWORD *v351;
  uint64_t v352;
  uint64_t v353;
  uint64_t v354;
  uint64_t v355;
  uint64_t v356;
  unint64_t v357;
  uint64_t v358;
  void (*v359)(uint64_t, unint64_t, uint64_t);
  void (*v360)(uint64_t, unint64_t, uint64_t);
  void (*v361)(uint64_t, unint64_t, uint64_t);
  uint64_t *v362;
  uint64_t v363;
  int64_t v364;
  uint64_t v365;
  _QWORD *v366;
  int64_t v367;
  _QWORD *v368;
  uint64_t v369;
  uint64_t v370[4];

  v1 = v0;
  v3 = v0 + 13;
  v2 = v0[13];
  v4 = v0[73];
  v6 = v0[70];
  v5 = v3[58];
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
  v7(v4, v2, v6);
  v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 88))(v4, v6);
  v368 = v1;
  if (v8 == *MEMORY[0x24BDB8960])
  {
    v9 = v1[73];
    v10 = v1[71];
    v11 = v1[70];
    v13 = v1[62];
    v12 = v1[63];
    v15 = v1[60];
    v14 = v1[61];
    v16 = v1[59];
    v17 = v368[58];
    (*(void (**)(uint64_t, uint64_t))(v10 + 96))(v9, v11);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 32))(v12, v9, v14);
    sub_227E5F744();
    sub_227E25460(v15);
    v18 = *(void (**)(uint64_t, uint64_t))(v16 + 8);
    v1 = v368;
    v18(v15, v17);
LABEL_3:
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
LABEL_4:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return ((uint64_t (*)(void))v1[1])();
  }
  if (v8 == *MEMORY[0x24BDB89A0])
  {
    v20 = v1[73];
    v21 = v1[69];
    v22 = v1[68];
    v23 = v1[67];
    v24 = v1[66];
    v25 = v1[65];
    v26 = v1[64];
    (*(void (**)(uint64_t, _QWORD))(v1[71] + 96))(v20, v1[70]);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 32))(v21, v20, v23);
    sub_227E5F768();
    v27 = (*(uint64_t (**)(uint64_t, uint64_t))(v25 + 88))(v24, v26);
    if (v27 != *MEMORY[0x24BDB8970])
    {
      if (v27 == *MEMORY[0x24BDB8978])
      {
        v56 = v1[69];
        v57 = v1[68];
        v58 = v1[67];
        v59 = (id *)v1[66];
        (*(void (**)(id *, _QWORD))(v1[65] + 96))(v59, v1[64]);
        v60 = *v59;
        sub_227E251A8(0);

        (*(void (**)(uint64_t, uint64_t))(v57 + 8))(v56, v58);
        goto LABEL_4;
      }
      if (v27 != *MEMORY[0x24BDB8968])
      {
        v101 = sub_227E5F570();
        v102 = sub_227E60230();
        if (os_log_type_enabled(v101, v102))
        {
          v103 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v103 = 0;
          _os_log_impl(&dword_227D4F000, v101, v102, "BDSSyncEngine - handleEvent(.accountChange): unknown changeType", v103, 2u);
          MEMORY[0x22E2AA8AC](v103, -1, -1);
        }
        v104 = v1[69];
        v105 = v1[68];
        v106 = v1[67];
        v107 = v1[66];
        v108 = v1[65];
        v109 = v1[64];

        (*(void (**)(uint64_t, uint64_t))(v105 + 8))(v104, v106);
        (*(void (**)(uint64_t, uint64_t))(v108 + 8))(v107, v109);
        goto LABEL_4;
      }
      v12 = v1[69];
      v13 = v1[68];
      v14 = v1[67];
      v77 = v1[66];
      (*(void (**)(uint64_t, _QWORD))(v1[65] + 96))(v77, v1[64]);
      v78 = *(void **)v77;
      v79 = *(void **)(v77 + 8);
      v80 = v78;
      v81 = v79;
      sub_227E251A8(v79);

      goto LABEL_3;
    }
    v28 = v1[69];
    v29 = v1[68];
    v30 = v1[67];
    v31 = (void **)v1[66];
    (*(void (**)(void **, _QWORD))(v1[65] + 96))(v31, v1[64]);
    v32 = *v31;
    v33 = v32;
    sub_227E251A8(v32);

LABEL_8:
    (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v28, v30);
    goto LABEL_4;
  }
  if (v8 == *MEMORY[0x24BDB8A80])
  {
    v34 = v1[73];
    v35 = v1[56];
    v36 = v1[57];
    v37 = v1[55];
    (*(void (**)(uint64_t, _QWORD))(v1[71] + 96))(v34, v1[70]);
    v38 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v35 + 32))(v36, v34, v37);
    v39 = MEMORY[0x22E2A8E84](v38);
    v40 = *(_QWORD *)(v39 + 16);
    v41 = v1[52];
    if (v40)
    {
      v42 = v39 + ((*(unsigned __int8 *)(v41 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80));
      v43 = *(_QWORD *)(v41 + 72);
      v359 = *(void (**)(uint64_t, unint64_t, uint64_t))(v41 + 16);
      v348 = v43;
      while (1)
      {
        v44 = v1[54];
        v45 = v1[51];
        v359(v44, v42, v45);
        v46 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v41 + 56);
        v46(v44, 0, 1, v45);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v41 + 48))(v44, 1, v45) == 1)
          break;
        v47 = (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(v41 + 32))(v1[53], v1[54], v1[51]);
        v48 = (id)MEMORY[0x22E2A97D8](v47);
        v49 = sub_227E5F570();
        v50 = sub_227E60248();
        if (os_log_type_enabled(v49, v50))
        {
          v51 = swift_slowAlloc();
          v52 = (_QWORD *)swift_slowAlloc();
          v53 = swift_slowAlloc();
          v370[0] = v53;
          *(_DWORD *)v51 = 136315394;
          *(_QWORD *)(v51 + 4) = sub_227D634E0(0xD000000000000020, 0x8000000227E6D4E0, v370);
          *(_WORD *)(v51 + 12) = 2114;
          *(_QWORD *)(v51 + 14) = v48;
          *v52 = v48;

          _os_log_impl(&dword_227D4F000, v49, v50, "BDSSyncEngine - %s: %{public}@", (uint8_t *)v51, 0x16u);
          sub_227D68330(&qword_255929230);
          swift_arrayDestroy();
          v54 = v52;
          v43 = v348;
          MEMORY[0x22E2AA8AC](v54, -1, -1);
          swift_arrayDestroy();
          MEMORY[0x22E2AA8AC](v53, -1, -1);
          v55 = v51;
          v1 = v368;
          MEMORY[0x22E2AA8AC](v55, -1, -1);
        }
        else
        {

        }
        (*(void (**)(_QWORD, _QWORD))(v41 + 8))(v1[53], v1[51]);
        v42 += v43;
        if (!--v40)
          goto LABEL_40;
      }
    }
    else
    {
      v46 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v41 + 56);
LABEL_40:
      v46(v1[54], 1, 1, v1[51]);
    }
    v97 = v1[56];
    v96 = v1[57];
    v98 = v1[55];
    v99 = swift_bridgeObjectRelease();
    v100 = MEMORY[0x22E2A8E90](v99);
    sub_227E25E04(v100);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v97 + 8))(v96, v98);
    goto LABEL_4;
  }
  if (v8 == *MEMORY[0x24BDB8AA0])
  {
    v61 = v1[73];
    v62 = v1[49];
    v63 = v1[50];
    v64 = v1[48];
    (*(void (**)(uint64_t, _QWORD))(v1[71] + 96))(v61, v1[70]);
    v65 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v62 + 32))(v63, v61, v64);
    v66 = MEMORY[0x22E2A8EA8](v65);
    v67 = *(_QWORD *)(v66 + 16);
    v68 = v1[45];
    if (v67)
    {
      v69 = v66 + ((*(unsigned __int8 *)(v68 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v68 + 80));
      v352 = *(_QWORD *)(v68 + 72);
      v360 = *(void (**)(uint64_t, unint64_t, uint64_t))(v68 + 16);
      while (1)
      {
        v70 = v1[47];
        v71 = v1[44];
        v360(v70, v69, v71);
        v72 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v68 + 56);
        v72(v70, 0, 1, v71);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v68 + 48))(v70, 1, v71) == 1)
          break;
        v73 = v1[46];
        v74 = v1[44];
        v75 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v68 + 32))(v73, v1[47], v74);
        v76 = (void *)MEMORY[0x22E2A9820](v75);
        sub_227E2618C(v76);

        (*(void (**)(uint64_t, uint64_t))(v68 + 8))(v73, v74);
        v69 += v352;
        if (!--v67)
          goto LABEL_55;
      }
    }
    else
    {
      v72 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v68 + 56);
LABEL_55:
      v72(v1[47], 1, 1, v1[44]);
    }
    v121 = swift_bridgeObjectRelease();
    v122 = MEMORY[0x22E2A8EB4](v121);
    v123 = *(_QWORD *)(v122 + 16);
    v124 = v1[41];
    if (v123)
    {
      v125 = v122 + ((*(unsigned __int8 *)(v124 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v124 + 80));
      v353 = *(_QWORD *)(v124 + 72);
      v361 = *(void (**)(uint64_t, unint64_t, uint64_t))(v124 + 16);
      while (1)
      {
        v126 = v1[43];
        v127 = v1[40];
        v361(v126, v125, v127);
        v128 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v124 + 56);
        v128(v126, 0, 1, v127);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v124 + 48))(v126, 1, v127) == 1)
          break;
        v129 = v1[42];
        v130 = v1[40];
        v131 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v124 + 32))(v129, v1[43], v130);
        v132 = (void *)MEMORY[0x22E2A9844](v131);
        sub_227E601F4();
        sub_227E26388(v132);

        v1 = v368;
        swift_bridgeObjectRelease();
        (*(void (**)(uint64_t, uint64_t))(v124 + 8))(v129, v130);
        v125 += v353;
        if (!--v123)
          goto LABEL_62;
      }
    }
    else
    {
      v128 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v124 + 56);
LABEL_62:
      v128(v1[43], 1, 1, v1[40]);
    }
    v133 = v1[49];
    v134 = v1[50];
    v135 = v1[48];
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v133 + 8))(v134, v135);
    goto LABEL_4;
  }
  v82 = v3 - 1;
  if (v8 != *MEMORY[0x24BDB8A18])
  {
    if (v8 == *MEMORY[0x24BDB8A60])
    {
      v110 = v1[73];
      v111 = v1[34];
      v112 = v1[35];
      v113 = v1[33];
      (*(void (**)(uint64_t, _QWORD))(v1[71] + 96))(v110, v1[70]);
      v114 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v111 + 32))(v112, v110, v113);
      v369 = MEMORY[0x24BEE4B08];
      result = MEMORY[0x22E2A8E6C](v114);
      v5 = result;
      if (result >> 62)
        goto LABEL_145;
      v115 = *(_QWORD *)((result & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v115)
        goto LABEL_48;
LABEL_146:
      v264 = swift_bridgeObjectRelease();
      v265 = MEMORY[0x22E2A8E48](v264);
      v266 = *(_QWORD *)(v265 + 16);
      v341 = v3;
      if (v266)
      {
        v267 = 0;
        v268 = v1[31];
        v269 = v265 + ((*(unsigned __int8 *)(v268 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v268 + 80));
        v342 = *(_QWORD *)(v268 + 72);
        v343 = v268;
        v344 = *(uint64_t (**)(_QWORD, unint64_t, _QWORD))(v268 + 16);
        v346 = v3 - 11;
        do
        {
          v270 = v344(v1[32], v269, v1[30]);
          v271 = (void *)MEMORY[0x22E2A8E30](v270);
          v272 = objc_msgSend(v271, sel_recordID);

          v273 = objc_msgSend(v272, sel_recordName);
          v274 = sub_227E5FF84();
          v276 = v275;

          v1[2] = 46;
          v1[3] = 0xE100000000000000;
          v277 = swift_task_alloc();
          *(_QWORD *)(v277 + 16) = v346;
          swift_bridgeObjectRetain();
          v278 = v267;
          v279 = (_QWORD *)sub_227E550E8(0x7FFFFFFFFFFFFFFFLL, 1, sub_227E2BCBC, v277, v274, v276);
          swift_bridgeObjectRelease();
          swift_task_dealloc();
          if (!v279[2])
            goto LABEL_183;
          v280 = v1[32];
          v356 = v1[30];
          v365 = v266;
          v281 = v269;
          v282 = v279[4];
          v283 = v279[5];
          v284 = v279[6];
          v285 = v279[7];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          v286 = MEMORY[0x22E2A9634](v282, v283, v284, v285);
          v288 = v287;
          swift_bridgeObjectRelease();
          v289 = v288;
          v267 = v278;
          sub_227E22A9C(v370, v286, v289);
          swift_bridgeObjectRelease();
          v290 = (void *)sub_227E5F7E0();
          sub_227E26C6C(v272, v290);

          (*(void (**)(uint64_t, uint64_t))(v343 + 8))(v280, v356);
          v269 = v281 + v342;
          v266 = v365 - 1;
        }
        while (v365 != 1);
      }
      v291 = swift_bridgeObjectRelease();
      result = MEMORY[0x22E2A8E60](v291);
      v274 = result;
      if (result >> 62)
        goto LABEL_187;
      v292 = *(_QWORD *)((result & 0xFFFFFFFFFFFFF8) + 0x10);
      v293 = v341;
      if (!v292)
        goto LABEL_160;
      while (v292 >= 1)
      {
        v294 = 0;
        v357 = v274 & 0xC000000000000001;
        v366 = v293 - 7;
        v350 = v274;
        while (1)
        {
          v295 = v357 ? (id)MEMORY[0x22E2A9AFC](v294, v274) : *(id *)(v274 + 8 * v294 + 32);
          v296 = v295;
          v297 = objc_msgSend(v295, sel_recordName);
          v274 = sub_227E5FF84();
          v299 = v298;

          v368[6] = 46;
          v368[7] = 0xE100000000000000;
          v300 = swift_task_alloc();
          *(_QWORD *)(v300 + 16) = v366;
          swift_bridgeObjectRetain();
          v301 = (_QWORD *)sub_227E550E8(0x7FFFFFFFFFFFFFFFLL, 1, sub_227E2BFAC, v300, v274, v299);
          swift_bridgeObjectRelease();
          swift_task_dealloc();
          if (!v301[2])
            break;
          ++v294;
          v302 = v301[4];
          v303 = v301[5];
          v305 = v301[6];
          v304 = v301[7];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          v306 = MEMORY[0x22E2A9634](v302, v303, v305, v304);
          v308 = v307;
          swift_bridgeObjectRelease();
          sub_227E22A9C(v370, v306, v308);
          swift_bridgeObjectRelease();
          sub_227E27158(v296);

          v274 = v350;
          if (v292 == v294)
          {
            v293 = v341;
            goto LABEL_160;
          }
        }
LABEL_184:
        __break(1u);
        while (1)
        {
          __break(1u);
LABEL_186:
          __break(1u);
LABEL_187:
          result = sub_227E6056C();
          v292 = result;
          v293 = v341;
          if (result)
            break;
LABEL_160:
          v351 = v293 - 9;
          swift_bridgeObjectRelease();
          v309 = sub_227E5F7C8();
          v310 = 0;
          v311 = *(_QWORD *)(v309 + 64);
          v345 = v309 + 64;
          v358 = v309;
          v312 = -1;
          v313 = -1 << *(_BYTE *)(v309 + 32);
          if (-v313 < 64)
            v312 = ~(-1 << -(char)v313);
          v314 = v312 & v311;
          v347 = (unint64_t)(63 - v313) >> 6;
          if ((v312 & v311) != 0)
          {
LABEL_163:
            v315 = __clz(__rbit64(v314));
            v314 &= v314 - 1;
            v367 = v310;
            v316 = v315 | (v310 << 6);
            goto LABEL_178;
          }
          while (1)
          {
            v317 = v310 + 1;
            if (__OFADD__(v310, 1))
              break;
            v1 = v368;
            if (v317 >= v347)
              goto LABEL_181;
            v318 = *(_QWORD *)(v345 + 8 * v317);
            v319 = v310 + 1;
            if (!v318)
            {
              v319 = v310 + 2;
              if (v310 + 2 >= v347)
                goto LABEL_181;
              v318 = *(_QWORD *)(v345 + 8 * v319);
              if (!v318)
              {
                v319 = v310 + 3;
                if (v310 + 3 >= v347)
                  goto LABEL_181;
                v318 = *(_QWORD *)(v345 + 8 * v319);
                if (!v318)
                {
                  v320 = v310 + 4;
                  if (v310 + 4 >= v347)
                  {
LABEL_181:
                    v339 = v368[34];
                    v338 = v368[35];
                    v340 = v368[33];
                    swift_release();
                    sub_227E27AB0(v369);
                    swift_bridgeObjectRelease();
                    (*(void (**)(uint64_t, uint64_t))(v339 + 8))(v338, v340);
                    goto LABEL_4;
                  }
                  v318 = *(_QWORD *)(v345 + 8 * v320);
                  if (!v318)
                  {
                    while (1)
                    {
                      v319 = v320 + 1;
                      if (__OFADD__(v320, 1))
                        goto LABEL_186;
                      if (v319 >= v347)
                        goto LABEL_181;
                      v318 = *(_QWORD *)(v345 + 8 * v319);
                      ++v320;
                      if (v318)
                        goto LABEL_177;
                    }
                  }
                  v319 = v310 + 4;
                }
              }
            }
LABEL_177:
            v314 = (v318 - 1) & v318;
            v367 = v319;
            v316 = __clz(__rbit64(v318)) + (v319 << 6);
LABEL_178:
            v321 = 8 * v316;
            v322 = *(void **)(*(_QWORD *)(v358 + 56) + v321);
            v323 = *(id *)(*(_QWORD *)(v358 + 48) + v321);
            v324 = v322;
            v325 = objc_msgSend(v323, sel_recordName);
            v274 = sub_227E5FF84();
            v327 = v326;

            v368[4] = 46;
            v368[5] = 0xE100000000000000;
            v328 = swift_task_alloc();
            *(_QWORD *)(v328 + 16) = v351;
            swift_bridgeObjectRetain();
            v329 = (_QWORD *)sub_227E550E8(0x7FFFFFFFFFFFFFFFLL, 1, sub_227E2BFAC, v328, v274, v327);
            swift_bridgeObjectRelease();
            swift_task_dealloc();
            if (!v329[2])
            {
              __break(1u);
LABEL_183:
              __break(1u);
              goto LABEL_184;
            }
            v274 = v368[14];
            v330 = v329[4];
            v331 = v329[5];
            v332 = v329[6];
            v333 = v329[7];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            v334 = MEMORY[0x22E2A9634](v330, v331, v332, v333);
            v336 = v335;
            swift_bridgeObjectRelease();
            sub_227E22A9C(v370, v334, v336);
            swift_bridgeObjectRelease();
            v337 = v324;
            sub_227E275C4(v323, v337);

            v310 = v367;
            if (v314)
              goto LABEL_163;
          }
        }
      }
      goto LABEL_192;
    }
    if (v8 == *MEMORY[0x24BDB89E0])
    {
      v136 = sub_227E5F570();
      v137 = sub_227E60248();
      if (os_log_type_enabled(v136, v137))
      {
        v138 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v138 = 0;
        _os_log_impl(&dword_227D4F000, v136, v137, "BDSSyncEngine - willFetchChanges", v138, 2u);
        MEMORY[0x22E2AA8AC](v138, -1, -1);
      }
      v139 = v1[73];
      v140 = v1[71];
      v141 = v1[70];

      (*(void (**)(uint64_t, uint64_t))(v140 + 8))(v139, v141);
      goto LABEL_4;
    }
    v142 = v3 - 4;
    v143 = v1[70];
    if (v8 == *MEMORY[0x24BDB8AD8])
    {
      v144 = v1[73];
      v145 = v1[28];
      v146 = v1[29];
      v147 = v1[26];
      v148 = v1[27];
      (*(void (**)(uint64_t, uint64_t))(v1[71] + 96))(v144, v143);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v148 + 32))(v146, v144, v147);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v148 + 16))(v145, v146, v147);
      v149 = sub_227E5F570();
      v150 = sub_227E60248();
      v151 = os_log_type_enabled(v149, v150);
      v153 = v1[27];
      v152 = v1[28];
      v154 = v1[26];
      if (v151)
      {
        v155 = (uint8_t *)swift_slowAlloc();
        v156 = (_QWORD *)swift_slowAlloc();
        *(_DWORD *)v155 = 138543362;
        v157 = MEMORY[0x22E2A8EF0]();
        *(v3 - 5) = v157;
        sub_227E603B0();
        *v156 = v157;
        v158 = *(void (**)(uint64_t, uint64_t))(v153 + 8);
        v158(v152, v154);
        _os_log_impl(&dword_227D4F000, v149, v150, "BDSSyncEngine - willFetchRecordZoneChanges: %{public}@", v155, 0xCu);
        sub_227D68330(&qword_255929230);
        swift_arrayDestroy();
        v159 = v156;
        v1 = v368;
        MEMORY[0x22E2AA8AC](v159, -1, -1);
        MEMORY[0x22E2AA8AC](v155, -1, -1);
      }
      else
      {
        v158 = *(void (**)(uint64_t, uint64_t))(v153 + 8);
        v158(v1[28], v1[26]);
      }

      v158(v1[29], v1[26]);
      goto LABEL_4;
    }
    if (v8 == *MEMORY[0x24BDB8AC0])
    {
      v160 = v1[73];
      v161 = v1[24];
      v162 = v1[25];
      v163 = v1[23];
      (*(void (**)(uint64_t, _QWORD))(v1[71] + 96))(v160, v1[70]);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v161 + 32))(v162, v160, v163);
      v164 = sub_227E5F888();
      if (v164)
      {
        v165 = (void *)v164;
        v166 = (void *)MEMORY[0x22E2A8ED8]();
        v167 = v165;
        sub_227E27FC0(v166, v167);

      }
      v29 = v1[24];
      v28 = v1[25];
      v30 = v1[23];
      v33 = (id)MEMORY[0x22E2A8ED8]();
      sub_227E28494(v33);
      goto LABEL_8;
    }
    if (v8 == *MEMORY[0x24BDB89D0])
    {
      v168 = v1[73];
      v169 = v1[71];
      sub_227E28698();
      (*(void (**)(uint64_t, uint64_t))(v169 + 8))(v168, v143);
      goto LABEL_4;
    }
    v170 = v3 - 3;
    v171 = v3 - 2;
    if (v8 == *MEMORY[0x24BDB89D8])
    {
      v362 = v170;
      v172 = v1[73];
      v173 = v1[21];
      v174 = v1[22];
      v176 = v1[19];
      v175 = v1[20];
      (*(void (**)(uint64_t, uint64_t))(v1[71] + 96))(v172, v143);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v175 + 32))(v174, v172, v176);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v175 + 16))(v173, v174, v176);
      v177 = sub_227E5F570();
      v178 = v1;
      v179 = sub_227E60248();
      v180 = os_log_type_enabled(v177, v179);
      v182 = v178[21];
      v181 = v178[22];
      v184 = v178[19];
      v183 = v178[20];
      if (v180)
      {
        v354 = v178[22];
        v185 = (uint8_t *)swift_slowAlloc();
        v186 = swift_slowAlloc();
        v370[0] = v186;
        *(_DWORD *)v185 = 136446210;
        sub_227D51624(&qword_2559297F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDB89C0], MEMORY[0x24BDB89C8]);
        v187 = sub_227E60674();
        *v362 = sub_227D634E0(v187, v188, v370);
        sub_227E603B0();
        swift_bridgeObjectRelease();
        v189 = *(void (**)(uint64_t, uint64_t))(v183 + 8);
        v189(v182, v184);
        _os_log_impl(&dword_227D4F000, v177, v179, "BDSSyncEngine - willSendChanges: %{public}s", v185, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x22E2AA8AC](v186, -1, -1);
        MEMORY[0x22E2AA8AC](v185, -1, -1);

        v190 = v354;
LABEL_90:
        v189(v190, v184);
        v1 = v368;
        goto LABEL_4;
      }
      v189 = *(void (**)(uint64_t, uint64_t))(v183 + 8);
      v189(v182, v184);

    }
    else
    {
      if (v8 != *MEMORY[0x24BDB89B8])
      {
        v7(v1[72], v1[13], v1[70]);
        v207 = sub_227E5F570();
        v208 = sub_227E60230();
        v209 = os_log_type_enabled(v207, v208);
        v210 = v1[72];
        v211 = v1[71];
        v212 = v1[70];
        if (v209)
        {
          v213 = (uint8_t *)swift_slowAlloc();
          v214 = swift_slowAlloc();
          v370[0] = v214;
          *(_DWORD *)v213 = 136315138;
          sub_227D51624(&qword_2559297E0, (uint64_t (*)(uint64_t))MEMORY[0x24BDB8AE0], MEMORY[0x24BDB8AE8]);
          v215 = sub_227E60674();
          *v142 = sub_227D634E0(v215, v216, v370);
          sub_227E603B0();
          swift_bridgeObjectRelease();
          v217 = *(void (**)(uint64_t, uint64_t))(v211 + 8);
          v217(v210, v212);
          _os_log_impl(&dword_227D4F000, v207, v208, "BDSSyncEngine - handleEvent - unhandled event: %s", v213, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x22E2AA8AC](v214, -1, -1);
          MEMORY[0x22E2AA8AC](v213, -1, -1);

        }
        else
        {

          v217 = *(void (**)(uint64_t, uint64_t))(v211 + 8);
          v217(v210, v212);
        }
        v1 = v368;
        v217(v368[73], v368[70]);
        goto LABEL_4;
      }
      v191 = v1[73];
      v192 = v1[17];
      v193 = v1[18];
      v194 = v1[15];
      v195 = v1[16];
      (*(void (**)(uint64_t, _QWORD))(v1[71] + 96))(v191, v1[70]);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v195 + 32))(v193, v191, v194);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v195 + 16))(v192, v193, v194);
      v196 = sub_227E5F570();
      v197 = v1;
      v198 = sub_227E60248();
      v199 = os_log_type_enabled(v196, v198);
      v200 = v197[17];
      v181 = v197[18];
      v184 = v197[15];
      v201 = v197[16];
      if (v199)
      {
        v363 = v197[18];
        v202 = v171;
        v203 = (uint8_t *)swift_slowAlloc();
        v204 = swift_slowAlloc();
        v370[0] = v204;
        *(_DWORD *)v203 = 136446210;
        sub_227D51624(&qword_2559297E8, (uint64_t (*)(uint64_t))MEMORY[0x24BDB89A8], MEMORY[0x24BDB89B0]);
        v205 = sub_227E60674();
        *v202 = sub_227D634E0(v205, v206, v370);
        sub_227E603B0();
        swift_bridgeObjectRelease();
        v189 = *(void (**)(uint64_t, uint64_t))(v201 + 8);
        v189(v200, v184);
        _os_log_impl(&dword_227D4F000, v196, v198, "BDSSyncEngine - didSendChanges: %{public}s", v203, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x22E2AA8AC](v204, -1, -1);
        MEMORY[0x22E2AA8AC](v203, -1, -1);

        v190 = v363;
        goto LABEL_90;
      }
      v189 = *(void (**)(uint64_t, uint64_t))(v201 + 8);
      v189(v200, v184);

    }
    v190 = v181;
    goto LABEL_90;
  }
  v83 = v1[73];
  v84 = v1[39];
  v86 = v1[36];
  v85 = v1[37];
  (*(void (**)(uint64_t, _QWORD))(v1[71] + 96))(v83, v1[70]);
  v87 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v85 + 32))(v84, v83, v86);
  v88 = MEMORY[0x22E2A8DDC](v87);
  if (v88 >> 62)
    v89 = sub_227E6056C();
  else
    v89 = *(_QWORD *)((v88 & 0xFFFFFFFFFFFFF8) + 0x10);
  v90 = swift_bridgeObjectRelease();
  if (v89)
  {
    result = MEMORY[0x22E2A8DDC](v90);
    v91 = result;
    if (result >> 62)
    {
      result = sub_227E6056C();
      v92 = result;
      if (result)
        goto LABEL_33;
    }
    else
    {
      v92 = *(_QWORD *)((result & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v92)
      {
LABEL_33:
        if (v92 < 1)
        {
          __break(1u);
          goto LABEL_190;
        }
        for (i = 0; i != v92; ++i)
        {
          if ((v91 & 0xC000000000000001) != 0)
            v94 = (id)MEMORY[0x22E2A9AFC](i, v91);
          else
            v94 = *(id *)(v91 + 8 * i + 32);
          v95 = v94;
          sub_227E26580(v94);

        }
      }
    }
    v90 = swift_bridgeObjectRelease();
  }
  v218 = *(_QWORD *)(MEMORY[0x22E2A8E00](v90) + 16);
  v219 = swift_bridgeObjectRelease();
  if (v218)
  {
    (*(void (**)(_QWORD, _QWORD, _QWORD))(v1[37] + 16))(v1[38], v1[39], v1[36]);
    v220 = sub_227E5F570();
    v221 = sub_227E60230();
    v222 = os_log_type_enabled(v220, v221);
    v223 = v1[37];
    v224 = v1[38];
    v225 = v1[36];
    if (v222)
    {
      v226 = (uint8_t *)swift_slowAlloc();
      v3 = (_QWORD *)swift_slowAlloc();
      v370[0] = (uint64_t)v3;
      *(_DWORD *)v226 = 136446210;
      v5 = MEMORY[0x22E2A8E00]();
      v227 = sub_227E5F7A4();
      v349 = v223;
      v228 = v82;
      v229 = MEMORY[0x22E2A970C](v5, v227);
      v231 = v230;
      swift_bridgeObjectRelease();
      *v228 = sub_227D634E0(v229, v231, v370);
      sub_227E603B0();
      v1 = v368;
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v349 + 8))(v224, v225);
      _os_log_impl(&dword_227D4F000, v220, v221, "BDSSyncEngine - failedZoneSaves: %{public}s", v226, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x22E2AA8AC](v3, -1, -1);
      MEMORY[0x22E2AA8AC](v226, -1, -1);

    }
    else
    {

      v219 = (*(uint64_t (**)(uint64_t, uint64_t))(v223 + 8))(v224, v225);
    }
  }
  v232 = MEMORY[0x22E2A8DF4](v219);
  if (v232 >> 62)
    v233 = sub_227E6056C();
  else
    v233 = *(_QWORD *)((v232 & 0xFFFFFFFFFFFFF8) + 0x10);
  v234 = swift_bridgeObjectRelease();
  if (!v233)
    goto LABEL_117;
  result = MEMORY[0x22E2A8DF4](v234);
  v235 = result;
  if (result >> 62)
  {
    result = sub_227E6056C();
    v5 = result;
    if (result)
    {
LABEL_105:
      if (v5 >= 1)
      {
        for (j = 0; j != v5; ++j)
        {
          if ((v235 & 0xC000000000000001) != 0)
            v237 = (id)MEMORY[0x22E2A9AFC](j, v235);
          else
            v237 = *(id *)(v235 + 8 * j + 32);
          v3 = v237;
          v238 = sub_227E5F570();
          v239 = sub_227E60248();
          if (os_log_type_enabled(v238, v239))
          {
            v240 = swift_slowAlloc();
            v241 = (_QWORD *)swift_slowAlloc();
            *(_DWORD *)v240 = 138543362;
            *(_QWORD *)(v240 + 4) = v3;
            *v241 = v3;

            _os_log_impl(&dword_227D4F000, v238, v239, "BDSSyncEngine - didDeleteRecordZoneWith recordZoneID: %{public}@", (uint8_t *)v240, 0xCu);
            sub_227D68330(&qword_255929230);
            swift_arrayDestroy();
            MEMORY[0x22E2AA8AC](v241, -1, -1);
            MEMORY[0x22E2AA8AC](v240, -1, -1);
          }
          else
          {

          }
        }
        goto LABEL_116;
      }
LABEL_190:
      __break(1u);
      goto LABEL_191;
    }
  }
  else
  {
    v5 = *(_QWORD *)((result & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v5)
      goto LABEL_105;
  }
LABEL_116:
  swift_bridgeObjectRelease();
  v1 = v368;
LABEL_117:
  v242 = *(_QWORD *)(sub_227E5F7C8() + 16);
  swift_bridgeObjectRelease();
  if (!v242)
  {
LABEL_142:
    (*(void (**)(_QWORD, _QWORD))(v1[37] + 8))(v1[39], v1[36]);
    goto LABEL_4;
  }
  v243 = sub_227E5F7C8();
  v244 = 0;
  v355 = v243 + 64;
  v245 = -1;
  v246 = -1 << *(_BYTE *)(v243 + 32);
  if (-v246 < 64)
    v245 = ~(-1 << -(char)v246);
  v247 = v245 & *(_QWORD *)(v243 + 64);
  v364 = (unint64_t)(63 - v246) >> 6;
  while (1)
  {
    if (v247)
    {
      v248 = __clz(__rbit64(v247));
      v247 &= v247 - 1;
      v249 = v248 | (v244 << 6);
      goto LABEL_139;
    }
    v250 = v244 + 1;
    if (__OFADD__(v244, 1))
    {
      __break(1u);
      goto LABEL_144;
    }
    if (v250 >= v364)
      goto LABEL_141;
    v251 = *(_QWORD *)(v355 + 8 * v250);
    ++v244;
    if (!v251)
    {
      v244 = v250 + 1;
      if (v250 + 1 >= v364)
        goto LABEL_141;
      v251 = *(_QWORD *)(v355 + 8 * v244);
      if (!v251)
      {
        v244 = v250 + 2;
        if (v250 + 2 >= v364)
          goto LABEL_141;
        v251 = *(_QWORD *)(v355 + 8 * v244);
        if (!v251)
          break;
      }
    }
LABEL_138:
    v247 = (v251 - 1) & v251;
    v249 = __clz(__rbit64(v251)) + (v244 << 6);
LABEL_139:
    v253 = 8 * v249;
    v5 = *(_QWORD *)(*(_QWORD *)(v243 + 56) + v253);
    v254 = *(id *)(*(_QWORD *)(v243 + 48) + v253);
    v255 = (id)v5;
    v256 = v254;
    v257 = v255;
    v258 = v256;
    v3 = v257;
    v259 = sub_227E5F570();
    v260 = sub_227E60248();
    if (os_log_type_enabled(v259, v260))
    {
      v261 = swift_slowAlloc();
      v5 = swift_slowAlloc();
      *(_DWORD *)v261 = 138543618;
      *(_QWORD *)(v261 + 4) = v258;
      *(_QWORD *)v5 = v258;

      *(_WORD *)(v261 + 12) = 2114;
      v262 = v3;
      v263 = _swift_stdlib_bridgeErrorToNSError();
      *(_QWORD *)(v261 + 14) = v263;
      *(_QWORD *)(v5 + 8) = v263;

      _os_log_impl(&dword_227D4F000, v259, v260, "BDSSyncEngine - failedToDeleteRecordZoneWith recordZoneID: %{public}@, error: %{public}@", (uint8_t *)v261, 0x16u);
      sub_227D68330(&qword_255929230);
      swift_arrayDestroy();
      MEMORY[0x22E2AA8AC](v5, -1, -1);
      MEMORY[0x22E2AA8AC](v261, -1, -1);
    }
    else
    {

      v3 = v258;
    }

    v1 = v368;
  }
  v252 = v250 + 3;
  if (v252 >= v364)
  {
LABEL_141:
    swift_release();
    goto LABEL_142;
  }
  v251 = *(_QWORD *)(v355 + 8 * v252);
  if (v251)
  {
    v244 = v252;
    goto LABEL_138;
  }
  while (1)
  {
    v244 = v252 + 1;
    if (__OFADD__(v252, 1))
      break;
    if (v244 >= v364)
      goto LABEL_141;
    v251 = *(_QWORD *)(v355 + 8 * v244);
    ++v252;
    if (v251)
      goto LABEL_138;
  }
LABEL_144:
  __break(1u);
LABEL_145:
  result = sub_227E6056C();
  v115 = result;
  if (!result)
    goto LABEL_146;
LABEL_48:
  if (v115 >= 1)
  {
    v116 = 0;
    do
    {
      if ((v5 & 0xC000000000000001) != 0)
        v117 = (id)MEMORY[0x22E2A9AFC](v116, v5);
      else
        v117 = *(id *)(v5 + 8 * v116 + 32);
      v118 = v117;
      ++v116;
      v119 = sub_227E60314();
      sub_227E22A9C(v370, v119, v120);
      swift_bridgeObjectRelease();
      sub_227E268E0(v118);

    }
    while (v115 != v116);
    goto LABEL_146;
  }
LABEL_191:
  __break(1u);
LABEL_192:
  __break(1u);
  return result;
}

uint64_t sub_227E2ADF0@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)(*(_QWORD *)(v1 + 16) + OBJC_IVAR____TtC13BookDataStore13BDSSyncEngine_registeredDataSourceByRecordType);
  swift_beginAccess();
  *a1 = *v3;
  return swift_bridgeObjectRetain();
}

void *sub_227E2AE54(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  id v3;
  void *v4;

  v2 = *(_QWORD *)(v1 + 16);
  v3 = a1;
  v4 = sub_227E4A5C0(v3, v2);

  return v4;
}

uint64_t sub_227E2AE8C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_227D68330(&qword_255929588);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_227E2AED4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2559295A0;
  if (!qword_2559295A0)
  {
    v1 = sub_227D52DBC(255, (unint64_t *)&unk_25592A2C0);
    result = MEMORY[0x22E2AA7D4](MEMORY[0x24BEE5BD8], v1);
    atomic_store(result, (unint64_t *)&qword_2559295A0);
  }
  return result;
}

void sub_227E2AF2C(unint64_t *a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v5;
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  BOOL v12;
  unint64_t v13;
  int64_t v14;
  void *v15;
  uint64_t v16;
  id v17;
  id v18;
  void *v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  char v27;
  id v28;
  uint64_t v32;
  uint64_t v33;
  int64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;

  v5 = a3;
  v6 = 0;
  v32 = 0;
  v33 = a3 + 56;
  v7 = 1 << *(_BYTE *)(a3 + 32);
  v8 = -1;
  if (v7 < 64)
    v8 = ~(-1 << v7);
  v9 = v8 & *(_QWORD *)(a3 + 56);
  v34 = (unint64_t)(v7 + 63) >> 6;
  v37 = a4 & 0xFFFFFFFFFFFFFF8;
  v36 = a4 & 0xC000000000000001;
  while (1)
  {
LABEL_5:
    if (v9)
    {
      v10 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v11 = v10 | (v6 << 6);
      goto LABEL_18;
    }
    v12 = __OFADD__(v6++, 1);
    if (v12)
      goto LABEL_50;
    if (v6 >= v34)
    {
LABEL_47:
      swift_retain();
      sub_227E3E7B8(a1, a2, v32, v5);
      return;
    }
    v13 = *(_QWORD *)(v33 + 8 * v6);
    if (!v13)
      break;
LABEL_17:
    v9 = (v13 - 1) & v13;
    v11 = __clz(__rbit64(v13)) + (v6 << 6);
LABEL_18:
    v15 = *(void **)(*(_QWORD *)(v5 + 48) + 8 * v11);
    if (a4 >> 62)
    {
      v28 = v15;
      swift_bridgeObjectRetain();
      v16 = sub_227E6056C();
      if (!v16)
        goto LABEL_4;
    }
    else
    {
      v16 = *(_QWORD *)(v37 + 16);
      v17 = v15;
      swift_bridgeObjectRetain();
      if (!v16)
        goto LABEL_4;
    }
    v35 = v11;
    if (v36)
      v18 = (id)MEMORY[0x22E2A9AFC](0, a4);
    else
      v18 = *(id *)(a4 + 32);
    v19 = v18;
    sub_227D52DBC(0, (unint64_t *)&unk_25592A2C0);
    v20 = sub_227E60350();

    if ((v20 & 1) != 0)
    {

      swift_bridgeObjectRelease();
LABEL_36:
      *(unint64_t *)((char *)a1 + ((v35 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v35;
      v12 = __OFADD__(v32++, 1);
      if (v12)
        goto LABEL_51;
    }
    else
    {
      if (v16 != 1)
      {
        if (v36)
        {
          v21 = 1;
          while (1)
          {
            MEMORY[0x22E2A9AFC](v21, a4);
            v22 = v21 + 1;
            if (__OFADD__(v21, 1))
              break;
            v23 = sub_227E60350();
            swift_unknownObjectRelease();
            if ((v23 & 1) != 0)
              goto LABEL_35;
            ++v21;
            if (v22 == v16)
              goto LABEL_34;
          }
          __break(1u);
        }
        else
        {
          v24 = 5;
          while (1)
          {
            v25 = v24 - 3;
            if (__OFADD__(v24 - 4, 1))
              break;
            v26 = *(id *)(a4 + 8 * v24);
            v27 = sub_227E60350();

            if ((v27 & 1) != 0)
            {
LABEL_35:

              swift_bridgeObjectRelease();
              v5 = a3;
              goto LABEL_36;
            }
            ++v24;
            if (v25 == v16)
            {
LABEL_34:

              swift_bridgeObjectRelease();
              v5 = a3;
              goto LABEL_5;
            }
          }
        }
        __break(1u);
LABEL_50:
        __break(1u);
LABEL_51:
        __break(1u);
        goto LABEL_52;
      }
LABEL_4:

      swift_bridgeObjectRelease();
    }
  }
  v14 = v6 + 1;
  if (v6 + 1 >= v34)
    goto LABEL_47;
  v13 = *(_QWORD *)(v33 + 8 * v14);
  if (v13)
    goto LABEL_16;
  v14 = v6 + 2;
  if (v6 + 2 >= v34)
    goto LABEL_47;
  v13 = *(_QWORD *)(v33 + 8 * v14);
  if (v13)
    goto LABEL_16;
  v14 = v6 + 3;
  if (v6 + 3 >= v34)
    goto LABEL_47;
  v13 = *(_QWORD *)(v33 + 8 * v14);
  if (v13)
  {
LABEL_16:
    v6 = v14;
    goto LABEL_17;
  }
  while (1)
  {
    v6 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v6 >= v34)
      goto LABEL_47;
    v13 = *(_QWORD *)(v33 + 8 * v6);
    ++v14;
    if (v13)
      goto LABEL_17;
  }
LABEL_52:
  __break(1u);
}

uint64_t sub_227E2B2C8(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  char v5;
  unsigned int v6;
  unint64_t v7;
  size_t v8;
  uint64_t isStackAllocationSafe;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  _QWORD v16[2];

  v16[1] = *MEMORY[0x24BDAC8D0];
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v7 = (unint64_t)((1 << v5) + 63) >> 6;
  v8 = 8 * v7;
  isStackAllocationSafe = swift_bridgeObjectRetain_n();
  if (v6 <= 0xD || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x24BDAC7A8](isStackAllocationSafe, v10);
    bzero((char *)v16 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0), v8);
    swift_bridgeObjectRetain();
    sub_227E2AF2C((_QWORD *)((char *)v16 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0)), v7, a1, a2);
    v12 = v11;
    swift_release();
    swift_bridgeObjectRelease();
    if (v2)
      swift_willThrow();
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v13 = (void *)swift_slowAlloc();
    bzero(v13, v8);
    swift_bridgeObjectRetain();
    sub_227E2AF2C((unint64_t *)v13, v7, a1, a2);
    v12 = v14;
    swift_release();
    swift_bridgeObjectRelease();
    MEMORY[0x22E2AA8AC](v13, -1, -1);
    swift_bridgeObjectRelease_n();
  }
  return v12;
}

void sub_227E2B48C(uint64_t a1, unint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  id v10;
  void *v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;
  unint64_t v17;
  BOOL v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  char v23;
  uint64_t v24;
  unint64_t v25;
  void *v26;
  uint64_t v27;

  if ((a1 & 0xC000000000000001) == 0)
  {
    sub_227E2B2C8(a1, a2);
    return;
  }
  v27 = MEMORY[0x24BEE4B08];
  swift_bridgeObjectRetain();
  sub_227E60404();
  if (!sub_227E60428())
  {
LABEL_40:
    swift_bridgeObjectRelease();
    swift_release();
    return;
  }
  sub_227D52DBC(0, (unint64_t *)&unk_25592A2C0);
  v25 = a2 & 0xC000000000000001;
  while (1)
  {
    swift_dynamicCast();
    if (a2 >> 62)
    {
      swift_bridgeObjectRetain();
      v9 = sub_227E6056C();
      if (!v9)
        goto LABEL_14;
    }
    else
    {
      v9 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v9)
        goto LABEL_14;
    }
    if (v25)
      v10 = (id)MEMORY[0x22E2A9AFC](0, a2);
    else
      v10 = *(id *)(a2 + 32);
    v11 = v10;
    v12 = sub_227E60350();

    if ((v12 & 1) != 0)
    {
LABEL_34:
      swift_bridgeObjectRelease();
      v24 = v27;
      if (*(_QWORD *)(v27 + 24) <= *(_QWORD *)(v27 + 16))
      {
        sub_227E22644();
        v24 = v27;
      }
      v3 = sub_227E60344();
      v4 = v24 + 56;
      v5 = -1 << *(_BYTE *)(v24 + 32);
      v6 = v3 & ~v5;
      v7 = v6 >> 6;
      if (((-1 << v6) & ~*(_QWORD *)(v24 + 56 + 8 * (v6 >> 6))) != 0)
      {
        v8 = __clz(__rbit64((-1 << v6) & ~*(_QWORD *)(v24 + 56 + 8 * (v6 >> 6)))) | v6 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v16 = 0;
        v17 = (unint64_t)(63 - v5) >> 6;
        do
        {
          if (++v7 == v17 && (v16 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v18 = v7 == v17;
          if (v7 == v17)
            v7 = 0;
          v16 |= v18;
          v19 = *(_QWORD *)(v4 + 8 * v7);
        }
        while (v19 == -1);
        v8 = __clz(__rbit64(~v19)) + (v7 << 6);
      }
      *(_QWORD *)(v4 + ((v8 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v8;
      *(_QWORD *)(*(_QWORD *)(v24 + 48) + 8 * v8) = v26;
      ++*(_QWORD *)(v24 + 16);
      goto LABEL_7;
    }
    if (v9 != 1)
      break;
LABEL_14:
    swift_bridgeObjectRelease();

LABEL_7:
    if (!sub_227E60428())
      goto LABEL_40;
  }
  if (v25)
  {
    v13 = 1;
    while (1)
    {
      MEMORY[0x22E2A9AFC](v13, a2);
      v14 = v13 + 1;
      if (__OFADD__(v13, 1))
        break;
      v15 = sub_227E60350();
      swift_unknownObjectRelease();
      if ((v15 & 1) != 0)
        goto LABEL_34;
      ++v13;
      if (v14 == v9)
        goto LABEL_14;
    }
LABEL_41:
    __break(1u);
  }
  else
  {
    v20 = 5;
    while (1)
    {
      v21 = v20 - 3;
      if (__OFADD__(v20 - 4, 1))
        break;
      v22 = *(id *)(a2 + 8 * v20);
      v23 = sub_227E60350();

      if ((v23 & 1) != 0)
        goto LABEL_34;
      ++v20;
      if (v21 == v9)
        goto LABEL_14;
    }
  }
  __break(1u);
}

uint64_t sub_227E2B810()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_227E2B834(uint64_t a1, unint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  void *v18;
  uint64_t v19;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t aBlock[6];

  v4 = sub_227E5F948();
  v24 = *(_QWORD *)(v4 - 8);
  v25 = v4;
  MEMORY[0x24BDAC7A8](v4, v5);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_227E5F978();
  v22 = *(_QWORD *)(v8 - 8);
  v23 = v8;
  MEMORY[0x24BDAC7A8](v8, v9);
  v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain_n();
  v12 = sub_227E5F570();
  v13 = sub_227E60248();
  if (os_log_type_enabled(v12, v13))
  {
    v21 = v7;
    v14 = (uint8_t *)swift_slowAlloc();
    v15 = swift_slowAlloc();
    aBlock[0] = v15;
    *(_DWORD *)v14 = 136446210;
    swift_bridgeObjectRetain();
    v26 = sub_227D634E0(a1, a2, aBlock);
    v7 = v21;
    sub_227E603B0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_227D4F000, v12, v13, "BDSSyncEngine - updatedSaltWithVersion %{public}s", v14, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x22E2AA8AC](v15, -1, -1);
    MEMORY[0x22E2AA8AC](v14, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v16 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v17 = (_QWORD *)swift_allocObject();
  v17[2] = v16;
  v17[3] = a1;
  v17[4] = a2;
  aBlock[4] = (uint64_t)sub_227E2BCB0;
  aBlock[5] = (uint64_t)v17;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_227D5A858;
  aBlock[3] = (uint64_t)&unk_24F090050;
  v18 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_227E5F960();
  v26 = MEMORY[0x24BEE4AF8];
  sub_227D51624((unint64_t *)&unk_253F3AED0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  sub_227D68330((uint64_t *)&unk_253F3AFE0);
  sub_227D515E4((unint64_t *)&unk_253F3AFF0, (uint64_t *)&unk_253F3AFE0, MEMORY[0x24BEE12C8]);
  v19 = v25;
  sub_227E603E0();
  MEMORY[0x22E2A991C](0, v11, v7, v18);
  _Block_release(v18);
  (*(void (**)(char *, uint64_t))(v24 + 8))(v7, v19);
  (*(void (**)(char *, uint64_t))(v22 + 8))(v11, v23);
  swift_release();
  return swift_release();
}

uint64_t sub_227E2BBA0()
{
  return type metadata accessor for BDSSyncEngine();
}

uint64_t sub_227E2BBA8()
{
  uint64_t result;
  unint64_t v1;

  result = sub_227E5F588();
  if (v1 <= 0x3F)
    return swift_updateClassMetadata2();
  return result;
}

uint64_t sub_227E2BC84()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_227E2BCB0()
{
  uint64_t v0;

  sub_227E202B0(*(_QWORD *)(v0 + 16));
}

uint64_t sub_227E2BCBC(_QWORD *a1)
{
  uint64_t v1;

  return sub_227E57084(a1, *(_QWORD **)(v1 + 16)) & 1;
}

uint64_t sub_227E2BCDC()
{
  return sub_227E2BD6C((uint64_t (*)(_QWORD, uint64_t))sub_227E1F7DC);
}

uint64_t sub_227E2BCEC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_227E5F8D0();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_227E2BD60()
{
  return sub_227E2BD6C(sub_227E1FAD4);
}

uint64_t sub_227E2BD6C(uint64_t (*a1)(_QWORD, uint64_t))
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(sub_227E5F8D0() - 8) + 80);
  return a1(*(_QWORD *)(v1 + 16), v1 + ((v2 + 24) & ~v2));
}

uint64_t sub_227E2BDAC()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

void sub_227E2BDD8()
{
  uint64_t v0;

  sub_227E1F784(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_227E2BDE0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_227E1A4E0(*(_QWORD *)(v1 + 16), *(void **)(v1 + 24), a1);
}

uint64_t sub_227E2BDF8()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_227E2BE24()
{
  uint64_t v0;

  return sub_227E1CA50(*(char **)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_227E2BE2C()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_227E2BE60(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_227DDF744;
  return sub_227E1CD80(a1, v4, v5, v7, v6);
}

uint64_t sub_227E2BED8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_227DDF69C;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_255929548 + dword_255929548))(a1, v4);
}

uint64_t sub_227E2BF48()
{
  swift_release();
  return swift_deallocObject();
}

void sub_227E2BF6C()
{
  uint64_t v0;

  sub_227E21794(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
}

uint64_t sub_227E2BF78()
{
  swift_release();
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

void sub_227E2BFA4()
{
  uint64_t v0;

  sub_227E19D0C(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_227E2BFAC(_QWORD *a1)
{
  return sub_227E2BCBC(a1) & 1;
}

uint64_t sub_227E2C01C@<X0>(uint64_t a1@<X8>)
{
  return sub_227E2BDE0(a1);
}

uint64_t PBPropertyValue.identifier.getter()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (uint64_t *)(v0 + *(int *)(type metadata accessor for PBPropertyValue(0) + 32));
  if (v1[1])
    v2 = *v1;
  else
    v2 = 0;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t PBPropertyValue.createdAt.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v3 = sub_227D68330(&qword_255928C98);
  MEMORY[0x24BDAC7A8](v3, v4);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for PBPropertyValue(0);
  sub_227D5DF48(v1 + *(int *)(v7 + 28), (uint64_t)v6, &qword_255928C98);
  v8 = sub_227E5F3C0();
  v9 = *(_QWORD *)(v8 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8) != 1)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v9 + 32))(a1, v6, v8);
  sub_227E5F3B4();
  return sub_227D5809C((uint64_t)v6, &qword_255928C98);
}

uint64_t PBPropertyBundle.configuration.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v3 = sub_227D68330(&qword_255928C88);
  MEMORY[0x24BDAC7A8](v3, v4);
  v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for PBPropertyBundle(0);
  sub_227D5DF48(v1 + *(int *)(v7 + 28), (uint64_t)v6, &qword_255928C88);
  v8 = type metadata accessor for PBPropertyConfiguration(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v6, 1, v8) != 1)
    return sub_227D5E458((uint64_t)v6, (uint64_t)a1, type metadata accessor for PBPropertyConfiguration);
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  a1[3] = 0xE000000000000000;
  a1[4] = 0;
  _s13BookDataStore18PBPropertyNoParamsVACycfC_0();
  return sub_227D5809C((uint64_t)v6, &qword_255928C88);
}

uint64_t PBPropertyTimeSlice.startOfTimeSlice.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v3 = sub_227D68330(&qword_255928C98);
  MEMORY[0x24BDAC7A8](v3, v4);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for PBPropertyTimeSlice(0);
  sub_227D5DF48(v1 + *(int *)(v7 + 24), (uint64_t)v6, &qword_255928C98);
  v8 = sub_227E5F3C0();
  v9 = *(_QWORD *)(v8 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8) != 1)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v9 + 32))(a1, v6, v8);
  sub_227E5F3B4();
  return sub_227D5809C((uint64_t)v6, &qword_255928C98);
}

uint64_t sub_227E2C328(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  _QWORD *v46;
  _QWORD *v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unsigned int (*v55)(uint64_t, uint64_t, uint64_t);
  uint64_t v56;
  _QWORD *v57;
  _QWORD *v58;
  char v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  char v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  void (*v69)(char *, unint64_t, uint64_t);
  char *v70;
  uint64_t v71;
  char *v72;
  char v73;
  void (*v74)(char *, uint64_t);
  char *v75;
  char v76;
  uint64_t *v77;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  _QWORD *v86;
  _QWORD *v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  _QWORD *v92;
  _QWORD *v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  _QWORD *v97;
  _QWORD *v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;

  v95 = a2;
  v96 = a1;
  v99 = sub_227E5F3C0();
  v101 = *(_QWORD *)(v99 - 8);
  v3 = MEMORY[0x24BDAC7A8](v99, v2);
  v100 = (char *)&v79 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3, v5);
  v7 = (char *)&v79 - v6;
  v8 = type metadata accessor for PBPropertyValue(0);
  v9 = *(_QWORD *)(v8 - 8);
  v11 = MEMORY[0x24BDAC7A8](v8, v10);
  v13 = (char *)&v79 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11, v14);
  v16 = (char *)&v79 - v15;
  v17 = type metadata accessor for PBPropertyConfiguration(0);
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17, v19);
  v21 = (char *)&v79 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_227D68330(&qword_255928C88);
  MEMORY[0x24BDAC7A8](v22, v23);
  v25 = (char *)&v79 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = sub_227D68330(&qword_255929CA0);
  MEMORY[0x24BDAC7A8](v26, v27);
  v29 = (char *)&v79 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = type metadata accessor for PBPropertyBundle(0);
  v32 = MEMORY[0x24BDAC7A8](v30, v31);
  v34 = MEMORY[0x24BDAC7A8](v32, v33);
  v39 = *(_QWORD *)(v96 + 16);
  if (v39 != *(_QWORD *)(v38 + 16))
    goto LABEL_38;
  v91 = v34;
  v92 = (uint64_t *)((char *)&v79 - v36);
  v88 = v26;
  v89 = v29;
  v93 = v37;
  v86 = v21;
  v87 = v25;
  v90 = v18;
  v97 = v16;
  v98 = v13;
  if (!v39 || v96 == v38)
  {
    v76 = 1;
    return v76 & 1;
  }
  v84 = v17;
  v79 = v9;
  v94 = v7;
  v40 = 0;
  v41 = (*(unsigned __int8 *)(v35 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80);
  v42 = v96 + v41;
  v43 = v38 + v41;
  v44 = *(_QWORD *)(v35 + 72);
  v46 = v97;
  v45 = v98;
  v48 = v92;
  v47 = v93;
  v49 = v91;
  v82 = v42;
  v83 = v39;
  v81 = v43;
  v80 = v44;
  while (1)
  {
    v85 = v40;
    v50 = v44 * v40;
    sub_227D5DFFC(v42 + v44 * v40, (uint64_t)v48, type metadata accessor for PBPropertyBundle);
    sub_227D5DFFC(v43 + v50, (uint64_t)v47, type metadata accessor for PBPropertyBundle);
    v51 = *(int *)(v49 + 28);
    v52 = (uint64_t)v47 + v51;
    v53 = (uint64_t)v89;
    v54 = (uint64_t)&v89[*(int *)(v88 + 48)];
    sub_227D5DF48((uint64_t)v48 + v51, (uint64_t)v89, &qword_255928C88);
    sub_227D5DF48(v52, v54, &qword_255928C88);
    v55 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v90 + 48);
    v56 = v84;
    if (v55(v53, 1, v84) == 1)
    {
      if (v55(v54, 1, v56) == 1)
      {
        sub_227D5809C(v53, &qword_255928C88);
        goto LABEL_16;
      }
      v77 = &qword_255929CA0;
LABEL_36:
      sub_227D5809C(v53, v77);
      goto LABEL_37;
    }
    v57 = v87;
    sub_227D5DF48(v53, (uint64_t)v87, &qword_255928C88);
    if (v55(v54, 1, v56) == 1)
    {
      v77 = &qword_255929CA0;
      goto LABEL_35;
    }
    v58 = v86;
    sub_227D5E458(v54, (uint64_t)v86, type metadata accessor for PBPropertyConfiguration);
    if (*v57 != *v58
      || v57[1] != v58[1]
      || (v57[2] != v58[2] || v57[3] != v58[3]) && (sub_227E60698() & 1) == 0
      || v57[4] != v58[4])
    {
      sub_227D64BC4((uint64_t)v58, type metadata accessor for PBPropertyConfiguration);
      v77 = &qword_255928C88;
LABEL_35:
      sub_227D64BC4((uint64_t)v57, type metadata accessor for PBPropertyConfiguration);
      goto LABEL_36;
    }
    sub_227E5F3E4();
    sub_227D51624(&qword_255929948, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    v59 = sub_227E5FF6C();
    sub_227D64BC4((uint64_t)v58, type metadata accessor for PBPropertyConfiguration);
    sub_227D64BC4((uint64_t)v57, type metadata accessor for PBPropertyConfiguration);
    sub_227D5809C(v53, &qword_255928C88);
    if ((v59 & 1) == 0)
      goto LABEL_37;
LABEL_16:
    v60 = *v92;
    v61 = *v93;
    v62 = *(_QWORD *)(*v92 + 16);
    if (v62 != *(_QWORD *)(*v93 + 16))
      goto LABEL_37;
    if (v62 && v60 != v61)
      break;
LABEL_22:
    v66 = v93[1];
    v96 = v92[1];
    v67 = *(_QWORD *)(v96 + 16);
    if (v67 != *(_QWORD *)(v66 + 16))
      goto LABEL_37;
    if (v67 && v96 != v66)
    {
      v68 = (*(unsigned __int8 *)(v101 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v101 + 80);
      v95 = *(_QWORD *)(v101 + 72);
      v69 = *(void (**)(char *, unint64_t, uint64_t))(v101 + 16);
      do
      {
        v70 = v94;
        v71 = v99;
        v69(v94, v96 + v68, v99);
        v72 = v100;
        v69(v100, v66 + v68, v71);
        sub_227D51624(&qword_2559291F0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B990], MEMORY[0x24BE5B9A0]);
        v73 = sub_227E5FF6C();
        v74 = *(void (**)(char *, uint64_t))(v101 + 8);
        v74(v72, v71);
        v75 = v70;
        v45 = v98;
        v74(v75, v71);
        v46 = v97;
        if ((v73 & 1) == 0)
          goto LABEL_37;
        v68 += v95;
      }
      while (--v67);
    }
    v49 = v91;
    v48 = v92;
    v47 = v93;
    sub_227E5F3E4();
    sub_227D51624(&qword_255929948, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    v76 = sub_227E5FF6C();
    sub_227D64BC4((uint64_t)v47, type metadata accessor for PBPropertyBundle);
    sub_227D64BC4((uint64_t)v48, type metadata accessor for PBPropertyBundle);
    if ((v76 & 1) != 0)
    {
      v40 = v85 + 1;
      v42 = v82;
      v43 = v81;
      v44 = v80;
      if (v85 + 1 != v83)
        continue;
    }
    return v76 & 1;
  }
  v63 = (*(unsigned __int8 *)(v79 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v79 + 80);
  v64 = *(_QWORD *)(v79 + 72);
  while (1)
  {
    sub_227D5DFFC(v60 + v63, (uint64_t)v46, type metadata accessor for PBPropertyValue);
    sub_227D5DFFC(v61 + v63, (uint64_t)v45, type metadata accessor for PBPropertyValue);
    v65 = _s13BookDataStore15PBPropertyValueV2eeoiySbAC_ACtFZ_0(v46, v45);
    sub_227D64BC4((uint64_t)v45, type metadata accessor for PBPropertyValue);
    sub_227D64BC4((uint64_t)v46, type metadata accessor for PBPropertyValue);
    if ((v65 & 1) == 0)
      break;
    v63 += v64;
    if (!--v62)
      goto LABEL_22;
  }
LABEL_37:
  sub_227D64BC4((uint64_t)v93, type metadata accessor for PBPropertyBundle);
  sub_227D64BC4((uint64_t)v92, type metadata accessor for PBPropertyBundle);
LABEL_38:
  v76 = 0;
  return v76 & 1;
}

uint64_t sub_227E2CA24(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  BOOL v19;
  uint64_t v21;

  v4 = type metadata accessor for PBPropertyValue(0);
  v6 = MEMORY[0x24BDAC7A8](v4, v5);
  v8 = (uint64_t *)((char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v6, v9);
  v12 = (uint64_t *)((char *)&v21 - v11);
  v13 = *(_QWORD *)(a1 + 16);
  if (v13 == *(_QWORD *)(a2 + 16))
  {
    if (!v13 || a1 == a2)
    {
      v17 = 1;
    }
    else
    {
      v14 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
      v15 = *(_QWORD *)(v10 + 72);
      v16 = v13 - 1;
      do
      {
        sub_227D5DFFC(a1 + v14, (uint64_t)v12, type metadata accessor for PBPropertyValue);
        sub_227D5DFFC(a2 + v14, (uint64_t)v8, type metadata accessor for PBPropertyValue);
        v17 = _s13BookDataStore15PBPropertyValueV2eeoiySbAC_ACtFZ_0(v12, v8);
        sub_227D64BC4((uint64_t)v8, type metadata accessor for PBPropertyValue);
        sub_227D64BC4((uint64_t)v12, type metadata accessor for PBPropertyValue);
        v19 = v16-- != 0;
        if ((v17 & 1) == 0)
          break;
        v14 += v15;
      }
      while (v19);
    }
  }
  else
  {
    v17 = 0;
  }
  return v17 & 1;
}

uint64_t sub_227E2CB60(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  unint64_t v14;
  void (*v15)(char *, unint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  void (*v20)(char *, uint64_t);
  BOOL v22;
  uint64_t v24;
  uint64_t v25;

  v4 = sub_227E5F3C0();
  v6 = MEMORY[0x24BDAC7A8](v4, v5);
  v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6, v9);
  v12 = (char *)&v24 - v11;
  v13 = *(_QWORD *)(a1 + 16);
  if (v13 == *(_QWORD *)(a2 + 16))
  {
    if (!v13 || a1 == a2)
    {
      v19 = 1;
    }
    else
    {
      v14 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
      v24 = *(_QWORD *)(v10 + 72);
      v25 = v10;
      v15 = *(void (**)(char *, unint64_t, uint64_t))(v10 + 16);
      v16 = v13 - 1;
      do
      {
        v17 = a1;
        v15(v12, a1 + v14, v4);
        v18 = a2;
        v15(v8, a2 + v14, v4);
        sub_227D51624(&qword_2559291F0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B990], MEMORY[0x24BE5B9A0]);
        v19 = sub_227E5FF6C();
        v20 = *(void (**)(char *, uint64_t))(v25 + 8);
        v20(v8, v4);
        v20(v12, v4);
        v22 = v16-- != 0;
        if ((v19 & 1) == 0)
          break;
        v14 += v24;
        a2 = v18;
        a1 = v17;
      }
      while (v22);
    }
  }
  else
  {
    v19 = 0;
  }
  return v19 & 1;
}

uint64_t PBPropertyTimeSlice.init()@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  char *v3;
  uint64_t v4;

  *a1 = MEMORY[0x24BEE4AF8];
  v2 = type metadata accessor for PBPropertyTimeSlice(0);
  _s13BookDataStore18PBPropertyNoParamsVACycfC_0();
  v3 = (char *)a1 + *(int *)(v2 + 24);
  v4 = sub_227E5F3C0();
  return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 1, 1, v4);
}

BOOL PBPropertyTimeSlice.hasStartOfTimeSlice.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  _BOOL8 v7;
  uint64_t v9;

  v1 = sub_227D68330(&qword_255928C98);
  MEMORY[0x24BDAC7A8](v1, v2);
  v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for PBPropertyTimeSlice(0);
  sub_227D5DF48(v0 + *(int *)(v5 + 24), (uint64_t)v4, &qword_255928C98);
  v6 = sub_227E5F3C0();
  v7 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v4, 1, v6) != 1;
  sub_227D5809C((uint64_t)v4, &qword_255928C98);
  return v7;
}

uint64_t PBPropertyTimeSlice.startOfTimeSlice.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = v1 + *(int *)(type metadata accessor for PBPropertyTimeSlice(0) + 24);
  sub_227D5809C(v3, &qword_255928C98);
  v4 = sub_227E5F3C0();
  v5 = *(_QWORD *)(v4 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(v3, a1, v4);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v5 + 56))(v3, 0, 1, v4);
}

BOOL PBPropertyValue.hasIdentifier.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for PBPropertyValue(0) + 32) + 8) != 0;
}

uint64_t PBPropertyBundle.init()@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;

  v2 = MEMORY[0x24BEE4AF8];
  *a1 = MEMORY[0x24BEE4AF8];
  a1[1] = v2;
  v3 = type metadata accessor for PBPropertyBundle(0);
  _s13BookDataStore18PBPropertyNoParamsVACycfC_0();
  v4 = (char *)a1 + *(int *)(v3 + 28);
  v5 = type metadata accessor for PBPropertyConfiguration(0);
  return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
}

uint64_t PBPropertyBundle.configuration.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PBPropertyBundle(0) + 28);
  sub_227D5809C(v3, &qword_255928C88);
  sub_227D5E458(a1, v3, type metadata accessor for PBPropertyConfiguration);
  v4 = type metadata accessor for PBPropertyConfiguration(0);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 0, 1, v4);
}

void MarkedAsFinishedMechanism.init()(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
}

unint64_t MarkedAsFinishedMechanism.init(rawValue:)@<X0>(unint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 8) = result < 3;
  *(_BYTE *)(a2 + 9) = 0;
  return result;
}

uint64_t MarkedAsFinishedMechanism.rawValue.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

void sub_227E2CFB0(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
}

unint64_t sub_227E2CFC0@<X0>(unint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 8) = result < 3;
  *(_BYTE *)(a2 + 9) = 0;
  return result;
}

_QWORD *sub_227E2CFD8@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  BOOL v2;
  char v3;

  v2 = *result >= 3uLL;
  *(_QWORD *)a2 = *result;
  v3 = !v2;
  *(_BYTE *)(a2 + 8) = v3;
  *(_BYTE *)(a2 + 9) = 0;
  return result;
}

uint64_t sub_227E2CFF4()
{
  sub_227E6071C();
  sub_227E5FF48();
  return sub_227E60734();
}

uint64_t sub_227E2D05C()
{
  sub_227E371A4();
  return sub_227E5F420();
}

uint64_t sub_227E2D094()
{
  sub_227E6071C();
  sub_227E5FF48();
  return sub_227E60734();
}

void sub_227E2D0F8()
{
  qword_255929850 = (uint64_t)&unk_24F08BEF0;
}

uint64_t static MarkedAsFinishedMechanism.allCases.getter()
{
  if (qword_2559281E0 != -1)
    swift_once();
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t static MarkedAsFinishedMechanism.allCases.setter(uint64_t a1)
{
  if (qword_2559281E0 != -1)
    swift_once();
  swift_beginAccess();
  qword_255929850 = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*static MarkedAsFinishedMechanism.allCases.modify())()
{
  if (qword_2559281E0 != -1)
    swift_once();
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_227E2D258@<X0>(_QWORD *a1@<X8>)
{
  if (qword_2559281E0 != -1)
    swift_once();
  swift_beginAccess();
  *a1 = qword_255929850;
  return swift_bridgeObjectRetain();
}

uint64_t (*PBPropertyConfiguration.ageToExpire.modify())()
{
  return nullsub_1;
}

uint64_t PBPropertyConfiguration.countLimit.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t PBPropertyConfiguration.countLimit.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 8) = result;
  return result;
}

uint64_t (*PBPropertyConfiguration.countLimit.modify())()
{
  return nullsub_1;
}

uint64_t PBPropertyConfiguration.eventName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PBPropertyConfiguration.eventName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return result;
}

uint64_t (*PBPropertyConfiguration.eventName.modify())()
{
  return nullsub_1;
}

uint64_t PBPropertyConfiguration.recordType.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 32);
}

uint64_t PBPropertyConfiguration.recordType.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 32) = result;
  return result;
}

uint64_t (*PBPropertyConfiguration.recordType.modify())()
{
  return nullsub_1;
}

uint64_t PBPropertyConfiguration.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PBPropertyConfiguration(0) + 32);
  v4 = sub_227E5F3E4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t PBPropertyConfiguration.unknownFields.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PBPropertyConfiguration(0) + 32);
  v4 = sub_227E5F3E4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*PBPropertyConfiguration.unknownFields.modify())()
{
  type metadata accessor for PBPropertyConfiguration(0);
  return nullsub_1;
}

uint64_t PBPropertyConfiguration.init()@<X0>(_QWORD *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  a1[3] = 0xE000000000000000;
  a1[4] = 0;
  type metadata accessor for PBPropertyConfiguration(0);
  return _s13BookDataStore18PBPropertyNoParamsVACycfC_0();
}

uint64_t PBPropertyNoParams.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_227E5F3E4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t PBPropertyNoParams.unknownFields.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_227E5F3E4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*PBPropertyNoParams.unknownFields.modify())()
{
  return nullsub_1;
}

float PBPropertySingleFloatParam.value.getter()
{
  uint64_t v0;

  return *(float *)v0;
}

void PBPropertySingleFloatParam.value.setter(float a1)
{
  float *v1;

  *v1 = a1;
}

uint64_t (*PBPropertySingleFloatParam.value.modify())()
{
  return nullsub_1;
}

uint64_t PBPropertySingleFloatParam.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_227E2D680(type metadata accessor for PBPropertySingleFloatParam, a1);
}

uint64_t PBPropertySingleFloatParam.unknownFields.setter(uint64_t a1)
{
  return sub_227E2D6D8(a1, type metadata accessor for PBPropertySingleFloatParam);
}

uint64_t (*PBPropertySingleFloatParam.unknownFields.modify())()
{
  type metadata accessor for PBPropertySingleFloatParam(0);
  return nullsub_1;
}

uint64_t PBPropertySingleFloatParam.init()@<X0>(_DWORD *a1@<X8>)
{
  *a1 = 0;
  type metadata accessor for PBPropertySingleFloatParam(0);
  return _s13BookDataStore18PBPropertyNoParamsVACycfC_0();
}

uint64_t PBPropertyBookReadParams.isSample.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t PBPropertyBookReadParams.isSample.setter(uint64_t result)
{
  _BYTE *v1;

  *v1 = result;
  return result;
}

uint64_t (*PBPropertyBookReadParams.isSample.modify())()
{
  return nullsub_1;
}

float PBPropertyBookReadParams.progress.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 4);
}

void PBPropertyBookReadParams.progress.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 4) = a1;
}

uint64_t (*PBPropertyBookReadParams.progress.modify())()
{
  return nullsub_1;
}

uint64_t PBPropertyBookReadParams.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_227E2F360(type metadata accessor for PBPropertyBookReadParams, a1);
}

uint64_t PBPropertyBookReadParams.unknownFields.setter(uint64_t a1)
{
  return sub_227E2F3B8(a1, type metadata accessor for PBPropertyBookReadParams);
}

uint64_t (*PBPropertyBookReadParams.unknownFields.modify())()
{
  type metadata accessor for PBPropertyBookReadParams(0);
  return nullsub_1;
}

uint64_t PBPropertyBookReadParams.init()@<X0>(uint64_t a1@<X8>)
{
  *(_BYTE *)a1 = 0;
  *(_DWORD *)(a1 + 4) = 0;
  type metadata accessor for PBPropertyBookReadParams(0);
  return _s13BookDataStore18PBPropertyNoParamsVACycfC_0();
}

uint64_t PBPropertyBookImpressionParam.wasRecommendedByBooksPersonalization.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t PBPropertyBookImpressionParam.wasRecommendedByBooksPersonalization.setter(uint64_t result)
{
  _BYTE *v1;

  *v1 = result;
  return result;
}

uint64_t (*PBPropertyBookImpressionParam.wasRecommendedByBooksPersonalization.modify())()
{
  return nullsub_1;
}

uint64_t PBPropertyBookImpressionParam.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_227E2D680(type metadata accessor for PBPropertyBookImpressionParam, a1);
}

uint64_t sub_227E2D680@<X0>(uint64_t (*a1)(_QWORD)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1(0) + 20);
  v5 = sub_227E5F3E4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t PBPropertyBookImpressionParam.unknownFields.setter(uint64_t a1)
{
  return sub_227E2D6D8(a1, type metadata accessor for PBPropertyBookImpressionParam);
}

uint64_t sub_227E2D6D8(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a2(0) + 20);
  v5 = sub_227E5F3E4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(v4, a1, v5);
}

uint64_t (*PBPropertyBookImpressionParam.unknownFields.modify())()
{
  type metadata accessor for PBPropertyBookImpressionParam(0);
  return nullsub_1;
}

uint64_t PBPropertyBookImpressionParam.init()@<X0>(_BYTE *a1@<X8>)
{
  *a1 = 0;
  type metadata accessor for PBPropertyBookImpressionParam(0);
  return _s13BookDataStore18PBPropertyNoParamsVACycfC_0();
}

void PBPropertyMarkedAsFinishedParam.value.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(v1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_BYTE *)(a1 + 8) = v2;
}

uint64_t PBPropertyMarkedAsFinishedParam.value.setter(uint64_t result)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(result + 8);
  *(_QWORD *)v1 = *(_QWORD *)result;
  *(_BYTE *)(v1 + 8) = v2;
  return result;
}

uint64_t (*PBPropertyMarkedAsFinishedParam.value.modify())()
{
  return nullsub_1;
}

uint64_t PBPropertyMarkedAsFinishedParam.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_227E2D680(type metadata accessor for PBPropertyMarkedAsFinishedParam, a1);
}

uint64_t PBPropertyMarkedAsFinishedParam.unknownFields.setter(uint64_t a1)
{
  return sub_227E2D6D8(a1, type metadata accessor for PBPropertyMarkedAsFinishedParam);
}

uint64_t (*PBPropertyMarkedAsFinishedParam.unknownFields.modify())()
{
  type metadata accessor for PBPropertyMarkedAsFinishedParam(0);
  return nullsub_1;
}

uint64_t PBPropertyMarkedAsFinishedParam.init()@<X0>(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
  type metadata accessor for PBPropertyMarkedAsFinishedParam(0);
  return _s13BookDataStore18PBPropertyNoParamsVACycfC_0();
}

uint64_t sub_227E2D830@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v4 = sub_227D68330(&qword_255928C98);
  MEMORY[0x24BDAC7A8](v4, v5);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for PBPropertyValue(0);
  sub_227D5DF48(a1 + *(int *)(v8 + 28), (uint64_t)v7, &qword_255928C98);
  v9 = sub_227E5F3C0();
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v7, 1, v9) != 1)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v10 + 32))(a2, v7, v9);
  sub_227E5F3B4();
  return sub_227D5809C((uint64_t)v7, &qword_255928C98);
}

uint64_t sub_227E2D910(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;

  v4 = sub_227E5F3C0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v6);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, a1, v4);
  v9 = a2 + *(int *)(type metadata accessor for PBPropertyValue(0) + 28);
  sub_227D5809C(v9, &qword_255928C98);
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v9, v8, v4);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v5 + 56))(v9, 0, 1, v4);
}

uint64_t PBPropertyValue.createdAt.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = v1 + *(int *)(type metadata accessor for PBPropertyValue(0) + 28);
  sub_227D5809C(v3, &qword_255928C98);
  v4 = sub_227E5F3C0();
  v5 = *(_QWORD *)(v4 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(v3, a1, v4);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v5 + 56))(v3, 0, 1, v4);
}

uint64_t (*PBPropertyValue.createdAt.modify(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  void *v9;
  uint64_t v10;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  *v3 = v1;
  v4 = sub_227D68330(&qword_255928C98);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[1] = v5;
  v6 = sub_227E5F3C0();
  v3[2] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v3[3] = v7;
  v8 = *(_QWORD *)(v7 + 64);
  v3[4] = malloc(v8);
  v9 = malloc(v8);
  v3[5] = v9;
  v10 = *(int *)(type metadata accessor for PBPropertyValue(0) + 28);
  *((_DWORD *)v3 + 12) = v10;
  sub_227D5DF48(v1 + v10, (uint64_t)v5, &qword_255928C98);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_227E5F3B4();
    sub_227D5809C((uint64_t)v5, &qword_255928C98);
  }
  else
  {
    (*(void (**)(void *, void *, uint64_t))(v7 + 32))(v9, v5, v6);
  }
  return sub_227E2DB74;
}

BOOL PBPropertyValue.hasCreatedAt.getter()
{
  return sub_227E2FA00(&qword_255928C98, type metadata accessor for PBPropertyValue, (uint64_t (*)(_QWORD))MEMORY[0x24BE5B990]);
}

Swift::Void __swiftcall PBPropertyValue.clearCreatedAt()()
{
  sub_227E2FAD8(type metadata accessor for PBPropertyValue, &qword_255928C98, (uint64_t (*)(_QWORD))MEMORY[0x24BE5B990]);
}

uint64_t sub_227E2DBB0@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t *v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v3 = (uint64_t *)(a1 + *(int *)(type metadata accessor for PBPropertyValue(0) + 32));
  v4 = v3[1];
  if (v4)
  {
    v5 = *v3;
    v6 = v4;
  }
  else
  {
    v5 = 0;
    v6 = 0xE000000000000000;
  }
  *a2 = v5;
  a2[1] = v6;
  return swift_bridgeObjectRetain();
}

uint64_t sub_227E2DC00(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t result;

  v3 = *a1;
  v2 = a1[1];
  v4 = (_QWORD *)(a2 + *(int *)(type metadata accessor for PBPropertyValue(0) + 32));
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  *v4 = v3;
  v4[1] = v2;
  return result;
}

uint64_t PBPropertyValue.identifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for PBPropertyValue(0) + 32));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*PBPropertyValue.identifier.modify(uint64_t a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t *v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;

  *(_QWORD *)(a1 + 16) = v1;
  v3 = *(int *)(type metadata accessor for PBPropertyValue(0) + 32);
  *(_DWORD *)(a1 + 24) = v3;
  v4 = (uint64_t *)(v1 + v3);
  v5 = v4[1];
  if (v5)
  {
    v6 = *v4;
    v7 = v5;
  }
  else
  {
    v6 = 0;
    v7 = 0xE000000000000000;
  }
  *(_QWORD *)a1 = v6;
  *(_QWORD *)(a1 + 8) = v7;
  swift_bridgeObjectRetain();
  return sub_227E2DCFC;
}

uint64_t sub_227E2DCFC(uint64_t *a1, char a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t result;

  v2 = a1[1];
  v3 = (_QWORD *)(a1[2] + *((int *)a1 + 6));
  v4 = *a1;
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *v3 = v4;
    v3[1] = v2;
    return swift_bridgeObjectRelease();
  }
  else
  {
    result = swift_bridgeObjectRelease();
    *v3 = v4;
    v3[1] = v2;
  }
  return result;
}

Swift::Void __swiftcall PBPropertyValue.clearIdentifier()()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)(v0 + *(int *)(type metadata accessor for PBPropertyValue(0) + 32));
  swift_bridgeObjectRelease();
  *v1 = 0;
  v1[1] = 0;
}

uint64_t PBPropertyValue.assetID.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t PBPropertyValue.assetID.setter(uint64_t result)
{
  _QWORD *v1;

  *v1 = result;
  return result;
}

uint64_t (*PBPropertyValue.assetID.modify())()
{
  return nullsub_1;
}

uint64_t PBPropertyValue.params.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for PBPropertyValue(0);
  return sub_227D5DF48(v1 + *(int *)(v3 + 20), a1, &qword_255928C90);
}

uint64_t PBPropertyValue.params.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for PBPropertyValue(0) + 20);
  return sub_227E2DE28(a1, v3);
}

uint64_t sub_227E2DE28(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_227D68330(&qword_255928C90);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t (*PBPropertyValue.params.modify())()
{
  type metadata accessor for PBPropertyValue(0);
  return nullsub_1;
}

uint64_t PBPropertyValue.noParams.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v3 = sub_227D68330(&qword_255928C90);
  MEMORY[0x24BDAC7A8](v3, v4);
  v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for PBPropertyValue(0);
  sub_227D5DF48(v1 + *(int *)(v7 + 20), (uint64_t)v6, &qword_255928C90);
  v8 = type metadata accessor for PBPropertyValue.OneOf_Params(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v6, 1, v8) == 1)
  {
    sub_227D5809C((uint64_t)v6, &qword_255928C90);
    return _s13BookDataStore18PBPropertyNoParamsVACycfC_0();
  }
  if (swift_getEnumCaseMultiPayload())
  {
    sub_227D64BC4((uint64_t)v6, type metadata accessor for PBPropertyValue.OneOf_Params);
    return _s13BookDataStore18PBPropertyNoParamsVACycfC_0();
  }
  return sub_227D5E458((uint64_t)v6, a1, type metadata accessor for PBPropertyNoParams);
}

uint64_t type metadata accessor for PBPropertyNoParams(uint64_t a1)
{
  return sub_227D5DFC8(a1, qword_255929AF8);
}

uint64_t sub_227E2DFAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v4 = sub_227D68330(&qword_255928C90);
  MEMORY[0x24BDAC7A8](v4, v5);
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for PBPropertyValue(0);
  sub_227D5DF48(a1 + *(int *)(v8 + 20), (uint64_t)v7, &qword_255928C90);
  v9 = type metadata accessor for PBPropertyValue.OneOf_Params(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v7, 1, v9) == 1)
  {
    sub_227D5809C((uint64_t)v7, &qword_255928C90);
    return _s13BookDataStore18PBPropertyNoParamsVACycfC_0();
  }
  if (swift_getEnumCaseMultiPayload())
  {
    sub_227D64BC4((uint64_t)v7, type metadata accessor for PBPropertyValue.OneOf_Params);
    return _s13BookDataStore18PBPropertyNoParamsVACycfC_0();
  }
  return sub_227D5E458((uint64_t)v7, a2, type metadata accessor for PBPropertyNoParams);
}

uint64_t PBPropertyValue.noParams.setter(uint64_t a1)
{
  return sub_227E2F038(a1, type metadata accessor for PBPropertyNoParams);
}

void (*PBPropertyValue.noParams.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  size_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  *v3 = v1;
  v4 = sub_227D68330(&qword_255928C90);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[1] = v5;
  v6 = *(_QWORD *)(*(_QWORD *)(type metadata accessor for PBPropertyNoParams(0) - 8) + 64);
  v3[2] = malloc(v6);
  v7 = malloc(v6);
  v3[3] = v7;
  v8 = *(int *)(type metadata accessor for PBPropertyValue(0) + 20);
  *((_DWORD *)v3 + 12) = v8;
  sub_227D5DF48(v1 + v8, (uint64_t)v5, &qword_255928C90);
  v9 = type metadata accessor for PBPropertyValue.OneOf_Params(0);
  v3[4] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v3[5] = v10;
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v10 + 48))(v5, 1, v9) == 1)
  {
    sub_227D5809C((uint64_t)v5, &qword_255928C90);
  }
  else
  {
    if (!swift_getEnumCaseMultiPayload())
    {
      sub_227D5E458((uint64_t)v5, (uint64_t)v7, type metadata accessor for PBPropertyNoParams);
      return sub_227E2E204;
    }
    sub_227D64BC4((uint64_t)v5, type metadata accessor for PBPropertyValue.OneOf_Params);
  }
  _s13BookDataStore18PBPropertyNoParamsVACycfC_0();
  return sub_227E2E204;
}

void sub_227E2E204(uint64_t a1, char a2)
{
  sub_227E2F22C(a1, a2, type metadata accessor for PBPropertyNoParams);
}

uint64_t PBPropertyValue.floatParam.getter@<X0>(_DWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v3 = sub_227D68330(&qword_255928C90);
  MEMORY[0x24BDAC7A8](v3, v4);
  v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for PBPropertyValue(0);
  sub_227D5DF48(v1 + *(int *)(v7 + 20), (uint64_t)v6, &qword_255928C90);
  v8 = type metadata accessor for PBPropertyValue.OneOf_Params(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v6, 1, v8) == 1)
  {
    sub_227D5809C((uint64_t)v6, &qword_255928C90);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
      return sub_227D5E458((uint64_t)v6, (uint64_t)a1, type metadata accessor for PBPropertySingleFloatParam);
    sub_227D64BC4((uint64_t)v6, type metadata accessor for PBPropertyValue.OneOf_Params);
  }
  *a1 = 0;
  type metadata accessor for PBPropertySingleFloatParam(0);
  return _s13BookDataStore18PBPropertyNoParamsVACycfC_0();
}

uint64_t sub_227E2E328@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v4 = sub_227D68330(&qword_255928C90);
  MEMORY[0x24BDAC7A8](v4, v5);
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for PBPropertyValue(0);
  sub_227D5DF48(a1 + *(int *)(v8 + 20), (uint64_t)v7, &qword_255928C90);
  v9 = type metadata accessor for PBPropertyValue.OneOf_Params(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v7, 1, v9) == 1)
  {
    sub_227D5809C((uint64_t)v7, &qword_255928C90);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
      return sub_227D5E458((uint64_t)v7, (uint64_t)a2, type metadata accessor for PBPropertySingleFloatParam);
    sub_227D64BC4((uint64_t)v7, type metadata accessor for PBPropertyValue.OneOf_Params);
  }
  *a2 = 0;
  type metadata accessor for PBPropertySingleFloatParam(0);
  return _s13BookDataStore18PBPropertyNoParamsVACycfC_0();
}

uint64_t PBPropertyValue.floatParam.setter(uint64_t a1)
{
  return sub_227E2F038(a1, type metadata accessor for PBPropertySingleFloatParam);
}

void (*PBPropertyValue.floatParam.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  size_t v6;
  _DWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  *v3 = v1;
  v4 = sub_227D68330(&qword_255928C90);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[1] = v5;
  v6 = *(_QWORD *)(*(_QWORD *)(type metadata accessor for PBPropertySingleFloatParam(0) - 8) + 64);
  v3[2] = malloc(v6);
  v7 = malloc(v6);
  v3[3] = v7;
  v8 = *(int *)(type metadata accessor for PBPropertyValue(0) + 20);
  *((_DWORD *)v3 + 12) = v8;
  sub_227D5DF48(v1 + v8, (uint64_t)v5, &qword_255928C90);
  v9 = type metadata accessor for PBPropertyValue.OneOf_Params(0);
  v3[4] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v3[5] = v10;
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v10 + 48))(v5, 1, v9) == 1)
  {
    sub_227D5809C((uint64_t)v5, &qword_255928C90);
LABEL_6:
    *v7 = 0;
    _s13BookDataStore18PBPropertyNoParamsVACycfC_0();
    return sub_227E2E5A4;
  }
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_227D64BC4((uint64_t)v5, type metadata accessor for PBPropertyValue.OneOf_Params);
    goto LABEL_6;
  }
  sub_227D5E458((uint64_t)v5, (uint64_t)v7, type metadata accessor for PBPropertySingleFloatParam);
  return sub_227E2E5A4;
}

void sub_227E2E5A4(uint64_t a1, char a2)
{
  sub_227E2F22C(a1, a2, type metadata accessor for PBPropertySingleFloatParam);
}

uint64_t PBPropertyValue.bookReadParams.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v3 = sub_227D68330(&qword_255928C90);
  MEMORY[0x24BDAC7A8](v3, v4);
  v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for PBPropertyValue(0);
  sub_227D5DF48(v1 + *(int *)(v7 + 20), (uint64_t)v6, &qword_255928C90);
  v8 = type metadata accessor for PBPropertyValue.OneOf_Params(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v6, 1, v8) == 1)
  {
    sub_227D5809C((uint64_t)v6, &qword_255928C90);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 2)
      return sub_227D5E458((uint64_t)v6, a1, type metadata accessor for PBPropertyBookReadParams);
    sub_227D64BC4((uint64_t)v6, type metadata accessor for PBPropertyValue.OneOf_Params);
  }
  *(_BYTE *)a1 = 0;
  *(_DWORD *)(a1 + 4) = 0;
  type metadata accessor for PBPropertyBookReadParams(0);
  return _s13BookDataStore18PBPropertyNoParamsVACycfC_0();
}

uint64_t sub_227E2E6CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v4 = sub_227D68330(&qword_255928C90);
  MEMORY[0x24BDAC7A8](v4, v5);
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for PBPropertyValue(0);
  sub_227D5DF48(a1 + *(int *)(v8 + 20), (uint64_t)v7, &qword_255928C90);
  v9 = type metadata accessor for PBPropertyValue.OneOf_Params(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v7, 1, v9) == 1)
  {
    sub_227D5809C((uint64_t)v7, &qword_255928C90);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 2)
      return sub_227D5E458((uint64_t)v7, a2, type metadata accessor for PBPropertyBookReadParams);
    sub_227D64BC4((uint64_t)v7, type metadata accessor for PBPropertyValue.OneOf_Params);
  }
  *(_BYTE *)a2 = 0;
  *(_DWORD *)(a2 + 4) = 0;
  type metadata accessor for PBPropertyBookReadParams(0);
  return _s13BookDataStore18PBPropertyNoParamsVACycfC_0();
}

uint64_t PBPropertyValue.bookReadParams.setter(uint64_t a1)
{
  return sub_227E2F038(a1, type metadata accessor for PBPropertyBookReadParams);
}

void (*PBPropertyValue.bookReadParams.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  size_t v6;
  _DWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  *v3 = v1;
  v4 = sub_227D68330(&qword_255928C90);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[1] = v5;
  v6 = *(_QWORD *)(*(_QWORD *)(type metadata accessor for PBPropertyBookReadParams(0) - 8) + 64);
  v3[2] = malloc(v6);
  v7 = malloc(v6);
  v3[3] = v7;
  v8 = *(int *)(type metadata accessor for PBPropertyValue(0) + 20);
  *((_DWORD *)v3 + 12) = v8;
  sub_227D5DF48(v1 + v8, (uint64_t)v5, &qword_255928C90);
  v9 = type metadata accessor for PBPropertyValue.OneOf_Params(0);
  v3[4] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v3[5] = v10;
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v10 + 48))(v5, 1, v9) == 1)
  {
    sub_227D5809C((uint64_t)v5, &qword_255928C90);
LABEL_6:
    *(_BYTE *)v7 = 0;
    v7[1] = 0;
    _s13BookDataStore18PBPropertyNoParamsVACycfC_0();
    return sub_227E2E950;
  }
  if (swift_getEnumCaseMultiPayload() != 2)
  {
    sub_227D64BC4((uint64_t)v5, type metadata accessor for PBPropertyValue.OneOf_Params);
    goto LABEL_6;
  }
  sub_227D5E458((uint64_t)v5, (uint64_t)v7, type metadata accessor for PBPropertyBookReadParams);
  return sub_227E2E950;
}

void sub_227E2E950(uint64_t a1, char a2)
{
  sub_227E2F22C(a1, a2, type metadata accessor for PBPropertyBookReadParams);
}

uint64_t PBPropertyValue.markedAsFinishedParam.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v3 = sub_227D68330(&qword_255928C90);
  MEMORY[0x24BDAC7A8](v3, v4);
  v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for PBPropertyValue(0);
  sub_227D5DF48(v1 + *(int *)(v7 + 20), (uint64_t)v6, &qword_255928C90);
  v8 = type metadata accessor for PBPropertyValue.OneOf_Params(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v6, 1, v8) == 1)
  {
    sub_227D5809C((uint64_t)v6, &qword_255928C90);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 3)
      return sub_227D5E458((uint64_t)v6, a1, type metadata accessor for PBPropertyMarkedAsFinishedParam);
    sub_227D64BC4((uint64_t)v6, type metadata accessor for PBPropertyValue.OneOf_Params);
  }
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
  type metadata accessor for PBPropertyMarkedAsFinishedParam(0);
  return _s13BookDataStore18PBPropertyNoParamsVACycfC_0();
}

uint64_t sub_227E2EA7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v4 = sub_227D68330(&qword_255928C90);
  MEMORY[0x24BDAC7A8](v4, v5);
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for PBPropertyValue(0);
  sub_227D5DF48(a1 + *(int *)(v8 + 20), (uint64_t)v7, &qword_255928C90);
  v9 = type metadata accessor for PBPropertyValue.OneOf_Params(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v7, 1, v9) == 1)
  {
    sub_227D5809C((uint64_t)v7, &qword_255928C90);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 3)
      return sub_227D5E458((uint64_t)v7, a2, type metadata accessor for PBPropertyMarkedAsFinishedParam);
    sub_227D64BC4((uint64_t)v7, type metadata accessor for PBPropertyValue.OneOf_Params);
  }
  *(_QWORD *)a2 = 0;
  *(_BYTE *)(a2 + 8) = 1;
  type metadata accessor for PBPropertyMarkedAsFinishedParam(0);
  return _s13BookDataStore18PBPropertyNoParamsVACycfC_0();
}

uint64_t PBPropertyValue.markedAsFinishedParam.setter(uint64_t a1)
{
  return sub_227E2F038(a1, type metadata accessor for PBPropertyMarkedAsFinishedParam);
}

void (*PBPropertyValue.markedAsFinishedParam.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  size_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  *v3 = v1;
  v4 = sub_227D68330(&qword_255928C90);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[1] = v5;
  v6 = *(_QWORD *)(*(_QWORD *)(type metadata accessor for PBPropertyMarkedAsFinishedParam(0) - 8) + 64);
  v3[2] = malloc(v6);
  v7 = malloc(v6);
  v3[3] = v7;
  v8 = *(int *)(type metadata accessor for PBPropertyValue(0) + 20);
  *((_DWORD *)v3 + 12) = v8;
  sub_227D5DF48(v1 + v8, (uint64_t)v5, &qword_255928C90);
  v9 = type metadata accessor for PBPropertyValue.OneOf_Params(0);
  v3[4] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v3[5] = v10;
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v10 + 48))(v5, 1, v9) == 1)
  {
    sub_227D5809C((uint64_t)v5, &qword_255928C90);
LABEL_6:
    *(_QWORD *)v7 = 0;
    v7[8] = 1;
    _s13BookDataStore18PBPropertyNoParamsVACycfC_0();
    return sub_227E2ED08;
  }
  if (swift_getEnumCaseMultiPayload() != 3)
  {
    sub_227D64BC4((uint64_t)v5, type metadata accessor for PBPropertyValue.OneOf_Params);
    goto LABEL_6;
  }
  sub_227D5E458((uint64_t)v5, (uint64_t)v7, type metadata accessor for PBPropertyMarkedAsFinishedParam);
  return sub_227E2ED08;
}

void sub_227E2ED08(uint64_t a1, char a2)
{
  sub_227E2F22C(a1, a2, type metadata accessor for PBPropertyMarkedAsFinishedParam);
}

uint64_t PBPropertyValue.bookImpressionParam.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v3 = sub_227D68330(&qword_255928C90);
  MEMORY[0x24BDAC7A8](v3, v4);
  v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for PBPropertyValue(0);
  sub_227D5DF48(v1 + *(int *)(v7 + 20), (uint64_t)v6, &qword_255928C90);
  v8 = type metadata accessor for PBPropertyValue.OneOf_Params(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v6, 1, v8) == 1)
  {
    sub_227D5809C((uint64_t)v6, &qword_255928C90);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 4)
      return sub_227D5E458((uint64_t)v6, (uint64_t)a1, type metadata accessor for PBPropertyBookImpressionParam);
    sub_227D64BC4((uint64_t)v6, type metadata accessor for PBPropertyValue.OneOf_Params);
  }
  *a1 = 0;
  type metadata accessor for PBPropertyBookImpressionParam(0);
  return _s13BookDataStore18PBPropertyNoParamsVACycfC_0();
}

uint64_t sub_227E2EE2C@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v4 = sub_227D68330(&qword_255928C90);
  MEMORY[0x24BDAC7A8](v4, v5);
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for PBPropertyValue(0);
  sub_227D5DF48(a1 + *(int *)(v8 + 20), (uint64_t)v7, &qword_255928C90);
  v9 = type metadata accessor for PBPropertyValue.OneOf_Params(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v7, 1, v9) == 1)
  {
    sub_227D5809C((uint64_t)v7, &qword_255928C90);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 4)
      return sub_227D5E458((uint64_t)v7, (uint64_t)a2, type metadata accessor for PBPropertyBookImpressionParam);
    sub_227D64BC4((uint64_t)v7, type metadata accessor for PBPropertyValue.OneOf_Params);
  }
  *a2 = 0;
  type metadata accessor for PBPropertyBookImpressionParam(0);
  return _s13BookDataStore18PBPropertyNoParamsVACycfC_0();
}

uint64_t sub_227E2EF44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v8 = a5(0);
  MEMORY[0x24BDAC7A8](v8, v9);
  v11 = (char *)&v15 - v10;
  sub_227D5DFFC(a1, (uint64_t)&v15 - v10, a5);
  v12 = a2 + *(int *)(type metadata accessor for PBPropertyValue(0) + 20);
  sub_227D5809C(v12, &qword_255928C90);
  sub_227D5E458((uint64_t)v11, v12, a5);
  v13 = type metadata accessor for PBPropertyValue.OneOf_Params(0);
  swift_storeEnumTagMultiPayload();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 0, 1, v13);
}

uint64_t PBPropertyValue.bookImpressionParam.setter(uint64_t a1)
{
  return sub_227E2F038(a1, type metadata accessor for PBPropertyBookImpressionParam);
}

uint64_t sub_227E2F038(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;

  v5 = v2 + *(int *)(type metadata accessor for PBPropertyValue(0) + 20);
  sub_227D5809C(v5, &qword_255928C90);
  sub_227D5E458(a1, v5, a2);
  v6 = type metadata accessor for PBPropertyValue.OneOf_Params(0);
  swift_storeEnumTagMultiPayload();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 0, 1, v6);
}

void (*PBPropertyValue.bookImpressionParam.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  size_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  *v3 = v1;
  v4 = sub_227D68330(&qword_255928C90);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[1] = v5;
  v6 = *(_QWORD *)(*(_QWORD *)(type metadata accessor for PBPropertyBookImpressionParam(0) - 8) + 64);
  v3[2] = malloc(v6);
  v7 = malloc(v6);
  v3[3] = v7;
  v8 = *(int *)(type metadata accessor for PBPropertyValue(0) + 20);
  *((_DWORD *)v3 + 12) = v8;
  sub_227D5DF48(v1 + v8, (uint64_t)v5, &qword_255928C90);
  v9 = type metadata accessor for PBPropertyValue.OneOf_Params(0);
  v3[4] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v3[5] = v10;
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v10 + 48))(v5, 1, v9) == 1)
  {
    sub_227D5809C((uint64_t)v5, &qword_255928C90);
LABEL_6:
    *v7 = 0;
    _s13BookDataStore18PBPropertyNoParamsVACycfC_0();
    return sub_227E2F21C;
  }
  if (swift_getEnumCaseMultiPayload() != 4)
  {
    sub_227D64BC4((uint64_t)v5, type metadata accessor for PBPropertyValue.OneOf_Params);
    goto LABEL_6;
  }
  sub_227D5E458((uint64_t)v5, (uint64_t)v7, type metadata accessor for PBPropertyBookImpressionParam);
  return sub_227E2F21C;
}

void sub_227E2F21C(uint64_t a1, char a2)
{
  sub_227E2F22C(a1, a2, type metadata accessor for PBPropertyBookImpressionParam);
}

void sub_227E2F22C(uint64_t a1, char a2, uint64_t (*a3)(_QWORD))
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  void *v10;
  uint64_t v11;

  v4 = *(void **)a1;
  v5 = *(_QWORD *)(*(_QWORD *)a1 + 32);
  v6 = *(_QWORD *)(*(_QWORD *)a1 + 40);
  v7 = *(int *)(*(_QWORD *)a1 + 48);
  v8 = *(void **)(*(_QWORD *)a1 + 16);
  v9 = *(void **)(*(_QWORD *)a1 + 24);
  v10 = *(void **)(*(_QWORD *)a1 + 8);
  v11 = **(_QWORD **)a1 + v7;
  if ((a2 & 1) != 0)
  {
    sub_227D5DFFC(*(_QWORD *)(*(_QWORD *)a1 + 24), (uint64_t)v8, a3);
    sub_227D5809C(v11, &qword_255928C90);
    sub_227D5E458((uint64_t)v8, v11, a3);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v6 + 56))(v11, 0, 1, v5);
    sub_227D64BC4((uint64_t)v9, a3);
  }
  else
  {
    sub_227D5809C(**(_QWORD **)a1 + v7, &qword_255928C90);
    sub_227D5E458((uint64_t)v9, v11, a3);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v6 + 56))(v11, 0, 1, v5);
  }
  free(v9);
  free(v8);
  free(v10);
  free(v4);
}

uint64_t PBPropertyValue.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_227E2F360(type metadata accessor for PBPropertyValue, a1);
}

uint64_t sub_227E2F360@<X0>(uint64_t (*a1)(_QWORD)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1(0) + 24);
  v5 = sub_227E5F3E4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t PBPropertyValue.unknownFields.setter(uint64_t a1)
{
  return sub_227E2F3B8(a1, type metadata accessor for PBPropertyValue);
}

uint64_t sub_227E2F3B8(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a2(0) + 24);
  v5 = sub_227E5F3E4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(v4, a1, v5);
}

uint64_t (*PBPropertyValue.unknownFields.modify())()
{
  type metadata accessor for PBPropertyValue(0);
  return nullsub_1;
}

uint64_t static PBPropertyNoParams.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void (*v14)(char *, uint64_t, uint64_t);
  void (*v15)(char *, uint64_t);
  uint64_t v17;

  v4 = sub_227E5F3E4();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10];
  v6 = *(_QWORD *)(v4 - 8);
  v8 = MEMORY[0x24BDAC7A8](v4, v7);
  v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8, v11);
  v13 = (char *)&v17 - v12;
  v14 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  v14((char *)&v17 - v12, a1, v4);
  v14(v10, a2, v4);
  sub_227D51624(&qword_255929948, v5, MEMORY[0x24BE5BF20]);
  LOBYTE(a2) = sub_227E5FF6C();
  v15 = *(void (**)(char *, uint64_t))(v6 + 8);
  v15(v10, v4);
  v15(v13, v4);
  return a2 & 1;
}

uint64_t PBPropertyValue.init()@<X0>(_QWORD *a1@<X8>)
{
  int *v2;
  char *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t result;
  _QWORD *v8;

  *a1 = 0;
  v2 = (int *)type metadata accessor for PBPropertyValue(0);
  v3 = (char *)a1 + v2[5];
  v4 = type metadata accessor for PBPropertyValue.OneOf_Params(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 1, 1, v4);
  _s13BookDataStore18PBPropertyNoParamsVACycfC_0();
  v5 = (char *)a1 + v2[7];
  v6 = sub_227E5F3C0();
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 1, 1, v6);
  v8 = (_QWORD *)((char *)a1 + v2[8]);
  *v8 = 0;
  v8[1] = 0;
  return result;
}

uint64_t sub_227E2F5F0@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v4 = sub_227D68330(&qword_255928C88);
  MEMORY[0x24BDAC7A8](v4, v5);
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for PBPropertyBundle(0);
  sub_227D5DF48(a1 + *(int *)(v8 + 28), (uint64_t)v7, &qword_255928C88);
  v9 = type metadata accessor for PBPropertyConfiguration(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v7, 1, v9) != 1)
    return sub_227D5E458((uint64_t)v7, (uint64_t)a2, type metadata accessor for PBPropertyConfiguration);
  *a2 = 0;
  a2[1] = 0;
  a2[2] = 0;
  a2[3] = 0xE000000000000000;
  a2[4] = 0;
  _s13BookDataStore18PBPropertyNoParamsVACycfC_0();
  return sub_227D5809C((uint64_t)v7, &qword_255928C88);
}

uint64_t sub_227E2F6E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;

  v4 = type metadata accessor for PBPropertyConfiguration(0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v6);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_227D5DFFC(a1, (uint64_t)v8, type metadata accessor for PBPropertyConfiguration);
  v9 = a2 + *(int *)(type metadata accessor for PBPropertyBundle(0) + 28);
  sub_227D5809C(v9, &qword_255928C88);
  sub_227D5E458((uint64_t)v8, v9, type metadata accessor for PBPropertyConfiguration);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v5 + 56))(v9, 0, 1, v4);
}

void (*PBPropertyBundle.configuration.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  _QWORD *v9;
  uint64_t v10;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  *v3 = v1;
  v4 = sub_227D68330(&qword_255928C88);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[1] = v5;
  v6 = type metadata accessor for PBPropertyConfiguration(0);
  v3[2] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v3[3] = v7;
  v8 = *(_QWORD *)(v7 + 64);
  v3[4] = malloc(v8);
  v9 = malloc(v8);
  v3[5] = v9;
  v10 = *(int *)(type metadata accessor for PBPropertyBundle(0) + 28);
  *((_DWORD *)v3 + 12) = v10;
  sub_227D5DF48(v1 + v10, (uint64_t)v5, &qword_255928C88);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    *v9 = 0;
    v9[1] = 0;
    v9[2] = 0;
    v9[3] = 0xE000000000000000;
    v9[4] = 0;
    _s13BookDataStore18PBPropertyNoParamsVACycfC_0();
    sub_227D5809C((uint64_t)v5, &qword_255928C88);
  }
  else
  {
    sub_227D5E458((uint64_t)v5, (uint64_t)v9, type metadata accessor for PBPropertyConfiguration);
  }
  return sub_227E2F8E0;
}

void sub_227E2F8E0(uint64_t a1, char a2)
{
  void *v2;
  uint64_t v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;

  v2 = *(void **)a1;
  v3 = *(int *)(*(_QWORD *)a1 + 48);
  v4 = *(void **)(*(_QWORD *)a1 + 32);
  v5 = *(void **)(*(_QWORD *)a1 + 40);
  v6 = *(_QWORD *)(*(_QWORD *)a1 + 16);
  v7 = *(_QWORD *)(*(_QWORD *)a1 + 24);
  v8 = *(void **)(*(_QWORD *)a1 + 8);
  v9 = **(_QWORD **)a1 + v3;
  if ((a2 & 1) != 0)
  {
    sub_227D5DFFC(*(_QWORD *)(*(_QWORD *)a1 + 40), (uint64_t)v4, type metadata accessor for PBPropertyConfiguration);
    sub_227D5809C(v9, &qword_255928C88);
    sub_227D5E458((uint64_t)v4, v9, type metadata accessor for PBPropertyConfiguration);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v7 + 56))(v9, 0, 1, v6);
    sub_227D64BC4((uint64_t)v5, type metadata accessor for PBPropertyConfiguration);
  }
  else
  {
    sub_227D5809C(**(_QWORD **)a1 + v3, &qword_255928C88);
    sub_227D5E458((uint64_t)v5, v9, type metadata accessor for PBPropertyConfiguration);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v7 + 56))(v9, 0, 1, v6);
  }
  free(v5);
  free(v4);
  free(v8);
  free(v2);
}

BOOL PBPropertyBundle.hasConfiguration.getter()
{
  return sub_227E2FA00(&qword_255928C88, type metadata accessor for PBPropertyBundle, type metadata accessor for PBPropertyConfiguration);
}

BOOL sub_227E2FA00(uint64_t *a1, uint64_t (*a2)(_QWORD), uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  _BOOL8 v13;
  uint64_t v15;

  v7 = sub_227D68330(a1);
  MEMORY[0x24BDAC7A8](v7, v8);
  v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = a2(0);
  sub_227D5DF48(v3 + *(int *)(v11 + 28), (uint64_t)v10, a1);
  v12 = a3(0);
  v13 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v10, 1, v12) != 1;
  sub_227D5809C((uint64_t)v10, a1);
  return v13;
}

Swift::Void __swiftcall PBPropertyBundle.clearConfiguration()()
{
  sub_227E2FAD8(type metadata accessor for PBPropertyBundle, &qword_255928C88, type metadata accessor for PBPropertyConfiguration);
}

uint64_t sub_227E2FAD8(uint64_t (*a1)(_QWORD), uint64_t *a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;

  v6 = v3 + *(int *)(a1(0) + 28);
  sub_227D5809C(v6, a2);
  v7 = a3(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 1, v7);
}

uint64_t PBPropertyBundle.propertyValues.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t PBPropertyBundle.propertyValues.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

uint64_t (*PBPropertyBundle.propertyValues.modify())()
{
  return nullsub_1;
}

uint64_t PBPropertyBundle.deletedPropertyValueTimestamps.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t PBPropertyBundle.deletedPropertyValueTimestamps.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 8) = a1;
  return result;
}

uint64_t (*PBPropertyBundle.deletedPropertyValueTimestamps.modify())()
{
  return nullsub_1;
}

uint64_t PBPropertyBundle.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_227E2F360(type metadata accessor for PBPropertyBundle, a1);
}

uint64_t PBPropertyBundle.unknownFields.setter(uint64_t a1)
{
  return sub_227E2F3B8(a1, type metadata accessor for PBPropertyBundle);
}

uint64_t (*PBPropertyBundle.unknownFields.modify())()
{
  type metadata accessor for PBPropertyBundle(0);
  return nullsub_1;
}

uint64_t sub_227E2FC00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v4 = sub_227D68330(&qword_255928C98);
  MEMORY[0x24BDAC7A8](v4, v5);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for PBPropertyTimeSlice(0);
  sub_227D5DF48(a1 + *(int *)(v8 + 24), (uint64_t)v7, &qword_255928C98);
  v9 = sub_227E5F3C0();
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v7, 1, v9) != 1)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v10 + 32))(a2, v7, v9);
  sub_227E5F3B4();
  return sub_227D5809C((uint64_t)v7, &qword_255928C98);
}

uint64_t sub_227E2FCE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;

  v4 = sub_227E5F3C0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v6);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, a1, v4);
  v9 = a2 + *(int *)(type metadata accessor for PBPropertyTimeSlice(0) + 24);
  sub_227D5809C(v9, &qword_255928C98);
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v9, v8, v4);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v5 + 56))(v9, 0, 1, v4);
}

uint64_t (*PBPropertyTimeSlice.startOfTimeSlice.modify(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  void *v9;
  uint64_t v10;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  *v3 = v1;
  v4 = sub_227D68330(&qword_255928C98);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[1] = v5;
  v6 = sub_227E5F3C0();
  v3[2] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v3[3] = v7;
  v8 = *(_QWORD *)(v7 + 64);
  v3[4] = malloc(v8);
  v9 = malloc(v8);
  v3[5] = v9;
  v10 = *(int *)(type metadata accessor for PBPropertyTimeSlice(0) + 24);
  *((_DWORD *)v3 + 12) = v10;
  sub_227D5DF48(v1 + v10, (uint64_t)v5, &qword_255928C98);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_227E5F3B4();
    sub_227D5809C((uint64_t)v5, &qword_255928C98);
  }
  else
  {
    (*(void (**)(void *, void *, uint64_t))(v7 + 32))(v9, v5, v6);
  }
  return sub_227E2DB74;
}

void sub_227E2FEC8(uint64_t a1, char a2)
{
  void *v2;
  uint64_t v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;

  v2 = *(void **)a1;
  v3 = *(int *)(*(_QWORD *)a1 + 48);
  v4 = *(void **)(*(_QWORD *)a1 + 32);
  v5 = *(void **)(*(_QWORD *)a1 + 40);
  v6 = *(_QWORD *)(*(_QWORD *)a1 + 16);
  v7 = *(_QWORD *)(*(_QWORD *)a1 + 24);
  v8 = *(void **)(*(_QWORD *)a1 + 8);
  v9 = **(_QWORD **)a1 + v3;
  if ((a2 & 1) != 0)
  {
    (*(void (**)(_QWORD, void *, uint64_t))(v7 + 16))(*(_QWORD *)(*(_QWORD *)a1 + 32), v5, v6);
    sub_227D5809C(v9, &qword_255928C98);
    (*(void (**)(uint64_t, void *, uint64_t))(v7 + 32))(v9, v4, v6);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v7 + 56))(v9, 0, 1, v6);
    (*(void (**)(void *, uint64_t))(v7 + 8))(v5, v6);
  }
  else
  {
    sub_227D5809C(**(_QWORD **)a1 + v3, &qword_255928C98);
    (*(void (**)(uint64_t, void *, uint64_t))(v7 + 32))(v9, v5, v6);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v7 + 56))(v9, 0, 1, v6);
  }
  free(v5);
  free(v4);
  free(v8);
  free(v2);
}

Swift::Void __swiftcall PBPropertyTimeSlice.clearStartOfTimeSlice()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + *(int *)(type metadata accessor for PBPropertyTimeSlice(0) + 24);
  sub_227D5809C(v1, &qword_255928C98);
  v2 = sub_227E5F3C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
}

uint64_t (*PBPropertyTimeSlice.propertyBundles.modify())()
{
  return nullsub_1;
}

uint64_t PBPropertyTimeSlice.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_227E2D680(type metadata accessor for PBPropertyTimeSlice, a1);
}

uint64_t PBPropertyTimeSlice.unknownFields.setter(uint64_t a1)
{
  return sub_227E2D6D8(a1, type metadata accessor for PBPropertyTimeSlice);
}

uint64_t (*PBPropertyTimeSlice.unknownFields.modify())()
{
  type metadata accessor for PBPropertyTimeSlice(0);
  return nullsub_1;
}

uint64_t sub_227E30078()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;
  uint64_t v12;

  v0 = sub_227E5F558();
  sub_227DDF6FC(v0, qword_255929858);
  sub_227DDF6E4(v0, (uint64_t)qword_255929858);
  sub_227D68330(&qword_255929CA8);
  v1 = sub_227D68330(&qword_255929CB0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_227E71C20;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 0;
  *(_QWORD *)v7 = "Unknown";
  *(_QWORD *)(v7 + 8) = 7;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_227E5F534();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 1;
  *(_QWORD *)v11 = "Manually";
  *((_QWORD *)v11 + 1) = 8;
  v11[16] = 2;
  v10();
  v12 = (uint64_t)v6 + 2 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + 2 * v3) = 2;
  *(_QWORD *)v12 = "Automatically";
  *(_QWORD *)(v12 + 8) = 13;
  *(_BYTE *)(v12 + 16) = 2;
  v10();
  return sub_227E5F540();
}

uint64_t static MarkedAsFinishedMechanism._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_227E3043C(&qword_2559281E8, (uint64_t)qword_255929858, a1);
}

uint64_t sub_227E30224@<X0>(uint64_t a1@<X8>)
{
  return sub_227E30820(&qword_2559281E8, (uint64_t)qword_255929858, a1);
}

unint64_t static PBPropertyConfiguration.protoMessageName.getter()
{
  return 0xD000000000000017;
}

uint64_t sub_227E3025C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;

  v0 = sub_227E5F558();
  sub_227DDF6FC(v0, qword_255929870);
  sub_227DDF6E4(v0, (uint64_t)qword_255929870);
  sub_227D68330(&qword_255929CA8);
  v1 = sub_227D68330(&qword_255929CB0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_227E700C0;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 1;
  *(_QWORD *)v7 = "ageToExpire";
  *(_QWORD *)(v7 + 8) = 11;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_227E5F534();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 2;
  *(_QWORD *)v11 = "countLimit";
  *(_QWORD *)(v11 + 8) = 10;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "eventName";
  *((_QWORD *)v13 + 1) = 9;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 4;
  *(_QWORD *)v15 = "recordType";
  *((_QWORD *)v15 + 1) = 10;
  v15[16] = 2;
  v10();
  return sub_227E5F540();
}

uint64_t static PBPropertyConfiguration._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_227E3043C(&qword_2559281F0, (uint64_t)qword_255929870, a1);
}

uint64_t sub_227E3043C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;

  if (*a1 != -1)
    swift_once();
  v5 = sub_227E5F558();
  v6 = sub_227DDF6E4(v5, a2);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a3, v6, v5);
}

uint64_t PBPropertyConfiguration.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  result = sub_227E5F42C();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
        case 2:
        case 4:
          sub_227E5F468();
          break;
        case 3:
          sub_227E5F480();
          break;
        default:
          break;
      }
      result = sub_227E5F42C();
    }
  }
  return result;
}

uint64_t PBPropertyConfiguration.traverse<A>(visitor:)()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t result;
  unint64_t v3;
  uint64_t v4;

  if (!*v0 || (result = sub_227E5F504(), !v1))
  {
    if (!v0[1] || (result = sub_227E5F504(), !v1))
    {
      v3 = v0[3];
      v4 = HIBYTE(v3) & 0xF;
      if ((v3 & 0x2000000000000000) == 0)
        v4 = v0[2] & 0xFFFFFFFFFFFFLL;
      if (!v4 || (result = sub_227E5F510(), !v1))
      {
        if (!v0[4] || (result = sub_227E5F504(), !v1))
        {
          type metadata accessor for PBPropertyConfiguration(0);
          return sub_227E5F3CC();
        }
      }
    }
  }
  return result;
}

uint64_t PBPropertyConfiguration.hashValue.getter()
{
  return sub_227E351E0(type metadata accessor for PBPropertyConfiguration, &qword_255929950, (uint64_t)&protocol conformance descriptor for PBPropertyConfiguration);
}

uint64_t sub_227E306A4@<X0>(_QWORD *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  a1[3] = 0xE000000000000000;
  a1[4] = 0;
  return _s13BookDataStore18PBPropertyNoParamsVACycfC_0();
}

unint64_t sub_227E306D0()
{
  return 0xD000000000000017;
}

uint64_t sub_227E306F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 32);
  v5 = sub_227E5F3E4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t sub_227E30730(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a2 + 32);
  v5 = sub_227E5F3E4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(v4, a1, v5);
}

uint64_t (*sub_227E30770())()
{
  return nullsub_1;
}

uint64_t sub_227E30784()
{
  return PBPropertyConfiguration.decodeMessage<A>(decoder:)();
}

uint64_t sub_227E30798()
{
  return PBPropertyConfiguration.traverse<A>(visitor:)();
}

uint64_t sub_227E307B0()
{
  sub_227D51624(&qword_255929C90, type metadata accessor for PBPropertyConfiguration, (uint64_t)&protocol conformance descriptor for PBPropertyConfiguration);
  return sub_227E5F414();
}

uint64_t sub_227E30804@<X0>(uint64_t a1@<X8>)
{
  return sub_227E30820(&qword_2559281F0, (uint64_t)qword_255929870, a1);
}

uint64_t sub_227E30820@<X0>(_QWORD *a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;

  if (*a1 != -1)
    swift_once();
  v5 = sub_227E5F558();
  v6 = sub_227DDF6E4(v5, a2);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a3, v6, v5);
}

uint64_t sub_227E3088C()
{
  sub_227D51624(&qword_2559299E8, type metadata accessor for PBPropertyConfiguration, (uint64_t)&protocol conformance descriptor for PBPropertyConfiguration);
  return sub_227E5F4C8();
}

uint64_t sub_227E308D0()
{
  sub_227D51624(&qword_2559299E8, type metadata accessor for PBPropertyConfiguration, (uint64_t)&protocol conformance descriptor for PBPropertyConfiguration);
  return sub_227E5F4D4();
}

unint64_t static PBPropertyNoParams.protoMessageName.getter()
{
  return 0xD000000000000012;
}

uint64_t sub_227E30944()
{
  uint64_t v0;

  v0 = sub_227E5F558();
  sub_227DDF6FC(v0, qword_255929888);
  sub_227DDF6E4(v0, (uint64_t)qword_255929888);
  return sub_227E5F54C();
}

uint64_t static PBPropertyNoParams._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_227E3043C(&qword_2559281F8, (uint64_t)qword_255929888, a1);
}

uint64_t PBPropertyNoParams.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  do
    result = sub_227E5F42C();
  while (!v0 && (v2 & 1) == 0);
  return result;
}

uint64_t PBPropertyNoParams.traverse<A>(visitor:)()
{
  return sub_227E5F3CC();
}

uint64_t PBPropertyNoParams.hashValue.getter()
{
  return sub_227E351E0(type metadata accessor for PBPropertyNoParams, &qword_255929958, (uint64_t)&protocol conformance descriptor for PBPropertyNoParams);
}

unint64_t sub_227E30A1C()
{
  return 0xD000000000000012;
}

uint64_t sub_227E30A38@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_227E5F3E4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t sub_227E30A70(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_227E5F3E4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*sub_227E30AA8())()
{
  return nullsub_1;
}

uint64_t sub_227E30AB8()
{
  return PBPropertyNoParams.decodeMessage<A>(decoder:)();
}

uint64_t sub_227E30ACC()
{
  return PBPropertyNoParams.traverse<A>(visitor:)();
}

uint64_t sub_227E30AE0()
{
  sub_227D51624(&qword_255929C88, type metadata accessor for PBPropertyNoParams, (uint64_t)&protocol conformance descriptor for PBPropertyNoParams);
  return sub_227E5F414();
}

uint64_t sub_227E30B30@<X0>(uint64_t a1@<X8>)
{
  return sub_227E30820(&qword_2559281F8, (uint64_t)qword_255929888, a1);
}

uint64_t sub_227E30B4C()
{
  sub_227D51624(&qword_255929A00, type metadata accessor for PBPropertyNoParams, (uint64_t)&protocol conformance descriptor for PBPropertyNoParams);
  return sub_227E5F4C8();
}

uint64_t sub_227E30B8C()
{
  sub_227D51624(&qword_255929A00, type metadata accessor for PBPropertyNoParams, (uint64_t)&protocol conformance descriptor for PBPropertyNoParams);
  return sub_227E5F4D4();
}

uint64_t sub_227E30BDC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void (*v14)(char *, uint64_t, uint64_t);
  void (*v15)(char *, uint64_t);
  uint64_t v17;

  v4 = sub_227E5F3E4();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10];
  v6 = *(_QWORD *)(v4 - 8);
  v8 = MEMORY[0x24BDAC7A8](v4, v7);
  v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8, v11);
  v13 = (char *)&v17 - v12;
  v14 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  v14((char *)&v17 - v12, a1, v4);
  v14(v10, a2, v4);
  sub_227D51624(&qword_255929948, v5, MEMORY[0x24BE5BF20]);
  LOBYTE(a2) = sub_227E5FF6C();
  v15 = *(void (**)(char *, uint64_t))(v6 + 8);
  v15(v10, v4);
  v15(v13, v4);
  return a2 & 1;
}

unint64_t static PBPropertySingleFloatParam.protoMessageName.getter()
{
  return 0xD00000000000001ALL;
}

uint64_t sub_227E30D04(uint64_t a1)
{
  return sub_227E31758(a1, qword_2559298A0, (uint64_t)"value", 5);
}

uint64_t static PBPropertySingleFloatParam._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_227E3043C(&qword_255928200, (uint64_t)qword_2559298A0, a1);
}

uint64_t PBPropertySingleFloatParam.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  while (1)
  {
    result = sub_227E5F42C();
    if (v0 || (v2 & 1) != 0)
      break;
    if (result == 1)
      sub_227E5F45C();
  }
  return result;
}

uint64_t PBPropertySingleFloatParam.traverse<A>(visitor:)()
{
  float *v0;
  uint64_t v1;
  uint64_t result;

  if (*v0 == 0.0 || (result = sub_227E5F4F8(), !v1))
  {
    type metadata accessor for PBPropertySingleFloatParam(0);
    return sub_227E5F3CC();
  }
  return result;
}

uint64_t PBPropertySingleFloatParam.hashValue.getter()
{
  return sub_227E351E0(type metadata accessor for PBPropertySingleFloatParam, &qword_255929960, (uint64_t)&protocol conformance descriptor for PBPropertySingleFloatParam);
}

uint64_t sub_227E30E54@<X0>(_DWORD *a1@<X8>)
{
  *a1 = 0;
  return _s13BookDataStore18PBPropertyNoParamsVACycfC_0();
}

unint64_t sub_227E30E74()
{
  return 0xD00000000000001ALL;
}

uint64_t (*sub_227E30E98())()
{
  return nullsub_1;
}

uint64_t sub_227E30EAC()
{
  return PBPropertySingleFloatParam.decodeMessage<A>(decoder:)();
}

uint64_t sub_227E30EC0()
{
  return PBPropertySingleFloatParam.traverse<A>(visitor:)();
}

uint64_t sub_227E30ED4()
{
  sub_227D51624(&qword_255929C80, type metadata accessor for PBPropertySingleFloatParam, (uint64_t)&protocol conformance descriptor for PBPropertySingleFloatParam);
  return sub_227E5F414();
}

uint64_t sub_227E30F24@<X0>(uint64_t a1@<X8>)
{
  return sub_227E30820(&qword_255928200, (uint64_t)qword_2559298A0, a1);
}

uint64_t sub_227E30F40()
{
  sub_227D51624(&qword_255929A18, type metadata accessor for PBPropertySingleFloatParam, (uint64_t)&protocol conformance descriptor for PBPropertySingleFloatParam);
  return sub_227E5F4C8();
}

uint64_t sub_227E30F80()
{
  sub_227D51624(&qword_255929A18, type metadata accessor for PBPropertySingleFloatParam, (uint64_t)&protocol conformance descriptor for PBPropertySingleFloatParam);
  return sub_227E5F4D4();
}

unint64_t static PBPropertyBookReadParams.protoMessageName.getter()
{
  return 0xD000000000000018;
}

uint64_t sub_227E30FF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_227E5F558();
  sub_227DDF6FC(v0, qword_2559298B8);
  sub_227DDF6E4(v0, (uint64_t)qword_2559298B8);
  sub_227D68330(&qword_255929CA8);
  v1 = sub_227D68330(&qword_255929CB0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_227E6F040;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "isSample";
  *(_QWORD *)(v7 + 8) = 8;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_227E5F534();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "progress";
  *((_QWORD *)v11 + 1) = 8;
  v11[16] = 2;
  v10();
  return sub_227E5F540();
}

uint64_t static PBPropertyBookReadParams._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_227E3043C(&qword_255928208, (uint64_t)qword_2559298B8, a1);
}

uint64_t PBPropertyBookReadParams.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  result = sub_227E5F42C();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (result == 2)
      {
        sub_227E5F45C();
      }
      else if (result == 1)
      {
        sub_227E5F444();
      }
      result = sub_227E5F42C();
    }
  }
  return result;
}

uint64_t PBPropertyBookReadParams.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  if (*(_BYTE *)v0 != 1 || (result = sub_227E5F4E0(), !v1))
  {
    if (*(float *)(v0 + 4) == 0.0 || (result = sub_227E5F4F8(), !v1))
    {
      type metadata accessor for PBPropertyBookReadParams(0);
      return sub_227E5F3CC();
    }
  }
  return result;
}

uint64_t PBPropertyBookReadParams.hashValue.getter()
{
  return sub_227E351E0(type metadata accessor for PBPropertyBookReadParams, &qword_255929968, (uint64_t)&protocol conformance descriptor for PBPropertyBookReadParams);
}

uint64_t sub_227E312E0@<X0>(uint64_t a1@<X8>)
{
  *(_BYTE *)a1 = 0;
  *(_DWORD *)(a1 + 4) = 0;
  return _s13BookDataStore18PBPropertyNoParamsVACycfC_0();
}

unint64_t sub_227E31304()
{
  return 0xD000000000000018;
}

uint64_t sub_227E31328()
{
  return PBPropertyBookReadParams.decodeMessage<A>(decoder:)();
}

uint64_t sub_227E3133C()
{
  return PBPropertyBookReadParams.traverse<A>(visitor:)();
}

uint64_t sub_227E31350()
{
  sub_227D51624(&qword_255929C78, type metadata accessor for PBPropertyBookReadParams, (uint64_t)&protocol conformance descriptor for PBPropertyBookReadParams);
  return sub_227E5F414();
}

uint64_t sub_227E313A0@<X0>(uint64_t a1@<X8>)
{
  return sub_227E30820(&qword_255928208, (uint64_t)qword_2559298B8, a1);
}

uint64_t sub_227E313BC()
{
  sub_227D51624(&qword_255929A30, type metadata accessor for PBPropertyBookReadParams, (uint64_t)&protocol conformance descriptor for PBPropertyBookReadParams);
  return sub_227E5F4C8();
}

uint64_t sub_227E313FC()
{
  sub_227D51624(&qword_255929A30, type metadata accessor for PBPropertyBookReadParams, (uint64_t)&protocol conformance descriptor for PBPropertyBookReadParams);
  return sub_227E5F4D4();
}

unint64_t static PBPropertyBookImpressionParam.protoMessageName.getter()
{
  return 0xD00000000000001DLL;
}

uint64_t sub_227E3146C(uint64_t a1)
{
  return sub_227E31758(a1, qword_2559298D0, (uint64_t)"wasRecommendedByBooksPersonalization", 36);
}

uint64_t static PBPropertyBookImpressionParam._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_227E3043C(&qword_255928210, (uint64_t)qword_2559298D0, a1);
}

uint64_t PBPropertyBookImpressionParam.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  while (1)
  {
    result = sub_227E5F42C();
    if (v0 || (v2 & 1) != 0)
      break;
    if (result == 1)
      sub_227E5F444();
  }
  return result;
}

uint64_t PBPropertyBookImpressionParam.traverse<A>(visitor:)()
{
  _BYTE *v0;
  uint64_t v1;
  uint64_t result;

  if (*v0 != 1 || (result = sub_227E5F4E0(), !v1))
  {
    type metadata accessor for PBPropertyBookImpressionParam(0);
    return sub_227E5F3CC();
  }
  return result;
}

uint64_t PBPropertyBookImpressionParam.hashValue.getter()
{
  return sub_227E351E0(type metadata accessor for PBPropertyBookImpressionParam, &qword_255929970, (uint64_t)&protocol conformance descriptor for PBPropertyBookImpressionParam);
}

uint64_t sub_227E315C0@<X0>(_BYTE *a1@<X8>)
{
  *a1 = 0;
  return _s13BookDataStore18PBPropertyNoParamsVACycfC_0();
}

unint64_t sub_227E315E0()
{
  return 0xD00000000000001DLL;
}

uint64_t sub_227E315FC()
{
  return PBPropertyBookImpressionParam.decodeMessage<A>(decoder:)();
}

uint64_t sub_227E31610()
{
  return PBPropertyBookImpressionParam.traverse<A>(visitor:)();
}

uint64_t sub_227E31624()
{
  sub_227D51624(&qword_255929C70, type metadata accessor for PBPropertyBookImpressionParam, (uint64_t)&protocol conformance descriptor for PBPropertyBookImpressionParam);
  return sub_227E5F414();
}

uint64_t sub_227E31674@<X0>(uint64_t a1@<X8>)
{
  return sub_227E30820(&qword_255928210, (uint64_t)qword_2559298D0, a1);
}

uint64_t sub_227E31690()
{
  sub_227D51624(&qword_255929A48, type metadata accessor for PBPropertyBookImpressionParam, (uint64_t)&protocol conformance descriptor for PBPropertyBookImpressionParam);
  return sub_227E5F4C8();
}

uint64_t sub_227E316D0()
{
  sub_227D51624(&qword_255929A48, type metadata accessor for PBPropertyBookImpressionParam, (uint64_t)&protocol conformance descriptor for PBPropertyBookImpressionParam);
  return sub_227E5F4D4();
}

unint64_t static PBPropertyMarkedAsFinishedParam.protoMessageName.getter()
{
  return 0xD00000000000001FLL;
}

uint64_t sub_227E31740(uint64_t a1)
{
  return sub_227E31758(a1, qword_2559298E8, (uint64_t)"value", 5);
}

uint64_t sub_227E31758(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v7 = sub_227E5F558();
  sub_227DDF6FC(v7, a2);
  sub_227DDF6E4(v7, (uint64_t)a2);
  sub_227D68330(&qword_255929CA8);
  v8 = sub_227D68330(&qword_255929CB0);
  v9 = *(unsigned __int8 *)(*(_QWORD *)(v8 - 8) + 80);
  v10 = (v9 + 32) & ~v9;
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_227E6F1B0;
  v12 = v11 + v10 + *(int *)(v8 + 48);
  *(_QWORD *)(v11 + v10) = 1;
  *(_QWORD *)v12 = a3;
  *(_QWORD *)(v12 + 8) = a4;
  *(_BYTE *)(v12 + 16) = 2;
  v13 = *MEMORY[0x24BE5C318];
  v14 = sub_227E5F534();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v12, v13, v14);
  return sub_227E5F540();
}

uint64_t static PBPropertyMarkedAsFinishedParam._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_227E3043C(&qword_255928218, (uint64_t)qword_2559298E8, a1);
}

uint64_t PBPropertyMarkedAsFinishedParam.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  result = sub_227E5F42C();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (result == 1)
      {
        sub_227E371A4();
        sub_227E5F450();
      }
      result = sub_227E5F42C();
    }
  }
  return result;
}

uint64_t PBPropertyMarkedAsFinishedParam.traverse<A>(visitor:)()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t result;

  if (!*v0 || (sub_227E371A4(), result = sub_227E5F4EC(), !v1))
  {
    type metadata accessor for PBPropertyMarkedAsFinishedParam(0);
    return sub_227E5F3CC();
  }
  return result;
}

uint64_t PBPropertyMarkedAsFinishedParam.hashValue.getter()
{
  return sub_227E351E0(type metadata accessor for PBPropertyMarkedAsFinishedParam, &qword_255929980, (uint64_t)&protocol conformance descriptor for PBPropertyMarkedAsFinishedParam);
}

uint64_t sub_227E319F8@<X0>(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
  return _s13BookDataStore18PBPropertyNoParamsVACycfC_0();
}

unint64_t sub_227E31A20()
{
  return 0xD00000000000001FLL;
}

uint64_t sub_227E31A3C()
{
  return PBPropertyMarkedAsFinishedParam.decodeMessage<A>(decoder:)();
}

uint64_t sub_227E31A50()
{
  return PBPropertyMarkedAsFinishedParam.traverse<A>(visitor:)();
}

uint64_t sub_227E31A64()
{
  sub_227D51624(&qword_255929C68, type metadata accessor for PBPropertyMarkedAsFinishedParam, (uint64_t)&protocol conformance descriptor for PBPropertyMarkedAsFinishedParam);
  return sub_227E5F414();
}

uint64_t sub_227E31AB4@<X0>(uint64_t a1@<X8>)
{
  return sub_227E30820(&qword_255928218, (uint64_t)qword_2559298E8, a1);
}

uint64_t sub_227E31AD0()
{
  sub_227D51624(&qword_255929A60, type metadata accessor for PBPropertyMarkedAsFinishedParam, (uint64_t)&protocol conformance descriptor for PBPropertyMarkedAsFinishedParam);
  return sub_227E5F4C8();
}

uint64_t sub_227E31B10()
{
  sub_227D51624(&qword_255929A60, type metadata accessor for PBPropertyMarkedAsFinishedParam, (uint64_t)&protocol conformance descriptor for PBPropertyMarkedAsFinishedParam);
  return sub_227E5F4D4();
}

uint64_t static PBPropertyValue.protoMessageName.getter()
{
  return 0x7265706F72504250;
}

uint64_t sub_227E31B88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  _QWORD *v18;
  char *v19;
  _QWORD *v20;
  char *v21;
  _QWORD *v22;
  char *v23;

  v0 = sub_227E5F558();
  sub_227DDF6FC(v0, qword_255929900);
  sub_227DDF6E4(v0, (uint64_t)qword_255929900);
  sub_227D68330(&qword_255929CA8);
  v1 = sub_227D68330(&qword_255929CB0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_227E71C30;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 1;
  *(_QWORD *)v7 = "createdAt";
  *(_QWORD *)(v7 + 8) = 9;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_227E5F534();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 2;
  *(_QWORD *)v11 = "identifier";
  *(_QWORD *)(v11 + 8) = 10;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "assetID";
  *((_QWORD *)v13 + 1) = 7;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 4;
  *(_QWORD *)v15 = "noParams";
  *((_QWORD *)v15 + 1) = 8;
  v15[16] = 2;
  v10();
  v16 = (_QWORD *)(v6 + 4 * v3);
  v17 = (char *)v16 + *(int *)(v1 + 48);
  *v16 = 5;
  *(_QWORD *)v17 = "floatParam";
  *((_QWORD *)v17 + 1) = 10;
  v17[16] = 2;
  v10();
  v18 = (_QWORD *)(v6 + 5 * v3);
  v19 = (char *)v18 + *(int *)(v1 + 48);
  *v18 = 6;
  *(_QWORD *)v19 = "bookReadParams";
  *((_QWORD *)v19 + 1) = 14;
  v19[16] = 2;
  v10();
  v20 = (_QWORD *)(v6 + 6 * v3);
  v21 = (char *)v20 + *(int *)(v1 + 48);
  *v20 = 7;
  *(_QWORD *)v21 = "markedAsFinishedParam";
  *((_QWORD *)v21 + 1) = 21;
  v21[16] = 2;
  v10();
  v22 = (_QWORD *)(v6 + 7 * v3);
  v23 = (char *)v22 + *(int *)(v1 + 48);
  *v22 = 8;
  *(_QWORD *)v23 = "bookImpressionParam";
  *((_QWORD *)v23 + 1) = 19;
  v23[16] = 2;
  v10();
  return sub_227E5F540();
}

uint64_t static PBPropertyValue._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_227E3043C(&qword_255928220, (uint64_t)qword_255929900, a1);
}

uint64_t PBPropertyValue.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  char v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;

  v5 = v3;
  result = sub_227E5F42C();
  if (!v4)
  {
    v11 = (uint64_t (*)(uint64_t))MEMORY[0x24BE5B990];
    v12 = MEMORY[0x24BE5B980];
    while ((v10 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          sub_227E3468C(a1, v5, a2, a3, (void (*)(_QWORD))type metadata accessor for PBPropertyValue, v11, &qword_255929998, v12);
          break;
        case 2:
          type metadata accessor for PBPropertyValue(0);
          sub_227E5F474();
          break;
        case 3:
          sub_227E5F468();
          break;
        case 4:
          sub_227E32040(v5, a1, a2, a3);
          break;
        case 5:
          sub_227E3245C(v5, a1, a2, a3);
          break;
        case 6:
          sub_227E3287C(v5, a1, a2, a3);
          break;
        case 7:
          sub_227E32C9C(v5, a1, a2, a3);
          break;
        case 8:
          sub_227E330BC(v5, a1, a2, a3);
          break;
        default:
          break;
      }
      result = sub_227E5F42C();
    }
  }
  return result;
}

uint64_t sub_227E32040(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  void (*v32)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v46 = a2;
  v47 = a3;
  v48 = a4;
  v49 = a1;
  v4 = type metadata accessor for PBPropertyNoParams(0);
  v5 = *(_QWORD *)(v4 - 8);
  v7 = MEMORY[0x24BDAC7A8](v4, v6);
  v42 = (uint64_t)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7, v9);
  v11 = (char *)&v39 - v10;
  v12 = sub_227D68330(&qword_255928C90);
  MEMORY[0x24BDAC7A8](v12, v13);
  v15 = (char *)&v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for PBPropertyValue.OneOf_Params(0);
  v17 = *(_QWORD *)(v16 - 8);
  v19 = MEMORY[0x24BDAC7A8](v16, v18);
  v21 = (char *)&v39 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19, v22);
  v24 = (char *)&v39 - v23;
  v25 = sub_227D68330(&qword_255929CC0);
  v27 = MEMORY[0x24BDAC7A8](v25, v26);
  v43 = (uint64_t)&v39 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v27, v29);
  v31 = (char *)&v39 - v30;
  v44 = v5;
  v32 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
  v32((char *)&v39 - v30, 1, 1, v4);
  v40 = v49 + *(int *)(type metadata accessor for PBPropertyValue(0) + 20);
  sub_227D5DF48(v40, (uint64_t)v15, &qword_255928C90);
  v41 = v17;
  LODWORD(v49) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16);
  if ((_DWORD)v49 == 1)
  {
    sub_227D5809C((uint64_t)v15, &qword_255928C90);
    v33 = v16;
  }
  else
  {
    sub_227D5E458((uint64_t)v15, (uint64_t)v24, type metadata accessor for PBPropertyValue.OneOf_Params);
    sub_227D5E458((uint64_t)v24, (uint64_t)v21, type metadata accessor for PBPropertyValue.OneOf_Params);
    v33 = v16;
    if (swift_getEnumCaseMultiPayload())
    {
      sub_227D64BC4((uint64_t)v21, type metadata accessor for PBPropertyValue.OneOf_Params);
    }
    else
    {
      sub_227D5809C((uint64_t)v31, &qword_255929CC0);
      sub_227D5E458((uint64_t)v21, (uint64_t)v11, type metadata accessor for PBPropertyNoParams);
      sub_227D5E458((uint64_t)v11, (uint64_t)v31, type metadata accessor for PBPropertyNoParams);
      v32(v31, 0, 1, v4);
    }
  }
  v34 = v45;
  sub_227D51624(&qword_255929A00, type metadata accessor for PBPropertyNoParams, (uint64_t)&protocol conformance descriptor for PBPropertyNoParams);
  sub_227E5F498();
  if (v34)
    return sub_227D5809C((uint64_t)v31, &qword_255929CC0);
  v36 = v43;
  sub_227D5DF48((uint64_t)v31, v43, &qword_255929CC0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v44 + 48))(v36, 1, v4) == 1)
  {
    sub_227D5809C((uint64_t)v31, &qword_255929CC0);
    return sub_227D5809C(v36, &qword_255929CC0);
  }
  else
  {
    v37 = v42;
    sub_227D5E458(v36, v42, type metadata accessor for PBPropertyNoParams);
    if ((_DWORD)v49 != 1)
      sub_227E5F438();
    sub_227D5809C((uint64_t)v31, &qword_255929CC0);
    v38 = v40;
    sub_227D5809C(v40, &qword_255928C90);
    sub_227D5E458(v37, v38, type metadata accessor for PBPropertyNoParams);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v41 + 56))(v38, 0, 1, v33);
  }
}

uint64_t sub_227E3245C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  void (*v32)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v46 = a2;
  v47 = a3;
  v48 = a4;
  v49 = a1;
  v4 = type metadata accessor for PBPropertySingleFloatParam(0);
  v5 = *(_QWORD *)(v4 - 8);
  v7 = MEMORY[0x24BDAC7A8](v4, v6);
  v42 = (uint64_t)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7, v9);
  v11 = (char *)&v39 - v10;
  v12 = sub_227D68330(&qword_255928C90);
  MEMORY[0x24BDAC7A8](v12, v13);
  v15 = (char *)&v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for PBPropertyValue.OneOf_Params(0);
  v17 = *(_QWORD *)(v16 - 8);
  v19 = MEMORY[0x24BDAC7A8](v16, v18);
  v21 = (char *)&v39 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19, v22);
  v24 = (char *)&v39 - v23;
  v25 = sub_227D68330(&qword_255929CC8);
  v27 = MEMORY[0x24BDAC7A8](v25, v26);
  v43 = (uint64_t)&v39 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v27, v29);
  v31 = (char *)&v39 - v30;
  v44 = v5;
  v32 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
  v32((char *)&v39 - v30, 1, 1, v4);
  v40 = v49 + *(int *)(type metadata accessor for PBPropertyValue(0) + 20);
  sub_227D5DF48(v40, (uint64_t)v15, &qword_255928C90);
  v41 = v17;
  LODWORD(v49) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16);
  if ((_DWORD)v49 == 1)
  {
    sub_227D5809C((uint64_t)v15, &qword_255928C90);
    v33 = v16;
  }
  else
  {
    sub_227D5E458((uint64_t)v15, (uint64_t)v24, type metadata accessor for PBPropertyValue.OneOf_Params);
    sub_227D5E458((uint64_t)v24, (uint64_t)v21, type metadata accessor for PBPropertyValue.OneOf_Params);
    v33 = v16;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_227D5809C((uint64_t)v31, &qword_255929CC8);
      sub_227D5E458((uint64_t)v21, (uint64_t)v11, type metadata accessor for PBPropertySingleFloatParam);
      sub_227D5E458((uint64_t)v11, (uint64_t)v31, type metadata accessor for PBPropertySingleFloatParam);
      v32(v31, 0, 1, v4);
    }
    else
    {
      sub_227D64BC4((uint64_t)v21, type metadata accessor for PBPropertyValue.OneOf_Params);
    }
  }
  v34 = v45;
  sub_227D51624(&qword_255929A18, type metadata accessor for PBPropertySingleFloatParam, (uint64_t)&protocol conformance descriptor for PBPropertySingleFloatParam);
  sub_227E5F498();
  if (v34)
    return sub_227D5809C((uint64_t)v31, &qword_255929CC8);
  v36 = v43;
  sub_227D5DF48((uint64_t)v31, v43, &qword_255929CC8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v44 + 48))(v36, 1, v4) == 1)
  {
    sub_227D5809C((uint64_t)v31, &qword_255929CC8);
    return sub_227D5809C(v36, &qword_255929CC8);
  }
  else
  {
    v37 = v42;
    sub_227D5E458(v36, v42, type metadata accessor for PBPropertySingleFloatParam);
    if ((_DWORD)v49 != 1)
      sub_227E5F438();
    sub_227D5809C((uint64_t)v31, &qword_255929CC8);
    v38 = v40;
    sub_227D5809C(v40, &qword_255928C90);
    sub_227D5E458(v37, v38, type metadata accessor for PBPropertySingleFloatParam);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v41 + 56))(v38, 0, 1, v33);
  }
}

uint64_t sub_227E3287C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t Params;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  void (*v32)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v46 = a2;
  v47 = a3;
  v48 = a4;
  v49 = a1;
  Params = type metadata accessor for PBPropertyBookReadParams(0);
  v5 = *(_QWORD *)(Params - 8);
  v7 = MEMORY[0x24BDAC7A8](Params, v6);
  v42 = (uint64_t)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7, v9);
  v11 = (char *)&v39 - v10;
  v12 = sub_227D68330(&qword_255928C90);
  MEMORY[0x24BDAC7A8](v12, v13);
  v15 = (char *)&v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for PBPropertyValue.OneOf_Params(0);
  v17 = *(_QWORD *)(v16 - 8);
  v19 = MEMORY[0x24BDAC7A8](v16, v18);
  v21 = (char *)&v39 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19, v22);
  v24 = (char *)&v39 - v23;
  v25 = sub_227D68330(&qword_255929CD0);
  v27 = MEMORY[0x24BDAC7A8](v25, v26);
  v43 = (uint64_t)&v39 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v27, v29);
  v31 = (char *)&v39 - v30;
  v44 = v5;
  v32 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
  v32((char *)&v39 - v30, 1, 1, Params);
  v40 = v49 + *(int *)(type metadata accessor for PBPropertyValue(0) + 20);
  sub_227D5DF48(v40, (uint64_t)v15, &qword_255928C90);
  v41 = v17;
  LODWORD(v49) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16);
  if ((_DWORD)v49 == 1)
  {
    sub_227D5809C((uint64_t)v15, &qword_255928C90);
    v33 = v16;
  }
  else
  {
    sub_227D5E458((uint64_t)v15, (uint64_t)v24, type metadata accessor for PBPropertyValue.OneOf_Params);
    sub_227D5E458((uint64_t)v24, (uint64_t)v21, type metadata accessor for PBPropertyValue.OneOf_Params);
    v33 = v16;
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      sub_227D5809C((uint64_t)v31, &qword_255929CD0);
      sub_227D5E458((uint64_t)v21, (uint64_t)v11, type metadata accessor for PBPropertyBookReadParams);
      sub_227D5E458((uint64_t)v11, (uint64_t)v31, type metadata accessor for PBPropertyBookReadParams);
      v32(v31, 0, 1, Params);
    }
    else
    {
      sub_227D64BC4((uint64_t)v21, type metadata accessor for PBPropertyValue.OneOf_Params);
    }
  }
  v34 = v45;
  sub_227D51624(&qword_255929A30, type metadata accessor for PBPropertyBookReadParams, (uint64_t)&protocol conformance descriptor for PBPropertyBookReadParams);
  sub_227E5F498();
  if (v34)
    return sub_227D5809C((uint64_t)v31, &qword_255929CD0);
  v36 = v43;
  sub_227D5DF48((uint64_t)v31, v43, &qword_255929CD0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v44 + 48))(v36, 1, Params) == 1)
  {
    sub_227D5809C((uint64_t)v31, &qword_255929CD0);
    return sub_227D5809C(v36, &qword_255929CD0);
  }
  else
  {
    v37 = v42;
    sub_227D5E458(v36, v42, type metadata accessor for PBPropertyBookReadParams);
    if ((_DWORD)v49 != 1)
      sub_227E5F438();
    sub_227D5809C((uint64_t)v31, &qword_255929CD0);
    v38 = v40;
    sub_227D5809C(v40, &qword_255928C90);
    sub_227D5E458(v37, v38, type metadata accessor for PBPropertyBookReadParams);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v41 + 56))(v38, 0, 1, v33);
  }
}

uint64_t sub_227E32C9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  void (*v32)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v46 = a2;
  v47 = a3;
  v48 = a4;
  v49 = a1;
  v4 = type metadata accessor for PBPropertyMarkedAsFinishedParam(0);
  v5 = *(_QWORD *)(v4 - 8);
  v7 = MEMORY[0x24BDAC7A8](v4, v6);
  v42 = (uint64_t)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7, v9);
  v11 = (char *)&v39 - v10;
  v12 = sub_227D68330(&qword_255928C90);
  MEMORY[0x24BDAC7A8](v12, v13);
  v15 = (char *)&v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for PBPropertyValue.OneOf_Params(0);
  v17 = *(_QWORD *)(v16 - 8);
  v19 = MEMORY[0x24BDAC7A8](v16, v18);
  v21 = (char *)&v39 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19, v22);
  v24 = (char *)&v39 - v23;
  v25 = sub_227D68330(&qword_255929CD8);
  v27 = MEMORY[0x24BDAC7A8](v25, v26);
  v43 = (uint64_t)&v39 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v27, v29);
  v31 = (char *)&v39 - v30;
  v44 = v5;
  v32 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
  v32((char *)&v39 - v30, 1, 1, v4);
  v40 = v49 + *(int *)(type metadata accessor for PBPropertyValue(0) + 20);
  sub_227D5DF48(v40, (uint64_t)v15, &qword_255928C90);
  v41 = v17;
  LODWORD(v49) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16);
  if ((_DWORD)v49 == 1)
  {
    sub_227D5809C((uint64_t)v15, &qword_255928C90);
    v33 = v16;
  }
  else
  {
    sub_227D5E458((uint64_t)v15, (uint64_t)v24, type metadata accessor for PBPropertyValue.OneOf_Params);
    sub_227D5E458((uint64_t)v24, (uint64_t)v21, type metadata accessor for PBPropertyValue.OneOf_Params);
    v33 = v16;
    if (swift_getEnumCaseMultiPayload() == 3)
    {
      sub_227D5809C((uint64_t)v31, &qword_255929CD8);
      sub_227D5E458((uint64_t)v21, (uint64_t)v11, type metadata accessor for PBPropertyMarkedAsFinishedParam);
      sub_227D5E458((uint64_t)v11, (uint64_t)v31, type metadata accessor for PBPropertyMarkedAsFinishedParam);
      v32(v31, 0, 1, v4);
    }
    else
    {
      sub_227D64BC4((uint64_t)v21, type metadata accessor for PBPropertyValue.OneOf_Params);
    }
  }
  v34 = v45;
  sub_227D51624(&qword_255929A60, type metadata accessor for PBPropertyMarkedAsFinishedParam, (uint64_t)&protocol conformance descriptor for PBPropertyMarkedAsFinishedParam);
  sub_227E5F498();
  if (v34)
    return sub_227D5809C((uint64_t)v31, &qword_255929CD8);
  v36 = v43;
  sub_227D5DF48((uint64_t)v31, v43, &qword_255929CD8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v44 + 48))(v36, 1, v4) == 1)
  {
    sub_227D5809C((uint64_t)v31, &qword_255929CD8);
    return sub_227D5809C(v36, &qword_255929CD8);
  }
  else
  {
    v37 = v42;
    sub_227D5E458(v36, v42, type metadata accessor for PBPropertyMarkedAsFinishedParam);
    if ((_DWORD)v49 != 1)
      sub_227E5F438();
    sub_227D5809C((uint64_t)v31, &qword_255929CD8);
    v38 = v40;
    sub_227D5809C(v40, &qword_255928C90);
    sub_227D5E458(v37, v38, type metadata accessor for PBPropertyMarkedAsFinishedParam);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v41 + 56))(v38, 0, 1, v33);
  }
}

uint64_t sub_227E330BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  void (*v32)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v46 = a2;
  v47 = a3;
  v48 = a4;
  v49 = a1;
  v4 = type metadata accessor for PBPropertyBookImpressionParam(0);
  v5 = *(_QWORD *)(v4 - 8);
  v7 = MEMORY[0x24BDAC7A8](v4, v6);
  v42 = (uint64_t)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7, v9);
  v11 = (char *)&v39 - v10;
  v12 = sub_227D68330(&qword_255928C90);
  MEMORY[0x24BDAC7A8](v12, v13);
  v15 = (char *)&v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for PBPropertyValue.OneOf_Params(0);
  v17 = *(_QWORD *)(v16 - 8);
  v19 = MEMORY[0x24BDAC7A8](v16, v18);
  v21 = (char *)&v39 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19, v22);
  v24 = (char *)&v39 - v23;
  v25 = sub_227D68330(&qword_255929CE0);
  v27 = MEMORY[0x24BDAC7A8](v25, v26);
  v43 = (uint64_t)&v39 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v27, v29);
  v31 = (char *)&v39 - v30;
  v44 = v5;
  v32 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
  v32((char *)&v39 - v30, 1, 1, v4);
  v40 = v49 + *(int *)(type metadata accessor for PBPropertyValue(0) + 20);
  sub_227D5DF48(v40, (uint64_t)v15, &qword_255928C90);
  v41 = v17;
  LODWORD(v49) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16);
  if ((_DWORD)v49 == 1)
  {
    sub_227D5809C((uint64_t)v15, &qword_255928C90);
    v33 = v16;
  }
  else
  {
    sub_227D5E458((uint64_t)v15, (uint64_t)v24, type metadata accessor for PBPropertyValue.OneOf_Params);
    sub_227D5E458((uint64_t)v24, (uint64_t)v21, type metadata accessor for PBPropertyValue.OneOf_Params);
    v33 = v16;
    if (swift_getEnumCaseMultiPayload() == 4)
    {
      sub_227D5809C((uint64_t)v31, &qword_255929CE0);
      sub_227D5E458((uint64_t)v21, (uint64_t)v11, type metadata accessor for PBPropertyBookImpressionParam);
      sub_227D5E458((uint64_t)v11, (uint64_t)v31, type metadata accessor for PBPropertyBookImpressionParam);
      v32(v31, 0, 1, v4);
    }
    else
    {
      sub_227D64BC4((uint64_t)v21, type metadata accessor for PBPropertyValue.OneOf_Params);
    }
  }
  v34 = v45;
  sub_227D51624(&qword_255929A48, type metadata accessor for PBPropertyBookImpressionParam, (uint64_t)&protocol conformance descriptor for PBPropertyBookImpressionParam);
  sub_227E5F498();
  if (v34)
    return sub_227D5809C((uint64_t)v31, &qword_255929CE0);
  v36 = v43;
  sub_227D5DF48((uint64_t)v31, v43, &qword_255929CE0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v44 + 48))(v36, 1, v4) == 1)
  {
    sub_227D5809C((uint64_t)v31, &qword_255929CE0);
    return sub_227D5809C(v36, &qword_255929CE0);
  }
  else
  {
    v37 = v42;
    sub_227D5E458(v36, v42, type metadata accessor for PBPropertyBookImpressionParam);
    if ((_DWORD)v49 != 1)
      sub_227E5F438();
    sub_227D5809C((uint64_t)v31, &qword_255929CE0);
    v38 = v40;
    sub_227D5809C(v40, &qword_255928C90);
    sub_227D5E458(v37, v38, type metadata accessor for PBPropertyBookImpressionParam);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v41 + 56))(v38, 0, 1, v33);
  }
}

uint64_t PBPropertyValue.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;

  v8 = sub_227D68330(&qword_255928C90);
  MEMORY[0x24BDAC7A8](v8, v9);
  v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = sub_227E33708((uint64_t)v3, a1, a2, a3);
  if (!v4)
  {
    sub_227E33880((uint64_t)v3);
    if (*v3)
      sub_227E5F504();
    v13 = type metadata accessor for PBPropertyValue(0);
    sub_227D5DF48((uint64_t)v3 + *(int *)(v13 + 20), (uint64_t)v11, &qword_255928C90);
    v14 = type metadata accessor for PBPropertyValue.OneOf_Params(0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(v11, 1, v14) != 1)
    {
      v15 = (char *)&loc_227E33624 + 4 * byte_227E71C4C[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    return sub_227E5F3CC();
  }
  return result;
}

uint64_t sub_227E33708(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  _QWORD v16[2];

  v16[1] = a4;
  v5 = sub_227D68330(&qword_255928C98);
  MEMORY[0x24BDAC7A8](v5, v6);
  v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_227E5F3C0();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9, v11);
  v13 = (char *)v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for PBPropertyValue(0);
  sub_227D5DF48(a1 + *(int *)(v14 + 28), (uint64_t)v8, &qword_255928C98);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    return sub_227D5809C((uint64_t)v8, &qword_255928C98);
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v13, v8, v9);
  sub_227D51624(&qword_255929998, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B990], MEMORY[0x24BE5B980]);
  sub_227E5F528();
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v13, v9);
}

uint64_t sub_227E33880(uint64_t a1)
{
  uint64_t result;

  result = type metadata accessor for PBPropertyValue(0);
  if (*(_QWORD *)(a1 + *(int *)(result + 32) + 8))
    return sub_227E5F510();
  return result;
}

uint64_t sub_227E338F4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  _QWORD v13[2];

  v2 = sub_227D68330(&qword_255928C90);
  MEMORY[0x24BDAC7A8](v2, v3);
  v5 = (char *)v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for PBPropertyNoParams(0);
  MEMORY[0x24BDAC7A8](v6, v7);
  v9 = (char *)v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for PBPropertyValue(0);
  sub_227D5DF48(a1 + *(int *)(v10 + 20), (uint64_t)v5, &qword_255928C90);
  v11 = type metadata accessor for PBPropertyValue.OneOf_Params(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v5, 1, v11) == 1)
  {
    sub_227D5809C((uint64_t)v5, &qword_255928C90);
    __break(1u);
  }
  else if (!swift_getEnumCaseMultiPayload())
  {
    sub_227D5E458((uint64_t)v5, (uint64_t)v9, type metadata accessor for PBPropertyNoParams);
    sub_227D51624(&qword_255929A00, type metadata accessor for PBPropertyNoParams, (uint64_t)&protocol conformance descriptor for PBPropertyNoParams);
    sub_227E5F528();
    return sub_227D64BC4((uint64_t)v9, type metadata accessor for PBPropertyNoParams);
  }
  result = sub_227D64BC4((uint64_t)v5, type metadata accessor for PBPropertyValue.OneOf_Params);
  __break(1u);
  return result;
}

uint64_t sub_227E33A9C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  _QWORD v13[2];

  v2 = sub_227D68330(&qword_255928C90);
  MEMORY[0x24BDAC7A8](v2, v3);
  v5 = (char *)v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for PBPropertySingleFloatParam(0);
  MEMORY[0x24BDAC7A8](v6, v7);
  v9 = (char *)v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for PBPropertyValue(0);
  sub_227D5DF48(a1 + *(int *)(v10 + 20), (uint64_t)v5, &qword_255928C90);
  v11 = type metadata accessor for PBPropertyValue.OneOf_Params(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v5, 1, v11) == 1)
  {
    sub_227D5809C((uint64_t)v5, &qword_255928C90);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_227D5E458((uint64_t)v5, (uint64_t)v9, type metadata accessor for PBPropertySingleFloatParam);
    sub_227D51624(&qword_255929A18, type metadata accessor for PBPropertySingleFloatParam, (uint64_t)&protocol conformance descriptor for PBPropertySingleFloatParam);
    sub_227E5F528();
    return sub_227D64BC4((uint64_t)v9, type metadata accessor for PBPropertySingleFloatParam);
  }
  result = sub_227D64BC4((uint64_t)v5, type metadata accessor for PBPropertyValue.OneOf_Params);
  __break(1u);
  return result;
}

uint64_t sub_227E33C48(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t Params;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  _QWORD v13[2];

  v2 = sub_227D68330(&qword_255928C90);
  MEMORY[0x24BDAC7A8](v2, v3);
  v5 = (char *)v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  Params = type metadata accessor for PBPropertyBookReadParams(0);
  MEMORY[0x24BDAC7A8](Params, v7);
  v9 = (char *)v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for PBPropertyValue(0);
  sub_227D5DF48(a1 + *(int *)(v10 + 20), (uint64_t)v5, &qword_255928C90);
  v11 = type metadata accessor for PBPropertyValue.OneOf_Params(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v5, 1, v11) == 1)
  {
    sub_227D5809C((uint64_t)v5, &qword_255928C90);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 2)
  {
    sub_227D5E458((uint64_t)v5, (uint64_t)v9, type metadata accessor for PBPropertyBookReadParams);
    sub_227D51624(&qword_255929A30, type metadata accessor for PBPropertyBookReadParams, (uint64_t)&protocol conformance descriptor for PBPropertyBookReadParams);
    sub_227E5F528();
    return sub_227D64BC4((uint64_t)v9, type metadata accessor for PBPropertyBookReadParams);
  }
  result = sub_227D64BC4((uint64_t)v5, type metadata accessor for PBPropertyValue.OneOf_Params);
  __break(1u);
  return result;
}

uint64_t sub_227E33DF4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  _QWORD v13[2];

  v2 = sub_227D68330(&qword_255928C90);
  MEMORY[0x24BDAC7A8](v2, v3);
  v5 = (char *)v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for PBPropertyMarkedAsFinishedParam(0);
  MEMORY[0x24BDAC7A8](v6, v7);
  v9 = (char *)v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for PBPropertyValue(0);
  sub_227D5DF48(a1 + *(int *)(v10 + 20), (uint64_t)v5, &qword_255928C90);
  v11 = type metadata accessor for PBPropertyValue.OneOf_Params(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v5, 1, v11) == 1)
  {
    sub_227D5809C((uint64_t)v5, &qword_255928C90);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 3)
  {
    sub_227D5E458((uint64_t)v5, (uint64_t)v9, type metadata accessor for PBPropertyMarkedAsFinishedParam);
    sub_227D51624(&qword_255929A60, type metadata accessor for PBPropertyMarkedAsFinishedParam, (uint64_t)&protocol conformance descriptor for PBPropertyMarkedAsFinishedParam);
    sub_227E5F528();
    return sub_227D64BC4((uint64_t)v9, type metadata accessor for PBPropertyMarkedAsFinishedParam);
  }
  result = sub_227D64BC4((uint64_t)v5, type metadata accessor for PBPropertyValue.OneOf_Params);
  __break(1u);
  return result;
}

uint64_t sub_227E33FA0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  _QWORD v13[2];

  v2 = sub_227D68330(&qword_255928C90);
  MEMORY[0x24BDAC7A8](v2, v3);
  v5 = (char *)v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for PBPropertyBookImpressionParam(0);
  MEMORY[0x24BDAC7A8](v6, v7);
  v9 = (char *)v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for PBPropertyValue(0);
  sub_227D5DF48(a1 + *(int *)(v10 + 20), (uint64_t)v5, &qword_255928C90);
  v11 = type metadata accessor for PBPropertyValue.OneOf_Params(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v5, 1, v11) == 1)
  {
    sub_227D5809C((uint64_t)v5, &qword_255928C90);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 4)
  {
    sub_227D5E458((uint64_t)v5, (uint64_t)v9, type metadata accessor for PBPropertyBookImpressionParam);
    sub_227D51624(&qword_255929A48, type metadata accessor for PBPropertyBookImpressionParam, (uint64_t)&protocol conformance descriptor for PBPropertyBookImpressionParam);
    sub_227E5F528();
    return sub_227D64BC4((uint64_t)v9, type metadata accessor for PBPropertyBookImpressionParam);
  }
  result = sub_227D64BC4((uint64_t)v5, type metadata accessor for PBPropertyValue.OneOf_Params);
  __break(1u);
  return result;
}

uint64_t PBPropertyValue.hashValue.getter()
{
  return sub_227E351E0(type metadata accessor for PBPropertyValue, &qword_255929988, (uint64_t)&protocol conformance descriptor for PBPropertyValue);
}

uint64_t sub_227E3416C@<X0>(int *a1@<X0>, _QWORD *a2@<X8>)
{
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t result;
  _QWORD *v9;

  *a2 = 0;
  v4 = (char *)a2 + a1[5];
  v5 = type metadata accessor for PBPropertyValue.OneOf_Params(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
  _s13BookDataStore18PBPropertyNoParamsVACycfC_0();
  v6 = (char *)a2 + a1[7];
  v7 = sub_227E5F3C0();
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 1, v7);
  v9 = (_QWORD *)((char *)a2 + a1[8]);
  *v9 = 0;
  v9[1] = 0;
  return result;
}

uint64_t sub_227E34208()
{
  return 0x7265706F72504250;
}

uint64_t sub_227E3422C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBPropertyValue.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_227E34240(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBPropertyValue.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_227E34254()
{
  sub_227D51624(&qword_255929C60, type metadata accessor for PBPropertyValue, (uint64_t)&protocol conformance descriptor for PBPropertyValue);
  return sub_227E5F414();
}

uint64_t sub_227E342A4@<X0>(uint64_t a1@<X8>)
{
  return sub_227E30820(&qword_255928220, (uint64_t)qword_255929900, a1);
}

uint64_t sub_227E342C0()
{
  sub_227D51624(&qword_255929990, type metadata accessor for PBPropertyValue, (uint64_t)&protocol conformance descriptor for PBPropertyValue);
  return sub_227E5F4C8();
}

uint64_t sub_227E34300()
{
  sub_227D51624(&qword_255929990, type metadata accessor for PBPropertyValue, (uint64_t)&protocol conformance descriptor for PBPropertyValue);
  return sub_227E5F4D4();
}

unint64_t static PBPropertyBundle.protoMessageName.getter()
{
  return 0xD000000000000010;
}

uint64_t sub_227E34370()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;
  uint64_t v12;

  v0 = sub_227E5F558();
  sub_227DDF6FC(v0, qword_255929918);
  sub_227DDF6E4(v0, (uint64_t)qword_255929918);
  sub_227D68330(&qword_255929CA8);
  v1 = sub_227D68330(&qword_255929CB0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_227E71C20;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "configuration";
  *(_QWORD *)(v7 + 8) = 13;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_227E5F534();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "propertyValues";
  *((_QWORD *)v11 + 1) = 14;
  v11[16] = 2;
  v10();
  v12 = (uint64_t)v6 + 2 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + 2 * v3) = 3;
  *(_QWORD *)v12 = "deletedPropertyValueTimestamps";
  *(_QWORD *)(v12 + 8) = 30;
  *(_BYTE *)(v12 + 16) = 2;
  v10();
  return sub_227E5F540();
}

uint64_t static PBPropertyBundle._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_227E3043C(&qword_255928228, (uint64_t)qword_255929918, a1);
}

uint64_t PBPropertyBundle.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  char v10;

  v5 = v3;
  result = sub_227E5F42C();
  if (!v4)
  {
    while (1)
    {
      if ((v10 & 1) != 0)
        return result;
      if (result == 3)
        break;
      if (result == 2)
      {
        type metadata accessor for PBPropertyValue(0);
        sub_227D51624(&qword_255929990, type metadata accessor for PBPropertyValue, (uint64_t)&protocol conformance descriptor for PBPropertyValue);
        goto LABEL_5;
      }
      if (result == 1)
        sub_227E3468C(a1, v5, a2, a3, (void (*)(_QWORD))type metadata accessor for PBPropertyBundle, type metadata accessor for PBPropertyConfiguration, &qword_2559299E8, (uint64_t)&protocol conformance descriptor for PBPropertyConfiguration);
LABEL_11:
      result = sub_227E5F42C();
    }
    sub_227E5F3C0();
    sub_227D51624(&qword_255929998, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B990], MEMORY[0x24BE5B980]);
LABEL_5:
    sub_227E5F48C();
    goto LABEL_11;
  }
  return result;
}

uint64_t sub_227E3468C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(_QWORD), uint64_t (*a6)(uint64_t), unint64_t *a7, uint64_t a8)
{
  a5(0);
  a6(0);
  sub_227D51624(a7, a6, a8);
  return sub_227E5F498();
}

uint64_t PBPropertyBundle.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t result;

  result = sub_227E3487C((uint64_t)v3, a1, a2, a3);
  if (!v4)
  {
    if (*(_QWORD *)(*v3 + 16))
    {
      type metadata accessor for PBPropertyValue(0);
      sub_227D51624(&qword_255929990, type metadata accessor for PBPropertyValue, (uint64_t)&protocol conformance descriptor for PBPropertyValue);
      sub_227E5F51C();
    }
    if (*(_QWORD *)(v3[1] + 16))
    {
      sub_227E5F3C0();
      sub_227D51624(&qword_255929998, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B990], MEMORY[0x24BE5B980]);
      sub_227E5F51C();
    }
    type metadata accessor for PBPropertyBundle(0);
    return sub_227E5F3CC();
  }
  return result;
}

uint64_t sub_227E3487C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  _QWORD v16[2];

  v16[1] = a4;
  v5 = sub_227D68330(&qword_255928C88);
  MEMORY[0x24BDAC7A8](v5, v6);
  v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for PBPropertyConfiguration(0);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9, v11);
  v13 = (char *)v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for PBPropertyBundle(0);
  sub_227D5DF48(a1 + *(int *)(v14 + 28), (uint64_t)v8, &qword_255928C88);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    return sub_227D5809C((uint64_t)v8, &qword_255928C88);
  sub_227D5E458((uint64_t)v8, (uint64_t)v13, type metadata accessor for PBPropertyConfiguration);
  sub_227D51624(&qword_2559299E8, type metadata accessor for PBPropertyConfiguration, (uint64_t)&protocol conformance descriptor for PBPropertyConfiguration);
  sub_227E5F528();
  return sub_227D64BC4((uint64_t)v13, type metadata accessor for PBPropertyConfiguration);
}

uint64_t PBPropertyBundle.hashValue.getter()
{
  return sub_227E351E0(type metadata accessor for PBPropertyBundle, &qword_2559299A0, (uint64_t)&protocol conformance descriptor for PBPropertyBundle);
}

uint64_t sub_227E34A10@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  char *v5;
  uint64_t v6;

  v4 = MEMORY[0x24BEE4AF8];
  *a2 = MEMORY[0x24BEE4AF8];
  a2[1] = v4;
  _s13BookDataStore18PBPropertyNoParamsVACycfC_0();
  v5 = (char *)a2 + *(int *)(a1 + 28);
  v6 = type metadata accessor for PBPropertyConfiguration(0);
  return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 1, 1, v6);
}

unint64_t sub_227E34A70()
{
  return 0xD000000000000010;
}

uint64_t sub_227E34A8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 24);
  v5 = sub_227E5F3E4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t sub_227E34ACC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a2 + 24);
  v5 = sub_227E5F3E4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(v4, a1, v5);
}

uint64_t sub_227E34B0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBPropertyBundle.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_227E34B20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBPropertyBundle.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_227E34B34()
{
  sub_227D51624(&qword_255929C58, type metadata accessor for PBPropertyBundle, (uint64_t)&protocol conformance descriptor for PBPropertyBundle);
  return sub_227E5F414();
}

uint64_t sub_227E34B84@<X0>(uint64_t a1@<X8>)
{
  return sub_227E30820(&qword_255928228, (uint64_t)qword_255929918, a1);
}

uint64_t sub_227E34BA0()
{
  sub_227D51624(&qword_2559299A8, type metadata accessor for PBPropertyBundle, (uint64_t)&protocol conformance descriptor for PBPropertyBundle);
  return sub_227E5F4C8();
}

uint64_t sub_227E34BE0()
{
  sub_227D51624(&qword_2559299A8, type metadata accessor for PBPropertyBundle, (uint64_t)&protocol conformance descriptor for PBPropertyBundle);
  return sub_227E5F4D4();
}

unint64_t static PBPropertyTimeSlice.protoMessageName.getter()
{
  return 0xD000000000000013;
}

uint64_t sub_227E34C50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_227E5F558();
  sub_227DDF6FC(v0, qword_255929930);
  sub_227DDF6E4(v0, (uint64_t)qword_255929930);
  sub_227D68330(&qword_255929CA8);
  v1 = sub_227D68330(&qword_255929CB0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_227E6F040;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "startOfTimeSlice";
  *(_QWORD *)(v7 + 8) = 16;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_227E5F534();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "propertyBundles";
  *((_QWORD *)v11 + 1) = 15;
  v11[16] = 2;
  v10();
  return sub_227E5F540();
}

uint64_t static PBPropertyTimeSlice._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_227E3043C(&qword_255928230, (uint64_t)qword_255929930, a1);
}

uint64_t PBPropertyTimeSlice.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  result = sub_227E5F42C();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (result == 2)
      {
        type metadata accessor for PBPropertyBundle(0);
        sub_227D51624(&qword_2559299A8, type metadata accessor for PBPropertyBundle, (uint64_t)&protocol conformance descriptor for PBPropertyBundle);
        sub_227E5F48C();
      }
      else if (result == 1)
      {
        sub_227E34ECC();
      }
      result = sub_227E5F42C();
    }
  }
  return result;
}

uint64_t sub_227E34ECC()
{
  type metadata accessor for PBPropertyTimeSlice(0);
  sub_227E5F3C0();
  sub_227D51624(&qword_255929998, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B990], MEMORY[0x24BE5B980]);
  return sub_227E5F498();
}

uint64_t PBPropertyTimeSlice.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  result = sub_227E35048(v3, a1, a2, a3);
  if (!v4)
  {
    if (*(_QWORD *)(*(_QWORD *)v3 + 16))
    {
      type metadata accessor for PBPropertyBundle(0);
      sub_227D51624(&qword_2559299A8, type metadata accessor for PBPropertyBundle, (uint64_t)&protocol conformance descriptor for PBPropertyBundle);
      sub_227E5F51C();
    }
    type metadata accessor for PBPropertyTimeSlice(0);
    return sub_227E5F3CC();
  }
  return result;
}

uint64_t sub_227E35048(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  _QWORD v16[2];

  v16[1] = a4;
  v5 = sub_227D68330(&qword_255928C98);
  MEMORY[0x24BDAC7A8](v5, v6);
  v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_227E5F3C0();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9, v11);
  v13 = (char *)v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for PBPropertyTimeSlice(0);
  sub_227D5DF48(a1 + *(int *)(v14 + 24), (uint64_t)v8, &qword_255928C98);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    return sub_227D5809C((uint64_t)v8, &qword_255928C98);
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v13, v8, v9);
  sub_227D51624(&qword_255929998, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B990], MEMORY[0x24BE5B980]);
  sub_227E5F528();
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v13, v9);
}

uint64_t PBPropertyTimeSlice.hashValue.getter()
{
  return sub_227E351E0(type metadata accessor for PBPropertyTimeSlice, &qword_2559299B0, (uint64_t)&protocol conformance descriptor for PBPropertyTimeSlice);
}

uint64_t sub_227E351E0(uint64_t (*a1)(uint64_t), unint64_t *a2, uint64_t a3)
{
  sub_227E6071C();
  a1(0);
  sub_227D51624(a2, a1, a3);
  sub_227E5FF48();
  return sub_227E60734();
}

uint64_t sub_227E3525C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  char *v4;
  uint64_t v5;

  *a2 = MEMORY[0x24BEE4AF8];
  _s13BookDataStore18PBPropertyNoParamsVACycfC_0();
  v4 = (char *)a2 + *(int *)(a1 + 24);
  v5 = sub_227E5F3C0();
  return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
}

unint64_t sub_227E352BC()
{
  return 0xD000000000000013;
}

uint64_t sub_227E352D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 20);
  v5 = sub_227E5F3E4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t sub_227E35318(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a2 + 20);
  v5 = sub_227E5F3E4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(v4, a1, v5);
}

uint64_t sub_227E35358()
{
  return PBPropertyTimeSlice.decodeMessage<A>(decoder:)();
}

uint64_t sub_227E3536C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PBPropertyTimeSlice.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_227E35380()
{
  sub_227D51624(&qword_255929C50, type metadata accessor for PBPropertyTimeSlice, (uint64_t)&protocol conformance descriptor for PBPropertyTimeSlice);
  return sub_227E5F414();
}

uint64_t sub_227E353D0@<X0>(uint64_t a1@<X8>)
{
  return sub_227E30820(&qword_255928230, (uint64_t)qword_255929930, a1);
}

uint64_t sub_227E353EC()
{
  sub_227D51624(&qword_2559291E8, type metadata accessor for PBPropertyTimeSlice, (uint64_t)&protocol conformance descriptor for PBPropertyTimeSlice);
  return sub_227E5F4C8();
}

uint64_t sub_227E3542C()
{
  sub_227E6071C();
  sub_227E5FF48();
  return sub_227E60734();
}

uint64_t sub_227E35480()
{
  sub_227D51624(&qword_2559291E8, type metadata accessor for PBPropertyTimeSlice, (uint64_t)&protocol conformance descriptor for PBPropertyTimeSlice);
  return sub_227E5F4D4();
}

uint64_t sub_227E354D0()
{
  sub_227E6071C();
  sub_227E5FF48();
  return sub_227E60734();
}

uint64_t _s13BookDataStore31PBPropertyMarkedAsFinishedParamV2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  void (*v17)(char *, char *, uint64_t);
  char v18;
  void (*v19)(char *, uint64_t);
  uint64_t v21;

  v4 = sub_227E5F3E4();
  v5 = *(_QWORD *)(v4 - 8);
  v7 = MEMORY[0x24BDAC7A8](v4, v6);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7, v10);
  v12 = (char *)&v21 - v11;
  v13 = *a1;
  v14 = *a2;
  if (*((_BYTE *)a2 + 8) != 1)
  {
    if (v13 == v14)
      goto LABEL_7;
LABEL_9:
    v18 = 0;
    return v18 & 1;
  }
  if (!v14)
  {
    if (!v13)
      goto LABEL_7;
    goto LABEL_9;
  }
  if (v14 != 1)
  {
    if (v13 == 2)
      goto LABEL_7;
    goto LABEL_9;
  }
  if (v13 != 1)
    goto LABEL_9;
LABEL_7:
  v15 = type metadata accessor for PBPropertyMarkedAsFinishedParam(0);
  v16 = (char *)a1 + *(int *)(v15 + 20);
  v17 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
  v17(v12, v16, v4);
  v17(v9, (char *)a2 + *(int *)(v15 + 20), v4);
  sub_227D51624(&qword_255929948, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  v18 = sub_227E5FF6C();
  v19 = *(void (**)(char *, uint64_t))(v5 + 8);
  v19(v9, v4);
  v19(v12, v4);
  return v18 & 1;
}

uint64_t _s13BookDataStore26PBPropertySingleFloatParamV2eeoiySbAC_ACtFZ_0(float *a1, float *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  void (*v15)(char *, char *, uint64_t);
  char v16;
  void (*v17)(char *, uint64_t);
  uint64_t v19;

  v4 = sub_227E5F3E4();
  v5 = *(_QWORD *)(v4 - 8);
  v7 = MEMORY[0x24BDAC7A8](v4, v6);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7, v10);
  v12 = (char *)&v19 - v11;
  if (*a1 == *a2)
  {
    v13 = type metadata accessor for PBPropertySingleFloatParam(0);
    v14 = (char *)a1 + *(int *)(v13 + 20);
    v15 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
    v15(v12, v14, v4);
    v15(v9, (char *)a2 + *(int *)(v13 + 20), v4);
    sub_227D51624(&qword_255929948, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    v16 = sub_227E5FF6C();
    v17 = *(void (**)(char *, uint64_t))(v5 + 8);
    v17(v9, v4);
    v17(v12, v4);
  }
  else
  {
    v16 = 0;
  }
  return v16 & 1;
}

uint64_t _s13BookDataStore19PBPropertyTimeSliceV2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unsigned int (*v36)(uint64_t, uint64_t, uint64_t);
  char *v37;
  char v38;
  void (*v39)(char *, uint64_t);
  uint64_t *v40;
  uint64_t *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(char *, char *, uint64_t);
  char *v46;
  char *v47;
  char v48;
  void (*v49)(char *, uint64_t);
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t *v57;
  uint64_t *v58;

  v4 = sub_227E5F3E4();
  v54 = *(_QWORD *)(v4 - 8);
  v55 = v4;
  v6 = MEMORY[0x24BDAC7A8](v4, v5);
  v53 = (char *)&v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6, v8);
  v52 = (char *)&v51 - v9;
  v10 = sub_227E5F3C0();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10, v12);
  v56 = (char *)&v51 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_227D68330(&qword_255929C98);
  MEMORY[0x24BDAC7A8](v14, v15);
  v17 = (char *)&v51 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_227D68330(&qword_255928C98);
  v20 = MEMORY[0x24BDAC7A8](v18, v19);
  v22 = (char *)&v51 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = MEMORY[0x24BDAC7A8](v20, v23);
  v26 = (char *)&v51 - v25;
  MEMORY[0x24BDAC7A8](v24, v27);
  v29 = (char *)&v51 - v28;
  v30 = type metadata accessor for PBPropertyTimeSlice(0);
  v31 = *(int *)(v30 + 24);
  v57 = a1;
  v32 = (uint64_t)a1 + v31;
  v33 = v30;
  sub_227D5DF48(v32, (uint64_t)v29, &qword_255928C98);
  v34 = *(int *)(v33 + 24);
  v58 = a2;
  sub_227D5DF48((uint64_t)a2 + v34, (uint64_t)v26, &qword_255928C98);
  v35 = (uint64_t)&v17[*(int *)(v14 + 48)];
  sub_227D5DF48((uint64_t)v29, (uint64_t)v17, &qword_255928C98);
  sub_227D5DF48((uint64_t)v26, v35, &qword_255928C98);
  v36 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
  if (v36((uint64_t)v17, 1, v10) == 1)
  {
    sub_227D5809C((uint64_t)v26, &qword_255928C98);
    sub_227D5809C((uint64_t)v29, &qword_255928C98);
    if (v36(v35, 1, v10) == 1)
    {
      sub_227D5809C((uint64_t)v17, &qword_255928C98);
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  sub_227D5DF48((uint64_t)v17, (uint64_t)v22, &qword_255928C98);
  if (v36(v35, 1, v10) == 1)
  {
    sub_227D5809C((uint64_t)v26, &qword_255928C98);
    sub_227D5809C((uint64_t)v29, &qword_255928C98);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v22, v10);
LABEL_6:
    sub_227D5809C((uint64_t)v17, &qword_255929C98);
LABEL_10:
    v48 = 0;
    return v48 & 1;
  }
  v37 = v56;
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 32))(v56, v35, v10);
  sub_227D51624(&qword_2559291F0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B990], MEMORY[0x24BE5B9A0]);
  v38 = sub_227E5FF6C();
  v39 = *(void (**)(char *, uint64_t))(v11 + 8);
  v39(v37, v10);
  sub_227D5809C((uint64_t)v26, &qword_255928C98);
  sub_227D5809C((uint64_t)v29, &qword_255928C98);
  v39(v22, v10);
  sub_227D5809C((uint64_t)v17, &qword_255928C98);
  if ((v38 & 1) == 0)
    goto LABEL_10;
LABEL_8:
  v40 = v57;
  v41 = v58;
  if ((sub_227E2C328(*v57, *v58) & 1) == 0)
    goto LABEL_10;
  v42 = (char *)v40 + *(int *)(v33 + 20);
  v44 = v54;
  v43 = v55;
  v45 = *(void (**)(char *, char *, uint64_t))(v54 + 16);
  v46 = v52;
  v45(v52, v42, v55);
  v47 = v53;
  v45(v53, (char *)v41 + *(int *)(v33 + 20), v43);
  sub_227D51624(&qword_255929948, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  v48 = sub_227E5FF6C();
  v49 = *(void (**)(char *, uint64_t))(v44 + 8);
  v49(v47, v43);
  v49(v46, v43);
  return v48 & 1;
}

uint64_t _s13BookDataStore23PBPropertyConfigurationV2eeoiySbAC_ACtFZ_0(_QWORD *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  BOOL v13;
  char v14;
  uint64_t v15;
  char *v16;
  void (*v17)(char *, char *, uint64_t);
  void (*v18)(char *, uint64_t);
  uint64_t v20;

  v4 = sub_227E5F3E4();
  v5 = *(_QWORD *)(v4 - 8);
  v7 = MEMORY[0x24BDAC7A8](v4, v6);
  v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7, v10);
  v12 = (char *)&v20 - v11;
  if (*a1 != *(_QWORD *)a2 || a1[1] != *((_QWORD *)a2 + 1))
    goto LABEL_10;
  v13 = a1[2] == *((_QWORD *)a2 + 2) && a1[3] == *((_QWORD *)a2 + 3);
  if (v13 || (v14 = 0, (sub_227E60698() & 1) != 0))
  {
    if (a1[4] == *((_QWORD *)a2 + 4))
    {
      v15 = type metadata accessor for PBPropertyConfiguration(0);
      v16 = (char *)a1 + *(int *)(v15 + 32);
      v17 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
      v17(v12, v16, v4);
      v17(v9, &a2[*(int *)(v15 + 32)], v4);
      sub_227D51624(&qword_255929948, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      v14 = sub_227E5FF6C();
      v18 = *(void (**)(char *, uint64_t))(v5 + 8);
      v18(v9, v4);
      v18(v12, v4);
      return v14 & 1;
    }
LABEL_10:
    v14 = 0;
  }
  return v14 & 1;
}

uint64_t _s13BookDataStore16PBPropertyBundleV2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unsigned int (*v36)(uint64_t, uint64_t, uint64_t);
  char *v37;
  char v38;
  uint64_t *v39;
  uint64_t *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(char *, char *, uint64_t);
  char *v45;
  char *v46;
  char v47;
  void (*v48)(char *, uint64_t);
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t *v55;
  uint64_t *v56;
  char *v57;

  v4 = sub_227E5F3E4();
  v53 = *(_QWORD *)(v4 - 8);
  v54 = v4;
  v6 = MEMORY[0x24BDAC7A8](v4, v5);
  v52 = (char *)&v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6, v8);
  v51 = (char *)&v50 - v9;
  v10 = type metadata accessor for PBPropertyConfiguration(0);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10, v12);
  v57 = (char *)&v50 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_227D68330(&qword_255929CA0);
  MEMORY[0x24BDAC7A8](v14, v15);
  v17 = (char *)&v50 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_227D68330(&qword_255928C88);
  v20 = MEMORY[0x24BDAC7A8](v18, v19);
  v22 = (uint64_t *)((char *)&v50 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  v24 = MEMORY[0x24BDAC7A8](v20, v23);
  v26 = (char *)&v50 - v25;
  MEMORY[0x24BDAC7A8](v24, v27);
  v29 = (char *)&v50 - v28;
  v30 = type metadata accessor for PBPropertyBundle(0);
  v31 = *(int *)(v30 + 28);
  v55 = a1;
  v32 = (uint64_t)a1 + v31;
  v33 = v30;
  sub_227D5DF48(v32, (uint64_t)v29, &qword_255928C88);
  v34 = *(int *)(v33 + 28);
  v56 = a2;
  sub_227D5DF48((uint64_t)a2 + v34, (uint64_t)v26, &qword_255928C88);
  v35 = (uint64_t)&v17[*(int *)(v14 + 48)];
  sub_227D5DF48((uint64_t)v29, (uint64_t)v17, &qword_255928C88);
  sub_227D5DF48((uint64_t)v26, v35, &qword_255928C88);
  v36 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
  if (v36((uint64_t)v17, 1, v10) != 1)
  {
    v37 = v57;
    sub_227D5DF48((uint64_t)v17, (uint64_t)v22, &qword_255928C88);
    if (v36(v35, 1, v10) != 1)
    {
      sub_227D5E458(v35, (uint64_t)v37, type metadata accessor for PBPropertyConfiguration);
      v38 = _s13BookDataStore23PBPropertyConfigurationV2eeoiySbAC_ACtFZ_0(v22, v37);
      sub_227D64BC4((uint64_t)v37, type metadata accessor for PBPropertyConfiguration);
      sub_227D5809C((uint64_t)v26, &qword_255928C88);
      sub_227D5809C((uint64_t)v29, &qword_255928C88);
      sub_227D64BC4((uint64_t)v22, type metadata accessor for PBPropertyConfiguration);
      sub_227D5809C((uint64_t)v17, &qword_255928C88);
      if ((v38 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      v47 = 0;
      return v47 & 1;
    }
    sub_227D5809C((uint64_t)v26, &qword_255928C88);
    sub_227D5809C((uint64_t)v29, &qword_255928C88);
    sub_227D64BC4((uint64_t)v22, type metadata accessor for PBPropertyConfiguration);
LABEL_6:
    sub_227D5809C((uint64_t)v17, &qword_255929CA0);
    goto LABEL_11;
  }
  sub_227D5809C((uint64_t)v26, &qword_255928C88);
  sub_227D5809C((uint64_t)v29, &qword_255928C88);
  if (v36(v35, 1, v10) != 1)
    goto LABEL_6;
  sub_227D5809C((uint64_t)v17, &qword_255928C88);
LABEL_8:
  v39 = v55;
  v40 = v56;
  if ((sub_227E2CA24(*v55, *v56) & 1) == 0 || (sub_227E2CB60(v39[1], v40[1]) & 1) == 0)
    goto LABEL_11;
  v41 = (char *)v39 + *(int *)(v33 + 24);
  v43 = v53;
  v42 = v54;
  v44 = *(void (**)(char *, char *, uint64_t))(v53 + 16);
  v45 = v51;
  v44(v51, v41, v54);
  v46 = v52;
  v44(v52, (char *)v40 + *(int *)(v33 + 24), v42);
  sub_227D51624(&qword_255929948, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  v47 = sub_227E5FF6C();
  v48 = *(void (**)(char *, uint64_t))(v43 + 8);
  v48(v46, v42);
  v48(v45, v42);
  return v47 & 1;
}

uint64_t _s13BookDataStore15PBPropertyValueV2eeoiySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unsigned int (*v45)(uint64_t, uint64_t, uint64_t);
  uint64_t v46;
  uint64_t *v47;
  char v48;
  char v50;
  void (*v51)(char *, uint64_t);
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  _QWORD *v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unsigned int (*v63)(uint64_t, uint64_t, uint64_t);
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char v67;
  char v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  void (*v72)(char *, char *, uint64_t);
  char *v73;
  char *v74;
  char *v75;
  void (*v76)(char *, uint64_t);
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  _QWORD *v89;
  uint64_t v90;
  uint64_t v91;
  _QWORD *v92;

  v92 = a2;
  v3 = sub_227E5F3E4();
  v80 = *(_QWORD *)(v3 - 8);
  v81 = v3;
  v5 = MEMORY[0x24BDAC7A8](v3, v4);
  v79 = (char *)&v77 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5, v7);
  v78 = (char *)&v77 - v8;
  v87 = type metadata accessor for PBPropertyValue.OneOf_Params(0);
  v84 = *(_QWORD *)(v87 - 8);
  MEMORY[0x24BDAC7A8](v87, v9);
  v77 = (uint64_t)&v77 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v83 = sub_227D68330(&qword_255929CB8);
  MEMORY[0x24BDAC7A8](v83, v11);
  v88 = (char *)&v77 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_227D68330(&qword_255928C90);
  v15 = MEMORY[0x24BDAC7A8](v13, v14);
  v82 = (uint64_t)&v77 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v15, v17);
  v85 = (uint64_t)&v77 - v19;
  MEMORY[0x24BDAC7A8](v18, v20);
  v86 = (uint64_t)&v77 - v21;
  v22 = sub_227E5F3C0();
  v23 = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22, v24);
  v26 = (char *)&v77 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = sub_227D68330(&qword_255929C98);
  MEMORY[0x24BDAC7A8](v27, v28);
  v30 = (char *)&v77 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = sub_227D68330(&qword_255928C98);
  v33 = MEMORY[0x24BDAC7A8](v31, v32);
  v91 = (uint64_t)&v77 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = MEMORY[0x24BDAC7A8](v33, v35);
  v38 = (char *)&v77 - v37;
  MEMORY[0x24BDAC7A8](v36, v39);
  v41 = (char *)&v77 - v40;
  v42 = type metadata accessor for PBPropertyValue(0);
  v43 = *(int *)(v42 + 28);
  v89 = a1;
  sub_227D5DF48((uint64_t)a1 + v43, (uint64_t)v41, &qword_255928C98);
  v90 = v42;
  sub_227D5DF48((uint64_t)v92 + *(int *)(v42 + 28), (uint64_t)v38, &qword_255928C98);
  v44 = (uint64_t)&v30[*(int *)(v27 + 48)];
  sub_227D5DF48((uint64_t)v41, (uint64_t)v30, &qword_255928C98);
  sub_227D5DF48((uint64_t)v38, v44, &qword_255928C98);
  v45 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v23 + 48);
  if (v45((uint64_t)v30, 1, v22) == 1)
  {
    sub_227D5809C((uint64_t)v38, &qword_255928C98);
    sub_227D5809C((uint64_t)v41, &qword_255928C98);
    if (v45(v44, 1, v22) == 1)
    {
      sub_227D5809C((uint64_t)v30, &qword_255928C98);
      goto LABEL_11;
    }
LABEL_6:
    v47 = &qword_255929C98;
LABEL_7:
    sub_227D5809C((uint64_t)v30, v47);
LABEL_8:
    v48 = 0;
    return v48 & 1;
  }
  v46 = v91;
  sub_227D5DF48((uint64_t)v30, v91, &qword_255928C98);
  if (v45(v44, 1, v22) == 1)
  {
    sub_227D5809C((uint64_t)v38, &qword_255928C98);
    sub_227D5809C((uint64_t)v41, &qword_255928C98);
    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v46, v22);
    goto LABEL_6;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v23 + 32))(v26, v44, v22);
  sub_227D51624(&qword_2559291F0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B990], MEMORY[0x24BE5B9A0]);
  v50 = sub_227E5FF6C();
  v51 = *(void (**)(char *, uint64_t))(v23 + 8);
  v51(v26, v22);
  sub_227D5809C((uint64_t)v38, &qword_255928C98);
  sub_227D5809C((uint64_t)v41, &qword_255928C98);
  v51((char *)v46, v22);
  sub_227D5809C((uint64_t)v30, &qword_255928C98);
  if ((v50 & 1) == 0)
    goto LABEL_8;
LABEL_11:
  v52 = v89;
  v53 = v90;
  v54 = *(int *)(v90 + 32);
  v55 = (_QWORD *)((char *)v89 + v54);
  v56 = *(_QWORD *)((char *)v89 + v54 + 8);
  v57 = v92;
  v58 = (_QWORD *)((char *)v92 + v54);
  v59 = v58[1];
  if (!v56)
  {
    if (v59)
      goto LABEL_8;
LABEL_18:
    if (*v52 != *v57)
      goto LABEL_8;
    v60 = v86;
    sub_227D5DF48((uint64_t)v52 + *(int *)(v53 + 20), v86, &qword_255928C90);
    v61 = v85;
    sub_227D5DF48((uint64_t)v57 + *(int *)(v53 + 20), v85, &qword_255928C90);
    v30 = v88;
    v62 = (uint64_t)&v88[*(int *)(v83 + 48)];
    sub_227D5DF48(v60, (uint64_t)v88, &qword_255928C90);
    sub_227D5DF48(v61, v62, &qword_255928C90);
    v63 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v84 + 48);
    v64 = v87;
    if (v63((uint64_t)v30, 1, v87) == 1)
    {
      sub_227D5809C(v61, &qword_255928C90);
      sub_227D5809C(v60, &qword_255928C90);
      if (v63(v62, 1, v64) == 1)
      {
        sub_227D5809C((uint64_t)v30, &qword_255928C90);
LABEL_26:
        v69 = (char *)v52 + *(int *)(v53 + 24);
        v71 = v80;
        v70 = v81;
        v72 = *(void (**)(char *, char *, uint64_t))(v80 + 16);
        v73 = v78;
        v72(v78, v69, v81);
        v74 = (char *)v57 + *(int *)(v53 + 24);
        v75 = v79;
        v72(v79, v74, v70);
        sub_227D51624(&qword_255929948, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
        v48 = sub_227E5FF6C();
        v76 = *(void (**)(char *, uint64_t))(v71 + 8);
        v76(v75, v70);
        v76(v73, v70);
        return v48 & 1;
      }
    }
    else
    {
      v65 = v82;
      sub_227D5DF48((uint64_t)v30, v82, &qword_255928C90);
      if (v63(v62, 1, v64) != 1)
      {
        v66 = v77;
        sub_227D5E458(v62, v77, type metadata accessor for PBPropertyValue.OneOf_Params);
        _s13BookDataStore15PBPropertyValueV12OneOf_ParamsO2eeoiySbAE_AEtFZ_0(v65, v66);
        v68 = v67;
        sub_227D64BC4(v66, type metadata accessor for PBPropertyValue.OneOf_Params);
        sub_227D5809C(v61, &qword_255928C90);
        sub_227D5809C(v60, &qword_255928C90);
        sub_227D64BC4(v65, type metadata accessor for PBPropertyValue.OneOf_Params);
        sub_227D5809C((uint64_t)v30, &qword_255928C90);
        v53 = v90;
        if ((v68 & 1) != 0)
          goto LABEL_26;
        goto LABEL_8;
      }
      sub_227D5809C(v61, &qword_255928C90);
      sub_227D5809C(v60, &qword_255928C90);
      sub_227D64BC4(v65, type metadata accessor for PBPropertyValue.OneOf_Params);
    }
    v47 = &qword_255929CB8;
    goto LABEL_7;
  }
  if (!v59)
    goto LABEL_8;
  if (*v55 == *v58 && v56 == v59)
    goto LABEL_18;
  v48 = 0;
  if ((sub_227E60698() & 1) != 0)
    goto LABEL_18;
  return v48 & 1;
}

void _s13BookDataStore15PBPropertyValueV12OneOf_ParamsO2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t Params;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;

  v37 = a1;
  v38 = a2;
  v31 = type metadata accessor for PBPropertyBookImpressionParam(0);
  MEMORY[0x24BDAC7A8](v31, v2);
  v36 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for PBPropertyMarkedAsFinishedParam(0);
  MEMORY[0x24BDAC7A8](v4, v5);
  v34 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  Params = type metadata accessor for PBPropertyBookReadParams(0);
  MEMORY[0x24BDAC7A8](Params, v7);
  v35 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = type metadata accessor for PBPropertySingleFloatParam(0);
  MEMORY[0x24BDAC7A8](v32, v9);
  v33 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for PBPropertyNoParams(0);
  MEMORY[0x24BDAC7A8](v11, v12);
  v13 = type metadata accessor for PBPropertyValue.OneOf_Params(0);
  v15 = MEMORY[0x24BDAC7A8](v13, v14);
  v17 = MEMORY[0x24BDAC7A8](v15, v16);
  v19 = MEMORY[0x24BDAC7A8](v17, v18);
  v21 = MEMORY[0x24BDAC7A8](v19, v20);
  MEMORY[0x24BDAC7A8](v21, v22);
  v23 = sub_227D68330(&qword_255929CE8);
  v25 = MEMORY[0x24BDAC7A8](v23, v24);
  v27 = (char *)&v29 + *(int *)(v25 + 48) - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_227D5DFFC(v37, (uint64_t)&v29 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for PBPropertyValue.OneOf_Params);
  sub_227D5DFFC(v38, (uint64_t)v27, type metadata accessor for PBPropertyValue.OneOf_Params);
  v28 = (char *)sub_227E36ABC + 4 * byte_227E71C51[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_227E36ABC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;

  sub_227D5DFFC(v0, v1, type metadata accessor for PBPropertyValue.OneOf_Params);
  if (swift_getEnumCaseMultiPayload())
  {
    sub_227D64BC4(v1, type metadata accessor for PBPropertyNoParams);
    sub_227D5809C(v0, &qword_255929CE8);
    v4 = 0;
  }
  else
  {
    sub_227D5E458(v3, v2, type metadata accessor for PBPropertyNoParams);
    sub_227E5F3E4();
    sub_227D51624(&qword_255929948, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    v4 = sub_227E5FF6C();
    sub_227D64BC4(v2, type metadata accessor for PBPropertyNoParams);
    sub_227D64BC4(v1, type metadata accessor for PBPropertyNoParams);
    sub_227D64BC4(v0, type metadata accessor for PBPropertyValue.OneOf_Params);
  }
  return v4 & 1;
}

uint64_t _s13BookDataStore010PBPropertyA15ImpressionParamV2eeoiySbAC_ACtFZ_0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char v13;
  uint64_t v14;
  unsigned __int8 *v15;
  void (*v16)(char *, unsigned __int8 *, uint64_t);
  void (*v17)(char *, uint64_t);
  uint64_t v19;

  v4 = sub_227E5F3E4();
  v5 = *(_QWORD *)(v4 - 8);
  v7 = MEMORY[0x24BDAC7A8](v4, v6);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7, v10);
  v12 = (char *)&v19 - v11;
  if (*a1 == *a2)
  {
    v14 = type metadata accessor for PBPropertyBookImpressionParam(0);
    v15 = &a1[*(int *)(v14 + 20)];
    v16 = *(void (**)(char *, unsigned __int8 *, uint64_t))(v5 + 16);
    v16(v12, v15, v4);
    v16(v9, &a2[*(int *)(v14 + 20)], v4);
    sub_227D51624(&qword_255929948, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    v13 = sub_227E5FF6C();
    v17 = *(void (**)(char *, uint64_t))(v5 + 8);
    v17(v9, v4);
    v17(v12, v4);
  }
  else
  {
    v13 = 0;
  }
  return v13 & 1;
}

uint64_t _s13BookDataStore010PBPropertyA10ReadParamsV2eeoiySbAC_ACtFZ_0(float *a1, float *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t Params;
  unsigned __int8 *v14;
  void (*v15)(char *, unsigned __int8 *, uint64_t);
  char v16;
  void (*v17)(char *, uint64_t);
  uint64_t v19;

  v4 = sub_227E5F3E4();
  v5 = *(_QWORD *)(v4 - 8);
  v7 = MEMORY[0x24BDAC7A8](v4, v6);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7, v10);
  v12 = (char *)&v19 - v11;
  if (*(unsigned __int8 *)a1 == *(unsigned __int8 *)a2 && a1[1] == a2[1])
  {
    Params = type metadata accessor for PBPropertyBookReadParams(0);
    v14 = (unsigned __int8 *)a1 + *(int *)(Params + 24);
    v15 = *(void (**)(char *, unsigned __int8 *, uint64_t))(v5 + 16);
    v15(v12, v14, v4);
    v15(v9, (unsigned __int8 *)a2 + *(int *)(Params + 24), v4);
    sub_227D51624(&qword_255929948, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    v16 = sub_227E5FF6C();
    v17 = *(void (**)(char *, uint64_t))(v5 + 8);
    v17(v9, v4);
    v17(v12, v4);
  }
  else
  {
    v16 = 0;
  }
  return v16 & 1;
}

unint64_t sub_227E371A4()
{
  unint64_t result;

  result = qword_255929978;
  if (!qword_255929978)
  {
    result = MEMORY[0x22E2AA7D4](&protocol conformance descriptor for MarkedAsFinishedMechanism, &type metadata for MarkedAsFinishedMechanism);
    atomic_store(result, (unint64_t *)&qword_255929978);
  }
  return result;
}

unint64_t sub_227E371EC()
{
  unint64_t result;

  result = qword_2559299B8;
  if (!qword_2559299B8)
  {
    result = MEMORY[0x22E2AA7D4](&protocol conformance descriptor for MarkedAsFinishedMechanism, &type metadata for MarkedAsFinishedMechanism);
    atomic_store(result, (unint64_t *)&qword_2559299B8);
  }
  return result;
}

unint64_t sub_227E37234()
{
  unint64_t result;

  result = qword_2559299C0;
  if (!qword_2559299C0)
  {
    result = MEMORY[0x22E2AA7D4](&protocol conformance descriptor for MarkedAsFinishedMechanism, &type metadata for MarkedAsFinishedMechanism);
    atomic_store(result, (unint64_t *)&qword_2559299C0);
  }
  return result;
}

unint64_t sub_227E3727C()
{
  unint64_t result;

  result = qword_2559299C8;
  if (!qword_2559299C8)
  {
    result = MEMORY[0x22E2AA7D4](&protocol conformance descriptor for MarkedAsFinishedMechanism, &type metadata for MarkedAsFinishedMechanism);
    atomic_store(result, (unint64_t *)&qword_2559299C8);
  }
  return result;
}

unint64_t sub_227E372C4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2559299D0;
  if (!qword_2559299D0)
  {
    v1 = sub_227D6717C(&qword_2559299D8);
    result = MEMORY[0x22E2AA7D4](MEMORY[0x24BEE12E0], v1);
    atomic_store(result, (unint64_t *)&qword_2559299D0);
  }
  return result;
}

uint64_t sub_227E37310()
{
  return sub_227D51624(&qword_2559299E0, type metadata accessor for PBPropertyConfiguration, (uint64_t)&protocol conformance descriptor for PBPropertyConfiguration);
}

uint64_t sub_227E3733C()
{
  return sub_227D51624(&qword_2559299E8, type metadata accessor for PBPropertyConfiguration, (uint64_t)&protocol conformance descriptor for PBPropertyConfiguration);
}

uint64_t sub_227E37368()
{
  return sub_227D51624(&qword_255929950, type metadata accessor for PBPropertyConfiguration, (uint64_t)&protocol conformance descriptor for PBPropertyConfiguration);
}

uint64_t sub_227E37394()
{
  return sub_227D51624(&qword_2559299F0, type metadata accessor for PBPropertyConfiguration, (uint64_t)&protocol conformance descriptor for PBPropertyConfiguration);
}

uint64_t sub_227E373C0()
{
  return sub_227D51624(&qword_2559299F8, type metadata accessor for PBPropertyNoParams, (uint64_t)&protocol conformance descriptor for PBPropertyNoParams);
}

uint64_t sub_227E373EC()
{
  return sub_227D51624(&qword_255929A00, type metadata accessor for PBPropertyNoParams, (uint64_t)&protocol conformance descriptor for PBPropertyNoParams);
}

uint64_t sub_227E37418()
{
  return sub_227D51624(&qword_255929958, type metadata accessor for PBPropertyNoParams, (uint64_t)&protocol conformance descriptor for PBPropertyNoParams);
}

uint64_t sub_227E37444()
{
  return sub_227D51624(&qword_255929A08, type metadata accessor for PBPropertyNoParams, (uint64_t)&protocol conformance descriptor for PBPropertyNoParams);
}

uint64_t sub_227E37470()
{
  return sub_227D51624(&qword_255929A10, type metadata accessor for PBPropertySingleFloatParam, (uint64_t)&protocol conformance descriptor for PBPropertySingleFloatParam);
}

uint64_t sub_227E3749C()
{
  return sub_227D51624(&qword_255929A18, type metadata accessor for PBPropertySingleFloatParam, (uint64_t)&protocol conformance descriptor for PBPropertySingleFloatParam);
}

uint64_t sub_227E374C8()
{
  return sub_227D51624(&qword_255929960, type metadata accessor for PBPropertySingleFloatParam, (uint64_t)&protocol conformance descriptor for PBPropertySingleFloatParam);
}

uint64_t sub_227E374F4()
{
  return sub_227D51624(&qword_255929A20, type metadata accessor for PBPropertySingleFloatParam, (uint64_t)&protocol conformance descriptor for PBPropertySingleFloatParam);
}

uint64_t sub_227E37520()
{
  return sub_227D51624(&qword_255929A28, type metadata accessor for PBPropertyBookReadParams, (uint64_t)&protocol conformance descriptor for PBPropertyBookReadParams);
}

uint64_t sub_227E3754C()
{
  return sub_227D51624(&qword_255929A30, type metadata accessor for PBPropertyBookReadParams, (uint64_t)&protocol conformance descriptor for PBPropertyBookReadParams);
}

uint64_t sub_227E37578()
{
  return sub_227D51624(&qword_255929968, type metadata accessor for PBPropertyBookReadParams, (uint64_t)&protocol conformance descriptor for PBPropertyBookReadParams);
}

uint64_t sub_227E375A4()
{
  return sub_227D51624(&qword_255929A38, type metadata accessor for PBPropertyBookReadParams, (uint64_t)&protocol conformance descriptor for PBPropertyBookReadParams);
}

uint64_t sub_227E375D0()
{
  return sub_227D51624(&qword_255929A40, type metadata accessor for PBPropertyBookImpressionParam, (uint64_t)&protocol conformance descriptor for PBPropertyBookImpressionParam);
}

uint64_t sub_227E375FC()
{
  return sub_227D51624(&qword_255929A48, type metadata accessor for PBPropertyBookImpressionParam, (uint64_t)&protocol conformance descriptor for PBPropertyBookImpressionParam);
}

uint64_t sub_227E37628()
{
  return sub_227D51624(&qword_255929970, type metadata accessor for PBPropertyBookImpressionParam, (uint64_t)&protocol conformance descriptor for PBPropertyBookImpressionParam);
}

uint64_t sub_227E37654()
{
  return sub_227D51624(&qword_255929A50, type metadata accessor for PBPropertyBookImpressionParam, (uint64_t)&protocol conformance descriptor for PBPropertyBookImpressionParam);
}

uint64_t sub_227E37680()
{
  return sub_227D51624(&qword_255929A58, type metadata accessor for PBPropertyMarkedAsFinishedParam, (uint64_t)&protocol conformance descriptor for PBPropertyMarkedAsFinishedParam);
}

uint64_t sub_227E376AC()
{
  return sub_227D51624(&qword_255929A60, type metadata accessor for PBPropertyMarkedAsFinishedParam, (uint64_t)&protocol conformance descriptor for PBPropertyMarkedAsFinishedParam);
}

uint64_t sub_227E376D8()
{
  return sub_227D51624(&qword_255929980, type metadata accessor for PBPropertyMarkedAsFinishedParam, (uint64_t)&protocol conformance descriptor for PBPropertyMarkedAsFinishedParam);
}

uint64_t sub_227E37704()
{
  return sub_227D51624(&qword_255929A68, type metadata accessor for PBPropertyMarkedAsFinishedParam, (uint64_t)&protocol conformance descriptor for PBPropertyMarkedAsFinishedParam);
}

uint64_t sub_227E37730()
{
  return sub_227D51624(&qword_255929A70, type metadata accessor for PBPropertyValue, (uint64_t)&protocol conformance descriptor for PBPropertyValue);
}

uint64_t sub_227E3775C()
{
  return sub_227D51624(&qword_255929990, type metadata accessor for PBPropertyValue, (uint64_t)&protocol conformance descriptor for PBPropertyValue);
}

uint64_t sub_227E37788()
{
  return sub_227D51624(&qword_255929988, type metadata accessor for PBPropertyValue, (uint64_t)&protocol conformance descriptor for PBPropertyValue);
}

uint64_t sub_227E377B4()
{
  return sub_227D51624(&qword_255929A78, type metadata accessor for PBPropertyValue, (uint64_t)&protocol conformance descriptor for PBPropertyValue);
}

uint64_t sub_227E377E0()
{
  return sub_227D51624(&qword_255929A80, type metadata accessor for PBPropertyBundle, (uint64_t)&protocol conformance descriptor for PBPropertyBundle);
}

uint64_t sub_227E3780C()
{
  return sub_227D51624(&qword_2559299A8, type metadata accessor for PBPropertyBundle, (uint64_t)&protocol conformance descriptor for PBPropertyBundle);
}

uint64_t sub_227E37838()
{
  return sub_227D51624(&qword_2559299A0, type metadata accessor for PBPropertyBundle, (uint64_t)&protocol conformance descriptor for PBPropertyBundle);
}

uint64_t sub_227E37864()
{
  return sub_227D51624(&qword_255929A88, type metadata accessor for PBPropertyBundle, (uint64_t)&protocol conformance descriptor for PBPropertyBundle);
}

uint64_t sub_227E37890()
{
  return sub_227D51624(&qword_255929A90, type metadata accessor for PBPropertyTimeSlice, (uint64_t)&protocol conformance descriptor for PBPropertyTimeSlice);
}

uint64_t sub_227E378BC()
{
  return sub_227D51624(&qword_2559291E8, type metadata accessor for PBPropertyTimeSlice, (uint64_t)&protocol conformance descriptor for PBPropertyTimeSlice);
}

uint64_t sub_227E378E8()
{
  return sub_227D51624(&qword_2559299B0, type metadata accessor for PBPropertyTimeSlice, (uint64_t)&protocol conformance descriptor for PBPropertyTimeSlice);
}

uint64_t sub_227E37914()
{
  return sub_227D51624(&qword_255929A98, type metadata accessor for PBPropertyTimeSlice, (uint64_t)&protocol conformance descriptor for PBPropertyTimeSlice);
}

uint64_t sub_227E37954(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_227E2EF44(a1, a2, a3, a4, type metadata accessor for PBPropertyNoParams);
}

uint64_t sub_227E37978(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_227E2EF44(a1, a2, a3, a4, type metadata accessor for PBPropertySingleFloatParam);
}

uint64_t sub_227E3799C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_227E2EF44(a1, a2, a3, a4, type metadata accessor for PBPropertyBookReadParams);
}

uint64_t sub_227E379C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_227E2EF44(a1, a2, a3, a4, type metadata accessor for PBPropertyMarkedAsFinishedParam);
}

uint64_t sub_227E379E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_227E2EF44(a1, a2, a3, a4, type metadata accessor for PBPropertyBookImpressionParam);
}

uint64_t initializeBufferWithCopyOfBuffer for MarkedAsFinishedMechanism(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_BYTE *)(result + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for MarkedAsFinishedMechanism(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for MarkedAsFinishedMechanism(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = 0;
    *(_BYTE *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 1;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 9) = v3;
  return result;
}

uint64_t sub_227E37A78(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 8))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_227E37A94(uint64_t result, int a2)
{
  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    *(_BYTE *)(result + 8) = 0;
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for PBPropertyConfiguration(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v11 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    v5 = a2[3];
    a1[2] = a2[2];
    a1[3] = v5;
    a1[4] = a2[4];
    v6 = *(int *)(a3 + 32);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = sub_227E5F3E4();
    v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
  }
  return v3;
}

uint64_t destroy for PBPropertyConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 32);
  v5 = sub_227E5F3E4();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

uint64_t initializeWithCopy for PBPropertyConfiguration(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v5 = *(int *)(a3 + 32);
  v6 = a1 + v5;
  v7 = a2 + v5;
  v8 = sub_227E5F3E4();
  v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  return a1;
}

_QWORD *assignWithCopy for PBPropertyConfiguration(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  v6 = *(int *)(a3 + 32);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_227E5F3E4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t initializeWithTake for PBPropertyConfiguration(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v5 = *(int *)(a3 + 32);
  v6 = a1 + v5;
  v7 = a2 + v5;
  v8 = sub_227E5F3E4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for PBPropertyConfiguration(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v7 = *(int *)(a3 + 32);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_227E5F3E4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for PBPropertyConfiguration()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_227E37DA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_227E5F3E4();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 32), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for PBPropertyConfiguration()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_227E37E30(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 24) = (a2 - 1);
  }
  else
  {
    v7 = sub_227E5F3E4();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 32), a2, a2, v7);
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for PBPropertyNoParams(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_227E5F3E4();
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t destroy for PBPropertyNoParams(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_227E5F3E4();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t initializeWithCopy for PBPropertyNoParams(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_227E5F3E4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t assignWithCopy for PBPropertyNoParams(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_227E5F3E4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t initializeWithTake for PBPropertyNoParams(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_227E5F3E4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t assignWithTake for PBPropertyNoParams(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_227E5F3E4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for PBPropertyNoParams()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_227E38030(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_227E5F3E4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for PBPropertyNoParams()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_227E38078(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_227E5F3E4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t sub_227E380B8()
{
  uint64_t result;
  unint64_t v1;

  result = sub_227E5F3E4();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for PBPropertySingleFloatParam(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v9 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v9 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_DWORD *)a1 = *(_DWORD *)a2;
    v5 = *(int *)(a3 + 20);
    v6 = (char *)a1 + v5;
    v7 = (char *)a2 + v5;
    v8 = sub_227E5F3E4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v6, v7, v8);
  }
  return v3;
}

_DWORD *initializeWithCopy for PBPropertySingleFloatParam(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_227E5F3E4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

_DWORD *assignWithCopy for PBPropertySingleFloatParam(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_227E5F3E4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

_DWORD *initializeWithTake for PBPropertySingleFloatParam(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_227E5F3E4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_DWORD *assignWithTake for PBPropertySingleFloatParam(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_227E5F3E4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for PBPropertySingleFloatParam()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for PBPropertySingleFloatParam()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

_QWORD *initializeBufferWithCopyOfBuffer for PBPropertyBookReadParams(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = (_QWORD *)a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v9 = *a2;
    *v3 = *a2;
    v3 = (_QWORD *)(v9 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    *(_DWORD *)(a1 + 4) = *((_DWORD *)a2 + 1);
    v5 = *(int *)(a3 + 24);
    v6 = a1 + v5;
    v7 = (uint64_t)a2 + v5;
    v8 = sub_227E5F3E4();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v6, v7, v8);
  }
  return v3;
}

uint64_t destroy for PBPropertyBookReadParams(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1 + *(int *)(a2 + 24);
  v3 = sub_227E5F3E4();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
}

uint64_t initializeWithCopy for PBPropertyBookReadParams(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
  v4 = *(int *)(a3 + 24);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_227E5F3E4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

uint64_t assignWithCopy for PBPropertyBookReadParams(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
  v4 = *(int *)(a3 + 24);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_227E5F3E4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

uint64_t initializeWithTake for PBPropertyBookReadParams(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
  v4 = *(int *)(a3 + 24);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_227E5F3E4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t assignWithTake for PBPropertyBookReadParams(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
  v4 = *(int *)(a3 + 24);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_227E5F3E4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for PBPropertyBookReadParams()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_227E385A0(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  unsigned int v4;
  BOOL v5;
  int v6;
  uint64_t v10;

  if ((_DWORD)a2 == 254)
  {
    v4 = *a1;
    v5 = v4 >= 2;
    v6 = (v4 + 2147483646) & 0x7FFFFFFF;
    if (v5)
      return (v6 + 1);
    else
      return 0;
  }
  else
  {
    v10 = sub_227E5F3E4();
    return (*(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(&a1[*(int *)(a3 + 24)], a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for PBPropertyBookReadParams()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

_BYTE *sub_227E38628(_BYTE *result, uint64_t a2, int a3, uint64_t a4)
{
  _BYTE *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 254)
  {
    *result = a2 + 1;
  }
  else
  {
    v7 = sub_227E5F3E4();
    return (_BYTE *)(*(uint64_t (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 24)], a2, a2, v7);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for PBPropertyBookImpressionParam(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  _BYTE *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v9 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v9 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    v5 = *(int *)(a3 + 20);
    v6 = (char *)a1 + v5;
    v7 = (char *)a2 + v5;
    v8 = sub_227E5F3E4();
    (*(void (**)(_BYTE *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v6, v7, v8);
  }
  return v3;
}

_BYTE *initializeWithCopy for PBPropertyBookImpressionParam(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v4;
  _BYTE *v5;
  _BYTE *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = &a1[v4];
  v6 = &a2[v4];
  v7 = sub_227E5F3E4();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

_BYTE *assignWithCopy for PBPropertyBookImpressionParam(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v4;
  _BYTE *v5;
  _BYTE *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = &a1[v4];
  v6 = &a2[v4];
  v7 = sub_227E5F3E4();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

_BYTE *initializeWithTake for PBPropertyBookImpressionParam(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v4;
  _BYTE *v5;
  _BYTE *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = &a1[v4];
  v6 = &a2[v4];
  v7 = sub_227E5F3E4();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_BYTE *assignWithTake for PBPropertyBookImpressionParam(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v4;
  _BYTE *v5;
  _BYTE *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = &a1[v4];
  v6 = &a2[v4];
  v7 = sub_227E5F3E4();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for PBPropertyBookImpressionParam()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_227E3889C(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  unsigned int v4;
  BOOL v5;
  int v6;
  uint64_t v10;

  if ((_DWORD)a2 == 254)
  {
    v4 = *a1;
    v5 = v4 >= 2;
    v6 = (v4 + 2147483646) & 0x7FFFFFFF;
    if (v5)
      return (v6 + 1);
    else
      return 0;
  }
  else
  {
    v10 = sub_227E5F3E4();
    return (*(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(&a1[*(int *)(a3 + 20)], a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for PBPropertyBookImpressionParam()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

_BYTE *sub_227E38924(_BYTE *result, uint64_t a2, int a3, uint64_t a4)
{
  _BYTE *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 254)
  {
    *result = a2 + 1;
  }
  else
  {
    v7 = sub_227E5F3E4();
    return (_BYTE *)(*(uint64_t (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 20)], a2, a2, v7);
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for PBPropertyMarkedAsFinishedParam(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = (_QWORD *)a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v9 = *a2;
    *v3 = *a2;
    v3 = (_QWORD *)(v9 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_QWORD *)a1 = *a2;
    *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
    v5 = *(int *)(a3 + 20);
    v6 = a1 + v5;
    v7 = (uint64_t)a2 + v5;
    v8 = sub_227E5F3E4();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v6, v7, v8);
  }
  return v3;
}

uint64_t _s13BookDataStore26PBPropertySingleFloatParamVwxx_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1 + *(int *)(a2 + 20);
  v3 = sub_227E5F3E4();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
}

uint64_t initializeWithCopy for PBPropertyMarkedAsFinishedParam(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v4 = *(int *)(a3 + 20);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_227E5F3E4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

uint64_t assignWithCopy for PBPropertyMarkedAsFinishedParam(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *a2;
  *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)a1 = v4;
  v5 = *(int *)(a3 + 20);
  v6 = a1 + v5;
  v7 = (uint64_t)a2 + v5;
  v8 = sub_227E5F3E4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 24))(v6, v7, v8);
  return a1;
}

uint64_t initializeWithTake for PBPropertyMarkedAsFinishedParam(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v4 = *(int *)(a3 + 20);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_227E5F3E4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t assignWithTake for PBPropertyMarkedAsFinishedParam(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v4 = *(int *)(a3 + 20);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_227E5F3E4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for PBPropertyMarkedAsFinishedParam()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_227E38BFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a1 + *(int *)(a3 + 20);
  v5 = sub_227E5F3E4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, a2, v5);
}

uint64_t storeEnumTagSinglePayload for PBPropertyMarkedAsFinishedParam()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_227E38C4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;

  v5 = a1 + *(int *)(a4 + 20);
  v6 = sub_227E5F3E4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, a2, a2, v6);
}

uint64_t *initializeBufferWithCopyOfBuffer for PBPropertyValue(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    v7 = a3[5];
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = type metadata accessor for PBPropertyValue.OneOf_Params(0);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v9, 1, v10))
    {
      v13 = (char *)&loc_227E38D70 + 4 * byte_227E71C56[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    v11 = sub_227D68330(&qword_255928C90);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    v14 = a3[6];
    v15 = (char *)v4 + v14;
    v16 = (char *)a2 + v14;
    v17 = sub_227E5F3E4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
    v18 = a3[7];
    v19 = (char *)v4 + v18;
    v20 = (char *)a2 + v18;
    v21 = sub_227E5F3C0();
    v22 = *(_QWORD *)(v21 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
    {
      v23 = sub_227D68330(&qword_255928C98);
      memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v19, v20, v21);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
    }
    v24 = a3[8];
    v25 = (uint64_t *)((char *)v4 + v24);
    v26 = (uint64_t *)((char *)a2 + v24);
    v27 = v26[1];
    *v25 = *v26;
    v25[1] = v27;
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for PBPropertyValue(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v4 = a1 + a2[5];
  v5 = type metadata accessor for PBPropertyValue.OneOf_Params(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5))
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        goto LABEL_9;
      case 1u:
        v6 = type metadata accessor for PBPropertySingleFloatParam(0);
        goto LABEL_7;
      case 2u:
        v7 = *(int *)(type metadata accessor for PBPropertyBookReadParams(0) + 24);
        goto LABEL_8;
      case 3u:
        v6 = type metadata accessor for PBPropertyMarkedAsFinishedParam(0);
        goto LABEL_7;
      case 4u:
        v6 = type metadata accessor for PBPropertyBookImpressionParam(0);
LABEL_7:
        v7 = *(int *)(v6 + 20);
LABEL_8:
        v4 += v7;
LABEL_9:
        v8 = sub_227E5F3E4();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v4, v8);
        break;
      default:
        break;
    }
  }
  v9 = a1 + a2[6];
  v10 = sub_227E5F3E4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = a1 + a2[7];
  v12 = sub_227E5F3C0();
  v13 = *(_QWORD *)(v12 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v11, v12);
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for PBPropertyValue(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for PBPropertyValue.OneOf_Params(0);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v8, 1, v9))
  {
    v11 = (char *)&loc_227E39130 + 4 * byte_227E71C60[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v10 = sub_227D68330(&qword_255928C90);
  memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  v12 = a3[6];
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = sub_227E5F3E4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
  v16 = a3[7];
  v17 = (char *)a1 + v16;
  v18 = (char *)a2 + v16;
  v19 = sub_227E5F3C0();
  v20 = *(_QWORD *)(v19 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
  {
    v21 = sub_227D68330(&qword_255928C98);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v17, v18, v19);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
  }
  v22 = a3[8];
  v23 = (_QWORD *)((char *)a1 + v22);
  v24 = (_QWORD *)((char *)a2 + v22);
  v25 = v24[1];
  *v23 = *v24;
  v23[1] = v25;
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for PBPropertyValue(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t (*v10)(char *, uint64_t, uint64_t);
  int v11;
  int v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(char *, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for PBPropertyValue.OneOf_Params(0);
  v10 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48);
  v11 = v10(v7, 1, v9);
  v12 = v10(v8, 1, v9);
  if (v11)
  {
    if (!v12)
    {
      v13 = (char *)&loc_227E39390 + 4 * byte_227E71C65[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    goto LABEL_6;
  }
  if (v12)
  {
    sub_227D64BC4((uint64_t)v7, type metadata accessor for PBPropertyValue.OneOf_Params);
LABEL_6:
    v14 = sub_227D68330(&qword_255928C90);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_9;
  }
  if (a1 != a2)
  {
    sub_227D64BC4((uint64_t)v7, type metadata accessor for PBPropertyValue.OneOf_Params);
    v15 = (char *)&loc_227E39424 + 4 * byte_227E71C6A[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
LABEL_9:
  v16 = a3[6];
  v17 = (char *)a1 + v16;
  v18 = (char *)a2 + v16;
  v19 = sub_227E5F3E4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 24))(v17, v18, v19);
  v20 = a3[7];
  v21 = (char *)a1 + v20;
  v22 = (char *)a2 + v20;
  v23 = sub_227E5F3C0();
  v24 = *(_QWORD *)(v23 - 8);
  v25 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v24 + 48);
  v26 = v25(v21, 1, v23);
  v27 = v25(v22, 1, v23);
  if (!v26)
  {
    if (!v27)
    {
      (*(void (**)(char *, char *, uint64_t))(v24 + 24))(v21, v22, v23);
      goto LABEL_15;
    }
    (*(void (**)(char *, uint64_t))(v24 + 8))(v21, v23);
    goto LABEL_14;
  }
  if (v27)
  {
LABEL_14:
    v28 = sub_227D68330(&qword_255928C98);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    goto LABEL_15;
  }
  (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v21, v22, v23);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
LABEL_15:
  v29 = a3[8];
  v30 = (_QWORD *)((char *)a1 + v29);
  v31 = (_QWORD *)((char *)a2 + v29);
  *v30 = *v31;
  v30[1] = v31[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void sub_227E3964C()
{
  _DWORD *v0;
  _DWORD *v1;
  uint64_t v2;
  char *v3;
  char *v4;
  uint64_t v5;

  *v0 = *v1;
  v2 = *(int *)(type metadata accessor for PBPropertySingleFloatParam(0) + 20);
  v3 = (char *)v0 + v2;
  v4 = (char *)v1 + v2;
  v5 = sub_227E5F3E4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(v3, v4, v5);
  swift_storeEnumTagMultiPayload();
  JUMPOUT(0x227E3950CLL);
}

void sub_227E3969C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)v0 = *(_BYTE *)v1;
  *(_DWORD *)(v0 + 4) = *(_DWORD *)(v1 + 4);
  v2 = *(int *)(type metadata accessor for PBPropertyBookReadParams(0) + 24);
  v3 = v0 + v2;
  v4 = v1 + v2;
  v5 = sub_227E5F3E4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(v3, v4, v5);
  swift_storeEnumTagMultiPayload();
  JUMPOUT(0x227E3950CLL);
}

void sub_227E396F4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *v1;
  *(_BYTE *)(v0 + 8) = *((_BYTE *)v1 + 8);
  *(_QWORD *)v0 = v2;
  v3 = *(int *)(type metadata accessor for PBPropertyMarkedAsFinishedParam(0) + 20);
  v4 = v0 + v3;
  v5 = (uint64_t)v1 + v3;
  v6 = sub_227E5F3E4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(v4, v5, v6);
  swift_storeEnumTagMultiPayload();
  JUMPOUT(0x227E3950CLL);
}

void sub_227E3974C()
{
  _BYTE *v0;
  _BYTE *v1;
  uint64_t v2;
  _BYTE *v3;
  _BYTE *v4;
  uint64_t v5;

  *v0 = *v1;
  v2 = *(int *)(type metadata accessor for PBPropertyBookImpressionParam(0) + 20);
  v3 = &v0[v2];
  v4 = &v1[v2];
  v5 = sub_227E5F3E4();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(v3, v4, v5);
  swift_storeEnumTagMultiPayload();
  JUMPOUT(0x227E3950CLL);
}

_QWORD *initializeWithTake for PBPropertyValue(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for PBPropertyValue.OneOf_Params(0);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v8, 1, v9))
  {
    v11 = (char *)&loc_227E39850 + 4 * byte_227E71C6F[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v10 = sub_227D68330(&qword_255928C90);
  memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  v12 = a3[6];
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = sub_227E5F3E4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
  v16 = a3[7];
  v17 = (char *)a1 + v16;
  v18 = (char *)a2 + v16;
  v19 = sub_227E5F3C0();
  v20 = *(_QWORD *)(v19 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
  {
    v21 = sub_227D68330(&qword_255928C98);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v17, v18, v19);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
  }
  *(_OWORD *)((char *)a1 + a3[8]) = *(_OWORD *)((char *)a2 + a3[8]);
  return a1;
}

_QWORD *assignWithTake for PBPropertyValue(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t (*v10)(char *, uint64_t, uint64_t);
  int v11;
  int v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(char *, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for PBPropertyValue.OneOf_Params(0);
  v10 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48);
  v11 = v10(v7, 1, v9);
  v12 = v10(v8, 1, v9);
  if (v11)
  {
    if (!v12)
    {
      v13 = (char *)&loc_227E39AA4 + 4 * byte_227E71C74[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    goto LABEL_6;
  }
  if (v12)
  {
    sub_227D64BC4((uint64_t)v7, type metadata accessor for PBPropertyValue.OneOf_Params);
LABEL_6:
    v14 = sub_227D68330(&qword_255928C90);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_9;
  }
  if (a1 != a2)
  {
    sub_227D64BC4((uint64_t)v7, type metadata accessor for PBPropertyValue.OneOf_Params);
    v15 = (char *)&loc_227E39B38 + 4 * byte_227E71C79[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
LABEL_9:
  v16 = a3[6];
  v17 = (char *)a1 + v16;
  v18 = (char *)a2 + v16;
  v19 = sub_227E5F3E4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 40))(v17, v18, v19);
  v20 = a3[7];
  v21 = (char *)a1 + v20;
  v22 = (char *)a2 + v20;
  v23 = sub_227E5F3C0();
  v24 = *(_QWORD *)(v23 - 8);
  v25 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v24 + 48);
  v26 = v25(v21, 1, v23);
  v27 = v25(v22, 1, v23);
  if (!v26)
  {
    if (!v27)
    {
      (*(void (**)(char *, char *, uint64_t))(v24 + 40))(v21, v22, v23);
      goto LABEL_15;
    }
    (*(void (**)(char *, uint64_t))(v24 + 8))(v21, v23);
    goto LABEL_14;
  }
  if (v27)
  {
LABEL_14:
    v28 = sub_227D68330(&qword_255928C98);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    goto LABEL_15;
  }
  (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v21, v22, v23);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
LABEL_15:
  v29 = a3[8];
  v30 = (_QWORD *)((char *)a1 + v29);
  v31 = (_QWORD *)((char *)a2 + v29);
  v33 = *v31;
  v32 = v31[1];
  *v30 = v33;
  v30[1] = v32;
  swift_bridgeObjectRelease();
  return a1;
}

void sub_227E39D50()
{
  _DWORD *v0;
  _DWORD *v1;
  uint64_t v2;
  char *v3;
  char *v4;
  uint64_t v5;

  *v0 = *v1;
  v2 = *(int *)(type metadata accessor for PBPropertySingleFloatParam(0) + 20);
  v3 = (char *)v0 + v2;
  v4 = (char *)v1 + v2;
  v5 = sub_227E5F3E4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(v3, v4, v5);
  swift_storeEnumTagMultiPayload();
  JUMPOUT(0x227E39C20);
}

void sub_227E39DA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)v0 = *(_BYTE *)v1;
  *(_DWORD *)(v0 + 4) = *(_DWORD *)(v1 + 4);
  v2 = *(int *)(type metadata accessor for PBPropertyBookReadParams(0) + 24);
  v3 = v0 + v2;
  v4 = v1 + v2;
  v5 = sub_227E5F3E4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(v3, v4, v5);
  swift_storeEnumTagMultiPayload();
  JUMPOUT(0x227E39C20);
}

void sub_227E39DF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)v0 = *(_QWORD *)v1;
  *(_BYTE *)(v0 + 8) = *(_BYTE *)(v1 + 8);
  v2 = *(int *)(type metadata accessor for PBPropertyMarkedAsFinishedParam(0) + 20);
  v3 = v0 + v2;
  v4 = v1 + v2;
  v5 = sub_227E5F3E4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(v3, v4, v5);
  swift_storeEnumTagMultiPayload();
  JUMPOUT(0x227E39C20);
}

void sub_227E39E50()
{
  _BYTE *v0;
  _BYTE *v1;
  uint64_t v2;
  _BYTE *v3;
  _BYTE *v4;
  uint64_t v5;

  *v0 = *v1;
  v2 = *(int *)(type metadata accessor for PBPropertyBookImpressionParam(0) + 20);
  v3 = &v0[v2];
  v4 = &v1[v2];
  v5 = sub_227E5F3E4();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(v3, v4, v5);
  swift_storeEnumTagMultiPayload();
  JUMPOUT(0x227E39C20);
}

uint64_t getEnumTagSinglePayload for PBPropertyValue()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_227E39EAC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v13;
  int v14;

  v6 = sub_227D68330(&qword_255928C90);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = a3[5];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + v9, a2, v8);
  }
  v10 = sub_227E5F3E4();
  v7 = *(_QWORD *)(v10 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v10;
    v9 = a3[6];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + v9, a2, v8);
  }
  v11 = sub_227D68330(&qword_255928C98);
  v7 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v9 = a3[7];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + v9, a2, v8);
  }
  v13 = *(_QWORD *)(a1 + a3[8] + 8);
  if (v13 >= 0xFFFFFFFF)
    LODWORD(v13) = -1;
  v14 = v13 - 1;
  if (v14 < 0)
    v14 = -1;
  return (v14 + 1);
}

uint64_t storeEnumTagSinglePayload for PBPropertyValue()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_227E39F98(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;

  v8 = sub_227D68330(&qword_255928C90);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = a4[5];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + v11, a2, a2, v10);
  }
  v12 = sub_227E5F3E4();
  v9 = *(_QWORD *)(v12 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v12;
    v11 = a4[6];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + v11, a2, a2, v10);
  }
  result = sub_227D68330(&qword_255928C98);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = a4[7];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + v11, a2, a2, v10);
  }
  *(_QWORD *)(a1 + a4[8] + 8) = a2;
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for PBPropertyValue.OneOf_Params(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) == 0)
  {
    v5 = (char *)&loc_227E3A0B8 + 4 * byte_227E71C7E[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v6 = *a2;
  *a1 = *a2;
  v7 = v6 + ((v4 + 16) & ~(unint64_t)v4);
  swift_retain();
  return v7;
}

uint64_t destroy for PBPropertyValue.OneOf_Params(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      goto LABEL_8;
    case 1:
      v3 = type metadata accessor for PBPropertySingleFloatParam(0);
      goto LABEL_6;
    case 2:
      v4 = *(int *)(type metadata accessor for PBPropertyBookReadParams(0) + 24);
      goto LABEL_7;
    case 3:
      v3 = type metadata accessor for PBPropertyMarkedAsFinishedParam(0);
      goto LABEL_6;
    case 4:
      v3 = type metadata accessor for PBPropertyBookImpressionParam(0);
LABEL_6:
      v4 = *(int *)(v3 + 20);
LABEL_7:
      a1 += v4;
LABEL_8:
      v5 = sub_227E5F3E4();
      result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
      break;
    default:
      return result;
  }
  return result;
}

void initializeWithCopy for PBPropertyValue.OneOf_Params()
{
  char *v0;

  v0 = (char *)sub_227E3A340 + 4 * byte_227E71C88[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_227E3A340()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = sub_227E5F3E4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(v0, v1, v2);
  swift_storeEnumTagMultiPayload();
  return v0;
}

uint64_t assignWithCopy for PBPropertyValue.OneOf_Params(uint64_t result, uint64_t a2)
{
  char *v2;

  if (result != a2)
  {
    sub_227D64BC4(result, type metadata accessor for PBPropertyValue.OneOf_Params);
    v2 = (char *)&loc_227E3A520 + 4 * byte_227E71C8D[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  return result;
}

void initializeWithTake for PBPropertyValue.OneOf_Params()
{
  char *v0;

  v0 = (char *)sub_227E3A6E8 + 4 * byte_227E71C92[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_227E3A6E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = sub_227E5F3E4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 32))(v0, v1, v2);
  swift_storeEnumTagMultiPayload();
  return v0;
}

uint64_t assignWithTake for PBPropertyValue.OneOf_Params(uint64_t result, uint64_t a2)
{
  char *v2;

  if (result != a2)
  {
    sub_227D64BC4(result, type metadata accessor for PBPropertyValue.OneOf_Params);
    v2 = (char *)&loc_227E3A8C8 + 4 * byte_227E71C97[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for PBPropertyValue.OneOf_Params(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a3 - 8) + 48))();
}

uint64_t storeEnumTagSinglePayload for PBPropertyValue.OneOf_Params(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a4 - 8) + 56))();
}

uint64_t sub_227E3AA68()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t *initializeBufferWithCopyOfBuffer for PBPropertyBundle(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    v7 = a1;
    a1[1] = a2[1];
    v8 = *(int *)(a3 + 24);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_227E5F3E4();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    v13 = *(int *)(a3 + 28);
    v14 = (uint64_t *)((char *)v7 + v13);
    v15 = (uint64_t *)((char *)a2 + v13);
    v16 = type metadata accessor for PBPropertyConfiguration(0);
    v17 = *(_QWORD *)(v16 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
    {
      v18 = sub_227D68330(&qword_255928C88);
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
    else
    {
      *(_OWORD *)v14 = *(_OWORD *)v15;
      v19 = v15[3];
      v14[2] = v15[2];
      v14[3] = v19;
      v14[4] = v15[4];
      v20 = *(int *)(v16 + 32);
      v21 = (char *)v14 + v20;
      v22 = (char *)v15 + v20;
      swift_bridgeObjectRetain();
      v12(v21, v22, v11);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
    }
  }
  return v7;
}

uint64_t destroy for PBPropertyBundle(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  void (*v9)(uint64_t, uint64_t);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 24);
  v5 = sub_227E5F3E4();
  v9 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
  v9(v4, v5);
  v6 = a1 + *(int *)(a2 + 28);
  v7 = type metadata accessor for PBPropertyConfiguration(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v6, 1, v7);
  if (!(_DWORD)result)
  {
    swift_bridgeObjectRelease();
    return ((uint64_t (*)(uint64_t, uint64_t))v9)(v6 + *(int *)(v7 + 32), v5);
  }
  return result;
}

_QWORD *initializeWithCopy for PBPropertyBundle(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = *(int *)(a3 + 24);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_227E5F3E4();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  v12 = *(int *)(a3 + 28);
  v13 = (_QWORD *)((char *)a1 + v12);
  v14 = (_QWORD *)((char *)a2 + v12);
  v15 = type metadata accessor for PBPropertyConfiguration(0);
  v16 = *(_QWORD *)(v15 - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    v17 = sub_227D68330(&qword_255928C88);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    *(_OWORD *)v13 = *(_OWORD *)v14;
    v18 = v14[3];
    v13[2] = v14[2];
    v13[3] = v18;
    v13[4] = v14[4];
    v19 = *(int *)(v15 + 32);
    v20 = (char *)v13 + v19;
    v21 = (char *)v14 + v19;
    swift_bridgeObjectRetain();
    v11(v20, v21, v10);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  return a1;
}

_QWORD *assignWithCopy for PBPropertyBundle(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(char *, uint64_t, uint64_t);
  int v18;
  uint64_t v19;
  char *v20;
  char *v21;
  void (*v22)(char *, char *, uint64_t);
  uint64_t v23;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 24);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_227E5F3E4();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(void (**)(char *, char *, uint64_t))(v10 + 24);
  v11(v7, v8, v9);
  v12 = *(int *)(a3 + 28);
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = type metadata accessor for PBPropertyConfiguration(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48);
  LODWORD(v8) = v17(v13, 1, v15);
  v18 = v17(v14, 1, v15);
  if (!(_DWORD)v8)
  {
    if (!v18)
    {
      *(_QWORD *)v13 = *(_QWORD *)v14;
      *((_QWORD *)v13 + 1) = *((_QWORD *)v14 + 1);
      *((_QWORD *)v13 + 2) = *((_QWORD *)v14 + 2);
      *((_QWORD *)v13 + 3) = *((_QWORD *)v14 + 3);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *((_QWORD *)v13 + 4) = *((_QWORD *)v14 + 4);
      v11(&v13[*(int *)(v15 + 32)], &v14[*(int *)(v15 + 32)], v9);
      return a1;
    }
    sub_227D64BC4((uint64_t)v13, type metadata accessor for PBPropertyConfiguration);
    goto LABEL_6;
  }
  if (v18)
  {
LABEL_6:
    v23 = sub_227D68330(&qword_255928C88);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    return a1;
  }
  *(_QWORD *)v13 = *(_QWORD *)v14;
  *((_QWORD *)v13 + 1) = *((_QWORD *)v14 + 1);
  *((_QWORD *)v13 + 2) = *((_QWORD *)v14 + 2);
  *((_QWORD *)v13 + 3) = *((_QWORD *)v14 + 3);
  *((_QWORD *)v13 + 4) = *((_QWORD *)v14 + 4);
  v19 = *(int *)(v15 + 32);
  v20 = &v13[v19];
  v21 = &v14[v19];
  v22 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
  swift_bridgeObjectRetain();
  v22(v20, v21, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  return a1;
}

_OWORD *initializeWithTake for PBPropertyBundle(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;

  *a1 = *a2;
  v6 = *(int *)(a3 + 24);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_227E5F3E4();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  v11 = *(int *)(a3 + 28);
  v12 = (_OWORD *)((char *)a1 + v11);
  v13 = (_OWORD *)((char *)a2 + v11);
  v14 = type metadata accessor for PBPropertyConfiguration(0);
  v15 = *(_QWORD *)(v14 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    v16 = sub_227D68330(&qword_255928C88);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    v17 = v13[1];
    *v12 = *v13;
    v12[1] = v17;
    *((_QWORD *)v12 + 4) = *((_QWORD *)v13 + 4);
    v10((char *)v12 + *(int *)(v14 + 32), (char *)v13 + *(int *)(v14 + 32), v9);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  return a1;
}

_QWORD *assignWithTake for PBPropertyBundle(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(uint64_t, uint64_t, uint64_t);
  int v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v22;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 24);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_227E5F3E4();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(void (**)(char *, char *, uint64_t))(v10 + 40);
  v11(v7, v8, v9);
  v12 = *(int *)(a3 + 28);
  v13 = (uint64_t)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = type metadata accessor for PBPropertyConfiguration(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v16 + 48);
  LODWORD(v8) = v17(v13, 1, v15);
  v18 = v17((uint64_t)v14, 1, v15);
  if (!(_DWORD)v8)
  {
    if (!v18)
    {
      *(_OWORD *)v13 = *(_OWORD *)v14;
      v22 = *((_QWORD *)v14 + 3);
      *(_QWORD *)(v13 + 16) = *((_QWORD *)v14 + 2);
      *(_QWORD *)(v13 + 24) = v22;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v13 + 32) = *((_QWORD *)v14 + 4);
      v11((char *)(v13 + *(int *)(v15 + 32)), &v14[*(int *)(v15 + 32)], v9);
      return a1;
    }
    sub_227D64BC4(v13, type metadata accessor for PBPropertyConfiguration);
    goto LABEL_6;
  }
  if (v18)
  {
LABEL_6:
    v20 = sub_227D68330(&qword_255928C88);
    memcpy((void *)v13, v14, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    return a1;
  }
  v19 = *((_OWORD *)v14 + 1);
  *(_OWORD *)v13 = *(_OWORD *)v14;
  *(_OWORD *)(v13 + 16) = v19;
  *(_QWORD *)(v13 + 32) = *((_QWORD *)v14 + 4);
  (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(v13 + *(int *)(v15 + 32), &v14[*(int *)(v15 + 32)], v9);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  return a1;
}

uint64_t getEnumTagSinglePayload for PBPropertyBundle()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_227E3B26C(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_227E5F3E4();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 24);
    }
    else
    {
      v10 = sub_227D68330(&qword_255928C88);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 28);
    }
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(&a1[v11], a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for PBPropertyBundle()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_227E3B31C(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v8 = sub_227E5F3E4();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 24);
    }
    else
    {
      v10 = sub_227D68330(&qword_255928C88);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 28);
    }
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(&v5[v11], a2, a2, v10);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for PBPropertyTimeSlice(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    v7 = a1;
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_227E5F3E4();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    v13 = *(int *)(a3 + 24);
    v14 = (char *)v7 + v13;
    v15 = (char *)a2 + v13;
    v16 = sub_227E5F3C0();
    v17 = *(_QWORD *)(v16 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
    {
      v18 = sub_227D68330(&qword_255928C98);
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v14, v15, v16);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
    }
  }
  return v7;
}

uint64_t destroy for PBPropertyTimeSlice(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_227E5F3E4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = a1 + *(int *)(a2 + 24);
  v7 = sub_227E5F3C0();
  v8 = *(_QWORD *)(v7 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  return result;
}

_QWORD *initializeWithCopy for PBPropertyTimeSlice(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_227E5F3E4();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  v10(v7, v8, v9);
  v11 = *(int *)(a3 + 24);
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = sub_227E5F3C0();
  v15 = *(_QWORD *)(v14 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    v16 = sub_227D68330(&qword_255928C98);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v12, v13, v14);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  return a1;
}

_QWORD *assignWithCopy for PBPropertyTimeSlice(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(char *, uint64_t, uint64_t);
  int v16;
  uint64_t v17;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_227E5F3E4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = *(int *)(a3 + 24);
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = sub_227E5F3C0();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  LODWORD(v8) = v15(v11, 1, v13);
  v16 = v15(v12, 1, v13);
  if (!(_DWORD)v8)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 24))(v11, v12, v13);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v14 + 8))(v11, v13);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    v17 = sub_227D68330(&qword_255928C98);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v11, v12, v13);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  return a1;
}

_QWORD *initializeWithTake for PBPropertyTimeSlice(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_227E5F3E4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = *(int *)(a3 + 24);
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = sub_227E5F3C0();
  v14 = *(_QWORD *)(v13 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
  {
    v15 = sub_227D68330(&qword_255928C98);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v12, v13);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  }
  return a1;
}

_QWORD *assignWithTake for PBPropertyTimeSlice(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(char *, uint64_t, uint64_t);
  int v16;
  uint64_t v17;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_227E5F3E4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  v10 = *(int *)(a3 + 24);
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = sub_227E5F3C0();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  LODWORD(v8) = v15(v11, 1, v13);
  v16 = v15(v12, 1, v13);
  if (!(_DWORD)v8)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 40))(v11, v12, v13);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v14 + 8))(v11, v13);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    v17 = sub_227D68330(&qword_255928C98);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v12, v13);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  return a1;
}

uint64_t getEnumTagSinglePayload for PBPropertyTimeSlice()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_227E3BA18(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_227E5F3E4();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 20);
    }
    else
    {
      v10 = sub_227D68330(&qword_255928C98);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 24);
    }
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(&a1[v11], a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for PBPropertyTimeSlice()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_227E3BAC8(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v8 = sub_227E5F3E4();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 20);
    }
    else
    {
      v10 = sub_227D68330(&qword_255928C98);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 24);
    }
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(&v5[v11], a2, a2, v10);
  }
  return result;
}

uint64_t CRDTModelSyncVersion.hasDelta(from:)()
{
  type metadata accessor for CRDTModelSyncVersion();
  return sub_227E5FEA0() & 1;
}

uint64_t CRDTModelSyncVersion.serializedData()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v7;

  v0 = sub_227E5FCD8();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0, v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for CRDTModelSyncVersion();
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v4, *MEMORY[0x24BE184E0], v0);
  sub_227E5FEAC();
  v5 = sub_227E5FD80();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
  return v5;
}

uint64_t CRDTModelSyncVersion.description.getter()
{
  type metadata accessor for CRDTModelSyncVersion();
  return sub_227E5FE88();
}

uint64_t static CRDTModelSyncVersion.== infix(_:_:)()
{
  sub_227E3BD30();
  if ((sub_227E60350() & 1) == 0)
    return 0;
  type metadata accessor for CRDTModelSyncVersion();
  return sub_227E5FE94();
}

unint64_t sub_227E3BD30()
{
  unint64_t result;

  result = qword_253F3B050;
  if (!qword_253F3B050)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_253F3B050);
  }
  return result;
}

uint64_t sub_227E3BD6C()
{
  sub_227E3BD30();
  if ((sub_227E60350() & 1) != 0)
    return sub_227E5FE94();
  else
    return 0;
}

uint64_t sub_227E3BDD4()
{
  return sub_227E5FE88();
}

void **initializeBufferWithCopyOfBuffer for CRDTModelSyncVersion(void **a1, void **a2, uint64_t a3)
{
  int v3;
  char *v4;
  void **v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  char *v11;

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = (char *)*a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v5 = (void **)&v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain();
  }
  else
  {
    v5 = a1;
    v6 = *(int *)(a3 + 20);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = sub_227E5FEAC();
    v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
    v11 = v4;
    v10(v7, v8, v9);
  }
  return v5;
}

_QWORD *initializeWithTake for CRDTModelSyncVersion(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_227E5FEAC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

void **assignWithTake for CRDTModelSyncVersion(void **a1, void **a2, uint64_t a3)
{
  void *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;

  v6 = *a1;
  *a1 = *a2;

  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_227E5FEAC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for CRDTModelSyncVersion()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_227E3BF60(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_227E5FEAC();
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 20)], a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for CRDTModelSyncVersion()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_227E3BFE8(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = sub_227E5FEAC();
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 20)], a2, a2, v7);
  }
  return result;
}

unint64_t sub_227E3C05C(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t result;
  char v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  _OWORD v13[2];
  uint64_t v14;
  uint64_t v15;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  sub_227D68330(&qword_255929D08);
  v2 = (_QWORD *)sub_227E6059C();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  v4 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_227D5DF48(v4, (uint64_t)v13, &qword_255929D10);
    result = sub_227DD0190((uint64_t)v13);
    if ((v6 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v7 = v2[6] + 40 * result;
    v8 = v13[0];
    v9 = v13[1];
    *(_QWORD *)(v7 + 32) = v14;
    *(_OWORD *)v7 = v8;
    *(_OWORD *)(v7 + 16) = v9;
    *(_QWORD *)(v2[7] + 8 * result) = v15;
    v10 = v2[2];
    v11 = __OFADD__(v10, 1);
    v12 = v10 + 1;
    if (v11)
      goto LABEL_11;
    v2[2] = v12;
    v4 += 48;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_227E3C184(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  _QWORD *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  sub_227D68330(&qword_255929D28);
  v2 = (_QWORD *)sub_227E6059C();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 56);
  while (1)
  {
    v5 = *(v4 - 3);
    v6 = *(v4 - 2);
    v8 = *(v4 - 1);
    v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = sub_227DD01C0(v5, v6);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v11 = (uint64_t *)(v2[6] + 16 * result);
    *v11 = v5;
    v11[1] = v6;
    v12 = (_QWORD *)(v2[7] + 16 * result);
    *v12 = v8;
    v12[1] = v7;
    v13 = v2[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v4 += 4;
    v2[2] = v15;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_227E3C2A4(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t result;
  char v8;
  uint64_t *v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  sub_227D68330(&qword_255929D18);
  v2 = (_QWORD *)sub_227E6059C();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  v4 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_227D5DF48(v4, (uint64_t)&v16, &qword_255929D20);
    v5 = v16;
    v6 = v17;
    result = sub_227DD01C0(v16, v17);
    if ((v8 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v9 = (uint64_t *)(v2[6] + 16 * result);
    *v9 = v5;
    v9[1] = v6;
    v10 = v2[7] + 40 * result;
    v11 = v18;
    v12 = v19;
    *(_QWORD *)(v10 + 32) = v20;
    *(_OWORD *)v10 = v11;
    *(_OWORD *)(v10 + 16) = v12;
    v13 = v2[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v2[2] = v15;
    v4 += 56;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t static ReadingGoalsDataStore.Constants.GoalDictKey.value.getter()
{
  return 1818324839;
}

uint64_t static ReadingGoalsDataStore.Constants.GoalDictKey.date.getter()
{
  return 1702125924;
}

uint64_t sub_227E3C40C@<X0>(uint64_t *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v3 = *a1;
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 96);
  v5 = *(_QWORD *)(v3 + 104);
  if (v4)
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v4;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = sub_227D5B9E0;
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return sub_227E3C58C(v4);
}

uint64_t sub_227E3C494(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t v7;
  uint64_t v8;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = sub_227D5B9E0;
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = *a2;
  swift_beginAccess();
  v8 = *(_QWORD *)(v7 + 96);
  *(_QWORD *)(v7 + 96) = v6;
  *(_QWORD *)(v7 + 104) = v5;
  sub_227E3C58C(v3);
  return sub_227D5B660(v8);
}

uint64_t ReadingGoalsDataStore.onRemoteChange.getter()
{
  uint64_t v0;
  uint64_t v1;

  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 96);
  sub_227E3C58C(v1);
  return v1;
}

uint64_t sub_227E3C58C(uint64_t result)
{
  if (result)
    return swift_retain();
  return result;
}

uint64_t ReadingGoalsDataStore.onRemoteChange.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;

  swift_beginAccess();
  v5 = *(_QWORD *)(v2 + 96);
  *(_QWORD *)(v2 + 96) = a1;
  *(_QWORD *)(v2 + 104) = a2;
  return sub_227D5B660(v5);
}

uint64_t (*ReadingGoalsDataStore.onRemoteChange.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t ReadingGoalsDataStore.__allocating_init(localStore:syncStore:)(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  v4 = swift_allocObject();
  ReadingGoalsDataStore.init(localStore:syncStore:)(a1, a2);
  return v4;
}

void sub_227E3C674()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  char v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  unint64_t v11;
  char v12;
  id v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t);
  uint64_t v26;
  id v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  _QWORD v38[5];
  __int128 v39;
  __int128 v40;

  v1 = v0;
  v2 = sub_227E5F03C();
  if (!v2)
    goto LABEL_16;
  v3 = v2;
  v36 = sub_227E5FF84();
  sub_227E60458();
  if (*(_QWORD *)(v3 + 16) && (v4 = sub_227DD0190((uint64_t)v38), (v5 & 1) != 0))
  {
    sub_227D635B0(*(_QWORD *)(v3 + 56) + 32 * v4, (uint64_t)&v39);
  }
  else
  {
    v39 = 0u;
    v40 = 0u;
  }
  sub_227DD3590((uint64_t)v38);
  if (!*((_QWORD *)&v40 + 1))
  {
    swift_bridgeObjectRelease();
    sub_227D5809C((uint64_t)&v39, qword_253F3B0B0);
LABEL_16:
    sub_227E60230();
    if (qword_253F39FF8[0] != -1)
      swift_once();
    v13 = (id)qword_253F39FF0;
    goto LABEL_19;
  }
  v6 = MEMORY[0x24BEE1768];
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_16;
  }
  sub_227E60248();
  if (qword_253F39FF8[0] != -1)
    swift_once();
  v7 = (void *)qword_253F39FF0;
  sub_227D68330(&qword_253F3B090);
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_227E6F1B0;
  v9 = MEMORY[0x24BEE17F0];
  *(_QWORD *)(v8 + 56) = v6;
  *(_QWORD *)(v8 + 64) = v9;
  *(_QWORD *)(v8 + 32) = v36;
  v10 = v7;
  sub_227E5F564();

  swift_bridgeObjectRelease();
  if (v36 <= 1)
  {
    v37 = sub_227E5FF84();
    sub_227E60458();
    if (*(_QWORD *)(v3 + 16) && (v11 = sub_227DD0190((uint64_t)v38), (v12 & 1) != 0))
    {
      sub_227D635B0(*(_QWORD *)(v3 + 56) + 32 * v11, (uint64_t)&v39);
    }
    else
    {
      v39 = 0u;
      v40 = 0u;
    }
    swift_bridgeObjectRelease();
    sub_227DD3590((uint64_t)v38);
    if (*((_QWORD *)&v40 + 1))
    {
      sub_227D68330(&qword_255928D00);
      if ((swift_dynamicCast() & 1) != 0)
      {
        v38[0] = MEMORY[0x24BEE4AF8];
        sub_227DECBC4(0, 2, 0);
        v14 = v38[0];
        v15 = *(_QWORD *)(v38[0] + 16);
        v16 = *(_QWORD *)(v38[0] + 24);
        v17 = v16 >> 1;
        v18 = v15 + 1;
        if (v16 >> 1 <= v15)
        {
          v33 = v15 + 1;
          v35 = *(_QWORD *)(v38[0] + 16);
          sub_227DECBC4(v16 > 1, v15 + 1, 1);
          v15 = v35;
          v18 = v33;
          v14 = v38[0];
          v16 = *(_QWORD *)(v38[0] + 24);
          v17 = v16 >> 1;
        }
        *(_QWORD *)(v14 + 16) = v18;
        v19 = v14 + 16 * v15;
        *(_QWORD *)(v19 + 32) = 0xD00000000000001ALL;
        *(_QWORD *)(v19 + 40) = 0x8000000227E6D960;
        v20 = v15 + 2;
        if (v17 <= v18)
        {
          v34 = v18;
          sub_227DECBC4(v16 > 1, v15 + 2, 1);
          v18 = v34;
          v14 = v38[0];
        }
        *(_QWORD *)(v14 + 16) = v20;
        v21 = v14 + 16 * v18;
        *(_QWORD *)(v21 + 32) = 0xD000000000000016;
        *(_QWORD *)(v21 + 40) = 0x8000000227E6D940;
        v22 = sub_227E3F518(v14);
        swift_release();
        v23 = sub_227E3F518(v37);
        swift_bridgeObjectRelease();
        v24 = sub_227E3ECA8(v23, v22);
        swift_bridgeObjectRelease();
        LOBYTE(v39) = 0;
        swift_retain();
        sub_227E3F364(v24, v1, &v39);
        swift_release();
        swift_release();
        if ((v39 & 1) != 0)
        {
          swift_beginAccess();
          v25 = (void (*)(uint64_t))v1[12];
          if (v25)
          {
            v26 = swift_retain();
            v25(v26);
            sub_227D5B660((uint64_t)v25);
          }
        }
        return;
      }
    }
    else
    {
      sub_227D5809C((uint64_t)&v39, qword_253F3B0B0);
    }
    goto LABEL_23;
  }
  swift_bridgeObjectRelease();
  if (v36 == 3)
  {
    sub_227E60224();
    v27 = (id)qword_253F39FF0;
    sub_227E5F564();

    v28 = v1 + 2;
    v29 = v1[5];
    v30 = v1[6];
    sub_227D572A4(v1 + 2, v29);
    (*(void (**)(_QWORD, unint64_t, unint64_t, uint64_t, uint64_t))(v30 + 16))(0, 0xD00000000000001ALL, 0x8000000227E6D960, v29, v30);
    swift_bridgeObjectRelease();
    v32 = v1[5];
    v31 = v1[6];
    sub_227D572A4(v28, v32);
    (*(void (**)(_QWORD, unint64_t, unint64_t, uint64_t, uint64_t))(v31 + 16))(0, 0xD000000000000016, 0x8000000227E6D940, v32, v31);
    swift_bridgeObjectRelease();
    return;
  }
  if (v36 == 2)
  {
LABEL_23:
    sub_227E60230();
    v13 = (id)qword_253F39FF0;
LABEL_19:
    sub_227E5F564();

  }
}

uint64_t sub_227E3CCD0(uint64_t *a1, _QWORD *a2, _BYTE *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _BYTE *v29;
  _BYTE *v30;
  unint64_t v31;
  char v32;
  uint64_t v33;
  int v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  unint64_t v38;
  char v39;
  uint64_t v40;
  int v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(char *, uint64_t);
  uint64_t result;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  id v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void (*v69)(char *, uint64_t);
  void (*v70)(char *, char *, uint64_t);
  unsigned int (*v71)(char *, uint64_t, uint64_t);
  void (*v72)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v73;
  char *v74;
  _QWORD *v75;
  char *v76;
  char *v77;
  _QWORD *v78;
  uint64_t v79;
  uint64_t v80;
  _BYTE *v81;
  _BYTE v82[32];

  v81 = a3;
  v5 = sub_227D68330(&qword_253F391D0);
  v7 = MEMORY[0x24BDAC7A8](v5, v6);
  v76 = (char *)&v70 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7, v9);
  v11 = (char *)&v70 - v10;
  v12 = sub_227E5F27C();
  v13 = *(_QWORD *)(v12 - 8);
  v79 = v12;
  v80 = v13;
  v15 = MEMORY[0x24BDAC7A8](v12, v14);
  v74 = (char *)&v70 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15, v17);
  v77 = (char *)&v70 - v18;
  v20 = *a1;
  v19 = a1[1];
  v21 = a2 + 2;
  v22 = a2[5];
  v23 = a2[6];
  sub_227D572A4(a2 + 2, v22);
  v24 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v23 + 8))(v20, v19, v22, v23);
  v25 = a2[10];
  v26 = a2[11];
  v75 = a2 + 7;
  sub_227D572A4(a2 + 7, v25);
  v27 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 + 8) + 8))(v20, v19, v25);
  v28 = v27;
  if (!v24)
  {
    v48 = a2[5];
    v47 = a2[6];
    sub_227D572A4(v21, v48);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v47 + 16))(v28, v20, v19, v48, v47);
    result = swift_bridgeObjectRelease();
    *v81 = 1;
    return result;
  }
  v78 = a2 + 2;
  v29 = v81;
  if (!v27)
  {
    swift_bridgeObjectRelease();
    v56 = a2[5];
    v57 = a2[6];
    sub_227D572A4(v78, v56);
    result = (*(uint64_t (**)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t))(v57 + 16))(0, v20, v19, v56, v57);
LABEL_17:
    *v29 = 1;
    return result;
  }
  v73 = v20;
  if (!*(_QWORD *)(v24 + 16) || (v30 = v81, v31 = sub_227DD01C0(1702125924, 0xE400000000000000), (v32 & 1) == 0))
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v80 + 56))(v11, 1, 1, v79);
    goto LABEL_13;
  }
  sub_227D635B0(*(_QWORD *)(v24 + 56) + 32 * v31, (uint64_t)v82);
  v33 = v79;
  v34 = swift_dynamicCast();
  v35 = v80;
  v72 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v80 + 56);
  v72(v11, v34 ^ 1u, 1, v33);
  v71 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48);
  if (v71(v11, 1, v33) == 1)
  {
LABEL_13:
    v49 = v19;
    swift_bridgeObjectRelease();
    sub_227D5809C((uint64_t)v11, &qword_253F391D0);
    sub_227E60230();
    if (qword_253F39FF8[0] != -1)
      swift_once();
    v50 = (void *)qword_253F39FF0;
    sub_227D68330(&qword_253F3B090);
    v51 = swift_allocObject();
    *(_OWORD *)(v51 + 16) = xmmword_227E6F1B0;
    *(_QWORD *)(v51 + 56) = MEMORY[0x24BEE0D00];
    *(_QWORD *)(v51 + 64) = sub_227D57A70();
    v52 = v73;
    *(_QWORD *)(v51 + 32) = v73;
    *(_QWORD *)(v51 + 40) = v49;
    swift_bridgeObjectRetain();
    v53 = v50;
    sub_227E5F564();

    swift_bridgeObjectRelease();
    v55 = a2[5];
    v54 = a2[6];
    sub_227D572A4(v78, v55);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v54 + 16))(v28, v52, v49, v55, v54);
    result = swift_bridgeObjectRelease();
    goto LABEL_17;
  }
  v36 = v77;
  v70 = *(void (**)(char *, char *, uint64_t))(v35 + 32);
  v70(v77, v11, v33);
  v37 = v33;
  if (*(_QWORD *)(v28 + 16) && (v38 = sub_227DD01C0(1702125924, 0xE400000000000000), (v39 & 1) != 0))
  {
    sub_227D635B0(*(_QWORD *)(v28 + 56) + 32 * v38, (uint64_t)v82);
    v40 = (uint64_t)v76;
    v41 = swift_dynamicCast();
    v72((char *)v40, v41 ^ 1u, 1, v33);
    if (v71((char *)v40, 1, v33) != 1)
    {
      v42 = v74;
      v70(v74, (char *)v40, v37);
      if ((sub_227E5F240() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        v43 = a2[10];
        v44 = a2[11];
        sub_227D572A4(v75, v43);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v44 + 8) + 16))(v24, v73, v19, v43);
        swift_bridgeObjectRelease();
        v45 = *(void (**)(char *, uint64_t))(v80 + 8);
        v45(v42, v37);
        return ((uint64_t (*)(char *, uint64_t))v45)(v36, v37);
      }
      else
      {
        swift_bridgeObjectRelease();
        v65 = v42;
        v66 = v37;
        v68 = a2[5];
        v67 = a2[6];
        sub_227D572A4(v78, v68);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v67 + 16))(v28, v73, v19, v68, v67);
        swift_bridgeObjectRelease();
        v69 = *(void (**)(char *, uint64_t))(v80 + 8);
        v69(v65, v66);
        result = ((uint64_t (*)(char *, uint64_t))v69)(v36, v66);
        *v30 = 1;
      }
      return result;
    }
  }
  else
  {
    v40 = (uint64_t)v76;
    v72(v76, 1, 1, v33);
  }
  v58 = v19;
  swift_bridgeObjectRelease();
  sub_227D5809C(v40, &qword_253F391D0);
  sub_227E60230();
  if (qword_253F39FF8[0] != -1)
    swift_once();
  v59 = (void *)qword_253F39FF0;
  sub_227D68330(&qword_253F3B090);
  v60 = swift_allocObject();
  *(_OWORD *)(v60 + 16) = xmmword_227E6F1B0;
  *(_QWORD *)(v60 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v60 + 64) = sub_227D57A70();
  v61 = v73;
  *(_QWORD *)(v60 + 32) = v73;
  *(_QWORD *)(v60 + 40) = v58;
  v62 = v59;
  swift_bridgeObjectRetain();
  sub_227E5F564();

  swift_bridgeObjectRelease();
  v63 = a2[10];
  v64 = a2[11];
  sub_227D572A4(v75, v63);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v64 + 8) + 16))(v24, v61, v58, v63);
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v80 + 8))(v77, v37);
}

uint64_t ReadingGoalsDataStore.deinit()
{
  uint64_t v0;

  sub_227D58120(v0 + 16);
  sub_227D58120(v0 + 56);
  sub_227D5B660(*(_QWORD *)(v0 + 96));
  return v0;
}

uint64_t ReadingGoalsDataStore.__deallocating_deinit()
{
  uint64_t v0;

  sub_227D58120(v0 + 16);
  sub_227D58120(v0 + 56);
  sub_227D5B660(*(_QWORD *)(v0 + 96));
  return swift_deallocClassInstance();
}

uint64_t ReadingGoalsDataStore.value<A>(for:)@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  _QWORD *v3;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v14;
  __int128 v16;
  __int128 v17;

  v7 = v3[5];
  v8 = v3[6];
  sub_227D572A4(v3 + 2, v7);
  if ((a1 & 1) != 0)
    v9 = 0xD000000000000016;
  else
    v9 = 0xD00000000000001ALL;
  if ((a1 & 1) != 0)
    v10 = 0x8000000227E6D940;
  else
    v10 = 0x8000000227E6D960;
  v11 = (*(uint64_t (**)(unint64_t, unint64_t, uint64_t, uint64_t))(v8 + 8))(v9, v10, v7, v8);
  swift_bridgeObjectRelease();
  if (v11)
  {
    if (*(_QWORD *)(v11 + 16) && (v12 = sub_227DD01C0(1818324839, 0xE400000000000000), (v13 & 1) != 0))
    {
      sub_227D635B0(*(_QWORD *)(v11 + 56) + 32 * v12, (uint64_t)&v16);
    }
    else
    {
      v16 = 0u;
      v17 = 0u;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    v16 = 0u;
    v17 = 0u;
  }
  sub_227D68330(qword_253F3B0B0);
  v14 = swift_dynamicCast();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 56))(a3, v14 ^ 1u, 1, a2);
}

uint64_t sub_227E3D5D0(uint64_t a1, char a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t inited;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  _QWORD v26[2];

  v3 = v2;
  v6 = sub_227E5F27C();
  v7 = *(_QWORD *)(v6 - 8);
  v9 = MEMORY[0x24BDAC7A8](v6, v8);
  v11 = (char *)v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9, v12);
  v14 = (char *)v26 - v13;
  sub_227D68330(&qword_255929D00);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_227E6F040;
  *(_QWORD *)(inited + 32) = 1818324839;
  *(_QWORD *)(inited + 40) = 0xE400000000000000;
  v26[1] = a1;
  sub_227E60458();
  *(_QWORD *)(inited + 88) = 1702125924;
  *(_QWORD *)(inited + 96) = 0xE400000000000000;
  sub_227E5F270();
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v11, v14, v6);
  sub_227E3E480();
  sub_227E60458();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v14, v6);
  v16 = sub_227E3C2A4(inited);
  v17 = v3[5];
  v18 = v3[6];
  sub_227D572A4(v3 + 2, v17);
  v19 = sub_227E15E18(v16);
  if ((a2 & 1) != 0)
    v20 = 0xD000000000000016;
  else
    v20 = 0xD00000000000001ALL;
  if ((a2 & 1) != 0)
    v21 = 0x8000000227E6D940;
  else
    v21 = 0x8000000227E6D960;
  (*(void (**)(unint64_t, unint64_t, unint64_t, uint64_t, uint64_t))(v18 + 16))(v19, v20, v21, v17, v18);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v22 = v3[10];
  v23 = v3[11];
  sub_227D572A4(v3 + 7, v22);
  v24 = sub_227E15E18(v16);
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, unint64_t, unint64_t, uint64_t))(*(_QWORD *)(v23 + 8) + 16))(v24, v20, v21, v22);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_227E3D7FC(char a1, double a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t inited;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  _QWORD v26[2];

  v3 = v2;
  v6 = sub_227E5F27C();
  v7 = *(_QWORD *)(v6 - 8);
  v9 = MEMORY[0x24BDAC7A8](v6, v8);
  v11 = (char *)v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9, v12);
  v14 = (char *)v26 - v13;
  sub_227D68330(&qword_255929D00);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_227E6F040;
  *(_QWORD *)(inited + 32) = 1818324839;
  *(_QWORD *)(inited + 40) = 0xE400000000000000;
  *(double *)&v26[1] = a2;
  sub_227E60458();
  *(_QWORD *)(inited + 88) = 1702125924;
  *(_QWORD *)(inited + 96) = 0xE400000000000000;
  sub_227E5F270();
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v11, v14, v6);
  sub_227E3E480();
  sub_227E60458();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v14, v6);
  v16 = sub_227E3C2A4(inited);
  v17 = v3[5];
  v18 = v3[6];
  sub_227D572A4(v3 + 2, v17);
  v19 = sub_227E15E18(v16);
  if ((a1 & 1) != 0)
    v20 = 0xD000000000000016;
  else
    v20 = 0xD00000000000001ALL;
  if ((a1 & 1) != 0)
    v21 = 0x8000000227E6D940;
  else
    v21 = 0x8000000227E6D960;
  (*(void (**)(unint64_t, unint64_t, unint64_t, uint64_t, uint64_t))(v18 + 16))(v19, v20, v21, v17, v18);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v22 = v3[10];
  v23 = v3[11];
  sub_227D572A4(v3 + 7, v22);
  v24 = sub_227E15E18(v16);
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, unint64_t, unint64_t, uint64_t))(*(_QWORD *)(v23 + 8) + 16))(v24, v20, v21, v22);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t ReadingGoalsDataStore.set<A>(value:forGoal:)(uint64_t a1, int a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t inited;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  _BYTE v23[4];
  int v24;

  v24 = a2;
  v3 = sub_227E5F27C();
  v4 = *(_QWORD *)(v3 - 8);
  v6 = MEMORY[0x24BDAC7A8](v3, v5);
  v8 = &v23[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v6, v9);
  v11 = &v23[-v10];
  sub_227D68330(&qword_255929D00);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_227E6F040;
  *(_QWORD *)(inited + 32) = 1818324839;
  *(_QWORD *)(inited + 40) = 0xE400000000000000;
  sub_227E605B4();
  *(_QWORD *)(inited + 88) = 1702125924;
  *(_QWORD *)(inited + 96) = 0xE400000000000000;
  sub_227E5F270();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v4 + 16))(v8, v11, v3);
  sub_227E3E480();
  sub_227E60458();
  (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v11, v3);
  v13 = sub_227E3C2A4(inited);
  v14 = v2[5];
  v15 = v2[6];
  sub_227D572A4(v2 + 2, v14);
  v16 = sub_227E15E18(v13);
  if ((v24 & 1) != 0)
    v17 = 0xD000000000000016;
  else
    v17 = 0xD00000000000001ALL;
  if ((v24 & 1) != 0)
    v18 = 0x8000000227E6D940;
  else
    v18 = 0x8000000227E6D960;
  (*(void (**)(unint64_t, unint64_t, unint64_t, uint64_t, uint64_t))(v15 + 16))(v16, v17, v18, v14, v15);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v19 = v2[10];
  v20 = v2[11];
  sub_227D572A4(v2 + 7, v19);
  v21 = sub_227E15E18(v13);
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, unint64_t, unint64_t, uint64_t))(*(_QWORD *)(v20 + 8) + 16))(v21, v17, v18, v19);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

Swift::Void __swiftcall ReadingGoalsDataStore.clearData()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = v0[5];
  v2 = v0[6];
  sub_227D572A4(v0 + 2, v1);
  (*(void (**)(_QWORD, unint64_t, unint64_t, uint64_t, uint64_t))(v2 + 16))(0, 0xD00000000000001ALL, 0x8000000227E6D960, v1, v2);
  swift_bridgeObjectRelease();
  v3 = v0[10];
  v4 = v0[11];
  sub_227D572A4(v0 + 7, v3);
  (*(void (**)(_QWORD, unint64_t, unint64_t, uint64_t))(*(_QWORD *)(v4 + 8) + 16))(0, 0xD00000000000001ALL, 0x8000000227E6D960, v3);
  swift_bridgeObjectRelease();
  v5 = v0[5];
  v6 = v0[6];
  sub_227D572A4(v0 + 2, v5);
  (*(void (**)(_QWORD, unint64_t, unint64_t, uint64_t, uint64_t))(v6 + 16))(0, 0xD000000000000016, 0x8000000227E6D940, v5, v6);
  swift_bridgeObjectRelease();
  v8 = v0[10];
  v7 = v0[11];
  sub_227D572A4(v0 + 7, v8);
  (*(void (**)(_QWORD, unint64_t, unint64_t, uint64_t))(*(_QWORD *)(v7 + 8) + 16))(0, 0xD000000000000016, 0x8000000227E6D940, v8);
  swift_bridgeObjectRelease();
}

uint64_t static ReadingGoalsDataStore.clearCachedData(in:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = a1[3];
  v3 = a1[4];
  sub_227D572A4(a1, v2);
  (*(void (**)(_QWORD, unint64_t, unint64_t, uint64_t, uint64_t))(v3 + 16))(0, 0xD00000000000001ALL, 0x8000000227E6D960, v2, v3);
  swift_bridgeObjectRelease();
  v4 = a1[3];
  v5 = a1[4];
  sub_227D572A4(a1, v4);
  (*(void (**)(_QWORD, unint64_t, unint64_t, uint64_t, uint64_t))(v5 + 16))(0, 0xD000000000000016, 0x8000000227E6D940, v4, v5);
  return swift_bridgeObjectRelease();
}

uint64_t ReadingGoalsDataStore.state.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t result;
  double v6;
  char v7;

  v2 = sub_227D56D64(0);
  if ((v3 & 1) != 0)
    v4 = 3;
  else
    v4 = v2;
  result = sub_227D56D64(1);
  v6 = *(double *)&result;
  if ((v7 & 1) != 0)
    v6 = 300.0;
  *(_QWORD *)a1 = v4;
  *(double *)(a1 + 8) = v6;
  return result;
}

Swift::Void __swiftcall ReadingGoalsDataStore.changeBooksFinishedGoal(to:)(Swift::Int to)
{
  sub_227E3D5D0(to, 0);
}

Swift::Void __swiftcall ReadingGoalsDataStore.changeDailyGoal(to:)(Swift::Double to)
{
  sub_227E3D7FC(1, to);
}

uint64_t sub_227E3DF58()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  swift_beginAccess();
  v2 = *(_QWORD *)(v1 + 96);
  sub_227E3C58C(v2);
  return v2;
}

uint64_t (*sub_227E3DFA8())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_227E3DFE8(uint64_t a1)
{
  return sub_227E3D5D0(a1, 0);
}

uint64_t sub_227E3E00C(double a1)
{
  return sub_227E3D7FC(1, a1);
}

void sub_227E3E030()
{
  ReadingGoalsDataStore.clearData()();
}

Swift::Void __swiftcall ReadingGoalsDataStore.migrate(bookFinishedGoalDict:streakDayGoalDict:)(Swift::OpaquePointer_optional bookFinishedGoalDict, Swift::OpaquePointer_optional streakDayGoalDict)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  void *rawValue;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  int v11;
  void *v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  void *v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  void (*v27)(uint64_t);
  uint64_t v28;
  int v29;

  v3 = v2;
  v4 = *(_QWORD *)&bookFinishedGoalDict.is_nil;
  rawValue = bookFinishedGoalDict.value._rawValue;
  v6 = v2 + 2;
  v7 = v2[5];
  v8 = v2[6];
  sub_227D572A4(v2 + 2, v7);
  v9 = (*(uint64_t (**)(unint64_t, unint64_t, uint64_t, uint64_t))(v8 + 8))(0xD00000000000001ALL, 0x8000000227E6D960, v7, v8);
  swift_bridgeObjectRelease();
  if (v9)
    v10 = 1;
  else
    v10 = rawValue == 0;
  v11 = !v10;
  v29 = v11;
  if (!v10)
  {
    sub_227E60248();
    if (qword_253F39FF8[0] != -1)
      swift_once();
    v12 = (void *)qword_253F39FF0;
    sub_227D68330(&qword_253F3B090);
    v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = xmmword_227E6F040;
    *(_QWORD *)(v13 + 56) = MEMORY[0x24BEE0D00];
    *(_QWORD *)(v13 + 64) = sub_227D57A70();
    *(_QWORD *)(v13 + 32) = 0xD00000000000001ALL;
    *(_QWORD *)(v13 + 40) = 0x8000000227E6D960;
    *(_QWORD *)(v13 + 96) = sub_227D68330(&qword_255929CF0);
    *(_QWORD *)(v13 + 104) = sub_227E3E434();
    *(_QWORD *)(v13 + 72) = rawValue;
    v14 = v12;
    swift_bridgeObjectRetain();
    sub_227E5F564();

    swift_bridgeObjectRelease();
    v15 = v3[5];
    v16 = v3[6];
    sub_227D572A4(v6, v15);
    (*(void (**)(void *, unint64_t, unint64_t, uint64_t, uint64_t))(v16 + 16))(rawValue, 0xD00000000000001ALL, 0x8000000227E6D960, v15, v16);
  }
  v17 = v3[5];
  v18 = v3[6];
  sub_227D572A4(v6, v17);
  v19 = (*(uint64_t (**)(unint64_t, unint64_t, uint64_t, uint64_t))(v18 + 8))(0xD000000000000016, 0x8000000227E6D940, v17, v18);
  swift_bridgeObjectRelease();
  if (v19)
    v20 = 1;
  else
    v20 = v4 == 0;
  if (v20)
  {
    if (!v29)
      return;
  }
  else
  {
    sub_227E60248();
    if (qword_253F39FF8[0] != -1)
      swift_once();
    v21 = (void *)qword_253F39FF0;
    sub_227D68330(&qword_253F3B090);
    v22 = swift_allocObject();
    *(_OWORD *)(v22 + 16) = xmmword_227E6F040;
    *(_QWORD *)(v22 + 56) = MEMORY[0x24BEE0D00];
    *(_QWORD *)(v22 + 64) = sub_227D57A70();
    *(_QWORD *)(v22 + 32) = 0xD000000000000016;
    *(_QWORD *)(v22 + 40) = 0x8000000227E6D940;
    *(_QWORD *)(v22 + 96) = sub_227D68330(&qword_255929CF0);
    *(_QWORD *)(v22 + 104) = sub_227E3E434();
    *(_QWORD *)(v22 + 72) = v4;
    v23 = v21;
    swift_bridgeObjectRetain();
    sub_227E5F564();

    swift_bridgeObjectRelease();
    v24 = v3[5];
    v25 = v3[6];
    sub_227D572A4(v6, v24);
    (*(void (**)(uint64_t, unint64_t, unint64_t, uint64_t, uint64_t))(v25 + 16))(v4, 0xD000000000000016, 0x8000000227E6D940, v24, v25);
  }
  sub_227E60248();
  if (qword_253F39FF8[0] != -1)
    swift_once();
  v26 = (id)qword_253F39FF0;
  sub_227E5F564();

  swift_beginAccess();
  v27 = (void (*)(uint64_t))v3[12];
  if (v27)
  {
    v28 = swift_retain();
    v27(v28);
    sub_227D5B660((uint64_t)v27);
  }
}

unint64_t sub_227E3E434()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255929CF8;
  if (!qword_255929CF8)
  {
    v1 = sub_227D6717C(&qword_255929CF0);
    result = MEMORY[0x22E2AA7D4](MEMORY[0x24BDCF848], v1);
    atomic_store(result, (unint64_t *)&qword_255929CF8);
  }
  return result;
}

unint64_t sub_227E3E480()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2559282A0;
  if (!qword_2559282A0)
  {
    v1 = sub_227E5F27C();
    result = MEMORY[0x22E2AA7D4](MEMORY[0x24BDCE930], v1);
    atomic_store(result, (unint64_t *)&qword_2559282A0);
  }
  return result;
}

uint64_t dispatch thunk of ReadingGoalDataStoreProtocol.dictionary(forKey:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of ReadingGoalDataStoreProtocol.set(_:forKey:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 16))();
}

uint64_t dispatch thunk of static ReadingGoalCloudDataStoreProtocol.didChangeExternallyNotification.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of ReadingGoalCloudDataStoreProtocol.synchronize()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t method lookup function for ReadingGoalsDataStore()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ReadingGoalsDataStore.__allocating_init(localStore:syncStore:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

ValueMetadata *type metadata accessor for ReadingGoalsDataStore.Constants()
{
  return &type metadata for ReadingGoalsDataStore.Constants;
}

ValueMetadata *type metadata accessor for ReadingGoalsDataStore.Constants.GoalDictKey()
{
  return &type metadata for ReadingGoalsDataStore.Constants.GoalDictKey;
}

uint64_t sub_227E3E524(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v30;

  v4 = a4;
  if (!a3)
  {
    v8 = MEMORY[0x24BEE4B08];
LABEL_36:
    swift_release();
    return v8;
  }
  v5 = a3;
  if (*(_QWORD *)(a4 + 16) == a3)
    return v4;
  sub_227D68330(&qword_255929848);
  result = sub_227E60488();
  v8 = result;
  v30 = a2;
  if (a2 < 1)
    v9 = 0;
  else
    v9 = *a1;
  v10 = 0;
  v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v13 = v12 | (v10 << 6);
      goto LABEL_24;
    }
    v14 = v10 + 1;
    if (__OFADD__(v10, 1))
      goto LABEL_39;
    if (v14 >= v30)
      goto LABEL_36;
    v15 = a1[v14];
    ++v10;
    if (!v15)
    {
      v10 = v14 + 1;
      if (v14 + 1 >= v30)
        goto LABEL_36;
      v15 = a1[v10];
      if (!v15)
      {
        v10 = v14 + 2;
        if (v14 + 2 >= v30)
          goto LABEL_36;
        v15 = a1[v10];
        if (!v15)
          break;
      }
    }
LABEL_23:
    v9 = (v15 - 1) & v15;
    v13 = __clz(__rbit64(v15)) + (v10 << 6);
LABEL_24:
    v17 = (uint64_t *)(*(_QWORD *)(v4 + 48) + 16 * v13);
    v18 = *v17;
    v19 = v17[1];
    sub_227E6071C();
    sub_227E60728();
    sub_227E60728();
    result = sub_227E60734();
    v20 = -1 << *(_BYTE *)(v8 + 32);
    v21 = result & ~v20;
    v22 = v21 >> 6;
    if (((-1 << v21) & ~*(_QWORD *)(v11 + 8 * (v21 >> 6))) != 0)
    {
      v23 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v11 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v24 = 0;
      v25 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v26 = v22 == v25;
        if (v22 == v25)
          v22 = 0;
        v24 |= v26;
        v27 = *(_QWORD *)(v11 + 8 * v22);
      }
      while (v27 == -1);
      v23 = __clz(__rbit64(~v27)) + (v22 << 6);
    }
    *(_QWORD *)(v11 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    v28 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 16 * v23);
    *v28 = v18;
    v28[1] = v19;
    ++*(_QWORD *)(v8 + 16);
    if (__OFSUB__(v5--, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (!v5)
      goto LABEL_36;
  }
  v16 = v14 + 3;
  if (v16 >= v30)
    goto LABEL_36;
  v15 = a1[v16];
  if (v15)
  {
    v10 = v16;
    goto LABEL_23;
  }
  while (1)
  {
    v10 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v10 >= v30)
      goto LABEL_36;
    v15 = a1[v10];
    ++v16;
    if (v15)
      goto LABEL_23;
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_227E3E7B8(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  unint64_t *v28;

  v4 = a4;
  if (!a3)
  {
    v9 = MEMORY[0x24BEE4B08];
LABEL_36:
    swift_release();
    return v9;
  }
  v5 = a3;
  if (*(_QWORD *)(a4 + 16) == a3)
    return v4;
  sub_227D68330(&qword_2559297A8);
  result = sub_227E60488();
  v9 = result;
  v28 = a1;
  if (a2 < 1)
    v10 = 0;
  else
    v10 = *a1;
  v11 = 0;
  v12 = result + 56;
  while (1)
  {
    if (v10)
    {
      v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v14 = v13 | (v11 << 6);
      goto LABEL_24;
    }
    v15 = v11 + 1;
    if (__OFADD__(v11, 1))
      goto LABEL_39;
    if (v15 >= a2)
      goto LABEL_36;
    v16 = v28[v15];
    ++v11;
    if (!v16)
    {
      v11 = v15 + 1;
      if (v15 + 1 >= a2)
        goto LABEL_36;
      v16 = v28[v11];
      if (!v16)
      {
        v11 = v15 + 2;
        if (v15 + 2 >= a2)
          goto LABEL_36;
        v16 = v28[v11];
        if (!v16)
          break;
      }
    }
LABEL_23:
    v10 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v11 << 6);
LABEL_24:
    v18 = *(id *)(*(_QWORD *)(v4 + 48) + 8 * v14);
    result = sub_227E60344();
    v19 = -1 << *(_BYTE *)(v9 + 32);
    v20 = result & ~v19;
    v21 = v20 >> 6;
    if (((-1 << v20) & ~*(_QWORD *)(v12 + 8 * (v20 >> 6))) != 0)
    {
      v22 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v12 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v23 = 0;
      v24 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v25 = v21 == v24;
        if (v21 == v24)
          v21 = 0;
        v23 |= v25;
        v26 = *(_QWORD *)(v12 + 8 * v21);
      }
      while (v26 == -1);
      v22 = __clz(__rbit64(~v26)) + (v21 << 6);
    }
    *(_QWORD *)(v12 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    *(_QWORD *)(*(_QWORD *)(v9 + 48) + 8 * v22) = v18;
    ++*(_QWORD *)(v9 + 16);
    if (__OFSUB__(v5--, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (!v5)
      goto LABEL_36;
  }
  v17 = v15 + 3;
  if (v17 >= a2)
    goto LABEL_36;
  v16 = v28[v17];
  if (v16)
  {
    v11 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    v11 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v11 >= a2)
      goto LABEL_36;
    v16 = v28[v11];
    ++v17;
    if (v16)
      goto LABEL_23;
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_227E3EA14(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v30;

  v4 = a4;
  if (!a3)
  {
    v8 = MEMORY[0x24BEE4B08];
LABEL_36:
    swift_release();
    return v8;
  }
  v5 = a3;
  if (*(_QWORD *)(a4 + 16) == a3)
    return v4;
  sub_227D68330((uint64_t *)&unk_255929790);
  result = sub_227E60488();
  v8 = result;
  v30 = a2;
  if (a2 < 1)
    v9 = 0;
  else
    v9 = *a1;
  v10 = 0;
  v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v13 = v12 | (v10 << 6);
      goto LABEL_24;
    }
    v14 = v10 + 1;
    if (__OFADD__(v10, 1))
      goto LABEL_39;
    if (v14 >= v30)
      goto LABEL_36;
    v15 = a1[v14];
    ++v10;
    if (!v15)
    {
      v10 = v14 + 1;
      if (v14 + 1 >= v30)
        goto LABEL_36;
      v15 = a1[v10];
      if (!v15)
      {
        v10 = v14 + 2;
        if (v14 + 2 >= v30)
          goto LABEL_36;
        v15 = a1[v10];
        if (!v15)
          break;
      }
    }
LABEL_23:
    v9 = (v15 - 1) & v15;
    v13 = __clz(__rbit64(v15)) + (v10 << 6);
LABEL_24:
    v17 = (uint64_t *)(*(_QWORD *)(v4 + 48) + 16 * v13);
    v18 = *v17;
    v19 = v17[1];
    sub_227E6071C();
    swift_bridgeObjectRetain();
    sub_227E60008();
    result = sub_227E60734();
    v20 = -1 << *(_BYTE *)(v8 + 32);
    v21 = result & ~v20;
    v22 = v21 >> 6;
    if (((-1 << v21) & ~*(_QWORD *)(v11 + 8 * (v21 >> 6))) != 0)
    {
      v23 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v11 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v24 = 0;
      v25 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v26 = v22 == v25;
        if (v22 == v25)
          v22 = 0;
        v24 |= v26;
        v27 = *(_QWORD *)(v11 + 8 * v22);
      }
      while (v27 == -1);
      v23 = __clz(__rbit64(~v27)) + (v22 << 6);
    }
    *(_QWORD *)(v11 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    v28 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 16 * v23);
    *v28 = v18;
    v28[1] = v19;
    ++*(_QWORD *)(v8 + 16);
    if (__OFSUB__(v5--, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (!v5)
      goto LABEL_36;
  }
  v16 = v14 + 3;
  if (v16 >= v30)
    goto LABEL_36;
  v15 = a1[v16];
  if (v15)
  {
    v10 = v16;
    goto LABEL_23;
  }
  while (1)
  {
    v10 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v10 >= v30)
      goto LABEL_36;
    v15 = a1[v10];
    ++v16;
    if (v15)
      goto LABEL_23;
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_227E3ECA8(uint64_t isStackAllocationSafe, uint64_t a2)
{
  uint64_t v3;
  char v4;
  unint64_t v5;
  size_t v6;
  uint64_t v7;
  void *v8;
  _QWORD v10[2];

  v3 = isStackAllocationSafe;
  v10[1] = *MEMORY[0x24BDAC8D0];
  v4 = *(_BYTE *)(a2 + 32);
  v5 = (unint64_t)((1 << v4) + 63) >> 6;
  v6 = 8 * v5;
  if ((v4 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x24BDAC7A8](isStackAllocationSafe, a2);
    bzero((char *)v10 - ((v6 + 15) & 0x3FFFFFFFFFFFFFF0), v6);
    v7 = sub_227E3EE28((uint64_t)v10 - ((v6 + 15) & 0x3FFFFFFFFFFFFFF0), v5, a2, v3);
    swift_release();
  }
  else
  {
    v8 = (void *)swift_slowAlloc();
    bzero(v8, v6);
    v7 = sub_227E3EE28((uint64_t)v8, v5, a2, v3);
    swift_release();
    MEMORY[0x22E2AA8AC](v8, -1, -1);
  }
  return v7;
}

uint64_t sub_227E3EE28(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  BOOL v27;
  uint64_t v28;
  unint64_t i;
  unint64_t v30;
  _QWORD *v31;
  BOOL v32;
  BOOL v33;
  int64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  int64_t v41;
  unint64_t v42;
  int64_t v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  BOOL v52;
  uint64_t v53;
  _QWORD *v54;
  BOOL v55;
  unint64_t *v57;
  uint64_t v58;
  int64_t v59;
  uint64_t v60;
  uint64_t v61;
  int64_t v62;
  int64_t v63;

  v4 = a4;
  v5 = a3;
  v57 = (unint64_t *)result;
  if (*(_QWORD *)(a4 + 16) < *(_QWORD *)(a3 + 16))
  {
    v6 = 0;
    v58 = a4 + 56;
    v7 = 1 << *(_BYTE *)(a4 + 32);
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v9 = v8 & *(_QWORD *)(a4 + 56);
    v59 = (unint64_t)(v7 + 63) >> 6;
    v61 = 0;
    v10 = a3 + 56;
    while (1)
    {
      while (1)
      {
        if (v9)
        {
          v11 = __clz(__rbit64(v9));
          v9 &= v9 - 1;
          v62 = v6;
          v12 = v11 | (v6 << 6);
        }
        else
        {
          v13 = v6 + 1;
          if (__OFADD__(v6, 1))
          {
            __break(1u);
            goto LABEL_81;
          }
          if (v13 >= v59)
            goto LABEL_79;
          v14 = *(_QWORD *)(v58 + 8 * v13);
          v15 = v6 + 1;
          if (!v14)
          {
            v15 = v6 + 2;
            if (v6 + 2 >= v59)
              goto LABEL_79;
            v14 = *(_QWORD *)(v58 + 8 * v15);
            if (!v14)
            {
              v15 = v6 + 3;
              if (v6 + 3 >= v59)
                goto LABEL_79;
              v14 = *(_QWORD *)(v58 + 8 * v15);
              if (!v14)
              {
                v16 = v6 + 4;
                if (v6 + 4 >= v59)
                  goto LABEL_79;
                v14 = *(_QWORD *)(v58 + 8 * v16);
                if (!v14)
                {
                  while (1)
                  {
                    v15 = v16 + 1;
                    if (__OFADD__(v16, 1))
                      goto LABEL_83;
                    if (v15 >= v59)
                      goto LABEL_79;
                    v14 = *(_QWORD *)(v58 + 8 * v15);
                    ++v16;
                    if (v14)
                      goto LABEL_22;
                  }
                }
                v15 = v6 + 4;
              }
            }
          }
LABEL_22:
          v9 = (v14 - 1) & v14;
          v62 = v15;
          v12 = __clz(__rbit64(v14)) + (v15 << 6);
        }
        v17 = (uint64_t *)(*(_QWORD *)(v4 + 48) + 16 * v12);
        v19 = *v17;
        v18 = v17[1];
        sub_227E6071C();
        swift_bridgeObjectRetain();
        sub_227E60008();
        v20 = sub_227E60734();
        v21 = -1 << *(_BYTE *)(v5 + 32);
        v22 = v20 & ~v21;
        v23 = v22 >> 6;
        v24 = 1 << v22;
        if (((1 << v22) & *(_QWORD *)(v10 + 8 * (v22 >> 6))) != 0)
          break;
LABEL_6:
        result = swift_bridgeObjectRelease();
        v6 = v62;
        v5 = a3;
        v4 = a4;
      }
      v25 = *(_QWORD *)(a3 + 48);
      v26 = (_QWORD *)(v25 + 16 * v22);
      v27 = *v26 == v19 && v26[1] == v18;
      if (!v27 && (sub_227E60698() & 1) == 0)
      {
        v28 = ~v21;
        for (i = v22 + 1; ; i = v30 + 1)
        {
          v30 = i & v28;
          if (((*(_QWORD *)(v10 + (((i & v28) >> 3) & 0xFFFFFFFFFFFFF8)) >> (i & v28)) & 1) == 0)
            break;
          v31 = (_QWORD *)(v25 + 16 * v30);
          v32 = *v31 == v19 && v31[1] == v18;
          if (v32 || (sub_227E60698() & 1) != 0)
          {
            result = swift_bridgeObjectRelease();
            v23 = v30 >> 6;
            v24 = 1 << v30;
            goto LABEL_38;
          }
        }
        goto LABEL_6;
      }
      result = swift_bridgeObjectRelease();
LABEL_38:
      v6 = v62;
      v5 = a3;
      v57[v23] |= v24;
      v33 = __OFADD__(v61++, 1);
      v4 = a4;
      if (v33)
        goto LABEL_82;
    }
  }
  v34 = 0;
  v60 = a3 + 56;
  v61 = 0;
  v35 = 1 << *(_BYTE *)(a3 + 32);
  if (v35 < 64)
    v36 = ~(-1 << v35);
  else
    v36 = -1;
  v37 = v36 & *(_QWORD *)(a3 + 56);
  v63 = (unint64_t)(v35 + 63) >> 6;
  v38 = a4 + 56;
  while (1)
  {
    if (v37)
    {
      v39 = __clz(__rbit64(v37));
      v37 &= v37 - 1;
      v40 = v39 | (v34 << 6);
      goto LABEL_63;
    }
    v41 = v34 + 1;
    if (__OFADD__(v34, 1))
    {
LABEL_81:
      __break(1u);
LABEL_82:
      __break(1u);
LABEL_83:
      __break(1u);
      goto LABEL_84;
    }
    if (v41 >= v63)
      goto LABEL_79;
    v42 = *(_QWORD *)(v60 + 8 * v41);
    ++v34;
    if (!v42)
    {
      v34 = v41 + 1;
      if (v41 + 1 >= v63)
        goto LABEL_79;
      v42 = *(_QWORD *)(v60 + 8 * v34);
      if (!v42)
      {
        v34 = v41 + 2;
        if (v41 + 2 >= v63)
          goto LABEL_79;
        v42 = *(_QWORD *)(v60 + 8 * v34);
        if (!v42)
          break;
      }
    }
LABEL_62:
    v37 = (v42 - 1) & v42;
    v40 = __clz(__rbit64(v42)) + (v34 << 6);
LABEL_63:
    v44 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v40);
    v46 = *v44;
    v45 = v44[1];
    sub_227E6071C();
    swift_bridgeObjectRetain();
    sub_227E60008();
    v47 = sub_227E60734();
    v48 = -1 << *(_BYTE *)(v4 + 32);
    v49 = v47 & ~v48;
    if (((*(_QWORD *)(v38 + ((v49 >> 3) & 0xFFFFFFFFFFFFF8)) >> v49) & 1) == 0)
      goto LABEL_46;
    v50 = *(_QWORD *)(a4 + 48);
    v51 = (_QWORD *)(v50 + 16 * v49);
    v52 = *v51 == v46 && v51[1] == v45;
    if (v52 || (sub_227E60698() & 1) != 0)
    {
LABEL_76:
      result = swift_bridgeObjectRelease();
      *(unint64_t *)((char *)v57 + ((v40 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v40;
      v33 = __OFADD__(v61++, 1);
      v5 = a3;
      v4 = a4;
      if (v33)
      {
        __break(1u);
LABEL_79:
        swift_retain();
        return sub_227E3EA14(v57, a2, v61, v5);
      }
    }
    else
    {
      v53 = ~v48;
      while (1)
      {
        v49 = (v49 + 1) & v53;
        if (((*(_QWORD *)(v38 + ((v49 >> 3) & 0xFFFFFFFFFFFFF8)) >> v49) & 1) == 0)
          break;
        v54 = (_QWORD *)(v50 + 16 * v49);
        v55 = *v54 == v46 && v54[1] == v45;
        if (v55 || (sub_227E60698() & 1) != 0)
          goto LABEL_76;
      }
LABEL_46:
      result = swift_bridgeObjectRelease();
      v5 = a3;
      v4 = a4;
    }
  }
  v43 = v41 + 3;
  if (v43 >= v63)
    goto LABEL_79;
  v42 = *(_QWORD *)(v60 + 8 * v43);
  if (v42)
  {
    v34 = v43;
    goto LABEL_62;
  }
  while (1)
  {
    v34 = v43 + 1;
    if (__OFADD__(v43, 1))
      break;
    if (v34 >= v63)
      goto LABEL_79;
    v42 = *(_QWORD *)(v60 + 8 * v34);
    ++v43;
    if (v42)
      goto LABEL_62;
  }
LABEL_84:
  __break(1u);
  return result;
}

uint64_t sub_227E3F364(uint64_t a1, _QWORD *a2, _BYTE *a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t result;
  int64_t v13;
  unint64_t v14;
  unint64_t i;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  int64_t v21;
  uint64_t v22[2];

  v7 = a1 + 56;
  v8 = 1 << *(_BYTE *)(a1 + 32);
  v9 = -1;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  v10 = v9 & *(_QWORD *)(a1 + 56);
  v11 = (unint64_t)(v8 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v13 = 0;
  if (!v10)
    goto LABEL_5;
LABEL_4:
  v14 = __clz(__rbit64(v10));
  v10 &= v10 - 1;
  for (i = v14 | (v13 << 6); ; i = __clz(__rbit64(v17)) + (v13 << 6))
  {
    v19 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * i);
    v20 = v19[1];
    v22[0] = *v19;
    v22[1] = v20;
    swift_bridgeObjectRetain();
    sub_227E3CCD0(v22, a2, a3);
    if (v3)
    {
      swift_release();
      return swift_bridgeObjectRelease();
    }
    result = swift_bridgeObjectRelease();
    if (v10)
      goto LABEL_4;
LABEL_5:
    if (__OFADD__(v13++, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v13 >= v11)
      return swift_release();
    v17 = *(_QWORD *)(v7 + 8 * v13);
    if (!v17)
    {
      v18 = v13 + 1;
      if (v13 + 1 >= v11)
        return swift_release();
      v17 = *(_QWORD *)(v7 + 8 * v18);
      if (v17)
        goto LABEL_14;
      v18 = v13 + 2;
      if (v13 + 2 >= v11)
        return swift_release();
      v17 = *(_QWORD *)(v7 + 8 * v18);
      if (v17)
        goto LABEL_14;
      v18 = v13 + 3;
      if (v13 + 3 >= v11)
        return swift_release();
      v17 = *(_QWORD *)(v7 + 8 * v18);
      if (v17)
      {
LABEL_14:
        v13 = v18;
        goto LABEL_15;
      }
      v21 = v13 + 4;
      if (v13 + 4 >= v11)
        return swift_release();
      v17 = *(_QWORD *)(v7 + 8 * v21);
      v13 += 4;
      if (!v17)
        break;
    }
LABEL_15:
    v10 = (v17 - 1) & v17;
  }
  while (1)
  {
    v13 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v13 >= v11)
      return swift_release();
    v17 = *(_QWORD *)(v7 + 8 * v13);
    ++v21;
    if (v17)
      goto LABEL_15;
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_227E3F518(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *(_QWORD *)(a1 + 16);
  result = sub_227E6014C();
  v8 = result;
  if (v2)
  {
    v4 = (uint64_t *)(a1 + 40);
    do
    {
      v5 = *(v4 - 1);
      v6 = *v4;
      swift_bridgeObjectRetain();
      sub_227E22A9C(&v7, v5, v6);
      swift_bridgeObjectRelease();
      v4 += 2;
      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

uint64_t sub_227E3F5AC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_227E3F5D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t (*v30)(char *, uint64_t, uint64_t);
  int v31;
  char v32;
  uint64_t *v33;
  uint64_t v34;
  char v35;
  char *v37;
  uint64_t v38;

  v38 = type metadata accessor for ReadingHistoryModel(0);
  v5 = MEMORY[0x24BDAC7A8](v38, v4);
  v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v5, v8);
  v11 = (char *)&v37 - v10;
  v13 = MEMORY[0x24BDAC7A8](v9, v12);
  v15 = (char *)&v37 - v14;
  MEMORY[0x24BDAC7A8](v13, v16);
  v18 = (char *)&v37 - v17;
  v19 = sub_227D68330(&qword_253F39840);
  MEMORY[0x24BDAC7A8](v19, v20);
  v22 = (char *)&v37 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_227D68330(&qword_255929D38);
  v25 = MEMORY[0x24BDAC7A8](v23, v24);
  v27 = (char *)&v37 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = (uint64_t)&v27[*(int *)(v25 + 48)];
  sub_227D5DF48(a1, (uint64_t)v27, &qword_253F39840);
  sub_227D5DF48(a2, v28, &qword_253F39840);
  v29 = sub_227D68330(&qword_253F3A1C0);
  v30 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 48);
  v31 = v30(v27, 2, v29);
  if (v31)
  {
    if (v31 == 1)
    {
      if (v30((char *)v28, 2, v29) != 1)
        goto LABEL_9;
      goto LABEL_8;
    }
    if (v30((char *)v28, 2, v29) == 2)
    {
LABEL_8:
      v32 = 1;
LABEL_14:
      v33 = &qword_253F39840;
      goto LABEL_15;
    }
  }
  else
  {
    v37 = v15;
    sub_227D5DF48((uint64_t)v27, (uint64_t)v22, &qword_253F39840);
    if (!v30((char *)v28, 2, v29))
    {
      sub_227D5E458((uint64_t)v22, (uint64_t)v18, type metadata accessor for ReadingHistoryModel);
      v34 = (uint64_t)v37;
      sub_227D5E458(v28, (uint64_t)v37, type metadata accessor for ReadingHistoryModel);
      sub_227D62510(&qword_253F3A230, (uint64_t)&protocol conformance descriptor for ReadingHistoryModel);
      v35 = sub_227E5FD20();
      sub_227D5DFFC(v34, (uint64_t)v11, type metadata accessor for ReadingHistoryModel);
      sub_227D5DFFC((uint64_t)v18, (uint64_t)v7, type metadata accessor for ReadingHistoryModel);
      if ((v35 & 1) != 0)
        v32 = 0;
      else
        v32 = sub_227E5FD20() ^ 1;
      sub_227D64BC4((uint64_t)v7, type metadata accessor for ReadingHistoryModel);
      sub_227D64BC4((uint64_t)v11, type metadata accessor for ReadingHistoryModel);
      sub_227D64BC4((uint64_t)v37, type metadata accessor for ReadingHistoryModel);
      sub_227D64BC4((uint64_t)v18, type metadata accessor for ReadingHistoryModel);
      goto LABEL_14;
    }
    sub_227D64BC4((uint64_t)v22, type metadata accessor for ReadingHistoryModel);
  }
LABEL_9:
  v32 = 0;
  v33 = &qword_255929D38;
LABEL_15:
  sub_227D5809C((uint64_t)v27, v33);
  return v32 & 1;
}

uint64_t sub_227E3F8FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  _QWORD v14[2];

  v1 = v0;
  v2 = type metadata accessor for ReadingHistoryModel(0);
  MEMORY[0x24BDAC7A8](v2, v3);
  v5 = (char *)v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_227D68330(&qword_253F39840);
  MEMORY[0x24BDAC7A8](v6, v7);
  v9 = (char *)v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_227D5DF48(v1, (uint64_t)v9, &qword_253F39840);
  v10 = sub_227D68330(&qword_253F3A1C0);
  v11 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v9, 2, v10);
  if (v11)
  {
    if (v11 == 1)
      return 0x6C61636F6CLL;
    else
      return 0x6465726F7473;
  }
  else
  {
    sub_227D5E458((uint64_t)v9, (uint64_t)v5, type metadata accessor for ReadingHistoryModel);
    v14[0] = 0x2865746F6D6572;
    v14[1] = 0xE700000000000000;
    ReadingHistoryModel.description.getter();
    sub_227E6002C();
    swift_bridgeObjectRelease();
    sub_227E6002C();
    v12 = v14[0];
    sub_227D64BC4((uint64_t)v5, type metadata accessor for ReadingHistoryModel);
  }
  return v12;
}

uint64_t ReadingHistory.ModelSnapshot.ModelValues.init(readingDay:longestStreak:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;

  v5 = *a1;
  v6 = a1[1];
  v7 = *((_BYTE *)a1 + 16);
  v8 = a3 + *(int *)(type metadata accessor for ReadingHistory.ModelSnapshot.ModelValues(0) + 20);
  v9 = type metadata accessor for ReadingHistory.Streak(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 1, 1, v9);
  *(_QWORD *)a3 = v5;
  *(_QWORD *)(a3 + 8) = v6;
  *(_BYTE *)(a3 + 16) = v7;
  return sub_227D5E414(a2, v8, (uint64_t *)&unk_253F39C20);
}

uint64_t ReadingHistory.ModelSnapshot.init(loaded:lastSource:modelValues:remoteModelValues:)@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _BYTE *a5@<X8>)
{
  char v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;

  v9 = *a1;
  v10 = (int *)type metadata accessor for ReadingHistory.ModelSnapshot(0);
  v11 = (uint64_t)&a5[v10[7]];
  v12 = type metadata accessor for ReadingHistory.ModelSnapshot.ModelValues(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 1, 1, v12);
  *a5 = v9;
  sub_227E3FBB8(a2, (uint64_t)&a5[v10[5]]);
  sub_227D5E458(a3, (uint64_t)&a5[v10[6]], type metadata accessor for ReadingHistory.ModelSnapshot.ModelValues);
  return sub_227D5E414(a4, v11, &qword_253F39A48);
}

uint64_t sub_227E3FBB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_227D68330(&qword_253F39840);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

__n128 ReadingHistory.ModelSnapshot.ModelValues.readingDay.setter(__n128 *a1)
{
  __n128 *v1;
  unsigned __int8 v2;
  __n128 result;

  v2 = a1[1].n128_u8[0];
  result = *a1;
  *v1 = *a1;
  v1[1].n128_u8[0] = v2;
  return result;
}

uint64_t (*ReadingHistory.ModelSnapshot.ModelValues.readingDay.modify())()
{
  return nullsub_1;
}

uint64_t ReadingHistory.ModelSnapshot.ModelValues.longestStreak.setter(uint64_t a1)
{
  return sub_227E3FE64(a1, type metadata accessor for ReadingHistory.ModelSnapshot.ModelValues, (uint64_t *)&unk_253F39C20);
}

uint64_t (*ReadingHistory.ModelSnapshot.ModelValues.longestStreak.modify())()
{
  type metadata accessor for ReadingHistory.ModelSnapshot.ModelValues(0);
  return nullsub_1;
}

uint64_t ReadingHistory.ModelSnapshot.ModelValues.description.getter()
{
  __int128 *v0;
  __int128 *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  __int128 v22;
  char v23;

  v1 = v0;
  v2 = sub_227D68330((uint64_t *)&unk_253F39C20);
  MEMORY[0x24BDAC7A8](v2, v3);
  v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_227D68330(&qword_253F3B090);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_227E6F040;
  v7 = *((unsigned __int8 *)v0 + 16);
  if (v7 == 2)
  {
    v8 = 0;
    v9 = 0;
  }
  else
  {
    v22 = *v0;
    v23 = v7 & 1;
    v8 = ReadingHistory.Day.description.getter();
    v9 = v10;
  }
  v11 = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v6 + 56) = MEMORY[0x24BEE0D00];
  v12 = sub_227D57A70();
  *(_QWORD *)(v6 + 64) = v12;
  if (v9)
    v13 = v8;
  else
    v13 = 7104878;
  v14 = 0xE300000000000000;
  if (v9)
    v14 = v9;
  *(_QWORD *)(v6 + 32) = v13;
  *(_QWORD *)(v6 + 40) = v14;
  v15 = type metadata accessor for ReadingHistory.ModelSnapshot.ModelValues(0);
  sub_227D5DF48((uint64_t)v1 + *(int *)(v15 + 20), (uint64_t)v5, (uint64_t *)&unk_253F39C20);
  v16 = type metadata accessor for ReadingHistory.Streak(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 48))(v5, 1, v16) == 1)
  {
    sub_227D5809C((uint64_t)v5, (uint64_t *)&unk_253F39C20);
    v17 = (uint64_t *)(v6 + 72);
    *(_QWORD *)(v6 + 96) = v11;
    *(_QWORD *)(v6 + 104) = v12;
LABEL_13:
    *v17 = 7104878;
    v20 = 0xE300000000000000;
    goto LABEL_14;
  }
  v18 = ReadingHistory.Streak.description.getter();
  v20 = v19;
  sub_227D64BC4((uint64_t)v5, type metadata accessor for ReadingHistory.Streak);
  v17 = (uint64_t *)(v6 + 72);
  *(_QWORD *)(v6 + 96) = v11;
  *(_QWORD *)(v6 + 104) = v12;
  if (!v20)
    goto LABEL_13;
  *v17 = v18;
LABEL_14:
  *(_QWORD *)(v6 + 80) = v20;
  return sub_227E5FF9C();
}

_BYTE *ReadingHistory.ModelSnapshot.loaded.setter(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

uint64_t (*ReadingHistory.ModelSnapshot.loaded.modify())()
{
  return nullsub_1;
}

uint64_t ReadingHistory.ModelSnapshot.lastSource.setter(uint64_t a1)
{
  return sub_227E3FE64(a1, type metadata accessor for ReadingHistory.ModelSnapshot, &qword_253F39840);
}

uint64_t sub_227E3FE64(uint64_t a1, uint64_t (*a2)(_QWORD), uint64_t *a3)
{
  uint64_t v3;
  uint64_t v6;

  v6 = a2(0);
  return sub_227D5E414(a1, v3 + *(int *)(v6 + 20), a3);
}

uint64_t (*ReadingHistory.ModelSnapshot.lastSource.modify())()
{
  type metadata accessor for ReadingHistory.ModelSnapshot(0);
  return nullsub_1;
}

uint64_t ReadingHistory.ModelSnapshot.modelValues.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for ReadingHistory.ModelSnapshot(0) + 24);
  return sub_227E4052C(a1, v3);
}

uint64_t (*ReadingHistory.ModelSnapshot.modelValues.modify())()
{
  type metadata accessor for ReadingHistory.ModelSnapshot(0);
  return nullsub_1;
}

uint64_t ReadingHistory.ModelSnapshot.remoteModelValues.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for ReadingHistory.ModelSnapshot(0);
  return sub_227D5DF48(v1 + *(int *)(v3 + 28), a1, &qword_253F39A48);
}

uint64_t ReadingHistory.ModelSnapshot.remoteModelValues.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for ReadingHistory.ModelSnapshot(0);
  return sub_227D5E414(a1, v1 + *(int *)(v3 + 28), &qword_253F39A48);
}

uint64_t (*ReadingHistory.ModelSnapshot.remoteModelValues.modify())()
{
  type metadata accessor for ReadingHistory.ModelSnapshot(0);
  return nullsub_1;
}

uint64_t ReadingHistory.ModelSnapshot.description.getter()
{
  _BYTE *v0;
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _QWORD *v7;
  BOOL v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v24;

  v1 = v0;
  v2 = sub_227D68330(&qword_253F39A48);
  MEMORY[0x24BDAC7A8](v2, v3);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_227D68330(&qword_253F3B090);
  v6 = swift_allocObject();
  v7 = (_QWORD *)v6;
  *(_OWORD *)(v6 + 16) = xmmword_227E700C0;
  v8 = *v0 == 0;
  if (*v0)
    v9 = 0x7964616572;
  else
    v9 = 0x676E6964616F6CLL;
  if (v8)
    v10 = 0xE700000000000000;
  else
    v10 = 0xE500000000000000;
  v11 = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v6 + 56) = MEMORY[0x24BEE0D00];
  v12 = sub_227D57A70();
  v7[8] = v12;
  v7[4] = v9;
  v7[5] = v10;
  v13 = type metadata accessor for ReadingHistory.ModelSnapshot(0);
  v14 = sub_227E3F8FC();
  v7[12] = v11;
  v7[13] = v12;
  v7[9] = v14;
  v7[10] = v15;
  v16 = ReadingHistory.ModelSnapshot.ModelValues.description.getter();
  v7[17] = v11;
  v7[18] = v12;
  v7[14] = v16;
  v7[15] = v17;
  sub_227D5DF48((uint64_t)&v1[*(int *)(v13 + 28)], (uint64_t)v5, &qword_253F39A48);
  v18 = type metadata accessor for ReadingHistory.ModelSnapshot.ModelValues(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 48))(v5, 1, v18) == 1)
  {
    sub_227D5809C((uint64_t)v5, &qword_253F39A48);
    v19 = v7 + 19;
    v7[22] = v11;
    v7[23] = v12;
LABEL_11:
    *v19 = 7104878;
    v22 = 0xE300000000000000;
    goto LABEL_12;
  }
  v20 = ReadingHistory.ModelSnapshot.ModelValues.description.getter();
  v22 = v21;
  sub_227D64BC4((uint64_t)v5, type metadata accessor for ReadingHistory.ModelSnapshot.ModelValues);
  v19 = v7 + 19;
  v7[22] = v11;
  v7[23] = v12;
  if (!v22)
    goto LABEL_11;
  *v19 = v20;
LABEL_12:
  v7[20] = v22;
  return sub_227E5FF9C();
}

BOOL _s13BookDataStore14ReadingHistoryO13ModelSnapshotV0F6ValuesV2eeoiySbAG_AGtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  int v25;
  int v26;
  _BOOL8 result;
  uint64_t v28;
  uint64_t v29;
  unsigned int (*v30)(uint64_t, uint64_t, uint64_t);
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;

  v4 = type metadata accessor for ReadingHistory.Streak(0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v6);
  v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_227D68330(&qword_253F39C38);
  MEMORY[0x24BDAC7A8](v9, v10);
  v12 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_227D68330((uint64_t *)&unk_253F39C20);
  v15 = MEMORY[0x24BDAC7A8](v13, v14);
  v17 = (char *)&v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x24BDAC7A8](v15, v18);
  v21 = (char *)&v36 - v20;
  MEMORY[0x24BDAC7A8](v19, v22);
  v24 = (char *)&v36 - v23;
  v25 = *(unsigned __int8 *)(a1 + 16);
  v26 = *(unsigned __int8 *)(a2 + 16);
  if (v25 == 2)
  {
    if (v26 != 2)
      return 0;
    goto LABEL_8;
  }
  result = 0;
  if (v26 != 2
    && *(_QWORD *)a1 == *(_QWORD *)a2
    && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8)
    && ((v25 ^ v26) & 1) == 0)
  {
LABEL_8:
    v37 = v8;
    v28 = type metadata accessor for ReadingHistory.ModelSnapshot.ModelValues(0);
    sub_227D5DF48(a1 + *(int *)(v28 + 20), (uint64_t)v24, (uint64_t *)&unk_253F39C20);
    sub_227D5DF48(a2 + *(int *)(v28 + 20), (uint64_t)v21, (uint64_t *)&unk_253F39C20);
    v29 = (uint64_t)&v12[*(int *)(v9 + 48)];
    sub_227D5DF48((uint64_t)v24, (uint64_t)v12, (uint64_t *)&unk_253F39C20);
    sub_227D5DF48((uint64_t)v21, v29, (uint64_t *)&unk_253F39C20);
    v30 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
    if (v30((uint64_t)v12, 1, v4) == 1)
    {
      sub_227D5809C((uint64_t)v21, (uint64_t *)&unk_253F39C20);
      sub_227D5809C((uint64_t)v24, (uint64_t *)&unk_253F39C20);
      if (v30(v29, 1, v4) == 1)
      {
        sub_227D5809C((uint64_t)v12, (uint64_t *)&unk_253F39C20);
        return 1;
      }
      v31 = &qword_253F39C38;
    }
    else
    {
      sub_227D5DF48((uint64_t)v12, (uint64_t)v17, (uint64_t *)&unk_253F39C20);
      if (v30(v29, 1, v4) == 1)
      {
        v31 = &qword_253F39C38;
      }
      else
      {
        v32 = (uint64_t)v37;
        sub_227D5E458(v29, (uint64_t)v37, type metadata accessor for ReadingHistory.Streak);
        if ((sub_227E5F258() & 1) != 0)
        {
          v33 = *(int *)(v4 + 20);
          v34 = *(_QWORD *)&v17[v33];
          v35 = *(_QWORD *)(v32 + v33);
          sub_227D64BC4(v32, type metadata accessor for ReadingHistory.Streak);
          sub_227D5809C((uint64_t)v21, (uint64_t *)&unk_253F39C20);
          sub_227D5809C((uint64_t)v24, (uint64_t *)&unk_253F39C20);
          sub_227D64BC4((uint64_t)v17, type metadata accessor for ReadingHistory.Streak);
          sub_227D5809C((uint64_t)v12, (uint64_t *)&unk_253F39C20);
          return v34 == v35;
        }
        sub_227D64BC4(v32, type metadata accessor for ReadingHistory.Streak);
        v31 = (uint64_t *)&unk_253F39C20;
      }
      sub_227D5809C((uint64_t)v21, (uint64_t *)&unk_253F39C20);
      sub_227D5809C((uint64_t)v24, (uint64_t *)&unk_253F39C20);
      sub_227D64BC4((uint64_t)v17, type metadata accessor for ReadingHistory.Streak);
    }
    sub_227D5809C((uint64_t)v12, v31);
    return 0;
  }
  return result;
}

uint64_t sub_227E4052C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ReadingHistory.ModelSnapshot.ModelValues(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

BOOL _s13BookDataStore14ReadingHistoryO13ModelSnapshotV2eeoiySbAE_AEtFZ_0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  int *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int (*v29)(uint64_t, uint64_t, uint64_t);
  BOOL v30;
  uint64_t v32;
  char *v33;

  v4 = type metadata accessor for ReadingHistory.ModelSnapshot.ModelValues(0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v6);
  v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_227D68330(&qword_255929D30);
  MEMORY[0x24BDAC7A8](v9, v10);
  v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_227D68330(&qword_253F39A48);
  v15 = MEMORY[0x24BDAC7A8](v13, v14);
  v17 = (char *)&v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x24BDAC7A8](v15, v18);
  v21 = (char *)&v32 - v20;
  MEMORY[0x24BDAC7A8](v19, v22);
  v24 = (char *)&v32 - v23;
  if (*a1 != *a2)
    return 0;
  v33 = v12;
  v25 = (int *)type metadata accessor for ReadingHistory.ModelSnapshot(0);
  if ((sub_227E3F5D4((uint64_t)&a1[v25[5]], (uint64_t)&a2[v25[5]]) & 1) == 0
    || !_s13BookDataStore14ReadingHistoryO13ModelSnapshotV0F6ValuesV2eeoiySbAG_AGtFZ_0((uint64_t)&a1[v25[6]], (uint64_t)&a2[v25[6]]))
  {
    return 0;
  }
  sub_227D5DF48((uint64_t)&a1[v25[7]], (uint64_t)v24, &qword_253F39A48);
  sub_227D5DF48((uint64_t)&a2[v25[7]], (uint64_t)v21, &qword_253F39A48);
  v26 = *(int *)(v9 + 48);
  v27 = (uint64_t)v33;
  v28 = (uint64_t)&v33[v26];
  sub_227D5DF48((uint64_t)v24, (uint64_t)v33, &qword_253F39A48);
  sub_227D5DF48((uint64_t)v21, v28, &qword_253F39A48);
  v29 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v29(v27, 1, v4) == 1)
  {
    sub_227D5809C((uint64_t)v21, &qword_253F39A48);
    sub_227D5809C((uint64_t)v24, &qword_253F39A48);
    if (v29(v28, 1, v4) == 1)
    {
      sub_227D5809C(v27, &qword_253F39A48);
      return 1;
    }
    goto LABEL_9;
  }
  sub_227D5DF48(v27, (uint64_t)v17, &qword_253F39A48);
  if (v29(v28, 1, v4) == 1)
  {
    sub_227D5809C((uint64_t)v21, &qword_253F39A48);
    sub_227D5809C((uint64_t)v24, &qword_253F39A48);
    sub_227D64BC4((uint64_t)v17, type metadata accessor for ReadingHistory.ModelSnapshot.ModelValues);
LABEL_9:
    sub_227D5809C(v27, &qword_255929D30);
    return 0;
  }
  sub_227D5E458(v28, (uint64_t)v8, type metadata accessor for ReadingHistory.ModelSnapshot.ModelValues);
  v30 = _s13BookDataStore14ReadingHistoryO13ModelSnapshotV0F6ValuesV2eeoiySbAG_AGtFZ_0((uint64_t)v17, (uint64_t)v8);
  sub_227D64BC4((uint64_t)v8, type metadata accessor for ReadingHistory.ModelSnapshot.ModelValues);
  sub_227D5809C((uint64_t)v21, &qword_253F39A48);
  sub_227D5809C((uint64_t)v24, &qword_253F39A48);
  sub_227D64BC4((uint64_t)v17, type metadata accessor for ReadingHistory.ModelSnapshot.ModelValues);
  sub_227D5809C(v27, &qword_253F39A48);
  return v30;
}

_QWORD *_s13ModelSnapshotVwCP(_BYTE *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  void (*v20)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  unsigned int (*v30)(char *, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _BYTE *v34;
  _BYTE *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *(_BYTE *)a2;
    v7 = a3[5];
    v8 = &a1[v7];
    v9 = (char *)a2 + v7;
    v10 = sub_227D68330(&qword_253F3A1C0);
    v11 = *(_QWORD *)(v10 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 2, v10))
    {
      v12 = sub_227D68330(&qword_253F39840);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      v14 = sub_227D68330(&qword_253F3AF68);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v8, v9, v14);
      v15 = type metadata accessor for ReadingHistoryModel(0);
      v16 = *(int *)(v15 + 20);
      v17 = &v8[v16];
      v18 = &v9[v16];
      v19 = sub_227D68330(&qword_253F3AF30);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
      *(_QWORD *)&v8[*(int *)(v15 + 24)] = *(_QWORD *)&v9[*(int *)(v15 + 24)];
      v20 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56);
      swift_bridgeObjectRetain();
      v20(v8, 0, 2, v10);
    }
    v21 = a3[6];
    v22 = (char *)v4 + v21;
    v23 = (char *)a2 + v21;
    *(_OWORD *)v22 = *(_OWORD *)((char *)a2 + v21);
    v22[16] = *((_BYTE *)a2 + v21 + 16);
    v24 = type metadata accessor for ReadingHistory.ModelSnapshot.ModelValues(0);
    v25 = *(int *)(v24 + 20);
    v26 = &v22[v25];
    v27 = &v23[v25];
    v28 = type metadata accessor for ReadingHistory.Streak(0);
    v29 = *(_QWORD *)(v28 - 8);
    v30 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48);
    if (v30(v27, 1, v28))
    {
      v31 = sub_227D68330((uint64_t *)&unk_253F39C20);
      memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
    }
    else
    {
      v32 = sub_227E5F27C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 16))(v26, v27, v32);
      *(_QWORD *)&v26[*(int *)(v28 + 20)] = *(_QWORD *)&v27[*(int *)(v28 + 20)];
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
    }
    v33 = a3[7];
    v34 = (char *)v4 + v33;
    v35 = (char *)a2 + v33;
    v36 = *(_QWORD *)(v24 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))((char *)a2 + v33, 1, v24))
    {
      v37 = sub_227D68330(&qword_253F39A48);
      memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
    }
    else
    {
      *(_OWORD *)v34 = *(_OWORD *)v35;
      v34[16] = v35[16];
      v38 = *(int *)(v24 + 20);
      v39 = &v34[v38];
      v40 = &v35[v38];
      if (v30(v40, 1, v28))
      {
        v41 = sub_227D68330((uint64_t *)&unk_253F39C20);
        memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
      }
      else
      {
        v42 = sub_227E5F27C();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v42 - 8) + 16))(v39, v40, v42);
        *(_QWORD *)&v39[*(int *)(v28 + 20)] = *(_QWORD *)&v40[*(int *)(v28 + 20)];
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v39, 0, 1, v28);
      }
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v36 + 56))(v34, 0, 1, v24);
    }
  }
  return v4;
}

_BYTE *_s13ModelSnapshotVwcp(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  void (*v18)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v19;
  _BYTE *v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  unsigned int (*v28)(char *, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v32;
  _BYTE *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;

  *a1 = *a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_227D68330(&qword_253F3A1C0);
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 2, v9))
  {
    v11 = sub_227D68330(&qword_253F39840);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    v12 = sub_227D68330(&qword_253F3AF68);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v7, v8, v12);
    v13 = type metadata accessor for ReadingHistoryModel(0);
    v14 = *(int *)(v13 + 20);
    v15 = &v7[v14];
    v16 = &v8[v14];
    v17 = sub_227D68330(&qword_253F3AF30);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
    *(_QWORD *)&v7[*(int *)(v13 + 24)] = *(_QWORD *)&v8[*(int *)(v13 + 24)];
    v18 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56);
    swift_bridgeObjectRetain();
    v18(v7, 0, 2, v9);
  }
  v19 = a3[6];
  v20 = &a1[v19];
  v21 = &a2[v19];
  *(_OWORD *)v20 = *(_OWORD *)&a2[v19];
  v20[16] = a2[v19 + 16];
  v22 = type metadata accessor for ReadingHistory.ModelSnapshot.ModelValues(0);
  v23 = *(int *)(v22 + 20);
  v24 = &v20[v23];
  v25 = &v21[v23];
  v26 = type metadata accessor for ReadingHistory.Streak(0);
  v27 = *(_QWORD *)(v26 - 8);
  v28 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48);
  if (v28(v25, 1, v26))
  {
    v29 = sub_227D68330((uint64_t *)&unk_253F39C20);
    memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
  }
  else
  {
    v30 = sub_227E5F27C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v24, v25, v30);
    *(_QWORD *)&v24[*(int *)(v26 + 20)] = *(_QWORD *)&v25[*(int *)(v26 + 20)];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
  }
  v31 = a3[7];
  v32 = &a1[v31];
  v33 = &a2[v31];
  v34 = *(_QWORD *)(v22 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v34 + 48))(&a2[v31], 1, v22))
  {
    v35 = sub_227D68330(&qword_253F39A48);
    memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
  }
  else
  {
    *(_OWORD *)v32 = *(_OWORD *)v33;
    v32[16] = v33[16];
    v36 = *(int *)(v22 + 20);
    v37 = &v32[v36];
    v38 = &v33[v36];
    if (v28(v38, 1, v26))
    {
      v39 = sub_227D68330((uint64_t *)&unk_253F39C20);
      memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
    }
    else
    {
      v40 = sub_227E5F27C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v40 - 8) + 16))(v37, v38, v40);
      *(_QWORD *)&v37[*(int *)(v26 + 20)] = *(_QWORD *)&v38[*(int *)(v26 + 20)];
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v37, 0, 1, v26);
    }
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v32, 0, 1, v22);
  }
  return a1;
}

_BYTE *_s13ModelSnapshotVwca(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  void (*v20)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  _BYTE *v23;
  _BYTE *v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t (*v32)(char *, uint64_t, uint64_t);
  int v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t (*v41)(char *, uint64_t, uint64_t);
  int v42;
  int v43;
  __int128 v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  size_t v49;
  void *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  __int128 v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  int v63;
  int v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v68;

  *a1 = *a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_227D68330(&qword_253F3A1C0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 2, v9);
  v13 = v11(v8, 2, v9);
  if (v12)
  {
    if (!v13)
    {
      v14 = sub_227D68330(&qword_253F3AF68);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v7, v8, v14);
      v15 = type metadata accessor for ReadingHistoryModel(0);
      v16 = *(int *)(v15 + 20);
      v17 = &v7[v16];
      v18 = &v8[v16];
      v19 = sub_227D68330(&qword_253F3AF30);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
      *(_QWORD *)&v7[*(int *)(v15 + 24)] = *(_QWORD *)&v8[*(int *)(v15 + 24)];
      v20 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56);
      swift_bridgeObjectRetain();
      v20(v7, 0, 2, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    sub_227D5809C((uint64_t)v7, &qword_253F3A1C0);
LABEL_6:
    v21 = sub_227D68330(&qword_253F39840);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    goto LABEL_7;
  }
  v52 = sub_227D68330(&qword_253F3AF68);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v52 - 8) + 24))(v7, v8, v52);
  v53 = type metadata accessor for ReadingHistoryModel(0);
  v54 = *(int *)(v53 + 20);
  v55 = &v7[v54];
  v56 = &v8[v54];
  v57 = sub_227D68330(&qword_253F3AF30);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v57 - 8) + 24))(v55, v56, v57);
  *(_QWORD *)&v7[*(int *)(v53 + 24)] = *(_QWORD *)&v8[*(int *)(v53 + 24)];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_7:
  v22 = a3[6];
  v23 = &a1[v22];
  v24 = &a2[v22];
  v25 = *(_OWORD *)&a2[v22];
  v23[16] = a2[v22 + 16];
  *(_OWORD *)v23 = v25;
  v26 = type metadata accessor for ReadingHistory.ModelSnapshot.ModelValues(0);
  v27 = *(int *)(v26 + 20);
  v28 = &v23[v27];
  v29 = &v24[v27];
  v30 = type metadata accessor for ReadingHistory.Streak(0);
  v31 = *(_QWORD *)(v30 - 8);
  v32 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v31 + 48);
  v33 = v32(v28, 1, v30);
  v34 = v32(v29, 1, v30);
  if (v33)
  {
    if (!v34)
    {
      v35 = sub_227E5F27C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v28, v29, v35);
      *(_QWORD *)&v28[*(int *)(v30 + 20)] = *(_QWORD *)&v29[*(int *)(v30 + 20)];
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v28, 0, 1, v30);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v34)
  {
    sub_227D64BC4((uint64_t)v28, type metadata accessor for ReadingHistory.Streak);
LABEL_12:
    v36 = sub_227D68330((uint64_t *)&unk_253F39C20);
    memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
    goto LABEL_13;
  }
  v58 = sub_227E5F27C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v58 - 8) + 24))(v28, v29, v58);
  *(_QWORD *)&v28[*(int *)(v30 + 20)] = *(_QWORD *)&v29[*(int *)(v30 + 20)];
LABEL_13:
  v37 = a3[7];
  v38 = (uint64_t)&a1[v37];
  v39 = &a2[v37];
  v40 = *(_QWORD *)(v26 - 8);
  v41 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v40 + 48);
  v42 = v41(&a1[v37], 1, v26);
  v43 = v41(v39, 1, v26);
  if (!v42)
  {
    if (!v43)
    {
      v59 = *(_OWORD *)v39;
      *(_BYTE *)(v38 + 16) = v39[16];
      *(_OWORD *)v38 = v59;
      v60 = *(int *)(v26 + 20);
      v61 = v38 + v60;
      v62 = &v39[v60];
      v63 = v32((char *)v61, 1, v30);
      v64 = v32(v62, 1, v30);
      if (v63)
      {
        if (!v64)
        {
          v65 = sub_227E5F27C();
          (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v65 - 8) + 16))(v61, v62, v65);
          *(_QWORD *)(v61 + *(int *)(v30 + 20)) = *(_QWORD *)&v62[*(int *)(v30 + 20)];
          (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v31 + 56))(v61, 0, 1, v30);
          return a1;
        }
      }
      else
      {
        if (!v64)
        {
          v68 = sub_227E5F27C();
          (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v68 - 8) + 24))(v61, v62, v68);
          *(_QWORD *)(v61 + *(int *)(v30 + 20)) = *(_QWORD *)&v62[*(int *)(v30 + 20)];
          return a1;
        }
        sub_227D64BC4(v61, type metadata accessor for ReadingHistory.Streak);
      }
      v49 = *(_QWORD *)(*(_QWORD *)(sub_227D68330((uint64_t *)&unk_253F39C20) - 8) + 64);
      v50 = (void *)v61;
      v51 = v62;
      goto LABEL_20;
    }
    sub_227D64BC4(v38, type metadata accessor for ReadingHistory.ModelSnapshot.ModelValues);
LABEL_19:
    v49 = *(_QWORD *)(*(_QWORD *)(sub_227D68330(&qword_253F39A48) - 8) + 64);
    v50 = (void *)v38;
    v51 = v39;
LABEL_20:
    memcpy(v50, v51, v49);
    return a1;
  }
  if (v43)
    goto LABEL_19;
  v44 = *(_OWORD *)v39;
  *(_BYTE *)(v38 + 16) = v39[16];
  *(_OWORD *)v38 = v44;
  v45 = *(int *)(v26 + 20);
  v46 = (char *)(v38 + v45);
  v47 = &v39[v45];
  if (v32(v47, 1, v30))
  {
    v48 = sub_227D68330((uint64_t *)&unk_253F39C20);
    memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
  }
  else
  {
    v66 = sub_227E5F27C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v66 - 8) + 16))(v46, v47, v66);
    *(_QWORD *)&v46[*(int *)(v30 + 20)] = *(_QWORD *)&v47[*(int *)(v30 + 20)];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v46, 0, 1, v30);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v40 + 56))(v38, 0, 1, v26);
  return a1;
}

_BYTE *_s13ModelSnapshotVwtk(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  _BYTE *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  unsigned int (*v27)(char *, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _BYTE *v31;
  _BYTE *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;

  *a1 = *a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_227D68330(&qword_253F3A1C0);
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 2, v9))
  {
    v11 = sub_227D68330(&qword_253F39840);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    v12 = sub_227D68330(&qword_253F3AF68);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v7, v8, v12);
    v13 = type metadata accessor for ReadingHistoryModel(0);
    v14 = *(int *)(v13 + 20);
    v15 = &v7[v14];
    v16 = &v8[v14];
    v17 = sub_227D68330(&qword_253F3AF30);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v15, v16, v17);
    *(_QWORD *)&v7[*(int *)(v13 + 24)] = *(_QWORD *)&v8[*(int *)(v13 + 24)];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 2, v9);
  }
  v18 = a3[6];
  v19 = &a1[v18];
  v20 = &a2[v18];
  *(_OWORD *)v19 = *(_OWORD *)&a2[v18];
  v19[16] = a2[v18 + 16];
  v21 = type metadata accessor for ReadingHistory.ModelSnapshot.ModelValues(0);
  v22 = *(int *)(v21 + 20);
  v23 = &v19[v22];
  v24 = &v20[v22];
  v25 = type metadata accessor for ReadingHistory.Streak(0);
  v26 = *(_QWORD *)(v25 - 8);
  v27 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48);
  if (v27(v24, 1, v25))
  {
    v28 = sub_227D68330((uint64_t *)&unk_253F39C20);
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
  }
  else
  {
    v29 = sub_227E5F27C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 32))(v23, v24, v29);
    *(_QWORD *)&v23[*(int *)(v25 + 20)] = *(_QWORD *)&v24[*(int *)(v25 + 20)];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
  }
  v30 = a3[7];
  v31 = &a1[v30];
  v32 = &a2[v30];
  v33 = *(_QWORD *)(v21 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v33 + 48))(&a2[v30], 1, v21))
  {
    v34 = sub_227D68330(&qword_253F39A48);
    memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
  }
  else
  {
    *(_OWORD *)v31 = *(_OWORD *)v32;
    v31[16] = v32[16];
    v35 = *(int *)(v21 + 20);
    v36 = &v31[v35];
    v37 = &v32[v35];
    if (v27(v37, 1, v25))
    {
      v38 = sub_227D68330((uint64_t *)&unk_253F39C20);
      memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
    }
    else
    {
      v39 = sub_227E5F27C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 32))(v36, v37, v39);
      *(_QWORD *)&v36[*(int *)(v25 + 20)] = *(_QWORD *)&v37[*(int *)(v25 + 20)];
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v36, 0, 1, v25);
    }
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v31, 0, 1, v21);
  }
  return a1;
}

_BYTE *_s13ModelSnapshotVwta(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  _BYTE *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t (*v30)(char *, uint64_t, uint64_t);
  int v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t (*v39)(char *, uint64_t, uint64_t);
  int v40;
  int v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  size_t v46;
  void *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  int v59;
  int v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v64;

  *a1 = *a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_227D68330(&qword_253F3A1C0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 2, v9);
  v13 = v11(v8, 2, v9);
  if (v12)
  {
    if (!v13)
    {
      v14 = sub_227D68330(&qword_253F3AF68);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v7, v8, v14);
      v15 = type metadata accessor for ReadingHistoryModel(0);
      v16 = *(int *)(v15 + 20);
      v17 = &v7[v16];
      v18 = &v8[v16];
      v19 = sub_227D68330(&qword_253F3AF30);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v17, v18, v19);
      *(_QWORD *)&v7[*(int *)(v15 + 24)] = *(_QWORD *)&v8[*(int *)(v15 + 24)];
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 2, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    sub_227D5809C((uint64_t)v7, &qword_253F3A1C0);
LABEL_6:
    v20 = sub_227D68330(&qword_253F39840);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    goto LABEL_7;
  }
  v49 = sub_227D68330(&qword_253F3AF68);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v49 - 8) + 40))(v7, v8, v49);
  v50 = type metadata accessor for ReadingHistoryModel(0);
  v51 = *(int *)(v50 + 20);
  v52 = &v7[v51];
  v53 = &v8[v51];
  v54 = sub_227D68330(&qword_253F3AF30);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v54 - 8) + 40))(v52, v53, v54);
  *(_QWORD *)&v7[*(int *)(v50 + 24)] = *(_QWORD *)&v8[*(int *)(v50 + 24)];
  swift_bridgeObjectRelease();
LABEL_7:
  v21 = a3[6];
  v22 = &a1[v21];
  v23 = &a2[v21];
  *(_OWORD *)v22 = *(_OWORD *)&a2[v21];
  v22[16] = a2[v21 + 16];
  v24 = type metadata accessor for ReadingHistory.ModelSnapshot.ModelValues(0);
  v25 = *(int *)(v24 + 20);
  v26 = &v22[v25];
  v27 = &v23[v25];
  v28 = type metadata accessor for ReadingHistory.Streak(0);
  v29 = *(_QWORD *)(v28 - 8);
  v30 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v29 + 48);
  v31 = v30(v26, 1, v28);
  v32 = v30(v27, 1, v28);
  if (v31)
  {
    if (!v32)
    {
      v33 = sub_227E5F27C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 32))(v26, v27, v33);
      *(_QWORD *)&v26[*(int *)(v28 + 20)] = *(_QWORD *)&v27[*(int *)(v28 + 20)];
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v32)
  {
    sub_227D64BC4((uint64_t)v26, type metadata accessor for ReadingHistory.Streak);
LABEL_12:
    v34 = sub_227D68330((uint64_t *)&unk_253F39C20);
    memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
    goto LABEL_13;
  }
  v55 = sub_227E5F27C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v55 - 8) + 40))(v26, v27, v55);
  *(_QWORD *)&v26[*(int *)(v28 + 20)] = *(_QWORD *)&v27[*(int *)(v28 + 20)];
LABEL_13:
  v35 = a3[7];
  v36 = (uint64_t)&a1[v35];
  v37 = &a2[v35];
  v38 = *(_QWORD *)(v24 - 8);
  v39 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v38 + 48);
  v40 = v39(&a1[v35], 1, v24);
  v41 = v39(v37, 1, v24);
  if (!v40)
  {
    if (!v41)
    {
      *(_OWORD *)v36 = *(_OWORD *)v37;
      *(_BYTE *)(v36 + 16) = v37[16];
      v56 = *(int *)(v24 + 20);
      v57 = v36 + v56;
      v58 = &v37[v56];
      v59 = v30((char *)v57, 1, v28);
      v60 = v30(v58, 1, v28);
      if (v59)
      {
        if (!v60)
        {
          v61 = sub_227E5F27C();
          (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v61 - 8) + 32))(v57, v58, v61);
          *(_QWORD *)(v57 + *(int *)(v28 + 20)) = *(_QWORD *)&v58[*(int *)(v28 + 20)];
          (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v29 + 56))(v57, 0, 1, v28);
          return a1;
        }
      }
      else
      {
        if (!v60)
        {
          v64 = sub_227E5F27C();
          (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v64 - 8) + 40))(v57, v58, v64);
          *(_QWORD *)(v57 + *(int *)(v28 + 20)) = *(_QWORD *)&v58[*(int *)(v28 + 20)];
          return a1;
        }
        sub_227D64BC4(v57, type metadata accessor for ReadingHistory.Streak);
      }
      v46 = *(_QWORD *)(*(_QWORD *)(sub_227D68330((uint64_t *)&unk_253F39C20) - 8) + 64);
      v47 = (void *)v57;
      v48 = v58;
      goto LABEL_20;
    }
    sub_227D64BC4(v36, type metadata accessor for ReadingHistory.ModelSnapshot.ModelValues);
LABEL_19:
    v46 = *(_QWORD *)(*(_QWORD *)(sub_227D68330(&qword_253F39A48) - 8) + 64);
    v47 = (void *)v36;
    v48 = v37;
LABEL_20:
    memcpy(v47, v48, v46);
    return a1;
  }
  if (v41)
    goto LABEL_19;
  *(_OWORD *)v36 = *(_OWORD *)v37;
  *(_BYTE *)(v36 + 16) = v37[16];
  v42 = *(int *)(v24 + 20);
  v43 = (char *)(v36 + v42);
  v44 = &v37[v42];
  if (v30(v44, 1, v28))
  {
    v45 = sub_227D68330((uint64_t *)&unk_253F39C20);
    memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
  }
  else
  {
    v62 = sub_227E5F27C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v62 - 8) + 32))(v43, v44, v62);
    *(_QWORD *)&v43[*(int *)(v28 + 20)] = *(_QWORD *)&v44[*(int *)(v28 + 20)];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v43, 0, 1, v28);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v36, 0, 1, v24);
  return a1;
}

uint64_t _s13ModelSnapshotVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_227E41BC8(unsigned __int8 *a1, uint64_t a2, int *a3)
{
  unsigned int v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if ((_DWORD)a2 == 254)
  {
    v4 = *a1;
    if (v4 >= 2)
      return v4 - 1;
    else
      return 0;
  }
  else
  {
    v8 = sub_227D68330(&qword_253F39840);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = a3[5];
    }
    else
    {
      v12 = type metadata accessor for ReadingHistory.ModelSnapshot.ModelValues(0);
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
      {
        v10 = v12;
        v11 = a3[6];
      }
      else
      {
        v10 = sub_227D68330(&qword_253F39A48);
        v9 = *(_QWORD *)(v10 - 8);
        v11 = a3[7];
      }
    }
    return (*(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(v9 + 48))(&a1[v11], a2, v10);
  }
}

uint64_t _s13ModelSnapshotVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

_BYTE *sub_227E41C98(_BYTE *result, uint64_t a2, int a3, int *a4)
{
  _BYTE *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = result;
  if (a3 == 254)
  {
    *result = a2 + 1;
  }
  else
  {
    v8 = sub_227D68330(&qword_253F39840);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = a4[5];
    }
    else
    {
      v12 = type metadata accessor for ReadingHistory.ModelSnapshot.ModelValues(0);
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == a3)
      {
        v10 = v12;
        v11 = a4[6];
      }
      else
      {
        v10 = sub_227D68330(&qword_253F39A48);
        v9 = *(_QWORD *)(v10 - 8);
        v11 = a4[7];
      }
    }
    return (_BYTE *)(*(uint64_t (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v9 + 56))(&v5[v11], a2, a2, v10);
  }
  return result;
}

_QWORD *_s13ModelSnapshotV11ModelValuesVwCP(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  int v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v3 = (_QWORD *)a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v11 = *a2;
    *v3 = *a2;
    v3 = (_QWORD *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
    v5 = *(int *)(a3 + 20);
    v6 = (char *)(a1 + v5);
    v7 = (char *)a2 + v5;
    v8 = type metadata accessor for ReadingHistory.Streak(0);
    v9 = *(_QWORD *)(v8 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
    {
      v10 = sub_227D68330((uint64_t *)&unk_253F39C20);
      memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    }
    else
    {
      v12 = sub_227E5F27C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v6, v7, v12);
      *(_QWORD *)&v6[*(int *)(v8 + 20)] = *(_QWORD *)&v7[*(int *)(v8 + 20)];
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
    }
  }
  return v3;
}

uint64_t _s13ModelSnapshotV11ModelValuesVwxx(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;

  v2 = a1 + *(int *)(a2 + 20);
  v3 = type metadata accessor for ReadingHistory.Streak(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 48))(v2, 1, v3);
  if (!(_DWORD)result)
  {
    v5 = sub_227E5F27C();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v2, v5);
  }
  return result;
}

uint64_t _s13ModelSnapshotV11ModelValuesVwcp(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = *(int *)(a3 + 20);
  v5 = (char *)(a1 + v4);
  v6 = (char *)(a2 + v4);
  v7 = type metadata accessor for ReadingHistory.Streak(0);
  v8 = *(_QWORD *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    v9 = sub_227D68330((uint64_t *)&unk_253F39C20);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    v10 = sub_227E5F27C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v5, v6, v10);
    *(_QWORD *)&v5[*(int *)(v7 + 20)] = *(_QWORD *)&v6[*(int *)(v7 + 20)];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

uint64_t _s13ModelSnapshotV11ModelValuesVwca(uint64_t a1, __int128 *a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(char *, uint64_t, uint64_t);
  int v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v4 = *a2;
  *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
  *(_OWORD *)a1 = v4;
  v5 = *(int *)(a3 + 20);
  v6 = (char *)(a1 + v5);
  v7 = (char *)a2 + v5;
  v8 = type metadata accessor for ReadingHistory.Streak(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48);
  v11 = v10(v6, 1, v8);
  v12 = v10(v7, 1, v8);
  if (!v11)
  {
    if (!v12)
    {
      v16 = sub_227E5F27C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 24))(v6, v7, v16);
      *(_QWORD *)&v6[*(int *)(v8 + 20)] = *(_QWORD *)&v7[*(int *)(v8 + 20)];
      return a1;
    }
    sub_227D64BC4((uint64_t)v6, type metadata accessor for ReadingHistory.Streak);
    goto LABEL_6;
  }
  if (v12)
  {
LABEL_6:
    v14 = sub_227D68330((uint64_t *)&unk_253F39C20);
    memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    return a1;
  }
  v13 = sub_227E5F27C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v6, v7, v13);
  *(_QWORD *)&v6[*(int *)(v8 + 20)] = *(_QWORD *)&v7[*(int *)(v8 + 20)];
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
  return a1;
}

uint64_t _s13ModelSnapshotV11ModelValuesVwtk(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = *(int *)(a3 + 20);
  v5 = (char *)(a1 + v4);
  v6 = (char *)(a2 + v4);
  v7 = type metadata accessor for ReadingHistory.Streak(0);
  v8 = *(_QWORD *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    v9 = sub_227D68330((uint64_t *)&unk_253F39C20);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    v10 = sub_227E5F27C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v5, v6, v10);
    *(_QWORD *)&v5[*(int *)(v7 + 20)] = *(_QWORD *)&v6[*(int *)(v7 + 20)];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

uint64_t _s13ModelSnapshotV11ModelValuesVwta(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(char *, uint64_t, uint64_t);
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = *(int *)(a3 + 20);
  v5 = (char *)(a1 + v4);
  v6 = (char *)(a2 + v4);
  v7 = type metadata accessor for ReadingHistory.Streak(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48);
  v10 = v9(v5, 1, v7);
  v11 = v9(v6, 1, v7);
  if (!v10)
  {
    if (!v11)
    {
      v15 = sub_227E5F27C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 40))(v5, v6, v15);
      *(_QWORD *)&v5[*(int *)(v7 + 20)] = *(_QWORD *)&v6[*(int *)(v7 + 20)];
      return a1;
    }
    sub_227D64BC4((uint64_t)v5, type metadata accessor for ReadingHistory.Streak);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    v13 = sub_227D68330((uint64_t *)&unk_253F39C20);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    return a1;
  }
  v12 = sub_227E5F27C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v5, v6, v12);
  *(_QWORD *)&v5[*(int *)(v7 + 20)] = *(_QWORD *)&v6[*(int *)(v7 + 20)];
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  return a1;
}

uint64_t sub_227E42304(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v4;
  int v5;
  uint64_t v9;

  if ((_DWORD)a2 == 253)
  {
    v4 = *(unsigned __int8 *)(a1 + 16);
    if (v4 >= 2)
      v5 = ((v4 + 2147483646) & 0x7FFFFFFF) - 1;
    else
      v5 = -2;
    if (v5 < 0)
      v5 = -1;
    return (v5 + 1);
  }
  else
  {
    v9 = sub_227D68330((uint64_t *)&unk_253F39C20);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v9);
  }
}

uint64_t sub_227E42398(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 253)
  {
    *(_BYTE *)(result + 16) = a2 + 2;
  }
  else
  {
    v7 = sub_227D68330((uint64_t *)&unk_253F39C20);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

uint64_t _ReadingHistoryServiceStatus.isLoaded.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t _ReadingHistoryServiceStatus.description.getter()
{
  sub_227E6002C();
  swift_bridgeObjectRelease();
  sub_227E6002C();
  return 0x6564616F4C73697BLL;
}

uint64_t sub_227E424A4()
{
  return 1;
}

uint64_t sub_227E424AC()
{
  sub_227E6071C();
  sub_227E60728();
  return sub_227E60734();
}

uint64_t sub_227E424EC()
{
  return sub_227E60728();
}

uint64_t sub_227E42510()
{
  sub_227E6071C();
  sub_227E60728();
  return sub_227E60734();
}

uint64_t sub_227E4254C()
{
  return 0x646564616F4C7369;
}

uint64_t sub_227E42564@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x646564616F4C7369 && a2 == 0xE800000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_227E60698();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_227E425F8()
{
  sub_227E42730();
  return sub_227E60758();
}

uint64_t sub_227E42620()
{
  sub_227E42730();
  return sub_227E60764();
}

uint64_t _ReadingHistoryServiceStatus.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  v2 = sub_227D68330(&qword_255929D40);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2, v4);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_227D572A4(a1, a1[3]);
  sub_227E42730();
  sub_227E6074C();
  sub_227E60638();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
}

unint64_t sub_227E42730()
{
  unint64_t result;

  result = qword_255929D48;
  if (!qword_255929D48)
  {
    result = MEMORY[0x22E2AA7D4](&unk_227E73104, &type metadata for _ReadingHistoryServiceStatus.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255929D48);
  }
  return result;
}

uint64_t _ReadingHistoryServiceStatus.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char v10;
  uint64_t v12;

  v5 = sub_227D68330(&qword_255929D50);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_227D572A4(a1, a1[3]);
  sub_227E42730();
  sub_227E60740();
  if (!v2)
  {
    v10 = sub_227E605E4();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    *a2 = v10 & 1;
  }
  return sub_227D58120((uint64_t)a1);
}

uint64_t sub_227E4287C@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return _ReadingHistoryServiceStatus.init(from:)(a1, a2);
}

uint64_t sub_227E42890(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  v2 = sub_227D68330(&qword_255929D40);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2, v4);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_227D572A4(a1, a1[3]);
  sub_227E42730();
  sub_227E6074C();
  sub_227E60638();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
}

uint64_t sub_227E42978()
{
  sub_227E6002C();
  swift_bridgeObjectRelease();
  sub_227E6002C();
  return 0x6564616F4C73697BLL;
}

void ReadingHistoryServiceStatus.value.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + OBJC_IVAR___BDSReadingHistoryServiceStatus_value);
}

id ReadingHistoryServiceStatus.__allocating_init(value:)(_BYTE *a1)
{
  objc_class *v1;
  _BYTE *v3;
  objc_super v5;

  v3 = objc_allocWithZone(v1);
  v3[OBJC_IVAR___BDSReadingHistoryServiceStatus_value] = *a1;
  v5.receiver = v3;
  v5.super_class = v1;
  return objc_msgSendSuper2(&v5, sel_init);
}

id ReadingHistoryServiceStatus.init(value:)(_BYTE *a1)
{
  _BYTE *v1;
  objc_class *ObjectType;
  objc_super v5;

  ObjectType = (objc_class *)swift_getObjectType();
  v1[OBJC_IVAR___BDSReadingHistoryServiceStatus_value] = *a1;
  v5.receiver = v1;
  v5.super_class = ObjectType;
  return objc_msgSendSuper2(&v5, sel_init);
}

uint64_t static ReadingHistoryServiceStatus.supportsSecureCoding.getter()
{
  return 1;
}

id ReadingHistoryServiceStatus.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;
  id v4;

  v3 = objc_allocWithZone(v1);
  swift_getObjectType();
  v4 = sub_227DD338C(a1);
  swift_deallocPartialClassInstance();
  return v4;
}

id ReadingHistoryServiceStatus.init(coder:)(void *a1)
{
  id v2;

  swift_getObjectType();
  v2 = sub_227DD338C(a1);
  swift_deallocPartialClassInstance();
  return v2;
}

id ReadingHistoryServiceStatus.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void ReadingHistoryServiceStatus.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id ReadingHistoryServiceStatus.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_227E42CD4(_BYTE *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *(_BYTE *)(*v1 + OBJC_IVAR___BDSReadingHistoryServiceStatus_value);
}

id sub_227E42CEC@<X0>(char *a1@<X0>, _QWORD *a2@<X8>)
{
  objc_class *v2;
  char v4;
  _BYTE *v5;
  id result;
  objc_super v7;

  v4 = *a1;
  v5 = objc_allocWithZone(v2);
  v5[OBJC_IVAR___BDSReadingHistoryServiceStatus_value] = v4;
  v7.receiver = v5;
  v7.super_class = v2;
  result = objc_msgSendSuper2(&v7, sel_init);
  *a2 = result;
  return result;
}

id ReadingHistoryServiceStatus.__allocating_init(isLoaded:)(char a1)
{
  objc_class *v1;

  return objc_msgSend(objc_allocWithZone(v1), sel_initWithIsLoaded_, a1 & 1);
}

id ReadingHistoryServiceStatus.init(isLoaded:)(char a1)
{
  objc_class *ObjectType;
  _BYTE *v3;
  id v4;
  objc_super v6;

  ObjectType = (objc_class *)swift_getObjectType();
  v3 = objc_allocWithZone(ObjectType);
  v3[OBJC_IVAR___BDSReadingHistoryServiceStatus_value] = a1;
  v6.receiver = v3;
  v6.super_class = ObjectType;
  v4 = objc_msgSendSuper2(&v6, sel_init);
  swift_getObjectType();
  swift_deallocPartialClassInstance();
  return v4;
}

uint64_t ReadingHistoryServiceStatus.isLoaded.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR___BDSReadingHistoryServiceStatus_value);
}

uint64_t ReadingHistoryServiceStatus.description.getter()
{
  sub_227E6002C();
  swift_bridgeObjectRelease();
  sub_227E6002C();
  return 0x6564616F4C73697BLL;
}

uint64_t getEnumTagSinglePayload for _ReadingHistoryServiceStatus(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 1;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 1;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 1;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for _ReadingHistoryServiceStatus(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_227E430E4 + 4 * byte_227E72F25[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_227E43118 + 4 * byte_227E72F20[v4]))();
}

uint64_t sub_227E43118(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_227E43120(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x227E43128);
  return result;
}

uint64_t sub_227E43134(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x227E4313CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_227E43140(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_227E43148(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for _ReadingHistoryServiceStatus()
{
  return &type metadata for _ReadingHistoryServiceStatus;
}

uint64_t type metadata accessor for ReadingHistoryServiceStatus()
{
  return objc_opt_self();
}

uint64_t method lookup function for ReadingHistoryServiceStatus()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ReadingHistoryServiceStatus.__allocating_init(value:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t getEnumTagSinglePayload for _ReadingHistoryServiceStatus.CodingKeys(unsigned int *a1, int a2)
{
  int v2;
  int v3;

  if (!a2)
    return 0;
  if ((a2 + 1) >= 0x10000)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) < 0x100)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
    return *a1;
  if (v3 == 2)
    return *(unsigned __int16 *)a1;
  return *(unsigned __int8 *)a1;
}

uint64_t storeEnumTagSinglePayload for _ReadingHistoryServiceStatus.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_227E4322C + 4 * byte_227E72F2A[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_227E4324C + 4 * byte_227E72F2F[v4]))();
}

_BYTE *sub_227E4322C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_227E4324C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_227E43254(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_227E4325C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_227E43264(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_227E4326C(_DWORD *result)
{
  *result = 0;
  return result;
}

uint64_t sub_227E43278()
{
  return 0;
}

ValueMetadata *type metadata accessor for _ReadingHistoryServiceStatus.CodingKeys()
{
  return &type metadata for _ReadingHistoryServiceStatus.CodingKeys;
}

unint64_t sub_227E43294()
{
  unint64_t result;

  result = qword_255929DA8;
  if (!qword_255929DA8)
  {
    result = MEMORY[0x22E2AA7D4](&unk_227E730DC, &type metadata for _ReadingHistoryServiceStatus.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255929DA8);
  }
  return result;
}

unint64_t sub_227E432DC()
{
  unint64_t result;

  result = qword_255929DB0;
  if (!qword_255929DB0)
  {
    result = MEMORY[0x22E2AA7D4](&unk_227E7304C, &type metadata for _ReadingHistoryServiceStatus.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255929DB0);
  }
  return result;
}

unint64_t sub_227E43324()
{
  unint64_t result;

  result = qword_255929DB8;
  if (!qword_255929DB8)
  {
    result = MEMORY[0x22E2AA7D4](&unk_227E73074, &type metadata for _ReadingHistoryServiceStatus.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_255929DB8);
  }
  return result;
}

uint64_t sub_227E43368()
{
  uint64_t result;
  unint64_t v1;

  result = sub_227E5F588();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

id sub_227E43414()
{
  void *v0;
  void *v1;
  id v2;
  void *v3;
  id v4;

  sub_227E439DC();
  v1 = v0;
  sub_227E43910();
  v2 = objc_allocWithZone((Class)BCCloudDataSource);
  v3 = (void *)sub_227E5FF78();
  swift_bridgeObjectRelease();
  v4 = objc_msgSend(v2, sel_initWithManagedObjectModel_nameOnDisk_, v1, v3);

  return v4;
}

char *sub_227E43498(void *a1, void *a2, void *a3, uint64_t a4)
{
  objc_class *v4;
  id v9;

  v9 = objc_allocWithZone(v4);
  return sub_227E45ED4(a1, a2, a3, a4);
}

void sub_227E434F0(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  _QWORD v11[6];

  v3 = v2;
  v6 = *MEMORY[0x24BEE4EA0] & *v3;
  v7 = *(void **)((char *)v3 + qword_255929DD0);
  v8 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = *(_OWORD *)(v6 + 80);
  *(_QWORD *)(v9 + 32) = *(_QWORD *)(v6 + 96);
  *(_QWORD *)(v9 + 40) = v8;
  *(_QWORD *)(v9 + 48) = a1;
  *(_QWORD *)(v9 + 56) = a2;
  v11[4] = sub_227E492B4;
  v11[5] = v9;
  v11[0] = MEMORY[0x24BDAC760];
  v11[1] = 1107296256;
  v11[2] = sub_227E467CC;
  v11[3] = &unk_24F090CC0;
  v10 = _Block_copy(v11);
  swift_retain();
  swift_release();
  objc_msgSend(v7, sel_cloudDataWithPredicate_sortDescriptors_completion_, 0, 0, v10);
  _Block_release(v10);
}

void sub_227E43614(char a1)
{
  uint64_t v1;
  int v2;
  int v3;

  v2 = *(unsigned __int8 *)(v1 + qword_25592FED8);
  *(_BYTE *)(v1 + qword_25592FED8) = a1;
  v3 = *(unsigned __int8 *)(v1 + qword_25592FED8);
  if (v2 != v3)
    sub_227E45C70(v3);
}

void sub_227E4363C(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  char *v4;
  uint64_t ObjectType;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  objc_class *v12;
  char *v13;
  char *v14;
  char *v15;
  uint64_t *v16;
  uint64_t *v17;
  uint64_t v18;
  unint64_t v19;
  void *v20;
  char *v21;
  void *v22;
  _QWORD *v23;
  void *v24;
  char *v25;
  id v26;
  _QWORD aBlock[6];
  objc_super v30;

  ObjectType = swift_getObjectType();
  v8 = objc_msgSend(*(id *)&v4[qword_255929E00], sel_createTransactionWithName_, "com.apple.ibooks.CRDTModelSyncManager.setCloudData");
  aBlock[0] = *(_QWORD *)(ObjectType + 80);
  swift_getMetatypeMetadata();
  v9 = sub_227E5FFC0();
  v11 = v10;
  v12 = (objc_class *)type metadata accessor for CRDTModelSync();
  v13 = (char *)objc_allocWithZone(v12);
  v14 = &v13[OBJC_IVAR____TtC13BookDataStore13CRDTModelSync_type];
  *(_QWORD *)v14 = 0;
  *((_QWORD *)v14 + 1) = 0xE000000000000000;
  *(_OWORD *)&v13[OBJC_IVAR____TtC13BookDataStore13CRDTModelSync_protoData] = xmmword_227E6F050;
  sub_227DD00E0(a1, a2);
  v30.receiver = v13;
  v30.super_class = v12;
  v15 = (char *)objc_msgSendSuper2(&v30, sel_init);
  v16 = (uint64_t *)&v15[OBJC_IVAR____TtC13BookDataStore13CRDTModelSync_type];
  *v16 = v9;
  v16[1] = v11;
  swift_bridgeObjectRelease();
  v17 = (uint64_t *)&v15[OBJC_IVAR____TtC13BookDataStore13CRDTModelSync_protoData];
  v18 = *(_QWORD *)&v15[OBJC_IVAR____TtC13BookDataStore13CRDTModelSync_protoData];
  v19 = *(_QWORD *)&v15[OBJC_IVAR____TtC13BookDataStore13CRDTModelSync_protoData + 8];
  *v17 = a1;
  v17[1] = a2;
  sub_227DD7918(v18, v19);
  v20 = *(void **)&v4[qword_255929DD0];
  v21 = v15;
  sub_227E43B14();
  sub_227D68330(&qword_2559288E0);
  v22 = (void *)sub_227E5FED0();
  swift_bridgeObjectRelease();
  v23 = (_QWORD *)swift_allocObject();
  v23[2] = v4;
  v23[3] = a3;
  v23[4] = a4;
  v23[5] = v8;
  aBlock[4] = sub_227E49264;
  aBlock[5] = v23;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_227E46A74;
  aBlock[3] = &unk_24F090C70;
  v24 = _Block_copy(aBlock);
  v25 = v4;
  swift_retain();
  v26 = v8;
  swift_release();
  objc_msgSend(v20, sel_setCloudData_predicate_mergers_completion_, v21, 0, v22, v24);
  _Block_release(v24);

}

void sub_227E4387C(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  id v6;

  if (a2)
    v5 = sub_227E5F138();
  else
    v5 = 0;
  v6 = (id)v5;
  (*(void (**)(uint64_t, _QWORD))(a3 + 16))(a3, a1 & 1);

}

uint64_t sub_227E438D4()
{
  type metadata accessor for CRDTModelSyncEntity();
  sub_227D68330((uint64_t *)&unk_255929EB8);
  return sub_227E5FFC0();
}

uint64_t sub_227E43910()
{
  uint64_t v1;

  v1 = sub_227E604AC();
  sub_227E6002C();
  swift_getMetatypeMetadata();
  sub_227E5FFC0();
  sub_227E6002C();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_227E4398C()
{
  uint64_t v0;

  swift_getMetatypeMetadata();
  sub_227E5FFC0();
  v0 = sub_227E5FF78();
  swift_bridgeObjectRelease();
  return v0;
}

void sub_227E439DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t ObjCClassFromMetadata;
  id v6;
  id v7;
  void *v8;
  id v9;
  uint64_t v10;

  v0 = sub_227E5F1B0();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0, v2);
  v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v6 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  sub_227E60338();

  sub_227E5F15C();
  swift_bridgeObjectRelease();
  v7 = objc_allocWithZone(MEMORY[0x24BDBB6B0]);
  v8 = (void *)sub_227E5F174();
  v9 = objc_msgSend(v7, sel_initWithContentsOfURL_, v8);

  if (v9)
    (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
  else
    __break(1u);
}

unint64_t sub_227E43B14()
{
  _QWORD *v0;
  uint64_t v1;
  unint64_t v2;

  v1 = qword_255929DF8;
  if (*(_QWORD *)((char *)v0 + qword_255929DF8))
  {
    v2 = *(_QWORD *)((char *)v0 + qword_255929DF8);
  }
  else
  {
    v2 = sub_227E43B78(v0);
    *(_QWORD *)((char *)v0 + v1) = v2;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v2;
}

unint64_t sub_227E43B78(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t inited;
  uint64_t aBlock;
  uint64_t v12;
  id (*v13)(uint64_t, uint64_t, uint64_t, uint64_t);
  void *v14;
  double (*v15)@<D0>(uint64_t@<X0>, void (*)(char *, _QWORD, uint64_t, uint64_t)@<X1>, NSObject *@<X2>, _OWORD *@<X8>);
  uint64_t v16;

  swift_getObjectType();
  v2 = *MEMORY[0x24BEE4EA0] & *a1;
  v3 = sub_227DD38D4();
  v5 = v4;
  v6 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = *(_OWORD *)(v2 + 80);
  *(_QWORD *)(v7 + 32) = *(_QWORD *)(v2 + 96);
  *(_QWORD *)(v7 + 40) = v6;
  *(_QWORD *)(v7 + 48) = v3;
  *(_QWORD *)(v7 + 56) = v5;
  v15 = sub_227E49170;
  v16 = v7;
  aBlock = MEMORY[0x24BDAC760];
  v12 = 1107296256;
  v13 = sub_227E45AEC;
  v14 = &unk_24F090A18;
  v8 = _Block_copy(&aBlock);
  swift_bridgeObjectRetain();
  swift_release();
  sub_227D68330((uint64_t *)&unk_255929E90);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_227E6F1B0;
  aBlock = v3;
  v12 = v5;
  sub_227E60458();
  *(_QWORD *)(inited + 72) = v8;
  return sub_227E3C05C(inited);
}

double sub_227E43CC8@<D0>(uint64_t a1@<X0>, void (*a2)(char *, _QWORD, uint64_t, uint64_t)@<X1>, NSObject *a3@<X2>, uint64_t a4@<X3>, unint64_t a5@<X4>, unint64_t a6@<X5>, uint64_t a7@<X6>, uint8_t *a8@<X7>, _OWORD *a9@<X8>, uint64_t a10)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  void *v70;
  uint64_t v71;
  NSObject *v72;
  os_log_type_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t v77;
  unint64_t v78;
  os_log_t v79;
  char v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  char *v85;
  unint64_t v86;
  char v87;
  NSObject *v88;
  os_log_type_t v89;
  unint64_t v90;
  uint8_t *v91;
  uint8_t *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  NSObject *v97;
  os_log_type_t v98;
  uint8_t *v99;
  double result;
  NSObject *v101;
  os_log_type_t v102;
  uint64_t v103;
  uint8_t *v104;
  uint8_t *v105;
  void *v106;
  uint8_t *v107;
  id v108;
  char *v109;
  uint64_t v110;
  id v111;
  uint64_t v112;
  uint64_t v113;
  void (*v114)(char *, char *, uint64_t);
  uint64_t v115;
  uint8_t *v116;
  unsigned int (*v117)(char *, uint64_t, uint64_t);
  void (*v118)(char *, uint64_t);
  uint64_t v119;
  unint64_t v120;
  NSObject *v121;
  os_log_type_t v122;
  uint8_t *v123;
  void (*v124)(_QWORD, _QWORD, _QWORD, _QWORD);
  void (*v125)(_QWORD, _QWORD, _QWORD, _QWORD);
  uint64_t v126;
  unint64_t v127;
  unint64_t v128;
  char *v129;
  os_log_type_t v130;
  uint8_t *v131;
  void (*v132)(_QWORD, _QWORD, _QWORD, _QWORD);
  uint64_t v133;
  char *v134;
  void (*v135)(char *, char *, uint64_t);
  char *v136;
  char *v137;
  char *v138;
  uint8_t *v139;
  uint64_t v140;
  unint64_t v141;
  NSObject *v142;
  os_log_type_t v143;
  uint8_t *v144;
  void (*v145)(_QWORD, _QWORD, _QWORD, _QWORD);
  uint64_t v146;
  unint64_t v147;
  unint64_t v148;
  uint64_t v149;
  void (*v150)(_QWORD, _QWORD, _QWORD, _QWORD);
  unint64_t v151;
  uint64_t v152;
  void (*v153)(char *, char *, uint64_t);
  char *v154;
  char *v155;
  char v156;
  uint64_t v157;
  uint8_t *v158;
  void (*v159)(char *, char *, uint64_t);
  char *v160;
  char *v161;
  char *v162;
  NSObject *v163;
  os_log_type_t v164;
  uint64_t v165;
  char *v166;
  void (*v167)(char *, uint64_t);
  uint64_t v168;
  os_log_type_t v169;
  unint64_t v170;
  unint64_t v171;
  char *v172;
  uint64_t v173;
  unint64_t v174;
  unint64_t v175;
  void (*v176)(_QWORD, _QWORD, _QWORD, _QWORD);
  uint64_t v177;
  uint8_t *v178;
  void (*v179)(char *, char *, uint64_t);
  char *v180;
  char *v181;
  os_log_t v182;
  NSObject *v183;
  os_log_type_t v184;
  int v185;
  uint64_t v186;
  uint64_t v187;
  unint64_t v188;
  void (*v189)(char *, uint64_t);
  os_log_t v190;
  uint64_t v191;
  unint64_t v192;
  char *v193;
  char *v194;
  os_log_t v195;
  uint64_t v196;
  char *v197;
  uint64_t v198;
  char *v199;
  char *v200;
  char *v201;
  char *v202;
  NSObject *v203;
  os_log_type_t v204;
  int v205;
  uint64_t v206;
  uint64_t v207;
  unint64_t v208;
  void (*v209)(char *, uint64_t);
  char *v210;
  uint64_t v211;
  unint64_t v212;
  char *v213;
  char *v214;
  os_log_t v215;
  uint64_t v216;
  uint64_t v217;
  char *v218;
  char *v219;
  unint64_t v220;
  void (*v221)(char *, uint64_t);
  uint64_t v222;
  char *v223;
  char *v224;
  NSObject *v225;
  os_log_type_t v226;
  uint8_t *v227;
  char *v228;
  uint64_t v229;
  unint64_t v230;
  unint64_t v231;
  void (*v232)(_QWORD, _QWORD, _QWORD, _QWORD);
  unint64_t v233;
  void (*v234)(char *, uint64_t);
  char *v235;
  uint64_t v236;
  uint64_t v237;
  char *v238;
  uint64_t v239;
  void *v240;
  uint64_t v241;
  unint64_t v242;
  unint64_t v243;
  unint64_t v244;
  uint64_t v245;
  uint64_t v246;
  void (*v247)(char *, uint64_t);
  _OWORD *v248;
  void *v249;
  char *v250;
  uint64_t v251;
  unint64_t v252;
  char *v253;
  char *v254;
  char *v255;
  uint64_t v256;
  char *v257;
  char *v258;
  char *v259;
  char *v260;
  char *v261;
  uint64_t v262;
  char *v263;
  char *v264;
  os_log_t v265;
  char *v266;
  char *v267;
  uint64_t v268;
  uint64_t v269;
  uint8_t *v270;
  char *v271;
  char *v272;
  _OWORD *v273;
  void (*v274)(char *, _QWORD, uint64_t, uint64_t);
  os_log_t v275;
  uint8_t *v276;
  uint8_t *v277;
  void (*v278)(char *, uint64_t);
  unint64_t v279;
  uint64_t v280;
  uint64_t v281;
  void (*v282)(char *, uint64_t);
  uint64_t v283[2];
  _QWORD v284[2];
  char v285[8];
  uint64_t v286;
  char v287[8];
  uint64_t v288;
  _QWORD v289[6];

  v277 = a8;
  v279 = a5;
  v275 = a3;
  v274 = a2;
  v276 = (uint8_t *)a10;
  v280 = sub_227E5F588();
  v15 = *(_QWORD *)(v280 - 8);
  MEMORY[0x24BDAC7A8](v280, v16);
  v18 = (char *)&v249 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v256 = sub_227E5FCD8();
  v262 = *(_QWORD *)(v256 - 8);
  v20 = MEMORY[0x24BDAC7A8](v256, v19);
  v261 = (char *)&v249 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v270 = *(uint8_t **)(a7 - 8);
  v23 = MEMORY[0x24BDAC7A8](v20, v22);
  v265 = (os_log_t)((char *)&v249 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  v26 = MEMORY[0x24BDAC7A8](v23, v25);
  v263 = (char *)&v249 - v27;
  v29 = MEMORY[0x24BDAC7A8](v26, v28);
  v260 = (char *)&v249 - v30;
  v32 = MEMORY[0x24BDAC7A8](v29, v31);
  v258 = (char *)&v249 - v33;
  v35 = MEMORY[0x24BDAC7A8](v32, v34);
  v255 = (char *)&v249 - v36;
  v38 = MEMORY[0x24BDAC7A8](v35, v37);
  v264 = (char *)&v249 - v39;
  v41 = MEMORY[0x24BDAC7A8](v38, v40);
  v254 = (char *)&v249 - v42;
  v44 = MEMORY[0x24BDAC7A8](v41, v43);
  v259 = (char *)&v249 - v45;
  v47 = MEMORY[0x24BDAC7A8](v44, v46);
  v257 = (char *)&v249 - v48;
  v50 = MEMORY[0x24BDAC7A8](v47, v49);
  v266 = (char *)&v249 - v51;
  MEMORY[0x24BDAC7A8](v50, v52);
  v267 = (char *)&v249 - v53;
  v278 = (void (*)(char *, uint64_t))a7;
  v269 = sub_227E6038C();
  v268 = *(_QWORD *)(v269 - 8);
  v55 = MEMORY[0x24BDAC7A8](v269, v54);
  v57 = (char *)&v249 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = MEMORY[0x24BDAC7A8](v55, v58);
  v61 = (char *)&v249 - v60;
  v63 = MEMORY[0x24BDAC7A8](v59, v62);
  v272 = (char *)&v249 - v64;
  MEMORY[0x24BDAC7A8](v63, v65);
  v271 = (char *)&v249 - v66;
  swift_beginAccess();
  v67 = MEMORY[0x22E2AA96C](a4 + 16);
  if (!v67)
  {
LABEL_7:
    swift_beginAccess();
    v69 = MEMORY[0x22E2AA96C](a4 + 16);
    if (v69)
    {
      v70 = (void *)v69;
      v71 = v280;
      (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v18, v69 + qword_25592FEC8, v280);

      sub_227D635B0(a1, (uint64_t)v285);
      swift_retain_n();
      swift_bridgeObjectRetain_n();
      v72 = sub_227E5F570();
      v73 = sub_227E60248();
      if (os_log_type_enabled(v72, v73))
      {
        v74 = swift_slowAlloc();
        v275 = (os_log_t)swift_slowAlloc();
        v283[0] = (uint64_t)v275;
        *(_DWORD *)v74 = 136315650;
        v273 = a9;
        swift_beginAccess();
        v289[0] = MEMORY[0x22E2AA96C](a4 + 16);
        type metadata accessor for CRDTModelCloudDataManager(255, (uint64_t)v278, (uint64_t)v277, (uint64_t)v276);
        sub_227E6038C();
        v75 = sub_227E5FFC0();
        v289[0] = sub_227D634E0(v75, v76, v283);
        sub_227E603B0();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v74 + 12) = 2080;
        sub_227D635B0((uint64_t)v285, (uint64_t)v289);
        v77 = sub_227E5FFC0();
        v289[0] = sub_227D634E0(v77, v78, v283);
        sub_227E603B0();
        a9 = v273;
        swift_bridgeObjectRelease();
        sub_227D58120((uint64_t)v285);
        *(_WORD *)(v74 + 22) = 2080;
        swift_bridgeObjectRetain();
        v289[0] = sub_227D634E0(v279, a6, v283);
        sub_227E603B0();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_227D4F000, v72, v73, "CloudSyncConflictResolver: self=%s key=%s is not equal to recordType=%s", (uint8_t *)v74, 0x20u);
        v79 = v275;
        swift_arrayDestroy();
        MEMORY[0x22E2AA8AC](v79, -1, -1);
        MEMORY[0x22E2AA8AC](v74, -1, -1);

        (*(void (**)(char *, uint64_t))(v15 + 8))(v18, v280);
      }
      else
      {
        swift_release_n();
        sub_227D58120((uint64_t)v285);

        swift_bridgeObjectRelease_n();
        (*(void (**)(char *, uint64_t))(v15 + 8))(v18, v71);
      }
    }
    goto LABEL_36;
  }
  v68 = (char *)v67;
  sub_227D635B0(a1, (uint64_t)v285);
  if ((swift_dynamicCast() & 1) == 0)
  {

    goto LABEL_7;
  }
  v253 = v68;
  v273 = a9;
  if (v289[0] == v279 && v289[1] == a6)
  {
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  v80 = sub_227E60698();
  swift_bridgeObjectRelease();
  if ((v80 & 1) == 0)
  {

    a9 = v273;
    goto LABEL_7;
  }
LABEL_13:
  v81 = v287;
  sub_227E4919C((uint64_t)v274, (uint64_t)v285);
  sub_227E4919C((uint64_t)v275, (uint64_t)v287);
  a9 = v273;
  if (v286)
  {
    sub_227E4919C((uint64_t)v285, (uint64_t)v289);
    v82 = MEMORY[0x24BDCDDE8];
    if (swift_dynamicCast())
    {
      v83 = v289[4];
      v84 = v289[5];
      v85 = v253;
      if (!v288)
      {
        v101 = sub_227E5F570();
        v102 = sub_227E60248();
        if (os_log_type_enabled(v101, v102))
        {
          v103 = v82;
          v104 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v104 = 0;
          _os_log_impl(&dword_227D4F000, v101, v102, "CloudSyncConflictResolver: no incoming data", v104, 2u);
          v105 = v104;
          v82 = v103;
          MEMORY[0x22E2AA8AC](v105, -1, -1);
        }

        sub_227D58120((uint64_t)v289);
        sub_227D5809C((uint64_t)v287, qword_253F3B0B0);
        sub_227D5809C((uint64_t)v285, qword_253F3B0B0);
        sub_227DD00E0(v83, v84);
        goto LABEL_32;
      }
      sub_227E4919C((uint64_t)v287, (uint64_t)v284);
      if (swift_dynamicCast())
      {
        v86 = v283[1];
        v280 = v283[0];
        sub_227DDDAC0(v83, v84);
        if ((v87 & 1) != 0)
        {
          v88 = sub_227E5F570();
          v89 = sub_227E60248();
          if (os_log_type_enabled(v88, v89))
          {
            v90 = v86;
            v91 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)v91 = 0;
            _os_log_impl(&dword_227D4F000, v88, v89, "CloudSyncConflictResolver: incoming data and existing data are identical", v91, 2u);
            v92 = v91;
            v86 = v90;
            MEMORY[0x22E2AA8AC](v92, -1, -1);
          }

          *((_QWORD *)a9 + 3) = MEMORY[0x24BDCDDE8];
          sub_227DD1FD4(v280, v86);

          *(_QWORD *)a9 = v83;
          *((_QWORD *)a9 + 1) = v84;
LABEL_21:
          sub_227D58120((uint64_t)v284);
          sub_227D58120((uint64_t)v289);
          v93 = (uint64_t)v81;
LABEL_46:
          sub_227D5809C(v93, qword_253F3B0B0);
          sub_227D5809C((uint64_t)v285, qword_253F3B0B0);
          return result;
        }
        v279 = v86;
        v275 = (os_log_t)qword_255929DF0;
        v106 = *(void **)&v85[qword_255929DF0];
        sub_227DD00E0(v83, v84);
        v107 = (uint8_t *)*((_QWORD *)v277 + 1);
        v108 = v106;
        v109 = v271;
        v251 = v83;
        v110 = (uint64_t)v278;
        v277 = v107;
        sub_227E5FD50();
        v250 = v287;
        v274 = (void (*)(char *, _QWORD, uint64_t, uint64_t))*((_QWORD *)v270 + 7);
        v274(v109, 0, 1, v110);
        v111 = *(id *)((char *)&v275->isa + (_QWORD)v85);
        sub_227DD00E0(v280, v279);
        sub_227E5FD50();
        v252 = v84;
        v249 = 0;
        v112 = v268;
        v274(v272, 0, 1, v110);
        v113 = v110;
        v114 = *(void (**)(char *, char *, uint64_t))(v112 + 16);
        v115 = v269;
        v114(v61, v271, v269);
        v116 = v270;
        v117 = (unsigned int (*)(char *, uint64_t, uint64_t))*((_QWORD *)v270 + 6);
        if (v117(v61, 1, v113) == 1)
        {
          v118 = *(void (**)(char *, uint64_t))(v112 + 8);
          v118(v61, v115);
          v119 = v251;
          v120 = v252;
          sub_227DD00E0(v251, v252);
          sub_227DD00E0(v119, v120);
          v121 = sub_227E5F570();
          v122 = sub_227E60248();
          if (os_log_type_enabled(v121, v122))
          {
            v123 = (uint8_t *)swift_slowAlloc();
            v124 = (void (*)(_QWORD, _QWORD, _QWORD, _QWORD))swift_slowAlloc();
            v278 = v118;
            v125 = v124;
            v282 = v124;
            v277 = v123;
            *(_DWORD *)v123 = 136315138;
            v276 = v123 + 4;
            sub_227DD00E0(v119, v120);
            v126 = sub_227E5F1C8();
            v128 = v127;
            sub_227DD1FD4(v119, v120);
            v129 = v250;
            v281 = sub_227D634E0(v126, v128, (uint64_t *)&v282);
            sub_227E603B0();
            swift_bridgeObjectRelease();
            sub_227DD1FD4(v119, v120);
            sub_227DD1FD4(v119, v120);
            v130 = v122;
            v131 = v277;
            _os_log_impl(&dword_227D4F000, v121, v130, "CloudSyncConflictResolver: failed to deserialize either existingModel from %s", v277, 0xCu);
            swift_arrayDestroy();
            v132 = v125;
            v118 = v278;
            v133 = v269;
            MEMORY[0x22E2AA8AC](v132, -1, -1);
            MEMORY[0x22E2AA8AC](v131, -1, -1);

            v134 = v272;
          }
          else
          {
            v133 = v115;

            sub_227DD1FD4(v119, v120);
            sub_227DD1FD4(v119, v120);
            v134 = v272;
            v129 = v250;
          }
          *((_QWORD *)a9 + 3) = MEMORY[0x24BDCDDE8];

          sub_227DD1FD4(v280, v279);
          *(_QWORD *)a9 = v119;
          *((_QWORD *)a9 + 1) = v120;
          v118(v134, v133);
          v118(v271, v133);
          sub_227D58120((uint64_t)v284);
          sub_227D58120((uint64_t)v289);
          v93 = (uint64_t)v129;
          goto LABEL_46;
        }
        v135 = (void (*)(char *, char *, uint64_t))*((_QWORD *)v116 + 4);
        v136 = v267;
        v135(v267, v61, v113);
        v137 = v272;
        v114(v57, v272, v115);
        if (v117(v57, 1, v113) == 1)
        {
          v138 = v57;
          v139 = *(uint8_t **)(v268 + 8);
          ((void (*)(char *, uint64_t))v139)(v138, v115);
          v140 = v280;
          v141 = v279;
          sub_227DD00E0(v280, v279);
          sub_227DD00E0(v140, v141);
          v142 = sub_227E5F570();
          v143 = sub_227E60248();
          if (os_log_type_enabled(v142, v143))
          {
            v144 = (uint8_t *)swift_slowAlloc();
            v145 = (void (*)(_QWORD, _QWORD, _QWORD, _QWORD))swift_slowAlloc();
            v282 = v145;
            v277 = v139;
            *(_DWORD *)v144 = 136315138;
            v276 = v144 + 4;
            sub_227DD00E0(v140, v141);
            v146 = sub_227E5F1C8();
            v148 = v147;
            sub_227DD1FD4(v280, v141);
            v149 = v146;
            v81 = v250;
            v137 = v272;
            v281 = sub_227D634E0(v149, v148, (uint64_t *)&v282);
            v139 = v277;
            sub_227E603B0();
            v140 = v280;
            swift_bridgeObjectRelease();
            sub_227DD1FD4(v140, v141);
            sub_227DD1FD4(v140, v141);
            _os_log_impl(&dword_227D4F000, v142, v143, "CloudSyncConflictResolver: failed to deserialize either incomingModel from %s", v144, 0xCu);
            swift_arrayDestroy();
            v150 = v145;
            v115 = v269;
            MEMORY[0x22E2AA8AC](v150, -1, -1);
            MEMORY[0x22E2AA8AC](v144, -1, -1);

            v151 = v252;
            v152 = v251;
          }
          else
          {

            sub_227DD1FD4(v140, v141);
            sub_227DD1FD4(v140, v141);
            v151 = v252;
            v152 = v251;
            v81 = v250;
          }
          *((_QWORD *)a9 + 3) = MEMORY[0x24BDCDDE8];

          sub_227DD1FD4(v140, v141);
          *(_QWORD *)a9 = v152;
          *((_QWORD *)a9 + 1) = v151;
          (*((void (**)(char *, uint64_t))v270 + 1))(v267, (uint64_t)v278);
          ((void (*)(char *, uint64_t))v139)(v137, v115);
          ((void (*)(char *, uint64_t))v139)(v271, v115);
          goto LABEL_21;
        }
        v153 = v135;
        v154 = v266;
        v153(v266, v57, v113);
        v155 = v136;
        if ((sub_227E5FD20() & 1) == 0)
        {
          v177 = v113;
          v178 = v270;
          v179 = (void (*)(char *, char *, uint64_t))*((_QWORD *)v270 + 2);
          v180 = v154;
          v181 = v263;
          v179(v263, v180, v177);
          v182 = v265;
          v179((char *)v265, v155, v177);
          v183 = sub_227E5F570();
          v184 = sub_227E60248();
          v185 = v184;
          if (os_log_type_enabled(v183, v184))
          {
            v186 = swift_slowAlloc();
            v278 = (void (*)(char *, uint64_t))swift_slowAlloc();
            v282 = (void (*)(_QWORD, _QWORD, _QWORD, _QWORD))v278;
            *(_DWORD *)v186 = 136315394;
            LODWORD(v277) = v185;
            v187 = sub_227E60674();
            v281 = sub_227D634E0(v187, v188, (uint64_t *)&v282);
            v275 = v183;
            sub_227E603B0();
            swift_bridgeObjectRelease();
            v189 = (void (*)(char *, uint64_t))*((_QWORD *)v178 + 1);
            v189(v181, v177);
            *(_WORD *)(v186 + 12) = 2080;
            v190 = v265;
            v191 = sub_227E60674();
            v281 = sub_227D634E0(v191, v192, (uint64_t *)&v282);
            v193 = v266;
            v194 = v250;
            v137 = v272;
            sub_227E603B0();
            swift_bridgeObjectRelease();
            v189((char *)v190, v177);
            v195 = v275;
            _os_log_impl(&dword_227D4F000, v275, (os_log_type_t)v277, "CloudSyncConflictResolver: no delta on incoming=%s from existing=%s", (uint8_t *)v186, 0x16u);
            v196 = (uint64_t)v278;
            swift_arrayDestroy();
            MEMORY[0x22E2AA8AC](v196, -1, -1);
            v197 = v267;
            MEMORY[0x22E2AA8AC](v186, -1, -1);

            v198 = MEMORY[0x24BDCDDE8];
          }
          else
          {

            v189 = (void (*)(char *, uint64_t))*((_QWORD *)v178 + 1);
            v189(v181, v177);
            v189((char *)v182, v177);
            v198 = MEMORY[0x24BDCDDE8];
            v194 = v250;
            v193 = v266;
            v197 = v267;
          }
          *((_QWORD *)a9 + 3) = v198;

          sub_227DD1FD4(v280, v279);
          v220 = v252;
          *(_QWORD *)a9 = v251;
          *((_QWORD *)a9 + 1) = v220;
          v189(v193, v177);
          v189(v197, v177);
          v221 = *(void (**)(char *, uint64_t))(v268 + 8);
          v222 = v269;
          v221(v137, v269);
          v221(v271, v222);
          sub_227D58120((uint64_t)v284);
          sub_227D58120((uint64_t)v289);
          v93 = (uint64_t)v194;
          goto LABEL_46;
        }
        v156 = sub_227E5FD20();
        v157 = v113;
        v158 = v270;
        v159 = (void (*)(char *, char *, uint64_t))*((_QWORD *)v270 + 2);
        if ((v156 & 1) == 0)
        {
          v199 = v154;
          v200 = v258;
          v159(v258, v155, v157);
          v201 = v260;
          v202 = v199;
          v159(v260, v199, v157);
          v203 = sub_227E5F570();
          v204 = sub_227E60248();
          v205 = v204;
          if (os_log_type_enabled(v203, v204))
          {
            v206 = swift_slowAlloc();
            v278 = (void (*)(char *, uint64_t))swift_slowAlloc();
            v282 = (void (*)(_QWORD, _QWORD, _QWORD, _QWORD))v278;
            *(_DWORD *)v206 = 136315394;
            LODWORD(v277) = v205;
            v207 = sub_227E60674();
            v281 = sub_227D634E0(v207, v208, (uint64_t *)&v282);
            v275 = v203;
            sub_227E603B0();
            swift_bridgeObjectRelease();
            v209 = (void (*)(char *, uint64_t))*((_QWORD *)v158 + 1);
            v209(v200, v157);
            *(_WORD *)(v206 + 12) = 2080;
            v210 = v260;
            v211 = sub_227E60674();
            v281 = sub_227D634E0(v211, v212, (uint64_t *)&v282);
            v213 = v266;
            v214 = v250;
            sub_227E603B0();
            swift_bridgeObjectRelease();
            v209(v210, v157);
            v215 = v275;
            _os_log_impl(&dword_227D4F000, v275, (os_log_type_t)v277, "CloudSyncConflictResolver: no delta on existing=%s from incoming=%s", (uint8_t *)v206, 0x16u);
            v216 = (uint64_t)v278;
            swift_arrayDestroy();
            MEMORY[0x22E2AA8AC](v216, -1, -1);
            v217 = v206;
            v218 = v267;
            MEMORY[0x22E2AA8AC](v217, -1, -1);

            v219 = v272;
          }
          else
          {

            v209 = (void (*)(char *, uint64_t))*((_QWORD *)v158 + 1);
            v209(v200, v157);
            v209(v201, v157);
            v219 = v272;
            v214 = v250;
            v213 = v202;
            v218 = v267;
          }
          *((_QWORD *)a9 + 3) = MEMORY[0x24BDCDDE8];

          sub_227DD1FD4(v251, v252);
          v233 = v279;
          *(_QWORD *)a9 = v280;
          *((_QWORD *)a9 + 1) = v233;
          v209(v213, v157);
          v209(v218, v157);
          v234 = *(void (**)(char *, uint64_t))(v268 + 8);
          v235 = v219;
          v236 = v269;
          v234(v235, v269);
          v234(v271, v236);
          sub_227D58120((uint64_t)v284);
          sub_227D58120((uint64_t)v289);
          v93 = (uint64_t)v214;
          goto LABEL_46;
        }
        v160 = v155;
        v161 = v257;
        v159(v257, v160, v157);
        v162 = v259;
        v159(v259, v154, v157);
        v163 = sub_227E5F570();
        v164 = sub_227E60248();
        if (os_log_type_enabled(v163, v164))
        {
          v165 = swift_slowAlloc();
          v274 = (void (*)(char *, _QWORD, uint64_t, uint64_t))swift_slowAlloc();
          v282 = (void (*)(_QWORD, _QWORD, _QWORD, _QWORD))v274;
          *(_DWORD *)v165 = 136315394;
          v263 = (char *)(v165 + 4);
          v265 = v163;
          v166 = v254;
          v159(v254, v161, v157);
          v167 = (void (*)(char *, uint64_t))*((_QWORD *)v158 + 1);
          v167(v161, v157);
          v168 = sub_227E60674();
          v169 = v164;
          v171 = v170;
          v167(v166, v157);
          v281 = sub_227D634E0(v168, v171, (uint64_t *)&v282);
          sub_227E603B0();
          swift_bridgeObjectRelease();
          *(_WORD *)(v165 + 12) = 2080;
          v270 = (uint8_t *)(v165 + 14);
          v172 = v259;
          v159(v166, v259, v157);
          v167(v172, v157);
          v173 = sub_227E60674();
          v175 = v174;
          v167(v166, v157);
          v281 = sub_227D634E0(v173, v175, (uint64_t *)&v282);
          v154 = v266;
          sub_227E603B0();
          swift_bridgeObjectRelease();
          v163 = v265;
          _os_log_impl(&dword_227D4F000, v265, v169, "CloudSyncConflictResolver: merging existing=%s with incoming=%s", (uint8_t *)v165, 0x16u);
          v176 = (void (*)(_QWORD, _QWORD, _QWORD, _QWORD))v274;
          swift_arrayDestroy();
          MEMORY[0x22E2AA8AC](v176, -1, -1);
          MEMORY[0x22E2AA8AC](v165, -1, -1);
        }
        else
        {
          v167 = (void (*)(char *, uint64_t))*((_QWORD *)v158 + 1);
          v167(v162, v157);
          v167(v161, v157);
        }

        v223 = v255;
        v224 = v264;
        sub_227E5FD44();
        v159(v223, v224, v157);
        v225 = sub_227E5F570();
        v226 = sub_227E60248();
        if (os_log_type_enabled(v225, v226))
        {
          v227 = (uint8_t *)swift_slowAlloc();
          v274 = (void (*)(char *, _QWORD, uint64_t, uint64_t))swift_slowAlloc();
          v282 = (void (*)(_QWORD, _QWORD, _QWORD, _QWORD))v274;
          *(_DWORD *)v227 = 136315138;
          v270 = v227 + 4;
          v228 = v254;
          v159(v254, v223, v157);
          v167(v223, v157);
          v229 = sub_227E60674();
          v231 = v230;
          v167(v228, v157);
          v281 = sub_227D634E0(v229, v231, (uint64_t *)&v282);
          v154 = v266;
          sub_227E603B0();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_227D4F000, v225, v226, "CloudSyncConflictResolver: merged=%s", v227, 0xCu);
          v232 = (void (*)(_QWORD, _QWORD, _QWORD, _QWORD))v274;
          swift_arrayDestroy();
          MEMORY[0x22E2AA8AC](v232, -1, -1);
          MEMORY[0x22E2AA8AC](v227, -1, -1);
        }
        else
        {
          v167(v223, v157);
        }

        v85 = v253;
        v237 = (uint64_t)v250;
        v238 = v272;
        v239 = v256;
        v240 = v249;
        (*(void (**)(char *, _QWORD, uint64_t))(v262 + 104))(v261, *MEMORY[0x24BE184D8], v256);
        v241 = sub_227E5FBF4();
        if (v240)
        {
          sub_227DD1FD4(v280, v279);
          sub_227DD1FD4(v251, v252);

          v83 = 0;
          v243 = 0xF000000000000000;
        }
        else
        {
          v83 = v241;
          v244 = v242;
          sub_227DD1FD4(v280, v279);
          sub_227DD1FD4(v251, v252);
          v243 = v244;
        }
        v245 = v269;
        (*(void (**)(char *, uint64_t))(v262 + 8))(v261, v239);
        v246 = (uint64_t)v278;
        v167(v264, (uint64_t)v278);
        v167(v154, v246);
        v167(v267, v246);
        v247 = *(void (**)(char *, uint64_t))(v268 + 8);
        v247(v238, v245);
        v247(v271, v245);
        sub_227D58120((uint64_t)v284);
        sub_227D58120((uint64_t)v289);
        sub_227D5809C(v237, qword_253F3B0B0);
        sub_227D5809C((uint64_t)v285, qword_253F3B0B0);
        if (v243 >> 60 == 15)
        {

          result = 0.0;
          v248 = v273;
          *v273 = 0u;
          v248[1] = 0u;
          return result;
        }
        v84 = v243;
        sub_227DD00E0(v83, v243);
        a9 = v273;
        v82 = MEMORY[0x24BDCDDE8];
LABEL_32:
        *((_QWORD *)a9 + 3) = v82;
        sub_227DD7918(v83, v84);

        *(_QWORD *)a9 = v83;
        *((_QWORD *)a9 + 1) = v84;
        return result;
      }
      sub_227DD1FD4(v83, v84);
      sub_227D58120((uint64_t)v284);
      goto LABEL_34;
    }
    sub_227D58120((uint64_t)v289);
    v85 = v253;
LABEL_35:
    sub_227D5809C((uint64_t)v285, (uint64_t *)&unk_255929EA0);

LABEL_36:
    result = 0.0;
    *a9 = 0u;
    a9[1] = 0u;
    return result;
  }
  v85 = v253;
  if (!v288)
    goto LABEL_35;
  sub_227E4919C((uint64_t)v287, (uint64_t)v289);
  v94 = MEMORY[0x24BDCDDE8];
  if (!swift_dynamicCast())
  {
LABEL_34:
    sub_227D58120((uint64_t)v289);
    goto LABEL_35;
  }
  v95 = v284[0];
  v96 = v284[1];
  v97 = sub_227E5F570();
  v98 = sub_227E60248();
  if (os_log_type_enabled(v97, v98))
  {
    v99 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v99 = 0;
    _os_log_impl(&dword_227D4F000, v97, v98, "CloudSyncConflictResolver: no existing data", v99, 2u);
    MEMORY[0x22E2AA8AC](v99, -1, -1);
  }

  sub_227D58120((uint64_t)v289);
  sub_227D5809C((uint64_t)v287, qword_253F3B0B0);
  sub_227D5809C((uint64_t)v285, qword_253F3B0B0);
  *((_QWORD *)a9 + 3) = v94;

  *(_QWORD *)a9 = v95;
  *((_QWORD *)a9 + 1) = v96;
  return result;
}

id sub_227E45AEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void (*v7)(_QWORD *__return_ptr, _QWORD *, __int128 *, __int128 *);
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void *v13;
  _QWORD v15[3];
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  _QWORD v21[4];

  v7 = *(void (**)(_QWORD *__return_ptr, _QWORD *, __int128 *, __int128 *))(a1 + 32);
  v21[3] = swift_getObjectType();
  v21[0] = a2;
  if (a3)
  {
    *((_QWORD *)&v20 + 1) = swift_getObjectType();
    *(_QWORD *)&v19 = a3;
    if (a4)
    {
LABEL_3:
      *((_QWORD *)&v18 + 1) = swift_getObjectType();
      *(_QWORD *)&v17 = a4;
      goto LABEL_6;
    }
  }
  else
  {
    v19 = 0u;
    v20 = 0u;
    if (a4)
      goto LABEL_3;
  }
  v17 = 0u;
  v18 = 0u;
LABEL_6:
  swift_retain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  v7(v15, v21, &v19, &v17);
  swift_release();
  sub_227D5809C((uint64_t)&v17, qword_253F3B0B0);
  sub_227D5809C((uint64_t)&v19, qword_253F3B0B0);
  v8 = v16;
  if (v16)
  {
    v9 = sub_227D572A4(v15, v16);
    v10 = *(_QWORD *)(v8 - 8);
    MEMORY[0x24BDAC7A8](v9, v9);
    v12 = (char *)v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v10 + 16))(v12);
    v13 = (void *)sub_227E6068C();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v8);
    sub_227D58120((uint64_t)v15);
  }
  else
  {
    v13 = 0;
  }
  sub_227D58120((uint64_t)v21);
  return v13;
}

void sub_227E45C70(char a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  NSObject *v7;
  os_log_type_t v8;
  _BOOL4 v9;
  uint64_t *v10;
  uint8_t *v11;
  uint64_t v12;
  void *v13;
  id v14;
  void *v15;
  uint8_t *v16;
  uint64_t v17;
  id v18;

  v2 = v1;
  swift_getObjectType();
  v4 = *v1;
  v5 = *MEMORY[0x24BEE4EA0];
  objc_msgSend(*(id *)((char *)v1 + qword_255929DD8), sel_setEnableCloudSync_, a1 & 1);
  v6 = *(void **)((char *)v1 + qword_255929DE0);
  v18 = objc_msgSend(v6, sel_privateCloudDatabaseController);
  v7 = sub_227E5F570();
  v8 = sub_227E60248();
  v9 = os_log_type_enabled(v7, v8);
  if ((a1 & 1) != 0)
  {
    v10 = (uint64_t *)(v5 & v4);
    if (v9)
    {
      v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v11 = 0;
      _os_log_impl(&dword_227D4F000, v7, v8, "CRDTModelCloudDataManager updateWithSyncEnabled: enabled sync to CK", v11, 2u);
      MEMORY[0x22E2AA8AC](v11, -1, -1);
    }

    v12 = *(_QWORD *)((char *)v2 + qword_255929DC8);
    sub_227DD38D4();
    v13 = (void *)sub_227E5FF78();
    swift_bridgeObjectRelease();
    objc_msgSend(v18, sel_addObserver_recordType_, v12, v13);

    v14 = objc_msgSend(v6, sel_transactionManager);
    type metadata accessor for CRDTModelCloudDataManager(0, v10[10], v10[11], v10[12]);
    sub_227DD38D4();
    v15 = (void *)sub_227E5FF78();
    swift_bridgeObjectRelease();
    objc_msgSend(v14, sel_signalSyncToCKTransactionForEntityName_syncManager_, v15, v12);

  }
  else
  {
    if (v9)
    {
      v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v16 = 0;
      _os_log_impl(&dword_227D4F000, v7, v8, "CRDTModelCloudDataManager updateWithSyncEnabled: disabled sync to CK", v16, 2u);
      MEMORY[0x22E2AA8AC](v16, -1, -1);
    }

    v17 = *(_QWORD *)((char *)v2 + qword_255929DC8);
    sub_227DD38D4();
    v15 = (void *)sub_227E5FF78();
    swift_bridgeObjectRelease();
    objc_msgSend(v18, sel_removeObserver_recordType_, v17, v15);
  }

}

char *sub_227E45ED4(void *a1, void *a2, void *a3, uint64_t a4)
{
  void *v4;
  objc_class *ObjectType;
  _BYTE *v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  void *v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  void *v22;
  uint64_t ObjCClassFromMetadata;
  id v24;
  char *v25;
  void *v26;
  void *v27;
  char *v28;
  id v29;
  id v30;
  id v31;
  void *v32;
  void *v33;
  char *v34;
  id v35;
  uint64_t v37;
  id v38;
  id v39;
  objc_super v40;
  char v41[16];

  ObjectType = (objc_class *)swift_getObjectType();
  v10 = v4;
  sub_227E60494();
  swift_bridgeObjectRelease();
  strcpy(v41, "CRDTModelSync.");
  v41[15] = -18;
  sub_227DD38D4();
  sub_227E6002C();
  swift_bridgeObjectRelease();
  sub_227E5F57C();
  *(_QWORD *)&v10[qword_255929DE8] = 0;
  *(_QWORD *)&v10[qword_255929DF8] = 0;
  *(_QWORD *)&v10[qword_25592FED0 + 8] = 0;
  swift_unknownObjectWeakInit();
  v10[qword_25592FED8] = 0;
  *(_QWORD *)&v10[qword_255929DF0] = a2;
  *(_QWORD *)&v10[qword_255929E00] = a4;
  v39 = a2;
  swift_unknownObjectRetain();
  v11 = objc_msgSend(a3, sel_managedObjectContext);
  *(_QWORD *)&v10[qword_255929DC0] = a3;
  *(_QWORD *)&v10[qword_255929DE0] = a1;
  type metadata accessor for CRDTModelSyncMapper();
  swift_allocObject();
  v12 = a3;
  v13 = a1;
  v37 = CRDTModelSyncMapper.init()();
  v14 = objc_msgSend(objc_allocWithZone((Class)BCCloudDataSyncManager), sel_initWithCloudKitController_dataMapper_, v13, v37);
  *(_QWORD *)&v10[qword_255929DC8] = v14;
  v15 = v14;
  v38 = v11;
  v16 = (void *)sub_227E4398C();
  v17 = objc_msgSend(objc_allocWithZone((Class)BCCloudChangeTokenController), sel_initWithMOC_zoneName_cloudKitController_, v38, v16, v13);

  *(_QWORD *)&v10[qword_255929DD8] = v17;
  v18 = v12;
  sub_227E438D4();
  type metadata accessor for CRDTModelSyncEntity();
  type metadata accessor for CRDTModelSync();
  v19 = objc_allocWithZone((Class)BCCloudDataManager);
  v20 = v13;
  v21 = v15;
  swift_retain();
  v22 = (void *)sub_227E5FF78();
  swift_bridgeObjectRelease();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v24 = objc_msgSend(v19, sel_initWithCloudDataSource_entityName_notificationName_immutableClass_mutableClass_syncManager_cloudKitController_dataMapper_, v18, v22, 0, ObjCClassFromMetadata, swift_getObjCClassFromMetadata(), v21, v20, v37);

  swift_release();
  *(_QWORD *)&v10[qword_255929DD0] = v24;

  v40.receiver = v10;
  v40.super_class = ObjectType;
  v25 = (char *)objc_msgSendSuper2(&v40, sel_init);
  sub_227D52DBC(0, &qword_255929EB0);
  v26 = *(void **)&v25[qword_255929DD8];
  v27 = *(void **)&v25[qword_255929DE0];
  v28 = v25;
  v29 = v26;
  v30 = objc_msgSend(v27, sel_privateCloudDatabaseController);
  v31 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithZoneDataManager_tokenController_databaseController_, v28, v29, v30);

  v32 = *(void **)&v28[qword_255929DE8];
  *(_QWORD *)&v28[qword_255929DE8] = v31;

  v33 = *(void **)&v28[qword_255929DC8];
  v34 = v28;
  v35 = v33;
  objc_msgSend(v35, sel_setDelegate_, v34);

  swift_release();
  swift_unknownObjectRelease();
  return v34;
}

id sub_227E4632C()
{
  char *v0;
  objc_class *ObjectType;
  id v2;
  uint64_t v3;
  objc_super v5;

  ObjectType = (objc_class *)swift_getObjectType();
  v2 = objc_msgSend(*(id *)&v0[qword_255929DE0], sel_privateCloudDatabaseController);
  v3 = qword_255929DC8;
  objc_msgSend(v2, sel_removeObserver_, *(_QWORD *)&v0[qword_255929DC8]);

  objc_msgSend(*(id *)&v0[v3], sel_setDelegate_, 0);
  v5.receiver = v0;
  v5.super_class = ObjectType;
  return objc_msgSendSuper2(&v5, sel_dealloc);
}

id sub_227E463C8(void *a1)
{
  id v1;

  v1 = a1;
  return sub_227E4632C();
}

uint64_t sub_227E463EC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1 + qword_25592FEC8;
  v3 = sub_227E5F588();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);

  swift_bridgeObjectRelease();
  sub_227DE0034(a1 + qword_25592FED0);
  return swift_unknownObjectRelease();
}

void sub_227E464CC(uint64_t a1, void *a2, uint64_t a3, void (*a4)(void))
{
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  id v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  const char *v23;
  uint64_t v24;

  v7 = a3 + 16;
  swift_beginAccess();
  v8 = MEMORY[0x22E2AA96C](v7);
  if (!v8)
  {
    a4();
    return;
  }
  v9 = (void *)v8;
  if (a2)
  {
    v10 = a2;
    v11 = a2;
    v12 = sub_227E5F570();
    v13 = sub_227E60230();
    if (os_log_type_enabled(v12, v13))
    {
      v14 = (uint8_t *)swift_slowAlloc();
      v15 = swift_slowAlloc();
      v24 = v15;
      *(_DWORD *)v14 = 136315138;
      swift_getErrorValue();
      v16 = sub_227E606D4();
      sub_227D634E0(v16, v17, &v24);
      sub_227E603B0();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_227D4F000, v12, v13, "CRDTModelCloudDataManager cloudData: couldn't load existing data: %s", v14, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x22E2AA8AC](v15, -1, -1);
      MEMORY[0x22E2AA8AC](v14, -1, -1);

    }
    else
    {

    }
    goto LABEL_16;
  }
  if (a1)
  {
    type metadata accessor for CRDTModelSync();
    v18 = swift_dynamicCastClass();
    if (v18)
    {
      v19 = v18;
      swift_unknownObjectRetain();
      ((void (*)(uint64_t))a4)(v19);

      swift_unknownObjectRelease();
      return;
    }
    v20 = sub_227E5F570();
    v21 = sub_227E60230();
    if (!os_log_type_enabled(v20, v21))
      goto LABEL_15;
    v22 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v22 = 0;
    v23 = "CRDTModelCloudDataManager cloudData: loaded existing data with the wrong type";
    goto LABEL_14;
  }
  v20 = sub_227E5F570();
  v21 = sub_227E60248();
  if (os_log_type_enabled(v20, v21))
  {
    v22 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v22 = 0;
    v23 = "CRDTModelCloudDataManager cloudData: no existing data";
LABEL_14:
    _os_log_impl(&dword_227D4F000, v20, v21, v23, v22, 2u);
    MEMORY[0x22E2AA8AC](v22, -1, -1);
  }
LABEL_15:

LABEL_16:
  ((void (*)(_QWORD))a4)(0);

}

uint64_t sub_227E467CC(uint64_t a1, uint64_t a2, void *a3)
{
  void (*v5)(uint64_t, void *);
  id v6;

  v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  swift_retain();
  swift_unknownObjectRetain();
  v6 = a3;
  v5(a2, a3);
  swift_release();

  return swift_unknownObjectRelease();
}

id sub_227E46834(char a1, int a2, id a3, uint64_t a4, void (*a5)(_QWORD), uint64_t a6, void *a7)
{
  id v11;
  id v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  void (*v20)(_QWORD);
  uint64_t v21;

  v11 = a3;
  v12 = a3;
  v13 = sub_227E5F570();
  v14 = sub_227E60248();
  if (os_log_type_enabled(v13, v14))
  {
    v20 = a5;
    v15 = swift_slowAlloc();
    v16 = swift_slowAlloc();
    v21 = v16;
    *(_DWORD *)v15 = 134218498;
    sub_227E603B0();
    *(_WORD *)(v15 + 12) = 2048;
    sub_227E603B0();
    *(_WORD *)(v15 + 22) = 2080;
    if (a3)
    {
      swift_getErrorValue();
      sub_227E606D4();
    }
    sub_227D68330(&qword_255929E88);
    v17 = sub_227E5FFC0();
    sub_227D634E0(v17, v18, &v21);
    sub_227E603B0();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_227D4F000, v13, v14, "CRDTModelCloudDataManager q_sync: BCCloudDataManager is done: success=%ld hasChanges=%ld error=%s", (uint8_t *)v15, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x22E2AA8AC](v16, -1, -1);
    MEMORY[0x22E2AA8AC](v15, -1, -1);

    a5 = v20;
  }
  else
  {

  }
  a5(a1 & 1);
  return objc_msgSend(a7, sel_endTransaction);
}

void sub_227E46A74(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  void (*v7)(uint64_t, uint64_t, void *);
  id v8;

  v7 = *(void (**)(uint64_t, uint64_t, void *))(a1 + 32);
  swift_retain();
  v8 = a4;
  v7(a2, a3, a4);
  swift_release();

}

void sub_227E46AE4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *v5;
  uint64_t v6;
  void *v7;
  _QWORD v8[6];

  v5 = *(void **)(v2 + qword_255929DD0);
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = a1;
  *(_QWORD *)(v6 + 24) = a2;
  v8[4] = sub_227DE0D94;
  v8[5] = v6;
  v8[0] = MEMORY[0x24BDAC760];
  v8[1] = 1107296256;
  v8[2] = sub_227E46BAC;
  v8[3] = &unk_24F090C20;
  v7 = _Block_copy(v8);
  swift_retain();
  swift_release();
  objc_msgSend(v5, sel_hasSaltChangedWithCompletion_, v7);
  _Block_release(v7);
}

void sub_227E46BAC(uint64_t a1, uint64_t a2, void *a3)
{
  void (*v5)(uint64_t, id);
  id v6;

  v5 = *(void (**)(uint64_t, id))(a1 + 32);
  swift_retain();
  v6 = a3;
  v5(a2, v6);
  swift_release();

}

uint64_t sub_227E46C0C(void *a1, int a2, void *aBlock)
{
  void *v4;
  uint64_t v5;
  id v6;

  v4 = _Block_copy(aBlock);
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = v4;
  v6 = a1;
  sub_227E46AE4((uint64_t)sub_227E492C4, v5);

  return swift_release();
}

void sub_227E46C78(uint64_t a1, uint64_t a2)
{
  char *v2;
  void *v3;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint8_t *v12;
  void *v13;
  _QWORD *v14;
  void *v15;
  id v16;
  uint64_t v17;
  uint64_t aBlock[6];

  v3 = v2;
  swift_getObjectType();
  v6 = sub_227E5F570();
  v7 = sub_227E60248();
  if (os_log_type_enabled(v6, v7))
  {
    v17 = a2;
    v8 = (uint8_t *)swift_slowAlloc();
    v9 = swift_slowAlloc();
    aBlock[0] = v9;
    *(_DWORD *)v8 = 136315138;
    v10 = sub_227DD38D4();
    sub_227D634E0(v10, v11, aBlock);
    sub_227E603B0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_227D4F000, v6, v7, "CRDTModelCloudDataManager dissociateCloudDataFromSyncWithCompletion for: %s", v8, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x22E2AA8AC](v9, -1, -1);
    v12 = v8;
    a2 = v17;
    MEMORY[0x22E2AA8AC](v12, -1, -1);
  }

  v13 = *(void **)&v2[qword_255929DD0];
  v14 = (_QWORD *)swift_allocObject();
  v14[2] = v2;
  v14[3] = a1;
  v14[4] = a2;
  aBlock[4] = (uint64_t)sub_227E49214;
  aBlock[5] = (uint64_t)v14;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_227E17004;
  aBlock[3] = (uint64_t)&unk_24F090B58;
  v15 = _Block_copy(aBlock);
  v16 = v3;
  sub_227E3C58C(a1);
  swift_release();
  objc_msgSend(v13, sel_dissociateCloudDataFromSyncWithCompletion_, v15);
  _Block_release(v15);
}

void sub_227E46E7C(char a1, id a2, uint64_t *a3, void (*a4)(_QWORD, id), uint64_t a5)
{
  void *v8;
  _QWORD *v9;
  void *v10;
  uint64_t *v11;
  uint64_t v13;
  uint64_t v14;
  id v15;
  id v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t *v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t aBlock[6];
  uint64_t v28;

  if ((a1 & 1) != 0)
  {
    v8 = *(void **)((char *)a3 + qword_255929DD8);
    v9 = (_QWORD *)swift_allocObject();
    v9[2] = a3;
    v9[3] = a4;
    v9[4] = a5;
    aBlock[4] = (uint64_t)sub_227E49224;
    aBlock[5] = (uint64_t)v9;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_227E17004;
    aBlock[3] = (uint64_t)&unk_24F090BA8;
    v10 = _Block_copy(aBlock);
    v11 = a3;
    sub_227E3C58C((uint64_t)a4);
    swift_release();
    objc_msgSend(v8, sel_dissociateCloudDataFromSyncWithCompletion_, v10);
    _Block_release(v10);
    return;
  }
  v13 = *a3;
  v14 = *MEMORY[0x24BEE4EA0];
  v15 = a2;
  v16 = a2;
  v17 = sub_227E5F570();
  v18 = sub_227E60230();
  if (os_log_type_enabled(v17, v18))
  {
    v19 = (uint64_t *)(v14 & v13);
    v20 = swift_slowAlloc();
    v21 = (_QWORD *)swift_slowAlloc();
    v22 = swift_slowAlloc();
    aBlock[0] = v22;
    *(_DWORD *)v20 = 136315394;
    type metadata accessor for CRDTModelCloudDataManager(0, v19[10], v19[11], v19[12]);
    v23 = sub_227DD38D4();
    v28 = sub_227D634E0(v23, v24, aBlock);
    sub_227E603B0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v20 + 12) = 2112;
    if (a2)
    {
      v25 = sub_227E5F138();
    }
    else
    {
      sub_227D52DBC(0, &qword_255928450);
      v25 = sub_227E60368();
    }
    v26 = v25;
    v28 = v25;
    sub_227E603B0();
    *v21 = v26;

    _os_log_impl(&dword_227D4F000, v17, v18, "CRDTModelCloudDataManager failed to dissociate data for: %s %@", (uint8_t *)v20, 0x16u);
    sub_227D68330(&qword_255929230);
    swift_arrayDestroy();
    MEMORY[0x22E2AA8AC](v21, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x22E2AA8AC](v22, -1, -1);
    MEMORY[0x22E2AA8AC](v20, -1, -1);

    if (a4)
      goto LABEL_10;
  }
  else
  {

    if (a4)
LABEL_10:
      a4(0, a2);
  }
}

void sub_227E4718C(char a1, id a2, uint64_t *a3, void (*a4)(_QWORD, _QWORD))
{
  uint64_t v7;
  uint64_t v8;
  id v9;
  id v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t *v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(_QWORD, _QWORD);
  uint64_t v22;

  v7 = *a3;
  v8 = *MEMORY[0x24BEE4EA0];
  v9 = a2;
  v10 = a2;
  v11 = sub_227E5F570();
  v12 = sub_227E60248();
  if (os_log_type_enabled(v11, v12))
  {
    v21 = a4;
    v13 = (uint64_t *)(v8 & v7);
    v14 = swift_slowAlloc();
    v15 = (_QWORD *)swift_slowAlloc();
    v16 = swift_slowAlloc();
    v22 = v16;
    *(_DWORD *)v14 = 136315650;
    type metadata accessor for CRDTModelCloudDataManager(0, v13[10], v13[11], v13[12]);
    v17 = sub_227DD38D4();
    sub_227D634E0(v17, v18, &v22);
    sub_227E603B0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v14 + 12) = 1024;
    sub_227E603B0();
    *(_WORD *)(v14 + 18) = 2112;
    if (a2)
    {
      v19 = sub_227E5F138();
    }
    else
    {
      sub_227D52DBC(0, &qword_255928450);
      v19 = sub_227E60368();
    }
    v20 = v19;
    sub_227E603B0();
    *v15 = v20;

    _os_log_impl(&dword_227D4F000, v11, v12, "CRDTModelCloudDataManager dissociateCloudDataFromSyncWithCompletion for: %s finish with success:%{BOOL}d error: %@", (uint8_t *)v14, 0x1Cu);
    sub_227D68330(&qword_255929230);
    swift_arrayDestroy();
    MEMORY[0x22E2AA8AC](v15, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x22E2AA8AC](v16, -1, -1);
    MEMORY[0x22E2AA8AC](v14, -1, -1);

    a4 = v21;
    if (v21)
      goto LABEL_8;
  }
  else
  {

    if (a4)
LABEL_8:
      a4(a1 & 1, a2);
  }
}

void sub_227E4741C(void *a1, int a2, void *aBlock)
{
  void *v4;
  void *v5;
  uint64_t v6;
  void (*v7)(char, uint64_t);
  id v8;

  v4 = _Block_copy(aBlock);
  if (v4)
  {
    v5 = v4;
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v5;
    v7 = sub_227E492C4;
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  v8 = a1;
  sub_227E46C78((uint64_t)v7, v6);
  sub_227D5B660((uint64_t)v7);

}

void sub_227E474B4(uint64_t a1, void (*a2)(void), uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  void *v11;
  void *v12;
  _QWORD v13[6];

  if (*(_BYTE *)(v3 + qword_25592FED8) == 1)
  {
    v6 = v3;
    v8 = sub_227E5F570();
    v9 = sub_227E60248();
    if (os_log_type_enabled(v8, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v10 = 0;
      _os_log_impl(&dword_227D4F000, v8, v9, "CRDTModelCloudDataManager startSyncToCKWithCompletion: starting syncing to CK", v10, 2u);
      MEMORY[0x22E2AA8AC](v10, -1, -1);
    }

    v11 = *(void **)(v6 + qword_255929DD0);
    v13[4] = a2;
    v13[5] = a3;
    v13[0] = MEMORY[0x24BDAC760];
    v13[1] = 1107296256;
    v13[2] = sub_227D5A858;
    v13[3] = &unk_24F090AE0;
    v12 = _Block_copy(v13);
    swift_retain();
    swift_release();
    objc_msgSend(v11, sel_startSyncToCKWithSyncManager_completion_, a1, v12);
    _Block_release(v12);
  }
  else
  {
    a2();
  }
}

uint64_t sub_227E47610(void *a1, int a2, void *a3, void *aBlock)
{
  void *v6;
  uint64_t v7;
  id v8;
  id v9;

  v6 = _Block_copy(aBlock);
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = v6;
  v8 = a3;
  v9 = a1;
  sub_227E474B4((uint64_t)v8, (void (*)(void))sub_227E49208, v7);

  return swift_release();
}

void sub_227E47690(uint64_t a1)
{
  _QWORD *v1;
  uint64_t *v3;
  id v4;
  id v5;

  v3 = (uint64_t *)(*MEMORY[0x24BEE4EA0] & *v1);
  v4 = objc_msgSend(*(id *)((char *)v1 + qword_255929DE0), sel_transactionManager);
  type metadata accessor for CRDTModelCloudDataManager(0, v3[10], v3[11], v3[12]);
  sub_227DD38D4();
  v5 = (id)sub_227E5FF78();
  swift_bridgeObjectRelease();
  objc_msgSend(v4, sel_signalSyncToCKTransactionForEntityName_syncManager_, v5, a1);

}

void sub_227E47740(void *a1, uint64_t a2, void *a3)
{
  id v4;
  id v5;

  v4 = a3;
  v5 = a1;
  sub_227E47690((uint64_t)v4);

}

uint64_t sub_227E47794(void *a1, int a2, void *a3, int a4, void *aBlock)
{
  void *v7;
  id v8;
  id v9;

  v7 = _Block_copy(aBlock);
  sub_227D52DBC(0, &qword_255928490);
  sub_227E600BC();
  v8 = a3;
  v9 = a1;
  sub_227E47E34();
  _Block_release(v7);

  return swift_bridgeObjectRelease();
}

uint64_t sub_227E47828(void *a1, int a2, void *a3, int a4, void *aBlock)
{
  void *v7;
  unint64_t v8;
  uint64_t v9;
  id v10;
  id v11;

  v7 = _Block_copy(aBlock);
  sub_227D68330(&qword_25592A430);
  v8 = sub_227E600BC();
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v7;
  v10 = a3;
  v11 = a1;
  sub_227E47FEC(v8, (uint64_t (*)(_QWORD, _QWORD))sub_227E492C4, v9);

  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_227E478D8(char a1, unint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD, uint64_t), uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  id v16;
  void *v17;
  char *v18;
  uint64_t v19;
  uint64_t ObjectType;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;

  v10 = a6 + 16;
  swift_beginAccess();
  v11 = MEMORY[0x22E2AA96C](v10);
  if (!v11)
    return a4(a1 & 1, a3);
  v12 = (char *)v11;
  if (!(a2 >> 62))
  {
    v13 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v13)
      goto LABEL_4;
LABEL_15:
    swift_bridgeObjectRelease();
    goto LABEL_16;
  }
  swift_bridgeObjectRetain();
  result = sub_227E6056C();
  if (!result)
    goto LABEL_15;
LABEL_4:
  if ((a2 & 0xC000000000000001) != 0)
  {
    v15 = MEMORY[0x22E2A9AFC](0, a2);
    goto LABEL_7;
  }
  if (*(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v15 = *(_QWORD *)(a2 + 32);
    swift_unknownObjectRetain();
LABEL_7:
    swift_bridgeObjectRelease();
    v16 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for CRDTModelSync()), sel_initWithCloudData_, v15);
    if (v16)
    {
      v17 = v16;
      v18 = &v12[qword_25592FED0];
      if (MEMORY[0x22E2AA96C](&v12[qword_25592FED0]))
      {
        v19 = *((_QWORD *)v18 + 1);
        ObjectType = swift_getObjectType();
        (*(void (**)(void *, uint64_t, uint64_t))(v19 + 8))(v17, ObjectType, v19);

        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
      }
      else
      {
        v21 = sub_227E5F570();
        v22 = sub_227E60230();
        if (os_log_type_enabled(v21, v22))
        {
          v23 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v23 = 0;
          _os_log_impl(&dword_227D4F000, v21, v22, "CRDTModelCloudDataManager resolveConflictsFor: delegate is nil", v23, 2u);
          MEMORY[0x22E2AA8AC](v23, -1, -1);
        }

        swift_unknownObjectRelease();
      }
      return a4(a1 & 1, a3);
    }
    swift_unknownObjectRelease();
LABEL_16:
    v24 = sub_227E5F570();
    v25 = sub_227E60230();
    if (os_log_type_enabled(v24, v25))
    {
      v26 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v26 = 0;
      _os_log_impl(&dword_227D4F000, v24, v25, "CRDTModelCloudDataManager resolveConflictsFor: couldn't obtain cloudData", v26, 2u);
      MEMORY[0x22E2AA8AC](v26, -1, -1);
    }

    return a4(a1 & 1, a3);
  }
  __break(1u);
  return result;
}

void sub_227E47B78(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  void (*v6)(uint64_t, uint64_t, void *);
  uint64_t v7;
  id v8;

  v6 = *(void (**)(uint64_t, uint64_t, void *))(a1 + 32);
  sub_227D68330(&qword_25592A430);
  v7 = sub_227E600BC();
  swift_retain();
  v8 = a4;
  v6(a2, v7, a4);
  swift_release();
  swift_bridgeObjectRelease();

}

uint64_t sub_227E47C0C(void *a1, int a2, void *a3, int a4, void *aBlock)
{
  void *v7;
  unint64_t v8;
  uint64_t v9;
  id v10;
  id v11;

  v7 = _Block_copy(aBlock);
  sub_227D52DBC(0, (unint64_t *)&qword_255929460);
  v8 = sub_227E600BC();
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v7;
  v10 = a3;
  v11 = a1;
  sub_227E4868C(v8, (void (*)(_QWORD, _QWORD))sub_227E492C4, v9);

  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_227E47CC8(void *a1, int a2, void *a3, int a4, void *aBlock)
{
  void *v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  id v11;

  v7 = _Block_copy(aBlock);
  sub_227D52DBC(0, &qword_255928490);
  v8 = sub_227E600BC();
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v7;
  v10 = a3;
  v11 = a1;
  sub_227E48E10(v8, (void (*)(_QWORD, _QWORD))sub_227E17344, v9);

  swift_bridgeObjectRelease();
  return swift_release();
}

id sub_227E47D84(_QWORD *a1)
{
  void *v1;

  sub_227E47E00(*(_QWORD *)((*MEMORY[0x24BEE4EA0] & *a1) + 0x50), *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *a1) + 0x58), *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *a1) + 0x60));
  v1 = (void *)sub_227E5FF78();
  swift_bridgeObjectRelease();
  return v1;
}

void sub_227E47DD4()
{
  sub_227E49098();
}

uint64_t type metadata accessor for CRDTModelCloudDataManager(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_227D6837C(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for CRDTModelCloudDataManager);
}

uint64_t sub_227E47E00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for CRDTModelCloudDataManager(0, a1, a2, a3);
  return sub_227DD38D4();
}

void sub_227E47E34()
{
  os_log_type_t v0;
  uint8_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  NSObject *oslog;
  uint64_t v9;

  swift_bridgeObjectRetain_n();
  oslog = sub_227E5F570();
  v0 = sub_227E60230();
  if (os_log_type_enabled(oslog, v0))
  {
    v1 = (uint8_t *)swift_slowAlloc();
    v2 = swift_slowAlloc();
    v9 = v2;
    *(_DWORD *)v1 = 136315138;
    v3 = sub_227D52DBC(0, &qword_255928490);
    v4 = swift_bridgeObjectRetain();
    v5 = MEMORY[0x22E2A970C](v4, v3);
    v7 = v6;
    swift_bridgeObjectRelease();
    sub_227D634E0(v5, v7, &v9);
    sub_227E603B0();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_227D4F000, oslog, v0, "CRDTModelCloudDataManager removeCloudDataFor: asked to remove cloud data: %s", v1, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x22E2AA8AC](v2, -1, -1);
    MEMORY[0x22E2AA8AC](v1, -1, -1);

  }
  else
  {
    swift_bridgeObjectRelease_n();

  }
}

uint64_t sub_227E47FEC(unint64_t a1, uint64_t (*a2)(_QWORD, _QWORD), uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  uint64_t result;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t ObjectType;
  uint64_t (*v33)(uint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char isUniquelyReferenced_nonNull_native;
  char v38;
  unint64_t v39;
  uint64_t v40;
  _BOOL8 v41;
  uint64_t v42;
  char v43;
  unint64_t v44;
  char v45;
  _QWORD *v46;
  uint64_t *v47;
  uint64_t v48;
  BOOL v49;
  uint64_t v50;
  NSObject *v51;
  os_log_type_t v52;
  uint8_t *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  unint64_t v58;
  uint64_t v59;
  void *v60;
  void *v61;
  void *v62;
  uint64_t v63;
  void *v64;
  uint64_t v65;
  uint64_t (*v66)(_QWORD, _QWORD);
  uint64_t v67;
  uint64_t aBlock[9];
  uint64_t v69;

  v4 = v3;
  if (*(_BYTE *)(v3 + qword_25592FED8) != 1)
    return a2(0, 0);
  v69 = MEMORY[0x24BEE4B00];
  if (!(a1 >> 62))
  {
    v8 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    v66 = a2;
    v67 = a3;
    if (v8)
      goto LABEL_4;
LABEL_39:
    swift_bridgeObjectRelease();
    v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
    v27 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
    if (!v27)
    {
LABEL_55:
      swift_bridgeObjectRelease();
      v51 = sub_227E5F570();
      v52 = sub_227E60248();
      if (os_log_type_enabled(v51, v52))
      {
        v53 = (uint8_t *)swift_slowAlloc();
        v54 = swift_slowAlloc();
        aBlock[0] = v54;
        *(_DWORD *)v53 = 136315138;
        swift_beginAccess();
        swift_bridgeObjectRetain();
        sub_227D68330(&qword_25592A430);
        v55 = v4;
        v56 = sub_227E5FEE8();
        v58 = v57;
        swift_bridgeObjectRelease();
        v59 = v56;
        v4 = v55;
        aBlock[6] = sub_227D634E0(v59, v58, aBlock);
        sub_227E603B0();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_227D4F000, v51, v52, "CRDTModelCloudDataManager updateSyncGenerationFromCloudData: updating sync generation for %s", v53, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x22E2AA8AC](v54, -1, -1);
        MEMORY[0x22E2AA8AC](v53, -1, -1);
      }

      v60 = *(void **)(v4 + qword_255929DD0);
      swift_beginAccess();
      swift_bridgeObjectRetain();
      sub_227D68330(&qword_25592A430);
      v61 = (void *)sub_227E5FED0();
      swift_bridgeObjectRelease();
      v62 = (void *)sub_227E5FF78();
      v63 = swift_allocObject();
      *(_QWORD *)(v63 + 16) = v66;
      *(_QWORD *)(v63 + 24) = v67;
      aBlock[4] = (uint64_t)sub_227D5B9E0;
      aBlock[5] = v63;
      aBlock[0] = MEMORY[0x24BDAC760];
      aBlock[1] = 1107296256;
      aBlock[2] = (uint64_t)sub_227E46BAC;
      aBlock[3] = (uint64_t)&unk_24F090A90;
      v64 = _Block_copy(aBlock);
      swift_retain();
      swift_release();
      objc_msgSend(v60, sel_updateSyncGenerationFromCloudData_predicate_propertyIDKey_completion_, v61, 0, v62, v64);
      _Block_release(v64);

      return swift_bridgeObjectRelease();
    }
    goto LABEL_40;
  }
  swift_bridgeObjectRetain();
  v8 = sub_227E6056C();
  v66 = a2;
  v67 = a3;
  if (!v8)
    goto LABEL_39;
LABEL_4:
  if (v8 < 1)
    goto LABEL_60;
  if ((a1 & 0xC000000000000001) != 0)
  {
    v9 = 0;
    v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
    do
    {
      v11 = MEMORY[0x22E2A9AFC](v9, a1);
      swift_getObjectType();
      v12 = swift_conformsToProtocol2();
      if (v12)
        v13 = v11;
      else
        v13 = 0;
      if (v12)
        v14 = v12;
      else
        v14 = 0;
      if (v13)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v10 = sub_227DF9284(0, v10[2] + 1, 1, v10);
        v16 = v10[2];
        v15 = v10[3];
        if (v16 >= v15 >> 1)
          v10 = sub_227DF9284((_QWORD *)(v15 > 1), v16 + 1, 1, v10);
        v10[2] = v16 + 1;
        v17 = &v10[2 * v16];
        v17[4] = v13;
        v17[5] = v14;
      }
      else
      {
        swift_unknownObjectRelease();
      }
      ++v9;
    }
    while (v8 != v9);
  }
  else
  {
    v19 = 0;
    v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
    do
    {
      v21 = *(_QWORD *)(a1 + 8 * v19 + 32);
      swift_getObjectType();
      v22 = swift_conformsToProtocol2();
      if (v22)
        v23 = v21;
      else
        v23 = 0;
      if (v22)
        v24 = v22;
      else
        v24 = 0;
      if (v23)
      {
        swift_unknownObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v10 = sub_227DF9284(0, v10[2] + 1, 1, v10);
        v26 = v10[2];
        v25 = v10[3];
        if (v26 >= v25 >> 1)
          v10 = sub_227DF9284((_QWORD *)(v25 > 1), v26 + 1, 1, v10);
        v10[2] = v26 + 1;
        v20 = &v10[2 * v26];
        v20[4] = v23;
        v20[5] = v24;
      }
      ++v19;
    }
    while (v8 != v19);
  }
  swift_bridgeObjectRelease();
  v27 = v10[2];
  if (!v27)
    goto LABEL_55;
LABEL_40:
  v65 = v4;
  swift_bridgeObjectRetain();
  v28 = v10 + 5;
  while (1)
  {
    v31 = *(v28 - 1);
    v30 = *v28;
    ObjectType = swift_getObjectType();
    v33 = *(uint64_t (**)(uint64_t, uint64_t))(v30 + 8);
    swift_unknownObjectRetain();
    v34 = v33(ObjectType, v30);
    v36 = v35;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    aBlock[0] = v69;
    v39 = sub_227DD01C0(v34, v36);
    v40 = *(_QWORD *)(v69 + 16);
    v41 = (v38 & 1) == 0;
    v42 = v40 + v41;
    if (__OFADD__(v40, v41))
      break;
    v43 = v38;
    if (*(_QWORD *)(v69 + 24) >= v42)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        v46 = (_QWORD *)aBlock[0];
        if ((v38 & 1) != 0)
          goto LABEL_41;
      }
      else
      {
        sub_227DD2E04();
        v46 = (_QWORD *)aBlock[0];
        if ((v43 & 1) != 0)
          goto LABEL_41;
      }
    }
    else
    {
      sub_227DD1378(v42, isUniquelyReferenced_nonNull_native);
      v44 = sub_227DD01C0(v34, v36);
      if ((v43 & 1) != (v45 & 1))
        goto LABEL_61;
      v39 = v44;
      v46 = (_QWORD *)aBlock[0];
      if ((v43 & 1) != 0)
      {
LABEL_41:
        v29 = v46[7];
        swift_unknownObjectRelease();
        *(_QWORD *)(v29 + 8 * v39) = v31;
        goto LABEL_42;
      }
    }
    v46[(v39 >> 6) + 8] |= 1 << v39;
    v47 = (uint64_t *)(v46[6] + 16 * v39);
    *v47 = v34;
    v47[1] = v36;
    *(_QWORD *)(v46[7] + 8 * v39) = v31;
    v48 = v46[2];
    v49 = __OFADD__(v48, 1);
    v50 = v48 + 1;
    if (v49)
      goto LABEL_59;
    v46[2] = v50;
    swift_bridgeObjectRetain();
LABEL_42:
    v69 = (uint64_t)v46;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v28 += 2;
    if (!--v27)
    {
      swift_bridgeObjectRelease();
      v4 = v65;
      goto LABEL_55;
    }
  }
  __break(1u);
LABEL_59:
  __break(1u);
LABEL_60:
  __break(1u);
LABEL_61:
  result = sub_227E606B0();
  __break(1u);
  return result;
}

void sub_227E4868C(unint64_t a1, void (*a2)(_QWORD, _QWORD), uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  id v19;
  id v20;
  NSObject *v21;
  int v22;
  uint64_t v23;
  _QWORD *v24;
  id v25;
  id v26;
  id v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  id v33;
  void *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  id v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  os_log_t v47;
  _QWORD *v48;
  uint64_t v49;
  void *v50;
  void *v51;
  void *v52;
  void *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(_QWORD, _QWORD);
  void *v60;
  uint64_t v61;
  os_log_t v62;
  _QWORD *v63;
  int v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  void (*v68)(_QWORD, _QWORD);
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t aBlock;
  uint64_t v73;
  void (*v74)(uint64_t, uint64_t, uint64_t, void *);
  void *v75;
  uint64_t (*v76)(char, unint64_t, uint64_t);
  uint64_t v77;

  v4 = v3;
  v8 = *v3;
  v9 = *MEMORY[0x24BEE4EA0];
  v70 = sub_227D68330(&qword_253F391D0);
  v11 = MEMORY[0x24BDAC7A8](v70, v10);
  v69 = (char *)&v62 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11, v13);
  v15 = (char *)&v62 - v14;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v61 = sub_227E6056C();
    swift_bridgeObjectRelease();
    if (v61 < 2)
      goto LABEL_6;
  }
  else if (*(uint64_t *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10) < 2)
  {
    goto LABEL_6;
  }
  v16 = sub_227E5F570();
  v17 = sub_227E60230();
  if (os_log_type_enabled(v16, v17))
  {
    v18 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v18 = 0;
    _os_log_impl(&dword_227D4F000, v16, v17, "CRDTModelCloudDataManager resolveConflictsFor: received changes for more than 1 record. This shouldn't be possible", v18, 2u);
    MEMORY[0x22E2AA8AC](v18, -1, -1);
  }

LABEL_6:
  if (*((_BYTE *)v4 + qword_25592FED8) != 1)
  {
    a2(0, 0);
    return;
  }
  v68 = a2;
  if ((a1 & 0xC000000000000001) != 0)
  {
    v19 = (id)MEMORY[0x22E2A9AFC](0, a1);
  }
  else
  {
    if (!*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    v19 = *(id *)(a1 + 32);
  }
  v66 = v9 & v8;
  v67 = a3;
  v20 = v19;
  v21 = sub_227E5F570();
  v22 = sub_227E60248();
  if (os_log_type_enabled(v21, (os_log_type_t)v22))
  {
    v62 = v21;
    v64 = v22;
    v23 = swift_slowAlloc();
    v24 = (_QWORD *)swift_slowAlloc();
    v65 = swift_slowAlloc();
    v71 = v65;
    aBlock = (uint64_t)v20;
    *(_DWORD *)v23 = 138544387;
    v25 = v20;
    sub_227E603B0();
    *v24 = v20;

    *(_WORD *)(v23 + 12) = 2114;
    v26 = objc_msgSend(v25, sel_recordID);
    aBlock = (uint64_t)v26;
    sub_227E603B0();
    v63 = v24;
    v24[1] = v26;

    *(_WORD *)(v23 + 22) = 2082;
    v27 = objc_msgSend(v25, sel_creationDate);
    if (v27)
    {
      v28 = v27;
      sub_227E5F264();

      v29 = sub_227E5F27C();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v15, 0, 1, v29);
    }
    else
    {
      v30 = sub_227E5F27C();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v15, 1, 1, v30);
    }
    v31 = sub_227E5FFC0();
    aBlock = sub_227D634E0(v31, v32, &v71);
    sub_227E603B0();

    swift_bridgeObjectRelease();
    *(_WORD *)(v23 + 32) = 2082;
    v33 = objc_msgSend(v25, sel_modificationDate);
    if (v33)
    {
      v34 = v33;
      v35 = v69;
      sub_227E5F264();

      v36 = sub_227E5F27C();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v35, 0, 1, v36);
    }
    else
    {
      v37 = sub_227E5F27C();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v69, 1, 1, v37);
    }
    v38 = sub_227E5FFC0();
    aBlock = sub_227D634E0(v38, v39, &v71);
    sub_227E603B0();

    swift_bridgeObjectRelease();
    *(_WORD *)(v23 + 42) = 2081;
    v40 = objc_msgSend(v25, sel_modifiedByDevice);
    if (v40)
    {
      v41 = v40;
      v42 = sub_227E5FF84();
      v44 = v43;

    }
    else
    {
      v42 = 0;
      v44 = 0;
    }
    aBlock = v42;
    v73 = v44;
    sub_227D68330(&qword_255929E88);
    v45 = sub_227E5FFC0();
    aBlock = sub_227D634E0(v45, v46, &v71);
    sub_227E603B0();

    swift_bridgeObjectRelease();
    v47 = v62;
    _os_log_impl(&dword_227D4F000, v62, (os_log_type_t)v64, "CRDTModelCloudDataManager resolveConflictsFor: resolving conflicts for record: %{public}@ id: %{public}@ created: %{public}s modified: %{public}s modifiedByDevice:%{private}s", (uint8_t *)v23, 0x34u);
    sub_227D68330(&qword_255929230);
    v48 = v63;
    swift_arrayDestroy();
    MEMORY[0x22E2AA8AC](v48, -1, -1);
    v49 = v65;
    swift_arrayDestroy();
    MEMORY[0x22E2AA8AC](v49, -1, -1);
    MEMORY[0x22E2AA8AC](v23, -1, -1);

  }
  else
  {

  }
  v50 = *(void **)((char *)v4 + qword_255929DD0);
  sub_227D52DBC(0, (unint64_t *)&qword_255929460);
  v51 = (void *)sub_227E600B0();
  sub_227E43B14();
  sub_227D68330(&qword_2559288E0);
  v52 = (void *)sub_227E5FED0();
  swift_bridgeObjectRelease();
  sub_227E43B14();
  v53 = (void *)sub_227E5FED0();
  swift_bridgeObjectRelease();
  v54 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v55 = swift_allocObject();
  v56 = v66;
  v57 = v67;
  *(_OWORD *)(v55 + 16) = *(_OWORD *)(v66 + 80);
  v58 = *(_QWORD *)(v56 + 96);
  v59 = v68;
  *(_QWORD *)(v55 + 32) = v58;
  *(_QWORD *)(v55 + 40) = v59;
  *(_QWORD *)(v55 + 48) = v57;
  *(_QWORD *)(v55 + 56) = v54;
  v76 = sub_227E49138;
  v77 = v55;
  aBlock = MEMORY[0x24BDAC760];
  v73 = 1107296256;
  v74 = sub_227E47B78;
  v75 = &unk_24F0909C8;
  v60 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(v50, sel_resolveConflictsForRecords_withResolvers_mergers_completion_, v51, v52, v53, v60);
  _Block_release(v60);

}

void sub_227E48E10(uint64_t a1, void (*a2)(_QWORD, _QWORD), uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint8_t *v16;
  void *v17;
  void *v18;
  void *v19;
  uint64_t v20;
  uint64_t aBlock[6];

  v5 = (uint64_t)a2;
  if (*(_BYTE *)(v3 + qword_25592FED8) == 1)
  {
    v6 = v3;
    swift_bridgeObjectRetain_n();
    v7 = sub_227E5F570();
    v8 = sub_227E60248();
    if (os_log_type_enabled(v7, v8))
    {
      v20 = v5;
      v9 = (uint8_t *)swift_slowAlloc();
      v10 = swift_slowAlloc();
      aBlock[0] = v10;
      *(_DWORD *)v9 = 136315138;
      v11 = sub_227D52DBC(0, &qword_255928490);
      v12 = swift_bridgeObjectRetain();
      v13 = MEMORY[0x22E2A970C](v12, v11);
      v15 = v14;
      swift_bridgeObjectRelease();
      sub_227D634E0(v13, v15, aBlock);
      sub_227E603B0();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_227D4F000, v7, v8, "CRDTModelCloudDataManager failedRecordIDs: failed records %s", v9, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x22E2AA8AC](v10, -1, -1);
      v16 = v9;
      v5 = v20;
      MEMORY[0x22E2AA8AC](v16, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    v17 = *(void **)(v6 + qword_255929DD0);
    sub_227D52DBC(0, &qword_255928490);
    v18 = (void *)sub_227E600B0();
    aBlock[4] = v5;
    aBlock[5] = a3;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_227E17004;
    aBlock[3] = (uint64_t)&unk_24F090928;
    v19 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    objc_msgSend(v17, sel_failedRecordIDs_completion_, v18, v19);
    _Block_release(v19);

  }
  else
  {
    a2(0, 0);
  }
}

void sub_227E49098()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_227E490C4()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

uint64_t sub_227E490E8()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_227E4910C()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_227E49138(char a1, unint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_227E478D8(a1, a2, a3, *(uint64_t (**)(_QWORD, uint64_t))(v3 + 40), *(_QWORD *)(v3 + 48), *(_QWORD *)(v3 + 56));
}

uint64_t sub_227E49164()
{
  return sub_227E4927C((void (*)(_QWORD))MEMORY[0x24BEE4BC0]);
}

double sub_227E49170@<D0>(uint64_t a1@<X0>, void (*a2)(char *, _QWORD, uint64_t, uint64_t)@<X1>, NSObject *a3@<X2>, _OWORD *a4@<X8>)
{
  uint64_t v4;

  return sub_227E43CC8(a1, a2, a3, *(_QWORD *)(v4 + 40), *(_QWORD *)(v4 + 48), *(_QWORD *)(v4 + 56), *(_QWORD *)(v4 + 16), *(uint8_t **)(v4 + 24), a4, *(_QWORD *)(v4 + 32));
}

uint64_t sub_227E4919C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_227D68330(qword_253F3B0B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_227E491E4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_227E49208()
{
  uint64_t v0;

  return sub_227E0031C(*(_QWORD *)(v0 + 16));
}

void sub_227E49214(char a1, void *a2)
{
  uint64_t v2;

  sub_227E46E7C(a1, a2, *(uint64_t **)(v2 + 16), *(void (**)(_QWORD, id))(v2 + 24), *(_QWORD *)(v2 + 32));
}

void sub_227E49224(char a1, void *a2)
{
  uint64_t v2;

  sub_227E4718C(a1, a2, *(uint64_t **)(v2 + 16), *(void (**)(_QWORD, _QWORD))(v2 + 24));
}

uint64_t sub_227E49230()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

id sub_227E49264(char a1, int a2, void *a3)
{
  uint64_t v3;

  return sub_227E46834(a1, a2, a3, *(_QWORD *)(v3 + 16), *(void (**)(_QWORD))(v3 + 24), *(_QWORD *)(v3 + 32), *(void **)(v3 + 40));
}

uint64_t sub_227E49270()
{
  return sub_227E4927C((void (*)(_QWORD))MEMORY[0x24BEE4EF8]);
}

uint64_t sub_227E4927C(void (*a1)(_QWORD))
{
  uint64_t v1;

  swift_release();
  a1(*(_QWORD *)(v1 + 56));
  return swift_deallocObject();
}

void sub_227E492B4(uint64_t a1, void *a2)
{
  uint64_t v2;

  sub_227E464CC(a1, a2, *(_QWORD *)(v2 + 40), *(void (**)(void))(v2 + 48));
}

id CRDTModelLocalFileManager.DefaultConfig.crdtContext.getter()
{
  return (id)sub_227D6D17C();
}

void CRDTModelLocalFileManager.DefaultConfig.crdtContext.setter(void *a1)
{
  id *v1;

  *v1 = a1;
}

uint64_t (*CRDTModelLocalFileManager.DefaultConfig.crdtContext.modify())()
{
  return nullsub_1;
}

uint64_t CRDTModelLocalFileManager.DefaultConfig.init(crdtContext:)@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

BOOL static CRDTModelLocalFileManager.SyncError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t CRDTModelLocalFileManager.SyncError.hash(into:)()
{
  return sub_227E60728();
}

uint64_t CRDTModelLocalFileManager.SyncError.hashValue.getter()
{
  sub_227E6071C();
  sub_227E60728();
  return sub_227E60734();
}

uint64_t sub_227E49408()
{
  sub_227E6071C();
  CRDTModelLocalFileManager.SyncError.hash(into:)();
  return sub_227E60734();
}

uint64_t CRDTModelLocalFileManager.delegate.getter()
{
  uint64_t v0;

  swift_beginAccess();
  return MEMORY[0x22E2AA96C](v0 + 16);
}

uint64_t CRDTModelLocalFileManager.delegate.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_beginAccess();
  *(_QWORD *)(v2 + 24) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

void (*CRDTModelLocalFileManager.delegate.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[5] = v1;
  swift_beginAccess();
  v4 = MEMORY[0x22E2AA96C](v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v3[3] = v4;
  v3[4] = v5;
  return sub_227DE1460;
}

uint64_t CRDTModelLocalFileManager.model.getter()
{
  return sub_227E602CC();
}

uint64_t CRDTModelLocalFileManager.enableCloudSync.getter()
{
  uint64_t v0;
  unsigned __int8 *v1;

  v1 = (unsigned __int8 *)(v0 + qword_253F3C738);
  swift_beginAccess();
  return *v1;
}

uint64_t CRDTModelLocalFileManager.enableCloudSync.setter(char a1)
{
  uint64_t v1;
  _BYTE *v3;
  uint64_t result;

  v3 = (_BYTE *)(v1 + qword_253F3C738);
  result = swift_beginAccess();
  *v3 = a1;
  return result;
}

uint64_t (*CRDTModelLocalFileManager.enableCloudSync.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t CRDTModelLocalFileManager.__allocating_init(config:delegate:)(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = swift_allocObject();
  CRDTModelLocalFileManager.init(config:delegate:)(a1, a2, a3);
  return v6;
}

uint64_t sub_227E496C4(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD v26[2];
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v27 = a2;
  v6 = *v3;
  v7 = *(_QWORD *)(*v3 + 96);
  v8 = *(_QWORD *)(*v3 + 104);
  v29 = *(_QWORD *)(*v3 + 80);
  v30 = v7;
  v28 = v8;
  v9 = type metadata accessor for ModelState(0, v29, v7, v8);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9, v11);
  v13 = (char *)v26 - v12;
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)v26 - v12, a1, v9);
  swift_bridgeObjectRetain_n();
  v14 = sub_227E5F570();
  v15 = sub_227E60248();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = swift_slowAlloc();
    v26[1] = v3;
    v17 = v16;
    v26[0] = swift_slowAlloc();
    v32 = v26[0];
    *(_DWORD *)v17 = 136315394;
    swift_bridgeObjectRetain();
    v31 = sub_227D634E0(v27, a3, &v32);
    v27 = a1;
    sub_227E603B0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v17 + 12) = 2080;
    v18 = ModelState.description.getter(v9);
    v31 = sub_227D634E0(v18, v19, &v32);
    a1 = v27;
    sub_227E603B0();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
    _os_log_impl(&dword_227D4F000, v14, v15, "CRDTModelLocalFileManager q_updateState (%s) -- newState=%s", (uint8_t *)v17, 0x16u);
    v20 = v26[0];
    swift_arrayDestroy();
    MEMORY[0x22E2AA8AC](v20, -1, -1);
    MEMORY[0x22E2AA8AC](v17, -1, -1);

  }
  else
  {
    swift_bridgeObjectRelease_n();

    v21 = (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v13, v9);
  }
  MEMORY[0x24BDAC7A8](v21, v22);
  v23 = *(_QWORD *)(v6 + 88);
  v26[-6] = v29;
  v26[-5] = v23;
  v24 = v28;
  v26[-4] = v30;
  v26[-3] = v24;
  v26[-2] = a1;
  swift_retain();
  MutableObservableContainer.mutate(_:)((uint64_t)sub_227D6D5A0, (uint64_t)&v26[-8]);
  return swift_release();
}

uint64_t CRDTModelLocalFileManager.sync(_:)(uint64_t a1)
{
  return CRDTModelLocalFileManager.sync(_:isRemote:)(a1, 0);
}

uint64_t CRDTModelLocalFileManager.sync(_:isRemote:)(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  _BYTE v11[16];
  uint64_t v12;
  uint64_t v13;
  char v14;

  v5 = sub_227E5F948();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  v9 = &v11[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_227E5F93C();
  v12 = v2;
  v13 = a1;
  v14 = a2;
  sub_227E602C0();
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v9, v5);
}

uint64_t sub_227E49A60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  _QWORD **v20;
  _QWORD *v21;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v23;
  unint64_t v24;
  _QWORD *v25;
  _BYTE v27[4];
  int v28;
  uint64_t v29;
  uint64_t v30;

  v5 = v4;
  v29 = a3;
  v30 = a4;
  v28 = a2;
  v7 = *v4;
  v8 = *(_QWORD *)(*v4 + 80);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  MEMORY[0x24BDAC7A8](a1, a2);
  v11 = &v27[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = sub_227E5F570();
  v13 = sub_227E60248();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v14 = 0;
    _os_log_impl(&dword_227D4F000, v12, v13, "CRDTModelLocalFileManager q_enqueuePendingSync", v14, 2u);
    MEMORY[0x22E2AA8AC](v14, -1, -1);
  }

  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v9 + 16))(&v27[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)], a1, v8);
  v15 = (*(unsigned __int8 *)(v9 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v16 = v15 + v10;
  v17 = swift_allocObject();
  v18 = (v16 & 0xFFFFFFFFFFFFFFF8) + v17;
  *(_QWORD *)(v17 + 16) = v8;
  *(_OWORD *)(v17 + 24) = *(_OWORD *)(v7 + 88);
  *(_QWORD *)(v17 + 40) = *(_QWORD *)(v7 + 104);
  *(_QWORD *)(v17 + 48) = v5;
  (*(void (**)(unint64_t, _BYTE *, uint64_t))(v9 + 32))(v17 + v15, v11, v8);
  *(_BYTE *)(v17 + v16) = v28 & 1;
  v19 = v30;
  *(_QWORD *)(v18 + 8) = v29;
  *(_QWORD *)(v18 + 16) = v19;
  v20 = (_QWORD **)((char *)v5 + qword_253F3AA00);
  swift_beginAccess();
  v21 = *v20;
  swift_retain();
  swift_retain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *v20 = v21;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v21 = sub_227D6A4A0(0, v21[2] + 1, 1, v21);
    *v20 = v21;
  }
  v24 = v21[2];
  v23 = v21[3];
  if (v24 >= v23 >> 1)
  {
    v21 = sub_227D6A4A0((_QWORD *)(v23 > 1), v24 + 1, 1, v21);
    *v20 = v21;
  }
  v21[2] = v24 + 1;
  v25 = &v21[2 * v24];
  v25[4] = sub_227E4A558;
  v25[5] = v17;
  return swift_endAccess();
}

uint64_t sub_227E49C94(uint64_t a1, uint64_t a2, char a3, uint64_t (*a4)(uint64_t))
{
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;

  v7 = sub_227E5F570();
  v8 = sub_227E60248();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v9 = 0;
    _os_log_impl(&dword_227D4F000, v7, v8, "CRDTModelLocalFileManager q_enqueuePendingSync -- about to run", v9, 2u);
    MEMORY[0x22E2AA8AC](v9, -1, -1);
  }

  v10 = sub_227D54DBC(a2, a3 & 1);
  return a4(v10);
}

uint64_t sub_227E49D80()
{
  sub_227E5F1EC();
  return sub_227E49F50();
}

uint64_t sub_227E49F50()
{
  uint64_t *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t result;
  uint64_t v9;
  uint64_t ObjectType;
  uint64_t v11[3];

  v1 = *v0;
  v2 = sub_227E5F570();
  v3 = sub_227E60248();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    v5 = swift_slowAlloc();
    *(_DWORD *)v4 = 136315138;
    v11[0] = v5;
    v6 = (*(uint64_t (**)(void))(*(_QWORD *)(v1 + 88) + 8))();
    sub_227D634E0(v6, v7, v11);
    sub_227E603B0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_227D4F000, v2, v3, "CRDTModelLocalFileManager: Model did save %s", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x22E2AA8AC](v5, -1, -1);
    MEMORY[0x22E2AA8AC](v4, -1, -1);
  }

  swift_beginAccess();
  result = MEMORY[0x22E2AA96C](v0 + 2);
  if (result)
  {
    v9 = v0[3];
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(ObjectType, v9);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t CRDTModelLocalFileManager.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_227DE0034(v0 + 16);
  swift_release();
  v1 = v0 + qword_253F3A958;
  v2 = sub_227E5F1B0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);

  swift_release();
  swift_bridgeObjectRelease();

  v3 = v0 + qword_253F3C740;
  v4 = sub_227E5F588();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  return v0;
}

uint64_t CRDTModelLocalFileManager.__deallocating_deinit()
{
  CRDTModelLocalFileManager.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_227E4A1D4()
{
  swift_release();
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_227E4A200()
{
  uint64_t v0;

  return sub_227D54DBC(*(_QWORD *)(v0 + 24), *(unsigned __int8 *)(v0 + 32));
}

void sub_227E4A228()
{
  JUMPOUT(0x22E2AA7D4);
}

uint64_t sub_227E4A238@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;

  v3 = *a1;
  v4 = *a1 + 16;
  swift_beginAccess();
  result = MEMORY[0x22E2AA96C](v4);
  v6 = *(_QWORD *)(v3 + 24);
  *a2 = result;
  a2[1] = v6;
  return result;
}

uint64_t sub_227E4A290(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *a2;
  swift_beginAccess();
  *(_QWORD *)(v3 + 24) = v2;
  return swift_unknownObjectWeakAssign();
}

uint64_t sub_227E4A2E8()
{
  return 32;
}

__n128 sub_227E4A2F4(uint64_t a1, _OWORD *a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a1;
  v3 = *(_OWORD *)(a1 + 16);
  *a2 = *(_OWORD *)a1;
  a2[1] = v3;
  return result;
}

uint64_t sub_227E4A300@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  _BYTE *v3;
  uint64_t result;

  v3 = (_BYTE *)(*a1 + qword_253F3C738);
  result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

uint64_t sub_227E4A350(char *a1)
{
  return CRDTModelLocalFileManager.enableCloudSync.setter(*a1);
}

uint64_t sub_227E4A374()
{
  return 32;
}

__n128 sub_227E4A380(uint64_t a1, _OWORD *a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a1;
  v3 = *(_OWORD *)(a1 + 16);
  *a2 = *(_OWORD *)a1;
  a2[1] = v3;
  return result;
}

uint64_t dispatch thunk of CRDTModelLocalFileManagerDelegate.modelDidSave()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of CRDTModelLocalFileConfig.crdtContext.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of CRDTModelLocalFileConfig.storeDirectory.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t method lookup function for CRDTModelLocalFileManager()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of CRDTModelLocalFileManager.__allocating_init(config:delegate:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 192))();
}

uint64_t sub_227E4A3B8(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_227E4A404 + 4 * byte_227E73245[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_227E4A438 + 4 * byte_227E73240[v4]))();
}

uint64_t sub_227E4A438(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_227E4A440(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x227E4A448);
  return result;
}

uint64_t sub_227E4A454(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x227E4A45CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_227E4A460(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_227E4A468(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_227E4A474()
{
  uint64_t v0;

  swift_release();
  sub_227DD1FD4(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_227E4A4A8()
{
  return sub_227E49D80();
}

uint64_t sub_227E4A4D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_227E4A558()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 16) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  return sub_227E49C94(*(_QWORD *)(v0 + 48), v0 + v2, *(_BYTE *)(v0 + v2 + *(_QWORD *)(v1 + 64)), *(uint64_t (**)(uint64_t))(((v2 + *(_QWORD *)(v1 + 64)) & 0xFFFFFFFFFFFFFFF8) + v0 + 8));
}

uint64_t sub_227E4A590()
{
  swift_release();
  return swift_deallocObject();
}

void *sub_227E4A5C0(void *a1, uint64_t a2)
{
  return sub_227E4A5D4(a1, a2, (unint64_t *)&qword_255929460);
}

void *sub_227E4A5D4(void *a1, uint64_t a2, unint64_t *a3)
{
  id v5;
  uint64_t v6;
  void *v7;
  unint64_t v8;
  char v9;
  id v10;
  void *v12;

  if ((a2 & 0xC000000000000001) == 0)
  {
    if (*(_QWORD *)(a2 + 16))
    {
      v8 = sub_227DD0270((uint64_t)a1);
      if ((v9 & 1) != 0)
      {
        v7 = *(void **)(*(_QWORD *)(a2 + 56) + 8 * v8);
        v10 = v7;
        return v7;
      }
    }
    return 0;
  }
  v5 = a1;
  v6 = sub_227E6053C();

  if (!v6)
    return 0;
  sub_227D52DBC(0, a3);
  swift_unknownObjectRetain();
  swift_dynamicCast();
  v7 = v12;
  swift_unknownObjectRelease();
  return v7;
}

uint64_t sub_227E4A6B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t result;

  if (!*(_QWORD *)(a3 + 16))
    return 0;
  sub_227E6071C();
  sub_227E60728();
  sub_227E60728();
  v6 = sub_227E60734();
  v7 = -1 << *(_BYTE *)(a3 + 32);
  v8 = v6 & ~v7;
  if (((*(_QWORD *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
    return 0;
  v9 = ~v7;
  do
  {
    v10 = (uint64_t *)(*(_QWORD *)(a3 + 48) + 16 * v8);
    v12 = *v10;
    v11 = v10[1];
    v13 = v12 == a1 && v11 == a2;
    result = v13;
    if (v13)
      break;
    v8 = (v8 + 1) & v9;
  }
  while (((*(_QWORD *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0);
  return result;
}

uint64_t sub_227E4A788(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  BOOL v12;
  uint64_t result;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  BOOL v17;

  if (*(_QWORD *)(a3 + 16))
  {
    sub_227E6071C();
    sub_227E60008();
    v6 = sub_227E60734();
    v7 = -1 << *(_BYTE *)(a3 + 32);
    v8 = v6 & ~v7;
    v9 = a3 + 56;
    if (((*(_QWORD *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0)
    {
      v10 = *(_QWORD *)(a3 + 48);
      v11 = (_QWORD *)(v10 + 16 * v8);
      v12 = *v11 == a1 && v11[1] == a2;
      if (v12 || (sub_227E60698() & 1) != 0)
        return 1;
      v14 = ~v7;
      v15 = (v8 + 1) & v14;
      if (((*(_QWORD *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) != 0)
      {
        while (1)
        {
          v16 = (_QWORD *)(v10 + 16 * v15);
          v17 = *v16 == a1 && v16[1] == a2;
          if (v17 || (sub_227E60698() & 1) != 0)
            break;
          result = 0;
          v15 = (v15 + 1) & v14;
          if (((*(_QWORD *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) == 0)
            return result;
        }
        return 1;
      }
    }
  }
  return 0;
}

uint64_t sub_227E4A8BC(void *a1, uint64_t a2)
{
  id v3;
  char v4;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  id v10;
  char v11;
  char v12;
  uint64_t v13;
  unint64_t v14;
  id v15;

  if ((a2 & 0xC000000000000001) != 0)
  {
    v3 = a1;
    v4 = sub_227E60434();

    return v4 & 1;
  }
  if (!*(_QWORD *)(a2 + 16)
    || (v6 = sub_227E60344(),
        v7 = -1 << *(_BYTE *)(a2 + 32),
        v8 = v6 & ~v7,
        v9 = a2 + 56,
        ((*(_QWORD *)(a2 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0))
  {
LABEL_11:
    v12 = 0;
    return v12 & 1;
  }
  sub_227D52DBC(0, (unint64_t *)&unk_25592A2C0);
  v10 = *(id *)(*(_QWORD *)(a2 + 48) + 8 * v8);
  v11 = sub_227E60350();

  if ((v11 & 1) == 0)
  {
    v13 = ~v7;
    v14 = (v8 + 1) & v13;
    if (((*(_QWORD *)(v9 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0)
    {
      do
      {
        v15 = *(id *)(*(_QWORD *)(a2 + 48) + 8 * v14);
        v12 = sub_227E60350();

        if ((v12 & 1) != 0)
          break;
        v14 = (v14 + 1) & v13;
      }
      while (((*(_QWORD *)(v9 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0);
      return v12 & 1;
    }
    goto LABEL_11;
  }
  v12 = 1;
  return v12 & 1;
}

Swift::String __swiftcall CKRecordID.bds_recordType()()
{
  void *v0;
  id v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  Swift::String result;
  _QWORD v16[4];
  _QWORD v17[2];

  v1 = objc_msgSend(v0, sel_recordName);
  v2 = sub_227E5FF84();
  v4 = v3;

  v17[0] = 46;
  v17[1] = 0xE100000000000000;
  v16[2] = v17;
  swift_bridgeObjectRetain();
  v5 = (_QWORD *)sub_227E550E8(0x7FFFFFFFFFFFFFFFLL, 1, sub_227E570D8, (uint64_t)v16, v2, v4);
  v6 = swift_bridgeObjectRelease();
  if (v5[2])
  {
    v8 = v5[4];
    v9 = v5[5];
    v10 = v5[6];
    v11 = v5[7];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v12 = MEMORY[0x22E2A9634](v8, v9, v10, v11);
    v14 = v13;
    swift_bridgeObjectRelease();
    v6 = v12;
    v7 = v14;
  }
  else
  {
    __break(1u);
  }
  result._object = v7;
  result._countAndFlagsBits = v6;
  return result;
}

void *sub_227E4ABD4(uint64_t a1, uint64_t a2, uint64_t a3, char *a4, uint64_t a5, uint64_t a6)
{
  objc_class *v6;
  id v13;

  v13 = objc_allocWithZone(v6);
  return sub_227E4AC44(a1, a2, a3, a4, a5, a6);
}

void *sub_227E4AC44(uint64_t a1, uint64_t a2, uint64_t a3, char *a4, uint64_t a5, uint64_t a6)
{
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  id v36;
  uint64_t v37;
  void (*v38)(char *, uint64_t, uint64_t);
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  objc_class *v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  id v51;
  void *v52;
  char *v53;
  void *v54;
  id v55;
  void *v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  void *v63;
  char *v64;
  char *v65;
  void *v66;
  char *v67;
  id v68;
  void *v69;
  uint64_t v70;
  uint64_t v71;
  id v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  _QWORD *v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  id v82;
  id v83;
  char *v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  _QWORD *v90;
  _QWORD *v91;
  uint64_t v92;
  uint64_t v93;
  id v94;
  id v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  char *v100;
  uint64_t v101;
  _QWORD *v102;
  _QWORD *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  id v108;
  id v109;
  char *v110;
  _QWORD *v111;
  uint64_t v112;
  uint64_t v113;
  id v114;
  id v115;
  char *v116;
  void *v117;
  uint64_t v118;
  uint64_t v119;
  char *v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  char *v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  uint64_t v137;
  uint64_t v138;
  char *v139;
  uint64_t v140;
  uint64_t v141;
  char *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  char *v150;
  uint64_t v151;
  uint64_t v152;
  _QWORD *v153;
  uint64_t v154;
  uint64_t v155;
  void (*v156)(char *, uint64_t, uint64_t);
  uint64_t v157;
  uint64_t v158;
  id v159;
  _QWORD aBlock[6];
  objc_super v161;

  v151 = a6;
  v152 = a5;
  v149 = a3;
  v150 = a4;
  v146 = a2;
  v145 = a1;
  v144 = sub_227D68330(&qword_25592A2E8);
  v143 = *(_QWORD *)(v144 - 8);
  MEMORY[0x24BDAC7A8](v144, v7);
  v142 = (char *)&v121 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v141 = sub_227D68330(&qword_25592A2F0);
  v140 = *(_QWORD *)(v141 - 8);
  MEMORY[0x24BDAC7A8](v141, v9);
  v139 = (char *)&v121 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v135 = sub_227D68330(&qword_25592A2F8);
  v134 = *(_QWORD *)(v135 - 8);
  MEMORY[0x24BDAC7A8](v135, v11);
  v133 = (char *)&v121 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v138 = sub_227D68330(&qword_25592A300);
  v137 = *(_QWORD *)(v138 - 8);
  MEMORY[0x24BDAC7A8](v138, v13);
  v136 = (char *)&v121 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v128 = sub_227D68330(&qword_25592A308);
  v127 = *(_QWORD *)(v128 - 8);
  MEMORY[0x24BDAC7A8](v128, v15);
  v126 = (char *)&v121 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v131 = sub_227D68330(&qword_25592A310);
  v130 = *(_QWORD *)(v131 - 8);
  MEMORY[0x24BDAC7A8](v131, v17);
  v129 = (char *)&v121 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_227D68330(&qword_25592A318);
  MEMORY[0x24BDAC7A8](v19, v20);
  v125 = (char *)&v121 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v132 = sub_227D68330(&qword_25592A320);
  v122 = *(_QWORD *)(v132 - 8);
  MEMORY[0x24BDAC7A8](v132, v22);
  v121 = (char *)&v121 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v148 = sub_227D68330((uint64_t *)&unk_25592A328);
  v124 = *(_QWORD *)(v148 - 8);
  MEMORY[0x24BDAC7A8](v148, v24);
  v123 = (char *)&v121 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = sub_227E602B4();
  v158 = *(_QWORD *)(v26 - 8);
  MEMORY[0x24BDAC7A8](v26, v27);
  v29 = (char *)&v121 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = sub_227E6029C();
  MEMORY[0x24BDAC7A8](v30, v31);
  v32 = sub_227E5F978();
  MEMORY[0x24BDAC7A8](v32, v33);
  *(_QWORD *)&v6[OBJC_IVAR____TtC13BookDataStore21BDSSyncEnginePipeline_kChangedRecordsBatchSize] = 32;
  v34 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)&v6[OBJC_IVAR____TtC13BookDataStore21BDSSyncEnginePipeline_subscribers] = MEMORY[0x24BEE4AF8];
  v35 = v6;
  sub_227E5F57C();
  v157 = OBJC_IVAR____TtC13BookDataStore21BDSSyncEnginePipeline_workQueue;
  v154 = sub_227D52DBC(0, (unint64_t *)&qword_253F3B040);
  if (qword_253F39928 != -1)
    swift_once();
  v36 = *(id *)(qword_253F39920 + OBJC_IVAR____TtC13BookDataStore13BDSSyncEngine_queue);
  sub_227E5F960();
  aBlock[0] = v34;
  sub_227D51624((unint64_t *)&unk_253F3B030, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5688], MEMORY[0x24BEE5698]);
  sub_227D68330((uint64_t *)&unk_253F3B000);
  sub_227D515E4(&qword_253F3B010, (uint64_t *)&unk_253F3B000, MEMORY[0x24BEE12C8]);
  sub_227E603E0();
  v37 = *MEMORY[0x24BEE5750];
  v38 = *(void (**)(char *, uint64_t, uint64_t))(v158 + 104);
  v38(v29, v37, v26);
  *(_QWORD *)&v35[v157] = sub_227E602E4();
  v39 = OBJC_IVAR____TtC13BookDataStore21BDSSyncEnginePipeline_stateQueue;
  sub_227E60290();
  sub_227E5F960();
  v38(v29, v37, v26);
  *(_QWORD *)&v35[v39] = sub_227E602E4();
  v35[OBJC_IVAR____TtC13BookDataStore21BDSSyncEnginePipeline__hasPendingModifications] = 0;
  v40 = OBJC_IVAR____TtC13BookDataStore21BDSSyncEnginePipeline_currentModifyBatchResponse;
  type metadata accessor for _BDSSyncEngineModifyBatchResponse();
  v41 = (_QWORD *)swift_allocObject();
  v42 = MEMORY[0x24BEE4AF8];
  v41[2] = MEMORY[0x24BEE4AF8];
  v41[3] = v42;
  v41[4] = v42;
  v41[5] = v42;
  v41[6] = MEMORY[0x24BEE4B00];
  *(_QWORD *)&v35[v40] = v41;
  *(_QWORD *)&v35[OBJC_IVAR____TtC13BookDataStore21BDSSyncEnginePipeline_scheduleSyncBlock] = 0;
  v43 = (uint64_t *)&v35[OBJC_IVAR____TtC13BookDataStore21BDSSyncEnginePipeline_recordType];
  v44 = v145;
  v45 = v146;
  *v43 = v145;
  v43[1] = v45;
  sub_227D52DBC(0, (unint64_t *)&unk_25592A2C0);
  sub_227E5FF84();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  *(_QWORD *)&v35[OBJC_IVAR____TtC13BookDataStore21BDSSyncEnginePipeline_zoneID] = sub_227E60260();
  v46 = v152;
  *(_QWORD *)&v35[OBJC_IVAR____TtC13BookDataStore21BDSSyncEnginePipeline_dataMapper] = v151;
  *(_QWORD *)&v35[OBJC_IVAR____TtC13BookDataStore21BDSSyncEnginePipeline_delegate] = v46;
  *(_QWORD *)&v35[OBJC_IVAR____TtC13BookDataStore21BDSSyncEnginePipeline_observer] = v46;
  swift_unknownObjectRetain();
  swift_unknownObjectRetain_n();

  v47 = (objc_class *)type metadata accessor for BDSSyncEnginePipeline();
  v161.receiver = v35;
  v161.super_class = v47;
  v48 = objc_msgSendSuper2(&v161, sel_init);
  v49 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v50 = swift_allocObject();
  *(_QWORD *)(v50 + 16) = sub_227E57B8C;
  *(_QWORD *)(v50 + 24) = v49;
  v51 = objc_allocWithZone(MEMORY[0x24BE0FC00]);
  aBlock[4] = sub_227E57B94;
  aBlock[5] = v50;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_227E00324;
  aBlock[3] = &unk_24F0912D8;
  v52 = _Block_copy(aBlock);
  v53 = (char *)v48;
  swift_retain_n();
  v54 = (void *)sub_227E5FF78();
  v55 = objc_msgSend(v51, sel_initWithNotifyBlock_blockDescription_, v52, v54);

  _Block_release(v52);
  swift_release();
  objc_msgSend(v55, sel_setCoalescingDelay_, 5.0);
  objc_msgSend(v55, sel_setMaximumDelay_, 5.0);
  swift_release_n();
  v56 = *(void **)&v53[OBJC_IVAR____TtC13BookDataStore21BDSSyncEnginePipeline_scheduleSyncBlock];
  *(_QWORD *)&v53[OBJC_IVAR____TtC13BookDataStore21BDSSyncEnginePipeline_scheduleSyncBlock] = v55;

  v57 = swift_allocObject();
  *(_QWORD *)(v57 + 16) = v42;
  v58 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v59 = (_QWORD *)swift_allocObject();
  v59[2] = v57;
  v59[3] = v58;
  v59[4] = v44;
  v59[5] = v45;
  v60 = swift_allocObject();
  *(_QWORD *)(v60 + 16) = v42;
  v61 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v62 = (_QWORD *)swift_allocObject();
  v62[2] = v60;
  v62[3] = v61;
  v62[4] = v44;
  v62[5] = v45;
  v153 = v62;
  v63 = (void *)qword_253F39920;
  swift_bridgeObjectRetain_n();
  v64 = v53;
  swift_retain();
  v147 = v60;
  swift_retain();
  v65 = v63;
  sub_227E5712C(v64, v44, v45, v65);

  v66 = (void *)qword_253F39920;
  v67 = v64;
  v68 = v66;
  sub_227E572C8(v67, (uint64_t)v68);

  aBlock[0] = *(_QWORD *)(qword_253F39920 + OBJC_IVAR____TtC13BookDataStore13BDSSyncEngine_recordChangePublisher);
  v69 = *(void **)&v67[OBJC_IVAR____TtC13BookDataStore21BDSSyncEnginePipeline_workQueue];
  v158 = OBJC_IVAR____TtC13BookDataStore21BDSSyncEnginePipeline_workQueue;
  v159 = v69;
  v70 = sub_227E602A8();
  v71 = (uint64_t)v125;
  v156 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v70 - 8) + 56);
  v157 = v70;
  v156(v125, 1, 1);
  swift_retain();
  v72 = v69;
  sub_227D68330((uint64_t *)&unk_253F3AEB0);
  sub_227D515E4(&qword_25592A338, (uint64_t *)&unk_253F3AEB0, MEMORY[0x24BDB9CB0]);
  v73 = sub_227E57B4C(&qword_25592A340, (unint64_t *)&qword_253F3B040, 0x24BDAC4D0, MEMORY[0x24BEE5670]);
  v74 = v121;
  v155 = v73;
  sub_227E5F5E8();
  sub_227D5809C(v71, &qword_25592A318);

  swift_release();
  v75 = swift_allocObject();
  *(_QWORD *)(v75 + 16) = v44;
  *(_QWORD *)(v75 + 24) = v45;
  sub_227D515E4(&qword_25592A348, &qword_25592A320, MEMORY[0x24BDB9A08]);
  swift_bridgeObjectRetain();
  v76 = v123;
  v77 = v132;
  sub_227E5F5DC();
  swift_release();
  (*(void (**)(char *, uint64_t))(v122 + 8))(v74, v77);
  v78 = (_QWORD *)swift_allocObject();
  v78[2] = v57;
  v78[3] = 32;
  v78[4] = sub_227E57BD0;
  v78[5] = v59;
  sub_227D515E4((unint64_t *)&unk_25592A350, (uint64_t *)&unk_25592A328, MEMORY[0x24BDB97F8]);
  v132 = v57;
  swift_retain();
  swift_retain();
  v79 = v148;
  sub_227E5F5D0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v124 + 8))(v76, v79);
  v80 = &v67[OBJC_IVAR____TtC13BookDataStore21BDSSyncEnginePipeline_subscribers];
  v81 = swift_beginAccess();
  MEMORY[0x22E2A96E8](v81);
  if (*(_QWORD *)((*(_QWORD *)v80 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*(_QWORD *)v80 & 0xFFFFFFFFFFFFFF8)
                                                                               + 0x18) >> 1)
    sub_227E600E0();
  v148 = (uint64_t)v59;
  sub_227E600F8();
  sub_227E600D4();
  swift_endAccess();
  aBlock[0] = *(_QWORD *)(qword_253F39920 + OBJC_IVAR____TtC13BookDataStore13BDSSyncEngine_recordDeletionPublisher);
  v159 = *(id *)&v67[v158];
  v82 = v159;
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v156)(v71, 1, 1, v157);
  swift_retain();
  v83 = v82;
  sub_227D68330((uint64_t *)&unk_253F3AE90);
  sub_227D515E4(&qword_25592A360, (uint64_t *)&unk_253F3AE90, MEMORY[0x24BDB9CB0]);
  v84 = v67;
  v85 = v126;
  sub_227E5F5E8();
  sub_227D5809C(v71, &qword_25592A318);

  swift_release();
  v86 = swift_allocObject();
  v87 = v146;
  *(_QWORD *)(v86 + 16) = v145;
  *(_QWORD *)(v86 + 24) = v87;
  sub_227D515E4(&qword_25592A368, &qword_25592A308, MEMORY[0x24BDB9A08]);
  v88 = v129;
  v89 = v128;
  sub_227E5F5DC();
  swift_release();
  (*(void (**)(char *, uint64_t))(v127 + 8))(v85, v89);
  v90 = (_QWORD *)swift_allocObject();
  v90[2] = v147;
  v90[3] = 32;
  v91 = v153;
  v90[4] = sub_227E57C14;
  v90[5] = v91;
  sub_227D515E4((unint64_t *)&unk_25592A370, &qword_25592A310, MEMORY[0x24BDB97F8]);
  swift_retain();
  swift_retain();
  v92 = v131;
  sub_227E5F5D0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v130 + 8))(v88, v92);
  v93 = swift_beginAccess();
  MEMORY[0x22E2A96E8](v93);
  if (*(_QWORD *)((*(_QWORD *)v80 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*(_QWORD *)v80 & 0xFFFFFFFFFFFFFF8)
                                                                               + 0x18) >> 1)
    sub_227E600E0();
  sub_227E600F8();
  sub_227E600D4();
  swift_endAccess();
  aBlock[0] = *(_QWORD *)(qword_253F39920 + OBJC_IVAR____TtC13BookDataStore13BDSSyncEngine_endFetchingChangesPublisher);
  v159 = *(id *)&v84[v158];
  v94 = v159;
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v156)(v71, 1, 1, v157);
  swift_retain();
  v95 = v94;
  sub_227D68330((uint64_t *)&unk_253F3AEA0);
  sub_227D515E4(&qword_25592A380, (uint64_t *)&unk_253F3AEA0, MEMORY[0x24BDB9CB0]);
  v96 = v133;
  v97 = v71;
  sub_227E5F5E8();
  sub_227D5809C(v71, &qword_25592A318);

  swift_release();
  v98 = swift_allocObject();
  v99 = v150;
  *(_QWORD *)(v98 + 16) = v149;
  *(_QWORD *)(v98 + 24) = v99;
  sub_227D515E4(&qword_25592A388, &qword_25592A2F8, MEMORY[0x24BDB9A08]);
  v150 = v84;
  v100 = v136;
  v101 = v135;
  sub_227E5F5DC();
  swift_release();
  (*(void (**)(char *, uint64_t))(v134 + 8))(v96, v101);
  v102 = (_QWORD *)swift_allocObject();
  v103 = v153;
  v102[2] = sub_227E57C14;
  v102[3] = v103;
  v104 = v148;
  v102[4] = sub_227E57BD0;
  v102[5] = v104;
  sub_227D515E4((unint64_t *)&unk_25592A390, &qword_25592A300, MEMORY[0x24BDB97F8]);
  swift_retain();
  swift_retain();
  v105 = v138;
  sub_227E5F5D0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v137 + 8))(v100, v105);
  v106 = swift_beginAccess();
  MEMORY[0x22E2A96E8](v106);
  v107 = v150;
  if (*(_QWORD *)((*(_QWORD *)v80 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*(_QWORD *)v80 & 0xFFFFFFFFFFFFFF8)
                                                                               + 0x18) >> 1)
    sub_227E600E0();
  sub_227E600F8();
  sub_227E600D4();
  swift_endAccess();
  aBlock[0] = *(_QWORD *)(qword_253F39920 + OBJC_IVAR____TtC13BookDataStore13BDSSyncEngine_updateMetadataPublisher);
  v159 = *(id *)&v107[v158];
  v108 = v159;
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v156)(v97, 1, 1, v157);
  swift_retain();
  v109 = v108;
  sub_227D68330((uint64_t *)&unk_253F3AEC0);
  sub_227D515E4(&qword_25592A3A0, (uint64_t *)&unk_253F3AEC0, MEMORY[0x24BDB9CB0]);
  v110 = v139;
  sub_227E5F5E8();
  sub_227D5809C(v97, &qword_25592A318);

  swift_release();
  v111 = (_QWORD *)swift_allocObject();
  v111[2] = sub_227E57C14;
  v111[3] = v103;
  v111[4] = sub_227E57BD0;
  v111[5] = v104;
  sub_227D515E4((unint64_t *)&unk_25592A3A8, &qword_25592A2F0, MEMORY[0x24BDB9A08]);
  swift_retain();
  swift_retain();
  v112 = v141;
  sub_227E5F5D0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v140 + 8))(v110, v112);
  v113 = swift_beginAccess();
  MEMORY[0x22E2A96E8](v113);
  if (*(_QWORD *)((*(_QWORD *)v80 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*(_QWORD *)v80 & 0xFFFFFFFFFFFFFF8)
                                                                               + 0x18) >> 1)
    sub_227E600E0();
  sub_227E600F8();
  sub_227E600D4();
  swift_endAccess();
  aBlock[0] = *(_QWORD *)(qword_253F39920 + OBJC_IVAR____TtC13BookDataStore13BDSSyncEngine_accountChangedPublisher);
  v159 = *(id *)&v107[v158];
  v114 = v159;
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v156)(v97, 1, 1, v157);
  swift_retain();
  v115 = v114;
  sub_227D68330((uint64_t *)&unk_253F3AE80);
  sub_227D515E4(&qword_25592A3B8, (uint64_t *)&unk_253F3AE80, MEMORY[0x24BDB9CB0]);
  v116 = v142;
  sub_227E5F5E8();
  sub_227D5809C(v97, &qword_25592A318);

  swift_release();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_227D515E4((unint64_t *)&unk_25592A3C0, &qword_25592A2E8, MEMORY[0x24BDB9A08]);
  v117 = v107;
  v118 = v144;
  sub_227E5F5D0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v143 + 8))(v116, v118);
  v119 = swift_beginAccess();
  MEMORY[0x22E2A96E8](v119);
  if (*(_QWORD *)((*(_QWORD *)v80 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*(_QWORD *)v80 & 0xFFFFFFFFFFFFFF8)
                                                                               + 0x18) >> 1)
    sub_227E600E0();
  sub_227E600F8();
  sub_227E600D4();
  swift_endAccess();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v117;
}

void sub_227E4C174(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;

  v1 = a1 + 16;
  swift_beginAccess();
  v2 = MEMORY[0x22E2AA96C](v1);
  if (v2)
  {
    v3 = (void *)v2;
    if (qword_253F39928 != -1)
      swift_once();
    v4 = (id)qword_253F39920;

    BDSSyncEngine.scheduleSync()();
  }
}

uint64_t sub_227E4C200(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t result;
  unint64_t v17;
  uint64_t v18;
  char *v19;
  void *v20;
  unint64_t *v21;
  unint64_t v22;
  uint64_t v23;
  void *v24;
  unint64_t v25;
  unint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  dispatch_group_t v39;
  void *v40;
  NSObject *v41;
  void *v42;
  unint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(char *, char *, uint64_t);
  dispatch_group_t v49;
  id v50;
  id v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  unint64_t *v55;
  uint64_t v56;
  uint64_t aBlock[6];

  v54 = sub_227E5F588();
  v8 = *(_QWORD *)(v54 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  v11 = MEMORY[0x24BDAC7A8](v54, v10);
  v12 = (char *)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11, v13);
  v15 = (char *)&v45 - v14;
  v55 = (unint64_t *)(a1 + 16);
  result = swift_beginAccess();
  v17 = *(_QWORD *)(a1 + 16);
  if (v17 >> 62)
  {
    swift_bridgeObjectRetain();
    v44 = sub_227E6056C();
    result = swift_bridgeObjectRelease();
    if (!v44)
      return result;
  }
  else if (!*(_QWORD *)((v17 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    return result;
  }
  swift_beginAccess();
  v18 = MEMORY[0x22E2AA96C](a2 + 16);
  if (v18)
  {
    v19 = (char *)v18;
    v52 = a3;
    v20 = *(void **)(v18 + OBJC_IVAR____TtC13BookDataStore21BDSSyncEnginePipeline_observer);
    v21 = v55;
    swift_beginAccess();
    v22 = *v21;
    v23 = qword_253F39928;
    v50 = v20;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    if (v23 != -1)
      swift_once();
    v24 = *(void **)(qword_253F39920 + OBJC_IVAR____TtC13BookDataStore13BDSSyncEngine_persistFetchCoordinatorGroup);
    v51 = v19;
    v48 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
    v48(v15, &v19[OBJC_IVAR____TtC13BookDataStore21BDSSyncEnginePipeline_logger], v54);
    v49 = v24;
    dispatch_group_enter(v49);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    v53 = v15;
    v25 = v22;
    v26 = a4;
    v27 = sub_227E5F570();
    v28 = sub_227E60224();
    if (os_log_type_enabled(v27, v28))
    {
      v29 = swift_slowAlloc();
      v46 = swift_slowAlloc();
      aBlock[0] = v46;
      *(_DWORD *)v29 = 136315394;
      swift_bridgeObjectRetain();
      v56 = sub_227D634E0(v52, v26, aBlock);
      sub_227E603B0();
      v47 = v26;
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v29 + 12) = 2048;
      if (v22 >> 62)
      {
        swift_bridgeObjectRetain();
        v30 = sub_227E6056C();
        swift_bridgeObjectRelease();
      }
      else
      {
        v30 = *(_QWORD *)((v22 & 0xFFFFFFFFFFFFF8) + 0x10);
      }
      v31 = v53;
      swift_bridgeObjectRelease();
      v56 = v30;
      sub_227E603B0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_227D4F000, v27, v28, "BDSSyncEnginePipeline - processIncomingRecordChanges: [%s] Begin processing %ld updates", (uint8_t *)v29, 0x16u);
      v32 = v46;
      swift_arrayDestroy();
      MEMORY[0x22E2AA8AC](v32, -1, -1);
      MEMORY[0x22E2AA8AC](v29, -1, -1);

      v26 = v47;
    }
    else
    {
      swift_bridgeObjectRelease_n();

      swift_bridgeObjectRelease_n();
      v31 = v53;
    }
    sub_227D52DBC(0, (unint64_t *)&qword_255929460);
    v47 = sub_227E600B0();
    v33 = v54;
    v48(v12, v31, v54);
    v34 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    v35 = (v9 + v34 + 7) & 0xFFFFFFFFFFFFFFF8;
    v36 = (v35 + 23) & 0xFFFFFFFFFFFFFFF8;
    v37 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v37 + v34, v12, v33);
    v38 = (_QWORD *)(v37 + v35);
    *v38 = v52;
    v38[1] = v26;
    *(_QWORD *)(v37 + v36) = v25;
    v39 = v49;
    *(_QWORD *)(v37 + ((v36 + 15) & 0xFFFFFFFFFFFFFFF8)) = v49;
    aBlock[4] = (uint64_t)sub_227E57F58;
    aBlock[5] = v37;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_227D5A858;
    aBlock[3] = (uint64_t)&unk_24F091620;
    v40 = _Block_copy(aBlock);
    v41 = v39;
    swift_bridgeObjectRetain();
    swift_release();
    v42 = (void *)v47;
    objc_msgSend(v50, sel_updatedCloudRecords_completion_, v47, v40);
    _Block_release(v40);

    swift_unknownObjectRelease();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v53, v33);
  }
  v43 = v55;
  swift_beginAccess();
  *v43 = MEMORY[0x24BEE4AF8];
  return swift_bridgeObjectRelease();
}

void sub_227E4C758(uint64_t a1, uint64_t a2, unint64_t a3, unint64_t a4, NSObject *a5)
{
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v9 = sub_227E5F570();
  v10 = sub_227E60224();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = swift_slowAlloc();
    v12 = swift_slowAlloc();
    v13 = v12;
    *(_DWORD *)v11 = 136315394;
    swift_bridgeObjectRetain();
    sub_227D634E0(a2, a3, &v13);
    sub_227E603B0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v11 + 12) = 2048;
    if (a4 >> 62)
    {
      swift_bridgeObjectRetain();
      sub_227E6056C();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    sub_227E603B0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_227D4F000, v9, v10, "BDSSyncEnginePipeline - processIncomingRecordChanges: [%s] Done processing %ld updates", (uint8_t *)v11, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x22E2AA8AC](v12, -1, -1);
    MEMORY[0x22E2AA8AC](v11, -1, -1);

  }
  else
  {
    swift_bridgeObjectRelease_n();

    swift_bridgeObjectRelease_n();
  }
  dispatch_group_leave(a5);
}

uint64_t sub_227E4C950(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t *v16;
  uint64_t result;
  unint64_t v18;
  uint64_t v19;
  char *v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  void (*v25)(char *, char *, uint64_t);
  char *v26;
  NSObject *v27;
  os_log_type_t v28;
  _BOOL4 v29;
  uint8_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  unint64_t v41;
  dispatch_group_t v42;
  void *v43;
  NSObject *v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(char *, char *, uint64_t);
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  dispatch_group_t v52;
  id v53;
  id v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t aBlock[6];

  v8 = sub_227E5F588();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  v12 = MEMORY[0x24BDAC7A8](v8, v11);
  v57 = (char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12, v13);
  v15 = (char *)&v47 - v14;
  v16 = (uint64_t *)(a1 + 16);
  result = swift_beginAccess();
  v18 = *(_QWORD *)(a1 + 16);
  if (v18 >> 62)
  {
    swift_bridgeObjectRetain();
    v46 = sub_227E6056C();
    result = swift_bridgeObjectRelease();
    if (!v46)
      return result;
  }
  else if (!*(_QWORD *)((v18 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    return result;
  }
  swift_beginAccess();
  v19 = MEMORY[0x22E2AA96C](a2 + 16);
  if (v19)
  {
    v20 = (char *)v19;
    v56 = a3;
    v21 = *(void **)(v19 + OBJC_IVAR____TtC13BookDataStore21BDSSyncEnginePipeline_observer);
    swift_beginAccess();
    v22 = *v16;
    v23 = qword_253F39928;
    v53 = v21;
    swift_unknownObjectRetain();
    v51 = v22;
    swift_bridgeObjectRetain();
    if (v23 != -1)
      swift_once();
    v24 = *(void **)(qword_253F39920 + OBJC_IVAR____TtC13BookDataStore13BDSSyncEngine_persistFetchCoordinatorGroup);
    v54 = v20;
    v55 = v8;
    v25 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
    v25(v15, &v20[OBJC_IVAR____TtC13BookDataStore21BDSSyncEnginePipeline_logger], v8);
    v52 = v24;
    dispatch_group_enter(v52);
    swift_bridgeObjectRetain_n();
    v26 = v15;
    v27 = sub_227E5F570();
    v28 = sub_227E60224();
    v29 = os_log_type_enabled(v27, v28);
    v50 = a4;
    if (v29)
    {
      v30 = (uint8_t *)swift_slowAlloc();
      v31 = swift_slowAlloc();
      v48 = v25;
      v32 = v31;
      aBlock[0] = v31;
      v49 = v9;
      *(_DWORD *)v30 = 136315138;
      swift_bridgeObjectRetain();
      v58 = sub_227D634E0(v56, a4, aBlock);
      v9 = v49;
      sub_227E603B0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_227D4F000, v27, v28, "BDSSyncEnginePipeline - processIncomingRecordDeletions: [%s] Begin processing deletes", v30, 0xCu);
      swift_arrayDestroy();
      v33 = v32;
      v25 = v48;
      MEMORY[0x22E2AA8AC](v33, -1, -1);
      MEMORY[0x22E2AA8AC](v30, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    sub_227D52DBC(0, &qword_255928490);
    v49 = sub_227E600B0();
    swift_bridgeObjectRelease();
    v34 = v57;
    v35 = v55;
    v25(v57, v26, v55);
    v36 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
    v37 = (v10 + v36 + 7) & 0xFFFFFFFFFFFFFFF8;
    v38 = (v37 + 23) & 0xFFFFFFFFFFFFFFF8;
    v39 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v39 + v36, v34, v35);
    v40 = (_QWORD *)(v39 + v37);
    v41 = v50;
    *v40 = v56;
    v40[1] = v41;
    v42 = v52;
    *(_QWORD *)(v39 + v38) = v52;
    aBlock[4] = (uint64_t)sub_227E57E68;
    aBlock[5] = v39;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_227D5A858;
    aBlock[3] = (uint64_t)&unk_24F0915D0;
    v43 = _Block_copy(aBlock);
    v44 = v42;
    swift_bridgeObjectRetain();
    swift_release();
    v45 = (void *)v49;
    objc_msgSend(v53, sel_removedCloudRecordsWithIDs_completion_, v49, v43);
    _Block_release(v43);

    swift_unknownObjectRelease();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v26, v35);
  }
  swift_beginAccess();
  *v16 = MEMORY[0x24BEE4AF8];
  return swift_bridgeObjectRelease();
}

void sub_227E4CE18(uint64_t a1, uint64_t a2, unint64_t a3, NSObject *a4)
{
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;

  swift_bridgeObjectRetain_n();
  v7 = sub_227E5F570();
  v8 = sub_227E60224();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc();
    v10 = swift_slowAlloc();
    v11 = v10;
    *(_DWORD *)v9 = 136315138;
    swift_bridgeObjectRetain();
    sub_227D634E0(a2, a3, &v11);
    sub_227E603B0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_227D4F000, v7, v8, "BDSSyncEnginePipeline - processIncomingRecordDeletions: [%s] Done processing deletes", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x22E2AA8AC](v10, -1, -1);
    MEMORY[0x22E2AA8AC](v9, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  dispatch_group_leave(a4);
}

uint64_t sub_227E4CF88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  char v6;

  if (sub_227E60314() == a2 && v4 == a3)
    v6 = 1;
  else
    v6 = sub_227E60698();
  swift_bridgeObjectRelease();
  return v6 & 1;
}

uint64_t sub_227E4CFF4(id *a1, uint64_t a2, uint64_t a3)
{
  id v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  _QWORD *v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v19;
  _QWORD v20[4];
  _QWORD v21[2];

  v5 = objc_msgSend(*a1, sel_recordName);
  v6 = sub_227E5FF84();
  v8 = v7;

  v21[0] = 46;
  v21[1] = 0xE100000000000000;
  v20[2] = v21;
  swift_bridgeObjectRetain();
  v9 = (_QWORD *)sub_227E550E8(0x7FFFFFFFFFFFFFFFLL, 1, sub_227E570D8, (uint64_t)v20, v6, v8);
  result = swift_bridgeObjectRelease();
  if (v9[2])
  {
    v11 = v9[4];
    v12 = v9[5];
    v13 = v9[6];
    v14 = v9[7];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v15 = MEMORY[0x22E2A9634](v11, v12, v13, v14);
    v17 = v16;
    swift_bridgeObjectRelease();
    if (v15 == a2 && v17 == a3)
      v19 = 1;
    else
      v19 = sub_227E60698();
    swift_bridgeObjectRelease();
    return v19 & 1;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_227E4D134(void **a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  void *v7;
  unint64_t *v8;
  id v9;
  uint64_t result;
  unint64_t v11;
  uint64_t v12;

  v7 = *a1;
  v8 = (unint64_t *)(a2 + 16);
  swift_beginAccess();
  v9 = v7;
  MEMORY[0x22E2A96E8]();
  if (*(_QWORD *)((*(_QWORD *)(a2 + 16) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*(_QWORD *)(a2 + 16) & 0xFFFFFFFFFFFFFF8)
                                                                                     + 0x18) >> 1)
    sub_227E600E0();
  sub_227E600F8();
  sub_227E600D4();
  swift_endAccess();
  result = swift_beginAccess();
  v11 = *v8;
  if (v11 >> 62)
  {
    swift_bridgeObjectRetain();
    v12 = sub_227E6056C();
    result = swift_bridgeObjectRelease();
    if (v12 < a3)
      return result;
  }
  else if (*(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10) < a3)
  {
    return result;
  }
  return a4(result);
}

uint64_t sub_227E4D24C(void **a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v11;

  v3 = *a1;
  if (v3)
  {
    v6 = objc_msgSend(v3, sel_zoneName);
    v7 = sub_227E5FF84();
    v9 = v8;

    if (v7 == a2 && v9 == a3)
      v11 = 1;
    else
      v11 = sub_227E60698();
    swift_bridgeObjectRelease();
  }
  else
  {
    v11 = 1;
  }
  return v11 & 1;
}

void sub_227E4D2F4(void **a1, uint64_t a2)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;

  v2 = *a1;
  v3 = a2 + 16;
  swift_beginAccess();
  v4 = MEMORY[0x22E2AA96C](v3);
  if (v4)
  {
    v5 = (void *)v4;
    sub_227E52E74(v2);

  }
}

void sub_227E4D414()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t aBlock[7];

  v1 = v0;
  v2 = sub_227E5F948();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2, v4);
  v6 = (char *)&aBlock[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_227E5F570();
  v8 = sub_227E60248();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc();
    v10 = swift_slowAlloc();
    aBlock[0] = v10;
    *(_DWORD *)v9 = 136315138;
    v19 = sub_227D634E0(0xD000000000000010, 0x8000000227E6E0F0, aBlock);
    sub_227E603B0();
    _os_log_impl(&dword_227D4F000, v7, v8, "BDSSyncEnginePipeline - %s", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x22E2AA8AC](v10, -1, -1);
    MEMORY[0x22E2AA8AC](v9, -1, -1);
  }

  v11 = *(id *)(v1 + OBJC_IVAR____TtC13BookDataStore21BDSSyncEnginePipeline_stateQueue);
  v12 = sub_227E5F93C();
  MEMORY[0x24BDAC7A8](v12, v13);
  *(&v19 - 2) = v1;
  *((_BYTE *)&v19 - 8) = 1;
  sub_227E602C0();

  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  v14 = os_transaction_create();
  v15 = *(void **)(v1 + OBJC_IVAR____TtC13BookDataStore21BDSSyncEnginePipeline_scheduleSyncBlock);
  if (v15)
  {
    v16 = swift_allocObject();
    *(_QWORD *)(v16 + 16) = v14;
    aBlock[4] = (uint64_t)nullsub_1;
    aBlock[5] = v16;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_227D5A858;
    aBlock[3] = (uint64_t)&unk_24F091080;
    v17 = _Block_copy(aBlock);
    v18 = v15;
    swift_unknownObjectRetain();
    swift_release();
    objc_msgSend(v18, sel_signalWithCompletion_, v17);
    swift_unknownObjectRelease();
    _Block_release(v17);

  }
  else
  {
    swift_unknownObjectRelease();
  }
}

uint64_t sub_227E4D714()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1[5] = v0;
  v2 = sub_227E5F948();
  v1[6] = v2;
  v1[7] = *(_QWORD *)(v2 - 8);
  v1[8] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_227E4D774()
{
  _QWORD *v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  void *v11;
  _QWORD *v12;
  uint64_t v14;

  v0[9] = OBJC_IVAR____TtC13BookDataStore21BDSSyncEnginePipeline_logger;
  v1 = sub_227E5F570();
  v2 = sub_227E60248();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    v4 = swift_slowAlloc();
    v14 = v4;
    *(_DWORD *)v3 = 136315138;
    v0[4] = sub_227D634E0(0x6E79537472617473, 0xEF29284B436F5463, &v14);
    sub_227E603B0();
    _os_log_impl(&dword_227D4F000, v1, v2, "BDSSyncEnginePipeline - %s", v3, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x22E2AA8AC](v4, -1, -1);
    MEMORY[0x22E2AA8AC](v3, -1, -1);
  }

  v6 = v0[7];
  v5 = v0[8];
  v7 = v0[5];
  v8 = v0[6];
  v9 = *(id *)(v7 + OBJC_IVAR____TtC13BookDataStore21BDSSyncEnginePipeline_stateQueue);
  sub_227E5F93C();
  v10 = swift_task_alloc();
  *(_QWORD *)(v10 + 16) = v7;
  *(_BYTE *)(v10 + 24) = 1;
  sub_227E602C0();

  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v8);
  if (qword_253F39928 != -1)
    swift_once();
  v11 = (void *)qword_253F39920;
  v0[10] = qword_253F39920;
  v11;
  v12 = (_QWORD *)swift_task_alloc();
  v0[11] = v12;
  *v12 = v0;
  v12[1] = sub_227E4D9AC;
  return BDSSyncEngine.sendChangesIfReady()();
}

uint64_t sub_227E4D9AC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 96) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_227E4DA28()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  void *v6;
  uint64_t v7;
  _QWORD *v8;
  id v9;
  uint64_t v10;
  void *v11;
  uint64_t v13;
  uint64_t v14;

  v1 = *(void **)(v0 + 96);

  v2 = v1;
  v3 = v1;
  v4 = sub_227E5F570();
  v5 = sub_227E60230();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = *(void **)(v0 + 96);
    v7 = swift_slowAlloc();
    v8 = (_QWORD *)swift_slowAlloc();
    v13 = swift_slowAlloc();
    v14 = v13;
    *(_DWORD *)v7 = 136315394;
    *(_QWORD *)(v0 + 16) = sub_227D634E0(0x6E79537472617473, 0xEF29284B436F5463, &v14);
    sub_227E603B0();
    *(_WORD *)(v7 + 12) = 2112;
    v9 = v6;
    v10 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 24) = v10;
    sub_227E603B0();
    *v8 = v10;

    _os_log_impl(&dword_227D4F000, v4, v5, "BDSSyncEnginePipeline - %s error: %@", (uint8_t *)v7, 0x16u);
    sub_227D68330(&qword_255929230);
    swift_arrayDestroy();
    MEMORY[0x22E2AA8AC](v8, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x22E2AA8AC](v13, -1, -1);
    MEMORY[0x22E2AA8AC](v7, -1, -1);

  }
  else
  {
    v11 = *(void **)(v0 + 96);

  }
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_227E4DD68(const void *a1, void *a2)
{
  _QWORD *v2;
  _QWORD *v4;

  v2[2] = a2;
  v2[3] = _Block_copy(a1);
  a2;
  v4 = (_QWORD *)swift_task_alloc();
  v2[4] = v4;
  *v4 = v2;
  v4[1] = sub_227E4DDC8;
  return sub_227E4D714();
}

uint64_t sub_227E4DDC8()
{
  uint64_t *v0;
  void (**v1)(_QWORD);
  void *v2;
  uint64_t v4;

  v1 = *(void (***)(_QWORD))(*v0 + 24);
  v2 = *(void **)(*v0 + 16);
  v4 = *v0;
  swift_task_dealloc();

  v1[2](v1);
  _Block_release(v1);
  return (*(uint64_t (**)(void))(v4 + 8))();
}

uint64_t sub_227E4DE2C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (__cdecl *v3)();

  v3 = (uint64_t (__cdecl *)())((char *)&dword_255929F60 + dword_255929F60);
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_227E215AC;
  return v3();
}

uint64_t sub_227E4DFB4(void *a1, void *aBlock, void *a3)
{
  _QWORD *v3;
  id v6;
  _QWORD *v7;
  uint64_t (__cdecl *v9)();

  v3[2] = a1;
  v3[3] = a3;
  v3[4] = _Block_copy(aBlock);
  v9 = (uint64_t (__cdecl *)())((char *)&dword_255929F60 + dword_255929F60);
  v6 = a1;
  a3;
  v7 = (_QWORD *)swift_task_alloc();
  v3[5] = v7;
  *v7 = v3;
  v7[1] = sub_227E4E03C;
  return v9();
}

uint64_t sub_227E4E03C(void *a1)
{
  uint64_t *v1;
  void (**v3)(_QWORD, _QWORD);
  void *v4;
  void *v5;
  uint64_t v7;

  v3 = *(void (***)(_QWORD, _QWORD))(*v1 + 32);
  v5 = *(void **)(*v1 + 16);
  v4 = *(void **)(*v1 + 24);
  v7 = *v1;
  swift_task_dealloc();

  ((void (**)(_QWORD, void *))v3)[2](v3, a1);
  _Block_release(v3);

  return (*(uint64_t (**)(void))(v7 + 8))();
}

id sub_227E4E0B8()
{
  if (qword_253F39928 != -1)
    swift_once();
  return (id)qword_253F39920;
}

id sub_227E4E158(id a1)
{
  uint64_t v1;
  void *v3;
  id result;
  id v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v3 = *(void **)(v1 + OBJC_IVAR____TtC13BookDataStore21BDSSyncEnginePipeline_dataMapper);
  if (v3)
  {
    result = objc_msgSend(v3, sel_recordFromCloudData_, a1);
    if (result)
      return result;
  }
  else
  {
    result = objc_msgSend(a1, sel_configuredRecordFromAttributes);
    if (result)
      return result;
  }
  v5 = a1;
  v6 = sub_227E5F570();
  v7 = sub_227E60230();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = swift_slowAlloc();
    v9 = swift_slowAlloc();
    v15 = v9;
    *(_DWORD *)v8 = 136315394;
    v14 = sub_227D634E0(0xD000000000000019, 0x8000000227E6E5B0, &v15);
    sub_227E603B0();
    *(_WORD *)(v8 + 12) = 2080;
    v10 = objc_msgSend(v5, sel_localRecordID, v14);
    v11 = sub_227E5FF84();
    v13 = v12;

    sub_227D634E0(v11, v13, &v15);
    sub_227E603B0();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_227D4F000, v6, v7, "BDSSyncEnginePipeline - %s: failed to create CKRecord for %s", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x22E2AA8AC](v9, -1, -1);
    MEMORY[0x22E2AA8AC](v8, -1, -1);
  }
  else
  {

  }
  return 0;
}

uint64_t sub_227E4E374(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;

  v4[26] = a3;
  v4[27] = v3;
  v4[24] = a1;
  v4[25] = a2;
  v5 = sub_227E5F948();
  v4[28] = v5;
  v4[29] = *(_QWORD *)(v5 - 8);
  v4[30] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_227E4E3D8()
{
  uint64_t v0;
  void *v1;
  id v2;
  NSObject *v3;
  os_log_type_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  void *v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  char *v17;
  char *v18;
  uint64_t v19;
  unint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  NSObject *v26;
  os_log_type_t v27;
  _BOOL4 v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41[2];

  v1 = *(void **)(v0 + 216);
  *(_QWORD *)(v0 + 248) = OBJC_IVAR____TtC13BookDataStore21BDSSyncEnginePipeline_logger;
  v2 = v1;
  v3 = sub_227E5F570();
  v4 = sub_227E60248();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = *(char **)(v0 + 216);
    v6 = swift_slowAlloc();
    v7 = swift_slowAlloc();
    v41[0] = v7;
    *(_DWORD *)v6 = 136315394;
    *(_QWORD *)(v0 + 184) = sub_227D634E0(0xD00000000000002ELL, 0x8000000227E6E110, v41);
    sub_227E603B0();
    *(_WORD *)(v6 + 12) = 2080;
    v8 = *(_QWORD *)&v5[OBJC_IVAR____TtC13BookDataStore21BDSSyncEnginePipeline_recordType];
    v9 = *(_QWORD *)&v5[OBJC_IVAR____TtC13BookDataStore21BDSSyncEnginePipeline_recordType + 8];
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 152) = sub_227D634E0(v8, v9, v41);
    sub_227E603B0();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_227D4F000, v3, v4, "BDSSyncEnginePipeline - %s: [%s]", (uint8_t *)v6, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x22E2AA8AC](v7, -1, -1);
    MEMORY[0x22E2AA8AC](v6, -1, -1);
  }
  else
  {
    v10 = *(void **)(v0 + 216);

  }
  v11 = *(_QWORD *)(v0 + 200);
  v12 = *(id *)(*(_QWORD *)(v0 + 216) + OBJC_IVAR____TtC13BookDataStore21BDSSyncEnginePipeline_zoneID);
  LOBYTE(v11) = sub_227E4A8BC(v12, v11);

  if ((v11 & 1) == 0)
  {
LABEL_14:
    v39 = *(_QWORD *)(v0 + 192);
    v40 = sub_227E5F72C();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56))(v39, 1, 1, v40);
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v13 = *(_QWORD *)(v0 + 216);
  v14 = OBJC_IVAR____TtC13BookDataStore21BDSSyncEnginePipeline_stateQueue;
  *(_QWORD *)(v0 + 256) = OBJC_IVAR____TtC13BookDataStore21BDSSyncEnginePipeline_stateQueue;
  v15 = *(void **)(v13 + v14);
  *(_QWORD *)(swift_task_alloc() + 16) = v13;
  v16 = v15;
  sub_227E602CC();
  *(_QWORD *)(v0 + 264) = 0;

  swift_task_dealloc();
  v17 = *(char **)(v0 + 216);
  if (*(_BYTE *)(v0 + 328) != 1)
  {
    v25 = v17;
    v26 = sub_227E5F570();
    v27 = sub_227E60248();
    v28 = os_log_type_enabled(v26, v27);
    v29 = *(char **)(v0 + 216);
    if (v28)
    {
      v30 = swift_slowAlloc();
      v31 = swift_slowAlloc();
      v41[0] = v31;
      *(_DWORD *)v30 = 136315394;
      *(_QWORD *)(v0 + 136) = sub_227D634E0(0xD00000000000002ELL, 0x8000000227E6E110, v41);
      sub_227E603B0();
      *(_WORD *)(v30 + 12) = 2080;
      v32 = *(_QWORD *)&v29[OBJC_IVAR____TtC13BookDataStore21BDSSyncEnginePipeline_recordType];
      v33 = *(_QWORD *)&v29[OBJC_IVAR____TtC13BookDataStore21BDSSyncEnginePipeline_recordType + 8];
      swift_bridgeObjectRetain();
      *(_QWORD *)(v0 + 120) = sub_227D634E0(v32, v33, v41);
      sub_227E603B0();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_227D4F000, v26, v27, "BDSSyncEnginePipeline - %s: [%s] No pending modifications. Returning nil", (uint8_t *)v30, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x22E2AA8AC](v31, -1, -1);
      MEMORY[0x22E2AA8AC](v30, -1, -1);
    }
    else
    {

    }
    goto LABEL_14;
  }
  *(_QWORD *)(v0 + 272) = os_transaction_create();
  v18 = &v17[OBJC_IVAR____TtC13BookDataStore21BDSSyncEnginePipeline_recordType];
  v19 = *(_QWORD *)&v17[OBJC_IVAR____TtC13BookDataStore21BDSSyncEnginePipeline_recordType];
  *(_QWORD *)(v0 + 280) = v19;
  v20 = *((_QWORD *)v18 + 1);
  *(_QWORD *)(v0 + 288) = v20;
  swift_bridgeObjectRetain_n();
  v21 = sub_227E5F570();
  v22 = sub_227E60248();
  if (os_log_type_enabled(v21, v22))
  {
    v23 = swift_slowAlloc();
    v24 = swift_slowAlloc();
    v41[0] = v24;
    *(_DWORD *)v23 = 136315394;
    *(_QWORD *)(v0 + 168) = sub_227D634E0(0xD00000000000002ELL, 0x8000000227E6E110, v41);
    sub_227E603B0();
    *(_WORD *)(v23 + 12) = 2080;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 176) = sub_227D634E0(v19, v20, v41);
    sub_227E603B0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_227D4F000, v21, v22, "BDSSyncEnginePipeline - %s: [%s] About to fetch dirty changes", (uint8_t *)v23, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x22E2AA8AC](v24, -1, -1);
    MEMORY[0x22E2AA8AC](v23, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  v34 = *(_QWORD *)(v0 + 208);
  v35 = *(void **)(*(_QWORD *)(v0 + 216) + OBJC_IVAR____TtC13BookDataStore21BDSSyncEnginePipeline_delegate);
  *(_QWORD *)(v0 + 56) = v0 + 128;
  *(_QWORD *)(v0 + 16) = v0;
  *(_QWORD *)(v0 + 24) = sub_227E4EA08;
  v36 = swift_continuation_init();
  *(_QWORD *)(v0 + 80) = MEMORY[0x24BDAC760];
  v37 = (_QWORD *)(v0 + 80);
  v37[1] = 0x40000000;
  v37[2] = sub_227E4EE40;
  v37[3] = &unk_24F0910A8;
  v37[4] = v36;
  objc_msgSend(v35, sel_nextBatchOfMutableCloudDataToSaveToCKWithFetchLimit_completion_, v34, v37);
  return swift_continuation_await();
}

uint64_t sub_227E4EA08()
{
  return swift_task_switch();
}

uint64_t sub_227E4EA54()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  NSObject *v7;
  os_log_type_t v8;
  _BOOL4 v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22[2];

  v1 = *(_QWORD *)(v0 + 128);
  *(_QWORD *)(v0 + 296) = v1;
  if (v1)
  {
    v2 = *(_QWORD *)(v0 + 272);
    swift_bridgeObjectRelease();
    v3 = swift_allocObject();
    *(_QWORD *)(v0 + 304) = v3;
    swift_unknownObjectWeakInit();
    v4 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 312) = v4;
    v4[2] = v3;
    v4[3] = v1;
    v4[4] = v2;
    v5 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 320) = v5;
    sub_227D68330(&qword_255929588);
    *v5 = v0;
    v5[1] = sub_227E4ED90;
    return sub_227E60680();
  }
  else
  {
    swift_bridgeObjectRetain();
    v7 = sub_227E5F570();
    v8 = sub_227E60248();
    v9 = os_log_type_enabled(v7, v8);
    v10 = *(_QWORD *)(v0 + 288);
    if (v9)
    {
      v11 = *(_QWORD *)(v0 + 280);
      v12 = swift_slowAlloc();
      v13 = swift_slowAlloc();
      v22[0] = v13;
      *(_DWORD *)v12 = 136315394;
      *(_QWORD *)(v0 + 144) = sub_227D634E0(0xD00000000000002ELL, 0x8000000227E6E110, v22);
      sub_227E603B0();
      *(_WORD *)(v12 + 12) = 2080;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v0 + 160) = sub_227D634E0(v11, v10, v22);
      sub_227E603B0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_227D4F000, v7, v8, "BDSSyncEnginePipeline - %s: [%s] no more dirty changes", (uint8_t *)v12, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x22E2AA8AC](v13, -1, -1);
      MEMORY[0x22E2AA8AC](v12, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    v15 = *(_QWORD *)(v0 + 232);
    v14 = *(_QWORD *)(v0 + 240);
    v17 = *(_QWORD *)(v0 + 216);
    v16 = *(_QWORD *)(v0 + 224);
    v18 = *(_QWORD *)(v0 + 192);
    v19 = *(id *)(v17 + *(_QWORD *)(v0 + 256));
    sub_227E5F93C();
    v20 = swift_task_alloc();
    *(_QWORD *)(v20 + 16) = v17;
    *(_BYTE *)(v20 + 24) = 0;
    sub_227E602C0();

    swift_task_dealloc();
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v16);
    swift_unknownObjectRelease();
    v21 = sub_227E5F72C();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v18, 1, 1, v21);
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_227E4ED90()
{
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_release();
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_227E4EE08()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_227E4EE40(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v2 = *(_QWORD *)(a1 + 32);
  if (a2)
  {
    sub_227D52DBC(0, &qword_25592A2B0);
    v3 = sub_227E600BC();
  }
  else
  {
    v3 = 0;
  }
  v5 = v3;
  sub_227E58304((uint64_t)&v5, *(_QWORD *)(*(_QWORD *)(v2 + 64) + 40));
  return swift_continuation_resume();
}

uint64_t sub_227E4EEB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  void *v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  id v29;
  id v30;
  char *v31;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD aBlock[6];

  v37 = a4;
  v38 = a3;
  v6 = sub_227E5F948();
  v41 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6, v7);
  v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_227E5F978();
  v39 = *(_QWORD *)(v10 - 8);
  v40 = v10;
  MEMORY[0x24BDAC7A8](v10, v11);
  v13 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_227D68330(&qword_25592A438);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(_QWORD *)(v15 + 64);
  MEMORY[0x24BDAC7A8](v14, v17);
  v18 = sub_227D68330(&qword_255929588);
  MEMORY[0x24BDAC7A8](v18, v19);
  v21 = (char *)&v34 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  v22 = MEMORY[0x22E2AA96C](a2 + 16);
  if (v22)
  {
    v23 = (void *)v22;
    v36 = *(id *)(v22 + OBJC_IVAR____TtC13BookDataStore21BDSSyncEnginePipeline_workQueue);
    (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))((char *)&v34 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v14);
    v24 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
    v25 = swift_allocObject();
    v35 = v13;
    v26 = v6;
    v27 = v38;
    *(_QWORD *)(v25 + 16) = v23;
    *(_QWORD *)(v25 + 24) = v27;
    (*(void (**)(unint64_t, char *, uint64_t))(v15 + 32))(v25 + v24, (char *)&v34 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0), v14);
    *(_QWORD *)(v25 + ((v16 + v24 + 7) & 0xFFFFFFFFFFFFFFF8)) = v37;
    aBlock[4] = sub_227E58274;
    aBlock[5] = v25;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_227D5A858;
    aBlock[3] = &unk_24F091828;
    v28 = _Block_copy(aBlock);
    swift_unknownObjectRetain();
    v29 = v36;
    v30 = v23;
    swift_bridgeObjectRetain();
    v31 = v35;
    sub_227E5F960();
    v42 = MEMORY[0x24BEE4AF8];
    sub_227D51624((unint64_t *)&unk_253F3AED0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
    sub_227D68330((uint64_t *)&unk_253F3AFE0);
    sub_227D515E4((unint64_t *)&unk_253F3AFF0, (uint64_t *)&unk_253F3AFE0, MEMORY[0x24BEE12C8]);
    sub_227E603E0();
    MEMORY[0x22E2A991C](0, v31, v9, v28);
    _Block_release(v28);

    (*(void (**)(char *, uint64_t))(v41 + 8))(v9, v26);
    (*(void (**)(char *, uint64_t))(v39 + 8))(v31, v40);
    return swift_release();
  }
  else
  {
    v33 = sub_227E5F72C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v21, 1, 1, v33);
    return sub_227E60110();
  }
}

uint64_t sub_227E4F204(uint64_t a1, unint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v12;

  v3 = sub_227D68330(&qword_255929588);
  v5 = MEMORY[0x24BDAC7A8](v3, v4);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5, v8);
  v10 = (char *)&v12 - v9;
  sub_227E4F2D8(a2, (uint64_t)&v12 - v9);
  sub_227E582BC((uint64_t)v10, (uint64_t)v7);
  sub_227D68330(&qword_25592A438);
  sub_227E60110();
  return sub_227D5809C((uint64_t)v10, &qword_255929588);
}

uint64_t sub_227E4F2D8@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  void *v21;
  id v22;
  unint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v42;
  uint64_t v43;
  NSObject *v44;
  os_log_type_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64[3];
  unint64_t v65;
  unint64_t v66;

  v3 = v2;
  v60 = a2;
  v59 = sub_227E5F948();
  v5 = *(_QWORD *)(v59 - 8);
  MEMORY[0x24BDAC7A8](v59, v6);
  v8 = (char *)&v56 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(v2 + OBJC_IVAR____TtC13BookDataStore21BDSSyncEnginePipeline_recordType);
  v9 = *(_QWORD *)(v2 + OBJC_IVAR____TtC13BookDataStore21BDSSyncEnginePipeline_recordType + 8);
  v11 = v2 + OBJC_IVAR____TtC13BookDataStore21BDSSyncEnginePipeline_logger;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v61 = v11;
  v12 = sub_227E5F570();
  LOBYTE(v13) = sub_227E60248();
  if (!os_log_type_enabled(v12, (os_log_type_t)v13))
  {
    swift_bridgeObjectRelease_n();

    swift_bridgeObjectRelease_n();
    goto LABEL_6;
  }
  v58 = v8;
  v56 = v5;
  v14 = v10;
  v10 = swift_slowAlloc();
  v15 = swift_slowAlloc();
  v64[0] = v15;
  *(_DWORD *)v10 = 136315650;
  v63 = sub_227D634E0(0xD000000000000029, 0x8000000227E6E580, v64);
  sub_227E603B0();
  *(_WORD *)(v10 + 12) = 2080;
  swift_bridgeObjectRetain();
  v57 = v14;
  v63 = sub_227D634E0(v14, v9, v64);
  sub_227E603B0();
  swift_bridgeObjectRelease_n();
  *(_WORD *)(v10 + 22) = 2048;
  if (a1 >> 62)
    goto LABEL_33;
  v16 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    swift_bridgeObjectRelease();
    v63 = v16;
    sub_227E603B0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_227D4F000, v12, (os_log_type_t)v13, "BDSSyncEnginePipeline - %s: [%s] %ld dirty changes", (uint8_t *)v10, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x22E2AA8AC](v15, -1, -1);
    MEMORY[0x22E2AA8AC](v10, -1, -1);

    v5 = v56;
    v10 = v57;
    v8 = v58;
LABEL_6:
    v15 = MEMORY[0x24BEE4AF8];
    v65 = MEMORY[0x24BEE4AF8];
    v66 = MEMORY[0x24BEE4AF8];
    v17 = *(_QWORD *)(v3 + OBJC_IVAR____TtC13BookDataStore21BDSSyncEnginePipeline_currentModifyBatchResponse);
    swift_beginAccess();
    swift_retain();
    sub_227E530B8(a1, (unint64_t)&v66, (uint64_t)&v65, (uint64_t *)(v17 + 48));
    swift_endAccess();
    swift_release();
    a1 = v66;
    if (v66 >> 62)
    {
      swift_bridgeObjectRetain();
      v42 = sub_227E6056C();
      swift_bridgeObjectRelease();
      if (v42)
        goto LABEL_10;
    }
    else if (*(_QWORD *)((v66 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_10;
    }
    if (v65 >> 62)
    {
      swift_bridgeObjectRetain();
      v43 = sub_227E6056C();
      swift_bridgeObjectRelease();
      if (!v43)
      {
LABEL_37:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRetain();
        v44 = sub_227E5F570();
        v45 = sub_227E60248();
        if (os_log_type_enabled(v44, v45))
        {
          v46 = swift_slowAlloc();
          v47 = swift_slowAlloc();
          v58 = v8;
          v48 = v47;
          v64[0] = v47;
          *(_DWORD *)v46 = 136315394;
          v63 = sub_227D634E0(0xD000000000000029, 0x8000000227E6E580, v64);
          sub_227E603B0();
          *(_WORD *)(v46 + 12) = 2080;
          swift_bridgeObjectRetain();
          v63 = sub_227D634E0(v10, v9, v64);
          sub_227E603B0();
          swift_bridgeObjectRelease_n();
          _os_log_impl(&dword_227D4F000, v44, v45, "BDSSyncEnginePipeline - %s: [%s] Cannot create CKRecords to save", (uint8_t *)v46, 0x16u);
          swift_arrayDestroy();
          v49 = v48;
          v8 = v58;
          MEMORY[0x22E2AA8AC](v49, -1, -1);
          MEMORY[0x22E2AA8AC](v46, -1, -1);
        }
        else
        {
          swift_bridgeObjectRelease_n();
        }

        v51 = v59;
        v50 = v60;
        v52 = *(id *)(v3 + OBJC_IVAR____TtC13BookDataStore21BDSSyncEnginePipeline_stateQueue);
        v53 = sub_227E5F93C();
        MEMORY[0x24BDAC7A8](v53, v54);
        *(&v56 - 2) = v3;
        *((_BYTE *)&v56 - 8) = 0;
        sub_227E602C0();

        (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v51);
        v55 = sub_227E5F72C();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 56))(v50, 1, 1, v55);
        return swift_bridgeObjectRelease();
      }
    }
    else if (!*(_QWORD *)((v65 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_37;
    }
LABEL_10:
    if (a1 >> 62)
    {
      swift_bridgeObjectRetain();
      v13 = sub_227E6056C();
      if (!v13)
      {
LABEL_20:
        v18 = v10;
        swift_bridgeObjectRelease();
        v23 = MEMORY[0x24BEE4AF8];
        goto LABEL_21;
      }
    }
    else
    {
      v13 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v13)
        goto LABEL_20;
    }
    v64[0] = v15;
    v12 = v64;
    sub_227E604F4();
    if ((v13 & 0x8000000000000000) == 0)
      break;
    __break(1u);
LABEL_33:
    swift_bridgeObjectRetain();
    v16 = sub_227E6056C();
    swift_bridgeObjectRelease();
  }
  v18 = v10;
  v19 = 0;
  do
  {
    if ((a1 & 0xC000000000000001) != 0)
      v20 = (id)MEMORY[0x22E2A9AFC](v19, a1);
    else
      v20 = *(id *)(a1 + 8 * v19 + 32);
    v21 = v20;
    ++v19;
    v22 = objc_msgSend(v20, sel_recordID);

    sub_227E604DC();
    sub_227E60500();
    sub_227E6050C();
    sub_227E604E8();
  }
  while (v13 != v19);
  v23 = v64[0];
  swift_bridgeObjectRelease();
LABEL_21:
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  v24 = sub_227E5F570();
  v25 = sub_227E60248();
  if (os_log_type_enabled(v24, v25))
  {
    v26 = swift_slowAlloc();
    v27 = swift_slowAlloc();
    v64[0] = v27;
    *(_DWORD *)v26 = 136316418;
    v63 = sub_227D634E0(0xD000000000000029, 0x8000000227E6E580, v64);
    sub_227E603B0();
    *(_WORD *)(v26 + 12) = 2080;
    swift_bridgeObjectRetain();
    v63 = sub_227D634E0(v18, v9, v64);
    sub_227E603B0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v26 + 22) = 2048;
    if (v23 >> 62)
    {
      swift_bridgeObjectRetain();
      v28 = sub_227E6056C();
      swift_bridgeObjectRelease();
    }
    else
    {
      v28 = *(_QWORD *)((v23 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    v63 = v28;
    sub_227E603B0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v26 + 32) = 2080;
    v29 = sub_227D52DBC(0, &qword_255928490);
    v30 = swift_bridgeObjectRetain();
    v31 = MEMORY[0x22E2A970C](v30, v29);
    v33 = v32;
    swift_bridgeObjectRelease();
    v63 = sub_227D634E0(v31, v33, v64);
    sub_227E603B0();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v26 + 42) = 2048;
    swift_beginAccess();
    if (v65 >> 62)
    {
      swift_bridgeObjectRetain();
      v34 = sub_227E6056C();
      swift_bridgeObjectRelease();
    }
    else
    {
      v34 = *(_QWORD *)((v65 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    v62 = v34;
    sub_227E603B0();
    *(_WORD *)(v26 + 52) = 2080;
    v35 = swift_bridgeObjectRetain();
    v36 = MEMORY[0x22E2A970C](v35, v29);
    v38 = v37;
    swift_bridgeObjectRelease();
    v62 = sub_227D634E0(v36, v38, v64);
    sub_227E603B0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_227D4F000, v24, v25, "BDSSyncEnginePipeline - %s: [%s] Returning records %ld idsToSave=%s, %ld idsToDelete=%s", (uint8_t *)v26, 0x3Eu);
    swift_arrayDestroy();
    MEMORY[0x22E2AA8AC](v27, -1, -1);
    MEMORY[0x22E2AA8AC](v26, -1, -1);

  }
  else
  {
    swift_bridgeObjectRelease_n();

    swift_bridgeObjectRelease_n();
  }
  v39 = v60;
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_227E5F6FC();
  v40 = sub_227E5F72C();
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56))(v39, 0, 1, v40);
  return swift_bridgeObjectRelease();
}

uint64_t sub_227E4FD28(void *a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  id v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  void *v25;
  id v26;
  id v27;
  char *v28;
  char *v29;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t aBlock[6];

  v2 = v1;
  v4 = sub_227E5F948();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v6);
  v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_227E5F978();
  v36 = *(_QWORD *)(v9 - 8);
  v37 = v9;
  MEMORY[0x24BDAC7A8](v9, v10);
  v35 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a1;
  v13 = sub_227E5F570();
  v14 = sub_227E60248();
  if (os_log_type_enabled(v13, v14))
  {
    v15 = swift_slowAlloc();
    v34 = v5;
    v16 = v15;
    v32 = (_QWORD *)swift_slowAlloc();
    v33 = swift_slowAlloc();
    aBlock[0] = v33;
    *(_DWORD *)v16 = 136315394;
    v38 = sub_227D634E0(0xD000000000000010, 0x8000000227E6E1B0, aBlock);
    sub_227E603B0();
    *(_WORD *)(v16 + 12) = 2112;
    v17 = v8;
    v18 = v4;
    v19 = objc_msgSend(v12, sel_recordID);
    v38 = (uint64_t)v19;
    sub_227E603B0();
    v20 = v32;
    *v32 = v19;
    v4 = v18;
    v8 = v17;

    _os_log_impl(&dword_227D4F000, v13, v14, "BDSSyncEnginePipeline - %s: %@", (uint8_t *)v16, 0x16u);
    sub_227D68330(&qword_255929230);
    swift_arrayDestroy();
    MEMORY[0x22E2AA8AC](v20, -1, -1);
    v21 = v33;
    swift_arrayDestroy();
    MEMORY[0x22E2AA8AC](v21, -1, -1);
    v22 = v16;
    v5 = v34;
    MEMORY[0x22E2AA8AC](v22, -1, -1);

  }
  else
  {

  }
  v23 = *(void **)&v2[OBJC_IVAR____TtC13BookDataStore21BDSSyncEnginePipeline_workQueue];
  v24 = swift_allocObject();
  *(_QWORD *)(v24 + 16) = v2;
  *(_QWORD *)(v24 + 24) = v12;
  aBlock[4] = (uint64_t)sub_227E576DC;
  aBlock[5] = v24;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_227D5A858;
  aBlock[3] = (uint64_t)&unk_24F091110;
  v25 = _Block_copy(aBlock);
  v26 = v12;
  v27 = v23;
  v28 = v2;
  v29 = v35;
  sub_227E5F960();
  v38 = MEMORY[0x24BEE4AF8];
  sub_227D51624((unint64_t *)&unk_253F3AED0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  sub_227D68330((uint64_t *)&unk_253F3AFE0);
  sub_227D515E4((unint64_t *)&unk_253F3AFF0, (uint64_t *)&unk_253F3AFE0, MEMORY[0x24BEE12C8]);
  sub_227E603E0();
  MEMORY[0x22E2A991C](0, v29, v8, v25);
  _Block_release(v25);

  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  (*(void (**)(char *, uint64_t))(v36 + 8))(v29, v37);
  return swift_release();
}

void sub_227E500F0(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  id v5;
  uint64_t v6;
  id v7;
  void *v8;
  id v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;

  v2 = v1;
  v4 = *(_QWORD *)(v1 + OBJC_IVAR____TtC13BookDataStore21BDSSyncEnginePipeline_currentModifyBatchResponse);
  swift_retain();
  v5 = objc_msgSend(a1, sel_recordID);
  swift_beginAccess();
  v6 = *(_QWORD *)(v4 + 48);
  swift_bridgeObjectRetain();
  swift_release();
  v7 = sub_227E4A5D4(v5, v6, &qword_25592A2B0);

  swift_bridgeObjectRelease();
  if (!v7)
  {
    v8 = *(void **)(v2 + OBJC_IVAR____TtC13BookDataStore21BDSSyncEnginePipeline_delegate);
    v9 = objc_msgSend(a1, sel_recordID);
    v7 = objc_msgSend(v8, sel_mutableCloudDataForRecordID_, v9);

    if (!v7)
      return;
    v10 = sub_227E5F570();
    v11 = sub_227E60230();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = (uint8_t *)swift_slowAlloc();
      v13 = swift_slowAlloc();
      v14 = v13;
      *(_DWORD *)v12 = 136315138;
      sub_227D634E0(0xD000000000000013, 0x8000000227E6E560, &v14);
      sub_227E603B0();
      _os_log_impl(&dword_227D4F000, v10, v11, "BDSSyncEnginePipeline - %s: Unable to find outstanding cloudData. Overwrite existing.", v12, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x22E2AA8AC](v13, -1, -1);
      MEMORY[0x22E2AA8AC](v12, -1, -1);
    }

  }
  sub_227E50324(a1, v7);

}

void sub_227E50324(void *a1, id a2)
{
  uint64_t v2;
  uint64_t v4;
  id v5;
  void *v6;
  uint64_t v7;

  objc_msgSend(a2, sel_setSystemFields_, a1);
  v4 = *(_QWORD *)(v2 + OBJC_IVAR____TtC13BookDataStore21BDSSyncEnginePipeline_currentModifyBatchResponse);
  swift_retain();
  v5 = objc_msgSend(a1, sel_recordID);
  swift_beginAccess();
  v6 = (void *)sub_227E5588C((unint64_t)v5);
  swift_endAccess();

  swift_beginAccess();
  v7 = swift_unknownObjectRetain();
  MEMORY[0x22E2A96E8](v7);
  if (*(_QWORD *)((*(_QWORD *)(v4 + 16) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*(_QWORD *)(v4 + 16) & 0xFFFFFFFFFFFFFF8)
                                                                                     + 0x18) >> 1)
    sub_227E600E0();
  sub_227E600F8();
  sub_227E600D4();
  swift_endAccess();
  swift_release();

}

uint64_t sub_227E50444(void *a1, void *a2)
{
  char *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  NSObject *v14;
  os_log_type_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  id v21;
  _QWORD *v22;
  os_log_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  void *v27;
  _QWORD *v28;
  void *v29;
  id v30;
  id v31;
  id v32;
  id v33;
  _BYTE *v34;
  _BYTE v36[12];
  int v37;
  os_log_t v38;
  _QWORD *v39;
  uint64_t v40;
  _BYTE *v41;
  char *v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t aBlock[6];

  v5 = sub_227E5F948();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  v9 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = sub_227E5F978();
  v44 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10, v11);
  v42 = v2;
  v43 = &v36[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = a1;
  v14 = sub_227E5F570();
  v15 = sub_227E60248();
  v16 = v15;
  if (os_log_type_enabled(v14, v15))
  {
    v17 = swift_slowAlloc();
    v41 = v9;
    v18 = v17;
    v39 = (_QWORD *)swift_slowAlloc();
    v40 = swift_slowAlloc();
    aBlock[0] = v40;
    *(_DWORD *)v18 = 136315394;
    v38 = v14;
    v45 = sub_227D634E0(0xD000000000000027, 0x8000000227E6E1D0, aBlock);
    sub_227E603B0();
    *(_WORD *)(v18 + 12) = 2112;
    v45 = (uint64_t)v13;
    v19 = v13;
    v37 = v16;
    v20 = v10;
    v21 = v19;
    sub_227E603B0();
    v22 = v39;
    *v39 = v13;

    v10 = v20;
    v23 = v38;
    _os_log_impl(&dword_227D4F000, v38, (os_log_type_t)v37, "BDSSyncEnginePipeline - %s: %@", (uint8_t *)v18, 0x16u);
    sub_227D68330(&qword_255929230);
    swift_arrayDestroy();
    MEMORY[0x22E2AA8AC](v22, -1, -1);
    v24 = v40;
    swift_arrayDestroy();
    MEMORY[0x22E2AA8AC](v24, -1, -1);
    v25 = v18;
    v9 = v41;
    MEMORY[0x22E2AA8AC](v25, -1, -1);

  }
  else
  {

  }
  v26 = v42;
  v27 = *(void **)&v42[OBJC_IVAR____TtC13BookDataStore21BDSSyncEnginePipeline_workQueue];
  v28 = (_QWORD *)swift_allocObject();
  v28[2] = v26;
  v28[3] = v13;
  v28[4] = a2;
  aBlock[4] = (uint64_t)sub_227E57704;
  aBlock[5] = (uint64_t)v28;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_227D5A858;
  aBlock[3] = (uint64_t)&unk_24F091160;
  v29 = _Block_copy(aBlock);
  v30 = v13;
  v31 = v27;
  v32 = v26;
  v33 = a2;
  v34 = v43;
  sub_227E5F960();
  v45 = MEMORY[0x24BEE4AF8];
  sub_227D51624((unint64_t *)&unk_253F3AED0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  sub_227D68330((uint64_t *)&unk_253F3AFE0);
  sub_227D515E4((unint64_t *)&unk_253F3AFF0, (uint64_t *)&unk_253F3AFE0, MEMORY[0x24BEE12C8]);
  sub_227E603E0();
  MEMORY[0x22E2A991C](0, v34, v9, v29);
  _Block_release(v29);

  (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v9, v5);
  (*(void (**)(_BYTE *, uint64_t))(v44 + 8))(v34, v10);
  return swift_release();
}

uint64_t sub_227E50830(void *a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  NSObject *v13;
  os_log_type_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  id v20;
  _QWORD *v21;
  os_log_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  void *v27;
  id v28;
  id v29;
  char *v30;
  _BYTE *v31;
  _BYTE v33[4];
  int v34;
  os_log_t v35;
  _QWORD *v36;
  uint64_t v37;
  _BYTE *v38;
  _BYTE *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t aBlock[6];

  v2 = v1;
  v4 = sub_227E5F948();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v6);
  v8 = &v33[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = sub_227E5F978();
  v40 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9, v10);
  v39 = &v33[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = a1;
  v13 = sub_227E5F570();
  v14 = sub_227E60248();
  v15 = v14;
  if (os_log_type_enabled(v13, v14))
  {
    v16 = swift_slowAlloc();
    v38 = v8;
    v17 = v16;
    v36 = (_QWORD *)swift_slowAlloc();
    v37 = swift_slowAlloc();
    aBlock[0] = v37;
    *(_DWORD *)v17 = 136315394;
    v35 = v13;
    v41 = sub_227D634E0(0xD00000000000001ELL, 0x8000000227E6E200, aBlock);
    sub_227E603B0();
    *(_WORD *)(v17 + 12) = 2112;
    v41 = (uint64_t)v12;
    v18 = v12;
    v34 = v15;
    v19 = v9;
    v20 = v18;
    sub_227E603B0();
    v21 = v36;
    *v36 = v12;

    v9 = v19;
    v22 = v35;
    _os_log_impl(&dword_227D4F000, v35, (os_log_type_t)v34, "BDSSyncEnginePipeline - %s: %@", (uint8_t *)v17, 0x16u);
    sub_227D68330(&qword_255929230);
    swift_arrayDestroy();
    MEMORY[0x22E2AA8AC](v21, -1, -1);
    v23 = v37;
    swift_arrayDestroy();
    MEMORY[0x22E2AA8AC](v23, -1, -1);
    v24 = v17;
    v8 = v38;
    MEMORY[0x22E2AA8AC](v24, -1, -1);

  }
  else
  {

  }
  v25 = *(void **)&v2[OBJC_IVAR____TtC13BookDataStore21BDSSyncEnginePipeline_workQueue];
  v26 = swift_allocObject();
  *(_QWORD *)(v26 + 16) = v2;
  *(_QWORD *)(v26 + 24) = v12;
  aBlock[4] = (uint64_t)sub_227E57708;
  aBlock[5] = v26;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_227D5A858;
  aBlock[3] = (uint64_t)&unk_24F0911B0;
  v27 = _Block_copy(aBlock);
  v28 = v12;
  v29 = v25;
  v30 = v2;
  v31 = v39;
  sub_227E5F960();
  v41 = MEMORY[0x24BEE4AF8];
  sub_227D51624((unint64_t *)&unk_253F3AED0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  sub_227D68330((uint64_t *)&unk_253F3AFE0);
  sub_227D515E4((unint64_t *)&unk_253F3AFF0, (uint64_t *)&unk_253F3AFE0, MEMORY[0x24BEE12C8]);
  sub_227E603E0();
  MEMORY[0x22E2A991C](0, v31, v8, v27);
  _Block_release(v27);

  (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v8, v4);
  (*(void (**)(_BYTE *, uint64_t))(v40 + 8))(v31, v9);
  return swift_release();
}

uint64_t sub_227E50C04(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  void *v4;
  id v5;

  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC13BookDataStore21BDSSyncEnginePipeline_currentModifyBatchResponse);
  swift_beginAccess();
  swift_retain();
  v4 = (void *)sub_227E5588C((unint64_t)a1);
  swift_endAccess();

  swift_beginAccess();
  v5 = a1;
  MEMORY[0x22E2A96E8]();
  if (*(_QWORD *)((*(_QWORD *)(v3 + 24) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*(_QWORD *)(v3 + 24) & 0xFFFFFFFFFFFFFF8)
                                                                                     + 0x18) >> 1)
    sub_227E600E0();
  sub_227E600F8();
  sub_227E600D4();
  swift_endAccess();
  return swift_release();
}

uint64_t sub_227E50CE4(void *a1, void *a2)
{
  char *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  NSObject *v14;
  os_log_type_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  id v21;
  _QWORD *v22;
  os_log_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  void *v27;
  _QWORD *v28;
  void *v29;
  id v30;
  id v31;
  id v32;
  id v33;
  _BYTE *v34;
  _BYTE v36[12];
  int v37;
  os_log_t v38;
  _QWORD *v39;
  uint64_t v40;
  _BYTE *v41;
  char *v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t aBlock[6];

  v5 = sub_227E5F948();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  v9 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = sub_227E5F978();
  v44 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10, v11);
  v42 = v2;
  v43 = &v36[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = a1;
  v14 = sub_227E5F570();
  v15 = sub_227E60248();
  v16 = v15;
  if (os_log_type_enabled(v14, v15))
  {
    v17 = swift_slowAlloc();
    v41 = v9;
    v18 = v17;
    v39 = (_QWORD *)swift_slowAlloc();
    v40 = swift_slowAlloc();
    aBlock[0] = v40;
    *(_DWORD *)v18 = 136315394;
    v38 = v14;
    v45 = sub_227D634E0(0xD000000000000029, 0x8000000227E6E220, aBlock);
    sub_227E603B0();
    *(_WORD *)(v18 + 12) = 2112;
    v45 = (uint64_t)v13;
    v19 = v13;
    v37 = v16;
    v20 = v10;
    v21 = v19;
    sub_227E603B0();
    v22 = v39;
    *v39 = v13;

    v10 = v20;
    v23 = v38;
    _os_log_impl(&dword_227D4F000, v38, (os_log_type_t)v37, "BDSSyncEnginePipeline - %s: %@", (uint8_t *)v18, 0x16u);
    sub_227D68330(&qword_255929230);
    swift_arrayDestroy();
    MEMORY[0x22E2AA8AC](v22, -1, -1);
    v24 = v40;
    swift_arrayDestroy();
    MEMORY[0x22E2AA8AC](v24, -1, -1);
    v25 = v18;
    v9 = v41;
    MEMORY[0x22E2AA8AC](v25, -1, -1);

  }
  else
  {

  }
  v26 = v42;
  v27 = *(void **)&v42[OBJC_IVAR____TtC13BookDataStore21BDSSyncEnginePipeline_workQueue];
  v28 = (_QWORD *)swift_allocObject();
  v28[2] = v26;
  v28[3] = v13;
  v28[4] = a2;
  aBlock[4] = (uint64_t)sub_227E57704;
  aBlock[5] = (uint64_t)v28;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_227D5A858;
  aBlock[3] = (uint64_t)&unk_24F091200;
  v29 = _Block_copy(aBlock);
  v30 = v13;
  v31 = v27;
  v32 = v26;
  v33 = a2;
  v34 = v43;
  sub_227E5F960();
  v45 = MEMORY[0x24BEE4AF8];
  sub_227D51624((unint64_t *)&unk_253F3AED0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  sub_227D68330((uint64_t *)&unk_253F3AFE0);
  sub_227D515E4((unint64_t *)&unk_253F3AFF0, (uint64_t *)&unk_253F3AFE0, MEMORY[0x24BEE12C8]);
  sub_227E603E0();
  MEMORY[0x22E2A991C](0, v34, v9, v29);
  _Block_release(v29);

  (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v9, v5);
  (*(void (**)(_BYTE *, uint64_t))(v44 + 8))(v34, v10);
  return swift_release();
}

uint64_t sub_227E510D0(_QWORD *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  NSObject *v13;
  unint64_t v14;
  os_log_type_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  void *v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  void *v30;
  void *v31;
  char *v32;
  void *v33;
  unint64_t *v34;
  void *v35;
  void *v36;
  void *v37;
  void *v38;
  void *v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t result;
  uint64_t v44;
  os_log_type_t v45;
  NSObject *v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  _QWORD *v50;
  _QWORD *v51;
  _QWORD *v52;
  unint64_t v54;
  unint64_t v55;
  uint64_t aBlock;
  uint64_t v57;
  void (*v58)(uint64_t, uint64_t, void *);
  void *v59;
  uint64_t (*v60)();
  uint64_t v61;

  v3 = v2;
  v5 = v2 + OBJC_IVAR____TtC13BookDataStore21BDSSyncEnginePipeline_recordType;
  v6 = *(_QWORD *)(v2 + OBJC_IVAR____TtC13BookDataStore21BDSSyncEnginePipeline_recordType);
  v7 = *(_QWORD *)(v5 + 8);
  v52 = a1 + 2;
  swift_beginAccess();
  v8 = a1[2];
  v51 = a1 + 3;
  swift_beginAccess();
  v9 = a1[3];
  v50 = a1 + 4;
  swift_beginAccess();
  v10 = a1[4];
  v49 = a1 + 5;
  swift_beginAccess();
  v47 = v6;
  v11 = a1[5];
  if (v11 >> 62)
  {
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v12 = sub_227E6056C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v12 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  v13 = sub_227E5F570();
  v14 = v8 >> 62;
  v54 = v9 >> 62;
  v55 = v10 >> 62;
  v48 = v12;
  if (v12)
  {
    v15 = sub_227E60230();
    if (os_log_type_enabled(v13, v15))
    {
      v45 = v15;
      v46 = v13;
      v16 = swift_slowAlloc();
      v44 = swift_slowAlloc();
      aBlock = v44;
      *(_DWORD *)v16 = 136316418;
      sub_227D634E0(0xD000000000000019, 0x8000000227E6E620, &aBlock);
      sub_227E603B0();
      *(_WORD *)(v16 + 12) = 2080;
      swift_bridgeObjectRetain();
      sub_227D634E0(v47, v7, &aBlock);
      v14 = v8 >> 62;
      sub_227E603B0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v16 + 22) = 2048;
      if (v8 >> 62)
      {
        swift_bridgeObjectRetain();
        sub_227E6056C();
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      sub_227E603B0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v16 + 32) = 2048;
      if (!v54)
        goto LABEL_8;
      goto LABEL_16;
    }
LABEL_17:
    swift_bridgeObjectRelease_n();

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    goto LABEL_20;
  }
  v17 = sub_227E60248();
  if (!os_log_type_enabled(v13, (os_log_type_t)v17))
    goto LABEL_17;
  v45 = v17;
  v46 = v13;
  v16 = swift_slowAlloc();
  v44 = swift_slowAlloc();
  aBlock = v44;
  *(_DWORD *)v16 = 136316418;
  sub_227D634E0(0xD000000000000019, 0x8000000227E6E620, &aBlock);
  sub_227E603B0();
  *(_WORD *)(v16 + 12) = 2080;
  swift_bridgeObjectRetain();
  sub_227D634E0(v47, v7, &aBlock);
  v14 = v8 >> 62;
  sub_227E603B0();
  swift_bridgeObjectRelease_n();
  *(_WORD *)(v16 + 22) = 2048;
  if (v8 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_227E6056C();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  sub_227E603B0();
  swift_bridgeObjectRelease();
  *(_WORD *)(v16 + 32) = 2048;
  if (!v54)
    goto LABEL_8;
LABEL_16:
  swift_bridgeObjectRetain();
  sub_227E6056C();
  swift_bridgeObjectRelease();
LABEL_8:
  swift_bridgeObjectRelease();
  sub_227E603B0();
  swift_bridgeObjectRelease();
  *(_WORD *)(v16 + 42) = 2048;
  if (v55)
  {
    swift_bridgeObjectRetain();
    sub_227E6056C();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  sub_227E603B0();
  swift_bridgeObjectRelease();
  *(_WORD *)(v16 + 52) = 2048;
  if (v11 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_227E6056C();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  sub_227E603B0();
  swift_bridgeObjectRelease();
  _os_log_impl(&dword_227D4F000, v46, v45, "BDSSyncEnginePipeline - %s: [%s] %ld savedCloudDatas, %ld deletedRecordIDs, %ld serverVersionRecords, %ld failedRecordIDs", (uint8_t *)v16, 0x3Eu);
  swift_arrayDestroy();
  MEMORY[0x22E2AA8AC](v44, -1, -1);
  MEMORY[0x22E2AA8AC](v16, -1, -1);

LABEL_20:
  v18 = v3;
  if (v14)
  {
    swift_bridgeObjectRetain();
    v19 = sub_227E6056C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v19 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v20 = MEMORY[0x24BDAC760];
  v21 = v9;
  if (v19)
  {
    v22 = *(void **)(v18 + OBJC_IVAR____TtC13BookDataStore21BDSSyncEnginePipeline_delegate);
    sub_227D68330(&qword_25592A430);
    v23 = (void *)sub_227E600B0();
    swift_bridgeObjectRelease();
    v60 = j_nullsub_1;
    v61 = 0;
    v24 = v20;
    aBlock = v20;
    v25 = v18;
    v57 = 1107296256;
    v58 = sub_227E17004;
    v59 = &unk_24F091760;
    v26 = _Block_copy(&aBlock);
    objc_msgSend(v22, sel_syncProvider_updateSyncGenerationFromCloudData_completion_, v18, v23, v26);
    _Block_release(v26);

    v9 = v21;
    if (!v54)
    {
LABEL_24:
      v27 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
      goto LABEL_25;
    }
  }
  else
  {
    v24 = MEMORY[0x24BDAC760];
    swift_bridgeObjectRelease();
    v25 = v18;
    if (!v54)
      goto LABEL_24;
  }
  swift_bridgeObjectRetain();
  v27 = sub_227E6056C();
  swift_bridgeObjectRelease();
LABEL_25:
  v28 = v10;
  v29 = v24;
  if (v27)
  {
    v30 = *(void **)(v25 + OBJC_IVAR____TtC13BookDataStore21BDSSyncEnginePipeline_delegate);
    sub_227D52DBC(0, &qword_255928490);
    v31 = (void *)sub_227E600B0();
    swift_bridgeObjectRelease();
    v60 = nullsub_1;
    v61 = 0;
    aBlock = v24;
    v32 = "=%@";
    v57 = 1107296256;
    v58 = sub_227E17004;
    v59 = &unk_24F091788;
    v33 = _Block_copy(&aBlock);
    objc_msgSend(v30, sel_syncProvider_removeCloudDataForIDs_completion_, v25, v31, v33);
    _Block_release(v33);

    if (!v55)
      goto LABEL_27;
  }
  else
  {
    swift_bridgeObjectRelease();
    v32 = "CRDTModelLocalFileManager unable to create directory at %@ error=%@" + 64;
    if (!v55)
    {
LABEL_27:
      if (*(_QWORD *)((v28 & 0xFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_28;
LABEL_34:
      swift_bridgeObjectRelease();
      v34 = qword_255928F98 + 104;
      if (v48)
        goto LABEL_29;
      goto LABEL_35;
    }
  }
  swift_bridgeObjectRetain();
  v41 = sub_227E6056C();
  swift_bridgeObjectRelease();
  if (!v41)
    goto LABEL_34;
LABEL_28:
  v34 = &qword_255928F98[13];
  v35 = *(void **)(v25 + OBJC_IVAR____TtC13BookDataStore21BDSSyncEnginePipeline_delegate);
  sub_227D52DBC(0, (unint64_t *)&qword_255929460);
  v36 = (void *)sub_227E600B0();
  swift_bridgeObjectRelease();
  v60 = j_nullsub_1;
  v61 = 0;
  aBlock = v29;
  v57 = *((_QWORD *)v32 + 415);
  v58 = sub_227E17004;
  v59 = &unk_24F0917B0;
  v37 = _Block_copy(&aBlock);
  objc_msgSend(v35, sel_syncProvider_resolveConflictsForRecords_completion_, v25, v36, v37);
  _Block_release(v37);

  if (v48)
  {
LABEL_29:
    v38 = *(void **)(v25 + v34[496]);
    sub_227D52DBC(0, &qword_255928490);
    v39 = (void *)sub_227E600B0();
    swift_bridgeObjectRelease();
    v60 = j_nullsub_1;
    v61 = 0;
    aBlock = v29;
    v57 = *((_QWORD *)v32 + 415);
    v58 = sub_227E17004;
    v59 = &unk_24F0917D8;
    v40 = _Block_copy(&aBlock);
    objc_msgSend(v38, sel_syncProvider_failedRecordIDs_completion_, v25, v39, v40);
    _Block_release(v40);

    goto LABEL_36;
  }
LABEL_35:
  swift_bridgeObjectRelease();
LABEL_36:
  v42 = MEMORY[0x24BEE4AF8];
  *v52 = MEMORY[0x24BEE4AF8];
  swift_bridgeObjectRelease();
  *v51 = v42;
  swift_bridgeObjectRelease();
  *v50 = v42;
  swift_bridgeObjectRelease();
  *v49 = v42;
  result = swift_bridgeObjectRelease();
  if ((a2 & 1) != 0)
    return sub_227E54C00();
  return result;
}

void sub_227E51B44(void *a1, id a2)
{
  uint64_t v2;
  uint64_t v3;
  id v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  id v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  _QWORD *v17;
  id v18;
  id v19;
  _QWORD *v20;
  id v21;
  id v22;
  id v23;
  id v24;
  NSObject *v25;
  os_log_type_t v26;
  uint64_t v27;
  _QWORD *v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  NSObject *v34;
  os_log_type_t v35;
  uint64_t v36;
  _QWORD *v37;
  id v38;
  id v39;
  id v40;
  uint64_t v41;
  id v42;
  id v43;
  id v44;
  id v45;
  NSObject *v46;
  os_log_type_t v47;
  uint64_t v48;
  _QWORD *v49;
  id v50;
  _QWORD *v51;
  void *v52;
  uint64_t v53;
  void *v54;
  unint64_t v55;
  id v56;
  id v57;
  id v58;
  int v59;
  uint64_t v60;
  id v61;
  id v62;
  unint64_t v63;
  uint64_t v64;
  unint64_t v65;
  unint64_t v66;
  uint64_t v67;
  id v68;
  id v69;
  uint64_t v70;
  char isUniquelyReferenced_nonNull_native;
  id v72;
  id v73;
  id v74;
  id v75;
  NSObject *v76;
  os_log_type_t v77;
  uint64_t v78;
  _QWORD *v79;
  id v80;
  id v81;
  uint64_t v82;
  id v83;
  void *v84;
  id v85;
  id v86;
  unint64_t v87;
  void *v88;
  os_log_t log;
  os_log_t loga;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  unint64_t v99;
  id v100;
  unint64_t v101;

  v3 = v2;
  v101 = (unint64_t)a2;
  v6 = a2;
  sub_227D68330((uint64_t *)&unk_253F3B0A0);
  type metadata accessor for CKError(0);
  if (swift_dynamicCast())
  {
    v7 = (uint64_t)v100;
    v101 = MEMORY[0x24BEE4AF8];
    v8 = sub_227E5FEC4();
    if (v8)
    {
      v9 = (void *)v8;
      v99 = (unint64_t)v100;
      sub_227D51624(&qword_2559284F8, (uint64_t (*)(uint64_t))type metadata accessor for CKError, (uint64_t)&unk_227E6EC84);
      sub_227E5F114();
      if (v100 == (id)14)
      {
        v10 = a1;
        v11 = (id)0xE;
        v12 = v10;
        v13 = v11;
        v14 = sub_227E5F570();
        v15 = sub_227E60218();
        if (os_log_type_enabled(v14, v15))
        {
          v16 = swift_slowAlloc();
          v91 = v2;
          v17 = (_QWORD *)swift_slowAlloc();
          v87 = swift_slowAlloc();
          v99 = v87;
          *(_DWORD *)v16 = 136315650;
          sub_227D634E0(0xD00000000000002ELL, 0x8000000227E6E530, (uint64_t *)&v99);
          sub_227E603B0();
          *(_WORD *)(v16 + 12) = 2112;
          v18 = v12;
          sub_227E603B0();
          *v17 = v12;

          *(_WORD *)(v16 + 22) = 2112;
          v19 = v13;
          v11 = (id)_swift_stdlib_bridgeErrorToNSError();
          sub_227E603B0();
          v17[1] = v11;

          _os_log_impl(&dword_227D4F000, v14, v15, "BDSSyncEnginePipeline - %s: CKErrorServerRecordChanged record %@ perRecordError %@", (uint8_t *)v16, 0x20u);
          sub_227D68330(&qword_255929230);
          swift_arrayDestroy();
          v20 = v17;
          v3 = v91;
          MEMORY[0x22E2AA8AC](v20, -1, -1);
          swift_arrayDestroy();
          MEMORY[0x22E2AA8AC](v87, -1, -1);
          MEMORY[0x22E2AA8AC](v16, -1, -1);

        }
        else
        {

        }
        v7 = 14;
        if ((MEMORY[0x24BEE4B00] & 0xC000000000000001) != 0)
        {
          if (MEMORY[0x24BEE4B00] < 0)
            v67 = MEMORY[0x24BEE4B00];
          else
            v67 = MEMORY[0x24BEE4B00] & 0xFFFFFFFFFFFFFF8;
          v68 = v12;
          v69 = v9;
          v70 = sub_227E60410();
          if (__OFADD__(v70, 1))
          {
            __break(1u);
LABEL_55:
            swift_once();
LABEL_16:
            v52 = (void *)qword_253F39920;
            sub_227D68330(&qword_255929820);
            v53 = swift_allocObject();
            *(_OWORD *)(v53 + 16) = xmmword_227E71B30;
            v54 = *(void **)(v3 + OBJC_IVAR____TtC13BookDataStore21BDSSyncEnginePipeline_zoneID);
            *(_QWORD *)(v53 + 32) = v54;
            v99 = v53;
            sub_227E600D4();
            v55 = v99;
            v56 = v52;
            v57 = v54;
            sub_227E1F124(v55);

            swift_bridgeObjectRelease();
LABEL_17:
            v58 = v11;
            MEMORY[0x22E2A96E8]();
            if (*(_QWORD *)((v101 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v101 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
              sub_227E600E0();
            sub_227E600F8();
            sub_227E600D4();
            v59 = 0;
LABEL_20:
            v60 = MEMORY[0x24BEE4B00];
            if ((MEMORY[0x24BEE4B00] & 0xC000000000000001) == 0)
            {
LABEL_21:
              if (!*(_QWORD *)(v60 + 16))
              {
LABEL_31:
                v66 = v101;
                if (v101 >> 62)
                {
                  swift_bridgeObjectRetain();
                  v82 = sub_227E6056C();
                  swift_bridgeObjectRelease();
                  if (v82)
                  {
LABEL_33:
                    swift_retain();
                    sub_227E54888(v66);
                    swift_bridgeObjectRelease();
                    swift_release();
                    if (!v59)
                      goto LABEL_53;
                    goto LABEL_50;
                  }
                }
                else if (*(_QWORD *)((v101 & 0xFFFFFFFFFFFFF8) + 0x10))
                {
                  goto LABEL_33;
                }
                swift_bridgeObjectRelease();
                if (!v59)
                {
LABEL_53:

                  swift_bridgeObjectRelease();
                  return;
                }
LABEL_50:
                sub_227D52DBC(0, (unint64_t *)&unk_25592A2C0);
                v83 = objc_msgSend(*(id *)(v3 + OBJC_IVAR____TtC13BookDataStore21BDSSyncEnginePipeline_zoneID), sel_zoneName);
                sub_227E5FF84();

                sub_227E5FF84();
                v84 = (void *)sub_227E60260();
                v85 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDB91F0]), sel_initWithZoneID_, v84);
                if (qword_253F39928 != -1)
                  swift_once();
                v86 = (id)qword_253F39920;
                BDSSyncEngine.resetCloudKitZone(_:)((CKRecordZone)v85);

                goto LABEL_53;
              }
LABEL_30:
              swift_retain();
              v65 = swift_bridgeObjectRetain();
              sub_227E53CC4(v65);
              swift_bridgeObjectRelease();
              swift_release();
              goto LABEL_31;
            }
LABEL_29:
            swift_bridgeObjectRetain();
            v64 = sub_227E60410();
            swift_bridgeObjectRelease();
            if (!v64)
              goto LABEL_31;
            goto LABEL_30;
          }
          v63 = sub_227E21B14(v67, v70 + 1);
        }
        else
        {
          v61 = v12;
          v62 = v9;
          v63 = MEMORY[0x24BEE4B00];
        }
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v99 = v63;
        sub_227E21EF8((uint64_t)v9, v12, isUniquelyReferenced_nonNull_native);
        v60 = v99;

        swift_bridgeObjectRelease();
        v59 = 0;
        if ((v60 & 0xC000000000000001) == 0)
          goto LABEL_21;
        goto LABEL_29;
      }
      v93 = v2;
      v42 = v100;
      v43 = v9;
      v44 = v42;
      v45 = v43;
      v46 = sub_227E5F570();
      v47 = sub_227E60230();
      if (os_log_type_enabled(v46, v47))
      {
        v48 = swift_slowAlloc();
        v96 = (uint64_t)v100;
        v49 = (_QWORD *)swift_slowAlloc();
        log = (os_log_t)swift_slowAlloc();
        v99 = (unint64_t)log;
        *(_DWORD *)v48 = 136315650;
        sub_227D634E0(0xD00000000000002ELL, 0x8000000227E6E530, (uint64_t *)&v99);
        sub_227E603B0();
        *(_WORD *)(v48 + 12) = 2112;
        v45 = v45;
        sub_227E603B0();
        *v49 = v9;

        *(_WORD *)(v48 + 22) = 2112;
        v50 = v44;
        v98 = _swift_stdlib_bridgeErrorToNSError();
        sub_227E603B0();
        v49[1] = v98;

        _os_log_impl(&dword_227D4F000, v46, v47, "BDSSyncEnginePipeline - %s: Unhandled error for record %@ perRecordError %@", (uint8_t *)v48, 0x20u);
        sub_227D68330(&qword_255929230);
        swift_arrayDestroy();
        v51 = v49;
        v7 = v96;
        MEMORY[0x22E2AA8AC](v51, -1, -1);
        swift_arrayDestroy();
        MEMORY[0x22E2AA8AC](log, -1, -1);
        MEMORY[0x22E2AA8AC](v48, -1, -1);

      }
      else
      {

      }
      v59 = 0;
      v60 = MEMORY[0x24BEE4B00];
    }
    else
    {
      v31 = a1;
      v32 = v100;
      v11 = v31;
      v33 = v32;
      v34 = sub_227E5F570();
      v35 = sub_227E60230();
      if (os_log_type_enabled(v34, v35))
      {
        v95 = (uint64_t)v100;
        v36 = swift_slowAlloc();
        v37 = (_QWORD *)swift_slowAlloc();
        v88 = (void *)swift_slowAlloc();
        v100 = v88;
        *(_DWORD *)v36 = 136315650;
        sub_227D634E0(0xD00000000000002ELL, 0x8000000227E6E530, (uint64_t *)&v100);
        sub_227E603B0();
        *(_WORD *)(v36 + 12) = 2112;
        v38 = v33;
        v92 = v3;
        v39 = v11;
        sub_227E603B0();
        *v37 = v11;

        *(_WORD *)(v36 + 22) = 2112;
        v40 = v33;
        v99 = _swift_stdlib_bridgeErrorToNSError();
        sub_227E603B0();
        v37[1] = v99;
        v3 = v92;

        v33 = v38;
        _os_log_impl(&dword_227D4F000, v34, v35, "BDSSyncEnginePipeline - %s: Unable to retrieve serverRecord for recordID %@ perRecordError %@", (uint8_t *)v36, 0x20u);
        sub_227D68330(&qword_255929230);
        swift_arrayDestroy();
        MEMORY[0x22E2AA8AC](v37, -1, -1);
        swift_arrayDestroy();
        MEMORY[0x22E2AA8AC](v88, -1, -1);
        v41 = v36;
        v7 = v95;
        MEMORY[0x22E2AA8AC](v41, -1, -1);
      }
      else
      {

      }
      v99 = (unint64_t)v33;
      sub_227D51624(&qword_2559284F8, (uint64_t (*)(uint64_t))type metadata accessor for CKError, (uint64_t)&unk_227E6EC84);
      sub_227E5F114();
      switch((unint64_t)v100)
      {
        case 0xEuLL:
        case 0x15uLL:
          goto LABEL_17;
        case 0x1AuLL:
        case 0x1CuLL:
          if (qword_253F39928 == -1)
            goto LABEL_16;
          goto LABEL_55;
        default:
          v99 = (unint64_t)v33;
          if (sub_227E5F12C() == 112)
          {
            v59 = 1;
            goto LABEL_20;
          }
          v93 = v3;
          v97 = v7;
          v72 = v11;
          v73 = v33;
          v74 = v72;
          v75 = v73;
          v76 = sub_227E5F570();
          v77 = sub_227E60230();
          if (os_log_type_enabled(v76, v77))
          {
            v78 = swift_slowAlloc();
            v79 = (_QWORD *)swift_slowAlloc();
            loga = (os_log_t)swift_slowAlloc();
            v100 = loga;
            *(_DWORD *)v78 = 136315650;
            sub_227D634E0(0xD00000000000002ELL, 0x8000000227E6E530, (uint64_t *)&v100);
            sub_227E603B0();
            *(_WORD *)(v78 + 12) = 2112;
            v80 = v74;
            sub_227E603B0();
            *v79 = v74;

            *(_WORD *)(v78 + 22) = 2112;
            v81 = v75;
            v99 = _swift_stdlib_bridgeErrorToNSError();
            sub_227E603B0();
            v79[1] = v99;

            _os_log_impl(&dword_227D4F000, v76, v77, "BDSSyncEnginePipeline - %s: Unhandled error for recordID %@ perRecordError %@", (uint8_t *)v78, 0x20u);
            sub_227D68330(&qword_255929230);
            swift_arrayDestroy();
            MEMORY[0x22E2AA8AC](v79, -1, -1);
            swift_arrayDestroy();
            MEMORY[0x22E2AA8AC](loga, -1, -1);
            MEMORY[0x22E2AA8AC](v78, -1, -1);
          }
          else
          {

          }
          v59 = 0;
          v60 = MEMORY[0x24BEE4B00];
          v7 = v97;
          break;
      }
    }
    v3 = v93;
    if ((v60 & 0xC000000000000001) == 0)
      goto LABEL_21;
    goto LABEL_29;
  }
  v21 = a2;
  v22 = a1;
  v23 = a2;
  v24 = v22;
  v25 = sub_227E5F570();
  v26 = sub_227E60230();
  if (os_log_type_enabled(v25, v26))
  {
    v27 = swift_slowAlloc();
    v28 = (_QWORD *)swift_slowAlloc();
    v94 = swift_slowAlloc();
    v101 = v94;
    *(_DWORD *)v27 = 136315650;
    sub_227D634E0(0xD00000000000002ELL, 0x8000000227E6E530, (uint64_t *)&v101);
    sub_227E603B0();
    *(_WORD *)(v27 + 12) = 2112;
    v29 = v24;
    sub_227E603B0();
    *v28 = v24;

    *(_WORD *)(v27 + 22) = 2112;
    v30 = a2;
    v100 = (id)_swift_stdlib_bridgeErrorToNSError();
    sub_227E603B0();
    v28[1] = v100;

    _os_log_impl(&dword_227D4F000, v25, v26, "BDSSyncEnginePipeline - %s: Error modifying record:%@ error=%@", (uint8_t *)v27, 0x20u);
    sub_227D68330(&qword_255929230);
    swift_arrayDestroy();
    MEMORY[0x22E2AA8AC](v28, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x22E2AA8AC](v94, -1, -1);
    MEMORY[0x22E2AA8AC](v27, -1, -1);

  }
  else
  {

  }
}

uint64_t sub_227E52AB4()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  void *v20;
  id v21;
  char *v22;
  char *v23;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t aBlock[6];

  v1 = v0;
  v2 = sub_227E5F948();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2, v4);
  v27 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_227E5F978();
  v28 = *(_QWORD *)(v6 - 8);
  v29 = v6;
  MEMORY[0x24BDAC7A8](v6, v7);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)&v0[OBJC_IVAR____TtC13BookDataStore21BDSSyncEnginePipeline_recordType];
  v11 = *(_QWORD *)&v0[OBJC_IVAR____TtC13BookDataStore21BDSSyncEnginePipeline_recordType + 8];
  swift_bridgeObjectRetain_n();
  v12 = sub_227E5F570();
  v13 = sub_227E60248();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = swift_slowAlloc();
    v26 = v2;
    v15 = v14;
    v16 = swift_slowAlloc();
    aBlock[0] = v16;
    *(_DWORD *)v15 = 136315394;
    v25 = v3;
    v30 = sub_227D634E0(0xD00000000000001FLL, 0x8000000227E6E250, aBlock);
    sub_227E603B0();
    *(_WORD *)(v15 + 12) = 2080;
    swift_bridgeObjectRetain();
    v30 = sub_227D634E0(v10, v11, aBlock);
    v3 = v25;
    sub_227E603B0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_227D4F000, v12, v13, "BDSSyncEnginePipeline - %s: [%s]", (uint8_t *)v15, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x22E2AA8AC](v16, -1, -1);
    v17 = v15;
    v2 = v26;
    MEMORY[0x22E2AA8AC](v17, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v18 = *(void **)&v1[OBJC_IVAR____TtC13BookDataStore21BDSSyncEnginePipeline_workQueue];
  v19 = swift_allocObject();
  *(_QWORD *)(v19 + 16) = v1;
  aBlock[4] = (uint64_t)sub_227E577B0;
  aBlock[5] = v19;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_227D5A858;
  aBlock[3] = (uint64_t)&unk_24F091250;
  v20 = _Block_copy(aBlock);
  v21 = v18;
  v22 = v1;
  sub_227E5F960();
  v30 = MEMORY[0x24BEE4AF8];
  sub_227D51624((unint64_t *)&unk_253F3AED0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  sub_227D68330((uint64_t *)&unk_253F3AFE0);
  sub_227D515E4((unint64_t *)&unk_253F3AFF0, (uint64_t *)&unk_253F3AFE0, MEMORY[0x24BEE12C8]);
  v23 = v27;
  sub_227E603E0();
  MEMORY[0x22E2A991C](0, v9, v23, v20);
  _Block_release(v20);

  (*(void (**)(char *, uint64_t))(v3 + 8))(v23, v2);
  (*(void (**)(char *, uint64_t))(v28 + 8))(v9, v29);
  return swift_release();
}

uint64_t sub_227E52E38()
{
  _QWORD *v0;

  v0 = (_QWORD *)swift_retain();
  sub_227E510D0(v0, 1);
  return swift_release();
}

void sub_227E52E74(void *a1)
{
  id v2;
  os_log_type_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  id v7;
  NSObject *oslog;
  uint64_t v9[2];

  v9[1] = *MEMORY[0x24BDAC8D0];
  v2 = a1;
  oslog = sub_227E5F570();
  v3 = sub_227E60248();
  if (os_log_type_enabled(oslog, v3))
  {
    v4 = swift_slowAlloc();
    v5 = (_QWORD *)swift_slowAlloc();
    v6 = swift_slowAlloc();
    v9[0] = v6;
    *(_DWORD *)v4 = 136315394;
    sub_227D634E0(0xD000000000000025, 0x8000000227E6E500, v9);
    sub_227E603B0();
    *(_WORD *)(v4 + 12) = 2112;
    if (a1)
      v7 = v2;
    sub_227E603B0();
    *v5 = a1;

    _os_log_impl(&dword_227D4F000, oslog, v3, "BDSSyncEnginePipeline - %s: %@", (uint8_t *)v4, 0x16u);
    sub_227D68330(&qword_255929230);
    swift_arrayDestroy();
    MEMORY[0x22E2AA8AC](v5, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x22E2AA8AC](v6, -1, -1);
    MEMORY[0x22E2AA8AC](v4, -1, -1);

  }
  else
  {

  }
}

uint64_t sub_227E530B8(unint64_t a1, unint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  id v14;
  id v15;
  void *v16;
  id v17;
  void *v18;
  uint64_t v19;
  id v20;
  id v21;
  NSObject *v22;
  os_log_type_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  id v29;
  id v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  char v35;
  NSObject *v36;
  os_log_type_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  id v45;
  uint64_t v46;
  id v47;
  id v48;
  unint64_t v49;
  uint64_t v50;
  _BOOL8 v51;
  uint64_t v52;
  unint64_t v53;
  char v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  BOOL v59;
  uint64_t v60;
  id v61;
  uint64_t v62;
  unint64_t v63;
  char v64;
  id v65;
  NSObject *v66;
  os_log_type_t v67;
  uint64_t v68;
  _QWORD *v69;
  uint64_t v70;
  _QWORD *v71;
  uint64_t v72;
  uint64_t v73;
  id v74;
  uint64_t v75;
  id v76;
  char isUniquelyReferenced_nonNull_native;
  uint64_t result;
  uint64_t v79;
  _QWORD *v80;
  _QWORD *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  unint64_t v86;
  unint64_t v87;

  v5 = v4;
  v9 = a1;
  v10 = *(_QWORD *)(v5 + OBJC_IVAR____TtC13BookDataStore21BDSSyncEnginePipeline_recordType + 8);
  v82 = *(_QWORD *)(v5 + OBJC_IVAR____TtC13BookDataStore21BDSSyncEnginePipeline_recordType);
  if (a1 >> 62)
    goto LABEL_76;
  v11 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v11)
    return swift_bridgeObjectRelease();
  while (2)
  {
    if (v11 >= 1)
    {
      v80 = (_QWORD *)a2;
      v81 = (_QWORD *)a3;
      v12 = 0;
      v85 = v9 & 0xC000000000000001;
      v79 = v5;
      v83 = v9;
      v86 = v10;
      v84 = v11;
      while (1)
      {
        if (v85)
          v13 = (id)MEMORY[0x22E2A9AFC](v12, v9);
        else
          v13 = *(id *)(v9 + 8 * v12 + 32);
        v14 = v13;
        v15 = objc_msgSend(v13, sel_systemFields);
        if (!v15)
        {
          swift_bridgeObjectRetain_n();
          v21 = v14;
          v22 = sub_227E5F570();
          v23 = sub_227E60230();
          a2 = v23;
          if (os_log_type_enabled(v22, v23))
          {
            v24 = swift_slowAlloc();
            v25 = (_QWORD *)swift_slowAlloc();
            v26 = swift_slowAlloc();
            v87 = v26;
            *(_DWORD *)v24 = 136315394;
            swift_bridgeObjectRetain();
            *(_QWORD *)(v24 + 4) = sub_227D634E0(v82, v86, (uint64_t *)&v87);
            swift_bridgeObjectRelease_n();
            *(_WORD *)(v24 + 12) = 2112;
            *(_QWORD *)(v24 + 14) = v21;
            *v25 = v21;

            _os_log_impl(&dword_227D4F000, v22, (os_log_type_t)a2, "BDSSyncEnginePipeline - [%s] Unable to retrieve systemFields from %@", (uint8_t *)v24, 0x16u);
            sub_227D68330(&qword_255929230);
            swift_arrayDestroy();
            v27 = v25;
            v11 = v84;
            MEMORY[0x22E2AA8AC](v27, -1, -1);
            swift_arrayDestroy();
            v28 = v26;
            v10 = v86;
            MEMORY[0x22E2AA8AC](v28, -1, -1);
            MEMORY[0x22E2AA8AC](v24, -1, -1);
          }
          else
          {
            swift_bridgeObjectRelease_n();

          }
          goto LABEL_7;
        }
        v16 = v15;
        if (objc_msgSend(v14, sel_deletedFlag))
          break;
        v29 = sub_227E4E158(v14);
        if (v29)
        {
          v18 = v29;
          v30 = objc_msgSend(v29, sel_recordID);
          v31 = v30;
          v32 = *a4;
          if ((*a4 & 0xC000000000000001) != 0)
          {
            a2 = (unint64_t)v30;
            v33 = sub_227E6053C();

            if (!v33)
              goto LABEL_58;
            sub_227D52DBC(0, &qword_25592A2B0);
            swift_unknownObjectRetain();
            swift_dynamicCast();
            a2 = v87;
            swift_unknownObjectRelease();
          }
          else
          {
            if (!*(_QWORD *)(v32 + 16) || (v63 = sub_227DD0270((uint64_t)v30), (v64 & 1) == 0))
            {
LABEL_58:

LABEL_59:
              v10 = (unint64_t)objc_msgSend(v18, sel_recordID);
              a3 = *a4;
              if ((*a4 & 0xC000000000000001) != 0)
              {
                if (a3 >= 0)
                  a3 &= 0xFFFFFFFFFFFFFF8uLL;
                v74 = v14;
                v75 = sub_227E60410();
                if (__OFADD__(v75, 1))
                  goto LABEL_75;
                *a4 = sub_227E21B38(a3, v75 + 1);
              }
              else
              {
                v76 = v14;
              }
              isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
              v87 = *a4;
              *a4 = 0x8000000000000000;
              sub_227E21F0C((uint64_t)v14, (void *)v10, isUniquelyReferenced_nonNull_native);
              *a4 = v87;

              swift_bridgeObjectRelease();
              a2 = v18;
              MEMORY[0x22E2A96E8]();
              if (*(_QWORD *)((*v80 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*v80 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
                sub_227E600E0();
              sub_227E600F8();
              sub_227E600D4();

              v10 = v86;
              goto LABEL_6;
            }
            a2 = (unint64_t)*(id *)(*(_QWORD *)(v32 + 56) + 8 * v63);
          }

          if (!a2)
            goto LABEL_59;
          v10 = v86;
          swift_bridgeObjectRetain_n();
          v65 = v14;
          v66 = sub_227E5F570();
          v67 = sub_227E60230();
          a2 = v67;
          if (os_log_type_enabled(v66, v67))
          {
            v68 = swift_slowAlloc();
            v69 = (_QWORD *)swift_slowAlloc();
            v70 = swift_slowAlloc();
            v87 = v70;
            *(_DWORD *)v68 = 136315394;
            swift_bridgeObjectRetain();
            *(_QWORD *)(v68 + 4) = sub_227D634E0(v82, v86, (uint64_t *)&v87);
            swift_bridgeObjectRelease_n();
            *(_WORD *)(v68 + 12) = 2112;
            *(_QWORD *)(v68 + 14) = v65;
            *v69 = v65;

            _os_log_impl(&dword_227D4F000, v66, (os_log_type_t)a2, "BDSSyncEnginePipeline - [%s] cloudDataMap already contans an entry for saving %@", (uint8_t *)v68, 0x16u);
            sub_227D68330(&qword_255929230);
            swift_arrayDestroy();
            v71 = v69;
            v5 = v79;
            MEMORY[0x22E2AA8AC](v71, -1, -1);
            swift_arrayDestroy();
            v72 = v70;
            v9 = v83;
            MEMORY[0x22E2AA8AC](v72, -1, -1);
            v73 = v68;
            v10 = v86;
            MEMORY[0x22E2AA8AC](v73, -1, -1);
          }
          else
          {
            swift_bridgeObjectRelease_n();

          }
          goto LABEL_51;
        }

LABEL_6:
        v11 = v84;
LABEL_7:
        if (v11 == ++v12)
          return swift_bridgeObjectRelease();
      }
      v17 = objc_msgSend(v16, sel_recordID);
      v18 = v17;
      v19 = *a4;
      if ((*a4 & 0xC000000000000001) != 0)
      {
        v20 = v17;
        if (sub_227E6053C())
        {
          sub_227D52DBC(0, &qword_25592A2B0);
          swift_unknownObjectRetain();
          swift_dynamicCast();
          a2 = v87;
          swift_unknownObjectRelease();
          goto LABEL_27;
        }
      }
      else
      {
        if (!*(_QWORD *)(v19 + 16))
          goto LABEL_31;
        v34 = sub_227DD0270((uint64_t)v17);
        if ((v35 & 1) != 0)
        {
          a2 = (unint64_t)*(id *)(*(_QWORD *)(v19 + 56) + 8 * v34);
LABEL_27:

          if (a2)
          {
            swift_bridgeObjectRetain_n();
            v14 = v14;
            v36 = sub_227E5F570();
            v37 = sub_227E60230();
            a2 = v37;
            if (os_log_type_enabled(v36, v37))
            {
              v38 = swift_slowAlloc();
              v39 = (_QWORD *)swift_slowAlloc();
              v40 = swift_slowAlloc();
              v87 = v40;
              *(_DWORD *)v38 = 136315394;
              swift_bridgeObjectRetain();
              *(_QWORD *)(v38 + 4) = sub_227D634E0(v82, v86, (uint64_t *)&v87);
              swift_bridgeObjectRelease_n();
              *(_WORD *)(v38 + 12) = 2112;
              *(_QWORD *)(v38 + 14) = v14;
              *v39 = v14;

              _os_log_impl(&dword_227D4F000, v36, (os_log_type_t)a2, "BDSSyncEnginePipeline - [%s] cloudDataMap already contans an entry for deleting %@", (uint8_t *)v38, 0x16u);
              sub_227D68330(&qword_255929230);
              swift_arrayDestroy();
              v41 = v39;
              v5 = v79;
              MEMORY[0x22E2AA8AC](v41, -1, -1);
              swift_arrayDestroy();
              v42 = v40;
              v9 = v83;
              MEMORY[0x22E2AA8AC](v42, -1, -1);
              v43 = v38;
              v10 = v86;
              MEMORY[0x22E2AA8AC](v43, -1, -1);

            }
            else
            {
              swift_bridgeObjectRelease_n();

            }
LABEL_50:

LABEL_51:
            goto LABEL_6;
          }
LABEL_31:
          a3 = *a4;
          if ((*a4 & 0xC000000000000001) != 0)
          {
            if (a3 >= 0)
              a3 &= 0xFFFFFFFFFFFFFF8uLL;
            v44 = v18;
            v45 = v14;
            v46 = sub_227E60410();
            if (__OFADD__(v46, 1))
              goto LABEL_73;
            *a4 = sub_227E21B38(a3, v46 + 1);
          }
          else
          {
            v47 = v18;
            v48 = v14;
          }
          v9 = swift_isUniquelyReferenced_nonNull_native();
          v87 = *a4;
          a3 = v87;
          *a4 = 0x8000000000000000;
          v10 = sub_227DD0270((uint64_t)v18);
          v50 = *(_QWORD *)(a3 + 16);
          v51 = (v49 & 1) == 0;
          v52 = v50 + v51;
          if (__OFADD__(v50, v51))
          {
            __break(1u);
LABEL_73:
            __break(1u);
LABEL_74:
            __break(1u);
LABEL_75:
            __break(1u);
LABEL_76:
            swift_bridgeObjectRetain();
            v11 = sub_227E6056C();
            if (!v11)
              return swift_bridgeObjectRelease();
            continue;
          }
          a2 = v49;
          if (*(_QWORD *)(a3 + 24) >= v52)
          {
            if ((v9 & 1) == 0)
              sub_227DD2FB8();
          }
          else
          {
            sub_227DD1694(v52, v9);
            v53 = sub_227DD0270((uint64_t)v18);
            if ((a2 & 1) != (v54 & 1))
              goto LABEL_79;
            v10 = v53;
          }
          v9 = v83;
          a3 = v87;
          if ((a2 & 1) != 0)
          {
            v55 = *(_QWORD *)(v87 + 56);
            v56 = 8 * v10;

            *(_QWORD *)(v55 + v56) = v14;
          }
          else
          {
            *(_QWORD *)(v87 + 8 * (v10 >> 6) + 64) |= 1 << v10;
            v57 = 8 * v10;
            *(_QWORD *)(*(_QWORD *)(a3 + 48) + v57) = v18;
            *(_QWORD *)(*(_QWORD *)(a3 + 56) + v57) = v14;
            v58 = *(_QWORD *)(a3 + 16);
            v59 = __OFADD__(v58, 1);
            v60 = v58 + 1;
            if (v59)
              goto LABEL_74;
            *(_QWORD *)(a3 + 16) = v60;
            v61 = v18;
          }
          *a4 = a3;
          v62 = swift_bridgeObjectRelease();
          MEMORY[0x22E2A96E8](v62);
          a2 = *(_QWORD *)((*v81 & 0xFFFFFFFFFFFFFF8) + 0x10);
          v10 = v86;
          if (a2 >= *(_QWORD *)((*v81 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            sub_227E600E0();
          sub_227E600F8();
          sub_227E600D4();
          goto LABEL_50;
        }
      }

      goto LABEL_31;
    }
    break;
  }
  __break(1u);
LABEL_79:
  sub_227D52DBC(0, &qword_255928490);
  result = sub_227E606B0();
  __break(1u);
  return result;
}

id BDSSyncEnginePipeline.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void BDSSyncEnginePipeline.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id BDSSyncEnginePipeline.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BDSSyncEnginePipeline();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_227E53CC4(unint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  id v13;
  int64_t v14;
  unint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  char v26;
  unint64_t v27;
  char v28;
  char v29;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v31;
  uint64_t v32;
  int64_t v33;
  unint64_t v34;
  uint64_t v35;
  void *v36;

  if ((a1 & 0xC000000000000001) != 0)
  {
    v34 = 0;
    v2 = 0;
    v3 = 0;
    v4 = sub_227E60524() | 0x8000000000000000;
  }
  else
  {
    v5 = -1 << *(_BYTE *)(a1 + 32);
    v2 = ~v5;
    v34 = a1 + 64;
    v6 = -v5;
    if (v6 < 64)
      v7 = ~(-1 << v6);
    else
      v7 = -1;
    v3 = v7 & *(_QWORD *)(a1 + 64);
    v4 = a1;
  }
  swift_bridgeObjectRetain();
  v8 = 0;
  v33 = (unint64_t)(v2 + 64) >> 6;
  v9 = (uint64_t *)(v1 + 48);
  while (1)
  {
    v10 = v8;
    if ((v4 & 0x8000000000000000) != 0)
    {
      if (!sub_227E60548())
        goto LABEL_45;
      swift_unknownObjectRelease();
      sub_227D52DBC(0, (unint64_t *)&qword_255929460);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      v13 = v36;
      swift_unknownObjectRelease();
      if (!v36)
        goto LABEL_45;
    }
    else
    {
      if (v3)
      {
        v11 = __clz(__rbit64(v3));
        v3 &= v3 - 1;
        v12 = v11 | (v8 << 6);
      }
      else
      {
        v14 = v8 + 1;
        if (__OFADD__(v8, 1))
          goto LABEL_47;
        if (v14 >= v33)
          goto LABEL_45;
        v15 = *(_QWORD *)(v34 + 8 * v14);
        ++v8;
        if (!v15)
        {
          v8 = v10 + 2;
          if (v10 + 2 >= v33)
            goto LABEL_45;
          v15 = *(_QWORD *)(v34 + 8 * v8);
          if (!v15)
          {
            v8 = v10 + 3;
            if (v10 + 3 >= v33)
              goto LABEL_45;
            v15 = *(_QWORD *)(v34 + 8 * v8);
            if (!v15)
            {
              v8 = v10 + 4;
              if (v10 + 4 >= v33)
                goto LABEL_45;
              v15 = *(_QWORD *)(v34 + 8 * v8);
              if (!v15)
              {
                v8 = v10 + 5;
                if (v10 + 5 >= v33)
                  goto LABEL_45;
                v15 = *(_QWORD *)(v34 + 8 * v8);
                if (!v15)
                {
                  v16 = v10 + 6;
                  while (v33 != v16)
                  {
                    v15 = *(_QWORD *)(v34 + 8 * v16++);
                    if (v15)
                    {
                      v8 = v16 - 1;
                      goto LABEL_31;
                    }
                  }
LABEL_45:
                  sub_227DDF73C();
                  swift_beginAccess();
                  v32 = swift_bridgeObjectRetain();
                  sub_227E542AC(v32);
                  swift_endAccess();
                  return;
                }
              }
            }
          }
        }
LABEL_31:
        v3 = (v15 - 1) & v15;
        v12 = __clz(__rbit64(v15)) + (v8 << 6);
      }
      v13 = *(id *)(*(_QWORD *)(v4 + 56) + 8 * v12);
      if (!v13)
        goto LABEL_45;
    }
    v17 = objc_msgSend(v13, sel_recordID);
    swift_beginAccess();
    v18 = *v9;
    if ((*v9 & 0xC000000000000001) != 0)
      break;
    swift_bridgeObjectRetain();
    v27 = sub_227DD0270((uint64_t)v17);
    v29 = v28;
    swift_bridgeObjectRelease();
    if ((v29 & 1) != 0)
    {
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v31 = *v9;
      v35 = *v9;
      *v9 = 0x8000000000000000;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_227DD2FB8();
        v31 = v35;
      }

      v21 = *(void **)(*(_QWORD *)(v31 + 56) + 8 * v27);
      sub_227E56008(v27, v31);
      *v9 = v31;
      goto LABEL_8;
    }
    v21 = 0;
LABEL_9:
    swift_endAccess();

  }
  if (v18 < 0)
    v19 = *v9;
  else
    v19 = v18 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  v20 = v17;
  v21 = (void *)sub_227E6053C();

  if (!v21)
  {
LABEL_8:
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  swift_unknownObjectRelease();
  v22 = sub_227E60410();
  v23 = sub_227E21B38(v19, v22);
  swift_retain();
  v24 = sub_227DD0270((uint64_t)v20);
  v26 = v25;
  swift_release();
  if ((v26 & 1) != 0)
  {

    v21 = *(void **)(*(_QWORD *)(v23 + 56) + 8 * v24);
    sub_227E56008(v24, v23);
    *v9 = v23;
    goto LABEL_8;
  }
  __break(1u);
LABEL_47:
  __break(1u);
}

uint64_t sub_227E540F4(unint64_t a1)
{
  unint64_t *v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v3 = sub_227E6056C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v4 = *v1;
  if (*v1 >> 62)
  {
    swift_bridgeObjectRetain();
    v5 = sub_227E6056C();
    swift_bridgeObjectRelease();
    v6 = v5 + v3;
    if (!__OFADD__(v5, v3))
      goto LABEL_5;
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  v6 = v5 + v3;
  if (__OFADD__(v5, v3))
    goto LABEL_23;
LABEL_5:
  v4 = *v1;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v1 = v4;
  v5 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v4 & 0x8000000000000000) == 0 && (v4 & 0x4000000000000000) == 0)
  {
    v8 = v4 & 0xFFFFFFFFFFFFFF8;
    if (v6 <= *(_QWORD *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_15;
    v5 = 1;
  }
  if (v4 >> 62)
    goto LABEL_25;
  v9 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v9 <= v6)
      v9 = v6;
    swift_bridgeObjectRetain();
    v4 = MEMORY[0x22E2A9B08](v5, v9, 1, v4);
    swift_bridgeObjectRelease();
    *v1 = v4;
    v8 = v4 & 0xFFFFFFFFFFFFFF8;
LABEL_15:
    result = sub_227E56E68(v8 + 8 * *(_QWORD *)(v8 + 16) + 32, (*(_QWORD *)(v8 + 24) >> 1) - *(_QWORD *)(v8 + 16), a1);
    if (v11 >= v3)
      break;
LABEL_24:
    __break(1u);
LABEL_25:
    swift_bridgeObjectRetain();
    v9 = sub_227E6056C();
    swift_bridgeObjectRelease();
  }
  if (v11 < 1)
    goto LABEL_19;
  v12 = *(_QWORD *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v13 = __OFADD__(v12, v11);
  v14 = v12 + v11;
  if (!v13)
  {
    *(_QWORD *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10) = v14;
LABEL_19:
    swift_bridgeObjectRelease();
    return sub_227E600D4();
  }
  __break(1u);
  return result;
}

uint64_t sub_227E542AC(uint64_t result)
{
  int64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t *v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  uint64_t v20;
  int64_t v21;
  unint64_t v22;
  unint64_t v23;
  void *v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int64_t v29;
  unint64_t v30;
  unint64_t v31;
  id v32;
  int64_t v33;
  int64_t v34;
  unint64_t v35;
  uint64_t v36;
  int64_t v37;
  int64_t v38;
  unint64_t v39;
  uint64_t v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  int64_t v45;
  unint64_t v46;

  v4 = v2;
  v5 = result;
  if ((result & 0xC000000000000001) != 0)
  {
    result = sub_227E60410();
    v6 = result;
  }
  else
  {
    v6 = *(_QWORD *)(result + 16);
  }
  if ((unint64_t)*v4 >> 62)
  {
    swift_bridgeObjectRetain();
    v20 = sub_227E6056C();
    result = swift_bridgeObjectRelease();
    v8 = v20 + v6;
    if (!__OFADD__(v20, v6))
      goto LABEL_6;
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v7 = *(_QWORD *)((*v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  v8 = v7 + v6;
  if (__OFADD__(v7, v6))
    goto LABEL_24;
LABEL_6:
  v9 = *v4;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v4 = v9;
  v11 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v9 & 0x8000000000000000) == 0 && (v9 & 0x4000000000000000) == 0)
  {
    v12 = v9 & 0xFFFFFFFFFFFFFF8;
    if (v8 <= *(_QWORD *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_16;
    v11 = 1;
  }
  if (v9 >> 62)
  {
    swift_bridgeObjectRetain();
    v13 = sub_227E6056C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v13 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (v13 <= v8)
    v13 = v8;
  swift_bridgeObjectRetain();
  v14 = MEMORY[0x22E2A9B08](v11, v13, 1, v9);
  swift_bridgeObjectRelease();
  *v4 = v14;
  v12 = v14 & 0xFFFFFFFFFFFFFF8;
LABEL_16:
  v15 = *(_QWORD *)(v12 + 16);
  v16 = (*(_QWORD *)(v12 + 24) >> 1) - v15;
  result = sub_227E56BA8((uint64_t)&v42, (uint64_t *)(v12 + 8 * v15 + 32), v16, v5);
  if (result < v6)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  if (result >= 1)
  {
    v17 = *(_QWORD *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v18 = __OFADD__(v17, result);
    v19 = v17 + result;
    if (v18)
    {
      __break(1u);
LABEL_33:
      if (!sub_227E60548())
        goto LABEL_21;
      swift_unknownObjectRelease();
      sub_227D52DBC(0, (unint64_t *)&qword_255929460);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      v24 = v41;
      swift_unknownObjectRelease();
LABEL_35:
      if (!v24)
        goto LABEL_21;
      while (1)
      {
        v26 = *v4 & 0xFFFFFFFFFFFFFF8;
        if (v3 + 1 > *(_QWORD *)(v26 + 0x18) >> 1)
        {
          sub_227E600E0();
          v26 = *v4 & 0xFFFFFFFFFFFFFF8;
        }
        v27 = *(_QWORD *)(v26 + 24) >> 1;
        if (v3 < v27)
          break;
LABEL_37:
        *(_QWORD *)(v26 + 16) = v3;
      }
      v28 = v26 + 32;
      while (1)
      {
        *(_QWORD *)(v28 + 8 * v3++) = v24;
        v29 = v45;
        if (v42 < 0)
        {
          if (!sub_227E60548())
            goto LABEL_72;
          swift_unknownObjectRelease();
          sub_227D52DBC(0, (unint64_t *)&qword_255929460);
          swift_unknownObjectRetain();
          swift_dynamicCast();
          v24 = v41;
          swift_unknownObjectRelease();
          goto LABEL_49;
        }
        if (v46)
        {
          v30 = (v46 - 1) & v46;
          v31 = __clz(__rbit64(v46)) | (v45 << 6);
        }
        else
        {
          v33 = v45 + 1;
          if (__OFADD__(v45, 1))
          {
            __break(1u);
LABEL_94:
            v24 = 0;
            v22 = 0;
            v21 = v1;
LABEL_30:
            v45 = v21;
            v46 = v22;
            goto LABEL_35;
          }
          v34 = (unint64_t)(v44 + 64) >> 6;
          if (v33 >= v34)
          {
            v24 = 0;
            v30 = 0;
            goto LABEL_46;
          }
          v35 = *(_QWORD *)(v43 + 8 * v33);
          if (!v35)
          {
            if (v45 + 2 >= v34)
              goto LABEL_70;
            v35 = *(_QWORD *)(v43 + 8 * (v45 + 2));
            if (v35)
            {
              v33 = v45 + 2;
            }
            else
            {
              v1 = v45 + 3;
              if (v45 + 3 >= v34)
              {
                v24 = 0;
                v30 = 0;
                v29 = v45 + 2;
                goto LABEL_46;
              }
              v35 = *(_QWORD *)(v43 + 8 * v1);
              if (v35)
              {
                v33 = v45 + 3;
              }
              else
              {
                v33 = v45 + 4;
                if (v45 + 4 >= v34)
                {
                  v24 = 0;
                  v30 = 0;
                  v29 = v45 + 3;
                  goto LABEL_46;
                }
                v35 = *(_QWORD *)(v43 + 8 * v33);
                if (!v35)
                {
                  v33 = v34 - 1;
                  v36 = v45 + 5;
                  while (v34 != v36)
                  {
                    v35 = *(_QWORD *)(v43 + 8 * v36++);
                    if (v35)
                    {
                      v33 = v36 - 1;
                      goto LABEL_55;
                    }
                  }
LABEL_70:
                  v24 = 0;
                  v30 = 0;
                  v29 = v33;
                  goto LABEL_46;
                }
              }
            }
          }
LABEL_55:
          v30 = (v35 - 1) & v35;
          v31 = __clz(__rbit64(v35)) + (v33 << 6);
          v29 = v33;
        }
        v24 = *(void **)(*(_QWORD *)(v42 + 56) + 8 * v31);
        v32 = v24;
LABEL_46:
        v45 = v29;
        v46 = v30;
LABEL_49:
        if (!v24)
        {
LABEL_72:
          *(_QWORD *)((*v4 & 0xFFFFFFFFFFFFF8) + 0x10) = v3;
          goto LABEL_21;
        }
        if (v3 >= v27)
        {
          v26 = *v4 & 0xFFFFFFFFFFFFFF8;
          goto LABEL_37;
        }
      }
    }
    *(_QWORD *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10) = v19;
  }
  if (result != v16)
  {
LABEL_21:
    sub_227DDF73C();
    return sub_227E600D4();
  }
LABEL_26:
  v3 = *(_QWORD *)((*v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  v21 = v45;
  if (v42 < 0)
    goto LABEL_33;
  if (v46)
  {
    v22 = (v46 - 1) & v46;
    v23 = __clz(__rbit64(v46)) | (v45 << 6);
    goto LABEL_29;
  }
  v37 = v45 + 1;
  if (!__OFADD__(v45, 1))
  {
    v38 = (unint64_t)(v44 + 64) >> 6;
    if (v37 >= v38)
    {
      v24 = 0;
      v22 = 0;
      goto LABEL_30;
    }
    v39 = *(_QWORD *)(v43 + 8 * v37);
    if (!v39)
    {
      if (v45 + 2 >= v38)
      {
LABEL_92:
        v24 = 0;
        v22 = 0;
        v21 = v37;
        goto LABEL_30;
      }
      v39 = *(_QWORD *)(v43 + 8 * (v45 + 2));
      if (v39)
      {
        v37 = v45 + 2;
      }
      else
      {
        v1 = v45 + 3;
        if (v45 + 3 >= v38)
        {
          v24 = 0;
          v22 = 0;
          v21 = v45 + 2;
          goto LABEL_30;
        }
        v39 = *(_QWORD *)(v43 + 8 * v1);
        if (v39)
        {
          v37 = v45 + 3;
        }
        else
        {
          v37 = v45 + 4;
          if (v45 + 4 >= v38)
            goto LABEL_94;
          v39 = *(_QWORD *)(v43 + 8 * v37);
          if (!v39)
          {
            v37 = v38 - 1;
            v40 = v45 + 5;
            do
            {
              if (v38 == v40)
                goto LABEL_92;
              v39 = *(_QWORD *)(v43 + 8 * v40++);
            }
            while (!v39);
            v37 = v40 - 1;
          }
        }
      }
    }
    v22 = (v39 - 1) & v39;
    v23 = __clz(__rbit64(v39)) + (v37 << 6);
    v21 = v37;
LABEL_29:
    v24 = *(void **)(*(_QWORD *)(v42 + 56) + 8 * v23);
    v25 = v24;
    goto LABEL_30;
  }
  __break(1u);
  return result;
}

uint64_t sub_227E54888(unint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t result;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  char v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  char v25;
  void *v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  id v31;
  char v32;
  char v33;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v2 = v1;
  if (a1 >> 62)
    goto LABEL_35;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  result = swift_bridgeObjectRetain();
  if (v4)
  {
    while (v4 >= 1)
    {
      v6 = (uint64_t *)(v2 + 48);
      if ((a1 & 0xC000000000000001) == 0)
      {
        v20 = 0;
        while (1)
        {
          v27 = *(void **)(a1 + 8 * v20 + 32);
          swift_beginAccess();
          v28 = *v6;
          if ((*v6 & 0xC000000000000001) != 0)
          {
            if (v28 < 0)
              v29 = *v6;
            else
              v29 = v28 & 0xFFFFFFFFFFFFFF8;
            v30 = v27;
            swift_bridgeObjectRetain();
            if (!sub_227E6053C())
            {
              swift_bridgeObjectRelease();
LABEL_32:
              v26 = 0;
              goto LABEL_22;
            }
            swift_unknownObjectRelease();
            v21 = sub_227E60410();
            v22 = sub_227E21B38(v29, v21);
            swift_retain();
            v23 = sub_227DD0270((uint64_t)v30);
            v25 = v24;
            swift_release();
            if ((v25 & 1) == 0)
              goto LABEL_34;
          }
          else
          {
            v31 = v27;
            swift_bridgeObjectRetain();
            v23 = sub_227DD0270((uint64_t)v31);
            v33 = v32;
            swift_bridgeObjectRelease();
            if ((v33 & 1) == 0)
              goto LABEL_32;
            isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            v22 = *v6;
            v37 = *v6;
            *v6 = 0x8000000000000000;
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            {
              sub_227DD2FB8();
              v22 = v37;
            }
          }

          v26 = *(void **)(*(_QWORD *)(v22 + 56) + 8 * v23);
          sub_227E56008(v23, v22);
          *v6 = v22;
          swift_bridgeObjectRelease();
LABEL_22:
          ++v20;
          swift_endAccess();

          if (v4 == v20)
            goto LABEL_36;
        }
      }
      v7 = 0;
      while (1)
      {
        v14 = MEMORY[0x22E2A9AFC](v7, a1);
        swift_beginAccess();
        v15 = *v6;
        if ((*v6 & 0xC000000000000001) == 0)
        {
          swift_bridgeObjectRetain();
          v10 = sub_227DD0270(v14);
          v18 = v17;
          swift_bridgeObjectRelease();
          if ((v18 & 1) == 0)
            goto LABEL_18;
          v19 = swift_isUniquelyReferenced_nonNull_native();
          v9 = *v6;
          v36 = *v6;
          *v6 = 0x8000000000000000;
          if ((v19 & 1) == 0)
          {
            sub_227DD2FB8();
            v9 = v36;
          }
          goto LABEL_7;
        }
        if (v15 < 0)
          v16 = *v6;
        else
          v16 = v15 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain();
        if (!sub_227E6053C())
        {
          swift_bridgeObjectRelease();
LABEL_18:
          v13 = 0;
          goto LABEL_8;
        }
        swift_unknownObjectRelease();
        v8 = sub_227E60410();
        v9 = sub_227E21B38(v16, v8);
        swift_retain();
        v10 = sub_227DD0270(v14);
        v12 = v11;
        swift_release();
        if ((v12 & 1) == 0)
          break;
LABEL_7:

        v13 = *(void **)(*(_QWORD *)(v9 + 56) + 8 * v10);
        sub_227E56008(v10, v9);
        *v6 = v9;
        swift_bridgeObjectRelease();
LABEL_8:
        ++v7;
        swift_endAccess();
        swift_unknownObjectRelease();

        if (v4 == v7)
          goto LABEL_36;
      }
      __break(1u);
LABEL_34:
      __break(1u);
LABEL_35:
      swift_bridgeObjectRetain();
      result = sub_227E6056C();
      v4 = result;
      if (!result)
        goto LABEL_36;
    }
    __break(1u);
  }
  else
  {
LABEL_36:
    swift_bridgeObjectRelease();
    swift_beginAccess();
    v35 = swift_bridgeObjectRetain();
    sub_227E540F4(v35);
    return swift_endAccess();
  }
  return result;
}

uint64_t sub_227E54C00()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  os_log_type_t type;
  uint64_t v13;

  v1 = (_QWORD *)(v0 + 48);
  result = swift_beginAccess();
  v3 = *(_QWORD *)(v0 + 48);
  if ((v3 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    v4 = sub_227E60410();
    result = swift_bridgeObjectRelease();
    if (!v4)
      return result;
  }
  else if (!*(_QWORD *)(v3 + 16))
  {
    return result;
  }
  swift_retain_n();
  v5 = sub_227E5F570();
  v6 = sub_227E60230();
  if (os_log_type_enabled(v5, v6))
  {
    type = v6;
    v7 = swift_slowAlloc();
    v11 = swift_slowAlloc();
    v13 = v11;
    *(_DWORD *)v7 = 136315394;
    sub_227D634E0(0x676F6C28656E6F64, 0xED0000293A726567, &v13);
    sub_227E603B0();
    *(_WORD *)(v7 + 12) = 2080;
    sub_227D52DBC(0, &qword_255928490);
    sub_227D52DBC(0, &qword_25592A2B0);
    sub_227E57B4C(&qword_25592A2B8, &qword_255928490, 0x24BDB91E8, MEMORY[0x24BEE5BD8]);
    swift_bridgeObjectRetain();
    v8 = sub_227E5FF0C();
    v10 = v9;
    swift_bridgeObjectRelease();
    sub_227D634E0(v8, v10, &v13);
    sub_227E603B0();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_227D4F000, v5, type, "BDSSyncEnginePipeline - %s: Unexpected outstanding IDs: %s", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x22E2AA8AC](v11, -1, -1);
    MEMORY[0x22E2AA8AC](v7, -1, -1);
  }
  else
  {
    swift_release_n();
  }

  *v1 = MEMORY[0x24BEE4B00];
  return swift_bridgeObjectRelease();
}

uint64_t sub_227E54EB0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_227E54EF4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(void);

  v6 = (uint64_t (*)(void))((char *)a3 + *a3);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v4;
  *v4 = v3;
  v4[1] = sub_227DDF744;
  return v6();
}

uint64_t sub_227E54F48(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t (*v7)(void);

  v7 = (uint64_t (*)(void))((char *)a4 + *a4);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v5;
  *v5 = v4;
  v5[1] = sub_227DDF744;
  return v7();
}

uint64_t sub_227E54F9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_227E60128();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_227E6011C();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(_QWORD *)(a3 + 16))
      goto LABEL_5;
    goto LABEL_3;
  }
  sub_227D5809C(a1, &qword_255929530);
  if (*(_QWORD *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_227E60104();
    swift_unknownObjectRelease();
  }
LABEL_5:
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a2;
  *(_QWORD *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_227E550E8(uint64_t a1, char a2, uint64_t (*a3)(_QWORD *), uint64_t a4, uint64_t a5, unint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  _QWORD *v40;
  uint64_t result;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v47;
  unint64_t v48;
  _QWORD v50[4];

  v50[3] = a4;
  if (a1 < 0)
    goto LABEL_42;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = MEMORY[0x24BEE4AF8];
  v47 = swift_allocObject();
  *(_QWORD *)(v47 + 16) = 15;
  v11 = HIBYTE(a6) & 0xF;
  if (!a1 || ((a6 & 0x2000000000000000) != 0 ? (v12 = HIBYTE(a6) & 0xF) : (v12 = a5 & 0xFFFFFFFFFFFFLL), !v12))
  {
    if ((a6 & 0x2000000000000000) == 0)
      v11 = a5 & 0xFFFFFFFFFFFFLL;
    v30 = 7;
    if (((a6 >> 60) & ((a5 & 0x800000000000000) == 0)) != 0)
      v30 = 11;
    sub_227E55584(v30 | (v11 << 16), v47, a2 & 1, v10);
    swift_bridgeObjectRelease();
    v13 = *(_QWORD **)(v10 + 16);
    swift_bridgeObjectRetain();
    swift_release();
LABEL_39:
    swift_release();
    return (uint64_t)v13;
  }
  v42 = a1;
  v43 = v10;
  v48 = 4 * v12;
  v13 = (_QWORD *)MEMORY[0x24BEE4AF8];
  v14 = 15;
  v15 = 15;
  v16 = 15;
  while (1)
  {
    v50[0] = sub_227E60068();
    v50[1] = v17;
    v18 = a3(v50);
    if (v6)
    {
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return (uint64_t)v13;
    }
    v19 = v18;
    swift_bridgeObjectRelease();
    if ((v19 & 1) != 0)
      break;
    v14 = sub_227E60014();
LABEL_9:
    if (v48 == v14 >> 14)
      goto LABEL_29;
  }
  if (v15 >> 14 == v14 >> 14 && (a2 & 1) != 0)
  {
    v14 = sub_227E60014();
    *(_QWORD *)(v47 + 16) = v14;
    v15 = v14;
    v16 = v14;
    goto LABEL_9;
  }
  if (v14 >> 14 < v15 >> 14)
    goto LABEL_41;
  v20 = sub_227E60074();
  v44 = v21;
  v45 = v20;
  v23 = v22;
  v25 = v24;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v13 = sub_227DF9164(0, v13[2] + 1, 1, v13);
  v27 = v13[2];
  v26 = v13[3];
  if (v27 >= v26 >> 1)
    v13 = sub_227DF9164((_QWORD *)(v26 > 1), v27 + 1, 1, v13);
  v13[2] = v27 + 1;
  v28 = &v13[4 * v27];
  v28[4] = v45;
  v28[5] = v23;
  v28[6] = v25;
  v28[7] = v44;
  *(_QWORD *)(v43 + 16) = v13;
  v29 = sub_227E60014();
  v14 = v29;
  *(_QWORD *)(v47 + 16) = v29;
  if (v13[2] != v42)
  {
    v15 = v29;
    v16 = v29;
    goto LABEL_9;
  }
  v16 = v29;
  v15 = v29;
LABEL_29:
  if (v48 == v15 >> 14 && (a2 & 1) != 0)
  {
    swift_bridgeObjectRelease();
LABEL_38:
    swift_bridgeObjectRetain();
    swift_release();
    goto LABEL_39;
  }
  if (v48 >= v16 >> 14)
  {
    v31 = sub_227E60074();
    v33 = v32;
    v35 = v34;
    v37 = v36;
    swift_bridgeObjectRelease();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v13 = sub_227DF9164(0, v13[2] + 1, 1, v13);
    v39 = v13[2];
    v38 = v13[3];
    if (v39 >= v38 >> 1)
      v13 = sub_227DF9164((_QWORD *)(v38 > 1), v39 + 1, 1, v13);
    v13[2] = v39 + 1;
    v40 = &v13[4 * v39];
    v40[4] = v31;
    v40[5] = v33;
    v40[6] = v35;
    v40[7] = v37;
    *(_QWORD *)(v43 + 16) = v13;
    goto LABEL_38;
  }
LABEL_41:
  sub_227E60554();
  __break(1u);
LABEL_42:
  result = sub_227E60554();
  __break(1u);
  return result;
}

uint64_t sub_227E55584(unint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4)
{
  unint64_t v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  uint64_t result;

  v4 = *(_QWORD *)(a2 + 16) >> 14;
  v5 = (v4 == a1 >> 14) & a3;
  if (v5 == 1)
    return v5 ^ 1u;
  if (a1 >> 14 >= v4)
  {
    v7 = sub_227E60074();
    v9 = v8;
    v11 = v10;
    v13 = v12;
    v14 = *(_QWORD **)(a4 + 16);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)(a4 + 16) = v14;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v14 = sub_227DF9164(0, v14[2] + 1, 1, v14);
      *(_QWORD *)(a4 + 16) = v14;
    }
    v17 = v14[2];
    v16 = v14[3];
    if (v17 >= v16 >> 1)
    {
      v14 = sub_227DF9164((_QWORD *)(v16 > 1), v17 + 1, 1, v14);
      *(_QWORD *)(a4 + 16) = v14;
    }
    v14[2] = v17 + 1;
    v18 = &v14[4 * v17];
    v18[4] = v7;
    v18[5] = v9;
    v18[6] = v11;
    v18[7] = v13;
    return v5 ^ 1u;
  }
  result = sub_227E60554();
  __break(1u);
  return result;
}

uint64_t sub_227E556DC(uint64_t a1)
{
  return sub_227E556F4(a1, (void (*)(void))sub_227DD26FC);
}

uint64_t sub_227E556E8(uint64_t a1)
{
  return sub_227E556F4(a1, (void (*)(void))sub_227DD2708);
}

uint64_t sub_227E556F4(uint64_t a1, void (*a2)(void))
{
  uint64_t *v2;
  uint64_t *v4;
  unint64_t v5;
  char v6;
  unint64_t v7;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v4 = v2;
  v5 = sub_227D5B26C(a1);
  if ((v6 & 1) == 0)
    return 0;
  v7 = v5;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v9 = *v2;
  v12 = *v4;
  *v4 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    a2();
    v9 = v12;
  }
  v10 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 16 * v7);
  sub_227E55CB0(v7, v9);
  *v4 = v9;
  swift_bridgeObjectRelease();
  return v10;
}

double sub_227E557A0@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  unint64_t v6;
  char v7;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  double result;
  uint64_t v11;

  v3 = v2;
  swift_bridgeObjectRetain();
  v6 = sub_227DD0224(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if ((a1 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v9 = *v3;
    v11 = *v3;
    *v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_227DD2C30();
      v9 = v11;
    }

    sub_227DD3274((__int128 *)(*(_QWORD *)(v9 + 56) + 40 * v6), a2);
    sub_227E55E44(v6, v9);
    *v3 = v9;
    swift_bridgeObjectRelease();
  }
  else
  {
    *(_QWORD *)(a2 + 32) = 0;
    result = 0.0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
  }
  return result;
}

uint64_t sub_227E5588C(unint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  char v12;
  char v13;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v15;
  uint64_t v17;

  v2 = v1;
  v4 = *v1;
  if ((v4 & 0xC000000000000001) == 0)
  {
LABEL_8:
    swift_bridgeObjectRetain();
    a1 = sub_227DD0270(a1);
    v13 = v12;
    swift_bridgeObjectRelease();
    if ((v13 & 1) != 0)
    {
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v9 = *v2;
      v17 = *v2;
      *v2 = 0x8000000000000000;
      if (!isUniquelyReferenced_nonNull_native)
      {
        sub_227DD2FB8();
        v9 = v17;
      }
      goto LABEL_11;
    }
    return 0;
  }
  if (v4 < 0)
    v5 = v4;
  else
    v5 = v4 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  v6 = (id)a1;
  v7 = sub_227E6053C();

  if (!v7)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  swift_unknownObjectRelease();
  v8 = sub_227E60410();
  v9 = sub_227E21B38(v5, v8);
  swift_retain();
  a1 = sub_227DD0270((uint64_t)v6);
  v11 = v10;
  swift_release();
  if ((v11 & 1) == 0)
  {
    __break(1u);
    goto LABEL_8;
  }
LABEL_11:

  v15 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * a1);
  sub_227E56008(a1, v9);
  *v2 = v9;
  swift_bridgeObjectRelease();
  return v15;
}

unint64_t sub_227E559D8(int64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v23;
  uint64_t v24;
  int64_t v25;
  int64_t v26;
  unint64_t v27;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(char *, unint64_t, uint64_t);
  unint64_t v37;
  uint64_t v38;

  v4 = sub_227E5F27C();
  v38 = *(_QWORD *)(v4 - 8);
  result = MEMORY[0x24BDAC7A8](v4, v5);
  v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a2 + 64;
  v10 = -1 << *(_BYTE *)(a2 + 32);
  v11 = (a1 + 1) & ~v10;
  if (((1 << v11) & *(_QWORD *)(a2 + 64 + 8 * (v11 >> 6))) != 0)
  {
    v12 = ~v10;
    result = sub_227E603EC();
    if ((*(_QWORD *)(v9 + 8 * (v11 >> 6)) & (1 << v11)) != 0)
    {
      v37 = (result + 1) & v12;
      v13 = *(_QWORD *)(v38 + 72);
      v36 = *(void (**)(char *, unint64_t, uint64_t))(v38 + 16);
      v14 = v12;
      do
      {
        v15 = v9;
        v16 = v13;
        v17 = v13 * v11;
        v18 = v14;
        v36(v8, *(_QWORD *)(a2 + 48) + v13 * v11, v4);
        sub_227D51624((unint64_t *)&qword_2559282A0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE930]);
        v19 = sub_227E5FF3C();
        result = (*(uint64_t (**)(char *, uint64_t))(v38 + 8))(v8, v4);
        v14 = v18;
        v20 = v19 & v18;
        if (a1 >= (uint64_t)v37)
        {
          if (v20 >= v37 && a1 >= (uint64_t)v20)
          {
LABEL_16:
            v9 = v15;
            if (v16 * a1 < v17
              || *(_QWORD *)(a2 + 48) + v16 * a1 >= (unint64_t)(*(_QWORD *)(a2 + 48) + v17 + v16))
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v16 * a1 != v17)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            v23 = *(_QWORD *)(a2 + 56);
            v24 = *(_QWORD *)(*(_QWORD *)(type metadata accessor for ReadingHistoryDay(0) - 8) + 72);
            v25 = v24 * a1;
            result = v23 + v24 * a1;
            v26 = v24 * v11;
            v27 = v23 + v24 * v11 + v24;
            if (v25 < v26 || result >= v27)
            {
              result = swift_arrayInitWithTakeFrontToBack();
              a1 = v11;
              v14 = v18;
            }
            else
            {
              a1 = v11;
              v14 = v18;
              if (v25 != v26)
              {
                result = swift_arrayInitWithTakeBackToFront();
                v14 = v18;
                a1 = v11;
              }
            }
            goto LABEL_5;
          }
        }
        else if (v20 >= v37 || a1 >= (uint64_t)v20)
        {
          goto LABEL_16;
        }
        v9 = v15;
LABEL_5:
        v11 = (v11 + 1) & v14;
        v13 = v16;
      }
      while (((*(_QWORD *)(v9 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
    }
    v29 = (uint64_t *)(v9 + 8 * ((unint64_t)a1 >> 6));
    v30 = *v29;
    v31 = (-1 << a1) - 1;
  }
  else
  {
    v29 = (uint64_t *)(v9 + 8 * ((unint64_t)a1 >> 6));
    v31 = *v29;
    v30 = (-1 << a1) - 1;
  }
  *v29 = v31 & v30;
  v32 = *(_QWORD *)(a2 + 16);
  v33 = __OFSUB__(v32, 1);
  v34 = v32 - 1;
  if (v33)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v34;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_227E55CB0(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  unint64_t v11;
  _QWORD *v14;
  uint64_t v15;
  _OWORD *v16;
  _OWORD *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_227E603EC();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        v9 = *(_QWORD *)(a2 + 48);
        v10 = (_QWORD *)(v9 + 8 * v6);
        result = sub_227E60710();
        v11 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 >= v8 && v3 >= (uint64_t)v11)
          {
LABEL_16:
            v14 = (_QWORD *)(v9 + 8 * v3);
            if (v3 != v6 || v14 >= v10 + 1)
              *v14 = *v10;
            v15 = *(_QWORD *)(a2 + 56);
            v16 = (_OWORD *)(v15 + 16 * v3);
            v17 = (_OWORD *)(v15 + 16 * v6);
            if (v3 != v6 || (v3 = v6, v16 >= v17 + 1))
            {
              *v16 = *v17;
              v3 = v6;
            }
          }
        }
        else if (v11 >= v8 || v3 >= (uint64_t)v11)
        {
          goto LABEL_16;
        }
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v19 = *v18;
    v20 = (-1 << v3) - 1;
  }
  else
  {
    v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    v20 = *v18;
    v19 = (-1 << result) - 1;
  }
  *v18 = v20 & v19;
  v21 = *(_QWORD *)(a2 + 16);
  v22 = __OFSUB__(v21, 1);
  v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

void sub_227E55E44(unint64_t a1, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  __int128 v10;
  __int128 v11;
  id v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  unint64_t v21;
  __int128 *v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;

  v3 = a1;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (a1 + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    v8 = sub_227E603EC();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      do
      {
        v12 = *(id *)(*(_QWORD *)(a2 + 48) + 8 * v6);
        v13 = sub_227E60344();

        v14 = v13 & v7;
        if (v3 >= (uint64_t)v9)
        {
          if (v14 >= v9 && v3 >= (uint64_t)v14)
          {
LABEL_16:
            v17 = *(_QWORD *)(a2 + 48);
            v18 = (_QWORD *)(v17 + 8 * v3);
            v19 = (_QWORD *)(v17 + 8 * v6);
            if (v3 != v6 || v18 >= v19 + 1)
              *v18 = *v19;
            v20 = *(_QWORD *)(a2 + 56);
            v21 = v20 + 40 * v3;
            v22 = (__int128 *)(v20 + 40 * v6);
            if (v3 != v6 || (v3 = v6, v21 >= (unint64_t)v22 + 40))
            {
              v10 = *v22;
              v11 = v22[1];
              *(_QWORD *)(v21 + 32) = *((_QWORD *)v22 + 4);
              *(_OWORD *)v21 = v10;
              *(_OWORD *)(v21 + 16) = v11;
              v3 = v6;
            }
          }
        }
        else if (v14 >= v9 || v3 >= (uint64_t)v14)
        {
          goto LABEL_16;
        }
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v23 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v24 = *v23;
    v25 = (-1 << v3) - 1;
  }
  else
  {
    v23 = (uint64_t *)(v4 + 8 * (a1 >> 6));
    v25 = *v23;
    v24 = (-1 << a1) - 1;
  }
  *v23 = v25 & v24;
  v26 = *(_QWORD *)(a2 + 16);
  v27 = __OFSUB__(v26, 1);
  v28 = v26 - 1;
  if (v27)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v28;
    ++*(_DWORD *)(a2 + 36);
  }
}

void sub_227E56008(unint64_t a1, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  id v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;

  v3 = a1;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (a1 + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    v8 = sub_227E603EC();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      do
      {
        v10 = *(id *)(*(_QWORD *)(a2 + 48) + 8 * v6);
        v11 = sub_227E60344();

        v12 = v11 & v7;
        if (v3 >= (uint64_t)v9)
        {
          if (v12 >= v9 && v3 >= (uint64_t)v12)
          {
LABEL_16:
            v15 = *(_QWORD *)(a2 + 48);
            v16 = (_QWORD *)(v15 + 8 * v3);
            v17 = (_QWORD *)(v15 + 8 * v6);
            if (v3 != v6 || v16 >= v17 + 1)
              *v16 = *v17;
            v18 = *(_QWORD *)(a2 + 56);
            v19 = (_QWORD *)(v18 + 8 * v3);
            v20 = (_QWORD *)(v18 + 8 * v6);
            if (v3 != v6 || (v3 = v6, v19 >= v20 + 1))
            {
              *v19 = *v20;
              v3 = v6;
            }
          }
        }
        else if (v12 >= v9 || v3 >= (uint64_t)v12)
        {
          goto LABEL_16;
        }
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v21 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v22 = *v21;
    v23 = (-1 << v3) - 1;
  }
  else
  {
    v21 = (uint64_t *)(v4 + 8 * (a1 >> 6));
    v23 = *v21;
    v22 = (-1 << a1) - 1;
  }
  *v21 = v23 & v22;
  v24 = *(_QWORD *)(a2 + 16);
  v25 = __OFSUB__(v24, 1);
  v26 = v24 - 1;
  if (v25)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v26;
    ++*(_DWORD *)(a2 + 36);
  }
}

_QWORD *sub_227E561B8(_QWORD *result, _OWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;

  v4 = a4 + 56;
  v5 = -1;
  v6 = -1 << *(_BYTE *)(a4 + 32);
  if (-v6 < 64)
    v5 = ~(-1 << -(char)v6);
  v7 = v5 & *(_QWORD *)(a4 + 56);
  if (!a2)
  {
    v8 = 0;
    a3 = 0;
LABEL_35:
    *result = a4;
    result[1] = v4;
    result[2] = ~v6;
    result[3] = v8;
    result[4] = v7;
    return (_QWORD *)a3;
  }
  if (!a3)
  {
    v8 = 0;
    goto LABEL_35;
  }
  if (a3 < 0)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  v8 = 0;
  v9 = 0;
  v10 = (unint64_t)(63 - v6) >> 6;
  while (v7)
  {
    v11 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    v12 = v11 | (v8 << 6);
LABEL_8:
    ++v9;
    *a2++ = *(_OWORD *)(*(_QWORD *)(a4 + 48) + 16 * v12);
    if (v9 == a3)
      goto LABEL_35;
  }
  v13 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    goto LABEL_37;
  }
  if (v13 >= v10)
    goto LABEL_30;
  v14 = *(_QWORD *)(v4 + 8 * v13);
  if (v14)
    goto LABEL_19;
  v8 += 2;
  if (v13 + 1 >= v10)
  {
    v7 = 0;
    v8 = v13;
    goto LABEL_34;
  }
  v14 = *(_QWORD *)(v4 + 8 * v8);
  if (v14)
  {
LABEL_15:
    v13 = v8;
LABEL_19:
    v16 = __clz(__rbit64(v14));
    v7 = (v14 - 1) & v14;
    v12 = v16 + (v13 << 6);
    v8 = v13;
    goto LABEL_8;
  }
  v15 = v13 + 2;
  if (v13 + 2 >= v10)
    goto LABEL_30;
  v14 = *(_QWORD *)(v4 + 8 * v15);
  if (v14)
  {
LABEL_18:
    v13 = v15;
    goto LABEL_19;
  }
  v8 = v13 + 3;
  if (v13 + 3 >= v10)
  {
    v7 = 0;
    v8 = v13 + 2;
    goto LABEL_34;
  }
  v14 = *(_QWORD *)(v4 + 8 * v8);
  if (v14)
    goto LABEL_15;
  v15 = v13 + 4;
  if (v13 + 4 >= v10)
  {
LABEL_30:
    v7 = 0;
LABEL_34:
    a3 = v9;
    goto LABEL_35;
  }
  v14 = *(_QWORD *)(v4 + 8 * v15);
  if (v14)
    goto LABEL_18;
  while (1)
  {
    v13 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v13 >= v10)
    {
      v7 = 0;
      v8 = v10 - 1;
      goto LABEL_34;
    }
    v14 = *(_QWORD *)(v4 + 8 * v13);
    ++v15;
    if (v14)
      goto LABEL_19;
  }
LABEL_38:
  __break(1u);
  return result;
}

uint64_t sub_227E5634C(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  int64_t v28;
  unint64_t v29;
  int64_t v30;
  uint64_t v31;
  void (*v32)(char *, char *, uint64_t);
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  int64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  int64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;

  v8 = sub_227D68330(&qword_253F391D0);
  MEMORY[0x24BDAC7A8](v8, v9);
  v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_227E5F27C();
  v43 = *(_QWORD *)(v12 - 8);
  result = MEMORY[0x24BDAC7A8](v12, v13);
  v42 = (char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = a4;
  v17 = a4 + 64;
  v16 = *(_QWORD *)(a4 + 64);
  v18 = -1 << *(_BYTE *)(a4 + 32);
  v37 = a1;
  v38 = v18;
  v19 = -v18;
  if (v19 < 64)
    v20 = ~(-1 << v19);
  else
    v20 = -1;
  v21 = v20 & v16;
  if (!a2)
  {
    v22 = 0;
    v23 = 0;
LABEL_39:
    v33 = v37;
    v34 = ~v38;
    *v37 = v44;
    v33[1] = v17;
    v33[2] = v34;
    v33[3] = v22;
    v33[4] = v21;
    return v23;
  }
  if (!a3)
  {
    v22 = 0;
    v23 = 0;
    goto LABEL_39;
  }
  if (a3 < 0)
    goto LABEL_41;
  v22 = 0;
  v23 = 0;
  v39 = a4 + 64;
  v40 = (unint64_t)(63 - v38) >> 6;
  v36 = v40 - 1;
  v41 = a3;
  v24 = v42;
  v25 = v43;
  if (!v21)
    goto LABEL_9;
LABEL_8:
  v26 = __clz(__rbit64(v21));
  v21 &= v21 - 1;
  v27 = v26 | (v22 << 6);
  while (1)
  {
    v31 = *(_QWORD *)(v25 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v25 + 16))(v11, *(_QWORD *)(v44 + 48) + v31 * v27, v12);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v11, 0, 1, v12);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v11, 1, v12) == 1)
    {
      v17 = v39;
      goto LABEL_38;
    }
    ++v23;
    v32 = *(void (**)(char *, char *, uint64_t))(v25 + 32);
    v32(v24, v11, v12);
    result = ((uint64_t (*)(uint64_t, char *, uint64_t))v32)(a2, v24, v12);
    if (v23 == v41)
    {
      v23 = v41;
      v17 = v39;
      goto LABEL_39;
    }
    a2 += v31;
    v25 = v43;
    if (v21)
      goto LABEL_8;
LABEL_9:
    v28 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    v17 = v39;
    if (v28 >= v40)
      goto LABEL_37;
    v29 = *(_QWORD *)(v39 + 8 * v28);
    if (!v29)
    {
      v30 = v22 + 2;
      ++v22;
      if (v28 + 1 >= v40)
        goto LABEL_37;
      v29 = *(_QWORD *)(v39 + 8 * v30);
      if (v29)
        goto LABEL_14;
      v22 = v28 + 1;
      if (v28 + 2 >= v40)
        goto LABEL_37;
      v29 = *(_QWORD *)(v39 + 8 * (v28 + 2));
      if (v29)
      {
        v28 += 2;
      }
      else
      {
        v22 = v28 + 2;
        if (v28 + 3 >= v40)
          goto LABEL_37;
        v29 = *(_QWORD *)(v39 + 8 * (v28 + 3));
        if (!v29)
        {
          v30 = v28 + 4;
          v22 = v28 + 3;
          if (v28 + 4 < v40)
          {
            v29 = *(_QWORD *)(v39 + 8 * v30);
            if (!v29)
            {
              while (1)
              {
                v28 = v30 + 1;
                if (__OFADD__(v30, 1))
                  goto LABEL_42;
                if (v28 >= v40)
                {
                  v22 = v36;
                  goto LABEL_37;
                }
                v29 = *(_QWORD *)(v39 + 8 * v28);
                ++v30;
                if (v29)
                  goto LABEL_21;
              }
            }
LABEL_14:
            v28 = v30;
            goto LABEL_21;
          }
LABEL_37:
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v25 + 56))(v11, 1, 1, v12);
          v21 = 0;
LABEL_38:
          sub_227D5809C((uint64_t)v11, &qword_253F391D0);
          goto LABEL_39;
        }
        v28 += 3;
      }
    }
LABEL_21:
    v21 = (v29 - 1) & v29;
    v27 = __clz(__rbit64(v29)) + (v28 << 6);
    v22 = v28;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_227E5669C(uint64_t result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  _QWORD *v20;
  uint64_t v21;

  v5 = (_QWORD *)result;
  v6 = a4 + 56;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 56);
  if (!a2)
  {
    v12 = 0;
    v10 = 0;
LABEL_38:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    v20 = (_QWORD *)(*(_QWORD *)(a4 + 48) + 16 * v16);
    v21 = v20[1];
    *v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 2;
    result = swift_bridgeObjectRetain();
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
      break;
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    v9 = 0;
    v12 = v17;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
    goto LABEL_14;
  v19 = v17 + 2;
  if (v17 + 2 >= v14)
    goto LABEL_33;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
    goto LABEL_17;
  v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    v9 = 0;
    v12 = v17 + 2;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    v17 = v12;
    goto LABEL_18;
  }
  v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    v9 = 0;
LABEL_37:
    v10 = v13;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    v17 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v17 >= v14)
    {
      v9 = 0;
      v12 = v14 - 1;
      goto LABEL_37;
    }
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v19;
    if (v18)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

_QWORD *sub_227E56898(_QWORD *result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  id v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  _QWORD *v24;
  int64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int64_t v30;
  unint64_t v31;

  v4 = a4;
  v6 = a2;
  v24 = result;
  if ((a4 & 0xC000000000000001) != 0)
  {
    sub_227E60404();
    sub_227D52DBC(0, (unint64_t *)&unk_25592A2C0);
    sub_227E57B4C((unint64_t *)&qword_2559295A0, (unint64_t *)&unk_25592A2C0, 0x24BDB91F8, MEMORY[0x24BEE5BD8]);
    result = (_QWORD *)sub_227E60158();
    v4 = v27;
    v7 = v28;
    v8 = v29;
    v9 = v30;
    v10 = v31;
    if (v6)
      goto LABEL_3;
LABEL_36:
    v11 = 0;
    goto LABEL_38;
  }
  v9 = 0;
  v19 = -1 << *(_BYTE *)(a4 + 32);
  v7 = a4 + 56;
  v8 = ~v19;
  v20 = -v19;
  if (v20 < 64)
    v21 = ~(-1 << v20);
  else
    v21 = -1;
  v10 = v21 & *(_QWORD *)(a4 + 56);
  if (!a2)
    goto LABEL_36;
LABEL_3:
  if (!a3)
  {
    v11 = 0;
LABEL_38:
    v22 = v24;
LABEL_41:
    *v22 = v4;
    v22[1] = v7;
    v22[2] = v8;
    v22[3] = v9;
    v22[4] = v10;
    return (_QWORD *)v11;
  }
  if (a3 < 0)
    goto LABEL_48;
  v11 = 0;
  v25 = (unint64_t)(v8 + 64) >> 6;
  v23 = v8;
  while (1)
  {
    if (v4 < 0)
    {
      if (!sub_227E60428())
        goto LABEL_40;
      sub_227D52DBC(0, (unint64_t *)&unk_25592A2C0);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      v14 = v26;
      result = (_QWORD *)swift_unknownObjectRelease();
      if (!v26)
        goto LABEL_40;
      goto LABEL_8;
    }
    if (v10)
    {
      v12 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v13 = v12 | (v9 << 6);
      goto LABEL_7;
    }
    v15 = v9 + 1;
    if (__OFADD__(v9, 1))
      break;
    if (v15 >= v25)
    {
      v10 = 0;
      goto LABEL_40;
    }
    v16 = *(_QWORD *)(v7 + 8 * v15);
    if (v16)
      goto LABEL_23;
    v17 = v9 + 2;
    if (v9 + 2 >= v25)
    {
      v10 = 0;
      ++v9;
      goto LABEL_40;
    }
    v16 = *(_QWORD *)(v7 + 8 * v17);
    if (!v16)
    {
      if (v9 + 3 >= v25)
        goto LABEL_44;
      v16 = *(_QWORD *)(v7 + 8 * (v9 + 3));
      if (v16)
      {
        v15 = v9 + 3;
        goto LABEL_23;
      }
      v17 = v9 + 4;
      if (v9 + 4 >= v25)
      {
        v10 = 0;
        v9 += 3;
        goto LABEL_40;
      }
      v16 = *(_QWORD *)(v7 + 8 * v17);
      if (!v16)
      {
        v15 = v9 + 5;
        if (v9 + 5 >= v25)
        {
LABEL_44:
          v10 = 0;
          v9 = v17;
          goto LABEL_40;
        }
        v16 = *(_QWORD *)(v7 + 8 * v15);
        if (!v16)
        {
          v18 = v9 + 6;
          while (v25 != v18)
          {
            v16 = *(_QWORD *)(v7 + 8 * v18++);
            if (v16)
            {
              v15 = v18 - 1;
              goto LABEL_23;
            }
          }
          v10 = 0;
          v9 = v25 - 1;
          goto LABEL_40;
        }
        goto LABEL_23;
      }
    }
    v15 = v17;
LABEL_23:
    v10 = (v16 - 1) & v16;
    v13 = __clz(__rbit64(v16)) + (v15 << 6);
    v9 = v15;
LABEL_7:
    result = *(id *)(*(_QWORD *)(v4 + 48) + 8 * v13);
    v14 = result;
    if (!result)
      goto LABEL_40;
LABEL_8:
    ++v11;
    *v6++ = v14;
    if (v11 == a3)
    {
      v11 = a3;
LABEL_40:
      v8 = v23;
      v22 = v24;
      goto LABEL_41;
    }
  }
  __break(1u);
LABEL_48:
  __break(1u);
  return result;
}

uint64_t sub_227E56BA8(uint64_t result, uint64_t *a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4;
  uint64_t *v6;
  _QWORD *v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int64_t v24;
  uint64_t v25;

  v4 = a4;
  v6 = a2;
  v7 = (_QWORD *)result;
  if ((a4 & 0xC000000000000001) != 0)
  {
    result = sub_227E60524();
    v8 = 0;
    v9 = 0;
    v10 = 0;
    v4 = result | 0x8000000000000000;
    if (v6)
      goto LABEL_3;
LABEL_34:
    v11 = 0;
    a3 = 0;
LABEL_42:
    *v7 = v4;
    v7[1] = v8;
    v7[2] = v9;
    v7[3] = v11;
    v7[4] = v10;
    return a3;
  }
  v19 = -1 << *(_BYTE *)(a4 + 32);
  v8 = a4 + 64;
  v20 = ~v19;
  v21 = -v19;
  if (v21 < 64)
    v22 = ~(-1 << v21);
  else
    v22 = -1;
  v10 = v22 & *(_QWORD *)(a4 + 64);
  v9 = v20;
  if (!a2)
    goto LABEL_34;
LABEL_3:
  if (!a3)
  {
    v11 = 0;
    goto LABEL_42;
  }
  if (a3 < 0)
  {
LABEL_45:
    __break(1u);
    goto LABEL_46;
  }
  v23 = v9;
  v11 = 0;
  v12 = 0;
  v24 = (unint64_t)(v9 + 64) >> 6;
  while ((v4 & 0x8000000000000000) != 0)
  {
    if (!sub_227E60548())
    {
      a3 = v12;
LABEL_41:
      v9 = v23;
      goto LABEL_42;
    }
    swift_unknownObjectRelease();
    sub_227D52DBC(0, (unint64_t *)&qword_255929460);
    swift_unknownObjectRetain();
    swift_dynamicCast();
    v15 = v25;
    result = swift_unknownObjectRelease();
    if (!v25)
      goto LABEL_40;
LABEL_8:
    ++v12;
    *v6++ = v15;
    if (v12 == a3)
      goto LABEL_41;
  }
  if (v10)
  {
    v13 = __clz(__rbit64(v10));
    v10 &= v10 - 1;
    v14 = v13 | (v11 << 6);
    goto LABEL_7;
  }
  v16 = v11 + 1;
  if (__OFADD__(v11, 1))
  {
    __break(1u);
    goto LABEL_45;
  }
  if (v16 >= v24)
    goto LABEL_37;
  v17 = *(_QWORD *)(v8 + 8 * v16);
  if (v17)
    goto LABEL_29;
  v11 += 2;
  if (v16 + 1 >= v24)
  {
    v10 = 0;
    v11 = v16;
    goto LABEL_40;
  }
  v17 = *(_QWORD *)(v8 + 8 * v11);
  if (v17)
  {
    ++v16;
LABEL_29:
    v10 = (v17 - 1) & v17;
    v14 = __clz(__rbit64(v17)) + (v16 << 6);
    v11 = v16;
LABEL_7:
    result = (uint64_t)*(id *)(*(_QWORD *)(v4 + 56) + 8 * v14);
    v15 = result;
    if (!result)
      goto LABEL_40;
    goto LABEL_8;
  }
  if (v16 + 2 >= v24)
  {
LABEL_37:
    v10 = 0;
LABEL_40:
    a3 = v12;
    goto LABEL_41;
  }
  v17 = *(_QWORD *)(v8 + 8 * (v16 + 2));
  if (v17)
  {
    v16 += 2;
    goto LABEL_29;
  }
  v18 = v16 + 3;
  if (v16 + 3 >= v24)
  {
    v10 = 0;
    v11 = v16 + 2;
    goto LABEL_40;
  }
  v17 = *(_QWORD *)(v8 + 8 * v18);
  if (v17)
  {
    v16 += 3;
    goto LABEL_29;
  }
  while (1)
  {
    v16 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v16 >= v24)
    {
      v10 = 0;
      v11 = v24 - 1;
      goto LABEL_40;
    }
    v17 = *(_QWORD *)(v8 + 8 * v16);
    ++v18;
    if (v17)
      goto LABEL_29;
  }
LABEL_46:
  __break(1u);
  return result;
}

uint64_t sub_227E56E68(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t i;
  void (*v12)(_QWORD *);
  id *v13;
  id v14;
  uint64_t result;
  void (*v16[4])(id *);

  v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_227E6056C();
    swift_bridgeObjectRelease();
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_19;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    v10 = sub_227E6056C();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_227D515E4((unint64_t *)&unk_25592A2D8, &qword_25592A2D0, MEMORY[0x24BEE12E0]);
        swift_bridgeObjectRetain();
        for (i = 0; i != v7; ++i)
        {
          sub_227D68330(&qword_25592A2D0);
          v12 = sub_227E24A5C(v16, i, a3);
          v14 = *v13;
          ((void (*)(void (**)(id *), _QWORD))v12)(v16, 0);
          *(_QWORD *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_227D52DBC(0, &qword_255928490);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  result = sub_227E605A8();
  __break(1u);
  return result;
}

uint64_t sub_227E57084(_QWORD *a1, _QWORD *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1])
    return 1;
  else
    return sub_227E60698() & 1;
}

uint64_t sub_227E570D8(_QWORD *a1)
{
  return sub_227E57D08(a1) & 1;
}

void sub_227E570F0()
{
  uint64_t v0;

  *(_BYTE *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC13BookDataStore21BDSSyncEnginePipeline__hasPendingModifications) = *(_BYTE *)(v0 + 24);
}

uint64_t sub_227E57108()
{
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_227E5712C(void *a1, uint64_t a2, uint64_t a3, char *a4)
{
  id v6;
  void *v7;
  NSObject *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  char *v12;
  id v13;
  uint64_t result;
  _QWORD v15[6];
  __int128 v16[2];
  _QWORD v17[5];

  v17[3] = type metadata accessor for BDSSyncEnginePipeline();
  v17[4] = &off_24F091278;
  v17[0] = a1;
  v6 = a1;
  v7 = (void *)sub_227E5FF78();
  v8 = *(NSObject **)&a4[OBJC_IVAR____TtC13BookDataStore13BDSSyncEngine_queue];
  sub_227D572C8((uint64_t)v17, (uint64_t)v16);
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = a4;
  *(_QWORD *)(v9 + 24) = v7;
  sub_227DD3274(v16, v9 + 32);
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = sub_227E57DBC;
  *(_QWORD *)(v10 + 24) = v9;
  v15[4] = sub_227D62A80;
  v15[5] = v10;
  v15[0] = MEMORY[0x24BDAC760];
  v15[1] = 1107296256;
  v15[2] = sub_227D62A60;
  v15[3] = &unk_24F091580;
  v11 = _Block_copy(v15);
  v12 = a4;
  v13 = v7;
  swift_retain();
  swift_release();
  dispatch_sync(v8, v11);

  _Block_release(v11);
  LOBYTE(v13) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((v13 & 1) == 0)
    return sub_227D58120((uint64_t)v17);
  __break(1u);
  return result;
}

uint64_t sub_227E572C8(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  id v17;
  _QWORD v19[2];
  uint64_t v20;
  uint64_t v21;
  _QWORD aBlock[6];

  v4 = sub_227E5F948();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458];
  v20 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v6);
  v8 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_227E5F978();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9, v11);
  v13 = (char *)v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19[1] = *(_QWORD *)(a2 + OBJC_IVAR____TtC13BookDataStore13BDSSyncEngine_queue);
  v14 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = v14;
  *(_QWORD *)(v15 + 24) = a1;
  aBlock[4] = sub_227E2BFA4;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_227D5A858;
  aBlock[3] = &unk_24F091508;
  v16 = _Block_copy(aBlock);
  swift_retain();
  v17 = a1;
  sub_227E5F960();
  v21 = MEMORY[0x24BEE4AF8];
  sub_227D51624((unint64_t *)&unk_253F3AED0, v5, MEMORY[0x24BEE5468]);
  sub_227D68330((uint64_t *)&unk_253F3AFE0);
  sub_227D515E4((unint64_t *)&unk_253F3AFF0, (uint64_t *)&unk_253F3AFE0, MEMORY[0x24BEE12C8]);
  sub_227E603E0();
  MEMORY[0x22E2A991C](0, v13, v8, v16);
  _Block_release(v16);
  (*(void (**)(char *, uint64_t))(v20 + 8))(v8, v4);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
  swift_release();
  return swift_release();
}

uint64_t sub_227E57500()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = v0;
  return swift_task_switch();
}

uint64_t sub_227E57518()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;
  uint64_t v4;
  uint64_t v6;

  v1 = sub_227E5F570();
  v2 = sub_227E60248();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    v4 = swift_slowAlloc();
    v6 = v4;
    *(_DWORD *)v3 = 136315138;
    *(_QWORD *)(v0 + 16) = sub_227D634E0(0xD000000000000011, 0x8000000227E6E640, &v6);
    sub_227E603B0();
    _os_log_impl(&dword_227D4F000, v1, v2, "BDSSyncEnginePipeline - %s", v3, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x22E2AA8AC](v4, -1, -1);
    MEMORY[0x22E2AA8AC](v3, -1, -1);
  }

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

void sub_227E57668(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(*(_QWORD *)(v1 + 16) + OBJC_IVAR____TtC13BookDataStore21BDSSyncEnginePipeline__hasPendingModifications);
}

uint64_t sub_227E57680()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_227E576A4(uint64_t a1)
{
  uint64_t *v1;

  return sub_227E4EEB4(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_227E576B0()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_227E576DC()
{
  uint64_t v0;

  sub_227E500F0(*(void **)(v0 + 24));
}

uint64_t sub_227E57708()
{
  uint64_t v0;

  return sub_227E50C04(*(void **)(v0 + 24));
}

uint64_t sub_227E57730()
{
  id *v0;

  return swift_deallocObject();
}

void sub_227E57764()
{
  uint64_t v0;

  sub_227E51B44(*(void **)(v0 + 24), *(id *)(v0 + 32));
}

uint64_t sub_227E5778C()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_227E577B0()
{
  return sub_227E52E38();
}

uint64_t type metadata accessor for BDSSyncEnginePipeline()
{
  uint64_t result;

  result = qword_255929FF8;
  if (!qword_255929FF8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_227E577F4()
{
  return type metadata accessor for BDSSyncEnginePipeline();
}

uint64_t sub_227E577FC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_227E5F588();
  if (v1 <= 0x3F)
    return swift_updateClassMetadata2();
  return result;
}

uint64_t method lookup function for BDSSyncEnginePipeline()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of BDSSyncEnginePipeline.saltUpdated(saltVersionIdentifier:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x180))();
}

uint64_t dispatch thunk of BDSSyncEnginePipeline.signalSyncToCK()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x188))();
}

uint64_t dispatch thunk of BDSSyncEnginePipeline.startSyncToCK()()
{
  _QWORD *v0;
  uint64_t v1;
  int *v2;
  _QWORD *v3;
  uint64_t (*v5)(void);

  v2 = *(int **)((*MEMORY[0x24BEE4EA0] & *v0) + 0x190);
  v5 = (uint64_t (*)(void))((char *)v2 + *v2);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_227DDF744;
  return v5();
}

uint64_t dispatch thunk of BDSSyncEnginePipeline.fetchRecord(for:)(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t);

  v4 = *(int **)((*MEMORY[0x24BEE4EA0] & *v1) + 0x198);
  v7 = (uint64_t (*)(uint64_t))((char *)v4 + *v4);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_227E58380;
  return v7(a1);
}

uint64_t dispatch thunk of BDSSyncEnginePipeline.privacyDelegate()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x1A0))();
}

uint64_t dispatch thunk of BDSSyncEnginePipeline.nextRecordZoneChangeBatch(zoneIDs:fetchLimit:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  int *v8;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t);

  v8 = *(int **)((*MEMORY[0x24BEE4EA0] & *v3) + 0x1B0);
  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)v8 + *v8);
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_227DDF744;
  return v11(a1, a2, a3);
}

uint64_t dispatch thunk of BDSSyncEnginePipeline.didSave(record:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x1C0))();
}

uint64_t dispatch thunk of BDSSyncEnginePipeline.failedToSaveRecordWith(recordID:error:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x1D8))();
}

uint64_t dispatch thunk of BDSSyncEnginePipeline.didDeleteRecordWith(recordID:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x1E0))();
}

uint64_t dispatch thunk of BDSSyncEnginePipeline.failedToDeleteRecordWith(recordID:error:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x1F0))();
}

uint64_t dispatch thunk of BDSSyncEnginePipeline.didCompleteModifyRecordsBatch()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x208))();
}

uint64_t type metadata accessor for _BDSSyncEngineModifyBatchResponse()
{
  return objc_opt_self();
}

uint64_t sub_227E57B4C(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    v7 = sub_227D52DBC(255, a2);
    result = MEMORY[0x22E2AA7D4](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

void sub_227E57B8C()
{
  uint64_t v0;

  sub_227E4C174(v0);
}

uint64_t sub_227E57B94(uint64_t (*a1)(uint64_t))
{
  uint64_t v1;
  uint64_t v3;

  v3 = (*(uint64_t (**)(void))(v1 + 16))();
  return a1(v3);
}

uint64_t sub_227E57BD0()
{
  uint64_t v0;

  return sub_227E4C200(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
}

uint64_t sub_227E57BE0()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_227E57C14()
{
  uint64_t v0;

  return sub_227E4C950(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
}

uint64_t sub_227E57C20()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_227E57C44(uint64_t a1)
{
  uint64_t v1;

  return sub_227E4CF88(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_227E57C4C()
{
  return sub_227E581A8((void (*)(_QWORD))MEMORY[0x24BEE4EF8]);
}

uint64_t sub_227E57C58(id *a1)
{
  uint64_t v1;

  return sub_227E4CFF4(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_227E57C60()
{
  return sub_227E581A8((void (*)(_QWORD))MEMORY[0x24BEE4EF8]);
}

uint64_t sub_227E57C6C(void **a1)
{
  uint64_t v1;

  return sub_227E4D134(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(uint64_t (**)(uint64_t))(v1 + 32));
}

uint64_t sub_227E57C88(void **a1)
{
  uint64_t v1;

  return sub_227E4D24C(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_227E57C9C()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_227E57CC8()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(uint64_t (**)(uint64_t))(v0 + 32);
  v2 = (*(uint64_t (**)(void))(v0 + 16))();
  return v1(v2);
}

void sub_227E57D00(void **a1)
{
  uint64_t v1;

  sub_227E4D2F4(a1, v1);
}

uint64_t sub_227E57D08(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v2;

  v2 = *(_QWORD **)(v1 + 16);
  if (*a1 == *v2 && a1[1] == v2[1])
    return 1;
  else
    return sub_227E60698() & 1;
}

uint64_t sub_227E57D5C()
{
  swift_release();
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_227E57D88()
{
  uint64_t v0;

  sub_227D58120(v0 + 32);
  return swift_deallocObject();
}

uint64_t sub_227E57DBC()
{
  uint64_t v0;

  return sub_227E1A474(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24), v0 + 32);
}

uint64_t sub_227E57DC8()
{
  return swift_deallocObject();
}

uint64_t sub_227E57DD8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v1 = sub_227E5F588();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (((*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

void sub_227E57E68()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(sub_227E5F588() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_227E4CE18(v0 + v2, *(_QWORD *)(v0 + v3), *(_QWORD *)(v0 + v3 + 8), *(NSObject **)(v0 + ((v3 + 23) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_227E57EB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v1 = sub_227E5F588();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (((((*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

void sub_227E57F58()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(sub_227E5F588() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_227E4C758(v0 + v2, *(_QWORD *)(v0 + v3), *(_QWORD *)(v0 + v3 + 8), *(_QWORD *)(v0 + ((v3 + 23) & 0xFFFFFFFFFFFFFFF8)), *(NSObject **)(v0 + ((((v3 + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_227E57FB4()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 24));
  return swift_deallocObject();
}

uint64_t sub_227E57FE8()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  void *v3;
  void *v4;
  _QWORD *v5;

  v2 = (void *)v0[2];
  v3 = (void *)v0[3];
  v4 = (void *)v0[4];
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v5;
  *v5 = v1;
  v5[1] = sub_227DDF69C;
  return ((uint64_t (*)(void *, void *, void *))((char *)&dword_25592A3D0 + dword_25592A3D0))(v2, v3, v4);
}

uint64_t sub_227E58054()
{
  return sub_227E581A8((void (*)(_QWORD))MEMORY[0x24BEE4F70]);
}

uint64_t sub_227E58060()
{
  return sub_227E581A8((void (*)(_QWORD))MEMORY[0x24BEE4F70]);
}

uint64_t sub_227E5806C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_227E58090(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_227DDF69C;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_25592A400 + dword_25592A400))(a1, v4);
}

uint64_t sub_227E58100()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));

  return swift_deallocObject();
}

uint64_t sub_227E5812C()
{
  uint64_t v0;
  uint64_t v1;
  const void *v2;
  void *v3;
  _QWORD *v4;

  v2 = *(const void **)(v0 + 16);
  v3 = *(void **)(v0 + 24);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_227DDF744;
  return ((uint64_t (*)(const void *, void *))((char *)&dword_25592A410 + dword_25592A410))(v2, v3);
}

uint64_t sub_227E58190()
{
  return sub_227E581A8((void (*)(_QWORD))MEMORY[0x24BEE4F70]);
}

uint64_t sub_227E5819C()
{
  return sub_227E581A8((void (*)(_QWORD))MEMORY[0x24BEE4F70]);
}

uint64_t sub_227E581A8(void (*a1)(_QWORD))
{
  uint64_t v1;

  a1(*(_QWORD *)(v1 + 16));
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_227E581D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_227D68330(&qword_25592A438);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);

  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_227E58274()
{
  uint64_t v0;

  sub_227D68330(&qword_25592A438);
  return sub_227E4F204(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_227E582BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_227D68330(&qword_255929588);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_227E58304(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_227D68330((uint64_t *)&unk_25592A440);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_227E5834C()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_227E58370()
{
  return swift_deallocObject();
}

void sub_227E58418()
{
  sub_227E570F0();
}

void sub_227E5842C(os_log_t log)
{
  uint8_t v1[16];

  *(_WORD *)v1 = 0;
  _os_log_error_impl(&dword_227D4F000, log, OS_LOG_TYPE_ERROR, "BDSMediaLibraryUtils Could not find audiobookQuery.", v1, 2u);
}

void sub_227E5846C(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_227D74B98(&dword_227D4F000, a2, a3, "BDSMediaLibraryUtils No collections for %@", a5, a6, a7, a8, 2u);
}

void sub_227E584D4(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_227D74B98(&dword_227D4F000, a2, a3, "BDSMediaLibraryUtils No daap item found for %@", a5, a6, a7, a8, 2u);
}

void sub_227E5853C()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_227D6A120();
  sub_227D74B98(&dword_227D4F000, v0, v1, "BDSSyncEngineSaltManager - Create salt: unable to save salt record %{public}@", v2, v3, v4, v5, v6);
  sub_227D6A15C();
}

void sub_227E5859C(uint64_t *a1, uint64_t a2, os_log_t log)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  __int16 v7;
  uint64_t v8;
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  v3 = *a1;
  v4 = *(_QWORD *)(a2 + 48);
  v5 = 138412546;
  v6 = v3;
  v7 = 2112;
  v8 = v4;
  _os_log_error_impl(&dword_227D4F000, log, OS_LOG_TYPE_ERROR, "BDSSyncEngineSaltManager: Error retrieving record salt: %@ serverRecord:%@.. Trying to recover", (uint8_t *)&v5, 0x16u);
  sub_227D6A15C();
}

void sub_227E58624()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_227D6A120();
  sub_227D74B98(&dword_227D4F000, v0, v1, "BDSSyncEngineSaltManager - Create salt: unable to get record salt %{public}@", v2, v3, v4, v5, v6);
  sub_227D6A15C();
}

void sub_227E58684()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_227D6A120();
  sub_227D74B98(&dword_227D4F000, v0, v1, "BDSSyncEngineSaltManager - Create salt: unable to save record salt %{public}@", v2, v3, v4, v5, v6);
  sub_227D6A15C();
}

void sub_227E586E4(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_227D74B98(&dword_227D4F000, a2, a3, "BDSSyncEngineSaltManager: unable to generate record name for %@", a5, a6, a7, a8, 2u);
  sub_227D6A15C();
}

void sub_227E5874C()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_227D6A120();
  sub_227D74B98(&dword_227D4F000, v0, v1, "BDSSyncEngineSaltManager - requesting salted ID for %@ without salt!", v2, v3, v4, v5, v6);
  sub_227D6A15C();
}

void sub_227E587AC()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_227D6A120();
  sub_227D74B98(&dword_227D4F000, v0, v1, "Remote proxy hit an error: %{public}@", v2, v3, v4, v5, v6);
  sub_227D6A15C();
}

void sub_227E5880C()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_227D6A120();
  sub_227D74B98(&dword_227D4F000, v0, v1, "Synchronous Remote proxy hit an error: %{public}@", v2, v3, v4, v5, v6);
  sub_227D6A15C();
}

void sub_227E5886C()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_227D6A120();
  sub_227D74B98(&dword_227D4F000, v0, v1, "BDSServiceProxy signalFetchChangesTransaction %{public}@ - Connection not healthy", v2, v3, v4, v5, v6);
  sub_227D6A15C();
}

void sub_227E588CC()
{
  uint64_t v0;
  uint64_t v1;
  os_log_t v2;
  _BYTE v3[24];

  sub_227D84D10(*MEMORY[0x24BDAC8D0]);
  *(_DWORD *)v3 = 138543618;
  *(_QWORD *)&v3[4] = v0;
  *(_WORD *)&v3[12] = 2114;
  *(_QWORD *)&v3[14] = v1;
  sub_227D84C58(&dword_227D4F000, v1, v2, "BDSServiceProxy signalFetchChangesTransaction %{public}@ Error %{public}@", *(_QWORD *)v3, *(_QWORD *)&v3[8], *(_QWORD *)&v3[16]);
  sub_227D6A15C();
}

void sub_227E5893C()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_227D6A164();
  sub_227D84C24(&dword_227D4F000, v0, v1, "BDSServiceProxy deleteEngagementDataForKey: connection unhealthy", v2, v3, v4, v5, v6);
  sub_227D6A12C();
}

void sub_227E58968()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_227D6A120();
  sub_227D74B98(&dword_227D4F000, v0, v1, "BDSServiceProxy deleteEngagementDataForKey: Error %@", v2, v3, v4, v5, v6);
  sub_227D6A15C();
}

void sub_227E589C8()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_227D6A164();
  sub_227D84C24(&dword_227D4F000, v0, v1, "BDSServiceProxy engagementDataForKey: connection unhealthy", v2, v3, v4, v5, v6);
  sub_227D6A12C();
}

void sub_227E589F4()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_227D6A120();
  sub_227D74B98(&dword_227D4F000, v0, v1, "BDSServiceProxy engagementDataForKey: Error %@", v2, v3, v4, v5, v6);
  sub_227D6A15C();
}

void sub_227E58A54()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_227D6A164();
  sub_227D84C24(&dword_227D4F000, v0, v1, "BDSServiceProxy engagementDataIncludingDeleted: connection unhealthy", v2, v3, v4, v5, v6);
  sub_227D6A12C();
}

void sub_227E58A80()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_227D6A120();
  sub_227D74B98(&dword_227D4F000, v0, v1, "BDSServiceProxy engagementDataIncludingDeleted: Error %@", v2, v3, v4, v5, v6);
  sub_227D6A15C();
}

void sub_227E58AE0()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_227D6A164();
  sub_227D84C24(&dword_227D4F000, v0, v1, "BDSServiceProxy fetchEngagementDatasIncludingDeleted: connection unhealthy", v2, v3, v4, v5, v6);
  sub_227D6A12C();
}

void sub_227E58B0C()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_227D6A120();
  sub_227D74B98(&dword_227D4F000, v0, v1, "BDSServiceProxy fetchEngagementDatasIncludingDeleted: Error %@", v2, v3, v4, v5, v6);
  sub_227D6A15C();
}

void sub_227E58B6C()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_227D6A164();
  sub_227D84C24(&dword_227D4F000, v0, v1, "BDSServiceProxy getEngagementDataChangesSince: connection unhealthy", v2, v3, v4, v5, v6);
  sub_227D6A12C();
}

void sub_227E58B98()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_227D6A120();
  sub_227D74B98(&dword_227D4F000, v0, v1, "BDSServiceProxy getEngagementDataChangesSince: Error %@", v2, v3, v4, v5, v6);
  sub_227D6A15C();
}

void sub_227E58BF8()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_227D6A164();
  sub_227D84C24(&dword_227D4F000, v0, v1, "BDSServiceProxy setEngagementDatas: connection unhealthy", v2, v3, v4, v5, v6);
  sub_227D6A12C();
}

void sub_227E58C24()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_227D6A120();
  sub_227D74B98(&dword_227D4F000, v0, v1, "BDSServiceProxy setEngagementDatas: Error %@", v2, v3, v4, v5, v6);
  sub_227D6A15C();
}

void sub_227E58C84()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_227D6A164();
  sub_227D84C24(&dword_227D4F000, v0, v1, "BDSServiceProxy setEngagementData: connection unhealthy", v2, v3, v4, v5, v6);
  sub_227D6A12C();
}

void sub_227E58CB0()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_227D6A120();
  sub_227D74B98(&dword_227D4F000, v0, v1, "BDSServiceProxy setEngagementData: Error %@", v2, v3, v4, v5, v6);
  sub_227D6A15C();
}

void sub_227E58D10()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_227D6A164();
  sub_227D84C24(&dword_227D4F000, v0, v1, "BDSServiceProxy clearMetadata: connection unhealthy", v2, v3, v4, v5, v6);
  sub_227D6A12C();
}

void sub_227E58D3C()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_227D6A120();
  sub_227D74B98(&dword_227D4F000, v0, v1, "BDSServiceProxy clearMetadata Error %@", v2, v3, v4, v5, v6);
  sub_227D6A15C();
}

void sub_227E58D9C()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_227D6A164();
  sub_227D84C24(&dword_227D4F000, v0, v1, "BDSServiceProxy forceFetchRemoteChanges: connection unhealthy", v2, v3, v4, v5, v6);
  sub_227D6A12C();
}

void sub_227E58DC8()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_227D6A120();
  sub_227D74B98(&dword_227D4F000, v0, v1, "BDSServiceProxy forceFetchRemoteChanges Error %@", v2, v3, v4, v5, v6);
  sub_227D6A15C();
}

void sub_227E58E28()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_227D6A164();
  sub_227D84C24(&dword_227D4F000, v0, v1, "BDSServiceProxy cloudSyncDiagnosticDetachWithCompletionHandler: connection unhealthy", v2, v3, v4, v5, v6);
  sub_227D6A12C();
}

void sub_227E58E54()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_227D6A120();
  sub_227D74B98(&dword_227D4F000, v0, v1, "BDSServiceProxy cloudSyncDiagnosticDetachWithCompletionHandler Error %@", v2, v3, v4, v5, v6);
  sub_227D6A15C();
}

void sub_227E58EB4()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_227D6A164();
  sub_227D84C24(&dword_227D4F000, v0, v1, "BDSServiceProxy cloudSyncDiagnosticFindLocalIdDupesWithCompletionHandler: connection unhealthy", v2, v3, v4, v5, v6);
  sub_227D6A12C();
}

void sub_227E58EE0()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_227D6A120();
  sub_227D74B98(&dword_227D4F000, v0, v1, "BDSServiceProxy cloudSyncDiagnosticFindLocalIdDupesWithCompletionHandler Error %@", v2, v3, v4, v5, v6);
  sub_227D6A15C();
}

void sub_227E58F40()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_227D6A164();
  sub_227D84C24(&dword_227D4F000, v0, v1, "BDSServiceProxy cloudSyncDiagnosticInfoWithCompletionHandler: connection unhealthy", v2, v3, v4, v5, v6);
  sub_227D6A12C();
}

void sub_227E58F6C()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_227D6A120();
  sub_227D74B98(&dword_227D4F000, v0, v1, "BDSServiceProxy cloudSyncDiagnosticInfoWithCompletionHandler Error %@", v2, v3, v4, v5, v6);
  sub_227D6A15C();
}

void sub_227E58FCC()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_227D6A164();
  sub_227D84C24(&dword_227D4F000, v0, v1, "BDSServiceProxy updatePolitely: connection unhealthy", v2, v3, v4, v5, v6);
  sub_227D6A12C();
}

void sub_227E58FF8()
{
  uint64_t v0;
  os_log_t v1;

  sub_227D84CDC(*MEMORY[0x24BDAC8D0]);
  sub_227D84C34();
  sub_227D84C6C(&dword_227D4F000, v0, v1, "BDSServiceProxy updatePolitely:%i reason:%ld Error %@");
  sub_227D84CEC();
}

void sub_227E59058()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_227D6A164();
  sub_227D84C24(&dword_227D4F000, v0, v1, "BDSServiceProxy updateFamilyPolitely: connection unhealthy", v2, v3, v4, v5, v6);
  sub_227D6A12C();
}

void sub_227E59084()
{
  uint64_t v0;
  os_log_t v1;

  sub_227D84CDC(*MEMORY[0x24BDAC8D0]);
  sub_227D84C34();
  sub_227D84C6C(&dword_227D4F000, v0, v1, "BDSServiceProxy updateFamilyPolitely:%i reason:%ld Error %@");
  sub_227D84CEC();
}

void sub_227E590E4()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_227D6A164();
  sub_227D84C24(&dword_227D4F000, v0, v1, "BDSServiceProxy setItemHidden: connection unhealthy", v2, v3, v4, v5, v6);
  sub_227D6A12C();
}

void sub_227E59110(uint64_t a1, uint64_t a2, NSObject *a3)
{
  uint64_t v3;
  _BYTE v4[20];

  LODWORD(v3) = 67109634;
  HIDWORD(v3) = *(unsigned __int8 *)(a1 + 48);
  *(_WORD *)v4 = 2112;
  *(_QWORD *)&v4[2] = *(_QWORD *)(a1 + 32);
  *(_WORD *)&v4[10] = 2112;
  *(_QWORD *)&v4[12] = a2;
  sub_227D84C6C(&dword_227D4F000, a2, a3, "BDSServiceProxy setItemHidden:%i forStoreID:%@ Error %@", v3, *(_QWORD *)v4, *(_QWORD *)&v4[8], *(_DWORD *)&v4[16]);
  sub_227D84CEC();
}

void sub_227E59190()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_227D6A164();
  sub_227D84C24(&dword_227D4F000, v0, v1, "BDSServiceProxy hideItemsWithStoreIDs: connection unhealthy", v2, v3, v4, v5, v6);
  sub_227D6A12C();
}

void sub_227E591BC()
{
  uint64_t v0;
  os_log_t v1;

  sub_227D84D10(*MEMORY[0x24BDAC8D0]);
  sub_227D6A134();
  sub_227D84C58(&dword_227D4F000, v0, v1, "BDSServiceProxy hideItemsWithStoreIDs:%@ Error %@");
  sub_227D6A15C();
}

void sub_227E5921C()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_227D6A164();
  sub_227D84C24(&dword_227D4F000, v0, v1, "BDSServiceProxy resetPurchasedTokenForStoreIDs: connection unhealthy", v2, v3, v4, v5, v6);
  sub_227D6A12C();
}

void sub_227E59248()
{
  uint64_t v0;
  os_log_t v1;

  sub_227D84D10(*MEMORY[0x24BDAC8D0]);
  sub_227D6A134();
  sub_227D84C58(&dword_227D4F000, v0, v1, "BDSServiceProxy resetPurchasedTokenForStoreIDs:%@ Error %@");
  sub_227D6A15C();
}

void sub_227E592A8()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_227D6A164();
  sub_227D84C24(&dword_227D4F000, v0, v1, "BDSServiceProxy resetStaleJaliscoDatabaseWithCompletion: connection unhealthy", v2, v3, v4, v5, v6);
  sub_227D6A12C();
}

void sub_227E592D4()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_227D6A120();
  sub_227D74B98(&dword_227D4F000, v0, v1, "BDSServiceProxy resetStaleJaliscoDatabaseWithCompletion Error %@", v2, v3, v4, v5, v6);
  sub_227D6A15C();
}

void sub_227E59334()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_227D6A164();
  sub_227D84C24(&dword_227D4F000, v0, v1, "BDSServiceProxy fetchAllHiddenItemStoreIDsWithCompletion: connection unhealthy", v2, v3, v4, v5, v6);
  sub_227D6A12C();
}

void sub_227E59360()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_227D6A120();
  sub_227D74B98(&dword_227D4F000, v0, v1, "BDSServiceProxy fetchAllHiddenItemStoreIDsWithCompletion Error %@", v2, v3, v4, v5, v6);
  sub_227D6A15C();
}

void sub_227E593C0()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_227D6A164();
  sub_227D84C24(&dword_227D4F000, v0, v1, "BDSServiceProxy updatePolitelyAfterSignIn: connection unhealthy", v2, v3, v4, v5, v6);
  sub_227D6A12C();
}

void sub_227E593EC()
{
  uint64_t v0;
  os_log_t v1;

  sub_227D84CDC(*MEMORY[0x24BDAC8D0]);
  sub_227D84C34();
  sub_227D84C6C(&dword_227D4F000, v0, v1, "BDSServiceProxy updatePolitelyAfterSignIn:%i reason:%ld Error %@");
  sub_227D84CEC();
}

void sub_227E5944C()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_227D6A164();
  sub_227D84C24(&dword_227D4F000, v0, v1, "BDSServiceProxy updatePolitelyAfterSignOut: connection unhealthy", v2, v3, v4, v5, v6);
  sub_227D6A12C();
}

void sub_227E59478()
{
  uint64_t v0;
  os_log_t v1;

  sub_227D84CDC(*MEMORY[0x24BDAC8D0]);
  sub_227D84C34();
  sub_227D84C6C(&dword_227D4F000, v0, v1, "BDSServiceProxy updatePolitelyAfterSignOut:%i reason:%ld Error %@");
  sub_227D84CEC();
}

void sub_227E594D8()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_227D6A164();
  sub_227D84C24(&dword_227D4F000, v0, v1, "BDSServiceProxy updatePolitely:uiManager: connection unhealthy", v2, v3, v4, v5, v6);
  sub_227D6A12C();
}

void sub_227E59504()
{
  uint64_t v0;
  os_log_t v1;

  sub_227D84CDC(*MEMORY[0x24BDAC8D0]);
  sub_227D84C34();
  sub_227D84C6C(&dword_227D4F000, v0, v1, "BDSServiceProxy updatePolitely:uiManager:%i reason:%ld Error %@");
  sub_227D84CEC();
}

void sub_227E59564()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_227D6A164();
  sub_227D84C24(&dword_227D4F000, v0, v1, "BDSServiceProxy monitorServiceNotificationsWithCompletion: connection unhealthy", v2, v3, v4, v5, v6);
  sub_227D6A12C();
}

void sub_227E59590()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_227D6A164();
  sub_227D84C24(&dword_227D4F000, v0, v1, "BDSServiceProxy setBookWidgetInfo: connection unhealthy", v2, v3, v4, v5, v6);
  sub_227D6A12C();
}

void sub_227E595BC()
{
  uint64_t v0;
  os_log_t v1;

  sub_227D84D10(*MEMORY[0x24BDAC8D0]);
  sub_227D6A134();
  sub_227D84C58(&dword_227D4F000, v0, v1, "BDSServiceProxy setBookWidgetInfo:%@ Error %@");
  sub_227D6A15C();
}

void sub_227E5961C()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_227D6A164();
  sub_227D84C24(&dword_227D4F000, v0, v1, "BDSServiceProxy getBookWidgetDataWithLimit: connection unhealthy", v2, v3, v4, v5, v6);
  sub_227D6A12C();
}

void sub_227E59648()
{
  uint64_t v0;
  os_log_t v1;

  sub_227D84D3C(*MEMORY[0x24BDAC8D0]);
  sub_227D6A134();
  sub_227D84C58(&dword_227D4F000, v0, v1, "BDSServiceProxy getBookWidgetDataWithLimit:%ld Error %@");
  sub_227D6A15C();
}

void sub_227E596A8()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_227D6A164();
  sub_227D84C24(&dword_227D4F000, v0, v1, "BDSServiceProxy getBookWidgetInfoWithLimit: connection unhealthy", v2, v3, v4, v5, v6);
  sub_227D6A12C();
}

void sub_227E596D4()
{
  uint64_t v0;
  os_log_t v1;

  sub_227D84D3C(*MEMORY[0x24BDAC8D0]);
  sub_227D6A134();
  sub_227D84C58(&dword_227D4F000, v0, v1, "BDSServiceProxy getBookWidgetInfoWithLimit:%ld Error %@");
  sub_227D6A15C();
}

void sub_227E59734()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_227D6A164();
  sub_227D84C24(&dword_227D4F000, v0, v1, "BDSServiceProxy readingGoalsChangeBooksFinishedGoalTo: connection unhealthy", v2, v3, v4, v5, v6);
  sub_227D6A12C();
}

void sub_227E59760()
{
  uint64_t v0;
  os_log_t v1;

  sub_227D84D3C(*MEMORY[0x24BDAC8D0]);
  sub_227D6A134();
  sub_227D84C58(&dword_227D4F000, v0, v1, "BDSServiceProxy readingGoalsChangeBooksFinishedGoalTo:%ld Error %@");
  sub_227D6A15C();
}

void sub_227E597C0()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_227D6A164();
  sub_227D84C24(&dword_227D4F000, v0, v1, "BDSServiceProxy readingGoalsChangeDailyGoalTo: connection unhealthy", v2, v3, v4, v5, v6);
  sub_227D6A12C();
}

void sub_227E597EC()
{
  uint64_t v0;
  os_log_t v1;

  sub_227D84D3C(*MEMORY[0x24BDAC8D0]);
  sub_227D6A134();
  sub_227D84C58(&dword_227D4F000, v0, v1, "BDSServiceProxy readingGoalsChangeDailyGoalTo:%lf Error %@");
  sub_227D6A15C();
}

void sub_227E5984C()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_227D6A164();
  sub_227D84C24(&dword_227D4F000, v0, v1, "BDSServiceProxy readingGoalsClearDataWithCompletion: connection unhealthy", v2, v3, v4, v5, v6);
  sub_227D6A12C();
}

void sub_227E59878()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_227D6A120();
  sub_227D74B98(&dword_227D4F000, v0, v1, "BDSServiceProxy readingGoalsClearDataWithCompletion Error %@", v2, v3, v4, v5, v6);
  sub_227D6A15C();
}

void sub_227E598D8()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_227D6A164();
  sub_227D84C24(&dword_227D4F000, v0, v1, "BDSServiceProxy readingGoalsClearLocalCachedDataWithCompletion: connection unhealthy", v2, v3, v4, v5, v6);
  sub_227D6A12C();
}

void sub_227E59904()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_227D6A120();
  sub_227D74B98(&dword_227D4F000, v0, v1, "BDSServiceProxy readingGoalsClearLocalCachedDataWithCompletion Error %@", v2, v3, v4, v5, v6);
  sub_227D6A15C();
}

void sub_227E59964()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_227D6A164();
  sub_227D84C24(&dword_227D4F000, v0, v1, "BDSServiceProxy readingGoalsStateInfoWithCompletion: connection unhealthy", v2, v3, v4, v5, v6);
  sub_227D6A12C();
}

void sub_227E59990()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_227D6A120();
  sub_227D74B98(&dword_227D4F000, v0, v1, "BDSServiceProxy readingGoalsStateInfoWithCompletion Error %@", v2, v3, v4, v5, v6);
  sub_227D6A15C();
}

void sub_227E599F0()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_227D6A164();
  sub_227D84C24(&dword_227D4F000, v0, v1, "BDSServiceProxy readingHistoryClearDataWithCompletion: connection unhealthy", v2, v3, v4, v5, v6);
  sub_227D6A12C();
}

void sub_227E59A1C()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_227D6A120();
  sub_227D74B98(&dword_227D4F000, v0, v1, "BDSServiceProxy readingHistoryClearDataWithCompletion Error %@", v2, v3, v4, v5, v6);
  sub_227D6A15C();
}

void sub_227E59A7C()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_227D6A164();
  sub_227D84C24(&dword_227D4F000, v0, v1, "BDSServiceProxy readingHistoryClearDefaultsCachedDataWithCompletion: connection unhealthy", v2, v3, v4, v5, v6);
  sub_227D6A12C();
}

void sub_227E59AA8()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_227D6A120();
  sub_227D74B98(&dword_227D4F000, v0, v1, "BDSServiceProxy readingHistoryClearDefaultsCachedDataWithCompletion Error %@", v2, v3, v4, v5, v6);
  sub_227D6A15C();
}

void sub_227E59B08()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_227D6A164();
  sub_227D84C24(&dword_227D4F000, v0, v1, "BDSServiceProxy readingHistoryClearDate:withCompletion: connection unhealthy", v2, v3, v4, v5, v6);
  sub_227D6A12C();
}

void sub_227E59B34()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_227D6A120();
  sub_227D74B98(&dword_227D4F000, v0, v1, "BDSServiceProxy readingHistoryClearDate:withCompletion Error %@", v2, v3, v4, v5, v6);
  sub_227D6A15C();
}

void sub_227E59B94()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_227D6A164();
  sub_227D84C24(&dword_227D4F000, v0, v1, "BDSServiceProxy readingHistoryClearTodayWithCompletion: connection unhealthy", v2, v3, v4, v5, v6);
  sub_227D6A12C();
}

void sub_227E59BC0()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_227D6A120();
  sub_227D74B98(&dword_227D4F000, v0, v1, "BDSServiceProxy readingHistoryClearTodayWithCompletion Error %@", v2, v3, v4, v5, v6);
  sub_227D6A15C();
}

void sub_227E59C20()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_227D6A164();
  sub_227D84C24(&dword_227D4F000, v0, v1, "BDSServiceProxy readingHistoryHandleSyncFileChangeWithSyncVersionInfo: connection unhealthy", v2, v3, v4, v5, v6);
  sub_227D6A12C();
}

void sub_227E59C4C()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_227D6A120();
  sub_227D74B98(&dword_227D4F000, v0, v1, "BDSServiceProxy readingHistoryHandleSyncFileChangeWithSyncVersionInfo Error %{public}@", v2, v3, v4, v5, v6);
  sub_227D6A15C();
}

void sub_227E59CAC()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_227D6A164();
  sub_227D84C24(&dword_227D4F000, v0, v1, "BDSServiceProxy readingHistoryIncrementWithDate: connection unhealthy", v2, v3, v4, v5, v6);
  sub_227D6A12C();
}

void sub_227E59CD8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  os_log_t v4;
  int v5;
  uint64_t v6;
  __int16 v7;
  uint64_t v8;
  __int16 v9;
  uint64_t v10;

  sub_227D84D10(*MEMORY[0x24BDAC8D0]);
  v1 = *(_QWORD *)(v0 + 48);
  v5 = 138412802;
  v6 = v2;
  v7 = 2048;
  v8 = v1;
  v9 = 2112;
  v10 = v3;
  _os_log_error_impl(&dword_227D4F000, v4, OS_LOG_TYPE_ERROR, "BDSServiceProxy readingHistoryIncrementWithDate:%@ by:%ld Error %@", (uint8_t *)&v5, 0x20u);
  sub_227D84CEC();
}

void sub_227E59D68()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_227D6A164();
  sub_227D84C24(&dword_227D4F000, v0, v1, "BDSServiceProxy readingHistoryReadingHistoryStateInfoWithRangeStart: connection unhealthy", v2, v3, v4, v5, v6);
  sub_227D6A12C();
}

void sub_227E59D94()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_227D6A120();
  sub_227D74B98(&dword_227D4F000, v0, v1, "BDSServiceProxy readingHistoryReadingHistoryStateInfoWithRangeStart Error %@", v2, v3, v4, v5, v6);
  sub_227D6A15C();
}

void sub_227E59DF4()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_227D6A164();
  sub_227D84C24(&dword_227D4F000, v0, v1, "BDSServiceProxy readingHistoryServiceStatusInfoWithCompletion: connection unhealthy", v2, v3, v4, v5, v6);
  sub_227D6A12C();
}

void sub_227E59E20()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_227D6A120();
  sub_227D74B98(&dword_227D4F000, v0, v1, "BDSServiceProxy readingHistoryServiceStatusInfoWithCompletion Error %@", v2, v3, v4, v5, v6);
  sub_227D6A15C();
}

void sub_227E59E80()
{
  NSObject *v0;
  void *v1;
  objc_class *v2;
  const char *v3;
  void *v4;
  uint64_t v5;
  uint8_t v6[24];

  sub_227D6A17C();
  v2 = (objc_class *)sub_227D84D1C();
  NSStringFromClass(v2);
  objc_claimAutoreleasedReturnValue();
  v3 = (const char *)sub_227D84D30();
  NSStringFromSelector(v3);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  sub_227D84CB4();
  sub_227D6A170(&dword_227D4F000, v0, v5, "%@ %@ connection unhealthy", v6);

  sub_227D6A14C();
}

void sub_227E59F14()
{
  void *v0;
  objc_class *v1;
  const char *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint8_t v10;

  sub_227D84D00();
  v1 = (objc_class *)sub_227D84CF4();
  NSStringFromClass(v1);
  objc_claimAutoreleasedReturnValue();
  v2 = (const char *)sub_227D84D24();
  NSStringFromSelector(v2);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  sub_227D84C80();
  sub_227D84CA0(&dword_227D4F000, v4, v5, "%@ %@ Error %@", v6, v7, v8, v9, v10);

  sub_227D84CCC();
}

void sub_227E59FA0()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_227D6A164();
  sub_227D84C24(&dword_227D4F000, v0, v1, "BDSServiceProxy readingHistoryBackupWithName: connection unhealthy", v2, v3, v4, v5, v6);
  sub_227D6A12C();
}

void sub_227E59FCC()
{
  uint64_t v0;
  os_log_t v1;

  sub_227D84D10(*MEMORY[0x24BDAC8D0]);
  sub_227D6A134();
  sub_227D84C58(&dword_227D4F000, v0, v1, "BDSServiceProxy readingHistoryBackupWithName:%@ Error %@");
  sub_227D6A15C();
}

void sub_227E5A02C()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_227D6A164();
  sub_227D84C24(&dword_227D4F000, v0, v1, "BDSServiceProxy readingHistoryListBackupWithCompletion: connection unhealthy", v2, v3, v4, v5, v6);
  sub_227D6A12C();
}

void sub_227E5A058()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_227D6A120();
  sub_227D74B98(&dword_227D4F000, v0, v1, "BDSServiceProxy readingHistoryListBackupWithCompletion Error %@", v2, v3, v4, v5, v6);
  sub_227D6A15C();
}

void sub_227E5A0B8()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_227D6A164();
  sub_227D84C24(&dword_227D4F000, v0, v1, "BDSServiceProxy readingHistoryRestoreWithName: connection unhealthy", v2, v3, v4, v5, v6);
  sub_227D6A12C();
}

void sub_227E5A0E4()
{
  uint64_t v0;
  os_log_t v1;

  sub_227D84D10(*MEMORY[0x24BDAC8D0]);
  sub_227D6A134();
  sub_227D84C58(&dword_227D4F000, v0, v1, "BDSServiceProxy readingHistoryRestoreWithName:%@ Error %@");
  sub_227D6A15C();
}

void sub_227E5A144()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_227D6A164();
  sub_227D84C24(&dword_227D4F000, v0, v1, "BDSServiceProxy bookWidgetReadingHistoryStateInfoWithCompletion: connection unhealthy", v2, v3, v4, v5, v6);
  sub_227D6A12C();
}

void sub_227E5A170()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_227D6A120();
  sub_227D74B98(&dword_227D4F000, v0, v1, "BDSServiceProxy bookWidgetReadingHistoryStateInfoWithCompletion Error %@", v2, v3, v4, v5, v6);
  sub_227D6A15C();
}

void sub_227E5A1D0()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_227D6A164();
  sub_227D84C24(&dword_227D4F000, v0, v1, "BDSServiceProxy mergeMovedReadingHistoryDataWithCompletionHandler: connection unhealthy", v2, v3, v4, v5, v6);
  sub_227D6A12C();
}

void sub_227E5A1FC()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_227D6A120();
  sub_227D74B98(&dword_227D4F000, v0, v1, "BDSServiceProxy mergeMovedReadingHistoryDataWithCompletionHandler: Error %@", v2, v3, v4, v5, v6);
  sub_227D6A15C();
}

void sub_227E5A25C()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_227D6A164();
  sub_227D84C24(&dword_227D4F000, v0, v1, "BDSServiceProxy hasSaltChangedWithCompletion: connection unhealthy", v2, v3, v4, v5, v6);
  sub_227D6A12C();
}

void sub_227E5A288()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_227D6A120();
  sub_227D74B98(&dword_227D4F000, v0, v1, "BDSServiceProxy hasSaltChangedWithCompletion: Error %@", v2, v3, v4, v5, v6);
  sub_227D6A15C();
}

void sub_227E5A2E8()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_227D6A164();
  sub_227D84C24(&dword_227D4F000, v0, v1, "BCCollectionDetail configureFromCloudData wrong class passed in.", v2, v3, v4, v5, v6);
  sub_227D6A12C();
}

void sub_227E5A314(void *a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  objc_msgSend_collectionID(a1, a2, a3, a4, a5);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  sub_227D86308(&dword_227D4F000, v6, v7, "BCCollectionDetail %{public}@ No Record supplied", v8, v9, v10, v11, 2u);

  sub_227D6A188();
}

void sub_227E5A390(void *a1, const char *a2, NSObject *a3, uint64_t a4, uint64_t a5)
{
  void *v7;
  int v8;
  void *v9;
  __int16 v10;
  const char *v11;
  uint64_t v12;

  v12 = *MEMORY[0x24BDAC8D0];
  objc_msgSend_collectionID(a1, a2, (uint64_t)a3, a4, a5);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = 138543618;
  v9 = v7;
  v10 = 2114;
  v11 = a2;
  _os_log_error_impl(&dword_227D4F000, a3, OS_LOG_TYPE_ERROR, "BCCollectionDetail %{public}@ Mismatch collectionID from record collectionID %{public}@", (uint8_t *)&v8, 0x16u);

}

void sub_227E5A43C()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_227D6A164();
  sub_227D84C24(&dword_227D4F000, v0, v1, "BCMutableCollectionDetail init with no collectionID supplied", v2, v3, v4, v5, v6);
  sub_227D6A12C();
}

void sub_227E5A468()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_227D6A164();
  sub_227D84C24(&dword_227D4F000, v0, v1, "BCMutableCollectionDetail configureFromCloudData wrong class passed in.", v2, v3, v4, v5, v6);
  sub_227D6A12C();
}

void sub_227E5A494()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_227D6A164();
  sub_227D84C24(&dword_227D4F000, v0, v1, "BCMutableCollectionDetail init with no record supplied", v2, v3, v4, v5, v6);
  sub_227D6A12C();
}

void sub_227E5A4C0(void *a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  objc_msgSend_collectionID(a1, a2, a3, a4, a5);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  sub_227D86308(&dword_227D4F000, v6, v7, "BCMutableCollectionDetail requesting configured record with no underlying systemfields for collectionID:%@", v8, v9, v10, v11, 2u);

  sub_227D6A188();
}

void sub_227E5A53C(os_log_t log)
{
  uint8_t v1[16];

  *(_WORD *)v1 = 0;
  _os_log_error_impl(&dword_227D4F000, log, OS_LOG_TYPE_ERROR, "BCCloudKitFetchChangesTransaction - privateCloudDatabaseController is nil", v1, 2u);
}

void sub_227E5A57C(uint64_t a1, uint64_t a2, os_log_t log)
{
  uint64_t v3;
  int v4;
  uint64_t v5;
  __int16 v6;
  int v7;
  __int16 v8;
  uint64_t v9;
  uint64_t v10;

  v10 = *MEMORY[0x24BDAC8D0];
  v3 = *(_QWORD *)(a1 + 32);
  v4 = 138412802;
  v5 = v3;
  v6 = 1024;
  v7 = 0;
  v8 = 2112;
  v9 = a2;
  _os_log_error_impl(&dword_227D4F000, log, OS_LOG_TYPE_ERROR, "[BDSSaltVersionIdentifierManager] #saltVersionIdentifierChanged - %@ - 5b. dissociateCloudDataFromSyncWithCompletion %{BOOL}d ERROR:%@", (uint8_t *)&v4, 0x1Cu);
}

void sub_227E5A610(os_log_t log)
{
  uint8_t v1[16];

  *(_WORD *)v1 = 0;
  _os_log_error_impl(&dword_227D4F000, log, OS_LOG_TYPE_ERROR, "BDSReadingHistoryServiceClient bookWidgetReadingHistoryStateInfo Unable to estimate current state info, fallback to XPC call", v1, 2u);
}

void sub_227E5A650()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_227D6A120();
  sub_227D74B98(&dword_227D4F000, v0, v1, "Error unarchiving widget reading history data: %@", v2, v3, v4, v5, v6);
  sub_227D6A15C();
}

void sub_227E5A6B0()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_227D6A120();
  sub_227D74B98(&dword_227D4F000, v0, v1, "Error reading widget reading history data file: %@", v2, v3, v4, v5, v6);
  sub_227D6A15C();
}

void sub_227E5A710()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_227D6A120();
  sub_227D74B98(&dword_227D4F000, v0, v1, "Tried to remove widget reading history data file after failing to save it and failed with: %@", v2, v3, v4, v5, v6);
  sub_227D6A15C();
}

void sub_227E5A770()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_227D6A120();
  sub_227D74B98(&dword_227D4F000, v0, v1, "Failed to write widget reading history data: %@", v2, v3, v4, v5, v6);
  sub_227D6A15C();
}

void sub_227E5A7D0()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_227D6A120();
  sub_227D74B98(&dword_227D4F000, v0, v1, "Failed to create directory for saving widget reading history data: %@", v2, v3, v4, v5, v6);
  sub_227D6A15C();
}

void sub_227E5A830(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_227D74B98(&dword_227D4F000, MEMORY[0x24BDACB70], a3, "Failed to create rawHistoryToken from data error: %@", a5, a6, a7, a8, 2u);
}

void sub_227E5A8A0(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_227D74B98(&dword_227D4F000, a2, a3, "Error unarchiving persistent history token: %{public}@", a5, a6, a7, a8, 2u);
}

void sub_227E5A908(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_227D74B98(&dword_227D4F000, a2, a3, "_isServiceEnabled(%{public}@): TCC returned a NULL array!", a5, a6, a7, a8, 2u);
  sub_227D6A15C();
}

void sub_227E5A96C(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_227D74B98(&dword_227D4F000, a2, a3, "_isServiceDisabled(%{public}@): TCC returned a NULL array!", a5, a6, a7, a8, 2u);
  sub_227D6A15C();
}

void sub_227E5A9D0(uint64_t a1, char a2, os_log_t log)
{
  const __CFString *v3;
  int v4;
  uint64_t v5;
  __int16 v6;
  const __CFString *v7;
  uint64_t v8;

  v8 = *MEMORY[0x24BDAC8D0];
  v3 = CFSTR("YES");
  if ((a2 & 1) == 0)
    v3 = CFSTR("NO");
  v4 = 138543618;
  v5 = a1;
  v6 = 2114;
  v7 = v3;
  _os_log_error_impl(&dword_227D4F000, log, OS_LOG_TYPE_ERROR, "Failed to set %{public}@ to %{public}@.", (uint8_t *)&v4, 0x16u);
  sub_227D6A15C();
}

void sub_227E5AA68(uint64_t *a1, uint64_t a2, NSObject *a3)
{
  uint64_t v3;
  int v4;
  uint64_t v5;
  __int16 v6;
  uint64_t v7;
  uint64_t v8;

  v8 = *MEMORY[0x24BDAC8D0];
  v3 = *a1;
  v4 = 138412546;
  v5 = v3;
  v6 = 2112;
  v7 = a2;
  sub_227D6A170(&dword_227D4F000, a3, (uint64_t)a3, "Unable to create CKAsset local cache at %@ error=%@", (uint8_t *)&v4);
}

void sub_227E5AAE8(void *a1, const char *a2, NSObject *a3, uint64_t a4, uint64_t a5)
{
  void *v7;
  uint64_t v8;
  int v9;
  void *v10;
  __int16 v11;
  const char *v12;
  uint64_t v13;

  v13 = *MEMORY[0x24BDAC8D0];
  objc_msgSend_ckAssetStoreDirectory(a1, a2, (uint64_t)a3, a4, a5);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v9 = 138412546;
  v10 = v7;
  v11 = 2112;
  v12 = a2;
  sub_227D6A170(&dword_227D4F000, a3, v8, "Failed to create cache URL. directory: %@ assetID: %@", (uint8_t *)&v9);

}

void sub_227E5AB8C()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_227D6A164();
  sub_227D84C24(&dword_227D4F000, v0, v1, "BDSSecureEngagementData configureFromCloudData wrong class passed in.", v2, v3, v4, v5, v6);
  sub_227D6A12C();
}

void sub_227E5ABB8(void *a1, char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v6;
  int v7;
  void *v8;
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  objc_msgSend_startTimestampString(a1, a2, a3, a4, a5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = 138412290;
  v8 = v6;
  _os_log_error_impl(&dword_227D4F000, (os_log_t)a2, OS_LOG_TYPE_ERROR, "BDSSecureEngagementData %@ No Record supplied", (uint8_t *)&v7, 0xCu);

}

void sub_227E5AC4C(void *a1, const char *a2, NSObject *a3, uint64_t a4, uint64_t a5)
{
  void *v7;
  int v8;
  void *v9;
  __int16 v10;
  const char *v11;
  uint64_t v12;

  v12 = *MEMORY[0x24BDAC8D0];
  objc_msgSend_startTimestampString(a1, a2, (uint64_t)a3, a4, a5);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = 138412546;
  v9 = v7;
  v10 = 2112;
  v11 = a2;
  _os_log_error_impl(&dword_227D4F000, a3, OS_LOG_TYPE_ERROR, "BDSSecureEngagementData %@ Mismatch key from record key %@", (uint8_t *)&v8, 0x16u);

}

void sub_227E5ACF8()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_227D6A164();
  sub_227D84C24(&dword_227D4F000, v0, v1, "BDSMutableSecureEngagementData init with no start timestamp string supplied", v2, v3, v4, v5, v6);
  sub_227D6A12C();
}

void sub_227E5AD24()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_227D6A164();
  sub_227D84C24(&dword_227D4F000, v0, v1, "BDSMutableSecureEngagementData init with no record supplied", v2, v3, v4, v5, v6);
  sub_227D6A12C();
}

void sub_227E5AD50()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_227D6A164();
  sub_227D84C24(&dword_227D4F000, v0, v1, "BDSMutableSecureEngagementData init with empty data supplied", v2, v3, v4, v5, v6);
  sub_227D6A12C();
}

void sub_227E5AD7C()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_227D6A164();
  sub_227D84C24(&dword_227D4F000, v0, v1, "BCStoreItem configureFromCloudData wrong class passed in.", v2, v3, v4, v5, v6);
  sub_227D6A12C();
}

void sub_227E5ADA8(void *a1, char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v6;
  int v7;
  void *v8;
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  objc_msgSend_storeID(a1, a2, a3, a4, a5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = 138412290;
  v8 = v6;
  _os_log_error_impl(&dword_227D4F000, (os_log_t)a2, OS_LOG_TYPE_ERROR, "BCStoreItem %@ No Record supplied", (uint8_t *)&v7, 0xCu);

}

void sub_227E5AE3C(void *a1, const char *a2, NSObject *a3, uint64_t a4, uint64_t a5)
{
  void *v7;
  int v8;
  void *v9;
  __int16 v10;
  const char *v11;
  uint64_t v12;

  v12 = *MEMORY[0x24BDAC8D0];
  objc_msgSend_storeID(a1, a2, (uint64_t)a3, a4, a5);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = 138412546;
  v9 = v7;
  v10 = 2112;
  v11 = a2;
  _os_log_error_impl(&dword_227D4F000, a3, OS_LOG_TYPE_ERROR, "BCStoreItem %@ Mismatch storeID from record storeID %@", (uint8_t *)&v8, 0x16u);

}

void sub_227E5AEE8()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_227D6A164();
  sub_227D84C24(&dword_227D4F000, v0, v1, "BCMutableStoreItem init with no storeID supplied", v2, v3, v4, v5, v6);
  sub_227D6A12C();
}

void sub_227E5AF14()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_227D6A164();
  sub_227D84C24(&dword_227D4F000, v0, v1, "BCMutableStoreItem init with no record supplied", v2, v3, v4, v5, v6);
  sub_227D6A12C();
}

void sub_227E5AF40(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_227D74B98(&dword_227D4F000, a2, a3, "Error adding storeItem for storeID: %@", a5, a6, a7, a8, 2u);
  sub_227D6A15C();
}

void sub_227E5AFA8(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_227D74B98(&dword_227D4F000, a2, a3, "Error <BCCloudCollectionMemberManager setCollectionMember:completion:> {%@}", a5, a6, a7, a8, 2u);
  sub_227D6A15C();
}

void sub_227E5B00C(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_227D74B98(&dword_227D4F000, a2, a3, "Error <BCCloudCollectionMemberManager fetchCollectionMembersIncludingDeleted:completion:> {%@}", a5, a6, a7, a8, 2u);
  sub_227D6A15C();
}

void sub_227E5B070(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_227D74B98(&dword_227D4F000, a2, a3, "Error <BCCloudCollectionMemberManager fetchMaxSortOrderInCollectionID:> {%@}", a5, a6, a7, a8, 2u);
  sub_227D6A15C();
}

void sub_227E5B0D4()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_227D6A164();
  sub_227D84C24(&dword_227D4F000, v0, v1, "BCAssetReview configureFromCloudData wrong class passed in.", v2, v3, v4, v5, v6);
  sub_227D6A12C();
}

void sub_227E5B100(void *a1, char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v6;
  int v7;
  void *v8;
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  objc_msgSend_assetReviewID(a1, a2, a3, a4, a5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = 138412290;
  v8 = v6;
  _os_log_error_impl(&dword_227D4F000, (os_log_t)a2, OS_LOG_TYPE_ERROR, "BCAssetReview %@ No Record supplied", (uint8_t *)&v7, 0xCu);

}

void sub_227E5B194(void *a1, const char *a2, NSObject *a3, uint64_t a4, uint64_t a5)
{
  void *v7;
  int v8;
  void *v9;
  __int16 v10;
  const char *v11;
  uint64_t v12;

  v12 = *MEMORY[0x24BDAC8D0];
  objc_msgSend_assetReviewID(a1, a2, (uint64_t)a3, a4, a5);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = 138412546;
  v9 = v7;
  v10 = 2112;
  v11 = a2;
  _os_log_error_impl(&dword_227D4F000, a3, OS_LOG_TYPE_ERROR, "BCAssetReview %@ Mismatch assetReviewID from record assetReviewID %@", (uint8_t *)&v8, 0x16u);

}

void sub_227E5B240()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_227D6A164();
  sub_227D84C24(&dword_227D4F000, v0, v1, "BCMutableAssetReview init with no assetReviewID supplied", v2, v3, v4, v5, v6);
  sub_227D6A12C();
}

void sub_227E5B26C()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_227D6A164();
  sub_227D84C24(&dword_227D4F000, v0, v1, "BCMutableAssetReview init with no record supplied", v2, v3, v4, v5, v6);
  sub_227D6A12C();
}

void sub_227E5B298(const void **a1, uint64_t a2, NSObject *a3)
{
  void *v5;
  int v6;
  void *v7;
  __int16 v8;
  uint64_t v9;
  uint64_t v10;

  v10 = *MEMORY[0x24BDAC8D0];
  v5 = _Block_copy(*a1);
  v6 = 138412546;
  v7 = v5;
  v8 = 2112;
  v9 = a2;
  _os_log_debug_impl(&dword_227D4F000, a3, OS_LOG_TYPE_DEBUG, "[BCCloudKitTransactionManager] registering completion %@ for syncToCKTransaction %@", (uint8_t *)&v6, 0x16u);

}

void sub_227E5B344(uint64_t a1, NSObject *a2)
{
  int v2;
  uint64_t v3;
  uint64_t v4;

  v4 = *MEMORY[0x24BDAC8D0];
  v2 = 138412290;
  v3 = a1;
  _os_log_debug_impl(&dword_227D4F000, a2, OS_LOG_TYPE_DEBUG, "[BCCloudKitTransactionManager] Creating syncToCKTransaction %@", (uint8_t *)&v2, 0xCu);
}

void sub_227E5B3B8(void *a1, char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  os_log_t v12;
  os_log_type_t v13;
  const char *v14;
  uint8_t *v15;

  objc_msgSend_establishedSalt(a1, a2, a3, a4, a5);
  objc_msgSend_ckSystemFields(a2, v6, v7, v8, v9);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  sub_227D6A194();
  _os_log_error_impl(v11, v12, v13, v14, v15, 0x18u);

}

void sub_227E5B47C(void *a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v5;
  os_log_t v6;
  os_log_type_t v7;
  const char *v8;
  uint8_t *v9;
  void *v10;

  objc_msgSend_identifier(a1, a2, a3, a4, a5);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  sub_227D6A194();
  _os_log_error_impl(v5, v6, v7, v8, v9, 0xCu);

}

void sub_227E5B508(void *a1)
{
  objc_class *v2;
  void *v3;
  const char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  os_log_t v9;
  os_log_type_t v10;
  const char *v11;
  uint8_t *v12;
  void *v13;

  v2 = (objc_class *)objc_opt_class();
  NSStringFromClass(v2);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_identifier(a1, v4, v5, v6, v7);
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  sub_227D6A194();
  _os_log_error_impl(v8, v9, v10, v11, v12, 0x20u);

}

void sub_227E5B5D0()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_227D6A164();
  sub_227D84C24(&dword_227D4F000, v0, v1, "BCCloudData recordType called", v2, v3, v4, v5, v6);
  sub_227D6A12C();
}

void sub_227E5B5FC()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_227D6A164();
  sub_227D84C24(&dword_227D4F000, v0, v1, "BCCloudData identifier called", v2, v3, v4, v5, v6);
  sub_227D6A12C();
}

void sub_227E5B628()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_227D6A164();
  sub_227D84C24(&dword_227D4F000, v0, v1, "BCCloudData zoneName called", v2, v3, v4, v5, v6);
  sub_227D6A12C();
}

void sub_227E5B654()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_227D6A164();
  sub_227D84C24(&dword_227D4F000, v0, v1, "BCCloudData +propertyIDKey called", v2, v3, v4, v5, v6);
  sub_227D6A12C();
}

void sub_227E5B680()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_227D6A164();
  sub_227D84C24(&dword_227D4F000, v0, v1, "BCMutableCloudData init with no privacy delegate!", v2, v3, v4, v5, v6);
  sub_227D6A12C();
}

void sub_227E5B6AC()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_227D6A164();
  sub_227D84C24(&dword_227D4F000, v0, v1, "BCMutableCloudData init with no record supplied", v2, v3, v4, v5, v6);
  sub_227D6A12C();
}

void sub_227E5B6D8()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_227D6A164();
  sub_227D84C24(&dword_227D4F000, v0, v1, "BCMutableCloudData ckSystemFields called", v2, v3, v4, v5, v6);
  sub_227D6A12C();
}

void sub_227E5B704()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_227D6A164();
  sub_227D84C24(&dword_227D4F000, v0, v1, "BCMutableCloudData recordType called", v2, v3, v4, v5, v6);
  sub_227D6A12C();
}

void sub_227E5B730()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_227D6A164();
  sub_227D84C24(&dword_227D4F000, v0, v1, "BCMutableCloudData identifier called", v2, v3, v4, v5, v6);
  sub_227D6A12C();
}

void sub_227E5B75C()
{
  __assert_rtn("-[BCProtoAnnotation writeTo:]", "BCProtoAnnotation.m", 613, "nil != self->_creatorIdentifier");
}

void sub_227E5B784()
{
  __assert_rtn("-[BCProtoAnnotation writeTo:]", "BCProtoAnnotation.m", 678, "nil != self->_uuid");
}

void sub_227E5B7AC()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_227D6A164();
  sub_227D84C24(&dword_227D4F000, v0, v1, "BCAssetAnnotations configureFromCloudData wrong class passed in.", v2, v3, v4, v5, v6);
  sub_227D6A12C();
}

void sub_227E5B7D8(void *a1, char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v6;
  uint64_t v7;
  uint8_t v8[24];
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  objc_msgSend_assetID(a1, a2, a3, a4, a5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  sub_227D6A120();
  sub_227D990B0(&dword_227D4F000, a2, v7, "BCAssetAnnotations No readable annotations in serialized local data for assetID %{public}@", v8);

  sub_227D6A188();
}

void sub_227E5B858(void *a1, const char *a2, NSObject *a3, uint64_t a4, uint64_t a5)
{
  void *v7;
  uint8_t v8[12];
  __int16 v9;
  const char *v10;
  uint64_t v11;

  v11 = *MEMORY[0x24BDAC8D0];
  objc_msgSend_assetID(a1, a2, (uint64_t)a3, a4, a5);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  sub_227D6A120();
  v9 = 2114;
  v10 = a2;
  _os_log_error_impl(&dword_227D4F000, a3, OS_LOG_TYPE_ERROR, "BCAssetAnnotations %{public}@ Mismatch assetID from record assetID %{public}@", v8, 0x16u);

}

void sub_227E5B900(void *a1, char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v6;
  uint64_t v7;
  uint8_t v8[24];
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  objc_msgSend_assetID(a1, a2, a3, a4, a5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  sub_227D6A120();
  sub_227D990B0(&dword_227D4F000, a2, v7, "BCAssetAnnotations No readable annoatations in incoming data for assetID %{public}@", v8);

  sub_227D6A188();
}

void sub_227E5B980(void *a1, char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v6;
  uint64_t v7;
  uint8_t v8[24];
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  objc_msgSend_assetID(a1, a2, a3, a4, a5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  sub_227D6A120();
  sub_227D990B0(&dword_227D4F000, a2, v7, "BCAssetAnnotations %{public}@ No Record supplied", v8);

  sub_227D6A188();
}

void sub_227E5BA00(void *a1, char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v6;
  uint64_t v7;
  uint8_t v8[24];
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  objc_msgSend_assetID(a1, a2, a3, a4, a5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  sub_227D6A120();
  sub_227D990B0(&dword_227D4F000, a2, v7, "BCAssetAnnotations No readable annotations in serialized cloud data for assetID %{public}@", v8);

  sub_227D6A188();
}

void sub_227E5BA80()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_227D6A164();
  sub_227D84C24(&dword_227D4F000, v0, v1, "BCMutableAssetAnnotations init with no assetID supplied", v2, v3, v4, v5, v6);
  sub_227D6A12C();
}

void sub_227E5BAAC()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_227D6A164();
  sub_227D84C24(&dword_227D4F000, v0, v1, "BCAssetAnnotations initWithCloudData wrong class passed in.", v2, v3, v4, v5, v6);
  sub_227D6A12C();
}

void sub_227E5BAD8()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_227D6A164();
  sub_227D84C24(&dword_227D4F000, v0, v1, "BCAssetAnnotations initWithCloudData invalid assetID.", v2, v3, v4, v5, v6);
  sub_227D6A12C();
}

void sub_227E5BB04()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_227D6A164();
  sub_227D84C24(&dword_227D4F000, v0, v1, "BCMutableAssetAnnotations init with no record supplied", v2, v3, v4, v5, v6);
  sub_227D6A12C();
}

void sub_227E5BB30()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_227D6A164();
  sub_227D84C24(&dword_227D4F000, v0, v1, "BCMutableAssetAnnotations init record has invalid assetID", v2, v3, v4, v5, v6);
  sub_227D6A12C();
}

void sub_227E5BB5C(uint64_t *a1, NSObject *a2, uint64_t a3)
{
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;

  v6 = *MEMORY[0x24BDAC8D0];
  v3 = *a1;
  v4 = 138412290;
  v5 = v3;
  sub_227D990B0(&dword_227D4F000, a2, a3, "No readable annotations for asset %@", (uint8_t *)&v4);
  sub_227D6A15C();
}

void sub_227E5BBC8()
{
  NSObject *v0;
  uint64_t v1;
  uint8_t v2[24];
  uint64_t v3;

  v3 = *MEMORY[0x24BDAC8D0];
  sub_227D6A120();
  sub_227D990B0(&dword_227D4F000, v0, v1, "Unable to write annotations protobuf to URL %@", v2);
  sub_227D6A15C();
}

void sub_227E5BC2C()
{
  NSObject *v0;
  uint64_t v1;
  uint8_t v2[24];
  uint64_t v3;

  v3 = *MEMORY[0x24BDAC8D0];
  sub_227D6A120();
  sub_227D990B0(&dword_227D4F000, v0, v1, "proto annotation found missing required properties %@", v2);
  sub_227D6A15C();
}

void sub_227E5BC90()
{
  NSObject *v0;
  uint64_t v1;
  uint8_t v2[24];
  uint64_t v3;

  v3 = *MEMORY[0x24BDAC8D0];
  sub_227D6A120();
  sub_227D990B0(&dword_227D4F000, v0, v1, "trying to incorrectly sync global annotation in BCAssetAnnotations %@", v2);
  sub_227D6A15C();
}

void sub_227E5BCF4(os_log_t log)
{
  uint8_t v1[16];

  *(_WORD *)v1 = 0;
  _os_log_error_impl(&dword_227D4F000, log, OS_LOG_TYPE_ERROR, "Trying to remove without IDs - GlobalMetadata", v1, 2u);
}

void sub_227E5BD34(uint64_t a1, NSObject *a2)
{
  int v2;
  uint64_t v3;
  uint64_t v4;

  v4 = *MEMORY[0x24BDAC8D0];
  v2 = 138543362;
  v3 = a1;
  _os_log_error_impl(&dword_227D4F000, a2, OS_LOG_TYPE_ERROR, "monitorServiceNotifications: Got an error: %{public}@", (uint8_t *)&v2, 0xCu);
}

void sub_227E5BDA8(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_227D74B98(&dword_227D4F000, a2, a3, "BDSServiceProxy depleted error attempts: %{public}@", a5, a6, a7, a8, 2u);
  sub_227D6A15C();
}

void sub_227E5BE0C(uint64_t a1, uint64_t a2, os_log_t log)
{
  int v3;
  uint64_t v4;
  __int16 v5;
  uint64_t v6;
  uint64_t v7;

  v7 = *MEMORY[0x24BDAC8D0];
  v3 = 138543618;
  v4 = a1;
  v5 = 2048;
  v6 = a2;
  _os_log_error_impl(&dword_227D4F000, log, OS_LOG_TYPE_ERROR, "BDSServiceProxy returned error: %{public}@, attemptsRemaining: %ld", (uint8_t *)&v3, 0x16u);
  sub_227D6A15C();
}

void sub_227E5BE8C(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_227D74B98(&dword_227D4F000, a2, a3, "BDSServiceProxy returned fatal error: %{public}@", a5, a6, a7, a8, 2u);
  sub_227D6A15C();
}

void sub_227E5BEF0()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_227D6A120();
  sub_227D74B98(&dword_227D4F000, v0, v1, "BCCloudKitDatabaseController - Error fetching zone changes: %@", v2, v3, v4, v5, v6);
  sub_227D6A15C();
}

void sub_227E5BF50(void *a1, char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v6;
  uint8_t v7[24];
  uint64_t v8;

  v8 = *MEMORY[0x24BDAC8D0];
  objc_msgSend_containerIdentifier(a1, a2, a3, a4, a5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  sub_227D6A120();
  _os_log_error_impl(&dword_227D4F000, (os_log_t)a2, OS_LOG_TYPE_ERROR, "BCCloudKitDatabaseController - Detach occurred during fetch, container: %@", v7, 0xCu);

  sub_227D6A188();
}

void sub_227E5BFD8()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_227D6A120();
  sub_227D74B98(&dword_227D4F000, v0, v1, "did not call completion after 10s in %{public}@", v2, v3, v4, v5, v6);
  sub_227D6A15C();
}

void sub_227E5C038(void *a1, const char *a2, NSObject *a3, uint64_t a4, uint64_t a5)
{
  void *v7;
  uint64_t v8;
  uint8_t v9[12];
  __int16 v10;
  const char *v11;
  uint64_t v12;

  v12 = *MEMORY[0x24BDAC8D0];
  objc_msgSend_containerIdentifier(a1, a2, (uint64_t)a3, a4, a5);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  sub_227D6A120();
  v10 = 2112;
  v11 = a2;
  sub_227D6A170(&dword_227D4F000, a3, v8, "BCCloudKitDatabaseController (%{public}@) - Error fetching database changes: %@", v9);

  sub_227D6A14C();
}

void sub_227E5C0CC(void *a1, char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v6;
  const __CFString *v7;
  int v8;
  const __CFString *v9;
  uint64_t v10;

  v10 = *MEMORY[0x24BDAC8D0];
  v6 = objc_msgSend_attachedToContainer(a1, a2, a3, a4, a5);
  v7 = CFSTR("NO");
  if (v6)
    v7 = CFSTR("YES");
  v8 = 138412290;
  v9 = v7;
  _os_log_debug_impl(&dword_227D4F000, (os_log_t)a2, OS_LOG_TYPE_DEBUG, "BCCloudKitDatabaseController - fetchRecordForRecordID attached: %@", (uint8_t *)&v8, 0xCu);
  sub_227D6A188();
}

void sub_227E5C164()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_227D6A120();
  sub_227D74B98(&dword_227D4F000, v0, v1, "BCCloudKitDatabaseController - Error fetching user recordID: %{public}@", v2, v3, v4, v5, v6);
  sub_227D6A15C();
}

void sub_227E5C1C4()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_227D6A120();
  sub_227D74B98(&dword_227D4F000, v0, v1, "BCCloudKitDatabaseController - requesting salted ID for %@ without salt!", v2, v3, v4, v5, v6);
  sub_227D6A15C();
}

void sub_227E5C224()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_227D6A120();
  sub_227D74B98(&dword_227D4F000, v0, v1, "BCCloudDatabaseController: unable to generate record name for %@", v2, v3, v4, v5, v6);
  sub_227D6A15C();
}

void sub_227E5C284(uint64_t a1, void *a2, uint8_t *buf, os_log_t log)
{
  *(_DWORD *)buf = 138412546;
  *(_QWORD *)(buf + 4) = a1;
  *((_WORD *)buf + 6) = 2112;
  *(_QWORD *)(buf + 14) = a2;
  _os_log_debug_impl(&dword_227D4F000, log, OS_LOG_TYPE_DEBUG, "BCCloudKitDatabaseController modifySubscriptionsOperation: %@, id: %@", buf, 0x16u);

}

void sub_227E5C2E8()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_227D6A120();
  sub_227D74B98(&dword_227D4F000, v0, v1, "CKFetchDatabaseChangesOperation failed: %{public}@", v2, v3, v4, v5, v6);
  sub_227D6A15C();
}

void sub_227E5C348()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_227D6A120();
  sub_227D74B98(&dword_227D4F000, v0, v1, "CKFetchRecordZonesOperation failed: %{public}@", v2, v3, v4, v5, v6);
  sub_227D6A15C();
}

void sub_227E5C3A8()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_227D6A120();
  sub_227D74B98(&dword_227D4F000, v0, v1, "CKFetchRecordZonesOperation failed. Account Temporarily Unavailable: %{public}@", v2, v3, v4, v5, v6);
  sub_227D6A15C();
}

void sub_227E5C408()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_227D6A120();
  sub_227D74B98(&dword_227D4F000, v0, v1, "BCCloudKitDatabaseController - Create salt: unable to save salt record %{public}@", v2, v3, v4, v5, v6);
  sub_227D6A15C();
}

void sub_227E5C468()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_227D6A120();
  sub_227D74B98(&dword_227D4F000, v0, v1, "BCCloudKitDatabaseController - Create salt: unable to get record salt %{public}@", v2, v3, v4, v5, v6);
  sub_227D6A15C();
}

void sub_227E5C4C8()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_227D6A120();
  sub_227D74B98(&dword_227D4F000, v0, v1, "BCCloudKitDatabaseController - Create salt: unable to save record salt %{public}@", v2, v3, v4, v5, v6);
  sub_227D6A15C();
}

void sub_227E5C528()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_227D6A120();
  sub_227D74B98(&dword_227D4F000, v0, v1, "BCCloudKitDatabaseController - CKFetchRecordZoneChangesOperation NOT retrying fetch for error: %@", v2, v3, v4, v5, v6);
  sub_227D6A15C();
}

void sub_227E5C588()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_227D6A120();
  sub_227D74B98(&dword_227D4F000, v0, v1, "Error decoding BCCloudKitDatabaseController from data.  Error=%{public}@", v2, v3, v4, v5, v6);
  sub_227D6A15C();
}

void sub_227E5C5E8(uint64_t a1, uint64_t a2, NSObject *a3)
{
  _BYTE v3[24];

  *(_DWORD *)v3 = 138543618;
  *(_QWORD *)&v3[4] = *(_QWORD *)(a1 + 32);
  *(_WORD *)&v3[12] = 2114;
  *(_QWORD *)&v3[14] = a2;
  sub_227D84C58(&dword_227D4F000, a2, a3, "Error deleting zones (%{public}@): (%{public}@)", *(_QWORD *)v3, *(_QWORD *)&v3[8], *(_QWORD *)&v3[16]);
  sub_227D6A15C();
}

void sub_227E5C65C(void *a1, const char *a2, NSObject *a3, uint64_t a4, uint64_t a5)
{
  void *v6;
  uint64_t v7;
  uint8_t v8[24];
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  objc_msgSend_containerIdentifier(a1, a2, (uint64_t)a3, a4, a5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  sub_227DA9BB0();
  sub_227D6A170(&dword_227D4F000, a3, v7, "BCCloudKitDatabaseController (%{public}@) - zonesUnreadableDueToMissingD2DEncryptionIdentity: %{public}@", v8);

  sub_227D6A14C();
}

void sub_227E5C6E4(void *a1, const char *a2, NSObject *a3, uint64_t a4, uint64_t a5)
{
  void *v6;
  uint64_t v7;
  uint8_t v8[24];
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  objc_msgSend_containerIdentifier(a1, a2, (uint64_t)a3, a4, a5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  sub_227DA9BB0();
  sub_227D6A170(&dword_227D4F000, a3, v7, "BCCloudKitDatabaseController (%{public}@) - zonesTemporarilyUnreadableWithError: %{public}@", v8);

  sub_227D6A14C();
}

void sub_227E5C76C()
{
  uint64_t v0;
  os_log_t v1;

  sub_227DA9B98();
  sub_227D84C58(&dword_227D4F000, v0, v1, "BCCloudKitDatabaseController - Invalid parameter combination observer=%p recordType=%{public}@");
  sub_227D6A15C();
}

void sub_227E5C7CC()
{
  uint64_t v0;
  os_log_t v1;

  sub_227DA9B80();
  sub_227D84C58(&dword_227D4F000, v0, v1, "BCCloudKitDatabaseController - Attempt to remove observer %p that is not observing recordType %{public}@.");
  sub_227D6A15C();
}

void sub_227E5C834()
{
  uint64_t v0;
  os_log_t v1;

  sub_227DA9B80();
  sub_227D84C58(&dword_227D4F000, v0, v1, "BCCloudKitDatabaseController - Attempt to remove observer %p that is not observing recordType %{public}@.");
  sub_227D6A15C();
}

void sub_227E5C89C(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_227D74B98(&dword_227D4F000, a1, a3, "BCCloudKitDatabaseController - Invalid observer=%p", a5, a6, a7, a8, 0);
  sub_227D6A15C();
}

void sub_227E5C904()
{
  uint64_t v0;
  os_log_t v1;

  sub_227DA9B80();
  sub_227D84C58(&dword_227D4F000, v0, v1, "BCCloudKitDatabaseController - Invalid parameter combination BCCloudKitDatabaseZoneObserver observer=%p recordType=%{public}@");
  sub_227D6A15C();
}

void sub_227E5C96C()
{
  uint64_t v0;
  os_log_t v1;

  sub_227DA9B98();
  sub_227D84C58(&dword_227D4F000, v0, v1, "BCCloudKitDatabaseController - Invalid parameter combination tokenStore=%p recordZoneID=%{public}@");
  sub_227D6A15C();
}

void sub_227E5C9CC(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_227D74B98(&dword_227D4F000, a2, a3, "BCCloudKitDatabaseController - Registered multiple stores for record zone %{public}@", a5, a6, a7, a8, 2u);
  sub_227D6A15C();
}

void sub_227E5CA34(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_227D84C24(&dword_227D4F000, a1, a3, "BCCloudKitDatabaseController - Trying to remove nil server change token store", a5, a6, a7, a8, 0);
}

void sub_227E5CA68(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_227D84C24(&dword_227D4F000, a1, a3, "BCCloudKitDatabaseController - Did not find tokenStore to remove", a5, a6, a7, a8, 0);
}

void sub_227E5CA9C()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_227D6A120();
  sub_227D74B98(&dword_227D4F000, v0, v1, "Error unarchiving currentWidgetData: %@", v2, v3, v4, v5, v6);
  sub_227D6A15C();
}

void sub_227E5CAFC()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_227D6A120();
  sub_227D74B98(&dword_227D4F000, v0, v1, "Error reading widget data file: %@", v2, v3, v4, v5, v6);
  sub_227D6A15C();
}

void sub_227E5CB5C()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_227D6A120();
  sub_227D74B98(&dword_227D4F000, v0, v1, "Tried to remove current widget data file after failing to update it and failed with: %@", v2, v3, v4, v5, v6);
  sub_227D6A15C();
}

void sub_227E5CBBC()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_227D6A120();
  sub_227D74B98(&dword_227D4F000, v0, v1, "Failed to write out current widget data: %@", v2, v3, v4, v5, v6);
  sub_227D6A15C();
}

void sub_227E5CC1C()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_227D6A120();
  sub_227D74B98(&dword_227D4F000, v0, v1, "Failed to create directory for saving widget data: %@", v2, v3, v4, v5, v6);
  sub_227D6A15C();
}

void sub_227E5CC7C(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_227D74B98(&dword_227D4F000, a2, a3, "#dissociateCloudData Change Token Controller error: %@", a5, a6, a7, a8, 2u);
}

void sub_227E5CCE4()
{
  void *v0;
  uint64_t v1;
  const char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  const char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  sub_227D6A17C();
  objc_msgSend_zoneName(*(void **)(v1 + 32), v2, v3, v4, v5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_count(v0, v7, v8, v9, v10);
  sub_227DADBC0(&dword_227D4F000, v11, v12, "[BCCloudChangeTokenController] #saltVersionIdentifierChanged - %@ we should never have more than 1 record. We have %lu@) records.", v13, v14, v15, v16, 2u);

  sub_227D6A14C();
}

void sub_227E5CD7C()
{
  uint64_t v0;
  const char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  sub_227D6A17C();
  objc_msgSend_zoneName(*(void **)(v0 + 32), v1, v2, v3, v4);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  sub_227DADBC0(&dword_227D4F000, v6, v7, "<%@ BCCloudChangeTokenController - No change yet we tried updating %@", v8, v9, v10, v11, 2u);

  sub_227D6A14C();
}

void sub_227E5CE10()
{
  uint64_t v0;
  const char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint8_t v12;

  sub_227D6A17C();
  objc_msgSend_zoneName(*(void **)(v0 + 40), v1, v2, v3, v4);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  sub_227DA9BB0();
  sub_227DADBC0(&dword_227D4F000, v6, v7, "BCCloudChangeTokenController - Error deleting cloud tokens: %@ with server change token: %{public}@", v8, v9, v10, v11, v12);

  sub_227D6A14C();
}

void sub_227E5CE90()
{
  uint64_t v0;
  const char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint8_t v12;

  sub_227D6A17C();
  objc_msgSend_zoneName(*(void **)(v0 + 32), v1, v2, v3, v4);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  sub_227DA9BB0();
  sub_227DADBC0(&dword_227D4F000, v6, v7, "BCCloudChangeTokenController - #recordChange Error saving MOC zone: %@ with server change token: %{public}@", v8, v9, v10, v11, v12);

  sub_227D6A14C();
}

void sub_227E5CF10(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_227D74B98(&dword_227D4F000, a2, a3, "Error unarchiving server change token: %{public}@", a5, a6, a7, a8, 2u);
}

void sub_227E5CF78()
{
  uint64_t v0;
  const char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint8_t v12;

  sub_227D6A17C();
  objc_msgSend_zoneName(*(void **)(v0 + 40), v1, v2, v3, v4);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  sub_227DA9BB0();
  sub_227DADBC0(&dword_227D4F000, v6, v7, "BCCloudChangeTokenController - #recordChange Error fetching from MOC zone: %@ with server change token: %{public}@", v8, v9, v10, v11, v12);

  sub_227D6A14C();
}

void sub_227E5CFF8()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_227D6A164();
  sub_227D84C24(&dword_227D4F000, v0, v1, "BCSecureUserDatum configureFromCloudData wrong class passed in.", v2, v3, v4, v5, v6);
  sub_227D6A12C();
}

void sub_227E5D024(void *a1, char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v6;
  int v7;
  void *v8;
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  objc_msgSend_key(a1, a2, a3, a4, a5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = 138412290;
  v8 = v6;
  _os_log_error_impl(&dword_227D4F000, (os_log_t)a2, OS_LOG_TYPE_ERROR, "BCSecureUserDatum %@ No Record supplied", (uint8_t *)&v7, 0xCu);

}

void sub_227E5D0B8(void *a1, const char *a2, NSObject *a3, uint64_t a4, uint64_t a5)
{
  void *v7;
  int v8;
  void *v9;
  __int16 v10;
  const char *v11;
  uint64_t v12;

  v12 = *MEMORY[0x24BDAC8D0];
  objc_msgSend_key(a1, a2, (uint64_t)a3, a4, a5);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = 138412546;
  v9 = v7;
  v10 = 2112;
  v11 = a2;
  _os_log_error_impl(&dword_227D4F000, a3, OS_LOG_TYPE_ERROR, "BCSecureUserDatum %@ Mismatch key from record key %@", (uint8_t *)&v8, 0x16u);

}

void sub_227E5D164()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_227D6A164();
  sub_227D84C24(&dword_227D4F000, v0, v1, "BCMutableSecureUserDatum init with no key supplied", v2, v3, v4, v5, v6);
  sub_227D6A12C();
}

void sub_227E5D190()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_227D6A164();
  sub_227D84C24(&dword_227D4F000, v0, v1, "BCMutableSecureUserDatum init with no record supplied", v2, v3, v4, v5, v6);
  sub_227D6A12C();
}

void sub_227E5D1BC(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_227D84C24(&dword_227D4F000, a1, a3, "We can't have handled more records than we attempted to sync", a5, a6, a7, a8, 0);
}

void sub_227E5D1F0()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_227D6A120();
  sub_227D74B98(&dword_227D4F000, v0, v1, "Error modifying records: error=%{public}@", v2, v3, v4, v5, v6);
  sub_227D6A15C();
}

void sub_227E5D250(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_227D84C24(&dword_227D4F000, a1, a3, "Error saving record, but we don't have a delegate to inform", a5, a6, a7, a8, 0);
}

void sub_227E5D284()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_227D6A120();
  sub_227D74B98(&dword_227D4F000, v0, v1, "Error fetching records with assets on conflict: error=%{public}@", v2, v3, v4, v5, v6);
  sub_227D6A15C();
}

void sub_227E5D2E4()
{
  NSObject *v0;
  uint64_t v1;
  uint8_t v2[24];
  uint64_t v3;

  v3 = *MEMORY[0x24BDAC8D0];
  sub_227D6A120();
  sub_227D990B0(&dword_227D4F000, v0, v1, "BCCloudKitController - Error connecting user to database error=%{public}@", v2);
  sub_227D6A15C();
}

void sub_227E5D348()
{
  NSObject *v0;
  uint64_t v1;
  uint8_t v2[24];
  uint64_t v3;

  v3 = *MEMORY[0x24BDAC8D0];
  sub_227D6A120();
  sub_227D990B0(&dword_227D4F000, v0, v1, "_coalescedAttachment did not call completion after 10s in %{public}@", v2);
  sub_227D6A15C();
}

void sub_227E5D3AC()
{
  NSObject *v0;
  uint64_t v1;
  uint8_t v2[24];
  uint64_t v3;

  v3 = *MEMORY[0x24BDAC8D0];
  sub_227D6A120();
  sub_227D990B0(&dword_227D4F000, v0, v1, "did not call _coalescedChangeAttachment completion after 45 in %{public}@", v2);
  sub_227D6A15C();
}

void sub_227E5D410(uint64_t a1, char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v6;
  const char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint8_t v13[24];
  uint64_t v14;

  v14 = *MEMORY[0x24BDAC8D0];
  objc_msgSend_configuration(*(void **)(a1 + 32), a2, a3, a4, a5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_containerIdentifier(v6, v7, v8, v9, v10);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  sub_227D6A120();
  sub_227D990B0(&dword_227D4F000, a2, v12, "BCCloudKitController (%{public}@) - Flush Pending Update Attachment Callbacks: Unexpected null accessQueue", v13);

  sub_227D6A14C();
}

void sub_227E5D4A8(uint64_t a1, char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v6;
  const char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint8_t v13[24];
  uint64_t v14;

  v14 = *MEMORY[0x24BDAC8D0];
  objc_msgSend_configuration(*(void **)(a1 + 32), a2, a3, a4, a5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_containerIdentifier(v6, v7, v8, v9, v10);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  sub_227D6A120();
  sub_227D990B0(&dword_227D4F000, a2, v12, "BCCloudKitController (%{public}@) - Update Attachment: Unexpected null accessQueue", v13);

  sub_227D6A14C();
}

void sub_227E5D540(uint64_t a1, char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v6;
  const char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint8_t v13[24];
  uint64_t v14;

  v14 = *MEMORY[0x24BDAC8D0];
  objc_msgSend_configuration(*(void **)(a1 + 32), a2, a3, a4, a5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_containerIdentifier(v6, v7, v8, v9, v10);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  sub_227D6A120();
  sub_227DB7E14(&dword_227D4F000, a2, v12, "BCCloudKitController (%{public}@) - getAccountInfo completion - will retry update attachment", v13);

  sub_227D6A14C();
}

void sub_227E5D5D8(uint64_t *a1, NSObject *a2, uint64_t a3)
{
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;

  v6 = *MEMORY[0x24BDAC8D0];
  v3 = *a1;
  v4 = 138543362;
  v5 = v3;
  sub_227D990B0(&dword_227D4F000, a2, a3, "Could not determine iCloud status.  Not syncing anything.  Account status error=%{public}@", (uint8_t *)&v4);
  sub_227D6A15C();
}

void sub_227E5D644(uint64_t *a1, NSObject *a2, uint64_t a3)
{
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;

  v6 = *MEMORY[0x24BDAC8D0];
  v3 = *a1;
  v4 = 134217984;
  v5 = v3;
  sub_227DB7E14(&dword_227D4F000, a2, a3, "BCCloudKitController - CURRENT ACCOUNT STATUS %ld", (uint8_t *)&v4);
  sub_227D6A15C();
}

void sub_227E5D6B0()
{
  NSObject *v0;
  uint64_t v1;
  uint8_t v2[24];
  uint64_t v3;

  v3 = *MEMORY[0x24BDAC8D0];
  sub_227D6A120();
  sub_227D990B0(&dword_227D4F000, v0, v1, "Error connecting user to database error=%{public}@", v2);
  sub_227D6A15C();
}

void sub_227E5D714(void **a1, const char *a2, NSObject *a3, uint64_t a4, uint64_t a5)
{
  void *v6;
  const char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint8_t v13[12];
  __int16 v14;
  uint64_t v15;
  uint64_t v16;

  v16 = *MEMORY[0x24BDAC8D0];
  objc_msgSend_configuration(*a1, a2, (uint64_t)a3, a4, a5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_containerIdentifier(v6, v7, v8, v9, v10);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  sub_227D6A120();
  v14 = 2114;
  v15 = v12;
  _os_log_error_impl(&dword_227D4F000, a3, OS_LOG_TYPE_ERROR, "BCCloudKitController (%{public}@) - Asked to fetch changes for %{public}@ while detached and enableCloudSync=NO, give up!", v13, 0x16u);

  sub_227D6A14C();
}

void sub_227E5D7C8(void *a1, char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v6;
  const char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint8_t v13[24];
  uint64_t v14;

  v14 = *MEMORY[0x24BDAC8D0];
  objc_msgSend_configuration(a1, a2, a3, a4, a5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_containerIdentifier(v6, v7, v8, v9, v10);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  sub_227D6A120();
  sub_227DB7E14(&dword_227D4F000, a2, v12, "_updateAccountCacheWithTimeout(%{public}@)", v13);

  sub_227D6A14C();
}

void sub_227E5D860(os_log_t log)
{
  uint8_t v1[16];

  *(_WORD *)v1 = 0;
  _os_log_debug_impl(&dword_227D4F000, log, OS_LOG_TYPE_DEBUG, "_updateAccountCacheWithTimeout returning a YES ", v1, 2u);
  sub_227D6A12C();
}

void sub_227E5D89C(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_227D84C24(&dword_227D4F000, a1, a3, "_updateAccountCacheWithTimeout no access queue!", a5, a6, a7, a8, 0);
  sub_227D6A12C();
}

void sub_227E5D8CC(uint64_t a1, const char *a2, NSObject *a3, uint64_t a4, uint64_t a5)
{
  void *v6;
  const char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  int v12;
  uint8_t v13[12];
  __int16 v14;
  int v15;
  uint64_t v16;

  v16 = *MEMORY[0x24BDAC8D0];
  objc_msgSend_configuration(*(void **)(a1 + 48), a2, (uint64_t)a3, a4, a5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_containerIdentifier(v6, v7, v8, v9, v10);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  sub_227D6A120();
  v14 = 1024;
  v15 = v12;
  _os_log_debug_impl(&dword_227D4F000, a3, OS_LOG_TYPE_DEBUG, "(%{public}@) _updateAccountCacheWithTimeout hasChanged:%{BOOL}d ", v13, 0x12u);

  sub_227D6A14C();
}

void sub_227E5D98C(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v6;
  const char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  const char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  objc_msgSend_configuration(*(void **)(a1 + 40), a2, a3, a4, a5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_containerIdentifier(v6, v7, v8, v9, v10);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_currentStatus(*(void **)(a1 + 48), v12, v13, v14, v15);
  sub_227DB7E20(&dword_227D4F000, v16, v17, "(%{public}@) currentAccountStatus is:%ld No change", v18, v19, v20, v21, 2u);

  sub_227D6A14C();
}

void sub_227E5DA38(uint64_t a1, const char *a2, NSObject *a3, uint64_t a4, uint64_t a5)
{
  void *v8;
  const char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  const char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  void *v21;
  __int16 v22;
  uint64_t v23;
  __int16 v24;
  uint64_t v25;
  uint64_t v26;

  v26 = *MEMORY[0x24BDAC8D0];
  objc_msgSend_configuration(*(void **)(a1 + 40), a2, (uint64_t)a3, a4, a5);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_containerIdentifier(v8, v9, v10, v11, v12);
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  v18 = objc_msgSend_currentStatus(*(void **)(a1 + 48), v14, v15, v16, v17);
  v19 = *(_QWORD *)a2;
  v20 = 138543874;
  v21 = v13;
  v22 = 2048;
  v23 = v18;
  v24 = 2048;
  v25 = v19;
  _os_log_debug_impl(&dword_227D4F000, a3, OS_LOG_TYPE_DEBUG, "(%{public}@) currentAccountStatus from:%ld to:%ld", (uint8_t *)&v20, 0x20u);

}

void sub_227E5DB18(void *a1, char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v6;
  const char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint8_t v13[24];
  uint64_t v14;

  v14 = *MEMORY[0x24BDAC8D0];
  objc_msgSend_configuration(a1, a2, a3, a4, a5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_containerIdentifier(v6, v7, v8, v9, v10);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  sub_227D6A120();
  sub_227D990B0(&dword_227D4F000, a2, v12, "p_testAccountChanged (%{public}@)", v13);

  sub_227D6A14C();
}

void sub_227E5DBAC(void *a1, char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v6;
  const char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint8_t v13[24];
  uint64_t v14;

  v14 = *MEMORY[0x24BDAC8D0];
  objc_msgSend_configuration(a1, a2, a3, a4, a5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_containerIdentifier(v6, v7, v8, v9, v10);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  sub_227D6A120();
  sub_227D990B0(&dword_227D4F000, a2, v12, "***p_testAccountChanged verboseLogging ENABLED (%{public}@)", v13);

  sub_227D6A14C();
}

void sub_227E5DC40(void *a1, char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v6;
  const char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint8_t v13[24];
  uint64_t v14;

  v14 = *MEMORY[0x24BDAC8D0];
  objc_msgSend_configuration(a1, a2, a3, a4, a5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_containerIdentifier(v6, v7, v8, v9, v10);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  sub_227D6A120();
  sub_227D990B0(&dword_227D4F000, a2, v12, "***p_testAccountChanged verboseLogging DISABLED (%{public}@)", v13);

  sub_227D6A14C();
}

void sub_227E5DCD4(void *a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v5;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint8_t v17;

  objc_msgSend_configuration(a1, a2, a3, a4, a5);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_containerIdentifier(v5, v6, v7, v8, v9);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  sub_227D6A120();
  sub_227DB7E20(&dword_227D4F000, v11, v12, "***signal p_accountChanged (%{public}@) notification=%@", v13, v14, v15, v16, v17);

  sub_227D6A14C();
}

void sub_227E5DD70(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_227D84C24(&dword_227D4F000, a1, a3, "p_accountReallyChangedWithCompletion has no accessQueue", a5, a6, a7, a8, 0);
  sub_227D6A12C();
}

void sub_227E5DDA0(uint64_t *a1, NSObject *a2)
{
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;

  v5 = *MEMORY[0x24BDAC8D0];
  v2 = *a1;
  v3 = 138412290;
  v4 = v2;
  _os_log_error_impl(&dword_227D4F000, a2, OS_LOG_TYPE_ERROR, "Unable to create persistent stores on the coordinator:%@", (uint8_t *)&v3, 0xCu);
}

void sub_227E5DE18(uint64_t a1, void *a2, NSObject *a3, uint64_t a4, uint64_t a5)
{
  void *v8;
  const char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  __int16 v15;
  void *v16;
  __int16 v17;
  int v18;
  uint64_t v19;

  v19 = *MEMORY[0x24BDAC8D0];
  objc_msgSend_domain(a2, (const char *)a2, (uint64_t)a3, a4, a5);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v13 = 138543874;
  v14 = a1;
  v15 = 2114;
  v16 = v8;
  v17 = 1024;
  v18 = objc_msgSend_code(a2, v9, v10, v11, v12);
  _os_log_error_impl(&dword_227D4F000, a3, OS_LOG_TYPE_ERROR, "Error %{public}@: %{public}@ %d", (uint8_t *)&v13, 0x1Cu);

}

void sub_227E5DEE0(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_227DB8628(&dword_227D4F000, a1, a3, "Unable to recreate cloud data source persistent store. Giving up", a5, a6, a7, a8, 0);
  sub_227D6A12C();
}

void sub_227E5DF10(os_log_t log)
{
  uint8_t v1[16];

  *(_WORD *)v1 = 0;
  _os_log_error_impl(&dword_227D4F000, log, OS_LOG_TYPE_ERROR, "Attempting to remove files and start over", v1, 2u);
  sub_227D6A12C();
}

void sub_227E5DF4C(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_227DB8628(&dword_227D4F000, a1, a3, "Unable to create cloud data source persistent store. Attempting to remove files and start over", a5, a6, a7, a8, 0);
  sub_227D6A12C();
}

void sub_227E5DF7C()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_227D6A164();
  sub_227D84C24(&dword_227D4F000, v0, v1, "BCReadingNowDetail configureFromCloudData wrong class passed in.", v2, v3, v4, v5, v6);
  sub_227D6A12C();
}

void sub_227E5DFA8(void *a1, char *a2, NSObject *a3, uint64_t a4, uint64_t a5)
{
  void *v8;
  const char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  const char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  int v20;
  void *v21;
  __int16 v22;
  void *v23;
  __int16 v24;
  void *v25;
  uint64_t v26;

  v26 = *MEMORY[0x24BDAC8D0];
  objc_msgSend_assetID(a1, a2, (uint64_t)a3, a4, a5);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_debugDescription(a1, v9, v10, v11, v12);
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_assetID(a2, v14, v15, v16, v17);
  v18 = (void *)objc_claimAutoreleasedReturnValue();
  v20 = 138412802;
  v21 = v8;
  v22 = 2112;
  v23 = v13;
  v24 = 2112;
  v25 = v18;
  sub_227D6A1A4(&dword_227D4F000, a3, v19, "BCReadingNowDetail configured: %@ %@ from readingNowDetail:%@", (uint8_t *)&v20);

}

void sub_227E5E080(void *a1, char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v6;
  int v7;
  void *v8;
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  objc_msgSend_assetID(a1, a2, a3, a4, a5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = 138412290;
  v8 = v6;
  _os_log_error_impl(&dword_227D4F000, (os_log_t)a2, OS_LOG_TYPE_ERROR, "BCReadingNowDetail %@ No Record supplied", (uint8_t *)&v7, 0xCu);

}

void sub_227E5E114(void *a1, char *a2, NSObject *a3, uint64_t a4, uint64_t a5)
{
  void *v8;
  const char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  const char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  const char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint8_t v25[40];
  uint64_t v26;

  v26 = *MEMORY[0x24BDAC8D0];
  objc_msgSend_assetID(a1, a2, (uint64_t)a3, a4, a5);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_recordID(a2, v9, v10, v11, v12);
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_recordName(v13, v14, v15, v16, v17);
  v18 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_debugDescription(a1, v19, v20, v21, v22);
  v23 = (void *)objc_claimAutoreleasedReturnValue();
  sub_227DB9A2C();
  sub_227D6A1A4(&dword_227D4F000, a3, v24, "BCReadingNowDetail %@ Resolving: Identical properties from record: %@ %@", v25);

  sub_227DB9A4C();
}

void sub_227E5E1DC(void *a1, char *a2, NSObject *a3, uint64_t a4, uint64_t a5)
{
  void *v8;
  const char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  const char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  const char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint8_t v25[40];
  uint64_t v26;

  v26 = *MEMORY[0x24BDAC8D0];
  objc_msgSend_assetID(a1, a2, (uint64_t)a3, a4, a5);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_recordID(a2, v9, v10, v11, v12);
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_recordName(v13, v14, v15, v16, v17);
  v18 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_debugDescription(a1, v19, v20, v21, v22);
  v23 = (void *)objc_claimAutoreleasedReturnValue();
  sub_227DB9A2C();
  sub_227D6A1A4(&dword_227D4F000, a3, v24, "Assuming cloudAssetType %@ Resolving: from record: %@ %@", v25);

  sub_227DB9A4C();
}

void sub_227E5E2A4(void *a1, const char *a2, NSObject *a3, uint64_t a4, uint64_t a5)
{
  void *v7;
  int v8;
  void *v9;
  __int16 v10;
  const char *v11;
  uint64_t v12;

  v12 = *MEMORY[0x24BDAC8D0];
  objc_msgSend_assetID(a1, a2, (uint64_t)a3, a4, a5);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = 138412546;
  v9 = v7;
  v10 = 2112;
  v11 = a2;
  _os_log_error_impl(&dword_227D4F000, a3, OS_LOG_TYPE_ERROR, "BCReadingNowDetail %@ Mismatch assetID from record assetID %@", (uint8_t *)&v8, 0x16u);

}

void sub_227E5E350()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_227D6A164();
  sub_227D84C24(&dword_227D4F000, v0, v1, "BCMutableReadingNowDetail init with no assetID supplied", v2, v3, v4, v5, v6);
  sub_227D6A12C();
}

void sub_227E5E37C()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_227D6A164();
  sub_227D84C24(&dword_227D4F000, v0, v1, "BCMutableReadingNowDetail init with no record supplied", v2, v3, v4, v5, v6);
  sub_227D6A12C();
}

void sub_227E5E3A8()
{
  __assert_rtn("-[BCAnnotationsProtoBook writeTo:]", "BCAnnotationsProtoBook.m", 152, "nil != self->_assetID");
}

void sub_227E5E3D0()
{
  __assert_rtn("-[BCAnnotationsProtoBook writeTo:]", "BCAnnotationsProtoBook.m", 157, "nil != self->_appVersion");
}

void sub_227E5E3F8()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_227D6A164();
  sub_227D84C24(&dword_227D4F000, v0, v1, "BCCollectionMember configureFromCloudData wrong class passed in.", v2, v3, v4, v5, v6);
  sub_227D6A12C();
}

void sub_227E5E424()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_227D6A164();
  sub_227D84C24(&dword_227D4F000, v0, v1, "BCCollectionMember resolveConflictsFromRecord record contains nil collectionMemberID", v2, v3, v4, v5, v6);
  sub_227D6A12C();
}

void sub_227E5E450(void *a1, const char *a2, NSObject *a3, uint64_t a4, uint64_t a5)
{
  void *v7;
  int v8;
  void *v9;
  __int16 v10;
  const char *v11;
  uint64_t v12;

  v12 = *MEMORY[0x24BDAC8D0];
  objc_msgSend_collectionMemberID(a1, a2, (uint64_t)a3, a4, a5);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = 138412546;
  v9 = v7;
  v10 = 2112;
  v11 = a2;
  _os_log_error_impl(&dword_227D4F000, a3, OS_LOG_TYPE_ERROR, "BCCollectionMember %@ Mismatch assetID from record collectionMemberID %@", (uint8_t *)&v8, 0x16u);

}

void sub_227E5E4FC()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_227D6A164();
  sub_227D84C24(&dword_227D4F000, v0, v1, "BCMutableCollectionMember init with no collectionMemberID supplied", v2, v3, v4, v5, v6);
  sub_227D6A12C();
}

void sub_227E5E528()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_227D6A164();
  sub_227D84C24(&dword_227D4F000, v0, v1, "BCMutableCollectionMember configureFromCloudData wrong class passed in.", v2, v3, v4, v5, v6);
  sub_227D6A12C();
}

void sub_227E5E554()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_227D6A164();
  sub_227D84C24(&dword_227D4F000, v0, v1, "BCCollectionMember initWithCloudData cloudData contains nil collectionMemberID", v2, v3, v4, v5, v6);
  sub_227D6A12C();
}

void sub_227E5E580()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_227D6A164();
  sub_227D84C24(&dword_227D4F000, v0, v1, "BCMutableCollectionMember init with no record supplied", v2, v3, v4, v5, v6);
  sub_227D6A12C();
}

void sub_227E5E5AC()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_227D6A164();
  sub_227D84C24(&dword_227D4F000, v0, v1, "BCCollectionMember initWithCloudData record contains nil collectionMemberID", v2, v3, v4, v5, v6);
  sub_227D6A12C();
}

void sub_227E5E5D8()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_227D6A164();
  sub_227D84C24(&dword_227D4F000, v0, v1, "BCAssetDetail configureFromCloudData wrong class passed in.", v2, v3, v4, v5, v6);
  sub_227D6A12C();
}

void sub_227E5E604(void *a1, char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v6;
  int v7;
  void *v8;
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  objc_msgSend_assetID(a1, a2, a3, a4, a5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = 138412290;
  v8 = v6;
  _os_log_error_impl(&dword_227D4F000, (os_log_t)a2, OS_LOG_TYPE_ERROR, "BCAssetDetail %@ No Record supplied", (uint8_t *)&v7, 0xCu);

}

void sub_227E5E698(void *a1, const char *a2, NSObject *a3, uint64_t a4, uint64_t a5)
{
  void *v7;
  int v8;
  void *v9;
  __int16 v10;
  const char *v11;
  uint64_t v12;

  v12 = *MEMORY[0x24BDAC8D0];
  objc_msgSend_assetID(a1, a2, (uint64_t)a3, a4, a5);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = 138412546;
  v9 = v7;
  v10 = 2112;
  v11 = a2;
  _os_log_error_impl(&dword_227D4F000, a3, OS_LOG_TYPE_ERROR, "BCAssetDetail %@ Mismatch assetID from record assetID %@", (uint8_t *)&v8, 0x16u);

}

void sub_227E5E744()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_227D6A164();
  sub_227D84C24(&dword_227D4F000, v0, v1, "BCMutableAssetDetail init with no assetID supplied", v2, v3, v4, v5, v6);
  sub_227D6A12C();
}

void sub_227E5E770()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_227D6A164();
  sub_227D84C24(&dword_227D4F000, v0, v1, "BCMutableAssetDetail init with no record supplied", v2, v3, v4, v5, v6);
  sub_227D6A12C();
}

void sub_227E5E79C()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_227D6A164();
  sub_227D84C24(&dword_227D4F000, v0, v1, "BCGlobalMetadatum configureFromCloudData wrong class passed in.", v2, v3, v4, v5, v6);
  sub_227D6A12C();
}

void sub_227E5E7C8(void *a1, char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v6;
  int v7;
  void *v8;
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  objc_msgSend_key(a1, a2, a3, a4, a5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = 138412290;
  v8 = v6;
  _os_log_error_impl(&dword_227D4F000, (os_log_t)a2, OS_LOG_TYPE_ERROR, "BCGlobalMetadatum %@ No Record supplied", (uint8_t *)&v7, 0xCu);

}

void sub_227E5E85C(void *a1, const char *a2, NSObject *a3, uint64_t a4, uint64_t a5)
{
  void *v7;
  int v8;
  void *v9;
  __int16 v10;
  const char *v11;
  uint64_t v12;

  v12 = *MEMORY[0x24BDAC8D0];
  objc_msgSend_key(a1, a2, (uint64_t)a3, a4, a5);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = 138412546;
  v9 = v7;
  v10 = 2112;
  v11 = a2;
  _os_log_error_impl(&dword_227D4F000, a3, OS_LOG_TYPE_ERROR, "BCGlobalMetadatum %@ Mismatch key from record key %@", (uint8_t *)&v8, 0x16u);

}

void sub_227E5E908()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_227D6A164();
  sub_227D84C24(&dword_227D4F000, v0, v1, "BCMutableGlobalMetadatum init with no key supplied", v2, v3, v4, v5, v6);
  sub_227D6A12C();
}

void sub_227E5E934()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_227D6A164();
  sub_227D84C24(&dword_227D4F000, v0, v1, "BCMutableGlobalMetadatum init with no record supplied", v2, v3, v4, v5, v6);
  sub_227D6A12C();
}

void sub_227E5E960()
{
  NSObject *v0;
  uint64_t v1;
  uint8_t v2[24];
  uint64_t v3;

  v3 = *MEMORY[0x24BDAC8D0];
  sub_227D6A120();
  sub_227D990B0(&dword_227D4F000, v0, v1, "#dissociateCloudData error: %@", v2);
  sub_227D6A15C();
}

void sub_227E5E9C4()
{
  uint64_t v0;
  NSObject *v1;
  uint8_t v2[12];
  __int16 v3;
  uint64_t v4;
  uint64_t v5;

  v5 = *MEMORY[0x24BDAC8D0];
  sub_227D6A120();
  v3 = 2114;
  v4 = v0;
  sub_227D6A170(&dword_227D4F000, v1, (uint64_t)v1, "BCCloudDataManager error: %{public}@, at: %{public}@", v2);
  sub_227D6A15C();
}

void sub_227E5EA38()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_227D6A164();
  sub_227D84C24(&dword_227D4F000, v0, v1, "No managed object context!", v2, v3, v4, v5, v6);
  sub_227D6A12C();
}

void sub_227E5EA64(void *a1, char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v6;
  uint64_t v7;
  uint8_t v8[24];
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  objc_msgSend_entityName(a1, a2, a3, a4, a5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  sub_227D6A120();
  sub_227D990B0(&dword_227D4F000, a2, v7, "BCCloudDataManager: %@ setCloudData fail, no moc", v8);

  sub_227D6A188();
}

void sub_227E5EAE8(void *a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint8_t v12;

  objc_msgSend_identifier(a1, a2, a3, a4, a5);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  sub_227DCC1E0();
  sub_227DCC20C(&dword_227D4F000, v6, v7, "Data diff! %@ hasChanges:%{BOOL}d", v8, v9, v10, v11, v12);

  sub_227D6A14C();
}

void sub_227E5EB6C(void *a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint8_t v12;

  objc_msgSend_identifier(a1, a2, a3, a4, a5);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  sub_227DCC1E0();
  sub_227DCC20C(&dword_227D4F000, v6, v7, "Compraring local to cloudData for %@. isEqualExceptForDate:%{BOOL}d", v8, v9, v10, v11, v12);

  sub_227D6A14C();
}

void sub_227E5EBF0(void *a1, const char *a2, NSObject *a3, uint64_t a4, uint64_t a5)
{
  void *v7;
  const char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  int v14;
  void *v15;
  __int16 v16;
  void *v17;
  uint64_t v18;

  v18 = *MEMORY[0x24BDAC8D0];
  objc_msgSend_entityName(a1, a2, (uint64_t)a3, a4, a5);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend_debugDescription(*(void **)a2, v8, v9, v10, v11);
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  v14 = 138543618;
  v15 = v7;
  v16 = 2112;
  v17 = v12;
  sub_227D6A170(&dword_227D4F000, a3, v13, "Did not find %{public}@ to remove for predicate:%{pubic}@", (uint8_t *)&v14);

  sub_227D6A14C();
}

void sub_227E5EC9C()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_227D6A164();
  sub_227D84C24(&dword_227D4F000, v0, v1, "Did not match the same results as the cloud data provided.", v2, v3, v4, v5, v6);
  sub_227D6A12C();
}

void sub_227E5ECC8()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_227D6A164();
  sub_227D84C24(&dword_227D4F000, v0, v1, "Tried to look up cloud data but there was no moc.", v2, v3, v4, v5, v6);
  sub_227D6A12C();
}

void sub_227E5ECF4()
{
  os_log_t v0;
  uint8_t v1[24];
  uint64_t v2;

  v2 = *MEMORY[0x24BDAC8D0];
  sub_227DCC1E0();
  _os_log_fault_impl(&dword_227D4F000, v0, OS_LOG_TYPE_FAULT, "BCCloudDataManager %{public}@ resolveConflictsForRecords: Encountered duplicates: %d", v1, 0x12u);
  sub_227D6A15C();
}

void sub_227E5ED6C(uint64_t a1, NSObject *a2, uint64_t a3)
{
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;

  v6 = *MEMORY[0x24BDAC8D0];
  v3 = *(_QWORD *)(a1 + 32);
  v4 = 138543362;
  v5 = v3;
  sub_227D990B0(&dword_227D4F000, a2, a3, "BCCloudDataManager #recordChange failedRecordIDs:%{public}@", (uint8_t *)&v4);
  sub_227D6A15C();
}

void sub_227E5EDD8(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint8_t v12;

  objc_msgSend_entityName(*(void **)(a1 + 32), a2, a3, a4, a5);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  sub_227D6A120();
  sub_227DCC1F8(&dword_227D4F000, v6, v7, "BCCloudDataManager %{public}@ getChangesSince -- No managed object context!", v8, v9, v10, v11, v12);

  sub_227D6A188();
}

void sub_227E5EE54(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint8_t v12;

  objc_msgSend_entityName(*(void **)(a1 + 40), a2, a3, a4, a5);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  sub_227D6A120();
  sub_227DCC1F8(&dword_227D4F000, v6, v7, "BCCloudDataManager %{public}@ getChangesSince -- No managed object context inside performBlock!", v8, v9, v10, v11, v12);

  sub_227D6A188();
}

void sub_227E5EED0(void **a1, char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v6;
  uint64_t v7;
  uint8_t v8[24];
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  objc_msgSend_entityName(*a1, a2, a3, a4, a5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  sub_227D6A120();
  sub_227D990B0(&dword_227D4F000, a2, v7, "BCCloudDataManager %{public}@ getChangesSince -- fetchHistoryAfterToken returned error", v8);

  sub_227D6A188();
}

void sub_227E5EF54(void *a1, char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v6;
  uint8_t v7[24];
  uint64_t v8;

  v8 = *MEMORY[0x24BDAC8D0];
  objc_msgSend_entityName(a1, a2, a3, a4, a5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  sub_227D6A120();
  _os_log_debug_impl(&dword_227D4F000, (os_log_t)a2, OS_LOG_TYPE_DEBUG, "BCCloudDataManager diagnosticDirtyCloudDataInfos %@", v7, 0xCu);

  sub_227D6A188();
}

uint64_t sub_227E5EFDC()
{
  return MEMORY[0x24BDCB220]();
}

uint64_t sub_227E5EFE8()
{
  return MEMORY[0x24BDCB260]();
}

uint64_t sub_227E5EFF4()
{
  return MEMORY[0x24BDCB268]();
}

uint64_t sub_227E5F000()
{
  return MEMORY[0x24BDCB3B8]();
}

uint64_t sub_227E5F00C()
{
  return MEMORY[0x24BDCB400]();
}

uint64_t sub_227E5F018()
{
  return MEMORY[0x24BDCB410]();
}

uint64_t sub_227E5F024()
{
  return MEMORY[0x24BDCB8D8]();
}

uint64_t sub_227E5F030()
{
  return MEMORY[0x24BDCB8E8]();
}

uint64_t sub_227E5F03C()
{
  return MEMORY[0x24BDCB918]();
}

uint64_t sub_227E5F048()
{
  return MEMORY[0x24BDCB930]();
}

uint64_t sub_227E5F054()
{
  return MEMORY[0x24BDCBBC8]();
}

uint64_t sub_227E5F060()
{
  return MEMORY[0x24BDCBBD8]();
}

uint64_t sub_227E5F06C()
{
  return MEMORY[0x24BDCBBF0]();
}

uint64_t sub_227E5F078()
{
  return MEMORY[0x24BDCBCC8]();
}

uint64_t sub_227E5F084()
{
  return MEMORY[0x24BDCBD28]();
}

uint64_t sub_227E5F090()
{
  return MEMORY[0x24BDCBD48]();
}

uint64_t sub_227E5F09C()
{
  return MEMORY[0x24BDCBDA8]();
}

uint64_t sub_227E5F0A8()
{
  return MEMORY[0x24BDCBDE0]();
}

uint64_t sub_227E5F0B4()
{
  return MEMORY[0x24BDCC7A0]();
}

uint64_t sub_227E5F0C0()
{
  return MEMORY[0x24BDCC808]();
}

uint64_t sub_227E5F0CC()
{
  return MEMORY[0x24BDCC818]();
}

uint64_t sub_227E5F0D8()
{
  return MEMORY[0x24BDCC930]();
}

uint64_t sub_227E5F0E4()
{
  return MEMORY[0x24BDCD280]();
}

uint64_t sub_227E5F0F0()
{
  return MEMORY[0x24BDCD288]();
}

uint64_t sub_227E5F0FC()
{
  return MEMORY[0x24BDCD290]();
}

uint64_t sub_227E5F108()
{
  return MEMORY[0x24BDCD298]();
}

uint64_t sub_227E5F114()
{
  return MEMORY[0x24BDCD2A0]();
}

uint64_t sub_227E5F120()
{
  return MEMORY[0x24BDCD2A8]();
}

uint64_t sub_227E5F12C()
{
  return MEMORY[0x24BDCD2B8]();
}

uint64_t sub_227E5F138()
{
  return MEMORY[0x24BDCD2F0]();
}

uint64_t sub_227E5F144()
{
  return MEMORY[0x24BDCD2F8]();
}

uint64_t sub_227E5F150()
{
  return MEMORY[0x24BDCD820]();
}

uint64_t sub_227E5F15C()
{
  return MEMORY[0x24BDCD860]();
}

uint64_t sub_227E5F168()
{
  return MEMORY[0x24BDCD8A0]();
}

uint64_t sub_227E5F174()
{
  return MEMORY[0x24BDCD8D0]();
}

uint64_t sub_227E5F180()
{
  return MEMORY[0x24BDCD918]();
}

uint64_t sub_227E5F18C()
{
  return MEMORY[0x24BDCD928]();
}

uint64_t sub_227E5F198()
{
  return MEMORY[0x24BDCD9C0]();
}

uint64_t sub_227E5F1A4()
{
  return MEMORY[0x24BDCD9F8]();
}

uint64_t sub_227E5F1B0()
{
  return MEMORY[0x24BDCDAC0]();
}

uint64_t sub_227E5F1BC()
{
  return MEMORY[0x24BDCDB78]();
}

uint64_t sub_227E5F1C8()
{
  return MEMORY[0x24BDCDBE0]();
}

uint64_t sub_227E5F1D4()
{
  return MEMORY[0x24BDCDCA0]();
}

uint64_t sub_227E5F1E0()
{
  return MEMORY[0x24BDCDCE0]();
}

uint64_t sub_227E5F1EC()
{
  return MEMORY[0x24BDCDD20]();
}

uint64_t sub_227E5F1F8()
{
  return MEMORY[0x24BE0FAD0]();
}

uint64_t sub_227E5F204()
{
  return MEMORY[0x24BE0FAD8]();
}

uint64_t sub_227E5F210()
{
  return MEMORY[0x24BDCE2D0]();
}

uint64_t sub_227E5F21C()
{
  return MEMORY[0x24BDCE2D8]();
}

uint64_t sub_227E5F228()
{
  return MEMORY[0x24BDCE2F8]();
}

uint64_t sub_227E5F234()
{
  return MEMORY[0x24BDCE5D8]();
}

uint64_t sub_227E5F240()
{
  return MEMORY[0x24BDCE5E8]();
}

uint64_t sub_227E5F24C()
{
  return MEMORY[0x24BDCE5F0]();
}

uint64_t sub_227E5F258()
{
  return MEMORY[0x24BDCE858]();
}

uint64_t sub_227E5F264()
{
  return MEMORY[0x24BDCE878]();
}

uint64_t sub_227E5F270()
{
  return MEMORY[0x24BDCE8F8]();
}

uint64_t sub_227E5F27C()
{
  return MEMORY[0x24BDCE900]();
}

uint64_t sub_227E5F288()
{
  return MEMORY[0x24BE0FAE0]();
}

uint64_t sub_227E5F294()
{
  return MEMORY[0x24BDCEFC8]();
}

uint64_t sub_227E5F2A0()
{
  return MEMORY[0x24BDCF040]();
}

uint64_t sub_227E5F2AC()
{
  return MEMORY[0x24BDCF0C0]();
}

uint64_t sub_227E5F2B8()
{
  return MEMORY[0x24BDCF140]();
}

uint64_t sub_227E5F2C4()
{
  return MEMORY[0x24BDCF150]();
}

uint64_t sub_227E5F2D0()
{
  return MEMORY[0x24BDCF160]();
}

uint64_t sub_227E5F2DC()
{
  return MEMORY[0x24BDCF1B0]();
}

uint64_t sub_227E5F2E8()
{
  return MEMORY[0x24BDCF290]();
}

uint64_t sub_227E5F2F4()
{
  return MEMORY[0x24BDCF2D0]();
}

uint64_t sub_227E5F300()
{
  return MEMORY[0x24BDCF2D8]();
}

uint64_t sub_227E5F30C()
{
  return MEMORY[0x24BDCF510]();
}

uint64_t sub_227E5F318()
{
  return MEMORY[0x24BE0FAE8]();
}

uint64_t sub_227E5F324()
{
  return MEMORY[0x24BE0FAF8]();
}

uint64_t sub_227E5F330()
{
  return MEMORY[0x24BE0FB08]();
}

uint64_t sub_227E5F33C()
{
  return MEMORY[0x24BE0FB10]();
}

uint64_t sub_227E5F348()
{
  return MEMORY[0x24BE0FB18]();
}

uint64_t sub_227E5F354()
{
  return MEMORY[0x24BE0FB20]();
}

uint64_t sub_227E5F360()
{
  return MEMORY[0x24BE0FB28]();
}

uint64_t sub_227E5F36C()
{
  return MEMORY[0x24BE0FB30]();
}

uint64_t sub_227E5F378()
{
  return MEMORY[0x24BE0FB38]();
}

uint64_t sub_227E5F384()
{
  return MEMORY[0x24BE0FB48]();
}

uint64_t sub_227E5F390()
{
  return MEMORY[0x24BE0FB50]();
}

uint64_t sub_227E5F39C()
{
  return MEMORY[0x24BE0FB58]();
}

uint64_t sub_227E5F3A8()
{
  return MEMORY[0x24BE5B970]();
}

uint64_t sub_227E5F3B4()
{
  return MEMORY[0x24BE5B988]();
}

uint64_t sub_227E5F3C0()
{
  return MEMORY[0x24BE5B990]();
}

uint64_t sub_227E5F3CC()
{
  return MEMORY[0x24BE5BF00]();
}

uint64_t _s13BookDataStore18PBPropertyNoParamsVACycfC_0()
{
  return MEMORY[0x24BE5BF08]();
}

uint64_t sub_227E5F3E4()
{
  return MEMORY[0x24BE5BF10]();
}

uint64_t sub_227E5F3F0()
{
  return MEMORY[0x24BE5BFC0]();
}

uint64_t sub_227E5F3FC()
{
  return MEMORY[0x24BE5BFC8]();
}

uint64_t sub_227E5F408()
{
  return MEMORY[0x24BE5C008]();
}

uint64_t sub_227E5F414()
{
  return MEMORY[0x24BE5C010]();
}

uint64_t sub_227E5F420()
{
  return MEMORY[0x24BE5C018]();
}

uint64_t sub_227E5F42C()
{
  return MEMORY[0x24BE5C038]();
}

uint64_t sub_227E5F438()
{
  return MEMORY[0x24BE5C048]();
}

uint64_t sub_227E5F444()
{
  return MEMORY[0x24BE5C068]();
}

uint64_t sub_227E5F450()
{
  return MEMORY[0x24BE5C078]();
}

uint64_t sub_227E5F45C()
{
  return MEMORY[0x24BE5C0B8]();
}

uint64_t sub_227E5F468()
{
  return MEMORY[0x24BE5C0D8]();
}

uint64_t sub_227E5F474()
{
  return MEMORY[0x24BE5C118]();
}

uint64_t sub_227E5F480()
{
  return MEMORY[0x24BE5C120]();
}

uint64_t sub_227E5F48C()
{
  return MEMORY[0x24BE5C148]();
}

uint64_t sub_227E5F498()
{
  return MEMORY[0x24BE5C160]();
}

uint64_t sub_227E5F4A4()
{
  return MEMORY[0x24BE5C1B0]();
}

uint64_t sub_227E5F4B0()
{
  return MEMORY[0x24BE5C1B8]();
}

uint64_t sub_227E5F4BC()
{
  return MEMORY[0x24BE5C1C0]();
}

uint64_t sub_227E5F4C8()
{
  return MEMORY[0x24BE5C1D0]();
}

uint64_t sub_227E5F4D4()
{
  return MEMORY[0x24BE5C1E8]();
}

uint64_t sub_227E5F4E0()
{
  return MEMORY[0x24BE5C270]();
}

uint64_t sub_227E5F4EC()
{
  return MEMORY[0x24BE5C278]();
}

uint64_t sub_227E5F4F8()
{
  return MEMORY[0x24BE5C2A0]();
}

uint64_t sub_227E5F504()
{
  return MEMORY[0x24BE5C2B0]();
}

uint64_t sub_227E5F510()
{
  return MEMORY[0x24BE5C2E8]();
}

uint64_t sub_227E5F51C()
{
  return MEMORY[0x24BE5C300]();
}

uint64_t sub_227E5F528()
{
  return MEMORY[0x24BE5C310]();
}

uint64_t sub_227E5F534()
{
  return MEMORY[0x24BE5C330]();
}

uint64_t sub_227E5F540()
{
  return MEMORY[0x24BE5C340]();
}

uint64_t sub_227E5F54C()
{
  return MEMORY[0x24BE5C348]();
}

uint64_t sub_227E5F558()
{
  return MEMORY[0x24BE5C350]();
}

uint64_t sub_227E5F564()
{
  return MEMORY[0x24BEE76F0]();
}

uint64_t sub_227E5F570()
{
  return MEMORY[0x24BEE78A8]();
}

uint64_t sub_227E5F57C()
{
  return MEMORY[0x24BEE78C0]();
}

uint64_t sub_227E5F588()
{
  return MEMORY[0x24BEE78D8]();
}

uint64_t sub_227E5F594()
{
  return MEMORY[0x24BDB9AE0]();
}

uint64_t sub_227E5F5A0()
{
  return MEMORY[0x24BDB9B40]();
}

uint64_t sub_227E5F5AC()
{
  return MEMORY[0x24BDB9C78]();
}

uint64_t sub_227E5F5B8()
{
  return MEMORY[0x24BDB9C90]();
}

uint64_t sub_227E5F5C4()
{
  return MEMORY[0x24BDB9E70]();
}

uint64_t sub_227E5F5D0()
{
  return MEMORY[0x24BDB9FB0]();
}

uint64_t sub_227E5F5DC()
{
  return MEMORY[0x24BDBA030]();
}

uint64_t sub_227E5F5E8()
{
  return MEMORY[0x24BDBA090]();
}

uint64_t sub_227E5F5F4()
{
  return MEMORY[0x24BDB87D0]();
}

uint64_t sub_227E5F600()
{
  return MEMORY[0x24BDB87D8]();
}

uint64_t sub_227E5F60C()
{
  return MEMORY[0x24BDB87E0]();
}

uint64_t sub_227E5F618()
{
  return MEMORY[0x24BDB87F0]();
}

uint64_t sub_227E5F624()
{
  return MEMORY[0x24BDB8800]();
}

uint64_t sub_227E5F630()
{
  return MEMORY[0x24BDB8810]();
}

uint64_t sub_227E5F63C()
{
  return MEMORY[0x24BDB8818]();
}

uint64_t sub_227E5F648()
{
  return MEMORY[0x24BDB8820]();
}

uint64_t sub_227E5F654()
{
  return MEMORY[0x24BDB8828]();
}

uint64_t sub_227E5F660()
{
  return MEMORY[0x24BDB8858]();
}

uint64_t sub_227E5F66C()
{
  return MEMORY[0x24BDB8868]();
}

uint64_t sub_227E5F678()
{
  return MEMORY[0x24BDB8870]();
}

uint64_t sub_227E5F684()
{
  return MEMORY[0x24BDB8878]();
}

uint64_t sub_227E5F690()
{
  return MEMORY[0x24BDB8880]();
}

uint64_t sub_227E5F69C()
{
  return MEMORY[0x24BDB8888]();
}

uint64_t sub_227E5F6A8()
{
  return MEMORY[0x24BDB8890]();
}

uint64_t sub_227E5F6B4()
{
  return MEMORY[0x24BDB8898]();
}

uint64_t sub_227E5F6C0()
{
  return MEMORY[0x24BDB88B0]();
}

uint64_t sub_227E5F6CC()
{
  return MEMORY[0x24BDB88B8]();
}

uint64_t sub_227E5F6D8()
{
  return MEMORY[0x24BDB88C0]();
}

uint64_t sub_227E5F6E4()
{
  return MEMORY[0x24BDB88C8]();
}

uint64_t sub_227E5F6F0()
{
  return MEMORY[0x24BDB88E0]();
}

uint64_t sub_227E5F6FC()
{
  return MEMORY[0x24BDB88F0]();
}

uint64_t sub_227E5F708()
{
  return MEMORY[0x24BDB88F8]();
}

uint64_t sub_227E5F714()
{
  return MEMORY[0x24BDB8900]();
}

uint64_t sub_227E5F720()
{
  return MEMORY[0x24BDB8918]();
}

uint64_t sub_227E5F72C()
{
  return MEMORY[0x24BDB8920]();
}

uint64_t sub_227E5F738()
{
  return MEMORY[0x24BDB8940]();
}

uint64_t sub_227E5F744()
{
  return MEMORY[0x24BDB8950]();
}

uint64_t sub_227E5F750()
{
  return MEMORY[0x24BDB8958]();
}

uint64_t sub_227E5F75C()
{
  return MEMORY[0x24BDB8980]();
}

uint64_t sub_227E5F768()
{
  return MEMORY[0x24BDB8988]();
}

uint64_t sub_227E5F774()
{
  return MEMORY[0x24BDB8990]();
}

uint64_t sub_227E5F780()
{
  return MEMORY[0x24BDB89A8]();
}

uint64_t sub_227E5F78C()
{
  return MEMORY[0x24BDB89C0]();
}

uint64_t sub_227E5F798()
{
  return MEMORY[0x24BDB89E8]();
}

uint64_t sub_227E5F7A4()
{
  return MEMORY[0x24BDB89F0]();
}

uint64_t sub_227E5F7B0()
{
  return MEMORY[0x24BDB89F8]();
}

uint64_t sub_227E5F7BC()
{
  return MEMORY[0x24BDB8A00]();
}

uint64_t sub_227E5F7C8()
{
  return MEMORY[0x24BDB8A08]();
}

uint64_t sub_227E5F7D4()
{
  return MEMORY[0x24BDB8A10]();
}

uint64_t sub_227E5F7E0()
{
  return MEMORY[0x24BDB8A20]();
}

uint64_t sub_227E5F7EC()
{
  return MEMORY[0x24BDB8A28]();
}

uint64_t sub_227E5F7F8()
{
  return MEMORY[0x24BDB8A30]();
}

uint64_t sub_227E5F804()
{
  return MEMORY[0x24BDB8A38]();
}

uint64_t sub_227E5F810()
{
  return MEMORY[0x24BDB8A40]();
}

uint64_t sub_227E5F81C()
{
  return MEMORY[0x24BDB8A48]();
}

uint64_t sub_227E5F828()
{
  return MEMORY[0x24BDB8A50]();
}

uint64_t sub_227E5F834()
{
  return MEMORY[0x24BDB8A58]();
}

uint64_t sub_227E5F840()
{
  return MEMORY[0x24BDB8A68]();
}

uint64_t sub_227E5F84C()
{
  return MEMORY[0x24BDB8A70]();
}

uint64_t sub_227E5F858()
{
  return MEMORY[0x24BDB8A78]();
}

uint64_t sub_227E5F864()
{
  return MEMORY[0x24BDB8A88]();
}

uint64_t sub_227E5F870()
{
  return MEMORY[0x24BDB8A90]();
}

uint64_t sub_227E5F87C()
{
  return MEMORY[0x24BDB8A98]();
}

uint64_t sub_227E5F888()
{
  return MEMORY[0x24BDB8AA8]();
}

uint64_t sub_227E5F894()
{
  return MEMORY[0x24BDB8AB0]();
}

uint64_t sub_227E5F8A0()
{
  return MEMORY[0x24BDB8AB8]();
}

uint64_t sub_227E5F8AC()
{
  return MEMORY[0x24BDB8AC8]();
}

uint64_t sub_227E5F8B8()
{
  return MEMORY[0x24BDB8AD0]();
}

uint64_t sub_227E5F8C4()
{
  return MEMORY[0x24BDB8AE0]();
}

uint64_t sub_227E5F8D0()
{
  return MEMORY[0x24BDB8AF0]();
}

uint64_t sub_227E5F8DC()
{
  return MEMORY[0x24BDB8B10]();
}

uint64_t sub_227E5F8E8()
{
  return MEMORY[0x24BDB8B20]();
}

uint64_t sub_227E5F8F4()
{
  return MEMORY[0x24BDB8B28]();
}

uint64_t sub_227E5F900()
{
  return MEMORY[0x24BDB8B40]();
}

uint64_t sub_227E5F90C()
{
  return MEMORY[0x24BDB8B48]();
}

uint64_t sub_227E5F918()
{
  return MEMORY[0x24BDB8B58]();
}

uint64_t sub_227E5F924()
{
  return MEMORY[0x24BDB8B60]();
}

uint64_t sub_227E5F930()
{
  return MEMORY[0x24BDB8B80]();
}

uint64_t sub_227E5F93C()
{
  return MEMORY[0x24BEE5450]();
}

uint64_t sub_227E5F948()
{
  return MEMORY[0x24BEE5458]();
}

uint64_t sub_227E5F954()
{
  return MEMORY[0x24BEE54B0]();
}

uint64_t sub_227E5F960()
{
  return MEMORY[0x24BEE54C8]();
}

uint64_t sub_227E5F96C()
{
  return MEMORY[0x24BEE54D0]();
}

uint64_t sub_227E5F978()
{
  return MEMORY[0x24BEE5500]();
}

uint64_t sub_227E5F984()
{
  return MEMORY[0x24BE17E88]();
}

uint64_t sub_227E5F990()
{
  return MEMORY[0x24BE17E90]();
}

uint64_t sub_227E5F99C()
{
  return MEMORY[0x24BE17EA0]();
}

uint64_t sub_227E5F9A8()
{
  return MEMORY[0x24BE17EB0]();
}

uint64_t sub_227E5F9B4()
{
  return MEMORY[0x24BE17EC0]();
}

uint64_t sub_227E5F9C0()
{
  return MEMORY[0x24BE17EC8]();
}

uint64_t sub_227E5F9CC()
{
  return MEMORY[0x24BE17ED0]();
}

uint64_t sub_227E5F9D8()
{
  return MEMORY[0x24BE17ED8]();
}

uint64_t sub_227E5F9E4()
{
  return MEMORY[0x24BE17EE0]();
}

uint64_t sub_227E5F9F0()
{
  return MEMORY[0x24BE17EE8]();
}

uint64_t sub_227E5F9FC()
{
  return MEMORY[0x24BE17EF0]();
}

uint64_t sub_227E5FA08()
{
  return MEMORY[0x24BE17EF8]();
}

uint64_t sub_227E5FA14()
{
  return MEMORY[0x24BE17F00]();
}

uint64_t sub_227E5FA20()
{
  return MEMORY[0x24BE17F08]();
}

uint64_t sub_227E5FA2C()
{
  return MEMORY[0x24BE17F10]();
}

uint64_t sub_227E5FA38()
{
  return MEMORY[0x24BE17F18]();
}

uint64_t sub_227E5FA44()
{
  return MEMORY[0x24BE17F20]();
}

uint64_t sub_227E5FA50()
{
  return MEMORY[0x24BE17F28]();
}

uint64_t sub_227E5FA5C()
{
  return MEMORY[0x24BE17F30]();
}

uint64_t sub_227E5FA68()
{
  return MEMORY[0x24BE17F38]();
}

uint64_t sub_227E5FA74()
{
  return MEMORY[0x24BE17F40]();
}

uint64_t sub_227E5FA80()
{
  return MEMORY[0x24BE17F48]();
}

uint64_t sub_227E5FA8C()
{
  return MEMORY[0x24BE17F50]();
}

uint64_t sub_227E5FA98()
{
  return MEMORY[0x24BE17F58]();
}

uint64_t sub_227E5FAA4()
{
  return MEMORY[0x24BE17F60]();
}

uint64_t sub_227E5FAB0()
{
  return MEMORY[0x24BE17F68]();
}

uint64_t sub_227E5FABC()
{
  return MEMORY[0x24BE17F70]();
}

uint64_t sub_227E5FAC8()
{
  return MEMORY[0x24BE17F78]();
}

uint64_t sub_227E5FAD4()
{
  return MEMORY[0x24BE17F80]();
}

uint64_t sub_227E5FAE0()
{
  return MEMORY[0x24BE17F88]();
}

uint64_t sub_227E5FAEC()
{
  return MEMORY[0x24BE17F90]();
}

uint64_t sub_227E5FAF8()
{
  return MEMORY[0x24BE17F98]();
}

uint64_t sub_227E5FB04()
{
  return MEMORY[0x24BE17FA0]();
}

uint64_t sub_227E5FB10()
{
  return MEMORY[0x24BE17FA8]();
}

uint64_t sub_227E5FB1C()
{
  return MEMORY[0x24BE17FB0]();
}

uint64_t sub_227E5FB28()
{
  return MEMORY[0x24BE17FB8]();
}

uint64_t sub_227E5FB34()
{
  return MEMORY[0x24BE17FC0]();
}

uint64_t sub_227E5FB40()
{
  return MEMORY[0x24BE17FC8]();
}

uint64_t sub_227E5FB4C()
{
  return MEMORY[0x24BE17FD0]();
}

uint64_t sub_227E5FB58()
{
  return MEMORY[0x24BE17FD8]();
}

uint64_t sub_227E5FB64()
{
  return MEMORY[0x24BE17FE0]();
}

uint64_t sub_227E5FB70()
{
  return MEMORY[0x24BE17FE8]();
}

uint64_t sub_227E5FB7C()
{
  return MEMORY[0x24BE17FF0]();
}

uint64_t sub_227E5FB88()
{
  return MEMORY[0x24BE17FF8]();
}

uint64_t sub_227E5FB94()
{
  return MEMORY[0x24BE18000]();
}

uint64_t sub_227E5FBA0()
{
  return MEMORY[0x24BE18008]();
}

uint64_t sub_227E5FBAC()
{
  return MEMORY[0x24BE18010]();
}

uint64_t sub_227E5FBB8()
{
  return MEMORY[0x24BE18018]();
}

uint64_t sub_227E5FBC4()
{
  return MEMORY[0x24BE18020]();
}

uint64_t sub_227E5FBD0()
{
  return MEMORY[0x24BE18028]();
}

uint64_t sub_227E5FBDC()
{
  return MEMORY[0x24BE18030]();
}

uint64_t sub_227E5FBE8()
{
  return MEMORY[0x24BE18038]();
}

uint64_t sub_227E5FBF4()
{
  return MEMORY[0x24BE181C0]();
}

uint64_t sub_227E5FC00()
{
  return MEMORY[0x24BE181C8]();
}

uint64_t sub_227E5FC0C()
{
  return MEMORY[0x24BE181D0]();
}

uint64_t sub_227E5FC18()
{
  return MEMORY[0x24BE181F0]();
}

uint64_t sub_227E5FC24()
{
  return MEMORY[0x24BE181F8]();
}

uint64_t sub_227E5FC30()
{
  return MEMORY[0x24BE18200]();
}

uint64_t sub_227E5FC3C()
{
  return MEMORY[0x24BE18228]();
}

uint64_t sub_227E5FC48()
{
  return MEMORY[0x24BE183A0]();
}

uint64_t sub_227E5FC54()
{
  return MEMORY[0x24BE183A8]();
}

uint64_t sub_227E5FC60()
{
  return MEMORY[0x24BE183B0]();
}

uint64_t sub_227E5FC6C()
{
  return MEMORY[0x24BE18450]();
}

uint64_t sub_227E5FC78()
{
  return MEMORY[0x24BE18458]();
}

uint64_t sub_227E5FC84()
{
  return MEMORY[0x24BE18460]();
}

uint64_t sub_227E5FC90()
{
  return MEMORY[0x24BE18470]();
}

uint64_t sub_227E5FC9C()
{
  return MEMORY[0x24BE18478]();
}

uint64_t sub_227E5FCA8()
{
  return MEMORY[0x24BE18480]();
}

uint64_t sub_227E5FCB4()
{
  return MEMORY[0x24BE18488]();
}

uint64_t sub_227E5FCC0()
{
  return MEMORY[0x24BE18490]();
}

uint64_t sub_227E5FCCC()
{
  return MEMORY[0x24BE184C0]();
}

uint64_t sub_227E5FCD8()
{
  return MEMORY[0x24BE184E8]();
}

uint64_t sub_227E5FCE4()
{
  return MEMORY[0x24BE18568]();
}

uint64_t sub_227E5FCF0()
{
  return MEMORY[0x24BE18570]();
}

uint64_t sub_227E5FCFC()
{
  return MEMORY[0x24BE18578]();
}

uint64_t sub_227E5FD08()
{
  return MEMORY[0x24BE18580]();
}

uint64_t sub_227E5FD14()
{
  return MEMORY[0x24BE18590]();
}

uint64_t sub_227E5FD20()
{
  return MEMORY[0x24BE186B8]();
}

uint64_t sub_227E5FD2C()
{
  return MEMORY[0x24BE186C0]();
}

uint64_t sub_227E5FD38()
{
  return MEMORY[0x24BE186C8]();
}

uint64_t sub_227E5FD44()
{
  return MEMORY[0x24BE186D0]();
}

uint64_t sub_227E5FD50()
{
  return MEMORY[0x24BE186D8]();
}

uint64_t sub_227E5FD5C()
{
  return MEMORY[0x24BE18758]();
}

uint64_t sub_227E5FD68()
{
  return MEMORY[0x24BE18760]();
}

uint64_t sub_227E5FD74()
{
  return MEMORY[0x24BE18768]();
}

uint64_t sub_227E5FD80()
{
  return MEMORY[0x24BE18818]();
}

uint64_t sub_227E5FD8C()
{
  return MEMORY[0x24BE18838]();
}

uint64_t sub_227E5FD98()
{
  return MEMORY[0x24BE18860]();
}

uint64_t sub_227E5FDA4()
{
  return MEMORY[0x24BE188A0]();
}

uint64_t sub_227E5FDB0()
{
  return MEMORY[0x24BE188A8]();
}

uint64_t sub_227E5FDBC()
{
  return MEMORY[0x24BE188C8]();
}

uint64_t sub_227E5FDC8()
{
  return MEMORY[0x24BE188E0]();
}

uint64_t sub_227E5FDD4()
{
  return MEMORY[0x24BE188F0]();
}

uint64_t sub_227E5FDE0()
{
  return MEMORY[0x24BE188F8]();
}

uint64_t sub_227E5FDEC()
{
  return MEMORY[0x24BE18968]();
}

uint64_t sub_227E5FDF8()
{
  return MEMORY[0x24BE18970]();
}

uint64_t sub_227E5FE04()
{
  return MEMORY[0x24BE18978]();
}

uint64_t sub_227E5FE10()
{
  return MEMORY[0x24BE18988]();
}

uint64_t sub_227E5FE1C()
{
  return MEMORY[0x24BE189A8]();
}

uint64_t sub_227E5FE28()
{
  return MEMORY[0x24BE189B0]();
}

uint64_t sub_227E5FE34()
{
  return MEMORY[0x24BE189C0]();
}

uint64_t sub_227E5FE40()
{
  return MEMORY[0x24BE189C8]();
}

uint64_t sub_227E5FE4C()
{
  return MEMORY[0x24BE189D0]();
}

uint64_t sub_227E5FE58()
{
  return MEMORY[0x24BE189E8]();
}

uint64_t sub_227E5FE64()
{
  return MEMORY[0x24BE189F0]();
}

uint64_t sub_227E5FE70()
{
  return MEMORY[0x24BE18A00]();
}

uint64_t sub_227E5FE7C()
{
  return MEMORY[0x24BE18A08]();
}

uint64_t sub_227E5FE88()
{
  return MEMORY[0x24BE18A88]();
}

uint64_t sub_227E5FE94()
{
  return MEMORY[0x24BE18A90]();
}

uint64_t sub_227E5FEA0()
{
  return MEMORY[0x24BE18A98]();
}

uint64_t sub_227E5FEAC()
{
  return MEMORY[0x24BE18AA8]();
}

uint64_t sub_227E5FEB8()
{
  return MEMORY[0x24BEE01A8]();
}

uint64_t sub_227E5FEC4()
{
  return MEMORY[0x24BDB8BC0]();
}

uint64_t sub_227E5FED0()
{
  return MEMORY[0x24BDCF808]();
}

uint64_t sub_227E5FEDC()
{
  return MEMORY[0x24BDCF830]();
}

uint64_t sub_227E5FEE8()
{
  return MEMORY[0x24BEE0270]();
}

uint64_t sub_227E5FEF4()
{
  return MEMORY[0x24BEE0278]();
}

uint64_t sub_227E5FF00()
{
  return MEMORY[0x24BEE0290]();
}

uint64_t sub_227E5FF0C()
{
  return MEMORY[0x24BEE02C0]();
}

uint64_t sub_227E5FF18()
{
  return MEMORY[0x24BEE03B0]();
}

uint64_t sub_227E5FF24()
{
  return MEMORY[0x24BEE0460]();
}

uint64_t sub_227E5FF30()
{
  return MEMORY[0x24BEE04B0]();
}

uint64_t sub_227E5FF3C()
{
  return MEMORY[0x24BEE0610]();
}

uint64_t sub_227E5FF48()
{
  return MEMORY[0x24BEE0618]();
}

uint64_t sub_227E5FF54()
{
  return MEMORY[0x24BEE07D0]();
}

uint64_t sub_227E5FF60()
{
  return MEMORY[0x24BEE07E0]();
}

uint64_t sub_227E5FF6C()
{
  return MEMORY[0x24BEE0980]();
}

uint64_t sub_227E5FF78()
{
  return MEMORY[0x24BDCF9E0]();
}

uint64_t sub_227E5FF84()
{
  return MEMORY[0x24BDCFA28]();
}

uint64_t sub_227E5FF90()
{
  return MEMORY[0x24BDCFA38]();
}

uint64_t sub_227E5FF9C()
{
  return MEMORY[0x24BDCFA78]();
}

uint64_t sub_227E5FFA8()
{
  return MEMORY[0x24BDCFAC8]();
}

uint64_t sub_227E5FFB4()
{
  return MEMORY[0x24BDCFAF8]();
}

uint64_t sub_227E5FFC0()
{
  return MEMORY[0x24BEE09F0]();
}

uint64_t sub_227E5FFCC()
{
  return MEMORY[0x24BEE0A08]();
}

uint64_t sub_227E5FFD8()
{
  return MEMORY[0x24BEE0A10]();
}

uint64_t sub_227E5FFE4()
{
  return MEMORY[0x24BEE0A30]();
}

uint64_t sub_227E5FFF0()
{
  return MEMORY[0x24BEE0A50]();
}

uint64_t sub_227E5FFFC()
{
  return MEMORY[0x24BEE0A70]();
}

uint64_t sub_227E60008()
{
  return MEMORY[0x24BEE0B20]();
}

uint64_t sub_227E60014()
{
  return MEMORY[0x24BEE0B70]();
}

uint64_t sub_227E60020()
{
  return MEMORY[0x24BEE0BB0]();
}

uint64_t sub_227E6002C()
{
  return MEMORY[0x24BEE0BC0]();
}

uint64_t sub_227E60038()
{
  return MEMORY[0x24BEE0C10]();
}

uint64_t sub_227E60044()
{
  return MEMORY[0x24BEE0C30]();
}

uint64_t sub_227E60050()
{
  return MEMORY[0x24BEE0C38]();
}

uint64_t sub_227E6005C()
{
  return MEMORY[0x24BEE0CA0]();
}

uint64_t sub_227E60068()
{
  return MEMORY[0x24BEE0D98]();
}

uint64_t sub_227E60074()
{
  return MEMORY[0x24BEE0DE0]();
}

uint64_t sub_227E60080()
{
  return MEMORY[0x24BEE0DE8]();
}

uint64_t sub_227E6008C()
{
  return MEMORY[0x24BEE0E00]();
}

uint64_t sub_227E60098()
{
  return MEMORY[0x24BEE0EE0]();
}

uint64_t sub_227E600A4()
{
  return MEMORY[0x24BEE1110]();
}

uint64_t sub_227E600B0()
{
  return MEMORY[0x24BDCFBA8]();
}

uint64_t sub_227E600BC()
{
  return MEMORY[0x24BDCFBC8]();
}

uint64_t sub_227E600C8()
{
  return MEMORY[0x24BEE1120]();
}

uint64_t sub_227E600D4()
{
  return MEMORY[0x24BEE1128]();
}

uint64_t sub_227E600E0()
{
  return MEMORY[0x24BEE1160]();
}

uint64_t sub_227E600EC()
{
  return MEMORY[0x24BEE1190]();
}

uint64_t sub_227E600F8()
{
  return MEMORY[0x24BEE11B8]();
}

uint64_t sub_227E60104()
{
  return MEMORY[0x24BEE6800]();
}

uint64_t sub_227E60110()
{
  return MEMORY[0x24BEE6828]();
}

uint64_t sub_227E6011C()
{
  return MEMORY[0x24BEE6988]();
}

uint64_t sub_227E60128()
{
  return MEMORY[0x24BEE6990]();
}

uint64_t sub_227E60134()
{
  return MEMORY[0x24BDCFCC0]();
}

uint64_t sub_227E60140()
{
  return MEMORY[0x24BEE1598]();
}

uint64_t sub_227E6014C()
{
  return MEMORY[0x24BEE15D8]();
}

uint64_t sub_227E60158()
{
  return MEMORY[0x24BEE1678]();
}

uint64_t sub_227E60164()
{
  return MEMORY[0x24BEE18A0]();
}

uint64_t sub_227E60170()
{
  return MEMORY[0x24BE0FB60]();
}

uint64_t sub_227E6017C()
{
  return MEMORY[0x24BEE1908]();
}

uint64_t sub_227E60188()
{
  return MEMORY[0x24BEE1910]();
}

uint64_t sub_227E60194()
{
  return MEMORY[0x24BDB8C10]();
}

uint64_t sub_227E601A0()
{
  return MEMORY[0x24BDB8C18]();
}

uint64_t sub_227E601AC()
{
  return MEMORY[0x24BDB8C50]();
}

uint64_t sub_227E601B8()
{
  return MEMORY[0x24BDB8C58]();
}

uint64_t sub_227E601C4()
{
  return MEMORY[0x24BDB8C60]();
}

uint64_t sub_227E601D0()
{
  return MEMORY[0x24BDB8C68]();
}

uint64_t sub_227E601DC()
{
  return MEMORY[0x24BDB8C98]();
}

uint64_t sub_227E601E8()
{
  return MEMORY[0x24BDB8CA0]();
}

uint64_t sub_227E601F4()
{
  return MEMORY[0x24BDB8CB0]();
}

uint64_t sub_227E60200()
{
  return MEMORY[0x24BDB8CB8]();
}

uint64_t sub_227E6020C()
{
  return MEMORY[0x24BDB8CC0]();
}

uint64_t sub_227E60218()
{
  return MEMORY[0x24BEE78F0]();
}

uint64_t sub_227E60224()
{
  return MEMORY[0x24BEE7908]();
}

uint64_t sub_227E60230()
{
  return MEMORY[0x24BEE7910]();
}

uint64_t sub_227E6023C()
{
  return MEMORY[0x24BEE7920]();
}

uint64_t sub_227E60248()
{
  return MEMORY[0x24BEE7928]();
}

uint64_t sub_227E60254()
{
  return MEMORY[0x24BDB8D28]();
}

uint64_t sub_227E60260()
{
  return MEMORY[0x24BDB8D38]();
}

uint64_t sub_227E6026C()
{
  return MEMORY[0x24BDCFF70]();
}

uint64_t sub_227E60278()
{
  return MEMORY[0x24BDCFFA0]();
}

uint64_t sub_227E60284()
{
  return MEMORY[0x24BEE5660]();
}

uint64_t sub_227E60290()
{
  return MEMORY[0x24BEE5678]();
}

uint64_t sub_227E6029C()
{
  return MEMORY[0x24BEE5688]();
}

uint64_t sub_227E602A8()
{
  return MEMORY[0x24BEE56F0]();
}

uint64_t sub_227E602B4()
{
  return MEMORY[0x24BEE5760]();
}

uint64_t sub_227E602C0()
{
  return MEMORY[0x24BEE5778]();
}

uint64_t sub_227E602CC()
{
  return MEMORY[0x24BEE5780]();
}

uint64_t sub_227E602D8()
{
  return MEMORY[0x24BEE5790]();
}

uint64_t sub_227E602E4()
{
  return MEMORY[0x24BEE57A0]();
}

uint64_t sub_227E602F0()
{
  return MEMORY[0x24BEE57B0]();
}

uint64_t sub_227E602FC()
{
  return MEMORY[0x24BDB8D98]();
}

uint64_t sub_227E60308()
{
  return MEMORY[0x24BDD0170]();
}

uint64_t sub_227E60314()
{
  return MEMORY[0x24BDB8E30]();
}

uint64_t sub_227E60320()
{
  return MEMORY[0x24BDB8E48]();
}

uint64_t sub_227E6032C()
{
  return MEMORY[0x24BDB8E50]();
}

uint64_t sub_227E60338()
{
  return MEMORY[0x24BE0FB68]();
}

uint64_t sub_227E60344()
{
  return MEMORY[0x24BEE5BB8]();
}

uint64_t sub_227E60350()
{
  return MEMORY[0x24BEE5BC0]();
}

uint64_t sub_227E6035C()
{
  return MEMORY[0x24BEE5BD0]();
}

uint64_t sub_227E60368()
{
  return MEMORY[0x24BDD0248]();
}

uint64_t sub_227E60374()
{
  return MEMORY[0x24BEE7978]();
}

uint64_t sub_227E60380()
{
  return MEMORY[0x24BEE79A0]();
}

uint64_t sub_227E6038C()
{
  return MEMORY[0x24BEE1C68]();
}

uint64_t sub_227E60398()
{
  return MEMORY[0x24BEE1E68]();
}

uint64_t sub_227E603A4()
{
  return MEMORY[0x24BEE1E70]();
}

uint64_t sub_227E603B0()
{
  return MEMORY[0x24BEE1F00]();
}

uint64_t sub_227E603BC()
{
  return MEMORY[0x24BEE1F48]();
}

uint64_t sub_227E603C8()
{
  return MEMORY[0x24BEE2090]();
}

uint64_t sub_227E603D4()
{
  return MEMORY[0x24BEE20A8]();
}

uint64_t sub_227E603E0()
{
  return MEMORY[0x24BEE22C0]();
}

uint64_t sub_227E603EC()
{
  return MEMORY[0x24BEE22D0]();
}

uint64_t sub_227E603F8()
{
  return MEMORY[0x24BEE22E0]();
}

uint64_t sub_227E60404()
{
  return MEMORY[0x24BEE2300]();
}

uint64_t sub_227E60410()
{
  return MEMORY[0x24BEE2330]();
}

uint64_t sub_227E6041C()
{
  return MEMORY[0x24BEE2340]();
}

uint64_t sub_227E60428()
{
  return MEMORY[0x24BEE2358]();
}

uint64_t sub_227E60434()
{
  return MEMORY[0x24BEE2360]();
}

uint64_t sub_227E60440()
{
  return MEMORY[0x24BEE23A0]();
}

uint64_t sub_227E6044C()
{
  return MEMORY[0x24BEE23A8]();
}

uint64_t sub_227E60458()
{
  return MEMORY[0x24BEE23E8]();
}

uint64_t sub_227E60464()
{
  return MEMORY[0x24BEE24B8]();
}

uint64_t sub_227E60470()
{
  return MEMORY[0x24BEE24C0]();
}

uint64_t sub_227E6047C()
{
  return MEMORY[0x24BEE24C8]();
}

uint64_t sub_227E60488()
{
  return MEMORY[0x24BEE24D0]();
}

uint64_t sub_227E60494()
{
  return MEMORY[0x24BEE2510]();
}

uint64_t sub_227E604A0()
{
  return MEMORY[0x24BEE2518]();
}

uint64_t sub_227E604AC()
{
  return MEMORY[0x24BEE25B8]();
}

uint64_t sub_227E604B8()
{
  return MEMORY[0x24BEE2658]();
}

uint64_t sub_227E604C4()
{
  return MEMORY[0x24BEE2660]();
}

uint64_t sub_227E604D0()
{
  return MEMORY[0x24BEE2838]();
}

uint64_t sub_227E604DC()
{
  return MEMORY[0x24BEE2908]();
}

uint64_t sub_227E604E8()
{
  return MEMORY[0x24BEE2938]();
}

uint64_t sub_227E604F4()
{
  return MEMORY[0x24BEE2958]();
}

uint64_t sub_227E60500()
{
  return MEMORY[0x24BEE2980]();
}

uint64_t sub_227E6050C()
{
  return MEMORY[0x24BEE2988]();
}

uint64_t sub_227E60518()
{
  return MEMORY[0x24BEE2BE0]();
}

uint64_t sub_227E60524()
{
  return MEMORY[0x24BEE2EA8]();
}

uint64_t sub_227E60530()
{
  return MEMORY[0x24BEE2EE0]();
}

uint64_t sub_227E6053C()
{
  return MEMORY[0x24BEE2F08]();
}

uint64_t sub_227E60548()
{
  return MEMORY[0x24BEE2F18]();
}

uint64_t sub_227E60554()
{
  return MEMORY[0x24BEE2F40]();
}

uint64_t sub_227E60560()
{
  return MEMORY[0x24BEE2F48]();
}

uint64_t sub_227E6056C()
{
  return MEMORY[0x24BEE3068]();
}

uint64_t sub_227E60578()
{
  return MEMORY[0x24BEE3080]();
}

uint64_t sub_227E60584()
{
  return MEMORY[0x24BEE3088]();
}

uint64_t sub_227E60590()
{
  return MEMORY[0x24BEE3090]();
}

uint64_t sub_227E6059C()
{
  return MEMORY[0x24BEE3098]();
}

uint64_t sub_227E605A8()
{
  return MEMORY[0x24BEE30B0]();
}

uint64_t sub_227E605B4()
{
  return MEMORY[0x24BEE3288]();
}

uint64_t sub_227E605C0()
{
  return MEMORY[0x24BEE32D8]();
}

uint64_t sub_227E605CC()
{
  return MEMORY[0x24BEE3308]();
}

uint64_t sub_227E605D8()
{
  return MEMORY[0x24BEE3350]();
}

uint64_t sub_227E605E4()
{
  return MEMORY[0x24BEE3358]();
}

uint64_t sub_227E605F0()
{
  return MEMORY[0x24BEE3360]();
}

uint64_t sub_227E605FC()
{
  return MEMORY[0x24BEE3370]();
}

uint64_t sub_227E60608()
{
  return MEMORY[0x24BEE3380]();
}

uint64_t sub_227E60614()
{
  return MEMORY[0x24BEE3428]();
}

uint64_t sub_227E60620()
{
  return MEMORY[0x24BEE3458]();
}

uint64_t sub_227E6062C()
{
  return MEMORY[0x24BEE34A0]();
}

uint64_t sub_227E60638()
{
  return MEMORY[0x24BEE34A8]();
}

uint64_t sub_227E60644()
{
  return MEMORY[0x24BEE34B0]();
}

uint64_t sub_227E60650()
{
  return MEMORY[0x24BEE34C0]();
}

uint64_t sub_227E6065C()
{
  return MEMORY[0x24BEE34D0]();
}

uint64_t sub_227E60668()
{
  return MEMORY[0x24BEE3548]();
}

uint64_t sub_227E60674()
{
  return MEMORY[0x24BEE3568]();
}

uint64_t sub_227E60680()
{
  return MEMORY[0x24BEE7040]();
}

uint64_t sub_227E6068C()
{
  return MEMORY[0x24BEE3A20]();
}

uint64_t sub_227E60698()
{
  return MEMORY[0x24BEE3A30]();
}

uint64_t sub_227E606A4()
{
  return MEMORY[0x24BEE3ED0]();
}

uint64_t sub_227E606B0()
{
  return MEMORY[0x24BEE3ED8]();
}

uint64_t sub_227E606BC()
{
  return MEMORY[0x24BDD06E0]();
}

uint64_t sub_227E606C8()
{
  return MEMORY[0x24BDD06F0]();
}

uint64_t sub_227E606D4()
{
  return MEMORY[0x24BDD0708]();
}

uint64_t sub_227E606E0()
{
  return MEMORY[0x24BEE3EF8]();
}

uint64_t sub_227E606EC()
{
  return MEMORY[0x24BEE3F00]();
}

uint64_t sub_227E606F8()
{
  return MEMORY[0x24BEE3F08]();
}

uint64_t sub_227E60704()
{
  return MEMORY[0x24BEE3F10]();
}

uint64_t sub_227E60710()
{
  return MEMORY[0x24BEE42D8]();
}

uint64_t sub_227E6071C()
{
  return MEMORY[0x24BEE42E0]();
}

uint64_t sub_227E60728()
{
  return MEMORY[0x24BEE42F8]();
}

uint64_t sub_227E60734()
{
  return MEMORY[0x24BEE4328]();
}

uint64_t sub_227E60740()
{
  return MEMORY[0x24BEE4608]();
}

uint64_t sub_227E6074C()
{
  return MEMORY[0x24BEE4638]();
}

uint64_t sub_227E60758()
{
  return MEMORY[0x24BEE4A08]();
}

uint64_t sub_227E60764()
{
  return MEMORY[0x24BEE4A10]();
}

uint64_t BUClamp()
{
  return MEMORY[0x24BE0FBB0]();
}

uint64_t BUClassAndProtocolCast()
{
  return MEMORY[0x24BE0FBB8]();
}

uint64_t BUDynamicCast()
{
  return MEMORY[0x24BE0FBC0]();
}

uint64_t BUIsRunningTests()
{
  return MEMORY[0x24BE0FBD0]();
}

uint64_t BUProtocolCast()
{
  return MEMORY[0x24BE0FBD8]();
}

void CCHmacFinal(CCHmacContext *ctx, void *macOut)
{
  MEMORY[0x24BDAC240](ctx, macOut);
}

void CCHmacInit(CCHmacContext *ctx, CCHmacAlgorithm algorithm, const void *key, size_t keyLength)
{
  MEMORY[0x24BDAC248](ctx, *(_QWORD *)&algorithm, key, keyLength);
}

void CCHmacUpdate(CCHmacContext *ctx, const void *data, size_t dataLength)
{
  MEMORY[0x24BDAC250](ctx, data, dataLength);
}

CFIndex CFArrayGetCount(CFArrayRef theArray)
{
  return MEMORY[0x24BDBB820](theArray);
}

const void *__cdecl CFArrayGetValueAtIndex(CFArrayRef theArray, CFIndex idx)
{
  return (const void *)MEMORY[0x24BDBB860](theArray, idx);
}

CFBundleRef CFBundleCreate(CFAllocatorRef allocator, CFURLRef bundleURL)
{
  return (CFBundleRef)MEMORY[0x24BDBBA98](allocator, bundleURL);
}

CFTypeID CFGetTypeID(CFTypeRef cf)
{
  return MEMORY[0x24BDBBEF8](cf);
}

void CFRelease(CFTypeRef cf)
{
  MEMORY[0x24BDBC298](cf);
}

CFRunLoopRef CFRunLoopGetCurrent(void)
{
  return (CFRunLoopRef)MEMORY[0x24BDBC2F8]();
}

CFComparisonResult CFStringCompare(CFStringRef theString1, CFStringRef theString2, CFStringCompareFlags compareOptions)
{
  return MEMORY[0x24BDBC4D0](theString1, theString2, compareOptions);
}

CFTypeID CFStringGetTypeID(void)
{
  return MEMORY[0x24BDBC698]();
}

CFUUIDRef CFUUIDCreate(CFAllocatorRef alloc)
{
  return (CFUUIDRef)MEMORY[0x24BDBC8D0](alloc);
}

CFStringRef CFUUIDCreateString(CFAllocatorRef alloc, CFUUIDRef uuid)
{
  return (CFStringRef)MEMORY[0x24BDBC8E8](alloc, uuid);
}

void NSLog(NSString *format, ...)
{
  MEMORY[0x24BDD1000](format);
}

NSArray *__cdecl NSSearchPathForDirectoriesInDomains(NSSearchPathDirectory directory, NSSearchPathDomainMask domainMask, BOOL expandTilde)
{
  return (NSArray *)MEMORY[0x24BDD1208](directory, domainMask, expandTilde);
}

NSString *__cdecl NSStringFromClass(Class aClass)
{
  return (NSString *)MEMORY[0x24BDD1240](aClass);
}

NSString *__cdecl NSStringFromSelector(SEL aSelector)
{
  return (NSString *)MEMORY[0x24BDD1268](aSelector);
}

NSString *NSTemporaryDirectory(void)
{
  return (NSString *)MEMORY[0x24BDD1280]();
}

uint64_t PBDataWriterWriteBOOLField()
{
  return MEMORY[0x24BE7AF80]();
}

uint64_t PBDataWriterWriteDataField()
{
  return MEMORY[0x24BE7AF88]();
}

uint64_t PBDataWriterWriteDoubleField()
{
  return MEMORY[0x24BE7AF90]();
}

uint64_t PBDataWriterWriteFloatField()
{
  return MEMORY[0x24BE7AFA0]();
}

uint64_t PBDataWriterWriteInt32Field()
{
  return MEMORY[0x24BE7AFA8]();
}

uint64_t PBDataWriterWriteStringField()
{
  return MEMORY[0x24BE7AFD8]();
}

uint64_t PBDataWriterWriteSubmessage()
{
  return MEMORY[0x24BE7AFE8]();
}

uint64_t PBDataWriterWriteUint32Field()
{
  return MEMORY[0x24BE7AFF0]();
}

uint64_t PBDataWriterWriteUint64Field()
{
  return MEMORY[0x24BE7B008]();
}

uint64_t PBReaderPlaceMark()
{
  return MEMORY[0x24BE7B018]();
}

uint64_t PBReaderReadData()
{
  return MEMORY[0x24BE7B028]();
}

uint64_t PBReaderReadString()
{
  return MEMORY[0x24BE7B030]();
}

uint64_t PBReaderRecallMark()
{
  return MEMORY[0x24BE7B038]();
}

uint64_t PBReaderSkipValueWithTag()
{
  return MEMORY[0x24BE7B048]();
}

SCNetworkReachabilityRef SCNetworkReachabilityCreateWithAddress(CFAllocatorRef allocator, const sockaddr *address)
{
  return (SCNetworkReachabilityRef)MEMORY[0x24BDF5760](allocator, address);
}

SCNetworkReachabilityRef SCNetworkReachabilityCreateWithName(CFAllocatorRef allocator, const char *nodename)
{
  return (SCNetworkReachabilityRef)MEMORY[0x24BDF5770](allocator, nodename);
}

Boolean SCNetworkReachabilityGetFlags(SCNetworkReachabilityRef target, SCNetworkReachabilityFlags *flags)
{
  return MEMORY[0x24BDF5790](target, flags);
}

Boolean SCNetworkReachabilityScheduleWithRunLoop(SCNetworkReachabilityRef target, CFRunLoopRef runLoop, CFStringRef runLoopMode)
{
  return MEMORY[0x24BDF5798](target, runLoop, runLoopMode);
}

Boolean SCNetworkReachabilitySetCallback(SCNetworkReachabilityRef target, SCNetworkReachabilityCallBack callout, SCNetworkReachabilityContext *context)
{
  return MEMORY[0x24BDF57A0](target, callout, context);
}

Boolean SCNetworkReachabilityUnscheduleFromRunLoop(SCNetworkReachabilityRef target, CFRunLoopRef runLoop, CFStringRef runLoopMode)
{
  return MEMORY[0x24BDF57B0](target, runLoop, runLoopMode);
}

int SecRandomCopyBytes(SecRandomRef rnd, size_t count, void *bytes)
{
  return MEMORY[0x24BDE8CC8](rnd, count, bytes);
}

uint64_t TCCAccessCopyBundleIdentifiersDisabledForService()
{
  return MEMORY[0x24BEB3760]();
}

uint64_t TCCAccessCopyBundleIdentifiersForService()
{
  return MEMORY[0x24BEB3768]();
}

uint64_t TCCAccessSetForBundleId()
{
  return MEMORY[0x24BEB37F0]();
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return (void *)MEMORY[0x24BDAC720](aBlock);
}

void _Block_object_dispose(const void *a1, const int a2)
{
  MEMORY[0x24BDAC730](a1, *(_QWORD *)&a2);
}

void _Block_release(const void *aBlock)
{
  MEMORY[0x24BDAC738](aBlock);
}

void _Unwind_Resume(_Unwind_Exception *exception_object)
{
  MEMORY[0x24BDAC780](exception_object);
}

void __assert_rtn(const char *a1, const char *a2, int a3, const char *a4)
{
  MEMORY[0x24BDAC7A0](a1, a2, *(_QWORD *)&a3, a4);
}

os_activity_t _os_activity_create(void *dso, const char *description, os_activity_t activity, os_activity_flag_t flags)
{
  return (os_activity_t)MEMORY[0x24BDACB00](dso, description, activity, *(_QWORD *)&flags);
}

uint64_t _os_feature_enabled_impl()
{
  return MEMORY[0x24BDACB60]();
}

void _os_log_debug_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x24BDACB68](dso, log, type, format, buf, *(_QWORD *)&size);
}

void _os_log_error_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x24BDACB80](dso, log, type, format, buf, *(_QWORD *)&size);
}

void _os_log_fault_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x24BDACB88](dso, log, type, format, buf, *(_QWORD *)&size);
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x24BDACB90](dso, log, type, format, buf, *(_QWORD *)&size);
}

uint64_t _swift_stdlib_bridgeErrorToNSError()
{
  return MEMORY[0x24BEE4B30]();
}

uint64_t _swift_stdlib_reportUnimplementedInitializer()
{
  return MEMORY[0x24BEE4B38]();
}

void bzero(void *a1, size_t a2)
{
  MEMORY[0x24BDAD320](a1, a2);
}

void dispatch_after(dispatch_time_t when, dispatch_queue_t queue, dispatch_block_t block)
{
  MEMORY[0x24BDADC60](when, queue, block);
}

void dispatch_assert_queue_V2(dispatch_queue_t queue)
{
  MEMORY[0x24BDADCA8](queue);
}

void dispatch_async(dispatch_queue_t queue, dispatch_block_t block)
{
  MEMORY[0x24BDADCC0](queue, block);
}

dispatch_queue_global_t dispatch_get_global_queue(intptr_t identifier, uintptr_t flags)
{
  return (dispatch_queue_global_t)MEMORY[0x24BDADDA8](identifier, flags);
}

dispatch_group_t dispatch_group_create(void)
{
  return (dispatch_group_t)MEMORY[0x24BDADDC8]();
}

void dispatch_group_enter(dispatch_group_t group)
{
  MEMORY[0x24BDADDD0](group);
}

void dispatch_group_leave(dispatch_group_t group)
{
  MEMORY[0x24BDADDD8](group);
}

void dispatch_group_notify(dispatch_group_t group, dispatch_queue_t queue, dispatch_block_t block)
{
  MEMORY[0x24BDADDE0](group, queue, block);
}

intptr_t dispatch_group_wait(dispatch_group_t group, dispatch_time_t timeout)
{
  return MEMORY[0x24BDADDF0](group, timeout);
}

void dispatch_once(dispatch_once_t *predicate, dispatch_block_t block)
{
  MEMORY[0x24BDADE98](predicate, block);
}

dispatch_queue_attr_t dispatch_queue_attr_make_with_autorelease_frequency(dispatch_queue_attr_t attr, dispatch_autorelease_frequency_t frequency)
{
  return (dispatch_queue_attr_t)MEMORY[0x24BDADEB8](attr, frequency);
}

dispatch_queue_attr_t dispatch_queue_attr_make_with_qos_class(dispatch_queue_attr_t attr, dispatch_qos_class_t qos_class, int relative_priority)
{
  return (dispatch_queue_attr_t)MEMORY[0x24BDADEC8](attr, *(_QWORD *)&qos_class, *(_QWORD *)&relative_priority);
}

dispatch_queue_t dispatch_queue_create(const char *label, dispatch_queue_attr_t attr)
{
  return (dispatch_queue_t)MEMORY[0x24BDADED0](label, attr);
}

void dispatch_resume(dispatch_object_t object)
{
  MEMORY[0x24BDADF18](object);
}

void dispatch_source_cancel(dispatch_source_t source)
{
  MEMORY[0x24BDADF68](source);
}

dispatch_source_t dispatch_source_create(dispatch_source_type_t type, uintptr_t handle, uintptr_t mask, dispatch_queue_t queue)
{
  return (dispatch_source_t)MEMORY[0x24BDADF70](type, handle, mask, queue);
}

void dispatch_source_set_cancel_handler(dispatch_source_t source, dispatch_block_t handler)
{
  MEMORY[0x24BDADFA0](source, handler);
}

void dispatch_source_set_event_handler(dispatch_source_t source, dispatch_block_t handler)
{
  MEMORY[0x24BDADFB0](source, handler);
}

void dispatch_source_set_timer(dispatch_source_t source, dispatch_time_t start, uint64_t interval, uint64_t leeway)
{
  MEMORY[0x24BDADFD0](source, start, interval, leeway);
}

void dispatch_sync(dispatch_queue_t queue, dispatch_block_t block)
{
  MEMORY[0x24BDADFE8](queue, block);
}

dispatch_time_t dispatch_time(dispatch_time_t when, int64_t delta)
{
  return MEMORY[0x24BDADFF8](when, delta);
}

long double fmod(long double __x, long double __y)
{
  long double result;

  MEMORY[0x24BDAE3F0](__x, __y);
  return result;
}

void free(void *a1)
{
  MEMORY[0x24BDAE450](a1);
}

uint64_t kdebug_trace()
{
  return MEMORY[0x24BDAE958]();
}

void *__cdecl malloc(size_t __size)
{
  return (void *)MEMORY[0x24BDAED08](__size);
}

size_t malloc_size(const void *ptr)
{
  return MEMORY[0x24BDAED60](ptr);
}

int memcmp(const void *__s1, const void *__s2, size_t __n)
{
  return MEMORY[0x24BDAEE78](__s1, __s2, __n);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x24BDAEE80](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x24BDAEE98](__dst, __src, __len);
}

uint32_t notify_cancel(int token)
{
  return MEMORY[0x24BDAF138](*(_QWORD *)&token);
}

uint32_t notify_register_dispatch(const char *name, int *out_token, dispatch_queue_t queue, notify_handler_t handler)
{
  return MEMORY[0x24BDAF170](name, out_token, queue, handler);
}

id objc_alloc(Class a1)
{
  return (id)MEMORY[0x24BEDCF68](a1);
}

id objc_allocWithZone(Class a1)
{
  return (id)MEMORY[0x24BEDCF78](a1);
}

uint64_t objc_alloc_init()
{
  return MEMORY[0x24BEDCF88]();
}

id objc_autorelease(id a1)
{
  return (id)MEMORY[0x24BEDCFA8](a1);
}

void objc_autoreleasePoolPop(void *context)
{
  MEMORY[0x24BEDCFB0](context);
}

void *objc_autoreleasePoolPush(void)
{
  return (void *)MEMORY[0x24BEDCFC0]();
}

id objc_autoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x24BEDCFD0](a1);
}

id objc_begin_catch(void *exc_buf)
{
  return (id)MEMORY[0x24BEDCFD8](exc_buf);
}

uint64_t objc_claimAutoreleasedReturnValue()
{
  return MEMORY[0x24BEDCFE8]();
}

void objc_copyWeak(id *to, id *from)
{
  MEMORY[0x24BEDD030](to, from);
}

void objc_destroyWeak(id *location)
{
  MEMORY[0x24BEDD038](location);
}

void objc_end_catch(void)
{
  MEMORY[0x24BEDD050]();
}

void objc_enumerationMutation(id obj)
{
  MEMORY[0x24BEDD068](obj);
}

void objc_exception_rethrow(void)
{
  MEMORY[0x24BEDD070]();
}

void objc_exception_throw(id exception)
{
  MEMORY[0x24BEDD078](exception);
}

id objc_getProperty(id self, SEL _cmd, ptrdiff_t offset, BOOL atomic)
{
  return (id)MEMORY[0x24BEDD0B0](self, _cmd, offset, atomic);
}

id objc_initWeak(id *location, id val)
{
  return (id)MEMORY[0x24BEDD0C0](location, val);
}

id objc_loadWeakRetained(id *location)
{
  return (id)MEMORY[0x24BEDD0E8](location);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return (id)((uint64_t (*)(id, SEL))MEMORY[0x24BEDD108])(a1, a2);
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return (id)MEMORY[0x24BEDD120](a1, a2);
}

uint64_t objc_opt_class()
{
  return MEMORY[0x24BEDD130]();
}

uint64_t objc_opt_isKindOfClass()
{
  return MEMORY[0x24BEDD138]();
}

uint64_t objc_opt_new()
{
  return MEMORY[0x24BEDD148]();
}

uint64_t objc_opt_respondsToSelector()
{
  return MEMORY[0x24BEDD160]();
}

uint64_t objc_opt_self()
{
  return MEMORY[0x24BEDD168]();
}

void objc_release(id a1)
{
  MEMORY[0x24BEDD188](a1);
}

id objc_retain(id a1)
{
  return (id)MEMORY[0x24BEDD2A0](a1);
}

id objc_retainAutorelease(id a1)
{
  return (id)MEMORY[0x24BEDD2A8](a1);
}

id objc_retainAutoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x24BEDD2B0](a1);
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x24BEDD2B8](a1);
}

id objc_retainBlock(id a1)
{
  return (id)MEMORY[0x24BEDD2C0](a1);
}

void objc_setProperty_atomic(id self, SEL _cmd, id newValue, ptrdiff_t offset)
{
  MEMORY[0x24BEDD3D0](self, _cmd, newValue, offset);
}

void objc_setProperty_nonatomic_copy(id self, SEL _cmd, id newValue, ptrdiff_t offset)
{
  MEMORY[0x24BEDD408](self, _cmd, newValue, offset);
}

void objc_storeStrong(id *location, id obj)
{
  MEMORY[0x24BEDD410](location, obj);
}

id objc_storeWeak(id *location, id obj)
{
  return (id)MEMORY[0x24BEDD420](location, obj);
}

void objc_terminate(void)
{
  MEMORY[0x24BEDD450]();
}

id objc_unsafeClaimAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x24BEDD458](a1);
}

void os_activity_apply(os_activity_t activity, os_block_t block)
{
  MEMORY[0x24BDAF290](activity, block);
}

os_log_t os_log_create(const char *subsystem, const char *category)
{
  return (os_log_t)MEMORY[0x24BDAF368](subsystem, category);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return MEMORY[0x24BDAF398](oslog, type);
}

uint64_t os_transaction_copy_description()
{
  return MEMORY[0x24BDAF430]();
}

uint64_t os_transaction_create()
{
  return MEMORY[0x24BDAF438]();
}

uint64_t os_transaction_needs_more_time()
{
  return MEMORY[0x24BDAF448]();
}

void os_unfair_lock_lock(os_unfair_lock_t lock)
{
  MEMORY[0x24BDAF460](lock);
}

void os_unfair_lock_unlock(os_unfair_lock_t lock)
{
  MEMORY[0x24BDAF488](lock);
}

uint64_t os_variant_has_internal_content()
{
  return MEMORY[0x24BDAF4D0]();
}

size_t strlen(const char *__s)
{
  return MEMORY[0x24BDAFF40](__s);
}

uint64_t swift_allocError()
{
  return MEMORY[0x24BEE4B68]();
}

uint64_t swift_allocObject()
{
  return MEMORY[0x24BEE4B70]();
}

uint64_t swift_allocateGenericClassMetadata()
{
  return MEMORY[0x24BEE4B78]();
}

uint64_t swift_allocateGenericValueMetadata()
{
  return MEMORY[0x24BEE4B80]();
}

uint64_t swift_arrayDestroy()
{
  return MEMORY[0x24BEE4B98]();
}

uint64_t swift_arrayInitWithCopy()
{
  return MEMORY[0x24BEE4BA0]();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return MEMORY[0x24BEE4BA8]();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return MEMORY[0x24BEE4BB0]();
}

uint64_t swift_beginAccess()
{
  return MEMORY[0x24BEE4BB8]();
}

uint64_t swift_bridgeObjectRelease()
{
  return MEMORY[0x24BEE4BC0]();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return MEMORY[0x24BEE4BC8]();
}

uint64_t swift_bridgeObjectRetain()
{
  return MEMORY[0x24BEE4BD0]();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return MEMORY[0x24BEE4BD8]();
}

uint64_t swift_checkMetadataState()
{
  return MEMORY[0x24BEE4BE0]();
}

uint64_t swift_conformsToProtocol2()
{
  return MEMORY[0x24BEE4BF0]();
}

uint64_t swift_continuation_await()
{
  return MEMORY[0x24BEE71B8]();
}

uint64_t swift_continuation_init()
{
  return MEMORY[0x24BEE71C0]();
}

uint64_t swift_continuation_resume()
{
  return MEMORY[0x24BEE71C8]();
}

uint64_t swift_deallocClassInstance()
{
  return MEMORY[0x24BEE4C00]();
}

uint64_t swift_deallocObject()
{
  return MEMORY[0x24BEE4C10]();
}

uint64_t swift_deallocPartialClassInstance()
{
  return MEMORY[0x24BEE4C18]();
}

uint64_t swift_dynamicCast()
{
  return MEMORY[0x24BEE4C38]();
}

uint64_t swift_dynamicCastClass()
{
  return MEMORY[0x24BEE4C40]();
}

uint64_t swift_dynamicCastObjCClass()
{
  return MEMORY[0x24BEE4C60]();
}

uint64_t swift_dynamicCastObjCProtocolConditional()
{
  return MEMORY[0x24BEE4C70]();
}

uint64_t swift_endAccess()
{
  return MEMORY[0x24BEE4C98]();
}

uint64_t swift_errorRelease()
{
  return MEMORY[0x24BEE4CA0]();
}

uint64_t swift_errorRetain()
{
  return MEMORY[0x24BEE4CA8]();
}

uint64_t swift_getAssociatedTypeWitness()
{
  return MEMORY[0x24BEE4CD8]();
}

uint64_t swift_getDynamicType()
{
  return MEMORY[0x24BEE4D00]();
}

uint64_t swift_getEnumCaseMultiPayload()
{
  return MEMORY[0x24BEE4D08]();
}

uint64_t swift_getEnumTagSinglePayloadGeneric()
{
  return MEMORY[0x24BEE4D10]();
}

uint64_t swift_getErrorValue()
{
  return MEMORY[0x24BEE4D18]();
}

uint64_t swift_getForeignTypeMetadata()
{
  return MEMORY[0x24BEE4D40]();
}

uint64_t swift_getFunctionTypeMetadata1()
{
  return MEMORY[0x24BEE4D60]();
}

uint64_t swift_getGenericMetadata()
{
  return MEMORY[0x24BEE4D80]();
}

uint64_t swift_getKeyPath()
{
  return MEMORY[0x24BEE4D88]();
}

uint64_t swift_getMetatypeMetadata()
{
  return MEMORY[0x24BEE4D98]();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return MEMORY[0x24BEE4DA0]();
}

uint64_t swift_getObjCClassMetadata()
{
  return MEMORY[0x24BEE4DB0]();
}

uint64_t swift_getObjectType()
{
  return MEMORY[0x24BEE4DB8]();
}

uint64_t swift_getSingletonMetadata()
{
  return MEMORY[0x24BEE4DD0]();
}

uint64_t swift_getTupleTypeLayout2()
{
  return MEMORY[0x24BEE4DE0]();
}

uint64_t swift_getTupleTypeMetadata2()
{
  return MEMORY[0x24BEE4DF8]();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return MEMORY[0x24BEE4E10]();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return MEMORY[0x24BEE4E18]();
}

uint64_t swift_getWitnessTable()
{
  return MEMORY[0x24BEE4E20]();
}

uint64_t swift_initClassMetadata2()
{
  return MEMORY[0x24BEE4E28]();
}

uint64_t swift_initEnumMetadataMultiPayload()
{
  return MEMORY[0x24BEE4E30]();
}

uint64_t swift_initEnumMetadataSinglePayload()
{
  return MEMORY[0x24BEE4E40]();
}

uint64_t swift_initStackObject()
{
  return MEMORY[0x24BEE4E48]();
}

uint64_t swift_initStructMetadata()
{
  return MEMORY[0x24BEE4E58]();
}

uint64_t swift_isEscapingClosureAtFileLocation()
{
  return MEMORY[0x24BEE4E68]();
}

uint64_t swift_isUniquelyReferenced_nonNull_bridgeObject()
{
  return MEMORY[0x24BEE4E90]();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return MEMORY[0x24BEE4E98]();
}

uint64_t swift_lookUpClassMethod()
{
  return MEMORY[0x24BEE4EA8]();
}

uint64_t swift_makeBoxUnique()
{
  return MEMORY[0x24BEE4EB0]();
}

uint64_t swift_once()
{
  return MEMORY[0x24BEE4EC8]();
}

uint64_t swift_release()
{
  return MEMORY[0x24BEE4EF8]();
}

uint64_t swift_release_n()
{
  return MEMORY[0x24BEE4F00]();
}

uint64_t swift_retain()
{
  return MEMORY[0x24BEE4F08]();
}

uint64_t swift_retain_n()
{
  return MEMORY[0x24BEE4F10]();
}

uint64_t swift_setDeallocating()
{
  return MEMORY[0x24BEE4F30]();
}

uint64_t swift_slowAlloc()
{
  return MEMORY[0x24BEE4F38]();
}

uint64_t swift_slowDealloc()
{
  return MEMORY[0x24BEE4F40]();
}

uint64_t swift_stdlib_isStackAllocationSafe()
{
  return MEMORY[0x24BEE4F48]();
}

uint64_t swift_storeEnumTagMultiPayload()
{
  return MEMORY[0x24BEE4F58]();
}

uint64_t swift_storeEnumTagSinglePayloadGeneric()
{
  return MEMORY[0x24BEE4F60]();
}

uint64_t swift_task_alloc()
{
  return MEMORY[0x24BEE7228]();
}

uint64_t swift_task_create()
{
  return MEMORY[0x24BEE7230]();
}

uint64_t swift_task_dealloc()
{
  return MEMORY[0x24BEE7238]();
}

uint64_t swift_task_switch()
{
  return MEMORY[0x24BEE7278]();
}

uint64_t swift_unexpectedError()
{
  return MEMORY[0x24BEE4F68]();
}

uint64_t swift_unknownObjectRelease()
{
  return MEMORY[0x24BEE4F70]();
}

uint64_t swift_unknownObjectRelease_n()
{
  return MEMORY[0x24BEE4F78]();
}

uint64_t swift_unknownObjectRetain()
{
  return MEMORY[0x24BEE4F80]();
}

uint64_t swift_unknownObjectRetain_n()
{
  return MEMORY[0x24BEE4F88]();
}

uint64_t swift_unknownObjectWeakAssign()
{
  return MEMORY[0x24BEE4FB0]();
}

uint64_t swift_unknownObjectWeakDestroy()
{
  return MEMORY[0x24BEE4FC8]();
}

uint64_t swift_unknownObjectWeakInit()
{
  return MEMORY[0x24BEE4FD0]();
}

uint64_t swift_unknownObjectWeakLoadStrong()
{
  return MEMORY[0x24BEE4FD8]();
}

uint64_t swift_updateClassMetadata2()
{
  return MEMORY[0x24BEE5008]();
}

uint64_t swift_weakDestroy()
{
  return MEMORY[0x24BEE5028]();
}

uint64_t swift_weakInit()
{
  return MEMORY[0x24BEE5030]();
}

uint64_t swift_weakLoadStrong()
{
  return MEMORY[0x24BEE5038]();
}

uint64_t swift_willThrow()
{
  return MEMORY[0x24BEE5050]();
}

