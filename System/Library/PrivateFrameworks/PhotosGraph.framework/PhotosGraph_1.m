uint64_t sub_1CA2AD388@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return MusicKitCatalogSong.Relationships.FlexMLAnalysisRelationship.FlexMLAnalysisData.FlexMLAnalysisAttributes.Arousal.init(from:)(a1, a2);
}

uint64_t sub_1CA2AD39C(_QWORD *a1)
{
  return MusicKitCatalogSong.Relationships.FlexMLAnalysisRelationship.FlexMLAnalysisData.FlexMLAnalysisAttributes.Arousal.encode(to:)(a1);
}

uint64_t _s11PhotosGraph19MusicKitCatalogSongV13RelationshipsV26FlexMLAnalysisRelationshipV0hI4DataV0hI10AttributesV7ValenceV2eeoiySbAM_AMtFZ_0(uint64_t a1, uint64_t a2)
{
  float v2;
  char v3;
  float v4;
  char v5;
  char v7;

  v2 = *(float *)(a1 + 8);
  v3 = *(_BYTE *)(a1 + 12);
  v4 = *(float *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 12);
  if (!sub_1CA2A7AA0(*(_QWORD *)a1, *(_QWORD *)a2))
    return 0;
  if ((v3 & 1) != 0)
  {
    if ((v5 & 1) == 0)
      return 0;
  }
  else
  {
    if (v2 == v4)
      v7 = v5;
    else
      v7 = 1;
    if ((v7 & 1) != 0)
      return 0;
  }
  return 1;
}

uint64_t sub_1CA2AD41C()
{
  _BYTE *v0;

  if (*v0)
    return 0xD000000000000011;
  else
    return 0x65756C6176;
}

uint64_t sub_1CA2AD458@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1CA2C0014(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1CA2AD47C()
{
  sub_1CA2B5B40();
  return sub_1CA85C3E0();
}

uint64_t sub_1CA2AD4A4()
{
  sub_1CA2B5B40();
  return sub_1CA85C3EC();
}

uint64_t MusicKitCatalogSong.Relationships.FlexMLAnalysisRelationship.FlexMLAnalysisData.FlexMLAnalysisAttributes.VisualTempo.encode(to:)(_QWORD *a1)
{
  return sub_1CA2ACFFC(a1, &qword_1EF94C778, (void (*)(void))sub_1CA2B5B40);
}

uint64_t MusicKitCatalogSong.Relationships.FlexMLAnalysisRelationship.FlexMLAnalysisData.FlexMLAnalysisAttributes.VisualTempo.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1CA2AD1AC(a1, &qword_1ED8725F8, (void (*)(void))sub_1CA2B5B40, a2);
}

uint64_t sub_1CA2AD524(uint64_t a1, uint64_t a2)
{
  float v2;
  char v3;
  float v4;
  int v5;
  char v7;

  v2 = *(float *)(a1 + 8);
  v3 = *(_BYTE *)(a1 + 12);
  v4 = *(float *)(a2 + 8);
  v5 = *(unsigned __int8 *)(a2 + 12);
  if (sub_1CA2A7AA0(*(_QWORD *)a1, *(_QWORD *)a2))
  {
    if ((v3 & 1) != 0)
    {
      if (v5)
        return 1;
    }
    else
    {
      if (v2 == v4)
        v7 = v5;
      else
        v7 = 1;
      if ((v7 & 1) == 0)
        return 1;
    }
  }
  return 0;
}

uint64_t sub_1CA2AD58C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return MusicKitCatalogSong.Relationships.FlexMLAnalysisRelationship.FlexMLAnalysisData.FlexMLAnalysisAttributes.VisualTempo.init(from:)(a1, a2);
}

uint64_t sub_1CA2AD5A0(_QWORD *a1)
{
  return MusicKitCatalogSong.Relationships.FlexMLAnalysisRelationship.FlexMLAnalysisData.FlexMLAnalysisAttributes.VisualTempo.encode(to:)(a1);
}

uint64_t sub_1CA2AD5B8()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1CA2AD5F0 + 4 * byte_1CA8D6731[*v0]))(0x6C426F5465646166, 0xEB000000006B6361);
}

uint64_t sub_1CA2AD5F0()
{
  return 0x756C61566E696167;
}

uint64_t sub_1CA2AD60C()
{
  return 0x65536E49656D6974;
}

unint64_t sub_1CA2AD630()
{
  return 0xD000000000000011;
}

uint64_t sub_1CA2AD64C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1CA2C00F8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1CA2AD670()
{
  sub_1CA2B5B84();
  return sub_1CA85C3E0();
}

uint64_t sub_1CA2AD698()
{
  sub_1CA2B5B84();
  return sub_1CA85C3EC();
}

uint64_t MusicKitCatalogSong.Relationships.FlexMLAnalysisRelationship.FlexMLAnalysisData.FlexMLAnalysisAttributes.ExitPoint.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;
  char v11;
  uint64_t v12;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94C780);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(v1 + 8);
  v8 = *(_QWORD *)(v1 + 24);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1CA2B5B84();
  sub_1CA85C3D4();
  LOBYTE(v12) = 0;
  sub_1CA85C218();
  if (!v2)
  {
    v12 = v10;
    v11 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED872298);
    sub_1CA2B5AA0(&qword_1ED8722A0, &qword_1ED872298, MEMORY[0x1E0DEB198], MEMORY[0x1E0DEAF10]);
    sub_1CA85C23C();
    LOBYTE(v12) = 2;
    sub_1CA85C218();
    v12 = v8;
    v11 = 3;
    sub_1CA85C23C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t MusicKitCatalogSong.Relationships.FlexMLAnalysisRelationship.FlexMLAnalysisData.FlexMLAnalysisAttributes.ExitPoint.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int v9;
  int v10;
  uint64_t v11;
  int v12;
  int v13;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED872610);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1CA2B5B84();
  sub_1CA85C3C8();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  LOBYTE(v18) = 0;
  sub_1CA85C17C();
  v10 = v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED872298);
  v17 = 1;
  sub_1CA2B5AA0(&qword_1ED8722B0, &qword_1ED872298, MEMORY[0x1E0DEB1C0], MEMORY[0x1E0DEAF40]);
  sub_1CA85C1A0();
  v11 = v18;
  LOBYTE(v18) = 2;
  v16 = v11;
  swift_bridgeObjectRetain();
  sub_1CA85C17C();
  v13 = v12;
  v17 = 3;
  sub_1CA85C1A0();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v15 = v18;
  *(_DWORD *)a2 = v10;
  *(_QWORD *)(a2 + 8) = v16;
  *(_DWORD *)(a2 + 16) = v13;
  *(_QWORD *)(a2 + 24) = v15;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1CA2ADB00@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return MusicKitCatalogSong.Relationships.FlexMLAnalysisRelationship.FlexMLAnalysisData.FlexMLAnalysisAttributes.ExitPoint.init(from:)(a1, a2);
}

uint64_t sub_1CA2ADB14(_QWORD *a1)
{
  return MusicKitCatalogSong.Relationships.FlexMLAnalysisRelationship.FlexMLAnalysisData.FlexMLAnalysisAttributes.ExitPoint.encode(to:)(a1);
}

BOOL static MusicKitCatalogSong.Relationships.FlexMLAnalysisRelationship.FlexMLAnalysisData.FlexMLAnalysisAttributes.EntryPoint.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  float v2;
  uint64_t v3;
  float v4;
  uint64_t v5;

  v2 = *(float *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 16);
  v4 = *(float *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  return sub_1CA2A7AA0(*(_QWORD *)a1, *(_QWORD *)a2) && v2 == v4 && sub_1CA2A7AA0(v3, v5);
}

uint64_t sub_1CA2ADB94()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0x65536E49656D6974;
  if (*v0 != 1)
    v1 = 0xD000000000000011;
  if (*v0)
    return v1;
  else
    return 0x756C61566E696167;
}

uint64_t sub_1CA2ADC04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1CA2C02F4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1CA2ADC28()
{
  sub_1CA2B5BC8();
  return sub_1CA85C3E0();
}

uint64_t sub_1CA2ADC50()
{
  sub_1CA2B5BC8();
  return sub_1CA85C3EC();
}

uint64_t MusicKitCatalogSong.Relationships.FlexMLAnalysisRelationship.FlexMLAnalysisData.FlexMLAnalysisAttributes.EntryPoint.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94C788);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v1;
  v12 = v1[2];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1CA2B5BC8();
  sub_1CA85C3D4();
  v14 = v8;
  v13 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED872298);
  sub_1CA2B5AA0(&qword_1ED8722A0, &qword_1ED872298, MEMORY[0x1E0DEB198], MEMORY[0x1E0DEAF10]);
  sub_1CA85C23C();
  if (!v2)
  {
    v9 = v12;
    LOBYTE(v14) = 1;
    sub_1CA85C218();
    v14 = v9;
    v13 = 2;
    sub_1CA85C23C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t MusicKitCatalogSong.Relationships.FlexMLAnalysisRelationship.FlexMLAnalysisData.FlexMLAnalysisAttributes.EntryPoint.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  int v10;
  int v11;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  char v17;
  uint64_t v18;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8725E8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1CA2B5BC8();
  sub_1CA85C3C8();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v16 = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED872298);
  v17 = 0;
  sub_1CA2B5AA0(&qword_1ED8722B0, &qword_1ED872298, MEMORY[0x1E0DEB1C0], MEMORY[0x1E0DEAF40]);
  sub_1CA85C1A0();
  v9 = v18;
  LOBYTE(v18) = 1;
  swift_bridgeObjectRetain();
  sub_1CA85C17C();
  v11 = v10;
  v17 = 2;
  sub_1CA85C1A0();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v13 = v18;
  v14 = v16;
  *v16 = v9;
  *((_DWORD *)v14 + 2) = v11;
  v14[2] = v13;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

BOOL sub_1CA2AE058(uint64_t a1, uint64_t a2)
{
  float v2;
  uint64_t v3;
  float v4;
  uint64_t v5;

  v2 = *(float *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 16);
  v4 = *(float *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  return sub_1CA2A7AA0(*(_QWORD *)a1, *(_QWORD *)a2) && v2 == v4 && sub_1CA2A7AA0(v3, v5);
}

uint64_t sub_1CA2AE0C4@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return MusicKitCatalogSong.Relationships.FlexMLAnalysisRelationship.FlexMLAnalysisData.FlexMLAnalysisAttributes.EntryPoint.init(from:)(a1, a2);
}

uint64_t sub_1CA2AE0D8(_QWORD *a1)
{
  return MusicKitCatalogSong.Relationships.FlexMLAnalysisRelationship.FlexMLAnalysisData.FlexMLAnalysisAttributes.EntryPoint.encode(to:)(a1);
}

BOOL static MusicKitCatalogSong.Relationships.FlexMLAnalysisRelationship.FlexMLAnalysisData.FlexMLAnalysisAttributes.VideoEvents.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1[1];
  v3 = a2[1];
  return sub_1CA2A7AA0(*a1, *a2) && sub_1CA2A7AA0(v2, v3);
}

uint64_t sub_1CA2AE134()
{
  _BYTE *v0;

  if (*v0)
    return 0x65536E49656D6974;
  else
    return 0x65726F6373;
}

uint64_t sub_1CA2AE178@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1CA2C0474(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1CA2AE19C()
{
  sub_1CA2B5C0C();
  return sub_1CA85C3E0();
}

uint64_t sub_1CA2AE1C4()
{
  sub_1CA2B5C0C();
  return sub_1CA85C3EC();
}

uint64_t MusicKitCatalogSong.Relationships.FlexMLAnalysisRelationship.FlexMLAnalysisData.FlexMLAnalysisAttributes.VideoEvents.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;
  char v11;
  uint64_t v12;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94C790);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v1;
  v10 = v1[1];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1CA2B5C0C();
  sub_1CA85C3D4();
  v12 = v8;
  v11 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED872298);
  sub_1CA2B5AA0(&qword_1ED8722A0, &qword_1ED872298, MEMORY[0x1E0DEB198], MEMORY[0x1E0DEAF10]);
  sub_1CA85C23C();
  if (!v2)
  {
    v12 = v10;
    v11 = 1;
    sub_1CA85C23C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t MusicKitCatalogSong.Relationships.FlexMLAnalysisRelationship.FlexMLAnalysisData.FlexMLAnalysisAttributes.VideoEvents.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v13;
  char v14;
  uint64_t v15;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8725F0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1CA2B5C0C();
  sub_1CA85C3C8();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v13 = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED872298);
  v14 = 0;
  sub_1CA2B5AA0(&qword_1ED8722B0, &qword_1ED872298, MEMORY[0x1E0DEB1C0], MEMORY[0x1E0DEAF40]);
  sub_1CA85C1A0();
  v9 = v15;
  v14 = 1;
  swift_bridgeObjectRetain();
  sub_1CA85C1A0();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v10 = v15;
  v11 = v13;
  *v13 = v9;
  v11[1] = v10;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

BOOL sub_1CA2AE548(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1[1];
  v3 = a2[1];
  return sub_1CA2A7AA0(*a1, *a2) && sub_1CA2A7AA0(v2, v3);
}

uint64_t sub_1CA2AE590@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return MusicKitCatalogSong.Relationships.FlexMLAnalysisRelationship.FlexMLAnalysisData.FlexMLAnalysisAttributes.VideoEvents.init(from:)(a1, a2);
}

uint64_t sub_1CA2AE5A4(_QWORD *a1)
{
  return MusicKitCatalogSong.Relationships.FlexMLAnalysisRelationship.FlexMLAnalysisData.FlexMLAnalysisAttributes.VideoEvents.encode(to:)(a1);
}

uint64_t sub_1CA2AE5BC()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1CA2AE5EC + 4 * byte_1CA8D6735[*v0]))(0x65636E656C6176, 0xE700000000000000);
}

uint64_t sub_1CA2AE5EC()
{
  return 0x6C6173756F7261;
}

uint64_t sub_1CA2AE600()
{
  return 0x65546C6175736976;
}

uint64_t sub_1CA2AE620()
{
  return 0x6E696F5074697865;
}

uint64_t sub_1CA2AE63C()
{
  return 0x696F507972746E65;
}

uint64_t sub_1CA2AE670@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1CA2C0580(a1, a2);
  *a3 = result;
  return result;
}

void sub_1CA2AE694(_BYTE *a1@<X8>)
{
  *a1 = 6;
}

uint64_t sub_1CA2AE6A0()
{
  sub_1CA2B5C50();
  return sub_1CA85C3E0();
}

uint64_t sub_1CA2AE6C8()
{
  sub_1CA2B5C50();
  return sub_1CA85C3EC();
}

uint64_t MusicKitCatalogSong.Relationships.FlexMLAnalysisRelationship.FlexMLAnalysisData.FlexMLAnalysisAttributes.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  int v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94C798);
  v30 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *v1;
  v7 = *((_DWORD *)v1 + 2);
  v8 = *((_BYTE *)v1 + 12);
  v9 = v1[2];
  v28 = *((unsigned __int8 *)v1 + 28);
  v29 = v9;
  v27 = *((unsigned int *)v1 + 6);
  v10 = v1[4];
  v25 = *((unsigned __int8 *)v1 + 44);
  v26 = v10;
  v24 = *((unsigned int *)v1 + 10);
  v11 = v1[6];
  v22 = v1[7];
  v23 = v11;
  v12 = v1[9];
  v20 = v1[8];
  v21 = v12;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1CA2B5C50();
  sub_1CA85C3D4();
  v32 = v6;
  BYTE4(v33) = v8;
  LODWORD(v33) = v7;
  v34 = 0;
  sub_1CA2B5C94();
  v13 = v31;
  sub_1CA85C1E8();
  if (v13)
    return (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v5, v3);
  v16 = v24;
  v15 = v25;
  v17 = v26;
  v18 = v23;
  v19 = v30;
  v32 = v29;
  BYTE4(v33) = (v27 | (unint64_t)(v28 << 32)) >> 32;
  LODWORD(v33) = v27;
  v34 = 1;
  sub_1CA2B5CD8();
  sub_1CA85C1E8();
  v32 = v17;
  BYTE4(v33) = (v16 | (unint64_t)(v15 << 32)) >> 32;
  LODWORD(v33) = v16;
  v34 = 2;
  sub_1CA2B5D1C();
  sub_1CA85C1E8();
  v32 = v18;
  v34 = 3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED872230);
  sub_1CA2B6780(&qword_1EF94C7B8, &qword_1ED872230, (uint64_t (*)(void))sub_1CA2B5D60, MEMORY[0x1E0DEAF10]);
  sub_1CA85C1E8();
  v32 = v22;
  v34 = 4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED872220);
  sub_1CA2B6780(&qword_1EF94C7C8, &qword_1ED872220, (uint64_t (*)(void))sub_1CA2B5DA4, MEMORY[0x1E0DEAF10]);
  sub_1CA85C1E8();
  v32 = v20;
  v33 = v21;
  v34 = 5;
  sub_1CA2B5DE8();
  sub_1CA85C1E8();
  return (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v5, v3);
}

uint64_t MusicKitCatalogSong.Relationships.FlexMLAnalysisRelationship.FlexMLAnalysisData.FlexMLAnalysisAttributes.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  int v27;
  int v28;
  int v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  char v45;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8725E0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1CA2B5C50();
  sub_1CA85C3C8();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v45 = 0;
  sub_1CA2B5E2C();
  sub_1CA85C14C();
  v42 = a2;
  v9 = v43;
  v10 = BYTE4(v44);
  v11 = v44;
  v45 = 1;
  sub_1CA2B5E70();
  swift_bridgeObjectRetain();
  sub_1CA85C14C();
  v41 = v9;
  v38 = v11;
  v39 = v10;
  v12 = v43;
  v13 = BYTE4(v44);
  v14 = v44;
  v45 = 2;
  sub_1CA2B5EB4();
  swift_bridgeObjectRetain();
  sub_1CA85C14C();
  v33 = v14;
  v34 = v13;
  v37 = v12;
  v15 = v43;
  v32 = BYTE4(v44);
  v16 = v44;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED872230);
  v45 = 3;
  sub_1CA2B6780(&qword_1ED872238, &qword_1ED872230, (uint64_t (*)(void))sub_1CA2B5EF8, MEMORY[0x1E0DEAF40]);
  v40 = v15;
  swift_bridgeObjectRetain();
  v36 = 0;
  sub_1CA85C14C();
  v31 = v16;
  v17 = v43;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED872220);
  v45 = 4;
  sub_1CA2B6780(&qword_1ED872228, &qword_1ED872220, (uint64_t (*)(void))sub_1CA2B5F3C, MEMORY[0x1E0DEAF40]);
  swift_bridgeObjectRetain();
  sub_1CA85C14C();
  v35 = v17;
  v18 = v43;
  v45 = 5;
  sub_1CA2B5F80();
  swift_bridgeObjectRetain();
  sub_1CA85C14C();
  v19 = v41;
  v36 = v38 | (v39 << 32);
  v20 = *(void (**)(char *, uint64_t))(v6 + 8);
  v38 = v31 | (v32 << 32);
  v39 = v33 | (v34 << 32);
  v20(v8, v5);
  v21 = v43;
  v22 = v44;
  swift_bridgeObjectRetain();
  v23 = v37;
  swift_bridgeObjectRetain();
  v24 = v40;
  swift_bridgeObjectRetain();
  v25 = v35;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1CA26855C(v21);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v26 = v42;
  *v42 = v19;
  v27 = v36;
  *((_BYTE *)v26 + 12) = BYTE4(v36);
  *((_DWORD *)v26 + 2) = v27;
  v26[2] = v23;
  v28 = v39;
  *((_BYTE *)v26 + 28) = BYTE4(v39);
  *((_DWORD *)v26 + 6) = v28;
  v26[4] = v24;
  v29 = v38;
  *((_BYTE *)v26 + 44) = BYTE4(v38);
  *((_DWORD *)v26 + 10) = v29;
  v26[6] = v25;
  v26[7] = v18;
  v26[8] = v21;
  v26[9] = v22;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return sub_1CA2B5FC4(v21);
}

uint64_t sub_1CA2AEFF8@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return MusicKitCatalogSong.Relationships.FlexMLAnalysisRelationship.FlexMLAnalysisData.FlexMLAnalysisAttributes.init(from:)(a1, a2);
}

uint64_t sub_1CA2AF00C(_QWORD *a1)
{
  return MusicKitCatalogSong.Relationships.FlexMLAnalysisRelationship.FlexMLAnalysisData.FlexMLAnalysisAttributes.encode(to:)(a1);
}

uint64_t sub_1CA2AF024@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x7475626972747461 && a2 == 0xEA00000000007365)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1CA85C284();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1CA2AF0C4()
{
  sub_1CA2B5FF0();
  return sub_1CA85C3E0();
}

uint64_t sub_1CA2AF0EC()
{
  sub_1CA2B5FF0();
  return sub_1CA85C3EC();
}

uint64_t MusicKitCatalogSong.Relationships.FlexMLAnalysisRelationship.FlexMLAnalysisData.encode(to:)(_QWORD *a1)
{
  __int128 *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94C7E0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v1;
  v14 = v1[1];
  v15 = v7;
  v8 = v1[2];
  v12 = v1[3];
  v13 = v8;
  v10 = *((_QWORD *)v1 + 8);
  v9 = *((_QWORD *)v1 + 9);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1CA2B5FF0();
  sub_1CA85C3D4();
  v16 = v15;
  v17 = v14;
  v18 = v13;
  v19 = v12;
  v20 = v10;
  v21 = v9;
  sub_1CA2B6034();
  sub_1CA85C1E8();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t MusicKitCatalogSong.Relationships.FlexMLAnalysisRelationship.FlexMLAnalysisData.init(from:)@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  _OWORD v14[5];

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED872618);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1CA2B5FF0();
  sub_1CA85C3C8();
  if (!v2)
  {
    sub_1CA2B6078();
    sub_1CA85C14C();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v9 = v14[1];
    v10 = v14[2];
    v11 = v14[3];
    v12 = v14[4];
    *a2 = v14[0];
    a2[1] = v9;
    a2[2] = v10;
    a2[3] = v11;
    a2[4] = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1CA2AF378@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  return MusicKitCatalogSong.Relationships.FlexMLAnalysisRelationship.FlexMLAnalysisData.init(from:)(a1, a2);
}

uint64_t sub_1CA2AF38C(_QWORD *a1)
{
  return MusicKitCatalogSong.Relationships.FlexMLAnalysisRelationship.FlexMLAnalysisData.encode(to:)(a1);
}

uint64_t static MusicKitCatalogSong.Relationships.FlexMLAnalysisRelationship.== infix(_:_:)(_QWORD *a1, uint64_t *a2)
{
  return sub_1CA2AF3AC(a1, a2, sub_1CA2A743C);
}

uint64_t sub_1CA2AF3AC(_QWORD *a1, uint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v3;
  uint64_t v5;

  v3 = *a2;
  if (*a1)
  {
    if (v3)
    {
      swift_bridgeObjectRetain();
      v5 = swift_bridgeObjectRetain();
      LOBYTE(a3) = a3(v5, v3);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((a3 & 1) != 0)
        return 1;
    }
  }
  else if (!v3)
  {
    return 1;
  }
  return 0;
}

uint64_t sub_1CA2AF420@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 1635017060 && a2 == 0xE400000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1CA85C284();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1CA2AF4A4()
{
  sub_1CA2B60BC();
  return sub_1CA85C3E0();
}

uint64_t sub_1CA2AF4CC()
{
  sub_1CA2B60BC();
  return sub_1CA85C3EC();
}

uint64_t MusicKitCatalogSong.Relationships.FlexMLAnalysisRelationship.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _QWORD v9[2];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94C7F0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1CA2B60BC();
  sub_1CA85C3D4();
  v9[1] = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED872240);
  sub_1CA2B6780(&qword_1EF94C7F8, &qword_1ED872240, (uint64_t (*)(void))sub_1CA2B6100, MEMORY[0x1E0DEAF10]);
  sub_1CA85C1E8();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t MusicKitCatalogSong.Relationships.FlexMLAnalysisRelationship.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _QWORD v10[2];

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED872620);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1CA2B60BC();
  sub_1CA85C3C8();
  if (!v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED872240);
    sub_1CA2B6780(&qword_1ED872248, &qword_1ED872240, (uint64_t (*)(void))sub_1CA2B6144, MEMORY[0x1E0DEAF40]);
    sub_1CA85C14C();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v10[1];
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1CA2AF764(_QWORD *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_1CA2AF770(a1, a2, a3, a4, sub_1CA2A743C);
}

uint64_t sub_1CA2AF770(_QWORD *a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  uint64_t v5;
  uint64_t v7;

  v5 = *a2;
  if (*a1)
  {
    if (v5)
    {
      swift_bridgeObjectRetain();
      v7 = swift_bridgeObjectRetain();
      LOBYTE(a5) = a5(v7, v5);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((a5 & 1) != 0)
        return 1;
    }
  }
  else if (!v5)
  {
    return 1;
  }
  return 0;
}

uint64_t sub_1CA2AF7E4@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return MusicKitCatalogSong.Relationships.FlexMLAnalysisRelationship.init(from:)(a1, a2);
}

uint64_t sub_1CA2AF7F8(_QWORD *a1)
{
  return MusicKitCatalogSong.Relationships.FlexMLAnalysisRelationship.encode(to:)(a1);
}

uint64_t _s11PhotosGraph19MusicKitCatalogSongV10AttributesV7PreviewV2eeoiySbAG_AGtFZ_0(_QWORD *a1, _QWORD *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1])
    return 1;
  else
    return sub_1CA85C284();
}

uint64_t sub_1CA2AF840()
{
  return 25705;
}

uint64_t sub_1CA2AF84C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 25705 && a2 == 0xE200000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1CA85C284();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1CA2AF8C8()
{
  sub_1CA2B6188();
  return sub_1CA85C3E0();
}

uint64_t sub_1CA2AF8F0()
{
  sub_1CA2B6188();
  return sub_1CA85C3EC();
}

uint64_t MusicKitCatalogSong.Relationships.EquivalentsData.encode(to:)(_QWORD *a1)
{
  return sub_1CA2AF94C(a1, &qword_1EF94C808, (void (*)(void))sub_1CA2B6188, (uint64_t)&type metadata for MusicKitCatalogSong.Relationships.EquivalentsData.CodingKeys, (void (*)(uint64_t, uint64_t))MEMORY[0x1E0DED0F0]);
}

uint64_t sub_1CA2AF94C(_QWORD *a1, uint64_t *a2, void (*a3)(void), uint64_t a4, void (*a5)(uint64_t, uint64_t))
{
  uint64_t *v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(void);
  void (*v16)(uint64_t, uint64_t);

  v16 = a5;
  v15 = a3;
  v7 = __swift_instantiateConcreteTypeFromMangledName(a2);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = v5[1];
  v14 = *v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v15();
  sub_1CA85C3D4();
  v16(v14, v11);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t MusicKitCatalogSong.Relationships.EquivalentsData.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1CA2AFA74(a1, &qword_1EF94C818, (void (*)(void))sub_1CA2B6188, a2);
}

uint64_t sub_1CA2AFA74@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X1>, void (*a3)(void)@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;

  v17 = a4;
  v18 = __swift_instantiateConcreteTypeFromMangledName(a2);
  v7 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  a3();
  sub_1CA85C3C8();
  if (!v4)
  {
    v10 = v17;
    v11 = v18;
    v12 = sub_1CA85C158();
    v14 = v13;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v11);
    *v10 = v12;
    v10[1] = v14;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1CA2AFB9C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return MusicKitCatalogSong.Relationships.EquivalentsData.init(from:)(a1, a2);
}

uint64_t sub_1CA2AFBB0(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_1CA2AFBE4(a1, a2, a3, &qword_1EF94C808, (void (*)(void))sub_1CA2B6188, (uint64_t)&type metadata for MusicKitCatalogSong.Relationships.EquivalentsData.CodingKeys, (void (*)(uint64_t, uint64_t))MEMORY[0x1E0DED0F0]);
}

uint64_t sub_1CA2AFBE4(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t *a4, void (*a5)(void), uint64_t a6, void (*a7)(uint64_t, uint64_t))
{
  uint64_t *v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(void);
  void (*v18)(uint64_t, uint64_t);

  v18 = a7;
  v17 = a5;
  v9 = __swift_instantiateConcreteTypeFromMangledName(a4);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = v7[1];
  v16 = *v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v17();
  sub_1CA85C3D4();
  v18(v16, v13);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

uint64_t MusicKitCatalogSong.Relationships.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94C820);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v1;
  v8 = v1[1];
  v14 = v1[2];
  v15 = v8;
  v13 = v1[3];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1CA2B6450();
  sub_1CA85C3D4();
  v17 = v9;
  v16 = 0;
  sub_1CA2B6494();
  sub_1CA85C1E8();
  if (!v2)
  {
    v10 = v13;
    v11 = v14;
    v17 = v15;
    v16 = 1;
    sub_1CA2B64D8();
    sub_1CA85C1E8();
    v17 = v11;
    v16 = 2;
    sub_1CA2B651C();
    sub_1CA85C1E8();
    v17 = v10;
    v16 = 3;
    sub_1CA2B6560();
    sub_1CA85C1E8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t MusicKitCatalogSong.Relationships.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8725B0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1CA2B6450();
  sub_1CA85C3C8();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v19 = 0;
  sub_1CA2B65A4();
  sub_1CA85C14C();
  v9 = v20;
  v19 = 1;
  sub_1CA2B65E8();
  swift_bridgeObjectRetain();
  sub_1CA85C14C();
  v18 = v9;
  v10 = v20;
  v19 = 2;
  sub_1CA2B697C(v20);
  sub_1CA2B662C();
  sub_1CA85C14C();
  v17 = v10;
  v11 = v20;
  v19 = 3;
  sub_1CA2B697C(v20);
  sub_1CA2B6670();
  sub_1CA85C14C();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v13 = v20;
  v14 = v18;
  swift_bridgeObjectRetain();
  v15 = v17;
  sub_1CA2B697C(v17);
  sub_1CA2B697C(v11);
  sub_1CA2B697C(v13);
  sub_1CA2B71B4(v11);
  sub_1CA2B71B4(v15);
  swift_bridgeObjectRelease();
  *a2 = v14;
  a2[1] = v15;
  a2[2] = v11;
  a2[3] = v13;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  sub_1CA2B71B4(v15);
  sub_1CA2B71B4(v11);
  return sub_1CA2B71B4(v13);
}

uint64_t sub_1CA2B0200@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return MusicKitCatalogSong.Relationships.init(from:)(a1, a2);
}

uint64_t sub_1CA2B0214(_QWORD *a1)
{
  return MusicKitCatalogSong.Relationships.encode(to:)(a1);
}

uint64_t MusicKitCatalogSong.MusicKitTesseractMetadata.MusicKitTesseractDailyDetails.dateUTC.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MusicKitCatalogSong.MusicKitTesseractMetadata.MusicKitTesseractDailyDetails.hoursUTC.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t MusicKitCatalogSong.MusicKitTesseractMetadata.MusicKitTesseractDailyDetails.playDurationInMilliseconds.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 24);
}

uint64_t MusicKitCatalogSong.MusicKitTesseractMetadata.MusicKitTesseractDailyDetails.playCount.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 32);
}

uint64_t MusicKitCatalogSong.MusicKitTesseractMetadata.MusicKitTesseractDailyDetails.skipCount.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 40);
}

uint64_t MusicKitCatalogSong.MusicKitTesseractMetadata.MusicKitTesseractDailyDetails.lastEndReason.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MusicKitCatalogSong.MusicKitTesseractMetadata.MusicKitTesseractDailyDetails.devices.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t MusicKitCatalogSong.MusicKitTesseractMetadata.MusicKitTesseractDailyDetails.ignoreForRecommendations.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 72);
}

uint64_t sub_1CA2B02B4(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1CA2B02E8 + 4 * byte_1CA8D673B[a1]))(0x43545565746164, 0xE700000000000000);
}

uint64_t sub_1CA2B02E8()
{
  return 0x4354557372756F68;
}

unint64_t sub_1CA2B0300()
{
  return 0xD00000000000001ALL;
}

uint64_t sub_1CA2B0320()
{
  return 0x6E756F4379616C70;
}

uint64_t sub_1CA2B0348()
{
  return 0x52646E457473616CLL;
}

uint64_t sub_1CA2B036C()
{
  return 0x73656369766564;
}

unint64_t sub_1CA2B0380()
{
  return 0xD000000000000018;
}

uint64_t sub_1CA2B039C()
{
  unsigned __int8 *v0;

  return sub_1CA2B02B4(*v0);
}

uint64_t sub_1CA2B03A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1CA2C0850(a1, a2);
  *a3 = result;
  return result;
}

void sub_1CA2B03C8(_BYTE *a1@<X8>)
{
  *a1 = 8;
}

uint64_t sub_1CA2B03D4()
{
  sub_1CA2B66B4();
  return sub_1CA85C3E0();
}

uint64_t sub_1CA2B03FC()
{
  sub_1CA2B66B4();
  return sub_1CA85C3EC();
}

uint64_t MusicKitCatalogSong.MusicKitTesseractMetadata.MusicKitTesseractDailyDetails.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  _DWORD v16[4];
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94C848);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(v1 + 16);
  v22 = *(_QWORD *)(v1 + 24);
  v23 = v8;
  v9 = *(_QWORD *)(v1 + 32);
  v20 = *(_QWORD *)(v1 + 40);
  v21 = v9;
  v10 = *(_QWORD *)(v1 + 48);
  v18 = *(_QWORD *)(v1 + 56);
  v19 = v10;
  v17 = *(_QWORD *)(v1 + 64);
  v16[3] = *(unsigned __int8 *)(v1 + 72);
  v11 = a1[3];
  v12 = a1;
  v14 = v13;
  __swift_project_boxed_opaque_existential_1(v12, v11);
  sub_1CA2B66B4();
  sub_1CA85C3D4();
  LOBYTE(v25) = 0;
  sub_1CA85C1F4();
  if (!v2)
  {
    v25 = v23;
    v24 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8722B8);
    sub_1CA2B5AA0(&qword_1EF94C6E0, &qword_1ED8722B8, MEMORY[0x1E0DEB420], MEMORY[0x1E0DEAF10]);
    sub_1CA85C23C();
    LOBYTE(v25) = 2;
    sub_1CA85C224();
    LOBYTE(v25) = 3;
    sub_1CA85C224();
    LOBYTE(v25) = 4;
    sub_1CA85C224();
    LOBYTE(v25) = 5;
    sub_1CA85C1F4();
    v25 = v17;
    v24 = 6;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED872270);
    sub_1CA2B5AA0(&qword_1ED872278, &qword_1ED872270, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEAF10]);
    sub_1CA85C23C();
    LOBYTE(v25) = 7;
    sub_1CA85C200();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v14);
}

uint64_t MusicKitCatalogSong.MusicKitTesseractMetadata.MusicKitTesseractDailyDetails.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94C858);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1CA2B66B4();
  sub_1CA85C3C8();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  LOBYTE(v35) = 0;
  v9 = sub_1CA85C158();
  v11 = v10;
  v33 = v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8722B8);
  v34 = 1;
  sub_1CA2B5AA0(&qword_1EF94C6F0, &qword_1ED8722B8, MEMORY[0x1E0DEB448], MEMORY[0x1E0DEAF40]);
  swift_bridgeObjectRetain();
  sub_1CA85C1A0();
  v32 = v11;
  v12 = v35;
  LOBYTE(v35) = 2;
  swift_bridgeObjectRetain();
  v31 = sub_1CA85C188();
  LOBYTE(v35) = 3;
  v30 = sub_1CA85C188();
  LOBYTE(v35) = 4;
  v14 = sub_1CA85C188();
  LOBYTE(v35) = 5;
  v15 = sub_1CA85C158();
  v27 = v14;
  v28 = v15;
  v17 = v16;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED872270);
  v34 = 6;
  sub_1CA2B5AA0(&qword_1ED872288, &qword_1ED872270, MEMORY[0x1E0DEA9A0], MEMORY[0x1E0DEAF40]);
  v29 = v17;
  swift_bridgeObjectRetain();
  sub_1CA85C1A0();
  v18 = v35;
  LOBYTE(v35) = 7;
  v26 = v18;
  swift_bridgeObjectRetain();
  v19 = sub_1CA85C164();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v20 = v32;
  *(_QWORD *)a2 = v33;
  *(_QWORD *)(a2 + 8) = v20;
  v21 = v31;
  *(_QWORD *)(a2 + 16) = v12;
  *(_QWORD *)(a2 + 24) = v21;
  v22 = v29;
  v24 = v26;
  v23 = v27;
  *(_QWORD *)(a2 + 32) = v30;
  *(_QWORD *)(a2 + 40) = v23;
  *(_QWORD *)(a2 + 48) = v28;
  *(_QWORD *)(a2 + 56) = v22;
  *(_QWORD *)(a2 + 64) = v24;
  *(_BYTE *)(a2 + 72) = v19 & 1;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1CA2B0BA0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return MusicKitCatalogSong.MusicKitTesseractMetadata.MusicKitTesseractDailyDetails.init(from:)(a1, a2);
}

uint64_t sub_1CA2B0BB4(_QWORD *a1)
{
  return MusicKitCatalogSong.MusicKitTesseractMetadata.MusicKitTesseractDailyDetails.encode(to:)(a1);
}

uint64_t MusicKitCatalogSong.MusicKitTesseractMetadata.dailyDetails.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t static MusicKitCatalogSong.MusicKitTesseractMetadata.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a1;
  v3 = *a2;
  if (v2)
  {
    if (v3 && (sub_1CA2A8094(v2, v3) & 1) != 0)
      return 1;
  }
  else if (!v3)
  {
    return 1;
  }
  return 0;
}

uint64_t sub_1CA2B0C0C()
{
  return 0x746544796C696164;
}

uint64_t sub_1CA2B0C2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x746544796C696164 && a2 == 0xEC000000736C6961)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1CA85C284();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1CA2B0CD8()
{
  sub_1CA2B66F8();
  return sub_1CA85C3E0();
}

uint64_t sub_1CA2B0D00()
{
  sub_1CA2B66F8();
  return sub_1CA85C3EC();
}

uint64_t MusicKitCatalogSong.MusicKitTesseractMetadata.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _QWORD v9[2];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94C860);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1CA2B66F8();
  sub_1CA85C3D4();
  v9[1] = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8721E0);
  sub_1CA2B6780(&qword_1EF94C868, &qword_1ED8721E0, (uint64_t (*)(void))sub_1CA2B673C, MEMORY[0x1E0DEAF10]);
  sub_1CA85C1E8();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t MusicKitCatalogSong.MusicKitTesseractMetadata.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _QWORD v10[2];

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED872580);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1CA2B66F8();
  sub_1CA85C3C8();
  if (!v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8721E0);
    sub_1CA2B6780(&qword_1ED8721E8, &qword_1ED8721E0, (uint64_t (*)(void))sub_1CA2B67E4, MEMORY[0x1E0DEAF40]);
    sub_1CA85C14C();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v10[1];
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1CA2B0F98(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a1;
  v3 = *a2;
  if (v2)
  {
    if (v3 && (sub_1CA2A8094(v2, v3) & 1) != 0)
      return 1;
  }
  else if (!v3)
  {
    return 1;
  }
  return 0;
}

uint64_t sub_1CA2B0FD4@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return MusicKitCatalogSong.MusicKitTesseractMetadata.init(from:)(a1, a2);
}

uint64_t sub_1CA2B0FE8(_QWORD *a1)
{
  return MusicKitCatalogSong.MusicKitTesseractMetadata.encode(to:)(a1);
}

uint64_t MusicKitCatalogSong.id.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

_QWORD *MusicKitCatalogSong.attributes.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  _QWORD v4[30];

  sub_1CA24EEF8(v1 + 16, (uint64_t)v4, &qword_1ED872D50);
  sub_1CA24EEF8((uint64_t)v4, a1, &qword_1ED872D50);
  return sub_1CA2B6D24(v4, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1CA2B6828);
}

uint64_t MusicKitCatalogSong.relationships.getter@<X0>(uint64_t *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = v1[32];
  v3 = v1[33];
  v4 = v1[34];
  v5 = v1[35];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  return sub_1CA2B692C(v2, v3, v4, v5);
}

uint64_t MusicKitCatalogSong.meta.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + 288);
  *a1 = v2;
  return sub_1CA2B697C(v2);
}

uint64_t static MusicKitCatalogSong.unitag(withTag:namespace:fromUnitags:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  if (!a5)
    goto LABEL_7;
  v10 = result;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v11 = swift_bridgeObjectRetain();
  v12 = sub_1CA2B698C(v11, v10, a2, a3, a4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*(_QWORD *)(v12 + 16))
  {
    result = swift_bridgeObjectRelease();
LABEL_7:
    *a6 = 0;
    a6[1] = 0;
    a6[3] = 0;
    a6[4] = 0;
    a6[2] = 1;
    return result;
  }
  v13 = *(unsigned int *)(v12 + 32);
  v14 = *(unsigned __int8 *)(v12 + 36);
  v16 = *(_QWORD *)(v12 + 40);
  v15 = *(_QWORD *)(v12 + 48);
  v18 = *(_QWORD *)(v12 + 56);
  v17 = *(_QWORD *)(v12 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  v19 = 0x100000000;
  if (!v14)
    v19 = 0;
  *a6 = v19 | v13;
  a6[1] = v16;
  a6[2] = v15;
  a6[3] = v18;
  a6[4] = v17;
  return result;
}

uint64_t sub_1CA2B11B4()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1CA2B11D8 + 4 * byte_1CA8D6743[*v0]))(25705, 0xE200000000000000);
}

uint64_t sub_1CA2B11D8()
{
  return 0x7475626972747461;
}

uint64_t sub_1CA2B11F4()
{
  return 0x6E6F6974616C6572;
}

uint64_t sub_1CA2B1218()
{
  return 1635018093;
}

uint64_t sub_1CA2B1228@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1CA2C0BC0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1CA2B124C()
{
  sub_1CA2B6B80();
  return sub_1CA85C3E0();
}

uint64_t sub_1CA2B1274()
{
  sub_1CA2B6B80();
  return sub_1CA85C3EC();
}

uint64_t MusicKitCatalogSong.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD v21[30];
  _BYTE v22[248];
  char v23;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94C878);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = *v1;
  sub_1CA24EEF8((uint64_t)(v1 + 2), (uint64_t)v22, &qword_1ED872D50);
  v7 = v1[32];
  v17 = v1[33];
  v18 = v7;
  v8 = v1[34];
  v15 = v1[35];
  v16 = v8;
  v14 = v1[36];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1CA2B6B80();
  sub_1CA85C3D4();
  LOBYTE(v21[0]) = 0;
  v9 = v20;
  sub_1CA85C1F4();
  if (!v9)
  {
    v10 = v16;
    v11 = v17;
    v12 = v18;
    sub_1CA24EEF8((uint64_t)v22, (uint64_t)v21, &qword_1ED872D50);
    v23 = 1;
    sub_1CA2B6BC4();
    sub_1CA85C1E8();
    v21[0] = v12;
    v21[1] = v11;
    v21[2] = v10;
    v21[3] = v15;
    v23 = 2;
    sub_1CA2B6C08();
    sub_1CA85C1E8();
    v21[0] = v14;
    v23 = 3;
    sub_1CA2B6C4C();
    sub_1CA85C1E8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t MusicKitCatalogSong.init(from:)@<X0>(_QWORD *a1@<X0>, void *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  _QWORD *v25;
  _QWORD v26[37];
  uint64_t v27[37];
  uint64_t v28;
  _QWORD v29[30];
  uint64_t v30;
  _QWORD v31[38];
  char v32;
  char v33;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8725A8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v25 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v9);
  sub_1CA2B6B80();
  sub_1CA85C3C8();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
  v24 = a2;
  LOBYTE(v27[0]) = 0;
  v10 = sub_1CA85C158();
  v12 = v11;
  v31[0] = v10;
  v31[1] = v11;
  v33 = 1;
  sub_1CA2B6C90();
  swift_bridgeObjectRetain();
  sub_1CA85C14C();
  sub_1CA24EEF8((uint64_t)&v30, (uint64_t)v29, &qword_1ED872D50);
  sub_1CA24EEF8((uint64_t)v29, (uint64_t)&v31[2], &qword_1ED872D50);
  LOBYTE(v26[0]) = 2;
  sub_1CA2B6D24(v29, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1CA2B6828);
  sub_1CA2B6E9C();
  sub_1CA85C14C();
  v31[32] = v27[0];
  v31[33] = v27[1];
  v31[34] = v27[2];
  v31[35] = v27[3];
  v32 = 3;
  v22 = v27[1];
  v23 = v27[0];
  v20 = v27[3];
  v21 = v27[2];
  sub_1CA2B692C(v27[0], v27[1], v27[2], v27[3]);
  sub_1CA2B6EE0();
  sub_1CA85C14C();
  (*(void (**)(char *, _QWORD))(v6 + 8))(v8, 0);
  v13 = v28;
  v31[36] = v28;
  v26[0] = v10;
  v26[1] = v12;
  sub_1CA24EEF8((uint64_t)v29, (uint64_t)&v26[2], &qword_1ED872D50);
  v15 = v22;
  v14 = v23;
  v26[32] = v23;
  v26[33] = v22;
  v17 = v20;
  v16 = v21;
  v26[34] = v21;
  v26[35] = v20;
  v26[36] = v13;
  sub_1CA2B6F24((uint64_t)v26);
  sub_1CA2B6CD4(v14, v15, v16, v17);
  sub_1CA2B6D24(v29, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1CA2B6D98);
  swift_bridgeObjectRelease();
  memcpy(v24, v26, 0x128uLL);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
  memcpy(v27, v31, sizeof(v27));
  return sub_1CA2B706C((uint64_t)v27);
}

uint64_t sub_1CA2B1884@<X0>(_QWORD *a1@<X0>, void *a2@<X8>)
{
  return MusicKitCatalogSong.init(from:)(a1, a2);
}

uint64_t sub_1CA2B1898(_QWORD *a1)
{
  return MusicKitCatalogSong.encode(to:)(a1);
}

uint64_t MusicKitCatalogSong.description.getter()
{
  const void *v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  _BYTE v6[296];
  _BYTE v7[296];

  v1 = type metadata accessor for Song();
  MEMORY[0x1E0C80A78](v1);
  v3 = &v6[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  memcpy(v7, v0, sizeof(v7));
  memcpy(v6, v0, sizeof(v6));
  sub_1CA2B6F24((uint64_t)v7);
  Song.init(_:)(v6, (uint64_t)v3);
  v4 = Song.description.getter();
  sub_1CA268588((uint64_t)v3);
  return v4;
}

uint64_t sub_1CA2B1968()
{
  const void *v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  _BYTE v6[296];
  _BYTE v7[296];

  v1 = type metadata accessor for Song();
  MEMORY[0x1E0C80A78](v1);
  v3 = &v6[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  memcpy(v7, v0, sizeof(v7));
  memcpy(v6, v0, sizeof(v6));
  sub_1CA2B6F24((uint64_t)v7);
  Song.init(_:)(v6, (uint64_t)v3);
  v4 = Song.description.getter();
  sub_1CA268588((uint64_t)v3);
  return v4;
}

uint64_t _s11PhotosGraph19MusicKitCatalogSongV0cD17TesseractMetadataV0cdG12DailyDetailsV2eeoiySbAG_AGtFZ_0(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t result;
  BOOL v14;
  char v15;
  _QWORD *v16;
  int v17;
  _QWORD *v18;
  int v19;
  uint64_t v20;
  uint64_t v21;

  v2 = *(_QWORD **)(a1 + 16);
  v4 = *(_QWORD *)(a1 + 24);
  v3 = *(_QWORD *)(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  v20 = *(_QWORD *)(a1 + 56);
  v21 = *(_QWORD *)(a1 + 48);
  v18 = *(_QWORD **)(a1 + 64);
  v19 = *(unsigned __int8 *)(a1 + 72);
  v7 = *(_QWORD **)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v9 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v10 = *(_QWORD *)(a2 + 48);
  v11 = *(_QWORD *)(a2 + 56);
  v16 = *(_QWORD **)(a2 + 64);
  v17 = *(unsigned __int8 *)(a2 + 72);
  if (*(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8)
    || (v12 = sub_1CA85C284(), result = 0, (v12 & 1) != 0))
  {
    v14 = sub_1CA2A7DD0(v2, v7);
    result = 0;
    if (v14 && v4 == v6 && v3 == v9 && v5 == v8)
    {
      if (v21 == v10 && v20 == v11 || (v15 = sub_1CA85C284(), result = 0, (v15 & 1) != 0))
      {
        if ((sub_1CA2A7FD0(v18, v16) & 1) != 0)
          return v19 ^ v17 ^ 1u;
        else
          return 0;
      }
    }
  }
  return result;
}

uint64_t _s11PhotosGraph19MusicKitCatalogSongV10AttributesV10PlayParamsV2eeoiySbAG_AGtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char v7;
  uint64_t result;

  v2 = a1[2];
  v3 = a1[3];
  v4 = a2[2];
  v5 = a2[3];
  v6 = *a1 == *a2 && a1[1] == a2[1];
  if (v6 || (v7 = sub_1CA85C284(), result = 0, (v7 & 1) != 0))
  {
    if (v2 == v4 && v3 == v5)
      return 1;
    else
      return sub_1CA85C284();
  }
  return result;
}

BOOL _s11PhotosGraph19MusicKitCatalogSongV10AttributesV6UnitagV2eeoiySbAG_AGtFZ_0(uint64_t a1, uint64_t a2)
{
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  _BOOL8 result;

  v4 = *(_BYTE *)(a1 + 4);
  v5 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_QWORD *)(a1 + 32);
  v9 = *(_QWORD *)(a2 + 16);
  v11 = *(_QWORD *)(a2 + 24);
  v10 = *(_QWORD *)(a2 + 32);
  if ((v4 & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 4))
      return 0;
  }
  else
  {
    if (*(float *)a1 == *(float *)a2)
      v12 = *(_BYTE *)(a2 + 4);
    else
      v12 = 1;
    if ((v12 & 1) != 0)
      return 0;
  }
  if (!v6)
  {
    if (v9)
      return 0;
    goto LABEL_15;
  }
  if (!v9)
    return 0;
  if (v5 == *(_QWORD *)(a2 + 8) && v6 == v9 || (v13 = sub_1CA85C284(), result = 0, (v13 & 1) != 0))
  {
LABEL_15:
    if (v8)
      return v10 && (v7 == v11 && v8 == v10 || (sub_1CA85C284() & 1) != 0);
    return !v10;
  }
  return result;
}

uint64_t _s11PhotosGraph19MusicKitCatalogSongV10AttributesV7ArtworkV2eeoiySbAG_AGtFZ_0(_QWORD *a1, _QWORD *a2)
{
  if (*a1 != *a2 || a1[1] != a2[1])
    return 0;
  if (a1[2] == a2[2] && a1[3] == a2[3])
    return 1;
  else
    return sub_1CA85C284();
}

unint64_t sub_1CA2B1D1C()
{
  unint64_t result;

  result = qword_1ED871790;
  if (!qword_1ED871790)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8D9C0C, &type metadata for MusicKitCatalogSong.Attributes.Artwork.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED871790);
  }
  return result;
}

unint64_t sub_1CA2B1D60()
{
  unint64_t result;

  result = qword_1ED8717B0;
  if (!qword_1ED8717B0)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8D9BBC, &type metadata for MusicKitCatalogSong.Attributes.Preview.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED8717B0);
  }
  return result;
}

unint64_t sub_1CA2B1DA4()
{
  unint64_t result;

  result = qword_1ED871768;
  if (!qword_1ED871768)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8D9B6C, &type metadata for MusicKitCatalogSong.Attributes.PlayParams.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED871768);
  }
  return result;
}

unint64_t sub_1CA2B1DE8()
{
  unint64_t result;

  result = qword_1ED874658;
  if (!qword_1ED874658)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8D9B1C, &type metadata for MusicKitCatalogSong.Attributes.Unitag.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED874658);
  }
  return result;
}

uint64_t _s11PhotosGraph19MusicKitCatalogSongV10AttributesV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  float v6;
  uint64_t v7;
  uint64_t v8;
  float v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  float v20;
  float v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  _QWORD *v28;
  uint64_t result;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  char v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  char v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  char v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char v72;
  char v73;
  char v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  _QWORD *v79;
  char v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char v87;
  char v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char v95;
  char v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  int v102;
  char v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char v108;
  char v109;
  char v110;
  char v111;
  int v112;
  char v113;
  char v114;
  uint64_t v115;
  uint64_t v116;
  _QWORD *v117;
  uint64_t v118;
  _QWORD *v119;
  uint64_t v120;
  int v121;
  int v122;
  int v123;
  int v124;
  int v125;
  int v126;
  int v127;
  int v128;
  _QWORD *v129;
  _QWORD *v130;
  _QWORD *v131;
  _QWORD *v132;
  _QWORD *v133;
  _QWORD *v134;
  _QWORD *v135;
  int v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  char v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  int v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  int v181;
  char v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;

  v4 = *(_QWORD *)(a1 + 24);
  v3 = *(_QWORD *)(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  v194 = *(_QWORD *)(a1 + 48);
  v195 = *(_QWORD *)(a1 + 56);
  v192 = *(_QWORD *)(a1 + 64);
  v186 = *(_QWORD *)(a1 + 72);
  v190 = *(_QWORD *)(a1 + 80);
  v184 = *(_QWORD *)(a1 + 88);
  v188 = *(_QWORD *)(a1 + 96);
  v6 = *(float *)(a1 + 104);
  v182 = *(_BYTE *)(a1 + 108);
  v180 = *(_QWORD *)(a1 + 112);
  v175 = *(_QWORD *)(a1 + 120);
  v7 = *(_QWORD *)(a1 + 136);
  v178 = *(_QWORD *)(a1 + 128);
  v8 = *(_QWORD *)(a1 + 144);
  v9 = *(float *)(a1 + 152);
  v11 = *(_QWORD *)(a1 + 160);
  v10 = *(_QWORD *)(a1 + 168);
  v12 = *(_QWORD *)(a1 + 176);
  v13 = *(_QWORD *)(a1 + 192);
  v171 = *(_QWORD *)(a1 + 184);
  v172 = *(_QWORD *)(a1 + 200);
  v14 = *(unsigned __int8 *)(a1 + 208);
  v15 = *(_QWORD **)(a1 + 216);
  v16 = *(_QWORD *)(a1 + 224);
  v17 = *(_QWORD *)(a1 + 232);
  v18 = *(_QWORD *)(a2 + 24);
  v19 = *(_QWORD *)(a2 + 32);
  v20 = *(float *)(a2 + 104);
  v21 = *(float *)(a2 + 152);
  v22 = *(_QWORD *)(a2 + 40);
  v193 = *(_QWORD *)(a2 + 48);
  v23 = *(_QWORD *)(a2 + 56);
  v191 = *(_QWORD *)(a2 + 64);
  v185 = *(_QWORD *)(a2 + 72);
  v189 = *(_QWORD *)(a2 + 80);
  v183 = *(_QWORD *)(a2 + 88);
  v187 = *(_QWORD *)(a2 + 96);
  v181 = *(unsigned __int8 *)(a2 + 108);
  v179 = *(_QWORD *)(a2 + 112);
  v174 = *(_QWORD *)(a2 + 120);
  v177 = *(_QWORD *)(a2 + 128);
  v173 = *(_QWORD *)(a2 + 136);
  v176 = *(_QWORD *)(a2 + 144);
  v170 = *(unsigned __int8 *)(a2 + 156);
  v24 = *(_QWORD *)(a2 + 184);
  v26 = *(_QWORD *)(a2 + 192);
  v25 = *(_QWORD *)(a2 + 200);
  v27 = *(unsigned __int8 *)(a2 + 208);
  v28 = *(_QWORD **)(a2 + 216);
  v168 = *(_QWORD *)(a2 + 224);
  v169 = *(_QWORD *)(a2 + 232);
  if (v4)
  {
    if (!v18)
      goto LABEL_17;
    v166 = v7;
    v167 = v8;
    v165 = *(_BYTE *)(a1 + 156);
    result = 0;
    if (*(_QWORD *)a1 != *(_QWORD *)a2)
      return result;
    v163 = *(_QWORD *)(a2 + 160);
    v164 = *(_QWORD *)(a2 + 168);
    v162 = *(_QWORD *)(a2 + 176);
    if (*(_QWORD *)(a1 + 8) != *(_QWORD *)(a2 + 8))
      return result;
    v10 = *(_QWORD *)(a1 + 168);
    if (*(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16) || v4 != v18)
    {
      v145 = *(_QWORD *)(a1 + 176);
      v152 = *(_QWORD *)(a1 + 224);
      v129 = *(_QWORD **)(a1 + 216);
      v136 = *(unsigned __int8 *)(a2 + 208);
      v30 = *(_QWORD *)(a1 + 232);
      v31 = *(unsigned __int8 *)(a1 + 208);
      v119 = *(_QWORD **)(a2 + 216);
      v120 = *(_QWORD *)(a2 + 200);
      v32 = *(_QWORD *)(a1 + 192);
      v33 = *(_QWORD *)(a2 + 192);
      v137 = *(_QWORD *)(a2 + 184);
      v141 = *(_QWORD *)(a1 + 168);
      v34 = sub_1CA85C284();
      v24 = v137;
      v10 = v141;
      v25 = v120;
      v26 = v33;
      v12 = v145;
      v16 = v152;
      v13 = v32;
      v28 = v119;
      v14 = v31;
      v17 = v30;
      v27 = v136;
      v15 = v129;
      v35 = v34;
      result = 0;
      if ((v35 & 1) == 0)
        return result;
    }
  }
  else
  {
    v166 = v7;
    v167 = v8;
    v165 = *(_BYTE *)(a1 + 156);
    v163 = *(_QWORD *)(a2 + 160);
    v164 = *(_QWORD *)(a2 + 168);
    v162 = *(_QWORD *)(a2 + 176);
    if (v18)
      goto LABEL_18;
  }
  if (v5)
  {
    if (!v22)
      return 0;
    if (v3 != v19 || v5 != v22)
    {
      v146 = v12;
      v153 = v16;
      v36 = v17;
      v121 = v14;
      v37 = v28;
      v38 = v13;
      v39 = v25;
      v40 = v26;
      v138 = v24;
      v142 = v10;
      v41 = v15;
      v42 = sub_1CA85C284();
      v15 = v41;
      v24 = v138;
      v10 = v142;
      v26 = v40;
      v25 = v39;
      v12 = v146;
      v16 = v153;
      v13 = v38;
      v28 = v37;
      v14 = v121;
      v17 = v36;
      v43 = v42;
      result = 0;
      if ((v43 & 1) == 0)
        return result;
    }
  }
  else if (v22)
  {
    return 0;
  }
  if (!v195)
  {
    if (!v23)
      goto LABEL_29;
LABEL_18:
    swift_bridgeObjectRelease();
    return 0;
  }
  if (!v23)
  {
LABEL_17:
    swift_bridgeObjectRetain();
    goto LABEL_18;
  }
  if (v194 != v193 || v195 != v23)
  {
    v147 = v12;
    v154 = v16;
    v44 = v17;
    v122 = v14;
    v45 = v13;
    v46 = v25;
    v47 = v26;
    v48 = v10;
    v130 = v15;
    v49 = v24;
    v50 = sub_1CA85C284();
    v15 = v130;
    v24 = v49;
    v10 = v48;
    v26 = v47;
    v25 = v46;
    v12 = v147;
    v16 = v154;
    v13 = v45;
    v14 = v122;
    v17 = v44;
    v51 = v50;
    result = 0;
    if ((v51 & 1) == 0)
      return result;
  }
LABEL_29:
  if (v192)
  {
    if (!v191)
      return 0;
    v155 = v16;
    v52 = v17;
    v123 = v14;
    v196 = v13;
    v53 = v12;
    v54 = v25;
    v55 = v26;
    v139 = v24;
    v143 = v10;
    v56 = v15;
    v57 = sub_1CA2A7E3C(v192, v191);
    v15 = v56;
    v24 = v139;
    v10 = v143;
    v26 = v55;
    v25 = v54;
    v12 = v53;
    v13 = v196;
    v14 = v123;
    v17 = v52;
    v16 = v155;
    if ((v57 & 1) == 0)
      return 0;
  }
  else if (v191)
  {
    return 0;
  }
  if (v190)
  {
    if (!v189)
      return 0;
    if (v186 != v185 || v190 != v189)
    {
      v148 = v12;
      v156 = v16;
      v58 = v17;
      v124 = v14;
      v59 = v13;
      v60 = v25;
      v61 = v26;
      v62 = v10;
      v131 = v15;
      v63 = v24;
      v64 = sub_1CA85C284();
      v15 = v131;
      v24 = v63;
      v10 = v62;
      v26 = v61;
      v25 = v60;
      v12 = v148;
      v16 = v156;
      v13 = v59;
      v14 = v124;
      v17 = v58;
      v65 = v64;
      result = 0;
      if ((v65 & 1) == 0)
        return result;
    }
  }
  else if (v189)
  {
    return 0;
  }
  if (v188)
  {
    if (!v187)
      return 0;
    if (v184 != v183 || v188 != v187)
    {
      v149 = v12;
      v157 = v16;
      v66 = v17;
      v125 = v14;
      v67 = v13;
      v68 = v25;
      v69 = v26;
      v70 = v10;
      v132 = v15;
      v71 = v24;
      v72 = sub_1CA85C284();
      v15 = v132;
      v24 = v71;
      v10 = v70;
      v26 = v69;
      v25 = v68;
      v12 = v149;
      v16 = v157;
      v13 = v67;
      v14 = v125;
      v17 = v66;
      v73 = v72;
      result = 0;
      if ((v73 & 1) == 0)
        return result;
    }
  }
  else if (v187)
  {
    return 0;
  }
  if ((v182 & 1) != 0)
  {
    if (!v181)
      return 0;
  }
  else
  {
    v74 = v181;
    if (v6 != v20)
      v74 = 1;
    if ((v74 & 1) != 0)
      return 0;
  }
  if (v180)
  {
    if (!v179)
      return 0;
    v158 = v16;
    v75 = v17;
    v126 = v14;
    v197 = v13;
    v76 = v12;
    v77 = v25;
    v78 = v26;
    v140 = v24;
    v144 = v10;
    v79 = v15;
    v80 = sub_1CA2A7EC0(v180, v179);
    v15 = v79;
    v24 = v140;
    v10 = v144;
    v26 = v78;
    v25 = v77;
    v12 = v76;
    v13 = v197;
    v14 = v126;
    v17 = v75;
    v16 = v158;
    if ((v80 & 1) == 0)
      return 0;
  }
  else if (v179)
  {
    return 0;
  }
  if (v178)
  {
    if (!v177)
      return 0;
    if (v175 != v174 || v178 != v177)
    {
      v150 = v12;
      v159 = v16;
      v81 = v17;
      v127 = v14;
      v82 = v13;
      v83 = v25;
      v84 = v26;
      v85 = v10;
      v133 = v15;
      v86 = v24;
      v87 = sub_1CA85C284();
      v15 = v133;
      v24 = v86;
      v10 = v85;
      v26 = v84;
      v25 = v83;
      v12 = v150;
      v16 = v159;
      v13 = v82;
      v14 = v127;
      v17 = v81;
      v88 = v87;
      result = 0;
      if ((v88 & 1) == 0)
        return result;
    }
  }
  else if (v177)
  {
    return 0;
  }
  if (v167)
  {
    if (!v176)
      return 0;
    if (v166 != v173 || v167 != v176)
    {
      v151 = v12;
      v160 = v16;
      v89 = v17;
      v128 = v14;
      v90 = v13;
      v91 = v25;
      v92 = v26;
      v93 = v10;
      v134 = v15;
      v94 = v24;
      v95 = sub_1CA85C284();
      v15 = v134;
      v24 = v94;
      v10 = v93;
      v26 = v92;
      v25 = v91;
      v12 = v151;
      v16 = v160;
      v13 = v90;
      v14 = v128;
      v17 = v89;
      v96 = v95;
      result = 0;
      if ((v96 & 1) == 0)
        return result;
    }
  }
  else if (v176)
  {
    return 0;
  }
  v97 = v24;
  v118 = v17;
  v98 = v26;
  v161 = v16;
  v99 = v25;
  v100 = v12;
  v101 = v13;
  v102 = v14;
  v135 = v15;
  if ((v165 & 1) != 0)
  {
    if (!v170)
      return 0;
  }
  else
  {
    v103 = v170;
    if (v9 != v21)
      v103 = 1;
    if ((v103 & 1) != 0)
      return 0;
  }
  if (v10)
  {
    if (v164)
    {
      if (v11 != v163 || (v104 = v172, v105 = v171, v106 = v12, v107 = v24, v10 != v164))
      {
        v108 = sub_1CA85C284();
        v107 = v97;
        v106 = v100;
        v105 = v171;
        v104 = v172;
        v109 = v108;
        result = 0;
        if ((v109 & 1) == 0)
          return result;
      }
      if (v106 != v162 || v105 != v107)
      {
        v110 = sub_1CA85C284();
        v104 = v172;
        v111 = v110;
        result = 0;
        if ((v111 & 1) == 0)
          return result;
      }
      goto LABEL_89;
    }
    v115 = v10;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v10 = v115;
LABEL_96:
    v116 = v10;
    sub_1CA2B2A4C(v163, v164);
    sub_1CA2B290C(v11, v116);
    sub_1CA2B290C(v163, v164);
    return 0;
  }
  v104 = v172;
  if (v164)
    goto LABEL_96;
LABEL_89:
  if (v104)
  {
    if (!v99)
      return 0;
    if (v101 != v98 || (v112 = v102, v172 != v99))
    {
      v113 = sub_1CA85C284();
      v112 = v102;
      v114 = v113;
      result = 0;
      if ((v114 & 1) == 0)
        return result;
    }
  }
  else
  {
    v112 = v102;
    if (v99)
      return 0;
  }
  if (v112 == 2)
  {
    v117 = v135;
    if (v27 != 2)
      return 0;
    goto LABEL_103;
  }
  result = 0;
  if (v27 != 2)
  {
    v117 = v135;
    if (((((v102 & 1) == 0) ^ v27) & 1) != 0)
    {
LABEL_103:
      if (v117)
      {
        if (v28 && (sub_1CA2A7FD0(v135, v28) & 1) != 0)
        {
LABEL_108:
          if (v118)
          {
            if (v169 && (v161 == v168 && v118 == v169 || (sub_1CA85C284() & 1) != 0))
              return 1;
          }
          else if (!v169)
          {
            return 1;
          }
        }
      }
      else if (!v28)
      {
        goto LABEL_108;
      }
      return 0;
    }
  }
  return result;
}

unint64_t sub_1CA2B27B8()
{
  unint64_t result;

  result = qword_1ED871750;
  if (!qword_1ED871750)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8D9ACC, &type metadata for MusicKitCatalogSong.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED871750);
  }
  return result;
}

unint64_t sub_1CA2B27FC()
{
  unint64_t result;

  result = qword_1EF94C570;
  if (!qword_1EF94C570)
  {
    result = MEMORY[0x1CAA4F1A4](&protocol conformance descriptor for MusicKitCatalogSong.Attributes.Artwork, &type metadata for MusicKitCatalogSong.Attributes.Artwork);
    atomic_store(result, (unint64_t *)&qword_1EF94C570);
  }
  return result;
}

unint64_t sub_1CA2B2840()
{
  unint64_t result;

  result = qword_1EF94C578;
  if (!qword_1EF94C578)
  {
    result = MEMORY[0x1CAA4F1A4](&protocol conformance descriptor for MusicKitCatalogSong.Attributes.Preview, &type metadata for MusicKitCatalogSong.Attributes.Preview);
    atomic_store(result, (unint64_t *)&qword_1EF94C578);
  }
  return result;
}

unint64_t sub_1CA2B2884()
{
  unint64_t result;

  result = qword_1EF94C590;
  if (!qword_1EF94C590)
  {
    result = MEMORY[0x1CAA4F1A4](&protocol conformance descriptor for MusicKitCatalogSong.Attributes.Unitag, &type metadata for MusicKitCatalogSong.Attributes.Unitag);
    atomic_store(result, (unint64_t *)&qword_1EF94C590);
  }
  return result;
}

unint64_t sub_1CA2B28C8()
{
  unint64_t result;

  result = qword_1EF94C598;
  if (!qword_1EF94C598)
  {
    result = MEMORY[0x1CAA4F1A4](&protocol conformance descriptor for MusicKitCatalogSong.Attributes.PlayParams, &type metadata for MusicKitCatalogSong.Attributes.PlayParams);
    atomic_store(result, (unint64_t *)&qword_1EF94C598);
  }
  return result;
}

uint64_t sub_1CA2B290C(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_1CA2B293C()
{
  unint64_t result;

  result = qword_1ED8717A8;
  if (!qword_1ED8717A8)
  {
    result = MEMORY[0x1CAA4F1A4](&protocol conformance descriptor for MusicKitCatalogSong.Attributes.Artwork, &type metadata for MusicKitCatalogSong.Attributes.Artwork);
    atomic_store(result, (unint64_t *)&qword_1ED8717A8);
  }
  return result;
}

unint64_t sub_1CA2B2980()
{
  unint64_t result;

  result = qword_1ED8717C8;
  if (!qword_1ED8717C8)
  {
    result = MEMORY[0x1CAA4F1A4](&protocol conformance descriptor for MusicKitCatalogSong.Attributes.Preview, &type metadata for MusicKitCatalogSong.Attributes.Preview);
    atomic_store(result, (unint64_t *)&qword_1ED8717C8);
  }
  return result;
}

unint64_t sub_1CA2B29C4()
{
  unint64_t result;

  result = qword_1ED871788;
  if (!qword_1ED871788)
  {
    result = MEMORY[0x1CAA4F1A4](&protocol conformance descriptor for MusicKitCatalogSong.Attributes.Unitag, &type metadata for MusicKitCatalogSong.Attributes.Unitag);
    atomic_store(result, (unint64_t *)&qword_1ED871788);
  }
  return result;
}

unint64_t sub_1CA2B2A08()
{
  unint64_t result;

  result = qword_1ED871780;
  if (!qword_1ED871780)
  {
    result = MEMORY[0x1CAA4F1A4](&protocol conformance descriptor for MusicKitCatalogSong.Attributes.PlayParams, &type metadata for MusicKitCatalogSong.Attributes.PlayParams);
    atomic_store(result, (unint64_t *)&qword_1ED871780);
  }
  return result;
}

uint64_t sub_1CA2B2A4C(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1CA2B2A7C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v4;

  v2 = *(_QWORD *)(a1 + 160);
  v4 = *(_QWORD *)(a1 + 168);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1CA2B2A4C(v2, v4);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1CA2B2B78(uint64_t a1)
{
  uint64_t v2;
  uint64_t v4;

  v2 = *(_QWORD *)(a1 + 160);
  v4 = *(_QWORD *)(a1 + 168);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1CA2B290C(v2, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

unint64_t sub_1CA2B2C74()
{
  unint64_t result;

  result = qword_1EF94C5A8;
  if (!qword_1EF94C5A8)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8D9A7C, &type metadata for MusicKitCatalogSong.Relationships.Equivalents.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF94C5A8);
  }
  return result;
}

unint64_t sub_1CA2B2CB8()
{
  unint64_t result;

  result = qword_1EF94C5C0;
  if (!qword_1EF94C5C0)
  {
    result = MEMORY[0x1CAA4F1A4](&protocol conformance descriptor for MusicKitCatalogSong.Relationships.EquivalentsData, &type metadata for MusicKitCatalogSong.Relationships.EquivalentsData);
    atomic_store(result, (unint64_t *)&qword_1EF94C5C0);
  }
  return result;
}

unint64_t sub_1CA2B2CFC()
{
  unint64_t result;

  result = qword_1EF94C5D8;
  if (!qword_1EF94C5D8)
  {
    result = MEMORY[0x1CAA4F1A4](&protocol conformance descriptor for MusicKitCatalogSong.Relationships.EquivalentsData, &type metadata for MusicKitCatalogSong.Relationships.EquivalentsData);
    atomic_store(result, (unint64_t *)&qword_1EF94C5D8);
  }
  return result;
}

unint64_t sub_1CA2B2D40()
{
  unint64_t result;

  result = qword_1EF94C5E8;
  if (!qword_1EF94C5E8)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8D9A2C, &type metadata for MusicKitCatalogSong.Relationships.Lyrics.LyricsData.LyricAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF94C5E8);
  }
  return result;
}

BOOL _s11PhotosGraph19MusicKitCatalogSongV13RelationshipsV25AudioAnalysisRelationshipV0hI4DataV0hI10AttributesV0hI3BPMV2eeoiySbAM_AMtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char v3;
  uint64_t v4;
  char v5;
  float v6;
  char v7;
  char v8;
  char v9;
  char v10;
  char v12;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_BYTE *)(a1 + 24);
  v4 = *(_QWORD *)(a1 + 32);
  v5 = *(_BYTE *)(a1 + 40);
  v6 = *(float *)(a1 + 44);
  v7 = *(_BYTE *)(a1 + 48);
  if ((*(_BYTE *)(a1 + 8) & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 8))
      return 0;
  }
  else
  {
    if (*(_QWORD *)a1 == *(_QWORD *)a2)
      v8 = *(_BYTE *)(a2 + 8);
    else
      v8 = 1;
    if ((v8 & 1) != 0)
      return 0;
  }
  if ((v3 & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 24))
      return 0;
  }
  else
  {
    if (v2 == *(_QWORD *)(a2 + 16))
      v9 = *(_BYTE *)(a2 + 24);
    else
      v9 = 1;
    if ((v9 & 1) != 0)
      return 0;
  }
  if ((v5 & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 40))
      return 0;
  }
  else
  {
    if (v4 == *(_QWORD *)(a2 + 32))
      v10 = *(_BYTE *)(a2 + 40);
    else
      v10 = 1;
    if ((v10 & 1) != 0)
      return 0;
  }
  if ((v7 & 1) == 0)
  {
    if (v6 == *(float *)(a2 + 44))
      v12 = *(_BYTE *)(a2 + 48);
    else
      v12 = 1;
    return (v12 & 1) == 0;
  }
  return (*(_BYTE *)(a2 + 48) & 1) != 0;
}

uint64_t _s11PhotosGraph19MusicKitCatalogSongV13RelationshipsV25AudioAnalysisRelationshipV0hI4DataV0hI10AttributesV0hI3KeyV0himL0V2eeoiySbAO_AOtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  char v10;
  uint64_t result;

  v3 = a1[1];
  v4 = a1[2];
  v5 = a1[3];
  v6 = a2[1];
  v7 = a2[2];
  v8 = a2[3];
  if (!v3)
  {
    if (v6)
      return 0;
    goto LABEL_10;
  }
  if (!v6)
    return 0;
  v9 = *a1 == *a2 && v3 == v6;
  if (v9 || (v10 = sub_1CA85C284(), result = 0, (v10 & 1) != 0))
  {
LABEL_10:
    if (v5)
    {
      if (v8 && (v4 == v7 && v5 == v8 || (sub_1CA85C284() & 1) != 0))
        return 1;
    }
    else if (!v8)
    {
      return 1;
    }
    return 0;
  }
  return result;
}

uint64_t _s11PhotosGraph19MusicKitCatalogSongV13RelationshipsV25AudioAnalysisRelationshipV0hI4DataV0hI10AttributesV0hI3KeyV2eeoiySbAM_AMtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t result;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  char v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char v65;
  char v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char v78;
  char v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;

  v2 = *a1;
  v3 = a1[1];
  v4 = a1[2];
  v5 = a1[3];
  v6 = a1[4];
  v7 = a1[5];
  v9 = a1[6];
  v8 = a1[7];
  v11 = a1[8];
  v10 = a1[9];
  v13 = a1[10];
  v12 = a1[11];
  v15 = *a2;
  v14 = a2[1];
  v16 = a2[2];
  v17 = a2[3];
  v18 = a2[4];
  v19 = a2[5];
  v20 = a2[6];
  v21 = a2[7];
  v23 = a2[8];
  v22 = a2[9];
  v24 = a2[10];
  v25 = a2[11];
  if (v3 != 1)
  {
    if (v14 != 1)
    {
      if (v3)
      {
        if (!v14)
          return 0;
        if (v2 != v15 || v3 != v14)
        {
          v97 = a2[10];
          v100 = a1[10];
          v93 = a2[11];
          v95 = a1[11];
          v89 = a2[4];
          v91 = a2[6];
          v85 = a1[9];
          v86 = a2[7];
          v31 = a1[8];
          v87 = a2[9];
          v88 = a1[7];
          v32 = a2[8];
          v33 = a1[6];
          v34 = a1[4];
          v35 = sub_1CA85C284();
          v18 = v89;
          v20 = v91;
          v6 = v34;
          v21 = v86;
          v22 = v87;
          v9 = v33;
          v8 = v88;
          v23 = v32;
          v11 = v31;
          v10 = v85;
          v24 = v97;
          v13 = v100;
          v25 = v93;
          v12 = v95;
          v36 = v35;
          result = 0;
          if ((v36 & 1) == 0)
            return result;
        }
      }
      else if (v14)
      {
        return 0;
      }
      if (v5)
      {
        if (!v17)
          return 0;
        if (v4 != v16 || v5 != v17)
        {
          v98 = v24;
          v101 = v13;
          v94 = v25;
          v96 = v12;
          v90 = v18;
          v92 = v20;
          v45 = v10;
          v46 = v11;
          v47 = v22;
          v48 = v23;
          v49 = v8;
          v50 = v9;
          v51 = v21;
          v52 = v6;
          v53 = sub_1CA85C284();
          v18 = v90;
          v20 = v92;
          v6 = v52;
          v21 = v51;
          v9 = v50;
          v8 = v49;
          v23 = v48;
          v22 = v47;
          v11 = v46;
          v10 = v45;
          v24 = v98;
          v13 = v101;
          v25 = v94;
          v12 = v96;
          v54 = v53;
          result = 0;
          if ((v54 & 1) == 0)
            return result;
        }
      }
      else if (v17)
      {
        return 0;
      }
      goto LABEL_3;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
LABEL_10:
    sub_1CA2B5228(v15, v14);
    sub_1CA2B525C(v2, v3);
    v29 = v15;
    v30 = v14;
LABEL_36:
    sub_1CA2B525C(v29, v30);
    return 0;
  }
  if (v14 != 1)
    goto LABEL_10;
LABEL_3:
  if (v7 == 1)
  {
    if (v19 == 1)
    {
LABEL_5:
      if (v10 == 1)
      {
        v26 = v11;
        v27 = 1;
        if (v22 == 1)
          return 1;
      }
      else
      {
        if (v22 != 1)
        {
          if (v10)
          {
            if (!v22)
              return 0;
            if (v11 != v23 || v10 != v22)
            {
              v80 = v13;
              v81 = v24;
              v82 = v12;
              v83 = v25;
              v84 = sub_1CA85C284();
              v24 = v81;
              v25 = v83;
              v13 = v80;
              v12 = v82;
              if ((v84 & 1) == 0)
                return 0;
            }
          }
          else if (v22)
          {
            return 0;
          }
          if (v12)
          {
            if (v25 && (v13 == v24 && v12 == v25 || (sub_1CA85C284() & 1) != 0))
              return 1;
          }
          else if (!v25)
          {
            return 1;
          }
          return 0;
        }
        v26 = v11;
        v27 = v10;
        v67 = v23;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v23 = v67;
        v22 = 1;
      }
      v68 = v22;
      v69 = v23;
      sub_1CA2B5228(v23, v22);
      sub_1CA2B525C(v26, v27);
      v29 = v69;
      v30 = v68;
      goto LABEL_36;
    }
    goto LABEL_19;
  }
  v37 = v18;
  v38 = v20;
  v39 = v21;
  v40 = v9;
  v41 = v8;
  if (v19 == 1)
  {
    v42 = v6;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v6 = v42;
    v18 = v37;
LABEL_19:
    v43 = v6;
    v44 = v18;
    sub_1CA2B5228(v18, v19);
    sub_1CA2B525C(v43, v7);
    v29 = v44;
    v30 = v19;
    goto LABEL_36;
  }
  if (v7)
  {
    if (v19)
    {
      if (v6 != v18 || (v55 = v8, v56 = v9, v57 = v21, v58 = v20, v7 != v19))
      {
        v99 = v24;
        v102 = v13;
        v59 = v12;
        v60 = v25;
        v61 = v10;
        v62 = v11;
        v63 = v22;
        v64 = v23;
        v65 = sub_1CA85C284();
        v58 = v38;
        v57 = v39;
        v56 = v40;
        v55 = v41;
        v23 = v64;
        v22 = v63;
        v11 = v62;
        v10 = v61;
        v24 = v99;
        v13 = v102;
        v25 = v60;
        v12 = v59;
        v66 = v65;
        result = 0;
        if ((v66 & 1) == 0)
          return result;
      }
      goto LABEL_42;
    }
    return 0;
  }
  v55 = v8;
  v56 = v9;
  v57 = v21;
  v58 = v20;
  if (v19)
    return 0;
LABEL_42:
  if (!v55)
  {
    if (v57)
      return 0;
    goto LABEL_5;
  }
  if (!v57)
    return 0;
  if (v56 == v58 && v55 == v57)
    goto LABEL_5;
  v70 = v13;
  v71 = v24;
  v72 = v12;
  v73 = v25;
  v74 = v10;
  v75 = v11;
  v76 = v22;
  v77 = v23;
  v78 = sub_1CA85C284();
  v23 = v77;
  v22 = v76;
  v11 = v75;
  v10 = v74;
  v24 = v71;
  v25 = v73;
  v13 = v70;
  v12 = v72;
  v79 = v78;
  result = 0;
  if ((v79 & 1) != 0)
    goto LABEL_5;
  return result;
}

uint64_t _s11PhotosGraph19MusicKitCatalogSongV13RelationshipsV25AudioAnalysisRelationshipV0hI4DataV0hI10AttributesV0hI5BeatsV2eeoiySbAM_AMtFZ_0(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;
  _QWORD *v5;
  _QWORD *v6;
  _QWORD *v7;

  v4 = *(_QWORD **)a1;
  v5 = *(_QWORD **)(a1 + 8);
  v6 = *(_QWORD **)a2;
  v7 = *(_QWORD **)(a2 + 8);
  if (v4)
  {
    if (!v6 || !sub_1CA2A7DD0(v4, v6))
      return 0;
  }
  else if (v6)
  {
    return 0;
  }
  if (v5)
  {
    if (v7 && sub_1CA2A7DD0(v5, v7))
      return 1;
  }
  else if (!v7)
  {
    return 1;
  }
  return 0;
}

uint64_t _s11PhotosGraph19MusicKitCatalogSongV13RelationshipsV25AudioAnalysisRelationshipV0hI4DataV0hI10AttributesV0hi10TimeSeriesL0V2eeoiySbAM_AMtFZ_0(uint64_t a1, uint64_t *a2)
{
  char v3;
  float v4;
  char v5;
  float v6;
  char v7;
  float v8;
  char v9;
  char v10;
  float v11;
  char v12;
  float v13;
  char v14;
  float v15;
  char v16;
  char v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  float v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v3 = *(_BYTE *)(a1 + 21);
  v4 = *(float *)(a1 + 24);
  v5 = *(_BYTE *)(a1 + 28);
  v6 = *(float *)(a1 + 32);
  v7 = *(_BYTE *)(a1 + 36);
  v8 = *(float *)(a1 + 40);
  v9 = *(_BYTE *)(a1 + 44);
  v10 = *(_BYTE *)(a1 + 45);
  v11 = *(float *)(a1 + 48);
  v12 = *(_BYTE *)(a1 + 52);
  v13 = *(float *)(a1 + 56);
  v14 = *(_BYTE *)(a1 + 60);
  v15 = *(float *)(a1 + 64);
  v16 = *(_BYTE *)(a1 + 68);
  v17 = *(_BYTE *)(a1 + 69);
  result = *((unsigned __int8 *)a2 + 21);
  v20 = a2[3];
  v19 = a2[4];
  v21 = *((unsigned __int8 *)a2 + 44);
  v22 = *((unsigned int *)a2 + 10);
  v23 = *((unsigned __int8 *)a2 + 45);
  v25 = a2[6];
  v24 = a2[7];
  v26 = *((unsigned __int8 *)a2 + 68);
  v27 = *((unsigned int *)a2 + 16);
  v28 = *((_BYTE *)a2 + 69);
  if ((v3 & 1) != 0)
  {
    if (!*((_BYTE *)a2 + 21))
      return result;
    goto LABEL_3;
  }
  if ((result & 1) != 0)
    return 0;
  v30 = *a2;
  v29 = a2[1];
  v31 = *((unsigned __int8 *)a2 + 20);
  v32 = *((unsigned int *)a2 + 4);
  v33 = *(float *)(a1 + 16);
  v34 = *(_BYTE *)(a1 + 20);
  if ((*(_BYTE *)(a1 + 4) & 1) != 0)
  {
    if ((v30 & 0x100000000) == 0)
      return 0;
  }
  else
  {
    result = 0;
    if ((v30 & 0x100000000) != 0 || *(float *)a1 != *(float *)&v30)
      return result;
  }
  if ((*(_BYTE *)(a1 + 12) & 1) != 0)
  {
    if ((v29 & 0x100000000) == 0)
      return 0;
  }
  else
  {
    result = 0;
    if ((v29 & 0x100000000) != 0 || *(float *)(a1 + 8) != *(float *)&v29)
      return result;
  }
  v35 = v32 | (v31 << 32);
  if ((v34 & 1) != 0)
  {
    if ((v35 & 0x100000000) == 0)
      return 0;
LABEL_3:
    if ((v10 & 1) != 0)
    {
      if (!v23)
        return 0;
      goto LABEL_5;
    }
    if ((v23 & 1) != 0)
      return 0;
    if ((v5 & 1) != 0)
    {
      if ((v20 & 0x100000000) == 0)
        return 0;
    }
    else
    {
      result = 0;
      if ((v20 & 0x100000000) != 0 || v4 != *(float *)&v20)
        return result;
    }
    if ((v7 & 1) != 0)
    {
      if ((v19 & 0x100000000) == 0)
        return 0;
    }
    else
    {
      result = 0;
      if ((v19 & 0x100000000) != 0 || v6 != *(float *)&v19)
        return result;
    }
    v36 = v22 | (v21 << 32);
    if ((v9 & 1) != 0)
    {
      if ((v36 & 0x100000000) == 0)
        return 0;
    }
    else
    {
      result = 0;
      if ((v36 & 0x100000000) != 0 || v8 != *(float *)&v22)
        return result;
    }
LABEL_5:
    if ((v17 & 1) != 0)
      return (v28 & 1) != 0;
    if ((v28 & 1) == 0)
    {
      if ((v12 & 1) != 0)
      {
        if ((v25 & 0x100000000) == 0)
          return 0;
      }
      else if ((v25 & 0x100000000) != 0 || v11 != *(float *)&v25)
      {
        return 0;
      }
      if ((v14 & 1) == 0)
      {
        if ((v24 & 0x100000000) != 0 || v13 != *(float *)&v24)
          return 0;
LABEL_53:
        v37 = v27 | (v26 << 32);
        if ((v16 & 1) != 0)
        {
          if ((v37 & 0x100000000) != 0)
            return 1;
        }
        else if ((v37 & 0x100000000) == 0 && v15 == *(float *)&v27)
        {
          return 1;
        }
        return 0;
      }
      if ((v24 & 0x100000000) != 0)
        goto LABEL_53;
    }
    return 0;
  }
  result = 0;
  if ((v35 & 0x100000000) == 0 && v33 == *(float *)&v32)
    goto LABEL_3;
  return result;
}

BOOL sub_1CA2B3688(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;
  char v4;

  v2 = *(_BYTE *)(a2 + 4);
  v3 = *(_BYTE *)(a2 + 12);
  v4 = *(_BYTE *)(a2 + 20);
  if ((*(_BYTE *)(a1 + 4) & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 4))
      return 0;
  }
  else
  {
    if (*(float *)a1 != *(float *)a2)
      v2 = 1;
    if ((v2 & 1) != 0)
      return 0;
  }
  if ((*(_BYTE *)(a1 + 12) & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 12))
      return 0;
  }
  else
  {
    if (*(float *)(a1 + 8) != *(float *)(a2 + 8))
      v3 = 1;
    if ((v3 & 1) != 0)
      return 0;
  }
  if ((*(_BYTE *)(a1 + 20) & 1) == 0)
  {
    if (*(float *)(a1 + 16) != *(float *)(a2 + 16))
      v4 = 1;
    return (v4 & 1) == 0;
  }
  return (*(_BYTE *)(a2 + 20) & 1) != 0;
}

uint64_t _s11PhotosGraph19MusicKitCatalogSongV13RelationshipsV25AudioAnalysisRelationshipV0hI4DataV0hI10AttributesV2eeoiySbAK_AKtFZ_0(uint64_t a1, uint64_t a2)
{
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  float v9;
  float v10;
  float v11;
  float v12;
  float v13;
  char v14;
  float v15;
  float v16;
  float v17;
  float v18;
  float v19;
  float v20;
  float v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  float v26;
  float v27;
  float v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  _QWORD *v32;
  _QWORD *v33;
  unsigned __int8 v34;
  uint64_t v35;
  char v36;
  char v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  char v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t result;
  uint64_t v69;
  uint64_t v70;
  float v71;
  float v72;
  __int128 v73;
  uint64_t v74;
  uint64_t v75;
  char v76;
  char v77;
  _QWORD *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char v83;
  uint64_t v84;
  char v85;
  float v86;
  uint64_t v87;
  uint64_t v88;
  float v89;
  char v90;
  char v91;
  _QWORD *v92;
  uint64_t v93;
  uint64_t v94;
  char v95;
  uint64_t v96;
  char v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  _QWORD *v101;
  uint64_t v102;
  char v103;
  uint64_t v104;
  BOOL v105;
  char v106;
  float v107;
  float v108;
  float v109;
  float v110;
  float v111;
  float v112;
  float v113;
  __int128 v114;
  __int128 v115;
  __int128 v116;
  __int128 v117;
  __int128 v118;
  __int128 v119;
  __int128 v120;
  char v121;
  uint64_t v122;
  uint64_t v123;
  _QWORD *v124;
  char v125;
  char v126;
  uint64_t v127;
  _QWORD *v128;
  unsigned __int8 v129;
  char v130;
  int v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  char v136;
  char v137;
  uint64_t v138;
  uint64_t v139;
  char v140;
  uint64_t v141;
  uint64_t v142;
  char v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  int v148;
  uint64_t v149;
  char v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  char v154;
  uint64_t v155;
  char v156;
  char v157;
  char v158;
  uint64_t v159;
  char v160;
  uint64_t v161;
  uint64_t v162;
  char v163;
  uint64_t v164;
  char v165;
  int v166;
  char v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  char v171;
  uint64_t v172;
  char v173;
  char v174;
  uint64_t v175;
  char v176;
  uint64_t v177;
  char v178;
  int v179;
  char v180;
  uint64_t v181;
  uint64_t v182;
  char v183;
  int v184;
  char v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  char v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  char v193;
  char v194;
  uint64_t v195;
  _QWORD *v196;
  _QWORD *v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  char v202;
  char v203;
  char v204;
  uint64_t v205;
  __int128 v206;
  __int128 v207;
  __int128 v208;
  uint64_t v209;
  __int128 v210;
  __int128 v211;
  __int128 v212;
  uint64_t v213;
  __int128 v214;
  __int128 v215;
  __int128 v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  __int128 v224;
  uint64_t v225;
  __int128 v226;
  uint64_t v227;
  __int128 v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  __int128 v233;
  __int128 v234;
  __int128 v235;
  __int128 v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;

  v2 = (_BYTE *)(a1 + 256);
  v3 = *(_QWORD *)a1;
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  v7 = *(_QWORD *)(a1 + 32);
  v6 = *(_QWORD *)(a1 + 40);
  v219 = *(_QWORD *)(a1 + 48);
  v221 = *(_QWORD *)(a1 + 56);
  v220 = *(_QWORD *)(a1 + 64);
  v223 = *(_QWORD *)(a1 + 72);
  v8 = *(_QWORD *)(a1 + 88);
  v222 = *(_QWORD *)(a1 + 80);
  v9 = *(float *)(a1 + 96);
  v178 = *(_BYTE *)(a1 + 100);
  v10 = *(float *)(a1 + 104);
  v176 = *(_BYTE *)(a1 + 108);
  v11 = *(float *)(a1 + 112);
  v171 = *(_BYTE *)(a1 + 116);
  v185 = *(_BYTE *)(a1 + 117);
  v12 = *(float *)(a1 + 120);
  v173 = *(_BYTE *)(a1 + 124);
  v13 = *(float *)(a1 + 128);
  v14 = *(_BYTE *)(a1 + 132);
  v15 = *(float *)(a1 + 136);
  v163 = *(_BYTE *)(a1 + 140);
  v180 = *(_BYTE *)(a1 + 141);
  v16 = *(float *)(a1 + 144);
  v165 = *(_BYTE *)(a1 + 148);
  v17 = *(float *)(a1 + 152);
  v160 = *(_BYTE *)(a1 + 156);
  v18 = *(float *)(a1 + 160);
  v154 = *(_BYTE *)(a1 + 164);
  v174 = *(_BYTE *)(a1 + 165);
  v19 = *(float *)(a1 + 168);
  v156 = *(_BYTE *)(a1 + 172);
  v20 = *(float *)(a1 + 176);
  v150 = *(_BYTE *)(a1 + 180);
  v21 = *(float *)(a1 + 184);
  v143 = *(_BYTE *)(a1 + 188);
  v167 = *(_BYTE *)(a1 + 189);
  v22 = *(_OWORD *)(a1 + 192);
  v23 = *(_OWORD *)(a1 + 208);
  v24 = *(_OWORD *)(a1 + 224);
  v25 = *(_OWORD *)(a1 + 240);
  v26 = *(float *)(a1 + 264);
  v27 = *(float *)(a1 + 272);
  v28 = *(float *)(a1 + 280);
  v29 = *(_OWORD *)(a1 + 304);
  v30 = *(_OWORD *)(a1 + 320);
  v31 = *(_OWORD *)(a1 + 336);
  v152 = *(unsigned __int16 *)(a1 + 260);
  v151 = *(unsigned int *)(a1 + 256);
  v140 = *(_BYTE *)(a1 + 268);
  v137 = *(_BYTE *)(a1 + 276);
  v136 = *(_BYTE *)(a1 + 284);
  v32 = *(_QWORD **)(a1 + 288);
  v33 = *(_QWORD **)(a1 + 296);
  v34 = *(_BYTE *)(a1 + 352);
  v35 = *(_QWORD *)(a1 + 8);
  v158 = v2[6];
  v36 = v2[29];
  v37 = v2[97];
  v38 = *(_OWORD *)(a2 + 192);
  v39 = *(_OWORD *)(a2 + 216);
  v40 = *(_OWORD *)(a2 + 240);
  v42 = *(_QWORD *)a2;
  v41 = *(_QWORD *)(a2 + 8);
  v198 = *(_QWORD *)(a2 + 16);
  v195 = *(_QWORD *)(a2 + 24);
  v201 = *(_QWORD *)(a2 + 32);
  v205 = *(_QWORD *)(a2 + 40);
  v209 = *(_QWORD *)(a2 + 48);
  v213 = *(_QWORD *)(a2 + 56);
  v192 = *(_QWORD *)(a2 + 64);
  v190 = *(_QWORD *)(a2 + 72);
  v188 = *(_QWORD *)(a2 + 80);
  v186 = *(_QWORD *)(a2 + 88);
  v177 = *(_QWORD *)(a2 + 96);
  v175 = *(_QWORD *)(a2 + 104);
  v170 = *(unsigned __int8 *)(a2 + 116);
  v169 = *(unsigned int *)(a2 + 112);
  v184 = *(unsigned __int8 *)(a2 + 117);
  v172 = *(_QWORD *)(a2 + 120);
  v168 = *(_QWORD *)(a2 + 128);
  v162 = *(unsigned __int8 *)(a2 + 140);
  v161 = *(unsigned int *)(a2 + 136);
  v179 = *(unsigned __int8 *)(a2 + 141);
  v164 = *(_QWORD *)(a2 + 144);
  v159 = *(_QWORD *)(a2 + 152);
  v43 = *(unsigned __int8 *)(a2 + 164);
  v153 = *(unsigned int *)(a2 + 160);
  v44 = *(unsigned __int8 *)(a2 + 165);
  v155 = *(_QWORD *)(a2 + 168);
  v149 = *(_QWORD *)(a2 + 176);
  v142 = *(unsigned __int8 *)(a2 + 188);
  v141 = *(unsigned int *)(a2 + 184);
  v166 = *(unsigned __int8 *)(a2 + 189);
  v146 = *(unsigned __int16 *)(a2 + 260);
  v147 = *(_QWORD *)(a2 + 232);
  v144 = *(_QWORD *)(a2 + 208);
  v145 = *(unsigned int *)(a2 + 256);
  v138 = *(_QWORD *)(a2 + 272);
  v139 = *(_QWORD *)(a2 + 264);
  v135 = *(unsigned __int8 *)(a2 + 284);
  v134 = *(unsigned int *)(a2 + 280);
  v46 = *(_QWORD *)(a2 + 288);
  v45 = *(_QWORD **)(a2 + 296);
  v47 = *(_QWORD *)(a2 + 304);
  v48 = *(_QWORD *)(a2 + 312);
  v50 = *(_QWORD *)(a2 + 320);
  v49 = *(_QWORD *)(a2 + 328);
  v52 = *(_QWORD *)(a2 + 336);
  v51 = *(_QWORD *)(a2 + 344);
  v53 = *(_BYTE *)(a2 + 352);
  v157 = *(_BYTE *)(a2 + 262);
  v148 = *(unsigned __int8 *)(a2 + 285);
  v54 = *(_BYTE *)(a2 + 353);
  v217 = v3;
  v218 = v4;
  if (v35 == 2)
  {
    v124 = v33;
    v182 = *(_QWORD *)a2;
    v131 = *(unsigned __int8 *)(a2 + 165);
    v127 = *(unsigned __int8 *)(a2 + 164);
    v128 = v32;
    v55 = v8;
    v56 = v222;
    v57 = v223;
    v58 = v220;
    v129 = v34;
    v125 = v2[97];
    v59 = v5;
    v130 = v14;
    v60 = v7;
    v61 = v6;
    v62 = v219;
    v63 = v221;
    if (v41 == 2)
      goto LABEL_10;
LABEL_6:
    *(_QWORD *)&v233 = v217;
    *((_QWORD *)&v233 + 1) = v35;
    *(_QWORD *)&v234 = v218;
    *((_QWORD *)&v234 + 1) = v59;
    *(_QWORD *)&v235 = v60;
    *((_QWORD *)&v235 + 1) = v61;
    *(_QWORD *)&v236 = v62;
    *((_QWORD *)&v236 + 1) = v63;
    v237 = v58;
    v238 = v57;
    v239 = v56;
    v240 = v55;
    v241 = v182;
    v242 = v41;
    v243 = v198;
    v244 = v195;
    v245 = v201;
    v246 = v205;
    v247 = v209;
    v248 = v213;
    v249 = v192;
    v250 = v190;
    v251 = v188;
    v252 = v186;
    sub_1CA2B5678(v182, v41, v198, v195, v201, v205, v209, v213, v192, v190, v188, v186, (void (*)(void))sub_1CA2B5228);
    sub_1CA2C12E8((uint64_t)&v233);
    return 0;
  }
  *(_QWORD *)&v233 = v3;
  *((_QWORD *)&v233 + 1) = v35;
  *(_QWORD *)&v234 = v4;
  *((_QWORD *)&v234 + 1) = v5;
  *(_QWORD *)&v235 = v7;
  *((_QWORD *)&v235 + 1) = v6;
  *(_QWORD *)&v236 = v219;
  *((_QWORD *)&v236 + 1) = v221;
  v237 = v220;
  v238 = v223;
  v239 = v222;
  v240 = v8;
  v132 = v35;
  v133 = v5;
  v181 = v8;
  if (v41 == 2)
  {
    v182 = v42;
    v64 = v3;
    v65 = v35;
    sub_1CA2B5228(v3, v35);
    sub_1CA2B5228(v7, v6);
    sub_1CA2B5228(v220, v223);
    v59 = v133;
    sub_1CA2B5228(v64, v65);
    sub_1CA2B5228(v7, v6);
    sub_1CA2B5228(v220, v223);
    sub_1CA2B525C(v64, v65);
    v60 = v7;
    v66 = v7;
    v61 = v6;
    v67 = v6;
    v62 = v219;
    v63 = v221;
    sub_1CA2B525C(v66, v67);
    v58 = v220;
    v57 = v223;
    v56 = v222;
    v55 = v181;
    sub_1CA2B525C(v220, v223);
    v35 = v132;
    goto LABEL_6;
  }
  v131 = v44;
  v127 = v43;
  v130 = v14;
  *(_QWORD *)&v224 = v42;
  *((_QWORD *)&v224 + 1) = v41;
  v225 = v198;
  *(_QWORD *)&v226 = v195;
  *((_QWORD *)&v226 + 1) = v201;
  v227 = v205;
  *(_QWORD *)&v228 = v209;
  *((_QWORD *)&v228 + 1) = v213;
  v229 = v192;
  v230 = v190;
  v231 = v188;
  v232 = v186;
  v69 = v3;
  v121 = v36;
  v193 = v54;
  v70 = v35;
  v183 = v48;
  v122 = v46;
  v123 = v47;
  v196 = v45;
  v210 = v30;
  v214 = v29;
  v206 = v31;
  v124 = v33;
  v129 = v34;
  v125 = v37;
  v128 = v32;
  v202 = v53;
  v191 = v51;
  v199 = v52;
  v189 = v49;
  v187 = v50;
  v112 = v28;
  v113 = v27;
  v110 = v21;
  v111 = v26;
  v119 = v23;
  v120 = v22;
  v117 = v25;
  v118 = v24;
  v115 = v39;
  v116 = v40;
  v114 = v38;
  v108 = v19;
  v109 = v20;
  v107 = v9;
  v71 = v16;
  v72 = v15;
  sub_1CA2B5678(v3, v35, v4, v5, v7, v6, v219, v221, v220, v223, v222, v8, (void (*)(void))sub_1CA2B5228);
  sub_1CA2B5228(v69, v70);
  sub_1CA2B5228(v7, v6);
  sub_1CA2B5228(v220, v223);
  v106 = _s11PhotosGraph19MusicKitCatalogSongV13RelationshipsV25AudioAnalysisRelationshipV0hI4DataV0hI10AttributesV0hI3KeyV2eeoiySbAM_AMtFZ_0((uint64_t *)&v233, (uint64_t *)&v224);
  v73 = v235;
  v74 = v237;
  v75 = v238;
  sub_1CA2B525C(v233, *((uint64_t *)&v233 + 1));
  sub_1CA2B525C(v73, *((uint64_t *)&v73 + 1));
  sub_1CA2B525C(v74, v75);
  sub_1CA2B5678(v217, v132, v218, v133, v7, v6, v219, v221, v220, v223, v222, v8, (void (*)(void))sub_1CA2B525C);
  v15 = v72;
  v16 = v71;
  v9 = v107;
  v19 = v108;
  v20 = v109;
  v21 = v110;
  v38 = v114;
  v39 = v115;
  v40 = v116;
  v25 = v117;
  v24 = v118;
  v23 = v119;
  v22 = v120;
  v36 = v121;
  v26 = v111;
  v28 = v112;
  v46 = v122;
  v47 = v123;
  v54 = v193;
  v45 = v196;
  v27 = v113;
  LOBYTE(v48) = v183;
  v50 = v187;
  LOBYTE(v49) = v189;
  v52 = v199;
  v51 = v191;
  v53 = v202;
  v31 = v206;
  v30 = v210;
  v29 = v214;
  if ((v106 & 1) == 0)
    return 0;
LABEL_10:
  if ((v185 & 1) != 0)
  {
    v76 = v36;
    if (!v184)
      return 0;
  }
  else
  {
    if ((v184 & 1) != 0)
      return 0;
    v76 = v36;
    if ((v178 & 1) != 0)
    {
      if ((v177 & 0x100000000) == 0)
        return 0;
    }
    else
    {
      result = 0;
      if ((v177 & 0x100000000) != 0 || v9 != *(float *)&v177)
        return result;
    }
    if ((v176 & 1) != 0)
    {
      if ((v175 & 0x100000000) == 0)
        return 0;
    }
    else
    {
      result = 0;
      if ((v175 & 0x100000000) != 0 || v10 != *(float *)&v175)
        return result;
    }
    v79 = v169 | (v170 << 32);
    if ((v171 & 1) != 0)
    {
      if ((v79 & 0x100000000) == 0)
        return 0;
    }
    else
    {
      result = 0;
      if ((v79 & 0x100000000) != 0 || v11 != *(float *)&v169)
        return result;
    }
  }
  if ((v180 & 1) != 0)
  {
    if (!v179)
      return 0;
  }
  else
  {
    if ((v179 & 1) != 0)
      return 0;
    if ((v173 & 1) != 0)
    {
      if ((v172 & 0x100000000) == 0)
        return 0;
    }
    else
    {
      result = 0;
      if ((v172 & 0x100000000) != 0 || v12 != *(float *)&v172)
        return result;
    }
    if ((v130 & 1) != 0)
    {
      if ((v168 & 0x100000000) == 0)
        return 0;
    }
    else
    {
      result = 0;
      if ((v168 & 0x100000000) != 0 || v13 != *(float *)&v168)
        return result;
    }
    v80 = v161 | (v162 << 32);
    if ((v163 & 1) != 0)
    {
      if ((v80 & 0x100000000) == 0)
        return 0;
    }
    else
    {
      result = 0;
      if ((v80 & 0x100000000) != 0 || v15 != *(float *)&v161)
        return result;
    }
  }
  if ((v174 & 1) != 0)
  {
    if (!v131)
      return 0;
  }
  else
  {
    if ((v131 & 1) != 0)
      return 0;
    if ((v165 & 1) != 0)
    {
      if ((v164 & 0x100000000) == 0)
        return 0;
    }
    else
    {
      result = 0;
      if ((v164 & 0x100000000) != 0 || v16 != *(float *)&v164)
        return result;
    }
    if ((v160 & 1) != 0)
    {
      if ((v159 & 0x100000000) == 0)
        return 0;
    }
    else
    {
      result = 0;
      if ((v159 & 0x100000000) != 0 || v17 != *(float *)&v159)
        return result;
    }
    v81 = v153 | (v127 << 32);
    if ((v154 & 1) != 0)
    {
      if ((v81 & 0x100000000) == 0)
        return 0;
    }
    else
    {
      result = 0;
      if ((v81 & 0x100000000) != 0 || v18 != *(float *)&v153)
        return result;
    }
  }
  if ((v167 & 1) != 0)
  {
    if (!v166)
      return 0;
LABEL_18:
    if ((v158 & 1) != 0)
    {
      v77 = v125;
      v78 = v128;
      if ((v157 & 1) == 0)
        return 0;
    }
    else
    {
      v233 = v22;
      v234 = v23;
      v235 = v24;
      v236 = v25;
      LODWORD(v237) = v151;
      WORD2(v237) = (v151 | (unint64_t)(v152 << 32)) >> 32;
      BYTE6(v237) = 0;
      v78 = v128;
      if ((v157 & 1) != 0)
        return 0;
      WORD2(v225) = WORD2(v144) & 0x1FF;
      v224 = v38;
      LODWORD(v225) = v144;
      v226 = v39;
      LODWORD(v227) = v147;
      WORD2(v227) = WORD2(v147) & 0x1FF;
      v228 = v40;
      LODWORD(v229) = v145;
      BYTE4(v229) = (v145 | (unint64_t)(v146 << 32)) >> 32;
      BYTE5(v229) = ((unsigned __int16)((v145 | (unint64_t)(v146 << 32)) >> 32) >> 8) & 1;
      v194 = v54;
      v211 = v30;
      v215 = v29;
      v207 = v31;
      v203 = v53;
      v82 = v51;
      v200 = v52;
      v83 = v49;
      v84 = v50;
      v85 = v48;
      v86 = v28;
      v87 = v47;
      v197 = v45;
      v88 = v46;
      v89 = v26;
      v90 = _s11PhotosGraph19MusicKitCatalogSongV13RelationshipsV25AudioAnalysisRelationshipV0hI4DataV0hI10AttributesV0hi10TimeSeriesL0V2eeoiySbAM_AMtFZ_0((uint64_t)&v233, (uint64_t *)&v224);
      v26 = v89;
      v46 = v88;
      v54 = v194;
      v45 = v197;
      v47 = v87;
      v28 = v86;
      LOBYTE(v48) = v85;
      v50 = v84;
      LOBYTE(v49) = v83;
      v52 = v200;
      v51 = v82;
      v53 = v203;
      v77 = v125;
      v31 = v207;
      v30 = v211;
      v29 = v215;
      if ((v90 & 1) == 0)
        return 0;
    }
    if ((v76 & 1) != 0)
    {
      v91 = v77;
      if (!v148)
        return 0;
      goto LABEL_79;
    }
    if ((v148 & 1) != 0)
      return 0;
    if ((v140 & 1) != 0)
    {
      if ((v139 & 0x100000000) == 0)
        return 0;
    }
    else
    {
      result = 0;
      if ((v139 & 0x100000000) != 0 || v26 != *(float *)&v139)
        return result;
    }
    if ((v137 & 1) != 0)
    {
      if ((v138 & 0x100000000) == 0)
        return 0;
    }
    else
    {
      result = 0;
      if ((v138 & 0x100000000) != 0 || v27 != *(float *)&v138)
        return result;
    }
    v104 = v134 | (v135 << 32);
    if ((v136 & 1) != 0)
    {
      v91 = v77;
      if ((v104 & 0x100000000) == 0)
        return 0;
    }
    else
    {
      result = 0;
      if ((v104 & 0x100000000) != 0)
        return result;
      v91 = v77;
      if (v28 != *(float *)&v134)
        return result;
    }
LABEL_79:
    v92 = v78;
    if (v78 == (_QWORD *)1)
    {
      v93 = v47;
      v94 = 1;
      v95 = v48;
      v96 = v50;
      v97 = v49;
      v98 = v52;
      v99 = v51;
      v204 = v53;
      v208 = v31;
      v212 = v30;
      v216 = v29;
      if (v46 == 1)
        goto LABEL_81;
    }
    else
    {
      v101 = v45;
      if (v46 != 1)
      {
        v103 = v54;
        v93 = v47;
        v95 = v48;
        v96 = v50;
        v97 = v49;
        v98 = v52;
        v99 = v51;
        v204 = v53;
        v126 = v91;
        v208 = v31;
        v212 = v30;
        v216 = v29;
        if (v92)
        {
          if (!v46 || !sub_1CA2A7DD0(v92, (_QWORD *)v46))
            return 0;
        }
        else if (v46)
        {
          return 0;
        }
        if (v124)
        {
          if (!v101)
            return 0;
          v105 = sub_1CA2A7DD0(v124, v101);
          v91 = v126;
          v54 = v103;
          if (!v105)
            return 0;
        }
        else
        {
          v91 = v126;
          v54 = v103;
          if (v101)
            return 0;
        }
LABEL_81:
        if ((v91 & 1) != 0)
        {
          if ((v54 & 1) == 0)
            return 0;
        }
        else
        {
          v233 = v216;
          v234 = v212;
          v235 = v208;
          LOWORD(v236) = v129;
          if ((v54 & 1) != 0)
            return 0;
          *(_QWORD *)&v224 = v93;
          BYTE8(v224) = v95 & 1;
          v225 = v96;
          LOBYTE(v226) = v97 & 1;
          *((_QWORD *)&v226 + 1) = v98;
          LOBYTE(v227) = v99 & 1;
          HIDWORD(v227) = HIDWORD(v99);
          LOBYTE(v228) = v204 & 1;
          if (!_s11PhotosGraph19MusicKitCatalogSongV13RelationshipsV25AudioAnalysisRelationshipV0hI4DataV0hI10AttributesV0hI3BPMV2eeoiySbAM_AMtFZ_0((uint64_t)&v233, (uint64_t)&v224))return 0;
        }
        return 1;
      }
      v94 = (uint64_t)v92;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v46 = 1;
    }
    v102 = v46;
    sub_1CA2B57D8(v46);
    sub_1CA2B5604(v94);
    sub_1CA2B5604(v102);
    return 0;
  }
  if ((v166 & 1) != 0)
    return 0;
  if ((v156 & 1) != 0)
  {
    if ((v155 & 0x100000000) == 0)
      return 0;
  }
  else
  {
    result = 0;
    if ((v155 & 0x100000000) != 0 || v19 != *(float *)&v155)
      return result;
  }
  if ((v150 & 1) != 0)
  {
    if ((v149 & 0x100000000) == 0)
      return 0;
  }
  else
  {
    result = 0;
    if ((v149 & 0x100000000) != 0 || v20 != *(float *)&v149)
      return result;
  }
  v100 = v141 | (v142 << 32);
  if ((v143 & 1) != 0)
  {
    if ((v100 & 0x100000000) == 0)
      return 0;
    goto LABEL_18;
  }
  result = 0;
  if ((v100 & 0x100000000) == 0 && v21 == *(float *)&v141)
    goto LABEL_18;
  return result;
}

uint64_t _s11PhotosGraph19MusicKitCatalogSongV13RelationshipsV25AudioAnalysisRelationshipV0hI4DataV2eeoiySbAI_AItFZ_0(uint64_t a1, uint64_t a2)
{
  char v3;
  _BYTE v5[360];
  uint64_t __dst[45];
  uint64_t v7[45];
  uint64_t v8[45];
  _BYTE __src[360];
  _BYTE v10[360];
  uint64_t v11;
  _BYTE v12[360];
  _BYTE v13[360];
  _BYTE v14[360];

  sub_1CA24EEF8(a1, (uint64_t)v12, &qword_1ED872D58);
  sub_1CA24EEF8(a2, (uint64_t)v13, &qword_1ED872D58);
  sub_1CA24EEF8((uint64_t)v12, (uint64_t)v14, &qword_1ED872D58);
  if (sub_1CA2C0F50((uint64_t)v14) != 1)
  {
    sub_1CA24EEF8((uint64_t)v12, (uint64_t)__src, &qword_1ED872D58);
    sub_1CA24EEF8((uint64_t)v13, (uint64_t)v10, &qword_1ED872D58);
    if (sub_1CA2C0F50((uint64_t)v10) != 1)
    {
      sub_1CA24EEF8((uint64_t)v13, (uint64_t)__dst, &qword_1ED872D58);
      memcpy(v5, __dst, 0x162uLL);
      sub_1CA24EEF8((uint64_t)v12, (uint64_t)v7, &qword_1ED872D58);
      sub_1CA2C124C((uint64_t)v12, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, __int16))sub_1CA2C0F6C);
      sub_1CA2B5850(v7, (void (*)(void))sub_1CA2B5228, (void (*)(uint64_t, uint64_t))sub_1CA2B57D8);
      v3 = _s11PhotosGraph19MusicKitCatalogSongV13RelationshipsV25AudioAnalysisRelationshipV0hI4DataV0hI10AttributesV2eeoiySbAK_AKtFZ_0((uint64_t)__src, (uint64_t)v5);
      memcpy(v8, __src, 0x162uLL);
      sub_1CA2B5850(v8, (void (*)(void))sub_1CA2B525C, (void (*)(uint64_t, uint64_t))sub_1CA2B5604);
      sub_1CA2C124C((uint64_t)v12, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, __int16))sub_1CA2C11D8);
      return v3 & 1;
    }
    memcpy(__dst, __src, 0x162uLL);
    sub_1CA24EEF8((uint64_t)v12, (uint64_t)v7, &qword_1ED872D58);
    sub_1CA24EEF8((uint64_t)v12, (uint64_t)v8, &qword_1ED872D58);
    sub_1CA2B5850(v8, (void (*)(void))sub_1CA2B5228, (void (*)(uint64_t, uint64_t))sub_1CA2B57D8);
    sub_1CA2B5850(v7, (void (*)(void))sub_1CA2B5228, (void (*)(uint64_t, uint64_t))sub_1CA2B57D8);
    sub_1CA2B5850(__dst, (void (*)(void))sub_1CA2B525C, (void (*)(uint64_t, uint64_t))sub_1CA2B5604);
    goto LABEL_6;
  }
  sub_1CA24EEF8((uint64_t)v13, (uint64_t)v10, &qword_1ED872D58);
  if (sub_1CA2C0F50((uint64_t)v10) != 1)
  {
LABEL_6:
    sub_1CA24EEF8((uint64_t)v12, (uint64_t)v10, &qword_1ED872D58);
    sub_1CA24EEF8((uint64_t)v13, (uint64_t)&v11, &qword_1ED872D58);
    sub_1CA2C124C((uint64_t)v13, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, __int16))sub_1CA2C0F6C);
    sub_1CA2C0FE0((uint64_t)v10);
    v3 = 0;
    return v3 & 1;
  }
  v3 = 1;
  return v3 & 1;
}

BOOL _s11PhotosGraph19MusicKitCatalogSongV13RelationshipsV26FlexMLAnalysisRelationshipV0hI4DataV0hI10AttributesV9ExitPointV2eeoiySbAM_AMtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  float v4;
  float v5;

  if (*(float *)a1 == *(float *)a2
    && (v2 = *(_QWORD *)(a1 + 24),
        v3 = *(_QWORD *)(a2 + 24),
        v4 = *(float *)(a2 + 16),
        v5 = *(float *)(a1 + 16),
        sub_1CA2A7AA0(*(_QWORD *)(a1 + 8), *(_QWORD *)(a2 + 8)))
    && v5 == v4)
  {
    return sub_1CA2A7AA0(v2, v3);
  }
  else
  {
    return 0;
  }
}

BOOL _s11PhotosGraph19MusicKitCatalogSongV13RelationshipsV26FlexMLAnalysisRelationshipV0hI4DataV0hI10AttributesV2eeoiySbAK_AKtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  float v5;
  char v6;
  uint64_t v7;
  float v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  float v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  _BOOL8 result;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char v69;
  char v70;
  uint64_t v71;
  uint64_t v72;

  v3 = *(_QWORD *)a1;
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(float *)(a1 + 24);
  v6 = *(_BYTE *)(a1 + 28);
  v7 = *(_QWORD *)(a1 + 32);
  v8 = *(float *)(a1 + 40);
  v9 = *(_BYTE *)(a1 + 44);
  v10 = *(_QWORD *)(a1 + 48);
  v11 = *(_QWORD *)(a1 + 56);
  v13 = *(_QWORD *)(a1 + 64);
  v12 = *(_QWORD *)(a1 + 72);
  v14 = *(_QWORD *)a2;
  v15 = *(_QWORD *)(a2 + 16);
  v16 = *(unsigned __int8 *)(a2 + 28);
  v17 = *(unsigned int *)(a2 + 24);
  v18 = *(_QWORD *)(a2 + 32);
  v19 = *(unsigned __int8 *)(a2 + 44);
  v20 = *(unsigned int *)(a2 + 40);
  v21 = *(_QWORD *)(a2 + 48);
  v22 = *(_QWORD *)(a2 + 56);
  v24 = *(_QWORD *)(a2 + 64);
  v23 = *(_QWORD *)(a2 + 72);
  if (!v3)
  {
    if (v14)
      goto LABEL_22;
LABEL_12:
    if (v4)
    {
      if (!v15)
        goto LABEL_21;
      v70 = v6;
      v72 = v18;
      v64 = v20;
      v66 = v19;
      v59 = v9;
      v68 = v7;
      v35 = v23;
      v57 = v21;
      v36 = v12;
      v61 = v10;
      if (!sub_1CA2A7AA0(v4, v15))
        return 0;
      v37 = v17 | (v16 << 32);
      if ((v70 & 1) != 0)
      {
        v10 = v61;
        v20 = v64;
        v12 = v36;
        v21 = v57;
        v23 = v35;
        v19 = v66;
        v7 = v68;
        v9 = v59;
        v18 = v72;
        if ((v37 & 0x100000000) == 0)
          return 0;
      }
      else
      {
        result = 0;
        v10 = v61;
        v9 = v59;
        v18 = v72;
        if ((v37 & 0x100000000) != 0)
          return result;
        v12 = v36;
        v23 = v35;
        v21 = v57;
        v19 = v66;
        v7 = v68;
        v20 = v64;
        if (v5 != *(float *)&v17)
          return result;
      }
    }
    else if (v15)
    {
      goto LABEL_22;
    }
    if (!v7)
    {
      if (!v18)
      {
LABEL_37:
        if (v10)
        {
          if (!v21)
            return 0;
          v45 = v12;
          v46 = v23;
          v47 = sub_1CA2A7944(v10, v21);
          v23 = v46;
          v12 = v45;
          if ((v47 & 1) == 0)
            return 0;
        }
        else if (v21)
        {
          return 0;
        }
        if (v11)
        {
          if (!v22)
            return 0;
          v48 = v12;
          v49 = v23;
          v50 = sub_1CA2A8474(v11, v22);
          v23 = v49;
          v12 = v48;
          if ((v50 & 1) == 0)
            return 0;
        }
        else if (v22)
        {
          return 0;
        }
        if (v13)
        {
          v51 = v23;
          v52 = v12;
          if (v24)
          {
            if (sub_1CA2A7AA0(v13, v24))
              return sub_1CA2A7AA0(v52, v51);
            return 0;
          }
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else if (!v24)
        {
          return 1;
        }
        sub_1CA26855C(v24);
        sub_1CA2B5FC4(v13);
        sub_1CA2B5FC4(v24);
        return 0;
      }
LABEL_22:
      swift_bridgeObjectRelease();
      return 0;
    }
    if (v18)
    {
      v38 = v20;
      v39 = v19;
      v40 = v9;
      v41 = v7;
      v62 = v23;
      v42 = v12;
      v43 = v10;
      if (!sub_1CA2A7AA0(v41, v18))
        return 0;
      v44 = v38 | (v39 << 32);
      if ((v40 & 1) != 0)
      {
        v10 = v43;
        v12 = v42;
        v23 = v62;
        if ((v44 & 0x100000000) == 0)
          return 0;
      }
      else
      {
        result = 0;
        v23 = v62;
        if ((v44 & 0x100000000) != 0)
          return result;
        v10 = v43;
        v12 = v42;
        if (v8 != *(float *)&v38)
          return result;
      }
      goto LABEL_37;
    }
LABEL_21:
    swift_bridgeObjectRetain();
    goto LABEL_22;
  }
  if (!v14)
    goto LABEL_21;
  v53 = *(unsigned __int8 *)(a2 + 28);
  v54 = *(_QWORD *)(a1 + 64);
  v69 = *(_BYTE *)(a1 + 28);
  v71 = *(_QWORD *)(a2 + 32);
  v63 = *(unsigned int *)(a2 + 40);
  v65 = *(unsigned __int8 *)(a2 + 44);
  v25 = *(_BYTE *)(a1 + 44);
  v67 = *(_QWORD *)(a1 + 32);
  v26 = *(_QWORD *)(a2 + 48);
  v27 = *(_QWORD *)(a1 + 48);
  v55 = *(_QWORD *)(a2 + 56);
  v56 = *(_QWORD *)(a1 + 56);
  v58 = *(_QWORD *)(a2 + 64);
  v60 = *(_QWORD *)(a2 + 72);
  v28 = *(_QWORD *)(a1 + 72);
  v29 = *(float *)(a1 + 8);
  v30 = *(unsigned __int8 *)(a2 + 12);
  v31 = *(unsigned int *)(a2 + 8);
  v32 = *(_BYTE *)(a1 + 12);
  if (!sub_1CA2A7AA0(v3, v14))
    return 0;
  v33 = v31 | (v30 << 32);
  v10 = v27;
  if ((v32 & 1) != 0)
  {
    v12 = v28;
    v24 = v58;
    v23 = v60;
    v13 = v54;
    v22 = v55;
    v11 = v56;
    v21 = v26;
    v19 = v65;
    v7 = v67;
    v9 = v25;
    v20 = v63;
    v18 = v71;
    v6 = v69;
    v16 = v53;
    if ((v33 & 0x100000000) == 0)
      return 0;
    goto LABEL_12;
  }
  result = 0;
  v18 = v71;
  if ((v33 & 0x100000000) == 0)
  {
    v21 = v26;
    v9 = v25;
    v12 = v28;
    v24 = v58;
    v23 = v60;
    v13 = v54;
    v22 = v55;
    v11 = v56;
    v19 = v65;
    v7 = v67;
    v20 = v63;
    v6 = v69;
    v16 = v53;
    if (v29 == *(float *)&v33)
      goto LABEL_12;
  }
  return result;
}

BOOL _s11PhotosGraph19MusicKitCatalogSongV13RelationshipsV26FlexMLAnalysisRelationshipV0hI4DataV2eeoiySbAI_AItFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  char v37;
  uint64_t v38;
  int v39;
  char v40;
  uint64_t v41;
  int v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;

  v3 = *a1;
  v2 = a1[1];
  v5 = a1[2];
  v4 = a1[3];
  v7 = a1[4];
  v6 = a1[5];
  v9 = a1[6];
  v8 = a1[7];
  v10 = a1[8];
  v11 = a1[9];
  v13 = *a2;
  v12 = a2[1];
  v14 = a2[2];
  v15 = a2[3];
  v16 = a2[4];
  v17 = a2[5];
  v18 = a2[6];
  v19 = a2[7];
  v20 = a2[8];
  v21 = a2[9];
  if (*a1 == 1)
  {
    if (v13 == 1)
      return 1;
    goto LABEL_6;
  }
  v48 = *a1;
  v49 = v2;
  v50 = v5;
  v51 = v4;
  v52 = v7;
  v53 = v6;
  v54 = v9;
  v55 = v8;
  v56 = v10;
  v57 = v11;
  v33 = v8;
  v34 = v9;
  v31 = v4;
  v32 = v6;
  v30 = v2;
  if (v13 == 1)
  {
    v27 = v18;
    v28 = v19;
    v25 = v20;
    v26 = v16;
    v24 = v21;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1CA26855C(v10);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1CA26855C(v10);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1CA2B5FC4(v10);
    v21 = v24;
    v20 = v25;
    v16 = v26;
    v18 = v27;
    v19 = v28;
    v2 = v30;
    v4 = v31;
    v6 = v32;
    v8 = v33;
    v9 = v34;
LABEL_6:
    v48 = v3;
    v49 = v2;
    v50 = v5;
    v51 = v4;
    v52 = v7;
    v53 = v6;
    v54 = v9;
    v55 = v8;
    v56 = v10;
    v57 = v11;
    v58 = v13;
    v59 = v12;
    v60 = v14;
    v61 = v15;
    v62 = v16;
    v63 = v17;
    v64 = v18;
    v65 = v19;
    v66 = v20;
    v67 = v21;
    sub_1CA2C0DBC(v13, v12, v14, v15, v16, v17, v18, v19, v20);
    sub_1CA2C0E34(&v48);
    return 0;
  }
  v35 = v13;
  v36 = v12;
  v37 = BYTE4(v12);
  v38 = v14;
  v39 = v15;
  v40 = BYTE4(v15);
  v41 = v16;
  v42 = v17;
  v43 = BYTE4(v17);
  v44 = v18;
  v45 = v19;
  v46 = v20;
  v47 = v21;
  sub_1CA2C0DBC(v3, v2, v5, v4, v7, v6, v9, v8, v10);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1CA26855C(v10);
  v29 = _s11PhotosGraph19MusicKitCatalogSongV13RelationshipsV26FlexMLAnalysisRelationshipV0hI4DataV0hI10AttributesV2eeoiySbAK_AKtFZ_0((uint64_t)&v48, (uint64_t)&v35);
  v22 = v56;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1CA2B5FC4(v22);
  sub_1CA2C0EDC(v3, v30, v5, v31, v7, v32, v34, v33, v10);
  return v29;
}

BOOL _s11PhotosGraph19MusicKitCatalogSongV13RelationshipsV6LyricsV0H4DataV2eeoiySbAI_AItFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v7;

  v3 = *a1;
  v2 = a1[1];
  v5 = *a2;
  v4 = a2[1];
  if (v2 == 1)
  {
    if (v4 == 1)
      return 1;
    goto LABEL_6;
  }
  if (v4 == 1)
  {
    swift_bridgeObjectRetain();
LABEL_6:
    sub_1CA2C13B8(v5, v4);
    sub_1CA2C13CC(v3, v2);
    sub_1CA2C13CC(v5, v4);
    return 0;
  }
  if (!v2)
    return !v4;
  if (!v4)
  {
    sub_1CA2C13B8(*a1, v2);
    swift_bridgeObjectRelease();
    return 0;
  }
  if (v3 != v5 || v2 != v4)
  {
    v7 = sub_1CA85C284();
    sub_1CA2C13B8(v3, v2);
    swift_bridgeObjectRelease();
    return (v7 & 1) != 0;
  }
  sub_1CA2C13B8(*a1, v2);
  swift_bridgeObjectRelease();
  return 1;
}

unint64_t sub_1CA2B4F80()
{
  unint64_t result;

  result = qword_1EF94C600;
  if (!qword_1EF94C600)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8D99DC, &type metadata for MusicKitCatalogSong.Relationships.Lyrics.LyricsData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF94C600);
  }
  return result;
}

unint64_t sub_1CA2B4FC4()
{
  unint64_t result;

  result = qword_1EF94C608;
  if (!qword_1EF94C608)
  {
    result = MEMORY[0x1CAA4F1A4](&protocol conformance descriptor for MusicKitCatalogSong.Relationships.Lyrics.LyricsData.LyricAttributes, &type metadata for MusicKitCatalogSong.Relationships.Lyrics.LyricsData.LyricAttributes);
    atomic_store(result, (unint64_t *)&qword_1EF94C608);
  }
  return result;
}

unint64_t sub_1CA2B5008()
{
  unint64_t result;

  result = qword_1EF94C618;
  if (!qword_1EF94C618)
  {
    result = MEMORY[0x1CAA4F1A4](&protocol conformance descriptor for MusicKitCatalogSong.Relationships.Lyrics.LyricsData.LyricAttributes, &type metadata for MusicKitCatalogSong.Relationships.Lyrics.LyricsData.LyricAttributes);
    atomic_store(result, (unint64_t *)&qword_1EF94C618);
  }
  return result;
}

unint64_t sub_1CA2B504C()
{
  unint64_t result;

  result = qword_1EF94C628;
  if (!qword_1EF94C628)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8D998C, &type metadata for MusicKitCatalogSong.Relationships.Lyrics.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF94C628);
  }
  return result;
}

unint64_t sub_1CA2B5090()
{
  unint64_t result;

  result = qword_1EF94C640;
  if (!qword_1EF94C640)
  {
    result = MEMORY[0x1CAA4F1A4](&protocol conformance descriptor for MusicKitCatalogSong.Relationships.Lyrics.LyricsData, &type metadata for MusicKitCatalogSong.Relationships.Lyrics.LyricsData);
    atomic_store(result, (unint64_t *)&qword_1EF94C640);
  }
  return result;
}

unint64_t sub_1CA2B50D4()
{
  unint64_t result;

  result = qword_1EF94C658;
  if (!qword_1EF94C658)
  {
    result = MEMORY[0x1CAA4F1A4](&protocol conformance descriptor for MusicKitCatalogSong.Relationships.Lyrics.LyricsData, &type metadata for MusicKitCatalogSong.Relationships.Lyrics.LyricsData);
    atomic_store(result, (unint64_t *)&qword_1EF94C658);
  }
  return result;
}

unint64_t sub_1CA2B5118()
{
  unint64_t result;

  result = qword_1EF94C668;
  if (!qword_1EF94C668)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8D993C, &type metadata for MusicKitCatalogSong.Relationships.AudioAnalysisRelationship.AudioAnalysisData.AudioAnalysisAttributes.AudioAnalysisKey.AudioAnalysisKeyAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF94C668);
  }
  return result;
}

unint64_t sub_1CA2B515C()
{
  unint64_t result;

  result = qword_1EF94C680;
  if (!qword_1EF94C680)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8D98EC, &type metadata for MusicKitCatalogSong.Relationships.AudioAnalysisRelationship.AudioAnalysisData.AudioAnalysisAttributes.AudioAnalysisKey.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF94C680);
  }
  return result;
}

unint64_t sub_1CA2B51A0()
{
  unint64_t result;

  result = qword_1EF94C688;
  if (!qword_1EF94C688)
  {
    result = MEMORY[0x1CAA4F1A4](&protocol conformance descriptor for MusicKitCatalogSong.Relationships.AudioAnalysisRelationship.AudioAnalysisData.AudioAnalysisAttributes.AudioAnalysisKey.AudioAnalysisKeyAttributes, &type metadata for MusicKitCatalogSong.Relationships.AudioAnalysisRelationship.AudioAnalysisData.AudioAnalysisAttributes.AudioAnalysisKey.AudioAnalysisKeyAttributes);
    atomic_store(result, (unint64_t *)&qword_1EF94C688);
  }
  return result;
}

unint64_t sub_1CA2B51E4()
{
  unint64_t result;

  result = qword_1EF94C698;
  if (!qword_1EF94C698)
  {
    result = MEMORY[0x1CAA4F1A4](&protocol conformance descriptor for MusicKitCatalogSong.Relationships.AudioAnalysisRelationship.AudioAnalysisData.AudioAnalysisAttributes.AudioAnalysisKey.AudioAnalysisKeyAttributes, &type metadata for MusicKitCatalogSong.Relationships.AudioAnalysisRelationship.AudioAnalysisData.AudioAnalysisAttributes.AudioAnalysisKey.AudioAnalysisKeyAttributes);
    atomic_store(result, (unint64_t *)&qword_1EF94C698);
  }
  return result;
}

uint64_t sub_1CA2B5228(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2 != 1)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1CA2B525C(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2 != 1)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_1CA2B5290()
{
  unint64_t result;

  result = qword_1EF94C6A8;
  if (!qword_1EF94C6A8)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8D989C, &type metadata for MusicKitCatalogSong.Relationships.AudioAnalysisRelationship.AudioAnalysisData.AudioAnalysisAttributes.AudioAnalysisSavoyAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF94C6A8);
  }
  return result;
}

unint64_t sub_1CA2B52D4()
{
  unint64_t result;

  result = qword_1ED871828;
  if (!qword_1ED871828)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8D984C, &type metadata for MusicKitCatalogSong.Relationships.AudioAnalysisRelationship.AudioAnalysisData.AudioAnalysisAttributes.AudioAnalysisTimeSeriesAttributes.AveragedTimeSeriesAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED871828);
  }
  return result;
}

unint64_t sub_1CA2B5318()
{
  unint64_t result;

  result = qword_1ED871848;
  if (!qword_1ED871848)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8D97FC, &type metadata for MusicKitCatalogSong.Relationships.AudioAnalysisRelationship.AudioAnalysisData.AudioAnalysisAttributes.AudioAnalysisTimeSeriesAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED871848);
  }
  return result;
}

unint64_t sub_1CA2B535C()
{
  unint64_t result;

  result = qword_1EF94C6C8;
  if (!qword_1EF94C6C8)
  {
    result = MEMORY[0x1CAA4F1A4](&protocol conformance descriptor for MusicKitCatalogSong.Relationships.AudioAnalysisRelationship.AudioAnalysisData.AudioAnalysisAttributes.AudioAnalysisTimeSeriesAttributes.AveragedTimeSeriesAttributes, &type metadata for MusicKitCatalogSong.Relationships.AudioAnalysisRelationship.AudioAnalysisData.AudioAnalysisAttributes.AudioAnalysisTimeSeriesAttributes.AveragedTimeSeriesAttributes);
    atomic_store(result, (unint64_t *)&qword_1EF94C6C8);
  }
  return result;
}

unint64_t sub_1CA2B53A0()
{
  unint64_t result;

  result = qword_1ED871840;
  if (!qword_1ED871840)
  {
    result = MEMORY[0x1CAA4F1A4](&protocol conformance descriptor for MusicKitCatalogSong.Relationships.AudioAnalysisRelationship.AudioAnalysisData.AudioAnalysisAttributes.AudioAnalysisTimeSeriesAttributes.AveragedTimeSeriesAttributes, &type metadata for MusicKitCatalogSong.Relationships.AudioAnalysisRelationship.AudioAnalysisData.AudioAnalysisAttributes.AudioAnalysisTimeSeriesAttributes.AveragedTimeSeriesAttributes);
    atomic_store(result, (unint64_t *)&qword_1ED871840);
  }
  return result;
}

unint64_t sub_1CA2B53E4()
{
  unint64_t result;

  result = qword_1EF94C6D8;
  if (!qword_1EF94C6D8)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8D97AC, &type metadata for MusicKitCatalogSong.Relationships.AudioAnalysisRelationship.AudioAnalysisData.AudioAnalysisAttributes.AudioAnalysisBeats.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF94C6D8);
  }
  return result;
}

unint64_t sub_1CA2B5428()
{
  unint64_t result;

  result = qword_1EF94C700;
  if (!qword_1EF94C700)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8D975C, &type metadata for MusicKitCatalogSong.Relationships.AudioAnalysisRelationship.AudioAnalysisData.AudioAnalysisAttributes.AudioAnalysisBPM.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF94C700);
  }
  return result;
}

unint64_t sub_1CA2B546C()
{
  unint64_t result;

  result = qword_1ED871870;
  if (!qword_1ED871870)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8D970C, &type metadata for MusicKitCatalogSong.Relationships.AudioAnalysisRelationship.AudioAnalysisData.AudioAnalysisAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED871870);
  }
  return result;
}

unint64_t sub_1CA2B54B0()
{
  unint64_t result;

  result = qword_1EF94C718;
  if (!qword_1EF94C718)
  {
    result = MEMORY[0x1CAA4F1A4](&protocol conformance descriptor for MusicKitCatalogSong.Relationships.AudioAnalysisRelationship.AudioAnalysisData.AudioAnalysisAttributes.AudioAnalysisKey, &type metadata for MusicKitCatalogSong.Relationships.AudioAnalysisRelationship.AudioAnalysisData.AudioAnalysisAttributes.AudioAnalysisKey);
    atomic_store(result, (unint64_t *)&qword_1EF94C718);
  }
  return result;
}

unint64_t sub_1CA2B54F4()
{
  unint64_t result;

  result = qword_1EF94C720;
  if (!qword_1EF94C720)
  {
    result = MEMORY[0x1CAA4F1A4](&protocol conformance descriptor for MusicKitCatalogSong.Relationships.AudioAnalysisRelationship.AudioAnalysisData.AudioAnalysisAttributes.AudioAnalysisSavoyAttributes, &type metadata for MusicKitCatalogSong.Relationships.AudioAnalysisRelationship.AudioAnalysisData.AudioAnalysisAttributes.AudioAnalysisSavoyAttributes);
    atomic_store(result, (unint64_t *)&qword_1EF94C720);
  }
  return result;
}

unint64_t sub_1CA2B5538()
{
  unint64_t result;

  result = qword_1EF94C728;
  if (!qword_1EF94C728)
  {
    result = MEMORY[0x1CAA4F1A4](&protocol conformance descriptor for MusicKitCatalogSong.Relationships.AudioAnalysisRelationship.AudioAnalysisData.AudioAnalysisAttributes.AudioAnalysisTimeSeriesAttributes, &type metadata for MusicKitCatalogSong.Relationships.AudioAnalysisRelationship.AudioAnalysisData.AudioAnalysisAttributes.AudioAnalysisTimeSeriesAttributes);
    atomic_store(result, (unint64_t *)&qword_1EF94C728);
  }
  return result;
}

unint64_t sub_1CA2B557C()
{
  unint64_t result;

  result = qword_1EF94C730;
  if (!qword_1EF94C730)
  {
    result = MEMORY[0x1CAA4F1A4](&protocol conformance descriptor for MusicKitCatalogSong.Relationships.AudioAnalysisRelationship.AudioAnalysisData.AudioAnalysisAttributes.AudioAnalysisBeats, &type metadata for MusicKitCatalogSong.Relationships.AudioAnalysisRelationship.AudioAnalysisData.AudioAnalysisAttributes.AudioAnalysisBeats);
    atomic_store(result, (unint64_t *)&qword_1EF94C730);
  }
  return result;
}

unint64_t sub_1CA2B55C0()
{
  unint64_t result;

  result = qword_1EF94C738;
  if (!qword_1EF94C738)
  {
    result = MEMORY[0x1CAA4F1A4](&protocol conformance descriptor for MusicKitCatalogSong.Relationships.AudioAnalysisRelationship.AudioAnalysisData.AudioAnalysisAttributes.AudioAnalysisBPM, &type metadata for MusicKitCatalogSong.Relationships.AudioAnalysisRelationship.AudioAnalysisData.AudioAnalysisAttributes.AudioAnalysisBPM);
    atomic_store(result, (unint64_t *)&qword_1EF94C738);
  }
  return result;
}

uint64_t sub_1CA2B5604(uint64_t result)
{
  if (result != 1)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_1CA2B5634()
{
  unint64_t result;

  result = qword_1ED871818;
  if (!qword_1ED871818)
  {
    result = MEMORY[0x1CAA4F1A4](&protocol conformance descriptor for MusicKitCatalogSong.Relationships.AudioAnalysisRelationship.AudioAnalysisData.AudioAnalysisAttributes.AudioAnalysisKey, &type metadata for MusicKitCatalogSong.Relationships.AudioAnalysisRelationship.AudioAnalysisData.AudioAnalysisAttributes.AudioAnalysisKey);
    atomic_store(result, (unint64_t *)&qword_1ED871818);
  }
  return result;
}

uint64_t sub_1CA2B5678(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void (*a13)(void))
{
  uint64_t result;

  if (a2 != 2)
  {
    a13();
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))a13)(a5, a6, a7, a8);
    return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))a13)(a9, a10, a11, a12);
  }
  return result;
}

unint64_t sub_1CA2B570C()
{
  unint64_t result;

  result = qword_1ED871868;
  if (!qword_1ED871868)
  {
    result = MEMORY[0x1CAA4F1A4](&protocol conformance descriptor for MusicKitCatalogSong.Relationships.AudioAnalysisRelationship.AudioAnalysisData.AudioAnalysisAttributes.AudioAnalysisSavoyAttributes, &type metadata for MusicKitCatalogSong.Relationships.AudioAnalysisRelationship.AudioAnalysisData.AudioAnalysisAttributes.AudioAnalysisSavoyAttributes);
    atomic_store(result, (unint64_t *)&qword_1ED871868);
  }
  return result;
}

unint64_t sub_1CA2B5750()
{
  unint64_t result;

  result = qword_1ED871860;
  if (!qword_1ED871860)
  {
    result = MEMORY[0x1CAA4F1A4](&protocol conformance descriptor for MusicKitCatalogSong.Relationships.AudioAnalysisRelationship.AudioAnalysisData.AudioAnalysisAttributes.AudioAnalysisTimeSeriesAttributes, &type metadata for MusicKitCatalogSong.Relationships.AudioAnalysisRelationship.AudioAnalysisData.AudioAnalysisAttributes.AudioAnalysisTimeSeriesAttributes);
    atomic_store(result, (unint64_t *)&qword_1ED871860);
  }
  return result;
}

unint64_t sub_1CA2B5794()
{
  unint64_t result;

  result = qword_1ED871820;
  if (!qword_1ED871820)
  {
    result = MEMORY[0x1CAA4F1A4](&protocol conformance descriptor for MusicKitCatalogSong.Relationships.AudioAnalysisRelationship.AudioAnalysisData.AudioAnalysisAttributes.AudioAnalysisBeats, &type metadata for MusicKitCatalogSong.Relationships.AudioAnalysisRelationship.AudioAnalysisData.AudioAnalysisAttributes.AudioAnalysisBeats);
    atomic_store(result, (unint64_t *)&qword_1ED871820);
  }
  return result;
}

uint64_t sub_1CA2B57D8(uint64_t result)
{
  if (result != 1)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

unint64_t sub_1CA2B580C()
{
  unint64_t result;

  result = qword_1ED871810;
  if (!qword_1ED871810)
  {
    result = MEMORY[0x1CAA4F1A4](&protocol conformance descriptor for MusicKitCatalogSong.Relationships.AudioAnalysisRelationship.AudioAnalysisData.AudioAnalysisAttributes.AudioAnalysisBPM, &type metadata for MusicKitCatalogSong.Relationships.AudioAnalysisRelationship.AudioAnalysisData.AudioAnalysisAttributes.AudioAnalysisBPM);
    atomic_store(result, (unint64_t *)&qword_1ED871810);
  }
  return result;
}

uint64_t *sub_1CA2B5850(uint64_t *a1, void (*a2)(void), void (*a3)(uint64_t, uint64_t))
{
  uint64_t v5;
  uint64_t v6;

  v5 = a1[36];
  v6 = a1[37];
  sub_1CA2B5678(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10], a1[11], a2);
  a3(v5, v6);
  return a1;
}

unint64_t sub_1CA2B58C4()
{
  unint64_t result;

  result = qword_1ED871890;
  if (!qword_1ED871890)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8D96BC, &type metadata for MusicKitCatalogSong.Relationships.AudioAnalysisRelationship.AudioAnalysisData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED871890);
  }
  return result;
}

unint64_t sub_1CA2B5908()
{
  unint64_t result;

  result = qword_1EF94C748;
  if (!qword_1EF94C748)
  {
    result = MEMORY[0x1CAA4F1A4](&protocol conformance descriptor for MusicKitCatalogSong.Relationships.AudioAnalysisRelationship.AudioAnalysisData.AudioAnalysisAttributes, &type metadata for MusicKitCatalogSong.Relationships.AudioAnalysisRelationship.AudioAnalysisData.AudioAnalysisAttributes);
    atomic_store(result, (unint64_t *)&qword_1EF94C748);
  }
  return result;
}

unint64_t sub_1CA2B594C()
{
  unint64_t result;

  result = qword_1ED871888;
  if (!qword_1ED871888)
  {
    result = MEMORY[0x1CAA4F1A4](&protocol conformance descriptor for MusicKitCatalogSong.Relationships.AudioAnalysisRelationship.AudioAnalysisData.AudioAnalysisAttributes, &type metadata for MusicKitCatalogSong.Relationships.AudioAnalysisRelationship.AudioAnalysisData.AudioAnalysisAttributes);
    atomic_store(result, (unint64_t *)&qword_1ED871888);
  }
  return result;
}

unint64_t sub_1CA2B5990()
{
  unint64_t result;

  result = qword_1ED8718B0;
  if (!qword_1ED8718B0)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8D966C, &type metadata for MusicKitCatalogSong.Relationships.AudioAnalysisRelationship.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED8718B0);
  }
  return result;
}

unint64_t sub_1CA2B59D4()
{
  unint64_t result;

  result = qword_1EF94C760;
  if (!qword_1EF94C760)
  {
    result = MEMORY[0x1CAA4F1A4](&protocol conformance descriptor for MusicKitCatalogSong.Relationships.AudioAnalysisRelationship.AudioAnalysisData, &type metadata for MusicKitCatalogSong.Relationships.AudioAnalysisRelationship.AudioAnalysisData);
    atomic_store(result, (unint64_t *)&qword_1EF94C760);
  }
  return result;
}

unint64_t sub_1CA2B5A18()
{
  unint64_t result;

  result = qword_1ED8718A8;
  if (!qword_1ED8718A8)
  {
    result = MEMORY[0x1CAA4F1A4](&protocol conformance descriptor for MusicKitCatalogSong.Relationships.AudioAnalysisRelationship.AudioAnalysisData, &type metadata for MusicKitCatalogSong.Relationships.AudioAnalysisRelationship.AudioAnalysisData);
    atomic_store(result, (unint64_t *)&qword_1ED8718A8);
  }
  return result;
}

unint64_t sub_1CA2B5A5C()
{
  unint64_t result;

  result = qword_1ED871968;
  if (!qword_1ED871968)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8D961C, &type metadata for MusicKitCatalogSong.Relationships.FlexMLAnalysisRelationship.FlexMLAnalysisData.FlexMLAnalysisAttributes.Valence.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED871968);
  }
  return result;
}

uint64_t sub_1CA2B5AA0(unint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v8;
  uint64_t v9;

  result = *a1;
  if (!result)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v9 = a3;
    result = MEMORY[0x1CAA4F1A4](a4, v8, &v9);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1CA2B5AFC()
{
  unint64_t result;

  result = qword_1ED871948;
  if (!qword_1ED871948)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8D95CC, &type metadata for MusicKitCatalogSong.Relationships.FlexMLAnalysisRelationship.FlexMLAnalysisData.FlexMLAnalysisAttributes.Arousal.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED871948);
  }
  return result;
}

unint64_t sub_1CA2B5B40()
{
  unint64_t result;

  result = qword_1ED871928;
  if (!qword_1ED871928)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8D957C, &type metadata for MusicKitCatalogSong.Relationships.FlexMLAnalysisRelationship.FlexMLAnalysisData.FlexMLAnalysisAttributes.VisualTempo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED871928);
  }
  return result;
}

unint64_t sub_1CA2B5B84()
{
  unint64_t result;

  result = qword_1ED871988;
  if (!qword_1ED871988)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8D952C, &type metadata for MusicKitCatalogSong.Relationships.FlexMLAnalysisRelationship.FlexMLAnalysisData.FlexMLAnalysisAttributes.ExitPoint.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED871988);
  }
  return result;
}

unint64_t sub_1CA2B5BC8()
{
  unint64_t result;

  result = qword_1ED8718E8;
  if (!qword_1ED8718E8)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8D94DC, &type metadata for MusicKitCatalogSong.Relationships.FlexMLAnalysisRelationship.FlexMLAnalysisData.FlexMLAnalysisAttributes.EntryPoint.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED8718E8);
  }
  return result;
}

unint64_t sub_1CA2B5C0C()
{
  unint64_t result;

  result = qword_1ED871908;
  if (!qword_1ED871908)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8D948C, &type metadata for MusicKitCatalogSong.Relationships.FlexMLAnalysisRelationship.FlexMLAnalysisData.FlexMLAnalysisAttributes.VideoEvents.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED871908);
  }
  return result;
}

unint64_t sub_1CA2B5C50()
{
  unint64_t result;

  result = qword_1ED8718D0;
  if (!qword_1ED8718D0)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8D943C, &type metadata for MusicKitCatalogSong.Relationships.FlexMLAnalysisRelationship.FlexMLAnalysisData.FlexMLAnalysisAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED8718D0);
  }
  return result;
}

unint64_t sub_1CA2B5C94()
{
  unint64_t result;

  result = qword_1EF94C7A0;
  if (!qword_1EF94C7A0)
  {
    result = MEMORY[0x1CAA4F1A4](&protocol conformance descriptor for MusicKitCatalogSong.Relationships.FlexMLAnalysisRelationship.FlexMLAnalysisData.FlexMLAnalysisAttributes.Valence, &type metadata for MusicKitCatalogSong.Relationships.FlexMLAnalysisRelationship.FlexMLAnalysisData.FlexMLAnalysisAttributes.Valence);
    atomic_store(result, (unint64_t *)&qword_1EF94C7A0);
  }
  return result;
}

unint64_t sub_1CA2B5CD8()
{
  unint64_t result;

  result = qword_1EF94C7A8;
  if (!qword_1EF94C7A8)
  {
    result = MEMORY[0x1CAA4F1A4](&protocol conformance descriptor for MusicKitCatalogSong.Relationships.FlexMLAnalysisRelationship.FlexMLAnalysisData.FlexMLAnalysisAttributes.Arousal, &type metadata for MusicKitCatalogSong.Relationships.FlexMLAnalysisRelationship.FlexMLAnalysisData.FlexMLAnalysisAttributes.Arousal);
    atomic_store(result, (unint64_t *)&qword_1EF94C7A8);
  }
  return result;
}

unint64_t sub_1CA2B5D1C()
{
  unint64_t result;

  result = qword_1EF94C7B0;
  if (!qword_1EF94C7B0)
  {
    result = MEMORY[0x1CAA4F1A4](&protocol conformance descriptor for MusicKitCatalogSong.Relationships.FlexMLAnalysisRelationship.FlexMLAnalysisData.FlexMLAnalysisAttributes.VisualTempo, &type metadata for MusicKitCatalogSong.Relationships.FlexMLAnalysisRelationship.FlexMLAnalysisData.FlexMLAnalysisAttributes.VisualTempo);
    atomic_store(result, (unint64_t *)&qword_1EF94C7B0);
  }
  return result;
}

unint64_t sub_1CA2B5D60()
{
  unint64_t result;

  result = qword_1EF94C7C0;
  if (!qword_1EF94C7C0)
  {
    result = MEMORY[0x1CAA4F1A4](&protocol conformance descriptor for MusicKitCatalogSong.Relationships.FlexMLAnalysisRelationship.FlexMLAnalysisData.FlexMLAnalysisAttributes.ExitPoint, &type metadata for MusicKitCatalogSong.Relationships.FlexMLAnalysisRelationship.FlexMLAnalysisData.FlexMLAnalysisAttributes.ExitPoint);
    atomic_store(result, (unint64_t *)&qword_1EF94C7C0);
  }
  return result;
}

unint64_t sub_1CA2B5DA4()
{
  unint64_t result;

  result = qword_1EF94C7D0;
  if (!qword_1EF94C7D0)
  {
    result = MEMORY[0x1CAA4F1A4](&protocol conformance descriptor for MusicKitCatalogSong.Relationships.FlexMLAnalysisRelationship.FlexMLAnalysisData.FlexMLAnalysisAttributes.EntryPoint, &type metadata for MusicKitCatalogSong.Relationships.FlexMLAnalysisRelationship.FlexMLAnalysisData.FlexMLAnalysisAttributes.EntryPoint);
    atomic_store(result, (unint64_t *)&qword_1EF94C7D0);
  }
  return result;
}

unint64_t sub_1CA2B5DE8()
{
  unint64_t result;

  result = qword_1EF94C7D8;
  if (!qword_1EF94C7D8)
  {
    result = MEMORY[0x1CAA4F1A4](&protocol conformance descriptor for MusicKitCatalogSong.Relationships.FlexMLAnalysisRelationship.FlexMLAnalysisData.FlexMLAnalysisAttributes.VideoEvents, &type metadata for MusicKitCatalogSong.Relationships.FlexMLAnalysisRelationship.FlexMLAnalysisData.FlexMLAnalysisAttributes.VideoEvents);
    atomic_store(result, (unint64_t *)&qword_1EF94C7D8);
  }
  return result;
}

unint64_t sub_1CA2B5E2C()
{
  unint64_t result;

  result = qword_1ED871980;
  if (!qword_1ED871980)
  {
    result = MEMORY[0x1CAA4F1A4](&protocol conformance descriptor for MusicKitCatalogSong.Relationships.FlexMLAnalysisRelationship.FlexMLAnalysisData.FlexMLAnalysisAttributes.Valence, &type metadata for MusicKitCatalogSong.Relationships.FlexMLAnalysisRelationship.FlexMLAnalysisData.FlexMLAnalysisAttributes.Valence);
    atomic_store(result, (unint64_t *)&qword_1ED871980);
  }
  return result;
}

unint64_t sub_1CA2B5E70()
{
  unint64_t result;

  result = qword_1ED871960;
  if (!qword_1ED871960)
  {
    result = MEMORY[0x1CAA4F1A4](&protocol conformance descriptor for MusicKitCatalogSong.Relationships.FlexMLAnalysisRelationship.FlexMLAnalysisData.FlexMLAnalysisAttributes.Arousal, &type metadata for MusicKitCatalogSong.Relationships.FlexMLAnalysisRelationship.FlexMLAnalysisData.FlexMLAnalysisAttributes.Arousal);
    atomic_store(result, (unint64_t *)&qword_1ED871960);
  }
  return result;
}

unint64_t sub_1CA2B5EB4()
{
  unint64_t result;

  result = qword_1ED871940;
  if (!qword_1ED871940)
  {
    result = MEMORY[0x1CAA4F1A4](&protocol conformance descriptor for MusicKitCatalogSong.Relationships.FlexMLAnalysisRelationship.FlexMLAnalysisData.FlexMLAnalysisAttributes.VisualTempo, &type metadata for MusicKitCatalogSong.Relationships.FlexMLAnalysisRelationship.FlexMLAnalysisData.FlexMLAnalysisAttributes.VisualTempo);
    atomic_store(result, (unint64_t *)&qword_1ED871940);
  }
  return result;
}

unint64_t sub_1CA2B5EF8()
{
  unint64_t result;

  result = qword_1ED8719A0;
  if (!qword_1ED8719A0)
  {
    result = MEMORY[0x1CAA4F1A4](&protocol conformance descriptor for MusicKitCatalogSong.Relationships.FlexMLAnalysisRelationship.FlexMLAnalysisData.FlexMLAnalysisAttributes.ExitPoint, &type metadata for MusicKitCatalogSong.Relationships.FlexMLAnalysisRelationship.FlexMLAnalysisData.FlexMLAnalysisAttributes.ExitPoint);
    atomic_store(result, (unint64_t *)&qword_1ED8719A0);
  }
  return result;
}

unint64_t sub_1CA2B5F3C()
{
  unint64_t result;

  result = qword_1ED871900;
  if (!qword_1ED871900)
  {
    result = MEMORY[0x1CAA4F1A4](&protocol conformance descriptor for MusicKitCatalogSong.Relationships.FlexMLAnalysisRelationship.FlexMLAnalysisData.FlexMLAnalysisAttributes.EntryPoint, &type metadata for MusicKitCatalogSong.Relationships.FlexMLAnalysisRelationship.FlexMLAnalysisData.FlexMLAnalysisAttributes.EntryPoint);
    atomic_store(result, (unint64_t *)&qword_1ED871900);
  }
  return result;
}

unint64_t sub_1CA2B5F80()
{
  unint64_t result;

  result = qword_1ED871920;
  if (!qword_1ED871920)
  {
    result = MEMORY[0x1CAA4F1A4](&protocol conformance descriptor for MusicKitCatalogSong.Relationships.FlexMLAnalysisRelationship.FlexMLAnalysisData.FlexMLAnalysisAttributes.VideoEvents, &type metadata for MusicKitCatalogSong.Relationships.FlexMLAnalysisRelationship.FlexMLAnalysisData.FlexMLAnalysisAttributes.VideoEvents);
    atomic_store(result, (unint64_t *)&qword_1ED871920);
  }
  return result;
}

uint64_t sub_1CA2B5FC4(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_1CA2B5FF0()
{
  unint64_t result;

  result = qword_1ED8719B0;
  if (!qword_1ED8719B0)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8D93EC, &type metadata for MusicKitCatalogSong.Relationships.FlexMLAnalysisRelationship.FlexMLAnalysisData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED8719B0);
  }
  return result;
}

unint64_t sub_1CA2B6034()
{
  unint64_t result;

  result = qword_1EF94C7E8;
  if (!qword_1EF94C7E8)
  {
    result = MEMORY[0x1CAA4F1A4](&protocol conformance descriptor for MusicKitCatalogSong.Relationships.FlexMLAnalysisRelationship.FlexMLAnalysisData.FlexMLAnalysisAttributes, &type metadata for MusicKitCatalogSong.Relationships.FlexMLAnalysisRelationship.FlexMLAnalysisData.FlexMLAnalysisAttributes);
    atomic_store(result, (unint64_t *)&qword_1EF94C7E8);
  }
  return result;
}

unint64_t sub_1CA2B6078()
{
  unint64_t result;

  result = qword_1ED8719A8;
  if (!qword_1ED8719A8)
  {
    result = MEMORY[0x1CAA4F1A4](&protocol conformance descriptor for MusicKitCatalogSong.Relationships.FlexMLAnalysisRelationship.FlexMLAnalysisData.FlexMLAnalysisAttributes, &type metadata for MusicKitCatalogSong.Relationships.FlexMLAnalysisRelationship.FlexMLAnalysisData.FlexMLAnalysisAttributes);
    atomic_store(result, (unint64_t *)&qword_1ED8719A8);
  }
  return result;
}

unint64_t sub_1CA2B60BC()
{
  unint64_t result;

  result = qword_1ED8719D0;
  if (!qword_1ED8719D0)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8D939C, &type metadata for MusicKitCatalogSong.Relationships.FlexMLAnalysisRelationship.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED8719D0);
  }
  return result;
}

unint64_t sub_1CA2B6100()
{
  unint64_t result;

  result = qword_1EF94C800;
  if (!qword_1EF94C800)
  {
    result = MEMORY[0x1CAA4F1A4](&protocol conformance descriptor for MusicKitCatalogSong.Relationships.FlexMLAnalysisRelationship.FlexMLAnalysisData, &type metadata for MusicKitCatalogSong.Relationships.FlexMLAnalysisRelationship.FlexMLAnalysisData);
    atomic_store(result, (unint64_t *)&qword_1EF94C800);
  }
  return result;
}

unint64_t sub_1CA2B6144()
{
  unint64_t result;

  result = qword_1ED8719C8;
  if (!qword_1ED8719C8)
  {
    result = MEMORY[0x1CAA4F1A4](&protocol conformance descriptor for MusicKitCatalogSong.Relationships.FlexMLAnalysisRelationship.FlexMLAnalysisData, &type metadata for MusicKitCatalogSong.Relationships.FlexMLAnalysisRelationship.FlexMLAnalysisData);
    atomic_store(result, (unint64_t *)&qword_1ED8719C8);
  }
  return result;
}

unint64_t sub_1CA2B6188()
{
  unint64_t result;

  result = qword_1EF94C810;
  if (!qword_1EF94C810)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8D934C, &type metadata for MusicKitCatalogSong.Relationships.EquivalentsData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF94C810);
  }
  return result;
}

uint64_t _s11PhotosGraph19MusicKitCatalogSongV13RelationshipsV2eeoiySbAE_AEtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  char v19;

  v4 = *a1;
  v6 = a1[1];
  v5 = a1[2];
  v7 = a1[3];
  v8 = *a2;
  v10 = a2[1];
  v9 = a2[2];
  v11 = a2[3];
  if (!v4)
  {
    if (v8)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
LABEL_7:
    if (v6 == 1)
    {
      if (v10 == 1)
      {
LABEL_9:
        if (v5 == 1)
        {
          if (v9 == 1)
          {
LABEL_11:
            if (v7 == 1)
            {
              if (v11 == 1)
                return 1;
              goto LABEL_34;
            }
            if (v11 == 1)
            {
              swift_bridgeObjectRetain();
LABEL_34:
              sub_1CA2B697C(v11);
              sub_1CA2B71B4(v7);
              v13 = v11;
              goto LABEL_35;
            }
            if (v7)
            {
              if (v11)
              {
                sub_1CA2B697C(v7);
                sub_1CA2B697C(v7);
                sub_1CA2B697C(v11);
                v18 = swift_bridgeObjectRetain();
                v19 = sub_1CA2A743C(v18, v11);
                sub_1CA2B71B4(v11);
                swift_bridgeObjectRelease_n();
                sub_1CA2B71B4(v7);
                if ((v19 & 1) != 0)
                  return 1;
              }
              else
              {
                sub_1CA2B697C(v7);
                swift_bridgeObjectRelease();
              }
            }
            else if (!v11)
            {
              return 1;
            }
            return 0;
          }
        }
        else
        {
          if (v9 != 1)
          {
            if (v5)
            {
              if (!v9)
              {
                sub_1CA2B697C(v5);
                swift_bridgeObjectRelease();
                return 0;
              }
              sub_1CA2B697C(v5);
              sub_1CA2B697C(v5);
              sub_1CA2B697C(v9);
              v16 = swift_bridgeObjectRetain();
              v17 = sub_1CA2A7B0C(v16, v9);
              sub_1CA2B71B4(v9);
              swift_bridgeObjectRelease_n();
              sub_1CA2B71B4(v5);
              if ((v17 & 1) == 0)
                return 0;
            }
            else if (v9)
            {
              return 0;
            }
            goto LABEL_11;
          }
          swift_bridgeObjectRetain();
        }
        sub_1CA2B697C(v9);
        sub_1CA2B71B4(v5);
        v13 = v9;
LABEL_35:
        sub_1CA2B71B4(v13);
        return 0;
      }
    }
    else
    {
      if (v10 != 1)
      {
        if (v6)
        {
          if (!v10)
          {
            sub_1CA2B697C(v6);
            swift_bridgeObjectRelease();
            return 0;
          }
          sub_1CA2B697C(v6);
          sub_1CA2B697C(v6);
          sub_1CA2B697C(v10);
          v14 = swift_bridgeObjectRetain();
          v15 = sub_1CA2A729C(v14, v10);
          sub_1CA2B71B4(v10);
          swift_bridgeObjectRelease_n();
          sub_1CA2B71B4(v6);
          if ((v15 & 1) == 0)
            return 0;
        }
        else if (v10)
        {
          return 0;
        }
        goto LABEL_9;
      }
      swift_bridgeObjectRetain();
    }
    sub_1CA2B697C(v10);
    sub_1CA2B71B4(v6);
    v13 = v10;
    goto LABEL_35;
  }
  if (!v8)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    return 0;
  }
  if ((sub_1CA2A7E3C(v4, v8) & 1) != 0)
    goto LABEL_7;
  return 0;
}

unint64_t sub_1CA2B6450()
{
  unint64_t result;

  result = qword_1ED8717F0;
  if (!qword_1ED8717F0)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8D92FC, &type metadata for MusicKitCatalogSong.Relationships.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED8717F0);
  }
  return result;
}

unint64_t sub_1CA2B6494()
{
  unint64_t result;

  result = qword_1EF94C828;
  if (!qword_1EF94C828)
  {
    result = MEMORY[0x1CAA4F1A4](&protocol conformance descriptor for MusicKitCatalogSong.Relationships.Equivalents, &type metadata for MusicKitCatalogSong.Relationships.Equivalents);
    atomic_store(result, (unint64_t *)&qword_1EF94C828);
  }
  return result;
}

unint64_t sub_1CA2B64D8()
{
  unint64_t result;

  result = qword_1EF94C830;
  if (!qword_1EF94C830)
  {
    result = MEMORY[0x1CAA4F1A4](&protocol conformance descriptor for MusicKitCatalogSong.Relationships.Lyrics, &type metadata for MusicKitCatalogSong.Relationships.Lyrics);
    atomic_store(result, (unint64_t *)&qword_1EF94C830);
  }
  return result;
}

unint64_t sub_1CA2B651C()
{
  unint64_t result;

  result = qword_1EF94C838;
  if (!qword_1EF94C838)
  {
    result = MEMORY[0x1CAA4F1A4](&protocol conformance descriptor for MusicKitCatalogSong.Relationships.AudioAnalysisRelationship, &type metadata for MusicKitCatalogSong.Relationships.AudioAnalysisRelationship);
    atomic_store(result, (unint64_t *)&qword_1EF94C838);
  }
  return result;
}

unint64_t sub_1CA2B6560()
{
  unint64_t result;

  result = qword_1EF94C840;
  if (!qword_1EF94C840)
  {
    result = MEMORY[0x1CAA4F1A4](&protocol conformance descriptor for MusicKitCatalogSong.Relationships.FlexMLAnalysisRelationship, &type metadata for MusicKitCatalogSong.Relationships.FlexMLAnalysisRelationship);
    atomic_store(result, (unint64_t *)&qword_1EF94C840);
  }
  return result;
}

unint64_t sub_1CA2B65A4()
{
  unint64_t result;

  result = qword_1ED871808;
  if (!qword_1ED871808)
  {
    result = MEMORY[0x1CAA4F1A4](&protocol conformance descriptor for MusicKitCatalogSong.Relationships.Equivalents, &type metadata for MusicKitCatalogSong.Relationships.Equivalents);
    atomic_store(result, (unint64_t *)&qword_1ED871808);
  }
  return result;
}

unint64_t sub_1CA2B65E8()
{
  unint64_t result;

  result = qword_1ED8719F0;
  if (!qword_1ED8719F0)
  {
    result = MEMORY[0x1CAA4F1A4](&protocol conformance descriptor for MusicKitCatalogSong.Relationships.Lyrics, &type metadata for MusicKitCatalogSong.Relationships.Lyrics);
    atomic_store(result, (unint64_t *)&qword_1ED8719F0);
  }
  return result;
}

unint64_t sub_1CA2B662C()
{
  unint64_t result;

  result = qword_1ED8718C8;
  if (!qword_1ED8718C8)
  {
    result = MEMORY[0x1CAA4F1A4](&protocol conformance descriptor for MusicKitCatalogSong.Relationships.AudioAnalysisRelationship, &type metadata for MusicKitCatalogSong.Relationships.AudioAnalysisRelationship);
    atomic_store(result, (unint64_t *)&qword_1ED8718C8);
  }
  return result;
}

unint64_t sub_1CA2B6670()
{
  unint64_t result;

  result = qword_1ED8719E8;
  if (!qword_1ED8719E8)
  {
    result = MEMORY[0x1CAA4F1A4](&protocol conformance descriptor for MusicKitCatalogSong.Relationships.FlexMLAnalysisRelationship, &type metadata for MusicKitCatalogSong.Relationships.FlexMLAnalysisRelationship);
    atomic_store(result, (unint64_t *)&qword_1ED8719E8);
  }
  return result;
}

unint64_t sub_1CA2B66B4()
{
  unint64_t result;

  result = qword_1EF94C850;
  if (!qword_1EF94C850)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8D92AC, &type metadata for MusicKitCatalogSong.MusicKitTesseractMetadata.MusicKitTesseractDailyDetails.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF94C850);
  }
  return result;
}

unint64_t sub_1CA2B66F8()
{
  unint64_t result;

  result = qword_1ED871730;
  if (!qword_1ED871730)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8D925C, &type metadata for MusicKitCatalogSong.MusicKitTesseractMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED871730);
  }
  return result;
}

unint64_t sub_1CA2B673C()
{
  unint64_t result;

  result = qword_1EF94C870;
  if (!qword_1EF94C870)
  {
    result = MEMORY[0x1CAA4F1A4](&protocol conformance descriptor for MusicKitCatalogSong.MusicKitTesseractMetadata.MusicKitTesseractDailyDetails, &type metadata for MusicKitCatalogSong.MusicKitTesseractMetadata.MusicKitTesseractDailyDetails);
    atomic_store(result, (unint64_t *)&qword_1EF94C870);
  }
  return result;
}

uint64_t sub_1CA2B6780(unint64_t *a1, uint64_t *a2, uint64_t (*a3)(void), uint64_t a4)
{
  uint64_t result;
  uint64_t v8;
  uint64_t v9;

  result = *a1;
  if (!result)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v9 = a3();
    result = MEMORY[0x1CAA4F1A4](a4, v8, &v9);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1CA2B67E4()
{
  unint64_t result;

  result = qword_1ED871728;
  if (!qword_1ED871728)
  {
    result = MEMORY[0x1CAA4F1A4](&protocol conformance descriptor for MusicKitCatalogSong.MusicKitTesseractMetadata.MusicKitTesseractDailyDetails, &type metadata for MusicKitCatalogSong.MusicKitTesseractMetadata.MusicKitTesseractDailyDetails);
    atomic_store(result, (unint64_t *)&qword_1ED871728);
  }
  return result;
}

uint64_t sub_1CA2B6828(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  uint64_t result;

  if (a4 != 1)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1CA2B2A4C(a21, a22);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1CA2B692C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (result != 1)
  {
    swift_bridgeObjectRetain();
    sub_1CA2B697C(a2);
    sub_1CA2B697C(a3);
    return sub_1CA2B697C(a4);
  }
  return result;
}

uint64_t sub_1CA2B697C(uint64_t result)
{
  if (result != 1)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t sub_1CA2B698C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unint64_t v5;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _QWORD *i;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  char v28;
  int v29;

  v5 = *(_QWORD *)(result + 16);
  if (!v5)
    return MEMORY[0x1E0DEE9D8];
  v7 = 0;
  v8 = result + 64;
  v9 = -(uint64_t)v5;
  v10 = MEMORY[0x1E0DEE9D8];
  v23 = result + 64;
  v24 = *(_QWORD *)(result + 16);
  do
  {
    v25 = v10;
    if (v7 <= v5)
      v11 = v5;
    else
      v11 = v7;
    v12 = -(uint64_t)v11;
    for (i = (_QWORD *)(v8 + 40 * v7++); ; i += 5)
    {
      if (v12 + v7 == 1)
      {
        __break(1u);
        return result;
      }
      v14 = *(i - 2);
      if (v14)
      {
        v28 = *((_BYTE *)i - 28);
        v29 = *((_DWORD *)i - 8);
        v15 = *(i - 3);
        v17 = *(i - 1);
        v16 = *i;
        v18 = v15 == a2 && v14 == a3;
        if (v18 || (result = sub_1CA85C284(), (result & 1) != 0))
        {
          if (v16)
          {
            if (v17 == a4 && v16 == a5)
            {
              v17 = a4;
              v22 = a5;
              goto LABEL_21;
            }
            result = sub_1CA85C284();
            if ((result & 1) != 0)
              break;
          }
        }
      }
      ++v7;
      if (v9 + v7 == 1)
        return v25;
    }
    v22 = v16;
LABEL_21:
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v10 = v25;
    result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      result = sub_1CA3FB770(0, *(_QWORD *)(v25 + 16) + 1, 1);
      v10 = v25;
    }
    v20 = *(_QWORD *)(v10 + 16);
    v19 = *(_QWORD *)(v10 + 24);
    if (v20 >= v19 >> 1)
    {
      result = sub_1CA3FB770(v19 > 1, v20 + 1, 1);
      v10 = v25;
    }
    *(_QWORD *)(v10 + 16) = v20 + 1;
    v21 = v10 + 40 * v20;
    *(_DWORD *)(v21 + 32) = v29;
    *(_BYTE *)(v21 + 36) = v28;
    *(_QWORD *)(v21 + 40) = v15;
    *(_QWORD *)(v21 + 48) = v14;
    v8 = v23;
    *(_QWORD *)(v21 + 56) = v17;
    *(_QWORD *)(v21 + 64) = v22;
    v5 = v24;
  }
  while (v9 + v7);
  return v10;
}

unint64_t sub_1CA2B6B80()
{
  unint64_t result;

  result = qword_1ED8717D8;
  if (!qword_1ED8717D8)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8D920C, &type metadata for MusicKitCatalogSong.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED8717D8);
  }
  return result;
}

unint64_t sub_1CA2B6BC4()
{
  unint64_t result;

  result = qword_1EF94C880;
  if (!qword_1EF94C880)
  {
    result = MEMORY[0x1CAA4F1A4](&protocol conformance descriptor for MusicKitCatalogSong.Attributes, &type metadata for MusicKitCatalogSong.Attributes);
    atomic_store(result, (unint64_t *)&qword_1EF94C880);
  }
  return result;
}

unint64_t sub_1CA2B6C08()
{
  unint64_t result;

  result = qword_1EF94C888;
  if (!qword_1EF94C888)
  {
    result = MEMORY[0x1CAA4F1A4](&protocol conformance descriptor for MusicKitCatalogSong.Relationships, &type metadata for MusicKitCatalogSong.Relationships);
    atomic_store(result, (unint64_t *)&qword_1EF94C888);
  }
  return result;
}

unint64_t sub_1CA2B6C4C()
{
  unint64_t result;

  result = qword_1EF94C890;
  if (!qword_1EF94C890)
  {
    result = MEMORY[0x1CAA4F1A4](&protocol conformance descriptor for MusicKitCatalogSong.MusicKitTesseractMetadata, &type metadata for MusicKitCatalogSong.MusicKitTesseractMetadata);
    atomic_store(result, (unint64_t *)&qword_1EF94C890);
  }
  return result;
}

unint64_t sub_1CA2B6C90()
{
  unint64_t result;

  result = qword_1ED8717D0;
  if (!qword_1ED8717D0)
  {
    result = MEMORY[0x1CAA4F1A4](&protocol conformance descriptor for MusicKitCatalogSong.Attributes, &type metadata for MusicKitCatalogSong.Attributes);
    atomic_store(result, (unint64_t *)&qword_1ED8717D0);
  }
  return result;
}

uint64_t sub_1CA2B6CD4(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (result != 1)
  {
    swift_bridgeObjectRelease();
    sub_1CA2B71B4(a2);
    sub_1CA2B71B4(a3);
    return sub_1CA2B71B4(a4);
  }
  return result;
}

_QWORD *sub_1CA2B6D24(_QWORD *a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  a2(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10], a1[11], a1[12], a1[13], a1[14], a1[15], a1[16], a1[17], a1[18],
    a1[19],
    a1[20],
    a1[21],
    a1[22],
    a1[23],
    a1[24],
    a1[25],
    a1[26],
    a1[27],
    a1[28],
    a1[29]);
  return a1;
}

uint64_t sub_1CA2B6D98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  uint64_t result;

  if (a4 != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1CA2B290C(a21, a22);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_1CA2B6E9C()
{
  unint64_t result;

  result = qword_1ED8719F8;
  if (!qword_1ED8719F8)
  {
    result = MEMORY[0x1CAA4F1A4](&protocol conformance descriptor for MusicKitCatalogSong.Relationships, &type metadata for MusicKitCatalogSong.Relationships);
    atomic_store(result, (unint64_t *)&qword_1ED8719F8);
  }
  return result;
}

unint64_t sub_1CA2B6EE0()
{
  unint64_t result;

  result = qword_1ED871748;
  if (!qword_1ED871748)
  {
    result = MEMORY[0x1CAA4F1A4](&protocol conformance descriptor for MusicKitCatalogSong.MusicKitTesseractMetadata, &type metadata for MusicKitCatalogSong.MusicKitTesseractMetadata);
    atomic_store(result, (unint64_t *)&qword_1ED871748);
  }
  return result;
}

uint64_t sub_1CA2B6F24(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v21 = *(_QWORD *)(a1 + 24);
  v22 = *(_QWORD *)(a1 + 16);
  v19 = *(_QWORD *)(a1 + 40);
  v20 = *(_QWORD *)(a1 + 32);
  v2 = *(_QWORD *)(a1 + 64);
  v17 = *(_QWORD *)(a1 + 56);
  v18 = *(_QWORD *)(a1 + 48);
  v3 = *(_QWORD *)(a1 + 72);
  v15 = *(_OWORD *)(a1 + 96);
  v16 = *(_OWORD *)(a1 + 80);
  v13 = *(_OWORD *)(a1 + 128);
  v14 = *(_OWORD *)(a1 + 112);
  v12 = *(_OWORD *)(a1 + 144);
  v10 = *(_OWORD *)(a1 + 176);
  v11 = *(_OWORD *)(a1 + 160);
  v5 = *(_QWORD *)(a1 + 256);
  v4 = *(_QWORD *)(a1 + 264);
  v6 = *(_QWORD *)(a1 + 272);
  v7 = *(_QWORD *)(a1 + 280);
  v8 = *(_QWORD *)(a1 + 288);
  swift_bridgeObjectRetain();
  sub_1CA2B6828(v22, v21, v20, v19, v18, v17, v2, v3, v16, *((uint64_t *)&v16 + 1), v15, *((uint64_t *)&v15 + 1), v14, *((uint64_t *)&v14 + 1), v13, *((uint64_t *)&v13 + 1), v12, *((uint64_t *)&v12 + 1), v11,
    *((uint64_t *)&v11 + 1),
    v10,
    *((uint64_t *)&v10 + 1));
  sub_1CA2B692C(v5, v4, v6, v7);
  sub_1CA2B697C(v8);
  return a1;
}

uint64_t sub_1CA2B706C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v21 = *(_QWORD *)(a1 + 24);
  v22 = *(_QWORD *)(a1 + 16);
  v19 = *(_QWORD *)(a1 + 40);
  v20 = *(_QWORD *)(a1 + 32);
  v2 = *(_QWORD *)(a1 + 64);
  v17 = *(_QWORD *)(a1 + 56);
  v18 = *(_QWORD *)(a1 + 48);
  v3 = *(_QWORD *)(a1 + 72);
  v15 = *(_OWORD *)(a1 + 96);
  v16 = *(_OWORD *)(a1 + 80);
  v13 = *(_OWORD *)(a1 + 128);
  v14 = *(_OWORD *)(a1 + 112);
  v12 = *(_OWORD *)(a1 + 144);
  v10 = *(_OWORD *)(a1 + 176);
  v11 = *(_OWORD *)(a1 + 160);
  v5 = *(_QWORD *)(a1 + 256);
  v4 = *(_QWORD *)(a1 + 264);
  v6 = *(_QWORD *)(a1 + 272);
  v7 = *(_QWORD *)(a1 + 280);
  v8 = *(_QWORD *)(a1 + 288);
  swift_bridgeObjectRelease();
  sub_1CA2B6D98(v22, v21, v20, v19, v18, v17, v2, v3, v16, *((uint64_t *)&v16 + 1), v15, *((uint64_t *)&v15 + 1), v14, *((uint64_t *)&v14 + 1), v13, *((uint64_t *)&v13 + 1), v12, *((uint64_t *)&v12 + 1), v11,
    *((uint64_t *)&v11 + 1),
    v10,
    *((uint64_t *)&v10 + 1));
  sub_1CA2B6CD4(v5, v4, v6, v7);
  sub_1CA2B71B4(v8);
  return a1;
}

uint64_t sub_1CA2B71B4(uint64_t result)
{
  if (result != 1)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t destroy for MusicKitCatalogSong(_QWORD *a1)
{
  uint64_t result;

  swift_bridgeObjectRelease();
  if (a1[5] != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (a1[23])
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (a1[32] != 1)
  {
    swift_bridgeObjectRelease();
    if (a1[33] != 1)
      swift_bridgeObjectRelease();
    if (a1[34] != 1)
      swift_bridgeObjectRelease();
    if (a1[35] != 1)
      swift_bridgeObjectRelease();
  }
  result = a1[36];
  if (result != 1)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t initializeWithCopy for MusicKitCatalogSong(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  if (v5 == 1)
  {
    v6 = *(_OWORD *)(a2 + 224);
    *(_OWORD *)(a1 + 208) = *(_OWORD *)(a2 + 208);
    *(_OWORD *)(a1 + 224) = v6;
    *(_OWORD *)(a1 + 240) = *(_OWORD *)(a2 + 240);
    v7 = *(_OWORD *)(a2 + 160);
    *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 160) = v7;
    v8 = *(_OWORD *)(a2 + 192);
    *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
    *(_OWORD *)(a1 + 192) = v8;
    v9 = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 96) = v9;
    v10 = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 128) = v10;
    v11 = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    *(_OWORD *)(a1 + 32) = v11;
    v12 = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 64) = v12;
  }
  else
  {
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 40) = v5;
    v13 = *(_QWORD *)(a2 + 56);
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 56) = v13;
    v14 = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 72) = v14;
    v15 = *(_QWORD *)(a2 + 88);
    *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
    *(_QWORD *)(a1 + 88) = v15;
    v16 = *(_QWORD *)(a2 + 104);
    *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
    *(_QWORD *)(a1 + 104) = v16;
    *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
    *(_BYTE *)(a1 + 124) = *(_BYTE *)(a2 + 124);
    *(_DWORD *)(a1 + 120) = *(_DWORD *)(a2 + 120);
    v17 = *(_QWORD *)(a2 + 136);
    *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
    *(_QWORD *)(a1 + 136) = v17;
    v18 = *(_QWORD *)(a2 + 152);
    *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
    *(_QWORD *)(a1 + 152) = v18;
    *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
    LODWORD(v18) = *(_DWORD *)(a2 + 168);
    *(_BYTE *)(a1 + 172) = *(_BYTE *)(a2 + 172);
    *(_DWORD *)(a1 + 168) = v18;
    v30 = *(_QWORD *)(a2 + 184);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v30)
    {
      *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
      *(_QWORD *)(a1 + 184) = v30;
      v19 = *(_QWORD *)(a2 + 200);
      *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
      *(_QWORD *)(a1 + 200) = v19;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v20 = *(_OWORD *)(a2 + 192);
      *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
      *(_OWORD *)(a1 + 192) = v20;
    }
    v21 = *(_QWORD *)(a2 + 216);
    *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
    *(_QWORD *)(a1 + 216) = v21;
    *(_BYTE *)(a1 + 224) = *(_BYTE *)(a2 + 224);
    v22 = *(_QWORD *)(a2 + 240);
    *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
    *(_QWORD *)(a1 + 240) = v22;
    *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  v23 = *(_QWORD *)(a2 + 256);
  if (v23 == 1)
  {
    v24 = *(_OWORD *)(a2 + 272);
    *(_OWORD *)(a1 + 256) = *(_OWORD *)(a2 + 256);
    *(_OWORD *)(a1 + 272) = v24;
  }
  else
  {
    *(_QWORD *)(a1 + 256) = v23;
    v25 = *(_QWORD *)(a2 + 264);
    swift_bridgeObjectRetain();
    if (v25 != 1)
      swift_bridgeObjectRetain();
    *(_QWORD *)(a1 + 264) = v25;
    v26 = *(_QWORD *)(a2 + 272);
    if (v26 != 1)
      v26 = swift_bridgeObjectRetain();
    *(_QWORD *)(a1 + 272) = v26;
    v27 = *(_QWORD *)(a2 + 280);
    if (v27 == 1)
    {
      *(_QWORD *)(a1 + 280) = 1;
    }
    else
    {
      *(_QWORD *)(a1 + 280) = v27;
      swift_bridgeObjectRetain();
    }
  }
  v28 = *(_QWORD *)(a2 + 288);
  if (v28 != 1)
    v28 = swift_bridgeObjectRetain();
  *(_QWORD *)(a1 + 288) = v28;
  return a1;
}

uint64_t assignWithCopy for MusicKitCatalogSong(uint64_t a1, uint64_t a2)
{
  __int128 *v4;
  __int128 *v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  int v29;
  int v30;
  int v31;
  int v32;
  _OWORD *v33;
  _OWORD *v34;
  uint64_t v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  _OWORD *v39;
  _OWORD *v40;
  uint64_t v41;
  __int128 v42;
  __int128 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v59;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (__int128 *)(a1 + 16);
  v5 = (__int128 *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 40);
  if (*(_QWORD *)(a1 + 40) == 1)
  {
    if (v6 == 1)
    {
      v7 = *v5;
      v8 = *(_OWORD *)(a2 + 48);
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
      *(_OWORD *)(a1 + 48) = v8;
      *v4 = v7;
      v9 = *(_OWORD *)(a2 + 64);
      v10 = *(_OWORD *)(a2 + 80);
      v11 = *(_OWORD *)(a2 + 112);
      *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
      *(_OWORD *)(a1 + 112) = v11;
      *(_OWORD *)(a1 + 64) = v9;
      *(_OWORD *)(a1 + 80) = v10;
      v12 = *(_OWORD *)(a2 + 128);
      v13 = *(_OWORD *)(a2 + 144);
      v14 = *(_OWORD *)(a2 + 176);
      *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
      *(_OWORD *)(a1 + 176) = v14;
      *(_OWORD *)(a1 + 128) = v12;
      *(_OWORD *)(a1 + 144) = v13;
      v15 = *(_OWORD *)(a2 + 192);
      v16 = *(_OWORD *)(a2 + 208);
      v17 = *(_OWORD *)(a2 + 240);
      *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
      *(_OWORD *)(a1 + 240) = v17;
      *(_OWORD *)(a1 + 192) = v15;
      *(_OWORD *)(a1 + 208) = v16;
    }
    else
    {
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
      *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
      *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
      *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
      *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
      *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
      *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
      *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
      *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
      *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
      v29 = *(_DWORD *)(a2 + 120);
      *(_BYTE *)(a1 + 124) = *(_BYTE *)(a2 + 124);
      *(_DWORD *)(a1 + 120) = v29;
      *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
      *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
      *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
      *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
      *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
      v30 = *(_DWORD *)(a2 + 168);
      *(_BYTE *)(a1 + 172) = *(_BYTE *)(a2 + 172);
      *(_DWORD *)(a1 + 168) = v30;
      v59 = *(_QWORD *)(a2 + 184);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v59)
      {
        *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
        *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
        *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
        *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        v36 = *(_OWORD *)(a2 + 192);
        *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
        *(_OWORD *)(a1 + 192) = v36;
      }
      *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
      *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
      *(_BYTE *)(a1 + 224) = *(_BYTE *)(a2 + 224);
      *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
      *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
      *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  else if (v6 == 1)
  {
    sub_1CA2B7C3C(a1 + 16);
    v19 = *(_OWORD *)(a2 + 32);
    v18 = *(_OWORD *)(a2 + 48);
    *v4 = *v5;
    *(_OWORD *)(a1 + 32) = v19;
    *(_OWORD *)(a1 + 48) = v18;
    v20 = *(_OWORD *)(a2 + 112);
    v22 = *(_OWORD *)(a2 + 64);
    v21 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 112) = v20;
    *(_OWORD *)(a1 + 64) = v22;
    *(_OWORD *)(a1 + 80) = v21;
    v23 = *(_OWORD *)(a2 + 176);
    v25 = *(_OWORD *)(a2 + 128);
    v24 = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
    *(_OWORD *)(a1 + 176) = v23;
    *(_OWORD *)(a1 + 128) = v25;
    *(_OWORD *)(a1 + 144) = v24;
    v26 = *(_OWORD *)(a2 + 240);
    v28 = *(_OWORD *)(a2 + 192);
    v27 = *(_OWORD *)(a2 + 208);
    *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
    *(_OWORD *)(a1 + 240) = v26;
    *(_OWORD *)(a1 + 192) = v28;
    *(_OWORD *)(a1 + 208) = v27;
  }
  else
  {
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
    *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
    *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v31 = *(_DWORD *)(a2 + 120);
    *(_BYTE *)(a1 + 124) = *(_BYTE *)(a2 + 124);
    *(_DWORD *)(a1 + 120) = v31;
    *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
    *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
    *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v32 = *(_DWORD *)(a2 + 168);
    *(_BYTE *)(a1 + 172) = *(_BYTE *)(a2 + 172);
    *(_DWORD *)(a1 + 168) = v32;
    v33 = (_OWORD *)(a1 + 176);
    v34 = (_OWORD *)(a2 + 176);
    v35 = *(_QWORD *)(a2 + 184);
    if (*(_QWORD *)(a1 + 184))
    {
      if (v35)
      {
        *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
        *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
        *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_1CA2B9AB8(a1 + 176);
        v37 = *(_OWORD *)(a2 + 192);
        *v33 = *v34;
        *(_OWORD *)(a1 + 192) = v37;
      }
    }
    else if (v35)
    {
      *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
      *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
      *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
      *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v38 = *(_OWORD *)(a2 + 192);
      *v33 = *v34;
      *(_OWORD *)(a1 + 192) = v38;
    }
    *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
    *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_BYTE *)(a1 + 224) = *(_BYTE *)(a2 + 224);
    *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
    *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  v39 = (_OWORD *)(a1 + 256);
  v40 = (_OWORD *)(a2 + 256);
  v41 = *(_QWORD *)(a2 + 256);
  if (*(_QWORD *)(a1 + 256) != 1)
  {
    if (v41 == 1)
    {
      sub_1CA2B7C68((_QWORD *)(a1 + 256));
      v43 = *(_OWORD *)(a2 + 272);
      *v39 = *v40;
      *(_OWORD *)(a1 + 272) = v43;
      goto LABEL_53;
    }
    *(_QWORD *)(a1 + 256) = v41;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v47 = (uint64_t *)(a1 + 264);
    v48 = *(_QWORD *)(a2 + 264);
    if (*(_QWORD *)(a1 + 264) == 1)
    {
      if (v48 == 1)
      {
        v49 = 1;
LABEL_35:
        *v47 = v49;
        goto LABEL_38;
      }
      *v47 = v48;
      swift_bridgeObjectRetain();
    }
    else
    {
      if (v48 == 1)
      {
        sub_1CA290438(a1 + 264);
        v49 = *(_QWORD *)(a2 + 264);
        goto LABEL_35;
      }
      *v47 = v48;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
LABEL_38:
    v50 = (uint64_t *)(a1 + 272);
    v51 = *(_QWORD *)(a2 + 272);
    if (*(_QWORD *)(a1 + 272) == 1)
    {
      if (v51 == 1)
      {
        v52 = 1;
LABEL_43:
        *v50 = v52;
        goto LABEL_46;
      }
      *v50 = v51;
      swift_bridgeObjectRetain();
    }
    else
    {
      if (v51 == 1)
      {
        sub_1CA290438(a1 + 272);
        v52 = *(_QWORD *)(a2 + 272);
        goto LABEL_43;
      }
      *v50 = v51;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
LABEL_46:
    v53 = (_QWORD *)(a1 + 280);
    v54 = *(_QWORD *)(a2 + 280);
    if (*(_QWORD *)(a1 + 280) == 1)
    {
      if (v54 == 1)
      {
        *v53 = 1;
      }
      else
      {
        *v53 = v54;
        swift_bridgeObjectRetain();
      }
    }
    else if (v54 == 1)
    {
      sub_1CA290438(a1 + 280);
      *v53 = *(_QWORD *)(a2 + 280);
    }
    else
    {
      *v53 = v54;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    goto LABEL_53;
  }
  if (v41 == 1)
  {
    v42 = *(_OWORD *)(a2 + 272);
    *v39 = *v40;
    *(_OWORD *)(a1 + 272) = v42;
  }
  else
  {
    *(_QWORD *)(a1 + 256) = v41;
    v44 = *(_QWORD *)(a2 + 264);
    swift_bridgeObjectRetain();
    if (v44 != 1)
      swift_bridgeObjectRetain();
    *(_QWORD *)(a1 + 264) = v44;
    v45 = *(_QWORD *)(a2 + 272);
    if (v45 != 1)
      v45 = swift_bridgeObjectRetain();
    *(_QWORD *)(a1 + 272) = v45;
    v46 = *(_QWORD *)(a2 + 280);
    if (v46 == 1)
    {
      *(_QWORD *)(a1 + 280) = 1;
    }
    else
    {
      *(_QWORD *)(a1 + 280) = v46;
      swift_bridgeObjectRetain();
    }
  }
LABEL_53:
  v55 = (uint64_t *)(a1 + 288);
  v56 = *(_QWORD *)(a2 + 288);
  if (*(_QWORD *)(a1 + 288) == 1)
  {
    if (v56 != 1)
    {
      *v55 = v56;
      swift_bridgeObjectRetain();
      return a1;
    }
    v57 = 1;
  }
  else
  {
    if (v56 != 1)
    {
      *v55 = v56;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_1CA290438(a1 + 288);
    v57 = *(_QWORD *)(a2 + 288);
  }
  *v55 = v57;
  return a1;
}

uint64_t sub_1CA2B7C3C(uint64_t a1)
{
  destroy for MusicKitCatalogSong.Attributes(a1);
  return a1;
}

_QWORD *sub_1CA2B7C68(_QWORD *a1)
{
  destroy for MusicKitCatalogSong.Relationships(a1);
  return a1;
}

uint64_t assignWithTake for MusicKitCatalogSong(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  _QWORD *v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  _QWORD *v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 40) == 1)
    goto LABEL_4;
  v5 = *(_QWORD *)(a2 + 40);
  if (v5 == 1)
  {
    sub_1CA2B7C3C(a1 + 16);
LABEL_4:
    v6 = *(_OWORD *)(a2 + 224);
    *(_OWORD *)(a1 + 208) = *(_OWORD *)(a2 + 208);
    *(_OWORD *)(a1 + 224) = v6;
    *(_OWORD *)(a1 + 240) = *(_OWORD *)(a2 + 240);
    v7 = *(_OWORD *)(a2 + 160);
    *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 160) = v7;
    v8 = *(_OWORD *)(a2 + 192);
    *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
    *(_OWORD *)(a1 + 192) = v8;
    v9 = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 96) = v9;
    v10 = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 128) = v10;
    v11 = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    *(_OWORD *)(a1 + 32) = v11;
    v12 = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 64) = v12;
    goto LABEL_11;
  }
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  swift_bridgeObjectRelease();
  v13 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v13;
  swift_bridgeObjectRelease();
  v14 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v14;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRelease();
  v15 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v15;
  swift_bridgeObjectRelease();
  v16 = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = v16;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 120) = *(_DWORD *)(a2 + 120);
  *(_BYTE *)(a1 + 124) = *(_BYTE *)(a2 + 124);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  swift_bridgeObjectRelease();
  v17 = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = v17;
  swift_bridgeObjectRelease();
  v18 = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 160) = v18;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 168) = *(_DWORD *)(a2 + 168);
  *(_BYTE *)(a1 + 172) = *(_BYTE *)(a2 + 172);
  if (!*(_QWORD *)(a1 + 184))
    goto LABEL_9;
  v19 = *(_QWORD *)(a2 + 184);
  if (!v19)
  {
    sub_1CA2B9AB8(a1 + 176);
LABEL_9:
    v21 = *(_OWORD *)(a2 + 192);
    *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
    *(_OWORD *)(a1 + 192) = v21;
    goto LABEL_10;
  }
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 184) = v19;
  swift_bridgeObjectRelease();
  v20 = *(_QWORD *)(a2 + 200);
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  *(_QWORD *)(a1 + 200) = v20;
  swift_bridgeObjectRelease();
LABEL_10:
  v22 = *(_QWORD *)(a2 + 216);
  *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
  *(_QWORD *)(a1 + 216) = v22;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 224) = *(_BYTE *)(a2 + 224);
  *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
  swift_bridgeObjectRelease();
  v23 = *(_QWORD *)(a2 + 248);
  *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
  *(_QWORD *)(a1 + 248) = v23;
  swift_bridgeObjectRelease();
LABEL_11:
  if (*(_QWORD *)(a1 + 256) == 1)
  {
LABEL_14:
    v25 = *(_OWORD *)(a2 + 272);
    *(_OWORD *)(a1 + 256) = *(_OWORD *)(a2 + 256);
    *(_OWORD *)(a1 + 272) = v25;
    goto LABEL_15;
  }
  v24 = *(_QWORD *)(a2 + 256);
  if (v24 == 1)
  {
    sub_1CA2B7C68((_QWORD *)(a1 + 256));
    goto LABEL_14;
  }
  *(_QWORD *)(a1 + 256) = v24;
  swift_bridgeObjectRelease();
  v28 = (_QWORD *)(a1 + 264);
  v29 = *(_QWORD *)(a2 + 264);
  if (*(_QWORD *)(a1 + 264) == 1)
    goto LABEL_25;
  if (v29 == 1)
  {
    sub_1CA290438(a1 + 264);
    v29 = *(_QWORD *)(a2 + 264);
LABEL_25:
    *v28 = v29;
    goto LABEL_27;
  }
  *v28 = v29;
  swift_bridgeObjectRelease();
LABEL_27:
  v31 = (_QWORD *)(a1 + 272);
  v32 = *(_QWORD *)(a2 + 272);
  if (*(_QWORD *)(a1 + 272) == 1)
  {
LABEL_30:
    *v31 = v32;
    goto LABEL_32;
  }
  if (v32 == 1)
  {
    sub_1CA290438(a1 + 272);
    v32 = *(_QWORD *)(a2 + 272);
    goto LABEL_30;
  }
  *v31 = v32;
  swift_bridgeObjectRelease();
LABEL_32:
  v33 = (_QWORD *)(a1 + 280);
  v34 = *(_QWORD *)(a2 + 280);
  if (*(_QWORD *)(a1 + 280) == 1)
  {
    *v33 = v34;
  }
  else if (v34 == 1)
  {
    sub_1CA290438(a1 + 280);
    *v33 = *(_QWORD *)(a2 + 280);
  }
  else
  {
    *v33 = v34;
    swift_bridgeObjectRelease();
  }
LABEL_15:
  v26 = (_QWORD *)(a1 + 288);
  v27 = *(_QWORD *)(a2 + 288);
  if (*(_QWORD *)(a1 + 288) != 1)
  {
    if (v27 != 1)
    {
      *v26 = v27;
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_1CA290438(a1 + 288);
    v27 = *(_QWORD *)(a2 + 288);
  }
  *v26 = v27;
  return a1;
}

uint64_t getEnumTagSinglePayload for MusicKitCatalogSong(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 296))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MusicKitCatalogSong(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 296) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 296) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for MusicKitCatalogSong()
{
  return &type metadata for MusicKitCatalogSong;
}

uint64_t destroy for MusicKitCatalogSong.Attributes(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 168))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for MusicKitCatalogSong.Attributes(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  v6 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v6;
  v7 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v7;
  v8 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v8;
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_BYTE *)(a1 + 108) = *(_BYTE *)(a2 + 108);
  *(_DWORD *)(a1 + 104) = *(_DWORD *)(a2 + 104);
  v9 = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = v9;
  v10 = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = v10;
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  LODWORD(v10) = *(_DWORD *)(a2 + 152);
  *(_BYTE *)(a1 + 156) = *(_BYTE *)(a2 + 156);
  *(_DWORD *)(a1 + 152) = v10;
  v16 = *(_QWORD *)(a2 + 168);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v16)
  {
    *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
    *(_QWORD *)(a1 + 168) = v16;
    v11 = *(_QWORD *)(a2 + 184);
    *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
    *(_QWORD *)(a1 + 184) = v11;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v12 = *(_OWORD *)(a2 + 176);
    *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
    *(_OWORD *)(a1 + 176) = v12;
  }
  v13 = *(_QWORD *)(a2 + 200);
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  *(_QWORD *)(a1 + 200) = v13;
  *(_BYTE *)(a1 + 208) = *(_BYTE *)(a2 + 208);
  v14 = *(_QWORD *)(a2 + 224);
  *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
  *(_QWORD *)(a1 + 224) = v14;
  *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for MusicKitCatalogSong.Attributes(uint64_t a1, uint64_t a2)
{
  int v4;
  int v5;
  _OWORD *v6;
  _OWORD *v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_DWORD *)(a2 + 104);
  *(_BYTE *)(a1 + 108) = *(_BYTE *)(a2 + 108);
  *(_DWORD *)(a1 + 104) = v4;
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v5 = *(_DWORD *)(a2 + 152);
  *(_BYTE *)(a1 + 156) = *(_BYTE *)(a2 + 156);
  *(_DWORD *)(a1 + 152) = v5;
  v6 = (_OWORD *)(a1 + 160);
  v7 = (_OWORD *)(a2 + 160);
  v8 = *(_QWORD *)(a2 + 168);
  if (*(_QWORD *)(a1 + 168))
  {
    if (v8)
    {
      *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
      *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
      *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1CA2B9AB8(a1 + 160);
      v9 = *(_OWORD *)(a2 + 176);
      *v6 = *v7;
      *(_OWORD *)(a1 + 176) = v9;
    }
  }
  else if (v8)
  {
    *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
    *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
    *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
    *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v10 = *(_OWORD *)(a2 + 176);
    *v6 = *v7;
    *(_OWORD *)(a1 + 176) = v10;
  }
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 208) = *(_BYTE *)(a2 + 208);
  *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
  *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for MusicKitCatalogSong.Attributes(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v6;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v7;
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v8;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 104) = *(_DWORD *)(a2 + 104);
  *(_BYTE *)(a1 + 108) = *(_BYTE *)(a2 + 108);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  swift_bridgeObjectRelease();
  v9 = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = v9;
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = v10;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 152) = *(_DWORD *)(a2 + 152);
  *(_BYTE *)(a1 + 156) = *(_BYTE *)(a2 + 156);
  if (!*(_QWORD *)(a1 + 168))
    goto LABEL_5;
  v11 = *(_QWORD *)(a2 + 168);
  if (!v11)
  {
    sub_1CA2B9AB8(a1 + 160);
LABEL_5:
    v13 = *(_OWORD *)(a2 + 176);
    *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
    *(_OWORD *)(a1 + 176) = v13;
    goto LABEL_6;
  }
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 168) = v11;
  swift_bridgeObjectRelease();
  v12 = *(_QWORD *)(a2 + 184);
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 184) = v12;
  swift_bridgeObjectRelease();
LABEL_6:
  v14 = *(_QWORD *)(a2 + 200);
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  *(_QWORD *)(a1 + 200) = v14;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 208) = *(_BYTE *)(a2 + 208);
  *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
  swift_bridgeObjectRelease();
  v15 = *(_QWORD *)(a2 + 232);
  *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
  *(_QWORD *)(a1 + 232) = v15;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for MusicKitCatalogSong.Attributes(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 240))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 24);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for MusicKitCatalogSong.Attributes(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 232) = 0;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 240) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 240) = 0;
    if (a2)
      *(_QWORD *)(result + 24) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for MusicKitCatalogSong.Attributes()
{
  return &type metadata for MusicKitCatalogSong.Attributes;
}

uint64_t destroy for MusicKitCatalogSong.Attributes.Artwork()
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for MusicKitCatalogSong.Attributes.Artwork(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v3 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v3;
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for MusicKitCatalogSong.Attributes.Artwork(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for MusicKitCatalogSong.Attributes.Artwork(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v3 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for MusicKitCatalogSong.Attributes.Artwork(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MusicKitCatalogSong.Attributes.Artwork(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for MusicKitCatalogSong.Attributes.Artwork()
{
  return &type metadata for MusicKitCatalogSong.Attributes.Artwork;
}

ValueMetadata *type metadata accessor for MusicKitCatalogSong.Attributes.Preview()
{
  return &type metadata for MusicKitCatalogSong.Attributes.Preview;
}

ValueMetadata *type metadata accessor for MusicKitCatalogSong.Attributes.PlayParams()
{
  return &type metadata for MusicKitCatalogSong.Attributes.PlayParams;
}

uint64_t destroy for PublicEventCategory()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for MusicKitCatalogSong.Attributes.Unitag(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_BYTE *)(a1 + 4) = *(_BYTE *)(a2 + 4);
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for MusicKitCatalogSong.Attributes.Unitag(uint64_t a1, int *a2)
{
  int v4;

  v4 = *a2;
  *(_BYTE *)(a1 + 4) = *((_BYTE *)a2 + 4);
  *(_DWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = *((_QWORD *)a2 + 1);
  *(_QWORD *)(a1 + 16) = *((_QWORD *)a2 + 2);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *((_QWORD *)a2 + 3);
  *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for MusicKitCatalogSong.Attributes.Unitag(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_BYTE *)(a1 + 4) = *(_BYTE *)(a2 + 4);
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for MusicKitCatalogSong.Attributes.Unitag(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 40))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 16);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for MusicKitCatalogSong.Attributes.Unitag(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 40) = 0;
    if (a2)
      *(_QWORD *)(result + 16) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for MusicKitCatalogSong.Attributes.Unitag()
{
  return &type metadata for MusicKitCatalogSong.Attributes.Unitag;
}

uint64_t destroy for MusicKitCatalogSong.Relationships(_QWORD *a1)
{
  uint64_t result;

  swift_bridgeObjectRelease();
  if (a1[1] != 1)
    swift_bridgeObjectRelease();
  if (a1[2] != 1)
    swift_bridgeObjectRelease();
  result = a1[3];
  if (result != 1)
    return swift_bridgeObjectRelease();
  return result;
}

_QWORD *initializeWithCopy for MusicKitCatalogSong.Relationships(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = a2[1];
  *a1 = *a2;
  swift_bridgeObjectRetain();
  if (v4 != 1)
    swift_bridgeObjectRetain();
  a1[1] = v4;
  v5 = a2[2];
  if (v5 != 1)
    v5 = swift_bridgeObjectRetain();
  a1[2] = v5;
  v6 = a2[3];
  if (v6 != 1)
    v6 = swift_bridgeObjectRetain();
  a1[3] = v6;
  return a1;
}

uint64_t *assignWithCopy for MusicKitCatalogSong.Relationships(uint64_t *a1, uint64_t *a2)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = a1 + 1;
  v5 = a2[1];
  if (a1[1] == 1)
  {
    if (v5 == 1)
    {
      v6 = 1;
LABEL_6:
      *v4 = v6;
      goto LABEL_9;
    }
    *v4 = v5;
    swift_bridgeObjectRetain();
  }
  else
  {
    if (v5 == 1)
    {
      sub_1CA290438((uint64_t)(a1 + 1));
      v6 = a2[1];
      goto LABEL_6;
    }
    *v4 = v5;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
LABEL_9:
  v7 = a1 + 2;
  v8 = a2[2];
  if (a1[2] == 1)
  {
    if (v8 == 1)
    {
      v9 = 1;
LABEL_14:
      *v7 = v9;
      goto LABEL_17;
    }
    *v7 = v8;
    swift_bridgeObjectRetain();
  }
  else
  {
    if (v8 == 1)
    {
      sub_1CA290438((uint64_t)(a1 + 2));
      v9 = a2[2];
      goto LABEL_14;
    }
    *v7 = v8;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
LABEL_17:
  v10 = a1 + 3;
  v11 = a2[3];
  if (a1[3] == 1)
  {
    if (v11 != 1)
    {
      *v10 = v11;
      swift_bridgeObjectRetain();
      return a1;
    }
    v12 = 1;
  }
  else
  {
    if (v11 != 1)
    {
      *v10 = v11;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_1CA290438((uint64_t)(a1 + 3));
    v12 = a2[3];
  }
  *v10 = v12;
  return a1;
}

uint64_t *assignWithTake for MusicKitCatalogSong.Relationships(uint64_t *a1, uint64_t *a2)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  v4 = a1 + 1;
  v5 = a2[1];
  if (a1[1] == 1)
    goto LABEL_4;
  if (v5 == 1)
  {
    sub_1CA290438((uint64_t)(a1 + 1));
    v5 = 1;
LABEL_4:
    *v4 = v5;
    goto LABEL_6;
  }
  *v4 = v5;
  swift_bridgeObjectRelease();
LABEL_6:
  v6 = a1 + 2;
  v7 = a2[2];
  if (a1[2] == 1)
  {
LABEL_9:
    *v6 = v7;
    goto LABEL_11;
  }
  if (v7 == 1)
  {
    sub_1CA290438((uint64_t)(a1 + 2));
    v7 = 1;
    goto LABEL_9;
  }
  *v6 = v7;
  swift_bridgeObjectRelease();
LABEL_11:
  v8 = a1 + 3;
  v9 = a2[3];
  if (a1[3] != 1)
  {
    if (v9 != 1)
    {
      *v8 = v9;
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_1CA290438((uint64_t)(a1 + 3));
    v9 = 1;
  }
  *v8 = v9;
  return a1;
}

uint64_t getEnumTagSinglePayload for MusicKitCatalogSong.Relationships(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 32))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for MusicKitCatalogSong.Relationships(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 32) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for MusicKitCatalogSong.Relationships()
{
  return &type metadata for MusicKitCatalogSong.Relationships;
}

ValueMetadata *type metadata accessor for MusicKitCatalogSong.Relationships.Equivalents()
{
  return &type metadata for MusicKitCatalogSong.Relationships.Equivalents;
}

ValueMetadata *type metadata accessor for MusicKitCatalogSong.Relationships.Lyrics()
{
  return &type metadata for MusicKitCatalogSong.Relationships.Lyrics;
}

uint64_t destroy for MusicKitCatalogSong.Relationships.Lyrics.LyricsData(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 8);
  if (result != 1)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t _s11PhotosGraph19MusicKitCatalogSongV13RelationshipsV6LyricsV10LyricsDataVwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if (v3 == 1)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v3;
    swift_bridgeObjectRetain();
  }
  return a1;
}

_QWORD *assignWithCopy for MusicKitCatalogSong.Relationships.Lyrics.LyricsData(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  v4 = a2[1];
  if (a1[1] != 1)
  {
    if (v4 != 1)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_1CA2B9018((uint64_t)a1);
    goto LABEL_6;
  }
  if (v4 == 1)
  {
LABEL_6:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1CA2B9018(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for MusicKitCatalogSong.Relationships.Lyrics.LyricsData(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  if (a1[1] != 1)
  {
    v4 = a2[1];
    if (v4 != 1)
    {
      *a1 = *a2;
      a1[1] = v4;
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_1CA2B9018((uint64_t)a1);
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
  return a1;
}

uint64_t getEnumTagSinglePayload for MusicKitCatalogSong.Relationships.Lyrics.LyricsData(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;
  BOOL v5;
  int v6;

  if (!a2)
    return 0;
  if (a2 > 0x7FFFFFFD && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 2147483646);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  v5 = __OFSUB__(v4, 1);
  v6 = v4 - 1;
  if (v6 < 0 != v5)
    v6 = -1;
  return (v6 + 1);
}

uint64_t storeEnumTagSinglePayload for MusicKitCatalogSong.Relationships.Lyrics.LyricsData(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(_QWORD *)result = a2 - 2147483646;
    *(_QWORD *)(result + 8) = 0;
    if (a3 > 0x7FFFFFFD)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 > 0x7FFFFFFD)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for MusicKitCatalogSong.Relationships.Lyrics.LyricsData()
{
  return &type metadata for MusicKitCatalogSong.Relationships.Lyrics.LyricsData;
}

uint64_t getEnumTagSinglePayload for MusicKitCatalogSong.Relationships.Lyrics.LyricsData.LyricAttributes(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for MusicKitCatalogSong.Relationships.Lyrics.LyricsData.LyricAttributes(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for MusicKitCatalogSong.Relationships.Lyrics.LyricsData.LyricAttributes()
{
  return &type metadata for MusicKitCatalogSong.Relationships.Lyrics.LyricsData.LyricAttributes;
}

ValueMetadata *type metadata accessor for MusicKitCatalogSong.Relationships.AudioAnalysisRelationship()
{
  return &type metadata for MusicKitCatalogSong.Relationships.AudioAnalysisRelationship;
}

uint64_t destroy for MusicKitCatalogSong.Relationships.AudioAnalysisRelationship.AudioAnalysisData(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(result + 288);
  if (v1 != 2)
  {
    v2 = result;
    result = *(_QWORD *)(result + 8);
    if (result != 1)
    {
      if (result == 2)
      {
LABEL_9:
        if (v1 != 1)
        {
          swift_bridgeObjectRelease();
          return swift_bridgeObjectRelease();
        }
        return result;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    if (*(_QWORD *)(v2 + 40) != 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    result = *(_QWORD *)(v2 + 72);
    if (result != 1)
    {
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
    }
    goto LABEL_9;
  }
  return result;
}

char *initializeWithCopy for MusicKitCatalogSong.Relationships.AudioAnalysisRelationship.AudioAnalysisData(char *__dst, char *__src)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  __int128 v23;

  v4 = *((_QWORD *)__src + 36);
  if (v4 == 2)
  {
    memcpy(__dst, __src, 0x162uLL);
    return __dst;
  }
  v5 = *((_QWORD *)__src + 1);
  if (v5 == 1)
  {
    v9 = *((_OWORD *)__src + 1);
    *(_OWORD *)__dst = *(_OWORD *)__src;
    *((_OWORD *)__dst + 1) = v9;
LABEL_8:
    v11 = *((_QWORD *)__src + 5);
    if (v11 == 1)
    {
      v12 = *((_OWORD *)__src + 3);
      *((_OWORD *)__dst + 2) = *((_OWORD *)__src + 2);
      *((_OWORD *)__dst + 3) = v12;
    }
    else
    {
      *((_QWORD *)__dst + 4) = *((_QWORD *)__src + 4);
      *((_QWORD *)__dst + 5) = v11;
      v13 = *((_QWORD *)__src + 7);
      *((_QWORD *)__dst + 6) = *((_QWORD *)__src + 6);
      *((_QWORD *)__dst + 7) = v13;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    v14 = *((_QWORD *)__src + 9);
    if (v14 == 1)
    {
      v15 = *((_OWORD *)__src + 5);
      *((_OWORD *)__dst + 4) = *((_OWORD *)__src + 4);
      *((_OWORD *)__dst + 5) = v15;
    }
    else
    {
      *((_QWORD *)__dst + 8) = *((_QWORD *)__src + 8);
      *((_QWORD *)__dst + 9) = v14;
      v16 = *((_QWORD *)__src + 11);
      *((_QWORD *)__dst + 10) = *((_QWORD *)__src + 10);
      *((_QWORD *)__dst + 11) = v16;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    goto LABEL_14;
  }
  if (v5 != 2)
  {
    *(_QWORD *)__dst = *(_QWORD *)__src;
    *((_QWORD *)__dst + 1) = v5;
    v10 = *((_QWORD *)__src + 3);
    *((_QWORD *)__dst + 2) = *((_QWORD *)__src + 2);
    *((_QWORD *)__dst + 3) = v10;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    goto LABEL_8;
  }
  v6 = *((_OWORD *)__src + 3);
  *((_OWORD *)__dst + 2) = *((_OWORD *)__src + 2);
  *((_OWORD *)__dst + 3) = v6;
  v7 = *((_OWORD *)__src + 5);
  *((_OWORD *)__dst + 4) = *((_OWORD *)__src + 4);
  *((_OWORD *)__dst + 5) = v7;
  v8 = *((_OWORD *)__src + 1);
  *(_OWORD *)__dst = *(_OWORD *)__src;
  *((_OWORD *)__dst + 1) = v8;
LABEL_14:
  *((_OWORD *)__dst + 6) = *((_OWORD *)__src + 6);
  *(_QWORD *)(__dst + 110) = *(_QWORD *)(__src + 110);
  *(_OWORD *)(__dst + 120) = *(_OWORD *)(__src + 120);
  *(_QWORD *)(__dst + 134) = *(_QWORD *)(__src + 134);
  *((_OWORD *)__dst + 9) = *((_OWORD *)__src + 9);
  *(_QWORD *)(__dst + 158) = *(_QWORD *)(__src + 158);
  *(_QWORD *)(__dst + 182) = *(_QWORD *)(__src + 182);
  *(_OWORD *)(__dst + 168) = *(_OWORD *)(__src + 168);
  v17 = *((_OWORD *)__src + 12);
  v18 = *((_OWORD *)__src + 13);
  v19 = *((_OWORD *)__src + 14);
  v20 = *((_OWORD *)__src + 15);
  *(_QWORD *)(__dst + 255) = *(_QWORD *)(__src + 255);
  *((_OWORD *)__dst + 14) = v19;
  *((_OWORD *)__dst + 15) = v20;
  *((_OWORD *)__dst + 12) = v17;
  *((_OWORD *)__dst + 13) = v18;
  v21 = *(_OWORD *)(__src + 264);
  *(_QWORD *)(__dst + 278) = *(_QWORD *)(__src + 278);
  *(_OWORD *)(__dst + 264) = v21;
  if (v4 == 1)
  {
    *((_OWORD *)__dst + 18) = *((_OWORD *)__src + 18);
  }
  else
  {
    v22 = *((_QWORD *)__src + 37);
    *((_QWORD *)__dst + 36) = v4;
    *((_QWORD *)__dst + 37) = v22;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  v23 = *((_OWORD *)__src + 20);
  *((_OWORD *)__dst + 19) = *((_OWORD *)__src + 19);
  *((_OWORD *)__dst + 20) = v23;
  *((_OWORD *)__dst + 21) = *((_OWORD *)__src + 21);
  *((_WORD *)__dst + 176) = *((_WORD *)__src + 176);
  return __dst;
}

_QWORD *assignWithCopy for MusicKitCatalogSong.Relationships.AudioAnalysisRelationship.AudioAnalysisData(_QWORD *__dst, char *__src)
{
  _OWORD *v4;
  _OWORD *v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  uint64_t v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  _OWORD *v39;
  _OWORD *v40;
  uint64_t v41;
  __int128 v42;
  __int128 v43;
  _OWORD *v44;
  _OWORD *v45;
  uint64_t v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;

  v4 = __dst + 36;
  v5 = __src + 288;
  v6 = *((_QWORD *)__src + 36);
  if (__dst[36] != 2)
  {
    if (v6 == 2)
    {
      sub_1CA2B9B14(__dst);
      goto LABEL_8;
    }
    v12 = __dst[1];
    v13 = *((_QWORD *)__src + 1);
    if (v12 == 2)
    {
      if (v13 == 2)
      {
        v14 = *((_OWORD *)__src + 1);
        *(_OWORD *)__dst = *(_OWORD *)__src;
        *((_OWORD *)__dst + 1) = v14;
        v15 = *((_OWORD *)__src + 2);
        v16 = *((_OWORD *)__src + 3);
        v17 = *((_OWORD *)__src + 5);
        *((_OWORD *)__dst + 4) = *((_OWORD *)__src + 4);
        *((_OWORD *)__dst + 5) = v17;
        *((_OWORD *)__dst + 2) = v15;
        *((_OWORD *)__dst + 3) = v16;
        goto LABEL_52;
      }
      if (v13 == 1)
      {
        v34 = *((_OWORD *)__src + 1);
        *(_OWORD *)__dst = *(_OWORD *)__src;
        *((_OWORD *)__dst + 1) = v34;
      }
      else
      {
        *__dst = *(_QWORD *)__src;
        __dst[1] = *((_QWORD *)__src + 1);
        __dst[2] = *((_QWORD *)__src + 2);
        __dst[3] = *((_QWORD *)__src + 3);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      if (*((_QWORD *)__src + 5) == 1)
      {
        v36 = *((_OWORD *)__src + 3);
        *((_OWORD *)__dst + 2) = *((_OWORD *)__src + 2);
        *((_OWORD *)__dst + 3) = v36;
      }
      else
      {
        __dst[4] = *((_QWORD *)__src + 4);
        __dst[5] = *((_QWORD *)__src + 5);
        __dst[6] = *((_QWORD *)__src + 6);
        __dst[7] = *((_QWORD *)__src + 7);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      if (*((_QWORD *)__src + 9) == 1)
      {
        v38 = *((_OWORD *)__src + 5);
        *((_OWORD *)__dst + 4) = *((_OWORD *)__src + 4);
        *((_OWORD *)__dst + 5) = v38;
        goto LABEL_52;
      }
    }
    else
    {
      if (v13 == 2)
      {
        sub_1CA2B9AE8(__dst);
        v18 = *((_OWORD *)__src + 1);
        *(_OWORD *)__dst = *(_OWORD *)__src;
        *((_OWORD *)__dst + 1) = v18;
        v19 = *((_OWORD *)__src + 5);
        v21 = *((_OWORD *)__src + 2);
        v20 = *((_OWORD *)__src + 3);
        *((_OWORD *)__dst + 4) = *((_OWORD *)__src + 4);
        *((_OWORD *)__dst + 5) = v19;
        *((_OWORD *)__dst + 2) = v21;
        *((_OWORD *)__dst + 3) = v20;
        goto LABEL_52;
      }
      if (v12 == 1)
      {
        if (v13 == 1)
        {
          v35 = *((_OWORD *)__src + 1);
          *(_OWORD *)__dst = *(_OWORD *)__src;
          *((_OWORD *)__dst + 1) = v35;
        }
        else
        {
          *__dst = *(_QWORD *)__src;
          __dst[1] = *((_QWORD *)__src + 1);
          __dst[2] = *((_QWORD *)__src + 2);
          __dst[3] = *((_QWORD *)__src + 3);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
      }
      else if (v13 == 1)
      {
        sub_1CA2B9AB8((uint64_t)__dst);
        v37 = *((_OWORD *)__src + 1);
        *(_OWORD *)__dst = *(_OWORD *)__src;
        *((_OWORD *)__dst + 1) = v37;
      }
      else
      {
        *__dst = *(_QWORD *)__src;
        __dst[1] = *((_QWORD *)__src + 1);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        __dst[2] = *((_QWORD *)__src + 2);
        __dst[3] = *((_QWORD *)__src + 3);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
      }
      v39 = __dst + 4;
      v40 = __src + 32;
      v41 = *((_QWORD *)__src + 5);
      if (__dst[5] == 1)
      {
        if (v41 == 1)
        {
          v42 = *((_OWORD *)__src + 3);
          *v39 = *v40;
          *((_OWORD *)__dst + 3) = v42;
        }
        else
        {
          __dst[4] = *((_QWORD *)__src + 4);
          __dst[5] = *((_QWORD *)__src + 5);
          __dst[6] = *((_QWORD *)__src + 6);
          __dst[7] = *((_QWORD *)__src + 7);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
      }
      else if (v41 == 1)
      {
        sub_1CA2B9AB8((uint64_t)(__dst + 4));
        v43 = *((_OWORD *)__src + 3);
        *v39 = *v40;
        *((_OWORD *)__dst + 3) = v43;
      }
      else
      {
        __dst[4] = *((_QWORD *)__src + 4);
        __dst[5] = *((_QWORD *)__src + 5);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        __dst[6] = *((_QWORD *)__src + 6);
        __dst[7] = *((_QWORD *)__src + 7);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
      }
      v44 = __dst + 8;
      v45 = __src + 64;
      v46 = *((_QWORD *)__src + 9);
      if (__dst[9] != 1)
      {
        if (v46 == 1)
        {
          sub_1CA2B9AB8((uint64_t)(__dst + 8));
          v48 = *((_OWORD *)__src + 5);
          *v44 = *v45;
          *((_OWORD *)__dst + 5) = v48;
        }
        else
        {
          __dst[8] = *((_QWORD *)__src + 8);
          __dst[9] = *((_QWORD *)__src + 9);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          __dst[10] = *((_QWORD *)__src + 10);
          __dst[11] = *((_QWORD *)__src + 11);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
        }
LABEL_52:
        v49 = *((_OWORD *)__src + 6);
        *(_QWORD *)((char *)__dst + 110) = *(_QWORD *)(__src + 110);
        *((_OWORD *)__dst + 6) = v49;
        v50 = *(_OWORD *)(__src + 120);
        *(_QWORD *)((char *)__dst + 134) = *(_QWORD *)(__src + 134);
        *(_OWORD *)(__dst + 15) = v50;
        v51 = *((_OWORD *)__src + 9);
        *(_QWORD *)((char *)__dst + 158) = *(_QWORD *)(__src + 158);
        *((_OWORD *)__dst + 9) = v51;
        v52 = *(_OWORD *)(__src + 168);
        *(_QWORD *)((char *)__dst + 182) = *(_QWORD *)(__src + 182);
        *(_OWORD *)(__dst + 21) = v52;
        v54 = *((_OWORD *)__src + 14);
        v53 = *((_OWORD *)__src + 15);
        v55 = *((_OWORD *)__src + 13);
        *(_QWORD *)((char *)__dst + 255) = *(_QWORD *)(__src + 255);
        *((_OWORD *)__dst + 14) = v54;
        *((_OWORD *)__dst + 15) = v53;
        *((_OWORD *)__dst + 13) = v55;
        *((_OWORD *)__dst + 12) = *((_OWORD *)__src + 12);
        v56 = *(_OWORD *)(__src + 264);
        *(_QWORD *)((char *)__dst + 278) = *(_QWORD *)(__src + 278);
        *(_OWORD *)(__dst + 33) = v56;
        v33 = *((_QWORD *)__src + 36);
        if (__dst[36] != 1)
        {
          if (v33 != 1)
          {
            __dst[36] = v33;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            __dst[37] = *((_QWORD *)__src + 37);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            goto LABEL_59;
          }
          sub_1CA2BB664((uint64_t)v4);
          goto LABEL_57;
        }
LABEL_53:
        if (v33 != 1)
        {
          __dst[36] = v33;
          __dst[37] = *((_QWORD *)__src + 37);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
LABEL_59:
          v57 = *((_OWORD *)__src + 19);
          v58 = *((_OWORD *)__src + 20);
          v59 = *((_OWORD *)__src + 21);
          *((_WORD *)__dst + 176) = *((_WORD *)__src + 176);
          *((_OWORD *)__dst + 20) = v58;
          *((_OWORD *)__dst + 21) = v59;
          *((_OWORD *)__dst + 19) = v57;
          return __dst;
        }
LABEL_57:
        *v4 = *v5;
        goto LABEL_59;
      }
      if (v46 == 1)
      {
        v47 = *((_OWORD *)__src + 5);
        *v44 = *v45;
        *((_OWORD *)__dst + 5) = v47;
        goto LABEL_52;
      }
    }
    __dst[8] = *((_QWORD *)__src + 8);
    __dst[9] = *((_QWORD *)__src + 9);
    __dst[10] = *((_QWORD *)__src + 10);
    __dst[11] = *((_QWORD *)__src + 11);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    goto LABEL_52;
  }
  if (v6 != 2)
  {
    v7 = *((_QWORD *)__src + 1);
    if (v7 == 1)
    {
      v22 = *((_OWORD *)__src + 1);
      *(_OWORD *)__dst = *(_OWORD *)__src;
      *((_OWORD *)__dst + 1) = v22;
    }
    else
    {
      if (v7 == 2)
      {
        v8 = *((_OWORD *)__src + 1);
        *(_OWORD *)__dst = *(_OWORD *)__src;
        *((_OWORD *)__dst + 1) = v8;
        v9 = *((_OWORD *)__src + 2);
        v10 = *((_OWORD *)__src + 3);
        v11 = *((_OWORD *)__src + 5);
        *((_OWORD *)__dst + 4) = *((_OWORD *)__src + 4);
        *((_OWORD *)__dst + 5) = v11;
        *((_OWORD *)__dst + 2) = v9;
        *((_OWORD *)__dst + 3) = v10;
LABEL_22:
        v25 = *((_OWORD *)__src + 6);
        *(_QWORD *)((char *)__dst + 110) = *(_QWORD *)(__src + 110);
        *((_OWORD *)__dst + 6) = v25;
        v26 = *(_OWORD *)(__src + 120);
        *(_QWORD *)((char *)__dst + 134) = *(_QWORD *)(__src + 134);
        *(_OWORD *)(__dst + 15) = v26;
        v27 = *((_OWORD *)__src + 9);
        *(_QWORD *)((char *)__dst + 158) = *(_QWORD *)(__src + 158);
        *((_OWORD *)__dst + 9) = v27;
        v28 = *(_OWORD *)(__src + 168);
        *(_QWORD *)((char *)__dst + 182) = *(_QWORD *)(__src + 182);
        *(_OWORD *)(__dst + 21) = v28;
        v30 = *((_OWORD *)__src + 14);
        v29 = *((_OWORD *)__src + 15);
        v31 = *((_OWORD *)__src + 13);
        *(_QWORD *)((char *)__dst + 255) = *(_QWORD *)(__src + 255);
        *((_OWORD *)__dst + 14) = v30;
        *((_OWORD *)__dst + 15) = v29;
        *((_OWORD *)__dst + 13) = v31;
        *((_OWORD *)__dst + 12) = *((_OWORD *)__src + 12);
        v32 = *(_OWORD *)(__src + 264);
        *(_QWORD *)((char *)__dst + 278) = *(_QWORD *)(__src + 278);
        *(_OWORD *)(__dst + 33) = v32;
        v33 = *((_QWORD *)__src + 36);
        goto LABEL_53;
      }
      *__dst = *(_QWORD *)__src;
      __dst[1] = *((_QWORD *)__src + 1);
      __dst[2] = *((_QWORD *)__src + 2);
      __dst[3] = *((_QWORD *)__src + 3);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    if (*((_QWORD *)__src + 5) == 1)
    {
      v23 = *((_OWORD *)__src + 3);
      *((_OWORD *)__dst + 2) = *((_OWORD *)__src + 2);
      *((_OWORD *)__dst + 3) = v23;
    }
    else
    {
      __dst[4] = *((_QWORD *)__src + 4);
      __dst[5] = *((_QWORD *)__src + 5);
      __dst[6] = *((_QWORD *)__src + 6);
      __dst[7] = *((_QWORD *)__src + 7);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    if (*((_QWORD *)__src + 9) == 1)
    {
      v24 = *((_OWORD *)__src + 5);
      *((_OWORD *)__dst + 4) = *((_OWORD *)__src + 4);
      *((_OWORD *)__dst + 5) = v24;
    }
    else
    {
      __dst[8] = *((_QWORD *)__src + 8);
      __dst[9] = *((_QWORD *)__src + 9);
      __dst[10] = *((_QWORD *)__src + 10);
      __dst[11] = *((_QWORD *)__src + 11);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    goto LABEL_22;
  }
LABEL_8:
  memcpy(__dst, __src, 0x162uLL);
  return __dst;
}

uint64_t sub_1CA2B9AB8(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *sub_1CA2B9AE8(_QWORD *a1)
{
  destroy for MusicKitCatalogSong.Relationships.AudioAnalysisRelationship.AudioAnalysisData.AudioAnalysisAttributes.AudioAnalysisKey(a1);
  return a1;
}

_QWORD *sub_1CA2B9B14(_QWORD *a1)
{
  destroy for MusicKitCatalogSong.Relationships.AudioAnalysisRelationship.AudioAnalysisData.AudioAnalysisAttributes(a1);
  return a1;
}

void *__swift_memcpy354_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x162uLL);
}

_QWORD *assignWithTake for MusicKitCatalogSong.Relationships.AudioAnalysisRelationship.AudioAnalysisData(_QWORD *__dst, char *__src)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;

  if (__dst[36] == 2)
    goto LABEL_4;
  v4 = *((_QWORD *)__src + 36);
  if (v4 != 2)
  {
    v5 = __dst[1];
    if (v5 == 2)
    {
LABEL_8:
      v7 = *((_OWORD *)__src + 3);
      *((_OWORD *)__dst + 2) = *((_OWORD *)__src + 2);
      *((_OWORD *)__dst + 3) = v7;
      v8 = *((_OWORD *)__src + 5);
      *((_OWORD *)__dst + 4) = *((_OWORD *)__src + 4);
      *((_OWORD *)__dst + 5) = v8;
      v9 = *((_OWORD *)__src + 1);
      *(_OWORD *)__dst = *(_OWORD *)__src;
      *((_OWORD *)__dst + 1) = v9;
      goto LABEL_24;
    }
    v6 = *((_QWORD *)__src + 1);
    if (v6 == 2)
    {
      sub_1CA2B9AE8(__dst);
      goto LABEL_8;
    }
    if (v5 != 1)
    {
      if (v6 != 1)
      {
        *__dst = *(_QWORD *)__src;
        __dst[1] = v6;
        swift_bridgeObjectRelease();
        v11 = *((_QWORD *)__src + 3);
        __dst[2] = *((_QWORD *)__src + 2);
        __dst[3] = v11;
        swift_bridgeObjectRelease();
LABEL_14:
        if (__dst[5] != 1)
        {
          v12 = *((_QWORD *)__src + 5);
          if (v12 != 1)
          {
            __dst[4] = *((_QWORD *)__src + 4);
            __dst[5] = v12;
            swift_bridgeObjectRelease();
            v14 = *((_QWORD *)__src + 7);
            __dst[6] = *((_QWORD *)__src + 6);
            __dst[7] = v14;
            swift_bridgeObjectRelease();
LABEL_19:
            if (__dst[9] != 1)
            {
              v15 = *((_QWORD *)__src + 9);
              if (v15 != 1)
              {
                __dst[8] = *((_QWORD *)__src + 8);
                __dst[9] = v15;
                swift_bridgeObjectRelease();
                v17 = *((_QWORD *)__src + 11);
                __dst[10] = *((_QWORD *)__src + 10);
                __dst[11] = v17;
                swift_bridgeObjectRelease();
LABEL_24:
                *((_OWORD *)__dst + 6) = *((_OWORD *)__src + 6);
                *(_QWORD *)((char *)__dst + 110) = *(_QWORD *)(__src + 110);
                *(_OWORD *)(__dst + 15) = *(_OWORD *)(__src + 120);
                *(_QWORD *)((char *)__dst + 134) = *(_QWORD *)(__src + 134);
                *((_OWORD *)__dst + 9) = *((_OWORD *)__src + 9);
                *(_QWORD *)((char *)__dst + 158) = *(_QWORD *)(__src + 158);
                *(_QWORD *)((char *)__dst + 182) = *(_QWORD *)(__src + 182);
                *(_OWORD *)(__dst + 21) = *(_OWORD *)(__src + 168);
                v18 = *((_OWORD *)__src + 12);
                v19 = *((_OWORD *)__src + 13);
                v20 = *((_OWORD *)__src + 14);
                v21 = *((_OWORD *)__src + 15);
                *(_QWORD *)((char *)__dst + 255) = *(_QWORD *)(__src + 255);
                *((_OWORD *)__dst + 14) = v20;
                *((_OWORD *)__dst + 15) = v21;
                *((_OWORD *)__dst + 12) = v18;
                *((_OWORD *)__dst + 13) = v19;
                v22 = *(_OWORD *)(__src + 264);
                *(_QWORD *)((char *)__dst + 278) = *(_QWORD *)(__src + 278);
                *(_OWORD *)(__dst + 33) = v22;
                if (__dst[36] != 1)
                {
                  if (v4 != 1)
                  {
                    __dst[36] = v4;
                    swift_bridgeObjectRelease();
                    __dst[37] = *((_QWORD *)__src + 37);
                    swift_bridgeObjectRelease();
                    goto LABEL_29;
                  }
                  sub_1CA2BB664((uint64_t)(__dst + 36));
                }
                *((_OWORD *)__dst + 18) = *((_OWORD *)__src + 18);
LABEL_29:
                v23 = *((_OWORD *)__src + 20);
                *((_OWORD *)__dst + 19) = *((_OWORD *)__src + 19);
                *((_OWORD *)__dst + 20) = v23;
                *((_OWORD *)__dst + 21) = *((_OWORD *)__src + 21);
                *((_WORD *)__dst + 176) = *((_WORD *)__src + 176);
                return __dst;
              }
              sub_1CA2B9AB8((uint64_t)(__dst + 8));
            }
            v16 = *((_OWORD *)__src + 5);
            *((_OWORD *)__dst + 4) = *((_OWORD *)__src + 4);
            *((_OWORD *)__dst + 5) = v16;
            goto LABEL_24;
          }
          sub_1CA2B9AB8((uint64_t)(__dst + 4));
        }
        v13 = *((_OWORD *)__src + 3);
        *((_OWORD *)__dst + 2) = *((_OWORD *)__src + 2);
        *((_OWORD *)__dst + 3) = v13;
        goto LABEL_19;
      }
      sub_1CA2B9AB8((uint64_t)__dst);
    }
    v10 = *((_OWORD *)__src + 1);
    *(_OWORD *)__dst = *(_OWORD *)__src;
    *((_OWORD *)__dst + 1) = v10;
    goto LABEL_14;
  }
  sub_1CA2B9B14(__dst);
LABEL_4:
  memcpy(__dst, __src, 0x162uLL);
  return __dst;
}

uint64_t getEnumTagSinglePayload for MusicKitCatalogSong.Relationships.AudioAnalysisRelationship.AudioAnalysisData(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;
  int v5;
  int v6;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFD && *(_BYTE *)(a1 + 354))
    return (*(_DWORD *)a1 + 2147483645);
  v3 = *(_QWORD *)(a1 + 288);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v5 = -1;
  else
    v5 = v4;
  if (v4 <= 1)
    v4 = 1;
  v6 = v4 - 2;
  if (v5 < 1)
    v6 = -1;
  return (v6 + 1);
}

uint64_t storeEnumTagSinglePayload for MusicKitCatalogSong.Relationships.AudioAnalysisRelationship.AudioAnalysisData(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFC)
  {
    *(_QWORD *)(result + 344) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_WORD *)(result + 352) = 0;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(_QWORD *)result = a2 - 2147483645;
    if (a3 >= 0x7FFFFFFD)
      *(_BYTE *)(result + 354) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFD)
      *(_BYTE *)(result + 354) = 0;
    if (a2)
      *(_QWORD *)(result + 288) = a2 + 2;
  }
  return result;
}

ValueMetadata *type metadata accessor for MusicKitCatalogSong.Relationships.AudioAnalysisRelationship.AudioAnalysisData()
{
  return &type metadata for MusicKitCatalogSong.Relationships.AudioAnalysisRelationship.AudioAnalysisData;
}

uint64_t destroy for MusicKitCatalogSong.Relationships.AudioAnalysisRelationship.AudioAnalysisData.AudioAnalysisAttributes(_QWORD *a1)
{
  uint64_t v2;
  uint64_t result;

  v2 = a1[1];
  if (v2 != 1)
  {
    if (v2 == 2)
      goto LABEL_8;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (a1[5] != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (a1[9] != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
LABEL_8:
  result = a1[36];
  if (result != 1)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for MusicKitCatalogSong.Relationships.AudioAnalysisRelationship.AudioAnalysisData.AudioAnalysisAttributes(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;

  v4 = *(_QWORD *)(a2 + 8);
  if (v4 == 1)
  {
    v8 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v8;
  }
  else
  {
    if (v4 == 2)
    {
      v5 = *(_OWORD *)(a2 + 48);
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
      *(_OWORD *)(a1 + 48) = v5;
      v6 = *(_OWORD *)(a2 + 80);
      *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
      *(_OWORD *)(a1 + 80) = v6;
      v7 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v7;
      goto LABEL_12;
    }
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v4;
    v9 = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 24) = v9;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  v10 = *(_QWORD *)(a2 + 40);
  if (v10 == 1)
  {
    v11 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v11;
  }
  else
  {
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 40) = v10;
    v12 = *(_QWORD *)(a2 + 56);
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 56) = v12;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  v13 = *(_QWORD *)(a2 + 72);
  if (v13 == 1)
  {
    v14 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v14;
  }
  else
  {
    *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 72) = v13;
    v15 = *(_QWORD *)(a2 + 88);
    *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
    *(_QWORD *)(a1 + 88) = v15;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
LABEL_12:
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 110) = *(_QWORD *)(a2 + 110);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 134) = *(_QWORD *)(a2 + 134);
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 158) = *(_QWORD *)(a2 + 158);
  *(_QWORD *)(a1 + 182) = *(_QWORD *)(a2 + 182);
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  v16 = *(_OWORD *)(a2 + 192);
  v17 = *(_OWORD *)(a2 + 208);
  v18 = *(_OWORD *)(a2 + 224);
  v19 = *(_OWORD *)(a2 + 240);
  *(_QWORD *)(a1 + 255) = *(_QWORD *)(a2 + 255);
  *(_OWORD *)(a1 + 224) = v18;
  *(_OWORD *)(a1 + 240) = v19;
  *(_OWORD *)(a1 + 192) = v16;
  *(_OWORD *)(a1 + 208) = v17;
  v20 = *(_OWORD *)(a2 + 264);
  *(_QWORD *)(a1 + 278) = *(_QWORD *)(a2 + 278);
  *(_OWORD *)(a1 + 264) = v20;
  v21 = *(_QWORD *)(a2 + 288);
  if (v21 == 1)
  {
    *(_OWORD *)(a1 + 288) = *(_OWORD *)(a2 + 288);
  }
  else
  {
    v22 = *(_QWORD *)(a2 + 296);
    *(_QWORD *)(a1 + 288) = v21;
    *(_QWORD *)(a1 + 296) = v22;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  v23 = *(_OWORD *)(a2 + 320);
  *(_OWORD *)(a1 + 304) = *(_OWORD *)(a2 + 304);
  *(_OWORD *)(a1 + 320) = v23;
  *(_OWORD *)(a1 + 336) = *(_OWORD *)(a2 + 336);
  *(_WORD *)(a1 + 352) = *(_WORD *)(a2 + 352);
  return a1;
}

uint64_t assignWithCopy for MusicKitCatalogSong.Relationships.AudioAnalysisRelationship.AudioAnalysisData.AudioAnalysisAttributes(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  _OWORD *v19;
  _OWORD *v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  _OWORD *v24;
  _OWORD *v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  uint64_t v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;

  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a2 + 8);
  if (v4 == 2)
  {
    if (v5 == 2)
    {
      v6 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v6;
      v7 = *(_OWORD *)(a2 + 32);
      v8 = *(_OWORD *)(a2 + 48);
      v9 = *(_OWORD *)(a2 + 80);
      *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
      *(_OWORD *)(a1 + 80) = v9;
      *(_OWORD *)(a1 + 32) = v7;
      *(_OWORD *)(a1 + 48) = v8;
      goto LABEL_35;
    }
    if (v5 == 1)
    {
      v14 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v14;
    }
    else
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
      *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    if (*(_QWORD *)(a2 + 40) == 1)
    {
      v16 = *(_OWORD *)(a2 + 48);
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
      *(_OWORD *)(a1 + 48) = v16;
    }
    else
    {
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
      *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    if (*(_QWORD *)(a2 + 72) == 1)
    {
      v18 = *(_OWORD *)(a2 + 80);
      *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
      *(_OWORD *)(a1 + 80) = v18;
      goto LABEL_35;
    }
LABEL_31:
    *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
    *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    goto LABEL_35;
  }
  if (v5 == 2)
  {
    sub_1CA2B9AE8((_QWORD *)a1);
    v10 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v10;
    v11 = *(_OWORD *)(a2 + 80);
    v13 = *(_OWORD *)(a2 + 32);
    v12 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v11;
    *(_OWORD *)(a1 + 32) = v13;
    *(_OWORD *)(a1 + 48) = v12;
    goto LABEL_35;
  }
  if (v4 == 1)
  {
    if (v5 == 1)
    {
      v15 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v15;
    }
    else
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
      *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  else if (v5 == 1)
  {
    sub_1CA2B9AB8(a1);
    v17 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v17;
  }
  else
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  v19 = (_OWORD *)(a1 + 32);
  v20 = (_OWORD *)(a2 + 32);
  v21 = *(_QWORD *)(a2 + 40);
  if (*(_QWORD *)(a1 + 40) == 1)
  {
    if (v21 == 1)
    {
      v22 = *(_OWORD *)(a2 + 48);
      *v19 = *v20;
      *(_OWORD *)(a1 + 48) = v22;
    }
    else
    {
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
      *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  else if (v21 == 1)
  {
    sub_1CA2B9AB8(a1 + 32);
    v23 = *(_OWORD *)(a2 + 48);
    *v19 = *v20;
    *(_OWORD *)(a1 + 48) = v23;
  }
  else
  {
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  v24 = (_OWORD *)(a1 + 64);
  v25 = (_OWORD *)(a2 + 64);
  v26 = *(_QWORD *)(a2 + 72);
  if (*(_QWORD *)(a1 + 72) == 1)
  {
    if (v26 == 1)
    {
      v27 = *(_OWORD *)(a2 + 80);
      *v24 = *v25;
      *(_OWORD *)(a1 + 80) = v27;
      goto LABEL_35;
    }
    goto LABEL_31;
  }
  if (v26 == 1)
  {
    sub_1CA2B9AB8(a1 + 64);
    v28 = *(_OWORD *)(a2 + 80);
    *v24 = *v25;
    *(_OWORD *)(a1 + 80) = v28;
  }
  else
  {
    *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
    *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
LABEL_35:
  v29 = *(_OWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 110) = *(_QWORD *)(a2 + 110);
  *(_OWORD *)(a1 + 96) = v29;
  v30 = *(_OWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 134) = *(_QWORD *)(a2 + 134);
  *(_OWORD *)(a1 + 120) = v30;
  v31 = *(_OWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 158) = *(_QWORD *)(a2 + 158);
  *(_OWORD *)(a1 + 144) = v31;
  v32 = *(_OWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 182) = *(_QWORD *)(a2 + 182);
  *(_OWORD *)(a1 + 168) = v32;
  v34 = *(_OWORD *)(a2 + 224);
  v33 = *(_OWORD *)(a2 + 240);
  v35 = *(_OWORD *)(a2 + 208);
  *(_QWORD *)(a1 + 255) = *(_QWORD *)(a2 + 255);
  *(_OWORD *)(a1 + 224) = v34;
  *(_OWORD *)(a1 + 240) = v33;
  *(_OWORD *)(a1 + 208) = v35;
  *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
  v36 = *(_OWORD *)(a2 + 264);
  *(_QWORD *)(a1 + 278) = *(_QWORD *)(a2 + 278);
  *(_OWORD *)(a1 + 264) = v36;
  v37 = *(_QWORD *)(a2 + 288);
  if (*(_QWORD *)(a1 + 288) != 1)
  {
    if (v37 != 1)
    {
      *(_QWORD *)(a1 + 288) = v37;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 296) = *(_QWORD *)(a2 + 296);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_42;
    }
    sub_1CA2BB664(a1 + 288);
    goto LABEL_40;
  }
  if (v37 == 1)
  {
LABEL_40:
    *(_OWORD *)(a1 + 288) = *(_OWORD *)(a2 + 288);
    goto LABEL_42;
  }
  *(_QWORD *)(a1 + 288) = v37;
  *(_QWORD *)(a1 + 296) = *(_QWORD *)(a2 + 296);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
LABEL_42:
  v38 = *(_OWORD *)(a2 + 304);
  v39 = *(_OWORD *)(a2 + 320);
  v40 = *(_OWORD *)(a2 + 336);
  *(_WORD *)(a1 + 352) = *(_WORD *)(a2 + 352);
  *(_OWORD *)(a1 + 320) = v39;
  *(_OWORD *)(a1 + 336) = v40;
  *(_OWORD *)(a1 + 304) = v38;
  return a1;
}

uint64_t assignWithTake for MusicKitCatalogSong.Relationships.AudioAnalysisRelationship.AudioAnalysisData.AudioAnalysisAttributes(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  __int128 v23;

  v4 = *(_QWORD *)(a1 + 8);
  if (v4 == 2)
    goto LABEL_4;
  v5 = *(_QWORD *)(a2 + 8);
  if (v5 == 2)
  {
    sub_1CA2B9AE8((_QWORD *)a1);
LABEL_4:
    v6 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v6;
    v7 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v7;
    v8 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v8;
    goto LABEL_20;
  }
  if (v4 == 1)
    goto LABEL_8;
  if (v5 == 1)
  {
    sub_1CA2B9AB8(a1);
LABEL_8:
    v9 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v9;
    goto LABEL_10;
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v5;
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v10;
  swift_bridgeObjectRelease();
LABEL_10:
  if (*(_QWORD *)(a1 + 40) == 1)
  {
LABEL_13:
    v12 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v12;
    goto LABEL_15;
  }
  v11 = *(_QWORD *)(a2 + 40);
  if (v11 == 1)
  {
    sub_1CA2B9AB8(a1 + 32);
    goto LABEL_13;
  }
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v11;
  swift_bridgeObjectRelease();
  v13 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v13;
  swift_bridgeObjectRelease();
LABEL_15:
  if (*(_QWORD *)(a1 + 72) == 1)
  {
LABEL_18:
    v15 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v15;
    goto LABEL_20;
  }
  v14 = *(_QWORD *)(a2 + 72);
  if (v14 == 1)
  {
    sub_1CA2B9AB8(a1 + 64);
    goto LABEL_18;
  }
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v14;
  swift_bridgeObjectRelease();
  v16 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v16;
  swift_bridgeObjectRelease();
LABEL_20:
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 110) = *(_QWORD *)(a2 + 110);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 134) = *(_QWORD *)(a2 + 134);
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 158) = *(_QWORD *)(a2 + 158);
  *(_QWORD *)(a1 + 182) = *(_QWORD *)(a2 + 182);
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  v17 = *(_OWORD *)(a2 + 192);
  v18 = *(_OWORD *)(a2 + 208);
  v19 = *(_OWORD *)(a2 + 224);
  v20 = *(_OWORD *)(a2 + 240);
  *(_QWORD *)(a1 + 255) = *(_QWORD *)(a2 + 255);
  *(_OWORD *)(a1 + 224) = v19;
  *(_OWORD *)(a1 + 240) = v20;
  *(_OWORD *)(a1 + 192) = v17;
  *(_OWORD *)(a1 + 208) = v18;
  v21 = *(_OWORD *)(a2 + 264);
  *(_QWORD *)(a1 + 278) = *(_QWORD *)(a2 + 278);
  *(_OWORD *)(a1 + 264) = v21;
  if (*(_QWORD *)(a1 + 288) != 1)
  {
    v22 = *(_QWORD *)(a2 + 288);
    if (v22 != 1)
    {
      *(_QWORD *)(a1 + 288) = v22;
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 296) = *(_QWORD *)(a2 + 296);
      swift_bridgeObjectRelease();
      goto LABEL_25;
    }
    sub_1CA2BB664(a1 + 288);
  }
  *(_OWORD *)(a1 + 288) = *(_OWORD *)(a2 + 288);
LABEL_25:
  v23 = *(_OWORD *)(a2 + 320);
  *(_OWORD *)(a1 + 304) = *(_OWORD *)(a2 + 304);
  *(_OWORD *)(a1 + 320) = v23;
  *(_OWORD *)(a1 + 336) = *(_OWORD *)(a2 + 336);
  *(_WORD *)(a1 + 352) = *(_WORD *)(a2 + 352);
  return a1;
}

uint64_t getEnumTagSinglePayload for MusicKitCatalogSong.Relationships.AudioAnalysisRelationship.AudioAnalysisData.AudioAnalysisAttributes(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;
  BOOL v5;
  int v6;

  if (!a2)
    return 0;
  if (a2 > 0x7FFFFFFD && *(_BYTE *)(a1 + 354))
    return (*(_DWORD *)a1 + 2147483646);
  v3 = *(_QWORD *)(a1 + 288);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  v5 = __OFSUB__(v4, 1);
  v6 = v4 - 1;
  if (v6 < 0 != v5)
    v6 = -1;
  return (v6 + 1);
}

uint64_t storeEnumTagSinglePayload for MusicKitCatalogSong.Relationships.AudioAnalysisRelationship.AudioAnalysisData.AudioAnalysisAttributes(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(_QWORD *)(result + 344) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_WORD *)(result + 352) = 0;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(_QWORD *)result = a2 - 2147483646;
    if (a3 > 0x7FFFFFFD)
      *(_BYTE *)(result + 354) = 1;
  }
  else
  {
    if (a3 > 0x7FFFFFFD)
      *(_BYTE *)(result + 354) = 0;
    if (a2)
      *(_QWORD *)(result + 288) = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for MusicKitCatalogSong.Relationships.AudioAnalysisRelationship.AudioAnalysisData.AudioAnalysisAttributes()
{
  return &type metadata for MusicKitCatalogSong.Relationships.AudioAnalysisRelationship.AudioAnalysisData.AudioAnalysisAttributes;
}

uint64_t destroy for MusicKitCatalogSong.Relationships.AudioAnalysisRelationship.AudioAnalysisData.AudioAnalysisAttributes.AudioAnalysisKey(_QWORD *a1)
{
  uint64_t result;

  if (a1[1] != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (a1[5] != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  result = a1[9];
  if (result != 1)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for MusicKitCatalogSong.Relationships.AudioAnalysisRelationship.AudioAnalysisData.AudioAnalysisAttributes.AudioAnalysisKey(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;

  v4 = *(_QWORD *)(a2 + 8);
  if (v4 == 1)
  {
    v5 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v5;
  }
  else
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v4;
    v6 = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 24) = v6;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  v7 = *(_QWORD *)(a2 + 40);
  if (v7 == 1)
  {
    v8 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v8;
  }
  else
  {
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 40) = v7;
    v9 = *(_QWORD *)(a2 + 56);
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 56) = v9;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  v10 = *(_QWORD *)(a2 + 72);
  if (v10 == 1)
  {
    v11 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v11;
  }
  else
  {
    *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 72) = v10;
    v12 = *(_QWORD *)(a2 + 80);
    v13 = *(_QWORD *)(a2 + 88);
    *(_QWORD *)(a1 + 80) = v12;
    *(_QWORD *)(a1 + 88) = v13;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t assignWithCopy for MusicKitCatalogSong.Relationships.AudioAnalysisRelationship.AudioAnalysisData.AudioAnalysisAttributes.AudioAnalysisKey(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  _OWORD *v7;
  _OWORD *v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  _OWORD *v12;
  _OWORD *v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;

  v4 = *(_QWORD *)(a2 + 8);
  if (*(_QWORD *)(a1 + 8) == 1)
  {
    if (v4 == 1)
    {
      v5 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v5;
    }
    else
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
      *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  else if (v4 == 1)
  {
    sub_1CA2B9AB8(a1);
    v6 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v6;
  }
  else
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  v7 = (_OWORD *)(a1 + 32);
  v8 = (_OWORD *)(a2 + 32);
  v9 = *(_QWORD *)(a2 + 40);
  if (*(_QWORD *)(a1 + 40) == 1)
  {
    if (v9 == 1)
    {
      v10 = *(_OWORD *)(a2 + 48);
      *v7 = *v8;
      *(_OWORD *)(a1 + 48) = v10;
    }
    else
    {
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
      *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  else if (v9 == 1)
  {
    sub_1CA2B9AB8(a1 + 32);
    v11 = *(_OWORD *)(a2 + 48);
    *v7 = *v8;
    *(_OWORD *)(a1 + 48) = v11;
  }
  else
  {
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  v12 = (_OWORD *)(a1 + 64);
  v13 = (_OWORD *)(a2 + 64);
  v14 = *(_QWORD *)(a2 + 72);
  if (*(_QWORD *)(a1 + 72) == 1)
  {
    if (v14 == 1)
    {
      v15 = *(_OWORD *)(a2 + 80);
      *v12 = *v13;
      *(_OWORD *)(a1 + 80) = v15;
    }
    else
    {
      *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
      *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
      *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
      *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  else if (v14 == 1)
  {
    sub_1CA2B9AB8(a1 + 64);
    v16 = *(_OWORD *)(a2 + 80);
    *v12 = *v13;
    *(_OWORD *)(a1 + 80) = v16;
  }
  else
  {
    *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
    *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  return a1;
}

uint64_t assignWithTake for MusicKitCatalogSong.Relationships.AudioAnalysisRelationship.AudioAnalysisData.AudioAnalysisAttributes.AudioAnalysisKey(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;

  if (*(_QWORD *)(a1 + 8) == 1)
    goto LABEL_4;
  v4 = *(_QWORD *)(a2 + 8);
  if (v4 == 1)
  {
    sub_1CA2B9AB8(a1);
LABEL_4:
    v5 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v5;
    goto LABEL_6;
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  swift_bridgeObjectRelease();
LABEL_6:
  if (*(_QWORD *)(a1 + 40) == 1)
  {
LABEL_9:
    v8 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v8;
    goto LABEL_11;
  }
  v7 = *(_QWORD *)(a2 + 40);
  if (v7 == 1)
  {
    sub_1CA2B9AB8(a1 + 32);
    goto LABEL_9;
  }
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v7;
  swift_bridgeObjectRelease();
  v9 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v9;
  swift_bridgeObjectRelease();
LABEL_11:
  if (*(_QWORD *)(a1 + 72) != 1)
  {
    v10 = *(_QWORD *)(a2 + 72);
    if (v10 != 1)
    {
      *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
      *(_QWORD *)(a1 + 72) = v10;
      swift_bridgeObjectRelease();
      v12 = *(_QWORD *)(a2 + 88);
      *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
      *(_QWORD *)(a1 + 88) = v12;
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_1CA2B9AB8(a1 + 64);
  }
  v11 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v11;
  return a1;
}

uint64_t getEnumTagSinglePayload for MusicKitCatalogSong.Relationships.AudioAnalysisRelationship.AudioAnalysisData.AudioAnalysisAttributes.AudioAnalysisKey(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;
  BOOL v5;
  int v6;

  if (!a2)
    return 0;
  if (a2 > 0x7FFFFFFD && *(_BYTE *)(a1 + 96))
    return (*(_DWORD *)a1 + 2147483646);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  v5 = __OFSUB__(v4, 1);
  v6 = v4 - 1;
  if (v6 < 0 != v5)
    v6 = -1;
  return (v6 + 1);
}

uint64_t storeEnumTagSinglePayload for MusicKitCatalogSong.Relationships.AudioAnalysisRelationship.AudioAnalysisData.AudioAnalysisAttributes.AudioAnalysisKey(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(_QWORD *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 2147483646;
    if (a3 > 0x7FFFFFFD)
      *(_BYTE *)(result + 96) = 1;
  }
  else
  {
    if (a3 > 0x7FFFFFFD)
      *(_BYTE *)(result + 96) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for MusicKitCatalogSong.Relationships.AudioAnalysisRelationship.AudioAnalysisData.AudioAnalysisAttributes.AudioAnalysisKey()
{
  return &type metadata for MusicKitCatalogSong.Relationships.AudioAnalysisRelationship.AudioAnalysisData.AudioAnalysisAttributes.AudioAnalysisKey;
}

_QWORD *initializeWithCopy for PublicEventPerformer(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for PublicEventPerformer(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for PublicEventPerformer(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for MusicKitCatalogSong.Relationships.AudioAnalysisRelationship.AudioAnalysisData.AudioAnalysisAttributes.AudioAnalysisKey.AudioAnalysisKeyAttributes(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 32))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for MusicKitCatalogSong.Relationships.AudioAnalysisRelationship.AudioAnalysisData.AudioAnalysisAttributes.AudioAnalysisKey.AudioAnalysisKeyAttributes(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 32) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for MusicKitCatalogSong.Relationships.AudioAnalysisRelationship.AudioAnalysisData.AudioAnalysisAttributes.AudioAnalysisKey.AudioAnalysisKeyAttributes()
{
  return &type metadata for MusicKitCatalogSong.Relationships.AudioAnalysisRelationship.AudioAnalysisData.AudioAnalysisAttributes.AudioAnalysisKey.AudioAnalysisKeyAttributes;
}

__n128 __swift_memcpy21_4(uint64_t a1, uint64_t a2)
{
  __n128 result;

  result = *(__n128 *)a2;
  *(_QWORD *)(a1 + 13) = *(_QWORD *)(a2 + 13);
  *(__n128 *)a1 = result;
  return result;
}

ValueMetadata *type metadata accessor for MusicKitCatalogSong.Relationships.AudioAnalysisRelationship.AudioAnalysisData.AudioAnalysisAttributes.AudioAnalysisSavoyAttributes()
{
  return &type metadata for MusicKitCatalogSong.Relationships.AudioAnalysisRelationship.AudioAnalysisData.AudioAnalysisAttributes.AudioAnalysisSavoyAttributes;
}

__n128 __swift_memcpy70_4(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 62) = *(_QWORD *)(a2 + 62);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t getEnumTagSinglePayload for MusicKitCatalogSong.Relationships.AudioAnalysisRelationship.AudioAnalysisData.AudioAnalysisAttributes.AudioAnalysisTimeSeriesAttributes(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 70))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for MusicKitCatalogSong.Relationships.AudioAnalysisRelationship.AudioAnalysisData.AudioAnalysisAttributes.AudioAnalysisTimeSeriesAttributes(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 68) = 0;
    *(_DWORD *)(result + 64) = 0;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 70) = v3;
  return result;
}

ValueMetadata *type metadata accessor for MusicKitCatalogSong.Relationships.AudioAnalysisRelationship.AudioAnalysisData.AudioAnalysisAttributes.AudioAnalysisTimeSeriesAttributes()
{
  return &type metadata for MusicKitCatalogSong.Relationships.AudioAnalysisRelationship.AudioAnalysisData.AudioAnalysisAttributes.AudioAnalysisTimeSeriesAttributes;
}

uint64_t getEnumTagSinglePayload for MusicKitCatalogSong.Relationships.AudioAnalysisRelationship.AudioAnalysisData.AudioAnalysisAttributes.AudioAnalysisTimeSeriesAttributes.AveragedTimeSeriesAttributes(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 21))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for MusicKitCatalogSong.Relationships.AudioAnalysisRelationship.AudioAnalysisData.AudioAnalysisAttributes.AudioAnalysisTimeSeriesAttributes.AveragedTimeSeriesAttributes(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_BYTE *)(result + 20) = 0;
    *(_DWORD *)(result + 16) = 0;
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 21) = v3;
  return result;
}

ValueMetadata *type metadata accessor for MusicKitCatalogSong.Relationships.AudioAnalysisRelationship.AudioAnalysisData.AudioAnalysisAttributes.AudioAnalysisTimeSeriesAttributes.AveragedTimeSeriesAttributes()
{
  return &type metadata for MusicKitCatalogSong.Relationships.AudioAnalysisRelationship.AudioAnalysisData.AudioAnalysisAttributes.AudioAnalysisTimeSeriesAttributes.AveragedTimeSeriesAttributes;
}

_QWORD *assignWithCopy for MusicKitCatalogSong.Relationships.AudioAnalysisRelationship.AudioAnalysisData.AudioAnalysisAttributes.AudioAnalysisBeats(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for MusicKitCatalogSong.Relationships.AudioAnalysisRelationship.AudioAnalysisData.AudioAnalysisAttributes.AudioAnalysisBeats(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 16))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for MusicKitCatalogSong.Relationships.AudioAnalysisRelationship.AudioAnalysisData.AudioAnalysisAttributes.AudioAnalysisBeats(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for MusicKitCatalogSong.Relationships.AudioAnalysisRelationship.AudioAnalysisData.AudioAnalysisAttributes.AudioAnalysisBeats()
{
  return &type metadata for MusicKitCatalogSong.Relationships.AudioAnalysisRelationship.AudioAnalysisData.AudioAnalysisAttributes.AudioAnalysisBeats;
}

uint64_t getEnumTagSinglePayload for MusicKitCatalogSong.Relationships.AudioAnalysisRelationship.AudioAnalysisData.AudioAnalysisAttributes.AudioAnalysisBPM(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 49))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for MusicKitCatalogSong.Relationships.AudioAnalysisRelationship.AudioAnalysisData.AudioAnalysisAttributes.AudioAnalysisBPM(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 48) = 0;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 49) = v3;
  return result;
}

ValueMetadata *type metadata accessor for MusicKitCatalogSong.Relationships.AudioAnalysisRelationship.AudioAnalysisData.AudioAnalysisAttributes.AudioAnalysisBPM()
{
  return &type metadata for MusicKitCatalogSong.Relationships.AudioAnalysisRelationship.AudioAnalysisData.AudioAnalysisAttributes.AudioAnalysisBPM;
}

ValueMetadata *type metadata accessor for MusicKitCatalogSong.Relationships.FlexMLAnalysisRelationship()
{
  return &type metadata for MusicKitCatalogSong.Relationships.FlexMLAnalysisRelationship;
}

uint64_t destroy for MusicKitCatalogSong.Relationships.FlexMLAnalysisRelationship.FlexMLAnalysisData(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    result = a1[8];
    if (result)
    {
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t initializeWithCopy for MusicKitCatalogSong.Relationships.FlexMLAnalysisRelationship.FlexMLAnalysisData(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;
  uint64_t v6;
  _OWORD *v7;
  uint64_t v8;
  uint64_t v9;

  if (*(_QWORD *)a2 == 1)
  {
    v4 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v4;
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    v5 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v5;
  }
  else
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
    *(_BYTE *)(a1 + 12) = *(_BYTE *)(a2 + 12);
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
    *(_BYTE *)(a1 + 28) = *(_BYTE *)(a2 + 28);
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    *(_BYTE *)(a1 + 44) = *(_BYTE *)(a2 + 44);
    *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
    v7 = (_OWORD *)(a2 + 64);
    v6 = *(_QWORD *)(a2 + 64);
    v8 = *(_QWORD *)(a2 + 56);
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 56) = v8;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v6)
    {
      v9 = *(_QWORD *)(a2 + 72);
      *(_QWORD *)(a1 + 64) = v6;
      *(_QWORD *)(a1 + 72) = v9;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)(a1 + 64) = *v7;
    }
  }
  return a1;
}

uint64_t assignWithCopy for MusicKitCatalogSong.Relationships.FlexMLAnalysisRelationship.FlexMLAnalysisData(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  int v12;
  int v13;
  int v14;
  uint64_t v15;
  _OWORD *v16;
  int v17;
  int v18;
  int v19;
  uint64_t v20;

  v4 = *(_QWORD *)a1;
  v5 = *a2;
  if (v4 != 1)
  {
    if (v5 == 1)
    {
      sub_1CA2BB694(a1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      v9 = *((_OWORD *)a2 + 4);
      v11 = *((_OWORD *)a2 + 1);
      v10 = *((_OWORD *)a2 + 2);
      *(_OWORD *)(a1 + 48) = *((_OWORD *)a2 + 3);
      *(_OWORD *)(a1 + 64) = v9;
      *(_OWORD *)(a1 + 16) = v11;
      *(_OWORD *)(a1 + 32) = v10;
      return a1;
    }
    *(_QWORD *)a1 = v5;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v17 = *((_DWORD *)a2 + 2);
    *(_BYTE *)(a1 + 12) = *((_BYTE *)a2 + 12);
    *(_DWORD *)(a1 + 8) = v17;
    *(_QWORD *)(a1 + 16) = a2[2];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v18 = *((_DWORD *)a2 + 6);
    *(_BYTE *)(a1 + 28) = *((_BYTE *)a2 + 28);
    *(_DWORD *)(a1 + 24) = v18;
    *(_QWORD *)(a1 + 32) = a2[4];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v19 = *((_DWORD *)a2 + 10);
    *(_BYTE *)(a1 + 44) = *((_BYTE *)a2 + 44);
    *(_DWORD *)(a1 + 40) = v19;
    *(_QWORD *)(a1 + 48) = a2[6];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 56) = a2[7];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v20 = a2[8];
    if (*(_QWORD *)(a1 + 64))
    {
      if (v20)
      {
        *(_QWORD *)(a1 + 64) = v20;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *(_QWORD *)(a1 + 72) = a2[9];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        return a1;
      }
      sub_1CA2BB664(a1 + 64);
    }
    else if (v20)
    {
      *(_QWORD *)(a1 + 64) = v20;
      *(_QWORD *)(a1 + 72) = a2[9];
      goto LABEL_14;
    }
    *(_OWORD *)(a1 + 64) = *((_OWORD *)a2 + 4);
    return a1;
  }
  if (v5 != 1)
  {
    *(_QWORD *)a1 = v5;
    v12 = *((_DWORD *)a2 + 2);
    *(_BYTE *)(a1 + 12) = *((_BYTE *)a2 + 12);
    *(_DWORD *)(a1 + 8) = v12;
    *(_QWORD *)(a1 + 16) = a2[2];
    v13 = *((_DWORD *)a2 + 6);
    *(_BYTE *)(a1 + 28) = *((_BYTE *)a2 + 28);
    *(_DWORD *)(a1 + 24) = v13;
    *(_QWORD *)(a1 + 32) = a2[4];
    v14 = *((_DWORD *)a2 + 10);
    *(_BYTE *)(a1 + 44) = *((_BYTE *)a2 + 44);
    *(_DWORD *)(a1 + 40) = v14;
    *(_QWORD *)(a1 + 48) = a2[6];
    *(_QWORD *)(a1 + 56) = a2[7];
    v16 = a2 + 8;
    v15 = a2[8];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (!v15)
    {
      *(_OWORD *)(a1 + 64) = *v16;
      return a1;
    }
    *(_QWORD *)(a1 + 64) = v15;
    *(_QWORD *)(a1 + 72) = a2[9];
LABEL_14:
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return a1;
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *((_OWORD *)a2 + 1);
  v7 = *((_OWORD *)a2 + 2);
  v8 = *((_OWORD *)a2 + 4);
  *(_OWORD *)(a1 + 48) = *((_OWORD *)a2 + 3);
  *(_OWORD *)(a1 + 64) = v8;
  *(_OWORD *)(a1 + 16) = v6;
  *(_OWORD *)(a1 + 32) = v7;
  return a1;
}

uint64_t sub_1CA2BB664(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1CA2BB694(uint64_t a1)
{
  destroy for MusicKitCatalogSong.Relationships.FlexMLAnalysisRelationship.FlexMLAnalysisData.FlexMLAnalysisAttributes(a1);
  return a1;
}

uint64_t assignWithTake for MusicKitCatalogSong.Relationships.FlexMLAnalysisRelationship.FlexMLAnalysisData(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;
  uint64_t v7;

  if (*(_QWORD *)a1 != 1)
  {
    if (*(_QWORD *)a2 != 1)
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
      *(_BYTE *)(a1 + 12) = *(_BYTE *)(a2 + 12);
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
      *(_BYTE *)(a1 + 28) = *(_BYTE *)(a2 + 28);
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
      *(_BYTE *)(a1 + 44) = *(_BYTE *)(a2 + 44);
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
      swift_bridgeObjectRelease();
      v7 = *(_QWORD *)(a2 + 64);
      if (*(_QWORD *)(a1 + 64))
      {
        if (v7)
        {
          *(_QWORD *)(a1 + 64) = v7;
          swift_bridgeObjectRelease();
          *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
          swift_bridgeObjectRelease();
          return a1;
        }
        sub_1CA2BB664(a1 + 64);
      }
      *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
      return a1;
    }
    sub_1CA2BB694(a1);
  }
  v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  v5 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v5;
  return a1;
}

uint64_t getEnumTagSinglePayload for MusicKitCatalogSong.Relationships.FlexMLAnalysisRelationship.FlexMLAnalysisData(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  int v4;
  BOOL v5;
  int v6;

  if (!a2)
    return 0;
  if (a2 > 0x7FFFFFFD && *((_BYTE *)a1 + 80))
    return (*(_DWORD *)a1 + 2147483646);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  v5 = __OFSUB__(v4, 1);
  v6 = v4 - 1;
  if (v6 < 0 != v5)
    v6 = -1;
  return (v6 + 1);
}

uint64_t storeEnumTagSinglePayload for MusicKitCatalogSong.Relationships.FlexMLAnalysisRelationship.FlexMLAnalysisData(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 2147483646;
    if (a3 > 0x7FFFFFFD)
      *(_BYTE *)(result + 80) = 1;
  }
  else
  {
    if (a3 > 0x7FFFFFFD)
      *(_BYTE *)(result + 80) = 0;
    if (a2)
      *(_QWORD *)result = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for MusicKitCatalogSong.Relationships.FlexMLAnalysisRelationship.FlexMLAnalysisData()
{
  return &type metadata for MusicKitCatalogSong.Relationships.FlexMLAnalysisRelationship.FlexMLAnalysisData;
}

uint64_t destroy for MusicKitCatalogSong.Relationships.FlexMLAnalysisRelationship.FlexMLAnalysisData.FlexMLAnalysisAttributes(uint64_t a1)
{
  uint64_t result;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = *(_QWORD *)(a1 + 64);
  if (result)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for MusicKitCatalogSong.Relationships.FlexMLAnalysisRelationship.FlexMLAnalysisData.FlexMLAnalysisAttributes(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _OWORD *v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 12) = *(_BYTE *)(a2 + 12);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 28) = *(_BYTE *)(a2 + 28);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 44) = *(_BYTE *)(a2 + 44);
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  v5 = (_OWORD *)(a2 + 64);
  v4 = *(_QWORD *)(a2 + 64);
  v6 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v4)
  {
    v7 = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 64) = v4;
    *(_QWORD *)(a1 + 72) = v7;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)(a1 + 64) = *v5;
  }
  return a1;
}

uint64_t assignWithCopy for MusicKitCatalogSong.Relationships.FlexMLAnalysisRelationship.FlexMLAnalysisData.FlexMLAnalysisAttributes(uint64_t a1, uint64_t a2)
{
  int v4;
  int v5;
  int v6;
  uint64_t v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_DWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 12) = *(_BYTE *)(a2 + 12);
  *(_DWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v5 = *(_DWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 28) = *(_BYTE *)(a2 + 28);
  *(_DWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(_DWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 44) = *(_BYTE *)(a2 + 44);
  *(_DWORD *)(a1 + 40) = v6;
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 64);
  if (!*(_QWORD *)(a1 + 64))
  {
    if (v7)
    {
      *(_QWORD *)(a1 + 64) = v7;
      *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    return a1;
  }
  if (!v7)
  {
    sub_1CA2BB664(a1 + 64);
    goto LABEL_7;
  }
  *(_QWORD *)(a1 + 64) = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for MusicKitCatalogSong.Relationships.FlexMLAnalysisRelationship.FlexMLAnalysisData.FlexMLAnalysisAttributes(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 12) = *(_BYTE *)(a2 + 12);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 28) = *(_BYTE *)(a2 + 28);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 44) = *(_BYTE *)(a2 + 44);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 64);
  if (!*(_QWORD *)(a1 + 64))
    goto LABEL_5;
  if (!v4)
  {
    sub_1CA2BB664(a1 + 64);
LABEL_5:
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    return a1;
  }
  *(_QWORD *)(a1 + 64) = v4;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for MusicKitCatalogSong.Relationships.FlexMLAnalysisRelationship.FlexMLAnalysisData.FlexMLAnalysisAttributes(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 80))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for MusicKitCatalogSong.Relationships.FlexMLAnalysisRelationship.FlexMLAnalysisData.FlexMLAnalysisAttributes(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 80) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 80) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for MusicKitCatalogSong.Relationships.FlexMLAnalysisRelationship.FlexMLAnalysisData.FlexMLAnalysisAttributes()
{
  return &type metadata for MusicKitCatalogSong.Relationships.FlexMLAnalysisRelationship.FlexMLAnalysisData.FlexMLAnalysisAttributes;
}

ValueMetadata *type metadata accessor for MusicKitCatalogSong.Relationships.FlexMLAnalysisRelationship.FlexMLAnalysisData.FlexMLAnalysisAttributes.Valence()
{
  return &type metadata for MusicKitCatalogSong.Relationships.FlexMLAnalysisRelationship.FlexMLAnalysisData.FlexMLAnalysisAttributes.Valence;
}

ValueMetadata *type metadata accessor for MusicKitCatalogSong.Relationships.FlexMLAnalysisRelationship.FlexMLAnalysisData.FlexMLAnalysisAttributes.Arousal()
{
  return &type metadata for MusicKitCatalogSong.Relationships.FlexMLAnalysisRelationship.FlexMLAnalysisData.FlexMLAnalysisAttributes.Arousal;
}

uint64_t initializeBufferWithCopyOfBuffer for MusicKitCatalogSong.Relationships.FlexMLAnalysisRelationship.FlexMLAnalysisData.FlexMLAnalysisAttributes.VisualTempo(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 12) = *(_BYTE *)(a2 + 12);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for FlexMLAnalysis.VisualTempo(uint64_t a1, uint64_t a2)
{
  int v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_DWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 12) = *(_BYTE *)(a2 + 12);
  *(_DWORD *)(a1 + 8) = v4;
  return a1;
}

uint64_t assignWithTake for MusicKitCatalogSong.Relationships.FlexMLAnalysisRelationship.FlexMLAnalysisData.FlexMLAnalysisAttributes.VisualTempo(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 12) = *(_BYTE *)(a2 + 12);
  return a1;
}

uint64_t getEnumTagSinglePayload for FlexMLAnalysis.VisualTempo(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 13))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FlexMLAnalysis.VisualTempo(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_BYTE *)(result + 12) = 0;
    *(_DWORD *)(result + 8) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 13) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 13) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for MusicKitCatalogSong.Relationships.FlexMLAnalysisRelationship.FlexMLAnalysisData.FlexMLAnalysisAttributes.VisualTempo()
{
  return &type metadata for MusicKitCatalogSong.Relationships.FlexMLAnalysisRelationship.FlexMLAnalysisData.FlexMLAnalysisAttributes.VisualTempo;
}

uint64_t destroy for PublicEventPerformer()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for MusicKitCatalogSong.Relationships.FlexMLAnalysisRelationship.FlexMLAnalysisData.FlexMLAnalysisAttributes.ExitPoint(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for MusicKitCatalogSong.Relationships.FlexMLAnalysisRelationship.FlexMLAnalysisData.FlexMLAnalysisAttributes.ExitPoint(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for MusicKitCatalogSong.Relationships.FlexMLAnalysisRelationship.FlexMLAnalysisData.FlexMLAnalysisAttributes.ExitPoint(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for PublicEventPerformer(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PublicEventPerformer(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for MusicKitCatalogSong.Relationships.FlexMLAnalysisRelationship.FlexMLAnalysisData.FlexMLAnalysisAttributes.ExitPoint()
{
  return &type metadata for MusicKitCatalogSong.Relationships.FlexMLAnalysisRelationship.FlexMLAnalysisData.FlexMLAnalysisAttributes.ExitPoint;
}

uint64_t destroy for MusicKitCatalogSong.Relationships.FlexMLAnalysisRelationship.FlexMLAnalysisData.FlexMLAnalysisAttributes.EntryPoint()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t _s11PhotosGraph19MusicKitCatalogSongV13RelationshipsV26FlexMLAnalysisRelationshipV18FlexMLAnalysisDataV24FlexMLAnalysisAttributesV10EntryPointVwCP_0(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for MusicKitCatalogSong.Relationships.FlexMLAnalysisRelationship.FlexMLAnalysisData.FlexMLAnalysisAttributes.EntryPoint(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for MusicKitCatalogSong.Relationships.FlexMLAnalysisRelationship.FlexMLAnalysisData.FlexMLAnalysisAttributes.EntryPoint(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for MusicKitCatalogSong.Relationships.FlexMLAnalysisRelationship.FlexMLAnalysisData.FlexMLAnalysisAttributes.EntryPoint(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 24))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MusicKitCatalogSong.Relationships.FlexMLAnalysisRelationship.FlexMLAnalysisData.FlexMLAnalysisAttributes.EntryPoint(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for MusicKitCatalogSong.Relationships.FlexMLAnalysisRelationship.FlexMLAnalysisData.FlexMLAnalysisAttributes.EntryPoint()
{
  return &type metadata for MusicKitCatalogSong.Relationships.FlexMLAnalysisRelationship.FlexMLAnalysisData.FlexMLAnalysisAttributes.EntryPoint;
}

_QWORD *assignWithCopy for MusicKitCatalogSong.Relationships.FlexMLAnalysisRelationship.FlexMLAnalysisData.FlexMLAnalysisAttributes.VideoEvents(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for MusicKitCatalogSong.Relationships.FlexMLAnalysisRelationship.FlexMLAnalysisData.FlexMLAnalysisAttributes.VideoEvents()
{
  return &type metadata for MusicKitCatalogSong.Relationships.FlexMLAnalysisRelationship.FlexMLAnalysisData.FlexMLAnalysisAttributes.VideoEvents;
}

ValueMetadata *type metadata accessor for MusicKitCatalogSong.Relationships.EquivalentsData()
{
  return &type metadata for MusicKitCatalogSong.Relationships.EquivalentsData;
}

_QWORD *initializeBufferWithCopyOfBuffer for MusicKitCatalogSong.MusicKitTesseractMetadata(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for MusicBagContents()
{
  return swift_bridgeObjectRelease();
}

_QWORD *assignWithCopy for MusicKitCatalogSong.MusicKitTesseractMetadata(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for MusicKitCatalogSong.MusicKitTesseractMetadata(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for MaestroKeywordScoreComputer(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 8))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for MaestroKeywordScoreComputer(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for MusicKitCatalogSong.MusicKitTesseractMetadata()
{
  return &type metadata for MusicKitCatalogSong.MusicKitTesseractMetadata;
}

uint64_t destroy for MusicKitCatalogSong.MusicKitTesseractMetadata.MusicKitTesseractDailyDetails()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for MusicKitCatalogSong.MusicKitTesseractMetadata.MusicKitTesseractDailyDetails(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  v4 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v4;
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for MusicKitCatalogSong.MusicKitTesseractMetadata.MusicKitTesseractDailyDetails(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  return a1;
}

uint64_t assignWithTake for MusicKitCatalogSong.MusicKitTesseractMetadata.MusicKitTesseractDailyDetails(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  return a1;
}

uint64_t getEnumTagSinglePayload for MusicKitCatalogSong.MusicKitTesseractMetadata.MusicKitTesseractDailyDetails(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 73))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MusicKitCatalogSong.MusicKitTesseractMetadata.MusicKitTesseractDailyDetails(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 72) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 73) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 73) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for MusicKitCatalogSong.MusicKitTesseractMetadata.MusicKitTesseractDailyDetails()
{
  return &type metadata for MusicKitCatalogSong.MusicKitTesseractMetadata.MusicKitTesseractDailyDetails;
}

ValueMetadata *type metadata accessor for MusicKitCatalogSong.CodingKeys()
{
  return &type metadata for MusicKitCatalogSong.CodingKeys;
}

ValueMetadata *type metadata accessor for MusicKitCatalogSong.MusicKitTesseractMetadata.CodingKeys()
{
  return &type metadata for MusicKitCatalogSong.MusicKitTesseractMetadata.CodingKeys;
}

uint64_t getEnumTagSinglePayload for MusicKitCatalogSong.MusicKitTesseractMetadata.MusicKitTesseractDailyDetails.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF9)
    goto LABEL_17;
  if (a2 + 7 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 7) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 7;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 7;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 7;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 8;
  v8 = v6 - 8;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for MusicKitCatalogSong.MusicKitTesseractMetadata.MusicKitTesseractDailyDetails.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_1CA2BC79C + 4 * byte_1CA8D674C[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_1CA2BC7D0 + 4 * byte_1CA8D6747[v4]))();
}

uint64_t sub_1CA2BC7D0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CA2BC7D8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1CA2BC7E0);
  return result;
}

uint64_t sub_1CA2BC7EC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1CA2BC7F4);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_1CA2BC7F8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CA2BC800(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MusicKitCatalogSong.MusicKitTesseractMetadata.MusicKitTesseractDailyDetails.CodingKeys()
{
  return &type metadata for MusicKitCatalogSong.MusicKitTesseractMetadata.MusicKitTesseractDailyDetails.CodingKeys;
}

ValueMetadata *type metadata accessor for MusicKitCatalogSong.Relationships.CodingKeys()
{
  return &type metadata for MusicKitCatalogSong.Relationships.CodingKeys;
}

ValueMetadata *type metadata accessor for MusicKitCatalogSong.Relationships.EquivalentsData.CodingKeys()
{
  return &type metadata for MusicKitCatalogSong.Relationships.EquivalentsData.CodingKeys;
}

ValueMetadata *type metadata accessor for MusicKitCatalogSong.Relationships.FlexMLAnalysisRelationship.CodingKeys()
{
  return &type metadata for MusicKitCatalogSong.Relationships.FlexMLAnalysisRelationship.CodingKeys;
}

ValueMetadata *type metadata accessor for MusicKitCatalogSong.Relationships.FlexMLAnalysisRelationship.FlexMLAnalysisData.CodingKeys()
{
  return &type metadata for MusicKitCatalogSong.Relationships.FlexMLAnalysisRelationship.FlexMLAnalysisData.CodingKeys;
}

uint64_t getEnumTagSinglePayload for MusicKitCatalogSong.Relationships.FlexMLAnalysisRelationship.FlexMLAnalysisData.FlexMLAnalysisAttributes.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFB)
    goto LABEL_17;
  if (a2 + 5 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 5) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 5;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 5;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 5;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 6;
  v8 = v6 - 6;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for MusicKitCatalogSong.Relationships.FlexMLAnalysisRelationship.FlexMLAnalysisData.FlexMLAnalysisAttributes.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1CA2BC938 + 4 * byte_1CA8D6756[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1CA2BC96C + 4 * byte_1CA8D6751[v4]))();
}

uint64_t sub_1CA2BC96C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CA2BC974(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1CA2BC97CLL);
  return result;
}

uint64_t sub_1CA2BC988(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1CA2BC990);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1CA2BC994(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CA2BC99C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MusicKitCatalogSong.Relationships.FlexMLAnalysisRelationship.FlexMLAnalysisData.FlexMLAnalysisAttributes.CodingKeys()
{
  return &type metadata for MusicKitCatalogSong.Relationships.FlexMLAnalysisRelationship.FlexMLAnalysisData.FlexMLAnalysisAttributes.CodingKeys;
}

ValueMetadata *type metadata accessor for MusicKitCatalogSong.Relationships.FlexMLAnalysisRelationship.FlexMLAnalysisData.FlexMLAnalysisAttributes.VideoEvents.CodingKeys()
{
  return &type metadata for MusicKitCatalogSong.Relationships.FlexMLAnalysisRelationship.FlexMLAnalysisData.FlexMLAnalysisAttributes.VideoEvents.CodingKeys;
}

ValueMetadata *type metadata accessor for MusicKitCatalogSong.Relationships.FlexMLAnalysisRelationship.FlexMLAnalysisData.FlexMLAnalysisAttributes.EntryPoint.CodingKeys()
{
  return &type metadata for MusicKitCatalogSong.Relationships.FlexMLAnalysisRelationship.FlexMLAnalysisData.FlexMLAnalysisAttributes.EntryPoint.CodingKeys;
}

ValueMetadata *type metadata accessor for MusicKitCatalogSong.Relationships.FlexMLAnalysisRelationship.FlexMLAnalysisData.FlexMLAnalysisAttributes.ExitPoint.CodingKeys()
{
  return &type metadata for MusicKitCatalogSong.Relationships.FlexMLAnalysisRelationship.FlexMLAnalysisData.FlexMLAnalysisAttributes.ExitPoint.CodingKeys;
}

ValueMetadata *type metadata accessor for MusicKitCatalogSong.Relationships.FlexMLAnalysisRelationship.FlexMLAnalysisData.FlexMLAnalysisAttributes.VisualTempo.CodingKeys()
{
  return &type metadata for MusicKitCatalogSong.Relationships.FlexMLAnalysisRelationship.FlexMLAnalysisData.FlexMLAnalysisAttributes.VisualTempo.CodingKeys;
}

ValueMetadata *type metadata accessor for MusicKitCatalogSong.Relationships.FlexMLAnalysisRelationship.FlexMLAnalysisData.FlexMLAnalysisAttributes.Arousal.CodingKeys()
{
  return &type metadata for MusicKitCatalogSong.Relationships.FlexMLAnalysisRelationship.FlexMLAnalysisData.FlexMLAnalysisAttributes.Arousal.CodingKeys;
}

ValueMetadata *type metadata accessor for MusicKitCatalogSong.Relationships.FlexMLAnalysisRelationship.FlexMLAnalysisData.FlexMLAnalysisAttributes.Valence.CodingKeys()
{
  return &type metadata for MusicKitCatalogSong.Relationships.FlexMLAnalysisRelationship.FlexMLAnalysisData.FlexMLAnalysisAttributes.Valence.CodingKeys;
}

ValueMetadata *type metadata accessor for MusicKitCatalogSong.Relationships.AudioAnalysisRelationship.CodingKeys()
{
  return &type metadata for MusicKitCatalogSong.Relationships.AudioAnalysisRelationship.CodingKeys;
}

ValueMetadata *type metadata accessor for MusicKitCatalogSong.Relationships.AudioAnalysisRelationship.AudioAnalysisData.CodingKeys()
{
  return &type metadata for MusicKitCatalogSong.Relationships.AudioAnalysisRelationship.AudioAnalysisData.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for MusicKitCatalogSong.Relationships.AudioAnalysisRelationship.AudioAnalysisData.AudioAnalysisAttributes.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 8 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 8) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF8)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF7)
    return ((uint64_t (*)(void))((char *)&loc_1CA2BCA94 + 4 * byte_1CA8D6760[v4]))();
  *a1 = a2 + 8;
  return ((uint64_t (*)(void))((char *)sub_1CA2BCAC8 + 4 * byte_1CA8D675B[v4]))();
}

uint64_t sub_1CA2BCAC8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CA2BCAD0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1CA2BCAD8);
  return result;
}

uint64_t sub_1CA2BCAE4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1CA2BCAECLL);
  *(_BYTE *)result = a2 + 8;
  return result;
}

uint64_t sub_1CA2BCAF0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CA2BCAF8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MusicKitCatalogSong.Relationships.AudioAnalysisRelationship.AudioAnalysisData.AudioAnalysisAttributes.CodingKeys()
{
  return &type metadata for MusicKitCatalogSong.Relationships.AudioAnalysisRelationship.AudioAnalysisData.AudioAnalysisAttributes.CodingKeys;
}

uint64_t _s11PhotosGraph19MusicKitCatalogSongV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1CA2BCB60 + 4 * byte_1CA8D676A[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1CA2BCB94 + 4 * byte_1CA8D6765[v4]))();
}

uint64_t sub_1CA2BCB94(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CA2BCB9C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1CA2BCBA4);
  return result;
}

uint64_t sub_1CA2BCBB0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1CA2BCBB8);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1CA2BCBBC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CA2BCBC4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MusicKitCatalogSong.Relationships.AudioAnalysisRelationship.AudioAnalysisData.AudioAnalysisAttributes.AudioAnalysisBPM.CodingKeys()
{
  return &type metadata for MusicKitCatalogSong.Relationships.AudioAnalysisRelationship.AudioAnalysisData.AudioAnalysisAttributes.AudioAnalysisBPM.CodingKeys;
}

ValueMetadata *type metadata accessor for MusicKitCatalogSong.Relationships.AudioAnalysisRelationship.AudioAnalysisData.AudioAnalysisAttributes.AudioAnalysisBeats.CodingKeys()
{
  return &type metadata for MusicKitCatalogSong.Relationships.AudioAnalysisRelationship.AudioAnalysisData.AudioAnalysisAttributes.AudioAnalysisBeats.CodingKeys;
}

ValueMetadata *type metadata accessor for MusicKitCatalogSong.Relationships.AudioAnalysisRelationship.AudioAnalysisData.AudioAnalysisAttributes.AudioAnalysisTimeSeriesAttributes.CodingKeys()
{
  return &type metadata for MusicKitCatalogSong.Relationships.AudioAnalysisRelationship.AudioAnalysisData.AudioAnalysisAttributes.AudioAnalysisTimeSeriesAttributes.CodingKeys;
}

ValueMetadata *type metadata accessor for MusicKitCatalogSong.Relationships.AudioAnalysisRelationship.AudioAnalysisData.AudioAnalysisAttributes.AudioAnalysisTimeSeriesAttributes.AveragedTimeSeriesAttributes.CodingKeys()
{
  return &type metadata for MusicKitCatalogSong.Relationships.AudioAnalysisRelationship.AudioAnalysisData.AudioAnalysisAttributes.AudioAnalysisTimeSeriesAttributes.AveragedTimeSeriesAttributes.CodingKeys;
}

ValueMetadata *type metadata accessor for MusicKitCatalogSong.Relationships.AudioAnalysisRelationship.AudioAnalysisData.AudioAnalysisAttributes.AudioAnalysisSavoyAttributes.CodingKeys()
{
  return &type metadata for MusicKitCatalogSong.Relationships.AudioAnalysisRelationship.AudioAnalysisData.AudioAnalysisAttributes.AudioAnalysisSavoyAttributes.CodingKeys;
}

ValueMetadata *type metadata accessor for MusicKitCatalogSong.Relationships.AudioAnalysisRelationship.AudioAnalysisData.AudioAnalysisAttributes.AudioAnalysisKey.CodingKeys()
{
  return &type metadata for MusicKitCatalogSong.Relationships.AudioAnalysisRelationship.AudioAnalysisData.AudioAnalysisAttributes.AudioAnalysisKey.CodingKeys;
}

ValueMetadata *type metadata accessor for MusicKitCatalogSong.Relationships.AudioAnalysisRelationship.AudioAnalysisData.AudioAnalysisAttributes.AudioAnalysisKey.AudioAnalysisKeyAttributes.CodingKeys()
{
  return &type metadata for MusicKitCatalogSong.Relationships.AudioAnalysisRelationship.AudioAnalysisData.AudioAnalysisAttributes.AudioAnalysisKey.AudioAnalysisKeyAttributes.CodingKeys;
}

ValueMetadata *type metadata accessor for MusicKitCatalogSong.Relationships.Lyrics.CodingKeys()
{
  return &type metadata for MusicKitCatalogSong.Relationships.Lyrics.CodingKeys;
}

ValueMetadata *type metadata accessor for MusicKitCatalogSong.Relationships.Lyrics.LyricsData.CodingKeys()
{
  return &type metadata for MusicKitCatalogSong.Relationships.Lyrics.LyricsData.CodingKeys;
}

ValueMetadata *type metadata accessor for MusicKitCatalogSong.Relationships.Lyrics.LyricsData.LyricAttributes.CodingKeys()
{
  return &type metadata for MusicKitCatalogSong.Relationships.Lyrics.LyricsData.LyricAttributes.CodingKeys;
}

ValueMetadata *type metadata accessor for MusicKitCatalogSong.Relationships.Equivalents.CodingKeys()
{
  return &type metadata for MusicKitCatalogSong.Relationships.Equivalents.CodingKeys;
}

uint64_t getEnumTagSinglePayload for MusicKitCatalogSong.Attributes.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF1)
    goto LABEL_17;
  if (a2 + 15 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 15) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 15;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 15;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 15;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x10;
  v8 = v6 - 16;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for MusicKitCatalogSong.Attributes.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 15 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 15) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF1)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF0)
    return ((uint64_t (*)(void))((char *)&loc_1CA2BCD5C + 4 * byte_1CA8D6774[v4]))();
  *a1 = a2 + 15;
  return ((uint64_t (*)(void))((char *)sub_1CA2BCD90 + 4 * byte_1CA8D676F[v4]))();
}

uint64_t sub_1CA2BCD90(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CA2BCD98(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1CA2BCDA0);
  return result;
}

uint64_t sub_1CA2BCDAC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1CA2BCDB4);
  *(_BYTE *)result = a2 + 15;
  return result;
}

uint64_t sub_1CA2BCDB8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CA2BCDC0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MusicKitCatalogSong.Attributes.CodingKeys()
{
  return &type metadata for MusicKitCatalogSong.Attributes.CodingKeys;
}

ValueMetadata *type metadata accessor for MusicKitCatalogSong.Attributes.Unitag.CodingKeys()
{
  return &type metadata for MusicKitCatalogSong.Attributes.Unitag.CodingKeys;
}

uint64_t _s11PhotosGraph19MusicKitCatalogSongV13RelationshipsV26FlexMLAnalysisRelationshipV18FlexMLAnalysisDataV24FlexMLAnalysisAttributesV11VideoEventsV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1CA2BCE38 + 4 * byte_1CA8D677E[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1CA2BCE6C + 4 * byte_1CA8D6779[v4]))();
}

uint64_t sub_1CA2BCE6C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CA2BCE74(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1CA2BCE7CLL);
  return result;
}

uint64_t sub_1CA2BCE88(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1CA2BCE90);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1CA2BCE94(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CA2BCE9C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MusicKitCatalogSong.Attributes.PlayParams.CodingKeys()
{
  return &type metadata for MusicKitCatalogSong.Attributes.PlayParams.CodingKeys;
}

uint64_t _s11PhotosGraph19MusicKitCatalogSongV25MusicKitTesseractMetadataV10CodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1CA2BCEF8 + 4 * byte_1CA8D6783[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1CA2BCF18 + 4 * byte_1CA8D6788[v4]))();
}

_BYTE *sub_1CA2BCEF8(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1CA2BCF18(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1CA2BCF20(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1CA2BCF28(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1CA2BCF30(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1CA2BCF38(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for MusicKitCatalogSong.Attributes.Preview.CodingKeys()
{
  return &type metadata for MusicKitCatalogSong.Attributes.Preview.CodingKeys;
}

uint64_t _s11PhotosGraph19MusicKitCatalogSongV13RelationshipsV26FlexMLAnalysisRelationshipV18FlexMLAnalysisDataV24FlexMLAnalysisAttributesV10EntryPointV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1CA2BCFA0 + 4 * byte_1CA8D6792[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1CA2BCFD4 + 4 * byte_1CA8D678D[v4]))();
}

uint64_t sub_1CA2BCFD4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CA2BCFDC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1CA2BCFE4);
  return result;
}

uint64_t sub_1CA2BCFF0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1CA2BCFF8);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1CA2BCFFC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CA2BD004(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MusicKitCatalogSong.Attributes.Artwork.CodingKeys()
{
  return &type metadata for MusicKitCatalogSong.Attributes.Artwork.CodingKeys;
}

unint64_t sub_1CA2BD024()
{
  unint64_t result;

  result = qword_1EF94C898;
  if (!qword_1EF94C898)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8D7AAC, &type metadata for MusicKitCatalogSong.Attributes.Artwork.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF94C898);
  }
  return result;
}

unint64_t sub_1CA2BD06C()
{
  unint64_t result;

  result = qword_1EF94C8A0;
  if (!qword_1EF94C8A0)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8D7B64, &type metadata for MusicKitCatalogSong.Attributes.Preview.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF94C8A0);
  }
  return result;
}

unint64_t sub_1CA2BD0B4()
{
  unint64_t result;

  result = qword_1EF94C8A8;
  if (!qword_1EF94C8A8)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8D7C1C, &type metadata for MusicKitCatalogSong.Attributes.PlayParams.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF94C8A8);
  }
  return result;
}

unint64_t sub_1CA2BD0FC()
{
  unint64_t result;

  result = qword_1EF94C8B0;
  if (!qword_1EF94C8B0)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8D7CD4, &type metadata for MusicKitCatalogSong.Attributes.Unitag.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF94C8B0);
  }
  return result;
}

unint64_t sub_1CA2BD144()
{
  unint64_t result;

  result = qword_1EF94C8B8;
  if (!qword_1EF94C8B8)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8D7D8C, &type metadata for MusicKitCatalogSong.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF94C8B8);
  }
  return result;
}

unint64_t sub_1CA2BD18C()
{
  unint64_t result;

  result = qword_1EF94C8C0;
  if (!qword_1EF94C8C0)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8D7E44, &type metadata for MusicKitCatalogSong.Relationships.Equivalents.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF94C8C0);
  }
  return result;
}

unint64_t sub_1CA2BD1D4()
{
  unint64_t result;

  result = qword_1EF94C8C8;
  if (!qword_1EF94C8C8)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8D7EFC, &type metadata for MusicKitCatalogSong.Relationships.Lyrics.LyricsData.LyricAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF94C8C8);
  }
  return result;
}

unint64_t sub_1CA2BD21C()
{
  unint64_t result;

  result = qword_1EF94C8D0;
  if (!qword_1EF94C8D0)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8D7FB4, &type metadata for MusicKitCatalogSong.Relationships.Lyrics.LyricsData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF94C8D0);
  }
  return result;
}

unint64_t sub_1CA2BD264()
{
  unint64_t result;

  result = qword_1EF94C8D8;
  if (!qword_1EF94C8D8)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8D806C, &type metadata for MusicKitCatalogSong.Relationships.Lyrics.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF94C8D8);
  }
  return result;
}

unint64_t sub_1CA2BD2AC()
{
  unint64_t result;

  result = qword_1EF94C8E0;
  if (!qword_1EF94C8E0)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8D8124, &type metadata for MusicKitCatalogSong.Relationships.AudioAnalysisRelationship.AudioAnalysisData.AudioAnalysisAttributes.AudioAnalysisKey.AudioAnalysisKeyAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF94C8E0);
  }
  return result;
}

unint64_t sub_1CA2BD2F4()
{
  unint64_t result;

  result = qword_1EF94C8E8;
  if (!qword_1EF94C8E8)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8D81DC, &type metadata for MusicKitCatalogSong.Relationships.AudioAnalysisRelationship.AudioAnalysisData.AudioAnalysisAttributes.AudioAnalysisKey.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF94C8E8);
  }
  return result;
}

unint64_t sub_1CA2BD33C()
{
  unint64_t result;

  result = qword_1EF94C8F0;
  if (!qword_1EF94C8F0)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8D8294, &type metadata for MusicKitCatalogSong.Relationships.AudioAnalysisRelationship.AudioAnalysisData.AudioAnalysisAttributes.AudioAnalysisSavoyAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF94C8F0);
  }
  return result;
}

unint64_t sub_1CA2BD384()
{
  unint64_t result;

  result = qword_1EF94C8F8;
  if (!qword_1EF94C8F8)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8D834C, &type metadata for MusicKitCatalogSong.Relationships.AudioAnalysisRelationship.AudioAnalysisData.AudioAnalysisAttributes.AudioAnalysisTimeSeriesAttributes.AveragedTimeSeriesAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF94C8F8);
  }
  return result;
}

unint64_t sub_1CA2BD3CC()
{
  unint64_t result;

  result = qword_1EF94C900;
  if (!qword_1EF94C900)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8D8404, &type metadata for MusicKitCatalogSong.Relationships.AudioAnalysisRelationship.AudioAnalysisData.AudioAnalysisAttributes.AudioAnalysisTimeSeriesAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF94C900);
  }
  return result;
}

unint64_t sub_1CA2BD414()
{
  unint64_t result;

  result = qword_1EF94C908;
  if (!qword_1EF94C908)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8D84BC, &type metadata for MusicKitCatalogSong.Relationships.AudioAnalysisRelationship.AudioAnalysisData.AudioAnalysisAttributes.AudioAnalysisBeats.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF94C908);
  }
  return result;
}

unint64_t sub_1CA2BD45C()
{
  unint64_t result;

  result = qword_1EF94C910;
  if (!qword_1EF94C910)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8D8574, &type metadata for MusicKitCatalogSong.Relationships.AudioAnalysisRelationship.AudioAnalysisData.AudioAnalysisAttributes.AudioAnalysisBPM.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF94C910);
  }
  return result;
}

unint64_t sub_1CA2BD4A4()
{
  unint64_t result;

  result = qword_1EF94C918;
  if (!qword_1EF94C918)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8D862C, &type metadata for MusicKitCatalogSong.Relationships.AudioAnalysisRelationship.AudioAnalysisData.AudioAnalysisAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF94C918);
  }
  return result;
}

unint64_t sub_1CA2BD4EC()
{
  unint64_t result;

  result = qword_1EF94C920;
  if (!qword_1EF94C920)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8D86E4, &type metadata for MusicKitCatalogSong.Relationships.AudioAnalysisRelationship.AudioAnalysisData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF94C920);
  }
  return result;
}

unint64_t sub_1CA2BD534()
{
  unint64_t result;

  result = qword_1EF94C928;
  if (!qword_1EF94C928)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8D879C, &type metadata for MusicKitCatalogSong.Relationships.AudioAnalysisRelationship.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF94C928);
  }
  return result;
}

unint64_t sub_1CA2BD57C()
{
  unint64_t result;

  result = qword_1EF94C930;
  if (!qword_1EF94C930)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8D8854, &type metadata for MusicKitCatalogSong.Relationships.FlexMLAnalysisRelationship.FlexMLAnalysisData.FlexMLAnalysisAttributes.Valence.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF94C930);
  }
  return result;
}

unint64_t sub_1CA2BD5C4()
{
  unint64_t result;

  result = qword_1EF94C938;
  if (!qword_1EF94C938)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8D890C, &type metadata for MusicKitCatalogSong.Relationships.FlexMLAnalysisRelationship.FlexMLAnalysisData.FlexMLAnalysisAttributes.Arousal.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF94C938);
  }
  return result;
}

unint64_t sub_1CA2BD60C()
{
  unint64_t result;

  result = qword_1EF94C940;
  if (!qword_1EF94C940)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8D89C4, &type metadata for MusicKitCatalogSong.Relationships.FlexMLAnalysisRelationship.FlexMLAnalysisData.FlexMLAnalysisAttributes.VisualTempo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF94C940);
  }
  return result;
}

unint64_t sub_1CA2BD654()
{
  unint64_t result;

  result = qword_1EF94C948;
  if (!qword_1EF94C948)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8D8A7C, &type metadata for MusicKitCatalogSong.Relationships.FlexMLAnalysisRelationship.FlexMLAnalysisData.FlexMLAnalysisAttributes.ExitPoint.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF94C948);
  }
  return result;
}

unint64_t sub_1CA2BD69C()
{
  unint64_t result;

  result = qword_1EF94C950;
  if (!qword_1EF94C950)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8D8B34, &type metadata for MusicKitCatalogSong.Relationships.FlexMLAnalysisRelationship.FlexMLAnalysisData.FlexMLAnalysisAttributes.EntryPoint.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF94C950);
  }
  return result;
}

unint64_t sub_1CA2BD6E4()
{
  unint64_t result;

  result = qword_1EF94C958;
  if (!qword_1EF94C958)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8D8BEC, &type metadata for MusicKitCatalogSong.Relationships.FlexMLAnalysisRelationship.FlexMLAnalysisData.FlexMLAnalysisAttributes.VideoEvents.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF94C958);
  }
  return result;
}

unint64_t sub_1CA2BD72C()
{
  unint64_t result;

  result = qword_1EF94C960;
  if (!qword_1EF94C960)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8D8CA4, &type metadata for MusicKitCatalogSong.Relationships.FlexMLAnalysisRelationship.FlexMLAnalysisData.FlexMLAnalysisAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF94C960);
  }
  return result;
}

unint64_t sub_1CA2BD774()
{
  unint64_t result;

  result = qword_1EF94C968;
  if (!qword_1EF94C968)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8D8D5C, &type metadata for MusicKitCatalogSong.Relationships.FlexMLAnalysisRelationship.FlexMLAnalysisData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF94C968);
  }
  return result;
}

unint64_t sub_1CA2BD7BC()
{
  unint64_t result;

  result = qword_1EF94C970;
  if (!qword_1EF94C970)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8D8E14, &type metadata for MusicKitCatalogSong.Relationships.FlexMLAnalysisRelationship.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF94C970);
  }
  return result;
}

unint64_t sub_1CA2BD804()
{
  unint64_t result;

  result = qword_1EF94C978;
  if (!qword_1EF94C978)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8D8ECC, &type metadata for MusicKitCatalogSong.Relationships.EquivalentsData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF94C978);
  }
  return result;
}

unint64_t sub_1CA2BD84C()
{
  unint64_t result;

  result = qword_1EF94C980;
  if (!qword_1EF94C980)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8D8FBC, &type metadata for MusicKitCatalogSong.Relationships.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF94C980);
  }
  return result;
}

unint64_t sub_1CA2BD894()
{
  unint64_t result;

  result = qword_1EF94C988;
  if (!qword_1EF94C988)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8D9074, &type metadata for MusicKitCatalogSong.MusicKitTesseractMetadata.MusicKitTesseractDailyDetails.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF94C988);
  }
  return result;
}

unint64_t sub_1CA2BD8DC()
{
  unint64_t result;

  result = qword_1EF94C990;
  if (!qword_1EF94C990)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8D912C, &type metadata for MusicKitCatalogSong.MusicKitTesseractMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF94C990);
  }
  return result;
}

unint64_t sub_1CA2BD924()
{
  unint64_t result;

  result = qword_1EF94C998;
  if (!qword_1EF94C998)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8D91E4, &type metadata for MusicKitCatalogSong.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF94C998);
  }
  return result;
}

unint64_t sub_1CA2BD96C()
{
  unint64_t result;

  result = qword_1ED8717E8;
  if (!qword_1ED8717E8)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8D9154, &type metadata for MusicKitCatalogSong.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED8717E8);
  }
  return result;
}

unint64_t sub_1CA2BD9B4()
{
  unint64_t result;

  result = qword_1ED8717E0;
  if (!qword_1ED8717E0)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8D917C, &type metadata for MusicKitCatalogSong.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED8717E0);
  }
  return result;
}

unint64_t sub_1CA2BD9FC()
{
  unint64_t result;

  result = qword_1ED871740;
  if (!qword_1ED871740)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8D909C, &type metadata for MusicKitCatalogSong.MusicKitTesseractMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED871740);
  }
  return result;
}

unint64_t sub_1CA2BDA44()
{
  unint64_t result;

  result = qword_1ED871738;
  if (!qword_1ED871738)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8D90C4, &type metadata for MusicKitCatalogSong.MusicKitTesseractMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED871738);
  }
  return result;
}

unint64_t sub_1CA2BDA8C()
{
  unint64_t result;

  result = qword_1EF94C9A0;
  if (!qword_1EF94C9A0)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8D8FE4, &type metadata for MusicKitCatalogSong.MusicKitTesseractMetadata.MusicKitTesseractDailyDetails.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF94C9A0);
  }
  return result;
}

unint64_t sub_1CA2BDAD4()
{
  unint64_t result;

  result = qword_1EF94C9A8;
  if (!qword_1EF94C9A8)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8D900C, &type metadata for MusicKitCatalogSong.MusicKitTesseractMetadata.MusicKitTesseractDailyDetails.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF94C9A8);
  }
  return result;
}

unint64_t sub_1CA2BDB1C()
{
  unint64_t result;

  result = qword_1ED871800;
  if (!qword_1ED871800)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8D8EF4, &type metadata for MusicKitCatalogSong.Relationships.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED871800);
  }
  return result;
}

unint64_t sub_1CA2BDB64()
{
  unint64_t result;

  result = qword_1ED8717F8;
  if (!qword_1ED8717F8)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8D8F1C, &type metadata for MusicKitCatalogSong.Relationships.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED8717F8);
  }
  return result;
}

unint64_t sub_1CA2BDBAC()
{
  unint64_t result;

  result = qword_1EF94C9B0;
  if (!qword_1EF94C9B0)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8D8E3C, &type metadata for MusicKitCatalogSong.Relationships.EquivalentsData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF94C9B0);
  }
  return result;
}

unint64_t sub_1CA2BDBF4()
{
  unint64_t result;

  result = qword_1EF94C9B8;
  if (!qword_1EF94C9B8)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8D8E64, &type metadata for MusicKitCatalogSong.Relationships.EquivalentsData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF94C9B8);
  }
  return result;
}

unint64_t sub_1CA2BDC3C()
{
  unint64_t result;

  result = qword_1ED8719E0;
  if (!qword_1ED8719E0)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8D8D84, &type metadata for MusicKitCatalogSong.Relationships.FlexMLAnalysisRelationship.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED8719E0);
  }
  return result;
}

unint64_t sub_1CA2BDC84()
{
  unint64_t result;

  result = qword_1ED8719D8;
  if (!qword_1ED8719D8)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8D8DAC, &type metadata for MusicKitCatalogSong.Relationships.FlexMLAnalysisRelationship.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED8719D8);
  }
  return result;
}

unint64_t sub_1CA2BDCCC()
{
  unint64_t result;

  result = qword_1ED8719C0;
  if (!qword_1ED8719C0)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8D8CCC, &type metadata for MusicKitCatalogSong.Relationships.FlexMLAnalysisRelationship.FlexMLAnalysisData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED8719C0);
  }
  return result;
}

unint64_t sub_1CA2BDD14()
{
  unint64_t result;

  result = qword_1ED8719B8;
  if (!qword_1ED8719B8)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8D8CF4, &type metadata for MusicKitCatalogSong.Relationships.FlexMLAnalysisRelationship.FlexMLAnalysisData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED8719B8);
  }
  return result;
}

unint64_t sub_1CA2BDD5C()
{
  unint64_t result;

  result = qword_1ED8718E0;
  if (!qword_1ED8718E0)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8D8C14, &type metadata for MusicKitCatalogSong.Relationships.FlexMLAnalysisRelationship.FlexMLAnalysisData.FlexMLAnalysisAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED8718E0);
  }
  return result;
}

unint64_t sub_1CA2BDDA4()
{
  unint64_t result;

  result = qword_1ED8718D8;
  if (!qword_1ED8718D8)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8D8C3C, &type metadata for MusicKitCatalogSong.Relationships.FlexMLAnalysisRelationship.FlexMLAnalysisData.FlexMLAnalysisAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED8718D8);
  }
  return result;
}

unint64_t sub_1CA2BDDEC()
{
  unint64_t result;

  result = qword_1ED871918;
  if (!qword_1ED871918)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8D8B5C, &type metadata for MusicKitCatalogSong.Relationships.FlexMLAnalysisRelationship.FlexMLAnalysisData.FlexMLAnalysisAttributes.VideoEvents.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED871918);
  }
  return result;
}

unint64_t sub_1CA2BDE34()
{
  unint64_t result;

  result = qword_1ED871910;
  if (!qword_1ED871910)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8D8B84, &type metadata for MusicKitCatalogSong.Relationships.FlexMLAnalysisRelationship.FlexMLAnalysisData.FlexMLAnalysisAttributes.VideoEvents.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED871910);
  }
  return result;
}

unint64_t sub_1CA2BDE7C()
{
  unint64_t result;

  result = qword_1ED8718F8;
  if (!qword_1ED8718F8)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8D8AA4, &type metadata for MusicKitCatalogSong.Relationships.FlexMLAnalysisRelationship.FlexMLAnalysisData.FlexMLAnalysisAttributes.EntryPoint.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED8718F8);
  }
  return result;
}

unint64_t sub_1CA2BDEC4()
{
  unint64_t result;

  result = qword_1ED8718F0;
  if (!qword_1ED8718F0)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8D8ACC, &type metadata for MusicKitCatalogSong.Relationships.FlexMLAnalysisRelationship.FlexMLAnalysisData.FlexMLAnalysisAttributes.EntryPoint.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED8718F0);
  }
  return result;
}

unint64_t sub_1CA2BDF0C()
{
  unint64_t result;

  result = qword_1ED871998;
  if (!qword_1ED871998)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8D89EC, &type metadata for MusicKitCatalogSong.Relationships.FlexMLAnalysisRelationship.FlexMLAnalysisData.FlexMLAnalysisAttributes.ExitPoint.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED871998);
  }
  return result;
}

unint64_t sub_1CA2BDF54()
{
  unint64_t result;

  result = qword_1ED871990;
  if (!qword_1ED871990)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8D8A14, &type metadata for MusicKitCatalogSong.Relationships.FlexMLAnalysisRelationship.FlexMLAnalysisData.FlexMLAnalysisAttributes.ExitPoint.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED871990);
  }
  return result;
}

unint64_t sub_1CA2BDF9C()
{
  unint64_t result;

  result = qword_1ED871938;
  if (!qword_1ED871938)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8D8934, &type metadata for MusicKitCatalogSong.Relationships.FlexMLAnalysisRelationship.FlexMLAnalysisData.FlexMLAnalysisAttributes.VisualTempo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED871938);
  }
  return result;
}

unint64_t sub_1CA2BDFE4()
{
  unint64_t result;

  result = qword_1ED871930;
  if (!qword_1ED871930)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8D895C, &type metadata for MusicKitCatalogSong.Relationships.FlexMLAnalysisRelationship.FlexMLAnalysisData.FlexMLAnalysisAttributes.VisualTempo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED871930);
  }
  return result;
}

unint64_t sub_1CA2BE02C()
{
  unint64_t result;

  result = qword_1ED871958;
  if (!qword_1ED871958)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8D887C, &type metadata for MusicKitCatalogSong.Relationships.FlexMLAnalysisRelationship.FlexMLAnalysisData.FlexMLAnalysisAttributes.Arousal.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED871958);
  }
  return result;
}

unint64_t sub_1CA2BE074()
{
  unint64_t result;

  result = qword_1ED871950;
  if (!qword_1ED871950)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8D88A4, &type metadata for MusicKitCatalogSong.Relationships.FlexMLAnalysisRelationship.FlexMLAnalysisData.FlexMLAnalysisAttributes.Arousal.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED871950);
  }
  return result;
}

unint64_t sub_1CA2BE0BC()
{
  unint64_t result;

  result = qword_1ED871978;
  if (!qword_1ED871978)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8D87C4, &type metadata for MusicKitCatalogSong.Relationships.FlexMLAnalysisRelationship.FlexMLAnalysisData.FlexMLAnalysisAttributes.Valence.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED871978);
  }
  return result;
}

unint64_t sub_1CA2BE104()
{
  unint64_t result;

  result = qword_1ED871970;
  if (!qword_1ED871970)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8D87EC, &type metadata for MusicKitCatalogSong.Relationships.FlexMLAnalysisRelationship.FlexMLAnalysisData.FlexMLAnalysisAttributes.Valence.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED871970);
  }
  return result;
}

unint64_t sub_1CA2BE14C()
{
  unint64_t result;

  result = qword_1ED8718C0;
  if (!qword_1ED8718C0)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8D870C, &type metadata for MusicKitCatalogSong.Relationships.AudioAnalysisRelationship.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED8718C0);
  }
  return result;
}

unint64_t sub_1CA2BE194()
{
  unint64_t result;

  result = qword_1ED8718B8;
  if (!qword_1ED8718B8)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8D8734, &type metadata for MusicKitCatalogSong.Relationships.AudioAnalysisRelationship.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED8718B8);
  }
  return result;
}

unint64_t sub_1CA2BE1DC()
{
  unint64_t result;

  result = qword_1ED8718A0;
  if (!qword_1ED8718A0)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8D8654, &type metadata for MusicKitCatalogSong.Relationships.AudioAnalysisRelationship.AudioAnalysisData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED8718A0);
  }
  return result;
}

unint64_t sub_1CA2BE224()
{
  unint64_t result;

  result = qword_1ED871898;
  if (!qword_1ED871898)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8D867C, &type metadata for MusicKitCatalogSong.Relationships.AudioAnalysisRelationship.AudioAnalysisData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED871898);
  }
  return result;
}

unint64_t sub_1CA2BE26C()
{
  unint64_t result;

  result = qword_1ED871880;
  if (!qword_1ED871880)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8D859C, &type metadata for MusicKitCatalogSong.Relationships.AudioAnalysisRelationship.AudioAnalysisData.AudioAnalysisAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED871880);
  }
  return result;
}

unint64_t sub_1CA2BE2B4()
{
  unint64_t result;

  result = qword_1ED871878;
  if (!qword_1ED871878)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8D85C4, &type metadata for MusicKitCatalogSong.Relationships.AudioAnalysisRelationship.AudioAnalysisData.AudioAnalysisAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED871878);
  }
  return result;
}

unint64_t sub_1CA2BE2FC()
{
  unint64_t result;

  result = qword_1EF94C9C0;
  if (!qword_1EF94C9C0)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8D84E4, &type metadata for MusicKitCatalogSong.Relationships.AudioAnalysisRelationship.AudioAnalysisData.AudioAnalysisAttributes.AudioAnalysisBPM.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF94C9C0);
  }
  return result;
}

unint64_t sub_1CA2BE344()
{
  unint64_t result;

  result = qword_1EF94C9C8;
  if (!qword_1EF94C9C8)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8D850C, &type metadata for MusicKitCatalogSong.Relationships.AudioAnalysisRelationship.AudioAnalysisData.AudioAnalysisAttributes.AudioAnalysisBPM.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF94C9C8);
  }
  return result;
}

unint64_t sub_1CA2BE38C()
{
  unint64_t result;

  result = qword_1EF94C9D0;
  if (!qword_1EF94C9D0)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8D842C, &type metadata for MusicKitCatalogSong.Relationships.AudioAnalysisRelationship.AudioAnalysisData.AudioAnalysisAttributes.AudioAnalysisBeats.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF94C9D0);
  }
  return result;
}

unint64_t sub_1CA2BE3D4()
{
  unint64_t result;

  result = qword_1EF94C9D8;
  if (!qword_1EF94C9D8)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8D8454, &type metadata for MusicKitCatalogSong.Relationships.AudioAnalysisRelationship.AudioAnalysisData.AudioAnalysisAttributes.AudioAnalysisBeats.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF94C9D8);
  }
  return result;
}

unint64_t sub_1CA2BE41C()
{
  unint64_t result;

  result = qword_1ED871858;
  if (!qword_1ED871858)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8D8374, &type metadata for MusicKitCatalogSong.Relationships.AudioAnalysisRelationship.AudioAnalysisData.AudioAnalysisAttributes.AudioAnalysisTimeSeriesAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED871858);
  }
  return result;
}

unint64_t sub_1CA2BE464()
{
  unint64_t result;

  result = qword_1ED871850;
  if (!qword_1ED871850)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8D839C, &type metadata for MusicKitCatalogSong.Relationships.AudioAnalysisRelationship.AudioAnalysisData.AudioAnalysisAttributes.AudioAnalysisTimeSeriesAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED871850);
  }
  return result;
}

unint64_t sub_1CA2BE4AC()
{
  unint64_t result;

  result = qword_1ED871838;
  if (!qword_1ED871838)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8D82BC, &type metadata for MusicKitCatalogSong.Relationships.AudioAnalysisRelationship.AudioAnalysisData.AudioAnalysisAttributes.AudioAnalysisTimeSeriesAttributes.AveragedTimeSeriesAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED871838);
  }
  return result;
}

unint64_t sub_1CA2BE4F4()
{
  unint64_t result;

  result = qword_1ED871830;
  if (!qword_1ED871830)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8D82E4, &type metadata for MusicKitCatalogSong.Relationships.AudioAnalysisRelationship.AudioAnalysisData.AudioAnalysisAttributes.AudioAnalysisTimeSeriesAttributes.AveragedTimeSeriesAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED871830);
  }
  return result;
}

unint64_t sub_1CA2BE53C()
{
  unint64_t result;

  result = qword_1EF94C9E0;
  if (!qword_1EF94C9E0)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8D8204, &type metadata for MusicKitCatalogSong.Relationships.AudioAnalysisRelationship.AudioAnalysisData.AudioAnalysisAttributes.AudioAnalysisSavoyAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF94C9E0);
  }
  return result;
}

unint64_t sub_1CA2BE584()
{
  unint64_t result;

  result = qword_1EF94C9E8;
  if (!qword_1EF94C9E8)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8D822C, &type metadata for MusicKitCatalogSong.Relationships.AudioAnalysisRelationship.AudioAnalysisData.AudioAnalysisAttributes.AudioAnalysisSavoyAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF94C9E8);
  }
  return result;
}

unint64_t sub_1CA2BE5CC()
{
  unint64_t result;

  result = qword_1EF94C9F0;
  if (!qword_1EF94C9F0)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8D814C, &type metadata for MusicKitCatalogSong.Relationships.AudioAnalysisRelationship.AudioAnalysisData.AudioAnalysisAttributes.AudioAnalysisKey.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF94C9F0);
  }
  return result;
}

unint64_t sub_1CA2BE614()
{
  unint64_t result;

  result = qword_1EF94C9F8;
  if (!qword_1EF94C9F8)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8D8174, &type metadata for MusicKitCatalogSong.Relationships.AudioAnalysisRelationship.AudioAnalysisData.AudioAnalysisAttributes.AudioAnalysisKey.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF94C9F8);
  }
  return result;
}

unint64_t sub_1CA2BE65C()
{
  unint64_t result;

  result = qword_1EF94CA00;
  if (!qword_1EF94CA00)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8D8094, &type metadata for MusicKitCatalogSong.Relationships.AudioAnalysisRelationship.AudioAnalysisData.AudioAnalysisAttributes.AudioAnalysisKey.AudioAnalysisKeyAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF94CA00);
  }
  return result;
}

unint64_t sub_1CA2BE6A4()
{
  unint64_t result;

  result = qword_1EF94CA08;
  if (!qword_1EF94CA08)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8D80BC, &type metadata for MusicKitCatalogSong.Relationships.AudioAnalysisRelationship.AudioAnalysisData.AudioAnalysisAttributes.AudioAnalysisKey.AudioAnalysisKeyAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF94CA08);
  }
  return result;
}

unint64_t sub_1CA2BE6EC()
{
  unint64_t result;

  result = qword_1EF94CA10;
  if (!qword_1EF94CA10)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8D7FDC, &type metadata for MusicKitCatalogSong.Relationships.Lyrics.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF94CA10);
  }
  return result;
}

unint64_t sub_1CA2BE734()
{
  unint64_t result;

  result = qword_1EF94CA18;
  if (!qword_1EF94CA18)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8D8004, &type metadata for MusicKitCatalogSong.Relationships.Lyrics.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF94CA18);
  }
  return result;
}

unint64_t sub_1CA2BE77C()
{
  unint64_t result;

  result = qword_1EF94CA20;
  if (!qword_1EF94CA20)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8D7F24, &type metadata for MusicKitCatalogSong.Relationships.Lyrics.LyricsData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF94CA20);
  }
  return result;
}

unint64_t sub_1CA2BE7C4()
{
  unint64_t result;

  result = qword_1EF94CA28;
  if (!qword_1EF94CA28)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8D7F4C, &type metadata for MusicKitCatalogSong.Relationships.Lyrics.LyricsData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF94CA28);
  }
  return result;
}

unint64_t sub_1CA2BE80C()
{
  unint64_t result;

  result = qword_1EF94CA30;
  if (!qword_1EF94CA30)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8D7E6C, &type metadata for MusicKitCatalogSong.Relationships.Lyrics.LyricsData.LyricAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF94CA30);
  }
  return result;
}

unint64_t sub_1CA2BE854()
{
  unint64_t result;

  result = qword_1EF94CA38;
  if (!qword_1EF94CA38)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8D7E94, &type metadata for MusicKitCatalogSong.Relationships.Lyrics.LyricsData.LyricAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF94CA38);
  }
  return result;
}

unint64_t sub_1CA2BE89C()
{
  unint64_t result;

  result = qword_1EF94CA40;
  if (!qword_1EF94CA40)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8D7DB4, &type metadata for MusicKitCatalogSong.Relationships.Equivalents.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF94CA40);
  }
  return result;
}

unint64_t sub_1CA2BE8E4()
{
  unint64_t result;

  result = qword_1EF94CA48;
  if (!qword_1EF94CA48)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8D7DDC, &type metadata for MusicKitCatalogSong.Relationships.Equivalents.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF94CA48);
  }
  return result;
}

unint64_t sub_1CA2BE92C()
{
  unint64_t result;

  result = qword_1ED871760;
  if (!qword_1ED871760)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8D7CFC, &type metadata for MusicKitCatalogSong.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED871760);
  }
  return result;
}

unint64_t sub_1CA2BE974()
{
  unint64_t result;

  result = qword_1ED871758;
  if (!qword_1ED871758)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8D7D24, &type metadata for MusicKitCatalogSong.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED871758);
  }
  return result;
}

unint64_t sub_1CA2BE9BC()
{
  unint64_t result;

  result = qword_1ED874668;
  if (!qword_1ED874668)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8D7C44, &type metadata for MusicKitCatalogSong.Attributes.Unitag.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED874668);
  }
  return result;
}

unint64_t sub_1CA2BEA04()
{
  unint64_t result;

  result = qword_1ED874660;
  if (!qword_1ED874660)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8D7C6C, &type metadata for MusicKitCatalogSong.Attributes.Unitag.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED874660);
  }
  return result;
}

unint64_t sub_1CA2BEA4C()
{
  unint64_t result;

  result = qword_1ED871778;
  if (!qword_1ED871778)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8D7B8C, &type metadata for MusicKitCatalogSong.Attributes.PlayParams.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED871778);
  }
  return result;
}

unint64_t sub_1CA2BEA94()
{
  unint64_t result;

  result = qword_1ED871770;
  if (!qword_1ED871770)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8D7BB4, &type metadata for MusicKitCatalogSong.Attributes.PlayParams.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED871770);
  }
  return result;
}

unint64_t sub_1CA2BEADC()
{
  unint64_t result;

  result = qword_1ED8717C0;
  if (!qword_1ED8717C0)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8D7AD4, &type metadata for MusicKitCatalogSong.Attributes.Preview.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED8717C0);
  }
  return result;
}

unint64_t sub_1CA2BEB24()
{
  unint64_t result;

  result = qword_1ED8717B8;
  if (!qword_1ED8717B8)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8D7AFC, &type metadata for MusicKitCatalogSong.Attributes.Preview.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED8717B8);
  }
  return result;
}

unint64_t sub_1CA2BEB6C()
{
  unint64_t result;

  result = qword_1ED8717A0;
  if (!qword_1ED8717A0)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8D7A1C, &type metadata for MusicKitCatalogSong.Attributes.Artwork.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED8717A0);
  }
  return result;
}

unint64_t sub_1CA2BEBB4()
{
  unint64_t result;

  result = qword_1ED871798;
  if (!qword_1ED871798)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8D7A44, &type metadata for MusicKitCatalogSong.Attributes.Artwork.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED871798);
  }
  return result;
}

uint64_t sub_1CA2BEBF8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6874646977 && a2 == 0xE500000000000000;
  if (v2 || (sub_1CA85C284() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x746867696568 && a2 == 0xE600000000000000 || (sub_1CA85C284() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 7107189 && a2 == 0xE300000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1CA85C284();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1CA2BED2C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_1CA85C284() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1684957547 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1CA85C284();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1CA2BEDF4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x65726F6373 && a2 == 0xE500000000000000;
  if (v2 || (sub_1CA85C284() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 6775156 && a2 == 0xE300000000000000 || (sub_1CA85C284() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x63617073656D616ELL && a2 == 0xE900000000000065)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1CA85C284();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1CA2BEF3C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6B726F77747261 && a2 == 0xE700000000000000;
  if (v2 || (sub_1CA85C284() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 7107189 && a2 == 0xE300000000000000 || (sub_1CA85C284() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6572506F72746E69 && a2 == 0xEC00000077656976 || (sub_1CA85C284() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7377656976657270 && a2 == 0xE800000000000000 || (sub_1CA85C284() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x614E747369747261 && a2 == 0xEA0000000000656DLL || (sub_1CA85C284() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6D614E6D75626C61 && a2 == 0xE900000000000065 || (sub_1CA85C284() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6E65726566657270 && a2 == 0xEF65726F63536563 || (sub_1CA85C284() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x73676174696E75 && a2 == 0xE700000000000000 || (sub_1CA85C284() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 1701667182 && a2 == 0xE400000000000000 || (sub_1CA85C284() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x52746E65746E6F63 && a2 == 0xED0000676E697461 || (sub_1CA85C284() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001CA88A6F0 || (sub_1CA85C284() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0x6172615079616C70 && a2 == 0xEA0000000000736DLL || (sub_1CA85C284() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0x636F4C6F69647561 && a2 == 0xEB00000000656C61 || (sub_1CA85C284() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0xD00000000000001ELL && a2 == 0x80000001CA88A710 || (sub_1CA85C284() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0x6D614E65726E6567 && a2 == 0xEA00000000007365 || (sub_1CA85C284() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else if (a1 == 0x50746E65746E6F63 && a2 == 0xEF72656469766F72)
  {
    swift_bridgeObjectRelease();
    return 15;
  }
  else
  {
    v6 = sub_1CA85C284();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 15;
    else
      return 16;
  }
}

uint64_t sub_1CA2BF624()
{
  unint64_t v0;

  v0 = sub_1CA85C0F8();
  swift_bridgeObjectRelease();
  if (v0 >= 4)
    return 4;
  else
    return v0;
}

uint64_t sub_1CA2BF66C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x63696E6F74 && a2 == 0xE500000000000000;
  if (v2 || (sub_1CA85C284() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701080941 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1CA85C284();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1CA2BF744(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x65756C6176 && a2 == 0xE500000000000000;
  if (v2 || (sub_1CA85C284() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1801545072 && a2 == 0xE400000000000000 || (sub_1CA85C284() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x65676E6172 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1CA85C284();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1CA2BF878(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1852399981 && a2 == 0xE400000000000000;
  if (v2 || (sub_1CA85C284() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E696E6E69676562 && a2 == 0xE900000000000067 || (sub_1CA85C284() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x676E69646E65 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1CA85C284();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1CA2BF9C0(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000013 && a2 == 0x80000001CA88A730 || (sub_1CA85C284() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001CA88A750)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v5 = sub_1CA85C284();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1CA2BFAA8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1852399981 && a2 == 0xE400000000000000;
  if (v2 || (sub_1CA85C284() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E696E6E69676562 && a2 == 0xE900000000000067 || (sub_1CA85C284() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x676E69646E65 && a2 == 0xE600000000000000 || (sub_1CA85C284() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001CA88A770)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_1CA85C284();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_1CA2BFC50(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 7955819 && a2 == 0xE300000000000000;
  if (v2 || (sub_1CA85C284() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E6369646F6C656DLL && a2 == 0xEB00000000737365 || (sub_1CA85C284() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x63697473756F6361 && a2 == 0xEC0000007373656ELL || (sub_1CA85C284() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x65636E656C6176 && a2 == 0xE700000000000000 || (sub_1CA85C284() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x796772656E65 && a2 == 0xE600000000000000 || (sub_1CA85C284() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x7373656E64756F6CLL && a2 == 0xE800000000000000 || (sub_1CA85C284() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x69626165636E6164 && a2 == 0xEC0000007974696CLL || (sub_1CA85C284() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x7374616562 && a2 == 0xE500000000000000 || (sub_1CA85C284() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 7172194 && a2 == 0xE300000000000000)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else
  {
    v6 = sub_1CA85C284();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 8;
    else
      return 9;
  }
}

uint64_t sub_1CA2C0014(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x65756C6176 && a2 == 0xE500000000000000;
  if (v2 || (sub_1CA85C284() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001CA88A790)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1CA85C284();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1CA2C00F8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6C426F5465646166 && a2 == 0xEB000000006B6361;
  if (v2 || (sub_1CA85C284() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x756C61566E696167 && a2 == 0xE900000000000065 || (sub_1CA85C284() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x65536E49656D6974 && a2 == 0xED000073646E6F63 || (sub_1CA85C284() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001CA88A7B0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_1CA85C284();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_1CA2C02F4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x756C61566E696167 && a2 == 0xE900000000000065;
  if (v2 || (sub_1CA85C284() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65536E49656D6974 && a2 == 0xED000073646E6F63 || (sub_1CA85C284() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001CA88A7B0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1CA85C284();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1CA2C0474(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x65726F6373 && a2 == 0xE500000000000000;
  if (v2 || (sub_1CA85C284() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65536E49656D6974 && a2 == 0xED000073646E6F63)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1CA85C284();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1CA2C0580(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x65636E656C6176 && a2 == 0xE700000000000000;
  if (v2 || (sub_1CA85C284() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6C6173756F7261 && a2 == 0xE700000000000000 || (sub_1CA85C284() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x65546C6175736976 && a2 == 0xEB000000006F706DLL || (sub_1CA85C284() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6E696F5074697865 && a2 == 0xEA00000000007374 || (sub_1CA85C284() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x696F507972746E65 && a2 == 0xEB0000000073746ELL || (sub_1CA85C284() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6576456F65646976 && a2 == 0xEB0000000073746ELL)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    v6 = sub_1CA85C284();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 5;
    else
      return 6;
  }
}

uint64_t sub_1CA2C0850(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x43545565746164 && a2 == 0xE700000000000000;
  if (v2 || (sub_1CA85C284() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x4354557372756F68 && a2 == 0xE800000000000000 || (sub_1CA85C284() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000001CA88A7D0 || (sub_1CA85C284() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6E756F4379616C70 && a2 == 0xE900000000000074 || (sub_1CA85C284() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6E756F4370696B73 && a2 == 0xE900000000000074 || (sub_1CA85C284() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x52646E457473616CLL && a2 == 0xED00006E6F736165 || (sub_1CA85C284() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x73656369766564 && a2 == 0xE700000000000000 || (sub_1CA85C284() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001CA88A7F0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    v6 = sub_1CA85C284();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 7;
    else
      return 8;
  }
}

uint64_t sub_1CA2C0BC0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_1CA85C284() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7475626972747461 && a2 == 0xEA00000000007365 || (sub_1CA85C284() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6E6F6974616C6572 && a2 == 0xED00007370696873 || (sub_1CA85C284() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 1635018093 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_1CA85C284();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

unint64_t sub_1CA2C0D80()
{
  unint64_t result;

  result = qword_1EF94B000;
  if (!qword_1EF94B000)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF94B000);
  }
  return result;
}

uint64_t sub_1CA2C0DBC(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  if (result != 1)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return sub_1CA26855C(a9);
  }
  return result;
}

uint64_t *sub_1CA2C0E34(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v11 = a1[10];
  v2 = a1[11];
  v3 = a1[12];
  v4 = a1[13];
  v5 = a1[14];
  v6 = a1[15];
  v7 = a1[16];
  v8 = a1[17];
  v9 = a1[18];
  sub_1CA2C0EDC(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8]);
  sub_1CA2C0EDC(v11, v2, v3, v4, v5, v6, v7, v8, v9);
  return a1;
}

uint64_t sub_1CA2C0EDC(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  if (result != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return sub_1CA2B5FC4(a9);
  }
  return result;
}

uint64_t sub_1CA2C0F50(uint64_t a1)
{
  unint64_t v1;

  v1 = *(_QWORD *)(a1 + 288);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return ((_DWORD)v1 - 1) & ~(((int)v1 - 1) >> 31);
}

uint64_t sub_1CA2C0F6C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37)
{
  if (a37 != 2)
  {
    sub_1CA2B5678(result, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, (void (*)(void))sub_1CA2B5228);
    return sub_1CA2B57D8(a37);
  }
  return result;
}

uint64_t sub_1CA2C0FE0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;

  v2 = *(_QWORD *)(a1 + 376);
  v27 = *(_QWORD *)(a1 + 368);
  v28 = *(_QWORD *)(a1 + 360);
  v3 = *(_QWORD *)(a1 + 384);
  v4 = *(_QWORD *)(a1 + 392);
  v5 = *(_QWORD *)(a1 + 400);
  v6 = *(_QWORD *)(a1 + 408);
  v7 = *(_QWORD *)(a1 + 416);
  v25 = *(_OWORD *)(a1 + 440);
  v26 = *(_OWORD *)(a1 + 424);
  v23 = *(_OWORD *)(a1 + 472);
  v24 = *(_OWORD *)(a1 + 456);
  v21 = *(_OWORD *)(a1 + 504);
  v22 = *(_OWORD *)(a1 + 488);
  v19 = *(_OWORD *)(a1 + 536);
  v20 = *(_OWORD *)(a1 + 520);
  v18 = *(_OWORD *)(a1 + 552);
  v16 = *(_OWORD *)(a1 + 584);
  v17 = *(_OWORD *)(a1 + 568);
  v14 = *(_OWORD *)(a1 + 616);
  v15 = *(_OWORD *)(a1 + 600);
  v12 = *(_OWORD *)(a1 + 648);
  v13 = *(_OWORD *)(a1 + 632);
  v11 = *(_OWORD *)(a1 + 272);
  v9 = *(_OWORD *)(a1 + 240);
  v10 = *(_OWORD *)(a1 + 256);
  sub_1CA2C11D8(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
    *(_QWORD *)(a1 + 152),
    *(_QWORD *)(a1 + 160),
    *(_QWORD *)(a1 + 168),
    *(_QWORD *)(a1 + 176),
    *(_QWORD *)(a1 + 184),
    *(_QWORD *)(a1 + 192),
    *(_QWORD *)(a1 + 200),
    *(_QWORD *)(a1 + 208),
    *(_QWORD *)(a1 + 216),
    *(_QWORD *)(a1 + 224),
    *(_QWORD *)(a1 + 232),
    v9,
    *((uint64_t *)&v9 + 1),
    v10,
    *((uint64_t *)&v10 + 1),
    v11,
    *((uint64_t *)&v11 + 1),
    *(_QWORD *)(a1 + 288));
  sub_1CA2C11D8(v28, v27, v2, v3, v4, v5, v6, v7, v26, *((uint64_t *)&v26 + 1), v25, *((uint64_t *)&v25 + 1), v24, *((uint64_t *)&v24 + 1), v23, *((uint64_t *)&v23 + 1), v22, *((uint64_t *)&v22 + 1), v21,
    *((uint64_t *)&v21 + 1),
    v20,
    *((uint64_t *)&v20 + 1),
    v19,
    *((uint64_t *)&v19 + 1),
    v18,
    *((uint64_t *)&v18 + 1),
    v17,
    *((uint64_t *)&v17 + 1),
    v16,
    *((uint64_t *)&v16 + 1),
    v15,
    *((uint64_t *)&v15 + 1),
    v14,
    *((uint64_t *)&v14 + 1),
    v13,
    *((uint64_t *)&v13 + 1),
    v12);
  return a1;
}

uint64_t sub_1CA2C11D8(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37)
{
  if (a37 != 2)
  {
    sub_1CA2B5678(result, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, (void (*)(void))sub_1CA2B525C);
    return sub_1CA2B5604(a37);
  }
  return result;
}

uint64_t sub_1CA2C124C(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, __int16))
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int16 v11;

  v11 = *(_WORD *)(a1 + 352);
  v9 = *(_OWORD *)(a1 + 304);
  v10 = *(_OWORD *)(a1 + 320);
  v7 = *(_OWORD *)(a1 + 272);
  v8 = *(_OWORD *)(a1 + 288);
  v5 = *(_OWORD *)(a1 + 240);
  v6 = *(_OWORD *)(a1 + 256);
  v4 = *(_OWORD *)(a1 + 208);
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
    *(_QWORD *)(a1 + 152),
    *(_QWORD *)(a1 + 160),
    *(_QWORD *)(a1 + 168),
    *(_QWORD *)(a1 + 176),
    *(_QWORD *)(a1 + 184),
    *(_QWORD *)(a1 + 192),
    *(_QWORD *)(a1 + 200),
    v4,
    *((_QWORD *)&v4 + 1),
    *(_QWORD *)(a1 + 224),
    *(_QWORD *)(a1 + 232),
    v5,
    *((_QWORD *)&v5 + 1),
    v6,
    *((_QWORD *)&v6 + 1),
    v7,
    *((_QWORD *)&v7 + 1),
    v8,
    *((_QWORD *)&v8 + 1),
    v9,
    *((_QWORD *)&v9 + 1),
    v10,
    *((_QWORD *)&v10 + 1),
    *(_QWORD *)(a1 + 336),
    *(_QWORD *)(a1 + 344),
    v11);
  return a1;
}

uint64_t sub_1CA2C12E8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;

  v2 = *(_QWORD *)(a1 + 112);
  v12 = *(_QWORD *)(a1 + 104);
  v13 = *(_QWORD *)(a1 + 96);
  v3 = *(_QWORD *)(a1 + 120);
  v4 = *(_QWORD *)(a1 + 128);
  v5 = *(_QWORD *)(a1 + 136);
  v6 = *(_QWORD *)(a1 + 144);
  v7 = *(_QWORD *)(a1 + 152);
  v11 = *(_OWORD *)(a1 + 160);
  v9 = *(_QWORD *)(a1 + 176);
  v8 = *(_QWORD *)(a1 + 184);
  sub_1CA2B5678(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), (void (*)(void))sub_1CA2B525C);
  sub_1CA2B5678(v13, v12, v2, v3, v4, v5, v6, v7, v11, *((uint64_t *)&v11 + 1), v9, v8, (void (*)(void))sub_1CA2B525C);
  return a1;
}

uint64_t sub_1CA2C13B8(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2 != 1)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t sub_1CA2C13CC(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2 != 1)
    return swift_bridgeObjectRelease();
  return result;
}

void __spoils<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> sub_1CA2C1434()
{
  sub_1CA85B7C8();
}

char *static MusicCache.cache(with:)(void *a1)
{
  return sub_1CA2CEAA8(a1);
}

void sub_1CA2C1478(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  id v11;
  int64_t v12;
  unint64_t v13;
  uint64_t v14;
  id v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  _QWORD *v24;
  int64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  void *v32;

  v1 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1CA85BDC8();
    type metadata accessor for SongSourceEntry();
    sub_1CA23CC98((unint64_t *)&unk_1EF94CA80, (uint64_t (*)(uint64_t))type metadata accessor for SongSourceEntry, MEMORY[0x1E0DEFCF8]);
    sub_1CA85B9CC();
    v1 = v27;
    v26 = v28;
    v2 = v29;
    v3 = v30;
    v4 = v31;
  }
  else
  {
    v5 = -1 << *(_BYTE *)(a1 + 32);
    v26 = a1 + 56;
    v2 = ~v5;
    v6 = -v5;
    if (v6 < 64)
      v7 = ~(-1 << v6);
    else
      v7 = -1;
    v4 = v7 & *(_QWORD *)(a1 + 56);
    swift_bridgeObjectRetain();
    v3 = 0;
  }
  v23 = v2;
  v25 = (unint64_t)(v2 + 64) >> 6;
  v24 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  while (1)
  {
    v8 = v3;
    if ((v1 & 0x8000000000000000) == 0)
      break;
    if (!sub_1CA85BE34())
      goto LABEL_38;
    type metadata accessor for SongSourceEntry();
    swift_unknownObjectRetain();
    swift_dynamicCast();
    v11 = v32;
    swift_unknownObjectRelease();
    if (!v32)
      goto LABEL_38;
LABEL_31:
    v15 = objc_msgSend(v11, sel_identifier, v23);
    if (v15)
    {
      v16 = v15;
      v17 = sub_1CA85B534();
      v19 = v18;

      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v24 = sub_1CA26BCE4(0, v24[2] + 1, 1, v24);
      v21 = v24[2];
      v20 = v24[3];
      if (v21 >= v20 >> 1)
        v24 = sub_1CA26BCE4((_QWORD *)(v20 > 1), v21 + 1, 1, v24);
      v24[2] = v21 + 1;
      v22 = &v24[2 * v21];
      v22[4] = v17;
      v22[5] = v19;
    }
    else
    {

    }
  }
  if (v4)
  {
    v9 = __clz(__rbit64(v4));
    v4 &= v4 - 1;
    v10 = v9 | (v3 << 6);
LABEL_30:
    v11 = *(id *)(*(_QWORD *)(v1 + 48) + 8 * v10);
    if (!v11)
      goto LABEL_38;
    goto LABEL_31;
  }
  v12 = v3 + 1;
  if (!__OFADD__(v3, 1))
  {
    if (v12 >= v25)
      goto LABEL_38;
    v13 = *(_QWORD *)(v26 + 8 * v12);
    ++v3;
    if (!v13)
    {
      v3 = v8 + 2;
      if (v8 + 2 >= v25)
        goto LABEL_38;
      v13 = *(_QWORD *)(v26 + 8 * v3);
      if (!v13)
      {
        v3 = v8 + 3;
        if (v8 + 3 >= v25)
          goto LABEL_38;
        v13 = *(_QWORD *)(v26 + 8 * v3);
        if (!v13)
        {
          v3 = v8 + 4;
          if (v8 + 4 >= v25)
            goto LABEL_38;
          v13 = *(_QWORD *)(v26 + 8 * v3);
          if (!v13)
          {
            v3 = v8 + 5;
            if (v8 + 5 >= v25)
              goto LABEL_38;
            v13 = *(_QWORD *)(v26 + 8 * v3);
            if (!v13)
            {
              v14 = v8 + 6;
              while (v25 != v14)
              {
                v13 = *(_QWORD *)(v26 + 8 * v14++);
                if (v13)
                {
                  v3 = v14 - 1;
                  goto LABEL_29;
                }
              }
LABEL_38:
              sub_1CA24E6B8();
              return;
            }
          }
        }
      }
    }
LABEL_29:
    v4 = (v13 - 1) & v13;
    v10 = __clz(__rbit64(v13)) + (v3 << 6);
    goto LABEL_30;
  }
  __break(1u);
}

uint64_t MusicCache.read(songSourceIdentifier:readOptions:progressReporter:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v14[2];
  char v15;
  char v16;

  v6 = *(_QWORD *)a3;
  v5 = *(_QWORD *)(a3 + 8);
  v7 = *(_BYTE *)(a3 + 16);
  v8 = *(_BYTE *)(a3 + 17);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED872760);
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1CA8D4E40;
  *(_QWORD *)(v9 + 32) = a1;
  *(_QWORD *)(v9 + 40) = a2;
  sub_1CA24EEC0(0, (unint64_t *)&qword_1ED872320);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8727B0);
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1CA8D51C0;
  *(_QWORD *)(v10 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v10 + 64) = sub_1CA2891BC();
  *(_QWORD *)(v10 + 32) = 0x696669746E656469;
  *(_QWORD *)(v10 + 40) = 0xEA00000000007265;
  *(_QWORD *)(v10 + 96) = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED872270);
  *(_QWORD *)(v10 + 104) = sub_1CA299F74((unint64_t *)&qword_1ED872290, &qword_1ED872270, MEMORY[0x1E0CB1B18]);
  *(_QWORD *)(v10 + 72) = v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v11 = (void *)sub_1CA85BA80();
  v14[0] = v6;
  v14[1] = v5;
  v15 = v7;
  v16 = v8;
  v12 = sub_1CA2C645C((uint64_t)v11, 0, v14);
  swift_bridgeObjectRelease();

  return v12;
}

uint64_t MusicCache.LocationTolerance.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0 + 1;
}

BOOL static MusicCache.MergePolicy.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t MusicCache.MergePolicy.hash(into:)()
{
  return sub_1CA85C374();
}

uint64_t MusicCache.MergePolicy.hashValue.getter()
{
  sub_1CA85C368();
  sub_1CA85C374();
  return sub_1CA85C3B0();
}

uint64_t MusicCache.ReadOptions.init(sortDescriptors:fetchLimit:shouldReadPlaybackInfo:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, char a3@<W2>, char a4@<W3>, uint64_t a5@<X8>)
{
  *(_QWORD *)a5 = result;
  *(_QWORD *)(a5 + 8) = a2;
  *(_BYTE *)(a5 + 16) = a3 & 1;
  *(_BYTE *)(a5 + 17) = a4;
  return result;
}

void MusicCache.WriteOptions.mergePolicy.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

_BYTE *MusicCache.WriteOptions.mergePolicy.setter(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

uint64_t (*MusicCache.WriteOptions.mergePolicy.modify())()
{
  return GEOLocationCoordinate2DMake;
}

uint64_t MusicCache.WriteOptions.shouldOverwriteSourceSongs.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 1);
}

uint64_t MusicCache.WriteOptions.shouldOverwriteSourceSongs.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 1) = result;
  return result;
}

uint64_t (*MusicCache.WriteOptions.shouldOverwriteSourceSongs.modify())()
{
  return GEOLocationCoordinate2DMake;
}

uint64_t MusicCache.WriteOptions.shouldWritePlaybackInfo.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 2);
}

uint64_t MusicCache.WriteOptions.shouldWritePlaybackInfo.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 2) = result;
  return result;
}

uint64_t (*MusicCache.WriteOptions.shouldWritePlaybackInfo.modify())()
{
  return GEOLocationCoordinate2DMake;
}

uint64_t MusicCache.WriteOptions.shouldPreservePlaybackInfo.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 3);
}

uint64_t MusicCache.WriteOptions.shouldPreservePlaybackInfo.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 3) = result;
  return result;
}

uint64_t (*MusicCache.WriteOptions.shouldPreservePlaybackInfo.modify())()
{
  return GEOLocationCoordinate2DMake;
}

PhotosGraph::MusicCache::WriteOptions __swiftcall MusicCache.WriteOptions.init(mergePolicy:shouldOverwriteSourceSongs:shouldWritePlaybackInfo:shouldPreservePlaybackInfo:)(PhotosGraph::MusicCache::MergePolicy mergePolicy, Swift::Bool shouldOverwriteSourceSongs, Swift::Bool shouldWritePlaybackInfo, Swift::Bool shouldPreservePlaybackInfo)
{
  _BYTE *v4;
  PhotosGraph::MusicCache::WriteOptions result;

  *v4 = *(_BYTE *)mergePolicy;
  v4[1] = shouldOverwriteSourceSongs;
  v4[2] = shouldWritePlaybackInfo;
  v4[3] = shouldPreservePlaybackInfo;
  result.mergePolicy = mergePolicy;
  return result;
}

unint64_t sub_1CA2C1ABC()
{
  uint64_t inited;
  uint64_t v1;
  uint64_t v2;
  unint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED872778);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1CA8D51C0;
  *(_QWORD *)(inited + 32) = sub_1CA85B534();
  *(_QWORD *)(inited + 40) = v1;
  *(_BYTE *)(inited + 48) = 1;
  *(_QWORD *)(inited + 56) = sub_1CA85B534();
  *(_QWORD *)(inited + 64) = v2;
  *(_BYTE *)(inited + 72) = 1;
  result = sub_1CA273C50(inited);
  qword_1ED871220 = result;
  return result;
}

_QWORD *static MusicCache.cache(at:)(uint64_t a1)
{
  return sub_1CA2CE368(a1);
}

void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> MusicCache.readMusicCacheInfo()(PhotosGraph::MusicCacheInfo_optional *__return_ptr retstr)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6[38];
  _BYTE v7[304];
  uint64_t v8;
  _OWORD v9[19];

  if (qword_1ED872F80 != -1)
    swift_once();
  v3 = qword_1ED87D078;
  *(double *)&v4 = CACurrentMediaTime();
  sub_1CA2E4280("MusicCacheReadInfo", 18, 2u, v4, 0, v3, (uint64_t)&v8);
  sub_1CA2CEC9C(v9);
  v5 = sub_1CA24EEF8((uint64_t)v9, (uint64_t)v7, &qword_1ED8713C8);
  MEMORY[0x1E0C80A78](v5);
  sub_1CA85BC30();
  if (v1)
  {
    swift_release();
    swift_release();
    sub_1CA24EEF8((uint64_t)v7, (uint64_t)v6, &qword_1ED8713C8);
    sub_1CA2CECE4(v6);
  }
  else
  {
    sub_1CA2E0C94(0);
    swift_release();
    swift_release();
    sub_1CA24EEF8((uint64_t)v7, (uint64_t)v6, &qword_1ED8713C8);
    sub_1CA24EEF8((uint64_t)v6, (uint64_t)retstr, &qword_1ED8713C8);
  }
}

void MusicCache.removeAll(progressReporter:)()
{
  void *v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;

  sub_1CA85BBC4();
  sub_1CA85BC30();

}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> MusicCache.write(musicCacheInfo:)(PhotosGraph::MusicCacheInfo *musicCacheInfo)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE v6[304];

  memcpy(v6, musicCacheInfo, sizeof(v6));
  if (qword_1ED872F80 != -1)
    swift_once();
  v2 = qword_1ED87D078;
  *(double *)&v3 = CACurrentMediaTime();
  v4 = sub_1CA2E4280("MusicCacheWriteInfo", 19, 2u, v3, 0, v2, (uint64_t)&v5);
  MEMORY[0x1E0C80A78](v4);
  sub_1CA85BC30();
  if (!v1)
    sub_1CA2E0C94(0);
  swift_release();
  swift_release();
}

_QWORD *sub_1CA2C2094(char *a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  void (*v12)(char *, uint64_t);
  uint64_t v13;
  char *v14;
  char *v15;
  id v16;
  char *v17;
  id v18;
  objc_super v20;
  objc_class *ObjectType;

  ObjectType = (objc_class *)swift_getObjectType();
  v4 = sub_1CA85A424();
  v5 = *(_QWORD **)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v20 - v9;
  v11 = v1;
  sub_1CA85A3DC();
  sub_1CA85A3E8();
  v12 = (void (*)(char *, uint64_t))v5[1];
  v12(v8, v4);
  v13 = (uint64_t)&v11[OBJC_IVAR___PGMusicCache_cacheURL];
  ((void (*)(char *, char *, uint64_t))v5[4])(&v11[OBJC_IVAR___PGMusicCache_cacheURL], v10, v4);
  v14 = sub_1CA2CDF08(v13);
  if (v2)
  {
    v12(a1, v4);
    v12((char *)v13, v4);

    swift_deallocPartialClassInstance();
  }
  else
  {
    v15 = v14;
    *(_QWORD *)&v11[OBJC_IVAR___PGMusicCache_persistentStoreCoordinator] = v14;
    v16 = objc_allocWithZone(MEMORY[0x1E0C97B88]);
    v17 = v15;
    v18 = objc_msgSend(v16, sel_initWithConcurrencyType_, 1);
    objc_msgSend(v18, sel_setPersistentStoreCoordinator_, v17);

    *(_QWORD *)&v11[OBJC_IVAR___PGMusicCache_managedObjectContext] = v18;
    v20.receiver = v11;
    v20.super_class = ObjectType;
    v5 = objc_msgSendSuper2(&v20, sel_init);
    v12(a1, v4);
  }
  return v5;
}

void sub_1CA2C22A4(uint64_t a1)
{
  uint64_t v1;
  id v3;
  void *v4;
  id v5;
  id v6;
  void *v7;
  id v8;
  void *v9;
  id v10;
  id v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  void *v16;
  id v17;
  id v18;
  void *v19;
  id v20;
  id v21;
  id v22;
  void *v23;
  id v24;
  id v25;
  void *v26;
  id v27;
  id v28;
  id v29;
  void *v30;
  id v31;
  id v32;
  void *v33;
  id v34;
  id v35;
  id v36;
  void *v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  void *v45;
  id v46;
  id v47;
  id v48;
  void *v49;
  id v50;
  id v51;
  id v52;
  id v53;
  void *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  void *v60;
  id v61;
  id v62[4];

  v62[3] = *(id *)MEMORY[0x1E0C80C00];
  v3 = objc_allocWithZone(MEMORY[0x1E0C97B48]);
  swift_bridgeObjectRetain();
  v4 = (void *)sub_1CA85B510();
  swift_bridgeObjectRelease();
  v5 = objc_msgSend(v3, sel_initWithEntityName_, v4);

  v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C97A90]), sel_initWithFetchRequest_, v5);
  objc_msgSend(v6, sel_setResultType_, 2);
  v7 = *(void **)(a1 + OBJC_IVAR___PGMusicCache_managedObjectContext);
  v62[0] = 0;
  v8 = objc_msgSend(v7, sel_executeRequest_error_, v6, v62);
  if (!v8)
  {
    v39 = v62[0];
    sub_1CA85A364();

    swift_willThrow();
    goto LABEL_10;
  }
  v9 = v8;
  v10 = v62[0];

  sub_1CA85BB70();
  if (v1)
  {
LABEL_10:

    return;
  }
  v11 = objc_allocWithZone(MEMORY[0x1E0C97B48]);
  swift_bridgeObjectRetain();
  v12 = (void *)sub_1CA85B510();
  swift_bridgeObjectRelease();
  v13 = objc_msgSend(v11, sel_initWithEntityName_, v12);

  v14 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C97A90]), sel_initWithFetchRequest_, v13);
  objc_msgSend(v14, sel_setResultType_, 2);
  v62[0] = 0;
  v15 = objc_msgSend(v7, sel_executeRequest_error_, v14, v62);
  if (!v15)
  {
    v40 = v62[0];
    sub_1CA85A364();

    swift_willThrow();
    v6 = v14;
    goto LABEL_10;
  }
  v16 = v15;
  v17 = v62[0];

  sub_1CA85BB70();
  v18 = objc_allocWithZone(MEMORY[0x1E0C97B48]);
  swift_bridgeObjectRetain();
  v19 = (void *)sub_1CA85B510();
  swift_bridgeObjectRelease();
  v20 = objc_msgSend(v18, sel_initWithEntityName_, v19);

  v21 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C97A90]), sel_initWithFetchRequest_, v20);
  objc_msgSend(v21, sel_setResultType_, 2);
  v62[0] = 0;
  v22 = objc_msgSend(v7, sel_executeRequest_error_, v21, v62);
  if (!v22)
  {
    v41 = v62[0];
    sub_1CA85A364();

    swift_willThrow();
    v6 = v21;
    goto LABEL_10;
  }
  v23 = v22;
  v24 = v62[0];

  sub_1CA85BB70();
  swift_beginAccess();
  v25 = objc_allocWithZone(MEMORY[0x1E0C97B48]);
  swift_bridgeObjectRetain();
  v26 = (void *)sub_1CA85B510();
  swift_bridgeObjectRelease();
  v27 = objc_msgSend(v25, sel_initWithEntityName_, v26);

  v28 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C97A90]), sel_initWithFetchRequest_, v27);
  objc_msgSend(v28, sel_setResultType_, 2);
  v61 = 0;
  v29 = objc_msgSend(v7, sel_executeRequest_error_, v28, &v61);
  if (!v29)
  {
    v42 = v61;
    sub_1CA85A364();

    swift_willThrow();
    v6 = v28;
    goto LABEL_10;
  }
  v30 = v29;
  v31 = v61;

  sub_1CA85BB70();
  v59 = v28;
  v32 = objc_allocWithZone(MEMORY[0x1E0C97B48]);
  swift_bridgeObjectRetain();
  v33 = (void *)sub_1CA85B510();
  swift_bridgeObjectRelease();
  v34 = objc_msgSend(v32, sel_initWithEntityName_, v33);

  v35 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C97A90]), sel_initWithFetchRequest_, v34);
  objc_msgSend(v35, sel_setResultType_, 2);
  v61 = 0;
  v36 = objc_msgSend(v7, sel_executeRequest_error_, v35, &v61);
  if (!v36)
  {
    v43 = v61;
    sub_1CA85A364();

    swift_willThrow();
    v6 = v35;
    goto LABEL_10;
  }
  v37 = v36;
  v38 = v61;

  sub_1CA85BB70();
  v44 = objc_allocWithZone(MEMORY[0x1E0C97B48]);
  swift_bridgeObjectRetain();
  v45 = (void *)sub_1CA85B510();
  swift_bridgeObjectRelease();
  v46 = objc_msgSend(v44, sel_initWithEntityName_, v45);

  v47 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C97A90]), sel_initWithFetchRequest_, v46);
  objc_msgSend(v47, sel_setResultType_, 2);
  v61 = 0;
  v48 = objc_msgSend(v7, sel_executeRequest_error_, v47, &v61);
  if (!v48)
  {
    v52 = v61;
    sub_1CA85A364();

    swift_willThrow();
LABEL_18:

    v6 = v47;
    goto LABEL_10;
  }
  v49 = v48;
  v50 = v61;

  sub_1CA85BB70();
  v60 = v21;
  objc_msgSend(v7, sel_reset);
  v61 = 0;
  if (!objc_msgSend(v7, sel_save_, &v61))
  {
    v53 = v61;
    v54 = (void *)sub_1CA85A364();

    swift_willThrow();
    swift_getErrorValue();
    v55 = sub_1CA85C308();
    v57 = v56;
    sub_1CA2CEE20();
    swift_allocError();
    *(_QWORD *)v58 = v55;
    *(_QWORD *)(v58 + 8) = v57;
    *(_BYTE *)(v58 + 16) = 0;
    swift_willThrow();

    goto LABEL_18;
  }
  v51 = v61;
  sub_1CA85BB70();

}

void sub_1CA2C2B50()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  _QWORD v9[8];

  sub_1CA85BB64();
  if (!v0)
  {
    v1 = sub_1CA85BBAC();
    v9[7] = v9;
    v2 = (void *)v9[3];
    v3 = (void *)v9[4];
    v4 = (void *)v9[5];
    MEMORY[0x1E0C80A78](v1);
    v6 = v5;
    v8 = v7;
    sub_1CA85BC30();

  }
}

void sub_1CA2C2C80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  id v9;
  void *v10;
  id v11;
  void *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  void *v19;
  uint64_t v20;
  BOOL v21;
  id v22;
  id v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  id v31[2];

  v31[1] = *(id *)MEMORY[0x1E0C80C00];
  v9 = objc_allocWithZone(MEMORY[0x1E0C97B48]);
  swift_bridgeObjectRetain();
  v10 = (void *)sub_1CA85B510();
  swift_bridgeObjectRelease();
  v11 = objc_msgSend(v9, sel_initWithEntityName_, v10);

  objc_msgSend(v11, sel_setPredicate_, a1);
  v12 = *(void **)(a2 + OBJC_IVAR___PGMusicCache_managedObjectContext);
  type metadata accessor for SongSourceEntry();
  v13 = sub_1CA85BC3C();
  if (!v6)
  {
    v14 = v13;
    sub_1CA85BB70();
    if (v14 >> 62)
      goto LABEL_17;
    v15 = *(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10);
    while (1)
    {
      v16 = a6;
      v29 = v11;
      if (!v15)
        break;
      v11 = (id)(v14 & 0xC000000000000001);
      v17 = 4;
      while (1)
      {
        v18 = v11 ? (id)MEMORY[0x1CAA4DD64](v17 - 4, v14) : *(id *)(v14 + 8 * v17);
        v19 = v18;
        v20 = v17 - 3;
        if (__OFADD__(v17 - 4, 1))
          break;
        objc_msgSend(v12, sel_deleteObject_, v18);
        sub_1CA85BB58();

        ++v17;
        v21 = v20 == v15;
        v16 = a6;
        if (v21)
          goto LABEL_13;
      }
      __break(1u);
LABEL_17:
      swift_bridgeObjectRetain();
      sub_1CA85C08C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      v15 = sub_1CA85C08C();
      swift_bridgeObjectRelease();
    }
LABEL_13:
    swift_bridgeObjectRelease();
    sub_1CA2CF16C(v16, v12);
    v11 = v29;
    sub_1CA2CF3E4();
    v31[0] = 0;
    if ((objc_msgSend(v12, sel_save_, v31) & 1) != 0)
    {
      v22 = v31[0];
      sub_1CA85BB70();
    }
    else
    {
      v23 = v31[0];
      v24 = (void *)sub_1CA85A364();

      swift_willThrow();
      swift_getErrorValue();
      v25 = sub_1CA85C308();
      v27 = v26;
      sub_1CA2CEE20();
      swift_allocError();
      *(_QWORD *)v28 = v25;
      *(_QWORD *)(v28 + 8) = v27;
      *(_BYTE *)(v28 + 16) = 0;
      swift_willThrow();

    }
  }

}

uint64_t sub_1CA2C2FE8()
{
  uint64_t v0;
  uint64_t result;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  uint64_t v7;

  result = sub_1CA85BB64();
  if (!v0)
  {
    v7 = MEMORY[0x1E0DEE9D8];
    v2 = (void *)sub_1CA85BB94();
    v4 = v3;
    v6 = v5;
    MEMORY[0x1E0C80A78](v2);
    sub_1CA85BC30();

    return v7;
  }
  return result;
}

void sub_1CA2C3100(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t *v14;
  id v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t *v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  id v25;
  BOOL v26;
  uint64_t v27;
  id v28;
  unint64_t v29;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id v36[3];
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  unint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t *v44;

  v38 = a6;
  v43 = a5;
  v44 = a4;
  v41 = a3;
  v8 = type metadata accessor for SongSource();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x1E0C80A78](v8);
  v12 = (char *)v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v14 = (uint64_t *)((char *)v36 - v13);
  v15 = objc_allocWithZone(MEMORY[0x1E0C97B48]);
  swift_bridgeObjectRetain();
  v16 = (void *)sub_1CA85B510();
  swift_bridgeObjectRelease();
  v17 = (uint64_t)objc_msgSend(v15, sel_initWithEntityName_, v16);

  objc_msgSend((id)v17, sel_setPredicate_, a1);
  type metadata accessor for SongSourceEntry();
  v18 = sub_1CA85BC3C();
  if (v6)
  {

  }
  else
  {
    v19 = v18;
    v42 = v12;
    v40 = v9;
    sub_1CA85BB70();
    v41 = (unint64_t)v19 >> 62;
    if ((unint64_t)v19 >> 62)
      goto LABEL_23;
    v20 = *(_QWORD *)((v19 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
LABEL_5:
    v21 = (unint64_t *)v44;
    v22 = (uint64_t)v42;
    v36[0] = (id)v17;
    if (v20)
    {
      v39 = v19 & 0xC000000000000001;
      v23 = (void *)(v19 & 0xFFFFFFFFFFFFFF8);
      v36[2] = (id)(v19 & 0xFFFFFFFFFFFFFF8);
      v37 = v20;
      if (v19 < 0)
        v23 = (void *)v19;
      v36[1] = v23;
      v17 = 4;
      do
      {
        v24 = v17 - 4;
        if (v39)
        {
          v25 = (id)MEMORY[0x1CAA4DD64](v17 - 4, v19);
          v26 = __OFADD__(v24, 1);
          v27 = v17 - 3;
          if (v26)
            goto LABEL_22;
        }
        else
        {
          v25 = *(id *)(v19 + 8 * v17);
          v26 = __OFADD__(v24, 1);
          v27 = v17 - 3;
          if (v26)
          {
LABEL_22:
            __break(1u);
LABEL_23:
            swift_bridgeObjectRetain();
            v20 = sub_1CA85C08C();
            goto LABEL_5;
          }
        }
        v28 = v25;
        sub_1CA2C34F4(v28, v14);
        sub_1CA24EE38((uint64_t)v14, v22, (uint64_t (*)(_QWORD))type metadata accessor for SongSource);
        v29 = *v21;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *v21 = v29;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          v29 = sub_1CA26CCE8(0, *(_QWORD *)(v29 + 16) + 1, 1, v29);
          *v21 = v29;
        }
        v32 = *(_QWORD *)(v29 + 16);
        v31 = *(_QWORD *)(v29 + 24);
        v33 = v40;
        if (v32 >= v31 >> 1)
        {
          v35 = sub_1CA26CCE8(v31 > 1, v32 + 1, 1, v29);
          v33 = v40;
          v29 = v35;
          *v44 = v35;
        }
        *(_QWORD *)(v29 + 16) = v32 + 1;
        v34 = v29
            + ((*(unsigned __int8 *)(v33 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80))
            + *(_QWORD *)(v33 + 72) * v32;
        v22 = (uint64_t)v42;
        sub_1CA24EE7C((uint64_t)v42, v34, (uint64_t (*)(_QWORD))type metadata accessor for SongSource);
        if (v41)
        {
          swift_bridgeObjectRetain();
          sub_1CA85C08C();
          swift_bridgeObjectRelease();
        }
        sub_1CA85BB58();
        sub_1CA2669CC((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for SongSource);

        ++v17;
        v21 = (unint64_t *)v44;
      }
      while (v27 != v37);
    }
    swift_bridgeObjectRelease_n();
    sub_1CA85BB70();
    sub_1CA85BB70();

  }
}

void sub_1CA2C34F4(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int *v22;
  uint64_t *v23;
  id v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  id v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  id v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t *v46;
  uint64_t inited;
  uint64_t v48;
  double v49;
  double v50;
  double v51;
  double v52;
  _QWORD *v53;
  char *v54;
  uint64_t v55;
  double v56;
  double v57;
  double v58;
  double v59;
  id v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65[4];
  uint64_t v66;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8711C0);
  v6 = MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v65 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)v65 - v9;
  v11 = objc_msgSend(a1, sel_identifier);
  if (!v11)
  {
    sub_1CA2CEE20();
    swift_allocError();
    *(_OWORD *)v21 = xmmword_1CA8D9C60;
    *(_BYTE *)(v21 + 16) = 2;
    swift_willThrow();

    return;
  }
  v12 = v11;
  v13 = sub_1CA85B534();
  v15 = v14;

  *a2 = v13;
  a2[1] = v15;
  v16 = objc_msgSend(a1, sel_version);
  v66 = v2;
  v65[3] = v15;
  if (v16)
  {
    v17 = v16;
    v18 = sub_1CA85B534();
    v20 = v19;

  }
  else
  {
    v18 = 0;
    v20 = 0;
  }
  v22 = (int *)type metadata accessor for SongSource();
  v23 = (uint64_t *)((char *)a2 + v22[11]);
  *v23 = v18;
  v23[1] = v20;
  v24 = objc_msgSend(a1, sel_category);
  if (v24)
  {
    v25 = v24;
    v26 = sub_1CA85B534();
    v28 = v27;

  }
  else
  {
    v26 = 0;
    v28 = 0;
  }
  v29 = (uint64_t *)((char *)a2 + v22[12]);
  *v29 = v26;
  v29[1] = v28;
  v30 = objc_msgSend(a1, sel_dateLastUpdated);
  if (v30)
  {
    v31 = v30;
    sub_1CA85A574();

    v32 = sub_1CA85A5B0();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v10, 0, 1, v32);
  }
  else
  {
    v33 = sub_1CA85A5B0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v10, 1, 1, v33);
  }
  v34 = (uint64_t)a2 + v22[5];
  sub_1CA24EEF8((uint64_t)v10, v34, &qword_1ED8711C0);
  v35 = objc_msgSend(a1, sel_songs);
  if (v35)
  {
    type metadata accessor for SongEntry();
    sub_1CA23CC98(&qword_1ED8720F0, (uint64_t (*)(uint64_t))type metadata accessor for SongEntry, MEMORY[0x1E0DEFCF8]);
    v36 = sub_1CA85B984();

    if ((v36 & 0xC000000000000001) != 0)
      v35 = (id)sub_1CA85BE04();
    else
      v35 = *(id *)(v36 + 16);
    swift_bridgeObjectRelease();
  }
  *(uint64_t *)((char *)a2 + v22[6]) = (uint64_t)v35;
  v37 = objc_msgSend(a1, sel_date);
  v65[2] = (uint64_t)v29;
  if (v37)
  {
    v38 = v37;
    sub_1CA85A574();

    v39 = sub_1CA85A5B0();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 56))(v8, 0, 1, v39);
  }
  else
  {
    v40 = sub_1CA85A5B0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56))(v8, 1, 1, v40);
  }
  v41 = (uint64_t)a2 + v22[7];
  sub_1CA24EEF8((uint64_t)v8, v41, &qword_1ED8711C0);
  v42 = objc_msgSend(a1, sel_geohash);
  if (v42)
  {
    v65[0] = v34;
    v65[1] = (uint64_t)v23;
    v43 = sub_1CA85B534();
    v45 = v44;
    swift_bridgeObjectRetain();

    v46 = (uint64_t *)((char *)a2 + v22[8]);
    *v46 = v43;
    v46[1] = v45;
    *((_BYTE *)a2 + v22[13]) = 1;
    type metadata accessor for Geohash();
    inited = swift_initStackObject();
    *(_QWORD *)(inited + 16) = 0;
    *(_QWORD *)(inited + 24) = 0;
    v48 = v66;
    sub_1CA488FEC(v43, v45);
    if (v48)
    {
      swift_setDeallocating();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      sub_1CA267BE8(v65[0], &qword_1ED8711C0);
      sub_1CA267BE8(v41, &qword_1ED8711C0);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return;
    }
    v56 = v49;
    v57 = v50;
    v58 = v51;
    v59 = v52;
    swift_bridgeObjectRelease();
    v60 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C9E3B8]), sel_initWithLatitude_longitude_, (v56 + v57) * 0.5, (v58 + v59) * 0.5);
    swift_setDeallocating();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    objc_msgSend(v60, sel_coordinate);
    v61 = (char *)a2 + v22[9];
    *(_QWORD *)v61 = v62;
    v61[8] = 0;
    objc_msgSend(v60, sel_coordinate);
    v64 = v63;

    v55 = v22[10];
    *(uint64_t *)((char *)a2 + v55) = v64;
  }
  else
  {

    v53 = (uint64_t *)((char *)a2 + v22[8]);
    *v53 = 0;
    v53[1] = 0;
    *((_BYTE *)a2 + v22[13]) = 1;
    v54 = (char *)a2 + v22[9];
    *(_QWORD *)v54 = 0;
    v54[8] = 1;
    v55 = v22[10];
    *(uint64_t *)((char *)a2 + v55) = 0;
  }
  *((_BYTE *)a2 + v55 + 8) = v42 == 0;
}

uint64_t static MusicCache.temporaryCacheDirectoryURL()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  NSString *v9;
  void *v10;
  id v11;
  void *v12;
  id v14;
  void *v15;
  unsigned int v16;
  uint64_t (*v17)(char *, uint64_t);
  id v18;
  id v19;
  void (*v20)(uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24[2];

  v24[1] = *(id *)MEMORY[0x1E0C80C00];
  v2 = sub_1CA85A5E0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_1CA85A424();
  v6 = *(_QWORD *)(v23 - 8);
  MEMORY[0x1E0C80A78](v23);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = NSTemporaryDirectory();
  sub_1CA85B534();

  sub_1CA85A3A0();
  swift_bridgeObjectRelease();
  sub_1CA85A5D4();
  sub_1CA85A5BC();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  sub_1CA85A3DC();
  swift_bridgeObjectRelease();
  v10 = (void *)objc_opt_self();
  v11 = objc_msgSend(v10, sel_defaultManager);
  sub_1CA85A40C();
  v12 = (void *)sub_1CA85B510();
  swift_bridgeObjectRelease();
  LOBYTE(v5) = objc_msgSend(v11, sel_fileExistsAtPath_, v12);

  if ((v5 & 1) != 0)
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v23);
  v14 = objc_msgSend(v10, sel_defaultManager);
  v15 = (void *)sub_1CA85A3C4();
  v24[0] = 0;
  v16 = objc_msgSend(v14, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v15, 1, 0, v24);

  if (v16)
  {
    v17 = *(uint64_t (**)(char *, uint64_t))(v6 + 8);
    v18 = v24[0];
    return v17(v8, v23);
  }
  else
  {
    v19 = v24[0];
    sub_1CA85A364();

    swift_willThrow();
    v20 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
    v21 = v23;
    v20(a1, v23);
    return ((uint64_t (*)(char *, uint64_t))v20)(v8, v21);
  }
}

id MusicCache.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void MusicCache.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id MusicCache.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t MusicCache.removeSongSources(songSourceCategory:progressReporter:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED872760);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1CA8D4E40;
  *(_QWORD *)(v4 + 32) = a1;
  *(_QWORD *)(v4 + 40) = a2;
  swift_bridgeObjectRetain();
  MusicCache.removeSongSources(songSourceCategories:progressReporter:)(v4);
  return swift_bridgeObjectRelease();
}

void MusicCache.removeSongSources(songSourceCategories:progressReporter:)(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  id v9;

  sub_1CA24EEC0(0, (unint64_t *)&qword_1ED872320);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8727B0);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1CA8D51C0;
  *(_QWORD *)(v2 + 56) = MEMORY[0x1E0DEA968];
  v3 = sub_1CA2891BC();
  *(_QWORD *)(v2 + 64) = v3;
  *(_QWORD *)(v2 + 32) = 0x79726F6765746163;
  *(_QWORD *)(v2 + 40) = 0xE800000000000000;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED872270);
  *(_QWORD *)(v2 + 96) = v4;
  v5 = sub_1CA299F74((unint64_t *)&qword_1ED872290, &qword_1ED872270, MEMORY[0x1E0CB1B18]);
  *(_QWORD *)(v2 + 104) = v5;
  *(_QWORD *)(v2 + 72) = a1;
  swift_bridgeObjectRetain();
  v6 = (void *)sub_1CA85BA80();
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1CA8D51C0;
  *(_QWORD *)(v7 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v7 + 64) = v3;
  *(_QWORD *)(v7 + 32) = 0x79726F6765746163;
  *(_QWORD *)(v7 + 40) = 0xE800000000000000;
  *(_QWORD *)(v7 + 96) = v4;
  *(_QWORD *)(v7 + 104) = v5;
  *(_QWORD *)(v7 + 72) = a1;
  swift_bridgeObjectRetain();
  v8 = (void *)sub_1CA85BA80();
  v9 = v6;
  sub_1CA2C2B50();

}

uint64_t MusicCache.readSongSources(songSourceCategory:progressReporter:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED872760);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1CA8D4E40;
  *(_QWORD *)(v4 + 32) = a1;
  *(_QWORD *)(v4 + 40) = a2;
  sub_1CA24EEC0(0, (unint64_t *)&qword_1ED872320);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8727B0);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1CA8D51C0;
  *(_QWORD *)(v5 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v5 + 64) = sub_1CA2891BC();
  *(_QWORD *)(v5 + 32) = 0x79726F6765746163;
  *(_QWORD *)(v5 + 40) = 0xE800000000000000;
  *(_QWORD *)(v5 + 96) = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED872270);
  *(_QWORD *)(v5 + 104) = sub_1CA299F74((unint64_t *)&qword_1ED872290, &qword_1ED872270, MEMORY[0x1E0CB1B18]);
  *(_QWORD *)(v5 + 72) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v6 = (void *)sub_1CA85BA80();
  v7 = sub_1CA2C2FE8();
  swift_bridgeObjectRelease();

  return v7;
}

uint64_t MusicCache.readSongSources(songSourceCategories:progressReporter:)(uint64_t a1, uint64_t a2)
{
  return sub_1CA2CA7A4(a1, a2, 0x79726F6765746163, 0xE800000000000000);
}

uint64_t MusicCache.readAllSongSources(progressReporter:)()
{
  return sub_1CA2C2FE8();
}

void sub_1CA2C4394(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  id v4;
  void *v5;
  id v6;
  unint64_t v7;
  unint64_t v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  void *v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  double v17;
  _QWORD *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  double v23;
  uint64_t v24;
  _QWORD v25[38];
  uint64_t __src[38];
  _BYTE v27[288];
  _OWORD v28[18];
  _BYTE v29[304];

  v4 = objc_allocWithZone(MEMORY[0x1E0C97B48]);
  swift_bridgeObjectRetain();
  v5 = (void *)sub_1CA85B510();
  swift_bridgeObjectRelease();
  v6 = objc_msgSend(v4, sel_initWithEntityName_, v5);

  type metadata accessor for MusicCacheInfoEntry();
  v7 = sub_1CA85BC3C();
  if (v2)
  {

    return;
  }
  v8 = v7;
  if (!(v7 >> 62))
  {
    if (*(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_5;
LABEL_13:

    swift_bridgeObjectRelease();
    sub_1CA2CEC9C(__src);
LABEL_14:
    sub_1CA24EEF8((uint64_t)__src, (uint64_t)v29, &qword_1ED8713C8);
    sub_1CA24EEF8(a2, (uint64_t)__src, &qword_1ED8713C8);
    sub_1CA24EEF8((uint64_t)v29, a2, &qword_1ED8713C8);
    sub_1CA2CECE4(__src);
    return;
  }
  swift_bridgeObjectRetain();
  v24 = sub_1CA85C08C();
  swift_bridgeObjectRelease();
  if (!v24)
    goto LABEL_13;
LABEL_5:
  if ((v8 & 0xC000000000000001) != 0)
  {
    v9 = (id)MEMORY[0x1CAA4DD64](0, v8);
    goto LABEL_8;
  }
  if (*(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v9 = *(id *)(v8 + 32);
LABEL_8:
    v10 = v9;
    swift_bridgeObjectRelease();
    sub_1CA2D0498(v28);
    v11 = v10;
    v12 = objc_msgSend(v11, sel_musicBagContentsAsData);
    if (v12)
    {
      v13 = v12;
      v14 = sub_1CA85A490();
      v16 = v15;

      sub_1CA85A31C();
      swift_allocObject();
      sub_1CA85A310();
      sub_1CA2D04C4();
      sub_1CA85A304();
      sub_1CA260204(v14, v16);
      swift_release();
      memcpy(v25, __src, 0x120uLL);
      GEOLocationCoordinate2DMake(v17);
      v18 = v25;
    }
    else
    {
      v18 = v28;
    }
    sub_1CA24EEF8((uint64_t)v18, (uint64_t)v27, &qword_1ED871560);
    v19 = objc_msgSend(v11, sel_version);
    v20 = sub_1CA85B534();
    v22 = v21;

    v25[0] = v20;
    v25[1] = v22;
    sub_1CA24EEF8((uint64_t)v27, (uint64_t)&v25[2], &qword_1ED871560);
    memcpy(__src, v25, sizeof(__src));
    GEOLocationCoordinate2DMake(v23);
    goto LABEL_14;
  }
  __break(1u);
}

void sub_1CA2C46A8(uint64_t a1, const void *a2)
{
  uint64_t v2;
  id v5;
  void *v6;
  id v7;
  void *v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t i;
  id v13;
  void *v14;
  id v15;
  id v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id __dst[40];

  __dst[38] = *(id *)MEMORY[0x1E0C80C00];
  v5 = objc_allocWithZone(MEMORY[0x1E0C97B48]);
  swift_bridgeObjectRetain();
  v6 = (void *)sub_1CA85B510();
  swift_bridgeObjectRelease();
  v7 = objc_msgSend(v5, sel_initWithEntityName_, v6);

  v8 = *(void **)(a1 + OBJC_IVAR___PGMusicCache_managedObjectContext);
  type metadata accessor for MusicCacheInfoEntry();
  v9 = sub_1CA85BC3C();
  if (!v2)
  {
    v10 = v9;
    if (v9 >> 62)
    {
      swift_bridgeObjectRetain();
      v11 = sub_1CA85C08C();
      swift_bridgeObjectRelease();
      if (v11)
        goto LABEL_4;
    }
    else
    {
      v11 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v11)
      {
LABEL_4:
        if (v11 < 1)
          __break(1u);
        for (i = 0; i != v11; ++i)
        {
          if ((v10 & 0xC000000000000001) != 0)
            v13 = (id)MEMORY[0x1CAA4DD64](i, v10);
          else
            v13 = *(id *)(v10 + 8 * i + 32);
          v14 = v13;
          objc_msgSend(v8, sel_deleteObject_, v13);

        }
      }
    }
    swift_bridgeObjectRelease();
    memcpy(__dst, a2, 0x130uLL);

    __dst[0] = 0;
    if ((objc_msgSend(v8, sel_save_, __dst) & 1) != 0)
    {
      v15 = __dst[0];
    }
    else
    {
      v16 = __dst[0];
      v17 = (void *)sub_1CA85A364();

      swift_willThrow();
      swift_getErrorValue();
      v18 = sub_1CA85C308();
      v20 = v19;
      sub_1CA2CEE20();
      swift_allocError();
      *(_QWORD *)v21 = v18;
      *(_QWORD *)(v21 + 8) = v20;
      *(_BYTE *)(v21 + 16) = 0;
      swift_willThrow();

    }
  }

}

Swift::Void __swiftcall MusicCache.removeMusicCacheInfo()()
{
  sub_1CA85BC30();
}

void sub_1CA2C49F8(uint64_t a1)
{
  uint64_t v1;
  id v3;
  void *v4;
  id v5;
  void *v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t i;
  id v11;
  void *v12;
  id v13;
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20[2];

  v20[1] = *(id *)MEMORY[0x1E0C80C00];
  v3 = objc_allocWithZone(MEMORY[0x1E0C97B48]);
  swift_bridgeObjectRetain();
  v4 = (void *)sub_1CA85B510();
  swift_bridgeObjectRelease();
  v5 = objc_msgSend(v3, sel_initWithEntityName_, v4);

  v6 = *(void **)(a1 + OBJC_IVAR___PGMusicCache_managedObjectContext);
  type metadata accessor for MusicCacheInfoEntry();
  v7 = sub_1CA85BC3C();
  if (!v1)
  {
    v8 = v7;
    if (v7 >> 62)
    {
      swift_bridgeObjectRetain();
      v9 = sub_1CA85C08C();
      swift_bridgeObjectRelease();
      if (v9)
        goto LABEL_4;
    }
    else
    {
      v9 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v9)
      {
LABEL_4:
        if (v9 < 1)
          __break(1u);
        for (i = 0; i != v9; ++i)
        {
          if ((v8 & 0xC000000000000001) != 0)
            v11 = (id)MEMORY[0x1CAA4DD64](i, v8);
          else
            v11 = *(id *)(v8 + 8 * i + 32);
          v12 = v11;
          objc_msgSend(v6, sel_deleteObject_, v11);

        }
      }
    }
    swift_bridgeObjectRelease();
    v20[0] = 0;
    if ((objc_msgSend(v6, sel_save_, v20) & 1) != 0)
    {
      v13 = v20[0];
    }
    else
    {
      v14 = v20[0];
      v15 = (void *)sub_1CA85A364();

      swift_willThrow();
      swift_getErrorValue();
      v16 = sub_1CA85C308();
      v18 = v17;
      sub_1CA2CEE20();
      swift_allocError();
      *(_QWORD *)v19 = v16;
      *(_QWORD *)(v19 + 8) = v18;
      *(_BYTE *)(v19 + 16) = 0;
      swift_willThrow();

    }
  }

}

uint64_t MusicCache.readCacherStatus(category:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void (*v11)(char *, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v16[2];

  v7 = sub_1CA85B2D0();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1CA85BBE8();
  if (qword_1ED8723F0 != -1)
    swift_once();
  sub_1CA85B2C4();
  sub_1CA85B2A0();
  v11 = *(void (**)(char *, uint64_t))(v8 + 8);
  v11(v10, v7);
  v12 = type metadata accessor for CacherStatus(0);
  v13 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(a3, 1, 1, v12);
  MEMORY[0x1E0C80A78](v13);
  v16[-4] = a1;
  v16[-3] = a2;
  v16[-2] = v3;
  v16[-1] = a3;
  v14 = v16[1];
  sub_1CA85BC30();
  if (v14)
    return sub_1CA267BE8(a3, &qword_1ED874560);
  sub_1CA85BBDC();
  sub_1CA85B2C4();
  sub_1CA85B2A0();
  return ((uint64_t (*)(char *, uint64_t))v11)(v10, v7);
}

void sub_1CA2C4E30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  id v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  void *v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  id v20;
  void *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v27 = a4;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED874560);
  MEMORY[0x1E0C80A78](v7);
  v9 = (uint64_t *)((char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = objc_allocWithZone(MEMORY[0x1E0C97B48]);
  swift_bridgeObjectRetain();
  v11 = (void *)sub_1CA85B510();
  swift_bridgeObjectRelease();
  v12 = objc_msgSend(v10, sel_initWithEntityName_, v11);

  sub_1CA24EEC0(0, (unint64_t *)&qword_1ED872320);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8727B0);
  v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1CA8D51C0;
  v14 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v13 + 56) = MEMORY[0x1E0DEA968];
  v15 = sub_1CA2891BC();
  *(_QWORD *)(v13 + 32) = 0x79726F6765746163;
  *(_QWORD *)(v13 + 40) = 0xE800000000000000;
  *(_QWORD *)(v13 + 96) = v14;
  *(_QWORD *)(v13 + 104) = v15;
  *(_QWORD *)(v13 + 64) = v15;
  *(_QWORD *)(v13 + 72) = a1;
  *(_QWORD *)(v13 + 80) = a2;
  swift_bridgeObjectRetain();
  v16 = (void *)sub_1CA85BA80();
  objc_msgSend(v12, sel_setPredicate_, v16);

  type metadata accessor for CacherStatusEntry();
  v17 = sub_1CA85BC3C();
  if (v4)
  {

    return;
  }
  v18 = v17;
  v19 = v27;
  if (!(v17 >> 62))
  {
    if (*(_QWORD *)((v17 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_5;
LABEL_11:
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  swift_bridgeObjectRetain();
  v24 = sub_1CA85C08C();
  swift_bridgeObjectRelease();
  if (!v24)
    goto LABEL_11;
LABEL_5:
  if ((v18 & 0xC000000000000001) != 0)
  {
    v20 = (id)MEMORY[0x1CAA4DD64](0, v18);
LABEL_8:
    v21 = v20;
    swift_bridgeObjectRelease();
    if (v21)
    {
      v22 = v21;
      sub_1CA30A2F0(v9);

      v23 = type metadata accessor for CacherStatus(0);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v9, 0, 1, v23);
LABEL_13:
      sub_1CA2D03FC((uint64_t)v9, v19);
      return;
    }
LABEL_12:

    v25 = type metadata accessor for CacherStatus(0);
    (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v9, 1, 1, v25);
    goto LABEL_13;
  }
  if (*(_QWORD *)((v18 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v20 = *(id *)(v18 + 32);
    goto LABEL_8;
  }
  __break(1u);
}

uint64_t MusicCache.readAllCacherStatus(progressReporter:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  void (*v6)(char *, uint64_t);
  void *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;

  v2 = sub_1CA85B2D0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1CA85BBE8();
  if (qword_1ED8723F0 != -1)
    swift_once();
  sub_1CA85B2C4();
  sub_1CA85B2A0();
  v6 = *(void (**)(char *, uint64_t))(v3 + 8);
  v6(v5, v2);
  v7 = (void *)sub_1CA85BB7C();
  v9 = v8;
  v13 = MEMORY[0x1E0DEE9D8];
  v10 = MEMORY[0x1E0C80A78](v7);
  *(&v12 - 4) = v0;
  *(&v12 - 3) = v10;
  *(&v12 - 2) = (uint64_t)&v13;
  *(&v12 - 1) = (uint64_t)v9;
  sub_1CA85BC30();
  if (v1)
  {

    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_1CA85BBDC();
    sub_1CA85B2C4();
    sub_1CA85B2A0();

    v6(v5, v2);
    return v13;
  }
}

void sub_1CA2C5300(uint64_t a1, unint64_t a2, unint64_t *a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  id v14;
  void *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  void *v23;
  id v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t *v38;
  unint64_t v39;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD v45[2];
  id v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t *v52;

  v47 = a4;
  v52 = a3;
  v49 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8711C0);
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v45 - v8;
  v10 = type metadata accessor for CacherStatus(0);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (_QWORD *)((char *)v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = objc_allocWithZone(MEMORY[0x1E0C97B48]);
  swift_bridgeObjectRetain();
  v15 = (void *)sub_1CA85B510();
  swift_bridgeObjectRelease();
  v16 = objc_msgSend(v14, sel_initWithEntityName_, v15);

  type metadata accessor for CacherStatusEntry();
  v17 = v51;
  v18 = sub_1CA85BC3C();
  if (v17)
    goto LABEL_2;
  v19 = v18;
  v50 = v10;
  v51 = v11;
  v46 = v16;
  sub_1CA85BB70();
  v45[1] = 0;
  v16 = v46;
  if (!(v19 >> 62))
  {
    v20 = *(_QWORD *)((v19 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v20)
      goto LABEL_5;
LABEL_26:
    swift_bridgeObjectRelease();
LABEL_27:
    sub_1CA85BB70();
LABEL_2:

    return;
  }
  swift_bridgeObjectRetain();
  v20 = sub_1CA85C08C();
  swift_bridgeObjectRelease();
  if (!v20)
    goto LABEL_26;
LABEL_5:
  if (v20 >= 1)
  {
    v21 = 0;
    v48 = v19 & 0xC000000000000001;
    v49 = v19;
    do
    {
      if (v48)
        v22 = (id)MEMORY[0x1CAA4DD64](v21, v19);
      else
        v22 = *(id *)(v19 + 8 * v21 + 32);
      v23 = v22;
      v24 = objc_msgSend(v22, sel_category);
      if (v24)
      {
        v25 = v24;
        v26 = sub_1CA85B534();
        v28 = v27;

      }
      else
      {
        v26 = 0;
        v28 = 0;
      }
      v29 = objc_msgSend(v23, sel_lastSuccessfulFetchedDate);
      if (v29)
      {
        v30 = v29;
        sub_1CA85A574();

        v31 = sub_1CA85A5B0();
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v9, 0, 1, v31);
      }
      else
      {
        v32 = sub_1CA85A5B0();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v9, 1, 1, v32);
      }
      v33 = objc_msgSend(v23, sel_lastFailedFetchedDate);
      if (v33)
      {
        v34 = v33;
        sub_1CA85A574();

        v35 = sub_1CA85A5B0();
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v7, 0, 1, v35);
      }
      else
      {
        v36 = sub_1CA85A5B0();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v7, 1, 1, v36);
      }
      *v13 = v26;
      v13[1] = v28;
      v37 = v50;
      sub_1CA24EEF8((uint64_t)v9, (uint64_t)v13 + *(int *)(v50 + 20), &qword_1ED8711C0);
      sub_1CA24EEF8((uint64_t)v7, (uint64_t)v13 + *(int *)(v37 + 24), &qword_1ED8711C0);
      v38 = v52;
      v39 = *v52;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *v38 = v39;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        v39 = sub_1CA26CCFC(0, *(_QWORD *)(v39 + 16) + 1, 1, v39);
        *v38 = v39;
      }
      v42 = *(_QWORD *)(v39 + 16);
      v41 = *(_QWORD *)(v39 + 24);
      v43 = v51;
      if (v42 >= v41 >> 1)
      {
        v44 = sub_1CA26CCFC(v41 > 1, v42 + 1, 1, v39);
        v43 = v51;
        v39 = v44;
        *v52 = v44;
      }
      ++v21;
      *(_QWORD *)(v39 + 16) = v42 + 1;
      sub_1CA24EE7C((uint64_t)v13, v39+ ((*(unsigned __int8 *)(v43 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80))+ *(_QWORD *)(v43 + 72) * v42, type metadata accessor for CacherStatus);

      v19 = v49;
    }
    while (v20 != v21);
    swift_bridgeObjectRelease();
    v16 = v46;
    goto LABEL_27;
  }
  __break(1u);
}

uint64_t MusicCache.write(cacherStatus:)(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(char *, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v4 = sub_1CA85B2D0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = a1[1];
  if (v8)
  {
    v16 = v2;
    v9 = *a1;
    sub_1CA85BBE8();
    if (qword_1ED8723F0 != -1)
      swift_once();
    sub_1CA85B2C4();
    sub_1CA85B2A0();
    v10 = *(uint64_t (**)(char *, uint64_t))(v5 + 8);
    v11 = v10(v7, v4);
    MEMORY[0x1E0C80A78](v11);
    *(&v15 - 4) = v9;
    *(&v15 - 3) = v8;
    *(&v15 - 2) = v1;
    *(&v15 - 1) = (uint64_t)a1;
    v12 = v16;
    result = sub_1CA85BC30();
    if (!v12)
    {
      sub_1CA85BBDC();
      sub_1CA85B2C4();
      sub_1CA85B2A0();
      return v10(v7, v4);
    }
  }
  else
  {
    sub_1CA2CEE20();
    swift_allocError();
    *(_OWORD *)v14 = xmmword_1CA8D9C70;
    *(_BYTE *)(v14 + 16) = 2;
    return swift_willThrow();
  }
  return result;
}

void sub_1CA2C5954(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v4;
  id v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  void *v15;
  void *v16;
  unint64_t v17;
  unint64_t v18;
  id v19;
  id v20;
  uint64_t v21;
  id v22;
  id v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29[2];

  v29[1] = *(id *)MEMORY[0x1E0C80C00];
  v9 = objc_allocWithZone(MEMORY[0x1E0C97B48]);
  swift_bridgeObjectRetain();
  v10 = (void *)sub_1CA85B510();
  swift_bridgeObjectRelease();
  v11 = objc_msgSend(v9, sel_initWithEntityName_, v10);

  sub_1CA24EEC0(0, (unint64_t *)&qword_1ED872320);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8727B0);
  v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1CA8D51C0;
  v13 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v12 + 56) = MEMORY[0x1E0DEA968];
  v14 = sub_1CA2891BC();
  *(_QWORD *)(v12 + 32) = 0x79726F6765746163;
  *(_QWORD *)(v12 + 40) = 0xE800000000000000;
  *(_QWORD *)(v12 + 96) = v13;
  *(_QWORD *)(v12 + 104) = v14;
  *(_QWORD *)(v12 + 64) = v14;
  *(_QWORD *)(v12 + 72) = a1;
  *(_QWORD *)(v12 + 80) = a2;
  swift_bridgeObjectRetain();
  v15 = (void *)sub_1CA85BA80();
  objc_msgSend(v11, sel_setPredicate_, v15);

  v16 = *(void **)(a3 + OBJC_IVAR___PGMusicCache_managedObjectContext);
  type metadata accessor for CacherStatusEntry();
  v17 = sub_1CA85BC3C();
  if (!v4)
  {
    v18 = v17;
    if (v17 >> 62)
    {
      swift_bridgeObjectRetain();
      v21 = sub_1CA85C08C();
      swift_bridgeObjectRelease();
      if (v21)
        goto LABEL_5;
    }
    else if (*(_QWORD *)((v17 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_5:
      if ((v18 & 0xC000000000000001) != 0)
      {
        v19 = (id)MEMORY[0x1CAA4DD64](0, v18);
      }
      else
      {
        if (!*(_QWORD *)((v18 & 0xFFFFFFFFFFFFF8) + 0x10))
          __break(1u);
        v19 = *(id *)(v18 + 32);
      }
      v20 = v19;
      swift_bridgeObjectRelease();
      sub_1CA30A4DC(a4);
      goto LABEL_11;
    }
    swift_bridgeObjectRelease();
    v20 = sub_1CA30D1E4(v16, (uint64_t)a4);
LABEL_11:

    v29[0] = 0;
    if ((objc_msgSend(v16, sel_save_, v29) & 1) != 0)
    {
      v22 = v29[0];
    }
    else
    {
      v23 = v29[0];
      v24 = (void *)sub_1CA85A364();

      swift_willThrow();
      swift_getErrorValue();
      v25 = sub_1CA85C308();
      v27 = v26;
      sub_1CA2CEE20();
      swift_allocError();
      *(_QWORD *)v28 = v25;
      *(_QWORD *)(v28 + 8) = v27;
      *(_BYTE *)(v28 + 16) = 0;
      swift_willThrow();

    }
  }

}

void MusicCache.removeCacherStatus(songSourceCategories:progressReporter:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;

  if (a1)
  {
    sub_1CA24EEC0(0, (unint64_t *)&qword_1ED872320);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8727B0);
    v3 = swift_allocObject();
    *(_OWORD *)(v3 + 16) = xmmword_1CA8D51C0;
    *(_QWORD *)(v3 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v3 + 64) = sub_1CA2891BC();
    *(_QWORD *)(v3 + 32) = 0x79726F6765746163;
    *(_QWORD *)(v3 + 40) = 0xE800000000000000;
    *(_QWORD *)(v3 + 96) = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED872270);
    *(_QWORD *)(v3 + 104) = sub_1CA299F74((unint64_t *)&qword_1ED872290, &qword_1ED872270, MEMORY[0x1E0CB1B18]);
    *(_QWORD *)(v3 + 72) = a1;
    swift_bridgeObjectRetain();
    v4 = (void *)sub_1CA85BA80();
  }
  else
  {
    v4 = 0;
  }
  sub_1CA85BB64();
  if (!v1)
  {
    v5 = (void *)sub_1CA85BB7C();
    v7 = v6;
    MEMORY[0x1E0C80A78](v5);
    sub_1CA85BC30();

  }
}

void sub_1CA2C5E54(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *v3;
  id v4;
  id v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11[2];

  v11[1] = *(id *)MEMORY[0x1E0C80C00];
  v3 = *(void **)(a1 + OBJC_IVAR___PGMusicCache_managedObjectContext);
  sub_1CA2CF16C(a2, v3);
  if (!v2)
  {
    v11[0] = 0;
    if (objc_msgSend(v3, sel_save_, v11))
    {
      v4 = v11[0];
      sub_1CA85BB70();
    }
    else
    {
      v5 = v11[0];
      v6 = (void *)sub_1CA85A364();

      swift_willThrow();
      swift_getErrorValue();
      v7 = sub_1CA85C308();
      v9 = v8;
      sub_1CA2CEE20();
      swift_allocError();
      *(_QWORD *)v10 = v7;
      *(_QWORD *)(v10 + 8) = v9;
      *(_BYTE *)(v10 + 16) = 0;
      swift_willThrow();

    }
  }
}

uint64_t MusicCache.read(readOptions:progressReporter:)(__int128 *a1, uint64_t a2)
{
  char v2;
  char v3;
  __int128 v5;
  char v6;
  char v7;

  v2 = *((_BYTE *)a1 + 16);
  v3 = *((_BYTE *)a1 + 17);
  v5 = *a1;
  v6 = v2;
  v7 = v3;
  return sub_1CA2C5FC0(0, (uint64_t *)&v5, a2);
}

uint64_t sub_1CA2C5FC0(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t (*v12)(char *, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v18 = a3;
  v17 = a1;
  v5 = sub_1CA85B2D0();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *a2;
  v16 = a2[1];
  v10 = *((_BYTE *)a2 + 16);
  v11 = *((_BYTE *)a2 + 17);
  sub_1CA85BBE8();
  if (qword_1ED8723F0 != -1)
    swift_once();
  sub_1CA85B2C4();
  sub_1CA85B2A0();
  v12 = *(uint64_t (**)(char *, uint64_t))(v6 + 8);
  v13 = v12(v8, v5);
  v20 = MEMORY[0x1E0DEE9D8];
  MEMORY[0x1E0C80A78](v13);
  *(&v16 - 8) = (uint64_t)&v20;
  *(&v16 - 7) = v3;
  *(&v16 - 6) = v17;
  *(&v16 - 5) = v9;
  *(&v16 - 4) = v16;
  *((_BYTE *)&v16 - 24) = v10;
  *((_BYTE *)&v16 - 23) = v11;
  v14 = v19;
  *(&v16 - 2) = v18;
  sub_1CA85BC30();
  if (v14)
    return swift_bridgeObjectRelease();
  sub_1CA85BBDC();
  sub_1CA85B2C4();
  sub_1CA85B2A0();
  v12(v8, v5);
  return v20;
}

uint64_t MusicCache.read(adamIDs:readOptions:progressReporter:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v13[2];
  char v14;
  char v15;

  v5 = *(_QWORD *)a2;
  v6 = *(_QWORD *)(a2 + 8);
  v7 = *(_BYTE *)(a2 + 16);
  v8 = *(_BYTE *)(a2 + 17);
  sub_1CA24EEC0(0, (unint64_t *)&qword_1ED872320);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8727B0);
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1CA8D51C0;
  *(_QWORD *)(v9 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v9 + 64) = sub_1CA2891BC();
  *(_QWORD *)(v9 + 32) = 0x44496D616461;
  *(_QWORD *)(v9 + 40) = 0xE600000000000000;
  *(_QWORD *)(v9 + 96) = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED872270);
  *(_QWORD *)(v9 + 104) = sub_1CA299F74((unint64_t *)&qword_1ED872290, &qword_1ED872270, MEMORY[0x1E0CB1B18]);
  *(_QWORD *)(v9 + 72) = a1;
  swift_bridgeObjectRetain();
  v10 = (void *)sub_1CA85BA80();
  v13[0] = v5;
  v13[1] = v6;
  v14 = v7;
  v15 = v8;
  v11 = sub_1CA2C5FC0((uint64_t)v10, v13, a3);

  return v11;
}

uint64_t MusicCache.read(songSourceCategories:progressReporter:)(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v6[2];
  __int16 v7;

  sub_1CA24EEC0(0, (unint64_t *)&qword_1ED872320);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8727B0);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1CA8D51C0;
  *(_QWORD *)(v2 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v2 + 64) = sub_1CA2891BC();
  *(_QWORD *)(v2 + 32) = 0x79726F6765746163;
  *(_QWORD *)(v2 + 40) = 0xE800000000000000;
  *(_QWORD *)(v2 + 96) = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED872270);
  *(_QWORD *)(v2 + 104) = sub_1CA299F74((unint64_t *)&qword_1ED872290, &qword_1ED872270, MEMORY[0x1E0CB1B18]);
  *(_QWORD *)(v2 + 72) = a1;
  swift_bridgeObjectRetain();
  v3 = (void *)sub_1CA85BA80();
  v6[0] = 0;
  v6[1] = 0;
  v7 = 1;
  v4 = sub_1CA2C645C((uint64_t)v3, 0, v6);

  return v4;
}

uint64_t sub_1CA2C645C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  int v10;
  void (*v11)(char *, uint64_t);
  void *v12;
  void *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  int v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v25 = a2;
  v24 = a1;
  v5 = sub_1CA85B2D0();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *a3;
  v23 = a3[1];
  v10 = *((unsigned __int8 *)a3 + 16);
  v21 = *((unsigned __int8 *)a3 + 17);
  v22 = v10;
  sub_1CA85BBE8();
  if (qword_1ED8723F0 != -1)
    swift_once();
  sub_1CA85B2C4();
  sub_1CA85B2A0();
  v11 = *(void (**)(char *, uint64_t))(v6 + 8);
  v11(v8, v5);
  v12 = (void *)sub_1CA85BB7C();
  v14 = v13;
  v27 = MEMORY[0x1E0DEE9D8];
  v15 = MEMORY[0x1E0C80A78](v12);
  v16 = v25;
  *(&v20 - 10) = v24;
  *(&v20 - 9) = v3;
  *(&v20 - 8) = v15;
  *(&v20 - 7) = (uint64_t)v14;
  *(&v20 - 6) = v16;
  *(&v20 - 5) = (uint64_t)&v27;
  v17 = v23;
  *(&v20 - 4) = v9;
  *(&v20 - 3) = v17;
  *((_BYTE *)&v20 - 16) = v22;
  *((_BYTE *)&v20 - 15) = v21;
  v18 = v26;
  sub_1CA85BC30();
  if (v18)
  {

    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_1CA85BBDC();
    sub_1CA85B2C4();
    sub_1CA85B2A0();

    v11(v8, v5);
    return v27;
  }
}

uint64_t MusicCache.read(adamIDs:songSourceCategories:progressReporter:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v15[2];
  __int16 v16;

  sub_1CA24EEC0(0, (unint64_t *)&qword_1ED872320);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8727B0);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1CA8D51C0;
  v5 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v4 + 56) = MEMORY[0x1E0DEA968];
  v6 = sub_1CA2891BC();
  *(_QWORD *)(v4 + 64) = v6;
  *(_QWORD *)(v4 + 32) = 0x79726F6765746163;
  *(_QWORD *)(v4 + 40) = 0xE800000000000000;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED872270);
  *(_QWORD *)(v4 + 96) = v7;
  v8 = sub_1CA299F74((unint64_t *)&qword_1ED872290, &qword_1ED872270, MEMORY[0x1E0CB1B18]);
  *(_QWORD *)(v4 + 104) = v8;
  *(_QWORD *)(v4 + 72) = a2;
  swift_bridgeObjectRetain();
  v9 = (void *)sub_1CA85BA80();
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1CA8D51C0;
  *(_QWORD *)(v10 + 56) = v5;
  *(_QWORD *)(v10 + 64) = v6;
  *(_QWORD *)(v10 + 32) = 0x44496D616461;
  *(_QWORD *)(v10 + 40) = 0xE600000000000000;
  *(_QWORD *)(v10 + 96) = v7;
  *(_QWORD *)(v10 + 104) = v8;
  *(_QWORD *)(v10 + 72) = a1;
  swift_bridgeObjectRetain();
  v11 = (void *)sub_1CA85BA80();
  v15[0] = 0;
  v15[1] = 0;
  v16 = 1;
  v12 = v9;
  v13 = sub_1CA2C645C((uint64_t)v9, (uint64_t)v11, v15);

  return v13;
}

uint64_t MusicCache.readSongsWithoutALastRefreshAttemptDate(progressReporter:)(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v6[2];
  __int16 v7;

  sub_1CA24EEC0(0, (unint64_t *)&qword_1ED872320);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8727B0);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1CA8D4E40;
  *(_QWORD *)(v2 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v2 + 64) = sub_1CA2891BC();
  *(_QWORD *)(v2 + 32) = 0xD000000000000016;
  *(_QWORD *)(v2 + 40) = 0x80000001CA88A8E0;
  v3 = (void *)sub_1CA85BA80();
  v6[0] = 0;
  v6[1] = 0;
  v7 = 1;
  v4 = sub_1CA2C5FC0((uint64_t)v3, v6, a1);

  return v4;
}

uint64_t MusicCache.readSongsOrderedByLastRefreshAttemptDate(before:limit:ascending:progressReporter:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  id v13;
  void *v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v19[2];
  __int16 v20;

  sub_1CA24EEC0(0, (unint64_t *)&qword_1ED872320);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8727B0);
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1CA8D6090;
  v8 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v7 + 56) = MEMORY[0x1E0DEA968];
  v9 = sub_1CA2891BC();
  *(_QWORD *)(v7 + 32) = 0xD000000000000016;
  *(_QWORD *)(v7 + 40) = 0x80000001CA88A8E0;
  *(_QWORD *)(v7 + 96) = v8;
  *(_QWORD *)(v7 + 104) = v9;
  *(_QWORD *)(v7 + 64) = v9;
  *(_QWORD *)(v7 + 72) = 0xD000000000000016;
  *(_QWORD *)(v7 + 80) = 0x80000001CA88A8E0;
  v10 = sub_1CA85A508();
  *(_QWORD *)(v7 + 136) = sub_1CA24EEC0(0, &qword_1ED8723A0);
  *(_QWORD *)(v7 + 144) = sub_1CA2CEE9C();
  *(_QWORD *)(v7 + 112) = v10;
  v11 = (void *)sub_1CA85BA80();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED873300);
  v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1CA8D9C80;
  v13 = objc_allocWithZone(MEMORY[0x1E0CB3928]);
  v14 = (void *)sub_1CA85B510();
  v15 = objc_msgSend(v13, sel_initWithKey_ascending_, v14, a3 & 1);

  *(_QWORD *)(v12 + 32) = v15;
  v19[0] = v12;
  sub_1CA85B7C8();
  v19[1] = a2;
  v20 = 0;
  v16 = v11;
  v17 = sub_1CA2C5FC0((uint64_t)v11, v19, a4);
  swift_bridgeObjectRelease();

  return v17;
}

void sub_1CA2C6B54(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, __int16 a6)
{
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  _QWORD v10[2];
  __int16 v11;

  v8 = *(_QWORD *)(a2 + OBJC_IVAR___PGMusicCache_managedObjectContext);
  v10[0] = a4;
  v10[1] = a5;
  v11 = a6 & 0x101;
  sub_1CA2C6BCC(v8, a3, (uint64_t)v10);
  if (!v6)
  {
    *a1 = v9;
    swift_bridgeObjectRelease();
  }
}

void sub_1CA2C6BCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  int v13;
  int v14;
  void *v15;
  void *v16;
  id v17;
  void *v18;
  id v19;
  void *v20;
  void *skipCount;
  _QWORD *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  __int128 v36;
  id v37;
  id v38;
  BOOL v39;
  unint64_t v40;
  uint64_t v41;
  void (*v42)(char *, _QWORD *);
  id v43;
  void *v44;
  id v45;
  uint64_t v46;
  id v47;
  id v48;
  void *v49;
  void *v50;
  unint64_t v51;
  void *v52;
  unint64_t v53;
  uint64_t v54;
  void (*v55)(char *, _QWORD *);
  id v56;
  void *v57;
  id v58;
  void *v59;
  Swift::Int playDurationInMilliseconds;
  Swift::Int playCount;
  uint64_t v62;
  unint64_t v63;
  unint64_t v64;
  _QWORD *v65;
  void *v66;
  os_log_type_t v67;
  NSObject *v68;
  id v69;
  uint64_t v70;
  _QWORD *v71;
  _QWORD *v72;
  uint64_t v73;
  unint64_t v74;
  unint64_t v75;
  unint64_t v76;
  uint64_t v77;
  unint64_t v78;
  uint64_t v79;
  void *v80;
  id v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  __int128 v85;
  uint64_t v86;
  __int128 v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  uint64_t v91;
  unint64_t v92;
  id v93;
  uint64_t v94;
  uint64_t v95;
  int v96;
  id v97;
  char *v98;
  uint64_t v99;
  id v100;
  unint64_t v101;
  unint64_t v102;
  _QWORD *v103;
  void (*v104)(char *, _QWORD *);
  id v105;
  unint64_t v106;
  uint64_t v107;
  char *v108;
  id v109;
  uint64_t v110;
  uint64_t countAndFlagsBits;
  __int128 v112;
  __int128 v113;
  PhotosGraph::PlaybackInfo v114;
  void *v115;

  *(_QWORD *)&v113 = a2;
  countAndFlagsBits = a1;
  v4 = type metadata accessor for Song();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v81 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1CA85B2D0();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v81 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_QWORD *)(a3 + 8);
  *(_QWORD *)&v112 = *(_QWORD *)a3;
  v13 = *(unsigned __int8 *)(a3 + 16);
  v14 = *(unsigned __int8 *)(a3 + 17);
  v15 = v115;
  sub_1CA85BB64();
  if (!v15)
  {
    LODWORD(v109) = v13;
    v110 = v12;
    v115 = 0;
    v96 = v14;
    v108 = v11;
    v107 = v9;
    v103 = (_QWORD *)v8;
    v98 = v7;
    v89 = v5;
    v97 = (id)sub_1CA85BB7C();
    v93 = v16;
    v17 = objc_allocWithZone(MEMORY[0x1E0C97B48]);
    swift_bridgeObjectRetain();
    v18 = (void *)sub_1CA85B510();
    swift_bridgeObjectRelease();
    v19 = objc_msgSend(v17, sel_initWithEntityName_, v18);

    objc_msgSend(v19, sel_setPredicate_, (_QWORD)v113);
    objc_msgSend(v19, sel_setReturnsObjectsAsFaults_, 0);
    if ((_QWORD)v112)
    {
      sub_1CA24EEC0(0, (unint64_t *)&unk_1ED872328);
      v20 = (void *)sub_1CA85B798();
    }
    else
    {
      v20 = 0;
    }
    skipCount = v98;
    v22 = v103;
    v23 = v107;
    v24 = v108;
    v25 = v110;
    objc_msgSend(v19, sel_setSortDescriptors_, v20);

    if ((v109 & 1) == 0)
      objc_msgSend(v19, sel_setFetchLimit_, v25);
    v26 = type metadata accessor for SongEntry();
    v27 = v115;
    v28 = sub_1CA85BC3C();
    if (v27)
    {

      return;
    }
    v29 = v23;
    v88 = v26;
    v94 = v28;
    v30 = v97;
    sub_1CA85BB70();
    v31 = (uint64_t)v93;
    v115 = 0;
    v81 = v19;
    v83 = (unint64_t)v94 >> 62;
    if ((unint64_t)v94 >> 62)
      goto LABEL_69;
    v32 = *(_QWORD *)((v94 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
LABEL_11:
    v33 = v99;
    if (v32)
    {
      v34 = 0;
      v95 = OBJC_IVAR___PGMusicCache_managedObjectContext;
      v35 = v94;
      v92 = v94 & 0xC000000000000001;
      v84 = v94 + 32;
      v86 = v94 & 0xFFFFFFFFFFFFFF8;
      if (v94 >= 0)
        v35 = v94 & 0xFFFFFFFFFFFFFF8;
      v82 = v35;
      *((_QWORD *)&v36 + 1) = 4;
      v87 = xmmword_1CA8D51C0;
      *(_QWORD *)&v36 = 138412290;
      v85 = v36;
      v90 = MEMORY[0x1E0DEE9D8];
      v91 = v32;
      while (1)
      {
        if (v92)
        {
          v38 = (id)MEMORY[0x1CAA4DD64](v34, v94);
        }
        else
        {
          if (v34 >= *(_QWORD *)(v86 + 16))
            goto LABEL_68;
          v38 = *(id *)(v84 + 8 * v34);
        }
        v109 = v38;
        v39 = __OFADD__(v34, 1);
        v40 = v34 + 1;
        if (v39)
        {
LABEL_67:
          __break(1u);
LABEL_68:
          __break(1u);
LABEL_69:
          swift_bridgeObjectRetain();
          v32 = sub_1CA85C08C();
          goto LABEL_11;
        }
        v106 = v40;
        if (v96)
        {
          v41 = v31;
          sub_1CA85BBE8();
          if (qword_1ED8723F0 != -1)
            swift_once();
          sub_1CA85B2C4();
          sub_1CA85B2A0();
          v42 = *(void (**)(char *, _QWORD *))(v29 + 8);
          v42(v24, v22);
          swift_beginAccess();
          v43 = objc_allocWithZone(MEMORY[0x1E0C97B48]);
          swift_bridgeObjectRetain();
          v44 = (void *)sub_1CA85B510();
          swift_bridgeObjectRelease();
          v45 = objc_msgSend(v43, sel_initWithEntityName_, v44, v81, v82);

          sub_1CA24EEC0(0, (unint64_t *)&qword_1ED872320);
          __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8727B0);
          v46 = swift_allocObject();
          *(_OWORD *)(v46 + 16) = v87;
          *(_QWORD *)(v46 + 56) = MEMORY[0x1E0DEA968];
          *(_QWORD *)(v46 + 64) = sub_1CA2891BC();
          *(_QWORD *)(v46 + 32) = 1735290739;
          *(_QWORD *)(v46 + 40) = 0xE400000000000000;
          *(_QWORD *)(v46 + 96) = v88;
          *(_QWORD *)(v46 + 104) = sub_1CA23CC98((unint64_t *)&qword_1EF94CA90, (uint64_t (*)(uint64_t))type metadata accessor for SongEntry, MEMORY[0x1E0DEFD08]);
          v47 = v109;
          *(_QWORD *)(v46 + 72) = v109;
          v48 = v47;
          skipCount = v45;
          v49 = (void *)sub_1CA85BA80();
          objc_msgSend(v45, sel_setPredicate_, v49);

          type metadata accessor for SongPlaybackInfoEntry();
          v50 = v115;
          v51 = sub_1CA85BC3C();
          v52 = v50;
          if (v50)
          {

            v115 = 0;
            v31 = v41;
            v30 = v97;
            goto LABEL_48;
          }
          v53 = v51;
          v104 = v42;
          v115 = 0;
          if (v51 >> 62)
          {
            swift_bridgeObjectRetain();
            v54 = sub_1CA85C08C();
          }
          else
          {
            v54 = *(_QWORD *)((v51 & 0xFFFFFFFFFFFFF8) + 0x10);
            swift_bridgeObjectRetain();
          }
          v55 = v104;
          v105 = skipCount;
          if (v54)
          {
            v102 = v53 & 0xC000000000000001;
            v31 = 4;
            v22 = (_QWORD *)MEMORY[0x1E0DEE9D8];
            v101 = v53;
            v100 = (id)v54;
            while (1)
            {
              v56 = v102 ? (id)MEMORY[0x1CAA4DD64](v31 - 4, v53) : *(id *)(v53 + 8 * v31);
              v57 = v56;
              v58 = v105;
              v30 = (id)(v31 - 3);
              if (__OFADD__(v31 - 4, 1))
                break;
              SongPlaybackInfoEntry.playbackInfo()(&v114);
              v115 = v59;
              if (v59)
              {

                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease_n();

                v52 = v115;
                v115 = 0;
                v31 = (uint64_t)v93;
                v33 = v99;
                v30 = v97;
                goto LABEL_47;
              }

              countAndFlagsBits = v114.dateUTC._countAndFlagsBits;
              playDurationInMilliseconds = v114.playDurationInMilliseconds;
              playCount = v114.playCount;
              skipCount = (void *)v114.skipCount;
              v62 = v114.lastEndReason._countAndFlagsBits;
              v112 = *(_OWORD *)&v114.lastEndReason._object;
              v113 = *(_OWORD *)&v114.dateUTC._object;
              LODWORD(v110) = v114.ignoreForRecommendations;
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                v22 = sub_1CA26CD24(0, v22[2] + 1, 1, v22);
              v64 = v22[2];
              v63 = v22[3];
              if (v64 >= v63 >> 1)
                v22 = sub_1CA26CD24((_QWORD *)(v63 > 1), v64 + 1, 1, v22);
              v22[2] = v64 + 1;
              v65 = &v22[10 * v64];
              v65[4] = countAndFlagsBits;
              *(_OWORD *)(v65 + 5) = v113;
              v65[7] = playDurationInMilliseconds;
              v65[8] = playCount;
              v65[9] = skipCount;
              v65[10] = v62;
              *(_OWORD *)(v65 + 11) = v112;
              *((_BYTE *)v65 + 104) = v110;
              ++v31;
              v29 = v107;
              v24 = v108;
              v55 = v104;
              v53 = v101;
              if (v30 == v100)
                goto LABEL_44;
            }
            __break(1u);
            goto LABEL_67;
          }
          v22 = (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_44:
          swift_bridgeObjectRelease_n();
          sub_1CA85BBDC();
          sub_1CA85B2C4();
          sub_1CA85B2A0();

          v55(v24, v103);
          v31 = (uint64_t)v93;
          v33 = v99;
          v30 = v97;
          skipCount = v98;
        }
        else
        {
          v22 = 0;
        }
        v66 = v115;
        sub_1CA49147C((uint64_t)v22, (uint64_t)skipCount);
        v52 = v66;
        if (!v66)
        {
          swift_bridgeObjectRelease();
          v74 = v90;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v74 = sub_1CA26CD10(0, *(_QWORD *)(v74 + 16) + 1, 1, v74);
          v22 = v103;
          v90 = v74;
          v76 = *(_QWORD *)(v74 + 16);
          v75 = *(_QWORD *)(v74 + 24);
          v77 = v89;
          if (v76 >= v75 >> 1)
          {
            v79 = sub_1CA26CD10(v75 > 1, v76 + 1, 1, v90);
            v77 = v89;
            v90 = v79;
          }
          v78 = v90;
          *(_QWORD *)(v90 + 16) = v76 + 1;
          sub_1CA24EE7C((uint64_t)skipCount, v78+ ((*(unsigned __int8 *)(v77 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v77 + 80))+ *(_QWORD *)(v77 + 72) * v76, (uint64_t (*)(_QWORD))type metadata accessor for Song);
          if (v83)
          {
            swift_bridgeObjectRetain();
            sub_1CA85C08C();
            swift_bridgeObjectRelease();
          }
          v24 = v108;
          sub_1CA85BB58();
          v115 = 0;
          v37 = v109;
          goto LABEL_16;
        }
        swift_bridgeObjectRelease();
        v115 = 0;
LABEL_47:
        v22 = v103;
LABEL_48:
        v67 = sub_1CA85BAE0();
        if (qword_1ED8723F0 != -1)
          swift_once();
        v68 = qword_1ED8710E0;
        if (os_log_type_enabled((os_log_t)qword_1ED8710E0, v67))
        {
          v69 = v109;
          v70 = swift_slowAlloc();
          v71 = (_QWORD *)swift_slowAlloc();
          *(_DWORD *)v70 = v85;
          *(_QWORD *)(v70 + 4) = v69;
          *v71 = v69;
          _os_log_impl(&dword_1CA237000, v68, v67, "[MemoriesMusic] MusicCuration - song entry %@ is corrupted - removing from cache", (uint8_t *)v70, 0xCu);
          __swift_instantiateConcreteTypeFromMangledName(&qword_1ED873230);
          swift_arrayDestroy();
          v72 = v71;
          v30 = v97;
          v33 = v99;
          MEMORY[0x1CAA4F27C](v72, -1, -1);
          v73 = v70;
          v22 = v103;
          MEMORY[0x1CAA4F27C](v73, -1, -1);
        }
        v37 = v109;
        objc_msgSend(*(id *)(v33 + v95), sel_deleteObject_, v109, v81);

        skipCount = v98;
LABEL_16:

        v34 = v106;
        if (v106 == v91)
          goto LABEL_62;
      }
    }
    v90 = MEMORY[0x1E0DEE9D8];
LABEL_62:
    swift_bridgeObjectRelease_n();
    v80 = v115;
    sub_1CA85BB70();
    if (v80)
    {

      swift_bridgeObjectRelease();
    }
    else
    {

    }
  }
}

void sub_1CA2C781C(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void *a5, _QWORD *a6, uint64_t a7, uint64_t a8, __int16 a9)
{
  uint64_t v9;
  id v13;
  void *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  __int16 v20;
  uint64_t v21;
  void *v22;
  void *v23;
  uint64_t v24;
  id v25;
  id v26;
  void *v27;
  void *v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  _QWORD v36[2];
  __int16 v37;
  id v38;

  v38 = a3;
  v13 = objc_allocWithZone(MEMORY[0x1E0C97B48]);
  swift_bridgeObjectRetain();
  v14 = (void *)sub_1CA85B510();
  swift_bridgeObjectRelease();
  v15 = objc_msgSend(v13, sel_initWithEntityName_, v14);

  objc_msgSend(v15, sel_setIncludesPropertyValues_, 0);
  objc_msgSend(v15, sel_setResultType_, 1);
  objc_msgSend(v15, sel_setPredicate_, a1);
  v16 = *(_QWORD *)(a2 + OBJC_IVAR___PGMusicCache_managedObjectContext);
  sub_1CA24EEC0(0, &qword_1ED872350);
  v17 = sub_1CA85BC3C();
  if (v9)
    goto LABEL_2;
  v18 = v17;
  v32 = a5;
  sub_1CA85BB70();
  if (v18 >> 62)
  {
    swift_bridgeObjectRetain();
    v19 = sub_1CA85C08C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v19 = *(_QWORD *)((v18 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (v19 < 1)
  {
    swift_bridgeObjectRelease();
    sub_1CA85BB70();
LABEL_2:

    return;
  }
  v20 = a9;
  sub_1CA24EEC0(0, (unint64_t *)&qword_1ED872320);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8727B0);
  v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_1CA8D51C0;
  *(_QWORD *)(v21 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v21 + 64) = sub_1CA2891BC();
  *(_QWORD *)(v21 + 32) = 0x73656372756F73;
  *(_QWORD *)(v21 + 40) = 0xE700000000000000;
  *(_QWORD *)(v21 + 96) = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94CA98);
  *(_QWORD *)(v21 + 104) = sub_1CA299F74((unint64_t *)&unk_1EF94CAA0, &qword_1EF94CA98, MEMORY[0x1E0CB1B18]);
  *(_QWORD *)(v21 + 72) = v18;
  v22 = (void *)sub_1CA85BA80();
  v23 = v22;
  if (v32)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED873300);
    v24 = swift_allocObject();
    *(_OWORD *)(v24 + 16) = xmmword_1CA8D4EA0;
    *(_QWORD *)(v24 + 32) = v23;
    *(_QWORD *)(v24 + 40) = v32;
    v36[0] = v24;
    sub_1CA85B7C8();
    v25 = v32;
    v26 = v23;
    v38 = v25;
    v27 = v23;
    v28 = (void *)sub_1CA85B798();
    swift_bridgeObjectRelease();
    v29 = objc_msgSend((id)objc_opt_self(), sel_andPredicateWithSubpredicates_, v28);

    v23 = v27;
    v20 = a9;
  }
  else
  {
    v29 = v22;
  }
  v36[0] = a7;
  v36[1] = a8;
  v37 = v20 & 0x101;
  sub_1CA2C6BCC(v16, (uint64_t)v29, (uint64_t)v36);
  v31 = v30;

  *a6 = v31;
  swift_bridgeObjectRelease();
}

uint64_t sub_1CA2C7BDC(_QWORD *a1, void *a2, unsigned __int8 *a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  int v23;
  int v24;
  int v25;
  int v26;
  uint64_t v27;
  void *v28;
  id v29;
  id v30;
  void *v31;
  id v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  int isUniquelyReferenced_nonNull_native;
  void *v41;
  uint64_t v42;
  _BOOL8 v43;
  uint64_t v44;
  id v45;
  uint64_t v46;
  char v47;
  uint64_t *v48;
  uint64_t v49;
  BOOL v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  void *v56;
  id v57;
  id v58;
  void *v59;
  uint64_t v60;
  id v61;
  id v62;
  uint64_t v63;
  uint64_t result;
  uint64_t v65;
  uint64_t v66;
  id v67;
  int64_t v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  void *v75;
  id v76;
  int64_t v77;
  uint64_t v78;
  unint64_t v79;
  unint64_t v80;
  int v81;
  int64_t v82;
  id v83;
  void *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  id v117;
  id v118;
  unint64_t v119;
  id v120;
  uint64_t v121;
  unint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  void *v128;
  id v129;
  uint64_t v130;
  void *v131;
  unint64_t v132;
  unint64_t v133;
  uint64_t v134;
  id v135;
  void *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  char v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  void *v150;
  char *v151;
  _QWORD v152[2];
  int v153;
  int v154;
  uint64_t v155;
  char *v156;
  uint64_t v157;
  char *v158;
  uint64_t v159;
  uint64_t v160;
  id v161;
  int64_t v162;
  _QWORD *v163;
  unint64_t v164;
  id v165;
  uint64_t v166;
  id v167;
  uint64_t v168;
  int v169;
  void *v170;
  char *v171;
  _QWORD *v172;
  _QWORD *v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  char *v178;
  id v179;
  uint64_t v180;
  unint64_t v181;
  id v182[17];

  v170 = a2;
  v173 = a1;
  v182[16] = *(id *)MEMORY[0x1E0C80C00];
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED871D00);
  v7 = MEMORY[0x1E0C80A78](v6);
  v168 = (uint64_t)v152 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x1E0C80A78](v7);
  v174 = (uint64_t)v152 - v10;
  MEMORY[0x1E0C80A78](v9);
  v171 = (char *)v152 - v11;
  v175 = type metadata accessor for Song();
  v177 = *(_QWORD *)(v175 - 8);
  v12 = MEMORY[0x1E0C80A78](v175);
  v14 = (char *)v152 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x1E0C80A78](v12);
  v17 = (unint64_t)v152 - v16;
  v18 = MEMORY[0x1E0C80A78](v15);
  v20 = (char *)v152 - v19;
  MEMORY[0x1E0C80A78](v18);
  v22 = (char *)v152 - v21;
  v23 = *a3;
  v24 = a3[1];
  v25 = a3[2];
  v26 = a3[3];
  v27 = (uint64_t)v178;
  sub_1CA85BB64();
  v176 = v27;
  if (v27)
    return v17;
  v178 = v22;
  v158 = v20;
  LODWORD(v172) = v25;
  v164 = v17;
  v153 = v26;
  v154 = v24;
  v169 = v23;
  v156 = v14;
  v155 = a4;
  v165 = (id)sub_1CA85BB7C();
  v29 = v28;
  v30 = objc_allocWithZone(MEMORY[0x1E0C97B48]);
  swift_bridgeObjectRetain();
  v31 = (void *)sub_1CA85B510();
  swift_bridgeObjectRelease();
  v32 = objc_msgSend(v30, sel_initWithEntityName_, v31);

  v33 = v173[2];
  v167 = v29;
  if (v33)
  {
    v161 = v32;
    v34 = (_QWORD *)((char *)v173
                   + ((*(unsigned __int8 *)(v177 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v177 + 80)));
    v35 = *(_QWORD *)(v177 + 72);
    swift_bridgeObjectRetain();
    v36 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    v37 = (uint64_t)v178;
    do
    {
      v38 = *v34;
      v39 = (void *)v34[1];
      sub_1CA24EE38((uint64_t)v34, v37, (uint64_t (*)(_QWORD))type metadata accessor for Song);
      swift_bridgeObjectRetain();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v182[0] = v36;
      v17 = sub_1CA25081C(v38, (uint64_t)v39);
      v42 = v36[2];
      v43 = (v41 & 1) == 0;
      v44 = v42 + v43;
      if (__OFADD__(v42, v43))
      {
        __break(1u);
        v176 = v33;

        swift_bridgeObjectRelease();
        sub_1CA24E6B8();
LABEL_128:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return v17;
      }
      v45 = v41;
      if (v36[3] >= v44)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          sub_1CA261600();
      }
      else
      {
        sub_1CA2544BC(v44, isUniquelyReferenced_nonNull_native);
        v46 = sub_1CA25081C(v38, (uint64_t)v39);
        if ((v45 & 1) != (v47 & 1))
        {
          result = sub_1CA85C2E4();
          __break(1u);
          return result;
        }
        v17 = v46;
      }
      v37 = (uint64_t)v178;
      v36 = v182[0];
      if ((v45 & 1) != 0)
      {
        sub_1CA2CEF0C((uint64_t)v178, *((_QWORD *)v182[0] + 7) + v17 * v35);
      }
      else
      {
        *((_QWORD *)v182[0] + (v17 >> 6) + 8) |= 1 << v17;
        v48 = (uint64_t *)(v36[6] + 16 * v17);
        *v48 = v38;
        v48[1] = (uint64_t)v39;
        sub_1CA24EE7C(v37, v36[7] + v17 * v35, (uint64_t (*)(_QWORD))type metadata accessor for Song);
        v49 = v36[2];
        v50 = __OFADD__(v49, 1);
        v51 = v49 + 1;
        if (v50)
        {
          __break(1u);
LABEL_125:
          sub_1CA24E6B8();
          goto LABEL_126;
        }
        v36[2] = v51;
        swift_bridgeObjectRetain();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v34 = (uint64_t *)((char *)v34 + v35);
      --v33;
    }
    while (v33);
    swift_bridgeObjectRelease();
    v52 = (uint64_t)v36;
    v29 = v167;
    v32 = v161;
  }
  else
  {
    v52 = MEMORY[0x1E0DEE9E0];
  }
  sub_1CA24EEC0(0, (unint64_t *)&qword_1ED872320);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8727B0);
  v53 = swift_allocObject();
  *(_OWORD *)(v53 + 16) = xmmword_1CA8D51C0;
  *(_QWORD *)(v53 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v53 + 64) = sub_1CA2891BC();
  *(_QWORD *)(v53 + 32) = 0x44496D616461;
  *(_QWORD *)(v53 + 40) = 0xE600000000000000;
  v54 = swift_bridgeObjectRetain();
  v55 = sub_1CA2438E4(v54);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v53 + 96) = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED872270);
  *(_QWORD *)(v53 + 104) = sub_1CA299F74((unint64_t *)&qword_1ED872290, &qword_1ED872270, MEMORY[0x1E0CB1B18]);
  *(_QWORD *)(v53 + 72) = v55;
  v56 = (void *)sub_1CA85BA80();
  objc_msgSend(v32, sel_setPredicate_, v56);

  v182[0] = 0;
  v57 = objc_msgSend(v32, sel_execute_, v182);
  v58 = v182[0];
  v33 = v176;
  if (!v57)
  {
    v17 = (unint64_t)v182[0];
    v63 = sub_1CA85A364();

    v176 = v63;
    swift_willThrow();
    swift_bridgeObjectRelease();

    goto LABEL_21;
  }
  v59 = v57;
  v178 = (char *)v52;
  v60 = type metadata accessor for SongEntry();
  v17 = sub_1CA85B7B0();
  v61 = v58;

  v62 = v165;
  sub_1CA85BB70();
  if (v33)
  {
    v176 = v33;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

LABEL_21:
    return v17;
  }
  v176 = v60;
  v65 = sub_1CA288170(v17);
  swift_bridgeObjectRelease();
  v181 = v65;
  v66 = (uint64_t)v178;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v180 = sub_1CA2826B4(v66);
  v161 = v32;
  if ((v65 & 0xC000000000000001) != 0)
  {
    sub_1CA85BDC8();
    sub_1CA23CC98(&qword_1ED8720F0, (uint64_t (*)(uint64_t))type metadata accessor for SongEntry, MEMORY[0x1E0DEFCF8]);
    sub_1CA85B9CC();
    v65 = (uint64_t)v182[6];
    v163 = v182[7];
    v67 = v182[8];
    v68 = (int64_t)v182[9];
    v69 = (unint64_t)v182[10];
  }
  else
  {
    v68 = 0;
    v70 = -1 << *(_BYTE *)(v65 + 32);
    v71 = *(_QWORD *)(v65 + 56);
    v163 = (_QWORD *)(v65 + 56);
    v72 = ~v70;
    v73 = -v70;
    if (v73 < 64)
      v74 = ~(-1 << v73);
    else
      v74 = -1;
    v69 = v74 & v71;
    v67 = (id)v72;
  }
  v160 = v65 & 0x7FFFFFFFFFFFFFFFLL;
  v152[1] = v67;
  v162 = ((unint64_t)v67 + 64) >> 6;
  v159 = MEMORY[0x1E0DEE9B0] + 8;
  v157 = v65;
  if ((v65 & 0x8000000000000000) == 0)
    goto LABEL_35;
LABEL_30:
  v75 = (void *)sub_1CA85BE34();
  if (!v75
    || (v179 = v75,
        swift_unknownObjectRetain(),
        swift_dynamicCast(),
        v76 = v182[0],
        swift_unknownObjectRelease(),
        v77 = v68,
        v78 = v69,
        !v76))
  {
LABEL_64:
    v81 = (int)v172;
    goto LABEL_65;
  }
  while (1)
  {
    v83 = objc_msgSend(v76, sel_adamID);
    if (!v83)
      goto LABEL_34;
    v84 = v83;
    v173 = (_QWORD *)v68;
    v85 = sub_1CA85B534();
    v87 = v86;

    sub_1CA291EB8(v85, v87);
    swift_bridgeObjectRelease();
    if (!v169)
    {
      swift_bridgeObjectRelease();
LABEL_34:

      v68 = v77;
      v69 = v78;
      if (v65 < 0)
        goto LABEL_30;
      goto LABEL_35;
    }
    v88 = (uint64_t)v178;
    if (*((_QWORD *)v178 + 2) && (v89 = sub_1CA25081C(v85, v87), (v90 & 1) != 0))
    {
      v91 = v33;
      v92 = (uint64_t)v171;
      sub_1CA24EE38(*(_QWORD *)(v88 + 56) + *(_QWORD *)(v177 + 72) * v89, (uint64_t)v171, (uint64_t (*)(_QWORD))type metadata accessor for Song);
      v93 = 0;
    }
    else
    {
      v91 = v33;
      v93 = 1;
      v92 = (uint64_t)v171;
    }
    v94 = v177;
    v95 = v175;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v177 + 56))(v92, v93, 1, v175);
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v94 + 48))(v92, 1, v95) == 1)
    {

      sub_1CA267BE8(v92, &qword_1ED871D00);
      v68 = v77;
      v69 = v78;
      v33 = v91;
    }
    else
    {
      v96 = (uint64_t)v158;
      sub_1CA24EE7C(v92, (uint64_t)v158, (uint64_t (*)(_QWORD))type metadata accessor for Song);
      sub_1CA491C1C(v96);
      v33 = v91;
      sub_1CA2669CC(v96, (uint64_t (*)(_QWORD))type metadata accessor for Song);

      v68 = v77;
      v69 = v78;
    }
    v65 = v157;
    if (v157 < 0)
      goto LABEL_30;
LABEL_35:
    if (!v69)
      break;
    v78 = (v69 - 1) & v69;
    v79 = __clz(__rbit64(v69)) | (v68 << 6);
    v77 = v68;
LABEL_46:
    v76 = *(id *)(*(_QWORD *)(v65 + 48) + 8 * v79);
    if (!v76)
      goto LABEL_64;
  }
  v77 = v68 + 1;
  if (__OFADD__(v68, 1))
  {
LABEL_134:
    __break(1u);
LABEL_135:
    __break(1u);
  }
  if (v77 >= v162)
    goto LABEL_64;
  v80 = v163[v77];
  v81 = (int)v172;
  if (v80)
    goto LABEL_45;
  v82 = v68 + 2;
  if (v68 + 2 >= v162)
    goto LABEL_65;
  v80 = v163[v82];
  if (v80)
    goto LABEL_44;
  v82 = v68 + 3;
  if (v68 + 3 >= v162)
    goto LABEL_65;
  v80 = v163[v82];
  if (v80)
  {
LABEL_44:
    v77 = v82;
LABEL_45:
    v78 = (v80 - 1) & v80;
    v79 = __clz(__rbit64(v80)) + (v77 << 6);
    goto LABEL_46;
  }
  v77 = v68 + 4;
  if (v68 + 4 >= v162)
    goto LABEL_65;
  v80 = v163[v77];
  if (v80)
    goto LABEL_45;
  v97 = (char *)(v68 + 5);
  while ((char *)v162 != v97)
  {
    v80 = v163[(_QWORD)v97++];
    if (v80)
    {
      v77 = (int64_t)(v97 - 1);
      goto LABEL_45;
    }
  }
LABEL_65:
  sub_1CA24E6B8();
  v98 = -1 << *(_BYTE *)(v180 + 32);
  v99 = *(_QWORD *)(v180 + 56);
  v100 = ~v98;
  v101 = -v98;
  if (v101 < 64)
    v102 = ~(-1 << v101);
  else
    v102 = -1;
  v182[0] = (id)v180;
  v182[1] = (id)(v180 + 56);
  v182[2] = (id)v100;
  v182[3] = 0;
  v182[4] = (id)(v102 & v99);
  v182[5] = 0;
  v103 = sub_1CA4C8F74();
  if (v105)
  {
    v106 = v103;
    v107 = v105;
    v108 = (uint64_t)v178;
    v109 = v174;
    do
    {
      if (*(_QWORD *)(v108 + 16) && (v111 = sub_1CA25081C(v104, v107), (v112 & 1) != 0))
      {
        sub_1CA24EE38(*(_QWORD *)(v108 + 56) + *(_QWORD *)(v177 + 72) * v111, v109, (uint64_t (*)(_QWORD))type metadata accessor for Song);
        v113 = 0;
      }
      else
      {
        v113 = 1;
      }
      v114 = v177;
      v109 = v174;
      v115 = v175;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v177 + 56))(v174, v113, 1, v175);
      swift_bridgeObjectRelease();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v114 + 48))(v109, 1, v115) == 1)
      {
        sub_1CA267BE8(v109, &qword_1ED871D00);
        v81 = (int)v172;
      }
      else
      {
        v116 = v164;
        sub_1CA24EE7C(v109, v164, (uint64_t (*)(_QWORD))type metadata accessor for Song);
        v117 = sub_1CA4922F0(v170, v116);
        v81 = (int)v172;
        v118 = v117;
        sub_1CA23F8A8(&v179, v118);

        if (__OFADD__(v106, 1))
        {
          __break(1u);
          goto LABEL_134;
        }
        sub_1CA85BB58();
        sub_1CA2669CC(v116, (uint64_t (*)(_QWORD))type metadata accessor for Song);

      }
      v106 = sub_1CA4C8F74();
      v107 = v110;
      v108 = (uint64_t)v178;
    }
    while (v110);
  }
  sub_1CA24E6B8();
  v36 = v167;
  if (v81)
  {
    v119 = v181;
    if ((v181 & 0xC000000000000001) != 0)
    {
      swift_bridgeObjectRetain();
      sub_1CA85BDC8();
      sub_1CA23CC98(&qword_1ED8720F0, (uint64_t (*)(uint64_t))type metadata accessor for SongEntry, MEMORY[0x1E0DEFCF8]);
      sub_1CA85B9CC();
      v119 = (unint64_t)v182[11];
      v172 = v182[12];
      v120 = v182[13];
      v121 = (uint64_t)v182[14];
      v122 = (unint64_t)v182[15];
    }
    else
    {
      v123 = -1 << *(_BYTE *)(v181 + 32);
      v124 = *(_QWORD *)(v181 + 56);
      v172 = (_QWORD *)(v181 + 56);
      v125 = ~v123;
      v126 = -v123;
      if (v126 < 64)
        v127 = ~(-1 << v126);
      else
        v127 = -1;
      v122 = v127 & v124;
      swift_bridgeObjectRetain();
      v120 = (id)v125;
      v121 = 0;
    }
    v164 = v119 & 0x7FFFFFFFFFFFFFFFLL;
    v162 = (int64_t)v120;
    v171 = (char *)(((unint64_t)v120 + 64) >> 6);
    v163 = (_QWORD *)(MEMORY[0x1E0DEE9B0] + 8);
    v174 = v119;
    if ((v119 & 0x8000000000000000) == 0)
      goto LABEL_93;
    while (2)
    {
      while (2)
      {
        v128 = (void *)sub_1CA85BE34();
        if (!v128
          || (v179 = v128,
              swift_unknownObjectRetain(),
              swift_dynamicCast(),
              v129 = v182[0],
              swift_unknownObjectRelease(),
              v130 = v121,
              v131 = (void *)v122,
              !v129))
        {
LABEL_124:
          v36 = v167;
          v45 = v161;
          goto LABEL_125;
        }
LABEL_105:
        v135 = objc_msgSend(v129, sel_adamID);
        if (v135)
        {
          v136 = v135;
          v173 = (_QWORD *)v121;
          v137 = sub_1CA85B534();
          v139 = v138;

          v140 = (uint64_t)v178;
          if (*((_QWORD *)v178 + 2) && (v141 = sub_1CA25081C(v137, v139), (v142 & 1) != 0))
          {
            v143 = *(_QWORD *)(v140 + 56) + *(_QWORD *)(v177 + 72) * v141;
            v144 = v168;
            sub_1CA24EE38(v143, v168, (uint64_t (*)(_QWORD))type metadata accessor for Song);
            v145 = 0;
          }
          else
          {
            v145 = 1;
            v144 = v168;
          }
          v146 = v175;
          v147 = v177;
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v177 + 56))(v144, v145, 1, v175);
          swift_bridgeObjectRelease();
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v147 + 48))(v144, 1, v146))
          {

            sub_1CA267BE8(v144, &qword_1ED871D00);
            v121 = v130;
            v122 = (unint64_t)v131;
LABEL_112:
            v119 = v174;
            if (v174 < 0)
              continue;
LABEL_93:
            if (v122)
            {
              v131 = (void *)((v122 - 1) & v122);
              v132 = __clz(__rbit64(v122)) | (v121 << 6);
              v130 = v121;
            }
            else
            {
              v130 = v121 + 1;
              if (__OFADD__(v121, 1))
                goto LABEL_135;
              if (v130 >= (uint64_t)v171)
                goto LABEL_124;
              v133 = v172[v130];
              if (!v133)
              {
                v134 = v121 + 2;
                if (v121 + 2 >= (uint64_t)v171)
                  goto LABEL_124;
                v133 = v172[v134];
                if (v133)
                  goto LABEL_102;
                v134 = v121 + 3;
                if (v121 + 3 >= (uint64_t)v171)
                  goto LABEL_124;
                v133 = v172[v134];
                if (v133)
                {
LABEL_102:
                  v130 = v134;
                }
                else
                {
                  v130 = v121 + 4;
                  if (v121 + 4 >= (uint64_t)v171)
                    goto LABEL_124;
                  v133 = v172[v130];
                  if (!v133)
                  {
                    v151 = (char *)(v121 + 5);
                    v36 = v167;
                    v45 = v161;
                    do
                    {
                      if (v171 == v151)
                        goto LABEL_125;
                      v133 = v172[(_QWORD)v151++];
                    }
                    while (!v133);
                    v130 = (uint64_t)(v151 - 1);
                  }
                }
              }
              v131 = (void *)((v133 - 1) & v133);
              v132 = __clz(__rbit64(v133)) + (v130 << 6);
            }
            v129 = *(id *)(*(_QWORD *)(v119 + 48) + 8 * v132);
            if (!v129)
              goto LABEL_124;
            goto LABEL_105;
          }
          v170 = v131;
          v148 = (uint64_t)v156;
          sub_1CA24EE38(v144, (uint64_t)v156, (uint64_t (*)(_QWORD))type metadata accessor for Song);
          sub_1CA267BE8(v144, &qword_1ED871D00);
          v149 = *(_QWORD *)(v148 + *(int *)(v146 + 72));
          swift_bridgeObjectRetain();
          sub_1CA2669CC(v148, (uint64_t (*)(_QWORD))type metadata accessor for Song);
          if (!v149)
          {

            v121 = v130;
            v122 = (unint64_t)v170;
            goto LABEL_112;
          }
          LOBYTE(v182[0]) = v169;
          BYTE1(v182[0]) = v154;
          BYTE2(v182[0]) = 1;
          BYTE3(v182[0]) = v153;
          sub_1CA401934(v129, v149, (uint64_t)v182, *(void **)(v166 + OBJC_IVAR___PGMusicCache_managedObjectContext), v155);
          v119 = v174;
          v131 = v170;
          swift_bridgeObjectRelease();
          type metadata accessor for SongPlaybackInfoEntry();
          sub_1CA23CC98(&qword_1EF94B820, (uint64_t (*)(uint64_t))type metadata accessor for SongPlaybackInfoEntry, MEMORY[0x1E0DEFCF8]);
          v150 = (void *)sub_1CA85B978();
          swift_bridgeObjectRelease();
          objc_msgSend(v129, sel_setPlaybackInfo_, v150);

        }
        else
        {

        }
        break;
      }
      v121 = v130;
      v122 = (unint64_t)v131;
      if ((v119 & 0x8000000000000000) != 0)
        continue;
      goto LABEL_93;
    }
  }
  v45 = v161;
LABEL_126:
  sub_1CA85BB70();
  if (v33)
  {
    v176 = v33;
    v17 = v181;

    goto LABEL_128;
  }

  v17 = v181;
  swift_bridgeObjectRelease();
  return v17;
}

uint64_t MusicCache.update(songs:progressReporter:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  char *v12;
  void (*v13)(char *, uint64_t);
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  char *v17;
  unint64_t v18;
  uint64_t v19;
  _BOOL8 v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t *v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t result;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t (*v35)(char *, uint64_t);
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;

  v2 = v1;
  v4 = type metadata accessor for Song();
  isUniquelyReferenced_nonNull_native = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v42 = (uint64_t)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v40 = (uint64_t *)((char *)&v34 - v8);
  v9 = sub_1CA85B2D0();
  v10 = *(_QWORD **)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1CA85BBE8();
  if (qword_1ED8723F0 != -1)
LABEL_22:
    swift_once();
  sub_1CA85B2C4();
  sub_1CA85B2A0();
  v13 = (void (*)(char *, uint64_t))v10[1];
  v13(v12, v9);
  v14 = *(_QWORD *)(a1 + 16);
  if (v14)
  {
    v35 = (uint64_t (*)(char *, uint64_t))v13;
    v36 = a1;
    v37 = v2;
    v38 = v12;
    v39 = v9;
    v2 = a1
       + ((*(unsigned __int8 *)(isUniquelyReferenced_nonNull_native + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(isUniquelyReferenced_nonNull_native + 80));
    isUniquelyReferenced_nonNull_native = *(_QWORD *)(isUniquelyReferenced_nonNull_native + 72);
    swift_bridgeObjectRetain();
    v10 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    v15 = v40;
    do
    {
      v41 = v14;
      a1 = isUniquelyReferenced_nonNull_native;
      sub_1CA24EE38(v2, (uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for Song);
      v9 = *v15;
      v16 = v15[1];
      sub_1CA24EE38((uint64_t)v15, v42, (uint64_t (*)(_QWORD))type metadata accessor for Song);
      swift_bridgeObjectRetain();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v43 = v10;
      v18 = sub_1CA25081C(v9, v16);
      v19 = v10[2];
      v20 = (v17 & 1) == 0;
      v21 = v19 + v20;
      if (__OFADD__(v19, v20))
      {
        __break(1u);
LABEL_21:
        __break(1u);
        goto LABEL_22;
      }
      v12 = v17;
      if (v10[3] >= v21)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          sub_1CA261600();
      }
      else
      {
        sub_1CA2544BC(v21, isUniquelyReferenced_nonNull_native);
        v22 = sub_1CA25081C(v9, v16);
        if ((v12 & 1) != (v23 & 1))
        {
          result = sub_1CA85C2E4();
          __break(1u);
          return result;
        }
        v18 = v22;
      }
      isUniquelyReferenced_nonNull_native = a1;
      v10 = v43;
      if ((v12 & 1) != 0)
      {
        sub_1CA2CEF0C(v42, v43[7] + v18 * a1);
      }
      else
      {
        v43[(v18 >> 6) + 8] |= 1 << v18;
        v24 = (uint64_t *)(v10[6] + 16 * v18);
        *v24 = v9;
        v24[1] = v16;
        sub_1CA24EE7C(v42, v10[7] + v18 * a1, (uint64_t (*)(_QWORD))type metadata accessor for Song);
        v25 = v10[2];
        v26 = __OFADD__(v25, 1);
        v27 = v25 + 1;
        if (v26)
          goto LABEL_21;
        v10[2] = v27;
        swift_bridgeObjectRetain();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v15 = v40;
      sub_1CA2669CC((uint64_t)v40, (uint64_t (*)(_QWORD))type metadata accessor for Song);
      v2 += a1;
      v14 = v41 - 1;
    }
    while (v41 != 1);
    v28 = swift_bridgeObjectRelease();
    MEMORY[0x1E0C80A78](v28);
    *(&v34 - 2) = (uint64_t)v10;
    *(&v34 - 1) = v29;
    v30 = v37;
    sub_1CA85BC30();
    result = swift_bridgeObjectRelease();
    v33 = v38;
    v32 = v39;
    if (!v30)
    {
      sub_1CA85BBDC();
      sub_1CA85B2C4();
      sub_1CA85B2A0();
      return v35(v33, v32);
    }
  }
  else
  {
    result = sub_1CA85BB70();
    if (!v2)
    {
      sub_1CA85BBDC();
      sub_1CA85B2C4();
      sub_1CA85B2A0();
      return ((uint64_t (*)(char *, uint64_t))v13)(v12, v9);
    }
  }
  return result;
}

void sub_1CA2C93EC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  id v17;
  void *v18;
  unint64_t v19;
  id v20;
  uint64_t v21;
  id v22;
  void *v23;
  uint64_t v24;
  id v25;
  void *v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  id v39;
  id v40;
  id v41;
  uint64_t v42;
  id v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  id v52[2];

  v3 = v2;
  v52[1] = *(id *)MEMORY[0x1E0C80C00];
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED871D00);
  MEMORY[0x1E0C80A78](v6);
  v49 = (uint64_t)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = type metadata accessor for Song();
  v50 = *(_QWORD *)(v47 - 8);
  MEMORY[0x1E0C80A78](v47);
  v44 = (uint64_t)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = objc_allocWithZone(MEMORY[0x1E0C97B48]);
  swift_bridgeObjectRetain();
  v10 = (void *)sub_1CA85B510();
  swift_bridgeObjectRelease();
  v11 = objc_msgSend(v9, sel_initWithEntityName_, v10);

  sub_1CA24EEC0(0, (unint64_t *)&qword_1ED872320);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8727B0);
  v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1CA8D51C0;
  *(_QWORD *)(v12 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v12 + 64) = sub_1CA2891BC();
  *(_QWORD *)(v12 + 32) = 0x44496D616461;
  *(_QWORD *)(v12 + 40) = 0xE600000000000000;
  v13 = swift_bridgeObjectRetain();
  v48 = a1;
  v14 = sub_1CA2826B4(v13);
  *(_QWORD *)(v12 + 96) = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED873160);
  *(_QWORD *)(v12 + 104) = sub_1CA299F74((unint64_t *)&qword_1ED8749D0, &qword_1ED873160, MEMORY[0x1E0CB1BE8]);
  *(_QWORD *)(v12 + 72) = v14;
  v15 = (void *)sub_1CA85BA80();
  objc_msgSend(v11, sel_setPredicate_, v15);

  v52[0] = 0;
  v16 = objc_msgSend(v11, sel_execute_, v52);
  v17 = v52[0];
  if (v16)
  {
    v18 = v16;
    type metadata accessor for SongEntry();
    v19 = sub_1CA85B7B0();
    v20 = v17;

    if (v19 >> 62)
      goto LABEL_28;
    v21 = *(_QWORD *)((v19 & 0xFFFFFFFFFFFFF8) + 0x10);
    while (1)
    {
      v42 = a2;
      v43 = v11;
      v46 = v3;
      if (!v21)
        break;
      v51 = v19 & 0xC000000000000001;
      a2 = 4;
      v45 = v19;
      v3 = v50;
      while (1)
      {
        v22 = v51 ? (id)MEMORY[0x1CAA4DD64](a2 - 4, v19) : *(id *)(v19 + 8 * a2);
        v23 = v22;
        v24 = a2 - 3;
        if (__OFADD__(a2 - 4, 1))
          break;
        v25 = objc_msgSend(v22, sel_adamID);
        if (v25)
        {
          v26 = v25;
          v27 = sub_1CA85B534();
          v11 = v28;

          v29 = v48;
          if (*(_QWORD *)(v48 + 16) && (v30 = sub_1CA25081C(v27, (uint64_t)v11), (v31 & 1) != 0))
          {
            sub_1CA24EE38(*(_QWORD *)(v29 + 56) + *(_QWORD *)(v50 + 72) * v30, v49, (uint64_t (*)(_QWORD))type metadata accessor for Song);
            v32 = 0;
          }
          else
          {
            v32 = 1;
          }
          v33 = v49;
          v34 = v47;
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 56))(v49, v32, 1, v47);
          swift_bridgeObjectRelease();
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v33, 1, v34) == 1)
          {

            sub_1CA267BE8(v33, &qword_1ED871D00);
            v19 = v45;
          }
          else
          {
            v35 = v33;
            v36 = v44;
            sub_1CA24EE7C(v35, v44, (uint64_t (*)(_QWORD))type metadata accessor for Song);
            v37 = v46;
            sub_1CA491C1C(v36);
            v46 = v37;
            if (v37)
            {

              sub_1CA2669CC(v36, (uint64_t (*)(_QWORD))type metadata accessor for Song);
              swift_bridgeObjectRelease();
              return;
            }
            sub_1CA2669CC(v36, (uint64_t (*)(_QWORD))type metadata accessor for Song);

            v19 = v45;
          }
        }
        else
        {

        }
        ++a2;
        if (v24 == v21)
          goto LABEL_21;
      }
      __break(1u);
LABEL_28:
      swift_bridgeObjectRetain();
      v21 = sub_1CA85C08C();
      swift_bridgeObjectRelease();
    }
LABEL_21:
    swift_bridgeObjectRelease();
    v38 = *(void **)(v42 + OBJC_IVAR___PGMusicCache_managedObjectContext);
    v52[0] = 0;
    if ((objc_msgSend(v38, sel_save_, v52) & 1) != 0)
    {
      v39 = v52[0];
    }
    else
    {
      v41 = v52[0];
      sub_1CA85A364();

      swift_willThrow();
    }

  }
  else
  {
    v40 = v52[0];
    sub_1CA85A364();

    swift_willThrow();
  }
}

void MusicCache.removeSongs(withAdamIDs:progressReporter:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void (*v8)(char *, uint64_t);
  uint64_t v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  uint64_t v16;
  _QWORD v17[2];

  v4 = sub_1CA85B2D0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1CA85BBE8();
  if (qword_1ED8723F0 != -1)
    swift_once();
  sub_1CA85B2C4();
  sub_1CA85B2A0();
  v8 = *(void (**)(char *, uint64_t))(v5 + 8);
  v8(v7, v4);
  sub_1CA85BB64();
  if (!v2)
  {
    v9 = sub_1CA85BB94();
    v11 = v10;
    v13 = v12;
    v17[1] = v17;
    MEMORY[0x1E0C80A78](v9);
    v17[-6] = a1;
    v17[-5] = v1;
    v15 = v14;
    v17[-4] = v14;
    v17[-3] = v11;
    v17[-2] = v16;
    sub_1CA85BC30();
    sub_1CA85BBDC();
    sub_1CA85B2C4();
    sub_1CA85B2A0();

    v8(v7, v4);
  }
}

void sub_1CA2C9B08(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  id v5;
  void *v6;
  id v7;
  uint64_t v8;
  void *v9;
  void *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  void *v16;
  uint64_t v17;
  id v18;
  id v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *i;
  id v26[2];

  v26[1] = *(id *)MEMORY[0x1E0C80C00];
  v5 = objc_allocWithZone(MEMORY[0x1E0C97B48]);
  swift_bridgeObjectRetain();
  v6 = (void *)sub_1CA85B510();
  swift_bridgeObjectRelease();
  v7 = objc_msgSend(v5, sel_initWithEntityName_, v6);

  sub_1CA24EEC0(0, (unint64_t *)&qword_1ED872320);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8727B0);
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1CA8D51C0;
  *(_QWORD *)(v8 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v8 + 64) = sub_1CA2891BC();
  *(_QWORD *)(v8 + 32) = 0x44496D616461;
  *(_QWORD *)(v8 + 40) = 0xE600000000000000;
  *(_QWORD *)(v8 + 96) = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED873160);
  *(_QWORD *)(v8 + 104) = sub_1CA299F74((unint64_t *)&qword_1ED8749D0, &qword_1ED873160, MEMORY[0x1E0CB1BE8]);
  *(_QWORD *)(v8 + 72) = a1;
  swift_bridgeObjectRetain();
  v9 = (void *)sub_1CA85BA80();
  objc_msgSend(v7, sel_setPredicate_, v9);

  v10 = *(void **)(a2 + OBJC_IVAR___PGMusicCache_managedObjectContext);
  type metadata accessor for SongEntry();
  v11 = sub_1CA85BC3C();
  if (v2)
  {

  }
  else
  {
    v12 = v11;
    sub_1CA85BB70();
    if (v12 >> 62)
      goto LABEL_16;
    v13 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
    for (i = v7; v13; i = v7)
    {
      v7 = (id)(v12 & 0xC000000000000001);
      v14 = 4;
      while (1)
      {
        v15 = v7 ? (id)MEMORY[0x1CAA4DD64](v14 - 4, v12) : *(id *)(v12 + 8 * v14);
        v16 = v15;
        v17 = v14 - 3;
        if (__OFADD__(v14 - 4, 1))
          break;
        objc_msgSend(v10, sel_deleteObject_, v15);
        sub_1CA85BB58();

        ++v14;
        if (v17 == v13)
          goto LABEL_11;
      }
      __break(1u);
LABEL_16:
      swift_bridgeObjectRetain();
      sub_1CA85C08C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      v13 = sub_1CA85C08C();
      swift_bridgeObjectRelease();
    }
LABEL_11:
    swift_bridgeObjectRelease();
    v26[0] = 0;
    if ((objc_msgSend(v10, sel_save_, v26) & 1) != 0)
    {
      v18 = v26[0];
      sub_1CA85BB70();
    }
    else
    {
      v19 = v26[0];
      v20 = (void *)sub_1CA85A364();

      swift_willThrow();
      swift_getErrorValue();
      v21 = sub_1CA85C308();
      v23 = v22;
      sub_1CA2CEE20();
      swift_allocError();
      *(_QWORD *)v24 = v21;
      *(_QWORD *)(v24 + 8) = v23;
      *(_BYTE *)(v24 + 16) = 0;
      swift_willThrow();

    }
  }
}

void MusicCache.write(songs:songSourceIdentifier:songSourceVersion:songSourceCategory:writeOptions:progressReporter:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, char *a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char v15;
  int v16;
  void (*v17)(char *, uint64_t);
  uint64_t v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  uint64_t v23;
  void *v24;
  void *v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  void *v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD v33[2];
  int v34;
  int v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  id v43;

  v43 = a7;
  v41 = a1;
  v42 = a6;
  v39 = a4;
  v40 = a5;
  v37 = a2;
  v38 = a3;
  v11 = sub_1CA85B2D0();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *a8;
  v16 = a8[1];
  v35 = a8[2];
  v36 = v16;
  v34 = a8[3];
  sub_1CA85BBE8();
  if (qword_1ED8723F0 != -1)
    swift_once();
  sub_1CA85B2C4();
  sub_1CA85B2A0();
  v17 = *(void (**)(char *, uint64_t))(v12 + 8);
  v17(v14, v11);
  sub_1CA85BB64();
  if (!v9)
  {
    v18 = sub_1CA85BBA0();
    v20 = v19;
    v22 = v21;
    v33[1] = v33;
    MEMORY[0x1E0C80A78](v18);
    v23 = v38;
    v33[-14] = v37;
    v33[-13] = v23;
    v33[-12] = v8;
    v25 = v24;
    v26 = v40;
    v33[-11] = v39;
    v33[-10] = v26;
    v27 = v43;
    v33[-9] = v42;
    v33[-8] = v27;
    v28 = v41;
    v33[-7] = v24;
    v33[-6] = v28;
    LOBYTE(v33[-5]) = v15;
    v30 = v29;
    BYTE1(v33[-5]) = v36;
    BYTE2(v33[-5]) = v35;
    BYTE3(v33[-5]) = v34;
    v33[-4] = v29;
    v33[-3] = v31;
    v33[-2] = v32;
    sub_1CA85BC30();
    sub_1CA85BBDC();
    v43 = v25;
    sub_1CA85B2C4();
    sub_1CA85B2A0();

    v17(v14, v11);
  }
}

void sub_1CA2CA190(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, _QWORD *a9, __int16 a10, __int16 a11, uint64_t a12)
{
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  void *v23;
  void *v24;
  uint64_t v25;
  void *v26;
  void *v27;
  void *v28;
  unint64_t v29;
  id v30;
  id v31;
  void *v32;
  void *v33;
  void *v34;
  void *v35;
  id v36;
  id v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  id v48[2];

  v46 = a6;
  v44 = a4;
  v45 = a5;
  v48[1] = *(id *)MEMORY[0x1E0C80C00];
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8711C0);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v44 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1CA24EEC0(0, (unint64_t *)&qword_1ED872320);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8727B0);
  v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_1CA8D51C0;
  v21 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v20 + 56) = MEMORY[0x1E0DEA968];
  v22 = sub_1CA2891BC();
  *(_QWORD *)(v20 + 32) = 0x696669746E656469;
  *(_QWORD *)(v20 + 40) = 0xEA00000000007265;
  *(_QWORD *)(v20 + 96) = v21;
  *(_QWORD *)(v20 + 104) = v22;
  *(_QWORD *)(v20 + 64) = v22;
  *(_QWORD *)(v20 + 72) = a1;
  *(_QWORD *)(v20 + 80) = a2;
  swift_bridgeObjectRetain();
  v23 = (void *)sub_1CA85BA80();
  v24 = *(void **)(a3 + OBJC_IVAR___PGMusicCache_managedObjectContext);
  v25 = sub_1CA85A5B0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v19, 1, 1, v25);
  v43 = a7;
  v26 = v24;
  v27 = v47;
  v28 = (void *)sub_1CA2CF6FC((uint64_t)v23, v24, 1, a1, a2, v44, v45, v46, v43, (uint64_t)v19, 0, 0, a8);
  sub_1CA267BE8((uint64_t)v19, &qword_1ED8711C0);
  if (v27)
  {

  }
  else
  {
    if (a9[2])
    {
      LOBYTE(v48[0]) = a10 & 1;
      BYTE1(v48[0]) = (unsigned __int16)(a10 & 0x100) >> 8;
      WORD1(v48[0]) = a11 & 0x101;
      v29 = sub_1CA2C7BDC(a9, v24, (unsigned __int8 *)v48, a12);
      if ((a10 & 0x100) != 0 || (v30 = objc_msgSend(v28, sel_songs)) == 0)
      {
        type metadata accessor for SongEntry();
        sub_1CA23CC98(&qword_1ED8720F0, (uint64_t (*)(uint64_t))type metadata accessor for SongEntry, MEMORY[0x1E0DEFCF8]);
        v35 = (void *)sub_1CA85B978();
        swift_bridgeObjectRelease();
        objc_msgSend(v28, sel_setSongs_, v35);

      }
      else
      {

        v31 = objc_msgSend(v28, sel_songs);
        if (v31)
        {
          v32 = v31;
          v47 = v26;
          type metadata accessor for SongEntry();
          sub_1CA23CC98(&qword_1ED8720F0, (uint64_t (*)(uint64_t))type metadata accessor for SongEntry, MEMORY[0x1E0DEFCF8]);
          v33 = (void *)sub_1CA85B984();

          v48[0] = v33;
          sub_1CA35B378(v29);
          if (v48[0])
          {
            v34 = (void *)sub_1CA85B978();
            swift_bridgeObjectRelease();
          }
          else
          {
            v34 = 0;
          }
          v26 = v47;
          objc_msgSend(v28, sel_setSongs_, v34, v44, v45, v46);

        }
        else
        {
          swift_bridgeObjectRelease();
          objc_msgSend(v28, sel_setSongs_, 0);
        }
      }
    }
    sub_1CA2CF3E4();
    v48[0] = 0;
    if ((objc_msgSend(v26, sel_save_, v48) & 1) != 0)
    {
      v36 = v48[0];
      sub_1CA85BB70();
    }
    else
    {
      v37 = v48[0];
      v38 = (void *)sub_1CA85A364();

      swift_willThrow();
      swift_getErrorValue();
      v39 = sub_1CA85C308();
      v41 = v40;
      sub_1CA2CEE20();
      swift_allocError();
      *(_QWORD *)v42 = v39;
      *(_QWORD *)(v42 + 8) = v41;
      *(_BYTE *)(v42 + 16) = 0;
      swift_willThrow();

    }
  }
}

uint64_t MusicCache.read(songSourceIdentifiers:readOptions:progressReporter:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v11[2];
  char v12;
  char v13;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 17);
  sub_1CA24EEC0(0, (unint64_t *)&qword_1ED872320);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8727B0);
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1CA8D51C0;
  *(_QWORD *)(v7 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v7 + 64) = sub_1CA2891BC();
  *(_QWORD *)(v7 + 32) = 0x696669746E656469;
  *(_QWORD *)(v7 + 40) = 0xEA00000000007265;
  *(_QWORD *)(v7 + 96) = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED872270);
  *(_QWORD *)(v7 + 104) = sub_1CA299F74((unint64_t *)&qword_1ED872290, &qword_1ED872270, MEMORY[0x1E0CB1B18]);
  *(_QWORD *)(v7 + 72) = a1;
  swift_bridgeObjectRetain();
  v8 = (void *)sub_1CA85BA80();
  v11[0] = v3;
  v11[1] = v4;
  v12 = v5;
  v13 = v6;
  v9 = sub_1CA2C645C((uint64_t)v8, 0, v11);

  return v9;
}

uint64_t MusicCache.readSongSources(identifiers:progressReporter:)(uint64_t a1, uint64_t a2)
{
  return sub_1CA2CA7A4(a1, a2, 0x696669746E656469, 0xEA00000000007265);
}

uint64_t sub_1CA2CA7A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  void *v8;
  uint64_t v9;

  sub_1CA24EEC0(0, (unint64_t *)&qword_1ED872320);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8727B0);
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1CA8D51C0;
  *(_QWORD *)(v7 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v7 + 64) = sub_1CA2891BC();
  *(_QWORD *)(v7 + 32) = a3;
  *(_QWORD *)(v7 + 40) = a4;
  *(_QWORD *)(v7 + 96) = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED872270);
  *(_QWORD *)(v7 + 104) = sub_1CA299F74((unint64_t *)&qword_1ED872290, &qword_1ED872270, MEMORY[0x1E0CB1B18]);
  *(_QWORD *)(v7 + 72) = a1;
  swift_bridgeObjectRetain();
  v8 = (void *)sub_1CA85BA80();
  v9 = sub_1CA2C2FE8();

  return v9;
}

uint64_t MusicCache.readSongSourceIdentifiers(for:progressReporter:)()
{
  uint64_t v0;
  uint64_t v2;

  v2 = MEMORY[0x1E0DEE9D8];
  sub_1CA85BC30();
  if (v0)
    return swift_bridgeObjectRelease();
  sub_1CA85BB70();
  return v2;
}

void sub_1CA2CA970(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v5;
  id v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  void *v14;
  unint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v8 = objc_allocWithZone(MEMORY[0x1E0C97B48]);
  swift_bridgeObjectRetain();
  v9 = (void *)sub_1CA85B510();
  swift_bridgeObjectRelease();
  v10 = objc_msgSend(v8, sel_initWithEntityName_, v9);

  sub_1CA24EEC0(0, (unint64_t *)&qword_1ED872320);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8727B0);
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1CA8D51C0;
  v12 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v11 + 56) = MEMORY[0x1E0DEA968];
  v13 = sub_1CA2891BC();
  *(_QWORD *)(v11 + 32) = 0x44496D616461;
  *(_QWORD *)(v11 + 40) = 0xE600000000000000;
  *(_QWORD *)(v11 + 96) = v12;
  *(_QWORD *)(v11 + 104) = v13;
  *(_QWORD *)(v11 + 64) = v13;
  *(_QWORD *)(v11 + 72) = a1;
  *(_QWORD *)(v11 + 80) = a2;
  swift_bridgeObjectRetain();
  v14 = (void *)sub_1CA85BA80();
  objc_msgSend(v10, sel_setPredicate_, v14);

  type metadata accessor for SongEntry();
  v15 = sub_1CA85BC3C();
  if (v5)
    goto LABEL_2;
  v16 = v15;
  if (!(v15 >> 62))
  {
    if (*(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_5;
LABEL_10:
    swift_bridgeObjectRelease();
    sub_1CA2CEE20();
    swift_allocError();
    *(_QWORD *)v24 = a1;
    *(_QWORD *)(v24 + 8) = a2;
    *(_BYTE *)(v24 + 16) = 1;
    swift_bridgeObjectRetain();
    swift_willThrow();
LABEL_2:

    return;
  }
  swift_bridgeObjectRetain();
  v23 = sub_1CA85C08C();
  swift_bridgeObjectRelease();
  if (!v23)
    goto LABEL_10;
LABEL_5:
  if ((v16 & 0xC000000000000001) != 0)
  {
    v18 = (id)MEMORY[0x1CAA4DD64](0, v16);
    v17 = a5;
    goto LABEL_8;
  }
  if (*(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v17 = a5;
    v18 = *(id *)(v16 + 32);
LABEL_8:
    swift_bridgeObjectRelease();
    sub_1CA85BB64();
    v19 = objc_msgSend(v18, sel_sources);
    type metadata accessor for SongSourceEntry();
    sub_1CA23CC98((unint64_t *)&unk_1EF94CA80, (uint64_t (*)(uint64_t))type metadata accessor for SongSourceEntry, MEMORY[0x1E0DEFCF8]);
    v20 = sub_1CA85B984();

    sub_1CA2C1478(v20);
    v22 = v21;
    swift_bridgeObjectRelease();

    *v17 = v22;
    swift_bridgeObjectRelease();
    return;
  }
  __break(1u);
}

void MusicCache.removeSongSources(songSourceIdentifiers:progressReporter:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  void *v9;

  v1 = a1[2];
  if (v1)
  {
    if (v1 == 1)
    {
      v4 = a1[4];
      v3 = a1[5];
      sub_1CA24EEC0(0, (unint64_t *)&qword_1ED872320);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8727B0);
      v5 = swift_allocObject();
      *(_OWORD *)(v5 + 16) = xmmword_1CA8D51C0;
      v6 = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v5 + 56) = MEMORY[0x1E0DEA968];
      v7 = sub_1CA2891BC();
      *(_QWORD *)(v5 + 32) = 0x696669746E656469;
      *(_QWORD *)(v5 + 40) = 0xEA00000000007265;
      *(_QWORD *)(v5 + 96) = v6;
      *(_QWORD *)(v5 + 104) = v7;
      *(_QWORD *)(v5 + 64) = v7;
      *(_QWORD *)(v5 + 72) = v4;
      *(_QWORD *)(v5 + 80) = v3;
    }
    else
    {
      sub_1CA24EEC0(0, (unint64_t *)&qword_1ED872320);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8727B0);
      v8 = swift_allocObject();
      *(_OWORD *)(v8 + 16) = xmmword_1CA8D51C0;
      *(_QWORD *)(v8 + 56) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v8 + 64) = sub_1CA2891BC();
      *(_QWORD *)(v8 + 32) = 0x696669746E656469;
      *(_QWORD *)(v8 + 40) = 0xEA00000000007265;
      *(_QWORD *)(v8 + 96) = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED872270);
      *(_QWORD *)(v8 + 104) = sub_1CA299F74((unint64_t *)&qword_1ED872290, &qword_1ED872270, MEMORY[0x1E0CB1B18]);
      *(_QWORD *)(v8 + 72) = a1;
    }
    swift_bridgeObjectRetain();
    v9 = (void *)sub_1CA85BA80();
    sub_1CA2C2B50();

  }
}

void MusicCache.write(songs:songSourceIdentifier:songSourceVersion:songSourceCategory:date:writeOptions:progressReporter:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, uint64_t a8, char *a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char v15;
  int v16;
  void (*v17)(char *, uint64_t);
  uint64_t v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  int v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  id v44;

  v40 = a8;
  v41 = a5;
  v44 = a7;
  v42 = a1;
  v43 = a6;
  v38 = a3;
  v39 = a4;
  v37 = a2;
  v11 = sub_1CA85B2D0();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *a9;
  v16 = a9[1];
  v35 = a9[2];
  v36 = v16;
  v34 = a9[3];
  sub_1CA85BBE8();
  if (qword_1ED8723F0 != -1)
    swift_once();
  sub_1CA85B2C4();
  sub_1CA85B2A0();
  v17 = *(void (**)(char *, uint64_t))(v12 + 8);
  v17(v14, v11);
  sub_1CA85BB64();
  if (!v10)
  {
    v18 = sub_1CA85BBA0();
    v20 = v19;
    v22 = v21;
    v33 = (uint64_t)&v33;
    v23 = MEMORY[0x1E0C80A78](v18);
    v24 = v38;
    *(&v33 - 14) = v37;
    *(&v33 - 13) = v24;
    *(&v33 - 12) = v40;
    *(&v33 - 11) = v9;
    v25 = (void *)v23;
    v26 = v41;
    *(&v33 - 10) = v39;
    *(&v33 - 9) = v26;
    v27 = (uint64_t)v44;
    *(&v33 - 8) = v43;
    *(&v33 - 7) = v27;
    v28 = v42;
    *(&v33 - 6) = v23;
    *(&v33 - 5) = v28;
    *((_BYTE *)&v33 - 32) = v15;
    v30 = v29;
    *((_BYTE *)&v33 - 31) = v36;
    *((_BYTE *)&v33 - 30) = v35;
    *((_BYTE *)&v33 - 29) = v34;
    *(&v33 - 3) = (uint64_t)v29;
    *(&v33 - 2) = v31;
    *(&v33 - 1) = v32;
    sub_1CA85BC30();
    sub_1CA85BBDC();
    v44 = v25;
    sub_1CA85B2C4();
    sub_1CA85B2A0();

    v17(v14, v11);
  }
}

void sub_1CA2CB11C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, _QWORD *a10, int a11, uint64_t a12)
{
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  void *v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  void *v29;
  id v30;
  id v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  id v43[2];

  v41 = a7;
  v38 = a8;
  v39 = a5;
  v40 = a6;
  v37 = a9;
  v43[1] = *(id *)MEMORY[0x1E0C80C00];
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8711C0);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v37 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1CA24EEC0(0, (unint64_t *)&qword_1ED872320);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8727B0);
  v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_1CA8D6080;
  v20 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v19 + 56) = MEMORY[0x1E0DEA968];
  v21 = sub_1CA2891BC();
  *(_QWORD *)(v19 + 32) = 0x696669746E656469;
  *(_QWORD *)(v19 + 40) = 0xEA00000000007265;
  *(_QWORD *)(v19 + 96) = v20;
  *(_QWORD *)(v19 + 104) = v21;
  *(_QWORD *)(v19 + 64) = v21;
  *(_QWORD *)(v19 + 72) = a1;
  *(_QWORD *)(v19 + 80) = a2;
  *(_QWORD *)(v19 + 136) = v20;
  *(_QWORD *)(v19 + 144) = v21;
  *(_QWORD *)(v19 + 112) = 1702125924;
  *(_QWORD *)(v19 + 120) = 0xE400000000000000;
  swift_bridgeObjectRetain();
  v22 = sub_1CA85A508();
  *(_QWORD *)(v19 + 176) = sub_1CA24EEC0(0, &qword_1ED8723A0);
  *(_QWORD *)(v19 + 184) = sub_1CA2CEE9C();
  *(_QWORD *)(v19 + 152) = v22;
  v23 = (void *)sub_1CA85BA80();
  v24 = *(void **)(a4 + OBJC_IVAR___PGMusicCache_managedObjectContext);
  v25 = sub_1CA85A5B0();
  v26 = *(_QWORD *)(v25 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v26 + 16))(v18, a3, v25);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v18, 0, 1, v25);
  v27 = v42;
  v28 = (void *)sub_1CA2CF6FC((uint64_t)v23, v24, 1, a1, a2, v39, v40, v41, v38, (uint64_t)v18, 0, 0, v37);
  sub_1CA267BE8((uint64_t)v18, &qword_1ED8711C0);
  if (v27)
  {

  }
  else
  {
    if (a10[2])
    {
      LODWORD(v43[0]) = a11 & 0x1010101;
      sub_1CA2C7BDC(a10, v24, (unsigned __int8 *)v43, a12);
      type metadata accessor for SongEntry();
      sub_1CA23CC98(&qword_1ED8720F0, (uint64_t (*)(uint64_t))type metadata accessor for SongEntry, MEMORY[0x1E0DEFCF8]);
      v29 = (void *)sub_1CA85B978();
      swift_bridgeObjectRelease();
      objc_msgSend(v28, sel_setSongs_, v29);

    }
    sub_1CA2CF3E4();
    v43[0] = 0;
    if ((objc_msgSend(v24, sel_save_, v43) & 1) != 0)
    {
      v30 = v43[0];
      sub_1CA85BB70();
    }
    else
    {
      v31 = v43[0];
      v32 = (void *)sub_1CA85A364();

      swift_willThrow();
      swift_getErrorValue();
      v33 = sub_1CA85C308();
      v35 = v34;
      sub_1CA2CEE20();
      swift_allocError();
      *(_QWORD *)v36 = v33;
      *(_QWORD *)(v36 + 8) = v35;
      *(_BYTE *)(v36 + 16) = 0;
      swift_willThrow();

    }
  }
}

void MusicCache.write(songsByDateMap:songSourceIdentifier:songSourceVersion:songSourceCategory:writeOptions:progressReporter:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, char *a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char v15;
  int v16;
  void (*v17)(char *, uint64_t);
  uint64_t v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  uint64_t v23;
  void *v24;
  void *v25;
  uint64_t v26;
  id v27;
  void *v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD v32[2];
  int v33;
  int v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  id v42;

  v42 = a7;
  v40 = a5;
  v41 = a6;
  v38 = a3;
  v39 = a4;
  v36 = a1;
  v37 = a2;
  v11 = sub_1CA85B2D0();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *a8;
  v16 = a8[1];
  v34 = a8[2];
  v35 = v16;
  v33 = a8[3];
  sub_1CA85BBE8();
  if (qword_1ED8723F0 != -1)
    swift_once();
  sub_1CA85B2C4();
  sub_1CA85B2A0();
  v17 = *(void (**)(char *, uint64_t))(v12 + 8);
  v17(v14, v11);
  sub_1CA85BB64();
  if (!v9)
  {
    v18 = sub_1CA85BBA0();
    v20 = v19;
    v22 = v21;
    v32[1] = v32;
    MEMORY[0x1E0C80A78](v18);
    v23 = v37;
    v32[-14] = v36;
    v32[-13] = v23;
    v32[-12] = v38;
    v32[-11] = v8;
    v25 = v24;
    v26 = v40;
    v32[-10] = v39;
    v32[-9] = v26;
    v27 = v42;
    v32[-8] = v41;
    v32[-7] = v27;
    v32[-6] = v24;
    LOBYTE(v32[-5]) = v15;
    v29 = v28;
    BYTE1(v32[-5]) = v35;
    BYTE2(v32[-5]) = v34;
    BYTE3(v32[-5]) = v33;
    v32[-4] = v28;
    v32[-3] = v30;
    v32[-2] = v31;
    sub_1CA85BC30();
    sub_1CA85BBDC();
    v42 = v25;
    sub_1CA85B2C4();
    sub_1CA85B2A0();

    v17(v14, v11);
  }
}

void sub_1CA2CB7B8(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unsigned int a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  int64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  void *v54;
  char *v55;
  uint64_t v56;
  void *v57;
  uint64_t v58;
  uint64_t v59;
  void *v60;
  _QWORD *v61;
  void *v62;
  int64_t v63;
  void *v64;
  id v65;
  id v66;
  void *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD v72[3];
  uint64_t v73;
  int64_t v74;
  int v75;
  int v76;
  int v77;
  int v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  char *v82;
  unint64_t v83;
  __int128 v84;
  uint64_t v85;
  void *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  unint64_t v94;
  int64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  id v101[2];

  v14 = v13;
  v90 = a7;
  v91 = a8;
  v88 = a5;
  v89 = a6;
  v93 = a4;
  v86 = a2;
  v87 = a3;
  v72[1] = a13;
  v72[2] = a12;
  v79 = a11;
  v85 = a9;
  v101[1] = *(id *)MEMORY[0x1E0C80C00];
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8711C0);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)v72 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_1CA85A5B0();
  v99 = *(_QWORD *)(v19 - 8);
  v100 = v19;
  MEMORY[0x1E0C80A78](v19);
  v98 = (char *)v72 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8744B0);
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)v72 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v24);
  v26 = (char *)v72 - v25;
  v27 = *(_QWORD *)(a1 + 64);
  v73 = a1 + 64;
  v28 = 1 << *(_BYTE *)(a1 + 32);
  v29 = -1;
  if (v28 < 64)
    v29 = ~(-1 << v28);
  v30 = v29 & v27;
  v78 = (a10 >> 8) & 1;
  v92 = OBJC_IVAR___PGMusicCache_managedObjectContext;
  v77 = a10 & 1;
  v76 = HIWORD(a10) & 1;
  v75 = HIBYTE(a10) & 1;
  v74 = (unint64_t)(v28 + 63) >> 6;
  v72[0] = v74 - 1;
  v80 = a1;
  swift_bridgeObjectRetain();
  v31 = 0;
  v84 = xmmword_1CA8D6080;
  v83 = 0x80000001CA88A9A0;
  v82 = v23;
  v81 = v26;
  while (1)
  {
    if (v30)
    {
      v32 = __clz(__rbit64(v30));
      v33 = (v30 - 1) & v30;
      v34 = v32 | (v31 << 6);
LABEL_8:
      v35 = v80;
      (*(void (**)(char *, unint64_t, uint64_t))(v99 + 16))(v23, *(_QWORD *)(v80 + 48) + *(_QWORD *)(v99 + 72) * v34, v100);
      v36 = *(_QWORD *)(v35 + 56);
      v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8744A8);
      *(_QWORD *)&v23[*(int *)(v37 + 48)] = *(_QWORD *)(v36 + 8 * v34);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v23, 0, 1, v37);
      swift_bridgeObjectRetain();
      goto LABEL_18;
    }
    v38 = v31 + 1;
    if (__OFADD__(v31, 1))
    {
      __break(1u);
LABEL_41:
      __break(1u);
    }
    if (v38 < v74)
    {
      v39 = *(_QWORD *)(v73 + 8 * v38);
      if (v39)
        goto LABEL_12;
      v31 += 2;
      if (v38 + 1 >= v74)
      {
        v31 = v38;
      }
      else
      {
        v39 = *(_QWORD *)(v73 + 8 * v31);
        if (v39)
        {
          ++v38;
LABEL_12:
          v33 = (v39 - 1) & v39;
          v34 = __clz(__rbit64(v39)) + (v38 << 6);
          v31 = v38;
          goto LABEL_8;
        }
        if (v38 + 2 < v74)
        {
          v39 = *(_QWORD *)(v73 + 8 * (v38 + 2));
          if (v39)
          {
            v38 += 2;
            goto LABEL_12;
          }
          v63 = v38 + 3;
          if (v38 + 3 >= v74)
          {
            v31 = v38 + 2;
          }
          else
          {
            v39 = *(_QWORD *)(v73 + 8 * v63);
            if (v39)
            {
              v38 += 3;
              goto LABEL_12;
            }
            while (1)
            {
              v38 = v63 + 1;
              if (__OFADD__(v63, 1))
                goto LABEL_41;
              if (v38 >= v74)
                break;
              v39 = *(_QWORD *)(v73 + 8 * v38);
              ++v63;
              if (v39)
                goto LABEL_12;
            }
            v31 = v72[0];
          }
        }
      }
    }
    v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8744A8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56))(v23, 1, 1, v40);
    v33 = 0;
LABEL_18:
    sub_1CA24EEF8((uint64_t)v23, (uint64_t)v26, &qword_1ED8744B0);
    v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8744A8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 48))(v26, 1, v41) == 1)
      break;
    v94 = v33;
    v95 = v31;
    v96 = *(_QWORD *)&v26[*(int *)(v41 + 48)];
    v43 = v98;
    v42 = v99;
    v44 = v26;
    v45 = v18;
    v46 = v100;
    (*(void (**)(char *, char *, uint64_t))(v99 + 32))(v98, v44, v100);
    sub_1CA24EEC0(0, (unint64_t *)&qword_1ED872320);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8727B0);
    v47 = swift_allocObject();
    *(_OWORD *)(v47 + 16) = v84;
    v48 = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v47 + 56) = MEMORY[0x1E0DEA968];
    v49 = sub_1CA2891BC();
    *(_QWORD *)(v47 + 32) = 0x696669746E656469;
    *(_QWORD *)(v47 + 40) = 0xEA00000000007265;
    *(_QWORD *)(v47 + 96) = v48;
    *(_QWORD *)(v47 + 104) = v49;
    v97 = v14;
    v50 = v86;
    v51 = v87;
    *(_QWORD *)(v47 + 64) = v49;
    *(_QWORD *)(v47 + 72) = v50;
    *(_QWORD *)(v47 + 80) = v51;
    *(_QWORD *)(v47 + 136) = v48;
    *(_QWORD *)(v47 + 144) = v49;
    *(_QWORD *)(v47 + 112) = 1702125924;
    *(_QWORD *)(v47 + 120) = 0xE400000000000000;
    swift_bridgeObjectRetain();
    v52 = sub_1CA85A508();
    *(_QWORD *)(v47 + 176) = sub_1CA24EEC0(0, &qword_1ED8723A0);
    *(_QWORD *)(v47 + 184) = sub_1CA2CEE9C();
    *(_QWORD *)(v47 + 152) = v52;
    v53 = (void *)sub_1CA85BA80();
    v54 = *(void **)(v93 + v92);
    (*(void (**)(char *, char *, uint64_t))(v42 + 16))(v45, v43, v46);
    v55 = v45;
    v56 = v46;
    v18 = v45;
    v57 = v53;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v42 + 56))(v55, 0, 1, v56);
    v58 = v97;
    v59 = sub_1CA2CF6FC((uint64_t)v53, v54, 1, v50, v51, v88, v89, v90, v91, (uint64_t)v18, 0, 0, v85);
    v14 = v58;
    if (v58)
    {
      swift_bridgeObjectRelease();

      sub_1CA267BE8((uint64_t)v18, &qword_1ED8711C0);
      (*(void (**)(char *, uint64_t))(v99 + 8))(v98, v100);
      swift_release();
      return;
    }
    v60 = (void *)v59;
    sub_1CA267BE8((uint64_t)v18, &qword_1ED8711C0);
    if (*(_QWORD *)(v96 + 16))
    {
      v61 = (_QWORD *)sub_1CA2438E8(v96);
      swift_bridgeObjectRelease();
      LOBYTE(v101[0]) = v77;
      BYTE1(v101[0]) = v78;
      BYTE2(v101[0]) = v76;
      BYTE3(v101[0]) = v75;
      sub_1CA2C7BDC(v61, v54, (unsigned __int8 *)v101, v79);
      swift_release();
      type metadata accessor for SongEntry();
      sub_1CA23CC98(&qword_1ED8720F0, (uint64_t (*)(uint64_t))type metadata accessor for SongEntry, MEMORY[0x1E0DEFCF8]);
      v62 = (void *)sub_1CA85B978();
      swift_bridgeObjectRelease();
      objc_msgSend(v60, sel_setSongs_, v62);

      (*(void (**)(char *, uint64_t))(v99 + 8))(v98, v100);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v99 + 8))(v98, v100);
      swift_bridgeObjectRelease();

    }
    v23 = v82;
    v26 = v81;
    v30 = v94;
    v31 = v95;
  }
  swift_release();
  v64 = *(void **)(v93 + v92);
  sub_1CA2CF3E4();
  if (!v14)
  {
    v101[0] = 0;
    if ((objc_msgSend(v64, sel_save_, v101) & 1) != 0)
    {
      v65 = v101[0];
      sub_1CA85BB70();
    }
    else
    {
      v66 = v101[0];
      v67 = (void *)sub_1CA85A364();

      swift_willThrow();
      swift_getErrorValue();
      v68 = sub_1CA85C308();
      v70 = v69;
      sub_1CA2CEE20();
      swift_allocError();
      *(_QWORD *)v71 = v68;
      *(_QWORD *)(v71 + 8) = v70;
      *(_BYTE *)(v71 + 16) = 0;
      swift_willThrow();

    }
  }
}

uint64_t MusicCache.read(songSourceIdentifier:dates:readOptions:progressReporter:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  char v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18[2];
  char v19;
  char v20;

  v7 = *(_QWORD *)a4;
  v17 = *(_QWORD *)(a4 + 8);
  v8 = *(_BYTE *)(a4 + 16);
  v9 = *(_BYTE *)(a4 + 17);
  sub_1CA24EEC0(0, (unint64_t *)&qword_1ED872320);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8727B0);
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1CA8D6080;
  v11 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v10 + 56) = MEMORY[0x1E0DEA968];
  v12 = sub_1CA2891BC();
  *(_QWORD *)(v10 + 32) = 0x696669746E656469;
  *(_QWORD *)(v10 + 40) = 0xEA00000000007265;
  *(_QWORD *)(v10 + 96) = v11;
  *(_QWORD *)(v10 + 104) = v12;
  *(_QWORD *)(v10 + 64) = v12;
  *(_QWORD *)(v10 + 72) = a1;
  *(_QWORD *)(v10 + 80) = a2;
  *(_QWORD *)(v10 + 136) = v11;
  *(_QWORD *)(v10 + 144) = v12;
  *(_QWORD *)(v10 + 112) = 1702125924;
  *(_QWORD *)(v10 + 120) = 0xE400000000000000;
  swift_bridgeObjectRetain();
  v13 = sub_1CA28E6A0(a3);
  *(_QWORD *)(v10 + 176) = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8722D8);
  *(_QWORD *)(v10 + 184) = sub_1CA299F74((unint64_t *)&unk_1ED8722E0, &qword_1ED8722D8, MEMORY[0x1E0CB1B18]);
  *(_QWORD *)(v10 + 152) = v13;
  v14 = (void *)sub_1CA85BA80();
  v18[0] = v7;
  v18[1] = v17;
  v19 = v8;
  v20 = v9;
  v15 = sub_1CA2C645C((uint64_t)v14, 0, v18);

  return v15;
}

uint64_t MusicCache.read(songSourceIdentifier:date:readOptions:progressReporter:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v17[2];
  char v18;
  char v19;

  v5 = *a4;
  v6 = a4[1];
  v7 = *((_BYTE *)a4 + 16);
  v8 = *((_BYTE *)a4 + 17);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED8726F0);
  v9 = sub_1CA85A5B0();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1CA8D4E40;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v10 + 16))(v12 + v11, a3, v9);
  v17[0] = v5;
  v17[1] = v6;
  v18 = v7;
  v19 = v8;
  v13 = MusicCache.read(songSourceIdentifier:dates:readOptions:progressReporter:)(a1, a2, v12, (uint64_t)v17);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  return v13;
}

void MusicCache.removeSongSource(songSourceIdentifier:date:progressReporter:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  void *v8;

  sub_1CA24EEC0(0, (unint64_t *)&qword_1ED872320);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8727B0);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1CA8D6080;
  v5 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v4 + 56) = MEMORY[0x1E0DEA968];
  v6 = sub_1CA2891BC();
  *(_QWORD *)(v4 + 32) = 0x696669746E656469;
  *(_QWORD *)(v4 + 40) = 0xEA00000000007265;
  *(_QWORD *)(v4 + 96) = v5;
  *(_QWORD *)(v4 + 104) = v6;
  *(_QWORD *)(v4 + 64) = v6;
  *(_QWORD *)(v4 + 72) = a1;
  *(_QWORD *)(v4 + 80) = a2;
  *(_QWORD *)(v4 + 136) = v5;
  *(_QWORD *)(v4 + 144) = v6;
  *(_QWORD *)(v4 + 112) = 1702125924;
  *(_QWORD *)(v4 + 120) = 0xE400000000000000;
  swift_bridgeObjectRetain();
  v7 = sub_1CA85A508();
  *(_QWORD *)(v4 + 176) = sub_1CA24EEC0(0, &qword_1ED8723A0);
  *(_QWORD *)(v4 + 184) = sub_1CA2CEE9C();
  *(_QWORD *)(v4 + 152) = v7;
  v8 = (void *)sub_1CA85BA80();
  sub_1CA2C2B50();

}

uint64_t MusicCache.readSongSources(identifiersAndDates:progressReporter:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, char *, uint64_t);
  void (*v20)(char *, uint64_t);
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  _QWORD v34[4];
  char *v35;
  void (*v36)(char *, char *, uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v34[3] = a2;
  v4 = sub_1CA85A5B0();
  v39 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED874920);
  MEMORY[0x1E0C80A78](v38);
  v9 = (_QWORD *)((char *)v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = MEMORY[0x1E0DEE9E8];
  v43 = MEMORY[0x1E0DEE9E8];
  v42 = MEMORY[0x1E0DEE9E8];
  v11 = *(_QWORD *)(a1 + 16);
  if (v11)
  {
    v34[1] = a1;
    v34[2] = v2;
    v12 = (uint64_t *)(a1 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80)));
    v13 = *(_QWORD *)(v7 + 72);
    v36 = *(void (**)(char *, char *, uint64_t))(v39 + 16);
    v37 = v13;
    swift_bridgeObjectRetain();
    v35 = v6;
    v14 = v38;
    do
    {
      v15 = *(int *)(v14 + 48);
      v16 = (char *)v9 + v15;
      v40 = (char *)v12 + v15;
      v17 = *v12;
      v18 = v12[1];
      *v9 = *v12;
      v9[1] = v18;
      v19 = v36;
      ((void (*)(char *))v36)((char *)v9 + v15);
      swift_bridgeObjectRetain();
      sub_1CA23F448(&v41, v17, v18);
      swift_bridgeObjectRelease();
      v20 = *(void (**)(char *, uint64_t))(v39 + 8);
      v21 = v16;
      v14 = v38;
      v20(v21, v4);
      v22 = (char *)v9 + *(int *)(v14 + 48);
      v23 = v12[1];
      *v9 = *v12;
      v9[1] = v23;
      v19(v22, v40, v4);
      v24 = (uint64_t)v35;
      sub_1CA23FB5C((uint64_t)v35, v22);
      v20((char *)v24, v4);
      v12 = (uint64_t *)((char *)v12 + v37);
      --v11;
    }
    while (v11);
    swift_bridgeObjectRelease();
    v25 = v43;
    v10 = v42;
  }
  else
  {
    v25 = MEMORY[0x1E0DEE9E8];
  }
  sub_1CA24EEC0(0, (unint64_t *)&qword_1ED872320);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8727B0);
  v26 = swift_allocObject();
  *(_OWORD *)(v26 + 16) = xmmword_1CA8D6080;
  v27 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v26 + 56) = MEMORY[0x1E0DEA968];
  v28 = sub_1CA2891BC();
  *(_QWORD *)(v26 + 64) = v28;
  *(_QWORD *)(v26 + 32) = 0x696669746E656469;
  *(_QWORD *)(v26 + 40) = 0xEA00000000007265;
  *(_QWORD *)(v26 + 96) = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED873160);
  v29 = MEMORY[0x1E0CB1BE8];
  v30 = sub_1CA299F74((unint64_t *)&qword_1ED8749D0, &qword_1ED873160, MEMORY[0x1E0CB1BE8]);
  *(_QWORD *)(v26 + 72) = v25;
  *(_QWORD *)(v26 + 136) = v27;
  *(_QWORD *)(v26 + 144) = v28;
  *(_QWORD *)(v26 + 104) = v30;
  *(_QWORD *)(v26 + 112) = 1702125924;
  *(_QWORD *)(v26 + 120) = 0xE400000000000000;
  *(_QWORD *)(v26 + 176) = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8749B8);
  *(_QWORD *)(v26 + 184) = sub_1CA299F74((unint64_t *)&unk_1ED8749C0, &qword_1ED8749B8, v29);
  *(_QWORD *)(v26 + 152) = v10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v31 = (void *)sub_1CA85BA80();
  v32 = sub_1CA2C2FE8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return v32;
}

PhotosGraph::MusicCache::LocationTolerance_optional __swiftcall MusicCache.LocationTolerance.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;

  v2 = rawValue - 1;
  if ((unint64_t)(rawValue - 1) >= 0xB)
    v2 = 11;
  *v1 = v2;
  return (PhotosGraph::MusicCache::LocationTolerance_optional)rawValue;
}

uint64_t sub_1CA2CC7B4()
{
  sub_1CA85C368();
  sub_1CA85C374();
  return sub_1CA85C3B0();
}

uint64_t sub_1CA2CC7F8()
{
  return sub_1CA85C374();
}

uint64_t sub_1CA2CC824()
{
  sub_1CA85C368();
  sub_1CA85C374();
  return sub_1CA85C3B0();
}

PhotosGraph::MusicCache::LocationTolerance_optional sub_1CA2CC864(Swift::Int *a1)
{
  return MusicCache.LocationTolerance.init(rawValue:)(*a1);
}

void sub_1CA2CC86C(_QWORD *a1@<X8>)
{
  unsigned __int8 *v1;

  *a1 = *v1 + 1;
}

void static MusicCache.defaultLocationTolerance.getter(_BYTE *a1@<X8>)
{
  *a1 = 6;
}

uint64_t MusicCache.write(songs:songSourceIdentifier:songSourceVersion:songSourceCategory:location:date:writeOptions:progressReporter:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8, uint64_t a9, unsigned __int8 *a10)
{
  unsigned __int8 v10;
  unsigned __int8 v11;
  unsigned __int8 v12;
  unsigned __int8 v13;
  unsigned __int8 v15[4];
  unsigned __int8 v16;

  v10 = *a10;
  v11 = a10[1];
  v12 = a10[2];
  v13 = a10[3];
  v16 = 6;
  v15[0] = v10;
  v15[1] = v11;
  v15[2] = v12;
  v15[3] = v13;
  return MusicCache.write(songs:songSourceIdentifier:songSourceVersion:songSourceCategory:location:locationTolerance:date:writeOptions:progressReporter:)(a1, a2, a3, a4, a5, a6, a7, a8, &v16, a9, v15);
}

uint64_t MusicCache.write(songs:songSourceIdentifier:songSourceVersion:songSourceCategory:location:locationTolerance:date:writeOptions:progressReporter:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8, unsigned __int8 *a9, uint64_t a10, unsigned __int8 *a11)
{
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  int v18;
  int v19;
  void (*v20)(char *, uint64_t);
  uint64_t result;
  uint64_t v22;
  void *v23;
  void *v24;
  uint64_t v25;
  void *v26;
  void *v27;
  void *v28;
  uint64_t v29;
  uint64_t inited;
  double v31;
  double v32;
  void *v33;
  void *v34;
  double v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t (*v47)(char *, uint64_t);
  uint64_t *v48;
  void *v49;
  uint64_t v50;
  int v51;
  int v52;
  int v53;
  int v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;

  v57 = a4;
  v60 = a6;
  v61 = a7;
  v58 = a5;
  v59 = a1;
  v55 = a2;
  v56 = a3;
  v13 = sub_1CA85B2D0();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v46 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = *a9;
  v18 = *a11;
  v53 = a11[1];
  v54 = v18;
  v19 = a11[2];
  v51 = a11[3];
  v52 = v19;
  sub_1CA85BBE8();
  if (qword_1ED8723F0 != -1)
    swift_once();
  sub_1CA85B2C4();
  sub_1CA85B2A0();
  v20 = *(void (**)(char *, uint64_t))(v14 + 8);
  v20(v16, v13);
  result = sub_1CA85BB64();
  if (!v11)
  {
    v46 = v13;
    v47 = (uint64_t (*)(char *, uint64_t))v20;
    v50 = a10;
    v22 = sub_1CA85BBA0();
    v24 = v23;
    v25 = v17;
    v27 = v26;
    v49 = v28;
    v29 = v25 + 1;
    type metadata accessor for Geohash();
    inited = swift_initStackObject();
    *(_QWORD *)(inited + 16) = 0;
    *(_QWORD *)(inited + 24) = 0;
    objc_msgSend(a8, sel_coordinate);
    v32 = v31;
    v33 = (void *)v22;
    v34 = v27;
    objc_msgSend(a8, sel_coordinate);
    v36 = sub_1CA488858(v29, v32, v35);
    v38 = v37;
    swift_setDeallocating();
    swift_bridgeObjectRelease();
    v39 = swift_bridgeObjectRelease();
    v48 = &v46;
    MEMORY[0x1E0C80A78](v39);
    v40 = v55;
    *(&v46 - 18) = v41;
    *(&v46 - 17) = v40;
    *(&v46 - 16) = v56;
    *(&v46 - 15) = v36;
    v43 = v49;
    v42 = v50;
    *(&v46 - 14) = v38;
    *(&v46 - 13) = v42;
    v44 = v58;
    *(&v46 - 12) = v57;
    *(&v46 - 11) = v44;
    v45 = v61;
    *(&v46 - 10) = v60;
    *(&v46 - 9) = v45;
    *(&v46 - 8) = (uint64_t)a8;
    *(&v46 - 7) = (uint64_t)v33;
    *(&v46 - 6) = v59;
    *((_BYTE *)&v46 - 40) = v54;
    *((_BYTE *)&v46 - 39) = v53;
    *((_BYTE *)&v46 - 38) = v52;
    *((_BYTE *)&v46 - 37) = v51;
    *(&v46 - 4) = (uint64_t)v24;
    *(&v46 - 3) = (uint64_t)v34;
    *(&v46 - 2) = (uint64_t)v43;
    sub_1CA85BC30();
    swift_bridgeObjectRelease();
    sub_1CA85BBDC();
    sub_1CA85B2C4();
    sub_1CA85B2A0();

    return v47(v16, v46);
  }
  return result;
}

void sub_1CA2CCC30(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, _QWORD *a13, int a14, uint64_t a15)
{
  uint64_t v21;
  uint64_t v22;
  char *v23;
  void *v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  void *v30;
  id v31;
  id v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  id v47[3];

  v45 = a8;
  v39 = a2;
  v40 = a3;
  v43 = a9;
  v44 = a7;
  v41 = a12;
  v42 = a10;
  v47[1] = *(id *)MEMORY[0x1E0C80C00];
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8711C0);
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)&v38 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = (void *)sub_1CA2CFA6C((uint64_t)a2, a3, a4, a5);
  v25 = *(void **)(a1 + OBJC_IVAR___PGMusicCache_managedObjectContext);
  v26 = sub_1CA85A5B0();
  v27 = *(_QWORD *)(v26 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v27 + 16))(v23, a6, v26);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v23, 0, 1, v26);
  v28 = v46;
  v29 = (void *)sub_1CA2CF6FC((uint64_t)v24, v25, 1, v39, v40, v44, v45, v43, v42, (uint64_t)v23, a4, a5, v41);
  sub_1CA267BE8((uint64_t)v23, &qword_1ED8711C0);
  if (v28)
  {

  }
  else
  {
    if (a13[2])
    {
      LODWORD(v47[0]) = a14 & 0x1010101;
      sub_1CA2C7BDC(a13, v25, (unsigned __int8 *)v47, a15);
      type metadata accessor for SongEntry();
      sub_1CA23CC98(&qword_1ED8720F0, (uint64_t (*)(uint64_t))type metadata accessor for SongEntry, MEMORY[0x1E0DEFCF8]);
      v30 = (void *)sub_1CA85B978();
      swift_bridgeObjectRelease();
      objc_msgSend(v29, sel_setSongs_, v30);

    }
    sub_1CA2CF3E4();
    v47[0] = 0;
    if ((objc_msgSend(v25, sel_save_, v47) & 1) != 0)
    {
      v31 = v47[0];
      sub_1CA85BB70();
    }
    else
    {
      v32 = v47[0];
      v33 = (void *)sub_1CA85A364();

      swift_willThrow();
      swift_getErrorValue();
      v34 = sub_1CA85C308();
      v36 = v35;
      sub_1CA2CEE20();
      swift_allocError();
      *(_QWORD *)v37 = v34;
      *(_QWORD *)(v37 + 8) = v36;
      *(_BYTE *)(v37 + 16) = 0;
      swift_willThrow();

    }
  }
}

uint64_t MusicCache.read(songSourceIdentifier:location:date:progressReporter:)(uint64_t a1, uint64_t a2, void *a3)
{
  unsigned __int8 v4;

  v4 = 6;
  return MusicCache.read(songSourceIdentifier:location:locationTolerance:date:progressReporter:)(a1, a2, a3, &v4);
}

uint64_t MusicCache.read(songSourceIdentifier:location:locationTolerance:date:progressReporter:)(uint64_t a1, uint64_t a2, void *a3, unsigned __int8 *a4)
{
  uint64_t v7;
  uint64_t inited;
  double v9;
  double v10;
  double v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v18[2];
  __int16 v19;

  v7 = *a4 + 1;
  type metadata accessor for Geohash();
  inited = swift_initStackObject();
  *(_QWORD *)(inited + 16) = 0;
  *(_QWORD *)(inited + 24) = 0;
  objc_msgSend(a3, sel_coordinate);
  v10 = v9;
  objc_msgSend(a3, sel_coordinate);
  v12 = sub_1CA488858(v7, v10, v11);
  v14 = v13;
  swift_setDeallocating();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v15 = (void *)sub_1CA2CFA6C(a1, a2, v12, v14);
  v18[0] = 0;
  v18[1] = 0;
  v19 = 1;
  v16 = sub_1CA2C645C((uint64_t)v15, 0, v18);
  swift_bridgeObjectRelease();

  return v16;
}

uint64_t MusicCache.read(songSourceIdentifier:geohash:date:progressReporter:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  uint64_t v5;
  uint64_t v7[2];
  __int16 v8;

  v4 = (void *)sub_1CA2CFA6C(a1, a2, a3, a4);
  v7[0] = 0;
  v7[1] = 0;
  v8 = 1;
  v5 = sub_1CA2C645C((uint64_t)v4, 0, v7);

  return v5;
}

uint64_t MusicCache.readSongSources(identifiersDatesAndLocations:locationTolerance:progressReporter:)(uint64_t a1, unsigned __int8 *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  uint64_t inited;
  double v15;
  double v16;
  double v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v2 = *a2;
  v3 = MEMORY[0x1E0DEE9E8];
  v36 = MEMORY[0x1E0DEE9E8];
  v34 = MEMORY[0x1E0DEE9E8];
  v35 = MEMORY[0x1E0DEE9E8];
  v4 = *(_QWORD *)(a1 + 16);
  if (v4)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED874910);
    v7 = *(_QWORD *)(v6 - 8);
    v8 = (uint64_t *)(a1 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80)));
    v32 = v2 + 1;
    v9 = *(_QWORD *)(v7 + 72);
    swift_bridgeObjectRetain();
    do
    {
      v10 = *v8;
      v11 = v8[1];
      v12 = *(void **)((char *)v8 + *(int *)(v6 + 64));
      swift_bridgeObjectRetain();
      sub_1CA23F448((uint64_t *)&v33, v10, v11);
      swift_bridgeObjectRelease();
      v13 = (void *)sub_1CA85A508();
      sub_1CA23FDB8(&v33, v13);

      type metadata accessor for Geohash();
      inited = swift_initStackObject();
      *(_QWORD *)(inited + 16) = 0;
      *(_QWORD *)(inited + 24) = 0;
      objc_msgSend(v12, sel_coordinate);
      v16 = v15;
      objc_msgSend(v12, sel_coordinate);
      v18 = sub_1CA488858(v32, v16, v17);
      v20 = v19;
      swift_setDeallocating();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1CA23F448((uint64_t *)&v33, v18, v20);
      swift_bridgeObjectRelease();
      v8 = (uint64_t *)((char *)v8 + v9);
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease();
    v21 = v36;
    v3 = v34;
    v22 = v35;
  }
  else
  {
    v22 = MEMORY[0x1E0DEE9E8];
    v21 = MEMORY[0x1E0DEE9E8];
  }
  sub_1CA24EEC0(0, (unint64_t *)&qword_1ED872320);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8727B0);
  v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_1CA8D9C90;
  v24 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v23 + 56) = MEMORY[0x1E0DEA968];
  v25 = sub_1CA2891BC();
  *(_QWORD *)(v23 + 64) = v25;
  *(_QWORD *)(v23 + 32) = 0x696669746E656469;
  *(_QWORD *)(v23 + 40) = 0xEA00000000007265;
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED873160);
  *(_QWORD *)(v23 + 96) = v26;
  v27 = MEMORY[0x1E0CB1BE8];
  v28 = sub_1CA299F74((unint64_t *)&qword_1ED8749D0, &qword_1ED873160, MEMORY[0x1E0CB1BE8]);
  *(_QWORD *)(v23 + 72) = v21;
  *(_QWORD *)(v23 + 136) = v24;
  *(_QWORD *)(v23 + 144) = v25;
  *(_QWORD *)(v23 + 104) = v28;
  *(_QWORD *)(v23 + 112) = 0x687361686F6567;
  *(_QWORD *)(v23 + 120) = 0xE700000000000000;
  *(_QWORD *)(v23 + 176) = v26;
  *(_QWORD *)(v23 + 184) = v28;
  *(_QWORD *)(v23 + 152) = v22;
  *(_QWORD *)(v23 + 216) = v24;
  *(_QWORD *)(v23 + 224) = v25;
  *(_QWORD *)(v23 + 192) = 1702125924;
  *(_QWORD *)(v23 + 200) = 0xE400000000000000;
  *(_QWORD *)(v23 + 256) = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8749E0);
  *(_QWORD *)(v23 + 264) = sub_1CA299F74(&qword_1ED8749E8, &qword_1ED8749E0, v27);
  *(_QWORD *)(v23 + 232) = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v29 = (void *)sub_1CA85BA80();
  v30 = sub_1CA2C2FE8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return v30;
}

void MusicCache.removeSongSource(songSourceIdentifier:location:locationTolerance:date:progressReporter:)(uint64_t a1, uint64_t a2, void *a3, unsigned __int8 *a4)
{
  uint64_t v7;
  uint64_t inited;
  double v9;
  double v10;
  double v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;

  v7 = *a4 + 1;
  type metadata accessor for Geohash();
  inited = swift_initStackObject();
  *(_QWORD *)(inited + 16) = 0;
  *(_QWORD *)(inited + 24) = 0;
  objc_msgSend(a3, sel_coordinate);
  v10 = v9;
  objc_msgSend(a3, sel_coordinate);
  v12 = sub_1CA488858(v7, v10, v11);
  v14 = v13;
  swift_setDeallocating();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v15 = (void *)sub_1CA2CFA6C(a1, a2, v12, v14);
  swift_bridgeObjectRelease();
  v16 = v15;
  sub_1CA2C2B50();

}

Swift::String __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> MusicCache.status()()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  Swift::String result;

  sub_1CA85BC30();
  if (v0)
  {
    v1 = swift_bridgeObjectRelease();
  }
  else
  {
    v1 = 0;
    v2 = (void *)0xE000000000000000;
  }
  result._object = v2;
  result._countAndFlagsBits = v1;
  return result;
}

void sub_1CA2CD610()
{
  uint64_t v0;
  id v1;
  void *v2;
  id v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  id v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t i;
  id v13;
  void *v14;
  id v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  unint64_t v21;
  id v22;
  void *v23;
  id v24;
  void *v25;
  id v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  id v33;
  unint64_t v34;
  unint64_t v35;

  v1 = objc_allocWithZone(MEMORY[0x1E0C97B48]);
  swift_bridgeObjectRetain();
  v2 = (void *)sub_1CA85B510();
  swift_bridgeObjectRelease();
  v3 = objc_msgSend(v1, sel_initWithEntityName_, v2);

  type metadata accessor for SongSourceEntry();
  v4 = sub_1CA85BC3C();
  if (v0)
  {

    return;
  }
  v5 = v4;
  sub_1CA85BEC4();
  swift_bridgeObjectRelease();
  v6 = v5 >> 62;
  v34 = v5;
  if (v5 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_1CA85C08C();
    swift_bridgeObjectRelease();
  }
  sub_1CA85C260();
  sub_1CA85B624();
  swift_bridgeObjectRelease();
  sub_1CA85B624();
  sub_1CA85B624();
  swift_bridgeObjectRelease();
  type metadata accessor for SongEntry();
  v7 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_fetchRequest);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94CA78);
  v8 = sub_1CA85BC3C();
  v33 = v7;
  if (v8 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_1CA85C08C();
    swift_bridgeObjectRelease();
  }
  sub_1CA85BEC4();
  swift_bridgeObjectRelease();
  sub_1CA85C260();
  sub_1CA85B624();
  swift_bridgeObjectRelease();
  sub_1CA85B624();
  sub_1CA85B624();
  swift_bridgeObjectRelease();
  if (v8 >> 62)
  {
    swift_bridgeObjectRetain();
    v10 = sub_1CA85C050();
    swift_bridgeObjectRelease_n();
    v8 = v10;
  }
  else
  {
    v9 = v8 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    sub_1CA85C290();
    if (swift_dynamicCastMetatype() || (v29 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10)) == 0)
    {
LABEL_9:
      swift_bridgeObjectRelease();
    }
    else
    {
      v30 = v9 + 32;
      while (swift_dynamicCastClass())
      {
        v30 += 8;
        if (!--v29)
          goto LABEL_9;
      }
      swift_bridgeObjectRelease();
      v8 = v9 | 1;
    }
  }
  v35 = MEMORY[0x1E0DEE9D8];
  if (v8 >> 62)
  {
    swift_bridgeObjectRetain();
    v11 = sub_1CA85C08C();
  }
  else
  {
    v11 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
  }
  v31 = 0;
  v32 = v3;
  if (v11)
  {
    if (v11 < 1)
    {
      __break(1u);
      goto LABEL_55;
    }
    for (i = 0; i != v11; ++i)
    {
      if ((v8 & 0xC000000000000001) != 0)
        v13 = (id)MEMORY[0x1CAA4DD64](i, v8);
      else
        v13 = *(id *)(v8 + 8 * i + 32);
      v14 = v13;
      v15 = objc_msgSend(v13, sel_preferenceScore, v31, v32);

      if (v15)
      {
        MEMORY[0x1CAA4D5F0]();
        if (*(_QWORD *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1CA85B7EC();
        sub_1CA85B834();
        sub_1CA85B7C8();
      }
    }
    swift_bridgeObjectRelease();
    v16 = v35;
  }
  else
  {
    swift_bridgeObjectRelease();
    v16 = MEMORY[0x1E0DEE9D8];
  }
  swift_bridgeObjectRelease();
  if (v16 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_1CA85C08C();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  sub_1CA85BEC4();
  sub_1CA85B624();
  sub_1CA85B93C();
  sub_1CA85B624();
  sub_1CA85B624();
  swift_bridgeObjectRelease();
  sub_1CA85B624();
  if (v6)
  {
    v17 = v34;
    swift_bridgeObjectRetain();
    v18 = sub_1CA85C08C();
    swift_bridgeObjectRelease();
    v19 = v33;
    if (!v18)
    {
LABEL_46:

      swift_bridgeObjectRelease();
      return;
    }
  }
  else
  {
    v17 = v34;
    v18 = *(_QWORD *)((v34 & 0xFFFFFFFFFFFFF8) + 0x10);
    v19 = v33;
    if (!v18)
      goto LABEL_46;
  }
  if (v18 >= 1)
  {
    v20 = 0;
    v21 = v17 & 0xC000000000000001;
    do
    {
      if (v21)
        v22 = (id)MEMORY[0x1CAA4DD64](v20, v17);
      else
        v22 = *(id *)(v17 + 8 * v20 + 32);
      v23 = v22;
      v24 = objc_msgSend(v22, sel_identifier, v31);
      if (v24)
      {
        v25 = v24;
        sub_1CA85B534();

        v26 = objc_msgSend(v23, sel_songs);
        if (v26)
        {
          v27 = v26;
          sub_1CA23CC98(&qword_1ED8720F0, (uint64_t (*)(uint64_t))type metadata accessor for SongEntry, MEMORY[0x1E0DEFCF8]);
          v28 = sub_1CA85B984();

          if ((v28 & 0xC000000000000001) != 0)
            sub_1CA85BE04();
          swift_bridgeObjectRelease();
          sub_1CA85B624();
          swift_bridgeObjectRelease();
          sub_1CA85B624();
          sub_1CA85C260();
          sub_1CA85B624();
          swift_bridgeObjectRelease();
          sub_1CA85B624();
          sub_1CA85B624();

          swift_bridgeObjectRelease();
        }
        else
        {
          swift_bridgeObjectRelease();

        }
        v19 = v33;
        v17 = v34;
      }
      else
      {

      }
      ++v20;
    }
    while (v18 != v20);
    goto LABEL_46;
  }
LABEL_55:
  __break(1u);
}

uint64_t sub_1CA2CDEE4(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 16) = a2;
  *(_QWORD *)(result + 24) = 2 * a2;
  return result;
}

uint64_t sub_1CA2CDEF4(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 16) = a2;
  *(_QWORD *)(result + 24) = (2 * a2) | 1;
  return result;
}

char *sub_1CA2CDF08(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t ObjCClassFromMetadata;
  id v11;
  void *v12;
  void *v13;
  id v14;
  void (*v15)(char *, char *, uint64_t);
  id v16;
  void *v17;
  id v18;
  id v19;
  id v20;
  void *v21;
  void *v22;
  id v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t v29;
  id v30;
  uint64_t v31;
  char *v32;
  id v33[2];

  v31 = a1;
  v33[1] = *(id *)MEMORY[0x1E0C80C00];
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED871180);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v29 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1CA85A424();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v32 = (char *)&v29 - v9;
  type metadata accessor for MusicCache();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v11 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v12 = (void *)sub_1CA85B510();
  v13 = (void *)sub_1CA85B510();
  v14 = objc_msgSend(v11, sel_URLForResource_withExtension_, v12, v13);

  if (!v14)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v3, 1, 1, v4);
    goto LABEL_10;
  }
  sub_1CA85A3F4();

  v15 = *(void (**)(char *, char *, uint64_t))(v5 + 32);
  v15(v3, v8, v4);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v5 + 56))(v3, 0, 1, v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {
LABEL_10:
    sub_1CA267BE8((uint64_t)v3, &qword_1ED871180);
    sub_1CA2CEE20();
    swift_allocError();
    *(_OWORD *)v25 = xmmword_1CA8D9CA0;
    *(_BYTE *)(v25 + 16) = 2;
    swift_willThrow();

    return v8;
  }
  v8 = v32;
  v15(v32, v3, v4);
  v16 = objc_allocWithZone(MEMORY[0x1E0C97B98]);
  v17 = (void *)sub_1CA85A3C4();
  v18 = objc_msgSend(v16, sel_initWithContentsOfURL_, v17);

  if (v18)
  {
    v19 = objc_allocWithZone(MEMORY[0x1E0C97C00]);
    v30 = v18;
    v8 = (char *)objc_msgSend(v19, sel_initWithManagedObjectModel_, v18);
    v20 = (id)*MEMORY[0x1E0C979E8];
    v21 = (void *)sub_1CA85A3C4();
    if (qword_1ED871230 != -1)
      swift_once();
    sub_1CA329A48(qword_1ED871220);
    v22 = (void *)sub_1CA85B3FC();
    swift_bridgeObjectRelease();
    v33[0] = 0;
    v23 = objc_msgSend(v8, sel_addPersistentStoreWithType_configuration_URL_options_error_, v20, 0, v21, v22, v33);

    if (v23)
    {
      v24 = v33[0];

    }
    else
    {
      v27 = v33[0];
      sub_1CA85A364();

      swift_willThrow();
    }

    (*(void (**)(char *, uint64_t))(v5 + 8))(v32, v4);
  }
  else
  {
    sub_1CA2CEE20();
    swift_allocError();
    *(_OWORD *)v26 = xmmword_1CA8D9CA0;
    *(_BYTE *)(v26 + 16) = 2;
    swift_willThrow();

    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  }
  return v8;
}

_QWORD *sub_1CA2CE368(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  id v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD v26[2];
  uint64_t v27;
  uint64_t v28[42];
  _OWORD v29[19];
  uint64_t v30[38];
  _OWORD v31[19];
  uint64_t v32;
  uint64_t v33;
  _BYTE v34[304];

  v3 = sub_1CA85A424();
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v6 + 16))(v5, a1);
  v7 = objc_allocWithZone((Class)type metadata accessor for MusicCache());
  v8 = sub_1CA2C2094(v5);
  if (!v1)
  {
    if (qword_1ED872F80 != -1)
      swift_once();
    v9 = qword_1ED87D078;
    *(double *)&v10 = CACurrentMediaTime();
    sub_1CA2E4280("MusicCacheReadInfo", 18, 2u, v10, 0, v9, (uint64_t)&v32);
    sub_1CA2CEC9C(v31);
    v11 = sub_1CA24EEF8((uint64_t)v31, (uint64_t)v30, &qword_1ED8713C8);
    v26[1] = OBJC_IVAR___PGMusicCache_managedObjectContext;
    MEMORY[0x1E0C80A78](v11);
    v26[-2] = v8;
    v26[-1] = v30;
    sub_1CA85BC30();
    sub_1CA2E0C94(0);
    swift_release();
    swift_release();
    sub_1CA24EEF8((uint64_t)v30, (uint64_t)v28, &qword_1ED8713C8);
    sub_1CA24EEF8((uint64_t)v28, (uint64_t)v29, &qword_1ED8713C8);
    if (sub_1CA2D0508((uint64_t)v29) == 1)
    {
      v12 = 0x6E776F6E6B6E55;
      v13 = 0xE700000000000000;
    }
    else
    {
      v13 = *((_QWORD *)&v29[0] + 1);
      v12 = *(_QWORD *)&v29[0];
      swift_bridgeObjectRetain();
      sub_1CA2CECE4(v28);
      if (__PAIR128__(v13, v12) == __PAIR128__(0xE100000000000000, 56))
        goto LABEL_7;
    }
    if ((sub_1CA85C284() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      return v8;
    }
    if (qword_1ED872110 != -1)
      swift_once();
    v14 = sub_1CA85B348();
    __swift_project_value_buffer(v14, (uint64_t)qword_1ED87CFF8);
    swift_bridgeObjectRetain();
    v15 = sub_1CA85B330();
    v16 = sub_1CA85BAE0();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = swift_slowAlloc();
      v26[0] = v8;
      v18 = v17;
      v27 = swift_slowAlloc();
      v30[0] = v27;
      *(_DWORD *)v18 = 136315394;
      swift_bridgeObjectRetain();
      *(_QWORD *)&v29[0] = sub_1CA28712C(v12, v13, v30);
      sub_1CA85BCF0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v18 + 12) = 2080;
      *(_QWORD *)&v29[0] = sub_1CA28712C(56, 0xE100000000000000, v30);
      sub_1CA85BCF0();
      _os_log_impl(&dword_1CA237000, v15, v16, "[MemoriesMusic] Cache version on disk %s does not equal version in code %s: removing all content from the cache.", (uint8_t *)v18, 0x16u);
      v19 = v27;
      swift_arrayDestroy();
      MEMORY[0x1CAA4F27C](v19, -1, -1);
      v20 = v18;
      v8 = (_QWORD *)v26[0];
      MEMORY[0x1CAA4F27C](v20, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    v21 = objc_msgSend((id)objc_opt_self(), sel_ignoreProgress);
    MusicCache.removeAll(progressReporter:)();

    sub_1CA2D0498(v29);
    v30[0] = 56;
    v30[1] = 0xE100000000000000;
    sub_1CA24EEF8((uint64_t)v29, (uint64_t)&v30[2], &qword_1ED871560);
    memcpy(v34, v30, sizeof(v34));
    v22 = qword_1ED87D078;
    *(double *)&v23 = CACurrentMediaTime();
    v24 = sub_1CA2E4280("MusicCacheWriteInfo", 19, 2u, v23, 0, v22, (uint64_t)&v33);
    MEMORY[0x1E0C80A78](v24);
    v26[-2] = v8;
    v26[-1] = v34;
    sub_1CA85BC30();
    sub_1CA2E0C94(0);
    swift_release();
    swift_release();
  }
  return v8;
}

char *sub_1CA2CEAA8(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  id v13;
  void *v14;
  void (*v15)(char *, char *, uint64_t);
  char *v16;
  uint64_t v17;
  _QWORD v19[2];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED871180);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1CA85A424();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  v10 = (char *)v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)v19 - v11;
  v13 = objc_msgSend(a1, sel_urlForApplicationDataFolderIdentifier_, 1);
  if (!v13)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v5, 1, 1, v6);
    goto LABEL_7;
  }
  v14 = v13;
  sub_1CA85A3F4();

  v15 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
  v15(v5, v10, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v5, 0, 1, v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
LABEL_7:
    sub_1CA267BE8((uint64_t)v5, &qword_1ED871180);
    sub_1CA2CEE20();
    swift_allocError();
    *(_QWORD *)v17 = 0;
    *(_QWORD *)(v17 + 8) = 0;
    *(_BYTE *)(v17 + 16) = 2;
    swift_willThrow();
    return v5;
  }
  v15(v12, v5, v6);
  v16 = (char *)sub_1CA2CE368((uint64_t)v12);
  if (!v1)
    v5 = v16;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
  return v5;
}

double sub_1CA2CEC9C(_OWORD *a1)
{
  double result;

  result = 0.0;
  a1[17] = 0u;
  a1[18] = 0u;
  a1[15] = 0u;
  a1[16] = 0u;
  a1[13] = 0u;
  a1[14] = 0u;
  a1[11] = 0u;
  a1[12] = 0u;
  a1[9] = 0u;
  a1[10] = 0u;
  a1[7] = 0u;
  a1[8] = 0u;
  a1[5] = 0u;
  a1[6] = 0u;
  a1[3] = 0u;
  a1[4] = 0u;
  a1[1] = 0u;
  a1[2] = 0u;
  *a1 = 0u;
  return result;
}

void sub_1CA2CECCC()
{
  uint64_t v0;

  sub_1CA2C4394(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t *sub_1CA2CECE4(uint64_t *a1)
{
  sub_1CA2CED64(*a1, a1[1]);
  return a1;
}

uint64_t sub_1CA2CED64(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_1CA2CED94()
{
  uint64_t v0;

  sub_1CA2C22A4(*(_QWORD *)(v0 + 16));
}

void sub_1CA2CEDB8()
{
  uint64_t v0;

  sub_1CA2C46A8(*(_QWORD *)(v0 + 16), *(const void **)(v0 + 24));
}

void sub_1CA2CEDD0()
{
  uint64_t v0;

  sub_1CA2C49F8(*(_QWORD *)(v0 + 16));
}

void sub_1CA2CEDE8()
{
  uint64_t *v0;

  sub_1CA2C4E30(v0[2], v0[3], v0[4], v0[5]);
}

void sub_1CA2CEE04()
{
  uint64_t v0;

  sub_1CA2C5300(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(unint64_t **)(v0 + 32), *(_QWORD *)(v0 + 40));
}

unint64_t sub_1CA2CEE20()
{
  unint64_t result;

  result = qword_1EF94CA58;
  if (!qword_1EF94CA58)
  {
    result = MEMORY[0x1CAA4F1A4](&protocol conformance descriptor for MusicCache.Error, &type metadata for MusicCache.Error);
    atomic_store(result, (unint64_t *)&qword_1EF94CA58);
  }
  return result;
}

void sub_1CA2CEE64()
{
  uint64_t v0;

  sub_1CA2C5954(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD **)(v0 + 40));
}

void sub_1CA2CEE80()
{
  uint64_t v0;

  sub_1CA2C5E54(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

unint64_t sub_1CA2CEE9C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED8723A8;
  if (!qword_1ED8723A8)
  {
    v1 = sub_1CA24EEC0(255, &qword_1ED8723A0);
    result = MEMORY[0x1CAA4F1A4](MEMORY[0x1E0DEFD08], v1);
    atomic_store(result, (unint64_t *)&qword_1ED8723A8);
  }
  return result;
}

void sub_1CA2CEEF4()
{
  uint64_t v0;

  sub_1CA2C93EC(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1CA2CEF0C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Song();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void sub_1CA2CEF50()
{
  uint64_t v0;

  sub_1CA2C9B08(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1CA2CEF70()
{
  return sub_1CA2CF050((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, unsigned int, _QWORD, _QWORD, _QWORD))sub_1CA2CA190);
}

void sub_1CA2CEF8C()
{
  uint64_t v0;

  sub_1CA2CA970(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD **)(v0 + 48));
}

void sub_1CA2CEFAC()
{
  uint64_t v0;
  int v1;
  int v2;
  int v3;

  if (*(_BYTE *)(v0 + 99))
    v1 = 0x1000000;
  else
    v1 = 0;
  if (*(_BYTE *)(v0 + 98))
    v2 = 0x10000;
  else
    v2 = 0;
  if (*(_BYTE *)(v0 + 97))
    v3 = 256;
  else
    v3 = 0;
  sub_1CA2CB11C(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80), *(_QWORD **)(v0 + 88), v3 | *(unsigned __int8 *)(v0 + 96) | v2 | v1, *(_QWORD *)(v0 + 104));
}

uint64_t sub_1CA2CF034()
{
  return sub_1CA2CF050((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, unsigned int, _QWORD, _QWORD, _QWORD))sub_1CA2CB7B8);
}

uint64_t sub_1CA2CF050(uint64_t (*a1)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, unsigned int, _QWORD, _QWORD, _QWORD))
{
  uint64_t v1;
  int v2;
  int v3;
  int v4;

  if (*(_BYTE *)(v1 + 91))
    v2 = 0x1000000;
  else
    v2 = 0;
  if (*(_BYTE *)(v1 + 90))
    v3 = 0x10000;
  else
    v3 = 0;
  if (*(_BYTE *)(v1 + 89))
    v4 = 256;
  else
    v4 = 0;
  return a1(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 64), *(_QWORD *)(v1 + 72), *(_QWORD *)(v1 + 80), v4 | *(unsigned __int8 *)(v1 + 88) | v3 | v2, *(_QWORD *)(v1 + 96), *(_QWORD *)(v1 + 104), *(_QWORD *)(v1 + 112));
}

void sub_1CA2CF0DC()
{
  uint64_t v0;
  int v1;
  int v2;
  int v3;

  if (*(_BYTE *)(v0 + 123))
    v1 = 0x1000000;
  else
    v1 = 0;
  if (*(_BYTE *)(v0 + 122))
    v2 = 0x10000;
  else
    v2 = 0;
  if (*(_BYTE *)(v0 + 121))
    v3 = 256;
  else
    v3 = 0;
  sub_1CA2CCC30(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 104), *(_QWORD **)(v0 + 112), v3 | *(unsigned __int8 *)(v0 + 120) | v2 | v1, *(_QWORD *)(v0 + 128));
}

void sub_1CA2CF16C(uint64_t a1, void *a2)
{
  uint64_t v2;
  void *v5;
  void *v6;
  void *v7;
  id v8;
  void *v9;
  id v10;
  uint64_t v11;
  unint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v5 = (void *)sub_1CA85BB7C();
  v7 = v6;
  v8 = objc_allocWithZone(MEMORY[0x1E0C97B48]);
  swift_bridgeObjectRetain();
  v9 = (void *)sub_1CA85B510();
  swift_bridgeObjectRelease();
  v10 = objc_msgSend(v8, sel_initWithEntityName_, v9);

  objc_msgSend(v10, sel_setPredicate_, a1);
  type metadata accessor for CacherStatusEntry();
  v11 = sub_1CA85BC3C();
  if (v2)
  {

  }
  else
  {
    v12 = v11;
    sub_1CA85BB70();
    v13 = v7;
    if (v12 >> 62)
      goto LABEL_13;
    v14 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    v20 = v14;
    if (v14)
    {
      while (1)
      {
        v15 = 4;
        while (1)
        {
          v16 = (v12 & 0xC000000000000001) != 0
              ? (id)MEMORY[0x1CAA4DD64](v15 - 4, v12)
              : *(id *)(v12 + 8 * v15);
          v17 = v16;
          v18 = v15 - 3;
          if (__OFADD__(v15 - 4, 1))
            break;
          objc_msgSend(a2, sel_deleteObject_, v16);
          sub_1CA85BB58();

          ++v15;
          if (v18 == v20)
            goto LABEL_11;
        }
        __break(1u);
LABEL_13:
        swift_bridgeObjectRetain_n();
        v19 = sub_1CA85C08C();
        swift_bridgeObjectRelease();
        v20 = v19;
        if (!v19)
          break;
        swift_bridgeObjectRetain();
        sub_1CA85C08C();
        swift_bridgeObjectRelease();
      }
    }
LABEL_11:

    swift_bridgeObjectRelease_n();
  }
}

void sub_1CA2CF3E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  id v6;
  void *v7;
  id v8;
  uint64_t v9;
  void *v10;
  void *v11;
  unint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  void *v16;
  void *v17;
  void *v18;

  v2 = v0;
  sub_1CA85BB64();
  if (!v1)
  {
    v3 = sub_1CA85BB7C();
    v5 = v4;
    v6 = objc_allocWithZone(MEMORY[0x1E0C97B48]);
    swift_bridgeObjectRetain();
    v7 = (void *)sub_1CA85B510();
    swift_bridgeObjectRelease();
    v8 = objc_msgSend(v6, sel_initWithEntityName_, v7);

    sub_1CA24EEC0(0, (unint64_t *)&qword_1ED872320);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8727B0);
    v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_1CA8D4E40;
    *(_QWORD *)(v9 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v9 + 64) = sub_1CA2891BC();
    *(_QWORD *)(v9 + 32) = 0x73656372756F73;
    *(_QWORD *)(v9 + 40) = 0xE700000000000000;
    v10 = (void *)sub_1CA85BA80();
    objc_msgSend(v8, sel_setPredicate_, v10);

    v11 = *(void **)(v2 + OBJC_IVAR___PGMusicCache_managedObjectContext);
    type metadata accessor for SongEntry();
    v12 = sub_1CA85BC3C();
    sub_1CA85BB70();
    if (v12 >> 62)
      goto LABEL_14;
    v13 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
    while (1)
    {
      v16 = (void *)v3;
      v17 = v8;
      v18 = v5;
      if (!v13)
        break;
      v8 = (id)(v12 & 0xC000000000000001);
      v3 = 4;
      while (1)
      {
        v14 = v8 ? (id)MEMORY[0x1CAA4DD64](v3 - 4, v12) : *(id *)(v12 + 8 * v3);
        v5 = v14;
        v15 = v3 - 3;
        if (__OFADD__(v3 - 4, 1))
          break;
        objc_msgSend(v11, sel_deleteObject_, v14);
        sub_1CA85BB58();

        ++v3;
        if (v15 == v13)
          goto LABEL_11;
      }
      __break(1u);
LABEL_14:
      swift_bridgeObjectRetain();
      sub_1CA85C08C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      v13 = sub_1CA85C08C();
      swift_bridgeObjectRelease();
    }
LABEL_11:
    swift_bridgeObjectRelease();
    sub_1CA85BB70();

  }
}

uint64_t sub_1CA2CF6FC(uint64_t a1, void *a2, int a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v13;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  id v25;
  void *v26;
  id v27;
  unint64_t v28;
  uint64_t result;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  id v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  int v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  v49 = a7;
  v50 = a8;
  v51 = a6;
  v52 = a5;
  v53 = a1;
  v17 = sub_1CA85A5B0();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  v20 = (char *)&v40 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8711C0);
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)&v40 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1CA85BB64();
  if (v13)
    return (uint64_t)a4;
  v41 = v17;
  v42 = a2;
  v44 = v23;
  v45 = v20;
  v46 = v18;
  v47 = (uint64_t)a4;
  v24 = v52;
  v43 = a3;
  v48 = a13;
  v25 = objc_allocWithZone(MEMORY[0x1E0C97B48]);
  swift_bridgeObjectRetain();
  v26 = (void *)sub_1CA85B510();
  swift_bridgeObjectRelease();
  v27 = objc_msgSend(v25, sel_initWithEntityName_, v26);

  objc_msgSend(v27, sel_setPredicate_, v53);
  type metadata accessor for SongSourceEntry();
  v28 = sub_1CA85BC3C();
  result = sub_1CA85BB64();
  if (v28 >> 62)
  {
    swift_bridgeObjectRetain();
    v30 = sub_1CA85C08C();
    result = swift_bridgeObjectRelease();
  }
  else
  {
    v30 = *(_QWORD *)((v28 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v31 = v24;
  v32 = v47;
  if (!v30)
  {
    swift_bridgeObjectRelease();
    v35 = (uint64_t)v44;
    sub_1CA29377C(a10, (uint64_t)v44);
    v34 = v51;
    goto LABEL_13;
  }
  if ((v28 & 0xC000000000000001) != 0)
  {
    v33 = (id)MEMORY[0x1CAA4DD64](0, v28);
LABEL_10:
    a4 = v33;
    v34 = v51;
    swift_bridgeObjectRelease();
    v35 = (uint64_t)v44;
    sub_1CA29377C(a10, (uint64_t)v44);
    if (a4)
    {
      v37 = v45;
      v36 = v46;
LABEL_14:
      sub_1CA267BE8(v35, &qword_1ED8711C0);
      if ((v43 & 1) != 0)
      {
        sub_1CA85A5A4();
        v39 = (void *)sub_1CA85A508();
        (*(void (**)(char *, uint64_t))(v36 + 8))(v37, v41);
        objc_msgSend(a4, sel_setDateLastUpdated_, v39);

      }
      sub_1CA85BB70();

      return (uint64_t)a4;
    }
LABEL_13:
    v38 = sub_1CA3FF420(v42, v32, v31, v34, v49, v50, a9, v35, a11, a12);
    v37 = v45;
    v36 = v46;
    a4 = v38;
    goto LABEL_14;
  }
  if (*(_QWORD *)((v28 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v33 = *(id *)(v28 + 32);
    goto LABEL_10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1CA2CFA6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;

  sub_1CA24EEC0(0, (unint64_t *)&qword_1ED872320);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8727B0);
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1CA8D9C90;
  v9 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v8 + 56) = MEMORY[0x1E0DEA968];
  v10 = sub_1CA2891BC();
  *(_QWORD *)(v8 + 32) = 0x696669746E656469;
  *(_QWORD *)(v8 + 40) = 0xEA00000000007265;
  *(_QWORD *)(v8 + 96) = v9;
  *(_QWORD *)(v8 + 104) = v10;
  *(_QWORD *)(v8 + 64) = v10;
  *(_QWORD *)(v8 + 72) = a1;
  *(_QWORD *)(v8 + 80) = a2;
  *(_QWORD *)(v8 + 136) = v9;
  *(_QWORD *)(v8 + 144) = v10;
  *(_QWORD *)(v8 + 112) = 0x687361686F6567;
  *(_QWORD *)(v8 + 120) = 0xE700000000000000;
  *(_QWORD *)(v8 + 176) = v9;
  *(_QWORD *)(v8 + 184) = v10;
  *(_QWORD *)(v8 + 152) = a3;
  *(_QWORD *)(v8 + 160) = a4;
  *(_QWORD *)(v8 + 216) = v9;
  *(_QWORD *)(v8 + 224) = v10;
  *(_QWORD *)(v8 + 192) = 1702125924;
  *(_QWORD *)(v8 + 200) = 0xE400000000000000;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v11 = sub_1CA85A508();
  *(_QWORD *)(v8 + 256) = sub_1CA24EEC0(0, &qword_1ED8723A0);
  *(_QWORD *)(v8 + 264) = sub_1CA2CEE9C();
  *(_QWORD *)(v8 + 232) = v11;
  return sub_1CA85BA80();
}

void sub_1CA2CFBF8()
{
  sub_1CA2CD610();
}

unint64_t sub_1CA2CFC14()
{
  unint64_t result;

  result = qword_1EF94CA60;
  if (!qword_1EF94CA60)
  {
    result = MEMORY[0x1CAA4F1A4](&protocol conformance descriptor for MusicCache.MergePolicy, &type metadata for MusicCache.MergePolicy);
    atomic_store(result, (unint64_t *)&qword_1EF94CA60);
  }
  return result;
}

unint64_t sub_1CA2CFC5C()
{
  unint64_t result;

  result = qword_1EF94CA68;
  if (!qword_1EF94CA68)
  {
    result = MEMORY[0x1CAA4F1A4](&protocol conformance descriptor for MusicCache.LocationTolerance, &type metadata for MusicCache.LocationTolerance);
    atomic_store(result, (unint64_t *)&qword_1EF94CA68);
  }
  return result;
}

uint64_t sub_1CA2CFCA0()
{
  return type metadata accessor for MusicCache();
}

uint64_t type metadata accessor for MusicCache()
{
  uint64_t result;

  result = qword_1ED871238;
  if (!qword_1ED871238)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1CA2CFCE4()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1CA85A424();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for MusicCache()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_1CA2CFD70(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 <= 1u)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t destroy for MusicCache.Error(uint64_t a1)
{
  return sub_1CA2CFD98(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t sub_1CA2CFD98(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 <= 1u)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t _s11PhotosGraph10MusicCacheC5ErrorOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1CA2CFD70(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for MusicCache.Error(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1CA2CFD70(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_1CA2CFD98(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for MusicCache.Error(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_1CA2CFD98(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for MusicCache.Error(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 2)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for MusicCache.Error(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 254;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_1CA2CFF1C(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 1u)
    return *(unsigned __int8 *)(a1 + 16);
  else
    return (*(_DWORD *)a1 + 2);
}

uint64_t sub_1CA2CFF34(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(_QWORD *)result = a2 - 2;
    *(_QWORD *)(result + 8) = 0;
    LOBYTE(a2) = 2;
  }
  *(_BYTE *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for MusicCache.Error()
{
  return &type metadata for MusicCache.Error;
}

uint64_t storeEnumTagSinglePayload for MusicCache.MergePolicy(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1CA2CFFA8 + 4 * byte_1CA8D9CD5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1CA2CFFDC + 4 * byte_1CA8D9CD0[v4]))();
}

uint64_t sub_1CA2CFFDC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CA2CFFE4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1CA2CFFECLL);
  return result;
}

uint64_t sub_1CA2CFFF8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1CA2D0000);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1CA2D0004(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CA2D000C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MusicCache.MergePolicy()
{
  return &type metadata for MusicCache.MergePolicy;
}

uint64_t sub_1CA2D002C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for MusicCache.ReadOptions(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  return a1;
}

uint64_t assignWithTake for MusicCache.ReadOptions(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  return a1;
}

uint64_t getEnumTagSinglePayload for MusicCache.ReadOptions(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 18))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for MusicCache.ReadOptions(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_WORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 18) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 18) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for MusicCache.ReadOptions()
{
  return &type metadata for MusicCache.ReadOptions;
}

uint64_t getEnumTagSinglePayload for MusicCache.WriteOptions(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && a1[4])
    return (*(_DWORD *)a1 + 255);
  v3 = *a1;
  v4 = v3 >= 2;
  v5 = v3 - 2;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for MusicCache.WriteOptions(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_DWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 4) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 4) = 0;
    if (a2)
      *(_BYTE *)result = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for MusicCache.WriteOptions()
{
  return &type metadata for MusicCache.WriteOptions;
}

uint64_t getEnumTagSinglePayload for MusicCache.LocationTolerance(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF6)
    goto LABEL_17;
  if (a2 + 10 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 10) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 10;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 10;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 10;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xB;
  v8 = v6 - 11;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for MusicCache.LocationTolerance(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 10 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 10) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF6)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF5)
    return ((uint64_t (*)(void))((char *)&loc_1CA2D0338 + 4 * byte_1CA8D9CDF[v4]))();
  *a1 = a2 + 10;
  return ((uint64_t (*)(void))((char *)sub_1CA2D036C + 4 * byte_1CA8D9CDA[v4]))();
}

uint64_t sub_1CA2D036C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CA2D0374(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1CA2D037CLL);
  return result;
}

uint64_t sub_1CA2D0388(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1CA2D0390);
  *(_BYTE *)result = a2 + 10;
  return result;
}

uint64_t sub_1CA2D0394(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CA2D039C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MusicCache.LocationTolerance()
{
  return &type metadata for MusicCache.LocationTolerance;
}

void sub_1CA2D03B8()
{
  uint64_t v0;
  __int16 v1;

  if (*(_BYTE *)(v0 + 57))
    v1 = 256;
  else
    v1 = 0;
  sub_1CA2C6B54(*(_QWORD **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), v1 | *(unsigned __int8 *)(v0 + 56));
}

uint64_t sub_1CA2D03FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED874560);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void sub_1CA2D0444()
{
  uint64_t v0;

  sub_1CA2C3100(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(uint64_t **)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56));
}

void sub_1CA2D0464()
{
  uint64_t v0;

  sub_1CA2C2C80(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(unsigned __int8 *)(v0 + 48), *(_QWORD *)(v0 + 56));
}

double sub_1CA2D0498(_OWORD *a1)
{
  double result;

  result = 0.0;
  a1[16] = 0u;
  a1[17] = 0u;
  a1[14] = 0u;
  a1[15] = 0u;
  a1[12] = 0u;
  a1[13] = 0u;
  a1[10] = 0u;
  a1[11] = 0u;
  a1[8] = 0u;
  a1[9] = 0u;
  a1[6] = 0u;
  a1[7] = 0u;
  a1[4] = 0u;
  a1[5] = 0u;
  a1[2] = 0u;
  a1[3] = 0u;
  *a1 = 0u;
  a1[1] = 0u;
  return result;
}

unint64_t sub_1CA2D04C4()
{
  unint64_t result;

  result = qword_1ED871558;
  if (!qword_1ED871558)
  {
    result = MEMORY[0x1CAA4F1A4](&protocol conformance descriptor for MusicBagContents, &type metadata for MusicBagContents);
    atomic_store(result, (unint64_t *)&qword_1ED871558);
  }
  return result;
}

uint64_t sub_1CA2D0508(uint64_t a1)
{
  unint64_t v1;

  v1 = *(_QWORD *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

void sub_1CA2D0520()
{
  uint64_t v0;
  __int16 v1;

  if (*(_BYTE *)(v0 + 81))
    v1 = 256;
  else
    v1 = 0;
  sub_1CA2C781C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(void **)(v0 + 32), *(_QWORD *)(v0 + 40), *(void **)(v0 + 48), *(_QWORD **)(v0 + 56), *(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72), v1 | *(unsigned __int8 *)(v0 + 80));
}

void sub_1CA2D056C()
{
  sub_1CA2CFBF8();
}

void sub_1CA2D0580()
{
  sub_1CA2CECCC();
}

void sub_1CA2D0594()
{
  sub_1CA2CEDB8();
}

uint64_t EventLabeler.label(events:progressReporter:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  _BYTE v8[40];

  if (qword_1EF94A2B8 != -1)
    swift_once();
  v1 = qword_1EF9781A8;
  *(double *)&v2 = CACurrentMediaTime();
  sub_1CA2E4280("LabelEvents", 11, 2u, v2, 0, v1, (uint64_t)v8);
  v3 = sub_1CA85BB4C();
  MEMORY[0x1E0C80A78](v3);
  v4 = swift_bridgeObjectRetain();
  v5 = sub_1CA2D0A7C(v4, v3, (void (*)(uint64_t *__return_ptr, __int128 *, id))sub_1CA2D0A60);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v0)
  {
    v6 = 1;
  }
  else
  {
    sub_1CA85BB70();
    v6 = 0;
  }
  sub_1CA2E0C94(v6);
  swift_release();
  swift_release();
  return v5;
}

void sub_1CA2D0724(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t *a5@<X8>)
{
  void *v10;

  v10 = (void *)MEMORY[0x1CAA4E724]();
  sub_1CA2D07A8(a1, a2, a3, a4, a5);
  objc_autoreleasePoolPop(v10);
}

uint64_t sub_1CA2D07A8@<X0>(_QWORD *a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t *a5@<X8>)
{
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  char *v14;
  uint64_t result;
  uint64_t v16;
  char *v17;
  NSObject *v18;
  os_log_type_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  os_log_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  _QWORD v34[2];
  int v35;
  os_log_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;

  v39 = a5;
  v10 = sub_1CA85B348();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x1E0C80A78](v10);
  v14 = (char *)v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t, uint64_t, __n128))(a4 + 8))(a1, a2, a3, a4, v12);
  if (!v5)
  {
    v16 = result;
    v37 = a1;
    v38 = v11;
    if (qword_1EF94A2B8 != -1)
      swift_once();
    v17 = v14;
    sub_1CA2E1280((uint64_t)v14);
    swift_bridgeObjectRetain_n();
    v18 = sub_1CA85B330();
    v19 = sub_1CA85BAD4();
    v20 = v19;
    v21 = v10;
    if (os_log_type_enabled(v18, v19))
    {
      v36 = v18;
      v22 = swift_slowAlloc();
      v35 = v20;
      v23 = (uint8_t *)v22;
      v24 = swift_slowAlloc();
      v41 = v24;
      *(_DWORD *)v23 = 136315138;
      v34[1] = v23 + 4;
      v25 = swift_bridgeObjectRetain();
      v26 = MEMORY[0x1CAA4D620](v25, &type metadata for EventLabelConfidence);
      v28 = v27;
      swift_bridgeObjectRelease();
      v40 = sub_1CA28712C(v26, v28, &v41);
      sub_1CA85BCF0();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      v29 = v36;
      _os_log_impl(&dword_1CA237000, v36, (os_log_type_t)v35, "[EventLabeling] Inferred scores: %s", v23, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1CAA4F27C](v24, -1, -1);
      MEMORY[0x1CAA4F27C](v23, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    (*(void (**)(char *, uint64_t))(v38 + 8))(v17, v21);
    v30 = v37[3];
    v31 = v37[4];
    __swift_project_boxed_opaque_existential_1(v37, v30);
    result = (*(uint64_t (**)(uint64_t, uint64_t))(v31 + 24))(v30, v31);
    v32 = v39;
    *v39 = result;
    v32[1] = v33;
    v32[2] = v16;
  }
  return result;
}

void sub_1CA2D0A60(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  sub_1CA2D0724(a1, a2, *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24), a3);
}

uint64_t sub_1CA2D0A7C(uint64_t a1, unint64_t a2, void (*a3)(uint64_t *__return_ptr, __int128 *, id))
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t result;
  id v14;
  id v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  __int128 v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  uint64_t v24;
  __int128 v25;
  __int128 v26[3];
  _OWORD v27[2];
  __int128 v28;
  void (*v29)(uint64_t *__return_ptr, __int128 *, id);

  v4 = v3;
  v29 = a3;
  v7 = *(_QWORD *)(a1 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v22 = v7;
  if (v7)
  {
    v8 = 0;
    v9 = a1 + 32;
    v10 = a2 & 0xFFFFFFFFFFFFFF8;
    v11 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    while (1)
    {
      result = sub_1CA28A998(v9, (uint64_t)v26);
      if (a2 >> 62)
      {
        swift_bridgeObjectRetain();
        v21 = sub_1CA85C08C();
        result = swift_bridgeObjectRelease();
        if (v8 == v21)
        {
LABEL_20:
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
          goto LABEL_22;
        }
      }
      else if (v8 == *(_QWORD *)(v10 + 16))
      {
        goto LABEL_20;
      }
      if ((a2 & 0xC000000000000001) != 0)
      {
        v14 = (id)MEMORY[0x1CAA4DD64](v8, a2);
      }
      else
      {
        if (v8 >= *(_QWORD *)(v10 + 16))
        {
          __break(1u);
          return result;
        }
        v14 = *(id *)(a2 + 8 * v8 + 32);
      }
      v15 = v14;
      sub_1CA28FA30(v26, (uint64_t)v27);
      *((_QWORD *)&v28 + 1) = v15;
      v26[0] = v27[0];
      v26[1] = v27[1];
      v26[2] = v28;
      v29(&v24, v26, v15);
      if (v4)
      {
        sub_1CA2D0CE8((uint64_t)v26);
        swift_bridgeObjectRelease();
        goto LABEL_22;
      }
      sub_1CA2D0CE8((uint64_t)v26);
      if ((_QWORD)v25)
      {
        v23 = v25;
        v16 = v24;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v11 = sub_1CA26CF4C(0, v11[2] + 1, 1, v11);
        v18 = v11[2];
        v17 = v11[3];
        v19 = v23;
        if (v18 >= v17 >> 1)
        {
          v20 = sub_1CA26CF4C((_QWORD *)(v17 > 1), v18 + 1, 1, v11);
          v19 = v23;
          v11 = v20;
        }
        v11[2] = v18 + 1;
        v12 = &v11[3 * v18];
        v12[4] = v16;
        *(_OWORD *)(v12 + 5) = v19;
        v10 = a2 & 0xFFFFFFFFFFFFFF8;
      }
      ++v8;
      v9 += 40;
      if (v22 == v8)
        goto LABEL_22;
    }
  }
  v11 = (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (uint64_t)v11;
}

uint64_t dispatch thunk of EventLabeler.label(event:progressReporter:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t sub_1CA2D0CE8(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94CAB0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

ValueMetadata *type metadata accessor for GenreMusicFilter()
{
  return &type metadata for GenreMusicFilter;
}

BOOL sub_1CA2D0D38(uint64_t a1, uint64_t a2)
{
  return sub_1CA2D0F00(a1, a2);
}

uint64_t sub_1CA2D0D50(uint64_t result)
{
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t *i;
  uint64_t v9;
  uint64_t v10;
  char v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;

  v1 = *(_QWORD *)(result + 16);
  if (!v1)
    return MEMORY[0x1E0DEE9D8];
  v2 = 0;
  v3 = result + 40;
  v4 = -(uint64_t)v1;
  v5 = MEMORY[0x1E0DEE9D8];
  v15 = result + 40;
  v16 = *(_QWORD *)(result + 16);
  do
  {
    v17 = v5;
    if (v2 <= v1)
      v6 = v1;
    else
      v6 = v2;
    v7 = -(uint64_t)v6;
    for (i = (uint64_t *)(v3 + 16 * v2++); ; i += 2)
    {
      if (v7 + v2 == 1)
      {
        __break(1u);
        return result;
      }
      v10 = *(i - 1);
      v9 = *i;
      sub_1CA85B594();
      sub_1CA281DC0();
      swift_bridgeObjectRetain();
      v11 = sub_1CA85BD50();
      swift_bridgeObjectRelease();
      if ((v11 & 1) != 0)
        break;
      result = swift_bridgeObjectRelease();
      ++v2;
      if (v4 + v2 == 1)
        return v17;
    }
    v5 = v17;
    result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      result = sub_1CA3FB754(0, *(_QWORD *)(v17 + 16) + 1, 1);
      v5 = v17;
    }
    v3 = v15;
    v13 = *(_QWORD *)(v5 + 16);
    v12 = *(_QWORD *)(v5 + 24);
    if (v13 >= v12 >> 1)
    {
      result = sub_1CA3FB754(v12 > 1, v13 + 1, 1);
      v5 = v17;
    }
    *(_QWORD *)(v5 + 16) = v13 + 1;
    v14 = v5 + 16 * v13;
    *(_QWORD *)(v14 + 32) = v10;
    *(_QWORD *)(v14 + 40) = v9;
    v1 = v16;
  }
  while (v4 + v2);
  return v5;
}

BOOL sub_1CA2D0F00(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  char v21;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v5 = sub_1CA85A0C4();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (uint64_t *)(a2 + OBJC_IVAR___PGMusicCuratorContext_genre);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  v10 = sub_1CA85B5E8();
  swift_bridgeObjectRelease();
  if (v10 < 2)
    return 1;
  v11 = v9[1];
  v29 = *v9;
  v30 = v11;
  swift_bridgeObjectRetain();
  sub_1CA85A0B8();
  sub_1CA281DC0();
  sub_1CA85BD20();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  swift_bridgeObjectRelease();
  sub_1CA85B594();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 64))
  {
    v12 = swift_bridgeObjectRetain();
    v13 = sub_1CA2D0D50(v12);
    v31 = v2;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v14 = *(_QWORD *)(v13 + 16);
    v28 = v13;
    if (v14)
    {
      v15 = (uint64_t *)(v13 + 40);
      v16 = MEMORY[0x1E0DEE9D8];
      do
      {
        v18 = *(v15 - 1);
        v17 = *v15;
        v20 = sub_1CA85B594() == 0x636973756DLL && v19 == 0xE500000000000000;
        if (v20 || (v21 = sub_1CA85C284(), swift_bridgeObjectRetain(), swift_bridgeObjectRelease(), (v21 & 1) != 0))
        {
          swift_bridgeObjectRelease();
        }
        else
        {
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v29 = v16;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            sub_1CA3FB754(0, *(_QWORD *)(v16 + 16) + 1, 1);
            v16 = v29;
          }
          v24 = *(_QWORD *)(v16 + 16);
          v23 = *(_QWORD *)(v16 + 24);
          if (v24 >= v23 >> 1)
          {
            sub_1CA3FB754(v23 > 1, v24 + 1, 1);
            v16 = v29;
          }
          *(_QWORD *)(v16 + 16) = v24 + 1;
          v25 = v16 + 16 * v24;
          *(_QWORD *)(v25 + 32) = v18;
          *(_QWORD *)(v25 + 40) = v17;
        }
        v15 += 2;
        --v14;
      }
      while (v14);
    }
    else
    {
      v16 = MEMORY[0x1E0DEE9D8];
    }
    swift_bridgeObjectRelease();
    v27 = *(_QWORD *)(v16 + 16);
    swift_release();
    return v27 != 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    return 0;
  }
}

BOOL static ExtendedTokenCollectionGenerator.Error.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t ExtendedTokenCollectionGenerator.Error.hash(into:)()
{
  return sub_1CA85C374();
}

uint64_t ExtendedTokenCollectionGenerator.Error.hashValue.getter()
{
  sub_1CA85C368();
  sub_1CA85C374();
  return sub_1CA85C3B0();
}

uint64_t ExtendedTokenCollectionGenerator.__allocating_init(graph:photoLibrary:)(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = swift_allocObject();
  *(_QWORD *)(result + 16) = a1;
  *(_QWORD *)(result + 24) = a2;
  return result;
}

uint64_t ExtendedTokenCollectionGenerator.init(graph:photoLibrary:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return v2;
}

uint64_t ExtendedTokenCollectionGenerator.generateExtendedTokenCollection(representativeAssetUUIDsByMomentUUID:queryTokens:progressReporter:)@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint8_t *v17;
  uint8_t *v18;
  void *v19;
  uint64_t result;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  void *v28;
  id v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  void *v44;
  void *v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  uint64_t v51;
  MAGraphReference *graphReference;
  unint64_t v53;
  void *v54;
  int64_t v55;
  uint64_t D0VG_tF_0;
  uint64_t v57;
  void *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  id v62;
  void *v63;
  uint64_t v64;
  id v65;
  uint64_t v66;
  uint64_t v67;
  id v68;
  id v69;
  uint64_t v70;
  NSObject *v71;
  os_log_type_t v72;
  uint8_t *v73;
  char *v74;
  NSObject *v75;
  os_log_type_t v76;
  uint8_t *v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  _QWORD v83[6];
  id v84;
  uint64_t v85;
  id v86;
  id v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  void *v99;
  void *v100;
  char *v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108[2];
  uint64_t v109;
  uint64_t v110;
  int64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116[4];
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  PGGraphMomentNodeCollection v120;

  v9 = sub_1CA85AFC4();
  v104 = *(_QWORD *)(v9 - 8);
  v105 = v9;
  v10 = MEMORY[0x1E0C80A78](v9);
  v101 = (char *)v83 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v103 = (char *)v83 - v12;
  if (qword_1EF94A278 != -1)
    swift_once();
  v13 = sub_1CA85B348();
  v102 = __swift_project_value_buffer(v13, (uint64_t)qword_1EF978150);
  v14 = sub_1CA85B330();
  v15 = sub_1CA85BAC8();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = a3;
    v17 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v17 = 0;
    _os_log_impl(&dword_1CA237000, v14, v15, "generateExtendedTokenCollection has started.", v17, 2u);
    v18 = v17;
    a3 = v16;
    MEMORY[0x1CAA4F27C](v18, -1, -1);
  }

  if (qword_1EF94A280 != -1)
    swift_once();
  v19 = (void *)qword_1EF978168;
  result = sub_1CA85BB64();
  if (!v4)
  {
    v99 = a2;
    v100 = a1;
    v97 = a4;
    v98 = a3;
    if (qword_1EF94A2F8 != -1)
      swift_once();
    v21 = qword_1EF9781D8;
    *(double *)&v22 = CACurrentMediaTime();
    sub_1CA2E4280("ExtendedTokenCollectionGenerator", 32, 2u, v22, 0, v21, (uint64_t)&v109);
    v23 = sub_1CA85ADE4();
    swift_allocObject();
    v24 = v19;
    v25 = sub_1CA85ADD8();
    v26 = (void *)objc_opt_self();
    v27 = swift_bridgeObjectRetain();
    sub_1CA2826B4(v27);
    v28 = (void *)sub_1CA85B978();
    swift_bridgeObjectRelease();
    v29 = objc_msgSend(v26, sel_momentNodesForUUIDs_inGraph_, v28, *(_QWORD *)(v106 + 16));

    v30 = v25;
    sub_1CA85ADCC();
    sub_1CA2D245C((uint64_t)v99, &v110);
    v99 = v29;
    v96 = v23;
    sub_1CA85BB64();
    swift_allocObject();
    v31 = v24;
    v32 = sub_1CA85ADD8();
    v33 = v110;
    v34 = v99;
    v35 = ExtendedTokenCollectionGenerator.generatePersonExtendedTokens(for:momentNodes:)(v110, (uint64_t)v99);
    v36 = ExtendedTokenCollectionGenerator.generatePersonExtendedTokens(for:using:)(v34, v35);
    v95 = v33;
    v108[0] = v35;
    sub_1CA284E60(v36);
    v37 = v108[0];
    sub_1CA85BB64();
    v92 = v32;
    v93 = v37;
    sub_1CA85ADCC();
    swift_allocObject();
    v38 = v31;
    v94 = sub_1CA85ADD8();
    v39 = v99;
    v40 = ExtendedTokenCollectionGenerator.generatePetExtendedTokens(for:momentNodes:)(v95, (uint64_t)v99);
    v41 = ExtendedTokenCollectionGenerator.generatePetExtendedTokens(for:using:)(v39, v40);
    v108[0] = v40;
    sub_1CA284E4C(v41);
    v42 = v108[0];
    sub_1CA85BB64();
    v91 = 0;
    v85 = v42;
    v89 = v30;
    sub_1CA85ADCC();
    swift_allocObject();
    v43 = v38;
    v90 = sub_1CA85ADD8();
    v44 = (void *)objc_opt_self();
    v45 = v99;
    v46 = objc_msgSend(v44, sel_addressOfMoment);
    v47 = objc_msgSend(objc_msgSend(v45, sel_graph), sel_graphReference);
    swift_unknownObjectRelease();
    v48 = objc_msgSend(v47, sel_concreteGraph);

    if (v48)
    {
      v49 = objc_msgSend(v45, sel_elementIdentifiers);
      v50 = objc_msgSend(v48, sel_adjacencyWithSources_relation_, v49, v46);

      v86 = v50;
      v108[0] = (uint64_t)v50;
      v108[1] = (uint64_t)v48;
      v51 = _s11PhotosGraph32ExtendedTokenCollectionGeneratorC23generateCityAndAreaInfo3for36representativeAssetUUIDsByMomentUUIDSDySo19KGElementIdentifierVAC0hK0VG_SDyAhC0jK0VGtAA04NodeE15BinaryAdjacencyVySo07PGGraphquE0CSo0x7AddressuE0CG_SDySSSaySSGGtF_0((uint64_t)v108, (uint64_t)v100);
      graphReference = v120.super.super.super._graphReference;
      v120.super.super.super.super.isa = (Class)v45;
      v87 = v48;
      v53 = (unint64_t)ExtendedTokenCollectionGenerator.generateHomeCityNodes(for:)(v120);
      v100 = v45;
      v54 = (void *)v53;
      sub_1CA85ADCC();
      swift_allocObject();
      v84 = v43;
      v88 = sub_1CA85ADD8();
      v55 = v111;
      D0VG_tF_0 = _s11PhotosGraph32ExtendedTokenCollectionGeneratorC016generateLocationC6Tokens3forSay0A12Intelligence0hcD0VGSayAF05QueryD0VG_tF_0(v111);
      v99 = v54;
      v57 = ExtendedTokenCollectionGenerator.generateLocationExtendedTokens(for:areaInfoByAreaNodeIdentifier:homeCityNodes:)(v51, (uint64_t)graphReference, v54);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v108[0] = D0VG_tF_0;
      sub_1CA284CDC(v57);
      v58 = v100;
      v59 = v108[0];
      v60 = v91;
      sub_1CA85BB64();
      if (v60)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
        swift_unknownObjectRelease();

        swift_release();
        swift_bridgeObjectRelease();
        v119 = v112;
        sub_1CA290438((uint64_t)&v119);
        v118 = v113;
        sub_1CA290438((uint64_t)&v118);
        v117 = v114;
        sub_1CA290438((uint64_t)&v117);
        swift_release();

LABEL_12:
        sub_1CA2E0C94(0);
        swift_release();
        return swift_release();
      }
      v61 = v59;
      v83[5] = v55;
      sub_1CA85ADCC();
      swift_allocObject();
      v62 = v84;
      v84 = (id)sub_1CA85ADD8();
      v63 = v99;
      v64 = ExtendedTokenCollectionGenerator.generateHomeExtendedTokens(for:)(v99);
      sub_1CA85BB64();
      v91 = 0;
      v83[3] = v64;
      v83[4] = v61;
      sub_1CA85ADCC();
      swift_allocObject();
      v65 = v62;
      v66 = sub_1CA85ADD8();
      _s11PhotosGraph32ExtendedTokenCollectionGeneratorC023generateGenericLocationC6Tokens4fromSay0A12Intelligence0hicD0VGSayAF05QueryD0VG_tF_0(v112);
      v67 = v91;
      sub_1CA85BB64();
      if (!v67)
      {
        v83[1] = v66;
        sub_1CA85ADCC();
        swift_allocObject();
        v68 = v65;
        v83[2] = sub_1CA85ADD8();
        if (!*(_QWORD *)(_s11PhotosGraph32ExtendedTokenCollectionGeneratorC012generateTimeC6Tokens3forSay0A12Intelligence0hcD0VGSayAF05QueryD0VG_tF_0(v113)
                        + 16))
        {
          swift_bridgeObjectRelease();
          ExtendedTokenCollectionGenerator.generateTimeExtendedTokens(for:)(v100);
        }
        sub_1CA85BB64();
        sub_1CA85ADCC();
        swift_allocObject();
        v69 = v68;
        v70 = sub_1CA85ADD8();
        v96 = ExtendedTokenCollectionGenerator.generateTripExtendedTokens(for:)(v114);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v106 = v70;
        sub_1CA85ADCC();
        sub_1CA85BB70();
        v91 = 0;
        v71 = sub_1CA85B330();
        v72 = sub_1CA85BAC8();
        if (os_log_type_enabled(v71, v72))
        {
          v73 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v73 = 0;
          _os_log_impl(&dword_1CA237000, v71, v72, "generateExtendedTokenCollection complete.", v73, 2u);
          MEMORY[0x1CAA4F27C](v73, -1, -1);
        }

        v74 = v103;
        sub_1CA85AFB8();
        (*(void (**)(char *, char *, uint64_t))(v104 + 16))(v101, v74, v105);
        v75 = sub_1CA85B330();
        v76 = sub_1CA85BAC8();
        if (os_log_type_enabled(v75, v76))
        {
          v77 = (uint8_t *)swift_slowAlloc();
          v78 = swift_slowAlloc();
          v108[0] = v78;
          *(_DWORD *)v77 = 136380675;
          v102 = (uint64_t)(v77 + 4);
          sub_1CA2D3298();
          v79 = v101;
          v80 = v105;
          v81 = sub_1CA85C260();
          v107 = sub_1CA28712C(v81, v82, v108);
          sub_1CA85BCF0();
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v104 + 8))(v79, v80);
          _os_log_impl(&dword_1CA237000, v75, v76, "Extended token collection: %{private}s)", v77, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1CAA4F27C](v78, -1, -1);
          MEMORY[0x1CAA4F27C](v77, -1, -1);

        }
        else
        {

          (*(void (**)(char *, uint64_t))(v104 + 8))(v101, v105);
        }

        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_unknownObjectRelease();

        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        (*(void (**)(uint64_t, char *, uint64_t))(v104 + 32))(v97, v103, v105);
        goto LABEL_12;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_unknownObjectRelease();

      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      v116[0] = v113;
      sub_1CA290438((uint64_t)v116);
      v115 = v114;
      sub_1CA290438((uint64_t)&v115);
      swift_release();

      sub_1CA2E0C94(0);
      swift_release();
      return swift_release();
    }
    else
    {
      result = sub_1CA85C044();
      __break(1u);
    }
  }
  return result;
}

uint64_t ExtendedTokenCollectionGenerator.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t ExtendedTokenCollectionGenerator.__deallocating_deinit()
{
  uint64_t v0;

  return swift_deallocClassInstance();
}

uint64_t sub_1CA2D245C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  BOOL v49;
  uint64_t v50;
  _QWORD *v51;
  BOOL v52;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v54;
  unint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  unint64_t v65;
  unint64_t v66;
  void *ObjCClassFromMetadata;
  void *v68;
  id v69;
  uint64_t v70;
  int64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t v76;
  unint64_t v77;
  unint64_t v78;
  BOOL v79;
  unint64_t v80;
  int64_t v81;
  uint64_t v82;
  uint64_t *v83;
  uint64_t v84;
  uint64_t v85;
  _QWORD *v86;
  int v87;
  char v88;
  unint64_t v89;
  uint64_t v90;
  _BOOL8 v91;
  uint64_t v92;
  char v93;
  uint64_t v94;
  char v95;
  _QWORD *v96;
  uint64_t *v97;
  uint64_t v98;
  uint64_t v99;
  unint64_t v100;
  unint64_t v101;
  unint64_t v102;
  unint64_t v103;
  unint64_t v104;
  unint64_t v105;
  unint64_t v106;
  _QWORD *v107;
  unint64_t v108;
  unint64_t v109;
  unint64_t v110;
  _QWORD *v111;
  uint64_t v112;
  _QWORD *v113;
  uint64_t v114;
  int v115;
  uint64_t v116;
  char *v117;
  unint64_t v118;
  uint64_t v119;
  int v120;
  char *v121;
  unint64_t v122;
  int v123;
  char *v124;
  unint64_t v125;
  unint64_t v126;
  uint64_t v127;
  uint64_t v128;
  int v129;
  char *v130;
  _QWORD *v131;
  uint64_t v132;
  int v133;
  unint64_t v134;
  uint64_t v135;
  unint64_t v136;
  uint64_t v137;
  unint64_t v138;
  char *v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  char *v143;
  uint64_t v144;
  void (*v145)(char *, uint64_t, uint64_t);
  uint64_t v146;
  int64_t v147;
  _QWORD *v148;
  _QWORD *v149;
  char *v150;

  v113 = a2;
  v3 = sub_1CA85AF94();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (uint64_t *)((char *)&v112 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = sub_1CA85AF04();
  v140 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v139 = (char *)&v112 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v146 = sub_1CA85AAFC();
  v9 = MEMORY[0x1E0C80A78](v146);
  v117 = (char *)&v112 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x1E0C80A78](v9);
  v121 = (char *)&v112 - v12;
  v13 = MEMORY[0x1E0C80A78](v11);
  v124 = (char *)&v112 - v14;
  v15 = MEMORY[0x1E0C80A78](v13);
  v130 = (char *)&v112 - v16;
  v17 = MEMORY[0x1E0C80A78](v15);
  v150 = (char *)&v112 - v18;
  result = MEMORY[0x1E0C80A78](v17);
  v22 = (char *)&v112 - v21;
  v114 = *(_QWORD *)(a1 + 16);
  if (!v114)
  {
    v106 = MEMORY[0x1E0DEE9D8];
    v107 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    v108 = MEMORY[0x1E0DEE9D8];
    v109 = MEMORY[0x1E0DEE9D8];
    v110 = MEMORY[0x1E0DEE9D8];
    goto LABEL_105;
  }
  v126 = (*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
  v116 = a1 + v126;
  v23 = *(_QWORD *)(v20 + 72);
  v142 = v20;
  v24 = *(void (**)(char *, uint64_t, uint64_t))(v20 + 16);
  v144 = v23;
  v145 = v24;
  v133 = *MEMORY[0x1E0D772E8];
  v129 = *MEMORY[0x1E0D772D0];
  v123 = *MEMORY[0x1E0D77300];
  v120 = *MEMORY[0x1E0D772B8];
  v115 = *MEMORY[0x1E0D772D8];
  v112 = a1;
  swift_bridgeObjectRetain();
  v25 = 0;
  v148 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  v134 = MEMORY[0x1E0DEE9D8];
  v122 = MEMORY[0x1E0DEE9D8];
  v118 = MEMORY[0x1E0DEE9D8];
  v125 = MEMORY[0x1E0DEE9D8];
  v128 = v3;
  v132 = v4;
  v131 = v6;
  v127 = v7;
  v26 = v146;
  v143 = v22;
  while (1)
  {
    v119 = v25;
    v145(v22, v116 + v144 * v25, v26);
    v31 = sub_1CA85AAC0();
    v137 = *(_QWORD *)(v31 + 16);
    if (v137)
      break;
LABEL_3:
    v27 = v7;
    v28 = v4;
    v29 = v3;
    swift_bridgeObjectRelease();
    v30 = v119 + 1;
    v22 = v143;
    v26 = v146;
    (*(void (**)(char *, uint64_t))(v142 + 8))(v143, v146);
    v25 = v30;
    v49 = v30 == v114;
    v3 = v29;
    v4 = v28;
    v7 = v27;
    v6 = v131;
    if (v49)
      goto LABEL_104;
  }
  v32 = 0;
  v136 = v31 + ((*(unsigned __int8 *)(v140 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v140 + 80));
  v135 = v31;
  while (1)
  {
    if (v32 >= *(_QWORD *)(v31 + 16))
      goto LABEL_107;
    v33 = *(_QWORD *)(v140 + 72);
    v138 = v32;
    (*(void (**)(char *, unint64_t, uint64_t))(v140 + 16))(v139, v136 + v33 * v32, v7);
    sub_1CA85AEF8();
    v34 = (*(uint64_t (**)(_QWORD *, uint64_t))(v4 + 88))(v6, v3);
    if (v34 == v133)
      break;
    if (v34 == v129)
    {
      (*(void (**)(_QWORD *, uint64_t))(v4 + 96))(v6, v3);
      v145(v130, (uint64_t)v143, v146);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
        v54 = v134;
      else
        v54 = sub_1CA26D19C(0, *(_QWORD *)(v134 + 16) + 1, 1, v134);
      v56 = *(_QWORD *)(v54 + 16);
      v55 = *(_QWORD *)(v54 + 24);
      v57 = v3;
      if (v56 >= v55 >> 1)
        v134 = sub_1CA26D19C(v55 > 1, v56 + 1, 1, v54);
      else
        v134 = v54;
      v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94CB70);
      v59 = (uint64_t)v6 + *(int *)(v58 + 48);
      v60 = (uint64_t)v6 + *(int *)(v58 + 64);
      v61 = v134;
      *(_QWORD *)(v134 + 16) = v56 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v142 + 32))(v61 + v126 + v56 * v144, v130, v146);
      (*(void (**)(char *, uint64_t))(v140 + 8))(v139, v7);
      sub_1CA267BE8(v60, &qword_1EF94CB78);
      sub_1CA267BE8(v59, &qword_1ED8711C0);
      sub_1CA267BE8((uint64_t)v6, &qword_1ED8711C0);
      v3 = v57;
      v4 = v132;
      goto LABEL_8;
    }
    if (v34 == v123)
    {
      (*(void (**)(_QWORD *, uint64_t))(v4 + 96))(v6, v3);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v145(v124, (uint64_t)v143, v146);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
        v64 = v125;
      else
        v64 = sub_1CA26D19C(0, *(_QWORD *)(v125 + 16) + 1, 1, v125);
      v66 = *(_QWORD *)(v64 + 16);
      v65 = *(_QWORD *)(v64 + 24);
      if (v66 >= v65 >> 1)
        v64 = sub_1CA26D19C(v65 > 1, v66 + 1, 1, v64);
      *(_QWORD *)(v64 + 16) = v66 + 1;
      v125 = v64;
      (*(void (**)(unint64_t, char *, uint64_t))(v142 + 32))(v64 + v126 + v66 * v144, v124, v146);
    }
    else if (v34 == v120)
    {
      (*(void (**)(_QWORD *, uint64_t))(v4 + 96))(v6, v3);
      swift_bridgeObjectRelease();
      v145(v121, (uint64_t)v143, v146);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
        v100 = v122;
      else
        v100 = sub_1CA26D19C(0, *(_QWORD *)(v122 + 16) + 1, 1, v122);
      v102 = *(_QWORD *)(v100 + 16);
      v101 = *(_QWORD *)(v100 + 24);
      if (v102 >= v101 >> 1)
        v100 = sub_1CA26D19C(v101 > 1, v102 + 1, 1, v100);
      *(_QWORD *)(v100 + 16) = v102 + 1;
      v122 = v100;
      (*(void (**)(unint64_t, char *, uint64_t))(v142 + 32))(v100 + v126 + v102 * v144, v121, v146);
    }
    else
    {
      if (v34 != v115)
      {
        (*(void (**)(char *, uint64_t))(v140 + 8))(v139, v7);
        (*(void (**)(_QWORD *, uint64_t))(v4 + 8))(v6, v3);
        goto LABEL_8;
      }
      (*(void (**)(_QWORD *, uint64_t))(v4 + 96))(v6, v3);
      swift_bridgeObjectRelease();
      v145(v117, (uint64_t)v143, v146);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
        v103 = v118;
      else
        v103 = sub_1CA26D19C(0, *(_QWORD *)(v118 + 16) + 1, 1, v118);
      v105 = *(_QWORD *)(v103 + 16);
      v104 = *(_QWORD *)(v103 + 24);
      if (v105 >= v104 >> 1)
        v103 = sub_1CA26D19C(v104 > 1, v105 + 1, 1, v103);
      *(_QWORD *)(v103 + 16) = v105 + 1;
      v118 = v103;
      (*(void (**)(unint64_t, char *, uint64_t))(v142 + 32))(v103 + v126 + v105 * v144, v117, v146);
    }
LABEL_94:
    (*(void (**)(char *, uint64_t))(v140 + 8))(v139, v7);
LABEL_8:
    v32 = v138 + 1;
    v31 = v135;
    if (v138 + 1 == v137)
      goto LABEL_3;
  }
  (*(void (**)(_QWORD *, uint64_t))(v4 + 96))(v6, v3);
  v35 = *v6;
  v36 = sub_1CA85B9A8();
  v37 = v35;
  if (*(_QWORD *)(v35 + 16))
  {
    v38 = *(_QWORD *)(v35 + 16);
    v39 = 0;
    v141 = v37;
    v147 = v37 + 32;
    v40 = v36 + 56;
    while (1)
    {
      v41 = (uint64_t *)(v147 + 16 * v39);
      v42 = *v41;
      v43 = v41[1];
      ++v39;
      sub_1CA85C368();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1CA85B4B0();
      v44 = sub_1CA85C3B0();
      v45 = -1 << *(_BYTE *)(v36 + 32);
      v46 = v44 & ~v45;
      if (((*(_QWORD *)(v40 + ((v46 >> 3) & 0xFFFFFFFFFFFFF8)) >> v46) & 1) == 0)
        goto LABEL_28;
      v47 = *(_QWORD *)(v36 + 48);
      v48 = (_QWORD *)(v47 + 16 * v46);
      v49 = *v48 == v42 && v48[1] == v43;
      if (v49 || (sub_1CA85C284() & 1) != 0)
      {
LABEL_13:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v39 == v38)
          goto LABEL_36;
      }
      else
      {
        v50 = ~v45;
        while (1)
        {
          v46 = (v46 + 1) & v50;
          if (((*(_QWORD *)(v40 + ((v46 >> 3) & 0xFFFFFFFFFFFFF8)) >> v46) & 1) == 0)
            break;
          v51 = (_QWORD *)(v47 + 16 * v46);
          v52 = *v51 == v42 && v51[1] == v43;
          if (v52 || (sub_1CA85C284() & 1) != 0)
            goto LABEL_13;
        }
LABEL_28:
        swift_bridgeObjectRelease();
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v149 = (_QWORD *)v36;
        swift_bridgeObjectRetain();
        sub_1CA245FF4(v42, v43, v46, isUniquelyReferenced_nonNull_native);
        v36 = (uint64_t)v149;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v39 == v38)
        {
LABEL_36:
          swift_bridgeObjectRelease();
          v62 = v128;
          v63 = v132;
          v7 = v127;
          goto LABEL_44;
        }
        v40 = v36 + 56;
      }
    }
  }
  v63 = v4;
  v62 = v3;
  swift_bridgeObjectRelease();
LABEL_44:
  sub_1CA2C0D80();
  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  v68 = (void *)sub_1CA85B978();
  swift_bridgeObjectRelease();
  v69 = objc_msgSend(ObjCClassFromMetadata, sel_localIdentifiersWithUUIDs_, v68);

  if (!v69)
  {
    (*(void (**)(char *, uint64_t))(v140 + 8))(v139, v7);
LABEL_7:
    v3 = v62;
    v4 = v63;
    v6 = v131;
    goto LABEL_8;
  }
  v70 = sub_1CA85B984();

  if (!*(_QWORD *)(v70 + 16))
  {
    (*(void (**)(char *, uint64_t))(v140 + 8))(v139, v7);
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  v71 = 0;
  v72 = *(_QWORD *)(v70 + 56);
  v141 = v70 + 56;
  v73 = 1 << *(_BYTE *)(v70 + 32);
  if (v73 < 64)
    v74 = ~(-1 << v73);
  else
    v74 = -1;
  v75 = v74 & v72;
  v147 = (unint64_t)(v73 + 63) >> 6;
  v76 = v146;
  while (1)
  {
    if (v75)
    {
      v77 = __clz(__rbit64(v75));
      v75 &= v75 - 1;
      v78 = v77 | (v71 << 6);
      goto LABEL_65;
    }
    v79 = __OFADD__(v71++, 1);
    if (v79)
    {
      __break(1u);
LABEL_107:
      __break(1u);
      goto LABEL_108;
    }
    if (v71 >= v147)
    {
      v3 = v128;
      v4 = v132;
      v6 = v131;
      v7 = v127;
      goto LABEL_87;
    }
    v80 = *(_QWORD *)(v141 + 8 * v71);
    if (!v80)
    {
      v81 = v71 + 1;
      if (v71 + 1 >= v147)
        goto LABEL_86;
      v80 = *(_QWORD *)(v141 + 8 * v81);
      if (v80)
        goto LABEL_63;
      v81 = v71 + 2;
      if (v71 + 2 >= v147)
        goto LABEL_86;
      v80 = *(_QWORD *)(v141 + 8 * v81);
      if (v80)
        goto LABEL_63;
      v81 = v71 + 3;
      if (v71 + 3 < v147)
      {
        v80 = *(_QWORD *)(v141 + 8 * v81);
        if (v80)
        {
LABEL_63:
          v71 = v81;
          goto LABEL_64;
        }
        while (1)
        {
          v71 = v81 + 1;
          if (__OFADD__(v81, 1))
            break;
          if (v71 >= v147)
            goto LABEL_86;
          v80 = *(_QWORD *)(v141 + 8 * v71);
          ++v81;
          if (v80)
            goto LABEL_64;
        }
LABEL_108:
        __break(1u);
LABEL_109:
        result = sub_1CA85C2E4();
        __break(1u);
        return result;
      }
LABEL_86:
      v3 = v128;
      v4 = v132;
      v6 = v131;
      v7 = v127;
LABEL_87:
      swift_release();
      goto LABEL_94;
    }
LABEL_64:
    v75 = (v80 - 1) & v80;
    v78 = __clz(__rbit64(v80)) + (v71 << 6);
LABEL_65:
    v82 = v70;
    v83 = (uint64_t *)(*(_QWORD *)(v70 + 48) + 16 * v78);
    v85 = *v83;
    v84 = v83[1];
    v145(v150, (uint64_t)v143, v76);
    swift_bridgeObjectRetain();
    v86 = v148;
    v87 = swift_isUniquelyReferenced_nonNull_native();
    v149 = v86;
    v89 = sub_1CA25081C(v85, v84);
    v90 = v86[2];
    v91 = (v88 & 1) == 0;
    v92 = v90 + v91;
    if (__OFADD__(v90, v91))
      break;
    v93 = v88;
    if (v86[3] >= v92)
    {
      if ((v87 & 1) == 0)
        sub_1CA261614();
    }
    else
    {
      sub_1CA2544D0(v92, v87);
      v94 = sub_1CA25081C(v85, v84);
      if ((v93 & 1) != (v95 & 1))
        goto LABEL_109;
      v89 = v94;
    }
    v70 = v82;
    v96 = v149;
    if ((v93 & 1) != 0)
    {
      v76 = v146;
      (*(void (**)(unint64_t, char *, uint64_t))(v142 + 40))(v149[7] + v89 * v144, v150, v146);
    }
    else
    {
      v149[(v89 >> 6) + 8] |= 1 << v89;
      v97 = (uint64_t *)(v96[6] + 16 * v89);
      *v97 = v85;
      v97[1] = v84;
      v76 = v146;
      (*(void (**)(unint64_t, char *, uint64_t))(v142 + 32))(v96[7] + v89 * v144, v150, v146);
      v98 = v96[2];
      v79 = __OFADD__(v98, 1);
      v99 = v98 + 1;
      if (v79)
        goto LABEL_103;
      v96[2] = v99;
      swift_bridgeObjectRetain();
    }
    v148 = v149;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  __break(1u);
LABEL_103:
  __break(1u);
LABEL_104:
  result = swift_bridgeObjectRelease();
  v106 = v118;
  v108 = v134;
  v109 = v122;
  v110 = v125;
  v107 = v148;
LABEL_105:
  v111 = v113;
  *v113 = v107;
  v111[1] = v110;
  v111[2] = v109;
  v111[3] = v108;
  v111[4] = v106;
  return result;
}

unint64_t sub_1CA2D3298()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF94CAB8;
  if (!qword_1EF94CAB8)
  {
    v1 = sub_1CA85AFC4();
    result = MEMORY[0x1CAA4F1A4](MEMORY[0x1E0D77380], v1);
    atomic_store(result, (unint64_t *)&qword_1EF94CAB8);
  }
  return result;
}

unint64_t sub_1CA2D32E4()
{
  unint64_t result;

  result = qword_1EF94CAC0;
  if (!qword_1EF94CAC0)
  {
    result = MEMORY[0x1CAA4F1A4](&protocol conformance descriptor for ExtendedTokenCollectionGenerator.Error, &type metadata for ExtendedTokenCollectionGenerator.Error);
    atomic_store(result, (unint64_t *)&qword_1EF94CAC0);
  }
  return result;
}

uint64_t type metadata accessor for ExtendedTokenCollectionGenerator()
{
  return objc_opt_self();
}

uint64_t method lookup function for ExtendedTokenCollectionGenerator()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ExtendedTokenCollectionGenerator.__allocating_init(graph:photoLibrary:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t storeEnumTagSinglePayload for ExtendedTokenCollectionGenerator.Error(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1CA2D33A8 + 4 * byte_1CA8D9F55[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1CA2D33DC + 4 * byte_1CA8D9F50[v4]))();
}

uint64_t sub_1CA2D33DC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CA2D33E4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1CA2D33ECLL);
  return result;
}

uint64_t sub_1CA2D33F8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1CA2D3400);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1CA2D3404(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CA2D340C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ExtendedTokenCollectionGenerator.Error()
{
  return &type metadata for ExtendedTokenCollectionGenerator.Error;
}

id sub_1CA2D3428(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  id v12;
  id v13;
  void (*v14)(char *, uint64_t);
  id v15;
  void *v16;
  id v17;
  id v18;
  void *v19;
  uint64_t v20;
  id v21;
  void *v22;
  void *v23;
  id v24;
  void *v25;
  id v26;
  id v27;
  uint64_t v29;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED872DC0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x1E0C80A78](v4);
  v9 = (char *)&v29 - v8;
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v29 - v10;
  v12 = objc_msgSend(a1, sel_matrix);
  v13 = objc_msgSend(v12, sel_wrapper);

  sub_1CA85A958();
  sub_1CA85AA48();
  sub_1CA85AA54();
  v14 = *(void (**)(char *, uint64_t))(v3 + 8);
  v14(v6, v2);
  v14(v9, v2);
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v9, v11, v2);
  v15 = objc_allocWithZone((Class)sub_1CA85A970());
  v16 = (void *)sub_1CA85A964();
  v17 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D42A18]), sel_initWithWrapper_, v16);

  v18 = objc_msgSend(a1, sel_rowLabels);
  if (v18)
  {
    v19 = v18;
    v20 = sub_1CA85B7B0();

  }
  else
  {
    v20 = 0;
  }
  type metadata accessor for MaestroRanker();
  swift_bridgeObjectRetain();
  v21 = v17;
  v22 = (void *)sub_1CA85B510();
  if (v20)
  {
    v23 = (void *)sub_1CA85B798();
    swift_bridgeObjectRelease();
  }
  else
  {
    v23 = 0;
  }
  v24 = objc_allocWithZone(MEMORY[0x1E0D429E8]);
  v25 = (void *)sub_1CA85B798();
  swift_bridgeObjectRelease();
  v26 = objc_msgSend(v24, sel_initWithName_rowLabels_columnLabels_matrix_, v22, v23, v25, v21);

  if (v26)
  {
    v27 = v26;
    v14(v11, v2);

  }
  else
  {
    sub_1CA2D3764();
    swift_allocError();
    swift_willThrow();

    v14(v11, v2);
  }
  return v26;
}

uint64_t type metadata accessor for MaestroRanker()
{
  uint64_t result;

  result = qword_1ED872D38;
  if (!qword_1ED872D38)
    return swift_getSingletonMetadata();
  return result;
}

unint64_t sub_1CA2D3764()
{
  unint64_t result;

  result = qword_1EF94CB80;
  if (!qword_1EF94CB80)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8DA0EC, &type metadata for MaestroRanker.Error);
    atomic_store(result, (unint64_t *)&qword_1EF94CB80);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for MaestroRanker.Error(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1CA2D37E8 + 4 * byte_1CA8DA064[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1CA2D3808 + 4 * byte_1CA8DA069[v4]))();
}

_BYTE *sub_1CA2D37E8(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1CA2D3808(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1CA2D3810(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1CA2D3818(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1CA2D3820(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1CA2D3828(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for MaestroRanker.Error()
{
  return &type metadata for MaestroRanker.Error;
}

uint64_t *sub_1CA2D3844(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED872DC0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1CA2D38D4(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED872DC0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1CA2D391C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED872DC0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1CA2D3980(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED872DC0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1CA2D39F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED872DC0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_1CA2D3A50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED872DC0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1CA2D3AB8()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CA2D3AC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED872DC0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_1CA2D3B44()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CA2D3B50(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED872DC0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

void sub_1CA2D3BCC()
{
  unint64_t v0;

  sub_1CA2D3C40();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void sub_1CA2D3C40()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED872DC8)
  {
    v0 = sub_1CA85AA60();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED872DC8);
  }
}

unint64_t sub_1CA2D3C98()
{
  unint64_t result;

  result = qword_1EF94CB88;
  if (!qword_1EF94CB88)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8DA0C4, &type metadata for MaestroRanker.Error);
    atomic_store(result, (unint64_t *)&qword_1EF94CB88);
  }
  return result;
}

uint64_t sub_1CA2D3CDC()
{
  sub_1CA2D3E6C();
  return sub_1CA85C3E0();
}

uint64_t sub_1CA2D3D04()
{
  sub_1CA2D3E6C();
  return sub_1CA85C3EC();
}

uint64_t MusicKitCatalogSongSearchResponse.MusicKitCatalogResults.MusicKitCatalogSongsData.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _QWORD v10[2];

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94CB90);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1CA2D3E6C();
  sub_1CA85C3C8();
  if (!v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED872250);
    sub_1CA2D4600((unint64_t *)&qword_1ED872258, &qword_1ED872250, (uint64_t (*)(void))sub_1CA2D3EB0);
    sub_1CA85C1A0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v10[1];
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1CA2D3E6C()
{
  unint64_t result;

  result = qword_1EF94CB98;
  if (!qword_1EF94CB98)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8DA8F4, &type metadata for MusicKitCatalogSongSearchResponse.MusicKitCatalogResults.MusicKitCatalogSongsData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF94CB98);
  }
  return result;
}

unint64_t sub_1CA2D3EB0()
{
  unint64_t result;

  result = qword_1ED871A00;
  if (!qword_1ED871A00)
  {
    result = MEMORY[0x1CAA4F1A4](&protocol conformance descriptor for MusicKitCatalogSong, &type metadata for MusicKitCatalogSong);
    atomic_store(result, (unint64_t *)&qword_1ED871A00);
  }
  return result;
}

uint64_t sub_1CA2D3EF4@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return MusicKitCatalogSongSearchResponse.MusicKitCatalogResults.MusicKitCatalogSongsData.init(from:)(a1, a2);
}

uint64_t MusicKitCatalogSongSearchResponse.MusicKitCatalogResults.songs.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1CA2D3F14()
{
  return 0x73676E6F73;
}

uint64_t sub_1CA2D3F28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x73676E6F73 && a2 == 0xE500000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1CA85C284();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1CA2D3FB4()
{
  sub_1CA2D4120();
  return sub_1CA85C3E0();
}

uint64_t sub_1CA2D3FDC()
{
  sub_1CA2D4120();
  return sub_1CA85C3EC();
}

uint64_t MusicKitCatalogSongSearchResponse.MusicKitCatalogResults.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _QWORD v10[2];

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94CBA0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1CA2D4120();
  sub_1CA85C3C8();
  if (!v2)
  {
    sub_1CA2D4164();
    sub_1CA85C1A0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v10[1];
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1CA2D4120()
{
  unint64_t result;

  result = qword_1EF94CBA8;
  if (!qword_1EF94CBA8)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8DA8A4, &type metadata for MusicKitCatalogSongSearchResponse.MusicKitCatalogResults.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF94CBA8);
  }
  return result;
}

unint64_t sub_1CA2D4164()
{
  unint64_t result;

  result = qword_1EF94CBB0;
  if (!qword_1EF94CBB0)
  {
    result = MEMORY[0x1CAA4F1A4](&protocol conformance descriptor for MusicKitCatalogSongSearchResponse.MusicKitCatalogResults.MusicKitCatalogSongsData, &type metadata for MusicKitCatalogSongSearchResponse.MusicKitCatalogResults.MusicKitCatalogSongsData);
    atomic_store(result, (unint64_t *)&qword_1EF94CBB0);
  }
  return result;
}

uint64_t sub_1CA2D41A8@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return MusicKitCatalogSongSearchResponse.MusicKitCatalogResults.init(from:)(a1, a2);
}

uint64_t MusicKitCatalogSongSearchResponse.results.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
  return swift_bridgeObjectRetain();
}

uint64_t MusicKitCatalogSongSearchResponse.results.setter(uint64_t *a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t result;

  v2 = *a1;
  result = swift_bridgeObjectRelease();
  *v1 = v2;
  return result;
}

uint64_t (*MusicKitCatalogSongSearchResponse.results.modify())()
{
  return GEOLocationCoordinate2DMake;
}

uint64_t sub_1CA2D4200()
{
  return 0x73746C75736572;
}

uint64_t sub_1CA2D421C()
{
  sub_1CA2D4388();
  return sub_1CA85C3E0();
}

uint64_t sub_1CA2D4244()
{
  sub_1CA2D4388();
  return sub_1CA85C3EC();
}

uint64_t MusicKitCatalogSongSearchResponse.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _QWORD v10[2];

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94CBB8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1CA2D4388();
  sub_1CA85C3C8();
  if (!v2)
  {
    sub_1CA2D43CC();
    sub_1CA85C1A0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v10[1];
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1CA2D4388()
{
  unint64_t result;

  result = qword_1EF94CBC0;
  if (!qword_1EF94CBC0)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8DA854, &type metadata for MusicKitCatalogSongSearchResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF94CBC0);
  }
  return result;
}

unint64_t sub_1CA2D43CC()
{
  unint64_t result;

  result = qword_1EF94CBC8;
  if (!qword_1EF94CBC8)
  {
    result = MEMORY[0x1CAA4F1A4](&protocol conformance descriptor for MusicKitCatalogSongSearchResponse.MusicKitCatalogResults, &type metadata for MusicKitCatalogSongSearchResponse.MusicKitCatalogResults);
    atomic_store(result, (unint64_t *)&qword_1EF94CBC8);
  }
  return result;
}

uint64_t sub_1CA2D4410@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return MusicKitCatalogSongSearchResponse.init(from:)(a1, a2);
}

uint64_t MusicKitCatalogPlaylistData.data.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1CA2D442C()
{
  sub_1CA2D45BC();
  return sub_1CA85C3E0();
}

uint64_t sub_1CA2D4454()
{
  sub_1CA2D45BC();
  return sub_1CA85C3EC();
}

uint64_t MusicKitCatalogPlaylistData.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _QWORD v10[2];

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94CBD0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1CA2D45BC();
  sub_1CA85C3C8();
  if (!v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED874970);
    sub_1CA2D4600((unint64_t *)&qword_1ED874978, &qword_1ED874970, (uint64_t (*)(void))sub_1CA2D4664);
    sub_1CA85C1A0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v10[1];
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1CA2D45BC()
{
  unint64_t result;

  result = qword_1EF94CBD8;
  if (!qword_1EF94CBD8)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8DA804, &type metadata for MusicKitCatalogPlaylistData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF94CBD8);
  }
  return result;
}

uint64_t sub_1CA2D4600(unint64_t *a1, uint64_t *a2, uint64_t (*a3)(void))
{
  uint64_t result;
  uint64_t v6;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v7 = a3();
    result = MEMORY[0x1CAA4F1A4](MEMORY[0x1E0DEAF40], v6, &v7);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1CA2D4664()
{
  unint64_t result;

  result = qword_1ED874748;
  if (!qword_1ED874748)
  {
    result = MEMORY[0x1CAA4F1A4](&protocol conformance descriptor for MusicKitCatalogPlaylist, &type metadata for MusicKitCatalogPlaylist);
    atomic_store(result, (unint64_t *)&qword_1ED874748);
  }
  return result;
}

uint64_t sub_1CA2D46A8@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return MusicKitCatalogPlaylistData.init(from:)(a1, a2);
}

uint64_t sub_1CA2D46BC()
{
  return 0x7473696C79616C70;
}

uint64_t sub_1CA2D46D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x7473696C79616C70 && a2 == 0xE900000000000073)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1CA85C284();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1CA2D4778()
{
  sub_1CA2D48E4();
  return sub_1CA85C3E0();
}

uint64_t sub_1CA2D47A0()
{
  sub_1CA2D48E4();
  return sub_1CA85C3EC();
}

uint64_t MusicKitCatalogPlaylistSearchResponse.MusicKitCatalogResults.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _QWORD v10[2];

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94CBE0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1CA2D48E4();
  sub_1CA85C3C8();
  if (!v2)
  {
    sub_1CA2D4928();
    sub_1CA85C1A0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v10[1];
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1CA2D48E4()
{
  unint64_t result;

  result = qword_1EF94CBE8;
  if (!qword_1EF94CBE8)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8DA7B4, &type metadata for MusicKitCatalogPlaylistSearchResponse.MusicKitCatalogResults.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF94CBE8);
  }
  return result;
}

unint64_t sub_1CA2D4928()
{
  unint64_t result;

  result = qword_1EF94CBF0;
  if (!qword_1EF94CBF0)
  {
    result = MEMORY[0x1CAA4F1A4](&protocol conformance descriptor for MusicKitCatalogPlaylistData, &type metadata for MusicKitCatalogPlaylistData);
    atomic_store(result, (unint64_t *)&qword_1EF94CBF0);
  }
  return result;
}

uint64_t sub_1CA2D496C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return MusicKitCatalogPlaylistSearchResponse.MusicKitCatalogResults.init(from:)(a1, a2);
}

uint64_t (*MusicKitCatalogPlaylistSearchResponse.results.modify())()
{
  return GEOLocationCoordinate2DMake;
}

uint64_t sub_1CA2D4990@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x73746C75736572 && a2 == 0xE700000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1CA85C284();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1CA2D4A24()
{
  sub_1CA2D4B90();
  return sub_1CA85C3E0();
}

uint64_t sub_1CA2D4A4C()
{
  sub_1CA2D4B90();
  return sub_1CA85C3EC();
}

uint64_t MusicKitCatalogPlaylistSearchResponse.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _QWORD v10[2];

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94CBF8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1CA2D4B90();
  sub_1CA85C3C8();
  if (!v2)
  {
    sub_1CA2D4BD4();
    sub_1CA85C1A0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v10[1];
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1CA2D4B90()
{
  unint64_t result;

  result = qword_1EF94CC00;
  if (!qword_1EF94CC00)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8DA764, &type metadata for MusicKitCatalogPlaylistSearchResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF94CC00);
  }
  return result;
}

unint64_t sub_1CA2D4BD4()
{
  unint64_t result;

  result = qword_1EF94CC08;
  if (!qword_1EF94CC08)
  {
    result = MEMORY[0x1CAA4F1A4](&protocol conformance descriptor for MusicKitCatalogPlaylistSearchResponse.MusicKitCatalogResults, &type metadata for MusicKitCatalogPlaylistSearchResponse.MusicKitCatalogResults);
    atomic_store(result, (unint64_t *)&qword_1EF94CC08);
  }
  return result;
}

uint64_t sub_1CA2D4C18@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return MusicKitCatalogPlaylistSearchResponse.init(from:)(a1, a2);
}

ValueMetadata *type metadata accessor for MusicKitCatalogSongSearchResponse()
{
  return &type metadata for MusicKitCatalogSongSearchResponse;
}

ValueMetadata *type metadata accessor for MusicKitCatalogSongSearchResponse.MusicKitCatalogResults()
{
  return &type metadata for MusicKitCatalogSongSearchResponse.MusicKitCatalogResults;
}

ValueMetadata *type metadata accessor for MusicKitCatalogSongSearchResponse.MusicKitCatalogResults.MusicKitCatalogSongsData()
{
  return &type metadata for MusicKitCatalogSongSearchResponse.MusicKitCatalogResults.MusicKitCatalogSongsData;
}

ValueMetadata *type metadata accessor for MusicKitCatalogPlaylistData()
{
  return &type metadata for MusicKitCatalogPlaylistData;
}

ValueMetadata *type metadata accessor for MusicKitCatalogPlaylistSearchResponse()
{
  return &type metadata for MusicKitCatalogPlaylistSearchResponse;
}

ValueMetadata *type metadata accessor for MusicKitCatalogPlaylistSearchResponse.MusicKitCatalogResults()
{
  return &type metadata for MusicKitCatalogPlaylistSearchResponse.MusicKitCatalogResults;
}

ValueMetadata *type metadata accessor for MusicKitCatalogPlaylistSearchResponse.CodingKeys()
{
  return &type metadata for MusicKitCatalogPlaylistSearchResponse.CodingKeys;
}

ValueMetadata *type metadata accessor for MusicKitCatalogPlaylistSearchResponse.MusicKitCatalogResults.CodingKeys()
{
  return &type metadata for MusicKitCatalogPlaylistSearchResponse.MusicKitCatalogResults.CodingKeys;
}

ValueMetadata *type metadata accessor for MusicKitCatalogPlaylistData.CodingKeys()
{
  return &type metadata for MusicKitCatalogPlaylistData.CodingKeys;
}

ValueMetadata *type metadata accessor for MusicKitCatalogSongSearchResponse.CodingKeys()
{
  return &type metadata for MusicKitCatalogSongSearchResponse.CodingKeys;
}

ValueMetadata *type metadata accessor for MusicKitCatalogSongSearchResponse.MusicKitCatalogResults.CodingKeys()
{
  return &type metadata for MusicKitCatalogSongSearchResponse.MusicKitCatalogResults.CodingKeys;
}

uint64_t _s11PhotosGraph37MusicKitCatalogPlaylistSearchResponseV10CodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1CA2D4D20 + 4 * byte_1CA8DA130[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1CA2D4D40 + 4 * byte_1CA8DA135[v4]))();
}

_BYTE *sub_1CA2D4D20(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1CA2D4D40(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1CA2D4D48(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1CA2D4D50(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1CA2D4D58(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1CA2D4D60(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for MusicKitCatalogSongSearchResponse.MusicKitCatalogResults.MusicKitCatalogSongsData.CodingKeys()
{
  return &type metadata for MusicKitCatalogSongSearchResponse.MusicKitCatalogResults.MusicKitCatalogSongsData.CodingKeys;
}

unint64_t sub_1CA2D4D80()
{
  unint64_t result;

  result = qword_1EF94CC10;
  if (!qword_1EF94CC10)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8DA3A4, &type metadata for MusicKitCatalogSongSearchResponse.MusicKitCatalogResults.MusicKitCatalogSongsData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF94CC10);
  }
  return result;
}

unint64_t sub_1CA2D4DC8()
{
  unint64_t result;

  result = qword_1EF94CC18;
  if (!qword_1EF94CC18)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8DA45C, &type metadata for MusicKitCatalogSongSearchResponse.MusicKitCatalogResults.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF94CC18);
  }
  return result;
}

unint64_t sub_1CA2D4E10()
{
  unint64_t result;

  result = qword_1EF94CC20;
  if (!qword_1EF94CC20)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8DA514, &type metadata for MusicKitCatalogSongSearchResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF94CC20);
  }
  return result;
}

unint64_t sub_1CA2D4E58()
{
  unint64_t result;

  result = qword_1EF94CC28;
  if (!qword_1EF94CC28)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8DA5CC, &type metadata for MusicKitCatalogPlaylistData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF94CC28);
  }
  return result;
}

unint64_t sub_1CA2D4EA0()
{
  unint64_t result;

  result = qword_1EF94CC30;
  if (!qword_1EF94CC30)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8DA684, &type metadata for MusicKitCatalogPlaylistSearchResponse.MusicKitCatalogResults.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF94CC30);
  }
  return result;
}

unint64_t sub_1CA2D4EE8()
{
  unint64_t result;

  result = qword_1EF94CC38;
  if (!qword_1EF94CC38)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8DA73C, &type metadata for MusicKitCatalogPlaylistSearchResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF94CC38);
  }
  return result;
}

unint64_t sub_1CA2D4F30()
{
  unint64_t result;

  result = qword_1EF94CC40;
  if (!qword_1EF94CC40)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8DA6AC, &type metadata for MusicKitCatalogPlaylistSearchResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF94CC40);
  }
  return result;
}

unint64_t sub_1CA2D4F78()
{
  unint64_t result;

  result = qword_1EF94CC48;
  if (!qword_1EF94CC48)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8DA6D4, &type metadata for MusicKitCatalogPlaylistSearchResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF94CC48);
  }
  return result;
}

unint64_t sub_1CA2D4FC0()
{
  unint64_t result;

  result = qword_1EF94CC50;
  if (!qword_1EF94CC50)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8DA5F4, &type metadata for MusicKitCatalogPlaylistSearchResponse.MusicKitCatalogResults.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF94CC50);
  }
  return result;
}

unint64_t sub_1CA2D5008()
{
  unint64_t result;

  result = qword_1EF94CC58;
  if (!qword_1EF94CC58)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8DA61C, &type metadata for MusicKitCatalogPlaylistSearchResponse.MusicKitCatalogResults.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF94CC58);
  }
  return result;
}

unint64_t sub_1CA2D5050()
{
  unint64_t result;

  result = qword_1EF94CC60;
  if (!qword_1EF94CC60)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8DA53C, &type metadata for MusicKitCatalogPlaylistData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF94CC60);
  }
  return result;
}

unint64_t sub_1CA2D5098()
{
  unint64_t result;

  result = qword_1EF94CC68;
  if (!qword_1EF94CC68)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8DA564, &type metadata for MusicKitCatalogPlaylistData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF94CC68);
  }
  return result;
}

unint64_t sub_1CA2D50E0()
{
  unint64_t result;

  result = qword_1EF94CC70;
  if (!qword_1EF94CC70)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8DA484, &type metadata for MusicKitCatalogSongSearchResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF94CC70);
  }
  return result;
}

unint64_t sub_1CA2D5128()
{
  unint64_t result;

  result = qword_1EF94CC78;
  if (!qword_1EF94CC78)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8DA4AC, &type metadata for MusicKitCatalogSongSearchResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF94CC78);
  }
  return result;
}

unint64_t sub_1CA2D5170()
{
  unint64_t result;

  result = qword_1EF94CC80;
  if (!qword_1EF94CC80)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8DA3CC, &type metadata for MusicKitCatalogSongSearchResponse.MusicKitCatalogResults.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF94CC80);
  }
  return result;
}

unint64_t sub_1CA2D51B8()
{
  unint64_t result;

  result = qword_1EF94CC88;
  if (!qword_1EF94CC88)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8DA3F4, &type metadata for MusicKitCatalogSongSearchResponse.MusicKitCatalogResults.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF94CC88);
  }
  return result;
}

unint64_t sub_1CA2D5200()
{
  unint64_t result;

  result = qword_1EF94CC90;
  if (!qword_1EF94CC90)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8DA314, &type metadata for MusicKitCatalogSongSearchResponse.MusicKitCatalogResults.MusicKitCatalogSongsData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF94CC90);
  }
  return result;
}

unint64_t sub_1CA2D5248()
{
  unint64_t result;

  result = qword_1EF94CC98;
  if (!qword_1EF94CC98)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8DA33C, &type metadata for MusicKitCatalogSongSearchResponse.MusicKitCatalogResults.MusicKitCatalogSongsData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF94CC98);
  }
  return result;
}

uint64_t dispatch thunk of CuratorEvent.startDate.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of CuratorEvent.endDate.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of CuratorEvent.approximateLocation.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of CuratorEvent.identifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t ExtendedTokenCollectionGenerator.generateTripExtendedTokens(for:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  _BOOL4 v21;
  uint8_t *v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  void (*v28)(char *, unint64_t, uint64_t);
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t i;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  int isUniquelyReferenced_nonNull_native;
  int64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v48;
  BOOL v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t *v53;
  char *v54;
  int v55;
  void *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t *v62;
  uint64_t v63;
  uint64_t v64;
  void *ObjCClassFromMetadata;
  void *v66;
  id v67;
  uint64_t v68;
  uint64_t v69;
  NSObject *v70;
  void *v71;
  void *v72;
  id v73;
  id v74;
  uint64_t v75;
  uint64_t v76;
  __int128 v77;
  _QWORD *v78;
  id v79;
  id v80;
  void *v81;
  unint64_t v82;
  uint64_t v83;
  uint64_t v84;
  void *v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  unint64_t v94;
  uint64_t *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  os_log_type_t v99;
  uint8_t *v100;
  uint8_t *v101;
  uint64_t v102;
  NSObject *v103;
  unint64_t v104;
  char *v105;
  char *v106;
  unint64_t v107;
  uint64_t v108;
  NSObject *v109;
  os_log_type_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  NSObject *v114;
  os_log_type_t v115;
  uint8_t *v116;
  os_log_type_t v117;
  uint64_t result;
  NSObject *v119;
  uint64_t v120;
  __int128 v121;
  char *v122;
  unint64_t v123;
  char *v124;
  NSObject *v125;
  __int128 v126;
  uint64_t v127;
  char *v128;
  id v129;
  uint64_t v130;
  unint64_t v131;
  char *v132;
  char *v133;
  uint64_t v134;
  NSObject *v135;
  char *v136;
  unint64_t v137;
  uint64_t *v138;
  unint64_t v139;
  uint64_t v140;
  char *v141;
  uint64_t v142;
  id v143;
  unint64_t v144;
  _QWORD *v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  NSObject *v149;
  uint64_t v150;
  char v151;

  v2 = sub_1CA85ADC0();
  v134 = *(_QWORD *)(v2 - 8);
  v135 = v2;
  v3 = MEMORY[0x1E0C80A78](v2);
  v133 = (char *)&v119 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v132 = (char *)&v119 - v5;
  v6 = (_QWORD *)sub_1CA85AE50();
  v128 = (char *)*(v6 - 1);
  v7 = MEMORY[0x1E0C80A78](v6);
  v124 = (char *)&v119 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v136 = (char *)&v119 - v9;
  v147 = sub_1CA85AF94();
  v10 = *(NSObject **)(v147 - 8);
  MEMORY[0x1E0C80A78](v147);
  v12 = (unint64_t)&v119 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1CA85AF04();
  v146 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v141 = (char *)&v119 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1CA85AAFC();
  v143 = *(id *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v119 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EF94A278 != -1)
    goto LABEL_105;
  while (1)
  {
    v138 = (uint64_t *)v12;
    v139 = (unint64_t)v10;
    v18 = sub_1CA85B348();
    v130 = __swift_project_value_buffer(v18, (uint64_t)qword_1EF978150);
    v19 = sub_1CA85B330();
    v20 = sub_1CA85BAC8();
    v21 = os_log_type_enabled(v19, v20);
    v144 = v13;
    if (v21)
    {
      v22 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v22 = 0;
      _os_log_impl(&dword_1CA237000, v19, v20, "generateTripExtendedTokens for query tokens has started.", v22, 2u);
      v23 = v22;
      v13 = v144;
      MEMORY[0x1CAA4F27C](v23, -1, -1);
    }

    v24 = *(_QWORD *)(a1 + 16);
    v25 = MEMORY[0x1E0DEE9D8];
    v145 = v6;
    if (v24)
    {
      v26 = a1;
      v27 = a1 + ((*((unsigned __int8 *)v143 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v143 + 80));
      v142 = *((_QWORD *)v143 + 9);
      v28 = (void (*)(char *, unint64_t, uint64_t))*((_QWORD *)v143 + 2);
      v140 = v26;
      swift_bridgeObjectRetain();
      v29 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v30 = v24;
      do
      {
        v28(v17, v27, v15);
        v31 = sub_1CA85AAF0();
        (*((void (**)(char *, uint64_t))v143 + 1))(v17, v15);
        if (v31)
        {
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v29 = sub_1CA26D328(0, v29[2] + 1, 1, v29);
          v33 = v29[2];
          v32 = v29[3];
          if (v33 >= v32 >> 1)
            v29 = sub_1CA26D328((_QWORD *)(v32 > 1), v33 + 1, 1, v29);
          v29[2] = v33 + 1;
          v29[v33 + 4] = v31;
          v13 = v144;
        }
        v27 += v142;
        --v30;
      }
      while (v30);
      a1 = v140;
      swift_bridgeObjectRelease();
      v25 = MEMORY[0x1E0DEE9D8];
    }
    else
    {
      v29 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    }
    v149 = v25;
    v34 = v29[2];
    v15 = (uint64_t)v136;
    if (v34)
    {
      swift_bridgeObjectRetain();
      for (i = 0; i != v34; ++i)
      {
        v36 = swift_bridgeObjectRetain();
        sub_1CA284B8C(v36);
      }
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    v10 = v149;
    v140 = sub_1CA2877D4((uint64_t)v149);
    swift_bridgeObjectRelease();
    v37 = MEMORY[0x1E0DEE9D8];
    if (v24)
      break;
    v39 = MEMORY[0x1E0DEE9D8];
LABEL_43:
    v150 = v37;
    v51 = *(_QWORD *)(v39 + 16);
    v53 = v138;
    v52 = v139;
    v54 = v141;
    if (v51)
    {
      a1 = v39 + ((*(unsigned __int8 *)(v146 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v146 + 80));
      v55 = *MEMORY[0x1E0D772D8];
      v56 = *(void **)(v146 + 72);
      v142 = *(_QWORD *)(v146 + 16);
      v143 = v56;
      swift_bridgeObjectRetain();
      v57 = 0;
      LODWORD(v137) = v55;
      do
      {
        ((void (*)(char *, uint64_t, unint64_t))v142)(v54, a1 + (_QWORD)v143 * v57, v13);
        sub_1CA85AEF8();
        if ((*(unsigned int (**)(uint64_t *, uint64_t))(v52 + 88))(v53, v147) == v55)
        {
          (*(void (**)(uint64_t *, uint64_t))(v52 + 96))(v53, v147);
          v58 = *v53;
          v148 = sub_1CA85B9A8();
          v59 = *(_QWORD *)(v58 + 16);
          if (v59)
          {
            v60 = v51;
            v61 = a1;
            v62 = (uint64_t *)(v58 + 40);
            do
            {
              v63 = *(v62 - 1);
              v64 = *v62;
              swift_bridgeObjectRetain();
              sub_1CA23F448((uint64_t *)&v149, v63, v64);
              swift_bridgeObjectRelease();
              v62 += 2;
              --v59;
            }
            while (v59);
            swift_bridgeObjectRelease();
            a1 = v61;
            v51 = v60;
            v55 = v137;
          }
          else
          {
            swift_bridgeObjectRelease();
          }
          sub_1CA24EEC0(0, &qword_1EF94CCA0);
          ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
          v66 = (void *)sub_1CA85B978();
          swift_bridgeObjectRelease();
          v67 = objc_msgSend(ObjCClassFromMetadata, sel_localIdentifiersWithUUIDs_, v66);

          v53 = v138;
          v52 = v139;
          v13 = v144;
          v54 = v141;
          if (v67)
          {
            v68 = sub_1CA85B984();

            v69 = v68;
            v54 = v141;
            sub_1CA2847C4(v69);
          }
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t))(v52 + 8))(v53, v147);
        }
        ++v57;
        (*(void (**)(char *, unint64_t))(v146 + 8))(v54, v13);
      }
      while (v57 != v51);
      swift_bridgeObjectRelease_n();
      v15 = (uint64_t)v136;
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    v129 = *(id *)(v131 + 24);
    v70 = objc_msgSend(v129, sel_librarySpecificFetchOptions, v119, v120);
    sub_1CA24EEC0(0, &qword_1EF94CCA0);
    v71 = (void *)swift_getObjCClassFromMetadata();
    v72 = (void *)sub_1CA85B798();
    swift_bridgeObjectRelease();
    v73 = objc_msgSend(v71, sel_fetchAssetCollectionsWithLocalIdentifiers_options_, v72, v70);

    v74 = objc_msgSend(v73, sel_fetchedObjects);
    v17 = v128;
    if (!v74)
    {
      swift_bridgeObjectRelease();
      v114 = sub_1CA85B330();
      v115 = sub_1CA85BAE0();
      if (os_log_type_enabled(v114, v115))
      {
        v116 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v116 = 0;
        _os_log_impl(&dword_1CA237000, v114, v115, "Unable to fetch trip collections!", v116, 2u);
        v13 = MEMORY[0x1E0DEE9D8];
        goto LABEL_95;
      }
      v13 = MEMORY[0x1E0DEE9D8];
LABEL_98:

      return v13;
    }
    sub_1CA24EEC0(0, &qword_1ED872370);
    v12 = sub_1CA85B7B0();

    v131 = v12;
    if (v12 >> 62)
    {
      v12 = v131;
      swift_bridgeObjectRetain();
      v10 = sub_1CA85C08C();
      swift_bridgeObjectRelease();
    }
    else
    {
      v10 = *(NSObject **)((v131 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    v119 = v70;
    if (!v10)
    {
      v13 = MEMORY[0x1E0DEE9D8];
LABEL_93:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v114 = sub_1CA85B330();
      v117 = sub_1CA85BAC8();
      if (os_log_type_enabled(v114, v117))
      {
        v116 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v116 = 0;
        _os_log_impl(&dword_1CA237000, v114, v117, "generateTripExtendedTokens for query tokens complete.", v116, 2u);
        v70 = v119;
LABEL_95:
        MEMORY[0x1CAA4F27C](v116, -1, -1);
      }
      else
      {
        v70 = v114;
        v114 = v119;
      }
      goto LABEL_98;
    }
    v75 = (uint64_t)v10;
    v76 = 0;
    v147 = 0;
    v139 = v131 & 0xC000000000000001;
    v123 = v131 + 32;
    v13 = MEMORY[0x1E0DEE9D8];
    LODWORD(v138) = *MEMORY[0x1E0D76F88];
    v127 = *MEMORY[0x1E0CD19C0];
    v122 = &v151;
    *((_QWORD *)&v77 + 1) = 2;
    v126 = xmmword_1CA8D4E40;
    *(_QWORD *)&v77 = 136315138;
    v121 = v77;
    v120 = MEMORY[0x1E0DEE9B8] + 8;
    v125 = v10;
    while (1)
    {
      v78 = v139 ? (_QWORD *)MEMORY[0x1CAA4DD64](v76, v131) : *(id *)(v123 + 8 * v76);
      v6 = v78;
      v49 = __OFADD__(v76++, 1);
      if (v49)
        break;
      v79 = objc_msgSend(v78, sel_localizedSubtitle);
      if (!v79)
        v79 = objc_msgSend(v6, sel_title);
      a1 = sub_1CA85B534();

      *(_QWORD *)v15 = 0;
      (*((void (**)(uint64_t, _QWORD, _QWORD *))v17 + 13))(v15, v138, v145);
      v80 = objc_msgSend(v6, sel_uuid);
      if (v80)
      {
        v81 = v80;
        v137 = a1;
        v146 = v76;
        a1 = sub_1CA85B534();
        v144 = v82;

        v15 = (uint64_t)objc_msgSend(v129, sel_librarySpecificFetchOptions);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1ED872760);
        v83 = swift_allocObject();
        *(_OWORD *)(v83 + 16) = v126;
        *(_QWORD *)(v83 + 32) = sub_1CA85B534();
        *(_QWORD *)(v83 + 40) = v84;
        v10 = MEMORY[0x1E0DEA968];
        v85 = (void *)sub_1CA85B798();
        swift_bridgeObjectRelease();
        objc_msgSend((id)v15, sel_setFetchPropertySets_, v85);

        v12 = (unint64_t)objc_msgSend((id)objc_opt_self(), sel_fetchAssetsInAssetCollection_options_, v6, v15);
        v86 = (uint64_t)objc_msgSend((id)v12, sel_count);
        if (v86 < 0)
          goto LABEL_104;
        v87 = v86;
        v142 = v15;
        v143 = v6;
        v88 = (char *)(id)v12;
        v89 = v147;
        sub_1CA2D79D0(0, v87, v88);
        v91 = v90;
        v141 = v88;

        swift_bridgeObjectRetain();
        v92 = sub_1CA85B9A8();
        v150 = v92;
        v93 = *(_QWORD *)(v91 + 16);
        if (v93)
        {
          v10 = a1;
          v94 = v13;
          v95 = (uint64_t *)(v91 + 40);
          do
          {
            v97 = *(v95 - 1);
            v96 = *v95;
            swift_bridgeObjectRetain();
            sub_1CA23F448((uint64_t *)&v149, v97, v96);
            swift_bridgeObjectRelease();
            v95 += 2;
            --v93;
          }
          while (v93);
          swift_bridgeObjectRelease();
          v98 = v150;
          v17 = v128;
          v13 = v94;
          a1 = (uint64_t)v10;
        }
        else
        {
          v98 = v92;
          swift_bridgeObjectRelease();
        }
        v102 = sub_1CA2D6F48(v98, v140, (uint64_t (*)(char *, unint64_t, uint64_t, uint64_t))sub_1CA2D70D4);
        swift_bridgeObjectRelease();
        v103 = sub_1CA243494(v102);
        swift_release();
        v149 = v103;
        swift_retain();
        sub_1CA2D63FC((uint64_t *)&v149);
        v15 = (uint64_t)v136;
        v104 = v144;
        if (v89)
          goto LABEL_107;
        v147 = 0;
        swift_release();
        if (v149[2].isa)
        {
          (*((void (**)(char *, uint64_t, _QWORD *))v17 + 2))(v124, v15, v145);
          v105 = v132;
          sub_1CA85ADB4();
          (*(void (**)(char *, char *, NSObject *))(v134 + 16))(v133, v105, v135);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v13 = sub_1CA26D300(0, *(_QWORD *)(v13 + 16) + 1, 1, v13);
          a1 = (uint64_t)v125;
          v106 = v141;
          v76 = v146;
          v12 = *(_QWORD *)(v13 + 16);
          v107 = *(_QWORD *)(v13 + 24);
          if (v12 >= v107 >> 1)
            v13 = sub_1CA26D300(v107 > 1, v12 + 1, 1, v13);
          *(_QWORD *)(v13 + 16) = v12 + 1;
          v108 = v134;
          v10 = v135;
          (*(void (**)(unint64_t, char *, NSObject *))(v134 + 32))(v13+ ((*(unsigned __int8 *)(v108 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v108 + 80))+ *(_QWORD *)(v134 + 72) * v12, v133, v135);

          (*(void (**)(char *, NSObject *))(v108 + 8))(v132, v10);
          (*((void (**)(uint64_t, _QWORD *))v17 + 1))(v15, v145);
          v75 = a1;
        }
        else
        {
          swift_release();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRetain();
          v12 = v130;
          v109 = sub_1CA85B330();
          v110 = sub_1CA85BAE0();
          if (os_log_type_enabled(v109, v110))
          {
            v12 = swift_slowAlloc();
            v111 = swift_slowAlloc();
            v137 = v13;
            v112 = v111;
            v149 = v111;
            *(_DWORD *)v12 = v121;
            v10 = (v12 + 4);
            swift_bridgeObjectRetain();
            v150 = sub_1CA28712C(a1, v104, (uint64_t *)&v149);
            v17 = v128;
            sub_1CA85BCF0();
            swift_bridgeObjectRelease_n();
            _os_log_impl(&dword_1CA237000, v109, v110, "No assets in trip highlight overlapping with query token assets for highlight %s!", (uint8_t *)v12, 0xCu);
            swift_arrayDestroy();
            v113 = v112;
            v13 = v137;
            MEMORY[0x1CAA4F27C](v113, -1, -1);
            MEMORY[0x1CAA4F27C](v12, -1, -1);

          }
          else
          {

            swift_bridgeObjectRelease_n();
          }

          (*((void (**)(uint64_t, _QWORD *))v17 + 1))(v15, v145);
          v75 = (uint64_t)v125;
          v76 = v146;
        }
      }
      else
      {
        swift_bridgeObjectRelease();
        v10 = sub_1CA85B330();
        v99 = sub_1CA85BAE0();
        v12 = v99;
        if (os_log_type_enabled(v10, v99))
        {
          a1 = (uint64_t)v6;
          v100 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v100 = 0;
          _os_log_impl(&dword_1CA237000, v10, (os_log_type_t)v12, "Cannot get trip UUID from highlight!", v100, 2u);
          v101 = v100;
          v6 = (_QWORD *)a1;
          MEMORY[0x1CAA4F27C](v101, -1, -1);
        }

        (*((void (**)(uint64_t, _QWORD *))v17 + 1))(v15, v145);
      }
      if (v76 == v75)
        goto LABEL_93;
    }
LABEL_102:
    __break(1u);
LABEL_103:
    __break(1u);
LABEL_104:
    __break(1u);
LABEL_105:
    swift_once();
  }
  v12 = a1 + ((*((unsigned __int8 *)v143 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v143 + 80));
  v38 = *((_QWORD *)v143 + 9);
  v17 = (char *)a1;
  swift_bridgeObjectRetain();
  v39 = MEMORY[0x1E0DEE9D8];
  while (1)
  {
    v40 = sub_1CA85AAC0();
    v15 = *(_QWORD *)(v40 + 16);
    v6 = *(_QWORD **)(v39 + 16);
    a1 = (uint64_t)v6 + v15;
    if (__OFADD__(v6, v15))
    {
      __break(1u);
LABEL_100:
      __break(1u);
LABEL_101:
      __break(1u);
      goto LABEL_102;
    }
    v10 = v40;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    if (!isUniquelyReferenced_nonNull_native || a1 > *(_QWORD *)(v39 + 24) >> 1)
      break;
    if (v10[2].isa)
      goto LABEL_32;
LABEL_21:
    if (v15)
      goto LABEL_100;
LABEL_22:
    swift_bridgeObjectRelease();
    v12 += v38;
    if (!--v24)
    {
      swift_bridgeObjectRelease();
      v15 = (uint64_t)v136;
      v37 = MEMORY[0x1E0DEE9D8];
      goto LABEL_43;
    }
  }
  if ((uint64_t)v6 <= a1)
    v42 = (int64_t)v6 + v15;
  else
    v42 = (int64_t)v6;
  v39 = sub_1CA26D314(isUniquelyReferenced_nonNull_native, v42, 1, v39);
  if (!v10[2].isa)
    goto LABEL_21;
LABEL_32:
  v43 = *(_QWORD *)(v39 + 16);
  if ((*(_QWORD *)(v39 + 24) >> 1) - v43 < v15)
    goto LABEL_101;
  v44 = (*(unsigned __int8 *)(v146 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v146 + 80);
  v45 = *(_QWORD *)(v146 + 72);
  v46 = v39 + v44 + v45 * v43;
  if ((unint64_t)v10 + v44 >= v46 + v45 * v15 || v46 >= (unint64_t)v10 + v44 + v45 * v15)
  {
    swift_arrayInitWithCopy();
    if (v15)
    {
      v48 = *(_QWORD *)(v39 + 16);
      v49 = __OFADD__(v48, v15);
      v50 = v48 + v15;
      if (v49)
        goto LABEL_103;
      *(_QWORD *)(v39 + 16) = v50;
    }
    goto LABEL_22;
  }
  sub_1CA85C0D4();
  __break(1u);
LABEL_107:
  result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_1CA2D63FC(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_1CA3A78F4(v2);
  v3 = *(_QWORD *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  result = sub_1CA2D6464(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_1CA2D6464(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  int v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  BOOL v39;
  unint64_t v40;
  unint64_t v41;
  char *v42;
  char *v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  BOOL v55;
  unint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  BOOL v65;
  uint64_t v66;
  char v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  BOOL v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  char *v88;
  unint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  char *v94;
  uint64_t v95;
  unint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  unint64_t v101;
  uint64_t *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *__dst;

  v3 = a1[1];
  result = sub_1CA85C254();
  if (result >= v3)
  {
    if (v3 < 0)
      goto LABEL_152;
    if (v3)
      return sub_1CA2D6B4C(0, v3, 1, a1);
    return result;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_160;
  v105 = result;
  v102 = a1;
  if (v3 < 2)
  {
    v8 = MEMORY[0x1E0DEE9D8];
    __dst = (char *)(MEMORY[0x1E0DEE9D8] + 32);
    if (v3 != 1)
    {
      v12 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
      v11 = (char *)MEMORY[0x1E0DEE9D8];
LABEL_118:
      v94 = v11;
      v104 = v8;
      if (v12 >= 2)
      {
        v95 = *v102;
        do
        {
          v96 = v12 - 2;
          if (v12 < 2)
            goto LABEL_147;
          if (!v95)
            goto LABEL_159;
          v97 = v94;
          v98 = *(_QWORD *)&v94[16 * v96 + 32];
          v99 = *(_QWORD *)&v94[16 * v12 + 24];
          sub_1CA2D6C18((char *)(v95 + 16 * v98), (char *)(v95 + 16 * *(_QWORD *)&v94[16 * v12 + 16]), v95 + 16 * v99, __dst);
          if (v1)
            break;
          if (v99 < v98)
            goto LABEL_148;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v97 = sub_1CA3A78E0((uint64_t)v97);
          if (v96 >= *((_QWORD *)v97 + 2))
            goto LABEL_149;
          v100 = &v97[16 * v96 + 32];
          *(_QWORD *)v100 = v98;
          *((_QWORD *)v100 + 1) = v99;
          v101 = *((_QWORD *)v97 + 2);
          if (v12 > v101)
            goto LABEL_150;
          memmove(&v97[16 * v12 + 16], &v97[16 * v12 + 32], 16 * (v101 - v12));
          v94 = v97;
          *((_QWORD *)v97 + 2) = v101 - 1;
          v12 = v101 - 1;
        }
        while (v101 > 2);
      }
LABEL_115:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v104 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    v104 = MEMORY[0x1E0DEE9D8];
  }
  else
  {
    v6 = v5 >> 1;
    v7 = sub_1CA85B81C();
    *(_QWORD *)(v7 + 16) = v6;
    v104 = v7;
    __dst = (char *)(v7 + 32);
  }
  v9 = 0;
  v10 = *a1;
  v103 = v10 + 8;
  v11 = (char *)MEMORY[0x1E0DEE9D8];
  v106 = v3;
  while (1)
  {
    v13 = v9++;
    if (v9 >= v3)
      goto LABEL_46;
    v14 = (uint64_t *)(v10 + 16 * v9);
    v15 = *v14;
    v16 = v14[1];
    v17 = (_QWORD *)(v10 + 16 * v13);
    if (v15 == *v17 && v16 == v17[1])
    {
      v20 = v13 + 2;
      if (v13 + 2 >= v3)
        goto LABEL_45;
      v19 = 0;
    }
    else
    {
      v19 = sub_1CA85C284();
      v20 = v13 + 2;
      if (v13 + 2 >= v3)
        goto LABEL_36;
    }
    v21 = (_QWORD *)(v103 + 16 * v20);
    do
    {
      v23 = (_QWORD *)(v10 + 16 * v9);
      if (*(v21 - 1) == *v23 && *v21 == v23[1])
      {
        if ((v19 & 1) != 0)
          goto LABEL_37;
      }
      else if (((v19 ^ sub_1CA85C284()) & 1) != 0)
      {
        goto LABEL_36;
      }
      v21 += 2;
      v22 = v20 + 1;
      v9 = v20;
      v20 = v22;
    }
    while (v22 < v3);
    v20 = v22;
LABEL_36:
    v9 = v20;
    if ((v19 & 1) != 0)
    {
LABEL_37:
      if (v20 < v13)
        goto LABEL_155;
      if (v13 < v20)
      {
        v25 = 16 * v20;
        v26 = 16 * v13;
        v27 = v20;
        v28 = v13;
        do
        {
          if (v28 != --v27)
          {
            if (!v10)
              goto LABEL_158;
            v29 = v10 + v25;
            v30 = *(_QWORD *)(v10 + v26);
            v31 = *(_QWORD *)(v10 + v26 + 8);
            *(_OWORD *)(v10 + v26) = *(_OWORD *)(v10 + v25 - 16);
            *(_QWORD *)(v29 - 16) = v30;
            *(_QWORD *)(v29 - 8) = v31;
          }
          ++v28;
          v25 -= 16;
          v26 += 16;
        }
        while (v28 < v27);
      }
LABEL_45:
      v9 = v20;
    }
LABEL_46:
    if (v9 < v3)
    {
      if (__OFSUB__(v9, v13))
        goto LABEL_151;
      if (v9 - v13 < v105)
        break;
    }
LABEL_67:
    if (v9 < v13)
      goto LABEL_146;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v11 = sub_1CA3A7130(0, *((_QWORD *)v11 + 2) + 1, 1, v11);
    v41 = *((_QWORD *)v11 + 2);
    v40 = *((_QWORD *)v11 + 3);
    v12 = v41 + 1;
    if (v41 >= v40 >> 1)
      v11 = sub_1CA3A7130((char *)(v40 > 1), v41 + 1, 1, v11);
    *((_QWORD *)v11 + 2) = v12;
    v42 = v11 + 32;
    v43 = &v11[16 * v41 + 32];
    *(_QWORD *)v43 = v13;
    *((_QWORD *)v43 + 1) = v9;
    if (v41)
    {
      v107 = v9;
      while (1)
      {
        v44 = v12 - 1;
        if (v12 >= 4)
        {
          v49 = &v42[16 * v12];
          v50 = *((_QWORD *)v49 - 8);
          v51 = *((_QWORD *)v49 - 7);
          v55 = __OFSUB__(v51, v50);
          v52 = v51 - v50;
          if (v55)
            goto LABEL_135;
          v54 = *((_QWORD *)v49 - 6);
          v53 = *((_QWORD *)v49 - 5);
          v55 = __OFSUB__(v53, v54);
          v47 = v53 - v54;
          v48 = v55;
          if (v55)
            goto LABEL_136;
          v56 = v12 - 2;
          v57 = &v42[16 * v12 - 32];
          v59 = *(_QWORD *)v57;
          v58 = *((_QWORD *)v57 + 1);
          v55 = __OFSUB__(v58, v59);
          v60 = v58 - v59;
          if (v55)
            goto LABEL_138;
          v55 = __OFADD__(v47, v60);
          v61 = v47 + v60;
          if (v55)
            goto LABEL_141;
          if (v61 >= v52)
          {
            v79 = &v42[16 * v44];
            v81 = *(_QWORD *)v79;
            v80 = *((_QWORD *)v79 + 1);
            v55 = __OFSUB__(v80, v81);
            v82 = v80 - v81;
            if (v55)
              goto LABEL_145;
            v72 = v47 < v82;
            goto LABEL_105;
          }
        }
        else
        {
          if (v12 != 3)
          {
            v73 = *((_QWORD *)v11 + 4);
            v74 = *((_QWORD *)v11 + 5);
            v55 = __OFSUB__(v74, v73);
            v66 = v74 - v73;
            v67 = v55;
            goto LABEL_99;
          }
          v46 = *((_QWORD *)v11 + 4);
          v45 = *((_QWORD *)v11 + 5);
          v55 = __OFSUB__(v45, v46);
          v47 = v45 - v46;
          v48 = v55;
        }
        if ((v48 & 1) != 0)
          goto LABEL_137;
        v56 = v12 - 2;
        v62 = &v42[16 * v12 - 32];
        v64 = *(_QWORD *)v62;
        v63 = *((_QWORD *)v62 + 1);
        v65 = __OFSUB__(v63, v64);
        v66 = v63 - v64;
        v67 = v65;
        if (v65)
          goto LABEL_140;
        v68 = &v42[16 * v44];
        v70 = *(_QWORD *)v68;
        v69 = *((_QWORD *)v68 + 1);
        v55 = __OFSUB__(v69, v70);
        v71 = v69 - v70;
        if (v55)
          goto LABEL_143;
        if (__OFADD__(v66, v71))
          goto LABEL_144;
        if (v66 + v71 >= v47)
        {
          v72 = v47 < v71;
LABEL_105:
          if (v72)
            v44 = v56;
          goto LABEL_107;
        }
LABEL_99:
        if ((v67 & 1) != 0)
          goto LABEL_139;
        v75 = &v42[16 * v44];
        v77 = *(_QWORD *)v75;
        v76 = *((_QWORD *)v75 + 1);
        v55 = __OFSUB__(v76, v77);
        v78 = v76 - v77;
        if (v55)
          goto LABEL_142;
        if (v78 < v66)
          goto LABEL_15;
LABEL_107:
        v83 = v44 - 1;
        if (v44 - 1 >= v12)
        {
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
          goto LABEL_154;
        }
        v84 = v10;
        if (!v10)
          goto LABEL_157;
        v85 = v11;
        v86 = &v42[16 * v83];
        v87 = *(_QWORD *)v86;
        v88 = v42;
        v89 = v44;
        v90 = &v42[16 * v44];
        v91 = *((_QWORD *)v90 + 1);
        v92 = v84;
        sub_1CA2D6C18((char *)(v84 + 16 * *(_QWORD *)v86), (char *)(v84 + 16 * *(_QWORD *)v90), v84 + 16 * v91, __dst);
        if (v1)
          goto LABEL_115;
        if (v91 < v87)
          goto LABEL_132;
        if (v89 > *((_QWORD *)v85 + 2))
          goto LABEL_133;
        *(_QWORD *)v86 = v87;
        *(_QWORD *)&v88[16 * v83 + 8] = v91;
        v93 = *((_QWORD *)v85 + 2);
        if (v89 >= v93)
          goto LABEL_134;
        v11 = v85;
        v12 = v93 - 1;
        memmove(v90, v90 + 16, 16 * (v93 - 1 - v89));
        v42 = v88;
        *((_QWORD *)v85 + 2) = v93 - 1;
        v10 = v92;
        v9 = v107;
        if (v93 <= 2)
          goto LABEL_15;
      }
    }
    v12 = 1;
LABEL_15:
    v3 = v106;
    if (v9 >= v106)
    {
      v8 = v104;
      goto LABEL_118;
    }
  }
  if (__OFADD__(v13, v105))
    goto LABEL_153;
  if (v13 + v105 >= v3)
    v32 = v3;
  else
    v32 = v13 + v105;
  if (v32 >= v13)
  {
    if (v9 != v32)
    {
      v33 = (_QWORD *)(v10 + 16 * v9);
      do
      {
        v34 = (uint64_t *)(v10 + 16 * v9);
        v35 = *v34;
        v36 = v34[1];
        v37 = v13;
        v38 = v33;
        do
        {
          v39 = v35 == *(v38 - 2) && v36 == *(v38 - 1);
          if (v39 || (sub_1CA85C284() & 1) == 0)
            break;
          if (!v10)
            goto LABEL_156;
          v35 = *v38;
          v36 = v38[1];
          *(_OWORD *)v38 = *((_OWORD *)v38 - 1);
          *(v38 - 1) = v36;
          *(v38 - 2) = v35;
          v38 -= 2;
          ++v37;
        }
        while (v9 != v37);
        ++v9;
        v33 += 2;
      }
      while (v9 != v32);
      v9 = v32;
    }
    goto LABEL_67;
  }
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  __break(1u);
LABEL_159:
  __break(1u);
LABEL_160:
  result = sub_1CA85C038();
  __break(1u);
  return result;
}

uint64_t sub_1CA2D6B4C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  BOOL v13;

  if (a3 != a2)
  {
    v4 = a3;
    v6 = result;
    v7 = *a4;
    v8 = *a4 + 16 * a3;
LABEL_5:
    v9 = (uint64_t *)(v7 + 16 * v4);
    result = *v9;
    v10 = v9[1];
    v11 = v6;
    v12 = (uint64_t *)v8;
    while (1)
    {
      v13 = result == *(v12 - 2) && v10 == *(v12 - 1);
      if (v13 || (result = sub_1CA85C284(), (result & 1) == 0))
      {
LABEL_4:
        ++v4;
        v8 += 16;
        if (v4 == a2)
          return result;
        goto LABEL_5;
      }
      if (!v7)
        break;
      result = *v12;
      v10 = v12[1];
      *(_OWORD *)v12 = *((_OWORD *)v12 - 1);
      *(v12 - 1) = v10;
      *(v12 - 2) = result;
      v12 -= 2;
      if (v4 == ++v11)
        goto LABEL_4;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1CA2D6C18(char *__src, char *a2, unint64_t a3, char *__dst)
{
  char *v4;
  char *v6;
  char *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  BOOL v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t result;
  char *v25;
  char *v26;
  char *v27;

  v4 = __dst;
  v6 = a2;
  v7 = __src;
  v8 = a2 - __src;
  v9 = a2 - __src + 15;
  if (a2 - __src >= 0)
    v9 = a2 - __src;
  v10 = v9 >> 4;
  v11 = a3 - (_QWORD)a2;
  v12 = a3 - (_QWORD)a2 + 15;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v12 = a3 - (_QWORD)a2;
  v13 = v12 >> 4;
  v27 = __src;
  v26 = __dst;
  if (v10 >= v12 >> 4)
  {
    if (v11 >= -15)
    {
      if (__dst != a2 || &a2[16 * v13] <= __dst)
        memmove(__dst, a2, 16 * v13);
      v17 = &v4[16 * v13];
      v25 = v17;
      v27 = v6;
      if (v7 < v6 && v11 >= 16)
      {
        v18 = (char *)(a3 - 16);
        v19 = v6;
        while (1)
        {
          v20 = v18 + 16;
          v21 = *((_QWORD *)v19 - 2);
          v22 = *((_QWORD *)v19 - 1);
          v19 -= 16;
          v23 = *((_QWORD *)v17 - 2) == v21 && *((_QWORD *)v17 - 1) == v22;
          if (v23 || (sub_1CA85C284() & 1) == 0)
          {
            v25 = v17 - 16;
            if (v20 < v17 || v18 >= v17 || v20 != v17)
              *(_OWORD *)v18 = *((_OWORD *)v17 - 1);
            v19 = v6;
            v17 -= 16;
            if (v6 <= v7)
              goto LABEL_50;
          }
          else
          {
            if (v20 != v6 || v18 >= v6)
              *(_OWORD *)v18 = *(_OWORD *)v19;
            v27 = v19;
            if (v19 <= v7)
              goto LABEL_50;
          }
          v18 -= 16;
          v6 = v19;
          if (v17 <= v4)
            goto LABEL_50;
        }
      }
      goto LABEL_50;
    }
  }
  else if (v8 >= -15)
  {
    if (__dst != __src || &__src[16 * v10] <= __dst)
      memmove(__dst, __src, 16 * v10);
    v14 = &v4[16 * v10];
    v25 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 16)
    {
      do
      {
        v15 = *(_QWORD *)v6 == *(_QWORD *)v4 && *((_QWORD *)v6 + 1) == *((_QWORD *)v4 + 1);
        if (v15 || (sub_1CA85C284() & 1) == 0)
        {
          if (v7 != v4)
            *(_OWORD *)v7 = *(_OWORD *)v4;
          v4 += 16;
          v26 = v4;
          v16 = v6;
        }
        else
        {
          v16 = v6 + 16;
          if (v7 < v6 || v7 >= v16 || v7 != v6)
            *(_OWORD *)v7 = *(_OWORD *)v6;
        }
        v7 += 16;
        if (v4 >= v14)
          break;
        v6 = v16;
      }
      while ((unint64_t)v16 < a3);
      v27 = v7;
    }
LABEL_50:
    sub_1CA3A7228((void **)&v27, (const void **)&v26, &v25);
    return 1;
  }
  result = sub_1CA85C0D4();
  __break(1u);
  return result;
}

uint64_t sub_1CA2D6EB0(uint64_t a1, uint64_t a2)
{
  return sub_1CA2D6F48(a1, a2, (uint64_t (*)(char *, unint64_t, uint64_t, uint64_t))sub_1CA2D70D4);
}

uint64_t sub_1CA2D6EFC(uint64_t a1, uint64_t a2)
{
  return sub_1CA2D6F48(a1, a2, (uint64_t (*)(char *, unint64_t, uint64_t, uint64_t))sub_1CA2D7610);
}

uint64_t sub_1CA2D6F48(uint64_t isStackAllocationSafe, uint64_t a2, uint64_t (*a3)(char *, unint64_t, uint64_t, uint64_t))
{
  uint64_t v5;
  char v6;
  unint64_t v7;
  size_t v8;
  uint64_t v9;
  void *v10;
  _QWORD v12[2];

  v5 = isStackAllocationSafe;
  v12[1] = *MEMORY[0x1E0C80C00];
  v6 = *(_BYTE *)(a2 + 32);
  v7 = (unint64_t)((1 << v6) + 63) >> 6;
  v8 = 8 * v7;
  if ((v6 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1E0C80A78](isStackAllocationSafe);
    bzero((char *)v12 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0), v8);
    v9 = a3((char *)v12 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0), v7, a2, v5);
    swift_release();
  }
  else
  {
    v10 = (void *)swift_slowAlloc();
    bzero(v10, v8);
    v9 = a3((char *)v10, v7, a2, v5);
    swift_release();
    MEMORY[0x1CAA4F27C](v10, -1, -1);
  }
  return v9;
}

uint64_t sub_1CA2D70D4(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  BOOL v27;
  uint64_t v28;
  unint64_t i;
  unint64_t v30;
  _QWORD *v31;
  BOOL v32;
  BOOL v33;
  int64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  int64_t v41;
  unint64_t v42;
  int64_t v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  BOOL v52;
  uint64_t v53;
  _QWORD *v54;
  BOOL v55;
  unint64_t *v57;
  uint64_t v58;
  int64_t v59;
  uint64_t v60;
  uint64_t v61;
  int64_t v62;
  int64_t v63;

  v4 = a4;
  v5 = a3;
  v57 = (unint64_t *)result;
  if (*(_QWORD *)(a4 + 16) < *(_QWORD *)(a3 + 16))
  {
    v6 = 0;
    v58 = a4 + 56;
    v7 = 1 << *(_BYTE *)(a4 + 32);
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v9 = v8 & *(_QWORD *)(a4 + 56);
    v59 = (unint64_t)(v7 + 63) >> 6;
    v61 = 0;
    v10 = a3 + 56;
    while (1)
    {
      while (1)
      {
        if (v9)
        {
          v11 = __clz(__rbit64(v9));
          v9 &= v9 - 1;
          v62 = v6;
          v12 = v11 | (v6 << 6);
        }
        else
        {
          v13 = v6 + 1;
          if (__OFADD__(v6, 1))
          {
            __break(1u);
            goto LABEL_81;
          }
          if (v13 >= v59)
            goto LABEL_79;
          v14 = *(_QWORD *)(v58 + 8 * v13);
          v15 = v6 + 1;
          if (!v14)
          {
            v15 = v6 + 2;
            if (v6 + 2 >= v59)
              goto LABEL_79;
            v14 = *(_QWORD *)(v58 + 8 * v15);
            if (!v14)
            {
              v15 = v6 + 3;
              if (v6 + 3 >= v59)
                goto LABEL_79;
              v14 = *(_QWORD *)(v58 + 8 * v15);
              if (!v14)
              {
                v16 = v6 + 4;
                if (v6 + 4 >= v59)
                  goto LABEL_79;
                v14 = *(_QWORD *)(v58 + 8 * v16);
                if (!v14)
                {
                  while (1)
                  {
                    v15 = v16 + 1;
                    if (__OFADD__(v16, 1))
                      goto LABEL_83;
                    if (v15 >= v59)
                      goto LABEL_79;
                    v14 = *(_QWORD *)(v58 + 8 * v15);
                    ++v16;
                    if (v14)
                      goto LABEL_22;
                  }
                }
                v15 = v6 + 4;
              }
            }
          }
LABEL_22:
          v9 = (v14 - 1) & v14;
          v62 = v15;
          v12 = __clz(__rbit64(v14)) + (v15 << 6);
        }
        v17 = (uint64_t *)(*(_QWORD *)(v4 + 48) + 16 * v12);
        v19 = *v17;
        v18 = v17[1];
        sub_1CA85C368();
        swift_bridgeObjectRetain();
        sub_1CA85B4B0();
        v20 = sub_1CA85C3B0();
        v21 = -1 << *(_BYTE *)(v5 + 32);
        v22 = v20 & ~v21;
        v23 = v22 >> 6;
        v24 = 1 << v22;
        if (((1 << v22) & *(_QWORD *)(v10 + 8 * (v22 >> 6))) != 0)
          break;
LABEL_6:
        result = swift_bridgeObjectRelease();
        v6 = v62;
        v5 = a3;
        v4 = a4;
      }
      v25 = *(_QWORD *)(a3 + 48);
      v26 = (_QWORD *)(v25 + 16 * v22);
      v27 = *v26 == v19 && v26[1] == v18;
      if (!v27 && (sub_1CA85C284() & 1) == 0)
      {
        v28 = ~v21;
        for (i = v22 + 1; ; i = v30 + 1)
        {
          v30 = i & v28;
          if (((*(_QWORD *)(v10 + (((i & v28) >> 3) & 0xFFFFFFFFFFFFF8)) >> (i & v28)) & 1) == 0)
            break;
          v31 = (_QWORD *)(v25 + 16 * v30);
          v32 = *v31 == v19 && v31[1] == v18;
          if (v32 || (sub_1CA85C284() & 1) != 0)
          {
            result = swift_bridgeObjectRelease();
            v23 = v30 >> 6;
            v24 = 1 << v30;
            goto LABEL_38;
          }
        }
        goto LABEL_6;
      }
      result = swift_bridgeObjectRelease();
LABEL_38:
      v6 = v62;
      v5 = a3;
      v57[v23] |= v24;
      v33 = __OFADD__(v61++, 1);
      v4 = a4;
      if (v33)
        goto LABEL_82;
    }
  }
  v34 = 0;
  v60 = a3 + 56;
  v61 = 0;
  v35 = 1 << *(_BYTE *)(a3 + 32);
  if (v35 < 64)
    v36 = ~(-1 << v35);
  else
    v36 = -1;
  v37 = v36 & *(_QWORD *)(a3 + 56);
  v63 = (unint64_t)(v35 + 63) >> 6;
  v38 = a4 + 56;
  while (1)
  {
    if (v37)
    {
      v39 = __clz(__rbit64(v37));
      v37 &= v37 - 1;
      v40 = v39 | (v34 << 6);
      goto LABEL_63;
    }
    v41 = v34 + 1;
    if (__OFADD__(v34, 1))
    {
LABEL_81:
      __break(1u);
LABEL_82:
      __break(1u);
LABEL_83:
      __break(1u);
      goto LABEL_84;
    }
    if (v41 >= v63)
      goto LABEL_79;
    v42 = *(_QWORD *)(v60 + 8 * v41);
    ++v34;
    if (!v42)
    {
      v34 = v41 + 1;
      if (v41 + 1 >= v63)
        goto LABEL_79;
      v42 = *(_QWORD *)(v60 + 8 * v34);
      if (!v42)
      {
        v34 = v41 + 2;
        if (v41 + 2 >= v63)
          goto LABEL_79;
        v42 = *(_QWORD *)(v60 + 8 * v34);
        if (!v42)
          break;
      }
    }
LABEL_62:
    v37 = (v42 - 1) & v42;
    v40 = __clz(__rbit64(v42)) + (v34 << 6);
LABEL_63:
    v44 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v40);
    v46 = *v44;
    v45 = v44[1];
    sub_1CA85C368();
    swift_bridgeObjectRetain();
    sub_1CA85B4B0();
    v47 = sub_1CA85C3B0();
    v48 = -1 << *(_BYTE *)(v4 + 32);
    v49 = v47 & ~v48;
    if (((*(_QWORD *)(v38 + ((v49 >> 3) & 0xFFFFFFFFFFFFF8)) >> v49) & 1) == 0)
      goto LABEL_46;
    v50 = *(_QWORD *)(a4 + 48);
    v51 = (_QWORD *)(v50 + 16 * v49);
    v52 = *v51 == v46 && v51[1] == v45;
    if (v52 || (sub_1CA85C284() & 1) != 0)
    {
LABEL_76:
      result = swift_bridgeObjectRelease();
      *(unint64_t *)((char *)v57 + ((v40 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v40;
      v33 = __OFADD__(v61++, 1);
      v5 = a3;
      v4 = a4;
      if (v33)
      {
        __break(1u);
LABEL_79:
        swift_retain();
        return sub_1CA3CD858(v57, a2, v61, v5);
      }
    }
    else
    {
      v53 = ~v48;
      while (1)
      {
        v49 = (v49 + 1) & v53;
        if (((*(_QWORD *)(v38 + ((v49 >> 3) & 0xFFFFFFFFFFFFF8)) >> v49) & 1) == 0)
          break;
        v54 = (_QWORD *)(v50 + 16 * v49);
        v55 = *v54 == v46 && v54[1] == v45;
        if (v55 || (sub_1CA85C284() & 1) != 0)
          goto LABEL_76;
      }
LABEL_46:
      result = swift_bridgeObjectRelease();
      v5 = a3;
      v4 = a4;
    }
  }
  v43 = v41 + 3;
  if (v43 >= v63)
    goto LABEL_79;
  v42 = *(_QWORD *)(v60 + 8 * v43);
  if (v42)
  {
    v34 = v43;
    goto LABEL_62;
  }
  while (1)
  {
    v34 = v43 + 1;
    if (__OFADD__(v43, 1))
      break;
    if (v34 >= v63)
      goto LABEL_79;
    v42 = *(_QWORD *)(v60 + 8 * v34);
    ++v43;
    if (v42)
      goto LABEL_62;
  }
LABEL_84:
  __break(1u);
  return result;
}

uint64_t sub_1CA2D7610(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t i;
  unint64_t v26;
  BOOL v27;
  int64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  int64_t v36;
  unint64_t v37;
  int64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t *v45;
  int64_t v46;

  v45 = (unint64_t *)result;
  v6 = 0;
  if (*(_QWORD *)(a4 + 16) < *(_QWORD *)(a3 + 16))
  {
    v7 = 0;
    v8 = a4 + 56;
    v9 = 1 << *(_BYTE *)(a4 + 32);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(a4 + 56);
    v12 = (unint64_t)(v9 + 63) >> 6;
    v13 = a3 + 56;
    while (1)
    {
LABEL_6:
      if (v11)
      {
        v14 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v15 = v14 | (v7 << 6);
      }
      else
      {
        v16 = v7 + 1;
        if (__OFADD__(v7, 1))
        {
          __break(1u);
LABEL_62:
          __break(1u);
          goto LABEL_63;
        }
        if (v16 >= v12)
          goto LABEL_60;
        v17 = *(_QWORD *)(v8 + 8 * v16);
        ++v7;
        if (!v17)
        {
          v7 = v16 + 1;
          if (v16 + 1 >= v12)
            goto LABEL_60;
          v17 = *(_QWORD *)(v8 + 8 * v7);
          if (!v17)
          {
            v7 = v16 + 2;
            if (v16 + 2 >= v12)
              goto LABEL_60;
            v17 = *(_QWORD *)(v8 + 8 * v7);
            if (!v17)
            {
              v18 = v16 + 3;
              if (v18 >= v12)
              {
LABEL_60:
                swift_retain();
                return sub_1CA3CDAEC(v45, a2, v6, a3);
              }
              v17 = *(_QWORD *)(v8 + 8 * v18);
              if (!v17)
              {
                while (1)
                {
                  v7 = v18 + 1;
                  if (__OFADD__(v18, 1))
                    break;
                  if (v7 >= v12)
                    goto LABEL_60;
                  v17 = *(_QWORD *)(v8 + 8 * v7);
                  ++v18;
                  if (v17)
                    goto LABEL_21;
                }
LABEL_63:
                __break(1u);
                goto LABEL_64;
              }
              v7 = v18;
            }
          }
        }
LABEL_21:
        v11 = (v17 - 1) & v17;
        v15 = __clz(__rbit64(v17)) + (v7 << 6);
      }
      v19 = *(_QWORD *)(*(_QWORD *)(a4 + 48) + 8 * v15);
      result = sub_1CA85C35C();
      v20 = -1 << *(_BYTE *)(a3 + 32);
      v21 = result & ~v20;
      v22 = v21 >> 6;
      v23 = 1 << v21;
      if (((1 << v21) & *(_QWORD *)(v13 + 8 * (v21 >> 6))) != 0)
      {
        v24 = *(_QWORD *)(a3 + 48);
        if (*(_QWORD *)(v24 + 8 * v21) != v19)
        {
          for (i = v21 + 1; ; i = v26 + 1)
          {
            v26 = i & ~v20;
            if (((*(_QWORD *)(v13 + ((v26 >> 3) & 0xFFFFFFFFFFFFF8)) >> v26) & 1) == 0)
              goto LABEL_6;
            if (*(_QWORD *)(v24 + 8 * v26) == v19)
              break;
          }
          v22 = v26 >> 6;
          v23 = 1 << v26;
        }
        v45[v22] |= v23;
        v27 = __OFADD__(v6++, 1);
        if (v27)
          break;
      }
    }
    __break(1u);
  }
  v28 = 0;
  v29 = a3 + 56;
  v30 = 1 << *(_BYTE *)(a3 + 32);
  if (v30 < 64)
    v31 = ~(-1 << v30);
  else
    v31 = -1;
  v32 = v31 & *(_QWORD *)(a3 + 56);
  v46 = (unint64_t)(v30 + 63) >> 6;
  v33 = a4 + 56;
  while (v32)
  {
    v34 = __clz(__rbit64(v32));
    v32 &= v32 - 1;
    v35 = v34 | (v28 << 6);
LABEL_52:
    v39 = *(_QWORD *)(*(_QWORD *)(a3 + 48) + 8 * v35);
    result = sub_1CA85C35C();
    v40 = -1 << *(_BYTE *)(a4 + 32);
    v41 = result & ~v40;
    if (((*(_QWORD *)(v33 + ((v41 >> 3) & 0xFFFFFFFFFFFFF8)) >> v41) & 1) != 0)
    {
      v42 = *(_QWORD *)(a4 + 48);
      if (*(_QWORD *)(v42 + 8 * v41) == v39)
      {
LABEL_57:
        *(unint64_t *)((char *)v45 + ((v35 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v35;
        v27 = __OFADD__(v6++, 1);
        if (v27)
        {
          __break(1u);
          goto LABEL_60;
        }
      }
      else
      {
        v43 = ~v40;
        while (1)
        {
          v41 = (v41 + 1) & v43;
          if (((*(_QWORD *)(v33 + ((v41 >> 3) & 0xFFFFFFFFFFFFF8)) >> v41) & 1) == 0)
            break;
          if (*(_QWORD *)(v42 + 8 * v41) == v39)
            goto LABEL_57;
        }
      }
    }
  }
  v36 = v28 + 1;
  if (__OFADD__(v28, 1))
    goto LABEL_62;
  if (v36 >= v46)
    goto LABEL_60;
  v37 = *(_QWORD *)(v29 + 8 * v36);
  ++v28;
  if (v37)
    goto LABEL_51;
  v28 = v36 + 1;
  if (v36 + 1 >= v46)
    goto LABEL_60;
  v37 = *(_QWORD *)(v29 + 8 * v28);
  if (v37)
    goto LABEL_51;
  v28 = v36 + 2;
  if (v36 + 2 >= v46)
    goto LABEL_60;
  v37 = *(_QWORD *)(v29 + 8 * v28);
  if (v37)
  {
LABEL_51:
    v32 = (v37 - 1) & v37;
    v35 = __clz(__rbit64(v37)) + (v28 << 6);
    goto LABEL_52;
  }
  v38 = v36 + 3;
  if (v38 >= v46)
    goto LABEL_60;
  v37 = *(_QWORD *)(v29 + 8 * v38);
  if (v37)
  {
    v28 = v38;
    goto LABEL_51;
  }
  while (1)
  {
    v28 = v38 + 1;
    if (__OFADD__(v38, 1))
      break;
    if (v28 >= v46)
      goto LABEL_60;
    v37 = *(_QWORD *)(v29 + 8 * v28);
    ++v38;
    if (v37)
      goto LABEL_51;
  }
LABEL_64:
  __break(1u);
  return result;
}

void sub_1CA2D79D0(uint64_t a1, uint64_t a2, id a3)
{
  uint64_t v4;
  _QWORD *v6;
  _QWORD *v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;

  if (a1 != a2)
  {
    v4 = a1;
    if (a2 >= a1)
    {
      v6 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      while (v4 < a2)
      {
        v8 = objc_msgSend(a3, sel_objectAtIndexedSubscript_, v4);
        v9 = objc_msgSend(v8, sel_uuid);

        if (v9)
        {
          v10 = sub_1CA85B534();
          v12 = v11;

          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v6 = sub_1CA26BCE4(0, v6[2] + 1, 1, v6);
          v14 = v6[2];
          v13 = v6[3];
          if (v14 >= v13 >> 1)
            v6 = sub_1CA26BCE4((_QWORD *)(v13 > 1), v14 + 1, 1, v6);
          v6[2] = v14 + 1;
          v7 = &v6[2 * v14];
          v7[4] = v10;
          v7[5] = v12;
        }
        if (a2 == ++v4)
          return;
      }
      __break(1u);
    }
    __break(1u);
  }
}

unint64_t SocialGroupsEvaluatorEventName.getter()
{
  return 0xD00000000000003BLL;
}

uint64_t SocialGroupsEvaluatorPrecisionKey.getter()
{
  return 0x6F69736963657270;
}

uint64_t SocialGroupsEvaluatorRecallKey.getter()
{
  return 0x6C6C61636572;
}

uint64_t SocialGroupsEvaluatorLibrarySizeKey.getter()
{
  return 0x5F7972617262696CLL;
}

uint64_t SocialGroupsElectedCountKey.getter()
{
  return 0x5F64657463656C65;
}

uint64_t SocialGroupsLibraryPersonsCountKey.getter()
{
  return 0x5F736E6F73726570;
}

uint64_t SocialGroupsLeqTenAssetContainmentCountKey.getter()
{
  return 808533308;
}

uint64_t SocialGroupsLeqThirtyAssetContainmentCountKey.getter()
{
  return 808664380;
}

uint64_t SocialGroupsLeqFiftyAssetContainmentCountKey.getter()
{
  return 808795452;
}

uint64_t SocialGroupsLeqOneHundredAssetContainmentCountKey.getter()
{
  return 0x3030313D3CLL;
}

uint64_t SocialGroupsGreaterThanOneHundredAssetContainmentCountKey.getter()
{
  return 808464702;
}

uint64_t DefaultTopLimitForSocialGroups.getter()
{
  return 5;
}

float SocialGroupsEvaluationMetrics.precision.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 16);
}

float SocialGroupsEvaluationMetrics.recall.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 20);
}

uint64_t SocialGroupsEvaluationMetrics.librarySize.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 24);
}

uint64_t SocialGroupsEvaluationMetrics.electedCount.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 32);
}

uint64_t SocialGroupsEvaluationMetrics.personCount.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 40);
}

uint64_t SocialGroupsEvaluationMetrics.leqTenAssetContainmentCount.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 48);
}

uint64_t SocialGroupsEvaluationMetrics.leqThirtyAssetContainmentCount.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 56);
}

uint64_t SocialGroupsEvaluationMetrics.leqFiftyAssetContainmentCount.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 64);
}

uint64_t SocialGroupsEvaluationMetrics.leqOneHundredAssetContainmentCount.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 72);
}

uint64_t SocialGroupsEvaluationMetrics.greaterThanOneHundredAssetContainmentCount.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 80);
}

uint64_t SocialGroupsEvaluationMetrics.__allocating_init(truePositives:falsePositives:trueNegatives:falseNegatives:librarySize:electedCount:personCount:leqTenAssetContainmentCount:leqThirtyAssetContainmentCount:leqFiftyAssetContainmentCount:leqOneHundredAssetContainmentCount:greaterThanOneHundredAssetContainmentCount:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, __int128 a10, uint64_t a11)
{
  swift_allocObject();
  return sub_1CA2DEF94(a1, a2, a4, a5, a6, a7, a8, a9, a10, a11);
}

uint64_t SocialGroupsEvaluationMetrics.init(truePositives:falsePositives:trueNegatives:falseNegatives:librarySize:electedCount:personCount:leqTenAssetContainmentCount:leqThirtyAssetContainmentCount:leqFiftyAssetContainmentCount:leqOneHundredAssetContainmentCount:greaterThanOneHundredAssetContainmentCount:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, __int128 a10, uint64_t a11)
{
  return sub_1CA2DEF94(a1, a2, a4, a5, a6, a7, a8, a9, a10, a11);
}

unint64_t sub_1CA2D7D5C()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  int v3;
  id v4;
  double v5;
  id v6;
  char isUniquelyReferenced_nonNull_native;
  int v8;
  id v9;
  double v10;
  id v11;
  char v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  char v28;

  v1 = v0;
  v2 = sub_1CA273F30(MEMORY[0x1E0DEE9D8]);
  v3 = *(_DWORD *)(v1 + 16);
  v4 = objc_allocWithZone(MEMORY[0x1E0CB37E8]);
  LODWORD(v5) = v3;
  v6 = objc_msgSend(v4, sel_initWithFloat_, v5);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_1CA25DA48((uint64_t)v6, 0x6F69736963657270, 0xE90000000000006ELL, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  v8 = *(_DWORD *)(v1 + 20);
  v9 = objc_allocWithZone(MEMORY[0x1E0CB37E8]);
  LODWORD(v10) = v8;
  v11 = objc_msgSend(v9, sel_initWithFloat_, v10);
  v12 = swift_isUniquelyReferenced_nonNull_native();
  sub_1CA25DA48((uint64_t)v11, 0x6C6C61636572, 0xE600000000000000, v12);
  swift_bridgeObjectRelease();
  sub_1CA24EEC0(0, (unint64_t *)&qword_1ED8723C0);
  v13 = sub_1CA85BC6C();
  v14 = swift_isUniquelyReferenced_nonNull_native();
  sub_1CA25DA48(v13, 0x5F7972617262696CLL, 0xEC000000657A6973, v14);
  swift_bridgeObjectRelease();
  v15 = sub_1CA85BC6C();
  v16 = swift_isUniquelyReferenced_nonNull_native();
  sub_1CA25DA48(v15, 0x5F64657463656C65, 0xED0000746E756F63, v16);
  swift_bridgeObjectRelease();
  v17 = sub_1CA85BC6C();
  v18 = swift_isUniquelyReferenced_nonNull_native();
  sub_1CA25DA48(v17, 0x5F736E6F73726570, 0xED0000746E756F63, v18);
  swift_bridgeObjectRelease();
  v19 = sub_1CA85BC6C();
  v20 = swift_isUniquelyReferenced_nonNull_native();
  sub_1CA25DA48(v19, 808533308, 0xE400000000000000, v20);
  swift_bridgeObjectRelease();
  v21 = sub_1CA85BC6C();
  v22 = swift_isUniquelyReferenced_nonNull_native();
  sub_1CA25DA48(v21, 808664380, 0xE400000000000000, v22);
  swift_bridgeObjectRelease();
  v23 = sub_1CA85BC6C();
  v24 = swift_isUniquelyReferenced_nonNull_native();
  sub_1CA25DA48(v23, 808795452, 0xE400000000000000, v24);
  swift_bridgeObjectRelease();
  v25 = sub_1CA85BC6C();
  v26 = swift_isUniquelyReferenced_nonNull_native();
  sub_1CA25DA48(v25, 0x3030313D3CLL, 0xE500000000000000, v26);
  swift_bridgeObjectRelease();
  v27 = sub_1CA85BC6C();
  v28 = swift_isUniquelyReferenced_nonNull_native();
  sub_1CA25DA48(v27, 808464702, 0xE400000000000000, v28);
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t SocialGroupsEvaluationMetrics.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t SocialGroupsEvaluationMetrics.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

unint64_t sub_1CA2D80F4()
{
  return sub_1CA2D7D5C();
}

uint64_t static SocialGroupsEvaluator.defaultNumberOfElectedSocialGroups.getter()
{
  return 100;
}

id SocialGroupsEvaluator.__allocating_init(graph:photoLibrary:)(uint64_t a1, uint64_t a2)
{
  objc_class *v2;
  char *v5;
  objc_super v7;

  v5 = (char *)objc_allocWithZone(v2);
  *(_QWORD *)&v5[OBJC_IVAR____TtC11PhotosGraph21SocialGroupsEvaluator_graph] = a1;
  *(_QWORD *)&v5[OBJC_IVAR____TtC11PhotosGraph21SocialGroupsEvaluator_photoLibrary] = a2;
  v7.receiver = v5;
  v7.super_class = v2;
  return objc_msgSendSuper2(&v7, sel_init);
}

id SocialGroupsEvaluator.init(graph:photoLibrary:)(uint64_t a1, uint64_t a2)
{
  char *v2;
  objc_class *ObjectType;
  objc_super v7;

  ObjectType = (objc_class *)swift_getObjectType();
  *(_QWORD *)&v2[OBJC_IVAR____TtC11PhotosGraph21SocialGroupsEvaluator_graph] = a1;
  *(_QWORD *)&v2[OBJC_IVAR____TtC11PhotosGraph21SocialGroupsEvaluator_photoLibrary] = a2;
  v7.receiver = v2;
  v7.super_class = ObjectType;
  return objc_msgSendSuper2(&v7, sel_init);
}

void *SocialGroupsEvaluator.evaluateSocialGroups(forTop:)(unint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *v8;
  id v9;
  id v10;
  uint64_t v11;
  void *v12;
  id v13;
  uint64_t v14;
  void *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  void *v20;
  id v21;
  void *v22;
  char *v23;
  void *v24;
  objc_class *v25;
  char *v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *result;
  uint64_t v37;
  BOOL v38;
  char *v39;
  char *v40;
  id v41;
  unint64_t v42;
  _QWORD *v43;
  _QWORD *v44;
  void *v45;
  id v46;
  unint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  id v63;
  unint64_t v64;
  void *v65;
  id v66;
  id v67;
  id v68;
  uint64_t v69;
  void *v70;
  id v71;
  id v72;
  id v73;
  __int128 v74;
  uint64_t *v75;
  id v76;
  id v77;
  uint64_t v78;
  _QWORD *v79;
  id v80;
  uint64_t v81;
  uint64_t v82;
  id v83;
  uint64_t v84;
  id v85;
  uint64_t v86;
  uint64_t v87;
  id v88;
  unint64_t v89;
  id v90;
  uint64_t v91;
  objc_super v92;
  _QWORD aBlock[7];
  uint64_t v94;

  v89 = a1;
  v2 = v1;
  v4 = sub_1CA85AFDC();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v75 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(void **)&v2[OBJC_IVAR____TtC11PhotosGraph21SocialGroupsEvaluator_photoLibrary];
  v9 = objc_msgSend(v8, sel_librarySpecificFetchOptions);
  objc_msgSend(v9, sel_setFetchLimit_, a1);
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0D77458], v4);
  sub_1CA85AFE8();
  swift_allocObject();
  v10 = v8;
  v85 = v9;
  v11 = sub_1CA85AFD0();
  sub_1CA85AE08();
  v84 = v11;
  v12 = (void *)sub_1CA85ADFC();
  v13 = objc_msgSend(v10, sel_librarySpecificFetchOptions);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED873300);
  v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_1CA8D4EA0;
  *(_QWORD *)(v14 + 32) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithShort_, 1);
  *(_QWORD *)(v14 + 40) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithShort_, 2);
  aBlock[0] = v14;
  sub_1CA85B7C8();
  sub_1CA24EEC0(0, (unint64_t *)&qword_1ED8723C0);
  v15 = (void *)sub_1CA85B798();
  swift_bridgeObjectRelease();
  objc_msgSend(v13, sel_setIncludedDetectionTypes_, v15);

  v16 = (_QWORD *)swift_allocObject();
  v17 = MEMORY[0x1E0DEE9E8];
  v16[2] = MEMORY[0x1E0DEE9E8];
  v18 = (uint64_t)(v16 + 2);
  v19 = (_QWORD *)swift_allocObject();
  v19[2] = v13;
  v19[3] = v2;
  v19[4] = v16;
  aBlock[4] = sub_1CA2DF06C;
  aBlock[5] = v19;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1CA2D8FCC;
  aBlock[3] = &block_descriptor_4;
  v20 = _Block_copy(aBlock);
  v21 = v13;
  v22 = v12;
  v83 = v21;
  v23 = v2;
  swift_retain();
  swift_release();
  objc_msgSend(v12, sel_enumerateObjectsUsingBlock_, v20);
  _Block_release(v20);
  v94 = v17;
  v24 = *(void **)&v23[OBJC_IVAR____TtC11PhotosGraph21SocialGroupsEvaluator_graph];
  v25 = (objc_class *)type metadata accessor for SocialGroupsElector();
  v26 = (char *)objc_allocWithZone(v25);
  *(_QWORD *)&v26[OBJC_IVAR___PGSocialGroupsElector_graph] = v24;
  *(_QWORD *)&v26[OBJC_IVAR___PGSocialGroupsElector_photoLibrary] = v10;
  v92.receiver = v26;
  v92.super_class = v25;
  v27 = v10;
  v28 = v24;
  v29 = objc_msgSendSuper2(&v92, sel_init);
  v30 = objc_msgSend((id)objc_opt_self(), sel_ignoreProgress);
  v31 = v90;
  v32 = SocialGroupsElector.electSocialGroups(maxNumberOfElectedSocialGroups:progressReporter:)(v89, (uint64_t)v30);
  if (v31)
  {
    swift_release();
    swift_release();

    return (void *)v18;
  }
  v33 = v32;
  v90 = v28;
  v75 = v16 + 2;
  v76 = v27;
  v77 = v29;
  v78 = 0;

  if (v33 >> 62)
    goto LABEL_51;
  v34 = *(_QWORD *)((v33 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_5:
  v35 = (uint64_t)&selRef_lastTriggeredNotificationDateWithPhotoLibrary_;
  v79 = v16;
  v80 = v22;
  if (!v34)
  {
LABEL_35:
    v81 = 0;
    v82 = 0;
    v86 = 0;
    v87 = 0;
    v37 = 0;
LABEL_36:
    swift_bridgeObjectRelease();
    v49 = v94;
    v50 = v75;
    swift_beginAccess();
    swift_bridgeObjectRetain();
    v51 = swift_bridgeObjectRetain();
    v52 = sub_1CA2D6EFC(v51, v49);
    swift_bridgeObjectRelease();
    v53 = *(_QWORD *)(v52 + 16);
    swift_release();
    v54 = *(_QWORD *)(*v50 + 16);
    v55 = *(_QWORD *)(v49 + 16);
    v89 = v53;
    if (v54 <= v55 >> 3)
    {
      v91 = v49;
      swift_bridgeObjectRetain();
      v58 = swift_bridgeObjectRetain();
      sub_1CA2DE2CC(v58);
      swift_bridgeObjectRelease();
      v57 = v91;
    }
    else
    {
      swift_bridgeObjectRetain();
      v56 = swift_bridgeObjectRetain();
      v57 = sub_1CA2D96B0(v56, v49);
      swift_bridgeObjectRelease();
    }
    v59 = *(_QWORD *)(v57 + 16);
    swift_bridgeObjectRelease();
    v60 = *v50;
    if (*(_QWORD *)(v49 + 16) <= *(_QWORD *)(*v50 + 16) >> 3)
    {
      v91 = *v50;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1CA2DE2CC(v49);
      swift_bridgeObjectRelease();
      v61 = v91;
    }
    else
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v61 = sub_1CA2D96B0(v49, v60);
      swift_bridgeObjectRelease();
    }
    v62 = *(_QWORD *)(v61 + 16);
    swift_bridgeObjectRelease();
    v63 = objc_msgSend(v90, sel_socialGroupNodesSortedByImportance);
    sub_1CA24EEC0(0, &qword_1ED872E40);
    v64 = sub_1CA85B7B0();

    if (v64 >> 62)
    {
      swift_bridgeObjectRetain();
      sub_1CA85C08C();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    v65 = (void *)objc_opt_self();
    v66 = objc_msgSend(v76, *(SEL *)(v35 + 296));
    v67 = objc_msgSend(v65, sel_fetchAssetsWithOptions_, v66);

    v68 = objc_msgSend(v67, sel_count);
    v69 = *(_QWORD *)(v49 + 16);
    swift_bridgeObjectRelease();
    v70 = (void *)objc_opt_self();
    v71 = v83;
    v72 = objc_msgSend(v70, sel_fetchPersonsWithOptions_, v83);
    v73 = objc_msgSend(v72, sel_count);

    swift_release();
    type metadata accessor for SocialGroupsEvaluationMetrics();
    swift_allocObject();
    *((_QWORD *)&v74 + 1) = v81;
    *(_QWORD *)&v74 = v86;
    v18 = sub_1CA2DEF94(v89, v59, v62, (uint64_t)v68, v69, (uint64_t)v73, v37, v87, v74, v82);
    swift_release();
    return (void *)v18;
  }
  result = (void *)objc_opt_self();
  v88 = result;
  if (v34 >= 1)
  {
    v81 = 0;
    v82 = 0;
    v86 = 0;
    v87 = 0;
    v37 = 0;
    v22 = 0;
    v89 = v33 & 0xC000000000000001;
    while (1)
    {
      if (v89)
        v39 = (char *)MEMORY[0x1CAA4DD64](v22, v33);
      else
        v39 = (char *)*(id *)(v33 + 8 * (_QWORD)v22 + 32);
      v40 = v39;
      v41 = objc_msgSend(*(id *)&v39[OBJC_IVAR___PGElectedSocialGroup_socialGroup], sel_sortedMemberNodes);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94CD20);
      v42 = sub_1CA85B7B0();

      aBlock[0] = v42;
      v43 = objc_msgSend(v90, sel_meNodeWithFallbackInferredMeNode);
      if (v43)
      {
        v16 = v43;
        if (v42 >> 62)
        {
          v48 = v43;
          swift_bridgeObjectRetain();
          v35 = sub_1CA85C08C();
          swift_bridgeObjectRelease();
          if (v35 < 1)
          {
LABEL_34:
            __break(1u);
            goto LABEL_35;
          }
        }
        else
        {
          v35 = *(_QWORD *)((v42 & 0xFFFFFFFFFFFFF8) + 0x10);
          v44 = v43;
          if (v35 < 1)
            goto LABEL_34;
        }
        sub_1CA2DDFF0(1, 1, (uint64_t)v16);

      }
      v45 = (void *)sub_1CA85B798();
      swift_bridgeObjectRelease();
      v46 = objc_msgSend(v88, sel_identifierForMemberNodes_, v45);

      sub_1CA240074(&v91, (uint64_t)v46);
      v47 = *(_QWORD *)&v40[OBJC_IVAR___PGElectedSocialGroup_assetCount];

      if ((uint64_t)v47 <= 10)
      {
        v38 = __OFADD__(v37++, 1);
        v35 = 0x1E84D7000;
        if (v38)
        {
          __break(1u);
LABEL_47:
          __break(1u);
LABEL_48:
          __break(1u);
LABEL_49:
          __break(1u);
LABEL_50:
          __break(1u);
LABEL_51:
          swift_bridgeObjectRetain();
          v34 = sub_1CA85C08C();
          swift_bridgeObjectRelease();
          goto LABEL_5;
        }
      }
      else
      {
        v35 = 0x1E84D7000;
        if (v47 <= 0x1E)
        {
          v38 = __OFADD__(v87++, 1);
          if (v38)
            goto LABEL_47;
        }
        else if (v47 <= 0x32)
        {
          v38 = __OFADD__(v86++, 1);
          if (v38)
            goto LABEL_48;
        }
        else if (v47 <= 0x64)
        {
          v38 = __OFADD__(v81++, 1);
          if (v38)
            goto LABEL_50;
        }
        else
        {
          v38 = __OFADD__(v82++, 1);
          if (v38)
            goto LABEL_49;
        }
      }
      v22 = (char *)v22 + 1;
      if ((void *)v34 == v22)
        goto LABEL_36;
    }
  }
  __break(1u);
  return result;
}

id sub_1CA2D8B68(__int16 a1)
{
  return objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithShort_, a1);
}

void sub_1CA2D8B9C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  id v9;
  id v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  id v25;
  void *v26;
  void *v27;
  void *v28;
  id v29;
  id v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v9 = objc_msgSend((id)objc_opt_self(), sel_fetchPersonsInSocialGroup_option_, a1, a4);
  v10 = objc_msgSend(v9, sel_fetchedObjects);

  if (v10)
  {
    sub_1CA24EEC0(0, (unint64_t *)&qword_1EF94B000);
    v11 = sub_1CA85B7B0();

    if (v11 >> 62)
    {
      swift_bridgeObjectRetain();
      v12 = sub_1CA85C08C();
      swift_bridgeObjectRelease();
      if (v12)
        goto LABEL_4;
    }
    else
    {
      v12 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v12)
      {
LABEL_4:
        v34 = MEMORY[0x1E0DEE9D8];
        sub_1CA3FB754(0, v12 & ~(v12 >> 63), 0);
        if (v12 < 0)
        {
          __break(1u);
          return;
        }
        v32 = a6;
        v33 = a5;
        v13 = 0;
        v14 = v34;
        do
        {
          if ((v11 & 0xC000000000000001) != 0)
            v15 = (id)MEMORY[0x1CAA4DD64](v13, v11);
          else
            v15 = *(id *)(v11 + 8 * v13 + 32);
          v16 = v15;
          v17 = objc_msgSend(v15, sel_localIdentifier, v32, v33);
          v18 = sub_1CA85B534();
          v20 = v19;

          v22 = *(_QWORD *)(v34 + 16);
          v21 = *(_QWORD *)(v34 + 24);
          if (v22 >= v21 >> 1)
            sub_1CA3FB754(v21 > 1, v22 + 1, 1);
          ++v13;
          *(_QWORD *)(v34 + 16) = v22 + 1;
          v23 = v34 + 16 * v22;
          *(_QWORD *)(v23 + 32) = v18;
          *(_QWORD *)(v23 + 40) = v20;
        }
        while (v12 != v13);
        swift_bridgeObjectRelease();
        a5 = v33;
        goto LABEL_18;
      }
    }
    swift_bridgeObjectRelease();
    v14 = MEMORY[0x1E0DEE9D8];
LABEL_18:
    sub_1CA2877D4(v14);
    swift_bridgeObjectRelease();
    v27 = (void *)objc_opt_self();
    v28 = (void *)sub_1CA85B978();
    swift_bridgeObjectRelease();
    v29 = objc_msgSend(v27, sel_memberNodesForLocalIdentifiers_inGraph_, v28, *(_QWORD *)(a5 + OBJC_IVAR____TtC11PhotosGraph21SocialGroupsEvaluator_graph));

    v30 = objc_msgSend(v29, sel_array);
    if (!v30)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94CD20);
      sub_1CA85B7B0();
      v30 = (id)sub_1CA85B798();
      swift_bridgeObjectRelease();
    }
    v31 = objc_msgSend((id)objc_opt_self(), sel_identifierForMemberNodes_, v30);

    swift_beginAccess();
    sub_1CA240074(&v35, (uint64_t)v31);
    swift_endAccess();

    return;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94CE40);
  v24 = swift_allocObject();
  *(_OWORD *)(v24 + 16) = xmmword_1CA8D4E40;
  sub_1CA85BEC4();
  swift_bridgeObjectRelease();
  v25 = objc_msgSend(a1, sel_uuid);
  if (v25)
  {
    v26 = v25;
    sub_1CA85B534();

  }
  sub_1CA85B624();
  swift_bridgeObjectRelease();
  sub_1CA85B624();
  *(_QWORD *)(v24 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v24 + 32) = 0xD000000000000029;
  *(_QWORD *)(v24 + 40) = 0x80000001CA88B0B0;
  sub_1CA85C350();
  swift_bridgeObjectRelease();
}

void sub_1CA2D8FCC(uint64_t a1, void *a2)
{
  void (*v3)(void);
  id v4;

  v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  v4 = a2;
  v3();
  swift_release();

}

uint64_t SocialGroupsEvaluator.runEvaluation(progressReporter:)()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;
  void *v3;
  void *v4;

  result = sub_1CA85BB64();
  if (!v0)
  {
    SocialGroupsEvaluator.evaluateSocialGroups(forTop:)(5uLL);
    sub_1CA85BB64();
    v2 = *(_QWORD *)(sub_1CA2D7D5C() + 16);
    swift_bridgeObjectRelease();
    if (v2)
    {
      v3 = (void *)sub_1CA85B510();
      sub_1CA2D7D5C();
      sub_1CA24EEC0(0, (unint64_t *)&qword_1ED8723E0);
      v4 = (void *)sub_1CA85B3FC();
      swift_bridgeObjectRelease();
      AnalyticsSendEvent();

    }
    sub_1CA85BB64();
    return swift_release();
  }
  return result;
}

id SocialGroupsEvaluator.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void SocialGroupsEvaluator.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id SocialGroupsEvaluator.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1CA2D9248(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  int64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  BOOL v24;
  uint64_t v25;
  _QWORD *v26;
  BOOL v27;
  uint64_t isStackAllocationSafe;
  char v29;
  unint64_t v30;
  size_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v35;
  int64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int64_t v41;
  unint64_t v42;
  uint64_t v43;

  v2 = a2;
  v43 = *MEMORY[0x1E0C80C00];
  if (*(_QWORD *)(a2 + 16))
  {
    v4 = *(_QWORD *)(a1 + 64);
    v37 = a1 + 64;
    v5 = -1 << *(_BYTE *)(a1 + 32);
    v35 = ~v5;
    if (-v5 < 64)
      v6 = ~(-1 << -(char)v5);
    else
      v6 = -1;
    v7 = v6 & v4;
    v36 = (unint64_t)(63 - v5) >> 6;
    v8 = a2 + 56;
    swift_bridgeObjectRetain();
    v9 = 0;
    while (1)
    {
      if (v7)
      {
        v10 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        v11 = v10 | (v9 << 6);
      }
      else
      {
        v12 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
          __break(1u);
          goto LABEL_49;
        }
        if (v12 >= v36)
          goto LABEL_47;
        v13 = *(_QWORD *)(v37 + 8 * v12);
        v14 = v9 + 1;
        if (!v13)
        {
          v14 = v9 + 2;
          if (v9 + 2 >= v36)
            goto LABEL_47;
          v13 = *(_QWORD *)(v37 + 8 * v14);
          if (!v13)
          {
            v14 = v9 + 3;
            if (v9 + 3 >= v36)
              goto LABEL_47;
            v13 = *(_QWORD *)(v37 + 8 * v14);
            if (!v13)
            {
              v14 = v9 + 4;
              if (v9 + 4 >= v36)
                goto LABEL_47;
              v13 = *(_QWORD *)(v37 + 8 * v14);
              if (!v13)
              {
                v15 = v9 + 5;
                if (v9 + 5 >= v36)
                {
LABEL_47:
                  sub_1CA24E6B8();
                  return v2;
                }
                v13 = *(_QWORD *)(v37 + 8 * v15);
                if (!v13)
                {
                  while (1)
                  {
                    v14 = v15 + 1;
                    if (__OFADD__(v15, 1))
                      break;
                    if (v14 >= v36)
                      goto LABEL_47;
                    v13 = *(_QWORD *)(v37 + 8 * v14);
                    ++v15;
                    if (v13)
                      goto LABEL_24;
                  }
LABEL_49:
                  __break(1u);
                }
                v14 = v9 + 5;
              }
            }
          }
        }
LABEL_24:
        v7 = (v13 - 1) & v13;
        v11 = __clz(__rbit64(v13)) + (v14 << 6);
        v9 = v14;
      }
      v16 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v11);
      v18 = *v16;
      v17 = v16[1];
      sub_1CA85C368();
      swift_bridgeObjectRetain();
      sub_1CA85B4B0();
      v19 = sub_1CA85C3B0();
      v20 = -1 << *(_BYTE *)(v2 + 32);
      v21 = v19 & ~v20;
      if (((*(_QWORD *)(v8 + ((v21 >> 3) & 0xFFFFFFFFFFFFF8)) >> v21) & 1) != 0)
        break;
LABEL_6:
      swift_bridgeObjectRelease();
    }
    v22 = *(_QWORD *)(v2 + 48);
    v23 = (_QWORD *)(v22 + 16 * v21);
    v24 = *v23 == v18 && v23[1] == v17;
    if (v24 || (sub_1CA85C284() & 1) != 0)
    {
      isStackAllocationSafe = swift_bridgeObjectRelease();
      v38 = a1;
      v39 = v37;
      v40 = v35;
      v41 = v9;
      v42 = v7;
    }
    else
    {
      v25 = ~v20;
      do
      {
        v21 = (v21 + 1) & v25;
        if (((*(_QWORD *)(v8 + ((v21 >> 3) & 0xFFFFFFFFFFFFF8)) >> v21) & 1) == 0)
          goto LABEL_6;
        v26 = (_QWORD *)(v22 + 16 * v21);
        v27 = *v26 == v18 && v26[1] == v17;
      }
      while (!v27 && (sub_1CA85C284() & 1) == 0);
      v38 = a1;
      v39 = v37;
      v40 = v35;
      v41 = v9;
      v42 = v7;
      isStackAllocationSafe = swift_bridgeObjectRelease();
    }
    v29 = *(_BYTE *)(v2 + 32);
    v30 = (unint64_t)((1 << v29) + 63) >> 6;
    v31 = 8 * v30;
    if ((v29 & 0x3Fu) < 0xE
      || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (_DWORD)isStackAllocationSafe))
    {
      MEMORY[0x1E0C80A78](isStackAllocationSafe);
      memcpy((char *)&v35 - ((v31 + 15) & 0x3FFFFFFFFFFFFFF0), (const void *)(v2 + 56), v31);
      v32 = sub_1CA2DBE90((uint64_t)&v35 - ((v31 + 15) & 0x3FFFFFFFFFFFFFF0), v30, v2, v21, &v38);
      swift_release();
      sub_1CA24E6B8();
    }
    else
    {
      v33 = (void *)swift_slowAlloc();
      memcpy(v33, (const void *)(v2 + 56), v31);
      v32 = sub_1CA2DBE90((uint64_t)v33, v30, v2, v21, &v38);
      swift_release();
      sub_1CA24E6B8();
      MEMORY[0x1CAA4F27C](v33, -1, -1);
    }
    return v32;
  }
  else
  {
    swift_release();
    return MEMORY[0x1E0DEE9E8];
  }
}

uint64_t sub_1CA2D96B0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  size_t v24;
  uint64_t isStackAllocationSafe;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  _QWORD v32[2];
  _QWORD v33[6];

  v2 = a2;
  v33[5] = *MEMORY[0x1E0C80C00];
  if (*(_QWORD *)(a2 + 16))
  {
    v4 = 0;
    v6 = a1 + 56;
    v5 = *(_QWORD *)(a1 + 56);
    v7 = -1 << *(_BYTE *)(a1 + 32);
    v32[0] = ~v7;
    if (-v7 < 64)
      v8 = ~(-1 << -(char)v7);
    else
      v8 = -1;
    v9 = v8 & v5;
    v10 = (unint64_t)(63 - v7) >> 6;
    v11 = a2 + 56;
    while (1)
    {
      do
      {
        if (v9)
        {
          v12 = __clz(__rbit64(v9));
          v9 &= v9 - 1;
          v13 = v12 | (v4 << 6);
        }
        else
        {
          v14 = v4 + 1;
          if (__OFADD__(v4, 1))
          {
            __break(1u);
            goto LABEL_36;
          }
          if (v14 >= v10)
            goto LABEL_33;
          v15 = *(_QWORD *)(v6 + 8 * v14);
          v16 = v4 + 1;
          if (!v15)
          {
            v16 = v4 + 2;
            if (v4 + 2 >= v10)
              goto LABEL_33;
            v15 = *(_QWORD *)(v6 + 8 * v16);
            if (!v15)
            {
              v16 = v4 + 3;
              if (v4 + 3 >= v10)
                goto LABEL_33;
              v15 = *(_QWORD *)(v6 + 8 * v16);
              if (!v15)
              {
                v16 = v4 + 4;
                if (v4 + 4 >= v10)
                  goto LABEL_33;
                v15 = *(_QWORD *)(v6 + 8 * v16);
                if (!v15)
                {
                  v17 = v4 + 5;
                  if (v4 + 5 >= v10)
                  {
LABEL_33:
                    swift_bridgeObjectRetain();
                    sub_1CA24E6B8();
                    return v2;
                  }
                  v15 = *(_QWORD *)(v6 + 8 * v17);
                  if (!v15)
                  {
                    while (1)
                    {
                      v16 = v17 + 1;
                      if (__OFADD__(v17, 1))
                        break;
                      if (v16 >= v10)
                        goto LABEL_33;
                      v15 = *(_QWORD *)(v6 + 8 * v16);
                      ++v17;
                      if (v15)
                        goto LABEL_23;
                    }
LABEL_36:
                    __break(1u);
                  }
                  v16 = v4 + 5;
                }
              }
            }
          }
LABEL_23:
          v9 = (v15 - 1) & v15;
          v13 = __clz(__rbit64(v15)) + (v16 << 6);
          v4 = v16;
        }
        v18 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8 * v13);
        v19 = sub_1CA85C35C();
        v20 = -1 << *(_BYTE *)(v2 + 32);
        v21 = v19 & ~v20;
      }
      while (((*(_QWORD *)(v11 + ((v21 >> 3) & 0xFFFFFFFFFFFFF8)) >> v21) & 1) == 0);
      v22 = *(_QWORD *)(v2 + 48);
      if (*(_QWORD *)(v22 + 8 * v21) == v18)
        break;
      while (1)
      {
        v21 = (v21 + 1) & ~v20;
        if (((*(_QWORD *)(v11 + ((v21 >> 3) & 0xFFFFFFFFFFFFF8)) >> v21) & 1) == 0)
          break;
        if (*(_QWORD *)(v22 + 8 * v21) == v18)
          goto LABEL_28;
      }
    }
LABEL_28:
    v33[0] = a1;
    v33[1] = v6;
    v33[2] = v32[0];
    v33[3] = v4;
    v33[4] = v9;
    v23 = (unint64_t)(63 - v20) >> 6;
    v24 = 8 * v23;
    isStackAllocationSafe = swift_bridgeObjectRetain();
    if (v23 < 0x81 || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (_DWORD)isStackAllocationSafe))
    {
      MEMORY[0x1E0C80A78](isStackAllocationSafe);
      v27 = (char *)v32 - v26;
      memcpy((char *)v32 - v26, (const void *)(v2 + 56), v24);
      v28 = sub_1CA2DC16C((uint64_t)v27, v23, v2, v21, v33);
      swift_release();
      sub_1CA24E6B8();
      return v28;
    }
    else
    {
      v29 = (void *)swift_slowAlloc();
      memcpy(v29, (const void *)(v2 + 56), v24);
      v30 = sub_1CA2DC16C((uint64_t)v29, v23, v2, v21, v33);
      swift_release();
      sub_1CA24E6B8();
      MEMORY[0x1CAA4F27C](v29, -1, -1);
      return v30;
    }
  }
  else
  {
    swift_release();
    return MEMORY[0x1E0DEE9E8];
  }
}

uint64_t sub_1CA2D9A4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t isStackAllocationSafe;
  char v37;
  unint64_t v38;
  size_t v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v46;
  uint64_t v47;
  unint64_t v48;
  int64_t v49;
  uint64_t i;
  unint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;

  v64 = *MEMORY[0x1E0C80C00];
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED871D00);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = type metadata accessor for Song();
  MEMORY[0x1E0C80A78](v55);
  v8 = (unint64_t *)((char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v9);
  v12 = (unint64_t *)((char *)&v46 - v11);
  if (!*(_QWORD *)(a2 + 16))
  {
    swift_release();
    return MEMORY[0x1E0DEE9E8];
  }
  v56 = v10;
  v52 = v6;
  v13 = *(_QWORD *)(a1 + 56);
  v14 = -1 << *(_BYTE *)(a1 + 32);
  if (-v14 < 64)
    v15 = ~(-1 << -(char)v14);
  else
    v15 = -1;
  v16 = v15 & v13;
  v59 = a1;
  v60 = a1 + 56;
  v54 = a1 + 56;
  v53 = ~v14;
  v61 = ~v14;
  v62 = 0;
  v63 = v15 & v13;
  v17 = a2 + 56;
  v18 = (unint64_t)(63 - v14) >> 6;
  v46 = v18 - 1;
  swift_bridgeObjectRetain();
  v19 = 0;
  v49 = v18;
  v48 = v18 - 6;
  v47 = a1 + 104;
  for (i = a1; ; a1 = i)
  {
    v51 = v19;
    if (v16)
    {
      v57 = (v16 - 1) & v16;
      v58 = v19;
      v20 = __clz(__rbit64(v16)) | (v19 << 6);
      v21 = (uint64_t)v52;
LABEL_9:
      v22 = v56;
      sub_1CA24EE38(*(_QWORD *)(a1 + 48) + *(_QWORD *)(v56 + 72) * v20, v21, (uint64_t (*)(_QWORD))type metadata accessor for Song);
      v23 = 0;
      goto LABEL_16;
    }
    v24 = v19 + 1;
    v21 = (uint64_t)v52;
    if (__OFADD__(v19, 1))
      __break(1u);
    if (v24 >= v49)
    {
      v57 = 0;
      v58 = v19;
LABEL_15:
      v23 = 1;
      v22 = v56;
      goto LABEL_16;
    }
    v25 = *(_QWORD *)(v54 + 8 * v24);
    if (v25)
      goto LABEL_13;
    v34 = v19 + 2;
    if ((uint64_t)(v19 + 2) >= v49)
    {
      v57 = 0;
      v58 = v19 + 1;
      goto LABEL_15;
    }
    v25 = *(_QWORD *)(v54 + 8 * v34);
    if (v25)
      goto LABEL_28;
    if ((uint64_t)(v19 + 3) >= v49)
      goto LABEL_41;
    v25 = *(_QWORD *)(v54 + 8 * (v19 + 3));
    if (v25)
    {
      v24 = v19 + 3;
      goto LABEL_13;
    }
    v34 = v19 + 4;
    if ((uint64_t)(v19 + 4) >= v49)
    {
      v57 = 0;
      v58 = v19 + 3;
      goto LABEL_15;
    }
    v25 = *(_QWORD *)(v54 + 8 * v34);
    if (v25)
    {
LABEL_28:
      v24 = v34;
LABEL_13:
      v57 = (v25 - 1) & v25;
      v58 = v24;
      v20 = __clz(__rbit64(v25)) + (v24 << 6);
      goto LABEL_9;
    }
    v24 = v19 + 5;
    if ((uint64_t)(v19 + 5) >= v49)
    {
LABEL_41:
      v57 = 0;
      v58 = v34;
      goto LABEL_15;
    }
    v25 = *(_QWORD *)(v54 + 8 * v24);
    if (v25)
      goto LABEL_13;
    v35 = v19;
    while (v48 != v35)
    {
      v25 = *(_QWORD *)(v47 + 8 * v35++);
      if (v25)
      {
        v24 = v35 + 5;
        goto LABEL_13;
      }
    }
    v57 = 0;
    v23 = 1;
    v58 = v46;
    v22 = v56;
LABEL_16:
    v26 = v55;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v22 + 56))(v21, v23, 1, v55);
    v59 = a1;
    v60 = v54;
    v61 = v53;
    v62 = v58;
    v63 = v57;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v22 + 48))(v21, 1, v26) == 1)
    {
      sub_1CA24E6B8();
      sub_1CA267BE8(v21, &qword_1ED871D00);
      return a2;
    }
    sub_1CA24EE7C(v21, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for Song);
    sub_1CA85C368();
    swift_bridgeObjectRetain();
    sub_1CA85B4B0();
    swift_bridgeObjectRelease();
    v27 = sub_1CA85C3B0();
    v28 = -1 << *(_BYTE *)(a2 + 32);
    v29 = v27 & ~v28;
    if (((*(_QWORD *)(v17 + ((v29 >> 3) & 0xFFFFFFFFFFFFF8)) >> v29) & 1) != 0)
      break;
LABEL_6:
    sub_1CA2669CC((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for Song);
    v16 = v57;
    v19 = v58;
  }
  v30 = ~v28;
  v31 = *(_QWORD *)(v56 + 72);
  while (1)
  {
    sub_1CA24EE38(*(_QWORD *)(a2 + 48) + v31 * v29, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for Song);
    if (*v8 == *v12 && v8[1] == v12[1])
      break;
    v33 = sub_1CA85C284();
    sub_1CA2669CC((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for Song);
    if ((v33 & 1) != 0)
      goto LABEL_46;
    v29 = (v29 + 1) & v30;
    if (((*(_QWORD *)(v17 + ((v29 >> 3) & 0xFFFFFFFFFFFFF8)) >> v29) & 1) == 0)
      goto LABEL_6;
  }
  sub_1CA2669CC((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for Song);
LABEL_46:
  isStackAllocationSafe = sub_1CA2669CC((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for Song);
  v37 = *(_BYTE *)(a2 + 32);
  v38 = (unint64_t)((1 << v37) + 63) >> 6;
  v39 = 8 * v38;
  if ((v37 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (_DWORD)isStackAllocationSafe))
  {
    MEMORY[0x1E0C80A78](isStackAllocationSafe);
    memcpy((char *)&v46 - ((v39 + 15) & 0x3FFFFFFFFFFFFFF0), (const void *)(a2 + 56), v39);
    sub_1CA2DC3AC((unint64_t *)((char *)&v46 - ((v39 + 15) & 0x3FFFFFFFFFFFFFF0)), v38, a2, v29, &v59);
    v41 = v40;
    swift_release();
    sub_1CA24E6B8();
    return v41;
  }
  else
  {
    v42 = (void *)swift_slowAlloc();
    memcpy(v42, (const void *)(a2 + 56), v39);
    sub_1CA2DC3AC((unint64_t *)v42, v38, a2, v29, &v59);
    v44 = v43;
    swift_release();
    sub_1CA24E6B8();
    MEMORY[0x1CAA4F27C](v42, -1, -1);
    return v44;
  }
}

uint64_t sub_1CA2DA0A8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  int64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  BOOL v24;
  uint64_t v25;
  _QWORD *v26;
  BOOL v27;
  uint64_t isStackAllocationSafe;
  char v29;
  unint64_t v30;
  size_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v35;
  int64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int64_t v41;
  unint64_t v42;
  uint64_t v43;

  v2 = a2;
  v43 = *MEMORY[0x1E0C80C00];
  if (*(_QWORD *)(a2 + 16))
  {
    v4 = *(_QWORD *)(a1 + 64);
    v37 = a1 + 64;
    v5 = -1 << *(_BYTE *)(a1 + 32);
    v35 = ~v5;
    if (-v5 < 64)
      v6 = ~(-1 << -(char)v5);
    else
      v6 = -1;
    v7 = v6 & v4;
    v36 = (unint64_t)(63 - v5) >> 6;
    v8 = a2 + 56;
    swift_bridgeObjectRetain();
    v9 = 0;
    while (1)
    {
      if (v7)
      {
        v10 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        v11 = v10 | (v9 << 6);
      }
      else
      {
        v12 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
          __break(1u);
          goto LABEL_49;
        }
        if (v12 >= v36)
          goto LABEL_47;
        v13 = *(_QWORD *)(v37 + 8 * v12);
        v14 = v9 + 1;
        if (!v13)
        {
          v14 = v9 + 2;
          if (v9 + 2 >= v36)
            goto LABEL_47;
          v13 = *(_QWORD *)(v37 + 8 * v14);
          if (!v13)
          {
            v14 = v9 + 3;
            if (v9 + 3 >= v36)
              goto LABEL_47;
            v13 = *(_QWORD *)(v37 + 8 * v14);
            if (!v13)
            {
              v14 = v9 + 4;
              if (v9 + 4 >= v36)
                goto LABEL_47;
              v13 = *(_QWORD *)(v37 + 8 * v14);
              if (!v13)
              {
                v15 = v9 + 5;
                if (v9 + 5 >= v36)
                {
LABEL_47:
                  sub_1CA24E6B8();
                  return v2;
                }
                v13 = *(_QWORD *)(v37 + 8 * v15);
                if (!v13)
                {
                  while (1)
                  {
                    v14 = v15 + 1;
                    if (__OFADD__(v15, 1))
                      break;
                    if (v14 >= v36)
                      goto LABEL_47;
                    v13 = *(_QWORD *)(v37 + 8 * v14);
                    ++v15;
                    if (v13)
                      goto LABEL_24;
                  }
LABEL_49:
                  __break(1u);
                }
                v14 = v9 + 5;
              }
            }
          }
        }
LABEL_24:
        v7 = (v13 - 1) & v13;
        v11 = __clz(__rbit64(v13)) + (v14 << 6);
        v9 = v14;
      }
      v16 = (uint64_t *)(*(_QWORD *)(a1 + 56) + 16 * v11);
      v18 = *v16;
      v17 = v16[1];
      sub_1CA85C368();
      swift_bridgeObjectRetain();
      sub_1CA85B4B0();
      v19 = sub_1CA85C3B0();
      v20 = -1 << *(_BYTE *)(v2 + 32);
      v21 = v19 & ~v20;
      if (((*(_QWORD *)(v8 + ((v21 >> 3) & 0xFFFFFFFFFFFFF8)) >> v21) & 1) != 0)
        break;
LABEL_6:
      swift_bridgeObjectRelease();
    }
    v22 = *(_QWORD *)(v2 + 48);
    v23 = (_QWORD *)(v22 + 16 * v21);
    v24 = *v23 == v18 && v23[1] == v17;
    if (v24 || (sub_1CA85C284() & 1) != 0)
    {
      isStackAllocationSafe = swift_bridgeObjectRelease();
      v38 = a1;
      v39 = v37;
      v40 = v35;
      v41 = v9;
      v42 = v7;
    }
    else
    {
      v25 = ~v20;
      do
      {
        v21 = (v21 + 1) & v25;
        if (((*(_QWORD *)(v8 + ((v21 >> 3) & 0xFFFFFFFFFFFFF8)) >> v21) & 1) == 0)
          goto LABEL_6;
        v26 = (_QWORD *)(v22 + 16 * v21);
        v27 = *v26 == v18 && v26[1] == v17;
      }
      while (!v27 && (sub_1CA85C284() & 1) == 0);
      v38 = a1;
      v39 = v37;
      v40 = v35;
      v41 = v9;
      v42 = v7;
      isStackAllocationSafe = swift_bridgeObjectRelease();
    }
    v29 = *(_BYTE *)(v2 + 32);
    v30 = (unint64_t)((1 << v29) + 63) >> 6;
    v31 = 8 * v30;
    if ((v29 & 0x3Fu) < 0xE
      || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (_DWORD)isStackAllocationSafe))
    {
      MEMORY[0x1E0C80A78](isStackAllocationSafe);
      memcpy((char *)&v35 - ((v31 + 15) & 0x3FFFFFFFFFFFFFF0), (const void *)(v2 + 56), v31);
      v32 = sub_1CA2DC828((uint64_t)&v35 - ((v31 + 15) & 0x3FFFFFFFFFFFFFF0), v30, v2, v21, &v38);
      swift_release();
      sub_1CA24E6B8();
    }
    else
    {
      v33 = (void *)swift_slowAlloc();
      memcpy(v33, (const void *)(v2 + 56), v31);
      v32 = sub_1CA2DC828((uint64_t)v33, v30, v2, v21, &v38);
      swift_release();
      sub_1CA24E6B8();
      MEMORY[0x1CAA4F27C](v33, -1, -1);
    }
    return v32;
  }
  else
  {
    swift_release();
    return MEMORY[0x1E0DEE9E8];
  }
}

uint64_t sub_1CA2DA510(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  BOOL v14;
  uint64_t v15;
  _QWORD *v16;
  BOOL v17;
  uint64_t isStackAllocationSafe;
  char v19;
  unint64_t v20;
  size_t v21;
  uint64_t v22;
  void *v23;
  _QWORD v25[2];
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v2 = a2;
  v28 = *MEMORY[0x1E0C80C00];
  if (!*(_QWORD *)(a2 + 16))
  {
    swift_release();
    return MEMORY[0x1E0DEE9E8];
  }
  v26 = a1;
  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    v4 = a2 + 56;
    v25[0] = a1 + 32;
    swift_bridgeObjectRetain();
    v5 = 0;
    while (1)
    {
      v6 = (uint64_t *)(v25[0] + 16 * v5);
      v8 = *v6;
      v7 = v6[1];
      ++v5;
      sub_1CA85C368();
      swift_bridgeObjectRetain();
      sub_1CA85B4B0();
      v9 = sub_1CA85C3B0();
      v10 = -1 << *(_BYTE *)(v2 + 32);
      v11 = v9 & ~v10;
      if (((*(_QWORD *)(v4 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0)
      {
        v12 = *(_QWORD *)(v2 + 48);
        v13 = (_QWORD *)(v12 + 16 * v11);
        v14 = *v13 == v8 && v13[1] == v7;
        if (v14 || (sub_1CA85C284() & 1) != 0)
        {
          isStackAllocationSafe = swift_bridgeObjectRelease();
          v27 = v5;
LABEL_19:
          v19 = *(_BYTE *)(v2 + 32);
          v20 = (unint64_t)((1 << v19) + 63) >> 6;
          v21 = 8 * v20;
          if ((v19 & 0x3Fu) < 0xE
            || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (_DWORD)isStackAllocationSafe))
          {
            MEMORY[0x1E0C80A78](isStackAllocationSafe);
            memcpy((char *)v25 - ((v21 + 15) & 0x3FFFFFFFFFFFFFF0), (const void *)(v2 + 56), v21);
            v22 = sub_1CA2DCB1C((uint64_t)v25 - ((v21 + 15) & 0x3FFFFFFFFFFFFFF0), v20, v2, v11, &v26);
            swift_release();
            swift_bridgeObjectRelease();
          }
          else
          {
            v23 = (void *)swift_slowAlloc();
            memcpy(v23, (const void *)(v2 + 56), v21);
            v22 = sub_1CA2DCB1C((uint64_t)v23, v20, v2, v11, &v26);
            swift_release();
            swift_bridgeObjectRelease();
            MEMORY[0x1CAA4F27C](v23, -1, -1);
          }
          return v22;
        }
        v15 = ~v10;
        while (1)
        {
          v11 = (v11 + 1) & v15;
          if (((*(_QWORD *)(v4 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) == 0)
            break;
          v16 = (_QWORD *)(v12 + 16 * v11);
          v17 = *v16 == v8 && v16[1] == v7;
          if (v17 || (sub_1CA85C284() & 1) != 0)
          {
            v27 = v5;
            isStackAllocationSafe = swift_bridgeObjectRelease();
            goto LABEL_19;
          }
        }
      }
      swift_bridgeObjectRelease();
      if (v5 == v3)
      {
        swift_bridgeObjectRelease();
        return v2;
      }
    }
  }
  return v2;
}

uint64_t sub_1CA2DA81C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  int64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  BOOL v24;
  uint64_t v25;
  _QWORD *v26;
  BOOL v27;
  uint64_t isStackAllocationSafe;
  char v29;
  unint64_t v30;
  size_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v35;
  int64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int64_t v41;
  unint64_t v42;
  uint64_t v43;

  v2 = a2;
  v43 = *MEMORY[0x1E0C80C00];
  if (*(_QWORD *)(a2 + 16))
  {
    v4 = *(_QWORD *)(a1 + 56);
    v37 = a1 + 56;
    v5 = -1 << *(_BYTE *)(a1 + 32);
    v35 = ~v5;
    if (-v5 < 64)
      v6 = ~(-1 << -(char)v5);
    else
      v6 = -1;
    v7 = v6 & v4;
    v36 = (unint64_t)(63 - v5) >> 6;
    v8 = a2 + 56;
    swift_bridgeObjectRetain();
    v9 = 0;
    while (1)
    {
      if (v7)
      {
        v10 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        v11 = v10 | (v9 << 6);
      }
      else
      {
        v12 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
          __break(1u);
          goto LABEL_49;
        }
        if (v12 >= v36)
          goto LABEL_47;
        v13 = *(_QWORD *)(v37 + 8 * v12);
        v14 = v9 + 1;
        if (!v13)
        {
          v14 = v9 + 2;
          if (v9 + 2 >= v36)
            goto LABEL_47;
          v13 = *(_QWORD *)(v37 + 8 * v14);
          if (!v13)
          {
            v14 = v9 + 3;
            if (v9 + 3 >= v36)
              goto LABEL_47;
            v13 = *(_QWORD *)(v37 + 8 * v14);
            if (!v13)
            {
              v14 = v9 + 4;
              if (v9 + 4 >= v36)
                goto LABEL_47;
              v13 = *(_QWORD *)(v37 + 8 * v14);
              if (!v13)
              {
                v15 = v9 + 5;
                if (v9 + 5 >= v36)
                {
LABEL_47:
                  sub_1CA24E6B8();
                  return v2;
                }
                v13 = *(_QWORD *)(v37 + 8 * v15);
                if (!v13)
                {
                  while (1)
                  {
                    v14 = v15 + 1;
                    if (__OFADD__(v15, 1))
                      break;
                    if (v14 >= v36)
                      goto LABEL_47;
                    v13 = *(_QWORD *)(v37 + 8 * v14);
                    ++v15;
                    if (v13)
                      goto LABEL_24;
                  }
LABEL_49:
                  __break(1u);
                }
                v14 = v9 + 5;
              }
            }
          }
        }
LABEL_24:
        v7 = (v13 - 1) & v13;
        v11 = __clz(__rbit64(v13)) + (v14 << 6);
        v9 = v14;
      }
      v16 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v11);
      v18 = *v16;
      v17 = v16[1];
      sub_1CA85C368();
      swift_bridgeObjectRetain();
      sub_1CA85B4B0();
      v19 = sub_1CA85C3B0();
      v20 = -1 << *(_BYTE *)(v2 + 32);
      v21 = v19 & ~v20;
      if (((*(_QWORD *)(v8 + ((v21 >> 3) & 0xFFFFFFFFFFFFF8)) >> v21) & 1) != 0)
        break;
LABEL_6:
      swift_bridgeObjectRelease();
    }
    v22 = *(_QWORD *)(v2 + 48);
    v23 = (_QWORD *)(v22 + 16 * v21);
    v24 = *v23 == v18 && v23[1] == v17;
    if (v24 || (sub_1CA85C284() & 1) != 0)
    {
      isStackAllocationSafe = swift_bridgeObjectRelease();
      v38 = a1;
      v39 = v37;
      v40 = v35;
      v41 = v9;
      v42 = v7;
    }
    else
    {
      v25 = ~v20;
      do
      {
        v21 = (v21 + 1) & v25;
        if (((*(_QWORD *)(v8 + ((v21 >> 3) & 0xFFFFFFFFFFFFF8)) >> v21) & 1) == 0)
          goto LABEL_6;
        v26 = (_QWORD *)(v22 + 16 * v21);
        v27 = *v26 == v18 && v26[1] == v17;
      }
      while (!v27 && (sub_1CA85C284() & 1) == 0);
      v38 = a1;
      v39 = v37;
      v40 = v35;
      v41 = v9;
      v42 = v7;
      isStackAllocationSafe = swift_bridgeObjectRelease();
    }
    v29 = *(_BYTE *)(v2 + 32);
    v30 = (unint64_t)((1 << v29) + 63) >> 6;
    v31 = 8 * v30;
    if ((v29 & 0x3Fu) < 0xE
      || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (_DWORD)isStackAllocationSafe))
    {
      MEMORY[0x1E0C80A78](isStackAllocationSafe);
      memcpy((char *)&v35 - ((v31 + 15) & 0x3FFFFFFFFFFFFFF0), (const void *)(v2 + 56), v31);
      v32 = sub_1CA2DCD44((uint64_t)&v35 - ((v31 + 15) & 0x3FFFFFFFFFFFFFF0), v30, v2, v21, &v38);
      swift_release();
      sub_1CA24E6B8();
    }
    else
    {
      v33 = (void *)swift_slowAlloc();
      memcpy(v33, (const void *)(v2 + 56), v31);
      v32 = sub_1CA2DCD44((uint64_t)v33, v30, v2, v21, &v38);
      swift_release();
      sub_1CA24E6B8();
      MEMORY[0x1CAA4F27C](v33, -1, -1);
    }
    return v32;
  }
  else
  {
    swift_release();
    return MEMORY[0x1E0DEE9E8];
  }
}

uint64_t sub_1CA2DAC84(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int64_t v44;
  int64_t v45;
  unint64_t v46;
  uint64_t v47;
  void (*v48)(uint64_t, uint64_t, uint64_t, int *);
  uint64_t v49;
  int *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  char v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t (*v68)(uint64_t, uint64_t, uint64_t);
  int v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char v73;
  void (*v74)(char *, uint64_t);
  uint64_t v75;
  _QWORD *v76;
  uint64_t v77;
  _QWORD *v78;
  uint64_t v79;
  uint64_t v80;
  char v81;
  uint64_t isStackAllocationSafe;
  uint64_t v84;
  char v85;
  unint64_t v86;
  size_t v87;
  uint64_t v88;
  uint64_t v89;
  void *v90;
  uint64_t v91;
  _QWORD v92[2];
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t i;
  char *v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  unsigned int (*v102)(_QWORD, _QWORD, _QWORD);
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  int *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  unsigned int (*v116)(_QWORD, _QWORD, _QWORD);
  uint64_t v117;

  v106 = a1;
  v117 = *MEMORY[0x1E0C80C00];
  v101 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8744C0);
  MEMORY[0x1E0C80A78](v101);
  v4 = (char *)v92 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1CA85A5B0();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v97 = (char *)v92 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8711C0);
  MEMORY[0x1E0C80A78](v8);
  v100 = (uint64_t)v92 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v94 = (uint64_t)v92 - v11;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED872D30);
  MEMORY[0x1E0C80A78](v12);
  v95 = (uint64_t)v92 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for SongSource();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v104 = (uint64_t)v92 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v111 = (uint64_t)v92 - v18;
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)v92 - v20;
  MEMORY[0x1E0C80A78](v22);
  MEMORY[0x1E0C80A78](v23);
  v25 = (_QWORD *)((char *)v92 - v24);
  MEMORY[0x1E0C80A78](v26);
  v29 = (_QWORD *)((char *)v92 - v28);
  if (!*(_QWORD *)(a2 + 16))
  {
    swift_release();
    return MEMORY[0x1E0DEE9E8];
  }
  v110 = v27;
  v98 = v6;
  v103 = v5;
  v30 = -1 << *(_BYTE *)(v106 + 32);
  v32 = v106 + 56;
  v31 = *(_QWORD *)(v106 + 56);
  v33 = ~v30;
  v34 = -v30;
  if (v34 < 64)
    v35 = ~(-1 << v34);
  else
    v35 = -1;
  v112 = v106;
  v113 = v106 + 56;
  v36 = v35 & v31;
  v114 = v33;
  v115 = 0;
  v116 = (unsigned int (*)(_QWORD, _QWORD, _QWORD))(v35 & v31);
  v107 = (char *)(a2 + 56);
  swift_bridgeObjectRetain();
  v37 = v36;
  v38 = 0;
  v108 = a2;
  v109 = (int *)v14;
  v99 = v21;
  for (i = v15; ; v15 = i)
  {
    v92[1] = v37;
    v93 = v38;
    if (v37)
    {
      v39 = v33;
      v102 = (unsigned int (*)(_QWORD, _QWORD, _QWORD))((v37 - 1) & v37);
      v40 = __clz(__rbit64(v37)) | (v38 << 6);
      v105 = v38;
LABEL_9:
      v41 = v32;
      v42 = v95;
      sub_1CA24EE38(*(_QWORD *)(v106 + 48) + *(_QWORD *)(v15 + 72) * v40, v95, (uint64_t (*)(_QWORD))type metadata accessor for SongSource);
      v43 = 0;
      goto LABEL_32;
    }
    v44 = v38 + 1;
    if (__OFADD__(v38, 1))
      __break(1u);
    v45 = (unint64_t)(v33 + 64) >> 6;
    if (v44 >= v45)
    {
LABEL_30:
      v39 = v33;
      v41 = v32;
      v102 = 0;
      v43 = 1;
      v105 = v38;
      goto LABEL_31;
    }
    v46 = *(_QWORD *)(v32 + 8 * v44);
    if (v46)
      goto LABEL_13;
    v38 += 2;
    if (v44 + 1 >= v45)
    {
      v105 = v44;
    }
    else
    {
      v46 = *(_QWORD *)(v32 + 8 * v38);
      if (v46)
        goto LABEL_16;
      if (v44 + 2 >= v45)
        goto LABEL_30;
      v46 = *(_QWORD *)(v32 + 8 * (v44 + 2));
      if (v46)
      {
        v44 += 2;
        goto LABEL_13;
      }
      v38 = v44 + 3;
      if (v44 + 3 >= v45)
      {
        v39 = v33;
        v41 = v32;
        v102 = 0;
        v43 = 1;
        v105 = v44 + 2;
        goto LABEL_31;
      }
      v46 = *(_QWORD *)(v32 + 8 * v38);
      if (v46)
      {
LABEL_16:
        v44 = v38;
LABEL_13:
        v39 = v33;
        v102 = (unsigned int (*)(_QWORD, _QWORD, _QWORD))((v46 - 1) & v46);
        v105 = v44;
        v40 = __clz(__rbit64(v46)) + (v44 << 6);
        goto LABEL_9;
      }
      v44 += 4;
      if (v44 >= v45)
        goto LABEL_30;
      v46 = *(_QWORD *)(v32 + 8 * v44);
      if (v46)
        goto LABEL_13;
      v47 = v93 + 6;
      while (v45 != v47)
      {
        v46 = *(_QWORD *)(v32 + 8 * v47++);
        if (v46)
        {
          v44 = v47 - 1;
          goto LABEL_13;
        }
      }
      v105 = v45 - 1;
    }
    v39 = v33;
    v41 = v32;
    v102 = 0;
    v43 = 1;
LABEL_31:
    v42 = v95;
LABEL_32:
    v48 = *(void (**)(uint64_t, uint64_t, uint64_t, int *))(v15 + 56);
    v49 = v15;
    v50 = v109;
    v48(v42, v43, 1, v109);
    v112 = v106;
    v113 = v41;
    v114 = v39;
    v115 = v105;
    v116 = v102;
    if ((*(unsigned int (**)(uint64_t, uint64_t, int *))(v49 + 48))(v42, 1, v50) == 1)
    {
      sub_1CA24E6B8();
      sub_1CA267BE8(v42, &qword_1ED872D30);
      return v108;
    }
    sub_1CA24EE7C(v42, (uint64_t)v29, (uint64_t (*)(_QWORD))type metadata accessor for SongSource);
    sub_1CA85C368();
    swift_bridgeObjectRetain();
    sub_1CA85B4B0();
    swift_bridgeObjectRelease();
    if (*(_QWORD *)((char *)v29 + v50[11] + 8))
    {
      sub_1CA85C380();
      swift_bridgeObjectRetain();
      sub_1CA85B4B0();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1CA85C380();
    }
    v51 = v94;
    sub_1CA29377C((uint64_t)v29 + v109[7], v94);
    v52 = v98;
    v53 = v103;
    v102 = *(unsigned int (**)(_QWORD, _QWORD, _QWORD))(v98 + 48);
    if (v102(v51, 1, v103) == 1)
    {
      sub_1CA85C380();
    }
    else
    {
      v54 = v97;
      (*(void (**)(char *, uint64_t, uint64_t))(v52 + 32))(v97, v51, v53);
      sub_1CA85C380();
      sub_1CA2DF104((unint64_t *)&qword_1ED871190, MEMORY[0x1E0CB08A8]);
      sub_1CA85B4A4();
      (*(void (**)(char *, uint64_t))(v52 + 8))(v54, v53);
    }
    v55 = v104;
    if (*(_QWORD *)((char *)v29 + v109[8] + 8))
    {
      sub_1CA85C380();
      swift_bridgeObjectRetain();
      sub_1CA85B4B0();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1CA85C380();
    }
    if (*(_QWORD *)((char *)v29 + v109[12] + 8))
    {
      sub_1CA85C380();
      swift_bridgeObjectRetain();
      sub_1CA85B4B0();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1CA85C380();
    }
    v56 = v111;
    v57 = sub_1CA85C3B0();
    v58 = v108;
    v59 = -1 << *(_BYTE *)(v108 + 32);
    v60 = v57 & ~v59;
    if (((*(_QWORD *)&v107[(v60 >> 3) & 0xFFFFFFFFFFFFF8] >> v60) & 1) != 0)
      break;
LABEL_6:
    sub_1CA2669CC((uint64_t)v29, (uint64_t (*)(_QWORD))type metadata accessor for SongSource);
    v38 = v115;
    v37 = (unint64_t)v116;
    v32 = v113;
    v106 = v112;
    v33 = v114;
  }
  v105 = ~v59;
  v106 = *(_QWORD *)(i + 72);
  while (1)
  {
    sub_1CA24EE38(*(_QWORD *)(v58 + 48) + v106 * v60, (uint64_t)v25, (uint64_t (*)(_QWORD))type metadata accessor for SongSource);
    if (*v25 == *v29 && v25[1] == v29[1])
    {
      v63 = v110;
      sub_1CA24EE38((uint64_t)v25, v110, (uint64_t (*)(_QWORD))type metadata accessor for SongSource);
      sub_1CA24EE38((uint64_t)v29, (uint64_t)v21, (uint64_t (*)(_QWORD))type metadata accessor for SongSource);
    }
    else
    {
      v62 = sub_1CA85C284();
      v63 = v110;
      sub_1CA24EE38((uint64_t)v25, v110, (uint64_t (*)(_QWORD))type metadata accessor for SongSource);
      sub_1CA24EE38((uint64_t)v29, (uint64_t)v21, (uint64_t (*)(_QWORD))type metadata accessor for SongSource);
      if ((v62 & 1) == 0)
      {
        sub_1CA2669CC((uint64_t)v21, (uint64_t (*)(_QWORD))type metadata accessor for SongSource);
        sub_1CA2669CC(v63, (uint64_t (*)(_QWORD))type metadata accessor for SongSource);
        goto LABEL_48;
      }
    }
    v64 = v109[7];
    v65 = (uint64_t)&v21[v64];
    v66 = (uint64_t)&v4[*(int *)(v101 + 48)];
    sub_1CA29377C(v63 + v64, (uint64_t)v4);
    sub_1CA29377C(v65, v66);
    v67 = v103;
    v68 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v102;
    if (v102(v4, 1, v103) == 1)
    {
      sub_1CA2669CC((uint64_t)v21, (uint64_t (*)(_QWORD))type metadata accessor for SongSource);
      sub_1CA2669CC(v63, (uint64_t (*)(_QWORD))type metadata accessor for SongSource);
      v69 = v68(v66, 1, v67);
      v56 = v111;
      if (v69 != 1)
        goto LABEL_64;
      sub_1CA267BE8((uint64_t)v4, &qword_1ED8711C0);
      sub_1CA24EE38((uint64_t)v25, v56, (uint64_t (*)(_QWORD))type metadata accessor for SongSource);
      v55 = v104;
      sub_1CA24EE38((uint64_t)v29, v104, (uint64_t (*)(_QWORD))type metadata accessor for SongSource);
      goto LABEL_66;
    }
    sub_1CA29377C((uint64_t)v4, v100);
    if (v68(v66, 1, v67) == 1)
    {
      sub_1CA2669CC((uint64_t)v21, (uint64_t (*)(_QWORD))type metadata accessor for SongSource);
      sub_1CA2669CC(v110, (uint64_t (*)(_QWORD))type metadata accessor for SongSource);
      (*(void (**)(uint64_t, uint64_t))(v98 + 8))(v100, v67);
      v56 = v111;
LABEL_64:
      sub_1CA267BE8((uint64_t)v4, &qword_1ED8744C0);
      v55 = v104;
LABEL_48:
      sub_1CA24EE38((uint64_t)v25, v56, (uint64_t (*)(_QWORD))type metadata accessor for SongSource);
      sub_1CA24EE38((uint64_t)v29, v55, (uint64_t (*)(_QWORD))type metadata accessor for SongSource);
LABEL_49:
      sub_1CA2669CC(v55, (uint64_t (*)(_QWORD))type metadata accessor for SongSource);
      sub_1CA2669CC(v56, (uint64_t (*)(_QWORD))type metadata accessor for SongSource);
LABEL_50:
      sub_1CA2669CC((uint64_t)v25, (uint64_t (*)(_QWORD))type metadata accessor for SongSource);
      goto LABEL_51;
    }
    v70 = v98;
    v71 = v100;
    v72 = v97;
    (*(void (**)(char *, uint64_t, uint64_t))(v98 + 32))(v97, v66, v67);
    sub_1CA2DF104((unint64_t *)&unk_1ED8711B0, MEMORY[0x1E0CB08B8]);
    v73 = sub_1CA85B504();
    v74 = *(void (**)(char *, uint64_t))(v70 + 8);
    v74(v72, v67);
    sub_1CA2669CC((uint64_t)v99, (uint64_t (*)(_QWORD))type metadata accessor for SongSource);
    sub_1CA2669CC(v110, (uint64_t (*)(_QWORD))type metadata accessor for SongSource);
    v21 = v99;
    v74((char *)v71, v67);
    sub_1CA267BE8((uint64_t)v4, &qword_1ED8711C0);
    v56 = v111;
    sub_1CA24EE38((uint64_t)v25, v111, (uint64_t (*)(_QWORD))type metadata accessor for SongSource);
    v55 = v104;
    sub_1CA24EE38((uint64_t)v29, v104, (uint64_t (*)(_QWORD))type metadata accessor for SongSource);
    if ((v73 & 1) == 0)
      goto LABEL_49;
LABEL_66:
    v75 = v109[8];
    v76 = (_QWORD *)(v56 + v75);
    v77 = *(_QWORD *)(v56 + v75 + 8);
    v78 = (_QWORD *)(v55 + v75);
    v79 = v56;
    v80 = v78[1];
    if (!v77)
    {
      swift_bridgeObjectRetain();
      sub_1CA2669CC(v55, (uint64_t (*)(_QWORD))type metadata accessor for SongSource);
      sub_1CA2669CC(v79, (uint64_t (*)(_QWORD))type metadata accessor for SongSource);
      if (!v80)
        goto LABEL_80;
      goto LABEL_75;
    }
    if (!v80)
    {
      swift_bridgeObjectRetain();
      sub_1CA2669CC(v55, (uint64_t (*)(_QWORD))type metadata accessor for SongSource);
      sub_1CA2669CC(v111, (uint64_t (*)(_QWORD))type metadata accessor for SongSource);
LABEL_75:
      swift_bridgeObjectRelease();
      v21 = v99;
      goto LABEL_50;
    }
    v21 = v99;
    if (*v76 == *v78 && v77 == v80)
      break;
    v81 = sub_1CA85C284();
    swift_bridgeObjectRetain();
    sub_1CA2669CC(v55, (uint64_t (*)(_QWORD))type metadata accessor for SongSource);
    sub_1CA2669CC(v111, (uint64_t (*)(_QWORD))type metadata accessor for SongSource);
    swift_bridgeObjectRelease();
    sub_1CA2669CC((uint64_t)v25, (uint64_t (*)(_QWORD))type metadata accessor for SongSource);
    if ((v81 & 1) != 0)
      goto LABEL_81;
LABEL_51:
    v60 = (v60 + 1) & v105;
    v58 = v108;
    v56 = v111;
    if (((*(_QWORD *)&v107[(v60 >> 3) & 0xFFFFFFFFFFFFF8] >> v60) & 1) == 0)
      goto LABEL_6;
  }
  swift_bridgeObjectRetain();
  sub_1CA2669CC(v55, (uint64_t (*)(_QWORD))type metadata accessor for SongSource);
  sub_1CA2669CC(v111, (uint64_t (*)(_QWORD))type metadata accessor for SongSource);
  swift_bridgeObjectRelease();
LABEL_80:
  sub_1CA2669CC((uint64_t)v25, (uint64_t (*)(_QWORD))type metadata accessor for SongSource);
LABEL_81:
  isStackAllocationSafe = sub_1CA2669CC((uint64_t)v29, (uint64_t (*)(_QWORD))type metadata accessor for SongSource);
  v84 = v108;
  v85 = *(_BYTE *)(v108 + 32);
  v86 = (unint64_t)((1 << v85) + 63) >> 6;
  v87 = 8 * v86;
  if ((v85 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (_DWORD)isStackAllocationSafe))
  {
    MEMORY[0x1E0C80A78](isStackAllocationSafe);
    memcpy((char *)v92 - ((v87 + 15) & 0x3FFFFFFFFFFFFFF0), v107, v87);
    sub_1CA2DD038((_QWORD *)((char *)v92 - ((v87 + 15) & 0x3FFFFFFFFFFFFFF0)), v86, v84, v60, &v112);
    v89 = v88;
    swift_release();
    sub_1CA24E6B8();
  }
  else
  {
    v90 = (void *)swift_slowAlloc();
    memcpy(v90, v107, v87);
    sub_1CA2DD038((unint64_t *)v90, v86, v84, v60, &v112);
    v89 = v91;
    swift_release();
    sub_1CA24E6B8();
    MEMORY[0x1CAA4F27C](v90, -1, -1);
  }
  return v89;
}

uint64_t sub_1CA2DBA34(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  void (*v16)(char *, unint64_t, uint64_t);
  void (*v17)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  char v23;
  void (*v24)(char *, uint64_t);
  uint64_t isStackAllocationSafe;
  char v26;
  unint64_t v27;
  size_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  void (*v34)(char *, uint64_t, uint64_t, uint64_t);
  char *v35;
  char *v36;
  char *v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;

  v40 = *MEMORY[0x1E0C80C00];
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8711C0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1CA85A5B0();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v37 = (char *)&v34 - v12;
  if (*(_QWORD *)(a2 + 16))
  {
    v38 = a1;
    v39 = 0;
    v13 = *(_QWORD *)(a1 + 16);
    swift_bridgeObjectRetain();
    if (v13)
    {
      v14 = 0;
      v35 = v6;
      v36 = (char *)(a2 + 56);
      while (1)
      {
        if (v14 >= v13)
          __break(1u);
        v15 = *(_QWORD *)(v8 + 72);
        v16 = *(void (**)(char *, unint64_t, uint64_t))(v8 + 16);
        v16(v6, a1 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80)) + v15 * v14, v7);
        v39 = v14 + 1;
        v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56);
        v17(v6, 0, 1, v7);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
          break;
        v34 = v17;
        (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v37, v6, v7);
        sub_1CA2DF104((unint64_t *)&qword_1ED871190, MEMORY[0x1E0CB08A8]);
        v18 = sub_1CA85B498();
        v19 = a2;
        v20 = -1 << *(_BYTE *)(a2 + 32);
        v21 = v18 & ~v20;
        if (((*(_QWORD *)&v36[(v21 >> 3) & 0xFFFFFFFFFFFFF8] >> v21) & 1) != 0)
        {
          v22 = ~v20;
          while (1)
          {
            v16(v10, *(_QWORD *)(v19 + 48) + v21 * v15, v7);
            sub_1CA2DF104((unint64_t *)&unk_1ED8711B0, MEMORY[0x1E0CB08B8]);
            v23 = sub_1CA85B504();
            v24 = *(void (**)(char *, uint64_t))(v8 + 8);
            v24(v10, v7);
            if ((v23 & 1) != 0)
              break;
            v21 = (v21 + 1) & v22;
            if (((*(_QWORD *)&v36[(v21 >> 3) & 0xFFFFFFFFFFFFF8] >> v21) & 1) == 0)
              goto LABEL_12;
          }
          isStackAllocationSafe = ((uint64_t (*)(char *, uint64_t))v24)(v37, v7);
          v26 = *(_BYTE *)(v19 + 32);
          v27 = (unint64_t)((1 << v26) + 63) >> 6;
          v28 = 8 * v27;
          if ((v26 & 0x3Fu) <= 0xD
            || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (_DWORD)isStackAllocationSafe))
          {
            MEMORY[0x1E0C80A78](isStackAllocationSafe);
            memcpy((char *)&v34 - ((v28 + 15) & 0x3FFFFFFFFFFFFFF0), v36, v28);
            sub_1CA2DDC68((unint64_t *)((char *)&v34 - ((v28 + 15) & 0x3FFFFFFFFFFFFFF0)), v27, v19, v21, &v38);
            v30 = v29;
            swift_release();
            swift_bridgeObjectRelease();
          }
          else
          {
            v31 = (void *)swift_slowAlloc();
            memcpy(v31, v36, v28);
            sub_1CA2DDC68((unint64_t *)v31, v27, v19, v21, &v38);
            v30 = v32;
            swift_release();
            swift_bridgeObjectRelease();
            MEMORY[0x1CAA4F27C](v31, -1, -1);
          }
          return v30;
        }
        v24 = *(void (**)(char *, uint64_t))(v8 + 8);
LABEL_12:
        v24(v37, v7);
        a1 = v38;
        v14 = v39;
        v13 = *(_QWORD *)(v38 + 16);
        a2 = v19;
        v6 = v35;
        if (v39 == v13)
        {
          v34(v35, 1, 1, v7);
          break;
        }
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, 1, 1, v7);
    }
    swift_bridgeObjectRelease();
    sub_1CA267BE8((uint64_t)v6, &qword_1ED8711C0);
  }
  else
  {
    swift_release();
    return MEMORY[0x1E0DEE9E8];
  }
  return a2;
}

uint64_t sub_1CA2DBE90(uint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, _QWORD *a5)
{
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  int64_t v14;
  int64_t v15;
  uint64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  BOOL v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t i;
  unint64_t v33;
  _QWORD *v34;
  BOOL v35;
  uint64_t v37;
  unint64_t *v38;
  uint64_t v39;

  v7 = *(_QWORD *)(a3 + 16);
  v38 = (unint64_t *)result;
  *(_QWORD *)(result + ((a4 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a4) - 1;
  v8 = v7 - 1;
  v39 = a3 + 56;
  while (2)
  {
    v37 = v8;
    do
    {
      while (1)
      {
        v9 = a5[3];
        v10 = a5[4];
        if (v10)
        {
          v11 = (v10 - 1) & v10;
          v12 = __clz(__rbit64(v10)) | (v9 << 6);
        }
        else
        {
          v13 = v9 + 1;
          if (__OFADD__(v9, 1))
          {
            __break(1u);
            goto LABEL_45;
          }
          v14 = (unint64_t)(a5[2] + 64) >> 6;
          v15 = a5[3];
          if (v13 >= v14)
            goto LABEL_43;
          v16 = a5[1];
          v17 = *(_QWORD *)(v16 + 8 * v13);
          if (!v17)
          {
            v15 = v9 + 1;
            if (v9 + 2 >= v14)
              goto LABEL_43;
            v17 = *(_QWORD *)(v16 + 8 * (v9 + 2));
            if (v17)
            {
              v13 = v9 + 2;
            }
            else
            {
              v15 = v9 + 2;
              if (v9 + 3 >= v14)
                goto LABEL_43;
              v17 = *(_QWORD *)(v16 + 8 * (v9 + 3));
              if (v17)
              {
                v13 = v9 + 3;
              }
              else
              {
                v13 = v9 + 4;
                v15 = v9 + 3;
                if (v9 + 4 >= v14)
                  goto LABEL_43;
                v17 = *(_QWORD *)(v16 + 8 * v13);
                if (!v17)
                {
                  v15 = v14 - 1;
                  v18 = v9 + 5;
                  while (v14 != v18)
                  {
                    v17 = *(_QWORD *)(v16 + 8 * v18++);
                    if (v17)
                    {
                      v13 = v18 - 1;
                      goto LABEL_21;
                    }
                  }
LABEL_43:
                  a5[3] = v15;
                  a5[4] = 0;
                  swift_retain();
                  return sub_1CA3CD858(v38, a2, v37, a3);
                }
              }
            }
          }
LABEL_21:
          v11 = (v17 - 1) & v17;
          v12 = __clz(__rbit64(v17)) + (v13 << 6);
          v9 = v13;
        }
        v19 = (uint64_t *)(*(_QWORD *)(*a5 + 48) + 16 * v12);
        v21 = *v19;
        v20 = v19[1];
        a5[3] = v9;
        a5[4] = v11;
        sub_1CA85C368();
        swift_bridgeObjectRetain();
        sub_1CA85B4B0();
        v22 = sub_1CA85C3B0();
        v23 = -1 << *(_BYTE *)(a3 + 32);
        v24 = v22 & ~v23;
        v25 = v24 >> 6;
        v26 = 1 << v24;
        if (((1 << v24) & *(_QWORD *)(v39 + 8 * (v24 >> 6))) != 0)
          break;
LABEL_3:
        result = swift_bridgeObjectRelease();
      }
      v27 = *(_QWORD *)(a3 + 48);
      v28 = (_QWORD *)(v27 + 16 * v24);
      v29 = *v28 == v21 && v28[1] == v20;
      if (!v29 && (sub_1CA85C284() & 1) == 0)
      {
        v31 = ~v23;
        for (i = v24 + 1; ; i = v33 + 1)
        {
          v33 = i & v31;
          if (((*(_QWORD *)(v39 + (((i & v31) >> 3) & 0xFFFFFFFFFFFFF8)) >> (i & v31)) & 1) == 0)
            break;
          v34 = (_QWORD *)(v27 + 16 * v33);
          v35 = *v34 == v21 && v34[1] == v20;
          if (v35 || (sub_1CA85C284() & 1) != 0)
          {
            result = swift_bridgeObjectRelease();
            v25 = v33 >> 6;
            v26 = 1 << v33;
            goto LABEL_29;
          }
        }
        goto LABEL_3;
      }
      result = swift_bridgeObjectRelease();
LABEL_29:
      v30 = v38[v25];
      v38[v25] = v30 & ~v26;
    }
    while ((v26 & v30) == 0);
    v8 = v37 - 1;
    if (__OFSUB__(v37, 1))
    {
LABEL_45:
      __break(1u);
      return result;
    }
    if (v37 != 1)
      continue;
    return MEMORY[0x1E0DEE9E8];
  }
}

uint64_t sub_1CA2DC16C(uint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, _QWORD *a5)
{
  unint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int64_t v20;
  int64_t v21;
  int64_t v22;
  uint64_t v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t i;
  unint64_t v31;

  v8 = (unint64_t *)result;
  v9 = *(_QWORD *)(a3 + 16);
  *(_QWORD *)(result + ((a4 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a4) - 1;
  v10 = v9 - 1;
  v11 = a3 + 56;
  while (1)
  {
    v16 = a5[3];
    v17 = a5[4];
    if (!v17)
      break;
    v18 = (v17 - 1) & v17;
    v19 = __clz(__rbit64(v17)) | (v16 << 6);
LABEL_22:
    v26 = *(_QWORD *)(*(_QWORD *)(*a5 + 48) + 8 * v19);
    a5[3] = v16;
    a5[4] = v18;
    result = sub_1CA85C35C();
    v27 = -1 << *(_BYTE *)(a3 + 32);
    v28 = result & ~v27;
    v12 = v28 >> 6;
    v13 = 1 << v28;
    if (((1 << v28) & *(_QWORD *)(v11 + 8 * (v28 >> 6))) != 0)
    {
      v29 = *(_QWORD *)(a3 + 48);
      if (*(_QWORD *)(v29 + 8 * v28) == v26)
      {
LABEL_3:
        v14 = v12;
        v15 = v8[v12];
        v8[v14] = v15 & ~v13;
        if ((v13 & v15) != 0)
        {
          if (__OFSUB__(v10--, 1))
            goto LABEL_33;
          if (!v10)
            return MEMORY[0x1E0DEE9E8];
        }
      }
      else
      {
        for (i = v28 + 1; ; i = v31 + 1)
        {
          v31 = i & ~v27;
          if (((*(_QWORD *)(v11 + ((v31 >> 3) & 0xFFFFFFFFFFFFF8)) >> v31) & 1) == 0)
            break;
          if (*(_QWORD *)(v29 + 8 * v31) == v26)
          {
            v12 = v31 >> 6;
            v13 = 1 << v31;
            goto LABEL_3;
          }
        }
      }
    }
  }
  v20 = v16 + 1;
  if (!__OFADD__(v16, 1))
  {
    v21 = (unint64_t)(a5[2] + 64) >> 6;
    v22 = a5[3];
    if (v20 >= v21)
      goto LABEL_31;
    v23 = a5[1];
    v24 = *(_QWORD *)(v23 + 8 * v20);
    if (!v24)
    {
      v22 = v16 + 1;
      if (v16 + 2 >= v21)
        goto LABEL_31;
      v24 = *(_QWORD *)(v23 + 8 * (v16 + 2));
      if (v24)
      {
        v20 = v16 + 2;
      }
      else
      {
        v22 = v16 + 2;
        if (v16 + 3 >= v21)
          goto LABEL_31;
        v24 = *(_QWORD *)(v23 + 8 * (v16 + 3));
        if (v24)
        {
          v20 = v16 + 3;
        }
        else
        {
          v20 = v16 + 4;
          v22 = v16 + 3;
          if (v16 + 4 >= v21)
            goto LABEL_31;
          v24 = *(_QWORD *)(v23 + 8 * v20);
          if (!v24)
          {
            v22 = v21 - 1;
            v25 = v16 + 5;
            while (v21 != v25)
            {
              v24 = *(_QWORD *)(v23 + 8 * v25++);
              if (v24)
              {
                v20 = v25 - 1;
                goto LABEL_21;
              }
            }
LABEL_31:
            a5[3] = v22;
            a5[4] = 0;
            swift_retain();
            return sub_1CA3CDAEC(v8, a2, v10, a3);
          }
        }
      }
    }
LABEL_21:
    v18 = (v24 - 1) & v24;
    v19 = __clz(__rbit64(v24)) + (v20 << 6);
    v16 = v20;
    goto LABEL_22;
  }
  __break(1u);
LABEL_33:
  __break(1u);
  return result;
}

void sub_1CA2DC3AC(unint64_t *a1, uint64_t a2, uint64_t a3, unint64_t a4, _QWORD *a5)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v43;
  int64_t v44;
  int64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int64_t v49;
  int64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t *v55;
  _QWORD *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;

  v53 = a2;
  v58 = a3;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED871D00);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = type metadata accessor for Song();
  MEMORY[0x1E0C80A78](v59);
  v13 = (uint64_t *)((char *)&v52 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v14);
  v16 = (uint64_t *)((char *)&v52 - v15);
  v17 = *(_QWORD *)(a3 + 16);
  v18 = (a4 >> 3) & 0x1FFFFFFFFFFFFFF8;
  v19 = *(unint64_t *)((char *)a1 + v18) & ((-1 << a4) - 1);
  v55 = a1;
  *(unint64_t *)((char *)a1 + v18) = v19;
  v21 = v20;
  v22 = v17 - 1;
  v62 = a3 + 56;
  v56 = a5;
  v57 = v11;
  while (2)
  {
    v54 = v22;
    do
    {
      while (1)
      {
        v24 = *a5;
        v23 = a5[1];
        v25 = a5[2];
        v26 = a5[3];
        v27 = a5[4];
        v60 = v25;
        v61 = v23;
        if (v27)
        {
          v28 = (v27 - 1) & v27;
          v29 = __clz(__rbit64(v27)) | (v26 << 6);
LABEL_6:
          sub_1CA24EE38(*(_QWORD *)(v24 + 48) + *(_QWORD *)(v21 + 72) * v29, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for Song);
          v30 = 0;
          goto LABEL_7;
        }
        v44 = v26 + 1;
        if (__OFADD__(v26, 1))
        {
          __break(1u);
          goto LABEL_48;
        }
        v45 = (unint64_t)(v25 + 64) >> 6;
        if (v44 >= v45)
        {
          v28 = 0;
          v30 = 1;
          goto LABEL_7;
        }
        v46 = *(_QWORD *)(v23 + 8 * v44);
        if (v46)
          goto LABEL_20;
        v49 = v26 + 2;
        if (v26 + 2 >= v45)
          goto LABEL_40;
        v46 = *(_QWORD *)(v23 + 8 * v49);
        if (v46)
          goto LABEL_27;
        if (v26 + 3 >= v45)
          goto LABEL_41;
        v46 = *(_QWORD *)(v23 + 8 * (v26 + 3));
        if (v46)
        {
          v44 = v26 + 3;
LABEL_20:
          v28 = (v46 - 1) & v46;
          v29 = __clz(__rbit64(v46)) + (v44 << 6);
          v26 = v44;
          goto LABEL_6;
        }
        v49 = v26 + 4;
        if (v26 + 4 < v45)
        {
          v46 = *(_QWORD *)(v23 + 8 * v49);
          if (v46)
          {
LABEL_27:
            v44 = v49;
            goto LABEL_20;
          }
          v44 = v26 + 5;
          if (v26 + 5 < v45)
          {
            v46 = *(_QWORD *)(v23 + 8 * v44);
            if (v46)
              goto LABEL_20;
            v44 = v45 - 1;
            v50 = v26 + 6;
            while (v45 != v50)
            {
              v46 = *(_QWORD *)(v23 + 8 * v50++);
              if (v46)
              {
                v44 = v50 - 1;
                goto LABEL_20;
              }
            }
LABEL_40:
            v28 = 0;
            v30 = 1;
            v26 = v44;
            goto LABEL_7;
          }
LABEL_41:
          v28 = 0;
          v30 = 1;
          v26 = v49;
          goto LABEL_7;
        }
        v28 = 0;
        v30 = 1;
        v26 += 3;
LABEL_7:
        v31 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v21 + 56);
        v32 = v21;
        v33 = v59;
        v31(v11, v30, 1, v59);
        v34 = v61;
        *a5 = v24;
        a5[1] = v34;
        a5[2] = v60;
        a5[3] = v26;
        a5[4] = v28;
        v35 = v32;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v11, 1, v33) == 1)
        {
          sub_1CA267BE8((uint64_t)v11, &qword_1ED871D00);
          v51 = v58;
          swift_retain();
          sub_1CA3CDD30(v55, v53, v54, v51);
          return;
        }
        sub_1CA24EE7C((uint64_t)v11, (uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for Song);
        v36 = v58;
        sub_1CA85C368();
        swift_bridgeObjectRetain();
        sub_1CA85B4B0();
        swift_bridgeObjectRelease();
        v37 = sub_1CA85C3B0();
        v38 = -1 << *(_BYTE *)(v36 + 32);
        v39 = v37 & ~v38;
        if (((*(_QWORD *)(v62 + ((v39 >> 3) & 0xFFFFFFFFFFFFF8)) >> v39) & 1) != 0)
          break;
LABEL_3:
        sub_1CA2669CC((uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for Song);
        a5 = v56;
        v11 = v57;
        v21 = v35;
      }
      v40 = ~v38;
      v41 = *(_QWORD *)(v35 + 72);
      while (1)
      {
        sub_1CA24EE38(*(_QWORD *)(v36 + 48) + v41 * v39, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for Song);
        if (*v13 == *v16 && v13[1] == v16[1])
          break;
        v43 = sub_1CA85C284();
        sub_1CA2669CC((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for Song);
        if ((v43 & 1) != 0)
          goto LABEL_22;
        v39 = (v39 + 1) & v40;
        if (((*(_QWORD *)(v62 + ((v39 >> 3) & 0xFFFFFFFFFFFFF8)) >> v39) & 1) == 0)
          goto LABEL_3;
      }
      sub_1CA2669CC((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for Song);
LABEL_22:
      sub_1CA2669CC((uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for Song);
      v47 = (v39 >> 3) & 0x1FFFFFFFFFFFFFF8;
      a5 = v56;
      v48 = *(unint64_t *)((char *)v55 + v47);
      *(unint64_t *)((char *)v55 + v47) = v48 & ~(1 << v39);
      v11 = v57;
      v21 = v35;
    }
    while ((v48 & (1 << v39)) == 0);
    v22 = v54 - 1;
    if (__OFSUB__(v54, 1))
    {
LABEL_48:
      __break(1u);
      return;
    }
    if (v54 != 1)
      continue;
    break;
  }
}

uint64_t sub_1CA2DC828(uint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, _QWORD *a5)
{
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  int64_t v14;
  int64_t v15;
  uint64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  BOOL v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t i;
  unint64_t v33;
  _QWORD *v34;
  BOOL v35;
  int64_t v36;
  uint64_t v38;
  unint64_t *v39;
  uint64_t v40;

  v7 = *(_QWORD *)(a3 + 16);
  v39 = (unint64_t *)result;
  *(_QWORD *)(result + ((a4 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a4) - 1;
  v8 = v7 - 1;
  v40 = a3 + 56;
  while (2)
  {
    v38 = v8;
    do
    {
      while (1)
      {
        v9 = a5[3];
        v10 = a5[4];
        if (v10)
        {
          v11 = (v10 - 1) & v10;
          v12 = __clz(__rbit64(v10)) | (v9 << 6);
          goto LABEL_16;
        }
        v13 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
          __break(1u);
          goto LABEL_47;
        }
        v14 = (unint64_t)(a5[2] + 64) >> 6;
        v15 = a5[3];
        if (v13 >= v14)
          goto LABEL_45;
        v16 = a5[1];
        v17 = *(_QWORD *)(v16 + 8 * v13);
        if (!v17)
        {
          v18 = v9 + 2;
          v15 = v9 + 1;
          if (v9 + 2 >= v14)
            goto LABEL_45;
          v17 = *(_QWORD *)(v16 + 8 * v18);
          if (!v17)
          {
            v15 = v9 + 2;
            if (v9 + 3 >= v14)
              goto LABEL_45;
            v17 = *(_QWORD *)(v16 + 8 * (v9 + 3));
            if (v17)
            {
              v13 = v9 + 3;
              goto LABEL_15;
            }
            v18 = v9 + 4;
            v15 = v9 + 3;
            if (v9 + 4 >= v14)
              goto LABEL_45;
            v17 = *(_QWORD *)(v16 + 8 * v18);
            if (!v17)
            {
              v13 = v9 + 5;
              v15 = v9 + 4;
              if (v9 + 5 >= v14)
                goto LABEL_45;
              v17 = *(_QWORD *)(v16 + 8 * v13);
              if (!v17)
              {
                v15 = v14 - 1;
                v36 = v9 + 6;
                while (v14 != v36)
                {
                  v17 = *(_QWORD *)(v16 + 8 * v36++);
                  if (v17)
                  {
                    v13 = v36 - 1;
                    goto LABEL_15;
                  }
                }
LABEL_45:
                a5[3] = v15;
                a5[4] = 0;
                swift_retain();
                return sub_1CA3CD858(v39, a2, v38, a3);
              }
              goto LABEL_15;
            }
          }
          v13 = v18;
        }
LABEL_15:
        v11 = (v17 - 1) & v17;
        v12 = __clz(__rbit64(v17)) + (v13 << 6);
        v9 = v13;
LABEL_16:
        v19 = (uint64_t *)(*(_QWORD *)(*a5 + 56) + 16 * v12);
        v21 = *v19;
        v20 = v19[1];
        a5[3] = v9;
        a5[4] = v11;
        sub_1CA85C368();
        swift_bridgeObjectRetain();
        sub_1CA85B4B0();
        v22 = sub_1CA85C3B0();
        v23 = -1 << *(_BYTE *)(a3 + 32);
        v24 = v22 & ~v23;
        v25 = v24 >> 6;
        v26 = 1 << v24;
        if (((1 << v24) & *(_QWORD *)(v40 + 8 * (v24 >> 6))) == 0)
          goto LABEL_3;
        v27 = *(_QWORD *)(a3 + 48);
        v28 = (_QWORD *)(v27 + 16 * v24);
        v29 = *v28 == v21 && v28[1] == v20;
        if (v29 || (sub_1CA85C284() & 1) != 0)
          break;
        v31 = ~v23;
        for (i = v24 + 1; ; i = v33 + 1)
        {
          v33 = i & v31;
          if (((*(_QWORD *)(v40 + (((i & v31) >> 3) & 0xFFFFFFFFFFFFF8)) >> (i & v31)) & 1) == 0)
            break;
          v34 = (_QWORD *)(v27 + 16 * v33);
          v35 = *v34 == v21 && v34[1] == v20;
          if (v35 || (sub_1CA85C284() & 1) != 0)
          {
            result = swift_bridgeObjectRelease();
            v25 = v33 >> 6;
            v26 = 1 << v33;
            goto LABEL_23;
          }
        }
LABEL_3:
        result = swift_bridgeObjectRelease();
      }
      result = swift_bridgeObjectRelease();
LABEL_23:
      v30 = v39[v25];
      v39[v25] = v30 & ~v26;
    }
    while ((v26 & v30) == 0);
    v8 = v38 - 1;
    if (__OFSUB__(v38, 1))
    {
LABEL_47:
      __break(1u);
      return result;
    }
    if (v38 != 1)
      continue;
    return MEMORY[0x1E0DEE9E8];
  }
}

uint64_t sub_1CA2DCB1C(uint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, _QWORD *a5)
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  BOOL v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t i;
  unint64_t v26;
  _QWORD *v27;
  BOOL v28;
  unint64_t *v30;
  uint64_t v31;
  uint64_t v32;

  v6 = *(_QWORD *)(a3 + 16);
  *(_QWORD *)(result + ((a4 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a4) - 1;
  v30 = (unint64_t *)result;
  v31 = v6 - 1;
  v8 = *a5;
  v7 = a5[1];
  v9 = *(_QWORD *)(*a5 + 16);
  if (v7 == v9)
  {
LABEL_2:
    swift_retain();
    return sub_1CA3CD858(v30, a2, v31, a3);
  }
  v32 = a3 + 56;
  while ((v7 & 0x8000000000000000) == 0)
  {
    if (v7 >= v9)
      goto LABEL_29;
    v11 = v8 + 16 * v7;
    v13 = *(_QWORD *)(v11 + 32);
    v12 = *(_QWORD *)(v11 + 40);
    a5[1] = v7 + 1;
    sub_1CA85C368();
    swift_bridgeObjectRetain();
    sub_1CA85B4B0();
    v14 = sub_1CA85C3B0();
    v15 = -1 << *(_BYTE *)(a3 + 32);
    v16 = v14 & ~v15;
    v17 = v16 >> 6;
    v18 = 1 << v16;
    if (((1 << v16) & *(_QWORD *)(v32 + 8 * (v16 >> 6))) == 0)
      goto LABEL_4;
    v19 = *(_QWORD *)(a3 + 48);
    v20 = (_QWORD *)(v19 + 16 * v16);
    v21 = *v20 == v13 && v20[1] == v12;
    if (!v21 && (sub_1CA85C284() & 1) == 0)
    {
      v24 = ~v15;
      for (i = v16 + 1; ; i = v26 + 1)
      {
        v26 = i & v24;
        if (((*(_QWORD *)(v32 + (((i & v24) >> 3) & 0xFFFFFFFFFFFFF8)) >> (i & v24)) & 1) == 0)
          break;
        v27 = (_QWORD *)(v19 + 16 * v26);
        v28 = *v27 == v13 && v27[1] == v12;
        if (v28 || (sub_1CA85C284() & 1) != 0)
        {
          result = swift_bridgeObjectRelease();
          v17 = v26 >> 6;
          v18 = 1 << v26;
          goto LABEL_15;
        }
      }
LABEL_4:
      result = swift_bridgeObjectRelease();
      goto LABEL_5;
    }
    result = swift_bridgeObjectRelease();
LABEL_15:
    v22 = v30[v17];
    v30[v17] = v22 & ~v18;
    if ((v18 & v22) != 0)
    {
      v23 = v31 - 1;
      if (__OFSUB__(v31, 1))
        goto LABEL_30;
      --v31;
      if (!v23)
        return MEMORY[0x1E0DEE9E8];
    }
LABEL_5:
    v8 = *a5;
    v7 = a5[1];
    v9 = *(_QWORD *)(*a5 + 16);
    if (v7 == v9)
      goto LABEL_2;
  }
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1CA2DCD44(uint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, _QWORD *a5)
{
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  int64_t v14;
  int64_t v15;
  uint64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  BOOL v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t i;
  unint64_t v33;
  _QWORD *v34;
  BOOL v35;
  int64_t v36;
  uint64_t v38;
  unint64_t *v39;
  uint64_t v40;

  v7 = *(_QWORD *)(a3 + 16);
  v39 = (unint64_t *)result;
  *(_QWORD *)(result + ((a4 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a4) - 1;
  v8 = v7 - 1;
  v40 = a3 + 56;
  while (2)
  {
    v38 = v8;
    do
    {
      while (1)
      {
        v9 = a5[3];
        v10 = a5[4];
        if (v10)
        {
          v11 = (v10 - 1) & v10;
          v12 = __clz(__rbit64(v10)) | (v9 << 6);
          goto LABEL_16;
        }
        v13 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
          __break(1u);
          goto LABEL_47;
        }
        v14 = (unint64_t)(a5[2] + 64) >> 6;
        v15 = a5[3];
        if (v13 >= v14)
          goto LABEL_45;
        v16 = a5[1];
        v17 = *(_QWORD *)(v16 + 8 * v13);
        if (!v17)
        {
          v18 = v9 + 2;
          v15 = v9 + 1;
          if (v9 + 2 >= v14)
            goto LABEL_45;
          v17 = *(_QWORD *)(v16 + 8 * v18);
          if (!v17)
          {
            v15 = v9 + 2;
            if (v9 + 3 >= v14)
              goto LABEL_45;
            v17 = *(_QWORD *)(v16 + 8 * (v9 + 3));
            if (v17)
            {
              v13 = v9 + 3;
              goto LABEL_15;
            }
            v18 = v9 + 4;
            v15 = v9 + 3;
            if (v9 + 4 >= v14)
              goto LABEL_45;
            v17 = *(_QWORD *)(v16 + 8 * v18);
            if (!v17)
            {
              v13 = v9 + 5;
              v15 = v9 + 4;
              if (v9 + 5 >= v14)
                goto LABEL_45;
              v17 = *(_QWORD *)(v16 + 8 * v13);
              if (!v17)
              {
                v15 = v14 - 1;
                v36 = v9 + 6;
                while (v14 != v36)
                {
                  v17 = *(_QWORD *)(v16 + 8 * v36++);
                  if (v17)
                  {
                    v13 = v36 - 1;
                    goto LABEL_15;
                  }
                }
LABEL_45:
                a5[3] = v15;
                a5[4] = 0;
                swift_retain();
                return sub_1CA3CD858(v39, a2, v38, a3);
              }
              goto LABEL_15;
            }
          }
          v13 = v18;
        }
LABEL_15:
        v11 = (v17 - 1) & v17;
        v12 = __clz(__rbit64(v17)) + (v13 << 6);
        v9 = v13;
LABEL_16:
        v19 = (uint64_t *)(*(_QWORD *)(*a5 + 48) + 16 * v12);
        v21 = *v19;
        v20 = v19[1];
        a5[3] = v9;
        a5[4] = v11;
        sub_1CA85C368();
        swift_bridgeObjectRetain();
        sub_1CA85B4B0();
        v22 = sub_1CA85C3B0();
        v23 = -1 << *(_BYTE *)(a3 + 32);
        v24 = v22 & ~v23;
        v25 = v24 >> 6;
        v26 = 1 << v24;
        if (((1 << v24) & *(_QWORD *)(v40 + 8 * (v24 >> 6))) == 0)
          goto LABEL_3;
        v27 = *(_QWORD *)(a3 + 48);
        v28 = (_QWORD *)(v27 + 16 * v24);
        v29 = *v28 == v21 && v28[1] == v20;
        if (v29 || (sub_1CA85C284() & 1) != 0)
          break;
        v31 = ~v23;
        for (i = v24 + 1; ; i = v33 + 1)
        {
          v33 = i & v31;
          if (((*(_QWORD *)(v40 + (((i & v31) >> 3) & 0xFFFFFFFFFFFFF8)) >> (i & v31)) & 1) == 0)
            break;
          v34 = (_QWORD *)(v27 + 16 * v33);
          v35 = *v34 == v21 && v34[1] == v20;
          if (v35 || (sub_1CA85C284() & 1) != 0)
          {
            result = swift_bridgeObjectRelease();
            v25 = v33 >> 6;
            v26 = 1 << v33;
            goto LABEL_23;
          }
        }
LABEL_3:
        result = swift_bridgeObjectRelease();
      }
      result = swift_bridgeObjectRelease();
LABEL_23:
      v30 = v39[v25];
      v39[v25] = v30 & ~v26;
    }
    while ((v26 & v30) == 0);
    v8 = v38 - 1;
    if (__OFSUB__(v38, 1))
    {
LABEL_47:
      __break(1u);
      return result;
    }
    if (v38 != 1)
      continue;
    return MEMORY[0x1E0DEE9E8];
  }
}

void sub_1CA2DD038(unint64_t *a1, uint64_t a2, uint64_t a3, unint64_t a4, _QWORD *a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int64_t v43;
  int64_t v44;
  unint64_t v45;
  void (*v46)(uint64_t, uint64_t, uint64_t, int *);
  uint64_t v47;
  int *v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  unsigned int (*v54)(uint64_t, uint64_t, uint64_t);
  uint64_t v55;
  uint64_t v56;
  char *v57;
  void (*v58)(char *, uint64_t);
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  char v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unsigned int (*v76)(uint64_t, uint64_t, uint64_t);
  uint64_t v77;
  uint64_t v78;
  char *v79;
  void (*v80)(char *, uint64_t);
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  _QWORD *v85;
  uint64_t v86;
  _QWORD *v87;
  uint64_t v88;
  char v89;
  int64_t v90;
  uint64_t v91;
  uint64_t v92;
  int64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  unint64_t *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  _QWORD *v102;
  char *v103;
  uint64_t v104;
  char *v105;
  int v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  unsigned int (*v111)(uint64_t, uint64_t, uint64_t);
  uint64_t v112;
  _QWORD *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  int *v118;
  uint64_t v119;
  uint64_t v120;

  v102 = a5;
  v96 = a2;
  v110 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8744C0);
  MEMORY[0x1E0C80A78](v110);
  v120 = (uint64_t)&v95 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v112 = sub_1CA85A5B0();
  v108 = *(_QWORD *)(v112 - 8);
  MEMORY[0x1E0C80A78](v112);
  v103 = (char *)&v95 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8711C0);
  MEMORY[0x1E0C80A78](v10);
  v109 = (uint64_t)&v95 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v99 = (uint64_t)&v95 - v13;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED872D30);
  MEMORY[0x1E0C80A78](v14);
  v100 = (uint64_t)&v95 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v118 = (int *)type metadata accessor for SongSource();
  v16 = *((_QWORD *)v118 - 1);
  MEMORY[0x1E0C80A78](v118);
  v105 = (char *)&v95 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  MEMORY[0x1E0C80A78](v19);
  v119 = (uint64_t)&v95 - v20;
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)&v95 - v22;
  MEMORY[0x1E0C80A78](v24);
  v26 = (uint64_t *)((char *)&v95 - v25);
  MEMORY[0x1E0C80A78](v27);
  v113 = (uint64_t *)((char *)&v95 - v28);
  v29 = *(_QWORD *)(a3 + 16);
  v30 = (a4 >> 3) & 0x1FFFFFFFFFFFFFF8;
  v31 = *(unint64_t *)((char *)a1 + v30) & ((-1 << a4) - 1);
  v98 = a1;
  *(unint64_t *)((char *)a1 + v30) = v31;
  v32 = v29 - 1;
  v116 = a3 + 56;
  v117 = a3;
  v107 = v23;
  v101 = v16;
  v104 = v33;
  do
  {
    v97 = v32;
    do
    {
      while (1)
      {
        v35 = *v102;
        v34 = v102[1];
        v37 = v102[2];
        v36 = v102[3];
        v38 = v102[4];
        v115 = v37;
        if (v38)
        {
          v39 = (v38 - 1) & v38;
          v40 = __clz(__rbit64(v38)) | (v36 << 6);
LABEL_6:
          v41 = v100;
          sub_1CA24EE38(*(_QWORD *)(v35 + 48) + *(_QWORD *)(v16 + 72) * v40, v100, (uint64_t (*)(_QWORD))type metadata accessor for SongSource);
          v42 = 0;
          goto LABEL_13;
        }
        v43 = v36 + 1;
        if (__OFADD__(v36, 1))
        {
          __break(1u);
LABEL_83:
          __break(1u);
          return;
        }
        v44 = (unint64_t)(v37 + 64) >> 6;
        if (v43 >= v44)
        {
          v39 = 0;
          v42 = 1;
        }
        else
        {
          v45 = *(_QWORD *)(v34 + 8 * v43);
          if (v45)
            goto LABEL_10;
          v90 = v36 + 2;
          if (v36 + 2 < v44)
          {
            v45 = *(_QWORD *)(v34 + 8 * v90);
            if (v45)
              goto LABEL_59;
            if (v36 + 3 >= v44)
              goto LABEL_76;
            v45 = *(_QWORD *)(v34 + 8 * (v36 + 3));
            if (v45)
            {
              v43 = v36 + 3;
              goto LABEL_10;
            }
            v90 = v36 + 4;
            if (v36 + 4 >= v44)
            {
              v39 = 0;
              v42 = 1;
              v36 += 3;
              goto LABEL_12;
            }
            v45 = *(_QWORD *)(v34 + 8 * v90);
            if (v45)
            {
LABEL_59:
              v43 = v90;
LABEL_10:
              v39 = (v45 - 1) & v45;
              v40 = __clz(__rbit64(v45)) + (v43 << 6);
              v36 = v43;
              goto LABEL_6;
            }
            v43 = v36 + 5;
            if (v36 + 5 >= v44)
            {
LABEL_76:
              v39 = 0;
              v42 = 1;
              v36 = v90;
              goto LABEL_12;
            }
            v45 = *(_QWORD *)(v34 + 8 * v43);
            if (v45)
              goto LABEL_10;
            v43 = v44 - 1;
            v93 = v36 + 6;
            while (v44 != v93)
            {
              v45 = *(_QWORD *)(v34 + 8 * v93++);
              if (v45)
              {
                v43 = v93 - 1;
                goto LABEL_10;
              }
            }
          }
          v39 = 0;
          v42 = 1;
          v36 = v43;
        }
LABEL_12:
        v41 = v100;
LABEL_13:
        v46 = *(void (**)(uint64_t, uint64_t, uint64_t, int *))(v16 + 56);
        v47 = v16;
        v48 = v118;
        v46(v41, v42, 1, v118);
        v49 = v102;
        *v102 = v35;
        v49[1] = v34;
        v49[2] = v115;
        v49[3] = v36;
        v49[4] = v39;
        if ((*(unsigned int (**)(uint64_t, uint64_t, int *))(v47 + 48))(v41, 1, v48) == 1)
        {
          sub_1CA267BE8(v41, &qword_1ED872D30);
          v94 = v117;
          swift_retain();
          sub_1CA3CE040(v98, v96, v97, v94);
          return;
        }
        v50 = (uint64_t)v113;
        sub_1CA24EE7C(v41, (uint64_t)v113, (uint64_t (*)(_QWORD))type metadata accessor for SongSource);
        sub_1CA85C368();
        swift_bridgeObjectRetain();
        sub_1CA85B4B0();
        swift_bridgeObjectRelease();
        if (*(_QWORD *)(v50 + v48[11] + 8))
        {
          sub_1CA85C380();
          swift_bridgeObjectRetain();
          sub_1CA85B4B0();
          swift_bridgeObjectRelease();
        }
        else
        {
          sub_1CA85C380();
        }
        v51 = (uint64_t)v105;
        v52 = v113;
        v53 = v99;
        sub_1CA29377C((uint64_t)v113 + v118[7], v99);
        v54 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v108 + 48);
        v55 = v112;
        if (v54(v53, 1, v112) == 1)
        {
          sub_1CA85C380();
        }
        else
        {
          v56 = v108;
          v57 = v103;
          (*(void (**)(char *, uint64_t, uint64_t))(v108 + 32))(v103, v53, v55);
          sub_1CA85C380();
          sub_1CA2DF104((unint64_t *)&qword_1ED871190, MEMORY[0x1E0CB08A8]);
          sub_1CA85B4A4();
          v58 = *(void (**)(char *, uint64_t))(v56 + 8);
          v23 = v107;
          v58(v57, v55);
        }
        v59 = v104;
        if (*(_QWORD *)((char *)v52 + v118[8] + 8))
        {
          sub_1CA85C380();
          swift_bridgeObjectRetain();
          sub_1CA85B4B0();
          swift_bridgeObjectRelease();
        }
        else
        {
          sub_1CA85C380();
        }
        if (*(_QWORD *)((char *)v52 + v118[12] + 8))
        {
          sub_1CA85C380();
          swift_bridgeObjectRetain();
          sub_1CA85B4B0();
          swift_bridgeObjectRelease();
        }
        else
        {
          sub_1CA85C380();
        }
        v60 = v119;
        v61 = sub_1CA85C3B0();
        v62 = -1 << *(_BYTE *)(v117 + 32);
        v63 = v61 & ~v62;
        if (((*(_QWORD *)(v116 + ((v63 >> 3) & 0xFFFFFFFFFFFFF8)) >> v63) & 1) != 0)
          break;
LABEL_3:
        sub_1CA2669CC((uint64_t)v52, (uint64_t (*)(_QWORD))type metadata accessor for SongSource);
        v16 = v101;
      }
      v114 = ~v62;
      v115 = *(_QWORD *)(v101 + 72);
      v111 = v54;
      while (1)
      {
        sub_1CA24EE38(*(_QWORD *)(v117 + 48) + v115 * v63, (uint64_t)v26, (uint64_t (*)(_QWORD))type metadata accessor for SongSource);
        if (*v26 == *v52 && v26[1] == v52[1])
        {
          sub_1CA24EE38((uint64_t)v26, (uint64_t)v23, (uint64_t (*)(_QWORD))type metadata accessor for SongSource);
          sub_1CA24EE38((uint64_t)v52, v60, (uint64_t (*)(_QWORD))type metadata accessor for SongSource);
        }
        else
        {
          v65 = sub_1CA85C284();
          sub_1CA24EE38((uint64_t)v26, (uint64_t)v23, (uint64_t (*)(_QWORD))type metadata accessor for SongSource);
          sub_1CA24EE38((uint64_t)v52, v60, (uint64_t (*)(_QWORD))type metadata accessor for SongSource);
          if ((v65 & 1) == 0)
          {
            sub_1CA2669CC(v60, (uint64_t (*)(_QWORD))type metadata accessor for SongSource);
            sub_1CA2669CC((uint64_t)v23, (uint64_t (*)(_QWORD))type metadata accessor for SongSource);
            goto LABEL_29;
          }
        }
        v66 = (uint64_t)v26;
        v67 = v118[7];
        v68 = (uint64_t)&v23[v67];
        v69 = (uint64_t)v23;
        v70 = v60;
        v71 = v60 + v67;
        v72 = v120;
        v73 = v120 + *(int *)(v110 + 48);
        sub_1CA29377C(v68, v120);
        sub_1CA29377C(v71, v73);
        v74 = v72;
        v76 = v111;
        v75 = v112;
        if (v111(v74, 1, v112) == 1)
        {
          sub_1CA2669CC(v70, (uint64_t (*)(_QWORD))type metadata accessor for SongSource);
          sub_1CA2669CC(v69, (uint64_t (*)(_QWORD))type metadata accessor for SongSource);
          v23 = (char *)v69;
          if (v76(v73, 1, v75) != 1)
            goto LABEL_45;
          sub_1CA267BE8(v120, &qword_1ED8711C0);
          v26 = (_QWORD *)v66;
          sub_1CA24EE38(v66, v59, (uint64_t (*)(_QWORD))type metadata accessor for SongSource);
          v52 = v113;
          sub_1CA24EE38((uint64_t)v113, v51, (uint64_t (*)(_QWORD))type metadata accessor for SongSource);
          goto LABEL_47;
        }
        sub_1CA29377C(v120, v109);
        if (v76(v73, 1, v75) == 1)
        {
          sub_1CA2669CC(v119, (uint64_t (*)(_QWORD))type metadata accessor for SongSource);
          v23 = v107;
          sub_1CA2669CC((uint64_t)v107, (uint64_t (*)(_QWORD))type metadata accessor for SongSource);
          (*(void (**)(uint64_t, uint64_t))(v108 + 8))(v109, v75);
LABEL_45:
          sub_1CA267BE8(v120, &qword_1ED8744C0);
          v26 = (_QWORD *)v66;
          v52 = v113;
LABEL_29:
          sub_1CA24EE38((uint64_t)v26, v59, (uint64_t (*)(_QWORD))type metadata accessor for SongSource);
          sub_1CA24EE38((uint64_t)v52, v51, (uint64_t (*)(_QWORD))type metadata accessor for SongSource);
LABEL_30:
          sub_1CA2669CC(v51, (uint64_t (*)(_QWORD))type metadata accessor for SongSource);
          sub_1CA2669CC(v59, (uint64_t (*)(_QWORD))type metadata accessor for SongSource);
LABEL_31:
          sub_1CA2669CC((uint64_t)v26, (uint64_t (*)(_QWORD))type metadata accessor for SongSource);
          goto LABEL_32;
        }
        v77 = v108;
        v78 = v109;
        v79 = v103;
        (*(void (**)(char *, uint64_t, uint64_t))(v108 + 32))(v103, v73, v75);
        sub_1CA2DF104((unint64_t *)&unk_1ED8711B0, MEMORY[0x1E0CB08B8]);
        v106 = sub_1CA85B504();
        v80 = *(void (**)(char *, uint64_t))(v77 + 8);
        v81 = v79;
        v82 = v120;
        v80(v81, v75);
        sub_1CA2669CC(v119, (uint64_t (*)(_QWORD))type metadata accessor for SongSource);
        v83 = (uint64_t)v107;
        sub_1CA2669CC((uint64_t)v107, (uint64_t (*)(_QWORD))type metadata accessor for SongSource);
        v80((char *)v78, v75);
        v23 = (char *)v83;
        v59 = v104;
        v51 = (uint64_t)v105;
        sub_1CA267BE8(v82, &qword_1ED8711C0);
        v26 = (_QWORD *)v66;
        sub_1CA24EE38(v66, v59, (uint64_t (*)(_QWORD))type metadata accessor for SongSource);
        v52 = v113;
        sub_1CA24EE38((uint64_t)v113, v51, (uint64_t (*)(_QWORD))type metadata accessor for SongSource);
        if ((v106 & 1) == 0)
          goto LABEL_30;
LABEL_47:
        v84 = v118[8];
        v85 = (_QWORD *)(v59 + v84);
        v86 = *(_QWORD *)(v59 + v84 + 8);
        v87 = (_QWORD *)(v51 + v84);
        v88 = v87[1];
        if (!v86)
        {
          swift_bridgeObjectRetain();
          sub_1CA2669CC(v51, (uint64_t (*)(_QWORD))type metadata accessor for SongSource);
          sub_1CA2669CC(v59, (uint64_t (*)(_QWORD))type metadata accessor for SongSource);
          if (!v88)
            goto LABEL_61;
          goto LABEL_56;
        }
        if (!v88)
        {
          swift_bridgeObjectRetain();
          sub_1CA2669CC(v51, (uint64_t (*)(_QWORD))type metadata accessor for SongSource);
          sub_1CA2669CC(v59, (uint64_t (*)(_QWORD))type metadata accessor for SongSource);
LABEL_56:
          swift_bridgeObjectRelease();
          goto LABEL_31;
        }
        if (*v85 == *v87 && v86 == v88)
          break;
        v89 = sub_1CA85C284();
        swift_bridgeObjectRetain();
        sub_1CA2669CC(v51, (uint64_t (*)(_QWORD))type metadata accessor for SongSource);
        sub_1CA2669CC(v59, (uint64_t (*)(_QWORD))type metadata accessor for SongSource);
        swift_bridgeObjectRelease();
        sub_1CA2669CC((uint64_t)v26, (uint64_t (*)(_QWORD))type metadata accessor for SongSource);
        if ((v89 & 1) != 0)
          goto LABEL_62;
LABEL_32:
        v63 = (v63 + 1) & v114;
        v60 = v119;
        if (((*(_QWORD *)(v116 + ((v63 >> 3) & 0xFFFFFFFFFFFFF8)) >> v63) & 1) == 0)
          goto LABEL_3;
      }
      swift_bridgeObjectRetain();
      sub_1CA2669CC(v51, (uint64_t (*)(_QWORD))type metadata accessor for SongSource);
      sub_1CA2669CC(v59, (uint64_t (*)(_QWORD))type metadata accessor for SongSource);
      swift_bridgeObjectRelease();
LABEL_61:
      sub_1CA2669CC((uint64_t)v26, (uint64_t (*)(_QWORD))type metadata accessor for SongSource);
LABEL_62:
      sub_1CA2669CC((uint64_t)v52, (uint64_t (*)(_QWORD))type metadata accessor for SongSource);
      v91 = (v63 >> 3) & 0x1FFFFFFFFFFFFFF8;
      v92 = *(unint64_t *)((char *)v98 + v91);
      *(unint64_t *)((char *)v98 + v91) = v92 & ~(1 << v63);
      v16 = v101;
    }
    while ((v92 & (1 << v63)) == 0);
    v32 = v97 - 1;
    if (__OFSUB__(v97, 1))
      goto LABEL_83;
  }
  while (v97 != 1);
}

void sub_1CA2DDC68(unint64_t *a1, uint64_t a2, uint64_t a3, unint64_t a4, _QWORD *a5)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t);
  uint64_t v26;
  void (*v27)(char *, unint64_t, uint64_t, __n128);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t *v39;
  uint64_t v40;
  void (*v41)(char *, uint64_t, uint64_t, uint64_t, __n128);
  _QWORD *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;

  v38 = a2;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8711C0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1CA85A5B0();
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x1E0C80A78](v15);
  v19 = *(_QWORD *)(a3 + 16);
  *(unint64_t *)((char *)a1 + ((a4 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a4) - 1;
  v39 = a1;
  v40 = v19 - 1;
  v20 = *a5;
  v21 = a5[1];
  v22 = *(_QWORD *)(*a5 + 16);
  if (v21 == v22)
  {
    v23 = v38;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v17 + 56))(v11, 1, 1, v12, v18);
LABEL_21:
    sub_1CA267BE8((uint64_t)v11, &qword_1ED8711C0);
    swift_retain();
    sub_1CA3CE7DC(v39, v23, v40, a3);
    return;
  }
  v44 = a3 + 56;
  v45 = v17;
  v24 = v17;
  v42 = a5;
  v43 = v11;
  v46 = (char *)&v37 - v16;
  while (v21 < v22)
  {
    v26 = *(_QWORD *)(v24 + 72);
    v27 = *(void (**)(char *, unint64_t, uint64_t, __n128))(v24 + 16);
    v27(v11, v20 + ((*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80)) + v26 * v21, v12, v18);
    a5[1] = v21 + 1;
    v41 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v24 + 56);
    ((void (*)(char *, _QWORD, uint64_t, uint64_t))v41)(v11, 0, 1, v12);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v11, 1, v12) == 1)
    {
      v23 = v38;
      goto LABEL_21;
    }
    (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v46, v11, v12);
    sub_1CA2DF104((unint64_t *)&qword_1ED871190, MEMORY[0x1E0CB08A8]);
    v28 = sub_1CA85B498();
    v29 = a3;
    v30 = -1 << *(_BYTE *)(a3 + 32);
    v31 = v28 & ~v30;
    if (((*(_QWORD *)(v44 + ((v31 >> 3) & 0xFFFFFFFFFFFFF8)) >> v31) & 1) == 0)
    {
      v25 = *(void (**)(char *, uint64_t))(v24 + 8);
LABEL_5:
      v25(v46, v12);
LABEL_6:
      a3 = v29;
      v24 = v45;
      goto LABEL_7;
    }
    v32 = ~v30;
    while (1)
    {
      ((void (*)(char *, unint64_t, uint64_t))v27)(v14, *(_QWORD *)(v29 + 48) + v31 * v26, v12);
      sub_1CA2DF104((unint64_t *)&unk_1ED8711B0, MEMORY[0x1E0CB08B8]);
      v33 = sub_1CA85B504();
      v25 = *(void (**)(char *, uint64_t))(v45 + 8);
      v25(v14, v12);
      if ((v33 & 1) != 0)
        break;
      v31 = (v31 + 1) & v32;
      if (((*(_QWORD *)(v44 + ((v31 >> 3) & 0xFFFFFFFFFFFFF8)) >> v31) & 1) == 0)
        goto LABEL_5;
    }
    v25(v46, v12);
    v34 = (v31 >> 3) & 0x1FFFFFFFFFFFFFF8;
    v35 = *(unint64_t *)((char *)v39 + v34);
    *(unint64_t *)((char *)v39 + v34) = v35 & ~(1 << v31);
    if ((v35 & (1 << v31)) == 0)
      goto LABEL_6;
    v36 = v40 - 1;
    v24 = v45;
    if (__OFSUB__(v40, 1))
      goto LABEL_23;
    a3 = v29;
    --v40;
    if (!v36)
      return;
LABEL_7:
    a5 = v42;
    v11 = v43;
    v20 = *v42;
    v21 = v42[1];
    v22 = *(_QWORD *)(*v42 + 16);
    if (v21 == v22)
    {
      v23 = v38;
      v41(v43, 1, 1, v12, v18);
      goto LABEL_21;
    }
  }
  __break(1u);
LABEL_23:
  __break(1u);
}

uint64_t sub_1CA2DDFF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  unint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    v3 = a3;
    v5 = a2;
    v6 = a1;
    v7 = *v4;
    if (!(*v4 >> 62))
    {
      if (*(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10) >= a2)
        goto LABEL_4;
LABEL_31:
      __break(1u);
      goto LABEL_32;
    }
  }
  swift_bridgeObjectRetain();
  v23 = sub_1CA85C08C();
  swift_bridgeObjectRelease();
  if (v23 < v5)
    goto LABEL_31;
LABEL_4:
  v9 = v5 - v6;
  if (__OFSUB__(v5, v6))
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  v8 = 1 - v9;
  if (__OFSUB__(1, v9))
  {
LABEL_33:
    __break(1u);
LABEL_34:
    swift_bridgeObjectRetain();
    v10 = sub_1CA85C08C();
    swift_bridgeObjectRelease();
    v11 = v10 + v8;
    if (!__OFADD__(v10, v8))
      goto LABEL_8;
LABEL_36:
    __break(1u);
LABEL_37:
    swift_bridgeObjectRetain();
    v14 = sub_1CA85C08C();
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  v7 = *v4;
  if (*v4 >> 62)
    goto LABEL_34;
  v10 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
  v11 = v10 + v8;
  if (__OFADD__(v10, v8))
    goto LABEL_36;
LABEL_8:
  v7 = *v4;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v4 = v7;
  v10 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v7 & 0x8000000000000000) == 0 && (v7 & 0x4000000000000000) == 0)
  {
    v13 = v7 & 0xFFFFFFFFFFFFFF8;
    if (v11 <= *(_QWORD *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_18;
    v10 = 1;
  }
  if (v7 >> 62)
    goto LABEL_37;
  v14 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_15:
  if (v14 <= v11)
    v14 = v11;
  swift_bridgeObjectRetain();
  v7 = MEMORY[0x1CAA4DD70](v10, v14, 1, v7);
  swift_bridgeObjectRelease();
  *v4 = v7;
  v13 = v7 & 0xFFFFFFFFFFFFFF8;
LABEL_18:
  v15 = (_QWORD *)(v13 + 32 + 8 * v6);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94CD20);
  swift_arrayDestroy();
  if (!v8)
  {
LABEL_28:
    *v15 = v3;
    return sub_1CA85B7C8();
  }
  if (!(v7 >> 62))
  {
    v16 = *(_QWORD *)(v13 + 16);
    v17 = v16 - v5;
    if (!__OFSUB__(v16, v5))
      goto LABEL_21;
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  swift_bridgeObjectRetain();
  v24 = sub_1CA85C08C();
  swift_bridgeObjectRelease();
  v17 = v24 - v5;
  if (__OFSUB__(v24, v5))
    goto LABEL_40;
LABEL_21:
  if ((v17 & 0x8000000000000000) == 0)
  {
    v18 = (char *)(v15 + 1);
    v19 = (char *)(v13 + 32 + 8 * v5);
    if (v15 + 1 != (_QWORD *)v19 || v18 >= &v19[8 * v17])
      memmove(v18, v19, 8 * v17);
    if (!(v7 >> 62))
    {
      v20 = *(_QWORD *)(v13 + 16);
      v21 = v20 + v8;
      if (!__OFADD__(v20, v8))
      {
LABEL_27:
        *(_QWORD *)(v13 + 16) = v21;
        goto LABEL_28;
      }
      goto LABEL_43;
    }
LABEL_41:
    swift_bridgeObjectRetain();
    v25 = sub_1CA85C08C();
    swift_bridgeObjectRelease();
    v21 = v25 + v8;
    if (!__OFADD__(v25, v8))
      goto LABEL_27;
LABEL_43:
    __break(1u);
  }
  result = sub_1CA85C0D4();
  __break(1u);
  return result;
}

uint64_t sub_1CA2DE2CC(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;

  if (!*(_QWORD *)(*(_QWORD *)v1 + 16))
    return result;
  v2 = result;
  v3 = result + 56;
  v4 = 1 << *(_BYTE *)(result + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(result + 56);
  v7 = (unint64_t)(v4 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v8 = 0;
  while (1)
  {
    if (v6)
    {
      v9 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v10 = v9 | (v8 << 6);
      goto LABEL_6;
    }
    v11 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v11 >= v7)
      return swift_release();
    v12 = *(_QWORD *)(v3 + 8 * v11);
    ++v8;
    if (!v12)
    {
      v8 = v11 + 1;
      if (v11 + 1 >= v7)
        return swift_release();
      v12 = *(_QWORD *)(v3 + 8 * v8);
      if (!v12)
      {
        v8 = v11 + 2;
        if (v11 + 2 >= v7)
          return swift_release();
        v12 = *(_QWORD *)(v3 + 8 * v8);
        if (!v12)
        {
          v8 = v11 + 3;
          if (v11 + 3 >= v7)
            return swift_release();
          v12 = *(_QWORD *)(v3 + 8 * v8);
          if (!v12)
            break;
        }
      }
    }
LABEL_23:
    v6 = (v12 - 1) & v12;
    v10 = __clz(__rbit64(v12)) + (v8 << 6);
LABEL_6:
    result = sub_1CA292064(*(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v10));
  }
  v13 = v11 + 4;
  if (v13 >= v7)
    return swift_release();
  v12 = *(_QWORD *)(v3 + 8 * v13);
  if (v12)
  {
    v8 = v13;
    goto LABEL_23;
  }
  while (1)
  {
    v8 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v8 >= v7)
      return swift_release();
    v12 = *(_QWORD *)(v3 + 8 * v8);
    ++v13;
    if (v12)
      goto LABEL_23;
  }
LABEL_27:
  __break(1u);
  return result;
}

void sub_1CA2DE42C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  char v38;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v40;
  uint64_t v41;
  int64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  int64_t v50;
  uint64_t v51;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED871D00);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = type metadata accessor for Song();
  v7 = *(_QWORD *)(v48 - 8);
  MEMORY[0x1E0C80A78](v48);
  v9 = (uint64_t *)((char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v10);
  v12 = (uint64_t *)((char *)&v41 - v11);
  MEMORY[0x1E0C80A78](v13);
  v47 = (uint64_t)&v41 - v14;
  if (!*(_QWORD *)(*v2 + 16))
    return;
  v15 = *(_QWORD *)(a1 + 56);
  v41 = a1 + 56;
  v16 = 1 << *(_BYTE *)(a1 + 32);
  if (v16 < 64)
    v17 = ~(-1 << v16);
  else
    v17 = -1;
  v18 = v17 & v15;
  v42 = (unint64_t)(v16 + 63) >> 6;
  swift_bridgeObjectRetain();
  v19 = 0;
  v44 = v6;
  v45 = v2;
  v46 = a1;
  v43 = v7;
  while (1)
  {
    if (v18)
    {
      v22 = __clz(__rbit64(v18));
      v23 = (v18 - 1) & v18;
      v50 = v19;
      v24 = v22 | (v19 << 6);
      goto LABEL_26;
    }
    v25 = v19 + 1;
    if (__OFADD__(v19, 1))
    {
      __break(1u);
      goto LABEL_42;
    }
    if (v25 >= v42)
      goto LABEL_39;
    v26 = *(_QWORD *)(v41 + 8 * v25);
    v27 = v19 + 1;
    if (!v26)
    {
      v27 = v19 + 2;
      if (v19 + 2 >= v42)
        goto LABEL_39;
      v26 = *(_QWORD *)(v41 + 8 * v27);
      if (!v26)
      {
        v27 = v19 + 3;
        if (v19 + 3 >= v42)
          goto LABEL_39;
        v26 = *(_QWORD *)(v41 + 8 * v27);
        if (!v26)
        {
          v27 = v19 + 4;
          if (v19 + 4 >= v42)
            goto LABEL_39;
          v26 = *(_QWORD *)(v41 + 8 * v27);
          if (!v26)
            break;
        }
      }
    }
LABEL_25:
    v23 = (v26 - 1) & v26;
    v50 = v27;
    v24 = __clz(__rbit64(v26)) + (v27 << 6);
LABEL_26:
    v49 = v23;
    v29 = *(_QWORD *)(v7 + 72);
    v30 = *(_QWORD *)(a1 + 48) + v29 * v24;
    v31 = v47;
    sub_1CA24EE38(v30, v47, (uint64_t (*)(_QWORD))type metadata accessor for Song);
    sub_1CA24EE7C(v31, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for Song);
    v32 = *v2;
    sub_1CA85C368();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1CA85B4B0();
    swift_bridgeObjectRelease();
    v33 = sub_1CA85C3B0();
    v34 = -1 << *(_BYTE *)(v32 + 32);
    v35 = v33 & ~v34;
    if (((*(_QWORD *)(v32 + 56 + ((v35 >> 3) & 0xFFFFFFFFFFFFF8)) >> v35) & 1) != 0)
    {
      v36 = ~v34;
      while (1)
      {
        sub_1CA24EE38(*(_QWORD *)(v32 + 48) + v35 * v29, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for Song);
        if (*v9 == *v12 && v9[1] == v12[1])
          break;
        v38 = sub_1CA85C284();
        sub_1CA2669CC((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for Song);
        if ((v38 & 1) != 0)
          goto LABEL_36;
        v35 = (v35 + 1) & v36;
        if (((*(_QWORD *)(v32 + 56 + ((v35 >> 3) & 0xFFFFFFFFFFFFF8)) >> v35) & 1) == 0)
          goto LABEL_6;
      }
      sub_1CA2669CC((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for Song);
LABEL_36:
      swift_bridgeObjectRelease();
      v2 = v45;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v40 = *v2;
      v51 = *v2;
      *v2 = 0x8000000000000000;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_1CA362A74();
        v40 = v51;
      }
      v21 = (uint64_t)v44;
      sub_1CA24EE7C(*(_QWORD *)(v40 + 48) + v35 * v29, (uint64_t)v44, (uint64_t (*)(_QWORD))type metadata accessor for Song);
      sub_1CA292A6C(v35);
      *v2 = v51;
      swift_bridgeObjectRelease();
      v20 = 0;
    }
    else
    {
LABEL_6:
      swift_bridgeObjectRelease();
      v20 = 1;
      v21 = (uint64_t)v44;
      v2 = v45;
    }
    v7 = v43;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v43 + 56))(v21, v20, 1, v48);
    sub_1CA267BE8(v21, &qword_1ED871D00);
    sub_1CA2669CC((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for Song);
    a1 = v46;
    v18 = v49;
    v19 = v50;
  }
  v28 = v19 + 5;
  if (v19 + 5 >= v42)
  {
LABEL_39:
    swift_release();
    return;
  }
  v26 = *(_QWORD *)(v41 + 8 * v28);
  if (v26)
  {
    v27 = v19 + 5;
    goto LABEL_25;
  }
  while (1)
  {
    v27 = v28 + 1;
    if (__OFADD__(v28, 1))
      break;
    if (v27 >= v42)
      goto LABEL_39;
    v26 = *(_QWORD *)(v41 + 8 * v27);
    ++v28;
    if (v26)
      goto LABEL_25;
  }
LABEL_42:
  __break(1u);
}

uint64_t sub_1CA2DE864(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;

  if (!*(_QWORD *)(*(_QWORD *)v1 + 16))
    return result;
  v2 = result;
  v3 = result + 56;
  v4 = 1 << *(_BYTE *)(result + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(result + 56);
  v7 = (unint64_t)(v4 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v8 = 0;
  while (1)
  {
    if (v6)
    {
      v9 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v10 = v9 | (v8 << 6);
      goto LABEL_6;
    }
    v14 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v14 >= v7)
      return swift_release();
    v15 = *(_QWORD *)(v3 + 8 * v14);
    ++v8;
    if (!v15)
    {
      v8 = v14 + 1;
      if (v14 + 1 >= v7)
        return swift_release();
      v15 = *(_QWORD *)(v3 + 8 * v8);
      if (!v15)
      {
        v8 = v14 + 2;
        if (v14 + 2 >= v7)
          return swift_release();
        v15 = *(_QWORD *)(v3 + 8 * v8);
        if (!v15)
        {
          v8 = v14 + 3;
          if (v14 + 3 >= v7)
            return swift_release();
          v15 = *(_QWORD *)(v3 + 8 * v8);
          if (!v15)
            break;
        }
      }
    }
LABEL_23:
    v6 = (v15 - 1) & v15;
    v10 = __clz(__rbit64(v15)) + (v8 << 6);
LABEL_6:
    v11 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v10);
    v12 = *v11;
    v13 = v11[1];
    swift_bridgeObjectRetain();
    sub_1CA291EB8(v12, v13);
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
  }
  v16 = v14 + 4;
  if (v16 >= v7)
    return swift_release();
  v15 = *(_QWORD *)(v3 + 8 * v16);
  if (v15)
  {
    v8 = v16;
    goto LABEL_23;
  }
  while (1)
  {
    v8 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v8 >= v7)
      return swift_release();
    v15 = *(_QWORD *)(v3 + 8 * v8);
    ++v16;
    if (v15)
      goto LABEL_23;
  }
LABEL_27:
  __break(1u);
  return result;
}

void sub_1CA2DE9F8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  int64_t v17;
  int64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t v25;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED872D30);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for SongSource();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (uint64_t *)((char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v24 - v11;
  if (!*(_QWORD *)(*(_QWORD *)v1 + 16))
    return;
  v13 = *(_QWORD *)(a1 + 56);
  v25 = a1 + 56;
  v14 = 1 << *(_BYTE *)(a1 + 32);
  v15 = -1;
  if (v14 < 64)
    v15 = ~(-1 << v14);
  v16 = v15 & v13;
  v17 = (unint64_t)(v14 + 63) >> 6;
  swift_bridgeObjectRetain();
  v18 = 0;
  while (1)
  {
    if (v16)
    {
      v19 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      v20 = v19 | (v18 << 6);
      goto LABEL_6;
    }
    v21 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v21 >= v17)
      goto LABEL_24;
    v22 = *(_QWORD *)(v25 + 8 * v21);
    ++v18;
    if (!v22)
    {
      v18 = v21 + 1;
      if (v21 + 1 >= v17)
        goto LABEL_24;
      v22 = *(_QWORD *)(v25 + 8 * v18);
      if (!v22)
      {
        v18 = v21 + 2;
        if (v21 + 2 >= v17)
          goto LABEL_24;
        v22 = *(_QWORD *)(v25 + 8 * v18);
        if (!v22)
        {
          v18 = v21 + 3;
          if (v21 + 3 >= v17)
            goto LABEL_24;
          v22 = *(_QWORD *)(v25 + 8 * v18);
          if (!v22)
            break;
        }
      }
    }
LABEL_23:
    v16 = (v22 - 1) & v22;
    v20 = __clz(__rbit64(v22)) + (v18 << 6);
LABEL_6:
    sub_1CA24EE38(*(_QWORD *)(a1 + 48) + *(_QWORD *)(v7 + 72) * v20, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for SongSource);
    sub_1CA24EE7C((uint64_t)v12, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for SongSource);
    sub_1CA29216C(v9, (uint64_t)v5);
    sub_1CA267BE8((uint64_t)v5, &qword_1ED872D30);
    sub_1CA2669CC((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for SongSource);
  }
  v23 = v21 + 4;
  if (v23 >= v17)
  {
LABEL_24:
    swift_release();
    return;
  }
  v22 = *(_QWORD *)(v25 + 8 * v23);
  if (v22)
  {
    v18 = v23;
    goto LABEL_23;
  }
  while (1)
  {
    v18 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v18 >= v17)
      goto LABEL_24;
    v22 = *(_QWORD *)(v25 + 8 * v18);
    ++v23;
    if (v22)
      goto LABEL_23;
  }
LABEL_27:
  __break(1u);
}

uint64_t (*sub_1CA2DEC54(uint64_t (**a1)(), unint64_t a2, uint64_t a3))()
{
  uint64_t (*v6)();

  v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((_QWORD *)v6 + 4) = sub_1CA2DEDD4(v6, a2, a3);
  return sub_1CA2DECA8;
}

uint64_t (*sub_1CA2DECAC(uint64_t (**a1)(), unint64_t a2, uint64_t a3))()
{
  uint64_t (*v6)();

  v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((_QWORD *)v6 + 4) = sub_1CA2DEE40(v6, a2, a3);
  return sub_1CA2DECA8;
}

uint64_t (*sub_1CA2DED00(uint64_t (**a1)(), unint64_t a2, uint64_t a3))()
{
  uint64_t (*v6)();

  v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((_QWORD *)v6 + 4) = sub_1CA2DEEAC(v6, a2, a3);
  return sub_1CA2DECA8;
}

uint64_t (*sub_1CA2DED54(void (**a1)(id *a1), unint64_t a2, uint64_t a3))()
{
  void (*v6)(id *);

  v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((_QWORD *)v6 + 4) = sub_1CA2DEF20(v6, a2, a3);
  return sub_1CA2DECA8;
}

void sub_1CA2DEDA8(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD))(*a1 + 32))(*a1);
  free(v1);
}

uint64_t (*sub_1CA2DEDD4(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  uint64_t (*v3)();
  id v4;

  v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = (id)MEMORY[0x1CAA4DD64](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(_QWORD *)v3 = v4;
    return j__s11PhotosGraph27MaestroKeywordScoreComputerVwxx;
  }
  __break(1u);
  return result;
}

uint64_t (*sub_1CA2DEE40(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  uint64_t *v3;
  uint64_t v4;

  v3 = (uint64_t *)result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = MEMORY[0x1CAA4DD64](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    v4 = swift_retain();
LABEL_5:
    *v3 = v4;
    return sub_1CA2DF148;
  }
  __break(1u);
  return result;
}

uint64_t (*sub_1CA2DEEAC(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  uint64_t *v3;
  uint64_t v4;

  v3 = (uint64_t *)result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = MEMORY[0x1CAA4DD64](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    v4 = swift_retain();
LABEL_5:
    *v3 = v4;
    return sub_1CA2DEF18;
  }
  __break(1u);
  return result;
}

uint64_t sub_1CA2DEF18()
{
  return swift_release();
}

void (*sub_1CA2DEF20(void (*result)(id *a1), unint64_t a2, uint64_t a3))(id *a1)
{
  void (*v3)(id *);
  id v4;

  v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = (id)MEMORY[0x1CAA4DD64](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(_QWORD *)v3 = v4;
    return destroy for MaestroKeywordScoreComputer;
  }
  __break(1u);
  return result;
}

void destroy for MaestroKeywordScoreComputer(id *a1)
{

}

uint64_t sub_1CA2DEF94(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, __int128 a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  double v12;
  float v13;
  uint64_t v14;
  float v15;

  *(_QWORD *)(v10 + 24) = a4;
  *(_QWORD *)(v10 + 32) = a5;
  *(_QWORD *)(v10 + 40) = a6;
  *(_QWORD *)(v10 + 48) = a7;
  *(_QWORD *)(v10 + 56) = a8;
  *(_OWORD *)(v10 + 64) = a9;
  *(_QWORD *)(v10 + 80) = a10;
  v11 = result + a2;
  if (__OFADD__(result, a2))
  {
    __break(1u);
LABEL_11:
    __break(1u);
    return result;
  }
  v12 = (double)result;
  if (v11 < 1)
    v13 = 0.0;
  else
    v13 = v12 / (double)v11;
  *(float *)(v10 + 16) = v13;
  v14 = result + a3;
  if (__OFADD__(result, a3))
    goto LABEL_11;
  if (v14 < 1)
    v15 = 0.0;
  else
    v15 = v12 / (double)v14;
  *(float *)(v10 + 20) = v15;
  return v10;
}

uint64_t sub_1CA2DF014()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1CA2DF038()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

void sub_1CA2DF06C(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;

  sub_1CA2D8B9C(a1, a2, a3, v3[2], v3[3], v3[4]);
}

uint64_t type metadata accessor for SocialGroupsEvaluationMetrics()
{
  return objc_opt_self();
}

uint64_t method lookup function for SocialGroupsEvaluationMetrics()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SocialGroupsEvaluationMetrics.__allocating_init(truePositives:falsePositives:trueNegatives:falseNegatives:librarySize:electedCount:personCount:leqTenAssetContainmentCount:leqThirtyAssetContainmentCount:leqFiftyAssetContainmentCount:leqOneHundredAssetContainmentCount:greaterThanOneHundredAssetContainmentCount:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 160))();
}

uint64_t dispatch thunk of SocialGroupsEvaluationMetrics.payload()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t type metadata accessor for SocialGroupsEvaluator()
{
  return objc_opt_self();
}

uint64_t method lookup function for SocialGroupsEvaluator()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SocialGroupsEvaluator.__allocating_init(graph:photoLibrary:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t sub_1CA2DF104(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_1CA85A5B0();
    result = MEMORY[0x1CAA4F1A4](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1CA2DF14C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v26;
  int64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  uint64_t result;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  int64_t v50;
  unint64_t v52;
  void *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  int64_t v58;
  uint64_t v59;
  uint64_t v60;
  char v61[40];
  uint64_t v62;

  v5 = v4;
  v7 = a1[4];
  v47 = a1[6];
  v48 = a1[5];
  if (qword_1ED872F98 != -1)
LABEL_40:
    swift_once();
  v8 = qword_1ED87D0F0;
  *(double *)&v9 = CACurrentMediaTime();
  sub_1CA2E4280("Music Curation - Filtering", 26, 2u, v9, 0, v8, (uint64_t)v61);
  v10 = sub_1CA85BB4C();
  v58 = v7;
  v59 = v48;
  v60 = v47;
  v11 = sub_1CA31AB70();
  v54 = a3;
  v55 = 0;
  v56 = v10;
  v57 = 0;
  LOBYTE(v58) = 0;
  swift_bridgeObjectRetain();
  sub_1CA33F34C();
  v62 = v13;
  v53 = v14;
  if (!v12)
  {
    v16 = MEMORY[0x1E0DEE9E8];
    goto LABEL_35;
  }
  v15 = v12;
  v49 = v11 + 64;
  v16 = MEMORY[0x1E0DEE9E8];
  v17 = v11;
  v52 = v11;
  while (2)
  {
    v18 = 1 << *(_BYTE *)(v17 + 32);
    if (v18 < 64)
      v19 = ~(-1 << v18);
    else
      v19 = -1;
    v20 = v19 & *(_QWORD *)(v17 + 64);
    v50 = (unint64_t)(v18 + 63) >> 6;
    swift_bridgeObjectRetain();
    v7 = 0;
    while (1)
    {
      if (v20)
      {
        v22 = v16;
        v23 = __clz(__rbit64(v20));
        v20 &= v20 - 1;
        v24 = v23 | (v7 << 6);
        goto LABEL_23;
      }
      if (__OFADD__(v7++, 1))
      {
        __break(1u);
LABEL_39:
        __break(1u);
        goto LABEL_40;
      }
      if (v7 >= v50)
        break;
      a3 = v48;
      v26 = *(_QWORD *)(v49 + 8 * v7);
      if (!v26)
      {
        v27 = v7 + 1;
        if (v7 + 1 >= v50)
          goto LABEL_31;
        v26 = *(_QWORD *)(v49 + 8 * v27);
        if (!v26)
        {
          v27 = v7 + 2;
          if (v7 + 2 >= v50)
            goto LABEL_31;
          v26 = *(_QWORD *)(v49 + 8 * v27);
          if (!v26)
          {
            v27 = v7 + 3;
            if (v7 + 3 >= v50)
              goto LABEL_31;
            v26 = *(_QWORD *)(v49 + 8 * v27);
            if (!v26)
            {
              while (1)
              {
                v7 = v27 + 1;
                if (__OFADD__(v27, 1))
                  goto LABEL_39;
                if (v7 >= v50)
                  goto LABEL_31;
                v26 = *(_QWORD *)(v49 + 8 * v7);
                ++v27;
                if (v26)
                  goto LABEL_22;
              }
            }
          }
        }
        v7 = v27;
      }
LABEL_22:
      v22 = v16;
      v20 = (v26 - 1) & v26;
      v24 = __clz(__rbit64(v26)) + (v7 << 6);
LABEL_23:
      v28 = *(_QWORD *)(v17 + 56);
      v29 = (uint64_t *)(*(_QWORD *)(v17 + 48) + 16 * v24);
      v30 = *v29;
      a3 = v29[1];
      v31 = *(_QWORD *)(v28 + 8 * v24);
      swift_bridgeObjectRetain();
      v32 = swift_bridgeObjectRetain();
      v33 = sub_1CA3FF6BC(v32, a2, v30, a3, (uint64_t)v53, v15, v62);
      if (v5)
      {
        swift_bridgeObjectRelease();
        sub_1CA2DF638(v15, v62, v53);
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
      v34 = v33;
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(v34 + 16) <= *(_QWORD *)(v31 + 16) >> 3)
      {
        sub_1CA2DE42C(v34);
        swift_bridgeObjectRelease();
        v21 = v31;
      }
      else
      {
        v21 = sub_1CA2D9A4C(v34, v31);
        swift_bridgeObjectRelease();
      }
      v16 = sub_1CA33DC04(v21, v22);
      v17 = v52;
    }
    a3 = v48;
LABEL_31:
    swift_release();
    sub_1CA2DF638(v15, v62, v53);
    sub_1CA33F34C();
    v17 = v52;
    v15 = v35;
    v62 = v36;
    v53 = v37;
    if (v35)
      continue;
    break;
  }
LABEL_35:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1CA31ACE0(v16, &v54);
  swift_bridgeObjectRelease();
  v39 = v54;
  v40 = v55;
  v41 = v56;
  v42 = v57;
  v43 = v58;
  v44 = v59;
  v45 = v60;
  sub_1CA85BB70();
  if (v5)
  {
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_release();
  }
  else
  {
    sub_1CA2E0C94(0);
    swift_release();
    result = swift_release();
    *a4 = v39;
    a4[1] = v40;
    a4[2] = v41;
    a4[3] = v42;
    a4[4] = v43;
    a4[5] = v44;
    a4[6] = v45;
  }
  return result;
}

void sub_1CA2DF638(uint64_t a1, uint64_t a2, void *a3)
{
  if (a1)

}

id FeatureExtractorIsInteresting.__allocating_init(prefetchIn:)(void *a1)
{
  objc_class *v1;
  id v3;
  id v4;

  v3 = objc_allocWithZone(v1);
  v4 = sub_1CA2DFBA0((uint64_t)a1);

  return v4;
}

id FeatureExtractorIsInteresting.init(prefetchIn:)(void *a1)
{
  id v2;

  v2 = sub_1CA2DFBA0((uint64_t)a1);

  return v2;
}

id FeatureExtractorIsInteresting.__allocating_init(prefetchFor:)(void *a1)
{
  objc_class *v1;
  char *v3;
  id v4;
  id v5;
  id v6;
  objc_super v8;

  v3 = (char *)objc_allocWithZone(v1);
  v4 = objc_msgSend(a1, sel_interestingSubset);
  *(_QWORD *)&v3[OBJC_IVAR___PGFeatureExtractorIsInteresting_interestingMomentNodes] = v4;
  v5 = objc_msgSend(a1, sel_smartInterestingSubset);
  *(_QWORD *)&v3[OBJC_IVAR___PGFeatureExtractorIsInteresting_smartInterestingMomentNodes] = v5;

  v8.receiver = v3;
  v8.super_class = v1;
  v6 = objc_msgSendSuper2(&v8, sel_init);

  return v6;
}

id FeatureExtractorIsInteresting.init(prefetchFor:)(void *a1)
{
  void *v1;
  objc_class *ObjectType;
  char *v4;
  id v5;
  id v6;
  id v7;
  objc_super v9;

  ObjectType = (objc_class *)swift_getObjectType();
  v4 = v1;
  v5 = objc_msgSend(a1, sel_interestingSubset);
  *(_QWORD *)&v4[OBJC_IVAR___PGFeatureExtractorIsInteresting_interestingMomentNodes] = v5;
  v6 = objc_msgSend(a1, sel_smartInterestingSubset);
  *(_QWORD *)&v4[OBJC_IVAR___PGFeatureExtractorIsInteresting_smartInterestingMomentNodes] = v6;

  v9.receiver = v4;
  v9.super_class = ObjectType;
  v7 = objc_msgSendSuper2(&v9, sel_init);

  return v7;
}

id FeatureExtractorIsInteresting.floatVector(withEntity:)(void *a1)
{
  uint64_t v1;
  id v2;
  float v3;
  float v4;
  uint64_t v5;
  id v6;
  void *v7;
  id v8;

  v2 = objc_msgSend(a1, sel_collection);
  v3 = 0.0;
  if (objc_msgSend(*(id *)(v1 + OBJC_IVAR___PGFeatureExtractorIsInteresting_interestingMomentNodes), sel_containsCollection_, v2))v4 = 1.0;
  else
    v4 = 0.0;
  if (objc_msgSend(*(id *)(v1 + OBJC_IVAR___PGFeatureExtractorIsInteresting_smartInterestingMomentNodes), sel_containsCollection_, v2))v3 = 1.0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED8727A0);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1CA8D51C0;
  *(float *)(v5 + 32) = v4;
  *(float *)(v5 + 36) = v3;
  v6 = objc_allocWithZone((Class)sub_1CA85A994());
  v7 = (void *)sub_1CA85A988();
  v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D42A20]), sel_initWithWrapper_, v7);

  return v8;
}

uint64_t FeatureExtractorIsInteresting.name.getter()
{
  return sub_1CA85B534();
}

uint64_t FeatureExtractorIsInteresting.featureNames.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED872760);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1CA8D51C0;
  *(_QWORD *)(v0 + 32) = sub_1CA85B534();
  *(_QWORD *)(v0 + 40) = v1;
  *(_QWORD *)(v0 + 48) = sub_1CA85B534();
  *(_QWORD *)(v0 + 56) = v2;
  return v0;
}

uint64_t FeatureExtractorIsInteresting.featureLength.getter()
{
  return 2;
}

id FeatureExtractorIsInteresting.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void FeatureExtractorIsInteresting.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id FeatureExtractorIsInteresting.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_1CA2DFBA0(uint64_t a1)
{
  void *v1;
  void *v2;
  objc_class *ObjectType;
  void *ObjCClassFromMetadata;
  void *v6;
  char *v7;
  id v8;
  id v9;
  id v10;
  id v11;
  objc_super v13;

  v2 = v1;
  ObjectType = (objc_class *)swift_getObjectType();
  sub_1CA2DFD04();
  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  v6 = (void *)objc_opt_self();
  v7 = v2;
  v8 = objc_msgSend(v6, sel_interestingFilter);
  v9 = objc_msgSend(ObjCClassFromMetadata, sel_nodesMatchingFilter_inGraph_, v8, a1);

  *(_QWORD *)&v7[OBJC_IVAR___PGFeatureExtractorIsInteresting_interestingMomentNodes] = v9;
  v10 = objc_msgSend(v6, sel_smartInterestingFilter);
  v11 = objc_msgSend(ObjCClassFromMetadata, sel_nodesMatchingFilter_inGraph_, v10, a1);

  *(_QWORD *)&v7[OBJC_IVAR___PGFeatureExtractorIsInteresting_smartInterestingMomentNodes] = v11;
  v13.receiver = v7;
  v13.super_class = ObjectType;
  return objc_msgSendSuper2(&v13, sel_init);
}

uint64_t type metadata accessor for FeatureExtractorIsInteresting()
{
  return objc_opt_self();
}

uint64_t method lookup function for FeatureExtractorIsInteresting()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FeatureExtractorIsInteresting.__allocating_init(prefetchIn:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of FeatureExtractorIsInteresting.__allocating_init(prefetchFor:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

unint64_t sub_1CA2DFD04()
{
  unint64_t result;

  result = qword_1ED8731F8;
  if (!qword_1ED8731F8)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED8731F8);
  }
  return result;
}

uint64_t sub_1CA2DFD40@<X0>(unint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  double v2;
  double v3;
  double v4;
  uint64_t v7;
  uint64_t v8;
  double v9;
  double v10;
  double v11;
  double v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  uint64_t v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  uint64_t v27;
  uint64_t v28;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  double v34;
  double v35;
  double v36;
  uint64_t v37;
  double v38;
  double v39;
  double v40;
  double v41;
  double v42;
  uint64_t v43;
  int v44;
  uint64_t v45;
  double v46;
  double v47;
  double v48;
  double v49;
  double v50;
  double v51;
  double v52;
  uint64_t result;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  double v58;
  double v59;
  double v60;
  double v61;
  uint64_t v62;
  uint64_t v63;
  double v64;
  double v65;
  uint64_t v66;
  double v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  double v71;
  int v72;
  uint64_t v73;
  double v74;
  double v75;
  double v76;
  double v77;
  double v78;
  double v79;
  double v80;
  double v81;
  double v82;
  double v83;
  double v84;
  double v85;
  double v86;
  double v87;
  double v88;
  double v89;

  if (!(a1 >> 62))
  {
    v7 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v7)
      goto LABEL_3;
LABEL_68:
    swift_bridgeObjectRelease();
    v78 = 0.0;
    v79 = 0.0;
    v80 = 0.0;
    v81 = 0.0;
    v3 = 0.0;
    v2 = 0.0;
    v4 = 0.0;
    goto LABEL_69;
  }
  swift_bridgeObjectRetain();
  v7 = sub_1CA85C08C();
  if (!v7)
    goto LABEL_68;
LABEL_3:
  if (v7 < 1)
  {
    __break(1u);
    __break(1u);
LABEL_133:
    v54 = MEMORY[0x1CAA4DD64](0, a1);
    goto LABEL_102;
  }
  if ((a1 & 0xC000000000000001) != 0)
  {
    v8 = 0;
    v3 = 0.0;
    v2 = 0.0;
    v4 = 0.0;
    v82 = 0.0;
    v84 = 0.0;
    v9 = 0.0;
    v10 = 0.0;
    v11 = 0.0;
    v86 = 0.0;
    v88 = 0.0;
    v12 = 0.0;
    do
    {
      v14 = MEMORY[0x1CAA4DD64](v8, a1);
      v15 = *(_QWORD *)(v14 + 32);
      if (*(_BYTE *)(v14 + 43) == 1)
      {
        if (v15 == 5)
        {
          v88 = v88 + 1.0;
          if (*(_BYTE *)(v14 + 41))
            v9 = v9 + 1.0;
        }
        else if (v15 == 4)
        {
          v16 = v82;
          if (*(_BYTE *)(v14 + 41))
            v16 = v82 + 1.0;
          v82 = v16;
          v84 = v84 + 1.0;
        }
      }
      else if (v15 == 5)
      {
        v12 = v12 + 1.0;
        if (*(_BYTE *)(v14 + 41))
          v11 = v11 + 1.0;
      }
      else if (v15 == 4)
      {
        v86 = v86 + 1.0;
        if (*(_BYTE *)(v14 + 41))
          v10 = v10 + 1.0;
      }
      ++v8;
      if (!*(_BYTE *)(v14 + 44))
        v4 = v4 + 1.0;
      v2 = v2 + 1.0;
      v13 = *(unsigned __int8 *)(v14 + 41);
      swift_unknownObjectRelease();
      if (v13)
        v3 = v3 + 1.0;
    }
    while (v7 != v8);
    swift_bridgeObjectRelease();
    v17 = v11;
    v18 = v10;
    v19 = v12;
    v20 = v82;
  }
  else
  {
    v21 = 0;
    v3 = 0.0;
    v2 = 0.0;
    v4 = 0.0;
    v20 = 0.0;
    v22 = 0.0;
    v18 = 0.0;
    v17 = 0.0;
    v23 = 0.0;
    v24 = 0.0;
    v25 = 0.0;
    v26 = 0.0;
    do
    {
      v27 = *(_QWORD *)(a1 + 8 * v21 + 32);
      v28 = *(_QWORD *)(v27 + 32);
      if (*(_BYTE *)(v27 + 43) == 1)
      {
        if (v28 == 5)
        {
          v24 = v24 + 1.0;
          if (*(_BYTE *)(v27 + 41))
            v22 = v22 + 1.0;
        }
        else if (v28 == 4)
        {
          v23 = v23 + 1.0;
          if (*(_BYTE *)(v27 + 41))
            v20 = v20 + 1.0;
        }
      }
      else if (v28 == 4)
      {
        v25 = v25 + 1.0;
        if (*(_BYTE *)(v27 + 41))
          v18 = v18 + 1.0;
      }
      else if (v28 == 5)
      {
        v26 = v26 + 1.0;
        if (*(_BYTE *)(v27 + 41))
          v17 = v17 + 1.0;
      }
      ++v21;
      if (!*(_BYTE *)(v27 + 44))
        v4 = v4 + 1.0;
      v2 = v2 + 1.0;
      if (*(_BYTE *)(v27 + 41))
        v3 = v3 + 1.0;
    }
    while (v7 != v21);
    v84 = v23;
    v86 = v25;
    v29 = v26;
    swift_bridgeObjectRelease();
    v19 = v29;
  }
  v30 = v84 + v86;
  v31 = v84 + v19;
  if (v84 + v86 > 0.0)
  {
    v32 = v84 / v30;
    if (v31 <= 0.0)
    {
      v33 = v20 + v18;
      v34 = 0.0;
      if (v20 + v18 <= 0.0)
      {
        v35 = v20 + v17;
        v78 = 0.0;
        if (v20 + v17 <= 0.0)
        {
          v79 = 0.0;
          v80 = 0.0;
          v81 = v84 / v30;
          goto LABEL_69;
        }
        goto LABEL_62;
      }
      goto LABEL_61;
    }
LABEL_57:
    v33 = v20 + v18;
    v34 = v84 / v31;
    if (v20 + v18 <= 0.0)
    {
      v35 = v20 + v17;
      v78 = 0.0;
      if (v20 + v17 <= 0.0)
      {
        v80 = v34;
        v81 = v32;
        v36 = 0.0;
LABEL_63:
        v79 = v36;
        goto LABEL_69;
      }
LABEL_62:
      v80 = v34;
      v81 = v32;
      v36 = v20 / v35;
      goto LABEL_63;
    }
    goto LABEL_61;
  }
  v32 = 0.0;
  if (v31 > 0.0)
    goto LABEL_57;
  v33 = v20 + v18;
  v34 = 0.0;
  if (v20 + v18 <= 0.0)
  {
    v35 = v20 + v17;
    v78 = 0.0;
    if (v20 + v17 > 0.0)
      goto LABEL_62;
    v79 = 0.0;
    v80 = 0.0;
    v81 = 0.0;
    goto LABEL_69;
  }
LABEL_61:
  v35 = v20 + v17;
  v78 = v20 / v33;
  if (v20 + v17 > 0.0)
    goto LABEL_62;
  v79 = 0.0;
  v80 = v34;
  v81 = v32;
LABEL_69:
  sub_1CA85BEC4();
  sub_1CA85B624();
  sub_1CA85B93C();
  sub_1CA85B624();
  sub_1CA85B93C();
  sub_1CA85B624();
  sub_1CA85B93C();
  sub_1CA85B624();
  sub_1CA85B93C();
  sub_1CA85B624();
  sub_1CA85B93C();
  sub_1CA85B624();
  sub_1CA85B93C();
  sub_1CA85B624();
  sub_1CA85B93C();
  sub_1CA85B624();
  sub_1CA85B93C();
  sub_1CA85B624();
  sub_1CA85B93C();
  sub_1CA85B624();
  sub_1CA85B93C();
  sub_1CA4C6684(0, 0xE000000000000000);
  swift_bridgeObjectRelease();
  sub_1CA85BEC4();
  sub_1CA85B624();
  sub_1CA85B93C();
  sub_1CA85B624();
  sub_1CA85B93C();
  sub_1CA85B624();
  sub_1CA85B93C();
  sub_1CA85B624();
  sub_1CA85B93C();
  sub_1CA85B624();
  sub_1CA85B93C();
  sub_1CA85B624();
  sub_1CA85B93C();
  sub_1CA85B624();
  sub_1CA85B93C();
  sub_1CA85B624();
  sub_1CA85B93C();
  sub_1CA4C6684(0, 0xE000000000000000);
  swift_bridgeObjectRelease();
  if (!v7)
  {
    v83 = 0.0;
    v85 = 0.0;
    v87 = 0.0;
    goto LABEL_98;
  }
  if ((a1 & 0xC000000000000001) != 0)
  {
    v89 = v2;
    swift_bridgeObjectRetain();
    v37 = 0;
    v38 = 0.0;
    v39 = 0.0;
    v40 = 0.0;
    v41 = 0.0;
    v42 = 0.0;
    do
    {
      v43 = MEMORY[0x1CAA4DD64](v37, a1);
      v44 = *(unsigned __int8 *)(v43 + 45);
      if (v44 == 2)
      {
        swift_unknownObjectRelease();
      }
      else
      {
        v45 = *(_QWORD *)(v43 + 32);
        swift_unknownObjectRelease();
        v46 = v41 + 1.0;
        if (v45 != 4)
          v46 = v41;
        v47 = v42 + 1.0;
        if (v45 != 5)
          v47 = v42;
        v48 = v39 + 1.0;
        if (v45 != 4)
          v48 = v39;
        v49 = v40 + 1.0;
        if (v45 != 5)
          v49 = v40;
        if ((v44 & 1) != 0)
          v40 = v49;
        else
          v42 = v47;
        if ((v44 & 1) != 0)
          v39 = v48;
        else
          v41 = v46;
        v38 = v38 + 1.0;
      }
      ++v37;
    }
    while (v7 != v37);
    swift_bridgeObjectRelease();
    v50 = v38;
    v2 = v89;
  }
  else
  {
    v70 = a1 + 32;
    v50 = 0.0;
    v39 = 0.0;
    v71 = 0.0;
    v41 = 0.0;
    v42 = 0.0;
    do
    {
      v72 = *(unsigned __int8 *)(*(_QWORD *)v70 + 45);
      if (v72 != 2)
      {
        v73 = *(_QWORD *)(*(_QWORD *)v70 + 32);
        v74 = v41 + 1.0;
        if (v73 != 4)
          v74 = v41;
        v75 = v42 + 1.0;
        if (v73 != 5)
          v75 = v42;
        v76 = v39 + 1.0;
        if (v73 != 4)
          v76 = v39;
        v77 = v71 + 1.0;
        if (v73 != 5)
          v77 = v71;
        if ((v72 & 1) != 0)
          v71 = v77;
        else
          v42 = v75;
        if ((v72 & 1) != 0)
          v39 = v76;
        else
          v41 = v74;
        v50 = v50 + 1.0;
      }
      v70 += 8;
      --v7;
    }
    while (v7);
  }
  v87 = v50;
  if (v39 + v41 <= 0.0)
  {
    v51 = v39 + v42;
    v83 = 0.0;
    if (v39 + v42 <= 0.0)
      goto LABEL_93;
LABEL_96:
    v52 = v39 / v51;
    goto LABEL_97;
  }
  v51 = v39 + v42;
  v83 = v39 / (v39 + v41);
  if (v39 + v42 > 0.0)
    goto LABEL_96;
LABEL_93:
  v52 = 0.0;
LABEL_97:
  v85 = v52;
LABEL_98:
  sub_1CA85BEC4();
  sub_1CA85B624();
  sub_1CA85B93C();
  sub_1CA85B624();
  sub_1CA85B93C();
  sub_1CA85B624();
  sub_1CA85B93C();
  sub_1CA85B624();
  sub_1CA85B93C();
  sub_1CA85B624();
  sub_1CA85B93C();
  sub_1CA85B624();
  sub_1CA85B93C();
  sub_1CA85B624();
  sub_1CA85B93C();
  sub_1CA85B624();
  sub_1CA85B93C();
  sub_1CA4C6684(0, 0xE000000000000000);
  result = swift_bridgeObjectRelease();
  if (v2 <= 0.0)
  {
    v57 = type metadata accessor for PGSharedLibrarySimulationMetrics();
    swift_allocObject();
    v58 = 0.0;
    v59 = 0.0;
    v60 = 0.0;
    v61 = 0.0;
    v64 = 0.0;
    v65 = 0.0;
    v67 = 0.0;
    v62 = 0;
    v63 = 0;
    v66 = 0;
    v68 = 0;
    v69 = 0xE000000000000000;
    goto LABEL_113;
  }
  if ((a1 & 0xC000000000000001) != 0)
    goto LABEL_133;
  if (!*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
    goto LABEL_135;
  }
  v54 = *(_QWORD *)(a1 + 32);
  swift_retain();
LABEL_102:
  v55 = *(_QWORD *)(v54 + 16);
  v56 = *(_QWORD *)(v54 + 24);
  swift_bridgeObjectRetain();
  result = swift_release();
  if (v2 <= -9.22337204e18)
  {
LABEL_135:
    __break(1u);
    goto LABEL_136;
  }
  if (v2 >= 9.22337204e18)
  {
LABEL_136:
    __break(1u);
    goto LABEL_137;
  }
  if (v3 <= -9.22337204e18)
  {
LABEL_137:
    __break(1u);
    goto LABEL_138;
  }
  if (v3 >= 9.22337204e18)
  {
LABEL_138:
    __break(1u);
LABEL_139:
    __break(1u);
    goto LABEL_140;
  }
  if ((*(_QWORD *)&v3 & 0x7FF0000000000000) == 0x7FF0000000000000
    || (*(_QWORD *)&v2 & 0x7FF0000000000000) == 0x7FF0000000000000
    || (*(_QWORD *)&v87 & 0x7FF0000000000000) == 0x7FF0000000000000)
  {
    goto LABEL_139;
  }
  if (v87 <= -9.22337204e18)
  {
LABEL_140:
    __break(1u);
    goto LABEL_141;
  }
  if (v87 < 9.22337204e18)
  {
    v57 = type metadata accessor for PGSharedLibrarySimulationMetrics();
    swift_allocObject();
    v59 = v80;
    v58 = v81;
    v60 = v78;
    v61 = v79;
    v62 = (uint64_t)v2;
    v63 = (uint64_t)v3;
    v64 = v83;
    v65 = v85;
    v66 = (uint64_t)v87;
    v67 = 1.0 - v4 / v2;
    v68 = v55;
    v69 = v56;
LABEL_113:
    result = sub_1CA38C898(v62, v63, v66, v68, v69, v58, v59, v60, v61, v64, v65, v67);
    a2[3] = v57;
    a2[4] = (uint64_t)&off_1E8411278;
    *a2 = result;
    return result;
  }
LABEL_141:
  __break(1u);
  return result;
}

uint64_t sub_1CA2E0A60()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for PGSharedLibrarySimulationEvaluator()
{
  return objc_opt_self();
}

uint64_t sub_1CA2E0A90@<X0>(unint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1CA2DFD40(a1, a2);
}

void MusicCacheEntry<>.init(inContext:)(void *a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  void *v7;
  id v8;

  v6 = (void *)objc_opt_self();
  (*(void (**)(uint64_t, uint64_t))(a3 + 8))(a2, a3);
  v7 = (void *)sub_1CA85B510();
  swift_bridgeObjectRelease();
  v8 = objc_msgSend(v6, sel_entityForName_inManagedObjectContext_, v7, a1);

  if (v8)
  {
    objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithEntity_insertIntoManagedObjectContext_, v8, a1);

  }
  else
  {
    sub_1CA29033C();
    swift_allocError();
    swift_willThrow();

  }
}

uint64_t dispatch thunk of static MusicCacheEntry.entityName.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t _s5ErrorOwst(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1CA2E0BF0 + 4 * byte_1CA8DAAB4[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1CA2E0C10 + 4 * byte_1CA8DAAB9[v4]))();
}

_BYTE *sub_1CA2E0BF0(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1CA2E0C10(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1CA2E0C18(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1CA2E0C20(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1CA2E0C28(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1CA2E0C30(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *_s5ErrorOMa()
{
  return &_s5ErrorON;
}

unint64_t sub_1CA2E0C50()
{
  unint64_t result;

  result = qword_1EF94CFC8;
  if (!qword_1EF94CFC8)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8DAB14, &_s5ErrorON);
    atomic_store(result, (unint64_t *)&qword_1EF94CFC8);
  }
  return result;
}

uint64_t sub_1CA2E0C94(int a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t (*v17)(_QWORD);
  int v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  uint64_t result;
  const char *v23;
  uint64_t v24;
  char *v25;
  NSObject *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  const char *v30;
  char *v31;
  uint8_t *v32;
  os_signpost_id_t v33;
  void (*v34)(char *, uint64_t);
  double v35;
  double v36;
  uint64_t v37;
  NSObject *v38;
  os_log_type_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  const char *v45;
  uint64_t v46;
  uint64_t v47;
  int v48;
  uint64_t v49;
  int v50;
  int v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  const char *v60;
  uint64_t v61;
  double v62;
  uint64_t v63;
  _BYTE v64[16];
  double v65;
  char v66;
  char v67;

  v2 = v1;
  v50 = a1;
  v3 = sub_1CA85B348();
  v56 = *(_QWORD *)(v3 - 8);
  v57 = v3;
  MEMORY[0x1E0C80A78](v3);
  v59 = (uint64_t)&v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1CA85B2F4();
  v53 = *(_QWORD *)(v5 - 8);
  v54 = v5;
  MEMORY[0x1E0C80A78](v5);
  v52 = (char *)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1CA85B2D0();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x1E0C80A78](v7);
  v55 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v45 - v11;
  v13 = sub_1CA85B2E8();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v45 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = *(_QWORD *)(v1 + 40);
  sub_1CA2E3B94(&qword_1ED873120, &OBJC_IVAR____TtC11PhotosGraph3Log____lazy_storage___signposter, v17, MEMORY[0x1E0DF2158], (uint64_t)v16);
  v60 = *(const char **)v1;
  v49 = *(_QWORD *)(v1 + 8);
  v18 = *(unsigned __int8 *)(v1 + 16);
  v19 = *(_QWORD *)(v1 + 48);
  v20 = sub_1CA85B2DC();
  v61 = v19;
  v21 = v20;
  sub_1CA85B300();
  v51 = sub_1CA85BBDC();
  result = sub_1CA85BC9C();
  v48 = v18;
  if ((result & 1) == 0)
  {

    (*(void (**)(char *, uint64_t))(v8 + 8))(v12, v7);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    goto LABEL_14;
  }
  v46 = v14;
  v47 = v13;
  if ((v18 & 1) != 0)
  {
    if (!((unint64_t)v60 >> 32))
    {
      if (v60 >> 11 == 27)
      {
LABEL_26:
        __break(1u);
        return result;
      }
      if (v60 >> 16 <= 0x10)
      {
        v24 = v7;
        v25 = v12;
        v26 = v21;
        v23 = &v67;
        goto LABEL_10;
      }
LABEL_25:
      __break(1u);
      goto LABEL_26;
    }
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v23 = v60;
  if (!v60)
  {
    __break(1u);
    goto LABEL_24;
  }
  v24 = v7;
  v25 = v12;
  v26 = v21;
LABEL_10:
  v45 = v23;
  swift_retain();
  v27 = v52;
  sub_1CA85B324();
  swift_release();
  v29 = v53;
  v28 = v54;
  if ((*(unsigned int (**)(char *, uint64_t))(v53 + 88))(v27, v54) == *MEMORY[0x1E0DF2190])
  {
    v30 = "[Error] Interval already ended";
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v29 + 8))(v27, v28);
    v30 = "";
  }
  v31 = v55;
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v55, v25, v24);
  v32 = (uint8_t *)swift_slowAlloc();
  *(_WORD *)v32 = 0;
  v33 = sub_1CA85B2B8();
  _os_signpost_emit_with_name_impl(&dword_1CA237000, v26, (os_signpost_type_t)v51, v33, v45, v30, v32, 2u);
  MEMORY[0x1CAA4F27C](v32, -1, -1);

  v34 = *(void (**)(char *, uint64_t))(v8 + 8);
  v34(v25, v24);
  (*(void (**)(char *, uint64_t))(v46 + 8))(v16, v47);
  v34(v31, v24);
LABEL_14:
  sub_1CA2E45F8(v2 + 24, (uint64_t)v64);
  result = sub_1CA2E45F8((uint64_t)v64, (uint64_t)&v65);
  if ((v66 & 1) == 0)
  {
    v35 = v65;
    v36 = CACurrentMediaTime();
    v37 = v59;
    sub_1CA2E3B94(&qword_1ED873130, &OBJC_IVAR____TtC11PhotosGraph3Log____lazy_storage___logger, (uint64_t (*)(_QWORD))MEMORY[0x1E0DF2258], (uint64_t)MEMORY[0x1E0DF2248], v59);
    swift_retain_n();
    swift_retain_n();
    v38 = sub_1CA85B330();
    v39 = sub_1CA85BAC8();
    if (os_log_type_enabled(v38, v39))
    {
      v40 = swift_slowAlloc();
      v41 = swift_slowAlloc();
      v63 = v41;
      *(_DWORD *)v40 = 136315650;
      v42 = sub_1CA85BEDC();
      v62 = COERCE_DOUBLE(sub_1CA28712C(v42, v43, &v63));
      sub_1CA85BCF0();
      swift_release_n();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v40 + 12) = 2048;
      v62 = (v36 - v35) * 1000.0;
      sub_1CA85BCF0();
      *(_WORD *)(v40 + 22) = 2080;
      if ((v50 & 1) != 0)
        v44 = 0x6572756C696166;
      else
        v44 = 0x73736563637573;
      v62 = COERCE_DOUBLE(sub_1CA28712C(v44, 0xE700000000000000, &v63));
      sub_1CA85BCF0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1CA237000, v38, v39, "[Performance] %s: %f ms (%s)", (uint8_t *)v40, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x1CAA4F27C](v41, -1, -1);
      MEMORY[0x1CAA4F27C](v40, -1, -1);

    }
    else
    {

      swift_release_n();
      swift_release_n();
    }
    return (*(uint64_t (**)(uint64_t, uint64_t))(v56 + 8))(v37, v57);
  }
  return result;
}

uint64_t sub_1CA2E1280@<X0>(uint64_t a1@<X8>)
{
  return sub_1CA2E3B94(&qword_1ED873130, &OBJC_IVAR____TtC11PhotosGraph3Log____lazy_storage___logger, (uint64_t (*)(_QWORD))MEMORY[0x1E0DF2258], (uint64_t)MEMORY[0x1E0DF2248], a1);
}

uint64_t sub_1CA2E12A4(uint64_t a1)
{
  return sub_1CA2E1D68(a1, qword_1ED873038, (uint64_t)&qword_1ED87D158, &qword_1ED871080);
}

uint64_t sub_1CA2E12C8()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;

  v1 = *(void **)(v0 + 24);
  if (!v1)
    __asm { BR              X11 }
  v2 = *(_QWORD *)(v0 + 24);
  v3 = v1;
  return v2;
}

id static OS_os_log.generic.getter()
{
  return sub_1CA2E1438(&qword_1ED8724A8, (id *)&qword_1ED871080);
}

uint64_t sub_1CA2E13F8(uint64_t a1)
{
  return sub_1CA2E1D68(a1, &qword_1ED873710, (uint64_t)&qword_1ED87D180, &qword_1ED871158);
}

id static OS_os_log.upNext.getter()
{
  return sub_1CA2E1438(&qword_1ED8724A0, (id *)&qword_1ED871158);
}

id sub_1CA2E1438(_QWORD *a1, id *a2)
{
  if (*a1 != -1)
    swift_once();
  return *a2;
}

uint64_t sub_1CA2E1470(uint64_t a1)
{
  return sub_1CA2E1D68(a1, &qword_1ED872F98, (uint64_t)&qword_1ED87D0F0, &qword_1ED871098);
}

id static OS_os_log.musicCurator.getter()
{
  return sub_1CA2E1438(&qword_1ED872408, (id *)&qword_1ED871098);
}

uint64_t sub_1CA2E14B0(uint64_t a1)
{
  return sub_1CA2E1D68(a1, &qword_1ED872FA0, (uint64_t)&qword_1ED87D0F8, &qword_1ED8710F0);
}

id static OS_os_log.musicKitClient.getter()
{
  return sub_1CA2E1438(&qword_1ED872410, (id *)&qword_1ED8710F0);
}

uint64_t sub_1CA2E14F0(uint64_t a1)
{
  return sub_1CA2E1D68(a1, &qword_1ED874878, (uint64_t)&qword_1ED87D178, &qword_1ED874AE0);
}

id static OS_os_log.shazamClient.getter()
{
  return sub_1CA2E1438(&qword_1ED874AE8, (id *)&qword_1ED874AE0);
}

uint64_t sub_1CA2E1530(uint64_t a1)
{
  return sub_1CA2E1D68(a1, &qword_1ED872F80, (uint64_t)&qword_1ED87D078, &qword_1ED8710E0);
}

id static OS_os_log.musicCache.getter()
{
  return sub_1CA2E1438(&qword_1ED8723F0, (id *)&qword_1ED8710E0);
}

uint64_t sub_1CA2E1570(uint64_t a1)
{
  return sub_1CA2E1D68(a1, &qword_1ED873048, (uint64_t)&qword_1ED87D080, &qword_1EF94CFD0);
}

id static OS_os_log.flexMusic.getter()
{
  return sub_1CA2E1438(&qword_1EF94A1D8, (id *)&qword_1EF94CFD0);
}

uint64_t sub_1CA2E15B0(uint64_t a1)
{
  return sub_1CA2E1D68(a1, qword_1EF94A290, (uint64_t)&qword_1EF978188, &qword_1EF94CFD8);
}

id static OS_os_log.curatedSongLibrary.getter()
{
  return sub_1CA2E1438(qword_1EF94A1E0, (id *)&qword_1EF94CFD8);
}

uint64_t sub_1CA2E15F0(uint64_t a1)
{
  return sub_1CA2E1D68(a1, &qword_1ED872FD8, (uint64_t)&qword_1ED87D120, &qword_1ED871120);
}

id static OS_os_log.musicForTopicElector.getter()
{
  return sub_1CA2E1438(&qword_1ED872458, (id *)&qword_1ED871120);
}

uint64_t sub_1CA2E1630(uint64_t a1)
{
  return sub_1CA2E1D68(a1, &qword_1ED872FC0, (uint64_t)&qword_1ED87D110, &qword_1ED871108);
}

id static OS_os_log.musicForYouElector.getter()
{
  return sub_1CA2E1438(&qword_1ED872430, (id *)&qword_1ED871108);
}

uint64_t sub_1CA2E1670(uint64_t a1)
{
  return sub_1CA2E1D68(a1, &qword_1ED872FC8, (uint64_t)&qword_1ED87D118, &qword_1ED871118);
}

id static OS_os_log.musicForTimeElector.getter()
{
  return sub_1CA2E1438(qword_1ED872448, (id *)&qword_1ED871118);
}

uint64_t sub_1CA2E16B0(uint64_t a1)
{
  return sub_1CA2E1D68(a1, &qword_1ED872FF0, (uint64_t)&qword_1ED87D138, &qword_1ED871138);
}

id static OS_os_log.musicForMomentElector.getter()
{
  return sub_1CA2E1438(qword_1ED872470, (id *)&qword_1ED871138);
}

uint64_t sub_1CA2E16F0(uint64_t a1)
{
  return sub_1CA2E1D68(a1, &qword_1ED872FE8, (uint64_t)&qword_1ED87D130, &qword_1ED871130);
}

id static OS_os_log.musicForArtistElector.getter()
{
  return sub_1CA2E1438(&qword_1ED872468, (id *)&qword_1ED871130);
}

uint64_t sub_1CA2E1730(uint64_t a1)
{
  return sub_1CA2E1D68(a1, &qword_1ED873010, (uint64_t)&qword_1ED87D148, &qword_1ED871148);
}

id static OS_os_log.personalPreferenceRanker.getter()
{
  return sub_1CA2E1438(&qword_1ED872490, (id *)&qword_1ED871148);
}

uint64_t sub_1CA2E1770(uint64_t a1)
{
  return sub_1CA2E1D68(a1, &qword_1ED872F88, (uint64_t)&qword_1ED87D0E8, &qword_1ED8710E8);
}

id static OS_os_log.topicRanker.getter()
{
  return sub_1CA2E1438(qword_1ED8723F8, (id *)&qword_1ED8710E8);
}

uint64_t sub_1CA2E17B0(uint64_t a1)
{
  return sub_1CA2E1D68(a1, &qword_1ED872FB0, (uint64_t)&qword_1ED87D100, &qword_1ED8710F8);
}

id static OS_os_log.localeMusicRanker.getter()
{
  return sub_1CA2E1438(&qword_1ED872420, (id *)&qword_1ED8710F8);
}

uint64_t sub_1CA2E17F0(uint64_t a1)
{
  return sub_1CA2E1D68(a1, &qword_1ED872FB8, (uint64_t)&qword_1ED87D108, &qword_1ED871100);
}

id static OS_os_log.randomMusicRanker.getter()
{
  return sub_1CA2E1438(&qword_1ED872428, (id *)&qword_1ED871100);
}

uint64_t sub_1CA2E1830(uint64_t a1)
{
  return sub_1CA2E1D68(a1, &qword_1ED872FE0, (uint64_t)&qword_1ED87D128, &qword_1ED871128);
}

id static OS_os_log.sentimentMusicRanker.getter()
{
  return sub_1CA2E1438(&qword_1ED872460, (id *)&qword_1ED871128);
}

uint64_t sub_1CA2E1870(uint64_t a1)
{
  return sub_1CA2E1D68(a1, &qword_1ED873028, (uint64_t)&qword_1ED87D150, &qword_1ED871150);
}

id static OS_os_log.memoryAppropriatenessMusicRanker.getter()
{
  return sub_1CA2E1438(&qword_1ED872498, (id *)&qword_1ED871150);
}

uint64_t sub_1CA2E18B0(uint64_t a1)
{
  return sub_1CA2E1D68(a1, &qword_1ED873000, (uint64_t)&qword_1ED87D140, &qword_1ED871140);
}

id static OS_os_log.recentlyUsedMusicRanker.getter()
{
  return sub_1CA2E1438(qword_1ED872480, (id *)&qword_1ED871140);
}

uint64_t sub_1CA2E18F0(uint64_t a1)
{
  return sub_1CA2E1D68(a1, &qword_1ED873418, (uint64_t)&qword_1ED87D160, &qword_1ED871110);
}

id static OS_os_log.musicCatalogMonitor.getter()
{
  return sub_1CA2E1438(qword_1ED872438, (id *)&qword_1ED871110);
}

uint64_t sub_1CA2E1930(uint64_t a1)
{
  return sub_1CA2E1D68(a1, &qword_1EF94A2A0, (uint64_t)&qword_1EF978190, &qword_1EF94CFE0);
}

id static OS_os_log.sharedLibrarySimulation.getter()
{
  return sub_1CA2E1438(&qword_1EF94A1F0, (id *)&qword_1EF94CFE0);
}

uint64_t sub_1CA2E1970(uint64_t a1)
{
  return sub_1CA2E1D68(a1, &qword_1EF94A2A8, (uint64_t)&qword_1EF978198, &qword_1EF94CFE8);
}

id static OS_os_log.importantEntitiesSimulation.getter()
{
  return sub_1CA2E1438(&qword_1EF94A1F8, (id *)&qword_1EF94CFE8);
}

uint64_t sub_1CA2E19B0(uint64_t a1)
{
  return sub_1CA2E1D68(a1, &qword_1ED872D90, (uint64_t)&qword_1ED87D070, &qword_1EF94CFF0);
}

id static OS_os_log.graphUpdate.getter()
{
  return sub_1CA2E1438(&qword_1EF94A200, (id *)&qword_1EF94CFF0);
}

uint64_t sub_1CA2E19F0(uint64_t a1)
{
  return sub_1CA2E1D68(a1, &qword_1EF94A2D8, (uint64_t)&qword_1EF9781C0, &qword_1EF94CFF8);
}

id static OS_os_log.tripTitling.getter()
{
  return sub_1CA2E1438(&qword_1EF94A208, (id *)&qword_1EF94CFF8);
}

uint64_t sub_1CA2E1A30(uint64_t a1)
{
  return sub_1CA2E1D68(a1, &qword_1ED872D98, (uint64_t)&qword_1ED87D0A0, &qword_1EF94D000);
}

id static OS_os_log.socialGroups.getter()
{
  return sub_1CA2E1438(&qword_1EF94A210, (id *)&qword_1EF94D000);
}

uint64_t sub_1CA2E1A70(uint64_t a1)
{
  return sub_1CA2E1D68(a1, &qword_1EF94A2F0, (uint64_t)&qword_1EF9781D0, &qword_1EF94D008);
}

id static OS_os_log.promptGeneration.getter()
{
  return sub_1CA2E1438(&qword_1EF94A218, (id *)&qword_1EF94D008);
}

uint64_t sub_1CA2E1AB0(uint64_t a1)
{
  return sub_1CA2E1D68(a1, &qword_1EF94A2F8, (uint64_t)&qword_1EF9781D8, &qword_1EF94D010);
}

id static OS_os_log.extendedTokenGeneration.getter()
{
  return sub_1CA2E1438(&qword_1EF94A220, (id *)&qword_1EF94D010);
}

uint64_t sub_1CA2E1AF0(uint64_t a1)
{
  return sub_1CA2E1D68(a1, &qword_1EF94A300, (uint64_t)&qword_1EF9781E0, &qword_1EF94D018);
}

id static OS_os_log.personalTraits.getter()
{
  return sub_1CA2E1438(&qword_1EF94A228, (id *)&qword_1EF94D018);
}

uint64_t sub_1CA2E1B30(uint64_t a1)
{
  return sub_1CA2E1D68(a1, &qword_1ED872DA8, (uint64_t)&qword_1ED87D0A8, &qword_1EF94D020);
}

id static OS_os_log.search.getter()
{
  return sub_1CA2E1438(qword_1EF94A230, (id *)&qword_1EF94D020);
}

uint64_t sub_1CA2E1B70(uint64_t a1)
{
  return sub_1CA2E2238(a1, qword_1ED87D058, qword_1ED873038);
}

uint64_t sub_1CA2E1B94(uint64_t a1)
{
  return sub_1CA2E2238(a1, qword_1ED87D040, &qword_1ED873710);
}

uint64_t sub_1CA2E1BB8(uint64_t a1)
{
  return sub_1CA2E2238(a1, qword_1ED87D010, &qword_1ED872F98);
}

uint64_t sub_1CA2E1BDC(uint64_t a1)
{
  return sub_1CA2E2238(a1, qword_1ED87CFF8, &qword_1ED872F80);
}

uint64_t sub_1CA2E1C00(uint64_t a1)
{
  return sub_1CA2E2238(a1, qword_1ED87D028, &qword_1ED872FA0);
}

uint64_t sub_1CA2E1C24(uint64_t a1)
{
  return sub_1CA2E2238(a1, qword_1EF9780C0, qword_1EF94A290);
}

uint64_t sub_1CA2E1C48(uint64_t a1)
{
  return sub_1CA2E2238(a1, qword_1EF9780D8, &qword_1EF94A2A0);
}

uint64_t sub_1CA2E1C6C(uint64_t a1)
{
  return sub_1CA2E2238(a1, qword_1EF9780F0, &qword_1EF94A2A8);
}

uint64_t sub_1CA2E1C90(uint64_t a1)
{
  return sub_1CA2E2238(a1, qword_1ED87D0B0, &qword_1ED872D90);
}

uint64_t sub_1CA2E1CB4(uint64_t a1)
{
  return sub_1CA2E2238(a1, qword_1EF978108, &qword_1EF94A2E0);
}

uint64_t sub_1CA2E1CD8(uint64_t a1)
{
  return sub_1CA2E2238(a1, qword_1EF978120, &qword_1ED872D98);
}

uint64_t sub_1CA2E1CFC(uint64_t a1)
{
  return sub_1CA2E2238(a1, qword_1EF978138, &qword_1EF94A2F0);
}

uint64_t sub_1CA2E1D20(uint64_t a1)
{
  return sub_1CA2E2238(a1, qword_1EF978150, &qword_1EF94A2F8);
}

uint64_t sub_1CA2E1D44(uint64_t a1)
{
  return sub_1CA2E1D68(a1, &qword_1EF94A2F8, (uint64_t)&qword_1EF9781D8, &qword_1EF978168);
}

uint64_t sub_1CA2E1D68(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t *a4)
{
  uint64_t result;

  if (*a2 != -1)
    swift_once();
  result = sub_1CA2E12C8();
  *a4 = result;
  return result;
}

uint64_t sub_1CA2E1DB0(uint64_t a1)
{
  return sub_1CA2E2238(a1, qword_1EF978170, &qword_1EF94A300);
}

uint64_t sub_1CA2E1DD4(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1CA2E1E10 + 4 * byte_1CA8DAB86[a1]))(0xD000000000000015, 0x80000001CA8875C0);
}

unint64_t sub_1CA2E1E10()
{
  return 0xD000000000000023;
}

void sub_1CA2E1E58()
{
  JUMPOUT(0x1CA2E1E64);
}

uint64_t sub_1CA2E1E70(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1CA2E1EA4 + 4 * byte_1CA8DAB8C[a1]))(0x636972656E6567, 0xE700000000000000);
}

uint64_t sub_1CA2E1EA4()
{
  return 0x7478654E7075;
}

uint64_t sub_1CA2E1EB8()
{
  return 0x727543636973756DLL;
}

uint64_t sub_1CA2E1ED8()
{
  return 0x74694B636973756DLL;
}

uint64_t sub_1CA2E1EFC()
{
  return 0x6C436D617A616873;
}

uint64_t sub_1CA2E1F1C()
{
  return 0x636143636973756DLL;
}

unint64_t sub_1CA2E1F38()
{
  return 0xD000000000000013;
}

uint64_t sub_1CA2E21DC()
{
  return 0x6C616E6F73726550;
}

uint64_t sub_1CA2E2200()
{
  return 0x686372616553;
}

uint64_t sub_1CA2E2214(uint64_t a1)
{
  return sub_1CA2E2238(a1, qword_1ED87D0C8, &qword_1ED872DA8);
}

uint64_t sub_1CA2E2238(uint64_t a1, uint64_t *a2, _QWORD *a3)
{
  uint64_t v5;
  uint64_t v6;

  v5 = sub_1CA85B348();
  __swift_allocate_value_buffer(v5, a2);
  v6 = __swift_project_value_buffer(v5, (uint64_t)a2);
  if (*a3 != -1)
    swift_once();
  return sub_1CA2E3B94(&qword_1ED873130, &OBJC_IVAR____TtC11PhotosGraph3Log____lazy_storage___logger, (uint64_t (*)(_QWORD))MEMORY[0x1E0DF2258], (uint64_t)MEMORY[0x1E0DF2248], v6);
}

void sub_1CA2E22DC(char *a1)
{
  sub_1CA328B34(*a1);
}

void sub_1CA2E22E8()
{
  char *v0;

  sub_1CA4369A0(*v0);
}

void sub_1CA2E22F0(uint64_t a1)
{
  char *v1;

  sub_1CA436D84(a1, *v1);
}

void sub_1CA2E22F8(uint64_t a1)
{
  char *v1;

  sub_1CA437238(a1, *v1);
}

uint64_t sub_1CA2E2300@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1CA2E4524();
  *a1 = result;
  return result;
}

uint64_t sub_1CA2E232C@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1CA2E1DD4(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1CA2E2354(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v8;

  v2 = *a2;
  v3 = sub_1CA2E1E70(*a1);
  v5 = v4;
  if (v3 == sub_1CA2E1E70(v2) && v5 == v6)
    v8 = 1;
  else
    v8 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1CA2E23DC()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_1CA85C368();
  sub_1CA2E1E70(v1);
  sub_1CA85B4B0();
  swift_bridgeObjectRelease();
  return sub_1CA85C3B0();
}

uint64_t sub_1CA2E243C()
{
  unsigned __int8 *v0;

  sub_1CA2E1E70(*v0);
  sub_1CA85B4B0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1CA2E247C()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_1CA85C368();
  sub_1CA2E1E70(v1);
  sub_1CA85B4B0();
  swift_bridgeObjectRelease();
  return sub_1CA85C3B0();
}

uint64_t sub_1CA2E24D8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1CA2E456C();
  *a1 = result;
  return result;
}

uint64_t sub_1CA2E2504@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1CA2E1E70(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1CA2E252C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  type metadata accessor for Log();
  v0 = swift_allocObject();
  *(_QWORD *)(v0 + 24) = 0;
  v1 = v0 + OBJC_IVAR____TtC11PhotosGraph3Log____lazy_storage___signposter;
  v2 = sub_1CA85B2E8();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
  v3 = v0 + OBJC_IVAR____TtC11PhotosGraph3Log____lazy_storage___logger;
  v4 = sub_1CA85B348();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 1, 1, v4);
  *(_WORD *)(v0 + 16) = 0;
  qword_1ED87D158 = v0;
  return result;
}

uint64_t sub_1CA2E25CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  type metadata accessor for Log();
  v0 = swift_allocObject();
  *(_QWORD *)(v0 + 24) = 0;
  v1 = v0 + OBJC_IVAR____TtC11PhotosGraph3Log____lazy_storage___signposter;
  v2 = sub_1CA85B2E8();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
  v3 = v0 + OBJC_IVAR____TtC11PhotosGraph3Log____lazy_storage___logger;
  v4 = sub_1CA85B348();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 1, 1, v4);
  *(_WORD *)(v0 + 16) = 256;
  qword_1ED87D180 = v0;
  return result;
}

uint64_t sub_1CA2E2670()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  type metadata accessor for Log();
  v0 = swift_allocObject();
  *(_QWORD *)(v0 + 24) = 0;
  v1 = v0 + OBJC_IVAR____TtC11PhotosGraph3Log____lazy_storage___signposter;
  v2 = sub_1CA85B2E8();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
  v3 = v0 + OBJC_IVAR____TtC11PhotosGraph3Log____lazy_storage___logger;
  v4 = sub_1CA85B348();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 1, 1, v4);
  *(_WORD *)(v0 + 16) = 513;
  qword_1ED87D0F0 = v0;
  return result;
}

uint64_t sub_1CA2E2714()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  type metadata accessor for Log();
  v0 = swift_allocObject();
  *(_QWORD *)(v0 + 24) = 0;
  v1 = v0 + OBJC_IVAR____TtC11PhotosGraph3Log____lazy_storage___signposter;
  v2 = sub_1CA85B2E8();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
  v3 = v0 + OBJC_IVAR____TtC11PhotosGraph3Log____lazy_storage___logger;
  v4 = sub_1CA85B348();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 1, 1, v4);
  *(_WORD *)(v0 + 16) = 769;
  qword_1ED87D0F8 = v0;
  return result;
}

uint64_t sub_1CA2E27B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  type metadata accessor for Log();
  v0 = swift_allocObject();
  *(_QWORD *)(v0 + 24) = 0;
  v1 = v0 + OBJC_IVAR____TtC11PhotosGraph3Log____lazy_storage___signposter;
  v2 = sub_1CA85B2E8();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
  v3 = v0 + OBJC_IVAR____TtC11PhotosGraph3Log____lazy_storage___logger;
  v4 = sub_1CA85B348();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 1, 1, v4);
  *(_WORD *)(v0 + 16) = 1025;
  qword_1ED87D178 = v0;
  return result;
}

uint64_t sub_1CA2E285C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  type metadata accessor for Log();
  v0 = swift_allocObject();
  *(_QWORD *)(v0 + 24) = 0;
  v1 = v0 + OBJC_IVAR____TtC11PhotosGraph3Log____lazy_storage___signposter;
  v2 = sub_1CA85B2E8();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
  v3 = v0 + OBJC_IVAR____TtC11PhotosGraph3Log____lazy_storage___logger;
  v4 = sub_1CA85B348();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 1, 1, v4);
  *(_WORD *)(v0 + 16) = 1281;
  qword_1ED87D078 = v0;
  return result;
}

uint64_t sub_1CA2E2900()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  type metadata accessor for Log();
  v0 = swift_allocObject();
  *(_QWORD *)(v0 + 24) = 0;
  v1 = v0 + OBJC_IVAR____TtC11PhotosGraph3Log____lazy_storage___signposter;
  v2 = sub_1CA85B2E8();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
  v3 = v0 + OBJC_IVAR____TtC11PhotosGraph3Log____lazy_storage___logger;
  v4 = sub_1CA85B348();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 1, 1, v4);
  *(_WORD *)(v0 + 16) = 1793;
  qword_1ED87D080 = v0;
  return result;
}

uint64_t sub_1CA2E29A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  type metadata accessor for Log();
  v0 = swift_allocObject();
  *(_QWORD *)(v0 + 24) = 0;
  v1 = v0 + OBJC_IVAR____TtC11PhotosGraph3Log____lazy_storage___signposter;
  v2 = sub_1CA85B2E8();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
  v3 = v0 + OBJC_IVAR____TtC11PhotosGraph3Log____lazy_storage___logger;
  v4 = sub_1CA85B348();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 1, 1, v4);
  *(_WORD *)(v0 + 16) = 2049;
  qword_1EF978188 = v0;
  return result;
}

uint64_t sub_1CA2E2A48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  type metadata accessor for Log();
  v0 = swift_allocObject();
  *(_QWORD *)(v0 + 24) = 0;
  v1 = v0 + OBJC_IVAR____TtC11PhotosGraph3Log____lazy_storage___signposter;
  v2 = sub_1CA85B2E8();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
  v3 = v0 + OBJC_IVAR____TtC11PhotosGraph3Log____lazy_storage___logger;
  v4 = sub_1CA85B348();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 1, 1, v4);
  *(_WORD *)(v0 + 16) = 2305;
  qword_1ED87D120 = v0;
  return result;
}

uint64_t sub_1CA2E2AEC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  type metadata accessor for Log();
  v0 = swift_allocObject();
  *(_QWORD *)(v0 + 24) = 0;
  v1 = v0 + OBJC_IVAR____TtC11PhotosGraph3Log____lazy_storage___signposter;
  v2 = sub_1CA85B2E8();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
  v3 = v0 + OBJC_IVAR____TtC11PhotosGraph3Log____lazy_storage___logger;
  v4 = sub_1CA85B348();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 1, 1, v4);
  *(_WORD *)(v0 + 16) = 2561;
  qword_1ED87D110 = v0;
  return result;
}

uint64_t sub_1CA2E2B90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  type metadata accessor for Log();
  v0 = swift_allocObject();
  *(_QWORD *)(v0 + 24) = 0;
  v1 = v0 + OBJC_IVAR____TtC11PhotosGraph3Log____lazy_storage___signposter;
  v2 = sub_1CA85B2E8();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
  v3 = v0 + OBJC_IVAR____TtC11PhotosGraph3Log____lazy_storage___logger;
  v4 = sub_1CA85B348();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 1, 1, v4);
  *(_WORD *)(v0 + 16) = 2817;
  qword_1ED87D118 = v0;
  return result;
}

uint64_t sub_1CA2E2C34()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  type metadata accessor for Log();
  v0 = swift_allocObject();
  *(_QWORD *)(v0 + 24) = 0;
  v1 = v0 + OBJC_IVAR____TtC11PhotosGraph3Log____lazy_storage___signposter;
  v2 = sub_1CA85B2E8();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
  v3 = v0 + OBJC_IVAR____TtC11PhotosGraph3Log____lazy_storage___logger;
  v4 = sub_1CA85B348();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 1, 1, v4);
  *(_WORD *)(v0 + 16) = 3073;
  qword_1ED87D138 = v0;
  return result;
}

uint64_t sub_1CA2E2CD8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  type metadata accessor for Log();
  v0 = swift_allocObject();
  *(_QWORD *)(v0 + 24) = 0;
  v1 = v0 + OBJC_IVAR____TtC11PhotosGraph3Log____lazy_storage___signposter;
  v2 = sub_1CA85B2E8();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
  v3 = v0 + OBJC_IVAR____TtC11PhotosGraph3Log____lazy_storage___logger;
  v4 = sub_1CA85B348();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 1, 1, v4);
  *(_WORD *)(v0 + 16) = 3329;
  qword_1ED87D130 = v0;
  return result;
}

uint64_t sub_1CA2E2D7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  type metadata accessor for Log();
  v0 = swift_allocObject();
  *(_QWORD *)(v0 + 24) = 0;
  v1 = v0 + OBJC_IVAR____TtC11PhotosGraph3Log____lazy_storage___signposter;
  v2 = sub_1CA85B2E8();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
  v3 = v0 + OBJC_IVAR____TtC11PhotosGraph3Log____lazy_storage___logger;
  v4 = sub_1CA85B348();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 1, 1, v4);
  *(_WORD *)(v0 + 16) = 3585;
  qword_1ED87D148 = v0;
  return result;
}

uint64_t sub_1CA2E2E20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  type metadata accessor for Log();
  v0 = swift_allocObject();
  *(_QWORD *)(v0 + 24) = 0;
  v1 = v0 + OBJC_IVAR____TtC11PhotosGraph3Log____lazy_storage___signposter;
  v2 = sub_1CA85B2E8();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
  v3 = v0 + OBJC_IVAR____TtC11PhotosGraph3Log____lazy_storage___logger;
  v4 = sub_1CA85B348();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 1, 1, v4);
  *(_WORD *)(v0 + 16) = 3841;
  qword_1ED87D0E8 = v0;
  return result;
}

uint64_t sub_1CA2E2EC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  type metadata accessor for Log();
  v0 = swift_allocObject();
  *(_QWORD *)(v0 + 24) = 0;
  v1 = v0 + OBJC_IVAR____TtC11PhotosGraph3Log____lazy_storage___signposter;
  v2 = sub_1CA85B2E8();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
  v3 = v0 + OBJC_IVAR____TtC11PhotosGraph3Log____lazy_storage___logger;
  v4 = sub_1CA85B348();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 1, 1, v4);
  *(_WORD *)(v0 + 16) = 4097;
  qword_1ED87D100 = v0;
  return result;
}

uint64_t sub_1CA2E2F68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  type metadata accessor for Log();
  v0 = swift_allocObject();
  *(_QWORD *)(v0 + 24) = 0;
  v1 = v0 + OBJC_IVAR____TtC11PhotosGraph3Log____lazy_storage___signposter;
  v2 = sub_1CA85B2E8();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
  v3 = v0 + OBJC_IVAR____TtC11PhotosGraph3Log____lazy_storage___logger;
  v4 = sub_1CA85B348();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 1, 1, v4);
  *(_WORD *)(v0 + 16) = 4353;
  qword_1ED87D108 = v0;
  return result;
}

uint64_t sub_1CA2E300C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  type metadata accessor for Log();
  v0 = swift_allocObject();
  *(_QWORD *)(v0 + 24) = 0;
  v1 = v0 + OBJC_IVAR____TtC11PhotosGraph3Log____lazy_storage___signposter;
  v2 = sub_1CA85B2E8();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
  v3 = v0 + OBJC_IVAR____TtC11PhotosGraph3Log____lazy_storage___logger;
  v4 = sub_1CA85B348();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 1, 1, v4);
  *(_WORD *)(v0 + 16) = 4609;
  qword_1ED87D128 = v0;
  return result;
}

uint64_t sub_1CA2E30B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  type metadata accessor for Log();
  v0 = swift_allocObject();
  *(_QWORD *)(v0 + 24) = 0;
  v1 = v0 + OBJC_IVAR____TtC11PhotosGraph3Log____lazy_storage___signposter;
  v2 = sub_1CA85B2E8();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
  v3 = v0 + OBJC_IVAR____TtC11PhotosGraph3Log____lazy_storage___logger;
  v4 = sub_1CA85B348();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 1, 1, v4);
  *(_WORD *)(v0 + 16) = 4865;
  qword_1ED87D150 = v0;
  return result;
}

uint64_t sub_1CA2E3154()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  type metadata accessor for Log();
  v0 = swift_allocObject();
  *(_QWORD *)(v0 + 24) = 0;
  v1 = v0 + OBJC_IVAR____TtC11PhotosGraph3Log____lazy_storage___signposter;
  v2 = sub_1CA85B2E8();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
  v3 = v0 + OBJC_IVAR____TtC11PhotosGraph3Log____lazy_storage___logger;
  v4 = sub_1CA85B348();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 1, 1, v4);
  *(_WORD *)(v0 + 16) = 5121;
  qword_1ED87D140 = v0;
  return result;
}

uint64_t sub_1CA2E31F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  type metadata accessor for Log();
  v0 = swift_allocObject();
  *(_QWORD *)(v0 + 24) = 0;
  v1 = v0 + OBJC_IVAR____TtC11PhotosGraph3Log____lazy_storage___signposter;
  v2 = sub_1CA85B2E8();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
  v3 = v0 + OBJC_IVAR____TtC11PhotosGraph3Log____lazy_storage___logger;
  v4 = sub_1CA85B348();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 1, 1, v4);
  *(_WORD *)(v0 + 16) = 1537;
  qword_1ED87D160 = v0;
  return result;
}

uint64_t sub_1CA2E329C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  type metadata accessor for Log();
  v0 = swift_allocObject();
  *(_QWORD *)(v0 + 24) = 0;
  v1 = v0 + OBJC_IVAR____TtC11PhotosGraph3Log____lazy_storage___signposter;
  v2 = sub_1CA85B2E8();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
  v3 = v0 + OBJC_IVAR____TtC11PhotosGraph3Log____lazy_storage___logger;
  v4 = sub_1CA85B348();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 1, 1, v4);
  *(_WORD *)(v0 + 16) = 5378;
  qword_1EF978190 = v0;
  return result;
}

uint64_t sub_1CA2E3340()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  type metadata accessor for Log();
  v0 = swift_allocObject();
  *(_QWORD *)(v0 + 24) = 0;
  v1 = v0 + OBJC_IVAR____TtC11PhotosGraph3Log____lazy_storage___signposter;
  v2 = sub_1CA85B2E8();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
  v3 = v0 + OBJC_IVAR____TtC11PhotosGraph3Log____lazy_storage___logger;
  v4 = sub_1CA85B348();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 1, 1, v4);
  *(_WORD *)(v0 + 16) = 5635;
  qword_1EF978198 = v0;
  return result;
}

uint64_t sub_1CA2E33E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  type metadata accessor for Log();
  v0 = swift_allocObject();
  *(_QWORD *)(v0 + 24) = 0;
  v1 = v0 + OBJC_IVAR____TtC11PhotosGraph3Log____lazy_storage___signposter;
  v2 = sub_1CA85B2E8();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
  v3 = v0 + OBJC_IVAR____TtC11PhotosGraph3Log____lazy_storage___logger;
  v4 = sub_1CA85B348();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 1, 1, v4);
  *(_WORD *)(v0 + 16) = 5892;
  qword_1EF9781A0 = v0;
  return result;
}

uint64_t sub_1CA2E3488()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  type metadata accessor for Log();
  v0 = swift_allocObject();
  *(_QWORD *)(v0 + 24) = 0;
  v1 = v0 + OBJC_IVAR____TtC11PhotosGraph3Log____lazy_storage___signposter;
  v2 = sub_1CA85B2E8();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
  v3 = v0 + OBJC_IVAR____TtC11PhotosGraph3Log____lazy_storage___logger;
  v4 = sub_1CA85B348();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 1, 1, v4);
  *(_WORD *)(v0 + 16) = 6148;
  qword_1EF9781A8 = v0;
  return result;
}

uint64_t sub_1CA2E352C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  type metadata accessor for Log();
  v0 = swift_allocObject();
  *(_QWORD *)(v0 + 24) = 0;
  v1 = v0 + OBJC_IVAR____TtC11PhotosGraph3Log____lazy_storage___signposter;
  v2 = sub_1CA85B2E8();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
  v3 = v0 + OBJC_IVAR____TtC11PhotosGraph3Log____lazy_storage___logger;
  v4 = sub_1CA85B348();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 1, 1, v4);
  *(_WORD *)(v0 + 16) = 6404;
  qword_1EF9781B0 = v0;
  return result;
}

uint64_t sub_1CA2E35D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  type metadata accessor for Log();
  v0 = swift_allocObject();
  *(_QWORD *)(v0 + 24) = 0;
  v1 = v0 + OBJC_IVAR____TtC11PhotosGraph3Log____lazy_storage___signposter;
  v2 = sub_1CA85B2E8();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
  v3 = v0 + OBJC_IVAR____TtC11PhotosGraph3Log____lazy_storage___logger;
  v4 = sub_1CA85B348();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 1, 1, v4);
  *(_WORD *)(v0 + 16) = 6660;
  qword_1EF9781B8 = v0;
  return result;
}

uint64_t sub_1CA2E3674()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  type metadata accessor for Log();
  v0 = swift_allocObject();
  *(_QWORD *)(v0 + 24) = 0;
  v1 = v0 + OBJC_IVAR____TtC11PhotosGraph3Log____lazy_storage___signposter;
  v2 = sub_1CA85B2E8();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
  v3 = v0 + OBJC_IVAR____TtC11PhotosGraph3Log____lazy_storage___logger;
  v4 = sub_1CA85B348();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 1, 1, v4);
  *(_WORD *)(v0 + 16) = 6912;
  qword_1ED87D070 = v0;
  return result;
}

uint64_t sub_1CA2E3718()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  type metadata accessor for Log();
  v0 = swift_allocObject();
  *(_QWORD *)(v0 + 24) = 0;
  v1 = v0 + OBJC_IVAR____TtC11PhotosGraph3Log____lazy_storage___signposter;
  v2 = sub_1CA85B2E8();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
  v3 = v0 + OBJC_IVAR____TtC11PhotosGraph3Log____lazy_storage___logger;
  v4 = sub_1CA85B348();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 1, 1, v4);
  *(_WORD *)(v0 + 16) = 7173;
  qword_1EF9781C0 = v0;
  return result;
}

uint64_t sub_1CA2E37BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  type metadata accessor for Log();
  v0 = swift_allocObject();
  *(_QWORD *)(v0 + 24) = 0;
  v1 = v0 + OBJC_IVAR____TtC11PhotosGraph3Log____lazy_storage___signposter;
  v2 = sub_1CA85B2E8();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
  v3 = v0 + OBJC_IVAR____TtC11PhotosGraph3Log____lazy_storage___logger;
  v4 = sub_1CA85B348();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 1, 1, v4);
  *(_WORD *)(v0 + 16) = 7424;
  qword_1EF9781C8 = v0;
  return result;
}

uint64_t sub_1CA2E3860()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  type metadata accessor for Log();
  v0 = swift_allocObject();
  *(_QWORD *)(v0 + 24) = 0;
  v1 = v0 + OBJC_IVAR____TtC11PhotosGraph3Log____lazy_storage___signposter;
  v2 = sub_1CA85B2E8();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
  v3 = v0 + OBJC_IVAR____TtC11PhotosGraph3Log____lazy_storage___logger;
  v4 = sub_1CA85B348();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 1, 1, v4);
  *(_WORD *)(v0 + 16) = 7680;
  qword_1ED87D0A0 = v0;
  return result;
}

uint64_t sub_1CA2E3904()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  type metadata accessor for Log();
  v0 = swift_allocObject();
  *(_QWORD *)(v0 + 24) = 0;
  v1 = v0 + OBJC_IVAR____TtC11PhotosGraph3Log____lazy_storage___signposter;
  v2 = sub_1CA85B2E8();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
  v3 = v0 + OBJC_IVAR____TtC11PhotosGraph3Log____lazy_storage___logger;
  v4 = sub_1CA85B348();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 1, 1, v4);
  *(_WORD *)(v0 + 16) = 7936;
  qword_1EF9781D0 = v0;
  return result;
}

uint64_t sub_1CA2E39A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  type metadata accessor for Log();
  v0 = swift_allocObject();
  *(_QWORD *)(v0 + 24) = 0;
  v1 = v0 + OBJC_IVAR____TtC11PhotosGraph3Log____lazy_storage___signposter;
  v2 = sub_1CA85B2E8();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
  v3 = v0 + OBJC_IVAR____TtC11PhotosGraph3Log____lazy_storage___logger;
  v4 = sub_1CA85B348();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 1, 1, v4);
  *(_WORD *)(v0 + 16) = 0x2000;
  qword_1EF9781D8 = v0;
  return result;
}

uint64_t sub_1CA2E3A4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  type metadata accessor for Log();
  v0 = swift_allocObject();
  *(_QWORD *)(v0 + 24) = 0;
  v1 = v0 + OBJC_IVAR____TtC11PhotosGraph3Log____lazy_storage___signposter;
  v2 = sub_1CA85B2E8();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
  v3 = v0 + OBJC_IVAR____TtC11PhotosGraph3Log____lazy_storage___logger;
  v4 = sub_1CA85B348();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 1, 1, v4);
  *(_WORD *)(v0 + 16) = 8448;
  qword_1EF9781E0 = v0;
  return result;
}

uint64_t sub_1CA2E3AF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  type metadata accessor for Log();
  v0 = swift_allocObject();
  *(_QWORD *)(v0 + 24) = 0;
  v1 = v0 + OBJC_IVAR____TtC11PhotosGraph3Log____lazy_storage___signposter;
  v2 = sub_1CA85B2E8();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
  v3 = v0 + OBJC_IVAR____TtC11PhotosGraph3Log____lazy_storage___logger;
  v4 = sub_1CA85B348();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 1, 1, v4);
  *(_WORD *)(v0 + 16) = 8704;
  qword_1ED87D0A8 = v0;
  return result;
}

uint64_t sub_1CA2E3B94@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X1>, uint64_t (*a3)(_QWORD)@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v19[2];

  v11 = __swift_instantiateConcreteTypeFromMangledName(a1);
  v12 = MEMORY[0x1E0C80A78](v11);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)v19 - v13;
  v15 = v5 + *a2;
  swift_beginAccess();
  sub_1CA2684BC(v15, (uint64_t)v14, a1);
  v16 = a3(0);
  v17 = *(_QWORD *)(v16 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v14, 1, v16) == 1)
  {
    v19[1] = a4;
    sub_1CA267BE8((uint64_t)v14, a1);
    __asm { BR              X10 }
  }
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v17 + 32))(a5, v14, v16);
}

uint64_t Log.deinit()
{
  uint64_t v0;

  sub_1CA267BE8(v0 + OBJC_IVAR____TtC11PhotosGraph3Log____lazy_storage___signposter, &qword_1ED873120);
  sub_1CA267BE8(v0 + OBJC_IVAR____TtC11PhotosGraph3Log____lazy_storage___logger, &qword_1ED873130);
  return v0;
}

uint64_t Log.__deallocating_deinit()
{
  uint64_t v0;

  sub_1CA267BE8(v0 + OBJC_IVAR____TtC11PhotosGraph3Log____lazy_storage___signposter, &qword_1ED873120);
  sub_1CA267BE8(v0 + OBJC_IVAR____TtC11PhotosGraph3Log____lazy_storage___logger, &qword_1ED873130);
  return swift_deallocClassInstance();
}

uint64_t sub_1CA2E3E68()
{
  return type metadata accessor for Log();
}

uint64_t type metadata accessor for Log()
{
  uint64_t result;

  result = qword_1ED872B78;
  if (!qword_1ED872B78)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1CA2E3EAC()
{
  unint64_t v0;
  unint64_t v1;

  sub_1CA2E3F7C(319, &qword_1ED873128, (void (*)(uint64_t))MEMORY[0x1E0DF2170]);
  if (v0 <= 0x3F)
  {
    sub_1CA2E3F7C(319, &qword_1ED873138, (void (*)(uint64_t))MEMORY[0x1E0DF2258]);
    if (v1 <= 0x3F)
      swift_updateClassMetadata2();
  }
}

uint64_t method lookup function for Log()
{
  return swift_lookUpClassMethod();
}

void sub_1CA2E3F7C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    v4 = sub_1CA85BCCC();
    if (!v5)
      atomic_store(v4, a2);
  }
}

uint64_t getEnumTagSinglePayload for Log.Category(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xDE)
    goto LABEL_17;
  if (a2 + 34 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 34) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 34;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 34;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 34;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x23;
  v8 = v6 - 35;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for Log.Category(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 34 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 34) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xDE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xDD)
    return ((uint64_t (*)(void))((char *)&loc_1CA2E40A4 + 4 * byte_1CA8DABBA[v4]))();
  *a1 = a2 + 34;
  return ((uint64_t (*)(void))((char *)sub_1CA2E40D8 + 4 * byte_1CA8DABB5[v4]))();
}

uint64_t sub_1CA2E40D8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CA2E40E0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1CA2E40E8);
  return result;
}

uint64_t sub_1CA2E40F4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1CA2E40FCLL);
  *(_BYTE *)result = a2 + 34;
  return result;
}

uint64_t sub_1CA2E4100(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CA2E4108(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Log.Category()
{
  return &type metadata for Log.Category;
}

uint64_t storeEnumTagSinglePayload for Log.Subsystem(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1CA2E4170 + 4 * byte_1CA8DABC4[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1CA2E41A4 + 4 * byte_1CA8DABBF[v4]))();
}

uint64_t sub_1CA2E41A4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CA2E41AC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1CA2E41B4);
  return result;
}

uint64_t sub_1CA2E41C0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1CA2E41C8);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1CA2E41CC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CA2E41D4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Log.Subsystem()
{
  return &type metadata for Log.Subsystem;
}

unint64_t sub_1CA2E41F4()
{
  unint64_t result;

  result = qword_1EF94D028;
  if (!qword_1EF94D028)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8DACDC, &type metadata for Log.Subsystem);
    atomic_store(result, (unint64_t *)&qword_1EF94D028);
  }
  return result;
}

unint64_t sub_1CA2E423C()
{
  unint64_t result;

  result = qword_1EF94D030;
  if (!qword_1EF94D030)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8DAD7C, &type metadata for Log.Category);
    atomic_store(result, (unint64_t *)&qword_1EF94D030);
  }
  return result;
}

uint64_t sub_1CA2E4280@<X0>(const char *a1@<X0>, uint64_t a2@<X1>, unsigned __int8 a3@<W2>, uint64_t a4@<X3>, int a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t (*v20)(_QWORD);
  NSObject *v21;
  uint64_t result;
  const char *v23;
  void (*v24)(char *, char *, uint64_t);
  uint8_t *v25;
  os_signpost_id_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  const char *v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  const char *v39;
  char v40;

  v37 = a5;
  v35 = a2;
  v36 = a4;
  v39 = a1;
  v9 = a3;
  v10 = sub_1CA85B2D0();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v29 - v15;
  v17 = sub_1CA85B2E8();
  v32 = *(_QWORD *)(v17 - 8);
  v33 = v17;
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v29 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1CA2E3B94(&qword_1ED873120, &OBJC_IVAR____TtC11PhotosGraph3Log____lazy_storage___signposter, v20, MEMORY[0x1E0DF2158], (uint64_t)v19);
  sub_1CA85B2C4();
  v21 = sub_1CA85B2DC();
  v31 = sub_1CA85BBE8();
  result = sub_1CA85BC9C();
  v38 = a6;
  v34 = v9;
  if ((result & 1) == 0)
    goto LABEL_5;
  if ((v9 & 1) == 0)
  {
    v23 = v39;
    if (!v39)
    {
      __break(1u);
LABEL_5:

      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v14, v16, v10);
LABEL_11:
      sub_1CA85B318();
      swift_allocObject();
      v27 = sub_1CA85B30C();
      (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v10);
      (*(void (**)(char *, uint64_t))(v32 + 8))(v19, v33);
      result = swift_retain();
      v28 = v35;
      *(_QWORD *)a7 = v39;
      *(_QWORD *)(a7 + 8) = v28;
      *(_BYTE *)(a7 + 16) = v34;
      *(_QWORD *)(a7 + 24) = v36;
      *(_BYTE *)(a7 + 32) = v37 & 1;
      *(_QWORD *)(a7 + 40) = result;
      *(_QWORD *)(a7 + 48) = v27;
      return result;
    }
LABEL_10:
    v30 = v23;
    v24 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
    v24(v14, v16, v10);
    v25 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v25 = 0;
    v26 = sub_1CA85B2B8();
    _os_signpost_emit_with_name_impl(&dword_1CA237000, v21, (os_signpost_type_t)v31, v26, v30, "", v25, 2u);
    MEMORY[0x1CAA4F27C](v25, -1, -1);

    (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
    v24(v14, v16, v10);
    goto LABEL_11;
  }
  if ((unint64_t)v39 >> 32)
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (v39 >> 11 != 27)
  {
    if (v39 >> 16 <= 0x10)
    {
      v23 = &v40;
      goto LABEL_10;
    }
    goto LABEL_13;
  }
LABEL_14:
  __break(1u);
  return result;
}

uint64_t sub_1CA2E4524()
{
  unint64_t v0;

  v0 = sub_1CA85C0F8();
  swift_bridgeObjectRelease();
  if (v0 >= 6)
    return 6;
  else
    return v0;
}

uint64_t sub_1CA2E456C()
{
  unint64_t v0;

  v0 = sub_1CA85C2A8();
  swift_bridgeObjectRelease();
  if (v0 >= 0x23)
    return 35;
  else
    return v0;
}

unint64_t sub_1CA2E45BC()
{
  unint64_t result;

  result = qword_1ED8724B0;
  if (!qword_1ED8724B0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED8724B0);
  }
  return result;
}

uint64_t sub_1CA2E45F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED873150);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1CA2E4640(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

ValueMetadata *type metadata accessor for PublicEventPerformer()
{
  return &type metadata for PublicEventPerformer;
}

uint64_t sub_1CA2E4694()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  sub_1CA85C368();
  swift_bridgeObjectRetain();
  sub_1CA85B4B0();
  swift_bridgeObjectRelease();
  sub_1CA85C380();
  if (v1)
  {
    swift_bridgeObjectRetain();
    sub_1CA85B4B0();
    swift_bridgeObjectRelease();
  }
  return sub_1CA85C3B0();
}

uint64_t sub_1CA2E473C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  swift_bridgeObjectRetain();
  sub_1CA85B4B0();
  swift_bridgeObjectRelease();
  if (!v1)
    return sub_1CA85C380();
  sub_1CA85C380();
  swift_bridgeObjectRetain();
  sub_1CA85B4B0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1CA2E47DC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  sub_1CA85C368();
  swift_bridgeObjectRetain();
  sub_1CA85B4B0();
  swift_bridgeObjectRelease();
  sub_1CA85C380();
  if (v1)
  {
    swift_bridgeObjectRetain();
    sub_1CA85B4B0();
    swift_bridgeObjectRelease();
  }
  return sub_1CA85C3B0();
}

uint64_t sub_1CA2E4880(uint64_t *a1, uint64_t *a2)
{
  return sub_1CA2E48E4(*a1, a1[1], a1[2], a1[3], *a2, a2[1], a2[2], a2[3]);
}

unint64_t sub_1CA2E48A0()
{
  unint64_t result;

  result = qword_1EF94D038;
  if (!qword_1EF94D038)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8DADC8, &type metadata for PublicEventPerformer);
    atomic_store(result, (unint64_t *)&qword_1EF94D038);
  }
  return result;
}

uint64_t sub_1CA2E48E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  char v12;
  uint64_t result;

  if (a1 == a5 && a2 == a6 || (v12 = sub_1CA85C284(), result = 0, (v12 & 1) != 0))
  {
    if (a4)
    {
      if (a8 && (a3 == a7 && a4 == a8 || (sub_1CA85C284() & 1) != 0))
        return 1;
    }
    else if (!a8)
    {
      return 1;
    }
    return 0;
  }
  return result;
}

void sub_1CA2E4984(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint8_t *v20;
  uint8_t *v21;
  void *v22;
  void *v23;
  id v24;
  id v25;
  void *v26;
  id v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  void *v32;
  void *v33;
  id v34;
  char *v35;
  id v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  NSObject *v42;
  os_log_type_t v43;
  uint8_t *v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  NSObject *v48;
  os_log_type_t v49;
  uint8_t *v50;
  NSObject *v51;
  os_log_type_t v52;
  uint8_t *v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;

  v56 = a1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8711C0);
  v6 = MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v54 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v54 - v9;
  v11 = sub_1CA85A5B0();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v55 = (char *)&v54 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED872DE0 != -1)
    swift_once();
  v14 = sub_1CA85B348();
  v57 = __swift_project_value_buffer(v14, (uint64_t)qword_1ED87D0C8);
  v15 = sub_1CA85B330();
  v16 = sub_1CA85BAEC();
  if (os_log_type_enabled(v15, v16))
  {
    v17 = (uint8_t *)swift_slowAlloc();
    v54 = v10;
    v18 = a2;
    v19 = a3;
    v20 = v17;
    *(_WORD *)v17 = 0;
    _os_log_impl(&dword_1CA237000, v15, v16, "Anniversary grounding has started.", v17, 2u);
    v21 = v20;
    a3 = v19;
    a2 = v18;
    v10 = v54;
    MEMORY[0x1CAA4F27C](v21, -1, -1);
  }

  v22 = (void *)objc_opt_self();
  v23 = (void *)sub_1CA85B510();
  v24 = objc_msgSend(v22, sel_personNodesForLocalIdentifier_inGraph_, v23, *(_QWORD *)(v58 + 8));

  v25 = objc_msgSend(v24, sel_firstNode);
  v26 = v25;
  if (!v25)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v10, 1, 1, v11);
LABEL_11:
    sub_1CA267BE8((uint64_t)v10, &qword_1ED8711C0);
    goto LABEL_13;
  }
  v27 = objc_msgSend(v25, sel_anniversaryDate);
  if (v27)
  {
    v28 = v27;
    sub_1CA85A574();

    v29 = 0;
  }
  else
  {
    v29 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v8, v29, 1, v11);
  sub_1CA295538((uint64_t)v8, (uint64_t)v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
    goto LABEL_11;
  v30 = a3;
  v31 = v55;
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v55, v10, v11);
  v32 = *(void **)(v58 + 24);
  v33 = (void *)sub_1CA85A508();
  v34 = objc_msgSend(v32, sel_stringFromDate_, v33);

  sub_1CA85B534();
  v35 = v31;
  a3 = v30;
  (*(void (**)(char *, uint64_t))(v12 + 8))(v35, v11);
LABEL_13:
  v36 = objc_msgSend(v24, sel_anniversaryMomentNodes);
  if ((uint64_t)objc_msgSend(v36, sel_count) < 1)
  {
    v56 = a3;
    v46 = a2;
    v47 = *(_QWORD *)(sub_1CA2E4FF8(v26, a2) + 16);
    if (v47)
    {
      v48 = sub_1CA85B330();
      v49 = sub_1CA85BAEC();
      if (os_log_type_enabled(v48, v49))
      {
        v50 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)v50 = 134217984;
        v59 = v47;
        sub_1CA85BCF0();
        _os_log_impl(&dword_1CA237000, v48, v49, "Use %ld fallback anniversary asset uuids that are intersected by the potential anniversary moment asset uuids", v50, 0xCu);
        MEMORY[0x1CAA4F27C](v50, -1, -1);
      }

    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      v51 = sub_1CA85B330();
      v52 = sub_1CA85BAEC();
      if (os_log_type_enabled(v51, v52))
      {
        v53 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)v53 = 134217984;
        v59 = *(_QWORD *)(v46 + 16);
        sub_1CA85BCF0();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1CA237000, v51, v52, "Use %ld fallback anniversary asset uuids since there are no overlapping moment nodes with potential anniversary date nodes", v53, 0xCu);
        MEMORY[0x1CAA4F27C](v53, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRetain();
    }
    sub_1CA85B0F0();
    v45 = v36;
    v36 = v24;
  }
  else
  {
    v37 = objc_msgSend(v36, sel_uuids);
    v38 = sub_1CA85B984();

    sub_1CA284518(v38, 0);
    v40 = v39;
    swift_bridgeObjectRelease();
    if (v56)
    {
      v41 = swift_bridgeObjectRetain();
      sub_1CA2D6EB0(v41, v40);
      swift_bridgeObjectRelease();
    }
    v42 = sub_1CA85B330();
    v43 = sub_1CA85BAEC();
    if (os_log_type_enabled(v42, v43))
    {
      v44 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v44 = 0;
      _os_log_impl(&dword_1CA237000, v42, v43, "Use anniversary moment asset uuids", v44, 2u);
      MEMORY[0x1CAA4F27C](v44, -1, -1);
    }

    sub_1CA85B0F0();
    v45 = v24;
  }

}

uint64_t sub_1CA2E4FF8(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  id v16;
  id v17;
  void *v18;
  void (*v19)(char *, char *, uint64_t);
  id v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  NSObject *v25;
  os_log_type_t v26;
  _BOOL4 v27;
  uint8_t *v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  NSObject *v35;
  uint8_t *v36;
  uint8_t *v37;
  uint64_t v38;
  id v39;
  NSObject *v40;
  os_log_type_t v41;
  uint8_t *v42;
  uint64_t v43;
  id v44;
  void *v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  NSObject *v50;
  os_log_type_t v51;
  uint8_t *v52;
  uint64_t v53;
  id v55;
  _QWORD *v56;
  void *v57;
  void *v58;
  NSObject *v59;
  id v60;
  id v61;
  uint64_t v62;
  uint64_t v63;
  id v64;
  id v65;
  NSObject *v66;
  os_log_type_t v67;
  int v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  unint64_t v77;
  os_log_t v78;
  uint8_t *v79;
  NSObject *v80;
  os_log_type_t v81;
  uint8_t *v82;
  _QWORD v83[2];
  os_log_t v84;
  uint8_t *v85;
  uint8_t *v86;
  uint8_t *v87;
  NSObject *v88;
  id v89;
  id v90;
  uint64_t v91;
  uint64_t v92;
  uint8_t *v93;

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94D040);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v83 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1CA85A2A4();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x1E0C80A78](v9);
  v13 = (char *)v83 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)v83 - v14;
  if (!a1)
    return MEMORY[0x1E0DEE9E8];
  v16 = a1;
  v17 = objc_msgSend(v16, sel_anniversaryDateComponents);
  if (!v17)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, 1, 1, v9);
    goto LABEL_11;
  }
  v18 = v17;
  sub_1CA85A214();

  v19 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
  v19(v8, v13, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v8, 0, 1, v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
LABEL_11:
    sub_1CA267BE8((uint64_t)v8, &qword_1EF94D040);
    if (qword_1ED872DE0 != -1)
      swift_once();
    v38 = sub_1CA85B348();
    __swift_project_value_buffer(v38, (uint64_t)qword_1ED87D0C8);
    v39 = v16;
    v40 = sub_1CA85B330();
    v41 = sub_1CA85BAEC();
    if (os_log_type_enabled(v40, v41))
    {
      v42 = (uint8_t *)swift_slowAlloc();
      v43 = swift_slowAlloc();
      v93 = (uint8_t *)v43;
      *(_DWORD *)v42 = 136315138;
      v44 = objc_msgSend(v39, sel_localIdentifier);
      if (v44)
      {
        v45 = v44;
        v46 = sub_1CA85B534();
        v48 = v47;

      }
      else
      {
        v48 = 0xE300000000000000;
        v46 = 7104878;
      }
      v92 = sub_1CA28712C(v46, v48, (uint64_t *)&v93);
      sub_1CA85BCF0();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1CA237000, v40, v41, "No anniversary date components for person localIdentifier %s", v42, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1CAA4F27C](v43, -1, -1);
      MEMORY[0x1CAA4F27C](v42, -1, -1);

    }
    else
    {

    }
    return MEMORY[0x1E0DEE9E8];
  }
  v19(v15, v8, v9);
  v20 = sub_1CA2E5A48();
  if (!v20)
  {
LABEL_21:
    if (qword_1ED872DE0 != -1)
      swift_once();
    v49 = sub_1CA85B348();
    __swift_project_value_buffer(v49, (uint64_t)qword_1ED87D0C8);
    v50 = sub_1CA85B330();
    v51 = sub_1CA85BAE0();
    if (os_log_type_enabled(v50, v51))
    {
      v52 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v52 = 0;
      _os_log_impl(&dword_1CA237000, v50, v51, "No anniversary date nodes are found", v52, 2u);
      MEMORY[0x1CAA4F27C](v52, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);
    return MEMORY[0x1E0DEE9E8];
  }
  v21 = v20;
  if ((uint64_t)objc_msgSend(v20, sel_count) < 1)
  {

    goto LABEL_21;
  }
  if (qword_1ED872DE0 != -1)
    swift_once();
  v22 = sub_1CA85B348();
  v23 = __swift_project_value_buffer(v22, (uint64_t)qword_1ED87D0C8);
  v24 = v21;
  v91 = v23;
  v25 = sub_1CA85B330();
  v26 = sub_1CA85BAEC();
  LODWORD(v89) = v26;
  v27 = os_log_type_enabled(v25, v26);
  v90 = v24;
  if (v27)
  {
    v88 = v25;
    v28 = (uint8_t *)swift_slowAlloc();
    v87 = (uint8_t *)swift_slowAlloc();
    v93 = v87;
    *(_DWORD *)v28 = 136315138;
    v85 = v28 + 4;
    v86 = v28;
    v29 = objc_msgSend(v24, sel_dateNames);
    v30 = MEMORY[0x1E0DEA968];
    v31 = sub_1CA85B7B0();

    v32 = MEMORY[0x1CAA4D620](v31, v30);
    v34 = v33;
    v24 = v90;
    swift_bridgeObjectRelease();
    v92 = sub_1CA28712C(v32, v34, (uint64_t *)&v93);
    sub_1CA85BCF0();

    swift_bridgeObjectRelease();
    v35 = v88;
    v36 = v86;
    _os_log_impl(&dword_1CA237000, v88, (os_log_type_t)v89, "All potential anniversary dates = %s", v86, 0xCu);
    v37 = v87;
    swift_arrayDestroy();
    MEMORY[0x1CAA4F27C](v37, -1, -1);
    MEMORY[0x1CAA4F27C](v36, -1, -1);

  }
  else
  {

  }
  v55 = objc_msgSend(v24, sel_momentNodes);
  v56 = sub_1CA284214(a2);
  v57 = (void *)objc_opt_self();
  sub_1CA2877D4((uint64_t)v56);
  swift_bridgeObjectRelease();
  v58 = (void *)sub_1CA85B978();
  swift_bridgeObjectRelease();
  v59 = objc_msgSend(v57, sel_momentNodesForUUIDs_inGraph_, v58, *(_QWORD *)(v3 + 8));

  v88 = v59;
  v89 = v55;
  v60 = -[NSObject collectionByIntersecting:](v59, sel_collectionByIntersecting_, v55);
  v61 = objc_msgSend(v60, sel_uuids);
  v62 = sub_1CA85B984();

  sub_1CA284518(v62, 0);
  v53 = v63;
  v87 = (uint8_t *)v60;
  v64 = objc_msgSend(v60, sel_dateNodes);
  v65 = objc_msgSend(v64, sel_dateNames);

  sub_1CA85B7B0();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  v66 = sub_1CA85B330();
  v67 = sub_1CA85BAEC();
  v68 = v67;
  if (os_log_type_enabled(v66, v67))
  {
    v69 = swift_slowAlloc();
    v86 = (uint8_t *)swift_slowAlloc();
    v93 = v86;
    *(_DWORD *)v69 = 134218498;
    LODWORD(v85) = v68;
    v84 = v66;
    v70 = *(_QWORD *)(v62 + 16);
    swift_bridgeObjectRelease();
    v92 = v70;
    v83[1] = &v93;
    sub_1CA85BCF0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v69 + 12) = 2080;
    v83[0] = v69 + 14;
    swift_bridgeObjectRetain();
    v71 = sub_1CA85B990();
    v73 = v72;
    swift_bridgeObjectRelease();
    v92 = sub_1CA28712C(v71, v73, (uint64_t *)&v93);
    sub_1CA85BCF0();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v69 + 22) = 2080;
    v83[0] = v69 + 24;
    v74 = swift_bridgeObjectRetain();
    v75 = MEMORY[0x1CAA4D620](v74, MEMORY[0x1E0DEA968]);
    v77 = v76;
    swift_bridgeObjectRelease();
    v92 = sub_1CA28712C(v75, v77, (uint64_t *)&v93);
    sub_1CA85BCF0();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    v78 = v84;
    _os_log_impl(&dword_1CA237000, v84, (os_log_type_t)v85, "There are %ld overlapping anniversary moment uuids = %s with potential anniversary moment dates = %s", (uint8_t *)v69, 0x20u);
    v79 = v86;
    swift_arrayDestroy();
    MEMORY[0x1CAA4F27C](v79, -1, -1);
    MEMORY[0x1CAA4F27C](v69, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  swift_bridgeObjectRetain();
  v80 = sub_1CA85B330();
  v81 = sub_1CA85BAEC();
  if (os_log_type_enabled(v80, v81))
  {
    v82 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v82 = 134217984;
    v93 = *(uint8_t **)(v53 + 16);
    sub_1CA85BCF0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1CA237000, v80, v81, "There are %ld potential anniversary moment assets", v82, 0xCu);
    MEMORY[0x1CAA4F27C](v82, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease();
  }

  (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);
  return v53;
}

id sub_1CA2E5A48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;

  v1 = v0;
  v2 = sub_1CA85A244();
  if ((v3 & 1) != 0)
    v4 = 0;
  else
    v4 = v2;
  v5 = sub_1CA85A220();
  v6 = 0;
  if ((v7 & 1) == 0)
  {
    v8 = v5;
    v9 = sub_1CA85A25C();
    if ((v10 & 1) != 0)
    {
      return 0;
    }
    else
    {
      v11 = v9;
      v12 = (void *)objc_opt_self();
      v13 = *(_QWORD *)(v0 + 8);
      v14 = objc_msgSend(v12, sel_dayNodesForDay_inGraph_, v8, *(_QWORD *)(v1 + 8));
      v15 = objc_msgSend(v14, sel_dateNodes);

      v16 = objc_msgSend((id)objc_opt_self(), sel_monthNodesForMonth_inGraph_, v11, v13);
      v17 = objc_msgSend(v16, sel_dateNodes);

      v18 = objc_msgSend((id)objc_opt_self(), sel_yearNodesLargerThanYear_inGraph_, v4, v13);
      v19 = objc_msgSend(v18, sel_dateNodes);

      v20 = objc_msgSend(v15, sel_collectionByIntersecting_, v17);
      v6 = objc_msgSend(v20, sel_collectionByIntersecting_, v19);

    }
  }
  return v6;
}

uint64_t sub_1CA2E5BC8(uint64_t (*a1)(char *), char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t result;
  int64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v22;
  int64_t v23;
  char v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  int64_t v28;
  uint64_t (*v29)(char *);
  uint64_t v30;

  v29 = a1;
  v6 = sub_1CA85AEEC();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v26 - v11;
  v13 = *(_QWORD *)(a3 + 64);
  v27 = a3 + 64;
  v14 = 1 << *(_BYTE *)(a3 + 32);
  v15 = -1;
  if (v14 < 64)
    v15 = ~(-1 << v14);
  v16 = v15 & v13;
  v28 = (unint64_t)(v14 + 63) >> 6;
  v30 = a3;
  result = swift_bridgeObjectRetain();
  v18 = 0;
  while (1)
  {
    if (v16)
    {
      v19 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      v20 = v19 | (v18 << 6);
      goto LABEL_19;
    }
    if (__OFADD__(v18++, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v18 >= v28)
      goto LABEL_27;
    v22 = *(_QWORD *)(v27 + 8 * v18);
    if (!v22)
      break;
LABEL_18:
    v16 = (v22 - 1) & v22;
    v20 = __clz(__rbit64(v22)) + (v18 << 6);
LABEL_19:
    (*(void (**)(char *, unint64_t, uint64_t))(v7 + 16))(v12, *(_QWORD *)(v30 + 56) + *(_QWORD *)(v7 + 72) * v20, v6);
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v10, v12, v6);
    v24 = v29(v10);
    if (v3)
    {
      (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
      swift_release();
      return a2 & 1;
    }
    v25 = v24;
    result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    if ((v25 & 1) != 0)
    {
      a2 = 1;
      goto LABEL_28;
    }
  }
  v23 = v18 + 1;
  if (v18 + 1 >= v28)
    goto LABEL_27;
  v22 = *(_QWORD *)(v27 + 8 * v23);
  if (v22)
    goto LABEL_17;
  v23 = v18 + 2;
  if (v18 + 2 >= v28)
    goto LABEL_27;
  v22 = *(_QWORD *)(v27 + 8 * v23);
  if (v22)
    goto LABEL_17;
  v23 = v18 + 3;
  if (v18 + 3 >= v28)
    goto LABEL_27;
  v22 = *(_QWORD *)(v27 + 8 * v23);
  if (v22)
    goto LABEL_17;
  v23 = v18 + 4;
  if (v18 + 4 >= v28)
  {
LABEL_27:
    a2 = 0;
LABEL_28:
    swift_release();
    return a2 & 1;
  }
  v22 = *(_QWORD *)(v27 + 8 * v23);
  if (v22)
  {
LABEL_17:
    v18 = v23;
    goto LABEL_18;
  }
  while (1)
  {
    v18 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v18 >= v28)
      goto LABEL_27;
    v22 = *(_QWORD *)(v27 + 8 * v18);
    ++v23;
    if (v22)
      goto LABEL_18;
  }
LABEL_31:
  __break(1u);
  return result;
}

uint64_t CollectionElector.__allocating_init(sources:photoLibrary:presentDate:)(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v6;

  v6 = swift_allocObject();
  CollectionElector.init(sources:photoLibrary:presentDate:)(a1, a2, a3);
  return v6;
}

uint64_t CollectionElector.init(sources:photoLibrary:presentDate:)(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  id v15;
  id v16;
  id v17;
  void (*v18)(char *, char *, uint64_t);
  uint64_t v20;

  v4 = v3;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8711C0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1CA85A5B0();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1CA85B33C();
  v15 = objc_allocWithZone((Class)__swift_instantiateConcreteTypeFromMangledName(&qword_1ED8748A0));
  v16 = a2;
  *(_QWORD *)(v4 + OBJC_IVAR____TtC11PhotosGraph17CollectionElector_assetElector) = sub_1CA85ABD4();
  sub_1CA85AE8C();
  swift_allocObject();
  v17 = v16;
  *(_QWORD *)(v4 + OBJC_IVAR____TtC11PhotosGraph17CollectionElector_suggestionsPersister) = sub_1CA85AE80();
  *(_QWORD *)(v4 + OBJC_IVAR____TtC11PhotosGraph17CollectionElector_sources) = a1;
  sub_1CA2684BC(a3, (uint64_t)v10, &qword_1ED8711C0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_1CA85A580();

    sub_1CA267BE8(a3, &qword_1ED8711C0);
    sub_1CA267BE8((uint64_t)v10, &qword_1ED8711C0);
    (*(void (**)(uint64_t, char *, uint64_t))(v12 + 32))(v4 + OBJC_IVAR____TtC11PhotosGraph17CollectionElector_presentDate, v14, v11);
  }
  else
  {

    sub_1CA267BE8(a3, &qword_1ED8711C0);
    v18 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
    v18(v14, v10, v11);
    v18((char *)(v4 + OBJC_IVAR____TtC11PhotosGraph17CollectionElector_presentDate), v14, v11);
  }
  return v4;
}

uint64_t sub_1CA2E60B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  NSObject *v45;
  os_log_type_t v46;
  _BOOL4 v47;
  uint8_t *v48;
  NSObject *v49;
  uint64_t v50;
  Class isa;
  objc_class *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  unint64_t v60;
  __int128 v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  os_log_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  void (*v73)(char *, os_log_t, uint64_t);
  uint64_t v74;
  uint64_t v75;
  char isUniquelyReferenced_nonNull_native;
  char *v77;
  char *v78;
  NSObject *v79;
  os_log_type_t v80;
  int v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  unint64_t v87;
  unint64_t v88;
  char *v89;
  void (*v90)(char *, uint64_t);
  uint64_t v91;
  unint64_t v92;
  uint64_t v93;
  void (*v94)(char *, uint64_t);
  uint64_t v95;
  Class v96;
  objc_class *v97;
  objc_class *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  unint64_t v105;
  unint64_t v106;
  __int128 v107;
  uint64_t v108;
  char *v109;
  NSObject *v110;
  uint64_t v111;
  uint64_t v112;
  size_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t *v120;
  uint64_t v121;
  NSObject *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t *v127;
  uint64_t v128;
  char v129;
  uint64_t v130;
  unint64_t v131;
  unint64_t v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  NSObject *v137;
  os_log_type_t v138;
  char *v139;
  uint8_t *v140;
  uint8_t *v141;
  unint64_t v142;
  char *v143;
  unint64_t v144;
  void (*v145)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  unsigned int (*v149)(uint64_t, uint64_t, uint64_t);
  float v150;
  _QWORD *v151;
  void (*v152)(char *, uint64_t, uint64_t);
  char *v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  unsigned int v162;
  uint64_t v163;
  uint64_t v164;
  unsigned int (*v165)(uint64_t, uint64_t, uint64_t);
  NSObject *v166;
  int v167;
  uint8_t *v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  int v175;
  unint64_t v176;
  uint64_t v177;
  _QWORD *v178;
  char *v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  void (*v185)(char *, char *, uint64_t);
  uint64_t v186;
  uint64_t v187;
  char v188;
  char *v189;
  char *v190;
  NSObject *v191;
  os_log_type_t v192;
  int v193;
  uint64_t v194;
  char *v195;
  uint64_t v196;
  uint64_t v197;
  unint64_t v198;
  unint64_t v199;
  void (*v200)(char *, uint64_t);
  uint64_t v201;
  unint64_t v202;
  os_log_t v203;
  os_log_t v204;
  _QWORD *v205;
  void (*v206)(char *, uint64_t);
  unint64_t v207;
  os_log_t v208;
  uint64_t result;
  __int128 v210;
  uint64_t v211;
  __int128 v212;
  char *v213;
  uint64_t v214;
  char *v215;
  uint64_t v216;
  char *v217;
  char *v218;
  char *v219;
  char *v220;
  char *v221;
  uint64_t v222;
  uint64_t v223;
  __int128 v224;
  uint64_t v225;
  uint64_t v226;
  char *v227;
  char *v228;
  uint64_t v229;
  char *v230;
  NSObject *v231;
  char *v232;
  uint64_t v233;
  char *v234;
  char *v235;
  char *v236;
  os_log_t v237;
  char *v238;
  char *v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  _QWORD *v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  char v249;
  uint64_t v250;
  uint64_t v251;
  __int128 v252;
  uint64_t v253;
  uint64_t v254;
  __int128 v255;
  uint64_t v256;
  uint64_t v257;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8748E0);
  MEMORY[0x1E0C80A78](v2);
  v213 = (char *)&v210 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8748B8);
  v5 = MEMORY[0x1E0C80A78](v4);
  v216 = (uint64_t)&v210 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v210 - v8;
  MEMORY[0x1E0C80A78](v7);
  v240 = (uint64_t)&v210 - v10;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8748B0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x1E0C80A78](v11);
  v246 = (uint64_t)&v210 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v245 = (uint64_t)&v210 - v15;
  v223 = sub_1CA85AF88();
  v222 = *(_QWORD *)(v223 - 8);
  MEMORY[0x1E0C80A78](v223);
  v220 = (char *)&v210 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED8748C0);
  v18 = MEMORY[0x1E0C80A78](v17);
  v227 = (char *)&v210 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = MEMORY[0x1E0C80A78](v18);
  v217 = (char *)&v210 - v21;
  v22 = MEMORY[0x1E0C80A78](v20);
  v24 = (char *)&v210 - v23;
  v25 = MEMORY[0x1E0C80A78](v22);
  v27 = (char *)&v210 - v26;
  MEMORY[0x1E0C80A78](v25);
  v234 = (char *)&v210 - v28;
  v244 = sub_1CA85AEEC();
  v243 = *(_QWORD **)(v244 - 8);
  v29 = MEMORY[0x1E0C80A78](v244);
  v219 = (char *)&v210 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = MEMORY[0x1E0C80A78](v29);
  v221 = (char *)&v210 - v32;
  v33 = MEMORY[0x1E0C80A78](v31);
  v218 = (char *)&v210 - v34;
  v35 = MEMORY[0x1E0C80A78](v33);
  v239 = (char *)&v210 - v36;
  v37 = MEMORY[0x1E0C80A78](v35);
  v232 = (char *)&v210 - v38;
  v39 = MEMORY[0x1E0C80A78](v37);
  v238 = (char *)&v210 - v40;
  v41 = MEMORY[0x1E0C80A78](v39);
  v230 = (char *)&v210 - v42;
  MEMORY[0x1E0C80A78](v41);
  v237 = (os_log_t)((char *)&v210 - v43);
  v44 = v0 + OBJC_IVAR____TtC11PhotosGraph17CollectionElector_logger;
  swift_retain();
  v233 = v44;
  v45 = sub_1CA85B330();
  v46 = sub_1CA85BAEC();
  v47 = os_log_type_enabled(v45, v46);
  v235 = v27;
  if (v47)
  {
    v48 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v48 = 134217984;
    v27 = v235;
    *(_QWORD *)&v255 = *(_QWORD *)(*(_QWORD *)(v1 + OBJC_IVAR____TtC11PhotosGraph17CollectionElector_sources) + 16);
    sub_1CA85BCF0();
    swift_release();
    _os_log_impl(&dword_1CA237000, v45, v46, "Electing collections for %ld sources", v48, 0xCu);
    MEMORY[0x1CAA4F27C](v48, -1, -1);
  }
  else
  {
    swift_release();
  }

  v228 = v24;
  v236 = v9;
  v229 = v1;
  v49 = *(NSObject **)(v1 + OBJC_IVAR____TtC11PhotosGraph17CollectionElector_sources);
  v50 = MEMORY[0x1E0DEE9D8];
  v248 = MEMORY[0x1E0DEE9D8];
  isa = v49[2].isa;
  swift_bridgeObjectRetain();
  v242 = v12;
  if (!isa)
  {
LABEL_16:
    swift_bridgeObjectRelease();
    v62 = *(_QWORD *)(v50 + 16);
    v63 = v243;
    v64 = (uint64_t)v234;
    v241 = v11;
    if (v62)
    {
      v214 = v50;
      v65 = v50 + 32;
      v247 = MEMORY[0x1E0DEE9E0];
      *(_QWORD *)&v61 = 136315394;
      v224 = v61;
      v215 = (char *)(MEMORY[0x1E0DEE9B8] + 8);
      v231 = v49;
      v66 = v244;
      do
      {
        sub_1CA28A998(v65, (uint64_t)&v255);
        sub_1CA2E79D8(&v255, v64);
        if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v63[6])(v64, 1, v66) == 1)
        {
          sub_1CA267BE8(v64, (uint64_t *)&unk_1ED8748C0);
        }
        else
        {
          v67 = v237;
          ((void (*)(os_log_t, uint64_t, uint64_t))v63[4])(v237, v64, v66);
          v68 = v256;
          v69 = v257;
          __swift_project_boxed_opaque_existential_1(&v255, v256);
          (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v69 + 32))(&v252, v68, v69);
          __swift_project_boxed_opaque_existential_1(&v252, v253);
          v70 = sub_1CA85B0A8();
          v72 = v71;
          v73 = (void (*)(char *, os_log_t, uint64_t))v63[2];
          v74 = (uint64_t)v230;
          v73(v230, v67, v66);
          v75 = v247;
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v248 = v75;
          sub_1CA25E140(v74, v70, v72, isUniquelyReferenced_nonNull_native);
          v247 = v248;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v252);
          v77 = v238;
          v73(v238, v67, v66);
          v78 = v232;
          v73(v232, v67, v66);
          v79 = sub_1CA85B330();
          v80 = sub_1CA85BAEC();
          v81 = v80;
          if (os_log_type_enabled(v79, v80))
          {
            v82 = swift_slowAlloc();
            v226 = swift_slowAlloc();
            *(_QWORD *)&v252 = v226;
            *(_DWORD *)v82 = v224;
            v83 = v220;
            LODWORD(v225) = v81;
            sub_1CA85AED4();
            sub_1CA23CC98(&qword_1ED8748D8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D77228], MEMORY[0x1E0D77238]);
            v84 = v223;
            v85 = sub_1CA85C260();
            v86 = v78;
            v88 = v87;
            v89 = v83;
            v63 = v243;
            (*(void (**)(char *, uint64_t))(v222 + 8))(v89, v84);
            *(_QWORD *)(v82 + 4) = sub_1CA28712C(v85, v88, (uint64_t *)&v252);
            swift_bridgeObjectRelease();
            v90 = (void (*)(char *, uint64_t))v63[1];
            v90(v238, v66);
            *(_WORD *)(v82 + 12) = 2080;
            v91 = sub_1CA85AEA4();
            *(_QWORD *)(v82 + 14) = sub_1CA28712C(v91, v92, (uint64_t *)&v252);
            swift_bridgeObjectRelease();
            v90(v86, v66);
            _os_log_impl(&dword_1CA237000, v79, (os_log_type_t)v225, "Elected collection with type: %s, localIdentifier: %s", (uint8_t *)v82, 0x16u);
            v93 = v226;
            swift_arrayDestroy();
            MEMORY[0x1CAA4F27C](v93, -1, -1);
            MEMORY[0x1CAA4F27C](v82, -1, -1);

            v90((char *)v237, v66);
          }
          else
          {
            v94 = (void (*)(char *, uint64_t))v63[1];
            v94(v77, v66);
            v94(v78, v66);

            v94((char *)v67, v66);
          }
          v27 = v235;
          v49 = v231;
          v64 = (uint64_t)v234;
        }
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v255);
        v65 += 40;
        --v62;
      }
      while (v62);
      swift_release();
    }
    else
    {
      swift_release();
      v247 = MEMORY[0x1E0DEE9E0];
    }
    v95 = MEMORY[0x1E0DEE9D8];
    v248 = MEMORY[0x1E0DEE9D8];
    v96 = v49[2].isa;
    swift_bridgeObjectRetain();
    if (v96)
    {
      v97 = v96;
      v98 = 0;
      v99 = (uint64_t)&v49[4];
      v100 = MEMORY[0x1E0DEE9D8];
      do
      {
        if (v98 >= v49[2].isa)
          goto LABEL_98;
        sub_1CA28A998(v99, (uint64_t)&v255);
        v101 = v256;
        v102 = v257;
        __swift_project_boxed_opaque_existential_1(&v255, v256);
        (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v102 + 32))(&v252, v101, v102);
        __swift_project_boxed_opaque_existential_1(&v252, v253);
        sub_1CA85B09C();
        v104 = v103;
        swift_bridgeObjectRelease();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v252);
        if (v104)
        {
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v255);
        }
        else
        {
          sub_1CA28FA30(&v255, (uint64_t)&v252);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            sub_1CA3FB980(0, *(_QWORD *)(v100 + 16) + 1, 1);
          v100 = v248;
          v106 = *(_QWORD *)(v248 + 16);
          v105 = *(_QWORD *)(v248 + 24);
          if (v106 >= v105 >> 1)
          {
            sub_1CA3FB980(v105 > 1, v106 + 1, 1);
            v100 = v248;
          }
          *(_QWORD *)(v100 + 16) = v106 + 1;
          sub_1CA28FA30(&v252, v100 + 40 * v106 + 32);
        }
        v98 = (objc_class *)((char *)v98 + 1);
        v99 += 40;
      }
      while (v97 != v98);
      v95 = v248;
      v63 = v243;
    }
    swift_bridgeObjectRelease();
    v108 = (uint64_t)v236;
    v226 = *(_QWORD *)(v95 + 16);
    if (!v226)
    {
LABEL_95:
      swift_release();
      return v247;
    }
    v109 = 0;
    v110 = 0;
    v225 = v95 + 32;
    v238 = (char *)(v240 + 4);
    v215 = &v249;
    *(_QWORD *)&v107 = 136315138;
    v212 = v107;
    v211 = MEMORY[0x1E0DEE9B8] + 8;
    *(_QWORD *)&v107 = 136315394;
    v210 = v107;
    *(_QWORD *)&v224 = v95;
    while (1)
    {
      if ((unint64_t)v109 >= *(_QWORD *)(v95 + 16))
        goto LABEL_99;
      sub_1CA28A998(v225 + 40 * (_QWORD)v109, (uint64_t)&v255);
      v231 = v63[7];
      ((void (*)(char *, uint64_t, uint64_t, uint64_t))v231)(v27, 1, 1, v244);
      if (*(_QWORD *)(sub_1CA2E7C2C(&v255) + 16))
      {
        v112 = swift_bridgeObjectRetain();
        v113 = sub_1CA243C84(v112);
        swift_bridgeObjectRelease();
        *(_QWORD *)&v252 = v113;
        sub_1CA2E916C((_QWORD **)&v252);
        if (v110)
          goto LABEL_101;
        swift_bridgeObjectRelease();
        v114 = sub_1CA28E764(v252);
        swift_release();
        v115 = sub_1CA28E780(v114);
        swift_bridgeObjectRelease();
        v116 = v115;
        v117 = (char *)MEMORY[0x1E0DEE9D8];
      }
      else
      {
        swift_bridgeObjectRelease();
        v117 = (char *)MEMORY[0x1E0DEE9D8];
        v116 = MEMORY[0x1E0DEE9D8];
      }
      *(_QWORD *)&v252 = v117;
      v118 = *(_QWORD *)(v116 + 16);
      v119 = swift_bridgeObjectRetain();
      v120 = &qword_1ED8748B0;
      if (v118)
      {
        v234 = v109;
        v121 = v108;
        v122 = ((*(unsigned __int8 *)(v242 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v242 + 80));
        v123 = *(_QWORD *)(v242 + 72);
        v232 = (char *)v119;
        v237 = v122;
        v124 = (uint64_t)v122 + v119;
        do
        {
          v125 = v245;
          v126 = sub_1CA2684BC(v124, v245, v120);
          MEMORY[0x1E0C80A78](v126);
          *((_QWORD *)&v210 - 2) = v125;
          v127 = v120;
          v128 = v247;
          swift_bridgeObjectRetain();
          v129 = sub_1CA2E5BC8((uint64_t (*)(char *))sub_1CA2EACEC, (char)(&v210 - 2), v128);
          swift_bridgeObjectRelease();
          if ((v129 & 1) != 0)
          {
            sub_1CA267BE8(v125, v127);
            v120 = v127;
          }
          else
          {
            sub_1CA24EEF8(v125, v246, v127);
            v130 = v252;
            v120 = v127;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_1CA3FB928(0, *(_QWORD *)(v130 + 16) + 1, 1);
              v130 = v252;
            }
            v132 = *(_QWORD *)(v130 + 16);
            v131 = *(_QWORD *)(v130 + 24);
            if (v132 >= v131 >> 1)
            {
              sub_1CA3FB928(v131 > 1, v132 + 1, 1);
              v130 = v252;
            }
            *(_QWORD *)(v130 + 16) = v132 + 1;
            sub_1CA24EEF8(v246, (uint64_t)v237 + v130 + v132 * v123, v127);
            v121 = (uint64_t)v236;
          }
          v124 += v123;
          --v118;
        }
        while (v118);
        v237 = v110;
        v117 = (char *)v252;
        v108 = v121;
        v109 = v234;
        v133 = v232;
      }
      else
      {
        v237 = v110;
        v133 = (char *)v119;
      }
      swift_bridgeObjectRelease();
      v134 = v241;
      v135 = v242;
      if (*((_QWORD *)v117 + 2))
      {
        swift_bridgeObjectRelease();
        v136 = v117;
      }
      else
      {
        swift_release();
        v137 = sub_1CA85B330();
        v138 = sub_1CA85BAEC();
        if (os_log_type_enabled(v137, v138))
        {
          v139 = v109;
          v140 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v140 = 0;
          _os_log_impl(&dword_1CA237000, v137, v138, "All collections has been elected. Reuse all collections as fallback", v140, 2u);
          v141 = v140;
          v109 = v139;
          v120 = &qword_1ED8748B0;
          MEMORY[0x1CAA4F27C](v141, -1, -1);
        }

        v136 = v133;
      }
      v234 = v109 + 1;
      v142 = *((_QWORD *)v136 + 2);
      v143 = v136;
      swift_bridgeObjectRetain();
      v144 = 0;
      if (!v142)
      {
LABEL_67:
        v145 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v135 + 56);
        v145(v108, 1, 1, v134);
        v144 = v142;
        goto LABEL_70;
      }
      while (1)
      {
        if (v144 >= *((_QWORD *)v143 + 2))
        {
          __break(1u);
          goto LABEL_97;
        }
        sub_1CA2684BC((uint64_t)&v143[((*(unsigned __int8 *)(v135 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v135 + 80))+ *(_QWORD *)(v135 + 72) * v144++], v108, v120);
        v145 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v135 + 56);
        v145(v108, 0, 1, v134);
LABEL_70:
        v146 = v108;
        v147 = v108;
        v148 = v240;
        sub_1CA24EEF8(v147, v240, &qword_1ED8748B8);
        v149 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v135 + 48);
        if (v149(v148, 1, v134) == 1)
        {
          swift_bridgeObjectRelease();
          v155 = v244;
          v156 = (uint64_t)v235;
          goto LABEL_76;
        }
        v150 = *(float *)&v238[*(int *)(v134 + 48)];
        v151 = v243;
        v152 = (void (*)(char *, uint64_t, uint64_t))v243[4];
        v153 = v239;
        v154 = v148;
        v155 = v244;
        v152(v239, v154, v244);
        if (v150 < 0.33333)
          break;
        ((void (*)(char *, uint64_t))v151[1])(v153, v155);
        v134 = v241;
        v135 = v242;
        v108 = v146;
        v120 = &qword_1ED8748B0;
        if (v144 == v142)
          goto LABEL_67;
      }
      swift_bridgeObjectRelease();
      v156 = (uint64_t)v235;
      sub_1CA267BE8((uint64_t)v235, (uint64_t *)&unk_1ED8748C0);
      v152((char *)v156, (uint64_t)v153, v155);
      ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v231)(v156, 0, 1, v155);
      v134 = v241;
      v120 = &qword_1ED8748B0;
LABEL_76:
      v157 = v156;
      v158 = (uint64_t)v228;
      sub_1CA2684BC(v157, (uint64_t)v228, (uint64_t *)&unk_1ED8748C0);
      v232 = (char *)v243[6];
      if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v232)(v158, 1, v155) == 1)
      {
        sub_1CA267BE8(v158, (uint64_t *)&unk_1ED8748C0);
        v108 = v146;
        if (v142)
        {
          v27 = v235;
          if (!*((_QWORD *)v143 + 2))
            goto LABEL_100;
          v159 = v216;
          sub_1CA2684BC((uint64_t)&v143[(*(unsigned __int8 *)(v242 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v242 + 80)], v216, v120);
          v145(v159, 0, 1, v134);
          swift_bridgeObjectRelease();
        }
        else
        {
          v159 = v216;
          v145(v216, 1, 1, v134);
          swift_bridgeObjectRelease();
          v27 = v235;
        }
        sub_1CA267BE8((uint64_t)v27, (uint64_t *)&unk_1ED8748C0);
        v162 = v149(v159, 1, v134);
        v163 = (uint64_t)v217;
        v110 = v237;
        if (v162 == 1)
        {
          sub_1CA267BE8(v159, &qword_1ED8748B8);
          v164 = 1;
          v161 = v244;
        }
        else
        {
          v161 = v244;
          ((void (*)(char *, uint64_t, uint64_t))v243[4])(v217, v159, v244);
          v164 = 0;
        }
        ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v231)(v163, v164, 1, v161);
        sub_1CA24EEF8(v163, (uint64_t)v27, (uint64_t *)&unk_1ED8748C0);
        v160 = (uint64_t)v227;
      }
      else
      {
        swift_bridgeObjectRelease();
        sub_1CA267BE8(v158, (uint64_t *)&unk_1ED8748C0);
        v160 = (uint64_t)v227;
        v108 = v146;
        v27 = v235;
        v161 = v244;
        v110 = v237;
      }
      v165 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v232;
      sub_1CA2684BC((uint64_t)v27, v160, (uint64_t *)&unk_1ED8748C0);
      if (v165(v160, 1, v161) == 1)
      {
        sub_1CA267BE8(v160, (uint64_t *)&unk_1ED8748C0);
        sub_1CA28A998((uint64_t)&v255, (uint64_t)&v252);
        v166 = sub_1CA85B330();
        v167 = sub_1CA85BAE0();
        if (os_log_type_enabled(v166, (os_log_type_t)v167))
        {
          LODWORD(v232) = v167;
          v237 = v166;
          v168 = (uint8_t *)swift_slowAlloc();
          v169 = swift_slowAlloc();
          v251 = v169;
          *(_DWORD *)v168 = v212;
          v170 = v253;
          v171 = v254;
          __swift_project_boxed_opaque_existential_1(&v252, v253);
          (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v171 + 32))(&v248, v170, v171);
          __swift_project_boxed_opaque_existential_1(&v248, v250);
          v172 = (uint64_t)v213;
          sub_1CA85B0B4();
          v173 = v222;
          v174 = v223;
          v175 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v222 + 48))(v172, 1, v223);
          v63 = v243;
          if (v175 == 1)
          {
            __swift_destroy_boxed_opaque_existential_1((uint64_t)&v248);
            sub_1CA267BE8(v172, &qword_1ED8748E0);
            v176 = 0xE400000000000000;
            v177 = 1701736302;
          }
          else
          {
            v177 = sub_1CA85AF64();
            v176 = v207;
            (*(void (**)(uint64_t, uint64_t))(v173 + 8))(v172, v174);
            __swift_destroy_boxed_opaque_existential_1((uint64_t)&v248);
          }
          v248 = sub_1CA28712C(v177, v176, &v251);
          sub_1CA85BCF0();
          swift_bridgeObjectRelease();
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v252);
          v208 = v237;
          _os_log_impl(&dword_1CA237000, v237, (os_log_type_t)v232, "Could not find collection for source of category: %s", v168, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1CAA4F27C](v169, -1, -1);
          MEMORY[0x1CAA4F27C](v168, -1, -1);

          v27 = v235;
          sub_1CA267BE8((uint64_t)v235, (uint64_t *)&unk_1ED8748C0);
          goto LABEL_43;
        }
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v252);

        v111 = (uint64_t)v27;
      }
      else
      {
        v178 = v243;
        v179 = v218;
        ((void (*)(char *, uint64_t, uint64_t))v243[4])(v218, v160, v161);
        v180 = v256;
        v181 = v257;
        __swift_project_boxed_opaque_existential_1(&v255, v256);
        (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v181 + 32))(&v252, v180, v181);
        __swift_project_boxed_opaque_existential_1(&v252, v253);
        v182 = sub_1CA85B0A8();
        v184 = v183;
        v185 = (void (*)(char *, char *, uint64_t))v178[2];
        v186 = (uint64_t)v230;
        v185(v230, v179, v161);
        v187 = v247;
        v188 = swift_isUniquelyReferenced_nonNull_native();
        v248 = v187;
        sub_1CA25E140(v186, v182, v184, v188);
        v247 = v248;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v252);
        v189 = v221;
        v185(v221, v179, v161);
        v190 = v219;
        v185(v219, v179, v161);
        v191 = sub_1CA85B330();
        v192 = sub_1CA85BAEC();
        v193 = v192;
        if (!os_log_type_enabled(v191, v192))
        {

          v205 = v243;
          v206 = (void (*)(char *, uint64_t))v243[1];
          v206(v190, v161);
          v206(v189, v161);
          v206(v179, v161);
          v27 = v235;
          sub_1CA267BE8((uint64_t)v235, (uint64_t *)&unk_1ED8748C0);
          v63 = v205;
          goto LABEL_43;
        }
        v194 = swift_slowAlloc();
        v237 = (os_log_t)swift_slowAlloc();
        *(_QWORD *)&v252 = v237;
        *(_DWORD *)v194 = v210;
        v214 = v194 + 4;
        v195 = v220;
        LODWORD(v232) = v193;
        sub_1CA85AED4();
        sub_1CA23CC98(&qword_1ED8748D8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D77228], MEMORY[0x1E0D77238]);
        v231 = v191;
        v196 = v223;
        v197 = sub_1CA85C260();
        v199 = v198;
        (*(void (**)(char *, uint64_t))(v222 + 8))(v195, v196);
        v248 = sub_1CA28712C(v197, v199, (uint64_t *)&v252);
        sub_1CA85BCF0();
        swift_bridgeObjectRelease();
        v200 = (void (*)(char *, uint64_t))v243[1];
        v200(v221, v161);
        *(_WORD *)(v194 + 12) = 2080;
        v201 = sub_1CA85AEA4();
        v248 = sub_1CA28712C(v201, v202, (uint64_t *)&v252);
        sub_1CA85BCF0();
        swift_bridgeObjectRelease();
        v200(v190, v161);
        v203 = v231;
        _os_log_impl(&dword_1CA237000, v231, (os_log_type_t)v232, "Elected collection with type: %s, localIdentifier: %s", (uint8_t *)v194, 0x16u);
        v204 = v237;
        swift_arrayDestroy();
        MEMORY[0x1CAA4F27C](v204, -1, -1);
        MEMORY[0x1CAA4F27C](v194, -1, -1);

        v200(v179, v161);
        v27 = v235;
        v111 = (uint64_t)v235;
      }
      sub_1CA267BE8(v111, (uint64_t *)&unk_1ED8748C0);
      v63 = v243;
LABEL_43:
      v95 = v224;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v255);
      v109 = v234;
      if (v234 == (char *)v226)
        goto LABEL_95;
    }
  }
  v52 = 0;
  v53 = (uint64_t)&v49[4];
  v54 = MEMORY[0x1E0DEE9D8];
  while (v52 < v49[2].isa)
  {
    sub_1CA28A998(v53, (uint64_t)&v255);
    v55 = v256;
    v56 = v257;
    __swift_project_boxed_opaque_existential_1(&v255, v256);
    (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v56 + 32))(&v252, v55, v56);
    __swift_project_boxed_opaque_existential_1(&v252, v253);
    sub_1CA85B09C();
    v58 = v57;
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v252);
    if (v58)
    {
      sub_1CA28FA30(&v255, (uint64_t)&v252);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        sub_1CA3FB980(0, *(_QWORD *)(v54 + 16) + 1, 1);
      v54 = v248;
      v60 = *(_QWORD *)(v248 + 16);
      v59 = *(_QWORD *)(v248 + 24);
      if (v60 >= v59 >> 1)
      {
        sub_1CA3FB980(v59 > 1, v60 + 1, 1);
        v54 = v248;
      }
      *(_QWORD *)(v54 + 16) = v60 + 1;
      sub_1CA28FA30(&v252, v54 + 40 * v60 + 32);
    }
    else
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v255);
    }
    v52 = (objc_class *)((char *)v52 + 1);
    v53 += 40;
    v27 = v235;
    if (isa == v52)
    {
      v50 = v248;
      goto LABEL_16;
    }
  }
LABEL_97:
  __break(1u);
LABEL_98:
  __break(1u);
LABEL_99:
  __break(1u);
LABEL_100:
  __break(1u);
LABEL_101:
  result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_1CA2E79D8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  _QWORD v25[3];
  uint64_t v26;
  uint64_t v27;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED874588);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for TriggerResult();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = a1[3];
  v12 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v11);
  v13 = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 16))(v11, v12);
  if (!*(_QWORD *)(v13 + 16))
  {
    v24 = 0;
    v22 = 0u;
    v23 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_6;
  }
  sub_1CA28A998(v13 + 32, (uint64_t)&v22);
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v23 + 1))
  {
LABEL_6:
    sub_1CA267BE8((uint64_t)&v22, &qword_1EF94D058);
    goto LABEL_10;
  }
  sub_1CA28FA30(&v22, (uint64_t)v25);
  v14 = v26;
  v15 = v27;
  __swift_project_boxed_opaque_existential_1(v25, v26);
  v16 = (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 8))(v14, v15);
  if (*(_QWORD *)(v16 + 16))
  {
    sub_1CA26A9D4(v16 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80)), (uint64_t)v6);
    v17 = 0;
  }
  else
  {
    v17 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, v17, 1, v7);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) != 1)
  {
    sub_1CA26C024((uint64_t)v6, (uint64_t)v10);
    v20 = sub_1CA85AEEC();
    v21 = *(_QWORD *)(v20 - 8);
    (*(void (**)(uint64_t, char *, uint64_t))(v21 + 16))(a2, v10, v20);
    sub_1CA26C068((uint64_t)v10);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v21 + 56))(a2, 0, 1, v20);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
  }
  sub_1CA267BE8((uint64_t)v6, &qword_1ED874588);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
LABEL_10:
  v18 = sub_1CA85AEEC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(a2, 1, 1, v18);
}

uint64_t sub_1CA2E7C2C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(_QWORD *@<X8>);
  uint64_t v12;
  _QWORD *v13;
  uint64_t (*v14)(uint64_t, void (*)(_QWORD *@<X8>));
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t i;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(_QWORD *@<X8>);
  unint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  void (*v46)(char *, uint64_t, uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  float v51;
  int isUniquelyReferenced_nonNull_native;
  char v53;
  unint64_t v54;
  uint64_t v55;
  _BOOL8 v56;
  uint64_t v57;
  char v58;
  unint64_t v59;
  char v60;
  unint64_t v61;
  uint64_t v62;
  BOOL v63;
  uint64_t v64;
  uint64_t v65;
  void (*v66)(uint64_t, uint64_t);
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  float v73;
  int v74;
  char v75;
  unint64_t v76;
  uint64_t v77;
  _BOOL8 v78;
  uint64_t v79;
  char v80;
  unint64_t v81;
  char v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t v85;
  void (*v86)(_QWORD *@<X8>);
  uint64_t result;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  uint64_t v94;
  _QWORD *v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  _QWORD *v99;
  void (*v100)(_QWORD *@<X8>);
  char *v101;
  char *v102;
  _QWORD *v103;
  char *v104;
  uint64_t v105;
  _QWORD *v106;
  char v107;
  _QWORD v108[3];
  uint64_t v109;
  uint64_t v110;

  v2 = v1;
  v105 = sub_1CA85AEEC();
  v103 = *(_QWORD **)(v105 - 8);
  v4 = MEMORY[0x1E0C80A78](v105);
  v101 = (char *)&v88 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x1E0C80A78](v4);
  v104 = (char *)&v88 - v7;
  MEMORY[0x1E0C80A78](v6);
  v102 = (char *)&v88 - v8;
  v9 = type metadata accessor for TriggerResult();
  v89 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v97 = (char *)&v88 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a1[3];
  v11 = (void (*)(_QWORD *@<X8>))a1[4];
  v95 = a1;
  v13 = __swift_project_boxed_opaque_existential_1(a1, v12);
  v14 = (uint64_t (*)(uint64_t, void (*)(_QWORD *@<X8>)))*((_QWORD *)v11 + 2);
  v99 = v13;
  v100 = v11;
  v15 = v14(v12, v11);
  v16 = *(_QWORD *)(v15 + 16);
  v17 = MEMORY[0x1E0DEE9D8];
  if (v16)
  {
    v98 = v12;
    v18 = v1;
    v19 = v15 + 32;
    v20 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    do
    {
      sub_1CA28A998(v19, (uint64_t)v108);
      v21 = v109;
      v22 = v110;
      __swift_project_boxed_opaque_existential_1(v108, v109);
      v23 = (*(uint64_t (**)(uint64_t, uint64_t))(v22 + 32))(v21, v22);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v108);
      if (v23)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v20 = sub_1CA26D364(0, v20[2] + 1, 1, v20);
        v25 = v20[2];
        v24 = v20[3];
        if (v25 >= v24 >> 1)
          v20 = sub_1CA26D364((_QWORD *)(v24 > 1), v25 + 1, 1, v20);
        v20[2] = v25 + 1;
        v20[v25 + 4] = v23;
      }
      v19 += 40;
      --v16;
    }
    while (v16);
    swift_bridgeObjectRelease();
    v2 = v18;
    v12 = v98;
    v17 = MEMORY[0x1E0DEE9D8];
  }
  else
  {
    swift_bridgeObjectRelease();
    v20 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v108[0] = v17;
  v26 = v20[2];
  if (v26)
  {
    swift_bridgeObjectRetain();
    for (i = 0; i != v26; ++i)
    {
      v28 = swift_bridgeObjectRetain();
      sub_1CA284FF0(v28);
    }
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  v29 = v108[0];
  v30 = v14(v12, v100);
  v31 = v30;
  v91 = *(_QWORD *)(v30 + 16);
  if (!v91)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v32 = 0;
    v86 = 0;
    v34 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_49;
  }
  v96 = v29;
  v32 = 0;
  v33 = 0;
  v99 = (_QWORD *)(v2 + OBJC_IVAR____TtC11PhotosGraph17CollectionElector_presentDate);
  v100 = 0;
  v90 = v30 + 32;
  v34 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  v94 = v9;
  v35 = (uint64_t)v97;
  v88 = v30;
  while (1)
  {
    if (v33 >= *(_QWORD *)(v31 + 16))
      goto LABEL_54;
    sub_1CA28A998(v90 + 40 * v33, (uint64_t)v108);
    v36 = v109;
    v37 = v110;
    __swift_project_boxed_opaque_existential_1(v108, v109);
    v38 = (*(uint64_t (**)(uint64_t, uint64_t))(v37 + 8))(v36, v37);
    v39 = *(_QWORD *)(v38 + 16);
    if (v39)
      break;
    swift_bridgeObjectRelease();
LABEL_19:
    ++v33;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v108);
    if (v33 == v91)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v86 = v100;
LABEL_49:
      sub_1CA2EAF88((uint64_t)v32);
      sub_1CA2EAF88((uint64_t)v86);
      return (uint64_t)v34;
    }
  }
  v93 = v33;
  v40 = (*(unsigned __int8 *)(v89 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v89 + 80);
  v92 = v38;
  v41 = v38 + v40;
  v42 = *(_QWORD *)(v89 + 72);
  v98 = v42;
  while (1)
  {
    sub_1CA26A9D4(v41, v35);
    if ((sub_1CA85A130() & 1) == 0)
      goto LABEL_25;
    v45 = v102;
    v46 = (void (*)(char *, uint64_t, uint64_t))v103[2];
    v47 = v105;
    v46(v102, v35, v105);
    v48 = (uint64_t)v104;
    v46(v104, (uint64_t)v45, v47);
    v49 = v109;
    v50 = v110;
    __swift_project_boxed_opaque_existential_1(v108, v109);
    (*(void (**)(char *__return_ptr, uint64_t, uint64_t))(v50 + 16))(&v107, v49, v50);
    v51 = flt_1CA8DAF3C[v107];
    sub_1CA2EAF88((uint64_t)v32);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v106 = v34;
    v54 = sub_1CA250B34(v48);
    v55 = v34[2];
    v56 = (v53 & 1) == 0;
    v57 = v55 + v56;
    if (__OFADD__(v55, v56))
      break;
    v58 = v53;
    if (v34[3] >= v57)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        sub_1CA2617B8();
    }
    else
    {
      sub_1CA2547D4(v57, isUniquelyReferenced_nonNull_native);
      v59 = sub_1CA250B34((uint64_t)v104);
      if ((v58 & 1) != (v60 & 1))
        goto LABEL_55;
      v54 = v59;
    }
    v34 = v106;
    swift_bridgeObjectRelease();
    if ((v58 & 1) != 0)
    {
      swift_bridgeObjectRetain();
    }
    else
    {
      v34[(v54 >> 6) + 8] |= 1 << v54;
      v61 = v34[6] + v103[9] * v54;
      swift_bridgeObjectRetain();
      v46((char *)v61, (uint64_t)v104, v105);
      *(_QWORD *)(v34[7] + 8 * v54) = 0;
      v62 = v34[2];
      v63 = __OFADD__(v62, 1);
      v64 = v62 + 1;
      if (v63)
        goto LABEL_52;
      v34[2] = v64;
    }
    v65 = v34[7];
    swift_bridgeObjectRelease();
    *(float *)(v65 + 8 * v54) = v51 + *(float *)(v65 + 8 * v54);
    v66 = (void (*)(uint64_t, uint64_t))v103[1];
    v67 = v105;
    v66((uint64_t)v104, v105);
    v69 = (uint64_t)v101;
    v68 = (uint64_t)v102;
    v46(v101, (uint64_t)v102, v67);
    v70 = v95[3];
    v71 = v95[4];
    __swift_project_boxed_opaque_existential_1(v95, v70);
    v72 = (*(uint64_t (**)(uint64_t, uint64_t))(v71 + 24))(v70, v71);
    v73 = sub_1CA2EAF98(v68, v72, v96);
    swift_bridgeObjectRelease();
    sub_1CA2EAF88((uint64_t)v100);
    v74 = swift_isUniquelyReferenced_nonNull_native();
    v106 = v34;
    v76 = sub_1CA250B34(v69);
    v77 = v34[2];
    v78 = (v75 & 1) == 0;
    v79 = v77 + v78;
    if (__OFADD__(v77, v78))
      goto LABEL_51;
    v80 = v75;
    if (v34[3] >= v79)
    {
      if ((v74 & 1) == 0)
      {
        sub_1CA2617B8();
        v34 = v106;
      }
    }
    else
    {
      sub_1CA2547D4(v79, v74);
      v34 = v106;
      v81 = sub_1CA250B34((uint64_t)v101);
      if ((v80 & 1) != (v82 & 1))
        goto LABEL_55;
      v76 = v81;
    }
    swift_bridgeObjectRelease();
    if ((v80 & 1) != 0)
    {
      swift_bridgeObjectRetain();
    }
    else
    {
      v34[(v76 >> 6) + 8] |= 1 << v76;
      v83 = v34[6] + v103[9] * v76;
      swift_bridgeObjectRetain();
      v46((char *)v83, (uint64_t)v101, v105);
      *(_QWORD *)(v34[7] + 8 * v76) = 0;
      v84 = v34[2];
      v63 = __OFADD__(v84, 1);
      v85 = v84 + 1;
      if (v63)
        goto LABEL_53;
      v34[2] = v85;
    }
    v43 = v34[7];
    swift_bridgeObjectRelease();
    *(float *)(v43 + 8 * v76 + 4) = v73;
    v44 = v105;
    v66((uint64_t)v101, v105);
    v66((uint64_t)v102, v44);
    v32 = sub_1CA23C76C;
    v100 = sub_1CA23C76C;
    v35 = (uint64_t)v97;
    v42 = v98;
LABEL_25:
    sub_1CA26C068(v35);
    v41 += v42;
    if (!--v39)
    {
      swift_bridgeObjectRelease();
      v31 = v88;
      v33 = v93;
      goto LABEL_19;
    }
  }
  __break(1u);
LABEL_51:
  __break(1u);
LABEL_52:
  __break(1u);
LABEL_53:
  __break(1u);
LABEL_54:
  __break(1u);
LABEL_55:
  result = sub_1CA85C2E4();
  __break(1u);
  return result;
}

BOOL static CollectionElector.Error.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t CollectionElector.Error.hash(into:)()
{
  return sub_1CA85C374();
}

uint64_t CollectionElector.Error.hashValue.getter()
{
  sub_1CA85C368();
  sub_1CA85C374();
  return sub_1CA85C3B0();
}

uint64_t CollectionElector.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = v0 + OBJC_IVAR____TtC11PhotosGraph17CollectionElector_logger;
  v2 = sub_1CA85B348();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);

  swift_release();
  swift_bridgeObjectRelease();
  v3 = v0 + OBJC_IVAR____TtC11PhotosGraph17CollectionElector_presentDate;
  v4 = sub_1CA85A5B0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  return v0;
}

uint64_t CollectionElector.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = v0 + OBJC_IVAR____TtC11PhotosGraph17CollectionElector_logger;
  v2 = sub_1CA85B348();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);

  swift_release();
  swift_bridgeObjectRelease();
  v3 = v0 + OBJC_IVAR____TtC11PhotosGraph17CollectionElector_presentDate;
  v4 = sub_1CA85A5B0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  return swift_deallocClassInstance();
}

uint64_t CollectionElector.electAssetsForMagicSlotAndPersistAsSuggestions(collection:curationRecipe:photoLibrary:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4[8] = a3;
  v4[9] = v3;
  v4[6] = a1;
  v4[7] = a2;
  v5 = sub_1CA85AF88();
  v4[10] = v5;
  v4[11] = *(_QWORD *)(v5 - 8);
  v4[12] = swift_task_alloc();
  v6 = sub_1CA85B0E4();
  v4[13] = v6;
  v4[14] = *(_QWORD *)(v6 - 8);
  v4[15] = swift_task_alloc();
  v4[16] = swift_task_alloc();
  v7 = sub_1CA85ABEC();
  v4[17] = v7;
  v4[18] = *(_QWORD *)(v7 - 8);
  v4[19] = swift_task_alloc();
  v8 = sub_1CA85AC04();
  v4[20] = v8;
  v4[21] = *(_QWORD *)(v8 - 8);
  v4[22] = swift_task_alloc();
  v4[23] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED8748C0);
  v4[24] = swift_task_alloc();
  v9 = sub_1CA85AEEC();
  v4[25] = v9;
  v4[26] = *(_QWORD *)(v9 - 8);
  v4[27] = swift_task_alloc();
  v4[28] = swift_task_alloc();
  v4[29] = swift_task_alloc();
  v4[30] = swift_task_alloc();
  v4[31] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1CA2E872C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  void *v5;
  void *v6;
  id v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(_QWORD, _QWORD, uint64_t);
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  _BOOL4 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  void (*v41)(uint64_t, uint64_t);
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(uint64_t, uint64_t, uint64_t);
  NSObject *v47;
  os_log_type_t v48;
  _BOOL4 v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  void (*v57)(uint64_t, uint64_t);
  uint64_t v58;
  unint64_t v59;
  unint64_t v60;
  void (*v61)(uint64_t, uint64_t);
  void *v62;
  id v63;
  _QWORD *v64;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  os_log_type_t type;
  os_log_type_t typea[8];
  os_log_t log;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  os_log_type_t v79[8];
  os_log_t v80;
  os_log_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  void (*v88)(uint64_t, uint64_t, uint64_t);
  uint64_t v89;
  uint64_t v90;
  id v91;
  void *v92;
  uint64_t (*v93)(unint64_t);
  uint64_t v94;

  v1 = *(_QWORD *)(v0 + 200);
  v2 = *(_QWORD *)(v0 + 208);
  v3 = *(_QWORD *)(v0 + 192);
  sub_1CA2684BC(*(_QWORD *)(v0 + 48), v3, (uint64_t *)&unk_1ED8748C0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_1CA267BE8(*(_QWORD *)(v0 + 192), (uint64_t *)&unk_1ED8748C0);
    v4 = MEMORY[0x1E0DEE9D8];
LABEL_11:
    *(_QWORD *)(v0 + 256) = v4;
    v62 = *(void **)(v0 + 64);
    sub_1CA85AE8C();
    swift_allocObject();
    v63 = v62;
    *(_QWORD *)(v0 + 264) = sub_1CA85AE80();
    v93 = (uint64_t (*)(unint64_t))((int)*MEMORY[0x1E0D76FE8] + MEMORY[0x1E0D76FE8]);
    v64 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 272) = v64;
    *v64 = v0;
    v64[1] = sub_1CA2E8F28;
    return v93(v4);
  }
  v5 = *(void **)(v0 + 64);
  (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 208) + 32))(*(_QWORD *)(v0 + 248), *(_QWORD *)(v0 + 192), *(_QWORD *)(v0 + 200));
  v6 = (void *)sub_1CA85AEB0();
  v7 = objc_msgSend(v5, sel_librarySpecificFetchOptions);
  v8 = (void *)sub_1CA85AC7C();

  v9 = objc_msgSend(v8, sel_count);
  v10 = *(_QWORD *)(v0 + 248);
  v11 = *(_QWORD *)(v0 + 208);
  v12 = *(_QWORD *)(v0 + 160);
  v13 = *(_QWORD *)(v0 + 168);
  if (v9)
  {
    v14 = *(_QWORD *)(v0 + 232);
    v15 = *(_QWORD *)(v0 + 128);
    v80 = *(os_log_t *)(v0 + 112);
    v82 = *(_QWORD *)(v0 + 104);
    v85 = *(_QWORD *)(v0 + 120);
    v16 = *(void (**)(_QWORD, _QWORD, uint64_t))(v13 + 16);
    v17 = *(_QWORD *)(v0 + 200);
    v16(*(_QWORD *)(v0 + 176), *(_QWORD *)(v0 + 56), v12);
    v88 = *(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16);
    v88(v14, v10, v17);
    v91 = v8;
    sub_1CA85B0D8();
    ((void (*)(uint64_t, uint64_t, uint64_t))v80[2].isa)(v85, v15, v82);
    v4 = sub_1CA26D490(0, 1, 1, MEMORY[0x1E0DEE9D8]);
    v19 = *(_QWORD *)(v4 + 16);
    v18 = *(_QWORD *)(v4 + 24);
    if (v19 >= v18 >> 1)
      v4 = sub_1CA26D490(v18 > 1, v19 + 1, 1, v4);
    v20 = *(_QWORD *)(v0 + 248);
    v22 = *(_QWORD *)(v0 + 216);
    v21 = *(_QWORD *)(v0 + 224);
    v23 = *(_QWORD *)(v0 + 200);
    v25 = *(_QWORD *)(v0 + 112);
    v24 = *(_QWORD *)(v0 + 120);
    v26 = *(_QWORD *)(v0 + 104);
    *(_QWORD *)(v4 + 16) = v19 + 1;
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v25 + 32))(v4+ ((*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80))+ *(_QWORD *)(v25 + 72) * v19, v24, v26);
    v88(v21, v20, v23);
    v88(v22, v20, v23);
    v27 = sub_1CA85B330();
    v28 = sub_1CA85BAEC();
    v29 = os_log_type_enabled(v27, v28);
    v30 = *(_QWORD *)(v0 + 248);
    v31 = *(_QWORD *)(v0 + 224);
    v32 = *(_QWORD *)(v0 + 200);
    v83 = *(_QWORD *)(v0 + 208);
    v86 = *(_QWORD *)(v0 + 216);
    v33 = *(_QWORD *)(v0 + 128);
    v34 = *(_QWORD *)(v0 + 104);
    v89 = *(_QWORD *)(v0 + 112);
    if (v29)
    {
      *(_QWORD *)v79 = *(_QWORD *)(v0 + 128);
      v81 = *(os_log_t *)(v0 + 104);
      v35 = *(_QWORD *)(v0 + 96);
      v71 = *(_QWORD *)(v0 + 88);
      v36 = *(_QWORD *)(v0 + 80);
      v37 = swift_slowAlloc();
      v75 = swift_slowAlloc();
      v94 = v75;
      *(_DWORD *)v37 = 136315394;
      type = v28;
      sub_1CA85AED4();
      sub_1CA23CC98(&qword_1ED8748D8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D77228], MEMORY[0x1E0D77238]);
      v38 = sub_1CA85C260();
      v77 = v30;
      v40 = v39;
      (*(void (**)(uint64_t, uint64_t))(v71 + 8))(v35, v36);
      *(_QWORD *)(v0 + 16) = sub_1CA28712C(v38, v40, &v94);
      sub_1CA85BCF0();
      swift_bridgeObjectRelease();
      v41 = *(void (**)(uint64_t, uint64_t))(v83 + 8);
      v41(v31, v32);
      *(_WORD *)(v37 + 12) = 2080;
      v42 = sub_1CA85AEA4();
      *(_QWORD *)(v0 + 24) = sub_1CA28712C(v42, v43, &v94);
      sub_1CA85BCF0();
      swift_bridgeObjectRelease();
      v41(v86, v32);
      _os_log_impl(&dword_1CA237000, v27, type, "Suggestion Recipe created for magicSlot with type: %s, localIdentifier: %s", (uint8_t *)v37, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1CAA4F27C](v75, -1, -1);
      MEMORY[0x1CAA4F27C](v37, -1, -1);

      (*(void (**)(os_log_type_t *, os_log_t))(v89 + 8))(*(os_log_type_t **)v79, v81);
      v41(v77, v32);
    }
    else
    {

      v61 = *(void (**)(uint64_t, uint64_t))(v83 + 8);
      v61(v86, v32);
      v61(v31, v32);

      (*(void (**)(uint64_t, uint64_t))(v89 + 8))(v33, v34);
      v61(v30, v32);
    }
    goto LABEL_11;
  }
  v92 = v8;
  v44 = *(_QWORD *)(v0 + 184);
  v45 = *(_QWORD *)(v0 + 56);
  v46 = *(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16);
  v46(*(_QWORD *)(v0 + 240), v10, *(_QWORD *)(v0 + 200));
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16))(v44, v45, v12);
  v47 = sub_1CA85B330();
  v48 = sub_1CA85BAE0();
  v49 = os_log_type_enabled(v47, v48);
  v50 = *(_QWORD *)(v0 + 240);
  if (v49)
  {
    v51 = *(_QWORD *)(v0 + 232);
    v52 = *(_QWORD *)(v0 + 200);
    *(_QWORD *)typea = *(_QWORD *)(v0 + 208);
    log = *(os_log_t *)(v0 + 184);
    v53 = *(_QWORD *)(v0 + 152);
    v87 = *(_QWORD *)(v0 + 168);
    v90 = *(_QWORD *)(v0 + 160);
    v76 = *(_QWORD *)(v0 + 144);
    v78 = *(_QWORD *)(v0 + 136);
    v54 = swift_slowAlloc();
    v84 = swift_slowAlloc();
    v94 = v84;
    *(_DWORD *)v54 = 136315394;
    v46(v51, v50, v52);
    v55 = sub_1CA85B588();
    *(_QWORD *)(v0 + 32) = sub_1CA28712C(v55, v56, &v94);
    sub_1CA85BCF0();
    swift_bridgeObjectRelease();
    v57 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)typea + 8);
    v57(v50, v52);
    *(_WORD *)(v54 + 12) = 2080;
    sub_1CA85ABF8();
    v58 = sub_1CA85ABE0();
    v60 = v59;
    (*(void (**)(uint64_t, uint64_t))(v76 + 8))(v53, v78);
    *(_QWORD *)(v0 + 40) = sub_1CA28712C(v58, v60, &v94);
    sub_1CA85BCF0();
    swift_bridgeObjectRelease();
    (*(void (**)(os_log_t, uint64_t))(v87 + 8))(log, v90);
    _os_log_impl(&dword_1CA237000, v47, v48, "No key asset found for %s. Suggestion will not be persisted for magic slot type %s", (uint8_t *)v54, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1CAA4F27C](v84, -1, -1);
    MEMORY[0x1CAA4F27C](v54, -1, -1);

  }
  else
  {
    v66 = *(_QWORD *)(v0 + 200);
    v67 = *(_QWORD *)(v0 + 208);
    v68 = *(_QWORD *)(v0 + 184);
    v69 = *(_QWORD *)(v0 + 160);
    v70 = *(_QWORD *)(v0 + 168);

    v57 = *(void (**)(uint64_t, uint64_t))(v67 + 8);
    v57(v50, v66);
    (*(void (**)(uint64_t, uint64_t))(v70 + 8))(v68, v69);
  }

  v57(*(_QWORD *)(v0 + 248), *(_QWORD *)(v0 + 200));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(MEMORY[0x1E0DEE9D8]);
}

uint64_t sub_1CA2E8F28(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 280) = v1;
  swift_task_dealloc();
  if (!v1)
  {
    swift_bridgeObjectRelease();
    *(_QWORD *)(v4 + 288) = a1;
  }
  return swift_task_switch();
}

uint64_t sub_1CA2E8FA4()
{
  uint64_t v0;
  uint64_t v2;

  swift_release();
  v2 = *(_QWORD *)(v0 + 288);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v2);
}

uint64_t sub_1CA2E9084()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1CA2E916C(_QWORD **a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t result;
  _QWORD v6[2];

  v2 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EF94AC90) - 8);
  v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v3 = (_QWORD *)sub_1CA3A7994(v3);
  v4 = v3[2];
  v6[0] = (char *)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v6[1] = v4;
  result = sub_1CA2E91F0(v6);
  *a1 = v3;
  return result;
}

uint64_t sub_1CA2E91F0(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t result;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  float v51;
  float v52;
  float v53;
  float v54;
  uint64_t v55;
  char *v56;
  float *v57;
  uint64_t v58;
  uint64_t v59;
  void (*v60)(char *, uint64_t, uint64_t);
  uint64_t v61;
  uint64_t v62;
  void (*v63)(char *, uint64_t);
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  float v77;
  float v78;
  float v79;
  float v80;
  BOOL v81;
  char *v82;
  float *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  void (*v87)(char *, uint64_t, uint64_t);
  uint64_t v88;
  uint64_t v89;
  void (*v90)(char *, uint64_t);
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  int v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  unint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  float v113;
  float v114;
  float v115;
  float v116;
  BOOL v117;
  char *v118;
  float *v119;
  uint64_t v120;
  uint64_t v121;
  void (*v122)(char *, uint64_t, uint64_t);
  uint64_t v123;
  uint64_t v124;
  void (*v125)(char *, uint64_t);
  uint64_t v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  char v131;
  uint64_t v132;
  uint64_t v133;
  unint64_t v134;
  unint64_t v135;
  char *v136;
  char *v137;
  uint64_t v138;
  unint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  char v143;
  char *v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  BOOL v150;
  unint64_t v151;
  char *v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  char *v157;
  uint64_t v158;
  uint64_t v159;
  BOOL v160;
  uint64_t v161;
  char v162;
  char *v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  BOOL v167;
  uint64_t v168;
  uint64_t v169;
  char *v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  char *v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  unint64_t v178;
  char *v179;
  char *v180;
  uint64_t v181;
  char *v182;
  uint64_t v183;
  uint64_t v184;
  unint64_t v185;
  uint64_t v186;
  unint64_t v187;
  char *v188;
  char *v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  char *v193;
  unint64_t v194;
  char *v195;
  char *v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  char *v201;
  char *v202;
  char *v203;
  char *v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  unint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  char *v212;
  char *v213;
  _QWORD *v214;
  char *v215;
  char *v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;

  v219 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94AC90);
  v209 = *(_QWORD *)(v219 - 8);
  v3 = MEMORY[0x1E0C80A78](v219);
  v206 = (uint64_t)&v195 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v195 - v6;
  v8 = MEMORY[0x1E0C80A78](v5);
  v213 = (char *)&v195 - v9;
  v10 = MEMORY[0x1E0C80A78](v8);
  v212 = (char *)&v195 - v11;
  v12 = MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v195 - v13;
  v15 = MEMORY[0x1E0C80A78](v12);
  v226 = (uint64_t)&v195 - v16;
  v17 = MEMORY[0x1E0C80A78](v15);
  v202 = (char *)&v195 - v18;
  v19 = MEMORY[0x1E0C80A78](v17);
  v201 = (char *)&v195 - v20;
  v21 = MEMORY[0x1E0C80A78](v19);
  v210 = (uint64_t)&v195 - v22;
  v23 = MEMORY[0x1E0C80A78](v21);
  v203 = (char *)&v195 - v24;
  v25 = MEMORY[0x1E0C80A78](v23);
  v27 = (char *)&v195 - v26;
  v28 = MEMORY[0x1E0C80A78](v25);
  v30 = (char *)&v195 - v29;
  v31 = MEMORY[0x1E0C80A78](v28);
  v200 = (uint64_t)&v195 - v32;
  MEMORY[0x1E0C80A78](v31);
  v199 = (uint64_t)&v195 - v33;
  v34 = a1[1];
  result = sub_1CA85C254();
  if (result >= v34)
  {
    if (v34 < 0)
      goto LABEL_171;
    if (v34)
      return sub_1CA2EA150(0, v34, 1, a1);
    return result;
  }
  if (v34 >= 0)
    v36 = v34;
  else
    v36 = v34 + 1;
  if (v34 < -1)
    goto LABEL_179;
  v198 = result;
  v211 = v1;
  if (v34 < 2)
  {
    v40 = MEMORY[0x1E0DEE9D8];
    v208 = MEMORY[0x1E0DEE9D8]
         + ((*(unsigned __int8 *)(v209 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v209 + 80));
    if (v34 != 1)
    {
      v43 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
      v42 = (char *)MEMORY[0x1E0DEE9D8];
LABEL_136:
      v197 = v40;
      if (v43 >= 2)
      {
        v186 = *a1;
        do
        {
          v187 = v43 - 2;
          if (v43 < 2)
            goto LABEL_166;
          if (!v186)
            goto LABEL_178;
          v188 = v42;
          v189 = v42 + 32;
          v190 = *(_QWORD *)&v42[16 * v187 + 32];
          v191 = *(_QWORD *)&v42[16 * v43 + 24];
          v192 = v211;
          sub_1CA2EA51C(v186 + *(_QWORD *)(v209 + 72) * v190, v186 + *(_QWORD *)(v209 + 72) * *(_QWORD *)&v189[16 * v43 - 16], v186 + *(_QWORD *)(v209 + 72) * v191, v208);
          v211 = v192;
          if (v192)
            break;
          if (v191 < v190)
            goto LABEL_167;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v188 = sub_1CA3A78E0((uint64_t)v188);
          if (v187 >= *((_QWORD *)v188 + 2))
            goto LABEL_168;
          v193 = &v188[16 * v187 + 32];
          *(_QWORD *)v193 = v190;
          *((_QWORD *)v193 + 1) = v191;
          v194 = *((_QWORD *)v188 + 2);
          if (v43 > v194)
            goto LABEL_169;
          v42 = v188;
          memmove(&v188[16 * v43 + 16], &v188[16 * v43 + 32], 16 * (v194 - v43));
          *((_QWORD *)v188 + 2) = v194 - 1;
          v43 = v194 - 1;
        }
        while (v194 > 2);
      }
LABEL_147:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v197 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    v195 = v30;
    v196 = v27;
    v197 = MEMORY[0x1E0DEE9D8];
  }
  else
  {
    v195 = v30;
    v196 = v27;
    v37 = v36 >> 1;
    v38 = sub_1CA85B81C();
    *(_QWORD *)(v38 + 16) = v37;
    v39 = *(unsigned __int8 *)(v209 + 80);
    v197 = v38;
    v208 = v38 + ((v39 + 32) & ~v39);
  }
  v41 = 0;
  v42 = (char *)MEMORY[0x1E0DEE9D8];
  v214 = a1;
  v215 = v7;
  v216 = v14;
  while (2)
  {
    v44 = v41 + 1;
    v204 = v42;
    v207 = v41;
    if (v41 + 1 >= v34)
    {
      v72 = v41 + 1;
      v73 = v219;
      goto LABEL_61;
    }
    v224 = v34;
    v45 = *a1;
    v46 = *(_QWORD *)(v209 + 72);
    v47 = v199;
    sub_1CA2684BC(*a1 + v46 * v44, v199, &qword_1EF94AC90);
    v217 = v45;
    v225 = v46;
    v48 = v45 + v46 * v41;
    v49 = v200;
    sub_1CA2684BC(v48, v200, &qword_1EF94AC90);
    v50 = *(int *)(v219 + 48);
    v51 = *(float *)(v47 + v50);
    v52 = *(float *)(v49 + v50);
    if (v51 == v52)
    {
      v53 = *(float *)(v47 + v50 + 4);
      v54 = *(float *)(v49 + v50 + 4);
      v55 = (uint64_t)v203;
      if (v53 == v54)
      {
        v56 = v195;
        v57 = (float *)&v195[v50];
        v58 = sub_1CA85AEEC();
        v59 = *(_QWORD *)(v58 - 8);
        v60 = *(void (**)(char *, uint64_t, uint64_t))(v59 + 16);
        v60(v56, v199, v58);
        *v57 = v51;
        v57[1] = v53;
        v61 = sub_1CA85AEA4();
        v222 = v62;
        v223 = v61;
        v63 = *(void (**)(char *, uint64_t))(v59 + 8);
        v63(v56, v58);
        v64 = *(int *)(v219 + 48);
        v65 = v196;
        v66 = v200;
        v60(v196, v200, v58);
        *(_QWORD *)&v65[v64] = *(_QWORD *)(v66 + v50);
        v67 = sub_1CA85AEA4();
        v69 = v68;
        v70 = v65;
        v71 = v222;
        v63(v70, v58);
        if (v67 == v223 && v69 == v71)
        {
          swift_bridgeObjectRelease_n();
          LODWORD(v223) = 0;
        }
        else
        {
          LODWORD(v223) = sub_1CA85C284();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        a1 = v214;
        v14 = v216;
        v42 = v204;
      }
      else
      {
        LODWORD(v223) = v53 < v54;
      }
    }
    else
    {
      LODWORD(v223) = v52 < v51;
      v55 = (uint64_t)v203;
    }
    sub_1CA267BE8(v200, &qword_1EF94AC90);
    sub_1CA267BE8(v199, &qword_1EF94AC90);
    v41 = v207;
    v72 = v207 + 2;
    v34 = v224;
    if (v207 + 2 >= v224)
    {
      v73 = v219;
      if ((v223 & 1) != 0)
        goto LABEL_47;
LABEL_59:
      v7 = v215;
      goto LABEL_61;
    }
    v221 = v207 + 2;
    v222 = v225 * v44;
    v74 = v217;
    v220 = v225 * v72;
    v73 = v219;
    while (1)
    {
      sub_1CA2684BC(v74 + v220, v55, &qword_1EF94AC90);
      v75 = v210;
      sub_1CA2684BC(v74 + v222, v210, &qword_1EF94AC90);
      v76 = *(int *)(v73 + 48);
      v77 = *(float *)(v55 + v76);
      v78 = *(float *)(v75 + v76);
      if (v77 != v78)
      {
        v81 = v78 < v77;
LABEL_35:
        v97 = v81;
        goto LABEL_40;
      }
      v79 = *(float *)(v55 + v76 + 4);
      v80 = *(float *)(v75 + v76 + 4);
      v81 = v79 < v80;
      if (v79 != v80)
        goto LABEL_35;
      v82 = v201;
      v83 = (float *)&v201[v76];
      v84 = sub_1CA85AEEC();
      v85 = *(_QWORD *)(v84 - 8);
      v86 = v73;
      v87 = *(void (**)(char *, uint64_t, uint64_t))(v85 + 16);
      v87(v82, v55, v84);
      *v83 = v77;
      v83[1] = v79;
      v218 = sub_1CA85AEA4();
      v89 = v88;
      v90 = *(void (**)(char *, uint64_t))(v85 + 8);
      v90(v82, v84);
      v91 = *(int *)(v86 + 48);
      v92 = v202;
      v93 = v210;
      v87(v202, v210, v84);
      *(_QWORD *)&v92[v91] = *(_QWORD *)(v93 + v76);
      v94 = sub_1CA85AEA4();
      v96 = v95;
      v90(v92, v84);
      if (v94 != v218)
        goto LABEL_38;
      if (v96 == v89)
      {
        swift_bridgeObjectRelease_n();
        v97 = 0;
      }
      else
      {
LABEL_38:
        v97 = sub_1CA85C284();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      a1 = v214;
      v73 = v219;
      v14 = v216;
      v42 = v204;
      v55 = (uint64_t)v203;
LABEL_40:
      sub_1CA267BE8(v210, &qword_1EF94AC90);
      sub_1CA267BE8(v55, &qword_1EF94AC90);
      v34 = v224;
      if (((v223 ^ v97) & 1) != 0)
        break;
      v74 += v225;
      if (v224 == ++v221)
      {
        v72 = v224;
        goto LABEL_46;
      }
    }
    v72 = v221;
LABEL_46:
    v41 = v207;
    if ((v223 & 1) == 0)
      goto LABEL_59;
LABEL_47:
    if (v72 < v41)
      goto LABEL_172;
    if (v41 >= v72)
      goto LABEL_59;
    v98 = 0;
    v99 = v41;
    v100 = v225 * (v72 - 1);
    v101 = v72 * v225;
    v102 = v99;
    v103 = v99 * v225;
    do
    {
      if (v102 != v72 + v98 - 1)
      {
        v105 = v217;
        if (!v217)
          goto LABEL_177;
        v106 = v217 + v103;
        v223 = v217 + v100;
        sub_1CA24EEF8(v217 + v103, v206, &qword_1EF94AC90);
        if (v103 < v100 || v106 >= v105 + v101)
        {
          v104 = v223;
          swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          v104 = v223;
          if (v103 != v100)
            swift_arrayInitWithTakeBackToFront();
        }
        sub_1CA24EEF8(v206, v104, &qword_1EF94AC90);
        v34 = v224;
      }
      ++v102;
      --v98;
      v100 -= v225;
      v101 -= v225;
      v103 += v225;
    }
    while (v102 < v72 + v98);
    a1 = v214;
    v7 = v215;
    v73 = v219;
    v42 = v204;
    v41 = v207;
LABEL_61:
    v221 = v72;
    if (v72 >= v34)
      goto LABEL_88;
    if (__OFSUB__(v72, v41))
      goto LABEL_170;
    if (v72 - v41 >= v198)
      goto LABEL_88;
    if (__OFADD__(v41, v198))
      goto LABEL_173;
    if (v41 + v198 >= v34)
      v107 = v34;
    else
      v107 = v41 + v198;
    if (v107 >= v41)
    {
      if (v221 == v107)
        goto LABEL_88;
      v108 = *(_QWORD *)(v209 + 72);
      v225 = v108 * (v221 - 1);
      v220 = v108;
      v224 = v221 * v108;
      v205 = v107;
      while (2)
      {
        v109 = 0;
        while (2)
        {
          v110 = *a1;
          v223 = v224 + v109;
          v111 = v226;
          sub_1CA2684BC(v224 + v109 + v110, v226, &qword_1EF94AC90);
          v222 = v225 + v109;
          sub_1CA2684BC(v225 + v109 + v110, (uint64_t)v14, &qword_1EF94AC90);
          v112 = *(int *)(v73 + 48);
          v113 = *(float *)(v111 + v112);
          v114 = *(float *)&v14[v112];
          if (v113 != v114)
          {
            v117 = v114 < v113;
LABEL_81:
            v131 = v117;
            goto LABEL_84;
          }
          v115 = *(float *)(v111 + v112 + 4);
          v116 = *(float *)&v14[v112 + 4];
          v117 = v115 < v116;
          if (v115 != v116)
            goto LABEL_81;
          v118 = v212;
          v119 = (float *)&v212[v112];
          v120 = sub_1CA85AEEC();
          v121 = *(_QWORD *)(v120 - 8);
          v122 = *(void (**)(char *, uint64_t, uint64_t))(v121 + 16);
          v122(v118, v226, v120);
          *v119 = v113;
          v119[1] = v115;
          v123 = sub_1CA85AEA4();
          v217 = v124;
          v218 = v123;
          v125 = *(void (**)(char *, uint64_t))(v121 + 8);
          v125(v118, v120);
          v126 = *(int *)(v219 + 48);
          v127 = v213;
          v122(v213, (uint64_t)v14, v120);
          *(_QWORD *)&v127[v126] = *(_QWORD *)&v14[v112];
          v128 = sub_1CA85AEA4();
          v130 = v129;
          v125(v127, v120);
          if (v128 != v218 || v130 != v217)
          {
            v131 = sub_1CA85C284();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            a1 = v214;
            v7 = v215;
            v73 = v219;
            v14 = v216;
LABEL_84:
            sub_1CA267BE8((uint64_t)v14, &qword_1EF94AC90);
            sub_1CA267BE8(v226, &qword_1EF94AC90);
            if ((v131 & 1) == 0)
              goto LABEL_72;
            v132 = *a1;
            if (!*a1)
              goto LABEL_175;
            v133 = v132 + v225 + v109;
            sub_1CA24EEF8(v132 + v224 + v109, (uint64_t)v7, &qword_1EF94AC90);
            swift_arrayInitWithTakeFrontToBack();
            sub_1CA24EEF8((uint64_t)v7, v133, &qword_1EF94AC90);
            v109 -= v220;
            if (v221 == ++v41)
              goto LABEL_72;
            continue;
          }
          break;
        }
        swift_bridgeObjectRelease_n();
        v14 = v216;
        sub_1CA267BE8((uint64_t)v216, &qword_1EF94AC90);
        sub_1CA267BE8(v226, &qword_1EF94AC90);
        a1 = v214;
        v7 = v215;
        v73 = v219;
LABEL_72:
        v225 += v220;
        v224 += v220;
        ++v221;
        v41 = v207;
        if (v221 != v205)
          continue;
        break;
      }
      v221 = v205;
      v42 = v204;
LABEL_88:
      if (v221 < v41)
        goto LABEL_165;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v42 = sub_1CA3A7130(0, *((_QWORD *)v42 + 2) + 1, 1, v42);
      v135 = *((_QWORD *)v42 + 2);
      v134 = *((_QWORD *)v42 + 3);
      v43 = v135 + 1;
      if (v135 >= v134 >> 1)
        v42 = sub_1CA3A7130((char *)(v134 > 1), v135 + 1, 1, v42);
      *((_QWORD *)v42 + 2) = v43;
      v136 = v42 + 32;
      v137 = &v42[16 * v135 + 32];
      v138 = v221;
      *(_QWORD *)v137 = v207;
      *((_QWORD *)v137 + 1) = v138;
      if (v135)
      {
        while (2)
        {
          v139 = v43 - 1;
          if (v43 >= 4)
          {
            v144 = &v136[16 * v43];
            v145 = *((_QWORD *)v144 - 8);
            v146 = *((_QWORD *)v144 - 7);
            v150 = __OFSUB__(v146, v145);
            v147 = v146 - v145;
            if (v150)
              goto LABEL_154;
            v149 = *((_QWORD *)v144 - 6);
            v148 = *((_QWORD *)v144 - 5);
            v150 = __OFSUB__(v148, v149);
            v142 = v148 - v149;
            v143 = v150;
            if (v150)
              goto LABEL_155;
            v151 = v43 - 2;
            v152 = &v136[16 * v43 - 32];
            v154 = *(_QWORD *)v152;
            v153 = *((_QWORD *)v152 + 1);
            v150 = __OFSUB__(v153, v154);
            v155 = v153 - v154;
            if (v150)
              goto LABEL_157;
            v150 = __OFADD__(v142, v155);
            v156 = v142 + v155;
            if (v150)
              goto LABEL_160;
            if (v156 >= v147)
            {
              v174 = &v136[16 * v139];
              v176 = *(_QWORD *)v174;
              v175 = *((_QWORD *)v174 + 1);
              v150 = __OFSUB__(v175, v176);
              v177 = v175 - v176;
              if (v150)
                goto LABEL_164;
              v167 = v142 < v177;
            }
            else
            {
LABEL_107:
              if ((v143 & 1) != 0)
                goto LABEL_156;
              v151 = v43 - 2;
              v157 = &v136[16 * v43 - 32];
              v159 = *(_QWORD *)v157;
              v158 = *((_QWORD *)v157 + 1);
              v160 = __OFSUB__(v158, v159);
              v161 = v158 - v159;
              v162 = v160;
              if (v160)
                goto LABEL_159;
              v163 = &v136[16 * v139];
              v165 = *(_QWORD *)v163;
              v164 = *((_QWORD *)v163 + 1);
              v150 = __OFSUB__(v164, v165);
              v166 = v164 - v165;
              if (v150)
                goto LABEL_162;
              if (__OFADD__(v161, v166))
                goto LABEL_163;
              if (v161 + v166 < v142)
                goto LABEL_119;
              v167 = v142 < v166;
            }
            if (v167)
              v139 = v151;
          }
          else
          {
            if (v43 == 3)
            {
              v141 = *((_QWORD *)v42 + 4);
              v140 = *((_QWORD *)v42 + 5);
              v150 = __OFSUB__(v140, v141);
              v142 = v140 - v141;
              v143 = v150;
              goto LABEL_107;
            }
            v168 = *((_QWORD *)v42 + 4);
            v169 = *((_QWORD *)v42 + 5);
            v150 = __OFSUB__(v169, v168);
            v161 = v169 - v168;
            v162 = v150;
LABEL_119:
            if ((v162 & 1) != 0)
              goto LABEL_158;
            v170 = &v136[16 * v139];
            v172 = *(_QWORD *)v170;
            v171 = *((_QWORD *)v170 + 1);
            v150 = __OFSUB__(v171, v172);
            v173 = v171 - v172;
            if (v150)
              goto LABEL_161;
            if (v173 < v161)
              goto LABEL_15;
          }
          v178 = v139 - 1;
          if (v139 - 1 >= v43)
          {
            __break(1u);
LABEL_151:
            __break(1u);
LABEL_152:
            __break(1u);
LABEL_153:
            __break(1u);
LABEL_154:
            __break(1u);
LABEL_155:
            __break(1u);
LABEL_156:
            __break(1u);
LABEL_157:
            __break(1u);
LABEL_158:
            __break(1u);
LABEL_159:
            __break(1u);
LABEL_160:
            __break(1u);
LABEL_161:
            __break(1u);
LABEL_162:
            __break(1u);
LABEL_163:
            __break(1u);
LABEL_164:
            __break(1u);
LABEL_165:
            __break(1u);
LABEL_166:
            __break(1u);
LABEL_167:
            __break(1u);
LABEL_168:
            __break(1u);
LABEL_169:
            __break(1u);
LABEL_170:
            __break(1u);
LABEL_171:
            __break(1u);
LABEL_172:
            __break(1u);
LABEL_173:
            __break(1u);
            goto LABEL_174;
          }
          if (!*a1)
            goto LABEL_176;
          v179 = v42;
          v180 = &v136[16 * v178];
          v181 = *(_QWORD *)v180;
          v182 = &v136[16 * v139];
          v183 = *((_QWORD *)v182 + 1);
          v184 = v211;
          sub_1CA2EA51C(*a1 + *(_QWORD *)(v209 + 72) * *(_QWORD *)v180, *a1 + *(_QWORD *)(v209 + 72) * *(_QWORD *)v182, *a1 + *(_QWORD *)(v209 + 72) * v183, v208);
          v211 = v184;
          if (v184)
            goto LABEL_147;
          if (v183 < v181)
            goto LABEL_151;
          if (v139 > *((_QWORD *)v179 + 2))
            goto LABEL_152;
          *(_QWORD *)v180 = v181;
          *(_QWORD *)&v136[16 * v178 + 8] = v183;
          v185 = *((_QWORD *)v179 + 2);
          if (v139 >= v185)
            goto LABEL_153;
          v42 = v179;
          v43 = v185 - 1;
          memmove(&v136[16 * v139], v182 + 16, 16 * (v185 - 1 - v139));
          *((_QWORD *)v179 + 2) = v185 - 1;
          v7 = v215;
          v14 = v216;
          if (v185 <= 2)
            goto LABEL_15;
          continue;
        }
      }
      v43 = 1;
LABEL_15:
      v34 = a1[1];
      v41 = v221;
      if (v221 >= v34)
      {
        v40 = v197;
        goto LABEL_136;
      }
      continue;
    }
    break;
  }
LABEL_174:
  __break(1u);
LABEL_175:
  __break(1u);
LABEL_176:
  __break(1u);
LABEL_177:
  __break(1u);
LABEL_178:
  __break(1u);
LABEL_179:
  result = sub_1CA85C038();
  __break(1u);
  return result;
}

uint64_t sub_1CA2EA150(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  float v29;
  float v30;
  float v31;
  float v32;
  BOOL v33;
  char *v34;
  float *v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, uint64_t, uint64_t);
  uint64_t v39;
  uint64_t v40;
  void (*v41)(char *, uint64_t);
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  _QWORD *v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;

  v55 = a1;
  v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94AC90);
  v7 = MEMORY[0x1E0C80A78](v65);
  v9 = (char *)&v53 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x1E0C80A78](v7);
  v59 = (char *)&v53 - v11;
  v12 = MEMORY[0x1E0C80A78](v10);
  v58 = (char *)&v53 - v13;
  v14 = MEMORY[0x1E0C80A78](v12);
  v70 = (uint64_t)&v53 - v15;
  result = MEMORY[0x1E0C80A78](v14);
  v69 = (uint64_t)&v53 - v18;
  v54 = a2;
  if (a3 != a2)
  {
    v19 = a3;
    v20 = *(_QWORD *)(v17 + 72);
    v21 = v20 * (a3 - 1);
    v63 = v20;
    v68 = v20 * a3;
    v56 = v9;
    v57 = a4;
LABEL_6:
    v22 = 0;
    v23 = v55;
    v60 = v19;
    v64 = v21;
    while (1)
    {
      v24 = *a4;
      v25 = v69;
      v67 = v68 + v22;
      sub_1CA2684BC(v68 + v22 + v24, v69, &qword_1EF94AC90);
      v66 = v21 + v22;
      v26 = v21 + v22 + v24;
      v27 = v70;
      sub_1CA2684BC(v26, v70, &qword_1EF94AC90);
      v28 = *(int *)(v65 + 48);
      v29 = *(float *)(v25 + v28);
      v30 = *(float *)(v27 + v28);
      if (v29 != v30)
        break;
      v31 = *(float *)(v25 + v28 + 4);
      v32 = *(float *)(v27 + v28 + 4);
      v33 = v31 < v32;
      if (v31 != v32)
        goto LABEL_14;
      v34 = v58;
      v35 = (float *)&v58[v28];
      v36 = sub_1CA85AEEC();
      v37 = *(_QWORD *)(v36 - 8);
      v38 = *(void (**)(char *, uint64_t, uint64_t))(v37 + 16);
      v38(v34, v69, v36);
      *v35 = v29;
      v35[1] = v31;
      v39 = sub_1CA85AEA4();
      v61 = v40;
      v62 = v39;
      v41 = *(void (**)(char *, uint64_t))(v37 + 8);
      v41(v34, v36);
      v42 = *(int *)(v65 + 48);
      v43 = v59;
      v44 = v70;
      v38(v59, v70, v36);
      *(_QWORD *)&v43[v42] = *(_QWORD *)(v44 + v28);
      v45 = sub_1CA85AEA4();
      v47 = v46;
      v48 = v36;
      v49 = v61;
      v41(v43, v48);
      if (v45 == v62 && v47 == v49)
      {
        swift_bridgeObjectRelease_n();
        sub_1CA267BE8(v70, &qword_1EF94AC90);
        result = sub_1CA267BE8(v69, &qword_1EF94AC90);
        v9 = v56;
        a4 = v57;
        v19 = v60;
        v21 = v64;
LABEL_5:
        v21 += v63;
        v68 += v63;
        if (++v19 == v54)
          return result;
        goto LABEL_6;
      }
      v50 = sub_1CA85C284();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v9 = v56;
      a4 = v57;
      v19 = v60;
LABEL_17:
      sub_1CA267BE8(v70, &qword_1EF94AC90);
      result = sub_1CA267BE8(v69, &qword_1EF94AC90);
      v21 = v64;
      if ((v50 & 1) == 0)
        goto LABEL_5;
      v51 = *a4;
      if (!*a4)
      {
        __break(1u);
        return result;
      }
      v52 = v51 + v64 + v22;
      sub_1CA24EEF8(v51 + v68 + v22, (uint64_t)v9, &qword_1EF94AC90);
      swift_arrayInitWithTakeFrontToBack();
      result = sub_1CA24EEF8((uint64_t)v9, v52, &qword_1EF94AC90);
      v22 -= v63;
      if (v19 == ++v23)
        goto LABEL_5;
    }
    v33 = v30 < v29;
LABEL_14:
    v50 = v33;
    goto LABEL_17;
  }
  return result;
}

uint64_t sub_1CA2EA51C(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  float v35;
  float v36;
  float v37;
  float v38;
  BOOL v39;
  char *v40;
  float *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(char *, uint64_t, uint64_t);
  uint64_t v47;
  uint64_t v48;
  void (*v49)(char *, uint64_t);
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  unint64_t v56;
  unint64_t v57;
  unint64_t v58;
  unint64_t v59;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  unint64_t v64;
  uint64_t v65;
  float v66;
  float v67;
  float v68;
  float v69;
  BOOL v70;
  char *v71;
  float *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  void (*v76)(char *, uint64_t, uint64_t);
  uint64_t v77;
  char *v78;
  void (*v79)(char *, uint64_t);
  uint64_t v80;
  char *v81;
  unint64_t v82;
  uint64_t v83;
  char *v84;
  char *v85;
  char *v86;
  char *v87;
  char v88;
  unint64_t v89;
  unint64_t v90;
  uint64_t result;
  uint64_t v92;
  uint64_t v93;
  unint64_t v94;
  char *v95;
  char *v96;
  char *v97;
  char *v98;
  uint64_t v99;
  unint64_t v100;
  unint64_t v101;
  uint64_t v102;
  uint64_t v103;
  unint64_t v104;
  unint64_t v105;
  unint64_t v106;
  unint64_t v107;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94AC90);
  v9 = MEMORY[0x1E0C80A78](v8);
  v96 = (char *)&v92 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x1E0C80A78](v9);
  v95 = (char *)&v92 - v12;
  v13 = MEMORY[0x1E0C80A78](v11);
  v104 = (unint64_t)&v92 - v14;
  v15 = MEMORY[0x1E0C80A78](v13);
  v103 = (uint64_t)&v92 - v16;
  v17 = MEMORY[0x1E0C80A78](v15);
  v98 = (char *)&v92 - v18;
  v19 = MEMORY[0x1E0C80A78](v17);
  v97 = (char *)&v92 - v20;
  v21 = MEMORY[0x1E0C80A78](v19);
  v23 = (char *)&v92 - v22;
  MEMORY[0x1E0C80A78](v21);
  v102 = (uint64_t)&v92 - v24;
  v26 = *(_QWORD *)(v25 + 72);
  if (!v26)
  {
    __break(1u);
LABEL_83:
    __break(1u);
LABEL_84:
    __break(1u);
    goto LABEL_85;
  }
  v101 = a1;
  if (a2 - a1 == 0x8000000000000000 && v26 == -1)
    goto LABEL_83;
  v27 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v26 == -1)
    goto LABEL_84;
  v28 = (uint64_t)(a2 - a1) / v26;
  v107 = v101;
  v106 = a4;
  v29 = v27 / v26;
  v99 = v8;
  if (v28 >= v27 / v26)
  {
    if (v29 < 0)
      goto LABEL_85;
    v31 = v29 * v26;
    if (a4 < a2 || a2 + v31 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a2)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    v59 = a4 + v31;
    v105 = a4 + v31;
    v107 = a2;
    if (v31 < 1 || v101 >= a2)
    {
LABEL_81:
      sub_1CA3A73B8(&v107, &v106, (uint64_t *)&v105);
      return 1;
    }
    v61 = -v26;
    v94 = a4;
    v102 = -v26;
    while (1)
    {
      v62 = v103;
      sub_1CA2684BC(v59 + v61, v103, &qword_1EF94AC90);
      v63 = a2 + v61;
      v64 = v104;
      sub_1CA2684BC(a2 + v61, v104, &qword_1EF94AC90);
      v65 = *(int *)(v8 + 48);
      v66 = *(float *)(v62 + v65);
      v67 = *(float *)(v64 + v65);
      if (v66 == v67)
      {
        v68 = *(float *)(v62 + v65 + 4);
        v69 = *(float *)(v64 + v65 + 4);
        v70 = v68 < v69;
        if (v68 == v69)
        {
          v100 = a3;
          v71 = v95;
          v72 = (float *)&v95[v65];
          v73 = v8;
          v74 = sub_1CA85AEEC();
          v75 = *(_QWORD *)(v74 - 8);
          v76 = *(void (**)(char *, uint64_t, uint64_t))(v75 + 16);
          v76(v71, v103, v74);
          *v72 = v66;
          v72[1] = v68;
          v77 = sub_1CA85AEA4();
          v97 = v78;
          v98 = (char *)v77;
          v79 = *(void (**)(char *, uint64_t))(v75 + 8);
          v79(v71, v74);
          v80 = *(int *)(v73 + 48);
          v81 = v96;
          v82 = v104;
          v76(v96, v104, v74);
          *(_QWORD *)&v81[v80] = *(_QWORD *)(v82 + v65);
          v83 = sub_1CA85AEA4();
          v85 = v84;
          v86 = v81;
          v87 = v97;
          v79(v86, v74);
          if ((char *)v83 == v98 && v85 == v87)
          {
            swift_bridgeObjectRelease_n();
            v88 = 0;
          }
          else
          {
            v88 = sub_1CA85C284();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          v8 = v99;
          a3 = v100;
          a4 = v94;
          goto LABEL_66;
        }
      }
      else
      {
        v70 = v67 < v66;
      }
      v88 = v70;
LABEL_66:
      v61 = v102;
      v89 = a3 + v102;
      sub_1CA267BE8(v104, &qword_1EF94AC90);
      sub_1CA267BE8(v103, &qword_1EF94AC90);
      if ((v88 & 1) != 0)
      {
        if (a3 < a2 || v89 >= a2)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (a3 != a2)
        {
          swift_arrayInitWithTakeBackToFront();
        }
        v107 += v61;
      }
      else
      {
        v90 = v105;
        v105 += v61;
        if (a3 < v90 || v89 >= v90)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (a3 != v90)
        {
          swift_arrayInitWithTakeBackToFront();
        }
        v63 = a2;
      }
      v59 = v105;
      if (v105 > a4)
      {
        a2 = v63;
        a3 += v61;
        if (v63 > v101)
          continue;
      }
      goto LABEL_81;
    }
  }
  if ((v28 & 0x8000000000000000) == 0)
  {
    v30 = v28 * v26;
    if (a4 < v101 || v101 + v30 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != v101)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    v104 = a4 + v30;
    v105 = a4 + v30;
    if (v30 >= 1 && a2 < a3)
    {
      v100 = a3;
      v93 = v26;
      while (1)
      {
        v33 = v102;
        sub_1CA2684BC(a2, v102, &qword_1EF94AC90);
        sub_1CA2684BC(a4, (uint64_t)v23, &qword_1EF94AC90);
        v34 = *(int *)(v8 + 48);
        v35 = *(float *)(v33 + v34);
        v36 = *(float *)&v23[v34];
        if (v35 != v36)
          break;
        v37 = *(float *)(v33 + v34 + 4);
        v38 = *(float *)&v23[v34 + 4];
        v39 = v37 < v38;
        if (v37 != v38)
          goto LABEL_29;
        v40 = v97;
        v41 = (float *)&v97[v34];
        v42 = sub_1CA85AEEC();
        v43 = v8;
        v44 = *(_QWORD *)(v42 - 8);
        v45 = (uint64_t)v23;
        v46 = *(void (**)(char *, uint64_t, uint64_t))(v44 + 16);
        v46(v40, v102, v42);
        *v41 = v35;
        v41[1] = v37;
        v103 = sub_1CA85AEA4();
        v48 = v47;
        v49 = *(void (**)(char *, uint64_t))(v44 + 8);
        v49(v40, v42);
        v50 = *(int *)(v43 + 48);
        v51 = v98;
        v46(v98, v45, v42);
        v23 = (char *)v45;
        *(_QWORD *)&v51[v50] = *(_QWORD *)(v45 + v34);
        v52 = sub_1CA85AEA4();
        v54 = v53;
        v49(v51, v42);
        if (v52 == v103 && v54 == v48)
        {
          swift_bridgeObjectRelease_n();
          sub_1CA267BE8(v45, &qword_1EF94AC90);
          sub_1CA267BE8(v102, &qword_1EF94AC90);
          v8 = v99;
          a3 = v100;
          v26 = v93;
LABEL_38:
          v56 = v107;
          v58 = v106 + v26;
          if (v107 < v106 || v107 >= v58)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v107 != v106)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          v106 = v58;
          v57 = a2;
          goto LABEL_46;
        }
        v55 = sub_1CA85C284();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v8 = v99;
        a3 = v100;
        v26 = v93;
LABEL_33:
        sub_1CA267BE8((uint64_t)v23, &qword_1EF94AC90);
        sub_1CA267BE8(v102, &qword_1EF94AC90);
        if ((v55 & 1) == 0)
          goto LABEL_38;
        v56 = v107;
        v57 = a2 + v26;
        if (v107 < a2 || v107 >= v57)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (v107 == a2)
        {
          v56 = a2;
        }
        else
        {
          swift_arrayInitWithTakeBackToFront();
        }
LABEL_46:
        v107 = v56 + v26;
        a4 = v106;
        if (v106 < v104)
        {
          a2 = v57;
          if (v57 < a3)
            continue;
        }
        goto LABEL_81;
      }
      v39 = v36 < v35;
LABEL_29:
      v55 = v39;
      goto LABEL_33;
    }
    goto LABEL_81;
  }
LABEL_85:
  result = sub_1CA85C0D4();
  __break(1u);
  return result;
}

uint64_t sub_1CA2EACEC()
{
  sub_1CA85AEEC();
  sub_1CA23CC98(&qword_1EF94B140, (uint64_t (*)(uint64_t))MEMORY[0x1E0D77038], MEMORY[0x1E0D77050]);
  return sub_1CA85B504() & 1;
}

unint64_t sub_1CA2EAD64()
{
  unint64_t result;

  result = qword_1EF94D050;
  if (!qword_1EF94D050)
  {
    result = MEMORY[0x1CAA4F1A4](&protocol conformance descriptor for CollectionElector.Error, &type metadata for CollectionElector.Error);
    atomic_store(result, (unint64_t *)&qword_1EF94D050);
  }
  return result;
}

uint64_t sub_1CA2EADA8()
{
  return type metadata accessor for CollectionElector();
}

uint64_t type metadata accessor for CollectionElector()
{
  uint64_t result;

  result = qword_1ED874608;
  if (!qword_1ED874608)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1CA2EADEC()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1CA85B348();
  if (v1 <= 0x3F)
  {
    result = sub_1CA85A5B0();
    if (v2 <= 0x3F)
    {
      result = swift_updateClassMetadata2();
      if (!result)
        return 0;
    }
  }
  return result;
}

uint64_t method lookup function for CollectionElector()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of CollectionElector.__allocating_init(sources:photoLibrary:presentDate:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t dispatch thunk of CollectionElector.electedCollectionsByRecipeId()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t storeEnumTagSinglePayload for CollectionElector.Error(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1CA2EAF08 + 4 * byte_1CA8DAE45[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1CA2EAF3C + 4 * byte_1CA8DAE40[v4]))();
}

uint64_t sub_1CA2EAF3C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CA2EAF44(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1CA2EAF4CLL);
  return result;
}

uint64_t sub_1CA2EAF58(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1CA2EAF60);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1CA2EAF64(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CA2EAF6C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CollectionElector.Error()
{
  return &type metadata for CollectionElector.Error;
}

uint64_t sub_1CA2EAF88(uint64_t result)
{
  if (result)
    return swift_release();
  return result;
}

float sub_1CA2EAF98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  float v23;
  float v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  void (*v29)(char *, uint64_t);
  uint64_t v30;
  uint64_t v31;
  float v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  void (*v37)(char *, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(char *, uint64_t, uint64_t);
  uint64_t v51;
  uint64_t v52;

  v45 = a3;
  v44 = type metadata accessor for TriggerResult();
  v42 = *(_QWORD *)(v44 - 8);
  MEMORY[0x1E0C80A78](v44);
  v6 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8711C0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1CA85A5B0();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x1E0C80A78](v10);
  v43 = (char *)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v41 - v15;
  MEMORY[0x1E0C80A78](v14);
  v47 = (char *)&v41 - v17;
  v18 = sub_1CA85AEEC();
  MEMORY[0x1E0C80A78](v18);
  v21 = (char *)&v41 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = *(_QWORD *)(a2 + 16);
  v23 = 0.0;
  v24 = 0.0;
  v52 = a1;
  v48 = v11;
  if (v22)
  {
    v25 = a2;
    v26 = a2 + ((*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80));
    v27 = *(_QWORD *)(v19 + 72);
    v49 = v19;
    v50 = *(void (**)(char *, uint64_t, uint64_t))(v19 + 16);
    v51 = v27;
    v41 = v25;
    swift_bridgeObjectRetain();
    v46 = v9;
    do
    {
      v50(v21, v26, v18);
      if ((sub_1CA85AEBC() & 1) != 0)
      {
        sub_1CA85AE98();
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
        {
          (*(void (**)(char *, uint64_t))(v49 + 8))(v21, v18);
          sub_1CA267BE8((uint64_t)v9, &qword_1ED8711C0);
        }
        else
        {
          v28 = v47;
          (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v47, v9, v10);
          sub_1CA85A580();
          sub_1CA85A598();
          v29 = *(void (**)(char *, uint64_t))(v11 + 8);
          v29(v16, v10);
          v30 = sub_1CA85B924();
          if (v30 <= 1)
            v31 = 1;
          else
            v31 = v30;
          v29(v28, v10);
          v9 = v46;
          (*(void (**)(char *, uint64_t))(v49 + 8))(v21, v18);
          v32 = (float)v31;
          v11 = v48;
          v24 = v24 + (float)(1.0 / v32);
        }
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v49 + 8))(v21, v18);
      }
      v26 += v51;
      --v22;
    }
    while (v22);
    swift_bridgeObjectRelease();
  }
  v33 = *(_QWORD *)(v45 + 16);
  if (v33)
  {
    v34 = v45 + ((*(unsigned __int8 *)(v42 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v42 + 80));
    v35 = *(_QWORD *)(v42 + 72);
    swift_bridgeObjectRetain();
    v23 = 0.0;
    v36 = v43;
    do
    {
      sub_1CA26A9D4(v34, (uint64_t)v6);
      if ((sub_1CA85AEBC() & 1) != 0)
      {
        sub_1CA85A580();
        sub_1CA85A124();
        sub_1CA85A598();
        v37 = *(void (**)(char *, uint64_t))(v48 + 8);
        v37(v36, v10);
        v37(v16, v10);
        v38 = sub_1CA85B924();
        if (v38 <= 1)
          v39 = 1;
        else
          v39 = v38;
        sub_1CA26C068((uint64_t)v6);
        v23 = v23 + (float)(1.0 / (float)v39);
      }
      else
      {
        sub_1CA26C068((uint64_t)v6);
      }
      v34 += v35;
      --v33;
    }
    while (v33);
    swift_bridgeObjectRelease();
  }
  return (float)(v24 * 0.5) + (float)(v23 * 0.5);
}

uint64_t static PhotosChallengeAlgorithmEvaluator.algorithm(for:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char v104;
  uint64_t v105;
  char v106;
  uint64_t v108;
  char v109;
  uint64_t v110;
  char v111;
  uint64_t v112;
  char v113;
  uint64_t v114;
  char v115;
  uint64_t v116;
  char v117;
  uint64_t v118;
  char v119;
  uint64_t v120;
  char v121;
  uint64_t v122;
  char v123;
  uint64_t v124;
  char v125;
  uint64_t v126;
  char v127;
  uint64_t v128;
  char v129;
  uint64_t v130;
  char v131;
  uint64_t v132;
  char v133;
  uint64_t v134;
  char v135;
  uint64_t v136;
  char v137;
  uint64_t v138;
  char v139;
  uint64_t v140;
  char v141;
  uint64_t v142;
  char v143;
  uint64_t v144;
  char v145;
  uint64_t v146;
  char v147;
  uint64_t v148;
  char v149;
  uint64_t v150;
  char v151;
  uint64_t v152;
  char v153;
  uint64_t v154;
  char v155;
  uint64_t v156;
  char v157;
  uint64_t v158;
  char v159;
  uint64_t v160;
  char v161;
  uint64_t v162;
  char v163;
  uint64_t v164;
  char v165;
  uint64_t v166;
  char v167;
  uint64_t v168;
  char v169;
  uint64_t v170;
  char v171;
  uint64_t v172;
  char v173;
  uint64_t v174;
  char v175;
  uint64_t v176;
  char v177;
  uint64_t v178;
  char v179;
  uint64_t v180;
  char v181;
  uint64_t v182;
  char v183;
  uint64_t v184;
  char v185;
  uint64_t v186;
  char v187;
  uint64_t v188;
  char v189;
  uint64_t v190;
  char v191;
  uint64_t v192;
  char v193;
  uint64_t v194;
  char v195;
  uint64_t v196;
  char v197;
  uint64_t v198;
  char v199;
  uint64_t v200;
  char v201;
  uint64_t v202;
  char v203;
  uint64_t v204;
  char v205;
  uint64_t v206;
  char v207;
  uint64_t v208;
  char v209;
  uint64_t v210;
  char v211;
  uint64_t v212;
  char v213;
  uint64_t v214;
  char v215;
  uint64_t v216;
  char v217;
  uint64_t v218;
  char v219;
  uint64_t v220;
  char v221;
  uint64_t v222;
  char v223;
  uint64_t v224;
  char v225;
  uint64_t v226;
  char v227;
  uint64_t v228;
  char v229;
  uint64_t v230;
  char v231;
  uint64_t v232;
  char v233;
  uint64_t v234;
  char v235;
  uint64_t v236;
  char v237;
  uint64_t v238;
  char v239;
  uint64_t v240;
  char v241;
  uint64_t v242;
  char v243;
  uint64_t v244;
  char v245;
  uint64_t v246;
  char v247;
  uint64_t v248;
  char v249;
  uint64_t v250;
  char v251;
  uint64_t v252;
  char v253;
  uint64_t v254;
  char v255;
  uint64_t v256;
  char v257;
  uint64_t v258;
  char v259;
  uint64_t v260;
  char v261;
  uint64_t v262;
  char v263;
  uint64_t v264;
  char v265;
  uint64_t v266;
  char v267;
  uint64_t v268;
  char v269;
  uint64_t v270;
  char v271;
  uint64_t v272;
  char v273;
  uint64_t v274;
  char v275;
  uint64_t v276;
  char v277;
  uint64_t v278;
  char v279;
  uint64_t v280;
  char v281;
  uint64_t v282;
  char v283;
  uint64_t v284;
  char v285;
  uint64_t v286;
  char v287;
  uint64_t v288;
  char v289;
  uint64_t v290;
  char v291;
  uint64_t v292;
  char v293;
  uint64_t v294;
  char v295;
  uint64_t v296;
  char v297;
  uint64_t v298;
  char v299;
  uint64_t v300;
  char v301;
  uint64_t v302;
  char v303;
  uint64_t v304;
  char v305;
  uint64_t v306;
  char v307;
  uint64_t v308;
  char v309;
  uint64_t v310;
  char v311;
  uint64_t v312;
  char v313;
  uint64_t v314;
  char v315;
  uint64_t v316;
  char v317;
  uint64_t v318;
  char v319;
  uint64_t v320;
  char v321;
  uint64_t v322;
  char v323;
  uint64_t v324;
  char v325;
  uint64_t v326;
  char v327;
  uint64_t v328;
  char v329;
  uint64_t v330;
  char v331;
  uint64_t v332;
  char v333;
  uint64_t v334;
  char v335;
  uint64_t v336;
  char v337;
  uint64_t v338;
  char v339;
  uint64_t v340;
  char v341;
  uint64_t v342;
  char v343;
  uint64_t v344;
  char v345;
  uint64_t v346;
  char v347;
  uint64_t v348;
  char v349;
  uint64_t v350;
  char v351;
  uint64_t v352;
  char v353;
  uint64_t v354;
  char v355;
  uint64_t v356;
  char v357;
  uint64_t v358;
  char v359;
  uint64_t v360;
  char v361;
  uint64_t v362;
  char v363;
  uint64_t v364;
  char v365;
  uint64_t v366;
  char v367;
  uint64_t v368;
  char v369;
  uint64_t v370;
  char v371;
  uint64_t v372;
  char v373;
  uint64_t v374;
  char v375;
  uint64_t v376;
  char v377;
  uint64_t v378;
  char v379;
  uint64_t v380;
  char v381;
  uint64_t v382;
  char v383;
  uint64_t v384;
  char v385;
  uint64_t v386;
  char v387;
  uint64_t v388;
  char v389;
  uint64_t v390;
  char v391;
  uint64_t v392;
  char v393;
  uint64_t v394;
  char v395;
  uint64_t v396;
  char v397;
  uint64_t v398;
  char v399;
  uint64_t v400;
  char v401;
  uint64_t v402;
  char v403;
  uint64_t v404;
  char v405;
  uint64_t v406;
  char v407;
  uint64_t v408;
  char v409;
  uint64_t v410;
  char v411;
  uint64_t v412;
  char v413;
  uint64_t v414;
  char v415;
  uint64_t v416;
  char v417;
  uint64_t v418;
  char v419;
  uint64_t v420;
  char v421;
  uint64_t v422;
  char v423;
  uint64_t v424;
  char v425;
  uint64_t v426;
  char v427;
  uint64_t v428;
  char v429;
  uint64_t v430;
  char v431;
  uint64_t v432;
  char v433;
  uint64_t v434;
  char v435;
  uint64_t v436;
  char v437;

  v0 = sub_1CA85B594();
  v2 = v1;
  v3 = type metadata accessor for PhotosChallengeEvaluableAlgorithmWedding();
  sub_1CA38CD58();
  v4 = sub_1CA85B594();
  v6 = v5;
  swift_bridgeObjectRelease();
  if (v4 == v0 && v6 == v2)
    goto LABEL_3;
  v7 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v7 & 1) != 0)
    goto LABEL_5;
  v3 = type metadata accessor for PhotosChallengeEvaluableAlgorithmBirthday();
  sub_1CA38CD58();
  v9 = sub_1CA85B594();
  v11 = v10;
  swift_bridgeObjectRelease();
  if (v9 == v0 && v11 == v2)
    goto LABEL_3;
  v12 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v12 & 1) != 0)
    goto LABEL_5;
  v3 = type metadata accessor for PhotosChallengeEvaluableAlgorithmAnniversary();
  sub_1CA38CD58();
  v13 = sub_1CA85B594();
  v15 = v14;
  swift_bridgeObjectRelease();
  if (v13 == v0 && v15 == v2)
    goto LABEL_3;
  v16 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v16 & 1) != 0)
    goto LABEL_5;
  v3 = type metadata accessor for PhotosChallengeEvaluableCelebration();
  sub_1CA38CD58();
  v17 = sub_1CA85B594();
  v19 = v18;
  swift_bridgeObjectRelease();
  if (v17 == v0 && v19 == v2)
    goto LABEL_3;
  v20 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v20 & 1) != 0)
    goto LABEL_5;
  v3 = type metadata accessor for PhotosChallengeEvaluableAlgorithmConcert();
  sub_1CA38CD58();
  v21 = sub_1CA85B594();
  v23 = v22;
  swift_bridgeObjectRelease();
  if (v21 == v0 && v23 == v2)
    goto LABEL_3;
  v24 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v24 & 1) != 0)
    goto LABEL_5;
  v3 = type metadata accessor for PhotosChallengeEvaluableAlgorithmFestival();
  sub_1CA38CD58();
  v25 = sub_1CA85B594();
  v27 = v26;
  swift_bridgeObjectRelease();
  if (v25 == v0 && v27 == v2)
    goto LABEL_3;
  v28 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v28 & 1) != 0)
    goto LABEL_5;
  v3 = type metadata accessor for PhotosChallengeEvaluableAlgorithmTheater();
  sub_1CA38CD58();
  v29 = sub_1CA85B594();
  v31 = v30;
  swift_bridgeObjectRelease();
  if (v29 == v0 && v31 == v2)
    goto LABEL_3;
  v32 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v32 & 1) != 0)
    goto LABEL_5;
  v3 = type metadata accessor for PhotosChallengeEvaluableAlgorithmDance();
  sub_1CA38CD58();
  v33 = sub_1CA85B594();
  v35 = v34;
  swift_bridgeObjectRelease();
  if (v33 == v0 && v35 == v2)
    goto LABEL_3;
  v36 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v36 & 1) != 0)
    goto LABEL_5;
  v3 = type metadata accessor for PhotosChallengeEvaluableAlgorithmMuseum();
  sub_1CA38CD58();
  v37 = sub_1CA85B594();
  v39 = v38;
  swift_bridgeObjectRelease();
  if (v37 == v0 && v39 == v2)
    goto LABEL_3;
  v40 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v40 & 1) != 0)
    goto LABEL_5;
  v3 = type metadata accessor for PhotosChallengeEvaluableAlgorithmAmusementPark();
  sub_1CA38CD58();
  v41 = sub_1CA85B594();
  v43 = v42;
  swift_bridgeObjectRelease();
  if (v41 == v0 && v43 == v2)
    goto LABEL_3;
  v44 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v44 & 1) != 0)
    goto LABEL_5;
  v3 = type metadata accessor for PhotosChallengeEvaluableAlgorithmPerformance();
  sub_1CA38CD58();
  v45 = sub_1CA85B594();
  v47 = v46;
  swift_bridgeObjectRelease();
  if (v45 == v0 && v47 == v2)
    goto LABEL_3;
  v48 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v48 & 1) != 0)
    goto LABEL_5;
  v3 = type metadata accessor for PhotosChallengeEvaluableAlgorithmHiking();
  sub_1CA38CD58();
  v49 = sub_1CA85B594();
  v51 = v50;
  swift_bridgeObjectRelease();
  if (v49 == v0 && v51 == v2)
    goto LABEL_3;
  v52 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v52 & 1) != 0)
    goto LABEL_5;
  v3 = type metadata accessor for PhotosChallengeEvaluableAlgorithmClimbing();
  sub_1CA38CD58();
  v53 = sub_1CA85B594();
  v55 = v54;
  swift_bridgeObjectRelease();
  if (v53 == v0 && v55 == v2)
    goto LABEL_3;
  v56 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v56 & 1) != 0)
    goto LABEL_5;
  v3 = type metadata accessor for PhotosChallengeEvaluableAlgorithmBeaching();
  sub_1CA38CD58();
  v57 = sub_1CA85B594();
  v59 = v58;
  swift_bridgeObjectRelease();
  if (v57 == v0 && v59 == v2)
    goto LABEL_3;
  v60 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v60 & 1) != 0)
    goto LABEL_5;
  v3 = type metadata accessor for PhotosChallengeEvaluableAlgorithmSportEvent();
  sub_1CA38CD58();
  v61 = sub_1CA85B594();
  v63 = v62;
  swift_bridgeObjectRelease();
  if (v61 == v0 && v63 == v2)
    goto LABEL_3;
  v64 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v64 & 1) != 0)
    goto LABEL_5;
  v3 = type metadata accessor for PhotosChallengeEvaluableAlgorithmWinterSport();
  sub_1CA38CD58();
  v65 = sub_1CA85B594();
  v67 = v66;
  swift_bridgeObjectRelease();
  if (v65 == v0 && v67 == v2)
    goto LABEL_3;
  v68 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v68 & 1) != 0)
    goto LABEL_5;
  v3 = type metadata accessor for PhotosChallengeEvaluableAlgorithmDiving();
  sub_1CA38CD58();
  v69 = sub_1CA85B594();
  v71 = v70;
  swift_bridgeObjectRelease();
  if (v69 == v0 && v71 == v2)
    goto LABEL_3;
  v72 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v72 & 1) != 0)
    goto LABEL_5;
  v3 = type metadata accessor for PhotosChallengeEvaluableAlgorithmLunch();
  sub_1CA38CD58();
  v73 = sub_1CA85B594();
  v75 = v74;
  swift_bridgeObjectRelease();
  if (v73 == v0 && v75 == v2)
    goto LABEL_3;
  v76 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v76 & 1) != 0)
    goto LABEL_5;
  v3 = type metadata accessor for PhotosChallengeEvaluableAlgorithmDinner();
  sub_1CA38CD58();
  v77 = sub_1CA85B594();
  v79 = v78;
  swift_bridgeObjectRelease();
  if (v77 == v0 && v79 == v2)
    goto LABEL_3;
  v80 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v80 & 1) != 0)
    goto LABEL_5;
  v3 = type metadata accessor for PhotosChallengeEvaluableAlgorithmBreakfast();
  sub_1CA38CD58();
  v81 = sub_1CA85B594();
  v83 = v82;
  swift_bridgeObjectRelease();
  if (v81 == v0 && v83 == v2)
    goto LABEL_3;
  v84 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v84 & 1) != 0)
    goto LABEL_5;
  v3 = type metadata accessor for PhotosChallengeEvaluableAlgorithmRestaurant();
  sub_1CA38CD58();
  v85 = sub_1CA85B594();
  v87 = v86;
  swift_bridgeObjectRelease();
  if (v85 == v0 && v87 == v2)
    goto LABEL_3;
  v88 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v88 & 1) != 0)
    goto LABEL_5;
  v3 = type metadata accessor for PhotosChallengeEvaluableAlgorithmNightOut();
  sub_1CA38CD58();
  v89 = sub_1CA85B594();
  v91 = v90;
  swift_bridgeObjectRelease();
  if (v89 == v0 && v91 == v2)
    goto LABEL_3;
  v92 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v92 & 1) != 0)
    goto LABEL_5;
  v3 = type metadata accessor for PhotosChallengeEvaluableAlgorithmEntertainment();
  sub_1CA38CD58();
  v93 = sub_1CA85B594();
  v95 = v94;
  swift_bridgeObjectRelease();
  if (v93 == v0 && v95 == v2)
    goto LABEL_3;
  v96 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v96 & 1) != 0)
    goto LABEL_5;
  v3 = type metadata accessor for PhotosChallengeEvaluableAlgorithmHolidayEvent();
  sub_1CA38CD58();
  v97 = sub_1CA85B594();
  v99 = v98;
  swift_bridgeObjectRelease();
  if (v97 == v0 && v99 == v2)
    goto LABEL_3;
  v100 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v100 & 1) != 0)
    goto LABEL_5;
  v3 = type metadata accessor for PhotosChallengeEvaluableAlgorithmGathering();
  sub_1CA38CD58();
  v101 = sub_1CA85B594();
  v103 = v102;
  swift_bridgeObjectRelease();
  if (v101 == v0 && v103 == v2)
  {
LABEL_3:
    swift_bridgeObjectRelease();
LABEL_5:
    swift_bridgeObjectRelease();
    return v3;
  }
  v104 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v104 & 1) != 0)
    goto LABEL_5;
  if (sub_1CA85B594() == v0 && v105 == v2)
  {
    swift_bridgeObjectRelease();
LABEL_83:
    swift_bridgeObjectRelease();
    return type metadata accessor for PhotosChallengeEvaluableAlgorithmNewYearsDay();
  }
  v106 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v106 & 1) != 0)
    goto LABEL_83;
  if (sub_1CA85B594() == v0 && v108 == v2)
  {
    swift_bridgeObjectRelease();
LABEL_88:
    swift_bridgeObjectRelease();
    return type metadata accessor for PhotosChallengeEvaluableAlgorithmNewYearsEve();
  }
  v109 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v109 & 1) != 0)
    goto LABEL_88;
  if (sub_1CA85B594() == v0 && v110 == v2)
  {
    swift_bridgeObjectRelease();
LABEL_93:
    swift_bridgeObjectRelease();
    return type metadata accessor for PhotosChallengeEvaluableAlgorithmChristmasDay();
  }
  v111 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v111 & 1) != 0)
    goto LABEL_93;
  if (sub_1CA85B594() == v0 && v112 == v2)
  {
    swift_bridgeObjectRelease();
LABEL_98:
    swift_bridgeObjectRelease();
    return type metadata accessor for PhotosChallengeEvaluableAlgorithmValentinesDay();
  }
  v113 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v113 & 1) != 0)
    goto LABEL_98;
  if (sub_1CA85B594() == v0 && v114 == v2)
  {
    swift_bridgeObjectRelease();
LABEL_103:
    swift_bridgeObjectRelease();
    return type metadata accessor for PhotosChallengeEvaluableAlgorithmMothersDay();
  }
  v115 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v115 & 1) != 0)
    goto LABEL_103;
  if (sub_1CA85B594() == v0 && v116 == v2)
  {
    swift_bridgeObjectRelease();
LABEL_108:
    swift_bridgeObjectRelease();
    return type metadata accessor for PhotosChallengeEvaluableAlgorithmFathersDay();
  }
  v117 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v117 & 1) != 0)
    goto LABEL_108;
  if (sub_1CA85B594() == v0 && v118 == v2)
  {
    swift_bridgeObjectRelease();
LABEL_113:
    swift_bridgeObjectRelease();
    return type metadata accessor for PhotosChallengeEvaluableAlgorithmChristmasEve();
  }
  v119 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v119 & 1) != 0)
    goto LABEL_113;
  if (sub_1CA85B594() == v0 && v120 == v2)
  {
    swift_bridgeObjectRelease();
LABEL_118:
    swift_bridgeObjectRelease();
    return type metadata accessor for PhotosChallengeEvaluableAlgorithmEaster();
  }
  v121 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v121 & 1) != 0)
    goto LABEL_118;
  if (sub_1CA85B594() == v0 && v122 == v2)
  {
    swift_bridgeObjectRelease();
LABEL_123:
    swift_bridgeObjectRelease();
    return type metadata accessor for PhotosChallengeEvaluableAlgorithmLabourDay();
  }
  v123 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v123 & 1) != 0)
    goto LABEL_123;
  if (sub_1CA85B594() == v0 && v124 == v2)
  {
    swift_bridgeObjectRelease();
LABEL_128:
    swift_bridgeObjectRelease();
    return type metadata accessor for PhotosChallengeEvaluableAlgorithmHalloween();
  }
  v125 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v125 & 1) != 0)
    goto LABEL_128;
  if (sub_1CA85B594() == v0 && v126 == v2)
  {
    swift_bridgeObjectRelease();
LABEL_133:
    swift_bridgeObjectRelease();
    return type metadata accessor for PhotosChallengeEvaluableAlgorithmWomensDay();
  }
  v127 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v127 & 1) != 0)
    goto LABEL_133;
  if (sub_1CA85B594() == v0 && v128 == v2)
  {
    swift_bridgeObjectRelease();
LABEL_138:
    swift_bridgeObjectRelease();
    return type metadata accessor for PhotosChallengeEvaluableAlgorithmEasterMonday();
  }
  v129 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v129 & 1) != 0)
    goto LABEL_138;
  if (sub_1CA85B594() == v0 && v130 == v2)
  {
    swift_bridgeObjectRelease();
LABEL_143:
    swift_bridgeObjectRelease();
    return type metadata accessor for PhotosChallengeEvaluableAlgorithmSaintNicholas();
  }
  v131 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v131 & 1) != 0)
    goto LABEL_143;
  if (sub_1CA85B594() == v0 && v132 == v2)
  {
    swift_bridgeObjectRelease();
LABEL_148:
    swift_bridgeObjectRelease();
    return type metadata accessor for PhotosChallengeEvaluableAlgorithmAllSaintsDay();
  }
  v133 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v133 & 1) != 0)
    goto LABEL_148;
  if (sub_1CA85B594() == v0 && v134 == v2)
  {
    swift_bridgeObjectRelease();
LABEL_153:
    swift_bridgeObjectRelease();
    return type metadata accessor for PhotosChallengeEvaluableAlgorithmIndependenceDay_US();
  }
  v135 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v135 & 1) != 0)
    goto LABEL_153;
  if (sub_1CA85B594() == v0 && v136 == v2)
  {
    swift_bridgeObjectRelease();
LABEL_158:
    swift_bridgeObjectRelease();
    return type metadata accessor for PhotosChallengeEvaluableAlgorithmIndependenceDay_PL();
  }
  v137 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v137 & 1) != 0)
    goto LABEL_158;
  if (sub_1CA85B594() == v0 && v138 == v2)
  {
    swift_bridgeObjectRelease();
LABEL_163:
    swift_bridgeObjectRelease();
    return type metadata accessor for PhotosChallengeEvaluableAlgorithmIndependenceDay_LT();
  }
  v139 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v139 & 1) != 0)
    goto LABEL_163;
  if (sub_1CA85B594() == v0 && v140 == v2)
  {
    swift_bridgeObjectRelease();
LABEL_168:
    swift_bridgeObjectRelease();
    return type metadata accessor for PhotosChallengeEvaluableAlgorithmIndependenceDay_HR();
  }
  v141 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v141 & 1) != 0)
    goto LABEL_168;
  if (sub_1CA85B594() == v0 && v142 == v2)
  {
    swift_bridgeObjectRelease();
LABEL_173:
    swift_bridgeObjectRelease();
    return type metadata accessor for PhotosChallengeEvaluableAlgorithmIndependenceDay_FI();
  }
  v143 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v143 & 1) != 0)
    goto LABEL_173;
  if (sub_1CA85B594() == v0 && v144 == v2)
  {
    swift_bridgeObjectRelease();
LABEL_178:
    swift_bridgeObjectRelease();
    return type metadata accessor for PhotosChallengeEvaluableAlgorithmIndependenceDay_EE();
  }
  v145 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v145 & 1) != 0)
    goto LABEL_178;
  if (sub_1CA85B594() == v0 && v146 == v2)
  {
    swift_bridgeObjectRelease();
LABEL_183:
    swift_bridgeObjectRelease();
    return type metadata accessor for PhotosChallengeEvaluableAlgorithmIndependenceDay_BR();
  }
  v147 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v147 & 1) != 0)
    goto LABEL_183;
  if (sub_1CA85B594() == v0 && v148 == v2)
  {
    swift_bridgeObjectRelease();
LABEL_188:
    swift_bridgeObjectRelease();
    return type metadata accessor for PhotosChallengeEvaluableAlgorithmIndependenceDay_BG();
  }
  v149 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v149 & 1) != 0)
    goto LABEL_188;
  if (sub_1CA85B594() == v0 && v150 == v2)
  {
    swift_bridgeObjectRelease();
LABEL_193:
    swift_bridgeObjectRelease();
    return type metadata accessor for PhotosChallengeEvaluableAlgorithmIndependenceDay_IN();
  }
  v151 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v151 & 1) != 0)
    goto LABEL_193;
  if (sub_1CA85B594() == v0 && v152 == v2)
  {
    swift_bridgeObjectRelease();
LABEL_198:
    swift_bridgeObjectRelease();
    return type metadata accessor for PhotosChallengeEvaluableAlgorithmCarnival();
  }
  v153 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v153 & 1) != 0)
    goto LABEL_198;
  if (sub_1CA85B594() == v0 && v154 == v2)
  {
    swift_bridgeObjectRelease();
LABEL_203:
    swift_bridgeObjectRelease();
    return type metadata accessor for PhotosChallengeEvaluableAlgorithmNationalDay_AE();
  }
  v155 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v155 & 1) != 0)
    goto LABEL_203;
  if (sub_1CA85B594() == v0 && v156 == v2)
  {
    swift_bridgeObjectRelease();
LABEL_208:
    swift_bridgeObjectRelease();
    return type metadata accessor for PhotosChallengeEvaluableAlgorithmNationalDay_AT();
  }
  v157 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v157 & 1) != 0)
    goto LABEL_208;
  if (sub_1CA85B594() == v0 && v158 == v2)
  {
    swift_bridgeObjectRelease();
LABEL_213:
    swift_bridgeObjectRelease();
    return type metadata accessor for PhotosChallengeEvaluableAlgorithmNationalDay_BE();
  }
  v159 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v159 & 1) != 0)
    goto LABEL_213;
  if (sub_1CA85B594() == v0 && v160 == v2)
  {
    swift_bridgeObjectRelease();
LABEL_218:
    swift_bridgeObjectRelease();
    return type metadata accessor for PhotosChallengeEvaluableAlgorithmNationalDay_CH();
  }
  v161 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v161 & 1) != 0)
    goto LABEL_218;
  if (sub_1CA85B594() == v0 && v162 == v2)
  {
    swift_bridgeObjectRelease();
LABEL_223:
    swift_bridgeObjectRelease();
    return type metadata accessor for PhotosChallengeEvaluableAlgorithmNationalDay_CN();
  }
  v163 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v163 & 1) != 0)
    goto LABEL_223;
  if (sub_1CA85B594() == v0 && v164 == v2)
  {
    swift_bridgeObjectRelease();
LABEL_228:
    swift_bridgeObjectRelease();
    return type metadata accessor for PhotosChallengeEvaluableAlgorithmNationalDay_LU();
  }
  v165 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v165 & 1) != 0)
    goto LABEL_228;
  if (sub_1CA85B594() == v0 && v166 == v2)
  {
    swift_bridgeObjectRelease();
LABEL_233:
    swift_bridgeObjectRelease();
    return type metadata accessor for PhotosChallengeEvaluableAlgorithmNationalDay_MY();
  }
  v167 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v167 & 1) != 0)
    goto LABEL_233;
  if (sub_1CA85B594() == v0 && v168 == v2)
  {
    swift_bridgeObjectRelease();
LABEL_238:
    swift_bridgeObjectRelease();
    return type metadata accessor for PhotosChallengeEvaluableAlgorithmNationalDay_SA();
  }
  v169 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v169 & 1) != 0)
    goto LABEL_238;
  if (sub_1CA85B594() == v0 && v170 == v2)
  {
    swift_bridgeObjectRelease();
LABEL_243:
    swift_bridgeObjectRelease();
    return type metadata accessor for PhotosChallengeEvaluableAlgorithmNationalDay_SG();
  }
  v171 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v171 & 1) != 0)
    goto LABEL_243;
  if (sub_1CA85B594() == v0 && v172 == v2)
  {
    swift_bridgeObjectRelease();
LABEL_248:
    swift_bridgeObjectRelease();
    return type metadata accessor for PhotosChallengeEvaluableAlgorithmNationalDay_TH();
  }
  v173 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v173 & 1) != 0)
    goto LABEL_248;
  if (sub_1CA85B594() == v0 && v174 == v2)
  {
    swift_bridgeObjectRelease();
LABEL_253:
    swift_bridgeObjectRelease();
    return type metadata accessor for PhotosChallengeEvaluableAlgorithmNationalDay_TW();
  }
  v175 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v175 & 1) != 0)
    goto LABEL_253;
  if (sub_1CA85B594() == v0 && v176 == v2)
  {
    swift_bridgeObjectRelease();
LABEL_258:
    swift_bridgeObjectRelease();
    return type metadata accessor for PhotosChallengeEvaluableAlgorithmStStephensDay();
  }
  v177 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v177 & 1) != 0)
    goto LABEL_258;
  if (sub_1CA85B594() == v0 && v178 == v2)
  {
    swift_bridgeObjectRelease();
LABEL_263:
    swift_bridgeObjectRelease();
    return type metadata accessor for PhotosChallengeEvaluableAlgorithmConstitutionDay();
  }
  v179 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v179 & 1) != 0)
    goto LABEL_263;
  if (sub_1CA85B594() == v0 && v180 == v2)
  {
    swift_bridgeObjectRelease();
LABEL_268:
    swift_bridgeObjectRelease();
    return type metadata accessor for PhotosChallengeEvaluableAlgorithmAssumption();
  }
  v181 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v181 & 1) != 0)
    goto LABEL_268;
  if (sub_1CA85B594() == v0 && v182 == v2)
  {
    swift_bridgeObjectRelease();
LABEL_273:
    swift_bridgeObjectRelease();
    return type metadata accessor for PhotosChallengeEvaluableAlgorithmChildrensDay();
  }
  v183 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v183 & 1) != 0)
    goto LABEL_273;
  if (sub_1CA85B594() == v0 && v184 == v2)
  {
    swift_bridgeObjectRelease();
LABEL_278:
    swift_bridgeObjectRelease();
    return type metadata accessor for PhotosChallengeEvaluableAlgorithmAprilFoolsDay();
  }
  v185 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v185 & 1) != 0)
    goto LABEL_278;
  if (sub_1CA85B594() == v0 && v186 == v2)
  {
    swift_bridgeObjectRelease();
LABEL_283:
    swift_bridgeObjectRelease();
    return type metadata accessor for PhotosChallengeEvaluableAlgorithmStPatricksDay();
  }
  v187 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v187 & 1) != 0)
    goto LABEL_283;
  if (sub_1CA85B594() == v0 && v188 == v2)
  {
    swift_bridgeObjectRelease();
LABEL_288:
    swift_bridgeObjectRelease();
    return type metadata accessor for PhotosChallengeEvaluableAlgorithmMusicDay();
  }
  v189 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v189 & 1) != 0)
    goto LABEL_288;
  if (sub_1CA85B594() == v0 && v190 == v2)
  {
    swift_bridgeObjectRelease();
LABEL_293:
    swift_bridgeObjectRelease();
    return type metadata accessor for PhotosChallengeEvaluableAlgorithmLiberationDay();
  }
  v191 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v191 & 1) != 0)
    goto LABEL_293;
  if (sub_1CA85B594() == v0 && v192 == v2)
  {
    swift_bridgeObjectRelease();
LABEL_298:
    swift_bridgeObjectRelease();
    return type metadata accessor for PhotosChallengeEvaluableAlgorithmSpringEquinox();
  }
  v193 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v193 & 1) != 0)
    goto LABEL_298;
  if (sub_1CA85B594() == v0 && v194 == v2)
  {
    swift_bridgeObjectRelease();
LABEL_303:
    swift_bridgeObjectRelease();
    return type metadata accessor for PhotosChallengeEvaluableAlgorithm2ndChristmasDay();
  }
  v195 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v195 & 1) != 0)
    goto LABEL_303;
  if (sub_1CA85B594() == v0 && v196 == v2)
  {
    swift_bridgeObjectRelease();
LABEL_308:
    swift_bridgeObjectRelease();
    return type metadata accessor for PhotosChallengeEvaluableAlgorithmMidsummerDay();
  }
  v197 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v197 & 1) != 0)
    goto LABEL_308;
  if (sub_1CA85B594() == v0 && v198 == v2)
  {
    swift_bridgeObjectRelease();
LABEL_313:
    swift_bridgeObjectRelease();
    return type metadata accessor for PhotosChallengeEvaluableAlgorithmMidsummerEve();
  }
  v199 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v199 & 1) != 0)
    goto LABEL_313;
  if (sub_1CA85B594() == v0 && v200 == v2)
  {
    swift_bridgeObjectRelease();
LABEL_318:
    swift_bridgeObjectRelease();
    return type metadata accessor for PhotosChallengeEvaluableAlgorithmRepublicDay();
  }
  v201 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v201 & 1) != 0)
    goto LABEL_318;
  if (sub_1CA85B594() == v0 && v202 == v2)
  {
    swift_bridgeObjectRelease();
LABEL_323:
    swift_bridgeObjectRelease();
    return type metadata accessor for PhotosChallengeEvaluableAlgorithmLaborDay();
  }
  v203 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v203 & 1) != 0)
    goto LABEL_323;
  if (sub_1CA85B594() == v0 && v204 == v2)
  {
    swift_bridgeObjectRelease();
LABEL_328:
    swift_bridgeObjectRelease();
    return type metadata accessor for PhotosChallengeEvaluableAlgorithmAscension();
  }
  v205 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v205 & 1) != 0)
    goto LABEL_328;
  if (sub_1CA85B594() == v0 && v206 == v2)
  {
    swift_bridgeObjectRelease();
LABEL_333:
    swift_bridgeObjectRelease();
    return type metadata accessor for PhotosChallengeEvaluableAlgorithmRemembranceDay();
  }
  v207 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v207 & 1) != 0)
    goto LABEL_333;
  if (sub_1CA85B594() == v0 && v208 == v2)
  {
    swift_bridgeObjectRelease();
LABEL_338:
    swift_bridgeObjectRelease();
    return type metadata accessor for PhotosChallengeEvaluableAlgorithmEmperorsBirthday();
  }
  v209 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v209 & 1) != 0)
    goto LABEL_338;
  if (sub_1CA85B594() == v0 && v210 == v2)
  {
    swift_bridgeObjectRelease();
LABEL_343:
    swift_bridgeObjectRelease();
    return type metadata accessor for PhotosChallengeEvaluableAlgorithmLaborThanksgivingDay();
  }
  v211 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v211 & 1) != 0)
    goto LABEL_343;
  if (sub_1CA85B594() == v0 && v212 == v2)
  {
    swift_bridgeObjectRelease();
LABEL_348:
    swift_bridgeObjectRelease();
    return type metadata accessor for PhotosChallengeEvaluableAlgorithmCultureDay();
  }
  v213 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v213 & 1) != 0)
    goto LABEL_348;
  if (sub_1CA85B594() == v0 && v214 == v2)
  {
    swift_bridgeObjectRelease();
LABEL_353:
    swift_bridgeObjectRelease();
    return type metadata accessor for PhotosChallengeEvaluableAlgorithmSportsDay();
  }
  v215 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v215 & 1) != 0)
    goto LABEL_353;
  if (sub_1CA85B594() == v0 && v216 == v2)
  {
    swift_bridgeObjectRelease();
LABEL_358:
    swift_bridgeObjectRelease();
    return type metadata accessor for PhotosChallengeEvaluableAlgorithmAutumnalEquinox();
  }
  v217 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v217 & 1) != 0)
    goto LABEL_358;
  if (sub_1CA85B594() == v0 && v218 == v2)
  {
    swift_bridgeObjectRelease();
LABEL_363:
    swift_bridgeObjectRelease();
    return type metadata accessor for PhotosChallengeEvaluableAlgorithmBuddhasBirthday();
  }
  v219 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v219 & 1) != 0)
    goto LABEL_363;
  if (sub_1CA85B594() == v0 && v220 == v2)
  {
    swift_bridgeObjectRelease();
LABEL_368:
    swift_bridgeObjectRelease();
    return type metadata accessor for PhotosChallengeEvaluableAlgorithmStatehoodDay();
  }
  v221 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v221 & 1) != 0)
    goto LABEL_368;
  if (sub_1CA85B594() == v0 && v222 == v2)
  {
    swift_bridgeObjectRelease();
LABEL_373:
    swift_bridgeObjectRelease();
    return type metadata accessor for PhotosChallengeEvaluableAlgorithmANZACDay();
  }
  v223 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v223 & 1) != 0)
    goto LABEL_373;
  if (sub_1CA85B594() == v0 && v224 == v2)
  {
    swift_bridgeObjectRelease();
LABEL_378:
    swift_bridgeObjectRelease();
    return type metadata accessor for PhotosChallengeEvaluableAlgorithmQueensBirthday();
  }
  v225 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v225 & 1) != 0)
    goto LABEL_378;
  if (sub_1CA85B594() == v0 && v226 == v2)
  {
    swift_bridgeObjectRelease();
LABEL_383:
    swift_bridgeObjectRelease();
    return type metadata accessor for PhotosChallengeEvaluableAlgorithmCorpusChristi();
  }
  v227 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v227 & 1) != 0)
    goto LABEL_383;
  if (sub_1CA85B594() == v0 && v228 == v2)
  {
    swift_bridgeObjectRelease();
LABEL_388:
    swift_bridgeObjectRelease();
    return type metadata accessor for PhotosChallengeEvaluableAlgorithmEpiphany();
  }
  v229 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v229 & 1) != 0)
    goto LABEL_388;
  if (sub_1CA85B594() == v0 && v230 == v2)
  {
    swift_bridgeObjectRelease();
LABEL_393:
    swift_bridgeObjectRelease();
    return type metadata accessor for PhotosChallengeEvaluableAlgorithmStAndrewsDay();
  }
  v231 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v231 & 1) != 0)
    goto LABEL_393;
  if (sub_1CA85B594() == v0 && v232 == v2)
  {
    swift_bridgeObjectRelease();
LABEL_398:
    swift_bridgeObjectRelease();
    return type metadata accessor for PhotosChallengeEvaluableAlgorithmVictoryDay();
  }
  v233 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v233 & 1) != 0)
    goto LABEL_398;
  if (sub_1CA85B594() == v0 && v234 == v2)
  {
    swift_bridgeObjectRelease();
LABEL_403:
    swift_bridgeObjectRelease();
    return type metadata accessor for PhotosChallengeEvaluableAlgorithmMayDay();
  }
  v235 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v235 & 1) != 0)
    goto LABEL_403;
  if (sub_1CA85B594() == v0 && v236 == v2)
  {
    swift_bridgeObjectRelease();
LABEL_408:
    swift_bridgeObjectRelease();
    return type metadata accessor for PhotosChallengeEvaluableAlgorithmLunarNewYearsDay();
  }
  v237 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v237 & 1) != 0)
    goto LABEL_408;
  if (sub_1CA85B594() == v0 && v238 == v2)
  {
    swift_bridgeObjectRelease();
LABEL_413:
    swift_bridgeObjectRelease();
    return type metadata accessor for PhotosChallengeEvaluableAlgorithmLunarNewYearsEve();
  }
  v239 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v239 & 1) != 0)
    goto LABEL_413;
  if (sub_1CA85B594() == v0 && v240 == v2)
  {
    swift_bridgeObjectRelease();
LABEL_418:
    swift_bridgeObjectRelease();
    return type metadata accessor for PhotosChallengeEvaluableAlgorithmMidAutumnFestival();
  }
  v241 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v241 & 1) != 0)
    goto LABEL_418;
  if (sub_1CA85B594() == v0 && v242 == v2)
  {
    swift_bridgeObjectRelease();
LABEL_423:
    swift_bridgeObjectRelease();
    return type metadata accessor for PhotosChallengeEvaluableAlgorithmDragonBoatFestival();
  }
  v243 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v243 & 1) != 0)
    goto LABEL_423;
  if (sub_1CA85B594() == v0 && v244 == v2)
  {
    swift_bridgeObjectRelease();
LABEL_428:
    swift_bridgeObjectRelease();
    return type metadata accessor for PhotosChallengeEvaluableAlgorithmLanternFestival();
  }
  v245 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v245 & 1) != 0)
    goto LABEL_428;
  if (sub_1CA85B594() == v0 && v246 == v2)
  {
    swift_bridgeObjectRelease();
LABEL_433:
    swift_bridgeObjectRelease();
    return type metadata accessor for PhotosChallengeEvaluableAlgorithmDoubleNinthFestival();
  }
  v247 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v247 & 1) != 0)
    goto LABEL_433;
  if (sub_1CA85B594() == v0 && v248 == v2)
  {
    swift_bridgeObjectRelease();
LABEL_438:
    swift_bridgeObjectRelease();
    return type metadata accessor for PhotosChallengeEvaluableAlgorithmYouthDay();
  }
  v249 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v249 & 1) != 0)
    goto LABEL_438;
  if (sub_1CA85B594() == v0 && v250 == v2)
  {
    swift_bridgeObjectRelease();
LABEL_443:
    swift_bridgeObjectRelease();
    return type metadata accessor for PhotosChallengeEvaluableAlgorithmNationalCatDay();
  }
  v251 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v251 & 1) != 0)
    goto LABEL_443;
  if (sub_1CA85B594() == v0 && v252 == v2)
  {
    swift_bridgeObjectRelease();
LABEL_448:
    swift_bridgeObjectRelease();
    return type metadata accessor for PhotosChallengeEvaluableAlgorithmNationalDogDay();
  }
  v253 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v253 & 1) != 0)
    goto LABEL_448;
  if (sub_1CA85B594() == v0 && v254 == v2)
  {
    swift_bridgeObjectRelease();
LABEL_453:
    swift_bridgeObjectRelease();
    return type metadata accessor for PhotosChallengeEvaluableAlgorithmThanksgivingUS();
  }
  v255 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v255 & 1) != 0)
    goto LABEL_453;
  if (sub_1CA85B594() == v0 && v256 == v2)
  {
    swift_bridgeObjectRelease();
LABEL_458:
    swift_bridgeObjectRelease();
    return type metadata accessor for PhotosChallengeEvaluableAlgorithmThanksgivingCA();
  }
  v257 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v257 & 1) != 0)
    goto LABEL_458;
  if (sub_1CA85B594() == v0 && v258 == v2)
  {
    swift_bridgeObjectRelease();
LABEL_463:
    swift_bridgeObjectRelease();
    return type metadata accessor for PhotosChallengeEvaluableAlgorithmEarthDay();
  }
  v259 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v259 & 1) != 0)
    goto LABEL_463;
  if (sub_1CA85B594() == v0 && v260 == v2)
  {
    swift_bridgeObjectRelease();
LABEL_468:
    swift_bridgeObjectRelease();
    return type metadata accessor for PhotosChallengeEvaluableAlgorithmStMartinsDay();
  }
  v261 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v261 & 1) != 0)
    goto LABEL_468;
  if (sub_1CA85B594() == v0 && v262 == v2)
  {
    swift_bridgeObjectRelease();
LABEL_473:
    swift_bridgeObjectRelease();
    return type metadata accessor for PhotosChallengeEvaluableAlgorithmShroveTuesday();
  }
  v263 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v263 & 1) != 0)
    goto LABEL_473;
  if (sub_1CA85B594() == v0 && v264 == v2)
  {
    swift_bridgeObjectRelease();
LABEL_478:
    swift_bridgeObjectRelease();
    return type metadata accessor for PhotosChallengeEvaluableAlgorithmRoseMonday();
  }
  v265 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v265 & 1) != 0)
    goto LABEL_478;
  if (sub_1CA85B594() == v0 && v266 == v2)
  {
    swift_bridgeObjectRelease();
LABEL_483:
    swift_bridgeObjectRelease();
    return type metadata accessor for PhotosChallengeEvaluableAlgorithmMelbourneCup();
  }
  v267 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v267 & 1) != 0)
    goto LABEL_483;
  if (sub_1CA85B594() == v0 && v268 == v2)
  {
    swift_bridgeObjectRelease();
LABEL_488:
    swift_bridgeObjectRelease();
    return type metadata accessor for PhotosChallengeEvaluableAlgorithmAustraliaDay();
  }
  v269 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v269 & 1) != 0)
    goto LABEL_488;
  if (sub_1CA85B594() == v0 && v270 == v2)
  {
    swift_bridgeObjectRelease();
LABEL_493:
    swift_bridgeObjectRelease();
    return type metadata accessor for PhotosChallengeEvaluableAlgorithmDayoftheGermanspeakingCommunity();
  }
  v271 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v271 & 1) != 0)
    goto LABEL_493;
  if (sub_1CA85B594() == v0 && v272 == v2)
  {
    swift_bridgeObjectRelease();
LABEL_498:
    swift_bridgeObjectRelease();
    return type metadata accessor for PhotosChallengeEvaluableAlgorithmFrenchCommunityDay();
  }
  v273 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v273 & 1) != 0)
    goto LABEL_498;
  if (sub_1CA85B594() == v0 && v274 == v2)
  {
    swift_bridgeObjectRelease();
LABEL_503:
    swift_bridgeObjectRelease();
    return type metadata accessor for PhotosChallengeEvaluableAlgorithmFlemishCommunityDay();
  }
  v275 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v275 & 1) != 0)
    goto LABEL_503;
  if (sub_1CA85B594() == v0 && v276 == v2)
  {
    swift_bridgeObjectRelease();
LABEL_508:
    swift_bridgeObjectRelease();
    return type metadata accessor for PhotosChallengeEvaluableAlgorithmRevivalLeadersDay();
  }
  v277 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v277 & 1) != 0)
    goto LABEL_508;
  if (sub_1CA85B594() == v0 && v278 == v2)
  {
    swift_bridgeObjectRelease();
LABEL_513:
    swift_bridgeObjectRelease();
    return type metadata accessor for PhotosChallengeEvaluableAlgorithmCultureandLiteracyDay();
  }
  v279 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v279 & 1) != 0)
    goto LABEL_513;
  if (sub_1CA85B594() == v0 && v280 == v2)
  {
    swift_bridgeObjectRelease();
LABEL_518:
    swift_bridgeObjectRelease();
    return type metadata accessor for PhotosChallengeEvaluableAlgorithmBabaMarta();
  }
  v281 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v281 & 1) != 0)
    goto LABEL_518;
  if (sub_1CA85B594() == v0 && v282 == v2)
  {
    swift_bridgeObjectRelease();
LABEL_523:
    swift_bridgeObjectRelease();
    return type metadata accessor for PhotosChallengeEvaluableAlgorithmUnificationDay();
  }
  v283 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v283 & 1) != 0)
    goto LABEL_523;
  if (sub_1CA85B594() == v0 && v284 == v2)
  {
    swift_bridgeObjectRelease();
LABEL_528:
    swift_bridgeObjectRelease();
    return type metadata accessor for PhotosChallengeEvaluableAlgorithmCanadaDay();
  }
  v285 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v285 & 1) != 0)
    goto LABEL_528;
  if (sub_1CA85B594() == v0 && v286 == v2)
  {
    swift_bridgeObjectRelease();
LABEL_533:
    swift_bridgeObjectRelease();
    return type metadata accessor for PhotosChallengeEvaluableAlgorithmSaintJeanBaptisteDay();
  }
  v287 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v287 & 1) != 0)
    goto LABEL_533;
  if (sub_1CA85B594() == v0 && v288 == v2)
  {
    swift_bridgeObjectRelease();
LABEL_538:
    swift_bridgeObjectRelease();
    return type metadata accessor for PhotosChallengeEvaluableAlgorithmVictoriaDay();
  }
  v289 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v289 & 1) != 0)
    goto LABEL_538;
  if (sub_1CA85B594() == v0 && v290 == v2)
  {
    swift_bridgeObjectRelease();
LABEL_543:
    swift_bridgeObjectRelease();
    return type metadata accessor for PhotosChallengeEvaluableAlgorithmStNikolaus();
  }
  v291 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v291 & 1) != 0)
    goto LABEL_543;
  if (sub_1CA85B594() == v0 && v292 == v2)
  {
    swift_bridgeObjectRelease();
LABEL_548:
    swift_bridgeObjectRelease();
    return type metadata accessor for PhotosChallengeEvaluableAlgorithmChineseValentinesDay();
  }
  v293 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v293 & 1) != 0)
    goto LABEL_548;
  if (sub_1CA85B594() == v0 && v294 == v2)
  {
    swift_bridgeObjectRelease();
LABEL_553:
    swift_bridgeObjectRelease();
    return type metadata accessor for PhotosChallengeEvaluableAlgorithmTombSweepingDay();
  }
  v295 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v295 & 1) != 0)
    goto LABEL_553;
  if (sub_1CA85B594() == v0 && v296 == v2)
  {
    swift_bridgeObjectRelease();
LABEL_558:
    swift_bridgeObjectRelease();
    return type metadata accessor for PhotosChallengeEvaluableAlgorithmIndependentCzechoslovakStateDay();
  }
  v297 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v297 & 1) != 0)
    goto LABEL_558;
  if (sub_1CA85B594() == v0 && v298 == v2)
  {
    swift_bridgeObjectRelease();
LABEL_563:
    swift_bridgeObjectRelease();
    return type metadata accessor for PhotosChallengeEvaluableAlgorithmGermanUnityDay();
  }
  v299 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v299 & 1) != 0)
    goto LABEL_563;
  if (sub_1CA85B594() == v0 && v300 == v2)
  {
    swift_bridgeObjectRelease();
LABEL_568:
    swift_bridgeObjectRelease();
    return type metadata accessor for PhotosChallengeEvaluableAlgorithmTeachersDay();
  }
  v301 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v301 & 1) != 0)
    goto LABEL_568;
  if (sub_1CA85B594() == v0 && v302 == v2)
  {
    swift_bridgeObjectRelease();
LABEL_573:
    swift_bridgeObjectRelease();
    return type metadata accessor for PhotosChallengeEvaluableAlgorithmTheWalpurgisNight();
  }
  v303 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v303 & 1) != 0)
    goto LABEL_573;
  if (sub_1CA85B594() == v0 && v304 == v2)
  {
    swift_bridgeObjectRelease();
LABEL_578:
    swift_bridgeObjectRelease();
    return type metadata accessor for PhotosChallengeEvaluableAlgorithmGrandparentsDay();
  }
  v305 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v305 & 1) != 0)
    goto LABEL_578;
  if (sub_1CA85B594() == v0 && v306 == v2)
  {
    swift_bridgeObjectRelease();
LABEL_583:
    swift_bridgeObjectRelease();
    return type metadata accessor for PhotosChallengeEvaluableAlgorithmRestorationofIndependence();
  }
  v307 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v307 & 1) != 0)
    goto LABEL_583;
  if (sub_1CA85B594() == v0 && v308 == v2)
  {
    swift_bridgeObjectRelease();
LABEL_588:
    swift_bridgeObjectRelease();
    return type metadata accessor for PhotosChallengeEvaluableAlgorithmSpringDay();
  }
  v309 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v309 & 1) != 0)
    goto LABEL_588;
  if (sub_1CA85B594() == v0 && v310 == v2)
  {
    swift_bridgeObjectRelease();
LABEL_593:
    swift_bridgeObjectRelease();
    return type metadata accessor for PhotosChallengeEvaluableAlgorithmStGeorge();
  }
  v311 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v311 & 1) != 0)
    goto LABEL_593;
  if (sub_1CA85B594() == v0 && v312 == v2)
  {
    swift_bridgeObjectRelease();
LABEL_598:
    swift_bridgeObjectRelease();
    return type metadata accessor for PhotosChallengeEvaluableAlgorithmSpanishnessDay();
  }
  v313 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v313 & 1) != 0)
    goto LABEL_598;
  if (sub_1CA85B594() == v0 && v314 == v2)
  {
    swift_bridgeObjectRelease();
LABEL_603:
    swift_bridgeObjectRelease();
    return type metadata accessor for PhotosChallengeEvaluableAlgorithmBastilleDay();
  }
  v315 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v315 & 1) != 0)
    goto LABEL_603;
  if (sub_1CA85B594() == v0 && v316 == v2)
  {
    swift_bridgeObjectRelease();
LABEL_608:
    swift_bridgeObjectRelease();
    return type metadata accessor for PhotosChallengeEvaluableAlgorithmDayofGrandmothers();
  }
  v317 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v317 & 1) != 0)
    goto LABEL_608;
  if (sub_1CA85B594() == v0 && v318 == v2)
  {
    swift_bridgeObjectRelease();
LABEL_613:
    swift_bridgeObjectRelease();
    return type metadata accessor for PhotosChallengeEvaluableAlgorithmAshWednesday();
  }
  v319 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v319 & 1) != 0)
    goto LABEL_613;
  if (sub_1CA85B594() == v0 && v320 == v2)
  {
    swift_bridgeObjectRelease();
LABEL_618:
    swift_bridgeObjectRelease();
    return type metadata accessor for PhotosChallengeEvaluableAlgorithmGuyFawkesNight();
  }
  v321 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v321 & 1) != 0)
    goto LABEL_618;
  if (sub_1CA85B594() == v0 && v322 == v2)
  {
    swift_bridgeObjectRelease();
LABEL_623:
    swift_bridgeObjectRelease();
    return type metadata accessor for PhotosChallengeEvaluableAlgorithmPolytechneio();
  }
  v323 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v323 & 1) != 0)
    goto LABEL_623;
  if (sub_1CA85B594() == v0 && v324 == v2)
  {
    swift_bridgeObjectRelease();
LABEL_628:
    swift_bridgeObjectRelease();
    return type metadata accessor for PhotosChallengeEvaluableAlgorithmAnnunciation();
  }
  v325 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v325 & 1) != 0)
    goto LABEL_628;
  if (sub_1CA85B594() == v0 && v326 == v2)
  {
    swift_bridgeObjectRelease();
LABEL_633:
    swift_bridgeObjectRelease();
    return type metadata accessor for PhotosChallengeEvaluableAlgorithmOchiDay();
  }
  v327 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v327 & 1) != 0)
    goto LABEL_633;
  if (sub_1CA85B594() == v0 && v328 == v2)
  {
    swift_bridgeObjectRelease();
LABEL_638:
    swift_bridgeObjectRelease();
    return type metadata accessor for PhotosChallengeEvaluableAlgorithmOrthodoxEasterPascha();
  }
  v329 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v329 & 1) != 0)
    goto LABEL_638;
  if (sub_1CA85B594() == v0 && v330 == v2)
  {
    swift_bridgeObjectRelease();
LABEL_643:
    swift_bridgeObjectRelease();
    return type metadata accessor for PhotosChallengeEvaluableAlgorithmCleanMonday();
  }
  v331 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v331 & 1) != 0)
    goto LABEL_643;
  if (sub_1CA85B594() == v0 && v332 == v2)
  {
    swift_bridgeObjectRelease();
LABEL_648:
    swift_bridgeObjectRelease();
    return type metadata accessor for PhotosChallengeEvaluableAlgorithmHomelandThanksgivingDay();
  }
  v333 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v333 & 1) != 0)
    goto LABEL_648;
  if (sub_1CA85B594() == v0 && v334 == v2)
  {
    swift_bridgeObjectRelease();
LABEL_653:
    swift_bridgeObjectRelease();
    return type metadata accessor for PhotosChallengeEvaluableAlgorithmAnniversaryoftheRevolution184849();
  }
  v335 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v335 & 1) != 0)
    goto LABEL_653;
  if (sub_1CA85B594() == v0 && v336 == v2)
  {
    swift_bridgeObjectRelease();
LABEL_658:
    swift_bridgeObjectRelease();
    return type metadata accessor for PhotosChallengeEvaluableAlgorithmEmperorsBirthdayEmperorNaruhito();
  }
  v337 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v337 & 1) != 0)
    goto LABEL_658;
  if (sub_1CA85B594() == v0 && v338 == v2)
  {
    swift_bridgeObjectRelease();
LABEL_663:
    swift_bridgeObjectRelease();
    return type metadata accessor for PhotosChallengeEvaluableAlgorithmEmperorsBirthdayEmperorEmeritusAkihito();
  }
  v339 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v339 & 1) != 0)
    goto LABEL_663;
  if (sub_1CA85B594() == v0 && v340 == v2)
  {
    swift_bridgeObjectRelease();
LABEL_668:
    swift_bridgeObjectRelease();
    return type metadata accessor for PhotosChallengeEvaluableAlgorithmHealthandSportsDay();
  }
  v341 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v341 & 1) != 0)
    goto LABEL_668;
  if (sub_1CA85B594() == v0 && v342 == v2)
  {
    swift_bridgeObjectRelease();
LABEL_673:
    swift_bridgeObjectRelease();
    return type metadata accessor for PhotosChallengeEvaluableAlgorithmShichigosan();
  }
  v343 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v343 & 1) != 0)
    goto LABEL_673;
  if (sub_1CA85B594() == v0 && v344 == v2)
  {
    swift_bridgeObjectRelease();
LABEL_678:
    swift_bridgeObjectRelease();
    return type metadata accessor for PhotosChallengeEvaluableAlgorithmRespectfortheAgedDay();
  }
  v345 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v345 & 1) != 0)
    goto LABEL_678;
  if (sub_1CA85B594() == v0 && v346 == v2)
  {
    swift_bridgeObjectRelease();
LABEL_683:
    swift_bridgeObjectRelease();
    return type metadata accessor for PhotosChallengeEvaluableAlgorithmObon();
  }
  v347 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v347 & 1) != 0)
    goto LABEL_683;
  if (sub_1CA85B594() == v0 && v348 == v2)
  {
    swift_bridgeObjectRelease();
LABEL_688:
    swift_bridgeObjectRelease();
    return type metadata accessor for PhotosChallengeEvaluableAlgorithmMountainDay();
  }
  v349 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v349 & 1) != 0)
    goto LABEL_688;
  if (sub_1CA85B594() == v0 && v350 == v2)
  {
    swift_bridgeObjectRelease();
LABEL_693:
    swift_bridgeObjectRelease();
    return type metadata accessor for PhotosChallengeEvaluableAlgorithmMarineDay();
  }
  v351 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v351 & 1) != 0)
    goto LABEL_693;
  if (sub_1CA85B594() == v0 && v352 == v2)
  {
    swift_bridgeObjectRelease();
LABEL_698:
    swift_bridgeObjectRelease();
    return type metadata accessor for PhotosChallengeEvaluableAlgorithmTanabataStarFestival();
  }
  v353 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v353 & 1) != 0)
    goto LABEL_698;
  if (sub_1CA85B594() == v0 && v354 == v2)
  {
    swift_bridgeObjectRelease();
LABEL_703:
    swift_bridgeObjectRelease();
    return type metadata accessor for PhotosChallengeEvaluableAlgorithmGreeneryDay();
  }
  v355 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v355 & 1) != 0)
    goto LABEL_703;
  if (sub_1CA85B594() == v0 && v356 == v2)
  {
    swift_bridgeObjectRelease();
LABEL_708:
    swift_bridgeObjectRelease();
    return type metadata accessor for PhotosChallengeEvaluableAlgorithmConstitutionMemorialDay();
  }
  v357 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v357 & 1) != 0)
    goto LABEL_708;
  if (sub_1CA85B594() == v0 && v358 == v2)
  {
    swift_bridgeObjectRelease();
LABEL_713:
    swift_bridgeObjectRelease();
    return type metadata accessor for PhotosChallengeEvaluableAlgorithmShowaDay();
  }
  v359 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v359 & 1) != 0)
    goto LABEL_713;
  if (sub_1CA85B594() == v0 && v360 == v2)
  {
    swift_bridgeObjectRelease();
LABEL_718:
    swift_bridgeObjectRelease();
    return type metadata accessor for PhotosChallengeEvaluableAlgorithmWhiteDay();
  }
  v361 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v361 & 1) != 0)
    goto LABEL_718;
  if (sub_1CA85B594() == v0 && v362 == v2)
  {
    swift_bridgeObjectRelease();
LABEL_723:
    swift_bridgeObjectRelease();
    return type metadata accessor for PhotosChallengeEvaluableAlgorithmFoundationDay();
  }
  v363 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v363 & 1) != 0)
    goto LABEL_723;
  if (sub_1CA85B594() == v0 && v364 == v2)
  {
    swift_bridgeObjectRelease();
LABEL_728:
    swift_bridgeObjectRelease();
    return type metadata accessor for PhotosChallengeEvaluableAlgorithmComingofAgeDay();
  }
  v365 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v365 & 1) != 0)
    goto LABEL_728;
  if (sub_1CA85B594() == v0 && v366 == v2)
  {
    swift_bridgeObjectRelease();
LABEL_733:
    swift_bridgeObjectRelease();
    return type metadata accessor for PhotosChallengeEvaluableAlgorithmHarvestFestival_KR();
  }
  v367 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v367 & 1) != 0)
    goto LABEL_733;
  if (sub_1CA85B594() == v0 && v368 == v2)
  {
    swift_bridgeObjectRelease();
LABEL_738:
    swift_bridgeObjectRelease();
    return type metadata accessor for PhotosChallengeEvaluableAlgorithmLiberationDay_KR();
  }
  v369 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v369 & 1) != 0)
    goto LABEL_738;
  if (sub_1CA85B594() == v0 && v370 == v2)
  {
    swift_bridgeObjectRelease();
LABEL_743:
    swift_bridgeObjectRelease();
    return type metadata accessor for PhotosChallengeEvaluableAlgorithmMemorialDay_KR();
  }
  v371 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v371 & 1) != 0)
    goto LABEL_743;
  if (sub_1CA85B594() == v0 && v372 == v2)
  {
    swift_bridgeObjectRelease();
LABEL_748:
    swift_bridgeObjectRelease();
    return type metadata accessor for PhotosChallengeEvaluableAlgorithmParentsDay();
  }
  v373 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v373 & 1) != 0)
    goto LABEL_748;
  if (sub_1CA85B594() == v0 && v374 == v2)
  {
    swift_bridgeObjectRelease();
LABEL_753:
    swift_bridgeObjectRelease();
    return type metadata accessor for PhotosChallengeEvaluableAlgorithmLunarYearsDay();
  }
  v375 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v375 & 1) != 0)
    goto LABEL_753;
  if (sub_1CA85B594() == v0 && v376 == v2)
  {
    swift_bridgeObjectRelease();
LABEL_758:
    swift_bridgeObjectRelease();
    return type metadata accessor for PhotosChallengeEvaluableAlgorithmStJohnsDay();
  }
  v377 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v377 & 1) != 0)
    goto LABEL_758;
  if (sub_1CA85B594() == v0 && v378 == v2)
  {
    swift_bridgeObjectRelease();
LABEL_763:
    swift_bridgeObjectRelease();
    return type metadata accessor for PhotosChallengeEvaluableAlgorithmNationalRemembranceDay();
  }
  v379 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v379 & 1) != 0)
    goto LABEL_763;
  if (sub_1CA85B594() == v0 && v380 == v2)
  {
    swift_bridgeObjectRelease();
LABEL_768:
    swift_bridgeObjectRelease();
    return type metadata accessor for PhotosChallengeEvaluableAlgorithmStNicholasEve();
  }
  v381 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v381 & 1) != 0)
    goto LABEL_768;
  if (sub_1CA85B594() == v0 && v382 == v2)
  {
    swift_bridgeObjectRelease();
LABEL_773:
    swift_bridgeObjectRelease();
    return type metadata accessor for PhotosChallengeEvaluableAlgorithmKingsDay();
  }
  v383 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v383 & 1) != 0)
    goto LABEL_773;
  if (sub_1CA85B594() == v0 && v384 == v2)
  {
    swift_bridgeObjectRelease();
LABEL_778:
    swift_bridgeObjectRelease();
    return type metadata accessor for PhotosChallengeEvaluableAlgorithmSaintLucysDay();
  }
  v385 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v385 & 1) != 0)
    goto LABEL_778;
  if (sub_1CA85B594() == v0 && v386 == v2)
  {
    swift_bridgeObjectRelease();
LABEL_783:
    swift_bridgeObjectRelease();
    return type metadata accessor for PhotosChallengeEvaluableAlgorithmDayofLiberation();
  }
  v387 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v387 & 1) != 0)
    goto LABEL_783;
  if (sub_1CA85B594() == v0 && v388 == v2)
  {
    swift_bridgeObjectRelease();
LABEL_788:
    swift_bridgeObjectRelease();
    return type metadata accessor for PhotosChallengeEvaluableAlgorithmMaundyThursday();
  }
  v389 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v389 & 1) != 0)
    goto LABEL_788;
  if (sub_1CA85B594() == v0 && v390 == v2)
  {
    swift_bridgeObjectRelease();
LABEL_793:
    swift_bridgeObjectRelease();
    return type metadata accessor for PhotosChallengeEvaluableAlgorithmAdventSunday();
  }
  v391 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v391 & 1) != 0)
    goto LABEL_793;
  if (sub_1CA85B594() == v0 && v392 == v2)
  {
    swift_bridgeObjectRelease();
LABEL_798:
    swift_bridgeObjectRelease();
    return type metadata accessor for PhotosChallengeEvaluableAlgorithmPortugalDay();
  }
  v393 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v393 & 1) != 0)
    goto LABEL_798;
  if (sub_1CA85B594() == v0 && v394 == v2)
  {
    swift_bridgeObjectRelease();
LABEL_803:
    swift_bridgeObjectRelease();
    return type metadata accessor for PhotosChallengeEvaluableAlgorithmMartisor();
  }
  v395 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v395 & 1) != 0)
    goto LABEL_803;
  if (sub_1CA85B594() == v0 && v396 == v2)
  {
    swift_bridgeObjectRelease();
LABEL_808:
    swift_bridgeObjectRelease();
    return type metadata accessor for PhotosChallengeEvaluableAlgorithmNationalDayofRomania();
  }
  v397 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v397 & 1) != 0)
    goto LABEL_808;
  if (sub_1CA85B594() == v0 && v398 == v2)
  {
    swift_bridgeObjectRelease();
LABEL_813:
    swift_bridgeObjectRelease();
    return type metadata accessor for PhotosChallengeEvaluableAlgorithmDragobete();
  }
  v399 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v399 & 1) != 0)
    goto LABEL_813;
  if (sub_1CA85B594() == v0 && v400 == v2)
  {
    swift_bridgeObjectRelease();
LABEL_818:
    swift_bridgeObjectRelease();
    return type metadata accessor for PhotosChallengeEvaluableAlgorithmUnityDay();
  }
  v401 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v401 & 1) != 0)
    goto LABEL_818;
  if (sub_1CA85B594() == v0 && v402 == v2)
  {
    swift_bridgeObjectRelease();
LABEL_823:
    swift_bridgeObjectRelease();
    return type metadata accessor for PhotosChallengeEvaluableAlgorithmDefenderoftheFatherlandDay();
  }
  v403 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v403 & 1) != 0)
    goto LABEL_823;
  if (sub_1CA85B594() == v0 && v404 == v2)
  {
    swift_bridgeObjectRelease();
LABEL_828:
    swift_bridgeObjectRelease();
    return type metadata accessor for PhotosChallengeEvaluableAlgorithmKnowledgeDay();
  }
  v405 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v405 & 1) != 0)
    goto LABEL_828;
  if (sub_1CA85B594() == v0 && v406 == v2)
  {
    swift_bridgeObjectRelease();
LABEL_833:
    swift_bridgeObjectRelease();
    return type metadata accessor for PhotosChallengeEvaluableAlgorithmCosmonauticsDay();
  }
  v407 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v407 & 1) != 0)
    goto LABEL_833;
  if (sub_1CA85B594() == v0 && v408 == v2)
  {
    swift_bridgeObjectRelease();
LABEL_838:
    swift_bridgeObjectRelease();
    return type metadata accessor for PhotosChallengeEvaluableAlgorithmOrthodoxNewYear();
  }
  v409 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v409 & 1) != 0)
    goto LABEL_838;
  if (sub_1CA85B594() == v0 && v410 == v2)
  {
    swift_bridgeObjectRelease();
LABEL_843:
    swift_bridgeObjectRelease();
    return type metadata accessor for PhotosChallengeEvaluableAlgorithmWalpurgisNight();
  }
  v411 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v411 & 1) != 0)
    goto LABEL_843;
  if (sub_1CA85B594() == v0 && v412 == v2)
  {
    swift_bridgeObjectRelease();
LABEL_848:
    swift_bridgeObjectRelease();
    return type metadata accessor for PhotosChallengeEvaluableAlgorithmHariRayaHaji();
  }
  v413 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v413 & 1) != 0)
    goto LABEL_848;
  if (sub_1CA85B594() == v0 && v414 == v2)
  {
    swift_bridgeObjectRelease();
LABEL_853:
    swift_bridgeObjectRelease();
    return type metadata accessor for PhotosChallengeEvaluableAlgorithmHariRayaPuasa();
  }
  v415 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v415 & 1) != 0)
    goto LABEL_853;
  if (sub_1CA85B594() == v0 && v416 == v2)
  {
    swift_bridgeObjectRelease();
LABEL_858:
    swift_bridgeObjectRelease();
    return type metadata accessor for PhotosChallengeEvaluableAlgorithmArmedForcesDay();
  }
  v417 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v417 & 1) != 0)
    goto LABEL_858;
  if (sub_1CA85B594() == v0 && v418 == v2)
  {
    swift_bridgeObjectRelease();
LABEL_863:
    swift_bridgeObjectRelease();
    return type metadata accessor for PhotosChallengeEvaluableAlgorithm228MemorialDay();
  }
  v419 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v419 & 1) != 0)
    goto LABEL_863;
  if (sub_1CA85B594() == v0 && v420 == v2)
  {
    swift_bridgeObjectRelease();
LABEL_868:
    swift_bridgeObjectRelease();
    return type metadata accessor for PhotosChallengeEvaluableAlgorithmRepublicDayNewYearsDay();
  }
  v421 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v421 & 1) != 0)
    goto LABEL_868;
  if (sub_1CA85B594() == v0 && v422 == v2)
  {
    swift_bridgeObjectRelease();
LABEL_873:
    swift_bridgeObjectRelease();
    return type metadata accessor for PhotosChallengeEvaluableAlgorithmFarmersDay();
  }
  v423 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v423 & 1) != 0)
    goto LABEL_873;
  if (sub_1CA85B594() == v0 && v424 == v2)
  {
    swift_bridgeObjectRelease();
LABEL_878:
    swift_bridgeObjectRelease();
    return type metadata accessor for PhotosChallengeEvaluableAlgorithmFoundingoftheRepublicofChina();
  }
  v425 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v425 & 1) != 0)
    goto LABEL_878;
  if (sub_1CA85B594() == v0 && v426 == v2)
  {
    swift_bridgeObjectRelease();
LABEL_883:
    swift_bridgeObjectRelease();
    return type metadata accessor for PhotosChallengeEvaluableAlgorithmTaiwanRetrocessionDay();
  }
  v427 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v427 & 1) != 0)
    goto LABEL_883;
  if (sub_1CA85B594() == v0 && v428 == v2)
  {
    swift_bridgeObjectRelease();
LABEL_888:
    swift_bridgeObjectRelease();
    return type metadata accessor for PhotosChallengeEvaluableAlgorithmVeteransDay();
  }
  v429 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v429 & 1) != 0)
    goto LABEL_888;
  if (sub_1CA85B594() == v0 && v430 == v2)
  {
    swift_bridgeObjectRelease();
LABEL_893:
    swift_bridgeObjectRelease();
    return type metadata accessor for PhotosChallengeEvaluableAlgorithmMemorialDay();
  }
  v431 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v431 & 1) != 0)
    goto LABEL_893;
  if (sub_1CA85B594() == v0 && v432 == v2)
  {
    swift_bridgeObjectRelease();
LABEL_898:
    swift_bridgeObjectRelease();
    return type metadata accessor for PhotosChallengeEvaluableAlgorithmInternationalDayofFriendship();
  }
  v433 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v433 & 1) != 0)
    goto LABEL_898;
  if (sub_1CA85B594() == v0 && v434 == v2)
  {
    swift_bridgeObjectRelease();
LABEL_903:
    swift_bridgeObjectRelease();
    return type metadata accessor for PhotosChallengeEvaluableAlgorithmMartinLutherKingJrDay();
  }
  v435 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v435 & 1) != 0)
    goto LABEL_903;
  if (sub_1CA85B594() == v0 && v436 == v2)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v437 = sub_1CA85C284();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v437 & 1) == 0)
      return 0;
  }
  return type metadata accessor for PhotosChallengeEvaluablePublicEventAlgorithm();
}

uint64_t MaestroSongsInfo.schemaVersion.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MaestroSongsInfo.contentVersion.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

PhotosGraph::MaestroSongsInfo __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> MaestroSongsInfo.init(schemaVersion:contentVersion:)(Swift::String schemaVersion, Swift::String contentVersion)
{
  Swift::String *v2;
  PhotosGraph::MaestroSongsInfo result;

  *v2 = schemaVersion;
  v2[1] = contentVersion;
  result.contentVersion = contentVersion;
  result.schemaVersion = schemaVersion;
  return result;
}

uint64_t MaestroSongsInfo.init(from:)@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  void *v9;
  void *v10;
  id v11;
  id v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  id v23;
  _BYTE *v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  _BYTE *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;

  v34 = *MEMORY[0x1E0C80C00];
  v5 = sub_1CA85A430();
  if (!v2)
  {
    v7 = v5;
    v8 = v6;
    v9 = (void *)objc_opt_self();
    v10 = (void *)sub_1CA85A478();
    *(_QWORD *)&v32 = 0;
    v11 = objc_msgSend(v9, sel_JSONObjectWithData_options_error_, v10, 4, &v32);

    if (v11)
    {
      v12 = (id)v32;
      sub_1CA85BD5C();
      swift_unknownObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED872170);
      if ((swift_dynamicCast() & 1) != 0)
      {
        if (*(_QWORD *)(v30 + 16))
        {
          v13 = sub_1CA25081C(0x6556616D65686373, 0xED00006E6F697372);
          if ((v14 & 1) != 0)
          {
            sub_1CA266A08(*(_QWORD *)(v30 + 56) + 32 * v13, (uint64_t)&v32);
            if ((swift_dynamicCast() & 1) != 0)
            {
              v15 = v31;
              if (*(_QWORD *)(v30 + 16))
              {
                v16 = v30;
                v17 = sub_1CA25081C(0x56746E65746E6F63, 0xEE006E6F69737265);
                if ((v18 & 1) != 0)
                {
                  sub_1CA266A08(*(_QWORD *)(v30 + 56) + 32 * v17, (uint64_t)&v32);
                  if ((swift_dynamicCast() & 1) != 0)
                  {
                    sub_1CA260204(v7, v8);
                    swift_bridgeObjectRelease();
                    v20 = v30;
                    v19 = v31;
                    v21 = sub_1CA85A424();
                    result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 8))(a1, v21);
LABEL_21:
                    *a2 = v16;
                    a2[1] = v15;
                    a2[2] = v20;
                    a2[3] = v19;
                    return result;
                  }
                }
              }
              swift_bridgeObjectRelease();
            }
          }
        }
        if (*(_QWORD *)(v30 + 16) && (v25 = sub_1CA25081C(0x6E6F6973726576, 0xE700000000000000), (v26 & 1) != 0))
        {
          sub_1CA266A08(*(_QWORD *)(v30 + 56) + 32 * v25, (uint64_t)&v32);
        }
        else
        {
          v32 = 0u;
          v33 = 0u;
        }
        swift_bridgeObjectRelease();
        if (*((_QWORD *)&v33 + 1))
        {
          if ((swift_dynamicCast() & 1) != 0)
          {
            sub_1CA260204(v7, v8);
            v20 = v30;
            v19 = v31;
            v27 = sub_1CA85A424();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 8))(a1, v27);
            result = swift_bridgeObjectRetain();
            v16 = v30;
            v15 = v31;
            goto LABEL_21;
          }
        }
        else
        {
          sub_1CA2F0DBC((uint64_t)&v32);
        }
        sub_1CA2F0D78();
        swift_allocError();
        *v28 = 1;
      }
      else
      {
        sub_1CA2F0D78();
        swift_allocError();
        *v24 = 0;
      }
    }
    else
    {
      v23 = (id)v32;
      sub_1CA85A364();

    }
    swift_willThrow();
    sub_1CA260204(v7, v8);
  }
  v29 = sub_1CA85A424();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 8))(a1, v29);
}

unint64_t sub_1CA2F0D78()
{
  unint64_t result;

  result = qword_1EF94D060;
  if (!qword_1EF94D060)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8DAFF0, &type metadata for MaestroSongsInfo.Error);
    atomic_store(result, (unint64_t *)&qword_1EF94D060);
  }
  return result;
}

uint64_t sub_1CA2F0DBC(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8710D0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

ValueMetadata *type metadata accessor for MaestroSongsInfo()
{
  return &type metadata for MaestroSongsInfo;
}

uint64_t storeEnumTagSinglePayload for MaestroSongsInfo.Error(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1CA2F0E58 + 4 * byte_1CA8DAF55[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1CA2F0E8C + 4 * byte_1CA8DAF50[v4]))();
}

uint64_t sub_1CA2F0E8C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CA2F0E94(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1CA2F0E9CLL);
  return result;
}

uint64_t sub_1CA2F0EA8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1CA2F0EB0);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1CA2F0EB4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CA2F0EBC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MaestroSongsInfo.Error()
{
  return &type metadata for MaestroSongsInfo.Error;
}

unint64_t sub_1CA2F0EDC()
{
  unint64_t result;

  result = qword_1EF94D068;
  if (!qword_1EF94D068)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8DAFC8, &type metadata for MaestroSongsInfo.Error);
    atomic_store(result, (unint64_t *)&qword_1EF94D068);
  }
  return result;
}

uint64_t sub_1CA2F0F20()
{
  return 1701667182;
}

uint64_t sub_1CA2F0F30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 1701667182 && a2 == 0xE400000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1CA85C284();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1CA2F0FB4()
{
  sub_1CA2F1120();
  return sub_1CA85C3E0();
}

uint64_t sub_1CA2F0FDC()
{
  sub_1CA2F1120();
  return sub_1CA85C3EC();
}

uint64_t MusicKitArtistEssentialsResponse.ArtistView.Attributes.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94D070);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1CA2F1120();
  sub_1CA85C3C8();
  if (!v2)
  {
    v9 = sub_1CA85C158();
    v11 = v10;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v9;
    a2[1] = v11;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1CA2F1120()
{
  unint64_t result;

  result = qword_1EF94D078;
  if (!qword_1EF94D078)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8DB550, &type metadata for MusicKitArtistEssentialsResponse.ArtistView.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF94D078);
  }
  return result;
}

uint64_t sub_1CA2F1164@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return MusicKitArtistEssentialsResponse.ArtistView.Attributes.init(from:)(a1, a2);
}

uint64_t sub_1CA2F1178()
{
  sub_1CA85C368();
  sub_1CA85B4B0();
  return sub_1CA85C3B0();
}

uint64_t sub_1CA2F11CC()
{
  return sub_1CA85B4B0();
}

uint64_t sub_1CA2F11E8()
{
  sub_1CA85C368();
  sub_1CA85B4B0();
  return sub_1CA85C3B0();
}

uint64_t sub_1CA2F1238@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1CA85C0F8();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_1CA2F1288(_QWORD *a1@<X8>)
{
  *a1 = 0x676E6F732D706F74;
  a1[1] = 0xE900000000000073;
}

uint64_t sub_1CA2F12A8()
{
  return 0x676E6F732D706F74;
}

uint64_t sub_1CA2F12C4@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1CA85C0F8();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t sub_1CA2F1318()
{
  sub_1CA2F1490();
  return sub_1CA85C3E0();
}

uint64_t sub_1CA2F1340()
{
  sub_1CA2F1490();
  return sub_1CA85C3EC();
}

uint64_t MusicKitArtistEssentialsResponse.ArtistView.Views.topSongs.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
  return swift_bridgeObjectRetain();
}

uint64_t MusicKitArtistEssentialsResponse.ArtistView.Views.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _QWORD v10[2];

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94D080);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1CA2F1490();
  sub_1CA85C3C8();
  if (!v2)
  {
    sub_1CA2F14D4();
    sub_1CA85C1A0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v10[1];
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1CA2F1490()
{
  unint64_t result;

  result = qword_1EF94D088;
  if (!qword_1EF94D088)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8DB500, &type metadata for MusicKitArtistEssentialsResponse.ArtistView.Views.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF94D088);
  }
  return result;
}

unint64_t sub_1CA2F14D4()
{
  unint64_t result;

  result = qword_1ED871BE0;
  if (!qword_1ED871BE0)
  {
    result = MEMORY[0x1CAA4F1A4](&protocol conformance descriptor for MusicKitCatalogSongResponse, &type metadata for MusicKitCatalogSongResponse);
    atomic_store(result, (unint64_t *)&qword_1ED871BE0);
  }
  return result;
}

uint64_t sub_1CA2F1518@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return MusicKitArtistEssentialsResponse.ArtistView.Views.init(from:)(a1, a2);
}

uint64_t MusicKitArtistEssentialsResponse.ArtistView.id.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MusicKitArtistEssentialsResponse.ArtistView.attributes.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + 24);
  *a1 = *(_QWORD *)(v1 + 16);
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t MusicKitArtistEssentialsResponse.ArtistView.views.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 32);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1CA2F1570()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x7475626972747461;
  if (*v0 != 1)
    v1 = 0x7377656976;
  if (*v0)
    return v1;
  else
    return 25705;
}

uint64_t sub_1CA2F15C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1CA2F231C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1CA2F15E4()
{
  sub_1CA2F18A4();
  return sub_1CA85C3E0();
}

uint64_t sub_1CA2F160C()
{
  sub_1CA2F18A4();
  return sub_1CA85C3EC();
}

uint64_t MusicKitArtistEssentialsResponse.ArtistView.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94D090);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1CA2F18A4();
  sub_1CA85C3C8();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  LOBYTE(v20) = 0;
  v9 = sub_1CA85C158();
  v11 = v10;
  v19 = v9;
  v22 = 1;
  sub_1CA2F18E8();
  swift_bridgeObjectRetain();
  sub_1CA85C1A0();
  v12 = v21;
  v17 = v20;
  v22 = 2;
  sub_1CA2F192C();
  v18 = v12;
  swift_bridgeObjectRetain();
  sub_1CA85C1A0();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v13 = v20;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v14 = v18;
  *a2 = v19;
  a2[1] = v11;
  a2[2] = v17;
  a2[3] = v14;
  a2[4] = v13;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

unint64_t sub_1CA2F18A4()
{
  unint64_t result;

  result = qword_1EF94D098;
  if (!qword_1EF94D098)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8DB4B0, &type metadata for MusicKitArtistEssentialsResponse.ArtistView.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF94D098);
  }
  return result;
}

unint64_t sub_1CA2F18E8()
{
  unint64_t result;

  result = qword_1EF94D0A0;
  if (!qword_1EF94D0A0)
  {
    result = MEMORY[0x1CAA4F1A4](&protocol conformance descriptor for MusicKitArtistEssentialsResponse.ArtistView.Attributes, &type metadata for MusicKitArtistEssentialsResponse.ArtistView.Attributes);
    atomic_store(result, (unint64_t *)&qword_1EF94D0A0);
  }
  return result;
}

unint64_t sub_1CA2F192C()
{
  unint64_t result;

  result = qword_1EF94D0A8;
  if (!qword_1EF94D0A8)
  {
    result = MEMORY[0x1CAA4F1A4](&protocol conformance descriptor for MusicKitArtistEssentialsResponse.ArtistView.Views, &type metadata for MusicKitArtistEssentialsResponse.ArtistView.Views);
    atomic_store(result, (unint64_t *)&qword_1EF94D0A8);
  }
  return result;
}

uint64_t sub_1CA2F1970@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return MusicKitArtistEssentialsResponse.ArtistView.init(from:)(a1, a2);
}

uint64_t MusicKitArtistEssentialsResponse.data.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1CA2F198C()
{
  sub_1CA2F1B04();
  return sub_1CA85C3E0();
}

uint64_t sub_1CA2F19B4()
{
  sub_1CA2F1B04();
  return sub_1CA85C3EC();
}

uint64_t MusicKitArtistEssentialsResponse.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _QWORD v10[2];

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94D0B0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1CA2F1B04();
  sub_1CA85C3C8();
  if (!v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94D0C0);
    sub_1CA2F1B48();
    sub_1CA85C1A0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v10[1];
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1CA2F1B04()
{
  unint64_t result;

  result = qword_1EF94D0B8;
  if (!qword_1EF94D0B8)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8DB460, &type metadata for MusicKitArtistEssentialsResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF94D0B8);
  }
  return result;
}

unint64_t sub_1CA2F1B48()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = qword_1EF94D0C8;
  if (!qword_1EF94D0C8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF94D0C0);
    v2 = sub_1CA2F1BAC();
    result = MEMORY[0x1CAA4F1A4](MEMORY[0x1E0DEAF40], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EF94D0C8);
  }
  return result;
}

unint64_t sub_1CA2F1BAC()
{
  unint64_t result;

  result = qword_1EF94D0D0;
  if (!qword_1EF94D0D0)
  {
    result = MEMORY[0x1CAA4F1A4](&protocol conformance descriptor for MusicKitArtistEssentialsResponse.ArtistView, &type metadata for MusicKitArtistEssentialsResponse.ArtistView);
    atomic_store(result, (unint64_t *)&qword_1EF94D0D0);
  }
  return result;
}

uint64_t sub_1CA2F1BF0@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return MusicKitArtistEssentialsResponse.init(from:)(a1, a2);
}

ValueMetadata *type metadata accessor for MusicKitArtistEssentialsResponse()
{
  return &type metadata for MusicKitArtistEssentialsResponse;
}

uint64_t destroy for MusicKitArtistEssentialsResponse.ArtistView()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for MusicKitArtistEssentialsResponse.ArtistView(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for MusicKitArtistEssentialsResponse.ArtistView(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for MusicKitArtistEssentialsResponse.ArtistView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for MusicKitArtistEssentialsResponse.ArtistView(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MusicKitArtistEssentialsResponse.ArtistView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for MusicKitArtistEssentialsResponse.ArtistView()
{
  return &type metadata for MusicKitArtistEssentialsResponse.ArtistView;
}

ValueMetadata *type metadata accessor for MusicKitArtistEssentialsResponse.ArtistView.Attributes()
{
  return &type metadata for MusicKitArtistEssentialsResponse.ArtistView.Attributes;
}

ValueMetadata *type metadata accessor for MusicKitArtistEssentialsResponse.ArtistView.Views()
{
  return &type metadata for MusicKitArtistEssentialsResponse.ArtistView.Views;
}

ValueMetadata *type metadata accessor for MusicKitArtistEssentialsResponse.CodingKeys()
{
  return &type metadata for MusicKitArtistEssentialsResponse.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for MusicKitArtistEssentialsResponse.ArtistView.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1CA2F1E90 + 4 * byte_1CA8DB035[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1CA2F1EC4 + 4 * byte_1CA8DB030[v4]))();
}

uint64_t sub_1CA2F1EC4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CA2F1ECC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1CA2F1ED4);
  return result;
}

uint64_t sub_1CA2F1EE0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1CA2F1EE8);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1CA2F1EEC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CA2F1EF4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MusicKitArtistEssentialsResponse.ArtistView.CodingKeys()
{
  return &type metadata for MusicKitArtistEssentialsResponse.ArtistView.CodingKeys;
}

ValueMetadata *type metadata accessor for MusicKitArtistEssentialsResponse.ArtistView.Views.CodingKeys()
{
  return &type metadata for MusicKitArtistEssentialsResponse.ArtistView.Views.CodingKeys;
}

uint64_t _s11PhotosGraph32MusicKitArtistEssentialsResponseV10CodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1CA2F1F60 + 4 * byte_1CA8DB03A[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1CA2F1F80 + 4 * byte_1CA8DB03F[v4]))();
}

_BYTE *sub_1CA2F1F60(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1CA2F1F80(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1CA2F1F88(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1CA2F1F90(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1CA2F1F98(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1CA2F1FA0(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for MusicKitArtistEssentialsResponse.ArtistView.Attributes.CodingKeys()
{
  return &type metadata for MusicKitArtistEssentialsResponse.ArtistView.Attributes.CodingKeys;
}

unint64_t sub_1CA2F1FC0()
{
  unint64_t result;

  result = qword_1EF94D0D8;
  if (!qword_1EF94D0D8)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8DB1D8, &type metadata for MusicKitArtistEssentialsResponse.ArtistView.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF94D0D8);
  }
  return result;
}

unint64_t sub_1CA2F2008()
{
  unint64_t result;

  result = qword_1EF94D0E0;
  if (!qword_1EF94D0E0)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8DB2C8, &type metadata for MusicKitArtistEssentialsResponse.ArtistView.Views.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF94D0E0);
  }
  return result;
}

unint64_t sub_1CA2F2050()
{
  unint64_t result;

  result = qword_1EF94D0E8;
  if (!qword_1EF94D0E8)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8DB380, &type metadata for MusicKitArtistEssentialsResponse.ArtistView.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF94D0E8);
  }
  return result;
}

unint64_t sub_1CA2F2098()
{
  unint64_t result;

  result = qword_1EF94D0F0;
  if (!qword_1EF94D0F0)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8DB438, &type metadata for MusicKitArtistEssentialsResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF94D0F0);
  }
  return result;
}

unint64_t sub_1CA2F20E0()
{
  unint64_t result;

  result = qword_1EF94D0F8;
  if (!qword_1EF94D0F8)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8DB3A8, &type metadata for MusicKitArtistEssentialsResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF94D0F8);
  }
  return result;
}

unint64_t sub_1CA2F2128()
{
  unint64_t result;

  result = qword_1EF94D100;
  if (!qword_1EF94D100)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8DB3D0, &type metadata for MusicKitArtistEssentialsResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF94D100);
  }
  return result;
}

unint64_t sub_1CA2F2170()
{
  unint64_t result;

  result = qword_1EF94D108;
  if (!qword_1EF94D108)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8DB2F0, &type metadata for MusicKitArtistEssentialsResponse.ArtistView.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF94D108);
  }
  return result;
}

unint64_t sub_1CA2F21B8()
{
  unint64_t result;

  result = qword_1EF94D110;
  if (!qword_1EF94D110)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8DB318, &type metadata for MusicKitArtistEssentialsResponse.ArtistView.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF94D110);
  }
  return result;
}

unint64_t sub_1CA2F2200()
{
  unint64_t result;

  result = qword_1EF94D118;
  if (!qword_1EF94D118)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8DB200, &type metadata for MusicKitArtistEssentialsResponse.ArtistView.Views.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF94D118);
  }
  return result;
}

unint64_t sub_1CA2F2248()
{
  unint64_t result;

  result = qword_1EF94D120;
  if (!qword_1EF94D120)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8DB228, &type metadata for MusicKitArtistEssentialsResponse.ArtistView.Views.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF94D120);
  }
  return result;
}

unint64_t sub_1CA2F2290()
{
  unint64_t result;

  result = qword_1EF94D128;
  if (!qword_1EF94D128)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8DB148, &type metadata for MusicKitArtistEssentialsResponse.ArtistView.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF94D128);
  }
  return result;
}

unint64_t sub_1CA2F22D8()
{
  unint64_t result;

  result = qword_1EF94D130;
  if (!qword_1EF94D130)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8DB170, &type metadata for MusicKitArtistEssentialsResponse.ArtistView.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF94D130);
  }
  return result;
}

uint64_t sub_1CA2F231C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_1CA85C284() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7475626972747461 && a2 == 0xEA00000000007365 || (sub_1CA85C284() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7377656976 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1CA85C284();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t RecentPeriod.dateInterval(currentDate:)()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  uint64_t v11;

  v1 = sub_1CA85A7E4();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1CA85A7FC();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v0;
  sub_1CA85A7CC();
  if ((v9 & 1) != 0)
  {
    sub_1CA85A730();
  }
  else
  {
    (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E0CB10F8], v1);
    sub_1CA85A754();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

BOOL static RecentPeriod.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t RecentPeriod.hash(into:)()
{
  return sub_1CA85C374();
}

uint64_t RecentPeriod.hashValue.getter()
{
  sub_1CA85C368();
  sub_1CA85C374();
  return sub_1CA85C3B0();
}

void HistoricalInterval.priority.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = 2 - *v1;
}

unint64_t HistoricalInterval.annualDateIntervals(startDate:currentDate:)(uint64_t a1, unint64_t a2)
{
  char *v2;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  uint64_t v12;

  v5 = sub_1CA85A7E4();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v6 + 104))(v9, **((unsigned int **)&unk_1E84089A8 + *v2), v5, v7);
  v10 = HistoricalInterval.annualDateIntervals(from:to:windowSize:)(a1, a2, (uint64_t)v9);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  return v10;
}

unint64_t HistoricalInterval.annualDateIntervals(from:to:windowSize:)(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(char *, uint64_t, uint64_t);
  char *v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(void);
  char *v41;
  unint64_t v42;
  unint64_t v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  char *v47;
  char v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  void (*v59)(char *, _QWORD, uint64_t);
  unsigned int v60;
  char *v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  char *v70;
  char *v71;
  unint64_t v72;

  v53 = a3;
  v72 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED871160);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1CA85A148();
  v65 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v71 = (char *)&v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v70 = (char *)&v52 - v10;
  v66 = sub_1CA85A7E4();
  v11 = *(_QWORD *)(v66 - 8);
  MEMORY[0x1E0C80A78](v66);
  v13 = (char *)&v52 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8711C0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v52 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = sub_1CA85A5B0();
  v67 = *(_QWORD *)(v54 - 8);
  MEMORY[0x1E0C80A78](v54);
  v18 = (char *)&v52 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v52 - v20;
  v22 = sub_1CA85A7FC();
  v55 = *(_QWORD *)(v22 - 8);
  MEMORY[0x1E0C80A78](v22);
  v24 = (char *)&v52 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1CA85A7CC();
  v68 = v24;
  sub_1CA85A6C4();
  v25 = v21;
  v26 = sub_1CA85A514();
  v56 = v22;
  if ((v26 & 1) != 0)
  {
    v27 = a1;
    v28 = v53;
    v29 = v54;
    v69 = v18;
    v62 = v16;
    v63 = v13;
    v60 = *MEMORY[0x1E0CB1158];
    v64 = v11;
    v59 = *(void (**)(char *, _QWORD, uint64_t))(v11 + 104);
    v72 = MEMORY[0x1E0DEE9D8];
    v57 = v6;
    v58 = v27;
    v30 = v67;
    v61 = v25;
    while (1)
    {
      v31 = v7;
      v32 = v63;
      v33 = v66;
      v59(v63, v60, v66);
      v34 = (uint64_t)v62;
      sub_1CA85A7B4();
      v35 = v34;
      (*(void (**)(char *, uint64_t))(v64 + 8))(v32, v33);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v30 + 48))(v34, 1, v29) == 1)
      {
        swift_bridgeObjectRelease();
        v49 = &qword_1ED8711C0;
        v50 = v34;
        goto LABEL_14;
      }
      v36 = *(void (**)(char *, uint64_t, uint64_t))(v30 + 32);
      v37 = v69;
      v36(v69, v35, v29);
      sub_1CA85A748();
      v38 = v65;
      v7 = v31;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v65 + 48))(v6, 1, v31) == 1)
        break;
      v39 = v28;
      v40 = *(void (**)(void))(v38 + 32);
      v41 = v70;
      v40();
      (*(void (**)(char *, char *, uint64_t))(v38 + 16))(v71, v41, v7);
      v42 = v72;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v42 = sub_1CA26D4A4(0, *(_QWORD *)(v42 + 16) + 1, 1, v42);
      v44 = *(_QWORD *)(v42 + 16);
      v43 = *(_QWORD *)(v42 + 24);
      if (v44 >= v43 >> 1)
        v42 = sub_1CA26D4A4(v43 > 1, v44 + 1, 1, v42);
      *(_QWORD *)(v42 + 16) = v44 + 1;
      v45 = (*(unsigned __int8 *)(v38 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80);
      v72 = v42;
      ((void (*)(unint64_t, char *, uint64_t))v40)(v42 + v45 + *(_QWORD *)(v38 + 72) * v44, v71, v7);
      (*(void (**)(char *, uint64_t))(v38 + 8))(v70, v7);
      v46 = v67;
      v47 = v61;
      (*(void (**)(char *, uint64_t))(v67 + 8))(v61, v29);
      v36(v47, (uint64_t)v69, v29);
      v30 = v46;
      v48 = sub_1CA85A514();
      v28 = v39;
      v25 = v47;
      v6 = v57;
      if ((v48 & 1) == 0)
        goto LABEL_15;
    }
    v30 = v67;
    (*(void (**)(char *, uint64_t))(v67 + 8))(v37, v29);
    swift_bridgeObjectRelease();
    v49 = &qword_1ED871160;
    v50 = (uint64_t)v6;
LABEL_14:
    sub_1CA267BE8(v50, v49);
    v72 = MEMORY[0x1E0DEE9D8];
    v25 = v61;
  }
  else
  {
    v72 = MEMORY[0x1E0DEE9D8];
    v30 = v67;
    v29 = v54;
  }
LABEL_15:
  (*(void (**)(char *, uint64_t))(v30 + 8))(v25, v29);
  (*(void (**)(char *, uint64_t))(v55 + 8))(v68, v56);
  return v72;
}

BOOL static HistoricalInterval.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t HistoricalInterval.hash(into:)()
{
  return sub_1CA85C374();
}

uint64_t HistoricalInterval.hashValue.getter()
{
  sub_1CA85C368();
  sub_1CA85C374();
  return sub_1CA85C3B0();
}

unint64_t sub_1CA2F2C24()
{
  unint64_t result;

  result = qword_1EF94D138;
  if (!qword_1EF94D138)
  {
    result = MEMORY[0x1CAA4F1A4](&protocol conformance descriptor for RecentPeriod, &type metadata for RecentPeriod);
    atomic_store(result, (unint64_t *)&qword_1EF94D138);
  }
  return result;
}

unint64_t sub_1CA2F2C6C()
{
  unint64_t result;

  result = qword_1EF94D140;
  if (!qword_1EF94D140)
  {
    result = MEMORY[0x1CAA4F1A4](&protocol conformance descriptor for HistoricalInterval, &type metadata for HistoricalInterval);
    atomic_store(result, (unint64_t *)&qword_1EF94D140);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for RecentPeriod(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1CA2F2CFC + 4 * byte_1CA8DB5A5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1CA2F2D30 + 4 * byte_1CA8DB5A0[v4]))();
}

uint64_t sub_1CA2F2D30(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CA2F2D38(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1CA2F2D40);
  return result;
}

uint64_t sub_1CA2F2D4C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1CA2F2D54);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1CA2F2D58(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CA2F2D60(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for RecentPeriod()
{
  return &type metadata for RecentPeriod;
}

uint64_t storeEnumTagSinglePayload for HistoricalInterval(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1CA2F2DC8 + 4 * byte_1CA8DB5AF[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1CA2F2DFC + 4 * byte_1CA8DB5AA[v4]))();
}

uint64_t sub_1CA2F2DFC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CA2F2E04(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1CA2F2E0CLL);
  return result;
}

uint64_t sub_1CA2F2E18(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1CA2F2E20);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1CA2F2E24(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CA2F2E2C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for HistoricalInterval()
{
  return &type metadata for HistoricalInterval;
}

_QWORD *CompletionCounter.__allocating_init(count:completionHandler:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v6;
  uint64_t v7;

  v6 = (_QWORD *)swift_allocObject();
  v6[2] = a2;
  v6[3] = a3;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED873240);
  v7 = swift_allocObject();
  *(_DWORD *)(v7 + 32) = 0;
  *(_BYTE *)(v7 + 16) = 0;
  *(_QWORD *)(v7 + 24) = a1;
  v6[4] = v7;
  return v6;
}

_QWORD *CompletionCounter.init(count:completionHandler:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v5;

  v3[2] = a2;
  v3[3] = a3;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED873240);
  v5 = swift_allocObject();
  *(_DWORD *)(v5 + 32) = 0;
  *(_BYTE *)(v5 + 16) = 0;
  *(_QWORD *)(v5 + 24) = a1;
  v3[4] = v5;
  return v3;
}

Swift::Void __swiftcall CompletionCounter.decrementCounter()()
{
  uint64_t v0;
  uint64_t v1;
  os_unfair_lock_s *v2;
  int v3;
  uint64_t v4;
  unsigned __int8 v5;

  v1 = v0;
  v2 = *(os_unfair_lock_s **)(v0 + 32);
  swift_retain();
  os_unfair_lock_lock(v2 + 8);
  sub_1CA2F2F8C((uint64_t)&v2[4], (char *)&v5);
  os_unfair_lock_unlock(v2 + 8);
  v3 = v5;
  v4 = swift_release();
  if (v3 == 1)
    (*(void (**)(uint64_t))(v1 + 16))(v4);
}

void sub_1CA2F2F8C(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;
  char v10;

  if ((*(_BYTE *)a1 & 1) != 0)
  {
    if (qword_1ED872138 != -1)
      swift_once();
    v3 = sub_1CA85B348();
    __swift_project_value_buffer(v3, (uint64_t)qword_1ED87D058);
    v4 = sub_1CA85B330();
    v5 = sub_1CA85BAC8();
    if (os_log_type_enabled(v4, v5))
    {
      v6 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v6 = 0;
      _os_log_impl(&dword_1CA237000, v4, v5, "CompletionCounter has been terminated", v6, 2u);
      MEMORY[0x1CAA4F27C](v6, -1, -1);
    }

    goto LABEL_9;
  }
  v7 = *(_QWORD *)(a1 + 8);
  v8 = __OFSUB__(v7, 1);
  v9 = v7 - 1;
  if (!v8)
  {
    *(_QWORD *)(a1 + 8) = v9;
    if (!v9)
    {
      v10 = 1;
      *(_BYTE *)a1 = 1;
      goto LABEL_10;
    }
LABEL_9:
    v10 = 0;
LABEL_10:
    *a2 = v10;
    return;
  }
  __break(1u);
}

Swift::Void __swiftcall CompletionCounter.terminate()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 32);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v1 + 32));
  if ((*(_BYTE *)(v1 + 16) & 1) != 0)
  {
    os_unfair_lock_unlock((os_unfair_lock_t)(v1 + 32));
    swift_release();
  }
  else
  {
    *(_BYTE *)(v1 + 16) = 1;
    os_unfair_lock_unlock((os_unfair_lock_t)(v1 + 32));
    v2 = swift_release();
    (*(void (**)(uint64_t))(v0 + 16))(v2);
  }
}

_BYTE *sub_1CA2F3120@<X0>(_BYTE *result@<X0>, _BYTE *a2@<X8>)
{
  if ((*result & 1) != 0)
  {
    *a2 = 0;
  }
  else
  {
    *result = 1;
    *a2 = 1;
  }
  return result;
}

uint64_t CompletionCounter.deinit()
{
  uint64_t v0;

  swift_release();
  swift_release();
  return v0;
}

uint64_t CompletionCounter.__deallocating_deinit()
{
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CompletionCounter()
{
  return objc_opt_self();
}

uint64_t method lookup function for CompletionCounter()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of CompletionCounter.__allocating_init(count:completionHandler:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t getEnumTagSinglePayload for CompletionCounter.CompletionState(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && a1[16])
    return (*(_DWORD *)a1 + 255);
  v3 = *a1;
  v4 = v3 >= 2;
  v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for CompletionCounter.CompletionState(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)result = a2 - 255;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_BYTE *)result = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for CompletionCounter.CompletionState()
{
  return &type metadata for CompletionCounter.CompletionState;
}

id FlexMusicCurationParameters.__allocating_init(with:moodKeywords:recentlyUsedSongs:entityUUID:useMoodKeywords:features:musicCuratorContext:)(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, char a6, void *a7, void *a8)
{
  objc_class *v8;
  id v17;
  id v18;

  v17 = objc_allocWithZone(v8);
  v18 = sub_1CA2F4048(a1, a2, a3, a4, a5, a6, a7, (uint64_t)a8);

  return v18;
}

id FlexMusicCurationParameters.init(with:moodKeywords:recentlyUsedSongs:entityUUID:useMoodKeywords:features:musicCuratorContext:)(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, char a6, void *a7, void *a8)
{
  id v11;

  v11 = sub_1CA2F4048(a1, a2, a3, a4, a5, a6, a7, (uint64_t)a8);

  return v11;
}

id FlexMusicCurationParameters.__allocating_init(with:moodKeywords:recentlyUsedSongs:entityUUID:useMoodKeywords:features:musicCuratorContext:genre:)(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, char a6, void *a7, void *a8, uint64_t a9, uint64_t a10)
{
  objc_class *v10;
  id v18;
  id v19;

  v18 = objc_allocWithZone(v10);
  v19 = sub_1CA2F4168(a1, a2, a3, a4, a5, a6, a7, (uint64_t)a8, a9, a10);

  return v19;
}

id FlexMusicCurationParameters.init(with:moodKeywords:recentlyUsedSongs:entityUUID:useMoodKeywords:features:musicCuratorContext:genre:)(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, char a6, void *a7, void *a8, uint64_t a9, uint64_t a10)
{
  id v13;

  v13 = sub_1CA2F4168(a1, a2, a3, a4, a5, a6, a7, (uint64_t)a8, a9, a10);

  return v13;
}

void FlexMusicCurationParameters.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

float static FlexMusicCurator.minimumAllowableScore.getter()
{
  return 1.0e-16;
}

id static FlexMusicCurator.curateFlexMusic(with:progressReporter:)(_BYTE *a1, NSObject *a2)
{
  return sub_1CA2F4700(a1, a2);
}

BOOL sub_1CA2F37A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v4;
  id v5;
  id v6;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8710D0);
  v4 = (void *)sub_1CA85BCC0();
  if (objc_msgSend(v4, sel_respondsToSelector_, a3))
  {
    v5 = objc_msgSend((id)swift_unknownObjectRetain(), sel_performSelector_, a3);
    v6 = v4;
    swift_unknownObjectRelease();
    return v5 == 0;
  }
  else
  {
    swift_unknownObjectRelease();
    return 0;
  }
}

uint64_t sub_1CA2F3828(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t (*v5)(__int128 *, uint64_t);
  char v6;
  __int128 v8;
  __int128 v9;

  v3 = a3;
  v5 = *(uint64_t (**)(__int128 *, uint64_t))(a1 + 32);
  if (!a2)
  {
    v8 = 0u;
    v9 = 0u;
    if (!a3)
      goto LABEL_4;
    goto LABEL_3;
  }
  *((_QWORD *)&v9 + 1) = swift_getObjectType();
  *(_QWORD *)&v8 = a2;
  if (v3)
LABEL_3:
    v3 = sub_1CA85B414();
LABEL_4:
  swift_retain();
  swift_unknownObjectRetain();
  v6 = v5(&v8, v3);
  swift_release();
  swift_bridgeObjectRelease();
  sub_1CA2F0DBC((uint64_t)&v8);
  return v6 & 1;
}

uint64_t static FlexMusicCurator.allFlexSongs()()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  id v6;
  uint64_t v7;
  _BYTE v9[40];

  if (qword_1ED873048 != -1)
    swift_once();
  v0 = qword_1ED87D080;
  *(double *)&v1 = CACurrentMediaTime();
  sub_1CA2E4280("FetchAllFlexSongs", 17, 2u, v1, 0, v0, (uint64_t)v9);
  if (qword_1ED8731A0 != -1)
    swift_once();
  swift_beginAccess();
  v2 = (void *)qword_1ED872B88;
  v3 = objc_allocWithZone(MEMORY[0x1E0D22258]);
  v4 = v2;
  v5 = objc_msgSend(v3, sel_init);
  v6 = objc_msgSend(v4, sel_fetchSongsWithOptions_, v5);
  sub_1CA2F5910();
  v7 = sub_1CA85B7B0();

  sub_1CA2E0C94(0);
  swift_release();
  swift_release();
  return v7;
}

id FlexMusicCurator.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id FlexMusicCurator.init()()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_init);
}

uint64_t sub_1CA2F3AE4(uint64_t a1)
{
  uint64_t result;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t i;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t *v16;
  int v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED872540);
  result = sub_1CA85C0A4();
  v3 = (_QWORD *)result;
  v4 = 0;
  v5 = a1 + 64;
  v6 = 1 << *(_BYTE *)(a1 + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(a1 + 64);
  v9 = (unint64_t)(v6 + 63) >> 6;
  v10 = result + 64;
  if (!v8)
    goto LABEL_5;
LABEL_4:
  v11 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (i = v11 | (v4 << 6); ; i = __clz(__rbit64(v14)) + (v4 << 6))
  {
    v16 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * i);
    v17 = *(_DWORD *)(*(_QWORD *)(a1 + 56) + 8 * i);
    v18 = *v16;
    result = v16[1];
    *(_QWORD *)(v10 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    v19 = (_QWORD *)(v3[6] + 16 * i);
    *v19 = v18;
    v19[1] = result;
    *(_DWORD *)(v3[7] + 4 * i) = v17;
    v20 = v3[2];
    v21 = __OFADD__(v20, 1);
    v22 = v20 + 1;
    if (v21)
    {
      __break(1u);
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    v3[2] = v22;
    result = swift_bridgeObjectRetain();
    if (v8)
      goto LABEL_4;
LABEL_5:
    v13 = v4 + 1;
    if (__OFADD__(v4, 1))
      goto LABEL_24;
    if (v13 >= v9)
      return (uint64_t)v3;
    v14 = *(_QWORD *)(v5 + 8 * v13);
    ++v4;
    if (!v14)
    {
      v4 = v13 + 1;
      if (v13 + 1 >= v9)
        return (uint64_t)v3;
      v14 = *(_QWORD *)(v5 + 8 * v4);
      if (!v14)
      {
        v4 = v13 + 2;
        if (v13 + 2 >= v9)
          return (uint64_t)v3;
        v14 = *(_QWORD *)(v5 + 8 * v4);
        if (!v14)
          break;
      }
    }
LABEL_18:
    v8 = (v14 - 1) & v14;
  }
  v15 = v13 + 3;
  if (v15 >= v9)
    return (uint64_t)v3;
  v14 = *(_QWORD *)(v5 + 8 * v15);
  if (v14)
  {
    v4 = v15;
    goto LABEL_18;
  }
  while (1)
  {
    v4 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v4 >= v9)
      return (uint64_t)v3;
    v14 = *(_QWORD *)(v5 + 8 * v4);
    ++v15;
    if (v14)
      goto LABEL_18;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_1CA2F3C90(uint64_t a1)
{
  uint64_t result;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t i;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t *v16;
  uint64_t v17;
  int v18;
  _QWORD *v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED872540);
  result = sub_1CA85C0A4();
  v3 = (_QWORD *)result;
  v4 = 0;
  v5 = a1 + 64;
  v6 = 1 << *(_BYTE *)(a1 + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(a1 + 64);
  v9 = (unint64_t)(v6 + 63) >> 6;
  v10 = result + 64;
  if (!v8)
    goto LABEL_5;
LABEL_4:
  v11 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (i = v11 | (v4 << 6); ; i = __clz(__rbit64(v14)) + (v4 << 6))
  {
    v16 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * i);
    v17 = *v16;
    result = v16[1];
    v18 = *(_DWORD *)(*(_QWORD *)(a1 + 56) + 8 * i + 4);
    *(_QWORD *)(v10 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    v19 = (_QWORD *)(v3[6] + 16 * i);
    *v19 = v17;
    v19[1] = result;
    *(_DWORD *)(v3[7] + 4 * i) = v18;
    v20 = v3[2];
    v21 = __OFADD__(v20, 1);
    v22 = v20 + 1;
    if (v21)
    {
      __break(1u);
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    v3[2] = v22;
    result = swift_bridgeObjectRetain();
    if (v8)
      goto LABEL_4;
LABEL_5:
    v13 = v4 + 1;
    if (__OFADD__(v4, 1))
      goto LABEL_24;
    if (v13 >= v9)
      return (uint64_t)v3;
    v14 = *(_QWORD *)(v5 + 8 * v13);
    ++v4;
    if (!v14)
    {
      v4 = v13 + 1;
      if (v13 + 1 >= v9)
        return (uint64_t)v3;
      v14 = *(_QWORD *)(v5 + 8 * v4);
      if (!v14)
      {
        v4 = v13 + 2;
        if (v13 + 2 >= v9)
          return (uint64_t)v3;
        v14 = *(_QWORD *)(v5 + 8 * v4);
        if (!v14)
          break;
      }
    }
LABEL_18:
    v8 = (v14 - 1) & v14;
  }
  v15 = v13 + 3;
  if (v15 >= v9)
    return (uint64_t)v3;
  v14 = *(_QWORD *)(v5 + 8 * v15);
  if (v14)
  {
    v4 = v15;
    goto LABEL_18;
  }
  while (1)
  {
    v4 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v4 >= v9)
      return (uint64_t)v3;
    v14 = *(_QWORD *)(v5 + 8 * v4);
    ++v15;
    if (v14)
      goto LABEL_18;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t _s11PhotosGraph16FlexMusicCuratorC06usableC5SongsSaySo6FMSongCGyFZ_0()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  uint64_t v6;
  void *v7;
  id v8;
  id v9;
  uint64_t v10;
  _QWORD v12[6];
  _BYTE v13[40];

  if (qword_1ED873048 != -1)
    swift_once();
  v0 = qword_1ED87D080;
  *(double *)&v1 = CACurrentMediaTime();
  sub_1CA2E4280("FetchUsableFlexSongs", 20, 2u, v1, 0, v0, (uint64_t)v13);
  if (qword_1ED8731A0 != -1)
    swift_once();
  swift_beginAccess();
  v2 = (void *)qword_1ED872B88;
  v3 = objc_allocWithZone(MEMORY[0x1E0D22258]);
  v4 = v2;
  v5 = objc_msgSend(v3, sel_init);
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = sel_hidden;
  v12[4] = sub_1CA2F5A4C;
  v12[5] = v6;
  v12[0] = MEMORY[0x1E0C809B0];
  v12[1] = 1107296256;
  v12[2] = sub_1CA2F3828;
  v12[3] = &block_descriptor_5;
  v7 = _Block_copy(v12);
  v8 = objc_msgSend((id)objc_opt_self(), sel_predicateWithBlock_, v7);
  _Block_release(v7);
  swift_release();
  objc_msgSend(v5, sel_setPredicate_, v8);

  v9 = objc_msgSend(v4, sel_fetchSongsWithOptions_, v5);
  sub_1CA2F5910();
  v10 = sub_1CA85B7B0();

  sub_1CA2E0C94(0);
  swift_release();
  swift_release();
  return v10;
}

id sub_1CA2F4048(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, char a6, void *a7, uint64_t a8)
{
  _BYTE *v8;
  _BYTE *v9;
  objc_class *ObjectType;
  _QWORD *v19;
  id v20;
  _BYTE *v21;
  id v22;
  uint64_t v23;
  _QWORD *v24;
  objc_super v26;

  v9 = v8;
  ObjectType = (objc_class *)swift_getObjectType();
  *(_QWORD *)&v9[OBJC_IVAR___PGFlexMusicCurationParameters_mood] = a1;
  *(_QWORD *)&v9[OBJC_IVAR___PGFlexMusicCurationParameters_moodKeywords] = a2;
  *(_QWORD *)&v9[OBJC_IVAR___PGFlexMusicCurationParameters_recentlyUsedSongs] = a3;
  v19 = &v9[OBJC_IVAR___PGFlexMusicCurationParameters_entityUUID];
  *v19 = a4;
  v19[1] = a5;
  v9[OBJC_IVAR___PGFlexMusicCurationParameters_useMoodKeywords] = a6;
  *(_QWORD *)&v9[OBJC_IVAR___PGFlexMusicCurationParameters_features] = a7;
  v20 = a7;
  v21 = v9;
  v22 = a3;
  if (a8)
    v23 = sub_1CA3EA37C();
  else
    v23 = _s11PhotosGraph16FlexMusicCuratorC06usableC5SongsSaySo6FMSongCGyFZ_0();
  *(_QWORD *)&v9[OBJC_IVAR___PGFlexMusicCurationParameters_flexMusicSongs] = v23;
  v24 = &v9[OBJC_IVAR___PGFlexMusicCurationParameters_genre];
  *v24 = 0;
  v24[1] = 0xE000000000000000;

  v26.receiver = v9;
  v26.super_class = ObjectType;
  return objc_msgSendSuper2(&v26, sel_init);
}

id sub_1CA2F4168(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, char a6, void *a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  _BYTE *v10;
  _BYTE *v11;
  _QWORD *v20;
  id v21;
  _BYTE *v22;
  id v23;
  uint64_t v24;
  _QWORD *v25;
  objc_class *ObjectType;
  objc_super v28;

  v11 = v10;
  ObjectType = (objc_class *)swift_getObjectType();
  *(_QWORD *)&v11[OBJC_IVAR___PGFlexMusicCurationParameters_mood] = a1;
  *(_QWORD *)&v11[OBJC_IVAR___PGFlexMusicCurationParameters_moodKeywords] = a2;
  *(_QWORD *)&v11[OBJC_IVAR___PGFlexMusicCurationParameters_recentlyUsedSongs] = a3;
  v20 = &v11[OBJC_IVAR___PGFlexMusicCurationParameters_entityUUID];
  *v20 = a4;
  v20[1] = a5;
  v11[OBJC_IVAR___PGFlexMusicCurationParameters_useMoodKeywords] = a6;
  *(_QWORD *)&v11[OBJC_IVAR___PGFlexMusicCurationParameters_features] = a7;
  v21 = a7;
  v22 = v11;
  v23 = a3;
  if (a8)
    v24 = sub_1CA3EA37C();
  else
    v24 = _s11PhotosGraph16FlexMusicCuratorC06usableC5SongsSaySo6FMSongCGyFZ_0();
  *(_QWORD *)&v11[OBJC_IVAR___PGFlexMusicCurationParameters_flexMusicSongs] = v24;
  v25 = &v11[OBJC_IVAR___PGFlexMusicCurationParameters_genre];
  *v25 = a9;
  v25[1] = a10;

  v28.receiver = v11;
  v28.super_class = ObjectType;
  return objc_msgSendSuper2(&v28, sel_init);
}

uint64_t sub_1CA2F4298(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  BOOL v25;
  uint64_t v26;
  _QWORD *v27;
  BOOL v28;
  unint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  int64_t v34;
  uint64_t v36;

  v31 = (unint64_t *)result;
  v32 = 0;
  v5 = 0;
  v8 = *(_QWORD *)(a3 + 64);
  v6 = a3 + 64;
  v7 = v8;
  v9 = 1 << *(_BYTE *)(v6 - 32);
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & v7;
  v33 = v6;
  v34 = (unint64_t)(v9 + 63) >> 6;
  v36 = a4 + 56;
  while (1)
  {
    while (v11)
    {
      v12 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v13 = v12 | (v5 << 6);
      if (!*(_QWORD *)(a4 + 16))
        goto LABEL_38;
LABEL_23:
      v17 = (uint64_t *)(*(_QWORD *)(a3 + 48) + 16 * v13);
      v19 = *v17;
      v18 = v17[1];
      sub_1CA85C368();
      swift_bridgeObjectRetain();
      sub_1CA85B4B0();
      v20 = sub_1CA85C3B0();
      v21 = -1 << *(_BYTE *)(a4 + 32);
      v22 = v20 & ~v21;
      if (((*(_QWORD *)(v36 + ((v22 >> 3) & 0xFFFFFFFFFFFFF8)) >> v22) & 1) == 0)
        goto LABEL_37;
      v23 = *(_QWORD *)(a4 + 48);
      v24 = (_QWORD *)(v23 + 16 * v22);
      v25 = *v24 == v19 && v24[1] == v18;
      if (!v25 && (sub_1CA85C284() & 1) == 0)
      {
        v26 = ~v21;
        while (1)
        {
          v22 = (v22 + 1) & v26;
          if (((*(_QWORD *)(v36 + ((v22 >> 3) & 0xFFFFFFFFFFFFF8)) >> v22) & 1) == 0)
            break;
          v27 = (_QWORD *)(v23 + 16 * v22);
          v28 = *v27 == v19 && v27[1] == v18;
          if (v28 || (sub_1CA85C284() & 1) != 0)
            goto LABEL_5;
        }
LABEL_37:
        result = swift_bridgeObjectRelease();
        goto LABEL_38;
      }
LABEL_5:
      result = swift_bridgeObjectRelease();
    }
    v14 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
      __break(1u);
      goto LABEL_43;
    }
    if (v14 >= v34)
      return sub_1CA446D6C(v31, a2, v32, a3);
    v15 = *(_QWORD *)(v33 + 8 * v14);
    ++v5;
    if (!v15)
    {
      v5 = v14 + 1;
      if (v14 + 1 >= v34)
        return sub_1CA446D6C(v31, a2, v32, a3);
      v15 = *(_QWORD *)(v33 + 8 * v5);
      if (!v15)
      {
        v5 = v14 + 2;
        if (v14 + 2 >= v34)
          return sub_1CA446D6C(v31, a2, v32, a3);
        v15 = *(_QWORD *)(v33 + 8 * v5);
        if (!v15)
          break;
      }
    }
LABEL_22:
    v11 = (v15 - 1) & v15;
    v13 = __clz(__rbit64(v15)) + (v5 << 6);
    if (*(_QWORD *)(a4 + 16))
      goto LABEL_23;
LABEL_38:
    *(unint64_t *)((char *)v31 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    if (__OFADD__(v32++, 1))
    {
      __break(1u);
      return sub_1CA446D6C(v31, a2, v32, a3);
    }
  }
  v16 = v14 + 3;
  if (v16 >= v34)
    return sub_1CA446D6C(v31, a2, v32, a3);
  v15 = *(_QWORD *)(v33 + 8 * v16);
  if (v15)
  {
    v5 = v16;
    goto LABEL_22;
  }
  while (1)
  {
    v5 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v5 >= v34)
      return sub_1CA446D6C(v31, a2, v32, a3);
    v15 = *(_QWORD *)(v33 + 8 * v5);
    ++v16;
    if (v15)
      goto LABEL_22;
  }
LABEL_43:
  __break(1u);
  return result;
}

uint64_t sub_1CA2F454C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char v5;
  unsigned int v6;
  unint64_t v7;
  size_t v8;
  uint64_t isStackAllocationSafe;
  uint64_t v10;
  void *v11;
  _QWORD v13[2];

  v13[1] = *MEMORY[0x1E0C80C00];
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v7 = (unint64_t)((1 << v5) + 63) >> 6;
  v8 = 8 * v7;
  isStackAllocationSafe = swift_bridgeObjectRetain_n();
  if (v6 <= 0xD || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1E0C80A78](isStackAllocationSafe);
    bzero((char *)v13 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0), v8);
    swift_bridgeObjectRetain();
    v10 = sub_1CA2F4298((uint64_t)v13 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0), v7, a1, a2);
    swift_bridgeObjectRelease();
    if (v2)
      swift_willThrow();
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v11 = (void *)swift_slowAlloc();
    bzero(v11, v8);
    swift_bridgeObjectRetain();
    v10 = sub_1CA2F4298((uint64_t)v11, v7, a1, a2);
    swift_bridgeObjectRelease();
    MEMORY[0x1CAA4F27C](v11, -1, -1);
    swift_bridgeObjectRelease_n();
  }
  return v10;
}

id sub_1CA2F4700(_BYTE *a1, NSObject *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  unint64_t v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  id v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  NSObject *v34;
  os_log_type_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  NSObject *v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  NSObject *v43;
  void *v44;
  _UNKNOWN **v45;
  ValueMetadata *v46;
  _UNKNOWN **v47;
  uint64_t v48;
  ValueMetadata *v49;
  id v50;
  uint64_t v51;
  id v52;
  void *v53;
  id result;
  void *v55;
  uint64_t v56;
  _UNKNOWN **v57;
  uint64_t v58;
  unint64_t v59;
  float (*v60)(_QWORD, _QWORD, _QWORD);
  id v61;
  float v62;
  uint64_t v63;
  _UNKNOWN **v64;
  float (*v65)(_QWORD, _QWORD, _QWORD);
  id v66;
  float v67;
  uint64_t v68;
  _UNKNOWN **v69;
  unint64_t v70;
  uint64_t v71;
  float (*v72)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD);
  id v73;
  float v74;
  uint64_t v75;
  _UNKNOWN **v76;
  float (*v77)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD);
  id v78;
  float v79;
  uint64_t v80;
  _UNKNOWN **v81;
  float (*v82)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD);
  id v83;
  float v84;
  uint64_t v85;
  unint64_t v86;
  uint64_t v87;
  _UNKNOWN **v88;
  float (*v89)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD);
  id v90;
  float v91;
  float v92;
  float v93;
  float v94;
  float v95;
  float v96;
  uint64_t v97;
  uint64_t v98;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v100;
  void *v101;
  char v102;
  NSObject *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  _UNKNOWN **v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  _UNKNOWN **v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t *v117;
  _QWORD *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  char v122;
  id v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t *v127;
  _QWORD *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  char v132;
  id v133;
  uint64_t v134;
  objc_class *v135;
  char *v136;
  NSObject *v137;
  _BYTE *v138;
  _QWORD v139[2];
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  id v143;
  id v144;
  id v145;
  uint64_t v146;
  unint64_t v147;
  unint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  unint64_t v152;
  void *v153;
  uint64_t v154;
  char *v155;
  unint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  id v162;
  NSObject *v163;
  uint64_t v164;
  _QWORD *v165;
  objc_super v166;
  _QWORD v167[3];
  unint64_t v168;
  _UNKNOWN **v169;
  __int128 v170;
  __int128 v171;
  _UNKNOWN **v172;
  uint64_t v173;
  unint64_t v174;
  ValueMetadata *v175;
  _UNKNOWN **v176;
  uint64_t v177;
  unint64_t v178;
  char v179[40];
  char v180[40];

  v4 = sub_1CA85A5B0();
  v141 = *(_QWORD *)(v4 - 8);
  v142 = v4;
  MEMORY[0x1E0C80A78](v4);
  v155 = (char *)v139 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1CA85A694();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v139 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED872F98 != -1)
LABEL_84:
    swift_once();
  v10 = qword_1ED87D0F0;
  *(double *)&v11 = CACurrentMediaTime();
  sub_1CA2E4280("FlexMusicCurator - curateFlexMusicWithCurationParameters", 56, 2u, v11, 0, v10, (uint64_t)v179);
  v12 = *(_QWORD *)&a1[OBJC_IVAR___PGFlexMusicCurationParameters_mood];
  v13 = *(_QWORD **)&a1[OBJC_IVAR___PGFlexMusicCurationParameters_moodKeywords];
  v151 = *(_QWORD *)&a1[OBJC_IVAR___PGFlexMusicCurationParameters_recentlyUsedSongs];
  v162 = *(id *)&a1[OBJC_IVAR___PGFlexMusicCurationParameters_features];
  v14 = *(_QWORD *)&a1[OBJC_IVAR___PGFlexMusicCurationParameters_entityUUID + 8];
  v140 = *(_QWORD *)&a1[OBJC_IVAR___PGFlexMusicCurationParameters_entityUUID];
  v15 = *(_QWORD *)&a1[OBJC_IVAR___PGFlexMusicCurationParameters_genre + 8];
  v154 = *(_QWORD *)&a1[OBJC_IVAR___PGFlexMusicCurationParameters_genre];
  v156 = v15;
  v157 = v14;
  v165 = v13;
  swift_bridgeObjectRetain();
  v16 = (void *)sub_1CA85BBA0();
  v144 = v17;
  v145 = v16;
  v19 = v18;
  v21 = v20;
  v22 = *(_QWORD *)&a1[OBJC_IVAR___PGFlexMusicCurationParameters_flexMusicSongs];
  v23 = v22 >> 62;
  if (!(v22 >> 62))
  {
    v24 = *(_QWORD *)((v22 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v24 >= 1)
      goto LABEL_4;
LABEL_86:
    swift_bridgeObjectRelease();
    sub_1CA2F59B0();
    swift_allocError();
    *v138 = 0;
    swift_willThrow();

    swift_release();
    swift_release();
    return (id)v6;
  }
  v152 = *(_QWORD *)&a1[OBJC_IVAR___PGFlexMusicCurationParameters_flexMusicSongs];
  v161 = v22 >> 62;
  swift_bridgeObjectRetain();
  v149 = sub_1CA85C08C();
  swift_bridgeObjectRelease();
  v23 = v161;
  v24 = v149;
  v22 = v152;
  if (v149 < 1)
    goto LABEL_86;
LABEL_4:
  v161 = v23;
  v149 = v24;
  v152 = v22;
  v139[1] = a2;
  v143 = v21;
  v177 = 0;
  v178 = 0;
  sub_1CA85A664();
  v25 = (void *)sub_1CA85A628();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v26 = objc_msgSend(v25, sel_objectForKey_, *MEMORY[0x1E0C997B0]);

  if (v26)
  {
    sub_1CA85BD5C();
    swift_unknownObjectRelease();
  }
  else
  {
    v170 = 0u;
    v171 = 0u;
  }
  v27 = v156;
  sub_1CA2F59F4((uint64_t)&v170, (uint64_t)&v173);
  if (v175)
  {
    if ((swift_dynamicCast() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      v173 = sub_1CA85B534();
      v174 = v28;
      sub_1CA85B624();
      swift_bridgeObjectRelease();
      v177 = v173;
      v178 = v174;
    }
  }
  else
  {
    sub_1CA2F0DBC((uint64_t)&v173);
  }
  v153 = v19;
  sub_1CA42F828(v12);
  v173 = sub_1CA85B534();
  v174 = v29;
  sub_1CA85B624();
  swift_bridgeObjectRelease();
  v30 = v174;
  v150 = v173;
  if (qword_1ED872118 != -1)
    swift_once();
  v31 = sub_1CA85B348();
  __swift_project_value_buffer(v31, (uint64_t)qword_1ED87D010);
  v32 = v177;
  v33 = v178;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v34 = sub_1CA85B330();
  v35 = sub_1CA85BAC8();
  v6 = v35;
  v163 = v34;
  if (os_log_type_enabled(v34, v35))
  {
    v36 = swift_slowAlloc();
    LODWORD(v160) = v6;
    v6 = v36;
    v159 = swift_slowAlloc();
    v173 = v159;
    *(_DWORD *)v6 = 136315650;
    if (v33)
      v37 = v32;
    else
      v37 = 7104878;
    if (v33)
      v38 = v33;
    else
      v38 = 0xE300000000000000;
    swift_bridgeObjectRetain();
    *(_QWORD *)&v170 = sub_1CA28712C(v37, v38, &v173);
    sub_1CA85BCF0();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v6 + 12) = 2080;
    swift_bridgeObjectRetain();
    *(_QWORD *)&v170 = sub_1CA28712C(v150, v30, &v173);
    sub_1CA85BCF0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v6 + 22) = 2080;
    swift_bridgeObjectRetain();
    *(_QWORD *)&v170 = sub_1CA28712C(v154, v27, &v173);
    sub_1CA85BCF0();
    swift_bridgeObjectRelease_n();
    v39 = v163;
    _os_log_impl(&dword_1CA237000, v163, (os_log_type_t)v160, "[FlexMusicCurator] (FlexMusicCurator) Curating flex music with regionTagID '%s' and moodTagID '%s'. genre: %s", (uint8_t *)v6, 0x20u);
    v40 = v159;
    swift_arrayDestroy();
    MEMORY[0x1CAA4F27C](v40, -1, -1);
    MEMORY[0x1CAA4F27C](v6, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  v41 = v157;
  v42 = v145;
  v43 = v164;
  sub_1CA85BB70();
  a2 = v43;
  v44 = v153;
  if (v43)
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    goto LABEL_58;
  }
  sub_1CA2E4280("FlexMusicCurator - curateFlexMusicWithCurationParameters - scoreSongs", 69, 2u, 0, 1, qword_1ED87D0F0, (uint64_t)v180);
  sub_1CA85A5A4();
  if ((a1[OBJC_IVAR___PGFlexMusicCurationParameters_useMoodKeywords] & 1) != 0)
  {
    v45 = &off_1E841BFE8;
    v46 = &type metadata for RandomizedScoreRanker;
    v47 = &off_1E8404160;
    v48 = (uint64_t)v165;
    v49 = &type metadata for MoodKeywordScoreComputer;
  }
  else
  {
    swift_bridgeObjectRelease();
    v48 = (uint64_t)v162;
    v50 = v162;
    v45 = &off_1E841BED8;
    v46 = &type metadata for OrderedScoreRanker;
    v47 = &off_1E841BBC8;
    v49 = &type metadata for MaestroKeywordScoreComputer;
  }
  v175 = v49;
  v176 = v47;
  v173 = v48;
  *((_QWORD *)&v171 + 1) = v46;
  v172 = v45;
  if (!v161)
  {
    v6 = *(_QWORD *)((v152 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    v148 = v30;
    if (v6)
      goto LABEL_29;
LABEL_55:
    a1 = (_BYTE *)MEMORY[0x1E0DEE9E0];
    v51 = MEMORY[0x1E0DEE9E0];
LABEL_56:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1CA2E0C94(0);
    sub_1CA85BB70();
    v165 = a1;
    v104 = sub_1CA2F3AE4(v51);
    v105 = sub_1CA2F3C90(v51);
    v164 = v51;
    v106 = *((_QWORD *)&v171 + 1);
    v107 = v172;
    __swift_project_boxed_opaque_existential_1(&v170, *((uint64_t *)&v171 + 1));
    v108 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, id, uint64_t, _UNKNOWN **))v107[1])(v104, v105, 12, v140, v41, v144, v106, v107);
    swift_release();
    v109 = swift_bridgeObjectRetain();
    v110 = sub_1CA2877D4(v109);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    v111 = sub_1CA2F454C(v105, v110);
    swift_release();
    swift_bridgeObjectRelease_n();
    v112 = *((_QWORD *)&v171 + 1);
    v113 = v172;
    __swift_project_boxed_opaque_existential_1(&v170, *((uint64_t *)&v171 + 1));
    v114 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, id, uint64_t, _UNKNOWN **))v113[2])(v111, 12, v140, v157, v143, v112, v113);
    v163 = 0;
    swift_release();
    v115 = MEMORY[0x1E0DEE9D8];
    v167[0] = MEMORY[0x1E0DEE9D8];
    v116 = *(_QWORD *)(v108 + 16);
    if (v116)
    {
      swift_bridgeObjectRetain();
      v117 = (uint64_t *)(v108 + 40);
      v118 = v165;
      do
      {
        if (v118[2])
        {
          v119 = *(v117 - 1);
          v120 = *v117;
          swift_bridgeObjectRetain_n();
          v121 = sub_1CA25081C(v119, v120);
          if ((v122 & 1) != 0)
          {
            v123 = *(id *)(v118[7] + 8 * v121);
            v124 = swift_bridgeObjectRelease_n();
            MEMORY[0x1CAA4D5F0](v124);
            if (*(_QWORD *)((v167[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v167[0] & 0xFFFFFFFFFFFFFF8)
                                                                                  + 0x18) >> 1)
              sub_1CA85B7EC();
            sub_1CA85B834();
            sub_1CA85B7C8();
            v118 = v165;
          }
          else
          {
            swift_bridgeObjectRelease_n();
          }
        }
        v117 += 2;
        --v116;
      }
      while (v116);
      swift_bridgeObjectRelease();
      v125 = v167[0];
      v44 = v153;
    }
    else
    {
      v125 = MEMORY[0x1E0DEE9D8];
      v118 = v165;
    }
    swift_bridgeObjectRelease();
    v167[0] = v115;
    v126 = *(_QWORD *)(v114 + 16);
    if (v126)
    {
      swift_bridgeObjectRetain();
      v127 = (uint64_t *)(v114 + 40);
      do
      {
        if (v118[2])
        {
          v128 = v118;
          v129 = *(v127 - 1);
          v130 = *v127;
          swift_bridgeObjectRetain_n();
          v131 = sub_1CA25081C(v129, v130);
          if ((v132 & 1) != 0)
          {
            v133 = *(id *)(v128[7] + 8 * v131);
            v134 = swift_bridgeObjectRelease_n();
            MEMORY[0x1CAA4D5F0](v134);
            if (*(_QWORD *)((v167[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v167[0] & 0xFFFFFFFFFFFFFF8)
                                                                                  + 0x18) >> 1)
              sub_1CA85B7EC();
            sub_1CA85B834();
            sub_1CA85B7C8();
            v118 = v165;
          }
          else
          {
            swift_bridgeObjectRelease_n();
            v118 = v128;
          }
        }
        v127 += 2;
        --v126;
      }
      while (v126);
      swift_bridgeObjectRelease();
      v115 = v167[0];
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v135 = (objc_class *)type metadata accessor for FlexMusicCuration();
    v136 = (char *)objc_allocWithZone(v135);
    *(_QWORD *)&v136[OBJC_IVAR___PGFlexMusicCuration_curatorVersion] = 1;
    *(_QWORD *)&v136[OBJC_IVAR___PGFlexMusicCuration_bestSongSuggestions] = v125;
    *(_QWORD *)&v136[OBJC_IVAR___PGFlexMusicCuration_secondarySongSuggestions] = v115;
    v166.receiver = v136;
    v166.super_class = v135;
    v6 = (uint64_t)objc_msgSendSuper2(&v166, sel_init);
    v137 = v163;
    sub_1CA85BB70();
    if (!v137)
    {
      sub_1CA2E0C94(0);
      swift_release();

      swift_release();
      swift_release();
      swift_release();
      (*(void (**)(char *, uint64_t))(v141 + 8))(v155, v142);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v170);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v173);
      swift_bridgeObjectRelease();
      return (id)v6;
    }
    swift_release();

    swift_release();
    swift_release();

    swift_release();
    (*(void (**)(char *, uint64_t))(v141 + 8))(v155, v142);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v170);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v173);
LABEL_58:
    swift_bridgeObjectRelease();
    return (id)v6;
  }
  swift_bridgeObjectRetain();
  v6 = sub_1CA85C08C();
  v148 = v30;
  if (!v6)
    goto LABEL_55;
LABEL_29:
  v147 = v152 & 0xC000000000000001;
  swift_beginAccess();
  a1 = (_BYTE *)MEMORY[0x1E0DEE9E0];
  v7 = 4;
  v51 = MEMORY[0x1E0DEE9E0];
  v146 = v6;
  while (1)
  {
    if (v147)
      v52 = (id)MEMORY[0x1CAA4DD64](v7 - 4, v152);
    else
      v52 = *(id *)(v152 + 8 * v7);
    v53 = v52;
    v9 = (char *)&off_1E841C7F0;
    if (__OFADD__(v7 - 4, 1))
    {
      __break(1u);
      goto LABEL_84;
    }
    v158 = v7 - 3;
    v159 = v7;
    v162 = (id)(v7 - 4);
    v163 = 0;
    v164 = v51;
    v165 = a1;
    result = objc_msgSend(v52, sel_uid_photos_only);
    if (!result)
      break;
    v55 = result;
    v160 = sub_1CA85B534();
    v161 = v56;

    v58 = (uint64_t)v175;
    v57 = v176;
    __swift_project_boxed_opaque_existential_1(&v173, (uint64_t)v175);
    v59 = sub_1CA2F5910();
    v168 = v59;
    v169 = &off_1E841C7F0;
    v167[0] = v53;
    v60 = (float (*)(_QWORD, _QWORD, _QWORD))v57[1];
    v61 = v53;
    v62 = v60(v167, v58, v57);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v167);
    v63 = (uint64_t)v175;
    v64 = v176;
    __swift_project_boxed_opaque_existential_1(&v173, (uint64_t)v175);
    v168 = v59;
    v169 = &off_1E841C7F0;
    v167[0] = v61;
    v65 = (float (*)(_QWORD, _QWORD, _QWORD))v64[2];
    v66 = v61;
    v67 = v65(v167, v63, v64);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v167);
    v68 = (uint64_t)v175;
    v69 = v176;
    __swift_project_boxed_opaque_existential_1(&v173, (uint64_t)v175);
    v168 = v59;
    v169 = &off_1E841C7F0;
    v167[0] = v66;
    v71 = v177;
    v70 = v178;
    v72 = (float (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))v69[3];
    swift_bridgeObjectRetain();
    v73 = v66;
    v74 = v72(v167, v71, v70, v68, v69);
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v167);
    v75 = (uint64_t)v175;
    v76 = v176;
    __swift_project_boxed_opaque_existential_1(&v173, (uint64_t)v175);
    v168 = v59;
    v169 = &off_1E841C7F0;
    v167[0] = v73;
    v77 = (float (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))v76[4];
    v78 = v73;
    v79 = v77(v167, v150, v148, v75, v76);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v167);
    v80 = (uint64_t)v175;
    v81 = v176;
    __swift_project_boxed_opaque_existential_1(&v173, (uint64_t)v175);
    v168 = v59;
    v169 = &off_1E841C7F0;
    v167[0] = v78;
    v82 = (float (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))v81[5];
    v83 = v78;
    v84 = v82(v167, v151, v155, v80, v81);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v167);
    v85 = v154;
    v86 = v156;
    if (sub_1CA85B5E8() < 1)
    {
      v93 = 0.0;
    }
    else
    {
      v87 = (uint64_t)v175;
      v88 = v176;
      __swift_project_boxed_opaque_existential_1(&v173, (uint64_t)v175);
      v168 = v59;
      v169 = &off_1E841C7F0;
      v167[0] = v83;
      v89 = (float (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))v88[6];
      v90 = v83;
      v91 = v89(v167, v85, v86, v87, v88);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v167);
      if (v79 >= 0.1)
        v92 = v79;
      else
        v92 = 0.1;
      if (v91 == 1.0)
        v93 = 1.0;
      else
        v93 = v91;
      if (v91 == 1.0)
        v79 = v92;
    }
    v44 = v153;
    v41 = v157;
    v94 = (float)(v84 * (float)((float)((float)((float)((float)(v62 * 40.0) + 1.0) * v67) * v74) * v84))
        * (float)((float)(v93 * 50.0) + 1.0);
    if ((float)(v79 * v94) > 1.0e-16)
      v95 = v79 * v94;
    else
      v95 = 1.0e-16;
    if (v94 > 1.0e-16)
      v96 = v94;
    else
      v96 = 1.0e-16;
    v97 = v161;
    swift_bridgeObjectRetain();
    v98 = v164;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v167[0] = v98;
    v100 = v160;
    sub_1CA25E2D8(v160, v97, isUniquelyReferenced_nonNull_native, v95, v96);
    v51 = v167[0];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v6 = (uint64_t)v83;
    v101 = v165;
    v102 = swift_isUniquelyReferenced_nonNull_native();
    v167[0] = v101;
    sub_1CA25E15C(v6, v100, v97, v102);
    a1 = (_BYTE *)v167[0];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v103 = v163;
    sub_1CA85BB58();
    a2 = v103;
    if (v103)
    {
      swift_release();

      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      swift_release();
      (*(void (**)(char *, uint64_t))(v141 + 8))(v155, v142);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v170);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v173);
      goto LABEL_58;
    }

    v7 = v159 + 1;
    v6 = v146;
    if (v158 == v146)
      goto LABEL_56;
  }
  __break(1u);
  return result;
}

unint64_t sub_1CA2F5910()
{
  unint64_t result;

  result = qword_1ED872B98;
  if (!qword_1ED872B98)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED872B98);
  }
  return result;
}

uint64_t type metadata accessor for FlexMusicCurationParameters()
{
  return objc_opt_self();
}

uint64_t method lookup function for FlexMusicCurationParameters()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FlexMusicCurationParameters.__allocating_init(with:moodKeywords:recentlyUsedSongs:entityUUID:useMoodKeywords:features:musicCuratorContext:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t dispatch thunk of FlexMusicCurationParameters.__allocating_init(with:moodKeywords:recentlyUsedSongs:entityUUID:useMoodKeywords:features:musicCuratorContext:genre:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 152))();
}

uint64_t type metadata accessor for FlexMusicCurator()
{
  return objc_opt_self();
}

unint64_t sub_1CA2F59B0()
{
  unint64_t result;

  result = qword_1EF94D188;
  if (!qword_1EF94D188)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8DB804, &type metadata for FlexMusicCurator.Error);
    atomic_store(result, (unint64_t *)&qword_1EF94D188);
  }
  return result;
}

uint64_t sub_1CA2F59F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8710D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1CA2F5A3C()
{
  return swift_deallocObject();
}

BOOL sub_1CA2F5A4C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1CA2F37A0(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t getEnumTagSinglePayload for FlexMusicCurator.SongScores(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 8))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for FlexMusicCurator.SongScores(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 8) = v3;
  return result;
}

ValueMetadata *type metadata accessor for FlexMusicCurator.SongScores()
{
  return &type metadata for FlexMusicCurator.SongScores;
}

uint64_t storeEnumTagSinglePayload for FlexMusicCurator.Error(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1CA2F5AF8 + 4 * byte_1CA8DB725[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1CA2F5B2C + 4 * asc_1CA8DB720[v4]))();
}

uint64_t sub_1CA2F5B2C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CA2F5B34(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1CA2F5B3CLL);
  return result;
}

uint64_t sub_1CA2F5B48(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1CA2F5B50);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1CA2F5B54(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CA2F5B5C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FlexMusicCurator.Error()
{
  return &type metadata for FlexMusicCurator.Error;
}

unint64_t sub_1CA2F5B7C()
{
  unint64_t result;

  result = qword_1EF94D190;
  if (!qword_1EF94D190)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8DB7DC, &type metadata for FlexMusicCurator.Error);
    atomic_store(result, (unint64_t *)&qword_1EF94D190);
  }
  return result;
}

uint64_t sub_1CA2F5BC4(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1CA2F5C04 + 4 * byte_1CA8DB850[a1]))(0x6C706D4920746F4ELL, 0xEF6465746E656D65);
}

unint64_t sub_1CA2F5C04()
{
  return 0xD000000000000028;
}

unint64_t sub_1CA2F5C24()
{
  return 0xD000000000000018;
}

uint64_t sub_1CA2F5C40()
{
  return 0x73676E6F53206F4ELL;
}

uint64_t sub_1CA2F5C64()
{
  unsigned __int8 *v0;

  return sub_1CA2F5BC4(*v0);
}

_QWORD *sub_1CA2F5D60()
{
  uint64_t v0;
  unint64_t i;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int64_t v17;
  const void *v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  objc_class *v33;
  char *v34;
  uint64_t v35;
  char *v36;
  id v37;
  uint64_t v38;
  NSObject *v39;
  os_log_type_t v40;
  uint8_t *v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  NSObject *v46;
  os_log_type_t v47;
  uint8_t *v48;
  const char *v49;
  uint64_t v50;
  os_log_type_t v51;
  _BYTE *v52;
  _QWORD v54[2];
  char *v55;
  char *v56;
  uint64_t v57;
  objc_super v58;
  _QWORD v59[37];
  uint64_t v60[38];
  uint64_t v61;

  v2 = type metadata accessor for Song();
  v3 = *(_QWORD **)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  v6 = (char *)v54 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x1E0C80A78](v4);
  v9 = (char *)v54 - v8;
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)v54 - v10;
  v12 = sub_1CA2F6480();
  if (!v0)
  {
    v54[1] = 0;
    v55 = v9;
    v13 = *(_QWORD *)(v12 + 16);
    v14 = MEMORY[0x1E0DEE9D8];
    v56 = v6;
    if (v13)
    {
      v61 = MEMORY[0x1E0DEE9D8];
      v57 = v12;
      sub_1CA3FB7FC(0, v13, 0);
      v15 = v57;
      v16 = v61;
      v17 = v13 - 1;
      for (i = 32; ; i += 296)
      {
        v18 = (const void *)(v15 + i);
        memcpy(v60, (const void *)(v15 + i), 0x128uLL);
        memcpy(v59, v18, sizeof(v59));
        sub_1CA2B6F24((uint64_t)v60);
        Song.init(_:)(v59, (uint64_t)v11);
        v61 = v16;
        v20 = *(_QWORD *)(v16 + 16);
        v19 = *(_QWORD *)(v16 + 24);
        if (v20 >= v19 >> 1)
        {
          sub_1CA3FB7FC(v19 > 1, v20 + 1, 1);
          v16 = v61;
        }
        *(_QWORD *)(v16 + 16) = v20 + 1;
        sub_1CA268478((uint64_t)v11, v16+ ((*((unsigned __int8 *)v3 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v3 + 80))+ v3[9] * v20);
        if (!v17)
          break;
        --v17;
        v15 = v57;
      }
      swift_bridgeObjectRelease();
      v14 = MEMORY[0x1E0DEE9D8];
      v6 = v56;
      v21 = *(_QWORD *)(v16 + 16);
      if (v21)
      {
LABEL_9:
        v22 = 0;
        v60[0] = v14;
        v23 = (uint64_t)v55;
        v57 = v21;
        do
        {
          if (v22 >= *(_QWORD *)(v16 + 16))
          {
            __break(1u);
            goto LABEL_46;
          }
          i = (*((unsigned __int8 *)v3 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v3 + 80);
          v24 = v3[9];
          sub_1CA268434(v16 + i + v24 * v22, v23);
          if ((*(_BYTE *)(v23 + 72) & 1) != 0)
          {
            sub_1CA268588(v23);
          }
          else
          {
            sub_1CA268478(v23, (uint64_t)v6);
            v25 = v60[0];
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_1CA3FB7FC(0, *(_QWORD *)(v25 + 16) + 1, 1);
              v25 = v60[0];
            }
            v27 = *(_QWORD *)(v25 + 16);
            v26 = *(_QWORD *)(v25 + 24);
            if (v27 >= v26 >> 1)
            {
              sub_1CA3FB7FC(v26 > 1, v27 + 1, 1);
              v25 = v60[0];
            }
            *(_QWORD *)(v25 + 16) = v27 + 1;
            v28 = v25 + i + v27 * v24;
            v6 = v56;
            sub_1CA268478((uint64_t)v56, v28);
            v23 = (uint64_t)v55;
            v21 = v57;
          }
          ++v22;
        }
        while (v21 != v22);
        swift_bridgeObjectRelease();
        v23 = v60[0];
        v29 = *(_QWORD *)(v60[0] + 16);
        if (v29)
        {
          if (v29 >= 9)
            v22 = 9;
          else
            v22 = *(_QWORD *)(v60[0] + 16);
          sub_1CA85C29C();
          swift_unknownObjectRetain_n();
          v30 = swift_dynamicCastClass();
          if (!v30)
          {
            swift_release();
            v30 = MEMORY[0x1E0DEE9D8];
          }
          v31 = *(_QWORD *)(v30 + 16);
          swift_release();
          if (v31 == v22)
          {
            v32 = swift_dynamicCastClass();
            if (!v32)
            {
              swift_release();
              v32 = MEMORY[0x1E0DEE9D8];
            }
            goto LABEL_28;
          }
LABEL_46:
          swift_release();
          v32 = sub_1CA243CB4(v23, v23 + i, 0, (2 * v22) | 1);
LABEL_28:
          swift_release();
          v33 = (objc_class *)type metadata accessor for MusicCuration();
          v34 = (char *)objc_allocWithZone(v33);
          *(_QWORD *)&v34[OBJC_IVAR___PGMusicCuration_curatorVersion] = 2;
          *(_QWORD *)&v34[OBJC_IVAR___PGMusicCuration_bestMusicSuggestions] = v32;
          v35 = MEMORY[0x1E0DEE9D8];
          *(_QWORD *)&v34[OBJC_IVAR___PGMusicCuration_musicForYou] = MEMORY[0x1E0DEE9D8];
          *(_QWORD *)&v34[OBJC_IVAR___PGMusicCuration_musicForLocation] = v35;
          *(_QWORD *)&v34[OBJC_IVAR___PGMusicCuration_musicForTime] = v35;
          *(_QWORD *)&v34[OBJC_IVAR___PGMusicCuration_musicForPerformer] = v35;
          v36 = &v34[OBJC_IVAR___PGMusicCuration_musicCurationInfo];
          *(_QWORD *)v36 = v35;
          *((_QWORD *)v36 + 1) = 0;
          *((_QWORD *)v36 + 2) = 0;
          *(_QWORD *)&v34[OBJC_IVAR___PGMusicCuration_musicCurationDebugInfo] = v35;
          v58.receiver = v34;
          v58.super_class = v33;
          v37 = objc_msgSendSuper2(&v58, sel_init);
          if (qword_1ED872118 != -1)
            swift_once();
          v38 = sub_1CA85B348();
          __swift_project_value_buffer(v38, (uint64_t)qword_1ED87D010);
          v3 = v37;
          v39 = sub_1CA85B330();
          v40 = sub_1CA85BAD4();
          if (os_log_type_enabled(v39, v40))
          {
            v41 = (uint8_t *)swift_slowAlloc();
            v42 = swift_slowAlloc();
            v60[0] = v42;
            *(_DWORD *)v41 = 136315138;
            v43 = MusicCuration.description.getter();
            v59[0] = sub_1CA28712C(v43, v44, v60);
            sub_1CA85BCF0();

            swift_bridgeObjectRelease();
            _os_log_impl(&dword_1CA237000, v39, v40, "[SpecificationBasedMusicCurator] musicCuration: %s", v41, 0xCu);
            swift_arrayDestroy();
            MEMORY[0x1CAA4F27C](v42, -1, -1);
            MEMORY[0x1CAA4F27C](v41, -1, -1);

          }
          else
          {

          }
          return v3;
        }
        swift_release();
        if (qword_1ED872118 != -1)
          swift_once();
        v50 = sub_1CA85B348();
        __swift_project_value_buffer(v50, (uint64_t)qword_1ED87D010);
        v46 = sub_1CA85B330();
        v51 = sub_1CA85BAE0();
        v3 = (_QWORD *)v51;
        if (os_log_type_enabled(v46, v51))
        {
          v48 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v48 = 0;
          v49 = "[SpecificationBasedMusicCurator] No clean songs within song search results";
          goto LABEL_41;
        }
        goto LABEL_42;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      v16 = MEMORY[0x1E0DEE9D8];
      v21 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
      if (v21)
        goto LABEL_9;
    }
    swift_bridgeObjectRelease();
    if (qword_1ED872118 != -1)
      swift_once();
    v45 = sub_1CA85B348();
    __swift_project_value_buffer(v45, (uint64_t)qword_1ED87D010);
    v46 = sub_1CA85B330();
    v47 = sub_1CA85BAE0();
    v3 = (_QWORD *)v47;
    if (os_log_type_enabled(v46, v47))
    {
      v48 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v48 = 0;
      v49 = "[SpecificationBasedMusicCurator] No songs found from search results";
LABEL_41:
      _os_log_impl(&dword_1CA237000, v46, (os_log_type_t)v3, v49, v48, 2u);
      MEMORY[0x1CAA4F27C](v48, -1, -1);
    }
LABEL_42:

    sub_1CA2F7810();
    swift_allocError();
    *v52 = 3;
    swift_willThrow();
  }
  return v3;
}

uint64_t sub_1CA2F6480()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  char v8;
  unint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint8_t *v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  id v25;
  void *v26;
  unint64_t v27;
  char v28;
  uint64_t v29[3];
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v2 = v1;
  v30 = 0;
  v31 = 0xE000000000000000;
  v3 = (uint64_t *)(v0 + OBJC_IVAR___PGSpecificationBasedMusicCurator_curationSpecification);
  v4 = *(_QWORD *)(v0 + OBJC_IVAR___PGSpecificationBasedMusicCurator_curationSpecification + 8);
  if (v4)
  {
    v29[0] = *v3;
    v29[1] = v4;
    swift_bridgeObjectRetain();
    sub_1CA85B624();
    sub_1CA85B624();
    swift_bridgeObjectRelease();
  }
  if (v3[3])
    sub_1CA85B624();
  v5 = v30;
  v6 = v31;
  swift_bridgeObjectRetain();
  v7 = sub_1CA85B5E8();
  swift_bridgeObjectRelease();
  if (v7 > 0)
  {
    v8 = 1;
    goto LABEL_10;
  }
  v9 = v3[5];
  if (v9)
  {
    v5 = v3[4];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v8 = 3;
    v6 = v9;
LABEL_9:
    v30 = v5;
    v31 = v6;
    goto LABEL_10;
  }
  if (*(_QWORD *)(v3[6] + 16))
  {
    swift_bridgeObjectRelease();
    v25 = (id)PHStringForMemoryMood();
    if (v25)
    {
      v26 = v25;
      v5 = sub_1CA85B534();
      v6 = v27;

      v8 = 4;
    }
    else
    {
      v8 = 4;
      v5 = 0x6968632065727550;
      v6 = 0xEA00000000006C6CLL;
    }
    goto LABEL_9;
  }
  v8 = 0;
LABEL_10:
  if (qword_1ED872118 != -1)
    swift_once();
  v10 = sub_1CA85B348();
  __swift_project_value_buffer(v10, (uint64_t)qword_1ED87D010);
  swift_bridgeObjectRetain_n();
  v11 = sub_1CA85B330();
  v12 = sub_1CA85BAC8();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = (uint8_t *)swift_slowAlloc();
    v28 = v8;
    v14 = swift_slowAlloc();
    v29[0] = v14;
    *(_DWORD *)v13 = 136315138;
    swift_bridgeObjectRetain();
    v32 = sub_1CA28712C(v5, v6, v29);
    sub_1CA85BCF0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1CA237000, v11, v12, "[SpecificationBasedMusicCurator] Using legacy search term: %s", v13, 0xCu);
    swift_arrayDestroy();
    v15 = v14;
    v8 = v28;
    MEMORY[0x1CAA4F27C](v15, -1, -1);
    v16 = v13;
    v2 = v1;
    MEMORY[0x1CAA4F27C](v16, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  swift_beginAccess();
  v17 = sub_1CA2F6970(v30, v31, v8);
  swift_bridgeObjectRelease();
  if (!v2)
  {
    swift_bridgeObjectRetain_n();
    v18 = sub_1CA85B330();
    v19 = sub_1CA85BAD4();
    if (os_log_type_enabled(v18, v19))
    {
      v20 = (uint8_t *)swift_slowAlloc();
      v21 = swift_slowAlloc();
      v32 = v21;
      *(_DWORD *)v20 = 136315138;
      v22 = MEMORY[0x1CAA4D620](v17, &type metadata for MusicKitCatalogSong);
      sub_1CA28712C(v22, v23, &v32);
      sub_1CA85BCF0();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1CA237000, v18, v19, "[SpecificationBasedMusicCurator] legacySearchFoundSongs: %s", v20, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1CAA4F27C](v21, -1, -1);
      MEMORY[0x1CAA4F27C](v20, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
  }
  return v17;
}

uint64_t sub_1CA2F6970(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t *v10;
  NSObject *v11;
  uint64_t v12;
  _QWORD v14[6];

  v7 = sub_1CA85B39C();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1CA85B390();
  v10 = sub_1CA3485E0((uint64_t)v9, 0);
  if (!v3)
  {
    v14[3] = a2;
    v14[4] = a1;
    v14[5] = v10;
    v11 = dispatch_group_create();
    v12 = swift_allocObject();
    *(_QWORD *)(v12 + 16) = 0;
    v14[2] = v12 + 16;
    *(_BYTE *)(v12 + 24) = -1;
    dispatch_group_enter(v11);
    __asm { BR              X10 }
  }
  return v3;
}

void sub_1CA2F76E4(void *a1, char a2, uint64_t a3, NSObject *a4)
{
  void *v8;
  unsigned __int8 v9;

  swift_beginAccess();
  v8 = *(void **)(a3 + 16);
  *(_QWORD *)(a3 + 16) = a1;
  v9 = *(_BYTE *)(a3 + 24);
  a2 &= 1u;
  *(_BYTE *)(a3 + 24) = a2;
  sub_1CA2F78A0(v8, v9);
  sub_1CA2F7894(a1, a2);
  dispatch_group_leave(a4);
}

uint64_t type metadata accessor for SpecificationBasedMusicCurator()
{
  return objc_opt_self();
}

unint64_t sub_1CA2F7810()
{
  unint64_t result;

  result = qword_1EF94D1D8;
  if (!qword_1EF94D1D8)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8DB938, &type metadata for SpecificationBasedMusicCurator.Error);
    atomic_store(result, (unint64_t *)&qword_1EF94D1D8);
  }
  return result;
}

uint64_t sub_1CA2F7854()
{
  uint64_t v0;
  int v1;

  v1 = *(unsigned __int8 *)(v0 + 24);
  if (v1 != 255)
    sub_1CA2F7888(*(id *)(v0 + 16), v1 & 1);
  return swift_deallocObject();
}

void sub_1CA2F7888(id a1, char a2)
{
  if ((a2 & 1) != 0)

  else
    swift_bridgeObjectRelease();
}

id sub_1CA2F7894(id a1, char a2)
{
  if ((a2 & 1) != 0)
    return a1;
  else
    return (id)swift_bridgeObjectRetain();
}

void sub_1CA2F78A0(void *a1, unsigned __int8 a2)
{
  if (a2 != 255)
    sub_1CA2F7888(a1, a2 & 1);
}

id sub_1CA2F78B8(id result, unsigned __int8 a2)
{
  if (a2 != 255)
    return sub_1CA2F7894(result, a2 & 1);
  return result;
}

uint64_t storeEnumTagSinglePayload for SpecificationBasedMusicCurator.Error(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1CA2F791C + 4 * byte_1CA8DB859[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1CA2F7950 + 4 * byte_1CA8DB854[v4]))();
}

uint64_t sub_1CA2F7950(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CA2F7958(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1CA2F7960);
  return result;
}

uint64_t sub_1CA2F796C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1CA2F7974);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1CA2F7978(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CA2F7980(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SpecificationBasedMusicCurator.Error()
{
  return &type metadata for SpecificationBasedMusicCurator.Error;
}

unint64_t sub_1CA2F79A4()
{
  unint64_t result;

  result = qword_1EF94D1E0;
  if (!qword_1EF94D1E0)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8DB910, &type metadata for SpecificationBasedMusicCurator.Error);
    atomic_store(result, (unint64_t *)&qword_1EF94D1E0);
  }
  return result;
}

unint64_t sub_1CA2F79E8(unint64_t a1, unint64_t a2)
{
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unsigned __int8 v13;
  _QWORD v15[3];

  v15[2] = *MEMORY[0x1E0C80C00];
  if ((a2 & 0x2000000000000000) != 0)
    v4 = HIBYTE(a2) & 0xF;
  else
    v4 = a1 & 0xFFFFFFFFFFFFLL;
  swift_bridgeObjectRetain();
  v5 = 0;
  if (v4)
  {
    v6 = (a1 >> 59) & 1;
    if ((a2 & 0x1000000000000000) == 0)
      LOBYTE(v6) = 1;
    v7 = 4 << v6;
    v8 = 15;
    do
    {
      v9 = v8 & 0xC;
      v10 = v8;
      if (v9 == v7)
        v10 = sub_1CA2F7BC4(v8, a1, a2);
      v11 = v10 >> 16;
      if (v10 >> 16 >= v4)
      {
        __break(1u);
LABEL_28:
        __break(1u);
      }
      if ((a2 & 0x1000000000000000) != 0)
      {
        v13 = sub_1CA85B678();
        if (v9 != v7)
          goto LABEL_20;
      }
      else if ((a2 & 0x2000000000000000) != 0)
      {
        v15[0] = a1;
        v15[1] = a2 & 0xFFFFFFFFFFFFFFLL;
        v13 = *((_BYTE *)v15 + v11);
        if (v9 != v7)
          goto LABEL_20;
      }
      else
      {
        v12 = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
        if ((a1 & 0x1000000000000000) == 0)
          v12 = sub_1CA85BF30();
        v13 = *(_BYTE *)(v12 + v11);
        if (v9 != v7)
        {
LABEL_20:
          if ((a2 & 0x1000000000000000) == 0)
            goto LABEL_8;
          goto LABEL_21;
        }
      }
      v8 = sub_1CA2F7BC4(v8, a1, a2);
      if ((a2 & 0x1000000000000000) == 0)
      {
LABEL_8:
        v8 = (v8 & 0xFFFFFFFFFFFF0000) + 65540;
        goto LABEL_9;
      }
LABEL_21:
      if (v4 <= v8 >> 16)
        goto LABEL_28;
      v8 = sub_1CA85B654();
LABEL_9:
      v5 ^= (v5 << 6) + (v5 >> 2) + v13 + 2654435769u;
    }
    while (4 * v4 != v8 >> 14);
  }
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1CA2F7BC4(unint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;

  v3 = a1;
  v4 = (unsigned __int16)a1 >> 14;
  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    v10 = sub_1CA85B684();
    v11 = v10 + (v4 << 16);
    v12 = v10 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    v13 = v11 & 0xFFFFFFFFFFFF0000;
    if (!v4)
      v13 = v12;
    return v13 | 4;
  }
  else
  {
    v5 = MEMORY[0x1CAA4D4C4](15, a1 >> 16);
    v6 = v5 + (v4 << 16);
    v7 = v5 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    v8 = v6 & 0xFFFFFFFFFFFF0000;
    if (!v4)
      v8 = v7;
    return v8 | 8;
  }
}

uint64_t static ImportantEntitiesTuning.evaluateChildrenAndPetsInferenceAcrossParameters(inGraph:photoLibrary:progressReporter:)(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  return sub_1CA2FB7B4(a1, a2, a3);
}

void static ImportantEntitiesTuning.evaluateImportantEntitiesInferenceAcrossParameters(withDetectionType:inGraph:truePositiveImportantEntitiesLocalIdentifiers:trueNegativeImportantEntitiesLocalIdentifiers:progressReporter:sendToCoreAnalytics:)(unsigned __int16 a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v6;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  char **v24;
  char **v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  id v32;
  __CFString *v33;
  void *v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  double v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unsigned __int16 v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  __int128 v54;
  uint64_t v55[4];
  __int128 v56;

  sub_1CA85BB64();
  if (!v6)
  {
    if (a1 == 1)
      v12 = _s11PhotosGraph23ImportantEntitiesTuningC46getChildrenPositiveAndNegativeLocalIdentifiers02inB004truehcdkL00njcdkL0ShySSG_AHtSo7PGGraphC_A2HtFZ_0(a2, a3, a4);
    else
      v12 = _s11PhotosGraph23ImportantEntitiesTuningC41getPetPositiveAndNegativeLocalIdentifiers02inB004truehcdkL00njcdkL0ShySSG_AHtSo7PGGraphC_A2HtFZ_0(a2, a3, a4);
    v14 = v12;
    v15 = v13;
    sub_1CA85BB64();
    v49 = v15;
    v16 = a1;
    v48 = a1;
    v17 = (void *)a2;
    if ((a6 & 1) != 0)
      v18 = 0xD000000000000038;
    else
      v18 = 0;
    if ((a6 & 1) != 0)
      v19 = 0x80000001CA889800;
    else
      v19 = 0;
    v20 = (void *)objc_opt_self();
    v21 = v20;
    if (v16 == 1)
      v22 = 15;
    else
      v22 = 10;
    v23 = qword_1CA8DB9A0[v16 == 1];
    v24 = &selRef_usersChildrenInferenceRecencyThresholdFromLatestMomentDateYears;
    if (v16 == 1)
    {
      v25 = &selRef_usersChildrenInferenceMinimumLifespanYears;
    }
    else
    {
      v24 = &selRef_usersPetsInferenceRecencyThresholdFromLatestMomentDateYears;
      v25 = &selRef_usersPetsInferenceMinimumLifespanYears;
    }
    objc_msgSend(v20, *v24);
    v27 = v26;
    objc_msgSend(v21, *v25);
    v29 = v28 * 31557600.0;
    v30 = v27 * 31557600.0;
    *(double *)v55 = v27 * 31557600.0;
    *(double *)&v55[1] = v28 * 31557600.0;
    v55[2] = v22;
    v55[3] = v23;
    v56 = xmmword_1CA8DB9B0;
    sub_1CA2FA92C(v48, v17, v55, 0xD000000000000010, 0x80000001CA88B780, v14, v49, v18, v19);
    swift_release();
    v31 = 0.2;
    sub_1CA85BB64();
    v46 = v19;
    v47 = v14;
    v32 = objc_msgSend(objc_allocWithZone((Class)PGRemoteConfiguration), sel_init);
    v33 = CFSTR("com.apple.photos.importantentitiesinference.childrenInferenceSimulationParameters");
    v34 = (void *)sub_1CA85B798();
    v43 = v32;
    v35 = objc_msgSend(v32, sel_arrayValueForKey_withFallbackValue_, CFSTR("com.apple.photos.importantentitiesinference.childrenInferenceSimulationParameters"), v34);

    v36 = sub_1CA85B7B0();
    v37 = *(_QWORD *)(v36 + 16);
    if (v37)
    {
      v38 = 0.8 / (double)v37;
      v39 = v36 + 32;
      do
      {
        sub_1CA266A08(v39, (uint64_t)v55);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED872170);
        if ((swift_dynamicCast() & 1) != 0)
        {
          v40 = v50;
          if (*(_QWORD *)(v50 + 16)
            && (v41 = sub_1CA25081C(1701667182, 0xE400000000000000), (v42 & 1) != 0)
            && (sub_1CA266A08(*(_QWORD *)(v40 + 56) + 32 * v41, (uint64_t)v55), (swift_dynamicCast() & 1) != 0))
          {
            v44 = v50;
            v45 = v51;
            v50 = *(_QWORD *)&v30;
            v51 = *(_QWORD *)&v29;
            v52 = v22;
            v53 = v23;
            v54 = xmmword_1CA8DB9B0;
            sub_1CA2F82A0(v40, (uint64_t)&v50, (uint64_t)v55);
            swift_bridgeObjectRelease();
            sub_1CA2FA92C(v48, v17, v55, v44, v45, v47, v49, v18, v46);
            swift_bridgeObjectRelease();
            swift_release();
            v31 = v38 + v31;
            sub_1CA85BB64();
          }
          else
          {
            swift_bridgeObjectRelease();
          }
        }
        v39 += 32;
        --v37;
      }
      while (v37);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1CA85BB64();

  }
}

uint64_t sub_1CA2F8228(uint64_t a1, uint64_t a2, double a3)
{
  void (*v5)(uint64_t, double);

  v5 = *(void (**)(uint64_t, double))(a1 + 32);
  swift_retain();
  v5(a2, a3);
  return swift_release();
}

uint64_t static ImportantEntitiesTuning.evaluateImportantEntitiesInference(withDetectionType:inGraph:withParameter:andParameterName:truePositiveImportantEntitiesLocalIdentifiers:trueNegativeImportantEntitiesLocalIdentifiers:coreAnalyticsEventName:)(unsigned __int16 a1, void *a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_1CA2FA92C(a1, a2, a3, a4, a5, a6, a7, a8, a9);
}

uint64_t sub_1CA2F82A0@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  double v5;
  double v6;
  uint64_t v7;
  double v8;
  double v9;
  double v10;
  char v11;
  char v12;
  char v13;
  char v14;
  char v15;
  char v16;
  char v17;
  char v18;
  char v19;
  char v20;
  char v21;
  char v22;
  double v23;
  _BYTE v24[32];

  v3 = result;
  v5 = *(double *)a2;
  v6 = *(double *)(a2 + 8);
  v7 = *(_QWORD *)(a2 + 16);
  v8 = *(double *)(a2 + 24);
  v9 = *(double *)(a2 + 32);
  v10 = *(double *)(a2 + 40);
  if (*(_QWORD *)(result + 16))
  {
    result = sub_1CA25081C(0xD000000000000036, 0x80000001CA88B8A0);
    if ((v11 & 1) != 0)
    {
      sub_1CA266A08(*(_QWORD *)(v3 + 56) + 32 * result, (uint64_t)v24);
      result = swift_dynamicCast();
      if ((result & 1) != 0)
        v5 = (double)*(uint64_t *)&v23 * 2629800.0;
    }
  }
  if (*(_QWORD *)(v3 + 16))
  {
    result = sub_1CA25081C(0xD000000000000036, 0x80000001CA88B8A0);
    if ((v12 & 1) != 0)
    {
      sub_1CA266A08(*(_QWORD *)(v3 + 56) + 32 * result, (uint64_t)v24);
      result = swift_dynamicCast();
      if ((result & 1) != 0)
        v5 = v23 * 2629800.0;
    }
  }
  if (*(_QWORD *)(v3 + 16))
  {
    result = sub_1CA25081C(0xD000000000000014, 0x80000001CA88B8E0);
    if ((v13 & 1) != 0)
    {
      sub_1CA266A08(*(_QWORD *)(v3 + 56) + 32 * result, (uint64_t)v24);
      result = swift_dynamicCast();
      if ((result & 1) != 0)
        v6 = (double)*(uint64_t *)&v23 * 31557600.0;
    }
  }
  if (*(_QWORD *)(v3 + 16))
  {
    result = sub_1CA25081C(0xD000000000000014, 0x80000001CA88B8E0);
    if ((v14 & 1) != 0)
    {
      sub_1CA266A08(*(_QWORD *)(v3 + 56) + 32 * result, (uint64_t)v24);
      result = swift_dynamicCast();
      if ((result & 1) != 0)
        v6 = v23 * 31557600.0;
    }
  }
  if (*(_QWORD *)(v3 + 16))
  {
    result = sub_1CA25081C(0xD000000000000016, 0x80000001CA88B900);
    if ((v15 & 1) != 0)
    {
      sub_1CA266A08(*(_QWORD *)(v3 + 56) + 32 * result, (uint64_t)v24);
      result = swift_dynamicCast();
      if ((result & 1) != 0)
        v7 = *(_QWORD *)&v23;
    }
  }
  if (!*(_QWORD *)(v3 + 16))
    goto LABEL_28;
  result = sub_1CA25081C(0xD000000000000016, 0x80000001CA88B900);
  if ((v16 & 1) == 0)
    goto LABEL_28;
  sub_1CA266A08(*(_QWORD *)(v3 + 56) + 32 * result, (uint64_t)v24);
  result = swift_dynamicCast();
  if ((result & 1) == 0)
    goto LABEL_28;
  if ((~*(_QWORD *)&v23 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_54;
  }
  if (v23 <= -9.22337204e18)
  {
LABEL_54:
    __break(1u);
    goto LABEL_55;
  }
  if (v23 >= 9.22337204e18)
  {
LABEL_55:
    __break(1u);
    return result;
  }
  v7 = (uint64_t)v23;
LABEL_28:
  if (*(_QWORD *)(v3 + 16))
  {
    result = sub_1CA25081C(0xD00000000000002FLL, 0x80000001CA88B920);
    if ((v17 & 1) != 0)
    {
      sub_1CA266A08(*(_QWORD *)(v3 + 56) + 32 * result, (uint64_t)v24);
      result = swift_dynamicCast();
      if ((result & 1) != 0)
        v8 = (double)*(uint64_t *)&v23;
    }
  }
  if (*(_QWORD *)(v3 + 16))
  {
    result = sub_1CA25081C(0xD00000000000002FLL, 0x80000001CA88B920);
    if ((v18 & 1) != 0)
    {
      sub_1CA266A08(*(_QWORD *)(v3 + 56) + 32 * result, (uint64_t)v24);
      result = swift_dynamicCast();
      if ((result & 1) != 0)
        v8 = v23;
    }
  }
  if (*(_QWORD *)(v3 + 16))
  {
    result = sub_1CA25081C(0xD000000000000031, 0x80000001CA88B950);
    if ((v19 & 1) != 0)
    {
      sub_1CA266A08(*(_QWORD *)(v3 + 56) + 32 * result, (uint64_t)v24);
      result = swift_dynamicCast();
      if ((result & 1) != 0)
        v9 = (double)*(uint64_t *)&v23;
    }
  }
  if (*(_QWORD *)(v3 + 16))
  {
    result = sub_1CA25081C(0xD000000000000031, 0x80000001CA88B950);
    if ((v20 & 1) != 0)
    {
      sub_1CA266A08(*(_QWORD *)(v3 + 56) + 32 * result, (uint64_t)v24);
      result = swift_dynamicCast();
      if ((result & 1) != 0)
        v9 = v23;
    }
  }
  if (*(_QWORD *)(v3 + 16))
  {
    result = sub_1CA25081C(0xD00000000000003FLL, 0x80000001CA88B990);
    if ((v21 & 1) != 0)
    {
      sub_1CA266A08(*(_QWORD *)(v3 + 56) + 32 * result, (uint64_t)v24);
      result = swift_dynamicCast();
      if ((result & 1) != 0)
        v10 = (double)*(uint64_t *)&v23;
    }
  }
  if (*(_QWORD *)(v3 + 16))
  {
    result = sub_1CA25081C(0xD00000000000003FLL, 0x80000001CA88B990);
    if ((v22 & 1) != 0)
    {
      sub_1CA266A08(*(_QWORD *)(v3 + 56) + 32 * result, (uint64_t)v24);
      result = swift_dynamicCast();
      if ((result & 1) != 0)
        v10 = v23;
    }
  }
  *(double *)a3 = v5;
  *(double *)(a3 + 8) = v6;
  *(_QWORD *)(a3 + 16) = v7;
  *(double *)(a3 + 24) = v8;
  *(double *)(a3 + 32) = v9;
  *(double *)(a3 + 40) = v10;
  return result;
}

void sub_1CA2F8808(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  os_log_type_t v13;
  uint8_t *v14;
  NSObject *oslog;
  uint64_t v16;

  v7 = objc_msgSend(a1, sel_localIdentifier);
  if (v7)
  {
    v8 = v7;
    v9 = sub_1CA85B534();
    v11 = v10;

    if ((sub_1CA290460(v9, v11, a3) & 1) != 0)
    {
      swift_bridgeObjectRetain();
      sub_1CA23F448(&v16, v9, v11);
      swift_bridgeObjectRelease();
    }
    if ((sub_1CA290460(v9, v11, a5) & 1) != 0)
      sub_1CA23F448(&v16, v9, v11);
    swift_bridgeObjectRelease();
  }
  else
  {
    if (qword_1EF94A250 != -1)
      swift_once();
    v12 = sub_1CA85B348();
    __swift_project_value_buffer(v12, (uint64_t)qword_1EF9780F0);
    oslog = sub_1CA85B330();
    v13 = sub_1CA85BAE0();
    if (os_log_type_enabled(oslog, v13))
    {
      v14 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v14 = 0;
      _os_log_impl(&dword_1CA237000, oslog, v13, "Error: Unable to find a local identifier for child node, skipping node in evaluation...", v14, 2u);
      MEMORY[0x1CAA4F27C](v14, -1, -1);
    }

  }
}

uint64_t sub_1CA2F89AC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v7 = objc_msgSend(a1, sel_localIdentifier);
  v8 = sub_1CA85B534();
  v10 = v9;

  if ((sub_1CA290460(v8, v10, a3) & 1) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1CA23F448(&v12, v8, v10);
    swift_bridgeObjectRelease();
  }
  if ((sub_1CA290460(v8, v10, a5) & 1) != 0)
    sub_1CA23F448(&v12, v8, v10);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1CA2F8A84(void *a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;

  v2 = objc_msgSend(a1, sel_entityIdentifier);
  v3 = sub_1CA85B534();
  v5 = v4;

  *(_QWORD *)&v20 = v3;
  *((_QWORD *)&v20 + 1) = v5;
  v22 = sub_1CA85B534();
  v23 = v6;
  sub_1CA281DC0();
  LOBYTE(v2) = sub_1CA85BD50();
  swift_bridgeObjectRelease();
  if ((v2 & 1) != 0 || objc_msgSend(a1, sel_state, v20) != 2)
  {
    *(_QWORD *)&v20 = v3;
    *((_QWORD *)&v20 + 1) = v5;
    v22 = sub_1CA85B534();
    v23 = v14;
    v15 = sub_1CA85BD50();
    swift_bridgeObjectRelease();
    if ((v15 & 1) != 0 || objc_msgSend(a1, sel_state, v20) != 3)
      return swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  v7 = objc_msgSend(a1, sel_additionalInfo);
  if (v7)
  {
    v8 = v7;
    v9 = sub_1CA85B414();

    v10 = sub_1CA85B534();
    if (*(_QWORD *)(v9 + 16) && (v12 = sub_1CA25081C(v10, v11), (v13 & 1) != 0))
    {
      sub_1CA266A08(*(_QWORD *)(v9 + 56) + 32 * v12, (uint64_t)&v20);
    }
    else
    {
      v20 = 0u;
      v21 = 0u;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*((_QWORD *)&v21 + 1))
    {
      if ((swift_dynamicCast() & 1) == 0)
        return swift_bridgeObjectRelease();
      v17 = v22;
      v16 = v23;
      if (v17 == sub_1CA85B534() && v16 == v18)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        sub_1CA85C284();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
LABEL_9:
      swift_beginAccess();
      sub_1CA23F448(&v22, v3, v5);
      swift_endAccess();
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    v20 = 0u;
    v21 = 0u;
  }
  swift_bridgeObjectRelease();
  return sub_1CA2F0DBC((uint64_t)&v20);
}

uint64_t sub_1CA2F8D74(void *a1)
{
  uint64_t result;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  __int128 v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  id v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;

  result = (uint64_t)objc_msgSend(a1, sel_additionalInfo);
  if (result)
  {
    v3 = (void *)result;
    v4 = sub_1CA85B414();

    v5 = sub_1CA85B534();
    if (*(_QWORD *)(v4 + 16) && (v7 = sub_1CA25081C(v5, v6), (v8 & 1) != 0))
    {
      sub_1CA266A08(*(_QWORD *)(v4 + 56) + 32 * v7, (uint64_t)&v30);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (!*((_QWORD *)&v31 + 1))
        return sub_1CA2F0DBC((uint64_t)&v30);
      result = swift_dynamicCast();
      if ((result & 1) == 0)
        return result;
      v9 = v29;
      v10 = objc_msgSend(a1, sel_entityIdentifier);
      *(_QWORD *)&v28 = sub_1CA85B534();
      *((_QWORD *)&v28 + 1) = v11;

      v30 = v29;
      *(_QWORD *)&v29 = sub_1CA85B534();
      *((_QWORD *)&v29 + 1) = v12;
      sub_1CA281DC0();
      LOBYTE(v10) = sub_1CA85BD50();
      swift_bridgeObjectRelease();
      if ((v10 & 1) == 0
        || (v30 = v28,
            *(_QWORD *)&v29 = sub_1CA85B534(),
            *((_QWORD *)&v29 + 1) = v13,
            v14 = sub_1CA85BD50(),
            swift_bridgeObjectRelease(),
            (v14 & 1) != 0)
        || objc_msgSend(a1, sel_state) != 2)
      {
        v30 = v9;
        *(_QWORD *)&v29 = sub_1CA85B534();
        *((_QWORD *)&v29 + 1) = v22;
        v23 = sub_1CA85BD50();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v23 & 1) == 0)
          return swift_bridgeObjectRelease();
        v24 = *((_QWORD *)&v28 + 1);
        v30 = v28;
        *(_QWORD *)&v29 = sub_1CA85B534();
        *((_QWORD *)&v29 + 1) = v25;
        v26 = sub_1CA85BD50();
        swift_bridgeObjectRelease();
        if ((v26 & 1) != 0 || objc_msgSend(a1, sel_state) != 3)
          return swift_bridgeObjectRelease();
        goto LABEL_20;
      }
      swift_bridgeObjectRelease();
      v15 = objc_msgSend(a1, sel_additionalInfo);
      if (v15)
      {
        v16 = v15;
        v17 = sub_1CA85B414();

        v18 = sub_1CA85B534();
        if (*(_QWORD *)(v17 + 16) && (v20 = sub_1CA25081C(v18, v19), (v21 & 1) != 0))
        {
          sub_1CA266A08(*(_QWORD *)(v17 + 56) + 32 * v20, (uint64_t)&v30);
        }
        else
        {
          v30 = 0u;
          v31 = 0u;
        }
        v24 = *((_QWORD *)&v28 + 1);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (*((_QWORD *)&v31 + 1))
        {
          if ((swift_dynamicCast() & 1) == 0)
            return swift_bridgeObjectRelease();
          if ((_QWORD)v29 == sub_1CA85B534() && *((_QWORD *)&v29 + 1) == v27)
          {
            swift_bridgeObjectRelease_n();
          }
          else
          {
            sub_1CA85C284();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
LABEL_20:
          swift_beginAccess();
          sub_1CA23F448((uint64_t *)&v29, v28, v24);
          swift_endAccess();
          return swift_bridgeObjectRelease();
        }
      }
      else
      {
        v30 = 0u;
        v31 = 0u;
      }
    }
    else
    {
      v30 = 0u;
      v31 = 0u;
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    return sub_1CA2F0DBC((uint64_t)&v30);
  }
  return result;
}

uint64_t sub_1CA2F91C8(void *a1)
{
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  v1 = objc_msgSend(a1, sel_localIdentifier);
  v2 = sub_1CA85B534();
  v4 = v3;

  swift_beginAccess();
  sub_1CA23F448(&v6, v2, v4);
  swift_endAccess();
  return swift_bridgeObjectRelease();
}

id ImportantEntitiesTuning.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id ImportantEntitiesTuning.init()()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ImportantEntitiesTuning();
  return objc_msgSendSuper2(&v2, sel_init);
}

id ImportantEntitiesTuning.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ImportantEntitiesTuning();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t _s11PhotosGraph23ImportantEntitiesTuningC74truePositiveAndTrueNegativeUsersChildrenLocalIdentifiersFromChildQuestions16withPhotoLibraryShySSG_AFtSgSo07PHPhotoT0C_tFZ_0(_QWORD *a1)
{
  _QWORD *v1;
  id v2;
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  uint64_t v11;
  _QWORD *v12;
  id v13;
  id v14;
  uint64_t v15;
  void *v16;
  id v17;
  id v18;
  id v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  void *v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint64_t v28;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  uint8_t *v32;
  uint64_t v33;
  NSObject *v34;
  os_log_type_t v35;
  uint8_t *v36;
  uint64_t v37;
  void *v39;
  void *v40;
  uint64_t aBlock;
  unint64_t v42;
  void (*v43)(uint64_t, void *);
  void *v44;
  uint64_t (*v45)(void *);
  _QWORD *v46;

  v1 = a1;
  v2 = objc_msgSend(a1, sel_librarySpecificFetchOptions);
  objc_msgSend(v2, sel_setWantsIncrementalChangeDetails_, 0);
  sub_1CA24EEC0(0, (unint64_t *)&qword_1ED872320);
  aBlock = 0x203D3D2065707974;
  v42 = 0xE800000000000000;
  sub_1CA85C260();
  sub_1CA85B624();
  swift_bridgeObjectRelease();
  v3 = (void *)sub_1CA85BA80();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_setPredicate_, v3);

  v40 = v2;
  v4 = objc_msgSend((id)objc_opt_self(), sel_fetchAnsweredYesOrNoQuestionsWithOptions_validQuestionsOnly_, v2, 1);
  if ((uint64_t)objc_msgSend(v4, sel_count) < 1)
  {
    if (qword_1EF94A250 != -1)
      swift_once();
    v29 = sub_1CA85B348();
    __swift_project_value_buffer(v29, (uint64_t)qword_1EF9780F0);
    v30 = sub_1CA85B330();
    v31 = sub_1CA85BAC8();
    if (os_log_type_enabled(v30, v31))
    {
      v32 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v32 = 0;
      _os_log_impl(&dword_1CA237000, v30, v31, "No child relationship Photos Challenge questions answered.", v32, 2u);
      MEMORY[0x1CAA4F27C](v32, -1, -1);
    }

    return 0;
  }
  v5 = swift_allocObject();
  v6 = MEMORY[0x1E0DEE9E8];
  *(_QWORD *)(v5 + 16) = MEMORY[0x1E0DEE9E8];
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = v6;
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = v5;
  *(_QWORD *)(v8 + 24) = v7;
  v45 = sub_1CA2FBB18;
  v46 = (_QWORD *)v8;
  aBlock = MEMORY[0x1E0C809B0];
  v42 = 1107296256;
  v43 = sub_1CA46CB34;
  v44 = &block_descriptor_41;
  v9 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  v39 = v4;
  objc_msgSend(v4, sel_enumerateObjectsUsingBlock_, v9);
  _Block_release(v9);
  v10 = (void *)objc_opt_self();
  swift_beginAccess();
  v11 = swift_bridgeObjectRetain();
  sub_1CA243494(v11);
  swift_bridgeObjectRelease();
  v12 = (_QWORD *)sub_1CA85B798();
  swift_release();
  v13 = objc_msgSend(v1, sel_librarySpecificFetchOptions);
  v14 = objc_msgSend(v10, sel_fetchPersonsWithLocalIdentifiers_options_, v12, v13);

  swift_beginAccess();
  v15 = swift_bridgeObjectRetain();
  sub_1CA243494(v15);
  swift_bridgeObjectRelease();
  v16 = (void *)sub_1CA85B798();
  swift_release();
  v17 = objc_msgSend(v1, (SEL)&selRef_mobilityTypeForMobilityLabel_ + 1);
  v18 = objc_msgSend(v10, sel_fetchPersonsWithLocalIdentifiers_options_, v16, v17);

  v19 = objc_msgSend(v14, sel_count);
  v20 = (char *)objc_msgSend(v18, sel_count);
  if (__OFADD__(v19, v20))
  {
    __break(1u);
    goto LABEL_22;
  }
  if (!&v20[(_QWORD)v19])
  {
    if (qword_1EF94A250 != -1)
      swift_once();
    v33 = sub_1CA85B348();
    __swift_project_value_buffer(v33, (uint64_t)qword_1EF9780F0);
    v34 = sub_1CA85B330();
    v35 = sub_1CA85BAC8();
    if (os_log_type_enabled(v34, v35))
    {
      v36 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v36 = 0;
      _os_log_impl(&dword_1CA237000, v34, v35, "Child relationship Photos Challenge questions are out of date, they don't match any existing persons in the database.", v36, 2u);
      MEMORY[0x1CAA4F27C](v36, -1, -1);
    }

    swift_release();
    swift_release();

    return 0;
  }
  v12 = (_QWORD *)swift_allocObject();
  v21 = MEMORY[0x1E0DEE9E8];
  v12[2] = MEMORY[0x1E0DEE9E8];
  v45 = sub_1CA2FBA90;
  v46 = v12;
  v22 = MEMORY[0x1E0C809B0];
  aBlock = MEMORY[0x1E0C809B0];
  v42 = 1107296256;
  v43 = sub_1CA2D8FCC;
  v44 = &block_descriptor_45;
  v23 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(v14, sel_enumerateObjectsUsingBlock_, v23);
  _Block_release(v23);
  v1 = (_QWORD *)swift_allocObject();
  v1[2] = v21;
  v45 = sub_1CA2FBA90;
  v46 = v1;
  aBlock = v22;
  v42 = 1107296256;
  v43 = sub_1CA2D8FCC;
  v44 = &block_descriptor_49;
  v24 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(v18, sel_enumerateObjectsUsingBlock_, v24);
  _Block_release(v24);
  if (qword_1EF94A250 != -1)
LABEL_22:
    swift_once();
  v25 = sub_1CA85B348();
  __swift_project_value_buffer(v25, (uint64_t)qword_1EF9780F0);
  swift_retain();
  swift_retain();
  v26 = sub_1CA85B330();
  v27 = sub_1CA85BAC8();
  if (os_log_type_enabled(v26, v27))
  {
    v28 = swift_slowAlloc();
    *(_DWORD *)v28 = 134218240;
    swift_beginAccess();
    aBlock = *(_QWORD *)(v12[2] + 16);
    sub_1CA85BCF0();
    swift_release();
    *(_WORD *)(v28 + 12) = 2048;
    swift_beginAccess();
    aBlock = *(_QWORD *)(v1[2] + 16);
    sub_1CA85BCF0();
    swift_release();
    _os_log_impl(&dword_1CA237000, v26, v27, "Found that the user has %ld true positive user's children at the child age categories and %ld true negatives from Photos Challenge questions!", (uint8_t *)v28, 0x16u);
    MEMORY[0x1CAA4F27C](v28, -1, -1);

  }
  else
  {

    swift_release();
    swift_release();
  }

  swift_beginAccess();
  v37 = v12[2];
  swift_beginAccess();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v37;
}

uint64_t _s11PhotosGraph23ImportantEntitiesTuningC46getChildrenPositiveAndNegativeLocalIdentifiers02inB004truehcdkL00njcdkL0ShySSG_AHtSo7PGGraphC_A2HtFZ_0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void *v7;
  void *v8;
  id v9;
  uint64_t v10;
  NSObject *v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  _QWORD *v15;
  uint64_t v16;
  void *v17;
  char isEscapingClosureAtFileLocation;
  uint64_t result;
  NSObject *v20;
  os_log_type_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD aBlock[6];
  uint64_t v25;
  uint64_t v26;

  v25 = MEMORY[0x1E0DEE9E8];
  v26 = MEMORY[0x1E0DEE9E8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED873300);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1CA8D4EA0;
  *(_QWORD *)(v6 + 32) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithUnsignedInteger_, 1);
  *(_QWORD *)(v6 + 40) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithUnsignedInteger_, 2);
  aBlock[0] = v6;
  sub_1CA85B7C8();
  v7 = (void *)objc_opt_self();
  sub_1CA24EEC0(0, (unint64_t *)&qword_1ED8723C0);
  v8 = (void *)sub_1CA85B798();
  swift_bridgeObjectRelease();
  v9 = objc_msgSend(v7, sel_personNodesInAgeCategories_includingMe_inGraph_, v8, 0, a1);

  if (qword_1EF94A250 != -1)
    swift_once();
  v10 = sub_1CA85B348();
  __swift_project_value_buffer(v10, (uint64_t)qword_1EF9780F0);
  v11 = v9;
  v12 = sub_1CA85B330();
  v13 = sub_1CA85BAC8();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v14 = 134217984;
    aBlock[0] = -[NSObject count](v11, sel_count);
    sub_1CA85BCF0();

    _os_log_impl(&dword_1CA237000, v12, v13, "Found %ld person nodes in the \"baby\" and \"child\" age categories that will be considered in evaluation.", v14, 0xCu);
    MEMORY[0x1CAA4F27C](v14, -1, -1);

  }
  else
  {

  }
  v15 = (_QWORD *)swift_allocObject();
  v15[2] = a2;
  v15[3] = &v26;
  v15[4] = a3;
  v15[5] = &v25;
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = sub_1CA2FBAAC;
  *(_QWORD *)(v16 + 24) = v15;
  aBlock[4] = sub_1CA26A1BC;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1CA45E830;
  aBlock[3] = &block_descriptor_21;
  v17 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  -[NSObject enumerateUsingBlock:](v11, sel_enumerateUsingBlock_, v17);
  _Block_release(v17);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRetain();
    v20 = sub_1CA85B330();
    v21 = sub_1CA85BAC8();
    if (os_log_type_enabled(v20, v21))
    {
      v22 = swift_slowAlloc();
      *(_DWORD *)v22 = 134218752;
      swift_beginAccess();
      aBlock[0] = *(_QWORD *)(v26 + 16);
      sub_1CA85BCF0();
      *(_WORD *)(v22 + 12) = 2048;
      aBlock[0] = *(_QWORD *)(a2 + 16);
      sub_1CA85BCF0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v22 + 22) = 2048;
      swift_beginAccess();
      aBlock[0] = *(_QWORD *)(v25 + 16);
      sub_1CA85BCF0();
      *(_WORD *)(v22 + 32) = 2048;
      aBlock[0] = *(_QWORD *)(v25 + 16);
      sub_1CA85BCF0();
      _os_log_impl(&dword_1CA237000, v20, v21, "In total, found %ld true positive child nodes out of %ld true positive child persons and %ld true negative child nodes out of %ld true negative child persons.", (uint8_t *)v22, 0x2Au);
      MEMORY[0x1CAA4F27C](v22, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease();
      v20 = v11;
    }

    swift_beginAccess();
    v23 = v26;
    swift_beginAccess();
    swift_release();
    return v23;
  }
  return result;
}

uint64_t _s11PhotosGraph23ImportantEntitiesTuningC41getPetPositiveAndNegativeLocalIdentifiers02inB004truehcdkL00njcdkL0ShySSG_AHtSo7PGGraphC_A2HtFZ_0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v6;
  uint64_t v7;
  NSObject *v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  _QWORD *v12;
  uint64_t v13;
  void *v14;
  char isEscapingClosureAtFileLocation;
  uint64_t result;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD aBlock[6];
  uint64_t v22;
  uint64_t v23;

  v22 = MEMORY[0x1E0DEE9E8];
  v23 = MEMORY[0x1E0DEE9E8];
  sub_1CA24EEC0(0, (unint64_t *)&unk_1EF94D220);
  v6 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_nodesInGraph_, a1);
  if (qword_1EF94A250 != -1)
    swift_once();
  v7 = sub_1CA85B348();
  __swift_project_value_buffer(v7, (uint64_t)qword_1EF9780F0);
  v8 = v6;
  v9 = sub_1CA85B330();
  v10 = sub_1CA85BAC8();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v11 = 134217984;
    aBlock[0] = -[NSObject count](v8, sel_count);
    sub_1CA85BCF0();

    _os_log_impl(&dword_1CA237000, v9, v10, "Found %ld pet nodes that will be considered in evaluation.", v11, 0xCu);
    MEMORY[0x1CAA4F27C](v11, -1, -1);

  }
  else
  {

  }
  v12 = (_QWORD *)swift_allocObject();
  v12[2] = a2;
  v12[3] = &v23;
  v12[4] = a3;
  v12[5] = &v22;
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = sub_1CA2FBAF8;
  *(_QWORD *)(v13 + 24) = v12;
  aBlock[4] = sub_1CA26A1BC;
  aBlock[5] = v13;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1CA33041C;
  aBlock[3] = &block_descriptor_33;
  v14 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  -[NSObject enumerateUsingBlock:](v8, sel_enumerateUsingBlock_, v14);
  _Block_release(v14);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRetain();
    v17 = sub_1CA85B330();
    v18 = sub_1CA85BAC8();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = swift_slowAlloc();
      *(_DWORD *)v19 = 134218752;
      swift_beginAccess();
      aBlock[0] = *(_QWORD *)(v23 + 16);
      sub_1CA85BCF0();
      *(_WORD *)(v19 + 12) = 2048;
      aBlock[0] = *(_QWORD *)(a2 + 16);
      sub_1CA85BCF0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v19 + 22) = 2048;
      swift_beginAccess();
      aBlock[0] = *(_QWORD *)(v22 + 16);
      sub_1CA85BCF0();
      *(_WORD *)(v19 + 32) = 2048;
      aBlock[0] = *(_QWORD *)(v22 + 16);
      sub_1CA85BCF0();
      _os_log_impl(&dword_1CA237000, v17, v18, "In total, found %ld true positive pet nodes out of %ld true positive pet persons and %ld true negative pet nodes out of %ld true negative pet persons.", (uint8_t *)v19, 0x2Au);
      MEMORY[0x1CAA4F27C](v19, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease();
      v17 = v8;
    }

    swift_beginAccess();
    v20 = v23;
    swift_beginAccess();
    swift_release();
    return v20;
  }
  return result;
}

void sub_1CA2FA47C(uint64_t a1)
{
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;

  if (qword_1EF94A250 != -1)
    swift_once();
  v2 = sub_1CA85B348();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EF9780F0);
  swift_retain();
  v3 = sub_1CA85B330();
  v4 = sub_1CA85BAC8();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    v6 = swift_slowAlloc();
    v20 = v6;
    *(_DWORD *)v5 = 136315138;
    v7 = *(_QWORD *)(a1 + 32);
    v8 = *(_QWORD *)(a1 + 40);
    swift_bridgeObjectRetain();
    v22 = sub_1CA28712C(v7, v8, &v20);
    sub_1CA85BCF0();
    swift_release();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1CA237000, v3, v4, "--- %s Results ---", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1CAA4F27C](v6, -1, -1);
    MEMORY[0x1CAA4F27C](v5, -1, -1);

  }
  else
  {

    swift_release();
  }
  swift_retain();
  v9 = sub_1CA85B330();
  v10 = sub_1CA85BAC8();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = swift_slowAlloc();
    *(_DWORD *)v11 = 134218752;
    v20 = *(_QWORD *)(a1 + 48);
    sub_1CA85BCF0();
    *(_WORD *)(v11 + 12) = 2048;
    v20 = *(_QWORD *)(a1 + 64);
    sub_1CA85BCF0();
    *(_WORD *)(v11 + 22) = 2048;
    v20 = *(_QWORD *)(a1 + 56);
    sub_1CA85BCF0();
    *(_WORD *)(v11 + 32) = 2048;
    v20 = *(_QWORD *)(a1 + 72);
    sub_1CA85BCF0();
    swift_release();
    _os_log_impl(&dword_1CA237000, v9, v10, "\tTP: %ld TN: %ld FP: %ld FN: %ld", (uint8_t *)v11, 0x2Au);
    MEMORY[0x1CAA4F27C](v11, -1, -1);

  }
  else
  {

    swift_release();
  }
  v12 = 5136718;
  if ((*(_BYTE *)(a1 + 88) & 1) != 0)
  {
    v13 = 0xE300000000000000;
    v14 = 5136718;
    if ((*(_BYTE *)(a1 + 104) & 1) == 0)
    {
LABEL_11:
      v20 = 0;
      v21 = 0xE000000000000000;
      sub_1CA85B93C();
      v12 = v20;
      v15 = v21;
      goto LABEL_14;
    }
  }
  else
  {
    v20 = 0;
    v21 = 0xE000000000000000;
    sub_1CA85B93C();
    v14 = v20;
    v13 = v21;
    if ((*(_BYTE *)(a1 + 104) & 1) == 0)
      goto LABEL_11;
  }
  v15 = 0xE300000000000000;
LABEL_14:
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v16 = sub_1CA85B330();
  v17 = sub_1CA85BAC8();
  if (os_log_type_enabled(v16, v17))
  {
    v18 = swift_slowAlloc();
    v19 = swift_slowAlloc();
    v20 = v19;
    *(_DWORD *)v18 = 136315394;
    swift_bridgeObjectRetain();
    v22 = sub_1CA28712C(v14, v13, &v20);
    sub_1CA85BCF0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v18 + 12) = 2080;
    swift_bridgeObjectRetain();
    v22 = sub_1CA28712C(v12, v15, &v20);
    sub_1CA85BCF0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1CA237000, v16, v17, "\tPrecision: %s Recall: %s", (uint8_t *)v18, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1CAA4F27C](v19, -1, -1);
    MEMORY[0x1CAA4F27C](v18, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
}

uint64_t sub_1CA2FA92C(unsigned __int16 a1, void *a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t inited;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  _QWORD *v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  __int128 v31;
  uint64_t v32;
  id v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD aBlock[7];

  v34 = a1;
  v15 = *a3;
  v16 = a3[1];
  v32 = a3[2];
  v31 = *(_OWORD *)(a3 + 3);
  v17 = a3[5];
  aBlock[4] = GEOLocationCoordinate2DMake;
  aBlock[5] = 0;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1CA2F8228;
  aBlock[3] = &block_descriptor_24;
  v18 = _Block_copy(aBlock);
  v33 = objc_msgSend((id)objc_opt_self(), sel_progressReporterWithProgressBlock_, v18);
  _Block_release(v18);
  swift_release();
  type metadata accessor for ImportantEntitiesTuningEventFactory();
  inited = swift_initStackObject();
  *(_QWORD *)(inited + 16) = a2;
  *(_BYTE *)(inited + 24) = 0;
  type metadata accessor for ImportantEntitiesTuningSubject();
  v20 = swift_initStackObject();
  v21 = MEMORY[0x1E0DEE9E8];
  *(_QWORD *)(v20 + 24) = a6;
  *(_QWORD *)(v20 + 32) = v21;
  *(_WORD *)(v20 + 40) = a1;
  *(_QWORD *)(v20 + 16) = a2;
  v22 = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v20 + 32) = a7;
  swift_bridgeObjectRelease();
  type metadata accessor for ImportantEntitiesTuningParameter();
  v23 = swift_initStackObject();
  *(_QWORD *)(v23 + 16) = a4;
  *(_QWORD *)(v23 + 24) = a5;
  *(_QWORD *)(v23 + 32) = v15;
  *(_QWORD *)(v23 + 40) = v16;
  *(_QWORD *)(v23 + 48) = v32;
  *(_OWORD *)(v23 + 56) = v31;
  *(_QWORD *)(v23 + 72) = v17;
  type metadata accessor for ImportantEntitiesTuningEvaluator();
  v24 = (_QWORD *)swift_allocObject();
  v25 = 0x7265666E49746570;
  if (v34 == 1)
    v25 = 0xD000000000000011;
  v26 = 0x80000001CA889860;
  if (v34 != 1)
    v26 = 0xEC00000065636E65;
  v24[2] = v25;
  v24[3] = v26;
  v24[4] = a4;
  v24[5] = a5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94D210);
  v27 = swift_initStackObject();
  swift_bridgeObjectRetain_n();
  swift_retain();
  v28 = v33;
  sub_1CA4C3300(inited, v28);
  if (!v35)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94BAF8);
    v29 = swift_initStackObject();
    sub_1CA4C3944((_OWORD *)v23, v29, a9, (uint64_t)aBlock);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94D218);
    type metadata accessor for ImportantEntitiesTuningMetrics();
    swift_dynamicCast();
    v27 = v36;
    sub_1CA2FA47C(v36);
    swift_release();
  }
  swift_release();
  swift_setDeallocating();
  swift_bridgeObjectRelease();
  swift_setDeallocating();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_setDeallocating();

  return v27;
}

void _s11PhotosGraph23ImportantEntitiesTuningC062truePositiveAndTrueNegativeUsersCurrentPetLocalIdentifiersFromM9Questions16withPhotoLibraryShySSG_AFtSgSo07PHPhotoT0C_tFZ_0(void *a1)
{
  id v2;
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *ObjCClassFromMetadata;
  void *v11;
  id v12;
  uint64_t v13;
  void *v14;
  id v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  void *v19;
  void *v20;
  void *v21;
  id v22;
  void *v23;
  id v24;
  id v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  NSObject *v34;
  os_log_type_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  NSObject *v41;
  os_log_type_t v42;
  uint8_t *v43;
  uint64_t v44;
  NSObject *v45;
  os_log_type_t v46;
  uint8_t *v47;
  uint64_t v48;
  void *v49;
  void *v50;
  id v51;
  uint64_t aBlock;
  unint64_t v53;
  void (*v54)(uint64_t, void *);
  void *v55;
  uint64_t (*v56)(void *);
  uint64_t v57;

  v2 = objc_msgSend(a1, sel_librarySpecificFetchOptions);
  objc_msgSend(v2, sel_setWantsIncrementalChangeDetails_, 0);
  sub_1CA24EEC0(0, (unint64_t *)&qword_1ED872320);
  aBlock = 0x203D3D2065707974;
  v53 = 0xE800000000000000;
  sub_1CA85C260();
  sub_1CA85B624();
  swift_bridgeObjectRelease();
  v3 = (void *)sub_1CA85BA80();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_setPredicate_, v3);

  v4 = objc_msgSend((id)objc_opt_self(), sel_fetchAnsweredYesOrNoQuestionsWithOptions_validQuestionsOnly_, v2, 1);
  if ((uint64_t)objc_msgSend(v4, sel_count) < 1)
  {
    if (qword_1EF94A250 != -1)
      swift_once();
    v40 = sub_1CA85B348();
    __swift_project_value_buffer(v40, (uint64_t)qword_1EF9780F0);
    v41 = sub_1CA85B330();
    v42 = sub_1CA85BAC8();
    if (os_log_type_enabled(v41, v42))
    {
      v43 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v43 = 0;
      _os_log_impl(&dword_1CA237000, v41, v42, "No pet Photos Challenge questions answered.", v43, 2u);
      MEMORY[0x1CAA4F27C](v43, -1, -1);
    }

    return;
  }
  v50 = v2;
  v5 = swift_allocObject();
  v6 = MEMORY[0x1E0DEE9E8];
  *(_QWORD *)(v5 + 16) = MEMORY[0x1E0DEE9E8];
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = v6;
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = v5;
  *(_QWORD *)(v8 + 24) = v7;
  v56 = sub_1CA2FBA88;
  v57 = v8;
  aBlock = MEMORY[0x1E0C809B0];
  v53 = 1107296256;
  v54 = sub_1CA46CB34;
  v55 = &block_descriptor_6;
  v9 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  v49 = v4;
  objc_msgSend(v4, sel_enumerateObjectsUsingBlock_, v9);
  _Block_release(v9);
  sub_1CA24EEC0(0, (unint64_t *)&qword_1EF94B000);
  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  swift_beginAccess();
  swift_bridgeObjectRetain();
  v11 = (void *)sub_1CA85B978();
  swift_bridgeObjectRelease();
  v12 = objc_msgSend(ObjCClassFromMetadata, sel_localIdentifiersWithUUIDs_, v11);

  if (!v12)
  {
    __break(1u);
    goto LABEL_24;
  }
  v13 = sub_1CA85B984();

  sub_1CA243494(v13);
  swift_bridgeObjectRelease();
  swift_beginAccess();
  swift_bridgeObjectRetain();
  v14 = (void *)sub_1CA85B978();
  swift_bridgeObjectRelease();
  v15 = objc_msgSend(ObjCClassFromMetadata, sel_localIdentifiersWithUUIDs_, v14);

  if (!v15)
  {
LABEL_24:
    __break(1u);
    return;
  }
  v16 = sub_1CA85B984();

  sub_1CA243494(v16);
  swift_bridgeObjectRelease();
  v17 = objc_msgSend(a1, sel_librarySpecificFetchOptions);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED873300);
  v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_1CA8D9C80;
  *(_QWORD *)(v18 + 32) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithShort_, 2);
  aBlock = v18;
  sub_1CA85B7C8();
  sub_1CA24EEC0(0, (unint64_t *)&qword_1ED8723C0);
  v19 = (void *)sub_1CA85B798();
  swift_bridgeObjectRelease();
  objc_msgSend(v17, sel_setIncludedDetectionTypes_, v19);

  v20 = (void *)objc_opt_self();
  v21 = (void *)sub_1CA85B798();
  swift_release();
  v22 = objc_msgSend(v20, sel_fetchPersonsWithLocalIdentifiers_options_, v21, v17);

  v23 = (void *)sub_1CA85B798();
  swift_release();
  v24 = objc_msgSend(v20, sel_fetchPersonsWithLocalIdentifiers_options_, v23, v17);

  v25 = objc_msgSend(v22, sel_count);
  v51 = v24;
  v26 = (char *)objc_msgSend(v24, sel_count);
  if (__OFADD__(v25, v26))
  {
    __break(1u);
    goto LABEL_22;
  }
  if (&v26[(_QWORD)v25])
  {
    v27 = swift_allocObject();
    v28 = MEMORY[0x1E0DEE9E8];
    *(_QWORD *)(v27 + 16) = MEMORY[0x1E0DEE9E8];
    v56 = sub_1CA2FBA90;
    v57 = v27;
    v29 = MEMORY[0x1E0C809B0];
    aBlock = MEMORY[0x1E0C809B0];
    v53 = 1107296256;
    v54 = sub_1CA2D8FCC;
    v55 = &block_descriptor_8;
    v30 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    objc_msgSend(v22, sel_enumerateObjectsUsingBlock_, v30);
    _Block_release(v30);
    v31 = swift_allocObject();
    *(_QWORD *)(v31 + 16) = v28;
    v56 = sub_1CA2FBA90;
    v57 = v31;
    aBlock = v29;
    v53 = 1107296256;
    v54 = sub_1CA2D8FCC;
    v55 = &block_descriptor_12;
    v32 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    objc_msgSend(v24, sel_enumerateObjectsUsingBlock_, v32);
    _Block_release(v32);
    if (qword_1EF94A250 == -1)
    {
LABEL_7:
      v33 = sub_1CA85B348();
      __swift_project_value_buffer(v33, (uint64_t)qword_1EF9780F0);
      swift_retain_n();
      swift_retain();
      v34 = sub_1CA85B330();
      v35 = sub_1CA85BAC8();
      if (os_log_type_enabled(v34, v35))
      {
        v36 = swift_slowAlloc();
        v48 = swift_slowAlloc();
        aBlock = v48;
        *(_DWORD *)v36 = 134218242;
        swift_beginAccess();
        sub_1CA85BCF0();
        swift_release();
        *(_WORD *)(v36 + 12) = 2080;
        swift_beginAccess();
        swift_bridgeObjectRetain();
        v37 = sub_1CA85B990();
        v39 = v38;
        swift_bridgeObjectRelease();
        sub_1CA28712C(v37, v39, &aBlock);
        sub_1CA85BCF0();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1CA237000, v34, v35, "Found that the user has %ld true positive pets and %s true negative pets from Photos Challenge questions!", (uint8_t *)v36, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1CAA4F27C](v48, -1, -1);
        MEMORY[0x1CAA4F27C](v36, -1, -1);

      }
      else
      {

        swift_release_n();
        swift_release();

      }
      swift_beginAccess();
      swift_beginAccess();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      return;
    }
LABEL_22:
    swift_once();
    goto LABEL_7;
  }
  if (qword_1EF94A250 != -1)
    swift_once();
  v44 = sub_1CA85B348();
  __swift_project_value_buffer(v44, (uint64_t)qword_1EF9780F0);
  v45 = sub_1CA85B330();
  v46 = sub_1CA85BAC8();
  if (os_log_type_enabled(v45, v46))
  {
    v47 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v47 = 0;
    _os_log_impl(&dword_1CA237000, v45, v46, "Pet Photos Challenge questions are out of date, they don't match any existing pet persons in the database.", v47, 2u);
    MEMORY[0x1CAA4F27C](v47, -1, -1);
    swift_release();
    swift_release();

  }
  else
  {
    swift_release();
    swift_release();

  }
}

uint64_t sub_1CA2FB7B4(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;

  result = sub_1CA85BB64();
  if (!v3)
  {
    type metadata accessor for ImportantEntitiesTuning();
    v8 = _s11PhotosGraph23ImportantEntitiesTuningC74truePositiveAndTrueNegativeUsersChildrenLocalIdentifiersFromChildQuestions16withPhotoLibraryShySSG_AFtSgSo07PHPhotoT0C_tFZ_0(a2);
    if (v8)
    {
      static ImportantEntitiesTuning.evaluateImportantEntitiesInferenceAcrossParameters(withDetectionType:inGraph:truePositiveImportantEntitiesLocalIdentifiers:trueNegativeImportantEntitiesLocalIdentifiers:progressReporter:sendToCoreAnalytics:)(1u, a1, v8, v9, a3, 1);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      if (qword_1EF94A250 != -1)
        swift_once();
      v10 = sub_1CA85B348();
      __swift_project_value_buffer(v10, (uint64_t)qword_1EF9780F0);
      v11 = sub_1CA85B330();
      v12 = sub_1CA85BAC8();
      if (os_log_type_enabled(v11, v12))
      {
        v13 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v13 = 0;
        _os_log_impl(&dword_1CA237000, v11, v12, "Skipping user's children inference.", v13, 2u);
        MEMORY[0x1CAA4F27C](v13, -1, -1);
      }

    }
    sub_1CA85BB64();
    _s11PhotosGraph23ImportantEntitiesTuningC062truePositiveAndTrueNegativeUsersCurrentPetLocalIdentifiersFromM9Questions16withPhotoLibraryShySSG_AFtSgSo07PHPhotoT0C_tFZ_0(a2);
    if (v14)
    {
      static ImportantEntitiesTuning.evaluateImportantEntitiesInferenceAcrossParameters(withDetectionType:inGraph:truePositiveImportantEntitiesLocalIdentifiers:trueNegativeImportantEntitiesLocalIdentifiers:progressReporter:sendToCoreAnalytics:)(2u, a1, v14, v15, a3, 1);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      if (qword_1EF94A250 != -1)
        swift_once();
      v16 = sub_1CA85B348();
      __swift_project_value_buffer(v16, (uint64_t)qword_1EF9780F0);
      v17 = sub_1CA85B330();
      v18 = sub_1CA85BAC8();
      if (os_log_type_enabled(v17, v18))
      {
        v19 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v19 = 0;
        _os_log_impl(&dword_1CA237000, v17, v18, "Skipping user's pets inference.", v19, 2u);
        MEMORY[0x1CAA4F27C](v19, -1, -1);
      }

    }
    return sub_1CA85BB64();
  }
  return result;
}

uint64_t type metadata accessor for ImportantEntitiesTuning()
{
  return objc_opt_self();
}

uint64_t sub_1CA2FBA60()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1CA2FBA88(void *a1)
{
  return sub_1CA2F8A84(a1);
}

uint64_t sub_1CA2FBA90(void *a1)
{
  return sub_1CA2F91C8(a1);
}

void sub_1CA2FBAAC(void *a1, uint64_t a2)
{
  uint64_t *v2;

  sub_1CA2F8808(a1, a2, v2[2], v2[3], v2[4]);
}

uint64_t sub_1CA2FBAB8()
{
  return swift_deallocObject();
}

uint64_t objectdestroy_14Tm_0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1CA2FBAF8(void *a1, uint64_t a2)
{
  uint64_t *v2;

  return sub_1CA2F89AC(a1, a2, v2[2], v2[3], v2[4]);
}

uint64_t sub_1CA2FBB04()
{
  return swift_deallocObject();
}

uint64_t sub_1CA2FBB18(void *a1)
{
  return sub_1CA2F8D74(a1);
}

uint64_t sub_1CA2FBB48()
{
  sub_1CA2FDD14();
  return sub_1CA85C2FC();
}

uint64_t sub_1CA2FBB70()
{
  sub_1CA2FDD14();
  return sub_1CA85C2F0();
}

uint64_t sub_1CA2FBB98()
{
  return sub_1CA85B534();
}

uint64_t sub_1CA2FBBA8()
{
  return 0;
}

unint64_t sub_1CA2FBBB0()
{
  uint64_t inited;
  uint64_t v1;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF94B690);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1CA8D4E40;
  *(_QWORD *)(inited + 32) = sub_1CA85B534();
  *(_QWORD *)(inited + 40) = v1;
  *(_QWORD *)(inited + 72) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(inited + 48) = 0xD00000000000003ELL;
  *(_QWORD *)(inited + 56) = 0x80000001CA88BA70;
  return sub_1CA273C34(inited);
}

uint64_t PGUpNextComputer.targets.getter()
{
  return swift_bridgeObjectRetain();
}

id PGUpNextComputer.__allocating_init(targets:)(uint64_t a1)
{
  objc_class *v1;
  char *v3;
  objc_super v5;

  v3 = (char *)objc_allocWithZone(v1);
  *(_QWORD *)&v3[OBJC_IVAR____TtC11PhotosGraph16PGUpNextComputer_targets] = a1;
  v5.receiver = v3;
  v5.super_class = v1;
  return objc_msgSendSuper2(&v5, sel_init);
}

id PGUpNextComputer.init(targets:)(uint64_t a1)
{
  char *v1;
  objc_class *ObjectType;
  objc_super v5;

  ObjectType = (objc_class *)swift_getObjectType();
  *(_QWORD *)&v1[OBJC_IVAR____TtC11PhotosGraph16PGUpNextComputer_targets] = a1;
  v5.receiver = v1;
  v5.super_class = ObjectType;
  return objc_msgSendSuper2(&v5, sel_init);
}

void PGUpNextComputer.enumerateSuggestions(with:featureWeightVectors:block:)(void *a1, unint64_t a2, uint64_t (*a3)(id, uint64_t, uint64_t, char *))
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v10;
  uint64_t v11;
  _QWORD *v12;
  id v13;
  void *v14;
  __int128 v15;
  uint64_t v16;
  int v17;
  unint64_t v18;
  unint64_t v19;
  char *v20;
  id v21;
  __int128 v22;
  uint64_t v23;
  uint64_t (*v24)(id, uint64_t, uint64_t, char *);
  void *v25;
  void *v26;
  uint64_t v27;
  id v28;
  __int128 v29;
  uint64_t v30;
  int v31;
  _QWORD *v32;

  v5 = v4;
  v6 = v3;
  v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D429B0]), sel_init);
  if (!a2)
  {
    v12 = 0;
LABEL_20:
    v21 = v10;
    sub_1CA2FD1E4(a1, v12, v6, v21, a3);

    swift_bridgeObjectRelease();
    return;
  }
  v26 = a1;
  if (a2 >> 62)
    goto LABEL_18;
  v11 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v11)
  {
LABEL_19:
    swift_bridgeObjectRelease();
    v12 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    a1 = v26;
    goto LABEL_20;
  }
  while (1)
  {
    v32 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    sub_1CA3FB9C8(0, v11 & ~(v11 >> 63), 0);
    if (v11 < 0)
      break;
    v25 = v10;
    v23 = v6;
    v24 = a3;
    v10 = 0;
    v12 = v32;
    a3 = (uint64_t (*)(id, uint64_t, uint64_t, char *))(a2 & 0xC000000000000001);
    v6 = 28;
    while ((id)v11 != v10)
    {
      if (a3)
        v13 = (id)MEMORY[0x1CAA4DD64](v10, a2);
      else
        v13 = *(id *)(a2 + 8 * (_QWORD)v10 + 32);
      v14 = v13;
      v28 = v13;
      sub_1CA2FBFA0(&v28, &v27, (uint64_t)&v29);
      if (v5)
      {
        swift_bridgeObjectRelease();

        swift_release();
        return;
      }
      v5 = 0;

      v15 = v29;
      v16 = v30;
      v17 = v31;
      v32 = v12;
      v19 = v12[2];
      v18 = v12[3];
      if (v19 >= v18 >> 1)
      {
        v22 = v29;
        sub_1CA3FB9C8(v18 > 1, v19 + 1, 1);
        v15 = v22;
        v12 = v32;
      }
      v12[2] = v19 + 1;
      v20 = (char *)v12 + 28 * v19;
      *((_OWORD *)v20 + 2) = v15;
      v10 = (char *)v10 + 1;
      *((_QWORD *)v20 + 6) = v16;
      *((_DWORD *)v20 + 14) = v17;
      if ((id)v11 == v10)
      {
        swift_bridgeObjectRelease();
        a3 = v24;
        v6 = v23;
        v10 = v25;
        a1 = v26;
        goto LABEL_20;
      }
    }
    __break(1u);
LABEL_18:
    swift_bridgeObjectRetain();
    v11 = sub_1CA85C08C();
    if (!v11)
      goto LABEL_19;
  }
  __break(1u);
}

uint64_t sub_1CA2FBFA0@<X0>(id *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  __int128 v16;

  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED872100);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = objc_msgSend(*a1, sel_wrapper);
  sub_1CA85A97C();

  v11 = sub_1CA85AA84();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  if (*(_QWORD *)(v11 + 16) == 7)
  {
    v12 = *(_DWORD *)(v11 + 56);
    v16 = *(_OWORD *)(v11 + 32);
    v13 = *(_QWORD *)(v11 + 48);
    result = swift_bridgeObjectRelease();
    *(_OWORD *)a3 = v16;
    *(_QWORD *)(a3 + 16) = v13;
    *(_DWORD *)(a3 + 24) = v12;
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_1CA2FDBE8();
    v15 = swift_allocError();
    result = swift_willThrow();
    *a2 = v15;
  }
  return result;
}

id PGUpNextComputer.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void PGUpNextComputer.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id PGUpNextComputer.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1CA2FC298(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  void *v21;
  id v22;
  id v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v28[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8711C0);
  v3 = MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v28 - v6;
  v28[0] = 0;
  v28[1] = 0xE000000000000000;
  sub_1CA85BEC4();
  sub_1CA85B624();
  v8 = objc_msgSend(a1, sel_personNodes);
  v9 = objc_msgSend(v8, sel_localIdentifiers);

  sub_1CA85B984();
  sub_1CA85B990();
  sub_1CA85B624();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1CA85B624();
  v10 = objc_msgSend(a1, sel_sceneNodes);
  v11 = objc_msgSend(v10, sel_sceneNames);

  sub_1CA85B984();
  sub_1CA85B990();
  sub_1CA85B624();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1CA85B624();
  v12 = objc_msgSend(a1, sel_meaningNodes);
  if (v12)
  {
    v13 = v12;
    v14 = objc_msgSend(v12, sel_labels);

    sub_1CA85B984();
    sub_1CA85B990();
    swift_bridgeObjectRelease();
  }
  sub_1CA85B624();
  swift_bridgeObjectRelease();
  sub_1CA85B624();
  v15 = objc_msgSend(a1, sel_memoryFeatureNodes);
  if (v15)
  {
    v16 = v15;
    v17 = objc_msgSend(v15, sel_array);

    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94D2B0);
    v19 = sub_1CA85B7B0();

    MEMORY[0x1CAA4D620](v19, v18);
    swift_bridgeObjectRelease();
  }
  sub_1CA85B624();
  swift_bridgeObjectRelease();
  sub_1CA85B624();
  objc_msgSend(a1, sel_isTripMemory);
  sub_1CA85B624();
  swift_bridgeObjectRelease();
  sub_1CA85B624();
  v20 = objc_msgSend(a1, sel_representativeLocation);
  if (v20)
  {
    v21 = v20;
    v22 = objc_msgSend(v20, sel_description);

    sub_1CA85B534();
  }
  sub_1CA85B624();
  swift_bridgeObjectRelease();
  sub_1CA85B624();
  v23 = objc_msgSend(a1, sel_representativeDate);
  if (v23)
  {
    v24 = v23;
    sub_1CA85A574();

    v25 = sub_1CA85A5B0();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v5, 0, 1, v25);
  }
  else
  {
    v25 = sub_1CA85A5B0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v5, 1, 1, v25);
  }
  sub_1CA295538((uint64_t)v5, (uint64_t)v7);
  sub_1CA85A5B0();
  v26 = *(_QWORD *)(v25 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v7, 1, v25) == 1)
  {
    sub_1CA29DFF0((uint64_t)v7);
  }
  else
  {
    sub_1CA85A4B4();
    (*(void (**)(char *, uint64_t))(v26 + 8))(v7, v25);
  }
  sub_1CA85B624();
  swift_bridgeObjectRelease();
  return v28[0];
}

uint64_t sub_1CA2FC81C(unint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  void *v7;
  uint64_t v8;

  if (a1 >> 62)
    goto LABEL_14;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    result = MEMORY[0x1E0DEE9D8];
    if (!v4)
      break;
    v8 = MEMORY[0x1E0DEE9D8];
    result = sub_1CA85BF6C();
    if (v4 < 0)
    {
      __break(1u);
      return result;
    }
    type metadata accessor for UpNext.MatchingResult();
    v6 = 0;
    while (v4 != v6)
    {
      if ((a1 & 0xC000000000000001) != 0)
      {
        v7 = (void *)MEMORY[0x1CAA4DD64](v6, a1);
      }
      else
      {
        v7 = *(void **)(a1 + 8 * v6 + 32);
        swift_unknownObjectRetain();
      }
      ++v6;
      static UpNext.MatchingResult.match(source:target:)(a2, v7);
      swift_unknownObjectRelease();
      sub_1CA85BF48();
      sub_1CA85BF78();
      sub_1CA85BF84();
      sub_1CA85BF54();
      if (v4 == v6)
        return v8;
    }
    __break(1u);
LABEL_14:
    swift_bridgeObjectRetain();
    v4 = sub_1CA85C08C();
    swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1CA2FC980(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t result;
  _DWORD *v8;
  int v9;
  __int128 v10;
  uint64_t v11;
  int v12;
  uint64_t v13;

  v4 = *(_QWORD *)(a1 + 16);
  result = MEMORY[0x1E0DEE9D8];
  if (v4)
  {
    v13 = MEMORY[0x1E0DEE9D8];
    sub_1CA85BF6C();
    v8 = (_DWORD *)(a1 + 56);
    do
    {
      v9 = *v8;
      v10 = *(_OWORD *)(v8 - 6);
      v11 = *((_QWORD *)v8 - 1);
      v12 = v9;
      _s11PhotosGraph6UpNextO21ScoredMatchingResultsC5score08matchingG06source7weightsAEXDSayAC0F6ResultCG_So04PGUpdF4Info_pAC0F10DimensionsVtFZ_0(a2, a3, (unsigned int *)&v10);
      sub_1CA85BF48();
      sub_1CA85BF78();
      sub_1CA85BF84();
      sub_1CA85BF54();
      v8 += 7;
      --v4;
    }
    while (v4);
    return v13;
  }
  return result;
}

void sub_1CA2FCA60(void *a1, void *a2, int a3, void *a4, void *aBlock)
{
  void *v5;
  unint64_t v8;
  unint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  void *v17;
  void *v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char **v24;
  void *v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  BOOL v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  NSObject *v40;
  os_log_type_t v41;
  uint8_t *v42;
  uint64_t v43;
  void *v44;
  void *v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint8_t *v50;
  id v51;
  void *v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  unint64_t v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  char v72;
  uint64_t v73[3];

  v5 = aBlock;
  v73[1] = *MEMORY[0x1E0C80C00];
  _Block_copy(aBlock);
  swift_unknownObjectRetain();
  v8 = swift_bridgeObjectRetain();
  v9 = sub_1CA2FC81C(v8, a1);
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  if (a2)
    v10 = a2;
  else
    v10 = &unk_1E83FE138;
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v11 = sub_1CA2FC980((uint64_t)v10, v9, (uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  swift_unknownObjectRelease();
  if (qword_1ED872130 != -1)
    goto LABEL_55;
  while (1)
  {
    v12 = sub_1CA85B348();
    __swift_project_value_buffer(v12, (uint64_t)qword_1ED87D040);
    swift_unknownObjectRetain_n();
    v13 = sub_1CA85B330();
    v14 = sub_1CA85BAD4();
    v64 = v11;
    if (os_log_type_enabled(v13, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc();
      v16 = swift_slowAlloc();
      v73[0] = v16;
      *(_DWORD *)v15 = 136315138;
      swift_getObjectType();
      v17 = v5;
      v18 = (void *)swift_unknownObjectRetain();
      v19 = sub_1CA2FC298(v18);
      v21 = v20;
      swift_unknownObjectRelease();
      v22 = v19;
      v5 = v17;
      sub_1CA28712C(v22, v21, v73);
      sub_1CA85BCF0();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1CA237000, v13, v14, "[UpNext] Source:\n%s", v15, 0xCu);
      swift_arrayDestroy();
      v11 = v64;
      MEMORY[0x1CAA4F27C](v16, -1, -1);
      MEMORY[0x1CAA4F27C](v15, -1, -1);

    }
    else
    {

      swift_unknownObjectRelease_n();
    }
    v23 = 0;
    v24 = &selRef_setNumberOfPublicEventsCategoryNightLife_;
    v25 = a4;
    do
    {
LABEL_43:
      if (v23 == 0x7FFFFFFFFFFFFFFFLL)
      {

        swift_bridgeObjectRelease();
        goto LABEL_48;
      }
      ++v23;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v54 = v11;
    }
    while (!v11);
    v26 = 0;
    v27 = v11 & 0xFFFFFFFFFFFFFF8;
    if (v11 >= 0)
      v28 = v11 & 0xFFFFFFFFFFFFFF8;
    else
      v28 = v11;
    v29 = v11 & 0xC000000000000001;
    v30 = v11 + 32;
    v60 = v11 & 0xC000000000000001;
    v61 = v11 & 0xFFFFFFFFFFFFFF8;
    v63 = v11;
    v59 = v23;
    v57 = v28;
    v58 = v11 + 32;
    if ((unint64_t)v11 >> 62)
      goto LABEL_36;
LABEL_13:
    if (v26 == *(_QWORD *)(v27 + 16))
      goto LABEL_43;
LABEL_14:
    if (v29)
      break;
    if (v26 >= *(_QWORD *)(v27 + 16))
    {
      __break(1u);
    }
    else
    {
      v65 = *(_QWORD *)(v30 + 8 * v26);
      swift_retain();
      v31 = __OFADD__(v26, 1);
      v32 = v26 + 1;
      if (!v31)
        goto LABEL_17;
    }
LABEL_54:
    __break(1u);
LABEL_55:
    swift_once();
  }
  v65 = MEMORY[0x1CAA4DD64](v26, v54);
  v31 = __OFADD__(v26, 1);
  v32 = v26 + 1;
  if (v31)
    goto LABEL_54;
LABEL_17:
  v72 = 0;
  v33 = *(_QWORD *)(v65 + 56);
  if (v33 >> 62)
  {
    swift_bridgeObjectRetain_n();
    v34 = sub_1CA85C08C();
    swift_bridgeObjectRelease();
    if (v34)
      goto LABEL_19;
  }
  else
  {
    v34 = *(_QWORD *)((v33 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v34)
    {
LABEL_19:
      v62 = v32;
      v70 = v33 & 0xC000000000000001;
      v35 = 4;
      v66 = v33;
      v69 = v34;
      do
      {
        v36 = v35 - 4;
        if (v70)
        {
          v37 = MEMORY[0x1CAA4DD64](v35 - 4, v33);
          v38 = v35 - 3;
          if (__OFADD__(v36, 1))
            goto LABEL_51;
        }
        else
        {
          v37 = *(_QWORD *)(v33 + 8 * v35);
          swift_retain();
          v38 = v35 - 3;
          if (__OFADD__(v36, 1))
          {
LABEL_51:
            __break(1u);
            goto LABEL_47;
          }
        }
        v71 = v38;
        v39 = *(_QWORD *)(v37 + 16);
        swift_retain_n();
        v40 = sub_1CA85B330();
        v41 = sub_1CA85BAD4();
        if (os_log_type_enabled(v40, v41))
        {
          v42 = (uint8_t *)swift_slowAlloc();
          v43 = swift_slowAlloc();
          v73[0] = v43;
          *(_DWORD *)v42 = 136315138;
          v68 = v43;
          swift_getObjectType();
          v44 = v5;
          v45 = (void *)swift_unknownObjectRetain();
          v46 = sub_1CA2FC298(v45);
          v48 = v47;
          swift_unknownObjectRelease();
          v49 = v46;
          v5 = v44;
          sub_1CA28712C(v49, v48, v73);
          v33 = v66;
          sub_1CA85BCF0();
          swift_release_n();
          v24 = &selRef_setNumberOfPublicEventsCategoryNightLife_;
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1CA237000, v40, v41, "[UpNext] Target:\n%s", v42, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1CAA4F27C](v68, -1, -1);
          v50 = v42;
          v25 = a4;
          MEMORY[0x1CAA4F27C](v50, -1, -1);

        }
        else
        {

          swift_release_n();
        }
        v51 = objc_msgSend(*(id *)(v39 + 16), v24[221], v57);
        UpNext.MatchingResult.debugInfo.getter();
        _Block_copy(v5);
        if ((objc_msgSend(v25, sel_containsIdentifier_, v51) & 1) != 0)
        {
          _Block_release(v5);
          swift_bridgeObjectRelease();
          swift_release();
          swift_release();
        }
        else
        {
          objc_msgSend(v25, sel_addIdentifier_, v51);
          v52 = (void *)sub_1CA85B510();
          v53 = (*((uint64_t (**)(void *, id, void *, char *))v5 + 2))(v5, v51, v52, &v72);

          _Block_release(v5);
          swift_bridgeObjectRelease();
          swift_release();
          swift_release();
          if ((v53 & 1) != 0)
          {
            swift_release();
            swift_bridgeObjectRelease();
            v54 = v63;
            if ((v72 & 1) != 0)
              goto LABEL_47;
            v11 = v64;
            v23 = v59;
            v29 = v60;
            v27 = v61;
            v26 = v62;
            v30 = v58;
            if (!(v63 >> 62))
              goto LABEL_13;
LABEL_36:
            v55 = v30;
            swift_bridgeObjectRetain();
            v56 = sub_1CA85C08C();
            swift_bridgeObjectRelease();
            v30 = v55;
            v29 = v60;
            v27 = v61;
            if (v26 == v56)
              goto LABEL_43;
            goto LABEL_14;
          }
        }
        if ((v72 & 1) != 0)
        {
          swift_bridgeObjectRelease();
          swift_release();
          goto LABEL_47;
        }
        ++v35;
      }
      while (v71 != v69);
    }
  }
  swift_release();
  swift_bridgeObjectRelease();
LABEL_47:
  swift_bridgeObjectRelease();

LABEL_48:
  swift_bridgeObjectRelease();
  _Block_release(v5);
}

uint64_t sub_1CA2FD1E4(void *a1, void *a2, uint64_t a3, void *a4, uint64_t (*a5)(id, uint64_t, uint64_t, char *))
{
  unint64_t v8;
  unint64_t v9;
  void *v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  _QWORD *v14;
  uint8_t *v15;
  uint64_t v16;
  void *v17;
  void *v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char **v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  BOOL v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  NSObject *v41;
  os_log_type_t v42;
  uint8_t *v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint8_t *v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  int v65;
  void *v66;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  char v71;
  uint64_t v72[3];

  v72[1] = *MEMORY[0x1E0C80C00];
  swift_unknownObjectRetain();
  v8 = swift_bridgeObjectRetain();
  v9 = sub_1CA2FC81C(v8, a1);
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  if (a2)
    v10 = a2;
  else
    v10 = &unk_1E83FE220;
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v63 = sub_1CA2FC980((uint64_t)v10, v9, (uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  swift_unknownObjectRelease();
  if (qword_1ED872130 != -1)
    goto LABEL_52;
  while (1)
  {
    v11 = sub_1CA85B348();
    __swift_project_value_buffer(v11, (uint64_t)qword_1ED87D040);
    swift_unknownObjectRetain_n();
    v12 = sub_1CA85B330();
    v13 = sub_1CA85BAD4();
    v14 = &unk_1CA8D5000;
    if (os_log_type_enabled(v12, v13))
    {
      v15 = (uint8_t *)swift_slowAlloc();
      v16 = swift_slowAlloc();
      v72[0] = v16;
      *(_DWORD *)v15 = 136315138;
      swift_getObjectType();
      v17 = a4;
      v18 = (void *)swift_unknownObjectRetain();
      v19 = sub_1CA2FC298(v18);
      v21 = v20;
      swift_unknownObjectRelease();
      v22 = v19;
      a4 = v17;
      sub_1CA28712C(v22, v21, v72);
      v14 = (_QWORD *)&unk_1CA8D5000;
      sub_1CA85BCF0();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1CA237000, v12, v13, "[UpNext] Source:\n%s", v15, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1CAA4F27C](v16, -1, -1);
      MEMORY[0x1CAA4F27C](v15, -1, -1);

    }
    else
    {

      swift_unknownObjectRelease_n();
    }
    v23 = 0;
    v65 = v14[49];
    v24 = &selRef_setNumberOfPublicEventsCategoryNightLife_;
    v66 = a4;
    do
    {
LABEL_43:
      if (v23 == 0x7FFFFFFFFFFFFFFFLL)
        goto LABEL_47;
      ++v23;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v55 = v63;
    }
    while (!v63);
    v25 = 0;
    v26 = v63 & 0xFFFFFFFFFFFFFF8;
    if (v63 >= 0)
      v27 = v63 & 0xFFFFFFFFFFFFFF8;
    else
      v27 = v63;
    v28 = v63 & 0xC000000000000001;
    v29 = v63 + 32;
    v61 = v23;
    v60 = v27;
    if ((unint64_t)v63 >> 62)
      goto LABEL_36;
LABEL_13:
    if (v25 == *(_QWORD *)(v26 + 16))
      goto LABEL_43;
LABEL_14:
    if (v28)
      break;
    if (v25 >= *(_QWORD *)(v26 + 16))
    {
LABEL_50:
      __break(1u);
    }
    else
    {
      v64 = *(_QWORD *)(v29 + 8 * v25);
      swift_retain();
      v30 = __OFADD__(v25, 1);
      v31 = v25 + 1;
      if (!v30)
        goto LABEL_17;
    }
LABEL_51:
    __break(1u);
LABEL_52:
    swift_once();
  }
  v64 = MEMORY[0x1CAA4DD64](v25, v55);
  v30 = __OFADD__(v25, 1);
  v31 = v25 + 1;
  if (v30)
    goto LABEL_51;
LABEL_17:
  v71 = 0;
  v32 = *(_QWORD *)(v64 + 56);
  v69 = v32;
  if (v32 >> 62)
  {
    swift_bridgeObjectRetain_n();
    v58 = sub_1CA85C08C();
    swift_bridgeObjectRelease();
    v68 = v58;
    if (v58)
      goto LABEL_19;
  }
  else
  {
    v33 = *(_QWORD *)((v32 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    v68 = v33;
    if (v33)
    {
LABEL_19:
      v62 = v31;
      v34 = v68;
      v35 = v32;
      v36 = 4;
      do
      {
        v37 = v36 - 4;
        if ((v69 & 0xC000000000000001) != 0)
        {
          v38 = MEMORY[0x1CAA4DD64](v36 - 4, v35);
          v39 = v36 - 3;
          if (__OFADD__(v37, 1))
            goto LABEL_49;
        }
        else
        {
          v38 = *(_QWORD *)(v35 + 8 * v36);
          swift_retain();
          v39 = v36 - 3;
          if (__OFADD__(v37, 1))
          {
LABEL_49:
            __break(1u);
            goto LABEL_50;
          }
        }
        v70 = v39;
        v40 = *(_QWORD *)(v38 + 16);
        swift_retain_n();
        v41 = sub_1CA85B330();
        v42 = sub_1CA85BAD4();
        if (os_log_type_enabled(v41, v42))
        {
          v43 = (uint8_t *)swift_slowAlloc();
          v44 = swift_slowAlloc();
          v72[0] = v44;
          *(_DWORD *)v43 = v65;
          swift_getObjectType();
          v45 = (void *)swift_unknownObjectRetain();
          v46 = sub_1CA2FC298(v45);
          v48 = v47;
          v35 = v69;
          swift_unknownObjectRelease();
          sub_1CA28712C(v46, v48, v72);
          v24 = &selRef_setNumberOfPublicEventsCategoryNightLife_;
          sub_1CA85BCF0();
          swift_release_n();
          v34 = v68;
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1CA237000, v41, v42, "[UpNext] Target:\n%s", v43, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1CAA4F27C](v44, -1, -1);
          v49 = v43;
          a4 = v66;
          MEMORY[0x1CAA4F27C](v49, -1, -1);

        }
        else
        {

          swift_release_n();
        }
        v50 = objc_msgSend(*(id *)(v40 + 16), v24[221], v60);
        v51 = UpNext.MatchingResult.debugInfo.getter();
        v53 = v52;
        if ((objc_msgSend(a4, sel_containsIdentifier_, v50) & 1) != 0)
        {
          swift_bridgeObjectRelease();
          swift_release();
          swift_release();
        }
        else
        {
          objc_msgSend(a4, sel_addIdentifier_, v50);
          v54 = a5(v50, v51, v53, &v71);
          swift_bridgeObjectRelease();
          swift_release();
          swift_release();
          if ((v54 & 1) != 0)
          {
            swift_release();
            swift_bridgeObjectRelease();
            v55 = v63;
            if ((v71 & 1) != 0)
              goto LABEL_47;
            v23 = v61;
            v28 = v63 & 0xC000000000000001;
            v26 = v63 & 0xFFFFFFFFFFFFFF8;
            v25 = v62;
            v29 = v63 + 32;
            if (!((unint64_t)v63 >> 62))
              goto LABEL_13;
LABEL_36:
            v56 = v29;
            swift_bridgeObjectRetain();
            v57 = sub_1CA85C08C();
            swift_bridgeObjectRelease();
            v29 = v56;
            v28 = v63 & 0xC000000000000001;
            v26 = v63 & 0xFFFFFFFFFFFFFF8;
            if (v25 == v57)
              goto LABEL_43;
            goto LABEL_14;
          }
        }
        if ((v71 & 1) != 0)
        {
          swift_bridgeObjectRelease();
          swift_release();
          goto LABEL_47;
        }
        ++v36;
      }
      while (v70 != v34);
    }
  }
  swift_release();
  swift_bridgeObjectRelease();
LABEL_47:
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t type metadata accessor for PGUpNextComputer()
{
  return objc_opt_self();
}

uint64_t method lookup function for PGUpNextComputer()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PGUpNextComputer.__allocating_init(targets:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

void sub_1CA2FD940(uint64_t a1, unint64_t a2, int a3, unint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v7;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  id v15;
  void *v16;
  __int128 v17;
  uint64_t v18;
  int v19;
  unint64_t v20;
  char *v21;
  id v22;
  __int128 v23;
  uint64_t v24;
  int v25;
  void *v26;
  void *aBlock;
  uint64_t v28;
  id v29;
  __int128 v30;
  uint64_t v31;
  int v32;
  _QWORD *v33;

  v5 = v4;
  LODWORD(v7) = a3;
  v10 = objc_allocWithZone(MEMORY[0x1E0D429B0]);
  _Block_copy((const void *)a4);
  v11 = objc_msgSend(v10, sel_init);
  if (!a2)
  {
    v14 = 0;
LABEL_20:
    _Block_copy((const void *)a4);
    v22 = v11;
    sub_1CA2FCA60((void *)a1, v14, v7, v22, (void *)a4);
    _Block_release((const void *)a4);

    swift_bridgeObjectRelease();
    _Block_release((const void *)a4);
    return;
  }
  if (a2 >> 62)
    goto LABEL_18;
  v12 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v12)
  {
LABEL_19:
    swift_bridgeObjectRelease();
    v14 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    goto LABEL_20;
  }
  while (1)
  {
    v33 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    sub_1CA3FB9C8(0, v12 & ~(v12 >> 63), 0);
    if (v12 < 0)
      break;
    v25 = v7;
    v26 = v11;
    v24 = a1;
    aBlock = (void *)a4;
    v13 = 0;
    v14 = v33;
    v7 = a2 & 0xC000000000000001;
    a1 = 28;
    while (v12 != v13)
    {
      if (v7)
        v15 = (id)MEMORY[0x1CAA4DD64](v13, a2);
      else
        v15 = *(id *)(a2 + 8 * v13 + 32);
      v16 = v15;
      v29 = v15;
      sub_1CA2FBFA0(&v29, &v28, (uint64_t)&v30);
      if (v5)
      {
        swift_bridgeObjectRelease();

        swift_release();
        _Block_release(aBlock);
        return;
      }
      v5 = 0;

      v17 = v30;
      v18 = v31;
      v19 = v32;
      v33 = v14;
      a4 = v14[2];
      v20 = v14[3];
      v11 = (id)(a4 + 1);
      if (a4 >= v20 >> 1)
      {
        v23 = v30;
        sub_1CA3FB9C8(v20 > 1, a4 + 1, 1);
        v17 = v23;
        v14 = v33;
      }
      v14[2] = v11;
      v21 = (char *)v14 + 28 * a4;
      *((_OWORD *)v21 + 2) = v17;
      ++v13;
      *((_QWORD *)v21 + 6) = v18;
      *((_DWORD *)v21 + 14) = v19;
      if (v12 == v13)
      {
        swift_bridgeObjectRelease();
        v11 = v26;
        a4 = (unint64_t)aBlock;
        a1 = v24;
        LODWORD(v7) = v25;
        goto LABEL_20;
      }
    }
    __break(1u);
LABEL_18:
    swift_bridgeObjectRetain();
    v12 = sub_1CA85C08C();
    if (!v12)
      goto LABEL_19;
  }
  __break(1u);
}

unint64_t sub_1CA2FDBAC()
{
  unint64_t result;

  result = qword_1EF94D2A0;
  if (!qword_1EF94D2A0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF94D2A0);
  }
  return result;
}

unint64_t sub_1CA2FDBE8()
{
  unint64_t result;

  result = qword_1EF94D2B8;
  if (!qword_1EF94D2B8)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8DBAE8, &type metadata for PGUpNextComputer.Error);
    atomic_store(result, (unint64_t *)&qword_1EF94D2B8);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for PGUpNextComputer.Error(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1CA2FDC6C + 4 * byte_1CA8DB9F0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1CA2FDC8C + 4 * byte_1CA8DB9F5[v4]))();
}

_BYTE *sub_1CA2FDC6C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1CA2FDC8C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1CA2FDC94(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1CA2FDC9C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1CA2FDCA4(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1CA2FDCAC(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for PGUpNextComputer.Error()
{
  return &type metadata for PGUpNextComputer.Error;
}

unint64_t sub_1CA2FDCD0()
{
  unint64_t result;

  result = qword_1EF94D2C0;
  if (!qword_1EF94D2C0)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8DBAC0, &type metadata for PGUpNextComputer.Error);
    atomic_store(result, (unint64_t *)&qword_1EF94D2C0);
  }
  return result;
}

unint64_t sub_1CA2FDD14()
{
  unint64_t result;

  result = qword_1EF94D2C8;
  if (!qword_1EF94D2C8)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8DBA40, &type metadata for PGUpNextComputer.Error);
    atomic_store(result, (unint64_t *)&qword_1EF94D2C8);
  }
  return result;
}

void sub_1CA2FDD58(uint64_t a1, uint64_t a2, char a3)
{
  __asm { BR              X10 }
}

uint64_t sub_1CA2FDDA8()
{
  uint64_t v0;

  sub_1CA85BEC4();
  swift_bridgeObjectRelease();
  sub_1CA85B624();
  return v0 + 6;
}

void sub_1CA2FDEB8()
{
  uint64_t v0;

  sub_1CA2FDD58(*(_QWORD *)v0, *(_QWORD *)(v0 + 8), *(_BYTE *)(v0 + 16));
}

unint64_t static MaestroMusicMatrixGenerator.projectionSpecificationsFileName.getter()
{
  return 0xD000000000000018;
}

uint64_t static MaestroMusicMatrixGenerator.projectionSpecificationsFileExtension.getter()
{
  return 0x7473696C70;
}

unint64_t static MaestroMusicMatrixGenerator.projectionSpecificationsFilePath.getter()
{
  return 0xD00000000000001ELL;
}

unint64_t static MaestroMusicMatrixGenerator.projectionMatrixFilePath.getter()
{
  return 0xD000000000000014;
}

uint64_t sub_1CA2FDF2C()
{
  uint64_t v0;
  uint64_t result;

  v0 = sub_1CA2877D4((uint64_t)&unk_1E83FE308);
  result = swift_arrayDestroy();
  qword_1ED8710D8 = v0;
  return result;
}

uint64_t static MaestroMusicMatrixGenerator.supportedLocaleIdentifiers.getter()
{
  if (qword_1ED871BC0 != -1)
    swift_once();
  return swift_bridgeObjectRetain();
}

uint64_t static MaestroMusicMatrixGenerator.localeIdentifier()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v0 = sub_1CA85A694();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1CA85A664();
  v4 = sub_1CA85A5F8();
  v6 = v5;
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  if (qword_1ED871BC0 != -1)
    swift_once();
  if ((sub_1CA290460(v4, v6, qword_1ED8710D8) & 1) == 0)
  {
    swift_bridgeObjectRelease();
    return 0x53555F6E65;
  }
  return v4;
}

uint64_t static MaestroMusicMatrixGenerator.localeProjectDirectoryName(fromLocaleIdentifier:)(uint64_t a1, uint64_t a2)
{
  if (a1 != 0x53555F6E65 || a2 != 0xE500000000000000)
    sub_1CA85C284();
  return 0x6A6F72706C2E6E65;
}

void *static MaestroMusicMatrixGenerator.keywordsByAdamID()()
{
  return sub_1CA2FF2D4();
}

void static MaestroMusicMatrixGenerator.maestroSongs(schemaVersion:)(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  _QWORD *v32;
  void *v33;
  _QWORD *v34;
  char *v35;
  void (*v36)(char *, uint64_t);
  uint64_t v37;
  uint64_t v38;
  id v39;
  void *v40;
  id v41;
  char *v42;
  void *v43;
  void *v44;
  id v45;
  void (*v46)(char *, char *, uint64_t);
  uint64_t v47;
  _QWORD *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  NSObject *v53;
  os_log_type_t v54;
  uint8_t *v55;
  uint64_t v56;
  uint8_t *v57;
  void *v58;
  void *v59;
  id v60;
  void (*v61)(char *, char *, uint64_t);
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  char *v70;
  char *v71;
  _QWORD *v72;
  char *v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  _QWORD *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;

  v76 = a1;
  v77 = a2;
  v72 = a3;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED871180);
  MEMORY[0x1E0C80A78](v4);
  v73 = (char *)&v67 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v75 = (char *)&v67 - v7;
  v8 = sub_1CA85A424();
  v78 = *(_QWORD **)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v68 = (char *)&v67 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v69 = (char *)&v67 - v11;
  MEMORY[0x1E0C80A78](v12);
  v70 = (char *)&v67 - v13;
  MEMORY[0x1E0C80A78](v14);
  v71 = (char *)&v67 - v15;
  MEMORY[0x1E0C80A78](v16);
  v74 = (char *)&v67 - v17;
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v67 - v19;
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)&v67 - v22;
  MEMORY[0x1E0C80A78](v24);
  v26 = (char *)&v67 - v25;
  v27 = sub_1CA2FF0D0();
  v29 = v28;
  type metadata accessor for CuratedSongLibrary();
  v30 = objc_msgSend((id)objc_opt_self(), sel_ignoreProgress);
  sub_1CA4A3550(v27, v29, v30, (uint64_t)v23);
  v79 = v20;
  if (v3)
  {

    swift_bridgeObjectRelease();
    v74 = 0;
    v31 = v8;
    v32 = v78;
    v33 = v3;
    v39 = objc_allocWithZone(MEMORY[0x1E0CB34D0]);
    v40 = (void *)sub_1CA85B510();
    v41 = objc_msgSend(v39, sel_initWithPath_, v40);

    v42 = v79;
    if (!v41)
    {
      sub_1CA2FFEC8();
      swift_allocError();
      *(_QWORD *)v51 = 0xD00000000000002DLL;
      *(_QWORD *)(v51 + 8) = 0x80000001CA88BB10;
      *(_BYTE *)(v51 + 16) = 0;
      swift_willThrow();
LABEL_19:

      return;
    }
    v43 = (void *)sub_1CA85B510();
    v44 = (void *)sub_1CA85B510();
    v45 = objc_msgSend(v41, sel_URLForResource_withExtension_, v43, v44);

    if (v45)
    {
      sub_1CA85A3F4();

      v46 = (void (*)(char *, char *, uint64_t))v32[4];
      v47 = (uint64_t)v75;
      v46(v75, v42, v31);
      v48 = (_QWORD *)v32[7];
      ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v48)(v47, 0, 1, v31);
      if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v32[6])(v47, 1, v31) != 1)
      {
        v49 = v71;
        v46(v71, (char *)v47, v31);
        v50 = (uint64_t)v70;
        ((void (*)(char *, char *, uint64_t))v32[2])(v70, v49, v31);
LABEL_17:
        v63 = v77;
        swift_bridgeObjectRetain();
        v64 = v63;
        v65 = v74;
        MaestroSongs.init(from:schemaVersion:)(v50, v76, v64, &v81);
        if (v65)
        {
          ((void (*)(char *, uint64_t))v32[1])(v49, v31);

          goto LABEL_19;
        }
        ((void (*)(char *, uint64_t))v32[1])(v49, v31);

        goto LABEL_23;
      }
    }
    else
    {
      v48 = (_QWORD *)v32[7];
      v47 = (uint64_t)v75;
      ((void (*)(char *, uint64_t, uint64_t, uint64_t))v48)(v75, 1, 1, v31);
    }
    sub_1CA2A4640(v47);
    if (qword_1ED872118 != -1)
      swift_once();
    v78 = v48;
    v52 = sub_1CA85B348();
    __swift_project_value_buffer(v52, (uint64_t)qword_1ED87D010);
    v53 = sub_1CA85B330();
    v54 = sub_1CA85BAE0();
    if (os_log_type_enabled(v53, v54))
    {
      v75 = v3;
      v55 = (uint8_t *)swift_slowAlloc();
      v56 = swift_slowAlloc();
      v81 = v56;
      *(_DWORD *)v55 = 136315138;
      v80 = sub_1CA28712C(0xD000000000000011, 0x80000001CA88BB40, &v81);
      v33 = v75;
      sub_1CA85BCF0();
      _os_log_impl(&dword_1CA237000, v53, v54, "[MemoriesMusic] (MaestroMusicMatrixGenerator) Falling back to checking for old style MaestroSongs json file at path: %s.", v55, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1CAA4F27C](v56, -1, -1);
      v57 = v55;
      v42 = v79;
      MEMORY[0x1CAA4F27C](v57, -1, -1);
    }

    v58 = (void *)sub_1CA85B510();
    v59 = (void *)sub_1CA85B510();
    v60 = objc_msgSend(v41, sel_URLForResource_withExtension_, v58, v59);

    if (v60)
    {
      sub_1CA85A3F4();

      v61 = (void (*)(char *, char *, uint64_t))v32[4];
      v62 = (uint64_t)v73;
      v61(v73, v42, v31);
      ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v78)(v62, 0, 1, v31);
      if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v32[6])(v62, 1, v31) != 1)
      {
        v49 = v69;
        v61(v69, (char *)v62, v31);
        v50 = (uint64_t)v68;
        ((void (*)(char *, char *, uint64_t))v32[2])(v68, v49, v31);
        goto LABEL_17;
      }
    }
    else
    {
      v62 = (uint64_t)v73;
      ((void (*)(char *, uint64_t, uint64_t, uint64_t))v78)(v73, 1, 1, v31);
    }

    sub_1CA2A4640(v62);
    sub_1CA2FFF0C();
    swift_allocError();
    *(_QWORD *)v66 = 0xD000000000000011;
    *(_QWORD *)(v66 + 8) = 0x80000001CA88BB40;
    *(_BYTE *)(v66 + 16) = 2;
    swift_willThrow();
    return;
  }
  sub_1CA85A3DC();
  sub_1CA85A3E8();
  v34 = v78;
  v35 = v20;
  v36 = (void (*)(char *, uint64_t))v78[1];
  v36(v35, v8);
  v36(v23, v8);

  swift_bridgeObjectRelease();
  v37 = (uint64_t)v74;
  ((void (*)(char *, char *, uint64_t))v34[2])(v74, v26, v8);
  v38 = v77;
  swift_bridgeObjectRetain();
  MaestroSongs.init(from:schemaVersion:)(v37, v76, v38, &v81);
  v36(v26, v8);
LABEL_23:
  *v72 = v81;
}

void static MaestroMusicMatrixGenerator.maestroSongsInfo()(_QWORD *a1@<X8>)
{
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t);
  uint64_t v33;
  id v34;
  void *v35;
  id v36;
  void *v37;
  void *v38;
  id v39;
  char *v40;
  void (*v41)(char *, char *, char *);
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  NSObject *v48;
  os_log_type_t v49;
  uint8_t *v50;
  uint64_t v51;
  void *v52;
  void *v53;
  id v54;
  void (*v55)(char *, char *, char *);
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  char *v67;
  char *v68;
  _QWORD *v69;
  char *v70;
  char *v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75[6];

  v69 = a1;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED871180);
  MEMORY[0x1E0C80A78](v2);
  v70 = (char *)&v63 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v71 = (char *)&v63 - v5;
  v6 = sub_1CA85A424();
  v74 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v64 = (char *)&v63 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v65 = (char *)&v63 - v9;
  MEMORY[0x1E0C80A78](v10);
  v67 = (char *)&v63 - v11;
  MEMORY[0x1E0C80A78](v12);
  v68 = (char *)&v63 - v13;
  MEMORY[0x1E0C80A78](v14);
  v73 = (char *)&v63 - v15;
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v63 - v17;
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v63 - v20;
  MEMORY[0x1E0C80A78](v22);
  v24 = (char *)&v63 - v23;
  v25 = sub_1CA2FF0D0();
  v27 = v26;
  type metadata accessor for CuratedSongLibrary();
  v28 = objc_msgSend((id)objc_opt_self(), sel_ignoreProgress);
  sub_1CA4A3550(v25, v27, v28, (uint64_t)v21);
  v72 = v18;
  if (v1)
  {

    swift_bridgeObjectRelease();
    v66 = 0;
    v29 = (char *)v6;
    v30 = v74;
    v73 = v1;
    v34 = objc_allocWithZone(MEMORY[0x1E0CB34D0]);
    v35 = (void *)sub_1CA85B510();
    v36 = objc_msgSend(v34, sel_initWithPath_, v35);

    if (!v36)
    {
      sub_1CA2FFEC8();
      swift_allocError();
      *(_QWORD *)v46 = 0xD00000000000002DLL;
      *(_QWORD *)(v46 + 8) = 0x80000001CA88BB10;
      *(_BYTE *)(v46 + 16) = 0;
      swift_willThrow();
LABEL_19:

      return;
    }
    v37 = (void *)sub_1CA85B510();
    v38 = (void *)sub_1CA85B510();
    v39 = objc_msgSend(v36, sel_URLForResource_withExtension_, v37, v38);

    if (v39)
    {
      v40 = v72;
      sub_1CA85A3F4();

      v41 = *(void (**)(char *, char *, char *))(v30 + 32);
      v42 = (uint64_t)v71;
      v41(v71, v40, v29);
      v43 = *(char **)(v30 + 56);
      ((void (*)(uint64_t, _QWORD, uint64_t, char *))v43)(v42, 0, 1, v29);
      if ((*(unsigned int (**)(uint64_t, uint64_t, char *))(v30 + 48))(v42, 1, v29) != 1)
      {
        v44 = v68;
        v41(v68, (char *)v42, v29);
        v45 = (uint64_t)v67;
        (*(void (**)(char *, char *, char *))(v30 + 16))(v67, v44, v29);
LABEL_17:
        v57 = v66;
        MaestroSongsInfo.init(from:)(v45, v75);
        if (v57)
        {
          (*(void (**)(char *, char *))(v30 + 8))(v44, v29);

          goto LABEL_19;
        }
        (*(void (**)(char *, char *))(v30 + 8))(v44, v29);

        goto LABEL_23;
      }
    }
    else
    {
      v43 = *(char **)(v30 + 56);
      v42 = (uint64_t)v71;
      ((void (*)(char *, uint64_t, uint64_t, char *))v43)(v71, 1, 1, v29);
      v40 = v72;
    }
    sub_1CA2A4640(v42);
    if (qword_1ED872118 != -1)
      swift_once();
    v71 = v43;
    v47 = sub_1CA85B348();
    __swift_project_value_buffer(v47, (uint64_t)qword_1ED87D010);
    v48 = sub_1CA85B330();
    v49 = sub_1CA85BAE0();
    if (os_log_type_enabled(v48, v49))
    {
      v68 = v29;
      v50 = (uint8_t *)swift_slowAlloc();
      v51 = swift_slowAlloc();
      v75[0] = v51;
      *(_DWORD *)v50 = 136315138;
      v75[5] = sub_1CA28712C(0xD000000000000011, 0x80000001CA88BB40, v75);
      v29 = v68;
      v30 = v74;
      sub_1CA85BCF0();
      _os_log_impl(&dword_1CA237000, v48, v49, "[MemoriesMusic] (MaestroMusicMatrixGenerator) Falling back to checking for old style MaestroSongsInfo in json file at path: %s.", v50, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1CAA4F27C](v51, -1, -1);
      MEMORY[0x1CAA4F27C](v50, -1, -1);
    }

    v52 = (void *)sub_1CA85B510();
    v53 = (void *)sub_1CA85B510();
    v54 = objc_msgSend(v36, sel_URLForResource_withExtension_, v52, v53);

    if (v54)
    {
      sub_1CA85A3F4();

      v55 = *(void (**)(char *, char *, char *))(v30 + 32);
      v56 = (uint64_t)v70;
      v55(v70, v40, v29);
      ((void (*)(uint64_t, _QWORD, uint64_t, char *))v71)(v56, 0, 1, v29);
      if ((*(unsigned int (**)(uint64_t, uint64_t, char *))(v30 + 48))(v56, 1, v29) != 1)
      {
        v44 = v65;
        v55(v65, (char *)v56, v29);
        v45 = (uint64_t)v64;
        (*(void (**)(char *, char *, char *))(v30 + 16))(v64, v44, v29);
        goto LABEL_17;
      }
    }
    else
    {
      v56 = (uint64_t)v70;
      ((void (*)(char *, uint64_t, uint64_t, char *))v71)(v70, 1, 1, v29);
    }

    sub_1CA2A4640(v56);
    sub_1CA2FFF0C();
    swift_allocError();
    *(_QWORD *)v58 = 0xD000000000000011;
    *(_QWORD *)(v58 + 8) = 0x80000001CA88BB40;
    *(_BYTE *)(v58 + 16) = 2;
    swift_willThrow();
    return;
  }
  sub_1CA85A3DC();
  sub_1CA85A3E8();
  v31 = v74;
  v32 = *(void (**)(char *, uint64_t))(v74 + 8);
  v32(v18, v6);
  v32(v21, v6);

  swift_bridgeObjectRelease();
  v33 = (uint64_t)v73;
  (*(void (**)(char *, char *, uint64_t))(v31 + 16))(v73, v24, v6);
  MaestroSongsInfo.init(from:)(v33, v75);
  v32(v24, v6);
LABEL_23:
  v59 = v75[1];
  v60 = v75[2];
  v61 = v75[3];
  v62 = v69;
  *v69 = v75[0];
  v62[1] = v59;
  v62[2] = v60;
  v62[3] = v61;
}

uint64_t sub_1CA2FF0D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;

  v0 = sub_1CA307C74();
  v2 = v1;
  v3 = qword_1ED871BC0;
  swift_bridgeObjectRetain();
  if (v3 != -1)
    swift_once();
  v4 = sub_1CA290460(v0, v2, qword_1ED8710D8);
  swift_bridgeObjectRelease();
  if ((v4 & 1) == 0)
    swift_beginAccess();
  return v0;
}

void *sub_1CA2FF2D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  id v27;
  id v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t);
  id v31;
  uint64_t v32;
  id v33;
  void *v34;
  id v35;
  void *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(char *, uint64_t);
  void *v42;
  id v43;
  char *v44;
  uint64_t v45;
  void (*v46)(char *, char *, void *);
  uint64_t v47;
  char *v48;
  void (*v49)(uint64_t, uint64_t, uint64_t, void *);
  unsigned int (*v50)(uint64_t, uint64_t, void *);
  void *v51;
  void *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void *v58;
  id v59;
  char *v60;
  void *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v69;
  void (*v70)(char *, void *);
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  unint64_t v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t v77;
  void *v78;
  char *v79;
  void *v80;
  void (*v81)(char *, void *);
  void *v82;
  uint64_t v83;
  char *v84;
  char *v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  char *v91;
  uint64_t v92;
  unsigned int (*v93)(void *, uint64_t, void *);
  char *v94;
  char *v95;
  uint64_t v96;
  void *v97;
  uint64_t v98;
  id v99;
  uint64_t v100;
  uint64_t v101;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED871180);
  v1 = MEMORY[0x1E0C80A78](v0);
  v86 = (char *)&v83 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v1);
  v94 = (char *)&v83 - v3;
  v96 = sub_1CA85A694();
  v93 = *(unsigned int (**)(void *, uint64_t, void *))(v96 - 8);
  MEMORY[0x1E0C80A78](v96);
  v95 = (char *)&v83 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1CA85A424();
  v101 = *(_QWORD *)(v5 - 8);
  v6 = MEMORY[0x1E0C80A78](v5);
  v85 = (char *)&v83 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x1E0C80A78](v6);
  v90 = (char *)&v83 - v9;
  v10 = MEMORY[0x1E0C80A78](v8);
  v89 = (uint64_t)&v83 - v11;
  v12 = MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v83 - v13;
  v15 = MEMORY[0x1E0C80A78](v12);
  v17 = (char *)&v83 - v16;
  v18 = MEMORY[0x1E0C80A78](v15);
  v20 = (char *)&v83 - v19;
  MEMORY[0x1E0C80A78](v18);
  v92 = (uint64_t)&v83 - v21;
  v22 = sub_1CA2FF0D0();
  v24 = v23;
  v25 = type metadata accessor for CuratedSongLibrary();
  v26 = (void *)objc_opt_self();
  v27 = objc_msgSend(v26, sel_ignoreProgress);
  v87 = v25;
  v88 = v22;
  v98 = v24;
  v28 = v99;
  sub_1CA4A3550(v22, v24, v27, (uint64_t)v20);
  v97 = (void *)v5;
  v91 = v17;
  if (!v28)
  {
    v29 = v5;
    v84 = v14;
    sub_1CA85A3DC();
    sub_1CA85A3E8();
    v30 = *(void (**)(char *, uint64_t))(v101 + 8);
    v30(v17, v5);
    v30(v20, v5);

    v31 = objc_msgSend(v26, sel_ignoreProgress);
    v32 = v89;
    sub_1CA4A3550(v88, v98, v31, v89);
    sub_1CA85A3DC();
    v69 = v84;
    sub_1CA85A3E8();
    v30(v17, v29);
    v70 = (void (*)(char *, void *))v30;
    v30((char *)v32, v29);

    swift_bridgeObjectRelease();
    v72 = sub_1CA85A430();
    v74 = v73;
    sub_1CA85A31C();
    swift_allocObject();
    sub_1CA85A310();
    sub_1CA300154();
    sub_1CA85A304();
    sub_1CA260204(v72, v74);
    swift_release();
    v77 = v92;
    v78 = (void *)sub_1CA475D74(v92, &v100);
    v79 = v69;
    v80 = v97;
    v70(v79, v97);
    v70((char *)v77, v80);
    swift_bridgeObjectRelease();
LABEL_31:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v78;
  }
  v99 = v28;

  swift_bridgeObjectRelease();
  v33 = objc_allocWithZone(MEMORY[0x1E0CB34D0]);
  v78 = (void *)0xD00000000000002DLL;
  v34 = (void *)sub_1CA85B510();
  v35 = objc_msgSend(v33, sel_initWithPath_, v34);

  if (!v35)
  {
    sub_1CA2FFEC8();
    swift_allocError();
    *(_QWORD *)v66 = 0xD00000000000002DLL;
    *(_QWORD *)(v66 + 8) = 0x80000001CA88BB10;
    *(_BYTE *)(v66 + 16) = 0;
    swift_willThrow();
LABEL_26:

    return v78;
  }
  v78 = (void *)sub_1CA85B510();
  v36 = (void *)sub_1CA85B510();
  v37 = v95;
  sub_1CA85A664();
  v38 = sub_1CA85A5F8();
  v40 = v39;
  v41 = (void (*)(char *, uint64_t))*((_QWORD *)v93 + 1);
  v41(v37, v96);
  if (qword_1ED871BC0 != -1)
    swift_once();
  if ((sub_1CA290460(v38, v40, qword_1ED8710D8) & 1) == 0)
  {
    swift_bridgeObjectRelease();
    v40 = 0xE500000000000000;
    v38 = 0x53555F6E65;
  }
  if (v38 != 0x53555F6E65 || v40 != 0xE500000000000000)
    sub_1CA85C284();
  swift_bridgeObjectRelease();
  v42 = (void *)sub_1CA85B510();
  swift_bridgeObjectRelease();
  v43 = objc_msgSend(v35, sel_URLForResource_withExtension_subdirectory_, v78, v36, v42);

  if (!v43)
  {
    v47 = (uint64_t)v94;
    (*(void (**)(char *, uint64_t, uint64_t, void *))(v101 + 56))(v94, 1, 1, v97);
    goto LABEL_25;
  }
  v98 = 0;
  v44 = v91;
  sub_1CA85A3F4();

  v45 = v101;
  v46 = *(void (**)(char *, char *, void *))(v101 + 32);
  v47 = (uint64_t)v94;
  v48 = v44;
  v78 = v97;
  v46(v94, v48, v97);
  v49 = *(void (**)(uint64_t, uint64_t, uint64_t, void *))(v45 + 56);
  v49(v47, 0, 1, v78);
  v50 = *(unsigned int (**)(uint64_t, uint64_t, void *))(v45 + 48);
  if (v50(v47, 1, v78) == 1)
  {
LABEL_25:
    sub_1CA2A4640(v47);
    sub_1CA2FFF0C();
    swift_allocError();
    *(_QWORD *)v67 = 0xD000000000000014;
    *(_QWORD *)(v67 + 8) = 0x80000001CA88BAF0;
    *(_BYTE *)(v67 + 16) = 3;
    swift_willThrow();

    goto LABEL_26;
  }
  v93 = (unsigned int (*)(void *, uint64_t, void *))v50;
  v46(v90, (char *)v47, v78);
  v51 = (void *)sub_1CA85B510();
  v52 = (void *)sub_1CA85B510();
  v53 = v95;
  sub_1CA85A664();
  v54 = sub_1CA85A5F8();
  v56 = v55;
  v41(v53, v96);
  if ((sub_1CA290460(v54, v56, qword_1ED8710D8) & 1) == 0)
  {
    swift_bridgeObjectRelease();
    v56 = 0xE500000000000000;
    v54 = 0x53555F6E65;
  }
  v57 = (uint64_t)v90;
  if (v54 != 0x53555F6E65 || v56 != 0xE500000000000000)
    sub_1CA85C284();
  swift_bridgeObjectRelease();
  v58 = (void *)sub_1CA85B510();
  swift_bridgeObjectRelease();
  v59 = objc_msgSend(v35, sel_URLForResource_withExtension_subdirectory_, v51, v52, v58);

  if (!v59)
  {
    v78 = v86;
    v61 = v97;
    v49((uint64_t)v86, 1, 1, v97);
    goto LABEL_29;
  }
  v60 = v91;
  sub_1CA85A3F4();

  v78 = v86;
  v61 = v97;
  v46(v86, v60, v97);
  v49((uint64_t)v78, 0, 1, v61);
  if (v93(v78, 1, v61) == 1)
  {
LABEL_29:
    sub_1CA2A4640((uint64_t)v78);
    sub_1CA2FFF0C();
    swift_allocError();
    *(_QWORD *)v71 = 0xD00000000000001ELL;
    *(_QWORD *)(v71 + 8) = 0x80000001CA88BAD0;
    *(_BYTE *)(v71 + 16) = 1;
    swift_willThrow();

    (*(void (**)(uint64_t, void *))(v101 + 8))(v57, v61);
    return v78;
  }
  v62 = v85;
  v46(v85, (char *)v78, v61);
  v63 = v98;
  v64 = sub_1CA85A430();
  if (!v63)
  {
    v75 = v64;
    v76 = v65;
    sub_1CA85A31C();
    swift_allocObject();
    sub_1CA85A310();
    sub_1CA300154();
    sub_1CA85A304();
    sub_1CA260204(v75, v76);
    swift_release();
    v78 = (void *)sub_1CA475D74(v57, &v100);

    v81 = *(void (**)(char *, void *))(v101 + 8);
    v82 = v97;
    v81(v62, v97);
    v81((char *)v57, v82);
    swift_bridgeObjectRelease();
    goto LABEL_31;
  }

  v78 = *(void **)(v101 + 8);
  ((void (*)(char *, void *))v78)(v62, v61);
  ((void (*)(uint64_t, void *))v78)(v57, v61);
  return v78;
}

unint64_t sub_1CA2FFEC8()
{
  unint64_t result;

  result = qword_1EF94D2D0;
  if (!qword_1EF94D2D0)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8E38C4, &type metadata for PhotosMusicResources.Error);
    atomic_store(result, (unint64_t *)&qword_1EF94D2D0);
  }
  return result;
}

unint64_t sub_1CA2FFF0C()
{
  unint64_t result;

  result = qword_1EF94D2D8;
  if (!qword_1EF94D2D8)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8DBBAC, &type metadata for MaestroMusicMatrixGenerator.Error);
    atomic_store(result, (unint64_t *)&qword_1EF94D2D8);
  }
  return result;
}

ValueMetadata *type metadata accessor for MaestroMusicMatrixGenerator()
{
  return &type metadata for MaestroMusicMatrixGenerator;
}

uint64_t sub_1CA2FFF64(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 <= 4u)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t destroy for MaestroMusicMatrixGenerator.Error(uint64_t a1)
{
  return sub_1CA2FFF8C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t sub_1CA2FFF8C(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 <= 4u)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t _s11PhotosGraph27MaestroMusicMatrixGeneratorV5ErrorOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1CA2FFF64(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for MaestroMusicMatrixGenerator.Error(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1CA2FFF64(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_1CA2FFF8C(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for MaestroMusicMatrixGenerator.Error(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_1CA2FFF8C(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for MaestroMusicMatrixGenerator.Error(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFB && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 251);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 5)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for MaestroMusicMatrixGenerator.Error(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFA)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 251;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFB)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFB)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_1CA300110(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 4u)
    return *(unsigned __int8 *)(a1 + 16);
  else
    return (*(_DWORD *)a1 + 5);
}

uint64_t sub_1CA300128(uint64_t result, unsigned int a2)
{
  if (a2 >= 5)
  {
    *(_QWORD *)result = a2 - 5;
    *(_QWORD *)(result + 8) = 0;
    LOBYTE(a2) = 5;
  }
  *(_BYTE *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for MaestroMusicMatrixGenerator.Error()
{
  return &type metadata for MaestroMusicMatrixGenerator.Error;
}

unint64_t sub_1CA300154()
{
  unint64_t result;

  result = qword_1ED871C00;
  if (!qword_1ED871C00)
  {
    result = MEMORY[0x1CAA4F1A4](&protocol conformance descriptor for MaestroDataFrameSpecifications, &type metadata for MaestroDataFrameSpecifications);
    atomic_store(result, (unint64_t *)&qword_1ED871C00);
  }
  return result;
}

float sub_1CA30019C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  double v17;
  double v18;
  float v19;
  uint64_t v21;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8711C0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1CA85A5B0();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = (uint64_t *)(a3 + OBJC_IVAR___PGMusicCurationRecentlyUsedSongs_mostRecentlyUsedSongIDDateMap);
  swift_beginAccess();
  v14 = *v13;
  if (*(_QWORD *)(v14 + 16))
  {
    swift_bridgeObjectRetain();
    v15 = sub_1CA25081C(a1, a2);
    if ((v16 & 1) != 0)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v8, *(_QWORD *)(v14 + 56) + *(_QWORD *)(v10 + 72) * v15, v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v8, 0, 1, v9);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, 1, 1, v9);
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, 1, 1, v9);
  }
  swift_endAccess();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_1CA29DFF0((uint64_t)v8);
    return 1.0;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
  sub_1CA85A4F0();
  v18 = fabs(v17);
  if (v18 >= 5184000.0)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    return 1.0;
  }
  v19 = v18 / 5184000.0;
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  return v19;
}

float sub_1CA3003A8(_QWORD *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  float v7;

  v3 = a1[3];
  v4 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v3);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v3, v4);
  v7 = sub_1CA30019C(v5, v6, a2);
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_1CA300420(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v13 = MEMORY[0x1E0DEE9D8];
    sub_1CA3FB754(0, v1, 0);
    v2 = v13;
    v4 = *(_QWORD *)(type metadata accessor for Song() - 8);
    v5 = *(_QWORD *)(v4 + 72);
    v6 = (uint64_t *)(((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80)) + a1 + 8);
    do
    {
      v8 = *(v6 - 1);
      v7 = *v6;
      v10 = *(_QWORD *)(v13 + 16);
      v9 = *(_QWORD *)(v13 + 24);
      swift_bridgeObjectRetain();
      if (v10 >= v9 >> 1)
        sub_1CA3FB754(v9 > 1, v10 + 1, 1);
      v6 = (uint64_t *)((char *)v6 + v5);
      *(_QWORD *)(v13 + 16) = v10 + 1;
      v11 = v13 + 16 * v10;
      *(_QWORD *)(v11 + 32) = v8;
      *(_QWORD *)(v11 + 40) = v7;
      --v1;
    }
    while (v1);
  }
  return v2;
}

double static MemoryDisplayMetadataCacheManager.expirationThreshold.getter()
{
  return 172800.0;
}

void static MemoryDisplayMetadataCacheManager.evictExpiredSongs(with:progressReporter:completionHandler:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char *v7;

  v7 = sub_1CA2CEAA8(a1);
  _s11PhotosGraph33MemoryDisplayMetadataCacheManagerC17evictExpiredSongs4from16progressReporter17completionHandleryAA05MusicF0C_So010MAProgressM0CySb_s5Error_pSgtctFZ_0(v7, a2, a3, a4);

}

uint64_t sub_1CA3006A4(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(uint64_t))
{
  uint64_t v7;

  if ((a1 & 1) != 0)
  {
    MusicCache.evictSongsForMemoryDisplay(before:progressReporter:)(a4);
    v7 = 1;
  }
  else
  {
    v7 = 0;
  }
  return a6(v7);
}

void sub_1CA300740(uint64_t a1, uint64_t a2, void *a3)
{
  void (*v5)(uint64_t, void *);
  id v6;

  v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  swift_retain();
  v6 = a3;
  v5(a2, a3);
  swift_release();

}

id MemoryDisplayMetadataCacheManager.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id MemoryDisplayMetadataCacheManager.init()()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_init);
}

id MemoryDisplayMetadataCacheManager.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t _s11PhotosGraph33MemoryDisplayMetadataCacheManagerC17evictExpiredSongs4from16progressReporter17completionHandleryAA05MusicF0C_So010MAProgressM0CySb_s5Error_pSgtctFZ_0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  void *v12;
  void *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  _QWORD *v24;
  uint64_t v25;
  void *v26;
  id v27;
  id v28;
  void *v29;
  void *v30;
  uint64_t v32;
  id v33;
  void *v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  _QWORD aBlock[6];

  v37 = a4;
  v35 = a3;
  v5 = sub_1CA85A5B0();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  v8 = MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v32 - v10;
  sub_1CA85A538();
  v12 = (void *)sub_1CA85BB94();
  v36 = v13;
  v34 = v14;
  sub_1CA24EEC0(0, (unint64_t *)&qword_1ED872320);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8727B0);
  v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_1CA8D51C0;
  *(_QWORD *)(v15 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v15 + 64) = sub_1CA2891BC();
  *(_QWORD *)(v15 + 32) = 0x7461446568636163;
  *(_QWORD *)(v15 + 40) = 0xE900000000000065;
  v16 = sub_1CA85A508();
  *(_QWORD *)(v15 + 96) = sub_1CA24EEC0(0, &qword_1ED8723A0);
  *(_QWORD *)(v15 + 104) = sub_1CA2CEE9C();
  *(_QWORD *)(v15 + 72) = v16;
  v17 = (void *)sub_1CA85BA80();
  v18 = sub_1CA4161F0((uint64_t)v17);

  sub_1CA300420(v18);
  swift_bridgeObjectRelease();
  v33 = (id)objc_opt_self();
  v32 = sub_1CA85B798();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v9, v11, v5);
  v19 = (*(unsigned __int8 *)(v6 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v20 = (v7 + v19 + 7) & 0xFFFFFFFFFFFFFFF8;
  v21 = swift_allocObject();
  *(_QWORD *)(v21 + 16) = a1;
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v21 + v19, v9, v5);
  v23 = v34;
  v22 = v35;
  *(_QWORD *)(v21 + v20) = v34;
  v24 = (_QWORD *)(v21 + ((v20 + 15) & 0xFFFFFFFFFFFFFFF8));
  v25 = v37;
  *v24 = v22;
  v24[1] = v25;
  aBlock[4] = sub_1CA300FF8;
  aBlock[5] = v21;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1CA300740;
  aBlock[3] = &block_descriptor_10;
  v26 = _Block_copy(aBlock);
  v27 = a1;
  v28 = v23;
  swift_retain();
  swift_release();
  v29 = (void *)v32;
  v30 = v36;
  objc_msgSend(v33, sel_removeSongsCachedForPhotosWithAdamIDs_progressReporter_completionHandler_, v32, v36, v26);
  _Block_release(v26);

  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v11, v5);
}

uint64_t type metadata accessor for MemoryDisplayMetadataCacheManager()
{
  return objc_opt_self();
}

uint64_t sub_1CA300BF4(void *a1, uint64_t a2, const void *a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  void *v11;
  void *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  void *v24;
  void (**v25)(char, uint64_t);
  void *v26;
  id v27;
  id v28;
  void *v29;
  void *v30;
  uint64_t v32;
  uint64_t v33;
  id v34;
  void *v35;
  id v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  _QWORD aBlock[6];

  v39 = sub_1CA85A5B0();
  v37 = *(_QWORD *)(v39 - 8);
  v5 = *(_QWORD *)(v37 + 64);
  v6 = MEMORY[0x1E0C80A78](v39);
  v7 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v32 - v8;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = a3;
  _Block_copy(a3);
  sub_1CA85A538();
  v11 = (void *)sub_1CA85BB94();
  v38 = v12;
  v35 = v13;
  sub_1CA24EEC0(0, (unint64_t *)&qword_1ED872320);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8727B0);
  v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_1CA8D51C0;
  *(_QWORD *)(v14 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v14 + 64) = sub_1CA2891BC();
  *(_QWORD *)(v14 + 32) = 0x7461446568636163;
  *(_QWORD *)(v14 + 40) = 0xE900000000000065;
  v15 = sub_1CA85A508();
  *(_QWORD *)(v14 + 96) = sub_1CA24EEC0(0, &qword_1ED8723A0);
  *(_QWORD *)(v14 + 104) = sub_1CA2CEE9C();
  *(_QWORD *)(v14 + 72) = v15;
  v16 = (void *)sub_1CA85BA80();
  v36 = v11;
  v17 = a1;
  v18 = sub_1CA4161F0((uint64_t)v16);

  sub_1CA300420(v18);
  swift_bridgeObjectRelease();
  v34 = (id)objc_opt_self();
  v33 = sub_1CA85B798();
  swift_bridgeObjectRelease();
  v19 = v37;
  v20 = v39;
  (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v7, v9, v39);
  v21 = (*(unsigned __int8 *)(v19 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v22 = (v5 + v21 + 7) & 0xFFFFFFFFFFFFFFF8;
  v23 = swift_allocObject();
  *(_QWORD *)(v23 + 16) = v17;
  (*(void (**)(unint64_t, char *, uint64_t))(v19 + 32))(v23 + v21, v7, v20);
  v24 = v35;
  *(_QWORD *)(v23 + v22) = v35;
  v25 = (void (**)(char, uint64_t))(v23 + ((v22 + 15) & 0xFFFFFFFFFFFFFFF8));
  *v25 = sub_1CA300FEC;
  v25[1] = (void (*)(char, uint64_t))v10;
  aBlock[4] = sub_1CA300FF8;
  aBlock[5] = v23;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1CA300740;
  aBlock[3] = &block_descriptor_7;
  v26 = _Block_copy(aBlock);
  v27 = v17;
  v28 = v24;
  swift_retain();
  swift_release();
  v29 = (void *)v33;
  v30 = v38;
  objc_msgSend(v34, sel_removeSongsCachedForPhotosWithAdamIDs_progressReporter_completionHandler_, v33, v38, v26);
  _Block_release(v26);

  (*(void (**)(char *, uint64_t))(v19 + 8))(v9, v20);
  return swift_release();
}

uint64_t sub_1CA300FC8()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

void sub_1CA300FEC(char a1, uint64_t a2)
{
  uint64_t v2;

  sub_1CA50BEF4(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t sub_1CA301000(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v5 = *(_QWORD *)(sub_1CA85A5B0() - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = (*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_1CA3006A4(a1, a2, *(_QWORD *)(v2 + 16), v2 + v6, *(_QWORD *)(v2 + v7), *(uint64_t (**)(uint64_t))(v2 + ((v7 + 15) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t MusicKitPlaylist.id.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MusicKitPlaylist.id.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*MusicKitPlaylist.id.modify())()
{
  return GEOLocationCoordinate2DMake;
}

uint64_t MusicKitPlaylist.title.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MusicKitPlaylist.title.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return result;
}

uint64_t (*MusicKitPlaylist.title.modify())()
{
  return GEOLocationCoordinate2DMake;
}

uint64_t MusicKitPlaylist.songs.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t MusicKitPlaylist.songs.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 32) = a1;
  return result;
}

uint64_t (*MusicKitPlaylist.songs.modify())()
{
  return GEOLocationCoordinate2DMake;
}

uint64_t sub_1CA30119C@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, _QWORD *a3@<X8>)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t i;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  os_log_type_t v24;
  NSObject *v25;
  uint8_t *v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t __dst[37];
  _QWORD v33[30];
  uint64_t v34;

  v4 = a1[1];
  v5 = a1[3];
  v30 = a1[2];
  v31 = *a1;
  v6 = a1[6];
  v7 = *a2;
  if (v6 && (v8 = *(_QWORD *)(v6 + 16)) != 0)
  {
    v29 = a1[3];
    v28 = a1[1];
    swift_bridgeObjectRetain();
    v9 = v8 - 1;
    v10 = MEMORY[0x1E0DEE9D8];
    for (i = 32; ; i += 296)
    {
      memcpy(__dst, (const void *)(v6 + i), sizeof(__dst));
      sub_1CA301898((uint64_t)&__dst[2], (uint64_t)v33);
      if (sub_1CA3018E0((uint64_t)v33) != 1 && v33[21])
      {
        sub_1CA2B6F24((uint64_t)__dst);
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v34 = v10;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_1CA3FB9E4(0, *(_QWORD *)(v10 + 16) + 1, 1);
          v10 = v34;
        }
        v14 = *(_QWORD *)(v10 + 16);
        v13 = *(_QWORD *)(v10 + 24);
        if (v14 >= v13 >> 1)
        {
          sub_1CA3FB9E4(v13 > 1, v14 + 1, 1);
          v10 = v34;
        }
        *(_QWORD *)(v10 + 16) = v14 + 1;
        memcpy((void *)(v10 + 296 * v14 + 32), __dst, 0x128uLL);
      }
      if (!v9)
        break;
      --v9;
    }
    swift_bridgeObjectRelease();
    v4 = v28;
    v5 = v29;
  }
  else
  {
    v10 = MEMORY[0x1E0DEE9D8];
  }
  v15 = sub_1CA47F8DC(v7);
  if (*(_QWORD *)(v15 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED872508);
    v16 = sub_1CA85C0C8();
  }
  else
  {
    v16 = MEMORY[0x1E0DEE9E0];
  }
  __dst[0] = v16;
  sub_1CA4800F0(v15, (uint64_t)sub_1CA48050C, 0, 1, __dst);
  swift_bridgeObjectRelease();
  v17 = __dst[0];
  if (*(_QWORD *)(__dst[0] + 16))
  {
    swift_bridgeObjectRetain();
    v18 = sub_1CA25081C(v31, v4);
    if ((v19 & 1) != 0)
    {
      v20 = (uint64_t *)(*(_QWORD *)(v17 + 56) + 16 * v18);
      v21 = *v20;
      v22 = v20[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease_n();
      result = swift_bridgeObjectRelease();
      *a3 = v21;
      a3[1] = v22;
      a3[2] = v30;
      a3[3] = v5;
      a3[4] = v10;
      return result;
    }
    swift_bridgeObjectRelease();
  }
  swift_release();
  swift_bridgeObjectRelease();
  v24 = sub_1CA85BAEC();
  if (qword_1ED872410 != -1)
    swift_once();
  v25 = qword_1ED8710F0;
  if (os_log_type_enabled((os_log_t)qword_1ED8710F0, v24))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v26 = (uint8_t *)swift_slowAlloc();
    v27 = swift_slowAlloc();
    __dst[0] = v27;
    *(_DWORD *)v26 = 136315138;
    swift_bridgeObjectRetain();
    v33[0] = sub_1CA28712C(v31, v4, __dst);
    sub_1CA85BCF0();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1CA237000, v25, v24, "[MemoriesMusic] No identifier for playlist with id: %s", v26, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1CAA4F27C](v27, -1, -1);
    result = MEMORY[0x1CAA4F27C](v26, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
  }
  a3[4] = 0;
  *(_OWORD *)a3 = 0u;
  *((_OWORD *)a3 + 1) = 0u;
  return result;
}

unint64_t MusicKitPlaylist.description.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t i;
  _BYTE v18[296];
  _QWORD v19[37];
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;

  v1 = type metadata accessor for Song();
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(_QWORD *)(v0 + 32);
  v19[0] = 0;
  v19[1] = 0xE000000000000000;
  sub_1CA85BEC4();
  swift_bridgeObjectRelease();
  v21 = 0xD000000000000014;
  v22 = 0x80000001CA88BCF0;
  swift_bridgeObjectRetain();
  sub_1CA85B624();
  swift_bridgeObjectRelease();
  sub_1CA85B624();
  swift_bridgeObjectRetain();
  sub_1CA85B624();
  swift_bridgeObjectRelease();
  sub_1CA85B624();
  v5 = *(_QWORD *)(v4 + 16);
  v6 = MEMORY[0x1E0DEE9D8];
  if (v5)
  {
    v20 = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    sub_1CA3FB754(0, v5, 0);
    v6 = v20;
    v7 = v5 - 1;
    v8 = 32;
    for (i = v4; ; v4 = i)
    {
      memcpy(v19, (const void *)(v4 + v8), sizeof(v19));
      memcpy(v18, (const void *)(v4 + v8), sizeof(v18));
      sub_1CA2B6F24((uint64_t)v19);
      sub_1CA2B6F24((uint64_t)v19);
      Song.init(_:)(v18, (uint64_t)v3);
      v9 = Song.description.getter();
      v11 = v10;
      sub_1CA268588((uint64_t)v3);
      sub_1CA2B706C((uint64_t)v19);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1CA3FB754(0, *(_QWORD *)(v6 + 16) + 1, 1);
        v6 = v20;
      }
      v13 = *(_QWORD *)(v6 + 16);
      v12 = *(_QWORD *)(v6 + 24);
      if (v13 >= v12 >> 1)
      {
        sub_1CA3FB754(v12 > 1, v13 + 1, 1);
        v6 = v20;
      }
      *(_QWORD *)(v6 + 16) = v13 + 1;
      v14 = v6 + 16 * v13;
      *(_QWORD *)(v14 + 32) = v9;
      *(_QWORD *)(v14 + 40) = v11;
      if (!v7)
        break;
      --v7;
      v8 += 296;
    }
    swift_bridgeObjectRelease();
  }
  v19[0] = v6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED872270);
  sub_1CA282410();
  sub_1CA85B4D4();
  swift_bridgeObjectRelease();
  sub_1CA85B624();
  swift_bridgeObjectRelease();
  return v21;
}

ValueMetadata *type metadata accessor for MusicKitPlaylist()
{
  return &type metadata for MusicKitPlaylist;
}

uint64_t sub_1CA301898(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED872D50);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1CA3018E0(uint64_t a1)
{
  unint64_t v1;
  int v2;

  v1 = *(_QWORD *)(a1 + 24);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  v2 = v1 - 1;
  if (v2 < 0)
    v2 = -1;
  return (v2 + 1);
}

ValueMetadata *type metadata accessor for PersonalPreferenceRanker()
{
  return &type metadata for PersonalPreferenceRanker;
}

uint64_t sub_1CA301914()
{
  uint64_t v0;
  uint64_t result;

  v0 = sub_1CA50234C((uint64_t)&unk_1E83FE398);
  result = swift_arrayDestroy();
  qword_1ED87D0E0 = v0;
  return result;
}

void sub_1CA30195C(float a1, float a2)
{
  float v4;

  if (a1 == a2)
  {
    __break(1u);
    goto LABEL_7;
  }
  v4 = a2 - a1;
  if ((~COERCE_INT(a2 - a1) & 0x7F800000) == 0)
  {
LABEL_7:
    __break(1u);
    return;
  }
  sub_1CA85A9F4();
  sub_1CA302ADC();
  while ((float)((float)(v4 * (float)((float)(sub_1CA85B48C() & 0xFFFFFF) * 0.000000059605)) + a1) == a2)
    ;
}

uint64_t sub_1CA301A00(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  return sub_1CA302094(a1, a2, a3, a4);
}

void sub_1CA301A14(uint64_t a1, uint64_t a2, char a3, uint64_t *a4)
{
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  unint64_t v22;
  uint64_t v23;
  _BOOL8 v24;
  uint64_t v25;
  char v26;
  unint64_t v27;
  char v28;
  uint64_t v29;
  void *v30;
  id v31;
  uint64_t *v32;
  _QWORD *v33;
  uint64_t v34;
  BOOL v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  unint64_t v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  unint64_t v46;
  uint64_t v47;
  _BOOL8 v48;
  uint64_t v49;
  char v50;
  unint64_t v51;
  char v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  id v66;

  v57 = type metadata accessor for Song();
  v63 = *(_QWORD *)(v57 - 8);
  v8 = MEMORY[0x1E0C80A78](v57);
  v10 = (uint64_t *)((char *)&v56 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v56 - v11;
  v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED871D60);
  MEMORY[0x1E0C80A78](v62);
  v14 = (char *)&v56 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *(_QWORD *)(a1 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (!v15)
    goto LABEL_29;
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  v16 = *(_QWORD *)(v63 + 72);
  sub_1CA268434(a1 + ((*(unsigned __int8 *)(v63 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v63 + 80)), (uint64_t)v12);
  if (!*(_QWORD *)(a2 + 16))
  {
LABEL_28:
    sub_1CA268588((uint64_t)v12);
    goto LABEL_29;
  }
  v58 = v15;
  v59 = v16;
  v17 = a3;
  v60 = a2;
  v18 = *(_DWORD *)(a2 + 32);
  v19 = *(int *)(v62 + 48);
  sub_1CA268478((uint64_t)v12, (uint64_t)v14);
  *(_DWORD *)&v14[v19] = v18;
  sub_1CA268478((uint64_t)v14, (uint64_t)v10);
  v61 = a4;
  v20 = *a4;
  v22 = sub_1CA250830(v10);
  v23 = *(_QWORD *)(v20 + 16);
  v24 = (v21 & 1) == 0;
  v25 = v23 + v24;
  if (__OFADD__(v23, v24))
  {
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  v26 = v21;
  if (*(_QWORD *)(v20 + 24) >= v25)
  {
    if ((v17 & 1) != 0)
    {
      v29 = v59;
      if ((v21 & 1) == 0)
        goto LABEL_14;
    }
    else
    {
      sub_1CA2611AC();
      v29 = v59;
      if ((v26 & 1) == 0)
        goto LABEL_14;
    }
    goto LABEL_11;
  }
  sub_1CA253DA8(v25, v17 & 1);
  v27 = sub_1CA250830(v10);
  if ((v26 & 1) == (v28 & 1))
  {
    v22 = v27;
    v29 = v59;
    if ((v26 & 1) == 0)
    {
LABEL_14:
      v32 = v61;
      v33 = (_QWORD *)*v61;
      *(_QWORD *)(*v61 + 8 * (v22 >> 6) + 64) |= 1 << v22;
      sub_1CA268478((uint64_t)v10, v33[6] + v22 * v29);
      *(_DWORD *)(v33[7] + 4 * v22) = v18;
      v34 = v33[2];
      v35 = __OFADD__(v34, 1);
      v36 = v34 + 1;
      if (v35)
        goto LABEL_32;
      v33[2] = v36;
      v59 = v58 - 1;
      v37 = v60;
      if (v58 != 1)
      {
        v38 = 0;
        v58 = v60 + 36;
        do
        {
          v39 = v38 + 1;
          if ((unint64_t)(v38 + 1) >= *(_QWORD *)(a1 + 16))
            goto LABEL_30;
          v40 = *(_QWORD *)(v63 + 72);
          sub_1CA268434(a1+ ((*(unsigned __int8 *)(v63 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v63 + 80))+ v40 * v39, (uint64_t)v12);
          v41 = *(_QWORD *)(v37 + 16);
          if (v39 == v41)
            goto LABEL_28;
          if (v39 >= v41)
            goto LABEL_33;
          v42 = *(_DWORD *)(v58 + 4 * v38);
          v43 = *(int *)(v62 + 48);
          sub_1CA268478((uint64_t)v12, (uint64_t)v14);
          *(_DWORD *)&v14[v43] = v42;
          sub_1CA268478((uint64_t)v14, (uint64_t)v10);
          v44 = *v32;
          v46 = sub_1CA250830(v10);
          v47 = *(_QWORD *)(v44 + 16);
          v48 = (v45 & 1) == 0;
          v49 = v47 + v48;
          if (__OFADD__(v47, v48))
            goto LABEL_31;
          v50 = v45;
          if (*(_QWORD *)(v44 + 24) < v49)
          {
            sub_1CA253DA8(v49, 1);
            v51 = sub_1CA250830(v10);
            if ((v50 & 1) != (v52 & 1))
              goto LABEL_34;
            v46 = v51;
          }
          if ((v50 & 1) != 0)
            goto LABEL_11;
          v32 = v61;
          v53 = (_QWORD *)*v61;
          *(_QWORD *)(*v61 + 8 * (v46 >> 6) + 64) |= 1 << v46;
          sub_1CA268478((uint64_t)v10, v53[6] + v46 * v40);
          *(_DWORD *)(v53[7] + 4 * v46) = v42;
          v54 = v53[2];
          v35 = __OFADD__(v54, 1);
          v55 = v54 + 1;
          if (v35)
            goto LABEL_32;
          v53[2] = v55;
          ++v38;
          v37 = v60;
        }
        while (v59 != v38);
      }
LABEL_29:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      return;
    }
LABEL_11:
    v30 = (void *)swift_allocError();
    swift_willThrow();
    v66 = v30;
    v31 = v30;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED872BA0);
    if ((swift_dynamicCast() & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1CA268588((uint64_t)v10);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      return;
    }
    goto LABEL_35;
  }
LABEL_34:
  sub_1CA85C2E4();
  __break(1u);
LABEL_35:
  v64 = 0;
  v65 = 0xE000000000000000;
  sub_1CA85BEC4();
  sub_1CA85B624();
  sub_1CA85BFCC();
  sub_1CA85B624();
  sub_1CA85C044();
  __break(1u);
}

uint64_t sub_1CA301F30(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  unint64_t v8;
  BOOL v9;
  uint64_t v10;
  uint64_t result;
  _QWORD v12[2];

  v12[1] = *MEMORY[0x1E0C80C00];
  v4 = sub_1CA85A9F4();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (a2 + ((a1 + 2654435769) << 6) + ((unint64_t)(a1 + 2654435769) >> 2) + 2654435769u) ^ (a1 + 2654435769);
  if ((v8 & 0x8000000000000000) == 0)
    goto LABEL_4;
  v9 = __OFSUB__(0, v8);
  v10 = -(uint64_t)v8;
  if (v9)
    __break(1u);
  if (v10 < 0)
  {
    result = sub_1CA85C038();
    __break(1u);
  }
  else
  {
LABEL_4:
    sub_1CA85A9E8();
    sub_1CA30195C(0.75, 1.25);
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  return result;
}

uint64_t sub_1CA302094(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  int64_t v37;
  unint64_t v38;
  int64_t v39;
  char v40;
  void (*v41)(uint64_t *, _QWORD);
  char **v42;
  char **v43;
  char *v44;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v46;
  unint64_t v47;
  unint64_t v48;
  unint64_t v49;
  float v50;
  void (*v51)(uint64_t *, _QWORD);
  char **v52;
  char **v53;
  char *v54;
  char v55;
  unint64_t v56;
  unint64_t v57;
  unint64_t v58;
  unint64_t v59;
  unint64_t v60;
  unint64_t v61;
  int v62;
  int v63;
  char **v64;
  char **v65;
  char *v66;
  char v67;
  unint64_t v68;
  unint64_t v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  void (*v73)(char *, char *, uint64_t);
  char *v74;
  float v75;
  float v76;
  void (*v77)(char *, uint64_t);
  float v78;
  float v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  uint64_t v85;
  uint64_t result;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  void (*v93)(uint64_t *, _QWORD);
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  int64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105[4];
  char v106[40];
  int64_t v107;

  v5 = v4;
  v89 = a4;
  v104 = a1;
  v8 = type metadata accessor for Song();
  v101 = *(_QWORD *)(v8 - 8);
  v9 = MEMORY[0x1E0C80A78](v8);
  v102 = (uint64_t)&v87 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x1E0C80A78](v9);
  v96 = (uint64_t)&v87 - v12;
  v13 = MEMORY[0x1E0C80A78](v11);
  v94 = (uint64_t)&v87 - v14;
  v15 = MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v87 - v16;
  MEMORY[0x1E0C80A78](v15);
  v103 = (uint64_t)&v87 - v18;
  v19 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED872100);
  v90 = *(_QWORD *)(v19 - 8);
  v20 = MEMORY[0x1E0C80A78](v19);
  v88 = (char *)&v87 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v20);
  v23 = (char *)&v87 - v22;
  if (qword_1ED873010 != -1)
LABEL_70:
    swift_once();
  v91 = v5;
  sub_1CA2E4280("Personal Preference Ranker", 26, 2u, 0, 1, qword_1ED87D148, (uint64_t)v106);
  v24 = swift_bridgeObjectRetain();
  v25 = sub_1CA2826B4(v24);
  if (qword_1ED872F28 != -1)
    swift_once();
  v26 = qword_1ED87D0E0;
  swift_bridgeObjectRetain();
  v95 = *(_QWORD *)(sub_1CA2D6EB0(v25, v26) + 16);
  swift_bridgeObjectRelease();
  swift_release();
  v27 = MEMORY[0x1E0DEE9D8];
  sub_1CA85AA6C();
  v28 = *(_DWORD *)(a3 + OBJC_IVAR___PGMusicCuratorContext_configuration + 328);
  v92 = *(_QWORD *)(a2 + OBJC_IVAR___PGMusicCurationFeatures_consistentHash);
  v29 = *(_QWORD *)(v104 + 56);
  v97 = v104 + 56;
  v30 = 1 << *(_BYTE *)(v104 + 32);
  v31 = -1;
  if (v30 < 64)
    v31 = ~(-1 << v30);
  a3 = v31 & v29;
  v98 = (unint64_t)(v30 + 63) >> 6;
  swift_bridgeObjectRetain();
  v32 = 0;
  v99 = v19;
  v100 = v23;
  v33 = v101;
  while (1)
  {
    if (a3)
    {
      v35 = __clz(__rbit64(a3));
      a3 &= a3 - 1;
      v36 = v35 | (v32 << 6);
      goto LABEL_26;
    }
    v37 = v32 + 1;
    if (__OFADD__(v32, 1))
    {
      __break(1u);
LABEL_69:
      __break(1u);
      goto LABEL_70;
    }
    if (v37 >= v98)
      goto LABEL_55;
    v38 = *(_QWORD *)(v97 + 8 * v37);
    ++v32;
    if (!v38)
    {
      v32 = v37 + 1;
      if (v37 + 1 >= v98)
        goto LABEL_55;
      v38 = *(_QWORD *)(v97 + 8 * v32);
      if (!v38)
      {
        v32 = v37 + 2;
        if (v37 + 2 >= v98)
          goto LABEL_55;
        v38 = *(_QWORD *)(v97 + 8 * v32);
        if (!v38)
          break;
      }
    }
LABEL_25:
    a3 = (v38 - 1) & v38;
    v36 = __clz(__rbit64(v38)) + (v32 << 6);
LABEL_26:
    a2 = v103;
    v5 = *(_QWORD *)(v33 + 72);
    sub_1CA268434(*(_QWORD *)(v104 + 48) + v5 * v36, v103);
    sub_1CA268478(a2, (uint64_t)v17);
    v40 = v17[96];
    v107 = v32;
    if ((v40 & 1) != 0)
    {
      v41 = (void (*)(uint64_t *, _QWORD))sub_1CA85AA78();
      v43 = v42;
      v44 = *v42;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *v43 = v44;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        v44 = sub_1CA26BBC4(0, *((_QWORD *)v44 + 2) + 1, 1, v44);
        *v43 = v44;
      }
      v47 = *((_QWORD *)v44 + 2);
      v46 = *((_QWORD *)v44 + 3);
      if (v47 >= v46 >> 1)
      {
        v44 = sub_1CA26BBC4((char *)(v46 > 1), v47 + 1, 1, v44);
        *v43 = v44;
      }
      v33 = v101;
      *((_QWORD *)v44 + 2) = v47 + 1;
      *(_DWORD *)&v44[4 * v47 + 32] = v28;
      v41(v105, 0);
      sub_1CA268434((uint64_t)v17, v102);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v27 = sub_1CA26CD10(0, *(_QWORD *)(v27 + 16) + 1, 1, v27);
      v19 = v99;
      v23 = v100;
      v49 = *(_QWORD *)(v27 + 16);
      v48 = *(_QWORD *)(v27 + 24);
      a2 = v49 + 1;
      if (v49 >= v48 >> 1)
        v27 = sub_1CA26CD10(v48 > 1, v49 + 1, 1, v27);
      v34 = v102;
LABEL_8:
      *(_QWORD *)(v27 + 16) = a2;
      sub_1CA268478(v34, v27 + ((*(unsigned __int8 *)(v33 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80)) + v49 * v5);
      v32 = v107;
      goto LABEL_9;
    }
    v50 = *((float *)v17 + 23);
    if (v95)
    {
      v51 = (void (*)(uint64_t *, _QWORD))sub_1CA85AA78();
      v53 = v52;
      v54 = *v52;
      v55 = swift_isUniquelyReferenced_nonNull_native();
      *v53 = v54;
      if ((v55 & 1) == 0)
      {
        v54 = sub_1CA26BBC4(0, *((_QWORD *)v54 + 2) + 1, 1, v54);
        *v53 = v54;
      }
      v57 = *((_QWORD *)v54 + 2);
      v56 = *((_QWORD *)v54 + 3);
      if (v57 >= v56 >> 1)
      {
        v54 = sub_1CA26BBC4((char *)(v56 > 1), v57 + 1, 1, v54);
        *v53 = v54;
      }
      v33 = v101;
      *((_QWORD *)v54 + 2) = v57 + 1;
      *(float *)&v54[4 * v57 + 32] = v50;
      v51(v105, 0);
      sub_1CA268434((uint64_t)v17, v96);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v27 = sub_1CA26CD10(0, *(_QWORD *)(v27 + 16) + 1, 1, v27);
      v19 = v99;
      v23 = v100;
      v49 = *(_QWORD *)(v27 + 16);
      v58 = *(_QWORD *)(v27 + 24);
      a2 = v49 + 1;
      if (v49 >= v58 >> 1)
        v27 = sub_1CA26CD10(v58 > 1, v49 + 1, 1, v27);
      v34 = v96;
      goto LABEL_8;
    }
    if (v50 >= 0.0)
    {
      v60 = *(_QWORD *)v17;
      v59 = *((_QWORD *)v17 + 1);
      swift_bridgeObjectRetain();
      v61 = sub_1CA2F79E8(v60, v59);
      swift_bridgeObjectRelease();
      sub_1CA301F30(v92, v61);
      v63 = v62;
      v93 = (void (*)(uint64_t *, _QWORD))sub_1CA85AA78();
      v65 = v64;
      v66 = *v64;
      v67 = swift_isUniquelyReferenced_nonNull_native();
      *v65 = v66;
      if ((v67 & 1) == 0)
      {
        v66 = sub_1CA26BBC4(0, *((_QWORD *)v66 + 2) + 1, 1, v66);
        *v65 = v66;
      }
      v69 = *((_QWORD *)v66 + 2);
      v68 = *((_QWORD *)v66 + 3);
      if (v69 >= v68 >> 1)
      {
        v66 = sub_1CA26BBC4((char *)(v68 > 1), v69 + 1, 1, v66);
        *v65 = v66;
      }
      v33 = v101;
      *((_QWORD *)v66 + 2) = v69 + 1;
      *(_DWORD *)&v66[4 * v69 + 32] = v63;
      v93(v105, 0);
      sub_1CA268434((uint64_t)v17, v94);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v27 = sub_1CA26CD10(0, *(_QWORD *)(v27 + 16) + 1, 1, v27);
      v23 = v100;
      v49 = *(_QWORD *)(v27 + 16);
      v70 = *(_QWORD *)(v27 + 24);
      a2 = v49 + 1;
      if (v49 >= v70 >> 1)
        v27 = sub_1CA26CD10(v70 > 1, v49 + 1, 1, v27);
      v34 = v94;
      goto LABEL_8;
    }
LABEL_9:
    sub_1CA268588((uint64_t)v17);
  }
  v39 = v37 + 3;
  if (v39 < v98)
  {
    v38 = *(_QWORD *)(v97 + 8 * v39);
    if (!v38)
    {
      while (1)
      {
        v32 = v39 + 1;
        if (__OFADD__(v39, 1))
          goto LABEL_69;
        if (v32 >= v98)
          goto LABEL_55;
        v38 = *(_QWORD *)(v97 + 8 * v32);
        ++v39;
        if (v38)
          goto LABEL_25;
      }
    }
    v32 = v39;
    goto LABEL_25;
  }
LABEL_55:
  v71 = v104;
  swift_release();
  if (!*(_QWORD *)(v71 + 16))
  {
    swift_bridgeObjectRelease();
    v84 = sub_1CA27494C(MEMORY[0x1E0DEE9D8]);
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v90 + 8))(v23, v19);
    return v84;
  }
  v72 = v90;
  v73 = *(void (**)(char *, char *, uint64_t))(v90 + 16);
  v74 = v88;
  v73(v88, v23, v19);
  sub_1CA302A90();
  sub_1CA85A9DC();
  v76 = v75;
  v77 = *(void (**)(char *, uint64_t))(v72 + 8);
  v77(v74, v19);
  v73(v74, v23, v19);
  sub_1CA85A9D0();
  v79 = v78;
  v77(v74, v19);
  sub_1CA85A9C4();
  if (v76 < v79)
    sub_1CA85A9B8();
  v80 = sub_1CA85AA84();
  v81 = v80;
  if (*(_QWORD *)(v80 + 16) >= *(_QWORD *)(v27 + 16))
    v82 = *(_QWORD *)(v27 + 16);
  else
    v82 = *(_QWORD *)(v80 + 16);
  if (v82)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED872500);
    v83 = sub_1CA85C0C8();
  }
  else
  {
    v83 = MEMORY[0x1E0DEE9E0];
  }
  v105[0] = v83;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v85 = v91;
  sub_1CA301A14(v27, v81, 1, v105);
  if (v85)
  {
    result = swift_unexpectedError();
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v84 = v105[0];
    sub_1CA2E0C94(0);
    sub_1CA85BB70();
    v77(v23, v19);
    swift_release();
    swift_release();
    return v84;
  }
  return result;
}

unint64_t sub_1CA302A90()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED8720F8;
  if (!qword_1ED8720F8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1ED872100);
    result = MEMORY[0x1CAA4F1A4](MEMORY[0x1E0D428C8], v1);
    atomic_store(result, (unint64_t *)&qword_1ED8720F8);
  }
  return result;
}

unint64_t sub_1CA302ADC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED872DB0;
  if (!qword_1ED872DB0)
  {
    v1 = sub_1CA85A9F4();
    result = MEMORY[0x1CAA4F1A4](MEMORY[0x1E0D42830], v1);
    atomic_store(result, (unint64_t *)&qword_1ED872DB0);
  }
  return result;
}

void sub_1CA302B24(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  void *v20;
  id v21;
  void *v22;
  id v23;
  id v24;
  void *v25;
  void (*v26)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t (*v27)(char *, uint64_t, uint64_t);
  id v28;
  void *v29;
  int v30;
  id v31;
  id v32;
  char *v33;
  void (*v34)(char *, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t (*v37)(char *, uint64_t, uint64_t);
  void (*v38)(char *, uint64_t, uint64_t, uint64_t);
  void (*v39)(char *, char *, uint64_t);
  id v40;
  id v41;
  char *v42;
  void *v43;
  _BYTE v44[32];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8711C0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v36 - v8;
  v10 = sub_1CA85A5B0();
  v11 = *(_QWORD **)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v36 - v15;
  MEMORY[0x1E0C80A78](v17);
  v42 = (char *)&v36 - v18;
  sub_1CA266A08(a1, (uint64_t)v44);
  sub_1CA3039A8();
  if ((swift_dynamicCast() & 1) != 0)
  {
    v19 = v43;
    sub_1CA266A08(a2, (uint64_t)v44);
    if ((swift_dynamicCast() & 1) == 0)
    {

      return;
    }
    v20 = v43;
    v21 = objc_msgSend(v19, sel_location);
    if (!v21)
    {

      return;
    }
    v22 = v21;
    v23 = objc_msgSend(v20, sel_location);
    if (!v23)
    {

      return;
    }
    v40 = v22;
    v41 = v23;
    v24 = objc_msgSend(v19, sel_creationDate);
    if (v24)
    {
      v25 = v24;
      sub_1CA85A574();

      v39 = (void (*)(char *, char *, uint64_t))v11[4];
      v39(v9, v16, v10);
      v26 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v11[7];
      v26(v9, 0, 1, v10);
      v27 = (uint64_t (*)(char *, uint64_t, uint64_t))v11[6];
      if (v27(v9, 1, v10) != 1)
      {
        v37 = v27;
        v38 = v26;
        v39(v42, v9, v10);
        v28 = objc_msgSend(v20, sel_creationDate);
        if (v28)
        {
          v29 = v28;
          sub_1CA85A574();

          v39(v6, v16, v10);
          v38(v6, 0, 1, v10);
          v30 = v37(v6, 1, v10);
          v31 = v40;
          v32 = v41;
          if (v30 != 1)
          {
            v39(v13, v6, v10);
            objc_msgSend(v31, sel_distanceFromLocation_, v32);
            v33 = v42;
            sub_1CA85A4F0();

            v34 = (void (*)(char *, uint64_t))v11[1];
            v34(v13, v10);
            v34(v33, v10);
            return;
          }
        }
        else
        {
          v38(v6, 1, 1, v10);
          v31 = v40;
          v32 = v41;
        }

        ((void (*)(char *, uint64_t))v11[1])(v42, v10);
        v35 = (uint64_t)v6;
        goto LABEL_17;
      }
    }
    else
    {
      ((void (*)(char *, uint64_t, uint64_t, uint64_t))v11[7])(v9, 1, 1, v10);
    }

    v35 = (uint64_t)v9;
LABEL_17:
    sub_1CA29DFF0(v35);
  }
}

double sub_1CA302F20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  double (*v5)(_QWORD *, _QWORD *);
  double v6;
  _QWORD v8[4];
  _QWORD v9[4];

  v5 = *(double (**)(_QWORD *, _QWORD *))(a1 + 32);
  v9[3] = swift_getObjectType();
  v9[0] = a2;
  v8[3] = swift_getObjectType();
  v8[0] = a3;
  swift_retain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  v6 = v5(v9, v8);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
  return v6;
}

uint64_t sub_1CA302FC4()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  void *v22;
  id v23;
  id v24;
  unint64_t v25;
  void *v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  id v31;
  BOOL v32;
  unint64_t v33;
  id v34;
  unint64_t v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  double v39;
  double v40;
  id v41;
  void *v42;
  id v43;
  void *v44;
  id v45;
  void *v46;
  unint64_t v47;
  char *v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  void (*v53)(char *, char *, uint64_t);
  char *v54;
  char *v55;
  double v56;
  double v57;
  double v58;
  double v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  void (*v64)(char *, uint64_t);
  id v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  id v70;
  unint64_t v71;
  uint64_t v72;
  double v73;
  double v74;
  void (*v75)(char *, char *, uint64_t);
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  unint64_t v79;
  unint64_t v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  id v84;
  id v85;
  uint64_t v86;
  char isUniquelyReferenced_nonNull_native;
  void (*v88)(char *, uint64_t);
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t *v93;
  unint64_t v94;
  unint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  unint64_t v100;
  uint64_t v101;
  unint64_t v102;
  unint64_t v103;
  char *v104;
  id v105;
  char *v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  unint64_t v110;
  _QWORD aBlock[7];

  v0 = type metadata accessor for PublicEventTimeAndLocation();
  v97 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v2 = (unint64_t)&v90 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (uint64_t *)((char *)&v90 - v4);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8711C0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v90 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1CA85A5B0();
  v109 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v96 = (char *)&v90 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v106 = (char *)&v90 - v12;
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v90 - v14;
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v90 - v17;
  MEMORY[0x1E0C80A78](v19);
  v107 = (char *)&v90 - v20;
  v21 = objc_allocWithZone(MEMORY[0x1E0D71698]);
  aBlock[4] = sub_1CA302B24;
  aBlock[5] = 0;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1CA302F20;
  aBlock[3] = &block_descriptor_8;
  v22 = _Block_copy(aBlock);
  v23 = objc_msgSend(v21, sel_initWithDistanceBlock_, v22);
  _Block_release(v22);
  swift_release();
  if (!v23)
    return MEMORY[0x1E0DEE9E0];
  v24 = v23;
  objc_msgSend(v24, sel_setMaximumDistance_, 96.0);
  objc_msgSend(v24, sel_setMinimumNumberOfObjects_, 1);

  v25 = sub_1CA3039A8();
  v26 = (void *)sub_1CA85B798();
  v27 = objc_msgSend(v24, sel_performWithDataset_progressBlock_, v26, 0);

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94D2E0);
  v28 = sub_1CA85B7B0();

  if ((unint64_t)v28 >> 62)
    goto LABEL_54;
  v29 = *(_QWORD *)((v28 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (v29)
  {
    v30 = 0;
    v100 = v28 & 0xC000000000000001;
    v92 = v28 & 0xFFFFFFFFFFFFFF8;
    v91 = v28 + 32;
    v102 = MEMORY[0x1E0DEE9D8];
    v101 = MEMORY[0x1E0DEE9E0];
    v94 = v2;
    v93 = v5;
    v104 = v18;
    v95 = v25;
    v99 = v28;
    v98 = v29;
    while (1)
    {
      if (v100)
      {
        v31 = (id)MEMORY[0x1CAA4DD64](v30, v28);
      }
      else
      {
        if (v30 >= *(_QWORD *)(v92 + 16))
          goto LABEL_53;
        v31 = *(id *)(v91 + 8 * v30);
      }
      v105 = v31;
      v32 = __OFADD__(v30, 1);
      v33 = v30 + 1;
      if (v32)
      {
        __break(1u);
        goto LABEL_52;
      }
      v103 = v33;
      v34 = objc_msgSend(v105, sel_objects);
      v35 = sub_1CA85B7B0();

      if (v35 >> 62)
      {
        swift_bridgeObjectRetain();
        v36 = sub_1CA85C08C();
        swift_bridgeObjectRelease();
      }
      else
      {
        v36 = *(_QWORD *)((v35 & 0xFFFFFFFFFFFFF8) + 0x10);
      }
      swift_bridgeObjectRelease();
      if (v36 >= 1)
        break;

LABEL_6:
      v28 = v99;
      v30 = v103;
      if (v103 == v98)
        goto LABEL_56;
    }
    sub_1CA85A4D8();
    sub_1CA85A4C0();
    v37 = objc_msgSend(v105, sel_objects);
    v2 = sub_1CA85B7B0();

    if (!(v2 >> 62))
    {
      v28 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v28)
        goto LABEL_17;
      goto LABEL_38;
    }
    swift_bridgeObjectRetain();
    v28 = sub_1CA85C08C();
    swift_bridgeObjectRelease();
    if (!v28)
    {
LABEL_38:
      v39 = 0.0;
      v40 = 0.0;
LABEL_39:
      swift_bridgeObjectRelease();
      v65 = objc_msgSend(v105, sel_objects);
      v25 = v95;
      v66 = sub_1CA85B7B0();

      if (v66 >> 62)
      {
        swift_bridgeObjectRetain();
        v67 = sub_1CA85C08C();
        swift_bridgeObjectRelease();
      }
      else
      {
        v67 = *(_QWORD *)((v66 & 0xFFFFFFFFFFFFF8) + 0x10);
      }
      v68 = v94;
      v5 = v93;
      v69 = v104;
      swift_bridgeObjectRelease();
      v70 = objc_msgSend(v105, sel_objects);
      v71 = sub_1CA85B7B0();

      if (v71 >> 62)
      {
        swift_bridgeObjectRetain();
        v72 = sub_1CA85C08C();
        swift_bridgeObjectRelease();
      }
      else
      {
        v72 = *(_QWORD *)((v71 & 0xFFFFFFFFFFFFF8) + 0x10);
      }
      v73 = v40 / (double)v67;
      swift_bridgeObjectRelease();
      v74 = v39 / (double)v72;
      v75 = *(void (**)(char *, char *, uint64_t))(v109 + 16);
      v76 = (uint64_t)v106;
      v75(v106, v107, v9);
      v77 = (uint64_t)v96;
      v75(v96, v69, v9);
      sub_1CA30FB30(v76, v77, (uint64_t)v5, v73, v74);
      sub_1CA3039E4((uint64_t)v5, v68);
      v78 = v102;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v78 = sub_1CA26D5D8(0, *(_QWORD *)(v78 + 16) + 1, 1, v78);
      v80 = *(_QWORD *)(v78 + 16);
      v79 = *(_QWORD *)(v78 + 24);
      v102 = v78;
      if (v80 >= v79 >> 1)
        v102 = sub_1CA26D5D8(v79 > 1, v80 + 1, 1, v102);
      v81 = v102;
      *(_QWORD *)(v102 + 16) = v80 + 1;
      sub_1CA303A28(v68, v81+ ((*(unsigned __int8 *)(v97 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v97 + 80))+ *(_QWORD *)(v97 + 72) * v80);
      v82 = *v5;
      v83 = v5[1];
      swift_bridgeObjectRetain();
      v84 = v105;
      v85 = objc_msgSend(v105, sel_objects);
      v2 = sub_1CA85B7B0();

      v86 = v101;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      aBlock[0] = v86;
      sub_1CA25E43C(v2, v82, v83, isUniquelyReferenced_nonNull_native);
      v101 = aBlock[0];

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1CA303A6C((uint64_t)v5);
      v88 = *(void (**)(char *, uint64_t))(v109 + 8);
      v18 = v104;
      v88(v104, v9);
      v88(v107, v9);
      goto LABEL_6;
    }
LABEL_17:
    if (v28 >= 1)
    {
      v38 = 0;
      v110 = v2 & 0xC000000000000001;
      v39 = 0.0;
      v40 = 0.0;
      v108 = v28;
      while (1)
      {
        v41 = v110 ? (id)MEMORY[0x1CAA4DD64](v38, v2) : *(id *)(v2 + 8 * v38 + 32);
        v42 = v41;
        v43 = objc_msgSend(v41, sel_location);
        if (v43)
          break;

LABEL_20:
        if (v28 == ++v38)
          goto LABEL_39;
      }
      v44 = v43;
      v45 = objc_msgSend(v42, sel_creationDate);
      if (v45)
      {
        v46 = v45;
        v47 = v2;
        v48 = v15;
        v49 = v9;
        v50 = v8;
        v51 = v106;
        sub_1CA85A574();

        v52 = v109;
        v53 = *(void (**)(char *, char *, uint64_t))(v109 + 32);
        v54 = v50;
        v55 = v51;
        v8 = v50;
        v9 = v49;
        v15 = v48;
        v2 = v47;
        v53(v54, v55, v9);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v52 + 56))(v8, 0, 1, v9);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v52 + 48))(v8, 1, v9) != 1)
        {
          v53(v15, v8, v9);
          objc_msgSend(v44, sel_coordinate);
          v57 = v56;
          objc_msgSend(v44, sel_coordinate);
          v59 = v58;
          if (sub_1CA85A58C() == 1)
          {
            v60 = v109;
            v61 = v107;
            (*(void (**)(char *, uint64_t))(v109 + 8))(v107, v9);
            (*(void (**)(char *, char *, uint64_t))(v60 + 16))(v61, v15, v9);
          }
          v40 = v40 + v57;
          v39 = v39 + v59;
          v62 = v104;
          v63 = sub_1CA85A58C();

          v64 = *(void (**)(char *, uint64_t))(v109 + 8);
          if (v63 == -1)
          {
            v64(v62, v9);
            v53(v62, v15, v9);
          }
          else
          {
            v64(v15, v9);
          }
          v2 = v47;
          goto LABEL_35;
        }
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v109 + 56))(v8, 1, 1, v9);
      }

      sub_1CA29DFF0((uint64_t)v8);
LABEL_35:
      v28 = v108;
      goto LABEL_20;
    }
LABEL_52:
    __break(1u);
LABEL_53:
    __break(1u);
LABEL_54:
    swift_bridgeObjectRetain();
    v29 = sub_1CA85C08C();
    swift_bridgeObjectRelease();
  }
  v102 = MEMORY[0x1E0DEE9D8];
  v101 = MEMORY[0x1E0DEE9E0];
LABEL_56:
  swift_bridgeObjectRelease();
  return v101;
}

unint64_t sub_1CA3039A8()
{
  unint64_t result;

  result = qword_1ED8723B0;
  if (!qword_1ED8723B0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED8723B0);
  }
  return result;
}

uint64_t sub_1CA3039E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PublicEventTimeAndLocation();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1CA303A28(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PublicEventTimeAndLocation();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1CA303A6C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for PublicEventTimeAndLocation();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t static MusicBag.userStorefront()()
{
  return sub_1CA307C74();
}

uint64_t static MusicBag.favoritesMix.getter()
{
  return 0x657469726F766166;
}

uint64_t static MusicBag.chillMix.getter()
{
  return 0x6C6C696863;
}

uint64_t static MusicBag.getUpMix.getter()
{
  return 0x7055746567;
}

uint64_t static MusicBag.friendsMix.getter()
{
  return 0x73646E65697266;
}

uint64_t static MusicBag.newMusicMix.getter()
{
  return 0x636973754D77656ELL;
}

void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> MusicBag.fetchMusicBagContents()(PhotosGraph::MusicBagContents *__return_ptr retstr)
{
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  id v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  void *v20;
  dispatch_semaphore_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  void *v25;
  NSObject *v26;
  uint64_t v27;
  id v28;
  void *v29;
  id v30;
  dispatch_semaphore_t v31;
  uint64_t v32;
  _QWORD *v33;
  void *v34;
  NSObject *v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  NSObject *v40;
  os_log_type_t v41;
  _BOOL4 v42;
  uint8_t *v43;
  uint64_t v44;
  NSObject *v45;
  os_log_type_t v46;
  uint8_t *v47;
  id v48;
  dispatch_semaphore_t v49;
  uint64_t v50;
  _QWORD *v51;
  void *v52;
  NSObject *v53;
  id v54;
  id v55;
  void *v56;
  id v57;
  dispatch_semaphore_t v58;
  uint64_t v59;
  _QWORD *v60;
  void *v61;
  NSObject *v62;
  id v63;
  void *v64;
  id v65;
  void *v66;
  id v67;
  uint64_t v68;
  unint64_t v69;
  unint64_t v70;
  void *v71;
  _BYTE *v72;
  id v73;
  uint64_t v74;
  id v75;
  id v76;
  NSObject *v77;
  os_log_type_t v78;
  uint8_t *v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  NSObject *v83;
  os_log_type_t v84;
  uint8_t *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  __int128 v99;
  id v100;
  void *v101;
  id v102;
  dispatch_semaphore_t v103;
  uint64_t v104;
  _QWORD *v105;
  void *v106;
  NSObject *v107;
  id v108;
  id v109;
  void *v110;
  id v111;
  uint64_t v112;
  unint64_t v113;
  unint64_t v114;
  id v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  char v120;
  uint64_t v121;
  unint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  unint64_t v128;
  uint64_t v129;
  void *v130;
  uint64_t v131;
  void *v132;
  id v133;
  void *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  id v138;
  uint64_t v139;
  uint64_t v140;
  unint64_t v141;
  uint64_t v142;
  void *v143;
  uint64_t v144;
  uint64_t v145;
  _BYTE v146[248];
  char v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  id v152[72];
  _QWORD v153[38];
  int64x2_t v154;
  __int128 v155;
  int64x2_t v156;
  __int128 v157;
  __int128 v158;
  __int128 v159;
  __int128 v160;
  __int128 v161;
  __int128 v162;
  __int128 v163;
  __int128 v164;
  __int128 v165;
  __int128 v166;
  int64x2_t v167;
  __int128 v168;
  char v169;
  int64x2_t v170;
  __int128 v171;
  int64x2_t v172;
  __int128 v173;
  __int128 v174;
  __int128 v175;
  __int128 v176;
  __int128 v177;
  __int128 v178;
  __int128 v179;
  __int128 v180;
  __int128 v181;
  __int128 v182;
  int64x2_t v183;
  __int128 v184;
  char v185;
  int64x2_t v186;
  __int128 v187;
  int64x2_t v188;
  __int128 v189;
  __int128 v190;
  __int128 v191;
  __int128 v192;
  __int128 v193;
  __int128 v194;
  __int128 v195;
  __int128 v196;
  __int128 v197;
  __int128 v198;
  int64x2_t v199;
  __int128 v200;
  char v201;
  id v202;
  int64x2_t v203;
  __int128 v204;
  int64x2_t v205;
  __int128 v206;
  __int128 v207;
  __int128 v208;
  __int128 v209;
  __int128 v210;
  __int128 v211;
  __int128 v212;
  __int128 v213;
  __int128 v214;
  __int128 v215;
  int64x2_t v216;
  __int128 v217;
  char v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  int64x2_t v224;
  __int128 v225;
  int64x2_t v226;
  __int128 v227;
  _OWORD v228[2];
  __int128 v229;
  __int128 v230;
  __int128 v231;
  __int128 v232;
  _OWORD v233[3];
  int64x2_t v234;
  __int128 v235;
  char v236;
  _BYTE v237[7];
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242[2];
  _BYTE v243[360];
  uint64_t v244;
  _BYTE v245[56];
  _BYTE v246[304];
  uint64_t v247[38];
  _OWORD v248[19];
  uint64_t v249;

  ((void (*)())MEMORY[0x1E0C80A78])();
  v4 = v3;
  v249 = *MEMORY[0x1E0C80C00];
  sub_1CA2CEC9C(v248);
  v131 = *(_QWORD *)(v1 + OBJC_IVAR___PGMusicBag_cache);
  v137 = v4;
  v142 = v1;
  if (!v131)
  {
    sub_1CA24EEF8((uint64_t)v248, (uint64_t)v246, &qword_1ED8713C8);
LABEL_11:
    sub_1CA24EEF8((uint64_t)v246, (uint64_t)v247, &qword_1ED8713C8);
    v134 = v2;
    goto LABEL_14;
  }
  if (qword_1ED872F80 != -1)
    swift_once();
  v5 = qword_1ED87D078;
  *(double *)&v6 = CACurrentMediaTime();
  sub_1CA2E4280("MusicCacheReadInfo", 18, 2u, v6, 0, v5, (uint64_t)&v244);
  v7 = sub_1CA24EEF8((uint64_t)v248, (uint64_t)v152, &qword_1ED8713C8);
  MEMORY[0x1E0C80A78](v7);
  sub_1CA85BC30();
  if (!v2)
  {
    sub_1CA2E0C94(0);
    swift_release();
    swift_release();
    sub_1CA24EEF8((uint64_t)v152, (uint64_t)v247, &qword_1ED8713C8);
    sub_1CA24EEF8((uint64_t)v247, (uint64_t)v246, &qword_1ED8713C8);
    v1 = v142;
    goto LABEL_11;
  }
  swift_release();
  swift_release();
  sub_1CA24EEF8((uint64_t)v152, (uint64_t)v246, &qword_1ED8713C8);
  sub_1CA307FBC((uint64_t)v246, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1CA2CED64);
  if (qword_1ED872138 != -1)
    swift_once();
  v8 = sub_1CA85B348();
  __swift_project_value_buffer(v8, (uint64_t)qword_1ED87D058);
  v9 = v2;
  v10 = v2;
  v11 = sub_1CA85B330();
  v12 = sub_1CA85BAC8();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = (uint8_t *)swift_slowAlloc();
    v14 = swift_slowAlloc();
    v247[0] = v14;
    *(_DWORD *)v13 = 136315138;
    swift_getErrorValue();
    v15 = sub_1CA85C308();
    v242[0] = sub_1CA28712C(v15, v16, v247);
    sub_1CA85BCF0();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1CA237000, v11, v12, "[MemoriesMusic] failed to decode MusicCacheInfo, error: %s.", v13, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1CAA4F27C](v14, -1, -1);
    MEMORY[0x1CAA4F27C](v13, -1, -1);
  }
  else
  {

  }
  MEMORY[0x1E0C80A78](v17);
  sub_1CA85BC30();
  v134 = 0;

  sub_1CA24EEF8((uint64_t)v248, (uint64_t)v247, &qword_1ED8713C8);
  v1 = v142;
LABEL_14:
  v143 = (void *)sub_1CA85B510();
  v18 = OBJC_IVAR___PGMusicBag_amsBag;
  v19 = *(id *)(v1 + OBJC_IVAR___PGMusicBag_amsBag);
  v20 = (void *)sub_1CA85B510();
  v138 = objc_msgSend(v19, sel_integerForKey_, v20);

  v21 = dispatch_semaphore_create(0);
  v22 = swift_allocObject();
  *(_QWORD *)(v22 + 16) = 0;
  v23 = (_QWORD *)swift_allocObject();
  v23[2] = v22;
  v23[3] = v21;
  v152[4] = sub_1CA307E78;
  v152[5] = v23;
  v152[0] = (id)MEMORY[0x1E0C809B0];
  v152[1] = (id)1107296256;
  v24 = v1;
  v152[2] = sub_1CA305D2C;
  v152[3] = &block_descriptor_9;
  v25 = _Block_copy(v152);
  swift_retain();
  v26 = v21;
  swift_release();
  objc_msgSend(v138, sel_valueWithCompletion_, v25);
  _Block_release(v25);
  sub_1CA85BC18();

  swift_beginAccess();
  v27 = *(_QWORD *)(v22 + 16);

  swift_release();
  v140 = v18;
  v28 = *(id *)(v24 + v18);
  v29 = (void *)sub_1CA85B510();
  v30 = objc_msgSend(v28, sel_integerForKey_, v29);

  v31 = dispatch_semaphore_create(0);
  v32 = swift_allocObject();
  *(_QWORD *)(v32 + 16) = 0;
  v33 = (_QWORD *)swift_allocObject();
  v33[2] = v32;
  v33[3] = v31;
  v152[4] = sub_1CA3086F0;
  v152[5] = v33;
  v152[0] = (id)MEMORY[0x1E0C809B0];
  v152[1] = (id)1107296256;
  v152[2] = sub_1CA305D2C;
  v152[3] = &block_descriptor_11;
  v34 = _Block_copy(v152);
  swift_retain();
  v35 = v31;
  swift_release();
  objc_msgSend(v30, sel_valueWithCompletion_, v34);
  _Block_release(v34);
  sub_1CA85BC18();

  swift_beginAccess();
  v36 = *(_QWORD *)(v32 + 16);

  swift_release();
  if (v27)
  {
    v136 = v27;
    v37 = (void *)MEMORY[0x1E0C809B0];
    v38 = v140;
    if (v36)
      goto LABEL_27;
    goto LABEL_22;
  }
  if (qword_1ED872138 != -1)
    swift_once();
  v39 = sub_1CA85B348();
  __swift_project_value_buffer(v39, (uint64_t)qword_1ED87D058);
  v40 = sub_1CA85B330();
  v41 = sub_1CA85BAD4();
  v42 = os_log_type_enabled(v40, v41);
  v37 = (void *)MEMORY[0x1E0C809B0];
  v38 = v140;
  if (v42)
  {
    v43 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v43 = 0;
    _os_log_impl(&dword_1CA237000, v40, v41, "[MemoriesMusic] failed to read song batch size from bag, defaulting hard coded value.", v43, 2u);
    MEMORY[0x1CAA4F27C](v43, -1, -1);
  }

  v136 = 300;
  if (!v36)
  {
LABEL_22:
    if (qword_1ED872138 != -1)
      swift_once();
    v44 = sub_1CA85B348();
    __swift_project_value_buffer(v44, (uint64_t)qword_1ED87D058);
    v45 = sub_1CA85B330();
    v46 = sub_1CA85BAD4();
    if (os_log_type_enabled(v45, v46))
    {
      v47 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v47 = 0;
      _os_log_impl(&dword_1CA237000, v45, v46, "[MemoriesMusic] failed to read song equivalent batch size from bag, defaulting hard coded value.", v47, 2u);
      MEMORY[0x1CAA4F27C](v47, -1, -1);
    }

    v36 = 300;
  }
LABEL_27:
  v139 = v36;
  v48 = objc_msgSend(*(id *)(v142 + v38), sel_dictionaryForKey_, v143);
  v49 = dispatch_semaphore_create(0);
  v50 = swift_allocObject();
  *(_QWORD *)(v50 + 16) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C99D80]), sel_init);
  v51 = (_QWORD *)swift_allocObject();
  v51[2] = v50;
  v51[3] = v49;
  v152[5] = v51;
  v152[0] = v37;
  v152[1] = (id)1107296256;
  v152[2] = sub_1CA305D2C;
  v152[3] = &block_descriptor_20;
  v152[4] = sub_1CA307EAC;
  v52 = _Block_copy(v152);
  swift_retain();
  v53 = v49;
  swift_release();
  objc_msgSend(v48, sel_valueWithCompletion_, v52);
  _Block_release(v52);
  sub_1CA85BC18();

  swift_beginAccess();
  v54 = *(id *)(v50 + 16);

  swift_release();
  v152[0] = 0;
  sub_1CA85B408();
  if (v152[0])
  {
    v132 = v54;
    v133 = v152[0];
    v55 = *(id *)(v142 + v140);
    v56 = (void *)sub_1CA85B510();
    v57 = objc_msgSend(v55, sel_dictionaryForKey_, v56);

    v58 = dispatch_semaphore_create(0);
    v59 = swift_allocObject();
    *(_QWORD *)(v59 + 16) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C99D80]), sel_init);
    v60 = (_QWORD *)swift_allocObject();
    v60[2] = v59;
    v60[3] = v58;
    v152[4] = sub_1CA3086F4;
    v152[5] = v60;
    v152[0] = (id)MEMORY[0x1E0C809B0];
    v152[1] = (id)1107296256;
    v152[2] = sub_1CA305D2C;
    v152[3] = &block_descriptor_28;
    v61 = _Block_copy(v152);
    swift_retain();
    v62 = v58;
    swift_release();
    objc_msgSend(v57, sel_valueWithCompletion_, v61);
    _Block_release(v61);
    sub_1CA85BC18();

    swift_beginAccess();
    v63 = *(id *)(v59 + 16);

    swift_release();
    v64 = (void *)objc_opt_self();
    v152[0] = 0;
    v65 = objc_msgSend(v64, sel_dataWithJSONObject_options_error_, v63, 0, v152);
    if (v65)
    {
      v66 = v65;
      v130 = v63;
      v67 = v152[0];
      v68 = sub_1CA85A490();
      v70 = v69;

      sub_1CA85A070();
      swift_allocObject();
      sub_1CA85A064();
      sub_1CA307EFC();
      sub_1CA85A058();
      if (v134)
      {

        sub_1CA260204(v68, v70);
        swift_release();
        swift_bridgeObjectRelease();
        v71 = v134;
        goto LABEL_33;
      }
      v128 = v70;
      v129 = v68;
      swift_release();
      v182 = v198;
      v183 = v199;
      v184 = v200;
      v185 = v201;
      v178 = v194;
      v179 = v195;
      v180 = v196;
      v181 = v197;
      v174 = v190;
      v175 = v191;
      v176 = v192;
      v177 = v193;
      v170 = v186;
      v171 = v187;
      v172 = v188;
      v173 = v189;
      v100 = *(id *)(v142 + v140);
      v101 = (void *)sub_1CA85B510();
      v102 = objc_msgSend(v100, sel_dictionaryForKey_, v101);

      v103 = dispatch_semaphore_create(0);
      v104 = swift_allocObject();
      *(_QWORD *)(v104 + 16) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C99D80]), sel_init);
      v105 = (_QWORD *)swift_allocObject();
      v105[2] = v104;
      v105[3] = v103;
      v152[4] = sub_1CA3086F4;
      v152[5] = v105;
      v152[0] = (id)MEMORY[0x1E0C809B0];
      v152[1] = (id)1107296256;
      v152[2] = sub_1CA305D2C;
      v152[3] = &block_descriptor_36;
      v106 = _Block_copy(v152);
      swift_retain();
      v107 = v103;
      swift_release();
      objc_msgSend(v102, sel_valueWithCompletion_, v106);
      _Block_release(v106);
      sub_1CA85BC18();

      swift_beginAccess();
      v108 = *(id *)(v104 + 16);

      swift_release();
      v152[0] = 0;
      v109 = objc_msgSend(v64, sel_dataWithJSONObject_options_error_, v108, 0, v152);
      if (v109)
      {
        v110 = v109;
        v111 = v152[0];
        v112 = sub_1CA85A490();
        v114 = v113;

        swift_allocObject();
        sub_1CA85A064();
        sub_1CA307F44();
        sub_1CA85A058();
        v135 = v112;
        v141 = v114;
        swift_release();
        v88 = v144;
        v89 = v145;
        v166 = v182;
        v167 = v183;
        v168 = v184;
        v169 = v185;
        v162 = v178;
        v163 = v179;
        v164 = v180;
        v165 = v181;
        v158 = v174;
        v159 = v175;
        v160 = v176;
        v161 = v177;
        v154 = v170;
        v155 = v171;
        v156 = v172;
        v157 = v173;
        sub_1CA24EEF8((uint64_t)v247, (uint64_t)v242, &qword_1ED8713C8);
        v91 = v36;
        if (sub_1CA2D0508((uint64_t)v242) == 1)
          goto LABEL_53;
        v215 = v182;
        v216 = v183;
        v217 = v184;
        v211 = v178;
        v212 = v179;
        v213 = v180;
        v214 = v181;
        v207 = v174;
        v208 = v175;
        v209 = v176;
        v210 = v177;
        v203 = v170;
        v204 = v171;
        v205 = v172;
        v202 = v133;
        v218 = v185;
        v206 = v173;
        v219 = v144;
        v220 = v145;
        v221 = v136;
        v222 = v36;
        GEOLocationCoordinate2DMake(*(double *)v172.i64);
        sub_1CA24EEF8((uint64_t)v243, (uint64_t)&v223, &qword_1ED871560);
        if (sub_1CA290380(&v223) == 1)
        {
          sub_1CA24EEF8((uint64_t)v243, (uint64_t)v152, &qword_1ED871560);
          sub_1CA24EEF8((uint64_t)&v202, (uint64_t)&v152[36], &qword_1ED871560);
          sub_1CA307FBC((uint64_t)v247, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1CA308040);
          swift_bridgeObjectRetain();
          sub_1CA290404((uint64_t)v152);
        }
        else
        {
          sub_1CA24EEF8((uint64_t)v243, (uint64_t)v153, &qword_1ED871560);
          *(_OWORD *)&v146[200] = v182;
          *(int64x2_t *)&v146[216] = v183;
          *(_OWORD *)&v146[232] = v184;
          *(_OWORD *)&v146[136] = v178;
          *(_OWORD *)&v146[152] = v179;
          *(_OWORD *)&v146[168] = v180;
          *(_OWORD *)&v146[184] = v181;
          *(_OWORD *)&v146[72] = v174;
          *(_OWORD *)&v146[88] = v175;
          *(_OWORD *)&v146[104] = v176;
          *(_OWORD *)&v146[120] = v177;
          *(int64x2_t *)&v146[8] = v170;
          *(_OWORD *)&v146[24] = v171;
          *(int64x2_t *)&v146[40] = v172;
          *(_QWORD *)v146 = v133;
          v147 = v185;
          *(_OWORD *)&v146[56] = v173;
          v148 = v144;
          v149 = v145;
          v150 = v136;
          v151 = v36;
          sub_1CA2903DC((uint64_t)v243);
          sub_1CA2903DC((uint64_t)v243);
          sub_1CA307FBC((uint64_t)v247, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1CA308040);
          v120 = _s11PhotosGraph16MusicBagContentsV2eeoiySbAC_ACtFZ_0((uint64_t)v153, (uint64_t)v146);
          memcpy(v152, v153, 0x120uLL);
          sub_1CA290438((uint64_t)v152);
          sub_1CA290438((uint64_t)v243);
          if ((v120 & 1) != 0)
          {
            sub_1CA307FBC((uint64_t)v247, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1CA2CED64);
LABEL_53:
            v233[2] = v182;
            v234 = v183;
            v235 = v184;
            v231 = v178;
            v232 = v179;
            v233[0] = v180;
            v233[1] = v181;
            v228[0] = v174;
            v228[1] = v175;
            v229 = v176;
            v230 = v177;
            v224 = v170;
            v225 = v171;
            v226 = v172;
            v223 = (uint64_t)v133;
            v236 = v185;
            v227 = v173;
            v238 = v144;
            v239 = v145;
            v90 = v136;
            v240 = v136;
            v241 = v36;
            GEOLocationCoordinate2DMake(*(double *)v172.i64);
            v153[0] = 56;
            v153[1] = 0xE100000000000000;
            sub_1CA24EEF8((uint64_t)&v223, (uint64_t)&v153[2], &qword_1ED871560);
            memcpy(v152, v153, 0x130uLL);
            if (!v131)
            {
              swift_bridgeObjectRetain();

              sub_1CA307FBC((uint64_t)v247, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1CA2CED64);
              sub_1CA260204(v135, v141);
              sub_1CA260204(v129, v128);
              sub_1CA307F88((uint64_t)v153);
              *(_OWORD *)&v146[192] = v166;
              *(int64x2_t *)&v146[208] = v167;
              *(_OWORD *)&v146[224] = v168;
              v146[240] = v169;
              *(_OWORD *)&v146[128] = v162;
              *(_OWORD *)&v146[144] = v163;
              *(_OWORD *)&v146[160] = v164;
              *(_OWORD *)&v146[176] = v165;
              *(_OWORD *)&v146[64] = v158;
              *(_OWORD *)&v146[80] = v159;
              *(_OWORD *)&v146[96] = v160;
              *(_OWORD *)&v146[112] = v161;
              *(int64x2_t *)v146 = v154;
              *(_OWORD *)&v146[16] = v155;
              *(int64x2_t *)&v146[32] = v156;
              *(_OWORD *)&v146[48] = v157;
              v92 = v137;
              v87 = (uint64_t)v133;
              goto LABEL_48;
            }
            v116 = qword_1ED872F80;
            swift_bridgeObjectRetain();
            if (v116 != -1)
              swift_once();
            v117 = qword_1ED87D078;
            *(double *)&v118 = CACurrentMediaTime();
            v119 = sub_1CA2E4280("MusicCacheWriteInfo", 19, 2u, v118, 0, v117, (uint64_t)v245);
            MEMORY[0x1E0C80A78](v119);
            sub_1CA85BC30();
            sub_1CA2E0C94(0);
            swift_release();

            swift_release();
            sub_1CA307FBC((uint64_t)v247, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1CA2CED64);

            sub_1CA260204(v135, v141);
            v121 = v129;
            v122 = v128;
LABEL_67:
            sub_1CA260204(v121, v122);
            sub_1CA307F88((uint64_t)v153);
            *(_OWORD *)&v146[192] = v166;
            *(int64x2_t *)&v146[208] = v167;
            *(_OWORD *)&v146[224] = v168;
            v146[240] = v169;
            *(_OWORD *)&v146[128] = v162;
            *(_OWORD *)&v146[144] = v163;
            *(_OWORD *)&v146[160] = v164;
            *(_OWORD *)&v146[176] = v165;
            *(_OWORD *)&v146[64] = v158;
            *(_OWORD *)&v146[80] = v159;
            *(_OWORD *)&v146[96] = v160;
            *(_OWORD *)&v146[112] = v161;
            *(int64x2_t *)v146 = v154;
            *(_OWORD *)&v146[16] = v155;
            *(int64x2_t *)&v146[32] = v156;
            *(_OWORD *)&v146[48] = v157;
            v90 = v136;
            v92 = v137;
            v87 = (uint64_t)v133;
            goto LABEL_48;
          }
        }
        v123 = v242[0];
        v124 = v242[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1CA307FBC((uint64_t)v247, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1CA2CED64);
        v153[0] = v123;
        v153[1] = v124;
        sub_1CA24EEF8((uint64_t)&v202, (uint64_t)&v153[2], &qword_1ED871560);
        memcpy(v152, v153, 0x130uLL);
        if (!v131)
        {

          sub_1CA307FBC((uint64_t)v247, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1CA2CED64);
          sub_1CA260204(v135, v141);
          sub_1CA260204(v129, v128);
          sub_1CA307F88((uint64_t)v153);
          *(_OWORD *)&v146[192] = v166;
          *(int64x2_t *)&v146[208] = v167;
          *(_OWORD *)&v146[224] = v168;
          v146[240] = v169;
          *(_OWORD *)&v146[128] = v162;
          *(_OWORD *)&v146[144] = v163;
          *(_OWORD *)&v146[160] = v164;
          *(_OWORD *)&v146[176] = v165;
          *(_OWORD *)&v146[64] = v158;
          *(_OWORD *)&v146[80] = v159;
          *(_OWORD *)&v146[96] = v160;
          *(_OWORD *)&v146[112] = v161;
          *(int64x2_t *)v146 = v154;
          *(_OWORD *)&v146[16] = v155;
          *(int64x2_t *)&v146[32] = v156;
          *(_OWORD *)&v146[48] = v157;
          v90 = v136;
          v92 = v137;
          v87 = (uint64_t)v133;
          goto LABEL_48;
        }
        if (qword_1ED872F80 != -1)
          swift_once();
        v125 = qword_1ED87D078;
        *(double *)&v126 = CACurrentMediaTime();
        v127 = sub_1CA2E4280("MusicCacheWriteInfo", 19, 2u, v126, 0, v125, (uint64_t)v245);
        MEMORY[0x1E0C80A78](v127);
        sub_1CA85BC30();
        sub_1CA2E0C94(0);
        swift_release();

        swift_release();
        sub_1CA307FBC((uint64_t)v247, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1CA2CED64);

        sub_1CA260204(v135, v141);
        v122 = v128;
        v121 = v129;
        goto LABEL_67;
      }
      v115 = v152[0];
      swift_bridgeObjectRelease();
      v71 = (void *)sub_1CA85A364();

      swift_willThrow();
      sub_1CA260204(v129, v128);
    }
    else
    {
      v73 = v152[0];
      swift_bridgeObjectRelease();
      v71 = (void *)sub_1CA85A364();

      swift_willThrow();
    }
  }
  else
  {
    sub_1CA307EB4();
    v71 = (void *)swift_allocError();
    *v72 = 0;
    swift_willThrow();

  }
LABEL_33:
  if (qword_1ED872138 != -1)
    swift_once();
  v74 = sub_1CA85B348();
  __swift_project_value_buffer(v74, (uint64_t)qword_1ED87D058);
  v75 = v71;
  v76 = v71;
  v77 = sub_1CA85B330();
  v78 = sub_1CA85BAE0();
  if (os_log_type_enabled(v77, v78))
  {
    v79 = (uint8_t *)swift_slowAlloc();
    v80 = swift_slowAlloc();
    v242[0] = v80;
    *(_DWORD *)v79 = 136315138;
    swift_getErrorValue();
    v81 = sub_1CA85C308();
    v153[0] = sub_1CA28712C(v81, v82, v242);
    sub_1CA85BCF0();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1CA237000, v77, v78, "[MemoriesMusic] failed to read personal mix identifiers from bag, defaulting to last successful values, error: %s.", v79, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1CAA4F27C](v80, -1, -1);
    MEMORY[0x1CAA4F27C](v79, -1, -1);
  }
  else
  {

  }
  sub_1CA24EEF8((uint64_t)v247, (uint64_t)v242, &qword_1ED8713C8);
  if (sub_1CA2D0508((uint64_t)v242) == 1)
    goto LABEL_41;
  sub_1CA24EEF8((uint64_t)v243, (uint64_t)&v223, &qword_1ED871560);
  if (sub_1CA290380(&v223) == 1)
  {
    sub_1CA307FBC((uint64_t)v247, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1CA2CED64);
LABEL_41:
    v83 = sub_1CA85B330();
    v84 = sub_1CA85BAE0();
    if (os_log_type_enabled(v83, v84))
    {
      v85 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v85 = 0;
      _os_log_impl(&dword_1CA237000, v83, v84, "[MemoriesMusic] failed to read personal mix identifiers from cache, defaulting to on device constants.", v85, 2u);
      MEMORY[0x1CAA4F27C](v85, -1, -1);
    }

    if (qword_1EF94A328 != -1)
      swift_once();
    v86 = qword_1EF94DB88;
    swift_bridgeObjectRetain();

    v170.i8[0] = 0;
    v154.i8[0] = 0;
    *(_DWORD *)((char *)v228 + 1) = *(_DWORD *)v146;
    DWORD1(v228[0]) = *(_DWORD *)&v146[3];
    *(_DWORD *)((char *)&v233[2] + 9) = v186.i32[0];
    HIDWORD(v233[2]) = *(__int32 *)((char *)v186.i32 + 3);
    v224 = vdupq_n_s64(0x40F5180000000000uLL);
    v223 = v86;
    *(_QWORD *)&v225 = 2;
    *((_QWORD *)&v225 + 1) = 0x4132750000000000;
    v226 = v224;
    v227 = xmmword_1CA8DBCF0;
    LOBYTE(v228[0]) = 0;
    *(int64x2_t *)((char *)v228 + 8) = v224;
    v229 = xmmword_1CA8DBD00;
    *((_QWORD *)&v228[1] + 1) = 2;
    *(_QWORD *)&v230 = 0x40F5180000000000;
    v231 = xmmword_1CA8DBD00;
    *((_QWORD *)&v230 + 1) = 2;
    *(_QWORD *)&v232 = 0x40F5180000000000;
    *((_QWORD *)&v232 + 1) = 2;
    *(_QWORD *)&v233[0] = 0x4132750000000000;
    *(int64x2_t *)((char *)v233 + 8) = v224;
    *(_OWORD *)((char *)&v233[1] + 8) = xmmword_1CA8DBCF0;
    BYTE8(v233[2]) = 0;
    v234 = v224;
    v235 = xmmword_1CA8DBCF0;
    v236 = 0;
    *(_DWORD *)v237 = (_DWORD)v202;
    *(_DWORD *)&v237[3] = *(_DWORD *)((char *)&v202 + 3);
    v238 = 0x4122750000000000;
    v239 = 200;
    v240 = v136;
    v241 = v139;
    GEOLocationCoordinate2DMake(*(double *)v224.i64);
    sub_1CA24EEF8((uint64_t)&v223, (uint64_t)v153, &qword_1ED871560);
    goto LABEL_47;
  }
  sub_1CA24EEF8((uint64_t)v243, (uint64_t)&v202, &qword_1ED871560);
  sub_1CA2903DC((uint64_t)&v202);
  sub_1CA2903DC((uint64_t)&v202);

  sub_1CA307FBC((uint64_t)v247, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1CA2CED64);
  sub_1CA290438((uint64_t)v243);
  sub_1CA24EEF8((uint64_t)v243, (uint64_t)v153, &qword_1ED871560);
LABEL_47:
  sub_1CA24EEF8((uint64_t)v153, (uint64_t)&v223, &qword_1ED871560);
  v87 = v223;
  *(_OWORD *)&v146[192] = v233[2];
  *(int64x2_t *)&v146[208] = v234;
  *(_OWORD *)&v146[224] = v235;
  v146[240] = v236;
  *(_OWORD *)&v146[128] = v231;
  *(_OWORD *)&v146[144] = v232;
  *(_OWORD *)&v146[160] = v233[0];
  *(_OWORD *)&v146[176] = v233[1];
  *(_OWORD *)&v146[64] = v228[0];
  *(_OWORD *)&v146[80] = v228[1];
  *(_OWORD *)&v146[96] = v229;
  *(_OWORD *)&v146[112] = v230;
  *(int64x2_t *)v146 = v224;
  *(_OWORD *)&v146[16] = v225;
  *(int64x2_t *)&v146[32] = v226;
  *(_OWORD *)&v146[48] = v227;
  LODWORD(v202) = *(_DWORD *)v237;
  *(_DWORD *)((char *)&v202 + 3) = *(_DWORD *)&v237[3];
  v88 = v238;
  v89 = v239;
  v90 = v240;
  v91 = v241;
  v92 = v137;
LABEL_48:
  v93 = *(_OWORD *)&v146[208];
  *(_OWORD *)(v92 + 200) = *(_OWORD *)&v146[192];
  *(_OWORD *)(v92 + 216) = v93;
  *(_OWORD *)(v92 + 232) = *(_OWORD *)&v146[224];
  v94 = *(_OWORD *)&v146[144];
  *(_OWORD *)(v92 + 136) = *(_OWORD *)&v146[128];
  *(_OWORD *)(v92 + 152) = v94;
  v95 = *(_OWORD *)&v146[176];
  *(_OWORD *)(v92 + 168) = *(_OWORD *)&v146[160];
  *(_OWORD *)(v92 + 184) = v95;
  v96 = *(_OWORD *)&v146[80];
  *(_OWORD *)(v92 + 72) = *(_OWORD *)&v146[64];
  *(_OWORD *)(v92 + 88) = v96;
  v97 = *(_OWORD *)&v146[112];
  *(_OWORD *)(v92 + 104) = *(_OWORD *)&v146[96];
  *(_OWORD *)(v92 + 120) = v97;
  v98 = *(_OWORD *)&v146[16];
  *(_OWORD *)(v92 + 8) = *(_OWORD *)v146;
  *(_OWORD *)(v92 + 24) = v98;
  v99 = *(_OWORD *)&v146[48];
  *(_OWORD *)(v92 + 40) = *(_OWORD *)&v146[32];
  *(_QWORD *)v92 = v87;
  *(_BYTE *)(v92 + 248) = v146[240];
  *(_OWORD *)(v92 + 56) = v99;
  *(_DWORD *)(v92 + 249) = (_DWORD)v202;
  *(_DWORD *)(v92 + 252) = *(_DWORD *)((char *)&v202 + 3);
  *(_QWORD *)(v92 + 256) = v88;
  *(_QWORD *)(v92 + 264) = v89;
  *(_QWORD *)(v92 + 272) = v90;
  *(_QWORD *)(v92 + 280) = v91;
}

BOOL static MusicBag.MusicBagError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t MusicBag.MusicBagError.hash(into:)()
{
  return sub_1CA85C374();
}

uint64_t MusicBag.MusicBagError.hashValue.getter()
{
  sub_1CA85C368();
  sub_1CA85C374();
  return sub_1CA85C3B0();
}

id MusicBag.__allocating_init(with:)(void *a1)
{
  objc_class *v1;
  id v3;
  id v4;

  v3 = objc_allocWithZone(v1);
  v4 = sub_1CA307B24(a1);

  return v4;
}

id MusicBag.init(with:)(void *a1)
{
  id v2;

  v2 = sub_1CA307B24(a1);

  return v2;
}

id MusicBag.__allocating_init(musicBagContents:cache:)(const void *a1, void *a2)
{
  objc_class *v2;
  id v5;
  id v6;

  v5 = objc_allocWithZone(v2);
  v6 = sub_1CA308070(a1, a2);

  return v6;
}

id MusicBag.init(musicBagContents:cache:)(const void *a1, void *a2)
{
  id v3;

  v3 = sub_1CA308070(a1, a2);

  return v3;
}

uint64_t static MusicBag.stringValue(from:)(void *a1)
{
  dispatch_semaphore_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  NSObject *v6;
  uint64_t v7;
  _QWORD v9[6];

  v2 = dispatch_semaphore_create(0);
  v3 = swift_allocObject();
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = 0xE000000000000000;
  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = v3;
  *(_QWORD *)(v4 + 24) = v2;
  v9[4] = sub_1CA308278;
  v9[5] = v4;
  v9[0] = MEMORY[0x1E0C809B0];
  v9[1] = 1107296256;
  v9[2] = sub_1CA305D2C;
  v9[3] = &block_descriptor_46;
  v5 = _Block_copy(v9);
  swift_retain();
  v6 = v2;
  swift_release();
  objc_msgSend(a1, sel_valueWithCompletion_, v5);
  _Block_release(v5);
  sub_1CA85BC18();

  swift_beginAccess();
  v7 = *(_QWORD *)(v3 + 16);
  swift_bridgeObjectRetain();
  swift_release();
  return v7;
}

uint64_t sub_1CA305CBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  if (a1)
  {
    v5 = sub_1CA85B534();
    v7 = v6;
    swift_beginAccess();
    *(_QWORD *)(a4 + 16) = v5;
    *(_QWORD *)(a4 + 24) = v7;
    swift_bridgeObjectRelease();
  }
  return sub_1CA85BC24();
}

uint64_t static MusicBag.intValue(from:)(void *a1)
{
  dispatch_semaphore_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  NSObject *v6;
  uint64_t v7;
  _QWORD v9[6];

  v2 = dispatch_semaphore_create(0);
  v3 = swift_allocObject();
  *(_QWORD *)(v3 + 16) = 0;
  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = v3;
  *(_QWORD *)(v4 + 24) = v2;
  v9[4] = sub_1CA3086F0;
  v9[5] = v4;
  v9[0] = MEMORY[0x1E0C809B0];
  v9[1] = 1107296256;
  v9[2] = sub_1CA305D2C;
  v9[3] = &block_descriptor_54;
  v5 = _Block_copy(v9);
  swift_retain();
  v6 = v2;
  swift_release();
  objc_msgSend(a1, sel_valueWithCompletion_, v5);
  _Block_release(v5);
  sub_1CA85BC18();

  swift_beginAccess();
  v7 = *(_QWORD *)(v3 + 16);
  swift_release();
  return v7;
}

uint64_t sub_1CA305E54(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v5;

  if (a1)
  {
    v5 = objc_msgSend(a1, sel_integerValue);
    swift_beginAccess();
    *(_QWORD *)(a4 + 16) = v5;
  }
  return sub_1CA85BC24();
}

id static MusicBag.dictionaryValue(from:)(void *a1)
{
  dispatch_semaphore_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  NSObject *v6;
  id v7;
  _QWORD v9[6];

  v2 = dispatch_semaphore_create(0);
  v3 = swift_allocObject();
  *(_QWORD *)(v3 + 16) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C99D80]), sel_init);
  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = v3;
  *(_QWORD *)(v4 + 24) = v2;
  v9[4] = sub_1CA3086F4;
  v9[5] = v4;
  v9[0] = MEMORY[0x1E0C809B0];
  v9[1] = 1107296256;
  v9[2] = sub_1CA305D2C;
  v9[3] = &block_descriptor_62;
  v5 = _Block_copy(v9);
  swift_retain();
  v6 = v2;
  swift_release();
  objc_msgSend(a1, sel_valueWithCompletion_, v5);
  _Block_release(v5);
  sub_1CA85BC18();

  swift_beginAccess();
  v7 = *(id *)(v3 + 16);
  swift_release();
  return v7;
}

uint64_t sub_1CA305FFC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v6;
  id v7;

  if (a1)
  {
    swift_beginAccess();
    v6 = *(void **)(a4 + 16);
    *(_QWORD *)(a4 + 16) = a1;
    v7 = a1;

  }
  return sub_1CA85BC24();
}

void sub_1CA30605C(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  void (*v7)(void *, uint64_t, void *);
  id v8;
  id v9;

  v7 = *(void (**)(void *, uint64_t, void *))(a1 + 32);
  swift_retain();
  v9 = a2;
  v8 = a4;
  v7(a2, a3, a4);
  swift_release();

}

Swift::String __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> MusicBag.userStorefront()()
{
  uint64_t v0;
  id v1;
  void *v2;
  id v3;
  dispatch_semaphore_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  NSObject *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  void *v12;
  Swift::String result;
  _QWORD v14[6];

  v1 = *(id *)(v0 + OBJC_IVAR___PGMusicBag_amsBag);
  v2 = (void *)sub_1CA85B510();
  v3 = objc_msgSend(v1, sel_stringForKey_, v2);

  v4 = dispatch_semaphore_create(0);
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = 0;
  *(_QWORD *)(v5 + 24) = 0xE000000000000000;
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = v5;
  *(_QWORD *)(v6 + 24) = v4;
  v14[4] = sub_1CA3086F8;
  v14[5] = v6;
  v14[0] = MEMORY[0x1E0C809B0];
  v14[1] = 1107296256;
  v14[2] = sub_1CA305D2C;
  v14[3] = &block_descriptor_70;
  v7 = _Block_copy(v14);
  swift_retain();
  v8 = v4;
  swift_release();
  objc_msgSend(v3, sel_valueWithCompletion_, v7);
  _Block_release(v7);
  sub_1CA85BC18();

  swift_beginAccess();
  v9 = *(_QWORD *)(v5 + 16);
  v10 = *(void **)(v5 + 24);
  swift_bridgeObjectRetain();

  swift_release();
  v11 = v9;
  v12 = v10;
  result._object = v12;
  result._countAndFlagsBits = v11;
  return result;
}

Swift::String __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> MusicBag.mediaApiDomain()()
{
  uint64_t v0;
  id v1;
  void *v2;
  id v3;
  dispatch_semaphore_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  NSObject *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  void *v12;
  Swift::String result;
  _QWORD v14[6];

  v1 = *(id *)(v0 + OBJC_IVAR___PGMusicBag_amsBag);
  v2 = (void *)sub_1CA85B510();
  v3 = objc_msgSend(v1, sel_stringForKey_, v2);

  v4 = dispatch_semaphore_create(0);
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = 0;
  *(_QWORD *)(v5 + 24) = 0xE000000000000000;
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = v5;
  *(_QWORD *)(v6 + 24) = v4;
  v14[4] = sub_1CA3086F8;
  v14[5] = v6;
  v14[0] = MEMORY[0x1E0C809B0];
  v14[1] = 1107296256;
  v14[2] = sub_1CA305D2C;
  v14[3] = &block_descriptor_78;
  v7 = _Block_copy(v14);
  swift_retain();
  v8 = v4;
  swift_release();
  objc_msgSend(v3, sel_valueWithCompletion_, v7);
  _Block_release(v7);
  sub_1CA85BC18();

  swift_beginAccess();
  v9 = *(_QWORD *)(v5 + 16);
  v10 = *(void **)(v5 + 24);
  swift_bridgeObjectRetain();

  swift_release();
  v11 = v9;
  v12 = v10;
  result._object = v12;
  result._countAndFlagsBits = v11;
  return result;
}

uint64_t *MusicBag.personalMixIdentifers()()
{
  return sub_1CA30646C(sub_1CA2826B4, sub_1CA2D9248);
}

uint64_t *MusicBag.personalMixNames()()
{
  return sub_1CA30646C(sub_1CA2826B8, sub_1CA2DA0A8);
}

uint64_t *sub_1CA30646C(uint64_t (*a1)(uint64_t), uint64_t (*a2)(uint64_t, uint64_t))
{
  void *v2;
  id v5;
  uint64_t v6;
  uint64_t *v7;
  double v8;
  double v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE v14[296];
  uint64_t v15;
  _BYTE v16[296];
  _BYTE v17[296];
  _BYTE v18[296];

  v5 = v2;
  v6 = swift_retain();
  sub_1CA29A0B4(v6, v5, (uint64_t)v16);
  swift_release();
  v7 = &qword_1ED872E70;
  sub_1CA24EEF8((uint64_t)v16, (uint64_t)v17, &qword_1ED872E70);
  sub_1CA24EEF8((uint64_t)v17, (uint64_t)v18, &qword_1ED872E70);
  if (sub_1CA308290((uint64_t)v18) == 1)
  {
    sub_1CA24EEF8((uint64_t)v17, (uint64_t)v14, &qword_1ED872E70);
    v15 = *(_QWORD *)GEOLocationCoordinate2DMake(v8);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED872BA0);
    swift_willThrowTypedImpl();
  }
  else
  {
    sub_1CA24EEF8((uint64_t)v17, (uint64_t)v14, &qword_1ED872E70);
    GEOLocationCoordinate2DMake(v9);
    v10 = swift_bridgeObjectRetain();
    v11 = a1(v10);
    if (qword_1ED872ED0 != -1)
      swift_once();
    v12 = swift_bridgeObjectRetain();
    v7 = (uint64_t *)a2(v12, v11);
    swift_bridgeObjectRelease();
    sub_1CA3084C0((uint64_t)v17, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1CA308298);
  }
  return v7;
}

Swift::String_optional __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> MusicBag.personalMixName(for:)(Swift::String a1)
{
  void *v1;
  void *object;
  uint64_t countAndFlagsBits;
  id v4;
  uint64_t v5;
  uint64_t *v6;
  double v7;
  char v8;
  char v9;
  double v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  Swift::String_optional result;
  _BYTE v19[296];
  uint64_t v20;
  _BYTE v21[296];
  _BYTE v22[296];
  _BYTE v23[296];

  object = a1._object;
  countAndFlagsBits = a1._countAndFlagsBits;
  v4 = v1;
  v5 = swift_retain();
  sub_1CA29A0B4(v5, v4, (uint64_t)v21);
  swift_release();
  v6 = &qword_1ED872E70;
  sub_1CA24EEF8((uint64_t)v21, (uint64_t)v22, &qword_1ED872E70);
  sub_1CA24EEF8((uint64_t)v22, (uint64_t)v23, &qword_1ED872E70);
  if (sub_1CA308290((uint64_t)v23) != 1)
  {
    if (qword_1ED872ED0 != -1)
      swift_once();
    if (!*((_QWORD *)off_1ED872EC0 + 2)
      || (swift_bridgeObjectRetain(),
          sub_1CA25081C(countAndFlagsBits, (uint64_t)object),
          v9 = v8,
          swift_bridgeObjectRelease(),
          (v9 & 1) == 0))
    {
      sub_1CA24EEF8((uint64_t)v22, (uint64_t)v21, &qword_1ED872E70);
      v11 = GEOLocationCoordinate2DMake(v10);
      v12 = *(_QWORD *)v11;
      if (*(_QWORD *)(*(_QWORD *)v11 + 16))
      {
        swift_bridgeObjectRetain();
        v13 = sub_1CA25081C(countAndFlagsBits, (uint64_t)object);
        if ((v14 & 1) != 0)
        {
          v15 = *(_QWORD *)(v12 + 56) + 16 * v13;
          v6 = *(uint64_t **)v15;
          countAndFlagsBits = *(_QWORD *)(v15 + 8);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          sub_1CA3084C0((uint64_t)v22, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1CA308298);
          goto LABEL_12;
        }
        swift_bridgeObjectRelease();
      }
    }
    sub_1CA3084C0((uint64_t)v22, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1CA308298);
    v6 = 0;
    countAndFlagsBits = 0;
    goto LABEL_12;
  }
  sub_1CA24EEF8((uint64_t)v22, (uint64_t)v19, &qword_1ED872E70);
  v20 = *(_QWORD *)GEOLocationCoordinate2DMake(v7);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED872BA0);
  swift_willThrowTypedImpl();
LABEL_12:
  v16 = (uint64_t)v6;
  v17 = (void *)countAndFlagsBits;
  result.value._object = v17;
  result.value._countAndFlagsBits = v16;
  return result;
}

Swift::String_optional __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> MusicBag.personalMixIdentifier(for:)(Swift::String a1)
{
  char *v1;
  void *object;
  uint64_t countAndFlagsBits;
  void *v4;
  char *v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  void *v15;
  Swift::String_optional result;
  uint64_t v17;
  _BYTE v18[296];
  _BYTE v19[296];
  _BYTE v20[296];
  uint64_t v21;

  object = a1._object;
  countAndFlagsBits = a1._countAndFlagsBits;
  v4 = *(void **)&v1[OBJC_IVAR___PGMusicBag_atomicMusicBagContents];
  v5 = v1;
  v6 = swift_retain();
  sub_1CA29A0B4(v6, v5, (uint64_t)v18);
  swift_release();
  sub_1CA24EEF8((uint64_t)v18, (uint64_t)v19, &qword_1ED872E70);
  sub_1CA24EEF8((uint64_t)v19, (uint64_t)v20, &qword_1ED872E70);
  if (sub_1CA308290((uint64_t)v20) == 1)
  {
    sub_1CA24EEF8((uint64_t)v19, (uint64_t)&v17, &qword_1ED872E70);
    v21 = *(_QWORD *)GEOLocationCoordinate2DMake(v7);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED872BA0);
    swift_willThrowTypedImpl();
  }
  else
  {
    if (qword_1ED872ED0 != -1)
      swift_once();
    swift_bridgeObjectRetain();
    v8 = swift_bridgeObjectRetain();
    sub_1CA3082BC(v8, countAndFlagsBits, (uint64_t)object);
    v10 = v9;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v10)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1CA3084C0((uint64_t)v19, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1CA308298);
      countAndFlagsBits = 0;
      v4 = 0;
    }
    else
    {
      sub_1CA24EEF8((uint64_t)v19, (uint64_t)v18, &qword_1ED872E70);
      v12 = *(_QWORD *)GEOLocationCoordinate2DMake(v11);
      swift_bridgeObjectRetain();
      sub_1CA3084C0((uint64_t)v19, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1CA29A6E0);
      countAndFlagsBits = sub_1CA3082BC(v12, countAndFlagsBits, (uint64_t)object);
      v4 = v13;
      swift_bridgeObjectRelease();
      sub_1CA3084C0((uint64_t)v19, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1CA308298);
      if (v4)
      {
        swift_bridgeObjectRelease();
        sub_1CA3084C0((uint64_t)v19, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1CA308298);
      }
      else
      {
        sub_1CA3084C0((uint64_t)v19, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1CA308298);
        countAndFlagsBits = 0;
      }
    }
  }
  v14 = countAndFlagsBits;
  v15 = v4;
  result.value._object = v15;
  result.value._countAndFlagsBits = v14;
  return result;
}

uint64_t *MusicBag.yearlySummaryPlaylistNames()()
{
  void *v0;
  id v1;
  uint64_t v2;
  uint64_t *v3;
  double v4;
  double v5;
  const void *v6;
  _BYTE __dst[288];
  _BYTE v9[296];
  uint64_t v10;
  _BYTE v11[296];
  _BYTE v12[296];
  _BYTE v13[296];

  v1 = v0;
  v2 = swift_retain();
  sub_1CA29A0B4(v2, v1, (uint64_t)v11);
  swift_release();
  v3 = &qword_1ED872E70;
  sub_1CA24EEF8((uint64_t)v11, (uint64_t)v12, &qword_1ED872E70);
  sub_1CA24EEF8((uint64_t)v12, (uint64_t)v13, &qword_1ED872E70);
  if (sub_1CA308290((uint64_t)v13) == 1)
  {
    sub_1CA24EEF8((uint64_t)v12, (uint64_t)v9, &qword_1ED872E70);
    v10 = *(_QWORD *)GEOLocationCoordinate2DMake(v4);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED872BA0);
    swift_willThrowTypedImpl();
  }
  else
  {
    sub_1CA24EEF8((uint64_t)v12, (uint64_t)v9, &qword_1ED872E70);
    v6 = (const void *)GEOLocationCoordinate2DMake(v5);
    memcpy(__dst, v6, sizeof(__dst));
    v3 = (uint64_t *)MusicBagContents.yearlySummaryPlaylistNames()();
    sub_1CA3084C0((uint64_t)v12, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1CA308298);
  }
  return v3;
}

Swift::String_optional __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> MusicBag.yearlySummaryIdentifier(for:)(Swift::Int a1)
{
  void *v1;
  uint64_t v2;
  id v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  double v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t i;
  unint64_t v14;
  unint64_t v15;
  unint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unsigned __int8 *v28;
  uint64_t v29;
  char v30;
  char v31;
  uint64_t v32;
  unsigned __int8 *v33;
  unsigned int v34;
  uint64_t v35;
  uint64_t v36;
  unsigned __int8 *v37;
  unsigned int v38;
  uint64_t v39;
  uint64_t v40;
  unsigned __int8 *v41;
  unsigned int v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  NSObject *v46;
  os_log_type_t v47;
  _BYTE *v48;
  uint64_t v49;
  NSObject *v50;
  os_log_type_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  void *v56;
  Swift::String_optional result;
  uint64_t v58;
  uint8_t *v59;
  uint64_t v60;
  int64_t v61;
  uint64_t v62;
  uint64_t __dst[36];
  _BYTE v65[296];
  _BYTE v66[296];
  _BYTE v67[296];
  _BYTE v68[304];
  uint64_t v69;

  v3 = v1;
  v4 = swift_retain();
  sub_1CA29A0B4(v4, v3, (uint64_t)v66);
  swift_release();
  sub_1CA24EEF8((uint64_t)v66, (uint64_t)v67, &qword_1ED872E70);
  sub_1CA24EEF8((uint64_t)v67, (uint64_t)v68, &qword_1ED872E70);
  if (sub_1CA308290((uint64_t)v68) == 1)
  {
    sub_1CA24EEF8((uint64_t)v67, (uint64_t)v65, &qword_1ED872E70);
    v69 = *(_QWORD *)GEOLocationCoordinate2DMake(v5);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED872BA0);
    v6 = swift_willThrowTypedImpl();
    goto LABEL_90;
  }
  sub_1CA24EEF8((uint64_t)v67, (uint64_t)v65, &qword_1ED872E70);
  v8 = (const void *)GEOLocationCoordinate2DMake(v7);
  memcpy(__dst, v8, sizeof(__dst));
  v9 = MusicBagContents.yearlySummaryPlaylistNames()();
  sub_1CA3084C0((uint64_t)v67, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1CA308298);
  v60 = v9 + 56;
  v10 = 1 << *(_BYTE *)(v9 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v9 + 56);
  v61 = (unint64_t)(v10 + 63) >> 6;
  swift_bridgeObjectRetain();
  v58 = 0;
  v59 = 0;
  v2 = 0;
  for (i = v9; ; v9 = i)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v2 << 6);
      goto LABEL_19;
    }
    if (__OFADD__(v2++, 1))
    {
      __break(1u);
LABEL_93:
      __break(1u);
LABEL_94:
      __break(1u);
      goto LABEL_95;
    }
    if (v2 >= v61)
      goto LABEL_82;
    v17 = *(_QWORD *)(v60 + 8 * v2);
    if (!v17)
      break;
LABEL_18:
    v12 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v2 << 6);
LABEL_19:
    v19 = (uint64_t *)(*(_QWORD *)(v9 + 48) + 16 * v15);
    v20 = *v19;
    v21 = v19[1];
    __dst[0] = *v19;
    __dst[1] = v21;
    sub_1CA281DC0();
    swift_bridgeObjectRetain();
    v22 = sub_1CA85BD2C();
    v24 = v23;
    v25 = HIBYTE(v23) & 0xF;
    v26 = v22 & 0xFFFFFFFFFFFFLL;
    if ((v24 & 0x2000000000000000) != 0)
      v27 = v25;
    else
      v27 = v22 & 0xFFFFFFFFFFFFLL;
    if (!v27)
    {
      swift_bridgeObjectRelease();
LABEL_78:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (qword_1ED872138 == -1)
      {
LABEL_79:
        v45 = sub_1CA85B348();
        __swift_project_value_buffer(v45, (uint64_t)qword_1ED87D058);
        v46 = sub_1CA85B330();
        v47 = sub_1CA85BAE0();
        if (os_log_type_enabled(v46, v47))
        {
          v2 = swift_slowAlloc();
          *(_WORD *)v2 = 0;
          _os_log_impl(&dword_1CA237000, v46, v47, "[MemoriesMusic] yearlySummaryIdentifiers contains a value that doesnt conform to replayYYYY format.", (uint8_t *)v2, 2u);
          MEMORY[0x1CAA4F27C](v2, -1, -1);
        }

        sub_1CA307EB4();
        swift_allocError();
        *v48 = 1;
        swift_willThrow();
        v6 = swift_release();
        goto LABEL_90;
      }
LABEL_96:
      swift_once();
      goto LABEL_79;
    }
    if ((v24 & 0x1000000000000000) != 0)
    {
      v29 = (uint64_t)sub_1CA3DEB34(v22, v24, 10);
      v31 = v44;
    }
    else if ((v24 & 0x2000000000000000) != 0)
    {
      __dst[0] = v22;
      __dst[1] = v24 & 0xFFFFFFFFFFFFFFLL;
      if (v22 == 43)
      {
        if (!v25)
          goto LABEL_94;
        if (v25 == 1 || (BYTE1(v22) - 48) > 9u)
          goto LABEL_49;
        v29 = (BYTE1(v22) - 48);
        if (v25 != 2)
        {
          if ((BYTE2(v22) - 48) > 9u)
            goto LABEL_49;
          v29 = 10 * (BYTE1(v22) - 48) + (BYTE2(v22) - 48);
          v32 = v25 - 3;
          if (v32)
          {
            v33 = (unsigned __int8 *)__dst + 3;
            while (1)
            {
              v34 = *v33 - 48;
              if (v34 > 9)
                goto LABEL_49;
              v35 = 10 * v29;
              if ((unsigned __int128)(v29 * (__int128)10) >> 64 != (10 * v29) >> 63)
                goto LABEL_49;
              v29 = v35 + v34;
              if (__OFADD__(v35, v34))
                goto LABEL_49;
              v31 = 0;
              ++v33;
              if (!--v32)
                goto LABEL_56;
            }
          }
        }
      }
      else if (v22 == 45)
      {
        if (!v25)
          goto LABEL_93;
        if (v25 == 1 || (BYTE1(v22) - 48) > 9u)
          goto LABEL_49;
        if (v25 == 2)
        {
          v31 = 0;
          v29 = -(uint64_t)(BYTE1(v22) - 48);
          goto LABEL_56;
        }
        if ((BYTE2(v22) - 48) > 9u)
          goto LABEL_49;
        v29 = -10 * (BYTE1(v22) - 48) - (BYTE2(v22) - 48);
        v40 = v25 - 3;
        if (v40)
        {
          v41 = (unsigned __int8 *)__dst + 3;
          while (1)
          {
            v42 = *v41 - 48;
            if (v42 > 9)
              break;
            v43 = 10 * v29;
            if ((unsigned __int128)(v29 * (__int128)10) >> 64 != (10 * v29) >> 63)
              break;
            v29 = v43 - v42;
            if (__OFSUB__(v43, v42))
              break;
            v31 = 0;
            ++v41;
            if (!--v40)
              goto LABEL_56;
          }
LABEL_49:
          v29 = 0;
          v31 = 1;
          goto LABEL_56;
        }
      }
      else
      {
        if (!v25 || (v22 - 48) > 9u)
          goto LABEL_49;
        v29 = (v22 - 48);
        if (v25 != 1)
        {
          if ((BYTE1(v22) - 48) > 9u)
            goto LABEL_49;
          v29 = 10 * (v22 - 48) + (BYTE1(v22) - 48);
          v36 = v25 - 2;
          if (v36)
          {
            v37 = (unsigned __int8 *)__dst + 2;
            while (1)
            {
              v38 = *v37 - 48;
              if (v38 > 9)
                goto LABEL_49;
              v39 = 10 * v29;
              if ((unsigned __int128)(v29 * (__int128)10) >> 64 != (10 * v29) >> 63)
                goto LABEL_49;
              v29 = v39 + v38;
              if (__OFADD__(v39, v38))
                goto LABEL_49;
              v31 = 0;
              ++v37;
              if (!--v36)
                goto LABEL_56;
            }
          }
        }
      }
      v31 = 0;
    }
    else
    {
      if ((v22 & 0x1000000000000000) != 0)
        v28 = (unsigned __int8 *)((v24 & 0xFFFFFFFFFFFFFFFLL) + 32);
      else
        v28 = (unsigned __int8 *)sub_1CA85BF30();
      v29 = (uint64_t)sub_1CA3DEB20(v28, v26, 10);
      v31 = v30 & 1;
    }
LABEL_56:
    swift_bridgeObjectRelease();
    if ((v31 & 1) != 0)
      goto LABEL_78;
    swift_bridgeObjectRelease();
    if (v29 == a1)
    {
      v58 = v20;
      v59 = (uint8_t *)v21;
    }
  }
  v18 = v2 + 1;
  if (v2 + 1 >= v61)
    goto LABEL_82;
  v17 = *(_QWORD *)(v60 + 8 * v18);
  if (v17)
    goto LABEL_17;
  v18 = v2 + 2;
  if (v2 + 2 >= v61)
    goto LABEL_82;
  v17 = *(_QWORD *)(v60 + 8 * v18);
  if (v17)
  {
LABEL_17:
    v2 = v18;
    goto LABEL_18;
  }
  v18 = v2 + 3;
  if (v2 + 3 < v61)
  {
    v17 = *(_QWORD *)(v60 + 8 * v18);
    if (!v17)
    {
      while (1)
      {
        v2 = v18 + 1;
        if (__OFADD__(v18, 1))
          break;
        if (v2 >= v61)
          goto LABEL_82;
        v17 = *(_QWORD *)(v60 + 8 * v2);
        ++v18;
        if (v17)
          goto LABEL_18;
      }
LABEL_95:
      __break(1u);
      goto LABEL_96;
    }
    goto LABEL_17;
  }
LABEL_82:
  swift_release();
  v2 = (uint64_t)v59;
  if (v59)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    if (qword_1ED872138 != -1)
      swift_once();
    v49 = sub_1CA85B348();
    __swift_project_value_buffer(v49, (uint64_t)qword_1ED87D058);
    swift_bridgeObjectRetain();
    v50 = sub_1CA85B330();
    v51 = sub_1CA85BAD4();
    if (os_log_type_enabled(v50, v51))
    {
      v52 = swift_slowAlloc();
      v62 = swift_slowAlloc();
      __dst[0] = v62;
      *(_DWORD *)v52 = 134218242;
      sub_1CA85BCF0();
      *(_WORD *)(v52 + 12) = 2080;
      swift_bridgeObjectRetain();
      v53 = sub_1CA85B990();
      v55 = v54;
      swift_bridgeObjectRelease();
      sub_1CA28712C(v53, v55, __dst);
      sub_1CA85BCF0();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1CA237000, v50, v51, "[MemoriesMusic] yearlySummaryIdentifiers doesn't contain a key for %ld. yearlySummaryPlaylistNames = %s", (uint8_t *)v52, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1CAA4F27C](v62, -1, -1);
      MEMORY[0x1CAA4F27C](v52, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
  }
  v6 = v58;
LABEL_90:
  v56 = (void *)v2;
  result.value._object = v56;
  result.value._countAndFlagsBits = v6;
  return result;
}

void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> MusicBag.jobConfiguration()(PhotosGraph::JobConfiguration *__return_ptr retstr)
{
  void *v1;
  id v3;
  uint64_t v4;
  double v5;
  double v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  _BYTE v15[296];
  _BYTE v16[296];
  _BYTE v17[296];
  _BYTE v18[296];
  uint64_t v19;

  v3 = v1;
  v4 = swift_retain();
  sub_1CA29A0B4(v4, v3, (uint64_t)v16);
  swift_release();
  sub_1CA24EEF8((uint64_t)v16, (uint64_t)v17, &qword_1ED872E70);
  sub_1CA24EEF8((uint64_t)v17, (uint64_t)v18, &qword_1ED872E70);
  if (sub_1CA308290((uint64_t)v18) == 1)
  {
    sub_1CA24EEF8((uint64_t)v17, (uint64_t)v15, &qword_1ED872E70);
    v19 = *(_QWORD *)GEOLocationCoordinate2DMake(v5);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED872BA0);
    swift_willThrowTypedImpl();
  }
  else
  {
    sub_1CA3084C0((uint64_t)v17, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1CA308298);
    sub_1CA24EEF8((uint64_t)v17, (uint64_t)v15, &qword_1ED872E70);
    v7 = GEOLocationCoordinate2DMake(v6);
    v8 = *(_OWORD *)(v7 + 216);
    *(_OWORD *)&retstr->musicForTimeBackfill.value.maximumFailureCadenceSeconds = *(_OWORD *)(v7 + 200);
    *(_OWORD *)&retstr->musicForTimeFrontfill.value.minimumSuccessCadenceSeconds = v8;
    *(_OWORD *)&retstr->musicForTimeFrontfill.value.failureBackoffMultiplier = *(_OWORD *)(v7 + 232);
    retstr->musicForTimeFrontfill.is_nil = *(_BYTE *)(v7 + 248);
    v9 = *(_OWORD *)(v7 + 152);
    *(_OWORD *)&retstr->musicForPerformer.maximumFailureCadenceSeconds = *(_OWORD *)(v7 + 136);
    *(_OWORD *)&retstr->musicForTime.minimumFailureCadenceSeconds = v9;
    v10 = *(_OWORD *)(v7 + 184);
    *(_OWORD *)&retstr->musicForTime.maximumFailureCadenceSeconds = *(_OWORD *)(v7 + 168);
    *(_OWORD *)&retstr->musicForTimeBackfill.value.minimumFailureCadenceSeconds = v10;
    v11 = *(_OWORD *)(v7 + 88);
    *(_OWORD *)&retstr->musicForTopic.is_nil = *(_OWORD *)(v7 + 72);
    *(_OWORD *)&retstr->musicForMoment.minimumFailureCadenceSeconds = v11;
    v12 = *(_OWORD *)(v7 + 120);
    *(_OWORD *)&retstr->musicForMoment.maximumFailureCadenceSeconds = *(_OWORD *)(v7 + 104);
    *(_OWORD *)&retstr->musicForPerformer.minimumFailureCadenceSeconds = v12;
    v13 = *(_OWORD *)(v7 + 24);
    *(_OWORD *)&retstr->musicForYou.minimumSuccessCadenceSeconds = *(_OWORD *)(v7 + 8);
    *(_OWORD *)&retstr->musicForYou.failureBackoffMultiplier = v13;
    v14 = *(_OWORD *)(v7 + 56);
    *(_OWORD *)&retstr->musicForTopic.value.minimumSuccessCadenceSeconds = *(_OWORD *)(v7 + 40);
    *(_OWORD *)&retstr->musicForTopic.value.failureBackoffMultiplier = v14;
  }
}

PhotosGraph::CacheRefreshConfiguration __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> MusicBag.cacheRefreshConfiguration()()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  uint64_t v4;
  double v5;
  Swift::Int v6;
  double v7;
  double v8;
  uint64_t v9;
  PhotosGraph::CacheRefreshConfiguration result;
  _BYTE v11[296];
  _BYTE v12[296];
  _BYTE v13[296];
  _BYTE v14[296];
  uint64_t v15;

  v2 = v0;
  v3 = v1;
  v4 = swift_retain();
  sub_1CA29A0B4(v4, v3, (uint64_t)v12);
  swift_release();
  sub_1CA24EEF8((uint64_t)v12, (uint64_t)v13, &qword_1ED872E70);
  sub_1CA24EEF8((uint64_t)v13, (uint64_t)v14, &qword_1ED872E70);
  if (sub_1CA308290((uint64_t)v14) == 1)
  {
    sub_1CA24EEF8((uint64_t)v13, (uint64_t)v11, &qword_1ED872E70);
    v15 = *(_QWORD *)GEOLocationCoordinate2DMake(v5);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED872BA0);
    v6 = swift_willThrowTypedImpl();
  }
  else
  {
    sub_1CA3084C0((uint64_t)v13, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1CA308298);
    sub_1CA24EEF8((uint64_t)v13, (uint64_t)v11, &qword_1ED872E70);
    v6 = GEOLocationCoordinate2DMake(v8);
    v7 = *(double *)(v6 + 256);
    v9 = *(_QWORD *)(v6 + 264);
    *(double *)v2 = v7;
    *(_QWORD *)(v2 + 8) = v9;
  }
  result.minimumRefreshCadenceSeconds = v7;
  result.batchSize = v6;
  return result;
}

Swift::Int __swiftcall MusicBag.songEquivalentQueryBatchSize()()
{
  void *v0;
  id v1;
  uint64_t v2;
  double v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  double v9;
  _QWORD v10[39];
  _BYTE v11[296];
  _BYTE v12[296];
  _BYTE v13[296];

  v1 = v0;
  v2 = swift_retain();
  sub_1CA29A0B4(v2, v1, (uint64_t)v11);
  swift_release();
  sub_1CA24EEF8((uint64_t)v11, (uint64_t)v12, &qword_1ED872E70);
  sub_1CA24EEF8((uint64_t)v12, (uint64_t)v13, &qword_1ED872E70);
  if (sub_1CA308290((uint64_t)v13) == 1)
  {
    sub_1CA24EEF8((uint64_t)v12, (uint64_t)v10, &qword_1ED872E70);
    v10[37] = *(_QWORD *)GEOLocationCoordinate2DMake(v3);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED872BA0);
    swift_willThrowTypedImpl();
    if (qword_1ED872138 != -1)
      swift_once();
    v4 = sub_1CA85B348();
    __swift_project_value_buffer(v4, (uint64_t)qword_1ED87D058);
    v5 = sub_1CA85B330();
    v6 = sub_1CA85BAD4();
    if (os_log_type_enabled(v5, v6))
    {
      v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v7 = 0;
      _os_log_impl(&dword_1CA237000, v5, v6, "[MemoriesMusic] Bag is missing songEquivalentQueryBatchSize.", v7, 2u);
      MEMORY[0x1CAA4F27C](v7, -1, -1);
    }
    sub_1CA3084C0((uint64_t)v12, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1CA308298);

    return 300;
  }
  else
  {
    sub_1CA3084C0((uint64_t)v12, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1CA308298);
    sub_1CA24EEF8((uint64_t)v12, (uint64_t)v10, &qword_1ED872E70);
    return *(_QWORD *)(GEOLocationCoordinate2DMake(v9) + 280);
  }
}

Swift::Int __swiftcall MusicBag.songQueryBatchSize()()
{
  void *v0;
  id v1;
  uint64_t v2;
  double v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  double v9;
  _QWORD v10[39];
  _BYTE v11[296];
  _BYTE v12[296];
  _BYTE v13[296];

  v1 = v0;
  v2 = swift_retain();
  sub_1CA29A0B4(v2, v1, (uint64_t)v11);
  swift_release();
  sub_1CA24EEF8((uint64_t)v11, (uint64_t)v12, &qword_1ED872E70);
  sub_1CA24EEF8((uint64_t)v12, (uint64_t)v13, &qword_1ED872E70);
  if (sub_1CA308290((uint64_t)v13) == 1)
  {
    sub_1CA24EEF8((uint64_t)v12, (uint64_t)v10, &qword_1ED872E70);
    v10[37] = *(_QWORD *)GEOLocationCoordinate2DMake(v3);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED872BA0);
    swift_willThrowTypedImpl();
    if (qword_1ED872138 != -1)
      swift_once();
    v4 = sub_1CA85B348();
    __swift_project_value_buffer(v4, (uint64_t)qword_1ED87D058);
    v5 = sub_1CA85B330();
    v6 = sub_1CA85BAD4();
    if (os_log_type_enabled(v5, v6))
    {
      v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v7 = 0;
      _os_log_impl(&dword_1CA237000, v5, v6, "[MemoriesMusic] Bag is missing songQueryBatchSize.", v7, 2u);
      MEMORY[0x1CAA4F27C](v7, -1, -1);
    }
    sub_1CA3084C0((uint64_t)v12, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1CA308298);

    return 300;
  }
  else
  {
    sub_1CA3084C0((uint64_t)v12, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1CA308298);
    sub_1CA24EEF8((uint64_t)v12, (uint64_t)v10, &qword_1ED872E70);
    return *(_QWORD *)(GEOLocationCoordinate2DMake(v9) + 272);
  }
}

id MusicBag.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void MusicBag.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id MusicBag.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_1CA307B24(void *a1)
{
  char *v1;
  char *v2;
  objc_class *ObjectType;
  uint64_t v5;
  uint64_t v6;
  id v7;
  char *v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  objc_super v14;
  _BYTE v15[296];

  v2 = v1;
  ObjectType = (objc_class *)swift_getObjectType();
  v5 = OBJC_IVAR___PGMusicBag_atomicMusicBagContents;
  sub_1CA30869C((uint64_t)v15);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED873110);
  v6 = swift_allocObject();
  v7 = objc_allocWithZone(MEMORY[0x1E0CB3740]);
  v8 = v1;
  *(_QWORD *)(v6 + 312) = objc_msgSend(v7, sel_init);
  sub_1CA24EEF8((uint64_t)v15, v6 + 16, &qword_1ED872E78);
  *(_QWORD *)&v2[v5] = v6;
  *(_QWORD *)&v8[OBJC_IVAR___PGMusicBag_cache] = a1;
  v9 = a1;
  v10 = (void *)sub_1CA85B510();
  v11 = (void *)sub_1CA85B510();
  v12 = objc_msgSend((id)objc_opt_self(), sel_bagForProfile_profileVersion_, v10, v11);

  *(_QWORD *)&v8[OBJC_IVAR___PGMusicBag_amsBag] = v12;
  v14.receiver = v8;
  v14.super_class = ObjectType;
  return objc_msgSendSuper2(&v14, sel_init);
}

uint64_t sub_1CA307C74()
{
  void *v0;
  void *v1;
  id v2;
  void *v3;
  id v4;
  dispatch_semaphore_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  NSObject *v9;
  uint64_t v10;
  _QWORD v12[6];

  v0 = (void *)sub_1CA85B510();
  v1 = (void *)sub_1CA85B510();
  v2 = objc_msgSend((id)objc_opt_self(), sel_bagForProfile_profileVersion_, v0, v1);

  v3 = (void *)sub_1CA85B510();
  v4 = objc_msgSend(v2, sel_stringForKey_, v3);

  v5 = dispatch_semaphore_create(0);
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = 0;
  *(_QWORD *)(v6 + 24) = 0xE000000000000000;
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = v6;
  *(_QWORD *)(v7 + 24) = v5;
  v12[4] = sub_1CA3086F8;
  v12[5] = v7;
  v12[0] = MEMORY[0x1E0C809B0];
  v12[1] = 1107296256;
  v12[2] = sub_1CA305D2C;
  v12[3] = &block_descriptor_86;
  v8 = _Block_copy(v12);
  swift_retain();
  v9 = v5;
  swift_release();
  objc_msgSend(v4, sel_valueWithCompletion_, v8);
  _Block_release(v8);
  sub_1CA85BC18();

  swift_beginAccess();
  v10 = *(_QWORD *)(v6 + 16);
  swift_bridgeObjectRetain();

  swift_release();
  return v10;
}

uint64_t sub_1CA307E64()
{
  return swift_deallocObject();
}

uint64_t sub_1CA307E78(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1CA305E54(a1, a2, a3, *(_QWORD *)(v3 + 16));
}

uint64_t sub_1CA307E84()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1CA307EAC(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1CA305FFC(a1, a2, a3, *(_QWORD *)(v3 + 16));
}

unint64_t sub_1CA307EB4()
{
  unint64_t result;

  result = qword_1EF94D2F8;
  if (!qword_1EF94D2F8)
  {
    result = MEMORY[0x1CAA4F1A4](&protocol conformance descriptor for MusicBag.MusicBagError, &type metadata for MusicBag.MusicBagError);
    atomic_store(result, (unint64_t *)&qword_1EF94D2F8);
  }
  return result;
}

unint64_t sub_1CA307EFC()
{
  unint64_t result;

  result = qword_1ED871538;
  if (!qword_1ED871538)
  {
    result = MEMORY[0x1CAA4F1A4](&protocol conformance descriptor for JobConfiguration, &type metadata for JobConfiguration);
    atomic_store(result, (unint64_t *)&qword_1ED871538);
  }
  return result;
}

unint64_t sub_1CA307F44()
{
  unint64_t result;

  result = qword_1ED871A30;
  if (!qword_1ED871A30)
  {
    result = MEMORY[0x1CAA4F1A4](&protocol conformance descriptor for CacheRefreshConfiguration, &type metadata for CacheRefreshConfiguration);
    atomic_store(result, (unint64_t *)&qword_1ED871A30);
  }
  return result;
}

uint64_t sub_1CA307F88(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1CA307FBC(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;

  v6 = *(_OWORD *)(a1 + 256);
  v7 = *(_OWORD *)(a1 + 272);
  v4 = *(_OWORD *)(a1 + 224);
  v5 = *(_OWORD *)(a1 + 240);
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
    *(_QWORD *)(a1 + 152),
    *(_QWORD *)(a1 + 160),
    *(_QWORD *)(a1 + 168),
    *(_QWORD *)(a1 + 176),
    *(_QWORD *)(a1 + 184),
    *(_QWORD *)(a1 + 192),
    *(_QWORD *)(a1 + 200),
    *(_QWORD *)(a1 + 208),
    *(_QWORD *)(a1 + 216),
    v4,
    *((_QWORD *)&v4 + 1),
    v5,
    *((_QWORD *)&v5 + 1),
    v6,
    *((_QWORD *)&v6 + 1),
    v7,
    *((_QWORD *)&v7 + 1),
    *(_QWORD *)(a1 + 288),
    *(_QWORD *)(a1 + 296));
  return a1;
}

uint64_t sub_1CA308040(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

id sub_1CA308070(const void *a1, void *a2)
{
  char *v2;
  char *v3;
  uint64_t v6;
  uint64_t v7;
  id v8;
  char *v9;
  void *v10;
  void *v11;
  id v12;
  double v13;
  uint64_t v14;
  id v15;
  objc_class *ObjectType;
  objc_super v18;
  _BYTE v19[296];
  _BYTE __dst[296];
  _BYTE v21[304];

  v3 = v2;
  ObjectType = (objc_class *)swift_getObjectType();
  v6 = OBJC_IVAR___PGMusicBag_atomicMusicBagContents;
  sub_1CA30869C((uint64_t)v19);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED873110);
  v7 = swift_allocObject();
  v8 = objc_allocWithZone(MEMORY[0x1E0CB3740]);
  v9 = v3;
  *(_QWORD *)(v7 + 312) = objc_msgSend(v8, sel_init);
  sub_1CA24EEF8((uint64_t)v19, v7 + 16, &qword_1ED872E78);
  *(_QWORD *)&v3[v6] = v7;
  v10 = (void *)sub_1CA85B510();
  v11 = (void *)sub_1CA85B510();
  v12 = objc_msgSend((id)objc_opt_self(), sel_bagForProfile_profileVersion_, v10, v11);

  *(_QWORD *)&v9[OBJC_IVAR___PGMusicBag_amsBag] = v12;
  memcpy(__dst, a1, 0x120uLL);
  sub_1CA29A6FC((uint64_t)__dst);
  sub_1CA24EEF8((uint64_t)__dst, (uint64_t)v21, &qword_1ED872E70);
  GEOLocationCoordinate2DMake(v13);
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 312) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3740]), sel_init);
  sub_1CA24EEF8((uint64_t)v21, v14 + 16, &qword_1ED872E78);
  *(_QWORD *)&v3[v6] = v14;
  swift_release();
  *(_QWORD *)&v9[OBJC_IVAR___PGMusicBag_cache] = a2;
  v15 = a2;

  v18.receiver = v9;
  v18.super_class = ObjectType;
  return objc_msgSendSuper2(&v18, sel_init);
}

uint64_t sub_1CA308250()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1CA308278(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1CA305CBC(a1, a2, a3, *(_QWORD *)(v3 + 16));
}

uint64_t sub_1CA308290(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 288);
}

void sub_1CA308298(id a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,char a37)
{
  if ((a37 & 1) != 0)

  else
    swift_bridgeObjectRelease();
}

uint64_t sub_1CA3082A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1CA3082BC(a1, a2, a3);
}

uint64_t sub_1CA3082BC(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v19;
  int64_t v20;

  v5 = result;
  v6 = 0;
  v7 = 1 << *(_BYTE *)(result + 32);
  v8 = -1;
  if (v7 < 64)
    v8 = ~(-1 << v7);
  v9 = v8 & *(_QWORD *)(result + 64);
  v20 = (unint64_t)(v7 + 63) >> 6;
  while (v9)
  {
    v10 = __clz(__rbit64(v9));
    v9 &= v9 - 1;
    v11 = v10 | (v6 << 6);
LABEL_22:
    v15 = 16 * v11;
    v16 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + v15);
    v17 = (_QWORD *)(*(_QWORD *)(v5 + 56) + v15);
    if (*v17 != a2 || v17[1] != a3)
    {
      result = sub_1CA85C284();
      if ((result & 1) == 0)
        continue;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return v16;
  }
  v12 = v6 + 1;
  if (__OFADD__(v6, 1))
  {
    __break(1u);
    goto LABEL_31;
  }
  if (v12 >= v20)
    return 0;
  v13 = *(_QWORD *)(v19 + 8 * v12);
  ++v6;
  if (v13)
    goto LABEL_21;
  v6 = v12 + 1;
  if (v12 + 1 >= v20)
    return 0;
  v13 = *(_QWORD *)(v19 + 8 * v6);
  if (v13)
    goto LABEL_21;
  v6 = v12 + 2;
  if (v12 + 2 >= v20)
    return 0;
  v13 = *(_QWORD *)(v19 + 8 * v6);
  if (v13)
    goto LABEL_21;
  v6 = v12 + 3;
  if (v12 + 3 >= v20)
    return 0;
  v13 = *(_QWORD *)(v19 + 8 * v6);
  if (v13)
  {
LABEL_21:
    v9 = (v13 - 1) & v13;
    v11 = __clz(__rbit64(v13)) + (v6 << 6);
    goto LABEL_22;
  }
  v14 = v12 + 4;
  if (v14 >= v20)
    return 0;
  v13 = *(_QWORD *)(v19 + 8 * v14);
  if (v13)
  {
    v6 = v14;
    goto LABEL_21;
  }
  while (1)
  {
    v6 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v6 >= v20)
      return 0;
    v13 = *(_QWORD *)(v19 + 8 * v6);
    ++v14;
    if (v13)
      goto LABEL_21;
  }
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_1CA3084C0(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  char v7;

  v7 = *(_BYTE *)(a1 + 288);
  v5 = *(_OWORD *)(a1 + 240);
  v6 = *(_OWORD *)(a1 + 256);
  v4 = *(_OWORD *)(a1 + 208);
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
    *(_QWORD *)(a1 + 152),
    *(_QWORD *)(a1 + 160),
    *(_QWORD *)(a1 + 168),
    *(_QWORD *)(a1 + 176),
    *(_QWORD *)(a1 + 184),
    *(_QWORD *)(a1 + 192),
    *(_QWORD *)(a1 + 200),
    v4,
    *((_QWORD *)&v4 + 1),
    *(_QWORD *)(a1 + 224),
    *(_QWORD *)(a1 + 232),
    v5,
    *((_QWORD *)&v5 + 1),
    v6,
    *((_QWORD *)&v6 + 1),
    *(_QWORD *)(a1 + 272),
    *(_QWORD *)(a1 + 280),
    v7);
  return a1;
}

unint64_t sub_1CA308550()
{
  unint64_t result;

  result = qword_1EF94D308;
  if (!qword_1EF94D308)
  {
    result = MEMORY[0x1CAA4F1A4](&protocol conformance descriptor for MusicBag.MusicBagError, &type metadata for MusicBag.MusicBagError);
    atomic_store(result, (unint64_t *)&qword_1EF94D308);
  }
  return result;
}

uint64_t type metadata accessor for MusicBag()
{
  return objc_opt_self();
}

uint64_t method lookup function for MusicBag()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MusicBag.__allocating_init(with:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t dispatch thunk of MusicBag.__allocating_init(musicBagContents:cache:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t storeEnumTagSinglePayload for MusicBag.MusicBagError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1CA30861C + 4 * byte_1CA8DBD15[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1CA308650 + 4 * byte_1CA8DBD10[v4]))();
}

uint64_t sub_1CA308650(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CA308658(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1CA308660);
  return result;
}

uint64_t sub_1CA30866C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1CA308674);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1CA308678(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CA308680(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MusicBag.MusicBagError()
{
  return &type metadata for MusicBag.MusicBagError;
}

double sub_1CA30869C(uint64_t a1)
{
  double result;

  result = 0.0;
  *(_OWORD *)(a1 + 256) = 0u;
  *(_OWORD *)(a1 + 272) = 0u;
  *(_OWORD *)(a1 + 224) = 0u;
  *(_OWORD *)(a1 + 240) = 0u;
  *(_OWORD *)(a1 + 192) = 0u;
  *(_OWORD *)(a1 + 208) = 0u;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_BYTE *)(a1 + 288) = -1;
  return result;
}

uint64_t GraphSearchEntity.type.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR___PGGraphSearchEntity_type);
}

uint64_t GraphSearchEntity.label.getter()
{
  return sub_1CA308740(&OBJC_IVAR___PGGraphSearchEntity_label);
}

uint64_t GraphSearchEntity.identifier.getter()
{
  return sub_1CA308740(&OBJC_IVAR___PGGraphSearchEntity_identifier);
}

uint64_t sub_1CA308740(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + *a1);
  swift_bridgeObjectRetain();
  return v2;
}

double GraphSearchEntity.confidence.getter()
{
  uint64_t v0;

  return *(double *)(v0 + OBJC_IVAR___PGGraphSearchEntity_confidence);
}

double GraphSearchEntity.rankingScore.getter()
{
  uint64_t v0;

  return *(double *)(v0 + OBJC_IVAR___PGGraphSearchEntity_rankingScore);
}

uint64_t GraphSearchEntity.dateInterval.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1CA3087A8(v1 + OBJC_IVAR___PGGraphSearchEntity_dateInterval, a1);
}

uint64_t sub_1CA3087A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED871160);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t GraphSearchEntity.synonyms.getter()
{
  return swift_bridgeObjectRetain();
}

id GraphSearchEntity.__allocating_init(type:label:identifier:confidence:rankingScore:dateInterval:synonyms:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, double a8, double a9)
{
  objc_class *v9;
  char *v19;
  char *v20;
  char *v21;
  id v22;
  objc_super v24;

  v19 = (char *)objc_allocWithZone(v9);
  *(_QWORD *)&v19[OBJC_IVAR___PGGraphSearchEntity_type] = a1;
  v20 = &v19[OBJC_IVAR___PGGraphSearchEntity_label];
  *(_QWORD *)v20 = a2;
  *((_QWORD *)v20 + 1) = a3;
  v21 = &v19[OBJC_IVAR___PGGraphSearchEntity_identifier];
  *(_QWORD *)v21 = a4;
  *((_QWORD *)v21 + 1) = a5;
  *(double *)&v19[OBJC_IVAR___PGGraphSearchEntity_confidence] = a8;
  *(double *)&v19[OBJC_IVAR___PGGraphSearchEntity_rankingScore] = a9;
  sub_1CA3087A8(a6, (uint64_t)&v19[OBJC_IVAR___PGGraphSearchEntity_dateInterval]);
  *(_QWORD *)&v19[OBJC_IVAR___PGGraphSearchEntity_synonyms] = a7;
  v24.receiver = v19;
  v24.super_class = v9;
  v22 = objc_msgSendSuper2(&v24, sel_init);
  sub_1CA308A00(a6);
  return v22;
}

id GraphSearchEntity.init(type:label:identifier:confidence:rankingScore:dateInterval:synonyms:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, double a8, double a9)
{
  char *v9;
  objc_class *ObjectType;
  char *v20;
  char *v21;
  id v22;
  objc_super v24;

  ObjectType = (objc_class *)swift_getObjectType();
  *(_QWORD *)&v9[OBJC_IVAR___PGGraphSearchEntity_type] = a1;
  v20 = &v9[OBJC_IVAR___PGGraphSearchEntity_label];
  *(_QWORD *)v20 = a2;
  *((_QWORD *)v20 + 1) = a3;
  v21 = &v9[OBJC_IVAR___PGGraphSearchEntity_identifier];
  *(_QWORD *)v21 = a4;
  *((_QWORD *)v21 + 1) = a5;
  *(double *)&v9[OBJC_IVAR___PGGraphSearchEntity_confidence] = a8;
  *(double *)&v9[OBJC_IVAR___PGGraphSearchEntity_rankingScore] = a9;
  sub_1CA3087A8(a6, (uint64_t)&v9[OBJC_IVAR___PGGraphSearchEntity_dateInterval]);
  *(_QWORD *)&v9[OBJC_IVAR___PGGraphSearchEntity_synonyms] = a7;
  v24.receiver = v9;
  v24.super_class = ObjectType;
  v22 = objc_msgSendSuper2(&v24, sel_init);
  sub_1CA308A00(a6);
  return v22;
}

uint64_t sub_1CA308A00(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED871160);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

id GraphSearchEntity.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void GraphSearchEntity.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id GraphSearchEntity.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1CA308B4C()
{
  return type metadata accessor for GraphSearchEntity();
}

uint64_t type metadata accessor for GraphSearchEntity()
{
  uint64_t result;

  result = qword_1ED874510;
  if (!qword_1ED874510)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1CA308B90()
{
  unint64_t v0;

  sub_1CA308C3C();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t method lookup function for GraphSearchEntity()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of GraphSearchEntity.__allocating_init(type:label:identifier:confidence:rankingScore:dateInterval:synonyms:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 136))();
}

void sub_1CA308C3C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED8744A0)
  {
    sub_1CA85A148();
    v0 = sub_1CA85BCCC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED8744A0);
  }
}

unint64_t sub_1CA308C90()
{
  uint64_t v0;
  _BYTE *v1;
  unint64_t result;

  v1 = (_BYTE *)(v0 + OBJC_IVAR___PGKeywordBasedFeatureExtractor____lazy_storage___consistentHash);
  if (*(_BYTE *)(v0 + OBJC_IVAR___PGKeywordBasedFeatureExtractor____lazy_storage___consistentHash + 8) != 1)
    return *(_QWORD *)v1;
  result = sub_1CA30916C(*(_QWORD *)(v0 + OBJC_IVAR___PGKeywordBasedFeatureExtractor_weightByKeyword));
  *(_QWORD *)v1 = result;
  v1[8] = 0;
  return result;
}

id KeywordBasedFeatureExtractor.__allocating_init(with:)(uint64_t a1)
{
  objc_class *v1;
  char *v3;
  char *v4;
  objc_super v6;

  v3 = (char *)objc_allocWithZone(v1);
  v4 = &v3[OBJC_IVAR___PGKeywordBasedFeatureExtractor____lazy_storage___consistentHash];
  *(_QWORD *)v4 = 0;
  v4[8] = 1;
  *(_QWORD *)&v3[OBJC_IVAR___PGKeywordBasedFeatureExtractor_weightByKeyword] = a1;
  v6.receiver = v3;
  v6.super_class = v1;
  return objc_msgSendSuper2(&v6, sel_init);
}

id KeywordBasedFeatureExtractor.init(with:)(uint64_t a1)
{
  char *v1;
  objc_class *ObjectType;
  char *v4;
  objc_super v6;

  ObjectType = (objc_class *)swift_getObjectType();
  v4 = &v1[OBJC_IVAR___PGKeywordBasedFeatureExtractor____lazy_storage___consistentHash];
  *(_QWORD *)v4 = 0;
  v4[8] = 1;
  *(_QWORD *)&v1[OBJC_IVAR___PGKeywordBasedFeatureExtractor_weightByKeyword] = a1;
  v6.receiver = v1;
  v6.super_class = ObjectType;
  return objc_msgSendSuper2(&v6, sel_init);
}

uint64_t KeywordBasedFeatureExtractor.musicCurationFeatures(context:progressReporter:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  _QWORD *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  id v15;
  id v16;
  _BYTE v18[40];

  if (qword_1ED872F98 != -1)
    swift_once();
  v4 = qword_1ED87D0F0;
  *(double *)&v5 = CACurrentMediaTime();
  sub_1CA2E4280("KeywordBasedFeatureExtractor - musicCurationFeatures", 52, 2u, v5, 0, v4, (uint64_t)v18);
  v6 = (void *)sub_1CA85BB7C();
  v8 = v7;
  v9 = sub_1CA3276D0(*(_QWORD *)(v1 + OBJC_IVAR___PGKeywordBasedFeatureExtractor_weightByKeyword));
  if (v2)
  {

    sub_1CA2E0C94(0);
    swift_release();
    return swift_release();
  }
  else
  {
    v10 = v9;
    v11 = sub_1CA51049C(a1, v9);
    v13 = v12;
    v14 = sub_1CA308C90();
    v15 = objc_allocWithZone((Class)type metadata accessor for MusicCurationFeatures());
    v16 = MusicCurationFeatures.init(memoryCategory:memorySubcategory:curatorEvents:eventCollectionDuration:eventRatioByLanguageCode:mostFrequentMeaningLabel:performerIdentifiers:inferredUserLanguageCodes:maestroSongScoresBySongID:scoreByAssetCollectionMaestroKeyword:consistentHash:location:shouldAvoidColorGrading:)(0, 0, MEMORY[0x1E0DEE9D8], 0, 1, 0, 0, 0, 0, 0, v11, v13, v14, 0, 0, 0);

    sub_1CA2E0C94(0);
    swift_release();
    swift_release();
    return (uint64_t)v16;
  }
}

id KeywordBasedFeatureExtractor.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void KeywordBasedFeatureExtractor.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id KeywordBasedFeatureExtractor.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

unint64_t sub_1CA30916C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  char v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v12[2];

  v12[1] = *MEMORY[0x1E0C80C00];
  v2 = swift_bridgeObjectRetain();
  v12[0] = (uint64_t)sub_1CA2438E4(v2);
  sub_1CA2D63FC(v12);
  swift_bridgeObjectRelease();
  v3 = *(_QWORD *)(v12[0] + 16);
  if (v3)
  {
    v4 = 0;
    v5 = (unint64_t *)(v12[0] + 40);
    do
    {
      if (*(_QWORD *)(a1 + 16))
      {
        v7 = *(v5 - 1);
        v6 = *v5;
        swift_bridgeObjectRetain();
        sub_1CA25081C(v7, v6);
        if ((v8 & 1) != 0)
        {
          v9 = sub_1CA2F79E8(v7, v6);
          swift_bridgeObjectRelease();
          v10 = ((v4 << 6) + 2654435769u + (v4 >> 2) + v9) ^ v4;
          v4 = (sub_1CA85B96C() + 2654435769 + (v10 << 6) + (v10 >> 2)) ^ v10;
        }
        else
        {
          swift_bridgeObjectRelease();
        }
      }
      v5 += 2;
      --v3;
    }
    while (v3);
  }
  else
  {
    v4 = 0;
  }
  swift_release();
  return v4;
}

uint64_t type metadata accessor for KeywordBasedFeatureExtractor()
{
  return objc_opt_self();
}

uint64_t method lookup function for KeywordBasedFeatureExtractor()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of KeywordBasedFeatureExtractor.__allocating_init(with:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

void sub_1CA3092F4()
{
  uint64_t inited;
  uint64_t v1;
  id v2;
  void *v3;
  id v4;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED8732F0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1CA8D6080;
  sub_1CA85B534();
  swift_bridgeObjectRetain();
  v1 = MEMORY[0x1E0DEA968];
  sub_1CA85BE7C();
  swift_bridgeObjectRelease();
  *(_QWORD *)(inited + 96) = v1;
  *(_QWORD *)(inited + 72) = 26704;
  *(_QWORD *)(inited + 80) = 0xE200000000000000;
  sub_1CA85B534();
  swift_bridgeObjectRetain();
  sub_1CA85BE7C();
  swift_bridgeObjectRelease();
  *(_QWORD *)(inited + 168) = v1;
  *(_QWORD *)(inited + 144) = 0xD00000000000002BLL;
  *(_QWORD *)(inited + 152) = 0x80000001CA88C150;
  sub_1CA85B534();
  swift_bridgeObjectRetain();
  sub_1CA85BE7C();
  swift_bridgeObjectRelease();
  *(_QWORD *)(inited + 240) = v1;
  *(_QWORD *)(inited + 216) = 0xD00000000000002BLL;
  *(_QWORD *)(inited + 224) = 0x80000001CA88C180;
  sub_1CA85BE7C();
  *(_QWORD *)(inited + 312) = MEMORY[0x1E0DEAFA0];
  *(_BYTE *)(inited + 288) = 1;
  sub_1CA2745D0(inited);
  v2 = objc_allocWithZone(MEMORY[0x1E0D22280]);
  v3 = (void *)sub_1CA85B3FC();
  swift_bridgeObjectRelease();
  v4 = objc_msgSend(v2, sel_initWithOptions_, v3, 0xD000000000000010, 0x80000001CA88C1B0);

  if (v4)
    qword_1ED872B88 = (uint64_t)v4;
  else
    __break(1u);
}

id static FMSongLibrary.sharedLibrary.getter()
{
  if (qword_1ED8731A0 != -1)
    swift_once();
  swift_beginAccess();
  return (id)qword_1ED872B88;
}

void static FMSongLibrary.sharedLibrary.setter(uint64_t a1)
{
  void *v2;

  if (qword_1ED8731A0 != -1)
    swift_once();
  swift_beginAccess();
  v2 = (void *)qword_1ED872B88;
  qword_1ED872B88 = a1;

}

uint64_t (*static FMSongLibrary.sharedLibrary.modify())()
{
  if (qword_1ED8731A0 != -1)
    swift_once();
  swift_beginAccess();
  return j__swift_endAccess;
}

id sub_1CA309668(void *a1)
{
  return sub_1CA3096A4(a1);
}

id FMSong.valence.getter()
{
  return sub_1CA309720();
}

id sub_1CA309690(void *a1)
{
  return sub_1CA3096A4(a1);
}

id sub_1CA3096A4(void *a1)
{
  id v1;
  void *v2;
  id v3;

  v1 = a1;
  v2 = (void *)sub_1CA85B510();
  v3 = objc_msgSend(v1, sel_valueForTagPrefix_, v2);

  return v3;
}

id FMSong.arousal.getter()
{
  return sub_1CA309720();
}

id sub_1CA309720()
{
  void *v0;
  void *v1;
  id v2;

  v1 = (void *)sub_1CA85B510();
  v2 = objc_msgSend(v0, sel_valueForTagPrefix_, v1);

  return v2;
}

id sub_1CA30976C()
{
  void *v0;
  id v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  id result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  unsigned __int8 *v15;
  int v16;
  id v17;
  double v18;
  char v19;

  v1 = objc_msgSend(v0, sel_tagIDs);
  v2 = sub_1CA85B984();

  v3 = sub_1CA243494(v2);
  swift_bridgeObjectRelease();
  v4 = v3[2];
  if (!v4)
  {
LABEL_7:
    swift_release();
    return 0;
  }
  sub_1CA281DC0();
  v5 = v3 + 5;
  while (1)
  {
    swift_bridgeObjectRetain();
    if ((sub_1CA85BD50() & 1) != 0)
    {
      v6 = (_QWORD *)sub_1CA85BD08();
      swift_bridgeObjectRelease();
      if (v6[2] == 2)
        break;
    }
    swift_bridgeObjectRelease();
    v5 += 2;
    if (!--v4)
      goto LABEL_7;
  }
  v9 = v6[6];
  v8 = v6[7];
  swift_bridgeObjectRetain();
  v10 = swift_bridgeObjectRelease();
  v11 = MEMORY[0x1E0C80A78](v10);
  if ((v8 & 0x1000000000000000) != 0 || !(v8 & 0x2000000000000000 | v9 & 0x1000000000000000))
  {
    sub_1CA85BEB8();
    result = (id)swift_bridgeObjectRelease();
    if ((v19 & 1) != 0)
      goto LABEL_19;
  }
  else
  {
    MEMORY[0x1E0C80A78](v11);
    if ((v8 & 0x2000000000000000) == 0)
    {
      if ((v9 & 0x1000000000000000) != 0)
      {
        v12 = (v8 & 0xFFFFFFFFFFFFFFFLL) + 32;
        v13 = v9 & 0xFFFFFFFFFFFFLL;
      }
      else
      {
        v12 = sub_1CA85BF30();
      }
      v14 = sub_1CA33971C(v12, v13, (void (*)(uint64_t *__return_ptr))sub_1CA309B44);
      result = (id)swift_bridgeObjectRelease();
      if ((v14 & 1) == 0)
        goto LABEL_24;
LABEL_19:
      swift_release();
      v17 = objc_allocWithZone(MEMORY[0x1E0CB37E8]);
      LODWORD(v18) = 0;
      return objc_msgSend(v17, sel_initWithFloat_, v18);
    }
    if (v9 <= 0x20u && ((1 << v9) & 0x100003E01) != 0
      || (v15 = (unsigned __int8 *)_swift_stdlib_strtof_clocale()) == 0)
    {
      result = (id)swift_bridgeObjectRelease();
    }
    else
    {
      v16 = *v15;
      result = (id)swift_bridgeObjectRelease();
      if (!v16)
        goto LABEL_19;
    }
  }
LABEL_24:
  __break(1u);
  return result;
}

id sub_1CA309A78(void *a1)
{
  id v2;
  id v3;

  sub_1CA85B534();
  v2 = a1;
  v3 = sub_1CA30976C();

  swift_bridgeObjectRelease();
  return v3;
}

_BYTE *sub_1CA309AD8@<X0>(_BYTE *result@<X0>, BOOL *a2@<X8>)
{
  unsigned int v3;
  BOOL v4;
  uint64_t v5;
  BOOL v6;
  BOOL v7;

  v3 = *result;
  v4 = v3 > 0x20;
  v5 = (1 << v3) & 0x100003E01;
  v6 = v4 || v5 == 0;
  v7 = v6 && (result = (_BYTE *)_swift_stdlib_strtof_clocale()) != 0 && *result == 0;
  *a2 = v7;
  return result;
}

_QWORD *sub_1CA309B44@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;

  return sub_1CA339770(*(_QWORD *(**)(uint64_t *__return_ptr))(v1 + 16), a1);
}

uint64_t sub_1CA309B5C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t result;
  int64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  int64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v2 = sub_1CA85A67C();
  v43 = *(_QWORD *)(v2 - 8);
  v44 = v2;
  MEMORY[0x1E0C80A78](v2);
  v42 = (char *)&v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED872E90);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1CA85A694();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8711F0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(_QWORD *)(a1 + 56);
  v40 = a1 + 56;
  v15 = 1 << *(_BYTE *)(a1 + 32);
  v16 = -1;
  if (v15 < 64)
    v16 = ~(-1 << v15);
  v17 = v16 & v14;
  v41 = (unint64_t)(v15 + 63) >> 6;
  v45 = a1;
  result = swift_bridgeObjectRetain();
  v19 = 0;
  v39 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  while (1)
  {
    if (v17)
    {
      v20 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      v21 = v20 | (v19 << 6);
      goto LABEL_22;
    }
    v22 = v19 + 1;
    if (__OFADD__(v19, 1))
    {
      __break(1u);
      goto LABEL_33;
    }
    if (v22 >= v41)
      goto LABEL_30;
    v23 = *(_QWORD *)(v40 + 8 * v22);
    ++v19;
    if (!v23)
    {
      v19 = v22 + 1;
      if (v22 + 1 >= v41)
        goto LABEL_30;
      v23 = *(_QWORD *)(v40 + 8 * v19);
      if (!v23)
      {
        v19 = v22 + 2;
        if (v22 + 2 >= v41)
          goto LABEL_30;
        v23 = *(_QWORD *)(v40 + 8 * v19);
        if (!v23)
        {
          v19 = v22 + 3;
          if (v22 + 3 >= v41)
            goto LABEL_30;
          v23 = *(_QWORD *)(v40 + 8 * v19);
          if (!v23)
            break;
        }
      }
    }
LABEL_21:
    v17 = (v23 - 1) & v23;
    v21 = __clz(__rbit64(v23)) + (v19 << 6);
LABEL_22:
    (*(void (**)(char *, unint64_t, uint64_t))(v8 + 16))(v13, *(_QWORD *)(v45 + 48) + *(_QWORD *)(v8 + 72) * v21, v7);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v13, 0, 1, v7);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v13, 1, v7) == 1)
      goto LABEL_31;
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v13, v7);
    v25 = v42;
    sub_1CA85A688();
    sub_1CA85A670();
    (*(void (**)(char *, uint64_t))(v43 + 8))(v25, v44);
    v26 = sub_1CA85A610();
    v27 = (uint64_t)v6;
    v28 = *(_QWORD *)(v26 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v28 + 48))(v27, 1, v26) == 1)
    {
      sub_1CA30A2B0(v27);
      result = (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
      v6 = (char *)v27;
    }
    else
    {
      v29 = sub_1CA85A604();
      v37 = v30;
      v38 = v29;
      (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v27, v26);
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
      result = swift_isUniquelyReferenced_nonNull_native();
      v6 = (char *)v27;
      if ((result & 1) == 0)
      {
        result = (uint64_t)sub_1CA26BCE4(0, v39[2] + 1, 1, v39);
        v39 = (_QWORD *)result;
      }
      v32 = v39[2];
      v31 = v39[3];
      if (v32 >= v31 >> 1)
      {
        result = (uint64_t)sub_1CA26BCE4((_QWORD *)(v31 > 1), v32 + 1, 1, v39);
        v39 = (_QWORD *)result;
      }
      v33 = v39;
      v39[2] = v32 + 1;
      v34 = &v33[2 * v32];
      v35 = v37;
      v34[4] = v38;
      v34[5] = v35;
    }
  }
  v24 = v22 + 4;
  if (v24 >= v41)
  {
LABEL_30:
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v13, 1, 1, v7);
LABEL_31:
    swift_release();
    return (uint64_t)v39;
  }
  v23 = *(_QWORD *)(v40 + 8 * v24);
  if (v23)
  {
    v19 = v24;
    goto LABEL_21;
  }
  while (1)
  {
    v19 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v19 >= v41)
      goto LABEL_30;
    v23 = *(_QWORD *)(v40 + 8 * v19);
    ++v24;
    if (v23)
      goto LABEL_21;
  }
LABEL_33:
  __break(1u);
  return result;
}

uint64_t sub_1CA309F84(void *a1)
{
  uint64_t v1;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  _BYTE v16[40];
  uint64_t v17;

  if (qword_1ED872F98 != -1)
    swift_once();
  sub_1CA2E4280("GraphMusicCurationFeatureExtractor - extractMusicCurationFeatures", 65, 2u, 0, 1, qword_1ED87D0F0, (uint64_t)v16);
  v3 = objc_msgSend(a1, sel_inferredUserLocales);
  sub_1CA85A694();
  sub_1CA30A268();
  v4 = sub_1CA85B984();

  v5 = sub_1CA309B5C(v4);
  swift_bridgeObjectRelease();
  v6 = sub_1CA2877D4(v5);
  swift_bridgeObjectRelease();
  if (qword_1ED872118 != -1)
    swift_once();
  v7 = sub_1CA85B348();
  __swift_project_value_buffer(v7, (uint64_t)qword_1ED87D010);
  swift_bridgeObjectRetain_n();
  v8 = sub_1CA85B330();
  v9 = sub_1CA85BAC8();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc();
    v11 = swift_slowAlloc();
    v17 = v11;
    *(_DWORD *)v10 = 136315138;
    swift_bridgeObjectRetain();
    v12 = sub_1CA85B990();
    v14 = v13;
    swift_bridgeObjectRelease();
    sub_1CA28712C(v12, v14, &v17);
    sub_1CA85BCF0();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1CA237000, v8, v9, "[MemoriesMusic] (GraphMusicCurationFeatureExtractor) Extracted inferredUserLanguageCodes: %s", v10, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1CAA4F27C](v11, -1, -1);
    MEMORY[0x1CAA4F27C](v10, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  sub_1CA85BB70();
  if (v1)
    swift_bridgeObjectRelease();
  sub_1CA2E0C94(0);
  swift_release();
  swift_release();
  return v6;
}

unint64_t sub_1CA30A268()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED8711E8;
  if (!qword_1ED8711E8)
  {
    v1 = sub_1CA85A694();
    result = MEMORY[0x1CAA4F1A4](MEMORY[0x1E0CB0E58], v1);
    atomic_store(result, (unint64_t *)&qword_1ED8711E8);
  }
  return result;
}

uint64_t sub_1CA30A2B0(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED872E90);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1CA30A2F0@<X0>(uint64_t *a1@<X8>)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  char *v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8711C0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v8 = MEMORY[0x1E0C80A78](v7).n128_u64[0];
  v10 = (char *)&v26 - v9;
  v11 = objc_msgSend(v2, sel_category, v8);
  if (v11)
  {
    v12 = v11;
    v13 = sub_1CA85B534();
    v15 = v14;

  }
  else
  {
    v13 = 0;
    v15 = 0;
  }
  v16 = objc_msgSend(v2, sel_lastSuccessfulFetchedDate);
  if (v16)
  {
    v17 = v16;
    sub_1CA85A574();

    v18 = sub_1CA85A5B0();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v10, 0, 1, v18);
  }
  else
  {
    v19 = sub_1CA85A5B0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v10, 1, 1, v19);
  }
  v20 = objc_msgSend(v2, sel_lastFailedFetchedDate);
  if (v20)
  {
    v21 = v20;
    sub_1CA85A574();

    v22 = sub_1CA85A5B0();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v6, 0, 1, v22);
  }
  else
  {
    v23 = sub_1CA85A5B0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v6, 1, 1, v23);
  }
  *a1 = v13;
  a1[1] = v15;
  v24 = type metadata accessor for CacherStatus(0);
  sub_1CA24EEF8((uint64_t)v10, (uint64_t)a1 + *(int *)(v24 + 20), &qword_1ED8711C0);
  return sub_1CA24EEF8((uint64_t)v6, (uint64_t)a1 + *(int *)(v24 + 24), &qword_1ED8711C0);
}

void sub_1CA30A4DC(_QWORD *a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int (*v21)(char *, uint64_t, uint64_t);
  void *v22;
  void *v23;
  uint64_t v24;
  id v25;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8711C0);
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v24 - v8;
  v10 = objc_msgSend(v2, sel_category);
  if (!v10)
  {
    if (!a1[1])
      goto LABEL_14;
    goto LABEL_12;
  }
  v11 = v10;
  v12 = sub_1CA85B534();
  v14 = v13;

  v15 = a1[1];
  if (!v15)
  {
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  if (v12 != *a1 || v15 != v14)
  {
    v17 = sub_1CA85C284();
    swift_bridgeObjectRelease();
    if ((v17 & 1) != 0)
      goto LABEL_14;
LABEL_12:
    sub_1CA30D47C();
    swift_allocError();
    swift_willThrow();
    return;
  }
  swift_bridgeObjectRelease();
LABEL_14:
  v25 = v2;
  v18 = type metadata accessor for CacherStatus(0);
  sub_1CA2684BC((uint64_t)a1 + *(int *)(v18 + 20), (uint64_t)v9, &qword_1ED8711C0);
  v19 = sub_1CA85A5B0();
  v20 = *(_QWORD *)(v19 - 8);
  v21 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48);
  v22 = 0;
  if (v21(v9, 1, v19) != 1)
  {
    v22 = (void *)sub_1CA85A508();
    (*(void (**)(char *, uint64_t))(v20 + 8))(v9, v19);
  }
  objc_msgSend(v25, sel_setLastSuccessfulFetchedDate_, v22);

  sub_1CA2684BC((uint64_t)a1 + *(int *)(v18 + 24), (uint64_t)v7, &qword_1ED8711C0);
  if (v21(v7, 1, v19) == 1)
  {
    v23 = 0;
  }
  else
  {
    v23 = (void *)sub_1CA85A508();
    (*(void (**)(char *, uint64_t))(v20 + 8))(v7, v19);
  }
  objc_msgSend(v25, sel_setLastFailedFetchedDate_, v23);

}

uint64_t CacherStatus.description.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  unsigned int (*v15)(char *, uint64_t, uint64_t);
  void (*v16)(char *, uint64_t);
  char *v17;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  unint64_t v22;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8711C0);
  v2 = MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v19 - v5;
  v7 = sub_1CA85A5B0();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v19 - v12;
  v21 = 0;
  v22 = 0xE000000000000000;
  sub_1CA85BEC4();
  v20 = v11;
  swift_bridgeObjectRetain();
  sub_1CA85B624();
  swift_bridgeObjectRelease();
  sub_1CA85B624();
  v14 = type metadata accessor for CacherStatus(0);
  sub_1CA2684BC(v0 + *(int *)(v14 + 20), (uint64_t)v6, &qword_1ED8711C0);
  v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
  if (v15(v6, 1, v7) == 1)
  {
    sub_1CA85A4C0();
    sub_1CA267BE8((uint64_t)v6, &qword_1ED8711C0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v13, v6, v7);
  }
  sub_1CA2DF104((unint64_t *)&qword_1ED8744B8, MEMORY[0x1E0CB08F0]);
  sub_1CA85C260();
  sub_1CA85B624();
  swift_bridgeObjectRelease();
  v16 = *(void (**)(char *, uint64_t))(v8 + 8);
  v16(v13, v7);
  sub_1CA85B624();
  sub_1CA2684BC(v0 + *(int *)(v14 + 24), (uint64_t)v4, &qword_1ED8711C0);
  if (v15(v4, 1, v7) == 1)
  {
    v17 = v20;
    sub_1CA85A4C0();
    sub_1CA267BE8((uint64_t)v4, &qword_1ED8711C0);
  }
  else
  {
    v17 = v20;
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v20, v4, v7);
  }
  sub_1CA85C260();
  sub_1CA85B624();
  swift_bridgeObjectRelease();
  v16(v17, v7);
  return v21;
}

uint64_t CacherStatusUpdater.init(cacheCategory:currentCacheStatus:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  _QWORD *v8;

  v8 = (_QWORD *)(a4 + *(int *)(type metadata accessor for CacherStatusUpdater(0) + 20));
  *v8 = a1;
  v8[1] = a2;
  return sub_1CA24EEF8(a3, a4, &qword_1ED874560);
}

uint64_t CacherStatusUpdater.write(to:succeeded:)(uint64_t a1, char a2)
{
  if ((a2 & 1) != 0)
    return CacherStatusUpdater.writeSuccess(to:)(a1);
  else
    return CacherStatusUpdater.writeFailure(to:)(a1);
}

uint64_t CacherStatusUpdater.writeSuccess(to:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t (*v25)(char *, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;

  v33 = a1;
  v2 = v1;
  v36 = sub_1CA85B2D0();
  v32 = *(_QWORD *)(v36 - 8);
  MEMORY[0x1E0C80A78](v36);
  v35 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED874560);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8711C0);
  v8 = MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v30 - v11;
  v13 = type metadata accessor for CacherStatus(0);
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (uint64_t *)((char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  v17 = (uint64_t *)(v1 + *(int *)(type metadata accessor for CacherStatusUpdater(0) + 20));
  v18 = *v17;
  v30 = v17[1];
  v31 = v18;
  swift_bridgeObjectRetain();
  sub_1CA85A5A4();
  v19 = sub_1CA85A5B0();
  v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56);
  v20(v12, 0, 1, v19);
  sub_1CA2684BC(v2, (uint64_t)v6, &qword_1ED874560);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v6, 1, v13) == 1)
  {
    sub_1CA267BE8((uint64_t)v6, &qword_1ED874560);
    v20(v10, 1, 1, v19);
  }
  else
  {
    sub_1CA2684BC((uint64_t)&v6[*(int *)(v13 + 24)], (uint64_t)v10, &qword_1ED8711C0);
    sub_1CA30B84C((uint64_t)v6);
  }
  v21 = v30;
  v22 = v31;
  *v16 = v31;
  v16[1] = v21;
  sub_1CA24EEF8((uint64_t)v12, (uint64_t)v16 + *(int *)(v13 + 20), &qword_1ED8711C0);
  sub_1CA24EEF8((uint64_t)v10, (uint64_t)v16 + *(int *)(v13 + 24), &qword_1ED8711C0);
  sub_1CA85BBE8();
  v23 = v36;
  v24 = v35;
  if (qword_1ED8723F0 != -1)
    swift_once();
  sub_1CA85B2C4();
  sub_1CA85B2A0();
  v25 = *(uint64_t (**)(char *, uint64_t))(v32 + 8);
  v26 = v25(v24, v23);
  MEMORY[0x1E0C80A78](v26);
  *(&v30 - 4) = v22;
  *(&v30 - 3) = v21;
  *(&v30 - 2) = v27;
  *(&v30 - 1) = (uint64_t)v16;
  v28 = v34;
  sub_1CA85BC30();
  if (!v28)
  {
    sub_1CA85BBDC();
    sub_1CA85B2C4();
    sub_1CA85B2A0();
    v25(v24, v36);
  }
  return sub_1CA30B84C((uint64_t)v16);
}

uint64_t CacherStatusUpdater.writeFailure(to:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(char *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v28 = a1;
  v30 = sub_1CA85B2D0();
  v27 = *(_QWORD *)(v30 - 8);
  MEMORY[0x1E0C80A78](v30);
  v3 = (char *)&v26 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED874560);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8711C0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for CacherStatus(0);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (uint64_t *)((char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = (uint64_t *)(v1 + *(int *)(type metadata accessor for CacherStatusUpdater(0) + 20));
  v15 = v14[1];
  v26 = *v14;
  sub_1CA2684BC(v1, (uint64_t)v6, &qword_1ED874560);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v6, 1, v10) == 1)
  {
    swift_bridgeObjectRetain();
    sub_1CA267BE8((uint64_t)v6, &qword_1ED874560);
    v16 = sub_1CA85A5B0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v9, 1, 1, v16);
  }
  else
  {
    sub_1CA2684BC((uint64_t)&v6[*(int *)(v10 + 20)], (uint64_t)v9, &qword_1ED8711C0);
    swift_bridgeObjectRetain();
    sub_1CA30B84C((uint64_t)v6);
  }
  v17 = (char *)v13 + *(int *)(v10 + 24);
  sub_1CA85A5A4();
  v18 = sub_1CA85A5B0();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v17, 0, 1, v18);
  v19 = v26;
  *v13 = v26;
  v13[1] = v15;
  sub_1CA24EEF8((uint64_t)v9, (uint64_t)v13 + *(int *)(v10 + 20), &qword_1ED8711C0);
  sub_1CA85BBE8();
  v20 = v30;
  if (qword_1ED8723F0 != -1)
    swift_once();
  sub_1CA85B2C4();
  sub_1CA85B2A0();
  v21 = *(uint64_t (**)(char *, uint64_t))(v27 + 8);
  v22 = v21(v3, v20);
  MEMORY[0x1E0C80A78](v22);
  *(&v26 - 4) = v19;
  *(&v26 - 3) = v15;
  *(&v26 - 2) = v23;
  *(&v26 - 1) = (uint64_t)v13;
  v24 = v29;
  sub_1CA85BC30();
  if (!v24)
  {
    sub_1CA85BBDC();
    sub_1CA85B2C4();
    sub_1CA85B2A0();
    v21(v3, v20);
  }
  return sub_1CA30B84C((uint64_t)v13);
}

id sub_1CA30B1D4()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CacherStatusEntry();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1CA30B204()
{
  uint64_t v0;

  v0 = *(_QWORD *)aCacherstatus_0;
  swift_bridgeObjectRetain();
  return v0;
}

BOOL _s11PhotosGraph12CacherStatusV2eeoiySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  uint64_t v25;
  uint64_t v26;
  _BYTE *v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  _BOOL8 result;
  uint64_t v32;
  uint64_t v33;
  unsigned int (*v34)(uint64_t, uint64_t, uint64_t);
  uint64_t v35;
  _BYTE *v36;
  void (*v37)(_BYTE *, uint64_t);
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _BYTE *v46;
  char v47;
  void (*v48)(_BYTE *, uint64_t);
  _BYTE v49[12];
  int v50;
  _BYTE *v51;
  uint64_t v52;
  _BYTE *v53;
  uint64_t v54;
  uint64_t v55;
  _BYTE *v56;
  _BYTE *v57;
  uint64_t v58;

  v4 = sub_1CA85A5B0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = &v49[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8744C0);
  v8 = MEMORY[0x1E0C80A78](v58);
  v10 = &v49[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v8);
  v12 = &v49[-v11];
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8711C0);
  v14 = MEMORY[0x1E0C80A78](v13);
  v15 = MEMORY[0x1E0C80A78](v14);
  v56 = &v49[-v16];
  v17 = MEMORY[0x1E0C80A78](v15);
  v57 = &v49[-v18];
  v19 = MEMORY[0x1E0C80A78](v17);
  v21 = &v49[-v20];
  v22 = MEMORY[0x1E0C80A78](v19);
  v24 = &v49[-v23];
  MEMORY[0x1E0C80A78](v22);
  v27 = &v49[-v26];
  v28 = a1[1];
  v29 = a2[1];
  if (!v28)
  {
    v55 = v25;
    if (v29)
      return 0;
    goto LABEL_8;
  }
  if (!v29)
    return 0;
  v55 = v25;
  if (*a1 == *a2 && v28 == v29 || (v30 = sub_1CA85C284(), result = 0, (v30 & 1) != 0))
  {
LABEL_8:
    v51 = v7;
    v53 = v10;
    v32 = type metadata accessor for CacherStatus(0);
    sub_1CA2684BC((uint64_t)a1 + *(int *)(v32 + 20), (uint64_t)v27, &qword_1ED8711C0);
    v52 = v32;
    sub_1CA2684BC((uint64_t)a2 + *(int *)(v32 + 20), (uint64_t)v24, &qword_1ED8711C0);
    v33 = (uint64_t)&v12[*(int *)(v58 + 48)];
    sub_1CA2684BC((uint64_t)v27, (uint64_t)v12, &qword_1ED8711C0);
    sub_1CA2684BC((uint64_t)v24, v33, &qword_1ED8711C0);
    v54 = v5;
    v34 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
    if (v34((uint64_t)v12, 1, v4) == 1)
    {
      sub_1CA267BE8((uint64_t)v24, &qword_1ED8711C0);
      sub_1CA267BE8((uint64_t)v27, &qword_1ED8711C0);
      if (v34(v33, 1, v4) == 1)
      {
        sub_1CA267BE8((uint64_t)v12, &qword_1ED8711C0);
LABEL_15:
        v38 = v52;
        v39 = (uint64_t)a1 + *(int *)(v52 + 24);
        v40 = v57;
        sub_1CA2684BC(v39, (uint64_t)v57, &qword_1ED8711C0);
        v41 = v56;
        sub_1CA2684BC((uint64_t)a2 + *(int *)(v38 + 24), (uint64_t)v56, &qword_1ED8711C0);
        v42 = (uint64_t)v53;
        v43 = (uint64_t)&v53[*(int *)(v58 + 48)];
        sub_1CA2684BC((uint64_t)v40, (uint64_t)v53, &qword_1ED8711C0);
        sub_1CA2684BC((uint64_t)v41, v43, &qword_1ED8711C0);
        if (v34(v42, 1, v4) == 1)
        {
          sub_1CA267BE8((uint64_t)v41, &qword_1ED8711C0);
          sub_1CA267BE8((uint64_t)v40, &qword_1ED8711C0);
          if (v34(v43, 1, v4) == 1)
          {
            sub_1CA267BE8(v42, &qword_1ED8711C0);
            return 1;
          }
          goto LABEL_20;
        }
        v44 = v55;
        sub_1CA2684BC(v42, v55, &qword_1ED8711C0);
        if (v34(v43, 1, v4) == 1)
        {
          sub_1CA267BE8((uint64_t)v41, &qword_1ED8711C0);
          sub_1CA267BE8((uint64_t)v40, &qword_1ED8711C0);
          (*(void (**)(uint64_t, uint64_t))(v54 + 8))(v44, v4);
LABEL_20:
          v35 = v42;
          goto LABEL_21;
        }
        v45 = v54;
        v46 = v51;
        (*(void (**)(_BYTE *, uint64_t, uint64_t))(v54 + 32))(v51, v43, v4);
        sub_1CA2DF104((unint64_t *)&unk_1ED8711B0, MEMORY[0x1E0CB08B8]);
        v47 = sub_1CA85B504();
        v48 = *(void (**)(_BYTE *, uint64_t))(v45 + 8);
        v48(v46, v4);
        sub_1CA267BE8((uint64_t)v41, &qword_1ED8711C0);
        sub_1CA267BE8((uint64_t)v40, &qword_1ED8711C0);
        v48((_BYTE *)v44, v4);
        sub_1CA267BE8(v42, &qword_1ED8711C0);
        return (v47 & 1) != 0;
      }
    }
    else
    {
      sub_1CA2684BC((uint64_t)v12, (uint64_t)v21, &qword_1ED8711C0);
      if (v34(v33, 1, v4) != 1)
      {
        v36 = v51;
        (*(void (**)(_BYTE *, uint64_t, uint64_t))(v54 + 32))(v51, v33, v4);
        sub_1CA2DF104((unint64_t *)&unk_1ED8711B0, MEMORY[0x1E0CB08B8]);
        v50 = sub_1CA85B504();
        v37 = *(void (**)(_BYTE *, uint64_t))(v54 + 8);
        v37(v36, v4);
        sub_1CA267BE8((uint64_t)v24, &qword_1ED8711C0);
        sub_1CA267BE8((uint64_t)v27, &qword_1ED8711C0);
        v37(v21, v4);
        sub_1CA267BE8((uint64_t)v12, &qword_1ED8711C0);
        if ((v50 & 1) == 0)
          return 0;
        goto LABEL_15;
      }
      sub_1CA267BE8((uint64_t)v24, &qword_1ED8711C0);
      sub_1CA267BE8((uint64_t)v27, &qword_1ED8711C0);
      (*(void (**)(_BYTE *, uint64_t))(v54 + 8))(v21, v4);
    }
    v35 = (uint64_t)v12;
LABEL_21:
    sub_1CA267BE8(v35, &qword_1ED8744C0);
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for CacherStatus(uint64_t a1)
{
  return sub_1CA30B818(a1, qword_1ED874548);
}

uint64_t type metadata accessor for CacherStatusUpdater(uint64_t a1)
{
  return sub_1CA30B818(a1, (uint64_t *)&unk_1ED874640);
}

uint64_t sub_1CA30B818(uint64_t a1, uint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1CA30B84C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for CacherStatus(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t *initializeBufferWithCopyOfBuffer for CacherStatus(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1CA85A5B0();
    v12 = *(_QWORD *)(v11 - 8);
    v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8711C0);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    v16 = *(int *)(a3 + 24);
    v17 = (char *)v4 + v16;
    v18 = (char *)a2 + v16;
    if (v13(v18, 1, v11))
    {
      v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8711C0);
      memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v17, v18, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v17, 0, 1, v11);
    }
  }
  return v4;
}

uint64_t destroy for CacherStatus(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t result;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_1CA85A5B0();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (!v7(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  v8 = a1 + *(int *)(a2 + 24);
  result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v7)(v8, 1, v5);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v8, v5);
  return result;
}

_QWORD *initializeWithCopy for CacherStatus(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(char *, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1CA85A5B0();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8711C0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  v14 = *(int *)(a3 + 24);
  v15 = (char *)a1 + v14;
  v16 = (char *)a2 + v14;
  if (v12(v16, 1, v10))
  {
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8711C0);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v15, v16, v10);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v15, 0, 1, v10);
  }
  return a1;
}

char *assignWithCopy for CacherStatus(char *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  int v18;
  int v19;
  uint64_t v20;

  *(_QWORD *)a1 = *a2;
  *((_QWORD *)a1 + 1) = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 20);
  v7 = &a1[v6];
  v8 = (char *)a2 + v6;
  v9 = sub_1CA85A5B0();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8711C0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
LABEL_7:
  v15 = *(int *)(a3 + 24);
  v16 = &a1[v15];
  v17 = (char *)a2 + v15;
  v18 = v11(&a1[v15], 1, v9);
  v19 = v11(v17, 1, v9);
  if (!v18)
  {
    if (!v19)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v16, v17, v9);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v16, v9);
    goto LABEL_12;
  }
  if (v19)
  {
LABEL_12:
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8711C0);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v16, v17, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v16, 0, 1, v9);
  return a1;
}

_OWORD *initializeWithTake for CacherStatus(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(char *, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1CA85A5B0();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  if (v11(v8, 1, v9))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8711C0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v13 = *(int *)(a3 + 24);
  v14 = (char *)a1 + v13;
  v15 = (char *)a2 + v13;
  if (v11(v15, 1, v9))
  {
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8711C0);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v14, v15, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v14, 0, 1, v9);
  }
  return a1;
}

char *assignWithTake for CacherStatus(char *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(char *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  int v19;
  int v20;
  uint64_t v21;

  v6 = a2[1];
  *(_QWORD *)a1 = *a2;
  *((_QWORD *)a1 + 1) = v6;
  swift_bridgeObjectRelease();
  v7 = *(int *)(a3 + 20);
  v8 = &a1[v7];
  v9 = (char *)a2 + v7;
  v10 = sub_1CA85A5B0();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
LABEL_6:
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8711C0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v8, v9, v10);
LABEL_7:
  v16 = *(int *)(a3 + 24);
  v17 = &a1[v16];
  v18 = (char *)a2 + v16;
  v19 = v12(&a1[v16], 1, v10);
  v20 = v12(v18, 1, v10);
  if (!v19)
  {
    if (!v20)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v17, v18, v10);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v17, v10);
    goto LABEL_12;
  }
  if (v20)
  {
LABEL_12:
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8711C0);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v17, v18, v10);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v17, 0, 1, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for CacherStatus()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CA30C100(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  int v5;
  uint64_t v9;

  if ((_DWORD)a2 == 2147483646)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    v5 = v4 - 1;
    if (v5 < 0)
      v5 = -1;
    return (v5 + 1);
  }
  else
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8711C0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v9);
  }
}

uint64_t storeEnumTagSinglePayload for CacherStatus()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CA30C198(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 2147483646)
  {
    *(_QWORD *)(result + 8) = a2;
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8711C0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

void sub_1CA30C210()
{
  unint64_t v0;

  sub_1CA2E3F7C(319, (unint64_t *)&qword_1ED8711C8, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t *initializeBufferWithCopyOfBuffer for CacherStatusUpdater(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int (*v17)(char *, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for CacherStatus(0);
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED874560);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      v11 = a2[1];
      *a1 = *a2;
      a1[1] = v11;
      v12 = *(int *)(v7 + 20);
      v13 = (char *)a1 + v12;
      v14 = (char *)a2 + v12;
      v15 = sub_1CA85A5B0();
      v16 = *(_QWORD *)(v15 - 8);
      v17 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
      swift_bridgeObjectRetain();
      if (v17(v14, 1, v15))
      {
        v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8711C0);
        memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v13, v14, v15);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
      }
      v19 = *(int *)(v7 + 24);
      v20 = (char *)a1 + v19;
      v21 = (char *)a2 + v19;
      if (v17((char *)a2 + v19, 1, v15))
      {
        v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8711C0);
        memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v20, v21, v15);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v20, 0, 1, v15);
      }
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    v23 = *(int *)(a3 + 20);
    v24 = (uint64_t *)((char *)a1 + v23);
    v25 = (uint64_t *)((char *)a2 + v23);
    v26 = v25[1];
    *v24 = *v25;
    v24[1] = v26;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for CacherStatusUpdater(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned int (*v6)(uint64_t, uint64_t, uint64_t);
  uint64_t v7;

  v2 = type metadata accessor for CacherStatus(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 1, v2))
  {
    swift_bridgeObjectRelease();
    v3 = a1 + *(int *)(v2 + 20);
    v4 = sub_1CA85A5B0();
    v5 = *(_QWORD *)(v4 - 8);
    v6 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
    if (!v6(v3, 1, v4))
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
    v7 = a1 + *(int *)(v2 + 24);
    if (!v6(v7, 1, v4))
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v7, v4);
  }
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for CacherStatusUpdater(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int (*v15)(char *, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v26;

  v6 = type metadata accessor for CacherStatus(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED874560);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    v26 = a3;
    v9 = a2[1];
    *a1 = *a2;
    a1[1] = v9;
    v10 = *(int *)(v6 + 20);
    v11 = (char *)a1 + v10;
    v12 = (char *)a2 + v10;
    v13 = sub_1CA85A5B0();
    v14 = *(_QWORD *)(v13 - 8);
    v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
    swift_bridgeObjectRetain();
    if (v15(v12, 1, v13))
    {
      v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8711C0);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v11, v12, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
    }
    v17 = *(int *)(v6 + 24);
    v18 = (char *)a1 + v17;
    v19 = (char *)a2 + v17;
    if (v15((char *)a2 + v17, 1, v13))
    {
      v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8711C0);
      memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v18, v19, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v18, 0, 1, v13);
    }
    a3 = v26;
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v21 = *(int *)(a3 + 20);
  v22 = (_QWORD *)((char *)a1 + v21);
  v23 = (_QWORD *)((char *)a2 + v21);
  v24 = v23[1];
  *v22 = *v23;
  v22[1] = v24;
  swift_bridgeObjectRetain();
  return a1;
}

char *assignWithCopy for CacherStatusUpdater(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int (*v16)(char *, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(char *, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  int v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v43;

  v6 = type metadata accessor for CacherStatus(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (v10)
    {
      sub_1CA30B84C((uint64_t)a1);
      goto LABEL_7;
    }
    v19 = a3;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v20 = *(int *)(v6 + 20);
    v21 = &a1[v20];
    v22 = &a2[v20];
    v23 = sub_1CA85A5B0();
    v24 = *(_QWORD *)(v23 - 8);
    v25 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v24 + 48);
    v26 = v25(v21, 1, v23);
    v27 = v25(v22, 1, v23);
    if (v26)
    {
      if (!v27)
      {
        (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v21, v22, v23);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
        goto LABEL_19;
      }
    }
    else
    {
      if (!v27)
      {
        (*(void (**)(char *, char *, uint64_t))(v24 + 24))(v21, v22, v23);
LABEL_19:
        v33 = *(int *)(v6 + 24);
        v34 = &a1[v33];
        v35 = &a2[v33];
        v36 = v25(&a1[v33], 1, v23);
        v37 = v25(v35, 1, v23);
        if (v36)
        {
          if (!v37)
          {
            (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v34, v35, v23);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v34, 0, 1, v23);
LABEL_25:
            a3 = v19;
            goto LABEL_26;
          }
        }
        else
        {
          if (!v37)
          {
            (*(void (**)(char *, char *, uint64_t))(v24 + 24))(v34, v35, v23);
            goto LABEL_25;
          }
          (*(void (**)(char *, uint64_t))(v24 + 8))(v34, v23);
        }
        v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8711C0);
        memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
        goto LABEL_25;
      }
      (*(void (**)(char *, uint64_t))(v24 + 8))(v21, v23);
    }
    v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8711C0);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    goto LABEL_19;
  }
  if (v10)
  {
LABEL_7:
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED874560);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    goto LABEL_26;
  }
  v43 = a3;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
  v11 = *(int *)(v6 + 20);
  v12 = &a1[v11];
  v13 = &a2[v11];
  v14 = sub_1CA85A5B0();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
  swift_bridgeObjectRetain();
  if (v16(v13, 1, v14))
  {
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8711C0);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v12, v13, v14);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  v28 = *(int *)(v6 + 24);
  v29 = &a1[v28];
  v30 = &a2[v28];
  if (v16(&a2[v28], 1, v14))
  {
    v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8711C0);
    memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v29, v30, v14);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v29, 0, 1, v14);
  }
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  a3 = v43;
LABEL_26:
  v39 = *(int *)(a3 + 20);
  v40 = &a1[v39];
  v41 = &a2[v39];
  *(_QWORD *)v40 = *(_QWORD *)v41;
  *((_QWORD *)v40 + 1) = *((_QWORD *)v41 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *initializeWithTake for CacherStatusUpdater(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(char *, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;

  v6 = type metadata accessor for CacherStatus(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED874560);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    *a1 = *a2;
    v9 = *(int *)(v6 + 20);
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = sub_1CA85A5B0();
    v13 = *(_QWORD *)(v12 - 8);
    v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
    if (v14(v11, 1, v12))
    {
      v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8711C0);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v10, v11, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
    }
    v16 = *(int *)(v6 + 24);
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    if (v14((char *)a2 + v16, 1, v12))
    {
      v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8711C0);
      memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v17, v18, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v17, 0, 1, v12);
    }
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  *(_OWORD *)((char *)a1 + *(int *)(a3 + 20)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 20));
  return a1;
}

char *assignWithTake for CacherStatusUpdater(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int (*v16)(char *, uint64_t, uint64_t);
  uint64_t v17;
  size_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(char *, uint64_t, uint64_t);
  int v28;
  int v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  int v44;
  int v45;

  v6 = type metadata accessor for CacherStatus(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (v10)
    {
      sub_1CA30B84C((uint64_t)a1);
      goto LABEL_7;
    }
    v21 = *((_QWORD *)a2 + 1);
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *((_QWORD *)a1 + 1) = v21;
    swift_bridgeObjectRelease();
    v22 = *(int *)(v6 + 20);
    v23 = &a1[v22];
    v24 = &a2[v22];
    v25 = sub_1CA85A5B0();
    v26 = *(_QWORD *)(v25 - 8);
    v27 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v26 + 48);
    v28 = v27(v23, 1, v25);
    v29 = v27(v24, 1, v25);
    if (v28)
    {
      if (!v29)
      {
        (*(void (**)(char *, char *, uint64_t))(v26 + 32))(v23, v24, v25);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
LABEL_21:
        v41 = *(int *)(v6 + 24);
        v42 = &a1[v41];
        v43 = &a2[v41];
        v44 = v27(&a1[v41], 1, v25);
        v45 = v27(v43, 1, v25);
        if (v44)
        {
          if (!v45)
          {
            (*(void (**)(char *, char *, uint64_t))(v26 + 32))(v42, v43, v25);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v42, 0, 1, v25);
            goto LABEL_17;
          }
        }
        else
        {
          if (!v45)
          {
            (*(void (**)(char *, char *, uint64_t))(v26 + 40))(v42, v43, v25);
            goto LABEL_17;
          }
          (*(void (**)(char *, uint64_t))(v26 + 8))(v42, v25);
        }
        v18 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED8711C0) - 8) + 64);
        v19 = v42;
        v20 = v43;
        goto LABEL_8;
      }
    }
    else
    {
      if (!v29)
      {
        (*(void (**)(char *, char *, uint64_t))(v26 + 40))(v23, v24, v25);
        goto LABEL_21;
      }
      (*(void (**)(char *, uint64_t))(v26 + 8))(v23, v25);
    }
    v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8711C0);
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
    goto LABEL_21;
  }
  if (v10)
  {
LABEL_7:
    v18 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED874560) - 8) + 64);
    v19 = a1;
    v20 = a2;
LABEL_8:
    memcpy(v19, v20, v18);
    goto LABEL_17;
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v11 = *(int *)(v6 + 20);
  v12 = &a1[v11];
  v13 = &a2[v11];
  v14 = sub_1CA85A5B0();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
  if (v16(v13, 1, v14))
  {
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8711C0);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v12, v13, v14);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  v30 = *(int *)(v6 + 24);
  v31 = &a1[v30];
  v32 = &a2[v30];
  if (v16(&a2[v30], 1, v14))
  {
    v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8711C0);
    memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v31, v32, v14);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v31, 0, 1, v14);
  }
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_17:
  v34 = *(int *)(a3 + 20);
  v35 = &a1[v34];
  v36 = (uint64_t *)&a2[v34];
  v38 = *v36;
  v37 = v36[1];
  *(_QWORD *)v35 = v38;
  *((_QWORD *)v35 + 1) = v37;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for CacherStatusUpdater()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CA30D034(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED874560);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for CacherStatusUpdater()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CA30D0C4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED874560);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  return result;
}

void sub_1CA30D144()
{
  unint64_t v0;

  sub_1CA2E3F7C(319, (unint64_t *)&unk_1ED874568, (void (*)(uint64_t))type metadata accessor for CacherStatus);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t type metadata accessor for CacherStatusEntry()
{
  return objc_opt_self();
}

id sub_1CA30D1E4(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  void *v11;
  id v12;
  id v13;
  id v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int (*v20)(char *, uint64_t, uint64_t);
  void *v21;
  void *v22;
  _QWORD v24[2];

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8711C0);
  v6 = MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)v24 - v9;
  v11 = (void *)objc_opt_self();
  v12 = a1;
  swift_bridgeObjectRetain();
  v13 = (id)sub_1CA85B510();
  swift_bridgeObjectRelease();
  v14 = objc_msgSend(v11, sel_entityForName_inManagedObjectContext_, v13, v12);

  if (v14)
  {
    v13 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for CacherStatusEntry()), sel_initWithEntity_insertIntoManagedObjectContext_, v14, v12);

    v15 = *(_QWORD *)(a2 + 8);
    v24[1] = v2;
    if (v15)
      v16 = (void *)sub_1CA85B510();
    else
      v16 = 0;
    objc_msgSend(v13, sel_setCategory_, v16);

    v17 = type metadata accessor for CacherStatus(0);
    sub_1CA2684BC(a2 + *(int *)(v17 + 20), (uint64_t)v10, &qword_1ED8711C0);
    v18 = sub_1CA85A5B0();
    v19 = *(_QWORD *)(v18 - 8);
    v20 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48);
    v21 = 0;
    if (v20(v10, 1, v18) != 1)
    {
      v21 = (void *)sub_1CA85A508();
      (*(void (**)(char *, uint64_t))(v19 + 8))(v10, v18);
    }
    objc_msgSend(v13, sel_setLastSuccessfulFetchedDate_, v21);

    sub_1CA2684BC(a2 + *(int *)(v17 + 24), (uint64_t)v8, &qword_1ED8711C0);
    if (v20(v8, 1, v18) == 1)
    {
      v22 = 0;
    }
    else
    {
      v22 = (void *)sub_1CA85A508();
      (*(void (**)(char *, uint64_t))(v19 + 8))(v8, v18);
    }
    objc_msgSend(v13, sel_setLastFailedFetchedDate_, v22);

  }
  else
  {
    sub_1CA29033C();
    swift_allocError();
    swift_willThrow();

  }
  return v13;
}

unint64_t sub_1CA30D47C()
{
  unint64_t result;

  result = qword_1EF94D380;
  if (!qword_1EF94D380)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8DBFF4, &type metadata for CacherStatusEntry.Error);
    atomic_store(result, (unint64_t *)&qword_1EF94D380);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for CacherStatusEntry.Error(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1CA30D500 + 4 * byte_1CA8DBE90[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1CA30D520 + 4 * byte_1CA8DBE95[v4]))();
}

_BYTE *sub_1CA30D500(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1CA30D520(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1CA30D528(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1CA30D530(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1CA30D538(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1CA30D540(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for CacherStatusEntry.Error()
{
  return &type metadata for CacherStatusEntry.Error;
}

unint64_t sub_1CA30D560()
{
  unint64_t result;

  result = qword_1EF94D388;
  if (!qword_1EF94D388)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8DBFCC, &type metadata for CacherStatusEntry.Error);
    atomic_store(result, (unint64_t *)&qword_1EF94D388);
  }
  return result;
}

void sub_1CA30D5A4()
{
  sub_1CA2CEE64();
}

unint64_t sub_1CA30D5B8(unsigned __int8 *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  int v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  int v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  unsigned int v52;
  unint64_t v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  NSObject *v58;
  os_log_type_t v59;
  uint8_t *v60;
  uint64_t v61;
  unint64_t v62;
  unint64_t v63;
  uint64_t v64;
  unint64_t v65;
  unint64_t v66;
  uint64_t v67;
  unint64_t v68;
  unint64_t v69;
  uint64_t v70;
  unint64_t v71;
  unint64_t v72;
  uint64_t v73;
  unint64_t v74;
  unint64_t v75;
  uint64_t v76;
  _QWORD *v77;
  unint64_t v78;
  unint64_t v79;
  _QWORD *v80;
  unint64_t v81;
  unint64_t v82;
  _QWORD *v83;
  unint64_t v84;
  unint64_t v85;
  _QWORD *v86;
  unint64_t v87;
  unint64_t v88;
  _QWORD *v89;
  _QWORD *v90;
  unint64_t v91;
  unint64_t v92;
  _QWORD *v93;
  unint64_t v94;
  unint64_t v95;
  _QWORD *v96;
  unint64_t v97;
  unint64_t v98;
  _QWORD *v99;
  unint64_t v100;
  unint64_t v101;
  _QWORD *v102;
  unint64_t v103;
  unint64_t v104;
  _QWORD *v105;
  uint64_t v106;
  _QWORD *v107;
  unint64_t v108;
  unint64_t v109;
  _QWORD *v110;
  unint64_t v111;
  unint64_t v112;
  char *v113;
  unint64_t v114;
  unint64_t v115;
  unint64_t v116;
  char *v117;
  unint64_t v118;
  unint64_t v119;
  char *v120;
  unint64_t v121;
  unint64_t v122;
  char *v123;
  unint64_t v124;
  unint64_t v125;
  unint64_t v126;
  unint64_t v127;
  char *v129;
  uint64_t v130;
  char *v131;
  char *v132;
  int v133;
  int v134;
  int v135;
  int v136;
  int v137;
  int v138;
  int v139;
  int v140;
  char *v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  char *v145;
  int v146;
  int v147;
  int v148;
  int v149;
  int v150;
  int v151;
  int v152;
  int v153;
  _QWORD *v154;

  v130 = sub_1CA85A160();
  v144 = *(_QWORD *)(v130 - 8);
  v2 = MEMORY[0x1E0C80A78](v130);
  v132 = (char *)&v129 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = MEMORY[0x1E0C80A78](v2);
  v131 = (char *)&v129 - v5;
  v6 = MEMORY[0x1E0C80A78](v4);
  v141 = (char *)&v129 - v7;
  v8 = MEMORY[0x1E0C80A78](v6);
  v129 = (char *)&v129 - v9;
  MEMORY[0x1E0C80A78](v8);
  v145 = (char *)&v129 - v10;
  v11 = *a1;
  v12 = a1[1];
  v13 = a1[2];
  v14 = a1[3];
  v15 = a1[4];
  v16 = a1[5];
  v17 = a1[7];
  v133 = a1[6];
  v134 = v17;
  v18 = a1[9];
  v135 = a1[8];
  v136 = v18;
  v19 = a1[11];
  v137 = a1[10];
  v138 = v19;
  v20 = a1[13];
  v139 = a1[12];
  v140 = v20;
  v21 = a1[14];
  v150 = a1[15];
  v151 = v21;
  v22 = a1[16];
  v23 = a1[17];
  v148 = a1[18];
  v149 = v22;
  v146 = a1[19];
  v147 = v23;
  v24 = a1[20];
  v25 = a1[21];
  v152 = a1[22];
  v153 = v25;
  v26 = *((_QWORD *)a1 + 5);
  v142 = *((_QWORD *)a1 + 6);
  v143 = v26;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED872760);
  v27 = swift_allocObject();
  *(_OWORD *)(v27 + 16) = xmmword_1CA8D4E40;
  *(_QWORD *)(v27 + 32) = 0x6172615079616C70;
  *(_QWORD *)(v27 + 40) = 0xEA0000000000736DLL;
  if (v11 == 1)
  {
    v28 = 2;
    v27 = (uint64_t)sub_1CA26BCE4((_QWORD *)1, 2, 1, (_QWORD *)v27);
    *(_QWORD *)(v27 + 16) = 2;
    *(_QWORD *)(v27 + 48) = 1701667182;
    *(_QWORD *)(v27 + 56) = 0xE400000000000000;
    if (!v12)
      goto LABEL_3;
  }
  else
  {
    v28 = 1;
    if (!v12)
    {
LABEL_3:
      if (!v13)
        goto LABEL_4;
LABEL_12:
      v36 = *(_QWORD *)(v27 + 16);
      v35 = *(_QWORD *)(v27 + 24);
      if (v36 >= v35 >> 1)
        v27 = (uint64_t)sub_1CA26BCE4((_QWORD *)(v35 > 1), v36 + 1, 1, (_QWORD *)v27);
      *(_QWORD *)(v27 + 16) = v36 + 1;
      v37 = v27 + 16 * v36;
      *(_QWORD *)(v37 + 32) = 0x6D614E6D75626C61;
      *(_QWORD *)(v37 + 40) = 0xE900000000000065;
      if (v14)
        goto LABEL_5;
LABEL_15:
      v31 = v24;
      goto LABEL_16;
    }
  }
  v33 = *(_QWORD *)(v27 + 24);
  if (v28 >= v33 >> 1)
    v27 = (uint64_t)sub_1CA26BCE4((_QWORD *)(v33 > 1), v28 + 1, 1, (_QWORD *)v27);
  *(_QWORD *)(v27 + 16) = v28 + 1;
  v34 = v27 + 16 * v28;
  *(_QWORD *)(v34 + 32) = 0x614E747369747261;
  *(_QWORD *)(v34 + 40) = 0xEA0000000000656DLL;
  if (v13)
    goto LABEL_12;
LABEL_4:
  if (!v14)
    goto LABEL_15;
LABEL_5:
  v30 = *(_QWORD *)(v27 + 16);
  v29 = *(_QWORD *)(v27 + 24);
  if (v30 >= v29 >> 1)
    v27 = (uint64_t)sub_1CA26BCE4((_QWORD *)(v29 > 1), v30 + 1, 1, (_QWORD *)v27);
  v31 = v24;
  *(_QWORD *)(v27 + 16) = v30 + 1;
  v32 = v27 + 16 * v30;
  *(_QWORD *)(v32 + 32) = 0x6D614E65726E6567;
  *(_QWORD *)(v32 + 40) = 0xEA00000000007365;
LABEL_16:
  if (v15)
  {
    v39 = *(_QWORD *)(v27 + 16);
    v38 = *(_QWORD *)(v27 + 24);
    if (v39 >= v38 >> 1)
      v27 = (uint64_t)sub_1CA26BCE4((_QWORD *)(v38 > 1), v39 + 1, 1, (_QWORD *)v27);
    *(_QWORD *)(v27 + 16) = v39 + 1;
    v40 = v27 + 16 * v39;
    *(_QWORD *)(v40 + 32) = 0xD000000000000010;
    *(_QWORD *)(v40 + 40) = 0x80000001CA88A6F0;
  }
  if (v16)
  {
    v42 = *(_QWORD *)(v27 + 16);
    v41 = *(_QWORD *)(v27 + 24);
    if (v42 >= v41 >> 1)
      v27 = (uint64_t)sub_1CA26BCE4((_QWORD *)(v41 > 1), v42 + 1, 1, (_QWORD *)v27);
    v43 = v130;
    *(_QWORD *)(v27 + 16) = v42 + 1;
    v44 = v27 + 16 * v42;
    *(_QWORD *)(v44 + 32) = 0x6E65726566657270;
    *(_QWORD *)(v44 + 40) = 0xEF65726F63536563;
  }
  else
  {
    v43 = v130;
  }
  v45 = v141;
  if (v133)
  {
    v47 = *(_QWORD *)(v27 + 16);
    v46 = *(_QWORD *)(v27 + 24);
    if (v47 >= v46 >> 1)
      v27 = (uint64_t)sub_1CA26BCE4((_QWORD *)(v46 > 1), v47 + 1, 1, (_QWORD *)v27);
    *(_QWORD *)(v27 + 16) = v47 + 1;
    v48 = v27 + 16 * v47;
    *(_QWORD *)(v48 + 32) = 0x6B726F77747261;
    *(_QWORD *)(v48 + 40) = 0xE700000000000000;
    if (!v134)
    {
LABEL_27:
      if (!v135)
        goto LABEL_28;
LABEL_40:
      v52 = objc_msgSend((id)objc_opt_self(), sel_musicCurationShouldUseOldStylePreviewURL);
      v54 = *(_QWORD *)(v27 + 16);
      v53 = *(_QWORD *)(v27 + 24);
      v55 = v54 + 1;
      if (v52)
      {
        if (v53 >> 1 <= v54)
          v27 = (uint64_t)sub_1CA26BCE4((_QWORD *)(v53 > 1), v54 + 1, 1, (_QWORD *)v27);
        *(_QWORD *)(v27 + 16) = v55;
        v56 = v27 + 16 * v54;
        *(_QWORD *)(v56 + 32) = 0x7377656976657270;
        *(_QWORD *)(v56 + 40) = 0xE800000000000000;
        if (qword_1ED872128 != -1)
          swift_once();
        v57 = sub_1CA85B348();
        __swift_project_value_buffer(v57, (uint64_t)qword_1ED87D028);
        v58 = sub_1CA85B330();
        v59 = sub_1CA85BAE0();
        if (os_log_type_enabled(v58, v59))
        {
          v60 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v60 = 0;
          _os_log_impl(&dword_1CA237000, v58, v59, "[MusicKitClient] Custom default 'musicCurationShouldUseOldStylePreviewURL' is set to true so MusicKitClient will fetch the old style preview url.", v60, 2u);
          MEMORY[0x1CAA4F27C](v60, -1, -1);
        }

        if (v136)
          goto LABEL_52;
      }
      else
      {
        if (v53 >> 1 <= v54)
          v27 = (uint64_t)sub_1CA26BCE4((_QWORD *)(v53 > 1), v54 + 1, 1, (_QWORD *)v27);
        *(_QWORD *)(v27 + 16) = v55;
        v61 = v27 + 16 * v54;
        strcpy((char *)(v61 + 32), "introPreview");
        *(_BYTE *)(v61 + 45) = 0;
        *(_WORD *)(v61 + 46) = -5120;
        if (v136)
          goto LABEL_52;
      }
LABEL_29:
      if (!v137)
        goto LABEL_30;
      goto LABEL_55;
    }
  }
  else if (!v134)
  {
    goto LABEL_27;
  }
  v50 = *(_QWORD *)(v27 + 16);
  v49 = *(_QWORD *)(v27 + 24);
  if (v50 >= v49 >> 1)
    v27 = (uint64_t)sub_1CA26BCE4((_QWORD *)(v49 > 1), v50 + 1, 1, (_QWORD *)v27);
  *(_QWORD *)(v27 + 16) = v50 + 1;
  v51 = v27 + 16 * v50;
  *(_QWORD *)(v51 + 32) = 7107189;
  *(_QWORD *)(v51 + 40) = 0xE300000000000000;
  if (v135)
    goto LABEL_40;
LABEL_28:
  if (!v136)
    goto LABEL_29;
LABEL_52:
  v63 = *(_QWORD *)(v27 + 16);
  v62 = *(_QWORD *)(v27 + 24);
  if (v63 >= v62 >> 1)
    v27 = (uint64_t)sub_1CA26BCE4((_QWORD *)(v62 > 1), v63 + 1, 1, (_QWORD *)v27);
  *(_QWORD *)(v27 + 16) = v63 + 1;
  v64 = v27 + 16 * v63;
  *(_QWORD *)(v64 + 32) = 0x636F4C6F69647561;
  *(_QWORD *)(v64 + 40) = 0xEB00000000656C61;
  if (!v137)
  {
LABEL_30:
    if (!v138)
      goto LABEL_31;
    goto LABEL_58;
  }
LABEL_55:
  v66 = *(_QWORD *)(v27 + 16);
  v65 = *(_QWORD *)(v27 + 24);
  if (v66 >= v65 >> 1)
    v27 = (uint64_t)sub_1CA26BCE4((_QWORD *)(v65 > 1), v66 + 1, 1, (_QWORD *)v27);
  *(_QWORD *)(v27 + 16) = v66 + 1;
  v67 = v27 + 16 * v66;
  *(_QWORD *)(v67 + 32) = 0x73676174696E75;
  *(_QWORD *)(v67 + 40) = 0xE700000000000000;
  if (!v138)
  {
LABEL_31:
    if (!v139)
      goto LABEL_32;
    goto LABEL_61;
  }
LABEL_58:
  v69 = *(_QWORD *)(v27 + 16);
  v68 = *(_QWORD *)(v27 + 24);
  if (v69 >= v68 >> 1)
    v27 = (uint64_t)sub_1CA26BCE4((_QWORD *)(v68 > 1), v69 + 1, 1, (_QWORD *)v27);
  *(_QWORD *)(v27 + 16) = v69 + 1;
  v70 = v27 + 16 * v69;
  strcpy((char *)(v70 + 32), "contentRating");
  *(_WORD *)(v70 + 46) = -4864;
  if (!v139)
  {
LABEL_32:
    if (!v140)
      goto LABEL_67;
    goto LABEL_64;
  }
LABEL_61:
  v72 = *(_QWORD *)(v27 + 16);
  v71 = *(_QWORD *)(v27 + 24);
  if (v72 >= v71 >> 1)
    v27 = (uint64_t)sub_1CA26BCE4((_QWORD *)(v71 > 1), v72 + 1, 1, (_QWORD *)v27);
  *(_QWORD *)(v27 + 16) = v72 + 1;
  v73 = v27 + 16 * v72;
  *(_QWORD *)(v73 + 32) = 0xD00000000000001ELL;
  *(_QWORD *)(v73 + 40) = 0x80000001CA88A710;
  if (v140)
  {
LABEL_64:
    v75 = *(_QWORD *)(v27 + 16);
    v74 = *(_QWORD *)(v27 + 24);
    if (v75 >= v74 >> 1)
      v27 = (uint64_t)sub_1CA26BCE4((_QWORD *)(v74 > 1), v75 + 1, 1, (_QWORD *)v27);
    *(_QWORD *)(v27 + 16) = v75 + 1;
    v76 = v27 + 16 * v75;
    *(_QWORD *)(v76 + 32) = 0x50746E65746E6F63;
    *(_QWORD *)(v76 + 40) = 0xEF72656469766F72;
  }
LABEL_67:
  if (!v151)
  {
    v77 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    if (!v150)
      goto LABEL_78;
    goto LABEL_73;
  }
  v77 = sub_1CA26BCE4(0, 1, 1, MEMORY[0x1E0DEE9D8]);
  v79 = v77[2];
  v78 = v77[3];
  if (v79 >= v78 >> 1)
    v77 = sub_1CA26BCE4((_QWORD *)(v78 > 1), v79 + 1, 1, v77);
  v77[2] = v79 + 1;
  v80 = &v77[2 * v79];
  v80[4] = 0x65636E656C6176;
  v80[5] = 0xE700000000000000;
  if (v150)
  {
LABEL_73:
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v77 = sub_1CA26BCE4(0, v77[2] + 1, 1, v77);
    v82 = v77[2];
    v81 = v77[3];
    if (v82 >= v81 >> 1)
      v77 = sub_1CA26BCE4((_QWORD *)(v81 > 1), v82 + 1, 1, v77);
    v77[2] = v82 + 1;
    v83 = &v77[2 * v82];
    v83[4] = 0x6C6173756F7261;
    v83[5] = 0xE700000000000000;
  }
LABEL_78:
  if (!v149)
  {
    if (!v147)
      goto LABEL_91;
    goto LABEL_86;
  }
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v77 = sub_1CA26BCE4(0, v77[2] + 1, 1, v77);
  v85 = v77[2];
  v84 = v77[3];
  if (v85 >= v84 >> 1)
    v77 = sub_1CA26BCE4((_QWORD *)(v84 > 1), v85 + 1, 1, v77);
  v77[2] = v85 + 1;
  v86 = &v77[2 * v85];
  v86[4] = 0x65546C6175736976;
  v86[5] = 0xEB000000006F706DLL;
  if (v147)
  {
LABEL_86:
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v77 = sub_1CA26BCE4(0, v77[2] + 1, 1, v77);
    v88 = v77[2];
    v87 = v77[3];
    if (v88 >= v87 >> 1)
      v77 = sub_1CA26BCE4((_QWORD *)(v87 > 1), v88 + 1, 1, v77);
    v77[2] = v88 + 1;
    v89 = &v77[2 * v88];
    v89[4] = 0x6E696F5074697865;
    v89[5] = 0xEA00000000007374;
  }
LABEL_91:
  if (v148)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v77 = sub_1CA26BCE4(0, v77[2] + 1, 1, v77);
    v95 = v77[2];
    v94 = v77[3];
    if (v95 >= v94 >> 1)
      v77 = sub_1CA26BCE4((_QWORD *)(v94 > 1), v95 + 1, 1, v77);
    v77[2] = v95 + 1;
    v96 = &v77[2 * v95];
    v96[4] = 0x696F507972746E65;
    v96[5] = 0xEB0000000073746ELL;
    if (!v146)
    {
LABEL_93:
      if (v31)
        goto LABEL_94;
LABEL_108:
      v90 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      if (!v153)
        goto LABEL_114;
      goto LABEL_109;
    }
  }
  else if (!v146)
  {
    goto LABEL_93;
  }
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v77 = sub_1CA26BCE4(0, v77[2] + 1, 1, v77);
  v98 = v77[2];
  v97 = v77[3];
  if (v98 >= v97 >> 1)
    v77 = sub_1CA26BCE4((_QWORD *)(v97 > 1), v98 + 1, 1, v77);
  v77[2] = v98 + 1;
  v99 = &v77[2 * v98];
  v99[4] = 0x6576456F65646976;
  v99[5] = 0xEB0000000073746ELL;
  if (!v31)
    goto LABEL_108;
LABEL_94:
  v90 = sub_1CA26BCE4(0, 1, 1, MEMORY[0x1E0DEE9D8]);
  v92 = v90[2];
  v91 = v90[3];
  if (v92 >= v91 >> 1)
    v90 = sub_1CA26BCE4((_QWORD *)(v91 > 1), v92 + 1, 1, v90);
  v90[2] = v92 + 1;
  v93 = &v90[2 * v92];
  v93[4] = 0x7373656E64756F6CLL;
  v93[5] = 0xE800000000000000;
  if (v153)
  {
LABEL_109:
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v90 = sub_1CA26BCE4(0, v90[2] + 1, 1, v90);
    v101 = v90[2];
    v100 = v90[3];
    if (v101 >= v100 >> 1)
      v90 = sub_1CA26BCE4((_QWORD *)(v100 > 1), v101 + 1, 1, v90);
    v90[2] = v101 + 1;
    v102 = &v90[2 * v101];
    v102[4] = 0x796772656E65;
    v102[5] = 0xE600000000000000;
  }
LABEL_114:
  if (v152)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v90 = sub_1CA26BCE4(0, v90[2] + 1, 1, v90);
    v104 = v90[2];
    v103 = v90[3];
    if (v104 >= v103 >> 1)
      v90 = sub_1CA26BCE4((_QWORD *)(v103 > 1), v104 + 1, 1, v90);
    v90[2] = v104 + 1;
    v105 = &v90[2 * v104];
    v105[4] = 0x65636E656C6176;
    v105[5] = 0xE700000000000000;
  }
  v106 = v144;
  if ((v151 | v150 | v149 | v147 | v148 | v146) == 1)
  {
    v107 = sub_1CA26BCE4(0, 1, 1, MEMORY[0x1E0DEE9D8]);
    v109 = v107[2];
    v108 = v107[3];
    if (v109 >= v108 >> 1)
      v107 = sub_1CA26BCE4((_QWORD *)(v108 > 1), v109 + 1, 1, v107);
    v107[2] = v109 + 1;
    v110 = &v107[2 * v109];
    v110[4] = 0x612D6C6D78656C66;
    v110[5] = 0xEF736973796C616ELL;
  }
  else
  {
    v107 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  if ((v31 | v153 | v152) == 1)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v107 = sub_1CA26BCE4(0, v107[2] + 1, 1, v107);
    v112 = v107[2];
    v111 = v107[3];
    if (v112 >= v111 >> 1)
      v107 = sub_1CA26BCE4((_QWORD *)(v111 > 1), v112 + 1, 1, v107);
    v107[2] = v112 + 1;
    v113 = (char *)&v107[2 * v112];
    strcpy(v113 + 32, "audio-analysis");
    v113[47] = -18;
  }
  if (!*(_QWORD *)(v27 + 16))
  {
    swift_bridgeObjectRelease();
    v114 = MEMORY[0x1E0DEE9D8];
    if (v77[2])
      goto LABEL_135;
LABEL_151:
    swift_bridgeObjectRelease();
    if (v90[2])
      goto LABEL_140;
    goto LABEL_152;
  }
  v154 = (_QWORD *)v27;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED872270);
  sub_1CA282410();
  sub_1CA85B4D4();
  swift_bridgeObjectRelease();
  sub_1CA85A154();
  swift_bridgeObjectRelease();
  v114 = sub_1CA26D5EC(0, 1, 1, MEMORY[0x1E0DEE9D8]);
  v116 = *(_QWORD *)(v114 + 16);
  v115 = *(_QWORD *)(v114 + 24);
  if (v116 >= v115 >> 1)
    v114 = sub_1CA26D5EC(v115 > 1, v116 + 1, 1, v114);
  *(_QWORD *)(v114 + 16) = v116 + 1;
  (*(void (**)(unint64_t, char *, uint64_t))(v106 + 32))(v114+ ((*(unsigned __int8 *)(v106 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v106 + 80))+ *(_QWORD *)(v106 + 72) * v116, v145, v43);
  if (!v77[2])
    goto LABEL_151;
LABEL_135:
  v154 = v77;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED872270);
  sub_1CA282410();
  sub_1CA85B4D4();
  swift_bridgeObjectRelease();
  v117 = v129;
  sub_1CA85A154();
  swift_bridgeObjectRelease();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v114 = sub_1CA26D5EC(0, *(_QWORD *)(v114 + 16) + 1, 1, v114);
  v119 = *(_QWORD *)(v114 + 16);
  v118 = *(_QWORD *)(v114 + 24);
  if (v119 >= v118 >> 1)
    v114 = sub_1CA26D5EC(v118 > 1, v119 + 1, 1, v114);
  *(_QWORD *)(v114 + 16) = v119 + 1;
  (*(void (**)(unint64_t, char *, uint64_t))(v106 + 32))(v114+ ((*(unsigned __int8 *)(v106 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v106 + 80))+ *(_QWORD *)(v106 + 72) * v119, v117, v43);
  if (v90[2])
  {
LABEL_140:
    v154 = v90;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED872270);
    sub_1CA282410();
    sub_1CA85B4D4();
    swift_bridgeObjectRelease();
    sub_1CA85A154();
    swift_bridgeObjectRelease();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v114 = sub_1CA26D5EC(0, *(_QWORD *)(v114 + 16) + 1, 1, v114);
    v120 = v131;
    v122 = *(_QWORD *)(v114 + 16);
    v121 = *(_QWORD *)(v114 + 24);
    if (v122 >= v121 >> 1)
      v114 = sub_1CA26D5EC(v121 > 1, v122 + 1, 1, v114);
    *(_QWORD *)(v114 + 16) = v122 + 1;
    (*(void (**)(unint64_t, char *, uint64_t))(v106 + 32))(v114+ ((*(unsigned __int8 *)(v106 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v106 + 80))+ *(_QWORD *)(v106 + 72) * v122, v45, v43);
    if (v107[2])
      goto LABEL_145;
LABEL_153:
    swift_bridgeObjectRelease();
    v123 = v132;
    goto LABEL_154;
  }
LABEL_152:
  swift_bridgeObjectRelease();
  v120 = v131;
  if (!v107[2])
    goto LABEL_153;
LABEL_145:
  v154 = v107;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED872270);
  sub_1CA282410();
  sub_1CA85B4D4();
  swift_bridgeObjectRelease();
  sub_1CA85A154();
  swift_bridgeObjectRelease();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v114 = sub_1CA26D5EC(0, *(_QWORD *)(v114 + 16) + 1, 1, v114);
  v123 = v132;
  v125 = *(_QWORD *)(v114 + 16);
  v124 = *(_QWORD *)(v114 + 24);
  if (v125 >= v124 >> 1)
    v114 = sub_1CA26D5EC(v124 > 1, v125 + 1, 1, v114);
  *(_QWORD *)(v114 + 16) = v125 + 1;
  (*(void (**)(unint64_t, char *, uint64_t))(v106 + 32))(v114+ ((*(unsigned __int8 *)(v106 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v106 + 80))+ *(_QWORD *)(v106 + 72) * v125, v120, v43);
LABEL_154:
  sub_1CA85A154();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v114 = sub_1CA26D5EC(0, *(_QWORD *)(v114 + 16) + 1, 1, v114);
  v127 = *(_QWORD *)(v114 + 16);
  v126 = *(_QWORD *)(v114 + 24);
  if (v127 >= v126 >> 1)
    v114 = sub_1CA26D5EC(v126 > 1, v127 + 1, 1, v114);
  *(_QWORD *)(v114 + 16) = v127 + 1;
  (*(void (**)(unint64_t, char *, uint64_t))(v106 + 32))(v114+ ((*(unsigned __int8 *)(v106 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v106 + 80))+ *(_QWORD *)(v106 + 72) * v127, v123, v43);
  return v114;
}

uint64_t sub_1CA30E910@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  void (*v19)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  _QWORD v25[3];
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v25[2] = a1;
  v3 = sub_1CA85A6A0();
  v26 = *(_QWORD *)(v3 - 8);
  v27 = v3;
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = sub_1CA85A7FC();
  v6 = *(_QWORD *)(v28 - 8);
  MEMORY[0x1E0C80A78](v28);
  v8 = (char *)v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8744D8);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94D390);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1CA85A2A4();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)v25 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((sub_1CA30EBFC() & 1) != 0)
  {
    v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
    v25[1] = a2;
    v19(v14, 1, 1, v28);
    v20 = sub_1CA85A850();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v11, 1, 1, v20);
    sub_1CA85A28C();
    v22 = v26;
    v21 = v27;
    (*(void (**)(char *, _QWORD, uint64_t))(v26 + 104))(v5, *MEMORY[0x1E0CB0EF8], v27);
    sub_1CA85A6AC();
    (*(void (**)(char *, uint64_t))(v22 + 8))(v5, v21);
    sub_1CA85A7A8();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v28);
    return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  }
  else
  {
    v24 = sub_1CA85A5B0();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(a2, 1, 1, v24);
  }
}

uint64_t sub_1CA30EBFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  void (*v9)(char *, uint64_t);
  uint64_t v10;
  uint64_t v12;

  v1 = sub_1CA85A5B0();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = MEMORY[0x1E0C80A78](v1);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v12 - v6;
  sub_1CA85A4C0();
  v8 = sub_1CA85A58C();
  v9 = *(void (**)(char *, uint64_t))(v2 + 8);
  v9(v7, v1);
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v5, v0, v1);
  if (v8 == 1)
  {
    sub_1CA85A4D8();
    v10 = sub_1CA85A58C();
    v9(v7, v1);
    v9(v5, v1);
    if (v10 == 1)
      return 1;
  }
  else
  {
    v9(v5, v1);
  }
  return 0;
}

uint64_t sub_1CA30ED14@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int (*v29)(uint64_t, uint64_t, uint64_t);
  uint64_t v30;
  char *v31;
  char *v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;

  v36 = a1;
  v35 = sub_1CA85A6A0();
  v1 = *(_QWORD *)(v35 - 8);
  MEMORY[0x1E0C80A78](v35);
  v3 = (char *)&v31 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1CA85A7FC();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8711C0);
  v9 = MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x1E0C80A78](v9);
  v14 = (char *)&v31 - v13;
  v15 = MEMORY[0x1E0C80A78](v12);
  v17 = (char *)&v31 - v16;
  MEMORY[0x1E0C80A78](v15);
  v19 = (char *)&v31 - v18;
  if ((sub_1CA30EBFC() & 1) != 0)
  {
    v31 = v7;
    v32 = v14;
    v33 = v11;
    v34 = v17;
    v20 = v35;
    v21 = v36;
    if ((sub_1CA30EBFC() & 1) != 0)
    {
      (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0CB0EF8], v20);
      v22 = v31;
      sub_1CA85A6AC();
      (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v20);
      sub_1CA85A6C4();
      (*(void (**)(char *, uint64_t))(v5 + 8))(v22, v4);
      v23 = sub_1CA85A5B0();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v19, 0, 1, v23);
    }
    else
    {
      v23 = sub_1CA85A5B0();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v19, 1, 1, v23);
    }
    v26 = (uint64_t)v34;
    v27 = (uint64_t)v32;
    sub_1CA2684BC((uint64_t)v19, (uint64_t)v32, &qword_1ED8711C0);
    sub_1CA85A5B0();
    v28 = *(_QWORD *)(v23 - 8);
    v29 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v28 + 48);
    if (v29(v27, 1, v23) == 1)
    {
      sub_1CA267BE8(v27, &qword_1ED8711C0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v28 + 56))(v26, 1, 1, v23);
    }
    else
    {
      sub_1CA30E910(1, v26);
      (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v27, v23);
    }
    v30 = (uint64_t)v33;
    sub_1CA2684BC(v26, (uint64_t)v33, &qword_1ED8711C0);
    if (v29(v30, 1, v23) == 1)
    {
      sub_1CA267BE8(v26, &qword_1ED8711C0);
      sub_1CA267BE8((uint64_t)v19, &qword_1ED8711C0);
      sub_1CA267BE8(v30, &qword_1ED8711C0);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v28 + 56))(v21, 1, 1, v23);
    }
    else
    {
      sub_1CA85A4FC();
      sub_1CA267BE8(v26, &qword_1ED8711C0);
      sub_1CA267BE8((uint64_t)v19, &qword_1ED8711C0);
      (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v30, v23);
      return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v28 + 56))(v21, 0, 1, v23);
    }
  }
  else
  {
    v24 = sub_1CA85A5B0();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v36, 1, 1, v24);
  }
}

uint64_t sub_1CA30F0AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t (*v23)(char *, uint64_t, uint64_t);
  int v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(char *, uint64_t);
  char *v36;
  void (*v37)(char *, uint64_t);
  uint64_t v38;
  uint64_t v39;
  void (*v40)(char *, uint64_t, uint64_t);
  char *v41;
  char *v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;

  v52 = a1;
  v53 = a2;
  v47 = sub_1CA85A6A0();
  v50 = *(_QWORD *)(v47 - 8);
  MEMORY[0x1E0C80A78](v47);
  v51 = (char *)&v40 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = sub_1CA85A7FC();
  v4 = *(_QWORD *)(v48 - 8);
  MEMORY[0x1E0C80A78](v48);
  v49 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1CA85A2A4();
  v46 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8744D8);
  v10 = MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x1E0C80A78](v10);
  v15 = (char *)&v40 - v14;
  MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v40 - v16;
  v18 = sub_1CA85A850();
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  v21 = (char *)&v40 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((sub_1CA30EBFC() & 1) != 0)
  {
    v42 = v12;
    v43 = v4;
    v22 = v50;
    v44 = v8;
    v45 = v6;
    sub_1CA2684BC(v52, (uint64_t)v15, &qword_1ED8744D8);
    v23 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v19 + 48);
    v24 = v23(v15, 1, v18);
    v25 = v51;
    v26 = v49;
    if (v24 == 1)
    {
      sub_1CA85A814();
      sub_1CA267BE8((uint64_t)v15, &qword_1ED8744D8);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v17, v15, v18);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v17, 0, 1, v18);
    }
    if (v23(v17, 1, v18) == 1)
    {
      sub_1CA267BE8((uint64_t)v17, &qword_1ED8744D8);
      v29 = sub_1CA85A5B0();
      v30 = *(_QWORD *)(v29 - 8);
      v31 = v53;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v30 + 16))(v53, v2, v29);
      return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v30 + 56))(v31, 0, 1, v29);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v21, v17, v18);
      v52 = v18;
      v32 = *MEMORY[0x1E0CB0EF8];
      v41 = v21;
      v33 = v22;
      v40 = *(void (**)(char *, uint64_t, uint64_t))(v22 + 104);
      v34 = v47;
      v40(v25, v32, v47);
      sub_1CA85A6AC();
      v35 = *(void (**)(char *, uint64_t))(v33 + 8);
      v35(v25, v34);
      v36 = v44;
      sub_1CA85A6F4();
      v37 = *(void (**)(char *, uint64_t))(v43 + 8);
      v38 = v19;
      v39 = v48;
      v37(v26, v48);
      sub_1CA85A814();
      sub_1CA85A298();
      v40(v25, v32, v34);
      sub_1CA85A6AC();
      v35(v25, v34);
      sub_1CA85A79C();
      v37(v26, v39);
      (*(void (**)(char *, uint64_t))(v46 + 8))(v36, v45);
      return (*(uint64_t (**)(char *, uint64_t))(v38 + 8))(v41, v52);
    }
  }
  else
  {
    v27 = sub_1CA85A5B0();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v53, 1, 1, v27);
  }
}

_QWORD *sub_1CA30F4C4(uint64_t a1, uint64_t *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v7;
    *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
    v8 = a3[6];
    v9 = a1 + v8;
    v10 = (uint64_t)a2 + v8;
    v11 = sub_1CA85A5B0();
    v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    v12((uint64_t)v4 + a3[7], (uint64_t)a2 + a3[7], v11);
    v12((uint64_t)v4 + a3[8], (uint64_t)a2 + a3[8], v11);
    v12((uint64_t)v4 + a3[9], (uint64_t)a2 + a3[9], v11);
  }
  return v4;
}

uint64_t sub_1CA30F5B4(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  void (*v7)(uint64_t, uint64_t);

  swift_bridgeObjectRelease();
  v4 = a1 + a2[6];
  v5 = sub_1CA85A5B0();
  v7 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
  v7(v4, v5);
  v7(a1 + a2[7], v5);
  v7(a1 + a2[8], v5);
  return ((uint64_t (*)(uint64_t, uint64_t))v7)(a1 + a2[9], v5);
}

uint64_t sub_1CA30F654(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  v7 = a3[6];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1CA85A5B0();
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  v11(a1 + a3[7], a2 + a3[7], v10);
  v11(a1 + a3[8], a2 + a3[8], v10);
  v11(a1 + a3[9], a2 + a3[9], v10);
  return a1;
}

char *sub_1CA30F718(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
  *((_QWORD *)a1 + 3) = *((_QWORD *)a2 + 3);
  v6 = a3[6];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_1CA85A5B0();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24);
  v10(v7, v8, v9);
  v10(&a1[a3[7]], &a2[a3[7]], v9);
  v10(&a1[a3[8]], &a2[a3[8]], v9);
  v10(&a1[a3[9]], &a2[a3[9]], v9);
  return a1;
}

char *sub_1CA30F7F4(char *a1, char *a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);

  v6 = *((_OWORD *)a2 + 1);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *((_OWORD *)a1 + 1) = v6;
  v7 = a3[6];
  v8 = &a1[v7];
  v9 = &a2[v7];
  v10 = sub_1CA85A5B0();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32);
  v11(v8, v9, v10);
  v11(&a1[a3[7]], &a2[a3[7]], v10);
  v11(&a1[a3[8]], &a2[a3[8]], v10);
  v11(&a1[a3[9]], &a2[a3[9]], v10);
  return a1;
}

uint64_t sub_1CA30F8A8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  v7 = a3[6];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1CA85A5B0();
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40);
  v11(v8, v9, v10);
  v11(a1 + a3[7], a2 + a3[7], v10);
  v11(a1 + a3[8], a2 + a3[8], v10);
  v11(a1 + a3[9], a2 + a3[9], v10);
  return a1;
}

uint64_t sub_1CA30F96C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CA30F978(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1CA85A5B0();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v8);
  }
}

uint64_t sub_1CA30F9F4()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CA30FA00(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_1CA85A5B0();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for PublicEventTimeAndLocation()
{
  uint64_t result;

  result = qword_1EF94D3F8;
  if (!qword_1EF94D3F8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1CA30FAB0()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1CA85A5B0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1CA30FB30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>, double a5@<D1>)
{
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  char *v14;
  unint64_t v15;
  int *v16;
  void (*v17)(uint64_t, uint64_t, uint64_t);
  void (*v18)(uint64_t, uint64_t);
  uint64_t v20;
  unint64_t v21;

  v10 = sub_1CA85A5B0();
  v11 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870];
  v12 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = 0;
  v21 = 0xE000000000000000;
  sub_1CA85B93C();
  sub_1CA85B624();
  sub_1CA85B93C();
  sub_1CA85B624();
  sub_1CA23CC98((unint64_t *)&qword_1ED8744B8, v11, MEMORY[0x1E0CB08F0]);
  sub_1CA85C260();
  sub_1CA85B624();
  swift_bridgeObjectRelease();
  sub_1CA85B624();
  sub_1CA85C260();
  sub_1CA85B624();
  swift_bridgeObjectRelease();
  v15 = v21;
  *(_QWORD *)a3 = v20;
  *(_QWORD *)(a3 + 8) = v15;
  *(double *)(a3 + 16) = a4;
  *(double *)(a3 + 24) = a5;
  v16 = (int *)type metadata accessor for PublicEventTimeAndLocation();
  v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16);
  v17(a3 + v16[6], a1, v10);
  v17(a3 + v16[7], a2, v10);
  if (qword_1EF94A308 != -1)
    swift_once();
  sub_1CA85A4FC();
  sub_1CA85A4FC();
  v18 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
  v18(a2, v10);
  v18(a1, v10);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v12 + 32))(a3 + v16[9], v14, v10);
}

void sub_1CA30FD64()
{
  qword_1EF94D398 = 0x409C200000000000;
}

uint64_t sub_1CA30FD78()
{
  sub_1CA85C368();
  swift_bridgeObjectRetain();
  sub_1CA85B4B0();
  swift_bridgeObjectRelease();
  return sub_1CA85C3B0();
}

uint64_t sub_1CA30FDD0()
{
  swift_bridgeObjectRetain();
  sub_1CA85B4B0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1CA30FE14()
{
  sub_1CA85C368();
  swift_bridgeObjectRetain();
  sub_1CA85B4B0();
  swift_bridgeObjectRelease();
  return sub_1CA85C3B0();
}

uint64_t sub_1CA30FE68()
{
  return sub_1CA23CC98(&qword_1EF94D440, (uint64_t (*)(uint64_t))type metadata accessor for PublicEventTimeAndLocation, (uint64_t)&unk_1CA8DC090);
}

uint64_t sub_1CA30FE94()
{
  return MEMORY[0x1E0DEE9E0];
}

uint64_t static PhotosChallengeEvaluableAlgorithm.debug(questions:context:)()
{
  return MEMORY[0x1E0DEE9E0];
}

uint64_t dispatch thunk of static PhotosChallengeEvaluableAlgorithm.name.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of static PhotosChallengeEvaluableAlgorithm.supports(question:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of static PhotosChallengeEvaluableAlgorithm.predictedAnswers(for:context:for:outputFilePath:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 24))();
}

uint64_t dispatch thunk of static PhotosChallengeEvaluableAlgorithm.debug(questions:context:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

uint64_t sub_1CA30FED0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;

  if ((a3 & 0x8000000000000000) == 0)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t destroy for EventClusterFeaturizerError(uint64_t *a1)
{
  return sub_1CA30FEF0(*a1, a1[1], a1[2]);
}

uint64_t sub_1CA30FEF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;

  if ((a3 & 0x8000000000000000) == 0)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t *_s11PhotosGraph27EventClusterFeaturizerErrorOwCP_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *a2;
  v4 = a2[1];
  v5 = a2[2];
  sub_1CA30FED0(*a2, v4, v5);
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  return a1;
}

uint64_t *assignWithCopy for EventClusterFeaturizerError(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = *a2;
  v4 = a2[1];
  v5 = a2[2];
  sub_1CA30FED0(*a2, v4, v5);
  v6 = *a1;
  v7 = a1[1];
  v8 = a1[2];
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  sub_1CA30FEF0(v6, v7, v8);
  return a1;
}

uint64_t *assignWithTake for EventClusterFeaturizerError(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *a1;
  v6 = a1[1];
  v5 = a1[2];
  *(_OWORD *)a1 = *(_OWORD *)a2;
  a1[2] = v3;
  sub_1CA30FEF0(v4, v6, v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for EventClusterFeaturizerError(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7E && *(_BYTE *)(a1 + 24))
    return (*(_DWORD *)a1 + 126);
  v3 = (((*(_QWORD *)(a1 + 16) >> 57) >> 5) | (4
                                                           * ((*(_QWORD *)(a1 + 16) >> 57) & 0x18 | *(_QWORD *)(a1 + 16) & 7))) ^ 0x7F;
  if (v3 >= 0x7D)
    v3 = -1;
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for EventClusterFeaturizerError(uint64_t result, unsigned int a2, unsigned int a3)
{
  uint64_t v3;

  if (a2 > 0x7D)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 126;
    if (a3 >= 0x7E)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if (a3 >= 0x7E)
      *(_BYTE *)(result + 24) = 0;
    if (a2)
    {
      v3 = (-a2 >> 2) & 0x1F | (32 * (-a2 & 0x7F));
      *(_QWORD *)result = 0;
      *(_QWORD *)(result + 8) = 0;
      *(_QWORD *)(result + 16) = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_1CA310090(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(a1 + 16) >> 62;
  if (v1 <= 1)
    return v1;
  else
    return (*(_DWORD *)a1 + 2);
}

uint64_t sub_1CA3100AC(uint64_t result)
{
  *(_QWORD *)(result + 16) &= 0x3FFFFFFFFFFFFFFFuLL;
  return result;
}

uint64_t sub_1CA3100BC(uint64_t result, uint64_t a2)
{
  if (a2 < 2)
  {
    *(_QWORD *)(result + 16) = *(_QWORD *)(result + 16) & 0xFFFFFFFFFFFFFF8 | (a2 << 62);
  }
  else
  {
    *(_QWORD *)result = (a2 - 2);
    *(_OWORD *)(result + 8) = xmmword_1CA8DC130;
  }
  return result;
}

ValueMetadata *type metadata accessor for EventClusterFeaturizerError()
{
  return &type metadata for EventClusterFeaturizerError;
}

uint64_t dispatch thunk of EventCluster.featurize(progressReporter:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of EventCluster.uuid()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of EventCluster.logger()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

void LibraryAveragePersonCountFeatureExtractor.floatVector(withEntity:)(void *a1)
{
  sub_1CA3103D8(a1);
}

uint64_t LibraryAveragePersonCountFeatureExtractor.name.getter()
{
  return sub_1CA85B534();
}

uint64_t LibraryAveragePersonCountFeatureExtractor.featureNames.getter()
{
  uint64_t v0;
  uint64_t v1;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED872760);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1CA8D4E40;
  *(_QWORD *)(v0 + 32) = sub_1CA85B534();
  *(_QWORD *)(v0 + 40) = v1;
  return v0;
}

uint64_t LibraryAveragePersonCountFeatureExtractor.featureLength.getter()
{
  return 1;
}

id LibraryAveragePersonCountFeatureExtractor.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id LibraryAveragePersonCountFeatureExtractor.init()()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_init);
}

id LibraryAveragePersonCountFeatureExtractor.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_1CA3103D8(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  id v4;
  id v5;
  void *v6;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  int64_t v15;
  float i;
  unint64_t v17;
  unint64_t v18;
  float v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  id v24;
  void *v25;
  _BYTE *v26;
  _BYTE *v27;

  v2 = (uint64_t)objc_msgSend(a1, sel_count);
  if (v2 < 1)
  {
    sub_1CA3107F0();
    swift_allocError();
    *v26 = 0;
    swift_willThrow();
    return;
  }
  v3 = v2;
  v4 = objc_msgSend(a1, sel_photoLibrary);
  v5 = objc_msgSend(v4, sel_librarySpecificFetchOptions);

  objc_msgSend(v5, sel_setIncludeTorsoOnlyPerson_, 1);
  objc_msgSend(v5, sel_setPersonContext_, 5);
  sub_1CA85BF6C();
  objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithShort_, 1);
  sub_1CA85BF48();
  sub_1CA85BF78();
  sub_1CA85BF84();
  sub_1CA85BF54();
  sub_1CA310834();
  v6 = (void *)sub_1CA85B798();
  swift_release();
  objc_msgSend(v5, sel_setIncludedDetectionTypes_, v6);

  v7 = objc_msgSend((id)objc_opt_self(), sel_fetchPersonCountGroupedByAssetLocalIdentifierForAssets_options_, a1, v5);
  if (!v7)
  {
    sub_1CA3107F0();
    swift_allocError();
    *v27 = 1;
    swift_willThrow();

    return;
  }
  v8 = v7;
  v9 = sub_1CA85B414();

  v10 = v9 + 64;
  v11 = 1 << *(_BYTE *)(v9 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v9 + 64);
  v14 = (unint64_t)(v11 + 63) >> 6;
  swift_bridgeObjectRetain();
  v15 = 0;
  for (i = 0.0; ; i = i + v19)
  {
    if (v13)
    {
      v17 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v18 = v17 | (v15 << 6);
      goto LABEL_7;
    }
    v20 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v20 >= v14)
      goto LABEL_27;
    v21 = *(_QWORD *)(v10 + 8 * v20);
    ++v15;
    if (!v21)
    {
      v15 = v20 + 1;
      if (v20 + 1 >= v14)
        goto LABEL_27;
      v21 = *(_QWORD *)(v10 + 8 * v15);
      if (!v21)
      {
        v15 = v20 + 2;
        if (v20 + 2 >= v14)
          goto LABEL_27;
        v21 = *(_QWORD *)(v10 + 8 * v15);
        if (!v21)
        {
          v15 = v20 + 3;
          if (v20 + 3 >= v14)
            goto LABEL_27;
          v21 = *(_QWORD *)(v10 + 8 * v15);
          if (!v21)
          {
            v15 = v20 + 4;
            if (v20 + 4 >= v14)
              goto LABEL_27;
            v21 = *(_QWORD *)(v10 + 8 * v15);
            if (!v21)
              break;
          }
        }
      }
    }
LABEL_26:
    v13 = (v21 - 1) & v21;
    v18 = __clz(__rbit64(v21)) + (v15 << 6);
LABEL_7:
    objc_msgSend(*(id *)(*(_QWORD *)(v9 + 56) + 8 * v18), sel_floatValue);
  }
  v22 = v20 + 5;
  if (v22 >= v14)
  {
LABEL_27:
    swift_release();
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED8727A0);
    v23 = swift_allocObject();
    *(_OWORD *)(v23 + 16) = xmmword_1CA8D4E40;
    *(float *)(v23 + 32) = i / (float)v3;
    v24 = objc_allocWithZone((Class)sub_1CA85A994());
    v25 = (void *)sub_1CA85A988();
    objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D42A20]), sel_initWithWrapper_, v25);

    return;
  }
  v21 = *(_QWORD *)(v10 + 8 * v22);
  if (v21)
  {
    v15 = v22;
    goto LABEL_26;
  }
  while (1)
  {
    v15 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v15 >= v14)
      goto LABEL_27;
    v21 = *(_QWORD *)(v10 + 8 * v15);
    ++v22;
    if (v21)
      goto LABEL_26;
  }
LABEL_31:
  __break(1u);
}

uint64_t type metadata accessor for LibraryAveragePersonCountFeatureExtractor()
{
  return objc_opt_self();
}

unint64_t sub_1CA3107F0()
{
  unint64_t result;

  result = qword_1EF94D4D8;
  if (!qword_1EF94D4D8)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8DC2A8, &type metadata for LibraryAveragePersonCountFeatureExtractor.LibraryAveragePersonCountFeatureExtractorError);
    atomic_store(result, (unint64_t *)&qword_1EF94D4D8);
  }
  return result;
}

unint64_t sub_1CA310834()
{
  unint64_t result;

  result = qword_1ED8723C0;
  if (!qword_1ED8723C0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED8723C0);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for LibraryAveragePersonCountFeatureExtractor.LibraryAveragePersonCountFeatureExtractorError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1CA3108BC + 4 * byte_1CA8DC1C5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1CA3108F0 + 4 * asc_1CA8DC1C0[v4]))();
}

uint64_t sub_1CA3108F0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CA3108F8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1CA310900);
  return result;
}

uint64_t sub_1CA31090C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1CA310914);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1CA310918(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CA310920(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for LibraryAveragePersonCountFeatureExtractor.LibraryAveragePersonCountFeatureExtractorError()
{
  return &type metadata for LibraryAveragePersonCountFeatureExtractor.LibraryAveragePersonCountFeatureExtractorError;
}

unint64_t sub_1CA310940()
{
  unint64_t result;

  result = qword_1EF94D4E0;
  if (!qword_1EF94D4E0)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8DC280, &type metadata for LibraryAveragePersonCountFeatureExtractor.LibraryAveragePersonCountFeatureExtractorError);
    atomic_store(result, (unint64_t *)&qword_1EF94D4E0);
  }
  return result;
}

uint64_t ExtendedTokenCollectionGenerator.generateTimeExtendedTokens(for:)(void *a1)
{
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;

  if (qword_1EF94A278 != -1)
    swift_once();
  v2 = sub_1CA85B348();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EF978150);
  v3 = sub_1CA85B330();
  v4 = sub_1CA85BAC8();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v5 = 0;
    _os_log_impl(&dword_1CA237000, v3, v4, "generateTimeExtendedTokens for collection tokens has started.", v5, 2u);
    MEMORY[0x1CAA4F27C](v5, -1, -1);
  }

  v6 = sub_1CA317AC0(a1);
  v7 = sub_1CA31142C(a1);
  v8 = sub_1CA85B330();
  v9 = sub_1CA85BAC8();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v10 = 0;
    _os_log_impl(&dword_1CA237000, v8, v9, "generateTimeExtendedTokens for collection tokens complete.", v10, 2u);
    MEMORY[0x1CAA4F27C](v10, -1, -1);
  }

  sub_1CA284E38(v7);
  return v6;
}

uint64_t sub_1CA310B10@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  NSObject *v43;
  os_log_type_t v44;
  uint8_t *v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t (*v55)(char *, uint64_t, uint64_t);
  uint64_t v56;
  uint64_t v57;
  void (*v58)(char *, _QWORD);
  uint64_t v59;
  int v60;
  char *v61;
  uint64_t v62;
  void (*v63)(char *, char *, uint64_t);
  uint64_t v64;
  NSObject *v65;
  os_log_type_t v66;
  uint8_t *v67;
  uint64_t v68;
  char *v70;
  double v71;
  double v72;
  double v73;
  double v74;
  void (*v75)(char *, uint64_t);
  char *v76;
  uint64_t v77;
  unsigned int *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t *v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  char *v90;
  char *v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t *v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;

  v109 = a2;
  v99 = sub_1CA85AE50();
  v97 = *(_QWORD *)(v99 - 8);
  MEMORY[0x1E0C80A78](v99);
  v101 = (uint64_t *)((char *)&v87 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v93 = sub_1CA85A5B0();
  v102 = *(_QWORD *)(v93 - 8);
  v4 = MEMORY[0x1E0C80A78](v93);
  v90 = (char *)&v87 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v92 = (char *)&v87 - v6;
  v100 = sub_1CA85B1A4();
  v105 = *(_QWORD *)(v100 - 8);
  v7 = MEMORY[0x1E0C80A78](v100);
  v96 = (char *)&v87 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x1E0C80A78](v7);
  v89 = (char *)&v87 - v10;
  MEMORY[0x1E0C80A78](v9);
  v104 = (char *)&v87 - v11;
  v12 = sub_1CA85AF94();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v87 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8711C0);
  v17 = MEMORY[0x1E0C80A78](v16);
  v95 = (uint64_t)&v87 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x1E0C80A78](v17);
  v94 = (uint64_t)&v87 - v20;
  v21 = MEMORY[0x1E0C80A78](v19);
  v91 = (char *)&v87 - v22;
  v23 = MEMORY[0x1E0C80A78](v21);
  v25 = (char *)&v87 - v24;
  v26 = MEMORY[0x1E0C80A78](v23);
  v28 = (char *)&v87 - v27;
  v29 = MEMORY[0x1E0C80A78](v26);
  v107 = (uint64_t)&v87 - v30;
  v31 = MEMORY[0x1E0C80A78](v29);
  v103 = (uint64_t)&v87 - v32;
  MEMORY[0x1E0C80A78](v31);
  v106 = (uint64_t)&v87 - v33;
  v34 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF94D500);
  MEMORY[0x1E0C80A78](v34);
  v36 = (char *)&v87 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = sub_1CA85AF04();
  v38 = *(_QWORD *)(v37 - 8);
  MEMORY[0x1E0C80A78](v37);
  v108 = (char *)&v87 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  v98 = a1;
  v40 = sub_1CA85AAC0();
  if (*(_QWORD *)(v40 + 16))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v38 + 16))(v36, v40 + ((*(unsigned __int8 *)(v38 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80)), v37);
    v41 = 0;
  }
  else
  {
    v41 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v38 + 56))(v36, v41, 1, v37);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48))(v36, 1, v37) == 1)
  {
    sub_1CA267BE8((uint64_t)v36, (uint64_t *)&unk_1EF94D500);
    if (qword_1EF94A278 != -1)
      swift_once();
    v42 = sub_1CA85B348();
    __swift_project_value_buffer(v42, (uint64_t)qword_1EF978150);
    v43 = sub_1CA85B330();
    v44 = sub_1CA85BAE0();
    if (os_log_type_enabled(v43, v44))
    {
      v45 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v45 = 0;
      _os_log_impl(&dword_1CA237000, v43, v44, "The query token does not have any suggestions", v45, 2u);
      MEMORY[0x1CAA4F27C](v45, -1, -1);
    }

LABEL_22:
    v68 = sub_1CA85ADA8();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v68 - 8) + 56))(v109, 1, 1, v68);
  }
  (*(void (**)(char *, char *, uint64_t))(v38 + 32))(v108, v36, v37);
  sub_1CA85AEF8();
  if ((*(unsigned int (**)(char *, uint64_t))(v13 + 88))(v15, v12) != *MEMORY[0x1E0D772D0])
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    if (qword_1EF94A278 != -1)
      swift_once();
    v64 = sub_1CA85B348();
    __swift_project_value_buffer(v64, (uint64_t)qword_1EF978150);
    v65 = sub_1CA85B330();
    v66 = sub_1CA85BAE0();
    if (os_log_type_enabled(v65, v66))
    {
      v67 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v67 = 0;
      _os_log_impl(&dword_1CA237000, v65, v66, "The query token is not a date token", v67, 2u);
      MEMORY[0x1CAA4F27C](v67, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v38 + 8))(v108, v37);
    goto LABEL_22;
  }
  v88 = v37;
  (*(void (**)(char *, uint64_t))(v13 + 96))(v15, v12);
  v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94CB70);
  v47 = &v15[*(int *)(v46 + 48)];
  v48 = (uint64_t)&v15[*(int *)(v46 + 64)];
  v49 = (uint64_t)v15;
  v50 = v106;
  sub_1CA24EEF8(v49, v106, &qword_1ED8711C0);
  v51 = (uint64_t)v47;
  v52 = v103;
  sub_1CA24EEF8(v51, v103, &qword_1ED8711C0);
  sub_1CA267BE8(v48, &qword_1EF94CB78);
  v53 = v52;
  v54 = v107;
  sub_1CA29377C(v53, v107);
  sub_1CA29377C(v54, (uint64_t)v28);
  v55 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v102 + 48);
  v56 = v93;
  LODWORD(v54) = v55(v28, 1, v93);
  sub_1CA267BE8((uint64_t)v28, &qword_1ED8711C0);
  if ((_DWORD)v54 == 1)
  {
    v57 = v107;
    sub_1CA267BE8(v107, &qword_1ED8711C0);
    sub_1CA29377C(v50, v57);
  }
  v58 = *(void (**)(char *, _QWORD))(v105 + 104);
  v59 = v100;
  v58(v104, *MEMORY[0x1E0D77D38]);
  sub_1CA29377C(v50, (uint64_t)v25);
  v60 = v55(v25, 1, v56);
  v61 = v92;
  if (v60 != 1)
  {
    v62 = v102;
    v63 = *(void (**)(char *, char *, uint64_t))(v102 + 32);
    v63(v92, v25, v56);
    v25 = v91;
    sub_1CA29377C(v107, (uint64_t)v91);
    if (v55(v25, 1, v56) != 1)
    {
      v70 = v90;
      v63(v90, v25, v56);
      sub_1CA85A4F0();
      v72 = v71;
      sub_1CA85B930();
      v74 = v73;
      v75 = *(void (**)(char *, uint64_t))(v62 + 8);
      v75(v70, v56);
      v75(v61, v56);
      v76 = v104;
      v77 = v105;
      (*(void (**)(char *, uint64_t))(v105 + 8))(v104, v59);
      v78 = (unsigned int *)MEMORY[0x1E0D77D40];
      if (v74 >= v72)
        v78 = (unsigned int *)MEMORY[0x1E0D77D50];
      v79 = v89;
      ((void (*)(char *, _QWORD, uint64_t))v58)(v89, *v78, v59);
      (*(void (**)(char *, char *, uint64_t))(v77 + 32))(v76, v79, v59);
      goto LABEL_26;
    }
    (*(void (**)(char *, uint64_t))(v62 + 8))(v61, v56);
  }
  sub_1CA267BE8((uint64_t)v25, &qword_1ED8711C0);
LABEL_26:
  v102 = sub_1CA85AACC();
  v93 = v80;
  v92 = (char *)sub_1CA85AAF0();
  v81 = sub_1CA85AAE4();
  v82 = v101;
  *v101 = v81;
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v97 + 104))(v82, *MEMORY[0x1E0D76F88], v99);
  v84 = v104;
  v83 = v105;
  (*(void (**)(char *, char *, uint64_t))(v105 + 16))(v96, v104, v59);
  sub_1CA29377C(v106, v94);
  v85 = v107;
  sub_1CA29377C(v107, v95);
  sub_1CA85AD60();
  (*(void (**)(char *, uint64_t))(v83 + 8))(v84, v59);
  sub_1CA267BE8(v85, &qword_1ED8711C0);
  sub_1CA267BE8(v103, &qword_1ED8711C0);
  sub_1CA267BE8(v106, &qword_1ED8711C0);
  (*(void (**)(char *, uint64_t))(v38 + 8))(v108, v88);
  v86 = sub_1CA85ADA8();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v86 - 8) + 56))(v109, 0, 1, v86);
}

uint64_t sub_1CA31142C(void *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  void *v3;
  uint64_t v4;
  double v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  uint64_t result;
  uint64_t v12;
  _QWORD aBlock[6];
  uint64_t v14;

  v2 = v1;
  v3 = a1;
  v4 = *v1;
  v5 = (double)(uint64_t)objc_msgSend(a1, sel_count);
  v6 = objc_msgSend(v3, sel_celebratedHolidayNodes);
  v14 = MEMORY[0x1E0DEE9D8];
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = v2;
  *(_QWORD *)(v7 + 24) = v3;
  *(double *)(v7 + 32) = v5;
  *(_QWORD *)(v7 + 40) = &v14;
  *(_QWORD *)(v7 + 48) = v4;
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = sub_1CA318C48;
  *(_QWORD *)(v8 + 24) = v7;
  aBlock[4] = sub_1CA26A1BC;
  aBlock[5] = v8;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1CA45E830;
  aBlock[3] = &block_descriptor_10;
  v9 = _Block_copy(aBlock);
  swift_retain();
  v10 = v3;
  swift_retain();
  swift_release();
  objc_msgSend(v6, sel_enumerateUsingBlock_, v9);
  _Block_release(v9);
  LOBYTE(v3) = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((v3 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    sub_1CA313AAC(&v14, (uint64_t (*)(uint64_t))sub_1CA42C240);

    v12 = v14;
    swift_release();
    return v12;
  }
  return result;
}

uint64_t sub_1CA3115D8(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t *a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v12;
  unint64_t v13;
  uint64_t v15;

  v6 = sub_1CA85A5B0();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
  v10 = *a4;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a4 = v10;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v10 = sub_1CA26CA9C(0, *(_QWORD *)(v10 + 16) + 1, 1, v10);
    *a4 = v10;
  }
  v13 = *(_QWORD *)(v10 + 16);
  v12 = *(_QWORD *)(v10 + 24);
  if (v13 >= v12 >> 1)
  {
    v10 = sub_1CA26CA9C(v12 > 1, v13 + 1, 1, v10);
    *a4 = v10;
  }
  *(_QWORD *)(v10 + 16) = v13 + 1;
  return (*(uint64_t (**)(unint64_t, char *, uint64_t))(v7 + 32))(v10+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(_QWORD *)(v7 + 72) * v13, v9, v6);
}

void sub_1CA3116F8(uint8_t *a1, char *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  unsigned int (*v47)(char *, uint64_t, uint64_t);
  char *v48;
  void (*v49)(char *, char *, uint64_t);
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  NSObject *v53;
  os_log_type_t v54;
  uint8_t *v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char v70;
  uint64_t v71;
  char *v72;
  void (*v73)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  void (*v77)(char *, uint64_t);
  char *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  void (*v82)(char *, uint64_t, uint64_t);
  char *v83;
  uint64_t v84;
  NSObject *v85;
  os_log_type_t v86;
  uint8_t *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  void (*v92)(char *, uint64_t);
  void (*v93)(char *, uint64_t);
  uint64_t v94;
  char *v95;
  uint64_t v96;
  char *v97;
  char *v98;
  char v99;
  void (*v100)(char *, char *, uint64_t);
  char *v101;
  char *v102;
  char *v103;
  char *v104;
  char *v105;
  char *v106;
  char *v107;
  void (*v108)(char *, _QWORD, uint64_t, uint64_t);
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  void (*v114)(char *, uint64_t, uint64_t);
  uint64_t v115;
  char *v116;
  _QWORD *v117;
  uint64_t v118;
  char *v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  char *v126;
  char *v127;
  char *v128;
  char *v129;
  char *v130;
  char *v131;
  char *v132;
  char *v133;
  char *v134;
  char *v135;
  char *v136;
  uint8_t *v137;
  char *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;

  v137 = a1;
  v3 = sub_1CA85B1A4();
  v123 = *(_QWORD *)(v3 - 8);
  v124 = v3;
  MEMORY[0x1E0C80A78](v3);
  v129 = (char *)&v114 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v122 = sub_1CA85AE50();
  v121 = *(_QWORD *)(v122 - 8);
  MEMORY[0x1E0C80A78](v122);
  v128 = (char *)&v114 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94C240);
  v7 = MEMORY[0x1E0C80A78](v6);
  v135 = (char *)&v114 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v136 = (char *)&v114 - v9;
  v10 = sub_1CA85ADA8();
  v11 = *(_QWORD *)(v10 - 8);
  v139 = v10;
  v140 = v11;
  v12 = MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v114 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x1E0C80A78](v12);
  v131 = (char *)&v114 - v16;
  MEMORY[0x1E0C80A78](v15);
  v134 = (char *)&v114 - v17;
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8711C0);
  v19 = MEMORY[0x1E0C80A78](v18);
  v120 = (char *)&v114 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = MEMORY[0x1E0C80A78](v19);
  v119 = (char *)&v114 - v22;
  v23 = MEMORY[0x1E0C80A78](v21);
  v125 = (char *)&v114 - v24;
  v25 = MEMORY[0x1E0C80A78](v23);
  v132 = (char *)&v114 - v26;
  v27 = MEMORY[0x1E0C80A78](v25);
  v29 = (char *)&v114 - v28;
  MEMORY[0x1E0C80A78](v27);
  v31 = (char *)&v114 - v30;
  v32 = sub_1CA85A5B0();
  v33 = *(_QWORD *)(v32 - 8);
  v34 = MEMORY[0x1E0C80A78](v32);
  v127 = (char *)&v114 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = MEMORY[0x1E0C80A78](v34);
  v126 = (char *)&v114 - v37;
  v38 = MEMORY[0x1E0C80A78](v36);
  v130 = (char *)&v114 - v39;
  v40 = MEMORY[0x1E0C80A78](v38);
  v133 = (char *)&v114 - v41;
  v42 = MEMORY[0x1E0C80A78](v40);
  v138 = (char *)&v114 - v43;
  MEMORY[0x1E0C80A78](v42);
  v45 = (char *)&v114 - v44;
  sub_1CA85AD9C();
  v46 = v33;
  v47 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48);
  if (v47(v31, 1, v32) != 1)
  {
    v49 = *(void (**)(char *, char *, uint64_t))(v46 + 32);
    v49(v45, v31, v32);
    sub_1CA85AD90();
    if (v47(v29, 1, v32) == 1)
    {
      v48 = a2;
      (*(void (**)(char *, uint64_t))(v46 + 8))(v45, v32);
      goto LABEL_5;
    }
    v117 = (_QWORD *)v46;
    v116 = v45;
    v59 = v138;
    v118 = v32;
    v49(v138, v29, v32);
    v60 = sub_1CA85AD6C();
    v62 = v61;
    v63 = *(_QWORD *)v137;
    v64 = *(_QWORD *)(*(_QWORD *)v137 + 16);
    v65 = v140;
    v115 = v60;
    if (v64)
    {
      v66 = v60;
      v114 = (void (*)(char *, uint64_t, uint64_t))v49;
      swift_bridgeObjectRetain();
      v67 = sub_1CA25081C(v66, v62);
      v68 = v139;
      v69 = (char *)v62;
      if ((v70 & 1) != 0)
      {
        v71 = *(_QWORD *)(v63 + 56) + *(_QWORD *)(v65 + 72) * v67;
        v72 = v136;
        (*(void (**)(char *, uint64_t, uint64_t))(v65 + 16))(v136, v71, v139);
        v73 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v65 + 56);
        v73(v72, 0, 1, v68);
      }
      else
      {
        v73 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v65 + 56);
        v72 = v136;
        v73(v136, 1, 1, v139);
      }
      swift_bridgeObjectRelease();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v65 + 48))(v72, 1, v68) != 1)
      {
        v136 = a2;
        v79 = v134;
        (*(void (**)(char *, char *, uint64_t))(v65 + 32))(v134, v72, v68);
        v80 = (uint64_t)v132;
        sub_1CA85AD9C();
        v81 = v118;
        if (v47((char *)v80, 1, v118) != 1)
        {
          v82 = v114;
          v114(v133, v80, v81);
          v80 = (uint64_t)v125;
          sub_1CA85AD90();
          if (v47((char *)v80, 1, v81) != 1)
          {
            v82(v130, v80, v81);
            sub_1CA23CC98((unint64_t *)&qword_1ED8711A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08B0]);
            v132 = v69;
            v97 = v116;
            v98 = v133;
            v99 = sub_1CA85B4E0();
            v100 = (void (*)(char *, char *, uint64_t))v117[2];
            if ((v99 & 1) != 0)
              v101 = v97;
            else
              v101 = v98;
            v102 = v126;
            v100(v126, v101, v81);
            v103 = v138;
            v104 = v130;
            if ((sub_1CA85B4EC() & 1) != 0)
              v105 = v103;
            else
              v105 = v104;
            v106 = v127;
            v100(v127, v105, v81);
            (*(void (**)(char *, _QWORD, uint64_t))(v121 + 104))(v128, *MEMORY[0x1E0D76F78], v122);
            (*(void (**)(char *, _QWORD, uint64_t))(v123 + 104))(v129, *MEMORY[0x1E0D77D50], v124);
            v107 = v119;
            v100(v119, v102, v81);
            v108 = (void (*)(char *, _QWORD, uint64_t, uint64_t))v117[7];
            v108(v107, 0, 1, v81);
            v109 = v120;
            v100(v120, v106, v81);
            v108(v109, 0, 1, v81);
            v110 = (uint64_t)v132;
            swift_bridgeObjectRetain();
            v131 = (char *)sub_1CA85AD84();
            sub_1CA85AD78();
            v111 = (uint64_t)v135;
            v112 = v115;
            sub_1CA85AD60();
            v113 = v139;
            v73((char *)v111, 0, 1, v139);
            sub_1CA296D04(v111, v112, v110);
            v77 = (void (*)(char *, uint64_t))v117[1];
            v77(v127, v81);
            v77(v126, v81);
            v77(v130, v81);
            v77(v133, v81);
            (*(void (**)(char *, uint64_t))(v65 + 8))(v134, v113);
            v77(v138, v81);
            v95 = v116;
            v96 = v81;
            goto LABEL_29;
          }
          ((void (*)(char *, uint64_t))v117[1])(v133, v81);
          v79 = v134;
        }
        swift_bridgeObjectRelease();
        sub_1CA267BE8(v80, &qword_1ED8711C0);
        v83 = v131;
        if (qword_1EF94A278 != -1)
          swift_once();
        v84 = sub_1CA85B348();
        __swift_project_value_buffer(v84, (uint64_t)qword_1EF978150);
        (*(void (**)(char *, char *, uint64_t))(v65 + 16))(v83, v79, v68);
        v85 = sub_1CA85B330();
        v86 = sub_1CA85BAE0();
        if (os_log_type_enabled(v85, v86))
        {
          v87 = (uint8_t *)swift_slowAlloc();
          v88 = v68;
          v89 = swift_slowAlloc();
          v142 = v89;
          *(_DWORD *)v87 = 136315138;
          v137 = v87 + 4;
          sub_1CA23CC98(&qword_1EF94D4F8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D76EB0], MEMORY[0x1E0D76EC0]);
          v90 = sub_1CA85C260();
          v141 = sub_1CA28712C(v90, v91, &v142);
          sub_1CA85BCF0();
          swift_bridgeObjectRelease();
          v92 = *(void (**)(char *, uint64_t))(v65 + 8);
          v92(v83, v88);
          _os_log_impl(&dword_1CA237000, v85, v86, "generateTimeExtendedTokens: Extended time token %s has an unexpected nil start or end date, skipping!", v87, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1CAA4F27C](v89, -1, -1);
          MEMORY[0x1CAA4F27C](v87, -1, -1);

          v92(v134, v88);
        }
        else
        {

          v93 = *(void (**)(char *, uint64_t))(v65 + 8);
          v93(v83, v68);
          v93(v79, v68);
        }
        v77 = (void (*)(char *, uint64_t))v117[1];
        v78 = v138;
LABEL_28:
        v94 = v118;
        v77(v78, v118);
        v95 = v116;
        v96 = v94;
LABEL_29:
        v77(v95, v96);
        return;
      }
      v75 = (uint64_t)v72;
      v74 = (uint64_t)v69;
    }
    else
    {
      v74 = v61;
      v73 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v140 + 56);
      v75 = (uint64_t)v136;
      v68 = v139;
      v73(v136, 1, 1, v139);
    }
    sub_1CA267BE8(v75, &qword_1EF94C240);
    v76 = (uint64_t)v135;
    (*(void (**)(char *, char *, uint64_t))(v65 + 16))(v135, a2, v68);
    v73((char *)v76, 0, 1, v68);
    sub_1CA296D04(v76, v115, v74);
    v77 = (void (*)(char *, uint64_t))v117[1];
    v78 = v59;
    goto LABEL_28;
  }
  v48 = a2;
  v29 = v31;
LABEL_5:
  v50 = v140;
  sub_1CA267BE8((uint64_t)v29, &qword_1ED8711C0);
  if (qword_1EF94A278 != -1)
    swift_once();
  v51 = sub_1CA85B348();
  __swift_project_value_buffer(v51, (uint64_t)qword_1EF978150);
  v52 = v139;
  (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v14, v48, v139);
  v53 = sub_1CA85B330();
  v54 = sub_1CA85BAE0();
  if (os_log_type_enabled(v53, v54))
  {
    v55 = (uint8_t *)swift_slowAlloc();
    v56 = swift_slowAlloc();
    v142 = v56;
    *(_DWORD *)v55 = 136315138;
    sub_1CA23CC98(&qword_1EF94D4F8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D76EB0], MEMORY[0x1E0D76EC0]);
    v57 = sub_1CA85C260();
    v141 = sub_1CA28712C(v57, v58, &v142);
    sub_1CA85BCF0();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v140 + 8))(v14, v52);
    _os_log_impl(&dword_1CA237000, v53, v54, "generateTimeExtendedTokens: Extended time token %s has an unexpected nil start or end date, skipping!", v55, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1CAA4F27C](v56, -1, -1);
    MEMORY[0x1CAA4F27C](v55, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v50 + 8))(v14, v52);
  }

}

uint64_t sub_1CA312310@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  const char *v28;
  uint64_t v29;
  uint8_t *v30;
  uint64_t v31;
  uint64_t v32;
  os_log_type_t v33;
  uint8_t *v34;
  _QWORD v35[4];
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v36 = a1;
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8711C0);
  v2 = MEMORY[0x1E0C80A78](v1);
  v35[3] = (char *)v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v2);
  v35[2] = (char *)v35 - v4;
  v5 = sub_1CA85B1A4();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1CA85AE50();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1CA85AD84();
  if ((v14 & 1) != 0)
  {
    if (qword_1EF94A278 != -1)
      swift_once();
    v24 = sub_1CA85B348();
    __swift_project_value_buffer(v24, (uint64_t)qword_1EF978150);
    v25 = sub_1CA85B330();
    v26 = sub_1CA85BAE0();
    if (!os_log_type_enabled(v25, v26))
      goto LABEL_15;
    v27 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v27 = 0;
    v28 = "sortedMonthYearTimeTokens: Collection time token did not have a month!";
LABEL_13:
    _os_log_impl(&dword_1CA237000, v25, v26, v28, v27, 2u);
    v30 = v27;
LABEL_14:
    MEMORY[0x1CAA4F27C](v30, -1, -1);
    goto LABEL_15;
  }
  v15 = v13;
  v16 = sub_1CA85AD78();
  if ((v17 & 1) != 0)
  {
    if (qword_1EF94A278 != -1)
      swift_once();
    v29 = sub_1CA85B348();
    __swift_project_value_buffer(v29, (uint64_t)qword_1EF978150);
    v25 = sub_1CA85B330();
    v26 = sub_1CA85BAE0();
    if (!os_log_type_enabled(v25, v26))
      goto LABEL_15;
    v27 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v27 = 0;
    v28 = "sortedMonthYearTimeTokens: Collection time token did not have a year!";
    goto LABEL_13;
  }
  v18 = v16;
  v19 = sub_1CA317340(v15);
  if (v20)
  {
    v37 = v19;
    v38 = v20;
    sub_1CA85B624();
    v39 = v18;
    sub_1CA85C260();
    sub_1CA85B624();
    swift_bridgeObjectRelease();
    v35[1] = v38;
    (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v12, *MEMORY[0x1E0D76F78], v9);
    (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E0D77D50], v5);
    sub_1CA85AD9C();
    sub_1CA85AD90();
    sub_1CA85AD84();
    sub_1CA85AD78();
    v21 = v36;
    sub_1CA85AD60();
    v22 = sub_1CA85ADA8();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v21, 0, 1, v22);
  }
  if (qword_1EF94A278 != -1)
    swift_once();
  v32 = sub_1CA85B348();
  __swift_project_value_buffer(v32, (uint64_t)qword_1EF978150);
  v25 = sub_1CA85B330();
  v33 = sub_1CA85BAE0();
  if (os_log_type_enabled(v25, v33))
  {
    v34 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v34 = 134217984;
    v37 = v15;
    sub_1CA85BCF0();
    _os_log_impl(&dword_1CA237000, v25, v33, "sortedMonthYearTimeTokens: Time token's month %ld is an invalid month number!", v34, 0xCu);
    v30 = v34;
    goto LABEL_14;
  }
LABEL_15:

  v31 = sub_1CA85ADA8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v36, 1, 1, v31);
}

void sub_1CA31278C(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  unsigned int (*v49)(char *, uint64_t, uint64_t);
  uint64_t v50;
  void (*v51)(char *, char *, uint64_t);
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  NSObject *v56;
  os_log_type_t v57;
  uint64_t v58;
  uint8_t *v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  char *v63;
  uint64_t v64;
  char v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  char v69;
  void (*v70)(char *, uint64_t, uint64_t);
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  void (*v74)(char *, unint64_t, uint64_t);
  char *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  NSObject *v81;
  os_log_type_t v82;
  uint8_t *v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  void (*v87)(char *, uint64_t);
  uint64_t v88;
  NSObject *v89;
  os_log_type_t v90;
  BOOL v91;
  char *v92;
  uint8_t *v93;
  void (*v94)(char *, uint64_t);
  char *v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  void (*v99)(char *, uint64_t);
  uint64_t v100;
  char *v101;
  char *v102;
  char v103;
  void (*v104)(char *, char *, uint64_t);
  char *v105;
  char *v106;
  char *v107;
  char *v108;
  char *v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  char *v113;
  void (*v114)(char *, _QWORD, uint64_t, uint64_t);
  char *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  char *v121;
  char *v122;
  char *v123;
  char *v124;
  char *v125;
  char *v126;
  char *v127;
  char *v128;
  char *v129;
  char *v130;
  char *v131;
  uint64_t v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  char *v137;
  char *v138;
  char *v139;
  uint64_t *v140;
  char *v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;

  v3 = v2;
  v140 = a1;
  v5 = sub_1CA85B1A4();
  v135 = *(_QWORD *)(v5 - 8);
  v136 = v5;
  MEMORY[0x1E0C80A78](v5);
  v138 = (char *)&v119 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v134 = sub_1CA85AE50();
  v132 = *(_QWORD *)(v134 - 8);
  MEMORY[0x1E0C80A78](v134);
  v139 = (char *)&v119 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94C240);
  MEMORY[0x1E0C80A78](v8);
  v137 = (char *)&v119 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1CA85ADA8();
  v11 = *(_QWORD *)(v10 - 8);
  v143 = v10;
  v144 = v11;
  v12 = MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v119 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x1E0C80A78](v12);
  v126 = (char *)&v119 - v16;
  v17 = MEMORY[0x1E0C80A78](v15);
  v128 = (char *)&v119 - v18;
  MEMORY[0x1E0C80A78](v17);
  v130 = (char *)&v119 - v19;
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8711C0);
  v21 = MEMORY[0x1E0C80A78](v20);
  v123 = (char *)&v119 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = MEMORY[0x1E0C80A78](v21);
  v133 = (char *)&v119 - v24;
  v25 = MEMORY[0x1E0C80A78](v23);
  v131 = (char *)&v119 - v26;
  v27 = MEMORY[0x1E0C80A78](v25);
  v127 = (char *)&v119 - v28;
  v29 = MEMORY[0x1E0C80A78](v27);
  v31 = (char *)&v119 - v30;
  MEMORY[0x1E0C80A78](v29);
  v33 = (char *)&v119 - v32;
  v34 = sub_1CA85A5B0();
  v35 = *(_QWORD *)(v34 - 8);
  v36 = MEMORY[0x1E0C80A78](v34);
  v122 = (char *)&v119 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = MEMORY[0x1E0C80A78](v36);
  v125 = (char *)&v119 - v39;
  v40 = MEMORY[0x1E0C80A78](v38);
  v124 = (char *)&v119 - v41;
  v42 = MEMORY[0x1E0C80A78](v40);
  v129 = (char *)&v119 - v43;
  v44 = MEMORY[0x1E0C80A78](v42);
  v141 = (char *)&v119 - v45;
  MEMORY[0x1E0C80A78](v44);
  v47 = (char *)&v119 - v46;
  sub_1CA85AD9C();
  v48 = v35;
  v49 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48);
  if (v49(v33, 1, v34) != 1)
  {
    v121 = v14;
    v142 = v2;
    v51 = *(void (**)(char *, char *, uint64_t))(v48 + 32);
    v51(v47, v33, v34);
    sub_1CA85AD90();
    v52 = v34;
    if (v49(v31, 1, v34) == 1)
    {
      (*(void (**)(char *, uint64_t))(v48 + 8))(v47, v34);
      v3 = v142;
      v50 = v144;
      v14 = v121;
      goto LABEL_5;
    }
    v121 = (char *)v48;
    v120 = v47;
    v63 = v141;
    v51(v141, v31, v52);
    v64 = sub_1CA85AD78();
    if ((v65 & 1) != 0)
    {
      if (qword_1EF94A278 != -1)
        swift_once();
      v88 = sub_1CA85B348();
      __swift_project_value_buffer(v88, (uint64_t)qword_1EF978150);
      v89 = sub_1CA85B330();
      v90 = sub_1CA85BAE0();
      v91 = os_log_type_enabled(v89, v90);
      v92 = v120;
      if (v91)
      {
        v93 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v93 = 0;
        _os_log_impl(&dword_1CA237000, v89, v90, "sortedYearTimeTokens: Collection time token did not have a year!", v93, 2u);
        MEMORY[0x1CAA4F27C](v93, -1, -1);
      }

      v94 = (void (*)(char *, uint64_t))*((_QWORD *)v121 + 1);
      v94(v63, v52);
      v95 = v92;
      v96 = v52;
      goto LABEL_30;
    }
    v66 = v64;
    v119 = v52;
    v67 = *v140;
    if (*(_QWORD *)(*v140 + 16) && (v68 = sub_1CA250BCC(v64), (v69 & 1) != 0))
    {
      v70 = (void (*)(char *, uint64_t, uint64_t))v51;
      v72 = v143;
      v71 = v144;
      v73 = *(_QWORD *)(v67 + 56) + *(_QWORD *)(v144 + 72) * v68;
      v74 = *(void (**)(char *, unint64_t, uint64_t))(v144 + 16);
      v75 = v128;
      v74(v128, v73, v143);
      v76 = v130;
      (*(void (**)(char *, char *, uint64_t))(v71 + 32))(v130, v75, v72);
      v77 = (uint64_t)v127;
      sub_1CA85AD9C();
      v78 = v119;
      if (v49((char *)v77, 1, v119) != 1)
      {
        v70(v129, v77, v78);
        v77 = (uint64_t)v123;
        sub_1CA85AD90();
        if (v49((char *)v77, 1, v78) != 1)
        {
          v70(v124, v77, v78);
          sub_1CA23CC98((unint64_t *)&qword_1ED8711A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08B0]);
          v101 = v120;
          v102 = v129;
          v103 = sub_1CA85B4E0();
          v104 = (void (*)(char *, char *, uint64_t))*((_QWORD *)v121 + 2);
          if ((v103 & 1) != 0)
            v105 = v101;
          else
            v105 = v102;
          v104(v125, v105, v78);
          v106 = v141;
          v107 = v124;
          if ((sub_1CA85B4EC() & 1) != 0)
            v108 = v106;
          else
            v108 = v107;
          v109 = v122;
          v104(v122, v108, v78);
          v146 = v66;
          v110 = sub_1CA85C260();
          v127 = v111;
          v128 = (char *)v110;
          (*(void (**)(char *, _QWORD, uint64_t))(v132 + 104))(v139, *MEMORY[0x1E0D76F78], v134);
          (*(void (**)(char *, _QWORD, uint64_t))(v135 + 104))(v138, *MEMORY[0x1E0D77D40], v136);
          v112 = v66;
          v113 = v131;
          v104(v131, v125, v78);
          v114 = (void (*)(char *, _QWORD, uint64_t, uint64_t))*((_QWORD *)v121 + 7);
          v114(v113, 0, 1, v78);
          v115 = v133;
          v104(v133, v109, v78);
          v114(v115, 0, 1, v78);
          v116 = (uint64_t)v137;
          sub_1CA85AD60();
          v118 = v143;
          v117 = v144;
          (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v144 + 56))(v116, 0, 1, v143);
          sub_1CA296EA8(v116, v112);
          v94 = (void (*)(char *, uint64_t))*((_QWORD *)v121 + 1);
          v94(v109, v78);
          v94(v125, v78);
          v94(v124, v78);
          v94(v129, v78);
          (*(void (**)(char *, uint64_t))(v117 + 8))(v130, v118);
          v94(v141, v78);
          v95 = v120;
          v96 = v78;
          goto LABEL_30;
        }
        (*((void (**)(char *, uint64_t))v121 + 1))(v129, v78);
      }
      sub_1CA267BE8(v77, &qword_1ED8711C0);
      v79 = v126;
      if (qword_1EF94A278 != -1)
        swift_once();
      v80 = sub_1CA85B348();
      __swift_project_value_buffer(v80, (uint64_t)qword_1EF978150);
      v74(v79, (unint64_t)v76, v72);
      v81 = sub_1CA85B330();
      v82 = sub_1CA85BAE0();
      if (os_log_type_enabled(v81, v82))
      {
        v83 = (uint8_t *)swift_slowAlloc();
        v84 = swift_slowAlloc();
        v146 = v84;
        *(_DWORD *)v83 = 136315138;
        sub_1CA23CC98(&qword_1EF94D4F8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D76EB0], MEMORY[0x1E0D76EC0]);
        v85 = sub_1CA85C260();
        v145 = sub_1CA28712C(v85, v86, &v146);
        sub_1CA85BCF0();
        swift_bridgeObjectRelease();
        v87 = *(void (**)(char *, uint64_t))(v144 + 8);
        v87(v79, v72);
        _os_log_impl(&dword_1CA237000, v81, v82, "sortedYearTimeTokens: Extended time token %s has an unexpected nil start or end date, skipping!", v83, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1CAA4F27C](v84, -1, -1);
        MEMORY[0x1CAA4F27C](v83, -1, -1);

        v87(v130, v72);
      }
      else
      {

        v99 = *(void (**)(char *, uint64_t))(v144 + 8);
        v99(v79, v72);
        v99(v76, v72);
      }
      v94 = (void (*)(char *, uint64_t))*((_QWORD *)v121 + 1);
      v98 = v141;
    }
    else
    {
      v146 = v66;
      v130 = (char *)sub_1CA85C260();
      (*(void (**)(char *, _QWORD, uint64_t))(v132 + 104))(v139, *MEMORY[0x1E0D76F78], v134);
      (*(void (**)(char *, _QWORD, uint64_t))(v135 + 104))(v138, *MEMORY[0x1E0D77D40], v136);
      sub_1CA85AD9C();
      sub_1CA85AD90();
      v97 = (uint64_t)v137;
      sub_1CA85AD60();
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v144 + 56))(v97, 0, 1, v143);
      sub_1CA296EA8(v97, v66);
      v94 = (void (*)(char *, uint64_t))*((_QWORD *)v121 + 1);
      v98 = v63;
    }
    v100 = v119;
    v94(v98, v119);
    v95 = v120;
    v96 = v100;
LABEL_30:
    v94(v95, v96);
    return;
  }
  v31 = v33;
  v50 = v144;
LABEL_5:
  sub_1CA267BE8((uint64_t)v31, &qword_1ED8711C0);
  if (qword_1EF94A278 != -1)
    swift_once();
  v53 = sub_1CA85B348();
  __swift_project_value_buffer(v53, (uint64_t)qword_1EF978150);
  v54 = a2;
  v55 = v143;
  (*(void (**)(char *, uint64_t, uint64_t))(v50 + 16))(v14, v54, v143);
  v56 = sub_1CA85B330();
  v57 = sub_1CA85BAE0();
  if (os_log_type_enabled(v56, v57))
  {
    v58 = swift_slowAlloc();
    v142 = v3;
    v59 = (uint8_t *)v58;
    v60 = swift_slowAlloc();
    v146 = v60;
    *(_DWORD *)v59 = 136315138;
    sub_1CA23CC98(&qword_1EF94D4F8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D76EB0], MEMORY[0x1E0D76EC0]);
    v61 = sub_1CA85C260();
    v145 = sub_1CA28712C(v61, v62, &v146);
    sub_1CA85BCF0();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v144 + 8))(v14, v55);
    _os_log_impl(&dword_1CA237000, v56, v57, "sortedYearTimeTokens: Extended time token %s has an unexpected nil start or end date, skipping!", v59, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1CAA4F27C](v60, -1, -1);
    MEMORY[0x1CAA4F27C](v59, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v50 + 8))(v14, v55);
  }

}

void sub_1CA313478(void *a1, double a2, uint64_t a3, uint64_t a4, NSObject *a5, unint64_t *a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  void *v27;
  uint64_t v28;
  id v29;
  id v30;
  id v31;
  NSObject *v32;
  id v33;
  id v34;
  NSObject *v35;
  uint64_t v36;
  os_log_type_t v37;
  uint8_t *v38;
  const char *v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(char *, uint64_t, uint64_t, uint64_t);
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  unint64_t *v47;
  unint64_t v48;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  unint64_t *v55;
  NSObject *v56;
  char *v57;
  char *v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  NSObject *v63;

  v63 = a5;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8711C0);
  v11 = MEMORY[0x1E0C80A78](v10);
  v58 = (char *)&v52 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v57 = (char *)&v52 - v13;
  v14 = sub_1CA85B1A4();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v52 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_1CA85AE50();
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  v21 = (char *)&v52 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_1CA85ADA8();
  v61 = *(_QWORD *)(v22 - 8);
  v62 = v22;
  v23 = MEMORY[0x1E0C80A78](v22);
  v59 = (char *)&v52 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v23);
  v60 = (char *)&v52 - v25;
  v26 = objc_msgSend(a1, sel_localizedName);
  if (!v26)
  {
    if (qword_1EF94A278 != -1)
      swift_once();
    v36 = sub_1CA85B348();
    __swift_project_value_buffer(v36, (uint64_t)qword_1EF978150);
    v63 = sub_1CA85B330();
    v37 = sub_1CA85BAE0();
    if (!os_log_type_enabled(v63, v37))
      goto LABEL_14;
    v38 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v38 = 0;
    v39 = "Holiday has no localized name!";
    goto LABEL_13;
  }
  v27 = v26;
  v53 = v17;
  v55 = a6;
  v28 = sub_1CA85B534();

  v54 = v28;
  if (sub_1CA85B5E8() <= 0)
  {
    swift_bridgeObjectRelease();
    if (qword_1EF94A278 != -1)
      swift_once();
    v40 = sub_1CA85B348();
    __swift_project_value_buffer(v40, (uint64_t)qword_1EF978150);
    v63 = sub_1CA85B330();
    v37 = sub_1CA85BAE0();
    if (!os_log_type_enabled(v63, v37))
      goto LABEL_14;
    v38 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v38 = 0;
    v39 = "Holiday has no name value!";
LABEL_13:
    _os_log_impl(&dword_1CA237000, v63, v37, v39, v38, 2u);
    MEMORY[0x1CAA4F27C](v38, -1, -1);
LABEL_14:
    v35 = v63;
    goto LABEL_15;
  }
  v29 = *(id *)(a4 + 16);
  v30 = objc_msgSend(a1, sel_identifier);
  v31 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D42990]), sel_initWithElementIdentifier_, v30);
  v56 = objc_msgSend(objc_allocWithZone((Class)PGGraphHolidayNodeCollection), sel_initWithGraph_elementIdentifiers_, v29, v31);

  v32 = -[NSObject celebratingMomentNodes](v56, sel_celebratingMomentNodes);
  v33 = -[NSObject collectionByIntersecting:](v32, sel_collectionByIntersecting_, v63);
  v34 = objc_msgSend(v33, sel_count);

  if ((double)(uint64_t)v34 / a2 < 0.5)
  {

    swift_bridgeObjectRelease();
    v35 = v56;
LABEL_15:

    return;
  }
  v63 = v32;
  (*(void (**)(char *, _QWORD, uint64_t))(v19 + 104))(v21, *MEMORY[0x1E0D76F78], v18);
  (*(void (**)(char *, _QWORD, uint64_t))(v15 + 104))(v53, *MEMORY[0x1E0D77D48], v14);
  v41 = sub_1CA85A5B0();
  v42 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 56);
  v42(v57, 1, 1, v41);
  v42(v58, 1, 1, v41);
  v43 = v60;
  sub_1CA85AD60();
  v45 = v61;
  v44 = v62;
  v46 = v59;
  (*(void (**)(char *, char *, uint64_t))(v61 + 16))(v59, v43, v62);
  v47 = v55;
  v48 = *v55;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *v47 = v48;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v48 = sub_1CA26D2EC(0, *(_QWORD *)(v48 + 16) + 1, 1, v48);
    *v47 = v48;
  }
  v51 = *(_QWORD *)(v48 + 16);
  v50 = *(_QWORD *)(v48 + 24);
  if (v51 >= v50 >> 1)
  {
    v48 = sub_1CA26D2EC(v50 > 1, v51 + 1, 1, v48);
    *v47 = v48;
  }
  *(_QWORD *)(v48 + 16) = v51 + 1;
  (*(void (**)(unint64_t, char *, uint64_t))(v45 + 32))(v48+ ((*(unsigned __int8 *)(v45 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v45 + 80))+ *(_QWORD *)(v45 + 72) * v51, v46, v44);

  (*(void (**)(char *, uint64_t))(v45 + 8))(v43, v44);
}

uint64_t sub_1CA313A2C(_QWORD **a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6[2];

  v2 = *(_QWORD *)(sub_1CA85ADA8() - 8);
  v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v3 = (_QWORD *)sub_1CA3A7980(v3);
  v4 = v3[2];
  v6[0] = (uint64_t)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v6[1] = v4;
  result = sub_1CA313B38(v6);
  *a1 = v3;
  return result;
}

uint64_t sub_1CA313AAC(uint64_t *a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8[2];

  v4 = *(_QWORD *)(sub_1CA85ADA8() - 8);
  v5 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v5 = a2(v5);
  v6 = *(_QWORD *)(v5 + 16);
  v8[0] = v5 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  v8[1] = v6;
  result = sub_1CA314B34(v8);
  *a1 = v5;
  return result;
}

uint64_t sub_1CA313B38(uint64_t *a1)
{
  unsigned int (*v1)(uint64_t, uint64_t, uint64_t);
  unsigned int (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t result;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void (*v61)(char *, uint64_t, uint64_t);
  uint64_t v62;
  uint64_t v63;
  unsigned int (*v64)(uint64_t, uint64_t, uint64_t);
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  unsigned int v69;
  uint64_t v70;
  char *v71;
  void (*v72)(char *, uint64_t);
  void (*v73)(char *, uint64_t);
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  void (*v77)(char *, uint64_t, uint64_t);
  uint64_t v78;
  uint64_t v79;
  unsigned int (*v80)(char *, uint64_t, uint64_t);
  uint64_t v81;
  char *v82;
  char *v83;
  int v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  void (*v100)(char *, uint64_t, uint64_t);
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  unsigned int (*v104)(uint64_t, uint64_t, uint64_t);
  uint64_t v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  char *v109;
  char v110;
  char *v111;
  char v112;
  void (*v113)(char *, uint64_t);
  void (*v114)(char *, uint64_t);
  uint64_t v115;
  char *v116;
  void (*v117)(char *, uint64_t, uint64_t);
  char isUniquelyReferenced_nonNull_native;
  unint64_t v119;
  unint64_t v120;
  char *v121;
  char *v122;
  uint64_t v123;
  unint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  char v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  BOOL v135;
  unint64_t v136;
  char *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  char *v142;
  uint64_t v143;
  uint64_t v144;
  BOOL v145;
  uint64_t v146;
  char v147;
  char *v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  BOOL v152;
  uint64_t v153;
  uint64_t v154;
  char *v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  char *v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  unint64_t v163;
  char *v164;
  char *v165;
  uint64_t v166;
  char *v167;
  uint64_t v168;
  unint64_t v169;
  uint64_t v170;
  unint64_t v171;
  char *v172;
  char *v173;
  uint64_t v174;
  uint64_t v175;
  char *v176;
  unint64_t v177;
  uint64_t v178;
  uint64_t v179;
  char *v180;
  char *v181;
  char *v182;
  char *v183;
  char *v184;
  char *v185;
  char *v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  unsigned int (*v190)(uint64_t, uint64_t, uint64_t);
  char *v191;
  char *v192;
  char *v193;
  char *v194;
  uint64_t v195;
  char *v196;
  char *v197;
  unint64_t v198;
  char *v199;
  void (*v200)(char *, uint64_t, uint64_t);
  char *v201;
  char *v202;
  char *v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  char *v207;
  char *v208;
  char *v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t *v212;
  uint64_t v213;
  uint64_t v214;
  char *v215;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8711C0);
  v5 = MEMORY[0x1E0C80A78](v4);
  v203 = (char *)&v178 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v178 - v8;
  v10 = MEMORY[0x1E0C80A78](v7);
  v12 = (char *)&v178 - v11;
  v13 = MEMORY[0x1E0C80A78](v10);
  v15 = (char *)&v178 - v14;
  v16 = MEMORY[0x1E0C80A78](v13);
  v182 = (char *)&v178 - v17;
  MEMORY[0x1E0C80A78](v16);
  v181 = (char *)&v178 - v18;
  v205 = sub_1CA85A5B0();
  v19 = *(_QWORD *)(v205 - 8);
  v20 = MEMORY[0x1E0C80A78](v205);
  v202 = (char *)&v178 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = MEMORY[0x1E0C80A78](v20);
  v209 = (char *)&v178 - v23;
  v24 = MEMORY[0x1E0C80A78](v22);
  v26 = (char *)&v178 - v25;
  v27 = MEMORY[0x1E0C80A78](v24);
  v197 = (char *)&v178 - v28;
  v29 = MEMORY[0x1E0C80A78](v27);
  v180 = (char *)&v178 - v30;
  MEMORY[0x1E0C80A78](v29);
  v184 = (char *)&v178 - v31;
  v206 = sub_1CA85ADA8();
  v213 = *(_QWORD *)(v206 - 8);
  v32 = MEMORY[0x1E0C80A78](v206);
  v193 = (char *)&v178 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = MEMORY[0x1E0C80A78](v32);
  v207 = (char *)&v178 - v35;
  v36 = MEMORY[0x1E0C80A78](v34);
  v215 = (char *)&v178 - v37;
  v38 = MEMORY[0x1E0C80A78](v36);
  v208 = (char *)&v178 - v39;
  v40 = MEMORY[0x1E0C80A78](v38);
  v199 = (char *)&v178 - v41;
  v42 = MEMORY[0x1E0C80A78](v40);
  v196 = (char *)&v178 - v43;
  v44 = MEMORY[0x1E0C80A78](v42);
  v186 = (char *)&v178 - v45;
  MEMORY[0x1E0C80A78](v44);
  v185 = (char *)&v178 - v46;
  v212 = a1;
  v47 = a1[1];
  result = sub_1CA85C254();
  if (result >= v47)
  {
    if (v47 < 0)
      goto LABEL_157;
    if (v47)
      return sub_1CA3156CC(0, v47, 1, v212);
    return result;
  }
  if (v47 >= 0)
    v49 = v47;
  else
    v49 = v47 + 1;
  if (v47 < -1)
    goto LABEL_165;
  v201 = v9;
  v179 = result;
  if (v47 < 2)
  {
    v53 = (char *)MEMORY[0x1E0DEE9D8];
    v198 = MEMORY[0x1E0DEE9D8]
         + ((*(unsigned __int8 *)(v213 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v213 + 80));
    v178 = MEMORY[0x1E0DEE9D8];
    if (v47 != 1)
    {
      v55 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
LABEL_123:
      if (v55 >= 2)
      {
        v170 = *v212;
        do
        {
          v171 = v55 - 2;
          if (v55 < 2)
            goto LABEL_152;
          if (!v170)
            goto LABEL_164;
          v172 = v53;
          v173 = v53 + 32;
          v174 = *(_QWORD *)&v53[16 * v171 + 32];
          v175 = *(_QWORD *)&v53[16 * v55 + 24];
          sub_1CA315DA4(v170 + *(_QWORD *)(v213 + 72) * v174, v170 + *(_QWORD *)(v213 + 72) * *(_QWORD *)&v173[16 * v55 - 16], v170 + *(_QWORD *)(v213 + 72) * v175, v198);
          if (v2)
            break;
          if (v175 < v174)
            goto LABEL_153;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v172 = sub_1CA3A78E0((uint64_t)v172);
          if (v171 >= *((_QWORD *)v172 + 2))
            goto LABEL_154;
          v176 = &v172[16 * v171 + 32];
          *(_QWORD *)v176 = v174;
          *((_QWORD *)v176 + 1) = v175;
          v177 = *((_QWORD *)v172 + 2);
          if (v55 > v177)
            goto LABEL_155;
          v53 = v172;
          memmove(&v172[16 * v55 + 16], &v172[16 * v55 + 32], 16 * (v177 - v55));
          *((_QWORD *)v172 + 2) = v177 - 1;
          v55 = v177 - 1;
        }
        while (v177 > 2);
      }
LABEL_134:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v178 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    v50 = v49 >> 1;
    v51 = sub_1CA85B81C();
    *(_QWORD *)(v51 + 16) = v50;
    v52 = *(unsigned __int8 *)(v213 + 80);
    v178 = v51;
    v198 = v51 + ((v52 + 32) & ~v52);
  }
  v54 = 0;
  v53 = (char *)MEMORY[0x1E0DEE9D8];
  v192 = v15;
  v214 = v19;
  v191 = v26;
  v194 = v12;
  while (1)
  {
    v56 = v54;
    v57 = v54 + 1;
    v195 = v54;
    if (v54 + 1 >= v47)
    {
      v66 = v206;
    }
    else
    {
      v210 = v47;
      v58 = *v212;
      v59 = *(_QWORD *)(v213 + 72);
      v189 = v54 + 1;
      v60 = v58 + v59 * v57;
      v61 = *(void (**)(char *, uint64_t, uint64_t))(v213 + 16);
      v62 = v206;
      v61(v185, v60, v206);
      v187 = v58;
      v211 = v59;
      v200 = v61;
      v61(v186, v58 + v59 * v56, v62);
      v63 = (uint64_t)v181;
      sub_1CA85AD9C();
      v64 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48);
      v65 = v205;
      if (v64(v63, 1, v205) == 1)
      {
        sub_1CA85A4C0();
        sub_1CA267BE8(v63, &qword_1ED8711C0);
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v19 + 32))(v184, v63, v65);
      }
      v67 = v180;
      v68 = (uint64_t)v182;
      sub_1CA85AD9C();
      v69 = v64(v68, 1, v65);
      v183 = v53;
      if (v69 == 1)
      {
        sub_1CA85A4C0();
        sub_1CA267BE8(v68, &qword_1ED8711C0);
        v70 = v214;
      }
      else
      {
        v70 = v214;
        (*(void (**)(char *, uint64_t, uint64_t))(v214 + 32))(v67, v68, v65);
      }
      v71 = v184;
      LODWORD(v204) = sub_1CA85A520();
      v72 = *(void (**)(char *, uint64_t))(v70 + 8);
      v72(v67, v65);
      v72(v71, v65);
      v73 = *(void (**)(char *, uint64_t))(v213 + 8);
      v74 = v206;
      v73(v186, v206);
      v73(v185, v74);
      v57 = v56 + 2;
      if (v56 + 2 >= v210)
      {
        v66 = v206;
      }
      else
      {
        v190 = v64;
        v189 *= v211;
        v75 = v187;
        v188 = v211 * v57;
        v66 = v206;
        while (1)
        {
          v76 = v57;
          v77 = v200;
          v200(v196, v75 + v188, v66);
          v77(v199, v75 + v189, v66);
          v78 = (uint64_t)v192;
          sub_1CA85AD9C();
          v79 = v205;
          v80 = (unsigned int (*)(char *, uint64_t, uint64_t))v190;
          if (v190(v78, 1, v205) == 1)
          {
            sub_1CA85A4C0();
            sub_1CA267BE8(v78, &qword_1ED8711C0);
          }
          else
          {
            (*(void (**)(char *, uint64_t, uint64_t))(v214 + 32))(v197, v78, v79);
          }
          v81 = v79;
          sub_1CA85AD9C();
          if (v80(v12, 1, v79) == 1)
          {
            v82 = v191;
            sub_1CA85A4C0();
            sub_1CA267BE8((uint64_t)v12, &qword_1ED8711C0);
          }
          else
          {
            v82 = v191;
            (*(void (**)(char *, char *, uint64_t))(v214 + 32))(v191, v12, v79);
          }
          v83 = v197;
          v84 = sub_1CA85A520();
          v72(v82, v81);
          v72(v83, v81);
          v66 = v206;
          v73(v199, v206);
          v73(v196, v66);
          if (((v204 ^ v84) & 1) != 0)
            break;
          v57 = v76 + 1;
          v75 += v211;
          v12 = v194;
          if (v210 == v76 + 1)
          {
            v47 = v210;
            v57 = v210;
            v56 = v195;
            goto LABEL_37;
          }
        }
        v57 = v76;
        v56 = v195;
      }
      v47 = v210;
LABEL_37:
      v19 = v214;
      v53 = v183;
      if ((v204 & 1) != 0)
      {
        if (v57 < v56)
          goto LABEL_158;
        if (v56 < v57)
        {
          v85 = 0;
          v86 = v211 * (v57 - 1);
          v87 = v57 * v211;
          v88 = v56;
          v89 = v56 * v211;
          do
          {
            if (v88 != v57 + v85 - 1)
            {
              if (!v187)
                goto LABEL_163;
              v190 = v2;
              v91 = v187 + v89;
              v92 = v187 + v86;
              v93 = v187;
              v204 = *(_QWORD *)(v213 + 32);
              ((void (*)(char *, uint64_t, uint64_t))v204)(v193, v187 + v89, v206);
              if (v89 < v86 || v91 >= v93 + v87)
              {
                v90 = v206;
                swift_arrayInitWithTakeFrontToBack();
              }
              else
              {
                v90 = v206;
                if (v89 != v86)
                  swift_arrayInitWithTakeBackToFront();
              }
              ((void (*)(uint64_t, char *, uint64_t))v204)(v92, v193, v90);
              v19 = v214;
              v2 = v190;
            }
            ++v88;
            --v85;
            v86 -= v211;
            v87 -= v211;
            v89 += v211;
          }
          while (v88 < v57 + v85);
          v66 = v206;
          v53 = v183;
          v56 = v195;
          v47 = v210;
        }
      }
    }
    if (v57 < v47)
    {
      if (__OFSUB__(v57, v56))
        goto LABEL_156;
      if (v57 - v56 < v179)
        break;
    }
LABEL_75:
    if (v57 < v56)
      goto LABEL_151;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v211 = v57;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      v53 = sub_1CA3A7130(0, *((_QWORD *)v53 + 2) + 1, 1, v53);
    v120 = *((_QWORD *)v53 + 2);
    v119 = *((_QWORD *)v53 + 3);
    v55 = v120 + 1;
    if (v120 >= v119 >> 1)
      v53 = sub_1CA3A7130((char *)(v119 > 1), v120 + 1, 1, v53);
    *((_QWORD *)v53 + 2) = v55;
    v121 = v53 + 32;
    v122 = &v53[16 * v120 + 32];
    v123 = v211;
    *(_QWORD *)v122 = v56;
    *((_QWORD *)v122 + 1) = v123;
    if (v120)
    {
      while (1)
      {
        v124 = v55 - 1;
        if (v55 >= 4)
        {
          v129 = &v121[16 * v55];
          v130 = *((_QWORD *)v129 - 8);
          v131 = *((_QWORD *)v129 - 7);
          v135 = __OFSUB__(v131, v130);
          v132 = v131 - v130;
          if (v135)
            goto LABEL_140;
          v134 = *((_QWORD *)v129 - 6);
          v133 = *((_QWORD *)v129 - 5);
          v135 = __OFSUB__(v133, v134);
          v127 = v133 - v134;
          v128 = v135;
          if (v135)
            goto LABEL_141;
          v136 = v55 - 2;
          v137 = &v121[16 * v55 - 32];
          v139 = *(_QWORD *)v137;
          v138 = *((_QWORD *)v137 + 1);
          v135 = __OFSUB__(v138, v139);
          v140 = v138 - v139;
          if (v135)
            goto LABEL_143;
          v135 = __OFADD__(v127, v140);
          v141 = v127 + v140;
          if (v135)
            goto LABEL_146;
          if (v141 >= v132)
          {
            v159 = &v121[16 * v124];
            v161 = *(_QWORD *)v159;
            v160 = *((_QWORD *)v159 + 1);
            v135 = __OFSUB__(v160, v161);
            v162 = v160 - v161;
            if (v135)
              goto LABEL_150;
            v152 = v127 < v162;
            goto LABEL_112;
          }
        }
        else
        {
          if (v55 != 3)
          {
            v153 = *((_QWORD *)v53 + 4);
            v154 = *((_QWORD *)v53 + 5);
            v135 = __OFSUB__(v154, v153);
            v146 = v154 - v153;
            v147 = v135;
            goto LABEL_106;
          }
          v126 = *((_QWORD *)v53 + 4);
          v125 = *((_QWORD *)v53 + 5);
          v135 = __OFSUB__(v125, v126);
          v127 = v125 - v126;
          v128 = v135;
        }
        if ((v128 & 1) != 0)
          goto LABEL_142;
        v136 = v55 - 2;
        v142 = &v121[16 * v55 - 32];
        v144 = *(_QWORD *)v142;
        v143 = *((_QWORD *)v142 + 1);
        v145 = __OFSUB__(v143, v144);
        v146 = v143 - v144;
        v147 = v145;
        if (v145)
          goto LABEL_145;
        v148 = &v121[16 * v124];
        v150 = *(_QWORD *)v148;
        v149 = *((_QWORD *)v148 + 1);
        v135 = __OFSUB__(v149, v150);
        v151 = v149 - v150;
        if (v135)
          goto LABEL_148;
        if (__OFADD__(v146, v151))
          goto LABEL_149;
        if (v146 + v151 >= v127)
        {
          v152 = v127 < v151;
LABEL_112:
          if (v152)
            v124 = v136;
          goto LABEL_114;
        }
LABEL_106:
        if ((v147 & 1) != 0)
          goto LABEL_144;
        v155 = &v121[16 * v124];
        v157 = *(_QWORD *)v155;
        v156 = *((_QWORD *)v155 + 1);
        v135 = __OFSUB__(v156, v157);
        v158 = v156 - v157;
        if (v135)
          goto LABEL_147;
        if (v158 < v146)
          goto LABEL_14;
LABEL_114:
        v163 = v124 - 1;
        if (v124 - 1 >= v55)
        {
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
LABEL_154:
          __break(1u);
LABEL_155:
          __break(1u);
LABEL_156:
          __break(1u);
LABEL_157:
          __break(1u);
LABEL_158:
          __break(1u);
LABEL_159:
          __break(1u);
          goto LABEL_160;
        }
        if (!*v212)
          goto LABEL_162;
        v164 = v53;
        v165 = &v121[16 * v163];
        v166 = *(_QWORD *)v165;
        v167 = &v121[16 * v124];
        v168 = *((_QWORD *)v167 + 1);
        sub_1CA315DA4(*v212 + *(_QWORD *)(v213 + 72) * *(_QWORD *)v165, *v212 + *(_QWORD *)(v213 + 72) * *(_QWORD *)v167, *v212 + *(_QWORD *)(v213 + 72) * v168, v198);
        if (v2)
          goto LABEL_134;
        if (v168 < v166)
          goto LABEL_137;
        if (v124 > *((_QWORD *)v164 + 2))
          goto LABEL_138;
        *(_QWORD *)v165 = v166;
        *(_QWORD *)&v121[16 * v163 + 8] = v168;
        v169 = *((_QWORD *)v164 + 2);
        if (v124 >= v169)
          goto LABEL_139;
        v53 = v164;
        v55 = v169 - 1;
        memmove(&v121[16 * v124], v167 + 16, 16 * (v169 - 1 - v124));
        *((_QWORD *)v164 + 2) = v169 - 1;
        v19 = v214;
        if (v169 <= 2)
          goto LABEL_14;
      }
    }
    v55 = 1;
LABEL_14:
    v47 = v212[1];
    v54 = v211;
    v12 = v194;
    if (v211 >= v47)
      goto LABEL_123;
  }
  if (__OFADD__(v56, v179))
    goto LABEL_159;
  if (v56 + v179 >= v47)
    v94 = v47;
  else
    v94 = v56 + v179;
  if (v94 >= v56)
  {
    if (v57 != v94)
    {
      v183 = v53;
      v190 = v2;
      v95 = *(_QWORD *)(v213 + 72);
      v200 = *(void (**)(char *, uint64_t, uint64_t))(v213 + 16);
      v204 = v95;
      v210 = v57 * v95;
      v211 = v95 * (v57 - 1);
      v189 = v94;
      do
      {
        v96 = 0;
        v97 = v56;
        while (1)
        {
          v98 = v57;
          v99 = *v212;
          v100 = v200;
          v200(v208, v210 + v96 + *v212, v66);
          v100(v215, v211 + v96 + v99, v66);
          v101 = (uint64_t)v201;
          sub_1CA85AD9C();
          v102 = v101;
          v103 = v214;
          v104 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v214 + 48);
          v105 = v205;
          if (v104(v102, 1, v205) == 1)
          {
            sub_1CA85A4C0();
            sub_1CA267BE8(v102, &qword_1ED8711C0);
          }
          else
          {
            (*(void (**)(char *, uint64_t, uint64_t))(v103 + 32))(v209, v102, v105);
          }
          v106 = (uint64_t)v203;
          sub_1CA85AD9C();
          if (v104(v106, 1, v105) == 1)
          {
            v107 = v202;
            sub_1CA85A4C0();
            sub_1CA267BE8(v106, &qword_1ED8711C0);
            v108 = v214;
          }
          else
          {
            v108 = v214;
            v107 = v202;
            (*(void (**)(char *, uint64_t, uint64_t))(v214 + 32))(v202, v106, v105);
          }
          v109 = v209;
          v110 = sub_1CA85A520();
          v111 = v107;
          v112 = v110;
          v113 = *(void (**)(char *, uint64_t))(v108 + 8);
          v113(v111, v105);
          v113(v109, v105);
          v114 = *(void (**)(char *, uint64_t))(v213 + 8);
          v66 = v206;
          v114(v215, v206);
          v114(v208, v66);
          if ((v112 & 1) == 0)
            break;
          v115 = *v212;
          if (!*v212)
            goto LABEL_161;
          v116 = (char *)(v115 + v211 + v96);
          v117 = *(void (**)(char *, uint64_t, uint64_t))(v213 + 32);
          v117(v207, v115 + v210 + v96, v66);
          swift_arrayInitWithTakeFrontToBack();
          v117(v116, (uint64_t)v207, v66);
          v96 -= v204;
          ++v97;
          v57 = v98;
          if (v98 == v97)
            goto LABEL_62;
        }
        v57 = v98;
LABEL_62:
        ++v57;
        v211 += v204;
        v210 += v204;
        v56 = v195;
      }
      while (v57 != v189);
      v57 = v189;
      v2 = v190;
      v19 = v214;
      v53 = v183;
    }
    goto LABEL_75;
  }
LABEL_160:
  __break(1u);
LABEL_161:
  __break(1u);
LABEL_162:
  __break(1u);
LABEL_163:
  __break(1u);
LABEL_164:
  __break(1u);
LABEL_165:
  result = sub_1CA85C038();
  __break(1u);
  return result;
}

uint64_t sub_1CA314B34(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char *v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  void (*v41)(char *, uint64_t);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void (*v65)(char *, uint64_t);
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void (*v69)(char *, uint64_t, uint64_t);
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char v74;
  void (*v75)(char *, uint64_t);
  uint64_t v76;
  char *v77;
  void (*v78)(char *, uint64_t, uint64_t);
  unint64_t v79;
  unint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  unint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  BOOL v95;
  unint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  BOOL v105;
  uint64_t v106;
  char v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  BOOL v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  unint64_t v123;
  char *v124;
  char *v125;
  uint64_t v126;
  char *v127;
  uint64_t v128;
  unint64_t v129;
  char *v130;
  uint64_t v131;
  unint64_t v132;
  uint64_t v133;
  uint64_t v134;
  unint64_t v135;
  char *v136;
  unint64_t v137;
  uint64_t v138;
  uint64_t v139;
  char *v140;
  uint64_t v141;
  char *v142;
  char *v143;
  char *v144;
  uint64_t v145;
  char *v146;
  uint64_t v147;
  unint64_t v148;
  char *v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  char *v153;
  char *v154;
  char *v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t *v158;
  uint64_t v159;

  v2 = v1;
  v4 = sub_1CA85ADA8();
  v159 = *(_QWORD *)(v4 - 8);
  v5 = MEMORY[0x1E0C80A78](v4);
  v146 = (char *)&v138 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x1E0C80A78](v5);
  v153 = (char *)&v138 - v8;
  v9 = MEMORY[0x1E0C80A78](v7);
  v155 = (char *)&v138 - v10;
  v11 = MEMORY[0x1E0C80A78](v9);
  v154 = (char *)&v138 - v12;
  v13 = MEMORY[0x1E0C80A78](v11);
  v142 = (char *)&v138 - v14;
  v15 = MEMORY[0x1E0C80A78](v13);
  v149 = (char *)&v138 - v16;
  v17 = MEMORY[0x1E0C80A78](v15);
  v144 = (char *)&v138 - v18;
  MEMORY[0x1E0C80A78](v17);
  v143 = (char *)&v138 - v19;
  v158 = a1;
  v20 = a1[1];
  result = sub_1CA85C254();
  if (result >= v20)
  {
    if (v20 < 0)
      goto LABEL_150;
    if (v20)
      return sub_1CA315ADC(0, v20, 1, v158);
    return result;
  }
  if (v20 >= 0)
    v22 = v20;
  else
    v22 = v20 + 1;
  if (v20 < -1)
    goto LABEL_158;
  v139 = result;
  if (v20 < 2)
  {
    v27 = (char *)MEMORY[0x1E0DEE9D8];
    v26 = MEMORY[0x1E0DEE9D8]
        + ((*(unsigned __int8 *)(v159 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v159 + 80));
    v138 = MEMORY[0x1E0DEE9D8];
    if (v20 != 1)
    {
      v29 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
LABEL_116:
      if (v29 >= 2)
      {
        v131 = *v158;
        do
        {
          v132 = v29 - 2;
          if (v29 < 2)
            goto LABEL_145;
          if (!v131)
            goto LABEL_157;
          v133 = *(_QWORD *)&v27[16 * v132 + 32];
          v134 = *(_QWORD *)&v27[16 * v29 + 24];
          v135 = v26;
          sub_1CA31660C(v131 + *(_QWORD *)(v159 + 72) * v133, v131 + *(_QWORD *)(v159 + 72) * *(_QWORD *)&v27[16 * v29 + 16], v131 + *(_QWORD *)(v159 + 72) * v134, v26);
          if (v2)
            break;
          if (v134 < v133)
            goto LABEL_146;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v27 = sub_1CA3A78E0((uint64_t)v27);
          if (v132 >= *((_QWORD *)v27 + 2))
            goto LABEL_147;
          v136 = &v27[16 * v132 + 32];
          *(_QWORD *)v136 = v133;
          *((_QWORD *)v136 + 1) = v134;
          v137 = *((_QWORD *)v27 + 2);
          if (v29 > v137)
            goto LABEL_148;
          memmove(&v27[16 * v29 + 16], &v27[16 * v29 + 32], 16 * (v137 - v29));
          *((_QWORD *)v27 + 2) = v137 - 1;
          v29 = v137 - 1;
          v26 = v135;
        }
        while (v137 > 2);
      }
LABEL_127:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v138 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    v23 = v22 >> 1;
    v24 = sub_1CA85B81C();
    *(_QWORD *)(v24 + 16) = v23;
    v25 = *(unsigned __int8 *)(v159 + 80);
    v138 = v24;
    v26 = v24 + ((v25 + 32) & ~v25);
  }
  v28 = 0;
  v27 = (char *)MEMORY[0x1E0DEE9D8];
  v148 = v26;
  v152 = v4;
  while (1)
  {
    v30 = v28;
    v31 = v28 + 1;
    if (v28 + 1 >= v20)
    {
      v39 = v28 + 1;
      goto LABEL_67;
    }
    v156 = v20;
    v32 = *v158;
    v33 = *(_QWORD *)(v159 + 72);
    v34 = *(void (**)(char *, uint64_t, uint64_t))(v159 + 16);
    v34(v143, *v158 + v33 * v31, v4);
    v147 = v30;
    v145 = v32;
    v157 = v33;
    v34(v144, v32 + v33 * v30, v4);
    v35 = sub_1CA85AD6C();
    v37 = v36;
    if (v35 == sub_1CA85AD6C() && v37 == v38)
      LODWORD(v151) = 0;
    else
      LODWORD(v151) = sub_1CA85C284();
    v40 = v142;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v41 = *(void (**)(char *, uint64_t))(v159 + 8);
    v42 = v152;
    v41(v144, v152);
    v41(v143, v42);
    v39 = v147 + 2;
    if (v147 + 2 < v156)
    {
      v140 = v27;
      v141 = v2;
      v150 = v157 * v31;
      v43 = v145;
      v44 = v157 * v39;
      while (1)
      {
        v45 = v152;
        v34(v149, v43 + v44, v152);
        v34(v40, v43 + v150, v45);
        v46 = sub_1CA85AD6C();
        v48 = v47;
        if (v46 == sub_1CA85AD6C() && v48 == v49)
          v50 = 0;
        else
          v50 = sub_1CA85C284();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v51 = v152;
        v41(v40, v152);
        v41(v149, v51);
        if (((v151 ^ v50) & 1) != 0)
          break;
        ++v39;
        v43 += v157;
        if (v156 == v39)
        {
          v52 = v156;
          v39 = v156;
          v27 = v140;
          v2 = v141;
          goto LABEL_32;
        }
      }
      v27 = v140;
      v2 = v141;
    }
    v52 = v156;
LABEL_32:
    v30 = v147;
    v53 = v145;
    if ((v151 & 1) == 0)
      break;
    if (v39 < v147)
      goto LABEL_151;
    if (v147 >= v39)
      break;
    v140 = v27;
    v141 = v2;
    v54 = 0;
    v55 = v157 * (v39 - 1);
    v56 = v39 * v157;
    v57 = v147;
    v58 = v147 * v157;
    do
    {
      if (v57 != v39 + v54 - 1)
      {
        if (!v53)
          goto LABEL_156;
        v60 = v39;
        v61 = v53 + v55;
        v151 = *(_QWORD *)(v159 + 32);
        ((void (*)(char *, uint64_t, uint64_t))v151)(v146, v53 + v58, v152);
        if (v58 < v55 || v53 + v58 >= (unint64_t)(v53 + v56))
        {
          v59 = v152;
          swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          v59 = v152;
          if (v58 != v55)
            swift_arrayInitWithTakeBackToFront();
        }
        ((void (*)(uint64_t, char *, uint64_t))v151)(v61, v146, v59);
        v39 = v60;
        v53 = v145;
      }
      ++v57;
      --v54;
      v55 -= v157;
      v56 -= v157;
      v58 += v157;
    }
    while (v57 < v39 + v54);
    v27 = v140;
    v2 = v141;
    v62 = v152;
    v30 = v147;
    v52 = v156;
    if (v39 < v156)
      goto LABEL_48;
LABEL_67:
    if (v39 < v30)
      goto LABEL_144;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v27 = sub_1CA3A7130(0, *((_QWORD *)v27 + 2) + 1, 1, v27);
    v80 = *((_QWORD *)v27 + 2);
    v79 = *((_QWORD *)v27 + 3);
    v29 = v80 + 1;
    v26 = v148;
    v157 = v39;
    if (v80 >= v79 >> 1)
    {
      v130 = sub_1CA3A7130((char *)(v79 > 1), v80 + 1, 1, v27);
      v26 = v148;
      v27 = v130;
    }
    *((_QWORD *)v27 + 2) = v29;
    v81 = v27 + 32;
    v82 = &v27[16 * v80 + 32];
    v83 = v157;
    *(_QWORD *)v82 = v30;
    *((_QWORD *)v82 + 1) = v83;
    if (v80)
    {
      while (1)
      {
        v84 = v29 - 1;
        if (v29 >= 4)
        {
          v89 = &v81[16 * v29];
          v90 = *((_QWORD *)v89 - 8);
          v91 = *((_QWORD *)v89 - 7);
          v95 = __OFSUB__(v91, v90);
          v92 = v91 - v90;
          if (v95)
            goto LABEL_133;
          v94 = *((_QWORD *)v89 - 6);
          v93 = *((_QWORD *)v89 - 5);
          v95 = __OFSUB__(v93, v94);
          v87 = v93 - v94;
          v88 = v95;
          if (v95)
            goto LABEL_134;
          v96 = v29 - 2;
          v97 = &v81[16 * v29 - 32];
          v99 = *(_QWORD *)v97;
          v98 = *((_QWORD *)v97 + 1);
          v95 = __OFSUB__(v98, v99);
          v100 = v98 - v99;
          if (v95)
            goto LABEL_136;
          v95 = __OFADD__(v87, v100);
          v101 = v87 + v100;
          if (v95)
            goto LABEL_139;
          if (v101 >= v92)
          {
            v119 = &v81[16 * v84];
            v121 = *(_QWORD *)v119;
            v120 = *((_QWORD *)v119 + 1);
            v95 = __OFSUB__(v120, v121);
            v122 = v120 - v121;
            if (v95)
              goto LABEL_143;
            v112 = v87 < v122;
            goto LABEL_104;
          }
        }
        else
        {
          if (v29 != 3)
          {
            v113 = *((_QWORD *)v27 + 4);
            v114 = *((_QWORD *)v27 + 5);
            v95 = __OFSUB__(v114, v113);
            v106 = v114 - v113;
            v107 = v95;
            goto LABEL_98;
          }
          v86 = *((_QWORD *)v27 + 4);
          v85 = *((_QWORD *)v27 + 5);
          v95 = __OFSUB__(v85, v86);
          v87 = v85 - v86;
          v88 = v95;
        }
        if ((v88 & 1) != 0)
          goto LABEL_135;
        v96 = v29 - 2;
        v102 = &v81[16 * v29 - 32];
        v104 = *(_QWORD *)v102;
        v103 = *((_QWORD *)v102 + 1);
        v105 = __OFSUB__(v103, v104);
        v106 = v103 - v104;
        v107 = v105;
        if (v105)
          goto LABEL_138;
        v108 = &v81[16 * v84];
        v110 = *(_QWORD *)v108;
        v109 = *((_QWORD *)v108 + 1);
        v95 = __OFSUB__(v109, v110);
        v111 = v109 - v110;
        if (v95)
          goto LABEL_141;
        if (__OFADD__(v106, v111))
          goto LABEL_142;
        if (v106 + v111 >= v87)
        {
          v112 = v87 < v111;
LABEL_104:
          if (v112)
            v84 = v96;
          goto LABEL_106;
        }
LABEL_98:
        if ((v107 & 1) != 0)
          goto LABEL_137;
        v115 = &v81[16 * v84];
        v117 = *(_QWORD *)v115;
        v116 = *((_QWORD *)v115 + 1);
        v95 = __OFSUB__(v116, v117);
        v118 = v116 - v117;
        if (v95)
          goto LABEL_140;
        if (v118 < v106)
          goto LABEL_14;
LABEL_106:
        v123 = v84 - 1;
        if (v84 - 1 >= v29)
        {
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
          goto LABEL_153;
        }
        if (!*v158)
          goto LABEL_155;
        v124 = v27;
        v125 = &v81[16 * v123];
        v126 = *(_QWORD *)v125;
        v127 = &v81[16 * v84];
        v128 = *((_QWORD *)v127 + 1);
        sub_1CA31660C(*v158 + *(_QWORD *)(v159 + 72) * *(_QWORD *)v125, *v158 + *(_QWORD *)(v159 + 72) * *(_QWORD *)v127, *v158 + *(_QWORD *)(v159 + 72) * v128, v26);
        if (v2)
          goto LABEL_127;
        if (v128 < v126)
          goto LABEL_130;
        if (v84 > *((_QWORD *)v124 + 2))
          goto LABEL_131;
        *(_QWORD *)v125 = v126;
        *(_QWORD *)&v81[16 * v123 + 8] = v128;
        v129 = *((_QWORD *)v124 + 2);
        if (v84 >= v129)
          goto LABEL_132;
        v27 = v124;
        v29 = v129 - 1;
        memmove(&v81[16 * v84], v127 + 16, 16 * (v129 - 1 - v84));
        *((_QWORD *)v124 + 2) = v129 - 1;
        v26 = v148;
        if (v129 <= 2)
          goto LABEL_14;
      }
    }
    v29 = 1;
LABEL_14:
    v20 = v158[1];
    v28 = v157;
    v4 = v152;
    if (v157 >= v20)
      goto LABEL_116;
  }
  v62 = v152;
  if (v39 >= v52)
    goto LABEL_67;
LABEL_48:
  if (__OFSUB__(v39, v30))
    goto LABEL_149;
  if (v39 - v30 >= v139)
    goto LABEL_67;
  if (__OFADD__(v30, v139))
    goto LABEL_152;
  if (v30 + v139 >= v52)
    v63 = v52;
  else
    v63 = v30 + v139;
  if (v63 >= v30)
  {
    if (v39 != v63)
    {
      v147 = v30;
      v140 = v27;
      v141 = v2;
      v64 = *(_QWORD *)(v159 + 72);
      v150 = *(_QWORD *)(v159 + 16);
      v151 = v64;
      v156 = v39 * v64;
      v157 = v64 * (v39 - 1);
      v145 = v63;
      do
      {
        v66 = 0;
        v67 = v147;
        while (1)
        {
          v68 = *v158;
          v69 = (void (*)(char *, uint64_t, uint64_t))v150;
          ((void (*)(char *, uint64_t, uint64_t))v150)(v154, v156 + v66 + *v158, v62);
          v69(v155, v157 + v66 + v68, v62);
          v70 = sub_1CA85AD6C();
          v72 = v71;
          if (v70 == sub_1CA85AD6C() && v72 == v73)
            break;
          v74 = sub_1CA85C284();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v75 = *(void (**)(char *, uint64_t))(v159 + 8);
          v62 = v152;
          v75(v155, v152);
          v75(v154, v62);
          if ((v74 & 1) == 0)
            goto LABEL_58;
          v76 = *v158;
          if (!*v158)
            goto LABEL_154;
          v77 = (char *)(v76 + v157 + v66);
          v78 = *(void (**)(char *, uint64_t, uint64_t))(v159 + 32);
          v78(v153, v76 + v156 + v66, v62);
          swift_arrayInitWithTakeFrontToBack();
          v78(v77, (uint64_t)v153, v62);
          v66 -= v151;
          if (v39 == ++v67)
            goto LABEL_58;
        }
        swift_bridgeObjectRelease_n();
        v65 = *(void (**)(char *, uint64_t))(v159 + 8);
        v62 = v152;
        v65(v155, v152);
        v65(v154, v62);
LABEL_58:
        ++v39;
        v157 += v151;
        v156 += v151;
      }
      while (v39 != v145);
      v39 = v145;
      v27 = v140;
      v2 = v141;
      v30 = v147;
    }
    goto LABEL_67;
  }
LABEL_153:
  __break(1u);
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  result = sub_1CA85C038();
  __break(1u);
  return result;
}

uint64_t sub_1CA3156CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t, uint64_t);
  char *v28;
  uint64_t v29;
  uint64_t v30;
  unsigned int (*v31)(uint64_t, uint64_t, uint64_t);
  uint64_t v32;
  char *v33;
  uint64_t v34;
  char *v35;
  char v36;
  char *v37;
  char v38;
  void (*v39)(char *, uint64_t);
  void (*v40)(char *, uint64_t);
  uint64_t v41;
  uint64_t v42;
  void (*v43)(char *, uint64_t, uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(char *, uint64_t, uint64_t);
  char *v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t *v57;
  _QWORD *v58;
  char *v59;
  char *v60;
  uint64_t v61;
  char *v62;

  v57 = a4;
  v46 = a1;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8711C0);
  v7 = MEMORY[0x1E0C80A78](v6);
  v49 = (char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v50 = (char *)&v44 - v9;
  v10 = sub_1CA85A5B0();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x1E0C80A78](v10);
  v48 = (char *)&v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v60 = (char *)&v44 - v14;
  v15 = sub_1CA85ADA8();
  v58 = *(_QWORD **)(v15 - 8);
  v16 = MEMORY[0x1E0C80A78](v15);
  v54 = (char *)&v44 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x1E0C80A78](v16);
  v62 = (char *)&v44 - v19;
  result = MEMORY[0x1E0C80A78](v18);
  v59 = (char *)&v44 - v21;
  v53 = a3;
  v45 = a2;
  if (a3 != a2)
  {
    v22 = v58[9];
    v47 = (void (*)(char *, uint64_t, uint64_t))v58[2];
    v61 = v22 * (v53 - 1);
    v51 = v22;
    v23 = v22 * v53;
    v56 = v11;
LABEL_5:
    v24 = 0;
    v25 = v46;
    v52 = v23;
    while (1)
    {
      v26 = *v57;
      v55 = v23 + v24;
      v27 = v47;
      v47(v59, v23 + v24 + v26, v15);
      v27(v62, v61 + v24 + v26, v15);
      v28 = v50;
      sub_1CA85AD9C();
      v29 = (uint64_t)v28;
      v30 = v11;
      v31 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
      if (v31(v29, 1, v10) == 1)
      {
        sub_1CA85A4C0();
        sub_1CA267BE8(v29, &qword_1ED8711C0);
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v30 + 32))(v60, v29, v10);
      }
      v32 = (uint64_t)v49;
      sub_1CA85AD9C();
      if (v31(v32, 1, v10) == 1)
      {
        v33 = v48;
        sub_1CA85A4C0();
        sub_1CA267BE8(v32, &qword_1ED8711C0);
        v11 = v56;
      }
      else
      {
        v11 = v56;
        v33 = v48;
        (*(void (**)(char *, uint64_t, uint64_t))(v56 + 32))(v48, v32, v10);
      }
      v34 = v10;
      v35 = v60;
      v36 = sub_1CA85A520();
      v37 = v33;
      v38 = v36;
      v39 = *(void (**)(char *, uint64_t))(v11 + 8);
      v39(v37, v34);
      v39(v35, v34);
      v40 = (void (*)(char *, uint64_t))v58[1];
      v40(v62, v15);
      result = ((uint64_t (*)(char *, uint64_t))v40)(v59, v15);
      v10 = v34;
      v23 = v52;
      if ((v38 & 1) == 0)
      {
LABEL_4:
        v61 += v51;
        v23 += v51;
        if (++v53 == v45)
          return result;
        goto LABEL_5;
      }
      v41 = *v57;
      if (!*v57)
        break;
      v42 = v41 + v61 + v24;
      v43 = (void (*)(char *, uint64_t, uint64_t))v58[4];
      v43(v54, v41 + v52 + v24, v15);
      swift_arrayInitWithTakeFrontToBack();
      result = ((uint64_t (*)(uint64_t, char *, uint64_t))v43)(v42, v54, v15);
      v24 -= v51;
      ++v25;
      v11 = v56;
      if (v53 == v25)
        goto LABEL_4;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1CA315ADC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  void (*v25)(char *, uint64_t);
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t *v37;
  _QWORD *v38;
  char *v39;
  char *v40;
  uint64_t v41;

  v37 = a4;
  v31 = a1;
  v6 = sub_1CA85ADA8();
  v38 = *(_QWORD **)(v6 - 8);
  v7 = MEMORY[0x1E0C80A78](v6);
  v36 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x1E0C80A78](v7);
  v40 = (char *)&v29 - v10;
  result = MEMORY[0x1E0C80A78](v9);
  v39 = (char *)&v29 - v12;
  v35 = a3;
  v30 = a2;
  if (a3 != a2)
  {
    v13 = v38[9];
    v32 = (void (*)(char *, uint64_t, uint64_t))v38[2];
    v33 = v13;
    v14 = v13 * (v35 - 1);
    v41 = v13 * v35;
LABEL_6:
    v16 = 0;
    v17 = v31;
    v34 = v14;
    while (1)
    {
      v18 = *v37;
      v19 = v32;
      v32(v39, v41 + v16 + *v37, v6);
      v19(v40, v14 + v16 + v18, v6);
      v20 = sub_1CA85AD6C();
      v22 = v21;
      if (v20 == sub_1CA85AD6C() && v22 == v23)
      {
        swift_bridgeObjectRelease_n();
        v15 = (void (*)(char *, uint64_t))v38[1];
        v15(v40, v6);
        result = ((uint64_t (*)(char *, uint64_t))v15)(v39, v6);
        v14 = v34;
LABEL_5:
        v14 += v33;
        v41 += v33;
        if (++v35 == v30)
          return result;
        goto LABEL_6;
      }
      v24 = sub_1CA85C284();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v25 = (void (*)(char *, uint64_t))v38[1];
      v25(v40, v6);
      result = ((uint64_t (*)(char *, uint64_t))v25)(v39, v6);
      v14 = v34;
      if ((v24 & 1) == 0)
        goto LABEL_5;
      v26 = *v37;
      if (!*v37)
        break;
      v27 = v26 + v34 + v16;
      v28 = (void (*)(char *, uint64_t, uint64_t))v38[4];
      v28(v36, v26 + v41 + v16, v6);
      swift_arrayInitWithTakeFrontToBack();
      result = ((uint64_t (*)(uint64_t, char *, uint64_t))v28)(v27, v36, v6);
      v16 -= v33;
      if (v35 == ++v17)
        goto LABEL_5;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1CA315DA4(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  int64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  unsigned int (*v46)(uint64_t, uint64_t, uint64_t);
  uint64_t v47;
  char *v48;
  uint64_t v49;
  char v50;
  void (*v51)(char *, uint64_t);
  void (*v52)(char *, uint64_t);
  unint64_t v53;
  unint64_t v54;
  unint64_t v55;
  unint64_t v56;
  uint64_t v58;
  void (*v59)(char *, unint64_t, uint64_t);
  unint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  unsigned int (*v64)(uint64_t, uint64_t, uint64_t);
  uint64_t v65;
  uint64_t v66;
  unsigned int v67;
  char *v68;
  unint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  char *v73;
  char v74;
  char *v75;
  char v76;
  void (*v77)(char *, uint64_t);
  void (*v78)(char *, uint64_t);
  BOOL v79;
  unint64_t v80;
  unint64_t v81;
  uint64_t result;
  uint64_t v83;
  unint64_t v84;
  char *v85;
  char *v86;
  void (*v87)(char *, unint64_t, uint64_t);
  char *v88;
  char *v89;
  char *v90;
  char *v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  unint64_t v98;
  unint64_t v99;
  unint64_t v100;
  unint64_t v101;

  v98 = a3;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8711C0);
  v8 = MEMORY[0x1E0C80A78](v7);
  v90 = (char *)&v83 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x1E0C80A78](v8);
  v89 = (char *)&v83 - v11;
  v12 = MEMORY[0x1E0C80A78](v10);
  v88 = (char *)&v83 - v13;
  MEMORY[0x1E0C80A78](v12);
  v87 = (void (*)(char *, unint64_t, uint64_t))((char *)&v83 - v14);
  v15 = sub_1CA85A5B0();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = MEMORY[0x1E0C80A78](v15);
  v86 = (char *)&v83 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x1E0C80A78](v17);
  v93 = (char *)&v83 - v20;
  v21 = MEMORY[0x1E0C80A78](v19);
  v85 = (char *)&v83 - v22;
  MEMORY[0x1E0C80A78](v21);
  v92 = (uint64_t)&v83 - v23;
  v24 = sub_1CA85ADA8();
  v25 = MEMORY[0x1E0C80A78](v24);
  v97 = (char *)&v83 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = MEMORY[0x1E0C80A78](v25);
  v91 = (char *)&v83 - v28;
  v29 = MEMORY[0x1E0C80A78](v27);
  v31 = (char *)&v83 - v30;
  MEMORY[0x1E0C80A78](v29);
  v33 = (char *)&v83 - v32;
  v35 = *(_QWORD *)(v34 + 72);
  v94 = v34;
  v95 = v35;
  if (!v35)
  {
    __break(1u);
LABEL_74:
    __break(1u);
LABEL_75:
    __break(1u);
    goto LABEL_76;
  }
  if (a2 - a1 == 0x8000000000000000 && v95 == -1)
    goto LABEL_74;
  v36 = v98 - a2;
  if (v98 - a2 == 0x8000000000000000 && v95 == -1)
    goto LABEL_75;
  v37 = (uint64_t)(a2 - a1) / v95;
  v101 = a1;
  v100 = a4;
  v38 = v36 / v95;
  v96 = v16;
  if (v37 >= v36 / v95)
  {
    if ((v38 & 0x8000000000000000) == 0)
    {
      v40 = v38 * v95;
      if (a4 < a2 || a2 + v40 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      v56 = a4 + v40;
      v99 = a4 + v40;
      v101 = a2;
      v88 = (char *)a1;
      if (v40 >= 1 && a1 < a2)
      {
        v58 = -v95;
        v87 = *(void (**)(char *, unint64_t, uint64_t))(v94 + 16);
        v84 = a4;
        v92 = -v95;
        do
        {
          v59 = v87;
          v87(v91, v56 + v58, v24);
          v60 = a2 + v58;
          v59(v97, a2 + v58, v24);
          v61 = v89;
          sub_1CA85AD9C();
          v62 = (uint64_t)v61;
          v63 = v96;
          v64 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v96 + 48);
          if (v64(v62, 1, v15) == 1)
          {
            sub_1CA85A4C0();
            sub_1CA267BE8(v62, &qword_1ED8711C0);
          }
          else
          {
            (*(void (**)(char *, uint64_t, uint64_t))(v63 + 32))(v93, v62, v15);
          }
          v65 = v24;
          v66 = (uint64_t)v90;
          sub_1CA85AD9C();
          v67 = v64(v66, 1, v15);
          v95 = a2;
          v68 = v86;
          if (v67 == 1)
          {
            sub_1CA85A4C0();
            sub_1CA267BE8(v66, &qword_1ED8711C0);
          }
          else
          {
            (*(void (**)(char *, uint64_t, uint64_t))(v63 + 32))(v86, v66, v15);
          }
          v69 = v98;
          v70 = v15;
          v72 = v92;
          v71 = v93;
          v73 = (char *)(v98 + v92);
          v74 = sub_1CA85A520();
          v75 = v68;
          v76 = v74;
          v77 = *(void (**)(char *, uint64_t))(v63 + 8);
          v77(v75, v70);
          v77(v71, v70);
          v78 = *(void (**)(char *, uint64_t))(v94 + 8);
          v78(v97, v65);
          v78(v91, v65);
          v15 = v70;
          if ((v76 & 1) != 0)
          {
            if (v69 < v95 || (unint64_t)v73 >= v95)
            {
              v24 = v65;
              swift_arrayInitWithTakeFrontToBack();
              v80 = v84;
              v58 = v92;
            }
            else
            {
              v79 = v69 == v95;
              v80 = v84;
              v24 = v65;
              v58 = v92;
              if (!v79)
                swift_arrayInitWithTakeBackToFront();
            }
            v101 += v58;
          }
          else
          {
            v81 = v99;
            v99 += v72;
            v58 = v72;
            if (v69 < v81 || (unint64_t)v73 >= v81)
            {
              v24 = v65;
              swift_arrayInitWithTakeFrontToBack();
              v60 = v95;
            }
            else
            {
              v24 = v65;
              v60 = v95;
              if (v69 != v81)
                swift_arrayInitWithTakeBackToFront();
            }
            v80 = v84;
          }
          v56 = v99;
          if (v99 <= v80)
            break;
          a2 = v60;
          v98 = (unint64_t)v73;
        }
        while (v60 > (unint64_t)v88);
      }
      goto LABEL_72;
    }
  }
  else if ((v37 & 0x8000000000000000) == 0)
  {
    v39 = v37 * v95;
    if (a4 < a1 || a1 + v39 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    v97 = (char *)(a4 + v39);
    v99 = a4 + v39;
    if (v39 >= 1 && a2 < v98)
    {
      v93 = *(char **)(v94 + 16);
      v42 = (char *)v92;
      do
      {
        v43 = v93;
        ((void (*)(char *, unint64_t, uint64_t))v93)(v33, a2, v24);
        ((void (*)(char *, unint64_t, uint64_t))v43)(v31, a4, v24);
        v44 = (uint64_t)v87;
        sub_1CA85AD9C();
        v45 = v96;
        v46 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v96 + 48);
        if (v46(v44, 1, v15) == 1)
        {
          sub_1CA85A4C0();
          sub_1CA267BE8(v44, &qword_1ED8711C0);
        }
        else
        {
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v45 + 32))(v92, v44, v15);
        }
        v47 = (uint64_t)v88;
        sub_1CA85AD9C();
        if (v46(v47, 1, v15) == 1)
        {
          v48 = v85;
          sub_1CA85A4C0();
          sub_1CA267BE8(v47, &qword_1ED8711C0);
          v49 = v96;
        }
        else
        {
          v49 = v96;
          v48 = v85;
          (*(void (**)(char *, uint64_t, uint64_t))(v96 + 32))(v85, v47, v15);
        }
        v50 = sub_1CA85A520();
        v51 = *(void (**)(char *, uint64_t))(v49 + 8);
        v51(v48, v15);
        v51(v42, v15);
        v52 = *(void (**)(char *, uint64_t))(v94 + 8);
        v52(v31, v24);
        v52(v33, v24);
        v53 = v101;
        if ((v50 & 1) != 0)
        {
          v54 = a2 + v95;
          if (v101 < a2 || v101 >= v54)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v101 == a2)
          {
            v53 = a2;
          }
          else
          {
            swift_arrayInitWithTakeBackToFront();
          }
        }
        else
        {
          v55 = v100 + v95;
          if (v101 < v100 || v101 >= v55)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v101 != v100)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          v100 = v55;
          v54 = a2;
        }
        v101 = v53 + v95;
        a4 = v100;
        if (v100 >= (unint64_t)v97)
          break;
        a2 = v54;
      }
      while (v54 < v98);
    }
LABEL_72:
    sub_1CA3A73AC(&v101, &v100, (uint64_t *)&v99);
    return 1;
  }
LABEL_76:
  result = sub_1CA85C0D4();
  __break(1u);
  return result;
}

uint64_t sub_1CA31660C(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v26)(char *, unint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t);
  char v32;
  void (*v33)(char *, uint64_t);
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v39;
  unint64_t v40;
  void (*v41)(char *, unint64_t, uint64_t);
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  void (*v48)(char *, uint64_t);
  BOOL v49;
  unint64_t v50;
  unint64_t v51;
  unint64_t v52;
  uint64_t result;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  unint64_t v62;
  unint64_t v63;

  v8 = sub_1CA85ADA8();
  v9 = MEMORY[0x1E0C80A78](v8);
  v58 = (char *)&v54 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x1E0C80A78](v9);
  v57 = (char *)&v54 - v12;
  v13 = MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v54 - v14;
  MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v54 - v16;
  v19 = *(_QWORD *)(v18 + 72);
  v59 = v18;
  v60 = v19;
  if (!v19)
  {
    __break(1u);
LABEL_69:
    __break(1u);
LABEL_70:
    __break(1u);
    goto LABEL_71;
  }
  if (a2 - a1 == 0x8000000000000000 && v60 == -1)
    goto LABEL_69;
  v20 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v60 == -1)
    goto LABEL_70;
  v21 = (uint64_t)(a2 - a1) / v60;
  v63 = a1;
  v62 = a4;
  v22 = v20 / v60;
  if (v21 >= v20 / v60)
  {
    if ((v22 & 0x8000000000000000) == 0)
    {
      v24 = v22 * v60;
      if (a4 < a2 || a2 + v24 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      v37 = a4 + v24;
      v61 = a4 + v24;
      v63 = a2;
      if (v24 >= 1 && a1 < a2)
      {
        v39 = -v60;
        v60 = *(_QWORD *)(v59 + 16);
        v55 = a4;
        v56 = a1;
        do
        {
          v40 = a3;
          v41 = (void (*)(char *, unint64_t, uint64_t))v60;
          ((void (*)(char *, unint64_t, uint64_t))v60)(v57, v37 + v39, v8);
          v42 = a2 + v39;
          v41(v58, a2 + v39, v8);
          v43 = sub_1CA85AD6C();
          v45 = v44;
          if (v43 == sub_1CA85AD6C() && v45 == v46)
            v47 = 0;
          else
            v47 = sub_1CA85C284();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          a3 += v39;
          v48 = *(void (**)(char *, uint64_t))(v59 + 8);
          v48(v58, v8);
          v48(v57, v8);
          if ((v47 & 1) != 0)
          {
            if (v40 < a2 || a3 >= a2)
            {
              swift_arrayInitWithTakeFrontToBack();
              v50 = v55;
              v51 = v56;
            }
            else
            {
              v49 = v40 == a2;
              v50 = v55;
              v51 = v56;
              if (!v49)
                swift_arrayInitWithTakeBackToFront();
            }
            v63 += v39;
          }
          else
          {
            v52 = v61;
            v61 += v39;
            if (v40 < v52 || a3 >= v52)
            {
              swift_arrayInitWithTakeFrontToBack();
              v42 = a2;
              v50 = v55;
              v51 = v56;
            }
            else
            {
              v51 = v56;
              if (v40 != v52)
                swift_arrayInitWithTakeBackToFront();
              v42 = a2;
              v50 = v55;
            }
          }
          v37 = v61;
          if (v61 <= v50)
            break;
          a2 = v42;
        }
        while (v42 > v51);
      }
LABEL_67:
      sub_1CA3A73AC(&v63, &v62, (uint64_t *)&v61);
      return 1;
    }
  }
  else if ((v21 & 0x8000000000000000) == 0)
  {
    v23 = v21 * v60;
    if (a4 < a1 || a1 + v23 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    v58 = (char *)(a4 + v23);
    v61 = a4 + v23;
    if (v23 >= 1 && a2 < a3)
    {
      v26 = *(void (**)(char *, unint64_t, uint64_t))(v59 + 16);
      while (1)
      {
        v26(v17, a2, v8);
        v26(v15, a4, v8);
        v27 = sub_1CA85AD6C();
        v29 = v28;
        if (v27 == sub_1CA85AD6C() && v29 == v30)
          break;
        v32 = sub_1CA85C284();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v33 = *(void (**)(char *, uint64_t))(v59 + 8);
        v33(v15, v8);
        v33(v17, v8);
        if ((v32 & 1) == 0)
          goto LABEL_31;
        v34 = v63;
        v35 = a2 + v60;
        if (v63 < a2 || v63 >= v35)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (v63 == a2)
        {
          v34 = a2;
        }
        else
        {
          swift_arrayInitWithTakeBackToFront();
        }
LABEL_37:
        v63 = v34 + v60;
        a4 = v62;
        if (v62 < (unint64_t)v58)
        {
          a2 = v35;
          if (v35 < a3)
            continue;
        }
        goto LABEL_67;
      }
      swift_bridgeObjectRelease_n();
      v31 = *(void (**)(char *, uint64_t))(v59 + 8);
      v31(v15, v8);
      v31(v17, v8);
LABEL_31:
      v34 = v63;
      v36 = v62 + v60;
      if (v63 < v62 || v63 >= v36)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (v63 != v62)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      v62 = v36;
      v35 = a2;
      goto LABEL_37;
    }
    goto LABEL_67;
  }
LABEL_71:
  result = sub_1CA85C0D4();
  __break(1u);
  return result;
}

unint64_t _s11PhotosGraph32ExtendedTokenCollectionGeneratorC012generateTimeC6Tokens3forSay0A12Intelligence0hcD0VGSayAF05QueryD0VG_tF_0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  _BOOL4 v14;
  uint8_t *v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, char *, uint64_t);
  char *v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  _QWORD v33[2];
  char *v34;
  char *v35;
  uint64_t v36;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94C240);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = sub_1CA85ADA8();
  v5 = *(_QWORD *)(v36 - 8);
  v6 = MEMORY[0x1E0C80A78](v36);
  v8 = (char *)v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v34 = (char *)v33 - v9;
  if (qword_1EF94A278 != -1)
    swift_once();
  v10 = sub_1CA85B348();
  v11 = __swift_project_value_buffer(v10, (uint64_t)qword_1EF978150);
  v12 = sub_1CA85B330();
  v13 = sub_1CA85BAC8();
  v14 = os_log_type_enabled(v12, v13);
  v35 = v8;
  if (v14)
  {
    v15 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v15 = 0;
    _os_log_impl(&dword_1CA237000, v12, v13, "generateTimeExtendedTokens for query tokens has started.", v15, 2u);
    v16 = v15;
    v8 = v35;
    MEMORY[0x1CAA4F27C](v16, -1, -1);
  }

  v17 = *(_QWORD *)(a1 + 16);
  if (v17)
  {
    v33[0] = v11;
    v18 = *(_QWORD *)(sub_1CA85AAFC() - 8);
    v19 = a1 + ((*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80));
    v20 = *(_QWORD *)(v18 + 72);
    v33[1] = a1;
    swift_bridgeObjectRetain();
    v21 = MEMORY[0x1E0DEE9D8];
    v22 = v36;
    do
    {
      sub_1CA310B10(v19, (uint64_t)v4);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v4, 1, v22) == 1)
      {
        sub_1CA267BE8((uint64_t)v4, &qword_1EF94C240);
      }
      else
      {
        v23 = v5;
        v24 = *(void (**)(char *, char *, uint64_t))(v5 + 32);
        v25 = v34;
        v24(v34, v4, v36);
        v24(v8, v25, v36);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v21 = sub_1CA26D2EC(0, *(_QWORD *)(v21 + 16) + 1, 1, v21);
        v27 = *(_QWORD *)(v21 + 16);
        v26 = *(_QWORD *)(v21 + 24);
        if (v27 >= v26 >> 1)
          v21 = sub_1CA26D2EC(v26 > 1, v27 + 1, 1, v21);
        *(_QWORD *)(v21 + 16) = v27 + 1;
        v28 = v21
            + ((*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80))
            + *(_QWORD *)(v23 + 72) * v27;
        v8 = v35;
        v22 = v36;
        v24((char *)v28, v35, v36);
        v5 = v23;
      }
      v19 += v20;
      --v17;
    }
    while (v17);
    swift_bridgeObjectRelease();
  }
  else
  {
    v21 = MEMORY[0x1E0DEE9D8];
  }
  v29 = sub_1CA85B330();
  v30 = sub_1CA85BAEC();
  if (os_log_type_enabled(v29, v30))
  {
    v31 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v31 = 0;
    _os_log_impl(&dword_1CA237000, v29, v30, "generateTimeExtendedTokens for query tokens complete.", v31, 2u);
    MEMORY[0x1CAA4F27C](v31, -1, -1);
  }

  return v21;
}

uint64_t sub_1CA316F44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  void *v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int (*v17)(char *, uint64_t, uint64_t);
  uint64_t v18;
  char v19;
  char v20;
  char *v21;
  void (*v22)(char *, uint64_t);
  void *v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  const char *v30;
  char v31;
  char v32;
  uint64_t v33;
  uint64_t v35;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94D040);
  v1 = MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v35 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = MEMORY[0x1E0C80A78](v1);
  v6 = (char *)&v35 - v5;
  v7 = MEMORY[0x1E0C80A78](v4);
  v9 = (char *)&v35 - v8;
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v35 - v10;
  v12 = (void *)objc_opt_self();
  v13 = (void *)sub_1CA85A508();
  v14 = objc_msgSend(v12, sel_components_fromDate_, 8, v13);

  if (v14)
  {
    sub_1CA85A214();

    v15 = sub_1CA85A2A4();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v9, 0, 1, v15);
  }
  else
  {
    v15 = sub_1CA85A2A4();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v9, 1, 1, v15);
  }
  sub_1CA24EEF8((uint64_t)v9, (uint64_t)v11, &qword_1EF94D040);
  sub_1CA85A2A4();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
  if (v17(v11, 1, v15) == 1)
  {
    sub_1CA267BE8((uint64_t)v11, &qword_1EF94D040);
LABEL_9:
    if (qword_1EF94A278 != -1)
      swift_once();
    v26 = sub_1CA85B348();
    __swift_project_value_buffer(v26, (uint64_t)qword_1EF978150);
    v27 = sub_1CA85B330();
    v28 = sub_1CA85BAE0();
    if (!os_log_type_enabled(v27, v28))
      goto LABEL_22;
    v29 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v29 = 0;
    v30 = "monthAndYear: Couldn't extract month from date!";
LABEL_21:
    _os_log_impl(&dword_1CA237000, v27, v28, v30, v29, 2u);
    MEMORY[0x1CAA4F27C](v29, -1, -1);
LABEL_22:

    return 0;
  }
  v18 = sub_1CA85A25C();
  v20 = v19;
  v21 = v11;
  v22 = *(void (**)(char *, uint64_t))(v16 + 8);
  v22(v21, v15);
  if ((v20 & 1) != 0)
    goto LABEL_9;
  v23 = (void *)sub_1CA85A508();
  v24 = objc_msgSend(v12, sel_components_fromDate_, 4, v23);

  if (v24)
  {
    sub_1CA85A214();

    v25 = 0;
  }
  else
  {
    v25 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v3, v25, 1, v15);
  sub_1CA24EEF8((uint64_t)v3, (uint64_t)v6, &qword_1EF94D040);
  if (v17(v6, 1, v15) == 1)
  {
    sub_1CA267BE8((uint64_t)v6, &qword_1EF94D040);
LABEL_17:
    if (qword_1EF94A278 != -1)
      swift_once();
    v33 = sub_1CA85B348();
    __swift_project_value_buffer(v33, (uint64_t)qword_1EF978150);
    v27 = sub_1CA85B330();
    v28 = sub_1CA85BAE0();
    if (!os_log_type_enabled(v27, v28))
      goto LABEL_22;
    v29 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v29 = 0;
    v30 = "monthAndYear: Couldn't extract year from date!";
    goto LABEL_21;
  }
  sub_1CA85A244();
  v32 = v31;
  v22(v6, v15);
  if ((v32 & 1) != 0)
    goto LABEL_17;
  return v18;
}

uint64_t sub_1CA317340(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 0xB)
    return 0;
  else
    return *(_QWORD *)&aJanuary[8 * a1 - 8];
}

char *sub_1CA317378(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void (*v16)(char *, char *, uint64_t);
  char *v17;
  unint64_t v18;
  unint64_t v19;
  _QWORD v21[2];
  unint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  char *v26;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94C240);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1CA85ADA8();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v25 = (char *)v21 - v10;
  v11 = *(_QWORD *)(a1 + 16);
  if (v11)
  {
    v12 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    v21[1] = a1;
    v22 = v12;
    v13 = a1 + v12;
    v14 = *(_QWORD *)(v6 + 72);
    swift_bridgeObjectRetain();
    v15 = (char *)MEMORY[0x1E0DEE9D8];
    v23 = v9;
    v24 = v6;
    do
    {
      sub_1CA312310((uint64_t)v4);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
      {
        sub_1CA267BE8((uint64_t)v4, &qword_1EF94C240);
      }
      else
      {
        v16 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
        v17 = v25;
        v16(v25, v4, v5);
        v16(v9, v17, v5);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v15 = (char *)sub_1CA26D2EC(0, *((_QWORD *)v15 + 2) + 1, 1, (unint64_t)v15);
        v19 = *((_QWORD *)v15 + 2);
        v18 = *((_QWORD *)v15 + 3);
        if (v19 >= v18 >> 1)
          v15 = (char *)sub_1CA26D2EC(v18 > 1, v19 + 1, 1, (unint64_t)v15);
        *((_QWORD *)v15 + 2) = v19 + 1;
        v9 = v23;
        v16(&v15[v22 + v19 * v14], v23, v5);
        v6 = v24;
      }
      v13 += v14;
      --v11;
    }
    while (v11);
    swift_bridgeObjectRelease();
  }
  else
  {
    v15 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v26 = v15;
  swift_bridgeObjectRetain();
  sub_1CA313A2C((_QWORD **)&v26);
  swift_bridgeObjectRelease();
  return v26;
}

uint64_t sub_1CA3175B8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  size_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t, uint64_t);
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  void (*v36)(char *, uint64_t);
  NSObject *v37;
  os_log_type_t v38;
  uint8_t *v39;
  _QWORD v41[2];
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  char *v50;
  char *v51;
  char *v52;
  uint64_t v53;
  size_t v54;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8711C0);
  v3 = MEMORY[0x1E0C80A78](v2);
  MEMORY[0x1E0C80A78](v3);
  v49 = sub_1CA85B1A4();
  v47 = *(_QWORD *)(v49 - 8);
  MEMORY[0x1E0C80A78](v49);
  v5 = (char *)v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1CA85AE50();
  v45 = *(_QWORD *)(v6 - 8);
  v46 = v6;
  MEMORY[0x1E0C80A78](v6);
  v48 = (char *)v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1CA85ADA8();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x1E0C80A78](v8);
  v52 = (char *)v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x1E0C80A78](v10);
  v51 = (char *)v41 - v13;
  MEMORY[0x1E0C80A78](v12);
  v50 = (char *)v41 - v14;
  v54 = MEMORY[0x1E0DEE9E0];
  v15 = *(_QWORD *)(a1 + 16);
  if (v15)
  {
    v16 = a1 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    v17 = *(_QWORD *)(v9 + 72);
    swift_bridgeObjectRetain();
    do
    {
      sub_1CA31278C((uint64_t *)&v54, v16);
      v16 += v17;
      --v15;
    }
    while (v15);
    swift_bridgeObjectRelease();
  }
  v53 = v8;
  v18 = swift_bridgeObjectRetain();
  v19 = sub_1CA243B48(v18);
  swift_bridgeObjectRelease();
  v54 = v19;
  sub_1CA313AAC((uint64_t *)&v54, (uint64_t (*)(uint64_t))sub_1CA3A7980);
  swift_bridgeObjectRelease();
  v20 = v54;
  v21 = *(_QWORD *)(v54 + 16);
  if (v21 > 3)
  {
    if (qword_1EF94A278 != -1)
      swift_once();
    v22 = sub_1CA85B348();
    __swift_project_value_buffer(v22, (uint64_t)qword_1EF978150);
    v23 = sub_1CA85B330();
    v24 = sub_1CA85BAEC();
    if (os_log_type_enabled(v23, v24))
    {
      v25 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v25 = 134217984;
      v54 = v21;
      sub_1CA85BCF0();
      _os_log_impl(&dword_1CA237000, v23, v24, "Too many years (%ld), opting for \"Over the Years\" token instead.", v25, 0xCu);
      MEMORY[0x1CAA4F27C](v25, -1, -1);
    }

    v26 = *(_QWORD *)(v20 + 16);
    if (v26)
    {
      v27 = *(unsigned __int8 *)(v9 + 80);
      v43 = (v27 + 32) & ~v27;
      v44 = v27;
      v28 = v20 + v43;
      v29 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
      v30 = v50;
      v31 = v53;
      v29(v50, v20 + v43, v53);
      v42 = *(_QWORD *)(v9 + 72);
      v32 = v28 + v42 * (v26 - 1);
      v33 = v51;
      v29(v51, v32, v31);
      swift_release();
      v41[1] = sub_1CA85AFA0();
      (*(void (**)(char *, _QWORD, uint64_t))(v45 + 104))(v48, *MEMORY[0x1E0D76F78], v46);
      (*(void (**)(char *, _QWORD, uint64_t))(v47 + 104))(v5, *MEMORY[0x1E0D77D30], v49);
      sub_1CA85AD9C();
      sub_1CA85AD90();
      v34 = v52;
      sub_1CA85AD60();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF94ACA0);
      v35 = v43;
      v20 = swift_allocObject();
      *(_OWORD *)(v20 + 16) = xmmword_1CA8D4E40;
      (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(v20 + v35, v34, v31);
      v36 = *(void (**)(char *, uint64_t))(v9 + 8);
      v36(v33, v31);
      v36(v30, v31);
    }
    else
    {
      v37 = sub_1CA85B330();
      v38 = sub_1CA85BAE0();
      if (os_log_type_enabled(v37, v38))
      {
        v39 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v39 = 0;
        _os_log_impl(&dword_1CA237000, v37, v38, "Could not get first and last time token!", v39, 2u);
        MEMORY[0x1CAA4F27C](v39, -1, -1);
      }

    }
  }
  return v20;
}

uint64_t sub_1CA317AC0(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  char isEscapingClosureAtFileLocation;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  NSObject *v40;
  os_log_type_t v41;
  uint8_t *v42;
  uint64_t v43;
  NSObject *v44;
  os_log_type_t v45;
  uint8_t *v46;
  const char *v47;
  void (*v48)(char *, char *, uint64_t);
  void (*v49)(char *, uint64_t);
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  int64_t v57;
  char v58;
  uint64_t v59;
  NSObject *v60;
  os_log_type_t v61;
  uint8_t *v62;
  uint64_t v63;
  int64_t v64;
  void (*v65)(char *, _QWORD, uint64_t, uint64_t);
  _QWORD *v66;
  void (*v67)(char *, _QWORD, uint64_t, uint64_t);
  char *v68;
  unint64_t v69;
  unint64_t v70;
  void (*v71)(char *, _QWORD, uint64_t, uint64_t);
  void (*v72)(char *, char *, uint64_t);
  _QWORD *v73;
  char *v74;
  unint64_t v75;
  unint64_t v76;
  unint64_t v77;
  void (*v78)(char *, _QWORD, uint64_t, uint64_t);
  char *v79;
  void (*v80)(char *, _QWORD, uint64_t, uint64_t);
  char *v81;
  unint64_t v82;
  unint64_t v83;
  uint64_t v84;
  int64_t v85;
  void (*v86)(char *, uint64_t);
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  uint64_t v90;
  void (*v91)(char *, unint64_t, uint64_t);
  uint64_t v92;
  size_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  _QWORD v98[3];
  uint64_t v99;
  unint64_t v100;
  void (*v101)(unint64_t, char *, uint64_t);
  void (*v102)(char *, _QWORD, uint64_t);
  void (*v103)(char *, char *, uint64_t);
  void (*v104)(char *, _QWORD, uint64_t, uint64_t);
  void (*v105)(char *, char *, uint64_t);
  unsigned int v106;
  unsigned int v107;
  uint64_t v108;
  unint64_t v109;
  uint64_t v110;
  int64_t v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  char *v115;
  char *v116;
  char *v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  _QWORD *v127;
  uint64_t v128;
  uint64_t v129;
  void (*v130)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v131;
  uint64_t aBlock;
  uint64_t v133;
  uint64_t (*v134)(uint64_t, uint64_t, uint64_t, uint64_t);
  void *v135;
  uint64_t (*v136)(uint64_t, uint64_t, uint64_t);
  uint64_t v137;
  uint64_t v138;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8711C0);
  v3 = MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v98 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v98 - v6;
  v8 = sub_1CA85B1A4();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v122 = (char *)v98 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v120 = sub_1CA85AE50();
  v119 = *(_QWORD *)(v120 - 8);
  MEMORY[0x1E0C80A78](v120);
  v121 = (char *)v98 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1CA85ADA8();
  v125 = *(_QWORD *)(v12 - 8);
  v126 = v12;
  v13 = MEMORY[0x1E0C80A78](v12);
  v15 = (char *)v98 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x1E0C80A78](v13);
  v118 = (char *)v98 - v17;
  v18 = MEMORY[0x1E0C80A78](v16);
  v117 = (char *)v98 - v19;
  MEMORY[0x1E0C80A78](v18);
  v116 = (char *)v98 - v20;
  v21 = sub_1CA85A5B0();
  v127 = *(_QWORD **)(v21 - 8);
  v22 = MEMORY[0x1E0C80A78](v21);
  v24 = (char *)v98 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v22);
  v26 = (char *)v98 - v25;
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94D4E8);
  MEMORY[0x1E0C80A78](v27);
  v29 = (char *)v98 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((uint64_t)objc_msgSend(a1, sel_count) < 1)
  {
    if (qword_1EF94A278 == -1)
    {
LABEL_8:
      v39 = sub_1CA85B348();
      __swift_project_value_buffer(v39, (uint64_t)qword_1EF978150);
      v40 = sub_1CA85B330();
      v41 = sub_1CA85BAC8();
      if (os_log_type_enabled(v40, v41))
      {
        v42 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v42 = 0;
        _os_log_impl(&dword_1CA237000, v40, v41, "No moments passed into generateTimeCollectionExtendedTokens, returning", v42, 2u);
        MEMORY[0x1CAA4F27C](v42, -1, -1);
      }

      return MEMORY[0x1E0DEE9D8];
    }
LABEL_62:
    swift_once();
    goto LABEL_8;
  }
  v112 = v9;
  v113 = v8;
  v115 = v7;
  v114 = v5;
  v138 = MEMORY[0x1E0DEE9D8];
  v30 = swift_allocObject();
  *(_QWORD *)(v30 + 16) = &v138;
  v31 = swift_allocObject();
  *(_QWORD *)(v31 + 16) = sub_1CA318CC4;
  *(_QWORD *)(v31 + 24) = v30;
  v124 = v30;
  v136 = sub_1CA28248C;
  v137 = v31;
  aBlock = MEMORY[0x1E0C809B0];
  v133 = 1107296256;
  v134 = sub_1CA493F50;
  v135 = &block_descriptor_12_0;
  v32 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(a1, sel_enumerateLocalStartDatesUsingBlock_, v32);
  _Block_release(v32);
  LOBYTE(v32) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if ((v32 & 1) != 0)
  {
    __break(1u);
    goto LABEL_61;
  }
  v131 = MEMORY[0x1E0DEE9D8];
  v33 = swift_allocObject();
  *(_QWORD *)(v33 + 16) = &v131;
  v34 = swift_allocObject();
  *(_QWORD *)(v34 + 16) = sub_1CA318C98;
  *(_QWORD *)(v34 + 24) = v33;
  v123 = v33;
  v136 = sub_1CA282698;
  v137 = v34;
  aBlock = MEMORY[0x1E0C809B0];
  v133 = 1107296256;
  v134 = sub_1CA493F50;
  v135 = &block_descriptor_22;
  v35 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(a1, sel_enumerateLocalEndDatesUsingBlock_, v35);
  _Block_release(v35);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
  {
LABEL_61:
    __break(1u);
    goto LABEL_62;
  }
  if (*(_QWORD *)(v138 + 16) != *(_QWORD *)(v131 + 16))
  {
    if (qword_1EF94A278 != -1)
      swift_once();
    v43 = sub_1CA85B348();
    __swift_project_value_buffer(v43, (uint64_t)qword_1EF978150);
    v44 = sub_1CA85B330();
    v45 = sub_1CA85BAE0();
    if (!os_log_type_enabled(v44, v45))
      goto LABEL_57;
    v46 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v46 = 0;
    v47 = "generateTimeExtendedTokens: Moment nodes in collection had a different number of start and end dates!";
    goto LABEL_56;
  }
  aBlock = v138;
  v133 = 0;
  v134 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v131;
  v135 = 0;
  LOBYTE(v136) = 0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1CA33F00C((uint64_t)v29);
  v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94D4F0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 48))(v29, 1, v37) == 1)
  {
    v38 = MEMORY[0x1E0DEE9D8];
    v110 = 0x7FFFFFFFFFFFFFFFLL;
    v111 = 0x8000000000000000;
  }
  else
  {
    v48 = (void (*)(char *, char *, uint64_t))v127[4];
    v107 = *MEMORY[0x1E0D76F78];
    v106 = *MEMORY[0x1E0D77D50];
    v111 = 0x8000000000000000;
    v38 = MEMORY[0x1E0DEE9D8];
    v110 = 0x7FFFFFFFFFFFFFFFLL;
    do
    {
      v109 = v38;
      while (1)
      {
        v50 = &v29[*(int *)(v37 + 48)];
        v48(v26, v29, v21);
        v48(v24, v50, v21);
        v51 = sub_1CA316F44();
        if ((v53 & 1) == 0)
        {
          v54 = v51;
          v55 = v52;
          v56 = sub_1CA316F44();
          if ((v58 & 1) == 0)
            break;
        }
        if (qword_1EF94A278 != -1)
          swift_once();
        v59 = sub_1CA85B348();
        __swift_project_value_buffer(v59, (uint64_t)qword_1EF978150);
        v60 = sub_1CA85B330();
        v61 = sub_1CA85BAE0();
        if (os_log_type_enabled(v60, v61))
        {
          v62 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v62 = 0;
          _os_log_impl(&dword_1CA237000, v60, v61, "generateTimeExtendedTokens: Couldn't extract month and/or year from date!", v62, 2u);
          MEMORY[0x1CAA4F27C](v62, -1, -1);
        }

        v49 = (void (*)(char *, uint64_t))v127[1];
        v49(v24, v21);
        v49(v26, v21);
        sub_1CA33F00C((uint64_t)v29);
        v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94D4F0);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 48))(v29, 1, v37) == 1)
        {
          v38 = v109;
          goto LABEL_44;
        }
      }
      v63 = v56;
      v64 = v57;
      v108 = v55;
      if (v54 == v56)
      {
        v128 = v54;
        v129 = sub_1CA85C260();
        v130 = v65;
        sub_1CA85B624();
        v128 = v108;
        sub_1CA85C260();
        sub_1CA85B624();
        swift_bridgeObjectRelease();
        v105 = (void (*)(char *, char *, uint64_t))v129;
        v104 = v130;
        (*(void (**)(char *, _QWORD, uint64_t))(v119 + 104))(v121, v107, v120);
        (*(void (**)(char *, _QWORD, uint64_t))(v112 + 104))(v122, v106, v113);
        v66 = v127;
        v103 = (void (*)(char *, char *, uint64_t))v127[2];
        v103(v115, v26, v21);
        v67 = (void (*)(char *, _QWORD, uint64_t, uint64_t))v66[7];
        v67(v115, 0, 1, v21);
        v68 = v114;
        v103(v114, v24, v21);
        v67(v68, 0, 1, v21);
        sub_1CA85AD60();
        v38 = v109;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v38 = sub_1CA26D2EC(0, *(_QWORD *)(v38 + 16) + 1, 1, v38);
        v70 = *(_QWORD *)(v38 + 16);
        v69 = *(_QWORD *)(v38 + 24);
        if (v70 >= v69 >> 1)
          v38 = sub_1CA26D2EC(v69 > 1, v70 + 1, 1, v38);
        *(_QWORD *)(v38 + 16) = v70 + 1;
        (*(void (**)(unint64_t, char *, uint64_t))(v125 + 32))(v38+ ((*(unsigned __int8 *)(v125 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v125 + 80))+ *(_QWORD *)(v125 + 72) * v70, v116, v126);
      }
      else
      {
        v128 = v54;
        v129 = sub_1CA85C260();
        v130 = v71;
        sub_1CA85B624();
        v128 = v108;
        sub_1CA85C260();
        v105 = v72;
        sub_1CA85B624();
        swift_bridgeObjectRelease();
        v101 = (void (*)(unint64_t, char *, uint64_t))v129;
        v100 = (unint64_t)v130;
        v103 = *(void (**)(char *, char *, uint64_t))(v119 + 104);
        v103(v121, (char *)v107, v120);
        v102 = *(void (**)(char *, _QWORD, uint64_t))(v112 + 104);
        v102(v122, v106, v113);
        v73 = v127;
        v105 = (void (*)(char *, char *, uint64_t))v127[2];
        v105(v115, v26, v21);
        v104 = (void (*)(char *, _QWORD, uint64_t, uint64_t))v73[7];
        v104(v115, 0, 1, v21);
        v74 = v114;
        v105(v114, v24, v21);
        v104(v74, 0, 1, v21);
        sub_1CA85AD60();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v109 = sub_1CA26D2EC(0, *(_QWORD *)(v109 + 16) + 1, 1, v109);
        v76 = *(_QWORD *)(v109 + 16);
        v75 = *(_QWORD *)(v109 + 24);
        if (v76 >= v75 >> 1)
          v109 = sub_1CA26D2EC(v75 > 1, v76 + 1, 1, v109);
        v77 = v109;
        *(_QWORD *)(v109 + 16) = v76 + 1;
        v100 = (*(unsigned __int8 *)(v125 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v125 + 80);
        v99 = *(_QWORD *)(v125 + 72);
        v101 = *(void (**)(unint64_t, char *, uint64_t))(v125 + 32);
        v101(v77 + v100 + v99 * v76, v117, v126);
        v128 = v63;
        v129 = sub_1CA85C260();
        v130 = v78;
        sub_1CA85B624();
        v128 = v64;
        sub_1CA85C260();
        sub_1CA85B624();
        swift_bridgeObjectRelease();
        v98[2] = v129;
        v98[1] = v130;
        v103(v121, (char *)v107, v120);
        v102(v122, v106, v113);
        v79 = v115;
        v105(v115, v26, v21);
        v80 = v104;
        v104(v79, 0, 1, v21);
        v81 = v114;
        v105(v114, v24, v21);
        v80(v81, 0, 1, v21);
        v38 = v109;
        sub_1CA85AD60();
        v83 = *(_QWORD *)(v38 + 16);
        v82 = *(_QWORD *)(v38 + 24);
        if (v83 >= v82 >> 1)
          v38 = sub_1CA26D2EC(v82 > 1, v83 + 1, 1, v38);
        *(_QWORD *)(v38 + 16) = v83 + 1;
        v101(v38 + v100 + v83 * v99, v118, v126);
      }
      v84 = v110;
      if (v108 < v110)
        v84 = v108;
      v110 = v84;
      v85 = v111;
      if (v64 > v111)
        v85 = v64;
      v111 = v85;
      v86 = (void (*)(char *, uint64_t))v127[1];
      v86(v24, v21);
      v86(v26, v21);
      sub_1CA33F00C((uint64_t)v29);
      v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94D4F0);
    }
    while ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 48))(v29, 1, v37) != 1);
  }
LABEL_44:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v87 = *(_QWORD *)(v38 + 16);
  if (!v87)
  {
    swift_bridgeObjectRelease();
    if (qword_1EF94A278 != -1)
      swift_once();
    v96 = sub_1CA85B348();
    __swift_project_value_buffer(v96, (uint64_t)qword_1EF978150);
    v44 = sub_1CA85B330();
    v45 = sub_1CA85BAE0();
    if (!os_log_type_enabled(v44, v45))
      goto LABEL_57;
    v46 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v46 = 0;
    v47 = "generateTimeExtendedTokens: No initial time tokens created from moment node collection, returning!";
LABEL_56:
    _os_log_impl(&dword_1CA237000, v44, v45, v47, v46, 2u);
    MEMORY[0x1CAA4F27C](v46, -1, -1);
LABEL_57:

    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    return MEMORY[0x1E0DEE9D8];
  }
  aBlock = MEMORY[0x1E0DEE9E0];
  v88 = v125;
  v89 = v38 + ((*(unsigned __int8 *)(v125 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v125 + 80));
  v90 = *(_QWORD *)(v125 + 72);
  v91 = *(void (**)(char *, unint64_t, uint64_t))(v125 + 16);
  swift_bridgeObjectRetain_n();
  v92 = v126;
  do
  {
    v91(v15, v89, v92);
    sub_1CA3116F8((uint8_t *)&aBlock, v15);
    (*(void (**)(char *, uint64_t))(v88 + 8))(v15, v92);
    v89 += v90;
    --v87;
  }
  while (v87);
  swift_bridgeObjectRelease_n();
  v93 = sub_1CA243B48(aBlock);
  swift_bridgeObjectRelease();
  if (v110 == v111 && *(_QWORD *)(v93 + 16) <= 5uLL)
    v94 = (uint64_t)sub_1CA317378(v93);
  else
    v94 = sub_1CA3175B8(v93);
  v95 = v94;
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return v95;
}

uint64_t sub_1CA318C1C()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

void sub_1CA318C48(void *a1, uint64_t a2)
{
  uint64_t v2;

  sub_1CA313478(a1, *(double *)(v2 + 32), a2, *(_QWORD *)(v2 + 16), *(NSObject **)(v2 + 24), *(unint64_t **)(v2 + 40));
}

uint64_t sub_1CA318C58()
{
  return swift_deallocObject();
}

uint64_t sub_1CA318C68()
{
  return swift_deallocObject();
}

uint64_t sub_1CA318C78()
{
  return swift_deallocObject();
}

uint64_t sub_1CA318C88()
{
  return swift_deallocObject();
}

uint64_t sub_1CA318C98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1CA3115D8(a1, a2, a3, *(unint64_t **)(v3 + 16));
}

uint64_t sub_1CA318CB0()
{
  return swift_deallocObject();
}

ValueMetadata *type metadata accessor for LocaleMusicRanker()
{
  return &type metadata for LocaleMusicRanker;
}

uint64_t sub_1CA318CD8(uint64_t a1, NSObject *a2, int64_t a3, uint64_t a4)
{
  return sub_1CA318CEC(a1, a2, a3, a4);
}

uint64_t sub_1CA318CEC(uint64_t a1, NSObject *a2, int64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  double v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  char isUniquelyReferenced_nonNull_native;
  char v38;
  uint64_t v39;
  _BOOL8 v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  char v44;
  uint64_t *v45;
  uint64_t v46;
  BOOL v47;
  uint64_t v48;
  float v49;
  uint64_t v50;
  os_log_type_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  double v56;
  unint64_t v57;
  unint64_t v58;
  int64_t v59;
  unint64_t v60;
  int64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  _BOOL8 v66;
  uint64_t v67;
  unint64_t v68;
  char v69;
  uint64_t v70;
  uint64_t v71;
  int v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t v77;
  unint64_t v78;
  int64_t v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  int v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char v97;
  char v98;
  uint64_t v99;
  _BOOL8 v100;
  uint64_t v101;
  char v102;
  unint64_t v103;
  char v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t result;
  _QWORD v109[3];
  char *v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  int64_t v115;
  uint64_t v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  int64_t i;
  uint64_t v127;
  uint64_t v128;
  char v129[40];
  double v130;

  v109[1] = a4;
  v115 = a3;
  v128 = a1;
  v113 = sub_1CA85A67C();
  v112 = *(_QWORD *)(v113 - 8);
  MEMORY[0x1E0C80A78](v113);
  v111 = (char *)v109 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED872E90);
  MEMORY[0x1E0C80A78](v6);
  v110 = (char *)v109 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8711F0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (unint64_t)v109 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1CA85A694();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (uint64_t)v109 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v119 = type metadata accessor for Song();
  v127 = *(_QWORD *)(v119 - 8);
  v15 = MEMORY[0x1E0C80A78](v119);
  v17 = (uint64_t)v109 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x1E0C80A78](v15);
  v124 = (uint64_t)v109 - v19;
  v20 = MEMORY[0x1E0C80A78](v18);
  v117 = (char *)v109 - v21;
  v22 = MEMORY[0x1E0C80A78](v20);
  v125 = (uint64_t)v109 - v23;
  MEMORY[0x1E0C80A78](v22);
  v118 = (uint64_t)v109 - v24;
  if (qword_1ED872FB0 != -1)
    goto LABEL_130;
  while (1)
  {
    v25 = qword_1ED87D100;
    *(double *)&v26 = CACurrentMediaTime();
    sub_1CA2E4280("Locale Music Ranker", 19, 2u, v26, 0, v25, (uint64_t)v129);
    v123 = *(uint64_t *)((char *)&a2->isa + OBJC_IVAR___PGMusicCurationFeatures_inferredUserLanguageCodes);
    if (!v123)
      break;
    v27 = *(double *)((char *)&a2->isa + OBJC_IVAR___PGMusicCurationFeatures_eventRatioByLanguageCode);
    if (v27 == 0.0)
      break;
    v116 = v14;
    v120 = v12;
    v121 = v11;
    v28 = *(_QWORD *)(v123 + 56);
    v122 = v123 + 56;
    v29 = 1 << *(_BYTE *)(v123 + 32);
    v30 = -1;
    if (v29 < 64)
      v30 = ~(-1 << v29);
    v14 = v30 & v28;
    v124 = (unint64_t)(v29 + 63) >> 6;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v11 = 0;
    for (i = v10; ; v10 = i)
    {
      if (v14)
      {
        v31 = __clz(__rbit64(v14));
        v14 &= v14 - 1;
        v32 = v31 | (v11 << 6);
        goto LABEL_25;
      }
      v33 = v11 + 1;
      if (__OFADD__(v11, 1))
        goto LABEL_125;
      v14 = (uint64_t)v117;
      if (v33 >= v124)
        break;
      v34 = *(_QWORD *)(v122 + 8 * v33);
      ++v11;
      if (!v34)
      {
        v11 = v33 + 1;
        if (v33 + 1 >= v124)
          break;
        v34 = *(_QWORD *)(v122 + 8 * v11);
        if (!v34)
        {
          v11 = v33 + 2;
          if (v33 + 2 >= v124)
            break;
          v34 = *(_QWORD *)(v122 + 8 * v11);
          if (!v34)
          {
            v35 = v33 + 3;
            if (v35 >= v124)
              break;
            v34 = *(_QWORD *)(v122 + 8 * v35);
            if (!v34)
            {
              while (1)
              {
                v11 = v35 + 1;
                if (__OFADD__(v35, 1))
                  break;
                if (v11 >= v124)
                  goto LABEL_73;
                v34 = *(_QWORD *)(v122 + 8 * v11);
                ++v35;
                if (v34)
                  goto LABEL_24;
              }
LABEL_128:
              __break(1u);
              goto LABEL_129;
            }
            v11 = v35;
          }
        }
      }
LABEL_24:
      v14 = (v34 - 1) & v34;
      v32 = __clz(__rbit64(v34)) + (v11 << 6);
LABEL_25:
      v36 = (uint64_t *)(*(_QWORD *)(v123 + 48) + 16 * v32);
      v17 = *v36;
      v12 = v36[1];
      swift_bridgeObjectRetain();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v130 = v27;
      a2 = *(NSObject **)&v27;
      v10 = sub_1CA25081C(v17, v12);
      v39 = *(_QWORD *)(*(_QWORD *)&v27 + 16);
      v40 = (v38 & 1) == 0;
      v41 = v39 + v40;
      if (__OFADD__(v39, v40))
        goto LABEL_119;
      v42 = v38;
      if (*(_QWORD *)(*(_QWORD *)&v27 + 24) >= v41)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) != 0)
        {
          v27 = v130;
          if ((v38 & 1) != 0)
            goto LABEL_7;
        }
        else
        {
          a2 = &v130;
          sub_1CA261BB4();
          v27 = v130;
          if ((v42 & 1) != 0)
            goto LABEL_7;
        }
      }
      else
      {
        sub_1CA254E88(v41, isUniquelyReferenced_nonNull_native);
        a2 = *(NSObject **)&v130;
        v43 = sub_1CA25081C(v17, v12);
        if ((v42 & 1) != (v44 & 1))
          goto LABEL_132;
        v10 = v43;
        v27 = v130;
        if ((v42 & 1) != 0)
        {
LABEL_7:
          *(_DWORD *)(*(_QWORD *)(*(_QWORD *)&v27 + 56) + 4 * v10) = 0;
          goto LABEL_8;
        }
      }
      *(_QWORD *)(*(_QWORD *)&v27 + 8 * (v10 >> 6) + 64) |= 1 << v10;
      v45 = (uint64_t *)(*(_QWORD *)(*(_QWORD *)&v27 + 48) + 16 * v10);
      *v45 = v17;
      v45[1] = v12;
      *(_DWORD *)(*(_QWORD *)(*(_QWORD *)&v27 + 56) + 4 * v10) = 0;
      v46 = *(_QWORD *)(*(_QWORD *)&v27 + 16);
      v47 = __OFADD__(v46, 1);
      v48 = v46 + 1;
      if (v47)
        goto LABEL_123;
      *(_QWORD *)(*(_QWORD *)&v27 + 16) = v48;
      swift_bridgeObjectRetain();
LABEL_8:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
LABEL_73:
    swift_release();
    v72 = *(_DWORD *)(v115 + OBJC_IVAR___PGMusicCuratorContext_configuration + 336);
    v73 = *(_QWORD *)(v128 + 56);
    v114 = v128 + 56;
    v74 = 1 << *(_BYTE *)(v128 + 32);
    v75 = -1;
    if (v74 < 64)
      v75 = ~(-1 << v74);
    v76 = v75 & v73;
    v115 = (unint64_t)(v74 + 63) >> 6;
    swift_bridgeObjectRetain();
    v77 = 0;
    v56 = MEMORY[0x1E0DEE9E0];
    v11 = v120;
    while (2)
    {
      if (v76)
      {
        v123 = (v76 - 1) & v76;
        v124 = v77;
        v78 = __clz(__rbit64(v76)) | (v77 << 6);
        goto LABEL_94;
      }
      v79 = v77 + 1;
      if (__OFADD__(v77, 1))
        goto LABEL_126;
      if (v79 >= v115)
      {
LABEL_114:
        swift_release();
        swift_bridgeObjectRelease();
        goto LABEL_115;
      }
      v80 = *(_QWORD *)(v114 + 8 * v79);
      v81 = v77 + 1;
      if (v80)
        goto LABEL_93;
      v81 = v77 + 2;
      if (v77 + 2 >= v115)
        goto LABEL_114;
      v80 = *(_QWORD *)(v114 + 8 * v81);
      if (v80)
        goto LABEL_93;
      v81 = v77 + 3;
      if (v77 + 3 >= v115)
        goto LABEL_114;
      v80 = *(_QWORD *)(v114 + 8 * v81);
      if (v80)
      {
LABEL_93:
        v123 = (v80 - 1) & v80;
        v124 = v81;
        v78 = __clz(__rbit64(v80)) + (v81 << 6);
LABEL_94:
        v83 = *(_QWORD *)(v128 + 48);
        v122 = *(_QWORD *)(v127 + 72);
        v84 = v118;
        sub_1CA268434(v83 + v122 * v78, v118);
        v85 = v84;
        v86 = v125;
        sub_1CA268478(v85, v125);
        sub_1CA268434(v86, v14);
        sub_1CA319A2C(v86 + *(int *)(v119 + 60), v10);
        v12 = v121;
        if ((*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v11 + 48))(v10, 1, v121) == 1)
        {
          sub_1CA267BE8(v10, &qword_1ED8711F0);
          v87 = v72;
        }
        else
        {
          v88 = v116;
          (*(void (**)(uint64_t, unint64_t, uint64_t))(v11 + 32))(v116, v10, v12);
          swift_bridgeObjectRetain();
          v89 = v111;
          sub_1CA85A688();
          v90 = (uint64_t)v110;
          sub_1CA85A670();
          (*(void (**)(char *, uint64_t))(v112 + 8))(v89, v113);
          v91 = sub_1CA85A610();
          v92 = *(_QWORD *)(v91 - 8);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v92 + 48))(v90, 1, v91) == 1)
          {
            sub_1CA267BE8(v90, (uint64_t *)&unk_1ED872E90);
            (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v88, v12);
            swift_bridgeObjectRelease();
            v87 = v72;
          }
          else
          {
            v93 = v90;
            v12 = sub_1CA85A604();
            v95 = v94;
            (*(void (**)(uint64_t, uint64_t))(v92 + 8))(v93, v91);
            v87 = v72;
            if (*(_QWORD *)(*(_QWORD *)&v27 + 16))
            {
              v96 = sub_1CA25081C(v12, v95);
              v87 = v72;
              if ((v97 & 1) != 0)
                v87 = *(_DWORD *)(*(_QWORD *)(*(_QWORD *)&v27 + 56) + 4 * v96);
            }
            swift_bridgeObjectRelease();
            (*(void (**)(uint64_t, uint64_t))(v120 + 8))(v116, v121);
            swift_bridgeObjectRelease();
          }
          v14 = (uint64_t)v117;
        }
        v17 = swift_isUniquelyReferenced_nonNull_native();
        v130 = v56;
        a2 = *(NSObject **)&v56;
        v10 = sub_1CA250830((_QWORD *)v14);
        v99 = *(_QWORD *)(*(_QWORD *)&v56 + 16);
        v100 = (v98 & 1) == 0;
        v101 = v99 + v100;
        if (__OFADD__(v99, v100))
          goto LABEL_120;
        v102 = v98;
        if (*(_QWORD *)(*(_QWORD *)&v56 + 24) >= v101)
        {
          if ((v17 & 1) != 0)
          {
            v56 = v130;
            if ((v98 & 1) == 0)
              goto LABEL_110;
          }
          else
          {
            a2 = &v130;
            sub_1CA2611AC();
            v56 = v130;
            if ((v102 & 1) == 0)
              goto LABEL_110;
          }
        }
        else
        {
          sub_1CA253DA8(v101, v17);
          a2 = *(NSObject **)&v130;
          v103 = sub_1CA250830((_QWORD *)v14);
          if ((v102 & 1) != (v104 & 1))
            goto LABEL_131;
          v10 = v103;
          v56 = v130;
          if ((v102 & 1) == 0)
          {
LABEL_110:
            *(_QWORD *)(*(_QWORD *)&v56 + 8 * (v10 >> 6) + 64) |= 1 << v10;
            sub_1CA268434(v14, *(_QWORD *)(*(_QWORD *)&v56 + 48) + v10 * v122);
            *(_DWORD *)(*(_QWORD *)(*(_QWORD *)&v56 + 56) + 4 * v10) = v87;
            v105 = *(_QWORD *)(*(_QWORD *)&v56 + 16);
            v47 = __OFADD__(v105, 1);
            v106 = v105 + 1;
            if (v47)
              goto LABEL_124;
            *(_QWORD *)(*(_QWORD *)&v56 + 16) = v106;
            goto LABEL_77;
          }
        }
        *(_DWORD *)(*(_QWORD *)(*(_QWORD *)&v56 + 56) + 4 * v10) = v87;
LABEL_77:
        swift_bridgeObjectRelease();
        sub_1CA268588(v14);
        sub_1CA268588(v125);
        v10 = i;
        v76 = v123;
        v77 = v124;
        continue;
      }
      break;
    }
    v82 = v77 + 4;
    if (v77 + 4 >= v115)
      goto LABEL_114;
    v80 = *(_QWORD *)(v114 + 8 * v82);
    if (v80)
    {
      v81 = v77 + 4;
      goto LABEL_93;
    }
    while (1)
    {
      v81 = v82 + 1;
      if (__OFADD__(v82, 1))
        break;
      if (v81 >= v115)
        goto LABEL_114;
      v80 = *(_QWORD *)(v114 + 8 * v81);
      ++v82;
      if (v80)
        goto LABEL_93;
    }
LABEL_129:
    __break(1u);
LABEL_130:
    swift_once();
  }
  v49 = *(float *)(v115 + OBJC_IVAR___PGMusicCuratorContext_configuration + 336);
  if (qword_1ED872118 != -1)
    swift_once();
  v50 = sub_1CA85B348();
  __swift_project_value_buffer(v50, (uint64_t)qword_1ED87D010);
  a2 = sub_1CA85B330();
  v51 = sub_1CA85BAC8();
  if (os_log_type_enabled(a2, v51))
  {
    v12 = 12;
    v11 = swift_slowAlloc();
    *(_DWORD *)v11 = 134217984;
    v130 = v49;
    sub_1CA85BCF0();
    _os_log_impl(&dword_1CA237000, a2, v51, "[MemoriesMusic] LocaleMusicRanker producing default scores of %f because the graph is not available.", (uint8_t *)v11, 0xCu);
    MEMORY[0x1CAA4F27C](v11, -1, -1);
  }

  v52 = *(_QWORD *)(v128 + 56);
  v125 = v128 + 56;
  v53 = 1 << *(_BYTE *)(v128 + 32);
  v54 = -1;
  if (v53 < 64)
    v54 = ~(-1 << v53);
  v55 = v54 & v52;
  i = (unint64_t)(v53 + 63) >> 6;
  swift_bridgeObjectRetain();
  v10 = 0;
  v56 = MEMORY[0x1E0DEE9E0];
  while (2)
  {
    if (v55)
    {
      v57 = __clz(__rbit64(v55));
      v55 &= v55 - 1;
      v58 = v57 | (v10 << 6);
    }
    else
    {
      v59 = v10 + 1;
      if (__OFADD__(v10, 1))
        goto LABEL_122;
      if (v59 >= i)
      {
LABEL_72:
        swift_release();
LABEL_115:
        sub_1CA2E0C94(0);
        v107 = v109[2];
        sub_1CA85BB70();
        if (v107)
          swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        return *(_QWORD *)&v56;
      }
      v60 = *(_QWORD *)(v125 + 8 * v59);
      ++v10;
      if (!v60)
      {
        v10 = v59 + 1;
        if (v59 + 1 >= i)
          goto LABEL_72;
        v60 = *(_QWORD *)(v125 + 8 * v10);
        if (!v60)
        {
          v10 = v59 + 2;
          if (v59 + 2 >= i)
            goto LABEL_72;
          v60 = *(_QWORD *)(v125 + 8 * v10);
          if (!v60)
          {
            v61 = v59 + 3;
            if (v61 >= i)
              goto LABEL_72;
            v60 = *(_QWORD *)(v125 + 8 * v61);
            if (!v60)
            {
              while (1)
              {
                v10 = v61 + 1;
                if (__OFADD__(v61, 1))
                  goto LABEL_127;
                if ((uint64_t)v10 >= i)
                  goto LABEL_72;
                v60 = *(_QWORD *)(v125 + 8 * v10);
                ++v61;
                if (v60)
                  goto LABEL_60;
              }
            }
            v10 = v61;
          }
        }
      }
LABEL_60:
      v55 = (v60 - 1) & v60;
      v58 = __clz(__rbit64(v60)) + (v10 << 6);
    }
    v12 = *(_QWORD *)(v127 + 72);
    v62 = v124;
    sub_1CA268434(*(_QWORD *)(v128 + 48) + v12 * v58, v124);
    sub_1CA268478(v62, v17);
    v14 = swift_isUniquelyReferenced_nonNull_native();
    v130 = v56;
    a2 = *(NSObject **)&v56;
    v64 = sub_1CA250830((_QWORD *)v17);
    v65 = *(_QWORD *)(*(_QWORD *)&v56 + 16);
    v66 = (v63 & 1) == 0;
    v67 = v65 + v66;
    if (__OFADD__(v65, v66))
    {
      __break(1u);
LABEL_119:
      __break(1u);
LABEL_120:
      __break(1u);
LABEL_121:
      __break(1u);
LABEL_122:
      __break(1u);
LABEL_123:
      __break(1u);
LABEL_124:
      __break(1u);
LABEL_125:
      __break(1u);
LABEL_126:
      __break(1u);
LABEL_127:
      __break(1u);
      goto LABEL_128;
    }
    v11 = v63;
    if (*(_QWORD *)(*(_QWORD *)&v56 + 24) >= v67)
    {
      if ((v14 & 1) != 0)
      {
        v56 = v130;
        if ((v63 & 1) == 0)
          goto LABEL_68;
      }
      else
      {
        a2 = &v130;
        sub_1CA2611AC();
        v56 = v130;
        if ((v11 & 1) == 0)
          goto LABEL_68;
      }
      goto LABEL_43;
    }
    sub_1CA253DA8(v67, v14);
    a2 = *(NSObject **)&v130;
    v68 = sub_1CA250830((_QWORD *)v17);
    if ((v11 & 1) == (v69 & 1))
    {
      v64 = v68;
      v56 = v130;
      if ((v11 & 1) == 0)
      {
LABEL_68:
        *(_QWORD *)(*(_QWORD *)&v56 + 8 * (v64 >> 6) + 64) |= 1 << v64;
        sub_1CA268434(v17, *(_QWORD *)(*(_QWORD *)&v56 + 48) + v64 * v12);
        *(float *)(*(_QWORD *)(*(_QWORD *)&v56 + 56) + 4 * v64) = v49;
        v70 = *(_QWORD *)(*(_QWORD *)&v56 + 16);
        v47 = __OFADD__(v70, 1);
        v71 = v70 + 1;
        if (v47)
          goto LABEL_121;
        *(_QWORD *)(*(_QWORD *)&v56 + 16) = v71;
        goto LABEL_44;
      }
LABEL_43:
      *(float *)(*(_QWORD *)(*(_QWORD *)&v56 + 56) + 4 * v64) = v49;
LABEL_44:
      swift_bridgeObjectRelease();
      sub_1CA268588(v17);
      continue;
    }
    break;
  }
LABEL_131:
  sub_1CA85C2E4();
  __break(1u);
LABEL_132:
  result = sub_1CA85C2E4();
  __break(1u);
  return result;
}

uint64_t sub_1CA319A2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8711F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t dispatch thunk of CollectionFeaturesDataSource.assetFetchResult.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of CollectionFeaturesDataSource.generateCollectionFeaturesInfo(progressReporter:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

void sub_1CA319A94(uint64_t a1@<X8>)
{
  uint64_t v1;
  id v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;

  v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CD1570]), sel_init);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED872760);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1CA8D4E40;
  *(_QWORD *)(v4 + 32) = sub_1CA85B534();
  *(_QWORD *)(v4 + 40) = v5;
  v6 = (void *)sub_1CA85B798();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_setFetchPropertySets_, v6);

  v7 = objc_msgSend((id)objc_opt_self(), sel_fetchAssetsInAssetCollection_options_, v1, v3);
  sub_1CA319B94(a1);

}

uint64_t sub_1CA319B94@<X0>(uint64_t a1@<X8>)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  double v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  void *v69;
  uint64_t v70;
  void (*v71)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v72;
  void (*v73)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t result;
  uint64_t v75;
  _QWORD *v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  id v80;
  id v81;
  void *v82;
  char *v83;
  void (*v84)(uint64_t, char *, uint64_t);
  unsigned int (*v85)(uint64_t, uint64_t, uint64_t);
  void *v86;
  id v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  char v95;
  void (*v96)(char *, char *, uint64_t);
  char *v97;
  uint64_t v98;
  void (*v99)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  unsigned int v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  char *v107;
  char v108;
  char *v109;
  unsigned int (*v110)(uint64_t, uint64_t, uint64_t);
  void (*v111)(uint64_t, uint64_t);
  uint64_t v112;
  unsigned int v113;
  uint64_t v114;
  char *v115;
  char *v116;
  uint64_t v117;
  void (*v118)(char *, uint64_t);
  uint64_t v119;
  void (*v120)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v121;
  uint64_t v122;
  unsigned int (*v123)(uint64_t, uint64_t, uint64_t);
  uint64_t v124;
  void (*v125)(uint64_t, uint64_t);
  char *v126;
  uint64_t v127;
  char v128;
  void (*v129)(char *, uint64_t);
  uint64_t v130;
  uint64_t v131;
  unsigned int (*v132)(uint64_t, uint64_t, uint64_t);
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  _QWORD *v138;
  void (*v139)(char *, uint64_t, uint64_t);
  char *v140;
  unsigned int v141;
  uint64_t v142;
  char *v143;
  void (*v144)(char *, char *, uint64_t);
  char *v145;
  void (*v146)(uint64_t, uint64_t, uint64_t, uint64_t);
  char *v147;
  uint64_t v148;
  uint64_t v149;
  void (*v150)(char *, uint64_t);
  uint64_t v151;
  uint64_t v152;
  char *v153;
  char *v154;
  char *v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  char *v160;
  uint64_t v161;
  char *v162;
  char *v163;
  uint64_t v164;
  uint64_t v165;
  void *v166;
  void (*v167)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v168;
  char *v169;
  char *v170;
  char *v171;
  char *v172;
  uint64_t v173;
  char *v174;
  char *v175;
  char *v176;
  char *v177;
  _QWORD *v178;
  char *v179;
  char *v180;
  char *v181;
  uint64_t v182;
  unsigned int (*v183)(uint64_t, uint64_t, uint64_t);
  id v184;
  uint64_t v185;
  uint64_t v186;
  char *v187;
  void (*v188)(char *, uint64_t, uint64_t);
  uint64_t v189;
  char *v190;
  char *v191;
  void (*v192)(char *, uint64_t);
  uint64_t v193;
  void (*v194)(uint64_t, uint64_t, uint64_t, uint64_t);

  v2 = v1;
  v186 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8744C0);
  MEMORY[0x1E0C80A78](v186);
  v171 = (char *)&v152 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v185 = (uint64_t)&v152 - v6;
  v7 = sub_1CA85A5B0();
  v8 = *(_QWORD **)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v152 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v160 = (char *)&v152 - v12;
  MEMORY[0x1E0C80A78](v13);
  v170 = (char *)&v152 - v14;
  MEMORY[0x1E0C80A78](v15);
  v177 = (char *)&v152 - v16;
  MEMORY[0x1E0C80A78](v17);
  v190 = (char *)&v152 - v18;
  MEMORY[0x1E0C80A78](v19);
  v191 = (char *)&v152 - v20;
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8744D8);
  MEMORY[0x1E0C80A78](v21);
  v157 = (uint64_t)&v152 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v23);
  v156 = (uint64_t)&v152 - v24;
  MEMORY[0x1E0C80A78](v25);
  v176 = (char *)&v152 - v26;
  MEMORY[0x1E0C80A78](v27);
  v189 = (uint64_t)&v152 - v28;
  MEMORY[0x1E0C80A78](v29);
  v31 = (char *)&v152 - v30;
  MEMORY[0x1E0C80A78](v32);
  v34 = (char *)&v152 - v33;
  v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8711C0);
  MEMORY[0x1E0C80A78](v35);
  v155 = (char *)&v152 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v37);
  v154 = (char *)&v152 - v38;
  MEMORY[0x1E0C80A78](v39);
  v159 = (uint64_t)&v152 - v40;
  MEMORY[0x1E0C80A78](v41);
  v161 = (uint64_t)&v152 - v42;
  MEMORY[0x1E0C80A78](v43);
  v165 = (uint64_t)&v152 - v44;
  MEMORY[0x1E0C80A78](v45);
  v175 = (char *)&v152 - v46;
  MEMORY[0x1E0C80A78](v47);
  v169 = (char *)&v152 - v48;
  MEMORY[0x1E0C80A78](v49);
  v174 = (char *)&v152 - v50;
  MEMORY[0x1E0C80A78](v51);
  v164 = (uint64_t)&v152 - v52;
  MEMORY[0x1E0C80A78](v53);
  v181 = (char *)&v152 - v54;
  MEMORY[0x1E0C80A78](v55);
  v173 = (uint64_t)&v152 - v56;
  MEMORY[0x1E0C80A78](v57);
  v172 = (char *)&v152 - v58;
  MEMORY[0x1E0C80A78](v59);
  v179 = (char *)&v152 - v60;
  MEMORY[0x1E0C80A78](v61);
  v63 = (char *)&v152 - v62;
  *(_QWORD *)&v65 = MEMORY[0x1E0C80A78](v64).n128_u64[0];
  v67 = (char *)&v152 - v66;
  if (!objc_msgSend(v2, sel_count, v65))
  {
    v137 = sub_1CA85AE44();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v137 - 8) + 56))(a1, 1, 1, v137);
  }
  v68 = a1;
  v69 = v2;
  v70 = v68;
  v178 = v8;
  v71 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v8[7];
  v180 = v67;
  v71(v67, 1, 1, v7);
  v187 = v63;
  v194 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v71;
  v71(v63, 1, 1, v7);
  v72 = sub_1CA85A850();
  v73 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v72 - 8) + 56);
  v163 = v34;
  v73(v34, 1, 1, v72);
  v162 = v31;
  v168 = v72;
  v167 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v73;
  v73(v31, 1, 1, v72);
  result = (uint64_t)objc_msgSend(v69, sel_count);
  if (result < 0)
  {
LABEL_53:
    __break(1u);
LABEL_54:
    __break(1u);
  }
  else
  {
    v75 = result;
    v153 = v10;
    v158 = v70;
    v76 = v178;
    v77 = (uint64_t)v179;
    v78 = v191;
    if (result)
    {
      v79 = 0;
      v166 = v69;
      v193 = result;
      while (1)
      {
        if (v75 == v79)
        {
          __break(1u);
          goto LABEL_53;
        }
        v80 = objc_msgSend(v69, sel_objectAtIndex_, v79);
        v81 = objc_msgSend(v80, sel_creationDate);
        if (!v81)
        {
          v194(v77, 1, 1, v7);
LABEL_6:

          result = sub_1CA267BE8(v77, &qword_1ED8711C0);
          v75 = v193;
          goto LABEL_7;
        }
        v82 = v81;
        v83 = v190;
        sub_1CA85A574();

        v84 = (void (*)(uint64_t, char *, uint64_t))v76[4];
        v84(v77, v83, v7);
        v194(v77, 0, 1, v7);
        v85 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v76[6];
        if (v85(v77, 1, v7) == 1)
          goto LABEL_6;
        v188 = (void (*)(char *, uint64_t, uint64_t))v84;
        v84((uint64_t)v78, (char *)v77, v7);
        v184 = v80;
        result = (uint64_t)objc_msgSend(v80, sel_originalMetadataProperties);
        if (!result)
          goto LABEL_54;
        v86 = (void *)result;
        v87 = objc_msgSend((id)result, sel_timeZone);

        v88 = (uint64_t)v180;
        v89 = (uint64_t)v176;
        if (v87)
        {
          sub_1CA85A844();

          v90 = 0;
        }
        else
        {
          v90 = 1;
        }
        v91 = v177;
        v167(v89, v90, 1, v168);
        sub_1CA24EEF8(v89, v189, &qword_1ED8744D8);
        v92 = v173;
        sub_1CA2684BC(v88, v173, &qword_1ED8711C0);
        if (v85(v92, 1, v7) == 1)
        {
          sub_1CA85A4D8();
          sub_1CA267BE8(v92, &qword_1ED8711C0);
        }
        else
        {
          v188(v91, v92, v7);
        }
        v93 = sub_1CA2DF104((unint64_t *)&qword_1ED8711A0, MEMORY[0x1E0CB08B0]);
        v94 = v191;
        v182 = v93;
        v95 = sub_1CA85B4E0();
        v96 = (void (*)(char *, char *, uint64_t))v76[2];
        v97 = (v95 & 1) != 0 ? v94 : v91;
        v98 = (uint64_t)v172;
        v96(v172, v97, v7);
        v192 = (void (*)(char *, uint64_t))v76[1];
        v192(v91, v7);
        sub_1CA267BE8(v88, &qword_1ED8711C0);
        v99 = v194;
        v194(v98, 0, 1, v7);
        sub_1CA24EEF8(v98, v88, &qword_1ED8711C0);
        v100 = (uint64_t)v181;
        v96(v181, v94, v7);
        v99(v100, 0, 1, v7);
        v101 = v185;
        v102 = v185 + *(int *)(v186 + 48);
        sub_1CA2684BC(v88, v185, &qword_1ED8711C0);
        sub_1CA2684BC(v100, v102, &qword_1ED8711C0);
        if (v85(v101, 1, v7) == 1)
          break;
        v106 = v164;
        sub_1CA2684BC(v101, v164, &qword_1ED8711C0);
        if (v85(v102, 1, v7) == 1)
        {
          sub_1CA267BE8((uint64_t)v181, &qword_1ED8711C0);
          v192((char *)v106, v7);
          v104 = (uint64_t)v169;
LABEL_26:
          sub_1CA267BE8(v185, &qword_1ED8744C0);
          v105 = v170;
          goto LABEL_29;
        }
        v107 = v190;
        v188(v190, v102, v7);
        sub_1CA2DF104((unint64_t *)&unk_1ED8711B0, MEMORY[0x1E0CB08B8]);
        v108 = sub_1CA85B504();
        v109 = v107;
        v110 = v85;
        v111 = (void (*)(uint64_t, uint64_t))v192;
        v192(v109, v7);
        sub_1CA267BE8((uint64_t)v181, &qword_1ED8711C0);
        v111(v106, v7);
        v85 = v110;
        sub_1CA267BE8(v101, &qword_1ED8711C0);
        v105 = v170;
        v104 = (uint64_t)v169;
        if ((v108 & 1) != 0)
          goto LABEL_28;
LABEL_29:
        sub_1CA2684BC((uint64_t)v187, v104, &qword_1ED8711C0);
        v113 = v85(v104, 1, v7);
        v183 = v85;
        if (v113 == 1)
        {
          sub_1CA85A4C0();
          sub_1CA267BE8(v104, &qword_1ED8711C0);
        }
        else
        {
          v188(v105, v104, v7);
        }
        v114 = (uint64_t)v171;
        v115 = v191;
        if ((sub_1CA85B4EC() & 1) != 0)
          v116 = v115;
        else
          v116 = v105;
        v117 = (uint64_t)v174;
        v96(v174, v116, v7);
        v118 = v192;
        v192(v105, v7);
        v119 = (uint64_t)v187;
        sub_1CA267BE8((uint64_t)v187, &qword_1ED8711C0);
        v120 = v194;
        v194(v117, 0, 1, v7);
        sub_1CA24EEF8(v117, v119, &qword_1ED8711C0);
        v121 = (uint64_t)v175;
        v96(v175, v115, v7);
        v120(v121, 0, 1, v7);
        v122 = v114 + *(int *)(v186 + 48);
        sub_1CA2684BC(v119, v114, &qword_1ED8711C0);
        sub_1CA2684BC(v121, v122, &qword_1ED8711C0);
        v123 = v183;
        if (v183(v114, 1, v7) == 1)
        {

          sub_1CA267BE8(v121, &qword_1ED8711C0);
          v118(v115, v7);
          v78 = v115;
          if (v123(v122, 1, v7) != 1)
            goto LABEL_40;
          sub_1CA267BE8(v114, &qword_1ED8711C0);
          v76 = v178;
          v77 = (uint64_t)v179;
          v69 = v166;
          v75 = v193;
        }
        else
        {
          v124 = v165;
          sub_1CA2684BC(v114, v165, &qword_1ED8711C0);
          if (v123(v122, 1, v7) == 1)
          {

            sub_1CA267BE8(v121, &qword_1ED8711C0);
            v78 = v191;
            v125 = (void (*)(uint64_t, uint64_t))v192;
            v192(v191, v7);
            v125(v124, v7);
LABEL_40:
            sub_1CA267BE8(v114, &qword_1ED8744C0);
            v76 = v178;
            v77 = (uint64_t)v179;
            v69 = v166;
            v75 = v193;
LABEL_43:
            result = sub_1CA267BE8(v189, &qword_1ED8744D8);
            goto LABEL_7;
          }
          v126 = v190;
          v188(v190, v122, v7);
          sub_1CA2DF104((unint64_t *)&unk_1ED8711B0, MEMORY[0x1E0CB08B8]);
          v127 = v114;
          v128 = sub_1CA85B504();

          v129 = v192;
          v192(v126, v7);
          sub_1CA267BE8(v121, &qword_1ED8711C0);
          v78 = v191;
          v129(v191, v7);
          v129((char *)v124, v7);
          sub_1CA267BE8(v127, &qword_1ED8711C0);
          v76 = v178;
          v77 = (uint64_t)v179;
          v69 = v166;
          v75 = v193;
          if ((v128 & 1) == 0)
            goto LABEL_43;
        }
        v130 = (uint64_t)v162;
        sub_1CA267BE8((uint64_t)v162, &qword_1ED8744D8);
        result = sub_1CA24EEF8(v189, v130, &qword_1ED8744D8);
LABEL_7:
        if (v75 == ++v79)
          goto LABEL_44;
      }
      sub_1CA267BE8(v100, &qword_1ED8711C0);
      v103 = v85(v102, 1, v7);
      v104 = (uint64_t)v169;
      if (v103 == 1)
      {
        sub_1CA267BE8(v185, &qword_1ED8711C0);
        v105 = v170;
LABEL_28:
        v112 = (uint64_t)v163;
        sub_1CA267BE8((uint64_t)v163, &qword_1ED8744D8);
        sub_1CA2684BC(v189, v112, &qword_1ED8744D8);
        goto LABEL_29;
      }
      goto LABEL_26;
    }
LABEL_44:
    v131 = v161;
    sub_1CA2684BC((uint64_t)v180, v161, &qword_1ED8711C0);
    v132 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v76[6];
    if (v132(v131, 1, v7) == 1)
    {
      v133 = v158;
      v134 = (uint64_t)v163;
      v135 = (uint64_t)v162;
      v136 = (uint64_t)v187;
LABEL_49:
      sub_1CA267BE8(v135, &qword_1ED8744D8);
      sub_1CA267BE8(v134, &qword_1ED8744D8);
      sub_1CA267BE8(v136, &qword_1ED8711C0);
      sub_1CA267BE8((uint64_t)v180, &qword_1ED8711C0);
      sub_1CA267BE8(v131, &qword_1ED8711C0);
      v142 = sub_1CA85AE44();
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v142 - 8) + 56))(v133, 1, 1, v142);
    }
    v138 = v76;
    v139 = (void (*)(char *, uint64_t, uint64_t))v76[4];
    v140 = v160;
    v139(v160, v131, v7);
    v136 = (uint64_t)v187;
    v131 = v159;
    sub_1CA2684BC((uint64_t)v187, v159, &qword_1ED8711C0);
    v141 = v132(v131, 1, v7);
    v133 = v158;
    if (v141 == 1)
    {
      ((void (*)(char *, uint64_t))v138[1])(v140, v7);
      v134 = (uint64_t)v163;
      v135 = (uint64_t)v162;
      goto LABEL_49;
    }
    v143 = v153;
    v139(v153, v131, v7);
    v144 = (void (*)(char *, char *, uint64_t))v138[2];
    v145 = v154;
    v144(v154, v140, v7);
    v146 = v194;
    v194((uint64_t)v145, 0, 1, v7);
    v147 = v155;
    v144(v155, v143, v7);
    v146((uint64_t)v147, 0, 1, v7);
    v148 = (uint64_t)v163;
    sub_1CA2684BC((uint64_t)v163, v156, &qword_1ED8744D8);
    v149 = (uint64_t)v162;
    sub_1CA2684BC((uint64_t)v162, v157, &qword_1ED8744D8);
    sub_1CA85AE38();
    v150 = (void (*)(char *, uint64_t))v138[1];
    v150(v153, v7);
    v150(v140, v7);
    sub_1CA267BE8(v149, &qword_1ED8744D8);
    sub_1CA267BE8(v148, &qword_1ED8744D8);
    sub_1CA267BE8((uint64_t)v187, &qword_1ED8711C0);
    sub_1CA267BE8((uint64_t)v180, &qword_1ED8711C0);
    v151 = sub_1CA85AE44();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v151 - 8) + 56))(v133, 0, 1, v151);
  }
  return result;
}

unint64_t sub_1CA31AB70()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t inited;

  v2 = *v0;
  v1 = v0[1];
  v4 = v0[2];
  v3 = v0[3];
  v5 = v0[4];
  v6 = v0[5];
  v7 = v0[6];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED872780);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1CA8DC420;
  *(_QWORD *)(inited + 32) = 0x657469726F766166;
  *(_QWORD *)(inited + 40) = 0xE900000000000073;
  *(_QWORD *)(inited + 48) = v2;
  *(_QWORD *)(inited + 56) = 0x6C6C696863;
  *(_QWORD *)(inited + 64) = 0xE500000000000000;
  *(_QWORD *)(inited + 72) = v1;
  *(_QWORD *)(inited + 80) = 0x7055746567;
  *(_QWORD *)(inited + 88) = 0xE500000000000000;
  *(_QWORD *)(inited + 96) = v4;
  strcpy((char *)(inited + 104), "humanCurated");
  *(_BYTE *)(inited + 117) = 0;
  *(_WORD *)(inited + 118) = -5120;
  *(_QWORD *)(inited + 120) = v3;
  strcpy((char *)(inited + 128), "MusicForTime");
  *(_BYTE *)(inited + 141) = 0;
  *(_WORD *)(inited + 142) = -5120;
  *(_QWORD *)(inited + 144) = v5;
  *(_QWORD *)(inited + 152) = 0x6D617A616873;
  *(_QWORD *)(inited + 160) = 0xE600000000000000;
  *(_QWORD *)(inited + 168) = v6;
  strcpy((char *)(inited + 176), "musicForArtist");
  *(_BYTE *)(inited + 191) = -18;
  *(_QWORD *)(inited + 192) = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return sub_1CA2745C4(inited);
}

uint64_t sub_1CA31ACE0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v5 = *v2;
  v6 = v2[1];
  v7 = v2[2];
  v8 = v2[3];
  v10 = v2[4];
  v9 = v2[5];
  v11 = v2[6];
  if (*(_QWORD *)(a1 + 16) <= *(_QWORD *)(*v2 + 16) >> 3)
  {
    v14 = *v2;
    swift_bridgeObjectRetain();
    sub_1CA2DE42C(a1);
    v12 = v14;
  }
  else
  {
    swift_bridgeObjectRetain();
    v12 = sub_1CA2D9A4C(a1, v5);
  }
  if (*(_QWORD *)(a1 + 16) <= *(_QWORD *)(v6 + 16) >> 3)
  {
    swift_bridgeObjectRetain();
    sub_1CA2DE42C(a1);
  }
  else
  {
    swift_bridgeObjectRetain();
    v6 = sub_1CA2D9A4C(a1, v6);
  }
  if (*(_QWORD *)(a1 + 16) <= *(_QWORD *)(v7 + 16) >> 3)
  {
    swift_bridgeObjectRetain();
    sub_1CA2DE42C(a1);
  }
  else
  {
    swift_bridgeObjectRetain();
    v7 = sub_1CA2D9A4C(a1, v7);
  }
  if (*(_QWORD *)(a1 + 16) <= *(_QWORD *)(v8 + 16) >> 3)
  {
    swift_bridgeObjectRetain();
    sub_1CA2DE42C(a1);
  }
  else
  {
    swift_bridgeObjectRetain();
    v8 = sub_1CA2D9A4C(a1, v8);
  }
  if (*(_QWORD *)(a1 + 16) <= *(_QWORD *)(v10 + 16) >> 3)
  {
    swift_bridgeObjectRetain();
    sub_1CA2DE42C(a1);
  }
  else
  {
    swift_bridgeObjectRetain();
    v10 = sub_1CA2D9A4C(a1, v10);
  }
  if (*(_QWORD *)(a1 + 16) <= *(_QWORD *)(v9 + 16) >> 3)
  {
    swift_bridgeObjectRetain();
    sub_1CA2DE42C(a1);
  }
  else
  {
    swift_bridgeObjectRetain();
    v9 = sub_1CA2D9A4C(a1, v9);
  }
  if (*(_QWORD *)(a1 + 16) <= *(_QWORD *)(v11 + 16) >> 3)
  {
    swift_bridgeObjectRetain();
    sub_1CA2DE42C(a1);
    result = v11;
  }
  else
  {
    swift_bridgeObjectRetain();
    result = sub_1CA2D9A4C(a1, v11);
  }
  *a2 = v12;
  a2[1] = v6;
  a2[2] = v7;
  a2[3] = v8;
  a2[4] = v10;
  a2[5] = v9;
  a2[6] = result;
  return result;
}

uint64_t MusicCurator.MusicElection.description.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t result;
  int64_t v12;
  int v13;
  int v14;
  char v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  int64_t v30;
  uint64_t v31;
  int64_t v32;
  int v33;
  int v34;
  char v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  int64_t v49;
  uint64_t v50;
  int64_t v51;
  int v52;
  int v53;
  char v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char v66;
  uint64_t v67;
  int64_t v68;
  uint64_t v69;
  int64_t v70;
  int v71;
  int v72;
  char v73;
  char v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char v84;
  uint64_t v85;
  int64_t v86;
  uint64_t v87;
  int64_t v88;
  int v89;
  int v90;
  char v91;
  char v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  unint64_t v99;
  unint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char v103;
  uint64_t v104;
  int64_t v105;
  uint64_t v106;
  int64_t v107;
  int v108;
  int v109;
  char v110;
  char v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  unint64_t v118;
  unint64_t v119;
  uint64_t v120;
  uint64_t v121;
  char v122;
  int64_t v123;
  uint64_t v124;
  uint64_t v125;
  int64_t v126;
  int v127;
  int v128;
  char v129;
  char v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  unint64_t v136;
  unint64_t v137;
  uint64_t v138;
  uint64_t v139;
  char v140;
  _QWORD v141[2];
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  unint64_t v155;

  v1 = type metadata accessor for Song();
  v152 = *(_QWORD *)(v1 - 8);
  v2 = MEMORY[0x1E0C80A78](v1);
  v151 = (uint64_t)v141 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v2);
  v150 = (uint64_t)v141 - v4;
  v6 = *v0;
  v5 = v0[1];
  v148 = v0[2];
  v149 = v5;
  v7 = v0[3];
  v144 = v0[4];
  v145 = v7;
  v8 = v0[6];
  v142 = v0[5];
  v143 = v8;
  v154 = 0;
  v155 = 0xE000000000000000;
  sub_1CA85BEC4();
  sub_1CA85B624();
  v9 = *(_QWORD *)(v6 + 16);
  v10 = MEMORY[0x1E0DEE9D8];
  if (v9)
  {
    v153 = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    sub_1CA3FB754(0, v9, 0);
    result = sub_1CA31D164(v6);
    v12 = result;
    v14 = v13;
    v16 = v15 & 1;
    v146 = v6;
    v147 = v6 + 56;
    while ((v12 & 0x8000000000000000) == 0 && v12 < 1 << *(_BYTE *)(v6 + 32))
    {
      if (((*(_QWORD *)(v147 + (((unint64_t)v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
        goto LABEL_87;
      if (*(_DWORD *)(v6 + 36) != v14)
        goto LABEL_88;
      v17 = v150;
      sub_1CA268434(*(_QWORD *)(v6 + 48) + *(_QWORD *)(v152 + 72) * v12, v150);
      v18 = v151;
      sub_1CA268478(v17, v151);
      v19 = Song.compactDescription.getter();
      v21 = v20;
      sub_1CA268588(v18);
      v10 = v153;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1CA3FB754(0, *(_QWORD *)(v10 + 16) + 1, 1);
        v10 = v153;
      }
      v23 = *(_QWORD *)(v10 + 16);
      v22 = *(_QWORD *)(v10 + 24);
      if (v23 >= v22 >> 1)
      {
        sub_1CA3FB754(v22 > 1, v23 + 1, 1);
        v10 = v153;
      }
      *(_QWORD *)(v10 + 16) = v23 + 1;
      v24 = v10 + 16 * v23;
      *(_QWORD *)(v24 + 32) = v19;
      *(_QWORD *)(v24 + 40) = v21;
      v6 = v146;
      result = sub_1CA31D208(v12, v14, v16 & 1, v146);
      v12 = result;
      v14 = v25;
      v16 = v26 & 1;
      if (!--v9)
      {
        sub_1CA2685C4(result, v25, v26 & 1);
        swift_bridgeObjectRelease();
        goto LABEL_13;
      }
    }
    __break(1u);
LABEL_87:
    __break(1u);
LABEL_88:
    __break(1u);
    goto LABEL_89;
  }
LABEL_13:
  v153 = v10;
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED872270);
  v28 = sub_1CA282410();
  v146 = v27;
  v141[1] = v28;
  sub_1CA85B4D4();
  swift_bridgeObjectRelease();
  sub_1CA85B624();
  swift_bridgeObjectRelease();
  sub_1CA85B624();
  v29 = v149;
  v30 = *(_QWORD *)(v149 + 16);
  v31 = MEMORY[0x1E0DEE9D8];
  if (v30)
  {
    v153 = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    sub_1CA3FB754(0, v30, 0);
    result = sub_1CA31D164(v29);
    v32 = result;
    v34 = v33;
    v36 = v35 & 1;
    v147 = v29 + 56;
    while ((v32 & 0x8000000000000000) == 0 && v32 < 1 << *(_BYTE *)(v29 + 32))
    {
      if (((*(_QWORD *)(v147 + (((unint64_t)v32 >> 3) & 0xFFFFFFFFFFFFF8)) >> v32) & 1) == 0)
        goto LABEL_90;
      if (*(_DWORD *)(v29 + 36) != v34)
        goto LABEL_91;
      v37 = *(_QWORD *)(v29 + 48) + *(_QWORD *)(v152 + 72) * v32;
      v38 = v150;
      sub_1CA268434(v37, v150);
      v39 = v151;
      sub_1CA268478(v38, v151);
      v40 = Song.compactDescription.getter();
      v42 = v41;
      sub_1CA268588(v39);
      v31 = v153;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1CA3FB754(0, *(_QWORD *)(v31 + 16) + 1, 1);
        v31 = v153;
      }
      v44 = *(_QWORD *)(v31 + 16);
      v43 = *(_QWORD *)(v31 + 24);
      if (v44 >= v43 >> 1)
      {
        sub_1CA3FB754(v43 > 1, v44 + 1, 1);
        v31 = v153;
      }
      *(_QWORD *)(v31 + 16) = v44 + 1;
      v45 = v31 + 16 * v44;
      *(_QWORD *)(v45 + 32) = v40;
      *(_QWORD *)(v45 + 40) = v42;
      v29 = v149;
      result = sub_1CA31D208(v32, v34, v36 & 1, v149);
      v32 = result;
      v34 = v46;
      v36 = v47 & 1;
      if (!--v30)
      {
        sub_1CA2685C4(result, v46, v47 & 1);
        swift_bridgeObjectRelease();
        goto LABEL_25;
      }
    }
LABEL_89:
    __break(1u);
LABEL_90:
    __break(1u);
LABEL_91:
    __break(1u);
    goto LABEL_92;
  }
LABEL_25:
  v153 = v31;
  sub_1CA85B4D4();
  swift_bridgeObjectRelease();
  sub_1CA85B624();
  swift_bridgeObjectRelease();
  sub_1CA85B624();
  v48 = v148;
  v49 = *(_QWORD *)(v148 + 16);
  v50 = MEMORY[0x1E0DEE9D8];
  if (v49)
  {
    v153 = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    sub_1CA3FB754(0, v49, 0);
    result = sub_1CA31D164(v48);
    v51 = result;
    v53 = v52;
    v55 = v54 & 1;
    v149 = v48 + 56;
    while ((v51 & 0x8000000000000000) == 0 && v51 < 1 << *(_BYTE *)(v48 + 32))
    {
      if (((*(_QWORD *)(v149 + (((unint64_t)v51 >> 3) & 0xFFFFFFFFFFFFF8)) >> v51) & 1) == 0)
        goto LABEL_93;
      if (*(_DWORD *)(v48 + 36) != v53)
        goto LABEL_94;
      v56 = *(_QWORD *)(v48 + 48) + *(_QWORD *)(v152 + 72) * v51;
      v57 = v150;
      sub_1CA268434(v56, v150);
      v58 = v151;
      sub_1CA268478(v57, v151);
      v59 = Song.compactDescription.getter();
      v61 = v60;
      sub_1CA268588(v58);
      v50 = v153;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1CA3FB754(0, *(_QWORD *)(v50 + 16) + 1, 1);
        v50 = v153;
      }
      v63 = *(_QWORD *)(v50 + 16);
      v62 = *(_QWORD *)(v50 + 24);
      if (v63 >= v62 >> 1)
      {
        sub_1CA3FB754(v62 > 1, v63 + 1, 1);
        v50 = v153;
      }
      *(_QWORD *)(v50 + 16) = v63 + 1;
      v64 = v50 + 16 * v63;
      *(_QWORD *)(v64 + 32) = v59;
      *(_QWORD *)(v64 + 40) = v61;
      v48 = v148;
      result = sub_1CA31D208(v51, v53, v55 & 1, v148);
      v51 = result;
      v53 = v65;
      v55 = v66 & 1;
      if (!--v49)
      {
        sub_1CA2685C4(result, v65, v66 & 1);
        swift_bridgeObjectRelease();
        goto LABEL_37;
      }
    }
LABEL_92:
    __break(1u);
LABEL_93:
    __break(1u);
LABEL_94:
    __break(1u);
    goto LABEL_95;
  }
LABEL_37:
  v67 = v145;
  v153 = v50;
  sub_1CA85B4D4();
  swift_bridgeObjectRelease();
  sub_1CA85B624();
  swift_bridgeObjectRelease();
  sub_1CA85B624();
  v68 = *(_QWORD *)(v67 + 16);
  v69 = MEMORY[0x1E0DEE9D8];
  if (v68)
  {
    v153 = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    sub_1CA3FB754(0, v68, 0);
    result = sub_1CA31D164(v67);
    v70 = result;
    v72 = v71;
    v74 = v73 & 1;
    v149 = v67 + 56;
    while ((v70 & 0x8000000000000000) == 0 && v70 < 1 << *(_BYTE *)(v67 + 32))
    {
      if (((*(_QWORD *)(v149 + (((unint64_t)v70 >> 3) & 0xFFFFFFFFFFFFF8)) >> v70) & 1) == 0)
        goto LABEL_96;
      if (*(_DWORD *)(v67 + 36) != v72)
        goto LABEL_97;
      v75 = v150;
      sub_1CA268434(*(_QWORD *)(v67 + 48) + *(_QWORD *)(v152 + 72) * v70, v150);
      v76 = v151;
      sub_1CA268478(v75, v151);
      v77 = Song.compactDescription.getter();
      v79 = v78;
      sub_1CA268588(v76);
      v69 = v153;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1CA3FB754(0, *(_QWORD *)(v69 + 16) + 1, 1);
        v69 = v153;
      }
      v81 = *(_QWORD *)(v69 + 16);
      v80 = *(_QWORD *)(v69 + 24);
      if (v81 >= v80 >> 1)
      {
        sub_1CA3FB754(v80 > 1, v81 + 1, 1);
        v69 = v153;
      }
      *(_QWORD *)(v69 + 16) = v81 + 1;
      v82 = v69 + 16 * v81;
      *(_QWORD *)(v82 + 32) = v77;
      *(_QWORD *)(v82 + 40) = v79;
      v67 = v145;
      result = sub_1CA31D208(v70, v72, v74 & 1, v145);
      v70 = result;
      v72 = v83;
      v74 = v84 & 1;
      if (!--v68)
      {
        sub_1CA2685C4(result, v83, v84 & 1);
        swift_bridgeObjectRelease();
        goto LABEL_49;
      }
    }
LABEL_95:
    __break(1u);
LABEL_96:
    __break(1u);
LABEL_97:
    __break(1u);
    goto LABEL_98;
  }
LABEL_49:
  v153 = v69;
  sub_1CA85B4D4();
  swift_bridgeObjectRelease();
  sub_1CA85B624();
  swift_bridgeObjectRelease();
  sub_1CA85B624();
  v85 = v144;
  v86 = *(_QWORD *)(v144 + 16);
  v87 = MEMORY[0x1E0DEE9D8];
  if (v86)
  {
    v153 = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    sub_1CA3FB754(0, v86, 0);
    result = sub_1CA31D164(v85);
    v88 = result;
    v90 = v89;
    v92 = v91 & 1;
    v149 = v85 + 56;
    while ((v88 & 0x8000000000000000) == 0 && v88 < 1 << *(_BYTE *)(v85 + 32))
    {
      if (((*(_QWORD *)(v149 + (((unint64_t)v88 >> 3) & 0xFFFFFFFFFFFFF8)) >> v88) & 1) == 0)
        goto LABEL_99;
      if (*(_DWORD *)(v85 + 36) != v90)
        goto LABEL_100;
      v93 = *(_QWORD *)(v85 + 48) + *(_QWORD *)(v152 + 72) * v88;
      v94 = v150;
      sub_1CA268434(v93, v150);
      v95 = v151;
      sub_1CA268478(v94, v151);
      v96 = Song.compactDescription.getter();
      v98 = v97;
      sub_1CA268588(v95);
      v87 = v153;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1CA3FB754(0, *(_QWORD *)(v87 + 16) + 1, 1);
        v87 = v153;
      }
      v100 = *(_QWORD *)(v87 + 16);
      v99 = *(_QWORD *)(v87 + 24);
      if (v100 >= v99 >> 1)
      {
        sub_1CA3FB754(v99 > 1, v100 + 1, 1);
        v87 = v153;
      }
      *(_QWORD *)(v87 + 16) = v100 + 1;
      v101 = v87 + 16 * v100;
      *(_QWORD *)(v101 + 32) = v96;
      *(_QWORD *)(v101 + 40) = v98;
      v85 = v144;
      result = sub_1CA31D208(v88, v90, v92 & 1, v144);
      v88 = result;
      v90 = v102;
      v92 = v103 & 1;
      if (!--v86)
      {
        sub_1CA2685C4(result, v102, v103 & 1);
        swift_bridgeObjectRelease();
        goto LABEL_61;
      }
    }
LABEL_98:
    __break(1u);
LABEL_99:
    __break(1u);
LABEL_100:
    __break(1u);
    goto LABEL_101;
  }
LABEL_61:
  v153 = v87;
  sub_1CA85B4D4();
  swift_bridgeObjectRelease();
  sub_1CA85B624();
  swift_bridgeObjectRelease();
  sub_1CA85B624();
  v104 = v142;
  v105 = *(_QWORD *)(v142 + 16);
  v106 = MEMORY[0x1E0DEE9D8];
  if (v105)
  {
    v153 = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    sub_1CA3FB754(0, v105, 0);
    result = sub_1CA31D164(v104);
    v107 = result;
    v109 = v108;
    v111 = v110 & 1;
    v149 = v104 + 56;
    while ((v107 & 0x8000000000000000) == 0 && v107 < 1 << *(_BYTE *)(v104 + 32))
    {
      if (((*(_QWORD *)(v149 + (((unint64_t)v107 >> 3) & 0xFFFFFFFFFFFFF8)) >> v107) & 1) == 0)
        goto LABEL_102;
      if (*(_DWORD *)(v104 + 36) != v109)
        goto LABEL_103;
      v112 = *(_QWORD *)(v104 + 48) + *(_QWORD *)(v152 + 72) * v107;
      v113 = v150;
      sub_1CA268434(v112, v150);
      v114 = v151;
      sub_1CA268478(v113, v151);
      v115 = Song.compactDescription.getter();
      v117 = v116;
      sub_1CA268588(v114);
      v106 = v153;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1CA3FB754(0, *(_QWORD *)(v106 + 16) + 1, 1);
        v106 = v153;
      }
      v119 = *(_QWORD *)(v106 + 16);
      v118 = *(_QWORD *)(v106 + 24);
      if (v119 >= v118 >> 1)
      {
        sub_1CA3FB754(v118 > 1, v119 + 1, 1);
        v106 = v153;
      }
      *(_QWORD *)(v106 + 16) = v119 + 1;
      v120 = v106 + 16 * v119;
      *(_QWORD *)(v120 + 32) = v115;
      *(_QWORD *)(v120 + 40) = v117;
      v104 = v142;
      result = sub_1CA31D208(v107, v109, v111 & 1, v142);
      v107 = result;
      v109 = v121;
      v111 = v122 & 1;
      if (!--v105)
      {
        sub_1CA2685C4(result, v121, v122 & 1);
        swift_bridgeObjectRelease();
        goto LABEL_73;
      }
    }
LABEL_101:
    __break(1u);
LABEL_102:
    __break(1u);
LABEL_103:
    __break(1u);
    goto LABEL_104;
  }
LABEL_73:
  v153 = v106;
  sub_1CA85B4D4();
  swift_bridgeObjectRelease();
  sub_1CA85B624();
  swift_bridgeObjectRelease();
  sub_1CA85B624();
  v123 = *(_QWORD *)(v143 + 16);
  v124 = MEMORY[0x1E0DEE9D8];
  if (!v123)
  {
LABEL_85:
    v153 = v124;
    sub_1CA85B4D4();
    swift_bridgeObjectRelease();
    sub_1CA85B624();
    swift_bridgeObjectRelease();
    sub_1CA85B624();
    return v154;
  }
  v153 = MEMORY[0x1E0DEE9D8];
  swift_bridgeObjectRetain();
  sub_1CA3FB754(0, v123, 0);
  v125 = v143;
  result = sub_1CA31D164(v143);
  v126 = result;
  v128 = v127;
  v130 = v129 & 1;
  v149 = v125 + 56;
  while ((v126 & 0x8000000000000000) == 0 && v126 < 1 << *(_BYTE *)(v125 + 32))
  {
    if (((*(_QWORD *)(v149 + (((unint64_t)v126 >> 3) & 0xFFFFFFFFFFFFF8)) >> v126) & 1) == 0)
      goto LABEL_105;
    if (*(_DWORD *)(v125 + 36) != v128)
      goto LABEL_106;
    v131 = v150;
    sub_1CA268434(*(_QWORD *)(v125 + 48) + *(_QWORD *)(v152 + 72) * v126, v150);
    v132 = v151;
    sub_1CA268478(v131, v151);
    v133 = Song.compactDescription.getter();
    v135 = v134;
    sub_1CA268588(v132);
    v124 = v153;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1CA3FB754(0, *(_QWORD *)(v124 + 16) + 1, 1);
      v124 = v153;
    }
    v137 = *(_QWORD *)(v124 + 16);
    v136 = *(_QWORD *)(v124 + 24);
    v125 = v143;
    if (v137 >= v136 >> 1)
    {
      sub_1CA3FB754(v136 > 1, v137 + 1, 1);
      v125 = v143;
      v124 = v153;
    }
    *(_QWORD *)(v124 + 16) = v137 + 1;
    v138 = v124 + 16 * v137;
    *(_QWORD *)(v138 + 32) = v133;
    *(_QWORD *)(v138 + 40) = v135;
    result = sub_1CA31D208(v126, v128, v130 & 1, v125);
    v126 = result;
    v128 = v139;
    v130 = v140 & 1;
    if (!--v123)
    {
      sub_1CA2685C4(result, v139, v140 & 1);
      swift_bridgeObjectRelease();
      goto LABEL_85;
    }
  }
LABEL_104:
  __break(1u);
LABEL_105:
  __break(1u);
LABEL_106:
  __break(1u);
  return result;
}

uint64_t MusicCurator.MusicElection.jsonDescription.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t result;
  int64_t v12;
  int v13;
  int v14;
  char v15;
  char v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  int64_t v29;
  uint64_t v30;
  int64_t v31;
  int v32;
  int v33;
  char v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  int64_t v47;
  uint64_t v48;
  int64_t v49;
  int v50;
  int v51;
  char v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t *v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char v63;
  uint64_t v64;
  int64_t v65;
  uint64_t v66;
  int64_t v67;
  int v68;
  int v69;
  char v70;
  char v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t *v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char v81;
  int64_t v82;
  uint64_t v83;
  uint64_t v84;
  int64_t v85;
  int v86;
  int v87;
  char v88;
  char v89;
  uint64_t v90;
  uint64_t *v91;
  uint64_t v92;
  uint64_t v93;
  unint64_t v94;
  unint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char v98;
  int64_t v99;
  uint64_t v100;
  uint64_t v101;
  int64_t v102;
  int v103;
  int v104;
  char v105;
  char v106;
  uint64_t v107;
  uint64_t *v108;
  uint64_t v109;
  uint64_t v110;
  unint64_t v111;
  unint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char v115;
  int64_t v116;
  uint64_t v117;
  uint64_t v118;
  int64_t v119;
  int v120;
  int v121;
  char v122;
  char v123;
  uint64_t v124;
  uint64_t *v125;
  uint64_t v126;
  uint64_t v127;
  unint64_t v128;
  unint64_t v129;
  uint64_t v130;
  uint64_t v131;
  char v132;
  _QWORD v133[2];
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t *v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  unint64_t v147;

  v1 = type metadata accessor for Song();
  v144 = *(_QWORD *)(v1 - 8);
  v2 = MEMORY[0x1E0C80A78](v1);
  v143 = (_QWORD *)((char *)v133 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v2);
  v142 = (uint64_t)v133 - v4;
  v6 = *v0;
  v5 = v0[1];
  v140 = v0[2];
  v141 = v5;
  v7 = v0[4];
  v136 = v0[3];
  v137 = v7;
  v8 = v0[5];
  v134 = v0[6];
  v135 = v8;
  v146 = 0;
  v147 = 0xE000000000000000;
  sub_1CA85BEC4();
  sub_1CA85B624();
  v9 = *(_QWORD *)(v6 + 16);
  v10 = MEMORY[0x1E0DEE9D8];
  if (v9)
  {
    v145 = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    sub_1CA3FB754(0, v9, 0);
    result = sub_1CA31D164(v6);
    v12 = result;
    v14 = v13;
    v16 = v15 & 1;
    v138 = v6;
    v139 = v6 + 56;
    while ((v12 & 0x8000000000000000) == 0 && v12 < 1 << *(_BYTE *)(v6 + 32))
    {
      if (((*(_QWORD *)(v139 + (((unint64_t)v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
        goto LABEL_87;
      if (*(_DWORD *)(v6 + 36) != v14)
        goto LABEL_88;
      v17 = v142;
      sub_1CA268434(*(_QWORD *)(v6 + 48) + *(_QWORD *)(v144 + 72) * v12, v142);
      v18 = v143;
      sub_1CA268478(v17, (uint64_t)v143);
      v19 = *v18;
      v20 = v18[1];
      swift_bridgeObjectRetain();
      sub_1CA268588((uint64_t)v18);
      v10 = v145;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1CA3FB754(0, *(_QWORD *)(v10 + 16) + 1, 1);
        v10 = v145;
      }
      v22 = *(_QWORD *)(v10 + 16);
      v21 = *(_QWORD *)(v10 + 24);
      if (v22 >= v21 >> 1)
      {
        sub_1CA3FB754(v21 > 1, v22 + 1, 1);
        v10 = v145;
      }
      *(_QWORD *)(v10 + 16) = v22 + 1;
      v23 = v10 + 16 * v22;
      *(_QWORD *)(v23 + 32) = v19;
      *(_QWORD *)(v23 + 40) = v20;
      v6 = v138;
      result = sub_1CA31D208(v12, v14, v16 & 1, v138);
      v12 = result;
      v14 = v24;
      v16 = v25 & 1;
      if (!--v9)
      {
        sub_1CA2685C4(result, v24, v25 & 1);
        swift_bridgeObjectRelease();
        goto LABEL_13;
      }
    }
    __break(1u);
LABEL_87:
    __break(1u);
LABEL_88:
    __break(1u);
    goto LABEL_89;
  }
LABEL_13:
  v145 = v10;
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED872270);
  v27 = sub_1CA282410();
  v138 = v26;
  v133[1] = v27;
  sub_1CA85B4D4();
  swift_bridgeObjectRelease();
  sub_1CA85B624();
  swift_bridgeObjectRelease();
  sub_1CA85B624();
  v28 = v141;
  v29 = *(_QWORD *)(v141 + 16);
  v30 = MEMORY[0x1E0DEE9D8];
  if (v29)
  {
    v145 = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    sub_1CA3FB754(0, v29, 0);
    result = sub_1CA31D164(v28);
    v31 = result;
    v33 = v32;
    v35 = v34 & 1;
    v139 = v28 + 56;
    while ((v31 & 0x8000000000000000) == 0 && v31 < 1 << *(_BYTE *)(v28 + 32))
    {
      if (((*(_QWORD *)(v139 + (((unint64_t)v31 >> 3) & 0xFFFFFFFFFFFFF8)) >> v31) & 1) == 0)
        goto LABEL_90;
      if (*(_DWORD *)(v28 + 36) != v33)
        goto LABEL_91;
      v36 = *(_QWORD *)(v28 + 48) + *(_QWORD *)(v144 + 72) * v31;
      v37 = v142;
      sub_1CA268434(v36, v142);
      v38 = v143;
      sub_1CA268478(v37, (uint64_t)v143);
      v39 = *v38;
      v40 = v38[1];
      swift_bridgeObjectRetain();
      sub_1CA268588((uint64_t)v38);
      v30 = v145;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1CA3FB754(0, *(_QWORD *)(v30 + 16) + 1, 1);
        v30 = v145;
      }
      v42 = *(_QWORD *)(v30 + 16);
      v41 = *(_QWORD *)(v30 + 24);
      if (v42 >= v41 >> 1)
      {
        sub_1CA3FB754(v41 > 1, v42 + 1, 1);
        v30 = v145;
      }
      *(_QWORD *)(v30 + 16) = v42 + 1;
      v43 = v30 + 16 * v42;
      *(_QWORD *)(v43 + 32) = v39;
      *(_QWORD *)(v43 + 40) = v40;
      v28 = v141;
      result = sub_1CA31D208(v31, v33, v35 & 1, v141);
      v31 = result;
      v33 = v44;
      v35 = v45 & 1;
      if (!--v29)
      {
        sub_1CA2685C4(result, v44, v45 & 1);
        swift_bridgeObjectRelease();
        goto LABEL_25;
      }
    }
LABEL_89:
    __break(1u);
LABEL_90:
    __break(1u);
LABEL_91:
    __break(1u);
    goto LABEL_92;
  }
LABEL_25:
  v46 = v140;
  v145 = v30;
  sub_1CA85B4D4();
  swift_bridgeObjectRelease();
  sub_1CA85B624();
  swift_bridgeObjectRelease();
  sub_1CA85B624();
  v47 = *(_QWORD *)(v46 + 16);
  v48 = MEMORY[0x1E0DEE9D8];
  if (v47)
  {
    v145 = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    sub_1CA3FB754(0, v47, 0);
    result = sub_1CA31D164(v46);
    v49 = result;
    v51 = v50;
    v53 = v52 & 1;
    v141 = v46 + 56;
    while ((v49 & 0x8000000000000000) == 0 && v49 < 1 << *(_BYTE *)(v46 + 32))
    {
      if (((*(_QWORD *)(v141 + (((unint64_t)v49 >> 3) & 0xFFFFFFFFFFFFF8)) >> v49) & 1) == 0)
        goto LABEL_93;
      if (*(_DWORD *)(v46 + 36) != v51)
        goto LABEL_94;
      v54 = *(_QWORD *)(v46 + 48) + *(_QWORD *)(v144 + 72) * v49;
      v55 = v142;
      sub_1CA268434(v54, v142);
      v56 = v143;
      sub_1CA268478(v55, (uint64_t)v143);
      v57 = *v56;
      v58 = v56[1];
      swift_bridgeObjectRetain();
      sub_1CA268588((uint64_t)v56);
      v48 = v145;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1CA3FB754(0, *(_QWORD *)(v48 + 16) + 1, 1);
        v48 = v145;
      }
      v60 = *(_QWORD *)(v48 + 16);
      v59 = *(_QWORD *)(v48 + 24);
      if (v60 >= v59 >> 1)
      {
        sub_1CA3FB754(v59 > 1, v60 + 1, 1);
        v48 = v145;
      }
      *(_QWORD *)(v48 + 16) = v60 + 1;
      v61 = v48 + 16 * v60;
      *(_QWORD *)(v61 + 32) = v57;
      *(_QWORD *)(v61 + 40) = v58;
      v46 = v140;
      result = sub_1CA31D208(v49, v51, v53 & 1, v140);
      v49 = result;
      v51 = v62;
      v53 = v63 & 1;
      if (!--v47)
      {
        sub_1CA2685C4(result, v62, v63 & 1);
        swift_bridgeObjectRelease();
        goto LABEL_37;
      }
    }
LABEL_92:
    __break(1u);
LABEL_93:
    __break(1u);
LABEL_94:
    __break(1u);
    goto LABEL_95;
  }
LABEL_37:
  v64 = v136;
  v145 = v48;
  sub_1CA85B4D4();
  swift_bridgeObjectRelease();
  sub_1CA85B624();
  swift_bridgeObjectRelease();
  sub_1CA85B624();
  v65 = *(_QWORD *)(v64 + 16);
  v66 = MEMORY[0x1E0DEE9D8];
  if (v65)
  {
    v145 = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    sub_1CA3FB754(0, v65, 0);
    result = sub_1CA31D164(v64);
    v67 = result;
    v69 = v68;
    v71 = v70 & 1;
    v141 = v64 + 56;
    while ((v67 & 0x8000000000000000) == 0 && v67 < 1 << *(_BYTE *)(v64 + 32))
    {
      if (((*(_QWORD *)(v141 + (((unint64_t)v67 >> 3) & 0xFFFFFFFFFFFFF8)) >> v67) & 1) == 0)
        goto LABEL_96;
      if (*(_DWORD *)(v64 + 36) != v69)
        goto LABEL_97;
      v72 = *(_QWORD *)(v64 + 48) + *(_QWORD *)(v144 + 72) * v67;
      v73 = v142;
      sub_1CA268434(v72, v142);
      v74 = v143;
      sub_1CA268478(v73, (uint64_t)v143);
      v75 = *v74;
      v76 = v74[1];
      swift_bridgeObjectRetain();
      sub_1CA268588((uint64_t)v74);
      v66 = v145;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1CA3FB754(0, *(_QWORD *)(v66 + 16) + 1, 1);
        v66 = v145;
      }
      v78 = *(_QWORD *)(v66 + 16);
      v77 = *(_QWORD *)(v66 + 24);
      if (v78 >= v77 >> 1)
      {
        sub_1CA3FB754(v77 > 1, v78 + 1, 1);
        v66 = v145;
      }
      *(_QWORD *)(v66 + 16) = v78 + 1;
      v79 = v66 + 16 * v78;
      *(_QWORD *)(v79 + 32) = v75;
      *(_QWORD *)(v79 + 40) = v76;
      v64 = v136;
      result = sub_1CA31D208(v67, v69, v71 & 1, v136);
      v67 = result;
      v69 = v80;
      v71 = v81 & 1;
      if (!--v65)
      {
        sub_1CA2685C4(result, v80, v81 & 1);
        swift_bridgeObjectRelease();
        goto LABEL_49;
      }
    }
LABEL_95:
    __break(1u);
LABEL_96:
    __break(1u);
LABEL_97:
    __break(1u);
    goto LABEL_98;
  }
LABEL_49:
  v145 = v66;
  sub_1CA85B4D4();
  swift_bridgeObjectRelease();
  sub_1CA85B624();
  swift_bridgeObjectRelease();
  sub_1CA85B624();
  v82 = *(_QWORD *)(v137 + 16);
  v83 = MEMORY[0x1E0DEE9D8];
  if (v82)
  {
    v145 = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    sub_1CA3FB754(0, v82, 0);
    v84 = v137;
    result = sub_1CA31D164(v137);
    v85 = result;
    v87 = v86;
    v89 = v88 & 1;
    v141 = v84 + 56;
    while ((v85 & 0x8000000000000000) == 0 && v85 < 1 << *(_BYTE *)(v84 + 32))
    {
      if (((*(_QWORD *)(v141 + (((unint64_t)v85 >> 3) & 0xFFFFFFFFFFFFF8)) >> v85) & 1) == 0)
        goto LABEL_99;
      if (*(_DWORD *)(v84 + 36) != v87)
        goto LABEL_100;
      v90 = v142;
      sub_1CA268434(*(_QWORD *)(v84 + 48) + *(_QWORD *)(v144 + 72) * v85, v142);
      v91 = v143;
      sub_1CA268478(v90, (uint64_t)v143);
      v92 = *v91;
      v93 = v91[1];
      swift_bridgeObjectRetain();
      sub_1CA268588((uint64_t)v91);
      v83 = v145;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1CA3FB754(0, *(_QWORD *)(v83 + 16) + 1, 1);
        v83 = v145;
      }
      v84 = v137;
      v95 = *(_QWORD *)(v83 + 16);
      v94 = *(_QWORD *)(v83 + 24);
      if (v95 >= v94 >> 1)
      {
        sub_1CA3FB754(v94 > 1, v95 + 1, 1);
        v84 = v137;
        v83 = v145;
      }
      *(_QWORD *)(v83 + 16) = v95 + 1;
      v96 = v83 + 16 * v95;
      *(_QWORD *)(v96 + 32) = v92;
      *(_QWORD *)(v96 + 40) = v93;
      result = sub_1CA31D208(v85, v87, v89 & 1, v84);
      v85 = result;
      v87 = v97;
      v89 = v98 & 1;
      if (!--v82)
      {
        sub_1CA2685C4(result, v97, v98 & 1);
        swift_bridgeObjectRelease();
        goto LABEL_61;
      }
    }
LABEL_98:
    __break(1u);
LABEL_99:
    __break(1u);
LABEL_100:
    __break(1u);
    goto LABEL_101;
  }
LABEL_61:
  v145 = v83;
  sub_1CA85B4D4();
  swift_bridgeObjectRelease();
  sub_1CA85B624();
  swift_bridgeObjectRelease();
  sub_1CA85B624();
  v99 = *(_QWORD *)(v135 + 16);
  v100 = MEMORY[0x1E0DEE9D8];
  if (v99)
  {
    v145 = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    sub_1CA3FB754(0, v99, 0);
    v101 = v135;
    result = sub_1CA31D164(v135);
    v102 = result;
    v104 = v103;
    v106 = v105 & 1;
    v141 = v101 + 56;
    while ((v102 & 0x8000000000000000) == 0 && v102 < 1 << *(_BYTE *)(v101 + 32))
    {
      if (((*(_QWORD *)(v141 + (((unint64_t)v102 >> 3) & 0xFFFFFFFFFFFFF8)) >> v102) & 1) == 0)
        goto LABEL_102;
      if (*(_DWORD *)(v101 + 36) != v104)
        goto LABEL_103;
      v107 = v142;
      sub_1CA268434(*(_QWORD *)(v101 + 48) + *(_QWORD *)(v144 + 72) * v102, v142);
      v108 = v143;
      sub_1CA268478(v107, (uint64_t)v143);
      v109 = *v108;
      v110 = v108[1];
      swift_bridgeObjectRetain();
      sub_1CA268588((uint64_t)v108);
      v100 = v145;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1CA3FB754(0, *(_QWORD *)(v100 + 16) + 1, 1);
        v100 = v145;
      }
      v101 = v135;
      v112 = *(_QWORD *)(v100 + 16);
      v111 = *(_QWORD *)(v100 + 24);
      if (v112 >= v111 >> 1)
      {
        sub_1CA3FB754(v111 > 1, v112 + 1, 1);
        v101 = v135;
        v100 = v145;
      }
      *(_QWORD *)(v100 + 16) = v112 + 1;
      v113 = v100 + 16 * v112;
      *(_QWORD *)(v113 + 32) = v109;
      *(_QWORD *)(v113 + 40) = v110;
      result = sub_1CA31D208(v102, v104, v106 & 1, v101);
      v102 = result;
      v104 = v114;
      v106 = v115 & 1;
      if (!--v99)
      {
        sub_1CA2685C4(result, v114, v115 & 1);
        swift_bridgeObjectRelease();
        goto LABEL_73;
      }
    }
LABEL_101:
    __break(1u);
LABEL_102:
    __break(1u);
LABEL_103:
    __break(1u);
    goto LABEL_104;
  }
LABEL_73:
  v145 = v100;
  sub_1CA85B4D4();
  swift_bridgeObjectRelease();
  sub_1CA85B624();
  swift_bridgeObjectRelease();
  sub_1CA85B624();
  v116 = *(_QWORD *)(v134 + 16);
  v117 = MEMORY[0x1E0DEE9D8];
  if (!v116)
  {
LABEL_85:
    v145 = v117;
    sub_1CA85B4D4();
    swift_bridgeObjectRelease();
    sub_1CA85B624();
    swift_bridgeObjectRelease();
    sub_1CA85B624();
    return v146;
  }
  v145 = MEMORY[0x1E0DEE9D8];
  swift_bridgeObjectRetain();
  sub_1CA3FB754(0, v116, 0);
  v118 = v134;
  result = sub_1CA31D164(v134);
  v119 = result;
  v121 = v120;
  v123 = v122 & 1;
  v141 = v118 + 56;
  while ((v119 & 0x8000000000000000) == 0 && v119 < 1 << *(_BYTE *)(v118 + 32))
  {
    if (((*(_QWORD *)(v141 + (((unint64_t)v119 >> 3) & 0xFFFFFFFFFFFFF8)) >> v119) & 1) == 0)
      goto LABEL_105;
    if (*(_DWORD *)(v118 + 36) != v121)
      goto LABEL_106;
    v124 = v142;
    sub_1CA268434(*(_QWORD *)(v118 + 48) + *(_QWORD *)(v144 + 72) * v119, v142);
    v125 = v143;
    sub_1CA268478(v124, (uint64_t)v143);
    v126 = *v125;
    v127 = v125[1];
    swift_bridgeObjectRetain();
    sub_1CA268588((uint64_t)v125);
    v117 = v145;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1CA3FB754(0, *(_QWORD *)(v117 + 16) + 1, 1);
      v117 = v145;
    }
    v129 = *(_QWORD *)(v117 + 16);
    v128 = *(_QWORD *)(v117 + 24);
    v118 = v134;
    if (v129 >= v128 >> 1)
    {
      sub_1CA3FB754(v128 > 1, v129 + 1, 1);
      v118 = v134;
      v117 = v145;
    }
    *(_QWORD *)(v117 + 16) = v129 + 1;
    v130 = v117 + 16 * v129;
    *(_QWORD *)(v130 + 32) = v126;
    *(_QWORD *)(v130 + 40) = v127;
    result = sub_1CA31D208(v119, v121, v123 & 1, v118);
    v119 = result;
    v121 = v131;
    v123 = v132 & 1;
    if (!--v116)
    {
      sub_1CA2685C4(result, v131, v132 & 1);
      swift_bridgeObjectRelease();
      goto LABEL_85;
    }
  }
LABEL_104:
  __break(1u);
LABEL_105:
  __break(1u);
LABEL_106:
  __break(1u);
  return result;
}

uint64_t static MusicCurator.electMusic(for:context:musicForYouFavoritesElector:musicForYouChillElector:musicForYouGetUpElector:musicForTopicElector:musicForTimeElector:musicForMomentElector:musicForPerformerElector:progressReporter:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X5>, uint64_t a5@<X7>, uint64_t *a6@<X8>, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v14;
  uint64_t v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  uint64_t v24;
  uint64_t v27;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v35;
  void *v36;
  void *v37;
  void *v38;
  void *v39;
  char v40[40];
  uint64_t v41;

  v41 = a2;
  if (qword_1ED872F98 != -1)
    swift_once();
  v14 = qword_1ED87D0F0;
  *(double *)&v15 = CACurrentMediaTime();
  sub_1CA2E4280("Music Curation - Election", 25, 2u, v15, 0, v14, (uint64_t)v40);
  sub_1CA85BBAC();
  v16 = (void *)sub_1CA85BB94();
  v18 = v17;
  v20 = v19;
  v21 = (*(uint64_t (**)(uint64_t, uint64_t, void *))(a3 + 16))(a1, v41, v16);
  if (v32)
  {

    swift_release();
    return swift_release();
  }
  else
  {
    v33 = v21;
    v31 = (*(uint64_t (**)(uint64_t, uint64_t, void *))(a4 + 16))(a1, v41, v18);
    v29 = (*(uint64_t (**)(uint64_t, uint64_t, void *))(a5 + 16))(a1, v41, v20);
    v27 = (*(uint64_t (**)(uint64_t, uint64_t))(a8 + 16))(a1, v41);
    v24 = (*(uint64_t (**)(uint64_t, uint64_t))(a10 + 16))(a1, v41);
    v23 = (*(uint64_t (**)(uint64_t, uint64_t))(a12 + 16))(a1, v41);
    v41 = (*(uint64_t (**)(uint64_t, uint64_t))(a14 + 16))(a1, v41);
    sub_1CA85BB70();
    sub_1CA2E0C94(0);

    swift_release();
    result = swift_release();
    *a6 = v33;
    a6[1] = v31;
    a6[2] = v29;
    a6[3] = v27;
    a6[4] = v24;
    a6[5] = v23;
    a6[6] = v41;
  }
  return result;
}

uint64_t sub_1CA31D164(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 56);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  if (v6 < 8)
    return v3;
  v1 = *(_QWORD *)(a1 + 72);
  if (v1)
  {
    v2 = 128;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 3)
    v7 = 3;
  v8 = v7 - 3;
  v9 = (unint64_t *)(a1 + 80);
  v2 = 128;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

int64_t sub_1CA31D208(int64_t result, int a2, char a3, uint64_t a4)
{
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;

  if ((a3 & 1) != 0)
    goto LABEL_20;
  v4 = result;
  if (result < 0 || (result = 1 << *(_BYTE *)(a4 + 32), result <= (uint64_t)v4))
  {
    __break(1u);
    goto LABEL_18;
  }
  v5 = v4 >> 6;
  v6 = a4 + 56;
  v7 = *(_QWORD *)(a4 + 56 + 8 * (v4 >> 6));
  if (((v7 >> v4) & 1) == 0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (*(_DWORD *)(a4 + 36) != a2)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    return result;
  }
  v8 = v7 & (-2 << (v4 & 0x3F));
  if (v8)
    return __clz(__rbit64(v8)) | v4 & 0xFFFFFFFFFFFFFFC0;
  v9 = v5 + 1;
  v10 = (unint64_t)(result + 63) >> 6;
  if (v5 + 1 < v10)
  {
    v11 = *(_QWORD *)(v6 + 8 * v9);
    if (v11)
      return __clz(__rbit64(v11)) + (v9 << 6);
    v9 = v5 + 2;
    if (v5 + 2 < v10)
    {
      v11 = *(_QWORD *)(v6 + 8 * v9);
      if (v11)
        return __clz(__rbit64(v11)) + (v9 << 6);
      while (v10 - 3 != v5)
      {
        v11 = *(_QWORD *)(a4 + 80 + 8 * v5++);
        if (v11)
        {
          v9 = v5 + 2;
          return __clz(__rbit64(v11)) + (v9 << 6);
        }
      }
    }
  }
  return result;
}

uint64_t _s11PhotosGraph12MusicCuratorC0C8ElectionV2eeoiySbAE_AEtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;

  v2 = a1[1];
  v4 = a1[2];
  v3 = a1[3];
  v6 = a1[4];
  v5 = a1[5];
  v7 = a2[1];
  v9 = a2[2];
  v8 = a2[3];
  v11 = a2[4];
  v10 = a2[5];
  v13 = a2[6];
  v14 = a1[6];
  if ((sub_1CA2501B8(*a1, *a2) & 1) != 0
    && (sub_1CA2501B8(v2, v7) & 1) != 0
    && (sub_1CA2501B8(v4, v9) & 1) != 0
    && (sub_1CA2501B8(v3, v8) & 1) != 0
    && (sub_1CA2501B8(v6, v11) & 1) != 0
    && (sub_1CA2501B8(v5, v10) & 1) != 0)
  {
    return sub_1CA2501B8(v14, v13);
  }
  else
  {
    return 0;
  }
}

uint64_t _s13MusicElectionVwxx()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *_s13MusicElectionVwcp(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *_s13MusicElectionVwca(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s13MusicElectionVwta(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s13MusicElectionVwet(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 56))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s13MusicElectionVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 56) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for MusicCurator.MusicElection()
{
  return &type metadata for MusicCurator.MusicElection;
}

uint64_t GraphBuilder.__allocating_init(with:)(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  id v4;

  v2 = swift_allocObject();
  v3 = *(void **)(a1 + 112);
  *(_QWORD *)(v2 + 16) = v3;
  *(_QWORD *)(v2 + 24) = a1;
  v4 = v3;
  return v2;
}

uint64_t GraphBuilder.init(with:)(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  id v3;

  v2 = *(void **)(a1 + 112);
  *(_QWORD *)(v1 + 16) = v2;
  *(_QWORD *)(v1 + 24) = a1;
  v3 = v2;
  return v1;
}

uint64_t sub_1CA31D708()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;

  v1[4] = v0;
  v1[5] = *v0;
  v2 = sub_1CA85A424();
  v1[6] = v2;
  v1[7] = *(_QWORD *)(v2 - 8);
  v1[8] = swift_task_alloc();
  v1[9] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1CA31D780()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t);

  v1 = v0[9];
  v2 = v0[6];
  v3 = v0[7];
  v4 = *(_QWORD *)(v0[4] + 24);
  v0[10] = v4;
  v5 = v4 + OBJC_IVAR____TtC11PhotosGraph12GraphManager_inputStreamTokenStoresDirectoryURL;
  v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  v0[11] = v6;
  v6(v1, v5, v2);
  return swift_task_switch();
}

uint64_t sub_1CA31D7E4()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 96) = v1;
  *v1 = v0;
  v1[1] = sub_1CA31D85C;
  return sub_1CA85A8BC();
}

uint64_t sub_1CA31D85C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 104) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1CA31D8C0()
{
  _QWORD *v0;
  uint64_t v1;

  v1 = v0[3];
  v0[14] = v0[2];
  v0[15] = v1;
  return swift_task_switch();
}

uint64_t sub_1CA31D8DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  id v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v17[6];

  v2 = *(_QWORD *)(v0 + 112);
  v1 = *(_QWORD *)(v0 + 120);
  v3 = *(_QWORD *)(v0 + 104);
  v4 = *(char **)(v0 + 64);
  v5 = *(_QWORD *)(v0 + 40);
  v6 = *(_QWORD *)(v0 + 32);
  v7 = *(void **)(v6 + 16);
  (*(void (**)(char *, _QWORD, _QWORD))(v0 + 88))(v4, *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 48));
  v17[3] = v5;
  v17[4] = &off_1E8409E60;
  v17[0] = v6;
  v8 = type metadata accessor for PhotoKitInputStream();
  swift_allocObject();
  v9 = v7;
  swift_retain();
  v10 = sub_1CA3C71A8(v9, v2, v1, v4, (uint64_t)v17);
  v11 = *(_QWORD *)(v0 + 72);
  if (v3)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 56) + 8))(*(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 48));
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v13 = v10;
    v14 = *(_QWORD *)(v0 + 56);
    v15 = *(_QWORD *)(v0 + 48);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94D670);
    v16 = swift_allocObject();
    *(_OWORD *)(v16 + 16) = xmmword_1CA8D4E40;
    *(_QWORD *)(v16 + 56) = v8;
    *(_QWORD *)(v16 + 64) = &off_1E841AB78;
    *(_QWORD *)(v16 + 32) = v13;
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v11, v15);
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(v16);
  }
}

uint64_t sub_1CA31DA5C()
{
  return swift_task_switch();
}

uint64_t sub_1CA31DA70()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 56) + 8))(*(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 48));
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1CA31DABC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  *(_QWORD *)(v5 + 56) = a4;
  *(_QWORD *)(v5 + 64) = a5;
  return swift_task_switch();
}

uint64_t sub_1CA31DAD4()
{
  uint64_t v0;
  _QWORD *v1;

  __swift_project_boxed_opaque_existential_1(*(_QWORD **)(v0 + 56), *(_QWORD *)(*(_QWORD *)(v0 + 56) + 24));
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 72) = v1;
  *v1 = v0;
  v1[1] = sub_1CA31DB30;
  return sub_1CA3C7450(*(_QWORD *)(v0 + 64));
}

uint64_t sub_1CA31DB30()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 80) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  else
    return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1CA31DB9C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  BOOL v7;
  void *v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v14;

  if (qword_1ED872138 != -1)
    swift_once();
  v1 = *(void **)(v0 + 80);
  v2 = sub_1CA85B348();
  __swift_project_value_buffer(v2, (uint64_t)qword_1ED87D058);
  v3 = v1;
  v4 = v1;
  v5 = sub_1CA85B330();
  v6 = sub_1CA85BAE0();
  v7 = os_log_type_enabled(v5, v6);
  v8 = *(void **)(v0 + 80);
  if (v7)
  {
    v9 = (uint8_t *)swift_slowAlloc();
    v10 = swift_slowAlloc();
    v14 = v10;
    *(_DWORD *)v9 = 136315138;
    swift_getErrorValue();
    v11 = sub_1CA85C308();
    *(_QWORD *)(v0 + 48) = sub_1CA28712C(v11, v12, &v14);
    sub_1CA85BCF0();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1CA237000, v5, v6, "[IncrementalRebuild] Failed to start input stream with error: %s", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1CAA4F27C](v10, -1, -1);
    MEMORY[0x1CAA4F27C](v9, -1, -1);

  }
  else
  {

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1CA31DD8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[14] = a2;
  v3[15] = a3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED872E00);
  v3[16] = swift_task_alloc();
  v3[17] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1CA31DDF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v19)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v20;

  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v3 = v1 + 32;
    v4 = sub_1CA85B8E8();
    v5 = *(_QWORD *)(v4 - 8);
    v19 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56);
    swift_bridgeObjectRetain();
    v20 = v5;
    while (1)
    {
      v8 = *(_QWORD *)(v0 + 128);
      v7 = *(_QWORD *)(v0 + 136);
      v19(v7, 1, 1, v4);
      sub_1CA28A998(v3, v0 + 16);
      v9 = swift_allocObject();
      *(_QWORD *)(v9 + 16) = 0;
      v10 = (_QWORD *)(v9 + 16);
      *(_QWORD *)(v9 + 24) = 0;
      sub_1CA28FA30((__int128 *)(v0 + 16), v9 + 32);
      sub_1CA3227DC(v7, v8);
      v11 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v8, 1, v4);
      v12 = *(_QWORD *)(v0 + 128);
      if (v11 == 1)
      {
        sub_1CA267BE8(*(_QWORD *)(v0 + 128), &qword_1ED872E00);
        if (!*v10)
          goto LABEL_8;
      }
      else
      {
        sub_1CA85B8DC();
        (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v12, v4);
        if (!*v10)
        {
LABEL_8:
          v13 = 0;
          v15 = 0;
          goto LABEL_9;
        }
      }
      swift_getObjectType();
      swift_unknownObjectRetain();
      v13 = sub_1CA85B8AC();
      v15 = v14;
      swift_unknownObjectRelease();
LABEL_9:
      v16 = **(_QWORD **)(v0 + 112);
      v17 = v15 | v13;
      if (v15 | v13)
      {
        v17 = v0 + 56;
        *(_QWORD *)(v0 + 56) = 0;
        *(_QWORD *)(v0 + 64) = 0;
        *(_QWORD *)(v0 + 72) = v13;
        *(_QWORD *)(v0 + 80) = v15;
      }
      v6 = *(_QWORD *)(v0 + 136);
      *(_QWORD *)(v0 + 88) = 1;
      *(_QWORD *)(v0 + 96) = v17;
      *(_QWORD *)(v0 + 104) = v16;
      swift_task_create();
      swift_release();
      sub_1CA267BE8(v6, &qword_1ED872E00);
      v3 += 40;
      --v2;
      v5 = v20;
      if (!v2)
      {
        swift_bridgeObjectRelease();
        break;
      }
    }
  }
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1CA31E030(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 48) = a4;
  return swift_task_switch();
}

uint64_t sub_1CA31E048()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 56) = *__swift_project_boxed_opaque_existential_1(*(_QWORD **)(v0 + 48), *(_QWORD *)(*(_QWORD *)(v0 + 48) + 24));
  return swift_task_switch();
}

uint64_t sub_1CA31E08C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 56);
  *(_BYTE *)(v1 + 136) = 1;
  *(_QWORD *)(v0 + 64) = *(_QWORD *)(v1 + 128);
  return swift_task_switch();
}

uint64_t sub_1CA31E0B0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;

  v1 = (uint64_t *)(*(_QWORD *)(v0 + 64) + OBJC_IVAR____TtC11PhotosGraph21InputStreamTokenStore_token);
  v2 = v1[3];
  if (v2)
  {
    v4 = *v1;
    v3 = v1[1];
    v5 = v1[2];
    sub_1CA85A34C();
    swift_allocObject();
    sub_1CA28B714(v4, v3);
    swift_bridgeObjectRetain();
    sub_1CA85A340();
    *(_QWORD *)(v0 + 16) = v4;
    *(_QWORD *)(v0 + 24) = v3;
    *(_QWORD *)(v0 + 32) = v5;
    *(_QWORD *)(v0 + 40) = v2;
    sub_1CA322824();
    v6 = sub_1CA85A334();
    v8 = v7;
    swift_release();
    sub_1CA85A49C();
    sub_1CA260204(v6, v8);
    sub_1CA32213C(v4, v3, v5, v2);
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t GraphBuilder.invalidateGraph()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;

  v1[3] = v0;
  v2 = sub_1CA859FD4();
  v1[4] = v2;
  v1[5] = *(_QWORD *)(v2 - 8);
  v1[6] = swift_task_alloc();
  v3 = (_QWORD *)swift_task_alloc();
  v1[7] = v3;
  *v3 = v1;
  v3[1] = sub_1CA31E29C;
  return sub_1CA31D708();
}

uint64_t sub_1CA31E29C(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 64) = a1;
  swift_task_dealloc();
  if (!v1)
    return swift_task_switch();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v3 + 8))();
}

uint64_t sub_1CA31E368()
{
  _QWORD *v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0[8] + 16);
  v0[9] = v1;
  if (v1)
  {
    v0[10] = objc_opt_self();
    v0[11] = 0;
    v0[12] = *(_QWORD *)(*__swift_project_boxed_opaque_existential_1((_QWORD *)(v0[8] + 32), *(_QWORD *)(v0[8] + 56))+ 128);
    swift_retain();
  }
  else
  {
    swift_bridgeObjectRelease();
    v0[13] = *(_QWORD *)(v0[3] + 24);
  }
  return swift_task_switch();
}

uint64_t sub_1CA31E440()
{
  uint64_t v0;
  id v1;
  void *v2;
  unsigned int v3;
  void *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  id v11;
  char v12;

  v1 = objc_msgSend(*(id *)(v0 + 80), sel_defaultManager);
  v2 = (void *)sub_1CA85A3C4();
  *(_QWORD *)(v0 + 16) = 0;
  v3 = objc_msgSend(v1, sel_removeItemAtURL_error_, v2, v0 + 16);

  v4 = *(void **)(v0 + 16);
  if (v3)
  {
    v5 = v4;
LABEL_5:
    swift_release();
    return swift_task_switch();
  }
  v7 = *(_QWORD *)(v0 + 40);
  v6 = *(_QWORD *)(v0 + 48);
  v8 = *(_QWORD *)(v0 + 32);
  v9 = v4;
  v10 = (void *)sub_1CA85A364();

  swift_willThrow();
  v11 = v10;
  sub_1CA859FBC();
  sub_1CA31E8F4();
  v12 = sub_1CA85A2F8();

  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
  if ((v12 & 1) != 0)
  {

    goto LABEL_5;
  }
  swift_willThrow();
  swift_bridgeObjectRelease();
  swift_release();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1CA31E614()
{
  _QWORD *v0;
  uint64_t v1;

  v1 = v0[11] + 1;
  if (v1 == v0[9])
  {
    swift_bridgeObjectRelease();
    v0[13] = *(_QWORD *)(v0[3] + 24);
  }
  else
  {
    v0[11] = v1;
    v0[12] = *(_QWORD *)(*__swift_project_boxed_opaque_existential_1((_QWORD *)(v0[8] + 40 * v1 + 32), *(_QWORD *)(v0[8] + 40 * v1 + 56))+ 128);
    swift_retain();
  }
  return swift_task_switch();
}

uint64_t sub_1CA31E6F0()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 112) = v1;
  *v1 = v0;
  v1[1] = sub_1CA31E78C;
  return sub_1CA85A8C8();
}

uint64_t sub_1CA31E78C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 120) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1CA31E834()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1CA31E894()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

unint64_t sub_1CA31E8F4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF94D520;
  if (!qword_1EF94D520)
  {
    v1 = sub_1CA859FD4();
    result = MEMORY[0x1CAA4F1A4](MEMORY[0x1E0CADE18], v1);
    atomic_store(result, (unint64_t *)&qword_1EF94D520);
  }
  return result;
}

void sub_1CA31E93C(void *a1)
{
  id v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7[2];

  v7[1] = *(id *)MEMORY[0x1E0C80C00];
  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D42998]), sel_init);
  v3 = objc_msgSend((id)objc_opt_self(), sel_any);
  v4 = objc_msgSend(a1, sel_nodeIdentifiersMatchingFilter_, v3);

  objc_msgSend(v2, sel_removeNodesForIdentifiers_, v4);
  v7[0] = 0;
  if ((objc_msgSend(a1, sel_performChangesAndWait_error_, v2, v7) & 1) != 0)
  {
    v5 = v7[0];
  }
  else
  {
    v6 = v7[0];
    sub_1CA85A364();

    swift_willThrow();
  }

}

uint64_t GraphBuilder.consumeInputStreamUpdates()()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 416) = v0;
  *(_QWORD *)(v1 + 424) = *v0;
  return swift_task_switch();
}

uint64_t sub_1CA31EA90()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  type metadata accessor for InputStreamUpdateQueue();
  v1 = swift_allocObject();
  *(_QWORD *)(v0 + 432) = v1;
  swift_defaultActor_initialize();
  *(_QWORD *)(v1 + 112) = MEMORY[0x1E0DEE9D8];
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 440) = v2;
  *v2 = v0;
  v2[1] = sub_1CA31EB04;
  return sub_1CA31D708();
}

uint64_t sub_1CA31EB04(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 448) = a1;
  *(_QWORD *)(v3 + 456) = v1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1CA31EB70()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v1 = v0[56];
  sub_1CA321DA4(v1, v0[54]);
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    swift_beginAccess();
    v0[58] = v2;
    return swift_task_switch();
  }
  else
  {
    v4 = v0[56];
    v5 = swift_task_alloc();
    v0[74] = v5;
    *(_QWORD *)(v5 + 16) = v4;
    v6 = (_QWORD *)swift_task_alloc();
    v0[75] = (uint64_t)v6;
    *v6 = v0;
    v6[1] = sub_1CA31F5B8;
    return sub_1CA85C104();
  }
}

uint64_t sub_1CA31EC50()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD **v2;
  uint64_t v3;
  _QWORD *v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 432);
  v3 = *(_QWORD *)(v1 + 112);
  v2 = (_QWORD **)(v1 + 112);
  if (!*(_QWORD *)(v3 + 16))
  {
    *(_QWORD *)(v0 + 184) = 0;
    *(_OWORD *)(v0 + 152) = 0u;
    *(_OWORD *)(v0 + 168) = 0u;
    *(_OWORD *)(v0 + 120) = 0u;
    *(_OWORD *)(v0 + 136) = 0u;
    *(_OWORD *)(v0 + 104) = 0u;
    return swift_task_switch();
  }
  swift_beginAccess();
  v4 = *v2;
  if (!v4[2])
  {
    __break(1u);
    goto LABEL_12;
  }
  sub_1CA322040((uint64_t)(v4 + 4), v0 + 104);
  v5 = v4[2];
  if (!v5)
  {
LABEL_12:
    __break(1u);
    return sub_1CA85C0D4();
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if (!(_DWORD)isUniquelyReferenced_nonNull_native || (unint64_t)(v5 - 1) > v4[3] >> 1)
    v4 = sub_1CA26D70C(isUniquelyReferenced_nonNull_native, v5, 1, v4);
  swift_arrayDestroy();
  v7 = v4[2];
  if (v7)
  {
    v8 = *(_QWORD *)(v0 + 432);
    memmove(v4 + 4, v4 + 15, 88 * v7 - 88);
    v4[2] = v7 - 1;
    *(_QWORD *)(v8 + 112) = v4;
    swift_endAccess();
    return swift_task_switch();
  }
  return sub_1CA85C0D4();
}

uint64_t sub_1CA31EDDC()
{
  uint64_t v0;
  _OWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24[13];

  v1 = (_OWORD *)(v0 + 104);
  if (*(_QWORD *)(v0 + 104))
  {
    v2 = v0 + 16;
    v3 = v0 + 192;
    v4 = v0 + 280;
    v5 = *(_OWORD *)(v0 + 152);
    *(_OWORD *)(v0 + 48) = *(_OWORD *)(v0 + 136);
    *(_OWORD *)(v0 + 64) = v5;
    *(_OWORD *)(v0 + 80) = *(_OWORD *)(v0 + 168);
    *(_QWORD *)(v0 + 96) = *(_QWORD *)(v0 + 184);
    v6 = *(_OWORD *)(v0 + 120);
    *(_OWORD *)(v0 + 16) = *v1;
    *(_OWORD *)(v0 + 32) = v6;
    if (qword_1ED872138 != -1)
      swift_once();
    v7 = sub_1CA85B348();
    __swift_project_value_buffer(v7, (uint64_t)qword_1ED87D058);
    sub_1CA322040(v2, v3);
    v8 = sub_1CA85B330();
    v9 = sub_1CA85BAC8();
    if (os_log_type_enabled(v8, v9))
    {
      v10 = swift_slowAlloc();
      v11 = swift_slowAlloc();
      v24[0] = v11;
      *(_DWORD *)v10 = 136315138;
      v12 = sub_1CA3796E0();
      *(_QWORD *)(v10 + 4) = sub_1CA28712C(v12, v13, v24);
      swift_bridgeObjectRelease();
      sub_1CA32207C(v3);
      _os_log_impl(&dword_1CA237000, v8, v9, "[IncrementalRebuild] GraphBuilder received update -> %s", (uint8_t *)v10, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1CAA4F27C](v11, -1, -1);
      MEMORY[0x1CAA4F27C](v10, -1, -1);
    }
    else
    {
      sub_1CA32207C(v3);
    }

    v15 = *(_QWORD *)(*(_QWORD *)v2 + 16);
    sub_1CA322040(v2, v4);
    if (v15)
    {
      sub_1CA32207C(v4);
    }
    else
    {
      v16 = *(_QWORD *)(*(_QWORD *)(v0 + 288) + 16);
      sub_1CA32207C(v4);
      if (!v16)
      {
        *(_QWORD *)(v0 + 472) = *(_QWORD *)(*__swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 88))+ 128);
        *(_OWORD *)(v0 + 480) = *(_OWORD *)(v0 + 32);
        v23 = *(_QWORD *)(v0 + 56);
        *(_QWORD *)(v0 + 496) = *(_QWORD *)(v0 + 48);
        *(_QWORD *)(v0 + 504) = v23;
        swift_retain();
        return swift_task_switch();
      }
    }
    v17 = *(_QWORD *)(v0 + 424);
    *(_QWORD *)(v0 + 512) = *(_QWORD *)(*(_QWORD *)(v0 + 416) + 24);
    v18 = swift_task_alloc();
    *(_QWORD *)(v0 + 520) = v18;
    *(_QWORD *)(v18 + 16) = v2;
    *(_QWORD *)(v18 + 24) = v17;
    return swift_task_switch();
  }
  sub_1CA267BE8((uint64_t)v1, &qword_1EF94D540);
  v14 = *(_QWORD *)(v0 + 464);
  if (v14 > 0)
  {
    *(_QWORD *)(v0 + 464) = v14;
    return swift_task_switch();
  }
  v20 = *(_QWORD *)(v0 + 448);
  v21 = swift_task_alloc();
  *(_QWORD *)(v0 + 592) = v21;
  *(_QWORD *)(v21 + 16) = v20;
  v22 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 600) = v22;
  *v22 = v0;
  v22[1] = sub_1CA31F5B8;
  v24[11] = MEMORY[0x1E0DEE9C0] + 8;
  return sub_1CA85C104();
}

uint64_t sub_1CA31F0DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;

  v1 = *(_QWORD *)(v0 + 504);
  v2 = *(_QWORD *)(v0 + 480);
  v3 = (uint64_t *)(*(_QWORD *)(v0 + 472) + OBJC_IVAR____TtC11PhotosGraph21InputStreamTokenStore_token);
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  v8 = *(_OWORD *)(v0 + 488);
  *v3 = v2;
  *(_OWORD *)(v3 + 1) = v8;
  v3[3] = v1;
  sub_1CA28B714(v2, v8);
  swift_bridgeObjectRetain();
  sub_1CA32213C(v4, v5, v6, v7);
  swift_release();
  return swift_task_switch();
}

uint64_t sub_1CA31F17C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = v0[58];
  sub_1CA32207C((uint64_t)(v0 + 2));
  if (v1 < 2)
  {
    v3 = v0[56];
    v4 = swift_task_alloc();
    v0[74] = v4;
    *(_QWORD *)(v4 + 16) = v3;
    v5 = (_QWORD *)swift_task_alloc();
    v0[75] = v5;
    *v5 = v0;
    v5[1] = sub_1CA31F5B8;
    return sub_1CA85C104();
  }
  else
  {
    v0[58] = v1 - 1;
    return swift_task_switch();
  }
}

uint64_t sub_1CA31F244()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = v0[65];
  v2 = swift_task_alloc();
  v0[66] = v2;
  *(_QWORD *)(v2 + 16) = sub_1CA3220B0;
  *(_QWORD *)(v2 + 24) = v1;
  v3 = (_QWORD *)swift_task_alloc();
  v0[67] = v3;
  *v3 = v0;
  v3[1] = sub_1CA31F2DC;
  return sub_1CA85A8C8();
}

uint64_t sub_1CA31F2DC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 544) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_task_dealloc();
    swift_task_dealloc();
  }
  return swift_task_switch();
}

uint64_t sub_1CA31F358()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v0 + 552) = *(_QWORD *)(*__swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 88))+ 128);
  *(_OWORD *)(v0 + 560) = *(_OWORD *)(v0 + 32);
  v1 = *(_QWORD *)(v0 + 56);
  *(_QWORD *)(v0 + 576) = *(_QWORD *)(v0 + 48);
  *(_QWORD *)(v0 + 584) = v1;
  swift_retain();
  return swift_task_switch();
}

uint64_t sub_1CA31F3C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;

  v1 = *(_QWORD *)(v0 + 584);
  v2 = *(_QWORD *)(v0 + 560);
  v3 = (uint64_t *)(*(_QWORD *)(v0 + 552) + OBJC_IVAR____TtC11PhotosGraph21InputStreamTokenStore_token);
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  v8 = *(_OWORD *)(v0 + 568);
  *v3 = v2;
  *(_OWORD *)(v3 + 1) = v8;
  v3[3] = v1;
  sub_1CA28B714(v2, v8);
  swift_bridgeObjectRetain();
  sub_1CA32213C(v4, v5, v6, v7);
  swift_release();
  return swift_task_switch();
}

uint64_t sub_1CA31F464()
{
  _QWORD *v0;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  sub_1CA32207C((uint64_t)(v0 + 2));
  if ((uint64_t)v0[58] >= 1)
    return swift_task_switch();
  v2 = v0[56];
  v3 = swift_task_alloc();
  v0[74] = v3;
  *(_QWORD *)(v3 + 16) = v2;
  v4 = (_QWORD *)swift_task_alloc();
  v0[75] = v4;
  *v4 = v0;
  v4[1] = sub_1CA31F5B8;
  return sub_1CA85C104();
}

uint64_t sub_1CA31F524()
{
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1CA31F578()
{
  uint64_t v0;

  swift_release();
  sub_1CA32207C(v0 + 16);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1CA31F5B8()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1CA31F618()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1CA31F658()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1CA31F68C(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  _OWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  _QWORD *v11;
  char v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  char isUniquelyReferenced_nonNull_native;
  char v19;
  unint64_t v20;
  uint64_t v21;
  _BOOL8 v22;
  uint64_t v23;
  char v24;
  unint64_t v25;
  char v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  int64_t v34;
  int64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  int64_t v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  _OWORD *v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  char v50;
  char v51;
  unint64_t v52;
  uint64_t v53;
  _BOOL8 v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  char v58;
  uint64_t *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  int64_t v63;
  _QWORD *v64;
  uint64_t *v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  unint64_t v69;
  _QWORD *v70;
  uint64_t v71;
  id v72;
  id v73;
  id v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  id v78;
  void *v79;
  char *v80;
  void *v81;
  uint64_t v82;
  uint64_t v83;
  char v84;
  void *v85;
  uint64_t v86;
  void *v87;
  id v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  _QWORD *v92;
  unint64_t v93;
  unint64_t v94;
  _QWORD *v95;
  uint64_t v96;
  char v97;
  uint64_t v98;
  unint64_t v99;
  void *v100;
  void *v101;
  id v102;
  uint64_t v103;
  uint64_t v104;
  char v105;
  char v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  int64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  unint64_t v114;
  unint64_t v115;
  unint64_t v116;
  unint64_t v117;
  int64_t v118;
  uint64_t *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  char v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  char v128;
  id v129;
  _BYTE *v130;
  _BYTE *v131;
  void *v132;
  _BYTE *v133;
  _BYTE *v134;
  uint64_t v135;
  _OWORD *v136;
  _QWORD *v137;
  uint64_t v138;
  unsigned __int8 v139;
  uint64_t v140;
  unint64_t v141;
  _QWORD *v142;
  char v143;
  unint64_t v144;
  unint64_t v145;
  _QWORD *v146;
  _QWORD *v147;
  char v148;
  char v149;
  unint64_t v150;
  uint64_t v151;
  _BOOL8 v152;
  uint64_t v153;
  char v154;
  unint64_t v155;
  char v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  unint64_t v161;
  int64_t v162;
  id v163;
  void *v164;
  void *v165;
  void *v166;
  id v167;
  id v168;
  unint64_t v169;
  unint64_t v170;
  int64_t v171;
  int v172;
  uint64_t v173;
  int64_t v174;
  _QWORD *v175;
  uint64_t *v176;
  uint64_t v177;
  uint64_t v178;
  unint64_t v179;
  unint64_t v180;
  _QWORD *v181;
  uint64_t inited;
  id v183;
  _BYTE *v184;
  id v185;
  unint64_t v186;
  uint64_t v187;
  int64_t v188;
  char *v189;
  unint64_t v190;
  int64_t v191;
  id v192;
  void *v193;
  id v194;
  _QWORD *v195;
  uint64_t v197;
  unint64_t v198;
  unint64_t v199;
  char *v200;
  void *v201;
  int64_t v202;
  uint64_t *v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  char v207;
  id v208;
  _QWORD *v209;
  id v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  char v214;
  _QWORD *v215;
  int64_t v216;
  int64_t v217;
  __int128 v218;
  __int128 v219;
  _QWORD *v220;
  __int128 v221;
  uint64_t v222;
  id v223[13];

  v3 = v2;
  v223[11] = *(id *)MEMORY[0x1E0C80C00];
  v210 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D42998]), sel_init);
  v187 = a2;
  v5 = *(_QWORD *)(*(_QWORD *)a2 + 16);
  if (!v5)
  {
    v7 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_26;
  }
  v6 = (_OWORD *)(swift_bridgeObjectRetain() + 48);
  v7 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  do
  {
    v3 = *((unsigned __int8 *)v6 - 16);
    v9 = *((_QWORD *)v6 - 1);
    v218 = *v6;
    if (v7[2])
    {
      v10 = sub_1CA250C04(v3);
      v11 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      if ((v12 & 1) != 0)
      {
        v11 = *(_QWORD **)(v7[7] + 8 * v10);
        swift_bridgeObjectRetain();
      }
    }
    else
    {
      v11 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    }
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    v13 = v7;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v11 = sub_1CA26D600(0, v11[2] + 1, 1, v11);
    v15 = v11[2];
    v14 = v11[3];
    if (v15 >= v14 >> 1)
      v11 = sub_1CA26D600((_QWORD *)(v14 > 1), v15 + 1, 1, v11);
    v11[2] = v15 + 1;
    v16 = &v11[4 * v15];
    *((_BYTE *)v16 + 32) = v3;
    v16[5] = v9;
    *((_OWORD *)v16 + 3) = v218;
    v17 = v13;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v223[0] = v13;
    v20 = sub_1CA250C04(v3);
    v21 = v13[2];
    v22 = (v19 & 1) == 0;
    v23 = v21 + v22;
    if (__OFADD__(v21, v22))
      goto LABEL_161;
    v24 = v19;
    if (v17[3] >= v23)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        v7 = v223[0];
        if ((v19 & 1) != 0)
          goto LABEL_3;
      }
      else
      {
        sub_1CA262334();
        v7 = v223[0];
        if ((v24 & 1) != 0)
          goto LABEL_3;
      }
    }
    else
    {
      sub_1CA255AFC(v23, isUniquelyReferenced_nonNull_native);
      v25 = sub_1CA250C04(v3);
      if ((v24 & 1) != (v26 & 1))
      {
LABEL_212:
        sub_1CA85C2E4();
        __break(1u);
        return;
      }
      v20 = v25;
      v7 = v223[0];
      if ((v24 & 1) != 0)
      {
LABEL_3:
        v8 = v7[7];
        swift_bridgeObjectRelease();
        *(_QWORD *)(v8 + 8 * v20) = v11;
        goto LABEL_4;
      }
    }
    v7[(v20 >> 6) + 8] |= 1 << v20;
    *(_BYTE *)(v7[6] + v20) = v3;
    *(_QWORD *)(v7[7] + 8 * v20) = v11;
    v27 = v7[2];
    v28 = __OFADD__(v27, 1);
    v29 = v27 + 1;
    if (v28)
    {
LABEL_201:
      __break(1u);
LABEL_202:
      __break(1u);
LABEL_203:
      __break(1u);
LABEL_204:
      __break(1u);
LABEL_205:
      __break(1u);
LABEL_206:
      __break(1u);
LABEL_207:
      __break(1u);
LABEL_208:
      __break(1u);
      goto LABEL_209;
    }
    v7[2] = v29;
LABEL_4:
    v6 += 2;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    --v5;
  }
  while (v5);
  swift_bridgeObjectRelease();
  v3 = v2;
LABEL_26:
  v30 = (char *)(v7 + 8);
  v31 = 1 << *((_BYTE *)v7 + 32);
  if (v31 < 64)
    v32 = ~(-1 << v31);
  else
    v32 = -1;
  v33 = v32 & v7[8];
  v34 = (unint64_t)(v31 + 63) >> 6;
  swift_bridgeObjectRetain();
  v35 = 0;
  v186 = (unint64_t)"4";
  v195 = v7;
  v188 = v34;
  v189 = (char *)(v7 + 8);
  if (!v33)
    goto LABEL_31;
  while (2)
  {
    v211 = v3;
    v36 = __clz(__rbit64(v33));
    v37 = (v33 - 1) & v33;
    v38 = v36 | (v35 << 6);
LABEL_42:
    v190 = v37;
    v191 = v35;
    v41 = v7[7];
    v42 = *(_BYTE *)(v7[6] + v38);
    v43 = *(_QWORD *)(v41 + 8 * v38);
    v3 = *(_QWORD *)(v43 + 16);
    if (!v3)
    {
      swift_bridgeObjectRetain();
      v45 = (_QWORD *)MEMORY[0x1E0DEE9E0];
LABEL_65:
      swift_bridgeObjectRelease();
      v64 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v71 = v211;
      goto LABEL_66;
    }
    v207 = v42;
    swift_bridgeObjectRetain_n();
    v44 = (_OWORD *)(v43 + 48);
    v203 = (uint64_t *)(v43 + 48);
    v205 = v43;
    v45 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    while (2)
    {
      v214 = *((_BYTE *)v44 - 16);
      v47 = *((_QWORD *)v44 - 1);
      v219 = *v44;
      v48 = *(_QWORD *)v44;
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      v49 = v45;
      v50 = swift_isUniquelyReferenced_nonNull_native();
      v223[0] = v49;
      v52 = sub_1CA25081C(v47, v48);
      v53 = v49[2];
      v54 = (v51 & 1) == 0;
      v55 = v53 + v54;
      if (__OFADD__(v53, v54))
      {
        __break(1u);
LABEL_161:
        __break(1u);
        goto LABEL_162;
      }
      v56 = v51;
      if (v49[3] >= v55)
      {
        if ((v50 & 1) != 0)
        {
          v45 = v223[0];
          if ((v51 & 1) == 0)
            goto LABEL_53;
        }
        else
        {
          sub_1CA26214C();
          v45 = v223[0];
          if ((v56 & 1) == 0)
            goto LABEL_53;
        }
        goto LABEL_44;
      }
      sub_1CA2557CC(v55, v50);
      v57 = sub_1CA25081C(v47, v48);
      if ((v56 & 1) != (v58 & 1))
      {
        sub_1CA85C2E4();
        __break(1u);
        goto LABEL_212;
      }
      v52 = v57;
      v45 = v223[0];
      if ((v56 & 1) != 0)
      {
LABEL_44:
        v46 = v45[7] + 32 * v52;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        *(_BYTE *)v46 = v214;
        *(_QWORD *)(v46 + 8) = v47;
        *(_QWORD *)(v46 + 16) = v48;
        *(_QWORD *)(v46 + 24) = *((_QWORD *)&v219 + 1);
        goto LABEL_45;
      }
LABEL_53:
      v45[(v52 >> 6) + 8] |= 1 << v52;
      v59 = (uint64_t *)(v45[6] + 16 * v52);
      *v59 = v47;
      v59[1] = v48;
      v60 = v45[7] + 32 * v52;
      *(_BYTE *)v60 = v214;
      *(_QWORD *)(v60 + 8) = v47;
      *(_OWORD *)(v60 + 16) = v219;
      v61 = v45[2];
      v28 = __OFADD__(v61, 1);
      v62 = v61 + 1;
      if (v28)
      {
        __break(1u);
        goto LABEL_201;
      }
      v45[2] = v62;
      swift_bridgeObjectRetain();
LABEL_45:
      v44 += 2;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      if (--v3)
        continue;
      break;
    }
    swift_bridgeObjectRelease();
    v63 = *(_QWORD *)(v205 + 16);
    if (!v63)
    {
      v42 = v207;
      goto LABEL_65;
    }
    v223[0] = (id)MEMORY[0x1E0DEE9D8];
    sub_1CA3FB754(0, v63, 0);
    v64 = v223[0];
    v65 = v203;
    do
    {
      v66 = *(v65 - 1);
      v67 = *v65;
      v223[0] = v64;
      v69 = v64[2];
      v68 = v64[3];
      swift_bridgeObjectRetain();
      if (v69 >= v68 >> 1)
      {
        sub_1CA3FB754(v68 > 1, v69 + 1, 1);
        v64 = v223[0];
      }
      v64[2] = v69 + 1;
      v70 = &v64[2 * v69];
      v70[4] = v66;
      v70[5] = v67;
      v65 += 4;
      --v63;
    }
    while (v63);
    swift_bridgeObjectRelease();
    v71 = v211;
    v42 = v207;
LABEL_66:
    swift_bridgeObjectRetain();
    v72 = sub_1CA3221E4(v42, (uint64_t)v64);
    if (!v71)
    {
      v73 = v72;
      swift_bridgeObjectRelease();
      v193 = v73;
      v194 = objc_msgSend(a1, sel_nodeIdentifiersMatchingFilter_, v73);
      v192 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D429B8]), sel_initWithIdentifiers_graph_, v194, a1);
      v74 = objc_msgSend(v192, sel_allObjects);
      type metadata accessor for Node();
      v75 = sub_1CA85B7B0();

      if (v75 >> 62)
      {
        swift_bridgeObjectRetain();
        v76 = sub_1CA85C08C();
        swift_bridgeObjectRelease();
        v220 = v45;
        if (v76)
          goto LABEL_69;
      }
      else
      {
        v76 = *(_QWORD *)((v75 & 0xFFFFFFFFFFFFF8) + 0x10);
        v220 = v45;
        if (v76)
        {
LABEL_69:
          v199 = v75 & 0xC000000000000001;
          v77 = 4;
          v215 = (_QWORD *)MEMORY[0x1E0DEE9D8];
          v197 = v76;
          v198 = v75;
          while (1)
          {
            if (v199)
              v80 = (char *)MEMORY[0x1CAA4DD64](v77 - 4, v75);
            else
              v80 = (char *)*(id *)(v75 + 8 * v77);
            v81 = v80;
            if (__OFADD__(v77 - 4, 1))
              goto LABEL_202;
            v82 = *(_QWORD *)&v80[OBJC_IVAR____TtC11PhotosGraph4Node_properties];
            if (!*(_QWORD *)(v82 + 16))
              break;
            swift_bridgeObjectRetain();
            v83 = sub_1CA25081C(0xD000000000000010, 0x80000001CA889240);
            if ((v84 & 1) == 0)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              goto LABEL_131;
            }
            v85 = *(void **)(*(_QWORD *)(v82 + 56) + 8 * v83);
            objc_opt_self();
            v86 = swift_dynamicCastObjCClass();
            if (!v86)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              goto LABEL_133;
            }
            v87 = (void *)v86;
            v204 = v77 - 3;
            v208 = v85;
            v88 = objc_msgSend(v87, sel_value);
            v89 = sub_1CA85B534();
            v91 = v90;

            swift_bridgeObjectRetain();
            v92 = v215;
            v206 = v77;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              v92 = sub_1CA26BCE4(0, v215[2] + 1, 1, v215);
            v94 = v92[2];
            v93 = v92[3];
            if (v94 >= v93 >> 1)
              v92 = sub_1CA26BCE4((_QWORD *)(v93 > 1), v94 + 1, 1, v92);
            v92[2] = v94 + 1;
            v215 = v92;
            v95 = &v92[2 * v94];
            v95[4] = v89;
            v95[5] = v91;
            if (!v220[2] || (v96 = sub_1CA25081C(v89, v91), (v97 & 1) == 0))
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              sub_1CA3223A4();
              swift_allocError();
              *v130 = 4;
              swift_willThrow();
              swift_bridgeObjectRelease();
              swift_release();
              swift_bridgeObjectRelease();

              goto LABEL_125;
            }
            v201 = v81;
            v98 = *(_QWORD *)(v220[7] + 32 * v96 + 24);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            v99 = sub_1CA329DF0(v98);
            if (!sub_1CA320E78(v99)
              || (v100 = (void *)objc_opt_self(),
                  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF94B6B0),
                  v101 = (void *)sub_1CA85B3FC(),
                  swift_bridgeObjectRelease(),
                  v102 = objc_msgSend(v100, sel_kgPropertiesWithMAProperties_, v101),
                  v101,
                  !v102))
            {
              sub_1CA3223A4();
              swift_allocError();
              *v131 = 2;
              swift_willThrow();
              swift_bridgeObjectRelease();
              swift_release();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();

              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
LABEL_125:
              v132 = v208;
LABEL_128:

LABEL_134:
              return;
            }
            sub_1CA322400();
            v103 = sub_1CA85B414();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();

            swift_bridgeObjectRetain();
            v104 = sub_1CA320DFC(v103, v82);
            sub_1CA28A410(v82, v104);
            v106 = v105;
            swift_bridgeObjectRelease();
            if ((v106 & 1) != 0)
            {

              swift_bridgeObjectRelease();
            }
            else
            {
              v78 = v201;
              sub_1CA32A198(v104);
              swift_bridgeObjectRelease();
              v79 = (void *)sub_1CA85B3FC();
              swift_bridgeObjectRelease();
              objc_msgSend(v210, sel_updateNode_newProperties_, v78, v79);

            }
            v45 = v220;
            v75 = v198;

            v77 = v206 + 1;
            if (v204 == v197)
              goto LABEL_95;
          }
          swift_bridgeObjectRelease();
LABEL_131:
          swift_bridgeObjectRelease();
LABEL_133:
          swift_bridgeObjectRelease();
          sub_1CA3223A4();
          swift_allocError();
          *v134 = 3;
          swift_willThrow();
          swift_bridgeObjectRelease();
          swift_release();
          swift_bridgeObjectRelease();

          goto LABEL_134;
        }
      }
      v215 = (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_95:
      v107 = v71;
      swift_bridgeObjectRelease();
      v108 = sub_1CA2877D4((uint64_t)v64);
      swift_bridgeObjectRelease();
      v109 = sub_1CA2DA510((uint64_t)v215, v108);
      swift_bridgeObjectRelease();
      v110 = 0;
      v111 = *(_QWORD *)(v109 + 56);
      v212 = v109 + 56;
      v112 = 1 << *(_BYTE *)(v109 + 32);
      if (v112 < 64)
        v113 = ~(-1 << v112);
      else
        v113 = -1;
      v114 = v113 & v111;
      v216 = (unint64_t)(v112 + 63) >> 6;
      if ((v113 & v111) != 0)
      {
LABEL_99:
        v115 = __clz(__rbit64(v114));
        v114 &= v114 - 1;
        v116 = v115 | (v110 << 6);
        if (v45[2])
          goto LABEL_112;
LABEL_127:
        sub_1CA3223A4();
        swift_allocError();
        *v133 = 4;
        swift_willThrow();
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();

        v132 = v192;
        goto LABEL_128;
      }
      while (2)
      {
        v28 = __OFADD__(v110++, 1);
        if (v28)
          goto LABEL_203;
        if (v110 >= v216)
        {

          swift_release();
          v3 = v107;
          goto LABEL_121;
        }
        v117 = *(_QWORD *)(v212 + 8 * v110);
        v3 = v107;
        if (v117)
          goto LABEL_111;
        v118 = v110 + 1;
        if (v110 + 1 >= v216)
          break;
        v117 = *(_QWORD *)(v212 + 8 * v118);
        if (v117)
          goto LABEL_110;
        v118 = v110 + 2;
        if (v110 + 2 >= v216)
          break;
        v117 = *(_QWORD *)(v212 + 8 * v118);
        if (v117)
          goto LABEL_110;
        v118 = v110 + 3;
        if (v110 + 3 < v216)
        {
          v117 = *(_QWORD *)(v212 + 8 * v118);
          if (!v117)
          {
            while (1)
            {
              v110 = v118 + 1;
              if (__OFADD__(v118, 1))
                goto LABEL_205;
              if (v110 >= v216)
                goto LABEL_120;
              v117 = *(_QWORD *)(v212 + 8 * v110);
              ++v118;
              if (v117)
                goto LABEL_111;
            }
          }
LABEL_110:
          v110 = v118;
LABEL_111:
          v114 = (v117 - 1) & v117;
          v116 = __clz(__rbit64(v117)) + (v110 << 6);
          if (!v45[2])
            goto LABEL_127;
LABEL_112:
          v119 = (uint64_t *)(*(_QWORD *)(v109 + 48) + 16 * v116);
          v120 = *v119;
          v121 = v119[1];
          swift_bridgeObjectRetain();
          v122 = sub_1CA25081C(v120, v121);
          if ((v123 & 1) == 0)
          {
            swift_bridgeObjectRelease();
            goto LABEL_127;
          }
          v124 = v45[7] + 32 * v122;
          v126 = *(_QWORD *)(v124 + 8);
          v125 = *(_QWORD *)(v124 + 16);
          v127 = *(_QWORD *)(v124 + 24);
          v128 = *(_BYTE *)v124;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          v129 = sub_1CA32243C(v128, v126, v125, v127);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          objc_msgSend(v210, sel_insertNode_, v129);
          swift_unknownObjectRelease();
          v45 = v220;
          if (v114)
            goto LABEL_99;
          continue;
        }
        break;
      }
LABEL_120:

      swift_release();
LABEL_121:
      swift_bridgeObjectRelease();

      v7 = v195;
      v34 = v188;
      v30 = v189;
      v33 = v190;
      v35 = v191;
      if (v190)
        continue;
LABEL_31:
      v28 = __OFADD__(v35++, 1);
      if (v28)
        goto LABEL_206;
      if (v35 < v34)
      {
        v39 = *(_QWORD *)&v30[8 * v35];
        if (v39)
          goto LABEL_41;
        v40 = v35 + 1;
        if (v35 + 1 < v34)
        {
          v39 = *(_QWORD *)&v30[8 * v40];
          if (v39)
            goto LABEL_40;
          v40 = v35 + 2;
          if (v35 + 2 < v34)
          {
            v39 = *(_QWORD *)&v30[8 * v40];
            if (v39)
              goto LABEL_40;
            v40 = v35 + 3;
            if (v35 + 3 < v34)
            {
              v39 = *(_QWORD *)&v30[8 * v40];
              if (v39)
              {
LABEL_40:
                v35 = v40;
LABEL_41:
                v211 = v3;
                v37 = (v39 - 1) & v39;
                v38 = __clz(__rbit64(v39)) + (v35 << 6);
                goto LABEL_42;
              }
              while (1)
              {
                v35 = v40 + 1;
                if (__OFADD__(v40, 1))
                  break;
                if (v35 >= v34)
                  goto LABEL_136;
                v39 = *(_QWORD *)&v30[8 * v35];
                ++v40;
                if (v39)
                  goto LABEL_41;
              }
LABEL_209:
              __break(1u);
              goto LABEL_210;
            }
          }
        }
      }
LABEL_136:
      swift_release();
      v135 = *(_QWORD *)(*(_QWORD *)(v187 + 8) + 16);
      if (v135)
      {
        v136 = (_OWORD *)(swift_bridgeObjectRetain() + 48);
        v137 = (_QWORD *)MEMORY[0x1E0DEE9E0];
        while (1)
        {
          v139 = *((_BYTE *)v136 - 16);
          v140 = *((_QWORD *)v136 - 1);
          v221 = *v136;
          if (v137[2])
          {
            v141 = sub_1CA250C04(v139);
            v142 = (_QWORD *)MEMORY[0x1E0DEE9D8];
            if ((v143 & 1) != 0)
            {
              v142 = *(_QWORD **)(v137[7] + 8 * v141);
              swift_bridgeObjectRetain();
            }
          }
          else
          {
            v142 = (_QWORD *)MEMORY[0x1E0DEE9D8];
          }
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain_n();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v142 = sub_1CA26D600(0, v142[2] + 1, 1, v142);
          v145 = v142[2];
          v144 = v142[3];
          if (v145 >= v144 >> 1)
            v142 = sub_1CA26D600((_QWORD *)(v144 > 1), v145 + 1, 1, v142);
          v142[2] = v145 + 1;
          v146 = &v142[4 * v145];
          *((_BYTE *)v146 + 32) = v139;
          v146[5] = v140;
          *((_OWORD *)v146 + 3) = v221;
          v147 = v137;
          v148 = swift_isUniquelyReferenced_nonNull_native();
          v223[0] = v147;
          v150 = sub_1CA250C04(v139);
          v151 = v147[2];
          v152 = (v149 & 1) == 0;
          v153 = v151 + v152;
          if (__OFADD__(v151, v152))
            goto LABEL_204;
          v154 = v149;
          if (v147[3] >= v153)
          {
            if ((v148 & 1) != 0)
            {
              v137 = v223[0];
              if ((v149 & 1) == 0)
                goto LABEL_155;
            }
            else
            {
              sub_1CA262334();
              v137 = v223[0];
              if ((v154 & 1) == 0)
                goto LABEL_155;
            }
          }
          else
          {
            sub_1CA255AFC(v153, v148);
            v155 = sub_1CA250C04(v139);
            if ((v154 & 1) != (v156 & 1))
              goto LABEL_212;
            v150 = v155;
            v137 = v223[0];
            if ((v154 & 1) == 0)
            {
LABEL_155:
              v137[(v150 >> 6) + 8] |= 1 << v150;
              *(_BYTE *)(v137[6] + v150) = v139;
              *(_QWORD *)(v137[7] + 8 * v150) = v142;
              v157 = v137[2];
              v28 = __OFADD__(v157, 1);
              v158 = v157 + 1;
              if (v28)
                goto LABEL_208;
              v137[2] = v158;
              goto LABEL_139;
            }
          }
          v138 = v137[7];
          swift_bridgeObjectRelease();
          *(_QWORD *)(v138 + 8 * v150) = v142;
LABEL_139:
          v136 += 2;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (!--v135)
          {
            swift_bridgeObjectRelease();
LABEL_163:
            v200 = (char *)(v137 + 8);
            v159 = 1 << *((_BYTE *)v137 + 32);
            v160 = -1;
            if (v159 < 64)
              v160 = ~(-1 << v159);
            v161 = v160 & v137[8];
            v202 = (unint64_t)(v159 + 63) >> 6;
            swift_bridgeObjectRetain();
            v162 = 0;
            v209 = v137;
            while (1)
            {
              if (v161)
              {
                v222 = (v161 - 1) & v161;
                v169 = __clz(__rbit64(v161)) | (v162 << 6);
              }
              else
              {
                v28 = __OFADD__(v162++, 1);
                if (v28)
                  goto LABEL_207;
                if (v162 >= v202)
                {
LABEL_194:
                  swift_release();
                  v223[0] = 0;
                  if ((objc_msgSend(a1, sel_performChangesAndWait_error_, v210, v223) & 1) != 0)
                  {
                    v183 = v223[0];
                  }
                  else
                  {
                    v185 = v223[0];
                    sub_1CA85A364();

                    swift_willThrow();
                  }
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();

                  return;
                }
                v170 = *(_QWORD *)&v200[8 * v162];
                if (!v170)
                {
                  v171 = v162 + 1;
                  if (v162 + 1 >= v202)
                    goto LABEL_194;
                  v170 = *(_QWORD *)&v200[8 * v171];
                  if (!v170)
                  {
                    v171 = v162 + 2;
                    if (v162 + 2 >= v202)
                      goto LABEL_194;
                    v170 = *(_QWORD *)&v200[8 * v171];
                    if (!v170)
                    {
                      v171 = v162 + 3;
                      if (v162 + 3 >= v202)
                        goto LABEL_194;
                      v170 = *(_QWORD *)&v200[8 * v171];
                      if (!v170)
                      {
                        while (1)
                        {
                          v162 = v171 + 1;
                          if (__OFADD__(v171, 1))
                            break;
                          if (v162 >= v202)
                            goto LABEL_194;
                          v170 = *(_QWORD *)&v200[8 * v162];
                          ++v171;
                          if (v170)
                            goto LABEL_179;
                        }
LABEL_210:
                        __break(1u);
                      }
                    }
                  }
                  v162 = v171;
                }
LABEL_179:
                v222 = (v170 - 1) & v170;
                v169 = __clz(__rbit64(v170)) + (v162 << 6);
              }
              v172 = *(unsigned __int8 *)(v137[6] + v169);
              v173 = *(_QWORD *)(v137[7] + 8 * v169);
              v174 = *(_QWORD *)(v173 + 16);
              if (v174)
              {
                v213 = v3;
                v217 = v162;
                v223[0] = (id)MEMORY[0x1E0DEE9D8];
                swift_bridgeObjectRetain();
                sub_1CA3FB754(0, v174, 0);
                v175 = v223[0];
                v176 = (uint64_t *)(v173 + 48);
                do
                {
                  v178 = *(v176 - 1);
                  v177 = *v176;
                  v223[0] = v175;
                  v180 = v175[2];
                  v179 = v175[3];
                  swift_bridgeObjectRetain();
                  if (v180 >= v179 >> 1)
                  {
                    sub_1CA3FB754(v179 > 1, v180 + 1, 1);
                    v175 = v223[0];
                  }
                  v175[2] = v180 + 1;
                  v181 = &v175[2 * v180];
                  v181[4] = v178;
                  v181[5] = v177;
                  v176 += 4;
                  --v174;
                }
                while (v174);
                swift_bridgeObjectRelease();
                v3 = v213;
                v162 = v217;
              }
              else
              {
                v175 = (_QWORD *)MEMORY[0x1E0DEE9D8];
              }
              __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF94B690);
              inited = swift_initStackObject();
              *(_OWORD *)(inited + 16) = xmmword_1CA8D4E40;
              *(_QWORD *)(inited + 32) = 0xD000000000000010;
              *(_QWORD *)(inited + 40) = v186 | 0x8000000000000000;
              *(_QWORD *)(inited + 72) = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED872270);
              *(_QWORD *)(inited + 48) = v175;
              swift_bridgeObjectRetain();
              sub_1CA273C34(inited);
              if (v172 != 1 && v172 != 2)
              {
                swift_bridgeObjectRelease();
                sub_1CA3223A4();
                swift_allocError();
                *v184 = 1;
                swift_willThrow();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();

                goto LABEL_197;
              }
              v163 = objc_allocWithZone(MEMORY[0x1E0D429C0]);
              v164 = (void *)sub_1CA85B798();
              v165 = (void *)sub_1CA85B798();
              v166 = (void *)sub_1CA85B3FC();
              swift_bridgeObjectRelease();
              v167 = objc_msgSend(v163, sel_initWithRequiredLabels_optionalLabels_properties_, v164, v165, v166);
              swift_bridgeObjectRelease();

              v168 = objc_msgSend(a1, sel_nodeIdentifiersMatchingFilter_, v167);
              objc_msgSend(v210, sel_removeNodesForIdentifiers_, v168);

              v137 = v209;
              v161 = v222;
            }
          }
        }
      }
LABEL_162:
      v137 = (_QWORD *)MEMORY[0x1E0DEE9E0];
      goto LABEL_163;
    }
    break;
  }
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease_n();
LABEL_197:
  swift_release();
  swift_bridgeObjectRelease();
}

uint64_t sub_1CA320DFC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  uint64_t v8;

  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v8 = a2;
  sub_1CA321A88(a1, (uint64_t)sub_1CA321D6C, 0, isUniquelyReferenced_nonNull_native, &v8);
  v6 = v8;
  swift_bridgeObjectRelease();
  if (v2)
    swift_bridgeObjectRelease();
  return v6;
}

unint64_t sub_1CA320E78(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t *v6;
  unint64_t result;
  int64_t v8;
  uint64_t *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t *v17;
  uint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  uint64_t *v29;
  uint64_t v30;
  BOOL v31;
  uint64_t v32;
  int64_t v33;
  uint64_t v34;
  uint64_t v35;
  int64_t v36;
  uint64_t v37;
  char v38[32];
  _QWORD v39[2];
  uint64_t v40;

  v1 = a1;
  if (*(_QWORD *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94AF90);
    v2 = (_QWORD *)sub_1CA85C0C8();
  }
  else
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  }
  v34 = v1 + 64;
  v3 = -1;
  v4 = -1 << *(_BYTE *)(v1 + 32);
  if (-v4 < 64)
    v3 = ~(-1 << -(char)v4);
  v5 = v3 & *(_QWORD *)(v1 + 64);
  v6 = &v40;
  v33 = (unint64_t)(63 - v4) >> 6;
  result = swift_bridgeObjectRetain();
  v8 = 0;
  v9 = (uint64_t *)&unk_1EF94D630;
  v10 = (uint64_t *)&unk_1EF94B6B0;
  v11 = MEMORY[0x1E0DEE9B8] + 8;
  while (1)
  {
    if (v5)
    {
      v35 = (v5 - 1) & v5;
      v36 = v8;
      v19 = __clz(__rbit64(v5)) | (v8 << 6);
    }
    else
    {
      v20 = v8 + 1;
      if (__OFADD__(v8, 1))
        goto LABEL_37;
      if (v20 >= v33)
      {
LABEL_33:
        sub_1CA24E6B8();
        return (unint64_t)v2;
      }
      v21 = *(_QWORD *)(v34 + 8 * v20);
      v22 = v8 + 1;
      if (!v21)
      {
        v22 = v8 + 2;
        if (v8 + 2 >= v33)
          goto LABEL_33;
        v21 = *(_QWORD *)(v34 + 8 * v22);
        if (!v21)
        {
          v22 = v8 + 3;
          if (v8 + 3 >= v33)
            goto LABEL_33;
          v21 = *(_QWORD *)(v34 + 8 * v22);
          if (!v21)
          {
            v22 = v8 + 4;
            if (v8 + 4 >= v33)
              goto LABEL_33;
            v21 = *(_QWORD *)(v34 + 8 * v22);
            if (!v21)
            {
              v23 = v8 + 5;
              if (v8 + 5 >= v33)
                goto LABEL_33;
              v21 = *(_QWORD *)(v34 + 8 * v23);
              if (!v21)
              {
                while (1)
                {
                  v22 = v23 + 1;
                  if (__OFADD__(v23, 1))
                    goto LABEL_38;
                  if (v22 >= v33)
                    goto LABEL_33;
                  v21 = *(_QWORD *)(v34 + 8 * v22);
                  ++v23;
                  if (v21)
                    goto LABEL_26;
                }
              }
              v22 = v8 + 5;
            }
          }
        }
      }
LABEL_26:
      v35 = (v21 - 1) & v21;
      v36 = v22;
      v19 = __clz(__rbit64(v21)) + (v22 << 6);
    }
    v24 = (uint64_t *)(*(_QWORD *)(v1 + 48) + 16 * v19);
    v26 = *v24;
    v25 = v24[1];
    sub_1CA266A08(*(_QWORD *)(v1 + 56) + 32 * v19, (uint64_t)v6);
    v39[0] = v26;
    v39[1] = v25;
    sub_1CA266A08((uint64_t)v6, (uint64_t)v38);
    swift_bridgeObjectRetain_n();
    sub_1CA267BE8((uint64_t)v39, v9);
    __swift_instantiateConcreteTypeFromMangledName(v10);
    if (!swift_dynamicCast())
    {
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      sub_1CA24E6B8();
      swift_release();
      return 0;
    }
    result = sub_1CA25081C(v26, v25);
    v27 = result;
    if ((v28 & 1) != 0)
    {
      v12 = v11;
      v13 = v10;
      v14 = v6;
      v15 = v1;
      v16 = v9;
      v17 = (uint64_t *)(v2[6] + 16 * result);
      swift_bridgeObjectRelease();
      *v17 = v26;
      v17[1] = v25;
      v9 = v16;
      v1 = v15;
      v6 = v14;
      v10 = v13;
      v11 = v12;
      v18 = v2[7];
      result = swift_unknownObjectRelease();
      *(_QWORD *)(v18 + 8 * v27) = v37;
      goto LABEL_8;
    }
    if (v2[2] >= v2[3])
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v29 = (uint64_t *)(v2[6] + 16 * result);
    *v29 = v26;
    v29[1] = v25;
    *(_QWORD *)(v2[7] + 8 * result) = v37;
    v30 = v2[2];
    v31 = __OFADD__(v30, 1);
    v32 = v30 + 1;
    if (v31)
      goto LABEL_36;
    v2[2] = v32;
LABEL_8:
    v5 = v35;
    v8 = v36;
  }
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
  return result;
}

uint64_t sub_1CA3211F8@<X0>(void *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  id v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t result;
  uint64_t v12;
  _QWORD aBlock[6];
  uint64_t v14;

  v5 = objc_msgSend(a1, sel_nodeIdentifiersMatchingFilter_, a2);
  v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D429B8]), sel_initWithIdentifiers_graph_, v5, a1);
  v14 = MEMORY[0x1E0DEE9D8];
  v7 = (void *)sub_1CA85B510();
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = &v14;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = sub_1CA3221AC;
  *(_QWORD *)(v9 + 24) = v8;
  aBlock[4] = sub_1CA3221C4;
  aBlock[5] = v9;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1CA3214B0;
  aBlock[3] = &block_descriptor_11;
  v10 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(v6, sel_enumeratePropertyValuesForKey_withBlock_, v7, v10);

  _Block_release(v10);
  LOBYTE(v5) = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((v5 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v12 = v14;
    result = swift_release();
    *a3 = v12;
  }
  return result;
}

uint64_t sub_1CA3213B8(int a1, id a2, uint64_t a3, _QWORD **a4)
{
  uint64_t result;
  _QWORD *v6;
  unint64_t v7;
  unint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;

  objc_msgSend(a2, sel_kgPropertyValue);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF94B6B0);
  result = swift_dynamicCast();
  if ((result & 1) != 0)
  {
    v6 = *a4;
    result = swift_isUniquelyReferenced_nonNull_native();
    *a4 = v6;
    if ((result & 1) == 0)
    {
      result = (uint64_t)sub_1CA26BCE4(0, v6[2] + 1, 1, v6);
      v6 = (_QWORD *)result;
      *a4 = (_QWORD *)result;
    }
    v8 = v6[2];
    v7 = v6[3];
    if (v8 >= v7 >> 1)
    {
      result = (uint64_t)sub_1CA26BCE4((_QWORD *)(v7 > 1), v8 + 1, 1, v6);
      v6 = (_QWORD *)result;
      *a4 = (_QWORD *)result;
    }
    v6[2] = v8 + 1;
    v9 = &v6[2 * v8];
    v9[4] = v10;
    v9[5] = v11;
  }
  return result;
}

void sub_1CA3214B0(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  void (*v6)(uint64_t, id, uint64_t);
  id v7;

  v6 = *(void (**)(uint64_t, id, uint64_t))(a1 + 32);
  v7 = a3;
  v6(a2, v7, a4);

}

uint64_t sub_1CA321500(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;

  v2[2] = a1;
  v2[3] = v1;
  v2[4] = *v1;
  return swift_task_switch();
}

uint64_t sub_1CA321520()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = v0[4];
  v2 = v0[2];
  v0[5] = *(_QWORD *)(v0[3] + 24);
  v3 = swift_task_alloc();
  v0[6] = v3;
  *(_QWORD *)(v3 + 16) = v2;
  *(_QWORD *)(v3 + 24) = v1;
  return swift_task_switch();
}

uint64_t sub_1CA32157C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = v0[6];
  v2 = swift_task_alloc();
  v0[7] = v2;
  *(_QWORD *)(v2 + 16) = sub_1CA3223E8;
  *(_QWORD *)(v2 + 24) = v1;
  v3 = (_QWORD *)swift_task_alloc();
  v0[8] = v3;
  *v3 = v0;
  v3[1] = sub_1CA321610;
  return sub_1CA85A8C8();
}

uint64_t sub_1CA321610()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 72) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_task_dealloc();
    swift_task_dealloc();
  }
  return swift_task_switch();
}

uint64_t sub_1CA321688()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1CA321694()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1CA3216D0()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1CA321704(void *a1, uint64_t a2)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  void *v8;
  void *v9;
  void *v10;
  id v11;
  id v12;
  int v13;
  id v14;
  id v15;
  _BYTE *v16;
  id v18[2];

  v18[1] = *(id *)MEMORY[0x1E0C80C00];
  v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D42998]), sel_init);
  v4 = *(_QWORD *)(a2 + 16);
  if (v4)
  {
    swift_bridgeObjectRetain();
    v5 = 0;
    v6 = v3;
    while (1)
    {
      v13 = *(unsigned __int8 *)(a2 + v5 + 32);
      if (v13 != 1 && v13 != 2)
        break;
      v7 = objc_allocWithZone(MEMORY[0x1E0D429C0]);
      v8 = (void *)sub_1CA85B798();
      v9 = (void *)sub_1CA85B798();
      v10 = (void *)sub_1CA85B3FC();
      v11 = objc_msgSend(v7, sel_initWithRequiredLabels_optionalLabels_properties_, v8, v9, v10);
      ++v5;

      v12 = objc_msgSend(a1, sel_nodeIdentifiersMatchingFilter_, v11);
      v3 = v6;
      objc_msgSend(v6, sel_removeNodesForIdentifiers_, v12);

      if (v4 == v5)
      {
        swift_bridgeObjectRelease();
        goto LABEL_8;
      }
    }
    sub_1CA3223A4();
    swift_allocError();
    *v16 = 1;
    swift_willThrow();

    swift_bridgeObjectRelease();
  }
  else
  {
LABEL_8:
    v18[0] = 0;
    if ((objc_msgSend(a1, sel_performChangesAndWait_error_, v3, v18) & 1) != 0)
    {
      v14 = v18[0];
    }
    else
    {
      v15 = v18[0];
      sub_1CA85A364();

      swift_willThrow();
    }

  }
}

uint64_t GraphBuilder.deinit()
{
  uint64_t v0;

  swift_release();
  return v0;
}

uint64_t GraphBuilder.__deallocating_deinit()
{
  uint64_t v0;

  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1CA321A00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  return swift_task_switch();
}

uint64_t sub_1CA321A1C()
{
  uint64_t v0;
  void (*v1)(void);
  void *v2;

  v1 = *(void (**)(void))(v0 + 32);
  v2 = (void *)sub_1CA85A898();
  v1();

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1CA321A88(uint64_t a1, uint64_t a2, uint64_t a3, char a4, _QWORD *a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  char v15;
  unint64_t v16;
  uint64_t v17;
  _BOOL8 v18;
  uint64_t v19;
  char v20;
  char v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  char v41;
  unint64_t v42;
  uint64_t v43;
  _BOOL8 v44;
  char v45;
  char v46;
  _QWORD *v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t result;

  swift_bridgeObjectRetain();
  v7 = swift_retain();
  v8 = sub_1CA518DE4(v7);
  if (!v9)
    goto LABEL_24;
  v11 = v8;
  v12 = v9;
  v13 = v10;
  v14 = (_QWORD *)*a5;
  v16 = sub_1CA25081C(v8, v9);
  v17 = v14[2];
  v18 = (v15 & 1) == 0;
  v19 = v17 + v18;
  if (__OFADD__(v17, v18))
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v20 = v15;
  if (v14[3] >= v19)
  {
    if ((a4 & 1) != 0)
    {
      v22 = (_QWORD *)*a5;
      if ((v15 & 1) != 0)
        goto LABEL_9;
    }
    else
    {
      v19 = (uint64_t)sub_1CA262140();
      v22 = (_QWORD *)*a5;
      if ((v20 & 1) != 0)
        goto LABEL_9;
    }
LABEL_11:
    v22[(v16 >> 6) + 8] |= 1 << v16;
    v25 = (uint64_t *)(v22[6] + 16 * v16);
    *v25 = v11;
    v25[1] = v12;
    *(_QWORD *)(v22[7] + 8 * v16) = v13;
    v26 = v22[2];
    v27 = __OFADD__(v26, 1);
    v28 = v26 + 1;
    if (v27)
    {
LABEL_26:
      __break(1u);
      goto LABEL_27;
    }
    v22[2] = v28;
LABEL_13:
    v29 = sub_1CA518DE4(v19);
    if (v30)
    {
      v32 = v29;
      v33 = v30;
      v34 = v31;
      do
      {
        v40 = (_QWORD *)*a5;
        v42 = sub_1CA25081C(v32, v33);
        v43 = v40[2];
        v44 = (v41 & 1) == 0;
        v37 = v43 + v44;
        if (__OFADD__(v43, v44))
          goto LABEL_25;
        v45 = v41;
        if (v40[3] < v37)
        {
          sub_1CA2557C0(v37, 1);
          v37 = sub_1CA25081C(v32, v33);
          if ((v45 & 1) != (v46 & 1))
            goto LABEL_27;
          v42 = v37;
        }
        v47 = (_QWORD *)*a5;
        if ((v45 & 1) != 0)
        {
          swift_bridgeObjectRelease();
          v35 = v47[7];
          v36 = 8 * v42;

          *(_QWORD *)(v35 + v36) = v34;
        }
        else
        {
          v47[(v42 >> 6) + 8] |= 1 << v42;
          v48 = (uint64_t *)(v47[6] + 16 * v42);
          *v48 = v32;
          v48[1] = v33;
          *(_QWORD *)(v47[7] + 8 * v42) = v34;
          v49 = v47[2];
          v27 = __OFADD__(v49, 1);
          v50 = v49 + 1;
          if (v27)
            goto LABEL_26;
          v47[2] = v50;
        }
        v32 = sub_1CA518DE4(v37);
        v33 = v38;
        v34 = v39;
      }
      while (v38);
    }
LABEL_24:
    swift_release();
    swift_bridgeObjectRelease();
    sub_1CA24E6B8();
    return swift_release();
  }
  sub_1CA2557C0(v19, a4 & 1);
  v19 = sub_1CA25081C(v11, v12);
  if ((v20 & 1) == (v21 & 1))
  {
    v16 = v19;
    v22 = (_QWORD *)*a5;
    if ((v20 & 1) == 0)
      goto LABEL_11;
LABEL_9:
    swift_bridgeObjectRelease();
    v23 = v22[7];
    v24 = 8 * v16;

    *(_QWORD *)(v23 + v24) = v13;
    goto LABEL_13;
  }
LABEL_27:
  result = sub_1CA85C2E4();
  __break(1u);
  return result;
}

id sub_1CA321D6C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  id v4;

  v2 = a1[1];
  v4 = (id)a1[2];
  *a2 = *a1;
  a2[1] = v2;
  a2[2] = v4;
  swift_bridgeObjectRetain();
  return v4;
}

void sub_1CA321DA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v18[2];
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26[2];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED872E00);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(a1 + 16);
  if (v7)
  {
    v8 = a1 + 32;
    v9 = sub_1CA85B8E8();
    v10 = *(_QWORD *)(v9 - 8);
    v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56);
    v18[1] = a1;
    swift_bridgeObjectRetain();
    v19 = v10;
    v20 = MEMORY[0x1E0DEE9C0] + 8;
    while (1)
    {
      v21(v6, 1, 1, v9);
      sub_1CA28A998(v8, (uint64_t)v26);
      v11 = (_QWORD *)swift_allocObject();
      v11[2] = 0;
      v12 = v11 + 2;
      v11[3] = 0;
      sub_1CA28FA30(v26, (uint64_t)(v11 + 4));
      v11[9] = a2;
      v13 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48))(v6, 1, v9);
      swift_retain();
      if (v13 == 1)
      {
        sub_1CA267BE8((uint64_t)v6, &qword_1ED872E00);
        if (!*v12)
          goto LABEL_9;
      }
      else
      {
        sub_1CA85B8DC();
        (*(void (**)(char *, uint64_t))(v10 + 8))(v6, v9);
        if (!*v12)
        {
LABEL_9:
          v14 = 0;
          v16 = 0;
          goto LABEL_10;
        }
      }
      swift_getObjectType();
      swift_unknownObjectRetain();
      v14 = sub_1CA85B8AC();
      v16 = v15;
      swift_unknownObjectRelease();
LABEL_10:
      v17 = swift_allocObject();
      *(_QWORD *)(v17 + 16) = &unk_1EF94D660;
      *(_QWORD *)(v17 + 24) = v11;
      if (v16 | v14)
      {
        v22 = 0;
        v23 = 0;
        v24 = v14;
        v25 = v16;
      }
      v10 = v19;
      swift_task_create();
      swift_release();
      v8 += 40;
      if (!--v7)
      {
        swift_bridgeObjectRelease();
        return;
      }
    }
  }
}

uint64_t sub_1CA321FD8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  _QWORD *v7;

  v6 = *(_QWORD *)(v2 + 16);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1CA24F0E4;
  return sub_1CA31DD8C(a1, a2, v6);
}

uint64_t sub_1CA322040(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for InputStreamUpdate(a2, a1);
  return a2;
}

uint64_t sub_1CA32207C(uint64_t a1)
{
  destroy for InputStreamUpdate(a1);
  return a1;
}

void sub_1CA3220B0(void *a1)
{
  uint64_t v1;

  sub_1CA31F68C(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1CA3220C8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  __int128 v7;

  v6 = swift_task_alloc();
  v7 = *(_OWORD *)(v2 + 16);
  *(_QWORD *)(v3 + 16) = v6;
  *(_QWORD *)v6 = v3;
  *(_QWORD *)(v6 + 8) = sub_1CA273C28;
  *(_OWORD *)(v6 + 32) = v7;
  *(_QWORD *)(v6 + 16) = a1;
  *(_QWORD *)(v6 + 24) = a2;
  return swift_task_switch();
}

uint64_t sub_1CA32213C(uint64_t result, unint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a4)
  {
    sub_1CA260204(result, a2);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t type metadata accessor for GraphBuilder()
{
  return objc_opt_self();
}

uint64_t method lookup function for GraphBuilder()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of GraphBuilder.__allocating_init(with:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t sub_1CA32219C()
{
  return swift_deallocObject();
}

uint64_t sub_1CA3221AC(int a1, void *a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1CA3213B8(a1, a2, a3, *(_QWORD ***)(v3 + 16));
}

uint64_t sub_1CA3221B4()
{
  return swift_deallocObject();
}

uint64_t sub_1CA3221C4()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))();
}

id sub_1CA3221E4(char a1, uint64_t a2)
{
  uint64_t inited;
  id v5;
  id v6;
  _BYTE *v7;
  void *v8;
  void *v9;
  void *v10;

  if (!a2)
  {
    v5 = (id)MEMORY[0x1E0DEE9E0];
    if (a1)
      goto LABEL_3;
LABEL_5:
    swift_bridgeObjectRelease();
    sub_1CA3223A4();
    swift_allocError();
    *v7 = 1;
    swift_willThrow();
    return v5;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF94B690);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1CA8D4E40;
  *(_QWORD *)(inited + 32) = 0xD000000000000010;
  *(_QWORD *)(inited + 40) = 0x80000001CA889240;
  *(_QWORD *)(inited + 72) = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED872270);
  *(_QWORD *)(inited + 48) = a2;
  swift_bridgeObjectRetain();
  v5 = (id)sub_1CA273C34(inited);
  if (!a1)
    goto LABEL_5;
LABEL_3:
  v6 = objc_allocWithZone(MEMORY[0x1E0D429C0]);
  v8 = (void *)sub_1CA85B798();
  v9 = (void *)sub_1CA85B798();
  v10 = (void *)sub_1CA85B3FC();
  swift_bridgeObjectRelease();
  v5 = objc_msgSend(v6, sel_initWithRequiredLabels_optionalLabels_properties_, v8, v9, v10);

  return v5;
}

unint64_t sub_1CA3223A4()
{
  unint64_t result;

  result = qword_1EF94D608;
  if (!qword_1EF94D608)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8DC58C, &type metadata for GraphBuilder.GraphBuilderError);
    atomic_store(result, &qword_1EF94D608);
  }
  return result;
}

void sub_1CA3223E8(void *a1)
{
  uint64_t v1;

  sub_1CA321704(a1, *(_QWORD *)(v1 + 16));
}

unint64_t sub_1CA322400()
{
  unint64_t result;

  result = qword_1EF94D620;
  if (!qword_1EF94D620)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF94D620);
  }
  return result;
}

id sub_1CA32243C(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v5;
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  id v10;
  void *v11;
  id v12;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v14;
  objc_class *v15;
  char *v16;
  _BYTE *v18;
  _BYTE *v19;
  uint64_t v20;
  objc_class *v21;
  char *v22;
  objc_super v23;
  objc_super v24;
  uint64_t v25;

  v5 = sub_1CA329DF0(a4);
  if (sub_1CA320E78(v5)
    && (v6 = (void *)objc_opt_self(),
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF94B6B0),
        v7 = (void *)sub_1CA85B3FC(),
        swift_bridgeObjectRelease(),
        v8 = objc_msgSend(v6, sel_kgPropertiesWithMAProperties_, v7),
        v7,
        v8))
  {
    sub_1CA322400();
    v9 = sub_1CA85B414();
    swift_bridgeObjectRelease();

    v10 = objc_allocWithZone(MEMORY[0x1E0D429D0]);
    swift_bridgeObjectRetain();
    v11 = (void *)sub_1CA85B510();
    swift_bridgeObjectRelease();
    v12 = objc_msgSend(v10, sel_initWithValue_, v11);

    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v25 = v9;
    sub_1CA25E590((uint64_t)v12, 0xD000000000000010, 0x80000001CA889240, isUniquelyReferenced_nonNull_native);
    swift_bridgeObjectRelease();
    if (a1)
    {
      if (a1 == 1)
      {
        v14 = sub_1CA2877D4((uint64_t)&unk_1E83FF560);
        swift_arrayDestroy();
        v15 = (objc_class *)type metadata accessor for Node();
        v16 = (char *)objc_allocWithZone(v15);
        *(_QWORD *)&v16[OBJC_IVAR____TtC11PhotosGraph4Node_identifier] = 0;
        *(_QWORD *)&v16[OBJC_IVAR____TtC11PhotosGraph4Node_labels] = v14;
        *(_QWORD *)&v16[OBJC_IVAR____TtC11PhotosGraph4Node_properties] = v9;
        v24.receiver = v16;
        v24.super_class = v15;
        return objc_msgSendSuper2(&v24, sel_init);
      }
      else
      {
        v20 = sub_1CA2877D4((uint64_t)&unk_1E83FF530);
        swift_arrayDestroy();
        v21 = (objc_class *)type metadata accessor for Node();
        v22 = (char *)objc_allocWithZone(v21);
        *(_QWORD *)&v22[OBJC_IVAR____TtC11PhotosGraph4Node_identifier] = 0;
        *(_QWORD *)&v22[OBJC_IVAR____TtC11PhotosGraph4Node_labels] = v20;
        *(_QWORD *)&v22[OBJC_IVAR____TtC11PhotosGraph4Node_properties] = v9;
        v23.receiver = v22;
        v23.super_class = v21;
        return objc_msgSendSuper2(&v23, sel_init);
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      sub_1CA3223A4();
      swift_allocError();
      *v19 = 1;
      return (id)swift_willThrow();
    }
  }
  else
  {
    sub_1CA3223A4();
    swift_allocError();
    *v18 = 2;
    swift_willThrow();
    return (id)swift_bridgeObjectRelease();
  }
}

uint64_t sub_1CA322750()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 32);
  return swift_deallocObject();
}

uint64_t sub_1CA32277C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_1CA273C28;
  v2[6] = v0 + 32;
  return swift_task_switch();
}

uint64_t sub_1CA3227DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED872E00);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_1CA322824()
{
  unint64_t result;

  result = qword_1EF94D650;
  if (!qword_1EF94D650)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8E3D14, &type metadata for InputStreamToken);
    atomic_store(result, &qword_1EF94D650);
  }
  return result;
}

uint64_t sub_1CA322868()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 32);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1CA32289C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = v0 + 32;
  v3 = *(_QWORD *)(v0 + 72);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_1CA24F0E4;
  v4[7] = v2;
  v4[8] = v3;
  return swift_task_switch();
}

uint64_t sub_1CA322900()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1CA322924(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1CA273C28;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_1EF959BD0 + dword_1EF959BD0))(a1, v4);
}

uint64_t getEnumTagSinglePayload for GraphBuilder.GraphBuilderError(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFC)
    goto LABEL_17;
  if (a2 + 4 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 4) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 4;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 4;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 4;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 5;
  v8 = v6 - 5;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for GraphBuilder.GraphBuilderError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1CA322A70 + 4 * byte_1CA8DC4B5[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1CA322AA4 + 4 * asc_1CA8DC4B0[v4]))();
}

uint64_t sub_1CA322AA4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CA322AAC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1CA322AB4);
  return result;
}

uint64_t sub_1CA322AC0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1CA322AC8);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1CA322ACC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CA322AD4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for GraphBuilder.GraphBuilderError()
{
  return &type metadata for GraphBuilder.GraphBuilderError;
}

unint64_t sub_1CA322AF4()
{
  unint64_t result;

  result = qword_1EF94D678;
  if (!qword_1EF94D678)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8DC564, &type metadata for GraphBuilder.GraphBuilderError);
    atomic_store(result, (unint64_t *)&qword_1EF94D678);
  }
  return result;
}

BOOL static MusicMaestro.Error.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t MusicMaestro.Error.hash(into:)()
{
  return sub_1CA85C374();
}

uint64_t MusicMaestro.Error.hashValue.getter()
{
  sub_1CA85C368();
  sub_1CA85C374();
  return sub_1CA85C3B0();
}

id static MusicMaestro.curateMusic(forNormalizedSupportedKeywordsByAssetCollectionLocalIdentifier:keywordsDataFrame:progressReporter:)(void *a1, void *a2)
{
  return sub_1CA322FA0(a1, a2);
}

id static MusicMaestro.curateMusic(forNormalizedKeywordsByAssetCollectionLocalIdentifier:keywordsDataFrame:progressReporter:)(void *a1, void *a2, void *a3)
{
  return sub_1CA323434(a1, a2, a3);
}

id sub_1CA322BF8(uint64_t a1, uint64_t a2, void *a3, void *a4, void *a5, uint64_t a6, uint64_t (*a7)(id, id, id))
{
  id v10;
  id v11;
  id v12;
  void *v13;

  v10 = a3;
  v11 = a4;
  v12 = a5;
  v13 = (void *)a7(v10, v11, v12);

  return v13;
}

uint64_t *static MusicMaestro.activeKeywords(for:keywordsDataFrame:progressReporter:)(uint64_t *a1)
{
  return sub_1CA3236C0(a1);
}

id MusicMaestro.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id MusicMaestro.init()()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_init);
}

id MusicMaestro.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1CA322D8C(uint64_t result, uint64_t a2)
{
  unint64_t v2;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  BOOL v17;
  uint64_t v18;
  _QWORD *v19;
  BOOL v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;

  v2 = *(_QWORD *)(result + 16);
  if (v2)
  {
    v4 = 0;
    v25 = result + 32;
    v5 = a2 + 56;
    v6 = MEMORY[0x1E0DEE9D8];
    v26 = *(_QWORD *)(result + 16);
    while (1)
    {
      v24 = v6;
      if (v4 <= v2)
        v7 = v2;
      else
        v7 = v4;
      v8 = v4;
      while (1)
      {
        if (v8 == v7)
        {
          __break(1u);
          return result;
        }
        v4 = v8 + 1;
        if (*(_QWORD *)(a2 + 16))
          break;
LABEL_8:
        v8 = v4;
        if (v4 == v2)
          return v24;
      }
      v9 = (uint64_t *)(v25 + 16 * v8);
      v11 = *v9;
      v10 = v9[1];
      sub_1CA85C368();
      swift_bridgeObjectRetain();
      sub_1CA85B4B0();
      v12 = sub_1CA85C3B0();
      v13 = -1 << *(_BYTE *)(a2 + 32);
      v14 = v12 & ~v13;
      if (((*(_QWORD *)(v5 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) == 0)
        goto LABEL_7;
      v15 = *(_QWORD *)(a2 + 48);
      v16 = (_QWORD *)(v15 + 16 * v14);
      v17 = *v16 == v11 && v16[1] == v10;
      if (!v17 && (sub_1CA85C284() & 1) == 0)
        break;
LABEL_24:
      v6 = v24;
      result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        result = sub_1CA3FB754(0, *(_QWORD *)(v24 + 16) + 1, 1);
        v6 = v24;
      }
      v22 = *(_QWORD *)(v6 + 16);
      v21 = *(_QWORD *)(v6 + 24);
      if (v22 >= v21 >> 1)
      {
        result = sub_1CA3FB754(v21 > 1, v22 + 1, 1);
        v6 = v24;
      }
      *(_QWORD *)(v6 + 16) = v22 + 1;
      v23 = v6 + 16 * v22;
      *(_QWORD *)(v23 + 32) = v11;
      *(_QWORD *)(v23 + 40) = v10;
      v2 = v26;
      if (v4 == v26)
        return v6;
    }
    v18 = ~v13;
    while (1)
    {
      v14 = (v14 + 1) & v18;
      if (((*(_QWORD *)(v5 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) == 0)
        break;
      v19 = (_QWORD *)(v15 + 16 * v14);
      v20 = *v19 == v11 && v19[1] == v10;
      if (v20 || (sub_1CA85C284() & 1) != 0)
        goto LABEL_24;
    }
LABEL_7:
    result = swift_bridgeObjectRelease();
    v2 = v26;
    goto LABEL_8;
  }
  return MEMORY[0x1E0DEE9D8];
}

id sub_1CA322FA0(void *a1, void *a2)
{
  uint64_t v2;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  void *v12;
  id v13;
  id v14;
  void *v15;
  void *v16;
  id v17;
  _BYTE *v18;
  uint64_t v19;
  id result;
  void *v21;
  void *v22;
  void *v23;
  _BYTE *v24;
  id v25;
  id v26;
  id v27;
  char *v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  id v37;
  void *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  char v45[40];
  uint64_t v46;

  v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED872DB8);
  v44 = *(_QWORD *)(v46 - 8);
  MEMORY[0x1E0C80A78](v46);
  v6 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED872DC0);
  v42 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v43 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = type metadata accessor for MaestroRanker();
  MEMORY[0x1E0C80A78](v41);
  v10 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED872F98 != -1)
    swift_once();
  sub_1CA2E4280("MusicMaestro - curateMusicForNormalizedSupportedKeywordsByAssetCollectionLocalIdentifier", 88, 2u, 0, 1, qword_1ED87D0F0, (uint64_t)v45);
  v11 = (void *)sub_1CA85BB7C();
  v13 = v12;
  v14 = objc_msgSend(a1, sel_columnLabels);
  if (!v14)
  {
    sub_1CA323918();
    swift_allocError();
    *v18 = 0;
    swift_willThrow();

LABEL_9:
    sub_1CA2E0C94(0);
    swift_release();
    swift_release();
    return v13;
  }
  v15 = v14;
  v39 = v7;
  v40 = v10;
  v38 = a1;
  v16 = v13;
  sub_1CA85B7B0();

  v17 = objc_msgSend(a2, sel_name);
  if (v17)
  {
    v13 = v17;
    sub_1CA85B534();

  }
  v19 = sub_1CA85BA74();
  if (v2)
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  v21 = (void *)v19;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!v21)
  {
    sub_1CA323918();
    swift_allocError();
    *v24 = 1;
    swift_willThrow();

    goto LABEL_9;
  }
  v22 = v11;
  sub_1CA85BB70();
  v23 = v16;
  v25 = v21;
  v26 = objc_msgSend(v25, sel_matrix);
  v27 = objc_msgSend(v26, sel_wrapper);

  v28 = v43;
  sub_1CA85A958();

  v37 = v25;
  result = objc_msgSend(v25, sel_rowLabels);
  if (result)
  {
    v29 = result;
    v30 = sub_1CA85B7B0();

    v31 = v39;
    sub_1CA85AA30();
    v32 = v46;
    v33 = sub_1CA85AA24();
    result = (id)(*(uint64_t (**)(char *, uint64_t))(v44 + 8))(v6, v32);
    v34 = (uint64_t)v40;
    if (v33 == *(_QWORD *)(v30 + 16))
    {
      (*(void (**)(char *, char *, uint64_t))(v42 + 32))(v40, v28, v31);
      v35 = v37;

      *(_QWORD *)(v34 + *(int *)(v41 + 20)) = v30;
      v13 = sub_1CA2D3428(v38);
      sub_1CA85BB70();
      sub_1CA32395C(v34);

      sub_1CA2E0C94(0);
      swift_release();
      swift_release();
      return v13;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

id sub_1CA323434(void *a1, void *a2, id a3)
{
  uint64_t v3;
  id v7;
  void *v8;
  uint64_t v9;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  void *v15;
  _BYTE *v16;
  uint64_t v17;
  void *v19;
  _BYTE *v20;
  _BYTE v21[40];

  if (qword_1ED872F98 != -1)
    swift_once();
  sub_1CA2E4280("MusicMaestro - curateMusicForNormalizedKeywordsByAssetCollectionLocalIdentifier", 79, 2u, 0, 1, qword_1ED87D0F0, (uint64_t)v21);
  v7 = objc_msgSend(a2, sel_columnLabels);
  if (!v7)
    goto LABEL_8;
  v8 = v7;
  v9 = sub_1CA85B7B0();

  v10 = objc_msgSend(a1, sel_columnLabels);
  if (!v10)
  {
    swift_bridgeObjectRelease();
LABEL_8:
    sub_1CA323918();
    swift_allocError();
    *v16 = 0;
    goto LABEL_9;
  }
  v11 = v10;
  v12 = sub_1CA85B7B0();

  v13 = sub_1CA2877D4(v12);
  swift_bridgeObjectRelease();
  sub_1CA322D8C(v9, v13);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v14 = objc_msgSend(a1, sel_name);
  if (v14)
  {
    v15 = v14;
    sub_1CA85B534();

  }
  v17 = sub_1CA85BA74();
  if (v3)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  v19 = (void *)v17;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v19)
  {
    a3 = sub_1CA322FA0(v19, a2);

    sub_1CA2E0C94(0);
    swift_release();
    swift_release();
    return a3;
  }
  sub_1CA323918();
  swift_allocError();
  *v20 = 1;
LABEL_9:
  swift_willThrow();
LABEL_12:
  sub_1CA2E0C94(0);
  swift_release();
  swift_release();
  return a3;
}

uint64_t *sub_1CA3236C0(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  _BYTE *v8;

  sub_1CA85BB64();
  if (!v1)
  {
    v3 = sub_1CA85BA50();
    if (*(_QWORD *)(v3 + 16))
    {
      v4 = *a1;
      v5 = a1[1];
      swift_bridgeObjectRetain();
      v6 = sub_1CA25081C(v4, v5);
      if ((v7 & 1) != 0)
      {
        a1 = *(uint64_t **)(*(_QWORD *)(v3 + 56) + 8 * v6);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1CA85BB70();
        return a1;
      }
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    sub_1CA85BB70();
    sub_1CA323918();
    swift_allocError();
    *v8 = 2;
    swift_willThrow();
  }
  return a1;
}

unint64_t sub_1CA3237E8()
{
  unint64_t result;

  result = qword_1EF94D680;
  if (!qword_1EF94D680)
  {
    result = MEMORY[0x1CAA4F1A4](&protocol conformance descriptor for MusicMaestro.Error, &type metadata for MusicMaestro.Error);
    atomic_store(result, (unint64_t *)&qword_1EF94D680);
  }
  return result;
}

uint64_t type metadata accessor for MusicMaestro()
{
  return objc_opt_self();
}

uint64_t storeEnumTagSinglePayload for MusicMaestro.Error(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1CA323898 + 4 * byte_1CA8DC5D5[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1CA3238CC + 4 * byte_1CA8DC5D0[v4]))();
}

uint64_t sub_1CA3238CC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CA3238D4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1CA3238DCLL);
  return result;
}

uint64_t sub_1CA3238E8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1CA3238F0);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1CA3238F4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CA3238FC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MusicMaestro.Error()
{
  return &type metadata for MusicMaestro.Error;
}

unint64_t sub_1CA323918()
{
  unint64_t result;

  result = qword_1EF94D6B0;
  if (!qword_1EF94D6B0)
  {
    result = MEMORY[0x1CAA4F1A4](&protocol conformance descriptor for MusicMaestro.Error, &type metadata for MusicMaestro.Error);
    atomic_store(result, (unint64_t *)&qword_1EF94D6B0);
  }
  return result;
}

uint64_t sub_1CA32395C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for MaestroRanker();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

id sub_1CA323998(void *a1)
{
  uint64_t v2;
  double v3;
  uint64_t v4;
  char *v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  objc_class *v17;
  char *v18;
  uint64_t *v19;
  uint64_t *v20;
  id v21;
  objc_super v23;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED871160);
  *(_QWORD *)&v3 = MEMORY[0x1E0C80A78](v2).n128_u64[0];
  v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = objc_msgSend(a1, sel_name, v3);
  if (v6)
  {
    v7 = v6;
    v8 = sub_1CA85B534();
    v10 = v9;

  }
  else
  {
    v8 = 0;
    v10 = 0;
  }
  v11 = objc_msgSend(a1, sel_localIdentifier);
  if (v11)
  {
    v12 = v11;
    v13 = sub_1CA85B534();
    v15 = v14;

  }
  else
  {
    v13 = 0;
    v15 = 0;
  }
  v16 = sub_1CA85A148();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v5, 1, 1, v16);
  v17 = (objc_class *)type metadata accessor for GraphSearchEntity();
  v18 = (char *)objc_allocWithZone(v17);
  *(_QWORD *)&v18[OBJC_IVAR___PGGraphSearchEntity_type] = 1300;
  v19 = (uint64_t *)&v18[OBJC_IVAR___PGGraphSearchEntity_label];
  *v19 = v8;
  v19[1] = v10;
  v20 = (uint64_t *)&v18[OBJC_IVAR___PGGraphSearchEntity_identifier];
  *v20 = v13;
  v20[1] = v15;
  *(_QWORD *)&v18[OBJC_IVAR___PGGraphSearchEntity_confidence] = 0;
  *(_QWORD *)&v18[OBJC_IVAR___PGGraphSearchEntity_rankingScore] = 0;
  sub_1CA3087A8((uint64_t)v5, (uint64_t)&v18[OBJC_IVAR___PGGraphSearchEntity_dateInterval]);
  *(_QWORD *)&v18[OBJC_IVAR___PGGraphSearchEntity_synonyms] = MEMORY[0x1E0DEE9D8];
  v23.receiver = v18;
  v23.super_class = v17;
  v21 = objc_msgSendSuper2(&v23, sel_init);
  sub_1CA308A00((uint64_t)v5);
  return v21;
}

id sub_1CA323B6C(void *a1)
{
  uint64_t v2;
  double v3;
  uint64_t v4;
  char *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  objc_class *v15;
  char *v16;
  uint64_t *v17;
  uint64_t *v18;
  id v19;
  objc_super v21;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED871160);
  *(_QWORD *)&v3 = MEMORY[0x1E0C80A78](v2).n128_u64[0];
  v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = objc_msgSend(a1, sel_name, v3);
  v7 = sub_1CA85B534();
  v9 = v8;

  v10 = objc_msgSend(a1, sel_localIdentifier);
  v11 = sub_1CA85B534();
  v13 = v12;

  v14 = sub_1CA85A148();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v5, 1, 1, v14);
  v15 = (objc_class *)type metadata accessor for GraphSearchEntity();
  v16 = (char *)objc_allocWithZone(v15);
  *(_QWORD *)&v16[OBJC_IVAR___PGGraphSearchEntity_type] = 1330;
  v17 = (uint64_t *)&v16[OBJC_IVAR___PGGraphSearchEntity_label];
  *v17 = v7;
  v17[1] = v9;
  v18 = (uint64_t *)&v16[OBJC_IVAR___PGGraphSearchEntity_identifier];
  *v18 = v11;
  v18[1] = v13;
  *(_QWORD *)&v16[OBJC_IVAR___PGGraphSearchEntity_confidence] = 0;
  *(_QWORD *)&v16[OBJC_IVAR___PGGraphSearchEntity_rankingScore] = 0;
  sub_1CA3087A8((uint64_t)v5, (uint64_t)&v16[OBJC_IVAR___PGGraphSearchEntity_dateInterval]);
  *(_QWORD *)&v16[OBJC_IVAR___PGGraphSearchEntity_synonyms] = MEMORY[0x1E0DEE9D8];
  v21.receiver = v16;
  v21.super_class = v15;
  v19 = objc_msgSendSuper2(&v21, sel_init);
  sub_1CA308A00((uint64_t)v5);
  return v19;
}

uint64_t DataSampler.data.getter()
{
  return swift_bridgeObjectRetain();
}

void DataSampler.samplingPolicy.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 24);
}

uint64_t DataSampler.positivesOversamplingFactor.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 32);
}

uint64_t DataSampler.negativesOversamplingFactor.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 40);
}

uint64_t DataSampler.__allocating_init(_:samplingPolicy:positivesOversamplingFactor:negativesOversamplingFactor:)(uint64_t a1, char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;

  v8 = swift_allocObject();
  DataSampler.init(_:samplingPolicy:positivesOversamplingFactor:negativesOversamplingFactor:)(a1, a2, a3, a4);
  return v8;
}

{
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;

  v6 = *a2;
  sub_1CA85B870();
  v7 = sub_1CA85B444();
  MEMORY[0x1CAA4F1A4](MEMORY[0x1E0DE9F98], v7);
  v8 = sub_1CA85B87C();
  v9 = swift_allocObject();
  result = sub_1CA85B15C();
  if (a3 < 1 || a4 <= 0)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v9 + 16) = v8;
    *(_BYTE *)(v9 + 24) = v6;
    *(_QWORD *)(v9 + 32) = a3;
    *(_QWORD *)(v9 + 40) = a4;
    return v9;
  }
  return result;
}

uint64_t DataSampler.init(_:samplingPolicy:positivesOversamplingFactor:negativesOversamplingFactor:)(uint64_t a1, char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  char v8;
  uint64_t result;

  v8 = *a2;
  result = sub_1CA85B15C();
  if (a3 < 1 || a4 < 1)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v4 + 16) = a1;
    *(_BYTE *)(v4 + 24) = v8;
    *(_QWORD *)(v4 + 32) = a3;
    *(_QWORD *)(v4 + 40) = a4;
    return v4;
  }
  return result;
}

BOOL static DataSampler.SamplingPolicy.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t DataSampler.SamplingPolicy.hash(into:)()
{
  return sub_1CA85C374();
}

uint64_t DataSampler.SamplingPolicy.hashValue.getter()
{
  sub_1CA85C368();
  sub_1CA85C374();
  return sub_1CA85C3B0();
}

uint64_t sub_1CA323F9C()
{
  sub_1CA85C368();
  DataSampler.SamplingPolicy.hash(into:)();
  return sub_1CA85C3B0();
}

uint64_t sub_1CA323FD4(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _OWORD v9[2];
  uint64_t v10;
  uint64_t v11;

  v2 = *v1;
  v11 = v1[2];
  v9[1] = *(_OWORD *)(v2 + 80);
  v10 = a1;
  v3 = (char *)sub_1CA85B870();
  v4 = sub_1CA85B870();
  swift_bridgeObjectRetain();
  v5 = MEMORY[0x1CAA4F1A4](MEMORY[0x1E0DEAF50], v4);
  v7 = sub_1CA396D50((void (*)(char *, char *))sub_1CA326484, (uint64_t)v9, v4, v3, MEMORY[0x1E0DEDCE8], v5, MEMORY[0x1E0DEDD18], v6);
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_1CA324090@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1CA85B870();
  swift_bridgeObjectRetain();
  MEMORY[0x1CAA4F1A4](MEMORY[0x1E0DEAF60], v2);
  result = sub_1CA85BF3C();
  *a1 = result;
  return result;
}

uint64_t sub_1CA324118()
{
  uint64_t v0;

  v0 = sub_1CA85B870();
  MEMORY[0x1CAA4F1A4](MEMORY[0x1E0DEAF38], v0);
  return sub_1CA85B72C() & 1;
}

uint64_t sub_1CA324190(uint64_t a1, uint64_t a2, float (*a3)(uint64_t, char *), uint64_t a4)
{
  _QWORD *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t TupleTypeMetadata2;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  float v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t result;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  char *v43;
  void (*v44)(char *, char *, uint64_t);
  void (*v45)(char *, uint64_t);
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  float (*v62)(uint64_t, char *);
  uint64_t v63;
  char *v64;
  int v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;

  v62 = a3;
  v63 = a4;
  v68 = a1;
  v6 = *v4;
  v7 = *(_QWORD *)(*v4 + 80);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  MEMORY[0x1E0C80A78](TupleTypeMetadata2);
  v58 = (char *)&v52 - v9;
  v57 = sub_1CA85BCCC();
  v56 = *(_QWORD *)(v57 - 8);
  v10 = MEMORY[0x1E0C80A78](v57);
  v61 = (uint64_t)&v52 - v11;
  v67 = *(_QWORD *)(v7 - 8);
  v12 = MEMORY[0x1E0C80A78](v10);
  v55 = (char *)&v52 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v52 - v14;
  v54 = sub_1CA85AB98();
  v53 = *(_QWORD *)(v54 - 8);
  MEMORY[0x1E0C80A78](v54);
  v60 = (uint64_t)&v52 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v69 = TupleTypeMetadata2;
  v17 = sub_1CA85B3E4();
  v70 = v4;
  v18 = v4[2];
  v72 = v18;
  v73 = v17;
  if (a2)
  {
    swift_bridgeObjectRetain();
    v19 = sub_1CA323FD4(a2);
    v20 = swift_bridgeObjectRelease();
    v72 = v19;
    v18 = v19;
  }
  else
  {
    v20 = swift_bridgeObjectRetain();
  }
  v71 = v18;
  MEMORY[0x1E0C80A78](v20);
  v21 = *(_QWORD *)(v6 + 88);
  *(&v52 - 2) = v7;
  *(&v52 - 1) = v21;
  v66 = v21;
  v22 = sub_1CA85B870();
  v23 = sub_1CA85B870();
  swift_bridgeObjectRetain();
  MEMORY[0x1CAA4F1A4](MEMORY[0x1E0DEAF60], v23);
  v59 = v23;
  v24 = sub_1CA85BF3C();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v72 = v24;
  if (!MEMORY[0x1CAA4D6A4](v24, v22))
  {
    swift_bridgeObjectRelease_n();
    return v73;
  }
  v25 = v60;
  sub_1CA325054(v24, v60);
  swift_bridgeObjectRelease();
  v26 = swift_bridgeObjectRetain();
  v27 = MEMORY[0x1CAA4D6A4](v26, v22);
  swift_bridgeObjectRelease();
  if (v27 < 1
    || (v28 = swift_bridgeObjectRetain(), v29 = MEMORY[0x1CAA4D6A4](v28, v69), swift_bridgeObjectRelease(), v29 >= v68))
  {
LABEL_22:
    (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v25, v54);
    v51 = v73;
    swift_bridgeObjectRelease();
    return v51;
  }
  v65 = *((unsigned __int8 *)v70 + 24);
  v64 = (char *)v70 + qword_1EF94D6B8;
  while (1)
  {
    if ((v65 & 1) != 0)
    {
      swift_beginAccess();
      v30 = (float)((float)sub_1CA32602C(16777217) * 0.000000059605) + 0.0;
      swift_endAccess();
      sub_1CA326100(v30);
    }
    else
    {
      v31 = swift_bridgeObjectRetain();
      v32 = MEMORY[0x1CAA4D6A4](v31, v22);
      result = swift_bridgeObjectRelease();
      if ((v32 & 0x8000000000000000) != 0)
        goto LABEL_27;
      result = swift_beginAccess();
      if (!v32)
        goto LABEL_28;
      sub_1CA325F98(v32);
      swift_endAccess();
    }
    sub_1CA85B894();
    v34 = v71;
    result = MEMORY[0x1CAA4D6A4](v71, v7);
    if (result < 0)
      break;
    v35 = result;
    result = swift_beginAccess();
    if (!v35)
      goto LABEL_26;
    sub_1CA325F98(v35);
    swift_endAccess();
    v36 = sub_1CA85B894();
    v71 = v34;
    MEMORY[0x1E0C80A78](v36);
    v37 = v66;
    *(&v52 - 4) = v7;
    *(&v52 - 3) = v37;
    *(&v52 - 2) = (uint64_t)v15;
    MEMORY[0x1CAA4F1A4](MEMORY[0x1E0DEAF60], v22);
    v38 = sub_1CA85BF3C();
    if (MEMORY[0x1CAA4D6A4](v38, v7) < 1)
    {
      swift_bridgeObjectRelease();
      sub_1CA85B858();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v67 + 8))(v15, v7);
    }
    else
    {
      v39 = v61;
      sub_1CA325284((uint64_t)v15, v38, v62, v63, v61);
      swift_bridgeObjectRelease();
      v40 = v67;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v67 + 48))(v39, 1, v7) == 1)
      {
        (*(void (**)(char *, uint64_t))(v40 + 8))(v15, v7);
        (*(void (**)(uint64_t, uint64_t))(v56 + 8))(v39, v57);
      }
      else
      {
        v41 = v15;
        v42 = v55;
        (*(void (**)(char *, uint64_t, uint64_t))(v40 + 32))(v55, v39, v7);
        v43 = &v58[*(int *)(v69 + 48)];
        v44 = *(void (**)(char *, char *, uint64_t))(v40 + 16);
        v44(v58, v41, v7);
        v44(v43, v42, v7);
        sub_1CA85B870();
        sub_1CA85B84C();
        v45 = *(void (**)(char *, uint64_t))(v40 + 8);
        v46 = v42;
        v15 = v41;
        v25 = v60;
        v45(v46, v7);
        v45(v15, v7);
      }
    }
    v47 = swift_bridgeObjectRetain();
    v48 = MEMORY[0x1CAA4D6A4](v47, v22);
    swift_bridgeObjectRelease();
    if (v48 >= 1)
    {
      v49 = swift_bridgeObjectRetain();
      v50 = MEMORY[0x1CAA4D6A4](v49, v69);
      swift_bridgeObjectRelease();
      if (v50 < v68)
        continue;
    }
    goto LABEL_22;
  }
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_1CA324824(uint64_t a1, uint64_t a2, float (*a3)(uint64_t, char *), uint64_t a4)
{
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t TupleTypeMetadata2;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  float v30;
  uint64_t v31;
  uint64_t result;
  unint64_t v33;
  unint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  void (*v51)(char *, char *, uint64_t);
  void (*v52)(char *, uint64_t);
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  float (*v64)(uint64_t, char *);
  uint64_t v65;
  uint64_t v66;
  int v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;

  v64 = a3;
  v65 = a4;
  v70 = a1;
  v6 = *v4;
  v7 = *(_QWORD *)(*v4 + 80);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  MEMORY[0x1E0C80A78](TupleTypeMetadata2);
  v10 = (char *)&v56 - v9;
  v59 = sub_1CA85BCCC();
  v11 = *(_QWORD *)(v59 - 8);
  v12 = MEMORY[0x1E0C80A78](v59);
  v63 = (uint64_t)&v56 - v13;
  v74 = *(_QWORD *)(v7 - 8);
  v14 = MEMORY[0x1E0C80A78](v12);
  v58 = (char *)&v56 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v56 - v16;
  v62 = sub_1CA85AB98();
  v61 = *(_QWORD *)(v62 - 8);
  v18 = MEMORY[0x1E0C80A78](v62);
  v60 = (uint64_t)&v56 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v71 = (uint64_t)&v56 - v20;
  v72 = TupleTypeMetadata2;
  v79 = sub_1CA85B3E4();
  if (a2)
    v21 = sub_1CA323FD4(a2);
  else
    v21 = swift_bridgeObjectRetain();
  v77 = v21;
  MEMORY[0x1E0C80A78](v21);
  v22 = *(_QWORD *)(v6 + 88);
  *(&v56 - 2) = v7;
  *(&v56 - 1) = v22;
  v69 = v22;
  v23 = sub_1CA85B870();
  v24 = sub_1CA85B870();
  MEMORY[0x1CAA4F1A4](MEMORY[0x1E0DEAF60], v24);
  v25 = v24;
  v26 = sub_1CA85BF3C();
  if (MEMORY[0x1CAA4D6A4](v26, v23) < 2)
  {
    swift_bridgeObjectRelease();
    return v79;
  }
  v57 = v10;
  sub_1CA325054(v26, v71);
  if (MEMORY[0x1CAA4D6A4](v26, v23) < 1
    || (v27 = swift_bridgeObjectRetain(), v28 = MEMORY[0x1CAA4D6A4](v27, v72), swift_bridgeObjectRelease(), v28 >= v70))
  {
LABEL_24:
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v61 + 8))(v71, v62);
    return v79;
  }
  v56 = v11;
  v68 = v75 + qword_1EF94D6B8;
  v67 = *(unsigned __int8 *)(v75 + 24);
  v29 = v69;
  v66 = v24;
  while (1)
  {
    v78 = v26;
    if ((v67 & 1) != 0)
    {
      swift_beginAccess();
      swift_bridgeObjectRetain();
      v30 = (float)((float)sub_1CA32602C(16777217) * 0.000000059605) + 0.0;
      swift_endAccess();
      sub_1CA326100(v30);
    }
    else
    {
      v31 = swift_bridgeObjectRetain();
      result = MEMORY[0x1CAA4D6A4](v31, v23);
      if (result < 0)
        goto LABEL_28;
      v33 = result;
      result = swift_beginAccess();
      if (!v33)
        goto LABEL_29;
      sub_1CA325F98(v33);
      swift_endAccess();
    }
    sub_1CA85B858();
    result = MEMORY[0x1CAA4D6A4](v77, v7);
    if (result < 0)
      break;
    v34 = result;
    result = swift_beginAccess();
    if (!v34)
      goto LABEL_27;
    v73 = v26;
    sub_1CA325F98(v34);
    swift_endAccess();
    sub_1CA85B894();
    swift_bridgeObjectRelease();
    v35 = v17;
    v77 = v78;
    MEMORY[0x1E0C80A78](v78);
    *(&v56 - 4) = v7;
    *(&v56 - 3) = v29;
    v36 = v29;
    *(&v56 - 2) = (uint64_t)v17;
    swift_bridgeObjectRetain();
    MEMORY[0x1CAA4F1A4](MEMORY[0x1E0DEAF38], v25);
    v37 = sub_1CA85B6E4();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v78 = v37;
    v38 = swift_bridgeObjectRetain();
    v39 = MEMORY[0x1CAA4D6A4](v38, v23);
    v40 = swift_bridgeObjectRelease();
    if (v39 < 1)
    {
      v76 = v73;
      MEMORY[0x1E0C80A78](v40);
      *(&v56 - 4) = v7;
      *(&v56 - 3) = v36;
      v29 = v36;
      *(&v56 - 2) = (uint64_t)v17;
      v43 = sub_1CA85B6E4();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v44 = v60;
      sub_1CA325054(v43, v60);
      v45 = v61;
      v46 = v71;
      v47 = v62;
      (*(void (**)(uint64_t, uint64_t))(v61 + 8))(v71, v62);
      (*(void (**)(char *, uint64_t))(v74 + 8))(v35, v7);
      v48 = v46;
      v26 = v43;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v45 + 32))(v48, v44, v47);
      v17 = v35;
    }
    else
    {
      v41 = v63;
      sub_1CA325728((uint64_t)v17, &v78, v64, v65, v63);
      swift_bridgeObjectRelease();
      v42 = v74;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v74 + 48))(v41, 1, v7) == 1)
      {
        (*(void (**)(char *, uint64_t))(v42 + 8))(v17, v7);
        (*(void (**)(uint64_t, uint64_t))(v56 + 8))(v41, v59);
      }
      else
      {
        v49 = v58;
        (*(void (**)(char *, uint64_t, uint64_t))(v42 + 32))(v58, v41, v7);
        v50 = &v57[*(int *)(v72 + 48)];
        v51 = *(void (**)(char *, char *, uint64_t))(v74 + 16);
        v51(v57, v35, v7);
        v51(v50, v49, v7);
        sub_1CA85B870();
        sub_1CA85B84C();
        v52 = *(void (**)(char *, uint64_t))(v74 + 8);
        v53 = v49;
        v17 = v35;
        v52(v53, v7);
        v52(v35, v7);
      }
      v29 = v69;
      v26 = v73;
    }
    if (MEMORY[0x1CAA4D6A4](v26, v23) >= 1)
    {
      v54 = swift_bridgeObjectRetain();
      v55 = MEMORY[0x1CAA4D6A4](v54, v72);
      swift_bridgeObjectRelease();
      v25 = v66;
      if (v55 < v70)
        continue;
    }
    goto LABEL_24;
  }
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_1CA324F94@<X0>(uint64_t a1@<X2>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  v4 = sub_1CA85B870();
  swift_bridgeObjectRetain();
  MEMORY[0x1CAA4F1A4](MEMORY[0x1E0DEAF60], v4);
  v5 = sub_1CA85BF3C();
  result = MEMORY[0x1CAA4D6A4](v5, a1);
  if (result < 1)
  {
    result = swift_bridgeObjectRelease();
    v5 = 0;
  }
  *a2 = v5;
  return result;
}

uint64_t sub_1CA325054@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  float v15;
  uint64_t i;
  uint64_t v17;
  _BYTE v19[16];
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v5 = *v2;
  v6 = sub_1CA85AB98();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = &v19[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v24 = a1;
  v20 = *(_OWORD *)(v5 + 80);
  v10 = v20;
  v11 = sub_1CA85B870();
  v12 = sub_1CA85B870();
  swift_bridgeObjectRetain();
  MEMORY[0x1CAA4F1A4](MEMORY[0x1E0DEAF60], v12);
  v13 = sub_1CA85BF3C();
  v14 = MEMORY[0x1CAA4D6A4](v13, v11);
  v15 = 0.0;
  sub_1CA85AB80();
  if (v14 < 1)
  {
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t, _BYTE *, uint64_t))(v7 + 32))(a2, v9, v6);
  }
  else
  {
    v24 = v13;
    MEMORY[0x1CAA4F1A4](MEMORY[0x1E0DEAF38], v12);
    sub_1CA85B6F0();
    swift_bridgeObjectRelease();
    v23 = v21;
    sub_1CA85C080();
    sub_1CA85C05C();
    sub_1CA85C074();
    sub_1CA85C068();
    for (i = v22; v22; i = v22)
    {
      v17 = MEMORY[0x1CAA4D6A4](i, v10);
      swift_bridgeObjectRelease();
      v15 = v15 + (float)v17;
      sub_1CA85ABBC();
      sub_1CA85C068();
    }
    swift_bridgeObjectRelease();
    sub_1CA85AB2C();
    return (*(uint64_t (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v6);
  }
}

uint64_t sub_1CA325284@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, float (*a3)(uint64_t, char *)@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  _QWORD *v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  float v30;
  float v31;
  float v32;
  uint64_t v33;
  int64_t v34;
  void (*v35)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  float (*v40)(uint64_t, char *);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;

  v41 = a4;
  v39 = a1;
  v9 = *(_QWORD *)(*v5 + 80);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](a1);
  v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1CA85BCCC();
  v37 = *(_QWORD *)(v13 - 8);
  v38 = v13;
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v33 - v14;
  v35 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56);
  v35((char *)&v33 - v14, 1, 1, v9);
  v40 = a3;
  if (!a3 || (v16 = v5[4], v16 < 2))
  {
    result = MEMORY[0x1CAA4D6A4](a2, v9);
    if ((result & 0x8000000000000000) == 0)
    {
      v23 = result;
      result = swift_beginAccess();
      if (v23)
      {
        sub_1CA325F98(v23);
        swift_endAccess();
        sub_1CA85B894();
        (*(void (**)(char *, uint64_t))(v37 + 8))(v15, v38);
        return ((uint64_t (*)(uint64_t, _QWORD, uint64_t, uint64_t))v35)(a5, 0, 1, v9);
      }
      goto LABEL_24;
    }
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  swift_retain();
  result = MEMORY[0x1CAA4D6A4](a2, v9);
  v33 = a5;
  if (v16 < result)
  {
    v42 = a2;
    swift_beginAccess();
    v18 = sub_1CA85B870();
    sub_1CA85B168();
    MEMORY[0x1CAA4F1A4](MEMORY[0x1E0DEAF38], v18);
    sub_1CA326404();
    v19 = sub_1CA85B720();
    swift_endAccess();
    v42 = v19;
    MEMORY[0x1CAA4F1A4](MEMORY[0x1E0DEAF50], v18);
    sub_1CA85BA38();
    v20 = v43;
    v22 = v44;
    v21 = v45;
LABEL_10:
    swift_unknownObjectRetain();
    v27 = sub_1CA85BD68();
    v28 = sub_1CA85BD80();
    v36 = v27;
    if (v27 == v28)
    {
LABEL_14:
      swift_unknownObjectRelease_n();
      sub_1CA2EAF88((uint64_t)v40);
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v37 + 32))(v33, v15, v38);
    }
    result = sub_1CA85BD74();
    if (v36 >= v22)
    {
      v34 = v21 >> 1;
      if ((uint64_t)(v21 >> 1) > v36)
      {
        v29 = v36 + 1;
        (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v20 + *(_QWORD *)(v10 + 72) * v36, v9);
        v30 = v40(v39, v12);
        (*(void (**)(char *, uint64_t))(v37 + 8))(v15, v38);
        (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v15, v12, v9);
        v35(v15, 0, 1, v9);
        if (v29 == sub_1CA85BD80())
          goto LABEL_14;
        while (1)
        {
          result = sub_1CA85BD74();
          if (v36 < v22 || v34 <= v29)
            break;
          (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v20 + *(_QWORD *)(v10 + 72) * v29, v9);
          v31 = v40(v39, v12);
          if (v30 < v31)
          {
            (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
          }
          else
          {
            v32 = v31;
            (*(void (**)(char *, uint64_t))(v37 + 8))(v15, v38);
            (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v15, v12, v9);
            v35(v15, 0, 1, v9);
            v30 = v32;
          }
          if (++v29 == sub_1CA85BD80())
            goto LABEL_14;
        }
      }
    }
    __break(1u);
    goto LABEL_23;
  }
  if ((result & 0x8000000000000000) == 0)
  {
    sub_1CA85B888();
    v20 = v24;
    v22 = v25;
    v21 = v26;
    goto LABEL_10;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_1CA325728@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, float (*a3)(uint64_t, char *)@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  _QWORD *v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t (*v19)(void);
  uint64_t result;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  int v24;
  int v25;
  float v26;
  float v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t i;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  float v40;
  float v41;
  int64_t v42;
  float v43;
  float v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  unint64_t v48;
  char *v49;
  uint64_t v50;
  float v51;
  uint64_t *v52;
  char *v53;
  double (*v54)(char *, uint64_t);
  double v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t (*v64)(void);
  _QWORD *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t *v71;
  float (*v72)(uint64_t, char *);
  int v73;
  uint64_t v74;
  int v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  int v81;
  uint64_t v82;

  v76 = a1;
  v10 = *(_QWORD *)(*v5 + 80);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x1E0C80A78](a1);
  v61 = (char *)&v60 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v79 = (char *)&v60 - v14;
  v63 = sub_1CA85AB98();
  v62 = *(_QWORD *)(v63 - 8);
  MEMORY[0x1E0C80A78](v63);
  v16 = (char *)&v60 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v68 = sub_1CA85BCCC();
  v67 = *(_QWORD *)(v68 - 8);
  MEMORY[0x1E0C80A78](v68);
  v18 = (char *)&v60 - v17;
  v77 = v11;
  v19 = *(uint64_t (**)(void))(v11 + 56);
  v66 = v18;
  v64 = v19;
  result = v19();
  v65 = v5;
  v21 = v5[5];
  if ((v21 & 0x8000000000000000) == 0)
  {
    v60 = a5;
    if (!v21)
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v67 + 32))(v60, v66, v68);
    v22 = 0;
    v75 = *((unsigned __int8 *)v65 + 24);
    if (a3)
      v23 = v21 == 1;
    else
      v23 = 1;
    v24 = !v23;
    v73 = v24;
    v25 = 1;
    v26 = 0.0;
    v71 = a2;
    v72 = a3;
    v69 = v21;
    v70 = v16;
    v74 = v10;
    v78 = a4;
    while (v22 != v21)
    {
      v81 = v25;
      v80 = v22;
      if ((v75 & 1) != 0)
      {
        v30 = swift_bridgeObjectRetain();
        sub_1CA325054(v30, (uint64_t)v16);
        swift_bridgeObjectRelease();
        swift_beginAccess();
        sub_1CA85B168();
        sub_1CA326404();
        for (i = 16777217 * sub_1CA85B48C();
              i < 0xFFFF01;
        swift_endAccess();
        result = sub_1CA85AB50();
        v39 = result - 1;
        if (__OFSUB__(result, 1))
          goto LABEL_62;
        if (v39 < 0)
        {
          v36 = 0;
        }
        else
        {
          v40 = (float)((float)(i >> 32) * 0.000000059605) + 0.0;
          v36 = (unint64_t)v39 >> 1;
          sub_1CA85ABB0();
          if (v41 != v40)
          {
            v42 = 0;
            while (1)
            {
              result = sub_1CA85ABB0();
              if (v43 >= v40)
              {
                v39 = v36 - 1;
                if (__OFSUB__(v36, 1))
                  goto LABEL_59;
              }
              else
              {
                v42 = v36 + 1;
                if (__OFADD__(v36, 1))
                  goto LABEL_58;
              }
              if (v39 < v42)
              {
                v36 = v42;
                goto LABEL_40;
              }
              if (__OFSUB__(v39, v42))
                break;
              v36 = v42 + (v39 - v42) / 2;
              if (__OFADD__(v42, (v39 - v42) / 2))
                goto LABEL_54;
              sub_1CA85ABB0();
              if (v44 == v40)
                goto LABEL_40;
            }
            __break(1u);
LABEL_54:
            __break(1u);
            break;
          }
        }
LABEL_40:
        (*(void (**)(char *, uint64_t))(v62 + 8))(v16, v63);
      }
      else
      {
        v32 = sub_1CA85B870();
        v33 = swift_bridgeObjectRetain();
        v34 = MEMORY[0x1CAA4D6A4](v33, v32);
        result = swift_bridgeObjectRelease();
        if ((v34 & 0x8000000000000000) != 0)
          goto LABEL_60;
        result = swift_beginAccess();
        if (!v34)
          goto LABEL_61;
        sub_1CA85B168();
        sub_1CA326404();
        v35 = sub_1CA85B48C();
        v36 = ((unint64_t)v35 * (unsigned __int128)v34) >> 64;
        if (v34 > v35 * v34)
        {
          v37 = -(uint64_t)v34 % v34;
          if (v37 > v35 * v34)
          {
            do
              v38 = sub_1CA85B48C();
            while (v37 > v38 * v34);
            v36 = ((unint64_t)v38 * (unsigned __int128)v34) >> 64;
          }
        }
        swift_endAccess();
      }
      v45 = sub_1CA85B870();
      sub_1CA85B894();
      result = MEMORY[0x1CAA4D6A4](v82, v10);
      if (result < 0)
        goto LABEL_56;
      v46 = result;
      result = swift_beginAccess();
      if (!v46)
        goto LABEL_57;
      sub_1CA85B168();
      sub_1CA326404();
      v47 = sub_1CA85B48C();
      if (v46 > v47 * v46)
      {
        v48 = -(uint64_t)v46 % v46;
        if (v48 > v47 * v46)
        {
          while (v48 > sub_1CA85B48C() * v46)
            ;
        }
      }
      swift_endAccess();
      v49 = v79;
      v10 = v74;
      sub_1CA85B894();
      swift_bridgeObjectRelease();
      if (!v73)
      {
        (*(void (**)(char *, uint64_t))(v67 + 8))(v66, v68);
        v59 = v60;
        (*(void (**)(uint64_t, char *, uint64_t))(v77 + 32))(v60, v49, v10);
        return ((uint64_t (*)(uint64_t, _QWORD, uint64_t, uint64_t))v64)(v59, 0, 1, v10);
      }
      swift_retain();
      v50 = (uint64_t)v72;
      v51 = v72(v76, v49);
      if (v81 & 1 | (v51 >= v26))
      {
        v27 = v51;
        v28 = v66;
        (*(void (**)(char *, uint64_t))(v67 + 8))(v66, v68);
        sub_1CA2EAF88(v50);
        (*(void (**)(char *, char *, uint64_t))(v77 + 32))(v28, v49, v10);
        result = ((uint64_t (*)(char *, _QWORD, uint64_t, uint64_t))v64)(v28, 0, 1, v10);
        v26 = v27;
        v16 = v70;
        v21 = v69;
        v29 = v80;
      }
      else
      {
        sub_1CA85B870();
        v52 = v71;
        sub_1CA85B804();
        sub_1CA325F48(v36, *v52);
        v53 = v61;
        sub_1CA85B858();
        v54 = *(double (**)(char *, uint64_t))(v77 + 8);
        v55 = v54(v53, v10);
        GEOLocationCoordinate2DMake(v55);
        sub_1CA85B894();
        v56 = MEMORY[0x1CAA4D6A4](v82, v10);
        swift_bridgeObjectRelease();
        if (!v56)
        {
          sub_1CA85B858();
          swift_bridgeObjectRelease();
        }
        v57 = swift_bridgeObjectRetain();
        v58 = MEMORY[0x1CAA4D6A4](v57, v45);
        sub_1CA2EAF88(v50);
        swift_bridgeObjectRelease();
        result = ((uint64_t (*)(char *, uint64_t))v54)(v79, v10);
        v21 = v69;
        v16 = v70;
        v29 = v80;
        if (!v58)
          return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v67 + 32))(v60, v66, v68);
      }
      v25 = 0;
      v22 = v29 + 1;
      if (v22 == v21)
        return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v67 + 32))(v60, v66, v68);
    }
    __break(1u);
LABEL_56:
    __break(1u);
LABEL_57:
    __break(1u);
LABEL_58:
    __break(1u);
LABEL_59:
    __break(1u);
LABEL_60:
    __break(1u);
LABEL_61:
    __break(1u);
LABEL_62:
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t DataSampler.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_bridgeObjectRelease();
  v1 = v0 + qword_1EF94D6B8;
  v2 = sub_1CA85B168();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t DataSampler.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_bridgeObjectRelease();
  v1 = v0 + qword_1EF94D6B8;
  v2 = sub_1CA85B168();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_1CA325F48(unint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = _swift_isClassOrObjCExistentialType();
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_7:
    __break(1u);
    return result;
  }
  v5 = a2 & 0xFFFFFFFFFFFFF8;
  if ((result & 1) == 0)
    v5 = a2;
  if (*(_QWORD *)(v5 + 16) <= a1)
    goto LABEL_7;
  return result;
}

unint64_t sub_1CA325F98(unint64_t result)
{
  unint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;

  if (result)
  {
    v1 = result;
    sub_1CA85B168();
    sub_1CA326404();
    v2 = sub_1CA85B48C();
    v3 = v2 * v1;
    result = ((unint64_t)v2 * (unsigned __int128)v1) >> 64;
    if (v3 < v1)
    {
      v4 = -(uint64_t)v1 % v1;
      if (v4 > v3)
      {
        do
          v5 = sub_1CA85B48C();
        while (v4 > v5 * v1);
        return ((unint64_t)v5 * (unsigned __int128)v1) >> 64;
      }
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1CA32602C(uint64_t result)
{
  unsigned int v1;
  unsigned int v2;
  unint64_t v3;
  unsigned int v4;
  int64_t v5;

  if ((_DWORD)result)
  {
    v1 = result;
    v2 = result;
    sub_1CA85B168();
    sub_1CA326404();
    v3 = sub_1CA85B48C() * (unint64_t)v2;
    result = HIDWORD(v3);
    if (v3 < v1)
    {
      v4 = -v1 % v1;
      if (v4 > v3)
      {
        do
          v5 = sub_1CA85B48C() * (unint64_t)v2;
        while (v4 > v5);
        return v5 >> 32;
      }
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

BOOL sub_1CA3260CC(_QWORD *a1)
{
  uint64_t v1;

  return MEMORY[0x1CAA4D6A4](*a1, *(_QWORD *)(v1 + 16)) > 1;
}

uint64_t sub_1CA326100(float a1)
{
  uint64_t result;
  uint64_t v3;
  unint64_t v4;
  float v5;
  uint64_t v6;
  float v7;
  float v8;

  result = sub_1CA85AB50();
  v3 = result - 1;
  if (!__OFSUB__(result, 1))
  {
    if (v3 < 0)
      return 0;
    v4 = (unint64_t)v3 >> 1;
    sub_1CA85ABB0();
    if (v5 != a1)
    {
      v6 = 0;
      while (1)
      {
        result = sub_1CA85ABB0();
        if (v7 >= a1)
        {
          v3 = v4 - 1;
          if (__OFSUB__(v4, 1))
            goto LABEL_21;
        }
        else
        {
          v6 = v4 + 1;
          if (__OFADD__(v4, 1))
            goto LABEL_20;
        }
        if (v3 < v6)
          return v6;
        if (__OFSUB__(v3, v6))
          break;
        v4 = v6 + (v3 - v6) / 2;
        if (__OFADD__(v6, (v3 - v6) / 2))
          goto LABEL_19;
        sub_1CA85ABB0();
        if (v8 == a1)
          return v4;
      }
      __break(1u);
LABEL_19:
      __break(1u);
LABEL_20:
      __break(1u);
LABEL_21:
      __break(1u);
      goto LABEL_22;
    }
    return v4;
  }
LABEL_22:
  __break(1u);
  return result;
}

BOOL sub_1CA3261D0()
{
  return sub_1CA32644C();
}

BOOL sub_1CA3261E8(_QWORD *a1)
{
  uint64_t v1;

  return MEMORY[0x1CAA4D6A4](*a1, *(_QWORD *)(v1 + 16)) > 0;
}

uint64_t sub_1CA32621C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_1CA324F94(*(_QWORD *)(v1 + 16), a1);
}

void sub_1CA326240()
{
  JUMPOUT(0x1CAA4F1A4);
}

uint64_t sub_1CA326250()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1CA85B168();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t type metadata accessor for DataSampler(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for DataSampler);
}

uint64_t method lookup function for DataSampler()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DataSampler.__allocating_init(_:samplingPolicy:positivesOversamplingFactor:negativesOversamplingFactor:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 160))();
}

uint64_t dispatch thunk of DataSampler.samplePositives(_:intersecting:distanceBetween:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
}

uint64_t dispatch thunk of DataSampler.sampleNegatives(_:intersecting:distanceBetween:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 184))();
}

uint64_t dispatch thunk of DataSampler.binarySearch(_:for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 192))();
}

uint64_t dispatch thunk of DataSampler.cumulativeDistributionFunction(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 200))();
}

uint64_t sub_1CA326334()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_1CA32633C(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1CA326388 + 4 * byte_1CA8DC6CD[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1CA3263BC + 4 * byte_1CA8DC6C8[v4]))();
}

uint64_t sub_1CA3263BC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CA3263C4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1CA3263CCLL);
  return result;
}

uint64_t sub_1CA3263D8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1CA3263E0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1CA3263E4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CA3263EC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t type metadata accessor for DataSampler.SamplingPolicy(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for DataSampler.SamplingPolicy);
}

unint64_t sub_1CA326404()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF94D7C0;
  if (!qword_1EF94D7C0)
  {
    v1 = sub_1CA85B168();
    result = MEMORY[0x1CAA4F1A4](MEMORY[0x1E0D77D00], v1);
    atomic_store(result, (unint64_t *)&qword_1EF94D7C0);
  }
  return result;
}

BOOL sub_1CA32644C()
{
  return (sub_1CA85B504() & 1) == 0;
}

uint64_t sub_1CA326484@<X0>(uint64_t *a1@<X8>)
{
  return sub_1CA324090(a1);
}

uint64_t sub_1CA3264A4()
{
  return sub_1CA324118() & 1;
}

BOOL sub_1CA3264C4(_QWORD *a1)
{
  return sub_1CA3261E8(a1);
}

uint64_t sub_1CA3264DC(uint64_t a1)
{
  sub_1CA85B870();
  return a1;
}

_QWORD *static MaestroKeywordManager.keywordDataFrame(from:progressReporter:)(uint64_t a1)
{
  return sub_1CA3276D0(a1);
}

uint64_t MaestroKeywordManager.__allocating_init(keywordProvider:)(__int128 *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  sub_1CA28FA30(a1, v2 + 16);
  return v2;
}

uint64_t MaestroKeywordManager.init(keywordProvider:)(__int128 *a1)
{
  uint64_t v1;

  sub_1CA28FA30(a1, v1 + 16);
  return v1;
}

uint64_t MaestroKeywordManager.songs<A>(from:matching:)(uint64_t a1, uint64_t (*a2)@<X0>(uint64_t *a1@<X8>), uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t (*v17)@<X0>(uint64_t *@<X8>);
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)@<X0>(uint64_t *@<X8>);
  uint64_t v21;
  uint64_t v22;
  id v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)@<X0>(uint64_t *@<X8>);
  uint64_t (*v29)@<X0>(uint64_t *@<X8>);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  unint64_t v34;
  uint64_t v35;
  NSObject *v36;
  os_log_type_t v37;
  uint8_t *v38;
  id v39;
  id v40;
  void *v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t (*v48)@<X0>(uint64_t *@<X8>);
  char isUniquelyReferenced_nonNull_native;
  char v50;
  uint64_t v51;
  _BOOL8 v52;
  uint64_t v53;
  char v54;
  unint64_t v55;
  char v56;
  uint64_t v57;
  uint64_t (*v58)@<X0>(uint64_t *@<X8>);
  _QWORD *v59;
  uint64_t v60;
  BOOL v61;
  uint64_t v62;
  _BYTE *v63;
  uint64_t result;
  unint64_t v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t (**v68)@<X0>(uint64_t *@<X8>);
  uint64_t (*v69)@<X0>(uint64_t *@<X8>);
  uint64_t v70;
  int v71;
  id v72;
  id v73;
  unint64_t v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  id v78;
  uint64_t *v79;
  void *v80;
  float v81;
  unint64_t v82;
  char v83;
  uint64_t v84;
  uint64_t (*v85)@<X0>(uint64_t *@<X8>);
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  _QWORD *v90;
  uint64_t v91;
  _QWORD *v92;
  uint64_t v93;
  uint64_t v94;
  char v95;
  char v96;
  char v97;
  char v98;
  uint64_t v99;
  _BYTE *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  id v104;
  char *v105;
  id v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  unint64_t v110;
  id v111;
  uint64_t (*v112)@<X0>(uint64_t *@<X8>);
  uint64_t *v113;
  unint64_t v114;
  _QWORD *v115;
  uint64_t (*v116)();
  uint64_t v117;
  uint64_t (*v118)@<X0>(uint64_t *@<X8>);
  unint64_t v119;
  uint64_t v120;
  uint64_t (*v121)@<X0>(uint64_t *@<X8>);
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t *v126;
  uint64_t v127;
  char *v128;
  uint64_t v129;
  uint64_t (*v130)@<X0>(uint64_t *@<X8>);
  uint64_t v131;
  uint64_t v132;
  uint64_t (*v133)@<X0>(uint64_t *@<X8>);
  uint64_t v134;
  uint64_t (*v135)@<X0>(uint64_t *@<X8>);
  unint64_t v136;
  uint64_t v137;

  v10 = sub_1CA85BCCC();
  v131 = *(_QWORD *)(v10 - 8);
  v132 = v10;
  v11 = MEMORY[0x1E0C80A78](v10);
  v133 = (uint64_t (*)@<X0>(uint64_t *@<X8>))((char *)&v103 - v12);
  v13 = *(_QWORD *)(a3 - 8);
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v103 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x1CAA4D6A4](a1, a3);
  if (v16 < 1)
  {
    sub_1CA85B870();
    swift_getTupleTypeMetadata2();
    sub_1CA85B810();
    return sub_1CA85B42C();
  }
  v17 = (uint64_t (*)@<X0>(uint64_t *@<X8>))v16;
  v129 = v13;
  v130 = a2;
  v128 = v15;
  swift_beginAccess();
  v18 = *(_QWORD *)(v4 + 40);
  v19 = *(_QWORD *)(v4 + 48);
  __swift_mutable_project_boxed_opaque_existential_1(v4 + 16, v18);
  v20 = (uint64_t (*)@<X0>(uint64_t *@<X8>))(*(uint64_t (**)(uint64_t, uint64_t))(v19 + 8))(v18, v19);
  v22 = v21;
  swift_endAccess();
  if ((v22 & 1) != 0)
  {
    v135 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED872BA0);
    swift_willThrowTypedImpl();
    return v22;
  }
  v23 = objc_msgSend(v20, sel_rowLabels);
  if (!v23)
    goto LABEL_32;
  v24 = v23;
  v121 = v20;
  v125 = sub_1CA85B7B0();

  v137 = a1;
  v25 = sub_1CA85B3D8();
  v126 = &v103;
  v134 = v25;
  MEMORY[0x1E0C80A78](v25);
  *(&v103 - 2) = a3;
  *(&v103 - 1) = a4;
  v127 = a4;
  v26 = sub_1CA85B870();
  sub_1CA85B450();
  v27 = MEMORY[0x1CAA4F1A4](MEMORY[0x1E0DEAF38], v26);
  v122 = v26;
  v28 = (uint64_t (*)@<X0>(uint64_t *@<X8>))v125;
  v120 = v27;
  sub_1CA85B708();
  v124 = v5;
  v29 = v135;
  v30 = sub_1CA85B438();
  swift_bridgeObjectRetain();
  MEMORY[0x1CAA4F1A4](MEMORY[0x1E0DE9ED0], v30);
  sub_1CA85B9F0();
  v135 = v28;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED872270);
  sub_1CA327C60();
  v22 = sub_1CA85B99C();
  v31 = sub_1CA85B9C0();
  swift_bridgeObjectRelease();
  if (v31 <= 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v34 = (unint64_t)v121;
    if (qword_1ED872118 == -1)
    {
LABEL_10:
      v35 = sub_1CA85B348();
      __swift_project_value_buffer(v35, (uint64_t)qword_1ED87D010);
      swift_bridgeObjectRetain();
      v36 = sub_1CA85B330();
      v37 = sub_1CA85BAC8();
      if (os_log_type_enabled(v36, v37))
      {
        v38 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)v38 = 134217984;
        v135 = v17;
        sub_1CA85BCF0();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1CA237000, v36, v37, "[MemoriesMusic] None of the %ld input songs are in the Maestro data set", v38, 0xCu);
        MEMORY[0x1CAA4F27C](v38, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease();
      }
      swift_getTupleTypeMetadata2();
      sub_1CA85B810();
      v22 = sub_1CA85B42C();
      sub_1CA327C3C((id)v34);
      return v22;
    }
LABEL_74:
    swift_once();
    goto LABEL_10;
  }
  v112 = v29;
  v20 = v121;
  v32 = v124;
  v33 = (void *)sub_1CA85BA74();
  if (v32)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_33:
    sub_1CA327C3C(v20);
    return v22;
  }
  v39 = v33;
  if (!v33)
  {
LABEL_31:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_32:
    sub_1CA327BF8();
    swift_allocError();
    *v63 = 1;
    swift_willThrow();
    goto LABEL_33;
  }
  v40 = objc_msgSend(v33, sel_columnLabels);
  if (!v40)
  {

    goto LABEL_31;
  }
  v41 = v40;
  v42 = sub_1CA85B7B0();

  v43 = *(uint64_t **)(v42 + 16);
  v124 = 0;
  v126 = v43;
  v104 = v39;
  if (v43)
  {
    swift_bridgeObjectRetain();
    v44 = 0;
    v123 = v42;
    v17 = (uint64_t (*)@<X0>(uint64_t *@<X8>))(v42 + 40);
    v130 = (uint64_t (*)@<X0>(uint64_t *@<X8>))MEMORY[0x1E0DEE9E0];
    while (1)
    {
      v47 = *((_QWORD *)v17 - 1);
      v46 = *(_QWORD *)v17;
      swift_bridgeObjectRetain();
      v48 = v130;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v135 = v48;
      v34 = sub_1CA250BCC(v44);
      v51 = *((_QWORD *)v48 + 2);
      v52 = (v50 & 1) == 0;
      v53 = v51 + v52;
      if (__OFADD__(v51, v52))
        break;
      v54 = v50;
      if (*((_QWORD *)v48 + 3) >= v53)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          sub_1CA2624D4();
      }
      else
      {
        sub_1CA255DCC(v53, isUniquelyReferenced_nonNull_native);
        v55 = sub_1CA250BCC(v44);
        if ((v54 & 1) != (v56 & 1))
          goto LABEL_78;
        v34 = v55;
      }
      v57 = v127;
      v58 = v135;
      v130 = v135;
      if ((v54 & 1) != 0)
      {
        v45 = (_QWORD *)(*((_QWORD *)v135 + 7) + 16 * v34);
        swift_bridgeObjectRelease();
        *v45 = v47;
        v45[1] = v46;
      }
      else
      {
        *((_QWORD *)v135 + (v34 >> 6) + 8) |= 1 << v34;
        *(_QWORD *)(*((_QWORD *)v58 + 6) + 8 * v34) = v44;
        v59 = (_QWORD *)(*((_QWORD *)v58 + 7) + 16 * v34);
        *v59 = v47;
        v59[1] = v46;
        v60 = *((_QWORD *)v58 + 2);
        v61 = __OFADD__(v60, 1);
        v62 = v60 + 1;
        if (v61)
          goto LABEL_72;
        *((_QWORD *)v58 + 2) = v62;
      }
      ++v44;
      v17 = (uint64_t (*)@<X0>(uint64_t *@<X8>))((char *)v17 + 16);
      swift_bridgeObjectRelease();
      if (v126 == (uint64_t *)v44)
      {
        swift_bridgeObjectRelease();
        v39 = v104;
        goto LABEL_36;
      }
    }
    __break(1u);
LABEL_71:
    __break(1u);
LABEL_72:
    __break(1u);
LABEL_73:
    __break(1u);
    goto LABEL_74;
  }
  v130 = (uint64_t (*)@<X0>(uint64_t *@<X8>))MEMORY[0x1E0DEE9E0];
  v57 = v127;
LABEL_36:
  swift_bridgeObjectRelease();
  v34 = sub_1CA85B9E4();
  v123 = sub_1CA85B3D8();
  v106 = objc_msgSend(v39, sel_matrix);
  v65 = (unint64_t)objc_msgSend(v106, sel_rows);
  v17 = v133;
  if ((v65 & 0x8000000000000000) == 0)
  {
    v66 = v125;
    if (!v65)
    {
      v116 = 0;
      v117 = 0;
      v118 = 0;
      v115 = 0;
LABEL_69:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v137 = v123;
      swift_bridgeObjectRetain();
      v101 = sub_1CA85B3D8();
      v133 = (uint64_t (*)@<X0>(uint64_t *@<X8>))&v103;
      v134 = v101;
      MEMORY[0x1E0C80A78](v101);
      *(&v103 - 2) = a3;
      *(&v103 - 1) = v57;
      v102 = sub_1CA85B450();
      sub_1CA85B450();
      MEMORY[0x1CAA4F1A4](MEMORY[0x1E0DEA0D0], v102);
      sub_1CA85B708();

      sub_1CA327C3C(v121);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1CA2EAF88((uint64_t)v116);
      sub_1CA2EAF88((uint64_t)v118);
      return (uint64_t)v135;
    }
    v116 = 0;
    v117 = 0;
    v118 = 0;
    v115 = 0;
    v67 = 0;
    v107 = v125 + 32;
    v114 = v34;
    v105 = (char *)v65;
    v109 = a3;
    while (v67 != v65)
    {
      if (v67 >= *(_QWORD *)(v66 + 16))
        goto LABEL_76;
      v68 = (uint64_t (**)@<X0>(uint64_t *@<X8>))(v107 + 16 * v67);
      v69 = v68[1];
      v135 = *v68;
      v136 = (unint64_t)v69;
      swift_bridgeObjectRetain();
      MEMORY[0x1CAA4D2D8](&v135, v112, MEMORY[0x1E0DEA968], a3, MEMORY[0x1E0DEA978]);
      swift_bridgeObjectRelease();
      v70 = v129;
      v71 = (*(uint64_t (**)(uint64_t (*)@<X0>(uint64_t *@<X8>), uint64_t, uint64_t))(v129 + 48))(v17, 1, a3);
      v108 = (char *)v67;
      if (v71 == 1)
      {
        (*(void (**)(uint64_t (*)@<X0>(uint64_t *@<X8>), uint64_t))(v131 + 8))(v17, v132);
      }
      else
      {
        (*(void (**)(char *, uint64_t (*)@<X0>(uint64_t *@<X8>), uint64_t))(v70 + 32))(v128, v17, a3);
        v72 = objc_msgSend(v106, sel_row_, v67);
        v73 = objc_msgSend(v72, sel_array);

        sub_1CA310834();
        v74 = sub_1CA85B7B0();

        v75 = v74;
        if (v74 >> 62)
        {
          swift_bridgeObjectRetain();
          v76 = sub_1CA85C08C();
          swift_bridgeObjectRelease();
          if (v76)
          {
LABEL_46:
            v119 = v75 & 0xC000000000000001;
            v77 = 4;
            v110 = v75;
            v113 = (uint64_t *)v76;
            do
            {
              v22 = v77 - 4;
              if (v119)
              {
                v78 = (id)MEMORY[0x1CAA4DD64](v77 - 4, v75);
                v79 = (uint64_t *)(v77 - 3);
                if (__OFADD__(v22, 1))
                  goto LABEL_71;
              }
              else
              {
                v78 = *(id *)(v75 + 8 * v77);
                v79 = (uint64_t *)(v77 - 3);
                if (__OFADD__(v22, 1))
                  goto LABEL_71;
              }
              v126 = v79;
              v80 = v78;
              objc_msgSend(v78, sel_floatValue);
              if (v81 <= 0.0)
              {

              }
              else
              {
                v111 = v80;
                if (!*((_QWORD *)v130 + 2) || (v82 = sub_1CA250BCC(v77 - 4), (v83 & 1) == 0))
                {
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  sub_1CA327BF8();
                  swift_allocError();
                  *v100 = 2;
                  swift_willThrow();

                  sub_1CA327C3C(v121);
                  (*(void (**)(char *, uint64_t))(v129 + 8))(v128, a3);
                  sub_1CA2EAF88((uint64_t)v116);
                  sub_1CA2EAF88((uint64_t)v118);
                  return v22;
                }
                v84 = *((_QWORD *)v130 + 7) + 16 * v82;
                v85 = *(uint64_t (**)@<X0>(uint64_t *@<X8>))v84;
                v17 = *(uint64_t (**)@<X0>(uint64_t *@<X8>))(v84 + 8);
                v86 = swift_allocObject();
                *(_QWORD *)(v86 + 16) = a3;
                *(_QWORD *)(v86 + 24) = v57;
                swift_bridgeObjectRetain();
                sub_1CA2EAF88((uint64_t)v116);
                sub_1CA327684(a3, a3);
                v87 = v129;
                swift_allocObject();
                v88 = sub_1CA85B7D4();
                (*(void (**)(uint64_t, char *, uint64_t))(v87 + 16))(v89, v128, a3);
                v137 = v88;
                v90 = (_QWORD *)swift_allocObject();
                v91 = v57;
                v92 = v90;
                v90[2] = a3;
                v90[3] = v91;
                v90[4] = sub_1CA327CD4;
                v90[5] = v86;
                sub_1CA2EAF88((uint64_t)v118);
                v93 = v123;
                v34 = swift_isUniquelyReferenced_nonNull_native();
                v135 = (uint64_t (*)@<X0>(uint64_t *@<X8>))v93;
                v118 = v85;
                v94 = (uint64_t)v17;
                sub_1CA25081C((uint64_t)v85, (uint64_t)v17);
                if (__OFADD__(*(_QWORD *)(v93 + 16), (v95 & 1) == 0))
                  goto LABEL_73;
                v96 = v95;
                sub_1CA85BFF0();
                v97 = sub_1CA85BFD8();
                v123 = (uint64_t)v135;
                v34 = v94;
                if ((v97 & 1) != 0)
                {
                  sub_1CA25081C((uint64_t)v118, v94);
                  if ((v96 & 1) != (v98 & 1))
                    goto LABEL_79;
                  v34 = v94;
                }
                v117 = v86;
                swift_bridgeObjectRelease();
                if ((v96 & 1) != 0)
                {
                  swift_bridgeObjectRetain();
                }
                else
                {
                  v99 = swift_bridgeObjectRetain();
                  v134 = ((uint64_t (*)(uint64_t))v92[4])(v99);
                  v135 = v118;
                  v136 = v34;
                  swift_bridgeObjectRetain();
                  sub_1CA85BFE4();
                }
                a3 = v109;
                swift_bridgeObjectRelease();
                sub_1CA85B9D8();
                swift_bridgeObjectRelease();

                v116 = sub_1CA327CD4;
                v118 = sub_1CA327CF0;
                v115 = v92;
                v57 = v127;
                v17 = v133;
                v75 = v110;
              }
              ++v77;
            }
            while (v126 != v113);
          }
        }
        else
        {
          v76 = *(_QWORD *)((v74 & 0xFFFFFFFFFFFFF8) + 0x10);
          if (v76)
            goto LABEL_46;
        }
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v129 + 8))(v128, a3);
        v34 = v114;
      }
      v67 = (unint64_t)(v108 + 1);
      v65 = (unint64_t)v105;
      v66 = v125;
      if (v108 + 1 == v105)
        goto LABEL_69;
    }
    __break(1u);
LABEL_76:
    __break(1u);
  }
  __break(1u);
LABEL_78:
  sub_1CA85C2E4();
  __break(1u);
LABEL_79:
  result = sub_1CA85C2E4();
  __break(1u);
  return result;
}

uint64_t sub_1CA327468(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v15[2];

  v7 = sub_1CA85BCCC();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v15 - v8;
  v10 = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 16))(a3, a4);
  v12 = v11;
  v13 = *(_QWORD *)(a3 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v9, a2, a3);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v9, 0, 1, a3);
  v15[0] = v10;
  v15[1] = v12;
  sub_1CA85B450();
  return sub_1CA85B480();
}

uint64_t sub_1CA327568()
{
  uint64_t v0;

  v0 = sub_1CA85B9E4();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  MEMORY[0x1CAA4F1A4](MEMORY[0x1E0DEB3D0], v0);
  sub_1CA85B87C();
  sub_1CA85B870();
  sub_1CA85B450();
  return sub_1CA85B480();
}

uint64_t MaestroKeywordManager.deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return v0;
}

uint64_t MaestroKeywordManager.__deallocating_deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return swift_deallocClassInstance();
}

uint64_t sub_1CA327684(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  if (swift_isClassType())
    v3 = a2;
  else
    v3 = 0;
  if (v3)
    return __swift_instantiateConcreteTypeFromMangledName(&qword_1ED873300);
  else
    return sub_1CA85C26C();
}

_QWORD *sub_1CA3276D0(uint64_t a1)
{
  unint64_t v1;
  _QWORD *v2;
  unint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  int64_t v10;
  int64_t v11;
  unint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  unint64_t v21;
  unint64_t v22;
  _QWORD *v23;
  id v24;
  double v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  void *v29;
  id v30;
  id v31;
  id v32;
  void *v33;
  void *v34;
  uint64_t v35;
  NSObject *v36;
  os_log_type_t v37;
  uint8_t *v38;
  _BYTE *v39;
  uint64_t v40;
  uint64_t v41;
  _BYTE v42[40];

  v3 = v1;
  if (qword_1ED872F98 != -1)
    goto LABEL_40;
LABEL_2:
  v5 = qword_1ED87D0F0;
  *(double *)&v6 = CACurrentMediaTime();
  sub_1CA2E4280("MaestroKeywordDataFrameCreation", 31, 2u, v6, 0, v5, (uint64_t)v42);
  sub_1CA85BB64();
  if (!v3)
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    v40 = a1 + 64;
    v41 = MEMORY[0x1E0DEE9D8];
    v8 = 1 << *(_BYTE *)(a1 + 32);
    v9 = -1;
    if (v8 < 64)
      v9 = ~(-1 << v8);
    v3 = v9 & *(_QWORD *)(a1 + 64);
    v10 = (unint64_t)(v8 + 63) >> 6;
    swift_bridgeObjectRetain();
    v11 = 0;
    if (v3)
    {
LABEL_8:
      v12 = __clz(__rbit64(v3));
      v3 &= v3 - 1;
      v13 = v12 | (v11 << 6);
      goto LABEL_23;
    }
    while (1)
    {
      v14 = v11 + 1;
      if (__OFADD__(v11, 1))
      {
        __break(1u);
        goto LABEL_39;
      }
      if (v14 >= v10)
        goto LABEL_31;
      v15 = *(_QWORD *)(v40 + 8 * v14);
      ++v11;
      if (!v15)
      {
        v11 = v14 + 1;
        if (v14 + 1 >= v10)
          goto LABEL_31;
        v15 = *(_QWORD *)(v40 + 8 * v11);
        if (!v15)
        {
          v11 = v14 + 2;
          if (v14 + 2 >= v10)
            goto LABEL_31;
          v15 = *(_QWORD *)(v40 + 8 * v11);
          if (!v15)
          {
            v16 = v14 + 3;
            if (v16 >= v10)
            {
LABEL_31:
              swift_release();
              __swift_instantiateConcreteTypeFromMangledName(&qword_1ED872798);
              v27 = swift_allocObject();
              *(_OWORD *)(v27 + 16) = xmmword_1CA8D4E40;
              *(_QWORD *)(v27 + 32) = v41;
              v28 = objc_allocWithZone(MEMORY[0x1E0D42A18]);
              __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8722F0);
              v29 = (void *)sub_1CA85B798();
              swift_bridgeObjectRelease();
              v30 = objc_msgSend(v28, sel_initWithArray_, v29);

              v31 = objc_allocWithZone(MEMORY[0x1E0D429E8]);
              v32 = v30;
              v33 = (void *)sub_1CA85B798();
              v34 = (void *)sub_1CA85B798();
              swift_bridgeObjectRelease();
              v2 = objc_msgSend(v31, sel_initWithName_rowLabels_columnLabels_matrix_, 0, v33, v34, v32);

              if (v2)
              {
                sub_1CA85BB70();

                sub_1CA2E0C94(0);
                swift_release();
                swift_release();
                return v2;
              }
              if (qword_1ED872118 != -1)
                swift_once();
              v35 = sub_1CA85B348();
              __swift_project_value_buffer(v35, (uint64_t)qword_1ED87D010);
              v36 = sub_1CA85B330();
              v37 = sub_1CA85BAE0();
              if (os_log_type_enabled(v36, v37))
              {
                v38 = (uint8_t *)swift_slowAlloc();
                *(_WORD *)v38 = 0;
                _os_log_impl(&dword_1CA237000, v36, v37, "[MemoriesMusic] - MaestroKeywordManager failed to create keyword data frame", v38, 2u);
                MEMORY[0x1CAA4F27C](v38, -1, -1);
              }

              sub_1CA327BF8();
              swift_allocError();
              *v39 = 0;
              swift_willThrow();

              break;
            }
            v15 = *(_QWORD *)(v40 + 8 * v16);
            if (!v15)
            {
              while (1)
              {
                v11 = v16 + 1;
                if (__OFADD__(v16, 1))
                  break;
                if (v11 >= v10)
                  goto LABEL_31;
                v15 = *(_QWORD *)(v40 + 8 * v11);
                ++v16;
                if (v15)
                  goto LABEL_22;
              }
LABEL_39:
              __break(1u);
LABEL_40:
              swift_once();
              goto LABEL_2;
            }
            v11 = v16;
          }
        }
      }
LABEL_22:
      v3 = (v15 - 1) & v15;
      v13 = __clz(__rbit64(v15)) + (v11 << 6);
LABEL_23:
      v17 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v13);
      v19 = *v17;
      v18 = v17[1];
      v20 = *(_DWORD *)(*(_QWORD *)(a1 + 56) + 4 * v13);
      swift_bridgeObjectRetain_n();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v2 = sub_1CA26BCE4(0, v2[2] + 1, 1, v2);
      v22 = v2[2];
      v21 = v2[3];
      if (v22 >= v21 >> 1)
        v2 = sub_1CA26BCE4((_QWORD *)(v21 > 1), v22 + 1, 1, v2);
      v2[2] = v22 + 1;
      v23 = &v2[2 * v22];
      v23[4] = v19;
      v23[5] = v18;
      v24 = objc_allocWithZone(MEMORY[0x1E0CB37E8]);
      LODWORD(v25) = v20;
      objc_msgSend(v24, sel_initWithFloat_, v25);
      v26 = swift_bridgeObjectRelease();
      MEMORY[0x1CAA4D5F0](v26);
      if (*(_QWORD *)((v41 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v41 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_1CA85B7EC();
      sub_1CA85B834();
      sub_1CA85B7C8();
      if (v3)
        goto LABEL_8;
    }
  }
  sub_1CA2E0C94(0);
  swift_release();
  swift_release();
  return v2;
}

unint64_t sub_1CA327BF8()
{
  unint64_t result;

  result = qword_1EF94D7C8;
  if (!qword_1EF94D7C8)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8DC898, &type metadata for MaestroKeywordManager.Error);
    atomic_store(result, (unint64_t *)&qword_1EF94D7C8);
  }
  return result;
}

void sub_1CA327C3C(id a1)
{

}

uint64_t sub_1CA327C48(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1CA327468(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
}

unint64_t sub_1CA327C60()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF94D7D0;
  if (!qword_1EF94D7D0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED872270);
    result = MEMORY[0x1CAA4F1A4](MEMORY[0x1E0DEAF38], v1);
    atomic_store(result, (unint64_t *)&qword_1EF94D7D0);
  }
  return result;
}

uint64_t sub_1CA327CAC()
{
  return sub_1CA327568();
}

uint64_t sub_1CA327CC4()
{
  return swift_deallocObject();
}

uint64_t sub_1CA327CD4()
{
  return sub_1CA85B3F0();
}

uint64_t sub_1CA327CE0()
{
  return swift_deallocObject();
}

uint64_t sub_1CA327CF0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = (*(uint64_t (**)(void))(v1 + 32))();
  *a1 = result;
  return result;
}

uint64_t dispatch thunk of SongIdentity.identifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t type metadata accessor for MaestroKeywordManager()
{
  return objc_opt_self();
}

uint64_t method lookup function for MaestroKeywordManager()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MaestroKeywordManager.__allocating_init(keywordProvider:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t storeEnumTagSinglePayload for MaestroKeywordManager.Error(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1CA327DA0 + 4 * byte_1CA8DC7D5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1CA327DD4 + 4 * byte_1CA8DC7D0[v4]))();
}

uint64_t sub_1CA327DD4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CA327DDC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1CA327DE4);
  return result;
}

uint64_t sub_1CA327DF0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1CA327DF8);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1CA327DFC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CA327E04(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MaestroKeywordManager.Error()
{
  return &type metadata for MaestroKeywordManager.Error;
}

unint64_t sub_1CA327E24()
{
  unint64_t result;

  result = qword_1EF94D878;
  if (!qword_1EF94D878)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8DC870, &type metadata for MaestroKeywordManager.Error);
    atomic_store(result, (unint64_t *)&qword_1EF94D878);
  }
  return result;
}

uint64_t sub_1CA327E68(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t result;
  int64_t v9;
  _QWORD *v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v14;
  int64_t v15;
  uint64_t *v16;
  uint64_t v17;
  void *v18;
  id v19;
  char v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  _QWORD *v24;
  int64_t v25;
  int64_t v26;
  _QWORD v27[2];
  uint64_t v28[3];

  v2 = v1;
  v4 = a1 + 64;
  v5 = 1 << *(_BYTE *)(a1 + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(a1 + 64);
  v26 = (unint64_t)(v5 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v9 = 0;
  v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  while (1)
  {
    if (v7)
    {
      v11 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v12 = v11 | (v9 << 6);
      goto LABEL_17;
    }
    if (__OFADD__(v9++, 1))
      break;
    if (v9 >= v26)
      goto LABEL_31;
    v14 = *(_QWORD *)(v4 + 8 * v9);
    if (!v14)
    {
      v15 = v9 + 1;
      if (v9 + 1 >= v26)
        goto LABEL_31;
      v14 = *(_QWORD *)(v4 + 8 * v15);
      if (v14)
        goto LABEL_15;
      v15 = v9 + 2;
      if (v9 + 2 >= v26)
        goto LABEL_31;
      v14 = *(_QWORD *)(v4 + 8 * v15);
      if (v14)
        goto LABEL_15;
      v15 = v9 + 3;
      if (v9 + 3 >= v26)
        goto LABEL_31;
      v14 = *(_QWORD *)(v4 + 8 * v15);
      if (v14)
      {
LABEL_15:
        v9 = v15;
      }
      else
      {
        v25 = v9 + 4;
        if (v9 + 4 >= v26)
        {
LABEL_31:
          swift_release();
          return (uint64_t)v10;
        }
        v14 = *(_QWORD *)(v4 + 8 * v25);
        for (v9 += 4; !v14; ++v25)
        {
          v9 = v25 + 1;
          if (__OFADD__(v25, 1))
            goto LABEL_34;
          if (v9 >= v26)
            goto LABEL_31;
          v14 = *(_QWORD *)(v4 + 8 * v9);
        }
      }
    }
    v7 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v9 << 6);
LABEL_17:
    v16 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v12);
    v17 = v16[1];
    v18 = *(void **)(*(_QWORD *)(a1 + 56) + 8 * v12);
    v28[0] = *v16;
    v28[1] = v17;
    v28[2] = (uint64_t)v18;
    swift_bridgeObjectRetain();
    v19 = v18;
    sub_1CA3284B8(v28, v27);
    if (v2)
    {
      swift_bridgeObjectRelease();
      swift_release();

      swift_bridgeObjectRelease();
      return (uint64_t)v10;
    }

    result = swift_bridgeObjectRelease();
    v20 = v27[0];
    if (LOBYTE(v27[0]) != 23)
    {
      v21 = v27[1];
      result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        result = (uint64_t)sub_1CA26D090(0, v10[2] + 1, 1, v10);
        v10 = (_QWORD *)result;
      }
      v23 = v10[2];
      v22 = v10[3];
      if (v23 >= v22 >> 1)
      {
        result = (uint64_t)sub_1CA26D090((_QWORD *)(v22 > 1), v23 + 1, 1, v10);
        v10 = (_QWORD *)result;
      }
      v10[2] = v23 + 1;
      v24 = &v10[2 * v23];
      *((_BYTE *)v24 + 32) = v20;
      v24[5] = v21;
    }
  }
  __break(1u);
LABEL_34:
  __break(1u);
  return result;
}

void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> EspressoEventLabeler.init()(PhotosGraph::EspressoEventLabeler *__return_ptr retstr)
{
  uint64_t v1;
  uint64_t v3;
  id v4;
  objc_class *v5;

  _s11PhotosGraph26EventLabelingConfigurationC10bundlePathSSSgvgZ_0();
  if (v3)
  {
    v4 = objc_allocWithZone((Class)PGEventLabelerE5Model);
    v5 = (objc_class *)sub_1CA328798();
    if (!v1)
      retstr->model.super.isa = v5;
  }
  else
  {
    sub_1CA2A3B30();
    swift_allocError();
    swift_willThrow();
  }
}

id EspressoEventLabeler.featureNames()()
{
  void **v0;
  void *v1;
  id v2;
  id v3;
  void *v4;
  id v5;
  id v6;
  id v8[2];

  v8[1] = *(id *)MEMORY[0x1E0C80C00];
  v1 = *v0;
  v8[0] = 0;
  v2 = objc_msgSend(v1, sel_inputNamesWithError_, v8);
  v3 = v8[0];
  if (v2)
  {
    v4 = v2;
    v5 = (id)sub_1CA85B984();
    v6 = v3;

  }
  else
  {
    v5 = v8[0];
    sub_1CA85A364();

    swift_willThrow();
  }
  return v5;
}

id EspressoEventLabeler.label(event:progressReporter:)(_QWORD *a1)
{
  id *v1;
  uint64_t v2;
  id v4;
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;
  uint64_t v14;
  id v15;
  id v16;
  id v18;
  _BYTE v19[40];
  uint64_t v20;

  v20 = *MEMORY[0x1E0C80C00];
  v4 = *v1;
  v5 = (void *)sub_1CA85BB7C();
  v7 = v6;
  v8 = a1[3];
  v9 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v8);
  (*(void (**)(void *, uint64_t, uint64_t))(v9 + 16))(v5, v8, v9);
  if (v2)
  {

  }
  else
  {
    if (qword_1EF94A2C0 != -1)
      swift_once();
    v10 = qword_1EF9781B0;
    *(double *)&v11 = CACurrentMediaTime();
    sub_1CA2E4280("EspressoEventLabeler", 20, 2u, v11, 0, v10, (uint64_t)v19);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8722F0);
    v12 = (void *)sub_1CA85B3FC();
    swift_bridgeObjectRelease();
    v18 = 0;
    v13 = objc_msgSend(v4, sel_computeWithFeatures_error_, v12, &v18);

    v4 = v18;
    if (v13)
    {
      sub_1CA310834();
      v14 = sub_1CA85B414();
      v15 = v4;

      v4 = (id)sub_1CA327E68(v14);
      swift_bridgeObjectRelease();
      sub_1CA85BB70();
      sub_1CA2E0C94(0);
    }
    else
    {
      v16 = v18;
      sub_1CA85A364();

      swift_willThrow();
      sub_1CA2E0C94(1);
    }
    swift_release();

    swift_release();
  }
  return v4;
}

void sub_1CA3284B8(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint64_t v23;
  uint8_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  uint64_t v34;

  v3 = v2;
  v6 = sub_1CA85B348();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *a1;
  v10 = a1[1];
  v12 = (void *)a1[2];
  v13 = qword_1EF94A1C8;
  swift_bridgeObjectRetain();
  v32 = v12;
  if (v13 != -1)
    swift_once();
  v14 = off_1EF94BA50;
  if (*((_QWORD *)off_1EF94BA50 + 2) && (v15 = sub_1CA25081C(v11, v10), (v16 & 1) != 0))
  {
    v17 = *(unsigned __int8 *)(v14[7] + v15);
    swift_bridgeObjectRelease();
    v18 = v32;
    objc_msgSend(v32, sel_doubleValue);
    v20 = v19;

    *a2 = v17;
    a2[1] = v20;
  }
  else
  {
    if (qword_1EF94A2C0 != -1)
      swift_once();
    sub_1CA2E1280((uint64_t)v9);
    swift_bridgeObjectRetain();
    v21 = sub_1CA85B330();
    v22 = sub_1CA85BAE0();
    if (os_log_type_enabled(v21, v22))
    {
      v30 = a2;
      v23 = swift_slowAlloc();
      v29 = v6;
      v24 = (uint8_t *)v23;
      v25 = swift_slowAlloc();
      v31 = v3;
      v26 = v25;
      v34 = v25;
      v28 = v7;
      *(_DWORD *)v24 = 136315138;
      swift_bridgeObjectRetain();
      v33 = sub_1CA28712C(v11, v10, &v34);
      a2 = v30;
      sub_1CA85BCF0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1CA237000, v21, v22, "[EspressoEventLabeler] Espresso model returned output with unknown event label: %s.", v24, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1CAA4F27C](v26, -1, -1);
      MEMORY[0x1CAA4F27C](v24, -1, -1);

      (*(void (**)(char *, uint64_t))(v28 + 8))(v9, v29);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    }
    *(_OWORD *)a2 = xmmword_1CA8DC8E0;
  }
}

id sub_1CA328784(_QWORD *a1)
{
  return EspressoEventLabeler.label(event:progressReporter:)(a1);
}

id sub_1CA328798()
{
  void *v0;
  void *v1;
  id v2;
  id v3;
  id v4;
  id v6[2];

  v6[1] = *(id *)MEMORY[0x1E0C80C00];
  v1 = (void *)sub_1CA85B510();
  swift_bridgeObjectRelease();
  v6[0] = 0;
  v2 = objc_msgSend(v0, sel_initWithFilePath_error_, v1, v6);

  if (v2)
  {
    v3 = v6[0];
  }
  else
  {
    v4 = v6[0];
    sub_1CA85A364();

    swift_willThrow();
  }
  return v2;
}

ValueMetadata *type metadata accessor for EspressoEventLabeler()
{
  return &type metadata for EspressoEventLabeler;
}

uint64_t storeEnumTagSinglePayload for EspressoEventLabeler.Error(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1CA3288B0 + 4 * byte_1CA8DC8F0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1CA3288D0 + 4 * byte_1CA8DC8F5[v4]))();
}

_BYTE *sub_1CA3288B0(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1CA3288D0(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1CA3288D8(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1CA3288E0(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1CA3288E8(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1CA3288F0(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for EspressoEventLabeler.Error()
{
  return &type metadata for EspressoEventLabeler.Error;
}

unint64_t sub_1CA328910()
{
  unint64_t result;

  result = qword_1EF94D880;
  if (!qword_1EF94D880)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8DC97C, &type metadata for EspressoEventLabeler.Error);
    atomic_store(result, (unint64_t *)&qword_1EF94D880);
  }
  return result;
}

void sub_1CA328954(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1CA328994(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1CA328A3C + 4 * byte_1CA8DC9EE[a2]))(0x6E6F73616573);
}

uint64_t sub_1CA328A3C(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x6E6F73616573 && v1 == 0xE600000000000000)
    v2 = 1;
  else
    v2 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

void sub_1CA328B34(char a1)
{
  __asm { BR              X12 }
}

uint64_t sub_1CA328B84(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1CA328C00 + 4 * byte_1CA8DC9FA[a2]))(0xD000000000000023);
}

uint64_t sub_1CA328C00(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0xD000000000000023 && v1 == 0x80000001CA8875E0)
    v2 = 1;
  else
    v2 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

void sub_1CA328CB8(char a1)
{
  __asm { BR              X12 }
}

uint64_t sub_1CA328D04(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1CA328DF8 + 4 * byte_1CA8DCA0A[a2]))(0x6E65636552746F6ELL);
}

uint64_t sub_1CA328DF8(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x6E65636552746F6ELL && v1 == 0xEF6867756F6E4574)
    v2 = 1;
  else
    v2 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1CA328F1C(char a1, char a2)
{
  BOOL v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x7A69536863746162;
  else
    v3 = 0xD00000000000001CLL;
  if (v2)
    v4 = 0x80000001CA888630;
  else
    v4 = 0xE900000000000065;
  if ((a2 & 1) != 0)
    v5 = 0x7A69536863746162;
  else
    v5 = 0xD00000000000001CLL;
  if ((a2 & 1) != 0)
    v6 = 0xE900000000000065;
  else
    v6 = 0x80000001CA888630;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

void sub_1CA328FC8(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1CA329008(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1CA329078 + 4 * byte_1CA8DCA19[a2]))(2037672259);
}

uint64_t sub_1CA329078(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  if (a1 == 2037672259 && v1 == v2)
    v3 = 1;
  else
    v3 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

void sub_1CA329130(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1CA329194(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1CA329208 + 4 * byte_1CA8DCA22[a2]))(0x73636972796CLL);
}

uint64_t sub_1CA329208(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x73636972796CLL && v1 == 0xE600000000000000)
    v2 = 1;
  else
    v2 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

void sub_1CA3292C4(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1CA329304(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1CA329364 + 4 * byte_1CA8DCA2A[a2]))(0x6E69727473627573);
}

uint64_t sub_1CA329364(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x6E69727473627573 && v1 == 0xE900000000000067)
    v2 = 1;
  else
    v2 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

void sub_1CA329408(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1CA329458(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1CA3294BC + 4 * byte_1CA8DCA32[a2]))(0x6E69727275636572);
}

uint64_t sub_1CA3294BC(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x6E69727275636572 && v1 == 0xED00007069725467)
    v2 = 1;
  else
    v2 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

void sub_1CA329564(char a1)
{
  __asm { BR              X11 }
}

uint64_t sub_1CA3295B0(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(void))((char *)sub_1CA3295FC + 4 * byte_1CA8DCA3A[a2]))();
}

uint64_t sub_1CA3295FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  char v4;

  if (a1 == a3 && v3 == 0x80000001CA8885D0)
    v4 = 1;
  else
    v4 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v4 & 1;
}

uint64_t sub_1CA32967C(char a1, char a2)
{
  BOOL v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0xD000000000000011;
  else
    v3 = 0xD000000000000015;
  if (v2)
    v4 = 0x80000001CA888AF0;
  else
    v4 = 0x80000001CA888B10;
  if ((a2 & 1) != 0)
    v5 = 0xD000000000000011;
  else
    v5 = 0xD000000000000015;
  if ((a2 & 1) != 0)
    v6 = 0x80000001CA888B10;
  else
    v6 = 0x80000001CA888AF0;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1CA329724(char a1, unsigned __int8 a2)
{
  uint64_t v2;
  unint64_t v3;
  int v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  if (a1)
  {
    if (a1 == 1)
      v2 = 6909808;
    else
      v2 = 6909810;
    v3 = 0xE300000000000000;
    v4 = a2;
    if (a2)
    {
LABEL_6:
      if (v4 == 1)
        v5 = 6909808;
      else
        v5 = 6909810;
      v6 = 0xE300000000000000;
      if (v2 != v5)
        goto LABEL_15;
      goto LABEL_13;
    }
  }
  else
  {
    v3 = 0xE700000000000000;
    v2 = 0x687361486F6567;
    v4 = a2;
    if (a2)
      goto LABEL_6;
  }
  v6 = 0xE700000000000000;
  if (v2 != 0x687361486F6567)
  {
LABEL_15:
    v7 = sub_1CA85C284();
    goto LABEL_16;
  }
LABEL_13:
  if (v3 != v6)
    goto LABEL_15;
  v7 = 1;
LABEL_16:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1CA32980C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;

  v0 = EventLabel.rawValue.getter();
  v2 = v1;
  if (v0 == EventLabel.rawValue.getter() && v2 == v3)
    v5 = 1;
  else
    v5 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t sub_1CA3298A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  if (*(_QWORD *)(a3 + 16) && (v6 = sub_1CA25081C(a1, a2), (v7 & 1) != 0))
  {
    v8 = v6;
    v9 = *(_QWORD *)(a3 + 56);
    v10 = sub_1CA85A148();
    v11 = *(_QWORD *)(v10 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(a4, v9 + *(_QWORD *)(v11 + 72) * v8, v10);
    v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56);
    v13 = a4;
    v14 = 0;
    v15 = v10;
  }
  else
  {
    v15 = sub_1CA85A148();
    v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56);
    v13 = a4;
    v14 = 1;
  }
  return v12(v13, v14, 1, v15);
}

uint64_t sub_1CA329948(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  char v5;

  if (*(_QWORD *)(a3 + 16) && (v4 = sub_1CA25081C(a1, a2), (v5 & 1) != 0))
    return *(_QWORD *)(*(_QWORD *)(a3 + 56) + 8 * v4);
  else
    return 0;
}

uint64_t sub_1CA32998C(uint64_t a1, uint64_t a2)
{
  char v2;

  if (*(_QWORD *)(a2 + 16) && (sub_1CA2513F8(a1), (v2 & 1) != 0))
    return swift_bridgeObjectRetain();
  else
    return 0;
}

uint64_t sub_1CA3299CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  return a5();
}

uint64_t sub_1CA3299EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void (*v6)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;

  v6 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a1 + 32);
  v7 = sub_1CA85B534();
  v6(a2, v7, v8, a4);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1CA329A48(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t result;
  int64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  int64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  int64_t v26;
  uint64_t v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  _OWORD v35[2];
  _OWORD v36[3];

  if (*(_QWORD *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED872560);
    v2 = sub_1CA85C0C8();
  }
  else
  {
    v2 = MEMORY[0x1E0DEE9E0];
  }
  v27 = a1 + 64;
  v3 = -1 << *(_BYTE *)(a1 + 32);
  if (-v3 < 64)
    v4 = ~(-1 << -(char)v3);
  else
    v4 = -1;
  v5 = v4 & *(_QWORD *)(a1 + 64);
  v26 = (unint64_t)(63 - v3) >> 6;
  v6 = v2 + 64;
  swift_bridgeObjectRetain();
  result = swift_retain();
  v8 = 0;
  while (1)
  {
    if (v5)
    {
      v11 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      v12 = v11 | (v8 << 6);
      goto LABEL_28;
    }
    v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v13 >= v26)
      goto LABEL_37;
    v14 = *(_QWORD *)(v27 + 8 * v13);
    v15 = v8 + 1;
    if (!v14)
    {
      v15 = v8 + 2;
      if (v8 + 2 >= v26)
        goto LABEL_37;
      v14 = *(_QWORD *)(v27 + 8 * v15);
      if (!v14)
      {
        v15 = v8 + 3;
        if (v8 + 3 >= v26)
          goto LABEL_37;
        v14 = *(_QWORD *)(v27 + 8 * v15);
        if (!v14)
        {
          v15 = v8 + 4;
          if (v8 + 4 >= v26)
            goto LABEL_37;
          v14 = *(_QWORD *)(v27 + 8 * v15);
          if (!v14)
            break;
        }
      }
    }
LABEL_27:
    v5 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v15 << 6);
    v8 = v15;
LABEL_28:
    v17 = (_QWORD *)(*(_QWORD *)(a1 + 48) + 16 * v12);
    v18 = v17[1];
    *(_QWORD *)&v36[0] = *v17;
    *((_QWORD *)&v36[0] + 1) = v18;
    swift_bridgeObjectRetain();
    swift_dynamicCast();
    swift_dynamicCast();
    v32 = v28;
    v33 = v29;
    v34 = v30;
    sub_1CA266A44(&v31, v35);
    v28 = v32;
    v29 = v33;
    v30 = v34;
    sub_1CA266A44(v35, v36);
    sub_1CA266A44(v36, &v32);
    result = sub_1CA85BE64();
    v19 = -1 << *(_BYTE *)(v2 + 32);
    v20 = result & ~v19;
    v21 = v20 >> 6;
    if (((-1 << v20) & ~*(_QWORD *)(v6 + 8 * (v20 >> 6))) != 0)
    {
      v9 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v6 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v22 = 0;
      v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v24 = v21 == v23;
        if (v21 == v23)
          v21 = 0;
        v22 |= v24;
        v25 = *(_QWORD *)(v6 + 8 * v21);
      }
      while (v25 == -1);
      v9 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(_QWORD *)(v6 + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v9;
    v10 = *(_QWORD *)(v2 + 48) + 40 * v9;
    *(_OWORD *)v10 = v28;
    *(_OWORD *)(v10 + 16) = v29;
    *(_QWORD *)(v10 + 32) = v30;
    result = (uint64_t)sub_1CA266A44(&v32, (_OWORD *)(*(_QWORD *)(v2 + 56) + 32 * v9));
    ++*(_QWORD *)(v2 + 16);
  }
  v16 = v8 + 5;
  if (v8 + 5 >= v26)
  {
LABEL_37:
    swift_release();
    sub_1CA24E6B8();
    return v2;
  }
  v14 = *(_QWORD *)(v27 + 8 * v16);
  if (v14)
  {
    v15 = v8 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    v15 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v15 >= v26)
      goto LABEL_37;
    v14 = *(_QWORD *)(v27 + 8 * v15);
    ++v16;
    if (v14)
      goto LABEL_27;
  }
LABEL_39:
  __break(1u);
  return result;
}

unint64_t sub_1CA329DF0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _OWORD *v6;
  _OWORD *v7;
  uint64_t *v8;
  uint64_t *v9;
  unint64_t result;
  uint64_t *v11;
  uint64_t *v12;
  uint64_t v13;
  _OWORD *v14;
  _OWORD *v15;
  uint64_t *v16;
  _OWORD *v17;
  unint64_t i;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  int64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  uint64_t *v30;
  uint64_t v31;
  BOOL v32;
  uint64_t v33;
  int64_t v34;
  uint64_t v35;
  int64_t v36;
  uint64_t v37;
  __int128 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __int128 v42;
  uint64_t v43;
  _OWORD v44[3];
  _OWORD v45[2];
  __int128 v46;
  _OWORD v47[2];

  v1 = a1;
  if (*(_QWORD *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94AEB8);
    v2 = (_QWORD *)sub_1CA85C0C8();
  }
  else
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  }
  v35 = v1 + 64;
  v3 = -1 << *(_BYTE *)(v1 + 32);
  if (-v3 < 64)
    v4 = ~(-1 << -(char)v3);
  else
    v4 = -1;
  v5 = v4 & *(_QWORD *)(v1 + 64);
  v34 = (unint64_t)(63 - v3) >> 6;
  v6 = v47;
  v7 = v45;
  v8 = &v41;
  v9 = &v43;
  result = swift_bridgeObjectRetain();
  v36 = 0;
  if (v5)
    goto LABEL_10;
LABEL_11:
  v19 = v36 + 1;
  if (__OFADD__(v36, 1))
    goto LABEL_35;
  if (v19 >= v34)
    goto LABEL_32;
  v20 = *(_QWORD *)(v35 + 8 * v19);
  v21 = v36 + 1;
  if (!v20)
  {
    v21 = v36 + 2;
    if (v36 + 2 >= v34)
      goto LABEL_32;
    v20 = *(_QWORD *)(v35 + 8 * v21);
    if (!v20)
    {
      v21 = v36 + 3;
      if (v36 + 3 >= v34)
        goto LABEL_32;
      v20 = *(_QWORD *)(v35 + 8 * v21);
      if (!v20)
      {
        v21 = v36 + 4;
        if (v36 + 4 >= v34)
          goto LABEL_32;
        v20 = *(_QWORD *)(v35 + 8 * v21);
        if (!v20)
        {
          v22 = v36 + 5;
          if (v36 + 5 < v34)
          {
            v20 = *(_QWORD *)(v35 + 8 * v22);
            if (v20)
            {
              v21 = v36 + 5;
              goto LABEL_26;
            }
            while (1)
            {
              v21 = v22 + 1;
              if (__OFADD__(v22, 1))
                goto LABEL_36;
              if (v21 >= v34)
                break;
              v20 = *(_QWORD *)(v35 + 8 * v21);
              ++v22;
              if (v20)
                goto LABEL_26;
            }
          }
LABEL_32:
          sub_1CA24E6B8();
          return (unint64_t)v2;
        }
      }
    }
  }
LABEL_26:
  v36 = v21;
  v37 = (v20 - 1) & v20;
  for (i = __clz(__rbit64(v20)) + (v21 << 6); ; i = __clz(__rbit64(v5)) | (v36 << 6))
  {
    v23 = (uint64_t *)(*(_QWORD *)(v1 + 48) + 16 * i);
    v25 = *v23;
    v24 = v23[1];
    sub_1CA266A08(*(_QWORD *)(v1 + 56) + 32 * i, (uint64_t)v6);
    *(_QWORD *)&v46 = v25;
    *((_QWORD *)&v46 + 1) = v24;
    v44[2] = v46;
    v45[0] = v47[0];
    v45[1] = v47[1];
    v39 = v25;
    v40 = v24;
    sub_1CA266A44(v7, &v38);
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94DB80);
    swift_dynamicCast();
    v27 = v39;
    v26 = v40;
    sub_1CA266A44(v8, v9);
    sub_1CA266A44(v9, v44);
    sub_1CA266A44(v44, &v42);
    result = sub_1CA25081C(v27, v26);
    v28 = result;
    if ((v29 & 1) != 0)
    {
      v11 = v9;
      v12 = v8;
      v13 = v1;
      v14 = v7;
      v15 = v6;
      v16 = (uint64_t *)(v2[6] + 16 * result);
      swift_bridgeObjectRelease();
      *v16 = v27;
      v16[1] = v26;
      v6 = v15;
      v7 = v14;
      v1 = v13;
      v8 = v12;
      v9 = v11;
      v17 = (_OWORD *)(v2[7] + 32 * v28);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
      result = (unint64_t)sub_1CA266A44(&v42, v17);
      v5 = v37;
      if (!v37)
        goto LABEL_11;
      goto LABEL_10;
    }
    if (v2[2] >= v2[3])
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v30 = (uint64_t *)(v2[6] + 16 * result);
    *v30 = v27;
    v30[1] = v26;
    result = (unint64_t)sub_1CA266A44(&v42, (_OWORD *)(v2[7] + 32 * result));
    v31 = v2[2];
    v32 = __OFADD__(v31, 1);
    v33 = v31 + 1;
    if (v32)
      goto LABEL_34;
    v2[2] = v33;
    v5 = v37;
    if (!v37)
      goto LABEL_11;
LABEL_10:
    v37 = (v5 - 1) & v5;
  }
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_1CA32A198(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t result;
  int64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  int64_t v16;
  _QWORD *v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  int64_t v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  _OWORD v36[2];
  _OWORD v37[2];

  if (*(_QWORD *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED872560);
    v2 = sub_1CA85C0C8();
  }
  else
  {
    v2 = MEMORY[0x1E0DEE9E0];
  }
  v28 = a1 + 64;
  v3 = -1 << *(_BYTE *)(a1 + 32);
  if (-v3 < 64)
    v4 = ~(-1 << -(char)v3);
  else
    v4 = -1;
  v5 = v4 & *(_QWORD *)(a1 + 64);
  v27 = (unint64_t)(63 - v3) >> 6;
  v6 = v2 + 64;
  swift_bridgeObjectRetain();
  result = swift_retain();
  v8 = 0;
  while (1)
  {
    if (v5)
    {
      v11 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      v12 = v11 | (v8 << 6);
      goto LABEL_28;
    }
    v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v13 >= v27)
      goto LABEL_37;
    v14 = *(_QWORD *)(v28 + 8 * v13);
    v15 = v8 + 1;
    if (!v14)
    {
      v15 = v8 + 2;
      if (v8 + 2 >= v27)
        goto LABEL_37;
      v14 = *(_QWORD *)(v28 + 8 * v15);
      if (!v14)
      {
        v15 = v8 + 3;
        if (v8 + 3 >= v27)
          goto LABEL_37;
        v14 = *(_QWORD *)(v28 + 8 * v15);
        if (!v14)
        {
          v15 = v8 + 4;
          if (v8 + 4 >= v27)
            goto LABEL_37;
          v14 = *(_QWORD *)(v28 + 8 * v15);
          if (!v14)
            break;
        }
      }
    }
LABEL_27:
    v5 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v15 << 6);
    v8 = v15;
LABEL_28:
    v17 = (_QWORD *)(*(_QWORD *)(a1 + 48) + 16 * v12);
    v18 = v17[1];
    v19 = *(void **)(*(_QWORD *)(a1 + 56) + 8 * v12);
    *(_QWORD *)&v37[0] = *v17;
    *((_QWORD *)&v37[0] + 1) = v18;
    swift_bridgeObjectRetain();
    v19;
    swift_dynamicCast();
    sub_1CA24EEC0(0, (unint64_t *)&qword_1EF94D620);
    swift_dynamicCast();
    v33 = v29;
    v34 = v30;
    v35 = v31;
    sub_1CA266A44(&v32, v36);
    v29 = v33;
    v30 = v34;
    v31 = v35;
    sub_1CA266A44(v36, v37);
    sub_1CA266A44(v37, &v33);
    result = sub_1CA85BE64();
    v20 = -1 << *(_BYTE *)(v2 + 32);
    v21 = result & ~v20;
    v22 = v21 >> 6;
    if (((-1 << v21) & ~*(_QWORD *)(v6 + 8 * (v21 >> 6))) != 0)
    {
      v9 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v6 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v23 = 0;
      v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v25 = v22 == v24;
        if (v22 == v24)
          v22 = 0;
        v23 |= v25;
        v26 = *(_QWORD *)(v6 + 8 * v22);
      }
      while (v26 == -1);
      v9 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(_QWORD *)(v6 + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v9;
    v10 = *(_QWORD *)(v2 + 48) + 40 * v9;
    *(_OWORD *)v10 = v29;
    *(_OWORD *)(v10 + 16) = v30;
    *(_QWORD *)(v10 + 32) = v31;
    result = (uint64_t)sub_1CA266A44(&v33, (_OWORD *)(*(_QWORD *)(v2 + 56) + 32 * v9));
    ++*(_QWORD *)(v2 + 16);
  }
  v16 = v8 + 5;
  if (v8 + 5 >= v27)
  {
LABEL_37:
    swift_release();
    sub_1CA24E6B8();
    return v2;
  }
  v14 = *(_QWORD *)(v28 + 8 * v16);
  if (v14)
  {
    v15 = v8 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    v15 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v15 >= v27)
      goto LABEL_37;
    v14 = *(_QWORD *)(v28 + 8 * v15);
    ++v16;
    if (v14)
      goto LABEL_27;
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_1CA32A558(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;

  if (*(_QWORD *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94DB68);
    v2 = sub_1CA85C0C8();
  }
  else
  {
    v2 = MEMORY[0x1E0DEE9E0];
  }
  v3 = a1 + 64;
  v4 = -1 << *(_BYTE *)(a1 + 32);
  if (-v4 < 64)
    v5 = ~(-1 << -(char)v4);
  else
    v5 = -1;
  v6 = v5 & *(_QWORD *)(a1 + 64);
  v7 = (unint64_t)(63 - v4) >> 6;
  v8 = v2 + 64;
  swift_bridgeObjectRetain();
  result = swift_retain();
  v10 = 0;
  while (1)
  {
    if (v6)
    {
      v13 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v14 = v13 | (v10 << 6);
      goto LABEL_28;
    }
    v15 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v15 >= v7)
      goto LABEL_37;
    v16 = *(_QWORD *)(v3 + 8 * v15);
    v17 = v10 + 1;
    if (!v16)
    {
      v17 = v10 + 2;
      if (v10 + 2 >= v7)
        goto LABEL_37;
      v16 = *(_QWORD *)(v3 + 8 * v17);
      if (!v16)
      {
        v17 = v10 + 3;
        if (v10 + 3 >= v7)
          goto LABEL_37;
        v16 = *(_QWORD *)(v3 + 8 * v17);
        if (!v16)
        {
          v17 = v10 + 4;
          if (v10 + 4 >= v7)
            goto LABEL_37;
          v16 = *(_QWORD *)(v3 + 8 * v17);
          if (!v16)
            break;
        }
      }
    }
LABEL_27:
    v6 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v17 << 6);
    v10 = v17;
LABEL_28:
    v19 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * v14);
    swift_bridgeObjectRetain();
    swift_dynamicCast();
    result = sub_1CA85BE64();
    v20 = -1 << *(_BYTE *)(v2 + 32);
    v21 = result & ~v20;
    v22 = v21 >> 6;
    if (((-1 << v21) & ~*(_QWORD *)(v8 + 8 * (v21 >> 6))) != 0)
    {
      v11 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v8 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v23 = 0;
      v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v25 = v22 == v24;
        if (v22 == v24)
          v22 = 0;
        v23 |= v25;
        v26 = *(_QWORD *)(v8 + 8 * v22);
      }
      while (v26 == -1);
      v11 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(_QWORD *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
    v12 = *(_QWORD *)(v2 + 48) + 40 * v11;
    *(_OWORD *)v12 = v27;
    *(_OWORD *)(v12 + 16) = v28;
    *(_QWORD *)(v12 + 32) = v29;
    *(_QWORD *)(*(_QWORD *)(v2 + 56) + 8 * v11) = v19;
    ++*(_QWORD *)(v2 + 16);
  }
  v18 = v10 + 5;
  if (v10 + 5 >= v7)
  {
LABEL_37:
    swift_release();
    sub_1CA24E6B8();
    return v2;
  }
  v16 = *(_QWORD *)(v3 + 8 * v18);
  if (v16)
  {
    v17 = v10 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    v17 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v17 >= v7)
      goto LABEL_37;
    v16 = *(_QWORD *)(v3 + 8 * v17);
    ++v18;
    if (v16)
      goto LABEL_27;
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_1CA32A85C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;

  if (*(_QWORD *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94DB68);
    v2 = sub_1CA85C0C8();
  }
  else
  {
    v2 = MEMORY[0x1E0DEE9E0];
  }
  v3 = a1 + 64;
  v4 = -1 << *(_BYTE *)(a1 + 32);
  if (-v4 < 64)
    v5 = ~(-1 << -(char)v4);
  else
    v5 = -1;
  v6 = v5 & *(_QWORD *)(a1 + 64);
  v7 = (unint64_t)(63 - v4) >> 6;
  v8 = v2 + 64;
  swift_bridgeObjectRetain();
  result = swift_retain();
  v10 = 0;
  while (1)
  {
    if (v6)
    {
      v13 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v14 = v13 | (v10 << 6);
      goto LABEL_28;
    }
    v15 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v15 >= v7)
      goto LABEL_37;
    v16 = *(_QWORD *)(v3 + 8 * v15);
    v17 = v10 + 1;
    if (!v16)
    {
      v17 = v10 + 2;
      if (v10 + 2 >= v7)
        goto LABEL_37;
      v16 = *(_QWORD *)(v3 + 8 * v17);
      if (!v16)
      {
        v17 = v10 + 3;
        if (v10 + 3 >= v7)
          goto LABEL_37;
        v16 = *(_QWORD *)(v3 + 8 * v17);
        if (!v16)
        {
          v17 = v10 + 4;
          if (v10 + 4 >= v7)
            goto LABEL_37;
          v16 = *(_QWORD *)(v3 + 8 * v17);
          if (!v16)
            break;
        }
      }
    }
LABEL_27:
    v6 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v17 << 6);
    v10 = v17;
LABEL_28:
    v19 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * v14);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_dynamicCast();
    result = sub_1CA85BE64();
    v20 = -1 << *(_BYTE *)(v2 + 32);
    v21 = result & ~v20;
    v22 = v21 >> 6;
    if (((-1 << v21) & ~*(_QWORD *)(v8 + 8 * (v21 >> 6))) != 0)
    {
      v11 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v8 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v23 = 0;
      v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v25 = v22 == v24;
        if (v22 == v24)
          v22 = 0;
        v23 |= v25;
        v26 = *(_QWORD *)(v8 + 8 * v22);
      }
      while (v26 == -1);
      v11 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(_QWORD *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
    v12 = *(_QWORD *)(v2 + 48) + 40 * v11;
    *(_OWORD *)v12 = v27;
    *(_OWORD *)(v12 + 16) = v28;
    *(_QWORD *)(v12 + 32) = v29;
    *(_QWORD *)(*(_QWORD *)(v2 + 56) + 8 * v11) = v19;
    ++*(_QWORD *)(v2 + 16);
  }
  v18 = v10 + 5;
  if (v10 + 5 >= v7)
  {
LABEL_37:
    swift_release();
    sub_1CA24E6B8();
    return v2;
  }
  v16 = *(_QWORD *)(v3 + 8 * v18);
  if (v16)
  {
    v17 = v10 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    v17 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v17 >= v7)
      goto LABEL_37;
    v16 = *(_QWORD *)(v3 + 8 * v17);
    ++v18;
    if (v16)
      goto LABEL_27;
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_1CA32AB64(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t result;
  int64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  int64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  int64_t v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  _OWORD v32[2];
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  _OWORD v36[2];
  _OWORD v37[3];
  _OWORD v38[2];
  __int128 v39;
  _OWORD v40[2];

  if (*(_QWORD *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED872560);
    v2 = sub_1CA85C0C8();
  }
  else
  {
    v2 = MEMORY[0x1E0DEE9E0];
  }
  v28 = a1 + 64;
  v3 = -1 << *(_BYTE *)(a1 + 32);
  if (-v3 < 64)
    v4 = ~(-1 << -(char)v3);
  else
    v4 = -1;
  v5 = v4 & *(_QWORD *)(a1 + 64);
  v27 = (unint64_t)(63 - v3) >> 6;
  v6 = v2 + 64;
  swift_bridgeObjectRetain();
  result = swift_retain();
  v8 = 0;
  while (1)
  {
    if (v5)
    {
      v11 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      v12 = v11 | (v8 << 6);
      goto LABEL_28;
    }
    v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v13 >= v27)
      goto LABEL_37;
    v14 = *(_QWORD *)(v28 + 8 * v13);
    v15 = v8 + 1;
    if (!v14)
    {
      v15 = v8 + 2;
      if (v8 + 2 >= v27)
        goto LABEL_37;
      v14 = *(_QWORD *)(v28 + 8 * v15);
      if (!v14)
      {
        v15 = v8 + 3;
        if (v8 + 3 >= v27)
          goto LABEL_37;
        v14 = *(_QWORD *)(v28 + 8 * v15);
        if (!v14)
        {
          v15 = v8 + 4;
          if (v8 + 4 >= v27)
            goto LABEL_37;
          v14 = *(_QWORD *)(v28 + 8 * v15);
          if (!v14)
            break;
        }
      }
    }
LABEL_27:
    v5 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v15 << 6);
    v8 = v15;
LABEL_28:
    v17 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v12);
    v19 = *v17;
    v18 = v17[1];
    sub_1CA266A08(*(_QWORD *)(a1 + 56) + 32 * v12, (uint64_t)v40);
    *(_QWORD *)&v39 = v19;
    *((_QWORD *)&v39 + 1) = v18;
    v37[2] = v39;
    v38[0] = v40[0];
    v38[1] = v40[1];
    *(_QWORD *)&v37[0] = v19;
    *((_QWORD *)&v37[0] + 1) = v18;
    swift_bridgeObjectRetain();
    swift_dynamicCast();
    sub_1CA266A44(v38, v32);
    v33 = v29;
    v34 = v30;
    v35 = v31;
    sub_1CA266A44(v32, v36);
    v29 = v33;
    v30 = v34;
    v31 = v35;
    sub_1CA266A44(v36, v37);
    sub_1CA266A44(v37, &v33);
    result = sub_1CA85BE64();
    v20 = -1 << *(_BYTE *)(v2 + 32);
    v21 = result & ~v20;
    v22 = v21 >> 6;
    if (((-1 << v21) & ~*(_QWORD *)(v6 + 8 * (v21 >> 6))) != 0)
    {
      v9 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v6 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v23 = 0;
      v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v25 = v22 == v24;
        if (v22 == v24)
          v22 = 0;
        v23 |= v25;
        v26 = *(_QWORD *)(v6 + 8 * v22);
      }
      while (v26 == -1);
      v9 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(_QWORD *)(v6 + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v9;
    v10 = *(_QWORD *)(v2 + 48) + 40 * v9;
    *(_OWORD *)v10 = v29;
    *(_OWORD *)(v10 + 16) = v30;
    *(_QWORD *)(v10 + 32) = v31;
    result = (uint64_t)sub_1CA266A44(&v33, (_OWORD *)(*(_QWORD *)(v2 + 56) + 32 * v9));
    ++*(_QWORD *)(v2 + 16);
  }
  v16 = v8 + 5;
  if (v8 + 5 >= v27)
  {
LABEL_37:
    swift_release();
    sub_1CA24E6B8();
    return v2;
  }
  v14 = *(_QWORD *)(v28 + 8 * v16);
  if (v14)
  {
    v15 = v8 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    v15 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v15 >= v27)
      goto LABEL_37;
    v14 = *(_QWORD *)(v28 + 8 * v15);
    ++v16;
    if (v14)
      goto LABEL_27;
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_1CA32AF28(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t result;
  int64_t v8;
  unint64_t v9;
  _QWORD *v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  int64_t v16;
  void *v17;
  id v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  int64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  if (*(_QWORD *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94B0A0);
    v2 = sub_1CA85C0C8();
  }
  else
  {
    v2 = MEMORY[0x1E0DEE9E0];
  }
  v27 = a1 + 64;
  v3 = -1 << *(_BYTE *)(a1 + 32);
  if (-v3 < 64)
    v4 = ~(-1 << -(char)v3);
  else
    v4 = -1;
  v5 = v4 & *(_QWORD *)(a1 + 64);
  v26 = (unint64_t)(63 - v3) >> 6;
  v6 = v2 + 64;
  swift_bridgeObjectRetain();
  result = swift_retain();
  v8 = 0;
  while (1)
  {
    if (v5)
    {
      v11 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      v12 = v11 | (v8 << 6);
      goto LABEL_28;
    }
    v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
LABEL_40:
      __break(1u);
      goto LABEL_41;
    }
    if (v13 >= v26)
      goto LABEL_39;
    v14 = *(_QWORD *)(v27 + 8 * v13);
    v15 = v8 + 1;
    if (!v14)
    {
      v15 = v8 + 2;
      if (v8 + 2 >= v26)
        goto LABEL_39;
      v14 = *(_QWORD *)(v27 + 8 * v15);
      if (!v14)
      {
        v15 = v8 + 3;
        if (v8 + 3 >= v26)
          goto LABEL_39;
        v14 = *(_QWORD *)(v27 + 8 * v15);
        if (!v14)
        {
          v15 = v8 + 4;
          if (v8 + 4 >= v26)
            goto LABEL_39;
          v14 = *(_QWORD *)(v27 + 8 * v15);
          if (!v14)
            break;
        }
      }
    }
LABEL_27:
    v5 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v15 << 6);
    v8 = v15;
LABEL_28:
    v17 = *(void **)(*(_QWORD *)(a1 + 56) + 8 * v12);
    swift_bridgeObjectRetain();
    v18 = v17;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8721A0);
    swift_dynamicCast();
    sub_1CA85C368();
    sub_1CA85C380();
    if (v29)
    {
      swift_bridgeObjectRetain();
      sub_1CA85B4B0();
      swift_bridgeObjectRelease();
    }
    result = sub_1CA85C3B0();
    v19 = -1 << *(_BYTE *)(v2 + 32);
    v20 = result & ~v19;
    v21 = v20 >> 6;
    if (((-1 << v20) & ~*(_QWORD *)(v6 + 8 * (v20 >> 6))) != 0)
    {
      v9 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v6 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v22 = 0;
      v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_40;
        }
        v24 = v21 == v23;
        if (v21 == v23)
          v21 = 0;
        v22 |= v24;
        v25 = *(_QWORD *)(v6 + 8 * v21);
      }
      while (v25 == -1);
      v9 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(_QWORD *)(v6 + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v9;
    v10 = (_QWORD *)(*(_QWORD *)(v2 + 48) + 16 * v9);
    *v10 = v28;
    v10[1] = v29;
    *(_QWORD *)(*(_QWORD *)(v2 + 56) + 8 * v9) = v18;
    ++*(_QWORD *)(v2 + 16);
  }
  v16 = v8 + 5;
  if (v8 + 5 >= v26)
  {
LABEL_39:
    swift_release();
    sub_1CA24E6B8();
    return v2;
  }
  v14 = *(_QWORD *)(v27 + 8 * v16);
  if (v14)
  {
    v15 = v8 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    v15 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v15 >= v26)
      goto LABEL_39;
    v14 = *(_QWORD *)(v27 + 8 * v15);
    ++v16;
    if (v14)
      goto LABEL_27;
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1CA32B284(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t result;
  char *v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  int64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  char v34;
  unint64_t v35;
  BOOL v36;
  uint64_t v37;
  _QWORD v38[2];
  int64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  int64_t v44;
  __int128 v45;
  __int128 v46;
  uint64_t v47;
  __int128 v48;
  __int128 v49;
  uint64_t v50;

  v2 = sub_1CA85AB98();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v42 = (char *)v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94DB60);
  MEMORY[0x1E0C80A78](v41);
  v6 = (char *)v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v38 - v8;
  v43 = a1;
  if (*(_QWORD *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94DB68);
    v10 = sub_1CA85C0C8();
  }
  else
  {
    v10 = MEMORY[0x1E0DEE9E0];
  }
  v11 = *(_QWORD *)(v43 + 64);
  v40 = v43 + 64;
  v12 = -1 << *(_BYTE *)(v43 + 32);
  if (-v12 < 64)
    v13 = ~(-1 << -(char)v12);
  else
    v13 = -1;
  v14 = v13 & v11;
  v38[1] = -1 << *(_BYTE *)(v43 + 32);
  v39 = (unint64_t)(63 - v12) >> 6;
  v15 = v10 + 64;
  swift_bridgeObjectRetain();
  result = swift_retain();
  v44 = 0;
  v17 = v42;
  while (1)
  {
    if (v14)
    {
      v20 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v21 = v20 | (v44 << 6);
      goto LABEL_28;
    }
    v22 = v44 + 1;
    if (__OFADD__(v44, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v22 >= v39)
      goto LABEL_37;
    v23 = *(_QWORD *)(v40 + 8 * v22);
    v24 = v44 + 1;
    if (!v23)
    {
      v24 = v44 + 2;
      if (v44 + 2 >= v39)
        goto LABEL_37;
      v23 = *(_QWORD *)(v40 + 8 * v24);
      if (!v23)
      {
        v24 = v44 + 3;
        if (v44 + 3 >= v39)
          goto LABEL_37;
        v23 = *(_QWORD *)(v40 + 8 * v24);
        if (!v23)
        {
          v24 = v44 + 4;
          if (v44 + 4 >= v39)
            goto LABEL_37;
          v23 = *(_QWORD *)(v40 + 8 * v24);
          if (!v23)
            break;
        }
      }
    }
LABEL_27:
    v14 = (v23 - 1) & v23;
    v21 = __clz(__rbit64(v23)) + (v24 << 6);
    v44 = v24;
LABEL_28:
    v26 = v43;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v9, *(_QWORD *)(v43 + 48) + *(_QWORD *)(v3 + 72) * v21, v2);
    v27 = *(_QWORD *)(*(_QWORD *)(v26 + 56) + 8 * v21);
    v28 = v41;
    *(_QWORD *)&v9[*(int *)(v41 + 48)] = v27;
    sub_1CA336290((uint64_t)v9, (uint64_t)v6);
    v29 = *(int *)(v28 + 48);
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v17, v6, v2);
    swift_bridgeObjectRetain();
    swift_dynamicCast();
    v30 = *(_QWORD *)&v6[v29];
    v50 = v47;
    v48 = v45;
    v49 = v46;
    result = sub_1CA85BE64();
    v31 = -1 << *(_BYTE *)(v10 + 32);
    v32 = result & ~v31;
    v33 = v32 >> 6;
    if (((-1 << v32) & ~*(_QWORD *)(v15 + 8 * (v32 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v32) & ~*(_QWORD *)(v15 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v34 = 0;
      v35 = (unint64_t)(63 - v31) >> 6;
      do
      {
        if (++v33 == v35 && (v34 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v36 = v33 == v35;
        if (v33 == v35)
          v33 = 0;
        v34 |= v36;
        v37 = *(_QWORD *)(v15 + 8 * v33);
      }
      while (v37 == -1);
      v18 = __clz(__rbit64(~v37)) + (v33 << 6);
    }
    *(_QWORD *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = *(_QWORD *)(v10 + 48) + 40 * v18;
    *(_OWORD *)v19 = v45;
    *(_OWORD *)(v19 + 16) = v46;
    *(_QWORD *)(v19 + 32) = v47;
    *(_QWORD *)(*(_QWORD *)(v10 + 56) + 8 * v18) = v30;
    ++*(_QWORD *)(v10 + 16);
  }
  v25 = v44 + 5;
  if (v44 + 5 >= v39)
  {
LABEL_37:
    swift_release();
    sub_1CA24E6B8();
    return v10;
  }
  v23 = *(_QWORD *)(v40 + 8 * v25);
  if (v23)
  {
    v24 = v44 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    v24 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v24 >= v39)
      goto LABEL_37;
    v23 = *(_QWORD *)(v40 + 8 * v24);
    ++v25;
    if (v23)
      goto LABEL_27;
  }
LABEL_39:
  __break(1u);
  return result;
}

unint64_t sub_1CA32B6A4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _OWORD *v6;
  __int128 *v7;
  uint64_t *v8;
  uint64_t *v9;
  unint64_t result;
  uint64_t *v11;
  uint64_t *v12;
  uint64_t v13;
  __int128 *v14;
  _OWORD *v15;
  uint64_t *v16;
  _OWORD *v17;
  unint64_t i;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  int64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  uint64_t *v30;
  uint64_t v31;
  BOOL v32;
  uint64_t v33;
  int64_t v34;
  uint64_t v35;
  int64_t v36;
  uint64_t v37;
  __int128 v38[3];
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __int128 v42;
  uint64_t v43;
  _OWORD v44[3];
  _OWORD v45[3];
  __int128 v46;
  _OWORD v47[3];

  v1 = a1;
  if (*(_QWORD *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94AEB8);
    v2 = (_QWORD *)sub_1CA85C0C8();
  }
  else
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  }
  v35 = v1 + 64;
  v3 = -1 << *(_BYTE *)(v1 + 32);
  if (-v3 < 64)
    v4 = ~(-1 << -(char)v3);
  else
    v4 = -1;
  v5 = v4 & *(_QWORD *)(v1 + 64);
  v34 = (unint64_t)(63 - v3) >> 6;
  v6 = v47;
  v7 = v45;
  v8 = &v41;
  v9 = &v43;
  result = swift_bridgeObjectRetain();
  v36 = 0;
  if (v5)
    goto LABEL_10;
LABEL_11:
  v19 = v36 + 1;
  if (__OFADD__(v36, 1))
    goto LABEL_35;
  if (v19 >= v34)
    goto LABEL_32;
  v20 = *(_QWORD *)(v35 + 8 * v19);
  v21 = v36 + 1;
  if (!v20)
  {
    v21 = v36 + 2;
    if (v36 + 2 >= v34)
      goto LABEL_32;
    v20 = *(_QWORD *)(v35 + 8 * v21);
    if (!v20)
    {
      v21 = v36 + 3;
      if (v36 + 3 >= v34)
        goto LABEL_32;
      v20 = *(_QWORD *)(v35 + 8 * v21);
      if (!v20)
      {
        v21 = v36 + 4;
        if (v36 + 4 >= v34)
          goto LABEL_32;
        v20 = *(_QWORD *)(v35 + 8 * v21);
        if (!v20)
        {
          v22 = v36 + 5;
          if (v36 + 5 < v34)
          {
            v20 = *(_QWORD *)(v35 + 8 * v22);
            if (v20)
            {
              v21 = v36 + 5;
              goto LABEL_26;
            }
            while (1)
            {
              v21 = v22 + 1;
              if (__OFADD__(v22, 1))
                goto LABEL_36;
              if (v21 >= v34)
                break;
              v20 = *(_QWORD *)(v35 + 8 * v21);
              ++v22;
              if (v20)
                goto LABEL_26;
            }
          }
LABEL_32:
          sub_1CA24E6B8();
          return (unint64_t)v2;
        }
      }
    }
  }
LABEL_26:
  v36 = v21;
  v37 = (v20 - 1) & v20;
  for (i = __clz(__rbit64(v20)) + (v21 << 6); ; i = __clz(__rbit64(v5)) | (v36 << 6))
  {
    v23 = (uint64_t *)(*(_QWORD *)(v1 + 48) + 16 * i);
    v25 = *v23;
    v24 = v23[1];
    sub_1CA266970(*(_QWORD *)(v1 + 56) + 48 * i, (uint64_t)v6);
    *(_QWORD *)&v46 = v25;
    *((_QWORD *)&v46 + 1) = v24;
    v44[2] = v46;
    v45[0] = v47[0];
    v45[1] = v47[1];
    v45[2] = v47[2];
    v39 = v25;
    v40 = v24;
    sub_1CA2669B4(v7, v38);
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94DB58);
    swift_dynamicCast();
    v27 = v39;
    v26 = v40;
    sub_1CA266A44(v8, v9);
    sub_1CA266A44(v9, v44);
    sub_1CA266A44(v44, &v42);
    result = sub_1CA25081C(v27, v26);
    v28 = result;
    if ((v29 & 1) != 0)
    {
      v11 = v9;
      v12 = v8;
      v13 = v1;
      v14 = v7;
      v15 = v6;
      v16 = (uint64_t *)(v2[6] + 16 * result);
      swift_bridgeObjectRelease();
      *v16 = v27;
      v16[1] = v26;
      v6 = v15;
      v7 = v14;
      v1 = v13;
      v8 = v12;
      v9 = v11;
      v17 = (_OWORD *)(v2[7] + 32 * v28);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
      result = (unint64_t)sub_1CA266A44(&v42, v17);
      v5 = v37;
      if (!v37)
        goto LABEL_11;
      goto LABEL_10;
    }
    if (v2[2] >= v2[3])
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v30 = (uint64_t *)(v2[6] + 16 * result);
    *v30 = v27;
    v30[1] = v26;
    result = (unint64_t)sub_1CA266A44(&v42, (_OWORD *)(v2[7] + 32 * result));
    v31 = v2[2];
    v32 = __OFADD__(v31, 1);
    v33 = v31 + 1;
    if (v32)
      goto LABEL_34;
    v2[2] = v33;
    v5 = v37;
    if (!v37)
      goto LABEL_11;
LABEL_10:
    v37 = (v5 - 1) & v5;
  }
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_1CA32BA4C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t result;
  int64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  int64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  int64_t v27;
  uint64_t v28;
  _OWORD v29[3];
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  uint64_t v38;
  _QWORD v39[7];
  __int128 v40[3];
  __int128 v41;
  _OWORD v42[3];

  if (*(_QWORD *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED872560);
    v2 = sub_1CA85C0C8();
  }
  else
  {
    v2 = MEMORY[0x1E0DEE9E0];
  }
  v28 = a1 + 64;
  v3 = -1 << *(_BYTE *)(a1 + 32);
  if (-v3 < 64)
    v4 = ~(-1 << -(char)v3);
  else
    v4 = -1;
  v5 = v4 & *(_QWORD *)(a1 + 64);
  v27 = (unint64_t)(63 - v3) >> 6;
  v6 = v2 + 64;
  swift_bridgeObjectRetain();
  result = swift_retain();
  v8 = 0;
  while (1)
  {
    if (v5)
    {
      v11 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      v12 = v11 | (v8 << 6);
      goto LABEL_28;
    }
    v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v13 >= v27)
      goto LABEL_37;
    v14 = *(_QWORD *)(v28 + 8 * v13);
    v15 = v8 + 1;
    if (!v14)
    {
      v15 = v8 + 2;
      if (v8 + 2 >= v27)
        goto LABEL_37;
      v14 = *(_QWORD *)(v28 + 8 * v15);
      if (!v14)
      {
        v15 = v8 + 3;
        if (v8 + 3 >= v27)
          goto LABEL_37;
        v14 = *(_QWORD *)(v28 + 8 * v15);
        if (!v14)
        {
          v15 = v8 + 4;
          if (v8 + 4 >= v27)
            goto LABEL_37;
          v14 = *(_QWORD *)(v28 + 8 * v15);
          if (!v14)
            break;
        }
      }
    }
LABEL_27:
    v5 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v15 << 6);
    v8 = v15;
LABEL_28:
    v17 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v12);
    v19 = *v17;
    v18 = v17[1];
    sub_1CA266970(*(_QWORD *)(a1 + 56) + 48 * v12, (uint64_t)v42);
    *(_QWORD *)&v41 = v19;
    *((_QWORD *)&v41 + 1) = v18;
    *(_OWORD *)&v39[5] = v41;
    v40[0] = v42[0];
    v40[1] = v42[1];
    v40[2] = v42[2];
    v30 = v19;
    v31 = v18;
    swift_bridgeObjectRetain();
    swift_dynamicCast();
    sub_1CA2669B4(v40, v29);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94DB58);
    swift_dynamicCast();
    v36 = v32;
    v37 = v33;
    v38 = v34;
    sub_1CA266A44(&v35, v39);
    v32 = v36;
    v33 = v37;
    v34 = v38;
    sub_1CA266A44(v39, v29);
    sub_1CA266A44(v29, &v36);
    result = sub_1CA85BE64();
    v20 = -1 << *(_BYTE *)(v2 + 32);
    v21 = result & ~v20;
    v22 = v21 >> 6;
    if (((-1 << v21) & ~*(_QWORD *)(v6 + 8 * (v21 >> 6))) != 0)
    {
      v9 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v6 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v23 = 0;
      v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v25 = v22 == v24;
        if (v22 == v24)
          v22 = 0;
        v23 |= v25;
        v26 = *(_QWORD *)(v6 + 8 * v22);
      }
      while (v26 == -1);
      v9 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(_QWORD *)(v6 + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v9;
    v10 = *(_QWORD *)(v2 + 48) + 40 * v9;
    *(_OWORD *)v10 = v32;
    *(_OWORD *)(v10 + 16) = v33;
    *(_QWORD *)(v10 + 32) = v34;
    result = (uint64_t)sub_1CA266A44(&v36, (_OWORD *)(*(_QWORD *)(v2 + 56) + 32 * v9));
    ++*(_QWORD *)(v2 + 16);
  }
  v16 = v8 + 5;
  if (v8 + 5 >= v27)
  {
LABEL_37:
    swift_release();
    sub_1CA24E6B8();
    return v2;
  }
  v14 = *(_QWORD *)(v28 + 8 * v16);
  if (v14)
  {
    v15 = v8 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    v15 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v15 >= v27)
      goto LABEL_37;
    v14 = *(_QWORD *)(v28 + 8 * v15);
    ++v16;
    if (v14)
      goto LABEL_27;
  }
LABEL_39:
  __break(1u);
  return result;
}

unint64_t sub_1CA32BE48(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t *v6;
  uint64_t *v7;
  unint64_t result;
  int64_t i;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  _OWORD *v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  int64_t v23;
  uint64_t *v24;
  unint64_t v25;
  char v26;
  uint64_t *v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;
  int64_t v31;
  uint64_t v32;
  int64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  uint64_t v39;
  _OWORD v40[2];

  v1 = a1;
  if (*(_QWORD *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94AEB8);
    v2 = (_QWORD *)sub_1CA85C0C8();
  }
  else
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  }
  v32 = v1 + 64;
  v3 = -1 << *(_BYTE *)(v1 + 32);
  if (-v3 < 64)
    v4 = ~(-1 << -(char)v3);
  else
    v4 = -1;
  v5 = v4 & *(_QWORD *)(v1 + 64);
  v31 = (unint64_t)(63 - v3) >> 6;
  v6 = &v37;
  v7 = &v39;
  result = swift_bridgeObjectRetain();
  i = 0;
  v10 = MEMORY[0x1E0DEE9B8] + 8;
  v11 = MEMORY[0x1E0DEA968];
  if (v5)
    goto LABEL_10;
LABEL_11:
  v20 = i + 1;
  if (__OFADD__(i, 1))
    goto LABEL_35;
  if (v20 >= v31)
    goto LABEL_32;
  v21 = *(_QWORD *)(v32 + 8 * v20);
  v22 = i + 1;
  if (!v21)
  {
    v22 = i + 2;
    if (i + 2 >= v31)
      goto LABEL_32;
    v21 = *(_QWORD *)(v32 + 8 * v22);
    if (!v21)
    {
      v22 = i + 3;
      if (i + 3 >= v31)
        goto LABEL_32;
      v21 = *(_QWORD *)(v32 + 8 * v22);
      if (!v21)
      {
        v22 = i + 4;
        if (i + 4 >= v31)
          goto LABEL_32;
        v21 = *(_QWORD *)(v32 + 8 * v22);
        if (!v21)
        {
          v23 = i + 5;
          if (i + 5 < v31)
          {
            v21 = *(_QWORD *)(v32 + 8 * v23);
            if (v21)
            {
              v22 = i + 5;
              goto LABEL_26;
            }
            while (1)
            {
              v22 = v23 + 1;
              if (__OFADD__(v23, 1))
                goto LABEL_36;
              if (v22 >= v31)
                break;
              v21 = *(_QWORD *)(v32 + 8 * v22);
              ++v23;
              if (v21)
                goto LABEL_26;
            }
          }
LABEL_32:
          sub_1CA24E6B8();
          return (unint64_t)v2;
        }
      }
    }
  }
LABEL_26:
  v34 = (v21 - 1) & v21;
  v19 = __clz(__rbit64(v21)) + (v22 << 6);
  for (i = v22; ; v19 = __clz(__rbit64(v5)) | (i << 6))
  {
    v24 = (uint64_t *)(*(_QWORD *)(v1 + 48) + 16 * v19);
    v35 = *v24;
    v36 = v24[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_dynamicCast();
    sub_1CA266A44(v6, v7);
    sub_1CA266A44(v7, v40);
    sub_1CA266A44(v40, &v38);
    result = sub_1CA25081C(v35, v36);
    v25 = result;
    if ((v26 & 1) != 0)
    {
      v33 = i;
      v12 = v7;
      v13 = v6;
      v14 = v1;
      v15 = v11;
      v16 = v10;
      v17 = (uint64_t *)(v2[6] + 16 * result);
      swift_bridgeObjectRelease();
      *v17 = v35;
      v17[1] = v36;
      v10 = v16;
      v11 = v15;
      v1 = v14;
      v6 = v13;
      v7 = v12;
      i = v33;
      v18 = (_OWORD *)(v2[7] + 32 * v25);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
      result = (unint64_t)sub_1CA266A44(&v38, v18);
      v5 = v34;
      if (!v34)
        goto LABEL_11;
      goto LABEL_10;
    }
    if (v2[2] >= v2[3])
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v27 = (uint64_t *)(v2[6] + 16 * result);
    *v27 = v35;
    v27[1] = v36;
    result = (unint64_t)sub_1CA266A44(&v38, (_OWORD *)(v2[7] + 32 * result));
    v28 = v2[2];
    v29 = __OFADD__(v28, 1);
    v30 = v28 + 1;
    if (v29)
      goto LABEL_34;
    v2[2] = v30;
    v5 = v34;
    if (!v34)
      goto LABEL_11;
LABEL_10:
    v34 = (v5 - 1) & v5;
  }
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_1CA32C1B0(uint64_t a1, _QWORD *a2, float (*a3)(_QWORD *, uint64_t *), uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v25;
  _QWORD *v26;
  char v27;
  float v28;
  uint64_t result;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  float (*v47)(_QWORD *, uint64_t *);
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;

  v47 = a3;
  v48 = a4;
  v51 = a1;
  v6 = sub_1CA85AB98();
  v7 = MEMORY[0x1E0C80A78](v6);
  v49 = (uint64_t)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = v4;
  v9 = *(_QWORD *)(v4 + 16);
  v45 = v10;
  v46 = v7;
  if (a2)
  {
    v11 = *(_QWORD *)(v9 + 16);
    v12 = MEMORY[0x1E0DEE9D8];
    if (v11)
    {
      v52 = MEMORY[0x1E0DEE9D8];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1CA3FBA2C(0, v11, 0);
      v13 = 0;
      v12 = v52;
      do
      {
        swift_bridgeObjectRetain();
        v14 = swift_bridgeObjectRetain();
        v15 = sub_1CA332660(v14, a2);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v52 = v12;
        v17 = *(_QWORD *)(v12 + 16);
        v16 = *(_QWORD *)(v12 + 24);
        if (v17 >= v16 >> 1)
        {
          sub_1CA3FBA2C(v16 > 1, v17 + 1, 1);
          v12 = v52;
        }
        ++v13;
        *(_QWORD *)(v12 + 16) = v17 + 1;
        *(_QWORD *)(v12 + 8 * v17 + 32) = v15;
      }
      while (v11 != v13);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    v18 = *(_QWORD *)(v12 + 16);
    if (v18)
      goto LABEL_9;
LABEL_19:
    v20 = MEMORY[0x1E0DEE9D8];
    goto LABEL_20;
  }
  swift_bridgeObjectRetain();
  v12 = v9;
  v18 = *(_QWORD *)(v9 + 16);
  if (!v18)
    goto LABEL_19;
LABEL_9:
  swift_bridgeObjectRetain();
  v19 = 0;
  v20 = MEMORY[0x1E0DEE9D8];
  do
  {
    v23 = *(_QWORD *)(v12 + 8 * v19 + 32);
    if (*(_QWORD *)(v23 + 16) >= 2uLL)
    {
      swift_bridgeObjectRetain();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v52 = v20;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_1CA3FBA2C(0, *(_QWORD *)(v20 + 16) + 1, 1);
        v20 = v52;
      }
      v22 = *(_QWORD *)(v20 + 16);
      v21 = *(_QWORD *)(v20 + 24);
      if (v22 >= v21 >> 1)
      {
        sub_1CA3FBA2C(v21 > 1, v22 + 1, 1);
        v20 = v52;
      }
      *(_QWORD *)(v20 + 16) = v22 + 1;
      *(_QWORD *)(v20 + 8 * v22 + 32) = v23;
    }
    ++v19;
  }
  while (v18 != v19);
  swift_bridgeObjectRelease();
LABEL_20:
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v54 = v20;
  if (!*(_QWORD *)(v20 + 16))
  {
    swift_release_n();
    return MEMORY[0x1E0DEE9D8];
  }
  sub_1CA32D0E0(v20, v49);
  swift_release();
  v25 = *(_QWORD *)(v20 + 16);
  v26 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  if (!v25 || v51 <= 0)
  {
LABEL_42:
    (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v49, v46);
    swift_bridgeObjectRelease();
    return (uint64_t)v26;
  }
  v27 = *(_BYTE *)(v50 + 24);
  while (1)
  {
    swift_beginAccess();
    if ((v27 & 1) != 0)
    {
      v28 = (float)((float)sub_1CA32602C(16777217) * 0.000000059605) + 0.0;
      swift_endAccess();
      result = sub_1CA326100(v28);
      v30 = result;
    }
    else
    {
      v30 = sub_1CA325F98(v25);
      result = swift_endAccess();
    }
    if ((v30 & 0x8000000000000000) != 0)
      break;
    if (v30 >= *(_QWORD *)(v20 + 16))
      goto LABEL_46;
    v31 = *(_QWORD *)(v20 + 8 * v30 + 32);
    v32 = *(_QWORD *)(v31 + 16);
    result = swift_beginAccess();
    if (!v32)
      goto LABEL_47;
    swift_bridgeObjectRetain();
    v33 = sub_1CA325F98(v32);
    result = swift_endAccess();
    if ((v33 & 0x8000000000000000) != 0)
      goto LABEL_48;
    if (v33 >= *(_QWORD *)(v31 + 16))
      goto LABEL_49;
    v34 = v31 + 16 * v33;
    v35 = *(_QWORD *)(v34 + 40);
    v52 = *(_QWORD *)(v34 + 32);
    v53 = v35;
    MEMORY[0x1E0C80A78](v35);
    *(&v45 - 2) = (uint64_t)&v52;
    swift_bridgeObjectRetain();
    v36 = sub_1CA3974C8((uint64_t)sub_1CA33648C, (uint64_t)(&v45 - 4), v31);
    if (*(_QWORD *)(v36 + 16))
    {
      v38 = v52;
      v37 = v53;
      v39 = sub_1CA32D2D4(v52, v53, v36, v47);
      v41 = v40;
      swift_bridgeObjectRelease();
      if (v41)
      {
        swift_bridgeObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v26 = sub_1CA26D848(0, v26[2] + 1, 1, v26);
        v43 = v26[2];
        v42 = v26[3];
        if (v43 >= v42 >> 1)
          v26 = sub_1CA26D848((_QWORD *)(v42 > 1), v43 + 1, 1, v26);
        v26[2] = v43 + 1;
        v44 = &v26[4 * v43];
        v44[4] = v38;
        v44[5] = v37;
        v44[6] = v39;
        v44[7] = v41;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      sub_1CA32C7A4(v30);
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    v20 = v54;
    v25 = *(_QWORD *)(v54 + 16);
    if (!v25 || v26[2] >= v51)
      goto LABEL_42;
  }
  __break(1u);
LABEL_46:
  __break(1u);
LABEL_47:
  __break(1u);
LABEL_48:
  __break(1u);
LABEL_49:
  __break(1u);
  return result;
}

uint64_t sub_1CA32C6C8(unint64_t a1)
{
  _QWORD **v1;
  _QWORD *v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t result;

  v3 = *v1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v3 = sub_1CA42C218(v3);
  v4 = v3[2];
  if (v4 <= a1)
  {
    __break(1u);
  }
  else
  {
    v5 = v4 - 1;
    v6 = v4 - 1 - a1;
    if (v6 >= 0)
    {
      v7 = &v3[2 * a1];
      v8 = v7[4];
      memmove(v7 + 4, v7 + 6, 16 * v6);
      v3[2] = v5;
      *v1 = v3;
      return v8;
    }
  }
  result = sub_1CA85C0D4();
  __break(1u);
  return result;
}

uint64_t sub_1CA32C7A4(unint64_t a1)
{
  _QWORD **v1;
  _QWORD *v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t result;

  v3 = *v1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v3 = sub_1CA42C258(v3);
  v4 = v3[2];
  if (v4 <= a1)
  {
    __break(1u);
  }
  else
  {
    v5 = v4 - 1;
    v6 = v4 - 1 - a1;
    if (v6 >= 0)
    {
      v7 = &v3[a1];
      v8 = v7[4];
      memmove(v7 + 4, v7 + 5, 8 * v6);
      v3[2] = v5;
      *v1 = v3;
      return v8;
    }
  }
  result = sub_1CA85C0D4();
  __break(1u);
  return result;
}

uint64_t sub_1CA32C874(uint64_t a1, _QWORD *a2, float (*a3)(_QWORD *, _QWORD *), uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  float v31;
  unint64_t v32;
  float v33;
  uint64_t v34;
  float v35;
  float v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  unint64_t v64;
  unint64_t v65;
  _QWORD *v66;
  _QWORD *v67;
  _QWORD *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t result;
  char v73[8];
  uint64_t v74;
  uint64_t *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  float (*v80)(_QWORD *, _QWORD *);
  uint64_t v81;
  int v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  _QWORD *v86;
  _QWORD *v87;
  uint64_t v88;
  _QWORD *v89;

  v80 = a3;
  v81 = a4;
  v83 = a1;
  v6 = sub_1CA85AB98();
  v78 = *(_QWORD *)(v6 - 8);
  v79 = v6;
  v7 = MEMORY[0x1E0C80A78](v6);
  v77 = (uint64_t)&v76 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v76 - v9;
  v84 = (char *)&v76 - v9;
  v85 = v4;
  v11 = *(_QWORD *)(v4 + 16);
  if (a2)
  {
    v12 = *(_QWORD *)(v11 + 16);
    v13 = MEMORY[0x1E0DEE9D8];
    if (v12)
    {
      v87 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1CA3FBA2C(0, v12, 0);
      v14 = 0;
      v13 = (uint64_t)v87;
      do
      {
        swift_bridgeObjectRetain();
        v15 = swift_bridgeObjectRetain();
        v16 = sub_1CA332660(v15, a2);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v87 = (_QWORD *)v13;
        v18 = *(_QWORD *)(v13 + 16);
        v17 = *(_QWORD *)(v13 + 24);
        if (v18 >= v17 >> 1)
        {
          sub_1CA3FBA2C(v17 > 1, v18 + 1, 1);
          v13 = (uint64_t)v87;
        }
        ++v14;
        *(_QWORD *)(v13 + 16) = v18 + 1;
        *(_QWORD *)(v13 + 8 * v18 + 32) = v16;
      }
      while (v12 != v14);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v10 = v84;
    }
    v19 = *(_QWORD *)(v13 + 16);
    if (v19)
      goto LABEL_9;
  }
  else
  {
    swift_bridgeObjectRetain();
    v13 = v11;
    v19 = *(_QWORD *)(v11 + 16);
    if (v19)
    {
LABEL_9:
      v20 = v13 + 32;
      v21 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      do
      {
        v24 = *(_QWORD *)v20;
        if (*(_QWORD *)(*(_QWORD *)v20 + 16))
        {
          swift_bridgeObjectRetain();
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v87 = v21;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            sub_1CA3FBA2C(0, v21[2] + 1, 1);
            v21 = v87;
          }
          v23 = v21[2];
          v22 = v21[3];
          if (v23 >= v22 >> 1)
          {
            sub_1CA3FBA2C(v22 > 1, v23 + 1, 1);
            v21 = v87;
          }
          v21[2] = v23 + 1;
          v21[v23 + 4] = v24;
        }
        v20 += 8;
        --v19;
      }
      while (v19);
      goto LABEL_19;
    }
  }
  v21 = (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_19:
  swift_bridgeObjectRelease();
  if (v21[2] < 2uLL)
  {
    swift_release();
    return MEMORY[0x1E0DEE9D8];
  }
  v27 = v85;
  sub_1CA32D0E0((uint64_t)v21, (uint64_t)v10);
  if (v83 <= 0)
  {
    swift_release();
    v26 = (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_72:
    (*(void (**)(char *, uint64_t))(v78 + 8))(v10, v79);
    return (uint64_t)v26;
  }
  v82 = *(unsigned __int8 *)(v27 + 24);
  v26 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  while (1)
  {
    v86 = v26;
    if ((v82 & 1) != 0)
      break;
    v37 = v21[2];
    swift_beginAccess();
    if (!v37)
      goto LABEL_81;
    sub_1CA85B168();
    sub_1CA23CC98((unint64_t *)&qword_1EF94D7C0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D77CF0], MEMORY[0x1E0D77D00]);
    swift_bridgeObjectRetain();
    v38 = sub_1CA85B48C();
    v32 = ((unint64_t)v38 * (unsigned __int128)v37) >> 64;
    if (v37 > v38 * v37)
    {
      v39 = -(uint64_t)v37 % v37;
      if (v39 > v38 * v37)
      {
        do
          v40 = sub_1CA85B48C();
        while (v39 > v40 * v37);
        v32 = ((unint64_t)v40 * (unsigned __int128)v37) >> 64;
      }
    }
    swift_endAccess();
LABEL_48:
    v41 = v21;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v41 = sub_1CA42C258(v21);
    v42 = v41[2];
    if (v32 >= v42)
      goto LABEL_76;
    v43 = v42 - 1;
    v44 = v42 - 1 - v32;
    if (v44 < 0)
      goto LABEL_83;
    v45 = &v41[v32];
    v46 = v45[4];
    memmove(v45 + 4, v45 + 5, 8 * v44);
    v41[2] = v43;
    v89 = v41;
    v47 = *(_QWORD *)(v46 + 16);
    swift_beginAccess();
    if (!v47)
      goto LABEL_77;
    sub_1CA85B168();
    sub_1CA23CC98((unint64_t *)&qword_1EF94D7C0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D77CF0], MEMORY[0x1E0D77D00]);
    v48 = sub_1CA85B48C();
    v49 = ((unint64_t)v48 * (unsigned __int128)v47) >> 64;
    if (v47 > v48 * v47)
    {
      v50 = -(uint64_t)v47 % v47;
      if (v50 > v48 * v47)
      {
        do
          v51 = sub_1CA85B48C();
        while (v50 > v51 * v47);
        v49 = ((unint64_t)v51 * (unsigned __int128)v47) >> 64;
      }
    }
    swift_endAccess();
    if (v49 >= *(_QWORD *)(v46 + 16))
      goto LABEL_78;
    v52 = v46 + 16 * v49;
    v54 = *(_QWORD *)(v52 + 32);
    v53 = *(_QWORD *)(v52 + 40);
    swift_bridgeObjectRetain();
    v55 = swift_bridgeObjectRelease();
    v87 = (_QWORD *)v54;
    v88 = v53;
    MEMORY[0x1E0C80A78](v55);
    v75 = (uint64_t *)&v87;
    swift_bridgeObjectRetain();
    v56 = sub_1CA49B554((void (*)(uint64_t *__return_ptr, uint64_t *))sub_1CA3362D8, (uint64_t)v73, (uint64_t)v41);
    swift_bridgeObjectRelease();
    v57 = swift_bridgeObjectRelease();
    v89 = v56;
    if (!v56[2])
    {
      MEMORY[0x1E0C80A78](v57);
      v75 = (uint64_t *)&v87;
      v68 = sub_1CA49B554((void (*)(uint64_t *__return_ptr, uint64_t *))sub_1CA3362F8, (uint64_t)v73, (uint64_t)v21);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v69 = v77;
      sub_1CA32D0E0((uint64_t)v68, v77);
      v71 = v78;
      v70 = v79;
      v10 = v84;
      (*(void (**)(char *, uint64_t))(v78 + 8))(v84, v79);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t, uint64_t))(v71 + 32))(v10, v69, v70);
      v21 = v68;
      goto LABEL_68;
    }
    v59 = (uint64_t)v87;
    v58 = v88;
    v60 = sub_1CA32D534((uint64_t)v87, v88, (uint64_t)&v89, v80, v81);
    v62 = v61;
    swift_bridgeObjectRelease();
    if (!v62)
    {
      swift_bridgeObjectRelease();
      v10 = v84;
LABEL_68:
      v26 = v86;
      if (!v21[2])
        goto LABEL_70;
      goto LABEL_69;
    }
    swift_bridgeObjectRetain();
    v63 = v86;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v63 = sub_1CA26D848(0, v63[2] + 1, 1, v63);
    v65 = v63[2];
    v64 = v63[3];
    v66 = v63;
    if (v65 >= v64 >> 1)
      v66 = sub_1CA26D848((_QWORD *)(v64 > 1), v65 + 1, 1, v63);
    v66[2] = v65 + 1;
    v26 = v66;
    v67 = &v66[4 * v65];
    v67[4] = v59;
    v67[5] = v58;
    v67[6] = v60;
    v67[7] = v62;
    swift_bridgeObjectRelease();
    v10 = v84;
    if (!v21[2])
    {
LABEL_70:
      swift_bridgeObjectRelease();
      goto LABEL_72;
    }
LABEL_69:
    if (v26[2] >= v83)
      goto LABEL_70;
  }
  swift_beginAccess();
  sub_1CA85B168();
  sub_1CA23CC98((unint64_t *)&qword_1EF94D7C0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D77CF0], MEMORY[0x1E0D77D00]);
  swift_bridgeObjectRetain();
  do
    v28 = 16777217 * sub_1CA85B48C();
  while (v28 < 0xFFFF01);
  swift_endAccess();
  v29 = sub_1CA85AB50();
  v30 = v29 - 1;
  if (__OFSUB__(v29, 1))
    goto LABEL_82;
  if (v30 < 0)
  {
    v32 = 0;
    goto LABEL_48;
  }
  v31 = (float)((float)(v28 >> 32) * 0.000000059605) + 0.0;
  v32 = (unint64_t)v30 >> 1;
  sub_1CA85ABB0();
  if (v33 == v31)
    goto LABEL_48;
  v34 = 0;
  while (1)
  {
    sub_1CA85ABB0();
    if (v35 >= v31)
    {
      v30 = v32 - 1;
      if (__OFSUB__(v32, 1))
        goto LABEL_80;
    }
    else
    {
      v34 = v32 + 1;
      if (__OFADD__(v32, 1))
        goto LABEL_79;
    }
    if (v30 < v34)
    {
      v32 = v34;
      goto LABEL_48;
    }
    if (__OFSUB__(v30, v34))
      break;
    v32 = v34 + (v30 - v34) / 2;
    if (__OFADD__(v34, (v30 - v34) / 2))
      goto LABEL_75;
    sub_1CA85ABB0();
    if (v36 == v31)
      goto LABEL_48;
  }
  __break(1u);
LABEL_75:
  __break(1u);
LABEL_76:
  __break(1u);
LABEL_77:
  __break(1u);
LABEL_78:
  __break(1u);
LABEL_79:
  __break(1u);
LABEL_80:
  __break(1u);
LABEL_81:
  __break(1u);
LABEL_82:
  __break(1u);
LABEL_83:
  LODWORD(v75) = 0;
  v74 = 1046;
  v73[0] = 2;
  result = sub_1CA85C0D4();
  __break(1u);
  return result;
}

uint64_t sub_1CA32D0E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v14;
  float v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v22 = a2;
  v3 = sub_1CA85AB98();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(a1 + 16);
  if (v7)
  {
    v21 = v3;
    swift_bridgeObjectRetain();
    v8 = 0;
    v9 = MEMORY[0x1E0DEE9D8];
    do
    {
      v12 = *(_QWORD *)(a1 + 8 * v8 + 32);
      if (*(_QWORD *)(v12 + 16))
      {
        swift_bridgeObjectRetain();
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v23 = v9;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_1CA3FBA2C(0, *(_QWORD *)(v9 + 16) + 1, 1);
          v9 = v23;
        }
        v11 = *(_QWORD *)(v9 + 16);
        v10 = *(_QWORD *)(v9 + 24);
        if (v11 >= v10 >> 1)
        {
          sub_1CA3FBA2C(v10 > 1, v11 + 1, 1);
          v9 = v23;
        }
        *(_QWORD *)(v9 + 16) = v11 + 1;
        *(_QWORD *)(v9 + 8 * v11 + 32) = v12;
      }
      ++v8;
    }
    while (v7 != v8);
    swift_bridgeObjectRelease();
    v3 = v21;
  }
  else
  {
    v9 = MEMORY[0x1E0DEE9D8];
  }
  v14 = *(_QWORD *)(v9 + 16);
  v15 = 0.0;
  sub_1CA85AB80();
  if (v14)
  {
    v16 = *(_QWORD *)(v9 + 16);
    if (v16)
    {
      v17 = 0;
      do
      {
        v18 = v17 + 1;
        v15 = v15 + (float)*(uint64_t *)(*(_QWORD *)(v9 + 32 + 8 * v17) + 16);
        sub_1CA85ABBC();
        v17 = v18;
      }
      while (v16 != v18);
    }
    swift_release();
    sub_1CA85AB2C();
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  else
  {
    swift_release();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v4 + 32))(v22, v6, v3);
  }
}

uint64_t sub_1CA32D2D4(uint64_t a1, uint64_t a2, uint64_t a3, float (*a4)(_QWORD *, uint64_t *))
{
  uint64_t v4;
  int64_t v6;
  unint64_t v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  BOOL v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  float v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  float v26;
  float v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD v30[2];

  v30[0] = a1;
  v30[1] = a2;
  if (a4)
  {
    v6 = *(_QWORD *)(v4 + 32);
    if (v6 >= 2)
    {
      v8 = *(_QWORD *)(a3 + 16);
      if (v6 >= v8)
      {
        v11 = a3 + 32;
        sub_1CA336334((uint64_t)a4);
        result = swift_bridgeObjectRetain();
        v13 = 0;
        v15 = (uint64_t)v8 > 0;
        if (v8)
          goto LABEL_5;
      }
      else
      {
        swift_beginAccess();
        sub_1CA336334((uint64_t)a4);
        swift_bridgeObjectRetain();
        sub_1CA495F68();
        swift_endAccess();
        result = sub_1CA3DFAEC(v6, a3);
        v11 = v10;
        v13 = v12;
        v8 = v14 >> 1;
        v15 = v12 < (uint64_t)(v14 >> 1);
        if (v12 != v14 >> 1)
        {
LABEL_5:
          if (!v15)
            goto LABEL_22;
          v16 = (uint64_t *)(v11 + 16 * v13);
          v17 = *v16;
          v18 = v16[1];
          swift_unknownObjectRetain();
          v28 = v17;
          v29 = v18;
          swift_bridgeObjectRetain();
          v19 = a4(v30, &v28);
          swift_bridgeObjectRelease();
          if (v13 + 1 != v8)
          {
            v22 = ~v13 + v8;
            v23 = v16 + 3;
            do
            {
              v25 = *(v23 - 1);
              v24 = *v23;
              v28 = v25;
              v29 = v24;
              swift_bridgeObjectRetain();
              v26 = a4(v30, &v28);
              if (v19 < v26)
              {
                swift_bridgeObjectRelease();
              }
              else
              {
                v27 = v26;
                swift_bridgeObjectRelease();
                v19 = v27;
                v17 = v25;
              }
              v23 += 2;
              --v22;
            }
            while (v22);
          }
          swift_unknownObjectRelease_n();
          sub_1CA2EAF88((uint64_t)a4);
          return v17;
        }
      }
      swift_unknownObjectRelease();
      sub_1CA2EAF88((uint64_t)a4);
      return 0;
    }
  }
  v20 = *(_QWORD *)(a3 + 16);
  result = swift_beginAccess();
  if (v20)
  {
    v21 = sub_1CA325F98(v20);
    result = swift_endAccess();
    if (v21 < v20)
    {
      v17 = *(_QWORD *)(a3 + 16 * v21 + 32);
      swift_bridgeObjectRetain();
      return v17;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
LABEL_22:
  __break(1u);
  return result;
}

uint64_t sub_1CA32D534(uint64_t a1, uint64_t a2, uint64_t a3, float (*a4)(_QWORD *, _QWORD *), uint64_t a5)
{
  uint64_t v5;
  uint64_t result;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  int v15;
  BOOL v16;
  int v17;
  float v18;
  float v19;
  _QWORD *v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  float v24;
  int64_t v25;
  float v26;
  int64_t v27;
  float v28;
  float v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  int64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  float v45;
  int64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  int v56;
  int v57;
  float (*v58)(_QWORD *, _QWORD *);
  uint64_t v59;
  uint64_t v60;
  int v61;
  uint64_t v62;
  _QWORD v63[3];
  _QWORD v64[3];

  v58 = a4;
  v62 = a3;
  v50 = sub_1CA85AB98();
  v49 = *(_QWORD *)(v50 - 8);
  result = MEMORY[0x1E0C80A78](v50);
  v11 = (char *)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64[0] = a1;
  v64[1] = a2;
  v51 = v5;
  v12 = *(_QWORD *)(v5 + 40);
  if (v12 < 0)
    goto LABEL_74;
  if (!v12)
  {
    v42 = 0;
    v59 = 0;
    return v42;
  }
  v13 = 0;
  v14 = 0;
  v54 = 0;
  v55 = a5;
  v59 = 0;
  v15 = *(unsigned __int8 *)(v51 + 24);
  if (v58)
    v16 = v12 == 1;
  else
    v16 = 1;
  v17 = v16;
  v56 = v17;
  v57 = v15;
  v18 = 0.0;
  v52 = v12;
  v53 = v11;
  while (v14 != v12)
  {
    v20 = *(_QWORD **)v62;
    v60 = v14;
    v61 = v13;
    if ((v57 & 1) != 0)
    {
      v21 = swift_bridgeObjectRetain();
      sub_1CA32D0E0(v21, (uint64_t)v11);
      swift_bridgeObjectRelease();
      swift_beginAccess();
      sub_1CA85B168();
      sub_1CA23CC98((unint64_t *)&qword_1EF94D7C0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D77CF0], MEMORY[0x1E0D77D00]);
      do
        v22 = 16777217 * sub_1CA85B48C();
      while (v22 < 0xFFFF01);
      swift_endAccess();
      result = sub_1CA85AB50();
      v23 = result - 1;
      if (__OFSUB__(result, 1))
        goto LABEL_70;
      if (v23 < 0)
      {
        v25 = 0;
LABEL_37:
        result = (*(uint64_t (**)(char *, uint64_t))(v49 + 8))(v11, v50);
        goto LABEL_40;
      }
      v24 = (float)((float)(v22 >> 32) * 0.000000059605) + 0.0;
      v25 = (unint64_t)v23 >> 1;
      sub_1CA85ABB0();
      if (v26 == v24)
        goto LABEL_37;
      v27 = 0;
      while (1)
      {
        result = sub_1CA85ABB0();
        if (v28 >= v24)
        {
          v23 = v25 - 1;
          if (__OFSUB__(v25, 1))
            goto LABEL_69;
        }
        else
        {
          v27 = v25 + 1;
          if (__OFADD__(v25, 1))
            goto LABEL_68;
        }
        if (v23 < v27)
          break;
        if (__OFSUB__(v23, v27))
        {
          __break(1u);
LABEL_62:
          __break(1u);
          goto LABEL_63;
        }
        v25 = v27 + (v23 - v27) / 2;
        if (__OFADD__(v27, (v23 - v27) / 2))
          goto LABEL_62;
        sub_1CA85ABB0();
        if (v29 == v24)
          goto LABEL_39;
      }
      v25 = v27;
LABEL_39:
      result = (*(uint64_t (**)(char *, uint64_t))(v49 + 8))(v11, v50);
      if (v25 < 0)
        goto LABEL_67;
    }
    else
    {
      v30 = v20[2];
      result = swift_beginAccess();
      if (!v30)
        goto LABEL_71;
      sub_1CA85B168();
      sub_1CA23CC98((unint64_t *)&qword_1EF94D7C0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D77CF0], MEMORY[0x1E0D77D00]);
      v31 = sub_1CA85B48C();
      v25 = ((unint64_t)v31 * (unsigned __int128)v30) >> 64;
      if (v30 > v31 * v30)
      {
        v32 = -(uint64_t)v30 % v30;
        if (v32 > v31 * v30)
        {
          do
            v33 = sub_1CA85B48C();
          while (v32 > v33 * v30);
          v25 = ((unint64_t)v33 * (unsigned __int128)v30) >> 64;
        }
      }
      result = swift_endAccess();
    }
LABEL_40:
    v34 = *(_QWORD **)v62;
    if (v25 >= *(_QWORD *)(*(_QWORD *)v62 + 16))
      goto LABEL_64;
    v35 = v34[v25 + 4];
    v36 = *(_QWORD *)(v35 + 16);
    result = swift_beginAccess();
    if (!v36)
      goto LABEL_65;
    sub_1CA85B168();
    sub_1CA23CC98((unint64_t *)&qword_1EF94D7C0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D77CF0], MEMORY[0x1E0D77D00]);
    swift_bridgeObjectRetain();
    v37 = sub_1CA85B48C();
    v38 = ((unint64_t)v37 * (unsigned __int128)v36) >> 64;
    if (v36 > v37 * v36)
    {
      v39 = -(uint64_t)v36 % v36;
      if (v39 > v37 * v36)
      {
        do
          v40 = sub_1CA85B48C();
        while (v39 > v40 * v36);
        v38 = ((unint64_t)v40 * (unsigned __int128)v36) >> 64;
      }
    }
    result = swift_endAccess();
    if (v38 >= *(_QWORD *)(v35 + 16))
      goto LABEL_66;
    v41 = v35 + 16 * v38;
    v42 = *(_QWORD *)(v41 + 32);
    v43 = *(_QWORD *)(v41 + 40);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v63[0] = v42;
    v63[1] = v43;
    if ((v56 & 1) != 0)
    {
      swift_bridgeObjectRelease();
      v59 = v43;
      return v42;
    }
    swift_retain();
    v44 = (uint64_t)v58;
    v45 = v58(v64, v63);
    if ((v61 & (v45 < v18)) == 1)
    {
      result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        result = (uint64_t)sub_1CA42C258(v34);
        v34 = (_QWORD *)result;
      }
      if (v25 >= v34[2])
        goto LABEL_72;
      sub_1CA32C6C8(v38);
      result = swift_bridgeObjectRelease();
      *(_QWORD *)v62 = v34;
      v46 = v34[2];
      if (v25 >= v46)
        goto LABEL_73;
      if (!*(_QWORD *)(v34[v25 + 4] + 16))
      {
        v47 = v62;
        sub_1CA32C7A4(v25);
        swift_bridgeObjectRelease();
        v46 = *(_QWORD *)(*(_QWORD *)v47 + 16);
      }
      sub_1CA2EAF88(v44);
      result = swift_bridgeObjectRelease();
      if (!v46)
        return v54;
      v42 = v54;
    }
    else
    {
      v19 = v45;
      swift_bridgeObjectRelease();
      result = sub_1CA2EAF88(v44);
      v18 = v19;
      v59 = v43;
      v54 = v42;
    }
    v14 = v60 + 1;
    v13 = 1;
    v12 = v52;
    v11 = v53;
    if (v60 + 1 == v52)
      return v42;
  }
LABEL_63:
  __break(1u);
LABEL_64:
  __break(1u);
LABEL_65:
  __break(1u);
LABEL_66:
  __break(1u);
LABEL_67:
  __break(1u);
LABEL_68:
  __break(1u);
LABEL_69:
  __break(1u);
LABEL_70:
  __break(1u);
LABEL_71:
  __break(1u);
LABEL_72:
  __break(1u);
LABEL_73:
  __break(1u);
LABEL_74:
  __break(1u);
  return result;
}

uint64_t TimeIndex.CreationOptions.subdomains.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t TimeIndex.CreationOptions.subdomains.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

uint64_t (*TimeIndex.CreationOptions.subdomains.modify())()
{
  return GEOLocationCoordinate2DMake;
}

uint64_t TimeIndex.CreationOptions.wedgeOfYearSize.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t TimeIndex.CreationOptions.wedgeOfYearSize.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 8) = result;
  return result;
}

uint64_t (*TimeIndex.CreationOptions.wedgeOfYearSize.modify())()
{
  return GEOLocationCoordinate2DMake;
}

uint64_t TimeIndex.CreationOptions.positivesOversamplingFactor.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t TimeIndex.CreationOptions.negativesOversamplingFactor.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 24);
}

void *static TimeIndex.Subdomain.allCases.getter()
{
  return &unk_1E83FF618;
}

uint64_t TimeIndex.CreationOptions.init(subdomains:wedgeOfYearSize:positivesOversamplingFactor:negativesOversamplingFactor:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  *a5 = result;
  a5[1] = a2;
  a5[2] = a3;
  a5[3] = a4;
  return result;
}

PhotosGraph::TimeIndex::Subdomain_optional __swiftcall TimeIndex.Subdomain.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  PhotosGraph::TimeIndex::Subdomain_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1CA85C0F8();
  result.value = swift_bridgeObjectRelease();
  v5 = 6;
  if (v3 < 6)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t TimeIndex.Subdomain.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1CA32DBE8 + 4 * byte_1CA8DCA3E[*v0]))(1918985593, 0xE400000000000000);
}

uint64_t sub_1CA32DBE8()
{
  return 0x6E6F73616573;
}

uint64_t sub_1CA32DBFC()
{
  return 0x59664F6567646577;
}

uint64_t sub_1CA32DC1C()
{
  return 0x6557664F74726170;
}

uint64_t sub_1CA32DC38()
{
  return 0x616559664F796164;
}

uint64_t sub_1CA32DC54()
{
  return 0x6144664F74726170;
}

void sub_1CA32DC74(char *a1)
{
  sub_1CA328954(*a1);
}

void sub_1CA32DC80()
{
  char *v0;

  sub_1CA436A88(*v0);
}

void sub_1CA32DC88()
{
  __asm { BR              X10 }
}

uint64_t sub_1CA32DCBC()
{
  sub_1CA85B4B0();
  return swift_bridgeObjectRelease();
}

void sub_1CA32DD5C(uint64_t a1)
{
  char *v1;

  sub_1CA43731C(a1, *v1);
}

PhotosGraph::TimeIndex::Subdomain_optional sub_1CA32DD64(Swift::String *a1)
{
  return TimeIndex.Subdomain.init(rawValue:)(*a1);
}

uint64_t sub_1CA32DD70()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1CA32DD98 + 4 * byte_1CA8DCA4A[*v0]))();
}

void sub_1CA32DD98(_QWORD *a1@<X8>)
{
  *a1 = 0x6E6F73616573;
  a1[1] = 0xE600000000000000;
}

void sub_1CA32DDB0(_QWORD *a1@<X8>)
{
  *a1 = 0x59664F6567646577;
  a1[1] = 0xEB00000000726165;
}

void sub_1CA32DDD4(_QWORD *a1@<X8>)
{
  *a1 = 0x6557664F74726170;
  a1[1] = 0xEA00000000006B65;
}

void sub_1CA32DDF4(_QWORD *a1@<X8>)
{
  *a1 = 0x616559664F796164;
  a1[1] = 0xE900000000000072;
}

void sub_1CA32DE14(_QWORD *a1@<X8>)
{
  *a1 = 0x6144664F74726170;
  a1[1] = 0xE900000000000079;
}

void sub_1CA32DE38(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E83FF618;
}

uint64_t sub_1CA32DE48()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1CA32DE84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED872760);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1CA8D6080;
  *(_QWORD *)(v0 + 32) = sub_1CA85B534();
  *(_QWORD *)(v0 + 40) = v1;
  *(_QWORD *)(v0 + 48) = sub_1CA85B534();
  *(_QWORD *)(v0 + 56) = v2;
  *(_QWORD *)(v0 + 64) = sub_1CA85B534();
  *(_QWORD *)(v0 + 72) = v3;
  result = sub_1CA85B534();
  *(_QWORD *)(v0 + 80) = result;
  *(_QWORD *)(v0 + 88) = v5;
  off_1EF94D888 = (_UNKNOWN *)v0;
  return result;
}

uint64_t sub_1CA32DF1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED872760);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1CA8D4AD0;
  *(_QWORD *)(v0 + 32) = sub_1CA85B534();
  *(_QWORD *)(v0 + 40) = v1;
  *(_QWORD *)(v0 + 48) = sub_1CA85B534();
  *(_QWORD *)(v0 + 56) = v2;
  *(_QWORD *)(v0 + 64) = sub_1CA85B534();
  *(_QWORD *)(v0 + 72) = v3;
  *(_QWORD *)(v0 + 80) = sub_1CA85B534();
  *(_QWORD *)(v0 + 88) = v4;
  result = sub_1CA85B534();
  *(_QWORD *)(v0 + 96) = result;
  *(_QWORD *)(v0 + 104) = v6;
  off_1EF94D890 = (_UNKNOWN *)v0;
  return result;
}

uint64_t sub_1CA32DFC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  uint64_t v3;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED872760);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1CA8D51C0;
  *(_QWORD *)(v0 + 32) = sub_1CA85B534();
  *(_QWORD *)(v0 + 40) = v1;
  result = sub_1CA85B534();
  *(_QWORD *)(v0 + 48) = result;
  *(_QWORD *)(v0 + 56) = v3;
  off_1EF94D898 = (_UNKNOWN *)v0;
  return result;
}

uint64_t TimeIndex.availableSubdomains.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1CA32E040()
{
  uint64_t v0;

  return *(_QWORD *)(*(_QWORD *)(v0 + 32) + 16);
}

uint64_t static TimeIndex.create(using:with:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t aBlock;
  _BYTE v8[40];
  uint64_t v9;

  if (qword_1EF94A2E0 != -1)
    swift_once();
  v1 = qword_1EF9781C8;
  *(double *)&v2 = CACurrentMediaTime();
  sub_1CA2E4280("CreateTimeIndex", 15, 2u, v2, 0, v1, (uint64_t)v8);
  v3 = swift_bridgeObjectRetain();
  aBlock = sub_1CA244250(v3);
  sub_1CA335104(&aBlock, (uint64_t)&unk_1E83FF780);
  if (v0)
  {
    swift_release();
    __break(1u);
    JUMPOUT(0x1CA32F4BCLL);
  }
  swift_bridgeObjectRelease();
  v4 = aBlock;
  if (*(_QWORD *)(aBlock + 16))
  {
    v9 = MEMORY[0x1E0DEE9E0];
    swift_retain();
    __asm { BR              X9 }
  }
  swift_release();
  sub_1CA3351A4();
  swift_allocError();
  *(_QWORD *)(v5 + 8) = 0;
  *(_QWORD *)(v5 + 16) = 0;
  *(_QWORD *)v5 = 0;
  *(_BYTE *)(v5 + 24) = 3;
  swift_willThrow();
  sub_1CA2E0C94(1);
  swift_release();
  swift_release();
  return 0;
}

uint64_t sub_1CA32F54C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v9;
  uint64_t v10;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v13;

  type metadata accessor for TimeIndex.MomentData();
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 32) = 0;
  v10 = MEMORY[0x1E0DEE9D8];
  *(_BYTE *)(v9 + 40) = 1;
  *(_QWORD *)(v9 + 48) = v10;
  *(_QWORD *)(v9 + 56) = 0;
  *(_BYTE *)(v9 + 64) = 1;
  *(_QWORD *)(v9 + 72) = v10;
  *(_QWORD *)(v9 + 80) = 0;
  *(_BYTE *)(v9 + 88) = 1;
  *(_QWORD *)(v9 + 96) = v10;
  *(_QWORD *)(v9 + 104) = 0;
  *(_BYTE *)(v9 + 112) = 1;
  *(_QWORD *)(v9 + 16) = a2;
  *(_QWORD *)(v9 + 24) = a3;
  swift_bridgeObjectRetain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v13 = *a5;
  *a5 = 0x8000000000000000;
  sub_1CA25E5A4(v9, a1, isUniquelyReferenced_nonNull_native);
  *a5 = v13;
  return swift_bridgeObjectRelease();
}

void sub_1CA32F614(void *a1, uint64_t a2, int a3, int a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t *a10)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  char *v40;
  id v41;
  id v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  id v49;
  uint64_t v50;
  id v51;
  double v52;
  double v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  unint64_t v59;
  unint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  void (*v64)(unint64_t, uint64_t, uint64_t);
  uint64_t v65;
  char v66;
  char *v67;
  uint64_t v68;
  char v69;
  uint64_t v70;
  uint64_t v71;
  char v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  char v78;
  char v79;
  void (*v80)(char *, uint64_t);
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  unint64_t v89;
  NSObject *v90;
  os_log_type_t v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  unint64_t v96;
  void (*v97)(char *, uint64_t);
  char *v98;
  id v99;
  char isUniquelyReferenced_nonNull_native;
  void (*v101)(char *, uint64_t);
  uint64_t v102;
  char *v103;
  unint64_t v104;
  NSObject *v105;
  os_log_type_t v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  unint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  char *v115;
  int v116;
  char *v117;
  char *v118;
  void (*v119)(char *, uint64_t);
  unint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  int v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  char *v130;
  char *v131;
  char *v132;
  id v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139[3];

  v116 = a5;
  v125 = a3;
  LODWORD(v126) = a4;
  v139[1] = *MEMORY[0x1E0C80C00];
  v12 = sub_1CA85A2A4();
  v123 = *(_QWORD *)(v12 - 8);
  v124 = v12;
  MEMORY[0x1E0C80A78](v12);
  v132 = (char *)&v112 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1CA85A7E4();
  v127 = *(_QWORD *)(v14 - 8);
  v128 = v14;
  v15 = MEMORY[0x1E0C80A78](v14);
  v114 = (char *)&v112 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v117 = (char *)&v112 - v17;
  v18 = sub_1CA85A6A0();
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  v21 = (char *)&v112 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v122 = sub_1CA85A7FC();
  v121 = *(_QWORD *)(v122 - 8);
  MEMORY[0x1E0C80A78](v122);
  v130 = (char *)&v112 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8744D8);
  MEMORY[0x1E0C80A78](v23);
  v25 = (char *)&v112 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = sub_1CA85A850();
  v27 = *(_QWORD *)(v26 - 8);
  v135 = v26;
  v136 = v27;
  v28 = MEMORY[0x1E0C80A78](v26);
  v30 = (char *)&v112 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v28);
  v131 = (char *)&v112 - v31;
  v137 = sub_1CA85A5B0();
  v134 = *(_QWORD *)(v137 - 8);
  v32 = MEMORY[0x1E0C80A78](v137);
  v115 = (char *)&v112 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = MEMORY[0x1E0C80A78](v32);
  v118 = (char *)&v112 - v35;
  v36 = MEMORY[0x1E0C80A78](v34);
  v38 = (char *)&v112 - v37;
  MEMORY[0x1E0C80A78](v36);
  v40 = (char *)&v112 - v39;
  v133 = a1;
  v41 = objc_msgSend(a1, sel_localIdentifier);
  if (!v41)
  {
    sub_1CA85B534();
    v41 = (id)sub_1CA85B510();
    swift_bridgeObjectRelease();
  }
  sub_1CA24EEC0(0, (unint64_t *)&qword_1ED874AD8);
  v42 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_uuidFromLocalIdentifier_, v41);

  if (v42)
  {
    v112 = a7;
    v43 = sub_1CA85B534();
    v45 = v44;

    type metadata accessor for TimeIndex.MomentData();
    v46 = swift_allocObject();
    *(_QWORD *)(v46 + 32) = 0;
    v47 = MEMORY[0x1E0DEE9D8];
    *(_BYTE *)(v46 + 40) = 1;
    *(_QWORD *)(v46 + 48) = v47;
    *(_QWORD *)(v46 + 56) = 0;
    *(_BYTE *)(v46 + 64) = 1;
    *(_QWORD *)(v46 + 72) = v47;
    *(_QWORD *)(v46 + 80) = 0;
    *(_BYTE *)(v46 + 88) = 1;
    *(_QWORD *)(v46 + 96) = v47;
    *(_QWORD *)(v46 + 104) = 0;
    *(_BYTE *)(v46 + 112) = 1;
    v113 = v43;
    *(_QWORD *)(v46 + 16) = v43;
    *(_QWORD *)(v46 + 24) = v45;
    v120 = v45;
    swift_bridgeObjectRetain();
    v48 = v133;
    v49 = objc_msgSend(v133, sel_universalStartDate);
    sub_1CA85A574();

    sub_1CA85A55C();
    *(_QWORD *)(v46 + 104) = v50;
    *(_BYTE *)(v46 + 112) = 0;
    v51 = objc_msgSend(v48, sel_localStartDate);
    sub_1CA85A574();

    sub_1CA85A4F0();
    v53 = v52;
    v54 = v137;
    v119 = *(void (**)(char *, uint64_t))(v134 + 8);
    v119(v38, v137);
    if ((~*(_QWORD *)&v53 & 0x7FF0000000000000) != 0)
    {
      if (v53 > -9.22337204e18)
      {
        if (v53 < 9.22337204e18)
        {
          v129 = v40;
          sub_1CA85A82C();
          v56 = v135;
          v55 = v136;
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v136 + 48))(v25, 1, v135) == 1)
          {
            v119(v129, v54);
            swift_release();
            swift_bridgeObjectRelease();
            sub_1CA267BE8((uint64_t)v25, &qword_1ED8744D8);
            return;
          }
          v57 = v131;
          (*(void (**)(char *, char *, uint64_t))(v55 + 32))(v131, v25, v56);
          (*(void (**)(char *, _QWORD, uint64_t))(v19 + 104))(v21, *MEMORY[0x1E0CB0EF8], v18);
          v25 = v130;
          sub_1CA85A6AC();
          (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
          (*(void (**)(char *, char *, uint64_t))(v55 + 16))(v30, v57, v56);
          sub_1CA85A7D8();
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED872700);
          v58 = v127;
          v59 = (*(unsigned __int8 *)(v127 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v127 + 80);
          v60 = v59 + *(_QWORD *)(v127 + 72);
          v61 = swift_allocObject();
          *(_OWORD *)(v61 + 16) = xmmword_1CA8D4E40;
          v62 = v61 + v59;
          v63 = *MEMORY[0x1E0CB1158];
          v64 = *(void (**)(unint64_t, uint64_t, uint64_t))(v58 + 104);
          v65 = v128;
          v64(v62, v63, v128);
          v66 = v125 | v126;
          if (((v125 | v126) & 1) != 0)
          {
            v67 = v117;
            v64((unint64_t)v117, *MEMORY[0x1E0CB1160], v65);
            v61 = sub_1CA26D834(1, 2, 1, v61);
            *(_QWORD *)(v61 + 16) = 2;
            v25 = v130;
            (*(void (**)(unint64_t, char *, uint64_t))(v58 + 32))(v61 + v60, v67, v65);
          }
          v40 = v129;
          sub_1CA28831C(v61);
          swift_bridgeObjectRelease();
          sub_1CA85A70C();
          swift_bridgeObjectRelease();
          v68 = sub_1CA85A244();
          if ((v69 & 1) == 0)
          {
            v70 = v68;
            if ((v116 & 1) != 0)
            {
              *(_QWORD *)(v46 + 32) = v68;
              *(_BYTE *)(v46 + 40) = 0;
            }
            if ((v66 & 1) == 0)
            {
              swift_bridgeObjectRelease();
              v85 = v136;
              goto LABEL_31;
            }
            v71 = sub_1CA85A25C();
            if ((v72 & 1) == 0)
            {
              v73 = *MEMORY[0x1E0CB1130];
              v74 = v117;
              v126 = v71;
              v75 = v128;
              v64((unint64_t)v117, v73, v128);
              v76 = v114;
              v64((unint64_t)v114, v63, v75);
              v77 = sub_1CA85A6B8();
              v79 = v78;
              v80 = *(void (**)(char *, uint64_t))(v127 + 8);
              v80(v76, v75);
              v81 = v112;
              v82 = v75;
              v83 = v126;
              v80(v74, v82);
              if ((v79 & 1) == 0)
              {
                swift_bridgeObjectRelease();
                if (v83 >= 3 && v70 % 400 && ((v70 & 3) != 0 || !(v70 % 100)) && __OFADD__(v77++, 1))
LABEL_48:
                  __break(1u);
                *(_QWORD *)(v46 + 80) = v77;
                *(_BYTE *)(v46 + 88) = 0;
                if (__OFSUB__(v77, 1))
                {
                  __break(1u);
                }
                else
                {
                  v85 = v136;
                  if (v81)
                  {
                    if (v77 != 0x8000000000000001 || v81 != -1)
                    {
                      *(_QWORD *)(v46 + 56) = (v77 - 1) / v81;
                      *(_BYTE *)(v46 + 64) = 0;
LABEL_31:
                      v99 = objc_msgSend(v133, sel_identifier);
                      swift_retain();
                      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                      v139[0] = *a10;
                      *a10 = 0x8000000000000000;
                      sub_1CA25E5A4(v46, (uint64_t)v99, isUniquelyReferenced_nonNull_native);
                      *a10 = v139[0];
                      swift_release();
                      swift_bridgeObjectRelease();
                      (*(void (**)(char *, uint64_t))(v123 + 8))(v132, v124);
                      (*(void (**)(char *, uint64_t))(v121 + 8))(v25, v122);
                      (*(void (**)(char *, uint64_t))(v85 + 8))(v131, v135);
                      v119(v129, v137);
                      return;
                    }
                    goto LABEL_47;
                  }
                }
                __break(1u);
LABEL_47:
                __break(1u);
                goto LABEL_48;
              }
            }
            if (qword_1EF94A260 != -1)
              swift_once();
            v102 = sub_1CA85B348();
            __swift_project_value_buffer(v102, (uint64_t)qword_1EF978108);
            v103 = v115;
            v88 = v137;
            (*(void (**)(char *, char *, uint64_t))(v134 + 16))(v115, v40, v137);
            v104 = v120;
            swift_bridgeObjectRetain();
            v105 = sub_1CA85B330();
            v106 = sub_1CA85BAE0();
            if (os_log_type_enabled(v105, v106))
            {
              v107 = swift_slowAlloc();
              v134 = swift_slowAlloc();
              v139[0] = v134;
              *(_DWORD *)v107 = 136315394;
              swift_bridgeObjectRetain();
              v138 = sub_1CA28712C(v113, v104, v139);
              sub_1CA85BCF0();
              swift_bridgeObjectRelease_n();
              *(_WORD *)(v107 + 12) = 2080;
              v108 = v40;
              sub_1CA23CC98((unint64_t *)&qword_1ED8744B8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08F0]);
              v109 = sub_1CA85C260();
              v138 = sub_1CA28712C(v109, v110, v139);
              sub_1CA85BCF0();
              swift_bridgeObjectRelease();
              v97 = v119;
              v119(v103, v88);
              _os_log_impl(&dword_1CA237000, v105, v106, "Failed to extract month and day of year components for moment (%s) with universalDate: %s", (uint8_t *)v107, 0x16u);
              v111 = v134;
              swift_arrayDestroy();
              MEMORY[0x1CAA4F27C](v111, -1, -1);
              MEMORY[0x1CAA4F27C](v107, -1, -1);
              swift_release();

              (*(void (**)(char *, uint64_t))(v123 + 8))(v132, v124);
              (*(void (**)(char *, uint64_t))(v121 + 8))(v130, v122);
              (*(void (**)(char *, uint64_t))(v136 + 8))(v131, v135);
              v98 = v108;
              goto LABEL_37;
            }

            v101 = v119;
            v119(v103, v88);
            swift_release();
LABEL_39:
            swift_bridgeObjectRelease_n();
            (*(void (**)(char *, uint64_t))(v123 + 8))(v132, v124);
            (*(void (**)(char *, uint64_t))(v121 + 8))(v25, v122);
            (*(void (**)(char *, uint64_t))(v136 + 8))(v131, v135);
            v101(v40, v88);
            return;
          }
          if (qword_1EF94A260 == -1)
          {
LABEL_28:
            v86 = sub_1CA85B348();
            __swift_project_value_buffer(v86, (uint64_t)qword_1EF978108);
            v87 = v118;
            v88 = v137;
            (*(void (**)(char *, char *, uint64_t))(v134 + 16))(v118, v40, v137);
            v89 = v120;
            swift_bridgeObjectRetain();
            v90 = sub_1CA85B330();
            v91 = sub_1CA85BAE0();
            if (os_log_type_enabled(v90, v91))
            {
              v92 = swift_slowAlloc();
              v93 = swift_slowAlloc();
              v139[0] = v93;
              *(_DWORD *)v92 = 136315394;
              swift_bridgeObjectRetain();
              v138 = sub_1CA28712C(v113, v89, v139);
              sub_1CA85BCF0();
              swift_bridgeObjectRelease_n();
              *(_WORD *)(v92 + 12) = 2080;
              sub_1CA23CC98((unint64_t *)&qword_1ED8744B8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08F0]);
              v94 = v118;
              v95 = sub_1CA85C260();
              v138 = sub_1CA28712C(v95, v96, v139);
              sub_1CA85BCF0();
              swift_bridgeObjectRelease();
              v97 = v119;
              v119(v94, v88);
              _os_log_impl(&dword_1CA237000, v90, v91, "Failed to extract year date component for moment (%s) with universalDate: %s", (uint8_t *)v92, 0x16u);
              swift_arrayDestroy();
              MEMORY[0x1CAA4F27C](v93, -1, -1);
              MEMORY[0x1CAA4F27C](v92, -1, -1);
              swift_release();

              (*(void (**)(char *, uint64_t))(v123 + 8))(v132, v124);
              (*(void (**)(char *, uint64_t))(v121 + 8))(v130, v122);
              (*(void (**)(char *, uint64_t))(v136 + 8))(v131, v135);
              v98 = v129;
LABEL_37:
              v97(v98, v88);
              return;
            }
            swift_release();

            v101 = v119;
            v119(v87, v88);
            goto LABEL_39;
          }
LABEL_44:
          swift_once();
          goto LABEL_28;
        }
LABEL_43:
        __break(1u);
        goto LABEL_44;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_43;
  }
}

uint64_t sub_1CA3303FC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  return a3();
}

void sub_1CA33041C(uint64_t a1, void *a2)
{
  void (*v2)(void);
  id v3;

  v2 = *(void (**)(void))(a1 + 32);
  v3 = a2;
  v2();

}

uint64_t sub_1CA330460(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t *a14, uint64_t a15)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t i;
  double v30;
  char *v31;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v33;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  char v50[9];

  v16 = v15;
  v45 = a7;
  v46 = a8;
  v43 = a5;
  v44 = a6;
  v41 = a3;
  v42 = a4;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94C238);
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v36 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_1CA85AB98();
  v23 = *(_QWORD *)(v22 - 8);
  MEMORY[0x1E0C80A78](v22);
  v25 = *a1;
  v48 = (char *)&v36 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1CA85AB8C();
  v26 = *(_QWORD *)(v25 + 24);
  v47 = *(_QWORD *)(v25 + 16);
  v27 = *(_QWORD *)(a2 + 16);
  if (v27)
  {
    v36 = v21;
    v37 = v23;
    v38 = v22;
    v39 = a13;
    v40 = v25;
    swift_bridgeObjectRetain();
    v28 = a2;
    swift_bridgeObjectRetain();
    for (i = 0; i != v27; ++i)
    {
      v50[0] = *(_BYTE *)(v28 + i + 32);
      sub_1CA330750((uint64_t)v50);
      if (v16)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v23 = v37;
        v22 = v38;
        return (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v48, v22);
      }
    }
    swift_bridgeObjectRelease();
    v23 = v37;
    v22 = v38;
    v21 = v36;
    v25 = v40;
    if ((*(_BYTE *)(v40 + 112) & 1) != 0)
      goto LABEL_8;
    goto LABEL_6;
  }
  swift_bridgeObjectRetain();
  if ((*(_BYTE *)(v25 + 112) & 1) == 0)
  {
LABEL_6:
    v46 = a15;
    v30 = *(double *)(v25 + 104);
    v31 = v48;
    sub_1CA85AB74();
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v49 = *a14;
    *a14 = 0x8000000000000000;
    v33 = v47;
    sub_1CA25DA5C(v47, v26, isUniquelyReferenced_nonNull_native, v30);
    *a14 = v49;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v21, v31, v22);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v21, 0, 1, v22);
    sub_1CA297080((uint64_t)v21, v33, v26);
    return (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v31, v22);
  }
LABEL_8:
  sub_1CA3351A4();
  swift_allocError();
  *(_QWORD *)v35 = v47;
  *(_QWORD *)(v35 + 8) = v26;
  *(_QWORD *)(v35 + 16) = 0;
  *(_BYTE *)(v35 + 24) = 1;
  swift_willThrow();
  return (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v48, v22);
}

void sub_1CA330750(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1CA85AB98();
  MEMORY[0x1E0C80A78](v2);
  __asm { BR              X10 }
}

uint64_t sub_1CA33138C(uint64_t a1, char *a2)
{
  uint64_t v2;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v4 = *a2;
  if ((sub_1CA290680(*a2, *(_QWORD *)(v2 + 16)) & 1) != 0
    && *(_QWORD *)(*(_QWORD *)(v2 + 48) + 16)
    && (sub_1CA250C5C(v4), (v5 & 1) != 0))
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = sub_1CA335D1C;
    *(_QWORD *)(v6 + 24) = v2;
    swift_retain();
    swift_retain_n();
    v7 = sub_1CA32C1B0(a1, 0, (float (*)(_QWORD *, uint64_t *))sub_1CA335D58, v6);
    swift_release();
    swift_release();
    swift_release();
    return v7;
  }
  else
  {
    sub_1CA3351A4();
    swift_allocError();
    *(_QWORD *)(v9 + 8) = 0;
    *(_QWORD *)(v9 + 16) = 0;
    *(_QWORD *)v9 = v4;
    *(_BYTE *)(v9 + 24) = 2;
    return swift_willThrow();
  }
}

uint64_t sub_1CA3314A4(_QWORD *a1, _QWORD *a2, uint64_t (*a3)(_QWORD, _QWORD, _QWORD, _QWORD))
{
  return a3(*a1, a1[1], *a2, a2[1]);
}

uint64_t sub_1CA3314D8(uint64_t a1, char *a2)
{
  uint64_t v2;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v4 = *a2;
  if ((sub_1CA290680(*a2, *(_QWORD *)(v2 + 16)) & 1) != 0
    && *(_QWORD *)(*(_QWORD *)(v2 + 48) + 16)
    && (sub_1CA250C5C(v4), (v5 & 1) != 0))
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = sub_1CA335D1C;
    *(_QWORD *)(v6 + 24) = v2;
    swift_retain();
    swift_retain_n();
    v7 = sub_1CA32C874(a1, 0, (float (*)(_QWORD *, _QWORD *))sub_1CA335D58, v6);
    swift_release();
    swift_release();
    swift_release();
    return v7;
  }
  else
  {
    sub_1CA3351A4();
    swift_allocError();
    *(_QWORD *)(v9 + 8) = 0;
    *(_QWORD *)(v9 + 16) = 0;
    *(_QWORD *)v9 = v4;
    *(_BYTE *)(v9 + 24) = 2;
    return swift_willThrow();
  }
}

uint64_t sub_1CA3315F0(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v9;
  char v10;

  v5 = *(_QWORD *)(a5 + 40);
  if (*(_QWORD *)(v5 + 16))
  {
    v9 = result;
    swift_bridgeObjectRetain();
    sub_1CA25081C(v9, a2);
    if ((v10 & 1) != 0)
    {
      result = swift_bridgeObjectRelease();
      if (!*(_QWORD *)(v5 + 16))
        return result;
      swift_bridgeObjectRetain();
      sub_1CA25081C(a3, a4);
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1CA3316CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;

  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94C238);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(v3 + 24);
  if (!*(_QWORD *)(v10 + 16))
  {
    v17 = sub_1CA85AB98();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v9, 1, 1, v17);
LABEL_7:
    sub_1CA85AB5C();
    return sub_1CA267BE8((uint64_t)v9, &qword_1EF94C238);
  }
  swift_bridgeObjectRetain();
  v11 = sub_1CA25081C(a1, a2);
  if ((v12 & 1) != 0)
  {
    v13 = v11;
    v14 = *(_QWORD *)(v10 + 56);
    v15 = sub_1CA85AB98();
    v16 = *(_QWORD *)(v15 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v9, v14 + *(_QWORD *)(v16 + 72) * v13, v15);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v9, 0, 1, v15);
  }
  else
  {
    v15 = sub_1CA85AB98();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v9, 1, 1, v15);
  }
  swift_bridgeObjectRelease();
  sub_1CA85AB98();
  v18 = *(_QWORD *)(v15 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v9, 1, v15) == 1)
    goto LABEL_7;
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v18 + 32))(a3, v9, v15);
}

uint64_t sub_1CA331864(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  char v10;

  v5 = *(_QWORD *)(v4 + 40);
  if (*(_QWORD *)(v5 + 16))
  {
    v9 = result;
    swift_bridgeObjectRetain();
    sub_1CA25081C(v9, a2);
    if ((v10 & 1) != 0)
    {
      result = swift_bridgeObjectRelease();
      if (!*(_QWORD *)(v5 + 16))
        return result;
      swift_bridgeObjectRetain();
      sub_1CA25081C(a3, a4);
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_1CA331940()
{
  uint64_t v0;
  uint64_t v1;

  sub_1CA85BEC4();
  swift_bridgeObjectRelease();
  v0 = swift_bridgeObjectRetain();
  MEMORY[0x1CAA4D620](v0, MEMORY[0x1E0DEA968]);
  sub_1CA85B624();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1CA85B624();
  v1 = swift_bridgeObjectRetain();
  sub_1CA332824(v1, (void (*)(uint64_t, uint64_t, char *))sub_1CA335D8C);
  swift_bridgeObjectRelease();
  return 0xD000000000000014;
}

uint64_t sub_1CA331A2C()
{
  swift_bridgeObjectRetain();
  sub_1CA85B624();
  sub_1CA85AB20();
  sub_1CA85B624();
  swift_bridgeObjectRelease();
  sub_1CA85B624();
  sub_1CA85B624();
  return swift_bridgeObjectRelease();
}

