__n128 __swift_memcpy18_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u16[0] = a2[1].n128_u16[0];
  *a1 = result;
  return result;
}

uint64_t objectdestroy_15Tm()
{
  uint64_t v0;

  (*(void (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(v0 + 24) - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 24) - 8) + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 24) - 8) + 80)));
  return swift_deallocObject();
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

uint64_t block_destroy_helper_0()
{
  return swift_release();
}

uint64_t block_destroy_helper_1()
{
  return swift_release();
}

uint64_t block_destroy_helper_2()
{
  return swift_release();
}

uint64_t block_destroy_helper_3()
{
  return swift_release();
}

uint64_t block_destroy_helper_4()
{
  return swift_release();
}

uint64_t block_destroy_helper_5()
{
  return swift_release();
}

uint64_t block_destroy_helper_6()
{
  return swift_release();
}

uint64_t block_destroy_helper_7()
{
  return swift_release();
}

uint64_t block_destroy_helper_8()
{
  return swift_release();
}

uint64_t block_destroy_helper_9()
{
  return swift_release();
}

uint64_t block_destroy_helper_10()
{
  return swift_release();
}

uint64_t block_destroy_helper_11()
{
  return swift_release();
}

uint64_t block_destroy_helper_12()
{
  return swift_release();
}

uint64_t block_destroy_helper_13()
{
  return swift_release();
}

uint64_t block_destroy_helper_14()
{
  return swift_release();
}

uint64_t block_destroy_helper_15()
{
  return swift_release();
}

uint64_t block_destroy_helper_16()
{
  return swift_release();
}

uint64_t block_destroy_helper_17()
{
  return swift_release();
}

uint64_t block_destroy_helper_18()
{
  return swift_release();
}

uint64_t block_destroy_helper_19()
{
  return swift_release();
}

uint64_t block_destroy_helper_20()
{
  return swift_release();
}

uint64_t block_destroy_helper_21()
{
  return swift_release();
}

uint64_t block_destroy_helper_22()
{
  return swift_release();
}

uint64_t block_destroy_helper_23()
{
  return swift_release();
}

uint64_t block_destroy_helper_24()
{
  return swift_release();
}

uint64_t block_destroy_helper_25()
{
  return swift_release();
}

uint64_t block_destroy_helper_26()
{
  return swift_release();
}

uint64_t block_destroy_helper_27()
{
  return swift_release();
}

uint64_t block_destroy_helper_28()
{
  return swift_release();
}

uint64_t block_destroy_helper_29()
{
  return swift_release();
}

uint64_t block_destroy_helper_30()
{
  return swift_release();
}

uint64_t block_destroy_helper_31()
{
  return swift_release();
}

uint64_t block_destroy_helper_32()
{
  return swift_release();
}

uint64_t block_destroy_helper_33()
{
  return swift_release();
}

uint64_t block_destroy_helper_34()
{
  return swift_release();
}

uint64_t block_destroy_helper_35()
{
  return swift_release();
}

uint64_t block_destroy_helper_36()
{
  return swift_release();
}

uint64_t block_destroy_helper_37()
{
  return swift_release();
}

uint64_t block_destroy_helper_38()
{
  return swift_release();
}

uint64_t block_destroy_helper_39()
{
  return swift_release();
}

uint64_t block_destroy_helper_40()
{
  return swift_release();
}

uint64_t block_destroy_helper_41()
{
  return swift_release();
}

uint64_t block_destroy_helper_42()
{
  return swift_release();
}

uint64_t block_destroy_helper_43()
{
  return swift_release();
}

uint64_t block_destroy_helper_44()
{
  return swift_release();
}

uint64_t block_destroy_helper_45()
{
  return swift_release();
}

uint64_t block_destroy_helper_46()
{
  return swift_release();
}

uint64_t block_destroy_helper_47()
{
  return swift_release();
}

uint64_t block_destroy_helper_48()
{
  return swift_release();
}

uint64_t block_destroy_helper_49()
{
  return swift_release();
}

uint64_t block_destroy_helper_50()
{
  return swift_release();
}

uint64_t block_destroy_helper_51()
{
  return swift_release();
}

uint64_t block_destroy_helper_52()
{
  return swift_release();
}

uint64_t block_destroy_helper_53()
{
  return swift_release();
}

uint64_t block_destroy_helper_54()
{
  return swift_release();
}

uint64_t objectdestroyTm()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 24));
  return swift_deallocObject();
}

uint64_t objectdestroy_2Tm()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t objectdestroyTm_0()
{
  uint64_t v0;

  swift_release();
  swift_release();

  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t objectdestroyTm_1()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t objectdestroyTm_2()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t objectdestroyTm_3()
{
  id *v0;

  swift_release();
  return swift_deallocObject();
}

uint64_t objectdestroyTm_4()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t);
  uint64_t v20;

  v1 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED874560) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = *(_QWORD *)(v1 + 64);
  v4 = sub_1CA85A5B0();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = *(_QWORD *)(v5 + 64);
  v8 = v0 + v2;
  v9 = type metadata accessor for CacherStatus(0);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v0 + v2, 1, v9))
  {
    v20 = v3;
    swift_bridgeObjectRelease();
    v10 = v8 + *(int *)(v9 + 20);
    v11 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
    if (!v11(v10, 1, v4))
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v10, v4);
    v12 = v8 + *(int *)(v9 + 24);
    v3 = v20;
    if (!v11(v12, 1, v4))
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v12, v4);
  }
  v13 = (v3 + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  v14 = (v13 + v6 + 8) & ~v6;
  v15 = (v7 + v6 + v14) & ~v6;
  v16 = (v7 + v15 + 7) & 0xFFFFFFFFFFFFFFF8;

  v17 = v0 + v14;
  v18 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v18(v17, v4);
  v18(v0 + v15, v4);

  swift_release();
  return swift_deallocObject();
}

uint64_t objectdestroyTm_5()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;

  v1 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED874560) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = *(_QWORD *)(v1 + 64);
  v4 = v0 + v2;
  v5 = type metadata accessor for CacherStatus(0);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v0 + v2, 1, v5))
  {
    swift_bridgeObjectRelease();
    v6 = v4 + *(int *)(v5 + 20);
    v7 = sub_1CA85A5B0();
    v8 = *(_QWORD *)(v7 - 8);
    v9 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
    if (!v9(v6, 1, v7))
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
    v10 = v4 + *(int *)(v5 + 24);
    if (!v9(v10, 1, v7))
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v10, v7);
  }
  v11 = (v3 + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  v12 = (((v11 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;

  swift_bridgeObjectRelease();
  swift_release();

  swift_release();
  return swift_deallocObject();
}

uint64_t objectdestroyTm_6()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 24));
  return swift_deallocObject();
}

uint64_t objectdestroyTm_7()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t objectdestroyTm_8()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;

  v1 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED874560) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = *(_QWORD *)(v1 + 64);
  v4 = v0 + v2;
  v5 = type metadata accessor for CacherStatus(0);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v0 + v2, 1, v5))
  {
    swift_bridgeObjectRelease();
    v6 = v4 + *(int *)(v5 + 20);
    v7 = sub_1CA85A5B0();
    v8 = *(_QWORD *)(v7 - 8);
    v9 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
    if (!v9(v6, 1, v7))
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
    v10 = v4 + *(int *)(v5 + 24);
    if (!v9(v10, 1, v7))
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v10, v7);
  }
  v11 = (v3 + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  v12 = (v11 + 15) & 0xFFFFFFFFFFFFFFF8;

  swift_release();
  swift_release();
  swift_release();
  objc_release(*(id *)(v0
                     + ((((((v12 + 15) & 0xFFFFFFFFFFFFFFF8) + 63) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)));
  return swift_deallocObject();
}

uint64_t objectdestroyTm_9(uint64_t *a1, void (*a2)(_QWORD), void (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;

  v6 = __swift_instantiateConcreteTypeFromMangledName(a1);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = (*(_QWORD *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(unint64_t, uint64_t))(v7 + 8))(v3 + v8, v6);
  a2(*(_QWORD *)(v3 + v9));
  a3(*(_QWORD *)(v3 + ((v9 + 15) & 0xFFFFFFFFFFFFFFF8)));
  return swift_deallocObject();
}

uint64_t __swift_destroy_boxed_opaque_existential_1(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + 24) - 8);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0)
    return swift_release();
  else
    return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_3(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_5(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_6(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_7(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_9(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_10(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_11(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_12(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_13(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_14(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_15(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_16(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_17(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_18(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_19(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_20(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_21(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_22(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_23(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_24(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_25(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_26(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_27(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_28(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_29(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_30(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_31(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_32(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_33(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_34(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_35(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_36(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_37(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_38(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_39(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_40(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_41(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_42(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_43(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_44(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_45(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_46(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_47(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_48(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_49(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_50(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_51(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_52(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_53(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_54(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

_QWORD *__swift_project_boxed_opaque_existential_1(_QWORD *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
    return (_QWORD *)(*result
                    + ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80)));
  return result;
}

uint64_t __swift_mutable_project_boxed_opaque_existential_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

uint64_t *__swift_assign_boxed_opaque_existential_1(uint64_t *result, uint64_t *a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[24];

  if (result != a2)
  {
    v3 = result;
    v4 = result[3];
    v5 = a2[3];
    if (v4 == v5)
    {
      v9 = *(_QWORD *)(v4 - 8);
      if ((*(_BYTE *)(v9 + 82) & 2) != 0)
      {
        v10 = *a2;
        swift_retain();
        result = (uint64_t *)swift_release();
        *v3 = v10;
      }
      else
      {
        return (uint64_t *)(*(uint64_t (**)(uint64_t *, uint64_t *, uint64_t))(v9 + 24))(result, a2, result[3]);
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      v6 = *(_QWORD *)(v4 - 8);
      v7 = *(_QWORD *)(v5 - 8);
      v8 = *(_DWORD *)(v7 + 80);
      if ((*(_BYTE *)(v6 + 82) & 2) != 0)
      {
        if ((v8 & 0x20000) != 0)
        {
          *result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(_BYTE *, uint64_t *, uint64_t))(v6 + 32))(v11, result, v4);
        if ((v8 & 0x20000) != 0)
        {
          *v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v11, v4);
      }
    }
  }
  return result;
}

_BYTE *__swift_memcpy1_1(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

__n128 __swift_memcpy40_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

__n128 __swift_memcpy96_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __n128 result;
  __int128 v4;
  __int128 v5;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  result = *(__n128 *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(__n128 *)(a1 + 32) = result;
  *(_OWORD *)(a1 + 48) = v4;
  return result;
}

__n128 __swift_memcpy33_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t objectdestroy_2Tm_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v1 = sub_1CA85A5B0();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  return swift_deallocObject();
}

uint64_t objectdestroy_2Tm_1()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

uint64_t objectdestroy_2Tm_2()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t objectdestroy_14Tm()
{
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t objectdestroy_2Tm_3()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

uint64_t objectdestroy_2Tm_4()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

uint64_t objectdestroy_2Tm_5()
{
  id *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  unsigned int (*v8)(char *, uint64_t, uint64_t);
  char *v9;
  uint64_t v11;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED874650) - 8) + 80);
  v2 = (v1 + 80) & ~v1;

  swift_release();
  swift_release();

  swift_release();
  v3 = (char *)v0 + v2;
  v4 = type metadata accessor for CacherStatusUpdater(0);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))((char *)v0 + v2, 1, v4))
  {
    v5 = type metadata accessor for CacherStatus(0);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))((char *)v0 + v2, 1, v5))
    {
      swift_bridgeObjectRelease();
      v6 = &v3[*(int *)(v5 + 20)];
      v7 = sub_1CA85A5B0();
      v11 = *(_QWORD *)(v7 - 8);
      v8 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
      if (!v8(v6, 1, v7))
        (*(void (**)(char *, uint64_t))(v11 + 8))(v6, v7);
      v9 = &v3[*(int *)(v5 + 24)];
      if (!v8(v9, 1, v7))
        (*(void (**)(char *, uint64_t))(v11 + 8))(v9, v7);
    }
    swift_bridgeObjectRelease();
  }
  return swift_deallocObject();
}

__n128 __swift_memcpy49_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

__n128 __swift_memcpy80_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(__n128 *)(a1 + 16) = result;
  *(_OWORD *)(a1 + 32) = v3;
  return result;
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

_QWORD *__swift_memcpy8_8(_QWORD *result, _QWORD *a2)
{
  *result = *a2;
  return result;
}

__n128 __swift_memcpy72_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

void *__swift_memcpy296_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x128uLL);
}

uint64_t __swift_memcpy6_1(uint64_t result, int *a2)
{
  int v2;

  v2 = *a2;
  *(_WORD *)(result + 4) = *((_WORD *)a2 + 2);
  *(_DWORD *)result = v2;
  return result;
}

__n128 __swift_memcpy17_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x1CAA4F18C]((char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

__n128 __swift_memcpy24_4(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

__n128 __swift_memcpy32_4(_OWORD *a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t __swift_instantiateGenericMetadata(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD v6[3];

  v6[0] = a2;
  v6[1] = a3;
  v6[2] = a4;
  return MEMORY[0x1CAA4F138](a1, v6, a5);
}

__n128 __swift_memcpy25_8(uint64_t a1, uint64_t a2)
{
  __n128 result;

  result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x1CAA4F198](255, (char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(_BYTE *)(*(_QWORD *)(a1 - 8) + 82) & 2) != 0)
    return *(_QWORD *)a2;
  return a2;
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  if ((*(_DWORD *)(*(_QWORD *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t objectdestroy_10Tm()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t objectdestroy_3Tm()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t __swift_memcpy9_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_BYTE *)(result + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)result = v2;
  return result;
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

__n128 __swift_memcpy56_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

__n128 __swift_memcpy88_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __n128 result;
  __int128 v4;
  __int128 v5;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  result = *(__n128 *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t __swift_memcpy3_2(uint64_t result, __int16 *a2)
{
  __int16 v2;

  v2 = *a2;
  *(_BYTE *)(result + 2) = *((_BYTE *)a2 + 2);
  *(_WORD *)result = v2;
  return result;
}

__n128 __swift_memcpy152_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __n128 result;
  __int128 v7;
  __int128 v8;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  result = *(__n128 *)(a2 + 96);
  v7 = *(_OWORD *)(a2 + 112);
  v8 = *(_OWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 128) = v8;
  *(__n128 *)(a1 + 96) = result;
  return result;
}

__n128 __swift_memcpy240_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __n128 result;
  __int128 v11;
  __int128 v12;

  v2 = *a2;
  v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  v4 = a2[3];
  v5 = a2[4];
  v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  v7 = a2[7];
  v8 = a2[8];
  v9 = a2[10];
  *(_OWORD *)(a1 + 144) = a2[9];
  *(_OWORD *)(a1 + 160) = v9;
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 128) = v8;
  result = (__n128)a2[11];
  v11 = a2[12];
  v12 = a2[14];
  *(_OWORD *)(a1 + 208) = a2[13];
  *(_OWORD *)(a1 + 224) = v12;
  *(__n128 *)(a1 + 176) = result;
  *(_OWORD *)(a1 + 192) = v11;
  return result;
}

__n128 __swift_memcpy48_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

_QWORD *__swift_memcpy8_4(_QWORD *result, _QWORD *a2)
{
  *result = *a2;
  return result;
}

_QWORD *__swift_memcpy13_8(_QWORD *result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_QWORD *)((char *)result + 5) = *(uint64_t *)((char *)a2 + 5);
  *result = v2;
  return result;
}

__n128 __swift_memcpy73_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 57) = *(_OWORD *)(a2 + 57);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t __swift_memcpy12_4(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_DWORD *)(result + 8) = *((_DWORD *)a2 + 2);
  *(_QWORD *)result = v2;
  return result;
}

void *__swift_memcpy304_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x130uLL);
}

_DWORD *__swift_memcpy4_1(_DWORD *result, _DWORD *a2)
{
  *result = *a2;
  return result;
}

uint64_t __swift_memcpy3_1(uint64_t result, __int16 *a2)
{
  __int16 v2;

  v2 = *a2;
  *(_BYTE *)(result + 2) = *((_BYTE *)a2 + 2);
  *(_WORD *)result = v2;
  return result;
}

void *__swift_memcpy288_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x120uLL);
}

__n128 __swift_memcpy28_4(uint64_t a1, uint64_t a2)
{
  __n128 result;

  result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 12) = *(_OWORD *)(a2 + 12);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t static PGTuningMetricsProtocol.calculatePrecision(truePositives:trueNegatives:falsePositives:falseNegatives:)(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  v3 = result + a3;
  if (__OFADD__(result, a3))
  {
    __break(1u);
  }
  else if (v3 < 1)
  {
    *(double *)&result = 0.0;
  }
  else
  {
    *(double *)&result = (double)result / (double)v3;
  }
  return result;
}

uint64_t static PGTuningMetricsProtocol.calculateRecall(truePositives:trueNegatives:falsePositives:falseNegatives:)(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  v4 = result + a4;
  if (__OFADD__(result, a4))
  {
    __break(1u);
  }
  else if (v4 < 1)
  {
    *(double *)&result = 0.0;
  }
  else
  {
    *(double *)&result = (double)result / (double)v4;
  }
  return result;
}

uint64_t PGTuningContextNone.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t PGTuningContextNone.init()()
{
  uint64_t v0;

  return v0;
}

uint64_t PGTuningContextNone.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t PGTuningContextNone.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_1CA23C310(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)(a2 + 96);
}

uint64_t sub_1CA23C318(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)(a2 + 104);
}

uint64_t dispatch thunk of PGTuningParameterProtocol.name.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of PGTuningParameterProtocol.name.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t dispatch thunk of PGTuningParameterProtocol.name.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of PGTuningEventProtocol.timestamp()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of PGTuningMetricsProtocol.payload()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of PGTuningEvaluatorProtocol.evaluateResults(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of PGTuningEventFactoryProtocol.generateEvent()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of PGTuningContextProtocol.updateContext(withEvent:andResult:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 40))();
}

uint64_t sub_1CA23C364()
{
  return swift_initClassMetadata2();
}

void type metadata accessor for PGTuningContextNone()
{
  JUMPOUT(0x1CAA4F138);
}

uint64_t method lookup function for PGTuningContextNone()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PGTuningContextNone.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of PGTuningContextNone.updateContext(withEvent:andResult:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

void sub_1CA23C3C4()
{
  JUMPOUT(0x1CAA4F1A4);
}

uint64_t dispatch thunk of PGTuningSubjectProtocol.run(withParameter:onEvent:withContext:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 72))();
}

uint64_t dispatch thunk of PGTuningSubjectProtocol.name()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 80))();
}

uint64_t sub_1CA23C3E4(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 152))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 56);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t sub_1CA23C440(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 152) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 152) = 0;
    if (a2)
      *(_QWORD *)(result + 56) = a2;
  }
  return result;
}

void type metadata accessor for __sFILE(uint64_t a1)
{
  sub_1CA23D360(a1, &qword_1EF94A670);
}

void type metadata accessor for PHSearchEntityPersonRelationType(uint64_t a1)
{
  sub_1CA23D360(a1, &qword_1EF94A678);
}

void type metadata accessor for QualityOfService(uint64_t a1)
{
  sub_1CA23D360(a1, &qword_1EF94A680);
}

void type metadata accessor for NetworkServiceType(uint64_t a1)
{
  sub_1CA23D360(a1, &qword_1EF94A688);
}

void type metadata accessor for PHSearchEntityType(uint64_t a1)
{
  sub_1CA23D360(a1, &qword_1EF94A690);
}

void type metadata accessor for PHMemoryMood(uint64_t a1)
{
  sub_1CA23D360(a1, &qword_1EF94A698);
}

void type metadata accessor for PHMemorySubcategory(uint64_t a1)
{
  sub_1CA23D360(a1, (unint64_t *)&unk_1EF94A6A0);
}

void type metadata accessor for PHMemoryCategory(uint64_t a1)
{
  sub_1CA23D360(a1, &qword_1ED872348);
}

void type metadata accessor for PHDetectionType(uint64_t a1)
{
  sub_1CA23D360(a1, &qword_1EF94A6B0);
}

void type metadata accessor for PFSharedLibraryMode(uint64_t a1)
{
  sub_1CA23D360(a1, &qword_1EF94A6B8);
}

void type metadata accessor for CLLocationCoordinate2D(uint64_t a1)
{
  sub_1CA23D360(a1, (unint64_t *)&unk_1EF94A6C0);
}

void type metadata accessor for os_unfair_lock_s(uint64_t a1)
{
  sub_1CA23D360(a1, &qword_1ED8731B8);
}

void type metadata accessor for KGElementIdentifier(uint64_t a1)
{
  sub_1CA23D360(a1, &qword_1ED874C80);
}

BOOL sub_1CA23C5BC()
{
  return sub_1CA85BC0C() == 0;
}

uint64_t sub_1CA23C5E4(uint64_t a1, uint64_t a2)
{
  return sub_1CA23D060(a1, a2, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1940]);
}

_WORD *sub_1CA23C5FC@<X0>(_WORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_WORD *)a2 = *result;
  *(_BYTE *)(a2 + 2) = 0;
  return result;
}

uint64_t sub_1CA23C60C()
{
  return sub_1CA23CC98((unint64_t *)&unk_1ED872338, (uint64_t (*)(uint64_t))type metadata accessor for PHMemoryCategory, (uint64_t)&unk_1CA8D3FD0);
}

_QWORD *sub_1CA23C638@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 & *result;
  return result;
}

BOOL sub_1CA23C64C(_QWORD *a1, uint64_t *a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  v4 = *v2 & *a2;
  if (v4 != *a2)
    *v2 |= v3;
  *a1 = v3;
  return v4 != v3;
}

_QWORD *sub_1CA23C67C(_QWORD *result)
{
  _QWORD *v1;

  *v1 |= *result;
  return result;
}

_QWORD *sub_1CA23C690(_QWORD *result)
{
  _QWORD *v1;

  *v1 &= *result;
  return result;
}

void sub_1CA23C6AC(_WORD *a1@<X8>)
{
  _WORD *v1;

  *a1 = *v1;
}

uint64_t sub_1CA23C6C0()
{
  sub_1CA85C368();
  sub_1CA85C38C();
  return sub_1CA85C3B0();
}

uint64_t sub_1CA23C704()
{
  return sub_1CA85C38C();
}

uint64_t sub_1CA23C72C()
{
  sub_1CA85C368();
  sub_1CA85C38C();
  return sub_1CA85C3B0();
}

void sub_1CA23C76C(_QWORD *a1@<X8>)
{
  *a1 = 0;
}

_QWORD *sub_1CA23C774@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 | *result;
  return result;
}

_QWORD *sub_1CA23C788@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 ^ *result;
  return result;
}

_QWORD *sub_1CA23C79C@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  uint64_t v3;

  v3 = *v2 & *result;
  if (v3)
    *v2 &= ~*result;
  *(_QWORD *)a2 = v3;
  *(_BYTE *)(a2 + 8) = v3 == 0;
  return result;
}

uint64_t *sub_1CA23C7C8@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *result;
  v4 = *v2;
  *v2 |= *result;
  v5 = v4 & v3;
  *(_QWORD *)a2 = v5;
  *(_BYTE *)(a2 + 8) = v5 == 0;
  return result;
}

_QWORD *sub_1CA23C7EC(_QWORD *result)
{
  _QWORD *v1;

  *v1 ^= *result;
  return result;
}

_QWORD *sub_1CA23C800@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_1CA23C814(_QWORD *a1)
{
  _QWORD *v1;

  return (*v1 & ~*a1) == 0;
}

BOOL sub_1CA23C828(_QWORD *a1)
{
  _QWORD *v1;

  return (*v1 & *a1) == 0;
}

BOOL sub_1CA23C83C(_QWORD *a1)
{
  _QWORD *v1;

  return (*a1 & ~*v1) == 0;
}

BOOL sub_1CA23C850()
{
  _QWORD *v0;

  return *v0 == 0;
}

uint64_t sub_1CA23C860()
{
  return sub_1CA85BD8C();
}

_QWORD *sub_1CA23C878(_QWORD *result)
{
  _QWORD *v1;

  *v1 &= ~*result;
  return result;
}

BOOL sub_1CA23C88C(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2;
}

uint64_t sub_1CA23C8A0()
{
  sub_1CA85C368();
  sub_1CA85C374();
  return sub_1CA85C3B0();
}

uint64_t sub_1CA23C8E4()
{
  return sub_1CA85C374();
}

uint64_t sub_1CA23C90C()
{
  sub_1CA85C368();
  sub_1CA85C374();
  return sub_1CA85C3B0();
}

uint64_t sub_1CA23C94C(uint64_t a1, id *a2)
{
  uint64_t result;

  result = sub_1CA85B51C();
  *a2 = 0;
  return result;
}

uint64_t sub_1CA23C9C0(uint64_t a1, id *a2)
{
  char v3;

  v3 = sub_1CA85B528();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_1CA23CA3C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  sub_1CA85B534();
  v2 = sub_1CA85B510();
  result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_1CA23CA7C(uint64_t a1, uint64_t a2)
{
  return sub_1CA23D060(a1, a2, MEMORY[0x1E0DEA950]);
}

BOOL sub_1CA23CA90(unsigned __int16 *a1, unsigned __int16 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_1CA23CAA4(uint64_t a1)
{
  MEMORY[0x1CAA4F1A4](&unk_1CA8D44C4, a1);
  return sub_1CA85A880();
}

uint64_t sub_1CA23CAE0()
{
  MEMORY[0x1CAA4F1A4](&unk_1CA8D44C4);
  return sub_1CA85A874();
}

uint64_t sub_1CA23CB28(uint64_t a1, uint64_t a2)
{
  sub_1CA85C368();
  MEMORY[0x1CAA4F1A4](&unk_1CA8D44C4, a2);
  sub_1CA85A874();
  return sub_1CA85C3B0();
}

_QWORD *sub_1CA23CB80@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t sub_1CA23CB8C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1CA4CD8FC();
  result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

_QWORD *sub_1CA23CBC8@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *result;
  *(_BYTE *)(a2 + 8) = 0;
  return result;
}

void sub_1CA23CBD8(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
}

uint64_t sub_1CA23CBE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;

  v0 = sub_1CA85B534();
  v2 = v1;
  if (v0 == sub_1CA85B534() && v2 == v3)
    v5 = 1;
  else
    v5 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t sub_1CA23CC6C()
{
  return sub_1CA23CC98(&qword_1EF94A6D0, (uint64_t (*)(uint64_t))type metadata accessor for PHSearchEntityPersonRelationType, (uint64_t)&unk_1CA8D4168);
}

uint64_t sub_1CA23CC98(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a2(255);
    result = MEMORY[0x1CAA4F1A4](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1CA23CCD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x1CAA4F1A4](&unk_1CA8D44C4, a3);
  return sub_1CA85A868();
}

uint64_t sub_1CA23CD24()
{
  sub_1CA23CC98(&qword_1EF94A840, (uint64_t (*)(uint64_t))type metadata accessor for GEOSpatialEventLookupCategory, (uint64_t)&unk_1CA8D4400);
  sub_1CA23CC98(&qword_1EF94A848, (uint64_t (*)(uint64_t))type metadata accessor for GEOSpatialEventLookupCategory, (uint64_t)&unk_1CA8D43A8);
  return sub_1CA85C0EC();
}

uint64_t sub_1CA23CDA8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1CA85B510();
  result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_1CA23CDEC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_1CA85B534();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1CA23CE14()
{
  sub_1CA23CC98(&qword_1EF94A830, (uint64_t (*)(uint64_t))type metadata accessor for URLResourceKey, (uint64_t)&unk_1CA8D45C4);
  sub_1CA23CC98(&qword_1EF94A838, (uint64_t (*)(uint64_t))type metadata accessor for URLResourceKey, (uint64_t)&unk_1CA8D4564);
  return sub_1CA85C0EC();
}

uint64_t initializeBufferWithCopyOfBuffer for LocationRecipe(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a2;
  *a1 = *a2;
  v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t getEnumTagSinglePayload for JobConfiguration.JobCadence(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 32))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for JobConfiguration.JobCadence(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 32) = v3;
  return result;
}

void type metadata accessor for MKCoordinateRegion(uint64_t a1)
{
  sub_1CA23D360(a1, (unint64_t *)&unk_1EF94A798);
}

void type metadata accessor for PLSearchSeason(uint64_t a1)
{
  sub_1CA23D360(a1, &qword_1ED874A60);
}

void type metadata accessor for CLSAssetPrefetchOptions(uint64_t a1)
{
  sub_1CA23D360(a1, &qword_1EF94A7A8);
}

void type metadata accessor for URLResourceKey(uint64_t a1)
{
  sub_1CA23D360(a1, &qword_1EF94A7B0);
}

void type metadata accessor for CFString(uint64_t a1)
{
  sub_1CA23D360(a1, &qword_1ED874A28);
}

void type metadata accessor for PGGraphLocationMask(uint64_t a1)
{
  sub_1CA23D360(a1, (unint64_t *)&unk_1ED8731C0);
}

void type metadata accessor for GEOSpatialEventLookupCategory(uint64_t a1)
{
  sub_1CA23D360(a1, &qword_1EF94A7B8);
}

void type metadata accessor for __sbuf(uint64_t a1)
{
  sub_1CA23D360(a1, &qword_1EF94A7C0);
}

void type metadata accessor for PHMemoryCurationLength(uint64_t a1)
{
  sub_1CA23D360(a1, &qword_1EF94A7C8);
}

void type metadata accessor for PHQuestionState(uint64_t a1)
{
  sub_1CA23D360(a1, &qword_1EF94A7D0);
}

uint64_t sub_1CA23CFDC()
{
  return sub_1CA23CC98(&qword_1EF94A7D8, (uint64_t (*)(uint64_t))type metadata accessor for GEOSpatialEventLookupCategory, (uint64_t)&unk_1CA8D4370);
}

uint64_t sub_1CA23D008()
{
  return sub_1CA23CC98(&qword_1EF94A7E0, (uint64_t (*)(uint64_t))type metadata accessor for GEOSpatialEventLookupCategory, (uint64_t)&unk_1CA8D4348);
}

uint64_t sub_1CA23D034()
{
  return sub_1CA23CC98((unint64_t *)&unk_1EF94A7E8, (uint64_t (*)(uint64_t))type metadata accessor for GEOSpatialEventLookupCategory, (uint64_t)&unk_1CA8D43D8);
}

uint64_t sub_1CA23D060(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4;
  uint64_t v5;

  v4 = sub_1CA85B534();
  v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1CA23D09C()
{
  sub_1CA85B534();
  sub_1CA85B4B0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1CA23D0DC()
{
  uint64_t v0;

  sub_1CA85B534();
  sub_1CA85C368();
  sub_1CA85B4B0();
  v0 = sub_1CA85C3B0();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1CA23D14C()
{
  return sub_1CA23CC98((unint64_t *)&qword_1ED874A10, (uint64_t (*)(uint64_t))type metadata accessor for CFString, (uint64_t)&unk_1CA8D48B8);
}

uint64_t sub_1CA23D178()
{
  return sub_1CA23CC98(&qword_1EF94A7F8, (uint64_t (*)(uint64_t))type metadata accessor for URLResourceKey, (uint64_t)&unk_1CA8D4528);
}

uint64_t sub_1CA23D1A4()
{
  return sub_1CA23CC98(&qword_1EF94A800, (uint64_t (*)(uint64_t))type metadata accessor for URLResourceKey, (uint64_t)&unk_1CA8D44FC);
}

uint64_t sub_1CA23D1D0()
{
  return sub_1CA23CC98(&qword_1EF94A808, (uint64_t (*)(uint64_t))type metadata accessor for URLResourceKey, (uint64_t)&unk_1CA8D4598);
}

uint64_t sub_1CA23D1FC()
{
  return sub_1CA23CC98(&qword_1EF94A810, (uint64_t (*)(uint64_t))type metadata accessor for CLSAssetPrefetchOptions, (uint64_t)&unk_1CA8D46A8);
}

uint64_t sub_1CA23D228()
{
  return sub_1CA23CC98(&qword_1EF94A818, (uint64_t (*)(uint64_t))type metadata accessor for CLSAssetPrefetchOptions, (uint64_t)&unk_1CA8D4674);
}

uint64_t sub_1CA23D254()
{
  return sub_1CA23CC98(&qword_1EF94A820, (uint64_t (*)(uint64_t))type metadata accessor for CLSAssetPrefetchOptions, (uint64_t)&unk_1CA8D46D4);
}

uint64_t sub_1CA23D280()
{
  return sub_1CA23CC98(&qword_1EF94A828, (uint64_t (*)(uint64_t))type metadata accessor for CLSAssetPrefetchOptions, (uint64_t)&unk_1CA8D4710);
}

uint64_t sub_1CA23D2AC()
{
  return sub_1CA23CC98((unint64_t *)&unk_1ED874A50, (uint64_t (*)(uint64_t))type metadata accessor for PLSearchSeason, (uint64_t)&unk_1CA8D4858);
}

uint64_t sub_1CA23D2D8()
{
  return sub_1CA23CC98((unint64_t *)&unk_1ED874A18, (uint64_t (*)(uint64_t))type metadata accessor for CFString, (uint64_t)&unk_1CA8D4498);
}

uint64_t getEnumTagSinglePayload for CacheRefreshConfiguration(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for CacheRefreshConfiguration(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 16) = v3;
  return result;
}

void type metadata accessor for MKCoordinateSpan(uint64_t a1)
{
  sub_1CA23D360(a1, (unint64_t *)&unk_1EF94A850);
}

void sub_1CA23D360(uint64_t a1, unint64_t *a2)
{
  unint64_t ForeignTypeMetadata;
  uint64_t v4;

  if (!*a2)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4)
      atomic_store(ForeignTypeMetadata, a2);
  }
}

uint64_t sub_1CA23D3EC(uint64_t a1)
{
  return sub_1CA23D404(a1, qword_1ED8746E0);
}

uint64_t sub_1CA23D3F8(uint64_t a1)
{
  return sub_1CA23D404(a1, qword_1ED8747E8);
}

uint64_t sub_1CA23D404(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = sub_1CA85B360();
  __swift_allocate_value_buffer(v3, a2);
  *(_QWORD *)__swift_project_value_buffer(v3, (uint64_t)a2) = 5;
  return (*(uint64_t (**)(void))(*(_QWORD *)(v3 - 8) + 104))();
}

void __swiftcall PGStoryPromptSuggestionQuestionFactory.init(workingContext:questionVersion:)(PGStoryPromptSuggestionQuestionFactory *__return_ptr retstr, PGManagerWorkingContext *workingContext, Swift::Int16 questionVersion)
{
  objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithWorkingContext_questionVersion_, workingContext, questionVersion);

}

id PGStoryPromptSuggestionQuestionFactory.init(workingContext:questionVersion:)(void *a1, __int16 a2)
{
  id v3;
  objc_super v5;

  v5.super_class = (Class)PGStoryPromptSuggestionQuestionFactory;
  v3 = objc_msgSendSuper2(&v5, sel_initWithWorkingContext_questionVersion_, a1, a2);

  return v3;
}

uint64_t PGStoryPromptSuggestionQuestionFactory.questionType.getter()
{
  return 30;
}

uint64_t PGStoryPromptSuggestionQuestionFactory.questionOptions.getter()
{
  return 0x10000000;
}

uint64_t PGStoryPromptSuggestionQuestionFactory.generateQuestions(withLimit:progressBlock:)(uint64_t a1, void (*a2)(double), uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t *boxed_opaque_existential_1;
  id v20;
  id v21;
  id v22;
  uint64_t v23;
  id v24;
  id v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  double v29;
  void (*v30)(char *, unint64_t, uint64_t);
  char *v31;
  char *v32;
  char v33;
  void (*v34)(char *, uint64_t);
  char v35;
  uint64_t v36;
  id v37;
  void *v38;
  void *v39;
  id v40;
  id v41;
  id v42;
  uint64_t v43;
  void *v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  _BYTE *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  id v57;
  char *v58;
  void (*v59)(double);
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _BYTE *v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  void (*v70)(char *, unint64_t, uint64_t);
  unsigned int v71;
  id v72;
  char *v73;
  uint64_t v74;
  id v75;
  uint64_t v76[6];

  v65 = a1;
  v5 = sub_1CA85AD0C();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v54 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v73 = (char *)&v54 - v10;
  v11 = sub_1CA85AD30();
  v74 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v68 = (char *)&v54 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1CA85B348();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v54 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = (_BYTE *)swift_slowAlloc();
  *v17 = 0;
  v67 = a3;
  a2(0.0);
  v66 = v17;
  if ((*v17 & 1) != 0)
    return MEMORY[0x1E0DEE9D8];
  v18 = sub_1CA85AAA8();
  v76[3] = v18;
  v76[4] = sub_1CA23CC98((unint64_t *)&qword_1ED872DD0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D766B0], MEMORY[0x1E0D76680]);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v76);
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v18 - 8) + 104))(boxed_opaque_existential_1, *MEMORY[0x1E0D76688], v18);
  LOBYTE(v18) = sub_1CA85A85C();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v76);
  if ((v18 & 1) == 0)
  {
    ((void (*)(_BYTE *, double))a2)(v66, 1.0);
    return MEMORY[0x1E0DEE9D8];
  }
  v59 = a2;
  v20 = objc_msgSend(v72, sel_workingContext);
  v21 = objc_msgSend(v20, sel_loggingConnection);

  sub_1CA85B354();
  if (!v65)
  {
    ((void (*)(_BYTE *, double))v59)(v66, 1.0);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    return MEMORY[0x1E0DEE9D8];
  }
  v76[0] = MEMORY[0x1E0DEE9E8];
  v22 = v72;
  v23 = sub_1CA23DC84();
  v24 = objc_msgSend(v22, sel_workingContext);
  v25 = objc_msgSend(v24, sel_photoLibrary);

  v57 = v25;
  v58 = v16;
  v64 = sub_1CA24E33C(v25, (uint64_t)v16);
  v26 = *(_QWORD *)(v23 + 16);
  if (!v26)
  {
    swift_bridgeObjectRelease();
    goto LABEL_28;
  }
  v55 = v14;
  v56 = v13;
  v27 = (*(unsigned __int8 *)(v74 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v74 + 80);
  v54 = v23;
  v28 = v23 + v27;
  v71 = *MEMORY[0x1E0D76C90];
  v29 = (double)v65;
  v30 = *(void (**)(char *, unint64_t, uint64_t))(v74 + 16);
  v69 = *(_QWORD *)(v74 + 72);
  v70 = v30;
  v31 = v68;
  v62 = v6;
  v63 = v5;
  v61 = v9;
  v60 = v11;
  v30(v68, v28, v11);
  while (1)
  {
    v32 = v73;
    sub_1CA85AD18();
    (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v9, v71, v5);
    v33 = sub_1CA85AD00();
    v34 = *(void (**)(char *, uint64_t))(v6 + 8);
    v34(v9, v5);
    v34(v32, v5);
    if ((v33 & 1) == 0)
    {
      (*(void (**)(char *, uint64_t))(v74 + 8))(v31, v11);
      goto LABEL_7;
    }
    sub_1CA85ACF4();
    sub_1CA85ACE8();
    v35 = sub_1CA85AD24();
    v36 = sub_1CA85ACDC();
    v37 = objc_allocWithZone((Class)PGStoryPromptSuggestionQuestion);
    v38 = (void *)sub_1CA85B510();
    swift_bridgeObjectRelease();
    v39 = (void *)sub_1CA85B510();
    swift_bridgeObjectRelease();
    v40 = v72;
    v41 = objc_msgSend(v37, sel_initWithPromptId_promptText_isValidated_assetCount_mcAvailabilityStatus_localFactoryScore_, v38, v39, v35 & 1, v36, v64, 1.0, v54);

    v42 = v41;
    v43 = swift_bridgeObjectRetain();
    sub_1CA23DF30(v43);
    swift_bridgeObjectRelease();
    v44 = (void *)sub_1CA85B978();
    swift_bridgeObjectRelease();
    LODWORD(v39) = objc_msgSend(v40, sel_shouldAddQuestion_toAlreadyGeneratedQuestions_, v42, v44);

    if (!(_DWORD)v39)
    {
      v48 = v68;
      v11 = v60;
      (*(void (**)(char *, uint64_t))(v74 + 8))(v68, v60);

      v6 = v62;
      v5 = v63;
      v9 = v61;
      v31 = v48;
      goto LABEL_7;
    }
    v45 = v42;
    sub_1CA23F194(&v75, v45);

    v46 = v76[0];
    if ((v76[0] & 0xC000000000000001) != 0)
    {
      swift_bridgeObjectRetain();
      v47 = sub_1CA85BE04();
      swift_bridgeObjectRelease();
    }
    else
    {
      v47 = *(_QWORD *)(v76[0] + 16);
    }
    v6 = v62;
    v5 = v63;
    v9 = v61;
    v49 = v66;
    ((void (*)(_BYTE *, double))v59)(v66, (double)v47 / v29);
    if ((*v49 & 1) != 0)
      break;
    v11 = v60;
    if ((v46 & 0xC000000000000001) != 0)
    {
      swift_bridgeObjectRetain();
      v50 = sub_1CA85BE04();

      swift_bridgeObjectRelease();
    }
    else
    {
      v50 = *(_QWORD *)(v46 + 16);

    }
    v31 = v68;
    (*(void (**)(char *, uint64_t))(v74 + 8))(v68, v11);
    if (v50 >= v65)
      goto LABEL_27;
LABEL_7:
    v28 += v69;
    if (!--v26)
      goto LABEL_27;
    v70(v31, v28, v11);
  }

  (*(void (**)(char *, uint64_t))(v74 + 8))(v68, v60);
LABEL_27:
  swift_bridgeObjectRelease();
  v13 = v56;
  v14 = v55;
LABEL_28:
  ((void (*)(_BYTE *, double))v59)(v66, 1.0);
  v53 = sub_1CA243374(v76[0]);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  if (v53 < 0 || (v53 & 0x4000000000000000) != 0)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED874A08);
    v51 = sub_1CA85C050();

    swift_release();
  }
  else
  {
    sub_1CA85C290();

    v51 = v53;
  }
  swift_release();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v58, v13);
  return v51;
}

uint64_t *__swift_allocate_boxed_opaque_existential_1(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t v2;

  v1 = a1;
  if ((*(_BYTE *)(*(_QWORD *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t sub_1CA23DC84()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  NSObject *v13;
  uint64_t v14;
  _QWORD *v15;
  id v16;
  NSObject *v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t);
  char v20;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  uint64_t v25;
  uint64_t v26;

  v1 = v0;
  v2 = sub_1CA85B3C0();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v25 - v7;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED872E00);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = MEMORY[0x1E0DEE9D8];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED874888);
  swift_allocObject();
  v12 = sub_1CA85AA18();
  v13 = dispatch_group_create();
  dispatch_group_enter(v13);
  v14 = sub_1CA85B8E8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v11, 1, 1, v14);
  v15 = (_QWORD *)swift_allocObject();
  v15[2] = 0;
  v15[3] = 0;
  v15[4] = v1;
  v15[5] = v12;
  v15[6] = v13;
  v16 = v1;
  swift_retain();
  v17 = v13;
  sub_1CA23EE8C((uint64_t)v11, (uint64_t)&unk_1EF94AD18, (uint64_t)v15);
  swift_release();
  sub_1CA85B3A8();
  if (qword_1ED874808 != -1)
    swift_once();
  v18 = sub_1CA85B360();
  __swift_project_value_buffer(v18, (uint64_t)qword_1ED8747E8);
  sub_1CA85B3B4();
  v19 = *(void (**)(char *, uint64_t))(v3 + 8);
  v19(v6, v2);
  v20 = sub_1CA85BB04();
  v19(v8, v2);
  if ((v20 & 1) != 0)
  {
    v22 = sub_1CA85B330();
    v23 = sub_1CA85BAE0();
    if (os_log_type_enabled(v22, v23))
    {
      v24 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v24 = 0;
      _os_log_impl(&dword_1CA237000, v22, v23, "Error reading prompt suggestions from cache: timeout.", v24, 2u);
      MEMORY[0x1CAA4F27C](v24, -1, -1);
    }
    swift_release();

    return MEMORY[0x1E0DEE9D8];
  }
  else
  {
    sub_1CA85AA00();

    swift_release();
    return v26;
  }
}

uint64_t sub_1CA23DF30(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  int64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  int64_t v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;

  v1 = a1;
  v2 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (sub_1CA85BE04())
      goto LABEL_3;
LABEL_6:
    v3 = MEMORY[0x1E0DEE9E8];
    if (v2)
      goto LABEL_4;
LABEL_7:
    v8 = -1 << *(_BYTE *)(v1 + 32);
    v30 = v1 + 56;
    v5 = ~v8;
    v9 = -v8;
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v7 = v10 & *(_QWORD *)(v1 + 56);
    swift_bridgeObjectRetain();
    result = swift_retain();
    v6 = 0;
    goto LABEL_11;
  }
  if (!*(_QWORD *)(a1 + 16))
    goto LABEL_6;
LABEL_3:
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94AB48);
  v3 = sub_1CA85BEAC();
  if (!v2)
    goto LABEL_7;
LABEL_4:
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1CA85BDC8();
  type metadata accessor for PGStoryPromptSuggestionQuestion();
  sub_1CA23CC98(&qword_1EF94ACF8, (uint64_t (*)(uint64_t))type metadata accessor for PGStoryPromptSuggestionQuestion, MEMORY[0x1E0DEFCF8]);
  result = sub_1CA85B9CC();
  v1 = v34;
  v30 = v35;
  v5 = v36;
  v6 = v37;
  v7 = v38;
LABEL_11:
  v29 = (unint64_t)(v5 + 64) >> 6;
  v11 = v3 + 56;
  while (v1 < 0)
  {
    v16 = sub_1CA85BE34();
    if (!v16)
      goto LABEL_45;
    *(_QWORD *)&v31 = v16;
    type metadata accessor for PGStoryPromptSuggestionQuestion();
    swift_dynamicCast();
LABEL_36:
    type metadata accessor for PGStoryPromptSuggestionQuestion();
    swift_dynamicCast();
    result = sub_1CA85BE64();
    v22 = -1 << *(_BYTE *)(v3 + 32);
    v23 = result & ~v22;
    v24 = v23 >> 6;
    if (((-1 << v23) & ~*(_QWORD *)(v11 + 8 * (v23 >> 6))) != 0)
    {
      v12 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v11 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_46;
        }
        v27 = v24 == v26;
        if (v24 == v26)
          v24 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v11 + 8 * v24);
      }
      while (v28 == -1);
      v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(_QWORD *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    v13 = *(_QWORD *)(v3 + 48) + 40 * v12;
    *(_OWORD *)v13 = v31;
    *(_OWORD *)(v13 + 16) = v32;
    *(_QWORD *)(v13 + 32) = v33;
    ++*(_QWORD *)(v3 + 16);
  }
  if (v7)
  {
    v14 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    v15 = v14 | (v6 << 6);
LABEL_35:
    v21 = *(id *)(*(_QWORD *)(v1 + 48) + 8 * v15);
    goto LABEL_36;
  }
  v17 = v6 + 1;
  if (!__OFADD__(v6, 1))
  {
    if (v17 >= v29)
      goto LABEL_45;
    v18 = *(_QWORD *)(v30 + 8 * v17);
    v19 = v6 + 1;
    if (!v18)
    {
      v19 = v6 + 2;
      if (v6 + 2 >= v29)
        goto LABEL_45;
      v18 = *(_QWORD *)(v30 + 8 * v19);
      if (!v18)
      {
        v19 = v6 + 3;
        if (v6 + 3 >= v29)
          goto LABEL_45;
        v18 = *(_QWORD *)(v30 + 8 * v19);
        if (!v18)
        {
          v19 = v6 + 4;
          if (v6 + 4 >= v29)
            goto LABEL_45;
          v18 = *(_QWORD *)(v30 + 8 * v19);
          if (!v18)
          {
            v19 = v6 + 5;
            if (v6 + 5 >= v29)
              goto LABEL_45;
            v18 = *(_QWORD *)(v30 + 8 * v19);
            if (!v18)
            {
              v20 = v6 + 6;
              while (v29 != v20)
              {
                v18 = *(_QWORD *)(v30 + 8 * v20++);
                if (v18)
                {
                  v19 = v20 - 1;
                  goto LABEL_34;
                }
              }
LABEL_45:
              swift_release();
              sub_1CA24E6B8();
              return v3;
            }
          }
        }
      }
    }
LABEL_34:
    v7 = (v18 - 1) & v18;
    v15 = __clz(__rbit64(v18)) + (v19 << 6);
    v6 = v19;
    goto LABEL_35;
  }
LABEL_46:
  __break(1u);
  return result;
}

uint64_t sub_1CA23E340(uint64_t a1)
{
  return sub_1CA23E378(a1, (unint64_t *)&qword_1EF9581A0, (uint64_t)off_1E83FA050, (unint64_t *)&qword_1EF94AC70);
}

uint64_t sub_1CA23E35C(uint64_t a1)
{
  return sub_1CA23E378(a1, (unint64_t *)&qword_1EF94AB50, (uint64_t)off_1E83FA3C0, (unint64_t *)&qword_1EF94AB58);
}

uint64_t sub_1CA23E378(uint64_t a1, unint64_t *a2, uint64_t a3, unint64_t *a4)
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  int64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  char v30;
  unint64_t v31;
  BOOL v32;
  uint64_t v33;
  int64_t v34;
  uint64_t v35;
  __int128 v36;
  __int128 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;

  v6 = a1;
  v7 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (sub_1CA85BE04())
      goto LABEL_3;
LABEL_6:
    v8 = MEMORY[0x1E0DEE9E8];
    if (v7)
      goto LABEL_4;
LABEL_7:
    v13 = -1 << *(_BYTE *)(v6 + 32);
    v35 = v6 + 56;
    v10 = ~v13;
    v14 = -v13;
    if (v14 < 64)
      v15 = ~(-1 << v14);
    else
      v15 = -1;
    v12 = v15 & *(_QWORD *)(v6 + 56);
    swift_bridgeObjectRetain();
    result = swift_retain();
    v11 = 0;
    goto LABEL_11;
  }
  if (!*(_QWORD *)(a1 + 16))
    goto LABEL_6;
LABEL_3:
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94AB48);
  v8 = sub_1CA85BEAC();
  if (!v7)
    goto LABEL_7;
LABEL_4:
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1CA85BDC8();
  sub_1CA24EEC0(0, a2);
  sub_1CA24E6C0(a4, a2);
  result = sub_1CA85B9CC();
  v6 = v39;
  v35 = v40;
  v10 = v41;
  v11 = v42;
  v12 = v43;
LABEL_11:
  v34 = (unint64_t)(v10 + 64) >> 6;
  v16 = v8 + 56;
  while (v6 < 0)
  {
    v21 = sub_1CA85BE34();
    if (!v21)
      goto LABEL_45;
    *(_QWORD *)&v36 = v21;
    sub_1CA24EEC0(0, a2);
    swift_dynamicCast();
LABEL_36:
    sub_1CA24EEC0(0, a2);
    swift_dynamicCast();
    result = sub_1CA85BE64();
    v27 = -1 << *(_BYTE *)(v8 + 32);
    v28 = result & ~v27;
    v29 = v28 >> 6;
    if (((-1 << v28) & ~*(_QWORD *)(v16 + 8 * (v28 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v28) & ~*(_QWORD *)(v16 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v30 = 0;
      v31 = (unint64_t)(63 - v27) >> 6;
      do
      {
        if (++v29 == v31 && (v30 & 1) != 0)
        {
          __break(1u);
          goto LABEL_46;
        }
        v32 = v29 == v31;
        if (v29 == v31)
          v29 = 0;
        v30 |= v32;
        v33 = *(_QWORD *)(v16 + 8 * v29);
      }
      while (v33 == -1);
      v17 = __clz(__rbit64(~v33)) + (v29 << 6);
    }
    *(_QWORD *)(v16 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = *(_QWORD *)(v8 + 48) + 40 * v17;
    *(_OWORD *)v18 = v36;
    *(_OWORD *)(v18 + 16) = v37;
    *(_QWORD *)(v18 + 32) = v38;
    ++*(_QWORD *)(v8 + 16);
  }
  if (v12)
  {
    v19 = __clz(__rbit64(v12));
    v12 &= v12 - 1;
    v20 = v19 | (v11 << 6);
LABEL_35:
    v26 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v20);
    goto LABEL_36;
  }
  v22 = v11 + 1;
  if (!__OFADD__(v11, 1))
  {
    if (v22 >= v34)
      goto LABEL_45;
    v23 = *(_QWORD *)(v35 + 8 * v22);
    v24 = v11 + 1;
    if (!v23)
    {
      v24 = v11 + 2;
      if (v11 + 2 >= v34)
        goto LABEL_45;
      v23 = *(_QWORD *)(v35 + 8 * v24);
      if (!v23)
      {
        v24 = v11 + 3;
        if (v11 + 3 >= v34)
          goto LABEL_45;
        v23 = *(_QWORD *)(v35 + 8 * v24);
        if (!v23)
        {
          v24 = v11 + 4;
          if (v11 + 4 >= v34)
            goto LABEL_45;
          v23 = *(_QWORD *)(v35 + 8 * v24);
          if (!v23)
          {
            v24 = v11 + 5;
            if (v11 + 5 >= v34)
              goto LABEL_45;
            v23 = *(_QWORD *)(v35 + 8 * v24);
            if (!v23)
            {
              v25 = v11 + 6;
              while (v34 != v25)
              {
                v23 = *(_QWORD *)(v35 + 8 * v25++);
                if (v23)
                {
                  v24 = v25 - 1;
                  goto LABEL_34;
                }
              }
LABEL_45:
              swift_release();
              sub_1CA24E6B8();
              return v8;
            }
          }
        }
      }
    }
LABEL_34:
    v12 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v24 << 6);
    v11 = v24;
    goto LABEL_35;
  }
LABEL_46:
  __break(1u);
  return result;
}

uint64_t sub_1CA23E79C(uint64_t a1)
{
  return sub_1CA23E378(a1, (unint64_t *)&unk_1EF9588A0, 0x1E0D429F0, &qword_1EF94ABD0);
}

uint64_t sub_1CA23E848(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;
  _QWORD *v10;

  v8[4] = a7;
  v8[5] = a8;
  v8[3] = a6;
  v9 = sub_1CA85B06C();
  v8[6] = v9;
  v8[7] = *(_QWORD *)(v9 - 8);
  v8[8] = swift_task_alloc();
  v8[9] = swift_task_alloc();
  v8[10] = swift_task_alloc();
  sub_1CA85B0CC();
  v10 = (_QWORD *)swift_task_alloc();
  v8[11] = v10;
  *v10 = v8;
  v10[1] = sub_1CA23E910;
  return sub_1CA85B0C0();
}

uint64_t sub_1CA23E910(void *a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(*(_QWORD *)v2 + 96) = v1;
  swift_task_dealloc();
  if (!v1)

  return swift_task_switch();
}

uint64_t sub_1CA23E97C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  void (*v6)(uint64_t, uint64_t);

  v1 = *(_QWORD *)(v0 + 80);
  v3 = *(_QWORD *)(v0 + 56);
  v2 = *(_QWORD *)(v0 + 64);
  v4 = *(_QWORD *)(v0 + 48);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v3 + 32))(v1, *(_QWORD *)(v0 + 72), v4);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v3 + 104))(v2, *MEMORY[0x1E0D77958], v4);
  v5 = sub_1CA85B060();
  v6 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v6(v2, v4);
  *(_BYTE *)(v0 + 104) = v5 & 1;
  sub_1CA85AA0C();
  v6(v1, v4);
  dispatch_group_leave(*(dispatch_group_t *)(v0 + 40));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1CA23EA54()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  void *v6;
  uint8_t *v7;
  _QWORD *v8;
  id v9;
  uint64_t v10;
  void *v11;

  v1 = *(void **)(v0 + 96);
  v2 = v1;
  v3 = v1;
  v4 = sub_1CA85B330();
  v5 = sub_1CA85BAE0();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = *(void **)(v0 + 96);
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v7 = 138412290;
    v9 = v6;
    v10 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 16) = v10;
    sub_1CA85BCF0();
    *v8 = v10;

    _os_log_impl(&dword_1CA237000, v4, v5, "Error getting MC status: %@", v7, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED873230);
    swift_arrayDestroy();
    MEMORY[0x1CAA4F27C](v8, -1, -1);
    MEMORY[0x1CAA4F27C](v7, -1, -1);

  }
  else
  {
    v11 = *(void **)(v0 + 96);

  }
  dispatch_group_leave(*(dispatch_group_t *)(v0 + 40));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1CA23EC00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;

  v6[4] = a5;
  v6[5] = a6;
  v6[3] = a4;
  v7 = sub_1CA85AD0C();
  v6[6] = v7;
  v6[7] = *(_QWORD *)(v7 - 8);
  v6[8] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1CA23EC64()
{
  _QWORD *v0;
  void *v1;
  id v2;
  id v3;

  v1 = (void *)v0[3];
  sub_1CA85AF58();
  v2 = objc_msgSend(v1, sel_workingContext);
  v3 = objc_msgSend(v2, sel_photoLibrary);

  v0[9] = sub_1CA85AF40();
  v0[10] = 0;
  (*(void (**)(_QWORD, _QWORD, _QWORD))(v0[7] + 104))(v0[8], *MEMORY[0x1E0D76C90], v0[6]);
  sub_1CA23CC98(&qword_1ED8748D0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D771A0], MEMORY[0x1E0D771A8]);
  sub_1CA85B8AC();
  return swift_task_switch();
}

uint64_t sub_1CA23ED70()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = v0[10];
  v3 = v0[7];
  v2 = v0[8];
  v4 = v0[6];
  v0[11] = sub_1CA85AF4C();
  v0[12] = v1;
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  return swift_task_switch();
}

uint64_t sub_1CA23EDEC()
{
  uint64_t v0;
  NSObject *v1;

  v1 = *(NSObject **)(v0 + 40);
  *(_QWORD *)(v0 + 16) = *(_QWORD *)(v0 + 88);
  sub_1CA85AA0C();
  dispatch_group_leave(v1);
  swift_release();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1CA23EE50()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1CA23EE8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  v5 = sub_1CA85B8E8();
  v6 = *(_QWORD *)(v5 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 1, v5) != 1)
  {
    sub_1CA85B8DC();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
    if (!*(_QWORD *)(a3 + 16))
      return swift_task_create();
    goto LABEL_3;
  }
  sub_1CA24F1E8(a1);
  if (*(_QWORD *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1CA85B8AC();
    swift_unknownObjectRelease();
  }
  return swift_task_create();
}

void __swiftcall PGStoryPromptSuggestionQuestionFactory.init()(PGStoryPromptSuggestionQuestionFactory *__return_ptr retstr)
{
  objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
}

void PGStoryPromptSuggestionQuestionFactory.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

unint64_t sub_1CA23F034(uint64_t a1, uint64_t a2)
{
  id v4;
  unint64_t result;

  sub_1CA85C368();
  v4 = objc_msgSend(*(id *)(a1 + 16), sel_localIdentifier);
  sub_1CA85B534();

  sub_1CA85B4B0();
  swift_bridgeObjectRelease();
  sub_1CA85C3B0();
  result = sub_1CA85BDB0();
  *(_QWORD *)(a2 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
  *(_QWORD *)(*(_QWORD *)(a2 + 48) + 8 * result) = a1;
  ++*(_QWORD *)(a2 + 16);
  return result;
}

unint64_t sub_1CA23F114(uint64_t a1, uint64_t a2)
{
  unint64_t result;

  sub_1CA85BC78();
  result = sub_1CA85BDB0();
  *(_QWORD *)(a2 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
  *(_QWORD *)(*(_QWORD *)(a2 + 48) + 8 * result) = a1;
  ++*(_QWORD *)(a2 + 16);
  return result;
}

uint64_t sub_1CA23F194(_QWORD *a1, void *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  id v14;
  char v15;
  uint64_t v16;
  id v17;
  char v18;
  void *v19;
  id v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  id v24;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v3 = v2;
  v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0)
      v7 = *v2;
    else
      v7 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v8 = a2;
    v9 = sub_1CA85BE10();

    if (v9)
    {
      swift_bridgeObjectRelease();

      type metadata accessor for PGStoryPromptSuggestionQuestion();
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v28;
      swift_unknownObjectRelease();
      return 0;
    }
    result = sub_1CA85BE04();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    v21 = sub_1CA245960(v7, result + 1, &qword_1EF94ACF0, (void (*)(_QWORD))type metadata accessor for PGStoryPromptSuggestionQuestion, (void (*)(unint64_t))sub_1CA360298);
    v29 = v21;
    v22 = *(_QWORD *)(v21 + 16);
    if (*(_QWORD *)(v21 + 24) <= v22)
    {
      v26 = v22 + 1;
      v27 = v8;
      sub_1CA360298(v26);
      v23 = v29;
    }
    else
    {
      v23 = v21;
      v24 = v8;
    }
    sub_1CA23F114((uint64_t)v8, v23);
    *v3 = v23;
  }
  else
  {
    swift_bridgeObjectRetain();
    v11 = sub_1CA85BC78();
    v12 = -1 << *(_BYTE *)(v6 + 32);
    v13 = v11 & ~v12;
    if (((*(_QWORD *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0)
    {
      type metadata accessor for PGStoryPromptSuggestionQuestion();
      v14 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v13);
      v15 = sub_1CA85BC84();

      if ((v15 & 1) != 0)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        v19 = *(void **)(*(_QWORD *)(*v2 + 48) + 8 * v13);
        *a1 = v19;
        v20 = v19;
        return 0;
      }
      v16 = ~v12;
      while (1)
      {
        v13 = (v13 + 1) & v16;
        if (((*(_QWORD *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
          break;
        v17 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v13);
        v18 = sub_1CA85BC84();

        if ((v18 & 1) != 0)
          goto LABEL_12;
      }
    }
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v30 = *v2;
    *v2 = 0x8000000000000000;
    v8 = a2;
    sub_1CA24618C((uint64_t)v8, v13, isUniquelyReferenced_nonNull_native, (void (*)(uint64_t))sub_1CA360298, (void (*)(_QWORD))type metadata accessor for PGStoryPromptSuggestionQuestion, (void (*)(uint64_t))sub_1CA3637BC, (void (*)(void))sub_1CA3628B8);
    *v2 = v30;
  }
  swift_bridgeObjectRelease();
  *a1 = v8;
  return 1;
}

uint64_t sub_1CA23F448(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  BOOL v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v17;
  _QWORD *v18;
  BOOL v19;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v21;

  v7 = *v3;
  sub_1CA85C368();
  swift_bridgeObjectRetain();
  sub_1CA85B4B0();
  v8 = sub_1CA85C3B0();
  v9 = -1 << *(_BYTE *)(v7 + 32);
  v10 = v8 & ~v9;
  if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
  {
    v11 = *(_QWORD *)(v7 + 48);
    v12 = (_QWORD *)(v11 + 16 * v10);
    v13 = *v12 == a2 && v12[1] == a3;
    if (v13 || (sub_1CA85C284() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v14 = (uint64_t *)(*(_QWORD *)(*v3 + 48) + 16 * v10);
      v15 = v14[1];
      *a1 = *v14;
      a1[1] = v15;
      swift_bridgeObjectRetain();
      return 0;
    }
    v17 = ~v9;
    while (1)
    {
      v10 = (v10 + 1) & v17;
      if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
        break;
      v18 = (_QWORD *)(v11 + 16 * v10);
      v19 = *v18 == a2 && v18[1] == a3;
      if (v19 || (sub_1CA85C284() & 1) != 0)
        goto LABEL_7;
    }
  }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v21 = *v3;
  *v3 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_1CA245FF4(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  *v3 = v21;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_1CA23F5F4(_QWORD *a1, void *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  id v14;
  char v15;
  uint64_t v16;
  id v17;
  char v18;
  void *v19;
  id v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  id v24;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v3 = v2;
  v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0)
      v7 = *v2;
    else
      v7 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v8 = a2;
    v9 = sub_1CA85BE10();

    if (v9)
    {
      swift_bridgeObjectRelease();

      type metadata accessor for SongPlaybackInfoEntry();
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v28;
      swift_unknownObjectRelease();
      return 0;
    }
    result = sub_1CA85BE04();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    v21 = sub_1CA245960(v7, result + 1, &qword_1EF94ACD0, (void (*)(_QWORD))type metadata accessor for SongPlaybackInfoEntry, (void (*)(unint64_t))sub_1CA3608F0);
    v29 = v21;
    v22 = *(_QWORD *)(v21 + 16);
    if (*(_QWORD *)(v21 + 24) <= v22)
    {
      v26 = v22 + 1;
      v27 = v8;
      sub_1CA3608F0(v26);
      v23 = v29;
    }
    else
    {
      v23 = v21;
      v24 = v8;
    }
    sub_1CA23F114((uint64_t)v8, v23);
    *v3 = v23;
  }
  else
  {
    swift_bridgeObjectRetain();
    v11 = sub_1CA85BC78();
    v12 = -1 << *(_BYTE *)(v6 + 32);
    v13 = v11 & ~v12;
    if (((*(_QWORD *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0)
    {
      type metadata accessor for SongPlaybackInfoEntry();
      v14 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v13);
      v15 = sub_1CA85BC84();

      if ((v15 & 1) != 0)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        v19 = *(void **)(*(_QWORD *)(*v2 + 48) + 8 * v13);
        *a1 = v19;
        v20 = v19;
        return 0;
      }
      v16 = ~v12;
      while (1)
      {
        v13 = (v13 + 1) & v16;
        if (((*(_QWORD *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
          break;
        v17 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v13);
        v18 = sub_1CA85BC84();

        if ((v18 & 1) != 0)
          goto LABEL_12;
      }
    }
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v30 = *v2;
    *v2 = 0x8000000000000000;
    v8 = a2;
    sub_1CA24618C((uint64_t)v8, v13, isUniquelyReferenced_nonNull_native, (void (*)(uint64_t))sub_1CA3608F0, (void (*)(_QWORD))type metadata accessor for SongPlaybackInfoEntry, (void (*)(uint64_t))sub_1CA363DA4, (void (*)(void))sub_1CA362A88);
    *v2 = v30;
  }
  swift_bridgeObjectRelease();
  *a1 = v8;
  return 1;
}

uint64_t sub_1CA23F8A8(_QWORD *a1, void *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  id v14;
  char v15;
  uint64_t v16;
  id v17;
  char v18;
  void *v19;
  id v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  id v24;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v3 = v2;
  v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0)
      v7 = *v2;
    else
      v7 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v8 = a2;
    v9 = sub_1CA85BE10();

    if (v9)
    {
      swift_bridgeObjectRelease();

      type metadata accessor for SongEntry();
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v28;
      swift_unknownObjectRelease();
      return 0;
    }
    result = sub_1CA85BE04();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    v21 = sub_1CA245960(v7, result + 1, &qword_1ED8724D8, (void (*)(_QWORD))type metadata accessor for SongEntry, (void (*)(unint64_t))sub_1CA3608FC);
    v29 = v21;
    v22 = *(_QWORD *)(v21 + 16);
    if (*(_QWORD *)(v21 + 24) <= v22)
    {
      v26 = v22 + 1;
      v27 = v8;
      sub_1CA3608FC(v26);
      v23 = v29;
    }
    else
    {
      v23 = v21;
      v24 = v8;
    }
    sub_1CA23F114((uint64_t)v8, v23);
    *v3 = v23;
  }
  else
  {
    swift_bridgeObjectRetain();
    v11 = sub_1CA85BC78();
    v12 = -1 << *(_BYTE *)(v6 + 32);
    v13 = v11 & ~v12;
    if (((*(_QWORD *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0)
    {
      type metadata accessor for SongEntry();
      v14 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v13);
      v15 = sub_1CA85BC84();

      if ((v15 & 1) != 0)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        v19 = *(void **)(*(_QWORD *)(*v2 + 48) + 8 * v13);
        *a1 = v19;
        v20 = v19;
        return 0;
      }
      v16 = ~v12;
      while (1)
      {
        v13 = (v13 + 1) & v16;
        if (((*(_QWORD *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
          break;
        v17 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v13);
        v18 = sub_1CA85BC84();

        if ((v18 & 1) != 0)
          goto LABEL_12;
      }
    }
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v30 = *v2;
    *v2 = 0x8000000000000000;
    v8 = a2;
    sub_1CA24618C((uint64_t)v8, v13, isUniquelyReferenced_nonNull_native, (void (*)(uint64_t))sub_1CA3608FC, (void (*)(_QWORD))type metadata accessor for SongEntry, (void (*)(uint64_t))sub_1CA363DB0, (void (*)(void))sub_1CA362A94);
    *v2 = v30;
  }
  swift_bridgeObjectRelease();
  *a1 = v8;
  return 1;
}

uint64_t sub_1CA23FB5C(uint64_t a1, char *a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(_QWORD, _QWORD, _QWORD);
  uint64_t v19;
  void (*v20)(_QWORD, _QWORD, _QWORD);
  char v21;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  char isUniquelyReferenced_nonNull_native;
  char *v25;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;

  v3 = v2;
  v6 = sub_1CA85A5B0();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v3;
  sub_1CA23CC98((unint64_t *)&qword_1ED871190, v11, MEMORY[0x1E0CB08A8]);
  swift_bridgeObjectRetain();
  v31 = a2;
  v12 = sub_1CA85B498();
  v13 = -1 << *(_BYTE *)(v10 + 32);
  v14 = v12 & ~v13;
  v15 = v10;
  v16 = v10 + 56;
  if (((*(_QWORD *)(v10 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0)
  {
    v27 = v3;
    v28 = a1;
    v29 = ~v13;
    v30 = v7;
    v17 = *(_QWORD *)(v7 + 72);
    v18 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    while (1)
    {
      v19 = v15;
      v20 = v18;
      v18(v9, *(_QWORD *)(v15 + 48) + v17 * v14, v6);
      sub_1CA23CC98((unint64_t *)&unk_1ED8711B0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08B8]);
      v21 = sub_1CA85B504();
      v22 = *(void (**)(char *, uint64_t))(v30 + 8);
      v22(v9, v6);
      if ((v21 & 1) != 0)
        break;
      v14 = (v14 + 1) & v29;
      v15 = v19;
      v18 = v20;
      if (((*(_QWORD *)(v16 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        v3 = v27;
        a1 = v28;
        v23 = v30;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v22(v31, v6);
    v20(v28, *(_QWORD *)(*v27 + 48) + v17 * v14, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    v18 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    v23 = v7;
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v25 = v31;
    v18(v9, v31, v6);
    v32 = *v3;
    *v3 = 0x8000000000000000;
    sub_1CA246308((uint64_t)v9, v14, isUniquelyReferenced_nonNull_native);
    *v3 = v32;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v23 + 32))(a1, v25, v6);
    return 1;
  }
}

uint64_t sub_1CA23FDB8(_QWORD *a1, void *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  id v14;
  char v15;
  uint64_t v16;
  id v17;
  char v18;
  void *v19;
  id v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  id v24;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v3 = v2;
  v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0)
      v7 = *v2;
    else
      v7 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v8 = a2;
    v9 = sub_1CA85BE10();

    if (v9)
    {
      swift_bridgeObjectRelease();

      sub_1CA24EEC0(0, &qword_1ED8723A0);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v28;
      swift_unknownObjectRelease();
      return 0;
    }
    result = sub_1CA85BE04();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    v21 = sub_1CA245B50(v7, result + 1, &qword_1ED874B00, &qword_1ED8723A0, 0x1E0C99D68, (void (*)(unint64_t))sub_1CA36092C);
    v29 = v21;
    v22 = *(_QWORD *)(v21 + 16);
    if (*(_QWORD *)(v21 + 24) <= v22)
    {
      v26 = v22 + 1;
      v27 = v8;
      sub_1CA36092C(v26);
      v23 = v29;
    }
    else
    {
      v23 = v21;
      v24 = v8;
    }
    sub_1CA23F114((uint64_t)v8, v23);
    *v3 = v23;
  }
  else
  {
    swift_bridgeObjectRetain();
    v11 = sub_1CA85BC78();
    v12 = -1 << *(_BYTE *)(v6 + 32);
    v13 = v11 & ~v12;
    if (((*(_QWORD *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0)
    {
      sub_1CA24EEC0(0, &qword_1ED8723A0);
      v14 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v13);
      v15 = sub_1CA85BC84();

      if ((v15 & 1) != 0)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        v19 = *(void **)(*(_QWORD *)(*v2 + 48) + 8 * v13);
        *a1 = v19;
        v20 = v19;
        return 0;
      }
      v16 = ~v12;
      while (1)
      {
        v13 = (v13 + 1) & v16;
        if (((*(_QWORD *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
          break;
        v17 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v13);
        v18 = sub_1CA85BC84();

        if ((v18 & 1) != 0)
          goto LABEL_12;
      }
    }
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v30 = *v2;
    *v2 = 0x8000000000000000;
    v8 = a2;
    sub_1CA24650C((uint64_t)v8, v13, isUniquelyReferenced_nonNull_native);
    *v2 = v30;
  }
  swift_bridgeObjectRelease();
  *a1 = v8;
  return 1;
}

uint64_t sub_1CA240074(uint64_t *a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v14;

  v3 = v2;
  v6 = *v2;
  v7 = sub_1CA85C35C();
  v8 = -1 << *(_BYTE *)(v6 + 32);
  v9 = v7 & ~v8;
  if (((*(_QWORD *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
  {
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v14 = *v3;
    *v3 = 0x8000000000000000;
    sub_1CA246690(a2, v9, isUniquelyReferenced_nonNull_native);
    *v3 = v14;
    swift_bridgeObjectRelease();
    result = 1;
    goto LABEL_8;
  }
  v10 = *(_QWORD *)(v6 + 48);
  if (*(_QWORD *)(v10 + 8 * v9) != a2)
  {
    v11 = ~v8;
    do
    {
      v9 = (v9 + 1) & v11;
      if (((*(_QWORD *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
        goto LABEL_7;
    }
    while (*(_QWORD *)(v10 + 8 * v9) != a2);
  }
  result = 0;
LABEL_8:
  *a1 = a2;
  return result;
}

void sub_1CA24016C(uint64_t a1, char a2)
{
  sub_1CA85C368();
  __asm { BR              X10 }
}

uint64_t sub_1CA2401D0()
{
  _BYTE *v0;
  uint64_t *v1;
  void *v2;
  uint64_t v3;
  unint64_t v4;
  char isUniquelyReferenced_nonNull_native;
  uint64_t result;
  uint64_t v7;

  swift_bridgeObjectRetain();
  sub_1CA85B4B0();
  swift_bridgeObjectRelease();
  v4 = sub_1CA85C3B0() & ~(-1 << *(_BYTE *)(v3 + 32));
  if (((*(_QWORD *)(v3 + 56 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
    __asm { BR              X9 }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v7 = *v1;
  *v1 = 0x8000000000000000;
  sub_1CA2467B0(v2, v4, isUniquelyReferenced_nonNull_native);
  *v1 = v7;
  swift_bridgeObjectRelease();
  result = 1;
  *v0 = (_BYTE)v2;
  return result;
}

uint64_t sub_1CA240540(uint64_t a1, char *a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(_QWORD, _QWORD, _QWORD);
  uint64_t v19;
  void (*v20)(_QWORD, _QWORD, _QWORD);
  char v21;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  char isUniquelyReferenced_nonNull_native;
  char *v25;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;

  v3 = v2;
  v6 = sub_1CA85A7E4();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v3;
  sub_1CA23CC98(&qword_1ED871208, v11, MEMORY[0x1E0CB11D0]);
  swift_bridgeObjectRetain();
  v31 = a2;
  v12 = sub_1CA85B498();
  v13 = -1 << *(_BYTE *)(v10 + 32);
  v14 = v12 & ~v13;
  v15 = v10;
  v16 = v10 + 56;
  if (((*(_QWORD *)(v10 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0)
  {
    v27 = v3;
    v28 = a1;
    v29 = ~v13;
    v30 = v7;
    v17 = *(_QWORD *)(v7 + 72);
    v18 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    while (1)
    {
      v19 = v15;
      v20 = v18;
      v18(v9, *(_QWORD *)(v15 + 48) + v17 * v14, v6);
      sub_1CA23CC98(&qword_1ED871210, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB11B8], MEMORY[0x1E0CB11D8]);
      v21 = sub_1CA85B504();
      v22 = *(void (**)(char *, uint64_t))(v30 + 8);
      v22(v9, v6);
      if ((v21 & 1) != 0)
        break;
      v14 = (v14 + 1) & v29;
      v15 = v19;
      v18 = v20;
      if (((*(_QWORD *)(v16 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        v3 = v27;
        a1 = v28;
        v23 = v30;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v22(v31, v6);
    v20(v28, *(_QWORD *)(*v27 + 48) + v17 * v14, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    v18 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    v23 = v7;
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v25 = v31;
    v18(v9, v31, v6);
    v32 = *v3;
    *v3 = 0x8000000000000000;
    sub_1CA246BC8((uint64_t)v9, v14, isUniquelyReferenced_nonNull_native);
    *v3 = v32;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v23 + 32))(a1, v25, v6);
    return 1;
  }
}

uint64_t sub_1CA24079C(uint64_t *a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  void *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v24;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v26;
  uint64_t result;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v3 = v2;
  v6 = *v2;
  if ((*v2 & 0xC000000000000001) == 0)
  {
    v30 = v2;
    sub_1CA85C368();
    v9 = *(void **)(a2 + 16);
    swift_bridgeObjectRetain();
    v10 = objc_msgSend(v9, sel_localIdentifier);
    sub_1CA85B534();

    sub_1CA85B4B0();
    swift_bridgeObjectRelease();
    v11 = sub_1CA85C3B0();
    v12 = -1 << *(_BYTE *)(v6 + 32);
    v13 = v11 & ~v12;
    if (((*(_QWORD *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0)
    {
      v32 = ~v12;
      while (1)
      {
        v14 = *(void **)(*(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v13) + 16);
        swift_retain();
        v15 = objc_msgSend(v14, sel_localIdentifier);
        v16 = sub_1CA85B534();
        v18 = v17;

        v19 = objc_msgSend(*(id *)(a2 + 16), sel_localIdentifier);
        v20 = sub_1CA85B534();
        v22 = v21;

        if (v16 == v20 && v18 == v22)
        {
          swift_release();
          swift_bridgeObjectRelease();
          swift_release();
          swift_bridgeObjectRelease_n();
          goto LABEL_24;
        }
        v24 = sub_1CA85C284();
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v24 & 1) != 0)
          break;
        v13 = (v13 + 1) & v32;
        if (((*(_QWORD *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
          goto LABEL_15;
      }
      swift_release();
      swift_bridgeObjectRelease();
LABEL_24:
      *a1 = *(_QWORD *)(*(_QWORD *)(*v30 + 48) + 8 * v13);
      swift_retain();
      return 0;
    }
LABEL_15:
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v34 = *v30;
    *v30 = 0x8000000000000000;
    v26 = swift_retain();
    sub_1CA246DCC(v26, v13, isUniquelyReferenced_nonNull_native);
    *v30 = v34;
    swift_bridgeObjectRelease();
    *a1 = a2;
    return 1;
  }
  if (v6 < 0)
    v7 = *v2;
  else
    v7 = v6 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  swift_retain();
  v8 = sub_1CA85BE10();
  swift_release();
  if (!v8)
  {
    result = sub_1CA85BE04();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    v28 = sub_1CA245D4C(v7, result + 1);
    v35 = v28;
    if (*(_QWORD *)(v28 + 24) <= *(_QWORD *)(v28 + 16))
    {
      swift_retain();
      sub_1CA361600();
      v29 = v35;
    }
    else
    {
      v29 = v28;
      swift_retain();
    }
    sub_1CA23F034(a2, v29);
    *v3 = v29;
    swift_bridgeObjectRelease();
    *a1 = a2;
    return 1;
  }
  swift_bridgeObjectRelease();
  swift_release();
  type metadata accessor for ImportantEntitiesGraphInferenceMoment();
  swift_unknownObjectRetain();
  swift_dynamicCast();
  *a1 = v33;
  swift_unknownObjectRelease();
  return 0;
}

uint64_t sub_1CA240B18(_QWORD *a1, void *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  id v14;
  char v15;
  uint64_t v16;
  id v17;
  char v18;
  void *v19;
  id v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  id v24;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v3 = v2;
  v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0)
      v7 = *v2;
    else
      v7 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v8 = a2;
    v9 = sub_1CA85BE10();

    if (v9)
    {
      swift_bridgeObjectRelease();

      sub_1CA24EEC0(0, (unint64_t *)&qword_1ED8723B0);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v28;
      swift_unknownObjectRelease();
      return 0;
    }
    result = sub_1CA85BE04();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    v21 = sub_1CA245B50(v7, result + 1, &qword_1ED8724E8, (unint64_t *)&qword_1ED8723B0, 0x1E0CD1390, (void (*)(unint64_t))sub_1CA361920);
    v29 = v21;
    v22 = *(_QWORD *)(v21 + 16);
    if (*(_QWORD *)(v21 + 24) <= v22)
    {
      v26 = v22 + 1;
      v27 = v8;
      sub_1CA361920(v26);
      v23 = v29;
    }
    else
    {
      v23 = v21;
      v24 = v8;
    }
    sub_1CA23F114((uint64_t)v8, v23);
    *v3 = v23;
  }
  else
  {
    swift_bridgeObjectRetain();
    v11 = sub_1CA85BC78();
    v12 = -1 << *(_BYTE *)(v6 + 32);
    v13 = v11 & ~v12;
    if (((*(_QWORD *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0)
    {
      sub_1CA24EEC0(0, (unint64_t *)&qword_1ED8723B0);
      v14 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v13);
      v15 = sub_1CA85BC84();

      if ((v15 & 1) != 0)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        v19 = *(void **)(*(_QWORD *)(*v2 + 48) + 8 * v13);
        *a1 = v19;
        v20 = v19;
        return 0;
      }
      v16 = ~v12;
      while (1)
      {
        v13 = (v13 + 1) & v16;
        if (((*(_QWORD *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
          break;
        v17 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v13);
        v18 = sub_1CA85BC84();

        if ((v18 & 1) != 0)
          goto LABEL_12;
      }
    }
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v30 = *v2;
    *v2 = 0x8000000000000000;
    v8 = a2;
    sub_1CA247014((uint64_t)v8, v13, isUniquelyReferenced_nonNull_native);
    *v2 = v30;
  }
  swift_bridgeObjectRelease();
  *a1 = v8;
  return 1;
}

uint64_t sub_1CA240DD4(_QWORD *a1, void *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  id v14;
  char v15;
  uint64_t v16;
  id v17;
  char v18;
  void *v19;
  id v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  id v24;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v3 = v2;
  v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0)
      v7 = *v2;
    else
      v7 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v8 = a2;
    v9 = sub_1CA85BE10();

    if (v9)
    {
      swift_bridgeObjectRelease();

      sub_1CA24EEC0(0, &qword_1EF94AC58);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v28;
      swift_unknownObjectRelease();
      return 0;
    }
    result = sub_1CA85BE04();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    v21 = sub_1CA245B50(v7, result + 1, (uint64_t *)&unk_1EF94AC60, &qword_1EF94AC58, (uint64_t)off_1E83F9B90, (void (*)(unint64_t))sub_1CA36192C);
    v29 = v21;
    v22 = *(_QWORD *)(v21 + 16);
    if (*(_QWORD *)(v21 + 24) <= v22)
    {
      v26 = v22 + 1;
      v27 = v8;
      sub_1CA36192C(v26);
      v23 = v29;
    }
    else
    {
      v23 = v21;
      v24 = v8;
    }
    sub_1CA23F114((uint64_t)v8, v23);
    *v3 = v23;
  }
  else
  {
    swift_bridgeObjectRetain();
    v11 = sub_1CA85BC78();
    v12 = -1 << *(_BYTE *)(v6 + 32);
    v13 = v11 & ~v12;
    if (((*(_QWORD *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0)
    {
      sub_1CA24EEC0(0, &qword_1EF94AC58);
      v14 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v13);
      v15 = sub_1CA85BC84();

      if ((v15 & 1) != 0)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        v19 = *(void **)(*(_QWORD *)(*v2 + 48) + 8 * v13);
        *a1 = v19;
        v20 = v19;
        return 0;
      }
      v16 = ~v12;
      while (1)
      {
        v13 = (v13 + 1) & v16;
        if (((*(_QWORD *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
          break;
        v17 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v13);
        v18 = sub_1CA85BC84();

        if ((v18 & 1) != 0)
          goto LABEL_12;
      }
    }
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v30 = *v2;
    *v2 = 0x8000000000000000;
    v8 = a2;
    sub_1CA247198((uint64_t)v8, v13, isUniquelyReferenced_nonNull_native);
    *v2 = v30;
  }
  swift_bridgeObjectRelease();
  *a1 = v8;
  return 1;
}

uint64_t sub_1CA241090(uint64_t a1, _QWORD *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;

  v3 = v2;
  v6 = type metadata accessor for SongSource();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (uint64_t *)((char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = *v2;
  sub_1CA85C368();
  swift_bridgeObjectRetain();
  SongSource.hash(into:)();
  v11 = sub_1CA85C3B0();
  v12 = -1 << *(_BYTE *)(v10 + 32);
  v13 = v11 & ~v12;
  if (((*(_QWORD *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0)
  {
    v20 = v2;
    v21 = a1;
    v14 = ~v12;
    v15 = *(_QWORD *)(v7 + 72);
    while (1)
    {
      sub_1CA24EE38(*(_QWORD *)(v10 + 48) + v15 * v13, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for SongSource);
      v16 = _s11PhotosGraph10SongSourceV2eeoiySbAC_ACtFZ_0(v9, a2);
      sub_1CA24EDFC((uint64_t)v9);
      if ((v16 & 1) != 0)
        break;
      v13 = (v13 + 1) & v14;
      if (((*(_QWORD *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        v3 = v20;
        a1 = v21;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    sub_1CA24EDFC((uint64_t)a2);
    sub_1CA24EE38(*(_QWORD *)(*v20 + 48) + v15 * v13, v21, (uint64_t (*)(_QWORD))type metadata accessor for SongSource);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_1CA24EE38((uint64_t)a2, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for SongSource);
    v22 = *v3;
    *v3 = 0x8000000000000000;
    sub_1CA24731C(v9, v13, isUniquelyReferenced_nonNull_native);
    *v3 = v22;
    swift_bridgeObjectRelease();
    sub_1CA24EE7C((uint64_t)a2, a1, (uint64_t (*)(_QWORD))type metadata accessor for SongSource);
    return 1;
  }
}

uint64_t sub_1CA241280(_BYTE *a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v4;
  unint64_t v5;
  char isUniquelyReferenced_nonNull_native;
  uint64_t result;
  uint64_t v9;

  v4 = *v2;
  sub_1CA85C368();
  sub_1CA3F3CE0(a2);
  swift_bridgeObjectRetain();
  sub_1CA85B4B0();
  swift_bridgeObjectRelease();
  v5 = sub_1CA85C3B0() & ~(-1 << *(_BYTE *)(v4 + 32));
  if (((*(_QWORD *)(v4 + 56 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
    __asm { BR              X9 }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v9 = *v2;
  *v2 = 0x8000000000000000;
  sub_1CA2474F4(a2, v5, isUniquelyReferenced_nonNull_native);
  *v2 = v9;
  swift_bridgeObjectRelease();
  result = 1;
  *a1 = a2;
  return result;
}

uint64_t sub_1CA24197C(_BYTE *a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v4;
  unint64_t v5;
  char isUniquelyReferenced_nonNull_native;
  uint64_t result;
  uint64_t v9;

  v4 = *v2;
  sub_1CA85C368();
  sub_1CA3CFD24(a2);
  swift_bridgeObjectRetain();
  sub_1CA85B4B0();
  swift_bridgeObjectRelease();
  v5 = sub_1CA85C3B0() & ~(-1 << *(_BYTE *)(v4 + 32));
  if (((*(_QWORD *)(v4 + 56 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
    __asm { BR              X9 }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v9 = *v2;
  *v2 = 0x8000000000000000;
  sub_1CA247CD4(a2, v5, isUniquelyReferenced_nonNull_native);
  *v2 = v9;
  swift_bridgeObjectRelease();
  result = 1;
  *a1 = a2;
  return result;
}

uint64_t sub_1CA2421DC(_QWORD *a1, void *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  id v14;
  char v15;
  uint64_t v16;
  id v17;
  char v18;
  void *v19;
  id v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  id v24;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v3 = v2;
  v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0)
      v7 = *v2;
    else
      v7 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v8 = a2;
    v9 = sub_1CA85BE10();

    if (v9)
    {
      swift_bridgeObjectRelease();

      sub_1CA24EEC0(0, (unint64_t *)&qword_1EF94AB50);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v28;
      swift_unknownObjectRelease();
      return 0;
    }
    result = sub_1CA85BE04();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    v21 = sub_1CA245B50(v7, result + 1, &qword_1EF94AB60, (unint64_t *)&qword_1EF94AB50, (uint64_t)off_1E83FA3C0, (void (*)(unint64_t))sub_1CA3621FC);
    v29 = v21;
    v22 = *(_QWORD *)(v21 + 16);
    if (*(_QWORD *)(v21 + 24) <= v22)
    {
      v26 = v22 + 1;
      v27 = v8;
      sub_1CA3621FC(v26);
      v23 = v29;
    }
    else
    {
      v23 = v21;
      v24 = v8;
    }
    sub_1CA23F114((uint64_t)v8, v23);
    *v3 = v23;
  }
  else
  {
    swift_bridgeObjectRetain();
    v11 = sub_1CA85BC78();
    v12 = -1 << *(_BYTE *)(v6 + 32);
    v13 = v11 & ~v12;
    if (((*(_QWORD *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0)
    {
      sub_1CA24EEC0(0, (unint64_t *)&qword_1EF94AB50);
      v14 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v13);
      v15 = sub_1CA85BC84();

      if ((v15 & 1) != 0)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        v19 = *(void **)(*(_QWORD *)(*v2 + 48) + 8 * v13);
        *a1 = v19;
        v20 = v19;
        return 0;
      }
      v16 = ~v12;
      while (1)
      {
        v13 = (v13 + 1) & v16;
        if (((*(_QWORD *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
          break;
        v17 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v13);
        v18 = sub_1CA85BC84();

        if ((v18 & 1) != 0)
          goto LABEL_12;
      }
    }
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v30 = *v2;
    *v2 = 0x8000000000000000;
    v8 = a2;
    sub_1CA248660((uint64_t)v8, v13, isUniquelyReferenced_nonNull_native);
    *v2 = v30;
  }
  swift_bridgeObjectRelease();
  *a1 = v8;
  return 1;
}

uint64_t sub_1CA242498(uint64_t a1, char *a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(_QWORD, _QWORD, _QWORD);
  uint64_t v19;
  void (*v20)(_QWORD, _QWORD, _QWORD);
  char v21;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  char isUniquelyReferenced_nonNull_native;
  char *v25;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;

  v3 = v2;
  v6 = sub_1CA85B210();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v3;
  sub_1CA23CC98(&qword_1EF94AC08, v11, MEMORY[0x1E0D3D150]);
  swift_bridgeObjectRetain();
  v31 = a2;
  v12 = sub_1CA85B498();
  v13 = -1 << *(_BYTE *)(v10 + 32);
  v14 = v12 & ~v13;
  v15 = v10;
  v16 = v10 + 56;
  if (((*(_QWORD *)(v10 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0)
  {
    v27 = v3;
    v28 = a1;
    v29 = ~v13;
    v30 = v7;
    v17 = *(_QWORD *)(v7 + 72);
    v18 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    while (1)
    {
      v19 = v15;
      v20 = v18;
      v18(v9, *(_QWORD *)(v15 + 48) + v17 * v14, v6);
      sub_1CA23CC98(&qword_1EF94AC10, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3D140], MEMORY[0x1E0D3D158]);
      v21 = sub_1CA85B504();
      v22 = *(void (**)(char *, uint64_t))(v30 + 8);
      v22(v9, v6);
      if ((v21 & 1) != 0)
        break;
      v14 = (v14 + 1) & v29;
      v15 = v19;
      v18 = v20;
      if (((*(_QWORD *)(v16 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        v3 = v27;
        a1 = v28;
        v23 = v30;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v22(v31, v6);
    v20(v28, *(_QWORD *)(*v27 + 48) + v17 * v14, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    v18 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    v23 = v7;
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v25 = v31;
    v18(v9, v31, v6);
    v32 = *v3;
    *v3 = 0x8000000000000000;
    sub_1CA2487E4((uint64_t)v9, v14, isUniquelyReferenced_nonNull_native);
    *v3 = v32;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v23 + 32))(a1, v25, v6);
    return 1;
  }
}

uint64_t sub_1CA2426F4(unint64_t *a1, unint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unsigned __int8 v10;
  uint64_t v11;
  unint64_t v12;
  unsigned __int8 v13;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v16;
  _QWORD v17[9];

  v5 = *v2;
  sub_1CA85C368();
  swift_bridgeObjectRetain();
  sub_1CA381DDC((uint64_t)v17, a2);
  v6 = sub_1CA85C3B0();
  v7 = -1 << *(_BYTE *)(v5 + 32);
  v8 = v6 & ~v7;
  if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0)
  {
    v9 = swift_bridgeObjectRetain();
    v10 = sub_1CA2A86F4(v9, a2);
    swift_bridgeObjectRelease();
    if ((v10 & 1) != 0)
    {
LABEL_6:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *a1 = *(_QWORD *)(*(_QWORD *)(*v2 + 48) + 8 * v8);
      swift_bridgeObjectRetain();
      return 0;
    }
    v11 = ~v7;
    while (1)
    {
      v8 = (v8 + 1) & v11;
      if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
        break;
      v12 = swift_bridgeObjectRetain();
      v13 = sub_1CA2A86F4(v12, a2);
      swift_bridgeObjectRelease();
      if ((v13 & 1) != 0)
        goto LABEL_6;
    }
  }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v17[0] = *v2;
  *v2 = 0x8000000000000000;
  v16 = swift_bridgeObjectRetain();
  sub_1CA2489E8(v16, v8, isUniquelyReferenced_nonNull_native);
  *v2 = v17[0];
  swift_bridgeObjectRelease();
  *a1 = a2;
  return 1;
}

uint64_t sub_1CA242884(_QWORD *a1, void *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  id v14;
  char v15;
  uint64_t v16;
  id v17;
  char v18;
  void *v19;
  id v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  id v24;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v3 = v2;
  v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0)
      v7 = *v2;
    else
      v7 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v8 = a2;
    v9 = sub_1CA85BE10();

    if (v9)
    {
      swift_bridgeObjectRelease();

      sub_1CA24EEC0(0, (unint64_t *)&qword_1EF94B000);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v28;
      swift_unknownObjectRelease();
      return 0;
    }
    result = sub_1CA85BE04();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    v21 = sub_1CA245B50(v7, result + 1, (uint64_t *)&unk_1EF94ABE0, (unint64_t *)&qword_1EF94B000, 0x1E0CD16C0, (void (*)(unint64_t))sub_1CA3625FC);
    v29 = v21;
    v22 = *(_QWORD *)(v21 + 16);
    if (*(_QWORD *)(v21 + 24) <= v22)
    {
      v26 = v22 + 1;
      v27 = v8;
      sub_1CA3625FC(v26);
      v23 = v29;
    }
    else
    {
      v23 = v21;
      v24 = v8;
    }
    sub_1CA23F114((uint64_t)v8, v23);
    *v3 = v23;
  }
  else
  {
    swift_bridgeObjectRetain();
    v11 = sub_1CA85BC78();
    v12 = -1 << *(_BYTE *)(v6 + 32);
    v13 = v11 & ~v12;
    if (((*(_QWORD *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0)
    {
      sub_1CA24EEC0(0, (unint64_t *)&qword_1EF94B000);
      v14 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v13);
      v15 = sub_1CA85BC84();

      if ((v15 & 1) != 0)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        v19 = *(void **)(*(_QWORD *)(*v2 + 48) + 8 * v13);
        *a1 = v19;
        v20 = v19;
        return 0;
      }
      v16 = ~v12;
      while (1)
      {
        v13 = (v13 + 1) & v16;
        if (((*(_QWORD *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
          break;
        v17 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v13);
        v18 = sub_1CA85BC84();

        if ((v18 & 1) != 0)
          goto LABEL_12;
      }
    }
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v30 = *v2;
    *v2 = 0x8000000000000000;
    v8 = a2;
    sub_1CA248B74((uint64_t)v8, v13, isUniquelyReferenced_nonNull_native);
    *v2 = v30;
  }
  swift_bridgeObjectRelease();
  *a1 = v8;
  return 1;
}

uint64_t sub_1CA242B40(_QWORD *a1, void *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  id v14;
  char v15;
  uint64_t v16;
  id v17;
  char v18;
  void *v19;
  id v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  id v24;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v3 = v2;
  v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0)
      v7 = *v2;
    else
      v7 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v8 = a2;
    v9 = sub_1CA85BE10();

    if (v9)
    {
      swift_bridgeObjectRelease();

      sub_1CA24EEC0(0, (unint64_t *)&unk_1ED872E30);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v28;
      swift_unknownObjectRelease();
      return 0;
    }
    result = sub_1CA85BE04();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    v21 = sub_1CA245B50(v7, result + 1, (uint64_t *)&unk_1EF94ABF8, (unint64_t *)&unk_1ED872E30, 0x1E0CD17C0, (void (*)(unint64_t))sub_1CA36222C);
    v29 = v21;
    v22 = *(_QWORD *)(v21 + 16);
    if (*(_QWORD *)(v21 + 24) <= v22)
    {
      v26 = v22 + 1;
      v27 = v8;
      sub_1CA36222C(v26);
      v23 = v29;
    }
    else
    {
      v23 = v21;
      v24 = v8;
    }
    sub_1CA23F114((uint64_t)v8, v23);
    *v3 = v23;
  }
  else
  {
    swift_bridgeObjectRetain();
    v11 = sub_1CA85BC78();
    v12 = -1 << *(_BYTE *)(v6 + 32);
    v13 = v11 & ~v12;
    if (((*(_QWORD *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0)
    {
      sub_1CA24EEC0(0, (unint64_t *)&unk_1ED872E30);
      v14 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v13);
      v15 = sub_1CA85BC84();

      if ((v15 & 1) != 0)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        v19 = *(void **)(*(_QWORD *)(*v2 + 48) + 8 * v13);
        *a1 = v19;
        v20 = v19;
        return 0;
      }
      v16 = ~v12;
      while (1)
      {
        v13 = (v13 + 1) & v16;
        if (((*(_QWORD *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
          break;
        v17 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v13);
        v18 = sub_1CA85BC84();

        if ((v18 & 1) != 0)
          goto LABEL_12;
      }
    }
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v30 = *v2;
    *v2 = 0x8000000000000000;
    v8 = a2;
    sub_1CA248CF8((uint64_t)v8, v13, isUniquelyReferenced_nonNull_native);
    *v2 = v30;
  }
  swift_bridgeObjectRelease();
  *a1 = v8;
  return 1;
}

uint64_t sub_1CA242DFC(_QWORD *a1, void *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  id v14;
  char v15;
  uint64_t v16;
  id v17;
  char v18;
  void *v19;
  id v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  id v24;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v3 = v2;
  v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0)
      v7 = *v2;
    else
      v7 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v8 = a2;
    v9 = sub_1CA85BE10();

    if (v9)
    {
      swift_bridgeObjectRelease();

      sub_1CA24EEC0(0, &qword_1ED872E40);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v28;
      swift_unknownObjectRelease();
      return 0;
    }
    result = sub_1CA85BE04();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    v21 = sub_1CA245B50(v7, result + 1, &qword_1EF94ABD8, &qword_1ED872E40, (uint64_t)off_1E83FA6C0, (void (*)(unint64_t))sub_1CA362608);
    v29 = v21;
    v22 = *(_QWORD *)(v21 + 16);
    if (*(_QWORD *)(v21 + 24) <= v22)
    {
      v26 = v22 + 1;
      v27 = v8;
      sub_1CA362608(v26);
      v23 = v29;
    }
    else
    {
      v23 = v21;
      v24 = v8;
    }
    sub_1CA23F114((uint64_t)v8, v23);
    *v3 = v23;
  }
  else
  {
    swift_bridgeObjectRetain();
    v11 = sub_1CA85BC78();
    v12 = -1 << *(_BYTE *)(v6 + 32);
    v13 = v11 & ~v12;
    if (((*(_QWORD *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0)
    {
      sub_1CA24EEC0(0, &qword_1ED872E40);
      v14 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v13);
      v15 = sub_1CA85BC84();

      if ((v15 & 1) != 0)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        v19 = *(void **)(*(_QWORD *)(*v2 + 48) + 8 * v13);
        *a1 = v19;
        v20 = v19;
        return 0;
      }
      v16 = ~v12;
      while (1)
      {
        v13 = (v13 + 1) & v16;
        if (((*(_QWORD *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
          break;
        v17 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v13);
        v18 = sub_1CA85BC84();

        if ((v18 & 1) != 0)
          goto LABEL_12;
      }
    }
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v30 = *v2;
    *v2 = 0x8000000000000000;
    v8 = a2;
    sub_1CA248E7C((uint64_t)v8, v13, isUniquelyReferenced_nonNull_native);
    *v2 = v30;
  }
  swift_bridgeObjectRelease();
  *a1 = v8;
  return 1;
}

uint64_t sub_1CA2430B8(_QWORD *a1, void *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  id v14;
  char v15;
  uint64_t v16;
  id v17;
  char v18;
  void *v19;
  id v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  id v24;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v3 = v2;
  v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0)
      v7 = *v2;
    else
      v7 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v8 = a2;
    v9 = sub_1CA85BE10();

    if (v9)
    {
      swift_bridgeObjectRelease();

      sub_1CA24EEC0(0, (unint64_t *)&qword_1ED8723C0);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v28;
      swift_unknownObjectRelease();
      return 0;
    }
    result = sub_1CA85BE04();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    v21 = sub_1CA245B50(v7, result + 1, (uint64_t *)&unk_1EF94ABC0, (unint64_t *)&qword_1ED8723C0, 0x1E0CB37E8, (void (*)(unint64_t))sub_1CA362614);
    v29 = v21;
    v22 = *(_QWORD *)(v21 + 16);
    if (*(_QWORD *)(v21 + 24) <= v22)
    {
      v26 = v22 + 1;
      v27 = v8;
      sub_1CA362614(v26);
      v23 = v29;
    }
    else
    {
      v23 = v21;
      v24 = v8;
    }
    sub_1CA23F114((uint64_t)v8, v23);
    *v3 = v23;
  }
  else
  {
    swift_bridgeObjectRetain();
    v11 = sub_1CA85BC78();
    v12 = -1 << *(_BYTE *)(v6 + 32);
    v13 = v11 & ~v12;
    if (((*(_QWORD *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0)
    {
      sub_1CA24EEC0(0, (unint64_t *)&qword_1ED8723C0);
      v14 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v13);
      v15 = sub_1CA85BC84();

      if ((v15 & 1) != 0)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        v19 = *(void **)(*(_QWORD *)(*v2 + 48) + 8 * v13);
        *a1 = v19;
        v20 = v19;
        return 0;
      }
      v16 = ~v12;
      while (1)
      {
        v13 = (v13 + 1) & v16;
        if (((*(_QWORD *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
          break;
        v17 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v13);
        v18 = sub_1CA85BC84();

        if ((v18 & 1) != 0)
          goto LABEL_12;
      }
    }
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v30 = *v2;
    *v2 = 0x8000000000000000;
    v8 = a2;
    sub_1CA249000((uint64_t)v8, v13, isUniquelyReferenced_nonNull_native);
    *v2 = v30;
  }
  swift_bridgeObjectRelease();
  *a1 = v8;
  return 1;
}

uint64_t sub_1CA243374(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t result;
  uint64_t v8;

  if ((a1 & 0xC000000000000001) != 0)
  {
    v2 = sub_1CA85BE04();
    if (v2)
      goto LABEL_3;
    return MEMORY[0x1E0DEE9D8];
  }
  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
    return MEMORY[0x1E0DEE9D8];
LABEL_3:
  if (v2 <= 0)
  {
    v3 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED873300);
    v3 = (_QWORD *)swift_allocObject();
    v4 = _swift_stdlib_malloc_size(v3);
    v5 = v4 - 32;
    if (v4 < 32)
      v5 = v4 - 25;
    v3[2] = v2;
    v3[3] = (2 * (v5 >> 3)) | 1;
  }
  swift_bridgeObjectRetain();
  v6 = sub_1CA249184(&v8, v3 + 4, v2, a1);
  result = sub_1CA24E6B8();
  if (v6 == (_QWORD *)v2)
    return (uint64_t)v3;
  __break(1u);
  return result;
}

_QWORD *sub_1CA24346C(unint64_t a1)
{
  return sub_1CA243DE8(a1, (void (*)(_QWORD *, uint64_t, unint64_t))sub_1CA24D480);
}

size_t sub_1CA243478(uint64_t a1)
{
  return sub_1CA245648(a1, &qword_1EF957770, &qword_1ED872180, (uint64_t (*)(_QWORD))MEMORY[0x1E0CB0870]);
}

_QWORD *sub_1CA243494(uint64_t a1)
{
  return sub_1CA2448E0(a1, &qword_1ED872760, (uint64_t (*)(_QWORD *, _QWORD *, uint64_t, uint64_t))sub_1CA249484, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1CA24F228);
}

uint64_t sub_1CA2434B0(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;

  if ((a1 & 0xC000000000000001) != 0)
  {
    v2 = sub_1CA85BE04();
    if (v2)
      goto LABEL_3;
    return MEMORY[0x1E0DEE9D8];
  }
  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
    return MEMORY[0x1E0DEE9D8];
LABEL_3:
  if (v2 <= 0)
  {
    v3 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED873300);
    v3 = (_QWORD *)swift_allocObject();
    v4 = _swift_stdlib_malloc_size(v3);
    v5 = v4 - 32;
    if (v4 < 32)
      v5 = v4 - 25;
    v3[2] = v2;
    v3[3] = (2 * (v5 >> 3)) | 1;
  }
  swift_bridgeObjectRetain();
  v6 = sub_1CA249680((uint64_t)&v8, v3 + 4, v2, a1);
  result = sub_1CA24E6B8();
  if (v6 == v2)
    return (uint64_t)v3;
  __break(1u);
  return result;
}

_QWORD *sub_1CA2435A8(unint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = a1;
  if (a1 >> 62)
    goto LABEL_10;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v2)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  while (1)
  {
    if (v2 <= 0)
    {
      v3 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED873300);
      v3 = (_QWORD *)swift_allocObject();
      v4 = _swift_stdlib_malloc_size(v3);
      v5 = v4 - 32;
      if (v4 < 32)
        v5 = v4 - 25;
      v3[2] = v2;
      v3[3] = (2 * (v5 >> 3)) | 1;
    }
    swift_bridgeObjectRetain();
    sub_1CA24D694((unint64_t)(v3 + 4), v2, v1, (void (*)(_QWORD))type metadata accessor for ImportantEntitiesGraphInferenceMoment, &qword_1EF94AAE0, &qword_1EF94AAD8, (uint64_t (*)(_BYTE *, uint64_t, unint64_t, uint64_t, uint64_t))sub_1CA2DED00);
    v1 = v6;
    swift_bridgeObjectRelease();
    if (v1 == v2)
      break;
    __break(1u);
LABEL_10:
    swift_bridgeObjectRetain();
    v2 = sub_1CA85C08C();
    swift_bridgeObjectRelease();
    if (!v2)
      return (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  return v3;
}

_QWORD *sub_1CA2436BC(unint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = a1;
  if (a1 >> 62)
    goto LABEL_10;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v2)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  while (1)
  {
    if (v2 <= 0)
    {
      v3 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED873300);
      v3 = (_QWORD *)swift_allocObject();
      v4 = _swift_stdlib_malloc_size(v3);
      v5 = v4 - 32;
      if (v4 < 32)
        v5 = v4 - 25;
      v3[2] = v2;
      v3[3] = (2 * (v5 >> 3)) | 1;
    }
    swift_bridgeObjectRetain();
    sub_1CA24D694((unint64_t)(v3 + 4), v2, v1, (void (*)(_QWORD))type metadata accessor for ImportantEntitiesChildrenProcessorEntity, &qword_1EF94AB08, &qword_1EF94AB00, (uint64_t (*)(_BYTE *, uint64_t, unint64_t, uint64_t, uint64_t))sub_1CA2DECAC);
    v1 = v6;
    swift_bridgeObjectRelease();
    if (v1 == v2)
      break;
    __break(1u);
LABEL_10:
    swift_bridgeObjectRetain();
    v2 = sub_1CA85C08C();
    swift_bridgeObjectRelease();
    if (!v2)
      return (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  return v3;
}

_QWORD *sub_1CA2437D0(unint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = a1;
  if (a1 >> 62)
    goto LABEL_10;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v2)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  while (1)
  {
    if (v2 <= 0)
    {
      v3 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED873300);
      v3 = (_QWORD *)swift_allocObject();
      v4 = _swift_stdlib_malloc_size(v3);
      v5 = v4 - 32;
      if (v4 < 32)
        v5 = v4 - 25;
      v3[2] = v2;
      v3[3] = (2 * (v5 >> 3)) | 1;
    }
    swift_bridgeObjectRetain();
    sub_1CA24D694((unint64_t)(v3 + 4), v2, v1, (void (*)(_QWORD))type metadata accessor for ImportantEntitiesPetProcessorEntity, &qword_1EF94AAD0, &qword_1EF94AAC8, (uint64_t (*)(_BYTE *, uint64_t, unint64_t, uint64_t, uint64_t))sub_1CA2DECAC);
    v1 = v6;
    swift_bridgeObjectRelease();
    if (v1 == v2)
      break;
    __break(1u);
LABEL_10:
    swift_bridgeObjectRetain();
    v2 = sub_1CA85C08C();
    swift_bridgeObjectRelease();
    if (!v2)
      return (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  return v3;
}

size_t sub_1CA2438E8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD *v6;
  size_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return MEMORY[0x1E0DEE9D8];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED872740);
  v3 = *(_QWORD *)(type metadata accessor for Song() - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v6 = (_QWORD *)swift_allocObject();
  result = _swift_stdlib_malloc_size(v6);
  if (v4)
  {
    if (result - v5 != 0x8000000000000000 || v4 != -1)
    {
      v6[2] = v1;
      v6[3] = 2 * ((uint64_t)(result - v5) / v4);
      sub_1CA249980(&v11, (uint64_t)v6 + v5, v1, a1);
      v10 = v9;
      swift_bridgeObjectRetain();
      sub_1CA24E6B8();
      if (v10 == v1)
        return (size_t)v6;
      __break(1u);
      return MEMORY[0x1E0DEE9D8];
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

size_t sub_1CA243A00(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD *v6;
  size_t result;
  uint64_t v9;
  uint64_t v10;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return MEMORY[0x1E0DEE9D8];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF94ACC0);
  v3 = *(_QWORD *)(sub_1CA85AE74() - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v6 = (_QWORD *)swift_allocObject();
  result = _swift_stdlib_malloc_size(v6);
  if (v4)
  {
    if (result - v5 != 0x8000000000000000 || v4 != -1)
    {
      v6[2] = v1;
      v6[3] = 2 * ((uint64_t)(result - v5) / v4);
      v9 = sub_1CA249C3C(&v10, (uint64_t)v6 + v5, v1, a1);
      swift_bridgeObjectRetain();
      sub_1CA24E6B8();
      if (v9 == v1)
        return (size_t)v6;
      __break(1u);
      return MEMORY[0x1E0DEE9D8];
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

size_t sub_1CA243B18(uint64_t a1)
{
  return sub_1CA244D0C(a1, (uint64_t *)&unk_1EF957750, (uint64_t *)&unk_1EF94ACB0, (uint64_t (*)(uint64_t *, char *, uint64_t, uint64_t))sub_1CA249F04);
}

uint64_t sub_1CA243B34(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  return sub_1CA245798(a1, a2, a3, a4, (uint64_t *)&unk_1EF94B580, (uint64_t (*)(_QWORD))MEMORY[0x1E0D76BC0]);
}

size_t sub_1CA243B48(uint64_t a1)
{
  return sub_1CA243B5C(a1, (uint64_t *)&unk_1EF94ACA0, (uint64_t (*)(_QWORD))MEMORY[0x1E0D76EB0]);
}

size_t sub_1CA243B5C(uint64_t a1, uint64_t *a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  _QWORD *v9;
  size_t result;
  uint64_t v12;
  uint64_t v13;

  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
    return MEMORY[0x1E0DEE9D8];
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v6 = *(_QWORD *)(a3(0) - 8);
  v7 = *(_QWORD *)(v6 + 72);
  v8 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v9 = (_QWORD *)swift_allocObject();
  result = _swift_stdlib_malloc_size(v9);
  if (v7)
  {
    if (result - v8 != 0x8000000000000000 || v7 != -1)
    {
      v9[2] = v3;
      v9[3] = 2 * ((uint64_t)(result - v8) / v7);
      v12 = sub_1CA24CEAC(&v13, (uint64_t)v9 + v8, v3, a1, a3);
      swift_bridgeObjectRetain();
      sub_1CA24E6B8();
      if (v12 == v3)
        return (size_t)v9;
      __break(1u);
      return MEMORY[0x1E0DEE9D8];
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1CA243C78(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  return sub_1CA244738(a1, a2, a3, a4, (void (*)(_QWORD))type metadata accessor for ElectedSocialGroup);
}

size_t sub_1CA243C84(uint64_t a1)
{
  return sub_1CA244D0C(a1, &qword_1EF94AC98, &qword_1EF94AC90, (uint64_t (*)(uint64_t *, char *, uint64_t, uint64_t))sub_1CA24A1F8);
}

_QWORD *sub_1CA243CA0(uint64_t a1)
{
  return sub_1CA244FD0(a1, &qword_1ED8710B8, (uint64_t (*)(uint64_t *, _QWORD *, uint64_t, uint64_t))sub_1CA24A4EC);
}

uint64_t sub_1CA243CB4(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  return sub_1CA245798(a1, a2, a3, a4, (uint64_t *)&unk_1ED872740, (uint64_t (*)(_QWORD))type metadata accessor for Song);
}

_QWORD *sub_1CA243CC8(unint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = a1;
  if (a1 >> 62)
    goto LABEL_10;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v2)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  while (1)
  {
    if (v2 <= 0)
    {
      v3 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED873300);
      v3 = (_QWORD *)swift_allocObject();
      v4 = _swift_stdlib_malloc_size(v3);
      v5 = v4 - 32;
      if (v4 < 32)
        v5 = v4 - 25;
      v3[2] = v2;
      v3[3] = (2 * (v5 >> 3)) | 1;
    }
    swift_bridgeObjectRetain();
    sub_1CA24D694((unint64_t)(v3 + 4), v2, v1, (void (*)(_QWORD))type metadata accessor for ImportantEntitiesTuningEvent, &qword_1EF94AC88, &qword_1EF94AC80, (uint64_t (*)(_BYTE *, uint64_t, unint64_t, uint64_t, uint64_t))sub_1CA2DECAC);
    v1 = v6;
    swift_bridgeObjectRelease();
    if (v1 == v2)
      break;
    __break(1u);
LABEL_10:
    swift_bridgeObjectRetain();
    v2 = sub_1CA85C08C();
    swift_bridgeObjectRelease();
    if (!v2)
      return (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  return v3;
}

_QWORD *sub_1CA243DDC(unint64_t a1)
{
  return sub_1CA243DE8(a1, (void (*)(_QWORD *, uint64_t, unint64_t))sub_1CA24DAA4);
}

_QWORD *sub_1CA243DE8(unint64_t a1, void (*a2)(_QWORD *, uint64_t, unint64_t))
{
  uint64_t v4;
  _QWORD *v5;
  int64_t v6;
  uint64_t v7;
  void (*v8)(_QWORD *, uint64_t, unint64_t);

  if (a1 >> 62)
    goto LABEL_10;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v4)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  while (1)
  {
    if (v4 <= 0)
    {
      v5 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED873300);
      v5 = (_QWORD *)swift_allocObject();
      v6 = _swift_stdlib_malloc_size(v5);
      v7 = v6 - 32;
      if (v6 < 32)
        v7 = v6 - 25;
      v5[2] = v4;
      v5[3] = (2 * (v7 >> 3)) | 1;
    }
    swift_bridgeObjectRetain();
    a2(v5 + 4, v4, a1);
    a2 = v8;
    swift_bridgeObjectRelease();
    if (a2 == (void (*)(_QWORD *, uint64_t, unint64_t))v4)
      break;
    __break(1u);
LABEL_10:
    swift_bridgeObjectRetain();
    v4 = sub_1CA85C08C();
    swift_bridgeObjectRelease();
    if (!v4)
      return (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  return v5;
}

_QWORD *sub_1CA243EE8(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED872760);
  v3 = (_QWORD *)swift_allocObject();
  v4 = _swift_stdlib_malloc_size(v3);
  v5 = v4 - 32;
  if (v4 < 32)
    v5 = v4 - 17;
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 4);
  v6 = sub_1CA24C654((uint64_t)&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_1CA24E6B8();
  if (v6 != v1)
  {
    __break(1u);
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  return v3;
}

uint64_t sub_1CA243FCC(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v8;
  _QWORD *v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t result;

  v4 = a4 >> 1;
  v5 = (a4 >> 1) - a3;
  if (!__OFSUB__(a4 >> 1, a3))
  {
    if (!v5)
      return MEMORY[0x1E0DEE9D8];
    v8 = 2 * v5;
    if (v5 <= 0)
    {
      v9 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      if (v4 != a3)
      {
LABEL_7:
        if (v5 < 0)
          goto LABEL_19;
        v12 = a2 + 16 * a3;
        if (v12 < (unint64_t)&v9[v8 + 4] && (unint64_t)(v9 + 4) < v12 + v8 * 8)
          goto LABEL_19;
        swift_arrayInitWithCopy();
        return (uint64_t)v9;
      }
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED872760);
      v9 = (_QWORD *)swift_allocObject();
      v10 = _swift_stdlib_malloc_size(v9);
      v11 = v10 - 32;
      if (v10 < 32)
        v11 = v10 - 17;
      v9[2] = v5;
      v9[3] = 2 * (v11 >> 4);
      if (v4 != a3)
        goto LABEL_7;
    }
    __break(1u);
  }
  __break(1u);
LABEL_19:
  result = sub_1CA85C0D4();
  __break(1u);
  return result;
}

uint64_t sub_1CA24413C(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t result;
  uint64_t v8;

  if ((a1 & 0xC000000000000001) != 0)
  {
    v2 = sub_1CA85BE04();
    if (v2)
      goto LABEL_3;
    return MEMORY[0x1E0DEE9D8];
  }
  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
    return MEMORY[0x1E0DEE9D8];
LABEL_3:
  if (v2 <= 0)
  {
    v3 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED873300);
    v3 = (_QWORD *)swift_allocObject();
    v4 = _swift_stdlib_malloc_size(v3);
    v5 = v4 - 32;
    if (v4 < 32)
      v5 = v4 - 25;
    v3[2] = v2;
    v3[3] = (2 * (v5 >> 3)) | 1;
  }
  swift_bridgeObjectRetain();
  v6 = sub_1CA24A6F0(&v8, v3 + 4, v2, a1, &qword_1ED872350, 0x1E0C97B90, (unint64_t *)&qword_1EF94AAF8);
  result = sub_1CA24E6B8();
  if (v6 == (_QWORD *)v2)
    return (uint64_t)v3;
  __break(1u);
  return result;
}

uint64_t sub_1CA244250(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  size_t v4;
  _QWORD *v5;
  uint64_t v7;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return MEMORY[0x1E0DEE9D8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94AC78);
  v3 = swift_allocObject();
  v4 = _swift_stdlib_malloc_size((const void *)v3);
  *(_QWORD *)(v3 + 16) = v1;
  *(_QWORD *)(v3 + 24) = 2 * v4 - 64;
  v5 = sub_1CA24A9E8(&v7, (_BYTE *)(v3 + 32), v1, a1);
  swift_bridgeObjectRetain();
  sub_1CA24E6B8();
  if (v5 != (_QWORD *)v1)
  {
    __break(1u);
    return MEMORY[0x1E0DEE9D8];
  }
  return v3;
}

_QWORD *sub_1CA244328(uint64_t a1)
{
  return sub_1CA24433C(a1, &qword_1ED872760, (uint64_t (*)(uint64_t *, _QWORD *, uint64_t, uint64_t))sub_1CA24AE38);
}

_QWORD *sub_1CA24433C(uint64_t a1, uint64_t *a2, uint64_t (*a3)(uint64_t *, _QWORD *, uint64_t, uint64_t))
{
  uint64_t v3;
  _QWORD *v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v6 = (_QWORD *)swift_allocObject();
  v7 = _swift_stdlib_malloc_size(v6);
  v8 = v7 - 32;
  if (v7 < 32)
    v8 = v7 - 17;
  v6[2] = v3;
  v6[3] = 2 * (v8 >> 4);
  v9 = a3(&v11, v6 + 4, v3, a1);
  swift_bridgeObjectRetain();
  sub_1CA24E6B8();
  if (v9 != v3)
  {
    __break(1u);
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  return v6;
}

_QWORD *sub_1CA244420(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED872790);
  v3 = (_QWORD *)swift_allocObject();
  v4 = _swift_stdlib_malloc_size(v3);
  v5 = v4 - 32;
  if (v4 < 32)
    v5 = v4 - 25;
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 3);
  v6 = sub_1CA24B034((uint64_t)&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_1CA24E6B8();
  if (v6 != v1)
  {
    __break(1u);
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  return v3;
}

size_t sub_1CA244504(uint64_t a1)
{
  return sub_1CA244D0C(a1, (uint64_t *)&unk_1EF94ABB0, &qword_1ED871C40, (uint64_t (*)(uint64_t *, char *, uint64_t, uint64_t))sub_1CA24B22C);
}

_QWORD *sub_1CA244520(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v8;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED873300);
  v3 = (_QWORD *)swift_allocObject();
  v4 = _swift_stdlib_malloc_size(v3);
  v5 = v4 - 32;
  if (v4 < 32)
    v5 = v4 - 25;
  v3[2] = v1;
  v3[3] = (2 * (v5 >> 3)) | 1;
  v6 = sub_1CA24C850(&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_1CA24E6B8();
  if (v6 != (_QWORD *)v1)
  {
    __break(1u);
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  return v3;
}

size_t sub_1CA244608(uint64_t a1)
{
  return sub_1CA244BD4(a1, (uint64_t *)&unk_1EF94AC40, type metadata accessor for PersonalTraitInfo);
}

uint64_t sub_1CA24461C(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t result;
  uint64_t v8;

  if ((a1 & 0xC000000000000001) != 0)
  {
    v2 = sub_1CA85BE04();
    if (v2)
      goto LABEL_3;
    return MEMORY[0x1E0DEE9D8];
  }
  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
    return MEMORY[0x1E0DEE9D8];
LABEL_3:
  if (v2 <= 0)
  {
    v3 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED873300);
    v3 = (_QWORD *)swift_allocObject();
    v4 = _swift_stdlib_malloc_size(v3);
    v5 = v4 - 32;
    if (v4 < 32)
      v5 = v4 - 25;
    v3[2] = v2;
    v3[3] = (2 * (v5 >> 3)) | 1;
  }
  swift_bridgeObjectRetain();
  v6 = sub_1CA24A6F0(&v8, v3 + 4, v2, a1, (unint64_t *)&qword_1EF94AB50, (uint64_t)off_1E83FA3C0, (unint64_t *)&qword_1EF94AB58);
  result = sub_1CA24E6B8();
  if (v6 == (_QWORD *)v2)
    return (uint64_t)v3;
  __break(1u);
  return result;
}

uint64_t sub_1CA24472C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  return sub_1CA244738(a1, a2, a3, a4, (void (*)(_QWORD))type metadata accessor for TripLocationScore);
}

uint64_t sub_1CA244738(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, void (*a5)(_QWORD))
{
  unint64_t v5;
  uint64_t v6;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t result;

  v5 = a4 >> 1;
  v6 = (a4 >> 1) - a3;
  if (!__OFSUB__(a4 >> 1, a3))
  {
    if (!v6)
      return MEMORY[0x1E0DEE9D8];
    v10 = v6;
    if (v6 <= 0)
    {
      v11 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      if (v5 != a3)
      {
LABEL_7:
        if (v6 < 0)
          goto LABEL_19;
        v14 = a2 + 8 * a3;
        if (v14 < (unint64_t)&v11[v10 + 4] && (unint64_t)(v11 + 4) < v14 + v10 * 8)
          goto LABEL_19;
        a5(0);
        swift_arrayInitWithCopy();
        return (uint64_t)v11;
      }
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED873300);
      v11 = (_QWORD *)swift_allocObject();
      v12 = _swift_stdlib_malloc_size(v11);
      v13 = v12 - 32;
      if (v12 < 32)
        v13 = v12 - 25;
      v11[2] = v6;
      v11[3] = (2 * (v13 >> 3)) | 1;
      if (v5 != a3)
        goto LABEL_7;
    }
    __break(1u);
  }
  __break(1u);
LABEL_19:
  result = sub_1CA85C0D4();
  __break(1u);
  return result;
}

_QWORD *sub_1CA2448C4(uint64_t a1)
{
  return sub_1CA2448E0(a1, &qword_1EF94AC38, (uint64_t (*)(_QWORD *, _QWORD *, uint64_t, uint64_t))sub_1CA24B520, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1CA24E6B8);
}

_QWORD *sub_1CA2448E0(uint64_t a1, uint64_t *a2, uint64_t (*a3)(_QWORD *, _QWORD *, uint64_t, uint64_t), void (*a4)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v4;
  _QWORD *v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v18[5];

  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v8 = (_QWORD *)swift_allocObject();
  v9 = _swift_stdlib_malloc_size(v8);
  v10 = v9 - 32;
  if (v9 < 32)
    v10 = v9 - 17;
  v8[2] = v4;
  v8[3] = 2 * (v10 >> 4);
  v11 = a3(v18, v8 + 4, v4, a1);
  v12 = v18[0];
  v13 = v18[1];
  v14 = v18[2];
  v15 = v18[3];
  v16 = v18[4];
  swift_bridgeObjectRetain();
  a4(v12, v13, v14, v15, v16);
  if (v11 != v4)
  {
    __break(1u);
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  return v8;
}

_QWORD *sub_1CA2449C8(unint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = a1;
  if (a1 >> 62)
    goto LABEL_10;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v2)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  while (1)
  {
    if (v2 <= 0)
    {
      v3 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED873300);
      v3 = (_QWORD *)swift_allocObject();
      v4 = _swift_stdlib_malloc_size(v3);
      v5 = v4 - 32;
      if (v4 < 32)
        v5 = v4 - 25;
      v3[2] = v2;
      v3[3] = (2 * (v5 >> 3)) | 1;
    }
    swift_bridgeObjectRetain();
    sub_1CA24D89C((unint64_t)(v3 + 4), v2, v1, (void (*)(_QWORD))type metadata accessor for TripLocationScore, &qword_1EF94AC30, &qword_1EF94AC28, (uint64_t (*)(_BYTE *, uint64_t, unint64_t, uint64_t, uint64_t))sub_1CA2DEC54);
    v1 = v6;
    swift_bridgeObjectRelease();
    if (v1 == v2)
      break;
    __break(1u);
LABEL_10:
    swift_bridgeObjectRetain();
    v2 = sub_1CA85C08C();
    swift_bridgeObjectRelease();
    if (!v2)
      return (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  return v3;
}

_QWORD *sub_1CA244ADC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF94B450);
  v3 = (_QWORD *)swift_allocObject();
  v4 = _swift_stdlib_malloc_size(v3);
  v5 = v4 - 32;
  if (v4 < 32)
    v5 = v4 - 25;
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 3);
  v6 = sub_1CA24B724((uint64_t)&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_1CA24E6B8();
  if (v6 != v1)
  {
    __break(1u);
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  return v3;
}

size_t sub_1CA244BC0(uint64_t a1)
{
  return sub_1CA244BD4(a1, (uint64_t *)&unk_1ED872740, (uint64_t (*)(_QWORD))type metadata accessor for Song);
}

size_t sub_1CA244BD4(uint64_t a1, uint64_t *a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  _QWORD *v9;
  size_t result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
    return MEMORY[0x1E0DEE9D8];
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v6 = *(_QWORD *)(a3(0) - 8);
  v7 = *(_QWORD *)(v6 + 72);
  v8 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v9 = (_QWORD *)swift_allocObject();
  result = _swift_stdlib_malloc_size(v9);
  if (v7)
  {
    if (result - v8 != 0x8000000000000000 || v7 != -1)
    {
      v9[2] = v3;
      v9[3] = 2 * ((uint64_t)(result - v8) / v7);
      sub_1CA24B91C(&v14, (uint64_t)v9 + v8, v3, a1, a3);
      v13 = v12;
      swift_bridgeObjectRetain();
      sub_1CA24E6B8();
      if (v13 == v3)
        return (size_t)v9;
      __break(1u);
      return MEMORY[0x1E0DEE9D8];
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

size_t sub_1CA244CF0(uint64_t a1)
{
  return sub_1CA244D0C(a1, (uint64_t *)&unk_1EF94ABA0, (uint64_t *)&unk_1EF956C60, (uint64_t (*)(uint64_t *, char *, uint64_t, uint64_t))sub_1CA24BBD4);
}

size_t sub_1CA244D0C(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t (*a4)(uint64_t *, char *, uint64_t, uint64_t))
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  _QWORD *v11;
  size_t result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
    return MEMORY[0x1E0DEE9D8];
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v8 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(a3) - 8);
  v9 = *(_QWORD *)(v8 + 72);
  v10 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v11 = (_QWORD *)swift_allocObject();
  result = _swift_stdlib_malloc_size(v11);
  if (v9)
  {
    if (result - v10 != 0x8000000000000000 || v9 != -1)
    {
      v11[2] = v4;
      v11[3] = 2 * ((uint64_t)(result - v10) / v9);
      v14 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(a3) - 8) + 80);
      v15 = a4(&v16, (char *)v11 + ((v14 + 32) & ~v14), v4, a1);
      swift_bridgeObjectRetain();
      sub_1CA24E6B8();
      if (v15 == v4)
        return (size_t)v11;
      __break(1u);
      return MEMORY[0x1E0DEE9D8];
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1CA244E40(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v8;
  char *v9;
  int64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  v4 = a4 >> 1;
  v5 = (a4 >> 1) - a3;
  if (!__OFSUB__(a4 >> 1, a3))
  {
    if (!v5)
      return MEMORY[0x1E0DEE9D8];
    v8 = 8 * v5;
    if (v5 <= 0)
    {
      v9 = (char *)MEMORY[0x1E0DEE9D8];
      if (v4 != a3)
      {
LABEL_7:
        if (v5 < 0)
          goto LABEL_19;
        v12 = v9 + 32;
        v13 = (char *)(a2 + 8 * a3);
        if (v13 < &v9[v8 + 32] && v12 < &v13[v8])
          goto LABEL_19;
        memcpy(v12, v13, 8 * v5);
        return (uint64_t)v9;
      }
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED874C90);
      v9 = (char *)swift_allocObject();
      v10 = _swift_stdlib_malloc_size(v9);
      v11 = v10 - 32;
      if (v10 < 32)
        v11 = v10 - 25;
      *((_QWORD *)v9 + 2) = v5;
      *((_QWORD *)v9 + 3) = 2 * (v11 >> 3);
      if (v4 != a3)
        goto LABEL_7;
    }
    __break(1u);
  }
  __break(1u);
LABEL_19:
  result = sub_1CA85C0D4();
  __break(1u);
  return result;
}

_QWORD *sub_1CA244FA8(uint64_t a1)
{
  return sub_1CA244FD0(a1, (uint64_t *)&unk_1EF94AB90, (uint64_t (*)(uint64_t *, _QWORD *, uint64_t, uint64_t))sub_1CA24BEC0);
}

_QWORD *sub_1CA244FBC(uint64_t a1)
{
  return sub_1CA244FD0(a1, &qword_1EF957650, (uint64_t (*)(uint64_t *, _QWORD *, uint64_t, uint64_t))sub_1CA24C0C4);
}

_QWORD *sub_1CA244FD0(uint64_t a1, uint64_t *a2, uint64_t (*a3)(uint64_t *, _QWORD *, uint64_t, uint64_t))
{
  uint64_t v3;
  _QWORD *v6;
  size_t v7;
  uint64_t v8;
  uint64_t v10;

  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v6 = (_QWORD *)swift_allocObject();
  v7 = _swift_stdlib_malloc_size(v6);
  v6[2] = v3;
  v6[3] = 2 * ((uint64_t)(v7 - 32) / 24);
  v8 = a3(&v10, v6 + 4, v3, a1);
  swift_bridgeObjectRetain();
  sub_1CA24E6B8();
  if (v8 != v3)
  {
    __break(1u);
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  return v6;
}

_QWORD *sub_1CA2450C4(uint64_t a1)
{
  return sub_1CA24433C(a1, (uint64_t *)&unk_1EF94AAB8, (uint64_t (*)(uint64_t *, _QWORD *, uint64_t, uint64_t))sub_1CA24C2C8);
}

_QWORD *sub_1CA2450D8(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v8;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED873300);
  v3 = (_QWORD *)swift_allocObject();
  v4 = _swift_stdlib_malloc_size(v3);
  v5 = v4 - 32;
  if (v4 < 32)
    v5 = v4 - 25;
  v3[2] = v1;
  v3[3] = (2 * (v5 >> 3)) | 1;
  v6 = sub_1CA24C45C(&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_1CA24E6B8();
  if (v6 != (_QWORD *)v1)
  {
    __break(1u);
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  return v3;
}

_QWORD *sub_1CA2451C0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v8;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94AAB0);
  v3 = (_QWORD *)swift_allocObject();
  v4 = _swift_stdlib_malloc_size(v3);
  v5 = v4 - 32;
  if (v4 < 32)
    v5 = v4 - 25;
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 3);
  v6 = sub_1CA24CA48(&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_1CA24E6B8();
  if (v6 != (_QWORD *)v1)
  {
    __break(1u);
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  return v3;
}

uint64_t sub_1CA2452A4(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v8;
  char *v9;
  int64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  v4 = a4 >> 1;
  v5 = (a4 >> 1) - a3;
  if (!__OFSUB__(a4 >> 1, a3))
  {
    if (!v5)
      return MEMORY[0x1E0DEE9D8];
    v8 = 16 * v5;
    if (v5 <= 0)
    {
      v9 = (char *)MEMORY[0x1E0DEE9D8];
      if (v4 != a3)
      {
LABEL_7:
        if (v5 < 0)
          goto LABEL_19;
        v12 = v9 + 32;
        v13 = (char *)(a2 + 16 * a3);
        if (v13 < &v9[v8 + 32] && v12 < &v13[v8])
          goto LABEL_19;
        memcpy(v12, v13, 16 * v5);
        return (uint64_t)v9;
      }
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF94AAB8);
      v9 = (char *)swift_allocObject();
      v10 = _swift_stdlib_malloc_size(v9);
      v11 = v10 - 32;
      if (v10 < 32)
        v11 = v10 - 17;
      *((_QWORD *)v9 + 2) = v5;
      *((_QWORD *)v9 + 3) = 2 * (v11 >> 4);
      if (v4 != a3)
        goto LABEL_7;
    }
    __break(1u);
  }
  __break(1u);
LABEL_19:
  result = sub_1CA85C0D4();
  __break(1u);
  return result;
}

_QWORD *sub_1CA24540C(unint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = a1;
  if (a1 >> 62)
    goto LABEL_10;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v2)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  while (1)
  {
    if (v2 <= 0)
    {
      v3 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED873300);
      v3 = (_QWORD *)swift_allocObject();
      v4 = _swift_stdlib_malloc_size(v3);
      v5 = v4 - 32;
      if (v4 < 32)
        v5 = v4 - 25;
      v3[2] = v2;
      v3[3] = (2 * (v5 >> 3)) | 1;
    }
    swift_bridgeObjectRetain();
    sub_1CA24D694((unint64_t)(v3 + 4), v2, v1, (void (*)(_QWORD))type metadata accessor for PGSharedLibrarySimulationEvent, &qword_1EF94AB70, &qword_1EF94AB68, (uint64_t (*)(_BYTE *, uint64_t, unint64_t, uint64_t, uint64_t))sub_1CA2DECAC);
    v1 = v6;
    swift_bridgeObjectRelease();
    if (v1 == v2)
      break;
    __break(1u);
LABEL_10:
    swift_bridgeObjectRetain();
    v2 = sub_1CA85C08C();
    swift_bridgeObjectRelease();
    if (!v2)
      return (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  return v3;
}

uint64_t sub_1CA245520(unint64_t a1)
{
  uint64_t v2;
  uint64_t *v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;

  if ((a1 & 0xC000000000000001) != 0)
  {
    v2 = sub_1CA85BE04();
    if (v2)
      goto LABEL_3;
    return MEMORY[0x1E0DEE9D8];
  }
  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
    return MEMORY[0x1E0DEE9D8];
LABEL_3:
  if (v2 <= 0)
  {
    v3 = (uint64_t *)MEMORY[0x1E0DEE9D8];
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED873300);
    v3 = (uint64_t *)swift_allocObject();
    v4 = _swift_stdlib_malloc_size(v3);
    v5 = v4 - 32;
    if (v4 < 32)
      v5 = v4 - 25;
    v3[2] = v2;
    v3[3] = (2 * (v5 >> 3)) | 1;
  }
  swift_bridgeObjectRetain();
  v6 = sub_1CA24CBDC((uint64_t)&v8, v3 + 4, v2, a1);
  result = sub_1CA24E6B8();
  if (v6 == v2)
    return (uint64_t)v3;
  __break(1u);
  return result;
}

size_t sub_1CA245618(uint64_t a1)
{
  return sub_1CA243B5C(a1, (uint64_t *)&unk_1EF94AB28, (uint64_t (*)(_QWORD))MEMORY[0x1E0D767B8]);
}

size_t sub_1CA24562C(uint64_t a1)
{
  return sub_1CA245648(a1, &qword_1EF94AB20, (uint64_t *)&unk_1EF956C50, (uint64_t (*)(_QWORD))MEMORY[0x1E0D767B8]);
}

size_t sub_1CA245648(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  _QWORD *v11;
  size_t result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
    return MEMORY[0x1E0DEE9D8];
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v8 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(a3) - 8);
  v9 = *(_QWORD *)(v8 + 72);
  v10 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v11 = (_QWORD *)swift_allocObject();
  result = _swift_stdlib_malloc_size(v11);
  if (v9)
  {
    if (result - v10 != 0x8000000000000000 || v9 != -1)
    {
      v11[2] = v4;
      v11[3] = 2 * ((uint64_t)(result - v10) / v9);
      v14 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(a3) - 8) + 80);
      v15 = sub_1CA24D174(&v16, (uint64_t)v11 + ((v14 + 32) & ~v14), v4, a1, a3, a4);
      swift_bridgeObjectRetain();
      sub_1CA24E6B8();
      if (v15 == v4)
        return (size_t)v11;
      __break(1u);
      return MEMORY[0x1E0DEE9D8];
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1CA245784(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  return sub_1CA245798(a1, a2, a3, a4, &qword_1ED874BF0, (uint64_t (*)(_QWORD))type metadata accessor for DateAndLocation);
}

uint64_t sub_1CA245798(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t *a5, uint64_t (*a6)(_QWORD))
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  size_t v15;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  char *v22;
  unint64_t v23;
  uint64_t result;

  v6 = a4 >> 1;
  v7 = (a4 >> 1) - a3;
  if (__OFSUB__(a4 >> 1, a3))
    goto LABEL_21;
  if (!v7)
    return MEMORY[0x1E0DEE9D8];
  if (v7 <= 0)
  {
    v14 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    if (v6 != a3)
    {
LABEL_10:
      if (v7 < 0)
        goto LABEL_24;
      v17 = *(_QWORD *)(a6(0) - 8);
      v18 = (char *)v14 + ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80));
      v19 = *(_QWORD *)(v17 + 72);
      v20 = a2 + v19 * a3;
      v21 = v19 * v7;
      v22 = &v18[v21];
      v23 = v20 + v21;
      if (v20 < (unint64_t)v22 && (unint64_t)v18 < v23)
        goto LABEL_24;
      swift_arrayInitWithCopy();
      return (uint64_t)v14;
    }
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  v11 = *(_QWORD *)(a6(0) - 8);
  v12 = *(_QWORD *)(v11 + 72);
  v13 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v14 = (_QWORD *)swift_allocObject();
  v15 = _swift_stdlib_malloc_size(v14);
  if (v12)
  {
    if (v15 - v13 == 0x8000000000000000 && v12 == -1)
      goto LABEL_23;
    v14[2] = v7;
    v14[3] = 2 * ((uint64_t)(v15 - v13) / v12);
    if (v6 != a3)
      goto LABEL_10;
    goto LABEL_20;
  }
LABEL_22:
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_1CA85C0D4();
  __break(1u);
  return result;
}

uint64_t sub_1CA245960(uint64_t a1, uint64_t a2, uint64_t *a3, void (*a4)(_QWORD), void (*a5)(unint64_t))
{
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  char v15;
  unint64_t v16;
  BOOL v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName(a3);
    v7 = sub_1CA85BEA0();
    v20 = v7;
    sub_1CA85BDC8();
    if (sub_1CA85BE34())
    {
      a4(0);
      do
      {
        swift_dynamicCast();
        v7 = v20;
        v14 = *(_QWORD *)(v20 + 16);
        if (*(_QWORD *)(v20 + 24) <= v14)
        {
          a5(v14 + 1);
          v7 = v20;
        }
        result = sub_1CA85BC78();
        v9 = v7 + 56;
        v10 = -1 << *(_BYTE *)(v7 + 32);
        v11 = result & ~v10;
        v12 = v11 >> 6;
        if (((-1 << v11) & ~*(_QWORD *)(v7 + 56 + 8 * (v11 >> 6))) != 0)
        {
          v13 = __clz(__rbit64((-1 << v11) & ~*(_QWORD *)(v7 + 56 + 8 * (v11 >> 6)))) | v11 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          v15 = 0;
          v16 = (unint64_t)(63 - v10) >> 6;
          do
          {
            if (++v12 == v16 && (v15 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            v17 = v12 == v16;
            if (v12 == v16)
              v12 = 0;
            v15 |= v17;
            v18 = *(_QWORD *)(v9 + 8 * v12);
          }
          while (v18 == -1);
          v13 = __clz(__rbit64(~v18)) + (v12 << 6);
        }
        *(_QWORD *)(v9 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
        *(_QWORD *)(*(_QWORD *)(v7 + 48) + 8 * v13) = v19;
        ++*(_QWORD *)(v7 + 16);
      }
      while (sub_1CA85BE34());
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x1E0DEE9E8];
  }
  return v7;
}

uint64_t sub_1CA245B50(uint64_t a1, uint64_t a2, uint64_t *a3, unint64_t *a4, uint64_t a5, void (*a6)(unint64_t))
{
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  char v16;
  unint64_t v17;
  BOOL v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName(a3);
    v8 = sub_1CA85BEA0();
    v21 = v8;
    sub_1CA85BDC8();
    if (sub_1CA85BE34())
    {
      sub_1CA24EEC0(0, a4);
      do
      {
        swift_dynamicCast();
        v8 = v21;
        v15 = *(_QWORD *)(v21 + 16);
        if (*(_QWORD *)(v21 + 24) <= v15)
        {
          a6(v15 + 1);
          v8 = v21;
        }
        result = sub_1CA85BC78();
        v10 = v8 + 56;
        v11 = -1 << *(_BYTE *)(v8 + 32);
        v12 = result & ~v11;
        v13 = v12 >> 6;
        if (((-1 << v12) & ~*(_QWORD *)(v8 + 56 + 8 * (v12 >> 6))) != 0)
        {
          v14 = __clz(__rbit64((-1 << v12) & ~*(_QWORD *)(v8 + 56 + 8 * (v12 >> 6)))) | v12 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          v16 = 0;
          v17 = (unint64_t)(63 - v11) >> 6;
          do
          {
            if (++v13 == v17 && (v16 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            v18 = v13 == v17;
            if (v13 == v17)
              v13 = 0;
            v16 |= v18;
            v19 = *(_QWORD *)(v10 + 8 * v13);
          }
          while (v19 == -1);
          v14 = __clz(__rbit64(~v19)) + (v13 << 6);
        }
        *(_QWORD *)(v10 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
        *(_QWORD *)(*(_QWORD *)(v8 + 48) + 8 * v14) = v20;
        ++*(_QWORD *)(v8 + 16);
      }
      while (sub_1CA85BE34());
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x1E0DEE9E8];
  }
  return v8;
}

uint64_t sub_1CA245D4C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  id v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  char v10;
  unint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF94ACD8);
    v2 = sub_1CA85BEA0();
    v15 = v2;
    sub_1CA85BDC8();
    if (sub_1CA85BE34())
    {
      type metadata accessor for ImportantEntitiesGraphInferenceMoment();
      do
      {
        swift_dynamicCast();
        v2 = v15;
        if (*(_QWORD *)(v15 + 24) <= *(_QWORD *)(v15 + 16))
        {
          sub_1CA361600();
          v2 = v15;
        }
        sub_1CA85C368();
        v3 = objc_msgSend(*(id *)(v14 + 16), sel_localIdentifier);
        sub_1CA85B534();

        sub_1CA85B4B0();
        swift_bridgeObjectRelease();
        result = sub_1CA85C3B0();
        v5 = v2 + 56;
        v6 = -1 << *(_BYTE *)(v2 + 32);
        v7 = result & ~v6;
        v8 = v7 >> 6;
        if (((-1 << v7) & ~*(_QWORD *)(v2 + 56 + 8 * (v7 >> 6))) != 0)
        {
          v9 = __clz(__rbit64((-1 << v7) & ~*(_QWORD *)(v2 + 56 + 8 * (v7 >> 6)))) | v7 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          v10 = 0;
          v11 = (unint64_t)(63 - v6) >> 6;
          do
          {
            if (++v8 == v11 && (v10 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            v12 = v8 == v11;
            if (v8 == v11)
              v8 = 0;
            v10 |= v12;
            v13 = *(_QWORD *)(v5 + 8 * v8);
          }
          while (v13 == -1);
          v9 = __clz(__rbit64(~v13)) + (v8 << 6);
        }
        *(_QWORD *)(v5 + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v9;
        *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v9) = v14;
        ++*(_QWORD *)(v2 + 16);
      }
      while (sub_1CA85BE34());
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x1E0DEE9E8];
  }
  return v2;
}

uint64_t sub_1CA245F88(uint64_t a1, uint64_t a2)
{
  return sub_1CA245B50(a1, a2, &qword_1ED8724E8, (unint64_t *)&qword_1ED8723B0, 0x1E0CD1390, (void (*)(unint64_t))sub_1CA361920);
}

uint64_t sub_1CA245FAC(uint64_t a1, uint64_t a2)
{
  return sub_1CA245B50(a1, a2, (uint64_t *)&unk_1EF94ABF8, (unint64_t *)&unk_1ED872E30, 0x1E0CD17C0, (void (*)(unint64_t))sub_1CA36222C);
}

uint64_t sub_1CA245FD0(uint64_t a1, uint64_t a2)
{
  return sub_1CA245B50(a1, a2, &qword_1EF94ABD8, &qword_1ED872E40, (uint64_t)off_1E83FA6C0, (void (*)(unint64_t))sub_1CA362608);
}

uint64_t sub_1CA245FF4(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  BOOL v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;

  v5 = v4;
  v8 = result;
  v9 = *(_QWORD *)(*v4 + 16);
  v10 = *(_QWORD *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0)
    goto LABEL_22;
  if ((a4 & 1) != 0)
  {
    sub_1CA3602A4();
  }
  else
  {
    if (v10 > v9)
    {
      result = (uint64_t)sub_1CA3628C4();
      goto LABEL_22;
    }
    sub_1CA3637C8();
  }
  v11 = *v4;
  sub_1CA85C368();
  sub_1CA85B4B0();
  result = sub_1CA85C3B0();
  v12 = -1 << *(_BYTE *)(v11 + 32);
  a3 = result & ~v12;
  v13 = v11 + 56;
  if (((*(_QWORD *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) != 0)
  {
    v14 = *(_QWORD *)(v11 + 48);
    v15 = (_QWORD *)(v14 + 16 * a3);
    v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (result = sub_1CA85C284(), (result & 1) != 0))
    {
LABEL_21:
      result = sub_1CA85C2D8();
      __break(1u);
    }
    else
    {
      v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(_QWORD *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) == 0)
          break;
        v18 = (_QWORD *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          result = sub_1CA85C284();
          if ((result & 1) == 0)
            continue;
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  v20 = *v5;
  *(_QWORD *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  v21 = (uint64_t *)(*(_QWORD *)(v20 + 48) + 16 * a3);
  *v21 = v8;
  v21[1] = a2;
  v22 = *(_QWORD *)(v20 + 16);
  v23 = __OFADD__(v22, 1);
  v24 = v22 + 1;
  if (v23)
    __break(1u);
  else
    *(_QWORD *)(v20 + 16) = v24;
  return result;
}

void sub_1CA24618C(uint64_t a1, unint64_t a2, char a3, void (*a4)(uint64_t), void (*a5)(_QWORD), void (*a6)(uint64_t), void (*a7)(void))
{
  uint64_t *v7;
  unint64_t v11;
  unint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  char v18;
  uint64_t v19;
  id v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;

  v11 = *(_QWORD *)(*v7 + 16);
  v12 = *(_QWORD *)(*v7 + 24);
  if (v12 <= v11 || (a3 & 1) == 0)
  {
    if ((a3 & 1) == 0)
      a4 = a6;
    if ((a3 & 1) != 0 || v12 <= v11)
    {
      a4(v11 + 1);
      v14 = *v7;
      v15 = sub_1CA85BC78();
      v16 = -1 << *(_BYTE *)(v14 + 32);
      a2 = v15 & ~v16;
      if (((*(_QWORD *)(v14 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
      {
        a5(0);
        v17 = *(id *)(*(_QWORD *)(v14 + 48) + 8 * a2);
        v18 = sub_1CA85BC84();

        if ((v18 & 1) != 0)
        {
LABEL_14:
          sub_1CA85C2D8();
          __break(1u);
        }
        else
        {
          v19 = ~v16;
          while (1)
          {
            a2 = (a2 + 1) & v19;
            if (((*(_QWORD *)(v14 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
              break;
            v20 = *(id *)(*(_QWORD *)(v14 + 48) + 8 * a2);
            v21 = sub_1CA85BC84();

            if ((v21 & 1) != 0)
              goto LABEL_14;
          }
        }
      }
    }
    else
    {
      a7();
    }
  }
  v22 = *v7;
  *(_QWORD *)(*v7 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v22 + 48) + 8 * a2) = a1;
  v23 = *(_QWORD *)(v22 + 16);
  v24 = __OFADD__(v23, 1);
  v25 = v23 + 1;
  if (v24)
    __break(1u);
  else
    *(_QWORD *)(v22 + 16) = v25;
}

uint64_t sub_1CA246308(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  char *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, unint64_t, uint64_t);
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;

  v28 = a1;
  v6 = sub_1CA85A5B0();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(*v3 + 16);
  v12 = *(_QWORD *)(*v3 + 24);
  v27 = v3;
  if (v12 > v11 && (a3 & 1) != 0)
    goto LABEL_12;
  v13 = v11 + 1;
  if ((a3 & 1) != 0)
  {
    sub_1CA360908(v13);
  }
  else
  {
    if (v12 > v11)
    {
      sub_1CA362AA0();
      goto LABEL_12;
    }
    sub_1CA363DBC(v13);
  }
  v14 = *v3;
  sub_1CA23CC98((unint64_t *)&qword_1ED871190, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08A8]);
  v15 = sub_1CA85B498();
  v16 = -1 << *(_BYTE *)(v14 + 32);
  a2 = v15 & ~v16;
  if (((*(_QWORD *)(v14 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v17 = ~v16;
    v18 = *(_QWORD *)(v7 + 72);
    v19 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    do
    {
      v19(v10, *(_QWORD *)(v14 + 48) + v18 * a2, v6);
      sub_1CA23CC98((unint64_t *)&unk_1ED8711B0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08B8]);
      v20 = sub_1CA85B504();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
      if ((v20 & 1) != 0)
        goto LABEL_15;
      a2 = (a2 + 1) & v17;
    }
    while (((*(_QWORD *)(v14 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  v21 = v28;
  v22 = *v27;
  *(_QWORD *)(*v27 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t, __n128))(v7 + 32))(*(_QWORD *)(v22 + 48) + *(_QWORD *)(v7 + 72) * a2, v21, v6, v8);
  v24 = *(_QWORD *)(v22 + 16);
  v25 = __OFADD__(v24, 1);
  v26 = v24 + 1;
  if (!v25)
  {
    *(_QWORD *)(v22 + 16) = v26;
    return result;
  }
  __break(1u);
LABEL_15:
  result = sub_1CA85C2D8();
  __break(1u);
  return result;
}

void sub_1CA24650C(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  char v13;
  uint64_t v14;
  id v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;

  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0)
    goto LABEL_14;
  v8 = v6 + 1;
  if ((a3 & 1) != 0)
  {
    sub_1CA36092C(v8);
  }
  else
  {
    if (v7 > v6)
    {
      sub_1CA362AB4();
      goto LABEL_14;
    }
    sub_1CA363DE0(v8);
  }
  v9 = *v3;
  v10 = sub_1CA85BC78();
  v11 = -1 << *(_BYTE *)(v9 + 32);
  a2 = v10 & ~v11;
  if (((*(_QWORD *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    sub_1CA24EEC0(0, &qword_1ED8723A0);
    v12 = *(id *)(*(_QWORD *)(v9 + 48) + 8 * a2);
    v13 = sub_1CA85BC84();

    if ((v13 & 1) != 0)
    {
LABEL_13:
      sub_1CA85C2D8();
      __break(1u);
    }
    else
    {
      v14 = ~v11;
      while (1)
      {
        a2 = (a2 + 1) & v14;
        if (((*(_QWORD *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        v15 = *(id *)(*(_QWORD *)(v9 + 48) + 8 * a2);
        v16 = sub_1CA85BC84();

        if ((v16 & 1) != 0)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v17 = *v3;
  *(_QWORD *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v17 + 48) + 8 * a2) = a1;
  v18 = *(_QWORD *)(v17 + 16);
  v19 = __OFADD__(v18, 1);
  v20 = v18 + 1;
  if (v19)
    __break(1u);
  else
    *(_QWORD *)(v17 + 16) = v20;
}

uint64_t sub_1CA246690(uint64_t result, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  v5 = result;
  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0)
    goto LABEL_14;
  if ((a3 & 1) != 0)
  {
    sub_1CA360938();
  }
  else
  {
    if (v7 > v6)
    {
      result = (uint64_t)sub_1CA362AC0();
      goto LABEL_14;
    }
    sub_1CA363DEC();
  }
  v8 = *v3;
  result = sub_1CA85C35C();
  v9 = -1 << *(_BYTE *)(v8 + 32);
  a2 = result & ~v9;
  if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v10 = *(_QWORD *)(v8 + 48);
    if (*(_QWORD *)(v10 + 8 * a2) == v5)
    {
LABEL_13:
      result = sub_1CA85C2D8();
      __break(1u);
    }
    else
    {
      v11 = ~v9;
      while (1)
      {
        a2 = (a2 + 1) & v11;
        if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        if (*(_QWORD *)(v10 + 8 * a2) == v5)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v12 = *v3;
  *(_QWORD *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v12 + 48) + 8 * a2) = v5;
  v13 = *(_QWORD *)(v12 + 16);
  v14 = __OFADD__(v13, 1);
  v15 = v13 + 1;
  if (v14)
    __break(1u);
  else
    *(_QWORD *)(v12 + 16) = v15;
  return result;
}

void *sub_1CA2467B0(void *result, unint64_t a2, char a3)
{
  uint64_t v3;
  char v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  uint64_t *v12;
  char v13;

  v5 = (char)result;
  v6 = *(_QWORD *)(*(_QWORD *)v3 + 16);
  v7 = *(_QWORD *)(*(_QWORD *)v3 + 24);
  if (v7 <= v6 || (a3 & 1) == 0)
  {
    if ((a3 & 1) != 0)
    {
      sub_1CA360BB8();
      goto LABEL_8;
    }
    if (v7 <= v6)
    {
      sub_1CA36404C();
LABEL_8:
      sub_1CA85C368();
      __asm { BR              X10 }
    }
    result = sub_1CA362C54();
  }
  v8 = *v12;
  *(_QWORD *)(*v12 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_BYTE *)(*(_QWORD *)(v8 + 48) + a2) = v13;
  v9 = *(_QWORD *)(v8 + 16);
  v10 = __OFADD__(v9, 1);
  v11 = v9 + 1;
  if (v10)
  {
    __break(1u);
    JUMPOUT(0x1CA246B64);
  }
  *(_QWORD *)(v8 + 16) = v11;
  return result;
}

uint64_t sub_1CA246BC8(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, unint64_t, uint64_t);
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;

  v27 = a1;
  v6 = sub_1CA85A7E4();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(*v3 + 16);
  v11 = *(_QWORD *)(*v3 + 24);
  v26 = v3;
  if (v11 > v10 && (a3 & 1) != 0)
    goto LABEL_12;
  v12 = v10 + 1;
  if ((a3 & 1) != 0)
  {
    sub_1CA360F3C(v12);
  }
  else
  {
    if (v11 > v10)
    {
      sub_1CA362C60();
      goto LABEL_12;
    }
    sub_1CA36439C(v12);
  }
  v13 = *v3;
  sub_1CA23CC98(&qword_1ED871208, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB11B8], MEMORY[0x1E0CB11D0]);
  v14 = sub_1CA85B498();
  v15 = -1 << *(_BYTE *)(v13 + 32);
  a2 = v14 & ~v15;
  if (((*(_QWORD *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v16 = ~v15;
    v17 = *(_QWORD *)(v7 + 72);
    v18 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    do
    {
      v18(v9, *(_QWORD *)(v13 + 48) + v17 * a2, v6);
      sub_1CA23CC98(&qword_1ED871210, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB11B8], MEMORY[0x1E0CB11D8]);
      v19 = sub_1CA85B504();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      if ((v19 & 1) != 0)
        goto LABEL_15;
      a2 = (a2 + 1) & v16;
    }
    while (((*(_QWORD *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  v20 = v27;
  v21 = *v26;
  *(_QWORD *)(*v26 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v7 + 32))(*(_QWORD *)(v21 + 48) + *(_QWORD *)(v7 + 72) * a2, v20, v6);
  v23 = *(_QWORD *)(v21 + 16);
  v24 = __OFADD__(v23, 1);
  v25 = v23 + 1;
  if (!v24)
  {
    *(_QWORD *)(v21 + 16) = v25;
    return result;
  }
  __break(1u);
LABEL_15:
  result = sub_1CA85C2D8();
  __break(1u);
  return result;
}

uint64_t sub_1CA246DCC(uint64_t result, unint64_t a2, char a3)
{
  uint64_t *v3;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;

  v27 = result;
  v5 = *(_QWORD *)(*v3 + 16);
  v6 = *(_QWORD *)(*v3 + 24);
  if (v6 > v5 && (a3 & 1) != 0)
    goto LABEL_16;
  if ((a3 & 1) != 0)
  {
    sub_1CA361600();
  }
  else
  {
    if (v6 > v5)
    {
      result = (uint64_t)sub_1CA362E8C();
      goto LABEL_16;
    }
    sub_1CA3649E8();
  }
  v7 = *v3;
  sub_1CA85C368();
  v8 = objc_msgSend(*(id *)(v27 + 16), sel_localIdentifier);
  sub_1CA85B534();

  sub_1CA85B4B0();
  swift_bridgeObjectRelease();
  result = sub_1CA85C3B0();
  v9 = -1 << *(_BYTE *)(v7 + 32);
  a2 = result & ~v9;
  if (((*(_QWORD *)(v7 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v10 = ~v9;
    type metadata accessor for ImportantEntitiesGraphInferenceMoment();
    do
    {
      v11 = *(void **)(*(_QWORD *)(*(_QWORD *)(v7 + 48) + 8 * a2) + 16);
      swift_retain();
      v12 = objc_msgSend(v11, sel_localIdentifier);
      v13 = sub_1CA85B534();
      v15 = v14;

      v16 = objc_msgSend(*(id *)(v27 + 16), sel_localIdentifier);
      v17 = sub_1CA85B534();
      v19 = v18;

      if (v13 == v17 && v15 == v19)
        goto LABEL_19;
      v21 = sub_1CA85C284();
      swift_release();
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
      if ((v21 & 1) != 0)
        goto LABEL_20;
      a2 = (a2 + 1) & v10;
    }
    while (((*(_QWORD *)(v7 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_16:
  v22 = *v26;
  *(_QWORD *)(*v26 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v22 + 48) + 8 * a2) = v27;
  v23 = *(_QWORD *)(v22 + 16);
  v24 = __OFADD__(v23, 1);
  v25 = v23 + 1;
  if (!v24)
  {
    *(_QWORD *)(v22 + 16) = v25;
    return result;
  }
  __break(1u);
LABEL_19:
  swift_release();
  swift_bridgeObjectRelease_n();
LABEL_20:
  result = sub_1CA85C2D8();
  __break(1u);
  return result;
}

void sub_1CA247014(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  char v13;
  uint64_t v14;
  id v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;

  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0)
    goto LABEL_14;
  v8 = v6 + 1;
  if ((a3 & 1) != 0)
  {
    sub_1CA361920(v8);
  }
  else
  {
    if (v7 > v6)
    {
      sub_1CA363034();
      goto LABEL_14;
    }
    sub_1CA364CDC(v8);
  }
  v9 = *v3;
  v10 = sub_1CA85BC78();
  v11 = -1 << *(_BYTE *)(v9 + 32);
  a2 = v10 & ~v11;
  if (((*(_QWORD *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    sub_1CA24EEC0(0, (unint64_t *)&qword_1ED8723B0);
    v12 = *(id *)(*(_QWORD *)(v9 + 48) + 8 * a2);
    v13 = sub_1CA85BC84();

    if ((v13 & 1) != 0)
    {
LABEL_13:
      sub_1CA85C2D8();
      __break(1u);
    }
    else
    {
      v14 = ~v11;
      while (1)
      {
        a2 = (a2 + 1) & v14;
        if (((*(_QWORD *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        v15 = *(id *)(*(_QWORD *)(v9 + 48) + 8 * a2);
        v16 = sub_1CA85BC84();

        if ((v16 & 1) != 0)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v17 = *v3;
  *(_QWORD *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v17 + 48) + 8 * a2) = a1;
  v18 = *(_QWORD *)(v17 + 16);
  v19 = __OFADD__(v18, 1);
  v20 = v18 + 1;
  if (v19)
    __break(1u);
  else
    *(_QWORD *)(v17 + 16) = v20;
}

void sub_1CA247198(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  char v13;
  uint64_t v14;
  id v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;

  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0)
    goto LABEL_14;
  v8 = v6 + 1;
  if ((a3 & 1) != 0)
  {
    sub_1CA36192C(v8);
  }
  else
  {
    if (v7 > v6)
    {
      sub_1CA363040();
      goto LABEL_14;
    }
    sub_1CA364CE8(v8);
  }
  v9 = *v3;
  v10 = sub_1CA85BC78();
  v11 = -1 << *(_BYTE *)(v9 + 32);
  a2 = v10 & ~v11;
  if (((*(_QWORD *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    sub_1CA24EEC0(0, &qword_1EF94AC58);
    v12 = *(id *)(*(_QWORD *)(v9 + 48) + 8 * a2);
    v13 = sub_1CA85BC84();

    if ((v13 & 1) != 0)
    {
LABEL_13:
      sub_1CA85C2D8();
      __break(1u);
    }
    else
    {
      v14 = ~v11;
      while (1)
      {
        a2 = (a2 + 1) & v14;
        if (((*(_QWORD *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        v15 = *(id *)(*(_QWORD *)(v9 + 48) + 8 * a2);
        v16 = sub_1CA85BC84();

        if ((v16 & 1) != 0)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v17 = *v3;
  *(_QWORD *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v17 + 48) + 8 * a2) = a1;
  v18 = *(_QWORD *)(v17 + 16);
  v19 = __OFADD__(v18, 1);
  v20 = v18 + 1;
  if (v19)
    __break(1u);
  else
    *(_QWORD *)(v17 + 16) = v20;
}

uint64_t sub_1CA24731C(_QWORD *a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  _QWORD v25[2];
  uint64_t v26;

  v4 = v3;
  v8 = type metadata accessor for SongSource();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (_QWORD *)((char *)v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = *(_QWORD *)(*v4 + 16);
  v13 = *(_QWORD *)(*v4 + 24);
  v26 = v9;
  if (v13 > v12 && (a3 & 1) != 0)
    goto LABEL_12;
  if ((a3 & 1) != 0)
  {
    sub_1CA361938();
  }
  else
  {
    if (v13 > v12)
    {
      sub_1CA36304C();
      goto LABEL_12;
    }
    sub_1CA364CF4();
  }
  v14 = *v4;
  sub_1CA85C368();
  SongSource.hash(into:)();
  v15 = sub_1CA85C3B0();
  v16 = -1 << *(_BYTE *)(v14 + 32);
  a2 = v15 & ~v16;
  if (((*(_QWORD *)(v14 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v25[1] = v8;
    v17 = ~v16;
    v18 = *(_QWORD *)(v9 + 72);
    do
    {
      sub_1CA24EE38(*(_QWORD *)(v14 + 48) + v18 * a2, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for SongSource);
      v19 = _s11PhotosGraph10SongSourceV2eeoiySbAC_ACtFZ_0(v11, a1);
      sub_1CA24EDFC((uint64_t)v11);
      if ((v19 & 1) != 0)
        goto LABEL_15;
      a2 = (a2 + 1) & v17;
    }
    while (((*(_QWORD *)(v14 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  v20 = *v4;
  *(_QWORD *)(*v4 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  result = sub_1CA24EE7C((uint64_t)a1, *(_QWORD *)(v20 + 48) + *(_QWORD *)(v26 + 72) * a2, (uint64_t (*)(_QWORD))type metadata accessor for SongSource);
  v22 = *(_QWORD *)(v20 + 16);
  v23 = __OFADD__(v22, 1);
  v24 = v22 + 1;
  if (!v23)
  {
    *(_QWORD *)(v20 + 16) = v24;
    return result;
  }
  __break(1u);
LABEL_15:
  result = sub_1CA85C2D8();
  __break(1u);
  return result;
}

uint64_t sub_1CA2474F4(uint64_t result, unint64_t a2, char a3)
{
  uint64_t *v3;
  unsigned __int8 v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  v5 = result;
  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 <= v6 || (a3 & 1) == 0)
  {
    v8 = v6 + 1;
    if ((a3 & 1) != 0)
    {
      sub_1CA361EE8(v8);
    }
    else
    {
      if (v7 > v6)
      {
        result = (uint64_t)sub_1CA363060();
        goto LABEL_10;
      }
      sub_1CA365270(v8);
    }
    v9 = *v3;
    sub_1CA85C368();
    sub_1CA3F3CE0(v5);
    sub_1CA85B4B0();
    swift_bridgeObjectRelease();
    result = sub_1CA85C3B0();
    a2 = result & ~(-1 << *(_BYTE *)(v9 + 32));
    if (((*(_QWORD *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
      __asm { BR              X9 }
  }
LABEL_10:
  v10 = *v3;
  *(_QWORD *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_BYTE *)(*(_QWORD *)(v10 + 48) + a2) = v5;
  v11 = *(_QWORD *)(v10 + 16);
  v12 = __OFADD__(v11, 1);
  v13 = v11 + 1;
  if (v12)
  {
    __break(1u);
    JUMPOUT(0x1CA247BE8);
  }
  *(_QWORD *)(v10 + 16) = v13;
  return result;
}

uint64_t sub_1CA247CD4(uint64_t result, unint64_t a2, char a3)
{
  uint64_t *v3;
  unsigned __int8 v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  v5 = result;
  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 <= v6 || (a3 & 1) == 0)
  {
    v8 = v6 + 1;
    if ((a3 & 1) != 0)
    {
      sub_1CA361EFC(v8);
    }
    else
    {
      if (v7 > v6)
      {
        result = (uint64_t)sub_1CA36306C();
        goto LABEL_10;
      }
      sub_1CA365284(v8);
    }
    v9 = *v3;
    sub_1CA85C368();
    sub_1CA3CFD24(v5);
    sub_1CA85B4B0();
    swift_bridgeObjectRelease();
    result = sub_1CA85C3B0();
    a2 = result & ~(-1 << *(_BYTE *)(v9 + 32));
    if (((*(_QWORD *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
      __asm { BR              X9 }
  }
LABEL_10:
  v10 = *v3;
  *(_QWORD *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_BYTE *)(*(_QWORD *)(v10 + 48) + a2) = v5;
  v11 = *(_QWORD *)(v10 + 16);
  v12 = __OFADD__(v11, 1);
  v13 = v11 + 1;
  if (v12)
  {
    __break(1u);
    JUMPOUT(0x1CA24854CLL);
  }
  *(_QWORD *)(v10 + 16) = v13;
  return result;
}

void sub_1CA248660(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  char v13;
  uint64_t v14;
  id v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;

  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0)
    goto LABEL_14;
  v8 = v6 + 1;
  if ((a3 & 1) != 0)
  {
    sub_1CA3621FC(v8);
  }
  else
  {
    if (v7 > v6)
    {
      sub_1CA363200();
      goto LABEL_14;
    }
    sub_1CA36554C(v8);
  }
  v9 = *v3;
  v10 = sub_1CA85BC78();
  v11 = -1 << *(_BYTE *)(v9 + 32);
  a2 = v10 & ~v11;
  if (((*(_QWORD *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    sub_1CA24EEC0(0, (unint64_t *)&qword_1EF94AB50);
    v12 = *(id *)(*(_QWORD *)(v9 + 48) + 8 * a2);
    v13 = sub_1CA85BC84();

    if ((v13 & 1) != 0)
    {
LABEL_13:
      sub_1CA85C2D8();
      __break(1u);
    }
    else
    {
      v14 = ~v11;
      while (1)
      {
        a2 = (a2 + 1) & v14;
        if (((*(_QWORD *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        v15 = *(id *)(*(_QWORD *)(v9 + 48) + 8 * a2);
        v16 = sub_1CA85BC84();

        if ((v16 & 1) != 0)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v17 = *v3;
  *(_QWORD *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v17 + 48) + 8 * a2) = a1;
  v18 = *(_QWORD *)(v17 + 16);
  v19 = __OFADD__(v18, 1);
  v20 = v18 + 1;
  if (v19)
    __break(1u);
  else
    *(_QWORD *)(v17 + 16) = v20;
}

uint64_t sub_1CA2487E4(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  char *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, unint64_t, uint64_t);
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;

  v28 = a1;
  v6 = sub_1CA85B210();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(*v3 + 16);
  v12 = *(_QWORD *)(*v3 + 24);
  v27 = v3;
  if (v12 > v11 && (a3 & 1) != 0)
    goto LABEL_12;
  v13 = v11 + 1;
  if ((a3 & 1) != 0)
  {
    sub_1CA362208(v13);
  }
  else
  {
    if (v12 > v11)
    {
      sub_1CA36320C();
      goto LABEL_12;
    }
    sub_1CA365558(v13);
  }
  v14 = *v3;
  sub_1CA23CC98(&qword_1EF94AC08, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3D140], MEMORY[0x1E0D3D150]);
  v15 = sub_1CA85B498();
  v16 = -1 << *(_BYTE *)(v14 + 32);
  a2 = v15 & ~v16;
  if (((*(_QWORD *)(v14 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v17 = ~v16;
    v18 = *(_QWORD *)(v7 + 72);
    v19 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    do
    {
      v19(v10, *(_QWORD *)(v14 + 48) + v18 * a2, v6);
      sub_1CA23CC98(&qword_1EF94AC10, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3D140], MEMORY[0x1E0D3D158]);
      v20 = sub_1CA85B504();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
      if ((v20 & 1) != 0)
        goto LABEL_15;
      a2 = (a2 + 1) & v17;
    }
    while (((*(_QWORD *)(v14 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  v21 = v28;
  v22 = *v27;
  *(_QWORD *)(*v27 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t, __n128))(v7 + 32))(*(_QWORD *)(v22 + 48) + *(_QWORD *)(v7 + 72) * a2, v21, v6, v8);
  v24 = *(_QWORD *)(v22 + 16);
  v25 = __OFADD__(v24, 1);
  v26 = v24 + 1;
  if (!v25)
  {
    *(_QWORD *)(v22 + 16) = v26;
    return result;
  }
  __break(1u);
LABEL_15:
  result = sub_1CA85C2D8();
  __break(1u);
  return result;
}

uint64_t sub_1CA2489E8(uint64_t result, unint64_t a2, char a3)
{
  uint64_t *v3;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unsigned __int8 v11;
  uint64_t v12;
  unint64_t v13;
  unsigned __int8 v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;
  _BYTE v19[72];

  v5 = result;
  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0)
    goto LABEL_14;
  if ((a3 & 1) != 0)
  {
    sub_1CA362238();
  }
  else
  {
    if (v7 > v6)
    {
      result = (uint64_t)sub_1CA363450();
      goto LABEL_14;
    }
    sub_1CA365588();
  }
  v8 = *v3;
  sub_1CA85C368();
  sub_1CA381DDC((uint64_t)v19, v5);
  result = sub_1CA85C3B0();
  v9 = -1 << *(_BYTE *)(v8 + 32);
  a2 = result & ~v9;
  if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v10 = swift_bridgeObjectRetain();
    v11 = sub_1CA2A86F4(v10, v5);
    result = swift_bridgeObjectRelease();
    if ((v11 & 1) != 0)
    {
LABEL_13:
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94ABF0);
      result = sub_1CA85C2D8();
      __break(1u);
    }
    else
    {
      v12 = ~v9;
      while (1)
      {
        a2 = (a2 + 1) & v12;
        if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        v13 = swift_bridgeObjectRetain();
        v14 = sub_1CA2A86F4(v13, v5);
        result = swift_bridgeObjectRelease();
        if ((v14 & 1) != 0)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v15 = *v3;
  *(_QWORD *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v15 + 48) + 8 * a2) = v5;
  v16 = *(_QWORD *)(v15 + 16);
  v17 = __OFADD__(v16, 1);
  v18 = v16 + 1;
  if (v17)
    __break(1u);
  else
    *(_QWORD *)(v15 + 16) = v18;
  return result;
}

void sub_1CA248B74(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  char v13;
  uint64_t v14;
  id v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;

  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0)
    goto LABEL_14;
  v8 = v6 + 1;
  if ((a3 & 1) != 0)
  {
    sub_1CA3625FC(v8);
  }
  else
  {
    if (v7 > v6)
    {
      sub_1CA3635F8();
      goto LABEL_14;
    }
    sub_1CA365920(v8);
  }
  v9 = *v3;
  v10 = sub_1CA85BC78();
  v11 = -1 << *(_BYTE *)(v9 + 32);
  a2 = v10 & ~v11;
  if (((*(_QWORD *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    sub_1CA24EEC0(0, (unint64_t *)&qword_1EF94B000);
    v12 = *(id *)(*(_QWORD *)(v9 + 48) + 8 * a2);
    v13 = sub_1CA85BC84();

    if ((v13 & 1) != 0)
    {
LABEL_13:
      sub_1CA85C2D8();
      __break(1u);
    }
    else
    {
      v14 = ~v11;
      while (1)
      {
        a2 = (a2 + 1) & v14;
        if (((*(_QWORD *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        v15 = *(id *)(*(_QWORD *)(v9 + 48) + 8 * a2);
        v16 = sub_1CA85BC84();

        if ((v16 & 1) != 0)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v17 = *v3;
  *(_QWORD *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v17 + 48) + 8 * a2) = a1;
  v18 = *(_QWORD *)(v17 + 16);
  v19 = __OFADD__(v18, 1);
  v20 = v18 + 1;
  if (v19)
    __break(1u);
  else
    *(_QWORD *)(v17 + 16) = v20;
}

void sub_1CA248CF8(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  char v13;
  uint64_t v14;
  id v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;

  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0)
    goto LABEL_14;
  v8 = v6 + 1;
  if ((a3 & 1) != 0)
  {
    sub_1CA36222C(v8);
  }
  else
  {
    if (v7 > v6)
    {
      sub_1CA363444();
      goto LABEL_14;
    }
    sub_1CA36557C(v8);
  }
  v9 = *v3;
  v10 = sub_1CA85BC78();
  v11 = -1 << *(_BYTE *)(v9 + 32);
  a2 = v10 & ~v11;
  if (((*(_QWORD *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    sub_1CA24EEC0(0, (unint64_t *)&unk_1ED872E30);
    v12 = *(id *)(*(_QWORD *)(v9 + 48) + 8 * a2);
    v13 = sub_1CA85BC84();

    if ((v13 & 1) != 0)
    {
LABEL_13:
      sub_1CA85C2D8();
      __break(1u);
    }
    else
    {
      v14 = ~v11;
      while (1)
      {
        a2 = (a2 + 1) & v14;
        if (((*(_QWORD *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        v15 = *(id *)(*(_QWORD *)(v9 + 48) + 8 * a2);
        v16 = sub_1CA85BC84();

        if ((v16 & 1) != 0)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v17 = *v3;
  *(_QWORD *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v17 + 48) + 8 * a2) = a1;
  v18 = *(_QWORD *)(v17 + 16);
  v19 = __OFADD__(v18, 1);
  v20 = v18 + 1;
  if (v19)
    __break(1u);
  else
    *(_QWORD *)(v17 + 16) = v20;
}

void sub_1CA248E7C(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  char v13;
  uint64_t v14;
  id v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;

  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0)
    goto LABEL_14;
  v8 = v6 + 1;
  if ((a3 & 1) != 0)
  {
    sub_1CA362608(v8);
  }
  else
  {
    if (v7 > v6)
    {
      sub_1CA363604();
      goto LABEL_14;
    }
    sub_1CA36592C(v8);
  }
  v9 = *v3;
  v10 = sub_1CA85BC78();
  v11 = -1 << *(_BYTE *)(v9 + 32);
  a2 = v10 & ~v11;
  if (((*(_QWORD *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    sub_1CA24EEC0(0, &qword_1ED872E40);
    v12 = *(id *)(*(_QWORD *)(v9 + 48) + 8 * a2);
    v13 = sub_1CA85BC84();

    if ((v13 & 1) != 0)
    {
LABEL_13:
      sub_1CA85C2D8();
      __break(1u);
    }
    else
    {
      v14 = ~v11;
      while (1)
      {
        a2 = (a2 + 1) & v14;
        if (((*(_QWORD *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        v15 = *(id *)(*(_QWORD *)(v9 + 48) + 8 * a2);
        v16 = sub_1CA85BC84();

        if ((v16 & 1) != 0)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v17 = *v3;
  *(_QWORD *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v17 + 48) + 8 * a2) = a1;
  v18 = *(_QWORD *)(v17 + 16);
  v19 = __OFADD__(v18, 1);
  v20 = v18 + 1;
  if (v19)
    __break(1u);
  else
    *(_QWORD *)(v17 + 16) = v20;
}

void sub_1CA249000(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  char v13;
  uint64_t v14;
  id v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;

  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0)
    goto LABEL_14;
  v8 = v6 + 1;
  if ((a3 & 1) != 0)
  {
    sub_1CA362614(v8);
  }
  else
  {
    if (v7 > v6)
    {
      sub_1CA363610();
      goto LABEL_14;
    }
    sub_1CA365938(v8);
  }
  v9 = *v3;
  v10 = sub_1CA85BC78();
  v11 = -1 << *(_BYTE *)(v9 + 32);
  a2 = v10 & ~v11;
  if (((*(_QWORD *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    sub_1CA24EEC0(0, (unint64_t *)&qword_1ED8723C0);
    v12 = *(id *)(*(_QWORD *)(v9 + 48) + 8 * a2);
    v13 = sub_1CA85BC84();

    if ((v13 & 1) != 0)
    {
LABEL_13:
      sub_1CA85C2D8();
      __break(1u);
    }
    else
    {
      v14 = ~v11;
      while (1)
      {
        a2 = (a2 + 1) & v14;
        if (((*(_QWORD *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        v15 = *(id *)(*(_QWORD *)(v9 + 48) + 8 * a2);
        v16 = sub_1CA85BC84();

        if ((v16 & 1) != 0)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v17 = *v3;
  *(_QWORD *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v17 + 48) + 8 * a2) = a1;
  v18 = *(_QWORD *)(v17 + 16);
  v19 = __OFADD__(v18, 1);
  v20 = v18 + 1;
  if (v19)
    __break(1u);
  else
    *(_QWORD *)(v17 + 16) = v20;
}

_QWORD *sub_1CA249184(_QWORD *result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  int64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  _QWORD *v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  int64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int64_t v30;
  unint64_t v31;

  v4 = a4;
  v6 = a2;
  v7 = result;
  if ((a4 & 0xC000000000000001) == 0)
  {
    v10 = 0;
    v20 = -1 << *(_BYTE *)(a4 + 32);
    v8 = a4 + 56;
    v9 = ~v20;
    v21 = -v20;
    if (v21 < 64)
      v22 = ~(-1 << v21);
    else
      v22 = -1;
    v11 = v22 & *(_QWORD *)(a4 + 56);
    v24 = result;
    if (a2)
      goto LABEL_3;
LABEL_36:
    v12 = 0;
    goto LABEL_46;
  }
  sub_1CA85BDC8();
  type metadata accessor for PGStoryPromptSuggestionQuestion();
  sub_1CA23CC98(&qword_1EF94ACF8, (uint64_t (*)(uint64_t))type metadata accessor for PGStoryPromptSuggestionQuestion, MEMORY[0x1E0DEFCF8]);
  result = (_QWORD *)sub_1CA85B9CC();
  v4 = v27;
  v8 = v28;
  v9 = v29;
  v10 = v30;
  v11 = v31;
  v24 = v7;
  if (!v6)
    goto LABEL_36;
LABEL_3:
  if (!a3)
  {
    v12 = 0;
    goto LABEL_46;
  }
  if (a3 < 0)
    goto LABEL_48;
  v12 = 0;
  v25 = (unint64_t)(v9 + 64) >> 6;
  v23 = v9;
  while (1)
  {
    if (v4 < 0)
    {
      if (!sub_1CA85BE34())
        goto LABEL_45;
      type metadata accessor for PGStoryPromptSuggestionQuestion();
      swift_unknownObjectRetain();
      swift_dynamicCast();
      v15 = v26;
      result = (_QWORD *)swift_unknownObjectRelease();
      if (!v26)
        goto LABEL_45;
      goto LABEL_8;
    }
    if (v11)
    {
      v13 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v14 = v13 | (v10 << 6);
      goto LABEL_7;
    }
    v16 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
LABEL_48:
      __break(1u);
      return result;
    }
    if (v16 >= v25)
    {
      v11 = 0;
      goto LABEL_45;
    }
    v17 = *(_QWORD *)(v8 + 8 * v16);
    if (v17)
      goto LABEL_23;
    v18 = v10 + 2;
    if (v10 + 2 >= v25)
    {
      v11 = 0;
      ++v10;
      goto LABEL_45;
    }
    v17 = *(_QWORD *)(v8 + 8 * v18);
    if (!v17)
    {
      if (v10 + 3 >= v25)
        goto LABEL_42;
      v17 = *(_QWORD *)(v8 + 8 * (v10 + 3));
      if (v17)
      {
        v16 = v10 + 3;
        goto LABEL_23;
      }
      v18 = v10 + 4;
      if (v10 + 4 >= v25)
      {
        v11 = 0;
        v10 += 3;
        goto LABEL_45;
      }
      v17 = *(_QWORD *)(v8 + 8 * v18);
      if (!v17)
        break;
    }
    v16 = v18;
LABEL_23:
    v11 = (v17 - 1) & v17;
    v14 = __clz(__rbit64(v17)) + (v16 << 6);
    v10 = v16;
LABEL_7:
    result = *(id *)(*(_QWORD *)(v4 + 48) + 8 * v14);
    v15 = result;
    if (!result)
      goto LABEL_45;
LABEL_8:
    ++v12;
    *v6++ = v15;
    if (v12 == a3)
    {
      v12 = a3;
LABEL_45:
      v9 = v23;
      goto LABEL_46;
    }
  }
  v16 = v10 + 5;
  if (v10 + 5 >= v25)
  {
LABEL_42:
    v11 = 0;
    v10 = v18;
    goto LABEL_45;
  }
  v17 = *(_QWORD *)(v8 + 8 * v16);
  if (v17)
    goto LABEL_23;
  v19 = v10 + 6;
  while (v25 != v19)
  {
    v17 = *(_QWORD *)(v8 + 8 * v19++);
    if (v17)
    {
      v16 = v19 - 1;
      goto LABEL_23;
    }
  }
  v11 = 0;
  v10 = v25 - 1;
  v9 = v23;
LABEL_46:
  *v24 = v4;
  v24[1] = v8;
  v24[2] = v9;
  v24[3] = v10;
  v24[4] = v11;
  return (_QWORD *)v12;
}

uint64_t sub_1CA249484(uint64_t result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  _QWORD *v20;
  uint64_t v21;

  v5 = (_QWORD *)result;
  v6 = a4 + 56;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 56);
  if (!a2)
  {
    v12 = 0;
    v10 = 0;
LABEL_38:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    v20 = (_QWORD *)(*(_QWORD *)(a4 + 48) + 16 * v16);
    v21 = v20[1];
    *v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 2;
    result = swift_bridgeObjectRetain();
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
      break;
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    v9 = 0;
    v12 = v17;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
    goto LABEL_14;
  v19 = v17 + 2;
  if (v17 + 2 >= v14)
    goto LABEL_33;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
    goto LABEL_17;
  v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    v9 = 0;
    v12 = v17 + 2;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    v17 = v12;
    goto LABEL_18;
  }
  v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    v9 = 0;
LABEL_37:
    v10 = v13;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    v17 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v17 >= v14)
    {
      v9 = 0;
      v12 = v14 - 1;
      goto LABEL_37;
    }
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v19;
    if (v18)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1CA249680(uint64_t result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  int64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  int64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int64_t v30;
  unint64_t v31;

  v4 = a4;
  v6 = a2;
  v7 = (_QWORD *)result;
  if ((a4 & 0xC000000000000001) == 0)
  {
    v10 = 0;
    v20 = -1 << *(_BYTE *)(a4 + 32);
    v8 = a4 + 56;
    v9 = ~v20;
    v21 = -v20;
    if (v21 < 64)
      v22 = ~(-1 << v21);
    else
      v22 = -1;
    v11 = v22 & *(_QWORD *)(a4 + 56);
    v24 = (_QWORD *)result;
    if (a2)
      goto LABEL_3;
LABEL_36:
    v12 = 0;
    goto LABEL_46;
  }
  sub_1CA85BDC8();
  type metadata accessor for ImportantEntitiesGraphInferenceMoment();
  sub_1CA23CC98((unint64_t *)&unk_1EF94AAE8, (uint64_t (*)(uint64_t))type metadata accessor for ImportantEntitiesGraphInferenceMoment, (uint64_t)&unk_1CA8DE740);
  result = sub_1CA85B9CC();
  v4 = v27;
  v8 = v28;
  v9 = v29;
  v10 = v30;
  v11 = v31;
  v24 = v7;
  if (!v6)
    goto LABEL_36;
LABEL_3:
  if (!a3)
  {
    v12 = 0;
    goto LABEL_46;
  }
  if (a3 < 0)
    goto LABEL_48;
  v12 = 0;
  v25 = (unint64_t)(v9 + 64) >> 6;
  v23 = v9;
  while (1)
  {
    if (v4 < 0)
    {
      if (!sub_1CA85BE34())
        goto LABEL_45;
      type metadata accessor for ImportantEntitiesGraphInferenceMoment();
      swift_unknownObjectRetain();
      swift_dynamicCast();
      v15 = v26;
      result = swift_unknownObjectRelease();
      if (!v26)
        goto LABEL_45;
      goto LABEL_8;
    }
    if (v11)
    {
      v13 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v14 = v13 | (v10 << 6);
      goto LABEL_7;
    }
    v16 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
LABEL_48:
      __break(1u);
      return result;
    }
    if (v16 >= v25)
    {
      v11 = 0;
      goto LABEL_45;
    }
    v17 = *(_QWORD *)(v8 + 8 * v16);
    if (v17)
      goto LABEL_23;
    v18 = v10 + 2;
    if (v10 + 2 >= v25)
    {
      v11 = 0;
      ++v10;
      goto LABEL_45;
    }
    v17 = *(_QWORD *)(v8 + 8 * v18);
    if (!v17)
    {
      if (v10 + 3 >= v25)
        goto LABEL_42;
      v17 = *(_QWORD *)(v8 + 8 * (v10 + 3));
      if (v17)
      {
        v16 = v10 + 3;
        goto LABEL_23;
      }
      v18 = v10 + 4;
      if (v10 + 4 >= v25)
      {
        v11 = 0;
        v10 += 3;
        goto LABEL_45;
      }
      v17 = *(_QWORD *)(v8 + 8 * v18);
      if (!v17)
        break;
    }
    v16 = v18;
LABEL_23:
    v11 = (v17 - 1) & v17;
    v14 = __clz(__rbit64(v17)) + (v16 << 6);
    v10 = v16;
LABEL_7:
    v15 = *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v14);
    result = swift_retain();
    if (!v15)
      goto LABEL_45;
LABEL_8:
    ++v12;
    *v6++ = v15;
    if (v12 == a3)
    {
      v12 = a3;
LABEL_45:
      v9 = v23;
      goto LABEL_46;
    }
  }
  v16 = v10 + 5;
  if (v10 + 5 >= v25)
  {
LABEL_42:
    v11 = 0;
    v10 = v18;
    goto LABEL_45;
  }
  v17 = *(_QWORD *)(v8 + 8 * v16);
  if (v17)
    goto LABEL_23;
  v19 = v10 + 6;
  while (v25 != v19)
  {
    v17 = *(_QWORD *)(v8 + 8 * v19++);
    if (v17)
    {
      v16 = v19 - 1;
      goto LABEL_23;
    }
  }
  v11 = 0;
  v10 = v25 - 1;
  v9 = v23;
LABEL_46:
  *v24 = v4;
  v24[1] = v8;
  v24[2] = v9;
  v24[3] = v10;
  v24[4] = v11;
  return v12;
}

void sub_1CA249980(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;
  uint64_t v28;
  uint64_t v29;
  int64_t v30;
  uint64_t v31;
  _QWORD *v32;
  int64_t v33;
  uint64_t v34;
  uint64_t v35;

  v8 = type metadata accessor for Song();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v30 - v13;
  v35 = a4;
  v17 = *(_QWORD *)(a4 + 56);
  v16 = a4 + 56;
  v15 = v17;
  v34 = v16;
  v18 = -1 << *(_BYTE *)(v16 - 24);
  if (-v18 < 64)
    v19 = ~(-1 << -(char)v18);
  else
    v19 = -1;
  v20 = v19 & v15;
  if (!a2)
  {
    v21 = 0;
LABEL_37:
    v29 = v34;
    *a1 = v35;
    a1[1] = v29;
    a1[2] = ~v18;
    a1[3] = v21;
    a1[4] = v20;
    return;
  }
  if (!a3)
  {
    v21 = 0;
    goto LABEL_37;
  }
  if (a3 < 0)
  {
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
  v31 = -1 << *(_BYTE *)(v16 - 24);
  v32 = a1;
  v21 = 0;
  v22 = 0;
  v33 = (unint64_t)(63 - v18) >> 6;
  v30 = v33 - 1;
  if (!v20)
    goto LABEL_9;
LABEL_8:
  v23 = __clz(__rbit64(v20));
  v20 &= v20 - 1;
  v24 = v23 | (v21 << 6);
  while (1)
  {
    ++v22;
    v28 = *(_QWORD *)(v9 + 72);
    sub_1CA24EE38(*(_QWORD *)(v35 + 48) + v28 * v24, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for Song);
    sub_1CA24EE7C((uint64_t)v11, (uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for Song);
    sub_1CA24EE7C((uint64_t)v14, a2, (uint64_t (*)(_QWORD))type metadata accessor for Song);
    if (v22 == a3)
      goto LABEL_36;
    a2 += v28;
    if (v20)
      goto LABEL_8;
LABEL_9:
    v25 = v21 + 1;
    if (__OFADD__(v21, 1))
    {
      __break(1u);
      goto LABEL_39;
    }
    if (v25 >= v33)
      goto LABEL_32;
    v26 = *(_QWORD *)(v34 + 8 * v25);
    if (!v26)
      break;
LABEL_18:
    v20 = (v26 - 1) & v26;
    v24 = __clz(__rbit64(v26)) + (v25 << 6);
    v21 = v25;
  }
  v21 += 2;
  if (v25 + 1 >= v33)
  {
    v20 = 0;
    v21 = v25;
    goto LABEL_36;
  }
  v26 = *(_QWORD *)(v34 + 8 * v21);
  if (v26)
    goto LABEL_14;
  v27 = v25 + 2;
  if (v25 + 2 >= v33)
    goto LABEL_32;
  v26 = *(_QWORD *)(v34 + 8 * v27);
  if (v26)
    goto LABEL_17;
  v21 = v25 + 3;
  if (v25 + 3 >= v33)
  {
    v20 = 0;
    v21 = v25 + 2;
    goto LABEL_36;
  }
  v26 = *(_QWORD *)(v34 + 8 * v21);
  if (v26)
  {
LABEL_14:
    v25 = v21;
    goto LABEL_18;
  }
  v27 = v25 + 4;
  if (v25 + 4 >= v33)
  {
LABEL_32:
    v20 = 0;
LABEL_36:
    v18 = v31;
    a1 = v32;
    goto LABEL_37;
  }
  v26 = *(_QWORD *)(v34 + 8 * v27);
  if (v26)
  {
LABEL_17:
    v25 = v27;
    goto LABEL_18;
  }
  while (1)
  {
    v25 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v25 >= v33)
    {
      v20 = 0;
      v21 = v30;
      goto LABEL_36;
    }
    v26 = *(_QWORD *)(v34 + 8 * v25);
    ++v27;
    if (v26)
      goto LABEL_18;
  }
LABEL_40:
  __break(1u);
}

uint64_t sub_1CA249C3C(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t result;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;
  uint64_t v29;
  void (*v30)(char *, char *, uint64_t);
  uint64_t v31;
  uint64_t v32;
  int64_t v33;
  uint64_t v34;
  _QWORD *v35;
  int64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v8 = sub_1CA85AE74();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x1E0C80A78](v10);
  v15 = (char *)&v32 - v14;
  v39 = a4;
  v18 = *(_QWORD *)(a4 + 64);
  v17 = a4 + 64;
  v16 = v18;
  v37 = v17;
  v19 = -1 << *(_BYTE *)(v17 - 32);
  if (-v19 < 64)
    v20 = ~(-1 << -(char)v19);
  else
    v20 = -1;
  v21 = v20 & v16;
  if (!a2)
  {
    v22 = 0;
    a3 = 0;
LABEL_38:
    v31 = v37;
    *a1 = v39;
    a1[1] = v31;
    a1[2] = ~v19;
    a1[3] = v22;
    a1[4] = v21;
    return a3;
  }
  if (!a3)
  {
    v22 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v34 = -1 << *(_BYTE *)(v17 - 32);
  v35 = a1;
  v22 = 0;
  v23 = 0;
  v36 = (unint64_t)(63 - v19) >> 6;
  v33 = v36 - 1;
  v38 = a3;
  if (!v21)
    goto LABEL_9;
LABEL_8:
  v24 = __clz(__rbit64(v21));
  v21 &= v21 - 1;
  v25 = v24 | (v22 << 6);
  while (1)
  {
    ++v23;
    v29 = *(_QWORD *)(v9 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v9 + 16))(v12, *(_QWORD *)(v39 + 48) + v29 * v25, v8);
    v30 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
    v30(v15, v12, v8);
    result = ((uint64_t (*)(uint64_t, char *, uint64_t))v30)(a2, v15, v8);
    a3 = v38;
    if (v23 == v38)
      goto LABEL_37;
    a2 += v29;
    if (v21)
      goto LABEL_8;
LABEL_9:
    v26 = v22 + 1;
    if (__OFADD__(v22, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v26 >= v36)
      goto LABEL_32;
    v27 = *(_QWORD *)(v37 + 8 * v26);
    if (!v27)
      break;
LABEL_18:
    v21 = (v27 - 1) & v27;
    v25 = __clz(__rbit64(v27)) + (v26 << 6);
    v22 = v26;
  }
  v22 += 2;
  if (v26 + 1 >= v36)
  {
    v21 = 0;
    v22 = v26;
    goto LABEL_36;
  }
  v27 = *(_QWORD *)(v37 + 8 * v22);
  if (v27)
    goto LABEL_14;
  v28 = v26 + 2;
  if (v26 + 2 >= v36)
    goto LABEL_32;
  v27 = *(_QWORD *)(v37 + 8 * v28);
  if (v27)
    goto LABEL_17;
  v22 = v26 + 3;
  if (v26 + 3 >= v36)
  {
    v21 = 0;
    v22 = v26 + 2;
    goto LABEL_36;
  }
  v27 = *(_QWORD *)(v37 + 8 * v22);
  if (v27)
  {
LABEL_14:
    v26 = v22;
    goto LABEL_18;
  }
  v28 = v26 + 4;
  if (v26 + 4 >= v36)
  {
LABEL_32:
    v21 = 0;
LABEL_36:
    a3 = v23;
LABEL_37:
    v19 = v34;
    a1 = v35;
    goto LABEL_38;
  }
  v27 = *(_QWORD *)(v37 + 8 * v28);
  if (v27)
  {
LABEL_17:
    v26 = v28;
    goto LABEL_18;
  }
  while (1)
  {
    v26 = v28 + 1;
    if (__OFADD__(v28, 1))
      break;
    if (v26 >= v36)
    {
      v21 = 0;
      v22 = v33;
      goto LABEL_36;
    }
    v27 = *(_QWORD *)(v37 + 8 * v26);
    ++v28;
    if (v27)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1CA249F04(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t result;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int64_t v31;
  uint64_t v32;
  _QWORD *v33;
  int64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF94ACB0);
  v36 = *(_QWORD *)(v8 - 8);
  v37 = v8;
  v9 = MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x1E0C80A78](v9);
  v14 = (char *)&v30 - v13;
  v15 = *(_QWORD *)(a4 + 64);
  v35 = a4 + 64;
  v16 = -1 << *(_BYTE *)(a4 + 32);
  if (-v16 < 64)
    v17 = ~(-1 << -(char)v16);
  else
    v17 = -1;
  v18 = v17 & v15;
  if (!a2)
  {
    v19 = 0;
    a3 = 0;
LABEL_39:
    v29 = v35;
    *a1 = a4;
    a1[1] = v29;
    a1[2] = ~v16;
    a1[3] = v19;
    a1[4] = v18;
    return a3;
  }
  if (!a3)
  {
    v19 = 0;
    goto LABEL_39;
  }
  if (a3 < 0)
    goto LABEL_41;
  v32 = -1 << *(_BYTE *)(a4 + 32);
  v33 = a1;
  v19 = 0;
  v20 = 0;
  v34 = (unint64_t)(63 - v16) >> 6;
  v31 = v34 - 1;
  v21 = a3;
  if (!v18)
    goto LABEL_9;
LABEL_8:
  v22 = __clz(__rbit64(v18));
  v18 &= v18 - 1;
  v23 = v22 | (v19 << 6);
  while (1)
  {
    ++v20;
    v27 = *(_QWORD *)(a4 + 48);
    v28 = sub_1CA85ACD0();
    (*(void (**)(char *, unint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(v11, v27 + *(_QWORD *)(*(_QWORD *)(v28 - 8) + 72) * v23, v28);
    *(_QWORD *)&v11[*(int *)(v37 + 48)] = *(_QWORD *)(*(_QWORD *)(a4 + 56) + 8 * v23);
    sub_1CA24EEF8((uint64_t)v11, (uint64_t)v14, (uint64_t *)&unk_1EF94ACB0);
    result = sub_1CA24EEF8((uint64_t)v14, a2, (uint64_t *)&unk_1EF94ACB0);
    if (v20 == v21)
    {
      a3 = v21;
      goto LABEL_38;
    }
    a2 += *(_QWORD *)(v36 + 72);
    if (v18)
      goto LABEL_8;
LABEL_9:
    v24 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v24 >= v34)
      goto LABEL_33;
    v25 = *(_QWORD *)(v35 + 8 * v24);
    if (!v25)
    {
      v19 += 2;
      if (v24 + 1 >= v34)
      {
        v18 = 0;
        v19 = v24;
      }
      else
      {
        v25 = *(_QWORD *)(v35 + 8 * v19);
        if (v25)
          goto LABEL_14;
        v26 = v24 + 2;
        if (v24 + 2 >= v34)
          goto LABEL_33;
        v25 = *(_QWORD *)(v35 + 8 * v26);
        if (v25)
        {
LABEL_17:
          v24 = v26;
          goto LABEL_18;
        }
        v19 = v24 + 3;
        if (v24 + 3 < v34)
        {
          v25 = *(_QWORD *)(v35 + 8 * v19);
          if (v25)
          {
LABEL_14:
            v24 = v19;
            goto LABEL_18;
          }
          v26 = v24 + 4;
          if (v24 + 4 >= v34)
          {
LABEL_33:
            v18 = 0;
            goto LABEL_37;
          }
          v25 = *(_QWORD *)(v35 + 8 * v26);
          if (!v25)
          {
            while (1)
            {
              v24 = v26 + 1;
              if (__OFADD__(v26, 1))
                goto LABEL_42;
              if (v24 >= v34)
              {
                v18 = 0;
                v19 = v31;
                goto LABEL_37;
              }
              v25 = *(_QWORD *)(v35 + 8 * v24);
              ++v26;
              if (v25)
                goto LABEL_18;
            }
          }
          goto LABEL_17;
        }
        v18 = 0;
        v19 = v24 + 2;
      }
LABEL_37:
      a3 = v20;
LABEL_38:
      v16 = v32;
      a1 = v33;
      goto LABEL_39;
    }
LABEL_18:
    v18 = (v25 - 1) & v25;
    v23 = __clz(__rbit64(v25)) + (v24 << 6);
    v19 = v24;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_1CA24A1F8(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t result;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int64_t v31;
  uint64_t v32;
  _QWORD *v33;
  int64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94AC90);
  v36 = *(_QWORD *)(v8 - 8);
  v37 = v8;
  v9 = MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x1E0C80A78](v9);
  v14 = (char *)&v30 - v13;
  v15 = *(_QWORD *)(a4 + 64);
  v35 = a4 + 64;
  v16 = -1 << *(_BYTE *)(a4 + 32);
  if (-v16 < 64)
    v17 = ~(-1 << -(char)v16);
  else
    v17 = -1;
  v18 = v17 & v15;
  if (!a2)
  {
    v19 = 0;
    a3 = 0;
LABEL_39:
    v29 = v35;
    *a1 = a4;
    a1[1] = v29;
    a1[2] = ~v16;
    a1[3] = v19;
    a1[4] = v18;
    return a3;
  }
  if (!a3)
  {
    v19 = 0;
    goto LABEL_39;
  }
  if (a3 < 0)
    goto LABEL_41;
  v32 = -1 << *(_BYTE *)(a4 + 32);
  v33 = a1;
  v19 = 0;
  v20 = 0;
  v34 = (unint64_t)(63 - v16) >> 6;
  v31 = v34 - 1;
  v21 = a3;
  if (!v18)
    goto LABEL_9;
LABEL_8:
  v22 = __clz(__rbit64(v18));
  v18 &= v18 - 1;
  v23 = v22 | (v19 << 6);
  while (1)
  {
    ++v20;
    v27 = *(_QWORD *)(a4 + 48);
    v28 = sub_1CA85AEEC();
    (*(void (**)(char *, unint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(v11, v27 + *(_QWORD *)(*(_QWORD *)(v28 - 8) + 72) * v23, v28);
    *(_QWORD *)&v11[*(int *)(v37 + 48)] = *(_QWORD *)(*(_QWORD *)(a4 + 56) + 8 * v23);
    sub_1CA24EEF8((uint64_t)v11, (uint64_t)v14, &qword_1EF94AC90);
    result = sub_1CA24EEF8((uint64_t)v14, a2, &qword_1EF94AC90);
    if (v20 == v21)
    {
      a3 = v21;
      goto LABEL_38;
    }
    a2 += *(_QWORD *)(v36 + 72);
    if (v18)
      goto LABEL_8;
LABEL_9:
    v24 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v24 >= v34)
      goto LABEL_33;
    v25 = *(_QWORD *)(v35 + 8 * v24);
    if (!v25)
    {
      v19 += 2;
      if (v24 + 1 >= v34)
      {
        v18 = 0;
        v19 = v24;
      }
      else
      {
        v25 = *(_QWORD *)(v35 + 8 * v19);
        if (v25)
          goto LABEL_14;
        v26 = v24 + 2;
        if (v24 + 2 >= v34)
          goto LABEL_33;
        v25 = *(_QWORD *)(v35 + 8 * v26);
        if (v25)
        {
LABEL_17:
          v24 = v26;
          goto LABEL_18;
        }
        v19 = v24 + 3;
        if (v24 + 3 < v34)
        {
          v25 = *(_QWORD *)(v35 + 8 * v19);
          if (v25)
          {
LABEL_14:
            v24 = v19;
            goto LABEL_18;
          }
          v26 = v24 + 4;
          if (v24 + 4 >= v34)
          {
LABEL_33:
            v18 = 0;
            goto LABEL_37;
          }
          v25 = *(_QWORD *)(v35 + 8 * v26);
          if (!v25)
          {
            while (1)
            {
              v24 = v26 + 1;
              if (__OFADD__(v26, 1))
                goto LABEL_42;
              if (v24 >= v34)
              {
                v18 = 0;
                v19 = v31;
                goto LABEL_37;
              }
              v25 = *(_QWORD *)(v35 + 8 * v24);
              ++v26;
              if (v25)
                goto LABEL_18;
            }
          }
          goto LABEL_17;
        }
        v18 = 0;
        v19 = v24 + 2;
      }
LABEL_37:
      a3 = v20;
LABEL_38:
      v16 = v32;
      a1 = v33;
      goto LABEL_39;
    }
LABEL_18:
    v18 = (v25 - 1) & v25;
    v23 = __clz(__rbit64(v25)) + (v24 << 6);
    v19 = v24;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_1CA24A4EC(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  _QWORD *v20;
  uint64_t v21;
  int v22;

  v5 = (_QWORD *)result;
  v6 = a4 + 64;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 64);
  if (!a2)
  {
    v12 = 0;
    v10 = 0;
LABEL_38:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    v20 = (_QWORD *)(*(_QWORD *)(a4 + 48) + 16 * v16);
    v21 = v20[1];
    v22 = *(_DWORD *)(*(_QWORD *)(a4 + 56) + 4 * v16);
    *(_QWORD *)v11 = *v20;
    *(_QWORD *)(v11 + 8) = v21;
    *(_DWORD *)(v11 + 16) = v22;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 24;
    result = swift_bridgeObjectRetain();
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
      break;
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    v9 = 0;
    v12 = v17;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
    goto LABEL_14;
  v19 = v17 + 2;
  if (v17 + 2 >= v14)
    goto LABEL_33;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
    goto LABEL_17;
  v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    v9 = 0;
    v12 = v17 + 2;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    v17 = v12;
    goto LABEL_18;
  }
  v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    v9 = 0;
LABEL_37:
    v10 = v13;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    v17 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v17 >= v14)
    {
      v9 = 0;
      v12 = v14 - 1;
      goto LABEL_37;
    }
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v19;
    if (v18)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

_QWORD *sub_1CA24A6F0(_QWORD *result, _QWORD *a2, uint64_t a3, uint64_t a4, unint64_t *a5, uint64_t a6, unint64_t *a7)
{
  uint64_t v7;
  _QWORD *v9;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  id v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  _QWORD *v29;
  int64_t v30;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int64_t v36;
  unint64_t v37;

  v7 = a4;
  v9 = a2;
  v29 = result;
  if ((a4 & 0xC000000000000001) != 0)
  {
    sub_1CA85BDC8();
    sub_1CA24EEC0(0, a5);
    sub_1CA24E6C0(a7, a5);
    result = (_QWORD *)sub_1CA85B9CC();
    v7 = v33;
    v12 = v34;
    v13 = v35;
    v14 = v36;
    v15 = v37;
    if (v9)
      goto LABEL_3;
LABEL_36:
    v16 = 0;
    goto LABEL_38;
  }
  v14 = 0;
  v24 = -1 << *(_BYTE *)(a4 + 32);
  v12 = a4 + 56;
  v13 = ~v24;
  v25 = -v24;
  if (v25 < 64)
    v26 = ~(-1 << v25);
  else
    v26 = -1;
  v15 = v26 & *(_QWORD *)(a4 + 56);
  if (!a2)
    goto LABEL_36;
LABEL_3:
  if (!a3)
  {
    v16 = 0;
LABEL_38:
    v27 = v29;
LABEL_41:
    *v27 = v7;
    v27[1] = v12;
    v27[2] = v13;
    v27[3] = v14;
    v27[4] = v15;
    return (_QWORD *)v16;
  }
  if (a3 < 0)
    goto LABEL_48;
  v16 = 0;
  v30 = (unint64_t)(v13 + 64) >> 6;
  v28 = v13;
  while (1)
  {
    if (v7 < 0)
    {
      if (!sub_1CA85BE34())
        goto LABEL_40;
      sub_1CA24EEC0(0, a5);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      v19 = v32;
      result = (_QWORD *)swift_unknownObjectRelease();
      if (!v32)
        goto LABEL_40;
      goto LABEL_8;
    }
    if (v15)
    {
      v17 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v18 = v17 | (v14 << 6);
      goto LABEL_7;
    }
    v20 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v20 >= v30)
    {
      v15 = 0;
      goto LABEL_40;
    }
    v21 = *(_QWORD *)(v12 + 8 * v20);
    if (v21)
      goto LABEL_23;
    v22 = v14 + 2;
    if (v14 + 2 >= v30)
    {
      v15 = 0;
      ++v14;
      goto LABEL_40;
    }
    v21 = *(_QWORD *)(v12 + 8 * v22);
    if (!v21)
    {
      if (v14 + 3 >= v30)
        goto LABEL_44;
      v21 = *(_QWORD *)(v12 + 8 * (v14 + 3));
      if (v21)
      {
        v20 = v14 + 3;
        goto LABEL_23;
      }
      v22 = v14 + 4;
      if (v14 + 4 >= v30)
      {
        v15 = 0;
        v14 += 3;
        goto LABEL_40;
      }
      v21 = *(_QWORD *)(v12 + 8 * v22);
      if (!v21)
      {
        v20 = v14 + 5;
        if (v14 + 5 >= v30)
        {
LABEL_44:
          v15 = 0;
          v14 = v22;
          goto LABEL_40;
        }
        v21 = *(_QWORD *)(v12 + 8 * v20);
        if (!v21)
        {
          v23 = v14 + 6;
          while (v30 != v23)
          {
            v21 = *(_QWORD *)(v12 + 8 * v23++);
            if (v21)
            {
              v20 = v23 - 1;
              goto LABEL_23;
            }
          }
          v15 = 0;
          v14 = v30 - 1;
          goto LABEL_40;
        }
        goto LABEL_23;
      }
    }
    v20 = v22;
LABEL_23:
    v15 = (v21 - 1) & v21;
    v18 = __clz(__rbit64(v21)) + (v20 << 6);
    v14 = v20;
LABEL_7:
    result = *(id *)(*(_QWORD *)(v7 + 48) + 8 * v18);
    v19 = result;
    if (!result)
      goto LABEL_40;
LABEL_8:
    ++v16;
    *v9++ = v19;
    if (v16 == a3)
    {
      v16 = a3;
LABEL_40:
      v13 = v28;
      v27 = v29;
      goto LABEL_41;
    }
  }
  __break(1u);
LABEL_48:
  __break(1u);
  return result;
}

_QWORD *sub_1CA24A9E8(_QWORD *result, _BYTE *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;

  v4 = a4 + 56;
  v5 = -1;
  v6 = -1 << *(_BYTE *)(a4 + 32);
  if (-v6 < 64)
    v5 = ~(-1 << -(char)v6);
  v7 = v5 & *(_QWORD *)(a4 + 56);
  if (!a2)
  {
    v8 = 0;
    a3 = 0;
LABEL_35:
    *result = a4;
    result[1] = v4;
    result[2] = ~v6;
    result[3] = v8;
    result[4] = v7;
    return (_QWORD *)a3;
  }
  if (!a3)
  {
    v8 = 0;
    goto LABEL_35;
  }
  if (a3 < 0)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  v8 = 0;
  v9 = 0;
  v10 = (unint64_t)(63 - v6) >> 6;
  while (v7)
  {
    v11 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    v12 = v11 | (v8 << 6);
LABEL_8:
    ++v9;
    *a2++ = *(_BYTE *)(*(_QWORD *)(a4 + 48) + v12);
    if (v9 == a3)
      goto LABEL_35;
  }
  v13 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    goto LABEL_37;
  }
  if (v13 >= v10)
    goto LABEL_30;
  v14 = *(_QWORD *)(v4 + 8 * v13);
  if (v14)
    goto LABEL_19;
  v8 += 2;
  if (v13 + 1 >= v10)
  {
    v7 = 0;
    v8 = v13;
    goto LABEL_34;
  }
  v14 = *(_QWORD *)(v4 + 8 * v8);
  if (v14)
  {
LABEL_15:
    v13 = v8;
LABEL_19:
    v16 = __clz(__rbit64(v14));
    v7 = (v14 - 1) & v14;
    v12 = v16 + (v13 << 6);
    v8 = v13;
    goto LABEL_8;
  }
  v15 = v13 + 2;
  if (v13 + 2 >= v10)
    goto LABEL_30;
  v14 = *(_QWORD *)(v4 + 8 * v15);
  if (v14)
  {
LABEL_18:
    v13 = v15;
    goto LABEL_19;
  }
  v8 = v13 + 3;
  if (v13 + 3 >= v10)
  {
    v7 = 0;
    v8 = v13 + 2;
    goto LABEL_34;
  }
  v14 = *(_QWORD *)(v4 + 8 * v8);
  if (v14)
    goto LABEL_15;
  v15 = v13 + 4;
  if (v13 + 4 >= v10)
  {
LABEL_30:
    v7 = 0;
LABEL_34:
    a3 = v9;
    goto LABEL_35;
  }
  v14 = *(_QWORD *)(v4 + 8 * v15);
  if (v14)
    goto LABEL_18;
  while (1)
  {
    v13 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v13 >= v10)
    {
      v7 = 0;
      v8 = v10 - 1;
      goto LABEL_34;
    }
    v14 = *(_QWORD *)(v4 + 8 * v13);
    ++v15;
    if (v14)
      goto LABEL_19;
  }
LABEL_38:
  __break(1u);
  return result;
}

void sub_1CA24AB7C(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;
  uint64_t v28;
  uint64_t v29;
  int64_t v30;
  uint64_t v31;
  _QWORD *v32;
  int64_t v33;
  uint64_t v34;
  uint64_t v35;

  v8 = type metadata accessor for Song();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v30 - v13;
  v35 = a4;
  v17 = *(_QWORD *)(a4 + 64);
  v16 = a4 + 64;
  v15 = v17;
  v34 = v16;
  v18 = -1 << *(_BYTE *)(v16 - 32);
  if (-v18 < 64)
    v19 = ~(-1 << -(char)v18);
  else
    v19 = -1;
  v20 = v19 & v15;
  if (!a2)
  {
    v21 = 0;
LABEL_37:
    v29 = v34;
    *a1 = v35;
    a1[1] = v29;
    a1[2] = ~v18;
    a1[3] = v21;
    a1[4] = v20;
    return;
  }
  if (!a3)
  {
    v21 = 0;
    goto LABEL_37;
  }
  if (a3 < 0)
  {
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
  v31 = -1 << *(_BYTE *)(v16 - 32);
  v32 = a1;
  v21 = 0;
  v22 = 0;
  v33 = (unint64_t)(63 - v18) >> 6;
  v30 = v33 - 1;
  if (!v20)
    goto LABEL_9;
LABEL_8:
  v23 = __clz(__rbit64(v20));
  v20 &= v20 - 1;
  v24 = v23 | (v21 << 6);
  while (1)
  {
    ++v22;
    v28 = *(_QWORD *)(v9 + 72);
    sub_1CA24EE38(*(_QWORD *)(v35 + 48) + v28 * v24, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for Song);
    sub_1CA24EE7C((uint64_t)v11, (uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for Song);
    sub_1CA24EE7C((uint64_t)v14, a2, (uint64_t (*)(_QWORD))type metadata accessor for Song);
    if (v22 == a3)
      goto LABEL_36;
    a2 += v28;
    if (v20)
      goto LABEL_8;
LABEL_9:
    v25 = v21 + 1;
    if (__OFADD__(v21, 1))
    {
      __break(1u);
      goto LABEL_39;
    }
    if (v25 >= v33)
      goto LABEL_32;
    v26 = *(_QWORD *)(v34 + 8 * v25);
    if (!v26)
      break;
LABEL_18:
    v20 = (v26 - 1) & v26;
    v24 = __clz(__rbit64(v26)) + (v25 << 6);
    v21 = v25;
  }
  v21 += 2;
  if (v25 + 1 >= v33)
  {
    v20 = 0;
    v21 = v25;
    goto LABEL_36;
  }
  v26 = *(_QWORD *)(v34 + 8 * v21);
  if (v26)
    goto LABEL_14;
  v27 = v25 + 2;
  if (v25 + 2 >= v33)
    goto LABEL_32;
  v26 = *(_QWORD *)(v34 + 8 * v27);
  if (v26)
    goto LABEL_17;
  v21 = v25 + 3;
  if (v25 + 3 >= v33)
  {
    v20 = 0;
    v21 = v25 + 2;
    goto LABEL_36;
  }
  v26 = *(_QWORD *)(v34 + 8 * v21);
  if (v26)
  {
LABEL_14:
    v25 = v21;
    goto LABEL_18;
  }
  v27 = v25 + 4;
  if (v25 + 4 >= v33)
  {
LABEL_32:
    v20 = 0;
LABEL_36:
    v18 = v31;
    a1 = v32;
    goto LABEL_37;
  }
  v26 = *(_QWORD *)(v34 + 8 * v27);
  if (v26)
  {
LABEL_17:
    v25 = v27;
    goto LABEL_18;
  }
  while (1)
  {
    v25 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v25 >= v33)
    {
      v20 = 0;
      v21 = v30;
      goto LABEL_36;
    }
    v26 = *(_QWORD *)(v34 + 8 * v25);
    ++v27;
    if (v26)
      goto LABEL_18;
  }
LABEL_40:
  __break(1u);
}

uint64_t sub_1CA24AE38(uint64_t result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  _QWORD *v20;
  uint64_t v21;

  v5 = (_QWORD *)result;
  v6 = a4 + 64;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 64);
  if (!a2)
  {
    v12 = 0;
    v10 = 0;
LABEL_38:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    v20 = (_QWORD *)(*(_QWORD *)(a4 + 56) + 16 * v16);
    v21 = v20[1];
    *v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 2;
    result = swift_bridgeObjectRetain();
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
      break;
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    v9 = 0;
    v12 = v17;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
    goto LABEL_14;
  v19 = v17 + 2;
  if (v17 + 2 >= v14)
    goto LABEL_33;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
    goto LABEL_17;
  v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    v9 = 0;
    v12 = v17 + 2;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    v17 = v12;
    goto LABEL_18;
  }
  v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    v9 = 0;
LABEL_37:
    v10 = v13;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    v17 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v17 >= v14)
    {
      v9 = 0;
      v12 = v14 - 1;
      goto LABEL_37;
    }
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v19;
    if (v18)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1CA24B034(uint64_t result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;

  v5 = (_QWORD *)result;
  v6 = a4 + 64;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 64);
  if (!a2)
  {
    v12 = 0;
    v10 = 0;
LABEL_38:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    *v11 = *(_QWORD *)(*(_QWORD *)(a4 + 56) + 8 * v16);
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    ++v11;
    result = swift_bridgeObjectRetain();
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
      break;
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    v9 = 0;
    v12 = v17;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
    goto LABEL_14;
  v19 = v17 + 2;
  if (v17 + 2 >= v14)
    goto LABEL_33;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
    goto LABEL_17;
  v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    v9 = 0;
    v12 = v17 + 2;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    v17 = v12;
    goto LABEL_18;
  }
  v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    v9 = 0;
LABEL_37:
    v10 = v13;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    v17 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v17 >= v14)
    {
      v9 = 0;
      v12 = v14 - 1;
      goto LABEL_37;
    }
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v19;
    if (v18)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

void sub_1CA24B22C(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int64_t v30;
  uint64_t v31;
  _QWORD *v32;
  int64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED871C40);
  v35 = *(_QWORD *)(v8 - 8);
  v36 = v8;
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v29 - v12;
  v14 = *(_QWORD *)(a4 + 64);
  v34 = a4 + 64;
  v15 = -1 << *(_BYTE *)(a4 + 32);
  if (-v15 < 64)
    v16 = ~(-1 << -(char)v15);
  else
    v16 = -1;
  v17 = v16 & v14;
  if (!a2)
  {
    v18 = 0;
LABEL_38:
    v28 = v34;
    *a1 = a4;
    a1[1] = v28;
    a1[2] = ~v15;
    a1[3] = v18;
    a1[4] = v17;
    return;
  }
  if (!a3)
  {
    v18 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v31 = -1 << *(_BYTE *)(a4 + 32);
  v32 = a1;
  v18 = 0;
  v19 = 0;
  v33 = (unint64_t)(63 - v15) >> 6;
  v30 = v33 - 1;
  v20 = a3;
  if (!v17)
    goto LABEL_9;
LABEL_8:
  v21 = __clz(__rbit64(v17));
  v17 &= v17 - 1;
  v22 = v21 | (v18 << 6);
  while (1)
  {
    ++v19;
    v26 = *(_QWORD *)(a4 + 48);
    v27 = type metadata accessor for Song();
    sub_1CA24EE38(v26 + *(_QWORD *)(*(_QWORD *)(v27 - 8) + 72) * v22, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for Song);
    *(_DWORD *)&v10[*(int *)(v36 + 48)] = *(_DWORD *)(*(_QWORD *)(a4 + 56) + 4 * v22);
    sub_1CA24EEF8((uint64_t)v10, (uint64_t)v13, &qword_1ED871C40);
    sub_1CA24EEF8((uint64_t)v13, a2, &qword_1ED871C40);
    if (v19 == v20)
      goto LABEL_37;
    a2 += *(_QWORD *)(v35 + 72);
    if (v17)
      goto LABEL_8;
LABEL_9:
    v23 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v23 >= v33)
      goto LABEL_33;
    v24 = *(_QWORD *)(v34 + 8 * v23);
    if (!v24)
      break;
LABEL_18:
    v17 = (v24 - 1) & v24;
    v22 = __clz(__rbit64(v24)) + (v23 << 6);
    v18 = v23;
  }
  v18 += 2;
  if (v23 + 1 >= v33)
  {
    v17 = 0;
    v18 = v23;
    goto LABEL_37;
  }
  v24 = *(_QWORD *)(v34 + 8 * v18);
  if (v24)
    goto LABEL_14;
  v25 = v23 + 2;
  if (v23 + 2 >= v33)
    goto LABEL_33;
  v24 = *(_QWORD *)(v34 + 8 * v25);
  if (v24)
    goto LABEL_17;
  v18 = v23 + 3;
  if (v23 + 3 >= v33)
  {
    v17 = 0;
    v18 = v23 + 2;
    goto LABEL_37;
  }
  v24 = *(_QWORD *)(v34 + 8 * v18);
  if (v24)
  {
LABEL_14:
    v23 = v18;
    goto LABEL_18;
  }
  v25 = v23 + 4;
  if (v23 + 4 >= v33)
  {
LABEL_33:
    v17 = 0;
LABEL_37:
    v15 = v31;
    a1 = v32;
    goto LABEL_38;
  }
  v24 = *(_QWORD *)(v34 + 8 * v25);
  if (v24)
  {
LABEL_17:
    v23 = v25;
    goto LABEL_18;
  }
  while (1)
  {
    v23 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v23 >= v33)
    {
      v17 = 0;
      v18 = v30;
      goto LABEL_37;
    }
    v24 = *(_QWORD *)(v34 + 8 * v23);
    ++v25;
    if (v24)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
}

_QWORD *sub_1CA24B520(_QWORD *result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  id v23;

  v5 = result;
  v6 = a4 + 64;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 64);
  if (!a2)
  {
    v12 = 0;
    v10 = 0;
LABEL_38:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return (_QWORD *)v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    v20 = 8 * v16;
    v21 = *(void **)(*(_QWORD *)(a4 + 48) + v20);
    ++v13;
    v22 = *(_QWORD *)(*(_QWORD *)(a4 + 56) + v20);
    *v11 = v21;
    v11[1] = v22;
    if (v13 == v10)
    {
      v23 = v21;
      goto LABEL_38;
    }
    v11 += 2;
    result = v21;
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
      break;
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    v9 = 0;
    v12 = v17;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
    goto LABEL_14;
  v19 = v17 + 2;
  if (v17 + 2 >= v14)
    goto LABEL_33;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
    goto LABEL_17;
  v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    v9 = 0;
    v12 = v17 + 2;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    v17 = v12;
    goto LABEL_18;
  }
  v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    v9 = 0;
LABEL_37:
    v10 = v13;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    v17 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v17 >= v14)
    {
      v9 = 0;
      v12 = v14 - 1;
      goto LABEL_37;
    }
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v19;
    if (v18)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1CA24B724(uint64_t result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;

  v5 = (_QWORD *)result;
  v6 = a4 + 56;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 56);
  if (!a2)
  {
    v12 = 0;
    v10 = 0;
LABEL_38:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    *v11 = *(_QWORD *)(*(_QWORD *)(a4 + 48) + 8 * v16);
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    ++v11;
    result = swift_bridgeObjectRetain();
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
      break;
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    v9 = 0;
    v12 = v17;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
    goto LABEL_14;
  v19 = v17 + 2;
  if (v17 + 2 >= v14)
    goto LABEL_33;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
    goto LABEL_17;
  v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    v9 = 0;
    v12 = v17 + 2;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    v17 = v12;
    goto LABEL_18;
  }
  v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    v9 = 0;
LABEL_37:
    v10 = v13;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    v17 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v17 >= v14)
    {
      v9 = 0;
      v12 = v14 - 1;
      goto LABEL_37;
    }
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v19;
    if (v18)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

void sub_1CA24B91C(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  int64_t v27;
  unint64_t v28;
  int64_t v29;
  uint64_t v30;
  uint64_t v31;
  int64_t v32;
  uint64_t v33;
  _QWORD *v34;
  int64_t v35;
  uint64_t v36;
  uint64_t v37;

  v10 = a5(0);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v32 - v15;
  v37 = a4;
  v19 = *(_QWORD *)(a4 + 64);
  v18 = a4 + 64;
  v17 = v19;
  v36 = v18;
  v20 = -1 << *(_BYTE *)(v18 - 32);
  if (-v20 < 64)
    v21 = ~(-1 << -(char)v20);
  else
    v21 = -1;
  v22 = v21 & v17;
  if (!a2)
  {
    v23 = 0;
LABEL_37:
    v31 = v36;
    *a1 = v37;
    a1[1] = v31;
    a1[2] = ~v20;
    a1[3] = v23;
    a1[4] = v22;
    return;
  }
  if (!a3)
  {
    v23 = 0;
    goto LABEL_37;
  }
  if (a3 < 0)
  {
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
  v33 = -1 << *(_BYTE *)(v18 - 32);
  v34 = a1;
  v23 = 0;
  v24 = 0;
  v35 = (unint64_t)(63 - v20) >> 6;
  v32 = v35 - 1;
  if (!v22)
    goto LABEL_9;
LABEL_8:
  v25 = __clz(__rbit64(v22));
  v22 &= v22 - 1;
  v26 = v25 | (v23 << 6);
  while (1)
  {
    ++v24;
    v30 = *(_QWORD *)(v11 + 72);
    sub_1CA24EE38(*(_QWORD *)(v37 + 56) + v30 * v26, (uint64_t)v13, a5);
    sub_1CA24EE7C((uint64_t)v13, (uint64_t)v16, a5);
    sub_1CA24EE7C((uint64_t)v16, a2, a5);
    if (v24 == a3)
      goto LABEL_36;
    a2 += v30;
    if (v22)
      goto LABEL_8;
LABEL_9:
    v27 = v23 + 1;
    if (__OFADD__(v23, 1))
    {
      __break(1u);
      goto LABEL_39;
    }
    if (v27 >= v35)
      goto LABEL_32;
    v28 = *(_QWORD *)(v36 + 8 * v27);
    if (!v28)
      break;
LABEL_18:
    v22 = (v28 - 1) & v28;
    v26 = __clz(__rbit64(v28)) + (v27 << 6);
    v23 = v27;
  }
  v23 += 2;
  if (v27 + 1 >= v35)
  {
    v22 = 0;
    v23 = v27;
    goto LABEL_36;
  }
  v28 = *(_QWORD *)(v36 + 8 * v23);
  if (v28)
    goto LABEL_14;
  v29 = v27 + 2;
  if (v27 + 2 >= v35)
    goto LABEL_32;
  v28 = *(_QWORD *)(v36 + 8 * v29);
  if (v28)
    goto LABEL_17;
  v23 = v27 + 3;
  if (v27 + 3 >= v35)
  {
    v22 = 0;
    v23 = v27 + 2;
    goto LABEL_36;
  }
  v28 = *(_QWORD *)(v36 + 8 * v23);
  if (v28)
  {
LABEL_14:
    v27 = v23;
    goto LABEL_18;
  }
  v29 = v27 + 4;
  if (v27 + 4 >= v35)
  {
LABEL_32:
    v22 = 0;
LABEL_36:
    v20 = v33;
    a1 = v34;
    goto LABEL_37;
  }
  v28 = *(_QWORD *)(v36 + 8 * v29);
  if (v28)
  {
LABEL_17:
    v27 = v29;
    goto LABEL_18;
  }
  while (1)
  {
    v27 = v29 + 1;
    if (__OFADD__(v29, 1))
      break;
    if (v27 >= v35)
    {
      v22 = 0;
      v23 = v32;
      goto LABEL_36;
    }
    v28 = *(_QWORD *)(v36 + 8 * v27);
    ++v29;
    if (v28)
      goto LABEL_18;
  }
LABEL_40:
  __break(1u);
}

void sub_1CA24BBD4(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int64_t v29;
  uint64_t v30;
  _QWORD *v31;
  int64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF956C60);
  v35 = *(_QWORD *)(v8 - 8);
  v36 = v8;
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v29 - v12;
  v14 = *(_QWORD *)(a4 + 64);
  v33 = a4 + 64;
  v15 = -1 << *(_BYTE *)(a4 + 32);
  if (-v15 < 64)
    v16 = ~(-1 << -(char)v15);
  else
    v16 = -1;
  v17 = v16 & v14;
  if (!a2)
  {
    v18 = 0;
LABEL_37:
    v28 = v33;
    *a1 = a4;
    a1[1] = v28;
    a1[2] = ~v15;
    a1[3] = v18;
    a1[4] = v17;
    return;
  }
  if (!a3)
  {
    v18 = 0;
    goto LABEL_37;
  }
  if (a3 < 0)
  {
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
  v30 = -1 << *(_BYTE *)(a4 + 32);
  v31 = a1;
  v18 = 0;
  v19 = 0;
  v32 = (unint64_t)(63 - v15) >> 6;
  v29 = v32 - 1;
  v34 = a3;
  if (!v17)
    goto LABEL_9;
LABEL_8:
  v20 = __clz(__rbit64(v17));
  v17 &= v17 - 1;
  v21 = v20 | (v18 << 6);
  while (1)
  {
    ++v19;
    v25 = *(_QWORD *)(a4 + 56);
    v26 = *(_QWORD *)(*(_QWORD *)(a4 + 48) + 8 * v21);
    v27 = sub_1CA85A5B0();
    (*(void (**)(char *, unint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(&v10[*(int *)(v36 + 48)], v25 + *(_QWORD *)(*(_QWORD *)(v27 - 8) + 72) * v21, v27);
    *(_QWORD *)v10 = v26;
    sub_1CA24EEF8((uint64_t)v10, (uint64_t)v13, (uint64_t *)&unk_1EF956C60);
    sub_1CA24EEF8((uint64_t)v13, a2, (uint64_t *)&unk_1EF956C60);
    if (v19 == v34)
      goto LABEL_36;
    a2 += *(_QWORD *)(v35 + 72);
    if (v17)
      goto LABEL_8;
LABEL_9:
    v22 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
      __break(1u);
      goto LABEL_39;
    }
    if (v22 >= v32)
      goto LABEL_32;
    v23 = *(_QWORD *)(v33 + 8 * v22);
    if (!v23)
      break;
LABEL_18:
    v17 = (v23 - 1) & v23;
    v21 = __clz(__rbit64(v23)) + (v22 << 6);
    v18 = v22;
  }
  v18 += 2;
  if (v22 + 1 >= v32)
  {
    v17 = 0;
    v18 = v22;
    goto LABEL_36;
  }
  v23 = *(_QWORD *)(v33 + 8 * v18);
  if (v23)
    goto LABEL_14;
  v24 = v22 + 2;
  if (v22 + 2 >= v32)
    goto LABEL_32;
  v23 = *(_QWORD *)(v33 + 8 * v24);
  if (v23)
    goto LABEL_17;
  v18 = v22 + 3;
  if (v22 + 3 >= v32)
  {
    v17 = 0;
    v18 = v22 + 2;
    goto LABEL_36;
  }
  v23 = *(_QWORD *)(v33 + 8 * v18);
  if (v23)
  {
LABEL_14:
    v22 = v18;
    goto LABEL_18;
  }
  v24 = v22 + 4;
  if (v22 + 4 >= v32)
  {
LABEL_32:
    v17 = 0;
LABEL_36:
    v15 = v30;
    a1 = v31;
    goto LABEL_37;
  }
  v23 = *(_QWORD *)(v33 + 8 * v24);
  if (v23)
  {
LABEL_17:
    v22 = v24;
    goto LABEL_18;
  }
  while (1)
  {
    v22 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v22 >= v32)
    {
      v17 = 0;
      v18 = v29;
      goto LABEL_36;
    }
    v23 = *(_QWORD *)(v33 + 8 * v22);
    ++v24;
    if (v23)
      goto LABEL_18;
  }
LABEL_40:
  __break(1u);
}

uint64_t sub_1CA24BEC0(uint64_t result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;

  v5 = (_QWORD *)result;
  v6 = a4 + 64;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 64);
  if (!a2)
  {
    v12 = 0;
    v10 = 0;
LABEL_38:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    v20 = *(_QWORD *)(*(_QWORD *)(a4 + 48) + 8 * v16);
    v21 = (uint64_t *)(*(_QWORD *)(a4 + 56) + 16 * v16);
    v23 = *v21;
    v22 = v21[1];
    *v11 = v20;
    v11[1] = v23;
    v11[2] = v22;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 3;
    result = swift_bridgeObjectRetain();
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
      break;
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    v9 = 0;
    v12 = v17;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
    goto LABEL_14;
  v19 = v17 + 2;
  if (v17 + 2 >= v14)
    goto LABEL_33;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
    goto LABEL_17;
  v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    v9 = 0;
    v12 = v17 + 2;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    v17 = v12;
    goto LABEL_18;
  }
  v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    v9 = 0;
LABEL_37:
    v10 = v13;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    v17 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v17 >= v14)
    {
      v9 = 0;
      v12 = v14 - 1;
      goto LABEL_37;
    }
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v19;
    if (v18)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1CA24C0C4(uint64_t result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v5 = (_QWORD *)result;
  v6 = a4 + 64;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 64);
  if (!a2)
  {
    v12 = 0;
    v10 = 0;
LABEL_38:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    v20 = (uint64_t *)(*(_QWORD *)(a4 + 48) + 16 * v16);
    v22 = *v20;
    v21 = v20[1];
    v23 = *(_QWORD *)(*(_QWORD *)(a4 + 56) + 8 * v16);
    *v11 = v22;
    v11[1] = v21;
    v11[2] = v23;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 3;
    result = swift_bridgeObjectRetain();
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
      break;
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    v9 = 0;
    v12 = v17;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
    goto LABEL_14;
  v19 = v17 + 2;
  if (v17 + 2 >= v14)
    goto LABEL_33;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
    goto LABEL_17;
  v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    v9 = 0;
    v12 = v17 + 2;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    v17 = v12;
    goto LABEL_18;
  }
  v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    v9 = 0;
LABEL_37:
    v10 = v13;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    v17 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v17 >= v14)
    {
      v9 = 0;
      v12 = v14 - 1;
      goto LABEL_37;
    }
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v19;
    if (v18)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

_QWORD *sub_1CA24C2C8(_QWORD *result, _OWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;

  v4 = a4 + 64;
  v5 = -1;
  v6 = -1 << *(_BYTE *)(a4 + 32);
  if (-v6 < 64)
    v5 = ~(-1 << -(char)v6);
  v7 = v5 & *(_QWORD *)(a4 + 64);
  if (!a2)
  {
    v8 = 0;
    a3 = 0;
LABEL_35:
    *result = a4;
    result[1] = v4;
    result[2] = ~v6;
    result[3] = v8;
    result[4] = v7;
    return (_QWORD *)a3;
  }
  if (!a3)
  {
    v8 = 0;
    goto LABEL_35;
  }
  if (a3 < 0)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  v8 = 0;
  v9 = 0;
  v10 = (unint64_t)(63 - v6) >> 6;
  while (v7)
  {
    v11 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    v12 = v11 | (v8 << 6);
LABEL_8:
    ++v9;
    *a2++ = *(_OWORD *)(*(_QWORD *)(a4 + 48) + 16 * v12);
    if (v9 == a3)
      goto LABEL_35;
  }
  v13 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    goto LABEL_37;
  }
  if (v13 >= v10)
    goto LABEL_30;
  v14 = *(_QWORD *)(v4 + 8 * v13);
  if (v14)
    goto LABEL_19;
  v8 += 2;
  if (v13 + 1 >= v10)
  {
    v7 = 0;
    v8 = v13;
    goto LABEL_34;
  }
  v14 = *(_QWORD *)(v4 + 8 * v8);
  if (v14)
  {
LABEL_15:
    v13 = v8;
LABEL_19:
    v16 = __clz(__rbit64(v14));
    v7 = (v14 - 1) & v14;
    v12 = v16 + (v13 << 6);
    v8 = v13;
    goto LABEL_8;
  }
  v15 = v13 + 2;
  if (v13 + 2 >= v10)
    goto LABEL_30;
  v14 = *(_QWORD *)(v4 + 8 * v15);
  if (v14)
  {
LABEL_18:
    v13 = v15;
    goto LABEL_19;
  }
  v8 = v13 + 3;
  if (v13 + 3 >= v10)
  {
    v7 = 0;
    v8 = v13 + 2;
    goto LABEL_34;
  }
  v14 = *(_QWORD *)(v4 + 8 * v8);
  if (v14)
    goto LABEL_15;
  v15 = v13 + 4;
  if (v13 + 4 >= v10)
  {
LABEL_30:
    v7 = 0;
LABEL_34:
    a3 = v9;
    goto LABEL_35;
  }
  v14 = *(_QWORD *)(v4 + 8 * v15);
  if (v14)
    goto LABEL_18;
  while (1)
  {
    v13 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v13 >= v10)
    {
      v7 = 0;
      v8 = v10 - 1;
      goto LABEL_34;
    }
    v14 = *(_QWORD *)(v4 + 8 * v13);
    ++v15;
    if (v14)
      goto LABEL_19;
  }
LABEL_38:
  __break(1u);
  return result;
}

_QWORD *sub_1CA24C45C(_QWORD *result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  void *v20;
  id v21;

  v5 = result;
  v6 = a4 + 64;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 64);
  if (!a2)
  {
    v12 = 0;
    v10 = 0;
LABEL_38:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return (_QWORD *)v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    v20 = *(void **)(*(_QWORD *)(a4 + 48) + 8 * v16);
    *v11 = v20;
    if (v13 == v10)
    {
      v21 = v20;
      goto LABEL_38;
    }
    ++v11;
    result = v20;
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
      break;
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    v9 = 0;
    v12 = v17;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
    goto LABEL_14;
  v19 = v17 + 2;
  if (v17 + 2 >= v14)
    goto LABEL_33;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
    goto LABEL_17;
  v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    v9 = 0;
    v12 = v17 + 2;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    v17 = v12;
    goto LABEL_18;
  }
  v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    v9 = 0;
LABEL_37:
    v10 = v13;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    v17 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v17 >= v14)
    {
      v9 = 0;
      v12 = v14 - 1;
      goto LABEL_37;
    }
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v19;
    if (v18)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1CA24C654(uint64_t result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  _QWORD *v20;
  uint64_t v21;

  v5 = (_QWORD *)result;
  v6 = a4 + 64;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 64);
  if (!a2)
  {
    v12 = 0;
    v10 = 0;
LABEL_38:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    v20 = (_QWORD *)(*(_QWORD *)(a4 + 48) + 16 * v16);
    v21 = v20[1];
    *v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 2;
    result = swift_bridgeObjectRetain();
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
      break;
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    v9 = 0;
    v12 = v17;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
    goto LABEL_14;
  v19 = v17 + 2;
  if (v17 + 2 >= v14)
    goto LABEL_33;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
    goto LABEL_17;
  v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    v9 = 0;
    v12 = v17 + 2;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    v17 = v12;
    goto LABEL_18;
  }
  v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    v9 = 0;
LABEL_37:
    v10 = v13;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    v17 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v17 >= v14)
    {
      v9 = 0;
      v12 = v14 - 1;
      goto LABEL_37;
    }
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v19;
    if (v18)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

_QWORD *sub_1CA24C850(_QWORD *result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  void *v20;
  id v21;

  v5 = result;
  v6 = a4 + 64;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 64);
  if (!a2)
  {
    v12 = 0;
    v10 = 0;
LABEL_38:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return (_QWORD *)v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    v20 = *(void **)(*(_QWORD *)(a4 + 56) + 8 * v16);
    *v11 = v20;
    if (v13 == v10)
    {
      v21 = v20;
      goto LABEL_38;
    }
    ++v11;
    result = v20;
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
      break;
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    v9 = 0;
    v12 = v17;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
    goto LABEL_14;
  v19 = v17 + 2;
  if (v17 + 2 >= v14)
    goto LABEL_33;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
    goto LABEL_17;
  v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    v9 = 0;
    v12 = v17 + 2;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    v17 = v12;
    goto LABEL_18;
  }
  v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    v9 = 0;
LABEL_37:
    v10 = v13;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    v17 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v17 >= v14)
    {
      v9 = 0;
      v12 = v14 - 1;
      goto LABEL_37;
    }
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v19;
    if (v18)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

_QWORD *sub_1CA24CA48(_QWORD *result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;

  v4 = a4 + 64;
  v5 = -1;
  v6 = -1 << *(_BYTE *)(a4 + 32);
  if (-v6 < 64)
    v5 = ~(-1 << -(char)v6);
  v7 = v5 & *(_QWORD *)(a4 + 64);
  if (!a2)
  {
    v8 = 0;
    a3 = 0;
LABEL_35:
    *result = a4;
    result[1] = v4;
    result[2] = ~v6;
    result[3] = v8;
    result[4] = v7;
    return (_QWORD *)a3;
  }
  if (!a3)
  {
    v8 = 0;
    goto LABEL_35;
  }
  if (a3 < 0)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  v8 = 0;
  v9 = 0;
  v10 = (unint64_t)(63 - v6) >> 6;
  while (v7)
  {
    v11 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    v12 = v11 | (v8 << 6);
LABEL_8:
    ++v9;
    *a2++ = *(_QWORD *)(*(_QWORD *)(a4 + 48) + 8 * v12);
    if (v9 == a3)
      goto LABEL_35;
  }
  v13 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    goto LABEL_37;
  }
  if (v13 >= v10)
    goto LABEL_30;
  v14 = *(_QWORD *)(v4 + 8 * v13);
  if (v14)
    goto LABEL_19;
  v8 += 2;
  if (v13 + 1 >= v10)
  {
    v7 = 0;
    v8 = v13;
    goto LABEL_34;
  }
  v14 = *(_QWORD *)(v4 + 8 * v8);
  if (v14)
  {
LABEL_15:
    v13 = v8;
LABEL_19:
    v16 = __clz(__rbit64(v14));
    v7 = (v14 - 1) & v14;
    v12 = v16 + (v13 << 6);
    v8 = v13;
    goto LABEL_8;
  }
  v15 = v13 + 2;
  if (v13 + 2 >= v10)
    goto LABEL_30;
  v14 = *(_QWORD *)(v4 + 8 * v15);
  if (v14)
  {
LABEL_18:
    v13 = v15;
    goto LABEL_19;
  }
  v8 = v13 + 3;
  if (v13 + 3 >= v10)
  {
    v7 = 0;
    v8 = v13 + 2;
    goto LABEL_34;
  }
  v14 = *(_QWORD *)(v4 + 8 * v8);
  if (v14)
    goto LABEL_15;
  v15 = v13 + 4;
  if (v13 + 4 >= v10)
  {
LABEL_30:
    v7 = 0;
LABEL_34:
    a3 = v9;
    goto LABEL_35;
  }
  v14 = *(_QWORD *)(v4 + 8 * v15);
  if (v14)
    goto LABEL_18;
  while (1)
  {
    v13 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v13 >= v10)
    {
      v7 = 0;
      v8 = v10 - 1;
      goto LABEL_34;
    }
    v14 = *(_QWORD *)(v4 + 8 * v13);
    ++v15;
    if (v14)
      goto LABEL_19;
  }
LABEL_38:
  __break(1u);
  return result;
}

uint64_t sub_1CA24CBDC(uint64_t result, uint64_t *a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4;
  uint64_t *v6;
  _QWORD *v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int64_t v24;
  uint64_t v25;

  v4 = a4;
  v6 = a2;
  v7 = (_QWORD *)result;
  if ((a4 & 0xC000000000000001) != 0)
  {
    result = sub_1CA85BFFC();
    v8 = 0;
    v9 = 0;
    v10 = 0;
    v4 = result | 0x8000000000000000;
    if (v6)
      goto LABEL_3;
LABEL_37:
    v11 = 0;
    a3 = 0;
LABEL_46:
    *v7 = v4;
    v7[1] = v8;
    v7[2] = v9;
    v7[3] = v11;
    v7[4] = v10;
    return a3;
  }
  v19 = -1 << *(_BYTE *)(a4 + 32);
  v8 = a4 + 64;
  v20 = ~v19;
  v21 = -v19;
  if (v21 < 64)
    v22 = ~(-1 << v21);
  else
    v22 = -1;
  v10 = v22 & *(_QWORD *)(a4 + 64);
  v9 = v20;
  if (!a2)
    goto LABEL_37;
LABEL_3:
  if (!a3)
  {
    v11 = 0;
    goto LABEL_46;
  }
  if (a3 < 0)
  {
LABEL_48:
    __break(1u);
    goto LABEL_49;
  }
  v23 = v9;
  v11 = 0;
  v12 = 0;
  v24 = (unint64_t)(v9 + 64) >> 6;
  while ((v4 & 0x8000000000000000) != 0)
  {
    if (!sub_1CA85C02C()
      || (sub_1CA24EEC0(0, (unint64_t *)&qword_1EF94AB50),
          swift_unknownObjectRetain(),
          swift_dynamicCast(),
          v15 = v25,
          result = swift_unknownObjectRelease(),
          !v25))
    {
      a3 = v12;
LABEL_45:
      v9 = v23;
      goto LABEL_46;
    }
LABEL_6:
    ++v12;
    *v6++ = v15;
    if (v12 == a3)
      goto LABEL_45;
  }
  if (v10)
  {
    v13 = __clz(__rbit64(v10));
    v10 &= v10 - 1;
    v14 = v13 | (v11 << 6);
LABEL_23:
    result = (uint64_t)*(id *)(*(_QWORD *)(v4 + 48) + 8 * v14);
    if (!result)
      goto LABEL_44;
    v15 = result;
    goto LABEL_6;
  }
  v16 = v11 + 1;
  if (__OFADD__(v11, 1))
  {
    __break(1u);
    goto LABEL_48;
  }
  if (v16 >= v24)
    goto LABEL_40;
  v17 = *(_QWORD *)(v8 + 8 * v16);
  if (v17)
    goto LABEL_22;
  v11 += 2;
  if (v16 + 1 >= v24)
  {
    v10 = 0;
    v11 = v16;
    goto LABEL_44;
  }
  v17 = *(_QWORD *)(v8 + 8 * v11);
  if (v17)
  {
LABEL_18:
    v16 = v11;
LABEL_22:
    v10 = (v17 - 1) & v17;
    v14 = __clz(__rbit64(v17)) + (v16 << 6);
    v11 = v16;
    goto LABEL_23;
  }
  v18 = v16 + 2;
  if (v16 + 2 >= v24)
    goto LABEL_40;
  v17 = *(_QWORD *)(v8 + 8 * v18);
  if (v17)
  {
LABEL_21:
    v16 = v18;
    goto LABEL_22;
  }
  v11 = v16 + 3;
  if (v16 + 3 >= v24)
  {
    v10 = 0;
    v11 = v16 + 2;
    goto LABEL_44;
  }
  v17 = *(_QWORD *)(v8 + 8 * v11);
  if (v17)
    goto LABEL_18;
  v18 = v16 + 4;
  if (v16 + 4 >= v24)
  {
LABEL_40:
    v10 = 0;
LABEL_44:
    a3 = v12;
    goto LABEL_45;
  }
  v17 = *(_QWORD *)(v8 + 8 * v18);
  if (v17)
    goto LABEL_21;
  while (1)
  {
    v16 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v16 >= v24)
    {
      v10 = 0;
      v11 = v24 - 1;
      goto LABEL_44;
    }
    v17 = *(_QWORD *)(v8 + 8 * v16);
    ++v18;
    if (v17)
      goto LABEL_22;
  }
LABEL_49:
  __break(1u);
  return result;
}

uint64_t sub_1CA24CEAC(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t result;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  int64_t v27;
  unint64_t v28;
  int64_t v29;
  uint64_t v30;
  void (*v31)(char *, char *, uint64_t);
  uint64_t v32;
  uint64_t v33;
  int64_t v34;
  uint64_t v35;
  _QWORD *v36;
  int64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v9 = a5(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = ((uint64_t (*)(void))MEMORY[0x1E0C80A78])();
  v13 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x1E0C80A78](v11);
  v16 = (char *)&v33 - v15;
  v40 = a4;
  v19 = *(_QWORD *)(a4 + 64);
  v18 = a4 + 64;
  v17 = v19;
  v38 = v18;
  v20 = -1 << *(_BYTE *)(v18 - 32);
  if (-v20 < 64)
    v21 = ~(-1 << -(char)v20);
  else
    v21 = -1;
  v22 = v21 & v17;
  if (!a2)
  {
    v23 = 0;
    a3 = 0;
LABEL_38:
    v32 = v38;
    *a1 = v40;
    a1[1] = v32;
    a1[2] = ~v20;
    a1[3] = v23;
    a1[4] = v22;
    return a3;
  }
  if (!a3)
  {
    v23 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v35 = -1 << *(_BYTE *)(v18 - 32);
  v36 = a1;
  v23 = 0;
  v24 = 0;
  v37 = (unint64_t)(63 - v20) >> 6;
  v34 = v37 - 1;
  v39 = a3;
  if (!v22)
    goto LABEL_9;
LABEL_8:
  v25 = __clz(__rbit64(v22));
  v22 &= v22 - 1;
  v26 = v25 | (v23 << 6);
  while (1)
  {
    ++v24;
    v30 = *(_QWORD *)(v10 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v10 + 16))(v13, *(_QWORD *)(v40 + 56) + v30 * v26, v9);
    v31 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
    v31(v16, v13, v9);
    result = ((uint64_t (*)(uint64_t, char *, uint64_t))v31)(a2, v16, v9);
    a3 = v39;
    if (v24 == v39)
      goto LABEL_37;
    a2 += v30;
    if (v22)
      goto LABEL_8;
LABEL_9:
    v27 = v23 + 1;
    if (__OFADD__(v23, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v27 >= v37)
      goto LABEL_32;
    v28 = *(_QWORD *)(v38 + 8 * v27);
    if (!v28)
      break;
LABEL_18:
    v22 = (v28 - 1) & v28;
    v26 = __clz(__rbit64(v28)) + (v27 << 6);
    v23 = v27;
  }
  v23 += 2;
  if (v27 + 1 >= v37)
  {
    v22 = 0;
    v23 = v27;
    goto LABEL_36;
  }
  v28 = *(_QWORD *)(v38 + 8 * v23);
  if (v28)
    goto LABEL_14;
  v29 = v27 + 2;
  if (v27 + 2 >= v37)
    goto LABEL_32;
  v28 = *(_QWORD *)(v38 + 8 * v29);
  if (v28)
    goto LABEL_17;
  v23 = v27 + 3;
  if (v27 + 3 >= v37)
  {
    v22 = 0;
    v23 = v27 + 2;
    goto LABEL_36;
  }
  v28 = *(_QWORD *)(v38 + 8 * v23);
  if (v28)
  {
LABEL_14:
    v27 = v23;
    goto LABEL_18;
  }
  v29 = v27 + 4;
  if (v27 + 4 >= v37)
  {
LABEL_32:
    v22 = 0;
LABEL_36:
    a3 = v24;
LABEL_37:
    v20 = v35;
    a1 = v36;
    goto LABEL_38;
  }
  v28 = *(_QWORD *)(v38 + 8 * v29);
  if (v28)
  {
LABEL_17:
    v27 = v29;
    goto LABEL_18;
  }
  while (1)
  {
    v27 = v29 + 1;
    if (__OFADD__(v29, 1))
      break;
    if (v27 >= v37)
    {
      v22 = 0;
      v23 = v34;
      goto LABEL_36;
    }
    v28 = *(_QWORD *)(v38 + 8 * v27);
    ++v29;
    if (v28)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1CA24D174(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t (*a6)(_QWORD))
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t result;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  int64_t v27;
  unint64_t v28;
  int64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  int64_t v38;
  uint64_t v39;
  _QWORD *v40;
  int64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t (*v47)(_QWORD);
  uint64_t v48;

  v46 = a5;
  v47 = a6;
  v10 = __swift_instantiateConcreteTypeFromMangledName(a5);
  v44 = *(_QWORD *)(v10 - 8);
  v45 = v10;
  v11 = MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x1E0C80A78](v11);
  v16 = (char *)&v37 - v15;
  v48 = a4;
  v19 = *(_QWORD *)(a4 + 64);
  v18 = a4 + 64;
  v17 = v19;
  v42 = v18;
  v20 = -1 << *(_BYTE *)(v18 - 32);
  if (-v20 < 64)
    v21 = ~(-1 << -(char)v20);
  else
    v21 = -1;
  v22 = v21 & v17;
  if (!a2)
  {
    v23 = 0;
    a3 = 0;
LABEL_39:
    v36 = v42;
    *a1 = v48;
    a1[1] = v36;
    a1[2] = ~v20;
    a1[3] = v23;
    a1[4] = v22;
    return a3;
  }
  if (!a3)
  {
    v23 = 0;
    goto LABEL_39;
  }
  if (a3 < 0)
    goto LABEL_41;
  v39 = -1 << *(_BYTE *)(v18 - 32);
  v40 = a1;
  v23 = 0;
  v24 = 0;
  v41 = (unint64_t)(63 - v20) >> 6;
  v38 = v41 - 1;
  v43 = a3;
  if (!v22)
    goto LABEL_9;
LABEL_8:
  v25 = __clz(__rbit64(v22));
  v22 &= v22 - 1;
  v26 = v25 | (v23 << 6);
  while (1)
  {
    ++v24;
    v30 = *(_QWORD *)(v48 + 56);
    v31 = (uint64_t *)(*(_QWORD *)(v48 + 48) + 16 * v26);
    v32 = *v31;
    v33 = v31[1];
    v34 = v47(0);
    (*(void (**)(char *, unint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(&v13[*(int *)(v45 + 48)], v30 + *(_QWORD *)(*(_QWORD *)(v34 - 8) + 72) * v26, v34);
    *(_QWORD *)v13 = v32;
    *((_QWORD *)v13 + 1) = v33;
    v35 = v46;
    sub_1CA24EEF8((uint64_t)v13, (uint64_t)v16, v46);
    sub_1CA24EEF8((uint64_t)v16, a2, v35);
    a3 = v43;
    if (v24 == v43)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    a2 += *(_QWORD *)(v44 + 72);
    result = swift_bridgeObjectRetain();
    if (v22)
      goto LABEL_8;
LABEL_9:
    v27 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v27 >= v41)
      goto LABEL_33;
    v28 = *(_QWORD *)(v42 + 8 * v27);
    if (!v28)
    {
      v23 += 2;
      if (v27 + 1 >= v41)
      {
        v22 = 0;
        v23 = v27;
      }
      else
      {
        v28 = *(_QWORD *)(v42 + 8 * v23);
        if (v28)
          goto LABEL_14;
        v29 = v27 + 2;
        if (v27 + 2 >= v41)
          goto LABEL_33;
        v28 = *(_QWORD *)(v42 + 8 * v29);
        if (v28)
        {
LABEL_17:
          v27 = v29;
          goto LABEL_18;
        }
        v23 = v27 + 3;
        if (v27 + 3 < v41)
        {
          v28 = *(_QWORD *)(v42 + 8 * v23);
          if (v28)
          {
LABEL_14:
            v27 = v23;
            goto LABEL_18;
          }
          v29 = v27 + 4;
          if (v27 + 4 >= v41)
          {
LABEL_33:
            v22 = 0;
            goto LABEL_37;
          }
          v28 = *(_QWORD *)(v42 + 8 * v29);
          if (!v28)
          {
            while (1)
            {
              v27 = v29 + 1;
              if (__OFADD__(v29, 1))
                goto LABEL_42;
              if (v27 >= v41)
              {
                v22 = 0;
                v23 = v38;
                goto LABEL_37;
              }
              v28 = *(_QWORD *)(v42 + 8 * v27);
              ++v29;
              if (v28)
                goto LABEL_18;
            }
          }
          goto LABEL_17;
        }
        v22 = 0;
        v23 = v27 + 2;
      }
LABEL_37:
      a3 = v24;
LABEL_38:
      v20 = v39;
      a1 = v40;
      goto LABEL_39;
    }
LABEL_18:
    v22 = (v28 - 1) & v28;
    v26 = __clz(__rbit64(v28)) + (v27 << 6);
    v23 = v27;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_1CA24D480(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t i;
  uint64_t (*v12)();
  id *v13;
  id v14;
  uint64_t result;
  uint64_t (*v16[4])();

  v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_1CA85C08C();
    swift_bridgeObjectRelease();
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_19;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    v10 = sub_1CA85C08C();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1CA24EF3C(&qword_1EF94ACE8, &qword_1ED8722F0);
        swift_bridgeObjectRetain();
        for (i = 0; i != v7; ++i)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8722F0);
          v12 = sub_1CA2DEC54(v16, i, a3);
          v14 = *v13;
          ((void (*)(uint64_t (**)(), _QWORD))v12)(v16, 0);
          *(_QWORD *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_1CA24EEC0(0, (unint64_t *)&qword_1ED8723C0);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  result = sub_1CA85C0D4();
  __break(1u);
  return result;
}

uint64_t sub_1CA24D694(unint64_t a1, uint64_t a2, unint64_t a3, void (*a4)(_QWORD), unint64_t *a5, uint64_t *a6, uint64_t (*a7)(_BYTE *, uint64_t, unint64_t, uint64_t, uint64_t))
{
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t i;
  uint64_t v21;
  void (*v22)(_BYTE *, _QWORD);
  uint64_t *v23;
  uint64_t v24;
  uint64_t result;
  _BYTE v26[32];

  v14 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    v15 = sub_1CA85C08C();
    swift_bridgeObjectRelease();
    if (!v15)
      return a3;
  }
  else
  {
    v15 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v15)
      return a3;
  }
  if (!a1)
    goto LABEL_19;
  v16 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v14)
  {
    swift_bridgeObjectRetain();
    v18 = sub_1CA85C08C();
    swift_bridgeObjectRelease();
    if (v18 <= a2)
    {
      if (v15 >= 1)
      {
        v19 = sub_1CA24EF3C(a5, a6);
        swift_bridgeObjectRetain();
        for (i = 0; i != v15; ++i)
        {
          v21 = __swift_instantiateConcreteTypeFromMangledName(a6);
          v22 = (void (*)(_BYTE *, _QWORD))a7(v26, i, a3, v21, v19);
          v24 = *v23;
          swift_retain();
          v22(v26, 0);
          *(_QWORD *)(a1 + 8 * i) = v24;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v17 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v17 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v16 + 32 >= a1 + 8 * v17 || v16 + 32 + 8 * v17 <= a1)
  {
    a4(0);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  result = sub_1CA85C0D4();
  __break(1u);
  return result;
}

uint64_t sub_1CA24D89C(unint64_t a1, uint64_t a2, unint64_t a3, void (*a4)(_QWORD), unint64_t *a5, uint64_t *a6, uint64_t (*a7)(_BYTE *, uint64_t, unint64_t, uint64_t, uint64_t))
{
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t i;
  uint64_t v21;
  void (*v22)(_BYTE *, _QWORD);
  id *v23;
  id v24;
  uint64_t result;
  _BYTE v26[32];

  v14 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    v15 = sub_1CA85C08C();
    swift_bridgeObjectRelease();
    if (!v15)
      return a3;
  }
  else
  {
    v15 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v15)
      return a3;
  }
  if (!a1)
    goto LABEL_19;
  v16 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v14)
  {
    swift_bridgeObjectRetain();
    v18 = sub_1CA85C08C();
    swift_bridgeObjectRelease();
    if (v18 <= a2)
    {
      if (v15 >= 1)
      {
        v19 = sub_1CA24EF3C(a5, a6);
        swift_bridgeObjectRetain();
        for (i = 0; i != v15; ++i)
        {
          v21 = __swift_instantiateConcreteTypeFromMangledName(a6);
          v22 = (void (*)(_BYTE *, _QWORD))a7(v26, i, a3, v21, v19);
          v24 = *v23;
          v22(v26, 0);
          *(_QWORD *)(a1 + 8 * i) = v24;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v17 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v17 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v16 + 32 >= a1 + 8 * v17 || v16 + 32 + 8 * v17 <= a1)
  {
    a4(0);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  result = sub_1CA85C0D4();
  __break(1u);
  return result;
}

uint64_t sub_1CA24DAA4(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t i;
  uint64_t (*v12)();
  id *v13;
  id v14;
  uint64_t result;
  uint64_t (*v16[4])();

  v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_1CA85C08C();
    swift_bridgeObjectRelease();
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_19;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    v10 = sub_1CA85C08C();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1CA24EF3C((unint64_t *)&unk_1ED8749A8, qword_1ED873720);
        swift_bridgeObjectRetain();
        for (i = 0; i != v7; ++i)
        {
          __swift_instantiateConcreteTypeFromMangledName(qword_1ED873720);
          v12 = sub_1CA2DEC54(v16, i, a3);
          v14 = *v13;
          ((void (*)(uint64_t (**)(), _QWORD))v12)(v16, 0);
          *(_QWORD *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_1CA24EEC0(0, &qword_1ED873228);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  result = sub_1CA85C0D4();
  __break(1u);
  return result;
}

uint64_t sub_1CA24DCB8(unint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_1CA24D89C(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for GraphSearchEntity, &qword_1EF94AC50, &qword_1ED874948, (uint64_t (*)(_BYTE *, uint64_t, unint64_t, uint64_t, uint64_t))sub_1CA2DED54);
}

uint64_t sub_1CA24DCDC(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t i;
  uint64_t (*v12)();
  id *v13;
  id v14;
  uint64_t result;
  uint64_t (*v16[4])();

  v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_1CA85C08C();
    swift_bridgeObjectRelease();
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_19;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    v10 = sub_1CA85C08C();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1CA24EF3C(&qword_1EF94AC20, &qword_1EF94AC18);
        swift_bridgeObjectRetain();
        for (i = 0; i != v7; ++i)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94AC18);
          v12 = sub_1CA2DEC54(v16, i, a3);
          v14 = *v13;
          ((void (*)(uint64_t (**)(), _QWORD))v12)(v16, 0);
          *(_QWORD *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_1CA24EEC0(0, (unint64_t *)&qword_1EF94AB50);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  result = sub_1CA85C0D4();
  __break(1u);
  return result;
}

uint64_t sub_1CA24DEF0(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t i;
  uint64_t (*v12)();
  id *v13;
  id v14;
  uint64_t result;
  uint64_t (*v16[4])();

  v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_1CA85C08C();
    swift_bridgeObjectRelease();
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_19;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    v10 = sub_1CA85C08C();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1CA24EF3C((unint64_t *)&unk_1EF94AB80, &qword_1EF94AB78);
        swift_bridgeObjectRetain();
        for (i = 0; i != v7; ++i)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94AB78);
          v12 = sub_1CA2DEC54(v16, i, a3);
          v14 = *v13;
          ((void (*)(uint64_t (**)(), _QWORD))v12)(v16, 0);
          *(_QWORD *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_1CA24EEC0(0, (unint64_t *)&unk_1ED873190);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  result = sub_1CA85C0D4();
  __break(1u);
  return result;
}

uint64_t sub_1CA24E104(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t i;
  uint64_t (*v12)();
  id *v13;
  id v14;
  uint64_t result;
  uint64_t (*v16[4])();

  v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_1CA85C08C();
    swift_bridgeObjectRelease();
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_19;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    v10 = sub_1CA85C08C();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1CA24EF3C(&qword_1EF94AB40, &qword_1EF94AB38);
        swift_bridgeObjectRetain();
        for (i = 0; i != v7; ++i)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94AB38);
          v12 = sub_1CA2DEC54(v16, i, a3);
          v14 = *v13;
          ((void (*)(uint64_t (**)(), _QWORD))v12)(v16, 0);
          *(_QWORD *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_1CA24EEC0(0, (unint64_t *)&qword_1ED874A40);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  result = sub_1CA85C0D4();
  __break(1u);
  return result;
}

uint64_t sub_1CA24E318(unint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_1CA24D89C(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for PlaceZeroKeyword, (unint64_t *)&unk_1EF94AB10, &qword_1ED874C78, (uint64_t (*)(_BYTE *, uint64_t, unint64_t, uint64_t, uint64_t))sub_1CA2DEC54);
}

uint64_t sub_1CA24E33C(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  id v17;
  NSObject *v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t, uint64_t);
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char *v24;
  id v25;
  id v26;
  NSObject *v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t);
  char v33;
  NSObject *v35;
  os_log_type_t v36;
  uint8_t *v37;
  _QWORD v38[2];
  char *v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  unsigned __int8 v44;
  char v45;

  v4 = sub_1CA85B3C0();
  v42 = *(_QWORD *)(v4 - 8);
  v43 = v4;
  v5 = MEMORY[0x1E0C80A78](v4);
  v40 = (char *)v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v41 = (char *)v38 - v7;
  v8 = sub_1CA85B348();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = v8;
  v11 = *(_QWORD *)(v9 + 64);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED872E00);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = v15;
  v45 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED874898);
  swift_allocObject();
  v16 = sub_1CA85AA18();
  v17 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CD1700]), sel_initWithPhotoLibrary_, a1);
  v18 = dispatch_group_create();
  dispatch_group_enter(v18);
  v19 = sub_1CA85B8E8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v15, 1, 1, v19);
  v20 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v38[1] = a2;
  v21 = v10;
  v20(v12, a2, v10);
  v22 = (*(unsigned __int8 *)(v9 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v23 = (v11 + v22 + 7) & 0xFFFFFFFFFFFFFFF8;
  v24 = (char *)swift_allocObject();
  *((_QWORD *)v24 + 2) = 0;
  *((_QWORD *)v24 + 3) = 0;
  *((_QWORD *)v24 + 4) = v17;
  *((_QWORD *)v24 + 5) = a1;
  *((_QWORD *)v24 + 6) = v16;
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(&v24[v22], v12, v21);
  *(_QWORD *)&v24[v23] = v18;
  v25 = v17;
  v26 = a1;
  swift_retain();
  v27 = v18;
  v28 = v40;
  sub_1CA4AF644((uint64_t)v39, (uint64_t)&unk_1EF94AD08, (uint64_t)v24);
  swift_release();
  sub_1CA85B3A8();
  if (qword_1ED874700 != -1)
    swift_once();
  v29 = sub_1CA85B360();
  __swift_project_value_buffer(v29, (uint64_t)qword_1ED8746E0);
  v30 = v41;
  sub_1CA85B3B4();
  v31 = v43;
  v32 = *(void (**)(char *, uint64_t))(v42 + 8);
  v32(v28, v43);
  v33 = sub_1CA85BB04();
  v32(v30, v31);
  if ((v33 & 1) != 0)
  {
    v35 = sub_1CA85B330();
    v36 = sub_1CA85BAE0();
    if (os_log_type_enabled(v35, v36))
    {
      v37 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v37 = 0;
      _os_log_impl(&dword_1CA237000, v35, v36, "Error getting MC status due to timeout.", v37, 2u);
      MEMORY[0x1CAA4F27C](v37, -1, -1);
    }
    swift_release();

    return -1;
  }
  else
  {
    sub_1CA85AA00();

    swift_release();
    return v44;
  }
}

uint64_t type metadata accessor for PGStoryPromptSuggestionQuestionFactory(uint64_t a1)
{
  return sub_1CA24EEC0(a1, &qword_1EF94AAA8);
}

uint64_t sub_1CA24E6B8()
{
  return swift_release();
}

uint64_t sub_1CA24E6C0(unint64_t *a1, unint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = sub_1CA24EEC0(255, a2);
    result = MEMORY[0x1CAA4F1A4](MEMORY[0x1E0DEFCF8], v4);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1CA24E700(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t *boxed_opaque_existential_1;
  id v20;
  id v21;
  uint64_t v22;
  id v23;
  id v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  double v28;
  void (*v29)(char *, unint64_t, uint64_t);
  uint64_t v30;
  char *v31;
  char *v32;
  char v33;
  void (*v34)(char *, uint64_t);
  char v35;
  uint64_t v36;
  id v37;
  void *v38;
  uint64_t v39;
  id v40;
  id v41;
  uint64_t v42;
  void *v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  double v47;
  _BYTE *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD v55[2];
  id v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _BYTE *v67;
  uint64_t v68;
  uint64_t v69;
  void (*v70)(char *, unint64_t, uint64_t);
  unsigned int v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  id v75;
  uint64_t v76[6];

  v66 = a1;
  v5 = sub_1CA85AD0C();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v55 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v72 = (char *)v55 - v10;
  v68 = sub_1CA85AD30();
  v73 = *(_QWORD *)(v68 - 8);
  MEMORY[0x1E0C80A78](v68);
  v12 = (char *)v55 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1CA85B348();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)v55 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = (_BYTE *)swift_slowAlloc();
  *v17 = 0;
  (*(void (**)(uint64_t, _BYTE *, double))(a3 + 16))(a3, v17, 0.0);
  v67 = v17;
  if ((*v17 & 1) != 0)
    return MEMORY[0x1E0DEE9D8];
  v18 = sub_1CA85AAA8();
  v76[3] = v18;
  v76[4] = sub_1CA23CC98((unint64_t *)&qword_1ED872DD0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D766B0], MEMORY[0x1E0D76680]);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v76);
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v18 - 8) + 104))(boxed_opaque_existential_1, *MEMORY[0x1E0D76688], v18);
  LOBYTE(v18) = sub_1CA85A85C();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v76);
  if ((v18 & 1) == 0)
  {
    (*(void (**)(uint64_t, _BYTE *, double))(a3 + 16))(a3, v67, 1.0);
    return MEMORY[0x1E0DEE9D8];
  }
  v60 = v12;
  v61 = a3;
  v20 = objc_msgSend(a2, sel_workingContext);
  v21 = objc_msgSend(v20, sel_loggingConnection);

  sub_1CA85B354();
  if (!v66)
  {
    (*(void (**)(uint64_t, _BYTE *, double))(v61 + 16))(v61, v67, 1.0);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    return MEMORY[0x1E0DEE9D8];
  }
  v58 = v14;
  v59 = v13;
  v76[0] = MEMORY[0x1E0DEE9E8];
  v22 = sub_1CA23DC84();
  v23 = objc_msgSend(a2, sel_workingContext);
  v24 = objc_msgSend(v23, sel_photoLibrary);

  v57 = v16;
  v65 = sub_1CA24E33C(v24, (uint64_t)v16);
  v25 = *(_QWORD *)(v22 + 16);
  if (!v25)
  {
    swift_bridgeObjectRelease();
    goto LABEL_27;
  }
  v56 = v24;
  v26 = (*(unsigned __int8 *)(v73 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v73 + 80);
  v55[1] = v22;
  v27 = v22 + v26;
  v71 = *MEMORY[0x1E0D76C90];
  v28 = (double)v66;
  v29 = *(void (**)(char *, unint64_t, uint64_t))(v73 + 16);
  v69 = *(_QWORD *)(v73 + 72);
  v70 = v29;
  v30 = v68;
  v31 = v60;
  v63 = v6;
  v64 = v5;
  v62 = v9;
  while (1)
  {
    v74 = v25;
    v70(v31, v27, v30);
    v32 = v72;
    sub_1CA85AD18();
    (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v9, v71, v5);
    v33 = sub_1CA85AD00();
    v34 = *(void (**)(char *, uint64_t))(v6 + 8);
    v34(v9, v5);
    v34(v32, v5);
    if ((v33 & 1) == 0)
    {
      (*(void (**)(char *, uint64_t))(v73 + 8))(v31, v30);
      goto LABEL_7;
    }
    sub_1CA85ACF4();
    sub_1CA85ACE8();
    v35 = sub_1CA85AD24();
    v36 = sub_1CA85ACDC();
    v37 = objc_allocWithZone((Class)PGStoryPromptSuggestionQuestion);
    v38 = (void *)sub_1CA85B510();
    swift_bridgeObjectRelease();
    v39 = sub_1CA85B510();
    swift_bridgeObjectRelease();
    v40 = objc_msgSend(v37, sel_initWithPromptId_promptText_isValidated_assetCount_mcAvailabilityStatus_localFactoryScore_, v38, v39, v35 & 1, v36, v65, 1.0);

    v41 = v40;
    v42 = swift_bridgeObjectRetain();
    sub_1CA23DF30(v42);
    swift_bridgeObjectRelease();
    v43 = (void *)sub_1CA85B978();
    swift_bridgeObjectRelease();
    LOBYTE(v39) = objc_msgSend(a2, sel_shouldAddQuestion_toAlreadyGeneratedQuestions_, v41, v43);

    if ((v39 & 1) == 0)
    {
      v30 = v68;
      (*(void (**)(char *, uint64_t))(v73 + 8))(v31, v68);

      v6 = v63;
      v5 = v64;
      v9 = v62;
      goto LABEL_7;
    }
    v44 = v41;
    sub_1CA23F194(&v75, v44);

    v45 = v76[0];
    if ((v76[0] & 0xC000000000000001) != 0)
    {
      swift_bridgeObjectRetain();
      v46 = sub_1CA85BE04();
      swift_bridgeObjectRelease();
    }
    else
    {
      v46 = *(_QWORD *)(v76[0] + 16);
    }
    v6 = v63;
    v5 = v64;
    v9 = v62;
    v47 = (double)v46 / v28;
    v48 = v67;
    (*(void (**)(uint64_t, _BYTE *, double))(v61 + 16))(v61, v67, v47);
    if (*v48 == 1)
      break;
    if ((v45 & 0xC000000000000001) != 0)
    {
      swift_bridgeObjectRetain();
      v49 = sub_1CA85BE04();

      swift_bridgeObjectRelease();
    }
    else
    {
      v49 = *(_QWORD *)(v45 + 16);

    }
    v31 = v60;
    v30 = v68;
    (*(void (**)(char *, uint64_t))(v73 + 8))(v60, v68);
    if (v49 >= v66)
      goto LABEL_26;
LABEL_7:
    v27 += v69;
    v25 = v74 - 1;
    if (v74 == 1)
      goto LABEL_26;
  }

  (*(void (**)(char *, uint64_t))(v73 + 8))(v60, v68);
LABEL_26:
  swift_bridgeObjectRelease();
  v24 = v56;
LABEL_27:
  (*(void (**)(uint64_t, _BYTE *, double))(v61 + 16))(v61, v67, 1.0);
  v52 = sub_1CA243374(v76[0]);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v53 = v59;
  v54 = v58;
  if (v52 < 0 || (v52 & 0x4000000000000000) != 0)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED874A08);
    v50 = sub_1CA85C050();

    swift_release();
  }
  else
  {
    sub_1CA85C290();

    v50 = v52;
  }
  swift_release();
  (*(void (**)(char *, uint64_t))(v54 + 8))(v57, v53);
  return v50;
}

uint64_t sub_1CA24EDFC(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for SongSource();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1CA24EE38(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1CA24EE7C(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1CA24EEC0(uint64_t a1, unint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_1CA24EEF8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1CA24EF3C(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x1CAA4F1A4](MEMORY[0x1E0DEAF50], v4);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1CA24EF7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v1 = sub_1CA85B348();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease();

  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

uint64_t sub_1CA24F024(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v4 = *(_QWORD *)(sub_1CA85B348() - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = v1[2];
  v7 = v1[3];
  v8 = v1[4];
  v9 = v1[5];
  v10 = v1[6];
  v11 = (uint64_t)v1 + v5;
  v12 = *(_QWORD *)((char *)v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFF8));
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v13;
  *v13 = v2;
  v13[1] = sub_1CA24F0E4;
  return sub_1CA23E848(a1, v6, v7, v8, v9, v10, v11, v12);
}

uint64_t sub_1CA24F0E4()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1CA24F12C()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1CA24F168(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_1CA24F0E4;
  return sub_1CA23EC00(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_1CA24F1E8(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED872E00);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1CA24F22C(uint64_t a1, char a2, char a3, char a4, char a5, char a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  char v9;
  BOOL v10;

  v9 = a1 == 5;
  if ((a3 & 1) != 0)
    v10 = a1 == 4;
  else
    v10 = a1 == 5;
  *(_QWORD *)(v8 + 16) = a7;
  *(_QWORD *)(v8 + 24) = a8;
  *(_QWORD *)(v8 + 32) = a1;
  *(_BYTE *)(v8 + 40) = a4;
  *(_BYTE *)(v8 + 41) = a2;
  *(_BYTE *)(v8 + 42) = a5;
  *(_BYTE *)(v8 + 43) = v10;
  *(_BYTE *)(v8 + 44) = a4 ^ a5 ^ 1;
  if ((a6 & 1) != 0)
    v9 = a1 == 4;
  if (a6 == 2)
    v9 = 2;
  *(_BYTE *)(v8 + 45) = v9;
  sub_1CA85BEC4();
  sub_1CA85B624();
  sub_1CA85C260();
  sub_1CA85B624();
  swift_bridgeObjectRelease();
  sub_1CA85B624();
  sub_1CA85B624();
  swift_bridgeObjectRelease();
  sub_1CA85B624();
  sub_1CA85B624();
  swift_bridgeObjectRelease();
  sub_1CA85B624();
  sub_1CA85B624();
  swift_bridgeObjectRelease();
  sub_1CA85B624();
  sub_1CA85B624();
  swift_bridgeObjectRelease();
  sub_1CA85B624();
  sub_1CA85B624();
  swift_bridgeObjectRelease();
  sub_1CA4C6684(0, 0xE000000000000000);
  swift_bridgeObjectRelease();
  if (*(_BYTE *)(v8 + 45) != 2)
  {
    sub_1CA85BEC4();
    sub_1CA85B624();
    sub_1CA85B624();
    swift_bridgeObjectRelease();
    sub_1CA4C6684(0, 0xE000000000000000);
    swift_bridgeObjectRelease();
  }
  return v8;
}

uint64_t sub_1CA24F548()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for PGSharedLibrarySimulationResult()
{
  return objc_opt_self();
}

uint64_t static PhotosChallengeAlgorithmEvaluator.evaluate(algorithm:experimentName:context:supportedAnsweredQuestions:params:outputFilePath:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, unint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _QWORD *a9@<X8>, uint64_t a10)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v16 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a2 + 24))(a6, a5, a7, a8, a10, a1, a2);
  v17 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 8))(a1, a2);
  sub_1CA24F65C(v17, v18, a3, a4, a6, v16, a9);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_1CA24F65C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, unint64_t a5@<X4>, uint64_t a6@<X5>, _QWORD *a7@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t i;
  unint64_t v11;
  float v12;
  uint64_t v13;
  float v14;
  float v15;
  float v16;
  BOOL v17;
  id v18;
  void *v19;
  uint64_t v20;
  id v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  unsigned int v25;
  unsigned int v26;
  __int16 v27;
  uint64_t v28;
  __int16 v29;
  uint64_t v30;
  uint64_t v36;
  uint64_t v37;

  v8 = a5;
  if (a5 >> 62)
    goto LABEL_35;
  v9 = *(_QWORD *)((a5 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (i = 0; v9; i = 0)
  {
    v11 = v8 & 0xC000000000000001;
    v12 = 0.0;
    v13 = 4;
    v14 = 0.0;
    v15 = 0.0;
    v16 = 0.0;
    v36 = a6;
    v37 = v8;
    while (1)
    {
      v18 = v11 ? (id)MEMORY[0x1CAA4DD64](v13 - 4, v8) : *(id *)(v8 + 8 * v13);
      v19 = v18;
      v20 = v13 - 3;
      if (__OFADD__(v13 - 4, 1))
        break;
      if (!*(_QWORD *)(a6 + 16))
        goto LABEL_5;
      v21 = v18;
      v22 = sub_1CA2508A0((uint64_t)v21);
      if ((v23 & 1) == 0)
      {

LABEL_5:
        v17 = __OFADD__(i++, 1);
        if (v17)
          goto LABEL_33;
        goto LABEL_6;
      }
      v8 = v9;
      v24 = v11;
      v25 = *(unsigned __int16 *)(*(_QWORD *)(a6 + 56) + 2 * v22);

      if (v25 > 4)
      {
        swift_bridgeObjectRelease();
        sub_1CA2508EC();
        swift_allocError();
        *(_WORD *)v28 = v25;
LABEL_31:
        *(_BYTE *)(v28 + 2) = 0;
        swift_willThrow();

        return;
      }
      if (((1 << v25) & 0x13) == 0)
      {
        v26 = objc_msgSend(v21, sel_state);
        v27 = v26;
        switch(v26)
        {
          case 0u:
            swift_bridgeObjectRelease();
            sub_1CA2508EC();
            swift_allocError();
            *(_WORD *)v28 = 0;
            goto LABEL_31;
          case 1u:
            swift_bridgeObjectRelease();
            sub_1CA2508EC();
            swift_allocError();
            v29 = 1;
            break;
          case 2u:

            if (v25 == 2)
              v16 = v16 + 1.0;
            else
              v12 = v12 + 1.0;
            goto LABEL_16;
          case 3u:

            if (v25 == 2)
            {
              v14 = v14 + 1.0;
            }
            else if (v25 == 3)
            {
              v15 = v15 + 1.0;
            }
            goto LABEL_16;
          case 4u:
            swift_bridgeObjectRelease();
            sub_1CA2508EC();
            swift_allocError();
            v29 = 4;
            break;
          default:
            swift_bridgeObjectRelease();
            sub_1CA2508EC();
            swift_allocError();
            *(_WORD *)v28 = v27;
            goto LABEL_31;
        }
        *(_WORD *)v28 = v29;
        goto LABEL_31;
      }

      v17 = __OFADD__(i++, 1);
      if (v17)
        goto LABEL_34;
LABEL_16:
      v11 = v24;
      v9 = v8;
      a6 = v36;
      v8 = v37;
LABEL_6:
      ++v13;
      if (v20 == v9)
        goto LABEL_36;
    }
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    swift_bridgeObjectRetain();
    v9 = sub_1CA85C08C();
  }
LABEL_36:
  swift_bridgeObjectRelease();
  v30 = type metadata accessor for PhotosChallengeEvaluationResult();
  sub_1CA85A8EC();
  *a7 = a1;
  a7[1] = a2;
  a7[2] = a3;
  a7[3] = a4;
  *(_QWORD *)((char *)a7 + *(int *)(v30 + 28)) = i;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
}

uint64_t static PhotosChallengeAlgorithmEvaluator.debug(algorithm:context:supportedAnsweredQuestions:params:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  id v5;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  unint64_t v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  _QWORD *v28;
  unint64_t v29;
  char v30;
  int v31;
  unsigned int v32;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v35;
  uint64_t v36;
  id v37;
  void *v38;
  uint64_t v39;
  _QWORD *v40;
  int v41;
  unint64_t v42;
  uint64_t v43;
  _BOOL8 v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  _QWORD *v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  BOOL v53;
  uint64_t v54;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  __int16 v65;
  __int16 v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  char *v72;
  uint64_t v73;
  _QWORD *v74;
  _QWORD *v75;

  v11 = sub_1CA85B57C();
  MEMORY[0x1E0C80A78](v11);
  v72 = (char *)&v67 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, _QWORD, unint64_t, uint64_t, uint64_t))(a2 + 24))(a4, a3, a5, 0, 0xE000000000000000, a1, a2);
  v14 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a2 + 32))(a4, a3, a1, a2);
  v15 = v14;
  v16 = 0;
  v17 = v14 + 64;
  v18 = 1 << *(_BYTE *)(v14 + 32);
  v19 = -1;
  if (v18 < 64)
    v19 = ~(-1 << v18);
  v20 = v19 & *(_QWORD *)(v14 + 64);
  v21 = (unint64_t)(v18 + 63) >> 6;
  v74 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  v71 = 0xED00006576697469;
  while (1)
  {
    do
    {
LABEL_5:
      while (v20)
      {
        v22 = __clz(__rbit64(v20));
        v20 &= v20 - 1;
        v23 = v22 | (v16 << 6);
        if (*(_QWORD *)(v13 + 16))
          goto LABEL_22;
      }
      v24 = v16 + 1;
      if (__OFADD__(v16, 1))
      {
        __break(1u);
        goto LABEL_69;
      }
      if (v24 >= v21)
        goto LABEL_56;
      v25 = *(_QWORD *)(v17 + 8 * v24);
      ++v16;
      if (!v25)
      {
        v16 = v24 + 1;
        if (v24 + 1 >= v21)
          goto LABEL_56;
        v25 = *(_QWORD *)(v17 + 8 * v16);
        if (!v25)
        {
          v16 = v24 + 2;
          if (v24 + 2 >= v21)
            goto LABEL_56;
          v25 = *(_QWORD *)(v17 + 8 * v16);
          if (!v25)
          {
            v26 = v24 + 3;
            if (v26 >= v21)
            {
LABEL_56:
              swift_bridgeObjectRelease();
              swift_release();
              sub_1CA85A0AC();
              swift_allocObject();
              v15 = sub_1CA85A0A0();
              v75 = v74;
              __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94AE08);
              sub_1CA26013C();
              v56 = v73;
              v57 = sub_1CA85A094();
              if (v56)
              {
                swift_release();
                swift_bridgeObjectRelease();
              }
              else
              {
                v59 = v57;
                v60 = v58;
                swift_release();
                swift_bridgeObjectRelease();
                sub_1CA85B570();
                v61 = sub_1CA85B54C();
                if (v62)
                {
                  v15 = v61;
                  sub_1CA260204(v59, v60);
                }
                else
                {
                  sub_1CA260204(v59, v60);
                  return 32123;
                }
              }
              return v15;
            }
            v25 = *(_QWORD *)(v17 + 8 * v26);
            if (!v25)
            {
              while (1)
              {
                v16 = v26 + 1;
                if (__OFADD__(v26, 1))
                  break;
                if (v16 >= v21)
                  goto LABEL_56;
                v25 = *(_QWORD *)(v17 + 8 * v16);
                ++v26;
                if (v25)
                  goto LABEL_21;
              }
              __break(1u);
LABEL_74:
              __break(1u);
LABEL_75:
              __break(1u);
LABEL_76:
              __break(1u);
LABEL_77:
              sub_1CA85C2E4();
              __break(1u);
              JUMPOUT(0x1CA2501A4);
            }
            v16 = v26;
          }
        }
      }
LABEL_21:
      v20 = (v25 - 1) & v25;
      v23 = __clz(__rbit64(v25)) + (v16 << 6);
    }
    while (!*(_QWORD *)(v13 + 16));
LABEL_22:
    v27 = 8 * v23;
    v28 = *(_QWORD **)(*(_QWORD *)(v15 + 56) + v27);
    v5 = *(id *)(*(_QWORD *)(v15 + 48) + v27);
    swift_bridgeObjectRetain();
    v29 = sub_1CA2508A0((uint64_t)v5);
    if ((v30 & 1) != 0)
      break;
    swift_bridgeObjectRelease();

  }
  v31 = *(unsigned __int16 *)(*(_QWORD *)(v13 + 56) + 2 * v29);

  switch(v31)
  {
    case 0:
    case 1:
    case 4:
      swift_bridgeObjectRelease();

      goto LABEL_5;
    case 2:
    case 3:
      v32 = objc_msgSend(v5, sel_state);
      if (v32 - 2 < 2)
      {
        if (v32 == 2 && v31 == 2)
        {
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v75 = v28;
          v35 = 0x69736F5065757254;
          goto LABEL_35;
        }
        if (v32 == 3)
        {
          if (v31 == 2)
          {
            isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            v75 = v28;
            v35 = 0x736F5065736C6146;
            v36 = v71;
          }
          else
          {
            if (v31 != 3)
              goto LABEL_37;
            isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            v75 = v28;
            v35 = 0x6167654E65757254;
LABEL_35:
            v36 = 0xEC00000065766974;
          }
LABEL_36:
          sub_1CA25D600(v35, v36, 0x697461756C617665, 0xEA00000000006E6FLL, isUniquelyReferenced_nonNull_native);
          v28 = v75;
          swift_bridgeObjectRelease();
          goto LABEL_37;
        }
        if (v32 == 2 && v31 == 3)
        {
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v75 = v28;
          v35 = 0x67654E65736C6146;
          v36 = 0xED00006576697461;
          goto LABEL_36;
        }
LABEL_37:
        v37 = objc_msgSend(v5, sel_uuid);
        if (!v37)
          goto LABEL_76;
        v38 = v37;
        v69 = sub_1CA85B534();
        v70 = v39;

        v40 = v74;
        LODWORD(v68) = swift_isUniquelyReferenced_nonNull_native();
        v75 = v40;
        v42 = sub_1CA25123C(v69, v70, (void (*)(_BYTE *, uint64_t, uint64_t))MEMORY[0x1E0DEA758], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1CA2514F0);
        v43 = v40[2];
        v44 = (v41 & 1) == 0;
        v45 = v43 + v44;
        if (__OFADD__(v43, v44))
          goto LABEL_74;
        if (v40[3] >= v45)
        {
          if ((v68 & 1) == 0)
          {
            v68 = v42;
            LODWORD(v74) = v41;
            sub_1CA264AAC(&qword_1EF94B1F8);
            LOBYTE(v41) = (_BYTE)v74;
            v42 = v68;
          }
        }
        else
        {
          LODWORD(v74) = v41;
          sub_1CA25A06C(v45, v68, &qword_1EF94B1F8);
          v46 = sub_1CA25123C(v69, v70, (void (*)(_BYTE *, uint64_t, uint64_t))MEMORY[0x1E0DEA758], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1CA2514F0);
          v47 = v41 & 1;
          LOBYTE(v41) = (_BYTE)v74;
          if ((v74 & 1) != v47)
            goto LABEL_77;
          v42 = v46;
        }
        v48 = v75;
        v74 = v75;
        if ((v41 & 1) != 0)
        {
          v69 = v75[7];
          v49 = 8 * v42;
          swift_bridgeObjectRelease();
          *(_QWORD *)(v69 + v49) = v28;
        }
        else
        {
          v75[(v42 >> 6) + 8] |= 1 << v42;
          v50 = (_QWORD *)(v48[6] + 16 * v42);
          v51 = v70;
          *v50 = v69;
          v50[1] = v51;
          *(_QWORD *)(v48[7] + 8 * v42) = v28;
          v52 = v48[2];
          v53 = __OFADD__(v52, 1);
          v54 = v52 + 1;
          if (v53)
            goto LABEL_75;
          v48[2] = v54;
          swift_bridgeObjectRetain();
        }

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_5;
      }
      switch(v32)
      {
        case 0u:
LABEL_69:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1CA2508EC();
          swift_allocError();
          *(_WORD *)v63 = 0;
          break;
        case 4u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1CA2508EC();
          swift_allocError();
          v65 = 4;
LABEL_71:
          *(_WORD *)v63 = v65;
          break;
        case 1u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1CA2508EC();
          swift_allocError();
          v65 = 1;
          goto LABEL_71;
        default:
          v66 = v32;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1CA2508EC();
          swift_allocError();
          *(_WORD *)v63 = v66;
          break;
      }
LABEL_61:
      *(_BYTE *)(v63 + 2) = 0;
      swift_willThrow();
      swift_release();

      return v15;
    default:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1CA2508EC();
      swift_allocError();
      *(_WORD *)v63 = v31;
      goto LABEL_61;
  }
}

uint64_t sub_1CA2501B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t i;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  char v33;
  uint64_t v34;
  uint64_t v35;
  int64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int64_t v40;

  v4 = type metadata accessor for Song();
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (uint64_t *)((char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = MEMORY[0x1E0C80A78](v5);
  v10 = (uint64_t *)((char *)&v34 - v9);
  result = MEMORY[0x1E0C80A78](v8);
  v14 = (char *)&v34 - v13;
  if (a1 == a2)
    return 1;
  if (*(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v15 = 0;
  v16 = *(_QWORD *)(a1 + 56);
  v35 = a1 + 56;
  v17 = 1 << *(_BYTE *)(a1 + 32);
  if (v17 < 64)
    v18 = ~(-1 << v17);
  else
    v18 = -1;
  v19 = v18 & v16;
  v36 = (unint64_t)(v17 + 63) >> 6;
  v20 = a2 + 56;
  v37 = v12;
  v38 = a1;
  if (!v19)
    goto LABEL_8;
LABEL_7:
  v39 = (v19 - 1) & v19;
  v40 = v15;
  for (i = __clz(__rbit64(v19)) | (v15 << 6); ; i = __clz(__rbit64(v23)) + (v24 << 6))
  {
    v26 = *(_QWORD *)(v12 + 72);
    sub_1CA24EE38(*(_QWORD *)(a1 + 48) + v26 * i, (uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for Song);
    v27 = v14;
    sub_1CA24EE7C((uint64_t)v14, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for Song);
    sub_1CA85C368();
    swift_bridgeObjectRetain();
    sub_1CA85B4B0();
    swift_bridgeObjectRelease();
    v28 = sub_1CA85C3B0();
    v29 = -1 << *(_BYTE *)(a2 + 32);
    v30 = v28 & ~v29;
    if (((*(_QWORD *)(v20 + ((v30 >> 3) & 0xFFFFFFFFFFFFF8)) >> v30) & 1) == 0)
    {
LABEL_37:
      sub_1CA2669CC((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for Song);
      return 0;
    }
    v31 = ~v29;
    while (1)
    {
      sub_1CA24EE38(*(_QWORD *)(a2 + 48) + v30 * v26, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for Song);
      if (*v7 == *v10 && v7[1] == v10[1])
        break;
      v33 = sub_1CA85C284();
      sub_1CA2669CC((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for Song);
      if ((v33 & 1) != 0)
        goto LABEL_34;
      v30 = (v30 + 1) & v31;
      if (((*(_QWORD *)(v20 + ((v30 >> 3) & 0xFFFFFFFFFFFFF8)) >> v30) & 1) == 0)
        goto LABEL_37;
    }
    sub_1CA2669CC((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for Song);
LABEL_34:
    result = sub_1CA2669CC((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for Song);
    v12 = v37;
    a1 = v38;
    v14 = v27;
    v19 = v39;
    v15 = v40;
    if (v39)
      goto LABEL_7;
LABEL_8:
    v22 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v22 >= v36)
      return 1;
    v23 = *(_QWORD *)(v35 + 8 * v22);
    v24 = v15 + 1;
    if (!v23)
    {
      v24 = v15 + 2;
      if (v15 + 2 >= v36)
        return 1;
      v23 = *(_QWORD *)(v35 + 8 * v24);
      if (!v23)
      {
        v24 = v15 + 3;
        if (v15 + 3 >= v36)
          return 1;
        v23 = *(_QWORD *)(v35 + 8 * v24);
        if (!v23)
        {
          v24 = v15 + 4;
          if (v15 + 4 >= v36)
            return 1;
          v23 = *(_QWORD *)(v35 + 8 * v24);
          if (!v23)
            break;
        }
      }
    }
LABEL_23:
    v39 = (v23 - 1) & v23;
    v40 = v24;
  }
  v25 = v15 + 5;
  if (v15 + 5 >= v36)
    return 1;
  v23 = *(_QWORD *)(v35 + 8 * v25);
  if (v23)
  {
    v24 = v15 + 5;
    goto LABEL_23;
  }
  while (1)
  {
    v24 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v24 >= v36)
      return 1;
    v23 = *(_QWORD *)(v35 + 8 * v24);
    ++v25;
    if (v23)
      goto LABEL_23;
  }
LABEL_40:
  __break(1u);
  return result;
}

void sub_1CA250508(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  id v22;
  char v23;
  uint64_t v24;
  id v25;
  char v26;
  uint64_t v27;
  int64_t v28;
  int64_t v29;

  v4 = a2 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (a1 < 0)
      v5 = a1;
    else
      v5 = a1 & 0xFFFFFFFFFFFFFF8;
    if (v4)
    {
      sub_1CA85BE28();
      return;
    }
    v6 = v5;
    v7 = a2;
    goto LABEL_13;
  }
  if (v4)
  {
    if (a2 < 0)
      v6 = a2;
    else
      v6 = a2 & 0xFFFFFFFFFFFFFF8;
    v7 = a1;
LABEL_13:
    sub_1CA266A54(v6, v7);
    return;
  }
  if (a1 == a2 || *(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16))
    return;
  v27 = a1 + 56;
  v8 = 1 << *(_BYTE *)(a1 + 32);
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(a1 + 56);
  sub_1CA24EEC0(0, (unint64_t *)&qword_1EF94B000);
  v11 = 0;
  v28 = (unint64_t)(v8 + 63) >> 6;
  v12 = a2 + 56;
  while (1)
  {
    if (v10)
    {
      v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v14 = v13 | (v11 << 6);
      goto LABEL_39;
    }
    v15 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_49;
    }
    if (v15 >= v28)
      return;
    v16 = *(_QWORD *)(v27 + 8 * v15);
    ++v11;
    if (!v16)
    {
      v11 = v15 + 1;
      if (v15 + 1 >= v28)
        return;
      v16 = *(_QWORD *)(v27 + 8 * v11);
      if (!v16)
      {
        v11 = v15 + 2;
        if (v15 + 2 >= v28)
          return;
        v16 = *(_QWORD *)(v27 + 8 * v11);
        if (!v16)
        {
          v11 = v15 + 3;
          if (v15 + 3 >= v28)
            return;
          v16 = *(_QWORD *)(v27 + 8 * v11);
          if (!v16)
            break;
        }
      }
    }
LABEL_38:
    v10 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v11 << 6);
LABEL_39:
    v18 = *(id *)(*(_QWORD *)(a1 + 48) + 8 * v14);
    v19 = sub_1CA85BC78();
    v20 = -1 << *(_BYTE *)(a2 + 32);
    v21 = v19 & ~v20;
    if (((*(_QWORD *)(v12 + ((v21 >> 3) & 0xFFFFFFFFFFFFF8)) >> v21) & 1) == 0)
      goto LABEL_46;
    v29 = v11;
    v22 = *(id *)(*(_QWORD *)(a2 + 48) + 8 * v21);
    v23 = sub_1CA85BC84();

    if ((v23 & 1) == 0)
    {
      v24 = ~v20;
      while (1)
      {
        v21 = (v21 + 1) & v24;
        if (((*(_QWORD *)(v12 + ((v21 >> 3) & 0xFFFFFFFFFFFFF8)) >> v21) & 1) == 0)
          break;
        v25 = *(id *)(*(_QWORD *)(a2 + 48) + 8 * v21);
        v26 = sub_1CA85BC84();

        if ((v26 & 1) != 0)
          goto LABEL_20;
      }
LABEL_46:

      return;
    }
LABEL_20:

    v11 = v29;
  }
  v17 = v15 + 4;
  if (v17 >= v28)
    return;
  v16 = *(_QWORD *)(v27 + 8 * v17);
  if (v16)
  {
    v11 = v17;
    goto LABEL_38;
  }
  while (1)
  {
    v11 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v11 >= v28)
      return;
    v16 = *(_QWORD *)(v27 + 8 * v11);
    ++v17;
    if (v16)
      goto LABEL_38;
  }
LABEL_49:
  __break(1u);
}

uint64_t sub_1CA25081C(uint64_t a1, uint64_t a2)
{
  return sub_1CA25123C(a1, a2, (void (*)(_BYTE *, uint64_t, uint64_t))MEMORY[0x1E0DEA758], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1CA2514F0);
}

unint64_t sub_1CA250830(_QWORD *a1)
{
  uint64_t v2;

  sub_1CA85C368();
  swift_bridgeObjectRetain();
  sub_1CA85B4B0();
  swift_bridgeObjectRelease();
  v2 = sub_1CA85C3B0();
  return sub_1CA2515D0(a1, v2);
}

unint64_t sub_1CA2508A0(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1CA85BC78();
  return sub_1CA25189C(a1, v2, (unint64_t *)&qword_1EF94AE20);
}

unint64_t sub_1CA2508EC()
{
  unint64_t result;

  result = qword_1EF94AE00;
  if (!qword_1EF94AE00)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8D4A78, &type metadata for PhotosChallengeAlgorithmEvaluator.Error);
    atomic_store(result, (unint64_t *)&qword_1EF94AE00);
  }
  return result;
}

unint64_t sub_1CA250930(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1CA85BE64();
  return sub_1CA251708(a1, v2);
}

unint64_t sub_1CA250960(uint64_t a1)
{
  uint64_t v2;

  sub_1CA85C368();
  sub_1CA85BC00();
  v2 = sub_1CA85C3B0();
  return sub_1CA2517CC(a1, v2);
}

unint64_t sub_1CA2509B8(uint64_t a1)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  sub_1CA85AAFC();
  v2 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D76708];
  sub_1CA23CC98(&qword_1EF94B1C8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D76708], MEMORY[0x1E0D76720]);
  v3 = sub_1CA85B498();
  return sub_1CA2520C0(a1, v3, v2, &qword_1EF94B1D8, MEMORY[0x1E0D76728]);
}

unint64_t sub_1CA250A50(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1CA85BC78();
  return sub_1CA25189C(a1, v2, (unint64_t *)&qword_1ED8723C0);
}

unint64_t sub_1CA250A9C(uint64_t a1)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  sub_1CA85AE74();
  v2 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D76FC0];
  sub_1CA23CC98((unint64_t *)&qword_1EF94B180, (uint64_t (*)(uint64_t))MEMORY[0x1E0D76FC0], MEMORY[0x1E0D76FD0]);
  v3 = sub_1CA85B498();
  return sub_1CA2520C0(a1, v3, v2, &qword_1EF94B188, MEMORY[0x1E0D76FD8]);
}

unint64_t sub_1CA250B34(uint64_t a1)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  sub_1CA85AEEC();
  v2 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D77038];
  sub_1CA23CC98(&qword_1EF94B138, (uint64_t (*)(uint64_t))MEMORY[0x1E0D77038], MEMORY[0x1E0D77048]);
  v3 = sub_1CA85B498();
  return sub_1CA2520C0(a1, v3, v2, &qword_1EF94B140, MEMORY[0x1E0D77050]);
}

unint64_t sub_1CA250BCC(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1CA85C35C();
  return sub_1CA251F20(a1, v2);
}

unint64_t sub_1CA250C04(unsigned __int8 a1)
{
  uint64_t v2;

  sub_1CA85C368();
  sub_1CA85C374();
  v2 = sub_1CA85C3B0();
  return sub_1CA2519AC(a1, v2);
}

void sub_1CA250C5C(char a1)
{
  sub_1CA85C368();
  __asm { BR              X10 }
}

uint64_t sub_1CA250CAC()
{
  uint64_t v0;
  uint64_t v1;

  sub_1CA85B4B0();
  swift_bridgeObjectRelease();
  v1 = sub_1CA85C3B0();
  return sub_1CA251A4C(v0, v1);
}

unint64_t sub_1CA250D6C(uint64_t a1)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  sub_1CA85A5B0();
  v2 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870];
  sub_1CA23CC98((unint64_t *)&qword_1ED871190, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08A8]);
  v3 = sub_1CA85B498();
  return sub_1CA2520C0(a1, v3, v2, (unint64_t *)&unk_1ED8711B0, MEMORY[0x1E0CB08B8]);
}

unint64_t sub_1CA250E04(uint64_t a1)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  sub_1CA85ACD0();
  v2 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D76BC0];
  sub_1CA23CC98(&qword_1EF94B168, (uint64_t (*)(uint64_t))MEMORY[0x1E0D76BC0], MEMORY[0x1E0D76BD0]);
  v3 = sub_1CA85B498();
  return sub_1CA2520C0(a1, v3, v2, &qword_1EF94B170, MEMORY[0x1E0D76BD8]);
}

unint64_t sub_1CA250E9C(unsigned __int16 a1)
{
  uint64_t v2;

  sub_1CA85C368();
  sub_1CA85C38C();
  v2 = sub_1CA85C3B0();
  return sub_1CA251CAC(a1, v2);
}

unint64_t sub_1CA250EF4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1CA85C368();
  sub_1CA85C380();
  if (a2)
  {
    swift_bridgeObjectRetain();
    sub_1CA85B4B0();
    swift_bridgeObjectRelease();
  }
  v4 = sub_1CA85C3B0();
  return sub_1CA251D4C(a1, a2, v4);
}

unint64_t sub_1CA250F84(uint64_t a1)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  sub_1CA85AC4C();
  v2 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D76A08];
  sub_1CA23CC98(&qword_1EF94B088, (uint64_t (*)(uint64_t))MEMORY[0x1E0D76A08], MEMORY[0x1E0D76A18]);
  v3 = sub_1CA85B498();
  return sub_1CA2520C0(a1, v3, v2, &qword_1EF94B090, MEMORY[0x1E0D76A20]);
}

unint64_t sub_1CA25101C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1CA85BC78();
  return sub_1CA251E14(a1, v2);
}

unint64_t sub_1CA25104C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1CA85BC78();
  return sub_1CA25189C(a1, v2, (unint64_t *)&qword_1EF94AB50);
}

unint64_t sub_1CA251098(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1CA85BC78();
  return sub_1CA25189C(a1, v2, (unint64_t *)&unk_1EF958770);
}

unint64_t sub_1CA2510E4(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1CA85BC78();
  return sub_1CA25189C(a1, v2, &qword_1EF94B030);
}

unint64_t sub_1CA251130(uint64_t a1)
{
  uint64_t v2;

  sub_1CA85C368();
  sub_1CA85C374();
  v2 = sub_1CA85C3B0();
  return sub_1CA251F20(a1, v2);
}

unint64_t sub_1CA251188(uint64_t a1)
{
  return sub_1CA25119C(a1, (void (*)(_BYTE *, uint64_t))sub_1CA266BA4, (uint64_t (*)(uint64_t, uint64_t))sub_1CA250508);
}

unint64_t sub_1CA25119C(uint64_t a1, void (*a2)(_BYTE *, uint64_t), uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v6;
  _BYTE v8[72];

  sub_1CA85C368();
  a2(v8, a1);
  v6 = sub_1CA85C3B0();
  return sub_1CA251FBC(a1, v6, a3);
}

unint64_t sub_1CA251214(uint64_t a1)
{
  return sub_1CA25119C(a1, (void (*)(_BYTE *, uint64_t))sub_1CA381DDC, (uint64_t (*)(uint64_t, uint64_t))sub_1CA2A86F4);
}

uint64_t sub_1CA251228(uint64_t a1, uint64_t a2)
{
  return sub_1CA25123C(a1, a2, (void (*)(_BYTE *, uint64_t, uint64_t))MEMORY[0x1E0DEA2A0], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1CA2514F0);
}

uint64_t sub_1CA25123C(uint64_t a1, uint64_t a2, void (*a3)(_BYTE *, uint64_t, uint64_t), uint64_t (*a4)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v7;
  _BYTE v10[72];

  sub_1CA85C368();
  a3(v10, a1, a2);
  v7 = sub_1CA85C3B0();
  return a4(a1, a2, v7);
}

unint64_t sub_1CA2512B4(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1CA85BC78();
  return sub_1CA25189C(a1, v2, (unint64_t *)&qword_1ED8731F8);
}

unint64_t sub_1CA251300(uint64_t a1)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  sub_1CA85AB98();
  v2 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D767B8];
  sub_1CA23CC98(&qword_1EF94AEF8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D767B8], MEMORY[0x1E0D767C8]);
  v3 = sub_1CA85B498();
  return sub_1CA2520C0(a1, v3, v2, &qword_1EF94AF00, MEMORY[0x1E0D767D0]);
}

unint64_t sub_1CA251398(double a1, double a2)
{
  uint64_t v4;

  sub_1CA85C368();
  CLLocationCoordinate2D.hash(into:)();
  v4 = sub_1CA85C3B0();
  return sub_1CA2521F0(v4, a1, a2);
}

unint64_t sub_1CA2513F8(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1CA85BC78();
  return sub_1CA25189C(a1, v2, (unint64_t *)&qword_1EF959B60);
}

unint64_t sub_1CA251444(uint64_t a1)
{
  id v2;
  uint64_t v3;

  sub_1CA85C368();
  sub_1CA85A5B0();
  sub_1CA23CC98((unint64_t *)&qword_1ED871190, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08A8]);
  sub_1CA85B4A4();
  v2 = *(id *)(a1 + *(int *)(type metadata accessor for DateAndLocation() + 20));
  sub_1CA85BC90();

  v3 = sub_1CA85C3B0();
  return sub_1CA252264(a1, v3);
}

unint64_t sub_1CA2514F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v9;
  _QWORD *v10;
  BOOL v11;
  uint64_t v12;
  _QWORD *v13;
  BOOL v14;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * v6);
    v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_1CA85C284() & 1) == 0)
    {
      v12 = ~v5;
      do
      {
        v6 = (v6 + 1) & v12;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          break;
        v13 = (_QWORD *)(v9 + 16 * v6);
        v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_1CA85C284() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_1CA2515D0(_QWORD *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v14;
  uint64_t v16;

  v5 = type metadata accessor for Song();
  MEMORY[0x1E0C80A78](v5);
  v8 = (uint64_t *)((char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = -1 << *(_BYTE *)(v2 + 32);
  v10 = a2 & ~v9;
  if (((*(_QWORD *)(v2 + 64 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
  {
    v11 = ~v9;
    v12 = *(_QWORD *)(v6 + 72);
    while (1)
    {
      sub_1CA24EE38(*(_QWORD *)(v2 + 48) + v12 * v10, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for Song);
      if (*v8 == *a1 && v8[1] == a1[1])
        break;
      v14 = sub_1CA85C284();
      sub_1CA2669CC((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for Song);
      if ((v14 & 1) == 0)
      {
        v10 = (v10 + 1) & v11;
        if (((*(_QWORD *)(v2 + 64 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
          continue;
      }
      return v10;
    }
    sub_1CA2669CC((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for Song);
  }
  return v10;
}

unint64_t sub_1CA251708(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v6;
  char v7;
  _BYTE v9[40];

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v6 = ~v3;
    do
    {
      sub_1CA266900(*(_QWORD *)(v2 + 48) + 40 * v4, (uint64_t)v9);
      v7 = MEMORY[0x1CAA4DCD4](v9, a1);
      sub_1CA26693C((uint64_t)v9);
      if ((v7 & 1) != 0)
        break;
      v4 = (v4 + 1) & v6;
    }
    while (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

unint64_t sub_1CA2517CC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t i;
  uint64_t v6;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  i = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
  {
    if (sub_1CA85BC0C())
    {
      v6 = ~v4;
      for (i = (i + 1) & v6; ((*(_QWORD *)(v3 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0; i = (i + 1) & v6)
      {
        if (!sub_1CA85BC0C())
          break;
      }
    }
  }
  return i;
}

unint64_t sub_1CA25189C(uint64_t a1, uint64_t a2, unint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t i;
  id v7;
  char v8;
  uint64_t v9;
  id v10;
  char v11;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  i = a2 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
  {
    sub_1CA24EEC0(0, a3);
    v7 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * i);
    v8 = sub_1CA85BC84();

    if ((v8 & 1) == 0)
    {
      v9 = ~v5;
      for (i = (i + 1) & v9; ((*(_QWORD *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0; i = (i + 1) & v9)
      {
        v10 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * i);
        v11 = sub_1CA85BC84();

        if ((v11 & 1) != 0)
          break;
      }
    }
  }
  return i;
}

unint64_t sub_1CA2519AC(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (*(unsigned __int8 *)(v7 + result) != a1)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (*(unsigned __int8 *)(v7 + result) == a1)
          break;
      }
    }
  }
  return result;
}

uint64_t sub_1CA251A4C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;

  v3 = a2 & ~(-1 << *(_BYTE *)(v2 + 32));
  if (((*(_QWORD *)(v2 + 64 + ((v3 >> 3) & 0xFFFFFFFFFFFFF8)) >> v3) & 1) != 0)
    __asm { BR              X9 }
  return a2 & ~(-1 << *(_BYTE *)(v2 + 32));
}

unint64_t sub_1CA251CAC(unsigned __int16 a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (*(unsigned __int16 *)(v7 + 2 * result) != a1)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (*(unsigned __int16 *)(v7 + 2 * result) == a1)
          break;
      }
    }
  }
  return result;
}

unint64_t sub_1CA251D4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  BOOL v13;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v9 = ~v5;
    v10 = *(_QWORD *)(v3 + 48);
    do
    {
      v11 = (_QWORD *)(v10 + 16 * v6);
      v12 = v11[1];
      if (v12)
      {
        if (a2)
        {
          v13 = *v11 == a1 && v12 == a2;
          if (v13 || (sub_1CA85C284() & 1) != 0)
            return v6;
        }
      }
      else if (!a2)
      {
        return v6;
      }
      v6 = (v6 + 1) & v9;
    }
    while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
  }
  return v6;
}

unint64_t sub_1CA251E14(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t i;
  id v6;
  char v7;
  uint64_t v8;
  id v9;
  char v10;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  i = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED8731D0);
    v6 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * i);
    v7 = sub_1CA85BC84();

    if ((v7 & 1) == 0)
    {
      v8 = ~v4;
      for (i = (i + 1) & v8; ((*(_QWORD *)(v3 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0; i = (i + 1) & v8)
      {
        v9 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * i);
        v10 = sub_1CA85BC84();

        if ((v10 & 1) != 0)
          break;
      }
    }
  }
  return i;
}

unint64_t sub_1CA251F20(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (*(_QWORD *)(v7 + 8 * result) != a1)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (*(_QWORD *)(v7 + 8 * result) == a1)
          break;
      }
    }
  }
  return result;
}

unint64_t sub_1CA251FBC(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t i;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  char v13;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  i = a2 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
  {
    v9 = swift_bridgeObjectRetain();
    v10 = a3(v9, a1);
    swift_bridgeObjectRelease();
    if ((v10 & 1) == 0)
    {
      v11 = ~v5;
      for (i = (i + 1) & v11; ((*(_QWORD *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0; i = (i + 1) & v11)
      {
        v12 = swift_bridgeObjectRetain();
        v13 = a3(v12, a1);
        swift_bridgeObjectRelease();
        if ((v13 & 1) != 0)
          break;
      }
    }
  }
  return i;
}

unint64_t sub_1CA2520C0(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), unint64_t *a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, unint64_t, uint64_t);
  char v17;
  uint64_t v19;
  uint64_t (*v20)(uint64_t);
  unint64_t *v21;
  uint64_t v22;

  v21 = a4;
  v22 = a5;
  v6 = v5;
  v19 = a1;
  v20 = a3;
  v8 = a3(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v19 - v10;
  v12 = -1 << *(_BYTE *)(v6 + 32);
  v13 = a2 & ~v12;
  if (((*(_QWORD *)(v6 + 64 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0)
  {
    v14 = ~v12;
    v15 = *(_QWORD *)(v9 + 72);
    v16 = *(void (**)(char *, unint64_t, uint64_t))(v9 + 16);
    do
    {
      v16(v11, *(_QWORD *)(v6 + 48) + v15 * v13, v8);
      sub_1CA23CC98(v21, v20, v22);
      v17 = sub_1CA85B504();
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
      if ((v17 & 1) != 0)
        break;
      v13 = (v13 + 1) & v14;
    }
    while (((*(_QWORD *)(v6 + 64 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0);
  }
  return v13;
}

unint64_t sub_1CA2521F0(uint64_t a1, double a2, double a3)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t result;
  uint64_t v6;
  double *v7;
  double v8;
  BOOL v9;

  v4 = -1 << *(_BYTE *)(v3 + 32);
  result = a1 & ~v4;
  if (((*(_QWORD *)(v3 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v6 = ~v4;
    do
    {
      v7 = (double *)(*(_QWORD *)(v3 + 48) + 16 * result);
      v8 = v7[1];
      v9 = *v7 == a2;
      if (v8 == a3 && v9)
        break;
      result = (result + 1) & v6;
    }
    while (((*(_QWORD *)(v3 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0);
  }
  return result;
}

unint64_t sub_1CA252264(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v4 = type metadata accessor for DateAndLocation();
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = -1 << *(_BYTE *)(v2 + 32);
  v9 = a2 & ~v8;
  if (((*(_QWORD *)(v2 + 64 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) != 0)
  {
    v10 = ~v8;
    v11 = *(_QWORD *)(v5 + 72);
    while (1)
    {
      sub_1CA24EE38(*(_QWORD *)(v2 + 48) + v11 * v9, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for DateAndLocation);
      if ((sub_1CA85A568() & 1) != 0)
      {
        sub_1CA24EEC0(0, (unint64_t *)&qword_1ED8723E0);
        if ((sub_1CA85BC84() & 1) != 0)
          break;
      }
      sub_1CA2669CC((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for DateAndLocation);
      v9 = (v9 + 1) & v10;
      if (((*(_QWORD *)(v2 + 64 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
        return v9;
    }
    sub_1CA2669CC((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for DateAndLocation);
  }
  return v9;
}

uint64_t sub_1CA2523BC(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  void *v29;
  __int16 v30;
  id v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94AE18);
  v6 = sub_1CA85C0B0();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v33 = v2;
  v34 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v11 = (unint64_t)(v8 + 63) >> 6;
  v12 = v6 + 64;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v10)
    {
      v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v20 = v19 | (v14 << 6);
      goto LABEL_31;
    }
    v21 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v11)
      break;
    v22 = (_QWORD *)(v5 + 64);
    v23 = *(_QWORD *)(v34 + 8 * v21);
    ++v14;
    if (!v23)
    {
      v14 = v21 + 1;
      if (v21 + 1 >= v11)
        goto LABEL_33;
      v23 = *(_QWORD *)(v34 + 8 * v14);
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v11)
        {
LABEL_33:
          swift_release();
          v3 = v33;
          if ((a2 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v23 = *(_QWORD *)(v34 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            v14 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_42;
            if (v14 >= v11)
              goto LABEL_33;
            v23 = *(_QWORD *)(v34 + 8 * v14);
            ++v24;
            if (v23)
              goto LABEL_30;
          }
        }
        v14 = v24;
      }
    }
LABEL_30:
    v10 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v14 << 6);
LABEL_31:
    v29 = *(void **)(*(_QWORD *)(v5 + 48) + 8 * v20);
    v30 = *(_WORD *)(*(_QWORD *)(v5 + 56) + 2 * v20);
    if ((a2 & 1) == 0)
      v31 = v29;
    result = sub_1CA85BC78();
    v15 = -1 << *(_BYTE *)(v7 + 32);
    v16 = result & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v27 = v17 == v26;
        if (v17 == v26)
          v17 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v12 + 8 * v17);
      }
      while (v28 == -1);
      v18 = __clz(__rbit64(~v28)) + (v17 << 6);
    }
    *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    *(_QWORD *)(*(_QWORD *)(v7 + 48) + 8 * v18) = v29;
    *(_WORD *)(*(_QWORD *)(v7 + 56) + 2 * v18) = v30;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v33;
  v22 = (_QWORD *)(v5 + 64);
  if ((a2 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v32 = 1 << *(_BYTE *)(v5 + 32);
  if (v32 >= 64)
    bzero(v22, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v32;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1CA252680(uint64_t a1, char a2)
{
  return sub_1CA25D210(a1, a2, &qword_1EF94AE28);
}

uint64_t sub_1CA25268C(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  _QWORD *v24;
  unint64_t v25;
  int64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  int64_t v40;
  uint64_t v41;
  char v42;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED872508);
  v42 = a2;
  v6 = sub_1CA85C0B0();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v41 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v39 = v2;
  v40 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v21 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v22 = v21 | (v13 << 6);
      goto LABEL_31;
    }
    v23 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v23 >= v40)
      break;
    v24 = (_QWORD *)(v5 + 64);
    v25 = *(_QWORD *)(v41 + 8 * v23);
    ++v13;
    if (!v25)
    {
      v13 = v23 + 1;
      if (v23 + 1 >= v40)
        goto LABEL_33;
      v25 = *(_QWORD *)(v41 + 8 * v13);
      if (!v25)
      {
        v26 = v23 + 2;
        if (v26 >= v40)
        {
LABEL_33:
          swift_release();
          v3 = v39;
          if ((v42 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v25 = *(_QWORD *)(v41 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            v13 = v26 + 1;
            if (__OFADD__(v26, 1))
              goto LABEL_42;
            if (v13 >= v40)
              goto LABEL_33;
            v25 = *(_QWORD *)(v41 + 8 * v13);
            ++v26;
            if (v25)
              goto LABEL_30;
          }
        }
        v13 = v26;
      }
    }
LABEL_30:
    v10 = (v25 - 1) & v25;
    v22 = __clz(__rbit64(v25)) + (v13 << 6);
LABEL_31:
    v31 = 16 * v22;
    v32 = (uint64_t *)(*(_QWORD *)(v5 + 48) + v31);
    v34 = *v32;
    v33 = v32[1];
    v35 = (uint64_t *)(*(_QWORD *)(v5 + 56) + v31);
    v36 = *v35;
    v37 = v35[1];
    if ((v42 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_1CA85C368();
    sub_1CA85B4B0();
    result = sub_1CA85C3B0();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v27 = 0;
      v28 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v29 = v16 == v28;
        if (v16 == v28)
          v16 = 0;
        v27 |= v29;
        v30 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v30 == -1);
      v17 = __clz(__rbit64(~v30)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = 16 * v17;
    v19 = (_QWORD *)(*(_QWORD *)(v7 + 48) + v18);
    *v19 = v34;
    v19[1] = v33;
    v20 = (_QWORD *)(*(_QWORD *)(v7 + 56) + v18);
    *v20 = v36;
    v20[1] = v37;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v39;
  v24 = (_QWORD *)(v5 + 64);
  if ((v42 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v38 = 1 << *(_BYTE *)(v5 + 32);
  if (v38 >= 64)
    bzero(v24, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v24 = -1 << v38;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1CA2529B0(uint64_t a1, int a2)
{
  return sub_1CA25638C(a1, a2, (uint64_t (*)(_QWORD))MEMORY[0x1E0CB0870], &qword_1ED872510);
}

uint64_t sub_1CA2529C4(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  id v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  char v37;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94B1E0);
  v37 = a2;
  v6 = sub_1CA85C0B0();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v35 = v2;
  v36 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v11 = (unint64_t)(v8 + 63) >> 6;
  v12 = v6 + 64;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v10)
    {
      v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v11)
      break;
    v23 = (_QWORD *)(v5 + 64);
    v24 = *(_QWORD *)(v36 + 8 * v22);
    ++v14;
    if (!v24)
    {
      v14 = v22 + 1;
      if (v22 + 1 >= v11)
        goto LABEL_33;
      v24 = *(_QWORD *)(v36 + 8 * v14);
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v11)
        {
LABEL_33:
          swift_release();
          v3 = v35;
          if ((v37 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v24 = *(_QWORD *)(v36 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            v14 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_42;
            if (v14 >= v11)
              goto LABEL_33;
            v24 = *(_QWORD *)(v36 + 8 * v14);
            ++v25;
            if (v24)
              goto LABEL_30;
          }
        }
        v14 = v25;
      }
    }
LABEL_30:
    v10 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    v30 = 8 * v21;
    v31 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + v30);
    v32 = *(void **)(*(_QWORD *)(v5 + 56) + v30);
    if ((v37 & 1) == 0)
      v33 = v32;
    sub_1CA85C368();
    sub_1CA85BC00();
    result = sub_1CA85C3B0();
    v15 = -1 << *(_BYTE *)(v7 + 32);
    v16 = result & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v28 = v17 == v27;
        if (v17 == v27)
          v17 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = 8 * v18;
    *(_QWORD *)(*(_QWORD *)(v7 + 48) + v19) = v31;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + v19) = v32;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v35;
  v23 = (_QWORD *)(v5 + 64);
  if ((v37 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v34 = 1 << *(_BYTE *)(v5 + 32);
  if (v34 >= 64)
    bzero(v23, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v34;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1CA252CB8(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  id v37;
  id v38;
  uint64_t v39;
  uint64_t *v40;
  int64_t v41;
  _QWORD *v42;
  uint64_t i;
  char v44;
  uint64_t v45;
  __int128 v46;
  __int128 v47;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF94B1E8);
  v44 = a2;
  v6 = sub_1CA85C0B0();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v42 = (_QWORD *)(v5 + 64);
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v40 = v2;
  v41 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  for (i = v5; ; v5 = i)
  {
    if (v10)
    {
      v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v21 = v20 | (v13 << 6);
      goto LABEL_31;
    }
    v22 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v41)
      break;
    v23 = v42;
    v24 = v42[v22];
    ++v13;
    if (!v24)
    {
      v13 = v22 + 1;
      if (v22 + 1 >= v41)
        goto LABEL_33;
      v24 = v42[v13];
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v41)
        {
LABEL_33:
          swift_release();
          v3 = v40;
          if ((v44 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v24 = v42[v25];
        if (!v24)
        {
          while (1)
          {
            v13 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_42;
            if (v13 >= v41)
              goto LABEL_33;
            v24 = v42[v13];
            ++v25;
            if (v24)
              goto LABEL_30;
          }
        }
        v13 = v25;
      }
    }
LABEL_30:
    v10 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v13 << 6);
LABEL_31:
    v30 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v21);
    v32 = *v30;
    v31 = v30[1];
    v33 = *(_QWORD *)(v5 + 56) + (v21 << 6);
    v35 = *(_QWORD *)(v33 + 16);
    v34 = *(_QWORD *)(v33 + 24);
    v36 = *(_BYTE *)(v33 + 32);
    v45 = *(_QWORD *)(v33 + 40);
    v46 = *(_OWORD *)v33;
    v47 = *(_OWORD *)(v33 + 48);
    if ((v44 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      v37 = (id)v46;
      v38 = *((id *)&v46 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_1CA85C368();
    sub_1CA85B4B0();
    result = sub_1CA85C3B0();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v28 = v16 == v27;
        if (v16 == v27)
          v16 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v29 == -1);
      v17 = __clz(__rbit64(~v29)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v17);
    *v18 = v32;
    v18[1] = v31;
    v19 = *(_QWORD *)(v7 + 56) + (v17 << 6);
    *(_OWORD *)v19 = v46;
    *(_QWORD *)(v19 + 16) = v35;
    *(_QWORD *)(v19 + 24) = v34;
    *(_BYTE *)(v19 + 32) = v36;
    *(_QWORD *)(v19 + 40) = v45;
    *(_OWORD *)(v19 + 48) = v47;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v40;
  v23 = v42;
  if ((v44 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v39 = 1 << *(_BYTE *)(v5 + 32);
  if (v39 >= 64)
    bzero(v23, ((unint64_t)(v39 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v39;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1CA253040(uint64_t a1, int a2)
{
  return sub_1CA25B35C(a1, a2, (uint64_t (*)(uint64_t))MEMORY[0x1E0D76708], &qword_1EF94B1D0, &qword_1EF94B1C8, MEMORY[0x1E0D76720]);
}

uint64_t sub_1CA253064(uint64_t a1, char a2)
{
  return sub_1CA25A06C(a1, a2, &qword_1EF94B0C0);
}

uint64_t sub_1CA253070(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t result;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  int64_t v25;
  _QWORD *v26;
  unint64_t v27;
  int64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  char v36;
  unint64_t v37;
  BOOL v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _BYTE v42[4];
  int v43;
  uint64_t *v44;
  int64_t v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _BYTE *v50;
  uint64_t v51;
  uint64_t v52;

  v3 = v2;
  v5 = sub_1CA85B0FC();
  v51 = *(_QWORD *)(v5 - 8);
  v52 = v5;
  MEMORY[0x1E0C80A78](v5);
  v50 = &v42[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = sub_1CA85AAFC();
  v49 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v9 = &v42[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94B1C0);
  v11 = sub_1CA85C0B0();
  v12 = v11;
  if (!*(_QWORD *)(v10 + 16))
    goto LABEL_41;
  v13 = 1 << *(_BYTE *)(v10 + 32);
  v14 = *(_QWORD *)(v10 + 64);
  v46 = (_QWORD *)(v10 + 64);
  if (v13 < 64)
    v15 = ~(-1 << v13);
  else
    v15 = -1;
  v16 = v15 & v14;
  v44 = v2;
  v45 = (unint64_t)(v13 + 63) >> 6;
  v17 = v11 + 64;
  v48 = v10;
  result = swift_retain();
  v19 = 0;
  v43 = a2;
  v20 = 16;
  if ((a2 & 1) != 0)
    v20 = 32;
  v47 = v20;
  v21 = v20;
  while (1)
  {
    if (v16)
    {
      v23 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      v24 = v23 | (v19 << 6);
      goto LABEL_24;
    }
    v25 = v19 + 1;
    if (__OFADD__(v19, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v25 >= v45)
      break;
    v26 = v46;
    v27 = v46[v25];
    ++v19;
    if (!v27)
    {
      v19 = v25 + 1;
      if (v25 + 1 >= v45)
        goto LABEL_34;
      v27 = v46[v19];
      if (!v27)
      {
        v28 = v25 + 2;
        if (v28 >= v45)
        {
LABEL_34:
          v40 = v48;
          swift_release();
          v3 = v44;
          if ((v43 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v27 = v46[v28];
        if (!v27)
        {
          while (1)
          {
            v19 = v28 + 1;
            if (__OFADD__(v28, 1))
              goto LABEL_43;
            if (v19 >= v45)
              goto LABEL_34;
            v27 = v46[v19];
            ++v28;
            if (v27)
              goto LABEL_23;
          }
        }
        v19 = v28;
      }
    }
LABEL_23:
    v16 = (v27 - 1) & v27;
    v24 = __clz(__rbit64(v27)) + (v19 << 6);
LABEL_24:
    v29 = v48;
    v30 = *(_QWORD *)(v49 + 72);
    (*(void (**)(_BYTE *, unint64_t, uint64_t))(v49 + v21))(v9, *(_QWORD *)(v48 + 48) + v30 * v24, v7);
    v31 = *(_QWORD *)(v29 + 56);
    v32 = *(_QWORD *)(v51 + 72);
    (*(void (**)(_BYTE *, unint64_t, uint64_t))(v51 + v21))(v50, v31 + v32 * v24, v52);
    sub_1CA23CC98(&qword_1EF94B1C8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D76708], MEMORY[0x1E0D76720]);
    result = sub_1CA85B498();
    v33 = -1 << *(_BYTE *)(v12 + 32);
    v34 = result & ~v33;
    v35 = v34 >> 6;
    if (((-1 << v34) & ~*(_QWORD *)(v17 + 8 * (v34 >> 6))) != 0)
    {
      v22 = __clz(__rbit64((-1 << v34) & ~*(_QWORD *)(v17 + 8 * (v34 >> 6)))) | v34 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v36 = 0;
      v37 = (unint64_t)(63 - v33) >> 6;
      do
      {
        if (++v35 == v37 && (v36 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v38 = v35 == v37;
        if (v35 == v37)
          v35 = 0;
        v36 |= v38;
        v39 = *(_QWORD *)(v17 + 8 * v35);
      }
      while (v39 == -1);
      v22 = __clz(__rbit64(~v39)) + (v35 << 6);
    }
    *(_QWORD *)(v17 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    (*(void (**)(unint64_t, _BYTE *, uint64_t))(v49 + 32))(*(_QWORD *)(v12 + 48) + v30 * v22, v9, v7);
    result = (*(uint64_t (**)(unint64_t, _BYTE *, uint64_t))(v51 + 32))(*(_QWORD *)(v12 + 56) + v32 * v22, v50, v52);
    ++*(_QWORD *)(v12 + 16);
  }
  v40 = v48;
  swift_release();
  v3 = v44;
  v26 = v46;
  if ((v43 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v41 = 1 << *(_BYTE *)(v40 + 32);
  if (v41 >= 64)
    bzero(v26, ((unint64_t)(v41 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v26 = -1 << v41;
  *(_QWORD *)(v40 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v12;
  return result;
}

uint64_t sub_1CA253468(uint64_t a1, char a2)
{
  return sub_1CA253790(a1, a2, (uint64_t *)&unk_1EF94B100);
}

uint64_t sub_1CA253474(uint64_t a1, char a2)
{
  return sub_1CA2593EC(a1, a2, (uint64_t *)&unk_1ED873278);
}

uint64_t sub_1CA253480(uint64_t a1, char a2)
{
  return sub_1CA25B6F4(a1, a2, &qword_1EF94AE70);
}

uint64_t sub_1CA25348C(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  char v37;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED874B48);
  v37 = a2;
  v6 = sub_1CA85C0B0();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v35 = v2;
  v36 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v11 = (unint64_t)(v8 + 63) >> 6;
  v12 = v6 + 64;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v10)
    {
      v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v11)
      break;
    v23 = (_QWORD *)(v5 + 64);
    v24 = *(_QWORD *)(v36 + 8 * v22);
    ++v14;
    if (!v24)
    {
      v14 = v22 + 1;
      if (v22 + 1 >= v11)
        goto LABEL_33;
      v24 = *(_QWORD *)(v36 + 8 * v14);
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v11)
        {
LABEL_33:
          swift_release();
          v3 = v35;
          if ((v37 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v24 = *(_QWORD *)(v36 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            v14 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_42;
            if (v14 >= v11)
              goto LABEL_33;
            v24 = *(_QWORD *)(v36 + 8 * v14);
            ++v25;
            if (v24)
              goto LABEL_30;
          }
        }
        v14 = v25;
      }
    }
LABEL_30:
    v10 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    v30 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v21);
    v32 = *v30;
    v31 = v30[1];
    v33 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v21);
    if ((v37 & 1) == 0)
      swift_bridgeObjectRetain();
    sub_1CA85C368();
    sub_1CA85B4B0();
    result = sub_1CA85C3B0();
    v15 = -1 << *(_BYTE *)(v7 + 32);
    v16 = result & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v28 = v17 == v27;
        if (v17 == v27)
          v17 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v18);
    *v19 = v32;
    v19[1] = v31;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v18) = v33;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v35;
  v23 = (_QWORD *)(v5 + 64);
  if ((v37 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v34 = 1 << *(_BYTE *)(v5 + 32);
  if (v34 >= 64)
    bzero(v23, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v34;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1CA253790(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t *v35;
  int64_t v36;
  uint64_t v37;
  char v38;

  v4 = v3;
  v6 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  v38 = a2;
  v7 = sub_1CA85C0B0();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
    goto LABEL_40;
  v9 = 1 << *(_BYTE *)(v6 + 32);
  v37 = v6 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v6 + 64);
  v35 = v3;
  v36 = (unint64_t)(v9 + 63) >> 6;
  v12 = v7 + 64;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v11)
    {
      v20 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v36)
      break;
    v23 = (_QWORD *)(v6 + 64);
    v24 = *(_QWORD *)(v37 + 8 * v22);
    ++v14;
    if (!v24)
    {
      v14 = v22 + 1;
      if (v22 + 1 >= v36)
        goto LABEL_33;
      v24 = *(_QWORD *)(v37 + 8 * v14);
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v36)
        {
LABEL_33:
          swift_release();
          v4 = v35;
          if ((v38 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v24 = *(_QWORD *)(v37 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            v14 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_42;
            if (v14 >= v36)
              goto LABEL_33;
            v24 = *(_QWORD *)(v37 + 8 * v14);
            ++v25;
            if (v24)
              goto LABEL_30;
          }
        }
        v14 = v25;
      }
    }
LABEL_30:
    v11 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    v30 = (uint64_t *)(*(_QWORD *)(v6 + 48) + 16 * v21);
    v32 = *v30;
    v31 = v30[1];
    v33 = *(_BYTE *)(*(_QWORD *)(v6 + 56) + v21);
    if ((v38 & 1) == 0)
      swift_bridgeObjectRetain();
    sub_1CA85C368();
    sub_1CA85B4B0();
    result = sub_1CA85C3B0();
    v15 = -1 << *(_BYTE *)(v8 + 32);
    v16 = result & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v28 = v17 == v27;
        if (v17 == v27)
          v17 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 16 * v18);
    *v19 = v32;
    v19[1] = v31;
    *(_BYTE *)(*(_QWORD *)(v8 + 56) + v18) = v33;
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release();
  v4 = v35;
  v23 = (_QWORD *)(v6 + 64);
  if ((v38 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v34 = 1 << *(_BYTE *)(v6 + 32);
  if (v34 >= 64)
    bzero(v23, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v34;
  *(_QWORD *)(v6 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v4 = v8;
  return result;
}

uint64_t sub_1CA253A94(uint64_t a1, char a2)
{
  return sub_1CA25A06C(a1, a2, &qword_1EF94AE78);
}

uint64_t sub_1CA253AA0(uint64_t a1, char a2)
{
  return sub_1CA25C2C4(a1, a2, &qword_1EF94B1B0);
}

uint64_t sub_1CA253AAC(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  unint64_t v14;
  _QWORD *v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  _OWORD *v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  int64_t v33;
  _QWORD *v34;
  _OWORD v35[2];

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94AEB8);
  v6 = sub_1CA85C0B0();
  v7 = v6;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 1 << *(_BYTE *)(v5 + 32);
    v34 = (_QWORD *)(v5 + 64);
    if (v8 < 64)
      v9 = ~(-1 << v8);
    else
      v9 = -1;
    v10 = v9 & *(_QWORD *)(v5 + 64);
    v33 = (unint64_t)(v8 + 63) >> 6;
    v11 = v6 + 64;
    result = swift_retain();
    v13 = 0;
    while (1)
    {
      if (v10)
      {
        v16 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v17 = v16 | (v13 << 6);
      }
      else
      {
        v18 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v18 >= v33)
          goto LABEL_34;
        v19 = v34[v18];
        ++v13;
        if (!v19)
        {
          v13 = v18 + 1;
          if (v18 + 1 >= v33)
            goto LABEL_34;
          v19 = v34[v13];
          if (!v19)
          {
            v20 = v18 + 2;
            if (v20 >= v33)
            {
LABEL_34:
              swift_release();
              v3 = v2;
              if ((a2 & 1) != 0)
              {
                v32 = 1 << *(_BYTE *)(v5 + 32);
                if (v32 >= 64)
                  bzero(v34, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v34 = -1 << v32;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v19 = v34[v20];
            if (!v19)
            {
              while (1)
              {
                v13 = v20 + 1;
                if (__OFADD__(v20, 1))
                  goto LABEL_41;
                if (v13 >= v33)
                  goto LABEL_34;
                v19 = v34[v13];
                ++v20;
                if (v19)
                  goto LABEL_21;
              }
            }
            v13 = v20;
          }
        }
LABEL_21:
        v10 = (v19 - 1) & v19;
        v17 = __clz(__rbit64(v19)) + (v13 << 6);
      }
      v21 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v17);
      v23 = *v21;
      v22 = v21[1];
      v24 = (_OWORD *)(*(_QWORD *)(v5 + 56) + 32 * v17);
      if ((a2 & 1) != 0)
      {
        sub_1CA266A44(v24, v35);
      }
      else
      {
        sub_1CA266A08((uint64_t)v24, (uint64_t)v35);
        swift_bridgeObjectRetain();
      }
      sub_1CA85C368();
      sub_1CA85B4B0();
      result = sub_1CA85C3B0();
      v25 = -1 << *(_BYTE *)(v7 + 32);
      v26 = result & ~v25;
      v27 = v26 >> 6;
      if (((-1 << v26) & ~*(_QWORD *)(v11 + 8 * (v26 >> 6))) != 0)
      {
        v14 = __clz(__rbit64((-1 << v26) & ~*(_QWORD *)(v11 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v28 = 0;
        v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          v30 = v27 == v29;
          if (v27 == v29)
            v27 = 0;
          v28 |= v30;
          v31 = *(_QWORD *)(v11 + 8 * v27);
        }
        while (v31 == -1);
        v14 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(_QWORD *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      v15 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v14);
      *v15 = v23;
      v15[1] = v22;
      result = (uint64_t)sub_1CA266A44(v35, (_OWORD *)(*(_QWORD *)(v7 + 56) + 32 * v14));
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1CA253DA8(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t result;
  int64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  char v31;
  unint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  int64_t v37;
  _QWORD *v38;
  uint64_t v39;
  int v40;

  v3 = v2;
  v5 = type metadata accessor for Song();
  v39 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED872500);
  v40 = a2;
  v9 = sub_1CA85C0B0();
  v10 = v9;
  if (!*(_QWORD *)(v8 + 16))
    goto LABEL_41;
  v11 = 1 << *(_BYTE *)(v8 + 32);
  v12 = *(_QWORD *)(v8 + 64);
  v38 = (_QWORD *)(v8 + 64);
  if (v11 < 64)
    v13 = ~(-1 << v11);
  else
    v13 = -1;
  v14 = v13 & v12;
  v36 = v2;
  v37 = (unint64_t)(v11 + 63) >> 6;
  v15 = v9 + 64;
  result = swift_retain();
  v17 = 0;
  while (1)
  {
    if (v14)
    {
      v19 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v20 = v19 | (v17 << 6);
      goto LABEL_22;
    }
    v21 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v21 >= v37)
      break;
    v22 = v38;
    v23 = v38[v21];
    ++v17;
    if (!v23)
    {
      v17 = v21 + 1;
      if (v21 + 1 >= v37)
        goto LABEL_34;
      v23 = v38[v17];
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v37)
        {
LABEL_34:
          swift_release();
          v3 = v36;
          if ((v40 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v23 = v38[v24];
        if (!v23)
        {
          while (1)
          {
            v17 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_43;
            if (v17 >= v37)
              goto LABEL_34;
            v23 = v38[v17];
            ++v24;
            if (v23)
              goto LABEL_21;
          }
        }
        v17 = v24;
      }
    }
LABEL_21:
    v14 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v17 << 6);
LABEL_22:
    v25 = *(_QWORD *)(v39 + 72);
    v26 = *(_QWORD *)(v8 + 48) + v25 * v20;
    if ((v40 & 1) != 0)
      sub_1CA24EE7C(v26, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for Song);
    else
      sub_1CA24EE38(v26, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for Song);
    v27 = *(_DWORD *)(*(_QWORD *)(v8 + 56) + 4 * v20);
    sub_1CA85C368();
    swift_bridgeObjectRetain();
    sub_1CA85B4B0();
    swift_bridgeObjectRelease();
    result = sub_1CA85C3B0();
    v28 = -1 << *(_BYTE *)(v10 + 32);
    v29 = result & ~v28;
    v30 = v29 >> 6;
    if (((-1 << v29) & ~*(_QWORD *)(v15 + 8 * (v29 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v29) & ~*(_QWORD *)(v15 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v31 = 0;
      v32 = (unint64_t)(63 - v28) >> 6;
      do
      {
        if (++v30 == v32 && (v31 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v33 = v30 == v32;
        if (v30 == v32)
          v30 = 0;
        v31 |= v33;
        v34 = *(_QWORD *)(v15 + 8 * v30);
      }
      while (v34 == -1);
      v18 = __clz(__rbit64(~v34)) + (v30 << 6);
    }
    *(_QWORD *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    result = sub_1CA24EE7C((uint64_t)v7, *(_QWORD *)(v10 + 48) + v25 * v18, (uint64_t (*)(_QWORD))type metadata accessor for Song);
    *(_DWORD *)(*(_QWORD *)(v10 + 56) + 4 * v18) = v27;
    ++*(_QWORD *)(v10 + 16);
  }
  swift_release();
  v3 = v36;
  v22 = v38;
  if ((v40 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v35 = 1 << *(_BYTE *)(v8 + 32);
  if (v35 >= 64)
    bzero(v22, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v35;
  *(_QWORD *)(v8 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v10;
  return result;
}

uint64_t sub_1CA254134(uint64_t a1, char a2)
{
  return sub_1CA25A06C(a1, a2, (uint64_t *)&unk_1EF94AE98);
}

uint64_t sub_1CA254140(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int64_t v40;
  _QWORD *v41;
  uint64_t i;
  char v43;
  int64_t v44;
  uint64_t v45;
  char v46;
  __int128 v47;
  __int128 v48;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF94B1A0);
  v43 = a2;
  v6 = sub_1CA85C0B0();
  v7 = v6;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 1 << *(_BYTE *)(v5 + 32);
    v41 = (_QWORD *)(v5 + 64);
    if (v8 < 64)
      v9 = ~(-1 << v8);
    else
      v9 = -1;
    v10 = v9 & *(_QWORD *)(v5 + 64);
    v40 = (unint64_t)(v8 + 63) >> 6;
    v11 = v6 + 64;
    result = swift_retain();
    v13 = 0;
    for (i = v5; ; v5 = i)
    {
      if (v10)
      {
        v20 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v44 = v13;
        v21 = v20 | (v13 << 6);
      }
      else
      {
        v22 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v22 >= v40)
          goto LABEL_33;
        v23 = v41[v22];
        v24 = v13 + 1;
        if (!v23)
        {
          v24 = v13 + 2;
          if (v13 + 2 >= v40)
            goto LABEL_33;
          v23 = v41[v24];
          if (!v23)
          {
            v25 = v13 + 3;
            if (v13 + 3 >= v40)
            {
LABEL_33:
              swift_release();
              v3 = v2;
              if ((v43 & 1) != 0)
              {
                v39 = 1 << *(_BYTE *)(v5 + 32);
                if (v39 >= 64)
                  bzero(v41, ((unint64_t)(v39 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v41 = -1 << v39;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v23 = v41[v25];
            if (!v23)
            {
              while (1)
              {
                v24 = v25 + 1;
                if (__OFADD__(v25, 1))
                  goto LABEL_40;
                if (v24 >= v40)
                  goto LABEL_33;
                v23 = v41[v24];
                ++v25;
                if (v23)
                  goto LABEL_30;
              }
            }
            v24 = v13 + 3;
          }
        }
LABEL_30:
        v10 = (v23 - 1) & v23;
        v44 = v24;
        v21 = __clz(__rbit64(v23)) + (v24 << 6);
      }
      v30 = *(_QWORD *)(v5 + 56);
      v31 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v21);
      v33 = *v31;
      v32 = v31[1];
      v34 = (uint64_t *)(v30 + 80 * v21);
      v35 = v34[1];
      v45 = *v34;
      v36 = v34[2];
      v47 = *(_OWORD *)(v34 + 5);
      v48 = *(_OWORD *)(v34 + 3);
      v37 = v34[7];
      v38 = v34[8];
      v46 = *((_BYTE *)v34 + 72);
      if ((v43 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      sub_1CA85C368();
      sub_1CA85B4B0();
      result = sub_1CA85C3B0();
      v14 = -1 << *(_BYTE *)(v7 + 32);
      v15 = result & ~v14;
      v16 = v15 >> 6;
      if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
      {
        v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v26 = 0;
        v27 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          v28 = v16 == v27;
          if (v16 == v27)
            v16 = 0;
          v26 |= v28;
          v29 = *(_QWORD *)(v11 + 8 * v16);
        }
        while (v29 == -1);
        v17 = __clz(__rbit64(~v29)) + (v16 << 6);
      }
      *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v17);
      *v18 = v33;
      v18[1] = v32;
      v19 = *(_QWORD *)(v7 + 56) + 80 * v17;
      v13 = v44;
      *(_QWORD *)v19 = v45;
      *(_QWORD *)(v19 + 8) = v35;
      *(_QWORD *)(v19 + 16) = v36;
      *(_OWORD *)(v19 + 24) = v48;
      *(_OWORD *)(v19 + 40) = v47;
      *(_QWORD *)(v19 + 56) = v37;
      *(_QWORD *)(v19 + 64) = v38;
      *(_BYTE *)(v19 + 72) = v46;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1CA2544BC(uint64_t a1, int a2)
{
  return sub_1CA256CF0(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for Song, (uint64_t *)&unk_1ED872518);
}

uint64_t sub_1CA2544D0(uint64_t a1, int a2)
{
  return sub_1CA25638C(a1, a2, (uint64_t (*)(_QWORD))MEMORY[0x1E0D76708], &qword_1EF94B198);
}

uint64_t sub_1CA2544E4(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  unint64_t v14;
  _QWORD *v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  _QWORD *v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char v29;
  unint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t *v35;
  int64_t v36;
  uint64_t v37;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94B158);
  v6 = sub_1CA85C0B0();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_38;
  v34 = a2;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v37 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v35 = v2;
  v36 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v16 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v17 = v16 | (v13 << 6);
      goto LABEL_22;
    }
    v18 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_39:
      __break(1u);
LABEL_40:
      __break(1u);
      return result;
    }
    if (v18 >= v36)
      break;
    v19 = (_QWORD *)(v5 + 64);
    v20 = *(_QWORD *)(v37 + 8 * v18);
    ++v13;
    if (!v20)
    {
      v13 = v18 + 1;
      if (v18 + 1 >= v36)
        goto LABEL_31;
      v20 = *(_QWORD *)(v37 + 8 * v13);
      if (!v20)
      {
        v21 = v18 + 2;
        if (v21 >= v36)
        {
LABEL_31:
          swift_release();
          v3 = v35;
          if ((v34 & 1) == 0)
            goto LABEL_38;
          goto LABEL_34;
        }
        v20 = *(_QWORD *)(v37 + 8 * v21);
        if (!v20)
        {
          while (1)
          {
            v13 = v21 + 1;
            if (__OFADD__(v21, 1))
              goto LABEL_40;
            if (v13 >= v36)
              goto LABEL_31;
            v20 = *(_QWORD *)(v37 + 8 * v13);
            ++v21;
            if (v20)
              goto LABEL_21;
          }
        }
        v13 = v21;
      }
    }
LABEL_21:
    v10 = (v20 - 1) & v20;
    v17 = __clz(__rbit64(v20)) + (v13 << 6);
LABEL_22:
    v22 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + 8 * v17);
    v23 = (uint64_t *)(*(_QWORD *)(v5 + 56) + 16 * v17);
    v25 = *v23;
    v24 = v23[1];
    sub_1CA85C368();
    sub_1CA85BC00();
    result = sub_1CA85C3B0();
    v26 = -1 << *(_BYTE *)(v7 + 32);
    v27 = result & ~v26;
    v28 = v27 >> 6;
    if (((-1 << v27) & ~*(_QWORD *)(v11 + 8 * (v27 >> 6))) != 0)
    {
      v14 = __clz(__rbit64((-1 << v27) & ~*(_QWORD *)(v11 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v29 = 0;
      v30 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v31 = v28 == v30;
        if (v28 == v30)
          v28 = 0;
        v29 |= v31;
        v32 = *(_QWORD *)(v11 + 8 * v28);
      }
      while (v32 == -1);
      v14 = __clz(__rbit64(~v32)) + (v28 << 6);
    }
    *(_QWORD *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    *(_QWORD *)(*(_QWORD *)(v7 + 48) + 8 * v14) = v22;
    v15 = (_QWORD *)(*(_QWORD *)(v7 + 56) + 16 * v14);
    *v15 = v25;
    v15[1] = v24;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v35;
  v19 = (_QWORD *)(v5 + 64);
  if ((v34 & 1) == 0)
    goto LABEL_38;
LABEL_34:
  v33 = 1 << *(_BYTE *)(v5 + 32);
  if (v33 >= 64)
    bzero(v19, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v19 = -1 << v33;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_38:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1CA2547D4(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t result;
  int64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  char v31;
  unint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  uint64_t *v39;
  int64_t v40;
  _QWORD *v41;
  uint64_t v42;

  v4 = sub_1CA85AEEC();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = v2;
  v8 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94B130);
  v9 = sub_1CA85C0B0();
  v10 = v9;
  if (!*(_QWORD *)(v8 + 16))
  {
    result = swift_release();
    v35 = v39;
LABEL_42:
    *v35 = v10;
    return result;
  }
  v11 = 1 << *(_BYTE *)(v8 + 32);
  v12 = *(_QWORD *)(v8 + 64);
  v41 = (_QWORD *)(v8 + 64);
  if (v11 < 64)
    v13 = ~(-1 << v11);
  else
    v13 = -1;
  v14 = v13 & v12;
  v40 = (unint64_t)(v11 + 63) >> 6;
  v15 = v9 + 64;
  result = swift_retain();
  v17 = 0;
  v38 = a2;
  v18 = 16;
  if ((a2 & 1) != 0)
    v18 = 32;
  v42 = v18;
  while (1)
  {
    if (v14)
    {
      v20 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v21 = v20 | (v17 << 6);
      goto LABEL_24;
    }
    v22 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
LABEL_43:
      __break(1u);
      goto LABEL_44;
    }
    if (v22 >= v40)
    {
      swift_release();
      v35 = v39;
      v23 = v41;
      if ((v38 & 1) != 0)
      {
LABEL_37:
        v36 = 1 << *(_BYTE *)(v8 + 32);
        if (v36 >= 64)
          bzero(v23, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
        else
          *v23 = -1 << v36;
        *(_QWORD *)(v8 + 16) = 0;
      }
LABEL_41:
      result = swift_release();
      goto LABEL_42;
    }
    v23 = v41;
    v24 = v41[v22];
    ++v17;
    if (!v24)
    {
      v17 = v22 + 1;
      if (v22 + 1 >= v40)
        goto LABEL_34;
      v24 = v41[v17];
      if (!v24)
        break;
    }
LABEL_23:
    v14 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v17 << 6);
LABEL_24:
    v26 = *(_QWORD *)(v5 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v5 + v42))(v7, *(_QWORD *)(v8 + 48) + v26 * v21, v4);
    v27 = *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v21);
    sub_1CA23CC98(&qword_1EF94B138, (uint64_t (*)(uint64_t))MEMORY[0x1E0D77038], MEMORY[0x1E0D77048]);
    result = sub_1CA85B498();
    v28 = -1 << *(_BYTE *)(v10 + 32);
    v29 = result & ~v28;
    v30 = v29 >> 6;
    if (((-1 << v29) & ~*(_QWORD *)(v15 + 8 * (v29 >> 6))) != 0)
    {
      v19 = __clz(__rbit64((-1 << v29) & ~*(_QWORD *)(v15 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v31 = 0;
      v32 = (unint64_t)(63 - v28) >> 6;
      do
      {
        if (++v30 == v32 && (v31 & 1) != 0)
        {
          __break(1u);
          goto LABEL_43;
        }
        v33 = v30 == v32;
        if (v30 == v32)
          v30 = 0;
        v31 |= v33;
        v34 = *(_QWORD *)(v15 + 8 * v30);
      }
      while (v34 == -1);
      v19 = __clz(__rbit64(~v34)) + (v30 << 6);
    }
    *(_QWORD *)(v15 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v5 + 32))(*(_QWORD *)(v10 + 48) + v26 * v19, v7, v4);
    *(_QWORD *)(*(_QWORD *)(v10 + 56) + 8 * v19) = v27;
    ++*(_QWORD *)(v10 + 16);
  }
  v25 = v22 + 2;
  if (v25 >= v40)
  {
LABEL_34:
    swift_release();
    v35 = v39;
    if ((v38 & 1) != 0)
      goto LABEL_37;
    goto LABEL_41;
  }
  v24 = v41[v25];
  if (v24)
  {
    v17 = v25;
    goto LABEL_23;
  }
  while (1)
  {
    v17 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v17 >= v40)
      goto LABEL_34;
    v24 = v41[v17];
    ++v25;
    if (v24)
      goto LABEL_23;
  }
LABEL_44:
  __break(1u);
  return result;
}

uint64_t sub_1CA254B64(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  int64_t v37;
  _QWORD *v38;
  char v39;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED873250);
  v39 = a2;
  v6 = sub_1CA85C0B0();
  v7 = v6;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 1 << *(_BYTE *)(v5 + 32);
    v38 = (_QWORD *)(v5 + 64);
    if (v8 < 64)
      v9 = ~(-1 << v8);
    else
      v9 = -1;
    v10 = v9 & *(_QWORD *)(v5 + 64);
    v37 = (unint64_t)(v8 + 63) >> 6;
    v11 = v6 + 64;
    result = swift_retain();
    v13 = 0;
    while (1)
    {
      if (v10)
      {
        v20 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v21 = v20 | (v13 << 6);
      }
      else
      {
        v22 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v22 >= v37)
          goto LABEL_33;
        v23 = v38[v22];
        ++v13;
        if (!v23)
        {
          v13 = v22 + 1;
          if (v22 + 1 >= v37)
            goto LABEL_33;
          v23 = v38[v13];
          if (!v23)
          {
            v24 = v22 + 2;
            if (v24 >= v37)
            {
LABEL_33:
              swift_release();
              v3 = v2;
              if ((v39 & 1) != 0)
              {
                v36 = 1 << *(_BYTE *)(v5 + 32);
                if (v36 >= 64)
                  bzero(v38, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v38 = -1 << v36;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v23 = v38[v24];
            if (!v23)
            {
              while (1)
              {
                v13 = v24 + 1;
                if (__OFADD__(v24, 1))
                  goto LABEL_40;
                if (v13 >= v37)
                  goto LABEL_33;
                v23 = v38[v13];
                ++v24;
                if (v23)
                  goto LABEL_30;
              }
            }
            v13 = v24;
          }
        }
LABEL_30:
        v10 = (v23 - 1) & v23;
        v21 = __clz(__rbit64(v23)) + (v13 << 6);
      }
      v29 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v21);
      v31 = *v29;
      v30 = v29[1];
      v32 = *(_QWORD *)(v5 + 56) + 24 * v21;
      v34 = *(_QWORD *)v32;
      v33 = *(_QWORD *)(v32 + 8);
      v35 = *(_DWORD *)(v32 + 16);
      if ((v39 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      sub_1CA85C368();
      sub_1CA85B4B0();
      result = sub_1CA85C3B0();
      v14 = -1 << *(_BYTE *)(v7 + 32);
      v15 = result & ~v14;
      v16 = v15 >> 6;
      if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
      {
        v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          v27 = v16 == v26;
          if (v16 == v26)
            v16 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v11 + 8 * v16);
        }
        while (v28 == -1);
        v17 = __clz(__rbit64(~v28)) + (v16 << 6);
      }
      *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v17);
      *v18 = v31;
      v18[1] = v30;
      v19 = *(_QWORD *)(v7 + 56) + 24 * v17;
      *(_QWORD *)v19 = v34;
      *(_QWORD *)(v19 + 8) = v33;
      *(_DWORD *)(v19 + 16) = v35;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1CA254E88(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  char v37;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED872540);
  v37 = a2;
  v6 = sub_1CA85C0B0();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v35 = v2;
  v36 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v11 = (unint64_t)(v8 + 63) >> 6;
  v12 = v6 + 64;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v10)
    {
      v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v11)
      break;
    v23 = (_QWORD *)(v5 + 64);
    v24 = *(_QWORD *)(v36 + 8 * v22);
    ++v14;
    if (!v24)
    {
      v14 = v22 + 1;
      if (v22 + 1 >= v11)
        goto LABEL_33;
      v24 = *(_QWORD *)(v36 + 8 * v14);
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v11)
        {
LABEL_33:
          swift_release();
          v3 = v35;
          if ((v37 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v24 = *(_QWORD *)(v36 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            v14 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_42;
            if (v14 >= v11)
              goto LABEL_33;
            v24 = *(_QWORD *)(v36 + 8 * v14);
            ++v25;
            if (v24)
              goto LABEL_30;
          }
        }
        v14 = v25;
      }
    }
LABEL_30:
    v10 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    v30 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v21);
    v32 = *v30;
    v31 = v30[1];
    v33 = *(_DWORD *)(*(_QWORD *)(v5 + 56) + 4 * v21);
    if ((v37 & 1) == 0)
      swift_bridgeObjectRetain();
    sub_1CA85C368();
    sub_1CA85B4B0();
    result = sub_1CA85C3B0();
    v15 = -1 << *(_BYTE *)(v7 + 32);
    v16 = result & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v28 = v17 == v27;
        if (v17 == v27)
          v17 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v18);
    *v19 = v32;
    v19[1] = v31;
    *(_DWORD *)(*(_QWORD *)(v7 + 56) + 4 * v18) = v33;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v35;
  v23 = (_QWORD *)(v5 + 64);
  if ((v37 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v34 = 1 << *(_BYTE *)(v5 + 32);
  if (v34 >= 64)
    bzero(v23, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v34;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1CA25518C(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  char v37;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED871090);
  v37 = a2;
  v6 = sub_1CA85C0B0();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v35 = v2;
  v36 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v11 = (unint64_t)(v8 + 63) >> 6;
  v12 = v6 + 64;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v10)
    {
      v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v11)
      break;
    v23 = (_QWORD *)(v5 + 64);
    v24 = *(_QWORD *)(v36 + 8 * v22);
    ++v14;
    if (!v24)
    {
      v14 = v22 + 1;
      if (v22 + 1 >= v11)
        goto LABEL_33;
      v24 = *(_QWORD *)(v36 + 8 * v14);
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v11)
        {
LABEL_33:
          swift_release();
          v3 = v35;
          if ((v37 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v24 = *(_QWORD *)(v36 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            v14 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_42;
            if (v14 >= v11)
              goto LABEL_33;
            v24 = *(_QWORD *)(v36 + 8 * v14);
            ++v25;
            if (v24)
              goto LABEL_30;
          }
        }
        v14 = v25;
      }
    }
LABEL_30:
    v10 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    v30 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v21);
    v32 = *v30;
    v31 = v30[1];
    v33 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v21);
    if ((v37 & 1) == 0)
      swift_bridgeObjectRetain();
    sub_1CA85C368();
    sub_1CA85B4B0();
    result = sub_1CA85C3B0();
    v15 = -1 << *(_BYTE *)(v7 + 32);
    v16 = result & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v28 = v17 == v27;
        if (v17 == v27)
          v17 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v18);
    *v19 = v32;
    v19[1] = v31;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v18) = v33;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v35;
  v23 = (_QWORD *)(v5 + 64);
  if ((v37 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v34 = 1 << *(_BYTE *)(v5 + 32);
  if (v34 >= 64)
    bzero(v23, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v34;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1CA255490(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  char v30;
  unint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  int v37;
  int64_t v38;
  _QWORD *v39;
  uint64_t v40;

  v3 = v2;
  v5 = sub_1CA85ADA8();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94B148);
  result = sub_1CA85C0B0();
  v11 = result;
  if (*(_QWORD *)(v9 + 16))
  {
    v36 = v3;
    v12 = 0;
    v13 = *(_QWORD *)(v9 + 64);
    v39 = (_QWORD *)(v9 + 64);
    v14 = 1 << *(_BYTE *)(v9 + 32);
    if (v14 < 64)
      v15 = ~(-1 << v14);
    else
      v15 = -1;
    v16 = v15 & v13;
    v38 = (unint64_t)(v14 + 63) >> 6;
    v17 = result + 64;
    v37 = a2;
    v18 = 16;
    if ((a2 & 1) != 0)
      v18 = 32;
    v40 = v18;
    while (1)
    {
      if (v16)
      {
        v20 = __clz(__rbit64(v16));
        v16 &= v16 - 1;
        v21 = v20 | (v12 << 6);
      }
      else
      {
        v22 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        result = (uint64_t)v39;
        if (v22 >= v38)
          goto LABEL_33;
        v23 = v39[v22];
        ++v12;
        if (!v23)
        {
          v12 = v22 + 1;
          if (v22 + 1 >= v38)
            goto LABEL_33;
          v23 = v39[v12];
          if (!v23)
          {
            v24 = v22 + 2;
            if (v24 >= v38)
            {
LABEL_33:
              if ((v37 & 1) == 0)
              {
                result = swift_release();
                v3 = v36;
                goto LABEL_40;
              }
              v34 = 1 << *(_BYTE *)(v9 + 32);
              if (v34 >= 64)
                bzero(v39, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v39 = -1 << v34;
              v3 = v36;
              *(_QWORD *)(v9 + 16) = 0;
              break;
            }
            v23 = v39[v24];
            if (!v23)
            {
              while (1)
              {
                v12 = v24 + 1;
                if (__OFADD__(v24, 1))
                  goto LABEL_42;
                if (v12 >= v38)
                  goto LABEL_33;
                v23 = v39[v12];
                ++v24;
                if (v23)
                  goto LABEL_23;
              }
            }
            v12 = v24;
          }
        }
LABEL_23:
        v16 = (v23 - 1) & v23;
        v21 = __clz(__rbit64(v23)) + (v12 << 6);
      }
      v25 = *(_QWORD *)(*(_QWORD *)(v9 + 48) + 8 * v21);
      v26 = *(_QWORD *)(v6 + 72);
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + v40))(v8, *(_QWORD *)(v9 + 56) + v26 * v21, v5);
      result = sub_1CA85C35C();
      v27 = -1 << *(_BYTE *)(v11 + 32);
      v28 = result & ~v27;
      v29 = v28 >> 6;
      if (((-1 << v28) & ~*(_QWORD *)(v17 + 8 * (v28 >> 6))) != 0)
      {
        v19 = __clz(__rbit64((-1 << v28) & ~*(_QWORD *)(v17 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v30 = 0;
        v31 = (unint64_t)(63 - v27) >> 6;
        do
        {
          if (++v29 == v31 && (v30 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v32 = v29 == v31;
          if (v29 == v31)
            v29 = 0;
          v30 |= v32;
          v33 = *(_QWORD *)(v17 + 8 * v29);
        }
        while (v33 == -1);
        v19 = __clz(__rbit64(~v33)) + (v29 << 6);
      }
      *(_QWORD *)(v17 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
      *(_QWORD *)(*(_QWORD *)(v11 + 48) + 8 * v19) = v25;
      result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v6 + 32))(*(_QWORD *)(v11 + 56) + v26 * v19, v8, v5);
      ++*(_QWORD *)(v11 + 16);
    }
  }
  result = swift_release();
LABEL_40:
  *v3 = v11;
  return result;
}

uint64_t sub_1CA2557C0(uint64_t a1, char a2)
{
  return sub_1CA25B6F4(a1, a2, (uint64_t *)&unk_1EF94B120);
}

uint64_t sub_1CA2557CC(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  int64_t v36;
  _QWORD *v37;
  char v38;
  __int128 v39;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94B118);
  v38 = a2;
  v6 = sub_1CA85C0B0();
  v7 = v6;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 1 << *(_BYTE *)(v5 + 32);
    v37 = (_QWORD *)(v5 + 64);
    if (v8 < 64)
      v9 = ~(-1 << v8);
    else
      v9 = -1;
    v10 = v9 & *(_QWORD *)(v5 + 64);
    v36 = (unint64_t)(v8 + 63) >> 6;
    v11 = v6 + 64;
    result = swift_retain();
    v13 = 0;
    while (1)
    {
      if (v10)
      {
        v20 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v21 = v20 | (v13 << 6);
      }
      else
      {
        v22 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v22 >= v36)
          goto LABEL_33;
        v23 = v37[v22];
        ++v13;
        if (!v23)
        {
          v13 = v22 + 1;
          if (v22 + 1 >= v36)
            goto LABEL_33;
          v23 = v37[v13];
          if (!v23)
          {
            v24 = v22 + 2;
            if (v24 >= v36)
            {
LABEL_33:
              swift_release();
              v3 = v2;
              if ((v38 & 1) != 0)
              {
                v35 = 1 << *(_BYTE *)(v5 + 32);
                if (v35 >= 64)
                  bzero(v37, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v37 = -1 << v35;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v23 = v37[v24];
            if (!v23)
            {
              while (1)
              {
                v13 = v24 + 1;
                if (__OFADD__(v24, 1))
                  goto LABEL_40;
                if (v13 >= v36)
                  goto LABEL_33;
                v23 = v37[v13];
                ++v24;
                if (v23)
                  goto LABEL_30;
              }
            }
            v13 = v24;
          }
        }
LABEL_30:
        v10 = (v23 - 1) & v23;
        v21 = __clz(__rbit64(v23)) + (v13 << 6);
      }
      v29 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v21);
      v31 = *v29;
      v30 = v29[1];
      v32 = *(_QWORD *)(v5 + 56) + 32 * v21;
      v33 = *(_BYTE *)v32;
      v34 = *(_QWORD *)(v32 + 8);
      v39 = *(_OWORD *)(v32 + 16);
      if ((v38 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      sub_1CA85C368();
      sub_1CA85B4B0();
      result = sub_1CA85C3B0();
      v14 = -1 << *(_BYTE *)(v7 + 32);
      v15 = result & ~v14;
      v16 = v15 >> 6;
      if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
      {
        v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          v27 = v16 == v26;
          if (v16 == v26)
            v16 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v11 + 8 * v16);
        }
        while (v28 == -1);
        v17 = __clz(__rbit64(~v28)) + (v16 << 6);
      }
      *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v17);
      *v18 = v31;
      v18[1] = v30;
      v19 = *(_QWORD *)(v7 + 56) + 32 * v17;
      *(_BYTE *)v19 = v33;
      *(_QWORD *)(v19 + 8) = v34;
      *(_OWORD *)(v19 + 16) = v39;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1CA255AFC(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  int64_t v29;
  _QWORD *v30;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94B110);
  result = sub_1CA85C0B0();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 0;
    v30 = (_QWORD *)(v5 + 64);
    v9 = 1 << *(_BYTE *)(v5 + 32);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v29 = (unint64_t)(v9 + 63) >> 6;
    v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        v17 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v18 = v17 | (v8 << 6);
      }
      else
      {
        v19 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        result = v5 + 64;
        if (v19 >= v29)
          goto LABEL_33;
        v20 = v30[v19];
        ++v8;
        if (!v20)
        {
          v8 = v19 + 1;
          if (v19 + 1 >= v29)
            goto LABEL_33;
          v20 = v30[v8];
          if (!v20)
          {
            v21 = v19 + 2;
            if (v21 >= v29)
            {
LABEL_33:
              if ((a2 & 1) == 0)
              {
                result = swift_release();
                v3 = v2;
                goto LABEL_40;
              }
              v28 = 1 << *(_BYTE *)(v5 + 32);
              if (v28 >= 64)
                bzero(v30, ((unint64_t)(v28 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v30 = -1 << v28;
              v3 = v2;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v20 = v30[v21];
            if (!v20)
            {
              while (1)
              {
                v8 = v21 + 1;
                if (__OFADD__(v21, 1))
                  goto LABEL_42;
                if (v8 >= v29)
                  goto LABEL_33;
                v20 = v30[v8];
                ++v21;
                if (v20)
                  goto LABEL_30;
              }
            }
            v8 = v21;
          }
        }
LABEL_30:
        v11 = (v20 - 1) & v20;
        v18 = __clz(__rbit64(v20)) + (v8 << 6);
      }
      v26 = *(_BYTE *)(*(_QWORD *)(v5 + 48) + v18);
      v27 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v18);
      if ((a2 & 1) == 0)
        swift_bridgeObjectRetain();
      sub_1CA85C368();
      sub_1CA85C374();
      result = sub_1CA85C3B0();
      v13 = -1 << *(_BYTE *)(v7 + 32);
      v14 = result & ~v13;
      v15 = v14 >> 6;
      if (((-1 << v14) & ~*(_QWORD *)(v12 + 8 * (v14 >> 6))) != 0)
      {
        v16 = __clz(__rbit64((-1 << v14) & ~*(_QWORD *)(v12 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v22 = 0;
        v23 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v24 = v15 == v23;
          if (v15 == v23)
            v15 = 0;
          v22 |= v24;
          v25 = *(_QWORD *)(v12 + 8 * v15);
        }
        while (v25 == -1);
        v16 = __clz(__rbit64(~v25)) + (v15 << 6);
      }
      *(_QWORD *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      *(_BYTE *)(*(_QWORD *)(v7 + 48) + v16) = v26;
      *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v16) = v27;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
LABEL_40:
  *v3 = v7;
  return result;
}

uint64_t sub_1CA255DCC(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  unint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int64_t v33;
  uint64_t *v34;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED872558);
  result = sub_1CA85C0B0();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 0;
    v34 = (uint64_t *)(v5 + 64);
    v9 = 1 << *(_BYTE *)(v5 + 32);
    v31 = -1 << v9;
    v32 = v9;
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v33 = (unint64_t)(v9 + 63) >> 6;
    v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        v18 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v19 = v18 | (v8 << 6);
      }
      else
      {
        v20 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        result = v5 + 64;
        if (v20 >= v33)
          goto LABEL_33;
        v21 = v34[v20];
        ++v8;
        if (!v21)
        {
          v8 = v20 + 1;
          if (v20 + 1 >= v33)
            goto LABEL_33;
          v21 = v34[v8];
          if (!v21)
          {
            v22 = v20 + 2;
            if (v22 >= v33)
            {
LABEL_33:
              if ((a2 & 1) != 0)
              {
                if (v32 >= 64)
                  bzero(v34, 8 * v33);
                else
                  *v34 = v31;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v21 = v34[v22];
            if (!v21)
            {
              while (1)
              {
                v8 = v22 + 1;
                if (__OFADD__(v22, 1))
                  goto LABEL_41;
                if (v8 >= v33)
                  goto LABEL_33;
                v21 = v34[v8];
                ++v22;
                if (v21)
                  goto LABEL_30;
              }
            }
            v8 = v22;
          }
        }
LABEL_30:
        v11 = (v21 - 1) & v21;
        v19 = __clz(__rbit64(v21)) + (v8 << 6);
      }
      v27 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + 8 * v19);
      v28 = (uint64_t *)(*(_QWORD *)(v5 + 56) + 16 * v19);
      v29 = *v28;
      v30 = v28[1];
      if ((a2 & 1) == 0)
        swift_bridgeObjectRetain();
      result = sub_1CA85C35C();
      v13 = -1 << *(_BYTE *)(v7 + 32);
      v14 = result & ~v13;
      v15 = v14 >> 6;
      if (((-1 << v14) & ~*(_QWORD *)(v12 + 8 * (v14 >> 6))) != 0)
      {
        v16 = __clz(__rbit64((-1 << v14) & ~*(_QWORD *)(v12 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v23 = 0;
        v24 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          v25 = v15 == v24;
          if (v15 == v24)
            v15 = 0;
          v23 |= v25;
          v26 = *(_QWORD *)(v12 + 8 * v15);
        }
        while (v26 == -1);
        v16 = __clz(__rbit64(~v26)) + (v15 << 6);
      }
      *(_QWORD *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      *(_QWORD *)(*(_QWORD *)(v7 + 48) + 8 * v16) = v27;
      v17 = (_QWORD *)(*(_QWORD *)(v7 + 56) + 16 * v16);
      *v17 = v29;
      v17[1] = v30;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1CA256080(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  char v36;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94B0F8);
  v36 = a2;
  v6 = sub_1CA85C0B0();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v34 = v2;
  v35 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v11 = (unint64_t)(v8 + 63) >> 6;
  v12 = v6 + 64;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v10)
    {
      v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v11)
      break;
    v23 = (_QWORD *)(v5 + 64);
    v24 = *(_QWORD *)(v35 + 8 * v22);
    ++v14;
    if (!v24)
    {
      v14 = v22 + 1;
      if (v22 + 1 >= v11)
        goto LABEL_33;
      v24 = *(_QWORD *)(v35 + 8 * v14);
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v11)
        {
LABEL_33:
          swift_release();
          v3 = v34;
          if ((v36 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v24 = *(_QWORD *)(v35 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            v14 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_42;
            if (v14 >= v11)
              goto LABEL_33;
            v24 = *(_QWORD *)(v35 + 8 * v14);
            ++v25;
            if (v24)
              goto LABEL_30;
          }
        }
        v14 = v25;
      }
    }
LABEL_30:
    v10 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    v30 = 8 * v21;
    v31 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + v30);
    v32 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + v30);
    if ((v36 & 1) == 0)
      swift_retain();
    sub_1CA85C368();
    sub_1CA85BC00();
    result = sub_1CA85C3B0();
    v15 = -1 << *(_BYTE *)(v7 + 32);
    v16 = result & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v28 = v17 == v27;
        if (v17 == v27)
          v17 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = 8 * v18;
    *(_QWORD *)(*(_QWORD *)(v7 + 48) + v19) = v31;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + v19) = v32;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v34;
  v23 = (_QWORD *)(v5 + 64);
  if ((v36 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v33 = 1 << *(_BYTE *)(v5 + 32);
  if (v33 >= 64)
    bzero(v23, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v33;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1CA256378(uint64_t a1, int a2)
{
  return sub_1CA25638C(a1, a2, (uint64_t (*)(_QWORD))MEMORY[0x1E0D767B8], &qword_1EF94B0C8);
}

uint64_t sub_1CA25638C(uint64_t a1, int a2, uint64_t (*a3)(_QWORD), uint64_t *a4)
{
  uint64_t *v4;
  uint64_t *v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t result;
  int64_t v19;
  unint64_t v20;
  _QWORD *v21;
  unint64_t v22;
  unint64_t v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  char v37;
  unint64_t v38;
  BOOL v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  int64_t v44;
  _QWORD *v45;
  int v46;
  char *v47;
  uint64_t v48;

  v6 = v4;
  v48 = a3(0);
  v8 = *(_QWORD *)(v48 - 8);
  MEMORY[0x1E0C80A78](v48);
  v47 = (char *)&v42 - v9;
  v10 = *v4;
  __swift_instantiateConcreteTypeFromMangledName(a4);
  v46 = a2;
  v11 = sub_1CA85C0B0();
  v12 = v11;
  if (*(_QWORD *)(v10 + 16))
  {
    v43 = v4;
    v13 = 1 << *(_BYTE *)(v10 + 32);
    v14 = *(_QWORD *)(v10 + 64);
    v45 = (_QWORD *)(v10 + 64);
    if (v13 < 64)
      v15 = ~(-1 << v13);
    else
      v15 = -1;
    v16 = v15 & v14;
    v44 = (unint64_t)(v13 + 63) >> 6;
    v17 = v11 + 64;
    result = swift_retain();
    v19 = 0;
    while (1)
    {
      if (v16)
      {
        v22 = __clz(__rbit64(v16));
        v16 &= v16 - 1;
        v23 = v22 | (v19 << 6);
      }
      else
      {
        v24 = v19 + 1;
        if (__OFADD__(v19, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v24 >= v44)
          goto LABEL_34;
        v25 = v45[v24];
        ++v19;
        if (!v25)
        {
          v19 = v24 + 1;
          if (v24 + 1 >= v44)
            goto LABEL_34;
          v25 = v45[v19];
          if (!v25)
          {
            v26 = v24 + 2;
            if (v26 >= v44)
            {
LABEL_34:
              swift_release();
              v6 = v43;
              if ((v46 & 1) != 0)
              {
                v41 = 1 << *(_BYTE *)(v10 + 32);
                if (v41 >= 64)
                  bzero(v45, ((unint64_t)(v41 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v45 = -1 << v41;
                *(_QWORD *)(v10 + 16) = 0;
              }
              break;
            }
            v25 = v45[v26];
            if (!v25)
            {
              while (1)
              {
                v19 = v26 + 1;
                if (__OFADD__(v26, 1))
                  goto LABEL_41;
                if (v19 >= v44)
                  goto LABEL_34;
                v25 = v45[v19];
                ++v26;
                if (v25)
                  goto LABEL_21;
              }
            }
            v19 = v26;
          }
        }
LABEL_21:
        v16 = (v25 - 1) & v25;
        v23 = __clz(__rbit64(v25)) + (v19 << 6);
      }
      v27 = *(_QWORD *)(v10 + 56);
      v28 = v10;
      v29 = (uint64_t *)(*(_QWORD *)(v10 + 48) + 16 * v23);
      v31 = *v29;
      v30 = v29[1];
      v32 = *(_QWORD *)(v8 + 72);
      v33 = v27 + v32 * v23;
      if ((v46 & 1) != 0)
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v8 + 32))(v47, v33, v48);
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v47, v33, v48);
        swift_bridgeObjectRetain();
      }
      sub_1CA85C368();
      sub_1CA85B4B0();
      result = sub_1CA85C3B0();
      v34 = -1 << *(_BYTE *)(v12 + 32);
      v35 = result & ~v34;
      v36 = v35 >> 6;
      if (((-1 << v35) & ~*(_QWORD *)(v17 + 8 * (v35 >> 6))) != 0)
      {
        v20 = __clz(__rbit64((-1 << v35) & ~*(_QWORD *)(v17 + 8 * (v35 >> 6)))) | v35 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v37 = 0;
        v38 = (unint64_t)(63 - v34) >> 6;
        do
        {
          if (++v36 == v38 && (v37 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          v39 = v36 == v38;
          if (v36 == v38)
            v36 = 0;
          v37 |= v39;
          v40 = *(_QWORD *)(v17 + 8 * v36);
        }
        while (v40 == -1);
        v20 = __clz(__rbit64(~v40)) + (v36 << 6);
      }
      *(_QWORD *)(v17 + ((v20 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v20;
      v21 = (_QWORD *)(*(_QWORD *)(v12 + 48) + 16 * v20);
      *v21 = v31;
      v21[1] = v30;
      result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v8 + 32))(*(_QWORD *)(v12 + 56) + v32 * v20, v47, v48);
      ++*(_QWORD *)(v12 + 16);
      v10 = v28;
    }
  }
  result = swift_release();
  *v6 = v12;
  return result;
}

uint64_t sub_1CA2566F0(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int64_t v33;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94AEE0);
  result = sub_1CA85C0B0();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 0;
    v9 = (uint64_t *)(v5 + 64);
    v10 = 1 << *(_BYTE *)(v5 + 32);
    v31 = -1 << v10;
    v32 = v10;
    if (v10 < 64)
      v11 = ~(-1 << v10);
    else
      v11 = -1;
    v12 = v11 & *(_QWORD *)(v5 + 64);
    v33 = (unint64_t)(v10 + 63) >> 6;
    v13 = result + 64;
    while (1)
    {
      if (v12)
      {
        v19 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        v20 = v19 | (v8 << 6);
      }
      else
      {
        v21 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v21 >= v33)
          goto LABEL_33;
        v22 = v9[v21];
        ++v8;
        if (!v22)
        {
          v8 = v21 + 1;
          if (v21 + 1 >= v33)
            goto LABEL_33;
          v22 = v9[v8];
          if (!v22)
          {
            v23 = v21 + 2;
            if (v23 >= v33)
            {
LABEL_33:
              if ((a2 & 1) != 0)
              {
                if (v32 >= 64)
                  bzero((void *)(v5 + 64), 8 * v33);
                else
                  *v9 = v31;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v22 = v9[v23];
            if (!v22)
            {
              while (1)
              {
                v8 = v23 + 1;
                if (__OFADD__(v23, 1))
                  goto LABEL_41;
                if (v8 >= v33)
                  goto LABEL_33;
                v22 = v9[v8];
                ++v23;
                if (v22)
                  goto LABEL_30;
              }
            }
            v8 = v23;
          }
        }
LABEL_30:
        v12 = (v22 - 1) & v22;
        v20 = __clz(__rbit64(v22)) + (v8 << 6);
      }
      v28 = 8 * v20;
      v29 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + v28);
      v30 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + v28);
      if ((a2 & 1) == 0)
        swift_bridgeObjectRetain();
      result = sub_1CA85C35C();
      v14 = -1 << *(_BYTE *)(v7 + 32);
      v15 = result & ~v14;
      v16 = v15 >> 6;
      if (((-1 << v15) & ~*(_QWORD *)(v13 + 8 * (v15 >> 6))) != 0)
      {
        v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v13 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v24 = 0;
        v25 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          v26 = v16 == v25;
          if (v16 == v25)
            v16 = 0;
          v24 |= v26;
          v27 = *(_QWORD *)(v13 + 8 * v16);
        }
        while (v27 == -1);
        v17 = __clz(__rbit64(~v27)) + (v16 << 6);
      }
      *(_QWORD *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      v18 = 8 * v17;
      *(_QWORD *)(*(_QWORD *)(v7 + 48) + v18) = v29;
      *(_QWORD *)(*(_QWORD *)(v7 + 56) + v18) = v30;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1CA2569A4(uint64_t a1, char a2)
{
  return sub_1CA25A06C(a1, a2, &qword_1EF94AED8);
}

uint64_t sub_1CA2569B0(uint64_t a1, char a2)
{
  return sub_1CA25B6F4(a1, a2, &qword_1EF94AE88);
}

uint64_t sub_1CA2569BC(uint64_t a1, char a2)
{
  return sub_1CA25A06C(a1, a2, &qword_1EF94AE90);
}

uint64_t sub_1CA2569C8(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int64_t v34;
  uint64_t v35;
  char v36;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94AF90);
  v36 = a2;
  v6 = sub_1CA85C0B0();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v35 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v34 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v34)
      break;
    v22 = (_QWORD *)(v5 + 64);
    v23 = *(_QWORD *)(v35 + 8 * v21);
    ++v13;
    if (!v23)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v34)
        goto LABEL_33;
      v23 = *(_QWORD *)(v35 + 8 * v13);
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v34)
        {
LABEL_33:
          swift_release();
          if ((v36 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v23 = *(_QWORD *)(v35 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            v13 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_42;
            if (v13 >= v34)
              goto LABEL_33;
            v23 = *(_QWORD *)(v35 + 8 * v13);
            ++v24;
            if (v23)
              goto LABEL_30;
          }
        }
        v13 = v24;
      }
    }
LABEL_30:
    v10 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    v29 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v20);
    v31 = *v29;
    v30 = v29[1];
    v32 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v20);
    if ((v36 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
    }
    sub_1CA85C368();
    sub_1CA85B4B0();
    result = sub_1CA85C3B0();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v27 = v16 == v26;
        if (v16 == v26)
          v16 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v17);
    *v18 = v31;
    v18[1] = v30;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v17) = v32;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v22 = (_QWORD *)(v5 + 64);
  if ((v36 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v33 = 1 << *(_BYTE *)(v5 + 32);
  if (v33 >= 64)
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v33;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1CA256CDC(uint64_t a1, int a2)
{
  return sub_1CA256CF0(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for CollectionCuration, &qword_1EF94B0D8);
}

uint64_t sub_1CA256CF0(uint64_t a1, int a2, uint64_t (*a3)(_QWORD), uint64_t *a4)
{
  uint64_t *v4;
  uint64_t *v6;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t result;
  int64_t v20;
  unint64_t v21;
  _QWORD *v22;
  unint64_t v23;
  unint64_t v24;
  int64_t v25;
  _QWORD *v26;
  unint64_t v27;
  int64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  char v37;
  unint64_t v38;
  BOOL v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  int64_t v44;
  _QWORD *v45;
  uint64_t v46;
  int v47;
  uint64_t (*v48)(_QWORD);

  v6 = v4;
  v48 = a3;
  v8 = a3(0);
  v46 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v42 - v9;
  v11 = *v4;
  __swift_instantiateConcreteTypeFromMangledName(a4);
  v47 = a2;
  v12 = sub_1CA85C0B0();
  v13 = v12;
  if (!*(_QWORD *)(v11 + 16))
    goto LABEL_41;
  v14 = 1 << *(_BYTE *)(v11 + 32);
  v15 = *(_QWORD *)(v11 + 64);
  v45 = (_QWORD *)(v11 + 64);
  if (v14 < 64)
    v16 = ~(-1 << v14);
  else
    v16 = -1;
  v17 = v16 & v15;
  v43 = v4;
  v44 = (unint64_t)(v14 + 63) >> 6;
  v18 = v12 + 64;
  result = swift_retain();
  v20 = 0;
  while (1)
  {
    if (v17)
    {
      v23 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      v24 = v23 | (v20 << 6);
      goto LABEL_22;
    }
    v25 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v25 >= v44)
      break;
    v26 = v45;
    v27 = v45[v25];
    ++v20;
    if (!v27)
    {
      v20 = v25 + 1;
      if (v25 + 1 >= v44)
        goto LABEL_34;
      v27 = v45[v20];
      if (!v27)
      {
        v28 = v25 + 2;
        if (v28 >= v44)
        {
LABEL_34:
          swift_release();
          v6 = v43;
          if ((v47 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v27 = v45[v28];
        if (!v27)
        {
          while (1)
          {
            v20 = v28 + 1;
            if (__OFADD__(v28, 1))
              goto LABEL_43;
            if (v20 >= v44)
              goto LABEL_34;
            v27 = v45[v20];
            ++v28;
            if (v27)
              goto LABEL_21;
          }
        }
        v20 = v28;
      }
    }
LABEL_21:
    v17 = (v27 - 1) & v27;
    v24 = __clz(__rbit64(v27)) + (v20 << 6);
LABEL_22:
    v29 = (uint64_t *)(*(_QWORD *)(v11 + 48) + 16 * v24);
    v31 = *v29;
    v30 = v29[1];
    v32 = *(_QWORD *)(v46 + 72);
    v33 = *(_QWORD *)(v11 + 56) + v32 * v24;
    if ((v47 & 1) != 0)
    {
      sub_1CA24EE7C(v33, (uint64_t)v10, v48);
    }
    else
    {
      sub_1CA24EE38(v33, (uint64_t)v10, v48);
      swift_bridgeObjectRetain();
    }
    sub_1CA85C368();
    sub_1CA85B4B0();
    result = sub_1CA85C3B0();
    v34 = -1 << *(_BYTE *)(v13 + 32);
    v35 = result & ~v34;
    v36 = v35 >> 6;
    if (((-1 << v35) & ~*(_QWORD *)(v18 + 8 * (v35 >> 6))) != 0)
    {
      v21 = __clz(__rbit64((-1 << v35) & ~*(_QWORD *)(v18 + 8 * (v35 >> 6)))) | v35 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v37 = 0;
      v38 = (unint64_t)(63 - v34) >> 6;
      do
      {
        if (++v36 == v38 && (v37 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v39 = v36 == v38;
        if (v36 == v38)
          v36 = 0;
        v37 |= v39;
        v40 = *(_QWORD *)(v18 + 8 * v36);
      }
      while (v40 == -1);
      v21 = __clz(__rbit64(~v40)) + (v36 << 6);
    }
    *(_QWORD *)(v18 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
    v22 = (_QWORD *)(*(_QWORD *)(v13 + 48) + 16 * v21);
    *v22 = v31;
    v22[1] = v30;
    result = sub_1CA24EE7C((uint64_t)v10, *(_QWORD *)(v13 + 56) + v32 * v21, v48);
    ++*(_QWORD *)(v13 + 16);
  }
  swift_release();
  v6 = v43;
  v26 = v45;
  if ((v47 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v41 = 1 << *(_BYTE *)(v11 + 32);
  if (v41 >= 64)
    bzero(v26, ((unint64_t)(v41 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v26 = -1 << v41;
  *(_QWORD *)(v11 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v6 = v13;
  return result;
}

uint64_t sub_1CA257064(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  int64_t v35;
  uint64_t v36;
  char v37;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94AEE8);
  v37 = a2;
  v6 = sub_1CA85C0B0();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v36 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v34 = v2;
  v35 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v35)
      break;
    v22 = (_QWORD *)(v5 + 64);
    v23 = *(_QWORD *)(v36 + 8 * v21);
    ++v13;
    if (!v23)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v35)
        goto LABEL_33;
      v23 = *(_QWORD *)(v36 + 8 * v13);
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v35)
        {
LABEL_33:
          swift_release();
          v3 = v34;
          if ((v37 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v23 = *(_QWORD *)(v36 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            v13 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_42;
            if (v13 >= v35)
              goto LABEL_33;
            v23 = *(_QWORD *)(v36 + 8 * v13);
            ++v24;
            if (v23)
              goto LABEL_30;
          }
        }
        v13 = v24;
      }
    }
LABEL_30:
    v10 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    v29 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + 8 * v20);
    v30 = (uint64_t *)(*(_QWORD *)(v5 + 56) + 16 * v20);
    v31 = *v30;
    v32 = v30[1];
    if ((v37 & 1) == 0)
      swift_bridgeObjectRetain();
    sub_1CA85C368();
    sub_1CA85BC00();
    result = sub_1CA85C3B0();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v27 = v16 == v26;
        if (v16 == v26)
          v16 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    *(_QWORD *)(*(_QWORD *)(v7 + 48) + 8 * v17) = v29;
    v18 = (_QWORD *)(*(_QWORD *)(v7 + 56) + 16 * v17);
    *v18 = v31;
    v18[1] = v32;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v34;
  v22 = (_QWORD *)(v5 + 64);
  if ((v37 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v33 = 1 << *(_BYTE *)(v5 + 32);
  if (v33 >= 64)
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v33;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1CA257368(uint64_t a1, int a2)
{
  return sub_1CA25B35C(a1, a2, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], &qword_1ED874B08, (unint64_t *)&qword_1ED871190, MEMORY[0x1E0CB08A8]);
}

uint64_t sub_1CA25738C(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t result;
  int64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  char v31;
  unint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  uint64_t *v39;
  int64_t v40;
  _QWORD *v41;
  uint64_t v42;

  v4 = sub_1CA85AE74();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = v2;
  v8 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94B178);
  v9 = sub_1CA85C0B0();
  v10 = v9;
  if (!*(_QWORD *)(v8 + 16))
  {
    result = swift_release();
    v35 = v39;
LABEL_42:
    *v35 = v10;
    return result;
  }
  v11 = 1 << *(_BYTE *)(v8 + 32);
  v12 = *(_QWORD *)(v8 + 64);
  v41 = (_QWORD *)(v8 + 64);
  if (v11 < 64)
    v13 = ~(-1 << v11);
  else
    v13 = -1;
  v14 = v13 & v12;
  v40 = (unint64_t)(v11 + 63) >> 6;
  v15 = v9 + 64;
  result = swift_retain();
  v17 = 0;
  v38 = a2;
  v18 = 16;
  if ((a2 & 1) != 0)
    v18 = 32;
  v42 = v18;
  while (1)
  {
    if (v14)
    {
      v20 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v21 = v20 | (v17 << 6);
      goto LABEL_24;
    }
    v22 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
LABEL_43:
      __break(1u);
      goto LABEL_44;
    }
    if (v22 >= v40)
    {
      swift_release();
      v35 = v39;
      v23 = v41;
      if ((v38 & 1) != 0)
      {
LABEL_37:
        v36 = 1 << *(_BYTE *)(v8 + 32);
        if (v36 >= 64)
          bzero(v23, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
        else
          *v23 = -1 << v36;
        *(_QWORD *)(v8 + 16) = 0;
      }
LABEL_41:
      result = swift_release();
      goto LABEL_42;
    }
    v23 = v41;
    v24 = v41[v22];
    ++v17;
    if (!v24)
    {
      v17 = v22 + 1;
      if (v22 + 1 >= v40)
        goto LABEL_34;
      v24 = v41[v17];
      if (!v24)
        break;
    }
LABEL_23:
    v14 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v17 << 6);
LABEL_24:
    v26 = *(_QWORD *)(v5 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v5 + v42))(v7, *(_QWORD *)(v8 + 48) + v26 * v21, v4);
    v27 = *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v21);
    sub_1CA23CC98((unint64_t *)&qword_1EF94B180, (uint64_t (*)(uint64_t))MEMORY[0x1E0D76FC0], MEMORY[0x1E0D76FD0]);
    result = sub_1CA85B498();
    v28 = -1 << *(_BYTE *)(v10 + 32);
    v29 = result & ~v28;
    v30 = v29 >> 6;
    if (((-1 << v29) & ~*(_QWORD *)(v15 + 8 * (v29 >> 6))) != 0)
    {
      v19 = __clz(__rbit64((-1 << v29) & ~*(_QWORD *)(v15 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v31 = 0;
      v32 = (unint64_t)(63 - v28) >> 6;
      do
      {
        if (++v30 == v32 && (v31 & 1) != 0)
        {
          __break(1u);
          goto LABEL_43;
        }
        v33 = v30 == v32;
        if (v30 == v32)
          v30 = 0;
        v31 |= v33;
        v34 = *(_QWORD *)(v15 + 8 * v30);
      }
      while (v34 == -1);
      v19 = __clz(__rbit64(~v34)) + (v30 << 6);
    }
    *(_QWORD *)(v15 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v5 + 32))(*(_QWORD *)(v10 + 48) + v26 * v19, v7, v4);
    *(_QWORD *)(*(_QWORD *)(v10 + 56) + 8 * v19) = v27;
    ++*(_QWORD *)(v10 + 16);
  }
  v25 = v22 + 2;
  if (v25 >= v40)
  {
LABEL_34:
    swift_release();
    v35 = v39;
    if ((v38 & 1) != 0)
      goto LABEL_37;
    goto LABEL_41;
  }
  v24 = v41[v25];
  if (v24)
  {
    v17 = v25;
    goto LABEL_23;
  }
  while (1)
  {
    v17 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v17 >= v40)
      goto LABEL_34;
    v24 = v41[v17];
    ++v25;
    if (v24)
      goto LABEL_23;
  }
LABEL_44:
  __break(1u);
  return result;
}

uint64_t sub_1CA25771C(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t result;
  int64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  char v31;
  unint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  int64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;

  v4 = sub_1CA85ACD0();
  v42 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = v2;
  v7 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94B160);
  v8 = sub_1CA85C0B0();
  v9 = v8;
  if (!*(_QWORD *)(v7 + 16))
  {
    result = swift_release();
    v35 = v38;
LABEL_42:
    *v35 = v9;
    return result;
  }
  v10 = 1 << *(_BYTE *)(v7 + 32);
  v11 = *(_QWORD *)(v7 + 64);
  v40 = (_QWORD *)(v7 + 64);
  if (v10 < 64)
    v12 = ~(-1 << v10);
  else
    v12 = -1;
  v13 = v12 & v11;
  v39 = (unint64_t)(v10 + 63) >> 6;
  v14 = v8 + 64;
  result = swift_retain();
  v16 = 0;
  HIDWORD(v37) = a2;
  v17 = 16;
  if ((a2 & 1) != 0)
    v17 = 32;
  v41 = v17;
  while (1)
  {
    if (v13)
    {
      v19 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v20 = v19 | (v16 << 6);
      goto LABEL_24;
    }
    v21 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
LABEL_43:
      __break(1u);
      goto LABEL_44;
    }
    if (v21 >= v39)
    {
      swift_release();
      v35 = v38;
      v22 = v40;
      if ((v37 & 0x100000000) != 0)
      {
LABEL_37:
        v36 = 1 << *(_BYTE *)(v7 + 32);
        if (v36 >= 64)
          bzero(v22, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
        else
          *v22 = -1 << v36;
        *(_QWORD *)(v7 + 16) = 0;
      }
LABEL_41:
      result = swift_release();
      goto LABEL_42;
    }
    v22 = v40;
    v23 = v40[v21];
    ++v16;
    if (!v23)
    {
      v16 = v21 + 1;
      if (v21 + 1 >= v39)
        goto LABEL_34;
      v23 = v40[v16];
      if (!v23)
        break;
    }
LABEL_23:
    v13 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v16 << 6);
LABEL_24:
    v25 = *(_QWORD *)(v42 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v42 + v41))(v6, *(_QWORD *)(v7 + 48) + v25 * v20, v4);
    v26 = v7;
    v27 = *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v20);
    sub_1CA23CC98(&qword_1EF94B168, (uint64_t (*)(uint64_t))MEMORY[0x1E0D76BC0], MEMORY[0x1E0D76BD0]);
    result = sub_1CA85B498();
    v28 = -1 << *(_BYTE *)(v9 + 32);
    v29 = result & ~v28;
    v30 = v29 >> 6;
    if (((-1 << v29) & ~*(_QWORD *)(v14 + 8 * (v29 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v29) & ~*(_QWORD *)(v14 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v31 = 0;
      v32 = (unint64_t)(63 - v28) >> 6;
      do
      {
        if (++v30 == v32 && (v31 & 1) != 0)
        {
          __break(1u);
          goto LABEL_43;
        }
        v33 = v30 == v32;
        if (v30 == v32)
          v30 = 0;
        v31 |= v33;
        v34 = *(_QWORD *)(v14 + 8 * v30);
      }
      while (v34 == -1);
      v18 = __clz(__rbit64(~v34)) + (v30 << 6);
    }
    *(_QWORD *)(v14 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v42 + 32))(*(_QWORD *)(v9 + 48) + v25 * v18, v6, v4);
    *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v18) = v27;
    ++*(_QWORD *)(v9 + 16);
    v7 = v26;
  }
  v24 = v21 + 2;
  if (v24 >= v39)
  {
LABEL_34:
    swift_release();
    v35 = v38;
    if ((v37 & 0x100000000) != 0)
      goto LABEL_37;
    goto LABEL_41;
  }
  v23 = v40[v24];
  if (v23)
  {
    v16 = v24;
    goto LABEL_23;
  }
  while (1)
  {
    v16 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v16 >= v39)
      goto LABEL_34;
    v23 = v40[v16];
    ++v24;
    if (v23)
      goto LABEL_23;
  }
LABEL_44:
  __break(1u);
  return result;
}

uint64_t sub_1CA257AB8(uint64_t a1, char a2)
{
  return sub_1CA25A06C(a1, a2, &qword_1EF94B0B8);
}

uint64_t sub_1CA257AC4(uint64_t a1, char a2)
{
  return sub_1CA25B6F4(a1, a2, &qword_1EF94B0A8);
}

uint64_t sub_1CA257AD0(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  __int16 v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  char v31;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94B0B0);
  result = sub_1CA85C0B0();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v31 = a2;
    v8 = 0;
    v9 = (_QWORD *)(v5 + 64);
    v10 = 1 << *(_BYTE *)(v5 + 32);
    if (v10 < 64)
      v11 = ~(-1 << v10);
    else
      v11 = -1;
    v12 = v11 & *(_QWORD *)(v5 + 64);
    v13 = (unint64_t)(v10 + 63) >> 6;
    v14 = result + 64;
    while (1)
    {
      if (v12)
      {
        v16 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        v17 = v16 | (v8 << 6);
      }
      else
      {
        v18 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v18 >= v13)
          goto LABEL_31;
        v19 = v9[v18];
        ++v8;
        if (!v19)
        {
          v8 = v18 + 1;
          if (v18 + 1 >= v13)
            goto LABEL_31;
          v19 = v9[v8];
          if (!v19)
          {
            v20 = v18 + 2;
            if (v20 >= v13)
            {
LABEL_31:
              if ((v31 & 1) == 0)
              {
                result = swift_release();
                v3 = v2;
                goto LABEL_38;
              }
              v30 = 1 << *(_BYTE *)(v5 + 32);
              if (v30 >= 64)
                bzero((void *)(v5 + 64), ((unint64_t)(v30 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v9 = -1 << v30;
              v3 = v2;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v19 = v9[v20];
            if (!v19)
            {
              while (1)
              {
                v8 = v20 + 1;
                if (__OFADD__(v20, 1))
                  goto LABEL_40;
                if (v8 >= v13)
                  goto LABEL_31;
                v19 = v9[v8];
                ++v20;
                if (v19)
                  goto LABEL_21;
              }
            }
            v8 = v20;
          }
        }
LABEL_21:
        v12 = (v19 - 1) & v19;
        v17 = __clz(__rbit64(v19)) + (v8 << 6);
      }
      v21 = *(_WORD *)(*(_QWORD *)(v5 + 48) + 2 * v17);
      v22 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v17);
      sub_1CA85C368();
      sub_1CA85C38C();
      result = sub_1CA85C3B0();
      v23 = -1 << *(_BYTE *)(v7 + 32);
      v24 = result & ~v23;
      v25 = v24 >> 6;
      if (((-1 << v24) & ~*(_QWORD *)(v14 + 8 * (v24 >> 6))) != 0)
      {
        v15 = __clz(__rbit64((-1 << v24) & ~*(_QWORD *)(v14 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v26 = 0;
        v27 = (unint64_t)(63 - v23) >> 6;
        do
        {
          if (++v25 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          v28 = v25 == v27;
          if (v25 == v27)
            v25 = 0;
          v26 |= v28;
          v29 = *(_QWORD *)(v14 + 8 * v25);
        }
        while (v29 == -1);
        v15 = __clz(__rbit64(~v29)) + (v25 << 6);
      }
      *(_QWORD *)(v14 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      *(_WORD *)(*(_QWORD *)(v7 + 48) + 2 * v15) = v21;
      *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v15) = v22;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
LABEL_38:
  *v3 = v7;
  return result;
}

uint64_t sub_1CA257D98(uint64_t a1, char a2)
{
  return sub_1CA25A06C(a1, a2, &qword_1EF94AFA8);
}

uint64_t sub_1CA257DA4(uint64_t a1, char a2)
{
  return sub_1CA25A06C(a1, a2, &qword_1EF94AF98);
}

uint64_t sub_1CA257DB0(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  _QWORD *v18;
  unint64_t v19;
  int64_t v20;
  void *v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  int64_t v33;
  uint64_t v34;
  __int128 v35;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94B0A0);
  v6 = sub_1CA85C0B0();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_42;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v34 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v32 = v2;
  v33 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v15 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v16 = v15 | (v13 << 6);
      goto LABEL_22;
    }
    v17 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_43:
      __break(1u);
LABEL_44:
      __break(1u);
      return result;
    }
    if (v17 >= v33)
      break;
    v18 = (_QWORD *)(v5 + 64);
    v19 = *(_QWORD *)(v34 + 8 * v17);
    ++v13;
    if (!v19)
    {
      v13 = v17 + 1;
      if (v17 + 1 >= v33)
        goto LABEL_35;
      v19 = *(_QWORD *)(v34 + 8 * v13);
      if (!v19)
      {
        v20 = v17 + 2;
        if (v20 >= v33)
        {
LABEL_35:
          swift_release();
          v3 = v32;
          if ((a2 & 1) == 0)
            goto LABEL_42;
          goto LABEL_38;
        }
        v19 = *(_QWORD *)(v34 + 8 * v20);
        if (!v19)
        {
          while (1)
          {
            v13 = v20 + 1;
            if (__OFADD__(v20, 1))
              goto LABEL_44;
            if (v13 >= v33)
              goto LABEL_35;
            v19 = *(_QWORD *)(v34 + 8 * v13);
            ++v20;
            if (v19)
              goto LABEL_21;
          }
        }
        v13 = v20;
      }
    }
LABEL_21:
    v10 = (v19 - 1) & v19;
    v16 = __clz(__rbit64(v19)) + (v13 << 6);
LABEL_22:
    v21 = *(void **)(*(_QWORD *)(v5 + 56) + 8 * v16);
    v35 = *(_OWORD *)(*(_QWORD *)(v5 + 48) + 16 * v16);
    v22 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + 16 * v16 + 8);
    if ((a2 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      v23 = v21;
    }
    sub_1CA85C368();
    sub_1CA85C380();
    if (v22)
    {
      swift_bridgeObjectRetain();
      sub_1CA85B4B0();
      swift_bridgeObjectRelease();
    }
    result = sub_1CA85C3B0();
    v24 = -1 << *(_BYTE *)(v7 + 32);
    v25 = result & ~v24;
    v26 = v25 >> 6;
    if (((-1 << v25) & ~*(_QWORD *)(v11 + 8 * (v25 >> 6))) != 0)
    {
      v14 = __clz(__rbit64((-1 << v25) & ~*(_QWORD *)(v11 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v27 = 0;
      v28 = (unint64_t)(63 - v24) >> 6;
      do
      {
        if (++v26 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_43;
        }
        v29 = v26 == v28;
        if (v26 == v28)
          v26 = 0;
        v27 |= v29;
        v30 = *(_QWORD *)(v11 + 8 * v26);
      }
      while (v30 == -1);
      v14 = __clz(__rbit64(~v30)) + (v26 << 6);
    }
    *(_QWORD *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    *(_OWORD *)(*(_QWORD *)(v7 + 48) + 16 * v14) = v35;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v14) = v21;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v32;
  v18 = (_QWORD *)(v5 + 64);
  if ((a2 & 1) == 0)
    goto LABEL_42;
LABEL_38:
  v31 = 1 << *(_BYTE *)(v5 + 32);
  if (v31 >= 64)
    bzero(v18, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v18 = -1 << v31;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_42:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1CA2580DC(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t result;
  int64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  int64_t v25;
  _QWORD *v26;
  unint64_t v27;
  int64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  char v37;
  unint64_t v38;
  BOOL v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  int64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t i;
  int v48;
  uint64_t v49;

  v3 = v2;
  v5 = type metadata accessor for PersonalTraitInfo(0);
  v46 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v49 = (uint64_t)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1CA85AC4C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94B080);
  v48 = a2;
  v12 = sub_1CA85C0B0();
  v13 = v12;
  if (!*(_QWORD *)(v11 + 16))
    goto LABEL_42;
  v14 = 1 << *(_BYTE *)(v11 + 32);
  v15 = *(_QWORD *)(v11 + 64);
  v45 = (_QWORD *)(v11 + 64);
  if (v14 < 64)
    v16 = ~(-1 << v14);
  else
    v16 = -1;
  v17 = v16 & v15;
  v43 = v2;
  v44 = (unint64_t)(v14 + 63) >> 6;
  v18 = v12 + 64;
  result = swift_retain();
  v20 = 0;
  v21 = v11;
  for (i = v11; ; v21 = i)
  {
    if (v17)
    {
      v23 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      v24 = v23 | (v20 << 6);
      goto LABEL_22;
    }
    v25 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
LABEL_43:
      __break(1u);
LABEL_44:
      __break(1u);
      return result;
    }
    if (v25 >= v44)
      break;
    v26 = v45;
    v27 = v45[v25];
    ++v20;
    if (!v27)
    {
      v20 = v25 + 1;
      if (v25 + 1 >= v44)
        goto LABEL_35;
      v27 = v45[v20];
      if (!v27)
      {
        v28 = v25 + 2;
        if (v28 >= v44)
        {
LABEL_35:
          swift_release();
          v3 = v43;
          if ((v48 & 1) == 0)
            goto LABEL_42;
          goto LABEL_36;
        }
        v27 = v45[v28];
        if (!v27)
        {
          while (1)
          {
            v20 = v28 + 1;
            if (__OFADD__(v28, 1))
              goto LABEL_44;
            if (v20 >= v44)
              goto LABEL_35;
            v27 = v45[v20];
            ++v28;
            if (v27)
              goto LABEL_21;
          }
        }
        v20 = v28;
      }
    }
LABEL_21:
    v17 = (v27 - 1) & v27;
    v24 = __clz(__rbit64(v27)) + (v20 << 6);
LABEL_22:
    v29 = *(_QWORD *)(v8 + 72);
    v30 = *(_QWORD *)(v21 + 48) + v29 * v24;
    if ((v48 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v8 + 32))(v10, v30, v7);
      v31 = *(_QWORD *)(v21 + 56);
      v32 = *(_QWORD *)(v46 + 72);
      sub_1CA24EE7C(v31 + v32 * v24, v49, type metadata accessor for PersonalTraitInfo);
    }
    else
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v8 + 16))(v10, v30, v7);
      v33 = *(_QWORD *)(v21 + 56);
      v32 = *(_QWORD *)(v46 + 72);
      sub_1CA24EE38(v33 + v32 * v24, v49, type metadata accessor for PersonalTraitInfo);
    }
    sub_1CA23CC98(&qword_1EF94B088, (uint64_t (*)(uint64_t))MEMORY[0x1E0D76A08], MEMORY[0x1E0D76A18]);
    result = sub_1CA85B498();
    v34 = -1 << *(_BYTE *)(v13 + 32);
    v35 = result & ~v34;
    v36 = v35 >> 6;
    if (((-1 << v35) & ~*(_QWORD *)(v18 + 8 * (v35 >> 6))) != 0)
    {
      v22 = __clz(__rbit64((-1 << v35) & ~*(_QWORD *)(v18 + 8 * (v35 >> 6)))) | v35 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v37 = 0;
      v38 = (unint64_t)(63 - v34) >> 6;
      do
      {
        if (++v36 == v38 && (v37 & 1) != 0)
        {
          __break(1u);
          goto LABEL_43;
        }
        v39 = v36 == v38;
        if (v36 == v38)
          v36 = 0;
        v37 |= v39;
        v40 = *(_QWORD *)(v18 + 8 * v36);
      }
      while (v40 == -1);
      v22 = __clz(__rbit64(~v40)) + (v36 << 6);
    }
    *(_QWORD *)(v18 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(*(_QWORD *)(v13 + 48) + v29 * v22, v10, v7);
    result = sub_1CA24EE7C(v49, *(_QWORD *)(v13 + 56) + v32 * v22, type metadata accessor for PersonalTraitInfo);
    ++*(_QWORD *)(v13 + 16);
  }
  swift_release();
  v3 = v43;
  v26 = v45;
  if ((v48 & 1) == 0)
    goto LABEL_42;
LABEL_36:
  v41 = 1 << *(_BYTE *)(i + 32);
  if (v41 >= 64)
    bzero(v26, ((unint64_t)(v41 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v26 = -1 << v41;
  *(_QWORD *)(i + 16) = 0;
LABEL_42:
  result = swift_release();
  *v3 = v13;
  return result;
}

uint64_t sub_1CA2584F8(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  _QWORD *v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char v29;
  unint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t *v35;
  uint64_t v36;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94B098);
  v6 = sub_1CA85C0B0();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_38;
  v34 = a2;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v35 = v2;
  v36 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v11 = (unint64_t)(v8 + 63) >> 6;
  v12 = v6 + 64;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v10)
    {
      v17 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v18 = v17 | (v14 << 6);
      goto LABEL_22;
    }
    v19 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_39:
      __break(1u);
LABEL_40:
      __break(1u);
      return result;
    }
    if (v19 >= v11)
      break;
    v20 = (_QWORD *)(v5 + 64);
    v21 = *(_QWORD *)(v36 + 8 * v19);
    ++v14;
    if (!v21)
    {
      v14 = v19 + 1;
      if (v19 + 1 >= v11)
        goto LABEL_31;
      v21 = *(_QWORD *)(v36 + 8 * v14);
      if (!v21)
      {
        v22 = v19 + 2;
        if (v22 >= v11)
        {
LABEL_31:
          swift_release();
          v3 = v35;
          if ((v34 & 1) == 0)
            goto LABEL_38;
          goto LABEL_34;
        }
        v21 = *(_QWORD *)(v36 + 8 * v22);
        if (!v21)
        {
          while (1)
          {
            v14 = v22 + 1;
            if (__OFADD__(v22, 1))
              goto LABEL_40;
            if (v14 >= v11)
              goto LABEL_31;
            v21 = *(_QWORD *)(v36 + 8 * v14);
            ++v22;
            if (v21)
              goto LABEL_21;
          }
        }
        v14 = v22;
      }
    }
LABEL_21:
    v10 = (v21 - 1) & v21;
    v18 = __clz(__rbit64(v21)) + (v14 << 6);
LABEL_22:
    v23 = 8 * v18;
    v24 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + v23);
    v25 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + v23);
    sub_1CA85C368();
    sub_1CA85BC00();
    result = sub_1CA85C3B0();
    v26 = -1 << *(_BYTE *)(v7 + 32);
    v27 = result & ~v26;
    v28 = v27 >> 6;
    if (((-1 << v27) & ~*(_QWORD *)(v12 + 8 * (v27 >> 6))) != 0)
    {
      v15 = __clz(__rbit64((-1 << v27) & ~*(_QWORD *)(v12 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v29 = 0;
      v30 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v31 = v28 == v30;
        if (v28 == v30)
          v28 = 0;
        v29 |= v31;
        v32 = *(_QWORD *)(v12 + 8 * v28);
      }
      while (v32 == -1);
      v15 = __clz(__rbit64(~v32)) + (v28 << 6);
    }
    *(_QWORD *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    v16 = 8 * v15;
    *(_QWORD *)(*(_QWORD *)(v7 + 48) + v16) = v24;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + v16) = v25;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v35;
  v20 = (_QWORD *)(v5 + 64);
  if ((v34 & 1) == 0)
    goto LABEL_38;
LABEL_34:
  v33 = 1 << *(_BYTE *)(v5 + 32);
  if (v33 >= 64)
    bzero(v20, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v20 = -1 << v33;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_38:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1CA2587DC(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  id v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  char v37;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF94B068);
  v37 = a2;
  v6 = sub_1CA85C0B0();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v35 = v2;
  v36 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v11 = (unint64_t)(v8 + 63) >> 6;
  v12 = v6 + 64;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v10)
    {
      v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v11)
      break;
    v23 = (_QWORD *)(v5 + 64);
    v24 = *(_QWORD *)(v36 + 8 * v22);
    ++v14;
    if (!v24)
    {
      v14 = v22 + 1;
      if (v22 + 1 >= v11)
        goto LABEL_33;
      v24 = *(_QWORD *)(v36 + 8 * v14);
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v11)
        {
LABEL_33:
          swift_release();
          v3 = v35;
          if ((v37 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v24 = *(_QWORD *)(v36 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            v14 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_42;
            if (v14 >= v11)
              goto LABEL_33;
            v24 = *(_QWORD *)(v36 + 8 * v14);
            ++v25;
            if (v24)
              goto LABEL_30;
          }
        }
        v14 = v25;
      }
    }
LABEL_30:
    v10 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    v30 = 8 * v21;
    v31 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + v30);
    v32 = *(void **)(*(_QWORD *)(v5 + 56) + v30);
    if ((v37 & 1) == 0)
      v33 = v32;
    sub_1CA85C368();
    sub_1CA85BC00();
    result = sub_1CA85C3B0();
    v15 = -1 << *(_BYTE *)(v7 + 32);
    v16 = result & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v28 = v17 == v27;
        if (v17 == v27)
          v17 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = 8 * v18;
    *(_QWORD *)(*(_QWORD *)(v7 + 48) + v19) = v31;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + v19) = v32;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v35;
  v23 = (_QWORD *)(v5 + 64);
  if ((v37 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v34 = 1 << *(_BYTE *)(v5 + 32);
  if (v34 >= 64)
    bzero(v23, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v34;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1CA258AD0(uint64_t a1, char a2)
{
  return sub_1CA258DC8(a1, a2, &qword_1EF94B060);
}

uint64_t sub_1CA258ADC(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94AE80);
  v6 = sub_1CA85C0B0();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v35 = v2;
  v36 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v11 = (unint64_t)(v8 + 63) >> 6;
  v12 = v6 + 64;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v10)
    {
      v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v11)
      break;
    v23 = (_QWORD *)(v5 + 64);
    v24 = *(_QWORD *)(v36 + 8 * v22);
    ++v14;
    if (!v24)
    {
      v14 = v22 + 1;
      if (v22 + 1 >= v11)
        goto LABEL_33;
      v24 = *(_QWORD *)(v36 + 8 * v14);
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v11)
        {
LABEL_33:
          swift_release();
          v3 = v35;
          if ((a2 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v24 = *(_QWORD *)(v36 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            v14 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_42;
            if (v14 >= v11)
              goto LABEL_33;
            v24 = *(_QWORD *)(v36 + 8 * v14);
            ++v25;
            if (v24)
              goto LABEL_30;
          }
        }
        v14 = v25;
      }
    }
LABEL_30:
    v10 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    v30 = 8 * v21;
    v31 = *(void **)(*(_QWORD *)(v5 + 48) + v30);
    v32 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + v30);
    if ((a2 & 1) == 0)
    {
      v33 = v31;
      swift_retain();
    }
    result = sub_1CA85BC78();
    v15 = -1 << *(_BYTE *)(v7 + 32);
    v16 = result & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v28 = v17 == v27;
        if (v17 == v27)
          v17 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = 8 * v18;
    *(_QWORD *)(*(_QWORD *)(v7 + 48) + v19) = v31;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + v19) = v32;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v35;
  v23 = (_QWORD *)(v5 + 64);
  if ((a2 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v34 = 1 << *(_BYTE *)(v5 + 32);
  if (v34 >= 64)
    bzero(v23, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v34;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1CA258DB0(uint64_t a1, char a2)
{
  return sub_1CA258DC8(a1, a2, &qword_1EF94B038);
}

uint64_t sub_1CA258DBC(uint64_t a1, char a2)
{
  return sub_1CA258DC8(a1, a2, &qword_1EF94B058);
}

uint64_t sub_1CA258DC8(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t result;
  int64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  uint64_t *v36;

  v4 = v3;
  v6 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  v7 = sub_1CA85C0B0();
  v8 = v7;
  if (*(_QWORD *)(v6 + 16))
  {
    v36 = v3;
    v9 = 1 << *(_BYTE *)(v6 + 32);
    v10 = (_QWORD *)(v6 + 64);
    if (v9 < 64)
      v11 = ~(-1 << v9);
    else
      v11 = -1;
    v12 = v11 & *(_QWORD *)(v6 + 64);
    v13 = (unint64_t)(v9 + 63) >> 6;
    v14 = v7 + 64;
    result = swift_retain();
    v16 = 0;
    while (1)
    {
      if (v12)
      {
        v22 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        v23 = v22 | (v16 << 6);
      }
      else
      {
        v24 = v16 + 1;
        if (__OFADD__(v16, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        if (v24 >= v13)
          goto LABEL_33;
        v25 = v10[v24];
        ++v16;
        if (!v25)
        {
          v16 = v24 + 1;
          if (v24 + 1 >= v13)
            goto LABEL_33;
          v25 = v10[v16];
          if (!v25)
          {
            v26 = v24 + 2;
            if (v26 >= v13)
            {
LABEL_33:
              swift_release();
              if ((a2 & 1) == 0)
              {
                result = swift_release();
                v4 = v36;
                goto LABEL_40;
              }
              v35 = 1 << *(_BYTE *)(v6 + 32);
              if (v35 >= 64)
                bzero((void *)(v6 + 64), ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v10 = -1 << v35;
              v4 = v36;
              *(_QWORD *)(v6 + 16) = 0;
              break;
            }
            v25 = v10[v26];
            if (!v25)
            {
              while (1)
              {
                v16 = v26 + 1;
                if (__OFADD__(v26, 1))
                  goto LABEL_42;
                if (v16 >= v13)
                  goto LABEL_33;
                v25 = v10[v16];
                ++v26;
                if (v25)
                  goto LABEL_30;
              }
            }
            v16 = v26;
          }
        }
LABEL_30:
        v12 = (v25 - 1) & v25;
        v23 = __clz(__rbit64(v25)) + (v16 << 6);
      }
      v31 = 8 * v23;
      v32 = *(void **)(*(_QWORD *)(v6 + 48) + v31);
      v33 = *(_QWORD *)(*(_QWORD *)(v6 + 56) + v31);
      if ((a2 & 1) == 0)
        v34 = v32;
      result = sub_1CA85BC78();
      v17 = -1 << *(_BYTE *)(v8 + 32);
      v18 = result & ~v17;
      v19 = v18 >> 6;
      if (((-1 << v18) & ~*(_QWORD *)(v14 + 8 * (v18 >> 6))) != 0)
      {
        v20 = __clz(__rbit64((-1 << v18) & ~*(_QWORD *)(v14 + 8 * (v18 >> 6)))) | v18 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v27 = 0;
        v28 = (unint64_t)(63 - v17) >> 6;
        do
        {
          if (++v19 == v28 && (v27 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v29 = v19 == v28;
          if (v19 == v28)
            v19 = 0;
          v27 |= v29;
          v30 = *(_QWORD *)(v14 + 8 * v19);
        }
        while (v30 == -1);
        v20 = __clz(__rbit64(~v30)) + (v19 << 6);
      }
      *(_QWORD *)(v14 + ((v20 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v20;
      v21 = 8 * v20;
      *(_QWORD *)(*(_QWORD *)(v8 + 48) + v21) = v32;
      *(_QWORD *)(*(_QWORD *)(v8 + 56) + v21) = v33;
      ++*(_QWORD *)(v8 + 16);
    }
  }
  result = swift_release();
LABEL_40:
  *v4 = v8;
  return result;
}

uint64_t sub_1CA259090(uint64_t a1, int a2, uint64_t (*a3)(_QWORD), uint64_t *a4)
{
  uint64_t *v4;
  uint64_t *v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t result;
  int64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  int64_t v25;
  _QWORD *v26;
  unint64_t v27;
  int64_t v28;
  void *v29;
  uint64_t v30;
  unint64_t v31;
  id v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  char v36;
  unint64_t v37;
  BOOL v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  int64_t v42;
  _QWORD *v43;
  int v44;

  v6 = v4;
  v8 = a3(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v41 - v10;
  v12 = *v4;
  __swift_instantiateConcreteTypeFromMangledName(a4);
  v44 = a2;
  v13 = sub_1CA85C0B0();
  v14 = v13;
  if (!*(_QWORD *)(v12 + 16))
    goto LABEL_41;
  v15 = 1 << *(_BYTE *)(v12 + 32);
  v16 = *(_QWORD *)(v12 + 64);
  v43 = (_QWORD *)(v12 + 64);
  if (v15 < 64)
    v17 = ~(-1 << v15);
  else
    v17 = -1;
  v18 = v17 & v16;
  v41 = v4;
  v42 = (unint64_t)(v15 + 63) >> 6;
  v19 = v13 + 64;
  result = swift_retain();
  v21 = 0;
  while (1)
  {
    if (v18)
    {
      v23 = __clz(__rbit64(v18));
      v18 &= v18 - 1;
      v24 = v23 | (v21 << 6);
      goto LABEL_22;
    }
    v25 = v21 + 1;
    if (__OFADD__(v21, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v25 >= v42)
      break;
    v26 = v43;
    v27 = v43[v25];
    ++v21;
    if (!v27)
    {
      v21 = v25 + 1;
      if (v25 + 1 >= v42)
        goto LABEL_34;
      v27 = v43[v21];
      if (!v27)
      {
        v28 = v25 + 2;
        if (v28 >= v42)
        {
LABEL_34:
          swift_release();
          v6 = v41;
          if ((v44 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v27 = v43[v28];
        if (!v27)
        {
          while (1)
          {
            v21 = v28 + 1;
            if (__OFADD__(v28, 1))
              goto LABEL_43;
            if (v21 >= v42)
              goto LABEL_34;
            v27 = v43[v21];
            ++v28;
            if (v27)
              goto LABEL_21;
          }
        }
        v21 = v28;
      }
    }
LABEL_21:
    v18 = (v27 - 1) & v27;
    v24 = __clz(__rbit64(v27)) + (v21 << 6);
LABEL_22:
    v29 = *(void **)(*(_QWORD *)(v12 + 48) + 8 * v24);
    v30 = *(_QWORD *)(v9 + 72);
    v31 = *(_QWORD *)(v12 + 56) + v30 * v24;
    if ((v44 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v9 + 32))(v11, v31, v8);
    }
    else
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v9 + 16))(v11, v31, v8);
      v32 = v29;
    }
    result = sub_1CA85BC78();
    v33 = -1 << *(_BYTE *)(v14 + 32);
    v34 = result & ~v33;
    v35 = v34 >> 6;
    if (((-1 << v34) & ~*(_QWORD *)(v19 + 8 * (v34 >> 6))) != 0)
    {
      v22 = __clz(__rbit64((-1 << v34) & ~*(_QWORD *)(v19 + 8 * (v34 >> 6)))) | v34 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v36 = 0;
      v37 = (unint64_t)(63 - v33) >> 6;
      do
      {
        if (++v35 == v37 && (v36 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v38 = v35 == v37;
        if (v35 == v37)
          v35 = 0;
        v36 |= v38;
        v39 = *(_QWORD *)(v19 + 8 * v35);
      }
      while (v39 == -1);
      v22 = __clz(__rbit64(~v39)) + (v35 << 6);
    }
    *(_QWORD *)(v19 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    *(_QWORD *)(*(_QWORD *)(v14 + 48) + 8 * v22) = v29;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v9 + 32))(*(_QWORD *)(v14 + 56) + v30 * v22, v11, v8);
    ++*(_QWORD *)(v14 + 16);
  }
  swift_release();
  v6 = v41;
  v26 = v43;
  if ((v44 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v40 = 1 << *(_BYTE *)(v12 + 32);
  if (v40 >= 64)
    bzero(v26, ((unint64_t)(v40 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v26 = -1 << v40;
  *(_QWORD *)(v12 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v6 = v14;
  return result;
}

uint64_t sub_1CA2593E0(uint64_t a1, char a2)
{
  return sub_1CA25A06C(a1, a2, (uint64_t *)&unk_1EF94B040);
}

uint64_t sub_1CA2593EC(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  int64_t v36;
  uint64_t v37;
  char v38;

  v4 = v3;
  v6 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  v38 = a2;
  v7 = sub_1CA85C0B0();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
    goto LABEL_40;
  v9 = 1 << *(_BYTE *)(v6 + 32);
  v37 = v6 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v6 + 64);
  v35 = v3;
  v36 = (unint64_t)(v9 + 63) >> 6;
  v12 = v7 + 64;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v11)
    {
      v20 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v36)
      break;
    v23 = (_QWORD *)(v6 + 64);
    v24 = *(_QWORD *)(v37 + 8 * v22);
    ++v14;
    if (!v24)
    {
      v14 = v22 + 1;
      if (v22 + 1 >= v36)
        goto LABEL_33;
      v24 = *(_QWORD *)(v37 + 8 * v14);
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v36)
        {
LABEL_33:
          swift_release();
          v4 = v35;
          if ((v38 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v24 = *(_QWORD *)(v37 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            v14 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_42;
            if (v14 >= v36)
              goto LABEL_33;
            v24 = *(_QWORD *)(v37 + 8 * v14);
            ++v25;
            if (v24)
              goto LABEL_30;
          }
        }
        v14 = v25;
      }
    }
LABEL_30:
    v11 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    v30 = (uint64_t *)(*(_QWORD *)(v6 + 48) + 16 * v21);
    v32 = *v30;
    v31 = v30[1];
    v33 = *(_QWORD *)(*(_QWORD *)(v6 + 56) + 8 * v21);
    if ((v38 & 1) == 0)
      swift_bridgeObjectRetain();
    sub_1CA85C368();
    sub_1CA85B4B0();
    result = sub_1CA85C3B0();
    v15 = -1 << *(_BYTE *)(v8 + 32);
    v16 = result & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v28 = v17 == v27;
        if (v17 == v27)
          v17 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 16 * v18);
    *v19 = v32;
    v19[1] = v31;
    *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v18) = v33;
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release();
  v4 = v35;
  v23 = (_QWORD *)(v6 + 64);
  if ((v38 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v34 = 1 << *(_BYTE *)(v6 + 32);
  if (v34 >= 64)
    bzero(v23, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v34;
  *(_QWORD *)(v6 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v4 = v8;
  return result;
}

uint64_t sub_1CA2596F0(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int64_t v37;
  _QWORD *v38;
  uint64_t i;
  char v40;
  uint64_t v41;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94B028);
  v40 = a2;
  v6 = sub_1CA85C0B0();
  v7 = v6;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 1 << *(_BYTE *)(v5 + 32);
    v38 = (_QWORD *)(v5 + 64);
    if (v8 < 64)
      v9 = ~(-1 << v8);
    else
      v9 = -1;
    v10 = v9 & *(_QWORD *)(v5 + 64);
    v37 = (unint64_t)(v8 + 63) >> 6;
    v11 = v6 + 64;
    result = swift_retain();
    v13 = 0;
    for (i = v5; ; v5 = i)
    {
      if (v10)
      {
        v20 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v21 = v20 | (v13 << 6);
      }
      else
      {
        v22 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v22 >= v37)
          goto LABEL_33;
        v23 = v38[v22];
        ++v13;
        if (!v23)
        {
          v13 = v22 + 1;
          if (v22 + 1 >= v37)
            goto LABEL_33;
          v23 = v38[v13];
          if (!v23)
          {
            v24 = v22 + 2;
            if (v24 >= v37)
            {
LABEL_33:
              swift_release();
              v3 = v2;
              if ((v40 & 1) != 0)
              {
                v36 = 1 << *(_BYTE *)(v5 + 32);
                if (v36 >= 64)
                  bzero(v38, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v38 = -1 << v36;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v23 = v38[v24];
            if (!v23)
            {
              while (1)
              {
                v13 = v24 + 1;
                if (__OFADD__(v24, 1))
                  goto LABEL_40;
                if (v13 >= v37)
                  goto LABEL_33;
                v23 = v38[v13];
                ++v24;
                if (v23)
                  goto LABEL_30;
              }
            }
            v13 = v24;
          }
        }
LABEL_30:
        v10 = (v23 - 1) & v23;
        v21 = __clz(__rbit64(v23)) + (v13 << 6);
      }
      v29 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v21);
      v31 = *v29;
      v30 = v29[1];
      v32 = (uint64_t *)(*(_QWORD *)(v5 + 56) + 32 * v21);
      v33 = *v32;
      v34 = v32[1];
      v35 = v32[3];
      v41 = v32[2];
      if ((v40 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      sub_1CA85C368();
      sub_1CA85B4B0();
      result = sub_1CA85C3B0();
      v14 = -1 << *(_BYTE *)(v7 + 32);
      v15 = result & ~v14;
      v16 = v15 >> 6;
      if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
      {
        v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          v27 = v16 == v26;
          if (v16 == v26)
            v16 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v11 + 8 * v16);
        }
        while (v28 == -1);
        v17 = __clz(__rbit64(~v28)) + (v16 << 6);
      }
      *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v17);
      *v18 = v31;
      v18[1] = v30;
      v19 = (_QWORD *)(*(_QWORD *)(v7 + 56) + 32 * v17);
      *v19 = v33;
      v19[1] = v34;
      v19[2] = v41;
      v19[3] = v35;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1CA259A18(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  _QWORD *v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  unint64_t v23;
  void *v24;
  id v25;
  uint64_t v26;
  uint64_t i;
  void **v28;
  void *v29;
  id v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  char v34;
  unint64_t v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  int64_t v40;
  uint64_t v41;
  char v42;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94B010);
  v42 = a2;
  v6 = sub_1CA85C0B0();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_51;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v41 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v39 = v2;
  v40 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v16 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v17 = v16 | (v13 << 6);
      goto LABEL_22;
    }
    v18 = v13 + 1;
    if (__OFADD__(v13, 1))
      goto LABEL_53;
    if (v18 >= v40)
      break;
    v19 = (_QWORD *)(v5 + 64);
    v20 = *(_QWORD *)(v41 + 8 * v18);
    ++v13;
    if (!v20)
    {
      v13 = v18 + 1;
      if (v18 + 1 >= v40)
        goto LABEL_44;
      v20 = *(_QWORD *)(v41 + 8 * v13);
      if (!v20)
      {
        v21 = v18 + 2;
        if (v21 >= v40)
        {
LABEL_44:
          swift_release();
          v3 = v39;
          if ((v42 & 1) == 0)
            goto LABEL_51;
          goto LABEL_47;
        }
        v20 = *(_QWORD *)(v41 + 8 * v21);
        if (!v20)
        {
          while (1)
          {
            v13 = v21 + 1;
            if (__OFADD__(v21, 1))
              goto LABEL_54;
            if (v13 >= v40)
              goto LABEL_44;
            v20 = *(_QWORD *)(v41 + 8 * v13);
            ++v21;
            if (v20)
              goto LABEL_21;
          }
        }
        v13 = v21;
      }
    }
LABEL_21:
    v10 = (v20 - 1) & v20;
    v17 = __clz(__rbit64(v20)) + (v13 << 6);
LABEL_22:
    v22 = 8 * v17;
    v23 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + v22);
    v24 = *(void **)(*(_QWORD *)(v5 + 56) + v22);
    if ((v42 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      v25 = v24;
    }
    sub_1CA85C368();
    if (v23 >> 62)
    {
      swift_bridgeObjectRetain();
      sub_1CA85C08C();
      swift_bridgeObjectRelease();
      sub_1CA85C374();
      swift_bridgeObjectRetain();
      v26 = sub_1CA85C08C();
      result = swift_bridgeObjectRelease();
      if (!v26)
        goto LABEL_33;
    }
    else
    {
      result = sub_1CA85C374();
      v26 = *(_QWORD *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (!v26)
        goto LABEL_33;
    }
    if (v26 < 1)
    {
LABEL_52:
      __break(1u);
LABEL_53:
      __break(1u);
LABEL_54:
      __break(1u);
      return result;
    }
    if ((v23 & 0xC000000000000001) != 0)
    {
      for (i = 0; i != v26; ++i)
      {
        MEMORY[0x1CAA4DD64](i, v23);
        sub_1CA85BC90();
        swift_unknownObjectRelease();
      }
    }
    else
    {
      v28 = (void **)(v23 + 32);
      do
      {
        v29 = *v28++;
        v30 = v29;
        sub_1CA85BC90();

        --v26;
      }
      while (v26);
    }
LABEL_33:
    result = sub_1CA85C3B0();
    v31 = -1 << *(_BYTE *)(v7 + 32);
    v32 = result & ~v31;
    v33 = v32 >> 6;
    if (((-1 << v32) & ~*(_QWORD *)(v11 + 8 * (v32 >> 6))) != 0)
    {
      v14 = __clz(__rbit64((-1 << v32) & ~*(_QWORD *)(v11 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v34 = 0;
      v35 = (unint64_t)(63 - v31) >> 6;
      do
      {
        if (++v33 == v35 && (v34 & 1) != 0)
        {
          __break(1u);
          goto LABEL_52;
        }
        v36 = v33 == v35;
        if (v33 == v35)
          v33 = 0;
        v34 |= v36;
        v37 = *(_QWORD *)(v11 + 8 * v33);
      }
      while (v37 == -1);
      v14 = __clz(__rbit64(~v37)) + (v33 << 6);
    }
    *(_QWORD *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    v15 = 8 * v14;
    *(_QWORD *)(*(_QWORD *)(v7 + 48) + v15) = v23;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + v15) = v24;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v39;
  v19 = (_QWORD *)(v5 + 64);
  if ((v42 & 1) == 0)
    goto LABEL_51;
LABEL_47:
  v38 = 1 << *(_BYTE *)(v5 + 32);
  if (v38 >= 64)
    bzero(v19, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v19 = -1 << v38;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_51:
  result = swift_release();
  *v3 = v7;
  return result;
}

unint64_t sub_1CA259DF8(uint64_t a1, char a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  unint64_t result;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  id v24;
  uint64_t v25;
  _QWORD *v26;
  _BYTE v27[72];

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94AFF8);
  v6 = sub_1CA85C0B0();
  v7 = (_QWORD *)v6;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 1 << *(_BYTE *)(v5 + 32);
    v26 = (_QWORD *)(v5 + 64);
    if (v8 < 64)
      v9 = ~(-1 << v8);
    else
      v9 = -1;
    v10 = v9 & *(_QWORD *)(v5 + 64);
    v11 = (unint64_t)(v8 + 63) >> 6;
    v12 = v6 + 64;
    result = swift_retain();
    v14 = 0;
    while (1)
    {
      if (v10)
      {
        v16 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v17 = v16 | (v14 << 6);
      }
      else
      {
        v18 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
          __break(1u);
LABEL_30:
          __break(1u);
          return result;
        }
        if (v18 >= v11)
          goto LABEL_23;
        v19 = v26[v18];
        ++v14;
        if (!v19)
        {
          v14 = v18 + 1;
          if (v18 + 1 >= v11)
            goto LABEL_23;
          v19 = v26[v14];
          if (!v19)
          {
            v20 = v18 + 2;
            if (v20 >= v11)
            {
LABEL_23:
              swift_release();
              v3 = v2;
              if ((a2 & 1) != 0)
              {
                v25 = 1 << *(_BYTE *)(v5 + 32);
                if (v25 > 63)
                  bzero(v26, ((unint64_t)(v25 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v26 = -1 << v25;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v19 = v26[v20];
            if (!v19)
            {
              while (1)
              {
                v14 = v20 + 1;
                if (__OFADD__(v20, 1))
                  goto LABEL_30;
                if (v14 >= v11)
                  goto LABEL_23;
                v19 = v26[v14];
                ++v20;
                if (v19)
                  goto LABEL_20;
              }
            }
            v14 = v20;
          }
        }
LABEL_20:
        v10 = (v19 - 1) & v19;
        v17 = __clz(__rbit64(v19)) + (v14 << 6);
      }
      v21 = 8 * v17;
      v22 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + v21);
      v23 = *(void **)(*(_QWORD *)(v5 + 56) + v21);
      if ((a2 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        v24 = v23;
      }
      sub_1CA85C368();
      sub_1CA266BA4((uint64_t)v27, v22);
      sub_1CA85C3B0();
      result = sub_1CA85BDB0();
      *(_QWORD *)(v12 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
      v15 = 8 * result;
      *(_QWORD *)(v7[6] + v15) = v22;
      *(_QWORD *)(v7[7] + v15) = v23;
      ++v7[2];
    }
  }
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1CA25A060(uint64_t a1, char a2)
{
  return sub_1CA25C5B0(a1, a2, &qword_1EF94AFE8);
}

uint64_t sub_1CA25A06C(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int64_t v35;
  uint64_t v36;
  char v37;

  v4 = v3;
  v6 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  v37 = a2;
  v7 = sub_1CA85C0B0();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
    goto LABEL_40;
  v9 = 1 << *(_BYTE *)(v6 + 32);
  v36 = v6 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v6 + 64);
  v35 = (unint64_t)(v9 + 63) >> 6;
  v12 = v7 + 64;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v11)
    {
      v20 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v35)
      break;
    v23 = (_QWORD *)(v6 + 64);
    v24 = *(_QWORD *)(v36 + 8 * v22);
    ++v14;
    if (!v24)
    {
      v14 = v22 + 1;
      if (v22 + 1 >= v35)
        goto LABEL_33;
      v24 = *(_QWORD *)(v36 + 8 * v14);
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v35)
        {
LABEL_33:
          swift_release();
          if ((v37 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v24 = *(_QWORD *)(v36 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            v14 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_42;
            if (v14 >= v35)
              goto LABEL_33;
            v24 = *(_QWORD *)(v36 + 8 * v14);
            ++v25;
            if (v24)
              goto LABEL_30;
          }
        }
        v14 = v25;
      }
    }
LABEL_30:
    v11 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    v30 = (uint64_t *)(*(_QWORD *)(v6 + 48) + 16 * v21);
    v32 = *v30;
    v31 = v30[1];
    v33 = *(_QWORD *)(*(_QWORD *)(v6 + 56) + 8 * v21);
    if ((v37 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_1CA85C368();
    sub_1CA85B4B0();
    result = sub_1CA85C3B0();
    v15 = -1 << *(_BYTE *)(v8 + 32);
    v16 = result & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v28 = v17 == v27;
        if (v17 == v27)
          v17 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 16 * v18);
    *v19 = v32;
    v19[1] = v31;
    *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v18) = v33;
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release();
  v23 = (_QWORD *)(v6 + 64);
  if ((v37 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v34 = 1 << *(_BYTE *)(v6 + 32);
  if (v34 >= 64)
    bzero(v23, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v34;
  *(_QWORD *)(v6 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v4 = v8;
  return result;
}

uint64_t sub_1CA25A37C(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t *v34;
  int64_t v35;
  uint64_t v36;
  char v37;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED872530);
  v37 = a2;
  v6 = sub_1CA85C0B0();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v36 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v34 = v2;
  v35 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v35)
      break;
    v22 = (_QWORD *)(v5 + 64);
    v23 = *(_QWORD *)(v36 + 8 * v21);
    ++v13;
    if (!v23)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v35)
        goto LABEL_33;
      v23 = *(_QWORD *)(v36 + 8 * v13);
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v35)
        {
LABEL_33:
          swift_release();
          v3 = v34;
          if ((v37 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v23 = *(_QWORD *)(v36 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            v13 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_42;
            if (v13 >= v35)
              goto LABEL_33;
            v23 = *(_QWORD *)(v36 + 8 * v13);
            ++v24;
            if (v23)
              goto LABEL_30;
          }
        }
        v13 = v24;
      }
    }
LABEL_30:
    v10 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    v29 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v20);
    v31 = *v29;
    v30 = v29[1];
    v32 = *(_BYTE *)(*(_QWORD *)(v5 + 56) + v20);
    if ((v37 & 1) == 0)
      swift_bridgeObjectRetain();
    sub_1CA85C368();
    sub_1CA85B4B0();
    result = sub_1CA85C3B0();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v27 = v16 == v26;
        if (v16 == v26)
          v16 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v17);
    *v18 = v31;
    v18[1] = v30;
    *(_BYTE *)(*(_QWORD *)(v7 + 56) + v17) = v32;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v34;
  v22 = (_QWORD *)(v5 + 64);
  if ((v37 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v33 = 1 << *(_BYTE *)(v5 + 32);
  if (v33 >= 64)
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v33;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1CA25A684(uint64_t a1, char a2)
{
  return sub_1CA25B6F4(a1, a2, (uint64_t *)&unk_1EF94AFD8);
}

uint64_t sub_1CA25A690(uint64_t a1, char a2)
{
  return sub_1CA25B6F4(a1, a2, &qword_1EF94B0E0);
}

uint64_t sub_1CA25A69C(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  _QWORD *v24;
  unint64_t v25;
  int64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  int64_t v40;
  uint64_t v41;
  char v42;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED872528);
  v42 = a2;
  v6 = sub_1CA85C0B0();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v41 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v39 = v2;
  v40 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v21 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v22 = v21 | (v13 << 6);
      goto LABEL_31;
    }
    v23 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v23 >= v40)
      break;
    v24 = (_QWORD *)(v5 + 64);
    v25 = *(_QWORD *)(v41 + 8 * v23);
    ++v13;
    if (!v25)
    {
      v13 = v23 + 1;
      if (v23 + 1 >= v40)
        goto LABEL_33;
      v25 = *(_QWORD *)(v41 + 8 * v13);
      if (!v25)
      {
        v26 = v23 + 2;
        if (v26 >= v40)
        {
LABEL_33:
          swift_release();
          v3 = v39;
          if ((v42 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v25 = *(_QWORD *)(v41 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            v13 = v26 + 1;
            if (__OFADD__(v26, 1))
              goto LABEL_42;
            if (v13 >= v40)
              goto LABEL_33;
            v25 = *(_QWORD *)(v41 + 8 * v13);
            ++v26;
            if (v25)
              goto LABEL_30;
          }
        }
        v13 = v26;
      }
    }
LABEL_30:
    v10 = (v25 - 1) & v25;
    v22 = __clz(__rbit64(v25)) + (v13 << 6);
LABEL_31:
    v31 = 16 * v22;
    v32 = (uint64_t *)(*(_QWORD *)(v5 + 48) + v31);
    v34 = *v32;
    v33 = v32[1];
    v35 = (uint64_t *)(*(_QWORD *)(v5 + 56) + v31);
    v36 = *v35;
    v37 = v35[1];
    if ((v42 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_1CA85C368();
    sub_1CA85B4B0();
    result = sub_1CA85C3B0();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v27 = 0;
      v28 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v29 = v16 == v28;
        if (v16 == v28)
          v16 = 0;
        v27 |= v29;
        v30 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v30 == -1);
      v17 = __clz(__rbit64(~v30)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = 16 * v17;
    v19 = (_QWORD *)(*(_QWORD *)(v7 + 48) + v18);
    *v19 = v34;
    v19[1] = v33;
    v20 = (_QWORD *)(*(_QWORD *)(v7 + 56) + v18);
    *v20 = v36;
    v20[1] = v37;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v39;
  v24 = (_QWORD *)(v5 + 64);
  if ((v42 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v38 = 1 << *(_BYTE *)(v5 + 32);
  if (v38 >= 64)
    bzero(v24, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v24 = -1 << v38;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1CA25A9C0(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int64_t v37;
  _QWORD *v38;
  char v39;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED874B18);
  v39 = a2;
  result = sub_1CA85C0B0();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 0;
    v38 = (_QWORD *)(v5 + 64);
    v9 = 1 << *(_BYTE *)(v5 + 32);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v37 = (unint64_t)(v9 + 63) >> 6;
    v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        v20 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v21 = v20 | (v8 << 6);
      }
      else
      {
        v22 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        result = v5 + 64;
        if (v22 >= v37)
          goto LABEL_33;
        v23 = v38[v22];
        ++v8;
        if (!v23)
        {
          v8 = v22 + 1;
          if (v22 + 1 >= v37)
            goto LABEL_33;
          v23 = v38[v8];
          if (!v23)
          {
            v24 = v22 + 2;
            if (v24 >= v37)
            {
LABEL_33:
              if ((v39 & 1) == 0)
              {
                result = swift_release();
                v3 = v2;
                goto LABEL_40;
              }
              v36 = 1 << *(_BYTE *)(v5 + 32);
              if (v36 >= 64)
                bzero(v38, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v38 = -1 << v36;
              v3 = v2;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v23 = v38[v24];
            if (!v23)
            {
              while (1)
              {
                v8 = v24 + 1;
                if (__OFADD__(v24, 1))
                  goto LABEL_42;
                if (v8 >= v37)
                  goto LABEL_33;
                v23 = v38[v8];
                ++v24;
                if (v23)
                  goto LABEL_30;
              }
            }
            v8 = v24;
          }
        }
LABEL_30:
        v11 = (v23 - 1) & v23;
        v21 = __clz(__rbit64(v23)) + (v8 << 6);
      }
      v29 = 16 * v21;
      v30 = (uint64_t *)(*(_QWORD *)(v5 + 48) + v29);
      v32 = *v30;
      v31 = v30[1];
      v33 = (uint64_t *)(*(_QWORD *)(v5 + 56) + v29);
      v34 = *v33;
      v35 = v33[1];
      if ((v39 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      sub_1CA85C368();
      sub_1CA85B4B0();
      result = sub_1CA85C3B0();
      v13 = -1 << *(_BYTE *)(v7 + 32);
      v14 = result & ~v13;
      v15 = v14 >> 6;
      if (((-1 << v14) & ~*(_QWORD *)(v12 + 8 * (v14 >> 6))) != 0)
      {
        v16 = __clz(__rbit64((-1 << v14) & ~*(_QWORD *)(v12 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v27 = v15 == v26;
          if (v15 == v26)
            v15 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v12 + 8 * v15);
        }
        while (v28 == -1);
        v16 = __clz(__rbit64(~v28)) + (v15 << 6);
      }
      *(_QWORD *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      v17 = 16 * v16;
      v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + v17);
      *v18 = v32;
      v18[1] = v31;
      v19 = (_QWORD *)(*(_QWORD *)(v7 + 56) + v17);
      *v19 = v34;
      v19[1] = v35;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
LABEL_40:
  *v3 = v7;
  return result;
}

uint64_t sub_1CA25ACC0(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t result;
  int64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  _QWORD *v24;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  char v34;
  unint64_t v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  uint64_t *v41;
  int64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;

  v3 = v2;
  v45 = sub_1CA85A5B0();
  v5 = *(_QWORD *)(v45 - 8);
  MEMORY[0x1E0C80A78](v45);
  v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94AF08);
  v9 = sub_1CA85C0B0();
  v10 = v9;
  if (!*(_QWORD *)(v8 + 16))
    goto LABEL_40;
  v41 = v2;
  v11 = 1 << *(_BYTE *)(v8 + 32);
  v12 = *(_QWORD *)(v8 + 64);
  v43 = (_QWORD *)(v8 + 64);
  if (v11 < 64)
    v13 = ~(-1 << v11);
  else
    v13 = -1;
  v14 = v13 & v12;
  v42 = (unint64_t)(v11 + 63) >> 6;
  v15 = a2;
  v16 = v9 + 64;
  result = swift_retain();
  v18 = 0;
  v40 = v15;
  v19 = 16;
  if ((v15 & 1) != 0)
    v19 = 32;
  v44 = v19;
  while (1)
  {
    if (v14)
    {
      v21 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v22 = v21 | (v18 << 6);
      goto LABEL_24;
    }
    v23 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v23 >= v42)
      break;
    v24 = v43;
    v25 = v43[v23];
    ++v18;
    if (!v25)
    {
      v18 = v23 + 1;
      if (v23 + 1 >= v42)
        goto LABEL_33;
      v25 = v43[v18];
      if (!v25)
      {
        v26 = v23 + 2;
        if (v26 >= v42)
        {
LABEL_33:
          swift_release();
          v3 = v41;
          if ((v40 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v25 = v43[v26];
        if (!v25)
        {
          while (1)
          {
            v18 = v26 + 1;
            if (__OFADD__(v26, 1))
              goto LABEL_42;
            if (v18 >= v42)
              goto LABEL_33;
            v25 = v43[v18];
            ++v26;
            if (v25)
              goto LABEL_23;
          }
        }
        v18 = v26;
      }
    }
LABEL_23:
    v14 = (v25 - 1) & v25;
    v22 = __clz(__rbit64(v25)) + (v18 << 6);
LABEL_24:
    v27 = *(_QWORD *)(v8 + 56);
    v28 = v8;
    v29 = *(_QWORD *)(*(_QWORD *)(v8 + 48) + 8 * v22);
    v30 = *(_QWORD *)(v5 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v5 + v44))(v7, v27 + v30 * v22, v45);
    sub_1CA85C368();
    sub_1CA85BC00();
    result = sub_1CA85C3B0();
    v31 = -1 << *(_BYTE *)(v10 + 32);
    v32 = result & ~v31;
    v33 = v32 >> 6;
    if (((-1 << v32) & ~*(_QWORD *)(v16 + 8 * (v32 >> 6))) != 0)
    {
      v20 = __clz(__rbit64((-1 << v32) & ~*(_QWORD *)(v16 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v34 = 0;
      v35 = (unint64_t)(63 - v31) >> 6;
      do
      {
        if (++v33 == v35 && (v34 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v36 = v33 == v35;
        if (v33 == v35)
          v33 = 0;
        v34 |= v36;
        v37 = *(_QWORD *)(v16 + 8 * v33);
      }
      while (v37 == -1);
      v20 = __clz(__rbit64(~v37)) + (v33 << 6);
    }
    *(_QWORD *)(v16 + ((v20 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v20;
    *(_QWORD *)(*(_QWORD *)(v10 + 48) + 8 * v20) = v29;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v5 + 32))(*(_QWORD *)(v10 + 56) + v30 * v20, v7, v45);
    ++*(_QWORD *)(v10 + 16);
    v8 = v28;
  }
  swift_release();
  v3 = v41;
  v24 = v43;
  if ((v40 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v38 = 1 << *(_BYTE *)(v8 + 32);
  if (v38 >= 64)
    bzero(v24, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v24 = -1 << v38;
  *(_QWORD *)(v8 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v10;
  return result;
}

uint64_t sub_1CA25B030(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  unint64_t v14;
  _QWORD *v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  _QWORD *v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  char v30;
  unint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  int64_t v36;
  uint64_t v37;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94B190);
  v6 = sub_1CA85C0B0();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_38;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v37 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v35 = v2;
  v36 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v16 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v17 = v16 | (v13 << 6);
      goto LABEL_22;
    }
    v18 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_39:
      __break(1u);
LABEL_40:
      __break(1u);
      return result;
    }
    if (v18 >= v36)
      break;
    v19 = (_QWORD *)(v5 + 64);
    v20 = *(_QWORD *)(v37 + 8 * v18);
    ++v13;
    if (!v20)
    {
      v13 = v18 + 1;
      if (v18 + 1 >= v36)
        goto LABEL_31;
      v20 = *(_QWORD *)(v37 + 8 * v13);
      if (!v20)
      {
        v21 = v18 + 2;
        if (v21 >= v36)
        {
LABEL_31:
          swift_release();
          v3 = v35;
          if ((a2 & 1) == 0)
            goto LABEL_38;
          goto LABEL_34;
        }
        v20 = *(_QWORD *)(v37 + 8 * v21);
        if (!v20)
        {
          while (1)
          {
            v13 = v21 + 1;
            if (__OFADD__(v21, 1))
              goto LABEL_40;
            if (v13 >= v36)
              goto LABEL_31;
            v20 = *(_QWORD *)(v37 + 8 * v13);
            ++v21;
            if (v20)
              goto LABEL_21;
          }
        }
        v13 = v21;
      }
    }
LABEL_21:
    v10 = (v20 - 1) & v20;
    v17 = __clz(__rbit64(v20)) + (v13 << 6);
LABEL_22:
    v22 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + 8 * v17);
    v23 = (uint64_t *)(*(_QWORD *)(v5 + 56) + 24 * v17);
    v24 = v23[2];
    v25 = *v23;
    v26 = v23[1];
    sub_1CA85C368();
    sub_1CA85BC00();
    result = sub_1CA85C3B0();
    v27 = -1 << *(_BYTE *)(v7 + 32);
    v28 = result & ~v27;
    v29 = v28 >> 6;
    if (((-1 << v28) & ~*(_QWORD *)(v11 + 8 * (v28 >> 6))) != 0)
    {
      v14 = __clz(__rbit64((-1 << v28) & ~*(_QWORD *)(v11 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v30 = 0;
      v31 = (unint64_t)(63 - v27) >> 6;
      do
      {
        if (++v29 == v31 && (v30 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v32 = v29 == v31;
        if (v29 == v31)
          v29 = 0;
        v30 |= v32;
        v33 = *(_QWORD *)(v11 + 8 * v29);
      }
      while (v33 == -1);
      v14 = __clz(__rbit64(~v33)) + (v29 << 6);
    }
    *(_QWORD *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    *(_QWORD *)(*(_QWORD *)(v7 + 48) + 8 * v14) = v22;
    v15 = (_QWORD *)(*(_QWORD *)(v7 + 56) + 24 * v14);
    *v15 = v25;
    v15[1] = v26;
    v15[2] = v24;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v35;
  v19 = (_QWORD *)(v5 + 64);
  if ((a2 & 1) == 0)
    goto LABEL_38;
LABEL_34:
  v34 = 1 << *(_BYTE *)(v5 + 32);
  if (v34 >= 64)
    bzero(v19, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v19 = -1 << v34;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_38:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1CA25B338(uint64_t a1, int a2)
{
  return sub_1CA25B35C(a1, a2, (uint64_t (*)(uint64_t))MEMORY[0x1E0D767B8], &qword_1EF94AEF0, &qword_1EF94AEF8, MEMORY[0x1E0D767C8]);
}

uint64_t sub_1CA25B35C(uint64_t a1, int a2, uint64_t (*a3)(uint64_t), uint64_t *a4, unint64_t *a5, uint64_t a6)
{
  uint64_t *v6;
  uint64_t *v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t result;
  int64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  int64_t v27;
  _QWORD *v28;
  unint64_t v29;
  int64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  char v37;
  unint64_t v38;
  BOOL v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  int64_t v43;
  _QWORD *v44;
  uint64_t i;
  uint64_t (*v46)(uint64_t);
  unint64_t *v47;
  uint64_t v48;
  int v49;

  v47 = a5;
  v48 = a6;
  v8 = v6;
  v46 = a3;
  v10 = a3(0);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v42 - v12;
  v14 = *v6;
  __swift_instantiateConcreteTypeFromMangledName(a4);
  v49 = a2;
  v15 = sub_1CA85C0B0();
  v16 = v15;
  if (!*(_QWORD *)(v14 + 16))
    goto LABEL_41;
  v17 = 1 << *(_BYTE *)(v14 + 32);
  v18 = *(_QWORD *)(v14 + 64);
  v44 = (_QWORD *)(v14 + 64);
  if (v17 < 64)
    v19 = ~(-1 << v17);
  else
    v19 = -1;
  v20 = v19 & v18;
  v42 = v6;
  v43 = (unint64_t)(v17 + 63) >> 6;
  v21 = v15 + 64;
  result = swift_retain();
  v23 = 0;
  for (i = v14; ; v14 = i)
  {
    if (v20)
    {
      v25 = __clz(__rbit64(v20));
      v20 &= v20 - 1;
      v26 = v25 | (v23 << 6);
      goto LABEL_22;
    }
    v27 = v23 + 1;
    if (__OFADD__(v23, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v27 >= v43)
      break;
    v28 = v44;
    v29 = v44[v27];
    ++v23;
    if (!v29)
    {
      v23 = v27 + 1;
      if (v27 + 1 >= v43)
        goto LABEL_34;
      v29 = v44[v23];
      if (!v29)
      {
        v30 = v27 + 2;
        if (v30 >= v43)
        {
LABEL_34:
          swift_release();
          v8 = v42;
          if ((v49 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v29 = v44[v30];
        if (!v29)
        {
          while (1)
          {
            v23 = v30 + 1;
            if (__OFADD__(v30, 1))
              goto LABEL_43;
            if (v23 >= v43)
              goto LABEL_34;
            v29 = v44[v23];
            ++v30;
            if (v29)
              goto LABEL_21;
          }
        }
        v23 = v30;
      }
    }
LABEL_21:
    v20 = (v29 - 1) & v29;
    v26 = __clz(__rbit64(v29)) + (v23 << 6);
LABEL_22:
    v31 = *(_QWORD *)(v11 + 72);
    v32 = *(_QWORD *)(v14 + 48) + v31 * v26;
    if ((v49 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v11 + 32))(v13, v32, v10);
      v33 = *(_QWORD *)(*(_QWORD *)(v14 + 56) + 8 * v26);
    }
    else
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v11 + 16))(v13, v32, v10);
      v33 = *(_QWORD *)(*(_QWORD *)(v14 + 56) + 8 * v26);
      swift_bridgeObjectRetain();
    }
    sub_1CA23CC98(v47, v46, v48);
    result = sub_1CA85B498();
    v34 = -1 << *(_BYTE *)(v16 + 32);
    v35 = result & ~v34;
    v36 = v35 >> 6;
    if (((-1 << v35) & ~*(_QWORD *)(v21 + 8 * (v35 >> 6))) != 0)
    {
      v24 = __clz(__rbit64((-1 << v35) & ~*(_QWORD *)(v21 + 8 * (v35 >> 6)))) | v35 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v37 = 0;
      v38 = (unint64_t)(63 - v34) >> 6;
      do
      {
        if (++v36 == v38 && (v37 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v39 = v36 == v38;
        if (v36 == v38)
          v36 = 0;
        v37 |= v39;
        v40 = *(_QWORD *)(v21 + 8 * v36);
      }
      while (v40 == -1);
      v24 = __clz(__rbit64(~v40)) + (v36 << 6);
    }
    *(_QWORD *)(v21 + ((v24 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v24;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v11 + 32))(*(_QWORD *)(v16 + 48) + v31 * v24, v13, v10);
    *(_QWORD *)(*(_QWORD *)(v16 + 56) + 8 * v24) = v33;
    ++*(_QWORD *)(v16 + 16);
  }
  swift_release();
  v8 = v42;
  v28 = v44;
  if ((v49 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v41 = 1 << *(_BYTE *)(v14 + 32);
  if (v41 >= 64)
    bzero(v28, ((unint64_t)(v41 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v28 = -1 << v41;
  *(_QWORD *)(v14 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v8 = v16;
  return result;
}

uint64_t sub_1CA25B6E8(uint64_t a1, char a2)
{
  return sub_1CA25B6F4(a1, a2, (uint64_t *)&unk_1EF94AF20);
}

uint64_t sub_1CA25B6F4(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  id v34;
  uint64_t v35;
  uint64_t *v36;
  int64_t v37;
  uint64_t v38;
  char v39;

  v4 = v3;
  v6 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  v39 = a2;
  v7 = sub_1CA85C0B0();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
    goto LABEL_40;
  v9 = 1 << *(_BYTE *)(v6 + 32);
  v38 = v6 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v6 + 64);
  v36 = v3;
  v37 = (unint64_t)(v9 + 63) >> 6;
  v12 = v7 + 64;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v11)
    {
      v20 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v37)
      break;
    v23 = (_QWORD *)(v6 + 64);
    v24 = *(_QWORD *)(v38 + 8 * v22);
    ++v14;
    if (!v24)
    {
      v14 = v22 + 1;
      if (v22 + 1 >= v37)
        goto LABEL_33;
      v24 = *(_QWORD *)(v38 + 8 * v14);
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v37)
        {
LABEL_33:
          swift_release();
          v4 = v36;
          if ((v39 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v24 = *(_QWORD *)(v38 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            v14 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_42;
            if (v14 >= v37)
              goto LABEL_33;
            v24 = *(_QWORD *)(v38 + 8 * v14);
            ++v25;
            if (v24)
              goto LABEL_30;
          }
        }
        v14 = v25;
      }
    }
LABEL_30:
    v11 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    v30 = (uint64_t *)(*(_QWORD *)(v6 + 48) + 16 * v21);
    v32 = *v30;
    v31 = v30[1];
    v33 = *(void **)(*(_QWORD *)(v6 + 56) + 8 * v21);
    if ((v39 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      v34 = v33;
    }
    sub_1CA85C368();
    sub_1CA85B4B0();
    result = sub_1CA85C3B0();
    v15 = -1 << *(_BYTE *)(v8 + 32);
    v16 = result & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v28 = v17 == v27;
        if (v17 == v27)
          v17 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 16 * v18);
    *v19 = v32;
    v19[1] = v31;
    *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v18) = v33;
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release();
  v4 = v36;
  v23 = (_QWORD *)(v6 + 64);
  if ((v39 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v35 = 1 << *(_BYTE *)(v6 + 32);
  if (v35 >= 64)
    bzero(v23, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v35;
  *(_QWORD *)(v6 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v4 = v8;
  return result;
}

uint64_t sub_1CA25B9FC(uint64_t a1, char a2)
{
  return sub_1CA25D210(a1, a2, &qword_1EF94AFD0);
}

uint64_t sub_1CA25BA08(uint64_t a1, char a2)
{
  return sub_1CA25BFC4(a1, a2, &qword_1EF94AFC8);
}

uint64_t sub_1CA25BA14(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  __int128 v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  void *v28;
  id v29;
  uint64_t v30;
  _QWORD *v31;
  __int128 v32;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94AE58);
  result = sub_1CA85C0B0();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 0;
    v31 = (_QWORD *)(v5 + 64);
    v9 = 1 << *(_BYTE *)(v5 + 32);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v12 = (unint64_t)(v9 + 63) >> 6;
    v13 = result + 64;
    while (1)
    {
      if (v11)
      {
        v19 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v20 = v19 | (v8 << 6);
      }
      else
      {
        v21 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        result = v5 + 64;
        if (v21 >= v12)
          goto LABEL_33;
        v22 = v31[v21];
        ++v8;
        if (!v22)
        {
          v8 = v21 + 1;
          if (v21 + 1 >= v12)
            goto LABEL_33;
          v22 = v31[v8];
          if (!v22)
          {
            v23 = v21 + 2;
            if (v23 >= v12)
            {
LABEL_33:
              if ((a2 & 1) == 0)
              {
                result = swift_release();
                v3 = v2;
                goto LABEL_40;
              }
              v30 = 1 << *(_BYTE *)(v5 + 32);
              if (v30 >= 64)
                bzero(v31, ((unint64_t)(v30 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v31 = -1 << v30;
              v3 = v2;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v22 = v31[v23];
            if (!v22)
            {
              while (1)
              {
                v8 = v23 + 1;
                if (__OFADD__(v23, 1))
                  goto LABEL_42;
                if (v8 >= v12)
                  goto LABEL_33;
                v22 = v31[v8];
                ++v23;
                if (v22)
                  goto LABEL_30;
              }
            }
            v8 = v23;
          }
        }
LABEL_30:
        v11 = (v22 - 1) & v22;
        v20 = __clz(__rbit64(v22)) + (v8 << 6);
      }
      v32 = *(_OWORD *)(*(_QWORD *)(v5 + 48) + 16 * v20);
      v28 = *(void **)(*(_QWORD *)(v5 + 56) + 8 * v20);
      if ((a2 & 1) == 0)
        v29 = v28;
      sub_1CA85C368();
      sub_1CA85C3A4();
      sub_1CA85C3A4();
      result = sub_1CA85C3B0();
      v14 = -1 << *(_BYTE *)(v7 + 32);
      v15 = result & ~v14;
      v16 = v15 >> 6;
      if (((-1 << v15) & ~*(_QWORD *)(v13 + 8 * (v15 >> 6))) != 0)
      {
        v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v13 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
        v18 = v32;
      }
      else
      {
        v24 = 0;
        v25 = (unint64_t)(63 - v14) >> 6;
        v18 = v32;
        do
        {
          if (++v16 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v26 = v16 == v25;
          if (v16 == v25)
            v16 = 0;
          v24 |= v26;
          v27 = *(_QWORD *)(v13 + 8 * v16);
        }
        while (v27 == -1);
        v17 = __clz(__rbit64(~v27)) + (v16 << 6);
      }
      *(_QWORD *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      *(_OWORD *)(*(_QWORD *)(v7 + 48) + 16 * v17) = v18;
      *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v17) = v28;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
LABEL_40:
  *v3 = v7;
  return result;
}

uint64_t sub_1CA25BD0C(uint64_t a1, char a2)
{
  return sub_1CA25BFC4(a1, a2, &qword_1EF94AFC0);
}

uint64_t sub_1CA25BD18(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  char v32;
  __int128 v33;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF94AE60);
  result = sub_1CA85C0B0();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v32 = a2;
    v31 = v3;
    v8 = 0;
    v9 = (uint64_t *)(v5 + 64);
    v10 = 1 << *(_BYTE *)(v5 + 32);
    v29 = -1 << v10;
    v30 = v10;
    if (v10 < 64)
      v11 = ~(-1 << v10);
    else
      v11 = -1;
    v12 = v11 & *(_QWORD *)(v5 + 64);
    v13 = (unint64_t)(v10 + 63) >> 6;
    v14 = result + 64;
    while (1)
    {
      if (v12)
      {
        v16 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        v17 = v16 | (v8 << 6);
      }
      else
      {
        v18 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v18 >= v13)
          goto LABEL_31;
        v19 = v9[v18];
        ++v8;
        if (!v19)
        {
          v8 = v18 + 1;
          if (v18 + 1 >= v13)
            goto LABEL_31;
          v19 = v9[v8];
          if (!v19)
          {
            v20 = v18 + 2;
            if (v20 >= v13)
            {
LABEL_31:
              if ((v32 & 1) == 0)
              {
                result = swift_release();
                v3 = v31;
                goto LABEL_38;
              }
              if (v30 >= 64)
                bzero((void *)(v5 + 64), 8 * v13);
              else
                *v9 = v29;
              v3 = v31;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v19 = v9[v20];
            if (!v19)
            {
              while (1)
              {
                v8 = v20 + 1;
                if (__OFADD__(v20, 1))
                  goto LABEL_40;
                if (v8 >= v13)
                  goto LABEL_31;
                v19 = v9[v8];
                ++v20;
                if (v19)
                  goto LABEL_21;
              }
            }
            v8 = v20;
          }
        }
LABEL_21:
        v12 = (v19 - 1) & v19;
        v17 = __clz(__rbit64(v19)) + (v8 << 6);
      }
      v21 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + 8 * v17);
      v33 = *(_OWORD *)(*(_QWORD *)(v5 + 56) + 16 * v17);
      result = sub_1CA85C35C();
      v22 = -1 << *(_BYTE *)(v7 + 32);
      v23 = result & ~v22;
      v24 = v23 >> 6;
      if (((-1 << v23) & ~*(_QWORD *)(v14 + 8 * (v23 >> 6))) != 0)
      {
        v15 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v14 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          v27 = v24 == v26;
          if (v24 == v26)
            v24 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v14 + 8 * v24);
        }
        while (v28 == -1);
        v15 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(_QWORD *)(v14 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      *(_QWORD *)(*(_QWORD *)(v7 + 48) + 8 * v15) = v21;
      *(_OWORD *)(*(_QWORD *)(v7 + 56) + 16 * v15) = v33;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
LABEL_38:
  *v3 = v7;
  return result;
}

uint64_t sub_1CA25BFB8(uint64_t a1, char a2)
{
  return sub_1CA25BFC4(a1, a2, &qword_1EF94AE50);
}

uint64_t sub_1CA25BFC4(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  __int128 v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  __int128 v32;

  v4 = v3;
  v6 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  result = sub_1CA85C0B0();
  v8 = result;
  if (*(_QWORD *)(v6 + 16))
  {
    v9 = 0;
    v31 = (_QWORD *)(v6 + 64);
    v10 = 1 << *(_BYTE *)(v6 + 32);
    if (v10 < 64)
      v11 = ~(-1 << v10);
    else
      v11 = -1;
    v12 = v11 & *(_QWORD *)(v6 + 64);
    v13 = (unint64_t)(v10 + 63) >> 6;
    v14 = result + 64;
    while (1)
    {
      if (v12)
      {
        v20 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        v21 = v20 | (v9 << 6);
      }
      else
      {
        v22 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        result = v6 + 64;
        if (v22 >= v13)
          goto LABEL_33;
        v23 = v31[v22];
        ++v9;
        if (!v23)
        {
          v9 = v22 + 1;
          if (v22 + 1 >= v13)
            goto LABEL_33;
          v23 = v31[v9];
          if (!v23)
          {
            v24 = v22 + 2;
            if (v24 >= v13)
            {
LABEL_33:
              if ((a2 & 1) == 0)
              {
                result = swift_release();
                v4 = v3;
                goto LABEL_40;
              }
              v30 = 1 << *(_BYTE *)(v6 + 32);
              if (v30 >= 64)
                bzero(v31, ((unint64_t)(v30 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v31 = -1 << v30;
              v4 = v3;
              *(_QWORD *)(v6 + 16) = 0;
              break;
            }
            v23 = v31[v24];
            if (!v23)
            {
              while (1)
              {
                v9 = v24 + 1;
                if (__OFADD__(v24, 1))
                  goto LABEL_42;
                if (v9 >= v13)
                  goto LABEL_33;
                v23 = v31[v9];
                ++v24;
                if (v23)
                  goto LABEL_30;
              }
            }
            v9 = v24;
          }
        }
LABEL_30:
        v12 = (v23 - 1) & v23;
        v21 = __clz(__rbit64(v23)) + (v9 << 6);
      }
      v32 = *(_OWORD *)(*(_QWORD *)(v6 + 48) + 16 * v21);
      v29 = *(_QWORD *)(*(_QWORD *)(v6 + 56) + 8 * v21);
      if ((a2 & 1) == 0)
        swift_bridgeObjectRetain();
      sub_1CA85C368();
      sub_1CA85C3A4();
      sub_1CA85C3A4();
      result = sub_1CA85C3B0();
      v15 = -1 << *(_BYTE *)(v8 + 32);
      v16 = result & ~v15;
      v17 = v16 >> 6;
      if (((-1 << v16) & ~*(_QWORD *)(v14 + 8 * (v16 >> 6))) != 0)
      {
        v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v14 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
        v19 = v32;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v15) >> 6;
        v19 = v32;
        do
        {
          if (++v17 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v27 = v17 == v26;
          if (v17 == v26)
            v17 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v14 + 8 * v17);
        }
        while (v28 == -1);
        v18 = __clz(__rbit64(~v28)) + (v17 << 6);
      }
      *(_QWORD *)(v14 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      *(_OWORD *)(*(_QWORD *)(v8 + 48) + 16 * v18) = v19;
      *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v18) = v29;
      ++*(_QWORD *)(v8 + 16);
    }
  }
  result = swift_release();
LABEL_40:
  *v4 = v8;
  return result;
}

uint64_t sub_1CA25C2B8(uint64_t a1, char a2)
{
  return sub_1CA25C2C4(a1, a2, &qword_1EF94AED0);
}

uint64_t sub_1CA25C2C4(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  uint64_t result;
  int64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  _QWORD *v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  _QWORD *v24;
  unint64_t v25;
  int64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  void *v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  char v39;

  v4 = v3;
  v6 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  v39 = a2;
  v7 = sub_1CA85C0B0();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
    goto LABEL_40;
  v9 = 1 << *(_BYTE *)(v6 + 32);
  v37 = v3;
  v38 = v6 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v6 + 64);
  v12 = (unint64_t)(v9 + 63) >> 6;
  v13 = v7 + 64;
  result = swift_retain();
  v15 = 0;
  while (1)
  {
    if (v11)
    {
      v21 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v22 = v21 | (v15 << 6);
      goto LABEL_31;
    }
    v23 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v23 >= v12)
      break;
    v24 = (_QWORD *)(v6 + 64);
    v25 = *(_QWORD *)(v38 + 8 * v23);
    ++v15;
    if (!v25)
    {
      v15 = v23 + 1;
      if (v23 + 1 >= v12)
        goto LABEL_33;
      v25 = *(_QWORD *)(v38 + 8 * v15);
      if (!v25)
      {
        v26 = v23 + 2;
        if (v26 >= v12)
        {
LABEL_33:
          swift_release();
          v4 = v37;
          if ((v39 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v25 = *(_QWORD *)(v38 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            v15 = v26 + 1;
            if (__OFADD__(v26, 1))
              goto LABEL_42;
            if (v15 >= v12)
              goto LABEL_33;
            v25 = *(_QWORD *)(v38 + 8 * v15);
            ++v26;
            if (v25)
              goto LABEL_30;
          }
        }
        v15 = v26;
      }
    }
LABEL_30:
    v11 = (v25 - 1) & v25;
    v22 = __clz(__rbit64(v25)) + (v15 << 6);
LABEL_31:
    v31 = *(void **)(*(_QWORD *)(v6 + 48) + 8 * v22);
    v32 = (uint64_t *)(*(_QWORD *)(v6 + 56) + 16 * v22);
    v33 = *v32;
    v34 = v32[1];
    if ((v39 & 1) == 0)
    {
      v35 = v31;
      swift_bridgeObjectRetain();
    }
    result = sub_1CA85BC78();
    v16 = -1 << *(_BYTE *)(v8 + 32);
    v17 = result & ~v16;
    v18 = v17 >> 6;
    if (((-1 << v17) & ~*(_QWORD *)(v13 + 8 * (v17 >> 6))) != 0)
    {
      v19 = __clz(__rbit64((-1 << v17) & ~*(_QWORD *)(v13 + 8 * (v17 >> 6)))) | v17 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v27 = 0;
      v28 = (unint64_t)(63 - v16) >> 6;
      do
      {
        if (++v18 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v29 = v18 == v28;
        if (v18 == v28)
          v18 = 0;
        v27 |= v29;
        v30 = *(_QWORD *)(v13 + 8 * v18);
      }
      while (v30 == -1);
      v19 = __clz(__rbit64(~v30)) + (v18 << 6);
    }
    *(_QWORD *)(v13 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    *(_QWORD *)(*(_QWORD *)(v8 + 48) + 8 * v19) = v31;
    v20 = (_QWORD *)(*(_QWORD *)(v8 + 56) + 16 * v19);
    *v20 = v33;
    v20[1] = v34;
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release();
  v4 = v37;
  v24 = (_QWORD *)(v6 + 64);
  if ((v39 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v36 = 1 << *(_BYTE *)(v6 + 32);
  if (v36 >= 64)
    bzero(v24, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v24 = -1 << v36;
  *(_QWORD *)(v6 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v4 = v8;
  return result;
}

uint64_t sub_1CA25C5A4(uint64_t a1, char a2)
{
  return sub_1CA25C5B0(a1, a2, (uint64_t *)&unk_1EF94AEC0);
}

uint64_t sub_1CA25C5B0(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  int64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  int64_t v36;

  v4 = v3;
  v6 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  result = sub_1CA85C0B0();
  v8 = result;
  if (*(_QWORD *)(v6 + 16))
  {
    v9 = 0;
    v10 = (uint64_t *)(v6 + 64);
    v11 = 1 << *(_BYTE *)(v6 + 32);
    v33 = -1 << v11;
    if (v11 < 64)
      v12 = ~(-1 << v11);
    else
      v12 = -1;
    v13 = v12 & *(_QWORD *)(v6 + 64);
    v34 = 1 << *(_BYTE *)(v6 + 32);
    v35 = v4;
    v36 = (unint64_t)(v11 + 63) >> 6;
    v14 = result + 64;
    while (1)
    {
      if (v13)
      {
        v20 = __clz(__rbit64(v13));
        v13 &= v13 - 1;
        v21 = v20 | (v9 << 6);
      }
      else
      {
        v22 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        if (v22 >= v36)
          goto LABEL_33;
        v23 = v10[v22];
        ++v9;
        if (!v23)
        {
          v9 = v22 + 1;
          if (v22 + 1 >= v36)
            goto LABEL_33;
          v23 = v10[v9];
          if (!v23)
          {
            v24 = v22 + 2;
            if (v24 >= v36)
            {
LABEL_33:
              if ((a2 & 1) == 0)
              {
                result = swift_release();
                v4 = v35;
                goto LABEL_40;
              }
              if (v34 >= 64)
                bzero((void *)(v6 + 64), 8 * v36);
              else
                *v10 = v33;
              v4 = v35;
              *(_QWORD *)(v6 + 16) = 0;
              break;
            }
            v23 = v10[v24];
            if (!v23)
            {
              while (1)
              {
                v9 = v24 + 1;
                if (__OFADD__(v24, 1))
                  goto LABEL_42;
                if (v9 >= v36)
                  goto LABEL_33;
                v23 = v10[v9];
                ++v24;
                if (v23)
                  goto LABEL_30;
              }
            }
            v9 = v24;
          }
        }
LABEL_30:
        v13 = (v23 - 1) & v23;
        v21 = __clz(__rbit64(v23)) + (v9 << 6);
      }
      v29 = 8 * v21;
      v30 = *(_QWORD *)(*(_QWORD *)(v6 + 48) + v29);
      v31 = *(void **)(*(_QWORD *)(v6 + 56) + v29);
      if ((a2 & 1) == 0)
        v32 = v31;
      result = sub_1CA85C35C();
      v15 = -1 << *(_BYTE *)(v8 + 32);
      v16 = result & ~v15;
      v17 = v16 >> 6;
      if (((-1 << v16) & ~*(_QWORD *)(v14 + 8 * (v16 >> 6))) != 0)
      {
        v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v14 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v15) >> 6;
        do
        {
          if (++v17 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v27 = v17 == v26;
          if (v17 == v26)
            v17 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v14 + 8 * v17);
        }
        while (v28 == -1);
        v18 = __clz(__rbit64(~v28)) + (v17 << 6);
      }
      *(_QWORD *)(v14 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      v19 = 8 * v18;
      *(_QWORD *)(*(_QWORD *)(v8 + 48) + v19) = v30;
      *(_QWORD *)(*(_QWORD *)(v8 + 56) + v19) = v31;
      ++*(_QWORD *)(v8 + 16);
    }
  }
  result = swift_release();
LABEL_40:
  *v4 = v8;
  return result;
}

uint64_t sub_1CA25C85C(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  unint64_t v14;
  _QWORD *v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  _QWORD *v19;
  unint64_t v20;
  int64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  __int128 *v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char v29;
  unint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  int64_t v35;
  uint64_t v36;
  char v37;
  __int128 v38[3];

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94AE48);
  v37 = a2;
  v6 = sub_1CA85C0B0();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_41;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v36 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v34 = v2;
  v35 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v16 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v17 = v16 | (v13 << 6);
      goto LABEL_22;
    }
    v18 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v18 >= v35)
      break;
    v19 = (_QWORD *)(v5 + 64);
    v20 = *(_QWORD *)(v36 + 8 * v18);
    ++v13;
    if (!v20)
    {
      v13 = v18 + 1;
      if (v18 + 1 >= v35)
        goto LABEL_34;
      v20 = *(_QWORD *)(v36 + 8 * v13);
      if (!v20)
      {
        v21 = v18 + 2;
        if (v21 >= v35)
        {
LABEL_34:
          swift_release();
          v3 = v34;
          if ((v37 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v20 = *(_QWORD *)(v36 + 8 * v21);
        if (!v20)
        {
          while (1)
          {
            v13 = v21 + 1;
            if (__OFADD__(v21, 1))
              goto LABEL_43;
            if (v13 >= v35)
              goto LABEL_34;
            v20 = *(_QWORD *)(v36 + 8 * v13);
            ++v21;
            if (v20)
              goto LABEL_21;
          }
        }
        v13 = v21;
      }
    }
LABEL_21:
    v10 = (v20 - 1) & v20;
    v17 = __clz(__rbit64(v20)) + (v13 << 6);
LABEL_22:
    v22 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v17);
    v24 = *v22;
    v23 = v22[1];
    v25 = (__int128 *)(*(_QWORD *)(v5 + 56) + 48 * v17);
    if ((v37 & 1) != 0)
    {
      sub_1CA2669B4(v25, v38);
    }
    else
    {
      sub_1CA266970((uint64_t)v25, (uint64_t)v38);
      swift_bridgeObjectRetain();
    }
    sub_1CA85C368();
    sub_1CA85B4B0();
    result = sub_1CA85C3B0();
    v26 = -1 << *(_BYTE *)(v7 + 32);
    v27 = result & ~v26;
    v28 = v27 >> 6;
    if (((-1 << v27) & ~*(_QWORD *)(v11 + 8 * (v27 >> 6))) != 0)
    {
      v14 = __clz(__rbit64((-1 << v27) & ~*(_QWORD *)(v11 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v29 = 0;
      v30 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v31 = v28 == v30;
        if (v28 == v30)
          v28 = 0;
        v29 |= v31;
        v32 = *(_QWORD *)(v11 + 8 * v28);
      }
      while (v32 == -1);
      v14 = __clz(__rbit64(~v32)) + (v28 << 6);
    }
    *(_QWORD *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    v15 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v14);
    *v15 = v24;
    v15[1] = v23;
    result = (uint64_t)sub_1CA2669B4(v38, (_OWORD *)(*(_QWORD *)(v7 + 56) + 48 * v14));
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v34;
  v19 = (_QWORD *)(v5 + 64);
  if ((v37 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v33 = 1 << *(_BYTE *)(v5 + 32);
  if (v33 >= 64)
    bzero(v19, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v19 = -1 << v33;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1CA25CB80(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF94AEA8);
  v6 = sub_1CA85C0B0();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v35 = v2;
  v36 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v11 = (unint64_t)(v8 + 63) >> 6;
  v12 = v6 + 64;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v10)
    {
      v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v11)
      break;
    v23 = (_QWORD *)(v5 + 64);
    v24 = *(_QWORD *)(v36 + 8 * v22);
    ++v14;
    if (!v24)
    {
      v14 = v22 + 1;
      if (v22 + 1 >= v11)
        goto LABEL_33;
      v24 = *(_QWORD *)(v36 + 8 * v14);
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v11)
        {
LABEL_33:
          swift_release();
          v3 = v35;
          if ((a2 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v24 = *(_QWORD *)(v36 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            v14 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_42;
            if (v14 >= v11)
              goto LABEL_33;
            v24 = *(_QWORD *)(v36 + 8 * v14);
            ++v25;
            if (v24)
              goto LABEL_30;
          }
        }
        v14 = v25;
      }
    }
LABEL_30:
    v10 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    v30 = 8 * v21;
    v31 = *(void **)(*(_QWORD *)(v5 + 48) + v30);
    v32 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + v30);
    if ((a2 & 1) == 0)
      v33 = v31;
    result = sub_1CA85BC78();
    v15 = -1 << *(_BYTE *)(v7 + 32);
    v16 = result & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v28 = v17 == v27;
        if (v17 == v27)
          v17 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = 8 * v18;
    *(_QWORD *)(*(_QWORD *)(v7 + 48) + v19) = v31;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + v19) = v32;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v35;
  v23 = (_QWORD *)(v5 + 64);
  if ((a2 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v34 = 1 << *(_BYTE *)(v5 + 32);
  if (v34 >= 64)
    bzero(v23, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v34;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1CA25CE4C(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t result;
  int64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  char v31;
  unint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  int64_t v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  int v42;

  v3 = v2;
  v5 = type metadata accessor for DateAndLocation();
  v40 = *(_QWORD *)(v5 - 8);
  v41 = v5;
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED874B10);
  v42 = a2;
  v9 = sub_1CA85C0B0();
  v10 = v9;
  if (*(_QWORD *)(v8 + 16))
  {
    v37 = v2;
    v11 = 1 << *(_BYTE *)(v8 + 32);
    v12 = *(_QWORD *)(v8 + 64);
    v39 = (_QWORD *)(v8 + 64);
    if (v11 < 64)
      v13 = ~(-1 << v11);
    else
      v13 = -1;
    v14 = v13 & v12;
    v38 = (unint64_t)(v11 + 63) >> 6;
    v15 = v9 + 64;
    result = swift_retain();
    v17 = 0;
    while (1)
    {
      if (v14)
      {
        v19 = __clz(__rbit64(v14));
        v14 &= v14 - 1;
        v20 = v19 | (v17 << 6);
      }
      else
      {
        v21 = v17 + 1;
        if (__OFADD__(v17, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v21 >= v38)
          goto LABEL_34;
        v22 = v39[v21];
        ++v17;
        if (!v22)
        {
          v17 = v21 + 1;
          if (v21 + 1 >= v38)
            goto LABEL_34;
          v22 = v39[v17];
          if (!v22)
          {
            v23 = v21 + 2;
            if (v23 >= v38)
            {
LABEL_34:
              swift_release();
              v3 = v37;
              if ((v42 & 1) != 0)
              {
                v35 = 1 << *(_BYTE *)(v8 + 32);
                if (v35 >= 64)
                  bzero(v39, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v39 = -1 << v35;
                *(_QWORD *)(v8 + 16) = 0;
              }
              break;
            }
            v22 = v39[v23];
            if (!v22)
            {
              while (1)
              {
                v17 = v23 + 1;
                if (__OFADD__(v23, 1))
                  goto LABEL_41;
                if (v17 >= v38)
                  goto LABEL_34;
                v22 = v39[v17];
                ++v23;
                if (v22)
                  goto LABEL_21;
              }
            }
            v17 = v23;
          }
        }
LABEL_21:
        v14 = (v22 - 1) & v22;
        v20 = __clz(__rbit64(v22)) + (v17 << 6);
      }
      v24 = *(_QWORD *)(v40 + 72);
      v25 = *(_QWORD *)(v8 + 48) + v24 * v20;
      if ((v42 & 1) != 0)
      {
        sub_1CA24EE7C(v25, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for DateAndLocation);
        v26 = *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v20);
      }
      else
      {
        sub_1CA24EE38(v25, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for DateAndLocation);
        v26 = *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v20);
        swift_bridgeObjectRetain();
      }
      sub_1CA85C368();
      sub_1CA85A5B0();
      sub_1CA23CC98((unint64_t *)&qword_1ED871190, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08A8]);
      sub_1CA85B4A4();
      v27 = *(id *)&v7[*(int *)(v41 + 20)];
      sub_1CA85BC90();

      result = sub_1CA85C3B0();
      v28 = -1 << *(_BYTE *)(v10 + 32);
      v29 = result & ~v28;
      v30 = v29 >> 6;
      if (((-1 << v29) & ~*(_QWORD *)(v15 + 8 * (v29 >> 6))) != 0)
      {
        v18 = __clz(__rbit64((-1 << v29) & ~*(_QWORD *)(v15 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v31 = 0;
        v32 = (unint64_t)(63 - v28) >> 6;
        do
        {
          if (++v30 == v32 && (v31 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          v33 = v30 == v32;
          if (v30 == v32)
            v30 = 0;
          v31 |= v33;
          v34 = *(_QWORD *)(v15 + 8 * v30);
        }
        while (v34 == -1);
        v18 = __clz(__rbit64(~v34)) + (v30 << 6);
      }
      *(_QWORD *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      result = sub_1CA24EE7C((uint64_t)v7, *(_QWORD *)(v10 + 48) + v24 * v18, (uint64_t (*)(_QWORD))type metadata accessor for DateAndLocation);
      *(_QWORD *)(*(_QWORD *)(v10 + 56) + 8 * v18) = v26;
      ++*(_QWORD *)(v10 + 16);
    }
  }
  result = swift_release();
  *v3 = v10;
  return result;
}

uint64_t sub_1CA25D210(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  uint64_t result;
  int64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  _QWORD *v24;
  unint64_t v25;
  int64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;

  v4 = v3;
  v6 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  v7 = sub_1CA85C0B0();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
    goto LABEL_40;
  v9 = 1 << *(_BYTE *)(v6 + 32);
  v36 = v3;
  v37 = v6 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v6 + 64);
  v12 = (unint64_t)(v9 + 63) >> 6;
  v13 = v7 + 64;
  result = swift_retain();
  v15 = 0;
  while (1)
  {
    if (v11)
    {
      v21 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v22 = v21 | (v15 << 6);
      goto LABEL_31;
    }
    v23 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v23 >= v12)
      break;
    v24 = (_QWORD *)(v6 + 64);
    v25 = *(_QWORD *)(v37 + 8 * v23);
    ++v15;
    if (!v25)
    {
      v15 = v23 + 1;
      if (v23 + 1 >= v12)
        goto LABEL_33;
      v25 = *(_QWORD *)(v37 + 8 * v15);
      if (!v25)
      {
        v26 = v23 + 2;
        if (v26 >= v12)
        {
LABEL_33:
          swift_release();
          v4 = v36;
          if ((a2 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v25 = *(_QWORD *)(v37 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            v15 = v26 + 1;
            if (__OFADD__(v26, 1))
              goto LABEL_42;
            if (v15 >= v12)
              goto LABEL_33;
            v25 = *(_QWORD *)(v37 + 8 * v15);
            ++v26;
            if (v25)
              goto LABEL_30;
          }
        }
        v15 = v26;
      }
    }
LABEL_30:
    v11 = (v25 - 1) & v25;
    v22 = __clz(__rbit64(v25)) + (v15 << 6);
LABEL_31:
    v31 = 8 * v22;
    v32 = *(void **)(*(_QWORD *)(v6 + 48) + v31);
    v33 = *(_QWORD *)(*(_QWORD *)(v6 + 56) + v31);
    if ((a2 & 1) == 0)
    {
      v34 = v32;
      swift_bridgeObjectRetain();
    }
    result = sub_1CA85BC78();
    v16 = -1 << *(_BYTE *)(v8 + 32);
    v17 = result & ~v16;
    v18 = v17 >> 6;
    if (((-1 << v17) & ~*(_QWORD *)(v13 + 8 * (v17 >> 6))) != 0)
    {
      v19 = __clz(__rbit64((-1 << v17) & ~*(_QWORD *)(v13 + 8 * (v17 >> 6)))) | v17 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v27 = 0;
      v28 = (unint64_t)(63 - v16) >> 6;
      do
      {
        if (++v18 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v29 = v18 == v28;
        if (v18 == v28)
          v18 = 0;
        v27 |= v29;
        v30 = *(_QWORD *)(v13 + 8 * v18);
      }
      while (v30 == -1);
      v19 = __clz(__rbit64(~v30)) + (v18 << 6);
    }
    *(_QWORD *)(v13 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    v20 = 8 * v19;
    *(_QWORD *)(*(_QWORD *)(v8 + 48) + v20) = v32;
    *(_QWORD *)(*(_QWORD *)(v8 + 56) + v20) = v33;
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release();
  v4 = v36;
  v24 = (_QWORD *)(v6 + 64);
  if ((a2 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v35 = 1 << *(_BYTE *)(v6 + 32);
  if (v35 >= 64)
    bzero(v24, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v24 = -1 << v35;
  *(_QWORD *)(v6 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v4 = v8;
  return result;
}

id sub_1CA25D4E0(__int16 a1, void *a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v7;
  char v8;
  unint64_t v9;
  uint64_t v10;
  _BOOL8 v11;
  id result;
  char v13;
  uint64_t v14;
  _QWORD *v15;
  char v16;

  v4 = (_QWORD **)v3;
  v7 = (_QWORD *)*v3;
  v9 = sub_1CA2508A0((uint64_t)a2);
  v10 = v7[2];
  v11 = (v8 & 1) == 0;
  result = (id)(v10 + v11);
  if (__OFADD__(v10, v11))
  {
    __break(1u);
  }
  else
  {
    v13 = v8;
    v14 = v7[3];
    if (v14 >= (uint64_t)result && (a3 & 1) != 0)
    {
LABEL_7:
      v15 = *v4;
      if ((v13 & 1) != 0)
      {
LABEL_8:
        *(_WORD *)(v15[7] + 2 * v9) = a1;
        return result;
      }
      goto LABEL_11;
    }
    if (v14 >= (uint64_t)result && (a3 & 1) == 0)
    {
      result = sub_1CA25FF8C();
      goto LABEL_7;
    }
    sub_1CA2523BC((uint64_t)result, a3 & 1);
    result = (id)sub_1CA2508A0((uint64_t)a2);
    if ((v13 & 1) == (v16 & 1))
    {
      v9 = (unint64_t)result;
      v15 = *v4;
      if ((v13 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_1CA2794A0(v9, (uint64_t)a2, a1, v15);
      return a2;
    }
  }
  sub_1CA24EEC0(0, (unint64_t *)&qword_1EF94AE20);
  result = (id)sub_1CA85C2E4();
  __break(1u);
  return result;
}

uint64_t sub_1CA25D600(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  _QWORD *v5;
  _QWORD **v6;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t *v21;
  uint64_t result;
  uint64_t v23;
  char v24;

  v6 = (_QWORD **)v5;
  v12 = (_QWORD *)*v5;
  v14 = sub_1CA25123C(a3, a4, (void (*)(_BYTE *, uint64_t, uint64_t))MEMORY[0x1E0DEA758], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1CA2514F0);
  v15 = v12[2];
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
  }
  else
  {
    v18 = v13;
    v19 = v12[3];
    if (v19 >= v17 && (a5 & 1) != 0)
    {
LABEL_7:
      v20 = *v6;
      if ((v18 & 1) != 0)
      {
LABEL_8:
        v21 = (uint64_t *)(v20[7] + 16 * v14);
        result = swift_bridgeObjectRelease();
        *v21 = a1;
        v21[1] = a2;
        return result;
      }
      goto LABEL_11;
    }
    if (v19 >= v17 && (a5 & 1) == 0)
    {
      sub_1CA26039C();
      goto LABEL_7;
    }
    sub_1CA25268C(v17, a5 & 1);
    v23 = sub_1CA25123C(a3, a4, (void (*)(_BYTE *, uint64_t, uint64_t))MEMORY[0x1E0DEA758], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1CA2514F0);
    if ((v18 & 1) == (v24 & 1))
    {
      v14 = v23;
      v20 = *v6;
      if ((v18 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_1CA2794E4(v14, a3, a4, a1, a2, v20);
      return swift_bridgeObjectRetain();
    }
  }
  result = sub_1CA85C2E4();
  __break(1u);
  return result;
}

uint64_t sub_1CA25D760(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_1CA25DBBC(a1, a2, a3, a4, (uint64_t (*)(_QWORD))MEMORY[0x1E0CB0870], &qword_1ED872510, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1CA279534);
}

uint64_t sub_1CA25D77C(_OWORD *a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t result;
  uint64_t v20;
  char v21;

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v12 = sub_1CA25123C(a2, a3, (void (*)(_BYTE *, uint64_t, uint64_t))MEMORY[0x1E0DEA758], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1CA2514F0);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    v16 = v11;
    v17 = v10[3];
    if (v17 >= v15 && (a4 & 1) != 0)
    {
LABEL_7:
      v18 = *v5;
      if ((v16 & 1) != 0)
        return sub_1CA266E6C((uint64_t)a1, v18[7] + (v12 << 6));
      goto LABEL_11;
    }
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_1CA260708();
      goto LABEL_7;
    }
    sub_1CA252CB8(v15, a4 & 1);
    v20 = sub_1CA25123C(a2, a3, (void (*)(_BYTE *, uint64_t, uint64_t))MEMORY[0x1E0DEA758], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1CA2514F0);
    if ((v16 & 1) == (v21 & 1))
    {
      v12 = v20;
      v18 = *v5;
      if ((v16 & 1) != 0)
        return sub_1CA266E6C((uint64_t)a1, v18[7] + (v12 << 6));
LABEL_11:
      sub_1CA279540(v12, a2, a3, a1, v18);
      return swift_bridgeObjectRetain();
    }
  }
  result = sub_1CA85C2E4();
  __break(1u);
  return result;
}

uint64_t sub_1CA25D8C0(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  unint64_t v24;
  char v25;
  uint64_t v26;

  v4 = (_QWORD **)v3;
  v8 = sub_1CA85AAFC();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (_QWORD *)*v3;
  v14 = sub_1CA2509B8(a2);
  v15 = v12[2];
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
  }
  else
  {
    v18 = v13;
    v19 = v12[3];
    if (v19 >= v17 && (a3 & 1) != 0)
    {
LABEL_7:
      v20 = *v4;
      if ((v18 & 1) != 0)
      {
LABEL_8:
        v21 = v20[7];
        v22 = sub_1CA85B0FC();
        return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 40))(v21 + *(_QWORD *)(*(_QWORD *)(v22 - 8) + 72) * v14, a1, v22);
      }
      goto LABEL_11;
    }
    if (v19 >= v17 && (a3 & 1) == 0)
    {
      sub_1CA260940();
      goto LABEL_7;
    }
    sub_1CA253070(v17, a3 & 1);
    v24 = sub_1CA2509B8(a2);
    if ((v18 & 1) == (v25 & 1))
    {
      v14 = v24;
      v20 = *v4;
      if ((v18 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
      return sub_1CA27959C(v14, (uint64_t)v11, a1, v20);
    }
  }
  result = sub_1CA85C2E4();
  __break(1u);
  return result;
}

void sub_1CA25DA48(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  sub_1CA25E170(a1, a2, a3, a4, &qword_1EF94AE70, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1CA279598);
}

uint64_t sub_1CA25DA5C(uint64_t a1, uint64_t a2, char a3, double a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t result;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  char v19;

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v12 = sub_1CA25123C(a1, a2, (void (*)(_BYTE *, uint64_t, uint64_t))MEMORY[0x1E0DEA758], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1CA2514F0);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  result = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    v16 = v11;
    v17 = v10[3];
    if (v17 >= result && (a3 & 1) != 0)
    {
LABEL_7:
      v18 = *v5;
      if ((v16 & 1) != 0)
      {
LABEL_8:
        *(double *)(v18[7] + 8 * v12) = a4;
        return result;
      }
      goto LABEL_11;
    }
    if (v17 >= result && (a3 & 1) == 0)
    {
      result = (uint64_t)sub_1CA260C44();
      goto LABEL_7;
    }
    sub_1CA25348C(result, a3 & 1);
    result = sub_1CA25123C(a1, a2, (void (*)(_BYTE *, uint64_t, uint64_t))MEMORY[0x1E0DEA758], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1CA2514F0);
    if ((v16 & 1) == (v19 & 1))
    {
      v12 = result;
      v18 = *v5;
      if ((v16 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_1CA279654(v12, a1, a2, v18, a4);
      return swift_bridgeObjectRetain();
    }
  }
  result = sub_1CA85C2E4();
  __break(1u);
  return result;
}

uint64_t sub_1CA25DBA0(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_1CA25DBBC(a1, a2, a3, a4, (uint64_t (*)(_QWORD))MEMORY[0x1E0CAE5D0], &qword_1EF94B0E8, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1CA27969C);
}

uint64_t sub_1CA25DBBC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t (*a5)(_QWORD), uint64_t *a6, void (*a7)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t *v7;
  uint64_t *v10;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  _BOOL8 v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  char v28;

  v10 = v7;
  v15 = *v7;
  v17 = sub_1CA25123C(a2, a3, (void (*)(_BYTE *, uint64_t, uint64_t))MEMORY[0x1E0DEA758], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1CA2514F0);
  v18 = *(_QWORD *)(v15 + 16);
  v19 = (v16 & 1) == 0;
  v20 = v18 + v19;
  if (__OFADD__(v18, v19))
  {
    __break(1u);
  }
  else
  {
    v21 = v16;
    v22 = *(_QWORD *)(v15 + 24);
    if (v22 >= v20 && (a4 & 1) != 0)
    {
LABEL_7:
      v23 = *v10;
      if ((v21 & 1) != 0)
      {
LABEL_8:
        v24 = *(_QWORD *)(v23 + 56);
        v25 = a5(0);
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 40))(v24 + *(_QWORD *)(*(_QWORD *)(v25 - 8) + 72) * v17, a1, v25);
      }
      goto LABEL_11;
    }
    if (v22 >= v20 && (a4 & 1) == 0)
    {
      sub_1CA262834(a5, a6);
      goto LABEL_7;
    }
    sub_1CA25638C(v20, a4 & 1, a5, a6);
    v27 = sub_1CA25123C(a2, a3, (void (*)(_BYTE *, uint64_t, uint64_t))MEMORY[0x1E0DEA758], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1CA2514F0);
    if ((v21 & 1) == (v28 & 1))
    {
      v17 = v27;
      v23 = *v10;
      if ((v21 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      a7(v17, a2, a3, a1, v23);
      return swift_bridgeObjectRetain();
    }
  }
  result = sub_1CA85C2E4();
  __break(1u);
  return result;
}

uint64_t sub_1CA25DD50(char a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t result;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  char v19;

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v12 = sub_1CA25123C(a2, a3, (void (*)(_BYTE *, uint64_t, uint64_t))MEMORY[0x1E0DEA758], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1CA2514F0);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  result = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    v16 = v11;
    v17 = v10[3];
    if (v17 >= result && (a4 & 1) != 0)
    {
LABEL_7:
      v18 = *v5;
      if ((v16 & 1) != 0)
      {
LABEL_8:
        *(_BYTE *)(v18[7] + v12) = a1;
        return result;
      }
      goto LABEL_11;
    }
    if (v17 >= result && (a4 & 1) == 0)
    {
      result = (uint64_t)sub_1CA260E10(&qword_1EF94B0F0);
      goto LABEL_7;
    }
    sub_1CA253790(result, a4 & 1, &qword_1EF94B0F0);
    result = sub_1CA25123C(a2, a3, (void (*)(_BYTE *, uint64_t, uint64_t))MEMORY[0x1E0DEA758], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1CA2514F0);
    if ((v16 & 1) == (v19 & 1))
    {
      v12 = result;
      v18 = *v5;
      if ((v16 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_1CA2796A8(v12, a2, a3, a1, v18);
      return swift_bridgeObjectRetain();
    }
  }
  result = sub_1CA85C2E4();
  __break(1u);
  return result;
}

_OWORD *sub_1CA25DEA0(_OWORD *a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  _OWORD *v19;
  _OWORD *result;
  uint64_t v21;
  char v22;

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v12 = sub_1CA25123C(a2, a3, (void (*)(_BYTE *, uint64_t, uint64_t))MEMORY[0x1E0DEA758], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1CA2514F0);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    v16 = v11;
    v17 = v10[3];
    if (v17 >= v15 && (a4 & 1) != 0)
    {
LABEL_7:
      v18 = *v5;
      if ((v16 & 1) != 0)
      {
LABEL_8:
        v19 = (_OWORD *)(v18[7] + 32 * v12);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
        return sub_1CA266A44(a1, v19);
      }
      goto LABEL_11;
    }
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_1CA260FC8();
      goto LABEL_7;
    }
    sub_1CA253AAC(v15, a4 & 1);
    v21 = sub_1CA25123C(a2, a3, (void (*)(_BYTE *, uint64_t, uint64_t))MEMORY[0x1E0DEA758], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1CA2514F0);
    if ((v16 & 1) == (v22 & 1))
    {
      v12 = v21;
      v18 = *v5;
      if ((v16 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_1CA2796F0(v12, a2, a3, a1, v18);
      return (_OWORD *)swift_bridgeObjectRetain();
    }
  }
  result = (_OWORD *)sub_1CA85C2E4();
  __break(1u);
  return result;
}

uint64_t sub_1CA25DFF0(_QWORD *a1, char a2, float a3)
{
  _QWORD *v3;
  _QWORD **v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  _QWORD *v11;
  char v12;
  unint64_t v13;
  uint64_t v14;
  _BOOL8 v15;
  uint64_t result;
  char v17;
  uint64_t v18;
  _QWORD *v19;
  char v20;
  uint64_t v21;

  v4 = (_QWORD **)v3;
  v8 = type metadata accessor for Song();
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (_QWORD *)*v3;
  v13 = sub_1CA250830(a1);
  v14 = v11[2];
  v15 = (v12 & 1) == 0;
  result = v14 + v15;
  if (__OFADD__(v14, v15))
  {
    __break(1u);
  }
  else
  {
    v17 = v12;
    v18 = v11[3];
    if (v18 >= result && (a2 & 1) != 0)
    {
LABEL_7:
      v19 = *v4;
      if ((v17 & 1) != 0)
      {
LABEL_8:
        *(float *)(v19[7] + 4 * v13) = a3;
        return result;
      }
      goto LABEL_11;
    }
    if (v18 >= result && (a2 & 1) == 0)
    {
      result = (uint64_t)sub_1CA2611AC();
      goto LABEL_7;
    }
    sub_1CA253DA8(result, a2 & 1);
    result = sub_1CA250830(a1);
    if ((v17 & 1) == (v20 & 1))
    {
      v13 = result;
      v19 = *v4;
      if ((v17 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_1CA24EE38((uint64_t)a1, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for Song);
      return sub_1CA279758(v13, (uint64_t)v10, v19, a3);
    }
  }
  result = sub_1CA85C2E4();
  __break(1u);
  return result;
}

uint64_t sub_1CA25E140(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_1CA25DBBC(a1, a2, a3, a4, (uint64_t (*)(_QWORD))MEMORY[0x1E0D77038], &qword_1ED874B28, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1CA2797F0);
}

void sub_1CA25E15C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  sub_1CA25E170(a1, a2, a3, a4, &qword_1ED873288, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1CA279598);
}

void sub_1CA25E170(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t *a5, void (*a6)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t *v6;
  uint64_t *v9;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  _BOOL8 v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;

  v9 = v6;
  v14 = *v6;
  v16 = sub_1CA25123C(a2, a3, (void (*)(_BYTE *, uint64_t, uint64_t))MEMORY[0x1E0DEA758], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1CA2514F0);
  v17 = *(_QWORD *)(v14 + 16);
  v18 = (v15 & 1) == 0;
  v19 = v17 + v18;
  if (__OFADD__(v17, v18))
  {
    __break(1u);
  }
  else
  {
    v20 = v15;
    v21 = *(_QWORD *)(v14 + 24);
    if (v21 >= v19 && (a4 & 1) != 0)
    {
LABEL_7:
      v22 = *v9;
      if ((v20 & 1) != 0)
      {
LABEL_8:
        v23 = *(_QWORD *)(v22 + 56);

        *(_QWORD *)(v23 + 8 * v16) = a1;
        return;
      }
      goto LABEL_11;
    }
    if (v21 >= v19 && (a4 & 1) == 0)
    {
      sub_1CA26579C(a5);
      goto LABEL_7;
    }
    sub_1CA25B6F4(v19, a4 & 1, a5);
    v24 = sub_1CA25123C(a2, a3, (void (*)(_BYTE *, uint64_t, uint64_t))MEMORY[0x1E0DEA758], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1CA2514F0);
    if ((v20 & 1) == (v25 & 1))
    {
      v16 = v24;
      v22 = *v9;
      if ((v20 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      a6(v16, a2, a3, a1, v22);
      swift_bridgeObjectRetain();
      return;
    }
  }
  sub_1CA85C2E4();
  __break(1u);
}

uint64_t sub_1CA25E2D8(uint64_t a1, uint64_t a2, char a3, float a4, float a5)
{
  _QWORD *v5;
  _QWORD **v6;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t result;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  float *v21;
  char v22;

  v6 = (_QWORD **)v5;
  v12 = (_QWORD *)*v5;
  v14 = sub_1CA25123C(a1, a2, (void (*)(_BYTE *, uint64_t, uint64_t))MEMORY[0x1E0DEA758], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1CA2514F0);
  v15 = v12[2];
  v16 = (v13 & 1) == 0;
  result = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
  }
  else
  {
    v18 = v13;
    v19 = v12[3];
    if (v19 >= result && (a3 & 1) != 0)
    {
LABEL_7:
      v20 = *v6;
      if ((v18 & 1) != 0)
      {
LABEL_8:
        v21 = (float *)(v20[7] + 8 * v14);
        *v21 = a4;
        v21[1] = a5;
        return result;
      }
      goto LABEL_11;
    }
    if (v19 >= result && (a3 & 1) == 0)
    {
      result = (uint64_t)sub_1CA261D60();
      goto LABEL_7;
    }
    sub_1CA25518C(result, a3 & 1);
    result = sub_1CA25123C(a1, a2, (void (*)(_BYTE *, uint64_t, uint64_t))MEMORY[0x1E0DEA758], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1CA2514F0);
    if ((v18 & 1) == (v22 & 1))
    {
      v14 = result;
      v20 = *v6;
      if ((v18 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_1CA2797FC(v14, a1, a2, v20, a4, a5);
      return swift_bridgeObjectRetain();
    }
  }
  result = sub_1CA85C2E4();
  __break(1u);
  return result;
}

uint64_t sub_1CA25E428(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_1CA25F2AC(a1, a2, a3, a4, (uint64_t *)&unk_1ED873278, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1CA279598);
}

uint64_t sub_1CA25E43C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_1CA25E6E8(a1, a2, a3, a4, &qword_1EF94AFB8, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1CA279598);
}

uint64_t sub_1CA25E450(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_1CA25DBBC(a1, a2, a3, a4, (uint64_t (*)(_QWORD))MEMORY[0x1E0D76EB0], &qword_1EF94B150, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1CA279848);
}

uint64_t sub_1CA25E46C(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  unint64_t v20;
  char v21;

  v4 = (_QWORD **)v3;
  v8 = (_QWORD *)*v3;
  v10 = sub_1CA250BCC(a2);
  v11 = v8[2];
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
  }
  else
  {
    v14 = v9;
    v15 = v8[3];
    if (v15 >= v13 && (a3 & 1) != 0)
    {
LABEL_7:
      v16 = *v4;
      if ((v14 & 1) != 0)
      {
LABEL_8:
        v17 = v16[7];
        v18 = sub_1CA85ADA8();
        return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v17 + *(_QWORD *)(*(_QWORD *)(v18 - 8) + 72) * v10, a1, v18);
      }
      return sub_1CA279854(v10, a2, a1, v16);
    }
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_1CA261F20();
      goto LABEL_7;
    }
    sub_1CA255490(v13, a3 & 1);
    v20 = sub_1CA250BCC(a2);
    if ((v14 & 1) == (v21 & 1))
    {
      v10 = v20;
      v16 = *v4;
      if ((v14 & 1) != 0)
        goto LABEL_8;
      return sub_1CA279854(v10, a2, a1, v16);
    }
  }
  result = sub_1CA85C2E4();
  __break(1u);
  return result;
}

void sub_1CA25E590(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  sub_1CA25E170(a1, a2, a3, a4, (uint64_t *)&unk_1EF94B120, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1CA279598);
}

uint64_t sub_1CA25E5A4(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t result;
  unint64_t v19;
  char v20;

  v4 = (_QWORD **)v3;
  v8 = (_QWORD *)*v3;
  v10 = sub_1CA250960(a2);
  v11 = v8[2];
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
  }
  else
  {
    v14 = v9;
    v15 = v8[3];
    if (v15 >= v13 && (a3 & 1) != 0)
    {
LABEL_7:
      v16 = *v4;
      if ((v14 & 1) != 0)
      {
LABEL_8:
        v17 = v16[7];
        result = swift_release();
        *(_QWORD *)(v17 + 8 * v10) = a1;
        return result;
      }
      return sub_1CA2798E0(v10, a2, a1, v16);
    }
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_1CA262680();
      goto LABEL_7;
    }
    sub_1CA256080(v13, a3 & 1);
    v19 = sub_1CA250960(a2);
    if ((v14 & 1) == (v20 & 1))
    {
      v10 = v19;
      v16 = *v4;
      if ((v14 & 1) != 0)
        goto LABEL_8;
      return sub_1CA2798E0(v10, a2, a1, v16);
    }
  }
  type metadata accessor for KGElementIdentifier(0);
  result = sub_1CA85C2E4();
  __break(1u);
  return result;
}

uint64_t sub_1CA25E6B8(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_1CA25DBBC(a1, a2, a3, a4, (uint64_t (*)(_QWORD))MEMORY[0x1E0D767B8], &qword_1EF94B0C8, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1CA279928);
}

uint64_t sub_1CA25E6D4(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_1CA25E6E8(a1, a2, a3, a4, &qword_1EF94B1B8, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1CA279598);
}

uint64_t sub_1CA25E6E8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t *a5, void (*a6)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t *v6;
  uint64_t *v9;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  _BOOL8 v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t result;
  uint64_t v25;
  char v26;

  v9 = v6;
  v14 = *v6;
  v16 = sub_1CA25123C(a2, a3, (void (*)(_BYTE *, uint64_t, uint64_t))MEMORY[0x1E0DEA758], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1CA2514F0);
  v17 = *(_QWORD *)(v14 + 16);
  v18 = (v15 & 1) == 0;
  v19 = v17 + v18;
  if (__OFADD__(v17, v18))
  {
    __break(1u);
  }
  else
  {
    v20 = v15;
    v21 = *(_QWORD *)(v14 + 24);
    if (v21 >= v19 && (a4 & 1) != 0)
    {
LABEL_7:
      v22 = *v9;
      if ((v20 & 1) != 0)
      {
LABEL_8:
        v23 = *(_QWORD *)(v22 + 56);
        result = swift_bridgeObjectRelease();
        *(_QWORD *)(v23 + 8 * v16) = a1;
        return result;
      }
      goto LABEL_11;
    }
    if (v21 >= v19 && (a4 & 1) == 0)
    {
      sub_1CA264AAC(a5);
      goto LABEL_7;
    }
    sub_1CA25A06C(v19, a4 & 1, a5);
    v25 = sub_1CA25123C(a2, a3, (void (*)(_BYTE *, uint64_t, uint64_t))MEMORY[0x1E0DEA758], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1CA2514F0);
    if ((v20 & 1) == (v26 & 1))
    {
      v16 = v25;
      v22 = *v9;
      if ((v20 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      a6(v16, a2, a3, a1, v22);
      return swift_bridgeObjectRetain();
    }
  }
  result = sub_1CA85C2E4();
  __break(1u);
  return result;
}

uint64_t sub_1CA25E850(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_1CA25E6E8(a1, a2, a3, a4, &qword_1EF94AED8, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1CA279598);
}

uint64_t sub_1CA25E864(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_1CA25E6E8(a1, a2, a3, a4, &qword_1EF94B0D0, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1CA279598);
}

uint64_t sub_1CA25E878(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t *v19;
  uint64_t result;
  unint64_t v21;
  char v22;

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v12 = sub_1CA250960(a3);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    v16 = v11;
    v17 = v10[3];
    if (v17 >= v15 && (a4 & 1) != 0)
    {
LABEL_7:
      v18 = *v5;
      if ((v16 & 1) != 0)
      {
LABEL_8:
        v19 = (uint64_t *)(v18[7] + 16 * v12);
        result = swift_bridgeObjectRelease();
        *v19 = a1;
        v19[1] = a2;
        return result;
      }
      return sub_1CA2799C4(v12, a3, a1, a2, v18);
    }
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_1CA26304C();
      goto LABEL_7;
    }
    sub_1CA257064(v15, a4 & 1);
    v21 = sub_1CA250960(a3);
    if ((v16 & 1) == (v22 & 1))
    {
      v12 = v21;
      v18 = *v5;
      if ((v16 & 1) != 0)
        goto LABEL_8;
      return sub_1CA2799C4(v12, a3, a1, a2, v18);
    }
  }
  type metadata accessor for KGElementIdentifier(0);
  result = sub_1CA85C2E4();
  __break(1u);
  return result;
}

uint64_t sub_1CA25E994(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_1CA25E6E8(a1, a2, a3, a4, &qword_1EF94B0C0, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1CA279598);
}

uint64_t sub_1CA25E9A8(uint64_t a1, char a2, double a3)
{
  _QWORD *v3;
  _QWORD **v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t result;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  char v21;
  uint64_t v22;

  v4 = (_QWORD **)v3;
  v8 = sub_1CA85AE74();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (_QWORD *)*v3;
  v14 = sub_1CA250A9C(a1);
  v15 = v12[2];
  v16 = (v13 & 1) == 0;
  result = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
  }
  else
  {
    v18 = v13;
    v19 = v12[3];
    if (v19 >= result && (a2 & 1) != 0)
    {
LABEL_7:
      v20 = *v4;
      if ((v18 & 1) != 0)
      {
LABEL_8:
        *(double *)(v20[7] + 8 * v14) = a3;
        return result;
      }
      goto LABEL_11;
    }
    if (v19 >= result && (a2 & 1) == 0)
    {
      result = (uint64_t)sub_1CA26320C();
      goto LABEL_7;
    }
    sub_1CA25738C(result, a2 & 1);
    result = sub_1CA250A9C(a1);
    if ((v18 & 1) == (v21 & 1))
    {
      v14 = result;
      v20 = *v4;
      if ((v18 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, v8);
      return sub_1CA279A0C(v14, (uint64_t)v11, v20, a3);
    }
  }
  result = sub_1CA85C2E4();
  __break(1u);
  return result;
}

uint64_t sub_1CA25EB00(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t result;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  char v21;
  uint64_t v22;

  v4 = (_QWORD **)v3;
  v8 = sub_1CA85ACD0();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (_QWORD *)*v3;
  v14 = sub_1CA250E04(a2);
  v15 = v12[2];
  v16 = (v13 & 1) == 0;
  result = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_14;
  }
  v18 = v13;
  v19 = v12[3];
  if (v19 >= result && (a3 & 1) != 0)
  {
LABEL_7:
    v20 = *v4;
    if ((v18 & 1) != 0)
    {
LABEL_8:
      *(_QWORD *)(v20[7] + 8 * v14) = a1;
      return result;
    }
    goto LABEL_11;
  }
  if (v19 >= result && (a3 & 1) == 0)
  {
    result = (uint64_t)sub_1CA263440();
    goto LABEL_7;
  }
  sub_1CA25771C(result, a3 & 1);
  result = sub_1CA250E04(a2);
  if ((v18 & 1) != (v21 & 1))
  {
LABEL_14:
    result = sub_1CA85C2E4();
    __break(1u);
    return result;
  }
  v14 = result;
  v20 = *v4;
  if ((v18 & 1) != 0)
    goto LABEL_8;
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  return sub_1CA279AA4(v14, (uint64_t)v11, a1, v20);
}

uint64_t sub_1CA25EC50(__int16 a1, char a2, double a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t result;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  char v17;

  v4 = (_QWORD **)v3;
  v8 = (_QWORD *)*v3;
  v10 = sub_1CA250E9C(a1);
  v11 = v8[2];
  v12 = (v9 & 1) == 0;
  result = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
  }
  else
  {
    v14 = v9;
    v15 = v8[3];
    if (v15 >= result && (a2 & 1) != 0)
    {
LABEL_7:
      v16 = *v4;
      if ((v14 & 1) != 0)
      {
LABEL_8:
        *(double *)(v16[7] + 8 * v10) = a3;
        return result;
      }
      return sub_1CA279B3C(v10, a1, v16, a3);
    }
    if (v15 >= result && (a2 & 1) == 0)
    {
      result = (uint64_t)sub_1CA26367C();
      goto LABEL_7;
    }
    sub_1CA257AD0(result, a2 & 1);
    result = sub_1CA250E9C(a1);
    if ((v14 & 1) == (v17 & 1))
    {
      v10 = result;
      v16 = *v4;
      if ((v14 & 1) != 0)
        goto LABEL_8;
      return sub_1CA279B3C(v10, a1, v16, a3);
    }
  }
  type metadata accessor for PHSearchEntityPersonRelationType(0);
  result = sub_1CA85C2E4();
  __break(1u);
  return result;
}

void sub_1CA25ED54(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  sub_1CA25E170(a1, a2, a3, a4, &qword_1EF94AFB0, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1CA279598);
}

void sub_1CA25ED68(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  sub_1CA25E170(a1, a2, a3, a4, &qword_1EF94AFA0, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1CA279598);
}

uint64_t sub_1CA25ED7C(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t result;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  char v17;

  v4 = (_QWORD **)v3;
  v8 = (_QWORD *)*v3;
  v10 = sub_1CA250960(a2);
  v11 = v8[2];
  v12 = (v9 & 1) == 0;
  result = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
  }
  else
  {
    v14 = v9;
    v15 = v8[3];
    if (v15 >= result && (a3 & 1) != 0)
    {
LABEL_7:
      v16 = *v4;
      if ((v14 & 1) != 0)
      {
LABEL_8:
        *(_QWORD *)(v16[7] + 8 * v10) = a1;
        return result;
      }
      return sub_1CA2798E0(v10, a2, a1, v16);
    }
    if (v15 >= result && (a3 & 1) == 0)
    {
      result = (uint64_t)sub_1CA263C98();
      goto LABEL_7;
    }
    sub_1CA2584F8(result, a3 & 1);
    result = sub_1CA250960(a2);
    if ((v14 & 1) == (v17 & 1))
    {
      v10 = result;
      v16 = *v4;
      if ((v14 & 1) != 0)
        goto LABEL_8;
      return sub_1CA2798E0(v10, a2, a1, v16);
    }
  }
  type metadata accessor for KGElementIdentifier(0);
  result = sub_1CA85C2E4();
  __break(1u);
  return result;
}

id sub_1CA25EE84(uint64_t a1, void *a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v7;
  char v8;
  unint64_t v9;
  uint64_t v10;
  _BOOL8 v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  id result;
  unint64_t v19;
  char v20;

  v4 = (_QWORD **)v3;
  v7 = (_QWORD *)*v3;
  v9 = sub_1CA25101C((uint64_t)a2);
  v10 = v7[2];
  v11 = (v8 & 1) == 0;
  v12 = v10 + v11;
  if (__OFADD__(v10, v11))
  {
    __break(1u);
  }
  else
  {
    v13 = v8;
    v14 = v7[3];
    if (v14 >= v12 && (a3 & 1) != 0)
    {
LABEL_7:
      v15 = *v4;
      if ((v13 & 1) != 0)
      {
LABEL_8:
        v16 = v15[7];
        v17 = sub_1CA85A5B0();
        return (id)(*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 40))(v16 + *(_QWORD *)(*(_QWORD *)(v17 - 8) + 72) * v9, a1, v17);
      }
      goto LABEL_11;
    }
    if (v14 >= v12 && (a3 & 1) == 0)
    {
      sub_1CA264350((uint64_t (*)(_QWORD))MEMORY[0x1E0CB0870], &qword_1EF94B078);
      goto LABEL_7;
    }
    sub_1CA259090(v12, a3 & 1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CB0870], &qword_1EF94B078);
    v19 = sub_1CA25101C((uint64_t)a2);
    if ((v13 & 1) == (v20 & 1))
    {
      v9 = v19;
      v15 = *v4;
      if ((v13 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_1CA279B80(v9, (uint64_t)a2, a1, v15);
      return a2;
    }
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED8731D0);
  result = (id)sub_1CA85C2E4();
  __break(1u);
  return result;
}

uint64_t sub_1CA25EFD4(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_1CA25E6E8(a1, a2, a3, a4, (uint64_t *)&unk_1EF94AE30, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1CA279598);
}

id sub_1CA25EFE8(uint64_t a1, void *a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v7;
  char v8;
  unint64_t v9;
  uint64_t v10;
  _BOOL8 v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  id result;
  unint64_t v18;
  char v19;

  v4 = (_QWORD **)v3;
  v7 = (_QWORD *)*v3;
  v9 = sub_1CA25104C((uint64_t)a2);
  v10 = v7[2];
  v11 = (v8 & 1) == 0;
  v12 = v10 + v11;
  if (__OFADD__(v10, v11))
  {
    __break(1u);
  }
  else
  {
    v13 = v8;
    v14 = v7[3];
    if (v14 >= v12 && (a3 & 1) != 0)
    {
LABEL_7:
      v15 = *v4;
      if ((v13 & 1) != 0)
      {
LABEL_8:
        v16 = v15[7];
        result = (id)swift_release();
        *(_QWORD *)(v16 + 8 * v9) = a1;
        return result;
      }
      goto LABEL_11;
    }
    if (v14 >= v12 && (a3 & 1) == 0)
    {
      sub_1CA263FE4();
      goto LABEL_7;
    }
    sub_1CA258ADC(v12, a3 & 1);
    v18 = sub_1CA25104C((uint64_t)a2);
    if ((v13 & 1) == (v19 & 1))
    {
      v9 = v18;
      v15 = *v4;
      if ((v13 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_1CA2798E0(v9, (uint64_t)a2, a1, v15);
      return a2;
    }
  }
  sub_1CA24EEC0(0, (unint64_t *)&qword_1EF94AB50);
  result = (id)sub_1CA85C2E4();
  __break(1u);
  return result;
}

id sub_1CA25F114(uint64_t a1, void *a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v7;
  char v8;
  unint64_t v9;
  uint64_t v10;
  _BOOL8 v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  id result;
  unint64_t v19;
  char v20;

  v4 = (_QWORD **)v3;
  v7 = (_QWORD *)*v3;
  v9 = sub_1CA25104C((uint64_t)a2);
  v10 = v7[2];
  v11 = (v8 & 1) == 0;
  v12 = v10 + v11;
  if (__OFADD__(v10, v11))
  {
    __break(1u);
  }
  else
  {
    v13 = v8;
    v14 = v7[3];
    if (v14 >= v12 && (a3 & 1) != 0)
    {
LABEL_7:
      v15 = *v4;
      if ((v13 & 1) != 0)
      {
LABEL_8:
        v16 = v15[7];
        v17 = sub_1CA85A148();
        return (id)(*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 40))(v16 + *(_QWORD *)(*(_QWORD *)(v17 - 8) + 72) * v9, a1, v17);
      }
      goto LABEL_11;
    }
    if (v14 >= v12 && (a3 & 1) == 0)
    {
      sub_1CA264350((uint64_t (*)(_QWORD))MEMORY[0x1E0CAE5D0], &qword_1EF94B050);
      goto LABEL_7;
    }
    sub_1CA259090(v12, a3 & 1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CAE5D0], &qword_1EF94B050);
    v19 = sub_1CA25104C((uint64_t)a2);
    if ((v13 & 1) == (v20 & 1))
    {
      v9 = v19;
      v15 = *v4;
      if ((v13 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_1CA279B8C(v9, (uint64_t)a2, a1, v15);
      return a2;
    }
  }
  sub_1CA24EEC0(0, (unint64_t *)&qword_1EF94AB50);
  result = (id)sub_1CA85C2E4();
  __break(1u);
  return result;
}

uint64_t sub_1CA25F270(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_1CA25E6E8(a1, a2, a3, a4, (uint64_t *)&unk_1ED874B30, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1CA279598);
}

uint64_t sub_1CA25F284(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_1CA25E6E8(a1, a2, a3, a4, &qword_1ED874B40, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1CA279598);
}

uint64_t sub_1CA25F298(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_1CA25F2AC(a1, a2, a3, a4, &qword_1ED874B50, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1CA279598);
}

uint64_t sub_1CA25F2AC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t *a5, void (*a6)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t *v6;
  uint64_t *v9;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  _BOOL8 v18;
  uint64_t result;
  char v20;
  uint64_t v21;
  uint64_t v22;
  char v23;

  v9 = v6;
  v14 = *v6;
  v16 = sub_1CA25123C(a2, a3, (void (*)(_BYTE *, uint64_t, uint64_t))MEMORY[0x1E0DEA758], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1CA2514F0);
  v17 = *(_QWORD *)(v14 + 16);
  v18 = (v15 & 1) == 0;
  result = v17 + v18;
  if (__OFADD__(v17, v18))
  {
    __break(1u);
  }
  else
  {
    v20 = v15;
    v21 = *(_QWORD *)(v14 + 24);
    if (v21 >= result && (a4 & 1) != 0)
    {
LABEL_7:
      v22 = *v9;
      if ((v20 & 1) != 0)
      {
LABEL_8:
        *(_QWORD *)(*(_QWORD *)(v22 + 56) + 8 * v16) = a1;
        return result;
      }
      goto LABEL_11;
    }
    if (v21 >= result && (a4 & 1) == 0)
    {
      result = (uint64_t)sub_1CA264580(a5);
      goto LABEL_7;
    }
    sub_1CA2593EC(result, a4 & 1, a5);
    result = sub_1CA25123C(a2, a3, (void (*)(_BYTE *, uint64_t, uint64_t))MEMORY[0x1E0DEA758], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1CA2514F0);
    if ((v20 & 1) == (v23 & 1))
    {
      v16 = result;
      v22 = *v9;
      if ((v20 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      a6(v16, a2, a3, a1, v22);
      return swift_bridgeObjectRetain();
    }
  }
  result = sub_1CA85C2E4();
  __break(1u);
  return result;
}

uint64_t sub_1CA25F408(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  _QWORD *v7;
  _QWORD **v8;
  _QWORD *v15;
  char v16;
  unint64_t v17;
  uint64_t v18;
  _BOOL8 v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t *v24;
  uint64_t result;
  uint64_t v26;
  char v27;

  v8 = (_QWORD **)v7;
  v15 = (_QWORD *)*v7;
  v17 = sub_1CA25123C(a5, a6, (void (*)(_BYTE *, uint64_t, uint64_t))MEMORY[0x1E0DEA758], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1CA2514F0);
  v18 = v15[2];
  v19 = (v16 & 1) == 0;
  v20 = v18 + v19;
  if (__OFADD__(v18, v19))
  {
    __break(1u);
  }
  else
  {
    v21 = v16;
    v22 = v15[3];
    if (v22 >= v20 && (a7 & 1) != 0)
    {
LABEL_7:
      v23 = *v8;
      if ((v21 & 1) != 0)
      {
LABEL_8:
        v24 = (uint64_t *)(v23[7] + 32 * v17);
        swift_bridgeObjectRelease();
        result = swift_bridgeObjectRelease();
        *v24 = a1;
        v24[1] = a2;
        v24[2] = a3;
        v24[3] = a4;
        return result;
      }
      goto LABEL_11;
    }
    if (v22 >= v20 && (a7 & 1) == 0)
    {
      sub_1CA264724();
      goto LABEL_7;
    }
    sub_1CA2596F0(v20, a7 & 1);
    v26 = sub_1CA25123C(a5, a6, (void (*)(_BYTE *, uint64_t, uint64_t))MEMORY[0x1E0DEA758], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1CA2514F0);
    if ((v21 & 1) == (v27 & 1))
    {
      v17 = v26;
      v23 = *v8;
      if ((v21 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_1CA279C6C(v17, a5, a6, a1, a2, a3, a4, v23);
      return swift_bridgeObjectRetain();
    }
  }
  result = sub_1CA85C2E4();
  __break(1u);
  return result;
}

void sub_1CA25F598(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  unint64_t v18;
  char v19;

  v4 = (_QWORD **)v3;
  v8 = (_QWORD *)*v3;
  v10 = sub_1CA25119C(a2, (void (*)(_BYTE *, uint64_t))sub_1CA266BA4, (uint64_t (*)(uint64_t, uint64_t))sub_1CA250508);
  v11 = v8[2];
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
  }
  else
  {
    v14 = v9;
    v15 = v8[3];
    if (v15 >= v13 && (a3 & 1) != 0)
    {
LABEL_7:
      v16 = *v4;
      if ((v14 & 1) != 0)
      {
LABEL_8:
        v17 = v16[7];

        *(_QWORD *)(v17 + 8 * v10) = a1;
        return;
      }
      goto LABEL_11;
    }
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_1CA264904(&qword_1EF94AFF8);
      goto LABEL_7;
    }
    sub_1CA259DF8(v13, a3 & 1);
    v18 = sub_1CA25119C(a2, (void (*)(_BYTE *, uint64_t))sub_1CA266BA4, (uint64_t (*)(uint64_t, uint64_t))sub_1CA250508);
    if ((v14 & 1) == (v19 & 1))
    {
      v10 = v18;
      v16 = *v4;
      if ((v14 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_1CA2798E0(v10, a2, a1, v16);
      swift_bridgeObjectRetain();
      return;
    }
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94AFF0);
  sub_1CA85C2E4();
  __break(1u);
}

void sub_1CA25F6E0(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  sub_1CA25E170(a1, a2, a3, a4, (uint64_t *)&unk_1EF94B018, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1CA279598);
}

uint64_t sub_1CA25F6F4(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_1CA25E6E8(a1, a2, a3, a4, &qword_1ED873260, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1CA279598);
}

uint64_t sub_1CA25F708(char a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t result;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  char v19;

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v12 = sub_1CA25123C(a2, a3, (void (*)(_BYTE *, uint64_t, uint64_t))MEMORY[0x1E0DEA758], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1CA2514F0);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  result = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    v16 = v11;
    v17 = v10[3];
    if (v17 >= result && (a4 & 1) != 0)
    {
LABEL_7:
      v18 = *v5;
      if ((v16 & 1) != 0)
      {
LABEL_8:
        *(_BYTE *)(v18[7] + v12) = a1 & 1;
        return result;
      }
      goto LABEL_11;
    }
    if (v17 >= result && (a4 & 1) == 0)
    {
      result = (uint64_t)sub_1CA264C58();
      goto LABEL_7;
    }
    sub_1CA25A37C(result, a4 & 1);
    result = sub_1CA25123C(a2, a3, (void (*)(_BYTE *, uint64_t, uint64_t))MEMORY[0x1E0DEA758], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1CA2514F0);
    if ((v16 & 1) == (v19 & 1))
    {
      v12 = result;
      v18 = *v5;
      if ((v16 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_1CA2796A8(v12, a2, a3, a1 & 1, v18);
      return swift_bridgeObjectRetain();
    }
  }
  result = sub_1CA85C2E4();
  __break(1u);
  return result;
}

void sub_1CA25F84C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  sub_1CA25E170(a1, a2, a3, a4, (uint64_t *)&unk_1EF94AF10, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1CA279598);
}

uint64_t sub_1CA25F860(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  unint64_t v20;
  char v21;

  v4 = (_QWORD **)v3;
  v8 = (_QWORD *)*v3;
  v10 = sub_1CA250960(a2);
  v11 = v8[2];
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
  }
  else
  {
    v14 = v9;
    v15 = v8[3];
    if (v15 >= v13 && (a3 & 1) != 0)
    {
LABEL_7:
      v16 = *v4;
      if ((v14 & 1) != 0)
      {
LABEL_8:
        v17 = v16[7];
        v18 = sub_1CA85A5B0();
        return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v17 + *(_QWORD *)(*(_QWORD *)(v18 - 8) + 72) * v10, a1, v18);
      }
      return sub_1CA279CBC(v10, a2, a1, v16);
    }
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_1CA265188();
      goto LABEL_7;
    }
    sub_1CA25ACC0(v13, a3 & 1);
    v20 = sub_1CA250960(a2);
    if ((v14 & 1) == (v21 & 1))
    {
      v10 = v20;
      v16 = *v4;
      if ((v14 & 1) != 0)
        goto LABEL_8;
      return sub_1CA279CBC(v10, a2, a1, v16);
    }
  }
  type metadata accessor for KGElementIdentifier(0);
  result = sub_1CA85C2E4();
  __break(1u);
  return result;
}

uint64_t sub_1CA25F984(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t result;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t *v19;
  char v20;

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v12 = sub_1CA250960(a3);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  result = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    v16 = v11;
    v17 = v10[3];
    if (v17 >= result && (a4 & 1) != 0)
    {
LABEL_7:
      v18 = *v5;
      if ((v16 & 1) != 0)
      {
LABEL_8:
        v19 = (uint64_t *)(v18[7] + 16 * v12);
        *v19 = a1;
        v19[1] = a2;
        return result;
      }
      return sub_1CA2799C4(v12, a3, a1, a2, v18);
    }
    if (v17 >= result && (a4 & 1) == 0)
    {
      result = (uint64_t)sub_1CA261628();
      goto LABEL_7;
    }
    sub_1CA2544E4(result, a4 & 1);
    result = sub_1CA250960(a3);
    if ((v16 & 1) == (v20 & 1))
    {
      v12 = result;
      v18 = *v5;
      if ((v16 & 1) != 0)
        goto LABEL_8;
      return sub_1CA2799C4(v12, a3, a1, a2, v18);
    }
  }
  type metadata accessor for KGElementIdentifier(0);
  result = sub_1CA85C2E4();
  __break(1u);
  return result;
}

uint64_t sub_1CA25FA98(uint64_t a1, uint64_t a2, uint64_t a3, char a4, double a5)
{
  _QWORD *v5;
  _QWORD **v6;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t result;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  char v22;

  v6 = (_QWORD **)v5;
  v12 = (_QWORD *)*v5;
  v14 = sub_1CA250960(a3);
  v15 = v12[2];
  v16 = (v13 & 1) == 0;
  result = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
  }
  else
  {
    v18 = v13;
    v19 = v12[3];
    if (v19 >= result && (a4 & 1) != 0)
    {
LABEL_7:
      v20 = *v6;
      if ((v18 & 1) != 0)
      {
LABEL_8:
        v21 = v20[7] + 24 * v14;
        *(_QWORD *)v21 = a1;
        *(_QWORD *)(v21 + 8) = a2;
        *(double *)(v21 + 16) = a5;
        return result;
      }
      return sub_1CA279D48(v14, a3, a1, a2, v20, a5);
    }
    if (v19 >= result && (a4 & 1) == 0)
    {
      result = (uint64_t)sub_1CA2653A8();
      goto LABEL_7;
    }
    sub_1CA25B030(result, a4 & 1);
    result = sub_1CA250960(a3);
    if ((v18 & 1) == (v22 & 1))
    {
      v14 = result;
      v20 = *v6;
      if ((v18 & 1) != 0)
        goto LABEL_8;
      return sub_1CA279D48(v14, a3, a1, a2, v20, a5);
    }
  }
  type metadata accessor for KGElementIdentifier(0);
  result = sub_1CA85C2E4();
  __break(1u);
  return result;
}

uint64_t sub_1CA25FBC8(uint64_t a1, char a2, double a3, double a4)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  unint64_t v21;
  char v22;

  v5 = v4;
  v10 = *v4;
  v12 = sub_1CA251398(a3, a4);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    v16 = v11;
    v17 = *(_QWORD *)(v10 + 24);
    if (v17 >= v15 && (a2 & 1) != 0)
    {
LABEL_7:
      v18 = *v5;
      if ((v16 & 1) != 0)
      {
LABEL_8:
        v19 = *(_QWORD *)(v18 + 56);
        result = swift_bridgeObjectRelease();
        *(_QWORD *)(v19 + 8 * v12) = a1;
        return result;
      }
      return sub_1CA279E34(v12, a1, v18, a3, a4);
    }
    if (v17 >= v15 && (a2 & 1) == 0)
    {
      sub_1CA265CA8(&qword_1EF94AE50);
      goto LABEL_7;
    }
    sub_1CA25BFC4(v15, a2 & 1, &qword_1EF94AE50);
    v21 = sub_1CA251398(a3, a4);
    if ((v16 & 1) == (v22 & 1))
    {
      v12 = v21;
      v18 = *v5;
      if ((v16 & 1) != 0)
        goto LABEL_8;
      return sub_1CA279E34(v12, a1, v18, a3, a4);
    }
  }
  type metadata accessor for CLLocationCoordinate2D(0);
  result = sub_1CA85C2E4();
  __break(1u);
  return result;
}

uint64_t sub_1CA25FCF4(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  _QWORD *v11;
  char v12;
  unint64_t v13;
  uint64_t v14;
  _BOOL8 v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t result;
  unint64_t v22;
  char v23;
  uint64_t v24;

  v4 = (_QWORD **)v3;
  v8 = type metadata accessor for DateAndLocation();
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (_QWORD *)*v3;
  v13 = sub_1CA251444(a2);
  v14 = v11[2];
  v15 = (v12 & 1) == 0;
  v16 = v14 + v15;
  if (__OFADD__(v14, v15))
  {
    __break(1u);
    goto LABEL_14;
  }
  v17 = v12;
  v18 = v11[3];
  if (v18 >= v16 && (a3 & 1) != 0)
  {
LABEL_7:
    v19 = *v4;
    if ((v17 & 1) != 0)
    {
LABEL_8:
      v20 = v19[7];
      result = swift_bridgeObjectRelease();
      *(_QWORD *)(v20 + 8 * v13) = a1;
      return result;
    }
    goto LABEL_11;
  }
  if (v18 >= v16 && (a3 & 1) == 0)
  {
    sub_1CA266528();
    goto LABEL_7;
  }
  sub_1CA25CE4C(v16, a3 & 1);
  v22 = sub_1CA251444(a2);
  if ((v17 & 1) != (v23 & 1))
  {
LABEL_14:
    result = sub_1CA85C2E4();
    __break(1u);
    return result;
  }
  v13 = v22;
  v19 = *v4;
  if ((v17 & 1) != 0)
    goto LABEL_8;
LABEL_11:
  sub_1CA24EE38(a2, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for DateAndLocation);
  return sub_1CA279E80(v13, (uint64_t)v10, a1, v19);
}

id sub_1CA25FE50(uint64_t a1, void *a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v7;
  char v8;
  unint64_t v9;
  uint64_t v10;
  _BOOL8 v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  id result;
  unint64_t v18;
  char v19;

  v4 = (_QWORD **)v3;
  v7 = (_QWORD *)*v3;
  v9 = sub_1CA251098((uint64_t)a2);
  v10 = v7[2];
  v11 = (v8 & 1) == 0;
  v12 = v10 + v11;
  if (__OFADD__(v10, v11))
  {
    __break(1u);
  }
  else
  {
    v13 = v8;
    v14 = v7[3];
    if (v14 >= v12 && (a3 & 1) != 0)
    {
LABEL_7:
      v15 = *v4;
      if ((v13 & 1) != 0)
      {
LABEL_8:
        v16 = v15[7];
        result = (id)swift_bridgeObjectRelease();
        *(_QWORD *)(v16 + 8 * v9) = a1;
        return result;
      }
      goto LABEL_11;
    }
    if (v14 >= v12 && (a3 & 1) == 0)
    {
      sub_1CA266760(&qword_1EF94AE40);
      goto LABEL_7;
    }
    sub_1CA25D210(v12, a3 & 1, &qword_1EF94AE40);
    v18 = sub_1CA251098((uint64_t)a2);
    if ((v13 & 1) == (v19 & 1))
    {
      v9 = v18;
      v15 = *v4;
      if ((v13 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_1CA279E30(v9, (uint64_t)a2, a1, v15);
      return a2;
    }
  }
  sub_1CA24EEC0(0, (unint64_t *)&unk_1EF958770);
  result = (id)sub_1CA85C2E4();
  __break(1u);
  return result;
}

id sub_1CA25FF8C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  __int16 v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94AE18);
  v2 = *v0;
  v3 = sub_1CA85C0A4();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_26;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
        break;
    }
LABEL_25:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(void **)(*(_QWORD *)(v2 + 48) + 8 * v15);
    v18 = 2 * v15;
    v19 = *(_WORD *)(*(_QWORD *)(v2 + 56) + v18);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    *(_WORD *)(*(_QWORD *)(v4 + 56) + v18) = v19;
    result = v17;
  }
  v22 = v20 + 2;
  if (v22 >= v13)
    goto LABEL_26;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1CA260130()
{
  return sub_1CA266760(&qword_1EF94AE28);
}

unint64_t sub_1CA26013C()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  _QWORD v3[2];

  result = qword_1EF94AE10;
  if (!qword_1EF94AE10)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF94AE08);
    v2 = sub_1CA2601A8();
    v3[0] = MEMORY[0x1E0DEA970];
    v3[1] = v2;
    result = MEMORY[0x1CAA4F1A4](MEMORY[0x1E0DEA0B8], v1, v3);
    atomic_store(result, (unint64_t *)&qword_1EF94AE10);
  }
  return result;
}

unint64_t sub_1CA2601A8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1ED873140;
  if (!qword_1ED873140)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED872160);
    v2[0] = MEMORY[0x1E0DEA970];
    v2[1] = MEMORY[0x1E0DEA970];
    result = MEMORY[0x1CAA4F1A4](MEMORY[0x1E0DEA0B8], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1ED873140);
  }
  return result;
}

uint64_t sub_1CA260204(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_release();
  }
  return swift_release();
}

ValueMetadata *type metadata accessor for PhotosChallengeAlgorithmEvaluator()
{
  return &type metadata for PhotosChallengeAlgorithmEvaluator;
}

uint64_t getEnumTagSinglePayload for PhotosChallengeAlgorithmEvaluator.Error(unsigned __int16 *a1, int a2)
{
  unsigned int v2;
  uint64_t v3;

  if (!a2)
    return 0;
  if ((a2 + 0xFFFFFF) >> 24 == 255)
    v2 = 2;
  else
    v2 = 1;
  if ((a2 + 0xFFFFFF) >> 24)
    v3 = v2;
  else
    v3 = 0;
  if (!(_DWORD)v3)
    return v3;
  if ((_DWORD)v3 == 2)
  {
    v3 = *(unsigned __int16 *)((char *)a1 + 3);
    if (!*(unsigned __int16 *)((char *)a1 + 3))
      return v3;
  }
  else
  {
    v3 = *((unsigned __int8 *)a1 + 3);
    if (!*((_BYTE *)a1 + 3))
      return v3;
  }
  return (*a1 | (*((unsigned __int8 *)a1 + 2) << 16) | ((_DWORD)v3 << 24)) - 0xFFFFFF;
}

uint64_t storeEnumTagSinglePayload for PhotosChallengeAlgorithmEvaluator.Error(uint64_t result, int a2, int a3)
{
  int v3;
  int v4;
  unsigned int v5;

  if ((a3 + 0xFFFFFF) >> 24 == 255)
    v3 = 2;
  else
    v3 = 1;
  if ((a3 + 0xFFFFFF) >> 24)
    v4 = v3;
  else
    v4 = 0;
  if (!a3)
    v4 = 0;
  if (a2)
  {
    *(_WORD *)result = a2 - 1;
    *(_BYTE *)(result + 2) = (a2 - 1) >> 16;
    if (v4)
    {
      v5 = ((a2 - 1) >> 24) + 1;
      if (v4 == 2)
        *(_WORD *)(result + 3) = v5;
      else
        *(_BYTE *)(result + 3) = v5;
    }
  }
  else if (v4)
  {
    if (v4 == 2)
      *(_WORD *)(result + 3) = 0;
    else
      *(_BYTE *)(result + 3) = 0;
  }
  return result;
}

uint64_t sub_1CA260344(unsigned __int16 *a1)
{
  if (*((_BYTE *)a1 + 2))
    return (*a1 | (*((unsigned __int8 *)a1 + 2) << 16)) - 0xFFFF;
  else
    return 0;
}

uint64_t sub_1CA260368(uint64_t result, int a2)
{
  if (a2)
  {
    *(_WORD *)result = a2 - 1;
    *(_BYTE *)(result + 2) = ((a2 - 1) >> 16) + 1;
  }
  else
  {
    *(_BYTE *)(result + 2) = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for PhotosChallengeAlgorithmEvaluator.Error()
{
  return &type metadata for PhotosChallengeAlgorithmEvaluator.Error;
}

void *sub_1CA26039C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED872508);
  v2 = *v0;
  v3 = sub_1CA85C0A4();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v25 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v25 >= v13)
      goto LABEL_26;
    v26 = *(_QWORD *)(v6 + 8 * v25);
    ++v9;
    if (!v26)
    {
      v9 = v25 + 1;
      if (v25 + 1 >= v13)
        goto LABEL_26;
      v26 = *(_QWORD *)(v6 + 8 * v9);
      if (!v26)
        break;
    }
LABEL_25:
    v12 = (v26 - 1) & v26;
    v15 = __clz(__rbit64(v26)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + v16);
    v19 = *v17;
    v18 = v17[1];
    v20 = (uint64_t *)(*(_QWORD *)(v2 + 56) + v16);
    v21 = *v20;
    v22 = v20[1];
    v23 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v23 = v19;
    v23[1] = v18;
    v24 = (_QWORD *)(*(_QWORD *)(v4 + 56) + v16);
    *v24 = v21;
    v24[1] = v22;
    swift_bridgeObjectRetain();
    result = (void *)swift_bridgeObjectRetain();
  }
  v27 = v25 + 2;
  if (v27 >= v13)
    goto LABEL_26;
  v26 = *(_QWORD *)(v6 + 8 * v27);
  if (v26)
  {
    v9 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v26 = *(_QWORD *)(v6 + 8 * v9);
    ++v27;
    if (v26)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1CA260554()
{
  return sub_1CA262834((uint64_t (*)(_QWORD))MEMORY[0x1E0CB0870], &qword_1ED872510);
}

id sub_1CA260568()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94B1E0);
  v2 = *v0;
  v3 = sub_1CA85C0A4();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      v9 = v18 + 1;
      if (v18 + 1 >= v13)
        goto LABEL_26;
      v19 = *(_QWORD *)(v6 + 8 * v9);
      if (!v19)
        break;
    }
LABEL_25:
    v12 = (v19 - 1) & v19;
    v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(void **)(*(_QWORD *)(v2 + 56) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = *(_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v16) = v17;
    result = v17;
  }
  v20 = v18 + 2;
  if (v20 >= v13)
    goto LABEL_26;
  v19 = *(_QWORD *)(v6 + 8 * v20);
  if (v19)
  {
    v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v9);
    ++v20;
    if (v19)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1CA260708()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  _QWORD *v26;
  __int128 v27;
  unint64_t v28;
  id v29;
  id v30;
  int64_t v31;
  unint64_t v32;
  int64_t v33;
  __int128 v34;
  __int128 v35;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF94B1E8);
  v2 = *v0;
  v3 = sub_1CA85C0A4();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v31 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v31 >= v13)
      goto LABEL_26;
    v32 = *(_QWORD *)(v6 + 8 * v31);
    ++v9;
    if (!v32)
    {
      v9 = v31 + 1;
      if (v31 + 1 >= v13)
        goto LABEL_26;
      v32 = *(_QWORD *)(v6 + 8 * v9);
      if (!v32)
        break;
    }
LABEL_25:
    v12 = (v32 - 1) & v32;
    v15 = __clz(__rbit64(v32)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v19 = *v17;
    v18 = v17[1];
    v20 = v15 << 6;
    v21 = *(_QWORD *)(v2 + 56) + v20;
    v23 = *(_QWORD *)(v21 + 16);
    v22 = *(_QWORD *)(v21 + 24);
    v24 = *(_BYTE *)(v21 + 32);
    v25 = *(_QWORD *)(v21 + 40);
    v26 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    v34 = *(_OWORD *)v21;
    v27 = *(_OWORD *)v21;
    v35 = *(_OWORD *)(v21 + 48);
    *v26 = v19;
    v26[1] = v18;
    v28 = *(_QWORD *)(v4 + 56) + v20;
    *(_OWORD *)v28 = v27;
    *(_QWORD *)(v28 + 16) = v23;
    *(_QWORD *)(v28 + 24) = v22;
    *(_BYTE *)(v28 + 32) = v24;
    *(_QWORD *)(v28 + 40) = v25;
    *(_OWORD *)(v28 + 48) = v35;
    swift_bridgeObjectRetain();
    v29 = (id)v34;
    v30 = *((id *)&v34 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = (void *)swift_bridgeObjectRetain();
  }
  v33 = v31 + 2;
  if (v33 >= v13)
    goto LABEL_26;
  v32 = *(_QWORD *)(v6 + 8 * v33);
  if (v32)
  {
    v9 = v33;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v33 + 1;
    if (__OFADD__(v33, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v32 = *(_QWORD *)(v6 + 8 * v9);
    ++v33;
    if (v32)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1CA260920()
{
  return sub_1CA265560((uint64_t (*)(_QWORD))MEMORY[0x1E0D76708], &qword_1EF94B1D0);
}

void *sub_1CA260934()
{
  return sub_1CA264AAC(&qword_1EF94B0C0);
}

char *sub_1CA260940()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *result;
  char *v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char *v26;
  int64_t v27;
  unint64_t v28;
  int64_t v29;
  int64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  int64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int64_t v44;

  v41 = sub_1CA85B0FC();
  v37 = *(_QWORD *)(v41 - 8);
  MEMORY[0x1E0C80A78](v41);
  v40 = (char *)&v33 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = sub_1CA85AAFC();
  v36 = *(_QWORD *)(v39 - 8);
  MEMORY[0x1E0C80A78](v39);
  v38 = (char *)&v33 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94B1C0);
  v33 = v0;
  v3 = *v0;
  v4 = sub_1CA85C0A4();
  v5 = *(_QWORD *)(v3 + 16);
  v43 = v4;
  if (!v5)
  {
    result = (char *)swift_release();
    v32 = v43;
    v31 = v33;
LABEL_25:
    *v31 = v32;
    return result;
  }
  v6 = v4;
  result = (char *)(v4 + 64);
  v8 = (char *)(v3 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v6 + 32)) + 63) >> 6;
  v34 = v3 + 64;
  if (v6 != v3 || result >= &v8[8 * v9])
  {
    result = (char *)memmove(result, v8, 8 * v9);
    v6 = v43;
  }
  v10 = 0;
  *(_QWORD *)(v6 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v42 = v3;
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v35 = (unint64_t)(v11 + 63) >> 6;
  v14 = v36;
  v15 = v37;
  v17 = v38;
  v16 = v39;
  v18 = v41;
  v19 = v43;
  while (1)
  {
    if (v13)
    {
      v20 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v44 = v10;
      v21 = v20 | (v10 << 6);
      v22 = v42;
      goto LABEL_9;
    }
    v27 = v10 + 1;
    v22 = v42;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v27 >= v35)
      goto LABEL_23;
    v28 = *(_QWORD *)(v34 + 8 * v27);
    v29 = v10 + 1;
    if (!v28)
    {
      v29 = v27 + 1;
      if (v27 + 1 >= v35)
        goto LABEL_23;
      v28 = *(_QWORD *)(v34 + 8 * v29);
      if (!v28)
        break;
    }
LABEL_22:
    v13 = (v28 - 1) & v28;
    v44 = v29;
    v21 = __clz(__rbit64(v28)) + (v29 << 6);
LABEL_9:
    v23 = *(_QWORD *)(v14 + 72) * v21;
    (*(void (**)(char *, unint64_t, uint64_t))(v14 + 16))(v17, *(_QWORD *)(v22 + 48) + v23, v16);
    v24 = *(_QWORD *)(v15 + 72) * v21;
    v25 = *(_QWORD *)(v22 + 56) + v24;
    v26 = v40;
    (*(void (**)(char *, unint64_t, uint64_t))(v15 + 16))(v40, v25, v18);
    (*(void (**)(unint64_t, char *, uint64_t))(v14 + 32))(*(_QWORD *)(v19 + 48) + v23, v17, v16);
    result = (char *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v15 + 32))(*(_QWORD *)(v19 + 56) + v24, v26, v18);
    v10 = v44;
  }
  v30 = v27 + 2;
  if (v30 >= v35)
  {
LABEL_23:
    result = (char *)swift_release();
    v31 = v33;
    v32 = v43;
    goto LABEL_25;
  }
  v28 = *(_QWORD *)(v34 + 8 * v30);
  if (v28)
  {
    v29 = v30;
    goto LABEL_22;
  }
  while (1)
  {
    v29 = v30 + 1;
    if (__OFADD__(v30, 1))
      break;
    if (v29 >= v35)
      goto LABEL_23;
    v28 = *(_QWORD *)(v34 + 8 * v29);
    ++v30;
    if (v28)
      goto LABEL_22;
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_1CA260C20()
{
  return sub_1CA260E10((uint64_t *)&unk_1EF94B100);
}

void *sub_1CA260C2C()
{
  return sub_1CA264580((uint64_t *)&unk_1ED873278);
}

id sub_1CA260C38()
{
  return sub_1CA26579C(&qword_1EF94AE70);
}

void *sub_1CA260C44()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED874B48);
  v2 = *v0;
  v3 = sub_1CA85C0A4();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v18 = v17[1];
    v19 = 8 * v15;
    v20 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v19);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = *v17;
    v21[1] = v18;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v19) = v20;
    result = (void *)swift_bridgeObjectRetain();
  }
  v24 = v22 + 2;
  if (v24 >= v13)
    goto LABEL_26;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1CA260DF0()
{
  return sub_1CA262834((uint64_t (*)(_QWORD))MEMORY[0x1E0CAE5D0], &qword_1EF94B0E8);
}

void *sub_1CA260E04()
{
  return sub_1CA260E10(&qword_1EF94B0F0);
}

void *sub_1CA260E10(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *result;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;

  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  v3 = *v1;
  v4 = sub_1CA85C0A4();
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v2 = v5;
    return result;
  }
  result = (void *)(v4 + 64);
  v7 = v3 + 64;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8)
    result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v21 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v21 >= v14)
      goto LABEL_26;
    v22 = *(_QWORD *)(v7 + 8 * v21);
    ++v10;
    if (!v22)
    {
      v10 = v21 + 1;
      if (v21 + 1 >= v14)
        goto LABEL_26;
      v22 = *(_QWORD *)(v7 + 8 * v10);
      if (!v22)
        break;
    }
LABEL_25:
    v13 = (v22 - 1) & v22;
    v16 = __clz(__rbit64(v22)) + (v10 << 6);
LABEL_12:
    v17 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 16 * v16);
    v19 = *v17;
    v18 = v17[1];
    LOBYTE(v17) = *(_BYTE *)(*(_QWORD *)(v3 + 56) + v16);
    v20 = (_QWORD *)(*(_QWORD *)(v5 + 48) + 16 * v16);
    *v20 = v19;
    v20[1] = v18;
    *(_BYTE *)(*(_QWORD *)(v5 + 56) + v16) = (_BYTE)v17;
    result = (void *)swift_bridgeObjectRetain();
  }
  v23 = v21 + 2;
  if (v23 >= v14)
    goto LABEL_26;
  v22 = *(_QWORD *)(v7 + 8 * v23);
  if (v22)
  {
    v10 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    v10 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v10 >= v14)
      goto LABEL_26;
    v22 = *(_QWORD *)(v7 + 8 * v10);
    ++v23;
    if (v22)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1CA260FB0()
{
  return sub_1CA264AAC(&qword_1EF94AE78);
}

void *sub_1CA260FBC()
{
  return sub_1CA265E50(&qword_1EF94B1B0);
}

void *sub_1CA260FC8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t *v25;
  _OWORD v26[2];

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94AEB8);
  v2 = *v0;
  v3 = sub_1CA85C0A4();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v1 = v4;
    return result;
  }
  v25 = v1;
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v19 = *v17;
    v18 = v17[1];
    v20 = 32 * v15;
    sub_1CA266A08(*(_QWORD *)(v2 + 56) + 32 * v15, (uint64_t)v26);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = v19;
    v21[1] = v18;
    sub_1CA266A44(v26, (_OWORD *)(*(_QWORD *)(v4 + 56) + v20));
    result = (void *)swift_bridgeObjectRetain();
  }
  v24 = v22 + 2;
  if (v24 >= v13)
  {
LABEL_26:
    result = (void *)swift_release();
    v1 = v25;
    goto LABEL_28;
  }
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1CA2611AC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *result;
  uint64_t v9;
  unint64_t v10;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  int v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t *v25;
  uint64_t v26;

  v1 = v0;
  v2 = type metadata accessor for Song();
  v26 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED872500);
  v5 = *v0;
  v6 = sub_1CA85C0A4();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v1 = v7;
    return result;
  }
  v25 = v1;
  result = (void *)(v6 + 64);
  v9 = v5 + 64;
  v10 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v10)
    result = memmove(result, (const void *)(v5 + 64), 8 * v10);
  v12 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v13 = 1 << *(_BYTE *)(v5 + 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v15 = v14 & *(_QWORD *)(v5 + 64);
  v16 = (unint64_t)(v13 + 63) >> 6;
  while (1)
  {
    if (v15)
    {
      v17 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v18 = v17 | (v12 << 6);
      goto LABEL_12;
    }
    v22 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v16)
      goto LABEL_26;
    v23 = *(_QWORD *)(v9 + 8 * v22);
    ++v12;
    if (!v23)
    {
      v12 = v22 + 1;
      if (v22 + 1 >= v16)
        goto LABEL_26;
      v23 = *(_QWORD *)(v9 + 8 * v12);
      if (!v23)
        break;
    }
LABEL_25:
    v15 = (v23 - 1) & v23;
    v18 = __clz(__rbit64(v23)) + (v12 << 6);
LABEL_12:
    v19 = *(_QWORD *)(v26 + 72) * v18;
    sub_1CA24EE38(*(_QWORD *)(v5 + 48) + v19, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for Song);
    v20 = 4 * v18;
    v21 = *(_DWORD *)(*(_QWORD *)(v5 + 56) + v20);
    result = (void *)sub_1CA24EE7C((uint64_t)v4, *(_QWORD *)(v7 + 48) + v19, (uint64_t (*)(_QWORD))type metadata accessor for Song);
    *(_DWORD *)(*(_QWORD *)(v7 + 56) + v20) = v21;
  }
  v24 = v22 + 2;
  if (v24 >= v16)
  {
LABEL_26:
    result = (void *)swift_release();
    v1 = v25;
    goto LABEL_28;
  }
  v23 = *(_QWORD *)(v9 + 8 * v24);
  if (v23)
  {
    v12 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v12 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v12 >= v16)
      goto LABEL_26;
    v23 = *(_QWORD *)(v9 + 8 * v12);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1CA2613DC()
{
  return sub_1CA264AAC((uint64_t *)&unk_1EF94AE98);
}

void *sub_1CA2613E8()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *result;
  uint64_t v5;
  unint64_t v6;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  _QWORD *v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  int64_t v31;
  unint64_t v32;
  int64_t v33;
  uint64_t *v34;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF94B1A0);
  v34 = v0;
  v1 = *v0;
  v2 = sub_1CA85C0A4();
  v3 = v2;
  if (!*(_QWORD *)(v1 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v34 = v3;
    return result;
  }
  result = (void *)(v2 + 64);
  v5 = v1 + 64;
  v6 = (unint64_t)((1 << *(_BYTE *)(v3 + 32)) + 63) >> 6;
  if (v3 != v1 || (unint64_t)result >= v1 + 64 + 8 * v6)
    result = memmove(result, (const void *)(v1 + 64), 8 * v6);
  v8 = 0;
  *(_QWORD *)(v3 + 16) = *(_QWORD *)(v1 + 16);
  v9 = 1 << *(_BYTE *)(v1 + 32);
  v10 = -1;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  v11 = v10 & *(_QWORD *)(v1 + 64);
  v12 = (unint64_t)(v9 + 63) >> 6;
  while (1)
  {
    if (v11)
    {
      v13 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v14 = v13 | (v8 << 6);
      goto LABEL_12;
    }
    v31 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v31 >= v12)
      goto LABEL_26;
    v32 = *(_QWORD *)(v5 + 8 * v31);
    ++v8;
    if (!v32)
    {
      v8 = v31 + 1;
      if (v31 + 1 >= v12)
        goto LABEL_26;
      v32 = *(_QWORD *)(v5 + 8 * v8);
      if (!v32)
        break;
    }
LABEL_25:
    v11 = (v32 - 1) & v32;
    v14 = __clz(__rbit64(v32)) + (v8 << 6);
LABEL_12:
    v15 = 16 * v14;
    v16 = (uint64_t *)(*(_QWORD *)(v1 + 48) + 16 * v14);
    v18 = *v16;
    v17 = v16[1];
    v19 = 80 * v14;
    v20 = *(_QWORD *)(v1 + 56) + v19;
    v21 = *(_QWORD *)v20;
    v22 = *(_QWORD *)(v20 + 8);
    v23 = *(_QWORD *)(v20 + 16);
    v24 = *(_QWORD *)(v20 + 56);
    v25 = *(_QWORD *)(v20 + 64);
    v26 = *(_BYTE *)(v20 + 72);
    v27 = (_QWORD *)(*(_QWORD *)(v3 + 48) + v15);
    v28 = *(_OWORD *)(v20 + 24);
    v29 = *(_OWORD *)(v20 + 40);
    *v27 = v18;
    v27[1] = v17;
    v30 = *(_QWORD *)(v3 + 56) + v19;
    *(_QWORD *)v30 = v21;
    *(_QWORD *)(v30 + 8) = v22;
    *(_QWORD *)(v30 + 16) = v23;
    *(_OWORD *)(v30 + 24) = v28;
    *(_OWORD *)(v30 + 40) = v29;
    *(_QWORD *)(v30 + 56) = v24;
    *(_QWORD *)(v30 + 64) = v25;
    *(_BYTE *)(v30 + 72) = v26;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = (void *)swift_bridgeObjectRetain();
  }
  v33 = v31 + 2;
  if (v33 >= v12)
    goto LABEL_26;
  v32 = *(_QWORD *)(v5 + 8 * v33);
  if (v32)
  {
    v8 = v33;
    goto LABEL_25;
  }
  while (1)
  {
    v8 = v33 + 1;
    if (__OFADD__(v33, 1))
      break;
    if (v8 >= v12)
      goto LABEL_26;
    v32 = *(_QWORD *)(v5 + 8 * v8);
    ++v33;
    if (v32)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1CA261600()
{
  return sub_1CA262E1C((uint64_t (*)(_QWORD))type metadata accessor for Song, (uint64_t *)&unk_1ED872518);
}

void *sub_1CA261614()
{
  return sub_1CA262834((uint64_t (*)(_QWORD))MEMORY[0x1E0D76708], &qword_1EF94B198);
}

void *sub_1CA261628()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94B158);
  v2 = *v0;
  v3 = sub_1CA85C0A4();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_26;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
        break;
    }
LABEL_25:
    v23 = __clz(__rbit64(v21));
    v12 = (v21 - 1) & v21;
    v15 = v23 + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v15);
    v18 = 16 * v15;
    v19 = *(_OWORD *)(*(_QWORD *)(v2 + 56) + v18);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    *(_OWORD *)(*(_QWORD *)(v4 + 56) + v18) = v19;
  }
  v22 = v20 + 2;
  if (v22 >= v13)
    goto LABEL_26;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1CA2617B8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *result;
  unint64_t v10;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t *v25;
  uint64_t v26;

  v1 = v0;
  v2 = sub_1CA85AEEC();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94B130);
  v6 = *v0;
  v7 = sub_1CA85C0A4();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v1 = v8;
    return result;
  }
  v25 = v1;
  result = (void *)(v7 + 64);
  v10 = (unint64_t)((1 << *(_BYTE *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 64 + 8 * v10)
    result = memmove(result, (const void *)(v6 + 64), 8 * v10);
  v26 = v6 + 64;
  v12 = 0;
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v6 + 16);
  v13 = 1 << *(_BYTE *)(v6 + 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v15 = v14 & *(_QWORD *)(v6 + 64);
  v16 = (unint64_t)(v13 + 63) >> 6;
  while (1)
  {
    if (v15)
    {
      v17 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v18 = v17 | (v12 << 6);
      goto LABEL_12;
    }
    v22 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v16)
      goto LABEL_26;
    v23 = *(_QWORD *)(v26 + 8 * v22);
    ++v12;
    if (!v23)
    {
      v12 = v22 + 1;
      if (v22 + 1 >= v16)
        goto LABEL_26;
      v23 = *(_QWORD *)(v26 + 8 * v12);
      if (!v23)
        break;
    }
LABEL_25:
    v15 = (v23 - 1) & v23;
    v18 = __clz(__rbit64(v23)) + (v12 << 6);
LABEL_12:
    v19 = *(_QWORD *)(v3 + 72) * v18;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v5, *(_QWORD *)(v6 + 48) + v19, v2);
    v20 = 8 * v18;
    v21 = *(_QWORD *)(*(_QWORD *)(v6 + 56) + v20);
    result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(v8 + 48) + v19, v5, v2);
    *(_QWORD *)(*(_QWORD *)(v8 + 56) + v20) = v21;
  }
  v24 = v22 + 2;
  if (v24 >= v16)
  {
LABEL_26:
    result = (void *)swift_release();
    v1 = v25;
    goto LABEL_28;
  }
  v23 = *(_QWORD *)(v26 + 8 * v24);
  if (v23)
  {
    v12 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v12 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v12 >= v16)
      goto LABEL_26;
    v23 = *(_QWORD *)(v26 + 8 * v12);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1CA2619EC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  _QWORD *v25;
  uint64_t v26;
  int64_t v27;
  unint64_t v28;
  int64_t v29;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED873250);
  v2 = *v0;
  v3 = sub_1CA85C0A4();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v27 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v27 >= v13)
      goto LABEL_26;
    v28 = *(_QWORD *)(v6 + 8 * v27);
    ++v9;
    if (!v28)
    {
      v9 = v27 + 1;
      if (v27 + 1 >= v13)
        goto LABEL_26;
      v28 = *(_QWORD *)(v6 + 8 * v9);
      if (!v28)
        break;
    }
LABEL_25:
    v12 = (v28 - 1) & v28;
    v15 = __clz(__rbit64(v28)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v19 = *v17;
    v18 = v17[1];
    v20 = 24 * v15;
    v21 = *(_QWORD *)(v2 + 56) + v20;
    v22 = *(_QWORD *)v21;
    v23 = *(_QWORD *)(v21 + 8);
    v24 = *(_DWORD *)(v21 + 16);
    v25 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v25 = v19;
    v25[1] = v18;
    v26 = *(_QWORD *)(v4 + 56) + v20;
    *(_QWORD *)v26 = v22;
    *(_QWORD *)(v26 + 8) = v23;
    *(_DWORD *)(v26 + 16) = v24;
    swift_bridgeObjectRetain();
    result = (void *)swift_bridgeObjectRetain();
  }
  v29 = v27 + 2;
  if (v29 >= v13)
    goto LABEL_26;
  v28 = *(_QWORD *)(v6 + 8 * v29);
  if (v28)
  {
    v9 = v29;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v29 + 1;
    if (__OFADD__(v29, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v28 = *(_QWORD *)(v6 + 8 * v9);
    ++v29;
    if (v28)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1CA261BB4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED872540);
  v2 = *v0;
  v3 = sub_1CA85C0A4();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v18 = v17[1];
    v19 = 4 * v15;
    v20 = *(_DWORD *)(*(_QWORD *)(v2 + 56) + v19);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = *v17;
    v21[1] = v18;
    *(_DWORD *)(*(_QWORD *)(v4 + 56) + v19) = v20;
    result = (void *)swift_bridgeObjectRetain();
  }
  v24 = v22 + 2;
  if (v24 >= v13)
    goto LABEL_26;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1CA261D60()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED871090);
  v2 = *v0;
  v3 = sub_1CA85C0A4();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v18 = v17[1];
    v19 = 8 * v15;
    v20 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v19);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = *v17;
    v21[1] = v18;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v19) = v20;
    result = (void *)swift_bridgeObjectRetain();
  }
  v24 = v22 + 2;
  if (v24 >= v13)
    goto LABEL_26;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1CA261F0C()
{
  return sub_1CA262834((uint64_t (*)(_QWORD))MEMORY[0x1E0D76EB0], &qword_1EF94B150);
}

void *sub_1CA261F20()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *result;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  int64_t v26;

  v1 = sub_1CA85ADA8();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94B148);
  v24 = v0;
  v5 = *v0;
  v6 = sub_1CA85C0A4();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v24 = v7;
    return result;
  }
  result = (void *)(v6 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9)
    result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  v11 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v12 = 1 << *(_BYTE *)(v5 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v5 + 64);
  v25 = v5 + 64;
  v26 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v16 = v15 | (v11 << 6);
      goto LABEL_12;
    }
    v20 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v26)
      goto LABEL_26;
    v21 = *(_QWORD *)(v25 + 8 * v20);
    ++v11;
    if (!v21)
    {
      v11 = v20 + 1;
      if (v20 + 1 >= v26)
        goto LABEL_26;
      v21 = *(_QWORD *)(v25 + 8 * v11);
      if (!v21)
        break;
    }
LABEL_25:
    v14 = (v21 - 1) & v21;
    v16 = __clz(__rbit64(v21)) + (v11 << 6);
LABEL_12:
    v17 = 8 * v16;
    v18 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + 8 * v16);
    v19 = *(_QWORD *)(v2 + 72) * v16;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(_QWORD *)(v5 + 56) + v19, v1);
    *(_QWORD *)(*(_QWORD *)(v7 + 48) + v17) = v18;
    result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(_QWORD *)(v7 + 56) + v19, v4, v1);
  }
  v22 = v20 + 2;
  if (v22 >= v26)
    goto LABEL_26;
  v21 = *(_QWORD *)(v25 + 8 * v22);
  if (v21)
  {
    v11 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v11 >= v26)
      goto LABEL_26;
    v21 = *(_QWORD *)(v25 + 8 * v11);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1CA262140()
{
  return sub_1CA26579C((uint64_t *)&unk_1EF94B120);
}

void *sub_1CA26214C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  _QWORD *v24;
  __int128 v25;
  uint64_t v26;
  int64_t v27;
  unint64_t v28;
  int64_t v29;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94B118);
  v2 = *v0;
  v3 = sub_1CA85C0A4();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v27 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v27 >= v13)
      goto LABEL_26;
    v28 = *(_QWORD *)(v6 + 8 * v27);
    ++v9;
    if (!v28)
    {
      v9 = v27 + 1;
      if (v27 + 1 >= v13)
        goto LABEL_26;
      v28 = *(_QWORD *)(v6 + 8 * v9);
      if (!v28)
        break;
    }
LABEL_25:
    v12 = (v28 - 1) & v28;
    v15 = __clz(__rbit64(v28)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v19 = *v17;
    v18 = v17[1];
    v20 = 32 * v15;
    v21 = *(_QWORD *)(v2 + 56) + v20;
    v22 = *(_BYTE *)v21;
    v23 = *(_QWORD *)(v21 + 8);
    v24 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    v25 = *(_OWORD *)(v21 + 16);
    *v24 = v19;
    v24[1] = v18;
    v26 = *(_QWORD *)(v4 + 56) + v20;
    *(_BYTE *)v26 = v22;
    *(_QWORD *)(v26 + 8) = v23;
    *(_OWORD *)(v26 + 16) = v25;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = (void *)swift_bridgeObjectRetain();
  }
  v29 = v27 + 2;
  if (v29 >= v13)
    goto LABEL_26;
  v28 = *(_QWORD *)(v6 + 8 * v29);
  if (v28)
  {
    v9 = v29;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v29 + 1;
    if (__OFADD__(v29, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v28 = *(_QWORD *)(v6 + 8 * v9);
    ++v29;
    if (v28)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1CA262334()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94B110);
  v2 = *v0;
  v3 = sub_1CA85C0A4();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      v9 = v17 + 1;
      if (v17 + 1 >= v13)
        goto LABEL_26;
      v18 = *(_QWORD *)(v6 + 8 * v9);
      if (!v18)
        break;
    }
LABEL_25:
    v12 = (v18 - 1) & v18;
    v15 = __clz(__rbit64(v18)) + (v9 << 6);
LABEL_12:
    v16 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + 8 * v15);
    *(_BYTE *)(*(_QWORD *)(v4 + 48) + v15) = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v15);
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + 8 * v15) = v16;
    result = (void *)swift_bridgeObjectRetain();
  }
  v19 = v17 + 2;
  if (v19 >= v13)
    goto LABEL_26;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
    v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v6 + 8 * v9);
    ++v19;
    if (v18)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1CA2624D4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED872558);
  v2 = *v0;
  v3 = sub_1CA85C0A4();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v23 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v13)
      goto LABEL_26;
    v24 = *(_QWORD *)(v6 + 8 * v23);
    ++v9;
    if (!v24)
    {
      v9 = v23 + 1;
      if (v23 + 1 >= v13)
        goto LABEL_26;
      v24 = *(_QWORD *)(v6 + 8 * v9);
      if (!v24)
        break;
    }
LABEL_25:
    v12 = (v24 - 1) & v24;
    v15 = __clz(__rbit64(v24)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v15);
    v18 = 16 * v15;
    v19 = (uint64_t *)(*(_QWORD *)(v2 + 56) + v18);
    v21 = *v19;
    v20 = v19[1];
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    v22 = (_QWORD *)(*(_QWORD *)(v4 + 56) + v18);
    *v22 = v21;
    v22[1] = v20;
    result = (void *)swift_bridgeObjectRetain();
  }
  v25 = v23 + 2;
  if (v25 >= v13)
    goto LABEL_26;
  v24 = *(_QWORD *)(v6 + 8 * v25);
  if (v24)
  {
    v9 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v24 = *(_QWORD *)(v6 + 8 * v9);
    ++v25;
    if (v24)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1CA262680()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94B0F8);
  v2 = *v0;
  v3 = sub_1CA85C0A4();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      v9 = v18 + 1;
      if (v18 + 1 >= v13)
        goto LABEL_26;
      v19 = *(_QWORD *)(v6 + 8 * v9);
      if (!v19)
        break;
    }
LABEL_25:
    v12 = (v19 - 1) & v19;
    v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = *(_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v16) = v17;
    result = (void *)swift_retain();
  }
  v20 = v18 + 2;
  if (v20 >= v13)
    goto LABEL_26;
  v19 = *(_QWORD *)(v6 + 8 * v20);
  if (v19)
  {
    v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v9);
    ++v20;
    if (v19)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1CA262820()
{
  return sub_1CA262834((uint64_t (*)(_QWORD))MEMORY[0x1E0D767B8], &qword_1EF94B0C8);
}

void *sub_1CA262834(uint64_t (*a1)(_QWORD), uint64_t *a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *result;
  unint64_t v12;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  int64_t v28;
  unint64_t v29;
  int64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  int64_t v36;
  uint64_t v37;
  uint64_t v38;

  v37 = a1(0);
  v4 = *(_QWORD *)(v37 - 8);
  MEMORY[0x1E0C80A78](v37);
  v6 = (char *)&v33 - v5;
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v34 = v2;
  v7 = *v2;
  v8 = sub_1CA85C0A4();
  v9 = *(_QWORD *)(v7 + 16);
  v38 = v8;
  if (!v9)
  {
    result = (void *)swift_release();
    v32 = v38;
    v31 = v34;
LABEL_28:
    *v31 = v32;
    return result;
  }
  v10 = v8;
  result = (void *)(v8 + 64);
  v12 = (unint64_t)((1 << *(_BYTE *)(v10 + 32)) + 63) >> 6;
  if (v10 != v7 || (unint64_t)result >= v7 + 64 + 8 * v12)
  {
    result = memmove(result, (const void *)(v7 + 64), 8 * v12);
    v10 = v38;
  }
  v35 = v7 + 64;
  v14 = 0;
  *(_QWORD *)(v10 + 16) = *(_QWORD *)(v7 + 16);
  v15 = 1 << *(_BYTE *)(v7 + 32);
  v16 = -1;
  if (v15 < 64)
    v16 = ~(-1 << v15);
  v17 = v16 & *(_QWORD *)(v7 + 64);
  v36 = (unint64_t)(v15 + 63) >> 6;
  v18 = v37;
  while (1)
  {
    if (v17)
    {
      v19 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      v20 = v19 | (v14 << 6);
      goto LABEL_12;
    }
    v28 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v28 >= v36)
      goto LABEL_26;
    v29 = *(_QWORD *)(v35 + 8 * v28);
    ++v14;
    if (!v29)
    {
      v14 = v28 + 1;
      if (v28 + 1 >= v36)
        goto LABEL_26;
      v29 = *(_QWORD *)(v35 + 8 * v14);
      if (!v29)
        break;
    }
LABEL_25:
    v17 = (v29 - 1) & v29;
    v20 = __clz(__rbit64(v29)) + (v14 << 6);
LABEL_12:
    v21 = 16 * v20;
    v22 = (uint64_t *)(*(_QWORD *)(v7 + 48) + 16 * v20);
    v24 = *v22;
    v23 = v22[1];
    v25 = *(_QWORD *)(v4 + 72) * v20;
    (*(void (**)(char *, unint64_t, uint64_t))(v4 + 16))(v6, *(_QWORD *)(v7 + 56) + v25, v18);
    v26 = v38;
    v27 = (_QWORD *)(*(_QWORD *)(v38 + 48) + v21);
    *v27 = v24;
    v27[1] = v23;
    (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(*(_QWORD *)(v26 + 56) + v25, v6, v18);
    result = (void *)swift_bridgeObjectRetain();
  }
  v30 = v28 + 2;
  if (v30 >= v36)
  {
LABEL_26:
    result = (void *)swift_release();
    v31 = v34;
    v32 = v38;
    goto LABEL_28;
  }
  v29 = *(_QWORD *)(v35 + 8 * v30);
  if (v29)
  {
    v14 = v30;
    goto LABEL_25;
  }
  while (1)
  {
    v14 = v30 + 1;
    if (__OFADD__(v30, 1))
      break;
    if (v14 >= v36)
      goto LABEL_26;
    v29 = *(_QWORD *)(v35 + 8 * v14);
    ++v30;
    if (v29)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1CA262A90()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94AEE0);
  v2 = *v0;
  v3 = sub_1CA85C0A4();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      v9 = v18 + 1;
      if (v18 + 1 >= v13)
        goto LABEL_26;
      v19 = *(_QWORD *)(v6 + 8 * v9);
      if (!v19)
        break;
    }
LABEL_25:
    v12 = (v19 - 1) & v19;
    v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = *(_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v16) = v17;
    result = (void *)swift_bridgeObjectRetain();
  }
  v20 = v18 + 2;
  if (v20 >= v13)
    goto LABEL_26;
  v19 = *(_QWORD *)(v6 + 8 * v20);
  if (v19)
  {
    v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v9);
    ++v20;
    if (v19)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1CA262C30()
{
  return sub_1CA264AAC(&qword_1EF94AED8);
}

id sub_1CA262C3C()
{
  return sub_1CA26579C(&qword_1EF94AE88);
}

void *sub_1CA262C48()
{
  return sub_1CA264AAC(&qword_1EF94AE90);
}

void *sub_1CA262C54()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94AF90);
  v2 = *v0;
  v3 = sub_1CA85C0A4();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v18 = v17[1];
    v19 = 8 * v15;
    v20 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v19);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = *v17;
    v21[1] = v18;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    result = (void *)swift_unknownObjectRetain();
  }
  v24 = v22 + 2;
  if (v24 >= v13)
    goto LABEL_26;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1CA262E08()
{
  return sub_1CA262E1C((uint64_t (*)(_QWORD))type metadata accessor for CollectionCuration, &qword_1EF94B0D8);
}

void *sub_1CA262E1C(uint64_t (*a1)(_QWORD), uint64_t *a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *result;
  unint64_t v12;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  _QWORD *v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;
  uint64_t *v29;
  uint64_t v30;
  int64_t v31;
  uint64_t v32;

  v5 = a1(0);
  v32 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v29 - v6;
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v29 = v2;
  v8 = *v2;
  v9 = sub_1CA85C0A4();
  v10 = v9;
  if (!*(_QWORD *)(v8 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v29 = v10;
    return result;
  }
  result = (void *)(v9 + 64);
  v12 = (unint64_t)((1 << *(_BYTE *)(v10 + 32)) + 63) >> 6;
  if (v10 != v8 || (unint64_t)result >= v8 + 64 + 8 * v12)
    result = memmove(result, (const void *)(v8 + 64), 8 * v12);
  v30 = v8 + 64;
  v14 = 0;
  *(_QWORD *)(v10 + 16) = *(_QWORD *)(v8 + 16);
  v15 = 1 << *(_BYTE *)(v8 + 32);
  v16 = -1;
  if (v15 < 64)
    v16 = ~(-1 << v15);
  v17 = v16 & *(_QWORD *)(v8 + 64);
  v31 = (unint64_t)(v15 + 63) >> 6;
  while (1)
  {
    if (v17)
    {
      v18 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      v19 = v18 | (v14 << 6);
      goto LABEL_12;
    }
    v26 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v26 >= v31)
      goto LABEL_26;
    v27 = *(_QWORD *)(v30 + 8 * v26);
    ++v14;
    if (!v27)
    {
      v14 = v26 + 1;
      if (v26 + 1 >= v31)
        goto LABEL_26;
      v27 = *(_QWORD *)(v30 + 8 * v14);
      if (!v27)
        break;
    }
LABEL_25:
    v17 = (v27 - 1) & v27;
    v19 = __clz(__rbit64(v27)) + (v14 << 6);
LABEL_12:
    v20 = 16 * v19;
    v21 = (uint64_t *)(*(_QWORD *)(v8 + 48) + 16 * v19);
    v23 = *v21;
    v22 = v21[1];
    v24 = *(_QWORD *)(v32 + 72) * v19;
    sub_1CA24EE38(*(_QWORD *)(v8 + 56) + v24, (uint64_t)v7, a1);
    v25 = (_QWORD *)(*(_QWORD *)(v10 + 48) + v20);
    *v25 = v23;
    v25[1] = v22;
    sub_1CA24EE7C((uint64_t)v7, *(_QWORD *)(v10 + 56) + v24, a1);
    result = (void *)swift_bridgeObjectRetain();
  }
  v28 = v26 + 2;
  if (v28 >= v31)
    goto LABEL_26;
  v27 = *(_QWORD *)(v30 + 8 * v28);
  if (v27)
  {
    v14 = v28;
    goto LABEL_25;
  }
  while (1)
  {
    v14 = v28 + 1;
    if (__OFADD__(v28, 1))
      break;
    if (v14 >= v31)
      goto LABEL_26;
    v27 = *(_QWORD *)(v30 + 8 * v14);
    ++v28;
    if (v27)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1CA26304C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94AEE8);
  v2 = *v0;
  v3 = sub_1CA85C0A4();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v23 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v13)
      goto LABEL_26;
    v24 = *(_QWORD *)(v6 + 8 * v23);
    ++v9;
    if (!v24)
    {
      v9 = v23 + 1;
      if (v23 + 1 >= v13)
        goto LABEL_26;
      v24 = *(_QWORD *)(v6 + 8 * v9);
      if (!v24)
        break;
    }
LABEL_25:
    v12 = (v24 - 1) & v24;
    v15 = __clz(__rbit64(v24)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v15);
    v18 = 16 * v15;
    v19 = (uint64_t *)(*(_QWORD *)(v2 + 56) + v18);
    v21 = *v19;
    v20 = v19[1];
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    v22 = (_QWORD *)(*(_QWORD *)(v4 + 56) + v18);
    *v22 = v21;
    v22[1] = v20;
    result = (void *)swift_bridgeObjectRetain();
  }
  v25 = v23 + 2;
  if (v25 >= v13)
    goto LABEL_26;
  v24 = *(_QWORD *)(v6 + 8 * v25);
  if (v24)
  {
    v9 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v24 = *(_QWORD *)(v6 + 8 * v9);
    ++v25;
    if (v24)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1CA2631F8()
{
  return sub_1CA265560((uint64_t (*)(_QWORD))MEMORY[0x1E0CB0870], &qword_1ED874B08);
}

void *sub_1CA26320C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *result;
  unint64_t v10;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t *v25;
  uint64_t v26;

  v1 = v0;
  v2 = sub_1CA85AE74();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94B178);
  v6 = *v0;
  v7 = sub_1CA85C0A4();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v1 = v8;
    return result;
  }
  v25 = v1;
  result = (void *)(v7 + 64);
  v10 = (unint64_t)((1 << *(_BYTE *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 64 + 8 * v10)
    result = memmove(result, (const void *)(v6 + 64), 8 * v10);
  v26 = v6 + 64;
  v12 = 0;
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v6 + 16);
  v13 = 1 << *(_BYTE *)(v6 + 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v15 = v14 & *(_QWORD *)(v6 + 64);
  v16 = (unint64_t)(v13 + 63) >> 6;
  while (1)
  {
    if (v15)
    {
      v17 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v18 = v17 | (v12 << 6);
      goto LABEL_12;
    }
    v22 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v16)
      goto LABEL_26;
    v23 = *(_QWORD *)(v26 + 8 * v22);
    ++v12;
    if (!v23)
    {
      v12 = v22 + 1;
      if (v22 + 1 >= v16)
        goto LABEL_26;
      v23 = *(_QWORD *)(v26 + 8 * v12);
      if (!v23)
        break;
    }
LABEL_25:
    v15 = (v23 - 1) & v23;
    v18 = __clz(__rbit64(v23)) + (v12 << 6);
LABEL_12:
    v19 = *(_QWORD *)(v3 + 72) * v18;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v5, *(_QWORD *)(v6 + 48) + v19, v2);
    v20 = 8 * v18;
    v21 = *(_QWORD *)(*(_QWORD *)(v6 + 56) + v20);
    result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(v8 + 48) + v19, v5, v2);
    *(_QWORD *)(*(_QWORD *)(v8 + 56) + v20) = v21;
  }
  v24 = v22 + 2;
  if (v24 >= v16)
  {
LABEL_26:
    result = (void *)swift_release();
    v1 = v25;
    goto LABEL_28;
  }
  v23 = *(_QWORD *)(v26 + 8 * v24);
  if (v23)
  {
    v12 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v12 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v12 >= v16)
      goto LABEL_26;
    v23 = *(_QWORD *)(v26 + 8 * v12);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1CA263440()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *result;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  int64_t v26;

  v1 = sub_1CA85ACD0();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94B160);
  v24 = v0;
  v5 = *v0;
  v6 = sub_1CA85C0A4();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v24 = v7;
    return result;
  }
  result = (void *)(v6 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9)
    result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  v11 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v12 = 1 << *(_BYTE *)(v5 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v5 + 64);
  v25 = v5 + 64;
  v26 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v16 = v15 | (v11 << 6);
      goto LABEL_12;
    }
    v20 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v26)
      goto LABEL_26;
    v21 = *(_QWORD *)(v25 + 8 * v20);
    ++v11;
    if (!v21)
    {
      v11 = v20 + 1;
      if (v20 + 1 >= v26)
        goto LABEL_26;
      v21 = *(_QWORD *)(v25 + 8 * v11);
      if (!v21)
        break;
    }
LABEL_25:
    v14 = (v21 - 1) & v21;
    v16 = __clz(__rbit64(v21)) + (v11 << 6);
LABEL_12:
    v17 = *(_QWORD *)(v2 + 72) * v16;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(_QWORD *)(v5 + 48) + v17, v1);
    v18 = 8 * v16;
    v19 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + v18);
    result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(_QWORD *)(v7 + 48) + v17, v4, v1);
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + v18) = v19;
  }
  v22 = v20 + 2;
  if (v22 >= v26)
    goto LABEL_26;
  v21 = *(_QWORD *)(v25 + 8 * v22);
  if (v21)
  {
    v11 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v11 >= v26)
      goto LABEL_26;
    v21 = *(_QWORD *)(v25 + 8 * v11);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1CA263664()
{
  return sub_1CA264AAC(&qword_1EF94B0B8);
}

id sub_1CA263670()
{
  return sub_1CA26579C(&qword_1EF94B0A8);
}

void *sub_1CA26367C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  __int16 v17;
  uint64_t v18;
  uint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94B0B0);
  v2 = *v0;
  v3 = sub_1CA85C0A4();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_26;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
        break;
    }
LABEL_25:
    v23 = __clz(__rbit64(v21));
    v12 = (v21 - 1) & v21;
    v15 = v23 + (v9 << 6);
LABEL_12:
    v16 = 2 * v15;
    v17 = *(_WORD *)(*(_QWORD *)(v2 + 48) + 2 * v15);
    v18 = 8 * v15;
    v19 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v18);
    *(_WORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v18) = v19;
  }
  v22 = v20 + 2;
  if (v22 >= v13)
    goto LABEL_26;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1CA26380C()
{
  return sub_1CA264AAC(&qword_1EF94AFA8);
}

void *sub_1CA263818()
{
  return sub_1CA264AAC(&qword_1EF94AF98);
}

id sub_1CA263824()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  void *v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94B0A0);
  v2 = *v0;
  v3 = sub_1CA85C0A4();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      v9 = v17 + 1;
      if (v17 + 1 >= v13)
        goto LABEL_26;
      v18 = *(_QWORD *)(v6 + 8 * v9);
      if (!v18)
        break;
    }
LABEL_25:
    v12 = (v18 - 1) & v18;
    v15 = __clz(__rbit64(v18)) + (v9 << 6);
LABEL_12:
    v16 = *(void **)(*(_QWORD *)(v2 + 56) + 8 * v15);
    *(_OWORD *)(*(_QWORD *)(v4 + 48) + 16 * v15) = *(_OWORD *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + 8 * v15) = v16;
    swift_bridgeObjectRetain();
    result = v16;
  }
  v19 = v17 + 2;
  if (v19 >= v13)
    goto LABEL_26;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
    v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v6 + 8 * v9);
    ++v19;
    if (v18)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1CA2639D0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *result;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t i;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  int64_t v32;
  char *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v1 = type metadata accessor for PersonalTraitInfo(0);
  v36 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v35 = (char *)&v29 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = sub_1CA85AC4C();
  v3 = *(_QWORD *)(v34 - 8);
  MEMORY[0x1E0C80A78](v34);
  v33 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94B080);
  v30 = v0;
  v5 = *v0;
  v6 = sub_1CA85C0A4();
  v7 = *(_QWORD *)(v5 + 16);
  v38 = v6;
  if (!v7)
  {
    result = (void *)swift_release();
    v28 = v38;
    v27 = v30;
LABEL_25:
    *v27 = v28;
    return result;
  }
  v8 = v6;
  result = (void *)(v6 + 64);
  v10 = (unint64_t)((1 << *(_BYTE *)(v8 + 32)) + 63) >> 6;
  if (v8 != v5 || (unint64_t)result >= v5 + 64 + 8 * v10)
  {
    result = memmove(result, (const void *)(v5 + 64), 8 * v10);
    v8 = v38;
  }
  v11 = 0;
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v5 + 16);
  v12 = 1 << *(_BYTE *)(v5 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v37 = v5;
  v14 = v13 & *(_QWORD *)(v5 + 64);
  v31 = v5 + 64;
  v32 = (unint64_t)(v12 + 63) >> 6;
  v16 = v33;
  v15 = v34;
  v17 = (uint64_t)v35;
  for (i = v38;
        ;
        result = (void *)sub_1CA24EE7C(v17, *(_QWORD *)(i + 56) + v23, type metadata accessor for PersonalTraitInfo))
  {
    if (v14)
    {
      v19 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v20 = v19 | (v11 << 6);
      v21 = v37;
      goto LABEL_9;
    }
    v24 = v11 + 1;
    v21 = v37;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v24 >= v32)
      goto LABEL_23;
    v25 = *(_QWORD *)(v31 + 8 * v24);
    ++v11;
    if (!v25)
    {
      v11 = v24 + 1;
      if (v24 + 1 >= v32)
        goto LABEL_23;
      v25 = *(_QWORD *)(v31 + 8 * v11);
      if (!v25)
        break;
    }
LABEL_22:
    v14 = (v25 - 1) & v25;
    v20 = __clz(__rbit64(v25)) + (v11 << 6);
LABEL_9:
    v22 = *(_QWORD *)(v3 + 72) * v20;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v16, *(_QWORD *)(v21 + 48) + v22, v15);
    v23 = *(_QWORD *)(v36 + 72) * v20;
    sub_1CA24EE38(*(_QWORD *)(v21 + 56) + v23, v17, type metadata accessor for PersonalTraitInfo);
    (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(i + 48) + v22, v16, v15);
  }
  v26 = v24 + 2;
  if (v26 >= v32)
  {
LABEL_23:
    result = (void *)swift_release();
    v27 = v30;
    v28 = v38;
    goto LABEL_25;
  }
  v25 = *(_QWORD *)(v31 + 8 * v26);
  if (v25)
  {
    v11 = v26;
    goto LABEL_22;
  }
  while (1)
  {
    v11 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v11 >= v32)
      goto LABEL_23;
    v25 = *(_QWORD *)(v31 + 8 * v11);
    ++v26;
    if (v25)
      goto LABEL_22;
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_1CA263C98()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94B098);
  v2 = *v0;
  v3 = sub_1CA85C0A4();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      v9 = v18 + 1;
      if (v18 + 1 >= v13)
        goto LABEL_26;
      v19 = *(_QWORD *)(v6 + 8 * v9);
      if (!v19)
        break;
    }
LABEL_25:
    v21 = __clz(__rbit64(v19));
    v12 = (v19 - 1) & v19;
    v15 = v21 + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = *(_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v16) = v17;
  }
  v20 = v18 + 2;
  if (v20 >= v13)
    goto LABEL_26;
  v19 = *(_QWORD *)(v6 + 8 * v20);
  if (v19)
  {
    v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v9);
    ++v20;
    if (v19)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1CA263E24()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF94B068);
  v2 = *v0;
  v3 = sub_1CA85C0A4();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      v9 = v18 + 1;
      if (v18 + 1 >= v13)
        goto LABEL_26;
      v19 = *(_QWORD *)(v6 + 8 * v9);
      if (!v19)
        break;
    }
LABEL_25:
    v12 = (v19 - 1) & v19;
    v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(void **)(*(_QWORD *)(v2 + 56) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = *(_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v16) = v17;
    result = v17;
  }
  v20 = v18 + 2;
  if (v20 >= v13)
    goto LABEL_26;
  v19 = *(_QWORD *)(v6 + 8 * v20);
  if (v19)
  {
    v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v9);
    ++v20;
    if (v19)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1CA263FC4()
{
  return sub_1CA264350((uint64_t (*)(_QWORD))MEMORY[0x1E0CB0870], &qword_1EF94B078);
}

id sub_1CA263FD8()
{
  return sub_1CA2641A4(&qword_1EF94B060);
}

void *sub_1CA263FE4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  id v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94AE80);
  v2 = *v0;
  v3 = sub_1CA85C0A4();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_26;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
        break;
    }
LABEL_25:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(void **)(*(_QWORD *)(v2 + 48) + v16);
    v18 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v16) = v18;
    v19 = v17;
    result = (void *)swift_retain();
  }
  v22 = v20 + 2;
  if (v22 >= v13)
    goto LABEL_26;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1CA26418C()
{
  return sub_1CA2641A4(&qword_1EF94B038);
}

id sub_1CA264198()
{
  return sub_1CA2641A4(&qword_1EF94B058);
}

id sub_1CA2641A4(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id result;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  v3 = *v1;
  v4 = sub_1CA85C0A4();
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v2 = v5;
    return result;
  }
  result = (id)(v4 + 64);
  v7 = v3 + 64;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8)
    result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v20 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v14)
      goto LABEL_26;
    v21 = *(_QWORD *)(v7 + 8 * v20);
    ++v10;
    if (!v21)
    {
      v10 = v20 + 1;
      if (v20 + 1 >= v14)
        goto LABEL_26;
      v21 = *(_QWORD *)(v7 + 8 * v10);
      if (!v21)
        break;
    }
LABEL_25:
    v13 = (v21 - 1) & v21;
    v16 = __clz(__rbit64(v21)) + (v10 << 6);
LABEL_12:
    v17 = 8 * v16;
    v18 = *(void **)(*(_QWORD *)(v3 + 48) + v17);
    v19 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + v17);
    *(_QWORD *)(*(_QWORD *)(v5 + 48) + v17) = v18;
    *(_QWORD *)(*(_QWORD *)(v5 + 56) + v17) = v19;
    result = v18;
  }
  v22 = v20 + 2;
  if (v22 >= v14)
    goto LABEL_26;
  v21 = *(_QWORD *)(v7 + 8 * v22);
  if (v21)
  {
    v10 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v10 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v10 >= v14)
      goto LABEL_26;
    v21 = *(_QWORD *)(v7 + 8 * v10);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1CA26433C()
{
  return sub_1CA264350((uint64_t (*)(_QWORD))MEMORY[0x1E0CAE5D0], &qword_1EF94B050);
}

id sub_1CA264350(uint64_t (*a1)(_QWORD), uint64_t *a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id result;
  unint64_t v12;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  void *v21;
  unint64_t v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  int64_t v29;

  v4 = a1(0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v26 - v6;
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v27 = v2;
  v8 = *v2;
  v9 = sub_1CA85C0A4();
  v10 = v9;
  if (!*(_QWORD *)(v8 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v27 = v10;
    return result;
  }
  result = (id)(v9 + 64);
  v12 = (unint64_t)((1 << *(_BYTE *)(v10 + 32)) + 63) >> 6;
  if (v10 != v8 || (unint64_t)result >= v8 + 64 + 8 * v12)
    result = memmove(result, (const void *)(v8 + 64), 8 * v12);
  v14 = 0;
  *(_QWORD *)(v10 + 16) = *(_QWORD *)(v8 + 16);
  v15 = 1 << *(_BYTE *)(v8 + 32);
  v16 = -1;
  if (v15 < 64)
    v16 = ~(-1 << v15);
  v17 = v16 & *(_QWORD *)(v8 + 64);
  v28 = v8 + 64;
  v29 = (unint64_t)(v15 + 63) >> 6;
  while (1)
  {
    if (v17)
    {
      v18 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      v19 = v18 | (v14 << 6);
      goto LABEL_12;
    }
    v23 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v29)
      goto LABEL_26;
    v24 = *(_QWORD *)(v28 + 8 * v23);
    ++v14;
    if (!v24)
    {
      v14 = v23 + 1;
      if (v23 + 1 >= v29)
        goto LABEL_26;
      v24 = *(_QWORD *)(v28 + 8 * v14);
      if (!v24)
        break;
    }
LABEL_25:
    v17 = (v24 - 1) & v24;
    v19 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_12:
    v20 = 8 * v19;
    v21 = *(void **)(*(_QWORD *)(v8 + 48) + 8 * v19);
    v22 = *(_QWORD *)(v5 + 72) * v19;
    (*(void (**)(char *, unint64_t, uint64_t))(v5 + 16))(v7, *(_QWORD *)(v8 + 56) + v22, v4);
    *(_QWORD *)(*(_QWORD *)(v10 + 48) + v20) = v21;
    (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(*(_QWORD *)(v10 + 56) + v22, v7, v4);
    result = v21;
  }
  v25 = v23 + 2;
  if (v25 >= v29)
    goto LABEL_26;
  v24 = *(_QWORD *)(v28 + 8 * v25);
  if (v24)
  {
    v14 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    v14 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v14 >= v29)
      goto LABEL_26;
    v24 = *(_QWORD *)(v28 + 8 * v14);
    ++v25;
    if (v24)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1CA264574()
{
  return sub_1CA264AAC((uint64_t *)&unk_1EF94B040);
}

void *sub_1CA264580(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *result;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;

  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  v3 = *v1;
  v4 = sub_1CA85C0A4();
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v2 = v5;
    return result;
  }
  result = (void *)(v4 + 64);
  v7 = v3 + 64;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8)
    result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v24 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v24 >= v14)
      goto LABEL_26;
    v25 = *(_QWORD *)(v7 + 8 * v24);
    ++v10;
    if (!v25)
    {
      v10 = v24 + 1;
      if (v24 + 1 >= v14)
        goto LABEL_26;
      v25 = *(_QWORD *)(v7 + 8 * v10);
      if (!v25)
        break;
    }
LABEL_25:
    v13 = (v25 - 1) & v25;
    v16 = __clz(__rbit64(v25)) + (v10 << 6);
LABEL_12:
    v17 = 16 * v16;
    v18 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 16 * v16);
    v20 = *v18;
    v19 = v18[1];
    v21 = 8 * v16;
    v22 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + v21);
    v23 = (_QWORD *)(*(_QWORD *)(v5 + 48) + v17);
    *v23 = v20;
    v23[1] = v19;
    *(_QWORD *)(*(_QWORD *)(v5 + 56) + v21) = v22;
    result = (void *)swift_bridgeObjectRetain();
  }
  v26 = v24 + 2;
  if (v26 >= v14)
    goto LABEL_26;
  v25 = *(_QWORD *)(v7 + 8 * v26);
  if (v25)
  {
    v10 = v26;
    goto LABEL_25;
  }
  while (1)
  {
    v10 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v10 >= v14)
      goto LABEL_26;
    v25 = *(_QWORD *)(v7 + 8 * v10);
    ++v26;
    if (v25)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1CA264724()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  int64_t v28;
  unint64_t v29;
  int64_t v30;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94B028);
  v2 = *v0;
  v3 = sub_1CA85C0A4();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v28 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v28 >= v13)
      goto LABEL_26;
    v29 = *(_QWORD *)(v6 + 8 * v28);
    ++v9;
    if (!v29)
    {
      v9 = v28 + 1;
      if (v28 + 1 >= v13)
        goto LABEL_26;
      v29 = *(_QWORD *)(v6 + 8 * v9);
      if (!v29)
        break;
    }
LABEL_25:
    v12 = (v29 - 1) & v29;
    v15 = __clz(__rbit64(v29)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v19 = *v17;
    v18 = v17[1];
    v20 = 32 * v15;
    v21 = (uint64_t *)(*(_QWORD *)(v2 + 56) + v20);
    v22 = *v21;
    v23 = v21[1];
    v24 = v21[2];
    v25 = v21[3];
    v26 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v26 = v19;
    v26[1] = v18;
    v27 = (_QWORD *)(*(_QWORD *)(v4 + 56) + v20);
    *v27 = v22;
    v27[1] = v23;
    v27[2] = v24;
    v27[3] = v25;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = (void *)swift_bridgeObjectRetain();
  }
  v30 = v28 + 2;
  if (v30 >= v13)
    goto LABEL_26;
  v29 = *(_QWORD *)(v6 + 8 * v30);
  if (v29)
  {
    v9 = v30;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v30 + 1;
    if (__OFADD__(v30, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v29 = *(_QWORD *)(v6 + 8 * v9);
    ++v30;
    if (v29)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1CA2648F8()
{
  return sub_1CA264904(&qword_1EF94B010);
}

id sub_1CA264904(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id result;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  void *v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;

  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  v3 = *v1;
  v4 = sub_1CA85C0A4();
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v2 = v5;
    return result;
  }
  result = (id)(v4 + 64);
  v7 = v3 + 64;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8)
    result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v19 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v14)
      goto LABEL_26;
    v20 = *(_QWORD *)(v7 + 8 * v19);
    ++v10;
    if (!v20)
    {
      v10 = v19 + 1;
      if (v19 + 1 >= v14)
        goto LABEL_26;
      v20 = *(_QWORD *)(v7 + 8 * v10);
      if (!v20)
        break;
    }
LABEL_25:
    v13 = (v20 - 1) & v20;
    v16 = __clz(__rbit64(v20)) + (v10 << 6);
LABEL_12:
    v17 = 8 * v16;
    v18 = *(void **)(*(_QWORD *)(v3 + 56) + v17);
    *(_QWORD *)(*(_QWORD *)(v5 + 48) + v17) = *(_QWORD *)(*(_QWORD *)(v3 + 48) + v17);
    *(_QWORD *)(*(_QWORD *)(v5 + 56) + v17) = v18;
    swift_bridgeObjectRetain();
    result = v18;
  }
  v21 = v19 + 2;
  if (v21 >= v14)
    goto LABEL_26;
  v20 = *(_QWORD *)(v7 + 8 * v21);
  if (v20)
  {
    v10 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    v10 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v10 >= v14)
      goto LABEL_26;
    v20 = *(_QWORD *)(v7 + 8 * v10);
    ++v21;
    if (v20)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1CA264AA0()
{
  return sub_1CA266008(&qword_1EF94AFE8);
}

void *sub_1CA264AAC(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *result;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;

  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  v3 = *v1;
  v4 = sub_1CA85C0A4();
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v2 = v5;
    return result;
  }
  result = (void *)(v4 + 64);
  v7 = v3 + 64;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8)
    result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v23 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v14)
      goto LABEL_26;
    v24 = *(_QWORD *)(v7 + 8 * v23);
    ++v10;
    if (!v24)
    {
      v10 = v23 + 1;
      if (v23 + 1 >= v14)
        goto LABEL_26;
      v24 = *(_QWORD *)(v7 + 8 * v10);
      if (!v24)
        break;
    }
LABEL_25:
    v13 = (v24 - 1) & v24;
    v16 = __clz(__rbit64(v24)) + (v10 << 6);
LABEL_12:
    v17 = 16 * v16;
    v18 = (_QWORD *)(*(_QWORD *)(v3 + 48) + 16 * v16);
    v19 = v18[1];
    v20 = 8 * v16;
    v21 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + v20);
    v22 = (_QWORD *)(*(_QWORD *)(v5 + 48) + v17);
    *v22 = *v18;
    v22[1] = v19;
    *(_QWORD *)(*(_QWORD *)(v5 + 56) + v20) = v21;
    swift_bridgeObjectRetain();
    result = (void *)swift_bridgeObjectRetain();
  }
  v25 = v23 + 2;
  if (v25 >= v14)
    goto LABEL_26;
  v24 = *(_QWORD *)(v7 + 8 * v25);
  if (v24)
  {
    v10 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    v10 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v10 >= v14)
      goto LABEL_26;
    v24 = *(_QWORD *)(v7 + 8 * v10);
    ++v25;
    if (v24)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1CA264C58()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED872530);
  v2 = *v0;
  v3 = sub_1CA85C0A4();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_26;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
        break;
    }
LABEL_25:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v18 = *v16;
    v17 = v16[1];
    LOBYTE(v16) = *(_BYTE *)(*(_QWORD *)(v2 + 56) + v15);
    v19 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v15);
    *v19 = v18;
    v19[1] = v17;
    *(_BYTE *)(*(_QWORD *)(v4 + 56) + v15) = (_BYTE)v16;
    result = (void *)swift_bridgeObjectRetain();
  }
  v22 = v20 + 2;
  if (v22 >= v13)
    goto LABEL_26;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1CA264E00()
{
  return sub_1CA26579C((uint64_t *)&unk_1EF94AFD8);
}

id sub_1CA264E0C()
{
  return sub_1CA26579C(&qword_1EF94B0E0);
}

void *sub_1CA264E18()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED872528);
  v2 = *v0;
  v3 = sub_1CA85C0A4();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v25 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v25 >= v13)
      goto LABEL_26;
    v26 = *(_QWORD *)(v6 + 8 * v25);
    ++v9;
    if (!v26)
    {
      v9 = v25 + 1;
      if (v25 + 1 >= v13)
        goto LABEL_26;
      v26 = *(_QWORD *)(v6 + 8 * v9);
      if (!v26)
        break;
    }
LABEL_25:
    v12 = (v26 - 1) & v26;
    v15 = __clz(__rbit64(v26)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + v16);
    v19 = *v17;
    v18 = v17[1];
    v20 = (uint64_t *)(*(_QWORD *)(v2 + 56) + v16);
    v21 = *v20;
    v22 = v20[1];
    v23 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v23 = v19;
    v23[1] = v18;
    v24 = (_QWORD *)(*(_QWORD *)(v4 + 56) + v16);
    *v24 = v21;
    v24[1] = v22;
    swift_bridgeObjectRetain();
    result = (void *)swift_bridgeObjectRetain();
  }
  v27 = v25 + 2;
  if (v27 >= v13)
    goto LABEL_26;
  v26 = *(_QWORD *)(v6 + 8 * v27);
  if (v26)
  {
    v9 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v26 = *(_QWORD *)(v6 + 8 * v9);
    ++v27;
    if (v26)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1CA264FD0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED874B18);
  v2 = *v0;
  v3 = sub_1CA85C0A4();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v25 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v25 >= v13)
      goto LABEL_26;
    v26 = *(_QWORD *)(v6 + 8 * v25);
    ++v9;
    if (!v26)
    {
      v9 = v25 + 1;
      if (v25 + 1 >= v13)
        goto LABEL_26;
      v26 = *(_QWORD *)(v6 + 8 * v9);
      if (!v26)
        break;
    }
LABEL_25:
    v12 = (v26 - 1) & v26;
    v15 = __clz(__rbit64(v26)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + v16);
    v19 = *v17;
    v18 = v17[1];
    v20 = (uint64_t *)(*(_QWORD *)(v2 + 56) + v16);
    v21 = *v20;
    v22 = v20[1];
    v23 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v23 = v19;
    v23[1] = v18;
    v24 = (_QWORD *)(*(_QWORD *)(v4 + 56) + v16);
    *v24 = v21;
    v24[1] = v22;
    swift_bridgeObjectRetain();
    result = (void *)swift_bridgeObjectRetain();
  }
  v27 = v25 + 2;
  if (v27 >= v13)
    goto LABEL_26;
  v26 = *(_QWORD *)(v6 + 8 * v27);
  if (v26)
  {
    v9 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v26 = *(_QWORD *)(v6 + 8 * v9);
    ++v27;
    if (v26)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1CA265188()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *result;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  int64_t v26;

  v1 = sub_1CA85A5B0();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94AF08);
  v24 = v0;
  v5 = *v0;
  v6 = sub_1CA85C0A4();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v24 = v7;
    return result;
  }
  result = (void *)(v6 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9)
    result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  v11 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v12 = 1 << *(_BYTE *)(v5 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v5 + 64);
  v25 = v5 + 64;
  v26 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v16 = v15 | (v11 << 6);
      goto LABEL_12;
    }
    v20 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v26)
      goto LABEL_26;
    v21 = *(_QWORD *)(v25 + 8 * v20);
    ++v11;
    if (!v21)
    {
      v11 = v20 + 1;
      if (v20 + 1 >= v26)
        goto LABEL_26;
      v21 = *(_QWORD *)(v25 + 8 * v11);
      if (!v21)
        break;
    }
LABEL_25:
    v14 = (v21 - 1) & v21;
    v16 = __clz(__rbit64(v21)) + (v11 << 6);
LABEL_12:
    v17 = 8 * v16;
    v18 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + 8 * v16);
    v19 = *(_QWORD *)(v2 + 72) * v16;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(_QWORD *)(v5 + 56) + v19, v1);
    *(_QWORD *)(*(_QWORD *)(v7 + 48) + v17) = v18;
    result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(_QWORD *)(v7 + 56) + v19, v4, v1);
  }
  v22 = v20 + 2;
  if (v22 >= v26)
    goto LABEL_26;
  v21 = *(_QWORD *)(v25 + 8 * v22);
  if (v21)
  {
    v11 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v11 >= v26)
      goto LABEL_26;
    v21 = *(_QWORD *)(v25 + 8 * v11);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1CA2653A8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  unint64_t v26;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94B190);
  v2 = *v0;
  v3 = sub_1CA85C0A4();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v23 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v13)
      goto LABEL_26;
    v24 = *(_QWORD *)(v6 + 8 * v23);
    ++v9;
    if (!v24)
    {
      v9 = v23 + 1;
      if (v23 + 1 >= v13)
        goto LABEL_26;
      v24 = *(_QWORD *)(v6 + 8 * v9);
      if (!v24)
        break;
    }
LABEL_25:
    v26 = __clz(__rbit64(v24));
    v12 = (v24 - 1) & v24;
    v15 = v26 + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v15);
    v18 = 24 * v15;
    v19 = *(_QWORD *)(v2 + 56) + v18;
    v20 = *(_QWORD *)(v19 + 16);
    v21 = *(_OWORD *)v19;
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    v22 = *(_QWORD *)(v4 + 56) + v18;
    *(_OWORD *)v22 = v21;
    *(_QWORD *)(v22 + 16) = v20;
  }
  v25 = v23 + 2;
  if (v25 >= v13)
    goto LABEL_26;
  v24 = *(_QWORD *)(v6 + 8 * v25);
  if (v24)
  {
    v9 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v24 = *(_QWORD *)(v6 + 8 * v9);
    ++v25;
    if (v24)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1CA26554C()
{
  return sub_1CA265560((uint64_t (*)(_QWORD))MEMORY[0x1E0D767B8], &qword_1EF94AEF0);
}

void *sub_1CA265560(uint64_t (*a1)(_QWORD), uint64_t *a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *result;
  unint64_t v12;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  int64_t v29;

  v4 = a1(0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v26 - v6;
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v27 = v2;
  v8 = *v2;
  v9 = sub_1CA85C0A4();
  v10 = v9;
  if (!*(_QWORD *)(v8 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v27 = v10;
    return result;
  }
  result = (void *)(v9 + 64);
  v12 = (unint64_t)((1 << *(_BYTE *)(v10 + 32)) + 63) >> 6;
  if (v10 != v8 || (unint64_t)result >= v8 + 64 + 8 * v12)
    result = memmove(result, (const void *)(v8 + 64), 8 * v12);
  v28 = v8 + 64;
  v14 = 0;
  *(_QWORD *)(v10 + 16) = *(_QWORD *)(v8 + 16);
  v15 = 1 << *(_BYTE *)(v8 + 32);
  v16 = -1;
  if (v15 < 64)
    v16 = ~(-1 << v15);
  v17 = v16 & *(_QWORD *)(v8 + 64);
  v29 = (unint64_t)(v15 + 63) >> 6;
  while (1)
  {
    if (v17)
    {
      v18 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      v19 = v18 | (v14 << 6);
      goto LABEL_12;
    }
    v23 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v29)
      goto LABEL_26;
    v24 = *(_QWORD *)(v28 + 8 * v23);
    ++v14;
    if (!v24)
    {
      v14 = v23 + 1;
      if (v23 + 1 >= v29)
        goto LABEL_26;
      v24 = *(_QWORD *)(v28 + 8 * v14);
      if (!v24)
        break;
    }
LABEL_25:
    v17 = (v24 - 1) & v24;
    v19 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_12:
    v20 = *(_QWORD *)(v5 + 72) * v19;
    (*(void (**)(char *, unint64_t, uint64_t))(v5 + 16))(v7, *(_QWORD *)(v8 + 48) + v20, v4);
    v21 = 8 * v19;
    v22 = *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v19);
    (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(*(_QWORD *)(v10 + 48) + v20, v7, v4);
    *(_QWORD *)(*(_QWORD *)(v10 + 56) + v21) = v22;
    result = (void *)swift_bridgeObjectRetain();
  }
  v25 = v23 + 2;
  if (v25 >= v29)
    goto LABEL_26;
  v24 = *(_QWORD *)(v28 + 8 * v25);
  if (v24)
  {
    v14 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    v14 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v14 >= v29)
      goto LABEL_26;
    v24 = *(_QWORD *)(v28 + 8 * v14);
    ++v25;
    if (v24)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1CA265790()
{
  return sub_1CA26579C((uint64_t *)&unk_1EF94AF20);
}

id sub_1CA26579C(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id result;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  _QWORD *v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;

  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  v3 = *v1;
  v4 = sub_1CA85C0A4();
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v2 = v5;
    return result;
  }
  result = (id)(v4 + 64);
  v7 = v3 + 64;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8)
    result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v23 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v14)
      goto LABEL_26;
    v24 = *(_QWORD *)(v7 + 8 * v23);
    ++v10;
    if (!v24)
    {
      v10 = v23 + 1;
      if (v23 + 1 >= v14)
        goto LABEL_26;
      v24 = *(_QWORD *)(v7 + 8 * v10);
      if (!v24)
        break;
    }
LABEL_25:
    v13 = (v24 - 1) & v24;
    v16 = __clz(__rbit64(v24)) + (v10 << 6);
LABEL_12:
    v17 = 16 * v16;
    v18 = (_QWORD *)(*(_QWORD *)(v3 + 48) + 16 * v16);
    v19 = v18[1];
    v20 = 8 * v16;
    v21 = *(void **)(*(_QWORD *)(v3 + 56) + v20);
    v22 = (_QWORD *)(*(_QWORD *)(v5 + 48) + v17);
    *v22 = *v18;
    v22[1] = v19;
    *(_QWORD *)(*(_QWORD *)(v5 + 56) + v20) = v21;
    swift_bridgeObjectRetain();
    result = v21;
  }
  v25 = v23 + 2;
  if (v25 >= v14)
    goto LABEL_26;
  v24 = *(_QWORD *)(v7 + 8 * v25);
  if (v24)
  {
    v10 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    v10 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v10 >= v14)
      goto LABEL_26;
    v24 = *(_QWORD *)(v7 + 8 * v10);
    ++v25;
    if (v24)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1CA265944()
{
  return sub_1CA266760(&qword_1EF94AFD0);
}

void *sub_1CA265950()
{
  return sub_1CA265CA8(&qword_1EF94AFC8);
}

id sub_1CA26595C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94AE58);
  v2 = *v0;
  v3 = sub_1CA85C0A4();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v19 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v13)
      goto LABEL_26;
    v20 = *(_QWORD *)(v6 + 8 * v19);
    ++v9;
    if (!v20)
    {
      v9 = v19 + 1;
      if (v19 + 1 >= v13)
        goto LABEL_26;
      v20 = *(_QWORD *)(v6 + 8 * v9);
      if (!v20)
        break;
    }
LABEL_25:
    v12 = (v20 - 1) & v20;
    v15 = __clz(__rbit64(v20)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = 8 * v15;
    v18 = *(void **)(*(_QWORD *)(v2 + 56) + v17);
    *(_OWORD *)(*(_QWORD *)(v4 + 48) + v16) = *(_OWORD *)(*(_QWORD *)(v2 + 48) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v17) = v18;
    result = v18;
  }
  v21 = v19 + 2;
  if (v21 >= v13)
    goto LABEL_26;
  v20 = *(_QWORD *)(v6 + 8 * v21);
  if (v20)
  {
    v9 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v20 = *(_QWORD *)(v6 + 8 * v9);
    ++v21;
    if (v20)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1CA265B00()
{
  return sub_1CA265CA8(&qword_1EF94AFC0);
}

void *sub_1CA265B0C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF94AE60);
  v2 = *v0;
  v3 = sub_1CA85C0A4();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_26;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
        break;
    }
LABEL_25:
    v23 = __clz(__rbit64(v21));
    v12 = (v21 - 1) & v21;
    v15 = v23 + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v15);
    v18 = 16 * v15;
    v19 = *(_OWORD *)(*(_QWORD *)(v2 + 56) + v18);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    *(_OWORD *)(*(_QWORD *)(v4 + 56) + v18) = v19;
  }
  v22 = v20 + 2;
  if (v22 >= v13)
    goto LABEL_26;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1CA265C9C()
{
  return sub_1CA265CA8(&qword_1EF94AE50);
}

void *sub_1CA265CA8(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *result;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  v3 = *v1;
  v4 = sub_1CA85C0A4();
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v2 = v5;
    return result;
  }
  result = (void *)(v4 + 64);
  v7 = v3 + 64;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8)
    result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v20 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v14)
      goto LABEL_26;
    v21 = *(_QWORD *)(v7 + 8 * v20);
    ++v10;
    if (!v21)
    {
      v10 = v20 + 1;
      if (v20 + 1 >= v14)
        goto LABEL_26;
      v21 = *(_QWORD *)(v7 + 8 * v10);
      if (!v21)
        break;
    }
LABEL_25:
    v13 = (v21 - 1) & v21;
    v16 = __clz(__rbit64(v21)) + (v10 << 6);
LABEL_12:
    v17 = 16 * v16;
    v18 = 8 * v16;
    v19 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + v18);
    *(_OWORD *)(*(_QWORD *)(v5 + 48) + v17) = *(_OWORD *)(*(_QWORD *)(v3 + 48) + v17);
    *(_QWORD *)(*(_QWORD *)(v5 + 56) + v18) = v19;
    result = (void *)swift_bridgeObjectRetain();
  }
  v22 = v20 + 2;
  if (v22 >= v14)
    goto LABEL_26;
  v21 = *(_QWORD *)(v7 + 8 * v22);
  if (v21)
  {
    v10 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v10 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v10 >= v14)
      goto LABEL_26;
    v21 = *(_QWORD *)(v7 + 8 * v10);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1CA265E44()
{
  return sub_1CA265E50(&qword_1EF94AED0);
}

void *sub_1CA265E50(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *result;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  id v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;

  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  v3 = *v1;
  v4 = sub_1CA85C0A4();
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v2 = v5;
    return result;
  }
  result = (void *)(v4 + 64);
  v7 = v3 + 64;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8)
    result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v25 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v25 >= v14)
      goto LABEL_26;
    v26 = *(_QWORD *)(v7 + 8 * v25);
    ++v10;
    if (!v26)
    {
      v10 = v25 + 1;
      if (v25 + 1 >= v14)
        goto LABEL_26;
      v26 = *(_QWORD *)(v7 + 8 * v10);
      if (!v26)
        break;
    }
LABEL_25:
    v13 = (v26 - 1) & v26;
    v16 = __clz(__rbit64(v26)) + (v10 << 6);
LABEL_12:
    v17 = 8 * v16;
    v18 = *(void **)(*(_QWORD *)(v3 + 48) + 8 * v16);
    v19 = 16 * v16;
    v20 = (uint64_t *)(*(_QWORD *)(v3 + 56) + v19);
    v21 = *v20;
    v22 = v20[1];
    *(_QWORD *)(*(_QWORD *)(v5 + 48) + v17) = v18;
    v23 = (_QWORD *)(*(_QWORD *)(v5 + 56) + v19);
    *v23 = v21;
    v23[1] = v22;
    v24 = v18;
    result = (void *)swift_bridgeObjectRetain();
  }
  v27 = v25 + 2;
  if (v27 >= v14)
    goto LABEL_26;
  v26 = *(_QWORD *)(v7 + 8 * v27);
  if (v26)
  {
    v10 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    v10 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v10 >= v14)
      goto LABEL_26;
    v26 = *(_QWORD *)(v7 + 8 * v10);
    ++v27;
    if (v26)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1CA265FFC()
{
  return sub_1CA266008((uint64_t *)&unk_1EF94AEC0);
}

id sub_1CA266008(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id result;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  void *v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;

  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  v3 = *v1;
  v4 = sub_1CA85C0A4();
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v2 = v5;
    return result;
  }
  result = (id)(v4 + 64);
  v7 = v3 + 64;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8)
    result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v19 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v14)
      goto LABEL_26;
    v20 = *(_QWORD *)(v7 + 8 * v19);
    ++v10;
    if (!v20)
    {
      v10 = v19 + 1;
      if (v19 + 1 >= v14)
        goto LABEL_26;
      v20 = *(_QWORD *)(v7 + 8 * v10);
      if (!v20)
        break;
    }
LABEL_25:
    v13 = (v20 - 1) & v20;
    v16 = __clz(__rbit64(v20)) + (v10 << 6);
LABEL_12:
    v17 = 8 * v16;
    v18 = *(void **)(*(_QWORD *)(v3 + 56) + v17);
    *(_QWORD *)(*(_QWORD *)(v5 + 48) + v17) = *(_QWORD *)(*(_QWORD *)(v3 + 48) + v17);
    *(_QWORD *)(*(_QWORD *)(v5 + 56) + v17) = v18;
    result = v18;
  }
  v21 = v19 + 2;
  if (v21 >= v14)
    goto LABEL_26;
  v20 = *(_QWORD *)(v7 + 8 * v21);
  if (v20)
  {
    v10 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    v10 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v10 >= v14)
      goto LABEL_26;
    v20 = *(_QWORD *)(v7 + 8 * v10);
    ++v21;
    if (v20)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1CA2661A0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t *v25;
  __int128 v26[3];

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94AE48);
  v2 = *v0;
  v3 = sub_1CA85C0A4();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v1 = v4;
    return result;
  }
  v25 = v1;
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v19 = *v17;
    v18 = v17[1];
    v20 = 48 * v15;
    sub_1CA266970(*(_QWORD *)(v2 + 56) + 48 * v15, (uint64_t)v26);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = v19;
    v21[1] = v18;
    sub_1CA2669B4(v26, (_OWORD *)(*(_QWORD *)(v4 + 56) + v20));
    result = (void *)swift_bridgeObjectRetain();
  }
  v24 = v22 + 2;
  if (v24 >= v13)
  {
LABEL_26:
    result = (void *)swift_release();
    v1 = v25;
    goto LABEL_28;
  }
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

id sub_1CA266388()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF94AEA8);
  v2 = *v0;
  v3 = sub_1CA85C0A4();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v19 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v13)
      goto LABEL_26;
    v20 = *(_QWORD *)(v6 + 8 * v19);
    ++v9;
    if (!v20)
    {
      v9 = v19 + 1;
      if (v19 + 1 >= v13)
        goto LABEL_26;
      v20 = *(_QWORD *)(v6 + 8 * v9);
      if (!v20)
        break;
    }
LABEL_25:
    v12 = (v20 - 1) & v20;
    v15 = __clz(__rbit64(v20)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(void **)(*(_QWORD *)(v2 + 48) + v16);
    v18 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v16) = v18;
    result = v17;
  }
  v21 = v19 + 2;
  if (v21 >= v13)
    goto LABEL_26;
  v20 = *(_QWORD *)(v6 + 8 * v21);
  if (v20)
  {
    v9 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v20 = *(_QWORD *)(v6 + 8 * v9);
    ++v21;
    if (v20)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1CA266528()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *result;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;

  v1 = v0;
  v2 = type metadata accessor for DateAndLocation();
  v27 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED874B10);
  v5 = *v0;
  v6 = sub_1CA85C0A4();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v1 = v7;
    return result;
  }
  v25 = v1;
  result = (void *)(v6 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9)
    result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  v26 = v5 + 64;
  v11 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v12 = 1 << *(_BYTE *)(v5 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v5 + 64);
  v15 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      v16 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v17 = v16 | (v11 << 6);
      goto LABEL_12;
    }
    v21 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v21 >= v15)
      goto LABEL_26;
    v22 = *(_QWORD *)(v26 + 8 * v21);
    ++v11;
    if (!v22)
    {
      v11 = v21 + 1;
      if (v21 + 1 >= v15)
        goto LABEL_26;
      v22 = *(_QWORD *)(v26 + 8 * v11);
      if (!v22)
        break;
    }
LABEL_25:
    v14 = (v22 - 1) & v22;
    v17 = __clz(__rbit64(v22)) + (v11 << 6);
LABEL_12:
    v18 = *(_QWORD *)(v27 + 72) * v17;
    sub_1CA24EE38(*(_QWORD *)(v5 + 48) + v18, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for DateAndLocation);
    v19 = 8 * v17;
    v20 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v17);
    sub_1CA24EE7C((uint64_t)v4, *(_QWORD *)(v7 + 48) + v18, (uint64_t (*)(_QWORD))type metadata accessor for DateAndLocation);
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + v19) = v20;
    result = (void *)swift_bridgeObjectRetain();
  }
  v23 = v21 + 2;
  if (v23 >= v15)
  {
LABEL_26:
    result = (void *)swift_release();
    v1 = v25;
    goto LABEL_28;
  }
  v22 = *(_QWORD *)(v26 + 8 * v23);
  if (v22)
  {
    v11 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v11 >= v15)
      goto LABEL_26;
    v22 = *(_QWORD *)(v26 + 8 * v11);
    ++v23;
    if (v22)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1CA266760(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *result;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  id v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;

  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  v3 = *v1;
  v4 = sub_1CA85C0A4();
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v2 = v5;
    return result;
  }
  result = (void *)(v4 + 64);
  v7 = v3 + 64;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8)
    result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v21 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v21 >= v14)
      goto LABEL_26;
    v22 = *(_QWORD *)(v7 + 8 * v21);
    ++v10;
    if (!v22)
    {
      v10 = v21 + 1;
      if (v21 + 1 >= v14)
        goto LABEL_26;
      v22 = *(_QWORD *)(v7 + 8 * v10);
      if (!v22)
        break;
    }
LABEL_25:
    v13 = (v22 - 1) & v22;
    v16 = __clz(__rbit64(v22)) + (v10 << 6);
LABEL_12:
    v17 = 8 * v16;
    v18 = *(void **)(*(_QWORD *)(v3 + 48) + v17);
    v19 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + v17);
    *(_QWORD *)(*(_QWORD *)(v5 + 48) + v17) = v18;
    *(_QWORD *)(*(_QWORD *)(v5 + 56) + v17) = v19;
    v20 = v18;
    result = (void *)swift_bridgeObjectRetain();
  }
  v23 = v21 + 2;
  if (v23 >= v14)
    goto LABEL_26;
  v22 = *(_QWORD *)(v7 + 8 * v23);
  if (v22)
  {
    v10 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    v10 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v10 >= v14)
      goto LABEL_26;
    v22 = *(_QWORD *)(v7 + 8 * v10);
    ++v23;
    if (v22)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_1CA266900(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(MEMORY[0x1E0DEC198] - 8) + 16))(a2, a1);
  return a2;
}

uint64_t sub_1CA26693C(uint64_t a1)
{
  (*(void (**)(void))(*(_QWORD *)(MEMORY[0x1E0DEC198] - 8) + 8))();
  return a1;
}

uint64_t sub_1CA266970(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  *(_OWORD *)(a2 + 32) = *(_OWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

_OWORD *sub_1CA2669B4(__int128 *a1, _OWORD *a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[2];
  a2[1] = a1[1];
  a2[2] = v3;
  *a2 = v2;
  return a2;
}

uint64_t sub_1CA2669CC(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v3;

  v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1CA266A08(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

_OWORD *sub_1CA266A44(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;

  v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

void sub_1CA266A54(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  id v12;
  char v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;

  v3 = *(_QWORD *)(a2 + 16);
  if (v3 != sub_1CA85BE04())
    return;
  v4 = 0;
  v5 = a2 + 56;
  v6 = 1 << *(_BYTE *)(a2 + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(a2 + 56);
  v9 = (unint64_t)(v6 + 63) >> 6;
  while (v8)
  {
    v10 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    v11 = v10 | (v4 << 6);
LABEL_6:
    v12 = *(id *)(*(_QWORD *)(a2 + 48) + 8 * v11);
    v13 = sub_1CA85BE40();

    if ((v13 & 1) == 0)
      return;
  }
  v14 = v4 + 1;
  if (__OFADD__(v4, 1))
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v14 >= v9)
    return;
  v15 = *(_QWORD *)(v5 + 8 * v14);
  ++v4;
  if (v15)
    goto LABEL_19;
  v4 = v14 + 1;
  if (v14 + 1 >= v9)
    return;
  v15 = *(_QWORD *)(v5 + 8 * v4);
  if (v15)
  {
LABEL_19:
    v8 = (v15 - 1) & v15;
    v11 = __clz(__rbit64(v15)) + (v4 << 6);
    goto LABEL_6;
  }
  v16 = v14 + 2;
  if (v16 >= v9)
    return;
  v15 = *(_QWORD *)(v5 + 8 * v16);
  if (v15)
  {
    v4 = v16;
    goto LABEL_19;
  }
  while (1)
  {
    v4 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v4 >= v9)
      return;
    v15 = *(_QWORD *)(v5 + 8 * v4);
    ++v16;
    if (v15)
      goto LABEL_19;
  }
LABEL_23:
  __break(1u);
}

void sub_1CA266BA4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  void *v15;
  id v16;
  uint64_t v17;
  unint64_t v18;
  int64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int64_t v24;
  unint64_t v25;

  sub_1CA85C3B0();
  if ((a2 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1CA85BDC8();
    sub_1CA24EEC0(0, (unint64_t *)&qword_1EF94B000);
    sub_1CA266E14();
    sub_1CA85B9CC();
    a2 = v21;
    v3 = v22;
    v4 = v23;
    v5 = v24;
    v6 = v25;
  }
  else
  {
    v7 = -1 << *(_BYTE *)(a2 + 32);
    v3 = a2 + 56;
    v4 = ~v7;
    v8 = -v7;
    if (v8 < 64)
      v9 = ~(-1 << v8);
    else
      v9 = -1;
    v6 = v9 & *(_QWORD *)(a2 + 56);
    swift_bridgeObjectRetain();
    v5 = 0;
  }
  v10 = 0;
  v11 = (unint64_t)(v4 + 64) >> 6;
  while (a2 < 0)
  {
    if (!sub_1CA85BE34())
      goto LABEL_26;
    sub_1CA24EEC0(0, (unint64_t *)&qword_1EF94B000);
    swift_dynamicCast();
    v15 = v20;
    if (!v20)
      goto LABEL_26;
    v14 = v5;
    v12 = v6;
LABEL_10:
    v17 = sub_1CA85BC78();

    v10 ^= v17;
    v5 = v14;
    v6 = v12;
  }
  if (v6)
  {
    v12 = (v6 - 1) & v6;
    v13 = __clz(__rbit64(v6)) | (v5 << 6);
    v14 = v5;
LABEL_9:
    v15 = *(void **)(*(_QWORD *)(a2 + 48) + 8 * v13);
    v20 = v15;
    v16 = v15;
    if (!v15)
      goto LABEL_26;
    goto LABEL_10;
  }
  v14 = v5 + 1;
  if (!__OFADD__(v5, 1))
  {
    if (v14 >= v11)
      goto LABEL_26;
    v18 = *(_QWORD *)(v3 + 8 * v14);
    if (!v18)
    {
      v14 = v5 + 2;
      if (v5 + 2 >= v11)
        goto LABEL_26;
      v18 = *(_QWORD *)(v3 + 8 * v14);
      if (!v18)
      {
        v19 = v5 + 3;
        while (v11 != v19)
        {
          v18 = *(_QWORD *)(v3 + 8 * v19++);
          if (v18)
          {
            v14 = v19 - 1;
            goto LABEL_22;
          }
        }
LABEL_26:
        sub_1CA24E6B8();
        sub_1CA85C374();
        return;
      }
    }
LABEL_22:
    v12 = (v18 - 1) & v18;
    v13 = __clz(__rbit64(v18)) + (v14 << 6);
    goto LABEL_9;
  }
  __break(1u);
}

unint64_t sub_1CA266E14()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF9588B0;
  if (!qword_1EF9588B0)
  {
    v1 = sub_1CA24EEC0(255, (unint64_t *)&qword_1EF94B000);
    result = MEMORY[0x1CAA4F1A4](MEMORY[0x1E0DEFCF8], v1);
    atomic_store(result, (unint64_t *)&qword_1EF9588B0);
  }
  return result;
}

uint64_t sub_1CA266E6C(uint64_t a1, uint64_t a2)
{
  assignWithTake for LocationRecipe(a2, a1);
  return a2;
}

uint64_t sub_1CA266EAC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v6;

  v0 = sub_1CA85A6A0();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1CA85A7FC();
  __swift_allocate_value_buffer(v4, qword_1EF94B200);
  __swift_project_value_buffer(v4, (uint64_t)qword_1EF94B200);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0CB0EF8], v0);
  sub_1CA85A6AC();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

void FeatureExtractorCircularDatetime.floatVector(withEntity:)(void *a1)
{
  sub_1CA2678B4(a1);
}

uint64_t FeatureExtractorCircularDatetime.featureLength.getter()
{
  return 10;
}

uint64_t FeatureExtractorCircularDatetime.name.getter()
{
  return sub_1CA85B534();
}

id FeatureExtractorCircularDatetime.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id FeatureExtractorCircularDatetime.init()()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_init);
}

id FeatureExtractorCircularDatetime.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_1CA26718C(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  id v21;
  void *v22;
  void (*v23)(char *, char *, uint64_t);
  id result;
  void *v25;
  id v26;
  uint64_t v27;
  void (*v28)(char *, char *, uint64_t);
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  char v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  int64x2_t v46;
  int64x2_t v47;
  id v48;
  uint64_t v49;
  uint64_t *v50;
  id v51;
  unint64_t v52;
  uint64_t *v53;
  id v54;
  char *v55;
  unint64_t v56;
  uint64_t *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  char *v68;

  v2 = sub_1CA85A2A4();
  v60 = *(_QWORD *)(v2 - 8);
  v61 = v2;
  MEMORY[0x1E0C80A78](v2);
  v62 = (char *)&v58 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8744D8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v58 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1CA85A850();
  v64 = *(_QWORD *)(v7 - 8);
  v65 = v7;
  v8 = MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v58 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v63 = (char *)&v58 - v11;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8711C0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v58 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1CA85A5B0();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = MEMORY[0x1E0C80A78](v15);
  v19 = (char *)&v58 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v68 = (char *)&v58 - v20;
  v21 = objc_msgSend(a1, sel_creationDate);
  if (!v21)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v14, 1, 1, v15);
    goto LABEL_18;
  }
  v22 = v21;
  sub_1CA85A574();

  v23 = *(void (**)(char *, char *, uint64_t))(v16 + 32);
  v23(v14, v19, v15);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v14, 0, 1, v15);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {
LABEL_18:
    sub_1CA267BE8((uint64_t)v14, &qword_1ED8711C0);
    v66 = 0;
    v67 = 0xE000000000000000;
    sub_1CA85BEC4();
    sub_1CA85B624();
    v48 = objc_msgSend(a1, sel_localIdentifier);
    sub_1CA85B534();

    sub_1CA85B624();
    swift_bridgeObjectRelease();
    sub_1CA85B624();
    v49 = v66;
    v45 = v67;
    sub_1CA267BA4();
    swift_allocError();
    *v50 = v49;
    v50[1] = v45;
    swift_willThrow();
    return (id)v45;
  }
  v23(v68, v14, v15);
  result = objc_msgSend(a1, sel_originalMetadataProperties);
  if (result)
  {
    v25 = result;
    v26 = objc_msgSend(result, sel_timeZone);

    if (v26)
    {
      sub_1CA85A844();

      v27 = v64;
      v28 = *(void (**)(char *, char *, uint64_t))(v64 + 32);
      v29 = v10;
      v30 = v65;
      v28(v6, v29, v65);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v6, 0, 1, v30);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v6, 1, v30) != 1)
      {
        v28(v63, v6, v30);
        if (qword_1EF94A1C0 != -1)
          swift_once();
        v31 = sub_1CA85A7FC();
        __swift_project_value_buffer(v31, (uint64_t)qword_1EF94B200);
        v32 = v62;
        sub_1CA85A6F4();
        v33 = sub_1CA85A25C();
        if ((v34 & 1) == 0)
        {
          v35 = v33;
          v36 = sub_1CA85A220();
          if ((v37 & 1) == 0)
          {
            v38 = v36;
            v39 = sub_1CA85A280();
            if ((v40 & 1) == 0)
            {
              v41 = v39;
              v59 = sub_1CA85A22C();
              if ((v42 & 1) == 0)
              {
                result = (id)sub_1CA85A268();
                if ((v43 & 1) == 0)
                {
                  if (__OFADD__(v41, 5))
                  {
                    __break(1u);
                  }
                  else if (!__OFSUB__(v38, 1))
                  {
                    if (!__OFSUB__(v35, 1))
                    {
                      v44 = (uint64_t)result;
                      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED8727A0);
                      v45 = swift_allocObject();
                      v46.i64[0] = (v41 + 5) % 7;
                      v46.i64[1] = v38 - 1;
                      v47.i64[0] = v44;
                      v47.i64[1] = v59;
                      *(_OWORD *)(v45 + 16) = xmmword_1CA8D4AD0;
                      *(float32x4_t *)(v45 + 32) = vdivq_f32(vcvt_hight_f32_f64((int32x2_t)vcvt_f32_f64(vcvtq_f64_s64(v47)), vcvtq_f64_s64(v46)), (float32x4_t)xmmword_1CA8D4AE0);
                      *(float *)(v45 + 48) = (float)(v35 - 1) / 12.0;
                      (*(void (**)(char *, uint64_t))(v60 + 8))(v62, v61);
                      (*(void (**)(char *, uint64_t))(v64 + 8))(v63, v65);
                      (*(void (**)(char *, uint64_t))(v16 + 8))(v68, v15);
                      return (id)v45;
                    }
                    goto LABEL_26;
                  }
                  __break(1u);
LABEL_26:
                  __break(1u);
                  goto LABEL_27;
                }
              }
            }
          }
        }
        v66 = 0;
        v67 = 0xE000000000000000;
        sub_1CA85BEC4();
        sub_1CA85B624();
        v54 = objc_msgSend(a1, sel_localIdentifier);
        sub_1CA85B534();
        v55 = v32;

        sub_1CA85B624();
        swift_bridgeObjectRelease();
        sub_1CA85B624();
        v45 = v66;
        v56 = v67;
        sub_1CA267BA4();
        swift_allocError();
        *v57 = v45;
        v57[1] = v56;
        swift_willThrow();
        (*(void (**)(char *, uint64_t))(v60 + 8))(v55, v61);
        (*(void (**)(char *, uint64_t))(v64 + 8))(v63, v65);
LABEL_22:
        (*(void (**)(char *, uint64_t))(v16 + 8))(v68, v15);
        return (id)v45;
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v64 + 56))(v6, 1, 1, v65);
    }
    sub_1CA267BE8((uint64_t)v6, &qword_1ED8744D8);
    v66 = 0;
    v67 = 0xE000000000000000;
    sub_1CA85BEC4();
    sub_1CA85B624();
    v51 = objc_msgSend(a1, sel_localIdentifier);
    sub_1CA85B534();

    sub_1CA85B624();
    swift_bridgeObjectRelease();
    sub_1CA85B624();
    v45 = v66;
    v52 = v67;
    sub_1CA267BA4();
    swift_allocError();
    *v53 = v45;
    v53[1] = v52;
    swift_willThrow();
    goto LABEL_22;
  }
LABEL_27:
  __break(1u);
  return result;
}

void sub_1CA2678B4(void *a1)
{
  uint64_t v1;
  float *v2;
  float *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  __float2 v7;
  int64_t v8;
  int64_t v9;
  char *isUniquelyReferenced_nonNull_native;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  id v17;
  void *v18;

  v2 = (float *)sub_1CA26718C(a1);
  if (!v1)
  {
    v3 = v2;
    v4 = *((_QWORD *)v2 + 2);
    if (v4)
    {
      swift_bridgeObjectRetain();
      v5 = 0;
      v6 = (char *)MEMORY[0x1E0DEE9D8];
      while (1)
      {
        v7 = __sincosf_stret(v3[v5 + 8] * 6.2832);
        v8 = *((_QWORD *)v6 + 2);
        v9 = v8 + 2;
        if (__OFADD__(v8, 2))
          break;
        isUniquelyReferenced_nonNull_native = (char *)swift_isUniquelyReferenced_nonNull_native();
        if (!(_DWORD)isUniquelyReferenced_nonNull_native
          || (v11 = *((_QWORD *)v6 + 3), v12 = v11 >> 1, (uint64_t)(v11 >> 1) < v9))
        {
          if (v8 <= v9)
            v13 = v8 + 2;
          else
            v13 = v8;
          v6 = sub_1CA26BBC4(isUniquelyReferenced_nonNull_native, v13, 1, v6);
          v11 = *((_QWORD *)v6 + 3);
          v12 = v11 >> 1;
        }
        v14 = *((_QWORD *)v6 + 2);
        v15 = v14 + 1;
        if (v12 <= v14)
        {
          v6 = sub_1CA26BBC4((char *)(v11 > 1), v14 + 1, 1, v6);
          v11 = *((_QWORD *)v6 + 3);
          v12 = v11 >> 1;
        }
        *((_QWORD *)v6 + 2) = v15;
        *(float *)&v6[4 * v14 + 32] = v7.__sinval;
        v16 = v14 + 2;
        if ((uint64_t)v12 < v16)
          v6 = sub_1CA26BBC4((char *)(v11 > 1), v16, 1, v6);
        ++v5;
        *((_QWORD *)v6 + 2) = v16;
        *(float *)&v6[4 * v15 + 32] = v7.__cosval;
        if (v4 == v5)
        {
          swift_bridgeObjectRelease();
          goto LABEL_17;
        }
      }
      __break(1u);
    }
    else
    {
LABEL_17:
      swift_bridgeObjectRelease();
      v17 = objc_allocWithZone((Class)sub_1CA85A994());
      v18 = (void *)sub_1CA85A988();
      objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D42A20]), sel_initWithWrapper_, v18);

    }
  }
}

uint64_t _s11PhotosGraph32FeatureExtractorCircularDatetimeC12featureNamesSaySSGvg_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED872760);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1CA8D4AF0;
  *(_QWORD *)(v0 + 32) = sub_1CA85B534();
  *(_QWORD *)(v0 + 40) = v1;
  *(_QWORD *)(v0 + 48) = sub_1CA85B534();
  *(_QWORD *)(v0 + 56) = v2;
  *(_QWORD *)(v0 + 64) = sub_1CA85B534();
  *(_QWORD *)(v0 + 72) = v3;
  *(_QWORD *)(v0 + 80) = sub_1CA85B534();
  *(_QWORD *)(v0 + 88) = v4;
  *(_QWORD *)(v0 + 96) = sub_1CA85B534();
  *(_QWORD *)(v0 + 104) = v5;
  *(_QWORD *)(v0 + 112) = sub_1CA85B534();
  *(_QWORD *)(v0 + 120) = v6;
  *(_QWORD *)(v0 + 128) = sub_1CA85B534();
  *(_QWORD *)(v0 + 136) = v7;
  *(_QWORD *)(v0 + 144) = sub_1CA85B534();
  *(_QWORD *)(v0 + 152) = v8;
  *(_QWORD *)(v0 + 160) = sub_1CA85B534();
  *(_QWORD *)(v0 + 168) = v9;
  *(_QWORD *)(v0 + 176) = sub_1CA85B534();
  *(_QWORD *)(v0 + 184) = v10;
  return v0;
}

uint64_t type metadata accessor for FeatureExtractorCircularDatetime()
{
  return objc_opt_self();
}

unint64_t sub_1CA267BA4()
{
  unint64_t result;

  result = qword_1EF94B2A8;
  if (!qword_1EF94B2A8)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8D4B40, &type metadata for FeatureExtractorCircularDatetime.Error);
    atomic_store(result, (unint64_t *)&qword_1EF94B2A8);
  }
  return result;
}

uint64_t sub_1CA267BE8(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

_QWORD *initializeBufferWithCopyOfBuffer for FeatureExtractorCircularDatetime.Error(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for FeatureExtractorCircularDatetime.Error()
{
  return swift_bridgeObjectRelease();
}

_QWORD *assignWithCopy for FeatureExtractorCircularDatetime.Error(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for FeatureExtractorCircularDatetime.Error(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for FeatureExtractorCircularDatetime.Error(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FeatureExtractorCircularDatetime.Error(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t sub_1CA267D4C()
{
  return 0;
}

ValueMetadata *type metadata accessor for FeatureExtractorCircularDatetime.Error()
{
  return &type metadata for FeatureExtractorCircularDatetime.Error;
}

uint64_t sub_1CA267D68(uint64_t a1)
{
  int *v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  unint64_t v10;
  unint64_t v11;
  int64_t v12;
  NSObject *v13;
  _BOOL4 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  int v21;
  uint64_t v22;
  _BYTE *v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _BYTE *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _BYTE *v52;
  uint64_t v53;
  _BYTE *v54;
  _BYTE *v55;
  _BYTE *v56;
  _BYTE *v57;
  _BYTE *v58;
  _BYTE *v59;
  _BYTE *v60;
  _BYTE *v61;
  uint64_t v62;
  _QWORD *v63;
  int64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  char v68;
  _BYTE v70[20];
  int v71;
  uint64_t v72;
  _BYTE *v73;
  uint64_t v74;
  int v75;
  uint64_t v76;
  int64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  int v84;
  int v85;
  int v86;
  uint64_t v87;
  int v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  int v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;

  v2 = (int *)type metadata accessor for Song();
  v99 = *((_QWORD *)v2 - 1);
  v3 = MEMORY[0x1E0C80A78](v2);
  v5 = &v70[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = MEMORY[0x1E0C80A78](v3);
  v73 = &v70[-v7];
  MEMORY[0x1E0C80A78](v6);
  v9 = &v70[-v8];
  LODWORD(v10) = PFOSVariantHasInternalDiagnostics();
  LODWORD(v11) = objc_msgSend((id)objc_opt_self(), sel_musicCurationAllowAllForExport);
  LOBYTE(v12) = sub_1CA85BAC8();
  if (qword_1ED872408 != -1)
    goto LABEL_23;
  while (1)
  {
    v13 = qword_1ED871098;
    v14 = os_log_type_enabled((os_log_t)qword_1ED871098, (os_log_type_t)v12);
    v74 = a1;
    if (v14)
    {
      v15 = swift_slowAlloc();
      *(_DWORD *)v15 = 67109376;
      LODWORD(v105) = v10;
      sub_1CA85BCF0();
      *(_WORD *)(v15 + 8) = 1024;
      LODWORD(v105) = v11;
      sub_1CA85BCF0();
      _os_log_impl(&dword_1CA237000, v13, (os_log_type_t)v12, "[MemoriesMusic] Transforming songs - is  internal: %{BOOL}d, allowAllForExport: %{BOOL}d", (uint8_t *)v15, 0xEu);
      v16 = v15;
      a1 = v74;
      MEMORY[0x1CAA4F27C](v16, -1, -1);
    }
    v12 = *(_QWORD *)(a1 + 16);
    v17 = MEMORY[0x1E0DEE9D8];
    if (!v12)
      return v17;
    v105 = MEMORY[0x1E0DEE9D8];
    sub_1CA3FB7FC(0, v12, 0);
    v19 = sub_1CA31D160(a1);
    v21 = v20 & 1;
    v72 = a1 + 56;
    v71 = v10 & v11;
    while ((v19 & 0x8000000000000000) == 0 && v19 < 1 << *(_BYTE *)(a1 + 32))
    {
      if (((*(_QWORD *)(v72 + (((unint64_t)v19 >> 3) & 0xFFFFFFFFFFFFF8)) >> v19) & 1) == 0)
        goto LABEL_21;
      if (*(_DWORD *)(a1 + 36) != (_DWORD)v18)
        goto LABEL_22;
      v97 = v21;
      v98 = v18;
      v22 = *(_QWORD *)(v99 + 72);
      v23 = v73;
      sub_1CA268434(*(_QWORD *)(a1 + 48) + v22 * v19, (uint64_t)v73);
      sub_1CA268478((uint64_t)v23, (uint64_t)v5);
      v77 = v12;
      v96 = v22;
      v76 = v19;
      if ((v71 & 1) != 0)
        v24 = 1;
      else
        v24 = v5[v2[25]] & 1;
      v75 = v24;
      v25 = *(_QWORD *)v5;
      v26 = *((_QWORD *)v5 + 1);
      v27 = *((_QWORD *)v5 + 2);
      v28 = *((_QWORD *)v5 + 3);
      v90 = *((_QWORD *)v5 + 4);
      v91 = v27;
      v93 = *((_QWORD *)v5 + 5);
      v94 = v25;
      v29 = *((_QWORD *)v5 + 7);
      v89 = *((_QWORD *)v5 + 6);
      v78 = *((_QWORD *)v5 + 8);
      v30 = v78;
      v88 = v5[72];
      v87 = *((_QWORD *)v5 + 10);
      LODWORD(v25) = v5[88];
      v85 = *((_DWORD *)v5 + 23);
      v86 = v25;
      v84 = v5[96];
      v83 = *((_QWORD *)v5 + 13);
      v92 = *((_QWORD *)v5 + 14);
      v82 = *((_QWORD *)v5 + 15);
      v104 = *((_QWORD *)v5 + 16);
      v31 = v2[15];
      v80 = *((_QWORD *)v5 + 17);
      v81 = *((_QWORD *)v5 + 18);
      sub_1CA2684BC((uint64_t)&v5[v31], (uint64_t)&v9[v31], &qword_1ED8711F0);
      v32 = v2[17];
      v33 = &v5[v2[16]];
      v34 = *((_QWORD *)v33 + 1);
      v100 = *(_QWORD *)v33;
      v101 = v34;
      v35 = *((_QWORD *)v33 + 3);
      v102 = *((_QWORD *)v33 + 2);
      v103 = v35;
      v79 = *((_QWORD *)v33 + 4);
      v36 = v33[44];
      v37 = *((unsigned int *)v33 + 10);
      v95 = v37 | (v36 << 32);
      sub_1CA2684BC((uint64_t)&v5[v32], (uint64_t)&v9[v32], &qword_1ED8711C0);
      v38 = v90;
      *((_QWORD *)v9 + 2) = v91;
      v39 = v2[18];
      v40 = v2[19];
      *((_QWORD *)v9 + 4) = v38;
      *((_QWORD *)v9 + 6) = v89;
      v41 = v2[20];
      v42 = v2[21];
      v9[72] = v88;
      *((_QWORD *)v9 + 10) = v87;
      v43 = v2[22];
      v44 = v2[23];
      v9[88] = v86;
      v45 = v84;
      *((_DWORD *)v9 + 23) = v85;
      v46 = v2[24];
      v9[96] = v45;
      v47 = v2[26];
      v48 = v83;
      *((_QWORD *)v9 + 15) = v82;
      v49 = v93;
      *(_QWORD *)v9 = v94;
      *((_QWORD *)v9 + 1) = v26;
      *((_QWORD *)v9 + 3) = v28;
      *((_QWORD *)v9 + 5) = v49;
      *((_QWORD *)v9 + 7) = v29;
      *((_QWORD *)v9 + 8) = v30;
      v50 = v92;
      *((_QWORD *)v9 + 13) = v48;
      *((_QWORD *)v9 + 14) = v50;
      v51 = v80;
      *((_QWORD *)v9 + 16) = v104;
      *((_QWORD *)v9 + 17) = v51;
      *((_QWORD *)v9 + 18) = v81;
      v52 = &v9[v2[16]];
      v52[44] = v36;
      v94 = *(_QWORD *)&v5[v39];
      v53 = v94;
      v54 = &v5[v40];
      *((_DWORD *)v52 + 10) = v37;
      LODWORD(v40) = *(_DWORD *)&v5[v40];
      *(_QWORD *)v52 = v100;
      *((_QWORD *)v52 + 1) = v101;
      *((_QWORD *)v52 + 2) = v102;
      *((_QWORD *)v52 + 3) = v103;
      *((_QWORD *)v52 + 4) = v79;
      *(_QWORD *)&v9[v2[18]] = v53;
      v55 = &v9[v2[19]];
      *(_DWORD *)v55 = v40;
      v56 = &v5[v41];
      v55[4] = v54[4];
      LODWORD(v54) = *(_DWORD *)&v5[v41];
      v57 = &v9[v2[20]];
      *(_DWORD *)v57 = (_DWORD)v54;
      v57[4] = v56[4];
      v58 = &v9[v2[21]];
      *(_DWORD *)v58 = *(_DWORD *)&v5[v42];
      v58[4] = v5[v42 + 4];
      v59 = &v9[v2[22]];
      *(_DWORD *)v59 = *(_DWORD *)&v5[v43];
      v59[4] = v5[v43 + 4];
      v60 = &v9[v2[23]];
      *(_DWORD *)v60 = *(_DWORD *)&v5[v44];
      v60[4] = v5[v44 + 4];
      v61 = &v9[v2[24]];
      *(_DWORD *)v61 = *(_DWORD *)&v5[v46];
      v61[4] = v5[v46 + 4];
      v9[v2[25]] = v75;
      v62 = *(_QWORD *)&v5[v47 + 8];
      v63 = &v9[v2[26]];
      *v63 = *(_QWORD *)&v5[v47];
      v63[1] = v62;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1CA268500(v100, v101, v102);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1CA268588((uint64_t)v5);
      v17 = v105;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1CA3FB7FC(0, *(_QWORD *)(v17 + 16) + 1, 1);
        v17 = v105;
      }
      a1 = v74;
      v64 = v77;
      v65 = v76;
      v11 = *(_QWORD *)(v17 + 16);
      v66 = *(_QWORD *)(v17 + 24);
      v10 = v11 + 1;
      if (v11 >= v66 >> 1)
      {
        sub_1CA3FB7FC(v66 > 1, v11 + 1, 1);
        v17 = v105;
      }
      *(_QWORD *)(v17 + 16) = v10;
      sub_1CA268478((uint64_t)v9, v17 + ((*(unsigned __int8 *)(v99 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v99 + 80)) + v11 * v96);
      v67 = sub_1CA31D204(v65, v98, v97 & 1, a1);
      v19 = v67;
      v21 = v68 & 1;
      v12 = v64 - 1;
      if (!v12)
      {
        sub_1CA2685C4(v67, v18, v21);
        return v17;
      }
    }
    __break(1u);
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
LABEL_23:
    swift_once();
  }
}

uint64_t sub_1CA268434(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Song();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1CA268478(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Song();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1CA2684BC(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1CA268500(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (result != 1)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1CA26855C(a3);
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1CA26855C(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1CA268588(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for Song();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1CA2685C4(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if ((a3 & 1) != 0)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_1CA2685D0()
{
  return swift_slowAlloc();
}

BOOL sub_1CA2685D8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_1CA2685F0()
{
  sub_1CA85C368();
  sub_1CA85C374();
  return sub_1CA85C3B0();
}

uint64_t sub_1CA268634()
{
  return sub_1CA85C374();
}

uint64_t sub_1CA26865C()
{
  sub_1CA85C368();
  sub_1CA85C374();
  return sub_1CA85C3B0();
}

uint64_t LifeContextDataSource.__allocating_init(graph:)(uint64_t a1)
{
  uint64_t result;

  result = swift_allocObject();
  *(_QWORD *)(result + 16) = a1;
  return result;
}

uint64_t LifeContextDataSource.init(graph:)(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return v1;
}

uint64_t sub_1CA2686D8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void *ObjCClassFromMetadata;
  id v11;
  id v12;
  uint64_t v13;
  unint64_t v14;
  unsigned int *v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  _BYTE *v20;
  id v22;
  void *v23;
  _QWORD v24[4];

  v24[3] = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94B368);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1CA85AD3C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1CA24EEC0(0, (unint64_t *)&qword_1EF94B000);
  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  v11 = objc_msgSend(a1, sel_localIdentifier);
  v12 = objc_msgSend(ObjCClassFromMetadata, sel_uuidFromLocalIdentifier_, v11);

  if (v12)
  {
    sub_1CA85B534();
    v24[1] = v13;

    v14 = (unint64_t)objc_msgSend(a1, sel_ageCategory);
    if (v14 > 5)
      v15 = (unsigned int *)MEMORY[0x1E0D76D18];
    else
      v15 = (unsigned int *)qword_1E84034A0[v14];
    (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, *v15, v6);
    v22 = objc_msgSend(a1, sel_name);
    if (v22)
    {
      v23 = v22;
      sub_1CA85B534();

    }
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v5, v9, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v5, 0, 1, v6);
    sub_1CA85AD48();
    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  else
  {
    if (qword_1EF94A270 != -1)
      swift_once();
    v16 = sub_1CA85B348();
    __swift_project_value_buffer(v16, (uint64_t)qword_1EF978138);
    v17 = sub_1CA85B330();
    v18 = sub_1CA85BAE0();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v19 = 0;
      _os_log_impl(&dword_1CA237000, v17, v18, "[Life Context Data Source] mePersonUUID not found.", v19, 2u);
      MEMORY[0x1CAA4F27C](v19, -1, -1);
    }

    sub_1CA26A1C4();
    swift_allocError();
    *v20 = 0;
    return swift_willThrow();
  }
}

unint64_t sub_1CA2689CC(uint64_t a1)
{
  unint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  int64_t v22;
  unint64_t v23;
  unint64_t v24;
  int64_t v25;
  id v26;
  void *v27;
  uint64_t v28;
  id v29;
  NSObject *v30;
  uint64_t v31;
  os_log_type_t v32;
  uint8_t *v33;
  void *ObjCClassFromMetadata;
  id v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  uint64_t *v42;
  id v43;
  id v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unsigned __int8 v50;
  _QWORD *v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  char v61;
  void *v62;
  void *v63;
  id v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  unint64_t v69;
  unint64_t v70;
  _QWORD *v71;
  void (*v72)(void **, _QWORD);
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  char *v77;
  unint64_t v78;
  unint64_t v79;
  int64_t v80;
  uint64_t v81;
  NSObject *v82;
  os_log_type_t v83;
  uint8_t *v84;
  uint8_t *v85;
  _BYTE *v86;
  uint64_t v88;
  int v89;
  int v90;
  int v91;
  int v92;
  int v93;
  uint64_t v94;
  uint64_t v95;
  int64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  unsigned int v101;
  char *v102;
  uint64_t v103;
  id v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  int64_t v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  char *v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  unint64_t v117;
  id v118;
  uint64_t v119;
  void *v120;
  char v121;
  uint64_t v122;
  uint64_t v123;
  unsigned __int8 v124;
  _QWORD *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  int64_t v129;
  unint64_t v130;
  _QWORD *v131;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94B368);
  MEMORY[0x1E0C80A78](v3);
  v102 = (char *)&v88 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1CA85AD54();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v113 = (char *)&v88 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v112 = (char *)&v88 - v9;
  v10 = sub_1CA85AD3C();
  v115 = *(_QWORD *)(v10 - 8);
  v116 = v10;
  MEMORY[0x1E0C80A78](v10);
  v114 = (char *)&v88 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    v1 = sub_1CA85BDC8();
    sub_1CA24EEC0(0, &qword_1EF94B2B8);
    sub_1CA24E6C0(&qword_1EF94B2C0, &qword_1EF94B2B8);
    sub_1CA85B9CC();
    a1 = v126;
    v97 = v127;
    v12 = v128;
    v13 = v129;
    v14 = v130;
  }
  else
  {
    v15 = -1 << *(_BYTE *)(a1 + 32);
    v16 = *(_QWORD *)(a1 + 56);
    v97 = a1 + 56;
    v17 = ~v15;
    v18 = -v15;
    if (v18 < 64)
      v19 = ~(-1 << v18);
    else
      v19 = -1;
    v14 = v19 & v16;
    swift_bridgeObjectRetain();
    v12 = v17;
    v13 = 0;
  }
  v95 = a1 & 0x7FFFFFFFFFFFFFFFLL;
  v88 = v12;
  v96 = (unint64_t)(v12 + 64) >> 6;
  v93 = *MEMORY[0x1E0D76D18];
  v92 = *MEMORY[0x1E0D76D20];
  v91 = *MEMORY[0x1E0D76D30];
  v90 = *MEMORY[0x1E0D76D38];
  v89 = *MEMORY[0x1E0D76D10];
  v101 = *MEMORY[0x1E0D76D28];
  v94 = MEMORY[0x1E0DEE9B0] + 8;
  v117 = MEMORY[0x1E0DEE9D8];
  v100 = a1;
  v99 = v5;
  v98 = v6;
  if ((a1 & 0x8000000000000000) == 0)
    goto LABEL_11;
  while (2)
  {
    v20 = sub_1CA85BE34();
    if (!v20)
      goto LABEL_80;
    v122 = v20;
    sub_1CA24EEC0(0, &qword_1EF94B2B8);
    swift_unknownObjectRetain();
    swift_dynamicCast();
    v21 = v120;
    swift_unknownObjectRelease();
    v22 = v13;
    v111 = v14;
    if (!v21)
    {
LABEL_80:
      sub_1CA24E6B8();
      return v117;
    }
LABEL_23:
    v109 = v22;
    v26 = objc_msgSend(v21, sel_name, v88);
    v118 = v21;
    if (v26)
    {
      v27 = v26;
      v108 = sub_1CA85B534();
      v110 = v28;

    }
    else
    {
      v108 = 0;
      v110 = 0;
    }
    v29 = v118;
    v30 = objc_msgSend(v118, sel_localIdentifier);
    if (!v30)
    {
      if (qword_1EF94A270 != -1)
        swift_once();
      v31 = sub_1CA85B348();
      __swift_project_value_buffer(v31, (uint64_t)qword_1EF978138);
      v30 = sub_1CA85B330();
      v32 = sub_1CA85BAE0();
      if (os_log_type_enabled(v30, v32))
      {
        v33 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v33 = 0;
        _os_log_impl(&dword_1CA237000, v30, v32, "[Life Context Data Source] favoritePerson LocalIdentifier was nil.", v33, 2u);
        MEMORY[0x1CAA4F27C](v33, -1, -1);
      }
      v29 = v118;
    }

    sub_1CA24EEC0(0, (unint64_t *)&qword_1EF94B000);
    ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
    v35 = objc_msgSend(v29, sel_localIdentifier);
    v36 = objc_msgSend(ObjCClassFromMetadata, sel_uuidFromLocalIdentifier_, v35);

    v1 = (unint64_t)v29;
    if (!v36)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (qword_1EF94A270 != -1)
        goto LABEL_84;
      goto LABEL_77;
    }
    v37 = sub_1CA85B534();
    v39 = v38;

    v40 = objc_msgSend(v29, sel_ageCategory);
    v41 = v101;
    switch((unint64_t)v40)
    {
      case 1uLL:
        v42 = &v123;
        goto LABEL_39;
      case 2uLL:
        v42 = (uint64_t *)((char *)&v122 + 4);
        goto LABEL_39;
      case 3uLL:
        v42 = (uint64_t *)&v121;
        goto LABEL_39;
      case 4uLL:
        goto LABEL_40;
      case 5uLL:
        v42 = &v122;
        goto LABEL_39;
      default:
        v42 = (uint64_t *)((char *)&v123 + 4);
LABEL_39:
        v41 = *((unsigned int *)v42 - 64);
LABEL_40:
        (*(void (**)(char *, uint64_t, uint64_t))(v115 + 104))(v114, v41, v116);
        v131 = (_QWORD *)MEMORY[0x1E0DEE9D8];
        v43 = objc_msgSend(*(id *)(v103 + 16), sel_meNode);
        if (!v43)
          goto LABEL_64;
        v105 = v39;
        v106 = v37;
        v104 = v43;
        v44 = objc_msgSend(v43, sel_relationshipEdgesToPersonNode_matchingQuery_, v29, 1);
        v1 = (unint64_t)&qword_1EF94B378;
        sub_1CA24EEC0(0, &qword_1EF94B378);
        sub_1CA24E6C0((unint64_t *)&qword_1EF94B380, &qword_1EF94B378);
        v45 = sub_1CA85B984();

        v46 = v45 & 0xC000000000000001;
        if ((v45 & 0xC000000000000001) != 0)
        {
          v47 = sub_1CA85BE04();
          if (!v47)
            goto LABEL_46;
        }
        else
        {
          v47 = *(_QWORD *)(v45 + 16);
          if (!v47)
          {
LABEL_46:
            v51 = (_QWORD *)MEMORY[0x1E0DEE9D8];
            goto LABEL_63;
          }
        }
        v125 = (_QWORD *)MEMORY[0x1E0DEE9D8];
        sub_1CA3FB754(0, v47 & ~(v47 >> 63), 0);
        if (v46)
        {
          v48 = sub_1CA85BDBC();
          v50 = 1;
        }
        else
        {
          v48 = sub_1CA28B59C(v45);
          v50 = v52 & 1;
        }
        v122 = v48;
        v123 = v49;
        v124 = v50;
        if ((v47 & 0x8000000000000000) == 0)
        {
          v53 = v45 & 0xFFFFFFFFFFFFFF8;
          if (v45 < 0)
            v53 = v45;
          v119 = v53;
          do
          {
            while (1)
            {
              sub_1CA28B328(v122, v123, v124, v45);
              v63 = v62;
              v64 = objc_msgSend(v62, sel_relationship);
              sub_1CA85B534();

              v65 = sub_1CA85B594();
              v67 = v66;

              swift_bridgeObjectRelease();
              v68 = v125;
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              {
                sub_1CA3FB754(0, v68[2] + 1, 1);
                v68 = v125;
              }
              v70 = v68[2];
              v69 = v68[3];
              if (v70 >= v69 >> 1)
              {
                sub_1CA3FB754(v69 > 1, v70 + 1, 1);
                v68 = v125;
              }
              v68[2] = v70 + 1;
              v71 = &v68[2 * v70];
              v71[4] = v65;
              v71[5] = v67;
              if (v46)
                break;
              v54 = v122;
              v55 = v123;
              v56 = v124;
              v57 = sub_1CA31D204(v122, v123, v124, v45);
              v59 = v58;
              v61 = v60;
              sub_1CA2685C4(v54, v55, v56);
              v122 = v57;
              v123 = v59;
              v124 = v61 & 1;
              if (!--v47)
                goto LABEL_62;
            }
            if ((v124 & 1) == 0)
            {
              __break(1u);
              JUMPOUT(0x1CA26963CLL);
            }
            if (sub_1CA85BDD4())
              swift_isUniquelyReferenced_nonNull_native();
            __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94B388);
            v72 = (void (*)(void **, _QWORD))sub_1CA85B9B4();
            sub_1CA85BE58();
            v72(&v120, 0);
            --v47;
          }
          while (v47);
LABEL_62:
          sub_1CA2685C4(v122, v123, v124);
          v51 = v125;
LABEL_63:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v131 = v51;
          v73 = v107;
          sub_1CA50EA00(&v131);
          v107 = v73;

          a1 = v100;
          v5 = v99;
          v6 = v98;
LABEL_64:
          v74 = v115;
          v75 = v102;
          v76 = v116;
          (*(void (**)(char *, char *, uint64_t))(v115 + 16))(v102, v114, v116);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v74 + 56))(v75, 0, 1, v76);
          v77 = v112;
          sub_1CA85AD48();
          (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v113, v77, v5);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v117 = sub_1CA26BCD0(0, *(_QWORD *)(v117 + 16) + 1, 1, v117);
          v14 = v111;
          v1 = *(_QWORD *)(v117 + 16);
          v78 = *(_QWORD *)(v117 + 24);
          if (v1 >= v78 >> 1)
            v117 = sub_1CA26BCD0(v78 > 1, v1 + 1, 1, v117);
          v79 = v117;
          *(_QWORD *)(v117 + 16) = v1 + 1;
          (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v79+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(_QWORD *)(v6 + 72) * v1, v113, v5);

          (*(void (**)(char *, uint64_t))(v6 + 8))(v112, v5);
          (*(void (**)(char *, uint64_t))(v115 + 8))(v114, v116);
          v13 = v109;
          if (a1 < 0)
            continue;
LABEL_11:
          if (v14)
          {
            v111 = (v14 - 1) & v14;
            v23 = __clz(__rbit64(v14)) | (v13 << 6);
            v22 = v13;
          }
          else
          {
            v22 = v13 + 1;
            if (__OFADD__(v13, 1))
              goto LABEL_83;
            if (v22 >= v96)
              goto LABEL_80;
            v24 = *(_QWORD *)(v97 + 8 * v22);
            if (!v24)
            {
              v25 = v13 + 2;
              if (v13 + 2 >= v96)
                goto LABEL_80;
              v24 = *(_QWORD *)(v97 + 8 * v25);
              if (v24)
                goto LABEL_20;
              v25 = v13 + 3;
              if (v13 + 3 >= v96)
                goto LABEL_80;
              v24 = *(_QWORD *)(v97 + 8 * v25);
              if (v24)
              {
LABEL_20:
                v22 = v25;
              }
              else
              {
                v22 = v13 + 4;
                if (v13 + 4 >= v96)
                  goto LABEL_80;
                v24 = *(_QWORD *)(v97 + 8 * v22);
                if (!v24)
                {
                  v80 = v13 + 5;
                  do
                  {
                    if (v96 == v80)
                      goto LABEL_80;
                    v24 = *(_QWORD *)(v97 + 8 * v80++);
                  }
                  while (!v24);
                  v22 = v80 - 1;
                }
              }
            }
            v111 = (v24 - 1) & v24;
            v23 = __clz(__rbit64(v24)) + (v22 << 6);
          }
          v21 = *(id *)(*(_QWORD *)(a1 + 48) + 8 * v23);
          if (!v21)
            goto LABEL_80;
          goto LABEL_23;
        }
        __break(1u);
LABEL_83:
        __break(1u);
LABEL_84:
        swift_once();
LABEL_77:
        v81 = sub_1CA85B348();
        __swift_project_value_buffer(v81, (uint64_t)qword_1EF978138);
        v82 = sub_1CA85B330();
        v83 = sub_1CA85BAE0();
        if (os_log_type_enabled(v82, v83))
        {
          v84 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v84 = 0;
          _os_log_impl(&dword_1CA237000, v82, v83, "[Life Context Data Source] favoritePersonUUID not found.", v84, 2u);
          v85 = v84;
          v1 = (unint64_t)v118;
          MEMORY[0x1CAA4F27C](v85, -1, -1);
        }

        sub_1CA26A1C4();
        swift_allocError();
        *v86 = 0;
        swift_willThrow();

        sub_1CA24E6B8();
        return v117;
    }
  }
}

void sub_1CA269654(void *a1, uint64_t a2, unint64_t *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  id v12;
  id v13;
  id v14;
  NSObject *v15;
  unint64_t v16;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  NSObject *v24;

  v5 = sub_1CA85AC70();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v10 = MEMORY[0x1E0C80A78](v9).n128_u64[0];
  v24 = ((char *)&v23 - v11);
  v12 = objc_msgSend(a1, sel_name, v10);
  sub_1CA85B534();

  v13 = objc_msgSend(a1, sel_localIdentifier);
  if (!v13)
  {
    sub_1CA85B534();
    v13 = (id)sub_1CA85B510();
    swift_bridgeObjectRelease();
  }
  sub_1CA24EEC0(0, (unint64_t *)&qword_1EF94B000);
  v14 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_uuidFromLocalIdentifier_, v13);

  if (v14)
  {
    sub_1CA85B534();

    objc_msgSend((id)objc_opt_self(), sel_detectionTypeFromPetSpecies_, objc_msgSend(a1, sel_petSpecies));
    v15 = v24;
    sub_1CA85AC64();
    (*(void (**)(char *, NSObject *, uint64_t))(v6 + 16))(v8, v15, v5);
    v16 = *a3;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *a3 = v16;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v16 = sub_1CA26BDF0(0, *(_QWORD *)(v16 + 16) + 1, 1, v16);
      *a3 = v16;
    }
    v19 = *(_QWORD *)(v16 + 16);
    v18 = *(_QWORD *)(v16 + 24);
    if (v19 >= v18 >> 1)
    {
      v16 = sub_1CA26BDF0(v18 > 1, v19 + 1, 1, v16);
      *a3 = v16;
    }
    *(_QWORD *)(v16 + 16) = v19 + 1;
    (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v16+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(_QWORD *)(v6 + 72) * v19, v8, v5);
    (*(void (**)(NSObject *, uint64_t))(v6 + 8))(v15, v5);
  }
  else
  {
    swift_bridgeObjectRelease();
    if (qword_1EF94A270 != -1)
      swift_once();
    v20 = sub_1CA85B348();
    __swift_project_value_buffer(v20, (uint64_t)qword_1EF978138);
    v24 = sub_1CA85B330();
    v21 = sub_1CA85BAC8();
    if (os_log_type_enabled(v24, v21))
    {
      v22 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v22 = 0;
      _os_log_impl(&dword_1CA237000, v24, v21, "[Life Context Data Source] Pet node local identifier could not convert to UUID. ", v22, 2u);
      MEMORY[0x1CAA4F27C](v22, -1, -1);
    }

  }
}

uint64_t LifeContextDataSource.generateInfo(progressReporter:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  id v19;
  void *v20;
  id v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  id v33;
  id v34;
  NSObject *v35;
  os_log_type_t v36;
  uint8_t *v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD v40[2];
  uint64_t v41;
  uint64_t v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  _BYTE v46[40];
  uint64_t v47;

  v4 = v2;
  v44 = a2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94B2B0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = sub_1CA85AD54();
  v45 = *(_QWORD *)(v47 - 8);
  MEMORY[0x1E0C80A78](v47);
  v10 = (char *)v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EF94A270 != -1)
    swift_once();
  v11 = sub_1CA85B348();
  __swift_project_value_buffer(v11, (uint64_t)qword_1EF978138);
  v12 = sub_1CA85B330();
  v13 = sub_1CA85BAC8();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v14 = 0;
    _os_log_impl(&dword_1CA237000, v12, v13, "[Life Context Data Source]  generateInfo has started.", v14, 2u);
    MEMORY[0x1CAA4F27C](v14, -1, -1);
  }

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  result = sub_1CA85B270();
  if (!v3)
  {
    if (qword_1EF94A2F0 != -1)
      swift_once();
    v16 = qword_1EF9781D0;
    *(double *)&v17 = CACurrentMediaTime();
    sub_1CA2E4280("generateLifeContextInfo", 23, 2u, v17, 0, v16, (uint64_t)v46);
    v18 = *(void **)(v4 + 16);
    v19 = objc_msgSend(v18, sel_meNodeWithFallbackInferredMeNode);
    if (v19)
    {
      v20 = v19;
      v21 = objc_msgSend(v19, sel_localIdentifier);
      if (v21)
      {

        sub_1CA2686D8(v20, (uint64_t)v10);
        v43 = v20;
        v25 = objc_msgSend(v20, sel_collection);
        v26 = objc_msgSend(v25, sel_homeNodes);

        v27 = objc_msgSend(v26, sel_addressNodes);
        v28 = objc_msgSend(v27, sel_firstNode);

        if (v28)
        {
          v29 = objc_msgSend(v28, sel_fullname);

          v41 = sub_1CA85B534();
          v42 = v30;

        }
        else
        {
          v41 = 0;
          v42 = 0;
        }
        v31 = objc_msgSend(v18, sel_favoritedPersonNodesIncludingMe_, 0);
        sub_1CA24EEC0(0, &qword_1EF94B2B8);
        sub_1CA24E6C0(&qword_1EF94B2C0, &qword_1EF94B2B8);
        v32 = sub_1CA85B984();

        sub_1CA2689CC(v32);
        swift_bridgeObjectRelease();
        v33 = objc_msgSend(v43, sel_collection);
        v34 = objc_msgSend(v33, sel_ownedPetNodes);

        v40[1] = sub_1CA26A024(v34);
        v35 = sub_1CA85B330();
        v36 = sub_1CA85BAC8();
        if (os_log_type_enabled(v35, v36))
        {
          v37 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v37 = 0;
          _os_log_impl(&dword_1CA237000, v35, v36, "[Life Context Data Source] Generation complete.", v37, 2u);
          MEMORY[0x1CAA4F27C](v37, -1, -1);
        }

        __swift_project_boxed_opaque_existential_1(a1, a1[3]);
        sub_1CA85B288();
        v38 = v45;
        v39 = v47;
        (*(void (**)(char *, char *, uint64_t))(v45 + 16))(v8, v10, v47);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v38 + 56))(v8, 0, 1, v39);
        sub_1CA85AC88();

        (*(void (**)(char *, uint64_t))(v38 + 8))(v10, v39);
LABEL_15:
        sub_1CA2E0C94(0);
        swift_release();
        return swift_release();
      }

    }
    v22 = sub_1CA85B330();
    v23 = sub_1CA85BAC8();
    if (os_log_type_enabled(v22, v23))
    {
      v24 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v24 = 0;
      _os_log_impl(&dword_1CA237000, v22, v23, "[Life Context Data Source] Graph Me node not found.", v24, 2u);
      MEMORY[0x1CAA4F27C](v24, -1, -1);
    }

    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v45 + 56))(v8, 1, 1, v47);
    sub_1CA85AC88();
    goto LABEL_15;
  }
  return result;
}

uint64_t LifeContextDataSource.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t LifeContextDataSource.__deallocating_deinit()
{
  uint64_t v0;

  return swift_deallocClassInstance();
}

void sub_1CA26A018()
{
  JUMPOUT(0x1CAA4F27CLL);
}

uint64_t sub_1CA26A024(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t result;
  uint64_t v6;
  _QWORD aBlock[6];
  uint64_t v8;

  v8 = MEMORY[0x1E0DEE9D8];
  v2 = swift_allocObject();
  *(_QWORD *)(v2 + 16) = &v8;
  v3 = swift_allocObject();
  *(_QWORD *)(v3 + 16) = sub_1CA26A1A4;
  *(_QWORD *)(v3 + 24) = v2;
  aBlock[4] = sub_1CA26A1BC;
  aBlock[5] = v3;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1CA33041C;
  aBlock[3] = &block_descriptor;
  v4 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(a1, sel_enumerateUsingBlock_, v4);
  _Block_release(v4);
  LOBYTE(a1) = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((a1 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v6 = v8;
    swift_release();
    return v6;
  }
  return result;
}

uint64_t type metadata accessor for LifeContextDataSource()
{
  return objc_opt_self();
}

uint64_t method lookup function for LifeContextDataSource()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of LifeContextDataSource.__allocating_init(graph:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t sub_1CA26A194()
{
  return swift_deallocObject();
}

void sub_1CA26A1A4(void *a1, uint64_t a2)
{
  uint64_t v2;

  sub_1CA269654(a1, a2, *(unint64_t **)(v2 + 16));
}

uint64_t sub_1CA26A1AC()
{
  return swift_deallocObject();
}

uint64_t sub_1CA26A1BC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1CA3303FC(a1, a2, *(uint64_t (**)(void))(v2 + 16));
}

unint64_t sub_1CA26A1C4()
{
  unint64_t result;

  result = qword_1EF94B370;
  if (!qword_1EF94B370)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8D4C48, &type metadata for LifeContextDataSource.Error);
    atomic_store(result, (unint64_t *)&qword_1EF94B370);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for LifeContextDataSource.Error(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 1;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 1;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 1;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = v6 - 2;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for LifeContextDataSource.Error(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1CA26A2E4 + 4 * byte_1CA8D4B95[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1CA26A318 + 4 * byte_1CA8D4B90[v4]))();
}

uint64_t sub_1CA26A318(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CA26A320(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1CA26A328);
  return result;
}

uint64_t sub_1CA26A334(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1CA26A33CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1CA26A340(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CA26A348(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CA26A354(unsigned __int8 *a1)
{
  return *a1;
}

_BYTE *sub_1CA26A35C(_BYTE *result, char a2)
{
  *result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for LifeContextDataSource.Error()
{
  return &type metadata for LifeContextDataSource.Error;
}

unint64_t sub_1CA26A37C()
{
  unint64_t result;

  result = qword_1EF94B390;
  if (!qword_1EF94B390)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8D4C20, &type metadata for LifeContextDataSource.Error);
    atomic_store(result, (unint64_t *)&qword_1EF94B390);
  }
  return result;
}

uint64_t TriggerResult.triggeredCollection.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1CA85AEEC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t TriggerResult.validityInterval.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for TriggerResult() + 20);
  v4 = sub_1CA85A148();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for TriggerResult()
{
  uint64_t result;

  result = qword_1ED874578;
  if (!qword_1ED874578)
    return swift_getSingletonMetadata();
  return result;
}

PhotosGraph::CollectionTriggerPriority_optional __swiftcall CollectionTriggerPriority.init(rawValue:)(Swift::Float rawValue)
{
  char *v1;
  char v2;
  char v3;
  PhotosGraph::CollectionTriggerPriority_optional result;

  if (rawValue == 0.2)
  {
    *v1 = 0;
  }
  else
  {
    if (rawValue == 1.0)
      v2 = 2;
    else
      v2 = 3;
    if (rawValue == 0.5)
      v3 = 1;
    else
      v3 = v2;
    *v1 = v3;
  }
  return result;
}

float CollectionTriggerPriority.rawValue.getter()
{
  char *v0;

  return flt_1CA8D4E30[*v0];
}

BOOL sub_1CA26A4D8(char *a1, char *a2)
{
  return flt_1CA8D4E30[*a1] == flt_1CA8D4E30[*a2];
}

uint64_t sub_1CA26A4FC()
{
  return sub_1CA4371EC();
}

uint64_t sub_1CA26A508()
{
  return sub_1CA85C398();
}

uint64_t sub_1CA26A53C()
{
  return sub_1CA4371EC();
}

PhotosGraph::CollectionTriggerPriority_optional sub_1CA26A544(Swift::Float *a1)
{
  return CollectionTriggerPriority.init(rawValue:)(*a1);
}

float sub_1CA26A54C@<S0>(float *a1@<X8>)
{
  char *v1;
  float result;

  result = flt_1CA8D4E30[*v1];
  *a1 = result;
  return result;
}

unint64_t static CollectionTrigger.generateTriggerResults(from:type:)(void *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  unint64_t result;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  id v25;
  id v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;

  v37 = a2;
  v3 = type metadata accessor for TriggerResult();
  v34 = *(_QWORD *)(v3 - 8);
  v35 = v3;
  MEMORY[0x1E0C80A78](v3);
  v38 = (uint64_t)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v30 - v6;
  v8 = sub_1CA85AF88();
  v32 = *(_QWORD *)(v8 - 8);
  v33 = v8;
  MEMORY[0x1E0C80A78](v8);
  v31 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1CA85AEEC();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1CA85A7FC();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v30 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_1CA85A148();
  v40 = *(_QWORD *)(v18 - 8);
  v41 = v18;
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v30 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1CA85A7CC();
  v39 = v20;
  static CollectionTrigger.dateIntervalForToday(with:)();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  v36 = a1;
  result = (unint64_t)objc_msgSend(a1, sel_count);
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    if (result)
    {
      v22 = 0;
      v23 = MEMORY[0x1E0DEE9D8];
      v24 = v38;
      v30 = result;
      do
      {
        v25 = objc_msgSend(v36, sel_objectAtIndexedSubscript_, v22, v30);
        (*(void (**)(char *, uint64_t, uint64_t))(v32 + 16))(v31, v37, v33);
        v26 = v25;
        sub_1CA85AEC8();
        (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v7, v13, v10);
        (*(void (**)(char *, char *, uint64_t))(v40 + 16))(&v7[*(int *)(v35 + 20)], v39, v41);
        sub_1CA26A9D4((uint64_t)v7, v24);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v23 = sub_1CA26BE04(0, *(_QWORD *)(v23 + 16) + 1, 1, v23, (uint64_t *)&unk_1ED874BE0, (uint64_t (*)(_QWORD))type metadata accessor for TriggerResult);
        v28 = *(_QWORD *)(v23 + 16);
        v27 = *(_QWORD *)(v23 + 24);
        if (v28 >= v27 >> 1)
          v23 = sub_1CA26BE04(v27 > 1, v28 + 1, 1, v23, (uint64_t *)&unk_1ED874BE0, (uint64_t (*)(_QWORD))type metadata accessor for TriggerResult);
        ++v22;
        *(_QWORD *)(v23 + 16) = v28 + 1;
        v29 = v23
            + ((*(unsigned __int8 *)(v34 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80))
            + *(_QWORD *)(v34 + 72) * v28;
        v24 = v38;
        sub_1CA26C024(v38, v29);

        sub_1CA26C068((uint64_t)v7);
        (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
      }
      while (v30 != v22);
    }
    else
    {
      v23 = MEMORY[0x1E0DEE9D8];
    }
    (*(void (**)(char *, uint64_t))(v40 + 8))(v39, v41);
    return v23;
  }
  return result;
}

uint64_t static CollectionTrigger.dateIntervalForToday(with:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  void (*v10)(char *, uint64_t);
  uint64_t v12;

  v0 = sub_1CA85A5B0();
  v1 = *(_QWORD *)(v0 - 8);
  v2 = MEMORY[0x1E0C80A78](v0);
  v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = MEMORY[0x1E0C80A78](v2);
  v7 = (char *)&v12 - v6;
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v12 - v8;
  sub_1CA85A580();
  sub_1CA85A6C4();
  (*(void (**)(char *, char *, uint64_t))(v1 + 16))(v4, v7, v0);
  sub_1CA85A118();
  v10 = *(void (**)(char *, uint64_t))(v1 + 8);
  v10(v7, v0);
  return ((uint64_t (*)(char *, uint64_t))v10)(v9, v0);
}

uint64_t sub_1CA26A9D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TriggerResult();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t static CollectionTrigger.generateTriggerResults(from:type:)(unint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  void (*v27)(char *, uint64_t);
  unint64_t v28;
  uint64_t v29;
  uint64_t result;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  void (*v34)(_QWORD, _QWORD, _QWORD);
  void *v35;
  id v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  char *v40;
  void *v41;
  id v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;

  v54 = a2;
  v58 = a1;
  v2 = type metadata accessor for TriggerResult();
  v52 = *(_QWORD *)(v2 - 8);
  v53 = v2;
  MEMORY[0x1E0C80A78](v2);
  v46 = (uint64_t)&v45 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v45 - v5;
  MEMORY[0x1E0C80A78](v7);
  v48 = (uint64_t *)((char *)&v45 - v8);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v45 - v10;
  v51 = sub_1CA85AF88();
  v47 = *(_QWORD *)(v51 - 8);
  MEMORY[0x1E0C80A78](v51);
  v50 = (char *)&v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1CA85AEEC();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v45 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v45 - v18;
  v20 = sub_1CA85A7FC();
  v21 = *(_QWORD *)(v20 - 8);
  MEMORY[0x1E0C80A78](v20);
  v23 = (char *)&v45 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = sub_1CA85A148();
  v56 = *(_QWORD *)(v24 - 8);
  v57 = v24;
  MEMORY[0x1E0C80A78](v24);
  v26 = (char *)&v45 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1CA85A7CC();
  v55 = v26;
  static CollectionTrigger.dateIntervalForToday(with:)();
  v27 = *(void (**)(char *, uint64_t))(v21 + 8);
  v28 = v58;
  v27(v23, v20);
  if (!(v28 >> 62))
  {
    v29 = *(_QWORD *)((v28 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    v31 = v46;
    if (v29)
      goto LABEL_3;
LABEL_20:
    swift_bridgeObjectRelease();
    v33 = MEMORY[0x1E0DEE9D8];
LABEL_21:
    (*(void (**)(char *, uint64_t))(v56 + 8))(v55, v57);
    return v33;
  }
  swift_bridgeObjectRetain();
  result = sub_1CA85C08C();
  v29 = result;
  v31 = v46;
  if (!result)
    goto LABEL_20;
LABEL_3:
  if (v29 >= 1)
  {
    v49 = v29;
    if ((v28 & 0xC000000000000001) != 0)
    {
      v32 = 0;
      v33 = MEMORY[0x1E0DEE9D8];
      v34 = (void (*)(_QWORD, _QWORD, _QWORD))v48;
      do
      {
        v35 = (void *)MEMORY[0x1CAA4DD64](v32, v28);
        (*(void (**)(char *, uint64_t, uint64_t))(v47 + 16))(v50, v54, v51);
        v36 = v35;
        sub_1CA85AEC8();
        (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v11, v19, v13);
        (*(void (**)(char *, char *, uint64_t))(v56 + 16))(&v11[*(int *)(v53 + 20)], v55, v57);
        sub_1CA26A9D4((uint64_t)v11, (uint64_t)v34);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v33 = sub_1CA26BE04(0, *(_QWORD *)(v33 + 16) + 1, 1, v33, (uint64_t *)&unk_1ED874BE0, (uint64_t (*)(_QWORD))type metadata accessor for TriggerResult);
        v38 = *(_QWORD *)(v33 + 16);
        v37 = *(_QWORD *)(v33 + 24);
        if (v38 >= v37 >> 1)
          v33 = sub_1CA26BE04(v37 > 1, v38 + 1, 1, v33, (uint64_t *)&unk_1ED874BE0, (uint64_t (*)(_QWORD))type metadata accessor for TriggerResult);
        ++v32;
        *(_QWORD *)(v33 + 16) = v38 + 1;
        v34 = (void (*)(_QWORD, _QWORD, _QWORD))v48;
        sub_1CA26C024((uint64_t)v48, v33+ ((*(unsigned __int8 *)(v52 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v52 + 80))+ *(_QWORD *)(v52 + 72) * v38);
        swift_unknownObjectRelease();
        sub_1CA26C068((uint64_t)v11);
        (*(void (**)(char *, uint64_t))(v14 + 8))(v19, v13);
        v28 = v58;
      }
      while (v49 != v32);
    }
    else
    {
      v39 = 0;
      v48 = *(_QWORD **)(v47 + 16);
      v33 = MEMORY[0x1E0DEE9D8];
      v40 = v50;
      do
      {
        v41 = *(void **)(v28 + 8 * v39 + 32);
        ((void (*)(char *, uint64_t, uint64_t))v48)(v40, v54, v51);
        v42 = v41;
        sub_1CA85AEC8();
        (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v6, v16, v13);
        (*(void (**)(char *, char *, uint64_t))(v56 + 16))(&v6[*(int *)(v53 + 20)], v55, v57);
        sub_1CA26A9D4((uint64_t)v6, v31);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v33 = sub_1CA26BE04(0, *(_QWORD *)(v33 + 16) + 1, 1, v33, (uint64_t *)&unk_1ED874BE0, (uint64_t (*)(_QWORD))type metadata accessor for TriggerResult);
        v44 = *(_QWORD *)(v33 + 16);
        v43 = *(_QWORD *)(v33 + 24);
        if (v44 >= v43 >> 1)
          v33 = sub_1CA26BE04(v43 > 1, v44 + 1, 1, v33, (uint64_t *)&unk_1ED874BE0, (uint64_t (*)(_QWORD))type metadata accessor for TriggerResult);
        ++v39;
        *(_QWORD *)(v33 + 16) = v44 + 1;
        v31 = v46;
        sub_1CA26C024(v46, v33+ ((*(unsigned __int8 *)(v52 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v52 + 80))+ *(_QWORD *)(v52 + 72) * v44);

        sub_1CA26C068((uint64_t)v6);
        (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
        v28 = v58;
      }
      while (v49 != v39);
    }
    swift_bridgeObjectRelease();
    goto LABEL_21;
  }
  __break(1u);
  return result;
}

uint64_t sub_1CA26AF8C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = swift_beginAccess();
  *a1 = *(_BYTE *)(v1 + 16);
  return result;
}

uint64_t sub_1CA26AFCC(char *a1)
{
  uint64_t v1;
  char v2;
  uint64_t result;

  v2 = *a1;
  result = swift_beginAccess();
  *(_BYTE *)(v1 + 16) = v2;
  return result;
}

uint64_t (*sub_1CA26B008())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1CA26B044(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a1;
  v3 = *a2;
  swift_beginAccess();
  *(_QWORD *)(v3 + 24) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1CA26B0A0()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1CA26B0D4(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 24) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1CA26B118())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_1CA26B158()
{
  uint64_t v0;

  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 32);
}

uint64_t sub_1CA26B188(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_beginAccess();
  *(_BYTE *)(v1 + 32) = a1;
  return result;
}

uint64_t (*sub_1CA26B1C4())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1CA26B200(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a1;
  v3 = *a2;
  swift_beginAccess();
  *(_QWORD *)(v3 + 40) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1CA26B25C()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1CA26B290(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 40) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1CA26B2D4())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t SingleCollection.__allocating_init(with:category:photoLibrary:)(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v8;

  v8 = swift_allocObject();
  SingleCollection.init(with:category:photoLibrary:)(a1, a2, a3, a4);
  return v8;
}

uint64_t SingleCollection.init(with:category:photoLibrary:)(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t *v17;
  void *v18;
  void *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  void *v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  char *v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  char *v35;
  char *v36;
  void (*v37)(uint64_t, char *, uint64_t);
  uint64_t v38;
  unint64_t v39;
  char isUniquelyReferenced_nonNull_native;
  id v41;
  unint64_t v42;
  unint64_t v43;
  char *v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  id v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;

  v5 = v4;
  v62 = a3;
  v52 = sub_1CA85A7FC();
  v50 = *(_QWORD *)(v52 - 8);
  MEMORY[0x1E0C80A78](v52);
  v48 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = sub_1CA85A148();
  v49 = *(_QWORD *)(v51 - 8);
  MEMORY[0x1E0C80A78](v51);
  v47 = (char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = type metadata accessor for TriggerResult();
  v53 = *(_QWORD *)(v46 - 8);
  MEMORY[0x1E0C80A78](v46);
  v60 = (uint64_t)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1CA85AF88();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = sub_1CA85AEEC();
  v59 = *(_QWORD *)(v61 - 8);
  v14 = MEMORY[0x1E0C80A78](v61);
  v45 = (char *)&v45 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v58 = (char *)&v45 - v16;
  *(_QWORD *)(v4 + 24) = MEMORY[0x1E0DEE9D8];
  v17 = (unint64_t *)(v4 + 24);
  *(_BYTE *)(v4 + 16) = 2;
  *(_BYTE *)(v4 + 32) = 0;
  *(_QWORD *)(v4 + 40) = 0;
  v18 = (void *)objc_opt_self();
  v19 = (void *)sub_1CA85B510();
  swift_bridgeObjectRelease();
  v20 = objc_msgSend(v18, sel_uuidFromLocalIdentifier_, v19);

  if (v20)
  {
    v56 = v11;
    v57 = v10;
    v55 = v4;
    sub_1CA85B534();
    v21 = v62;

    sub_1CA26C0A4();
    v22 = v21;
    sub_1CA85AF70();
    v54 = a4;
    v23 = objc_msgSend(a4, sel_librarySpecificFetchOptions);
    v24 = (void *)sub_1CA85BAB0();

    swift_bridgeObjectRelease();
    if (v24 && (v25 = objc_msgSend(v24, sel_firstObject), v24, v25))
    {
      v27 = v56;
      v26 = v57;
      v28 = v22;
      (*(void (**)(char *, uint64_t, uint64_t))(v56 + 16))(v13, v22, v57);
      v29 = v25;
      v30 = v58;
      sub_1CA85AEC8();
      v31 = v59;
      v32 = v45;
      v33 = v30;
      v34 = v61;
      (*(void (**)(char *, char *, uint64_t))(v59 + 16))(v45, v33, v61);
      v35 = v48;
      sub_1CA85A7CC();
      v36 = v47;
      static CollectionTrigger.dateIntervalForToday(with:)();
      (*(void (**)(char *, uint64_t))(v50 + 8))(v35, v52);
      v37 = *(void (**)(uint64_t, char *, uint64_t))(v31 + 32);
      v38 = v60;
      v37(v60, v32, v34);
      (*(void (**)(uint64_t, char *, uint64_t))(v49 + 32))(v38 + *(int *)(v46 + 20), v36, v51);
      swift_beginAccess();
      v39 = *v17;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *v17 = v39;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        v39 = sub_1CA26BE04(0, *(_QWORD *)(v39 + 16) + 1, 1, v39, (uint64_t *)&unk_1ED874BE0, (uint64_t (*)(_QWORD))type metadata accessor for TriggerResult);
        *v17 = v39;
      }
      v41 = v54;
      v5 = v55;
      v43 = *(_QWORD *)(v39 + 16);
      v42 = *(_QWORD *)(v39 + 24);
      if (v43 >= v42 >> 1)
      {
        v39 = sub_1CA26BE04(v42 > 1, v43 + 1, 1, v39, (uint64_t *)&unk_1ED874BE0, (uint64_t (*)(_QWORD))type metadata accessor for TriggerResult);
        *v17 = v39;
      }
      *(_QWORD *)(v39 + 16) = v43 + 1;
      sub_1CA26C024(v60, v39+ ((*(unsigned __int8 *)(v53 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v53 + 80))+ *(_QWORD *)(v53 + 72) * v43);
      swift_endAccess();

      (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v28, v26);
      (*(void (**)(char *, uint64_t))(v59 + 8))(v58, v61);
    }
    else
    {

      (*(void (**)(uint64_t, uint64_t))(v56 + 8))(v22, v57);
      return v55;
    }
  }
  else
  {

    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v62, v10);
  }
  return v5;
}

uint64_t SingleCollection.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t SingleCollection.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1CA26B87C()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1CA26B8BC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t result;

  v3 = *v1;
  result = swift_beginAccess();
  *a1 = *(_BYTE *)(v3 + 16);
  return result;
}

uint64_t sub_1CA26B900()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_beginAccess();
  return *(unsigned __int8 *)(v1 + 32);
}

uint64_t sub_1CA26B93C()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

_QWORD *sub_1CA26B97C(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED872720);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[3 * v8 + 4])
          memmove(v12, a4 + 4, 24 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v12 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1CA26E9A0(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1CA26BAA0(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED872728);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[3 * v8 + 4])
          memmove(v12, a4 + 4, 24 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v12 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1CA26E8AC(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

char *sub_1CA26BBC4(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = *((_QWORD *)a4 + 3);
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = *((_QWORD *)a4 + 2);
    if (v7 <= v8)
      v9 = *((_QWORD *)a4 + 2);
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED8727A0);
      v10 = (char *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 29;
      *((_QWORD *)v10 + 2) = v8;
      *((_QWORD *)v10 + 3) = 2 * (v12 >> 2);
      v13 = v10 + 32;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (char *)MEMORY[0x1E0DEE9D8];
      v13 = (char *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 32])
          memmove(v13, a4 + 32, 4 * v8);
        *((_QWORD *)a4 + 2) = 0;
        goto LABEL_24;
      }
    }
    sub_1CA26EA94(0, v8, v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1CA26BCD0(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1CA26BE04(a1, a2, a3, a4, (uint64_t *)&unk_1EF94B5D0, (uint64_t (*)(_QWORD))MEMORY[0x1E0D76D58]);
}

_QWORD *sub_1CA26BCE4(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED872760);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1CA26EB7C(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1CA26BDF0(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1CA26BE04(a1, a2, a3, a4, &qword_1EF94B5C8, (uint64_t (*)(_QWORD))MEMORY[0x1E0D76A58]);
}

uint64_t sub_1CA26BE04(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t (*a6)(_QWORD))
{
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  size_t v17;
  BOOL v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = *(_QWORD *)(a4 + 24);
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = *(_QWORD *)(a4 + 16);
  if (v10 <= v11)
    v12 = *(_QWORD *)(a4 + 16);
  else
    v12 = v10;
  if (!v12)
  {
    v16 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  v13 = *(_QWORD *)(a6(0) - 8);
  v14 = *(_QWORD *)(v13 + 72);
  v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v16 = (_QWORD *)swift_allocObject();
  v17 = _swift_stdlib_malloc_size(v16);
  if (!v14 || (v17 - v15 == 0x8000000000000000 ? (v18 = v14 == -1) : (v18 = 0), v18))
  {
LABEL_29:
    result = sub_1CA85C038();
    __break(1u);
    return result;
  }
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  v19 = *(_QWORD *)(a6(0) - 8);
  v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = (unint64_t)v16 + v20;
  if ((a1 & 1) != 0)
  {
    if ((unint64_t)v16 < a4 || v21 >= a4 + v20 + *(_QWORD *)(v19 + 72) * v11)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != (_QWORD *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_1CA2701E4(0, v11, v21, a4, a6);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v16;
}

uint64_t sub_1CA26C010(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1CA26BE04(a1, a2, a3, a4, (uint64_t *)&unk_1ED874BE0, (uint64_t (*)(_QWORD))type metadata accessor for TriggerResult);
}

uint64_t sub_1CA26C024(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TriggerResult();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1CA26C068(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for TriggerResult();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1CA26C0A4()
{
  unint64_t result;

  result = qword_1ED874A40;
  if (!qword_1ED874A40)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED874A40);
  }
  return result;
}

unint64_t sub_1CA26C0E4()
{
  unint64_t result;

  result = qword_1EF94B398;
  if (!qword_1EF94B398)
  {
    result = MEMORY[0x1CAA4F1A4](&protocol conformance descriptor for CollectionTriggerPriority, &type metadata for CollectionTriggerPriority);
    atomic_store(result, (unint64_t *)&qword_1EF94B398);
  }
  return result;
}

uint64_t sub_1CA26C128@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  result = swift_beginAccess();
  *a2 = *(_BYTE *)(v3 + 16);
  return result;
}

uint64_t sub_1CA26C16C(char *a1, uint64_t *a2)
{
  char v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = *a2;
  result = swift_beginAccess();
  *(_BYTE *)(v3 + 16) = v2;
  return result;
}

uint64_t sub_1CA26C1AC@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 24);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1CA26C1F8@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  result = swift_beginAccess();
  *a2 = *(_BYTE *)(v3 + 32);
  return result;
}

uint64_t sub_1CA26C23C(char *a1, uint64_t *a2)
{
  char v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = *a2;
  result = swift_beginAccess();
  *(_BYTE *)(v3 + 32) = v2;
  return result;
}

uint64_t sub_1CA26C27C@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 40);
  return swift_bridgeObjectRetain();
}

uint64_t *initializeBufferWithCopyOfBuffer for TriggerResult(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1CA85AEEC();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1CA85A148();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
  }
  return a1;
}

uint64_t destroy for TriggerResult(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_1CA85AEEC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  v6 = sub_1CA85A148();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
}

uint64_t initializeWithCopy for TriggerResult(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_1CA85AEEC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1CA85A148();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  return a1;
}

uint64_t assignWithCopy for TriggerResult(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_1CA85AEEC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1CA85A148();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

uint64_t initializeWithTake for TriggerResult(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_1CA85AEEC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1CA85A148();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for TriggerResult(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_1CA85AEEC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1CA85A148();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for TriggerResult()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CA26C5C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;

  v6 = sub_1CA85AEEC();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    v8 = sub_1CA85A148();
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for TriggerResult()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CA26C648(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  v8 = sub_1CA85AEEC();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v10 = sub_1CA85A148();
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t sub_1CA26C6C4()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1CA85AEEC();
  if (v1 <= 0x3F)
  {
    result = sub_1CA85A148();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for CollectionTriggerPriority(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_17;
  if (a2 + 2 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 2) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 2;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 2;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 2;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v8 = v6 - 3;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for CollectionTriggerPriority(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1CA26C824 + 4 * byte_1CA8D4C95[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1CA26C858 + 4 * byte_1CA8D4C90[v4]))();
}

uint64_t sub_1CA26C858(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CA26C860(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1CA26C868);
  return result;
}

uint64_t sub_1CA26C874(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1CA26C87CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1CA26C880(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CA26C888(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

_BYTE *sub_1CA26C894(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

ValueMetadata *type metadata accessor for CollectionTriggerPriority()
{
  return &type metadata for CollectionTriggerPriority;
}

uint64_t dispatch thunk of CollectionTrigger.triggerResults.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of CollectionTrigger.priority.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of CollectionTrigger.supportsFutureLookup.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of CollectionTrigger.futureLookupResults.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t type metadata accessor for SingleCollection()
{
  return objc_opt_self();
}

uint64_t method lookup function for SingleCollection()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SingleCollection.priority.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t dispatch thunk of SingleCollection.priority.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t dispatch thunk of SingleCollection.priority.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t dispatch thunk of SingleCollection.triggerResults.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t dispatch thunk of SingleCollection.triggerResults.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

uint64_t dispatch thunk of SingleCollection.triggerResults.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t dispatch thunk of SingleCollection.supportsFutureLookup.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t dispatch thunk of SingleCollection.supportsFutureLookup.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t dispatch thunk of SingleCollection.supportsFutureLookup.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
}

uint64_t dispatch thunk of SingleCollection.futureLookupResults.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 184))();
}

uint64_t dispatch thunk of SingleCollection.futureLookupResults.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 192))();
}

uint64_t dispatch thunk of SingleCollection.futureLookupResults.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 200))();
}

uint64_t dispatch thunk of SingleCollection.__allocating_init(with:category:photoLibrary:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 208))();
}

_QWORD *sub_1CA26C990(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94B5C0);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 1;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4])
          memmove(v13, a4 + 4, 32 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1CA26EE50(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1CA26CA9C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1CA26BE04(a1, a2, a3, a4, (uint64_t *)&unk_1ED8726F0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CB0870]);
}

_QWORD *sub_1CA26CAB0(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED872758);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1CA26EF58(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1CA26CBBC(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF94B3E8);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1CA26F048(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1CA26CCC8(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1CA26CF60(a1, a2, a3, a4, &qword_1EF94B5B8);
}

_QWORD *sub_1CA26CCDC(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1CA26D1D0(a1, a2, a3, a4, &qword_1EF94B3E0);
}

uint64_t sub_1CA26CCE8(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1CA26BE04(a1, a2, a3, a4, &qword_1ED872710, (uint64_t (*)(_QWORD))type metadata accessor for SongSource);
}

uint64_t sub_1CA26CCFC(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1CA26BE04(a1, a2, a3, a4, (uint64_t *)&unk_1EF94B5A8, type metadata accessor for CacherStatus);
}

uint64_t sub_1CA26CD10(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1CA26BE04(a1, a2, a3, a4, (uint64_t *)&unk_1ED872740, (uint64_t (*)(_QWORD))type metadata accessor for Song);
}

_QWORD *sub_1CA26CD24(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94B4F8);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 80);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[10 * v8 + 4])
          memmove(v12, a4 + 4, 80 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v12 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1CA26F5FC(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1CA26CE40(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94B5A0);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 25;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4])
          memmove(v13, a4 + 4, 8 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1CA26F514(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1CA26CF4C(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1CA26CF60(a1, a2, a3, a4, &qword_1EF94B598);
}

_QWORD *sub_1CA26CF60(_QWORD *result, int64_t a2, char a3, _QWORD *a4, uint64_t *a5)
{
  char v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  size_t v12;
  _QWORD *v13;

  v6 = (char)result;
  if ((a3 & 1) == 0)
  {
    v8 = a2;
    goto LABEL_8;
  }
  v7 = a4[3];
  v8 = v7 >> 1;
  if ((uint64_t)(v7 >> 1) >= a2)
    goto LABEL_8;
  if (v8 + 0x4000000000000000 >= 0)
  {
    v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v8 = a2;
LABEL_8:
    v9 = a4[2];
    if (v8 <= v9)
      v10 = a4[2];
    else
      v10 = v8;
    if (v10)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      v11 = (_QWORD *)swift_allocObject();
      v12 = _swift_stdlib_malloc_size(v11);
      v11[2] = v9;
      v11[3] = 2 * ((uint64_t)(v12 - 32) / 24);
      v13 = v11 + 4;
      if ((v6 & 1) != 0)
      {
LABEL_13:
        if (v11 != a4 || v13 >= &a4[3 * v9 + 4])
          memmove(v13, a4 + 4, 24 * v9);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v11 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1CA26FBBC(0, v9, (unint64_t)v13, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v11;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1CA26D090(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94B528);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1CA26F048(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1CA26D19C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1CA26BE04(a1, a2, a3, a4, &qword_1EF94B590, (uint64_t (*)(_QWORD))MEMORY[0x1E0D76708]);
}

uint64_t sub_1CA26D1B0(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1CA26BE04(a1, a2, a3, a4, &qword_1EF94B570, (uint64_t (*)(_QWORD))MEMORY[0x1E0D77160]);
}

_QWORD *sub_1CA26D1C4(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1CA26D1D0(a1, a2, a3, a4, (uint64_t *)&unk_1ED874C90);
}

_QWORD *sub_1CA26D1D0(_QWORD *result, int64_t a2, char a3, _QWORD *a4, uint64_t *a5)
{
  char v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v6 = (char)result;
  if ((a3 & 1) == 0)
  {
    v8 = a2;
    goto LABEL_8;
  }
  v7 = a4[3];
  v8 = v7 >> 1;
  if ((uint64_t)(v7 >> 1) >= a2)
    goto LABEL_8;
  if (v8 + 0x4000000000000000 >= 0)
  {
    v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v8 = a2;
LABEL_8:
    v9 = a4[2];
    if (v8 <= v9)
      v10 = a4[2];
    else
      v10 = v8;
    if (v10)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      v11 = (_QWORD *)swift_allocObject();
      v12 = _swift_stdlib_malloc_size(v11);
      v13 = v12 - 32;
      if (v12 < 32)
        v13 = v12 - 25;
      v11[2] = v9;
      v11[3] = 2 * (v13 >> 3);
      v14 = v11 + 4;
      if ((v6 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v11 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v14 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[v9 + 4])
          memmove(v14, a4 + 4, 8 * v9);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1CA26F514(0, v9, (char *)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v11;
  }
  __break(1u);
  return result;
}

uint64_t sub_1CA26D2D8(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1CA26BE04(a1, a2, a3, a4, &qword_1EF94B578, (uint64_t (*)(_QWORD))MEMORY[0x1E0D77800]);
}

uint64_t sub_1CA26D2EC(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1CA26BE04(a1, a2, a3, a4, (uint64_t *)&unk_1EF94ACA0, (uint64_t (*)(_QWORD))MEMORY[0x1E0D76EB0]);
}

uint64_t sub_1CA26D300(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1CA26BE04(a1, a2, a3, a4, &qword_1EF94B558, (uint64_t (*)(_QWORD))MEMORY[0x1E0D76ED0]);
}

uint64_t sub_1CA26D314(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1CA26BE04(a1, a2, a3, a4, (uint64_t *)&unk_1EF94B560, (uint64_t (*)(_QWORD))MEMORY[0x1E0D77090]);
}

_QWORD *sub_1CA26D328(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1CA26D378(a1, a2, a3, a4, &qword_1ED872790, &qword_1ED872270);
}

uint64_t sub_1CA26D33C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1CA26BE04(a1, a2, a3, a4, (uint64_t *)&unk_1EF94B580, (uint64_t (*)(_QWORD))MEMORY[0x1E0D76BC0]);
}

uint64_t sub_1CA26D350(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1CA26BE04(a1, a2, a3, a4, (uint64_t *)&unk_1EF94ACC0, (uint64_t (*)(_QWORD))MEMORY[0x1E0D76FC0]);
}

_QWORD *sub_1CA26D364(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1CA26D378(a1, a2, a3, a4, &qword_1EF94B548, &qword_1EF94B550);
}

_QWORD *sub_1CA26D378(_QWORD *result, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t *a6)
{
  char v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  int64_t v14;
  uint64_t v15;
  _QWORD *v16;

  v8 = (char)result;
  if ((a3 & 1) == 0)
  {
    v10 = a2;
    goto LABEL_8;
  }
  v9 = a4[3];
  v10 = v9 >> 1;
  if ((uint64_t)(v9 >> 1) >= a2)
    goto LABEL_8;
  if (v10 + 0x4000000000000000 >= 0)
  {
    v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v10 = a2;
LABEL_8:
    v11 = a4[2];
    if (v10 <= v11)
      v12 = a4[2];
    else
      v12 = v10;
    if (v12)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      v13 = (_QWORD *)swift_allocObject();
      v14 = _swift_stdlib_malloc_size(v13);
      v15 = v14 - 32;
      if (v14 < 32)
        v15 = v14 - 25;
      v13[2] = v11;
      v13[3] = 2 * (v15 >> 3);
      v16 = v13 + 4;
      if ((v8 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v13 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v16 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v13 != a4 || v16 >= &a4[v11 + 4])
          memmove(v16, a4 + 4, 8 * v11);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1CA26FFC8(0, v11, (unint64_t)v16, (uint64_t)a4, a6);
LABEL_24:
    swift_bridgeObjectRelease();
    return v13;
  }
  __break(1u);
  return result;
}

uint64_t sub_1CA26D490(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1CA26BE04(a1, a2, a3, a4, &qword_1EF94B540, (uint64_t (*)(_QWORD))MEMORY[0x1E0D77B50]);
}

uint64_t sub_1CA26D4A4(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1CA26BE04(a1, a2, a3, a4, &qword_1ED874BC8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CAE5D0]);
}

_QWORD *sub_1CA26D4B8(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8732E0);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[3 * v8 + 4])
          memmove(v12, a4 + 4, 24 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v12 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1CA26F130(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1CA26D5D8(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1CA26BE04(a1, a2, a3, a4, &qword_1EF94B3D8, (uint64_t (*)(_QWORD))type metadata accessor for PublicEventTimeAndLocation);
}

uint64_t sub_1CA26D5EC(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1CA26BE04(a1, a2, a3, a4, &qword_1ED8726E8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CAE690]);
}

_QWORD *sub_1CA26D600(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94B3B0);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 1;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4])
          memmove(v13, a4 + 4, 32 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1CA26F6F0(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1CA26D70C(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF94B530);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 88);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[11 * v8 + 4])
          memmove(v12, a4 + 4, 88 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v12 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1CA26F8D0(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1CA26D834(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1CA26BE04(a1, a2, a3, a4, (uint64_t *)&unk_1ED872700, (uint64_t (*)(_QWORD))MEMORY[0x1E0CB11B8]);
}

_QWORD *sub_1CA26D848(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED872770);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 1;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4])
          memmove(v13, a4 + 4, 32 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1CA26F9C0(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1CA26D954(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED872730);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 296);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[37 * v8 + 4])
          memmove(v12, a4 + 4, 296 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v12 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1CA26F424(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1CA26DA7C(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94B510);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[5 * v8 + 4])
          memmove(v12, a4 + 4, 40 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v12 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1CA26FAC8(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1CA26DB9C(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1CA26CF60(a1, a2, a3, a4, &qword_1EF94B3B8);
}

_QWORD *sub_1CA26DBB0(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94B3D0);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 1;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4])
          memmove(v13, a4 + 4, 32 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1CA26ED60(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1CA26DCBC(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1CA26BE04(a1, a2, a3, a4, &qword_1EF94B3C8, (uint64_t (*)(_QWORD))type metadata accessor for PublicEvent);
}

_QWORD *sub_1CA26DCD0(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94B3C0);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[5 * v8 + 4])
          memmove(v12, a4 + 4, 40 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v12 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1CA26EC6C(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1CA26DDF0(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1CA26E084(a1, a2, a3, a4, &qword_1ED874C38, &qword_1ED874920);
}

_QWORD *sub_1CA26DE04(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1CA26D378(a1, a2, a3, a4, (uint64_t *)&unk_1EF94B500, (uint64_t *)&unk_1ED872170);
}

_QWORD *sub_1CA26DE18(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED874C10);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[5 * v8 + 4])
          memmove(v12, a4 + 4, 40 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v12 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1CA26FCAC(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1CA26DF38(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1CA26BE04(a1, a2, a3, a4, (uint64_t *)&unk_1EF94AC40, type metadata accessor for PersonalTraitInfo);
}

_QWORD *sub_1CA26DF4C(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED874C50);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[3 * v8 + 4])
          memmove(v12, a4 + 4, 24 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v12 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1CA26F224(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1CA26E070(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1CA26E084(a1, a2, a3, a4, &qword_1EF94B4F0, &qword_1EF956C70);
}

uint64_t sub_1CA26E084(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t *a6)
{
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  size_t v17;
  BOOL v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = *(_QWORD *)(a4 + 24);
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = *(_QWORD *)(a4 + 16);
  if (v10 <= v11)
    v12 = *(_QWORD *)(a4 + 16);
  else
    v12 = v10;
  if (!v12)
  {
    v16 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  v13 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(a6) - 8);
  v14 = *(_QWORD *)(v13 + 72);
  v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v16 = (_QWORD *)swift_allocObject();
  v17 = _swift_stdlib_malloc_size(v16);
  if (!v14 || (v17 - v15 == 0x8000000000000000 ? (v18 = v14 == -1) : (v18 = 0), v18))
  {
LABEL_29:
    result = sub_1CA85C038();
    __break(1u);
    return result;
  }
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  v19 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(a6) - 8);
  v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = (unint64_t)v16 + v20;
  if ((a1 & 1) != 0)
  {
    if ((unint64_t)v16 < a4 || v21 >= a4 + v20 + *(_QWORD *)(v19 + 72) * v11)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != (_QWORD *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_1CA2700CC(0, v11, v21, a4, a6);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v16;
}

uint64_t sub_1CA26E290(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1CA26BE04(a1, a2, a3, a4, &qword_1EF94B488, (uint64_t (*)(_QWORD))MEMORY[0x1E0D3D140]);
}

_QWORD *sub_1CA26E2A4(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED874BD0);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 48);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[6 * v8 + 4])
          memmove(v12, a4 + 4, 48 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v12 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1CA26F330(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1CA26E3C8(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94B470);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1CA26FEC0(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1CA26E4D4(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94B460);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1CA26FDB8(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1CA26E5E0(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1CA26D378(a1, a2, a3, a4, (uint64_t *)&unk_1EF94B450, &qword_1EF94ABF0);
}

_QWORD *sub_1CA26E5F4(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1CA26D378(a1, a2, a3, a4, &qword_1EF94B428, &qword_1EF94B430);
}

_QWORD *sub_1CA26E608(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1CA26D378(a1, a2, a3, a4, &qword_1EF94B438, (uint64_t *)&unk_1EF94B440);
}

uint64_t sub_1CA26E61C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1CA26E084(a1, a2, a3, a4, &qword_1EF94B410, &qword_1EF94B418);
}

uint64_t sub_1CA26E630(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1CA26BE04(a1, a2, a3, a4, &qword_1EF94B420, (uint64_t (*)(_QWORD))MEMORY[0x1E0CAFFF8]);
}

_QWORD *sub_1CA26E644(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED874C60);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 25;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4])
          memmove(v13, a4 + 4, 8 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1CA26F514(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1CA26E750(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1CA26BE04(a1, a2, a3, a4, (uint64_t *)&unk_1EF94B400, (uint64_t (*)(_QWORD))MEMORY[0x1E0D77038]);
}

_QWORD *sub_1CA26E764(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94B3A8);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 1;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4])
          memmove(v13, a4 + 4, 32 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1CA26F7E0(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1CA26E870(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1CA26BE04(a1, a2, a3, a4, &qword_1EF94B3F8, (uint64_t (*)(_QWORD))MEMORY[0x1E0D76A30]);
}

uint64_t sub_1CA26E884(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1CA26BE04(a1, a2, a3, a4, &qword_1ED874BF0, (uint64_t (*)(_QWORD))type metadata accessor for DateAndLocation);
}

uint64_t sub_1CA26E898(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1CA26E084(a1, a2, a3, a4, (uint64_t *)&unk_1ED874C40, (uint64_t *)&unk_1ED874938);
}

uint64_t sub_1CA26E8AC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 24 * a1 + 32;
    v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1CA85C0D4();
  __break(1u);
  return result;
}

uint64_t sub_1CA26E9A0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 24 * a1 + 32;
    v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1CA85C0D4();
  __break(1u);
  return result;
}

char *sub_1CA26EA94(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  size_t v6;
  char *v7;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + 4 * a1 + 32);
    v6 = 4 * v4;
    v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  result = (char *)sub_1CA85C0D4();
  __break(1u);
  return result;
}

uint64_t sub_1CA26EB7C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1CA85C0D4();
  __break(1u);
  return result;
}

uint64_t sub_1CA26EC6C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 40 * a1 + 32;
    v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1CA85C0D4();
  __break(1u);
  return result;
}

uint64_t sub_1CA26ED60(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 32 * a1 + 32;
    v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1CA85C0D4();
  __break(1u);
  return result;
}

uint64_t sub_1CA26EE50(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 32 * a1 + 32;
    v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF957760);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1CA85C0D4();
  __break(1u);
  return result;
}

uint64_t sub_1CA26EF58(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1CA85C0D4();
  __break(1u);
  return result;
}

char *sub_1CA26F048(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  size_t v6;
  char *v7;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + 16 * a1 + 32);
    v6 = 16 * v4;
    v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  result = (char *)sub_1CA85C0D4();
  __break(1u);
  return result;
}

uint64_t sub_1CA26F130(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 24 * a1 + 32;
    v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1CA85C0D4();
  __break(1u);
  return result;
}

uint64_t sub_1CA26F224(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 24 * a1 + 32;
    v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EF956C80);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1CA85C0D4();
  __break(1u);
  return result;
}

uint64_t sub_1CA26F330(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 48 * a1 + 32;
    v6 = a3 + 48 * v4;
    if (v5 >= v6 || v5 + 48 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1CA85C0D4();
  __break(1u);
  return result;
}

uint64_t sub_1CA26F424(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 296 * a1 + 32;
    v6 = a3 + 296 * v4;
    if (v5 >= v6 || v5 + 296 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1CA85C0D4();
  __break(1u);
  return result;
}

char *sub_1CA26F514(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  size_t v6;
  char *v7;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + 8 * a1 + 32);
    v6 = 8 * v4;
    v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  result = (char *)sub_1CA85C0D4();
  __break(1u);
  return result;
}

uint64_t sub_1CA26F5FC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 80 * a1 + 32;
    v6 = a3 + 80 * v4;
    if (v5 >= v6 || v5 + 80 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1CA85C0D4();
  __break(1u);
  return result;
}

uint64_t sub_1CA26F6F0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 32 * a1 + 32;
    v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1CA85C0D4();
  __break(1u);
  return result;
}

uint64_t sub_1CA26F7E0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 32 * a1 + 32;
    v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1CA85C0D4();
  __break(1u);
  return result;
}

uint64_t sub_1CA26F8D0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 88 * a1 + 32;
    v6 = a3 + 88 * v4;
    if (v5 >= v6 || v5 + 88 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1CA85C0D4();
  __break(1u);
  return result;
}

uint64_t sub_1CA26F9C0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 32 * a1 + 32;
    v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF94B518);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1CA85C0D4();
  __break(1u);
  return result;
}

uint64_t sub_1CA26FAC8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 40 * a1 + 32;
    v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1CA85C0D4();
  __break(1u);
  return result;
}

uint64_t sub_1CA26FBBC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 24 * a1 + 32;
    v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1CA85C0D4();
  __break(1u);
  return result;
}

uint64_t sub_1CA26FCAC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 40 * a1 + 32;
    v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED874750);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1CA85C0D4();
  __break(1u);
  return result;
}

uint64_t sub_1CA26FDB8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94B468);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1CA85C0D4();
  __break(1u);
  return result;
}

uint64_t sub_1CA26FEC0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF94B478);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1CA85C0D4();
  __break(1u);
  return result;
}

uint64_t sub_1CA26FFC8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t result;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    v6 = a4 + 8 * a1 + 32;
    v7 = a3 + 8 * v5;
    if (v6 >= v7 || v6 + 8 * v5 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      swift_arrayInitWithCopy();
      return v7;
    }
  }
  result = sub_1CA85C0D4();
  __break(1u);
  return result;
}

uint64_t sub_1CA2700CC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t result;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    v9 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(a5) - 8);
    v10 = *(unsigned __int8 *)(v9 + 80);
    v11 = *(_QWORD *)(v9 + 72);
    v12 = a4 + ((v10 + 32) & ~v10) + v11 * a1;
    v13 = v11 * v5;
    v14 = a3 + v13;
    v15 = v12 + v13;
    if (v12 >= v14 || v15 <= a3)
    {
      swift_arrayInitWithCopy();
      return v14;
    }
  }
  result = sub_1CA85C0D4();
  __break(1u);
  return result;
}

uint64_t sub_1CA2701E4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t result;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    v9 = *(_QWORD *)(a5(0) - 8);
    v10 = *(unsigned __int8 *)(v9 + 80);
    v11 = *(_QWORD *)(v9 + 72);
    v12 = a4 + ((v10 + 32) & ~v10) + v11 * a1;
    v13 = v11 * v5;
    v14 = a3 + v13;
    v15 = v12 + v13;
    if (v12 >= v14 || v15 <= a3)
    {
      swift_arrayInitWithCopy();
      return v14;
    }
  }
  result = sub_1CA85C0D4();
  __break(1u);
  return result;
}

id OneUpRelatedRequestHandler.__allocating_init(with:)(void *a1)
{
  objc_class *v1;
  char *v3;
  char *v4;
  id v5;
  id v6;
  objc_super v8;

  v3 = (char *)objc_allocWithZone(v1);
  *(_QWORD *)&v3[OBJC_IVAR___PGOneUpRelatedRequestHandler__graphManager] = 0;
  v4 = v3;
  v5 = objc_msgSend(a1, sel_photoLibrary);
  *(_QWORD *)&v4[OBJC_IVAR___PGOneUpRelatedRequestHandler_photoLibrary] = v5;

  v8.receiver = v4;
  v8.super_class = v1;
  v6 = objc_msgSendSuper2(&v8, sel_init);

  return v6;
}

id OneUpRelatedRequestHandler.init(with:)(void *a1)
{
  char *v1;
  objc_class *ObjectType;
  char *v4;
  id v5;
  id v6;
  objc_super v8;

  ObjectType = (objc_class *)swift_getObjectType();
  *(_QWORD *)&v1[OBJC_IVAR___PGOneUpRelatedRequestHandler__graphManager] = 0;
  v4 = v1;
  v5 = objc_msgSend(a1, sel_photoLibrary);
  *(_QWORD *)&v4[OBJC_IVAR___PGOneUpRelatedRequestHandler_photoLibrary] = v5;

  v8.receiver = v4;
  v8.super_class = ObjectType;
  v6 = objc_msgSendSuper2(&v8, sel_init);

  return v6;
}

uint64_t OneUpRelatedRequestHandler.requestAssetLocalIdentifiersTakenNearCoordinates(from:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[4] = a2;
  v3[5] = v2;
  v3[3] = a1;
  return swift_task_switch();
}

uint64_t sub_1CA2704EC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  void *v8;

  v1 = v0[5];
  v2 = OBJC_IVAR___PGOneUpRelatedRequestHandler__graphManager;
  if (*(_QWORD *)(v1 + OBJC_IVAR___PGOneUpRelatedRequestHandler__graphManager))
  {
    v3 = *(_QWORD *)(v1 + OBJC_IVAR___PGOneUpRelatedRequestHandler__graphManager);
LABEL_3:
    v0[6] = v3;
    v5 = v0[3];
    v4 = v0[4];
    swift_retain();
    v6 = swift_task_alloc();
    v0[7] = v6;
    *(_QWORD *)(v6 + 16) = v5;
    *(_QWORD *)(v6 + 24) = v4;
    return swift_task_switch();
  }
  v8 = *(void **)(v1 + OBJC_IVAR___PGOneUpRelatedRequestHandler_photoLibrary);
  type metadata accessor for GraphManager();
  swift_allocObject();
  *(_QWORD *)(v1 + v2) = GraphManager.init(with:tmpGraphDirectoryName:)(v8, 0, 0);
  result = swift_release();
  v3 = *(_QWORD *)(v1 + v2);
  if (v3)
  {
    swift_retain();
    goto LABEL_3;
  }
  __break(1u);
  return result;
}

uint64_t sub_1CA2705E8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = v0[7];
  v2 = swift_task_alloc();
  v0[8] = v2;
  *(_QWORD *)(v2 + 16) = sub_1CA2725A0;
  *(_QWORD *)(v2 + 24) = v1;
  v3 = (_QWORD *)swift_task_alloc();
  v0[9] = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED872270);
  *v3 = v0;
  v3[1] = sub_1CA27068C;
  return sub_1CA85A8BC();
}

uint64_t sub_1CA27068C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;

  v2 = *v1;
  *(_QWORD *)(v2 + 80) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  swift_release();
  swift_task_dealloc();
  v4 = *(_QWORD *)(v2 + 16);
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v2 + 8))(v4);
}

uint64_t sub_1CA27072C()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1CA270768@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  uint64_t inited;
  id v10;
  void *v11;
  void *v12;
  void *v13;
  id v14;
  id v15;
  id v16;
  id v17;
  uint64_t v18;
  void *v19;
  id v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  objc_class *v24;
  char *v25;
  char *v26;
  id v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  _QWORD *v37;
  _QWORD *v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  id v44;
  void *v45;
  void *v46;
  void *v47;
  uint64_t v48;
  id v49;
  id v50;
  void *v51;
  void *v52;
  void *v53;
  uint64_t v54;
  id v55;
  id v56;
  void *v57;
  void *v58;
  void *v59;
  id v60;
  uint64_t v61;
  id v62;
  id v63;
  void *v64;
  void *v65;
  void *v66;
  id v67;
  id v68;
  uint64_t v69;
  uint64_t v70;
  void *v71;
  id v72;
  uint64_t v73;
  uint64_t result;
  id v75;
  id v76;
  id v77;
  id v78;
  uint64_t v79;
  id v80;
  id v81;
  _QWORD *v82;
  void *v83;
  uint64_t v84;
  _QWORD aBlock[6];
  objc_super v86;
  uint64_t v87;

  v8 = MEMORY[0x1E0DEE9D8];
  v87 = MEMORY[0x1E0DEE9D8];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF94B690);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1CA8D4E40;
  *(_QWORD *)(inited + 32) = 0xD000000000000010;
  *(_QWORD *)(inited + 40) = 0x80000001CA889240;
  *(_QWORD *)(inited + 72) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(inited + 48) = a2;
  *(_QWORD *)(inited + 56) = a3;
  swift_bridgeObjectRetain();
  sub_1CA273C34(inited);
  v10 = objc_allocWithZone(MEMORY[0x1E0D429C0]);
  v11 = (void *)sub_1CA85B798();
  v12 = (void *)sub_1CA85B798();
  v13 = (void *)sub_1CA85B3FC();
  swift_bridgeObjectRelease();
  v14 = objc_msgSend(v10, sel_initWithRequiredLabels_optionalLabels_properties_, v11, v12, v13);

  v15 = objc_msgSend(a1, sel_nodeIdentifiersMatchingFilter_, v14);
  v16 = objc_msgSend(v15, sel_firstElement);

  v17 = objc_msgSend(a1, sel_nodeForIdentifier_, v16);
  if (v17)
  {
    v18 = v8;
    v81 = a1;
    v83 = v14;
    v82 = a4;
    v19 = v17;
    v20 = objc_msgSend(v17, sel_labels);
    v21 = sub_1CA85B984();

    v22 = objc_msgSend(v19, sel_properties);
    sub_1CA24EEC0(0, (unint64_t *)&qword_1EF94D620);
    v23 = sub_1CA85B414();

    v24 = (objc_class *)type metadata accessor for Node();
    v25 = (char *)objc_allocWithZone(v24);
    *(_QWORD *)&v25[OBJC_IVAR____TtC11PhotosGraph4Node_identifier] = v16;
    *(_QWORD *)&v25[OBJC_IVAR____TtC11PhotosGraph4Node_labels] = v21;
    *(_QWORD *)&v25[OBJC_IVAR____TtC11PhotosGraph4Node_properties] = v23;
    v86.receiver = v25;
    v86.super_class = v24;
    v26 = (char *)objc_msgSendSuper2(&v86, sel_init);
    v27 = objc_msgSend(v26, sel_properties);
    v28 = sub_1CA85B414();

    v29 = sub_1CA4BC6C8(v28);
    swift_bridgeObjectRelease();
    sub_1CA366EE8((uint64_t)v29);
    if (v84)
      goto LABEL_19;
    swift_bridgeObjectRelease();
    v30 = OBJC_IVAR____TtC11PhotosGraph4Node_properties;
    v31 = sub_1CA4BC6C8(*(_QWORD *)&v26[OBJC_IVAR____TtC11PhotosGraph4Node_properties]);
    if (!v31[2])
      goto LABEL_12;
    swift_bridgeObjectRetain();
    v32 = sub_1CA25081C(0x656475746974614CLL, 0xE800000000000000);
    if ((v33 & 1) != 0)
    {
      v34 = *(_QWORD *)(v31[7] + 8 * v32);
      swift_unknownObjectRetain();
      swift_release();
      aBlock[0] = v34;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF94B6B0);
      if ((swift_dynamicCast() & 1) == 0)
        goto LABEL_12;
      swift_release();
      swift_bridgeObjectRelease();
      v35 = objc_msgSend(v26, sel_properties);
      v36 = sub_1CA85B414();

      v37 = sub_1CA4BC6C8(v36);
      swift_bridgeObjectRelease();
      sub_1CA366EE8((uint64_t)v37);
      swift_bridgeObjectRelease();
      v38 = sub_1CA4BC6C8(*(_QWORD *)&v26[v30]);
      if (!v38[2])
      {
LABEL_12:
        swift_unknownObjectRelease();

        swift_release();
        swift_bridgeObjectRelease();
LABEL_14:
        *v82 = v18;
        return swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRetain();
      v39 = sub_1CA25081C(0x64757469676E6F4CLL, 0xE900000000000065);
      if ((v40 & 1) != 0)
      {
        v41 = *(_QWORD *)(v38[7] + 8 * v39);
        swift_unknownObjectRetain();
        swift_release();
        aBlock[0] = v41;
        if ((swift_dynamicCast() & 1) != 0)
        {
          swift_release();
          swift_bridgeObjectRelease();
          v42 = swift_initStackObject();
          *(_OWORD *)(v42 + 16) = xmmword_1CA8D4E40;
          *(_QWORD *)(v42 + 32) = 0x656475746974614CLL;
          *(_QWORD *)(v42 + 40) = 0xE800000000000000;
          v43 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D42978]), sel_initWithComparator_value_, 6, sub_1CA85C2CC());
          swift_unknownObjectRelease();
          v79 = sub_1CA24EEC0(0, (unint64_t *)&unk_1EF94B6A0);
          *(_QWORD *)(v42 + 72) = v79;
          *(_QWORD *)(v42 + 48) = v43;
          sub_1CA273C34(v42);
          v44 = objc_allocWithZone(MEMORY[0x1E0D429C0]);
          v45 = (void *)sub_1CA85B798();
          v46 = (void *)sub_1CA85B798();
          v47 = (void *)sub_1CA85B3FC();
          swift_bridgeObjectRelease();
          v78 = objc_msgSend(v44, sel_initWithRequiredLabels_optionalLabels_properties_, v45, v46, v47);

          v77 = objc_msgSend(a1, sel_nodeIdentifiersMatchingFilter_, v78);
          v48 = swift_initStackObject();
          *(_OWORD *)(v48 + 16) = xmmword_1CA8D4E40;
          *(_QWORD *)(v48 + 32) = 0x64757469676E6F4CLL;
          *(_QWORD *)(v48 + 40) = 0xE900000000000065;
          v49 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D42978]), sel_initWithComparator_value_, 6, sub_1CA85C2CC());
          swift_unknownObjectRelease();
          *(_QWORD *)(v48 + 72) = v79;
          *(_QWORD *)(v48 + 48) = v49;
          sub_1CA273C34(v48);
          v50 = objc_allocWithZone(MEMORY[0x1E0D429C0]);
          v51 = (void *)sub_1CA85B798();
          v52 = (void *)sub_1CA85B798();
          v53 = (void *)sub_1CA85B3FC();
          swift_bridgeObjectRelease();
          v76 = objc_msgSend(v50, sel_initWithRequiredLabels_optionalLabels_properties_, v51, v52, v53);

          v80 = objc_msgSend(a1, sel_nodeIdentifiersMatchingFilter_intersectingIdentifiers_, v76, v77);
          v54 = swift_initStackObject();
          *(_OWORD *)(v54 + 16) = xmmword_1CA8D4E40;
          *(_QWORD *)(v54 + 32) = 0x656475746974614CLL;
          *(_QWORD *)(v54 + 40) = 0xE800000000000000;
          v55 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D42978]), sel_initWithComparator_value_, 4, sub_1CA85C2CC());
          swift_unknownObjectRelease();
          *(_QWORD *)(v54 + 72) = v79;
          *(_QWORD *)(v54 + 48) = v55;
          sub_1CA273C34(v54);
          v56 = objc_allocWithZone(MEMORY[0x1E0D429C0]);
          v57 = (void *)sub_1CA85B798();
          v58 = (void *)sub_1CA85B798();
          v59 = (void *)sub_1CA85B3FC();
          swift_bridgeObjectRelease();
          v75 = objc_msgSend(v56, sel_initWithRequiredLabels_optionalLabels_properties_, v57, v58, v59);

          v60 = objc_msgSend(a1, sel_nodeIdentifiersMatchingFilter_intersectingIdentifiers_, v75, v80);
          v61 = swift_initStackObject();
          *(_OWORD *)(v61 + 16) = xmmword_1CA8D4E40;
          *(_QWORD *)(v61 + 32) = 0x64757469676E6F4CLL;
          *(_QWORD *)(v61 + 40) = 0xE900000000000065;
          v62 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D42978]), sel_initWithComparator_value_, 6, sub_1CA85C2CC());
          swift_unknownObjectRelease();
          *(_QWORD *)(v61 + 72) = v79;
          *(_QWORD *)(v61 + 48) = v62;
          sub_1CA273C34(v61);
          v63 = objc_allocWithZone(MEMORY[0x1E0D429C0]);
          v64 = (void *)sub_1CA85B798();
          v65 = (void *)sub_1CA85B798();
          v66 = (void *)sub_1CA85B3FC();
          swift_bridgeObjectRelease();
          v67 = objc_msgSend(v63, sel_initWithRequiredLabels_optionalLabels_properties_, v64, v65, v66);

          v68 = objc_msgSend(a1, sel_nodeIdentifiersMatchingFilter_intersectingIdentifiers_, v67, v60);
          v69 = swift_allocObject();
          *(_QWORD *)(v69 + 16) = a1;
          *(_QWORD *)(v69 + 24) = &v87;
          v70 = swift_allocObject();
          *(_QWORD *)(v70 + 16) = sub_1CA273C10;
          *(_QWORD *)(v70 + 24) = v69;
          aBlock[4] = sub_1CA26A1BC;
          aBlock[5] = v70;
          aBlock[0] = MEMORY[0x1E0C809B0];
          aBlock[1] = 1107296256;
          aBlock[2] = sub_1CA49B2D0;
          aBlock[3] = &block_descriptor_0;
          v71 = _Block_copy(aBlock);
          v72 = v81;
          swift_retain();
          swift_release();
          objc_msgSend(v68, sel_enumerateIdentifiersWithBlock_, v71);
          swift_unknownObjectRelease();

          _Block_release(v71);
          LOBYTE(v67) = swift_isEscapingClosureAtFileLocation();
          swift_release();
          if ((v67 & 1) == 0)
          {
            v73 = v87;
            result = swift_release();
            *v82 = v73;
            return result;
          }
          __break(1u);
          while (1)
          {
LABEL_19:
            swift_getErrorValue();
            sub_1CA85C308();
            sub_1CA85C044();
            __break(1u);
          }
        }
        goto LABEL_12;
      }
    }
    swift_unknownObjectRelease();

    swift_bridgeObjectRelease();
    swift_release_n();
    goto LABEL_14;
  }

  *a4 = v8;
  return swift_bridgeObjectRelease();
}

id sub_1CA271448(uint64_t a1, int a2, id a3, _QWORD **a4)
{
  id result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v11;
  unint64_t v12;
  _QWORD *v13;

  result = objc_msgSend(a3, sel_nodeForIdentifier_, a1);
  if (result)
  {
    swift_getObjectType();
    v6 = sub_1CA3F3BDC();
    v8 = v7;
    v9 = *a4;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *a4 = v9;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v9 = sub_1CA26BCE4(0, v9[2] + 1, 1, v9);
      *a4 = v9;
    }
    v12 = v9[2];
    v11 = v9[3];
    if (v12 >= v11 >> 1)
    {
      v9 = sub_1CA26BCE4((_QWORD *)(v11 > 1), v12 + 1, 1, v9);
      *a4 = v9;
    }
    v9[2] = v12 + 1;
    v13 = &v9[2 * v12];
    v13[4] = v6;
    v13[5] = v8;
    return (id)swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1CA271678(int a1, void *aBlock, void *a3)
{
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  _QWORD *v9;

  v3[2] = a3;
  v3[3] = _Block_copy(aBlock);
  v5 = sub_1CA85B534();
  v7 = v6;
  v3[4] = v6;
  v8 = a3;
  v9 = (_QWORD *)swift_task_alloc();
  v3[5] = v9;
  *v9 = v3;
  v9[1] = sub_1CA273C30;
  v9[4] = v7;
  v9[5] = v8;
  v9[3] = v5;
  return swift_task_switch();
}

uint64_t OneUpRelatedRequestHandler.requestAssetLocalIdentifiersWithSceneOverlap(from:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[4] = a2;
  v3[5] = v2;
  v3[3] = a1;
  return swift_task_switch();
}

uint64_t sub_1CA271734()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  void *v8;

  v1 = v0[5];
  v2 = OBJC_IVAR___PGOneUpRelatedRequestHandler__graphManager;
  if (*(_QWORD *)(v1 + OBJC_IVAR___PGOneUpRelatedRequestHandler__graphManager))
  {
    v3 = *(_QWORD *)(v1 + OBJC_IVAR___PGOneUpRelatedRequestHandler__graphManager);
LABEL_3:
    v0[6] = v3;
    v5 = v0[3];
    v4 = v0[4];
    swift_retain();
    v6 = swift_task_alloc();
    v0[7] = v6;
    *(_QWORD *)(v6 + 16) = v5;
    *(_QWORD *)(v6 + 24) = v4;
    return swift_task_switch();
  }
  v8 = *(void **)(v1 + OBJC_IVAR___PGOneUpRelatedRequestHandler_photoLibrary);
  type metadata accessor for GraphManager();
  swift_allocObject();
  *(_QWORD *)(v1 + v2) = GraphManager.init(with:tmpGraphDirectoryName:)(v8, 0, 0);
  result = swift_release();
  v3 = *(_QWORD *)(v1 + v2);
  if (v3)
  {
    swift_retain();
    goto LABEL_3;
  }
  __break(1u);
  return result;
}

uint64_t sub_1CA271830()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = v0[7];
  v2 = swift_task_alloc();
  v0[8] = v2;
  *(_QWORD *)(v2 + 16) = sub_1CA2726F0;
  *(_QWORD *)(v2 + 24) = v1;
  v3 = (_QWORD *)swift_task_alloc();
  v0[9] = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED872270);
  *v3 = v0;
  v3[1] = sub_1CA2718D4;
  return sub_1CA85A8BC();
}

uint64_t sub_1CA2718D4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;

  v2 = *v1;
  *(_QWORD *)(v2 + 80) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  swift_release();
  swift_task_dealloc();
  v4 = *(_QWORD *)(v2 + 16);
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v2 + 8))(v4);
}

uint64_t sub_1CA271974()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1CA2719B0()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1CA2719EC(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t inited;
  id v10;
  void *v11;
  _QWORD *v12;
  void *v13;
  void *v14;
  id v15;
  id v16;
  id v17;
  id v18;
  void *v19;
  id v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  objc_class *v24;
  char *v25;
  id v26;
  void *v27;
  id v28;
  uint64_t v29;
  id v30;
  id v31;
  id v32;
  void *v33;
  void *v34;
  void *v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  id v45;
  char **v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char **v50;
  unint64_t v51;
  _QWORD *v52;
  id v53;
  void *v54;
  id v55;
  id v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  unint64_t v61;
  unint64_t v62;
  void *v63;
  id v64;
  unint64_t v65;
  id v66;
  id v67;
  void *v68;
  void *v69;
  void *v70;
  id v71;
  char *v72;
  void *v73;
  uint64_t v75;
  uint64_t v76;
  id v77;
  _QWORD *v78;
  id v79;
  objc_super v80;
  uint64_t v81;

  v5 = v4;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF94B690);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1CA8D4E40;
  *(_QWORD *)(inited + 32) = 0xD000000000000010;
  *(_QWORD *)(inited + 40) = 0x80000001CA889240;
  *(_QWORD *)(inited + 72) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(inited + 48) = a2;
  *(_QWORD *)(inited + 56) = a3;
  swift_bridgeObjectRetain();
  sub_1CA273C34(inited);
  v10 = objc_allocWithZone(MEMORY[0x1E0D429C0]);
  v11 = (void *)sub_1CA85B798();
  v12 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v13 = (void *)sub_1CA85B798();
  v14 = (void *)sub_1CA85B3FC();
  swift_bridgeObjectRelease();
  v15 = objc_msgSend(v10, sel_initWithRequiredLabels_optionalLabels_properties_, v11, v13, v14);

  v73 = v15;
  v16 = objc_msgSend(a1, sel_nodeIdentifiersMatchingFilter_, v15);
  v17 = objc_msgSend(v16, sel_firstElement);

  v18 = objc_msgSend(a1, sel_nodeForIdentifier_, v17);
  if (!v18)
  {
    v78 = v12;
    v63 = v73;
LABEL_28:

    *a4 = v78;
    return;
  }
  v75 = v5;
  v19 = v18;
  v20 = objc_msgSend(v18, sel_labels);
  v21 = sub_1CA85B984();

  v22 = objc_msgSend(v19, sel_properties);
  sub_1CA24EEC0(0, (unint64_t *)&qword_1EF94D620);
  v23 = sub_1CA85B414();

  v24 = (objc_class *)type metadata accessor for Node();
  v25 = (char *)objc_allocWithZone(v24);
  *(_QWORD *)&v25[OBJC_IVAR____TtC11PhotosGraph4Node_identifier] = v17;
  *(_QWORD *)&v25[OBJC_IVAR____TtC11PhotosGraph4Node_labels] = v21;
  *(_QWORD *)&v25[OBJC_IVAR____TtC11PhotosGraph4Node_properties] = v23;
  v80.receiver = v25;
  v80.super_class = v24;
  v72 = (char *)objc_msgSendSuper2(&v80, sel_init);
  v26 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D42990]), sel_initWithElementIdentifier_, *(_QWORD *)&v72[OBJC_IVAR____TtC11PhotosGraph4Node_identifier]);
  v27 = a1;
  v28 = objc_msgSend(a1, sel_edgeIdentifiersWithStartNodeIdentifiers_edgeDirection_, v26, 2);

  v29 = swift_initStackObject();
  *(_OWORD *)(v29 + 16) = xmmword_1CA8D4E40;
  *(_QWORD *)(v29 + 32) = 0x6E656469666E6F63;
  *(_QWORD *)(v29 + 40) = 0xEA00000000006563;
  v30 = objc_allocWithZone(MEMORY[0x1E0D42978]);
  v81 = 0;
  v31 = objc_msgSend(v30, sel_initWithComparator_value_, 6, sub_1CA85C2CC());
  swift_unknownObjectRelease();
  *(_QWORD *)(v29 + 72) = sub_1CA24EEC0(0, (unint64_t *)&unk_1EF94B6A0);
  *(_QWORD *)(v29 + 48) = v31;
  sub_1CA273C34(v29);
  v32 = objc_allocWithZone(MEMORY[0x1E0D42988]);
  v33 = (void *)sub_1CA85B798();
  v34 = (void *)sub_1CA85B798();
  v35 = (void *)sub_1CA85B3FC();
  swift_bridgeObjectRelease();
  v36 = objc_msgSend(v32, sel_initWithRequiredLabels_optionalLabels_properties_, v33, v34, v35);

  v37 = objc_msgSend(v27, sel_edgeIdentifiersMatchingFilter_intersectingIdentifiers_, v36, v28);
  v38 = objc_msgSend(v27, sel_nodeIdentifiersOfEdgesForIdentifiers_edgeDirection_, v37, 1);
  v67 = objc_msgSend(v27, sel_edgeIdentifiersWithStartNodeIdentifiers_edgeDirection_, v38, 1);
  v77 = v27;
  v66 = objc_msgSend(v27, sel_edgeIdentifiersMatchingFilter_intersectingIdentifiers_, v36);
  v39 = objc_msgSend(v27, sel_targetsBySourceWithEdgeIdentifiers_);
  v40 = objc_msgSend(v39, sel_sources);
  v41 = objc_msgSend(v40, sel_indexArray);

  sub_1CA24EEC0(0, (unint64_t *)&qword_1ED8723C0);
  v42 = sub_1CA85B7B0();

  if (v42 < 0 || (v42 & 0x4000000000000000) != 0)
  {
    v64 = v39;
    v65 = swift_bridgeObjectRetain();
    v43 = (uint64_t)sub_1CA24346C(v65);
    swift_bridgeObjectRelease();
  }
  else
  {
    v43 = v42 & 0xFFFFFFFFFFFFFF8;
    v44 = v39;
    swift_bridgeObjectRetain();
  }
  v81 = v43;
  v45 = v39;
  sub_1CA273B50(&v81, v45);
  if (!v75)
  {
    swift_bridgeObjectRelease();

    v79 = v45;
    v46 = &selRef_indicatorURL;
    v76 = v81;
    v71 = v28;
    if (v81 < 0 || (v81 & 0x4000000000000000) != 0)
    {
      swift_bridgeObjectRetain();
      v47 = sub_1CA85C08C();
      swift_release();
    }
    else
    {
      v47 = *(_QWORD *)(v81 + 16);
    }
    v69 = v37;
    v70 = v36;
    v68 = v38;
    if (!v47)
    {
      v78 = (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_27:

      swift_release();
      swift_unknownObjectRelease();

      v63 = v71;
      goto LABEL_28;
    }
    if (v47 >= 1)
    {
      v48 = 0;
      v49 = v76;
      v78 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v50 = &selRef_sortedMemoryNodesToEnrichForMemoryNodes_localMemoryByUniqueIdentifier_graph_;
      v51 = 0x1E0D42000;
      do
      {
        if ((v76 & 0xC000000000000001) != 0)
          v53 = (id)MEMORY[0x1CAA4DD64](v48, v49);
        else
          v53 = *(id *)(v49 + 8 * v48 + 32);
        v54 = v53;
        v55 = objc_msgSend(objc_allocWithZone(*(Class *)(v51 + 2448)), v46[213], objc_msgSend(v53, v50[395]));
        v56 = objc_msgSend(v79, sel_targetsForSources_, v55);

        if ((uint64_t)objc_msgSend(v56, sel_count) >= 15)
        {
          if (objc_msgSend(v77, sel_nodeForIdentifier_, objc_msgSend(v54, v50[395])))
          {
            swift_getObjectType();
            v57 = sub_1CA3F3BDC();
            v59 = v58;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
              v60 = v78;
            else
              v60 = sub_1CA26BCE4(0, v78[2] + 1, 1, v78);
            v62 = v60[2];
            v61 = v60[3];
            if (v62 >= v61 >> 1)
              v60 = sub_1CA26BCE4((_QWORD *)(v61 > 1), v62 + 1, 1, v60);
            v60[2] = v62 + 1;
            v78 = v60;
            v52 = &v60[2 * v62];
            v52[4] = v57;
            v52[5] = v59;
            swift_unknownObjectRelease();
            v51 = 0x1E0D42000uLL;
            v46 = &selRef_indicatorURL;
            v49 = v76;
          }
          v50 = &selRef_sortedMemoryNodesToEnrichForMemoryNodes_localMemoryByUniqueIdentifier_graph_;
        }
        ++v48;

      }
      while (v47 != v48);
      goto LABEL_27;
    }
    __break(1u);
  }

  swift_release();
  __break(1u);
}

uint64_t sub_1CA272344(int a1, void *aBlock, void *a3)
{
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  _QWORD *v9;

  v3[2] = a3;
  v3[3] = _Block_copy(aBlock);
  v5 = sub_1CA85B534();
  v7 = v6;
  v3[4] = v6;
  v8 = a3;
  v9 = (_QWORD *)swift_task_alloc();
  v3[5] = v9;
  *v9 = v3;
  v9[1] = sub_1CA2723E4;
  v9[4] = v7;
  v9[5] = v8;
  v9[3] = v5;
  return swift_task_switch();
}

uint64_t sub_1CA2723E4()
{
  void *v0;
  uint64_t *v1;
  void *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void (**v9)(_QWORD, _QWORD, _QWORD);

  v2 = v0;
  v3 = *v1;
  v4 = *(void **)(*v1 + 16);
  v5 = *v1;
  swift_task_dealloc();

  swift_bridgeObjectRelease();
  if (v0)
  {
    v6 = sub_1CA85A358();

    v7 = 0;
    v8 = (void *)v6;
  }
  else
  {
    v7 = sub_1CA85B798();
    swift_bridgeObjectRelease();
    v6 = 0;
    v8 = (void *)v7;
  }
  v9 = *(void (***)(_QWORD, _QWORD, _QWORD))(v3 + 24);
  v9[2](v9, v7, v6);

  _Block_release(v9);
  return (*(uint64_t (**)(void))(v5 + 8))();
}

id OneUpRelatedRequestHandler.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void OneUpRelatedRequestHandler.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id OneUpRelatedRequestHandler.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1CA2725A0@<X0>(void *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  return sub_1CA270768(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), a2);
}

uint64_t sub_1CA2725B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[5] = a3;
  v4[6] = a4;
  v4[3] = a1;
  v4[4] = a2;
  return swift_task_switch();
}

uint64_t sub_1CA2725D4()
{
  uint64_t v0;
  void (*v1)(void);
  void *v2;

  v1 = *(void (**)(void))(v0 + 40);
  __swift_project_boxed_opaque_existential_1(*(_QWORD **)(v0 + 32), *(_QWORD *)(*(_QWORD *)(v0 + 32) + 24));
  v2 = (void *)sub_1CA85A88C();
  v1();

  **(_QWORD **)(v0 + 24) = *(_QWORD *)(v0 + 16);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1CA272670(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v7 = *(_QWORD *)(v2 + 16);
  v6 = *(_QWORD *)(v2 + 24);
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v8;
  *v8 = v3;
  v8[1] = sub_1CA273C28;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1EF94B5F8 + dword_1EF94B5F8))(a1, a2, v7, v6);
}

void sub_1CA2726F0(void *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  sub_1CA2719EC(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), a2);
}

uint64_t sub_1CA272708(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v7 = *(_QWORD *)(v2 + 16);
  v6 = *(_QWORD *)(v2 + 24);
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v8;
  *v8 = v3;
  v8[1] = sub_1CA24F0E4;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1EF94B5F8 + dword_1EF94B5F8))(a1, a2, v7, v6);
}

uint64_t type metadata accessor for OneUpRelatedRequestHandler()
{
  return objc_opt_self();
}

uint64_t method lookup function for OneUpRelatedRequestHandler()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of OneUpRelatedRequestHandler.__allocating_init(with:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t sub_1CA2727D0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  _QWORD *v5;

  v2 = v0[2];
  v3 = (void *)v0[3];
  v4 = (void *)v0[4];
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v5;
  *v5 = v1;
  v5[1] = sub_1CA24F0E4;
  return ((uint64_t (*)(int, void *, void *))((char *)&dword_1EF94B650 + dword_1EF94B650))(v2, v3, v4);
}

uint64_t sub_1CA272840()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int *v4;
  _QWORD *v5;

  v2 = v0[2];
  v3 = v0[3];
  v4 = (int *)v0[4];
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v5;
  *v5 = v1;
  v5[1] = sub_1CA273C28;
  return ((uint64_t (*)(uint64_t, uint64_t, int *))((char *)&dword_1EF958CC8 + dword_1EF958CC8))(v2, v3, v4);
}

uint64_t sub_1CA2728C0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  _QWORD *v5;

  v2 = v0[2];
  v3 = (void *)v0[3];
  v4 = (void *)v0[4];
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v5;
  *v5 = v1;
  v5[1] = sub_1CA273C28;
  return ((uint64_t (*)(int, void *, void *))((char *)&dword_1EF94B670 + dword_1EF94B670))(v2, v3, v4);
}

uint64_t sub_1CA272934(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = (int *)v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1CA273C28;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, int *))((char *)&dword_1EF958CD0 + dword_1EF958CD0))(a1, v4, v5, v6);
}

uint64_t sub_1CA2729B8(id *__src, id *a2, unint64_t a3, void **a4, void *a5)
{
  id *v5;
  id *v6;
  int64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void **v13;
  void *v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  void **v25;
  id *v26;
  char *v27;
  id *v28;
  id *v29;
  char *v30;
  void *v31;
  void *v32;
  void *v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  uint64_t result;
  char *v47;
  id *v49;
  void **v50;
  id *v51;
  id *v52;
  id *v53;
  char *v54;
  void **v55;
  id *v56;

  v5 = a2;
  v6 = __src;
  v7 = (char *)a2 - (char *)__src;
  v8 = (char *)a2 - (char *)__src + 7;
  if ((char *)a2 - (char *)__src >= 0)
    v8 = (char *)a2 - (char *)__src;
  v9 = v8 >> 3;
  v10 = a3 - (_QWORD)a2;
  v11 = a3 - (_QWORD)a2 + 7;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v11 = a3 - (_QWORD)a2;
  v12 = v11 >> 3;
  v56 = __src;
  v55 = a4;
  if (v9 >= v11 >> 3)
  {
    if (v10 < -7)
      goto LABEL_44;
    if (a4 != a2 || &a2[v12] <= a4)
      memmove(a4, a2, 8 * v12);
    v27 = (char *)&a4[v12];
    v54 = v27;
    v56 = v5;
    if (v6 >= v5 || v10 < 8)
      goto LABEL_43;
    v28 = (id *)(a3 - 8);
    v29 = v5;
    v51 = v6;
    while (1)
    {
      v53 = v5;
      v47 = v27;
      v49 = v28 + 1;
      v32 = (void *)*((_QWORD *)v27 - 1);
      v27 -= 8;
      v31 = v32;
      v33 = *--v29;
      v34 = v31;
      v35 = v33;
      v36 = objc_msgSend(v34, sel_unsignedIntegerValue);
      v37 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D42990]), sel_initWithElementIdentifier_, v36);
      v38 = objc_msgSend(a5, sel_targetsForSources_, v37);

      v39 = objc_msgSend(v38, sel_count);
      v40 = objc_msgSend(v35, sel_unsignedIntegerValue);
      v41 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D42990]), sel_initWithElementIdentifier_, v40);
      v42 = objc_msgSend(a5, sel_targetsForSources_, v41);

      v43 = objc_msgSend(v42, sel_count);
      if ((uint64_t)v43 < (uint64_t)v39)
        break;
      v54 = v27;
      v29 = v53;
      if (v49 < (id *)v47 || v28 >= (id *)v47)
      {
        *v28 = *(id *)v27;
        goto LABEL_31;
      }
      if (v49 != (id *)v47)
        *v28 = *(id *)v27;
      v30 = (char *)a4;
      if (v53 <= v51)
        goto LABEL_43;
LABEL_32:
      --v28;
      v5 = v29;
      if (v27 <= v30)
        goto LABEL_43;
    }
    v27 = v47;
    if (v49 != v53 || v28 >= v53)
      *v28 = *v29;
    v56 = v29;
LABEL_31:
    v30 = (char *)a4;
    if (v29 <= v51)
      goto LABEL_43;
    goto LABEL_32;
  }
  if (v7 >= -7)
  {
    v13 = a4;
    if (a4 != __src || &__src[v9] <= a4)
      memmove(a4, __src, 8 * v9);
    v54 = (char *)&a4[v9];
    if ((unint64_t)v5 < a3 && v7 >= 8)
    {
      do
      {
        v50 = v6;
        v52 = v5;
        v14 = *v13;
        v15 = *v5;
        v16 = v14;
        v17 = objc_msgSend(v15, sel_unsignedIntegerValue);
        v18 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D42990]), sel_initWithElementIdentifier_, v17);
        v19 = objc_msgSend(a5, sel_targetsForSources_, v18);

        v20 = objc_msgSend(v19, sel_count);
        v21 = objc_msgSend(v16, sel_unsignedIntegerValue);
        v22 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D42990]), sel_initWithElementIdentifier_, v21);
        v23 = objc_msgSend(a5, sel_targetsForSources_, v22);

        v24 = objc_msgSend(v23, sel_count);
        if ((uint64_t)v24 >= (uint64_t)v20)
        {
          v25 = v50;
          if (v50 != v13)
            *v50 = *v13;
          v55 = ++v13;
          v26 = v52;
        }
        else
        {
          v25 = v50;
          v26 = v52 + 1;
          if (v50 < v52 || v50 >= v26 || v50 != v52)
            *v50 = *v52;
        }
        v6 = v25 + 1;
        if (v13 >= &a4[v9])
          break;
        v5 = v26;
      }
      while ((unint64_t)v26 < a3);
      v56 = v6;
    }
LABEL_43:
    sub_1CA3A72D0(&v56, &v55, &v54);
    return 1;
  }
LABEL_44:

  result = sub_1CA85C0D4();
  __break(1u);
  return result;
}

void sub_1CA272E78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, void *a5)
{
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  void *v19;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;

  if (a3 != a2)
  {
    v24 = *a4;
    v5 = *a4 + 8 * a3 - 8;
LABEL_5:
    v6 = *(void **)(v24 + 8 * a3);
    v7 = a1;
    v22 = v5;
    v25 = a3;
    while (1)
    {
      v8 = *(void **)v5;
      v9 = v6;
      v10 = v8;
      v11 = objc_msgSend(v9, sel_unsignedIntegerValue);
      v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D42990]), sel_initWithElementIdentifier_, v11);
      v13 = objc_msgSend(a5, sel_targetsForSources_, v12);

      v14 = objc_msgSend(v13, sel_count);
      v15 = objc_msgSend(v10, sel_unsignedIntegerValue);
      v16 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D42990]), sel_initWithElementIdentifier_, v15);
      v17 = objc_msgSend(a5, sel_targetsForSources_, v16);

      v18 = objc_msgSend(v17, sel_count);
      if ((uint64_t)v18 >= (uint64_t)v14)
      {
LABEL_4:
        a3 = v25 + 1;
        v5 = v22 + 8;
        if (v25 + 1 == a2)
          return;
        goto LABEL_5;
      }
      if (!v24)
        break;
      v19 = *(void **)v5;
      v6 = *(void **)(v5 + 8);
      *(_QWORD *)v5 = v6;
      *(_QWORD *)(v5 + 8) = v19;
      v5 -= 8;
      if (v25 == ++v7)
        goto LABEL_4;
    }
    __break(1u);
  }
}

void sub_1CA273038(uint64_t *a1, void *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id *v25;
  uint64_t v26;
  void *v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  void *v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  void *v57;
  unint64_t v58;
  unint64_t v59;
  char *v60;
  char *v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  BOOL v73;
  unint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  BOOL v83;
  uint64_t v84;
  char v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  BOOL v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  unint64_t v101;
  char *v102;
  uint64_t v103;
  unint64_t v104;
  char *v105;
  uint64_t v106;
  id *v107;
  unint64_t v108;
  id v109;
  unint64_t v110;
  char *v111;
  uint64_t v112;
  unint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  id *v117;
  id *v118;
  unint64_t v119;
  id v120;
  char *v121;
  unint64_t v122;
  uint64_t *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  id v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  id v132;
  uint64_t v133;
  char *v134;
  void **v135;
  char *v136;
  char *v137;
  char *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  id v142;
  id v143;
  id v144;
  id *v145;
  uint64_t v146;
  uint64_t v147;

  v4 = a1[1];
  v142 = a2;
  v5 = sub_1CA85C254();
  if (v5 >= v4)
  {
    if (v4 < 0)
      goto LABEL_133;
    if (v4)
    {
      v9 = v142;
      sub_1CA272E78(0, v4, 1, a1, v9);

    }
    else
    {

    }
    return;
  }
  if (v4 >= 0)
    v6 = v4;
  else
    v6 = v4 + 1;
  if (v4 < -1)
    goto LABEL_141;
  v126 = v5;
  v140 = v2;
  v123 = a1;
  if (v4 < 2)
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
    v147 = MEMORY[0x1E0DEE9D8];
    v135 = (void **)((MEMORY[0x1E0DEE9D8] & 0xFFFFFFFFFFFFFF8) + 32);
    if (v4 != 1)
    {
      v14 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
LABEL_99:
      if (v14 >= 2)
      {
        v112 = *v123;
        v146 = *v123;
        do
        {
          v113 = v14 - 2;
          if (v14 < 2)
            goto LABEL_128;
          if (!v112)
            goto LABEL_140;
          v139 = (uint64_t)v10;
          v114 = *(_QWORD *)&v10[16 * v113 + 32];
          v115 = *(_QWORD *)&v10[16 * v14 + 24];
          v116 = *(_QWORD *)&v10[16 * v14 + 16];
          v117 = (id *)(v112 + 8 * v114);
          v118 = (id *)(v112 + 8 * v116);
          v119 = v112 + 8 * v115;
          v120 = v142;
          sub_1CA2729B8(v117, v118, v119, v135, v120);
          if (v140)
            goto LABEL_111;

          if (v115 < v114)
            goto LABEL_129;
          v10 = (char *)v139;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v10 = sub_1CA3A78E0(v139);
          if (v113 >= *((_QWORD *)v10 + 2))
            goto LABEL_130;
          v121 = &v10[16 * v113 + 32];
          *(_QWORD *)v121 = v114;
          *((_QWORD *)v121 + 1) = v115;
          v122 = *((_QWORD *)v10 + 2);
          if (v14 > v122)
            goto LABEL_131;
          memmove(&v10[16 * v14 + 16], &v10[16 * v14 + 32], 16 * (v122 - v14));
          *((_QWORD *)v10 + 2) = v122 - 1;
          v14 = v122 - 1;
          v112 = v146;
        }
        while (v122 > 2);
      }
      swift_bridgeObjectRelease();
      *(_QWORD *)((v147 & 0xFFFFFFFFFFFFF8) + 0x10) = 0;
      sub_1CA85B7C8();

      swift_bridgeObjectRelease();
      return;
    }
  }
  else
  {
    v7 = v6 >> 1;
    sub_1CA24EEC0(0, (unint64_t *)&qword_1ED8723C0);
    v8 = sub_1CA85B81C();
    *(_QWORD *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10) = v7;
    v135 = (void **)((v8 & 0xFFFFFFFFFFFFFF8) + 32);
    v147 = v8;
  }
  v11 = 0;
  v12 = *a1;
  v125 = *a1 + 16;
  v10 = (char *)MEMORY[0x1E0DEE9D8];
  v124 = *a1 - 8;
  v13 = v4;
  v129 = v4;
  v141 = *a1;
  while (1)
  {
    v15 = v11;
    v16 = v11 + 1;
    v130 = v11;
    if (v11 + 1 < v13)
    {
      v136 = v10;
      v17 = *(void **)(v12 + 8 * v11);
      v143 = *(id *)(v12 + 8 * v16);
      v18 = v17;
      v19 = objc_msgSend(v143, sel_unsignedIntegerValue);
      v20 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D42990]), sel_initWithElementIdentifier_, v19);
      v21 = objc_msgSend(v142, sel_targetsForSources_, v20);

      v132 = objc_msgSend(v21, sel_count);
      v15 = v130;
      v22 = objc_msgSend(v18, sel_unsignedIntegerValue);
      v23 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D42990]), sel_initWithElementIdentifier_, v22);
      v24 = objc_msgSend(v142, sel_targetsForSources_, v23);

      v127 = objc_msgSend(v24, sel_count);
      v16 = v130 + 2;
      if (v130 + 2 < v13)
      {
        v25 = (id *)(v125 + 8 * v130);
        while (1)
        {
          v26 = v16;
          v27 = *(v25 - 1);
          v28 = *v25;
          v29 = v27;
          v30 = objc_msgSend(v28, sel_unsignedIntegerValue);
          v31 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D42990]), sel_initWithElementIdentifier_, v30);
          v32 = objc_msgSend(v142, sel_targetsForSources_, v31);

          v33 = objc_msgSend(v32, sel_count);
          v34 = objc_msgSend(v29, sel_unsignedIntegerValue);
          v35 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D42990]), sel_initWithElementIdentifier_, v34);
          v36 = objc_msgSend(v142, sel_targetsForSources_, v35);

          v37 = objc_msgSend(v36, sel_count);
          if ((uint64_t)v127 < (uint64_t)v132 == (uint64_t)v37 >= (uint64_t)v33)
            break;
          v16 = v26 + 1;
          ++v25;
          v13 = v129;
          if (v129 == v26 + 1)
          {
            v16 = v129;
            goto LABEL_22;
          }
        }
        v13 = v129;
        v16 = v26;
LABEL_22:
        v15 = v130;
      }
      v10 = v136;
      v12 = v141;
      if ((uint64_t)v127 < (uint64_t)v132)
      {
        if (v16 < v15)
          goto LABEL_134;
        if (v15 < v16)
        {
          v38 = (uint64_t *)(v124 + 8 * v16);
          v39 = v16;
          v40 = v15;
          v41 = (uint64_t *)(v141 + 8 * v15);
          do
          {
            if (v40 != --v39)
            {
              if (!v141)
                goto LABEL_139;
              v42 = *v41;
              *v41 = *v38;
              *v38 = v42;
            }
            ++v40;
            --v38;
            ++v41;
          }
          while (v40 < v39);
        }
      }
    }
    if (v16 < v13)
    {
      if (__OFSUB__(v16, v15))
        goto LABEL_132;
      if (v16 - v15 < v126)
        break;
    }
LABEL_49:
    if (v16 < v15)
      goto LABEL_127;
    v131 = v16;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v10 = sub_1CA3A7130(0, *((_QWORD *)v10 + 2) + 1, 1, v10);
    v59 = *((_QWORD *)v10 + 2);
    v58 = *((_QWORD *)v10 + 3);
    v14 = v59 + 1;
    v12 = v141;
    if (v59 >= v58 >> 1)
    {
      v111 = sub_1CA3A7130((char *)(v58 > 1), v59 + 1, 1, v10);
      v12 = v141;
      v10 = v111;
    }
    *((_QWORD *)v10 + 2) = v14;
    v60 = v10 + 32;
    v61 = &v10[16 * v59 + 32];
    *(_QWORD *)v61 = v15;
    *((_QWORD *)v61 + 1) = v16;
    if (v59)
    {
      v138 = v10;
      v134 = v10 + 32;
      while (1)
      {
        v62 = v14 - 1;
        if (v14 >= 4)
        {
          v67 = &v60[16 * v14];
          v68 = *((_QWORD *)v67 - 8);
          v69 = *((_QWORD *)v67 - 7);
          v73 = __OFSUB__(v69, v68);
          v70 = v69 - v68;
          if (v73)
            goto LABEL_116;
          v72 = *((_QWORD *)v67 - 6);
          v71 = *((_QWORD *)v67 - 5);
          v73 = __OFSUB__(v71, v72);
          v65 = v71 - v72;
          v66 = v73;
          if (v73)
            goto LABEL_117;
          v74 = v14 - 2;
          v75 = &v60[16 * v14 - 32];
          v77 = *(_QWORD *)v75;
          v76 = *((_QWORD *)v75 + 1);
          v73 = __OFSUB__(v76, v77);
          v78 = v76 - v77;
          if (v73)
            goto LABEL_119;
          v73 = __OFADD__(v65, v78);
          v79 = v65 + v78;
          if (v73)
            goto LABEL_122;
          if (v79 >= v70)
          {
            v97 = &v60[16 * v62];
            v99 = *(_QWORD *)v97;
            v98 = *((_QWORD *)v97 + 1);
            v73 = __OFSUB__(v98, v99);
            v100 = v98 - v99;
            if (v73)
              goto LABEL_126;
            v90 = v65 < v100;
            goto LABEL_87;
          }
        }
        else
        {
          if (v14 != 3)
          {
            v91 = *((_QWORD *)v10 + 4);
            v92 = *((_QWORD *)v10 + 5);
            v73 = __OFSUB__(v92, v91);
            v84 = v92 - v91;
            v85 = v73;
            goto LABEL_81;
          }
          v64 = *((_QWORD *)v10 + 4);
          v63 = *((_QWORD *)v10 + 5);
          v73 = __OFSUB__(v63, v64);
          v65 = v63 - v64;
          v66 = v73;
        }
        if ((v66 & 1) != 0)
          goto LABEL_118;
        v74 = v14 - 2;
        v80 = &v60[16 * v14 - 32];
        v82 = *(_QWORD *)v80;
        v81 = *((_QWORD *)v80 + 1);
        v83 = __OFSUB__(v81, v82);
        v84 = v81 - v82;
        v85 = v83;
        if (v83)
          goto LABEL_121;
        v86 = &v60[16 * v62];
        v88 = *(_QWORD *)v86;
        v87 = *((_QWORD *)v86 + 1);
        v73 = __OFSUB__(v87, v88);
        v89 = v87 - v88;
        if (v73)
          goto LABEL_124;
        if (__OFADD__(v84, v89))
          goto LABEL_125;
        if (v84 + v89 >= v65)
        {
          v90 = v65 < v89;
LABEL_87:
          if (v90)
            v62 = v74;
          goto LABEL_89;
        }
LABEL_81:
        if ((v85 & 1) != 0)
          goto LABEL_120;
        v93 = &v60[16 * v62];
        v95 = *(_QWORD *)v93;
        v94 = *((_QWORD *)v93 + 1);
        v73 = __OFSUB__(v94, v95);
        v96 = v94 - v95;
        if (v73)
          goto LABEL_123;
        if (v96 < v84)
          goto LABEL_14;
LABEL_89:
        v101 = v62 - 1;
        if (v62 - 1 >= v14)
        {
          __break(1u);
LABEL_113:
          __break(1u);
LABEL_114:
          __break(1u);
LABEL_115:
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
          goto LABEL_136;
        }
        if (!v12)
          goto LABEL_138;
        v102 = &v60[16 * v101];
        v103 = *(_QWORD *)v102;
        v104 = v62;
        v105 = &v60[16 * v62];
        v106 = *((_QWORD *)v105 + 1);
        v145 = (id *)(v12 + 8 * *(_QWORD *)v102);
        v107 = (id *)(v12 + 8 * *(_QWORD *)v105);
        v108 = v12 + 8 * v106;
        v109 = v142;
        sub_1CA2729B8(v145, v107, v108, v135, v109);
        if (v140)
        {
LABEL_111:
          swift_bridgeObjectRelease();

          *(_QWORD *)((v147 & 0xFFFFFFFFFFFFF8) + 0x10) = 0;
          sub_1CA85B7C8();

          swift_bridgeObjectRelease();
          return;
        }

        if (v106 < v103)
          goto LABEL_113;
        v10 = v138;
        if (v104 > *((_QWORD *)v138 + 2))
          goto LABEL_114;
        *(_QWORD *)v102 = v103;
        v60 = v134;
        *(_QWORD *)&v134[16 * v101 + 8] = v106;
        v110 = *((_QWORD *)v138 + 2);
        if (v104 >= v110)
          goto LABEL_115;
        v140 = 0;
        v14 = v110 - 1;
        memmove(v105, v105 + 16, 16 * (v110 - 1 - v104));
        *((_QWORD *)v138 + 2) = v110 - 1;
        v12 = v141;
        if (v110 <= 2)
          goto LABEL_14;
      }
    }
    v14 = 1;
LABEL_14:
    v13 = v129;
    v11 = v131;
    if (v131 >= v129)
      goto LABEL_99;
  }
  if (__OFADD__(v15, v126))
    goto LABEL_135;
  if (v15 + v126 >= v13)
    v43 = v13;
  else
    v43 = v15 + v126;
  if (v43 >= v15)
  {
    if (v16 != v43)
    {
      v137 = v10;
      v44 = v124 + 8 * v16;
      v128 = v43;
      do
      {
        v45 = *(void **)(v12 + 8 * v16);
        v133 = v44;
        while (1)
        {
          v46 = v16;
          v47 = *(void **)v44;
          v144 = v45;
          v48 = v47;
          v49 = objc_msgSend(v144, sel_unsignedIntegerValue);
          v50 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D42990]), sel_initWithElementIdentifier_, v49);
          v51 = objc_msgSend(v142, sel_targetsForSources_, v50);

          v52 = objc_msgSend(v51, sel_count);
          v53 = objc_msgSend(v48, sel_unsignedIntegerValue);
          v54 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D42990]), sel_initWithElementIdentifier_, v53);
          v55 = objc_msgSend(v142, sel_targetsForSources_, v54);

          v56 = objc_msgSend(v55, sel_count);
          if ((uint64_t)v56 >= (uint64_t)v52)
            break;
          v12 = v141;
          if (!v141)
            goto LABEL_137;
          v16 = v46;
          v57 = *(void **)v44;
          v45 = *(void **)(v44 + 8);
          *(_QWORD *)v44 = v45;
          *(_QWORD *)(v44 + 8) = v57;
          v44 -= 8;
          if (v46 == ++v15)
            goto LABEL_42;
        }
        v12 = v141;
        v16 = v46;
LABEL_42:
        ++v16;
        v15 = v130;
        v44 = v133 + 8;
      }
      while (v16 != v128);
      v16 = v128;
      v10 = v137;
    }
    goto LABEL_49;
  }
LABEL_136:
  __break(1u);
LABEL_137:

  __break(1u);
LABEL_138:

  __break(1u);
LABEL_139:

  __break(1u);
LABEL_140:

  __break(1u);
LABEL_141:

  sub_1CA85C038();
  __break(1u);
}

void sub_1CA273B50(uint64_t *a1, void *a2)
{
  uint64_t v3;
  id v4;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  id v7;
  uint64_t v8[2];

  v3 = *a1;
  v4 = a2;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v3;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    sub_1CA3C718C();
  v6 = *(_QWORD *)(v3 + 16);
  v8[0] = v3 + 32;
  v8[1] = v6;
  v7 = v4;
  sub_1CA273038(v8, v7);

  sub_1CA85BF54();
}

uint64_t sub_1CA273BEC()
{
  uint64_t v0;

  return swift_deallocObject();
}

id sub_1CA273C10(uint64_t a1, int a2)
{
  uint64_t v2;

  return sub_1CA271448(a1, a2, *(id *)(v2 + 16), *(_QWORD ***)(v2 + 24));
}

uint64_t sub_1CA273C18()
{
  return swift_deallocObject();
}

unint64_t sub_1CA273C34(uint64_t a1)
{
  return sub_1CA274B00(a1, &qword_1EF94AEB8, &qword_1EF94B720, (uint64_t (*)(uint64_t *, unint64_t))sub_1CA266A44);
}

unint64_t sub_1CA273C50(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  unint64_t result;
  char v9;
  uint64_t *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED872530);
  v2 = (_QWORD *)sub_1CA85C0C8();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (_BYTE *)(a1 + 48);
  while (1)
  {
    v5 = *((_QWORD *)v4 - 2);
    v6 = *((_QWORD *)v4 - 1);
    v7 = *v4;
    swift_bridgeObjectRetain();
    result = sub_1CA25081C(v5, v6);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v10 = (uint64_t *)(v2[6] + 16 * result);
    *v10 = v5;
    v10[1] = v6;
    *(_BYTE *)(v2[7] + result) = v7;
    v11 = v2[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v4 += 24;
    v2[2] = v13;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1CA273D60(uint64_t a1)
{
  return sub_1CA2752F0(a1, &qword_1EF94B0C0);
}

unint64_t sub_1CA273D6C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t result;
  char v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  _QWORD v24[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94B730);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(a1 + 16))
  {
    v7 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94B1C0);
  v6 = sub_1CA85C0C8();
  v7 = (_QWORD *)v6;
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  v9 = &v5[*(int *)(v2 + 48)];
  v10 = v6 + 64;
  v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v24[1] = a1;
  v12 = a1 + v11;
  v13 = *(_QWORD *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_1CA2684BC(v12, (uint64_t)v5, &qword_1EF94B730);
    result = sub_1CA2509B8((uint64_t)v5);
    if ((v15 & 1) != 0)
      break;
    v16 = result;
    *(_QWORD *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v17 = v7[6];
    v18 = sub_1CA85AAFC();
    (*(void (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v17 + *(_QWORD *)(*(_QWORD *)(v18 - 8) + 72) * v16, v5, v18);
    v19 = v7[7];
    v20 = sub_1CA85B0FC();
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v19 + *(_QWORD *)(*(_QWORD *)(v20 - 8) + 72) * v16, v9, v20);
    v21 = v7[2];
    v22 = __OFADD__(v21, 1);
    v23 = v21 + 1;
    if (v22)
      goto LABEL_11;
    v7[2] = v23;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1CA273F24(uint64_t a1)
{
  return sub_1CA2752F0(a1, &qword_1EF94B728);
}

unint64_t sub_1CA273F30(uint64_t a1)
{
  return sub_1CA27541C(a1, &qword_1EF94AE70);
}

unint64_t sub_1CA273F3C(uint64_t a1)
{
  return sub_1CA2752F0(a1, &qword_1EF94B1B8);
}

unint64_t sub_1CA273F48(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  unint64_t result;
  char v9;
  uint64_t *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94B0F0);
  v2 = (_QWORD *)sub_1CA85C0C8();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (_BYTE *)(a1 + 48);
  while (1)
  {
    v5 = *((_QWORD *)v4 - 2);
    v6 = *((_QWORD *)v4 - 1);
    v7 = *v4;
    swift_bridgeObjectRetain();
    result = sub_1CA25081C(v5, v6);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v10 = (uint64_t *)(v2[6] + 16 * result);
    *v10 = v5;
    v10[1] = v6;
    *(_BYTE *)(v2[7] + result) = v7;
    v11 = v2[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v4 += 24;
    v2[2] = v13;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1CA274058(uint64_t a1)
{
  return sub_1CA274074(a1, &qword_1EF94B708, &qword_1EF94B0E8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CAE5D0]);
}

unint64_t sub_1CA274074(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t result;
  char v21;
  unint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  _QWORD v29[2];
  uint64_t (*v30)(_QWORD);
  uint64_t *v31;

  v30 = a4;
  v31 = a2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(a2);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (_QWORD *)((char *)v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (!*(_QWORD *)(a1 + 16))
  {
    v11 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(a3);
  v10 = sub_1CA85C0C8();
  v11 = (_QWORD *)v10;
  v12 = *(_QWORD *)(a1 + 16);
  if (!v12)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v11;
  }
  v13 = (char *)v9 + *(int *)(v6 + 48);
  v14 = v10 + 64;
  v15 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v29[1] = a1;
  v16 = a1 + v15;
  v17 = *(_QWORD *)(v7 + 72);
  swift_retain();
  while (1)
  {
    sub_1CA2684BC(v16, (uint64_t)v9, v31);
    v18 = *v9;
    v19 = v9[1];
    result = sub_1CA25081C(*v9, v19);
    if ((v21 & 1) != 0)
      break;
    v22 = result;
    *(_QWORD *)(v14 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v23 = (uint64_t *)(v11[6] + 16 * result);
    *v23 = v18;
    v23[1] = v19;
    v24 = v11[7];
    v25 = v30(0);
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(v24 + *(_QWORD *)(*(_QWORD *)(v25 - 8) + 72) * v22, v13, v25);
    v26 = v11[2];
    v27 = __OFADD__(v26, 1);
    v28 = v26 + 1;
    if (v27)
      goto LABEL_11;
    v11[2] = v28;
    v16 += v17;
    if (!--v12)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1CA274210(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED874B48);
  v2 = (_QWORD *)sub_1CA85C0C8();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    v5 = *(v4 - 2);
    v6 = *(v4 - 1);
    v7 = *v4;
    swift_bridgeObjectRetain();
    result = sub_1CA25081C(v5, v6);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v10 = (uint64_t *)(v2[6] + 16 * result);
    *v10 = v5;
    v10[1] = v6;
    *(_QWORD *)(v2[7] + 8 * result) = v7;
    v11 = v2[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v2[2] = v13;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1CA274320(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  _DWORD *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  unint64_t result;
  char v9;
  uint64_t *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED872540);
  v2 = (_QWORD *)sub_1CA85C0C8();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (_DWORD *)(a1 + 48);
  while (1)
  {
    v5 = *((_QWORD *)v4 - 2);
    v6 = *((_QWORD *)v4 - 1);
    v7 = *v4;
    swift_bridgeObjectRetain();
    result = sub_1CA25081C(v5, v6);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v10 = (uint64_t *)(v2[6] + 16 * result);
    *v10 = v5;
    v10[1] = v6;
    *(_DWORD *)(v2[7] + 4 * result) = v7;
    v11 = v2[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v4 += 6;
    v2[2] = v13;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1CA274430(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t result;
  char v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  _QWORD v22[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94B718);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(a1 + 16))
  {
    v7 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94B178);
  v6 = sub_1CA85C0C8();
  v7 = (_QWORD *)v6;
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  v9 = *(int *)(v2 + 48);
  v10 = v6 + 64;
  v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v22[1] = a1;
  v12 = a1 + v11;
  v13 = *(_QWORD *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_1CA2684BC(v12, (uint64_t)v5, &qword_1EF94B718);
    result = sub_1CA250A9C((uint64_t)v5);
    if ((v15 & 1) != 0)
      break;
    v16 = result;
    *(_QWORD *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v17 = v7[6];
    v18 = sub_1CA85AE74();
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v17 + *(_QWORD *)(*(_QWORD *)(v18 - 8) + 72) * v16, v5, v18);
    *(_QWORD *)(v7[7] + 8 * v16) = *(_QWORD *)&v5[v9];
    v19 = v7[2];
    v20 = __OFADD__(v19, 1);
    v21 = v19 + 1;
    if (v20)
      goto LABEL_11;
    v7[2] = v21;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1CA2745C4(uint64_t a1)
{
  return sub_1CA2752F0(a1, (uint64_t *)&unk_1ED872548);
}

unint64_t sub_1CA2745D0(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t result;
  char v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  _OWORD v15[2];
  uint64_t v16;
  __int128 v17;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED872560);
  v2 = sub_1CA85C0C8();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1CA2684BC(v6, (uint64_t)v15, &qword_1ED873238);
    result = sub_1CA250930((uint64_t)v15);
    if ((v8 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v9 = v3[6] + 40 * result;
    v10 = v15[0];
    v11 = v15[1];
    *(_QWORD *)(v9 + 32) = v16;
    *(_OWORD *)v9 = v10;
    *(_OWORD *)(v9 + 16) = v11;
    result = (unint64_t)sub_1CA266A44(&v17, (_OWORD *)(v3[7] + 32 * result));
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v3[2] = v14;
    v6 += 72;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1CA274710(uint64_t a1)
{
  return sub_1CA2752F0(a1, (uint64_t *)&unk_1ED873268);
}

unint64_t sub_1CA27471C(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  _QWORD *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED872508);
  v2 = (_QWORD *)sub_1CA85C0C8();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 56);
  while (1)
  {
    v5 = *(v4 - 3);
    v6 = *(v4 - 2);
    v8 = *(v4 - 1);
    v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = sub_1CA25081C(v5, v6);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v11 = (uint64_t *)(v2[6] + 16 * result);
    *v11 = v5;
    v11[1] = v6;
    v12 = (_QWORD *)(v2[7] + 16 * result);
    *v12 = v8;
    v12[1] = v7;
    v13 = v2[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v4 += 4;
    v2[2] = v15;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1CA27483C(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED873278);
  v2 = (_QWORD *)sub_1CA85C0C8();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    v5 = *(v4 - 2);
    v6 = *(v4 - 1);
    v7 = *v4;
    swift_bridgeObjectRetain();
    result = sub_1CA25081C(v5, v6);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v10 = (uint64_t *)(v2[6] + 16 * result);
    *v10 = v5;
    v10[1] = v6;
    *(_QWORD *)(v2[7] + 8 * result) = v7;
    v11 = v2[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v4 += 3;
    v2[2] = v13;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1CA27494C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t result;
  char v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  _QWORD v22[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED871D60);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (_QWORD *)((char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (!*(_QWORD *)(a1 + 16))
  {
    v7 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED872500);
  v6 = sub_1CA85C0C8();
  v7 = (_QWORD *)v6;
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  v9 = *(int *)(v2 + 48);
  v10 = v6 + 64;
  v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v22[1] = a1;
  v12 = a1 + v11;
  v13 = *(_QWORD *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_1CA2684BC(v12, (uint64_t)v5, &qword_1ED871D60);
    result = sub_1CA250830(v5);
    if ((v15 & 1) != 0)
      break;
    v16 = result;
    *(_QWORD *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v17 = v7[6];
    v18 = type metadata accessor for Song();
    result = sub_1CA24EE7C((uint64_t)v5, v17 + *(_QWORD *)(*(_QWORD *)(v18 - 8) + 72) * v16, (uint64_t (*)(_QWORD))type metadata accessor for Song);
    *(_DWORD *)(v7[7] + 4 * v16) = *(_DWORD *)((char *)v5 + v9);
    v19 = v7[2];
    v20 = __OFADD__(v19, 1);
    v21 = v19 + 1;
    if (v20)
      goto LABEL_11;
    v7[2] = v21;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1CA274AE4(uint64_t a1)
{
  return sub_1CA274B00(a1, &qword_1EF94B6E8, &qword_1EF94B6F0, (uint64_t (*)(uint64_t *, unint64_t))sub_1CA266A44);
}

unint64_t sub_1CA274B00(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t (*a4)(uint64_t *, unint64_t))
{
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t result;
  char v15;
  uint64_t *v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  if (!*(_QWORD *)(a1 + 16))
  {
    v8 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v7 = sub_1CA85C0C8();
  v8 = (_QWORD *)v7;
  v9 = *(_QWORD *)(a1 + 16);
  if (!v9)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v8;
  }
  v10 = v7 + 64;
  v11 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1CA2684BC(v11, (uint64_t)&v20, a3);
    v12 = v20;
    v13 = v21;
    result = sub_1CA25081C(v20, v21);
    if ((v15 & 1) != 0)
      break;
    *(_QWORD *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v16 = (uint64_t *)(v8[6] + 16 * result);
    *v16 = v12;
    v16[1] = v13;
    result = a4(&v22, v8[7] + 32 * result);
    v17 = v8[2];
    v18 = __OFADD__(v17, 1);
    v19 = v17 + 1;
    if (v18)
      goto LABEL_11;
    v8[2] = v19;
    v11 += 48;
    if (!--v9)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

void sub_1CA274C38(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v4;
  char v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;

  if (*(_QWORD *)(a1 + 16)
    && (__swift_instantiateConcreteTypeFromMangledName(&qword_1EF94B710),
        v2 = (_QWORD *)sub_1CA85C0C8(),
        (v3 = *(_QWORD *)(a1 + 16)) != 0))
  {
    swift_retain();
    v4 = (_QWORD *)(a1 + 40);
    while (1)
    {
      v5 = *((_BYTE *)v4 - 8);
      v6 = *v4;
      swift_retain();
      sub_1CA250C5C(v5);
      if ((v8 & 1) != 0)
        break;
      *(_QWORD *)((char *)v2 + ((v7 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v7;
      *(_BYTE *)(v2[6] + v7) = v5;
      *(_QWORD *)(v2[7] + 8 * v7) = v6;
      v9 = v2[2];
      v10 = __OFADD__(v9, 1);
      v11 = v9 + 1;
      if (v10)
        goto LABEL_10;
      v2[2] = v11;
      v4 += 2;
      if (!--v3)
      {
        swift_release();
        goto LABEL_8;
      }
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
LABEL_8:
    swift_bridgeObjectRelease();
  }
}

unint64_t sub_1CA274D38(uint64_t a1)
{
  return sub_1CA27541C(a1, &qword_1EF94AE88);
}

unint64_t sub_1CA274D44(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t result;
  char v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  _QWORD v23[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED8723D0);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (_QWORD *)((char *)v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (!*(_QWORD *)(a1 + 16))
  {
    v7 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94B700);
  v6 = sub_1CA85C0C8();
  v7 = (_QWORD *)v6;
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  v9 = (char *)v5 + *(int *)(v2 + 48);
  v10 = v6 + 64;
  v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v23[1] = a1;
  v12 = a1 + v11;
  v13 = *(_QWORD *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_1CA2684BC(v12, (uint64_t)v5, (uint64_t *)&unk_1ED8723D0);
    v14 = *v5;
    result = sub_1CA250A50(*v5);
    if ((v16 & 1) != 0)
      break;
    v17 = result;
    *(_QWORD *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(_QWORD *)(v7[6] + 8 * result) = v14;
    v18 = v7[7];
    v19 = sub_1CA85A148();
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v18 + *(_QWORD *)(*(_QWORD *)(v19 - 8) + 72) * v17, v9, v19);
    v20 = v7[2];
    v21 = __OFADD__(v20, 1);
    v22 = v20 + 1;
    if (v21)
      goto LABEL_11;
    v7[2] = v22;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1CA274EDC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t result;
  char v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  _QWORD v22[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8744C8);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(a1 + 16))
  {
    v7 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED874B08);
  v6 = sub_1CA85C0C8();
  v7 = (_QWORD *)v6;
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  v9 = *(int *)(v2 + 48);
  v10 = v6 + 64;
  v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v22[1] = a1;
  v12 = a1 + v11;
  v13 = *(_QWORD *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_1CA2684BC(v12, (uint64_t)v5, &qword_1ED8744C8);
    result = sub_1CA250D6C((uint64_t)v5);
    if ((v15 & 1) != 0)
      break;
    v16 = result;
    *(_QWORD *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v17 = v7[6];
    v18 = sub_1CA85A5B0();
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v17 + *(_QWORD *)(*(_QWORD *)(v18 - 8) + 72) * v16, v5, v18);
    *(_QWORD *)(v7[7] + 8 * v16) = *(_QWORD *)&v5[v9];
    v19 = v7[2];
    v20 = __OFADD__(v19, 1);
    v21 = v19 + 1;
    if (v20)
      goto LABEL_11;
    v7[2] = v21;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1CA275070(uint64_t a1)
{
  return sub_1CA2752F0(a1, &qword_1EF94B0B8);
}

unint64_t sub_1CA27507C(uint64_t a1)
{
  return sub_1CA27541C(a1, &qword_1EF94B0A8);
}

unint64_t sub_1CA275088(uint64_t a1)
{
  return sub_1CA2752F0(a1, &qword_1EF94AED8);
}

unint64_t sub_1CA275094(uint64_t a1)
{
  return sub_1CA2752F0(a1, (uint64_t *)&unk_1EF94B040);
}

unint64_t sub_1CA2750A0(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  id v6;
  unint64_t result;
  char v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94B058);
  v2 = (_QWORD *)sub_1CA85C0C8();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 40);
  while (1)
  {
    v5 = *v4;
    v6 = (id)*(v4 - 1);
    result = sub_1CA2510E4((uint64_t)v6);
    if ((v8 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v9 = 8 * result;
    *(_QWORD *)(v2[6] + v9) = v6;
    *(_QWORD *)(v2[7] + v9) = v5;
    v10 = v2[2];
    v11 = __OFADD__(v10, 1);
    v12 = v10 + 1;
    if (v11)
      goto LABEL_11;
    v2[2] = v12;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1CA2751A8(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t result;
  char v12;
  uint64_t *v13;
  uint64_t *v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94B028);
  v2 = (_QWORD *)sub_1CA85C0C8();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 40);
  while (1)
  {
    v5 = *(v4 - 1);
    v6 = *v4;
    v7 = v4[1];
    v8 = v4[2];
    v10 = v4[3];
    v9 = v4[4];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = sub_1CA25081C(v5, v6);
    if ((v12 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v13 = (uint64_t *)(v2[6] + 16 * result);
    *v13 = v5;
    v13[1] = v6;
    v14 = (uint64_t *)(v2[7] + 32 * result);
    *v14 = v7;
    v14[1] = v8;
    v14[2] = v10;
    v14[3] = v9;
    v15 = v2[2];
    v16 = __OFADD__(v15, 1);
    v17 = v15 + 1;
    if (v16)
      goto LABEL_11;
    v2[2] = v17;
    v4 += 6;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1CA2752E4(uint64_t a1)
{
  return sub_1CA2752F0(a1, (uint64_t *)&unk_1ED874B30);
}

unint64_t sub_1CA2752F0(uint64_t a1, uint64_t *a2)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v3 = (_QWORD *)sub_1CA85C0C8();
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  swift_retain();
  v5 = (uint64_t *)(a1 + 48);
  while (1)
  {
    v6 = *(v5 - 2);
    v7 = *(v5 - 1);
    v8 = *v5;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = sub_1CA25081C(v6, v7);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v11 = (uint64_t *)(v3[6] + 16 * result);
    *v11 = v6;
    v11[1] = v7;
    *(_QWORD *)(v3[7] + 8 * result) = v8;
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v3[2] = v14;
    v5 += 3;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1CA275404(uint64_t a1)
{
  return sub_1CA27541C(a1, (uint64_t *)&unk_1EF94AFD8);
}

unint64_t sub_1CA275410(uint64_t a1)
{
  return sub_1CA27541C(a1, (uint64_t *)&unk_1EF94AF10);
}

unint64_t sub_1CA27541C(uint64_t a1, uint64_t *a2)
{
  _QWORD *v3;
  uint64_t v4;
  void **v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  unint64_t result;
  char v11;
  uint64_t *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v3 = (_QWORD *)sub_1CA85C0C8();
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  swift_retain();
  v5 = (void **)(a1 + 48);
  while (1)
  {
    v6 = (uint64_t)*(v5 - 2);
    v7 = (uint64_t)*(v5 - 1);
    v8 = *v5;
    swift_bridgeObjectRetain();
    v9 = v8;
    result = sub_1CA25081C(v6, v7);
    if ((v11 & 1) != 0)
      break;
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v12 = (uint64_t *)(v3[6] + 16 * result);
    *v12 = v6;
    v12[1] = v7;
    *(_QWORD *)(v3[7] + 8 * result) = v9;
    v13 = v3[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v3[2] = v15;
    v5 += 3;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1CA275530(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  _QWORD *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94B6F8);
  v2 = (_QWORD *)sub_1CA85C0C8();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 56);
  while (1)
  {
    v5 = *(v4 - 3);
    v6 = *(v4 - 2);
    v8 = *(v4 - 1);
    v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = sub_1CA25081C(v5, v6);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v11 = (uint64_t *)(v2[6] + 16 * result);
    *v11 = v5;
    v11[1] = v6;
    v12 = (_QWORD *)(v2[7] + 16 * result);
    *v12 = v8;
    v12[1] = v7;
    v13 = v2[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v4 += 4;
    v2[2] = v15;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t RecentlyUsedSongs.subscript.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v7 = (uint64_t *)(v3 + OBJC_IVAR___PGMusicCurationRecentlyUsedSongs_mostRecentlyUsedSongIDDateMap);
  swift_beginAccess();
  v8 = *v7;
  if (*(_QWORD *)(v8 + 16))
  {
    swift_bridgeObjectRetain();
    v9 = sub_1CA25081C(a1, a2);
    if ((v10 & 1) != 0)
    {
      v11 = v9;
      v12 = *(_QWORD *)(v8 + 56);
      v13 = sub_1CA85A5B0();
      v14 = *(_QWORD *)(v13 - 8);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16))(a3, v12 + *(_QWORD *)(v14 + 72) * v11, v13);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v14 + 56))(a3, 0, 1, v13);
    }
    else
    {
      v16 = sub_1CA85A5B0();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(a3, 1, 1, v16);
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    v15 = sub_1CA85A5B0();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(a3, 1, 1, v15);
  }
  return swift_endAccess();
}

Swift::Void __swiftcall RecentlyUsedSongs.add(songIDDateMap:)(Swift::OpaquePointer songIDDateMap)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int64_t v42;
  unint64_t v43;
  int64_t v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  void (*v51)(char *, char *, uint64_t);
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  void (*v56)(char *, uint64_t, uint64_t, uint64_t);
  unsigned int (*v57)(uint64_t, uint64_t, uint64_t);
  uint64_t v58;
  unint64_t v59;
  char v60;
  char v61;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t *v66;
  uint64_t v67;
  uint64_t v68;
  int v69;
  _QWORD *v70;
  uint64_t *v71;
  uint64_t v72;
  uint64_t v73;
  char v74;
  unint64_t v75;
  uint64_t v76;
  _BOOL8 v77;
  uint64_t v78;
  char v79;
  uint64_t v80;
  char v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  char v85;
  char v86;
  uint64_t *v87;
  void (*v88)(char *, uint64_t, uint64_t);
  int v89;
  uint64_t v90;
  uint64_t v91;
  unint64_t v92;
  uint64_t v93;
  uint64_t v94;
  _QWORD *v95;
  uint64_t *v96;
  uint64_t v97;
  BOOL v98;
  uint64_t v99;
  void (*v100)(char *, uint64_t);
  int v101;
  _QWORD *v102;
  char v103;
  unint64_t v104;
  uint64_t v105;
  _BOOL8 v106;
  uint64_t v107;
  char v108;
  uint64_t v109;
  char v110;
  char *v111;
  _QWORD *v112;
  uint64_t *v113;
  uint64_t v114;
  uint64_t v115;
  void (*v116)(char *, uint64_t);
  uint64_t v117;
  int64_t v118;
  char *v119;
  char *v120;
  char *v121;
  char *v122;
  char *v123;
  char *v124;
  int64_t v125;
  char *v126;
  char *v127;
  _QWORD *rawValue;
  void (*v129)(unint64_t, char *, uint64_t);
  _QWORD *v130;
  char *v131;
  uint64_t *v132;
  int64_t v133;
  char *v134;
  uint64_t v135;
  _QWORD *v136;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8711C0);
  v4 = MEMORY[0x1E0C80A78](v3);
  v123 = (char *)&v117 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x1E0C80A78](v4);
  v127 = (char *)&v117 - v7;
  v8 = MEMORY[0x1E0C80A78](v6);
  v119 = (char *)&v117 - v9;
  v10 = MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v117 - v11;
  MEMORY[0x1E0C80A78](v10);
  v131 = (char *)&v117 - v13;
  v14 = sub_1CA85A5B0();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = MEMORY[0x1E0C80A78](v14);
  v126 = (char *)&v117 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x1E0C80A78](v16);
  v120 = (char *)&v117 - v19;
  v20 = MEMORY[0x1E0C80A78](v18);
  v124 = (char *)&v117 - v21;
  MEMORY[0x1E0C80A78](v20);
  v23 = (char *)&v117 - v22;
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED872188);
  v25 = MEMORY[0x1E0C80A78](v24);
  v27 = (uint64_t *)((char *)&v117 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v25);
  v132 = (uint64_t *)((char *)&v117 - v28);
  v29 = *((_QWORD *)songIDDateMap._rawValue + 8);
  v122 = (char *)songIDDateMap._rawValue + 64;
  v30 = 1 << *((_BYTE *)songIDDateMap._rawValue + 32);
  v31 = -1;
  if (v30 < 64)
    v31 = ~(-1 << v30);
  v32 = v31 & v29;
  v33 = (uint64_t *)(v1 + OBJC_IVAR___PGMusicCurationRecentlyUsedSongs_mostRecentlyUsedSongIDDateMap);
  v125 = (unint64_t)(v30 + 63) >> 6;
  v118 = v125 - 1;
  swift_bridgeObjectRetain();
  v133 = 0;
  v134 = v23;
  rawValue = songIDDateMap._rawValue;
  v130 = v27;
  v121 = v12;
  while (1)
  {
    if (v32)
    {
      v135 = (v32 - 1) & v32;
      v36 = __clz(__rbit64(v32)) | (v133 << 6);
LABEL_9:
      v37 = rawValue[7];
      v38 = (_QWORD *)(rawValue[6] + 16 * v36);
      v39 = v38[1];
      *v27 = *v38;
      v27[1] = v39;
      v40 = v37 + *(_QWORD *)(v15 + 72) * v36;
      v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED872180);
      (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))((char *)v27 + *(int *)(v41 + 48), v40, v14);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 56))(v27, 0, 1, v41);
      swift_bridgeObjectRetain();
      goto LABEL_28;
    }
    v42 = v133 + 1;
    if (__OFADD__(v133, 1))
    {
      __break(1u);
LABEL_74:
      __break(1u);
LABEL_75:
      __break(1u);
LABEL_76:
      __break(1u);
LABEL_77:
      __break(1u);
      goto LABEL_78;
    }
    if (v42 < v125)
    {
      v43 = *(_QWORD *)&v122[8 * v42];
      if (v43)
        goto LABEL_13;
      v44 = v133 + 2;
      ++v133;
      if (v42 + 1 < v125)
      {
        v43 = *(_QWORD *)&v122[8 * v44];
        if (v43)
          goto LABEL_16;
        v133 = v42 + 1;
        if (v42 + 2 < v125)
        {
          v43 = *(_QWORD *)&v122[8 * v42 + 16];
          if (v43)
          {
            v42 += 2;
            goto LABEL_13;
          }
          v44 = v42 + 3;
          v133 = v42 + 2;
          if (v42 + 3 < v125)
            break;
        }
      }
    }
LABEL_27:
    v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED872180);
    (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 56))(v27, 1, 1, v45);
    v135 = 0;
LABEL_28:
    v46 = v132;
    sub_1CA24EEF8((uint64_t)v27, (uint64_t)v132, &qword_1ED872188);
    v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED872180);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 48))(v46, 1, v47) == 1)
    {
      swift_release();
      return;
    }
    v48 = *v46;
    v49 = v46[1];
    v50 = v23;
    v51 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
    v51(v50, (char *)v46 + *(int *)(v47 + 48), v14);
    swift_beginAccess();
    v52 = *v33;
    if (!*(_QWORD *)(*v33 + 16))
    {
      v56 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
      v54 = (uint64_t)v131;
      v56(v131, 1, 1, v14);
      goto LABEL_35;
    }
    swift_bridgeObjectRetain();
    v53 = sub_1CA25081C(v48, v49);
    v54 = (uint64_t)v131;
    if ((v55 & 1) != 0)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v131, *(_QWORD *)(v52 + 56) + *(_QWORD *)(v15 + 72) * v53, v14);
      v56 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
      v56((char *)v54, 0, 1, v14);
    }
    else
    {
      v56 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
      v56(v131, 1, 1, v14);
    }
    swift_bridgeObjectRelease();
    v57 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48);
    if (v57(v54, 1, v14) == 1)
    {
LABEL_35:
      sub_1CA267BE8(v54, &qword_1ED8711C0);
      swift_endAccess();
      v58 = (uint64_t)v127;
      (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v127, v134, v14);
      v56((char *)v58, 0, 1, v14);
      swift_beginAccess();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v58, 1, v14) == 1)
      {
        sub_1CA267BE8(v58, &qword_1ED8711C0);
        swift_bridgeObjectRetain();
        v59 = sub_1CA25081C(v48, v49);
        v61 = v60;
        swift_bridgeObjectRelease();
        if ((v61 & 1) != 0)
        {
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v63 = *v33;
          v136 = (_QWORD *)*v33;
          *v33 = 0x8000000000000000;
          if (!isUniquelyReferenced_nonNull_native)
          {
            sub_1CA260554();
            v63 = (uint64_t)v136;
          }
          swift_bridgeObjectRelease();
          v35 = (uint64_t)v123;
          v51(v123, (char *)(*(_QWORD *)(v63 + 56) + *(_QWORD *)(v15 + 72) * v59), v14);
          sub_1CA278B58(v59, v63, (uint64_t (*)(_QWORD))MEMORY[0x1E0CB0870]);
          *v33 = v63;
          swift_bridgeObjectRelease();
          v34 = 0;
        }
        else
        {
          v34 = 1;
          v35 = (uint64_t)v123;
        }
        v56((char *)v35, v34, 1, v14);
        swift_bridgeObjectRelease();
        sub_1CA267BE8(v35, &qword_1ED8711C0);
        v23 = v134;
        v32 = v135;
        v27 = v130;
      }
      else
      {
        v64 = v49;
        v65 = v15;
        v66 = v33;
        v67 = v14;
        v68 = v48;
        v129 = (void (*)(unint64_t, char *, uint64_t))v51;
        v51(v126, (char *)v58, v14);
        v69 = swift_isUniquelyReferenced_nonNull_native();
        v136 = (_QWORD *)*v66;
        v70 = v136;
        v71 = v66;
        *v66 = 0x8000000000000000;
        v72 = v68;
        v73 = v64;
        v75 = sub_1CA25081C(v68, v64);
        v76 = v70[2];
        v77 = (v74 & 1) == 0;
        v78 = v76 + v77;
        if (__OFADD__(v76, v77))
          goto LABEL_74;
        v79 = v74;
        if (v70[3] >= v78)
        {
          v27 = v130;
          if ((v69 & 1) == 0)
            sub_1CA260554();
        }
        else
        {
          sub_1CA2529B0(v78, v69);
          v80 = sub_1CA25081C(v72, v64);
          v27 = v130;
          if ((v79 & 1) != (v81 & 1))
            goto LABEL_79;
          v75 = v80;
        }
        v23 = v134;
        v95 = v136;
        if ((v79 & 1) != 0)
        {
          v15 = v65;
          (*(void (**)(unint64_t, char *, uint64_t))(v65 + 40))(v136[7] + *(_QWORD *)(v65 + 72) * v75, v126, v67);
        }
        else
        {
          v136[(v75 >> 6) + 8] |= 1 << v75;
          v96 = (uint64_t *)(v95[6] + 16 * v75);
          *v96 = v72;
          v96[1] = v73;
          v15 = v65;
          v129(v95[7] + *(_QWORD *)(v65 + 72) * v75, v126, v67);
          v97 = v95[2];
          v98 = __OFADD__(v97, 1);
          v99 = v97 + 1;
          if (v98)
            goto LABEL_75;
          v95[2] = v99;
          swift_bridgeObjectRetain();
        }
        *v71 = (uint64_t)v136;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v32 = v135;
        v14 = v67;
        v33 = v71;
      }
      swift_endAccess();
      (*(void (**)(char *, uint64_t))(v15 + 8))(v23, v14);
    }
    else
    {
      v82 = v124;
      v129 = (void (*)(unint64_t, char *, uint64_t))v51;
      v51(v124, (char *)v54, v14);
      swift_endAccess();
      v23 = v134;
      if ((sub_1CA85A520() & 1) != 0)
      {
        v83 = (uint64_t)v121;
        (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v121, v23, v14);
        v56((char *)v83, 0, 1, v14);
        swift_beginAccess();
        if (v57(v83, 1, v14) == 1)
        {
          sub_1CA267BE8(v83, &qword_1ED8711C0);
          swift_bridgeObjectRetain();
          v84 = sub_1CA25081C(v48, v49);
          v86 = v85;
          swift_bridgeObjectRelease();
          v87 = v33;
          v88 = (void (*)(char *, uint64_t, uint64_t))v129;
          if ((v86 & 1) != 0)
          {
            v89 = swift_isUniquelyReferenced_nonNull_native();
            v90 = *v87;
            v136 = (_QWORD *)*v87;
            *v87 = 0x8000000000000000;
            v32 = v135;
            if (!v89)
            {
              sub_1CA260554();
              v90 = (uint64_t)v136;
            }
            swift_bridgeObjectRelease();
            v91 = *(_QWORD *)(v90 + 56) + *(_QWORD *)(v15 + 72) * v84;
            v92 = v84;
            v93 = (uint64_t)v119;
            v88(v119, v91, v14);
            sub_1CA278B58(v92, v90, (uint64_t (*)(_QWORD))MEMORY[0x1E0CB0870]);
            *v87 = v90;
            swift_bridgeObjectRelease();
            v94 = 0;
            v33 = v87;
          }
          else
          {
            v94 = 1;
            v32 = v135;
            v33 = v87;
            v93 = (uint64_t)v119;
          }
          v56((char *)v93, v94, 1, v14);
          swift_bridgeObjectRelease();
          sub_1CA267BE8(v93, &qword_1ED8711C0);
          v111 = v124;
          v23 = v134;
          v27 = v130;
        }
        else
        {
          v129((unint64_t)v120, (char *)v83, v14);
          v101 = swift_isUniquelyReferenced_nonNull_native();
          v136 = (_QWORD *)*v33;
          v102 = v136;
          *v33 = 0x8000000000000000;
          v104 = sub_1CA25081C(v48, v49);
          v105 = v102[2];
          v106 = (v103 & 1) == 0;
          v107 = v105 + v106;
          if (__OFADD__(v105, v106))
            goto LABEL_76;
          v108 = v103;
          if (v102[3] >= v107)
          {
            v27 = v130;
            if ((v101 & 1) == 0)
              sub_1CA260554();
          }
          else
          {
            sub_1CA2529B0(v107, v101);
            v109 = sub_1CA25081C(v48, v49);
            v27 = v130;
            if ((v108 & 1) != (v110 & 1))
              goto LABEL_79;
            v104 = v109;
          }
          v23 = v134;
          v112 = v136;
          if ((v108 & 1) != 0)
          {
            (*(void (**)(unint64_t, char *, uint64_t))(v15 + 40))(v136[7] + *(_QWORD *)(v15 + 72) * v104, v120, v14);
          }
          else
          {
            v136[(v104 >> 6) + 8] |= 1 << v104;
            v113 = (uint64_t *)(v112[6] + 16 * v104);
            *v113 = v48;
            v113[1] = v49;
            v129(v112[7] + *(_QWORD *)(v15 + 72) * v104, v120, v14);
            v114 = v112[2];
            v98 = __OFADD__(v114, 1);
            v115 = v114 + 1;
            if (v98)
              goto LABEL_77;
            v112[2] = v115;
            swift_bridgeObjectRetain();
          }
          *v33 = (uint64_t)v136;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v111 = v124;
          v32 = v135;
        }
        swift_endAccess();
        v116 = *(void (**)(char *, uint64_t))(v15 + 8);
        v116(v111, v14);
        v116(v23, v14);
      }
      else
      {
        swift_bridgeObjectRelease();
        v100 = *(void (**)(char *, uint64_t))(v15 + 8);
        v100(v82, v14);
        v27 = v130;
        v32 = v135;
        v100(v23, v14);
      }
    }
  }
  v43 = *(_QWORD *)&v122[8 * v44];
  if (v43)
  {
LABEL_16:
    v42 = v44;
LABEL_13:
    v135 = (v43 - 1) & v43;
    v36 = __clz(__rbit64(v43)) + (v42 << 6);
    v133 = v42;
    goto LABEL_9;
  }
  while (1)
  {
    v42 = v44 + 1;
    if (__OFADD__(v44, 1))
      break;
    if (v42 >= v125)
    {
      v133 = v118;
      goto LABEL_27;
    }
    v43 = *(_QWORD *)&v122[8 * v42];
    ++v44;
    if (v43)
      goto LABEL_13;
  }
LABEL_78:
  __break(1u);
LABEL_79:
  sub_1CA85C2E4();
  __break(1u);
}

uint64_t RecentlyUsedSongs.add(songIDs:date:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  void (*v38)(uint64_t, uint64_t, uint64_t);
  void (*v39)(uint64_t, uint64_t, uint64_t, uint64_t);
  unsigned int (*v40)(uint64_t, uint64_t, uint64_t);
  uint64_t v41;
  unint64_t v42;
  char v43;
  char v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  void (*v50)(char *, uint64_t, uint64_t);
  int v51;
  _QWORD *v52;
  uint64_t v53;
  char v54;
  unint64_t v55;
  uint64_t v56;
  _BOOL8 v57;
  uint64_t v58;
  char v59;
  uint64_t v60;
  char v61;
  _QWORD *v62;
  _QWORD *v63;
  uint64_t v64;
  BOOL v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  char v71;
  char v72;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  int v77;
  _QWORD *v78;
  uint64_t v79;
  char v80;
  unint64_t v81;
  uint64_t v82;
  _BOOL8 v83;
  uint64_t v84;
  char v85;
  uint64_t v86;
  char v87;
  _QWORD *v88;
  _QWORD *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  _QWORD v93[2];
  char *v94;
  char *v95;
  char *v96;
  char *v97;
  void (*v98)(char *, uint64_t, uint64_t);
  char *v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  char *v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t *v108;
  uint64_t v109;
  uint64_t v110;
  _QWORD *v111;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8711C0);
  v6 = MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v93 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x1E0C80A78](v6);
  v104 = (char *)v93 - v10;
  v11 = MEMORY[0x1E0C80A78](v9);
  v13 = (char *)v93 - v12;
  v14 = MEMORY[0x1E0C80A78](v11);
  v96 = (char *)v93 - v15;
  MEMORY[0x1E0C80A78](v14);
  v102 = (char *)v93 - v16;
  v17 = sub_1CA85A5B0();
  v18 = *(_QWORD *)(v17 - 8);
  v19 = MEMORY[0x1E0C80A78](v17);
  v103 = (char *)v93 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = MEMORY[0x1E0C80A78](v19);
  v95 = (char *)v93 - v22;
  result = MEMORY[0x1E0C80A78](v21);
  v25 = *(_QWORD *)(a1 + 16);
  if (!v25)
    return result;
  v107 = a2;
  v99 = (char *)v93 - v24;
  v94 = v13;
  v26 = (uint64_t *)(v2 + OBJC_IVAR___PGMusicCurationRecentlyUsedSongs_mostRecentlyUsedSongIDDateMap);
  swift_bridgeObjectRetain();
  v93[1] = a1;
  v27 = (uint64_t *)(a1 + 40);
  v28 = (uint64_t)v102;
  v105 = v17;
  v106 = v18;
  v97 = v8;
  while (1)
  {
    v30 = v8;
    v32 = *(v27 - 1);
    v31 = *v27;
    v108 = v27;
    swift_beginAccess();
    v33 = *v26;
    v34 = *(_QWORD *)(*v26 + 16);
    v109 = v32;
    v110 = v31;
    if (!v34)
    {
      v39 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 56);
      v39(v28, 1, 1, v17);
      swift_bridgeObjectRetain();
      goto LABEL_13;
    }
    swift_bridgeObjectRetain();
    v35 = sub_1CA25081C(v32, v31);
    if ((v36 & 1) == 0)
      break;
    v37 = *(_QWORD *)(v33 + 56);
    v101 = *(_QWORD *)(v18 + 72);
    v38 = *(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 16);
    v38(v28, v37 + v101 * v35, v17);
    v39 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 56);
    v39(v28, 0, 1, v17);
    v40 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v18 + 48);
    if (v40(v28, 1, v17) == 1)
    {
      v8 = v30;
      goto LABEL_14;
    }
    v100 = v25;
    v67 = v99;
    v98 = *(void (**)(char *, uint64_t, uint64_t))(v18 + 32);
    v98(v99, v28, v17);
    swift_endAccess();
    v68 = v107;
    if ((sub_1CA85A520() & 1) != 0)
    {
      v69 = (uint64_t)v96;
      v38((uint64_t)v96, v68, v17);
      v39(v69, 0, 1, v17);
      swift_beginAccess();
      if (v40(v69, 1, v17) == 1)
      {
        sub_1CA267BE8(v69, &qword_1ED8711C0);
        swift_bridgeObjectRetain();
        v70 = sub_1CA25081C(v109, v110);
        v72 = v71;
        swift_bridgeObjectRelease();
        v25 = v100;
        if ((v72 & 1) != 0)
        {
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v74 = *v26;
          v111 = (_QWORD *)*v26;
          *v26 = 0x8000000000000000;
          v17 = v105;
          v8 = v97;
          if (!isUniquelyReferenced_nonNull_native)
          {
            sub_1CA260554();
            v74 = (uint64_t)v111;
          }
          swift_bridgeObjectRelease();
          v75 = (uint64_t)v94;
          v98(v94, *(_QWORD *)(v74 + 56) + v70 * v101, v17);
          sub_1CA278B58(v70, v74, (uint64_t (*)(_QWORD))MEMORY[0x1E0CB0870]);
          *v26 = v74;
          swift_bridgeObjectRelease();
          v76 = 0;
          v18 = v106;
        }
        else
        {
          v76 = 1;
          v75 = (uint64_t)v94;
          v17 = v105;
          v18 = v106;
          v8 = v97;
        }
        v39(v75, v76, 1, v17);
        swift_bridgeObjectRelease();
        sub_1CA267BE8(v75, &qword_1ED8711C0);
        v28 = (uint64_t)v102;
      }
      else
      {
        v98(v95, v69, v17);
        v77 = swift_isUniquelyReferenced_nonNull_native();
        v111 = (_QWORD *)*v26;
        v78 = v111;
        *v26 = 0x8000000000000000;
        v79 = v110;
        v81 = sub_1CA25081C(v109, v110);
        v82 = v78[2];
        v83 = (v80 & 1) == 0;
        v84 = v82 + v83;
        v25 = v100;
        if (__OFADD__(v82, v83))
          goto LABEL_55;
        v85 = v80;
        if (v78[3] >= v84)
        {
          v28 = (uint64_t)v102;
          v17 = v105;
          v8 = v97;
          if ((v77 & 1) == 0)
            sub_1CA260554();
        }
        else
        {
          sub_1CA2529B0(v84, v77);
          v86 = sub_1CA25081C(v109, v79);
          v28 = (uint64_t)v102;
          v17 = v105;
          v8 = v97;
          if ((v85 & 1) != (v87 & 1))
            goto LABEL_57;
          v81 = v86;
        }
        v18 = v106;
        v88 = v111;
        if ((v85 & 1) != 0)
        {
          (*(void (**)(unint64_t, char *, uint64_t))(v106 + 40))(v111[7] + v81 * v101, v95, v17);
        }
        else
        {
          v111[(v81 >> 6) + 8] |= 1 << v81;
          v89 = (_QWORD *)(v88[6] + 16 * v81);
          v90 = v110;
          *v89 = v109;
          v89[1] = v90;
          v98((char *)(v88[7] + v81 * v101), (uint64_t)v95, v17);
          v91 = v88[2];
          v65 = __OFADD__(v91, 1);
          v92 = v91 + 1;
          if (v65)
            goto LABEL_56;
          v88[2] = v92;
          swift_bridgeObjectRetain();
        }
        *v26 = (uint64_t)v111;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      swift_endAccess();
      (*(void (**)(char *, uint64_t))(v18 + 8))(v99, v17);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v18 + 8))(v67, v17);
      swift_bridgeObjectRelease();
      v25 = v100;
      v8 = v97;
    }
LABEL_6:
    v27 = v108 + 2;
    if (!--v25)
      return swift_bridgeObjectRelease();
  }
  v39 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 56);
  v39(v28, 1, 1, v17);
LABEL_13:
  v8 = v30;
LABEL_14:
  sub_1CA267BE8(v28, &qword_1ED8711C0);
  swift_endAccess();
  v41 = (uint64_t)v104;
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v104, v107, v17);
  v39(v41, 0, 1, v17);
  swift_beginAccess();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v18 + 48))(v41, 1, v17) == 1)
  {
    sub_1CA267BE8(v41, &qword_1ED8711C0);
    swift_bridgeObjectRetain();
    v42 = sub_1CA25081C(v109, v110);
    v44 = v43;
    swift_bridgeObjectRelease();
    if ((v44 & 1) != 0)
    {
      v45 = swift_isUniquelyReferenced_nonNull_native();
      v46 = *v26;
      v111 = (_QWORD *)*v26;
      *v26 = 0x8000000000000000;
      if (!v45)
      {
        sub_1CA260554();
        v46 = (uint64_t)v111;
      }
      swift_bridgeObjectRelease();
      v18 = v106;
      (*(void (**)(char *, unint64_t, uint64_t))(v106 + 32))(v8, *(_QWORD *)(v46 + 56) + *(_QWORD *)(v106 + 72) * v42, v17);
      sub_1CA278B58(v42, v46, (uint64_t (*)(_QWORD))MEMORY[0x1E0CB0870]);
      *v26 = v46;
      swift_bridgeObjectRelease();
      v29 = 0;
    }
    else
    {
      v29 = 1;
      v18 = v106;
    }
    v39((uint64_t)v8, v29, 1, v17);
    swift_bridgeObjectRelease();
    sub_1CA267BE8((uint64_t)v8, &qword_1ED8711C0);
LABEL_5:
    swift_endAccess();
    goto LABEL_6;
  }
  v47 = v17;
  v48 = v25;
  v49 = v8;
  v50 = *(void (**)(char *, uint64_t, uint64_t))(v18 + 32);
  v50(v103, v41, v47);
  v51 = swift_isUniquelyReferenced_nonNull_native();
  v111 = (_QWORD *)*v26;
  v52 = v111;
  *v26 = 0x8000000000000000;
  v53 = v110;
  v55 = sub_1CA25081C(v109, v110);
  v56 = v52[2];
  v57 = (v54 & 1) == 0;
  v58 = v56 + v57;
  if (!__OFADD__(v56, v57))
  {
    v59 = v54;
    if (v52[3] >= v58)
    {
      if ((v51 & 1) == 0)
        sub_1CA260554();
    }
    else
    {
      sub_1CA2529B0(v58, v51);
      v60 = sub_1CA25081C(v109, v53);
      if ((v59 & 1) != (v61 & 1))
        goto LABEL_57;
      v55 = v60;
    }
    v18 = v106;
    v62 = v111;
    if ((v59 & 1) != 0)
    {
      (*(void (**)(unint64_t, char *, uint64_t))(v106 + 40))(v111[7] + *(_QWORD *)(v106 + 72) * v55, v103, v105);
    }
    else
    {
      v111[(v55 >> 6) + 8] |= 1 << v55;
      v63 = (_QWORD *)(v62[6] + 16 * v55);
      *v63 = v109;
      v63[1] = v53;
      v50((char *)(v62[7] + *(_QWORD *)(v18 + 72) * v55), (uint64_t)v103, v105);
      v64 = v62[2];
      v65 = __OFADD__(v64, 1);
      v66 = v64 + 1;
      if (v65)
        goto LABEL_54;
      v62[2] = v66;
      swift_bridgeObjectRetain();
    }
    *v26 = (uint64_t)v111;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v8 = v49;
    v28 = (uint64_t)v102;
    v25 = v48;
    v17 = v105;
    goto LABEL_5;
  }
  __break(1u);
LABEL_54:
  __break(1u);
LABEL_55:
  __break(1u);
LABEL_56:
  __break(1u);
LABEL_57:
  result = sub_1CA85C2E4();
  __break(1u);
  return result;
}

uint64_t RecentlyUsedSongs.count.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR___PGMusicCurationRecentlyUsedSongs_mostRecentlyUsedSongIDDateMap;
  swift_beginAccess();
  return *(_QWORD *)(*(_QWORD *)v1 + 16);
}

uint64_t RecentlyUsedSongs.allEntries()()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t RecentlyUsedSongs.append(otherRecentlyUsed:)()
{
  uint64_t v0;

  swift_beginAccess();
  v0 = swift_bridgeObjectRetain();
  sub_1CA27B458(v0, (void (*)(uint64_t, uint64_t, char *))sub_1CA279F18);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1CA276F30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(void);
  unint64_t v14;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED872768);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8721A8);
  v7 = *(unsigned __int8 *)(*(_QWORD *)(v6 - 8) + 80);
  v8 = (v7 + 32) & ~v7;
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1CA8D4E40;
  v10 = (_QWORD *)(v9 + v8);
  v11 = v9 + v8 + *(int *)(v6 + 48);
  *v10 = a1;
  v10[1] = a2;
  v12 = sub_1CA85A5B0();
  v13 = MEMORY[0x1E0CB0870];
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v11, a3, v12);
  swift_bridgeObjectRetain();
  v14 = sub_1CA274074(v9, &qword_1ED8721A8, &qword_1ED872510, (uint64_t (*)(_QWORD))v13);
  RecentlyUsedSongs.add(songIDDateMap:)((Swift::OpaquePointer)v14);
  return swift_bridgeObjectRelease();
}

id RecentlyUsedSongs.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id RecentlyUsedSongs.init()()
{
  char *v0;
  objc_class *ObjectType;
  objc_super v3;

  ObjectType = (objc_class *)swift_getObjectType();
  *(_QWORD *)&v0[OBJC_IVAR___PGMusicCurationRecentlyUsedSongs_mostRecentlyUsedSongIDDateMap] = MEMORY[0x1E0DEE9E0];
  v3.receiver = v0;
  v3.super_class = ObjectType;
  return objc_msgSendSuper2(&v3, sel_init);
}

id RecentlyUsedSongs.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t RecentlyUsedSongs.add(curation:date:)(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(void);
  unint64_t v16;

  v2 = *(_QWORD *)(result + OBJC_IVAR___PGMusicCuration_bestMusicSuggestions);
  if (*(_QWORD *)(v2 + 16))
  {
    v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for Song() - 8) + 80);
    v5 = (uint64_t *)(v2 + ((v4 + 32) & ~v4));
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED872768);
    v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8721A8);
    v7 = *(unsigned __int8 *)(*(_QWORD *)(v6 - 8) + 80);
    v8 = (v7 + 32) & ~v7;
    v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_1CA8D4E40;
    v10 = (_QWORD *)(v9 + v8);
    v11 = v9 + v8 + *(int *)(v6 + 48);
    v12 = *v5;
    v13 = v5[1];
    *v10 = v12;
    v10[1] = v13;
    v14 = sub_1CA85A5B0();
    v15 = MEMORY[0x1E0CB0870];
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v11, a2, v14);
    swift_bridgeObjectRetain();
    v16 = sub_1CA274074(v9, &qword_1ED8721A8, &qword_1ED872510, (uint64_t (*)(_QWORD))v15);
    RecentlyUsedSongs.add(songIDDateMap:)((Swift::OpaquePointer)v16);
    return swift_bridgeObjectRelease();
  }
  return result;
}

id RecentlyUsedSongs.add(flexCuration:date:)(uint64_t a1, uint64_t a2)
{
  unint64_t v3;
  uint64_t v4;
  id result;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v19)(void);
  unint64_t v20;

  v3 = *(_QWORD *)(a1 + OBJC_IVAR___PGFlexMusicCuration_bestSongSuggestions);
  if (v3 >> 62)
  {
    swift_bridgeObjectRetain();
    result = (id)sub_1CA85C08C();
    if (!result)
      return (id)swift_bridgeObjectRelease();
  }
  else
  {
    v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = (id)swift_bridgeObjectRetain();
    if (!v4)
      return (id)swift_bridgeObjectRelease();
  }
  if ((v3 & 0xC000000000000001) != 0)
  {
    v6 = (id)MEMORY[0x1CAA4DD64](0, v3);
  }
  else
  {
    if (!*(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_13;
    }
    v6 = *(id *)(v3 + 32);
  }
  v7 = v6;
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED872768);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8721A8);
  v9 = *(unsigned __int8 *)(*(_QWORD *)(v8 - 8) + 80);
  v10 = (v9 + 32) & ~v9;
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1CA8D4E40;
  result = objc_msgSend(v7, sel_uid_photos_only);
  if (result)
  {
    v12 = result;
    v13 = (uint64_t *)(v11 + v10);
    v14 = v11 + v10 + *(int *)(v8 + 48);
    v15 = sub_1CA85B534();
    v17 = v16;

    *v13 = v15;
    v13[1] = v17;
    v18 = sub_1CA85A5B0();
    v19 = MEMORY[0x1E0CB0870];
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v14, a2, v18);
    v20 = sub_1CA274074(v11, &qword_1ED8721A8, &qword_1ED872510, (uint64_t (*)(_QWORD))v19);
    RecentlyUsedSongs.add(songIDDateMap:)((Swift::OpaquePointer)v20);

    return (id)swift_bridgeObjectRelease();
  }
LABEL_13:
  __break(1u);
  return result;
}

uint64_t sub_1CA2774CC(void *a1, uint64_t a2, void *a3, uint64_t a4, void (*a5)(id, char *))
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id v12;
  id v13;
  uint64_t v15;

  v8 = sub_1CA85A5B0();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1CA85A574();
  v12 = a3;
  v13 = a1;
  a5(v12, v11);

  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t RecentlyUsedSongs.description.getter()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v6[4];

  v1 = (uint64_t *)(v0 + OBJC_IVAR___PGMusicCurationRecentlyUsedSongs_mostRecentlyUsedSongIDDateMap);
  swift_beginAccess();
  v2 = *v1;
  swift_bridgeObjectRetain_n();
  v3 = (_QWORD *)sub_1CA243478(v2);
  swift_bridgeObjectRelease();
  v6[0] = v3;
  sub_1CA277B6C(v6);
  swift_bridgeObjectRelease();
  v6[1] = sub_1CA2776C8;
  v6[2] = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94B6C8);
  sub_1CA27B69C();
  v4 = sub_1CA85B4D4();
  swift_release();
  return v4;
}

uint64_t sub_1CA2776C8@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v4 = *a1;
  v3 = a1[1];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED872180);
  swift_bridgeObjectRetain();
  sub_1CA85B624();
  sub_1CA85A5B0();
  sub_1CA27C630();
  sub_1CA85C260();
  sub_1CA85B624();
  result = swift_bridgeObjectRelease();
  *a2 = v4;
  a2[1] = v3;
  return result;
}

id static RecentlyUsedSongs.recentlyUsedAppleMusicSongs(from:)(void *a1)
{
  return sub_1CA2779E8(a1, 0);
}

uint64_t sub_1CA277774(void *a1, char a2)
{
  void *v2;
  void *v3;
  id v5;
  uint64_t v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  void *v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  unint64_t v16;
  id v17;
  uint64_t v18;

  v3 = v2;
  v5 = objc_msgSend(a1, sel_librarySpecificFetchOptions);
  objc_msgSend(v5, sel_setFetchLimit_, 70);
  objc_msgSend(v5, sel_setIncludeStoryMemories_, 1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED873300);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1CA8D4EA0;
  v7 = objc_allocWithZone(MEMORY[0x1E0CB3928]);
  v8 = (void *)sub_1CA85B510();
  v9 = objc_msgSend(v7, sel_initWithKey_ascending_, v8, 0);

  *(_QWORD *)(v6 + 32) = v9;
  v10 = objc_allocWithZone(MEMORY[0x1E0CB3928]);
  v11 = (void *)sub_1CA85B510();
  v12 = objc_msgSend(v10, sel_initWithKey_ascending_, v11, 0);

  *(_QWORD *)(v6 + 40) = v12;
  sub_1CA85B7C8();
  sub_1CA24EEC0(0, (unint64_t *)&unk_1ED872328);
  v13 = (void *)sub_1CA85B798();
  swift_bridgeObjectRelease();
  objc_msgSend(v5, sel_setSortDescriptors_, v13);

  v14 = objc_msgSend((id)objc_opt_self(), sel_fetchAssetCollectionsWithType_subtype_options_, 4, 0x7FFFFFFFFFFFFFFFLL, v5);
  v15 = objc_msgSend(v14, sel_fetchedObjects);

  if (v15)
  {
    sub_1CA24EEC0(0, &qword_1ED872370);
    v16 = sub_1CA85B7B0();

  }
  else
  {
    v16 = MEMORY[0x1E0DEE9D8];
  }
  v17 = v3;
  v18 = sub_1CA27B74C(MEMORY[0x1E0DEE9E0], v16, a2 & 1);
  swift_bridgeObjectRelease();

  RecentlyUsedSongs.add(songIDDateMap:)((Swift::OpaquePointer)v18);
  return swift_bridgeObjectRelease();
}

id static RecentlyUsedSongs.recentlyUsedFlexMusicSongs(from:)(void *a1)
{
  return sub_1CA2779E8(a1, 1);
}

id sub_1CA2779E8(void *a1, char a2)
{
  objc_class *v2;
  id v5;

  v5 = objc_msgSend(objc_allocWithZone(v2), sel_init);
  sub_1CA277774(a1, a2);
  return v5;
}

id sub_1CA277A40(uint64_t a1, uint64_t a2, void *a3, char a4)
{
  id v6;
  id v7;
  id v8;

  v6 = objc_allocWithZone((Class)swift_getObjCClassMetadata());
  v7 = a3;
  v8 = objc_msgSend(v6, sel_init);
  sub_1CA277774(v7, a4);

  return v8;
}

id static RecentlyUsedSongs.recentlyUsedFlexMusicSongsForCollections(from:)(void *a1)
{
  return sub_1CA27C0C8(a1);
}

id static RecentlyUsedSongs.recentlyUsedAppleMusicSongsForCollections(from:)(void *a1)
{
  return sub_1CA27C36C(a1);
}

id sub_1CA277AE4(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t (*a5)(void))
{
  id v6;
  void *v7;

  v6 = a3;
  v7 = (void *)a5();

  return v7;
}

uint64_t sub_1CA277B6C(_QWORD **a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6[2];

  v2 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED872180) - 8);
  v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v3 = (_QWORD *)sub_1CA3A7908(v3);
  v4 = v3[2];
  v6[0] = (uint64_t)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v6[1] = v4;
  result = sub_1CA279F20(v6);
  *a1 = v3;
  return result;
}

unint64_t sub_1CA277BF0(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  uint64_t v14;
  _OWORD *v15;
  _OWORD *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_1CA85BDA4();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_1CA85C368();
        swift_bridgeObjectRetain();
        sub_1CA85B4B0();
        v9 = sub_1CA85C3B0();
        result = swift_bridgeObjectRelease();
        v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8)
            goto LABEL_5;
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          v11 = *(_QWORD *)(a2 + 48);
          v12 = (_OWORD *)(v11 + 16 * v3);
          v13 = (_OWORD *)(v11 + 16 * v6);
          if (v3 != v6 || v12 >= v13 + 1)
            *v12 = *v13;
          v14 = *(_QWORD *)(a2 + 56);
          v15 = (_OWORD *)(v14 + 16 * v3);
          v16 = (_OWORD *)(v14 + 16 * v6);
          if (v3 != v6 || (v3 = v6, v15 >= v16 + 1))
          {
            *v15 = *v16;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v18 = *v17;
    v19 = (-1 << v3) - 1;
  }
  else
  {
    v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    v19 = *v17;
    v18 = (-1 << result) - 1;
  }
  *v17 = v19 & v18;
  v20 = *(_QWORD *)(a2 + 16);
  v21 = __OFSUB__(v20, 1);
  v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1CA277DC4(unint64_t a1, uint64_t a2)
{
  return sub_1CA278B58(a1, a2, (uint64_t (*)(_QWORD))MEMORY[0x1E0CB0870]);
}

unint64_t sub_1CA277DD0(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_1CA85BDA4();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_1CA85C368();
        swift_bridgeObjectRetain();
        sub_1CA85B4B0();
        v9 = sub_1CA85C3B0();
        result = swift_bridgeObjectRelease();
        v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8)
            goto LABEL_5;
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          v11 = *(_QWORD *)(a2 + 48);
          v12 = (_OWORD *)(v11 + 16 * v3);
          v13 = (_OWORD *)(v11 + 16 * v6);
          if (v3 != v6 || v12 >= v13 + 1)
            *v12 = *v13;
          v14 = *(_QWORD *)(a2 + 56);
          v15 = (_QWORD *)(v14 + 8 * v3);
          v16 = (_QWORD *)(v14 + 8 * v6);
          if (v3 != v6 || (v3 = v6, v15 >= v16 + 1))
          {
            *v15 = *v16;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v18 = *v17;
    v19 = (-1 << v3) - 1;
  }
  else
  {
    v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    v19 = *v17;
    v18 = (-1 << result) - 1;
  }
  *v17 = v19 & v18;
  v20 = *(_QWORD *)(a2 + 16);
  v21 = __OFSUB__(v20, 1);
  v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1CA277FA4(unint64_t a1, uint64_t a2)
{
  return sub_1CA278B58(a1, a2, (uint64_t (*)(_QWORD))MEMORY[0x1E0CAE5D0]);
}

unint64_t sub_1CA277FB0(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  uint64_t v14;
  _BYTE *v15;
  _BYTE *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_1CA85BDA4();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_1CA85C368();
        swift_bridgeObjectRetain();
        sub_1CA85B4B0();
        v9 = sub_1CA85C3B0();
        result = swift_bridgeObjectRelease();
        v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8)
            goto LABEL_5;
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          v11 = *(_QWORD *)(a2 + 48);
          v12 = (_OWORD *)(v11 + 16 * v3);
          v13 = (_OWORD *)(v11 + 16 * v6);
          if (v3 != v6 || v12 >= v13 + 1)
            *v12 = *v13;
          v14 = *(_QWORD *)(a2 + 56);
          v15 = (_BYTE *)(v14 + v3);
          v16 = (_BYTE *)(v14 + v6);
          if (v3 != v6 || (v3 = v6, v15 >= v16 + 1))
          {
            *v15 = *v16;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v18 = *v17;
    v19 = (-1 << v3) - 1;
  }
  else
  {
    v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    v19 = *v17;
    v18 = (-1 << result) - 1;
  }
  *v17 = v19 & v18;
  v20 = *(_QWORD *)(a2 + 16);
  v21 = __OFSUB__(v20, 1);
  v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1CA278184(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _OWORD *v13;
  _OWORD *v14;
  uint64_t v15;
  _OWORD *v16;
  _OWORD *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_1CA85BDA4();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_1CA85C368();
        swift_bridgeObjectRetain();
        sub_1CA85B4B0();
        v10 = sub_1CA85C3B0();
        result = swift_bridgeObjectRelease();
        v11 = v10 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 < v8)
            goto LABEL_5;
        }
        else if (v11 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v11)
        {
LABEL_11:
          v12 = *(_QWORD *)(a2 + 48);
          v13 = (_OWORD *)(v12 + 16 * v3);
          v14 = (_OWORD *)(v12 + 16 * v6);
          if (v3 != v6 || v13 >= v14 + 1)
            *v13 = *v14;
          v15 = *(_QWORD *)(a2 + 56);
          v16 = (_OWORD *)(v15 + 32 * v3);
          v17 = (_OWORD *)(v15 + 32 * v6);
          if (v3 != v6 || (v3 = v6, v16 >= v17 + 2))
          {
            v9 = v17[1];
            *v16 = *v17;
            v16[1] = v9;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v19 = *v18;
    v20 = (-1 << v3) - 1;
  }
  else
  {
    v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    v20 = *v18;
    v19 = (-1 << result) - 1;
  }
  *v18 = v20 & v19;
  v21 = *(_QWORD *)(a2 + 16);
  v22 = __OFSUB__(v21, 1);
  v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

void sub_1CA278358(int64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  _DWORD *v19;
  _DWORD *v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char *v30;
  uint64_t v31;

  v28 = type metadata accessor for Song();
  v4 = *(_QWORD *)(v28 - 8);
  MEMORY[0x1E0C80A78](v28);
  v30 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = a2 + 64;
  v7 = -1 << *(_BYTE *)(a2 + 32);
  v8 = (a1 + 1) & ~v7;
  if (((1 << v8) & *(_QWORD *)(a2 + 64 + 8 * (v8 >> 6))) != 0)
  {
    v9 = ~v7;
    v10 = sub_1CA85BDA4();
    if ((*(_QWORD *)(v6 + 8 * (v8 >> 6)) & (1 << v8)) != 0)
    {
      v29 = (v10 + 1) & v9;
      v11 = *(_QWORD *)(v4 + 72);
      v31 = v9;
      v12 = (uint64_t)v30;
      do
      {
        v13 = v11;
        v14 = v11 * v8;
        sub_1CA24EE38(*(_QWORD *)(a2 + 48) + v11 * v8, v12, (uint64_t (*)(_QWORD))type metadata accessor for Song);
        sub_1CA85C368();
        swift_bridgeObjectRetain();
        sub_1CA85B4B0();
        swift_bridgeObjectRelease();
        v15 = sub_1CA85C3B0();
        sub_1CA2669CC(v12, (uint64_t (*)(_QWORD))type metadata accessor for Song);
        v16 = v31;
        v17 = v15 & v31;
        if (a1 >= (uint64_t)v29)
        {
          if (v17 < v29)
          {
            v11 = v13;
          }
          else
          {
            v11 = v13;
            if (a1 >= (uint64_t)v17)
              goto LABEL_12;
          }
        }
        else
        {
          v11 = v13;
          if (v17 >= v29 || a1 >= (uint64_t)v17)
          {
LABEL_12:
            if (v11 * a1 < v14
              || *(_QWORD *)(a2 + 48) + v11 * a1 >= (unint64_t)(*(_QWORD *)(a2 + 48) + v14 + v11))
            {
              swift_arrayInitWithTakeFrontToBack();
LABEL_17:
              v16 = v31;
            }
            else if (v11 * a1 != v14)
            {
              swift_arrayInitWithTakeBackToFront();
              goto LABEL_17;
            }
            v18 = *(_QWORD *)(a2 + 56);
            v19 = (_DWORD *)(v18 + 4 * a1);
            v20 = (_DWORD *)(v18 + 4 * v8);
            if (a1 != v8 || (a1 = v8, v19 >= v20 + 1))
            {
              *v19 = *v20;
              a1 = v8;
            }
          }
        }
        v8 = (v8 + 1) & v16;
      }
      while (((*(_QWORD *)(v6 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0);
    }
    v21 = (uint64_t *)(v6 + 8 * ((unint64_t)a1 >> 6));
    v22 = *v21;
    v23 = (-1 << a1) - 1;
  }
  else
  {
    v21 = (uint64_t *)(v6 + 8 * ((unint64_t)a1 >> 6));
    v23 = *v21;
    v22 = (-1 << a1) - 1;
  }
  *v21 = v23 & v22;
  v24 = *(_QWORD *)(a2 + 16);
  v25 = __OFSUB__(v24, 1);
  v26 = v24 - 1;
  if (v25)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v26;
    ++*(_DWORD *)(a2 + 36);
  }
}

unint64_t sub_1CA2785F8(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  _OWORD *v14;
  _OWORD *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_1CA85BDA4();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_1CA85C368();
        sub_1CA85BC00();
        result = sub_1CA85C3B0();
        v9 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v9 < v8)
            goto LABEL_5;
        }
        else if (v9 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v9)
        {
LABEL_11:
          v10 = *(_QWORD *)(a2 + 48);
          v11 = (_QWORD *)(v10 + 8 * v3);
          v12 = (_QWORD *)(v10 + 8 * v6);
          if (v3 != v6 || v11 >= v12 + 1)
            *v11 = *v12;
          v13 = *(_QWORD *)(a2 + 56);
          v14 = (_OWORD *)(v13 + 16 * v3);
          v15 = (_OWORD *)(v13 + 16 * v6);
          if (v3 != v6 || (v3 = v6, v14 >= v15 + 1))
          {
            *v14 = *v15;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v16 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v17 = *v16;
    v18 = (-1 << v3) - 1;
  }
  else
  {
    v16 = (uint64_t *)(v4 + 8 * (result >> 6));
    v18 = *v16;
    v17 = (-1 << result) - 1;
  }
  *v16 = v18 & v17;
  v19 = *(_QWORD *)(a2 + 16);
  v20 = __OFSUB__(v19, 1);
  v21 = v19 - 1;
  if (v20)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v21;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1CA2787B0(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  uint64_t v14;
  _DWORD *v15;
  _DWORD *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_1CA85BDA4();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_1CA85C368();
        swift_bridgeObjectRetain();
        sub_1CA85B4B0();
        v9 = sub_1CA85C3B0();
        result = swift_bridgeObjectRelease();
        v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8)
            goto LABEL_5;
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          v11 = *(_QWORD *)(a2 + 48);
          v12 = (_OWORD *)(v11 + 16 * v3);
          v13 = (_OWORD *)(v11 + 16 * v6);
          if (v3 != v6 || v12 >= v13 + 1)
            *v12 = *v13;
          v14 = *(_QWORD *)(a2 + 56);
          v15 = (_DWORD *)(v14 + 4 * v3);
          v16 = (_DWORD *)(v14 + 4 * v6);
          if (v3 != v6 || (v3 = v6, v15 >= v16 + 1))
          {
            *v15 = *v16;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v18 = *v17;
    v19 = (-1 << v3) - 1;
  }
  else
  {
    v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    v19 = *v17;
    v18 = (-1 << result) - 1;
  }
  *v17 = v19 & v18;
  v20 = *(_QWORD *)(a2 + 16);
  v21 = __OFSUB__(v20, 1);
  v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1CA278984(unint64_t a1, uint64_t a2)
{
  return sub_1CA278B58(a1, a2, (uint64_t (*)(_QWORD))MEMORY[0x1E0D76EB0]);
}

unint64_t sub_1CA278990(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  unint64_t v11;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  int64_t v17;
  int64_t v18;
  unint64_t v19;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_1CA85BDA4();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        v9 = *(_QWORD *)(a2 + 48);
        v10 = (_QWORD *)(v9 + 8 * v6);
        result = sub_1CA85C35C();
        v11 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 < v8 || v3 < (uint64_t)v11)
            goto LABEL_6;
        }
        else if (v11 < v8 && v3 < (uint64_t)v11)
        {
          goto LABEL_6;
        }
        v14 = (_QWORD *)(v9 + 8 * v3);
        if (v3 != v6 || v14 >= v10 + 1)
          *v14 = *v10;
        v15 = *(_QWORD *)(a2 + 56);
        v16 = *(_QWORD *)(*(_QWORD *)(sub_1CA85ADA8() - 8) + 72);
        v17 = v16 * v3;
        result = v15 + v16 * v3;
        v18 = v16 * v6;
        v19 = v15 + v16 * v6 + v16;
        if (v17 < v18 || result >= v19)
        {
          result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          v3 = v6;
          if (v17 == v18)
            goto LABEL_6;
          result = swift_arrayInitWithTakeBackToFront();
        }
        v3 = v6;
LABEL_6:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v21 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v22 = *v21;
    v23 = (-1 << v3) - 1;
  }
  else
  {
    v21 = (uint64_t *)(v4 + 8 * (result >> 6));
    v23 = *v21;
    v22 = (-1 << result) - 1;
  }
  *v21 = v23 & v22;
  v24 = *(_QWORD *)(a2 + 16);
  v25 = __OFSUB__(v24, 1);
  v26 = v24 - 1;
  if (v25)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v26;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1CA278B4C(unint64_t a1, uint64_t a2)
{
  return sub_1CA278B58(a1, a2, (uint64_t (*)(_QWORD))MEMORY[0x1E0D767B8]);
}

unint64_t sub_1CA278B58(unint64_t result, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  _OWORD *v14;
  _OWORD *v15;
  uint64_t v16;
  uint64_t v17;
  int64_t v18;
  int64_t v19;
  unint64_t v20;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;

  v4 = result;
  v5 = a2 + 64;
  v6 = -1 << *(_BYTE *)(a2 + 32);
  v7 = (result + 1) & ~v6;
  if (((1 << v7) & *(_QWORD *)(a2 + 64 + 8 * (v7 >> 6))) != 0)
  {
    v9 = ~v6;
    result = sub_1CA85BDA4();
    if ((*(_QWORD *)(v5 + 8 * (v7 >> 6)) & (1 << v7)) != 0)
    {
      v10 = (result + 1) & v9;
      while (1)
      {
        sub_1CA85C368();
        swift_bridgeObjectRetain();
        sub_1CA85B4B0();
        v11 = sub_1CA85C3B0();
        result = swift_bridgeObjectRelease();
        v12 = v11 & v9;
        if (v4 >= (uint64_t)v10)
          break;
        if (v12 < v10)
          goto LABEL_11;
LABEL_12:
        v13 = *(_QWORD *)(a2 + 48);
        v14 = (_OWORD *)(v13 + 16 * v4);
        v15 = (_OWORD *)(v13 + 16 * v7);
        if (v4 != v7 || v14 >= v15 + 1)
          *v14 = *v15;
        v16 = *(_QWORD *)(a2 + 56);
        v17 = *(_QWORD *)(*(_QWORD *)(a3(0) - 8) + 72);
        v18 = v17 * v4;
        result = v16 + v17 * v4;
        v19 = v17 * v7;
        v20 = v16 + v17 * v7 + v17;
        if (v18 < v19 || result >= v20)
        {
          result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          v4 = v7;
          if (v18 == v19)
            goto LABEL_6;
          result = swift_arrayInitWithTakeBackToFront();
        }
        v4 = v7;
LABEL_6:
        v7 = (v7 + 1) & v9;
        if (((*(_QWORD *)(v5 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) == 0)
          goto LABEL_21;
      }
      if (v12 < v10)
        goto LABEL_6;
LABEL_11:
      if (v4 < (uint64_t)v12)
        goto LABEL_6;
      goto LABEL_12;
    }
LABEL_21:
    v22 = (uint64_t *)(v5 + 8 * ((unint64_t)v4 >> 6));
    v23 = *v22;
    v24 = (-1 << v4) - 1;
  }
  else
  {
    v22 = (uint64_t *)(v5 + 8 * (result >> 6));
    v24 = *v22;
    v23 = (-1 << result) - 1;
  }
  *v22 = v24 & v23;
  v25 = *(_QWORD *)(a2 + 16);
  v26 = __OFSUB__(v25, 1);
  v27 = v25 - 1;
  if (v26)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v27;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

void sub_1CA278D60(unint64_t a1, uint64_t a2)
{
  sub_1CA278D78(a1, a2, (uint64_t (*)(_QWORD))MEMORY[0x1E0CB0870]);
}

void sub_1CA278D6C(unint64_t a1, uint64_t a2)
{
  sub_1CA278D78(a1, a2, (uint64_t (*)(_QWORD))MEMORY[0x1E0CAE5D0]);
}

void sub_1CA278D78(unint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  id v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  unint64_t v25;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  BOOL v31;
  uint64_t v32;

  v4 = a1;
  v5 = a2 + 64;
  v6 = -1 << *(_BYTE *)(a2 + 32);
  v7 = (a1 + 1) & ~v6;
  if (((1 << v7) & *(_QWORD *)(a2 + 64 + 8 * (v7 >> 6))) != 0)
  {
    v9 = ~v6;
    v10 = sub_1CA85BDA4();
    if ((*(_QWORD *)(v5 + 8 * (v7 >> 6)) & (1 << v7)) != 0)
    {
      v11 = (v10 + 1) & v9;
      do
      {
        v12 = *(id *)(*(_QWORD *)(a2 + 48) + 8 * v7);
        v13 = sub_1CA85BC78();

        v14 = v13 & v9;
        if (v4 >= (uint64_t)v11)
        {
          if (v14 < v11 || v4 < (uint64_t)v14)
            goto LABEL_6;
        }
        else if (v14 < v11 && v4 < (uint64_t)v14)
        {
          goto LABEL_6;
        }
        v17 = *(_QWORD *)(a2 + 48);
        v18 = (_QWORD *)(v17 + 8 * v4);
        v19 = (_QWORD *)(v17 + 8 * v7);
        if (v4 != v7 || v18 >= v19 + 1)
          *v18 = *v19;
        v20 = *(_QWORD *)(a2 + 56);
        v21 = *(_QWORD *)(*(_QWORD *)(a3(0) - 8) + 72);
        v22 = v21 * v4;
        v23 = v20 + v21 * v4;
        v24 = v21 * v7;
        v25 = v20 + v21 * v7 + v21;
        if (v22 < v24 || v23 >= v25)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          v4 = v7;
          if (v22 == v24)
            goto LABEL_6;
          swift_arrayInitWithTakeBackToFront();
        }
        v4 = v7;
LABEL_6:
        v7 = (v7 + 1) & v9;
      }
      while (((*(_QWORD *)(v5 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) != 0);
    }
    v27 = (uint64_t *)(v5 + 8 * ((unint64_t)v4 >> 6));
    v28 = *v27;
    v29 = (-1 << v4) - 1;
  }
  else
  {
    v27 = (uint64_t *)(v5 + 8 * (a1 >> 6));
    v29 = *v27;
    v28 = (-1 << a1) - 1;
  }
  *v27 = v29 & v28;
  v30 = *(_QWORD *)(a2 + 16);
  v31 = __OFSUB__(v30, 1);
  v32 = v30 - 1;
  if (v31)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v32;
    ++*(_DWORD *)(a2 + 36);
  }
}

unint64_t sub_1CA278F5C(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  int64_t v15;
  int64_t v16;
  unint64_t v17;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_1CA85BDA4();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      while (1)
      {
        sub_1CA85C368();
        sub_1CA85BC00();
        result = sub_1CA85C3B0();
        v9 = result & v7;
        if (v3 >= (uint64_t)v8)
          break;
        if (v9 < v8)
          goto LABEL_11;
LABEL_12:
        v10 = *(_QWORD *)(a2 + 48);
        v11 = (_QWORD *)(v10 + 8 * v3);
        v12 = (_QWORD *)(v10 + 8 * v6);
        if (v3 != v6 || v11 >= v12 + 1)
          *v11 = *v12;
        v13 = *(_QWORD *)(a2 + 56);
        v14 = *(_QWORD *)(*(_QWORD *)(sub_1CA85A5B0() - 8) + 72);
        v15 = v14 * v3;
        result = v13 + v14 * v3;
        v16 = v14 * v6;
        v17 = v13 + v14 * v6 + v14;
        if (v15 < v16 || result >= v17)
        {
          result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          v3 = v6;
          if (v15 == v16)
            goto LABEL_6;
          result = swift_arrayInitWithTakeBackToFront();
        }
        v3 = v6;
LABEL_6:
        v6 = (v6 + 1) & v7;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          goto LABEL_21;
      }
      if (v9 < v8)
        goto LABEL_6;
LABEL_11:
      if (v3 < (uint64_t)v9)
        goto LABEL_6;
      goto LABEL_12;
    }
LABEL_21:
    v19 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v20 = *v19;
    v21 = (-1 << v3) - 1;
  }
  else
  {
    v19 = (uint64_t *)(v4 + 8 * (result >> 6));
    v21 = *v19;
    v20 = (-1 << result) - 1;
  }
  *v19 = v21 & v20;
  v22 = *(_QWORD *)(a2 + 16);
  v23 = __OFSUB__(v22, 1);
  v24 = v22 - 1;
  if (v23)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v24;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1CA27913C(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _OWORD *v11;
  _OWORD *v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_1CA85BDA4();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_1CA85C368();
        sub_1CA85C3A4();
        sub_1CA85C3A4();
        result = sub_1CA85C3B0();
        v9 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v9 < v8)
            goto LABEL_5;
        }
        else if (v9 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v9)
        {
LABEL_11:
          v10 = *(_QWORD *)(a2 + 48);
          v11 = (_OWORD *)(v10 + 16 * v3);
          v12 = (_OWORD *)(v10 + 16 * v6);
          if (v3 != v6 || v11 >= v12 + 1)
            *v11 = *v12;
          v13 = *(_QWORD *)(a2 + 56);
          v14 = (_QWORD *)(v13 + 8 * v3);
          v15 = (_QWORD *)(v13 + 8 * v6);
          if (v3 != v6 || (v3 = v6, v14 >= v15 + 1))
          {
            *v14 = *v15;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v16 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v17 = *v16;
    v18 = (-1 << v3) - 1;
  }
  else
  {
    v16 = (uint64_t *)(v4 + 8 * (result >> 6));
    v18 = *v16;
    v17 = (-1 << result) - 1;
  }
  *v16 = v18 & v17;
  v19 = *(_QWORD *)(a2 + 16);
  v20 = __OFSUB__(v19, 1);
  v21 = v19 - 1;
  if (v20)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v21;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1CA27930C(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  unint64_t v11;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_1CA85BDA4();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        v9 = *(_QWORD *)(a2 + 48);
        v10 = (_QWORD *)(v9 + 8 * v6);
        result = sub_1CA85C35C();
        v11 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 >= v8 && v3 >= (uint64_t)v11)
          {
LABEL_16:
            v14 = (_QWORD *)(v9 + 8 * v3);
            if (v3 != v6 || v14 >= v10 + 1)
              *v14 = *v10;
            v15 = *(_QWORD *)(a2 + 56);
            v16 = (_QWORD *)(v15 + 8 * v3);
            v17 = (_QWORD *)(v15 + 8 * v6);
            if (v3 != v6 || (v3 = v6, v16 >= v17 + 1))
            {
              *v16 = *v17;
              v3 = v6;
            }
          }
        }
        else if (v11 >= v8 || v3 >= (uint64_t)v11)
        {
          goto LABEL_16;
        }
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v19 = *v18;
    v20 = (-1 << v3) - 1;
  }
  else
  {
    v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    v20 = *v18;
    v19 = (-1 << result) - 1;
  }
  *v18 = v20 & v19;
  v21 = *(_QWORD *)(a2 + 16);
  v22 = __OFSUB__(v21, 1);
  v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1CA2794A0(unint64_t result, uint64_t a2, __int16 a3, _QWORD *a4)
{
  uint64_t v4;
  BOOL v5;
  uint64_t v6;

  a4[(result >> 6) + 8] |= 1 << result;
  *(_QWORD *)(a4[6] + 8 * result) = a2;
  *(_WORD *)(a4[7] + 2 * result) = a3;
  v4 = a4[2];
  v5 = __OFADD__(v4, 1);
  v6 = v4 + 1;
  if (v5)
    __break(1u);
  else
    a4[2] = v6;
  return result;
}

unint64_t sub_1CA2794E4(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, _QWORD *a6)
{
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  a6[(result >> 6) + 8] |= 1 << result;
  v6 = (_QWORD *)(a6[6] + 16 * result);
  *v6 = a2;
  v6[1] = a3;
  v7 = (_QWORD *)(a6[7] + 16 * result);
  *v7 = a4;
  v7[1] = a5;
  v8 = a6[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a6[2] = v10;
  return result;
}

uint64_t sub_1CA279534(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  return sub_1CA279934(a1, a2, a3, a4, a5, (uint64_t (*)(_QWORD))MEMORY[0x1E0CB0870]);
}

unint64_t sub_1CA279540(unint64_t result, uint64_t a2, uint64_t a3, _OWORD *a4, _QWORD *a5)
{
  _QWORD *v5;
  _OWORD *v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;

  a5[(result >> 6) + 8] |= 1 << result;
  v5 = (_QWORD *)(a5[6] + 16 * result);
  *v5 = a2;
  v5[1] = a3;
  v6 = (_OWORD *)(a5[7] + (result << 6));
  v7 = a4[1];
  *v6 = *a4;
  v6[1] = v7;
  v8 = a4[3];
  v6[2] = a4[2];
  v6[3] = v8;
  v9 = a5[2];
  v10 = __OFADD__(v9, 1);
  v11 = v9 + 1;
  if (v10)
    __break(1u);
  else
    a5[2] = v11;
  return result;
}

uint64_t sub_1CA27959C(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v8 = a4[6];
  v9 = sub_1CA85AAFC();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * a1, a2, v9);
  v10 = a4[7];
  v11 = sub_1CA85B0FC();
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v10 + *(_QWORD *)(*(_QWORD *)(v11 - 8) + 72) * a1, a3, v11);
  v13 = a4[2];
  v14 = __OFADD__(v13, 1);
  v15 = v13 + 1;
  if (v14)
    __break(1u);
  else
    a4[2] = v15;
  return result;
}

unint64_t sub_1CA279654(unint64_t result, uint64_t a2, uint64_t a3, _QWORD *a4, double a5)
{
  _QWORD *v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  a4[(result >> 6) + 8] |= 1 << result;
  v5 = (_QWORD *)(a4[6] + 16 * result);
  *v5 = a2;
  v5[1] = a3;
  *(double *)(a4[7] + 8 * result) = a5;
  v6 = a4[2];
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (v7)
    __break(1u);
  else
    a4[2] = v8;
  return result;
}

uint64_t sub_1CA27969C(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  return sub_1CA279934(a1, a2, a3, a4, a5, (uint64_t (*)(_QWORD))MEMORY[0x1E0CAE5D0]);
}

unint64_t sub_1CA2796A8(unint64_t result, uint64_t a2, uint64_t a3, char a4, _QWORD *a5)
{
  _QWORD *v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  a5[(result >> 6) + 8] |= 1 << result;
  v5 = (_QWORD *)(a5[6] + 16 * result);
  *v5 = a2;
  v5[1] = a3;
  *(_BYTE *)(a5[7] + result) = a4;
  v6 = a5[2];
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (v7)
    __break(1u);
  else
    a5[2] = v8;
  return result;
}

_OWORD *sub_1CA2796F0(unint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4, _QWORD *a5)
{
  _QWORD *v6;
  _OWORD *result;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  a5[(a1 >> 6) + 8] |= 1 << a1;
  v6 = (_QWORD *)(a5[6] + 16 * a1);
  *v6 = a2;
  v6[1] = a3;
  result = sub_1CA266A44(a4, (_OWORD *)(a5[7] + 32 * a1));
  v8 = a5[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a5[2] = v10;
  return result;
}

uint64_t sub_1CA279758(unint64_t a1, uint64_t a2, _QWORD *a3, float a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  a3[(a1 >> 6) + 8] |= 1 << a1;
  v8 = a3[6];
  v9 = type metadata accessor for Song();
  result = sub_1CA24EE7C(a2, v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * a1, (uint64_t (*)(_QWORD))type metadata accessor for Song);
  *(float *)(a3[7] + 4 * a1) = a4;
  v11 = a3[2];
  v12 = __OFADD__(v11, 1);
  v13 = v11 + 1;
  if (v12)
    __break(1u);
  else
    a3[2] = v13;
  return result;
}

uint64_t sub_1CA2797F0(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  return sub_1CA279934(a1, a2, a3, a4, a5, (uint64_t (*)(_QWORD))MEMORY[0x1E0D77038]);
}

unint64_t sub_1CA2797FC(unint64_t result, uint64_t a2, uint64_t a3, _QWORD *a4, float a5, float a6)
{
  _QWORD *v6;
  float *v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  a4[(result >> 6) + 8] |= 1 << result;
  v6 = (_QWORD *)(a4[6] + 16 * result);
  *v6 = a2;
  v6[1] = a3;
  v7 = (float *)(a4[7] + 8 * result);
  *v7 = a5;
  v7[1] = a6;
  v8 = a4[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a4[2] = v10;
  return result;
}

uint64_t sub_1CA279848(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  return sub_1CA279934(a1, a2, a3, a4, a5, (uint64_t (*)(_QWORD))MEMORY[0x1E0D76EB0]);
}

uint64_t sub_1CA279854(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(_QWORD *)(a4[6] + 8 * a1) = a2;
  v7 = a4[7];
  v8 = sub_1CA85ADA8();
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v7 + *(_QWORD *)(*(_QWORD *)(v8 - 8) + 72) * a1, a3, v8);
  v10 = a4[2];
  v11 = __OFADD__(v10, 1);
  v12 = v10 + 1;
  if (v11)
    __break(1u);
  else
    a4[2] = v12;
  return result;
}

unint64_t sub_1CA2798E0(unint64_t result, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  a4[(result >> 6) + 8] |= 1 << result;
  v4 = 8 * result;
  *(_QWORD *)(a4[6] + v4) = a2;
  *(_QWORD *)(a4[7] + v4) = a3;
  v5 = a4[2];
  v6 = __OFADD__(v5, 1);
  v7 = v5 + 1;
  if (v6)
    __break(1u);
  else
    a4[2] = v7;
  return result;
}

uint64_t sub_1CA279928(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  return sub_1CA279934(a1, a2, a3, a4, a5, (uint64_t (*)(_QWORD))MEMORY[0x1E0D767B8]);
}

uint64_t sub_1CA279934(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5, uint64_t (*a6)(_QWORD))
{
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  a5[(a1 >> 6) + 8] |= 1 << a1;
  v9 = (_QWORD *)(a5[6] + 16 * a1);
  *v9 = a2;
  v9[1] = a3;
  v10 = a5[7];
  v11 = a6(0);
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v10 + *(_QWORD *)(*(_QWORD *)(v11 - 8) + 72) * a1, a4, v11);
  v13 = a5[2];
  v14 = __OFADD__(v13, 1);
  v15 = v13 + 1;
  if (v14)
    __break(1u);
  else
    a5[2] = v15;
  return result;
}

unint64_t sub_1CA2799C4(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  _QWORD *v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  a5[(result >> 6) + 8] |= 1 << result;
  *(_QWORD *)(a5[6] + 8 * result) = a2;
  v5 = (_QWORD *)(a5[7] + 16 * result);
  *v5 = a3;
  v5[1] = a4;
  v6 = a5[2];
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (v7)
    __break(1u);
  else
    a5[2] = v8;
  return result;
}

uint64_t sub_1CA279A0C(unint64_t a1, uint64_t a2, _QWORD *a3, double a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  a3[(a1 >> 6) + 8] |= 1 << a1;
  v8 = a3[6];
  v9 = sub_1CA85AE74();
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * a1, a2, v9);
  *(double *)(a3[7] + 8 * a1) = a4;
  v11 = a3[2];
  v12 = __OFADD__(v11, 1);
  v13 = v11 + 1;
  if (v12)
    __break(1u);
  else
    a3[2] = v13;
  return result;
}

uint64_t sub_1CA279AA4(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v8 = a4[6];
  v9 = sub_1CA85ACD0();
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * a1, a2, v9);
  *(_QWORD *)(a4[7] + 8 * a1) = a3;
  v11 = a4[2];
  v12 = __OFADD__(v11, 1);
  v13 = v11 + 1;
  if (v12)
    __break(1u);
  else
    a4[2] = v13;
  return result;
}

unint64_t sub_1CA279B3C(unint64_t result, __int16 a2, _QWORD *a3, double a4)
{
  uint64_t v4;
  BOOL v5;
  uint64_t v6;

  a3[(result >> 6) + 8] |= 1 << result;
  *(_WORD *)(a3[6] + 2 * result) = a2;
  *(double *)(a3[7] + 8 * result) = a4;
  v4 = a3[2];
  v5 = __OFADD__(v4, 1);
  v6 = v4 + 1;
  if (v5)
    __break(1u);
  else
    a3[2] = v6;
  return result;
}

uint64_t sub_1CA279B80(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  return sub_1CA279B98(a1, a2, a3, a4, (uint64_t (*)(_QWORD))MEMORY[0x1E0CB0870]);
}

uint64_t sub_1CA279B8C(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  return sub_1CA279B98(a1, a2, a3, a4, (uint64_t (*)(_QWORD))MEMORY[0x1E0CAE5D0]);
}

uint64_t sub_1CA279B98(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(_QWORD *)(a4[6] + 8 * a1) = a2;
  v8 = a4[7];
  v9 = a5(0);
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * a1, a3, v9);
  v11 = a4[2];
  v12 = __OFADD__(v11, 1);
  v13 = v11 + 1;
  if (v12)
    __break(1u);
  else
    a4[2] = v13;
  return result;
}

unint64_t sub_1CA279C24(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  _QWORD *v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  a5[(result >> 6) + 8] |= 1 << result;
  v5 = (_QWORD *)(a5[6] + 16 * result);
  *v5 = a2;
  v5[1] = a3;
  *(_QWORD *)(a5[7] + 8 * result) = a4;
  v6 = a5[2];
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (v7)
    __break(1u);
  else
    a5[2] = v8;
  return result;
}

unint64_t sub_1CA279C6C(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, _QWORD *a8)
{
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;

  a8[(result >> 6) + 8] |= 1 << result;
  v8 = (_QWORD *)(a8[6] + 16 * result);
  *v8 = a2;
  v8[1] = a3;
  v9 = (_QWORD *)(a8[7] + 32 * result);
  *v9 = a4;
  v9[1] = a5;
  v9[2] = a6;
  v9[3] = a7;
  v10 = a8[2];
  v11 = __OFADD__(v10, 1);
  v12 = v10 + 1;
  if (v11)
    __break(1u);
  else
    a8[2] = v12;
  return result;
}

uint64_t sub_1CA279CBC(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(_QWORD *)(a4[6] + 8 * a1) = a2;
  v7 = a4[7];
  v8 = sub_1CA85A5B0();
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v7 + *(_QWORD *)(*(_QWORD *)(v8 - 8) + 72) * a1, a3, v8);
  v10 = a4[2];
  v11 = __OFADD__(v10, 1);
  v12 = v10 + 1;
  if (v11)
    __break(1u);
  else
    a4[2] = v12;
  return result;
}

unint64_t sub_1CA279D48(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5, double a6)
{
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;

  a5[(result >> 6) + 8] |= 1 << result;
  *(_QWORD *)(a5[6] + 8 * result) = a2;
  v6 = a5[7] + 24 * result;
  *(_QWORD *)v6 = a3;
  *(_QWORD *)(v6 + 8) = a4;
  *(double *)(v6 + 16) = a6;
  v7 = a5[2];
  v8 = __OFADD__(v7, 1);
  v9 = v7 + 1;
  if (v8)
    __break(1u);
  else
    a5[2] = v9;
  return result;
}

uint64_t sub_1CA279D98(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v8 = a4[6];
  v9 = sub_1CA85AB98();
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * a1, a2, v9);
  *(_QWORD *)(a4[7] + 8 * a1) = a3;
  v11 = a4[2];
  v12 = __OFADD__(v11, 1);
  v13 = v11 + 1;
  if (v12)
    __break(1u);
  else
    a4[2] = v13;
  return result;
}

unint64_t sub_1CA279E38(unint64_t result, uint64_t a2, _QWORD *a3, double a4, double a5)
{
  double *v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  a3[(result >> 6) + 8] |= 1 << result;
  v5 = (double *)(a3[6] + 16 * result);
  *v5 = a4;
  v5[1] = a5;
  *(_QWORD *)(a3[7] + 8 * result) = a2;
  v6 = a3[2];
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (v7)
    __break(1u);
  else
    a3[2] = v8;
  return result;
}

uint64_t sub_1CA279E80(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v8 = a4[6];
  v9 = type metadata accessor for DateAndLocation();
  result = sub_1CA24EE7C(a2, v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * a1, (uint64_t (*)(_QWORD))type metadata accessor for DateAndLocation);
  *(_QWORD *)(a4[7] + 8 * a1) = a3;
  v11 = a4[2];
  v12 = __OFADD__(v11, 1);
  v13 = v11 + 1;
  if (v12)
    __break(1u);
  else
    a4[2] = v13;
  return result;
}

uint64_t sub_1CA279F18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1CA276F30(a1, a2, a3);
}

uint64_t sub_1CA279F20(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  _QWORD *v37;
  BOOL v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  _QWORD *v46;
  BOOL v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  uint64_t v69;
  char v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  unint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  unint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  BOOL v90;
  unint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  BOOL v100;
  uint64_t v101;
  char v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  BOOL v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  unint64_t v118;
  char *v119;
  char *v120;
  uint64_t v121;
  char *v122;
  uint64_t v123;
  unint64_t v124;
  uint64_t v125;
  unint64_t v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  char *v130;
  unint64_t v131;
  uint64_t v132;
  uint64_t v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  _QWORD *v137;
  _QWORD *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  _QWORD *v142;
  _QWORD *v143;
  unint64_t v144;
  uint64_t v145;
  uint64_t v146;
  _QWORD *v147;
  char *v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t *v153;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED872180);
  v145 = *(_QWORD *)(v4 - 8);
  v146 = v4;
  v5 = MEMORY[0x1E0C80A78](v4);
  v140 = (uint64_t)&v132 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x1E0C80A78](v5);
  v151 = (uint64_t)&v132 - v8;
  v9 = MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v132 - v10;
  v12 = MEMORY[0x1E0C80A78](v9);
  v14 = (char *)&v132 - v13;
  v15 = MEMORY[0x1E0C80A78](v12);
  v143 = (uint64_t *)((char *)&v132 - v16);
  v17 = MEMORY[0x1E0C80A78](v15);
  v142 = (uint64_t *)((char *)&v132 - v18);
  v19 = MEMORY[0x1E0C80A78](v17);
  v138 = (uint64_t *)((char *)&v132 - v20);
  MEMORY[0x1E0C80A78](v19);
  v137 = (uint64_t *)((char *)&v132 - v21);
  v153 = a1;
  v22 = a1[1];
  result = sub_1CA85C254();
  if (result >= v22)
  {
    if (v22 < 0)
      goto LABEL_157;
    if (v22)
      return sub_1CA27A9D0(0, v22, 1, v153);
    return result;
  }
  if (v22 >= 0)
    v24 = v22;
  else
    v24 = v22 + 1;
  if (v22 < -1)
    goto LABEL_165;
  v147 = v14;
  v148 = v11;
  v136 = result;
  if (v22 < 2)
  {
    v28 = (char *)MEMORY[0x1E0DEE9D8];
    v144 = MEMORY[0x1E0DEE9D8]
         + ((*(unsigned __int8 *)(v145 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v145 + 80));
    v135 = MEMORY[0x1E0DEE9D8];
    if (v22 != 1)
    {
      v30 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
LABEL_123:
      if (v30 >= 2)
      {
        v125 = *v153;
        do
        {
          v126 = v30 - 2;
          if (v30 < 2)
            goto LABEL_152;
          if (!v125)
            goto LABEL_164;
          v127 = v28;
          v128 = *(_QWORD *)&v28[16 * v126 + 32];
          v129 = *(_QWORD *)&v28[16 * v30 + 24];
          sub_1CA27AC3C(v125 + *(_QWORD *)(v145 + 72) * v128, v125 + *(_QWORD *)(v145 + 72) * *(_QWORD *)&v28[16 * v30 + 16], v125 + *(_QWORD *)(v145 + 72) * v129, v144);
          if (v2)
            break;
          if (v129 < v128)
            goto LABEL_153;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v127 = sub_1CA3A78E0((uint64_t)v28);
          if (v126 >= *((_QWORD *)v127 + 2))
            goto LABEL_154;
          v130 = &v127[16 * v126 + 32];
          *(_QWORD *)v130 = v128;
          *((_QWORD *)v130 + 1) = v129;
          v131 = *((_QWORD *)v127 + 2);
          if (v30 > v131)
            goto LABEL_155;
          memmove(&v127[16 * v30 + 16], &v127[16 * v30 + 32], 16 * (v131 - v30));
          *((_QWORD *)v127 + 2) = v131 - 1;
          v30 = v131 - 1;
          v28 = v127;
        }
        while (v131 > 2);
      }
LABEL_134:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v135 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    v25 = v24 >> 1;
    v26 = sub_1CA85B81C();
    *(_QWORD *)(v26 + 16) = v25;
    v27 = *(unsigned __int8 *)(v145 + 80);
    v135 = v26;
    v144 = v26 + ((v27 + 32) & ~v27);
  }
  v29 = 0;
  v28 = (char *)MEMORY[0x1E0DEE9D8];
  while (1)
  {
    v31 = v29;
    v32 = v29 + 1;
    if (v29 + 1 >= v22)
    {
      v39 = v29 + 1;
      v40 = (uint64_t)v148;
    }
    else
    {
      v33 = *v153;
      v34 = *(_QWORD *)(v145 + 72);
      v35 = v137;
      sub_1CA2684BC(*v153 + v34 * v32, (uint64_t)v137, &qword_1ED872180);
      v141 = v31;
      v152 = v34;
      v36 = v33 + v34 * v31;
      v37 = v138;
      sub_1CA2684BC(v36, (uint64_t)v138, &qword_1ED872180);
      v38 = *v35 == *v37 && v35[1] == v37[1];
      LODWORD(v150) = v38 ? 0 : sub_1CA85C284();
      sub_1CA267BE8((uint64_t)v138, &qword_1ED872180);
      sub_1CA267BE8((uint64_t)v137, &qword_1ED872180);
      v31 = v141;
      v139 = v33;
      if (v141 + 2 >= v22)
      {
        v42 = v141 + 2;
        if ((v150 & 1) == 0)
          goto LABEL_35;
      }
      else
      {
        v149 = v152 * v32;
        v41 = v33;
        v42 = v141 + 2;
        v43 = v152 * (v141 + 2);
        while (1)
        {
          v44 = v22;
          v45 = v142;
          sub_1CA2684BC(v41 + v43, (uint64_t)v142, &qword_1ED872180);
          v46 = v143;
          sub_1CA2684BC(v41 + v149, (uint64_t)v143, &qword_1ED872180);
          v47 = *v45 == *v46 && v45[1] == v46[1];
          v48 = v47 ? 0 : sub_1CA85C284();
          sub_1CA267BE8((uint64_t)v143, &qword_1ED872180);
          sub_1CA267BE8((uint64_t)v142, &qword_1ED872180);
          v22 = v44;
          if (((v150 ^ v48) & 1) != 0)
            break;
          v41 += v152;
          if (v44 == ++v42)
          {
            v42 = v44;
            break;
          }
        }
        v31 = v141;
        if ((v150 & 1) == 0)
        {
LABEL_35:
          v40 = (uint64_t)v148;
          v39 = v42;
          goto LABEL_51;
        }
      }
      if (v42 < v31)
        goto LABEL_158;
      v39 = v42;
      if (v31 >= v42)
      {
        v40 = (uint64_t)v148;
      }
      else
      {
        v149 = v22;
        v134 = v28;
        v49 = 0;
        v50 = v31;
        v51 = v152 * (v39 - 1);
        v52 = v39 * v152;
        v53 = v50;
        v54 = v50 * v152;
        v40 = (uint64_t)v148;
        do
        {
          if (v53 != v39 + v49 - 1)
          {
            v56 = v2;
            v57 = v139;
            if (!v139)
              goto LABEL_163;
            v58 = v139 + v54;
            v150 = v139 + v51;
            sub_1CA24EEF8(v139 + v54, v140, &qword_1ED872180);
            if (v54 < v51 || v58 >= v57 + v52)
            {
              v55 = v150;
              swift_arrayInitWithTakeFrontToBack();
            }
            else
            {
              v55 = v150;
              if (v54 != v51)
                swift_arrayInitWithTakeBackToFront();
            }
            sub_1CA24EEF8(v140, v55, &qword_1ED872180);
            v40 = (uint64_t)v148;
            v2 = v56;
          }
          ++v53;
          --v49;
          v51 -= v152;
          v52 -= v152;
          v54 += v152;
        }
        while (v53 < v39 + v49);
        v28 = v134;
        v31 = v141;
        v22 = v149;
      }
    }
LABEL_51:
    v150 = v39;
    if (v39 >= v22)
      goto LABEL_75;
    if (__OFSUB__(v39, v31))
      goto LABEL_156;
    if (v39 - v31 >= v136)
      goto LABEL_75;
    if (__OFADD__(v31, v136))
      goto LABEL_159;
    v59 = v31 + v136 >= v22 ? v22 : v31 + v136;
    if (v59 < v31)
      break;
    v141 = v31;
    v60 = v150;
    if (v150 != v59)
    {
      v133 = v2;
      v134 = v28;
      v61 = *(_QWORD *)(v145 + 72);
      v152 = v61 * (v150 - 1);
      v149 = v61;
      v62 = v150 * v61;
      v139 = v59;
      do
      {
        v63 = 0;
        v64 = v141;
        v150 = v62;
        while (1)
        {
          v65 = (_QWORD *)v40;
          v66 = *v153;
          v67 = v62 + v63 + *v153;
          v68 = v147;
          sub_1CA2684BC(v67, (uint64_t)v147, &qword_1ED872180);
          v69 = v152 + v63 + v66;
          v40 = (uint64_t)v65;
          sub_1CA2684BC(v69, (uint64_t)v65, &qword_1ED872180);
          if (*v68 == *v65 && v68[1] == v65[1])
            break;
          v71 = sub_1CA85C284();
          sub_1CA267BE8(v40, &qword_1ED872180);
          sub_1CA267BE8((uint64_t)v68, &qword_1ED872180);
          if ((v71 & 1) == 0)
            goto LABEL_62;
          v72 = *v153;
          v62 = v150;
          if (!*v153)
            goto LABEL_161;
          v73 = v72 + v152 + v63;
          sub_1CA24EEF8(v72 + v150 + v63, v151, &qword_1ED872180);
          swift_arrayInitWithTakeFrontToBack();
          sub_1CA24EEF8(v151, v73, &qword_1ED872180);
          v40 = (uint64_t)v148;
          v63 -= v149;
          if (v60 == ++v64)
            goto LABEL_63;
        }
        sub_1CA267BE8((uint64_t)v65, &qword_1ED872180);
        sub_1CA267BE8((uint64_t)v68, &qword_1ED872180);
LABEL_62:
        v62 = v150;
LABEL_63:
        ++v60;
        v152 += v149;
        v62 += v149;
      }
      while (v60 != v139);
      v150 = v139;
      v2 = v133;
      v28 = v134;
    }
    v31 = v141;
LABEL_75:
    if (v150 < v31)
      goto LABEL_151;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v28 = sub_1CA3A7130(0, *((_QWORD *)v28 + 2) + 1, 1, v28);
    v75 = *((_QWORD *)v28 + 2);
    v74 = *((_QWORD *)v28 + 3);
    v30 = v75 + 1;
    if (v75 >= v74 >> 1)
      v28 = sub_1CA3A7130((char *)(v74 > 1), v75 + 1, 1, v28);
    *((_QWORD *)v28 + 2) = v30;
    v76 = v28 + 32;
    v77 = &v28[16 * v75 + 32];
    v78 = v150;
    *(_QWORD *)v77 = v31;
    *((_QWORD *)v77 + 1) = v78;
    if (v75)
    {
      while (1)
      {
        v79 = v30 - 1;
        if (v30 >= 4)
        {
          v84 = &v76[16 * v30];
          v85 = *((_QWORD *)v84 - 8);
          v86 = *((_QWORD *)v84 - 7);
          v90 = __OFSUB__(v86, v85);
          v87 = v86 - v85;
          if (v90)
            goto LABEL_140;
          v89 = *((_QWORD *)v84 - 6);
          v88 = *((_QWORD *)v84 - 5);
          v90 = __OFSUB__(v88, v89);
          v82 = v88 - v89;
          v83 = v90;
          if (v90)
            goto LABEL_141;
          v91 = v30 - 2;
          v92 = &v76[16 * v30 - 32];
          v94 = *(_QWORD *)v92;
          v93 = *((_QWORD *)v92 + 1);
          v90 = __OFSUB__(v93, v94);
          v95 = v93 - v94;
          if (v90)
            goto LABEL_143;
          v90 = __OFADD__(v82, v95);
          v96 = v82 + v95;
          if (v90)
            goto LABEL_146;
          if (v96 >= v87)
          {
            v114 = &v76[16 * v79];
            v116 = *(_QWORD *)v114;
            v115 = *((_QWORD *)v114 + 1);
            v90 = __OFSUB__(v115, v116);
            v117 = v115 - v116;
            if (v90)
              goto LABEL_150;
            v107 = v82 < v117;
            goto LABEL_112;
          }
        }
        else
        {
          if (v30 != 3)
          {
            v108 = *((_QWORD *)v28 + 4);
            v109 = *((_QWORD *)v28 + 5);
            v90 = __OFSUB__(v109, v108);
            v101 = v109 - v108;
            v102 = v90;
            goto LABEL_106;
          }
          v81 = *((_QWORD *)v28 + 4);
          v80 = *((_QWORD *)v28 + 5);
          v90 = __OFSUB__(v80, v81);
          v82 = v80 - v81;
          v83 = v90;
        }
        if ((v83 & 1) != 0)
          goto LABEL_142;
        v91 = v30 - 2;
        v97 = &v76[16 * v30 - 32];
        v99 = *(_QWORD *)v97;
        v98 = *((_QWORD *)v97 + 1);
        v100 = __OFSUB__(v98, v99);
        v101 = v98 - v99;
        v102 = v100;
        if (v100)
          goto LABEL_145;
        v103 = &v76[16 * v79];
        v105 = *(_QWORD *)v103;
        v104 = *((_QWORD *)v103 + 1);
        v90 = __OFSUB__(v104, v105);
        v106 = v104 - v105;
        if (v90)
          goto LABEL_148;
        if (__OFADD__(v101, v106))
          goto LABEL_149;
        if (v101 + v106 >= v82)
        {
          v107 = v82 < v106;
LABEL_112:
          if (v107)
            v79 = v91;
          goto LABEL_114;
        }
LABEL_106:
        if ((v102 & 1) != 0)
          goto LABEL_144;
        v110 = &v76[16 * v79];
        v112 = *(_QWORD *)v110;
        v111 = *((_QWORD *)v110 + 1);
        v90 = __OFSUB__(v111, v112);
        v113 = v111 - v112;
        if (v90)
          goto LABEL_147;
        if (v113 < v101)
          goto LABEL_14;
LABEL_114:
        v118 = v79 - 1;
        if (v79 - 1 >= v30)
        {
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
LABEL_154:
          __break(1u);
LABEL_155:
          __break(1u);
LABEL_156:
          __break(1u);
LABEL_157:
          __break(1u);
LABEL_158:
          __break(1u);
LABEL_159:
          __break(1u);
          goto LABEL_160;
        }
        if (!*v153)
          goto LABEL_162;
        v119 = v28;
        v120 = &v76[16 * v118];
        v121 = *(_QWORD *)v120;
        v122 = &v76[16 * v79];
        v123 = *((_QWORD *)v122 + 1);
        sub_1CA27AC3C(*v153 + *(_QWORD *)(v145 + 72) * *(_QWORD *)v120, *v153 + *(_QWORD *)(v145 + 72) * *(_QWORD *)v122, *v153 + *(_QWORD *)(v145 + 72) * v123, v144);
        if (v2)
          goto LABEL_134;
        if (v123 < v121)
          goto LABEL_137;
        if (v79 > *((_QWORD *)v119 + 2))
          goto LABEL_138;
        *(_QWORD *)v120 = v121;
        *(_QWORD *)&v76[16 * v118 + 8] = v123;
        v124 = *((_QWORD *)v119 + 2);
        if (v79 >= v124)
          goto LABEL_139;
        v28 = v119;
        v30 = v124 - 1;
        memmove(&v76[16 * v79], v122 + 16, 16 * (v124 - 1 - v79));
        *((_QWORD *)v119 + 2) = v124 - 1;
        if (v124 <= 2)
          goto LABEL_14;
      }
    }
    v30 = 1;
LABEL_14:
    v22 = v153[1];
    v29 = v150;
    if (v150 >= v22)
      goto LABEL_123;
  }
LABEL_160:
  __break(1u);
LABEL_161:
  __break(1u);
LABEL_162:
  __break(1u);
LABEL_163:
  __break(1u);
LABEL_164:
  __break(1u);
LABEL_165:
  result = sub_1CA85C038();
  __break(1u);
  return result;
}

uint64_t sub_1CA27A9D0(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v31 = a1;
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED872180);
  v7 = MEMORY[0x1E0C80A78](v32);
  v36 = (uint64_t)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x1E0C80A78](v7);
  v11 = (uint64_t *)((char *)&v29 - v10);
  result = MEMORY[0x1E0C80A78](v9);
  v15 = (uint64_t *)((char *)&v29 - v14);
  v35 = a3;
  v30 = a2;
  if (a3 != a2)
  {
    v16 = *(_QWORD *)(v13 + 72);
    v38 = v16 * (v35 - 1);
    v33 = (char *)&v29 - v14;
    v34 = v16;
    v37 = v16 * v35;
    v17 = &qword_1ED872180;
LABEL_6:
    v18 = 0;
    v19 = v31;
    while (1)
    {
      v20 = *a4;
      sub_1CA2684BC(v37 + v18 + *a4, (uint64_t)v15, v17);
      sub_1CA2684BC(v38 + v18 + v20, (uint64_t)v11, v17);
      if (*v15 == *v11 && v15[1] == v11[1])
      {
        sub_1CA267BE8((uint64_t)v11, v17);
        result = sub_1CA267BE8((uint64_t)v15, v17);
LABEL_5:
        v38 += v34;
        v37 += v34;
        if (++v35 == v30)
          return result;
        goto LABEL_6;
      }
      v22 = sub_1CA85C284();
      sub_1CA267BE8((uint64_t)v11, v17);
      result = sub_1CA267BE8((uint64_t)v15, v17);
      if ((v22 & 1) == 0)
        goto LABEL_5;
      v23 = *a4;
      if (!*a4)
        break;
      v24 = v11;
      v25 = v17;
      v26 = a4;
      v27 = v23 + v38 + v18;
      v28 = v25;
      sub_1CA24EEF8(v23 + v37 + v18, v36, v25);
      swift_arrayInitWithTakeFrontToBack();
      result = sub_1CA24EEF8(v36, v27, v28);
      v18 -= v34;
      ++v19;
      a4 = v26;
      v17 = v28;
      v11 = v24;
      v15 = v33;
      if (v35 == v19)
        goto LABEL_5;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1CA27AC3C(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v33;
  unint64_t v34;
  _QWORD *v35;
  unint64_t v36;
  _QWORD *v37;
  char v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t result;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  unint64_t v46;
  unint64_t v47;
  unint64_t v48;
  unint64_t v49;

  v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED872180);
  v8 = MEMORY[0x1E0C80A78](v44);
  v46 = (unint64_t)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x1E0C80A78](v8);
  v45 = (uint64_t *)((char *)&v43 - v11);
  v12 = MEMORY[0x1E0C80A78](v10);
  v14 = (uint64_t *)((char *)&v43 - v13);
  MEMORY[0x1E0C80A78](v12);
  v17 = (uint64_t *)((char *)&v43 - v16);
  v18 = *(_QWORD *)(v15 + 72);
  if (!v18)
  {
    __break(1u);
LABEL_72:
    __break(1u);
LABEL_73:
    __break(1u);
    goto LABEL_74;
  }
  v19 = *(_QWORD *)(v15 + 72);
  if (a2 - a1 == 0x8000000000000000 && v19 == -1)
    goto LABEL_72;
  v20 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v18 == -1)
    goto LABEL_73;
  v21 = (uint64_t)(a2 - a1) / v18;
  v49 = a1;
  v48 = a4;
  v22 = v20 / v18;
  if (v21 >= v20 / v19)
  {
    if ((v22 & 0x8000000000000000) == 0)
    {
      v24 = v22 * v19;
      if (a4 < a2 || a2 + v24 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      v31 = a4 + v24;
      v47 = a4 + v24;
      v49 = a2;
      if (v24 >= 1 && a1 < a2)
      {
        v33 = -v19;
        do
        {
          v34 = a1;
          v35 = v45;
          sub_1CA2684BC(v31 + v33, (uint64_t)v45, &qword_1ED872180);
          v36 = a2 + v33;
          v37 = (_QWORD *)v46;
          sub_1CA2684BC(a2 + v33, v46, &qword_1ED872180);
          if (*v35 == *v37 && v35[1] == v37[1])
            v39 = 0;
          else
            v39 = sub_1CA85C284();
          v40 = a3 + v33;
          sub_1CA267BE8(v46, &qword_1ED872180);
          sub_1CA267BE8((uint64_t)v45, &qword_1ED872180);
          if ((v39 & 1) != 0)
          {
            if (a3 < a2 || v40 >= a2)
            {
              swift_arrayInitWithTakeFrontToBack();
              a1 = v34;
            }
            else
            {
              a1 = v34;
              if (a3 != a2)
                swift_arrayInitWithTakeBackToFront();
            }
            v49 += v33;
          }
          else
          {
            v41 = v47;
            v47 += v33;
            if (a3 < v41 || v40 >= v41)
            {
              swift_arrayInitWithTakeFrontToBack();
              v36 = a2;
              a1 = v34;
            }
            else
            {
              a1 = v34;
              if (a3 != v41)
                swift_arrayInitWithTakeBackToFront();
              v36 = a2;
            }
          }
          v31 = v47;
          if (v47 <= a4)
            break;
          a2 = v36;
          a3 += v33;
        }
        while (v36 > a1);
      }
LABEL_70:
      sub_1CA3A72D4(&v49, &v48, (uint64_t *)&v47);
      return 1;
    }
  }
  else if ((v21 & 0x8000000000000000) == 0)
  {
    v23 = v21 * v19;
    if (a4 < a1 || a1 + v23 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    v46 = a4 + v23;
    v47 = a4 + v23;
    if (v23 >= 1 && a2 < a3)
    {
      while (1)
      {
        sub_1CA2684BC(a2, (uint64_t)v17, &qword_1ED872180);
        sub_1CA2684BC(a4, (uint64_t)v14, &qword_1ED872180);
        if (*v17 == *v14 && v17[1] == v14[1])
          break;
        v27 = sub_1CA85C284();
        sub_1CA267BE8((uint64_t)v14, &qword_1ED872180);
        sub_1CA267BE8((uint64_t)v17, &qword_1ED872180);
        if ((v27 & 1) == 0)
          goto LABEL_32;
        v28 = v49;
        v29 = a2 + v19;
        if (v49 < a2 || v49 >= v29)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (v49 == a2)
        {
          v28 = a2;
        }
        else
        {
          swift_arrayInitWithTakeBackToFront();
        }
LABEL_38:
        v49 = v28 + v19;
        a4 = v48;
        if (v48 < v46)
        {
          a2 = v29;
          if (v29 < a3)
            continue;
        }
        goto LABEL_70;
      }
      sub_1CA267BE8((uint64_t)v14, &qword_1ED872180);
      sub_1CA267BE8((uint64_t)v17, &qword_1ED872180);
LABEL_32:
      v28 = v49;
      v30 = v48 + v19;
      if (v49 < v48 || v49 >= v30)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (v49 != v48)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      v48 = v30;
      v29 = a2;
      goto LABEL_38;
    }
    goto LABEL_70;
  }
LABEL_74:
  result = sub_1CA85C0D4();
  __break(1u);
  return result;
}

unint64_t sub_1CA27B164(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  _QWORD *i;
  unsigned __int16 v5;
  uint64_t v6;
  unint64_t result;
  char v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94B0B0);
    v3 = (_QWORD *)sub_1CA85C0C8();
    for (i = (_QWORD *)(a1 + 40); ; i += 2)
    {
      v5 = *((_WORD *)i - 4);
      v6 = *i;
      result = sub_1CA250E9C(v5);
      if ((v8 & 1) != 0)
        break;
      *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(_WORD *)(v3[6] + 2 * result) = v5;
      *(_QWORD *)(v3[7] + 8 * result) = v6;
      v9 = v3[2];
      v10 = __OFADD__(v9, 1);
      v11 = v9 + 1;
      if (v10)
        goto LABEL_10;
      v3[2] = v11;
      if (!--v1)
        return (unint64_t)v3;
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E0DEE9E0];
  }
  return result;
}

unint64_t sub_1CA27B238(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t result;
  char v8;
  uint64_t *v9;
  _QWORD *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  char v16;

  v1 = a1[2];
  if (!v1)
    return MEMORY[0x1E0DEE9E0];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED874B58);
  v3 = (_QWORD *)sub_1CA85C0C8();
  v4 = a1[4];
  v5 = a1[5];
  v6 = a1[6];
  result = sub_1CA251130(v4);
  if ((v8 & 1) != 0)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_bridgeObjectRetain();
    return (unint64_t)v3;
  }
  v9 = a1 + 9;
  while (1)
  {
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_QWORD *)(v3[6] + 8 * result) = v4;
    v10 = (_QWORD *)(v3[7] + 16 * result);
    *v10 = v5;
    v10[1] = v6;
    v11 = v3[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      break;
    v3[2] = v13;
    if (!--v1)
      goto LABEL_8;
    v14 = v9 + 3;
    v4 = *(v9 - 2);
    v5 = *(v9 - 1);
    v15 = *v9;
    swift_bridgeObjectRetain();
    result = sub_1CA251130(v4);
    v9 = v14;
    v6 = v15;
    if ((v16 & 1) != 0)
      goto LABEL_7;
  }
  __break(1u);
  return result;
}

unint64_t sub_1CA27B344(double *a1)
{
  uint64_t v1;
  _QWORD *v3;
  double v4;
  double v5;
  double v6;
  unint64_t result;
  char v8;
  double *v9;
  double *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  double *v14;
  double v15;
  char v16;

  v1 = *((_QWORD *)a1 + 2);
  if (!v1)
    return MEMORY[0x1E0DEE9E0];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94AE50);
  v3 = (_QWORD *)sub_1CA85C0C8();
  v4 = a1[4];
  v5 = a1[5];
  v6 = a1[6];
  result = sub_1CA251398(v4, v5);
  if ((v8 & 1) != 0)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_bridgeObjectRetain();
    return (unint64_t)v3;
  }
  v9 = a1 + 9;
  while (1)
  {
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v10 = (double *)(v3[6] + 16 * result);
    *v10 = v4;
    v10[1] = v5;
    *(double *)(v3[7] + 8 * result) = v6;
    v11 = v3[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      break;
    v3[2] = v13;
    if (!--v1)
      goto LABEL_8;
    v14 = v9 + 3;
    v4 = *(v9 - 2);
    v5 = *(v9 - 1);
    v15 = *v9;
    swift_bridgeObjectRetain();
    result = sub_1CA251398(v4, v5);
    v9 = v14;
    v6 = v15;
    if ((v16 & 1) != 0)
      goto LABEL_7;
  }
  __break(1u);
  return result;
}

uint64_t sub_1CA27B458(uint64_t a1, void (*a2)(uint64_t, uint64_t, char *))
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t v25;
  int64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t, uint64_t, char *);

  v28 = a2;
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED872180);
  MEMORY[0x1E0C80A78](v27);
  v4 = (uint64_t *)((char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = *(_QWORD *)(a1 + 64);
  v25 = a1 + 64;
  v6 = 1 << *(_BYTE *)(a1 + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & v5;
  v26 = (unint64_t)(v6 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v10 = 0;
  while (1)
  {
    if (v8)
    {
      v11 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v12 = v11 | (v10 << 6);
      goto LABEL_5;
    }
    v21 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v21 >= v26)
      return swift_release();
    v22 = *(_QWORD *)(v25 + 8 * v21);
    ++v10;
    if (!v22)
    {
      v10 = v21 + 1;
      if (v21 + 1 >= v26)
        return swift_release();
      v22 = *(_QWORD *)(v25 + 8 * v10);
      if (!v22)
      {
        v10 = v21 + 2;
        if (v21 + 2 >= v26)
          return swift_release();
        v22 = *(_QWORD *)(v25 + 8 * v10);
        if (!v22)
        {
          v10 = v21 + 3;
          if (v21 + 3 >= v26)
            return swift_release();
          v22 = *(_QWORD *)(v25 + 8 * v10);
          if (!v22)
            break;
        }
      }
    }
LABEL_22:
    v8 = (v22 - 1) & v22;
    v12 = __clz(__rbit64(v22)) + (v10 << 6);
LABEL_5:
    v13 = *(_QWORD *)(a1 + 56);
    v14 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v12);
    v15 = *v14;
    v16 = v14[1];
    v17 = sub_1CA85A5B0();
    v18 = *(_QWORD *)(v17 - 8);
    v19 = v13 + *(_QWORD *)(v18 + 72) * v12;
    v20 = (char *)v4 + *(int *)(v27 + 48);
    (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v20, v19, v17);
    *v4 = v15;
    v4[1] = v16;
    swift_bridgeObjectRetain();
    v28(v15, v16, v20);
    result = sub_1CA267BE8((uint64_t)v4, &qword_1ED872180);
  }
  v23 = v21 + 4;
  if (v23 >= v26)
    return swift_release();
  v22 = *(_QWORD *)(v25 + 8 * v23);
  if (v22)
  {
    v10 = v23;
    goto LABEL_22;
  }
  while (1)
  {
    v10 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v10 >= v26)
      return swift_release();
    v22 = *(_QWORD *)(v25 + 8 * v10);
    ++v23;
    if (v22)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

unint64_t sub_1CA27B69C()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = qword_1EF94B6D0;
  if (!qword_1EF94B6D0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF94B6C8);
    v2 = sub_1CA27B700();
    result = MEMORY[0x1CAA4F1A4](MEMORY[0x1E0DEC850], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EF94B6D0);
  }
  return result;
}

unint64_t sub_1CA27B700()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF94B6D8;
  if (!qword_1EF94B6D8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF94B6E0);
    result = MEMORY[0x1CAA4F1A4](MEMORY[0x1E0DEAF20], v1);
    atomic_store(result, (unint64_t *)&qword_1EF94B6D8);
  }
  return result;
}

uint64_t sub_1CA27B74C(uint64_t a1, unint64_t a2, int a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  id v36;
  uint64_t v37;
  char *v38;
  id v39;
  void *v40;
  char *v41;
  uint64_t v42;
  char *v43;
  void (*v44)(char *, char *, uint64_t);
  void (*v45)(unint64_t, uint64_t, uint64_t, uint64_t);
  unsigned int (*v46)(unint64_t, uint64_t, uint64_t);
  uint64_t v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  char v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  int v60;
  char v61;
  uint64_t v62;
  _BOOL8 v63;
  uint64_t v64;
  char v65;
  uint64_t v66;
  char v67;
  _QWORD *v68;
  _QWORD *v69;
  uint64_t v70;
  BOOL v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  char v76;
  char v77;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v79;
  uint64_t v80;
  void (*v81)(char *, uint64_t);
  uint64_t v82;
  _QWORD *v83;
  char v84;
  void (*v85)(char *, uint64_t);
  uint64_t result;
  uint64_t v87;
  char *v88;
  unint64_t v89;
  uint64_t v90;
  char *v91;
  char *v92;
  char *v93;
  char *v94;
  char *v95;
  void (*v96)(char *, uint64_t, uint64_t);
  char *v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  unint64_t v101;
  char *v102;
  uint64_t v103;
  int v104;
  uint64_t v105;
  unint64_t v106;
  _QWORD *v107;

  v4 = v3;
  v104 = a3;
  v99 = a1;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8711C0);
  v7 = MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v87 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x1E0C80A78](v7);
  v12 = (unint64_t)&v87 - v11;
  v13 = MEMORY[0x1E0C80A78](v10);
  v15 = (char *)&v87 - v14;
  v16 = MEMORY[0x1E0C80A78](v13);
  v18 = (char *)&v87 - v17;
  v19 = MEMORY[0x1E0C80A78](v16);
  v21 = (char *)&v87 - v20;
  MEMORY[0x1E0C80A78](v19);
  v102 = (char *)&v87 - v22;
  v23 = sub_1CA85A5B0();
  v105 = *(_QWORD *)(v23 - 8);
  v24 = MEMORY[0x1E0C80A78](v23);
  v94 = (char *)&v87 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = MEMORY[0x1E0C80A78](v24);
  v92 = (char *)&v87 - v27;
  v28 = MEMORY[0x1E0C80A78](v26);
  v97 = (char *)&v87 - v29;
  MEMORY[0x1E0C80A78](v28);
  v98 = (char *)&v87 - v30;
  if (a2 >> 62)
  {
LABEL_59:
    swift_bridgeObjectRetain();
    v31 = sub_1CA85C08C();
    if (v31)
      goto LABEL_3;
LABEL_60:
    swift_bridgeObjectRelease();
    return v99;
  }
  v31 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v31)
    goto LABEL_60;
LABEL_3:
  v95 = v21;
  v93 = v18;
  v90 = v4;
  v91 = v15;
  v88 = v9;
  v89 = v12;
  v106 = a2 & 0xC000000000000001;
  v4 = 4;
  v100 = v31;
  v101 = a2;
  while (1)
  {
    v9 = (char *)(v4 - 4);
    if (v106)
      v32 = (char *)MEMORY[0x1CAA4DD64](v4 - 4, a2);
    else
      v32 = (char *)*(id *)(a2 + 8 * v4);
    v21 = v32;
    v18 = (char *)(v4 - 3);
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_59;
    }
    objc_opt_self();
    v33 = swift_dynamicCastObjCClass();
    if (v33)
      break;
LABEL_5:

    ++v4;
    if (v18 == (char *)v31)
      goto LABEL_60;
  }
  v34 = v33;
  v15 = (char *)objc_opt_self();
  v12 = v21;
  if ((v104 & 1) != 0)
    v35 = objc_msgSend(v15, sel_flexMusicKeySongIDFromMemory_, v34);
  else
    v35 = objc_msgSend(v15, sel_appleMusicKeySongIDFromMemory_, v34);
  v36 = v35;
  if (!v36)
  {

    goto LABEL_5;
  }
  v37 = sub_1CA85B534();
  v15 = v38;

  v39 = objc_msgSend((id)v12, sel_creationDate);
  if (!v39)
  {
    v12 = (unint64_t)v102;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v105 + 56))(v102, 1, 1, v23);
    goto LABEL_21;
  }
  v40 = v39;
  v103 = v37;
  v41 = v97;
  sub_1CA85A574();

  v42 = v105;
  v12 = (unint64_t)v102;
  v43 = v41;
  v44 = *(void (**)(char *, char *, uint64_t))(v105 + 32);
  v44(v102, v43, v23);
  v45 = *(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(v42 + 56);
  v45(v12, 0, 1, v23);
  v46 = *(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v42 + 48);
  if (v46(v12, 1, v23) == 1)
  {
LABEL_21:
    swift_bridgeObjectRelease();
    sub_1CA267BE8(v12, &qword_1ED8711C0);
LABEL_22:
    v31 = v100;
    a2 = v101;
    goto LABEL_5;
  }
  v96 = (void (*)(char *, uint64_t, uint64_t))v44;
  v44(v98, (char *)v12, v23);
  v47 = v99;
  if (*(_QWORD *)(v99 + 16))
  {
    swift_bridgeObjectRetain();
    v48 = sub_1CA25081C(v103, (uint64_t)v15);
    if ((v49 & 1) != 0)
    {
      v50 = (uint64_t)v95;
      (*(void (**)(char *, uint64_t, uint64_t))(v105 + 16))(v95, *(_QWORD *)(v47 + 56) + *(_QWORD *)(v105 + 72) * v48, v23);
      v51 = 0;
    }
    else
    {
      v51 = 1;
      v50 = (uint64_t)v95;
    }
    v45(v50, v51, 1, v23);
    swift_bridgeObjectRelease();
    if (v46(v50, 1, v23) == 1)
      goto LABEL_26;
    v73 = v92;
    v96(v92, v50, v23);
    v12 = (unint64_t)v98;
    if ((sub_1CA85A520() & 1) != 0)
    {
      v74 = v89;
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v105 + 16))(v89, v12, v23);
      v45(v74, 0, 1, v23);
      if (v46(v74, 1, v23) == 1)
      {
        sub_1CA267BE8(v74, &qword_1ED8711C0);
        v75 = v99;
        swift_bridgeObjectRetain();
        v12 = sub_1CA25081C(v103, (uint64_t)v15);
        v77 = v76;
        swift_bridgeObjectRelease();
        if ((v77 & 1) != 0)
        {
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v107 = (_QWORD *)v75;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            sub_1CA260554();
            v75 = (uint64_t)v107;
          }
          swift_bridgeObjectRelease();
          v79 = (uint64_t)v88;
          v96(v88, *(_QWORD *)(v75 + 56) + *(_QWORD *)(v105 + 72) * v12, v23);
          v99 = v75;
          sub_1CA278B58(v12, v75, (uint64_t (*)(_QWORD))MEMORY[0x1E0CB0870]);
          swift_bridgeObjectRelease();
          v80 = 0;
        }
        else
        {
          v80 = 1;
          v79 = (uint64_t)v88;
        }
        v45(v79, v80, 1, v23);
        swift_bridgeObjectRelease();
        sub_1CA267BE8(v79, &qword_1ED8711C0);
      }
      else
      {
        v82 = (uint64_t)v97;
        v96(v97, v74, v23);
        v83 = (_QWORD *)v99;
        v84 = swift_isUniquelyReferenced_nonNull_native();
        v107 = v83;
        sub_1CA25D760(v82, v103, (uint64_t)v15, v84);
        v99 = (uint64_t)v107;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      v31 = v100;
      a2 = v101;
      v85 = *(void (**)(char *, uint64_t))(v105 + 8);
      v85(v92, v23);
      v85(v98, v23);
      goto LABEL_5;
    }
    swift_bridgeObjectRelease();
    v81 = *(void (**)(char *, uint64_t))(v105 + 8);
    v81(v73, v23);
    v81((char *)v12, v23);
    goto LABEL_22;
  }
  v50 = (uint64_t)v95;
  v45((unint64_t)v95, 1, 1, v23);
LABEL_26:
  sub_1CA267BE8(v50, &qword_1ED8711C0);
  v52 = (uint64_t)v93;
  (*(void (**)(char *, char *, uint64_t))(v105 + 16))(v93, v98, v23);
  v45(v52, 0, 1, v23);
  if (v46(v52, 1, v23) == 1)
  {
    sub_1CA267BE8(v52, &qword_1ED8711C0);
    v53 = v99;
    swift_bridgeObjectRetain();
    v12 = sub_1CA25081C(v103, (uint64_t)v15);
    v55 = v54;
    swift_bridgeObjectRelease();
    if ((v55 & 1) != 0)
    {
      v56 = swift_isUniquelyReferenced_nonNull_native();
      v107 = (_QWORD *)v53;
      if ((v56 & 1) == 0)
      {
        sub_1CA260554();
        v53 = (uint64_t)v107;
      }
      swift_bridgeObjectRelease();
      v57 = (uint64_t)v91;
      v96(v91, *(_QWORD *)(v53 + 56) + *(_QWORD *)(v105 + 72) * v12, v23);
      v99 = v53;
      sub_1CA278B58(v12, v53, (uint64_t (*)(_QWORD))MEMORY[0x1E0CB0870]);
      swift_bridgeObjectRelease();
      v58 = 0;
    }
    else
    {
      v58 = 1;
      v57 = (uint64_t)v91;
    }
    v45(v57, v58, 1, v23);
    swift_bridgeObjectRelease();
    sub_1CA267BE8(v57, &qword_1ED8711C0);
    goto LABEL_49;
  }
  v96(v94, v52, v23);
  v59 = (_QWORD *)v99;
  v60 = swift_isUniquelyReferenced_nonNull_native();
  v107 = v59;
  v12 = sub_1CA25081C(v103, (uint64_t)v15);
  v62 = v59[2];
  v63 = (v61 & 1) == 0;
  v64 = v62 + v63;
  if (!__OFADD__(v62, v63))
  {
    v65 = v61;
    if (v59[3] >= v64)
    {
      if ((v60 & 1) != 0)
      {
        v68 = v107;
        if ((v61 & 1) == 0)
          goto LABEL_35;
      }
      else
      {
        sub_1CA260554();
        v68 = v107;
        if ((v65 & 1) == 0)
          goto LABEL_35;
      }
    }
    else
    {
      sub_1CA2529B0(v64, v60);
      v66 = sub_1CA25081C(v103, (uint64_t)v15);
      if ((v65 & 1) != (v67 & 1))
        goto LABEL_63;
      v12 = v66;
      v68 = v107;
      if ((v65 & 1) == 0)
      {
LABEL_35:
        v68[(v12 >> 6) + 8] |= 1 << v12;
        v69 = (_QWORD *)(v68[6] + 16 * v12);
        *v69 = v103;
        v69[1] = v15;
        v96((char *)(v68[7] + *(_QWORD *)(v105 + 72) * v12), (uint64_t)v94, v23);
        v70 = v68[2];
        v71 = __OFADD__(v70, 1);
        v72 = v70 + 1;
        if (v71)
          goto LABEL_62;
        v68[2] = v72;
        swift_bridgeObjectRetain();
        goto LABEL_48;
      }
    }
    (*(void (**)(unint64_t, char *, uint64_t))(v105 + 40))(v68[7] + *(_QWORD *)(v105 + 72) * v12, v94, v23);
LABEL_48:
    v99 = (uint64_t)v107;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_49:
    v31 = v100;
    a2 = v101;
    (*(void (**)(char *, uint64_t))(v105 + 8))(v98, v23);
    goto LABEL_5;
  }
  __break(1u);
LABEL_62:
  __break(1u);
LABEL_63:
  result = sub_1CA85C2E4();
  __break(1u);
  return result;
}

id sub_1CA27C0C8(void *a1)
{
  uint64_t v1;
  id v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  char *v9;
  id v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  char *v25;
  char *v26;
  uint64_t v27;
  char *v28;
  unint64_t v29;
  _QWORD v30[2];
  char *v31;
  uint64_t v32;
  __int128 v33;
  id v34;
  uint64_t v35;

  v4 = type metadata accessor for CollectionCuration();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1CA2CEAA8(a1);
  if (!v1)
  {
    v9 = v8;
    v10 = objc_msgSend((id)objc_opt_self(), sel_ignoreProgress);
    v12 = sub_1CA47C17C(0);

    v2 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for RecentlyUsedSongs()), sel_init);
    v13 = *(_QWORD *)(v12 + 16);
    if (v13)
    {
      v31 = v9;
      v32 = 0;
      v35 = v4;
      v14 = v12 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
      v15 = *(_QWORD *)(v5 + 72);
      v30[1] = v12;
      swift_bridgeObjectRetain();
      v33 = xmmword_1CA8D4E40;
      v34 = v2;
      do
      {
        sub_1CA24EE38(v14, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for CollectionCuration);
        v16 = *((_QWORD *)v7 + 5);
        if (v16)
        {
          v17 = *((_QWORD *)v7 + 4);
          v18 = HIBYTE(v16) & 0xF;
          if ((v16 & 0x2000000000000000) == 0)
            v18 = v17 & 0xFFFFFFFFFFFFLL;
          if (v18)
          {
            __swift_instantiateConcreteTypeFromMangledName(&qword_1ED872768);
            v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8721A8);
            v20 = *(unsigned __int8 *)(*(_QWORD *)(v19 - 8) + 80);
            v21 = v15;
            v22 = (v20 + 32) & ~v20;
            v23 = swift_allocObject();
            *(_OWORD *)(v23 + 16) = v33;
            v24 = (_QWORD *)(v23 + v22);
            v15 = v21;
            v25 = (char *)v24 + *(int *)(v19 + 48);
            *v24 = v17;
            v24[1] = v16;
            v26 = &v7[*(int *)(v35 + 28)];
            v27 = sub_1CA85A5B0();
            v28 = v25;
            v2 = v34;
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v28, v26, v27);
            swift_bridgeObjectRetain();
            v29 = sub_1CA274074(v23, &qword_1ED8721A8, &qword_1ED872510, (uint64_t (*)(_QWORD))MEMORY[0x1E0CB0870]);
            RecentlyUsedSongs.add(songIDDateMap:)((Swift::OpaquePointer)v29);
            swift_bridgeObjectRelease();
          }
        }
        sub_1CA2669CC((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for CollectionCuration);
        v14 += v15;
        --v13;
      }
      while (v13);

      swift_bridgeObjectRelease_n();
    }
    else
    {
      swift_bridgeObjectRelease();

    }
  }
  return v2;
}

id sub_1CA27C36C(void *a1)
{
  uint64_t v1;
  id v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  char *v9;
  id v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  char *v25;
  char *v26;
  uint64_t v27;
  char *v28;
  unint64_t v29;
  _QWORD v30[2];
  char *v31;
  uint64_t v32;
  __int128 v33;
  id v34;
  uint64_t v35;

  v4 = type metadata accessor for CollectionCuration();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1CA2CEAA8(a1);
  if (!v1)
  {
    v9 = v8;
    v10 = objc_msgSend((id)objc_opt_self(), sel_ignoreProgress);
    v12 = sub_1CA47C17C(0);

    v2 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for RecentlyUsedSongs()), sel_init);
    v13 = *(_QWORD *)(v12 + 16);
    if (v13)
    {
      v31 = v9;
      v32 = 0;
      v35 = v4;
      v14 = v12 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
      v15 = *(_QWORD *)(v5 + 72);
      v30[1] = v12;
      swift_bridgeObjectRetain();
      v33 = xmmword_1CA8D4E40;
      v34 = v2;
      do
      {
        sub_1CA24EE38(v14, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for CollectionCuration);
        v16 = *((_QWORD *)v7 + 3);
        if (v16)
        {
          v17 = *((_QWORD *)v7 + 2);
          v18 = HIBYTE(v16) & 0xF;
          if ((v16 & 0x2000000000000000) == 0)
            v18 = v17 & 0xFFFFFFFFFFFFLL;
          if (v18)
          {
            __swift_instantiateConcreteTypeFromMangledName(&qword_1ED872768);
            v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8721A8);
            v20 = *(unsigned __int8 *)(*(_QWORD *)(v19 - 8) + 80);
            v21 = v15;
            v22 = (v20 + 32) & ~v20;
            v23 = swift_allocObject();
            *(_OWORD *)(v23 + 16) = v33;
            v24 = (_QWORD *)(v23 + v22);
            v15 = v21;
            v25 = (char *)v24 + *(int *)(v19 + 48);
            *v24 = v17;
            v24[1] = v16;
            v26 = &v7[*(int *)(v35 + 28)];
            v27 = sub_1CA85A5B0();
            v28 = v25;
            v2 = v34;
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v28, v26, v27);
            swift_bridgeObjectRetain();
            v29 = sub_1CA274074(v23, &qword_1ED8721A8, &qword_1ED872510, (uint64_t (*)(_QWORD))MEMORY[0x1E0CB0870]);
            RecentlyUsedSongs.add(songIDDateMap:)((Swift::OpaquePointer)v29);
            swift_bridgeObjectRelease();
          }
        }
        sub_1CA2669CC((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for CollectionCuration);
        v14 += v15;
        --v13;
      }
      while (v13);

      swift_bridgeObjectRelease_n();
    }
    else
    {
      swift_bridgeObjectRelease();

    }
  }
  return v2;
}

uint64_t type metadata accessor for RecentlyUsedSongs()
{
  return objc_opt_self();
}

unint64_t sub_1CA27C630()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED8744B8;
  if (!qword_1ED8744B8)
  {
    v1 = sub_1CA85A5B0();
    result = MEMORY[0x1CAA4F1A4](MEMORY[0x1E0CB08F0], v1);
    atomic_store(result, (unint64_t *)&qword_1ED8744B8);
  }
  return result;
}

uint64_t LocationHierarchyType.description.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1CA27C6A4 + 4 * byte_1CA8D4EF0[*v0]))(1701736302, 0xE400000000000000);
}

uint64_t sub_1CA27C6A4()
{
  return 0x746565727473;
}

uint64_t sub_1CA27C6B8()
{
  return 0x7463697274736964;
}

uint64_t sub_1CA27C6D0()
{
  return 0x79746E756F63;
}

uint64_t sub_1CA27C6E4()
{
  return 0x7373656E69737562;
}

uint64_t sub_1CA27C6FC()
{
  return 6909793;
}

uint64_t sub_1CA27C70C()
{
  return 2037672291;
}

uint64_t sub_1CA27C718()
{
  return 0x6574617473;
}

uint64_t sub_1CA27C72C()
{
  return 0x7972746E756F63;
}

BOOL static LocationHierarchyType.< infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 < *a2;
}

uint64_t LocationHierarchyType.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

PhotosGraph::LocationHierarchyType_optional __swiftcall LocationHierarchyType.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;

  v2 = 9;
  if ((unint64_t)rawValue < 9)
    v2 = rawValue;
  *v1 = v2;
  return (PhotosGraph::LocationHierarchyType_optional)rawValue;
}

BOOL sub_1CA27C774(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

PhotosGraph::LocationHierarchyType_optional sub_1CA27C788(Swift::Int *a1)
{
  return LocationHierarchyType.init(rawValue:)(*a1);
}

void sub_1CA27C790(_QWORD *a1@<X8>)
{
  unsigned __int8 *v1;

  *a1 = *v1;
}

BOOL sub_1CA27C7A0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 < *a2;
}

BOOL sub_1CA27C7B4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a2 >= *a1;
}

BOOL sub_1CA27C7C8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 >= *a2;
}

BOOL sub_1CA27C7DC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a2 < *a1;
}

PhotosGraph::LocationMatchType_optional __swiftcall LocationMatchType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  PhotosGraph::LocationMatchType_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1CA85C0F8();
  result.value = swift_bridgeObjectRelease();
  v5 = 4;
  if (v3 < 4)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t LocationMatchType.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1CA27C870 + 4 * byte_1CA8D4EF9[*v0]))(1701736302, 0xE400000000000000);
}

uint64_t sub_1CA27C870()
{
  return 0x6E69727473627573;
}

uint64_t sub_1CA27C88C()
{
  return 0x786966657270;
}

uint64_t sub_1CA27C8A0()
{
  return 0x7463617865;
}

void sub_1CA27C8B4(char *a1)
{
  sub_1CA3292C4(*a1);
}

void sub_1CA27C8C0()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1CA85C368();
  __asm { BR              X9 }
}

uint64_t sub_1CA27C904()
{
  sub_1CA85B4B0();
  swift_bridgeObjectRelease();
  return sub_1CA85C3B0();
}

void sub_1CA27C970()
{
  __asm { BR              X10 }
}

uint64_t sub_1CA27C9A4()
{
  sub_1CA85B4B0();
  return swift_bridgeObjectRelease();
}

void sub_1CA27C9FC()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1CA85C368();
  __asm { BR              X9 }
}

uint64_t sub_1CA27CA3C()
{
  sub_1CA85B4B0();
  swift_bridgeObjectRelease();
  return sub_1CA85C3B0();
}

PhotosGraph::LocationMatchType_optional sub_1CA27CAA8(Swift::String *a1)
{
  return LocationMatchType.init(rawValue:)(*a1);
}

uint64_t sub_1CA27CAB4()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1CA27CADC + 4 * byte_1CA8D4F09[*v0]))();
}

void sub_1CA27CADC(_QWORD *a1@<X8>)
{
  *a1 = 0x6E69727473627573;
  a1[1] = 0xE900000000000067;
}

void sub_1CA27CAFC(_QWORD *a1@<X8>)
{
  *a1 = 0x786966657270;
  a1[1] = 0xE600000000000000;
}

void sub_1CA27CB14(_QWORD *a1@<X8>)
{
  *a1 = 0x7463617865;
  a1[1] = 0xE500000000000000;
}

uint64_t MomentBasedLocationAssetsFetcher.init(photoLibrary:graph:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

uint64_t MomentBasedLocationAssetsFetcher.locationRetrievalResultsByQueryToken(with:progressReporter:)(unint64_t a1, uint64_t a2)
{
  __int128 *v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  unint64_t v15;
  void (*v16)(uint64_t, char *, uint64_t);
  double v17;
  _QWORD *v18;
  void (*v19)(uint64_t, char *, uint64_t);
  uint64_t v20;
  char *v21;
  char *v22;
  char v23;
  uint64_t v24;
  _BOOL8 v25;
  uint64_t v26;
  char v27;
  unint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  BOOL v32;
  uint64_t v33;
  void (*v34)(uint64_t, uint64_t);
  unint64_t v35;
  uint64_t result;
  _QWORD v37[2];
  __int128 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(uint64_t, char *, uint64_t);
  uint64_t v43;
  unint64_t v44;
  __int128 v45;
  _BYTE v46[40];
  char *v47;

  v4 = v3;
  v40 = a2;
  isUniquelyReferenced_nonNull_native = sub_1CA85AAFC();
  v39 = *(_QWORD *)(isUniquelyReferenced_nonNull_native - 8);
  v7 = MEMORY[0x1E0C80A78](isUniquelyReferenced_nonNull_native);
  v47 = (char *)v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v37 - v9;
  v38 = *v2;
  if (qword_1ED872DA8 != -1)
LABEL_25:
    swift_once();
  v11 = qword_1ED87D0A8;
  *(double *)&v12 = CACurrentMediaTime();
  sub_1CA2E4280("MomentBasedLocationAssetsFetcher", 32, 2u, v12, 0, v11, (uint64_t)v46);
  v13 = *(_QWORD *)(a1 + 16);
  if (v13)
  {
    v14 = 1.0 / (double)v13;
    v15 = a1 + ((*(unsigned __int8 *)(v39 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80));
    v16 = *(void (**)(uint64_t, char *, uint64_t))(v39 + 16);
    v41 = *(_QWORD *)(v39 + 72);
    v42 = v16;
    v37[1] = a1;
    swift_bridgeObjectRetain();
    v17 = 0.0;
    v18 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    while (1)
    {
      v43 = v13;
      v44 = v4;
      v19 = v42;
      v42((uint64_t)v10, (char *)v15, isUniquelyReferenced_nonNull_native);
      v45 = v38;
      v4 = sub_1CA27CEDC((uint64_t)v10);
      v20 = (uint64_t)v47;
      v21 = v10;
      v22 = v10;
      v10 = (char *)isUniquelyReferenced_nonNull_native;
      v19((uint64_t)v47, v22, isUniquelyReferenced_nonNull_native);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *(_QWORD *)&v45 = v18;
      a1 = sub_1CA2509B8(v20);
      v24 = v18[2];
      v25 = (v23 & 1) == 0;
      v26 = v24 + v25;
      if (__OFADD__(v24, v25))
      {
        __break(1u);
LABEL_24:
        __break(1u);
        goto LABEL_25;
      }
      v27 = v23;
      if (v18[3] >= v26)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          sub_1CA260920();
      }
      else
      {
        sub_1CA253040(v26, isUniquelyReferenced_nonNull_native);
        v28 = sub_1CA2509B8((uint64_t)v47);
        if ((v27 & 1) != (v29 & 1))
        {
          result = sub_1CA85C2E4();
          __break(1u);
          return result;
        }
        a1 = v28;
      }
      isUniquelyReferenced_nonNull_native = (uint64_t)v10;
      v18 = (_QWORD *)v45;
      v10 = v21;
      if ((v27 & 1) != 0)
      {
        v30 = *(_QWORD *)(v45 + 56);
        swift_bridgeObjectRelease();
        *(_QWORD *)(v30 + 8 * a1) = v4;
      }
      else
      {
        *(_QWORD *)(v45 + 8 * (a1 >> 6) + 64) |= 1 << a1;
        v42(v18[6] + a1 * v41, v47, isUniquelyReferenced_nonNull_native);
        *(_QWORD *)(v18[7] + 8 * a1) = v4;
        v31 = v18[2];
        v32 = __OFADD__(v31, 1);
        v33 = v31 + 1;
        if (v32)
          goto LABEL_24;
        v18[2] = v33;
      }
      swift_bridgeObjectRelease();
      v34 = *(void (**)(uint64_t, uint64_t))(v39 + 8);
      v34((uint64_t)v47, isUniquelyReferenced_nonNull_native);
      v17 = v14 + v17;
      v35 = v44;
      sub_1CA85BB64();
      v4 = v35;
      if (v35)
      {
        v34((uint64_t)v21, isUniquelyReferenced_nonNull_native);
        swift_bridgeObjectRelease();
        goto LABEL_20;
      }
      v34((uint64_t)v21, isUniquelyReferenced_nonNull_native);
      v15 += v41;
      v13 = v43 - 1;
      if (v43 == 1)
      {
        swift_bridgeObjectRelease();
        goto LABEL_19;
      }
    }
  }
  v18 = (_QWORD *)MEMORY[0x1E0DEE9E0];
LABEL_19:
  sub_1CA85BB64();
  if (v4)
  {
LABEL_20:
    swift_bridgeObjectRelease();
    sub_1CA2E0C94(0);
    swift_release();
    swift_release();
  }
  else
  {
    sub_1CA2E0C94(0);
    swift_release();
    swift_release();
  }
  return (uint64_t)v18;
}

unint64_t sub_1CA27CEDC(uint64_t a1)
{
  uint64_t v1;
  char **v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  void *v29;
  void *v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  _QWORD *v41;
  unint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  int64_t v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  unint64_t v59;
  int64_t v60;
  uint64_t *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  BOOL v65;
  uint64_t v66;
  char v67;
  uint64_t v68;
  BOOL v69;
  _QWORD *v70;
  uint64_t v71;
  BOOL v72;
  char *v73;
  uint64_t v74;
  uint64_t *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  void *v81;
  void *v82;
  void *v83;
  id v84;
  id v85;
  id v86;
  id v87;
  void *ObjCClassFromMetadata;
  id v89;
  id v90;
  id v91;
  char *v92;
  id v93;
  void *v94;
  void *v95;
  id v96;
  id v97;
  void *v98;
  id v99;
  id v100;
  id v101;
  id v102;
  void *v103;
  id v104;
  void *v105;
  void *v106;
  id v107;
  uint64_t v108;
  void *v109;
  id v110;
  void *v111;
  id v112;
  id v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  unint64_t v117;
  unint64_t v118;
  uint64_t v119;
  unint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  int64_t v124;
  int64_t v125;
  char *v126;
  uint64_t v127;
  void (*v128)(_QWORD);
  NSObject *v129;
  os_log_type_t v130;
  BOOL v131;
  uint8_t *v132;
  uint64_t v133;
  uint64_t v134;
  unint64_t v135;
  unint64_t v136;
  char *v137;
  char *v138;
  uint64_t v139;
  char *v140;
  uint64_t v141;
  uint64_t *v142;
  uint64_t v143;
  int v144;
  uint64_t v145;
  BOOL v147;
  char v148;
  uint64_t v149;
  uint64_t v150;
  _QWORD *v151;
  uint64_t v152;
  NSObject *v153;
  os_log_type_t v154;
  uint8_t *v155;
  char *v156;
  uint64_t v157;
  unint64_t v158;
  unint64_t v159;
  char *v160;
  uint64_t v161;
  int v162;
  NSObject *v163;
  os_log_type_t v164;
  char *v165;
  uint64_t v166;
  unint64_t v167;
  char *v168;
  char *v169;
  uint64_t v170;
  uint64_t v171;
  unint64_t v172;
  __int128 v173;
  unint64_t v174;
  uint64_t v175;
  unint64_t v176;
  uint64_t v177;
  unint64_t v178;
  uint64_t v179;
  uint64_t v180;
  char *v181;
  int64_t v182;
  uint64_t v183;
  NSObject *v184;
  os_log_type_t v185;
  uint8_t *v186;
  uint64_t v187;
  uint64_t v188;
  unint64_t v189;
  unint64_t v190;
  char *v191;
  char **v192;
  uint64_t v193;
  void (*v194)(char *, uint64_t, uint64_t);
  char *v195;
  uint64_t v196;
  void (*v197)(char *, uint64_t);
  char *v198;
  NSObject *v199;
  os_log_type_t v200;
  uint8_t *v201;
  uint64_t v202;
  uint64_t v203;
  unint64_t v204;
  char *v205;
  char **v206;
  id v207;
  id v208;
  uint64_t v209;
  uint64_t v210;
  char *v211;
  id v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  _OWORD v216[3];
  uint64_t v217;
  char *v218;
  uint64_t v219;
  id v220;
  id v221;
  id v222;
  id v223;
  char *v224;
  uint64_t v225;
  unint64_t v226;
  char *v227;
  uint64_t v228;
  uint64_t v229;
  char *v230;
  __int128 v231;
  uint64_t v232;
  char *v233;
  void (*v234)(_QWORD, uint64_t, char **);
  char *v235;
  char *v236;
  id v237;
  id v238;
  void *v239;
  _QWORD *v240;
  char *v241;
  uint64_t v242;
  id v243;
  uint64_t v244;
  char *v245;
  char *v246;
  char *v247;
  char **v248;
  uint64_t v249;
  int64_t v250;
  char *v251;
  int64_t v252;
  int64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  _QWORD v259[2];
  char *v260;
  uint64_t v261;
  unsigned __int8 v262;
  uint64_t *v263;
  uint64_t v264;
  uint64_t v265;
  _QWORD *v266;

  v229 = sub_1CA85AAFC();
  v228 = *(_QWORD *)(v229 - 8);
  v5 = MEMORY[0x1E0C80A78](v229);
  v7 = (char *)v216 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v227 = (char *)v216 - v8;
  v234 = 0;
  v9 = sub_1CA85B348();
  v232 = *(_QWORD *)(v9 - 8);
  v10 = MEMORY[0x1E0C80A78](v9);
  v12 = (char *)v216 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x1E0C80A78](v10);
  v15 = (char *)v216 - v14;
  v16 = MEMORY[0x1E0C80A78](v13);
  v18 = (char *)v216 - v17;
  v19 = MEMORY[0x1E0C80A78](v16);
  v230 = (char *)v216 - v20;
  v21 = MEMORY[0x1E0C80A78](v19);
  v233 = (char *)v216 - v22;
  v23 = MEMORY[0x1E0C80A78](v21);
  *(_QWORD *)&v231 = (char *)v216 - v24;
  MEMORY[0x1E0C80A78](v23);
  v235 = (char *)v216 - v25;
  v243 = *(id *)v1;
  v244 = *(_QWORD *)(v1 + 8);
  v26 = sub_1CA85AAD8();
  if (!v26)
    return sub_1CA273D60(MEMORY[0x1E0DEE9D8]);
  v27 = v26;
  v247 = v15;
  if (!sub_1CA85AAF0())
  {
    swift_bridgeObjectRelease();
    return sub_1CA273D60(MEMORY[0x1E0DEE9D8]);
  }
  v246 = v12;
  v248 = (char **)v9;
  v28 = (char *)objc_msgSend(v243, sel_librarySpecificFetchOptions);
  v29 = (void *)objc_opt_self();
  v30 = (void *)sub_1CA85B798();
  swift_bridgeObjectRelease();
  v31 = objc_msgSend(v29, sel_fetchMomentUUIDByAssetUUIDForAssetUUIDs_options_, v30, v28);

  if (!v31)
  {
LABEL_15:
    swift_bridgeObjectRelease();
    v43 = sub_1CA273D60(MEMORY[0x1E0DEE9D8]);

    return v43;
  }
  v32 = sub_1CA85B414();

  if (!*(_QWORD *)(v32 + 16))
  {
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  v242 = v32;
  v33 = sub_1CA85AAB4();
  v245 = v7;
  v218 = v18;
  v224 = v28;
  v219 = a1;
  if (v33)
  {
    v34 = v33;
    v35 = *(_QWORD *)(v33 + 16);
    if (v35)
    {
      v266 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      sub_1CA3FB754(0, v35, 0);
      v36 = v266;
      v2 = (char **)(v34 + 40);
      do
      {
        v28 = (char *)sub_1CA85B594();
        v38 = v37;
        v266 = v36;
        v40 = v36[2];
        v39 = v36[3];
        if (v40 >= v39 >> 1)
        {
          sub_1CA3FB754(v39 > 1, v40 + 1, 1);
          v36 = v266;
        }
        v2 += 2;
        v36[2] = v40 + 1;
        v41 = &v36[2 * v40];
        v41[4] = v28;
        v41[5] = v38;
        --v35;
      }
      while (v35);
      swift_bridgeObjectRelease();
      v44 = (char *)v36;
    }
    else
    {
      swift_bridgeObjectRelease();
      v44 = (char *)MEMORY[0x1E0DEE9D8];
    }
  }
  else
  {
    sub_1CA85AACC();
    v45 = sub_1CA85B594();
    v47 = v46;
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED872760);
    v44 = (char *)swift_allocObject();
    *((_OWORD *)v44 + 1) = xmmword_1CA8D4E40;
    *((_QWORD *)v44 + 4) = v45;
    *((_QWORD *)v44 + 5) = v47;
  }
  v48 = swift_bridgeObjectRetain();
  v49 = sub_1CA2826B4(v48);
  v50 = *(_QWORD *)(v49 + 56);
  v252 = v49 + 56;
  v51 = 1 << *(_BYTE *)(v49 + 32);
  v52 = -1;
  if (v51 < 64)
    v52 = ~(-1 << v51);
  v53 = v52 & v50;
  v253 = (unint64_t)(v51 + 63) >> 6;
  v254 = v49;
  swift_bridgeObjectRetain();
  v54 = 0;
  v240 = v44 + 72;
  v241 = v44 + 56;
  v250 = (int64_t)(v44 + 40);
  v256 = MEMORY[0x1E0DEE9E0];
  v249 = v27;
  v55 = v244;
  v251 = v44;
  while (v53)
  {
    v56 = __clz(__rbit64(v53));
    v53 &= v53 - 1;
    v57 = v56 | (v54 << 6);
LABEL_35:
    v61 = (uint64_t *)(*(_QWORD *)(v254 + 48) + 16 * v57);
    v2 = (char **)v61[1];
    v257 = *v61;
    v62 = sub_1CA85B594();
    v64 = v63;
    v28 = (char *)*((_QWORD *)v44 + 2);
    if (v28)
    {
      v3 = v62;
      v255 = v53;
      v53 = *((_QWORD *)v44 + 4);
      v65 = v53 == v62 && *((_QWORD *)v44 + 5) == v63;
      if (v65 || (sub_1CA85C284() & 1) != 0)
        goto LABEL_41;
      if (v28 != (char *)1)
      {
        v69 = *((_QWORD *)v44 + 6) == v3 && *((_QWORD *)v44 + 7) == v64;
        if (v69 || (sub_1CA85C284() & 1) != 0)
          goto LABEL_41;
        if (v28 != (char *)2)
        {
          v70 = v240;
          v71 = 2;
          while (1)
          {
            v44 = (char *)(v71 + 1);
            if (__OFADD__(v71, 1))
              goto LABEL_172;
            v72 = *(v70 - 1) == v3 && *v70 == v64;
            if (v72 || (sub_1CA85C284() & 1) != 0)
              break;
            v70 += 2;
            ++v71;
            if (v44 == v28)
              goto LABEL_50;
          }
          v27 = v249;
          v55 = v244;
          v44 = v251;
LABEL_41:
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          v3 = 3;
          goto LABEL_42;
        }
      }
LABEL_50:
      swift_bridgeObjectRetain();
      v44 = v251;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v53 = sub_1CA85B690();
      swift_bridgeObjectRelease();
      if ((v53 & 1) != 0)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        if (v28 == (char *)1)
        {
LABEL_77:
          v44 = v251;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRetain();
          v53 = 0;
          v75 = (uint64_t *)v250;
          while (1)
          {
            v76 = (char *)(v53 + 1);
            if (__OFADD__(v53, 1))
              break;
            v78 = *(v75 - 1);
            v77 = *v75;
            v260 = (char *)v3;
            v261 = v64;
            v259[0] = v78;
            v259[1] = v77;
            sub_1CA281DC0();
            if ((sub_1CA85BD50() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              v3 = 1;
              goto LABEL_85;
            }
            ++v53;
            v75 += 2;
            if (v76 == v28)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              v3 = 0;
              goto LABEL_85;
            }
          }
          __break(1u);
LABEL_169:
          __break(1u);
          __break(1u);
LABEL_170:
          __break(1u);
          __break(1u);
LABEL_171:
          __break(1u);
LABEL_172:
          __break(1u);
          goto LABEL_173;
        }
        v73 = v241;
        v74 = 1;
        while (1)
        {
          v44 = (char *)(v74 + 1);
          if (__OFADD__(v74, 1))
            goto LABEL_170;
          swift_bridgeObjectRetain();
          v53 = sub_1CA85B690();
          swift_bridgeObjectRelease();
          if ((v53 & 1) != 0)
            break;
          ++v74;
          v73 += 16;
          if (v44 == v28)
            goto LABEL_77;
        }
        swift_bridgeObjectRelease();
        v44 = v251;
      }
      swift_bridgeObjectRelease();
      v3 = 2;
LABEL_85:
      v27 = v249;
      v55 = v244;
LABEL_42:
      v53 = v255;
      if (*(_QWORD *)(v27 + 16))
        goto LABEL_45;
LABEL_21:
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v3 = 0;
      if (!*(_QWORD *)(v27 + 16))
        goto LABEL_21;
LABEL_45:
      swift_bridgeObjectRetain();
      v66 = sub_1CA25081C(v257, (uint64_t)v2);
      if ((v67 & 1) != 0)
      {
        v68 = *(_QWORD *)(*(_QWORD *)(v27 + 56) + 8 * v66);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        if (*(_QWORD *)(v68 + 16))
          __asm { BR              X9 }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease_n();
      }
    }
  }
  if (__OFADD__(v54++, 1))
    goto LABEL_169;
  if (v54 < v253)
  {
    v59 = *(_QWORD *)(v252 + 8 * v54);
    if (!v59)
    {
      v60 = v54 + 1;
      if (v54 + 1 >= v253)
        goto LABEL_87;
      v59 = *(_QWORD *)(v252 + 8 * v60);
      if (!v59)
      {
        v60 = v54 + 2;
        if (v54 + 2 >= v253)
          goto LABEL_87;
        v59 = *(_QWORD *)(v252 + 8 * v60);
        if (!v59)
        {
          v60 = v54 + 3;
          if (v54 + 3 >= v253)
            goto LABEL_87;
          v59 = *(_QWORD *)(v252 + 8 * v60);
          if (!v59)
          {
            while (1)
            {
              v54 = v60 + 1;
              if (__OFADD__(v60, 1))
                goto LABEL_171;
              if (v54 >= v253)
                goto LABEL_87;
              v59 = *(_QWORD *)(v252 + 8 * v54);
              ++v60;
              if (v59)
                goto LABEL_34;
            }
          }
        }
      }
      v54 = v60;
    }
LABEL_34:
    v53 = (v59 - 1) & v59;
    v57 = __clz(__rbit64(v59)) + (v54 << 6);
    goto LABEL_35;
  }
LABEL_87:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v79 = v254;
  swift_release();
  v80 = swift_bridgeObjectRetain();
  sub_1CA243494(v80);
  swift_bridgeObjectRelease();
  v260 = (char *)v243;
  v261 = v55;
  v81 = (void *)sub_1CA27FBEC(v79);
  swift_bridgeObjectRelease();
  v82 = (void *)objc_opt_self();
  v83 = (void *)sub_1CA85B798();
  v84 = objc_msgSend(v82, sel_locationNodesWithCIDINames_inGraph_, v83, v55);

  v85 = objc_allocWithZone((Class)PGGraphNamedLocationNodeCollection);
  v223 = v81;
  v86 = objc_msgSend(v85, sel_initWithGraph_elementIdentifiers_, v55, v81);
  v87 = objc_msgSend(v84, sel_collectionByFormingUnionWith_, v86);

  sub_1CA24EEC0(0, &qword_1EF94B030);
  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  v89 = v87;
  v90 = objc_msgSend(ObjCClassFromMetadata, sel_addressOfLocation);
  v91 = objc_msgSend(objc_msgSend(v89, sel_graph), sel_graphReference);
  swift_unknownObjectRelease();
  v2 = &selRef_setNumberOfPublicEventsCategoryNightLife_;
  v92 = (char *)objc_msgSend(v91, sel_concreteGraph);

  if (!v92)
    goto LABEL_176;
  v3 = v55;
  v93 = objc_msgSend(v89, sel_elementIdentifiers);
  v241 = v92;
  v240 = objc_msgSend(v92, sel_adjacencyWithSources_relation_, v93, v90);

  v222 = v89;
  v94 = (void *)objc_opt_self();
  v95 = (void *)sub_1CA85B798();
  v96 = objc_msgSend(v94, sel_areaNodesWithCIDINames_inGraph_, v95, v55);

  v97 = objc_msgSend(v96, sel_nonBlockedAreaNodes);
  v98 = (void *)objc_opt_self();
  v99 = v97;
  v100 = objc_msgSend(v98, sel_addressOfArea);
  v101 = objc_msgSend(objc_msgSend(v99, sel_graph), sel_graphReference);
  swift_unknownObjectRelease();
  v102 = objc_msgSend(v101, sel_concreteGraph);

  if (!v102)
    goto LABEL_176;
  v103 = v102;
  v104 = objc_msgSend(v99, sel_elementIdentifiers);
  v239 = v103;
  v238 = objc_msgSend(v103, sel_adjacencyWithSources_relation_, v104, v100);

  v221 = v99;
  v105 = (void *)objc_opt_self();
  v106 = (void *)sub_1CA85B798();
  swift_release();
  v107 = objc_msgSend(v105, sel_businessNodesWithCIDINames_inGraph_, v106, v55);

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED873300);
  v108 = swift_allocObject();
  *(_OWORD *)(v108 + 16) = xmmword_1CA8D4EA0;
  v109 = (void *)objc_opt_self();
  v44 = (char *)v107;
  *(_QWORD *)(v108 + 32) = objc_msgSend(v109, sel_momentOfBusiness);
  *(_QWORD *)(v108 + 40) = objc_msgSend((id)objc_opt_self(), sel_addressOfMoment);
  v260 = (char *)v108;
  sub_1CA85B7C8();
  v110 = objc_allocWithZone(MEMORY[0x1E0D429E0]);
  sub_1CA24EEC0(0, (unint64_t *)&qword_1ED873180);
  v111 = (void *)sub_1CA85B798();
  swift_bridgeObjectRelease();
  v112 = objc_msgSend(v110, sel_initWithSteps_, v111);

  v28 = (char *)objc_msgSend(objc_msgSend(v44, sel_graph), sel_graphReference);
  swift_unknownObjectRelease();
  v113 = objc_msgSend(v28, sel_concreteGraph);

  if (!v113)
  {
LABEL_176:
    LODWORD(v215) = 0;
    v214 = 40;
    sub_1CA85C044();
    __break(1u);
    goto LABEL_177;
  }
  v53 = (unint64_t)objc_msgSend(v44, sel_elementIdentifiers);
  v242 = (uint64_t)v113;
  v237 = objc_msgSend(v113, sel_adjacencyWithSources_relation_, v53, v112);

  v220 = v44;
  v114 = *(_QWORD *)(v256 + 64);
  v251 = (char *)(v256 + 64);
  v115 = 1 << *(_BYTE *)(v256 + 32);
  v116 = -1;
  if (v115 < 64)
    v116 = ~(-1 << v115);
  v117 = v116 & v114;
  v250 = (unint64_t)(v115 + 63) >> 6;
  swift_bridgeObjectRetain();
  v236 = (char *)MEMORY[0x1E0DEE9D8];
  if (v117)
  {
    v118 = __clz(__rbit64(v117));
    goto LABEL_104;
  }
  v119 = 1;
  if (v250 <= 1)
    goto LABEL_109;
  v120 = *((_QWORD *)v251 + 1);
  if (v120)
  {
LABEL_103:
    v118 = __clz(__rbit64(v120)) + (v119 << 6);
LABEL_104:
    v122 = *(_QWORD *)(v256 + 56);
    v255 = *(_QWORD *)(*(_QWORD *)(v256 + 48) + 16 * v118);
    v123 = v122 + (v118 << 6);
    v124 = *(_QWORD *)v123;
    v125 = *(_QWORD *)(v123 + 8);
    v254 = *(_QWORD *)(v123 + 24);
    v126 = (char *)&loc_1CA27E1C4 + dword_1CA27FBCC[*(unsigned __int8 *)(v123 + 32)];
    v253 = v124;
    v252 = v125;
    __asm { BR              X9 }
  }
  v121 = 2;
  if (v250 <= 2)
    goto LABEL_109;
  v120 = *((_QWORD *)v251 + 2);
  if (v120)
    goto LABEL_102;
  v121 = 3;
  if (v250 <= 3)
    goto LABEL_109;
  v120 = *((_QWORD *)v251 + 3);
  if (v120)
    goto LABEL_102;
  v121 = 4;
  if (v250 <= 4)
  {
LABEL_109:
    v3 = v232;
    v44 = v235;
    v53 = (unint64_t)v234;
    swift_release();
    v260 = v236;
    swift_bridgeObjectRetain_n();
    sub_1CA280810((_QWORD **)&v260);
    if (!v53)
    {
      swift_bridgeObjectRelease();
      v28 = v260;
      v2 = v248;
      if (qword_1ED872DE0 == -1)
        goto LABEL_111;
      goto LABEL_175;
    }
LABEL_177:
    swift_release();
    __break(1u);
    JUMPOUT(0x1CA27FBBCLL);
  }
  v120 = *((_QWORD *)v251 + 4);
  if (v120)
  {
LABEL_102:
    v119 = v121;
    goto LABEL_103;
  }
  while (1)
  {
    v119 = v121 + 1;
    if (__OFADD__(v121, 1))
      break;
    if (v119 >= v250)
      goto LABEL_109;
    v120 = *(_QWORD *)&v251[8 * v119];
    ++v121;
    if (v120)
      goto LABEL_103;
  }
LABEL_173:
  __break(1u);
  while (1)
  {
    __break(1u);
LABEL_175:
    swift_once();
LABEL_111:
    v127 = __swift_project_value_buffer((uint64_t)v2, (uint64_t)qword_1ED87D0C8);
    v128 = *(void (**)(_QWORD))(v3 + 16);
    v232 = v127;
    v234 = (void (*)(_QWORD, _QWORD, _QWORD))v128;
    v128(v44);
    swift_retain_n();
    v129 = sub_1CA85B330();
    v130 = sub_1CA85BAEC();
    v131 = os_log_type_enabled(v129, v130);
    v226 = v53;
    if (v131)
    {
      v132 = (uint8_t *)swift_slowAlloc();
      v53 = swift_slowAlloc();
      v260 = (char *)v53;
      *(_DWORD *)v132 = 136315138;
      swift_retain();
      v133 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF957760);
      v134 = MEMORY[0x1CAA4D620](v28, v133);
      v136 = v135;
      swift_release();
      v259[0] = sub_1CA28712C(v134, v136, (uint64_t *)&v260);
      sub_1CA85BCF0();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1CA237000, v129, v130, "Sorted exact matches based on location hierarchy = %s", v132, 0xCu);
      swift_arrayDestroy();
      v2 = v248;
      MEMORY[0x1CAA4F27C](v53, -1, -1);
      MEMORY[0x1CAA4F27C](v132, -1, -1);

      v137 = *(char **)(v3 + 8);
      v138 = v235;
    }
    else
    {

      swift_release();
      swift_bridgeObjectRelease();
      v137 = *(char **)(v3 + 8);
      v138 = v44;
    }
    v235 = v137;
    ((void (*)(char *, char **))v137)(v138, v2);
    v139 = v249;
    v140 = v233;
    v141 = swift_allocObject();
    v142 = (uint64_t *)MEMORY[0x1E0DEE9D8];
    *(_QWORD *)(v141 + 16) = MEMORY[0x1E0DEE9D8];
    v250 = v141 + 16;
    v263 = v142;
    v262 = 1;
    v143 = *((_QWORD *)v28 + 2);
    v225 = v141;
    if (v143)
    {
      v3 = v141;
      v144 = v28[32];
      v145 = *((_QWORD *)v28 + 6);
      v147 = v144 == 5 || v144 == 0;
      v262 = v147;
      MEMORY[0x1E0C80A78](v141);
      LOBYTE(v216[-2]) = v148;
      *((_QWORD *)&v216[-2] + 1) = v149;
      v214 = v145;
      v215 = v150;
      swift_bridgeObjectRetain();
      v53 = v226;
      v151 = sub_1CA2822CC((uint64_t)v28, (uint64_t (*)(_BYTE *, uint64_t, uint64_t, uint64_t))sub_1CA282278);
      v226 = v53;
      v2 = v248;
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v3 + 16) = v151;
      v152 = v231;
      v234(v231, v232, v2);
      swift_retain_n();
      v153 = sub_1CA85B330();
      v154 = sub_1CA85BAEC();
      if (os_log_type_enabled(v153, v154))
      {
        v155 = (uint8_t *)swift_slowAlloc();
        v156 = (char *)swift_slowAlloc();
        v260 = v156;
        *(_DWORD *)v155 = 136315138;
        v53 = (unint64_t)(v155 + 12);
        swift_beginAccess();
        v259[0] = *(_QWORD *)(v3 + 16);
        swift_bridgeObjectRetain();
        __swift_instantiateConcreteTypeFromMangledName(&qword_1ED872270);
        sub_1CA282410();
        v3 = (uint64_t)v259;
        v157 = sub_1CA85B4D4();
        v159 = v158;
        swift_bridgeObjectRelease();
        v259[0] = sub_1CA28712C(v157, v159, (uint64_t *)&v260);
        v2 = v248;
        sub_1CA85BCF0();
        swift_release_n();
        v139 = v249;
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1CA237000, v153, v154, "Selected user query exact matches = [%s]", v155, 0xCu);
        swift_arrayDestroy();
        v160 = v156;
        v140 = v233;
        MEMORY[0x1CAA4F27C](v160, -1, -1);
        MEMORY[0x1CAA4F27C](v155, -1, -1);

        v161 = v231;
      }
      else
      {

        swift_release_n();
        v161 = v152;
      }
      ((void (*)(uint64_t, char **))v235)(v161, v2);
    }
    else
    {
      swift_release();
    }
    v234(v140, v232, v2);
    v162 = v262;
    v163 = sub_1CA85B330();
    v164 = sub_1CA85BAEC();
    if (os_log_type_enabled(v163, v164))
    {
      v3 = (uint64_t)v140;
      v53 = swift_slowAlloc();
      v165 = (char *)swift_slowAlloc();
      v260 = v165;
      *(_DWORD *)v53 = 136315138;
      if (v162)
        v166 = 0;
      else
        v166 = 544501614;
      if (v162)
        v167 = 0xE000000000000000;
      else
        v167 = 0xE400000000000000;
      v259[0] = sub_1CA28712C(v166, v167, (uint64_t *)&v260);
      sub_1CA85BCF0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1CA237000, v163, v164, "Should %scontinue to add more locations", (uint8_t *)v53, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1CAA4F27C](v165, -1, -1);
      v2 = v248;
      MEMORY[0x1CAA4F27C](v53, -1, -1);

      v168 = v140;
    }
    else
    {

      v168 = v140;
    }
    ((void (*)(char *, char **))v235)(v168, v2);
    v28 = v246;
    v44 = v247;
    v169 = v245;
    swift_beginAccess();
    if (v262 != 1)
      goto LABEL_156;
    v170 = 1 << *(_BYTE *)(v256 + 32);
    v171 = -1;
    if (v170 < 64)
      v171 = ~(-1 << v170);
    v172 = v171 & *(_QWORD *)(v256 + 64);
    v252 = (unint64_t)(v170 + 63) >> 6;
    v233 = (char *)&v265;
    swift_bridgeObjectRetain();
    *(_QWORD *)&v173 = 136643075;
    v231 = v173;
    v217 = MEMORY[0x1E0DEE9B8] + 8;
    *(_QWORD *)&v173 = 136642819;
    v216[2] = v173;
    if (v172)
    {
      v174 = __clz(__rbit64(v172));
      v255 = (v172 - 1) & v172;
      goto LABEL_150;
    }
    v175 = 1;
    if (v252 <= 1)
      break;
    v176 = *((_QWORD *)v251 + 1);
    if (v176)
      goto LABEL_149;
    v177 = 2;
    if (v252 <= 2)
      break;
    v176 = *((_QWORD *)v251 + 2);
    if (v176)
      goto LABEL_148;
    v177 = 3;
    if (v252 <= 3)
      break;
    v176 = *((_QWORD *)v251 + 3);
    if (v176)
    {
LABEL_148:
      v175 = v177;
LABEL_149:
      v255 = (v176 - 1) & v176;
      v174 = __clz(__rbit64(v176)) + (v175 << 6);
LABEL_150:
      v178 = *(_QWORD *)(v256 + 56) + (v174 << 6);
      v179 = *(_QWORD *)(v178 + 16);
      v180 = *(unsigned __int8 *)(v178 + 32);
      v257 = *(_QWORD *)(v178 + 48);
      v181 = (char *)&loc_1CA27ED10 + dword_1CA27FBBC[v180];
      v254 = v179;
      __asm { BR              X9 }
    }
    v177 = 4;
    if (v252 <= 4)
      break;
    v176 = *((_QWORD *)v251 + 4);
    if (v176)
      goto LABEL_148;
    while (1)
    {
      v175 = v177 + 1;
      if (__OFADD__(v177, 1))
        break;
      if (v175 >= v252)
        goto LABEL_155;
      v176 = *(_QWORD *)&v251[8 * v175];
      ++v177;
      if (v176)
        goto LABEL_149;
    }
  }
LABEL_155:
  swift_release();
LABEL_156:
  v182 = v250;
  swift_beginAccess();
  v183 = *(_QWORD *)v182;
  if (*(_QWORD *)(*(_QWORD *)v182 + 16))
  {
    v234(v44, v232, v2);
    swift_bridgeObjectRetain_n();
    v184 = sub_1CA85B330();
    v185 = sub_1CA85BAEC();
    if (os_log_type_enabled(v184, v185))
    {
      v186 = (uint8_t *)swift_slowAlloc();
      v187 = swift_slowAlloc();
      v264 = v187;
      *(_DWORD *)v186 = 136315138;
      v258 = v183;
      swift_bridgeObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED872270);
      sub_1CA282410();
      v188 = sub_1CA85B4D4();
      v190 = v189;
      swift_bridgeObjectRelease();
      v258 = sub_1CA28712C(v188, v190, &v264);
      sub_1CA85BCF0();
      swift_bridgeObjectRelease_n();
      v139 = v249;
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1CA237000, v184, v185, "Grounded location names [%s]", v186, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1CAA4F27C](v187, -1, -1);
      MEMORY[0x1CAA4F27C](v186, -1, -1);

      v191 = v247;
      v192 = v248;
    }
    else
    {

      swift_bridgeObjectRelease_n();
      v191 = v44;
      v192 = v2;
    }
    ((void (*)(char *, char **))v235)(v191, v192);
    v207 = v221;
    v208 = v220;
    v209 = *(_QWORD *)(v225 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v210 = sub_1CA281E04(MEMORY[0x1E0DEE9E0], v209, v139);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_unknownObjectRelease();
    swift_unknownObjectRelease();

    swift_unknownObjectRelease();
    swift_bridgeObjectRelease_n();
  }
  else
  {
    swift_bridgeObjectRelease();
    v234(v28, v232, v2);
    v193 = v228;
    v194 = *(void (**)(_QWORD, _QWORD, _QWORD))(v228 + 16);
    v195 = v227;
    v196 = v229;
    v194(v227, v219, v229);
    v194(v169, v195, v196);
    v197 = *(void (**)(_QWORD, _QWORD))(v193 + 8);
    v197(v195, v196);
    v198 = v28;
    v199 = sub_1CA85B330();
    v200 = sub_1CA85BAEC();
    if (os_log_type_enabled(v199, v200))
    {
      v201 = (uint8_t *)swift_slowAlloc();
      v202 = swift_slowAlloc();
      v264 = v202;
      *(_DWORD *)v201 = 136642819;
      sub_1CA23CC98(&qword_1EF94B750, (uint64_t (*)(uint64_t))MEMORY[0x1E0D76708], MEMORY[0x1E0D76738]);
      v203 = sub_1CA85C260();
      v258 = sub_1CA28712C(v203, v204, &v264);
      sub_1CA85BCF0();
      swift_bridgeObjectRelease();
      v197(v169, v196);
      _os_log_impl(&dword_1CA237000, v199, v200, "No grounded location names for %{sensitive}s", v201, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1CAA4F27C](v202, -1, -1);
      MEMORY[0x1CAA4F27C](v201, -1, -1);

      v205 = v246;
      v206 = v248;
    }
    else
    {
      v197(v169, v196);

      v205 = v198;
      v206 = v2;
    }
    ((void (*)(char *, char **))v235)(v205, v206);
    v211 = v224;
    v212 = v222;
    v213 = sub_1CA85AAD8();
    if (v213)
    {
      v210 = (uint64_t)sub_1CA2812B4(v213, &v263);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      swift_unknownObjectRelease();
      swift_unknownObjectRelease();

      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      swift_unknownObjectRelease();
      swift_unknownObjectRelease();

      swift_unknownObjectRelease();
      v210 = MEMORY[0x1E0DEE9E0];
    }
  }
  swift_release();
  swift_bridgeObjectRelease();
  return v210;
}

uint64_t sub_1CA27FBEC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  id v10;
  id v11;
  void (*v12)(char *, char *, uint64_t);
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  __CFString *v18;
  id v19;
  id v20;
  uint64_t result;
  uint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  _QWORD aBlock[6];

  v25 = a1;
  v2 = sub_1CA85A694();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  v5 = MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v22 - v7;
  v9 = *(_QWORD *)(v1 + 8);
  v10 = objc_msgSend((id)objc_opt_self(), sel_currentLocale);
  sub_1CA85A634();

  sub_1CA24EEC0(0, &qword_1ED873210);
  v24 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_nodesInGraph_, v9);
  v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D429B0]), sel_init);
  v12 = *(void (**)(char *, char *, uint64_t))(v3 + 16);
  v23 = v2;
  v12(v6, v8, v2);
  v13 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v14 = (v4 + v13 + 7) & 0xFFFFFFFFFFFFFFF8;
  v15 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v15 + v13, v6, v2);
  *(_QWORD *)(v15 + v14) = v25;
  *(_QWORD *)(v15 + ((v14 + 15) & 0xFFFFFFFFFFFFFFF8)) = v11;
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = sub_1CA2825E8;
  *(_QWORD *)(v16 + 24) = v15;
  aBlock[4] = sub_1CA28267C;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1CA3299EC;
  aBlock[3] = &block_descriptor_35;
  v17 = _Block_copy(aBlock);
  v18 = CFSTR("name");
  swift_bridgeObjectRetain();
  v19 = v11;
  swift_retain();
  swift_release();
  v20 = v24;
  objc_msgSend(v24, sel_enumerateStringPropertyValuesForKey_withBlock_, v18, v17);
  _Block_release(v17);

  (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v23);
  LOBYTE(v3) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((v3 & 1) == 0)
    return (uint64_t)v19;
  __break(1u);
  return result;
}

uint64_t sub_1CA27FE98@<X0>(uint64_t a1@<X0>, void **a2@<X1>, void **a3@<X2>, uint64_t isUniquelyReferenced_nonNull_native@<X3>, _BYTE *a5@<X8>)
{
  __int128 *v5;
  void *v7;
  uint64_t v8;
  void *v9;
  void *v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  unint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  id v22;
  uint64_t v23;
  id v24;
  char v25;
  unint64_t v26;
  uint64_t v27;
  _BOOL8 v28;
  uint64_t v29;
  char v30;
  unint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  BOOL v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  id v44;
  uint64_t v45;
  _QWORD *v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  void *v51;
  id v52;
  uint64_t v53;
  _QWORD *v54;
  void *v55;
  uint64_t v56;
  uint64_t v57;
  void *v58;
  id v59;
  uint64_t result;
  _QWORD v61[4];
  _BYTE *v62;
  __int128 v63;
  _BYTE *v64;
  _BYTE *v65;
  void *v66;
  uint64_t v67;
  void *v68;
  uint64_t v69;
  __int128 v70;
  id v71;
  uint64_t v72;
  uint64_t i;
  unint64_t v74;
  _QWORD *aBlock;
  uint64_t v76;
  void (*v77)(uint64_t, uint64_t, void *, uint64_t);
  void *v78;
  uint64_t (*v79)(uint64_t, uint64_t, uint64_t);
  uint64_t v80;
  _BYTE v81[9];

  v65 = a5;
  v7 = *(void **)a1;
  v8 = *(_QWORD *)(a1 + 8);
  v9 = a2[1];
  v68 = *a2;
  v69 = (uint64_t)v9;
  v10 = a3[1];
  v66 = *a3;
  v67 = (uint64_t)v10;
  v70 = *v5;
  v11 = objc_allocWithZone((Class)PGGraphNamedLocationNodeCollection);
  v12 = v7;
  swift_unknownObjectRetain();
  v13 = objc_msgSend(v12, sel_sources);
  v14 = objc_msgSend(v11, sel_initWithGraph_elementIdentifiers_, v8, v13);
  v72 = v8;
  swift_unknownObjectRelease();
  v71 = v12;

  v15 = objc_msgSend(v14, sel_array);
  sub_1CA24EEC0(0, &qword_1EF94B030);
  v16 = sub_1CA85B7B0();

  if (v16 >> 62)
    goto LABEL_24;
  v17 = *(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (i = isUniquelyReferenced_nonNull_native; v17; i = isUniquelyReferenced_nonNull_native)
  {
    v74 = v16 & 0xC000000000000001;
    v18 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    v19 = 4;
    while (1)
    {
      v21 = v74 ? (id)MEMORY[0x1CAA4DD64](v19 - 4, v16) : *(id *)(v16 + 8 * v19);
      v22 = v21;
      v23 = v19 - 3;
      if (__OFADD__(v19 - 4, 1))
        break;
      v24 = objc_msgSend(v21, sel_identifier);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      aBlock = v18;
      v26 = sub_1CA250960((uint64_t)v24);
      v27 = v18[2];
      v28 = (v25 & 1) == 0;
      v29 = v27 + v28;
      if (__OFADD__(v27, v28))
        goto LABEL_22;
      v30 = v25;
      if (v18[3] >= v29)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) != 0)
        {
          v18 = aBlock;
          if ((v25 & 1) != 0)
            goto LABEL_4;
        }
        else
        {
          sub_1CA260568();
          v18 = aBlock;
          if ((v30 & 1) != 0)
            goto LABEL_4;
        }
      }
      else
      {
        sub_1CA2529C4(v29, isUniquelyReferenced_nonNull_native);
        v31 = sub_1CA250960((uint64_t)v24);
        if ((v30 & 1) != (v32 & 1))
          goto LABEL_33;
        v26 = v31;
        v18 = aBlock;
        if ((v30 & 1) != 0)
        {
LABEL_4:
          v20 = v18[7];

          *(_QWORD *)(v20 + 8 * v26) = v22;
          goto LABEL_5;
        }
      }
      v18[(v26 >> 6) + 8] |= 1 << v26;
      v33 = 8 * v26;
      *(_QWORD *)(v18[6] + v33) = v24;
      *(_QWORD *)(v18[7] + v33) = v22;
      v34 = v18[2];
      v35 = __OFADD__(v34, 1);
      v36 = v34 + 1;
      if (v35)
        goto LABEL_23;
      v18[2] = v36;
LABEL_5:
      swift_bridgeObjectRelease();
      ++v19;
      if (v23 == v17)
        goto LABEL_26;
    }
    __break(1u);
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    swift_bridgeObjectRetain_n();
    v17 = sub_1CA85C08C();
    swift_bridgeObjectRelease();
  }
  v18 = (_QWORD *)MEMORY[0x1E0DEE9E0];
LABEL_26:
  v37 = swift_bridgeObjectRelease_n();
  v81[0] = 0;
  MEMORY[0x1E0C80A78](v37);
  v38 = i;
  v61[2] = i;
  v61[3] = v18;
  v62 = v81;
  v63 = v70;
  v39 = (_QWORD *)swift_allocObject();
  v39[2] = sub_1CA28245C;
  v39[3] = v61;
  v40 = v71;
  v41 = v72;
  v39[4] = v71;
  v39[5] = v41;
  v42 = swift_allocObject();
  *(_QWORD *)(v42 + 16) = sub_1CA282470;
  *(_QWORD *)(v42 + 24) = v39;
  v79 = sub_1CA28248C;
  v80 = v42;
  aBlock = (_QWORD *)MEMORY[0x1E0C809B0];
  v76 = 1107296256;
  v77 = sub_1CA3214B0;
  v78 = &block_descriptor_1;
  v43 = _Block_copy(&aBlock);
  v44 = v40;
  swift_unknownObjectRetain();
  swift_retain();
  swift_release();
  objc_msgSend(v44, sel_enumerateTargetsBySourceWith_, v43);
  _Block_release(v43);
  LOBYTE(v43) = swift_isEscapingClosureAtFileLocation();
  swift_bridgeObjectRelease();
  swift_release();
  v45 = swift_release();
  if ((v43 & 1) != 0)
  {
    __break(1u);
    goto LABEL_31;
  }
  MEMORY[0x1E0C80A78](v45);
  *((_QWORD *)&v63 + 1) = v38;
  v64 = v81;
  v46 = (_QWORD *)swift_allocObject();
  v46[2] = sub_1CA282494;
  v46[3] = &v62;
  v47 = v68;
  v48 = v69;
  v46[4] = v68;
  v46[5] = v48;
  v49 = swift_allocObject();
  *(_QWORD *)(v49 + 16) = sub_1CA2824DC;
  *(_QWORD *)(v49 + 24) = v46;
  v79 = sub_1CA282698;
  v80 = v49;
  v50 = (_QWORD *)MEMORY[0x1E0C809B0];
  aBlock = (_QWORD *)MEMORY[0x1E0C809B0];
  v76 = 1107296256;
  v77 = sub_1CA3214B0;
  v78 = &block_descriptor_16;
  v51 = _Block_copy(&aBlock);
  v52 = v47;
  swift_unknownObjectRetain();
  swift_retain();
  swift_release();
  objc_msgSend(v52, sel_enumerateTargetsBySourceWith_, v51);
  _Block_release(v51);
  LOBYTE(v51) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  v53 = swift_release();
  if ((v51 & 1) != 0)
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  MEMORY[0x1E0C80A78](v53);
  *((_QWORD *)&v63 + 1) = v38;
  v64 = v81;
  v54 = (_QWORD *)swift_allocObject();
  v54[2] = sub_1CA2824F8;
  v54[3] = &v62;
  v55 = v66;
  v56 = v67;
  v54[4] = v66;
  v54[5] = v56;
  v57 = swift_allocObject();
  *(_QWORD *)(v57 + 16) = sub_1CA282540;
  *(_QWORD *)(v57 + 24) = v54;
  v79 = sub_1CA282698;
  v80 = v57;
  aBlock = v50;
  v76 = 1107296256;
  v77 = sub_1CA3214B0;
  v78 = &block_descriptor_26;
  v58 = _Block_copy(&aBlock);
  v59 = v55;
  swift_unknownObjectRetain();
  swift_retain();
  swift_release();
  objc_msgSend(v59, sel_enumerateTargetsBySourceWith_, v58);
  _Block_release(v58);
  LOBYTE(v58) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((v58 & 1) == 0)
  {
    *v65 = v81[0];
    return result;
  }
LABEL_32:
  __break(1u);
LABEL_33:
  type metadata accessor for KGElementIdentifier(0);
  result = sub_1CA85C2E4();
  __break(1u);
  return result;
}

id sub_1CA280564(void *a1, id a2, uint64_t a3, uint64_t a4, uint64_t a5, char *a6)
{
  id result;
  id v10;
  id v11;
  char v12;
  unsigned int v13;
  char v14;

  result = objc_msgSend(a2, sel_intersectsCollection_, a4);
  if ((_DWORD)result)
  {
    v10 = objc_msgSend(a1, sel_elementIdentifiers);
    v11 = objc_msgSend(v10, sel_firstElement);

    result = (id)sub_1CA85BC0C();
    if (result)
    {
      if (*(_QWORD *)(a5 + 16))
      {
        result = (id)sub_1CA250960((uint64_t)v11);
        if ((v12 & 1) != 0)
        {
          v13 = *a6;
          objc_opt_self();
          result = (id)swift_dynamicCastObjCClass();
          if (result)
          {
            if (v13 <= 8)
              v14 = 8;
            else
              v14 = v13;
          }
          else
          {
            objc_opt_self();
            result = (id)swift_dynamicCastObjCClass();
            if (result)
            {
              if (v13 <= 7)
                v14 = 7;
              else
                v14 = v13;
            }
            else
            {
              objc_opt_self();
              result = (id)swift_dynamicCastObjCClass();
              if (result)
              {
                if (v13 <= 6)
                  v14 = 6;
                else
                  v14 = v13;
              }
              else
              {
                objc_opt_self();
                result = (id)swift_dynamicCastObjCClass();
                if (result)
                {
                  if (v13 <= 5)
                    v14 = 5;
                  else
                    v14 = v13;
                }
                else
                {
                  objc_opt_self();
                  result = (id)swift_dynamicCastObjCClass();
                  if (result)
                  {
                    if (v13 <= 4)
                      v14 = 4;
                    else
                      v14 = v13;
                  }
                  else
                  {
                    objc_opt_self();
                    result = (id)swift_dynamicCastObjCClass();
                    if (result)
                    {
                      if (v13 <= 3)
                        v14 = 3;
                      else
                        v14 = v13;
                    }
                    else
                    {
                      objc_opt_self();
                      result = (id)swift_dynamicCastObjCClass();
                      if (result)
                      {
                        if (v13 <= 2)
                          v14 = 2;
                        else
                          v14 = v13;
                      }
                      else
                      {
                        objc_opt_self();
                        result = (id)swift_dynamicCastObjCClass();
                        if (v13 <= 1)
                          v14 = 1;
                        else
                          v14 = v13;
                        if (!result)
                          v14 = v13;
                      }
                    }
                  }
                }
              }
            }
          }
          *a6 = v14;
        }
      }
    }
  }
  return result;
}

id sub_1CA28076C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7)
{
  id result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;

  result = (id)sub_1CA85A61C();
  if (v11)
  {
    v12 = sub_1CA85B594();
    v14 = v13;
    swift_bridgeObjectRelease();
    v15 = sub_1CA290460(v12, v14, a6);
    result = (id)swift_bridgeObjectRelease();
    if ((v15 & 1) != 0)
      return objc_msgSend(a7, sel_addIdentifier_, a1);
  }
  return result;
}

uint64_t sub_1CA280810(_QWORD **a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = (_QWORD *)sub_1CA3A791C(v2);
  v3 = v2[2];
  v5[0] = (uint64_t)(v2 + 4);
  v5[1] = v3;
  result = sub_1CA280878(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_1CA280878(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  unint64_t v13;
  uint64_t v14;
  unsigned __int8 *v15;
  unsigned int v16;
  uint64_t v17;
  unsigned __int8 *v18;
  unsigned int v19;
  int v20;
  uint64_t *v21;
  unsigned int v22;
  uint64_t v23;
  _BOOL4 v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _OWORD *v30;
  uint64_t v31;
  char v32;
  __int128 v33;
  uint64_t v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;
  unsigned __int8 *v38;
  unsigned int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unsigned int v43;
  _BOOL4 v44;
  uint64_t v45;
  uint64_t v46;
  __int128 v47;
  unint64_t v48;
  unint64_t v49;
  char *v50;
  char *v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  BOOL v63;
  unint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  BOOL v73;
  uint64_t v74;
  char v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  BOOL v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  char *v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  unint64_t v96;
  char *v97;
  char *v98;
  uint64_t v99;
  unint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  unint64_t v105;
  uint64_t v106;
  uint64_t *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  unsigned __int8 *__dst;

  v3 = a1[1];
  result = sub_1CA85C254();
  if (result >= v3)
  {
    if (v3 < 0)
      goto LABEL_137;
    if (v3)
      return sub_1CA280F5C(0, v3, 1, a1);
    return result;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_145;
  v6 = result;
  v107 = a1;
  if (v3 < 2)
  {
    v9 = MEMORY[0x1E0DEE9D8];
    __dst = (unsigned __int8 *)(MEMORY[0x1E0DEE9D8] + 32);
    if (v3 != 1)
    {
      v13 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
      v12 = (char *)MEMORY[0x1E0DEE9D8];
LABEL_103:
      v98 = v12;
      v109 = v9;
      if (v13 >= 2)
      {
        v99 = *v107;
        do
        {
          v100 = v13 - 2;
          if (v13 < 2)
            goto LABEL_132;
          if (!v99)
            goto LABEL_144;
          v101 = v98;
          v102 = *(_QWORD *)&v98[16 * v100 + 32];
          v103 = *(_QWORD *)&v98[16 * v13 + 24];
          sub_1CA280FFC((unsigned __int8 *)(v99 + 32 * v102), (unsigned __int8 *)(v99 + 32 * *(_QWORD *)&v98[16 * v13 + 16]), v99 + 32 * v103, __dst);
          if (v1)
            break;
          if (v103 < v102)
            goto LABEL_133;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v101 = sub_1CA3A78E0((uint64_t)v101);
          if (v100 >= *((_QWORD *)v101 + 2))
            goto LABEL_134;
          v104 = &v101[16 * v100 + 32];
          *(_QWORD *)v104 = v102;
          *((_QWORD *)v104 + 1) = v103;
          v105 = *((_QWORD *)v101 + 2);
          if (v13 > v105)
            goto LABEL_135;
          memmove(&v101[16 * v13 + 16], &v101[16 * v13 + 32], 16 * (v105 - v13));
          v98 = v101;
          *((_QWORD *)v101 + 2) = v105 - 1;
          v13 = v105 - 1;
        }
        while (v105 > 2);
      }
LABEL_100:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v109 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    v109 = MEMORY[0x1E0DEE9D8];
  }
  else
  {
    v7 = v5 >> 1;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF957760);
    v8 = sub_1CA85B81C();
    *(_QWORD *)(v8 + 16) = v7;
    v109 = v8;
    __dst = (unsigned __int8 *)(v8 + 32);
  }
  v10 = 0;
  v11 = *a1;
  v108 = *a1 + 88;
  v106 = *a1 - 8;
  v12 = (char *)MEMORY[0x1E0DEE9D8];
  v110 = v6;
  v111 = v3;
  v112 = v11;
  while (1)
  {
    v14 = v10++;
    if (v10 < v3)
    {
      v15 = (unsigned __int8 *)(v11 + 32 * v10);
      v16 = *v15;
      v17 = *((_QWORD *)v15 + 3);
      v18 = (unsigned __int8 *)(v11 + 32 * v14);
      v19 = *v18;
      v20 = *((_QWORD *)v18 + 3) < v17;
      if (v16 != v19)
        v20 = v19 < v16;
      v10 = v14 + 2;
      if (v14 + 2 < v3)
      {
        v21 = (uint64_t *)(v108 + 32 * v14);
        while (1)
        {
          v22 = *((unsigned __int8 *)v21 - 24);
          v23 = *v21;
          v24 = v17 < *v21;
          v25 = v22 == v16 ? v24 : v16 < v22;
          if (v20 != v25)
            break;
          v21 += 4;
          ++v10;
          v17 = v23;
          v16 = v22;
          if (v3 == v10)
          {
            v10 = v3;
            break;
          }
        }
      }
      if (v20)
      {
        if (v10 < v14)
          goto LABEL_138;
        if (v14 < v10)
        {
          v26 = 32 * v10;
          v27 = 32 * v14;
          v28 = v10;
          v29 = v14;
          do
          {
            if (v29 != --v28)
            {
              if (!v11)
                goto LABEL_143;
              v30 = (_OWORD *)(v11 + v27);
              v31 = v11 + v26;
              v32 = *(_BYTE *)(v11 + v27);
              v33 = *(_OWORD *)(v11 + v27 + 8);
              v34 = *(_QWORD *)(v11 + v27 + 24);
              v35 = *(_OWORD *)(v11 + v26 - 16);
              *v30 = *(_OWORD *)(v11 + v26 - 32);
              v30[1] = v35;
              *(_BYTE *)(v31 - 32) = v32;
              *(_OWORD *)(v31 - 24) = v33;
              *(_QWORD *)(v31 - 8) = v34;
            }
            ++v29;
            v26 -= 32;
            v27 += 32;
          }
          while (v29 < v28);
        }
      }
    }
    if (v10 >= v3)
      goto LABEL_53;
    if (__OFSUB__(v10, v14))
      goto LABEL_136;
    if (v10 - v14 >= v6)
      goto LABEL_53;
    v36 = v14 + v6;
    if (__OFADD__(v14, v6))
      goto LABEL_139;
    if (v36 >= v3)
      v36 = v3;
    if (v36 < v14)
      break;
    if (v10 != v36)
    {
      v37 = v106 + 32 * v10;
      do
      {
        v38 = (unsigned __int8 *)(v11 + 32 * v10);
        v39 = *v38;
        v40 = *((_QWORD *)v38 + 3);
        v41 = v37;
        v42 = v14;
        do
        {
          v43 = *(unsigned __int8 *)(v41 - 24);
          v44 = *(_QWORD *)v41 < v40;
          if (v39 != v43)
            v44 = v43 < v39;
          if (!v44)
            break;
          if (!v11)
            goto LABEL_141;
          v45 = *(_QWORD *)(v41 + 16);
          v46 = *(_QWORD *)(v41 + 24);
          v47 = *(_OWORD *)(v41 - 8);
          *(_OWORD *)(v41 + 8) = *(_OWORD *)(v41 - 24);
          *(_OWORD *)(v41 + 24) = v47;
          *(_BYTE *)(v41 - 24) = v39;
          *(_QWORD *)(v41 - 16) = v45;
          *(_QWORD *)(v41 - 8) = v46;
          *(_QWORD *)v41 = v40;
          v41 -= 32;
          ++v42;
        }
        while (v10 != v42);
        ++v10;
        v37 += 32;
      }
      while (v10 != v36);
      v10 = v36;
    }
LABEL_53:
    if (v10 < v14)
      goto LABEL_131;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v12 = sub_1CA3A7130(0, *((_QWORD *)v12 + 2) + 1, 1, v12);
    v49 = *((_QWORD *)v12 + 2);
    v48 = *((_QWORD *)v12 + 3);
    v13 = v49 + 1;
    v11 = v112;
    if (v49 >= v48 >> 1)
    {
      v97 = sub_1CA3A7130((char *)(v48 > 1), v49 + 1, 1, v12);
      v11 = v112;
      v12 = v97;
    }
    *((_QWORD *)v12 + 2) = v13;
    v50 = v12 + 32;
    v51 = &v12[16 * v49 + 32];
    *(_QWORD *)v51 = v14;
    *((_QWORD *)v51 + 1) = v10;
    if (v49)
    {
      while (1)
      {
        v52 = v13 - 1;
        if (v13 >= 4)
        {
          v57 = &v50[16 * v13];
          v58 = *((_QWORD *)v57 - 8);
          v59 = *((_QWORD *)v57 - 7);
          v63 = __OFSUB__(v59, v58);
          v60 = v59 - v58;
          if (v63)
            goto LABEL_120;
          v62 = *((_QWORD *)v57 - 6);
          v61 = *((_QWORD *)v57 - 5);
          v63 = __OFSUB__(v61, v62);
          v55 = v61 - v62;
          v56 = v63;
          if (v63)
            goto LABEL_121;
          v64 = v13 - 2;
          v65 = &v50[16 * v13 - 32];
          v67 = *(_QWORD *)v65;
          v66 = *((_QWORD *)v65 + 1);
          v63 = __OFSUB__(v66, v67);
          v68 = v66 - v67;
          if (v63)
            goto LABEL_123;
          v63 = __OFADD__(v55, v68);
          v69 = v55 + v68;
          if (v63)
            goto LABEL_126;
          if (v69 >= v60)
          {
            v87 = &v50[16 * v52];
            v89 = *(_QWORD *)v87;
            v88 = *((_QWORD *)v87 + 1);
            v63 = __OFSUB__(v88, v89);
            v90 = v88 - v89;
            if (v63)
              goto LABEL_130;
            v80 = v55 < v90;
            goto LABEL_90;
          }
        }
        else
        {
          if (v13 != 3)
          {
            v81 = *((_QWORD *)v12 + 4);
            v82 = *((_QWORD *)v12 + 5);
            v63 = __OFSUB__(v82, v81);
            v74 = v82 - v81;
            v75 = v63;
            goto LABEL_84;
          }
          v54 = *((_QWORD *)v12 + 4);
          v53 = *((_QWORD *)v12 + 5);
          v63 = __OFSUB__(v53, v54);
          v55 = v53 - v54;
          v56 = v63;
        }
        if ((v56 & 1) != 0)
          goto LABEL_122;
        v64 = v13 - 2;
        v70 = &v50[16 * v13 - 32];
        v72 = *(_QWORD *)v70;
        v71 = *((_QWORD *)v70 + 1);
        v73 = __OFSUB__(v71, v72);
        v74 = v71 - v72;
        v75 = v73;
        if (v73)
          goto LABEL_125;
        v76 = &v50[16 * v52];
        v78 = *(_QWORD *)v76;
        v77 = *((_QWORD *)v76 + 1);
        v63 = __OFSUB__(v77, v78);
        v79 = v77 - v78;
        if (v63)
          goto LABEL_128;
        if (__OFADD__(v74, v79))
          goto LABEL_129;
        if (v74 + v79 >= v55)
        {
          v80 = v55 < v79;
LABEL_90:
          if (v80)
            v52 = v64;
          goto LABEL_92;
        }
LABEL_84:
        if ((v75 & 1) != 0)
          goto LABEL_124;
        v83 = &v50[16 * v52];
        v85 = *(_QWORD *)v83;
        v84 = *((_QWORD *)v83 + 1);
        v63 = __OFSUB__(v84, v85);
        v86 = v84 - v85;
        if (v63)
          goto LABEL_127;
        if (v86 < v74)
          goto LABEL_15;
LABEL_92:
        v91 = v52 - 1;
        if (v52 - 1 >= v13)
        {
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
          goto LABEL_140;
        }
        if (!v11)
          goto LABEL_142;
        v92 = &v50[16 * v91];
        v93 = *(_QWORD *)v92;
        v94 = &v50[16 * v52];
        v95 = *((_QWORD *)v94 + 1);
        sub_1CA280FFC((unsigned __int8 *)(v11 + 32 * *(_QWORD *)v92), (unsigned __int8 *)(v11 + 32 * *(_QWORD *)v94), v11 + 32 * v95, __dst);
        if (v1)
          goto LABEL_100;
        if (v95 < v93)
          goto LABEL_117;
        if (v52 > *((_QWORD *)v12 + 2))
          goto LABEL_118;
        *(_QWORD *)v92 = v93;
        *(_QWORD *)&v50[16 * v91 + 8] = v95;
        v96 = *((_QWORD *)v12 + 2);
        if (v52 >= v96)
          goto LABEL_119;
        v13 = v96 - 1;
        memmove(&v50[16 * v52], v94 + 16, 16 * (v96 - 1 - v52));
        *((_QWORD *)v12 + 2) = v96 - 1;
        v11 = v112;
        if (v96 <= 2)
          goto LABEL_15;
      }
    }
    v13 = 1;
LABEL_15:
    v6 = v110;
    v3 = v111;
    if (v10 >= v111)
    {
      v9 = v109;
      goto LABEL_103;
    }
  }
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  result = sub_1CA85C038();
  __break(1u);
  return result;
}

uint64_t sub_1CA280F5C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 *v6;
  unsigned int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  _BOOL4 v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;

  if (a3 != a2)
  {
    v4 = *a4;
    v5 = *a4 + 32 * a3 - 8;
LABEL_5:
    v6 = (unsigned __int8 *)(v4 + 32 * a3);
    v7 = *v6;
    v8 = *((_QWORD *)v6 + 3);
    v9 = v5;
    v10 = result;
    while (1)
    {
      v11 = *(unsigned __int8 *)(v9 - 24);
      v12 = *(_QWORD *)v9 < v8;
      if (v7 != v11)
        v12 = v11 < v7;
      if (!v12)
      {
LABEL_4:
        ++a3;
        v5 += 32;
        if (a3 == a2)
          return result;
        goto LABEL_5;
      }
      if (!v4)
        break;
      v13 = *(_QWORD *)(v9 + 16);
      v14 = *(_QWORD *)(v9 + 24);
      v15 = *(_OWORD *)(v9 - 8);
      *(_OWORD *)(v9 + 8) = *(_OWORD *)(v9 - 24);
      *(_OWORD *)(v9 + 24) = v15;
      *(_BYTE *)(v9 - 24) = v7;
      *(_QWORD *)(v9 - 16) = v13;
      *(_QWORD *)(v9 - 8) = v14;
      *(_QWORD *)v9 = v8;
      v9 -= 32;
      if (a3 == ++v10)
        goto LABEL_4;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1CA280FFC(unsigned __int8 *__src, unsigned __int8 *a2, unint64_t a3, unsigned __int8 *__dst)
{
  unsigned __int8 *v4;
  unsigned __int8 *v6;
  unsigned __int8 *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned __int8 *v14;
  unsigned int v15;
  unsigned int v16;
  _BOOL4 v17;
  unsigned __int8 *v18;
  __int128 v19;
  __int128 v20;
  unsigned __int8 *v21;
  unsigned __int8 *v22;
  unsigned __int8 *v23;
  unsigned int v24;
  unsigned __int8 *v25;
  unsigned int v26;
  _BOOL4 v27;
  _BOOL4 v28;
  __int128 v29;
  __int128 v30;
  uint64_t result;
  unsigned __int8 *v32;
  unsigned __int8 *v33;
  unsigned __int8 *v34;

  v4 = __dst;
  v6 = a2;
  v7 = __src;
  v8 = a2 - __src;
  v9 = a2 - __src + 31;
  if (a2 - __src >= 0)
    v9 = a2 - __src;
  v10 = v9 >> 5;
  v11 = a3 - (_QWORD)a2;
  v12 = a3 - (_QWORD)a2 + 31;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v12 = a3 - (_QWORD)a2;
  v13 = v12 >> 5;
  v34 = __src;
  v33 = __dst;
  if (v10 >= v12 >> 5)
  {
    if (v11 >= -31)
    {
      if (__dst != a2 || &a2[32 * v13] <= __dst)
        memmove(__dst, a2, 32 * v13);
      v21 = &v4[32 * v13];
      v32 = v21;
      v34 = v6;
      if (v7 < v6 && v11 >= 32)
      {
        v22 = (unsigned __int8 *)(a3 - 32);
        v23 = v6;
        while (1)
        {
          v24 = *(v21 - 32);
          v25 = v22 + 32;
          v26 = *(v23 - 32);
          v23 -= 32;
          v27 = v26 < v24;
          if (v24 == v26)
            v28 = *((_QWORD *)v23 + 3) < *((_QWORD *)v21 - 1);
          else
            v28 = v27;
          if (v28)
          {
            if (v25 != v6 || v22 >= v6)
            {
              v29 = *((_OWORD *)v23 + 1);
              *(_OWORD *)v22 = *(_OWORD *)v23;
              *((_OWORD *)v22 + 1) = v29;
            }
            v34 = v23;
            if (v23 <= v7)
              goto LABEL_48;
          }
          else
          {
            v32 = v21 - 32;
            if (v25 < v21 || v22 >= v21 || v25 != v21)
            {
              v30 = *((_OWORD *)v21 - 1);
              *(_OWORD *)v22 = *((_OWORD *)v21 - 2);
              *((_OWORD *)v22 + 1) = v30;
            }
            v23 = v6;
            v21 -= 32;
            if (v6 <= v7)
              goto LABEL_48;
          }
          v22 -= 32;
          v6 = v23;
          if (v21 <= v4)
            goto LABEL_48;
        }
      }
      goto LABEL_48;
    }
  }
  else if (v8 >= -31)
  {
    if (__dst != __src || &__src[32 * v10] <= __dst)
      memmove(__dst, __src, 32 * v10);
    v14 = &v4[32 * v10];
    v32 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 32)
    {
      do
      {
        v15 = *v6;
        v16 = *v4;
        if (v15 == v16)
          v17 = *((_QWORD *)v4 + 3) < *((_QWORD *)v6 + 3);
        else
          v17 = v16 < v15;
        if (v17)
        {
          v18 = v6 + 32;
          if (v7 < v6 || v7 >= v18 || v7 != v6)
          {
            v19 = *((_OWORD *)v6 + 1);
            *(_OWORD *)v7 = *(_OWORD *)v6;
            *((_OWORD *)v7 + 1) = v19;
          }
        }
        else
        {
          if (v7 != v4)
          {
            v20 = *((_OWORD *)v4 + 1);
            *(_OWORD *)v7 = *(_OWORD *)v4;
            *((_OWORD *)v7 + 1) = v20;
          }
          v4 += 32;
          v33 = v4;
          v18 = v6;
        }
        v7 += 32;
        if (v4 >= v14)
          break;
        v6 = v18;
      }
      while ((unint64_t)v18 < a3);
      v34 = v7;
    }
LABEL_48:
    sub_1CA3A72E0((void **)&v34, (const void **)&v33, &v32);
    return 1;
  }
  result = sub_1CA85C0D4();
  __break(1u);
  return result;
}

uint64_t **sub_1CA2812B4(uint64_t isStackAllocationSafe, uint64_t **a2)
{
  uint64_t v2;
  uint64_t v4;
  char v5;
  unint64_t v6;
  size_t v7;
  uint64_t v8;
  void *v9;
  _QWORD v11[2];

  v4 = isStackAllocationSafe;
  v11[1] = *MEMORY[0x1E0C80C00];
  v5 = *(_BYTE *)(isStackAllocationSafe + 32);
  v6 = (unint64_t)((1 << v5) + 63) >> 6;
  v7 = 8 * v6;
  if ((v5 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1E0C80A78](isStackAllocationSafe);
    bzero((char *)v11 - ((v7 + 15) & 0x3FFFFFFFFFFFFFF0), v7);
    v8 = sub_1CA281418((uint64_t)v11 - ((v7 + 15) & 0x3FFFFFFFFFFFFFF0), v6, v4, a2);
    if (v2)
      swift_willThrow();
    else
      return (uint64_t **)v8;
  }
  else
  {
    v9 = (void *)swift_slowAlloc();
    bzero(v9, v7);
    a2 = (uint64_t **)sub_1CA281418((uint64_t)v9, v6, v4, a2);
    MEMORY[0x1CAA4F27C](v9, -1, -1);
  }
  return a2;
}

uint64_t sub_1CA281418(uint64_t result, uint64_t a2, uint64_t a3, uint64_t **a4)
{
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  int64_t v32;

  v29 = (unint64_t *)result;
  v30 = 0;
  v4 = 0;
  v7 = *(_QWORD *)(a3 + 64);
  v5 = a3 + 64;
  v6 = v7;
  v8 = 1 << *(_BYTE *)(v5 - 32);
  v9 = -1;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  v10 = v9 & v6;
  v31 = v5;
  v32 = (unint64_t)(v8 + 63) >> 6;
  while (1)
  {
    while (1)
    {
LABEL_5:
      if (v10)
      {
        v12 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v13 = v12 | (v4 << 6);
      }
      else
      {
        v14 = v4 + 1;
        if (__OFADD__(v4, 1))
          goto LABEL_39;
        if (v14 >= v32)
          return sub_1CA446818(v29, a2, v30, a3);
        v15 = *(_QWORD *)(v31 + 8 * v14);
        ++v4;
        if (!v15)
        {
          v4 = v14 + 1;
          if (v14 + 1 >= v32)
            return sub_1CA446818(v29, a2, v30, a3);
          v15 = *(_QWORD *)(v31 + 8 * v4);
          if (!v15)
          {
            v4 = v14 + 2;
            if (v14 + 2 >= v32)
              return sub_1CA446818(v29, a2, v30, a3);
            v15 = *(_QWORD *)(v31 + 8 * v4);
            if (!v15)
            {
              v16 = v14 + 3;
              if (v16 >= v32)
                return sub_1CA446818(v29, a2, v30, a3);
              v15 = *(_QWORD *)(v31 + 8 * v16);
              if (!v15)
              {
                while (1)
                {
                  v4 = v16 + 1;
                  if (__OFADD__(v16, 1))
                    goto LABEL_41;
                  if (v4 >= v32)
                    return sub_1CA446818(v29, a2, v30, a3);
                  v15 = *(_QWORD *)(v31 + 8 * v4);
                  ++v16;
                  if (v15)
                    goto LABEL_20;
                }
              }
              v4 = v16;
            }
          }
        }
LABEL_20:
        v10 = (v15 - 1) & v15;
        v13 = __clz(__rbit64(v15)) + (v4 << 6);
      }
      v17 = *a4;
      v18 = (*a4)[2];
      if (v18)
        break;
LABEL_4:
      *(unint64_t *)((char *)v29 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      if (__OFADD__(v30++, 1))
        goto LABEL_40;
    }
    v19 = (uint64_t *)(*(_QWORD *)(a3 + 48) + 16 * v13);
    v20 = *v19;
    v21 = v19[1];
    result = v17[4];
    if (result != *v19 || v17[5] != v21)
    {
      result = sub_1CA85C284();
      if ((result & 1) == 0)
        break;
    }
  }
  if (v18 == 1)
    goto LABEL_4;
  v23 = v17 + 7;
  v24 = 1;
  while (1)
  {
    v25 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    result = *(v23 - 1);
    v26 = *v23;
    v23 += 2;
    if (result == v20 && v26 == v21)
      goto LABEL_5;
    result = sub_1CA85C284();
    if ((result & 1) != 0)
      goto LABEL_5;
    ++v24;
    if (v25 == v18)
      goto LABEL_4;
  }
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

unint64_t sub_1CA28165C()
{
  unint64_t result;

  result = qword_1EF94B738;
  if (!qword_1EF94B738)
  {
    result = MEMORY[0x1CAA4F1A4](&protocol conformance descriptor for LocationHierarchyType, &type metadata for LocationHierarchyType);
    atomic_store(result, (unint64_t *)&qword_1EF94B738);
  }
  return result;
}

unint64_t sub_1CA2816A4()
{
  unint64_t result;

  result = qword_1EF94B740;
  if (!qword_1EF94B740)
  {
    result = MEMORY[0x1CAA4F1A4](&protocol conformance descriptor for LocationMatchType, &type metadata for LocationMatchType);
    atomic_store(result, (unint64_t *)&qword_1EF94B740);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for LocationHierarchyType(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF8)
    goto LABEL_17;
  if (a2 + 8 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 8) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 8;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 8;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 8;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 9;
  v8 = v6 - 9;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for LocationHierarchyType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 8 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 8) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF8)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF7)
    return ((uint64_t (*)(void))((char *)&loc_1CA2817C4 + 4 * byte_1CA8D4F12[v4]))();
  *a1 = a2 + 8;
  return ((uint64_t (*)(void))((char *)sub_1CA2817F8 + 4 * byte_1CA8D4F0D[v4]))();
}

uint64_t sub_1CA2817F8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CA281800(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1CA281808);
  return result;
}

uint64_t sub_1CA281814(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1CA28181CLL);
  *(_BYTE *)result = a2 + 8;
  return result;
}

uint64_t sub_1CA281820(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CA281828(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for LocationHierarchyType()
{
  return &type metadata for LocationHierarchyType;
}

uint64_t getEnumTagSinglePayload for LocationMatchType(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFD)
    goto LABEL_17;
  if (a2 + 3 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 3) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 3;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 3;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 3;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 4;
  v8 = v6 - 4;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for LocationMatchType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1CA281920 + 4 * byte_1CA8D4F1C[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1CA281954 + 4 * byte_1CA8D4F17[v4]))();
}

uint64_t sub_1CA281954(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CA28195C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1CA281964);
  return result;
}

uint64_t sub_1CA281970(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1CA281978);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1CA28197C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CA281984(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for LocationMatchType()
{
  return &type metadata for LocationMatchType;
}

uint64_t destroy for LocationRecipe(id *a1)
{

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for LocationRecipe(uint64_t a1, uint64_t a2)
{
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;

  v3 = *(void **)a2;
  v4 = *(void **)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v6 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v6;
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  v7 = v3;
  v8 = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for LocationRecipe(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = *(void **)(a2 + 8);
  v8 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v7;
  v9 = v7;

  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy64_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for LocationRecipe(uint64_t a1, uint64_t a2)
{
  void *v4;

  v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for LocationRecipe(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 64))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for LocationRecipe(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 64) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for LocationRecipe()
{
  return &type metadata for LocationRecipe;
}

_QWORD *initializeBufferWithCopyOfBuffer for MomentBasedLocationAssetsFetcher(_QWORD *a1, uint64_t a2)
{
  void *v3;
  void *v4;
  id v5;
  id v6;

  v3 = *(void **)a2;
  v4 = *(void **)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  v5 = v3;
  v6 = v4;
  return a1;
}

void destroy for MomentBasedLocationAssetsFetcher(id *a1)
{

}

uint64_t assignWithCopy for MomentBasedLocationAssetsFetcher(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = *(void **)(a2 + 8);
  v8 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v7;
  v9 = v7;

  return a1;
}

uint64_t assignWithTake for MomentBasedLocationAssetsFetcher(uint64_t a1, _OWORD *a2)
{
  void *v4;

  v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *a2;

  return a1;
}

uint64_t getEnumTagSinglePayload for MomentBasedLocationAssetsFetcher(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MomentBasedLocationAssetsFetcher(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for MomentBasedLocationAssetsFetcher()
{
  return &type metadata for MomentBasedLocationAssetsFetcher;
}

unint64_t sub_1CA281DC0()
{
  unint64_t result;

  result = qword_1ED8710A0;
  if (!qword_1ED8710A0)
  {
    result = MEMORY[0x1CAA4F1A4](MEMORY[0x1E0DEA9B8], MEMORY[0x1E0DEA968]);
    atomic_store(result, (unint64_t *)&qword_1ED8710A0);
  }
  return result;
}

uint64_t sub_1CA281E04(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  char isUniquelyReferenced_nonNull_native;
  char v14;
  unint64_t v15;
  uint64_t v16;
  _BOOL8 v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  char v21;
  uint64_t result;
  uint64_t v23;
  uint64_t v24;

  v4 = *(_QWORD *)(a2 + 16);
  if (!v4)
    return (uint64_t)a1;
  swift_bridgeObjectRetain();
  v7 = (uint64_t *)(a2 + 40);
  v23 = a3;
  while (1)
  {
    if (!*(_QWORD *)(a3 + 16))
      goto LABEL_5;
    v9 = *(v7 - 1);
    v8 = *v7;
    swift_bridgeObjectRetain_n();
    v10 = sub_1CA25081C(v9, v8);
    if ((v11 & 1) != 0)
      break;
LABEL_4:
    swift_bridgeObjectRelease_n();
LABEL_5:
    v7 += 2;
    if (!--v4)
    {
      swift_bridgeObjectRelease();
      return (uint64_t)a1;
    }
  }
  v12 = *(_QWORD *)(*(_QWORD *)(a3 + 56) + 8 * v10);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (!*(_QWORD *)(v12 + 16))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_5;
  }
  v24 = v12;
  swift_bridgeObjectRetain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v15 = sub_1CA25081C(v9, v8);
  v16 = a1[2];
  v17 = (v14 & 1) == 0;
  v18 = v16 + v17;
  if (!__OFADD__(v16, v17))
  {
    v19 = v14;
    if (a1[3] >= v18)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        sub_1CA260934();
    }
    else
    {
      sub_1CA253064(v18, isUniquelyReferenced_nonNull_native);
      v20 = sub_1CA25081C(v9, v8);
      if ((v19 & 1) != (v21 & 1))
        goto LABEL_21;
      v15 = v20;
    }
    a3 = v23;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    if ((v19 & 1) == 0)
    {
      sub_1CA279598(v15, v9, v8, MEMORY[0x1E0DEE9E8], a1);
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRelease();
    sub_1CA35B0A0(v24);
    goto LABEL_4;
  }
  __break(1u);
LABEL_21:
  result = sub_1CA85C2E4();
  __break(1u);
  return result;
}

uint64_t sub_1CA282008(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t result;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t *v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;

  v3 = v2;
  v6 = a1 + 56;
  v7 = 1 << *(_BYTE *)(a1 + 32);
  v8 = -1;
  if (v7 < 64)
    v8 = ~(-1 << v7);
  v9 = v8 & *(_QWORD *)(a1 + 56);
  v10 = (unint64_t)(v7 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v12 = 0;
  v30 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  while (1)
  {
    while (v9)
    {
      v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v14 = v13 | (v12 << 6);
      if (*(_QWORD *)(a2 + 16))
      {
LABEL_23:
        v18 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v14);
        v19 = *v18;
        v20 = v18[1];
        swift_bridgeObjectRetain_n();
        v21 = sub_1CA25081C(v19, v20);
        if ((v22 & 1) != 0)
        {
          v23 = (uint64_t *)(*(_QWORD *)(a2 + 56) + 16 * v21);
          v24 = v23[1];
          v28 = *v23;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease_n();
          result = swift_isUniquelyReferenced_nonNull_native();
          v29 = v3;
          if ((result & 1) == 0)
          {
            result = (uint64_t)sub_1CA26BCE4(0, v30[2] + 1, 1, v30);
            v30 = (_QWORD *)result;
          }
          v26 = v30[2];
          v25 = v30[3];
          if (v26 >= v25 >> 1)
          {
            result = (uint64_t)sub_1CA26BCE4((_QWORD *)(v25 > 1), v26 + 1, 1, v30);
            v30 = (_QWORD *)result;
          }
          v30[2] = v26 + 1;
          v27 = &v30[2 * v26];
          v3 = v29;
          v27[4] = v28;
          v27[5] = v24;
        }
        else
        {
          result = swift_bridgeObjectRelease_n();
        }
      }
    }
    v15 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v15 >= v10)
      goto LABEL_30;
    v16 = *(_QWORD *)(v6 + 8 * v15);
    ++v12;
    if (!v16)
    {
      v12 = v15 + 1;
      if (v15 + 1 >= v10)
        goto LABEL_30;
      v16 = *(_QWORD *)(v6 + 8 * v12);
      if (!v16)
      {
        v12 = v15 + 2;
        if (v15 + 2 >= v10)
          goto LABEL_30;
        v16 = *(_QWORD *)(v6 + 8 * v12);
        if (!v16)
        {
          v12 = v15 + 3;
          if (v15 + 3 >= v10)
            goto LABEL_30;
          v16 = *(_QWORD *)(v6 + 8 * v12);
          if (!v16)
            break;
        }
      }
    }
LABEL_22:
    v9 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v12 << 6);
    if (*(_QWORD *)(a2 + 16))
      goto LABEL_23;
  }
  v17 = v15 + 4;
  if (v17 >= v10)
  {
LABEL_30:
    swift_release();
    return (uint64_t)v30;
  }
  v16 = *(_QWORD *)(v6 + 8 * v17);
  if (v16)
  {
    v12 = v17;
    goto LABEL_22;
  }
  while (1)
  {
    v12 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v12 >= v10)
      goto LABEL_30;
    v16 = *(_QWORD *)(v6 + 8 * v12);
    ++v17;
    if (v16)
      goto LABEL_22;
  }
LABEL_32:
  __break(1u);
  return result;
}

uint64_t sub_1CA282254()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1CA282278(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v2;

  if (*a1 != *(unsigned __int8 *)(v2 + 16))
    return 0;
  swift_bridgeObjectRetain();
  return a2;
}

_QWORD *sub_1CA2822CC(uint64_t a1, uint64_t (*a2)(_BYTE *, uint64_t, uint64_t, uint64_t))
{
  uint64_t v2;
  _QWORD *v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  _BYTE v16[8];
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  v4 = (_QWORD *)(swift_bridgeObjectRetain() + 56);
  v5 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  do
  {
    v8 = *(v4 - 1);
    v7 = *v4;
    v9 = *(v4 - 2);
    v16[0] = *((_BYTE *)v4 - 24);
    v17 = v9;
    v18 = v8;
    v19 = v7;
    swift_bridgeObjectRetain();
    v10 = a2(v16, v9, v8, v7);
    v12 = v11;
    swift_bridgeObjectRelease();
    if (v12)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v5 = sub_1CA26BCE4(0, v5[2] + 1, 1, v5);
      v14 = v5[2];
      v13 = v5[3];
      if (v14 >= v13 >> 1)
        v5 = sub_1CA26BCE4((_QWORD *)(v13 > 1), v14 + 1, 1, v5);
      v5[2] = v14 + 1;
      v6 = &v5[2 * v14];
      v6[4] = v10;
      v6[5] = v12;
    }
    v4 += 4;
    --v2;
  }
  while (v2);
  swift_bridgeObjectRelease();
  return v5;
}

unint64_t sub_1CA282410()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED872280;
  if (!qword_1ED872280)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED872270);
    result = MEMORY[0x1CAA4F1A4](MEMORY[0x1E0DEAF20], v1);
    atomic_store(result, (unint64_t *)&qword_1ED872280);
  }
  return result;
}

id sub_1CA28245C(void *a1, void *a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1CA280564(a1, a2, a3, *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24), *(char **)(v3 + 32));
}

void sub_1CA282470(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_1CA4A6608(a1, a2, a3, *(void (**)(id, id, uint64_t))(v3 + 16), *(_QWORD *)(v3 + 24), *(_QWORD *)(v3 + 32), *(_QWORD *)(v3 + 40));
}

uint64_t sub_1CA28247C()
{
  return swift_deallocObject();
}

uint64_t sub_1CA28248C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1CA38BFD8(a1, a2, a3, *(uint64_t (**)(void))(v3 + 16));
}

id sub_1CA282494(int a1, id a2)
{
  uint64_t v2;
  _BYTE *v3;
  id result;
  unsigned int v5;

  v3 = *(_BYTE **)(v2 + 24);
  result = objc_msgSend(a2, sel_intersectsCollection_, *(_QWORD *)(v2 + 16));
  if ((_DWORD)result)
  {
    v5 = *v3;
    if (v5 <= 5)
      LOBYTE(v5) = 5;
    *v3 = v5;
  }
  return result;
}

void sub_1CA2824DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_1CA4A65D8(a1, a2, a3, *(void (**)(id, id, uint64_t))(v3 + 16), *(_QWORD *)(v3 + 24), *(_QWORD *)(v3 + 32), *(_QWORD *)(v3 + 40));
}

uint64_t sub_1CA2824E8()
{
  return swift_deallocObject();
}

id sub_1CA2824F8(int a1, id a2)
{
  uint64_t v2;
  _BYTE *v3;
  id result;
  unsigned int v5;

  v3 = *(_BYTE **)(v2 + 24);
  result = objc_msgSend(a2, sel_intersectsCollection_, *(_QWORD *)(v2 + 16));
  if ((_DWORD)result)
  {
    v5 = *v3;
    if (v5 <= 4)
      LOBYTE(v5) = 4;
    *v3 = v5;
  }
  return result;
}

void sub_1CA282540(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_1CA4A65A8(a1, a2, a3, *(void (**)(id, id, uint64_t))(v3 + 16), *(_QWORD *)(v3 + 24), *(_QWORD *)(v3 + 32), *(_QWORD *)(v3 + 40));
}

uint64_t sub_1CA28254C()
{
  return swift_deallocObject();
}

uint64_t sub_1CA28255C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v1 = sub_1CA85A694();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (((*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

id sub_1CA2825E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;

  v9 = *(_QWORD *)(sub_1CA85A694() - 8);
  v10 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v11 = (*(_QWORD *)(v9 + 64) + v10 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_1CA28076C(a1, a2, a3, a4, v4 + v10, *(_QWORD *)(v4 + v11), *(void **)(v4 + ((v11 + 15) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_1CA28266C()
{
  return swift_deallocObject();
}

uint64_t sub_1CA28267C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_1CA3299CC(a1, a2, a3, a4, *(uint64_t (**)(void))(v4 + 16));
}

uint64_t sub_1CA2826A8()
{
  return MEMORY[0x1E0DEE9E8];
}

uint64_t sub_1CA2826B8(uint64_t a1)
{
  uint64_t result;
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;

  result = sub_1CA85B9A8();
  v3 = 0;
  v18 = result;
  v4 = a1 + 64;
  v5 = 1 << *(_BYTE *)(a1 + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(a1 + 64);
  v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v10 = v9 | (v3 << 6);
      goto LABEL_5;
    }
    v14 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v14 >= v8)
      goto LABEL_23;
    v15 = *(_QWORD *)(v4 + 8 * v14);
    ++v3;
    if (!v15)
    {
      v3 = v14 + 1;
      if (v14 + 1 >= v8)
        goto LABEL_23;
      v15 = *(_QWORD *)(v4 + 8 * v3);
      if (!v15)
      {
        v3 = v14 + 2;
        if (v14 + 2 >= v8)
          goto LABEL_23;
        v15 = *(_QWORD *)(v4 + 8 * v3);
        if (!v15)
        {
          v3 = v14 + 3;
          if (v14 + 3 >= v8)
            goto LABEL_23;
          v15 = *(_QWORD *)(v4 + 8 * v3);
          if (!v15)
            break;
        }
      }
    }
LABEL_22:
    v7 = (v15 - 1) & v15;
    v10 = __clz(__rbit64(v15)) + (v3 << 6);
LABEL_5:
    v11 = (uint64_t *)(*(_QWORD *)(a1 + 56) + 16 * v10);
    v12 = *v11;
    v13 = v11[1];
    swift_bridgeObjectRetain();
    sub_1CA23F448(&v17, v12, v13);
    result = swift_bridgeObjectRelease();
  }
  v16 = v14 + 4;
  if (v16 >= v8)
  {
LABEL_23:
    swift_release();
    return v18;
  }
  v15 = *(_QWORD *)(v4 + 8 * v16);
  if (v15)
  {
    v3 = v16;
    goto LABEL_22;
  }
  while (1)
  {
    v3 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v3 >= v8)
      goto LABEL_23;
    v15 = *(_QWORD *)(v4 + 8 * v3);
    ++v16;
    if (v15)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_1CA28284C(uint64_t a1)
{
  uint64_t result;
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;

  result = sub_1CA85B9A8();
  v3 = 0;
  v18 = result;
  v4 = a1 + 64;
  v5 = 1 << *(_BYTE *)(a1 + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(a1 + 64);
  v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v10 = v9 | (v3 << 6);
      goto LABEL_5;
    }
    v14 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v14 >= v8)
      goto LABEL_23;
    v15 = *(_QWORD *)(v4 + 8 * v14);
    ++v3;
    if (!v15)
    {
      v3 = v14 + 1;
      if (v14 + 1 >= v8)
        goto LABEL_23;
      v15 = *(_QWORD *)(v4 + 8 * v3);
      if (!v15)
      {
        v3 = v14 + 2;
        if (v14 + 2 >= v8)
          goto LABEL_23;
        v15 = *(_QWORD *)(v4 + 8 * v3);
        if (!v15)
        {
          v3 = v14 + 3;
          if (v14 + 3 >= v8)
            goto LABEL_23;
          v15 = *(_QWORD *)(v4 + 8 * v3);
          if (!v15)
            break;
        }
      }
    }
LABEL_22:
    v7 = (v15 - 1) & v15;
    v10 = __clz(__rbit64(v15)) + (v3 << 6);
LABEL_5:
    v11 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v10);
    v12 = *v11;
    v13 = v11[1];
    swift_bridgeObjectRetain();
    sub_1CA23F448(&v17, v12, v13);
    result = swift_bridgeObjectRelease();
  }
  v16 = v14 + 4;
  if (v16 >= v8)
  {
LABEL_23:
    swift_release();
    return v18;
  }
  v15 = *(_QWORD *)(v4 + 8 * v16);
  if (v15)
  {
    v3 = v16;
    goto LABEL_22;
  }
  while (1)
  {
    v3 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v3 >= v8)
      goto LABEL_23;
    v15 = *(_QWORD *)(v4 + 8 * v3);
    ++v16;
    if (v15)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

void sub_1CA2829E0(uint64_t a1)
{
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  unint64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t v11;
  int64_t v12;
  id v13[2];

  sub_1CA24EEC0(0, &qword_1ED872E40);
  sub_1CA24E6C0(&qword_1ED872E48, &qword_1ED872E40);
  v2 = 0;
  v13[1] = (id)sub_1CA85B9A8();
  v3 = a1 + 64;
  v4 = 1 << *(_BYTE *)(a1 + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(a1 + 64);
  v7 = (unint64_t)(v4 + 63) >> 6;
  while (1)
  {
    if (v6)
    {
      v8 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v9 = v8 | (v2 << 6);
      goto LABEL_5;
    }
    v10 = v2 + 1;
    if (__OFADD__(v2, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v10 >= v7)
      goto LABEL_23;
    v11 = *(_QWORD *)(v3 + 8 * v10);
    ++v2;
    if (!v11)
    {
      v2 = v10 + 1;
      if (v10 + 1 >= v7)
        goto LABEL_23;
      v11 = *(_QWORD *)(v3 + 8 * v2);
      if (!v11)
      {
        v2 = v10 + 2;
        if (v10 + 2 >= v7)
          goto LABEL_23;
        v11 = *(_QWORD *)(v3 + 8 * v2);
        if (!v11)
        {
          v2 = v10 + 3;
          if (v10 + 3 >= v7)
            goto LABEL_23;
          v11 = *(_QWORD *)(v3 + 8 * v2);
          if (!v11)
            break;
        }
      }
    }
LABEL_22:
    v6 = (v11 - 1) & v11;
    v9 = __clz(__rbit64(v11)) + (v2 << 6);
LABEL_5:
    sub_1CA242DFC(v13, *(id *)(*(_QWORD *)(a1 + 56) + 8 * v9));

  }
  v12 = v10 + 4;
  if (v12 >= v7)
  {
LABEL_23:
    swift_release();
    return;
  }
  v11 = *(_QWORD *)(v3 + 8 * v12);
  if (v11)
  {
    v2 = v12;
    goto LABEL_22;
  }
  while (1)
  {
    v2 = v12 + 1;
    if (__OFADD__(v12, 1))
      break;
    if (v2 >= v7)
      goto LABEL_23;
    v11 = *(_QWORD *)(v3 + 8 * v2);
    ++v12;
    if (v11)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
}

_QWORD *sub_1CA282B94(unint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  id v5;
  void *v6;
  uint64_t v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  _QWORD *v15;

  if (a1 >> 62)
    goto LABEL_17;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v2; v2 = sub_1CA85C08C())
  {
    v3 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    v4 = 4;
    while (1)
    {
      v5 = (a1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1CAA4DD64](v4 - 4, a1) : *(id *)(a1 + 8 * v4);
      v6 = v5;
      v7 = v4 - 3;
      if (__OFADD__(v4 - 4, 1))
        break;
      v8 = objc_msgSend(v5, sel_uuid);
      if (v8)
      {
        v9 = v8;
        v10 = sub_1CA85B534();
        v12 = v11;

        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v3 = sub_1CA26BCE4(0, v3[2] + 1, 1, v3);
        v14 = v3[2];
        v13 = v3[3];
        if (v14 >= v13 >> 1)
          v3 = sub_1CA26BCE4((_QWORD *)(v13 > 1), v14 + 1, 1, v3);
        v3[2] = v14 + 1;
        v15 = &v3[2 * v14];
        v15[4] = v10;
        v15[5] = v12;
      }
      else
      {

      }
      ++v4;
      if (v7 == v2)
        goto LABEL_19;
    }
    __break(1u);
LABEL_17:
    swift_bridgeObjectRetain();
  }
  v3 = (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_19:
  swift_bridgeObjectRelease();
  return v3;
}

void PersonalEventAssetsFetcher.init(photoLibrary:graph:cachedMomentUUIDByAssetUUID:)(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  void *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8744D8);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1CA85A6A0();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  a4[3] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3578]), sel_init);
  type metadata accessor for PersonalEventAssetsFetcher();
  (*(void (**)(char *, _QWORD, uint64_t))(v12 + 104))(v14, *MEMORY[0x1E0CB0EF8], v11);
  sub_1CA85A6AC();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  *a4 = a1;
  a4[1] = a2;
  a4[2] = a3;
  v15 = (void *)a4[3];
  v16 = a1;
  v17 = a2;
  v18 = v15;
  v19 = (void *)sub_1CA85B510();
  objc_msgSend(v18, sel_setDateFormat_, v19);

  v20 = v18;
  sub_1CA85A82C();
  v21 = sub_1CA85A850();
  v22 = *(_QWORD *)(v21 - 8);
  v23 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v10, 1, v21) != 1)
  {
    v23 = (void *)sub_1CA85A838();
    (*(void (**)(char *, uint64_t))(v22 + 8))(v10, v21);
  }
  objc_msgSend(v20, sel_setTimeZone_, v23);

}

uint64_t type metadata accessor for PersonalEventAssetsFetcher()
{
  uint64_t result;

  result = qword_1EF94B7B8;
  if (!qword_1EF94B7B8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t PersonalEventAssetsFetcher.personalEventGroundingResultByQueryToken(with:associatedPersonUUID:scopedAssetUUIDs:retrievalResultsByQueryToken:progressReporter:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int64_t a5, int64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  _BYTE *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t result;
  void *ObjCClassFromMetadata;
  void *v34;
  NSObject *v35;
  unint64_t v36;
  unint64_t v37;
  id v38;
  void *v39;
  id v40;
  unint64_t v41;
  uint64_t v42;
  os_log_type_t v43;
  int64_t v44;
  unint64_t v45;
  uint8_t *v46;
  uint8_t *v47;
  uint64_t v48;
  uint64_t v49;
  os_log_type_t v50;
  _BOOL4 v51;
  uint8_t *v52;
  uint64_t v53;
  uint64_t v54;
  NSObject *v55;
  os_log_type_t v56;
  uint8_t *v57;
  _BYTE *v58;
  double v59;
  uint64_t v60;
  uint64_t v61;
  double v62;
  uint64_t v63;
  __int128 v64;
  _BYTE *v65;
  void (*v66)(_BYTE *, uint64_t);
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  void (*v71)(_BYTE *, unint64_t, uint64_t);
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  int v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  int v79;
  NSObject *v80;
  os_log_type_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  void (*v86)(_BYTE *, uint64_t);
  uint64_t v87;
  int64_t v88;
  unint64_t v89;
  char v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v96;
  int64_t v97;
  uint64_t v98;
  _BYTE *v99;
  int v100;
  _BYTE *v101;
  uint64_t v102;
  _BYTE *v103;
  _BYTE *v104;
  int v105;
  _BYTE *v106;
  uint64_t v107;
  _BYTE *v108;
  uint64_t v109;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v111;
  _BYTE *v112;
  uint64_t v113;
  os_log_type_t v114;
  uint8_t *v115;
  uint64_t v116;
  _BYTE v117[12];
  int v118;
  int v119;
  int v120;
  uint64_t v121;
  uint64_t v122;
  int64_t v123;
  unint64_t v124;
  uint64_t v125;
  __int128 v126;
  uint64_t v127;
  _BYTE *v128;
  _BYTE *v129;
  _BYTE *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  _BYTE *v135;
  _BYTE *v136;
  uint64_t v137;
  _BYTE *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  int64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  void (*v149)(_BYTE *, uint64_t, uint64_t);
  _BYTE *v150;
  _BYTE *v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  char v158[8];
  uint64_t v159;

  v7 = v6;
  v133 = a4;
  v134 = a1;
  v132 = sub_1CA85B0FC();
  v131 = *(_QWORD *)(v132 - 8);
  v11 = MEMORY[0x1E0C80A78](v132);
  v130 = &v117[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v11);
  v129 = &v117[-v13];
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94B758);
  MEMORY[0x1E0C80A78](v14);
  v136 = &v117[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v139 = sub_1CA85B150();
  v144 = *(_QWORD *)(v139 - 8);
  v16 = MEMORY[0x1E0C80A78](v139);
  v135 = &v117[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v16);
  v138 = &v117[-v18];
  v19 = sub_1CA85AF94();
  v154 = *(_QWORD *)(v19 - 8);
  v155 = v19;
  MEMORY[0x1E0C80A78](v19);
  v21 = &v117[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v153 = sub_1CA85AF04();
  v156 = *(_QWORD *)(v153 - 8);
  MEMORY[0x1E0C80A78](v153);
  v23 = &v117[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v24 = sub_1CA85AAFC();
  v146 = *(_QWORD *)(v24 - 8);
  v25 = MEMORY[0x1E0C80A78](v24);
  v150 = &v117[-((v26 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v27 = MEMORY[0x1E0C80A78](v25);
  v128 = &v117[-v28];
  MEMORY[0x1E0C80A78](v27);
  v151 = &v117[-v29];
  if (qword_1ED872DA8 != -1)
LABEL_90:
    swift_once();
  v30 = qword_1ED87D0A8;
  *(double *)&v31 = CACurrentMediaTime();
  sub_1CA2E4280("PersonalEventAssetsFetcher", 26, 2u, v31, 0, v30, (uint64_t)v158);
  sub_1CA85BB64();
  v147 = v7;
  if (v7)
    goto LABEL_3;
  v123 = a5;
  if (a3
    && (sub_1CA24EEC0(0, (unint64_t *)&qword_1EF94B000),
        ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata(),
        v34 = (void *)sub_1CA85B510(),
        v35 = objc_msgSend(ObjCClassFromMetadata, sel_localIdentifierWithUUID_, v34),
        v34,
        v35))
  {
    v122 = sub_1CA85B534();
    v37 = v36;
  }
  else
  {
    v38 = objc_msgSend(*(id *)(v137 + 8), sel_meNodeWithFallbackInferredMeNode);
    if (!v38
      || (v39 = v38,
          v40 = objc_msgSend(v38, sel_localIdentifier),
          v39,
          !v40))
    {
      if (qword_1ED872DE0 != -1)
        swift_once();
      v54 = sub_1CA85B348();
      __swift_project_value_buffer(v54, (uint64_t)qword_1ED87D0C8);
      v55 = sub_1CA85B330();
      v56 = sub_1CA85BAE0();
      if (os_log_type_enabled(v55, v56))
      {
        v57 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v57 = 0;
        _os_log_impl(&dword_1CA237000, v55, v56, "No associated person localIdentifier is found", v57, 2u);
        MEMORY[0x1CAA4F27C](v57, -1, -1);
      }

      a3 = sub_1CA273D6C(MEMORY[0x1E0DEE9D8]);
      sub_1CA2E0C94(0);
      swift_release();
      swift_release();
      return a3;
    }
    v122 = sub_1CA85B534();
    v37 = v41;

    if (qword_1ED872DE0 != -1)
      swift_once();
    v42 = sub_1CA85B348();
    __swift_project_value_buffer(v42, (uint64_t)qword_1ED87D0C8);
    v35 = sub_1CA85B330();
    v43 = sub_1CA85BAEC();
    if (os_log_type_enabled(v35, v43))
    {
      v44 = a6;
      v45 = v37;
      v46 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v46 = 0;
      _os_log_impl(&dword_1CA237000, v35, v43, "Use the device owner since there is no person uuid", v46, 2u);
      v47 = v46;
      v37 = v45;
      a6 = v44;
      MEMORY[0x1CAA4F27C](v47, -1, -1);
    }
  }

  if (qword_1ED872DE0 != -1)
    swift_once();
  v48 = sub_1CA85B348();
  v49 = __swift_project_value_buffer(v48, (uint64_t)qword_1ED87D0C8);
  swift_bridgeObjectRetain_n();
  v143 = v49;
  a3 = sub_1CA85B330();
  v50 = sub_1CA85BAEC();
  v51 = os_log_type_enabled((os_log_t)a3, v50);
  v145 = a6;
  v124 = v37;
  if (v51)
  {
    v52 = (uint8_t *)swift_slowAlloc();
    v152 = swift_slowAlloc();
    v159 = v152;
    *(_DWORD *)v52 = 136315138;
    v149 = (void (*)(_BYTE *, uint64_t, uint64_t))(v52 + 4);
    swift_bridgeObjectRetain();
    v157 = sub_1CA28712C(v122, v37, &v159);
    sub_1CA85BCF0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1CA237000, (os_log_t)a3, v50, "Associated person localIdentifier=%s", v52, 0xCu);
    v53 = v152;
    swift_arrayDestroy();
    MEMORY[0x1CAA4F27C](v53, -1, -1);
    MEMORY[0x1CAA4F27C](v52, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v58 = v151;
  v59 = 0.2;
  v60 = v147;
  sub_1CA85BB64();
  v147 = v60;
  if (v60)
  {
LABEL_86:
    swift_bridgeObjectRelease();
LABEL_3:
    sub_1CA2E0C94(0);
    swift_release();
    swift_release();
    return a3;
  }
  v61 = *(_QWORD *)(v134 + 16);
  if (!v61)
  {
    a3 = MEMORY[0x1E0DEE9E0];
LABEL_85:
    swift_bridgeObjectRelease();
    v116 = v147;
    sub_1CA85BB70();
    if (!v116)
      goto LABEL_3;
    goto LABEL_86;
  }
  v62 = 0.8 / (double)v61;
  v142 = v134 + ((*(unsigned __int8 *)(v146 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v146 + 80));
  v141 = *(_QWORD *)(v146 + 72);
  v149 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v146 + 16);
  LODWORD(v152) = *MEMORY[0x1E0D772A8];
  v120 = *MEMORY[0x1E0D77C70];
  v119 = *MEMORY[0x1E0D77C80];
  v118 = *MEMORY[0x1E0D77C78];
  swift_bridgeObjectRetain();
  v63 = 0;
  v121 = MEMORY[0x1E0DEE9E0];
  *(_QWORD *)&v64 = 136315138;
  v126 = v64;
  v125 = MEMORY[0x1E0DEE9B8] + 8;
  v65 = v150;
  v127 = v24;
  v140 = v61;
  while (2)
  {
    v148 = v63;
    v149(v58, v142 + v141 * v63, v24);
    v67 = sub_1CA85AAC0();
    v68 = *(_QWORD *)(v67 + 16);
    if (!v68)
    {
      swift_bridgeObjectRelease();
      goto LABEL_39;
    }
    v69 = v67 + ((*(unsigned __int8 *)(v156 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v156 + 80));
    v70 = *(_QWORD *)(v156 + 72);
    v71 = *(void (**)(_BYTE *, unint64_t, uint64_t))(v156 + 16);
    while (1)
    {
      v72 = v153;
      v71(v23, v69, v153);
      sub_1CA85AEF8();
      (*(void (**)(_BYTE *, uint64_t))(v156 + 8))(v23, v72);
      v74 = v154;
      v73 = v155;
      v75 = (*(uint64_t (**)(_BYTE *, uint64_t))(v154 + 88))(v21, v155);
      if (v75 == (_DWORD)v152)
        break;
      (*(void (**)(_BYTE *, uint64_t))(v74 + 8))(v21, v73);
LABEL_32:
      v69 += v70;
      if (!--v68)
      {
        swift_bridgeObjectRelease();
        v24 = v127;
        v65 = v150;
        v58 = v151;
        goto LABEL_39;
      }
    }
    (*(void (**)(_BYTE *, uint64_t))(v74 + 96))(v21, v73);
    if (!*((_QWORD *)v21 + 1))
      goto LABEL_32;
    swift_bridgeObjectRelease();
    v76 = (uint64_t)v136;
    sub_1CA85B144();
    v77 = v144;
    v78 = v139;
    v79 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v144 + 48))(v76, 1, v139);
    v24 = v127;
    v65 = v150;
    if (v79 == 1)
    {
      sub_1CA267BE8(v76, &qword_1EF94B758);
      v58 = v151;
LABEL_39:
      v149(v65, (uint64_t)v58, v24);
      v80 = sub_1CA85B330();
      v81 = sub_1CA85BAEC();
      if (os_log_type_enabled(v80, v81))
      {
        v82 = swift_slowAlloc();
        v83 = swift_slowAlloc();
        v159 = v83;
        *(_DWORD *)v82 = v126;
        sub_1CA23CC98(&qword_1EF94B750, (uint64_t (*)(uint64_t))MEMORY[0x1E0D76708], MEMORY[0x1E0D76738]);
        v84 = sub_1CA85C260();
        *(_QWORD *)(v82 + 4) = sub_1CA28712C(v84, v85, &v159);
        swift_bridgeObjectRelease();
        v86 = *(void (**)(_BYTE *, uint64_t))(v146 + 8);
        v86(v65, v24);
        _os_log_impl(&dword_1CA237000, v80, v81, "Unable to convert the meaning label of query token=%s to MeaningfulMomentWithPersonAssociationEventType", (uint8_t *)v82, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1CAA4F27C](v83, -1, -1);
        v87 = v82;
        v58 = v151;
        MEMORY[0x1CAA4F27C](v87, -1, -1);

        v86(v58, v24);
      }
      else
      {

        v66 = *(void (**)(_BYTE *, uint64_t))(v146 + 8);
        v66(v65, v24);
        v66(v58, v24);
      }
LABEL_28:
      v63 = v148 + 1;
      if (v148 + 1 == v140)
      {
        swift_bridgeObjectRelease();
        a3 = v121;
        goto LABEL_85;
      }
      continue;
    }
    break;
  }
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v77 + 32))(v138, v76, v78);
  v88 = v123;
  if (!*(_QWORD *)(v123 + 16) || (v89 = sub_1CA2509B8((uint64_t)v151), (v90 & 1) == 0))
  {
    a3 = MEMORY[0x1E0DEE9E8];
LABEL_72:
    v98 = v144;
    v99 = v135;
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v144 + 16))(v135, v138, v78);
    v100 = (*(uint64_t (**)(_BYTE *, uint64_t))(v98 + 88))(v99, v78);
    if (v100 == v120)
    {
      v101 = v129;
      sub_1CA2E4984(v133, a3, (uint64_t)v129);
      swift_bridgeObjectRelease();
      v102 = (uint64_t)v128;
      v103 = v128;
      v104 = v151;
    }
    else
    {
      v105 = v100;
      v106 = v151;
      if (v100 != v119)
      {
        swift_bridgeObjectRelease();
        if (v105 != v118)
        {
          a3 = sub_1CA85B330();
          v114 = sub_1CA85BAE0();
          if (os_log_type_enabled((os_log_t)a3, v114))
          {
            v115 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)v115 = 0;
            _os_log_impl(&dword_1CA237000, (os_log_t)a3, v114, "Unsupported meaningful event type", v115, 2u);
            MEMORY[0x1CAA4F27C](v115, -1, -1);
          }

          (*(void (**)(_BYTE *, uint64_t))(v144 + 8))(v135, v78);
        }
        goto LABEL_77;
      }
      v101 = v129;
      sub_1CA4706F8(v133, a3, (uint64_t)v129);
      swift_bridgeObjectRelease();
      v102 = (uint64_t)v128;
      v103 = v128;
      v104 = v106;
    }
    v149(v103, (uint64_t)v104, v24);
    v107 = v131;
    v108 = v130;
    a3 = v132;
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v131 + 16))(v130, v101, v132);
    v109 = v121;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v159 = v109;
    v111 = (uint64_t)v108;
    v78 = v139;
    sub_1CA25D8C0(v111, v102, isUniquelyReferenced_nonNull_native);
    v121 = v159;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v146 + 8))(v102, v24);
    v112 = v101;
    v65 = v150;
    (*(void (**)(_BYTE *, uint64_t))(v107 + 8))(v112, a3);
LABEL_77:
    v59 = v62 + v59;
    v113 = v147;
    sub_1CA85BB64();
    v147 = v113;
    if (!v113)
    {
      (*(void (**)(_BYTE *, uint64_t))(v144 + 8))(v138, v78);
      v58 = v151;
      (*(void (**)(_BYTE *, uint64_t))(v146 + 8))(v151, v24);
      goto LABEL_28;
    }
    swift_bridgeObjectRelease();
    (*(void (**)(_BYTE *, uint64_t))(v144 + 8))(v138, v78);
    (*(void (**)(_BYTE *, uint64_t))(v146 + 8))(v151, v24);
    swift_bridgeObjectRelease();
    goto LABEL_86;
  }
  a3 = *(_QWORD *)(*(_QWORD *)(v88 + 56) + 8 * v89);
  v159 = MEMORY[0x1E0DEE9D8];
  v7 = a3 + 64;
  v91 = 1 << *(_BYTE *)(a3 + 32);
  if (v91 < 64)
    v92 = ~(-1 << v91);
  else
    v92 = -1;
  v93 = v92 & *(_QWORD *)(a3 + 64);
  a5 = (unint64_t)(v91 + 63) >> 6;
  result = swift_bridgeObjectRetain_n();
  a6 = 0;
  while (2)
  {
    if (v93)
    {
      v93 &= v93 - 1;
LABEL_48:
      v94 = swift_bridgeObjectRetain();
      result = sub_1CA2847C4(v94);
      continue;
    }
    break;
  }
  if (__OFADD__(a6++, 1))
  {
    __break(1u);
    goto LABEL_90;
  }
  if (a6 >= a5)
  {
    v65 = v150;
LABEL_71:
    swift_release();
    swift_bridgeObjectRelease();
    a3 = sub_1CA2877D4(v159);
    swift_bridgeObjectRelease();
    v78 = v139;
    goto LABEL_72;
  }
  v96 = *(_QWORD *)(v7 + 8 * a6);
  v65 = v150;
  if (v96)
  {
LABEL_64:
    v93 = (v96 - 1) & v96;
    goto LABEL_48;
  }
  v97 = a6 + 1;
  if (a6 + 1 >= a5)
    goto LABEL_71;
  v96 = *(_QWORD *)(v7 + 8 * v97);
  if (v96)
    goto LABEL_63;
  v97 = a6 + 2;
  if (a6 + 2 >= a5)
    goto LABEL_71;
  v96 = *(_QWORD *)(v7 + 8 * v97);
  if (v96)
    goto LABEL_63;
  v97 = a6 + 3;
  if (a6 + 3 >= a5)
    goto LABEL_71;
  v96 = *(_QWORD *)(v7 + 8 * v97);
  if (v96)
    goto LABEL_63;
  v97 = a6 + 4;
  if (a6 + 4 >= a5)
    goto LABEL_71;
  v96 = *(_QWORD *)(v7 + 8 * v97);
  if (v96)
    goto LABEL_63;
  v97 = a6 + 5;
  if (a6 + 5 >= a5)
    goto LABEL_71;
  v96 = *(_QWORD *)(v7 + 8 * v97);
  if (v96)
  {
LABEL_63:
    a6 = v97;
    goto LABEL_64;
  }
  while (1)
  {
    a6 = v97 + 1;
    if (__OFADD__(v97, 1))
      break;
    if (a6 >= a5)
      goto LABEL_71;
    v96 = *(_QWORD *)(v7 + 8 * a6);
    ++v97;
    if (v96)
      goto LABEL_64;
  }
  __break(1u);
  return result;
}

unint64_t sub_1CA284000(uint64_t a1)
{
  id *v1;
  id v3;
  uint64_t v4;
  void *v5;
  id v6;
  id v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v11;

  if (!*(_QWORD *)(a1 + 16))
    return MEMORY[0x1E0DEE9D8];
  v3 = objc_msgSend(*v1, sel_librarySpecificFetchOptions);
  sub_1CA24EEC0(0, (unint64_t *)&qword_1ED872320);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8727B0);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1CA8D51C0;
  *(_QWORD *)(v4 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v4 + 64) = sub_1CA2891BC();
  *(_QWORD *)(v4 + 32) = 1684632949;
  *(_QWORD *)(v4 + 40) = 0xE400000000000000;
  *(_QWORD *)(v4 + 96) = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED873160);
  *(_QWORD *)(v4 + 104) = sub_1CA289200();
  *(_QWORD *)(v4 + 72) = a1;
  swift_bridgeObjectRetain();
  v5 = (void *)sub_1CA85BA80();
  objc_msgSend(v3, sel_setPredicate_, v5);

  sub_1CA24EEC0(0, (unint64_t *)&qword_1ED874AD8);
  v6 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_fetchMomentsWithOptions_, v3);
  v7 = objc_msgSend(v6, sel_fetchedObjects);

  if (!v7)
    goto LABEL_7;
  sub_1CA24EEC0(0, &qword_1ED872370);
  v8 = sub_1CA85B7B0();

  v9 = sub_1CA4EB010(v8);
  swift_bridgeObjectRelease();
  if (!v9)
    goto LABEL_7;
  if (v9 >> 62)
  {
    swift_bridgeObjectRetain();
    v11 = sub_1CA85C08C();
    swift_bridgeObjectRelease();
    if (v11 > 0)
      goto LABEL_8;
    goto LABEL_6;
  }
  if (*(uint64_t *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10) <= 0)
  {
LABEL_6:
    swift_bridgeObjectRelease();
LABEL_7:
    v9 = MEMORY[0x1E0DEE9D8];
  }
LABEL_8:

  return v9;
}

_QWORD *sub_1CA284214(uint64_t a1)
{
  id *v1;
  id *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  id v13;
  void *v14;
  void *v15;
  id v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v20;

  v2 = v1;
  swift_bridgeObjectRetain();
  v4 = swift_bridgeObjectRetain();
  sub_1CA289538(v4, a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v5 = swift_retain();
  v6 = sub_1CA2826B8(v5);
  v20 = v6;
  swift_bridgeObjectRetain();
  v7 = swift_retain();
  v8 = sub_1CA2D9248(v7, a1);
  swift_release();
  if (qword_1ED872DE0 != -1)
    swift_once();
  v9 = sub_1CA85B348();
  __swift_project_value_buffer(v9, (uint64_t)qword_1ED87D0C8);
  swift_retain_n();
  swift_retain();
  v10 = sub_1CA85B330();
  v11 = sub_1CA85BAC8();
  if (!os_log_type_enabled(v10, v11))
  {

    swift_release_n();
    swift_release_n();
    if (*(_QWORD *)(v8 + 16))
      goto LABEL_5;
LABEL_9:
    swift_release();
    v18 = sub_1CA243494(v6);
    goto LABEL_10;
  }
  v12 = swift_slowAlloc();
  *(_DWORD *)v12 = 134218240;
  swift_release();
  sub_1CA85BCF0();
  swift_release();
  *(_WORD *)(v12 + 12) = 2048;
  swift_release();
  sub_1CA85BCF0();
  swift_release();
  _os_log_impl(&dword_1CA237000, v10, v11, "There are %ld cached assets and %ld remaining assets used to fetch moments", (uint8_t *)v12, 0x16u);
  MEMORY[0x1CAA4F27C](v12, -1, -1);

  if (!*(_QWORD *)(v8 + 16))
    goto LABEL_9;
LABEL_5:
  v13 = objc_msgSend(*v2, sel_librarySpecificFetchOptions);
  v14 = (void *)objc_opt_self();
  sub_1CA243494(v8);
  swift_release();
  v15 = (void *)sub_1CA85B798();
  swift_release();
  v16 = objc_msgSend(v14, sel_fetchMomentUUIDByAssetUUIDForAssetUUIDs_options_, v15, v13);

  if (v16)
  {
    v17 = sub_1CA85B414();

    sub_1CA35B20C(v17);
    v6 = v20;
  }
  v18 = sub_1CA243494(v6);

LABEL_10:
  swift_bridgeObjectRelease();
  return v18;
}

void sub_1CA284518(uint64_t a1, uint64_t a2)
{
  id *v2;
  id *v3;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  void *v12;
  void *v13;
  void *v14;
  id v15;
  id v16;
  unint64_t v17;
  _QWORD *v18;

  v3 = v2;
  v6 = objc_msgSend(*v3, sel_librarySpecificFetchOptions);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED872760);
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1CA8D4E40;
  *(_QWORD *)(v7 + 32) = sub_1CA85B534();
  *(_QWORD *)(v7 + 40) = v8;
  v9 = MEMORY[0x1E0DEA968];
  v10 = (void *)sub_1CA85B798();
  swift_bridgeObjectRelease();
  objc_msgSend(v6, sel_setFetchPropertySets_, v10);

  if (a2)
  {
    sub_1CA24EEC0(0, (unint64_t *)&qword_1ED872320);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8727B0);
    v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_1CA8D51C0;
    *(_QWORD *)(v11 + 56) = v9;
    *(_QWORD *)(v11 + 64) = sub_1CA2891BC();
    *(_QWORD *)(v11 + 32) = 1684632949;
    *(_QWORD *)(v11 + 40) = 0xE400000000000000;
    *(_QWORD *)(v11 + 96) = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED873160);
    *(_QWORD *)(v11 + 104) = sub_1CA289200();
    *(_QWORD *)(v11 + 72) = a2;
    swift_bridgeObjectRetain();
    v12 = (void *)sub_1CA85BA80();
    objc_msgSend(v6, sel_setPredicate_, v12);

  }
  sub_1CA284000(a1);
  v13 = (void *)objc_opt_self();
  sub_1CA24EEC0(0, (unint64_t *)&qword_1ED874AD8);
  v14 = (void *)sub_1CA85B798();
  swift_bridgeObjectRelease();
  v15 = objc_msgSend(v13, sel_fetchAssetsInAssetCollections_options_, v14, v6);

  if (v15)
  {
    v16 = objc_msgSend(v15, sel_fetchedObjects);

    if (v16)
    {
      sub_1CA24EEC0(0, (unint64_t *)&qword_1ED8723B0);
      v17 = sub_1CA85B7B0();

      v18 = sub_1CA282B94(v17);
      swift_bridgeObjectRelease();
      sub_1CA2877D4((uint64_t)v18);

      swift_bridgeObjectRelease();
    }
    else
    {

    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1CA2847C4(uint64_t result)
{
  uint64_t v1;
  int64_t v2;
  uint64_t v3;
  _QWORD *v4;
  int64_t v5;
  int64_t v6;
  uint64_t v7;
  _QWORD *isUniquelyReferenced_nonNull_native;
  int64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  int64_t v23;
  _QWORD *v24;
  unint64_t v25;
  unint64_t v26;
  int64_t v27;
  unint64_t v28;
  int64_t v29;
  int64_t v30;
  uint64_t *v31;
  int64_t v32;
  unint64_t v33;
  int64_t v34;
  int64_t v35;
  int64_t v36;
  uint64_t v37;
  _QWORD v38[2];
  uint64_t v39;
  int64_t v40;
  unint64_t v41;

  v3 = *(_QWORD *)(result + 16);
  v4 = *(_QWORD **)v1;
  v5 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v6 = v5 + v3;
  if (__OFADD__(v5, v3))
  {
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v7 = result;
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if (!(_DWORD)isUniquelyReferenced_nonNull_native || (v9 = v4[3] >> 1, v9 < v6))
  {
    if (v5 <= v6)
      v10 = v5 + v3;
    else
      v10 = v5;
    v4 = sub_1CA26BCE4(isUniquelyReferenced_nonNull_native, v10, 1, v4);
    v9 = v4[3] >> 1;
  }
  v11 = v4[2];
  v12 = v9 - v11;
  result = sub_1CA249484((uint64_t)v38, &v4[2 * v11 + 4], v9 - v11, v7);
  if (result < v3)
    goto LABEL_15;
  if (result)
  {
    v14 = v4[2];
    v15 = __OFADD__(v14, result);
    v16 = v14 + result;
    if (v15)
    {
      __break(1u);
      goto LABEL_48;
    }
    v4[2] = v16;
  }
  if (result != v12)
  {
LABEL_13:
    result = sub_1CA24E6B8();
    *(_QWORD *)v1 = v4;
    return result;
  }
LABEL_16:
  v2 = v4[2];
  v3 = v38[0];
  v37 = v38[1];
  v13 = v39;
  v6 = v40;
  if (v41)
  {
    v17 = (v41 - 1) & v41;
    v18 = __clz(__rbit64(v41)) | (v40 << 6);
    v36 = (unint64_t)(v39 + 64) >> 6;
    goto LABEL_18;
  }
LABEL_48:
  v32 = v6 + 1;
  if (__OFADD__(v6, 1))
    goto LABEL_66;
  v36 = (unint64_t)(v13 + 64) >> 6;
  if (v32 >= v36)
    goto LABEL_13;
  v33 = *(_QWORD *)(v37 + 8 * v32);
  v34 = v6 + 1;
  if (!v33)
  {
    v34 = v6 + 2;
    if (v6 + 2 >= v36)
      goto LABEL_13;
    v33 = *(_QWORD *)(v37 + 8 * v34);
    if (!v33)
    {
      v34 = v6 + 3;
      if (v6 + 3 >= v36)
        goto LABEL_13;
      v33 = *(_QWORD *)(v37 + 8 * v34);
      if (!v33)
      {
        v34 = v6 + 4;
        if (v6 + 4 >= v36)
          goto LABEL_13;
        v33 = *(_QWORD *)(v37 + 8 * v34);
        if (!v33)
        {
          v34 = v6 + 5;
          if (v6 + 5 >= v36)
            goto LABEL_13;
          v33 = *(_QWORD *)(v37 + 8 * v34);
          if (!v33)
          {
            v35 = v6 + 6;
            do
            {
              if (v36 == v35)
                goto LABEL_13;
              v33 = *(_QWORD *)(v37 + 8 * v35++);
            }
            while (!v33);
            v34 = v35 - 1;
          }
        }
      }
    }
  }
  v17 = (v33 - 1) & v33;
  v18 = __clz(__rbit64(v33)) + (v34 << 6);
  v6 = v34;
LABEL_18:
  v19 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 16 * v18);
  v21 = *v19;
  v20 = v19[1];
  result = swift_bridgeObjectRetain();
  while (1)
  {
    v22 = v4[3];
    v23 = v22 >> 1;
    if ((uint64_t)(v22 >> 1) < v2 + 1)
      break;
    if (v2 < v23)
      goto LABEL_23;
LABEL_20:
    v4[2] = v2;
  }
  result = (uint64_t)sub_1CA26BCE4((_QWORD *)(v22 > 1), v2 + 1, 1, v4);
  v4 = (_QWORD *)result;
  v23 = *(_QWORD *)(result + 24) >> 1;
  if (v2 >= v23)
    goto LABEL_20;
  while (1)
  {
LABEL_23:
    v24 = &v4[2 * v2 + 4];
    *v24 = v21;
    v24[1] = v20;
    ++v2;
    if (v17)
    {
      v25 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      v26 = v25 | (v6 << 6);
      goto LABEL_41;
    }
    v27 = v6 + 1;
    if (__OFADD__(v6, 1))
      break;
    if (v27 >= v36)
      goto LABEL_45;
    v28 = *(_QWORD *)(v37 + 8 * v27);
    v29 = v6 + 1;
    if (!v28)
    {
      v29 = v6 + 2;
      if (v6 + 2 >= v36)
        goto LABEL_45;
      v28 = *(_QWORD *)(v37 + 8 * v29);
      if (!v28)
      {
        v29 = v6 + 3;
        if (v6 + 3 >= v36)
          goto LABEL_45;
        v28 = *(_QWORD *)(v37 + 8 * v29);
        if (!v28)
        {
          v29 = v6 + 4;
          if (v6 + 4 >= v36)
            goto LABEL_45;
          v28 = *(_QWORD *)(v37 + 8 * v29);
          if (!v28)
          {
            v29 = v6 + 5;
            if (v6 + 5 >= v36)
              goto LABEL_45;
            v28 = *(_QWORD *)(v37 + 8 * v29);
            if (!v28)
            {
              v30 = v6 + 6;
              while (v36 != v30)
              {
                v28 = *(_QWORD *)(v37 + 8 * v30++);
                if (v28)
                {
                  v29 = v30 - 1;
                  goto LABEL_40;
                }
              }
LABEL_45:
              v4[2] = v2;
              goto LABEL_13;
            }
          }
        }
      }
    }
LABEL_40:
    v17 = (v28 - 1) & v28;
    v26 = __clz(__rbit64(v28)) + (v29 << 6);
    v6 = v29;
LABEL_41:
    v31 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 16 * v26);
    v21 = *v31;
    v20 = v31[1];
    if (v2 >= v23)
    {
      result = swift_bridgeObjectRetain();
      goto LABEL_20;
    }
    result = swift_bridgeObjectRetain();
  }
  __break(1u);
LABEL_66:
  __break(1u);
  return result;
}

uint64_t sub_1CA284B8C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = sub_1CA26BCE4(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = (unint64_t)&v3[2 * v8 + 4];
  if (a1 + 32 < v9 + 16 * v2 && v9 < a1 + 32 + 16 * v2)
    goto LABEL_24;
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v1 = v3;
    return result;
  }
  v11 = v3[2];
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_1CA85C0D4();
  __break(1u);
  return result;
}

uint64_t sub_1CA284CDC(uint64_t a1)
{
  return sub_1CA284E74(a1, (uint64_t (*)(void))sub_1CA26D1B0, (uint64_t (*)(_QWORD))MEMORY[0x1E0D77160]);
}

uint64_t sub_1CA284CF0(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  int64_t v15;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    v8 = *(_QWORD *)(a1 + 16);
    if (v8)
      goto LABEL_5;
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
  if (v4 <= v5)
    v15 = v4 + v2;
  else
    v15 = v4;
  v3 = sub_1CA26D1C4(isUniquelyReferenced_nonNull_native, v15, 1, v3);
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
    goto LABEL_18;
LABEL_5:
  v9 = v3[2];
  if ((v3[3] >> 1) - v9 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v10 = &v3[v9 + 4];
  if (a1 + 32 < (unint64_t)&v10[v8] && (unint64_t)v10 < a1 + 32 + 8 * v8)
    goto LABEL_24;
  memcpy(v10, (const void *)(a1 + 32), 8 * v8);
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v12 = v3[2];
  v13 = __OFADD__(v12, v8);
  v14 = v12 + v8;
  if (!v13)
  {
    v3[2] = v14;
LABEL_19:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_1CA85C0D4();
  __break(1u);
  return result;
}

uint64_t sub_1CA284E38(uint64_t a1)
{
  return sub_1CA286CA4(a1, (uint64_t (*)(void))sub_1CA26D2EC, (uint64_t (*)(_QWORD))MEMORY[0x1E0D76EB0]);
}

uint64_t sub_1CA284E4C(uint64_t a1)
{
  return sub_1CA286CA4(a1, (uint64_t (*)(void))sub_1CA26D33C, (uint64_t (*)(_QWORD))MEMORY[0x1E0D76BC0]);
}

uint64_t sub_1CA284E60(uint64_t a1)
{
  return sub_1CA284E74(a1, (uint64_t (*)(void))sub_1CA26D350, (uint64_t (*)(_QWORD))MEMORY[0x1E0D76FC0]);
}

uint64_t sub_1CA284E74(uint64_t a1, uint64_t (*a2)(void), uint64_t (*a3)(_QWORD))
{
  uint64_t *v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t result;

  v4 = *(_QWORD *)(a1 + 16);
  v5 = *v3;
  v6 = *(_QWORD *)(*v3 + 16);
  if (__OFADD__(v6, v4))
  {
    __break(1u);
    goto LABEL_18;
  }
  if (swift_isUniquelyReferenced_nonNull_native()
    && (int64_t)(v6 + v4) <= *(_QWORD *)(v5 + 24) >> 1)
  {
    v10 = *(_QWORD *)(a1 + 16);
    if (v10)
      goto LABEL_5;
LABEL_15:
    if (!v4)
      goto LABEL_16;
    goto LABEL_18;
  }
  v5 = a2();
  v10 = *(_QWORD *)(a1 + 16);
  if (!v10)
    goto LABEL_15;
LABEL_5:
  v11 = *(_QWORD *)(v5 + 16);
  v12 = (*(_QWORD *)(v5 + 24) >> 1) - v11;
  v13 = a3(0);
  if (v12 < (uint64_t)v10)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v14 = *(_QWORD *)(v13 - 8);
  v15 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  v16 = *(_QWORD *)(v14 + 72);
  v17 = v5 + v15 + v16 * v11;
  v18 = a1 + v15;
  v19 = v16 * v10;
  v20 = v17 + v19;
  v21 = v18 + v19;
  if (v18 < v20 && v17 < v21)
    goto LABEL_21;
  swift_arrayInitWithCopy();
  if (v10 < v4)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v23 = *(_QWORD *)(v5 + 16);
  v24 = __OFADD__(v23, v10);
  v25 = v23 + v10;
  if (!v24)
  {
    *(_QWORD *)(v5 + 16) = v25;
LABEL_16:
    result = swift_bridgeObjectRelease();
    *v3 = v5;
    return result;
  }
LABEL_20:
  __break(1u);
LABEL_21:
  result = sub_1CA85C0D4();
  __break(1u);
  return result;
}

uint64_t sub_1CA284FF0(uint64_t a1)
{
  return sub_1CA286CA4(a1, (uint64_t (*)(void))sub_1CA26C010, (uint64_t (*)(_QWORD))type metadata accessor for TriggerResult);
}

uint64_t sub_1CA285004(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = sub_1CA26D600(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = (unint64_t)&v3[4 * v8 + 4];
  if (a1 + 32 < v9 + 32 * v2 && v9 < a1 + 32 + 32 * v2)
    goto LABEL_24;
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v1 = v3;
    return result;
  }
  v11 = v3[2];
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_1CA85C0D4();
  __break(1u);
  return result;
}

uint64_t sub_1CA285154(uint64_t a1)
{
  return sub_1CA286CA4(a1, (uint64_t (*)(void))sub_1CA26D5EC, (uint64_t (*)(_QWORD))MEMORY[0x1E0CAE690]);
}

uint64_t sub_1CA285168(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = sub_1CA26D954(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = (unint64_t)&v3[37 * v8 + 4];
  if (a1 + 32 < v9 + 296 * v2 && v9 < a1 + 32 + 296 * v2)
    goto LABEL_24;
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v1 = v3;
    return result;
  }
  v11 = v3[2];
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_1CA85C0D4();
  __break(1u);
  return result;
}

uint64_t sub_1CA2852C0(uint64_t a1)
{
  unint64_t *v1;
  unint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  int64_t v17;
  int64_t v18;
  int64_t v19;
  int isUniquelyReferenced_nonNull_native;
  int64_t v21;
  int64_t v22;
  uint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t result;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unsigned int (*v34)(_QWORD, _QWORD, _QWORD);
  int64_t v35;
  int64_t v36;
  unint64_t v37;
  int64_t v38;
  int64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  int64_t v45;
  BOOL v46;
  uint64_t v47;
  uint64_t v48;
  int64_t v49;
  unint64_t v50;
  uint64_t v51;
  int64_t v52;
  int64_t v53;
  int64_t v54;
  int64_t v55;
  unint64_t v56;
  int64_t v57;
  int64_t v58;
  uint64_t v59;
  void (*v60)(char *, uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v61;
  unint64_t v62;
  unsigned int (*v63)(_QWORD, _QWORD, _QWORD);
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  int64_t v73;
  unint64_t v74;

  v69 = type metadata accessor for Song();
  v4 = *(_QWORD *)(v69 - 8);
  MEMORY[0x1E0C80A78](v69);
  v68 = (uint64_t)&v59 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED871D00);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v59 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v67 = (uint64_t)&v59 - v10;
  v13 = MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v59 - v14;
  v16 = *(_QWORD *)(a1 + 16);
  v17 = *v1;
  v18 = *(_QWORD *)(*v1 + 16);
  v19 = v18 + v16;
  if (__OFADD__(v18, v16))
  {
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *v1 = v17;
  if (!isUniquelyReferenced_nonNull_native || (v21 = *(_QWORD *)(v17 + 24) >> 1, v21 < v19))
  {
    if (v18 <= v19)
      v22 = v18 + v16;
    else
      v22 = v18;
    v17 = sub_1CA26CD10(isUniquelyReferenced_nonNull_native, v22, 1, v17);
    *v1 = v17;
    v21 = *(_QWORD *)(v17 + 24) >> 1;
  }
  v23 = *(_QWORD *)(v17 + 16);
  v2 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v18 = *(_QWORD *)(v4 + 72);
  v24 = v21 - v23;
  sub_1CA24AB7C(&v70, v17 + v2 + v18 * v23, v21 - v23, a1);
  if (v25 < v16)
    goto LABEL_15;
  if (v25)
  {
    v27 = *(_QWORD *)(v17 + 16);
    v28 = __OFADD__(v27, v25);
    v29 = v27 + v25;
    if (v28)
    {
      __break(1u);
      goto LABEL_20;
    }
    *(_QWORD *)(v17 + 16) = v29;
  }
  if (v25 != v24)
    return sub_1CA24E6B8();
LABEL_16:
  v17 = *(_QWORD *)(v17 + 16);
  v16 = v70;
  v26 = v72;
  v24 = v73;
  v65 = v72;
  v66 = v71;
  if (v74)
  {
    v64 = (v74 - 1) & v74;
    v31 = __clz(__rbit64(v74)) | (v73 << 6);
LABEL_18:
    sub_1CA24EE38(*(_QWORD *)(v16 + 48) + v31 * v18, (uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for Song);
    v32 = v16;
    v33 = v69;
    v60 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v4 + 56);
    ((void (*)(char *, _QWORD, uint64_t, uint64_t))v60)(v15, 0, 1, v69);
    v34 = (unsigned int (*)(_QWORD, _QWORD, _QWORD))v24;
    goto LABEL_42;
  }
LABEL_20:
  v35 = v24 + 1;
  if (__OFADD__(v24, 1))
  {
    __break(1u);
LABEL_40:
    v16 = v12;
    goto LABEL_41;
  }
  v36 = (unint64_t)(v26 + 64) >> 6;
  v63 = (unsigned int (*)(_QWORD, _QWORD, _QWORD))v24;
  if (v35 < v36)
  {
    v37 = *(_QWORD *)(v66 + 8 * v35);
    if (v37)
    {
LABEL_23:
      v64 = (v37 - 1) & v37;
      v31 = __clz(__rbit64(v37)) + (v35 << 6);
      v24 = v35;
      goto LABEL_18;
    }
    v38 = v24 + 2;
    v63 = (unsigned int (*)(_QWORD, _QWORD, _QWORD))(v24 + 1);
    if (v24 + 2 < v36)
    {
      v12 = v16;
      v37 = *(_QWORD *)(v66 + 8 * v38);
      if (v37)
      {
LABEL_26:
        v35 = v38;
        goto LABEL_23;
      }
      v63 = (unsigned int (*)(_QWORD, _QWORD, _QWORD))(v24 + 2);
      if (v24 + 3 < v36)
      {
        v37 = *(_QWORD *)(v66 + 8 * (v24 + 3));
        if (v37)
        {
          v35 = v24 + 3;
          goto LABEL_23;
        }
        v38 = v24 + 4;
        v63 = (unsigned int (*)(_QWORD, _QWORD, _QWORD))(v24 + 3);
        if (v24 + 4 < v36)
        {
          v37 = *(_QWORD *)(v66 + 8 * v38);
          if (v37)
            goto LABEL_26;
          v35 = v24 + 5;
          v63 = (unsigned int (*)(_QWORD, _QWORD, _QWORD))(v24 + 4);
          if (v24 + 5 < v36)
          {
            v37 = *(_QWORD *)(v66 + 8 * v35);
            if (v37)
              goto LABEL_23;
            v63 = (unsigned int (*)(_QWORD, _QWORD, _QWORD))(v36 - 1);
            v39 = v24 + 6;
            while (v36 != v39)
            {
              v37 = *(_QWORD *)(v66 + 8 * v39++);
              if (v37)
              {
                v35 = v39 - 1;
                goto LABEL_23;
              }
            }
            goto LABEL_40;
          }
        }
      }
    }
  }
LABEL_41:
  v32 = v16;
  v33 = v69;
  v60 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v4 + 56);
  v60(v15, 1, 1, v69, v13);
  v64 = 0;
  v34 = v63;
LABEL_42:
  v61 = v32;
  v70 = v32;
  v71 = v66;
  v72 = v65;
  v73 = (int64_t)v34;
  v74 = v64;
  v40 = v67;
  sub_1CA28902C((uint64_t)v15, v67);
  v63 = *(unsigned int (**)(_QWORD, _QWORD, _QWORD))(v4 + 48);
  if (v63(v40, 1, v33) == 1)
  {
LABEL_43:
    sub_1CA267BE8((uint64_t)v15, &qword_1ED871D00);
    sub_1CA24E6B8();
    return sub_1CA267BE8(v40, &qword_1ED871D00);
  }
  v41 = v68;
  while (1)
  {
    sub_1CA267BE8(v40, &qword_1ED871D00);
    v43 = *v1;
    v44 = *(_QWORD *)(*v1 + 24);
    v45 = v44 >> 1;
    if ((uint64_t)(v44 >> 1) < v17 + 1)
    {
      v43 = sub_1CA26CD10(v44 > 1, v17 + 1, 1, *v1);
      *v1 = v43;
      v45 = *(_QWORD *)(v43 + 24) >> 1;
    }
    sub_1CA28902C((uint64_t)v15, (uint64_t)v8);
    if (v63(v8, 1, v69) == 1)
    {
      v40 = v67;
LABEL_83:
      sub_1CA267BE8((uint64_t)v8, &qword_1ED871D00);
      v42 = v69;
      goto LABEL_46;
    }
    v62 = v43 + v2;
    sub_1CA268478((uint64_t)v8, v41);
    v46 = v17 < v45;
    if (v17 > v45)
      v45 = v17;
    v47 = v65;
    if (v46)
      break;
LABEL_45:
    v65 = v47;
    sub_1CA2669CC(v41, (uint64_t (*)(_QWORD))type metadata accessor for Song);
    v17 = v45;
    v42 = v69;
    v40 = v67;
LABEL_46:
    *(_QWORD *)(*v1 + 16) = v17;
    sub_1CA28902C((uint64_t)v15, v40);
    if (v63(v40, 1, v42) == 1)
      goto LABEL_43;
  }
  while (1)
  {
    sub_1CA267BE8((uint64_t)v15, &qword_1ED871D00);
    result = sub_1CA268478(v41, v62 + v17 * v18);
    v48 = v70;
    v49 = v73;
    v65 = v72;
    v66 = v71;
    if (v74)
    {
      v64 = (v74 - 1) & v74;
      v50 = __clz(__rbit64(v74)) | (v73 << 6);
      goto LABEL_57;
    }
    v53 = v73 + 1;
    if (__OFADD__(v73, 1))
      break;
    v54 = (unint64_t)(v72 + 64) >> 6;
    v55 = v73;
    if (v53 < v54)
    {
      v56 = *(_QWORD *)(v66 + 8 * v53);
      if (v56)
        goto LABEL_61;
      v55 = v73 + 1;
      if (v73 + 2 < v54)
      {
        v56 = *(_QWORD *)(v66 + 8 * (v73 + 2));
        if (v56)
        {
          v53 = v73 + 2;
          goto LABEL_61;
        }
        v55 = v73 + 2;
        if (v73 + 3 < v54)
        {
          v56 = *(_QWORD *)(v66 + 8 * (v73 + 3));
          if (v56)
          {
            v53 = v73 + 3;
            goto LABEL_61;
          }
          v55 = v73 + 3;
          if (v73 + 4 < v54)
          {
            v56 = *(_QWORD *)(v66 + 8 * (v73 + 4));
            if (v56)
            {
              v53 = v73 + 4;
LABEL_61:
              v64 = (v56 - 1) & v56;
              v50 = __clz(__rbit64(v56)) + (v53 << 6);
              v49 = v53;
LABEL_57:
              sub_1CA24EE38(*(_QWORD *)(v70 + 48) + v50 * v18, (uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for Song);
              v51 = v69;
              ((void (*)(char *, _QWORD, uint64_t, uint64_t))v60)(v15, 0, 1, v69);
              v52 = v49;
              goto LABEL_79;
            }
            v53 = v73 + 5;
            v55 = v73 + 4;
            if (v73 + 5 < v54)
            {
              v56 = *(_QWORD *)(v66 + 8 * v53);
              if (v56)
                goto LABEL_61;
              v57 = v73 + 6;
              while (v54 != v57)
              {
                v56 = *(_QWORD *)(v66 + 8 * v57++);
                if (v56)
                {
                  v53 = v57 - 1;
                  goto LABEL_61;
                }
              }
              v55 = v54 - 1;
            }
          }
        }
      }
    }
    v51 = v69;
    v58 = v55;
    ((void (*)(char *, uint64_t, uint64_t, uint64_t))v60)(v15, 1, 1, v69);
    v52 = v58;
    v64 = 0;
LABEL_79:
    ++v17;
    v61 = v48;
    v70 = v48;
    v71 = v66;
    v47 = v65;
    v72 = v65;
    v73 = v52;
    v74 = v64;
    sub_1CA28902C((uint64_t)v15, (uint64_t)v8);
    if (v63(v8, 1, v51) == 1)
    {
      v40 = v67;
      v41 = v68;
      goto LABEL_83;
    }
    v41 = v68;
    sub_1CA268478((uint64_t)v8, v68);
    if (v17 == v45)
      goto LABEL_45;
  }
  __break(1u);
  return result;
}

uint64_t sub_1CA285A08(uint64_t a1)
{
  unint64_t *v1;
  unint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  int64_t v17;
  int64_t v18;
  int64_t v19;
  int isUniquelyReferenced_nonNull_native;
  int64_t v21;
  int64_t v22;
  uint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t result;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unsigned int (*v34)(_QWORD, _QWORD, _QWORD);
  int64_t v35;
  int64_t v36;
  unint64_t v37;
  int64_t v38;
  int64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  int64_t v45;
  BOOL v46;
  uint64_t v47;
  uint64_t v48;
  int64_t v49;
  unint64_t v50;
  uint64_t v51;
  int64_t v52;
  int64_t v53;
  int64_t v54;
  int64_t v55;
  unint64_t v56;
  int64_t v57;
  int64_t v58;
  uint64_t v59;
  void (*v60)(char *, uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v61;
  unint64_t v62;
  unsigned int (*v63)(_QWORD, _QWORD, _QWORD);
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  int64_t v73;
  unint64_t v74;

  v69 = type metadata accessor for Song();
  v4 = *(_QWORD *)(v69 - 8);
  MEMORY[0x1E0C80A78](v69);
  v68 = (uint64_t)&v59 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED871D00);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v59 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v67 = (uint64_t)&v59 - v10;
  v13 = MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v59 - v14;
  v16 = *(_QWORD *)(a1 + 16);
  v17 = *v1;
  v18 = *(_QWORD *)(*v1 + 16);
  v19 = v18 + v16;
  if (__OFADD__(v18, v16))
  {
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *v1 = v17;
  if (!isUniquelyReferenced_nonNull_native || (v21 = *(_QWORD *)(v17 + 24) >> 1, v21 < v19))
  {
    if (v18 <= v19)
      v22 = v18 + v16;
    else
      v22 = v18;
    v17 = sub_1CA26CD10(isUniquelyReferenced_nonNull_native, v22, 1, v17);
    *v1 = v17;
    v21 = *(_QWORD *)(v17 + 24) >> 1;
  }
  v23 = *(_QWORD *)(v17 + 16);
  v2 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v18 = *(_QWORD *)(v4 + 72);
  v24 = v21 - v23;
  sub_1CA249980(&v70, v17 + v2 + v18 * v23, v21 - v23, a1);
  if (v25 < v16)
    goto LABEL_15;
  if (v25)
  {
    v27 = *(_QWORD *)(v17 + 16);
    v28 = __OFADD__(v27, v25);
    v29 = v27 + v25;
    if (v28)
    {
      __break(1u);
      goto LABEL_20;
    }
    *(_QWORD *)(v17 + 16) = v29;
  }
  if (v25 != v24)
    return sub_1CA24E6B8();
LABEL_16:
  v17 = *(_QWORD *)(v17 + 16);
  v16 = v70;
  v26 = v72;
  v24 = v73;
  v65 = v72;
  v66 = v71;
  if (v74)
  {
    v64 = (v74 - 1) & v74;
    v31 = __clz(__rbit64(v74)) | (v73 << 6);
LABEL_18:
    sub_1CA24EE38(*(_QWORD *)(v16 + 48) + v31 * v18, (uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for Song);
    v32 = v16;
    v33 = v69;
    v60 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v4 + 56);
    ((void (*)(char *, _QWORD, uint64_t, uint64_t))v60)(v15, 0, 1, v69);
    v34 = (unsigned int (*)(_QWORD, _QWORD, _QWORD))v24;
    goto LABEL_42;
  }
LABEL_20:
  v35 = v24 + 1;
  if (__OFADD__(v24, 1))
  {
    __break(1u);
LABEL_40:
    v16 = v12;
    goto LABEL_41;
  }
  v36 = (unint64_t)(v26 + 64) >> 6;
  v63 = (unsigned int (*)(_QWORD, _QWORD, _QWORD))v24;
  if (v35 < v36)
  {
    v37 = *(_QWORD *)(v66 + 8 * v35);
    if (v37)
    {
LABEL_23:
      v64 = (v37 - 1) & v37;
      v31 = __clz(__rbit64(v37)) + (v35 << 6);
      v24 = v35;
      goto LABEL_18;
    }
    v38 = v24 + 2;
    v63 = (unsigned int (*)(_QWORD, _QWORD, _QWORD))(v24 + 1);
    if (v24 + 2 < v36)
    {
      v12 = v16;
      v37 = *(_QWORD *)(v66 + 8 * v38);
      if (v37)
      {
LABEL_26:
        v35 = v38;
        goto LABEL_23;
      }
      v63 = (unsigned int (*)(_QWORD, _QWORD, _QWORD))(v24 + 2);
      if (v24 + 3 < v36)
      {
        v37 = *(_QWORD *)(v66 + 8 * (v24 + 3));
        if (v37)
        {
          v35 = v24 + 3;
          goto LABEL_23;
        }
        v38 = v24 + 4;
        v63 = (unsigned int (*)(_QWORD, _QWORD, _QWORD))(v24 + 3);
        if (v24 + 4 < v36)
        {
          v37 = *(_QWORD *)(v66 + 8 * v38);
          if (v37)
            goto LABEL_26;
          v35 = v24 + 5;
          v63 = (unsigned int (*)(_QWORD, _QWORD, _QWORD))(v24 + 4);
          if (v24 + 5 < v36)
          {
            v37 = *(_QWORD *)(v66 + 8 * v35);
            if (v37)
              goto LABEL_23;
            v63 = (unsigned int (*)(_QWORD, _QWORD, _QWORD))(v36 - 1);
            v39 = v24 + 6;
            while (v36 != v39)
            {
              v37 = *(_QWORD *)(v66 + 8 * v39++);
              if (v37)
              {
                v35 = v39 - 1;
                goto LABEL_23;
              }
            }
            goto LABEL_40;
          }
        }
      }
    }
  }
LABEL_41:
  v32 = v16;
  v33 = v69;
  v60 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v4 + 56);
  v60(v15, 1, 1, v69, v13);
  v64 = 0;
  v34 = v63;
LABEL_42:
  v61 = v32;
  v70 = v32;
  v71 = v66;
  v72 = v65;
  v73 = (int64_t)v34;
  v74 = v64;
  v40 = v67;
  sub_1CA28902C((uint64_t)v15, v67);
  v63 = *(unsigned int (**)(_QWORD, _QWORD, _QWORD))(v4 + 48);
  if (v63(v40, 1, v33) == 1)
  {
LABEL_43:
    sub_1CA267BE8((uint64_t)v15, &qword_1ED871D00);
    sub_1CA24E6B8();
    return sub_1CA267BE8(v40, &qword_1ED871D00);
  }
  v41 = v68;
  while (1)
  {
    sub_1CA267BE8(v40, &qword_1ED871D00);
    v43 = *v1;
    v44 = *(_QWORD *)(*v1 + 24);
    v45 = v44 >> 1;
    if ((uint64_t)(v44 >> 1) < v17 + 1)
    {
      v43 = sub_1CA26CD10(v44 > 1, v17 + 1, 1, *v1);
      *v1 = v43;
      v45 = *(_QWORD *)(v43 + 24) >> 1;
    }
    sub_1CA28902C((uint64_t)v15, (uint64_t)v8);
    if (v63(v8, 1, v69) == 1)
    {
      v40 = v67;
LABEL_83:
      sub_1CA267BE8((uint64_t)v8, &qword_1ED871D00);
      v42 = v69;
      goto LABEL_46;
    }
    v62 = v43 + v2;
    sub_1CA268478((uint64_t)v8, v41);
    v46 = v17 < v45;
    if (v17 > v45)
      v45 = v17;
    v47 = v65;
    if (v46)
      break;
LABEL_45:
    v65 = v47;
    sub_1CA2669CC(v41, (uint64_t (*)(_QWORD))type metadata accessor for Song);
    v17 = v45;
    v42 = v69;
    v40 = v67;
LABEL_46:
    *(_QWORD *)(*v1 + 16) = v17;
    sub_1CA28902C((uint64_t)v15, v40);
    if (v63(v40, 1, v42) == 1)
      goto LABEL_43;
  }
  while (1)
  {
    sub_1CA267BE8((uint64_t)v15, &qword_1ED871D00);
    result = sub_1CA268478(v41, v62 + v17 * v18);
    v48 = v70;
    v49 = v73;
    v65 = v72;
    v66 = v71;
    if (v74)
    {
      v64 = (v74 - 1) & v74;
      v50 = __clz(__rbit64(v74)) | (v73 << 6);
      goto LABEL_57;
    }
    v53 = v73 + 1;
    if (__OFADD__(v73, 1))
      break;
    v54 = (unint64_t)(v72 + 64) >> 6;
    v55 = v73;
    if (v53 < v54)
    {
      v56 = *(_QWORD *)(v66 + 8 * v53);
      if (v56)
        goto LABEL_61;
      v55 = v73 + 1;
      if (v73 + 2 < v54)
      {
        v56 = *(_QWORD *)(v66 + 8 * (v73 + 2));
        if (v56)
        {
          v53 = v73 + 2;
          goto LABEL_61;
        }
        v55 = v73 + 2;
        if (v73 + 3 < v54)
        {
          v56 = *(_QWORD *)(v66 + 8 * (v73 + 3));
          if (v56)
          {
            v53 = v73 + 3;
            goto LABEL_61;
          }
          v55 = v73 + 3;
          if (v73 + 4 < v54)
          {
            v56 = *(_QWORD *)(v66 + 8 * (v73 + 4));
            if (v56)
            {
              v53 = v73 + 4;
LABEL_61:
              v64 = (v56 - 1) & v56;
              v50 = __clz(__rbit64(v56)) + (v53 << 6);
              v49 = v53;
LABEL_57:
              sub_1CA24EE38(*(_QWORD *)(v70 + 48) + v50 * v18, (uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for Song);
              v51 = v69;
              ((void (*)(char *, _QWORD, uint64_t, uint64_t))v60)(v15, 0, 1, v69);
              v52 = v49;
              goto LABEL_79;
            }
            v53 = v73 + 5;
            v55 = v73 + 4;
            if (v73 + 5 < v54)
            {
              v56 = *(_QWORD *)(v66 + 8 * v53);
              if (v56)
                goto LABEL_61;
              v57 = v73 + 6;
              while (v54 != v57)
              {
                v56 = *(_QWORD *)(v66 + 8 * v57++);
                if (v56)
                {
                  v53 = v57 - 1;
                  goto LABEL_61;
                }
              }
              v55 = v54 - 1;
            }
          }
        }
      }
    }
    v51 = v69;
    v58 = v55;
    ((void (*)(char *, uint64_t, uint64_t, uint64_t))v60)(v15, 1, 1, v69);
    v52 = v58;
    v64 = 0;
LABEL_79:
    ++v17;
    v61 = v48;
    v70 = v48;
    v71 = v66;
    v47 = v65;
    v72 = v65;
    v73 = v52;
    v74 = v64;
    sub_1CA28902C((uint64_t)v15, (uint64_t)v8);
    if (v63(v8, 1, v51) == 1)
    {
      v40 = v67;
      v41 = v68;
      goto LABEL_83;
    }
    v41 = v68;
    sub_1CA268478((uint64_t)v8, v68);
    if (v17 == v45)
      goto LABEL_45;
  }
  __break(1u);
  return result;
}

uint64_t sub_1CA286150(unint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t *v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  unint64_t v19;
  BOOL v20;
  uint64_t v21;
  int64_t v22;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v24;
  int64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t result;
  int64_t v35;
  uint64_t v36;
  int i;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(uint64_t *);
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  int64_t v52;
  void (*v53)(char *, uint64_t, uint64_t, uint64_t);
  unint64_t v54;
  unint64_t v55;
  uint64_t (*v56)(uint64_t, uint64_t, uint64_t);
  uint64_t v57;
  unint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  void (*v63[4])(uint64_t *);

  v61 = a2;
  v9 = type metadata accessor for Song();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v59 = (char *)&v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED871D00);
  v13 = MEMORY[0x1E0C80A78](v12);
  v14 = MEMORY[0x1E0C80A78](v13);
  v57 = (uint64_t)&v51 - v15;
  MEMORY[0x1E0C80A78](v14);
  v18 = (char *)&v51 - v17;
  v58 = a4;
  v19 = a4 >> 1;
  v20 = __OFSUB__(a4 >> 1, a3);
  v21 = (a4 >> 1) - a3;
  if (v20)
  {
    __break(1u);
    goto LABEL_26;
  }
  v62 = a1;
  a1 = *v4;
  v22 = *(_QWORD *)(*v4 + 16);
  v5 = v22 + v21;
  if (__OFADD__(v22, v21))
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  v60 = v16;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *v4 = a1;
  if (!isUniquelyReferenced_nonNull_native || (v24 = *(_QWORD *)(a1 + 24) >> 1, v24 < v5))
  {
    if (v22 <= v5)
      v25 = v22 + v21;
    else
      v25 = v22;
    a1 = sub_1CA26CD10(isUniquelyReferenced_nonNull_native, v25, 1, a1);
    *v4 = a1;
    v24 = *(_QWORD *)(a1 + 24) >> 1;
  }
  v26 = *(_QWORD *)(a1 + 16);
  v27 = v24 - v26;
  if (v19 != a3)
  {
    if (v27 < v21)
    {
      __break(1u);
    }
    else
    {
      if (v21 < 0
        || ((v28 = *(_QWORD *)(v10 + 72),
             v29 = a1
                 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))
                 + v28 * v26,
             v30 = v61 + v28 * a3,
             v30 < v29 + v28 * v21)
          ? (v31 = v29 >= v30 + v28 * v21)
          : (v31 = 1),
            !v31))
      {
LABEL_51:
        result = sub_1CA85C0D4();
        __break(1u);
        return result;
      }
      swift_arrayInitWithCopy();
      if (!v21)
      {
LABEL_22:
        v5 = v19;
LABEL_23:
        if (v21 != v27)
          return swift_unknownObjectRelease();
        goto LABEL_28;
      }
      v32 = *(_QWORD *)(a1 + 16);
      v20 = __OFADD__(v32, v21);
      v33 = v32 + v21;
      if (!v20)
      {
        *(_QWORD *)(a1 + 16) = v33;
        goto LABEL_22;
      }
    }
    __break(1u);
LABEL_50:
    __break(1u);
    goto LABEL_51;
  }
  if (v21 <= 0)
  {
    v21 = 0;
    v5 = a3;
    goto LABEL_23;
  }
LABEL_27:
  __break(1u);
LABEL_28:
  v35 = *(_QWORD *)(a1 + 16);
  v53 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56);
  v53(v18, 1, 1, v9);
  v36 = v57;
  sub_1CA28902C((uint64_t)v18, v57);
  v56 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
  for (i = v56(v36, 1, v9); i != 1; i = v56(v36, 1, v9))
  {
    sub_1CA267BE8(v36, &qword_1ED871D00);
    v39 = *v4;
    v40 = *(_QWORD *)(*v4 + 24);
    if ((uint64_t)(v40 >> 1) < v35 + 1)
    {
      v41 = v5;
      v50 = sub_1CA26CD10(v40 > 1, v35 + 1, 1, v39);
      *v4 = v50;
      v55 = v50;
      v52 = *(_QWORD *)(v50 + 24) >> 1;
    }
    else
    {
      v52 = v40 >> 1;
      v55 = v39;
      v41 = v5;
    }
    v42 = *(unsigned __int8 *)(v10 + 80);
    v43 = v60;
    sub_1CA28902C((uint64_t)v18, v60);
    if (v56(v43, 1, v9) == 1)
    {
      v44 = v60;
LABEL_36:
      sub_1CA267BE8(v44, &qword_1ED871D00);
      v38 = v35;
    }
    else
    {
      v54 = v55 + ((v42 + 32) & ~v42);
      v45 = v52;
      if (v35 > v52)
        v45 = v35;
      v55 = v45;
      v46 = (uint64_t)v59;
      v44 = v60;
      while (1)
      {
        sub_1CA268478(v44, v46);
        if (v55 == v35)
          break;
        sub_1CA267BE8((uint64_t)v18, &qword_1ED871D00);
        sub_1CA268478(v46, v54 + *(_QWORD *)(v10 + 72) * v35);
        if (v41 == v19)
        {
          v47 = 1;
          v41 = v19;
        }
        else
        {
          v48 = sub_1CA287708(v63, v41, v62, v61, a3, v58);
          sub_1CA24EE38(v49, (uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for Song);
          ((void (*)(void (**)(uint64_t *), _QWORD))v48)(v63, 0);
          v20 = __OFADD__(v41++, 1);
          if (v20)
            goto LABEL_50;
          v47 = 0;
          v46 = (uint64_t)v59;
        }
        v53(v18, v47, 1, v9);
        v44 = v60;
        sub_1CA28902C((uint64_t)v18, v60);
        ++v35;
        if (v56(v44, 1, v9) == 1)
          goto LABEL_36;
      }
      sub_1CA2669CC(v46, (uint64_t (*)(_QWORD))type metadata accessor for Song);
      v38 = v55;
      v35 = v55;
    }
    v5 = v41;
    *(_QWORD *)(*v4 + 16) = v38;
    v36 = v57;
    sub_1CA28902C((uint64_t)v18, v57);
  }
  sub_1CA267BE8((uint64_t)v18, &qword_1ED871D00);
  swift_unknownObjectRelease();
  return sub_1CA267BE8(v36, &qword_1ED871D00);
}

uint64_t sub_1CA286698(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  uint64_t result;

  v8 = a4 >> 1;
  v9 = (a4 >> 1) - a3;
  if (__OFSUB__(a4 >> 1, a3))
    goto LABEL_11;
  v5 = a3;
  v6 = a2;
  v7 = *v4;
  if (*v4 >> 62)
    goto LABEL_12;
  v10 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
  v11 = v10 + v9;
  if (!__OFADD__(v10, v9))
    goto LABEL_4;
LABEL_14:
  __break(1u);
LABEL_15:
  v13 = 1;
LABEL_16:
  if (v7 >> 62)
  {
    swift_bridgeObjectRetain();
    v16 = sub_1CA85C08C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v16 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (v16 <= v11)
    v16 = v11;
  swift_bridgeObjectRetain();
  v7 = MEMORY[0x1CAA4DD70](v13, v16, 1, v7);
  swift_bridgeObjectRelease();
  *v4 = v7;
  v14 = v7 & 0xFFFFFFFFFFFFFF8;
  if (v8 == v5)
  {
    while (v9 > 0)
    {
      __break(1u);
LABEL_11:
      __break(1u);
LABEL_12:
      swift_bridgeObjectRetain();
      v15 = sub_1CA85C08C();
      swift_bridgeObjectRelease();
      v11 = v15 + v9;
      if (__OFADD__(v15, v9))
        goto LABEL_14;
LABEL_4:
      v7 = *v4;
      isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
      *v4 = v7;
      v13 = 0;
      if (!isUniquelyReferenced_nonNull_bridgeObject
        || (v7 & 0x8000000000000000) != 0
        || (v7 & 0x4000000000000000) != 0)
      {
        goto LABEL_16;
      }
      v14 = v7 & 0xFFFFFFFFFFFFFF8;
      if (v11 > *(_QWORD *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        goto LABEL_15;
      if (v8 != v5)
        goto LABEL_21;
    }
    goto LABEL_28;
  }
LABEL_21:
  v17 = *(_QWORD *)(v14 + 16);
  if ((*(_QWORD *)(v14 + 24) >> 1) - v17 < v9)
  {
    __break(1u);
  }
  else
  {
    if (v9 < 0)
      goto LABEL_32;
    v18 = v14 + 8 * v17 + 32;
    v19 = v6 + 8 * v5;
    if (v19 < v18 + 8 * v9 && v18 < v19 + 8 * v9)
      goto LABEL_32;
    sub_1CA24EEC0(0, (unint64_t *)&qword_1ED872B98);
    swift_arrayInitWithCopy();
    if (!v9)
    {
LABEL_28:
      swift_unknownObjectRelease();
      return sub_1CA85B7C8();
    }
    v20 = *(_QWORD *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v21 = __OFADD__(v20, v9);
    v22 = v20 + v9;
    if (!v21)
    {
      *(_QWORD *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10) = v22;
      goto LABEL_28;
    }
  }
  __break(1u);
LABEL_32:
  result = sub_1CA85C0D4();
  __break(1u);
  return result;
}

uint64_t sub_1CA286924(unint64_t a1)
{
  return sub_1CA286AC8(a1, (uint64_t (*)(uint64_t, _QWORD, unint64_t))sub_1CA24DCB8);
}

uint64_t sub_1CA286930(uint64_t a1)
{
  return sub_1CA286CA4(a1, (uint64_t (*)(void))sub_1CA26CD10, (uint64_t (*)(_QWORD))type metadata accessor for Song);
}

uint64_t sub_1CA286944(uint64_t a1)
{
  return sub_1CA286CA4(a1, (uint64_t (*)(void))sub_1CA26DF38, type metadata accessor for PersonalTraitInfo);
}

uint64_t sub_1CA286958(unint64_t a1)
{
  return sub_1CA286AC8(a1, (uint64_t (*)(uint64_t, _QWORD, unint64_t))sub_1CA24DCDC);
}

uint64_t sub_1CA286964(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = sub_1CA26E2A4(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = (unint64_t)&v3[6 * v8 + 4];
  if (a1 + 32 < v9 + 48 * v2 && v9 < a1 + 32 + 48 * v2)
    goto LABEL_24;
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v1 = v3;
    return result;
  }
  v11 = v3[2];
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_1CA85C0D4();
  __break(1u);
  return result;
}

uint64_t sub_1CA286ABC(unint64_t a1)
{
  return sub_1CA286AC8(a1, (uint64_t (*)(uint64_t, _QWORD, unint64_t))sub_1CA24DEF0);
}

uint64_t sub_1CA286AC8(unint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, unint64_t))
{
  unint64_t *v2;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;

  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v5 = sub_1CA85C08C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v6 = *v2;
  if (*v2 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_1CA85C08C();
    swift_bridgeObjectRelease();
    v8 = v7 + v5;
    if (!__OFADD__(v7, v5))
      goto LABEL_5;
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
  v8 = v7 + v5;
  if (__OFADD__(v7, v5))
    goto LABEL_23;
LABEL_5:
  v6 = *v2;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v2 = v6;
  v7 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v6 & 0x8000000000000000) == 0 && (v6 & 0x4000000000000000) == 0)
  {
    v10 = v6 & 0xFFFFFFFFFFFFFF8;
    if (v8 <= *(_QWORD *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_15;
    v7 = 1;
  }
  if (v6 >> 62)
    goto LABEL_25;
  v11 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v11 <= v8)
      v11 = v8;
    swift_bridgeObjectRetain();
    v6 = MEMORY[0x1CAA4DD70](v7, v11, 1, v6);
    swift_bridgeObjectRelease();
    *v2 = v6;
    v10 = v6 & 0xFFFFFFFFFFFFFF8;
LABEL_15:
    result = a2(v10 + 8 * *(_QWORD *)(v10 + 16) + 32, (*(_QWORD *)(v10 + 24) >> 1) - *(_QWORD *)(v10 + 16), a1);
    if (v13 >= v5)
      break;
LABEL_24:
    __break(1u);
LABEL_25:
    swift_bridgeObjectRetain();
    v11 = sub_1CA85C08C();
    swift_bridgeObjectRelease();
  }
  if (v13 < 1)
    goto LABEL_19;
  v14 = *(_QWORD *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v15 = __OFADD__(v14, v13);
  v16 = v14 + v13;
  if (!v15)
  {
    *(_QWORD *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10) = v16;
LABEL_19:
    swift_bridgeObjectRelease();
    return sub_1CA85B7C8();
  }
  __break(1u);
  return result;
}

uint64_t sub_1CA286C84(unint64_t a1)
{
  return sub_1CA286AC8(a1, (uint64_t (*)(uint64_t, _QWORD, unint64_t))sub_1CA24E104);
}

uint64_t sub_1CA286C90(uint64_t a1)
{
  return sub_1CA286CA4(a1, (uint64_t (*)(void))sub_1CA26E750, (uint64_t (*)(_QWORD))MEMORY[0x1E0D77038]);
}

uint64_t sub_1CA286CA4(uint64_t a1, uint64_t (*a2)(void), uint64_t (*a3)(_QWORD))
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t result;

  v4 = *(_QWORD *)(a1 + 16);
  v5 = *v3;
  v6 = *(_QWORD *)(*v3 + 16);
  if (__OFADD__(v6, v4))
  {
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (swift_isUniquelyReferenced_nonNull_native() && v6 + v4 <= *(_QWORD *)(v5 + 24) >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_15;
  }
  v5 = a2();
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_15:
    if (!v4)
      goto LABEL_16;
    goto LABEL_18;
  }
LABEL_5:
  v10 = *(_QWORD *)(v5 + 16);
  v11 = (*(_QWORD *)(v5 + 24) >> 1) - v10;
  v12 = a3(0);
  if (v11 < v4)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v13 = *(_QWORD *)(v12 - 8);
  v14 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v15 = *(_QWORD *)(v13 + 72);
  v16 = v5 + v14 + v15 * v10;
  v17 = a1 + v14;
  v18 = v15 * v4;
  v19 = v16 + v18;
  v20 = v17 + v18;
  if (v17 < v19 && v16 < v20)
    goto LABEL_21;
  swift_arrayInitWithCopy();
  if (!v4)
  {
LABEL_16:
    result = swift_bridgeObjectRelease();
    *v3 = v5;
    return result;
  }
  v22 = *(_QWORD *)(v5 + 16);
  v23 = __OFADD__(v22, v4);
  v24 = v22 + v4;
  if (!v23)
  {
    *(_QWORD *)(v5 + 16) = v24;
    goto LABEL_16;
  }
LABEL_20:
  __break(1u);
LABEL_21:
  result = sub_1CA85C0D4();
  __break(1u);
  return result;
}

uint64_t sub_1CA286E1C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = sub_1CA26E764(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = (unint64_t)&v3[4 * v8 + 4];
  if (a1 + 32 < v9 + 32 * v2 && v9 < a1 + 32 + 32 * v2)
    goto LABEL_24;
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v1 = v3;
    return result;
  }
  v11 = v3[2];
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_1CA85C0D4();
  __break(1u);
  return result;
}

uint64_t sub_1CA286F6C(unint64_t a1)
{
  return sub_1CA286AC8(a1, (uint64_t (*)(uint64_t, _QWORD, unint64_t))sub_1CA24E318);
}

uint64_t sub_1CA286F78(uint64_t (**a1)(uint64_t, uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*a1)(a2, a3, a4);
}

uint64_t sub_1CA286FAC(void (*a1)(__n128), uint64_t a2)
{
  return sub_1CA286FC8(a1, a2, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (unint64_t *)&qword_1ED8744B8, MEMORY[0x1E0CB08F0]);
}

uint64_t sub_1CA286FC8(void (*a1)(__n128), uint64_t a2, uint64_t (*a3)(uint64_t), unint64_t *a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v16;

  v9 = a3(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v16 - v12;
  a1(v11);
  sub_1CA23CC98(a4, a3, a5);
  v14 = sub_1CA85C260();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
  return v14;
}

_BYTE **sub_1CA28708C(_BYTE **result, uint64_t a2, uint64_t a3, char a4)
{
  _BYTE *v4;

  v4 = *result;
  *v4 = a4;
  *result = v4 + 1;
  return result;
}

uint64_t sub_1CA28709C(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_1CA2870BC(uint64_t *a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(void))
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;

  v6 = a4();
  sub_1CA28712C(v6, v7, a3);
  v8 = *a1 + 8;
  sub_1CA85BCF0();
  result = swift_bridgeObjectRelease();
  *a1 = v8;
  return result;
}

uint64_t sub_1CA28712C(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12[3];
  uint64_t ObjectType;

  v6 = sub_1CA2871FC(v12, 0, 0, 1, a1, a2);
  v7 = v12[0];
  if (v6)
  {
    v8 = v6;
    ObjectType = swift_getObjectType();
    v12[0] = v8;
    v9 = *a3;
    if (*a3)
    {
      sub_1CA266A08((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = MEMORY[0x1E0DEC2B8];
    v12[0] = a1;
    v12[1] = a2;
    v10 = *a3;
    if (*a3)
    {
      sub_1CA266A08((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  return v7;
}

uint64_t sub_1CA2871FC(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  uint64_t v8;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  _QWORD __src[2];

  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (_QWORD *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_1CA85BCFC();
            result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    result = sub_1CA2873B4(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0)
    goto LABEL_13;
  if ((a5 & 0x1000000000000000) != 0)
  {
    v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  v8 = sub_1CA85BF30();
  if (!v8)
  {
    sub_1CA85C038();
    __break(1u);
LABEL_17:
    result = sub_1CA85C0D4();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0)
    return 0;
  else
    return swift_unknownObjectRetain();
}

uint64_t sub_1CA2873B4(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v2 = sub_1CA287448(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_1CA2875BC(0, *(_QWORD *)(v2 + 16) + 1, 1, (char *)v2);
  v4 = *(_QWORD *)(v2 + 16);
  v3 = *(_QWORD *)(v2 + 24);
  if (v4 >= v3 >> 1)
    v2 = sub_1CA2875BC(v3 > 1, v4 + 1, 1, (char *)v2);
  *(_QWORD *)(v2 + 16) = v4 + 1;
  *(_BYTE *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_1CA287448(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  char v6;
  uint64_t result;

  if ((a2 & 0x1000000000000000) != 0)
    goto LABEL_10;
  if ((a2 & 0x2000000000000000) != 0)
    v2 = HIBYTE(a2) & 0xF;
  else
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (v2)
  {
    while (1)
    {
      v3 = sub_1CA3DEABC(v2, 0);
      if (v2 < 0)
        break;
      v4 = v3;
      v5 = sub_1CA85BED0();
      if ((v6 & 1) != 0)
        goto LABEL_14;
      if (v5 == v2)
        return (uint64_t)v4;
      sub_1CA85C038();
      __break(1u);
LABEL_10:
      v2 = sub_1CA85B648();
      if (!v2)
        return MEMORY[0x1E0DEE9D8];
    }
    sub_1CA85C0D4();
    __break(1u);
LABEL_14:
    result = sub_1CA85C038();
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E0DEE9D8];
  }
  return result;
}

uint64_t sub_1CA2875BC(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8710C8);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v8])
      memmove(v12, v13, v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1CA85C0D4();
  __break(1u);
  return result;
}

void (*sub_1CA287708(void (**a1)(uint64_t *a1), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6))(uint64_t *a1)
{
  uint64_t v11;
  void (*result)(uint64_t *);

  v11 = *(_QWORD *)(type metadata accessor for Song() - 8);
  result = (void (*)(uint64_t *))malloc(*(_QWORD *)(v11 + 64));
  *a1 = result;
  if (a2 < a5 || (uint64_t)(a6 >> 1) <= a2)
  {
    __break(1u);
  }
  else
  {
    sub_1CA24EE38(a4 + *(_QWORD *)(v11 + 72) * a2, (uint64_t)result, (uint64_t (*)(_QWORD))type metadata accessor for Song);
    return sub_1CA2877A4;
  }
  return result;
}

void sub_1CA2877A4(uint64_t *a1)
{
  void *v1;

  v1 = (void *)*a1;
  sub_1CA2669CC(*a1, (uint64_t (*)(_QWORD))type metadata accessor for Song);
  free(v1);
}

uint64_t sub_1CA2877D4(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *(_QWORD *)(a1 + 16);
  result = sub_1CA85B9A8();
  v8 = result;
  if (v2)
  {
    v4 = (uint64_t *)(a1 + 40);
    do
    {
      v5 = *(v4 - 1);
      v6 = *v4;
      swift_bridgeObjectRetain();
      sub_1CA23F448(&v7, v5, v6);
      swift_bridgeObjectRelease();
      v4 += 2;
      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

char *initializeBufferWithCopyOfBuffer for PersonalEventAssetsFetcher(char *a1, char **a2, uint64_t a3)
{
  int v3;
  char *v4;
  char *v5;
  char *v6;
  char *v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t, uint64_t);
  char *v14;
  char *v15;
  char *v16;

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v5 = &v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain();
  }
  else
  {
    v5 = a1;
    v7 = a2[1];
    v6 = a2[2];
    *((_QWORD *)a1 + 1) = v7;
    *((_QWORD *)a1 + 2) = v6;
    v8 = a2[3];
    *((_QWORD *)a1 + 3) = v8;
    v9 = *(int *)(a3 + 32);
    v10 = &a1[v9];
    v11 = (uint64_t)a2 + v9;
    v12 = sub_1CA85A7FC();
    v13 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
    v14 = v4;
    v15 = v7;
    swift_bridgeObjectRetain();
    v16 = v8;
    v13(v10, v11, v12);
  }
  return v5;
}

uint64_t destroy for PersonalEventAssetsFetcher(id *a1, uint64_t a2)
{
  char *v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  v4 = (char *)a1 + *(int *)(a2 + 32);
  v5 = sub_1CA85A7FC();
  return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_QWORD *initializeWithCopy for PersonalEventAssetsFetcher(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  void *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(char *, uint64_t, uint64_t);
  id v12;
  id v13;
  id v14;

  v4 = *(void **)a2;
  v5 = *(void **)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v5;
  v6 = *(void **)(a2 + 24);
  a1[2] = *(_QWORD *)(a2 + 16);
  a1[3] = v6;
  v7 = *(int *)(a3 + 32);
  v8 = (char *)a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1CA85A7FC();
  v11 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  v12 = v4;
  v13 = v5;
  swift_bridgeObjectRetain();
  v14 = v6;
  v11(v8, v9, v10);
  return a1;
}

uint64_t assignWithCopy for PersonalEventAssetsFetcher(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  void *v7;
  id v8;
  void *v9;
  void *v10;
  id v11;
  void *v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v6 = *(void **)a2;
  v7 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v8 = v6;

  v9 = *(void **)(a2 + 8);
  v10 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v9;
  v11 = v9;

  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v12 = *(void **)(a2 + 24);
  v13 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v12;
  v14 = v12;

  v15 = *(int *)(a3 + 32);
  v16 = a1 + v15;
  v17 = a2 + v15;
  v18 = sub_1CA85A7FC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  return a1;
}

uint64_t initializeWithTake for PersonalEventAssetsFetcher(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  v5 = *(int *)(a3 + 32);
  v6 = a1 + v5;
  v7 = a2 + v5;
  v8 = sub_1CA85A7FC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for PersonalEventAssetsFetcher(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  void *v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;

  v6 = *(void **)a1;
  *(_QWORD *)a1 = *a2;

  v7 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = a2[1];

  *(_QWORD *)(a1 + 16) = a2[2];
  swift_bridgeObjectRelease();
  v8 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = a2[3];

  v9 = *(int *)(a3 + 32);
  v10 = a1 + v9;
  v11 = (char *)a2 + v9;
  v12 = sub_1CA85A7FC();
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 40))(v10, v11, v12);
  return a1;
}

uint64_t getEnumTagSinglePayload for PersonalEventAssetsFetcher()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CA287BDC(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1CA85A7FC();
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 32)], a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for PersonalEventAssetsFetcher()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_1CA287C64(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = sub_1CA85A7FC();
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 32)], a2, a2, v7);
  }
  return result;
}

uint64_t sub_1CA287CD8()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1CA85A7FC();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1CA287D60(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  char v24;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v30;
  uint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t result;
  _QWORD v35[2];
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;

  v2 = type metadata accessor for Song();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  v6 = (_QWORD *)((char *)v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = MEMORY[0x1E0C80A78](v4);
  v9 = (_QWORD *)((char *)v35 - v8);
  v10 = MEMORY[0x1E0C80A78](v7);
  v39 = (_QWORD *)((char *)v35 - v11);
  MEMORY[0x1E0C80A78](v10);
  v13 = (_QWORD *)((char *)v35 - v12);
  v14 = *(_QWORD *)(a1 + 16);
  sub_1CA23CC98(&qword_1ED871C58, v15, (uint64_t)&protocol conformance descriptor for Song);
  v16 = sub_1CA85B9A8();
  v37 = v14;
  if (!v14)
    return v16;
  v35[1] = v2;
  v17 = 0;
  v36 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  v18 = *(_QWORD *)(v3 + 72);
  while (1)
  {
    v38 = v17;
    sub_1CA24EE38(v36 + v18 * v17, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for Song);
    sub_1CA85C368();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1CA85B4B0();
    swift_bridgeObjectRelease();
    v19 = sub_1CA85C3B0();
    v20 = -1 << *(_BYTE *)(v16 + 32);
    v21 = v19 & ~v20;
    if (((*(_QWORD *)(v16 + 56 + ((v21 >> 3) & 0xFFFFFFFFFFFFF8)) >> v21) & 1) != 0)
    {
      v22 = ~v20;
      while (1)
      {
        sub_1CA24EE38(*(_QWORD *)(v16 + 48) + v21 * v18, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for Song);
        if (*v6 == *v13 && v6[1] == v13[1])
          break;
        v24 = sub_1CA85C284();
        sub_1CA2669CC((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for Song);
        if ((v24 & 1) != 0)
          goto LABEL_4;
        v21 = (v21 + 1) & v22;
        if (((*(_QWORD *)(v16 + 56 + ((v21 >> 3) & 0xFFFFFFFFFFFFF8)) >> v21) & 1) == 0)
          goto LABEL_13;
      }
      sub_1CA2669CC((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for Song);
      goto LABEL_4;
    }
LABEL_13:
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_1CA24EE38((uint64_t)v13, (uint64_t)v39, (uint64_t (*)(_QWORD))type metadata accessor for Song);
    v40 = v16;
    if (*(_QWORD *)(v16 + 24) <= *(_QWORD *)(v16 + 16))
      break;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_1CA362A74();
      v16 = v40;
    }
LABEL_27:
    *(_QWORD *)(v16 + ((v21 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) |= 1 << v21;
    sub_1CA268478((uint64_t)v39, *(_QWORD *)(v16 + 48) + v21 * v18);
    v31 = *(_QWORD *)(v16 + 16);
    v32 = __OFADD__(v31, 1);
    v33 = v31 + 1;
    if (v32)
    {
      __break(1u);
      goto LABEL_31;
    }
    *(_QWORD *)(v16 + 16) = v33;
LABEL_4:
    swift_bridgeObjectRelease();
    v17 = v38 + 1;
    sub_1CA2669CC((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for Song);
    if (v17 == v37)
      return v16;
  }
  if (isUniquelyReferenced_nonNull_native)
    sub_1CA360580();
  else
    sub_1CA363A74();
  v16 = v40;
  sub_1CA85C368();
  swift_bridgeObjectRetain();
  sub_1CA85B4B0();
  swift_bridgeObjectRelease();
  v26 = sub_1CA85C3B0();
  v27 = -1 << *(_BYTE *)(v16 + 32);
  v21 = v26 & ~v27;
  if (((*(_QWORD *)(v16 + 56 + ((v21 >> 3) & 0xFFFFFFFFFFFFF8)) >> v21) & 1) == 0)
    goto LABEL_27;
  v28 = ~v27;
  while (1)
  {
    sub_1CA24EE38(*(_QWORD *)(v16 + 48) + v21 * v18, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for Song);
    if (*v9 == *v39 && v9[1] == v39[1])
      break;
    v30 = sub_1CA85C284();
    sub_1CA2669CC((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for Song);
    if ((v30 & 1) != 0)
      goto LABEL_32;
    v21 = (v21 + 1) & v28;
    if (((*(_QWORD *)(v16 + 56 + ((v21 >> 3) & 0xFFFFFFFFFFFFF8)) >> v21) & 1) == 0)
      goto LABEL_27;
  }
LABEL_31:
  sub_1CA2669CC((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for Song);
LABEL_32:
  result = sub_1CA85C2D8();
  __break(1u);
  return result;
}

uint64_t sub_1CA288154(unint64_t a1)
{
  return sub_1CA28818C(a1, (uint64_t (*)(uint64_t))type metadata accessor for SongPlaybackInfoEntry, &qword_1EF94B820, (void (*)(id *, uint64_t))sub_1CA23F5F4);
}

uint64_t sub_1CA288170(unint64_t a1)
{
  return sub_1CA28818C(a1, (uint64_t (*)(uint64_t))type metadata accessor for SongEntry, &qword_1ED8720F0, (void (*)(id *, uint64_t))sub_1CA23F8A8);
}

uint64_t sub_1CA28818C(unint64_t a1, uint64_t (*a2)(uint64_t), unint64_t *a3, void (*a4)(id *, uint64_t))
{
  unint64_t v8;
  uint64_t result;
  uint64_t v10;
  uint64_t i;
  uint64_t v12;
  void **v13;
  void *v14;
  id v15;
  uint64_t v16;

  v8 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_1CA85C08C();
    swift_bridgeObjectRelease();
  }
  a2(0);
  sub_1CA23CC98(a3, a2, MEMORY[0x1E0DEFCF8]);
  result = sub_1CA85B9A8();
  v16 = result;
  if (v8)
  {
    swift_bridgeObjectRetain();
    v10 = sub_1CA85C08C();
    result = swift_bridgeObjectRelease();
    if (!v10)
      return v16;
  }
  else
  {
    v10 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v10)
      return v16;
  }
  if (v10 >= 1)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (i = 0; i != v10; ++i)
      {
        v12 = MEMORY[0x1CAA4DD64](i, a1);
        a4(&v15, v12);

      }
    }
    else
    {
      v13 = (void **)(a1 + 32);
      do
      {
        v14 = *v13++;
        a4(&v15, (uint64_t)v14);

        --v10;
      }
      while (v10);
    }
    return v16;
  }
  __break(1u);
  return result;
}

uint64_t sub_1CA288300(uint64_t a1)
{
  return sub_1CA288618(a1, (void (*)(void))sub_1CA289178, (uint64_t)&type metadata for TimeIndex.Subdomain, (void (*)(char *, _QWORD))sub_1CA24016C);
}

uint64_t sub_1CA28831C(uint64_t a1)
{
  return sub_1CA2886D4(a1, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB11B8], &qword_1ED871208, MEMORY[0x1E0CB11D0], (void (*)(char *, char *))sub_1CA240540);
}

uint64_t sub_1CA288340(unint64_t a1)
{
  unint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t i;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_1CA85C08C();
    swift_bridgeObjectRelease();
  }
  type metadata accessor for ImportantEntitiesGraphInferenceMoment();
  sub_1CA23CC98((unint64_t *)&unk_1EF94AAE8, (uint64_t (*)(uint64_t))type metadata accessor for ImportantEntitiesGraphInferenceMoment, (uint64_t)&unk_1CA8DE740);
  result = sub_1CA85B9A8();
  v4 = result;
  v9 = result;
  if (v2)
  {
    swift_bridgeObjectRetain();
    v5 = sub_1CA85C08C();
    result = swift_bridgeObjectRelease();
    if (!v5)
      return v4;
  }
  else
  {
    v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v5)
      return v4;
  }
  if (v5 >= 1)
  {
    for (i = 0; i != v5; ++i)
    {
      if ((a1 & 0xC000000000000001) != 0)
      {
        v7 = MEMORY[0x1CAA4DD64](i, a1);
      }
      else
      {
        v7 = *(_QWORD *)(a1 + 8 * i + 32);
        swift_retain();
      }
      sub_1CA24079C(&v8, v7);
      swift_release();
    }
    return v9;
  }
  __break(1u);
  return result;
}

uint64_t sub_1CA28849C(unint64_t a1)
{
  return sub_1CA2888B4(a1, &qword_1EF94AC58, (uint64_t)off_1E83F9B90, &qword_1EF94B810, (void (*)(id *, uint64_t))sub_1CA240DD4);
}

uint64_t sub_1CA2884C0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t);
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v2 = type metadata accessor for SongSource();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (uint64_t *)((char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v14 - v7;
  v9 = *(_QWORD *)(a1 + 16);
  sub_1CA23CC98(&qword_1ED874538, v10, (uint64_t)&protocol conformance descriptor for SongSource);
  result = sub_1CA85B9A8();
  v15 = result;
  if (v9)
  {
    v12 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    v13 = *(_QWORD *)(v3 + 72);
    do
    {
      sub_1CA24EE38(v12, (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for SongSource);
      sub_1CA241090((uint64_t)v8, v5);
      sub_1CA2669CC((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for SongSource);
      v12 += v13;
      --v9;
    }
    while (v9);
    return v15;
  }
  return result;
}

uint64_t sub_1CA2885E0(uint64_t a1)
{
  return sub_1CA288618(a1, (void (*)(void))sub_1CA2890B8, (uint64_t)&type metadata for Node.Label, (void (*)(char *, _QWORD))sub_1CA241280);
}

uint64_t sub_1CA2885FC(uint64_t a1)
{
  return sub_1CA288618(a1, (void (*)(void))sub_1CA289074, (uint64_t)&type metadata for Edge.Label, (void (*)(char *, _QWORD))sub_1CA24197C);
}

uint64_t sub_1CA288618(uint64_t a1, void (*a2)(void), uint64_t a3, void (*a4)(char *, _QWORD))
{
  uint64_t v6;
  uint64_t result;
  unsigned __int8 *v8;
  unsigned int v9;
  char v10;
  uint64_t v11;

  v6 = *(_QWORD *)(a1 + 16);
  a2();
  result = sub_1CA85B9A8();
  v11 = result;
  if (v6)
  {
    v8 = (unsigned __int8 *)(a1 + 32);
    do
    {
      v9 = *v8++;
      a4(&v10, v9);
      --v6;
    }
    while (v6);
    return v11;
  }
  return result;
}

uint64_t sub_1CA28868C(unint64_t a1)
{
  return sub_1CA2888B4(a1, (unint64_t *)&qword_1EF94AB50, (uint64_t)off_1E83FA3C0, (unint64_t *)&qword_1EF94AB58, (void (*)(id *, uint64_t))sub_1CA2421DC);
}

uint64_t sub_1CA2886B0(uint64_t a1)
{
  return sub_1CA2886D4(a1, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3D140], &qword_1EF94AC08, MEMORY[0x1E0D3D150], (void (*)(char *, char *))sub_1CA242498);
}

uint64_t sub_1CA2886D4(uint64_t a1, uint64_t (*a2)(uint64_t), unint64_t *a3, uint64_t a4, void (*a5)(char *, char *))
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;

  v10 = a2(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v22 - v15;
  v17 = *(_QWORD *)(a1 + 16);
  sub_1CA23CC98(a3, a2, a4);
  result = sub_1CA85B9A8();
  v23 = result;
  if (v17)
  {
    v19 = a1 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
    v20 = *(_QWORD *)(v11 + 72);
    v21 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
    do
    {
      v21(v14, v19, v10);
      a5(v16, v14);
      (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v10);
      v19 += v20;
      --v17;
    }
    while (v17);
    return v23;
  }
  return result;
}

uint64_t sub_1CA288800(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  unint64_t *v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;

  v2 = *(_QWORD *)(a1 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94ABF0);
  sub_1CA2890FC();
  result = sub_1CA85B9A8();
  v7 = result;
  if (v2)
  {
    v4 = (unint64_t *)(a1 + 32);
    do
    {
      v5 = *v4++;
      swift_bridgeObjectRetain();
      sub_1CA2426F4(&v6, v5);
      swift_bridgeObjectRelease();
      --v2;
    }
    while (v2);
    return v7;
  }
  return result;
}

uint64_t sub_1CA288890(unint64_t a1)
{
  return sub_1CA2888B4(a1, (unint64_t *)&qword_1EF94B000, 0x1E0CD16C0, (unint64_t *)&qword_1EF9588B0, (void (*)(id *, uint64_t))sub_1CA242884);
}

uint64_t sub_1CA2888B4(unint64_t a1, unint64_t *a2, uint64_t a3, unint64_t *a4, void (*a5)(id *, uint64_t))
{
  unint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t i;
  uint64_t v13;
  void **v14;
  void *v15;
  id v16;
  uint64_t v17;

  v9 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_1CA85C08C();
    swift_bridgeObjectRelease();
  }
  sub_1CA24EEC0(0, a2);
  sub_1CA24E6C0(a4, a2);
  result = sub_1CA85B9A8();
  v17 = result;
  if (v9)
  {
    swift_bridgeObjectRetain();
    v11 = sub_1CA85C08C();
    result = swift_bridgeObjectRelease();
    if (!v11)
      return v17;
  }
  else
  {
    v11 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v11)
      return v17;
  }
  if (v11 >= 1)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (i = 0; i != v11; ++i)
      {
        v13 = MEMORY[0x1CAA4DD64](i, a1);
        a5(&v16, v13);

      }
    }
    else
    {
      v14 = (void **)(a1 + 32);
      do
      {
        v15 = *v14++;
        a5(&v16, (uint64_t)v15);

        --v11;
      }
      while (v11);
    }
    return v17;
  }
  __break(1u);
  return result;
}

uint64_t sub_1CA288A30(uint64_t a1)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t, uint64_t);
  void (*v16)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;

  v2 = sub_1CA85A5B0();
  v3 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870];
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v18 - v8;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8711C0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(_QWORD *)(a1 + 16);
  sub_1CA23CC98((unint64_t *)&qword_1ED871190, v3, MEMORY[0x1E0CB08A8]);
  v19 = sub_1CA85B9A8();
  if (v13)
  {
    v14 = a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    v18 = *(_QWORD *)(v4 + 72);
    v15 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
    while (1)
    {
      v15(v12, v14, v2);
      v16 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
      v16(v12, 0, 1, v2);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v12, 1, v2) == 1)
        break;
      (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v12, v2);
      sub_1CA23FB5C((uint64_t)v9, v6);
      (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v2);
      v14 += v18;
      if (!--v13)
        goto LABEL_7;
    }
  }
  else
  {
    v16 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
LABEL_7:
    v16(v12, 1, 1, v2);
  }
  return v19;
}

uint64_t sub_1CA288C00(unint64_t a1)
{
  return sub_1CA2888B4(a1, (unint64_t *)&qword_1ED8723C0, 0x1E0CB37E8, (unint64_t *)&qword_1ED8723C8, (void (*)(id *, uint64_t))sub_1CA2430B8);
}

uint64_t sub_1CA288C24(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  int64_t v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char v25;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v31;
  uint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;

  v38 = a1;
  v5 = type metadata accessor for Song();
  v37 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (uint64_t *)((char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v8);
  v10 = (uint64_t *)((char *)&v35 - v9);
  MEMORY[0x1E0C80A78](v11);
  v40 = (uint64_t *)((char *)&v35 - v12);
  MEMORY[0x1E0C80A78](v13);
  v15 = (uint64_t *)((char *)&v35 - v14);
  v16 = a3 >> 1;
  if (__OFSUB__(a3 >> 1, a2))
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  sub_1CA23CC98(&qword_1ED871C58, (uint64_t (*)(uint64_t))type metadata accessor for Song, (uint64_t)&protocol conformance descriptor for Song);
  v17 = sub_1CA85B9A8();
  if (v16 == a2)
    return v17;
  v35 = v5;
  v36 = a3 >> 1;
  while (1)
  {
    if (a2 >= v16)
    {
      __break(1u);
LABEL_33:
      __break(1u);
      goto LABEL_34;
    }
    v19 = *(_QWORD *)(v37 + 72);
    v39 = a2;
    sub_1CA24EE38(v38 + v19 * a2, (uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for Song);
    sub_1CA85C368();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1CA85B4B0();
    swift_bridgeObjectRelease();
    v20 = sub_1CA85C3B0();
    v21 = -1 << *(_BYTE *)(v17 + 32);
    v22 = v20 & ~v21;
    if (((*(_QWORD *)(v17 + 56 + ((v22 >> 3) & 0xFFFFFFFFFFFFF8)) >> v22) & 1) != 0)
    {
      v23 = ~v21;
      while (1)
      {
        sub_1CA24EE38(*(_QWORD *)(v17 + 48) + v22 * v19, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for Song);
        if (*v7 == *v15 && v7[1] == v15[1])
          break;
        v25 = sub_1CA85C284();
        sub_1CA2669CC((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for Song);
        if ((v25 & 1) != 0)
          goto LABEL_6;
        v22 = (v22 + 1) & v23;
        if (((*(_QWORD *)(v17 + 56 + ((v22 >> 3) & 0xFFFFFFFFFFFFF8)) >> v22) & 1) == 0)
          goto LABEL_16;
      }
      sub_1CA2669CC((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for Song);
      goto LABEL_6;
    }
LABEL_16:
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_1CA24EE38((uint64_t)v15, (uint64_t)v40, (uint64_t (*)(_QWORD))type metadata accessor for Song);
    v41 = v17;
    if (*(_QWORD *)(v17 + 24) <= *(_QWORD *)(v17 + 16))
      break;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_1CA362A74();
      v17 = v41;
    }
LABEL_30:
    *(_QWORD *)(v17 + ((v22 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) |= 1 << v22;
    sub_1CA268478((uint64_t)v40, *(_QWORD *)(v17 + 48) + v22 * v19);
    v32 = *(_QWORD *)(v17 + 16);
    v33 = __OFADD__(v32, 1);
    v34 = v32 + 1;
    if (v33)
      goto LABEL_33;
    *(_QWORD *)(v17 + 16) = v34;
LABEL_6:
    swift_bridgeObjectRelease();
    a2 = v39 + 1;
    sub_1CA2669CC((uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for Song);
    v16 = v36;
    if (a2 == v36)
      return v17;
  }
  if (isUniquelyReferenced_nonNull_native)
    sub_1CA360580();
  else
    sub_1CA363A74();
  v17 = v41;
  sub_1CA85C368();
  swift_bridgeObjectRetain();
  sub_1CA85B4B0();
  swift_bridgeObjectRelease();
  v27 = sub_1CA85C3B0();
  v28 = -1 << *(_BYTE *)(v17 + 32);
  v22 = v27 & ~v28;
  if (((*(_QWORD *)(v17 + 56 + ((v22 >> 3) & 0xFFFFFFFFFFFFF8)) >> v22) & 1) == 0)
    goto LABEL_30;
  v29 = ~v28;
  while (1)
  {
    sub_1CA24EE38(*(_QWORD *)(v17 + 48) + v22 * v19, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for Song);
    if (*v10 == *v40 && v10[1] == v40[1])
      break;
    v31 = sub_1CA85C284();
    sub_1CA2669CC((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for Song);
    if ((v31 & 1) != 0)
      goto LABEL_36;
    v22 = (v22 + 1) & v29;
    if (((*(_QWORD *)(v17 + 56 + ((v22 >> 3) & 0xFFFFFFFFFFFFF8)) >> v22) & 1) == 0)
      goto LABEL_30;
  }
LABEL_35:
  sub_1CA2669CC((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for Song);
LABEL_36:
  result = sub_1CA85C2D8();
  __break(1u);
  return result;
}

uint64_t sub_1CA28902C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED871D00);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_1CA289074()
{
  unint64_t result;

  result = qword_1EF94B800;
  if (!qword_1EF94B800)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8E2BC8, &type metadata for Edge.Label);
    atomic_store(result, (unint64_t *)&qword_1EF94B800);
  }
  return result;
}

unint64_t sub_1CA2890B8()
{
  unint64_t result;

  result = qword_1EF959BA0;
  if (!qword_1EF959BA0)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8E37B0, &type metadata for Node.Label);
    atomic_store(result, (unint64_t *)&qword_1EF959BA0);
  }
  return result;
}

unint64_t sub_1CA2890FC()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1EF94B808;
  if (!qword_1EF94B808)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF94ABF0);
    v2 = sub_1CA24E6C0((unint64_t *)&qword_1EF9588B0, (unint64_t *)&qword_1EF94B000);
    result = MEMORY[0x1CAA4F1A4](MEMORY[0x1E0DEAF18], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EF94B808);
  }
  return result;
}

unint64_t sub_1CA289178()
{
  unint64_t result;

  result = qword_1EF94B818;
  if (!qword_1EF94B818)
  {
    result = MEMORY[0x1CAA4F1A4](&protocol conformance descriptor for TimeIndex.Subdomain, &type metadata for TimeIndex.Subdomain);
    atomic_store(result, (unint64_t *)&qword_1EF94B818);
  }
  return result;
}

unint64_t sub_1CA2891BC()
{
  unint64_t result;

  result = qword_1ED872140;
  if (!qword_1ED872140)
  {
    result = MEMORY[0x1CAA4F1A4](MEMORY[0x1E0CB1A70], MEMORY[0x1E0DEA968]);
    atomic_store(result, (unint64_t *)&qword_1ED872140);
  }
  return result;
}

unint64_t sub_1CA289200()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED8749D0;
  if (!qword_1ED8749D0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED873160);
    result = MEMORY[0x1CAA4F1A4](MEMORY[0x1E0CB1BE8], v1);
    atomic_store(result, (unint64_t *)&qword_1ED8749D0);
  }
  return result;
}

uint64_t sub_1CA28924C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  BOOL v26;
  uint64_t v27;
  _QWORD *v28;
  BOOL v29;
  BOOL v30;
  unint64_t *v32;
  uint64_t v33;
  uint64_t v35;
  int64_t v36;
  int64_t v37;
  uint64_t v38;

  v4 = a4;
  v32 = (unint64_t *)result;
  v33 = 0;
  v5 = 0;
  v8 = *(_QWORD *)(a3 + 64);
  v6 = a3 + 64;
  v7 = v8;
  v9 = 1 << *(_BYTE *)(v6 - 32);
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & v7;
  v35 = v6;
  v36 = (unint64_t)(v9 + 63) >> 6;
  v38 = a4 + 56;
  while (1)
  {
    while (v11)
    {
      v12 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v13 = v12 | (v5 << 6);
      if (*(_QWORD *)(v4 + 16))
        goto LABEL_23;
    }
    v14 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
      __break(1u);
      goto LABEL_41;
    }
    if (v14 >= v36)
      return sub_1CA446AB0(v32, a2, v33, a3);
    v15 = *(_QWORD *)(v35 + 8 * v14);
    ++v5;
    if (!v15)
    {
      v5 = v14 + 1;
      if (v14 + 1 >= v36)
        return sub_1CA446AB0(v32, a2, v33, a3);
      v15 = *(_QWORD *)(v35 + 8 * v5);
      if (!v15)
      {
        v5 = v14 + 2;
        if (v14 + 2 >= v36)
          return sub_1CA446AB0(v32, a2, v33, a3);
        v15 = *(_QWORD *)(v35 + 8 * v5);
        if (!v15)
          break;
      }
    }
LABEL_22:
    v11 = (v15 - 1) & v15;
    v13 = __clz(__rbit64(v15)) + (v5 << 6);
    if (*(_QWORD *)(v4 + 16))
    {
LABEL_23:
      v37 = v5;
      v17 = (uint64_t *)(*(_QWORD *)(a3 + 48) + 16 * v13);
      v18 = *v17;
      v19 = v17[1];
      sub_1CA85C368();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1CA85B4B0();
      v20 = sub_1CA85C3B0();
      v21 = v4;
      v22 = -1 << *(_BYTE *)(v4 + 32);
      v23 = v20 & ~v22;
      if (((*(_QWORD *)(v38 + ((v23 >> 3) & 0xFFFFFFFFFFFFF8)) >> v23) & 1) == 0)
        goto LABEL_5;
      v24 = *(_QWORD *)(v21 + 48);
      v25 = (_QWORD *)(v24 + 16 * v23);
      v26 = *v25 == v18 && v25[1] == v19;
      if (v26 || (sub_1CA85C284() & 1) != 0)
      {
LABEL_36:
        swift_bridgeObjectRelease();
        result = swift_bridgeObjectRelease();
        *(unint64_t *)((char *)v32 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
        v30 = __OFADD__(v33++, 1);
        v4 = v21;
        v5 = v37;
        if (v30)
        {
          __break(1u);
          return sub_1CA446AB0(v32, a2, v33, a3);
        }
      }
      else
      {
        v27 = ~v22;
        while (1)
        {
          v23 = (v23 + 1) & v27;
          if (((*(_QWORD *)(v38 + ((v23 >> 3) & 0xFFFFFFFFFFFFF8)) >> v23) & 1) == 0)
            break;
          v28 = (_QWORD *)(v24 + 16 * v23);
          v29 = *v28 == v18 && v28[1] == v19;
          if (v29 || (sub_1CA85C284() & 1) != 0)
            goto LABEL_36;
        }
LABEL_5:
        swift_bridgeObjectRelease();
        result = swift_bridgeObjectRelease();
        v4 = v21;
        v5 = v37;
      }
    }
  }
  v16 = v14 + 3;
  if (v16 >= v36)
    return sub_1CA446AB0(v32, a2, v33, a3);
  v15 = *(_QWORD *)(v35 + 8 * v16);
  if (v15)
  {
    v5 = v16;
    goto LABEL_22;
  }
  while (1)
  {
    v5 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v5 >= v36)
      return sub_1CA446AB0(v32, a2, v33, a3);
    v15 = *(_QWORD *)(v35 + 8 * v5);
    ++v16;
    if (v15)
      goto LABEL_22;
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1CA289538(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char v5;
  unsigned int v6;
  unint64_t v7;
  size_t v8;
  uint64_t isStackAllocationSafe;
  uint64_t v10;
  void *v11;
  _QWORD v13[2];

  v13[1] = *MEMORY[0x1E0C80C00];
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v7 = (unint64_t)((1 << v5) + 63) >> 6;
  v8 = 8 * v7;
  isStackAllocationSafe = swift_bridgeObjectRetain_n();
  if (v6 <= 0xD || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1E0C80A78](isStackAllocationSafe);
    bzero((char *)v13 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0), v8);
    swift_bridgeObjectRetain();
    v10 = sub_1CA28924C((uint64_t)v13 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0), v7, a1, a2);
    swift_bridgeObjectRelease();
    if (v2)
      swift_willThrow();
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v11 = (void *)swift_slowAlloc();
    bzero(v11, v8);
    swift_bridgeObjectRetain();
    v10 = sub_1CA28924C((uint64_t)v11, v7, a1, a2);
    swift_bridgeObjectRelease();
    MEMORY[0x1CAA4F27C](v11, -1, -1);
    swift_bridgeObjectRelease_n();
  }
  return v10;
}

uint64_t sub_1CA2896EC(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  id v6;
  void *v7;
  int v8;
  int v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;

  if (a1 >> 62)
    goto LABEL_15;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    v3 = MEMORY[0x1E0DEE9D8];
    if (!v2)
      return v3;
    v12 = MEMORY[0x1E0DEE9D8];
    result = sub_1CA3FB7E0(0, v2 & ~(v2 >> 63), 0);
    if (v2 < 0)
      break;
    v5 = 0;
    v3 = v12;
    while (v2 != v5)
    {
      if ((a1 & 0xC000000000000001) != 0)
        v6 = (id)MEMORY[0x1CAA4DD64](v5, a1);
      else
        v6 = *(id *)(a1 + 8 * v5 + 32);
      v7 = v6;
      objc_msgSend(v6, sel_floatValue);
      v9 = v8;

      v11 = *(_QWORD *)(v12 + 16);
      v10 = *(_QWORD *)(v12 + 24);
      if (v11 >= v10 >> 1)
        sub_1CA3FB7E0(v10 > 1, v11 + 1, 1);
      ++v5;
      *(_QWORD *)(v12 + 16) = v11 + 1;
      *(_DWORD *)(v12 + 4 * v11 + 32) = v9;
      if (v2 == v5)
        return v3;
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
    v2 = sub_1CA85C08C();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

_QWORD *sub_1CA28984C(uint64_t a1)
{
  _QWORD *result;
  int v3;
  char v4;
  uint64_t v5;

  result = (_QWORD *)sub_1CA4E495C();
  if ((v4 & 1) != 0)
    goto LABEL_8;
  if (*(_DWORD *)(a1 + 36) != v3)
  {
    __break(1u);
LABEL_8:
    __break(1u);
    return result;
  }
  if (result == (_QWORD *)(1 << *(_BYTE *)(a1 + 32)))
    return 0;
  else
    return sub_1CA28B628(&v5, (uint64_t)result, v3, 0, a1);
}

unint64_t sub_1CA2898D4(unint64_t result)
{
  unint64_t v1;
  uint64_t v2;

  v1 = result;
  if (!(result >> 62))
  {
    if (*(_QWORD *)((result & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_3;
    return 0;
  }
  swift_bridgeObjectRetain();
  v2 = sub_1CA85C08C();
  result = swift_bridgeObjectRelease();
  if (!v2)
    return 0;
LABEL_3:
  if ((v1 & 0xC000000000000001) != 0)
    return MEMORY[0x1CAA4DD64](0, v1);
  if (*(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10))
    return swift_retain();
  __break(1u);
  return result;
}

void sub_1CA289968(uint64_t a1, uint64_t a2)
{
  __asm { BR              X12 }
}

uint64_t sub_1CA2899B0(unsigned __int8 a1, uint64_t a2)
{
  unsigned __int8 v2;

  if ((a2 & 0xFF000000000000) != 0)
    v2 = a1;
  else
    v2 = 0;
  return v2 | (((a2 & 0xFF000000000000) == 0) << 8);
}

uint64_t sub_1CA289AB0(uint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  char v12;
  uint64_t v13;

  v2 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
    v3 = sub_1CA85BDBC();
    v5 = v4;
    v6 = sub_1CA85BE4C();
    v8 = MEMORY[0x1CAA4DC44](v3, v5, v6, v7);
    swift_bridgeObjectRelease();
    if ((v8 & 1) != 0)
    {
LABEL_3:
      sub_1CA2685C4(v3, v5, v2 != 0);
      return 0;
    }
LABEL_7:
    sub_1CA28B33C(v3, v5, v2 != 0, a1, (unint64_t *)&unk_1EF9588A0);
    v9 = v13;
    sub_1CA2685C4(v3, v5, v2 != 0);
    return v9;
  }
  result = sub_1CA28B5A0(a1);
  if ((v12 & 1) == 0)
  {
    v5 = v11;
    if (*(_DWORD *)(a1 + 36) == (_DWORD)v11)
    {
      v3 = result;
      if (result == 1 << *(_BYTE *)(a1 + 32))
        goto LABEL_3;
      goto LABEL_7;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1CA289BCC(uint64_t a1)
{
  uint64_t result;
  int v3;
  char v4;
  uint64_t v5;

  result = sub_1CA31D160(a1);
  if ((v4 & 1) != 0)
    goto LABEL_8;
  if (*(_DWORD *)(a1 + 36) != v3)
  {
    __break(1u);
LABEL_8:
    __break(1u);
    return result;
  }
  if (result == 1 << *(_BYTE *)(a1 + 32))
    return 0;
  v5 = sub_1CA28B6BC(result, v3, 0, a1);
  swift_bridgeObjectRetain();
  return v5;
}

uint64_t CachedEventFeatures.identifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t CachedEventFeatures.featureVectorByName.getter()
{
  return swift_bridgeObjectRetain();
}

PhotosGraph::CachedEventFeatures __swiftcall CachedEventFeatures.init(identifier:featureVectorByName:)(Swift::String identifier, Swift::OpaquePointer featureVectorByName)
{
  uint64_t v2;
  PhotosGraph::CachedEventFeatures result;

  *(Swift::String *)v2 = identifier;
  *(Swift::OpaquePointer *)(v2 + 16) = featureVectorByName;
  result.identifier = identifier;
  result.featureVectorByName = featureVectorByName;
  return result;
}

{
  uint64_t *v2;
  void *object;
  uint64_t countAndFlagsBits;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  PhotosGraph::CachedEventFeatures result;

  object = identifier._object;
  countAndFlagsBits = identifier._countAndFlagsBits;
  v5 = v2;
  v6 = sub_1CA28A774((uint64_t)featureVectorByName._rawValue);
  v7 = swift_bridgeObjectRelease();
  *v5 = countAndFlagsBits;
  v5[1] = (uint64_t)object;
  v5[2] = v6;
  result.featureVectorByName._rawValue = v9;
  result.identifier._object = v8;
  result.identifier._countAndFlagsBits = v7;
  return result;
}

uint64_t CachedEventFeatures.init(from:)@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t result;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  _BYTE v16[40];

  sub_1CA28A998(a1, (uint64_t)v16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94B828);
  sub_1CA28B0C8(&qword_1EF94B830, (uint64_t (*)(void))sub_1CA28A9DC, MEMORY[0x1E0DEA9A0], MEMORY[0x1E0DEA0D8]);
  v5 = sub_1CA85B468();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1(a1);
  v7 = sub_1CA28984C(v5);
  v9 = v8;
  v11 = v10;
  swift_bridgeObjectRelease();
  if (!v9)
  {
    v13 = sub_1CA85BF24();
    swift_allocError();
    v15 = v14;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94B840);
    *v15 = MEMORY[0x1E0CB0338];
    sub_1CA85BF18();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v15, *MEMORY[0x1E0DEC460], v13);
    swift_willThrow();
    return __swift_destroy_boxed_opaque_existential_1(a1);
  }
  v12 = sub_1CA28AA20(v11);
  swift_bridgeObjectRelease();
  result = __swift_destroy_boxed_opaque_existential_1(a1);
  *a2 = v7;
  a2[1] = v9;
  a2[2] = v12;
  return result;
}

uint64_t CachedEventFeatures.encode(to:)()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t inited;

  v2 = *v0;
  v1 = v0[1];
  v3 = sub_1CA28AD8C(v0[2]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94B848);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1CA8D4E40;
  *(_QWORD *)(inited + 32) = v2;
  *(_QWORD *)(inited + 40) = v1;
  *(_QWORD *)(inited + 48) = v3;
  swift_bridgeObjectRetain();
  sub_1CA273F24(inited);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94B828);
  sub_1CA28B0C8(&qword_1EF94B850, (uint64_t (*)(void))sub_1CA28B13C, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEA0B8]);
  sub_1CA85B45C();
  return swift_bridgeObjectRelease();
}

uint64_t static CachedEventFeatures.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  BOOL v4;

  v2 = a1[2];
  v3 = a2[2];
  v4 = *a1 == *a2 && a1[1] == a2[1];
  if (v4 || (sub_1CA85C284() & 1) != 0)
    return sub_1CA289FF0(v2, v3);
  else
    return 0;
}

uint64_t sub_1CA289FF0(uint64_t result, uint64_t a2)
{
  uint64_t v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  float v28;
  float v29;

  if (result == a2)
    return 1;
  v3 = result;
  if (*(_QWORD *)(result + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v4 = 0;
  v5 = result + 64;
  v6 = 1 << *(_BYTE *)(result + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(result + 64);
  v9 = (unint64_t)(v6 + 63) >> 6;
  while (v8)
  {
    v10 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    v11 = v10 | (v4 << 6);
LABEL_23:
    v15 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 16 * v11);
    v16 = *v15;
    v17 = v15[1];
    v18 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + 8 * v11);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v19 = sub_1CA25081C(v16, v17);
    v21 = v20;
    swift_bridgeObjectRelease();
    if ((v21 & 1) == 0
      || (v22 = *(_QWORD *)(*(_QWORD *)(a2 + 56) + 8 * v19), v23 = *(_QWORD *)(v22 + 16), v23 != *(_QWORD *)(v18 + 16)))
    {
LABEL_35:
      swift_bridgeObjectRelease();
      return 0;
    }
    if (v23)
      v24 = v22 == v18;
    else
      v24 = 1;
    if (!v24)
    {
      if (*(float *)(v22 + 32) != *(float *)(v18 + 32))
        goto LABEL_35;
      if (v23 != 1)
      {
        if (*(float *)(v22 + 36) != *(float *)(v18 + 36))
          goto LABEL_35;
        v25 = 0;
        v26 = v22 + 40;
        v27 = v23 - 2;
        while (v27 != v25)
        {
          v28 = *(float *)(v26 + 4 * v25);
          v29 = *(float *)(v18 + 4 * v25++ + 40);
          if (v28 != v29)
            goto LABEL_35;
        }
      }
    }
    result = swift_bridgeObjectRelease();
  }
  v12 = v4 + 1;
  if (__OFADD__(v4, 1))
  {
    __break(1u);
    goto LABEL_39;
  }
  if (v12 >= v9)
    return 1;
  v13 = *(_QWORD *)(v5 + 8 * v12);
  ++v4;
  if (v13)
    goto LABEL_22;
  v4 = v12 + 1;
  if (v12 + 1 >= v9)
    return 1;
  v13 = *(_QWORD *)(v5 + 8 * v4);
  if (v13)
    goto LABEL_22;
  v4 = v12 + 2;
  if (v12 + 2 >= v9)
    return 1;
  v13 = *(_QWORD *)(v5 + 8 * v4);
  if (v13)
  {
LABEL_22:
    v8 = (v13 - 1) & v13;
    v11 = __clz(__rbit64(v13)) + (v4 << 6);
    goto LABEL_23;
  }
  v14 = v12 + 3;
  if (v14 >= v9)
    return 1;
  v13 = *(_QWORD *)(v5 + 8 * v14);
  if (v13)
  {
    v4 = v14;
    goto LABEL_22;
  }
  while (1)
  {
    v4 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v4 >= v9)
      return 1;
    v13 = *(_QWORD *)(v5 + 8 * v4);
    ++v14;
    if (v13)
      goto LABEL_22;
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_1CA28A20C(uint64_t result, uint64_t a2)
{
  uint64_t v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;
  _QWORD *v24;
  char v26;
  int64_t v27;

  if (result == a2)
    return 1;
  v3 = result;
  if (*(_QWORD *)(result + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v4 = 0;
  v5 = result + 64;
  v6 = 1 << *(_BYTE *)(result + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(result + 64);
  v27 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      v9 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v10 = v9 | (v4 << 6);
      goto LABEL_23;
    }
    v11 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_34;
    }
    if (v11 >= v27)
      return 1;
    v12 = *(_QWORD *)(v5 + 8 * v11);
    ++v4;
    if (!v12)
    {
      v4 = v11 + 1;
      if (v11 + 1 >= v27)
        return 1;
      v12 = *(_QWORD *)(v5 + 8 * v4);
      if (!v12)
      {
        v4 = v11 + 2;
        if (v11 + 2 >= v27)
          return 1;
        v12 = *(_QWORD *)(v5 + 8 * v4);
        if (!v12)
          break;
      }
    }
LABEL_22:
    v8 = (v12 - 1) & v12;
    v10 = __clz(__rbit64(v12)) + (v4 << 6);
LABEL_23:
    v14 = 16 * v10;
    v15 = (uint64_t *)(*(_QWORD *)(v3 + 48) + v14);
    v16 = *v15;
    v17 = v15[1];
    v18 = (uint64_t *)(*(_QWORD *)(v3 + 56) + v14);
    v20 = *v18;
    v19 = v18[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v21 = sub_1CA25081C(v16, v17);
    v23 = v22;
    swift_bridgeObjectRelease();
    if ((v23 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
    v24 = (_QWORD *)(*(_QWORD *)(a2 + 56) + 16 * v21);
    if (*v24 == v20 && v24[1] == v19)
    {
      result = swift_bridgeObjectRelease();
    }
    else
    {
      v26 = sub_1CA85C284();
      result = swift_bridgeObjectRelease();
      if ((v26 & 1) == 0)
        return 0;
    }
  }
  v13 = v11 + 3;
  if (v13 >= v27)
    return 1;
  v12 = *(_QWORD *)(v5 + 8 * v13);
  if (v12)
  {
    v4 = v13;
    goto LABEL_22;
  }
  while (1)
  {
    v4 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v4 >= v27)
      return 1;
    v12 = *(_QWORD *)(v5 + 8 * v4);
    ++v13;
    if (v12)
      goto LABEL_22;
  }
LABEL_34:
  __break(1u);
  return result;
}

void sub_1CA28A410(uint64_t a1, uint64_t a2)
{
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  id v19;
  uint64_t v20;
  char v21;
  char v22;
  id v23;
  char v24;

  if (a1 == a2 || *(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16))
    return;
  v4 = 0;
  v5 = a1 + 64;
  v6 = 1 << *(_BYTE *)(a1 + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(a1 + 64);
  v9 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      v10 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v11 = v10 | (v4 << 6);
      goto LABEL_24;
    }
    v12 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v12 >= v9)
      return;
    v13 = *(_QWORD *)(v5 + 8 * v12);
    ++v4;
    if (!v13)
    {
      v4 = v12 + 1;
      if (v12 + 1 >= v9)
        return;
      v13 = *(_QWORD *)(v5 + 8 * v4);
      if (!v13)
      {
        v4 = v12 + 2;
        if (v12 + 2 >= v9)
          return;
        v13 = *(_QWORD *)(v5 + 8 * v4);
        if (!v13)
        {
          v4 = v12 + 3;
          if (v12 + 3 >= v9)
            return;
          v13 = *(_QWORD *)(v5 + 8 * v4);
          if (!v13)
            break;
        }
      }
    }
LABEL_23:
    v8 = (v13 - 1) & v13;
    v11 = __clz(__rbit64(v13)) + (v4 << 6);
LABEL_24:
    v15 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v11);
    v16 = *v15;
    v17 = v15[1];
    v18 = *(void **)(*(_QWORD *)(a1 + 56) + 8 * v11);
    swift_bridgeObjectRetain();
    v19 = v18;
    v20 = sub_1CA25081C(v16, v17);
    v22 = v21;
    swift_bridgeObjectRelease();
    if ((v22 & 1) == 0)
    {

      return;
    }
    sub_1CA24EEC0(0, (unint64_t *)&qword_1EF94D620);
    v23 = *(id *)(*(_QWORD *)(a2 + 56) + 8 * v20);
    v24 = sub_1CA85BC84();

    if ((v24 & 1) == 0)
      return;
  }
  v14 = v12 + 4;
  if (v14 >= v9)
    return;
  v13 = *(_QWORD *)(v5 + 8 * v14);
  if (v13)
  {
    v4 = v14;
    goto LABEL_23;
  }
  while (1)
  {
    v4 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v4 >= v9)
      return;
    v13 = *(_QWORD *)(v5 + 8 * v4);
    ++v14;
    if (v13)
      goto LABEL_23;
  }
LABEL_31:
  __break(1u);
}

uint64_t sub_1CA28A604@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return CachedEventFeatures.init(from:)(a1, a2);
}

uint64_t sub_1CA28A618()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t inited;

  v2 = *v0;
  v1 = v0[1];
  v3 = sub_1CA28AD8C(v0[2]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94B848);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1CA8D4E40;
  *(_QWORD *)(inited + 32) = v2;
  *(_QWORD *)(inited + 40) = v1;
  *(_QWORD *)(inited + 48) = v3;
  swift_bridgeObjectRetain();
  sub_1CA273F24(inited);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94B828);
  sub_1CA28B0C8(&qword_1EF94B850, (uint64_t (*)(void))sub_1CA28B13C, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEA0B8]);
  sub_1CA85B45C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1CA28A714(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  BOOL v4;

  v2 = a1[2];
  v3 = a2[2];
  v4 = *a1 == *a2 && a1[1] == a2[1];
  if (v4 || (sub_1CA85C284() & 1) != 0)
    return sub_1CA289FF0(v2, v3);
  else
    return 0;
}

uint64_t sub_1CA28A774(uint64_t a1)
{
  uint64_t result;
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t i;
  BOOL v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  int64_t v29;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94B868);
  result = sub_1CA85C0A4();
  v3 = 0;
  v27 = a1;
  v28 = (_QWORD *)result;
  v6 = *(_QWORD *)(a1 + 64);
  v5 = a1 + 64;
  v4 = v6;
  v7 = 1 << *(_BYTE *)(v5 - 32);
  v8 = -1;
  if (v7 < 64)
    v8 = ~(-1 << v7);
  v9 = v8 & v4;
  v24 = v5;
  v25 = (unint64_t)(v7 + 63) >> 6;
  v26 = result + 64;
  if ((v8 & v4) == 0)
    goto LABEL_5;
LABEL_4:
  v10 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v29 = v3;
  for (i = v10 | (v3 << 6); ; i = __clz(__rbit64(v14)) + (v13 << 6))
  {
    v16 = (uint64_t *)(*(_QWORD *)(v27 + 48) + 16 * i);
    v17 = *v16;
    v18 = v16[1];
    swift_bridgeObjectRetain();
    v19 = swift_bridgeObjectRetain();
    v20 = sub_1CA2896EC(v19);
    swift_bridgeObjectRelease();
    *(_QWORD *)(v26 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    result = (uint64_t)v28;
    v21 = (_QWORD *)(v28[6] + 16 * i);
    *v21 = v17;
    v21[1] = v18;
    *(_QWORD *)(v28[7] + 8 * i) = v20;
    v22 = v28[2];
    v12 = __OFADD__(v22, 1);
    v23 = v22 + 1;
    if (v12)
    {
      __break(1u);
LABEL_25:
      __break(1u);
      goto LABEL_26;
    }
    v28[2] = v23;
    v3 = v29;
    if (v9)
      goto LABEL_4;
LABEL_5:
    v12 = __OFADD__(v3, 1);
    v13 = v3 + 1;
    if (v12)
      goto LABEL_25;
    if (v13 >= v25)
      return result;
    v14 = *(_QWORD *)(v24 + 8 * v13);
    if (!v14)
      break;
LABEL_15:
    v9 = (v14 - 1) & v14;
    v29 = v13;
  }
  v15 = v13 + 1;
  if (v13 + 1 >= v25)
    return result;
  v14 = *(_QWORD *)(v24 + 8 * v15);
  if (v14)
    goto LABEL_14;
  v15 = v13 + 2;
  if (v13 + 2 >= v25)
    return result;
  v14 = *(_QWORD *)(v24 + 8 * v15);
  if (v14)
    goto LABEL_14;
  v15 = v13 + 3;
  if (v13 + 3 >= v25)
    return result;
  v14 = *(_QWORD *)(v24 + 8 * v15);
  if (v14)
  {
LABEL_14:
    v13 = v15;
    goto LABEL_15;
  }
  while (1)
  {
    v13 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v13 >= v25)
      return result;
    v14 = *(_QWORD *)(v24 + 8 * v13);
    ++v15;
    if (v14)
      goto LABEL_15;
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_1CA28A998(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

unint64_t sub_1CA28A9DC()
{
  unint64_t result;

  result = qword_1EF94B838;
  if (!qword_1EF94B838)
  {
    result = MEMORY[0x1CAA4F1A4](MEMORY[0x1E0CB0378], MEMORY[0x1E0CB0338]);
    atomic_store(result, (unint64_t *)&qword_1EF94B838);
  }
  return result;
}

uint64_t sub_1CA28AA20(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int64_t v12;
  uint64_t v13;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94B868);
  result = sub_1CA85C0A4();
  v13 = a1;
  v5 = *(_QWORD *)(a1 + 64);
  v4 = (_QWORD *)(a1 + 64);
  v3 = v5;
  v6 = 1 << *((_BYTE *)v4 - 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v12 = (unint64_t)(v6 + 63) >> 6;
  if ((v7 & v3) != 0)
  {
    v8 = __clz(__rbit64(v7 & v3));
    goto LABEL_18;
  }
  if ((unint64_t)(v6 + 63) >> 6 > 1)
  {
    v9 = v4[1];
    v10 = 1;
    if (v9)
      goto LABEL_17;
    v10 = 2;
    if (v12 <= 2)
      return result;
    v9 = v4[2];
    if (v9)
      goto LABEL_17;
    v10 = 3;
    if (v12 <= 3)
      return result;
    v9 = v4[3];
    if (v9)
    {
LABEL_17:
      v8 = __clz(__rbit64(v9)) + (v10 << 6);
LABEL_18:
      __asm { BR              X9 }
    }
    v11 = 4;
    if (v12 > 4)
    {
      v9 = v4[4];
      if (v9)
      {
        v10 = 4;
        goto LABEL_17;
      }
      while (1)
      {
        v10 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
          __break(1u);
          JUMPOUT(0x1CA28AD34);
        }
        if (v10 >= v12)
          break;
        v9 = v4[v10];
        ++v11;
        if (v9)
          goto LABEL_17;
      }
    }
  }
  return result;
}

_QWORD *sub_1CA28AD8C(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t i;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  _QWORD *v23;
  uint64_t *v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  int64_t v31;
  uint64_t v32;
  int64_t v33;
  uint64_t v34;
  _BYTE __dst[14];
  unsigned __int8 v36;
  uint64_t v37;

  v37 = *MEMORY[0x1E0C80C00];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94B860);
  v2 = sub_1CA85C0A4();
  v3 = (_QWORD *)v2;
  v4 = 0;
  v5 = *(_QWORD *)(a1 + 64);
  v29 = a1;
  v30 = a1 + 64;
  v6 = 1 << *(_BYTE *)(a1 + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & v5;
  v31 = (unint64_t)(v6 + 63) >> 6;
  v32 = v2 + 64;
  if ((v7 & v5) == 0)
    goto LABEL_5;
LABEL_4:
  v9 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (i = v9 | (v4 << 6); ; i = __clz(__rbit64(v12)) + (v4 << 6))
  {
    v14 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * i);
    v15 = *(_QWORD *)(v14 + 16);
    if (v15 >> 61)
    {
      __break(1u);
LABEL_33:
      __break(1u);
LABEL_34:
      __break(1u);
      goto LABEL_35;
    }
    v16 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * i);
    v17 = v16[1];
    v33 = v4;
    v34 = *v16;
    v18 = 4 * v15;
    if (4 * v15)
    {
      if (v18 <= 14)
      {
        memset(__dst, 0, sizeof(__dst));
        v36 = 4 * v15;
        memcpy(__dst, (const void *)(v14 + 32), 4 * v15);
        v21 = *(_QWORD *)__dst;
        v22 = *(unsigned int *)&__dst[8] | ((unint64_t)__dst[12] << 32) | ((unint64_t)__dst[13] << 40) | ((unint64_t)v36 << 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        sub_1CA85A208();
        swift_allocObject();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v19 = sub_1CA85A1D8();
        v20 = v19;
        if ((unint64_t)v18 >= 0x7FFFFFFF)
        {
          sub_1CA85A448();
          v21 = swift_allocObject();
          *(_QWORD *)(v21 + 16) = 0;
          *(_QWORD *)(v21 + 24) = v18;
          v22 = v20 | 0x8000000000000000;
        }
        else
        {
          v21 = v15 << 34;
          v22 = v19 | 0x4000000000000000;
        }
        a1 = v29;
      }
    }
    else
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v21 = 0;
      v22 = 0xC000000000000000;
    }
    swift_bridgeObjectRelease();
    *(_QWORD *)(v32 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    v23 = (_QWORD *)(v3[6] + 16 * i);
    *v23 = v34;
    v23[1] = v17;
    v24 = (uint64_t *)(v3[7] + 16 * i);
    *v24 = v21;
    v24[1] = v22;
    v25 = v3[2];
    v26 = __OFADD__(v25, 1);
    v27 = v25 + 1;
    if (v26)
      goto LABEL_33;
    v3[2] = v27;
    v4 = v33;
    if (v8)
      goto LABEL_4;
LABEL_5:
    v11 = v4 + 1;
    if (__OFADD__(v4, 1))
      goto LABEL_34;
    if (v11 >= v31)
      break;
    v12 = *(_QWORD *)(v30 + 8 * v11);
    ++v4;
    if (!v12)
    {
      v4 = v11 + 1;
      if (v11 + 1 >= v31)
        return v3;
      v12 = *(_QWORD *)(v30 + 8 * v4);
      if (!v12)
      {
        v4 = v11 + 2;
        if (v11 + 2 >= v31)
          return v3;
        v12 = *(_QWORD *)(v30 + 8 * v4);
        if (!v12)
        {
          v13 = v11 + 3;
          if (v13 >= v31)
            return v3;
          v12 = *(_QWORD *)(v30 + 8 * v13);
          if (v12)
          {
            v4 = v13;
            goto LABEL_18;
          }
          while (1)
          {
            v4 = v13 + 1;
            if (__OFADD__(v13, 1))
              break;
            if (v4 >= v31)
              return v3;
            v12 = *(_QWORD *)(v30 + 8 * v4);
            ++v13;
            if (v12)
              goto LABEL_18;
          }
LABEL_35:
          __break(1u);
        }
      }
    }
LABEL_18:
    v8 = (v12 - 1) & v12;
  }
  return v3;
}

uint64_t sub_1CA28B0C8(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  _QWORD v10[2];

  result = *a1;
  if (!result)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF94B828);
    v10[0] = a3;
    v10[1] = a2();
    result = MEMORY[0x1CAA4F1A4](a4, v9, v10);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1CA28B13C()
{
  unint64_t result;

  result = qword_1EF94B858;
  if (!qword_1EF94B858)
  {
    result = MEMORY[0x1CAA4F1A4](MEMORY[0x1E0CB0350], MEMORY[0x1E0CB0338]);
    atomic_store(result, (unint64_t *)&qword_1EF94B858);
  }
  return result;
}

uint64_t destroy for CachedEventFeatures()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *_s11PhotosGraph19CachedEventFeaturesVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for CachedEventFeatures(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for CachedEventFeatures(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for CachedEventFeatures(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 24))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CachedEventFeatures(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for CachedEventFeatures()
{
  return &type metadata for CachedEventFeatures;
}

void sub_1CA28B328(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  sub_1CA28B33C(a1, a2, a3, a4, &qword_1EF94B378);
}

void sub_1CA28B33C(uint64_t a1, uint64_t a2, char a3, uint64_t a4, unint64_t *a5)
{
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  char v12;
  uint64_t v13;
  id v14;
  char v15;
  id v16;
  unint64_t *v17;

  v7 = a1;
  if ((a4 & 0xC000000000000001) == 0)
  {
    if ((a3 & 1) != 0)
      goto LABEL_13;
    if (a1 < 0 || 1 << *(_BYTE *)(a4 + 32) <= a1)
    {
      __break(1u);
    }
    else if (((*(_QWORD *)(a4 + (((unint64_t)a1 >> 3) & 0xFFFFFFFFFFFFF8) + 56) >> a1) & 1) != 0)
    {
      if (*(_DWORD *)(a4 + 36) == (_DWORD)a2)
        goto LABEL_20;
      __break(1u);
LABEL_13:
      if (sub_1CA85BDEC() == *(_DWORD *)(a4 + 36))
      {
        sub_1CA85BDF8();
        sub_1CA24EEC0(0, a5);
        swift_unknownObjectRetain();
        swift_dynamicCast();
        a5 = v17;
        swift_unknownObjectRelease();
        v9 = sub_1CA85BC78();
        v10 = -1 << *(_BYTE *)(a4 + 32);
        v7 = v9 & ~v10;
        if (((*(_QWORD *)(a4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) != 0)
        {
          v11 = *(id *)(*(_QWORD *)(a4 + 48) + 8 * v7);
          v12 = sub_1CA85BC84();

          if ((v12 & 1) == 0)
          {
            v13 = ~v10;
            do
            {
              v7 = (v7 + 1) & v13;
              if (((*(_QWORD *)(a4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) == 0)
                goto LABEL_24;
              v14 = *(id *)(*(_QWORD *)(a4 + 48) + 8 * v7);
              v15 = sub_1CA85BC84();

            }
            while ((v15 & 1) == 0);
          }

LABEL_20:
          v16 = *(id *)(*(_QWORD *)(a4 + 48) + 8 * v7);
          return;
        }
LABEL_24:

        __break(1u);
        goto LABEL_25;
      }
LABEL_23:
      __break(1u);
      goto LABEL_24;
    }
    __break(1u);
    goto LABEL_23;
  }
  if ((a3 & 1) == 0)
  {
LABEL_25:
    __break(1u);
    return;
  }
  if (a4 < 0)
    v8 = a4;
  else
    v8 = a4 & 0xFFFFFFFFFFFFFF8;
  MEMORY[0x1CAA4DC80](a1, a2, v8);
  sub_1CA24EEC0(0, a5);
  swift_unknownObjectRetain();
  swift_dynamicCast();
  swift_unknownObjectRelease();
}

uint64_t sub_1CA28B5A0(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 56);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2)
    v7 = 2;
  v8 = v7 - 2;
  v9 = (unint64_t *)(a1 + 72);
  v2 = 64;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

_QWORD *sub_1CA28B628(_QWORD *result, uint64_t a2, int a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  if (a2 < 0 || 1 << *(_BYTE *)(a5 + 32) <= a2)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(_QWORD *)(a5 + (((unint64_t)a2 >> 3) & 0xFFFFFFFFFFFFF8) + 64) >> a2) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a5 + 36) == a3)
  {
    v5 = *(_QWORD *)(*(_QWORD *)(a5 + 48) + 16 * a2);
    *result = *(_QWORD *)(*(_QWORD *)(a5 + 56) + 8 * a2);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return (_QWORD *)v5;
  }
LABEL_8:
  __break(1u);
  return result;
}

uint64_t sub_1CA28B6BC(uint64_t result, int a2, uint64_t a3, uint64_t a4)
{
  if (result < 0 || 1 << *(_BYTE *)(a4 + 32) <= result)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(_QWORD *)(a4 + (((unint64_t)result >> 3) & 0xFFFFFFFFFFFFF8) + 56) >> result) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a4 + 36) == a2)
    return *(_QWORD *)(*(_QWORD *)(a4 + 48) + 16 * result);
LABEL_8:
  __break(1u);
  return result;
}

uint64_t sub_1CA28B714(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_retain();
  }
  return swift_retain();
}

unint64_t sub_1CA28B758()
{
  unint64_t result;

  result = qword_1EF94B870;
  if (!qword_1EF94B870)
  {
    result = MEMORY[0x1CAA4F1A4](MEMORY[0x1E0CB0310], MEMORY[0x1E0CB0338]);
    atomic_store(result, (unint64_t *)&qword_1EF94B870);
  }
  return result;
}

uint64_t sub_1CA28B79C()
{
  sub_1CA85C368();
  sub_1CA85C3A4();
  return sub_1CA85C3B0();
}

uint64_t sub_1CA28B7DC()
{
  return sub_1CA85C3A4();
}

uint64_t sub_1CA28B804()
{
  sub_1CA85C368();
  sub_1CA85C3A4();
  return sub_1CA85C3B0();
}

unint64_t sub_1CA28B844()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF94B878;
  if (!qword_1EF94B878)
  {
    v1 = type metadata accessor for PublicEvent();
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8D52A0, v1);
    atomic_store(result, (unint64_t *)&qword_1EF94B878);
  }
  return result;
}

uint64_t type metadata accessor for PublicEvent()
{
  uint64_t result;

  result = qword_1EF94B8E0;
  if (!qword_1EF94B8E0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1CA28B8C8()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;

  __swift_instantiateConcreteTypeFromMangledName(qword_1EF94B880);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1CA8D5290;
  v1 = (void *)*MEMORY[0x1E0D26B68];
  v2 = (void *)*MEMORY[0x1E0D26B80];
  *(_QWORD *)(v0 + 32) = *MEMORY[0x1E0D26B68];
  *(_QWORD *)(v0 + 40) = v2;
  v3 = (void *)*MEMORY[0x1E0D26B78];
  v4 = (void *)*MEMORY[0x1E0D26B70];
  *(_QWORD *)(v0 + 48) = *MEMORY[0x1E0D26B78];
  *(_QWORD *)(v0 + 56) = v4;
  v5 = (void *)*MEMORY[0x1E0D26B60];
  v6 = (void *)*MEMORY[0x1E0D26B48];
  *(_QWORD *)(v0 + 64) = *MEMORY[0x1E0D26B60];
  *(_QWORD *)(v0 + 72) = v6;
  v7 = (void *)*MEMORY[0x1E0D26B30];
  v8 = (void *)*MEMORY[0x1E0D26B28];
  *(_QWORD *)(v0 + 80) = *MEMORY[0x1E0D26B30];
  *(_QWORD *)(v0 + 88) = v8;
  v9 = v1;
  v10 = v2;
  v11 = v3;
  v12 = v4;
  v13 = v5;
  v14 = v6;
  v15 = v7;
  v16 = v8;
  return v0;
}

uint64_t *sub_1CA28B9B4(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    a1[2] = a2[2];
    v7 = a3[6];
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_1CA85A148();
    v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
    swift_bridgeObjectRetain();
    v11(v8, v9, v10);
    v12 = a3[8];
    *(uint64_t *)((char *)v4 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
    *(uint64_t *)((char *)v4 + v12) = *(uint64_t *)((char *)a2 + v12);
    v13 = a3[10];
    *(uint64_t *)((char *)v4 + a3[9]) = *(uint64_t *)((char *)a2 + a3[9]);
    *(uint64_t *)((char *)v4 + v13) = *(uint64_t *)((char *)a2 + v13);
    v14 = a3[12];
    *(uint64_t *)((char *)v4 + a3[11]) = *(uint64_t *)((char *)a2 + a3[11]);
    *(_OWORD *)((char *)v4 + v14) = *(_OWORD *)((char *)a2 + v14);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_1CA28BAB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 24);
  v5 = sub_1CA85A148();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1CA28BB2C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v6 = a3[6];
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_1CA85A148();
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  v10(v7, v8, v9);
  v11 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  *(_QWORD *)(a1 + v11) = *(_QWORD *)(a2 + v11);
  v12 = a3[10];
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  *(_QWORD *)(a1 + v12) = *(_QWORD *)(a2 + v12);
  v13 = a3[12];
  *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)(a2 + a3[11]);
  *(_OWORD *)(a1 + v13) = *(_OWORD *)(a2 + v13);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *sub_1CA28BC04(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;

  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[6];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1CA85A148();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + a3[8]) = *(_QWORD *)((char *)a2 + a3[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + a3[9]) = *(_QWORD *)((char *)a2 + a3[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + a3[10]) = *(_QWORD *)((char *)a2 + a3[10]);
  *(_QWORD *)((char *)a1 + a3[11]) = *(_QWORD *)((char *)a2 + a3[11]);
  v10 = a3[12];
  v11 = (_QWORD *)((char *)a1 + v10);
  v12 = (_QWORD *)((char *)a2 + v10);
  *v11 = *v12;
  v11[1] = v12[1];
  return a1;
}

uint64_t sub_1CA28BD18(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  v6 = a3[6];
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_1CA85A148();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  *(_QWORD *)(a1 + v10) = *(_QWORD *)(a2 + v10);
  v11 = a3[10];
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  *(_QWORD *)(a1 + v11) = *(_QWORD *)(a2 + v11);
  v12 = a3[12];
  *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)(a2 + a3[11]);
  *(_OWORD *)(a1 + v12) = *(_OWORD *)(a2 + v12);
  return a1;
}

uint64_t sub_1CA28BDC8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  v6 = a3[6];
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_1CA85A148();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  swift_bridgeObjectRelease();
  v10 = a3[11];
  *(_QWORD *)(a1 + a3[10]) = *(_QWORD *)(a2 + a3[10]);
  *(_QWORD *)(a1 + v10) = *(_QWORD *)(a2 + v10);
  *(_OWORD *)(a1 + a3[12]) = *(_OWORD *)(a2 + a3[12]);
  return a1;
}

uint64_t sub_1CA28BEA0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CA28BEAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 16);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1CA85A148();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v8);
  }
}

uint64_t sub_1CA28BF28()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CA28BF34(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 16) = (a2 - 1);
  }
  else
  {
    v7 = sub_1CA85A148();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

uint64_t sub_1CA28BFA8()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1CA85A148();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t static MusicForYouError.== infix(_:_:)()
{
  return 1;
}

uint64_t MusicForYouError.hash(into:)()
{
  return sub_1CA85C374();
}

uint64_t MusicForYouError.hashValue.getter()
{
  sub_1CA85C368();
  sub_1CA85C374();
  return sub_1CA85C3B0();
}

uint64_t sub_1CA28C0B4()
{
  return 1;
}

uint64_t sub_1CA28C0BC()
{
  sub_1CA85C368();
  sub_1CA85C374();
  return sub_1CA85C3B0();
}

uint64_t sub_1CA28C0FC()
{
  return sub_1CA85C374();
}

uint64_t sub_1CA28C120()
{
  sub_1CA85C368();
  sub_1CA85C374();
  return sub_1CA85C3B0();
}

uint64_t static FavoritesMusicElector.songSourceIdentifier.getter()
{
  return 0x657469726F766166;
}

uint64_t static FavoritesMusicElector.electMusic(for:context:progressReporter:)()
{
  return sub_1CA28C28C();
}

uint64_t sub_1CA28C194()
{
  return 0x657469726F766166;
}

uint64_t sub_1CA28C1B0()
{
  return sub_1CA28C28C();
}

uint64_t static ChillMusicElector.songSourceIdentifier.getter()
{
  return 0x6C6C696863;
}

uint64_t static ChillMusicElector.electMusic(for:context:progressReporter:)(uint64_t a1, uint64_t a2)
{
  return sub_1CA28C450(a2);
}

uint64_t sub_1CA28C1FC()
{
  return 0x6C6C696863;
}

uint64_t sub_1CA28C210(uint64_t a1, uint64_t a2)
{
  return sub_1CA28C450(a2);
}

uint64_t static GetUpMusicElector.songSourceIdentifier.getter()
{
  return 0x7055746567;
}

uint64_t static GetUpMusicElector.electMusic(for:context:progressReporter:)(uint64_t a1, uint64_t a2)
{
  return sub_1CA28C650(a2);
}

uint64_t sub_1CA28C25C()
{
  return 0x7055746567;
}

uint64_t sub_1CA28C270(uint64_t a1, uint64_t a2)
{
  return sub_1CA28C650(a2);
}

uint64_t sub_1CA28C28C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6[2];
  __int16 v7;
  _BYTE v8[40];

  if (qword_1ED872FC0 != -1)
    swift_once();
  sub_1CA2E4280("Favorites Music Elector", 23, 2u, 0, 1, qword_1ED87D110, (uint64_t)v8);
  sub_1CA28C9B4();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8727B0);
  v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1CA8D51C0;
  *(_QWORD *)(v1 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v1 + 64) = sub_1CA2891BC();
  *(_QWORD *)(v1 + 32) = 0x696669746E656469;
  *(_QWORD *)(v1 + 40) = 0xEA00000000007265;
  *(_QWORD *)(v1 + 96) = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED872270);
  *(_QWORD *)(v1 + 104) = sub_1CA28C9F0();
  *(_QWORD *)(v1 + 72) = &unk_1E83FCFF0;
  v2 = (void *)sub_1CA85BA80();
  v6[0] = 0;
  v6[1] = 0;
  v7 = 1;
  v3 = sub_1CA2C645C((uint64_t)v2, 0, v6);

  if (v0)
  {
    swift_release();
    return swift_release();
  }
  else
  {
    sub_1CA2E0C94(0);
    v5 = sub_1CA287D60(v3);
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    return v5;
  }
}

uint64_t sub_1CA28C450(uint64_t a1)
{
  uint64_t v1;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10[2];
  __int16 v11;
  _BYTE v12[40];

  v3 = (_BYTE *)(a1 + OBJC_IVAR___PGMusicCuratorContext_allowChillMixElection);
  swift_beginAccess();
  if (*v3 != 1)
    return MEMORY[0x1E0DEE9E8];
  if (qword_1ED872FC0 != -1)
    swift_once();
  sub_1CA2E4280("Chill Music Elector", 19, 2u, 0, 1, qword_1ED87D110, (uint64_t)v12);
  v4 = *(_QWORD *)(a1 + OBJC_IVAR___PGMusicCuratorContext_cache);
  sub_1CA28C9B4();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8727B0);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1CA8D51C0;
  *(_QWORD *)(v5 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v5 + 64) = sub_1CA2891BC();
  *(_QWORD *)(v5 + 32) = 0x696669746E656469;
  *(_QWORD *)(v5 + 40) = 0xEA00000000007265;
  *(_QWORD *)(v5 + 96) = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED872270);
  *(_QWORD *)(v5 + 104) = sub_1CA28C9F0();
  *(_QWORD *)(v5 + 72) = &unk_1E83FD020;
  v6 = (void *)sub_1CA85BA80();
  v10[0] = 0;
  v10[1] = 0;
  v11 = 1;
  v7 = v4;
  v8 = sub_1CA2C645C((uint64_t)v6, 0, v10);

  if (!v1)
  {
    sub_1CA2E0C94(0);
    v7 = sub_1CA287D60(v8);
    swift_bridgeObjectRelease();
  }
  swift_release();
  swift_release();
  return v7;
}

uint64_t sub_1CA28C650(uint64_t a1)
{
  uint64_t v1;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10[2];
  __int16 v11;
  _BYTE v12[40];

  v3 = (_BYTE *)(a1 + OBJC_IVAR___PGMusicCuratorContext_allowGetUpMixElection);
  swift_beginAccess();
  if (*v3 != 1)
    return MEMORY[0x1E0DEE9E8];
  if (qword_1ED872FC0 != -1)
    swift_once();
  sub_1CA2E4280("Get Up Music Elector", 20, 2u, 0, 1, qword_1ED87D110, (uint64_t)v12);
  v4 = *(_QWORD *)(a1 + OBJC_IVAR___PGMusicCuratorContext_cache);
  sub_1CA28C9B4();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8727B0);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1CA8D51C0;
  *(_QWORD *)(v5 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v5 + 64) = sub_1CA2891BC();
  *(_QWORD *)(v5 + 32) = 0x696669746E656469;
  *(_QWORD *)(v5 + 40) = 0xEA00000000007265;
  *(_QWORD *)(v5 + 96) = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED872270);
  *(_QWORD *)(v5 + 104) = sub_1CA28C9F0();
  *(_QWORD *)(v5 + 72) = &unk_1E83FD050;
  v6 = (void *)sub_1CA85BA80();
  v10[0] = 0;
  v10[1] = 0;
  v11 = 1;
  v7 = v4;
  v8 = sub_1CA2C645C((uint64_t)v6, 0, v10);

  if (!v1)
  {
    sub_1CA2E0C94(0);
    v7 = sub_1CA287D60(v8);
    swift_bridgeObjectRelease();
  }
  swift_release();
  swift_release();
  return v7;
}

unint64_t sub_1CA28C854()
{
  unint64_t result;

  result = qword_1EF94B938;
  if (!qword_1EF94B938)
  {
    result = MEMORY[0x1CAA4F1A4](&protocol conformance descriptor for MusicForYouError, &type metadata for MusicForYouError);
    atomic_store(result, (unint64_t *)&qword_1EF94B938);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for MusicForYouError(unsigned int *a1, int a2)
{
  int v2;
  int v3;

  if (!a2)
    return 0;
  if ((a2 + 1) >= 0x10000)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) < 0x100)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
    return *a1;
  if (v3 == 2)
    return *(unsigned __int16 *)a1;
  return *(unsigned __int8 *)a1;
}

uint64_t storeEnumTagSinglePayload for MusicForYouError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1CA28C928 + 4 * byte_1CA8D5350[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1CA28C948 + 4 * byte_1CA8D5355[v4]))();
}

_BYTE *sub_1CA28C928(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1CA28C948(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1CA28C950(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1CA28C958(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1CA28C960(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1CA28C968(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for MusicForYouError()
{
  return &type metadata for MusicForYouError;
}

ValueMetadata *type metadata accessor for FavoritesMusicElector()
{
  return &type metadata for FavoritesMusicElector;
}

ValueMetadata *type metadata accessor for ChillMusicElector()
{
  return &type metadata for ChillMusicElector;
}

ValueMetadata *type metadata accessor for GetUpMusicElector()
{
  return &type metadata for GetUpMusicElector;
}

unint64_t sub_1CA28C9B4()
{
  unint64_t result;

  result = qword_1ED872320;
  if (!qword_1ED872320)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED872320);
  }
  return result;
}

unint64_t sub_1CA28C9F0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED872290;
  if (!qword_1ED872290)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED872270);
    result = MEMORY[0x1CAA4F1A4](MEMORY[0x1E0CB1B18], v1);
    atomic_store(result, (unint64_t *)&qword_1ED872290);
  }
  return result;
}

uint64_t sub_1CA28CA3C()
{
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for PGSharedLibrarySimulationContext()
{
  return objc_opt_self();
}

_UNKNOWN **sub_1CA28CA80()
{
  return &off_1E8404968;
}

_UNKNOWN **sub_1CA28CA8C()
{
  return &off_1E84031F8;
}

uint64_t sub_1CA28CA98(uint64_t *a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *a1;
  v4 = *v2;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(*(_QWORD *)a2 + 32);
  *(_QWORD *)(v4 + 24) = v3;
  swift_retain();
  return swift_release();
}

void sub_1CA28CAD0()
{
  sub_1CA3FB828(0, 23, 0);
  __asm { BR              X8 }
}

void *static EventLabel.allCases.getter()
{
  return &unk_1E83FCFB8;
}

uint64_t EventLabel.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1CA28CEF4 + 4 * byte_1CA8D551B[*v0]))(0x6E656D6573756D61, 0xED00006B72615074);
}

uint64_t sub_1CA28CEF4()
{
  return 0x73726576696E6E61;
}

uint64_t sub_1CA28CF14()
{
  return 0x676E696863616562;
}

uint64_t sub_1CA28CF2C()
{
  return 0x7961646874726962;
}

uint64_t sub_1CA28CF44()
{
  return 0x7361666B61657262;
}

uint64_t sub_1CA28CF64()
{
  return 0x74617262656C6563;
}

uint64_t sub_1CA28CF84()
{
  return 0x676E69626D696C63;
}

uint64_t sub_1CA28CF9C()
{
  return 0x747265636E6F63;
}

uint64_t sub_1CA28CFB4()
{
  return 0x65636E6164;
}

uint64_t sub_1CA28CFC8()
{
  return 0x72656E6E6964;
}

uint64_t sub_1CA28CFDC()
{
  return 0x676E69766964;
}

uint64_t sub_1CA28CFF0()
{
  return 0x6961747265746E65;
}

unint64_t sub_1CA28D014()
{
  return 0xD000000000000011;
}

uint64_t sub_1CA28D030()
{
  return 0x6E69726568746167;
}

uint64_t sub_1CA28D04C()
{
  return 0x676E696B6968;
}

uint64_t sub_1CA28D060()
{
  return 0x68636E756CLL;
}

uint64_t sub_1CA28D074()
{
  return 0x6D756573756DLL;
}

uint64_t sub_1CA28D088()
{
  return 0x74754F746867696ELL;
}

uint64_t sub_1CA28D0A0()
{
  return 0x616D726F66726570;
}

uint64_t sub_1CA28D0C0()
{
  return 0x72657461656874;
}

uint64_t sub_1CA28D0D8()
{
  return 0x676E6964646577;
}

uint64_t sub_1CA28D0F0()
{
  return 0x70537265746E6977;
}

uint64_t sub_1CA28D110()
{
  return 0x65764574726F7073;
}

Swift::String __swiftcall EventLabel.toGraphNodeLabel()()
{
  uint64_t v0;
  void *v1;
  Swift::String result;

  v0 = sub_1CA85B534();
  result._object = v1;
  result._countAndFlagsBits = v0;
  return result;
}

PhotosGraph::EventLabel_optional __swiftcall EventLabel.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  uint64_t v3;
  PhotosGraph::EventLabel_optional result;
  char v5;
  char v6;

  v2 = v1;
  v3 = sub_1CA85C2A8();
  result.value = swift_bridgeObjectRelease();
  v5 = 0;
  v6 = 5;
  switch(v3)
  {
    case 0:
      goto LABEL_7;
    case 1:
      v5 = 1;
      goto LABEL_7;
    case 2:
      v5 = 2;
      goto LABEL_7;
    case 3:
      v5 = 3;
      goto LABEL_7;
    case 4:
      v5 = 4;
LABEL_7:
      v6 = v5;
      break;
    case 5:
      break;
    case 6:
      v6 = 6;
      break;
    case 7:
      v6 = 7;
      break;
    case 8:
      v6 = 8;
      break;
    case 9:
      v6 = 9;
      break;
    case 10:
      v6 = 10;
      break;
    case 11:
      v6 = 11;
      break;
    case 12:
      v6 = 12;
      break;
    case 13:
      v6 = 13;
      break;
    case 14:
      v6 = 14;
      break;
    case 15:
      v6 = 15;
      break;
    case 16:
      v6 = 16;
      break;
    case 17:
      v6 = 17;
      break;
    case 18:
      v6 = 18;
      break;
    case 19:
      v6 = 19;
      break;
    case 20:
      v6 = 20;
      break;
    case 21:
      v6 = 21;
      break;
    case 22:
      v6 = 22;
      break;
    default:
      v6 = 23;
      break;
  }
  *v2 = v6;
  return result;
}

uint64_t sub_1CA28D270()
{
  return sub_1CA32980C();
}

unint64_t sub_1CA28D280()
{
  unint64_t result;

  result = qword_1EF94BA58;
  if (!qword_1EF94BA58)
  {
    result = MEMORY[0x1CAA4F1A4](&protocol conformance descriptor for EventLabel, &type metadata for EventLabel);
    atomic_store(result, (unint64_t *)&qword_1EF94BA58);
  }
  return result;
}

uint64_t sub_1CA28D2C4()
{
  sub_1CA85C368();
  EventLabel.rawValue.getter();
  sub_1CA85B4B0();
  swift_bridgeObjectRelease();
  return sub_1CA85C3B0();
}

uint64_t sub_1CA28D328()
{
  EventLabel.rawValue.getter();
  sub_1CA85B4B0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1CA28D378()
{
  sub_1CA85C368();
  EventLabel.rawValue.getter();
  sub_1CA85B4B0();
  swift_bridgeObjectRelease();
  return sub_1CA85C3B0();
}

PhotosGraph::EventLabel_optional sub_1CA28D3D8(Swift::String *a1)
{
  return EventLabel.init(rawValue:)(*a1);
}

uint64_t sub_1CA28D3E4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = EventLabel.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unint64_t sub_1CA28D40C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF94BA60;
  if (!qword_1EF94BA60)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF94BA68);
    result = MEMORY[0x1CAA4F1A4](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF94BA60);
  }
  return result;
}

void sub_1CA28D458(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E83FCFB8;
}

uint64_t sub_1CA28D468()
{
  sub_1CA28D6B8();
  return sub_1CA85B750();
}

uint64_t sub_1CA28D4B4()
{
  sub_1CA28D6B8();
  return sub_1CA85B774();
}

uint64_t sub_1CA28D4F4()
{
  sub_1CA28D6B8();
  return sub_1CA85B780();
}

uint64_t getEnumTagSinglePayload for EventLabel(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xEA)
    goto LABEL_17;
  if (a2 + 22 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 22) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 22;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 22;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 22;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x17;
  v8 = v6 - 23;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for EventLabel(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 22 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 22) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xEA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xE9)
    return ((uint64_t (*)(void))((char *)&loc_1CA28D638 + 4 * byte_1CA8D554E[v4]))();
  *a1 = a2 + 22;
  return ((uint64_t (*)(void))((char *)sub_1CA28D66C + 4 * byte_1CA8D5549[v4]))();
}

uint64_t sub_1CA28D66C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CA28D674(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1CA28D67CLL);
  return result;
}

uint64_t sub_1CA28D688(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1CA28D690);
  *(_BYTE *)result = a2 + 22;
  return result;
}

uint64_t sub_1CA28D694(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CA28D69C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for EventLabel()
{
  return &type metadata for EventLabel;
}

unint64_t sub_1CA28D6B8()
{
  unint64_t result;

  result = qword_1EF94BA70;
  if (!qword_1EF94BA70)
  {
    result = MEMORY[0x1CAA4F1A4](&protocol conformance descriptor for EventLabel, &type metadata for EventLabel);
    atomic_store(result, (unint64_t *)&qword_1EF94BA70);
  }
  return result;
}

void sub_1CA28D6FC(uint64_t a1, char a2, _QWORD *a3)
{
  _BYTE *v4;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  unint64_t v11;
  char v12;
  uint64_t v13;
  _BOOL8 v14;
  BOOL v15;
  uint64_t v16;
  char v17;
  char v18;
  void *v19;
  id v20;
  unint64_t v21;
  _QWORD *v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  _QWORD *v27;
  unint64_t v28;
  char v29;
  uint64_t v30;
  _BOOL8 v31;
  uint64_t v32;
  char v33;
  _QWORD *v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;

  LOBYTE(v4) = a2;
  v6 = *(_QWORD *)(a1 + 16);
  swift_bridgeObjectRetain();
  if (!v6)
    goto LABEL_23;
  LOBYTE(v7) = *(_BYTE *)(a1 + 48);
  v9 = *(_QWORD *)(a1 + 32);
  v8 = *(_QWORD *)(a1 + 40);
  swift_bridgeObjectRetain();
  if (!v8)
    goto LABEL_23;
  v10 = (_QWORD *)*a3;
  v11 = sub_1CA25081C(v9, v8);
  v13 = v10[2];
  v14 = (v12 & 1) == 0;
  v15 = __OFADD__(v13, v14);
  v16 = v13 + v14;
  if (v15)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v17 = v12;
  if (v10[3] < v16)
  {
    sub_1CA253468(v16, v4 & 1);
    v11 = sub_1CA25081C(v9, v8);
    if ((v17 & 1) == (v18 & 1))
      goto LABEL_8;
LABEL_6:
    v11 = sub_1CA85C2E4();
    __break(1u);
  }
  if ((v4 & 1) != 0)
  {
LABEL_8:
    if ((v17 & 1) != 0)
      goto LABEL_9;
    goto LABEL_12;
  }
  v21 = v11;
  sub_1CA260C20();
  v11 = v21;
  if ((v17 & 1) != 0)
  {
LABEL_9:
    v19 = (void *)swift_allocError();
    swift_willThrow();
    v20 = v19;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED872BA0);
    if ((swift_dynamicCast() & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();

      return;
    }
    goto LABEL_28;
  }
LABEL_12:
  v22 = (_QWORD *)*a3;
  *(_QWORD *)(*a3 + 8 * (v11 >> 6) + 64) |= 1 << v11;
  v23 = (uint64_t *)(v22[6] + 16 * v11);
  *v23 = v9;
  v23[1] = v8;
  *(_BYTE *)(v22[7] + v11) = v7;
  v24 = v22[2];
  v15 = __OFADD__(v24, 1);
  v25 = v24 + 1;
  if (v15)
  {
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    sub_1CA85BEC4();
    sub_1CA85B624();
    sub_1CA85BFCC();
    sub_1CA85B624();
    sub_1CA85C044();
    __break(1u);
    return;
  }
  v22[2] = v25;
  if (v6 != 1)
  {
    v4 = (_BYTE *)(a1 + 72);
    v7 = 1;
    while (v7 < *(_QWORD *)(a1 + 16))
    {
      v26 = *v4;
      v9 = *((_QWORD *)v4 - 2);
      v8 = *((_QWORD *)v4 - 1);
      swift_bridgeObjectRetain();
      if (!v8)
        goto LABEL_23;
      v27 = (_QWORD *)*a3;
      v28 = sub_1CA25081C(v9, v8);
      v30 = v27[2];
      v31 = (v29 & 1) == 0;
      v15 = __OFADD__(v30, v31);
      v32 = v30 + v31;
      if (v15)
        goto LABEL_25;
      v17 = v29;
      if (v27[3] < v32)
      {
        sub_1CA253468(v32, 1);
        v28 = sub_1CA25081C(v9, v8);
        if ((v17 & 1) != (v33 & 1))
          goto LABEL_6;
      }
      if ((v17 & 1) != 0)
        goto LABEL_9;
      v34 = (_QWORD *)*a3;
      *(_QWORD *)(*a3 + 8 * (v28 >> 6) + 64) |= 1 << v28;
      v35 = (uint64_t *)(v34[6] + 16 * v28);
      *v35 = v9;
      v35[1] = v8;
      *(_BYTE *)(v34[7] + v28) = v26;
      v36 = v34[2];
      v15 = __OFADD__(v36, 1);
      v37 = v36 + 1;
      if (v15)
        goto LABEL_26;
      ++v7;
      v34[2] = v37;
      v4 += 24;
      if (v6 == v7)
        goto LABEL_23;
    }
    goto LABEL_27;
  }
LABEL_23:
  swift_bridgeObjectRelease_n();
}

ValueMetadata *type metadata accessor for MoodKeywordScoreComputer()
{
  return &type metadata for MoodKeywordScoreComputer;
}

float sub_1CA28DA94(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_1CA28DAAC(a1, a2, a3, (float (*)(void))sub_1CA28DC84);
}

float sub_1CA28DAA0(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_1CA28DAAC(a1, a2, a3, (float (*)(void))sub_1CA28DE80);
}

float sub_1CA28DAAC(_QWORD *a1, uint64_t a2, uint64_t a3, float (*a4)(void))
{
  uint64_t v5;
  uint64_t v6;
  float v7;

  v5 = a1[3];
  v6 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v5);
  (*(void (**)(uint64_t, uint64_t))(v6 + 16))(v5, v6);
  v7 = a4();
  swift_bridgeObjectRelease();
  return v7;
}

float sub_1CA28DB20(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1CA28DB38(a1, a2, a3, a4, a5, (float (*)(void))sub_1CA28E1E8);
}

float sub_1CA28DB2C(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1CA28DB38(a1, a2, a3, a4, a5, (float (*)(void))sub_1CA28E454);
}

float sub_1CA28DB38(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, float (*a6)(void))
{
  uint64_t v7;
  uint64_t v8;
  float v9;

  v7 = a1[3];
  v8 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v7);
  (*(void (**)(uint64_t, uint64_t))(v8 + 24))(v7, v8);
  v9 = a6();
  swift_bridgeObjectRelease();
  return v9;
}

float sub_1CA28DBB4()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;

  if (qword_1ED872118 != -1)
    swift_once();
  v0 = sub_1CA85B348();
  __swift_project_value_buffer(v0, (uint64_t)qword_1ED87D010);
  v1 = sub_1CA85B330();
  v2 = sub_1CA85BAE0();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v3 = 0;
    _os_log_impl(&dword_1CA237000, v1, v2, "Don't expect to be using MoodKeywordScoreComputer", v3, 2u);
    MEMORY[0x1CAA4F27C](v3, -1, -1);
  }

  return 1.0;
}

uint64_t sub_1CA28DC84(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  float v8;
  float v9;
  int64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  uint64_t v25;

  result = sub_1CA290460(0x6169636570534D5FLL, 0xE90000000000006CLL, a1);
  if ((result & 1) != 0)
    return result;
  v5 = *(_QWORD *)(a2 + 16);
  if (!v5)
    return result;
  v6 = a1 + 56;
  v25 = a2 + 32;
  result = swift_bridgeObjectRetain();
  v7 = 0;
  v8 = 0.0;
  v9 = 1.0;
  while (2)
  {
    v10 = 0;
    v11 = (uint64_t *)(v25 + 16 * v7);
    v12 = *v11;
    v13 = v11[1];
    ++v7;
    v14 = 1 << *(_BYTE *)(a1 + 32);
    if (v14 < 64)
      v15 = ~(-1 << v14);
    else
      v15 = -1;
    v16 = v15 & *(_QWORD *)(a1 + 56);
    v17 = (unint64_t)(v14 + 63) >> 6;
    while (1)
    {
      if (v16)
      {
        v18 = __clz(__rbit64(v16));
        v16 &= v16 - 1;
        v19 = v18 | (v10 << 6);
        goto LABEL_26;
      }
      v20 = v10 + 1;
      if (__OFADD__(v10, 1))
      {
        __break(1u);
LABEL_35:
        __break(1u);
        return result;
      }
      if (v20 >= v17)
        goto LABEL_4;
      v21 = *(_QWORD *)(v6 + 8 * v20);
      ++v10;
      if (!v21)
      {
        v10 = v20 + 1;
        if (v20 + 1 >= v17)
          goto LABEL_4;
        v21 = *(_QWORD *)(v6 + 8 * v10);
        if (!v21)
        {
          v10 = v20 + 2;
          if (v20 + 2 >= v17)
            goto LABEL_4;
          v21 = *(_QWORD *)(v6 + 8 * v10);
          if (!v21)
            break;
        }
      }
LABEL_25:
      v16 = (v21 - 1) & v21;
      v19 = __clz(__rbit64(v21)) + (v10 << 6);
LABEL_26:
      v23 = (_QWORD *)(*(_QWORD *)(a1 + 48) + 16 * v19);
      if (v12 != *v23 || v13 != v23[1])
      {
        result = sub_1CA85C284();
        if ((result & 1) == 0)
          continue;
      }
      v8 = v9 + v8;
    }
    v22 = v20 + 3;
    if (v22 < v17)
    {
      v21 = *(_QWORD *)(v6 + 8 * v22);
      if (!v21)
      {
        while (1)
        {
          v10 = v22 + 1;
          if (__OFADD__(v22, 1))
            goto LABEL_35;
          if (v10 >= v17)
            goto LABEL_4;
          v21 = *(_QWORD *)(v6 + 8 * v10);
          ++v22;
          if (v21)
            goto LABEL_25;
        }
      }
      v10 = v22;
      goto LABEL_25;
    }
LABEL_4:
    v9 = v9 * 0.9;
    if (v7 != v5)
      continue;
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1CA28DE80(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int64_t v7;
  uint64_t result;
  char v9;
  int64_t v10;
  int64_t v11;
  uint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int64_t v18;
  int64_t v19;
  int64_t v20;
  uint64_t v21;
  int64_t v22;
  uint64_t v23;

  v3 = a1 + 56;
  v4 = 1 << *(_BYTE *)(a1 + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(a1 + 56);
  v7 = (unint64_t)(v4 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v9 = 0;
  v10 = 0;
  while (1)
  {
    if (v6)
    {
      v6 &= v6 - 1;
      goto LABEL_5;
    }
    v11 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
LABEL_51:
      __break(1u);
LABEL_52:
      __break(1u);
LABEL_53:
      __break(1u);
      return result;
    }
    if (v11 >= v7)
      goto LABEL_21;
    v12 = *(_QWORD *)(v3 + 8 * v11);
    ++v10;
    if (!v12)
    {
      v10 = v11 + 1;
      if (v11 + 1 >= v7)
        goto LABEL_21;
      v12 = *(_QWORD *)(v3 + 8 * v10);
      if (!v12)
      {
        v10 = v11 + 2;
        if (v11 + 2 >= v7)
          goto LABEL_21;
        v12 = *(_QWORD *)(v3 + 8 * v10);
        if (!v12)
          break;
      }
    }
LABEL_20:
    v6 = (v12 - 1) & v12;
LABEL_5:
    sub_1CA281DC0();
    result = sub_1CA85BD50();
    v9 |= result;
  }
  v13 = v11 + 3;
  if (v13 < v7)
  {
    v12 = *(_QWORD *)(v3 + 8 * v13);
    if (!v12)
    {
      while (1)
      {
        v10 = v13 + 1;
        if (__OFADD__(v13, 1))
          goto LABEL_51;
        if (v10 >= v7)
          goto LABEL_21;
        v12 = *(_QWORD *)(v3 + 8 * v10);
        ++v13;
        if (v12)
          goto LABEL_20;
      }
    }
    v10 = v13;
    goto LABEL_20;
  }
LABEL_21:
  result = swift_release();
  if ((v9 & 1) != 0)
  {
    result = a2;
    v23 = *(_QWORD *)(a2 + 16);
    if (v23)
    {
      swift_bridgeObjectRetain();
      v14 = 0;
LABEL_24:
      ++v14;
      v15 = 1 << *(_BYTE *)(a1 + 32);
      if (v15 < 64)
        v16 = ~(-1 << v15);
      else
        v16 = -1;
      v17 = v16 & *(_QWORD *)(a1 + 56);
      v18 = (unint64_t)(v15 + 63) >> 6;
      swift_bridgeObjectRetain();
      result = swift_bridgeObjectRetain();
      v19 = 0;
      while (1)
      {
        if (v17)
        {
          v17 &= v17 - 1;
        }
        else
        {
          v20 = v19 + 1;
          if (__OFADD__(v19, 1))
            goto LABEL_52;
          if (v20 >= v18)
          {
LABEL_45:
            swift_bridgeObjectRelease();
            swift_release();
            if (v14 != v23)
              goto LABEL_24;
            return swift_bridgeObjectRelease();
          }
          v21 = *(_QWORD *)(v3 + 8 * v20);
          ++v19;
          if (!v21)
          {
            v19 = v20 + 1;
            if (v20 + 1 >= v18)
              goto LABEL_45;
            v21 = *(_QWORD *)(v3 + 8 * v19);
            if (!v21)
            {
              v19 = v20 + 2;
              if (v20 + 2 >= v18)
                goto LABEL_45;
              v21 = *(_QWORD *)(v3 + 8 * v19);
              if (!v21)
              {
                v22 = v20 + 3;
                if (v22 >= v18)
                  goto LABEL_45;
                v21 = *(_QWORD *)(v3 + 8 * v22);
                if (!v21)
                {
                  while (1)
                  {
                    v19 = v22 + 1;
                    if (__OFADD__(v22, 1))
                      goto LABEL_53;
                    if (v19 >= v18)
                      goto LABEL_45;
                    v21 = *(_QWORD *)(v3 + 8 * v19);
                    ++v22;
                    if (v21)
                      goto LABEL_44;
                  }
                }
                v19 = v22;
              }
            }
          }
LABEL_44:
          v17 = (v21 - 1) & v21;
        }
        sub_1CA281DC0();
        result = sub_1CA85BD50();
        if ((result & 1) != 0)
        {
          swift_bridgeObjectRelease();
          swift_release();
          return swift_bridgeObjectRelease();
        }
      }
    }
  }
  return result;
}

uint64_t sub_1CA28E1E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t result;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  char v19;
  uint64_t v22;
  int64_t v23;

  v22 = a1 + 56;
  v4 = 1 << *(_BYTE *)(a1 + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(a1 + 56);
  v23 = (unint64_t)(v4 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v8 = 0;
  while (1)
  {
    if (v6)
    {
      v9 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v10 = v9 | (v8 << 6);
      goto LABEL_5;
    }
    v15 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_33;
    }
    if (v15 >= v23)
      return swift_release();
    v16 = *(_QWORD *)(v22 + 8 * v15);
    ++v8;
    if (!v16)
    {
      v8 = v15 + 1;
      if (v15 + 1 >= v23)
        return swift_release();
      v16 = *(_QWORD *)(v22 + 8 * v8);
      if (!v16)
      {
        v8 = v15 + 2;
        if (v15 + 2 >= v23)
          return swift_release();
        v16 = *(_QWORD *)(v22 + 8 * v8);
        if (!v16)
          break;
      }
    }
LABEL_21:
    v6 = (v16 - 1) & v16;
    v10 = __clz(__rbit64(v16)) + (v8 << 6);
LABEL_5:
    v11 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v10);
    v13 = *v11;
    v12 = v11[1];
    sub_1CA85B534();
    sub_1CA281DC0();
    swift_bridgeObjectRetain();
    v14 = sub_1CA85BD50();
    swift_bridgeObjectRelease();
    if ((v14 & 1) != 0 && a3)
    {
      if (v13 == a2 && v12 == a3)
      {
        swift_release();
        return swift_bridgeObjectRelease();
      }
      v19 = sub_1CA85C284();
      result = swift_bridgeObjectRelease();
      if ((v19 & 1) != 0)
        return swift_release();
    }
    else
    {
      result = swift_bridgeObjectRelease();
    }
  }
  v17 = v15 + 3;
  if (v17 >= v23)
    return swift_release();
  v16 = *(_QWORD *)(v22 + 8 * v17);
  if (v16)
  {
    v8 = v17;
    goto LABEL_21;
  }
  while (1)
  {
    v8 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v8 >= v23)
      return swift_release();
    v16 = *(_QWORD *)(v22 + 8 * v8);
    ++v17;
    if (v16)
      goto LABEL_21;
  }
LABEL_33:
  __break(1u);
  return result;
}

uint64_t sub_1CA28E454(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t result;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v19;
  uint64_t v22;
  int64_t v23;

  v22 = a1 + 56;
  v4 = 1 << *(_BYTE *)(a1 + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(a1 + 56);
  v23 = (unint64_t)(v4 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v8 = 0;
  while (v6)
  {
    v9 = __clz(__rbit64(v6));
    v6 &= v6 - 1;
    v10 = v9 | (v8 << 6);
LABEL_21:
    v14 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v10);
    v16 = *v14;
    v15 = v14[1];
    sub_1CA85B534();
    sub_1CA281DC0();
    swift_bridgeObjectRetain();
    v17 = sub_1CA85BD50();
    swift_bridgeObjectRelease();
    if ((v17 & 1) != 0)
    {
      if (v16 == a2 && v15 == a3)
      {
        swift_release();
        return swift_bridgeObjectRelease();
      }
      v19 = sub_1CA85C284();
      result = swift_bridgeObjectRelease();
      if ((v19 & 1) != 0)
        return swift_release();
    }
    else
    {
      result = swift_bridgeObjectRelease();
    }
  }
  v11 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    goto LABEL_31;
  }
  if (v11 >= v23)
    return swift_release();
  v12 = *(_QWORD *)(v22 + 8 * v11);
  ++v8;
  if (v12)
    goto LABEL_20;
  v8 = v11 + 1;
  if (v11 + 1 >= v23)
    return swift_release();
  v12 = *(_QWORD *)(v22 + 8 * v8);
  if (v12)
    goto LABEL_20;
  v8 = v11 + 2;
  if (v11 + 2 >= v23)
    return swift_release();
  v12 = *(_QWORD *)(v22 + 8 * v8);
  if (v12)
  {
LABEL_20:
    v6 = (v12 - 1) & v12;
    v10 = __clz(__rbit64(v12)) + (v8 << 6);
    goto LABEL_21;
  }
  v13 = v11 + 3;
  if (v13 >= v23)
    return swift_release();
  v12 = *(_QWORD *)(v22 + 8 * v13);
  if (v12)
  {
    v8 = v13;
    goto LABEL_20;
  }
  while (1)
  {
    v8 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v8 >= v23)
      return swift_release();
    v12 = *(_QWORD *)(v22 + 8 * v8);
    ++v13;
    if (v12)
      goto LABEL_20;
  }
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_1CA28E6A0(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = *(_QWORD *)(a1 + 16);
  result = MEMORY[0x1E0DEE9D8];
  if (v2)
  {
    v7 = MEMORY[0x1E0DEE9D8];
    sub_1CA85BF6C();
    v4 = *(_QWORD *)(sub_1CA85A5B0() - 8);
    v5 = a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    v6 = *(_QWORD *)(v4 + 72);
    do
    {
      sub_1CA85A508();
      sub_1CA85BF48();
      sub_1CA85BF78();
      sub_1CA85BF84();
      sub_1CA85BF54();
      v5 += v6;
      --v2;
    }
    while (v2);
    return v7;
  }
  return result;
}

uint64_t sub_1CA28E764(uint64_t a1)
{
  return sub_1CA28E79C(a1, &qword_1EF94AC90, (uint64_t *)&unk_1EF957740, (void (*)(BOOL, uint64_t, uint64_t))sub_1CA3FB954);
}

uint64_t sub_1CA28E780(uint64_t a1)
{
  return sub_1CA28E79C(a1, (uint64_t *)&unk_1EF957740, &qword_1ED8748B0, (void (*)(BOOL, uint64_t, uint64_t))sub_1CA3FB928);
}

uint64_t sub_1CA28E79C(uint64_t a1, uint64_t *a2, uint64_t *a3, void (*a4)(BOOL, uint64_t, uint64_t))
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v21;
  void (*v22)(BOOL, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t *v24;
  uint64_t *v25;
  uint64_t v26;

  v24 = a2;
  v23 = __swift_instantiateConcreteTypeFromMangledName(a2);
  v7 = *(_QWORD *)(v23 - 8);
  MEMORY[0x1E0C80A78](v23);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = a3;
  v10 = __swift_instantiateConcreteTypeFromMangledName(a3);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(_QWORD *)(a1 + 16);
  v15 = MEMORY[0x1E0DEE9D8];
  if (v14)
  {
    v26 = MEMORY[0x1E0DEE9D8];
    v22 = a4;
    a4(0, v14, 0);
    v16 = a1 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
    v17 = *(_QWORD *)(v7 + 72);
    v15 = v26;
    do
    {
      sub_1CA2684BC(v16, (uint64_t)v9, v24);
      swift_dynamicCast();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        v22(0, *(_QWORD *)(v15 + 16) + 1, 1);
        v15 = v26;
      }
      v19 = *(_QWORD *)(v15 + 16);
      v18 = *(_QWORD *)(v15 + 24);
      if (v19 >= v18 >> 1)
      {
        v22(v18 > 1, v19 + 1, 1);
        v15 = v26;
      }
      *(_QWORD *)(v15 + 16) = v19 + 1;
      sub_1CA24EEF8((uint64_t)v13, v15+ ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80))+ *(_QWORD *)(v11 + 72) * v19, v25);
      v16 += v17;
      --v14;
    }
    while (v14);
  }
  return v15;
}

uint64_t sub_1CA28E968(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t i;
  unint64_t v6;
  unint64_t v7;
  id *v8;
  id v9;
  unint64_t v10;
  unint64_t v11;
  _OWORD v12[2];
  uint64_t v13;

  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v2 = sub_1CA85C08C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v3 = MEMORY[0x1E0DEE9D8];
  if (!v2)
    return v3;
  v13 = MEMORY[0x1E0DEE9D8];
  result = sub_1CA3FBA10(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (i = 0; i != v2; ++i)
      {
        MEMORY[0x1CAA4DD64](i, a1);
        sub_1CA24EEC0(0, &qword_1ED872350);
        swift_dynamicCast();
        v3 = v13;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1CA3FBA10(0, *(_QWORD *)(v3 + 16) + 1, 1);
          v3 = v13;
        }
        v7 = *(_QWORD *)(v3 + 16);
        v6 = *(_QWORD *)(v3 + 24);
        if (v7 >= v6 >> 1)
        {
          sub_1CA3FBA10(v6 > 1, v7 + 1, 1);
          v3 = v13;
        }
        *(_QWORD *)(v3 + 16) = v7 + 1;
        sub_1CA266A44(v12, (_OWORD *)(v3 + 32 * v7 + 32));
      }
    }
    else
    {
      v8 = (id *)(a1 + 32);
      sub_1CA24EEC0(0, &qword_1ED872350);
      do
      {
        v9 = *v8;
        swift_dynamicCast();
        v3 = v13;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1CA3FBA10(0, *(_QWORD *)(v3 + 16) + 1, 1);
          v3 = v13;
        }
        v11 = *(_QWORD *)(v3 + 16);
        v10 = *(_QWORD *)(v3 + 24);
        if (v11 >= v10 >> 1)
        {
          sub_1CA3FBA10(v10 > 1, v11 + 1, 1);
          v3 = v13;
        }
        *(_QWORD *)(v3 + 16) = v11 + 1;
        sub_1CA266A44(v12, (_OWORD *)(v3 + 32 * v11 + 32));
        ++v8;
        --v2;
      }
      while (v2);
    }
    return v3;
  }
  __break(1u);
  return result;
}

uint64_t sub_1CA28EBC8(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  void **v9;
  void *v10;
  unint64_t v11;
  unint64_t v12;
  id v13;
  __int128 v14;
  uint64_t v15;
  _UNKNOWN **v16;
  uint64_t v17;

  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v2 = sub_1CA85C08C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v3 = MEMORY[0x1E0DEE9D8];
  if (!v2)
    return v3;
  v17 = MEMORY[0x1E0DEE9D8];
  result = sub_1CA3FBAA0(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    v3 = v17;
    if ((a1 & 0xC000000000000001) != 0)
    {
      v5 = 0;
      do
      {
        v6 = MEMORY[0x1CAA4DD64](v5, a1);
        v17 = v3;
        v8 = *(_QWORD *)(v3 + 16);
        v7 = *(_QWORD *)(v3 + 24);
        if (v8 >= v7 >> 1)
        {
          sub_1CA3FBAA0(v7 > 1, v8 + 1, 1);
          v3 = v17;
        }
        ++v5;
        v15 = sub_1CA24EEC0(0, &qword_1ED872370);
        v16 = &protocol witness table for PHAssetCollection;
        *(_QWORD *)&v14 = v6;
        *(_QWORD *)(v3 + 16) = v8 + 1;
        sub_1CA28FA30(&v14, v3 + 40 * v8 + 32);
      }
      while (v2 != v5);
    }
    else
    {
      v9 = (void **)(a1 + 32);
      do
      {
        v10 = *v9;
        v17 = v3;
        v12 = *(_QWORD *)(v3 + 16);
        v11 = *(_QWORD *)(v3 + 24);
        v13 = v10;
        if (v12 >= v11 >> 1)
        {
          sub_1CA3FBAA0(v11 > 1, v12 + 1, 1);
          v3 = v17;
        }
        v15 = sub_1CA24EEC0(0, &qword_1ED872370);
        v16 = &protocol witness table for PHAssetCollection;
        *(_QWORD *)&v14 = v13;
        *(_QWORD *)(v3 + 16) = v12 + 1;
        sub_1CA28FA30(&v14, v3 + 40 * v12 + 32);
        ++v9;
        --v2;
      }
      while (v2);
    }
    return v3;
  }
  __break(1u);
  return result;
}

uint64_t sub_1CA28EDB8(unint64_t a1)
{
  return sub_1CA28EDD4(a1, (uint64_t (*)(uint64_t))type metadata accessor for CachedMomentGraphCluster, &qword_1EF94BA88, (uint64_t)&protocol conformance descriptor for CachedMomentGraphCluster);
}

uint64_t sub_1CA28EDD4(unint64_t a1, uint64_t (*a2)(uint64_t), unint64_t *a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v8 = sub_1CA85C08C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v8 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v9 = MEMORY[0x1E0DEE9D8];
  if (!v8)
    return v9;
  v22 = MEMORY[0x1E0DEE9D8];
  result = sub_1CA3FB880(0, v8 & ~(v8 >> 63), 0);
  if ((v8 & 0x8000000000000000) == 0)
  {
    v9 = v22;
    if ((a1 & 0xC000000000000001) != 0)
    {
      v11 = 0;
      do
      {
        v12 = MEMORY[0x1CAA4DD64](v11, a1);
        v22 = v9;
        v14 = *(_QWORD *)(v9 + 16);
        v13 = *(_QWORD *)(v9 + 24);
        if (v14 >= v13 >> 1)
        {
          sub_1CA3FB880(v13 > 1, v14 + 1, 1);
          v9 = v22;
        }
        ++v11;
        v20 = a2(0);
        v21 = sub_1CA23CC98(a3, a2, a4);
        *(_QWORD *)&v19 = v12;
        *(_QWORD *)(v9 + 16) = v14 + 1;
        sub_1CA28FA30(&v19, v9 + 40 * v14 + 32);
      }
      while (v8 != v11);
    }
    else
    {
      v15 = (uint64_t *)(a1 + 32);
      do
      {
        v16 = *v15;
        v22 = v9;
        v18 = *(_QWORD *)(v9 + 16);
        v17 = *(_QWORD *)(v9 + 24);
        swift_retain();
        if (v18 >= v17 >> 1)
        {
          sub_1CA3FB880(v17 > 1, v18 + 1, 1);
          v9 = v22;
        }
        v20 = a2(0);
        v21 = sub_1CA23CC98(a3, a2, a4);
        *(_QWORD *)&v19 = v16;
        *(_QWORD *)(v9 + 16) = v18 + 1;
        sub_1CA28FA30(&v19, v9 + 40 * v18 + 32);
        ++v15;
        --v8;
      }
      while (v8);
    }
    return v9;
  }
  __break(1u);
  return result;
}

uint64_t sub_1CA28EFC0(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v11 = MEMORY[0x1E0DEE9D8];
    sub_1CA3FBB6C(0, v1, 0);
    v2 = v11;
    v4 = a1 + 48;
    do
    {
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94BA78);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94BA80);
      swift_dynamicCast();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1CA3FBB6C(0, *(_QWORD *)(v2 + 16) + 1, 1);
        v2 = v11;
      }
      v6 = *(_QWORD *)(v2 + 16);
      v5 = *(_QWORD *)(v2 + 24);
      if (v6 >= v5 >> 1)
      {
        sub_1CA3FBB6C(v5 > 1, v6 + 1, 1);
        v2 = v11;
      }
      *(_QWORD *)(v2 + 16) = v6 + 1;
      v7 = v2 + 24 * v6;
      *(_QWORD *)(v7 + 32) = v9;
      *(_OWORD *)(v7 + 40) = v10;
      v4 += 24;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1CA28F138(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  __int128 v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v14 = MEMORY[0x1E0DEE9D8];
    sub_1CA3FBBB4(0, v1, 0);
    v2 = v14;
    v4 = (uint64_t *)(a1 + 40);
    v5 = MEMORY[0x1E0DEA968];
    do
    {
      v7 = *(v4 - 1);
      v6 = *v4;
      v14 = v2;
      v8 = *(_QWORD *)(v2 + 16);
      v9 = *(_QWORD *)(v2 + 24);
      swift_bridgeObjectRetain();
      if (v8 >= v9 >> 1)
      {
        sub_1CA3FBBB4(v9 > 1, v8 + 1, 1);
        v2 = v14;
      }
      v4 += 2;
      v12 = v5;
      v13 = sub_1CA2891BC();
      *(_QWORD *)&v11 = v7;
      *((_QWORD *)&v11 + 1) = v6;
      *(_QWORD *)(v2 + 16) = v8 + 1;
      sub_1CA28FA30(&v11, v2 + 40 * v8 + 32);
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1CA28F230(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  __int128 v8;
  uint64_t v9;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v9 = MEMORY[0x1E0DEE9D8];
    sub_1CA3FBA10(0, v1, 0);
    v2 = v9;
    v4 = a1 + 40;
    do
    {
      swift_bridgeObjectRetain();
      swift_dynamicCast();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1CA3FBA10(0, *(_QWORD *)(v2 + 16) + 1, 1);
        v2 = v9;
      }
      v6 = *(_QWORD *)(v2 + 16);
      v5 = *(_QWORD *)(v2 + 24);
      if (v6 >= v5 >> 1)
      {
        sub_1CA3FBA10(v5 > 1, v6 + 1, 1);
        v2 = v9;
      }
      v4 += 16;
      *(_QWORD *)(v2 + 16) = v6 + 1;
      sub_1CA266A44(&v8, (_OWORD *)(v2 + 32 * v6 + 32));
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1CA28F354(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  __int128 v8;
  uint64_t v9;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v9 = MEMORY[0x1E0DEE9D8];
    sub_1CA3FBA10(0, v1, 0);
    v4 = a1 + 32;
    v2 = v9;
    do
    {
      v4 += 8;
      swift_dynamicCast();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1CA3FBA10(0, *(_QWORD *)(v2 + 16) + 1, 1);
        v2 = v9;
      }
      v6 = *(_QWORD *)(v2 + 16);
      v5 = *(_QWORD *)(v2 + 24);
      if (v6 >= v5 >> 1)
      {
        sub_1CA3FBA10(v5 > 1, v6 + 1, 1);
        v2 = v9;
      }
      *(_QWORD *)(v2 + 16) = v6 + 1;
      sub_1CA266A44(&v8, (_OWORD *)(v2 + 32 * v6 + 32));
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1CA28F470(uint64_t a1)
{
  return sub_1CA28E79C(a1, (uint64_t *)&unk_1ED874938, (uint64_t *)&unk_1ED874910, (void (*)(BOOL, uint64_t, uint64_t))sub_1CA3FBDA0);
}

uint64_t PhotosGraphMomentsProducer.init(momentNodes:features:photoLibrary:graph:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  *a5 = result;
  a5[1] = a2;
  a5[2] = a3;
  a5[3] = a4;
  return result;
}

uint64_t PhotosGraphMomentsProducer.clusters(progressReporter:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  unint64_t v9;
  id v10;
  id v11;
  id v12;
  uint64_t v13;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17[4];
  uint64_t v18;

  v3 = *(void **)v0;
  v2 = *(_QWORD *)(v0 + 8);
  v4 = *(void **)(v0 + 16);
  v5 = *(void **)(v0 + 24);
  static MomentGraphFeature.extractors(for:with:in:)(v2, v17);
  if (!v1)
  {
    v18 = v17[0];
    v6 = v17[2];
    v16 = v17[1];
    v7 = v17[3];
    v8 = objc_msgSend(v3, sel_array);
    sub_1CA24EEC0(0, (unint64_t *)&qword_1EF94AB50);
    v9 = sub_1CA85B7B0();

    v10 = v3;
    swift_bridgeObjectRetain();
    v11 = v4;
    v12 = v5;
    v13 = v18;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v15 = sub_1CA28F690(v9, (uint64_t)v10, v2, v11, (uint64_t)v12, v13, v16, v6, v7);
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    sub_1CA85BB70();
    v0 = sub_1CA28EDD4(v15, (uint64_t (*)(uint64_t))type metadata accessor for MomentGraphCluster, &qword_1EF94BA90, (uint64_t)&protocol conformance descriptor for MomentGraphCluster);
    swift_bridgeObjectRelease();
  }
  return v0;
}

uint64_t sub_1CA28F67C()
{
  return PhotosGraphMomentsProducer.clusters(progressReporter:)();
}

uint64_t sub_1CA28F690(unint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  unint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  id v17;
  id v18;
  id v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v24[4];
  uint64_t v25;

  v10 = v9;
  v13 = a1;
  if (a1 >> 62)
    goto LABEL_16;
  v14 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    result = MEMORY[0x1E0DEE9D8];
    if (!v14)
      break;
    v25 = MEMORY[0x1E0DEE9D8];
    result = sub_1CA85BF6C();
    if (v14 < 0)
    {
      __break(1u);
      return result;
    }
    v16 = 0;
    v20 = v13;
    v21 = v13 & 0xC000000000000001;
    while (v14 != v16)
    {
      if (v21)
        v17 = (id)MEMORY[0x1CAA4DD64](v16, v13);
      else
        v17 = *(id *)(v13 + 8 * v16 + 32);
      v24[0] = a6;
      v24[1] = a7;
      v24[2] = a8;
      v24[3] = a9;
      v18 = v17;
      v19 = a4;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1CA517224(v18, v19, v24);

      if (v10)
        return swift_release();
      ++v16;
      sub_1CA85BF48();
      sub_1CA85BF78();
      sub_1CA85BF84();
      sub_1CA85BF54();
      v13 = v20;
      if (v14 == v16)
        return v25;
    }
    __break(1u);
LABEL_16:
    swift_bridgeObjectRetain();
    v14 = sub_1CA85C08C();
    swift_bridgeObjectRelease();
  }
  return result;
}

void destroy for PhotosGraphMomentsProducer(id *a1)
{

  swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for PhotosGraphMomentsProducer(_QWORD *a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  id v9;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  v5 = *(void **)(a2 + 16);
  v6 = *(void **)(a2 + 24);
  a1[2] = v5;
  a1[3] = v6;
  v7 = v3;
  swift_bridgeObjectRetain();
  v8 = v5;
  v9 = v6;
  return a1;
}

uint64_t assignWithCopy for PhotosGraphMomentsProducer(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  id v12;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7 = *(void **)(a2 + 16);
  v8 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v7;
  v9 = v7;

  v10 = *(void **)(a2 + 24);
  v11 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v10;
  v12 = v10;

  return a1;
}

uint64_t assignWithTake for PhotosGraphMomentsProducer(uint64_t a1, _OWORD *a2)
{
  void *v4;

  *(_OWORD *)a1 = *a2;
  swift_bridgeObjectRelease();

  v4 = *(void **)(a1 + 24);
  *(_OWORD *)(a1 + 16) = a2[1];

  return a1;
}

uint64_t getEnumTagSinglePayload for PhotosGraphMomentsProducer(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PhotosGraphMomentsProducer(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for PhotosGraphMomentsProducer()
{
  return &type metadata for PhotosGraphMomentsProducer;
}

uint64_t sub_1CA28FA30(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_QWORD *)(a2 + 32) = *((_QWORD *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

id sub_1CA28FAA4()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MusicCacheInfoEntry();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1CA28FAD4()
{
  uint64_t v0;

  v0 = *(_QWORD *)aInfo_1;
  swift_bridgeObjectRetain();
  return v0;
}

BOOL _s11PhotosGraph14MusicCacheInfoV2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char v8;
  _BOOL8 result;
  char v10;
  _BYTE v11[288];
  _BYTE __dst[288];
  _BYTE v13[288];
  _BYTE v14[288];
  _BYTE __src[288];
  uint64_t v16[36];
  uint64_t v17;
  uint64_t v18[36];
  _BYTE v19[288];
  _BYTE v20[288];

  v3 = *a1;
  v4 = a1[1];
  sub_1CA2902F4((uint64_t)(a1 + 2), (uint64_t)v19);
  v5 = *a2;
  v6 = a2[1];
  sub_1CA2902F4((uint64_t)(a2 + 2), (uint64_t)v20);
  v7 = v3 == v5 && v4 == v6;
  if (v7 || (v8 = sub_1CA85C284(), result = 0, (v8 & 1) != 0))
  {
    sub_1CA2902F4((uint64_t)v19, (uint64_t)v18);
    if (sub_1CA290380(v18) == 1)
    {
      sub_1CA2902F4((uint64_t)v20, (uint64_t)v16);
      if (sub_1CA290380(v16) == 1)
        return 1;
    }
    else
    {
      sub_1CA2902F4((uint64_t)v19, (uint64_t)__src);
      sub_1CA2902F4((uint64_t)v20, (uint64_t)v16);
      if (sub_1CA290380(v16) != 1)
      {
        sub_1CA2902F4((uint64_t)v20, (uint64_t)__dst);
        memcpy(v11, __dst, sizeof(v11));
        sub_1CA2902F4((uint64_t)v19, (uint64_t)v13);
        sub_1CA2903DC((uint64_t)v19);
        sub_1CA2903DC((uint64_t)v13);
        v10 = _s11PhotosGraph16MusicBagContentsV2eeoiySbAC_ACtFZ_0((uint64_t)__src, (uint64_t)v11);
        memcpy(v14, __src, sizeof(v14));
        sub_1CA290438((uint64_t)v14);
        sub_1CA290438((uint64_t)v19);
        return (v10 & 1) != 0;
      }
      memcpy(__dst, __src, sizeof(__dst));
      sub_1CA2902F4((uint64_t)v19, (uint64_t)v13);
      sub_1CA2902F4((uint64_t)v19, (uint64_t)v14);
      sub_1CA2903DC((uint64_t)v14);
      sub_1CA2903DC((uint64_t)v13);
      sub_1CA290438((uint64_t)__dst);
    }
    sub_1CA2902F4((uint64_t)v19, (uint64_t)v16);
    sub_1CA2902F4((uint64_t)v20, (uint64_t)&v17);
    sub_1CA2903DC((uint64_t)v20);
    sub_1CA290404((uint64_t)v16);
    return 0;
  }
  return result;
}

uint64_t initializeWithCopy for MusicCacheInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __int128 v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
  *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 232);
  *(_OWORD *)(a1 + 248) = *(_OWORD *)(a2 + 248);
  *(_BYTE *)(a1 + 264) = *(_BYTE *)(a2 + 264);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  v4 = *(_OWORD *)(a2 + 288);
  *(_OWORD *)(a1 + 272) = *(_OWORD *)(a2 + 272);
  *(_OWORD *)(a1 + 288) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for MusicCacheInfo(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  v4 = *(_OWORD *)(a2 + 56);
  v5 = *(_OWORD *)(a2 + 72);
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  *(_OWORD *)(a1 + 72) = v5;
  *(_OWORD *)(a1 + 56) = v4;
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  v6 = *(_OWORD *)(a2 + 192);
  v7 = *(_OWORD *)(a2 + 208);
  *(_BYTE *)(a1 + 224) = *(_BYTE *)(a2 + 224);
  *(_OWORD *)(a1 + 192) = v6;
  *(_OWORD *)(a1 + 208) = v7;
  v8 = *(_OWORD *)(a2 + 232);
  v9 = *(_OWORD *)(a2 + 248);
  *(_BYTE *)(a1 + 264) = *(_BYTE *)(a2 + 264);
  *(_OWORD *)(a1 + 248) = v9;
  *(_OWORD *)(a1 + 232) = v8;
  *(_QWORD *)(a1 + 272) = *(_QWORD *)(a2 + 272);
  *(_QWORD *)(a1 + 280) = *(_QWORD *)(a2 + 280);
  *(_QWORD *)(a1 + 288) = *(_QWORD *)(a2 + 288);
  *(_QWORD *)(a1 + 296) = *(_QWORD *)(a2 + 296);
  return a1;
}

uint64_t assignWithTake for MusicCacheInfo(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  *(_BYTE *)(a1 + 224) = *(_BYTE *)(a2 + 224);
  v4 = *(_OWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 208) = v4;
  v5 = *(_OWORD *)(a2 + 232);
  v6 = *(_OWORD *)(a2 + 248);
  *(_BYTE *)(a1 + 264) = *(_BYTE *)(a2 + 264);
  *(_OWORD *)(a1 + 248) = v6;
  *(_OWORD *)(a1 + 232) = v5;
  *(_QWORD *)(a1 + 272) = *(_QWORD *)(a2 + 272);
  *(_QWORD *)(a1 + 280) = *(_QWORD *)(a2 + 280);
  *(_OWORD *)(a1 + 288) = *(_OWORD *)(a2 + 288);
  return a1;
}

uint64_t getEnumTagSinglePayload for MusicCacheInfo(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 304))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MusicCacheInfo(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 296) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 304) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 304) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for MusicCacheInfo()
{
  return &type metadata for MusicCacheInfo;
}

uint64_t type metadata accessor for MusicCacheInfoEntry()
{
  return objc_opt_self();
}

id sub_1CA2900E0(void *a1, uint64_t a2)
{
  uint64_t v2;
  void *v4;
  id v5;
  id v6;
  id v7;
  void *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v12;
  unint64_t v13;
  void *v14;
  _BYTE v15[288];
  uint64_t __src[36];
  _BYTE v17[288];

  sub_1CA2902F4(a2 + 16, (uint64_t)v17);
  v4 = (void *)objc_opt_self();
  v5 = a1;
  swift_bridgeObjectRetain();
  v6 = (id)sub_1CA85B510();
  swift_bridgeObjectRelease();
  v7 = objc_msgSend(v4, sel_entityForName_inManagedObjectContext_, v6, v5);

  if (v7)
  {
    v6 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for MusicCacheInfoEntry()), sel_initWithEntity_insertIntoManagedObjectContext_, v7, v5);

    v8 = (void *)sub_1CA85B510();
    objc_msgSend(v6, sel_setVersion_, v8);

    sub_1CA2902F4((uint64_t)v17, (uint64_t)__src);
    if (sub_1CA290380(__src) != 1)
    {
      sub_1CA85A34C();
      swift_allocObject();
      sub_1CA85A340();
      memcpy(v15, __src, sizeof(v15));
      sub_1CA290398();
      v9 = sub_1CA85A334();
      if (v2)
      {

        swift_release();
      }
      else
      {
        v12 = v9;
        v13 = v10;
        swift_release();
        v14 = (void *)sub_1CA85A478();
        sub_1CA260204(v12, v13);
        objc_msgSend(v6, sel_setMusicBagContentsAsData_, v14);

      }
    }
  }
  else
  {
    sub_1CA29033C();
    swift_allocError();
    swift_willThrow();

  }
  return v6;
}

uint64_t sub_1CA2902F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED871560);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1CA29033C()
{
  unint64_t result;

  result = qword_1EF94BAA8;
  if (!qword_1EF94BAA8)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8DAB3C, &_s5ErrorON);
    atomic_store(result, (unint64_t *)&qword_1EF94BAA8);
  }
  return result;
}

uint64_t sub_1CA290380(uint64_t *a1)
{
  uint64_t v1;

  v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

unint64_t sub_1CA290398()
{
  unint64_t result;

  result = qword_1ED872ED8;
  if (!qword_1ED872ED8)
  {
    result = MEMORY[0x1CAA4F1A4](&protocol conformance descriptor for MusicBagContents, &type metadata for MusicBagContents);
    atomic_store(result, (unint64_t *)&qword_1ED872ED8);
  }
  return result;
}

uint64_t sub_1CA2903DC(uint64_t a1)
{
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1CA290404(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1CA290438(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1CA290460(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  BOOL v12;
  uint64_t result;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  BOOL v17;

  if (*(_QWORD *)(a3 + 16))
  {
    sub_1CA85C368();
    sub_1CA85B4B0();
    v6 = sub_1CA85C3B0();
    v7 = -1 << *(_BYTE *)(a3 + 32);
    v8 = v6 & ~v7;
    v9 = a3 + 56;
    if (((*(_QWORD *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0)
    {
      v10 = *(_QWORD *)(a3 + 48);
      v11 = (_QWORD *)(v10 + 16 * v8);
      v12 = *v11 == a1 && v11[1] == a2;
      if (v12 || (sub_1CA85C284() & 1) != 0)
        return 1;
      v14 = ~v7;
      v15 = (v8 + 1) & v14;
      if (((*(_QWORD *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) != 0)
      {
        while (1)
        {
          v16 = (_QWORD *)(v10 + 16 * v15);
          v17 = *v16 == a1 && v16[1] == a2;
          if (v17 || (sub_1CA85C284() & 1) != 0)
            break;
          result = 0;
          v15 = (v15 + 1) & v14;
          if (((*(_QWORD *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) == 0)
            return result;
        }
        return 1;
      }
    }
  }
  return 0;
}

BOOL sub_1CA290594(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BOOL8 result;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;

  if (!*(_QWORD *)(a2 + 16))
    return 0;
  sub_1CA85C368();
  sub_1CA85C374();
  v4 = sub_1CA85C3B0();
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = v4 & ~v5;
  v7 = a2 + 56;
  if (((*(_QWORD *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
    return 0;
  v8 = *(_QWORD *)(a2 + 48);
  if (*(_QWORD *)(v8 + 8 * v6) == a1)
    return 1;
  v10 = ~v5;
  v11 = (v6 + 1) & v10;
  if (((*(_QWORD *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) == 0)
    return 0;
  do
  {
    v12 = *(_QWORD *)(v8 + 8 * v11);
    result = v12 == a1;
    if (v12 == a1)
      break;
    v11 = (v11 + 1) & v10;
  }
  while (((*(_QWORD *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
  return result;
}

uint64_t sub_1CA290680(char a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
  {
    sub_1CA85C368();
    __asm { BR              X10 }
  }
  return 0;
}

unint64_t ImportantEntitiesTuningEventName.getter()
{
  return 0xD000000000000038;
}

uint64_t ImportantEntitiesTuningAlgorithmNameKey.getter()
{
  return 0x687469726F676C61;
}

unint64_t ImportantEntitiesTuningAlgorithmVersionKey.getter()
{
  return 0xD000000000000011;
}

uint64_t ImportantEntitiesTuningParameterNameKey.getter()
{
  return 0x6574656D61726170;
}

uint64_t ImportantEntitiesTuningFalseNegativesKey.getter()
{
  return 0x656E5F65736C6166;
}

uint64_t ImportantEntitiesTuningFalsePositivesKey.getter()
{
  return 0x6F705F65736C6166;
}

uint64_t ImportantEntitiesTuningTrueNegativesKey.getter()
{
  return 0x67656E5F65757274;
}

uint64_t ImportantEntitiesTuningTruePositivesKey.getter()
{
  return 0x736F705F65757274;
}

unint64_t ImportantEntitiesChildrenInferenceAlgorithmName.getter()
{
  return 0xD000000000000011;
}

uint64_t ImportantEntitiesPetInferenceAlgorithmName.getter()
{
  return 0x7265666E49746570;
}

uint64_t sub_1CA290B1C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *a1;
  v2 = a1[1];
  v4 = *a2;
  swift_beginAccess();
  *(_QWORD *)(v4 + 16) = v3;
  *(_QWORD *)(v4 + 24) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1CA290B78()
{
  uint64_t v0;
  uint64_t v1;

  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1CA290BC0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_beginAccess();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1CA290C10())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

double ImportantEntitiesTuningParameter.__allocating_init(withName:andParameter:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  double result;

  v6 = swift_allocObject();
  v7 = *(_QWORD *)(a3 + 16);
  result = *(double *)(a3 + 40);
  *(_QWORD *)(v6 + 16) = a1;
  *(_QWORD *)(v6 + 24) = a2;
  *(_OWORD *)(v6 + 32) = *(_OWORD *)a3;
  *(_QWORD *)(v6 + 48) = v7;
  *(_OWORD *)(v6 + 56) = *(_OWORD *)(a3 + 24);
  *(double *)(v6 + 72) = result;
  return result;
}

uint64_t ImportantEntitiesTuningParameter.init(withName:andParameter:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(a3 + 40);
  *(_QWORD *)(v3 + 16) = a1;
  *(_QWORD *)(v3 + 24) = a2;
  *(_OWORD *)(v3 + 32) = *(_OWORD *)a3;
  *(_QWORD *)(v3 + 48) = v4;
  *(_OWORD *)(v3 + 56) = *(_OWORD *)(a3 + 24);
  *(_QWORD *)(v3 + 72) = v5;
  return v3;
}

uint64_t ImportantEntitiesTuningParameter.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t ImportantEntitiesTuningParameter.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1CA290D18()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  swift_beginAccess();
  v2 = *(_QWORD *)(v1 + 16);
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1CA290D64(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;

  v5 = *v2;
  swift_beginAccess();
  *(_QWORD *)(v5 + 16) = a1;
  *(_QWORD *)(v5 + 24) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1CA290DB8())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t ImportantEntitiesTuningEvent.__allocating_init(withGraph:)(uint64_t a1)
{
  uint64_t result;

  result = swift_allocObject();
  *(_QWORD *)(result + 16) = a1;
  return result;
}

uint64_t ImportantEntitiesTuningEvent.init(withGraph:)(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return v1;
}

uint64_t ImportantEntitiesTuningEvent.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t ImportantEntitiesTuningEvent.__deallocating_deinit()
{
  uint64_t v0;

  return swift_deallocClassInstance();
}

_QWORD *ImportantEntitiesTuningResult.__allocating_init(inferredImportantEntitiesLocalIdentifiers:truePositiveImportantEntitiesLocalIdentifiers:trueNegativeImportantEntitiesLocalIdentifiers:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *result;

  result = (_QWORD *)swift_allocObject();
  result[2] = a1;
  result[3] = a2;
  result[4] = a3;
  return result;
}

_QWORD *ImportantEntitiesTuningResult.init(inferredImportantEntitiesLocalIdentifiers:truePositiveImportantEntitiesLocalIdentifiers:trueNegativeImportantEntitiesLocalIdentifiers:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[2] = a1;
  v3[3] = a2;
  v3[4] = a3;
  return v3;
}

uint64_t ImportantEntitiesTuningResult.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t ImportantEntitiesTuningResult.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t ImportantEntitiesTuningMetrics.algorithmName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ImportantEntitiesTuningMetrics.parameterName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ImportantEntitiesTuningMetrics.truePositives.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 48);
}

uint64_t ImportantEntitiesTuningMetrics.falsePositives.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 56);
}

uint64_t ImportantEntitiesTuningMetrics.trueNegatives.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 64);
}

uint64_t ImportantEntitiesTuningMetrics.falseNegatives.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 72);
}

uint64_t ImportantEntitiesTuningMetrics.precision.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 80);
}

uint64_t ImportantEntitiesTuningMetrics.recall.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 96);
}

uint64_t ImportantEntitiesTuningMetrics.__allocating_init(algorithmName:parameterName:truePositives:falsePositives:trueNegatives:falseNegatives:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v16;

  v16 = swift_allocObject();
  ImportantEntitiesTuningMetrics.init(algorithmName:parameterName:truePositives:falsePositives:trueNegatives:falseNegatives:)(a1, a2, a3, a4, a5, a6, a7, a8);
  return v16;
}

uint64_t ImportantEntitiesTuningMetrics.init(algorithmName:parameterName:truePositives:falsePositives:trueNegatives:falseNegatives:)(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  double v12;

  *(_QWORD *)(v8 + 16) = result;
  *(_QWORD *)(v8 + 24) = a2;
  *(_QWORD *)(v8 + 32) = a3;
  *(_QWORD *)(v8 + 40) = a4;
  *(_QWORD *)(v8 + 48) = a5;
  *(_QWORD *)(v8 + 56) = a6;
  *(_QWORD *)(v8 + 64) = a7;
  *(_QWORD *)(v8 + 72) = a8;
  v9 = a5 + a6;
  if (__OFADD__(a5, a6))
  {
    __break(1u);
LABEL_11:
    __break(1u);
    return result;
  }
  if (v9 < 1)
    v10 = 0.0;
  else
    v10 = (double)a5 / (double)v9;
  *(double *)(v8 + 80) = v10;
  *(_BYTE *)(v8 + 88) = v9 < 1;
  v11 = a5 + a8;
  if (__OFADD__(a5, a8))
    goto LABEL_11;
  if (v11 < 1)
    v12 = 0.0;
  else
    v12 = (double)a5 / (double)v11;
  *(double *)(v8 + 96) = v12;
  *(_BYTE *)(v8 + 104) = v11 < 1;
  return v8;
}

unint64_t sub_1CA2910D8()
{
  unint64_t v0;
  uint64_t v1;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v3;
  char v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  char v14;

  v0 = sub_1CA273F30(MEMORY[0x1E0DEE9D8]);
  v1 = sub_1CA85B510();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_1CA25DA48(v1, 0x687469726F676C61, 0xEE00656D616E5F6DLL, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  v3 = sub_1CA85B510();
  v4 = swift_isUniquelyReferenced_nonNull_native();
  sub_1CA25DA48(v3, 0x6574656D61726170, 0xEE00656D616E5F72, v4);
  swift_bridgeObjectRelease();
  sub_1CA24EEC0(0, (unint64_t *)&qword_1ED8723C0);
  v5 = sub_1CA85BC6C();
  v6 = swift_isUniquelyReferenced_nonNull_native();
  sub_1CA25DA48(v5, 0xD000000000000011, 0x80000001CA889840, v6);
  swift_bridgeObjectRelease();
  v7 = sub_1CA85BC6C();
  v8 = swift_isUniquelyReferenced_nonNull_native();
  sub_1CA25DA48(v7, 0x736F705F65757274, 0xEE00736576697469, v8);
  swift_bridgeObjectRelease();
  v9 = sub_1CA85BC6C();
  v10 = swift_isUniquelyReferenced_nonNull_native();
  sub_1CA25DA48(v9, 0x6F705F65736C6166, 0xEF73657669746973, v10);
  swift_bridgeObjectRelease();
  v11 = sub_1CA85BC6C();
  v12 = swift_isUniquelyReferenced_nonNull_native();
  sub_1CA25DA48(v11, 0x67656E5F65757274, 0xEE00736576697461, v12);
  swift_bridgeObjectRelease();
  v13 = sub_1CA85BC6C();
  v14 = swift_isUniquelyReferenced_nonNull_native();
  sub_1CA25DA48(v13, 0x656E5F65736C6166, 0xEF73657669746167, v14);
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t ImportantEntitiesTuningMetrics.__deallocating_deinit()
{
  return sub_1CA291AD4();
}

unint64_t sub_1CA2913AC()
{
  return sub_1CA2910D8();
}

uint64_t ImportantEntitiesTuningEventFactory.__allocating_init(withGraph:)(uint64_t a1)
{
  uint64_t result;

  result = swift_allocObject();
  *(_QWORD *)(result + 16) = a1;
  *(_BYTE *)(result + 24) = 0;
  return result;
}

uint64_t ImportantEntitiesTuningEventFactory.init(withGraph:)(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  *(_BYTE *)(v1 + 24) = 0;
  return v1;
}

uint64_t sub_1CA291410()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;

  if ((*(_BYTE *)(v0 + 24) & 1) != 0)
    return 0;
  *(_BYTE *)(v0 + 24) = 1;
  v2 = *(void **)(v0 + 16);
  type metadata accessor for ImportantEntitiesTuningEvent();
  v1 = swift_allocObject();
  *(_QWORD *)(v1 + 16) = v2;
  v3 = v2;
  return v1;
}

uint64_t ImportantEntitiesTuningEventFactory.__deallocating_deinit()
{
  uint64_t v0;

  return swift_deallocClassInstance();
}

uint64_t sub_1CA291488@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_1CA291410();
  *a1 = result;
  return result;
}

_QWORD *ImportantEntitiesTuningEvaluator.__allocating_init(algorithmName:parameterName:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *result;

  result = (_QWORD *)swift_allocObject();
  result[2] = a1;
  result[3] = a2;
  result[4] = a3;
  result[5] = a4;
  return result;
}

_QWORD *ImportantEntitiesTuningEvaluator.init(algorithmName:parameterName:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[2] = a1;
  v4[3] = a2;
  v4[4] = a3;
  v4[5] = a4;
  return v4;
}

uint64_t sub_1CA291510@<X0>(unint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  _QWORD *v9;
  BOOL v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  BOOL v30;
  uint64_t v31;
  _QWORD *v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  BOOL v39;
  uint64_t v40;
  _QWORD *v41;
  BOOL v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v52;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  unint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  int64_t v66;
  unint64_t v67;
  uint64_t v68;

  v2 = a1;
  if (a1 >> 62)
    goto LABEL_83;
  v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  while (1)
  {
    v4 = 0;
    v5 = 0;
    v6 = 0;
    v7 = 0;
    if (!v3)
      goto LABEL_72;
    v8 = 0;
    v56 = v3;
    v57 = v2 & 0xC000000000000001;
    v54 = v2 & 0xFFFFFFFFFFFFFF8;
    v55 = v2;
LABEL_5:
    v59 = v5;
    if (v57)
    {
      v9 = (_QWORD *)MEMORY[0x1CAA4DD64](v8, v2);
      goto LABEL_9;
    }
    if (v8 < *(_QWORD *)(v54 + 16))
      break;
LABEL_82:
    __break(1u);
LABEL_83:
    swift_bridgeObjectRetain();
    v3 = sub_1CA85C08C();
  }
  v9 = (_QWORD *)swift_retain();
LABEL_9:
  v10 = __OFADD__(v8, 1);
  v11 = v8 + 1;
  if (v10)
  {
LABEL_77:
    __break(1u);
LABEL_78:
    __break(1u);
LABEL_79:
    __break(1u);
LABEL_80:
    __break(1u);
LABEL_81:
    __break(1u);
    goto LABEL_82;
  }
  v58 = v11;
  v60 = v7;
  v61 = v6;
  v62 = v4;
  v12 = v9[2];
  v2 = v9[4];
  v67 = v2;
  v68 = v9[3];
  v65 = v12 + 56;
  v13 = 1 << *(_BYTE *)(v12 + 32);
  if (v13 < 64)
    v14 = ~(-1 << v13);
  else
    v14 = -1;
  v15 = v14 & *(_QWORD *)(v12 + 56);
  v66 = (unint64_t)(v13 + 63) >> 6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v63 = 0;
  v64 = 0;
  v16 = 0;
  while (1)
  {
    if (v15)
    {
      v17 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v18 = v17 | (v16 << 6);
      goto LABEL_31;
    }
    v19 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
      __break(1u);
LABEL_74:
      __break(1u);
LABEL_75:
      __break(1u);
LABEL_76:
      __break(1u);
      goto LABEL_77;
    }
    if (v19 >= v66)
      goto LABEL_67;
    v20 = *(_QWORD *)(v65 + 8 * v19);
    ++v16;
    if (!v20)
    {
      v16 = v19 + 1;
      if (v19 + 1 >= v66)
        goto LABEL_67;
      v20 = *(_QWORD *)(v65 + 8 * v16);
      if (!v20)
      {
        v16 = v19 + 2;
        if (v19 + 2 >= v66)
          goto LABEL_67;
        v20 = *(_QWORD *)(v65 + 8 * v16);
        if (!v20)
          break;
      }
    }
LABEL_30:
    v15 = (v20 - 1) & v20;
    v18 = __clz(__rbit64(v20)) + (v16 << 6);
LABEL_31:
    v22 = (uint64_t *)(*(_QWORD *)(v12 + 48) + 16 * v18);
    v24 = *v22;
    v23 = v22[1];
    if (*(_QWORD *)(v68 + 16))
    {
      sub_1CA85C368();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1CA85B4B0();
      v25 = sub_1CA85C3B0();
      v26 = -1 << *(_BYTE *)(v68 + 32);
      v27 = v25 & ~v26;
      v2 = v68 + 56;
      if (((*(_QWORD *)(v68 + 56 + ((v27 >> 3) & 0xFFFFFFFFFFFFF8)) >> v27) & 1) != 0)
      {
        v28 = *(_QWORD *)(v68 + 48);
        v29 = (_QWORD *)(v28 + 16 * v27);
        v30 = *v29 == v24 && v29[1] == v23;
        if (v30 || (sub_1CA85C284() & 1) != 0)
        {
LABEL_45:
          swift_bridgeObjectRelease();
          if (__OFADD__(v64, 1))
            goto LABEL_74;
          ++v64;
          goto LABEL_65;
        }
        v31 = ~v26;
        while (1)
        {
          v27 = (v27 + 1) & v31;
          if (((*(_QWORD *)(v2 + ((v27 >> 3) & 0xFFFFFFFFFFFFF8)) >> v27) & 1) == 0)
            break;
          v32 = (_QWORD *)(v28 + 16 * v27);
          v33 = *v32 == v24 && v32[1] == v23;
          if (v33 || (sub_1CA85C284() & 1) != 0)
            goto LABEL_45;
        }
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRetain();
    }
    if (*(_QWORD *)(v67 + 16))
    {
      sub_1CA85C368();
      swift_bridgeObjectRetain();
      sub_1CA85B4B0();
      v34 = sub_1CA85C3B0();
      v35 = -1 << *(_BYTE *)(v67 + 32);
      v36 = v34 & ~v35;
      v2 = v67 + 56;
      if (((*(_QWORD *)(v67 + 56 + ((v36 >> 3) & 0xFFFFFFFFFFFFF8)) >> v36) & 1) == 0)
        goto LABEL_14;
      v37 = *(_QWORD *)(v67 + 48);
      v38 = (_QWORD *)(v37 + 16 * v36);
      v39 = *v38 == v24 && v38[1] == v23;
      if (v39 || (sub_1CA85C284() & 1) != 0)
      {
LABEL_63:
        swift_bridgeObjectRelease();
        if (__OFADD__(v63, 1))
          goto LABEL_75;
        ++v63;
LABEL_65:
        sub_1CA291EB8(v24, v23);
        v2 = v43;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        v40 = ~v35;
        while (1)
        {
          v36 = (v36 + 1) & v40;
          if (((*(_QWORD *)(v2 + ((v36 >> 3) & 0xFFFFFFFFFFFFF8)) >> v36) & 1) == 0)
            break;
          v41 = (_QWORD *)(v37 + 16 * v36);
          v42 = *v41 == v24 && v41[1] == v23;
          if (v42 || (sub_1CA85C284() & 1) != 0)
            goto LABEL_63;
        }
LABEL_14:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  v21 = v19 + 3;
  if (v21 < v66)
  {
    v20 = *(_QWORD *)(v65 + 8 * v21);
    if (!v20)
    {
      while (1)
      {
        v16 = v21 + 1;
        if (__OFADD__(v21, 1))
          goto LABEL_76;
        if (v16 >= v66)
          goto LABEL_67;
        v20 = *(_QWORD *)(v65 + 8 * v16);
        ++v21;
        if (v20)
          goto LABEL_30;
      }
    }
    v16 = v21;
    goto LABEL_30;
  }
LABEL_67:
  swift_release();
  swift_release();
  v44 = *(_QWORD *)(v67 + 16);
  swift_bridgeObjectRelease();
  v2 = *(_QWORD *)(v68 + 16);
  swift_bridgeObjectRelease();
  v7 = v60 + v64;
  if (__OFADD__(v60, v64))
    goto LABEL_78;
  v6 = v61 + v63;
  if (__OFADD__(v61, v63))
    goto LABEL_79;
  v5 = v59 + v44;
  if (__OFADD__(v59, v44))
    goto LABEL_80;
  v4 = v62 + v2;
  if (__OFADD__(v62, v2))
    goto LABEL_81;
  v8 = v58;
  v2 = v55;
  if (v58 != v56)
    goto LABEL_5;
LABEL_72:
  swift_bridgeObjectRelease();
  v45 = v52[2];
  v46 = v52[3];
  v47 = v52[4];
  v48 = v52[5];
  v49 = type metadata accessor for ImportantEntitiesTuningMetrics();
  v50 = swift_allocObject();
  ImportantEntitiesTuningMetrics.init(algorithmName:parameterName:truePositives:falsePositives:trueNegatives:falseNegatives:)(v45, v46, v47, v48, v7, v6, v5, v4);
  a2[3] = v49;
  a2[4] = (uint64_t)&protocol witness table for ImportantEntitiesTuningMetrics;
  *a2 = v50;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t _s11PhotosGraph30ImportantEntitiesTuningMetricsCfd_0()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t ImportantEntitiesTuningEvaluator.__deallocating_deinit()
{
  return sub_1CA291AD4();
}

uint64_t sub_1CA291AD4()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1CA291B0C@<X0>(unint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1CA291510(a1, a2);
}

uint64_t ImportantEntitiesTuningSubject.__allocating_init(withDetectionType:withGraph:truePositiveImportantEntitiesLocalIdentifiers:trueNegativeImportantEntitiesLocalIdentifiers:)(__int16 a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;

  v8 = swift_allocObject();
  *(_WORD *)(v8 + 40) = a1;
  *(_QWORD *)(v8 + 16) = a2;
  *(_QWORD *)(v8 + 24) = a3;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v8 + 32) = a4;
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t ImportantEntitiesTuningSubject.init(withDetectionType:withGraph:truePositiveImportantEntitiesLocalIdentifiers:trueNegativeImportantEntitiesLocalIdentifiers:)(__int16 a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;

  *(_WORD *)(v4 + 40) = a1;
  v6 = MEMORY[0x1E0DEE9E8];
  *(_QWORD *)(v4 + 24) = a3;
  *(_QWORD *)(v4 + 32) = v6;
  *(_QWORD *)(v4 + 16) = a2;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v4 + 32) = a4;
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_1CA291BE8(void *a1)
{
  id v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;

  v1 = objc_msgSend(a1, sel_localIdentifier);
  if (v1)
  {
    v2 = v1;
    v3 = sub_1CA85B534();
    v5 = v4;

    swift_beginAccess();
    sub_1CA23F448(&v8, v3, v5);
    swift_endAccess();
    return swift_bridgeObjectRelease();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94CE40);
    v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = xmmword_1CA8D4E40;
    *(_QWORD *)(v7 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v7 + 32) = 0xD000000000000067;
    *(_QWORD *)(v7 + 40) = 0x80000001CA889BC0;
    sub_1CA85C350();
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1CA291CF8(void *a1)
{
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  v1 = objc_msgSend(a1, sel_localIdentifier);
  v2 = sub_1CA85B534();
  v4 = v3;

  swift_beginAccess();
  sub_1CA23F448(&v6, v2, v4);
  swift_endAccess();
  return swift_bridgeObjectRelease();
}

unint64_t sub_1CA291D80()
{
  uint64_t v0;

  if (*(_WORD *)(v0 + 40) == 1)
    return 0xD00000000000002FLL;
  else
    return 0xD00000000000002ALL;
}

uint64_t ImportantEntitiesTuningSubject.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t ImportantEntitiesTuningSubject.__deallocating_deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

_QWORD *sub_1CA291E24@<X0>(_OWORD **a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *result;

  result = sub_1CA293324(*a1);
  *a2 = result;
  return result;
}

unint64_t sub_1CA291E50()
{
  uint64_t v0;

  if (*(_WORD *)(*(_QWORD *)v0 + 40) == 1)
    return 0xD00000000000002FLL;
  else
    return 0xD00000000000002ALL;
}

uint64_t type metadata accessor for ImportantEntitiesTuningEvent()
{
  return objc_opt_self();
}

uint64_t sub_1CA291EB8(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  BOOL v11;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  BOOL v17;
  uint64_t v19;

  v5 = *v2;
  sub_1CA85C368();
  swift_bridgeObjectRetain();
  sub_1CA85B4B0();
  v6 = sub_1CA85C3B0();
  v7 = -1 << *(_BYTE *)(v5 + 32);
  v8 = v6 & ~v7;
  if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
  {
LABEL_18:
    swift_bridgeObjectRelease();
    return 0;
  }
  v9 = *(_QWORD *)(v5 + 48);
  v10 = (_QWORD *)(v9 + 16 * v8);
  v11 = *v10 == a1 && v10[1] == a2;
  if (!v11 && (sub_1CA85C284() & 1) == 0)
  {
    v15 = ~v7;
    do
    {
      v8 = (v8 + 1) & v15;
      if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
        goto LABEL_18;
      v16 = (_QWORD *)(v9 + 16 * v8);
      v17 = *v16 == a1 && v16[1] == a2;
    }
    while (!v17 && (sub_1CA85C284() & 1) == 0);
  }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v13 = *v2;
  v19 = *v2;
  *v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1CA3628C4();
    v13 = v19;
  }
  v14 = *(_QWORD *)(*(_QWORD *)(v13 + 48) + 16 * v8);
  sub_1CA292724(v8);
  *v2 = v19;
  swift_bridgeObjectRelease();
  return v14;
}

uint64_t type metadata accessor for ImportantEntitiesTuningMetrics()
{
  return objc_opt_self();
}

uint64_t sub_1CA292064(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v2 = v1;
  v4 = *v2;
  v5 = sub_1CA85C35C();
  v6 = -1 << *(_BYTE *)(v4 + 32);
  v7 = v5 & ~v6;
  if (((*(_QWORD *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) == 0)
    return 0;
  v8 = *(_QWORD *)(v4 + 48);
  if (*(_QWORD *)(v8 + 8 * v7) != a1)
  {
    v9 = ~v6;
    do
    {
      v7 = (v7 + 1) & v9;
      if (((*(_QWORD *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) == 0)
        return 0;
    }
    while (*(_QWORD *)(v8 + 8 * v7) != a1);
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v11 = *v2;
  v14 = *v2;
  *v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1CA362AC0();
    v11 = v14;
  }
  v12 = *(_QWORD *)(*(_QWORD *)(v11 + 48) + 8 * v7);
  sub_1CA2928E8(v7);
  *v2 = v14;
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t sub_1CA29216C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t *v17;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v19;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v5 = type metadata accessor for SongSource();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (uint64_t *)((char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = *v2;
  sub_1CA85C368();
  swift_bridgeObjectRetain();
  SongSource.hash(into:)();
  v10 = sub_1CA85C3B0();
  v11 = -1 << *(_BYTE *)(v9 + 32);
  v12 = v10 & ~v11;
  if (((*(_QWORD *)(v9 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) != 0)
  {
    v22 = v2;
    v23 = v6;
    v24 = v5;
    v25 = a2;
    v13 = ~v11;
    v14 = *(_QWORD *)(v6 + 72);
    while (1)
    {
      sub_1CA24EE38(*(_QWORD *)(v9 + 48) + v14 * v12, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for SongSource);
      v15 = _s11PhotosGraph10SongSourceV2eeoiySbAC_ACtFZ_0(v8, a1);
      sub_1CA2669CC((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for SongSource);
      if ((v15 & 1) != 0)
        break;
      v12 = (v12 + 1) & v13;
      if (((*(_QWORD *)(v9 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        v16 = 1;
        a2 = v25;
        goto LABEL_10;
      }
    }
    swift_bridgeObjectRelease();
    v17 = v22;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v19 = *v17;
    v26 = *v17;
    *v17 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_1CA36304C();
      v19 = v26;
    }
    a2 = v25;
    sub_1CA293738(*(_QWORD *)(v19 + 48) + v14 * v12, v25);
    sub_1CA292D08(v12);
    *v17 = v26;
    swift_bridgeObjectRelease();
    v16 = 0;
LABEL_10:
    v6 = v23;
    v5 = v24;
  }
  else
  {
    swift_bridgeObjectRelease();
    v16 = 1;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(a2, v16, 1, v5);
}

uint64_t sub_1CA292358(void *a1)
{
  return sub_1CA2923A0(a1, (unint64_t *)&unk_1ED872E30, 0x1E0CD17C0, (void (*)(void))sub_1CA363444, sub_1CA245FAC);
}

uint64_t sub_1CA29237C(void *a1)
{
  return sub_1CA2923A0(a1, &qword_1ED872E40, (uint64_t)off_1E83FA6C0, (void (*)(void))sub_1CA363604, sub_1CA245FD0);
}

uint64_t sub_1CA2923A0(void *a1, unint64_t *a2, uint64_t a3, void (*a4)(void), uint64_t (*a5)(uint64_t, uint64_t))
{
  uint64_t *v5;
  uint64_t v8;
  uint64_t v10;
  id v11;
  char v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  id v18;
  char v19;
  uint64_t v20;
  id v21;
  char v22;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v24;
  uint64_t v26;

  v8 = *v5;
  if ((*v5 & 0xC000000000000001) != 0)
  {
    if (v8 < 0)
      v10 = *v5;
    else
      v10 = v8 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v11 = a1;
    v12 = sub_1CA85BE40();

    if ((v12 & 1) != 0)
    {
      v13 = sub_1CA292588(v10, (uint64_t)v11, a5, a2);
      swift_bridgeObjectRelease();
      return v13;
    }
LABEL_15:
    swift_bridgeObjectRelease();
    return 0;
  }
  swift_bridgeObjectRetain();
  v15 = sub_1CA85BC78();
  v16 = -1 << *(_BYTE *)(v8 + 32);
  v17 = v15 & ~v16;
  if (((*(_QWORD *)(v8 + 56 + ((v17 >> 3) & 0xFFFFFFFFFFFFF8)) >> v17) & 1) == 0)
    goto LABEL_15;
  sub_1CA24EEC0(0, a2);
  v18 = *(id *)(*(_QWORD *)(v8 + 48) + 8 * v17);
  v19 = sub_1CA85BC84();

  if ((v19 & 1) == 0)
  {
    v20 = ~v16;
    do
    {
      v17 = (v17 + 1) & v20;
      if (((*(_QWORD *)(v8 + 56 + ((v17 >> 3) & 0xFFFFFFFFFFFFF8)) >> v17) & 1) == 0)
        goto LABEL_15;
      v21 = *(id *)(*(_QWORD *)(v8 + 48) + 8 * v17);
      v22 = sub_1CA85BC84();

    }
    while ((v22 & 1) == 0);
  }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v24 = *v5;
  v26 = *v5;
  *v5 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    a4();
    v24 = v26;
  }
  v13 = *(_QWORD *)(*(_QWORD *)(v24 + 48) + 8 * v17);
  sub_1CA293184(v17);
  *v5 = v26;
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t sub_1CA292588(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t), unint64_t *a4)
{
  uint64_t *v4;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  id v14;
  char v15;
  uint64_t v16;
  id v17;
  char v18;
  uint64_t v19;
  uint64_t result;
  uint64_t v21;

  v7 = v4;
  swift_bridgeObjectRelease();
  v8 = sub_1CA85BE04();
  v9 = swift_unknownObjectRetain();
  v10 = a3(v9, v8);
  v21 = v10;
  swift_retain();
  v11 = sub_1CA85BC78();
  v12 = -1 << *(_BYTE *)(v10 + 32);
  v13 = v11 & ~v12;
  if (((*(_QWORD *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0)
  {
    sub_1CA24EEC0(0, a4);
    v14 = *(id *)(*(_QWORD *)(v10 + 48) + 8 * v13);
    v15 = sub_1CA85BC84();

    if ((v15 & 1) != 0)
    {
LABEL_6:
      swift_release();
      v19 = *(_QWORD *)(*(_QWORD *)(v10 + 48) + 8 * v13);
      sub_1CA293184(v13);
      if ((sub_1CA85BC84() & 1) != 0)
      {
        *v7 = v21;
        return v19;
      }
      __break(1u);
    }
    else
    {
      v16 = ~v12;
      while (1)
      {
        v13 = (v13 + 1) & v16;
        if (((*(_QWORD *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
          break;
        v17 = *(id *)(*(_QWORD *)(v10 + 48) + 8 * v13);
        v18 = sub_1CA85BC84();

        if ((v18 & 1) != 0)
          goto LABEL_6;
      }
    }
    swift_release();
    __break(1u);
  }
  result = swift_release();
  __break(1u);
  return result;
}

unint64_t sub_1CA292724(unint64_t result)
{
  uint64_t *v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _OWORD *v13;
  _OWORD *v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;

  v2 = result;
  v3 = *v1;
  v4 = *v1 + 56;
  v5 = -1 << *(_BYTE *)(*v1 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    swift_retain();
    v8 = sub_1CA85BDA4();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      do
      {
        sub_1CA85C368();
        swift_bridgeObjectRetain();
        sub_1CA85B4B0();
        v10 = sub_1CA85C3B0();
        swift_bridgeObjectRelease();
        v11 = v10 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v11 < v9)
            goto LABEL_5;
        }
        else if (v11 >= v9)
        {
          goto LABEL_11;
        }
        if (v2 >= (uint64_t)v11)
        {
LABEL_11:
          v12 = *(_QWORD *)(v3 + 48);
          v13 = (_OWORD *)(v12 + 16 * v2);
          v14 = (_OWORD *)(v12 + 16 * v6);
          if (v2 != v6 || (v2 = v6, v13 >= v14 + 1))
          {
            *v13 = *v14;
            v2 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(_QWORD *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    result = swift_release();
  }
  else
  {
    *(_QWORD *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  v15 = *(_QWORD *)(v3 + 16);
  v16 = __OFSUB__(v15, 1);
  v17 = v15 - 1;
  if (v16)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v3 + 16) = v17;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

unint64_t sub_1CA2928E8(unint64_t result)
{
  uint64_t *v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;

  v2 = result;
  v3 = *v1;
  v4 = *v1 + 56;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    swift_retain();
    v8 = sub_1CA85BDA4();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      do
      {
        v10 = *(_QWORD *)(v3 + 48);
        v11 = (_QWORD *)(v10 + 8 * v6);
        v12 = sub_1CA85C35C() & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v12 >= v9 && v2 >= v12)
          {
LABEL_16:
            v15 = (_QWORD *)(v10 + 8 * v2);
            if (v2 != v6 || (v2 = v6, v15 >= v11 + 1))
            {
              *v15 = *v11;
              v2 = v6;
            }
          }
        }
        else if (v12 >= v9 || v2 >= v12)
        {
          goto LABEL_16;
        }
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(_QWORD *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    result = swift_release();
  }
  else
  {
    *(_QWORD *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  v16 = *(_QWORD *)(v3 + 16);
  v17 = __OFSUB__(v16, 1);
  v18 = v16 - 1;
  if (v17)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v3 + 16) = v18;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

void sub_1CA292A6C(int64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char *v27;

  v24 = type metadata accessor for Song();
  v3 = *(_QWORD *)(v24 - 8);
  MEMORY[0x1E0C80A78](v24);
  v27 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *v1;
  v6 = *v1 + 56;
  v7 = -1 << *(_BYTE *)(*v1 + 32);
  v8 = (a1 + 1) & ~v7;
  if (((1 << v8) & *(_QWORD *)(v6 + 8 * (v8 >> 6))) != 0)
  {
    v23 = v1;
    v9 = ~v7;
    swift_retain();
    v10 = sub_1CA85BDA4();
    if ((*(_QWORD *)(v6 + 8 * (v8 >> 6)) & (1 << v8)) != 0)
    {
      v25 = v6;
      v26 = (v10 + 1) & v9;
      v11 = *(_QWORD *)(v3 + 72);
      v12 = (uint64_t)v27;
      do
      {
        v13 = v11;
        v14 = v11 * v8;
        sub_1CA24EE38(*(_QWORD *)(v5 + 48) + v11 * v8, v12, (uint64_t (*)(_QWORD))type metadata accessor for Song);
        sub_1CA85C368();
        v15 = v9;
        swift_bridgeObjectRetain();
        sub_1CA85B4B0();
        swift_bridgeObjectRelease();
        v16 = sub_1CA85C3B0();
        sub_1CA2669CC(v12, (uint64_t (*)(_QWORD))type metadata accessor for Song);
        v17 = v16 & v15;
        v9 = v15;
        if (a1 >= (uint64_t)v26)
        {
          if (v17 < v26)
          {
            v6 = v25;
            v11 = v13;
            goto LABEL_6;
          }
          v6 = v25;
          v11 = v13;
          if (a1 < (uint64_t)v17)
            goto LABEL_6;
        }
        else
        {
          v6 = v25;
          v11 = v13;
          if (v17 < v26 && a1 < (uint64_t)v17)
            goto LABEL_6;
        }
        v18 = v11 * a1;
        if (v11 * a1 < v14 || *(_QWORD *)(v5 + 48) + v11 * a1 >= (unint64_t)(*(_QWORD *)(v5 + 48) + v14 + v11))
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          a1 = v8;
          if (v18 == v14)
            goto LABEL_6;
          swift_arrayInitWithTakeBackToFront();
        }
        a1 = v8;
LABEL_6:
        v8 = (v8 + 1) & v9;
      }
      while (((*(_QWORD *)(v6 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0);
    }
    *(_QWORD *)(v6 + (((unint64_t)a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
    swift_release();
    v1 = v23;
  }
  else
  {
    *(_QWORD *)(v6 + (((unint64_t)a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
  }
  v19 = *v1;
  v20 = *(_QWORD *)(*v1 + 16);
  v21 = __OFSUB__(v20, 1);
  v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v19 + 16) = v22;
    ++*(_DWORD *)(v19 + 36);
  }
}

void sub_1CA292D08(unint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  char *v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int64_t v44;

  v3 = sub_1CA85A5B0();
  v42 = *(_QWORD *)(v3 - 8);
  v43 = v3;
  MEMORY[0x1E0C80A78](v3);
  v37 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8711C0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = type metadata accessor for SongSource();
  v8 = *(_QWORD *)(v38 - 8);
  MEMORY[0x1E0C80A78](v38);
  v10 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = v1;
  v11 = *v1;
  v12 = *v1 + 56;
  v13 = -1 << *(_BYTE *)(*v1 + 32);
  v14 = (a1 + 1) & ~v13;
  if (((1 << v14) & *(_QWORD *)(v12 + 8 * (v14 >> 6))) != 0)
  {
    v15 = ~v13;
    swift_retain();
    v16 = sub_1CA85BDA4();
    if ((*(_QWORD *)(v12 + 8 * (v14 >> 6)) & (1 << v14)) != 0)
    {
      v17 = *(_QWORD *)(v8 + 72);
      v18 = (int *)v38;
      v40 = (v16 + 1) & v15;
      v41 = v15;
      v39 = v17;
      while (1)
      {
        v19 = *(_QWORD *)(v11 + 48);
        v44 = v17 * v14;
        sub_1CA24EE38(v19 + v17 * v14, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for SongSource);
        sub_1CA85C368();
        swift_bridgeObjectRetain();
        sub_1CA85B4B0();
        swift_bridgeObjectRelease();
        if (*(_QWORD *)&v10[v18[11] + 8])
        {
          sub_1CA85C380();
          swift_bridgeObjectRetain();
          sub_1CA85B4B0();
          swift_bridgeObjectRelease();
        }
        else
        {
          sub_1CA85C380();
        }
        sub_1CA29377C((uint64_t)&v10[v18[7]], (uint64_t)v7);
        v21 = v42;
        v20 = v43;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48))(v7, 1, v43) == 1)
        {
          sub_1CA85C380();
        }
        else
        {
          v22 = v11;
          v23 = a1;
          v24 = v12;
          v25 = v7;
          v26 = v37;
          (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v37, v25, v20);
          sub_1CA85C380();
          sub_1CA2937C4();
          sub_1CA85B4A4();
          v27 = v26;
          v7 = v25;
          v12 = v24;
          a1 = v23;
          v11 = v22;
          v18 = (int *)v38;
          (*(void (**)(char *, uint64_t))(v21 + 8))(v27, v20);
        }
        if (*(_QWORD *)&v10[v18[8] + 8])
        {
          sub_1CA85C380();
          swift_bridgeObjectRetain();
          sub_1CA85B4B0();
          swift_bridgeObjectRelease();
        }
        else
        {
          sub_1CA85C380();
        }
        if (*(_QWORD *)&v10[v18[12] + 8])
        {
          sub_1CA85C380();
          swift_bridgeObjectRetain();
          sub_1CA85B4B0();
          swift_bridgeObjectRelease();
        }
        else
        {
          sub_1CA85C380();
        }
        v17 = v39;
        v28 = sub_1CA85C3B0();
        sub_1CA2669CC((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for SongSource);
        v29 = v28 & v41;
        v30 = v41;
        if ((uint64_t)a1 >= (uint64_t)v40)
          break;
        if (v29 < v40)
          goto LABEL_23;
LABEL_24:
        v31 = v17 * a1;
        if ((uint64_t)(v17 * a1) < v44 || *(_QWORD *)(v11 + 48) + v17 * a1 >= *(_QWORD *)(v11 + 48) + v44 + v17)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          a1 = v14;
          if (v31 == v44)
            goto LABEL_6;
          swift_arrayInitWithTakeBackToFront();
        }
        a1 = v14;
LABEL_6:
        v14 = (v14 + 1) & v30;
        if (((*(_QWORD *)(v12 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) == 0)
          goto LABEL_28;
      }
      if (v29 < v40)
        goto LABEL_6;
LABEL_23:
      if ((uint64_t)a1 < (uint64_t)v29)
        goto LABEL_6;
      goto LABEL_24;
    }
LABEL_28:
    *(_QWORD *)(v12 + ((a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
    swift_release();
  }
  else
  {
    *(_QWORD *)(v12 + ((a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
  }
  v32 = *v36;
  v33 = *(_QWORD *)(*v36 + 16);
  v34 = __OFSUB__(v33, 1);
  v35 = v33 - 1;
  if (v34)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v32 + 16) = v35;
    ++*(_DWORD *)(v32 + 36);
  }
}

unint64_t sub_1CA293184(unint64_t result)
{
  uint64_t *v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  id v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;

  v2 = result;
  v3 = *v1;
  v4 = *v1 + 56;
  v5 = -1 << *(_BYTE *)(*v1 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    swift_retain();
    v8 = sub_1CA85BDA4();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      do
      {
        v10 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v6);
        v11 = sub_1CA85BC78();

        v12 = v11 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v12 >= v9 && v2 >= (uint64_t)v12)
          {
LABEL_16:
            v15 = *(_QWORD *)(v3 + 48);
            v16 = (_QWORD *)(v15 + 8 * v2);
            v17 = (_QWORD *)(v15 + 8 * v6);
            if (v2 != v6 || (v2 = v6, v16 >= v17 + 1))
            {
              *v16 = *v17;
              v2 = v6;
            }
          }
        }
        else if (v12 >= v9 || v2 >= (uint64_t)v12)
        {
          goto LABEL_16;
        }
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(_QWORD *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    result = swift_release();
  }
  else
  {
    *(_QWORD *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  v18 = *(_QWORD *)(v3 + 16);
  v19 = __OFSUB__(v18, 1);
  v20 = v18 - 1;
  if (v19)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v3 + 16) = v20;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

_QWORD *sub_1CA293324(_OWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  void *v5;
  __int128 *v6;
  __int128 v7;
  id v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *result;
  __int128 v16;
  __int128 v17;
  __int128 v18;

  v2 = v1;
  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = MEMORY[0x1E0DEE9E8];
  v5 = *(void **)(v2 + 16);
  v6 = a1 + 2;
  v7 = a1[3];
  if (*(_WORD *)(v2 + 40) == 1)
  {
    v16 = *v6;
    v17 = v7;
    v18 = a1[4];
    type metadata accessor for ImportantEntitiesChildrenContainer();
    swift_allocObject();
    v8 = v5;
    swift_retain_n();
    v9 = sub_1CA368250(v8, (void (*)(double))GEOLocationCoordinate2DMake, 0, (uint64_t)sub_1CA293838, v4);
    sub_1CA3A85D8(v9, (uint64_t)&v16, 0);
  }
  else
  {
    v16 = *v6;
    v17 = v7;
    v18 = a1[4];
    type metadata accessor for ImportantEntitiesPetContainer();
    swift_allocObject();
    v10 = v5;
    swift_retain_n();
    v11 = sub_1CA4869E4(v10, (void (*)(double))GEOLocationCoordinate2DMake, 0, (uint64_t)sub_1CA293830, v4);
    sub_1CA3AF8F0(v11, (uint64_t)&v16, 0);
  }
  swift_release();
  swift_bridgeObjectRelease();

  swift_release();
  swift_beginAccess();
  v12 = *(_QWORD *)(v4 + 16);
  v14 = *(_QWORD *)(v2 + 24);
  v13 = *(_QWORD *)(v2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_release();
  type metadata accessor for ImportantEntitiesTuningResult();
  result = (_QWORD *)swift_allocObject();
  result[2] = v12;
  result[3] = v14;
  result[4] = v13;
  return result;
}

_UNKNOWN **sub_1CA2934EC()
{
  return &protocol witness table for ImportantEntitiesTuningEvent;
}

_UNKNOWN **sub_1CA2934F8()
{
  return &protocol witness table for ImportantEntitiesTuningResult;
}

unint64_t sub_1CA293508()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF94BAF0;
  if (!qword_1EF94BAF0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF94BAF8);
    result = MEMORY[0x1CAA4F1A4](&protocol conformance descriptor for PGTuningContextNone<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1EF94BAF0);
  }
  return result;
}

_UNKNOWN **sub_1CA293554()
{
  return &protocol witness table for ImportantEntitiesTuningParameter;
}

uint64_t sub_1CA293560@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a1;
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 24);
  *a2 = *(_QWORD *)(v3 + 16);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for ImportantEntitiesTuningParameter()
{
  return objc_opt_self();
}

uint64_t method lookup function for ImportantEntitiesTuningParameter()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ImportantEntitiesTuningParameter.name.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 96))();
}

uint64_t dispatch thunk of ImportantEntitiesTuningParameter.name.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

uint64_t dispatch thunk of ImportantEntitiesTuningParameter.name.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t dispatch thunk of ImportantEntitiesTuningParameter.__allocating_init(withName:andParameter:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t method lookup function for ImportantEntitiesTuningEvent()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ImportantEntitiesTuningEvent.__allocating_init(withGraph:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of ImportantEntitiesTuningEvent.timestamp()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t type metadata accessor for ImportantEntitiesTuningResult()
{
  return objc_opt_self();
}

uint64_t method lookup function for ImportantEntitiesTuningResult()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ImportantEntitiesTuningResult.__allocating_init(inferredImportantEntitiesLocalIdentifiers:truePositiveImportantEntitiesLocalIdentifiers:trueNegativeImportantEntitiesLocalIdentifiers:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 176))();
}

uint64_t method lookup function for ImportantEntitiesTuningMetrics()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ImportantEntitiesTuningMetrics.__allocating_init(algorithmName:parameterName:truePositives:falsePositives:trueNegatives:falseNegatives:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t dispatch thunk of ImportantEntitiesTuningMetrics.payload()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t type metadata accessor for ImportantEntitiesTuningEventFactory()
{
  return objc_opt_self();
}

uint64_t method lookup function for ImportantEntitiesTuningEventFactory()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ImportantEntitiesTuningEventFactory.__allocating_init(withGraph:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t type metadata accessor for ImportantEntitiesTuningEvaluator()
{
  return objc_opt_self();
}

uint64_t method lookup function for ImportantEntitiesTuningEvaluator()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ImportantEntitiesTuningEvaluator.__allocating_init(algorithmName:parameterName:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t dispatch thunk of ImportantEntitiesTuningEvaluator.evaluateResults(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t type metadata accessor for ImportantEntitiesTuningSubject()
{
  return objc_opt_self();
}

uint64_t method lookup function for ImportantEntitiesTuningSubject()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ImportantEntitiesTuningSubject.__allocating_init(withDetectionType:withGraph:truePositiveImportantEntitiesLocalIdentifiers:trueNegativeImportantEntitiesLocalIdentifiers:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 184))();
}

uint64_t dispatch thunk of ImportantEntitiesTuningSubject.run(withParameter:onEvent:withContext:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 192))();
}

uint64_t dispatch thunk of ImportantEntitiesTuningSubject.name()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 200))();
}

uint64_t sub_1CA293738(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SongSource();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1CA29377C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8711C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_1CA2937C4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED871190;
  if (!qword_1ED871190)
  {
    v1 = sub_1CA85A5B0();
    result = MEMORY[0x1CAA4F1A4](MEMORY[0x1E0CB08A8], v1);
    atomic_store(result, (unint64_t *)&qword_1ED871190);
  }
  return result;
}

uint64_t sub_1CA29380C()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1CA293830(void *a1)
{
  return sub_1CA291CF8(a1);
}

uint64_t sub_1CA293838(void *a1)
{
  return sub_1CA291BE8(a1);
}

uint64_t SongSource.identifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SongSource.dateLastUpdated.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for SongSource() + 20);
  return sub_1CA29377C(v3, a1);
}

uint64_t type metadata accessor for SongSource()
{
  uint64_t result;

  result = qword_1ED871248;
  if (!qword_1ED871248)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t SongSource.songCount.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for SongSource() + 24));
}

uint64_t SongSource.date.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for SongSource() + 28);
  return sub_1CA29377C(v3, a1);
}

uint64_t SongSource.geohash.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for SongSource() + 32));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SongSource.latitude.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for SongSource() + 36));
}

uint64_t SongSource.longitude.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for SongSource() + 40));
}

uint64_t SongSource.version.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for SongSource() + 44));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SongSource.category.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for SongSource() + 48));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SongSource.isInCache.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for SongSource() + 52));
}

uint64_t SongSource.isInCache.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for SongSource();
  *(_BYTE *)(v1 + *(int *)(result + 52)) = a1;
  return result;
}

uint64_t (*SongSource.isInCache.modify())(double)
{
  type metadata accessor for SongSource();
  return GEOLocationCoordinate2DMake;
}

uint64_t SongSource.init(identifier:version:category:date:location:locationTolerance:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, void *a8@<X7>, _QWORD *a9@<X8>, unsigned __int8 *a10)
{
  uint64_t v17;
  int *v18;
  _QWORD *v19;
  _QWORD *v20;
  _QWORD *v21;
  char *v22;
  char v23;
  uint64_t v24;
  uint64_t inited;
  double v26;
  double v27;
  double v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t result;

  v17 = *a10;
  *a9 = a1;
  a9[1] = a2;
  v18 = (int *)type metadata accessor for SongSource();
  v19 = (_QWORD *)((char *)a9 + v18[11]);
  *v19 = a3;
  v19[1] = a4;
  sub_1CA29377C(a7, (uint64_t)a9 + v18[7]);
  v20 = (_QWORD *)((char *)a9 + v18[12]);
  *v20 = a5;
  v20[1] = a6;
  if (a8)
  {
    if ((_DWORD)v17 != 11)
    {
      type metadata accessor for Geohash();
      inited = swift_initStackObject();
      *(_QWORD *)(inited + 16) = 0;
      *(_QWORD *)(inited + 24) = 0;
      objc_msgSend(a8, sel_coordinate);
      v27 = v26;
      objc_msgSend(a8, sel_coordinate);
      v29 = sub_1CA488858(v17 + 1, v27, v28);
      v31 = v30;
      swift_setDeallocating();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v32 = (_QWORD *)((char *)a9 + v18[8]);
      *v32 = v29;
      v32[1] = v31;
      objc_msgSend(a8, sel_coordinate);
      v33 = (char *)a9 + v18[9];
      *(_QWORD *)v33 = v34;
      v33[8] = 0;
      objc_msgSend(a8, sel_coordinate);
      v36 = v35;

      sub_1CA267BE8(a7, &qword_1ED8711C0);
      v23 = 0;
      v24 = v18[10];
      *(_QWORD *)((char *)a9 + v24) = v36;
      goto LABEL_6;
    }

  }
  sub_1CA267BE8(a7, &qword_1ED8711C0);
  v21 = (_QWORD *)((char *)a9 + v18[8]);
  *v21 = 0;
  v21[1] = 0;
  v22 = (char *)a9 + v18[9];
  *(_QWORD *)v22 = 0;
  v23 = 1;
  v22[8] = 1;
  v24 = v18[10];
  *(_QWORD *)((char *)a9 + v24) = 0;
LABEL_6:
  *((_BYTE *)a9 + v24 + 8) = v23;
  v37 = (char *)a9 + v18[5];
  v38 = sub_1CA85A5B0();
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56))(v37, 1, 1, v38);
  *(_QWORD *)((char *)a9 + v18[6]) = 0;
  *((_BYTE *)a9 + v18[13]) = 0;
  return result;
}

id SongSource.location.getter()
{
  uint64_t v0;
  uint64_t v1;
  id result;
  uint64_t v3;
  uint64_t v4;

  v1 = type metadata accessor for SongSource();
  result = 0;
  v3 = v0 + *(int *)(v1 + 36);
  if ((*(_BYTE *)(v3 + 8) & 1) == 0)
  {
    v4 = v0 + *(int *)(v1 + 40);
    if ((*(_BYTE *)(v4 + 8) & 1) != 0)
      return 0;
    else
      return objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C9E3B8]), sel_initWithLatitude_longitude_, *(double *)v3, *(double *)v4);
  }
  return result;
}

uint64_t SongSource.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  int *v8;
  uint64_t v10;

  v1 = sub_1CA85A5B0();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8711C0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  sub_1CA85B4B0();
  swift_bridgeObjectRelease();
  v8 = (int *)type metadata accessor for SongSource();
  if (*(_QWORD *)(v0 + v8[11] + 8))
  {
    sub_1CA85C380();
    swift_bridgeObjectRetain();
    sub_1CA85B4B0();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1CA85C380();
  }
  sub_1CA29377C(v0 + v8[7], (uint64_t)v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v7, 1, v1) == 1)
  {
    sub_1CA85C380();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, v7, v1);
    sub_1CA85C380();
    sub_1CA23CC98((unint64_t *)&qword_1ED871190, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08A8]);
    sub_1CA85B4A4();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  if (*(_QWORD *)(v0 + v8[8] + 8))
  {
    sub_1CA85C380();
    swift_bridgeObjectRetain();
    sub_1CA85B4B0();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1CA85C380();
  }
  if (!*(_QWORD *)(v0 + v8[12] + 8))
    return sub_1CA85C380();
  sub_1CA85C380();
  swift_bridgeObjectRetain();
  sub_1CA85B4B0();
  return swift_bridgeObjectRelease();
}

uint64_t SongSource.description.getter()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  int *v16;
  id v17;
  uint64_t (*v18)(char *, uint64_t, uint64_t);
  int v19;
  void *v20;
  id v21;
  id v22;
  uint64_t v23;
  char *v24;
  void *v25;
  id v26;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8711C0);
  v3 = MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v28 - v6;
  v8 = sub_1CA85A5B0();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x1E0C80A78](v8);
  v30 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v28 - v12;
  v14 = *v0;
  v15 = v0[1];
  v36 = v14;
  v37 = v15;
  v16 = (int *)type metadata accessor for SongSource();
  if (*(_QWORD *)((char *)v1 + v16[11] + 8))
  {
    v34 = 2128928;
    v35 = 0xE300000000000000;
    swift_bridgeObjectRetain();
    sub_1CA85B624();
    sub_1CA85B624();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  if (*(_QWORD *)((char *)v1 + v16[12] + 8))
  {
    v34 = 2128928;
    v35 = 0xE300000000000000;
    sub_1CA85B624();
    sub_1CA85B624();
    swift_bridgeObjectRelease();
  }
  v17 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB36A8]), sel_init);
  sub_1CA29377C((uint64_t)v1 + v16[7], (uint64_t)v7);
  v18 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48);
  v19 = v18(v7, 1, v8);
  v31 = v9;
  v32 = v17;
  if (v19 == 1)
  {
    sub_1CA267BE8((uint64_t)v7, &qword_1ED8711C0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v13, v7, v8);
    v34 = 2128928;
    v35 = 0xE300000000000000;
    v20 = (void *)sub_1CA85A508();
    v21 = objc_msgSend(v17, sel_stringFromDate_, v20);

    sub_1CA85B534();
    v29 = v13;

    sub_1CA85B624();
    swift_bridgeObjectRelease();
    sub_1CA85B624();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v29, v8);
  }
  if (*(_QWORD *)((char *)v1 + v16[8] + 8))
  {
    v34 = 2128928;
    v35 = 0xE300000000000000;
    sub_1CA85B624();
    sub_1CA85B624();
    swift_bridgeObjectRelease();
    if ((*((_BYTE *)v1 + v16[9] + 8) & 1) == 0 && (*((_BYTE *)v1 + v16[10] + 8) & 1) == 0)
    {
      v34 = 0;
      v35 = 0xE000000000000000;
      sub_1CA85B624();
      sub_1CA85B93C();
      sub_1CA85B624();
      sub_1CA85B93C();
      sub_1CA85B624();
      sub_1CA85B624();
      swift_bridgeObjectRelease();
    }
  }
  v34 = 2112032;
  v35 = 0xE300000000000000;
  sub_1CA85B624();
  swift_bridgeObjectRelease();
  sub_1CA85B624();
  swift_bridgeObjectRelease();
  sub_1CA29377C((uint64_t)v1 + v16[5], (uint64_t)v5);
  if (v18(v5, 1, v8) == 1)
  {
    sub_1CA267BE8((uint64_t)v5, &qword_1ED8711C0);
    v22 = v32;
  }
  else
  {
    v24 = v30;
    v23 = v31;
    (*(void (**)(char *, char *, uint64_t))(v31 + 32))(v30, v5, v8);
    v34 = 2128928;
    v35 = 0xE300000000000000;
    v25 = (void *)sub_1CA85A508();
    v22 = v32;
    v26 = objc_msgSend(v32, sel_stringFromDate_, v25);

    sub_1CA85B534();
    sub_1CA85B624();
    swift_bridgeObjectRelease();
    sub_1CA85B624();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v24, v8);
  }
  v34 = 2128928;
  v35 = 0xE300000000000000;
  v33 = *(_QWORD *)((char *)v1 + v16[6]);
  sub_1CA85C260();
  sub_1CA85B624();
  swift_bridgeObjectRelease();
  sub_1CA85B624();
  swift_bridgeObjectRelease();

  return v36;
}

uint64_t sub_1CA294508(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1CA294540 + 4 * byte_1CA8D5BE0[a1]))(0x696669746E656469, 0xEA00000000007265);
}

uint64_t sub_1CA294540()
{
  return 0x7473614C65746164;
}

uint64_t sub_1CA294564()
{
  return 0x6E756F43676E6F73;
}

uint64_t sub_1CA294584()
{
  return 1702125924;
}

uint64_t sub_1CA294594()
{
  return 0x687361686F6567;
}

uint64_t sub_1CA2945AC()
{
  return 0x656475746974616CLL;
}

uint64_t sub_1CA2945C4()
{
  return 0x64757469676E6F6CLL;
}

uint64_t sub_1CA294624()
{
  unsigned __int8 *v0;

  return sub_1CA294508(*v0);
}

uint64_t sub_1CA29462C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1CA2965AC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1CA294650()
{
  return 0;
}

void sub_1CA29465C(_BYTE *a1@<X8>)
{
  *a1 = 10;
}

uint64_t sub_1CA294668()
{
  sub_1CA2954F4();
  return sub_1CA85C3E0();
}

uint64_t sub_1CA294690()
{
  sub_1CA2954F4();
  return sub_1CA85C3EC();
}

uint64_t SongSource.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE v8[32];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94C198);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1CA2954F4();
  sub_1CA85C3D4();
  v8[31] = 0;
  sub_1CA85C1F4();
  if (!v1)
  {
    type metadata accessor for SongSource();
    v8[30] = 1;
    sub_1CA85A5B0();
    sub_1CA23CC98(&qword_1ED871188, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB0890]);
    sub_1CA85C1E8();
    v8[29] = 2;
    sub_1CA85C224();
    v8[28] = 3;
    sub_1CA85C1E8();
    v8[27] = 4;
    sub_1CA85C1AC();
    v8[26] = 5;
    sub_1CA85C1C4();
    v8[25] = 6;
    sub_1CA85C1C4();
    v8[24] = 7;
    sub_1CA85C1AC();
    v8[15] = 8;
    sub_1CA85C1AC();
    v8[14] = 9;
    sub_1CA85C200();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t SongSource.hashValue.getter()
{
  sub_1CA85C368();
  SongSource.hash(into:)();
  return sub_1CA85C3B0();
}

uint64_t SongSource.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int *v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char v26;
  uint64_t v27;
  char *v28;
  char v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  char v36;
  char v37;
  uint64_t v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t *v45;
  int *v46;
  char v47;
  char v48;
  char v49;
  char v50;
  char v51;
  char v52;
  char v53;
  char v54;
  char v55;
  char v56;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8711C0);
  v6 = MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v40 - v9;
  v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94C1A8);
  v11 = *(_QWORD *)(v43 - 8);
  MEMORY[0x1E0C80A78](v43);
  v13 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = (int *)type metadata accessor for SongSource();
  MEMORY[0x1E0C80A78](v46);
  v44 = a1;
  v45 = (uint64_t *)((char *)&v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1CA2954F4();
  sub_1CA85C3C8();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v44);
  v41 = a2;
  v42 = v11;
  v56 = 0;
  v15 = sub_1CA85C158();
  v16 = v45;
  *v45 = v15;
  v16[1] = v17;
  sub_1CA85A5B0();
  v55 = 1;
  v18 = sub_1CA23CC98(&qword_1EF94C1B0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08C0]);
  sub_1CA85C14C();
  v40 = v18;
  sub_1CA295538((uint64_t)v10, (uint64_t)v16 + v46[5]);
  v54 = 2;
  v19 = sub_1CA85C188();
  v20 = v46;
  *(uint64_t *)((char *)v16 + v46[6]) = v19;
  v53 = 3;
  sub_1CA85C14C();
  sub_1CA295538((uint64_t)v8, (uint64_t)v16 + v20[7]);
  v52 = 4;
  v21 = sub_1CA85C110();
  v22 = (uint64_t *)((char *)v16 + v20[8]);
  *v22 = v21;
  v22[1] = v23;
  v51 = 5;
  v24 = sub_1CA85C128();
  v25 = (char *)v16 + v20[9];
  *(_QWORD *)v25 = v24;
  v25[8] = v26 & 1;
  v50 = 6;
  v27 = sub_1CA85C128();
  v28 = (char *)v16 + v20[10];
  *(_QWORD *)v28 = v27;
  v28[8] = v29 & 1;
  v49 = 7;
  v30 = sub_1CA85C110();
  v31 = (uint64_t *)((char *)v16 + v20[11]);
  *v31 = v30;
  v31[1] = v32;
  v48 = 8;
  v33 = sub_1CA85C110();
  v34 = (uint64_t *)((char *)v45 + v20[12]);
  *v34 = v33;
  v34[1] = v35;
  v47 = 9;
  v36 = sub_1CA85C164();
  (*(void (**)(char *, uint64_t))(v42 + 8))(v13, v43);
  v37 = v36 & 1;
  v38 = (uint64_t)v45;
  *((_BYTE *)v45 + v46[13]) = v37;
  sub_1CA295580(v38, v41);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v44);
  return sub_1CA24EDFC(v38);
}

uint64_t sub_1CA294FD0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return SongSource.init(from:)(a1, a2);
}

uint64_t sub_1CA294FE4(_QWORD *a1)
{
  return SongSource.encode(to:)(a1);
}

uint64_t sub_1CA294FF8()
{
  sub_1CA85C368();
  SongSource.hash(into:)();
  return sub_1CA85C3B0();
}

uint64_t sub_1CA295038()
{
  sub_1CA85C368();
  SongSource.hash(into:)();
  return sub_1CA85C3B0();
}

uint64_t _s11PhotosGraph10SongSourceV2eeoiySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int (*v26)(uint64_t, uint64_t, uint64_t);
  _BYTE *v27;
  _BYTE *v28;
  uint64_t v29;
  _BYTE *v31;
  void (*v32)(_BYTE *, uint64_t);
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  _QWORD *v36;
  _BYTE v37[12];
  int v38;
  _BYTE *v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;

  v4 = sub_1CA85A5B0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v39 = &v37[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8711C0);
  MEMORY[0x1E0C80A78](v7);
  v9 = &v37[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8744C0);
  MEMORY[0x1E0C80A78](v10);
  v12 = &v37[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v42 = type metadata accessor for SongSource();
  MEMORY[0x1E0C80A78](v42);
  v40 = &v37[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v14);
  v41 = &v37[-v15];
  MEMORY[0x1E0C80A78](v16);
  v18 = &v37[-v17];
  MEMORY[0x1E0C80A78](v19);
  v21 = &v37[-v20];
  if (*a1 == *a2 && a1[1] == a2[1])
  {
    sub_1CA295580((uint64_t)a1, (uint64_t)&v37[-v20]);
    sub_1CA295580((uint64_t)a2, (uint64_t)v18);
  }
  else
  {
    v22 = sub_1CA85C284();
    sub_1CA295580((uint64_t)a1, (uint64_t)v21);
    sub_1CA295580((uint64_t)a2, (uint64_t)v18);
    if ((v22 & 1) == 0)
    {
      sub_1CA24EDFC((uint64_t)v18);
      sub_1CA24EDFC((uint64_t)v21);
      goto LABEL_12;
    }
  }
  v23 = *(int *)(v42 + 28);
  v24 = (uint64_t)&v18[v23];
  v25 = (uint64_t)&v12[*(int *)(v10 + 48)];
  sub_1CA29377C((uint64_t)&v21[v23], (uint64_t)v12);
  sub_1CA29377C(v24, v25);
  v26 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v26((uint64_t)v12, 1, v4) == 1)
  {
    sub_1CA24EDFC((uint64_t)v18);
    sub_1CA24EDFC((uint64_t)v21);
    if (v26(v25, 1, v4) == 1)
    {
      sub_1CA267BE8((uint64_t)v12, &qword_1ED8711C0);
      v27 = v41;
      sub_1CA295580((uint64_t)a1, (uint64_t)v41);
      v28 = v40;
      sub_1CA295580((uint64_t)a2, (uint64_t)v40);
      goto LABEL_17;
    }
    goto LABEL_10;
  }
  sub_1CA29377C((uint64_t)v12, (uint64_t)v9);
  if (v26(v25, 1, v4) == 1)
  {
    sub_1CA24EDFC((uint64_t)v18);
    sub_1CA24EDFC((uint64_t)v21);
    (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v9, v4);
LABEL_10:
    sub_1CA267BE8((uint64_t)v12, &qword_1ED8744C0);
LABEL_12:
    v28 = v40;
    v27 = v41;
    sub_1CA295580((uint64_t)a1, (uint64_t)v41);
    sub_1CA295580((uint64_t)a2, (uint64_t)v28);
LABEL_13:
    sub_1CA24EDFC((uint64_t)v28);
    sub_1CA24EDFC((uint64_t)v27);
LABEL_14:
    LOBYTE(v29) = 0;
    return v29 & 1;
  }
  v31 = v39;
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v5 + 32))(v39, v25, v4);
  sub_1CA23CC98((unint64_t *)&unk_1ED8711B0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08B8]);
  v38 = sub_1CA85B504();
  v32 = *(void (**)(_BYTE *, uint64_t))(v5 + 8);
  v32(v31, v4);
  sub_1CA24EDFC((uint64_t)v18);
  sub_1CA24EDFC((uint64_t)v21);
  v32(v9, v4);
  sub_1CA267BE8((uint64_t)v12, &qword_1ED8711C0);
  v27 = v41;
  sub_1CA295580((uint64_t)a1, (uint64_t)v41);
  v28 = v40;
  sub_1CA295580((uint64_t)a2, (uint64_t)v40);
  if ((v38 & 1) == 0)
    goto LABEL_13;
LABEL_17:
  v33 = *(int *)(v42 + 32);
  v34 = &v27[v33];
  v35 = *(_QWORD *)&v27[v33 + 8];
  v36 = &v28[v33];
  v29 = v36[1];
  if (!v35)
  {
    swift_bridgeObjectRetain();
    sub_1CA24EDFC((uint64_t)v28);
    sub_1CA24EDFC((uint64_t)v27);
    if (!v29)
    {
      LOBYTE(v29) = 1;
      return v29 & 1;
    }
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
  if (v29)
  {
    if (*v34 == *v36 && v35 == v29)
      LOBYTE(v29) = 1;
    else
      LOBYTE(v29) = sub_1CA85C284();
  }
  swift_bridgeObjectRetain();
  sub_1CA24EDFC((uint64_t)v28);
  sub_1CA24EDFC((uint64_t)v27);
  swift_bridgeObjectRelease();
  return v29 & 1;
}

unint64_t sub_1CA2954F4()
{
  unint64_t result;

  result = qword_1EF94C1A0;
  if (!qword_1EF94C1A0)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8D5E5C, &type metadata for SongSource.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF94C1A0);
  }
  return result;
}

uint64_t sub_1CA295538(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8711C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1CA295580(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SongSource();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1CA2955C4()
{
  return sub_1CA23CC98(&qword_1ED874540, (uint64_t (*)(uint64_t))type metadata accessor for SongSource, (uint64_t)&protocol conformance descriptor for SongSource);
}

_QWORD *initializeBufferWithCopyOfBuffer for SongSource(_QWORD *a1, char *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  char *v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  _QWORD *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  char *v37;
  uint64_t v38;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *(_QWORD *)a2;
    *v4 = *(_QWORD *)a2;
    v4 = (_QWORD *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = *((_QWORD *)a2 + 1);
    *a1 = *(_QWORD *)a2;
    a1[1] = v7;
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = &a2[v8];
    v11 = sub_1CA85A5B0();
    v12 = *(_QWORD *)(v11 - 8);
    v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8711C0);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    v16 = a3[7];
    *(_QWORD *)((char *)v4 + a3[6]) = *(_QWORD *)&a2[a3[6]];
    v17 = (char *)v4 + v16;
    v18 = &a2[v16];
    if (v13(&a2[v16], 1, v11))
    {
      v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8711C0);
      memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v17, v18, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v17, 0, 1, v11);
    }
    v20 = a3[8];
    v21 = a3[9];
    v22 = (_QWORD *)((char *)v4 + v20);
    v23 = &a2[v20];
    v24 = *((_QWORD *)v23 + 1);
    *v22 = *(_QWORD *)v23;
    v22[1] = v24;
    v25 = (char *)v4 + v21;
    v26 = &a2[v21];
    *(_QWORD *)v25 = *(_QWORD *)v26;
    v25[8] = v26[8];
    v27 = a3[10];
    v28 = a3[11];
    v29 = (char *)v4 + v27;
    v30 = &a2[v27];
    *(_QWORD *)v29 = *(_QWORD *)v30;
    v29[8] = v30[8];
    v31 = (_QWORD *)((char *)v4 + v28);
    v32 = &a2[v28];
    v33 = *((_QWORD *)v32 + 1);
    *v31 = *(_QWORD *)v32;
    v31[1] = v33;
    v34 = a3[12];
    v35 = a3[13];
    v36 = (_QWORD *)((char *)v4 + v34);
    v37 = &a2[v34];
    v38 = *((_QWORD *)v37 + 1);
    *v36 = *(_QWORD *)v37;
    v36[1] = v38;
    *((_BYTE *)v4 + v35) = a2[v35];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for SongSource(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_1CA85A5B0();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (!v7(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  v8 = a1 + *(int *)(a2 + 28);
  if (!v7(v8, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v8, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for SongSource(_QWORD *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(char *, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  char *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  _QWORD *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  char *v35;
  uint64_t v36;

  v6 = *((_QWORD *)a2 + 1);
  *a1 = *(_QWORD *)a2;
  a1[1] = v6;
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = &a2[v7];
  v10 = sub_1CA85A5B0();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8711C0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  v14 = a3[7];
  *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)&a2[a3[6]];
  v15 = (char *)a1 + v14;
  v16 = &a2[v14];
  if (v12(&a2[v14], 1, v10))
  {
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8711C0);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v15, v16, v10);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v15, 0, 1, v10);
  }
  v18 = a3[8];
  v19 = a3[9];
  v20 = (_QWORD *)((char *)a1 + v18);
  v21 = &a2[v18];
  v22 = *((_QWORD *)v21 + 1);
  *v20 = *(_QWORD *)v21;
  v20[1] = v22;
  v23 = (char *)a1 + v19;
  v24 = &a2[v19];
  *(_QWORD *)v23 = *(_QWORD *)v24;
  v23[8] = v24[8];
  v25 = a3[10];
  v26 = a3[11];
  v27 = (char *)a1 + v25;
  v28 = &a2[v25];
  *(_QWORD *)v27 = *(_QWORD *)v28;
  v27[8] = v28[8];
  v29 = (_QWORD *)((char *)a1 + v26);
  v30 = &a2[v26];
  v31 = *((_QWORD *)v30 + 1);
  *v29 = *(_QWORD *)v30;
  v29[1] = v31;
  v32 = a3[12];
  v33 = a3[13];
  v34 = (_QWORD *)((char *)a1 + v32);
  v35 = &a2[v32];
  v36 = *((_QWORD *)v35 + 1);
  *v34 = *(_QWORD *)v35;
  v34[1] = v36;
  *((_BYTE *)a1 + v33) = a2[v33];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

char *assignWithCopy for SongSource(char *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  int v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  _QWORD *v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  _QWORD *v34;
  uint64_t v35;
  char *v36;
  _QWORD *v37;

  *(_QWORD *)a1 = *a2;
  *((_QWORD *)a1 + 1) = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = (char *)a2 + v6;
  v9 = sub_1CA85A5B0();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8711C0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
LABEL_7:
  *(_QWORD *)&a1[a3[6]] = *(_QWORD *)((char *)a2 + a3[6]);
  v15 = a3[7];
  v16 = &a1[v15];
  v17 = (char *)a2 + v15;
  v18 = v11(&a1[v15], 1, v9);
  v19 = v11(v17, 1, v9);
  if (!v18)
  {
    if (!v19)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v16, v17, v9);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v16, v9);
    goto LABEL_12;
  }
  if (v19)
  {
LABEL_12:
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8711C0);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v16, v17, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v16, 0, 1, v9);
LABEL_13:
  v21 = a3[8];
  v22 = &a1[v21];
  v23 = (_QWORD *)((char *)a2 + v21);
  *(_QWORD *)v22 = *v23;
  *((_QWORD *)v22 + 1) = v23[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v24 = a3[9];
  v25 = &a1[v24];
  v26 = (char *)a2 + v24;
  v27 = *(_QWORD *)v26;
  v25[8] = v26[8];
  *(_QWORD *)v25 = v27;
  v28 = a3[10];
  v29 = &a1[v28];
  v30 = (char *)a2 + v28;
  v31 = *(_QWORD *)v30;
  v29[8] = v30[8];
  *(_QWORD *)v29 = v31;
  v32 = a3[11];
  v33 = &a1[v32];
  v34 = (_QWORD *)((char *)a2 + v32);
  *(_QWORD *)v33 = *v34;
  *((_QWORD *)v33 + 1) = v34[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v35 = a3[12];
  v36 = &a1[v35];
  v37 = (_QWORD *)((char *)a2 + v35);
  *(_QWORD *)v36 = *v37;
  *((_QWORD *)v36 + 1) = v37[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[a3[13]] = *((_BYTE *)a2 + a3[13]);
  return a1;
}

_OWORD *initializeWithTake for SongSource(_OWORD *a1, char *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(char *, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;

  *a1 = *(_OWORD *)a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = &a2[v6];
  v9 = sub_1CA85A5B0();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  if (v11(v8, 1, v9))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8711C0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v13 = a3[7];
  *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)&a2[a3[6]];
  v14 = (char *)a1 + v13;
  v15 = &a2[v13];
  if (v11(&a2[v13], 1, v9))
  {
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8711C0);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v14, v15, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v14, 0, 1, v9);
  }
  v17 = a3[9];
  *(_OWORD *)((char *)a1 + a3[8]) = *(_OWORD *)&a2[a3[8]];
  v18 = (char *)a1 + v17;
  v19 = &a2[v17];
  v18[8] = v19[8];
  *(_QWORD *)v18 = *(_QWORD *)v19;
  v20 = a3[10];
  v21 = a3[11];
  v22 = (char *)a1 + v20;
  v23 = &a2[v20];
  v22[8] = v23[8];
  *(_QWORD *)v22 = *(_QWORD *)v23;
  *(_OWORD *)((char *)a1 + v21) = *(_OWORD *)&a2[v21];
  v24 = a3[13];
  *(_OWORD *)((char *)a1 + a3[12]) = *(_OWORD *)&a2[a3[12]];
  *((_BYTE *)a1 + v24) = a2[v24];
  return a1;
}

char *assignWithTake for SongSource(char *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(char *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  int v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  char *v31;
  char *v32;
  uint64_t v33;
  char *v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;

  v6 = a2[1];
  *(_QWORD *)a1 = *a2;
  *((_QWORD *)a1 + 1) = v6;
  swift_bridgeObjectRelease();
  v7 = a3[5];
  v8 = &a1[v7];
  v9 = (char *)a2 + v7;
  v10 = sub_1CA85A5B0();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
LABEL_6:
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8711C0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v8, v9, v10);
LABEL_7:
  v16 = a3[7];
  *(_QWORD *)&a1[a3[6]] = *(_QWORD *)((char *)a2 + a3[6]);
  v17 = &a1[v16];
  v18 = (char *)a2 + v16;
  v19 = v12(&a1[v16], 1, v10);
  v20 = v12(v18, 1, v10);
  if (!v19)
  {
    if (!v20)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v17, v18, v10);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v17, v10);
    goto LABEL_12;
  }
  if (v20)
  {
LABEL_12:
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8711C0);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v17, v18, v10);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v17, 0, 1, v10);
LABEL_13:
  v22 = a3[8];
  v23 = &a1[v22];
  v24 = (_QWORD *)((char *)a2 + v22);
  v26 = *v24;
  v25 = v24[1];
  *(_QWORD *)v23 = v26;
  *((_QWORD *)v23 + 1) = v25;
  swift_bridgeObjectRelease();
  v27 = a3[9];
  v28 = a3[10];
  v29 = &a1[v27];
  v30 = (char *)a2 + v27;
  *(_QWORD *)v29 = *(_QWORD *)v30;
  v29[8] = v30[8];
  v31 = &a1[v28];
  v32 = (char *)a2 + v28;
  *(_QWORD *)v31 = *(_QWORD *)v32;
  v31[8] = v32[8];
  v33 = a3[11];
  v34 = &a1[v33];
  v35 = (_QWORD *)((char *)a2 + v33);
  v37 = *v35;
  v36 = v35[1];
  *(_QWORD *)v34 = v37;
  *((_QWORD *)v34 + 1) = v36;
  swift_bridgeObjectRelease();
  v38 = a3[12];
  v39 = &a1[v38];
  v40 = (_QWORD *)((char *)a2 + v38);
  v42 = *v40;
  v41 = v40[1];
  *(_QWORD *)v39 = v42;
  *((_QWORD *)v39 + 1) = v41;
  swift_bridgeObjectRelease();
  a1[a3[13]] = *((_BYTE *)a2 + a3[13]);
  return a1;
}

uint64_t getEnumTagSinglePayload for SongSource()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CA296178(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8711C0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for SongSource()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CA296204(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8711C0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

void sub_1CA29627C()
{
  unint64_t v0;

  sub_1CA296324();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void sub_1CA296324()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED8711C8)
  {
    sub_1CA85A5B0();
    v0 = sub_1CA85BCCC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED8711C8);
  }
}

uint64_t getEnumTagSinglePayload for SongSource.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF7)
    goto LABEL_17;
  if (a2 + 9 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 9) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 9;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 9;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 9;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xA;
  v8 = v6 - 10;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for SongSource.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 9 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 9) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF7)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF6)
    return ((uint64_t (*)(void))((char *)&loc_1CA296454 + 4 * byte_1CA8D5BEF[v4]))();
  *a1 = a2 + 9;
  return ((uint64_t (*)(void))((char *)sub_1CA296488 + 4 * byte_1CA8D5BEA[v4]))();
}

uint64_t sub_1CA296488(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CA296490(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1CA296498);
  return result;
}

uint64_t sub_1CA2964A4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1CA2964ACLL);
  *(_BYTE *)result = a2 + 9;
  return result;
}

uint64_t sub_1CA2964B0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CA2964B8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SongSource.CodingKeys()
{
  return &type metadata for SongSource.CodingKeys;
}

unint64_t sub_1CA2964D8()
{
  unint64_t result;

  result = qword_1EF94C1B8;
  if (!qword_1EF94C1B8)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8D5E34, &type metadata for SongSource.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF94C1B8);
  }
  return result;
}

unint64_t sub_1CA296520()
{
  unint64_t result;

  result = qword_1EF94C1C0;
  if (!qword_1EF94C1C0)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8D5DA4, &type metadata for SongSource.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF94C1C0);
  }
  return result;
}

unint64_t sub_1CA296568()
{
  unint64_t result;

  result = qword_1EF94C1C8;
  if (!qword_1EF94C1C8)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8D5DCC, &type metadata for SongSource.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF94C1C8);
  }
  return result;
}

uint64_t sub_1CA2965AC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_1CA85C284() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7473614C65746164 && a2 == 0xEF64657461647055 || (sub_1CA85C284() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6E756F43676E6F73 && a2 == 0xE900000000000074 || (sub_1CA85C284() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 1702125924 && a2 == 0xE400000000000000 || (sub_1CA85C284() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x687361686F6567 && a2 == 0xE700000000000000 || (sub_1CA85C284() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x656475746974616CLL && a2 == 0xE800000000000000 || (sub_1CA85C284() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x64757469676E6F6CLL && a2 == 0xE900000000000065 || (sub_1CA85C284() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x6E6F6973726576 && a2 == 0xE700000000000000 || (sub_1CA85C284() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x79726F6765746163 && a2 == 0xE800000000000000 || (sub_1CA85C284() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x686361436E497369 && a2 == 0xE900000000000065)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else
  {
    v6 = sub_1CA85C284();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 9;
    else
      return 10;
  }
}

uint64_t dispatch thunk of SongKeywordProvider.keywordsDataFrame.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_1CA296A14(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  char v10;

  if (a1 == 10)
  {
    sub_1CA4F833C(a2, a3, &v10);
  }
  else
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v9 = *v3;
    *v3 = 0x8000000000000000;
    sub_1CA25DD50(a1, a2, a3, isUniquelyReferenced_nonNull_native);
    *v3 = v9;
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1CA296AC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1CA296D28(a1, a2, a3, &qword_1ED871160, (uint64_t (*)(_QWORD))MEMORY[0x1E0CAE5D0], (void (*)(char *, uint64_t, uint64_t, uint64_t))sub_1CA25DBA0, (void (*)(uint64_t, uint64_t))sub_1CA4F8320);
}

uint64_t sub_1CA296AEC(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t *v5;
  char v9;
  unint64_t v10;
  char v11;
  char v12;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;

  v5 = v4;
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    v10 = sub_1CA25081C(a3, a4);
    v12 = v11;
    swift_bridgeObjectRelease();
    if ((v12 & 1) != 0)
    {
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v14 = *v4;
      v17 = *v5;
      *v5 = 0x8000000000000000;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_1CA260C44();
        v14 = v17;
      }
      swift_bridgeObjectRelease();
      sub_1CA277DD0(v10, v14);
      *v5 = v14;
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    v9 = swift_isUniquelyReferenced_nonNull_native();
    v16 = *v4;
    *v4 = 0x8000000000000000;
    sub_1CA25DA5C(a3, a4, v9, *(double *)&a1);
    *v4 = v16;
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1CA296C30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  _OWORD v9[2];

  if (*(_QWORD *)(a1 + 24))
  {
    sub_1CA266A44((_OWORD *)a1, v9);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v8 = *v3;
    *v3 = 0x8000000000000000;
    sub_1CA25DEA0(v9, a2, a3, isUniquelyReferenced_nonNull_native);
    *v3 = v8;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_1CA267BE8(a1, &qword_1ED8710D0);
    sub_1CA4F8418(a2, a3, v9);
    swift_bridgeObjectRelease();
    return sub_1CA267BE8((uint64_t)v9, &qword_1ED8710D0);
  }
}

uint64_t sub_1CA296D04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1CA296D28(a1, a2, a3, &qword_1EF94C240, (uint64_t (*)(_QWORD))MEMORY[0x1E0D76EB0], (void (*)(char *, uint64_t, uint64_t, uint64_t))sub_1CA25E450, (void (*)(uint64_t, uint64_t))sub_1CA4F879C);
}

uint64_t sub_1CA296D28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t (*a5)(_QWORD), void (*a6)(char *, uint64_t, uint64_t, uint64_t), void (*a7)(uint64_t, uint64_t))
{
  uint64_t *v7;
  uint64_t *v11;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t isUniquelyReferenced_nonNull_native;
  void (*v24)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v25;

  v24 = a6;
  v11 = v7;
  v15 = __swift_instantiateConcreteTypeFromMangledName(a4);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v24 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = a5(0);
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  v21 = (char *)&v24 - v20;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48))(a1, 1, v18) == 1)
  {
    sub_1CA267BE8(a1, a4);
    a7(a2, a3);
    swift_bridgeObjectRelease();
    return sub_1CA267BE8((uint64_t)v17, a4);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v19 + 32))(v21, a1, v18);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v25 = *v11;
    *v11 = 0x8000000000000000;
    v24(v21, a2, a3, isUniquelyReferenced_nonNull_native);
    *v11 = v25;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1CA296EA8(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  unint64_t v13;
  char v14;
  unint64_t v15;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v21;
  uint64_t v22;

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94C240);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1CA85ADA8();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a1, 1, v9) == 1)
  {
    sub_1CA267BE8(a1, &qword_1EF94C240);
    v13 = sub_1CA250BCC(a2);
    if ((v14 & 1) != 0)
    {
      v15 = v13;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v17 = *v3;
      v22 = *v3;
      *v3 = 0x8000000000000000;
      if (!isUniquelyReferenced_nonNull_native)
      {
        sub_1CA261F20();
        v17 = v22;
      }
      (*(void (**)(char *, unint64_t, uint64_t))(v10 + 32))(v8, *(_QWORD *)(v17 + 56) + *(_QWORD *)(v10 + 72) * v15, v9);
      sub_1CA278990(v15, v17);
      *v3 = v17;
      swift_bridgeObjectRelease();
      v18 = 0;
    }
    else
    {
      v18 = 1;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, v18, 1, v9);
    return sub_1CA267BE8((uint64_t)v8, &qword_1EF94C240);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 32))(v12, a1, v9);
    v19 = swift_isUniquelyReferenced_nonNull_native();
    v22 = *v3;
    *v3 = 0x8000000000000000;
    sub_1CA25E46C((uint64_t)v12, a2, v19);
    *v3 = v22;
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1CA297080(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1CA296D28(a1, a2, a3, &qword_1EF94C238, (uint64_t (*)(_QWORD))MEMORY[0x1E0D767B8], (void (*)(char *, uint64_t, uint64_t, uint64_t))sub_1CA25E6B8, (void (*)(uint64_t, uint64_t))sub_1CA4F87B8);
}

uint64_t sub_1CA2970A4(uint64_t a1, void *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  char *v13;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v16;
  uint64_t v17;

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8711C0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1CA85A5B0();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v10 + 48))(a1, 1, v9, v11) == 1)
  {
    sub_1CA267BE8(a1, &qword_1ED8711C0);
    sub_1CA4F8910((uint64_t)a2, (uint64_t)v8);

    return sub_1CA267BE8((uint64_t)v8, &qword_1ED8711C0);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 32))(v13, a1, v9);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v17 = *v3;
    *v3 = 0x8000000000000000;
    sub_1CA25EE84((uint64_t)v13, a2, isUniquelyReferenced_nonNull_native);
    *v3 = v17;

    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1CA297204(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  char *v13;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v16;
  uint64_t v17;

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8711C0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1CA85A5B0();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v10 + 48))(a1, 1, v9, v11) == 1)
  {
    sub_1CA267BE8(a1, &qword_1ED8711C0);
    sub_1CA4F8A8C(a2, (uint64_t)v8);
    return sub_1CA267BE8((uint64_t)v8, &qword_1ED8711C0);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 32))(v13, a1, v9);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v17 = *v3;
    *v3 = 0x8000000000000000;
    sub_1CA25F860((uint64_t)v13, a2, isUniquelyReferenced_nonNull_native);
    *v3 = v17;
    return swift_bridgeObjectRelease();
  }
}

uint64_t PlaceZeroKeyword.type.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR___PGPlaceZeroKeyword_type);
}

uint64_t PlaceZeroKeyword.title.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR___PGPlaceZeroKeyword_title);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PlaceZeroKeyword.address.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR___PGPlaceZeroKeyword_address);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1CA2973D8(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  _QWORD *v3;

  v2 = *a1;
  v3 = (_QWORD *)(*a2 + OBJC_IVAR___PGPlaceZeroKeyword_displayInfo);
  swift_beginAccess();
  *v3 = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1CA297440()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1CA297488(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)(v1 + OBJC_IVAR___PGPlaceZeroKeyword_displayInfo);
  swift_beginAccess();
  *v3 = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1CA2974D8())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

double sub_1CA29751C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR___PGPlaceZeroKeyword_score;
  swift_beginAccess();
  return *(double *)v1;
}

uint64_t sub_1CA297560(double a1)
{
  uint64_t v1;
  double *v3;
  uint64_t result;

  v3 = (double *)(v1 + OBJC_IVAR___PGPlaceZeroKeyword_score);
  result = swift_beginAccess();
  *v3 = a1;
  return result;
}

uint64_t (*sub_1CA2975B0())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

id PlaceZeroKeyword.queryToken.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR___PGPlaceZeroKeyword_queryToken);
}

id PlaceZeroKeyword.addressNodeCollection.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR___PGPlaceZeroKeyword_addressNodeCollection);
}

void PlaceZeroKeyword.placeKind.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + OBJC_IVAR___PGPlaceZeroKeyword_placeKind);
}

id PlaceZeroKeyword.photoLibrary.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR___PGPlaceZeroKeyword_photoLibrary);
}

id PlaceZeroKeyword.__allocating_init(type:title:address:displayInfo:queryToken:addressNodeCollection:placeKind:score:photoLibrary:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, double a9, char *a10, uint64_t a11)
{
  objc_class *v11;
  id v20;

  v20 = objc_allocWithZone(v11);
  return PlaceZeroKeyword.init(type:title:address:displayInfo:queryToken:addressNodeCollection:placeKind:score:photoLibrary:)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11);
}

id PlaceZeroKeyword.init(type:title:address:displayInfo:queryToken:addressNodeCollection:placeKind:score:photoLibrary:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, double a9, char *a10, uint64_t a11)
{
  _BYTE *v11;
  char v12;
  _QWORD *v13;
  _QWORD *v14;
  objc_super v16;

  v12 = *a10;
  *(_QWORD *)&v11[OBJC_IVAR___PGPlaceZeroKeyword_type] = a1;
  v13 = &v11[OBJC_IVAR___PGPlaceZeroKeyword_title];
  *v13 = a2;
  v13[1] = a3;
  v14 = &v11[OBJC_IVAR___PGPlaceZeroKeyword_address];
  *v14 = a4;
  v14[1] = a5;
  *(_QWORD *)&v11[OBJC_IVAR___PGPlaceZeroKeyword_displayInfo] = a6;
  *(_QWORD *)&v11[OBJC_IVAR___PGPlaceZeroKeyword_queryToken] = a7;
  *(_QWORD *)&v11[OBJC_IVAR___PGPlaceZeroKeyword_addressNodeCollection] = a8;
  v11[OBJC_IVAR___PGPlaceZeroKeyword_placeKind] = v12;
  *(double *)&v11[OBJC_IVAR___PGPlaceZeroKeyword_score] = a9;
  *(_QWORD *)&v11[OBJC_IVAR___PGPlaceZeroKeyword_photoLibrary] = a11;
  v16.receiver = v11;
  v16.super_class = (Class)type metadata accessor for PlaceZeroKeyword();
  return objc_msgSendSuper2(&v16, sel_init);
}

uint64_t type metadata accessor for PlaceZeroKeyword()
{
  return objc_opt_self();
}

void PlaceZeroKeyword.__allocating_init(name:address:locationOrAreaNode:isTopPlace:placeKind:options:photoLibrary:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, char *a7)
{
  swift_getObjectType();
  sub_1CA298C84(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t PlaceZeroKeyword.PlaceZeroKeywordKind.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1CA297874 + 4 * byte_1CA8D5ED0[*v0]))(0x7465737265707573, 0xE800000000000000);
}

uint64_t sub_1CA297874()
{
  return 0x6E69727275636572;
}

uint64_t sub_1CA297898()
{
  return 0x696F41706F74;
}

uint64_t sub_1CA2978AC()
{
  return 1701670760;
}

double PlaceZeroKeyword.PlaceZeroKeywordKind.score.getter()
{
  char *v0;

  return dbl_1CA8D6060[*v0];
}

id PlaceZeroKeyword.__allocating_init(homeName:address:addressNode:isTopPlace:options:photoLibrary:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, char a6, uint64_t a7, uint64_t a8)
{
  id v9;

  v9 = sub_1CA299920(a1, a2, a3, a4, a5, a6, a7, a8);

  return v9;
}

unint64_t sub_1CA297900()
{
  uint64_t v0;
  uint64_t v1;
  double v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t inited;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  id v38;
  _QWORD v40[3];
  uint64_t v41;

  v1 = v0;
  v2 = sub_1CA297C5C();
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v9 = sub_1CA85B534();
  v11 = v10;
  v12 = MEMORY[0x1E0DEB070];
  v41 = MEMORY[0x1E0DEB070];
  *(double *)v40 = v2;
  v13 = (uint64_t *)(v1 + OBJC_IVAR___PGPlaceZeroKeyword_displayInfo);
  swift_beginAccess();
  sub_1CA296C30((uint64_t)v40, v9, v11);
  swift_endAccess();
  v14 = sub_1CA85B534();
  v16 = v15;
  v41 = v12;
  v40[0] = v6;
  swift_beginAccess();
  sub_1CA296C30((uint64_t)v40, v14, v16);
  swift_endAccess();
  v17 = sub_1CA85B534();
  v19 = v18;
  v41 = v12;
  v40[0] = v4;
  swift_beginAccess();
  sub_1CA296C30((uint64_t)v40, v17, v19);
  swift_endAccess();
  v20 = sub_1CA85B534();
  v22 = v21;
  v41 = v12;
  v40[0] = v8;
  swift_beginAccess();
  sub_1CA296C30((uint64_t)v40, v20, v22);
  swift_endAccess();
  v23 = objc_msgSend(*(id *)(v1 + OBJC_IVAR___PGPlaceZeroKeyword_addressNodeCollection), sel_momentNodes);
  v24 = sub_1CA297E98(v23);

  v25 = sub_1CA85B534();
  v27 = v26;
  v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED872270);
  v40[0] = v24;
  swift_beginAccess();
  sub_1CA296C30((uint64_t)v40, v25, v27);
  swift_endAccess();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF94B690);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1CA8D6080;
  *(_QWORD *)(inited + 32) = sub_1CA85B534();
  *(_QWORD *)(inited + 40) = v29;
  v30 = *(_QWORD *)(v1 + OBJC_IVAR___PGPlaceZeroKeyword_type);
  *(_QWORD *)(inited + 72) = MEMORY[0x1E0DEB418];
  *(_QWORD *)(inited + 48) = v30;
  *(_QWORD *)(inited + 80) = sub_1CA85B534();
  *(_QWORD *)(inited + 88) = v31;
  v32 = *(_QWORD *)(v1 + OBJC_IVAR___PGPlaceZeroKeyword_title);
  v33 = *(_QWORD *)(v1 + OBJC_IVAR___PGPlaceZeroKeyword_title + 8);
  *(_QWORD *)(inited + 120) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(inited + 96) = v32;
  *(_QWORD *)(inited + 104) = v33;
  *(_QWORD *)(inited + 128) = sub_1CA85B534();
  *(_QWORD *)(inited + 136) = v34;
  v35 = *v13;
  *(_QWORD *)(inited + 168) = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED872170);
  *(_QWORD *)(inited + 144) = v35;
  *(_QWORD *)(inited + 176) = sub_1CA85B534();
  *(_QWORD *)(inited + 184) = v36;
  v37 = *(void **)(v1 + OBJC_IVAR___PGPlaceZeroKeyword_queryToken);
  *(_QWORD *)(inited + 216) = sub_1CA24EEC0(0, &qword_1EF94C218);
  *(_QWORD *)(inited + 192) = v37;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v38 = v37;
  return sub_1CA273C34(inited);
}

double sub_1CA297C5C()
{
  uint64_t v0;
  id v1;
  void *v2;
  NSObject *v3;
  id v4;
  uint64_t v5;
  void *v6;
  NSObject *v7;
  double v8;
  _QWORD v10[6];

  v0 = swift_allocObject();
  *(MKCoordinateRegion *)(v0 + 16) = MKCoordinateRegionForMapRect(*MEMORY[0x1E0CC1670]);
  v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CC1808]), sel_init);
  v2 = (void *)sub_1CA85B510();
  objc_msgSend(v1, sel_setNaturalLanguageQuery_, v2);

  v3 = dispatch_group_create();
  dispatch_group_enter(v3);
  v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CC17F0]), sel_initWithRequest_, v1);
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = v0;
  *(_QWORD *)(v5 + 24) = v3;
  v10[4] = sub_1CA299FF0;
  v10[5] = v5;
  v10[0] = MEMORY[0x1E0C809B0];
  v10[1] = 1107296256;
  v10[2] = sub_1CA298C10;
  v10[3] = &block_descriptor_2;
  v6 = _Block_copy(v10);
  swift_retain();
  v7 = v3;
  swift_release();
  objc_msgSend(v4, sel_startWithCompletionHandler_, v6);
  _Block_release(v6);

  sub_1CA85BB10();
  swift_beginAccess();
  v8 = *(double *)(v0 + 16);
  swift_release();
  return v8;
}

uint64_t sub_1CA297E98(void *a1)
{
  uint64_t v1;
  unint64_t v2;
  id v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  id v11;
  id v12;
  void *v13;
  id v14;
  uint64_t v15;
  id v16;
  void *v17;
  id v18;
  id v19;
  void *v20;
  id v21;
  void *v22;
  void *v23;
  id v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  id v37;
  id v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t result;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v4 = objc_msgSend(*(id *)(v1 + OBJC_IVAR___PGPlaceZeroKeyword_photoLibrary), sel_librarySpecificFetchOptions);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED873300);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1CA8D4EA0;
  v7 = sub_1CA24EEC0(0, (unint64_t *)&qword_1ED872320);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8727B0);
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1CA8D4E40;
  v9 = objc_msgSend(a1, sel_uuids);
  v10 = sub_1CA85B984();

  *(_QWORD *)(v8 + 56) = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED873160);
  *(_QWORD *)(v8 + 64) = sub_1CA299F74((unint64_t *)&qword_1ED8749D0, &qword_1ED873160, MEMORY[0x1E0CB1BE8]);
  *(_QWORD *)(v8 + 32) = v10;
  v11 = (id)v7;
  *(_QWORD *)(v6 + 32) = sub_1CA85BA80();
  v12 = objc_msgSend((id)objc_opt_self(), sel_predicateForAssetWithLocation);
  if (v12)
  {
    *(_QWORD *)(v6 + 40) = v12;
    sub_1CA85B7C8();
    v13 = (void *)sub_1CA85B798();
    swift_bridgeObjectRelease();
    v14 = objc_msgSend((id)objc_opt_self(), sel_andPredicateWithSubpredicates_, v13);

    objc_msgSend(v4, sel_setInternalPredicate_, v14);
    v15 = swift_allocObject();
    *(_OWORD *)(v15 + 16) = xmmword_1CA8D4EA0;
    v16 = objc_allocWithZone(MEMORY[0x1E0CB3928]);
    v17 = (void *)sub_1CA85B510();
    v18 = objc_msgSend(v16, sel_initWithKey_ascending_, v17, 0);

    *(_QWORD *)(v15 + 32) = v18;
    v19 = objc_allocWithZone(MEMORY[0x1E0CB3928]);
    v20 = (void *)sub_1CA85B510();
    v21 = objc_msgSend(v19, sel_initWithKey_ascending_, v20, 1);

    *(_QWORD *)(v15 + 40) = v21;
    sub_1CA85B7C8();
    sub_1CA24EEC0(0, (unint64_t *)&unk_1ED872328);
    v22 = (void *)sub_1CA85B798();
    swift_bridgeObjectRelease();
    objc_msgSend(v4, sel_setSortDescriptors_, v22);

    v23 = (void *)objc_opt_self();
    v24 = objc_msgSend(v23, sel_requiredFetchPropertySets);
    if (!v24)
    {
      sub_1CA85B7B0();
      v24 = (id)sub_1CA85B798();
      swift_bridgeObjectRelease();
    }
    objc_msgSend(v4, sel_setFetchPropertySets_, v24, 2, 5);

    objc_msgSend(v4, sel_setChunkSizeForFetch_, 500);
    v11 = objc_msgSend((id)objc_opt_self(), sel_fetchAssetsWithOptions_, v4);
    v25 = objc_msgSend(v23, sel_representativeAssetsForMapDisplayFromAssets_, v11);
    v26 = sub_1CA24EEC0(0, (unint64_t *)&qword_1ED8723B0);
    v5 = sub_1CA85B7B0();

    v2 = v5 >> 62;
    if (!(v5 >> 62))
    {
      if (*(uint64_t *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10) >= 3)
        v27 = 3;
      else
        v27 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
      goto LABEL_8;
    }
    swift_bridgeObjectRetain();
    v7 = sub_1CA85C08C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    v44 = sub_1CA85C08C();
    swift_bridgeObjectRelease();
    if (v44 < 0)
    {
      __break(1u);
      goto LABEL_24;
    }
  }
  else
  {
    __break(1u);
  }
  if (v7 >= 3)
    v45 = 3;
  else
    v45 = v7;
  if (v7 >= 0)
    v27 = v45;
  else
    v27 = 3;
  swift_bridgeObjectRetain();
  v46 = sub_1CA85C08C();
  result = swift_bridgeObjectRelease();
  if (v46 >= v27)
  {
LABEL_8:
    if ((v5 & 0xC000000000000001) != 0 && v27)
    {
      v28 = 0;
      do
      {
        v29 = v28 + 1;
        sub_1CA85BEE8();
        v28 = v29;
      }
      while (v27 != v29);
    }
    if (v2)
    {
      swift_bridgeObjectRetain();
      sub_1CA85C098();
      v31 = v33;
      v30 = v34;
      v32 = v35;
      swift_bridgeObjectRelease_n();
    }
    else
    {
      v30 = 0;
      v31 = (v5 & 0xFFFFFFFFFFFFFF8) + 32;
      v32 = (2 * v27) | 1;
    }
    sub_1CA299144(v31, v30, v32);
    v5 = v36;
    swift_unknownObjectRelease();
    if (*(_QWORD *)(v5 + 16) || (uint64_t)objc_msgSend(v11, sel_count) < 1)
      goto LABEL_21;
    v37 = objc_msgSend(v11, sel_objectAtIndexedSubscript_, 0);
    v38 = objc_msgSend(v37, sel_localIdentifier);

    v26 = sub_1CA85B534();
    v7 = v39;

    if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
    {
LABEL_18:
      v41 = *(_QWORD *)(v5 + 16);
      v40 = *(_QWORD *)(v5 + 24);
      if (v41 >= v40 >> 1)
        v5 = (unint64_t)sub_1CA26BCE4((_QWORD *)(v40 > 1), v41 + 1, 1, (_QWORD *)v5);
      *(_QWORD *)(v5 + 16) = v41 + 1;
      v42 = v5 + 16 * v41;
      *(_QWORD *)(v42 + 32) = v26;
      *(_QWORD *)(v42 + 40) = v7;
LABEL_21:

      return v5;
    }
LABEL_24:
    v5 = (unint64_t)sub_1CA26BCE4(0, *(_QWORD *)(v5 + 16) + 1, 1, (_QWORD *)v5);
    goto LABEL_18;
  }
  __break(1u);
  return result;
}

uint64_t PlaceZeroKeyword.PlaceZeroKeywordKind.maximumNumberOfKeywordsAllowed.getter()
{
  unsigned __int8 *v0;

  if (*v0 - 1 >= 2)
    return 15;
  else
    return 5;
}

PhotosGraph::PlaceZeroKeyword::PlaceZeroKeywordKind_optional __swiftcall PlaceZeroKeyword.PlaceZeroKeywordKind.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  PhotosGraph::PlaceZeroKeyword::PlaceZeroKeywordKind_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1CA85C0F8();
  result.value = swift_bridgeObjectRelease();
  v5 = 4;
  if (v3 < 4)
    v5 = v3;
  *v2 = v5;
  return result;
}

void *static PlaceZeroKeyword.PlaceZeroKeywordKind.allCases.getter()
{
  return &unk_1E83FDB18;
}

void sub_1CA298558(char *a1)
{
  sub_1CA329408(*a1);
}

void sub_1CA298564()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1CA85C368();
  __asm { BR              X9 }
}

uint64_t sub_1CA2985B0()
{
  sub_1CA85B4B0();
  swift_bridgeObjectRelease();
  return sub_1CA85C3B0();
}

void sub_1CA298620()
{
  __asm { BR              X10 }
}

uint64_t sub_1CA29865C()
{
  sub_1CA85B4B0();
  return swift_bridgeObjectRelease();
}

void sub_1CA2986B8()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1CA85C368();
  __asm { BR              X9 }
}

uint64_t sub_1CA298700()
{
  sub_1CA85B4B0();
  swift_bridgeObjectRelease();
  return sub_1CA85C3B0();
}

PhotosGraph::PlaceZeroKeyword::PlaceZeroKeywordKind_optional sub_1CA298770(Swift::String *a1)
{
  return PlaceZeroKeyword.PlaceZeroKeywordKind.init(rawValue:)(*a1);
}

uint64_t sub_1CA29877C()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1CA2987AC + 4 * byte_1CA8D5EE0[*v0]))();
}

void sub_1CA2987AC(uint64_t a1@<X8>)
{
  strcpy((char *)a1, "recurringTrip");
  *(_WORD *)(a1 + 14) = -4864;
}

void sub_1CA2987D4(_QWORD *a1@<X8>)
{
  *a1 = 0x696F41706F74;
  a1[1] = 0xE600000000000000;
}

void sub_1CA2987EC(_QWORD *a1@<X8>)
{
  *a1 = 1701670760;
  a1[1] = 0xE400000000000000;
}

void sub_1CA298800(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E83FDB40;
}

id PlaceZeroKeyword.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void PlaceZeroKeyword.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id PlaceZeroKeyword.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PlaceZeroKeyword();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1CA298938()
{
  _QWORD *v0;

  return *(_QWORD *)(*v0 + OBJC_IVAR___PGPlaceZeroKeyword_type);
}

uint64_t sub_1CA29894C()
{
  _QWORD *v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*v0 + OBJC_IVAR___PGPlaceZeroKeyword_title);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1CA298988()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1CA2989D4(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v3;

  v3 = (_QWORD *)(*v1 + OBJC_IVAR___PGPlaceZeroKeyword_displayInfo);
  swift_beginAccess();
  *v3 = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1CA298A28())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

double sub_1CA298A70()
{
  _QWORD *v0;
  uint64_t v1;

  v1 = *v0 + OBJC_IVAR___PGPlaceZeroKeyword_score;
  swift_beginAccess();
  return *(double *)v1;
}

uint64_t sub_1CA298AB8(double a1)
{
  _QWORD *v1;
  double *v3;
  uint64_t result;

  v3 = (double *)(*v1 + OBJC_IVAR___PGPlaceZeroKeyword_score);
  result = swift_beginAccess();
  *v3 = a1;
  return result;
}

uint64_t (*sub_1CA298B0C())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

id sub_1CA298B54()
{
  _QWORD *v0;

  return *(id *)(*v0 + OBJC_IVAR___PGPlaceZeroKeyword_queryToken);
}

unint64_t sub_1CA298B68()
{
  return sub_1CA297900();
}

void sub_1CA298B88(void *a1, int a2, _QWORD *a3, dispatch_group_t group)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  if (a1)
  {
    objc_msgSend(a1, sel_boundingRegion);
    v7 = v6;
    v9 = v8;
    v11 = v10;
    v13 = v12;
    swift_beginAccess();
    a3[2] = v7;
    a3[3] = v9;
    a3[4] = v11;
    a3[5] = v13;
  }
  dispatch_group_leave(group);
}

void sub_1CA298C10(uint64_t a1, void *a2, void *a3)
{
  void (*v5)(void *, void *);
  id v6;
  id v7;

  v5 = *(void (**)(void *, void *))(a1 + 32);
  swift_retain();
  v7 = a2;
  v6 = a3;
  v5(a2, a3);
  swift_release();

}

void sub_1CA298C84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, char *a7)
{
  char v9;
  uint64_t v10;
  void *v11;
  id v12;
  id v13;
  id v14;
  uint64_t v15;
  void *v16;
  uint64_t inited;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v9 = *a7;
  objc_opt_self();
  v10 = swift_dynamicCastObjCClass();
  if (v10)
  {
    v11 = (void *)v10;
    swift_unknownObjectRetain();
    v12 = objc_msgSend(v11, sel_locationNodeCollection);
    v13 = objc_msgSend(v12, sel_parentLocationNodes);

    v14 = objc_msgSend(v13, sel_anyNode);
    swift_unknownObjectRelease();

  }
  else
  {
    v14 = 0;
  }
  objc_opt_self();
  v15 = swift_dynamicCastObjCClass();
  if (v15)
  {
    v16 = (void *)v15;
    swift_unknownObjectRetain();
    objc_msgSend(v16, sel_stateOrBiggerParentLocationNode);
    swift_unknownObjectRelease();

  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF94B690);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1CA8D6090;
  *(_QWORD *)(inited + 32) = sub_1CA85B534();
  *(_QWORD *)(inited + 40) = v18;
  *(_QWORD *)(inited + 72) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(inited + 48) = a3;
  *(_QWORD *)(inited + 56) = a4;
  *(_QWORD *)(inited + 80) = sub_1CA85B534();
  *(_QWORD *)(inited + 88) = v19;
  *(_QWORD *)(inited + 120) = MEMORY[0x1E0DEAFA0];
  *(_BYTE *)(inited + 96) = a6 & 1;
  *(_QWORD *)(inited + 128) = sub_1CA85B534();
  *(_QWORD *)(inited + 136) = v20;
  __asm { BR              X11 }
}

id sub_1CA298E6C(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, objc_super a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53)
{
  void *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  id v64;
  uint64_t v65;
  void *v66;
  void *v67;
  id v68;
  char isUniquelyReferenced_nonNull_native;
  id v70;
  double v71;
  objc_class *v72;
  _BYTE *v73;
  _QWORD *v74;
  _QWORD *v75;
  id v76;
  id v77;
  uint64_t v79;
  char v80;
  uint64_t v81;
  uint64_t v82;
  objc_super v83;
  unint64_t v84;

  v61 = v57;
  *(_QWORD *)(v59 + 168) = v55;
  strcpy((char *)(v59 + 144), "recurringTrip");
  *(_WORD *)(v59 + 158) = -4864;
  swift_bridgeObjectRetain();
  v62 = sub_1CA273C34(v59);
  v63 = v60;
  if (v58)
  {
    v64 = v58;
    v65 = _s11PhotosGraph16PlaceZeroKeywordC22locationNameByCategory3forSDySo8NSNumberCSSGSo19PGGraphLocationNodeC_tFZ_0(v64);

  }
  else
  {
    v65 = 0;
  }
  swift_bridgeObjectRetain();
  v66 = (void *)sub_1CA85B510();
  swift_bridgeObjectRelease();
  if (v65)
  {
    sub_1CA24EEC0(0, (unint64_t *)&qword_1ED8723C0);
    sub_1CA299FF8();
    v67 = (void *)sub_1CA85B3FC();
    swift_bridgeObjectRelease();
  }
  else
  {
    v67 = 0;
  }
  v68 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D71C00]), sel_initWithText_locationNameByCategory_, v66, v67);

  objc_msgSend(v68, sel_setUserControlledCategoriesUseWildcard_, 0);
  if (*(_QWORD *)(v54 + 16))
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v84 = v62;
    sub_1CA4F8F40(v54, (uint64_t)sub_1CA4F91A0, 0, isUniquelyReferenced_nonNull_native, (uint64_t *)&v84);
    v62 = v84;
  }
  swift_bridgeObjectRelease();
  v70 = objc_msgSend(objc_msgSend(v53, sel_locationOrAreaNodeCollection), sel_addressNodes);
  swift_unknownObjectRelease();
  v71 = dbl_1CA8D6060[v61];
  v72 = (objc_class *)type metadata accessor for PlaceZeroKeyword();
  v73 = objc_allocWithZone(v72);
  *(_QWORD *)&v73[OBJC_IVAR___PGPlaceZeroKeyword_type] = 2;
  v74 = &v73[OBJC_IVAR___PGPlaceZeroKeyword_title];
  *v74 = v81;
  v74[1] = v56;
  v75 = &v73[OBJC_IVAR___PGPlaceZeroKeyword_address];
  *v75 = v63;
  v75[1] = v82;
  *(_QWORD *)&v73[OBJC_IVAR___PGPlaceZeroKeyword_displayInfo] = v62;
  *(_QWORD *)&v73[OBJC_IVAR___PGPlaceZeroKeyword_queryToken] = v68;
  *(_QWORD *)&v73[OBJC_IVAR___PGPlaceZeroKeyword_addressNodeCollection] = v70;
  v73[OBJC_IVAR___PGPlaceZeroKeyword_placeKind] = v80;
  *(double *)&v73[OBJC_IVAR___PGPlaceZeroKeyword_score] = v71;
  *(_QWORD *)&v73[OBJC_IVAR___PGPlaceZeroKeyword_photoLibrary] = v79;
  v83.receiver = v73;
  v83.super_class = v72;
  v76 = v68;
  v77 = objc_msgSendSuper2(&v83, sel_init);

  swift_unknownObjectRelease();
  return v77;
}

void sub_1CA299144(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  int64_t v16;
  uint64_t v18;

  v16 = a3 >> 1;
  v3 = (a3 >> 1) - a2;
  if (__OFSUB__(a3 >> 1, a2))
    goto LABEL_14;
  if (v3)
  {
    v18 = MEMORY[0x1E0DEE9D8];
    sub_1CA3FB754(0, v3 & ~(v3 >> 63), 0);
    if (v3 < 0)
    {
LABEL_15:
      __break(1u);
      return;
    }
    v5 = 0;
    v6 = a1 + 8 * a2;
    while (1)
    {
      v7 = v5 + 1;
      if (__OFADD__(v5, 1))
        break;
      if (a2 + v5 >= v16 || v5 >= v3)
        goto LABEL_13;
      v8 = *(id *)(v6 + 8 * v5);
      v9 = objc_msgSend(v8, sel_localIdentifier);
      v10 = sub_1CA85B534();
      v12 = v11;

      v14 = *(_QWORD *)(v18 + 16);
      v13 = *(_QWORD *)(v18 + 24);
      if (v14 >= v13 >> 1)
        sub_1CA3FB754(v13 > 1, v14 + 1, 1);
      *(_QWORD *)(v18 + 16) = v14 + 1;
      v15 = v18 + 16 * v14;
      *(_QWORD *)(v15 + 32) = v10;
      *(_QWORD *)(v15 + 40) = v12;
      ++v5;
      if (v7 == v3)
        return;
    }
    __break(1u);
LABEL_13:
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
}

uint64_t _s11PhotosGraph16PlaceZeroKeywordC19searchIndexCategory3forSo08PLSearchgH0VSS_tFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v6;
  uint64_t v7;
  char v9;
  uint64_t v11;
  char v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  char v21;

  if (sub_1CA85B534() == a1 && v4 == a2)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  v6 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v6 & 1) != 0)
    return 1;
  if (sub_1CA85B534() == a1 && v7 == a2)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v9 = sub_1CA85C284();
    swift_bridgeObjectRelease();
    if ((v9 & 1) != 0)
    {
      return 2;
    }
    else if (sub_1CA85B534() == a1 && v11 == a2)
    {
      swift_bridgeObjectRelease();
      return 3;
    }
    else
    {
      v13 = sub_1CA85C284();
      swift_bridgeObjectRelease();
      if ((v13 & 1) != 0)
      {
        return 3;
      }
      else if (sub_1CA85B534() == a1 && v14 == a2)
      {
        swift_bridgeObjectRelease();
        return 5;
      }
      else
      {
        v15 = sub_1CA85C284();
        swift_bridgeObjectRelease();
        if ((v15 & 1) != 0)
        {
          return 5;
        }
        else if (sub_1CA85B534() == a1 && v16 == a2)
        {
          swift_bridgeObjectRelease();
          return 7;
        }
        else
        {
          v17 = sub_1CA85C284();
          swift_bridgeObjectRelease();
          if ((v17 & 1) != 0)
          {
            return 7;
          }
          else if (sub_1CA85B534() == a1 && v18 == a2)
          {
            swift_bridgeObjectRelease();
            return 10;
          }
          else
          {
            v19 = sub_1CA85C284();
            swift_bridgeObjectRelease();
            if ((v19 & 1) != 0)
            {
              return 10;
            }
            else if (sub_1CA85B534() == a1 && v20 == a2)
            {
              swift_bridgeObjectRelease();
              return 12;
            }
            else
            {
              v21 = sub_1CA85C284();
              swift_bridgeObjectRelease();
              if ((v21 & 1) != 0)
                return 12;
              else
                return 0;
            }
          }
        }
      }
    }
  }
}

uint64_t _s11PhotosGraph16PlaceZeroKeywordC22locationNameByCategory3forSDySo8NSNumberCSSGSo19PGGraphLocationNodeC_tFZ_0(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  void *v23;
  void *v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  _QWORD *v29;
  char isUniquelyReferenced_nonNull_native;
  char v31;
  unint64_t v32;
  uint64_t v33;
  _BOOL8 v34;
  uint64_t v35;
  char v36;
  unint64_t v37;
  char v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t *v43;
  uint64_t v44;
  BOOL v45;
  uint64_t v46;
  id v47;
  id v48;
  id v49;
  uint64_t result;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  _QWORD *v57;
  _QWORD *v58;

  v2 = sub_1CA85A694();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v55 = (char *)&v51 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = a1;
  v57 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  while (2)
  {
    v6 = v5;
    while (1)
    {
      v10 = objc_msgSend(v6, sel_label);
      if (v10)
      {
        v11 = v10;
        v12 = sub_1CA85B534();
        v14 = v13;

      }
      else
      {
        v12 = 0;
        v14 = 0xE000000000000000;
      }
      v15 = _s11PhotosGraph16PlaceZeroKeywordC19searchIndexCategory3forSo08PLSearchgH0VSS_tFZ_0(v12, v14);
      swift_bridgeObjectRelease();
      if (v15)
      {
        v16 = objc_msgSend(v6, sel_name);
        if (v16)
          break;
      }
      v7 = objc_msgSend(v6, sel_locationNodeCollection);
      v8 = objc_msgSend(v7, sel_parentLocationNodes);

      v9 = objc_msgSend(v8, sel_anyNode);
      v6 = v9;
      if (!v9)
        return (uint64_t)v57;
    }
    v17 = v16;
    v18 = sub_1CA85B534();
    v20 = v19;

    v53 = v3;
    v54 = v2;
    v56 = v20;
    if (v15 == 12)
    {
      v21 = v55;
      sub_1CA85A664();
      v22 = v18;
      v23 = (void *)sub_1CA85A628();
      (*(void (**)(char *, uint64_t))(v3 + 8))(v21, v2);
      v52 = v22;
      v24 = (void *)sub_1CA85B510();
      v25 = objc_msgSend(v23, sel_localizedStringForCountryCode_, v24);

      if (v25)
      {
        swift_bridgeObjectRelease();
        v26 = sub_1CA85B534();
        v56 = v27;

      }
      else
      {
        v26 = v52;
      }
    }
    else
    {
      v26 = v18;
    }
    v28 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithUnsignedInteger_, v15);
    v29 = v57;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v58 = v29;
    v32 = sub_1CA250A50((uint64_t)v28);
    v33 = v29[2];
    v34 = (v31 & 1) == 0;
    v35 = v33 + v34;
    if (__OFADD__(v33, v34))
    {
      __break(1u);
LABEL_27:
      __break(1u);
      break;
    }
    v36 = v31;
    if (v29[3] >= v35)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        sub_1CA260FBC();
      goto LABEL_20;
    }
    sub_1CA253AA0(v35, isUniquelyReferenced_nonNull_native);
    v37 = sub_1CA250A50((uint64_t)v28);
    if ((v36 & 1) == (v38 & 1))
    {
      v32 = v37;
LABEL_20:
      v39 = v26;
      v40 = v58;
      v41 = v56;
      v57 = v58;
      if ((v36 & 1) != 0)
      {
        v42 = (uint64_t *)(v58[7] + 16 * v32);
        swift_bridgeObjectRelease();
        *v42 = v39;
        v42[1] = v41;
        goto LABEL_24;
      }
      v58[(v32 >> 6) + 8] |= 1 << v32;
      *(_QWORD *)(v40[6] + 8 * v32) = v28;
      v43 = (uint64_t *)(v40[7] + 16 * v32);
      *v43 = v39;
      v43[1] = v41;
      v44 = v40[2];
      v45 = __OFADD__(v44, 1);
      v46 = v44 + 1;
      if (!v45)
      {
        v40[2] = v46;
        v47 = v28;
LABEL_24:

        swift_bridgeObjectRelease();
        v48 = objc_msgSend(v6, sel_locationNodeCollection);
        v49 = objc_msgSend(v48, sel_parentLocationNodes);

        v5 = objc_msgSend(v49, sel_anyNode);
        v3 = v53;
        v2 = v54;
        if (v5)
          continue;
        return (uint64_t)v57;
      }
      goto LABEL_27;
    }
    break;
  }
  sub_1CA24EEC0(0, (unint64_t *)&qword_1ED8723C0);
  result = sub_1CA85C2E4();
  __break(1u);
  return result;
}

id sub_1CA299920(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, char a6, uint64_t a7, uint64_t a8)
{
  id v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  id v31;
  objc_class *v32;
  _BYTE *v33;
  _QWORD *v34;
  _QWORD *v35;
  id v37;
  objc_super v39;
  uint64_t v40;
  _OWORD v41[2];
  __int128 v42;
  uint64_t v43;

  v15 = objc_allocWithZone(MEMORY[0x1E0D71C08]);
  swift_bridgeObjectRetain();
  v16 = (void *)sub_1CA85B510();
  swift_bridgeObjectRelease();
  v37 = objc_msgSend(v15, sel_initWithText_userCategory_matchType_, v16, 10, 2);

  v17 = sub_1CA85B534();
  v19 = v18;
  v20 = MEMORY[0x1E0DEA968];
  v43 = MEMORY[0x1E0DEA968];
  *(_QWORD *)&v42 = a3;
  *((_QWORD *)&v42 + 1) = a4;
  sub_1CA266A44(&v42, v41);
  swift_bridgeObjectRetain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_1CA25DEA0(v41, v17, v19, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v22 = sub_1CA85B534();
  v24 = v23;
  v43 = MEMORY[0x1E0DEAFA0];
  LOBYTE(v42) = a6;
  sub_1CA266A44(&v42, v41);
  v25 = swift_isUniquelyReferenced_nonNull_native();
  sub_1CA25DEA0(v41, v22, v24, v25);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v26 = sub_1CA85B534();
  v28 = v27;
  v43 = v20;
  *(_QWORD *)&v42 = 1701670760;
  *((_QWORD *)&v42 + 1) = 0xE400000000000000;
  sub_1CA266A44(&v42, v41);
  v29 = swift_isUniquelyReferenced_nonNull_native();
  v40 = a7;
  sub_1CA25DEA0(v41, v26, v28, v29);
  v30 = a7;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v31 = objc_msgSend(objc_msgSend(a5, sel_locationOrAreaNodeCollection), sel_addressNodes);
  swift_unknownObjectRelease();
  v32 = (objc_class *)type metadata accessor for PlaceZeroKeyword();
  v33 = objc_allocWithZone(v32);
  *(_QWORD *)&v33[OBJC_IVAR___PGPlaceZeroKeyword_type] = 6;
  v34 = &v33[OBJC_IVAR___PGPlaceZeroKeyword_title];
  *v34 = a1;
  v34[1] = a2;
  v35 = &v33[OBJC_IVAR___PGPlaceZeroKeyword_address];
  *v35 = a3;
  v35[1] = a4;
  *(_QWORD *)&v33[OBJC_IVAR___PGPlaceZeroKeyword_displayInfo] = v30;
  *(_QWORD *)&v33[OBJC_IVAR___PGPlaceZeroKeyword_queryToken] = v37;
  *(_QWORD *)&v33[OBJC_IVAR___PGPlaceZeroKeyword_addressNodeCollection] = v31;
  v33[OBJC_IVAR___PGPlaceZeroKeyword_placeKind] = 3;
  *(_QWORD *)&v33[OBJC_IVAR___PGPlaceZeroKeyword_score] = 0x7FEFFFFFFFFFFFFFLL;
  *(_QWORD *)&v33[OBJC_IVAR___PGPlaceZeroKeyword_photoLibrary] = a8;
  v39.receiver = v33;
  v39.super_class = v32;
  return objc_msgSendSuper2(&v39, sel_init);
}

unint64_t sub_1CA299C0C()
{
  unint64_t result;

  result = qword_1EF94C220;
  if (!qword_1EF94C220)
  {
    result = MEMORY[0x1CAA4F1A4](&protocol conformance descriptor for PlaceZeroKeyword.PlaceZeroKeywordKind, &type metadata for PlaceZeroKeyword.PlaceZeroKeywordKind);
    atomic_store(result, (unint64_t *)&qword_1EF94C220);
  }
  return result;
}

uint64_t sub_1CA299C50()
{
  return sub_1CA299F74(&qword_1EF94C228, &qword_1EF94C230, MEMORY[0x1E0DEAF50]);
}

uint64_t sub_1CA299C7C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;

  v3 = (_QWORD *)(*a1 + OBJC_IVAR___PGPlaceZeroKeyword_displayInfo);
  swift_beginAccess();
  *a2 = *v3;
  return swift_bridgeObjectRetain();
}

double sub_1CA299CD4@<D0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  double *v3;
  double result;

  v3 = (double *)(*a1 + OBJC_IVAR___PGPlaceZeroKeyword_score);
  swift_beginAccess();
  result = *v3;
  *a2 = *(_QWORD *)v3;
  return result;
}

uint64_t sub_1CA299D24(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t result;

  v2 = *a1;
  v3 = (_QWORD *)(*a2 + OBJC_IVAR___PGPlaceZeroKeyword_score);
  result = swift_beginAccess();
  *v3 = v2;
  return result;
}

uint64_t dispatch thunk of ZeroKeyword.type.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of ZeroKeyword.title.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of ZeroKeyword.displayInfo.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of ZeroKeyword.displayInfo.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of ZeroKeyword.displayInfo.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t dispatch thunk of ZeroKeyword.score.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of ZeroKeyword.score.setter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of ZeroKeyword.score.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 64))();
}

uint64_t dispatch thunk of ZeroKeyword.queryToken.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t dispatch thunk of ZeroKeyword.getZeroKeywordDict()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 80))();
}

uint64_t method lookup function for PlaceZeroKeyword()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PlaceZeroKeyword.displayInfo.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x98))();
}

uint64_t dispatch thunk of PlaceZeroKeyword.displayInfo.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of PlaceZeroKeyword.displayInfo.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of PlaceZeroKeyword.score.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of PlaceZeroKeyword.score.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB8))();
}

uint64_t dispatch thunk of PlaceZeroKeyword.score.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC0))();
}

uint64_t dispatch thunk of PlaceZeroKeyword.__allocating_init(type:title:address:displayInfo:queryToken:addressNodeCollection:placeKind:score:photoLibrary:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 200))();
}

uint64_t dispatch thunk of PlaceZeroKeyword.getZeroKeywordDict()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xD0))();
}

uint64_t storeEnumTagSinglePayload for PlaceZeroKeyword.PlaceZeroKeywordKind(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1CA299EF4 + 4 * byte_1CA8D5EE9[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1CA299F28 + 4 * byte_1CA8D5EE4[v4]))();
}

uint64_t sub_1CA299F28(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CA299F30(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1CA299F38);
  return result;
}

uint64_t sub_1CA299F44(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1CA299F4CLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1CA299F50(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CA299F58(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PlaceZeroKeyword.PlaceZeroKeywordKind()
{
  return &type metadata for PlaceZeroKeyword.PlaceZeroKeywordKind;
}

uint64_t sub_1CA299F74(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x1CAA4F1A4](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1CA299FB4()
{
  return swift_deallocObject();
}

uint64_t sub_1CA299FC4()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

void sub_1CA299FF0(void *a1, int a2)
{
  uint64_t v2;

  sub_1CA298B88(a1, a2, *(_QWORD **)(v2 + 16), *(dispatch_group_t *)(v2 + 24));
}

unint64_t sub_1CA299FF8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED8723C8;
  if (!qword_1ED8723C8)
  {
    v1 = sub_1CA24EEC0(255, (unint64_t *)&qword_1ED8723C0);
    result = MEMORY[0x1CAA4F1A4](MEMORY[0x1E0DEFCF8], v1);
    atomic_store(result, (unint64_t *)&qword_1ED8723C8);
  }
  return result;
}

uint64_t Atomic.value.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1;
  v4 = (uint64_t)v1 + *(_QWORD *)(*v1 + 88);
  swift_beginAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v3 + 80) - 8) + 16))(a1, v4);
}

void sub_1CA29A0B4(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  double v7;
  _BYTE *v8;
  double v9;
  void *v10;
  _QWORD v11[37];
  _BYTE v12[296];
  PhotosGraph::MusicBagContents v13;
  _BYTE v14[296];
  _BYTE v15[296];
  _BYTE v16[296];

  objc_msgSend(*(id *)(a1 + 312), sel_lock);
  swift_beginAccess();
  sub_1CA24EEF8(a1 + 16, (uint64_t)v15, &qword_1ED872E78);
  sub_1CA24EEF8((uint64_t)v15, (uint64_t)v16, &qword_1ED872E78);
  if (sub_1CA29A544((uint64_t)v16) != 1)
  {
    v8 = v15;
LABEL_6:
    sub_1CA24EEF8((uint64_t)v8, (uint64_t)v14, &qword_1ED872E78);
    goto LABEL_7;
  }
  MusicBag.fetchMusicBagContents()(&v13);
  if (!v6)
  {
    sub_1CA29A6FC((uint64_t)&v13);
    sub_1CA24EEF8((uint64_t)&v13, (uint64_t)v11, &qword_1ED872E70);
    sub_1CA24EEF8((uint64_t)v11, (uint64_t)v12, &qword_1ED872E70);
    GEOLocationCoordinate2DMake(v9);
    sub_1CA24EEF8((uint64_t)v12, a1 + 16, &qword_1ED872E78);
    v8 = v12;
    goto LABEL_6;
  }
  v11[0] = v6;
  sub_1CA29A6F0((uint64_t)v11);
  sub_1CA24EEF8((uint64_t)v11, (uint64_t)v12, &qword_1ED872E70);
  GEOLocationCoordinate2DMake(v7);
  sub_1CA24EEF8((uint64_t)v12, a1 + 16, &qword_1ED872E78);
  sub_1CA24EEF8((uint64_t)v12, (uint64_t)v14, &qword_1ED872E78);
LABEL_7:
  sub_1CA24EEF8((uint64_t)v14, (uint64_t)&v13, &qword_1ED872E78);
  sub_1CA24EEF8((uint64_t)&v13, a3, &qword_1ED872E70);
  swift_endAccess();
  v10 = *(void **)(a1 + 312);
  sub_1CA29A558((uint64_t)v14);
  objc_msgSend(v10, sel_unlock);

}

void sub_1CA29A290(uint64_t a1, void *a2)
{
  sub_1CA29A354(a1, a2);
}

void sub_1CA29A2A4(uint64_t a1, void *a2, char a3)
{
  char v5;

  v5 = a3 & 1;
  objc_msgSend(*(id *)(a1 + 32), sel_lock);
  swift_beginAccess();
  sub_1CA5018F8(a1 + 16, a2, v5);
  swift_endAccess();
  objc_msgSend(*(id *)(a1 + 32), sel_unlock);

}

void sub_1CA29A354(uint64_t a1, void *a2)
{
  objc_msgSend(*(id *)(a1 + 32), sel_lock);
  swift_beginAccess();
  sub_1CA85A358();
  MEMORY[0x1CAA4D5F0]();
  if (*(_QWORD *)((*(_QWORD *)(a1 + 24) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*(_QWORD *)(a1 + 24) & 0xFFFFFFFFFFFFFF8)
                                                                                     + 0x18) >> 1)
    sub_1CA85B7EC();
  sub_1CA85B834();
  sub_1CA85B7C8();
  swift_endAccess();
  objc_msgSend(*(id *)(a1 + 32), sel_unlock);

}

uint64_t Atomic.deinit()
{
  uint64_t v0;

  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v0 + 80) - 8) + 8))(v0 + *(_QWORD *)(*(_QWORD *)v0 + 88));

  return v0;
}

uint64_t Atomic.__deallocating_deinit()
{
  uint64_t v0;

  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v0 + 80) - 8) + 8))(v0 + *(_QWORD *)(*(_QWORD *)v0 + 88));

  return swift_deallocClassInstance();
}

uint64_t sub_1CA29A4AC()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t type metadata accessor for Atomic(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Atomic);
}

uint64_t method lookup function for Atomic()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_1CA29A544(uint64_t a1)
{
  unsigned int v1;

  v1 = *(unsigned __int8 *)(a1 + 288);
  if (v1 > 1)
    return (v1 ^ 0xFF) + 1;
  else
    return 0;
}

uint64_t sub_1CA29A558(uint64_t a1)
{
  __int128 v3;
  __int128 v4;
  __int128 v5;

  v4 = *(_OWORD *)(a1 + 240);
  v5 = *(_OWORD *)(a1 + 256);
  v3 = *(_OWORD *)(a1 + 208);
  sub_1CA29A5E0(*(id *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
    *(_QWORD *)(a1 + 152),
    *(_QWORD *)(a1 + 160),
    *(_QWORD *)(a1 + 168),
    *(_QWORD *)(a1 + 176),
    *(_QWORD *)(a1 + 184),
    *(_QWORD *)(a1 + 192),
    *(_QWORD *)(a1 + 200),
    v3,
    *((uint64_t *)&v3 + 1),
    *(_QWORD *)(a1 + 224),
    *(_QWORD *)(a1 + 232),
    v4,
    *((uint64_t *)&v4 + 1),
    v5,
    *((uint64_t *)&v5 + 1),
    *(_QWORD *)(a1 + 272),
    *(_QWORD *)(a1 + 280),
    *(_BYTE *)(a1 + 288));
  return a1;
}

id sub_1CA29A5E0(id result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,unsigned __int8 a37)
{
  if (a37 != 255)
    return sub_1CA29A6E0(result, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
             a20,
             a21,
             a22,
             a23,
             a24,
             a25,
             a26,
             a27,
             a28,
             a29,
             a30,
             a31,
             a32,
             a33,
             a34,
             a35,
             a36,
             a37 & 1);
  return result;
}

id sub_1CA29A6E0(id a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,char a37)
{
  if ((a37 & 1) != 0)
    return a1;
  else
    return (id)swift_bridgeObjectRetain();
}

uint64_t sub_1CA29A6F0(uint64_t result)
{
  *(_BYTE *)(result + 288) = 1;
  return result;
}

uint64_t sub_1CA29A6FC(uint64_t result)
{
  *(_BYTE *)(result + 288) = 0;
  return result;
}

id sub_1CA29A704(void *a1, void *a2, char *a3, void *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  id v20;
  void *v21;
  uint64_t v22;
  id result;
  void *v24;
  unsigned __int8 v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  id v32;
  id v33;
  void *v34;
  void (*v35)(char *, uint64_t);
  uint64_t v36;
  uint64_t v37;
  NSObject *v38;
  os_log_type_t v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  os_log_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  NSObject *v55;
  os_log_type_t v56;
  uint64_t v57;
  uint8_t *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  void (*v63)(char *, uint64_t);
  char *v64;
  uint64_t v65;
  os_log_t v66;
  int v67;
  uint64_t v68;
  uint64_t v69;
  id v70;
  uint64_t v71;
  uint64_t v72;
  id v73;
  id v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;

  v5 = v4;
  v75 = a3;
  v72 = sub_1CA85A5B0();
  v9 = *(_QWORD *)(v72 - 8);
  MEMORY[0x1E0C80A78](v72);
  v11 = (char *)&v66 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v66 - v13;
  v15 = sub_1CA85A424();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v66 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = OBJC_IVAR____TtC11PhotosGraph30PGSharedLibrarySimulationEvent_photosChallengeInferredSuggestsSharing;
  *(_QWORD *)(v5 + 16) = a4;
  *(_BYTE *)(v5 + v19) = 2;
  v73 = a4;
  v74 = a1;
  v20 = objc_msgSend(a1, sel_sharedLibraryDiagnostics);
  if (!v20)
  {
    if (qword_1EF94A248 != -1)
      swift_once();
    v53 = sub_1CA85B348();
    __swift_project_value_buffer(v53, (uint64_t)qword_1EF9780D8);
    v54 = v16;
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v18, v75, v15);
    v55 = sub_1CA85B330();
    v56 = sub_1CA85BAE0();
    if (os_log_type_enabled(v55, v56))
    {
      v57 = swift_slowAlloc();
      v69 = v54;
      v58 = (uint8_t *)v57;
      v59 = v15;
      v60 = swift_slowAlloc();
      v77 = v60;
      *(_DWORD *)v58 = 136315138;
      v72 = (uint64_t)(v58 + 4);
      sub_1CA23CC98((unint64_t *)&qword_1EF94C3E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0048]);
      v61 = sub_1CA85C260();
      v76 = sub_1CA28712C(v61, v62, &v77);
      sub_1CA85BCF0();
      swift_bridgeObjectRelease();
      v63 = *(void (**)(char *, uint64_t))(v69 + 8);
      v63(v18, v59);
      _os_log_impl(&dword_1CA237000, v55, v56, "[SharedLibrarySimulationEvent] Initialization failed for event at %s- file does not have shared library diagnostics.", v58, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1CAA4F27C](v60, -1, -1);
      MEMORY[0x1CAA4F27C](v58, -1, -1);

      v64 = v75;
      v65 = v59;
    }
    else
    {

      v63 = *(void (**)(char *, uint64_t))(v54 + 8);
      v63(v18, v15);
      v64 = v75;
      v65 = v15;
    }
    v63(v64, v65);

    type metadata accessor for PGSharedLibrarySimulationEvent();
    swift_deallocPartialClassInstance();
    return 0;
  }
  v21 = v20;
  v71 = v15;
  v22 = sub_1CA85B414();

  *(_QWORD *)(v5 + 24) = v22;
  *(_QWORD *)(v5 + OBJC_IVAR____TtC11PhotosGraph30PGSharedLibrarySimulationEvent_asset) = a2;
  v70 = a2;
  result = objc_msgSend(v70, sel_libraryScopeProperties);
  if (result)
  {
    v24 = result;
    v25 = objc_msgSend(result, sel_assetIsPublishedToLibraryScope);

    *(_BYTE *)(v5 + 40) = v25;
    v26 = v74;
    *(_QWORD *)(v5 + 32) = objc_msgSend(v74, sel_sharedLibraryMode);
    v27 = v16;
    v28 = v71;
    (*(void (**)(uint64_t, char *, uint64_t))(v16 + 16))(v5 + OBJC_IVAR____TtC11PhotosGraph30PGSharedLibrarySimulationEvent_mdataFilePath, v75, v71);
    v29 = sub_1CA85A40C();
    v30 = (uint64_t *)(v5 + OBJC_IVAR____TtC11PhotosGraph30PGSharedLibrarySimulationEvent_name);
    *v30 = v29;
    v30[1] = v31;
    v32 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3578]), sel_init);
    *(_QWORD *)(v5 + OBJC_IVAR____TtC11PhotosGraph30PGSharedLibrarySimulationEvent_dateFormatter) = v32;
    v33 = v32;
    v34 = (void *)sub_1CA85B510();
    objc_msgSend(v33, sel_setDateFormat_, v34);

    sub_1CA29AEE4((uint64_t)v14);
    sub_1CA29B2E4((uint64_t)v11);
    LOBYTE(v33) = sub_1CA85A520();
    v35 = *(void (**)(char *, uint64_t))(v9 + 8);
    v36 = v72;
    v35(v11, v72);
    v35(v14, v36);
    if ((v33 & 1) == 0)
    {

      (*(void (**)(char *, uint64_t))(v16 + 8))(v75, v28);
      return (id)v5;
    }
    if (qword_1EF94A248 != -1)
      swift_once();
    v37 = sub_1CA85B348();
    __swift_project_value_buffer(v37, (uint64_t)qword_1EF9780D8);
    swift_retain_n();
    v38 = sub_1CA85B330();
    v39 = sub_1CA85BAE0();
    v40 = v39;
    if (os_log_type_enabled(v38, v39))
    {
      v41 = swift_slowAlloc();
      v68 = swift_slowAlloc();
      v77 = v68;
      *(_DWORD *)v41 = 136315650;
      v67 = v40;
      sub_1CA23CC98((unint64_t *)&qword_1EF94C3E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0048]);
      v66 = v38;
      v42 = sub_1CA85C260();
      v76 = sub_1CA28712C(v42, v43, &v77);
      sub_1CA85BCF0();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v41 + 12) = 2080;
      sub_1CA29AEE4((uint64_t)v14);
      sub_1CA23CC98((unint64_t *)&qword_1ED8744B8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08F0]);
      v44 = v72;
      v45 = sub_1CA85C260();
      v69 = v27;
      v47 = v46;
      v35(v14, v44);
      v76 = sub_1CA28712C(v45, v47, &v77);
      sub_1CA85BCF0();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v41 + 22) = 2080;
      sub_1CA29B2E4((uint64_t)v14);
      v48 = sub_1CA85C260();
      v50 = v49;
      v35(v14, v44);
      v76 = sub_1CA28712C(v48, v50, &v77);
      sub_1CA85BCF0();
      swift_release_n();
      swift_bridgeObjectRelease();
      v51 = v66;
      _os_log_impl(&dword_1CA237000, v66, (os_log_type_t)v67, "[SharedLibrarySimulationEventFactory] Could not create event from file %s The timestamp %s was earlier than the last detection date %s!", (uint8_t *)v41, 0x20u);
      v52 = v68;
      swift_arrayDestroy();
      MEMORY[0x1CAA4F27C](v52, -1, -1);
      MEMORY[0x1CAA4F27C](v41, -1, -1);

      swift_release();
      (*(void (**)(char *, uint64_t))(v69 + 8))(v75, v71);
    }
    else
    {

      swift_release_n();
      (*(void (**)(char *, uint64_t))(v16 + 8))(v75, v71);
    }
    return 0;
  }
  __break(1u);
  return result;
}

uint64_t sub_1CA29AEE4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  id v12;
  void *v13;
  void (*v14)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint8_t *v23;
  id v24;
  void *v25;
  void (*v26)(char *, char *, uint64_t);
  uint64_t v27;
  uint8_t *v29;
  void (*v30)(char *, uint64_t, uint64_t, uint64_t);
  char *v31;
  void *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a1;
  v2 = sub_1CA85A5B0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8711C0);
  v7 = MEMORY[0x1E0C80A78](v6);
  v33 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v29 - v9;
  v11 = *(void **)(v1 + OBJC_IVAR____TtC11PhotosGraph30PGSharedLibrarySimulationEvent_asset);
  v12 = objc_msgSend(v11, sel_creationDate);
  if (v12)
  {
    v13 = v12;
    sub_1CA85A574();

    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v10, v5, v2);
    v14 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56);
    v14(v10, 0, 1, v2);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v10, 1, v2) != 1)
    {
      sub_1CA267BE8((uint64_t)v10, &qword_1ED8711C0);
      goto LABEL_11;
    }
  }
  else
  {
    v14 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56);
    v14(v10, 1, 1, v2);
  }
  v32 = v11;
  sub_1CA267BE8((uint64_t)v10, &qword_1ED8711C0);
  if (qword_1EF94A248 != -1)
    swift_once();
  v15 = sub_1CA85B348();
  __swift_project_value_buffer(v15, (uint64_t)qword_1EF9780D8);
  swift_retain_n();
  v16 = sub_1CA85B330();
  v17 = sub_1CA85BAE0();
  if (os_log_type_enabled(v16, v17))
  {
    v18 = swift_slowAlloc();
    v31 = v5;
    v19 = (uint8_t *)v18;
    v20 = swift_slowAlloc();
    v30 = v14;
    *(_DWORD *)v19 = 136315138;
    v36 = v20;
    v29 = v19 + 4;
    sub_1CA85A424();
    sub_1CA23CC98((unint64_t *)&qword_1EF94C3E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0048]);
    v21 = sub_1CA85C260();
    v35 = sub_1CA28712C(v21, v22, &v36);
    v14 = v30;
    sub_1CA85BCF0();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1CA237000, v16, v17, "[SharedLibrarySimulationEvent] Found nil creationDate for asset of event at %s.", v19, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1CAA4F27C](v20, -1, -1);
    v23 = v19;
    v5 = v31;
    MEMORY[0x1CAA4F27C](v23, -1, -1);

  }
  else
  {

    swift_release_n();
  }
  v11 = v32;
LABEL_11:
  v24 = objc_msgSend(v11, sel_creationDate);
  if (v24)
  {
    v25 = v24;
    sub_1CA85A574();

    v26 = *(void (**)(char *, char *, uint64_t))(v3 + 32);
    v27 = (uint64_t)v33;
    v26(v33, v5, v2);
    v14((char *)v27, 0, 1, v2);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v27, 1, v2) != 1)
      return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v26)(v34, v27, v2);
  }
  else
  {
    v27 = (uint64_t)v33;
    v14(v33, 1, 1, v2);
  }
  sub_1CA85A580();
  return sub_1CA267BE8(v27, &qword_1ED8711C0);
}

uint64_t sub_1CA29B2E4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  void *v17;
  void *v18;
  id v19;
  void (*v20)(char *, char *, uint64_t);
  uint64_t *v22;
  char *v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  __int128 v32;
  __int128 v33;

  v2 = v1;
  v4 = sub_1CA85A5B0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8711C0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(v1 + 24);
  if (!*(_QWORD *)(v11 + 16))
    goto LABEL_17;
  v12 = sub_1CA25081C(0xD000000000000020, 0x80000001CA889F70);
  if ((v13 & 1) == 0)
    goto LABEL_17;
  sub_1CA266A08(*(_QWORD *)(v11 + 56) + 32 * v12, (uint64_t)&v32);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED872170);
  if ((swift_dynamicCast() & 1) == 0)
    goto LABEL_17;
  v14 = v31;
  if (*(_QWORD *)(v31 + 16) && (v15 = sub_1CA25081C(0xD00000000000001ELL, 0x80000001CA88A040), (v16 & 1) != 0))
  {
    sub_1CA266A08(*(_QWORD *)(v14 + 56) + 32 * v15, (uint64_t)&v32);
  }
  else
  {
    v32 = 0u;
    v33 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v33 + 1))
  {
    v22 = &qword_1ED8710D0;
    v23 = (char *)&v32;
LABEL_16:
    sub_1CA267BE8((uint64_t)v23, v22);
    goto LABEL_17;
  }
  if ((swift_dynamicCast() & 1) != 0)
  {
    v17 = *(void **)(v2 + OBJC_IVAR____TtC11PhotosGraph30PGSharedLibrarySimulationEvent_dateFormatter);
    v18 = (void *)sub_1CA85B510();
    swift_bridgeObjectRelease();
    v19 = objc_msgSend(v17, sel_dateFromString_, v18);

    if (v19)
    {
      sub_1CA85A574();

      v20 = *(void (**)(char *, char *, uint64_t))(v5 + 32);
      v20(v10, v7, v4);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v5 + 56))(v10, 0, 1, v4);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4) != 1)
        return ((uint64_t (*)(uint64_t, char *, uint64_t))v20)(a1, v10, v4);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v10, 1, 1, v4);
    }
    v22 = &qword_1ED8711C0;
    v23 = v10;
    goto LABEL_16;
  }
LABEL_17:
  if (qword_1EF94A248 != -1)
    swift_once();
  v24 = sub_1CA85B348();
  __swift_project_value_buffer(v24, (uint64_t)qword_1EF9780D8);
  swift_retain_n();
  v25 = sub_1CA85B330();
  v26 = sub_1CA85BAE0();
  if (os_log_type_enabled(v25, v26))
  {
    v27 = (uint8_t *)swift_slowAlloc();
    v28 = swift_slowAlloc();
    *(_DWORD *)v27 = 136315138;
    *(_QWORD *)&v32 = v28;
    sub_1CA85A424();
    sub_1CA23CC98((unint64_t *)&qword_1EF94C3E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0048]);
    v29 = sub_1CA85C260();
    v31 = sub_1CA28712C(v29, v30, (uint64_t *)&v32);
    sub_1CA85BCF0();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1CA237000, v25, v26, "[SharedLibrarySimulationEvent] Could not find last detection date for event at %s.", v27, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1CAA4F27C](v28, -1, -1);
    MEMORY[0x1CAA4F27C](v27, -1, -1);

  }
  else
  {

    swift_release_n();
  }
  return sub_1CA85A4C0();
}

void sub_1CA29B714()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  char v5;
  double v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;

  v1 = *(_QWORD *)(v0 + 24);
  if (!*(_QWORD *)(v1 + 16))
    goto LABEL_27;
  v2 = sub_1CA25081C(0xD000000000000020, 0x80000001CA889F70);
  if ((v3 & 1) == 0)
    goto LABEL_27;
  sub_1CA266A08(*(_QWORD *)(v1 + 56) + 32 * v2, (uint64_t)&v21);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED872170);
  if ((swift_dynamicCast() & 1) == 0)
    goto LABEL_27;
  if (*(_QWORD *)(v20 + 16) && (v4 = sub_1CA25081C(0xD000000000000022, 0x80000001CA88A010), (v5 & 1) != 0))
  {
    sub_1CA266A08(*(_QWORD *)(v20 + 56) + 32 * v4, (uint64_t)&v21);
  }
  else
  {
    v21 = 0u;
    v22 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v22 + 1))
    goto LABEL_26;
  if ((swift_dynamicCast() & 1) != 0)
  {
    v6 = 0.0;
    if (*(_QWORD *)(v20 + 16))
    {
      v7 = sub_1CA25081C(0xD000000000000011, 0x80000001CA889E90);
      if ((v8 & 1) != 0)
      {
        sub_1CA266A08(*(_QWORD *)(v20 + 56) + 32 * v7, (uint64_t)&v21);
        if ((swift_dynamicCast() & 1) != 0)
          v6 = (double)v20;
      }
    }
    if (*(_QWORD *)(v20 + 16))
    {
      v9 = sub_1CA25081C(0xD000000000000011, 0x80000001CA889E90);
      if ((v10 & 1) != 0)
      {
        sub_1CA266A08(*(_QWORD *)(v20 + 56) + 32 * v9, (uint64_t)&v21);
        if ((swift_dynamicCast() & 1) != 0)
          v6 = *(double *)&v20;
      }
    }
    if (*(_QWORD *)(v20 + 16) && (v11 = sub_1CA25081C(0xD00000000000001BLL, 0x80000001CA889EB0), (v12 & 1) != 0))
    {
      sub_1CA266A08(*(_QWORD *)(v20 + 56) + 32 * v11, (uint64_t)&v21);
    }
    else
    {
      v21 = 0u;
      v22 = 0u;
    }
    swift_bridgeObjectRelease();
    if (*((_QWORD *)&v22 + 1))
    {
      if ((swift_dynamicCast() & 1) != 0 && v6 == 1.0)
        return;
      goto LABEL_27;
    }
LABEL_26:
    sub_1CA267BE8((uint64_t)&v21, &qword_1ED8710D0);
  }
LABEL_27:
  if (qword_1EF94A248 != -1)
    swift_once();
  v13 = sub_1CA85B348();
  __swift_project_value_buffer(v13, (uint64_t)qword_1EF9780D8);
  swift_retain_n();
  v14 = sub_1CA85B330();
  v15 = sub_1CA85BAE0();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = (uint8_t *)swift_slowAlloc();
    v17 = swift_slowAlloc();
    *(_DWORD *)v16 = 136315138;
    *(_QWORD *)&v21 = v17;
    sub_1CA85A424();
    sub_1CA23CC98((unint64_t *)&qword_1EF94C3E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0048]);
    v18 = sub_1CA85C260();
    sub_1CA28712C(v18, v19, (uint64_t *)&v21);
    sub_1CA85BCF0();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1CA237000, v14, v15, "[SharedLibrarySimulationEvent] Could not find sharedLibraryLastDiscoveryLocation distance for event at %s.", v16, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1CAA4F27C](v17, -1, -1);
    MEMORY[0x1CAA4F27C](v16, -1, -1);

  }
  else
  {

    swift_release_n();
  }
}

uint64_t sub_1CA29BB34()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  double v17;
  __int128 v18;
  __int128 v19;

  v1 = *(_QWORD *)(v0 + 24);
  if (*(_QWORD *)(v1 + 16))
  {
    v2 = sub_1CA25081C(0xD000000000000016, 0x80000001CA889FD0);
    if ((v3 & 1) != 0)
    {
      sub_1CA266A08(*(_QWORD *)(v1 + 56) + 32 * v2, (uint64_t)&v18);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED872170);
      if ((swift_dynamicCast() & 1) != 0)
      {
        if (*(_QWORD *)(*(_QWORD *)&v17 + 16))
        {
          v4 = sub_1CA25081C(0xD000000000000016, 0x80000001CA889FF0);
          if ((v5 & 1) != 0)
          {
            sub_1CA266A08(*(_QWORD *)(*(_QWORD *)&v17 + 56) + 32 * v4, (uint64_t)&v18);
            if ((swift_dynamicCast() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return *(_QWORD *)&v17 == 1;
            }
          }
        }
        if (*(_QWORD *)(*(_QWORD *)&v17 + 16)
          && (v7 = sub_1CA25081C(0xD000000000000016, 0x80000001CA889FF0), (v8 & 1) != 0))
        {
          sub_1CA266A08(*(_QWORD *)(*(_QWORD *)&v17 + 56) + 32 * v7, (uint64_t)&v18);
        }
        else
        {
          v18 = 0u;
          v19 = 0u;
        }
        swift_bridgeObjectRelease();
        if (*((_QWORD *)&v19 + 1))
        {
          if ((swift_dynamicCast() & 1) != 0)
            return v17 == 1.0;
        }
        else
        {
          sub_1CA267BE8((uint64_t)&v18, &qword_1ED8710D0);
        }
      }
    }
  }
  if (qword_1EF94A248 != -1)
    swift_once();
  v9 = sub_1CA85B348();
  __swift_project_value_buffer(v9, (uint64_t)qword_1EF9780D8);
  swift_retain_n();
  v10 = sub_1CA85B330();
  v11 = sub_1CA85BAE0();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = (uint8_t *)swift_slowAlloc();
    v13 = swift_slowAlloc();
    *(_DWORD *)v12 = 136315138;
    *(_QWORD *)&v18 = v13;
    sub_1CA85A424();
    sub_1CA23CC98((unint64_t *)&qword_1EF94C3E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0048]);
    v14 = sub_1CA85C260();
    sub_1CA28712C(v14, v15, (uint64_t *)&v18);
    sub_1CA85BCF0();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1CA237000, v10, v11, "[SharedLibrarySimulationEvent] Could not find shareWhenAtHomeEnabled setting for event at %s.", v12, 0xCu);
    v6 = 1;
    swift_arrayDestroy();
    MEMORY[0x1CAA4F27C](v13, -1, -1);
    MEMORY[0x1CAA4F27C](v12, -1, -1);

  }
  else
  {

    swift_release_n();
    return 1;
  }
  return v6;
}

BOOL sub_1CA29BE8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  char v5;
  uint64_t v7;
  char v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  double v16;
  __int128 v17;
  __int128 v18;

  v1 = *(_QWORD *)(v0 + 24);
  if (*(_QWORD *)(v1 + 16))
  {
    v2 = sub_1CA25081C(0xD000000000000020, 0x80000001CA889F70);
    if ((v3 & 1) != 0)
    {
      sub_1CA266A08(*(_QWORD *)(v1 + 56) + 32 * v2, (uint64_t)&v17);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED872170);
      if ((swift_dynamicCast() & 1) != 0)
      {
        if (*(_QWORD *)(*(_QWORD *)&v16 + 16))
        {
          v4 = sub_1CA25081C(0xD00000000000002BLL, 0x80000001CA889FA0);
          if ((v5 & 1) != 0)
          {
            sub_1CA266A08(*(_QWORD *)(*(_QWORD *)&v16 + 56) + 32 * v4, (uint64_t)&v17);
            if ((swift_dynamicCast() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return *(_QWORD *)&v16 == 1;
            }
          }
        }
        if (*(_QWORD *)(*(_QWORD *)&v16 + 16)
          && (v7 = sub_1CA25081C(0xD00000000000002BLL, 0x80000001CA889FA0), (v8 & 1) != 0))
        {
          sub_1CA266A08(*(_QWORD *)(*(_QWORD *)&v16 + 56) + 32 * v7, (uint64_t)&v17);
        }
        else
        {
          v17 = 0u;
          v18 = 0u;
        }
        swift_bridgeObjectRelease();
        if (*((_QWORD *)&v18 + 1))
        {
          if ((swift_dynamicCast() & 1) != 0)
            return v16 == 1.0;
        }
        else
        {
          sub_1CA267BE8((uint64_t)&v17, &qword_1ED8710D0);
        }
      }
    }
  }
  if (qword_1EF94A248 != -1)
    swift_once();
  v9 = sub_1CA85B348();
  __swift_project_value_buffer(v9, (uint64_t)qword_1EF9780D8);
  swift_retain_n();
  v10 = sub_1CA85B330();
  v11 = sub_1CA85BAE0();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = (uint8_t *)swift_slowAlloc();
    v13 = swift_slowAlloc();
    *(_DWORD *)v12 = 136315138;
    *(_QWORD *)&v17 = v13;
    sub_1CA85A424();
    sub_1CA23CC98((unint64_t *)&qword_1EF94C3E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0048]);
    v14 = sub_1CA85C260();
    sub_1CA28712C(v14, v15, (uint64_t *)&v17);
    sub_1CA85BCF0();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1CA237000, v10, v11, "[SharedLibrarySimulationEvent] Could not find sharedLibraryLastLocationAcquiredDuringTrip flag for event at %s.", v12, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1CAA4F27C](v13, -1, -1);
    MEMORY[0x1CAA4F27C](v12, -1, -1);

  }
  else
  {

    swift_release_n();
  }
  return 0;
}

BOOL sub_1CA29C1E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v10;
  char v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  double v21;
  __int128 v22;
  __int128 v23;

  v1 = *(_QWORD *)(v0 + 24);
  if (*(_QWORD *)(v1 + 16))
  {
    v2 = sub_1CA25081C(0xD000000000000015, 0x80000001CA889E50);
    if ((v3 & 1) != 0)
    {
      sub_1CA266A08(*(_QWORD *)(v1 + 56) + 32 * v2, (uint64_t)&v22);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED872170);
      if ((swift_dynamicCast() & 1) != 0)
      {
        if (*(_QWORD *)(*(_QWORD *)&v21 + 16)
          && (v4 = sub_1CA25081C(0xD000000000000015, 0x80000001CA889F10), (v5 & 1) != 0)
          && (sub_1CA266A08(*(_QWORD *)(*(_QWORD *)&v21 + 56) + 32 * v4, (uint64_t)&v22),
              __swift_instantiateConcreteTypeFromMangledName(&qword_1ED872270),
              (swift_dynamicCast() & 1) != 0)
          || *(_QWORD *)(*(_QWORD *)&v21 + 16)
          && (v6 = sub_1CA25081C(0xD000000000000015, 0x80000001CA889F30), (v7 & 1) != 0)
          && (sub_1CA266A08(*(_QWORD *)(*(_QWORD *)&v21 + 56) + 32 * v6, (uint64_t)&v22),
              __swift_instantiateConcreteTypeFromMangledName(&qword_1ED872270),
              (swift_dynamicCast() & 1) != 0))
        {
          swift_bridgeObjectRelease();
          v8 = *(_QWORD *)(*(_QWORD *)&v21 + 16);
          swift_bridgeObjectRelease();
          return v8 != 0;
        }
        if (*(_QWORD *)(*(_QWORD *)&v21 + 16))
        {
          v10 = sub_1CA25081C(0xD00000000000001CLL, 0x80000001CA889F50);
          if ((v11 & 1) != 0)
          {
            sub_1CA266A08(*(_QWORD *)(*(_QWORD *)&v21 + 56) + 32 * v10, (uint64_t)&v22);
            if ((swift_dynamicCast() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return *(_QWORD *)&v21 > 0;
            }
          }
        }
        if (*(_QWORD *)(*(_QWORD *)&v21 + 16)
          && (v12 = sub_1CA25081C(0xD00000000000001CLL, 0x80000001CA889F50), (v13 & 1) != 0))
        {
          sub_1CA266A08(*(_QWORD *)(*(_QWORD *)&v21 + 56) + 32 * v12, (uint64_t)&v22);
        }
        else
        {
          v22 = 0u;
          v23 = 0u;
        }
        swift_bridgeObjectRelease();
        if (*((_QWORD *)&v23 + 1))
        {
          if ((swift_dynamicCast() & 1) != 0)
            return v21 > 0.0;
        }
        else
        {
          sub_1CA267BE8((uint64_t)&v22, &qword_1ED8710D0);
        }
      }
    }
  }
  if (qword_1EF94A248 != -1)
    swift_once();
  v14 = sub_1CA85B348();
  __swift_project_value_buffer(v14, (uint64_t)qword_1EF9780D8);
  swift_retain_n();
  v15 = sub_1CA85B330();
  v16 = sub_1CA85BAE0();
  if (os_log_type_enabled(v15, v16))
  {
    v17 = (uint8_t *)swift_slowAlloc();
    v18 = swift_slowAlloc();
    *(_DWORD *)v17 = 136315138;
    *(_QWORD *)&v22 = v18;
    sub_1CA85A424();
    sub_1CA23CC98((unint64_t *)&qword_1EF94C3E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0048]);
    v19 = sub_1CA85C260();
    sub_1CA28712C(v19, v20, (uint64_t *)&v22);
    sub_1CA85BCF0();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1CA237000, v15, v16, "[SharedLibrarySimulationEvent] Could not find hasContactInProximity array for event at %s.", v17, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1CAA4F27C](v18, -1, -1);
    MEMORY[0x1CAA4F27C](v17, -1, -1);

  }
  else
  {

    swift_release_n();
  }
  return 0;
}

uint64_t sub_1CA29C60C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  char v5;
  uint64_t result;
  uint64_t v7;
  char v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;

  v1 = *(_QWORD *)(v0 + 24);
  if (!*(_QWORD *)(v1 + 16)
    || (v2 = sub_1CA25081C(0xD000000000000015, 0x80000001CA889E50), (v3 & 1) == 0)
    || (sub_1CA266A08(*(_QWORD *)(v1 + 56) + 32 * v2, (uint64_t)&v17),
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED872170),
        (swift_dynamicCast() & 1) == 0))
  {
LABEL_21:
    if (qword_1EF94A248 != -1)
      swift_once();
    v9 = sub_1CA85B348();
    __swift_project_value_buffer(v9, (uint64_t)qword_1EF9780D8);
    swift_retain_n();
    v10 = sub_1CA85B330();
    v11 = sub_1CA85BAE0();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = (uint8_t *)swift_slowAlloc();
      v13 = swift_slowAlloc();
      *(_DWORD *)v12 = 136315138;
      *(_QWORD *)&v17 = v13;
      sub_1CA85A424();
      sub_1CA23CC98((unint64_t *)&qword_1EF94C3E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0048]);
      v14 = sub_1CA85C260();
      sub_1CA28712C(v14, v15, (uint64_t *)&v17);
      sub_1CA85BCF0();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1CA237000, v10, v11, "[SharedLibrarySimulationEvent] Could not find locationAuthorizationStatus for event at %s.", v12, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1CAA4F27C](v13, -1, -1);
      MEMORY[0x1CAA4F27C](v12, -1, -1);

    }
    else
    {

      swift_release_n();
    }
    return 0;
  }
  if (!*(_QWORD *)(v16 + 16)
    || (v4 = sub_1CA25081C(0xD00000000000001BLL, 0x80000001CA889EF0), (v5 & 1) == 0)
    || (sub_1CA266A08(*(_QWORD *)(v16 + 56) + 32 * v4, (uint64_t)&v17), (swift_dynamicCast() & 1) == 0))
  {
LABEL_10:
    if (*(_QWORD *)(v16 + 16) && (v7 = sub_1CA25081C(0xD00000000000001BLL, 0x80000001CA889EF0), (v8 & 1) != 0))
    {
      sub_1CA266A08(*(_QWORD *)(v16 + 56) + 32 * v7, (uint64_t)&v17);
    }
    else
    {
      v17 = 0u;
      v18 = 0u;
    }
    swift_bridgeObjectRelease();
    if (*((_QWORD *)&v18 + 1))
    {
      result = swift_dynamicCast();
      if ((result & 1) != 0)
      {
        if ((~v16 & 0x7FF0000000000000) != 0)
        {
          if (*(double *)&v16 > -2147483650.0)
          {
            if (*(double *)&v16 < 2147483650.0)
              return (int)*(double *)&v16;
            goto LABEL_30;
          }
        }
        else
        {
          __break(1u);
        }
        __break(1u);
LABEL_30:
        __break(1u);
        goto LABEL_31;
      }
    }
    else
    {
      sub_1CA267BE8((uint64_t)&v17, &qword_1ED8710D0);
    }
    goto LABEL_21;
  }
  swift_bridgeObjectRelease();
  result = v16;
  if (v16 < (uint64_t)0xFFFFFFFF80000000)
  {
LABEL_31:
    __break(1u);
    return result;
  }
  if (v16 > 0x7FFFFFFF)
  {
    __break(1u);
    goto LABEL_10;
  }
  return result;
}

BOOL sub_1CA29C9AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  char v5;
  uint64_t v7;
  char v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  double v16;
  __int128 v17;
  __int128 v18;

  v1 = *(_QWORD *)(v0 + 24);
  if (*(_QWORD *)(v1 + 16))
  {
    v2 = sub_1CA25081C(0xD000000000000015, 0x80000001CA889E50);
    if ((v3 & 1) != 0)
    {
      sub_1CA266A08(*(_QWORD *)(v1 + 56) + 32 * v2, (uint64_t)&v17);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED872170);
      if ((swift_dynamicCast() & 1) != 0)
      {
        if (*(_QWORD *)(*(_QWORD *)&v16 + 16))
        {
          v4 = sub_1CA25081C(0x7374736567677573, 0xEF676E6972616853);
          if ((v5 & 1) != 0)
          {
            sub_1CA266A08(*(_QWORD *)(*(_QWORD *)&v16 + 56) + 32 * v4, (uint64_t)&v17);
            if ((swift_dynamicCast() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return *(_QWORD *)&v16 == 1;
            }
          }
        }
        if (*(_QWORD *)(*(_QWORD *)&v16 + 16)
          && (v7 = sub_1CA25081C(0x7374736567677573, 0xEF676E6972616853), (v8 & 1) != 0))
        {
          sub_1CA266A08(*(_QWORD *)(*(_QWORD *)&v16 + 56) + 32 * v7, (uint64_t)&v17);
        }
        else
        {
          v17 = 0u;
          v18 = 0u;
        }
        swift_bridgeObjectRelease();
        if (*((_QWORD *)&v18 + 1))
        {
          if ((swift_dynamicCast() & 1) != 0)
            return v16 == 1.0;
        }
        else
        {
          sub_1CA267BE8((uint64_t)&v17, &qword_1ED8710D0);
        }
      }
    }
  }
  if (qword_1EF94A248 != -1)
    swift_once();
  v9 = sub_1CA85B348();
  __swift_project_value_buffer(v9, (uint64_t)qword_1EF9780D8);
  swift_retain_n();
  v10 = sub_1CA85B330();
  v11 = sub_1CA85BAE0();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = (uint8_t *)swift_slowAlloc();
    v13 = swift_slowAlloc();
    *(_DWORD *)v12 = 136315138;
    *(_QWORD *)&v17 = v13;
    sub_1CA85A424();
    sub_1CA23CC98((unint64_t *)&qword_1EF94C3E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0048]);
    v14 = sub_1CA85C260();
    sub_1CA28712C(v14, v15, (uint64_t *)&v17);
    sub_1CA85BCF0();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1CA237000, v10, v11, "[SharedLibrarySimulationEvent] Could not find suggestsSharing for event at %s.", v12, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1CAA4F27C](v13, -1, -1);
    MEMORY[0x1CAA4F27C](v12, -1, -1);

  }
  else
  {

    swift_release_n();
  }
  return 0;
}

BOOL sub_1CA29CD14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  char v7;
  uint64_t v9;
  char v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  double v18;
  __int128 v19;
  __int128 v20;

  v1 = *(_QWORD *)(v0 + 24);
  if (!*(_QWORD *)(v1 + 16))
    goto LABEL_22;
  v2 = sub_1CA25081C(0xD000000000000015, 0x80000001CA889E50);
  if ((v3 & 1) == 0)
    goto LABEL_22;
  sub_1CA266A08(*(_QWORD *)(v1 + 56) + 32 * v2, (uint64_t)&v19);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED872170);
  if ((swift_dynamicCast() & 1) == 0)
    goto LABEL_22;
  if (*(_QWORD *)(*(_QWORD *)&v18 + 16)
    && (v4 = sub_1CA25081C(0x4C746E6572727563, 0xEF6E6F697461636FLL), (v5 & 1) != 0))
  {
    sub_1CA266A08(*(_QWORD *)(*(_QWORD *)&v18 + 56) + 32 * v4, (uint64_t)&v19);
  }
  else
  {
    v19 = 0u;
    v20 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v20 + 1))
    goto LABEL_21;
  if ((swift_dynamicCast() & 1) == 0)
    goto LABEL_22;
  if (*(_QWORD *)(*(_QWORD *)&v18 + 16))
  {
    v6 = sub_1CA25081C(0xD000000000000011, 0x80000001CA889E90);
    if ((v7 & 1) != 0)
    {
      sub_1CA266A08(*(_QWORD *)(*(_QWORD *)&v18 + 56) + 32 * v6, (uint64_t)&v19);
      if ((swift_dynamicCast() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return *(_QWORD *)&v18 == 1;
      }
    }
  }
  if (*(_QWORD *)(*(_QWORD *)&v18 + 16)
    && (v9 = sub_1CA25081C(0xD000000000000011, 0x80000001CA889E90), (v10 & 1) != 0))
  {
    sub_1CA266A08(*(_QWORD *)(*(_QWORD *)&v18 + 56) + 32 * v9, (uint64_t)&v19);
  }
  else
  {
    v19 = 0u;
    v20 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v20 + 1))
  {
LABEL_21:
    sub_1CA267BE8((uint64_t)&v19, &qword_1ED8710D0);
    goto LABEL_22;
  }
  if ((swift_dynamicCast() & 1) != 0)
    return v18 == 1.0;
LABEL_22:
  if (qword_1EF94A248 != -1)
    swift_once();
  v11 = sub_1CA85B348();
  __swift_project_value_buffer(v11, (uint64_t)qword_1EF9780D8);
  swift_retain_n();
  v12 = sub_1CA85B330();
  v13 = sub_1CA85BAE0();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = (uint8_t *)swift_slowAlloc();
    v15 = swift_slowAlloc();
    *(_DWORD *)v14 = 136315138;
    *(_QWORD *)&v19 = v15;
    sub_1CA85A424();
    sub_1CA23CC98((unint64_t *)&qword_1EF94C3E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0048]);
    v16 = sub_1CA85C260();
    sub_1CA28712C(v16, v17, (uint64_t *)&v19);
    sub_1CA85BCF0();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1CA237000, v12, v13, "[SharedLibrarySimulationEvent] Could not find currentLocationIsValid for event at %s.", v14, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1CAA4F27C](v15, -1, -1);
    MEMORY[0x1CAA4F27C](v14, -1, -1);

  }
  else
  {

    swift_release_n();
  }
  return 0;
}

_QWORD *sub_1CA29D0E8()
{
  return sub_1CA29D120(0xD00000000000001CLL, 0x80000001CA889ED0);
}

_QWORD *sub_1CA29D104()
{
  return sub_1CA29D120(0xD000000000000018, 0x80000001CA889E70);
}

_QWORD *sub_1CA29D120(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  char v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  double v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  char v23;
  unint64_t v24;
  unint64_t v25;
  _QWORD *v26;
  uint64_t v28;
  __int128 v29;
  __int128 v30;

  v3 = *(_QWORD *)(v2 + 24);
  if (!*(_QWORD *)(v3 + 16))
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  v6 = sub_1CA25081C(0xD000000000000015, 0x80000001CA889E50);
  if ((v7 & 1) == 0)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  sub_1CA266A08(*(_QWORD *)(v3 + 56) + 32 * v6, (uint64_t)&v29);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED872170);
  if ((swift_dynamicCast() & 1) == 0)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  if (*(_QWORD *)(v28 + 16) && (v8 = sub_1CA25081C(a1, a2), (v9 & 1) != 0))
  {
    sub_1CA266A08(*(_QWORD *)(v28 + 56) + 32 * v8, (uint64_t)&v29);
  }
  else
  {
    v29 = 0u;
    v30 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v30 + 1))
  {
    sub_1CA267BE8((uint64_t)&v29, &qword_1ED8710D0);
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94C3E8);
  if ((swift_dynamicCast() & 1) == 0)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  v10 = *(_QWORD *)(v28 + 16);
  if (!v10)
  {
    swift_bridgeObjectRelease();
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v11 = 0;
  v12 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  do
  {
    v13 = *(_QWORD *)(v28 + 8 * v11 + 32);
    v14 = *(_QWORD *)(v13 + 16);
    swift_bridgeObjectRetain();
    v15 = 0.0;
    if (v14)
    {
      v16 = sub_1CA25081C(0xD000000000000011, 0x80000001CA889E90);
      if ((v17 & 1) != 0)
      {
        sub_1CA266A08(*(_QWORD *)(v13 + 56) + 32 * v16, (uint64_t)&v29);
        if ((swift_dynamicCast() & 1) != 0)
          v15 = (double)v28;
      }
    }
    if (*(_QWORD *)(v13 + 16))
    {
      v18 = sub_1CA25081C(0xD000000000000011, 0x80000001CA889E90);
      if ((v19 & 1) != 0)
      {
        sub_1CA266A08(*(_QWORD *)(v13 + 56) + 32 * v18, (uint64_t)&v29);
        if ((swift_dynamicCast() & 1) != 0)
          v15 = *(double *)&v28;
      }
    }
    if (*(_QWORD *)(v13 + 16)
      && (v20 = sub_1CA25081C(0xD00000000000001BLL, 0x80000001CA889EB0), (v21 & 1) != 0)
      && (sub_1CA266A08(*(_QWORD *)(v13 + 56) + 32 * v20, (uint64_t)&v29), (swift_dynamicCast() & 1) != 0))
    {
      if (*(_QWORD *)(v13 + 16) && (v22 = sub_1CA25081C(0x737569646172, 0xE600000000000000), (v23 & 1) != 0))
      {
        sub_1CA266A08(*(_QWORD *)(v13 + 56) + 32 * v22, (uint64_t)&v29);
      }
      else
      {
        v29 = 0u;
        v30 = 0u;
      }
      swift_bridgeObjectRelease();
      if (*((_QWORD *)&v30 + 1))
      {
        if ((swift_dynamicCast() & 1) != 0 && v15 == 1.0)
        {
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v12 = sub_1CA26CBBC(0, v12[2] + 1, 1, v12);
          v25 = v12[2];
          v24 = v12[3];
          if (v25 >= v24 >> 1)
            v12 = sub_1CA26CBBC((_QWORD *)(v24 > 1), v25 + 1, 1, v12);
          v12[2] = v25 + 1;
          v26 = &v12[2 * v25];
          v26[4] = v28;
          v26[5] = v28;
        }
      }
      else
      {
        sub_1CA267BE8((uint64_t)&v29, &qword_1ED8710D0);
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    ++v11;
  }
  while (v10 != v11);
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t sub_1CA29D50C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_bridgeObjectRelease();
  v1 = v0 + OBJC_IVAR____TtC11PhotosGraph30PGSharedLibrarySimulationEvent_mdataFilePath;
  v2 = sub_1CA85A424();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);

  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1CA29D5A0()
{
  return type metadata accessor for PGSharedLibrarySimulationEvent();
}

uint64_t type metadata accessor for PGSharedLibrarySimulationEvent()
{
  uint64_t result;

  result = qword_1EF94C270;
  if (!qword_1EF94C270)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1CA29D5E4()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1CA85A424();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_1CA29D69C@<X0>(uint64_t a1@<X8>)
{
  return sub_1CA29AEE4(a1);
}

uint64_t static RecentlyUsedRanker.rank(songs:for:context:progressReporter:)(uint64_t a1, uint64_t a2, _QWORD *a3, uint64_t a4)
{
  return sub_1CA29D900(a1, a3, a4);
}

float static RecentlyUsedRanker.score(song:recentlyUsedSongs:currentDate:)(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  double v17;
  double v18;
  float v19;
  uint64_t v21;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8711C0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1CA85A5B0();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *a1;
  v11 = a1[1];
  v13 = (uint64_t *)(a2 + OBJC_IVAR___PGMusicCurationRecentlyUsedSongs_mostRecentlyUsedSongIDDateMap);
  swift_beginAccess();
  v14 = *v13;
  if (*(_QWORD *)(v14 + 16))
  {
    swift_bridgeObjectRetain();
    v15 = sub_1CA25081C(v12, v11);
    if ((v16 & 1) != 0)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v6, *(_QWORD *)(v14 + 56) + *(_QWORD *)(v8 + 72) * v15, v7);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v7);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, 1, 1, v7);
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, 1, 1, v7);
  }
  swift_endAccess();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_1CA29DFF0((uint64_t)v6);
    return 1.0;
  }
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
  sub_1CA85A4F0();
  v18 = fabs(v17);
  if (v18 >= 5184000.0)
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    return 1.0;
  }
  v19 = v18 / 5184000.0;
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return v19;
}

uint64_t sub_1CA29D8E4(uint64_t a1, uint64_t a2, _QWORD *a3, uint64_t a4)
{
  return sub_1CA29D900(a1, a3, a4);
}

uint64_t sub_1CA29D900(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v16;
  uint64_t *v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  char *v43;
  double v44;
  double v45;
  float v46;
  char *v47;
  uint64_t v48;
  _BOOL8 v49;
  uint64_t v50;
  unint64_t v51;
  char v52;
  uint64_t v53;
  BOOL v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t result;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  unint64_t v62;
  uint64_t *v63;
  _QWORD *v64;
  char *v65;
  char *v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD v71[9];
  char v72[40];

  v67 = a3;
  v69 = a1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8711C0);
  MEMORY[0x1E0C80A78](v5);
  v66 = (char *)&v58 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = type metadata accessor for Song();
  v60 = *(_QWORD *)(v59 - 8);
  v7 = MEMORY[0x1E0C80A78](v59);
  v9 = (uint64_t *)((char *)&v58 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v7);
  v11 = (uint64_t *)((char *)&v58 - v10);
  v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED872310);
  v13 = MEMORY[0x1E0C80A78](v12);
  isUniquelyReferenced_nonNull_native = (uint64_t)&v58 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v17 = (uint64_t *)((char *)&v58 - v16);
  v18 = sub_1CA85A5B0();
  v68 = *(char **)(v18 - 8);
  v19 = MEMORY[0x1E0C80A78](v18);
  v65 = (char *)&v58 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v22 = (char *)&v58 - v21;
  if (qword_1ED873000 != -1)
LABEL_40:
    swift_once();
  v23 = qword_1ED87D140;
  *(double *)&v24 = CACurrentMediaTime();
  sub_1CA2E4280("Recently Used Ranker", 20, 2u, v24, 0, v23, (uint64_t)v72);
  v25 = *(_QWORD *)((char *)a2 + OBJC_IVAR___PGMusicCuratorContext_recentlyUsedSongs);
  v61 = v22;
  sub_1CA85A5A4();
  v26 = -1 << *(_BYTE *)(v69 + 32);
  v27 = ~v26;
  v28 = *(_QWORD *)(v69 + 56);
  v29 = -v26;
  if (v29 < 64)
    v30 = ~(-1 << v29);
  else
    v30 = -1;
  v71[3] = v69;
  v71[4] = v69 + 56;
  v71[5] = v27;
  v71[6] = 0;
  v71[7] = v30 & v28;
  v71[8] = 0;
  v31 = OBJC_IVAR___PGMusicCurationRecentlyUsedSongs_mostRecentlyUsedSongIDDateMap;
  swift_bridgeObjectRetain();
  sub_1CA4C8F58((_QWORD *)isUniquelyReferenced_nonNull_native);
  v64 = (_QWORD *)isUniquelyReferenced_nonNull_native;
  sub_1CA29E040(isUniquelyReferenced_nonNull_native, (uint64_t)v17);
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED872308);
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 48))(v17, 1, v32) != 1)
  {
    v63 = (uint64_t *)(v25 + v31);
    v33 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    v62 = v18;
    while (1)
    {
      v70 = *v17;
      sub_1CA268478((uint64_t)v17 + *(int *)(v32 + 48), (uint64_t)v11);
      sub_1CA268434((uint64_t)v11, (uint64_t)v9);
      v34 = *v11;
      v35 = v11[1];
      v36 = v63;
      swift_beginAccess();
      v37 = *v36;
      if (*(_QWORD *)(v37 + 16))
      {
        swift_bridgeObjectRetain();
        v38 = sub_1CA25081C(v34, v35);
        v22 = v68;
        if ((v39 & 1) != 0)
        {
          v40 = *(_QWORD *)(v37 + 56) + *((_QWORD *)v68 + 9) * v38;
          v41 = (uint64_t)v66;
          (*((void (**)(char *, uint64_t, unint64_t))v68 + 2))(v66, v40, v18);
          (*((void (**)(uint64_t, _QWORD, uint64_t, unint64_t))v22 + 7))(v41, 0, 1, v18);
        }
        else
        {
          v41 = (uint64_t)v66;
          (*((void (**)(char *, uint64_t, uint64_t, unint64_t))v68 + 7))(v66, 1, 1, v18);
        }
        swift_bridgeObjectRelease();
      }
      else
      {
        v22 = v68;
        v41 = (uint64_t)v66;
        (*((void (**)(char *, uint64_t, uint64_t, unint64_t))v68 + 7))(v66, 1, 1, v18);
      }
      swift_endAccess();
      v42 = (*((uint64_t (**)(uint64_t, uint64_t, unint64_t))v22 + 6))(v41, 1, v18);
      v43 = v65;
      if (v42 == 1)
      {
        sub_1CA29DFF0(v41);
      }
      else
      {
        (*((void (**)(char *, uint64_t, unint64_t))v22 + 4))(v65, v41, v18);
        sub_1CA85A4F0();
        v45 = fabs(v44);
        if (v45 < 5184000.0)
        {
          v46 = v45 / 5184000.0;
          (*((void (**)(char *, unint64_t))v22 + 1))(v43, v18);
          goto LABEL_20;
        }
        (*((void (**)(char *, unint64_t))v22 + 1))(v43, v18);
      }
      v46 = 1.0;
LABEL_20:
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v71[0] = v33;
      a2 = v33;
      v18 = sub_1CA250830(v9);
      v48 = v33[2];
      v49 = (v47 & 1) == 0;
      v50 = v48 + v49;
      if (__OFADD__(v48, v49))
      {
        __break(1u);
LABEL_39:
        __break(1u);
        goto LABEL_40;
      }
      v22 = v47;
      if (v33[3] >= v50)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) != 0)
        {
          isUniquelyReferenced_nonNull_native = v71[0];
          if ((v47 & 1) != 0)
            goto LABEL_27;
        }
        else
        {
          a2 = v71;
          sub_1CA2611AC();
          isUniquelyReferenced_nonNull_native = v71[0];
          if ((v22 & 1) != 0)
            goto LABEL_27;
        }
      }
      else
      {
        sub_1CA253DA8(v50, isUniquelyReferenced_nonNull_native);
        a2 = (_QWORD *)v71[0];
        v51 = sub_1CA250830(v9);
        if ((v22 & 1) != (v52 & 1))
        {
          result = sub_1CA85C2E4();
          __break(1u);
          return result;
        }
        v18 = v51;
        isUniquelyReferenced_nonNull_native = v71[0];
        if ((v22 & 1) != 0)
        {
LABEL_27:
          *(float *)(*(_QWORD *)(isUniquelyReferenced_nonNull_native + 56) + 4 * v18) = v46;
          goto LABEL_31;
        }
      }
      *(_QWORD *)(isUniquelyReferenced_nonNull_native + 8 * (v18 >> 6) + 64) |= 1 << v18;
      sub_1CA268434((uint64_t)v9, *(_QWORD *)(isUniquelyReferenced_nonNull_native + 48) + *(_QWORD *)(v60 + 72) * v18);
      *(float *)(*(_QWORD *)(isUniquelyReferenced_nonNull_native + 56) + 4 * v18) = v46;
      v53 = *(_QWORD *)(isUniquelyReferenced_nonNull_native + 16);
      v54 = __OFADD__(v53, 1);
      v55 = v53 + 1;
      if (v54)
        goto LABEL_39;
      *(_QWORD *)(isUniquelyReferenced_nonNull_native + 16) = v55;
LABEL_31:
      swift_bridgeObjectRelease();
      sub_1CA268588((uint64_t)v9);
      sub_1CA85BB58();
      v18 = v62;
      v56 = v64;
      if (v3)
      {
        swift_release();
        swift_release();
        sub_1CA268588((uint64_t)v11);
        sub_1CA24E6B8();
        (*((void (**)(char *, unint64_t))v68 + 1))(v61, v18);
        swift_bridgeObjectRelease();
        return (uint64_t)v33;
      }
      sub_1CA268588((uint64_t)v11);
      sub_1CA4C8F58(v56);
      sub_1CA29E040((uint64_t)v56, (uint64_t)v17);
      v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED872308);
      v33 = (_QWORD *)isUniquelyReferenced_nonNull_native;
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 48))(v17, 1, v32) == 1)
        goto LABEL_33;
    }
  }
  isUniquelyReferenced_nonNull_native = MEMORY[0x1E0DEE9E0];
LABEL_33:
  sub_1CA24E6B8();
  sub_1CA2E0C94(0);
  sub_1CA85BB70();
  swift_release();
  swift_release();
  (*((void (**)(char *, unint64_t))v68 + 1))(v61, v18);
  if (v3)
    swift_bridgeObjectRelease();
  return isUniquelyReferenced_nonNull_native;
}

uint64_t sub_1CA29DFF0(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8711C0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

ValueMetadata *type metadata accessor for RecentlyUsedRanker()
{
  return &type metadata for RecentlyUsedRanker;
}

uint64_t sub_1CA29E040(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED872310);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t static EventElector.memoryUniqueIdentifiersToElect(graph:electionMode:)(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t result;
  unsigned __int8 v8;
  uint64_t v9;
  uint64_t v10;

  swift_bridgeObjectRetain();
  result = sub_1CA29E840(a2, a3);
  if (!v3)
  {
    v8 = result;
    v9 = sub_1CA29EA64((uint64_t)a1, result);
    v10 = sub_1CA29F114(a1, v8);
    return sub_1CA33DA88(v10, v9);
  }
  return result;
}

void sub_1CA29E220(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, char a7, void *a8)
{
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  char v20;
  double v21;
  id v22;
  char v23;
  char v24;
  char v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  id v30;
  uint64_t v31;

  v27 = a2;
  v14 = objc_allocWithZone((Class)PGGraphMemoryNodeCollection);
  v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D42990]), sel_initWithElementIdentifier_, a1);
  v16 = objc_msgSend(v14, sel_initWithGraph_elementIdentifiers_, a6, v15);

  v17 = objc_msgSend(v16, sel_elementIdentifiers);
  v18 = objc_msgSend(a5, sel_targetsForSources_, v17);

  v30 = objc_msgSend(objc_allocWithZone((Class)PGGraphMomentNodeCollection), sel_initWithGraph_elementIdentifiers_, a6, v18);
  v19 = objc_msgSend(v30, sel_anyNode);
  if (!v19)
  {

    return;
  }
  v29 = v19;
  if (a7 == 1)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v20 = sub_1CA85C284();
    swift_bridgeObjectRelease();
    if ((v20 & 1) == 0)
    {
      if (a7)
      {
        v25 = sub_1CA85C284();
        swift_bridgeObjectRelease();
        if ((v25 & 1) == 0)
          goto LABEL_28;
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      if ((objc_msgSend(v29, sel_isPartOfTrip, v27) & 1) != 0
        || (objc_msgSend(v29, sel_happensAtFrequentLocation) & 1) != 0)
      {
        goto LABEL_28;
      }
    }
  }
  objc_msgSend(a8, sel_neighborScoreWithMomentNode_, v29, v27);
  v22 = objc_msgSend((id)objc_opt_self(), sel_breakoutOfRoutineTypeWithNeighborScore_, v21);
  if (!a7)
    goto LABEL_15;
  v23 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v23 & 1) != 0)
    goto LABEL_16;
  if (a7 != 2)
  {
LABEL_15:
    swift_bridgeObjectRelease();
LABEL_16:
    if (v22 == (id)2)
      goto LABEL_17;
    if (a7 == 1)
    {
      swift_bridgeObjectRelease();
LABEL_21:
      if (v22 != (id)1
        || (objc_msgSend(v29, sel_isPartOfTrip) & 1) != 0
        || (objc_msgSend(v29, sel_happensAtFrequentLocation) & 1) != 0)
      {
        goto LABEL_28;
      }
LABEL_17:
      swift_beginAccess();
      swift_bridgeObjectRetain();
      sub_1CA23F448(&v31, v28, a3);
      swift_endAccess();

      swift_bridgeObjectRelease();
      return;
    }
    goto LABEL_20;
  }
  v24 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v24 & 1) != 0 && v22 == (id)2)
    goto LABEL_17;
LABEL_20:
  v26 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v26 & 1) != 0)
    goto LABEL_21;
LABEL_28:

}

uint64_t sub_1CA29E714(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void (*v6)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a1 + 32);
  v7 = sub_1CA85B534();
  v9 = v8;
  swift_retain();
  v6(a2, v7, v9, a4);
  swift_release();
  return swift_bridgeObjectRelease();
}

id EventElector.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id EventElector.init()()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for EventElector();
  return objc_msgSendSuper2(&v2, sel_init);
}

id EventElector.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for EventElector();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1CA29E840(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v6;
  uint64_t v7;
  char v9;
  uint64_t v10;
  uint64_t v11;
  char v13;
  _QWORD *v14;

  if (!a1 && a2 == 0xE000000000000000 || (sub_1CA85C284() & 1) != 0)
    goto LABEL_17;
  if (sub_1CA85B534() == a1 && v4 == a2)
    goto LABEL_16;
  v6 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v6 & 1) != 0)
    goto LABEL_17;
  if (sub_1CA85B534() == a1 && v7 == a2)
    goto LABEL_16;
  v9 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v9 & 1) != 0)
    goto LABEL_17;
  if (sub_1CA85B534() == a1 && v10 == a2)
  {
LABEL_16:
    swift_bridgeObjectRelease();
  }
  else
  {
    v13 = sub_1CA85C284();
    swift_bridgeObjectRelease();
    if ((v13 & 1) == 0)
    {
      sub_1CA85BEC4();
      swift_bridgeObjectRelease();
      sub_1CA85B624();
      swift_bridgeObjectRelease();
      sub_1CA85B624();
      sub_1CA29F38C();
      swift_allocError();
      *v14 = 0xD000000000000011;
      v14[1] = 0x80000001CA88A0B0;
      return swift_willThrow();
    }
  }
LABEL_17:
  v11 = sub_1CA85C0F8();
  swift_bridgeObjectRelease();
  if (v11 == 2)
    return 2;
  else
    return v11 == 1;
}

uint64_t sub_1CA29EA64(uint64_t a1, unsigned __int8 a2)
{
  uint64_t v4;
  id v5;
  char v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  uint64_t v15;
  void *v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t result;
  id v21;
  uint64_t v22;
  _QWORD aBlock[6];

  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = MEMORY[0x1E0DEE9E8];
  v5 = objc_msgSend((id)objc_opt_self(), sel_memoryNodesOfCategory_inGraph_, 1, a1);
  if (a2 > 1u)
  {
    swift_bridgeObjectRelease();
    goto LABEL_6;
  }
  v6 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v6 & 1) != 0)
  {
LABEL_6:
    v21 = objc_msgSend(v5, sel_uniqueMemoryIdentifiers);
    v22 = sub_1CA85B984();
    swift_release();

    return v22;
  }
  v7 = objc_msgSend(objc_allocWithZone((Class)PGNeighborScoreComputer), sel_init);
  v8 = (void *)objc_opt_self();
  v9 = v5;
  v10 = objc_msgSend(v8, sel_momentOfMemory);
  v11 = objc_msgSend(objc_msgSend(v9, sel_graph), sel_graphReference);
  swift_unknownObjectRelease();
  v12 = objc_msgSend(v11, sel_concreteGraph);

  if (v12)
  {
    v13 = objc_msgSend(v9, sel_elementIdentifiers);
    v14 = objc_msgSend(v12, sel_adjacencyWithSources_relation_, v13, v10);

    v15 = swift_allocObject();
    *(_QWORD *)(v15 + 16) = v14;
    *(_QWORD *)(v15 + 24) = v12;
    *(_BYTE *)(v15 + 32) = a2;
    *(_QWORD *)(v15 + 40) = v7;
    *(_QWORD *)(v15 + 48) = v4;
    aBlock[4] = sub_1CA29F360;
    aBlock[5] = v15;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1CA29E714;
    aBlock[3] = &block_descriptor_3;
    v16 = _Block_copy(aBlock);
    v17 = v14;
    swift_unknownObjectRetain();
    v18 = v7;
    swift_retain();
    swift_release();
    objc_msgSend(v9, sel_enumerateMemoryUniqueIdentifierUsingBlock_, v16);
    _Block_release(v16);

    swift_unknownObjectRelease();
    swift_beginAccess();
    v19 = *(_QWORD *)(v4 + 16);
    swift_bridgeObjectRetain();
    swift_release();
    return v19;
  }
  else
  {
    result = sub_1CA85C044();
    __break(1u);
  }
  return result;
}

uint64_t sub_1CA29EE10(char a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t inited;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED872760);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1CA8D61A0;
  *(_QWORD *)(v2 + 32) = sub_1CA85B534();
  *(_QWORD *)(v2 + 40) = v3;
  *(_QWORD *)(v2 + 48) = sub_1CA85B534();
  *(_QWORD *)(v2 + 56) = v4;
  *(_QWORD *)(v2 + 64) = sub_1CA85B534();
  *(_QWORD *)(v2 + 72) = v5;
  *(_QWORD *)(v2 + 80) = sub_1CA85B534();
  *(_QWORD *)(v2 + 88) = v6;
  *(_QWORD *)(v2 + 96) = sub_1CA85B534();
  *(_QWORD *)(v2 + 104) = v7;
  *(_QWORD *)(v2 + 112) = sub_1CA85B534();
  *(_QWORD *)(v2 + 120) = v8;
  *(_QWORD *)(v2 + 128) = sub_1CA85B534();
  *(_QWORD *)(v2 + 136) = v9;
  *(_QWORD *)(v2 + 144) = sub_1CA85B534();
  *(_QWORD *)(v2 + 152) = v10;
  *(_QWORD *)(v2 + 160) = sub_1CA85B534();
  *(_QWORD *)(v2 + 168) = v11;
  *(_QWORD *)(v2 + 176) = sub_1CA85B534();
  *(_QWORD *)(v2 + 184) = v12;
  *(_QWORD *)(v2 + 192) = sub_1CA85B534();
  *(_QWORD *)(v2 + 200) = v13;
  *(_QWORD *)(v2 + 208) = sub_1CA85B534();
  *(_QWORD *)(v2 + 216) = v14;
  if (a1 == 1)
  {
    swift_bridgeObjectRelease();
LABEL_4:
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1CA8D4AF0;
    *(_QWORD *)(inited + 32) = sub_1CA85B534();
    *(_QWORD *)(inited + 40) = v17;
    *(_QWORD *)(inited + 48) = sub_1CA85B534();
    *(_QWORD *)(inited + 56) = v18;
    *(_QWORD *)(inited + 64) = sub_1CA85B534();
    *(_QWORD *)(inited + 72) = v19;
    *(_QWORD *)(inited + 80) = sub_1CA85B534();
    *(_QWORD *)(inited + 88) = v20;
    *(_QWORD *)(inited + 96) = sub_1CA85B534();
    *(_QWORD *)(inited + 104) = v21;
    *(_QWORD *)(inited + 112) = sub_1CA85B534();
    *(_QWORD *)(inited + 120) = v22;
    *(_QWORD *)(inited + 128) = sub_1CA85B534();
    *(_QWORD *)(inited + 136) = v23;
    *(_QWORD *)(inited + 144) = sub_1CA85B534();
    *(_QWORD *)(inited + 152) = v24;
    *(_QWORD *)(inited + 160) = sub_1CA85B534();
    *(_QWORD *)(inited + 168) = v25;
    *(_QWORD *)(inited + 176) = sub_1CA85B534();
    *(_QWORD *)(inited + 184) = v26;
    sub_1CA284B8C(inited);
    return v2;
  }
  v15 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v15 & 1) != 0)
    goto LABEL_4;
  return v2;
}

uint64_t sub_1CA29F114(void *a1, unsigned __int8 a2)
{
  char v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  uint64_t v12;

  if (a2 > 1u)
  {
    swift_bridgeObjectRelease();
    goto LABEL_5;
  }
  v4 = sub_1CA85C284();
  swift_bridgeObjectRelease();
  if ((v4 & 1) != 0)
  {
LABEL_5:
    v7 = objc_msgSend(a1, sel_meaningNodes);
    goto LABEL_6;
  }
  sub_1CA29EE10(a2);
  v5 = (void *)objc_opt_self();
  v6 = (void *)sub_1CA85B798();
  swift_bridgeObjectRelease();
  v7 = objc_msgSend(v5, sel_meaningNodesWithMeaningLabels_inGraph_, v6, a1);

LABEL_6:
  v8 = objc_msgSend(v7, sel_featureNodeCollection);
  v9 = objc_msgSend(v8, sel_memoryNodes);
  v10 = objc_msgSend(v9, sel_subsetWithMemoryCategory_, 16);

  v11 = objc_msgSend(v10, sel_uniqueMemoryIdentifiers);
  v12 = sub_1CA85B984();

  return v12;
}

uint64_t type metadata accessor for EventElector()
{
  return objc_opt_self();
}

uint64_t sub_1CA29F300()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1CA29F324()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

void sub_1CA29F360(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  sub_1CA29E220(a1, a2, a3, a4, *(void **)(v4 + 16), *(_QWORD *)(v4 + 24), *(_BYTE *)(v4 + 32), *(void **)(v4 + 40));
}

unint64_t sub_1CA29F38C()
{
  unint64_t result;

  result = qword_1EF94C3F0;
  if (!qword_1EF94C3F0)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8D6200, &type metadata for ElectionModeError);
    atomic_store(result, (unint64_t *)&qword_1EF94C3F0);
  }
  return result;
}

ValueMetadata *type metadata accessor for ElectionModeError()
{
  return &type metadata for ElectionModeError;
}

uint64_t MusicCurationFeatures.scoreByAssetCollectionMaestroKeyword.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t MusicCurationFeatures.shouldAvoidColorGrading.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR___PGMusicCurationFeatures_shouldAvoidColorGrading);
}

id MusicCurationFeatures.__allocating_init(memoryCategory:memorySubcategory:curatorEvents:eventCollectionDuration:eventRatioByLanguageCode:mostFrequentMeaningLabel:performerIdentifiers:inferredUserLanguageCodes:maestroSongScoresBySongID:scoreByAssetCollectionMaestroKeyword:consistentHash:location:shouldAvoidColorGrading:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8, __int128 a9, __int128 a10, __int128 a11, uint64_t a12, char a13)
{
  objc_class *v13;
  char v20;
  id v21;

  v20 = a5 & 1;
  v21 = objc_allocWithZone(v13);
  return MusicCurationFeatures.init(memoryCategory:memorySubcategory:curatorEvents:eventCollectionDuration:eventRatioByLanguageCode:mostFrequentMeaningLabel:performerIdentifiers:inferredUserLanguageCodes:maestroSongScoresBySongID:scoreByAssetCollectionMaestroKeyword:consistentHash:location:shouldAvoidColorGrading:)(a1, a2, a3, a4, v20, a6, a7, a8, a9, *((uint64_t *)&a9 + 1), a10, *((uint64_t *)&a10 + 1), a11, *((uint64_t *)&a11 + 1), a12, a13);
}

id MusicCurationFeatures.init(memoryCategory:memorySubcategory:curatorEvents:eventCollectionDuration:eventRatioByLanguageCode:mostFrequentMeaningLabel:performerIdentifiers:inferredUserLanguageCodes:maestroSongScoresBySongID:scoreByAssetCollectionMaestroKeyword:consistentHash:location:shouldAvoidColorGrading:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, char a16)
{
  _BYTE *v16;
  objc_class *ObjectType;
  char *v24;
  _QWORD *v25;
  _QWORD *v26;
  objc_super v30;

  ObjectType = (objc_class *)swift_getObjectType();
  *(_QWORD *)&v16[OBJC_IVAR___PGMusicCurationFeatures_memoryCategory] = a1;
  *(_QWORD *)&v16[OBJC_IVAR___PGMusicCurationFeatures_memorySubcategory] = a2;
  *(_QWORD *)&v16[OBJC_IVAR___PGMusicCurationFeatures_curatorEvents] = a3;
  v24 = &v16[OBJC_IVAR___PGMusicCurationFeatures_eventCollectionDuration];
  *(_QWORD *)v24 = a4;
  v24[8] = a5 & 1;
  *(_QWORD *)&v16[OBJC_IVAR___PGMusicCurationFeatures_eventRatioByLanguageCode] = a6;
  v25 = &v16[OBJC_IVAR___PGMusicCurationFeatures_mostFrequentMeaningLabel];
  *v25 = a7;
  v25[1] = a8;
  *(_QWORD *)&v16[OBJC_IVAR___PGMusicCurationFeatures_performerIdentifiers] = a9;
  *(_QWORD *)&v16[OBJC_IVAR___PGMusicCurationFeatures_inferredUserLanguageCodes] = a10;
  *(_QWORD *)&v16[OBJC_IVAR___PGMusicCurationFeatures_maestroSongScoresBySongID] = a11;
  *(_QWORD *)&v16[OBJC_IVAR___PGMusicCurationFeatures_scoreByAssetCollectionMaestroKeyword] = a12;
  *(_QWORD *)&v16[OBJC_IVAR___PGMusicCurationFeatures_consistentHash] = a13;
  v26 = &v16[OBJC_IVAR___PGMusicCurationFeatures_location];
  *v26 = a14;
  v26[1] = a15;
  v16[OBJC_IVAR___PGMusicCurationFeatures_shouldAvoidColorGrading] = a16;
  v30.receiver = v16;
  v30.super_class = ObjectType;
  return objc_msgSendSuper2(&v30, sel_init);
}

uint64_t MusicCurationFeatures.description.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  float i;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  id v19;

  v1 = v0;
  v2 = *(_QWORD *)(v0 + OBJC_IVAR___PGMusicCurationFeatures_maestroSongScoresBySongID);
  v3 = *(_QWORD *)(v2 + 16);
  v4 = swift_bridgeObjectRetain();
  sub_1CA2A0138(v4);
  swift_bridgeObjectRelease();
  v5 = swift_bridgeObjectRetain();
  sub_1CA2A0AC4(v5);
  result = swift_bridgeObjectRelease();
  if (!v3)
  {
LABEL_26:
    sub_1CA85BEC4();
    sub_1CA85B624();
    v19 = objc_msgSend((id)objc_opt_self(), sel_stringForCategory_, *(_QWORD *)(v1 + OBJC_IVAR___PGMusicCurationFeatures_memoryCategory));
    sub_1CA85B534();

    sub_1CA85B624();
    swift_bridgeObjectRelease();
    sub_1CA85B624();
    sub_1CA85C260();
    sub_1CA85B624();
    swift_bridgeObjectRelease();
    sub_1CA85B624();
    sub_1CA85B93C();
    sub_1CA85B624();
    if (!*(_QWORD *)(v1 + OBJC_IVAR___PGMusicCurationFeatures_eventRatioByLanguageCode))
      sub_1CA274320(MEMORY[0x1E0DEE9D8]);
    swift_bridgeObjectRetain();
    sub_1CA85B420();
    sub_1CA85B624();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1CA85B624();
    swift_bridgeObjectRetain();
    sub_1CA85B624();
    swift_bridgeObjectRelease();
    sub_1CA85B624();
    swift_bridgeObjectRetain();
    sub_1CA85B990();
    sub_1CA85B624();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1CA85B624();
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED873160);
    sub_1CA2A0CD4();
    sub_1CA281DC0();
    sub_1CA85B744();
    swift_bridgeObjectRelease();
    sub_1CA85B624();
    swift_bridgeObjectRelease();
    sub_1CA85B624();
    swift_bridgeObjectRetain();
    sub_1CA85B420();
    sub_1CA85B624();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1CA85B624();
    sub_1CA85C260();
    sub_1CA85B624();
    swift_bridgeObjectRelease();
    sub_1CA85B624();
    sub_1CA85B960();
    sub_1CA85B624();
    sub_1CA85B960();
    sub_1CA85B624();
    sub_1CA85B960();
    sub_1CA85B624();
    sub_1CA85C260();
    sub_1CA85B624();
    swift_bridgeObjectRelease();
    sub_1CA85B624();
    swift_bridgeObjectRetain();
    sub_1CA85B624();
    swift_bridgeObjectRelease();
    sub_1CA85B624();
    sub_1CA85B624();
    swift_bridgeObjectRelease();
    return 0;
  }
  v7 = 0;
  v8 = v2 + 64;
  v9 = 1 << *(_BYTE *)(v2 + 32);
  v10 = -1;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  v11 = v10 & *(_QWORD *)(v2 + 64);
  v12 = (unint64_t)(v9 + 63) >> 6;
  for (i = 0.0; ; i = i + *(float *)(*(_QWORD *)(v2 + 56) + 4 * v15))
  {
    if (v11)
    {
      v14 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v15 = v14 | (v7 << 6);
      continue;
    }
    v16 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v12)
      goto LABEL_26;
    v17 = *(_QWORD *)(v8 + 8 * v16);
    ++v7;
    if (!v17)
    {
      v7 = v16 + 1;
      if (v16 + 1 >= v12)
        goto LABEL_26;
      v17 = *(_QWORD *)(v8 + 8 * v7);
      if (!v17)
      {
        v7 = v16 + 2;
        if (v16 + 2 >= v12)
          goto LABEL_26;
        v17 = *(_QWORD *)(v8 + 8 * v7);
        if (!v17)
        {
          v7 = v16 + 3;
          if (v16 + 3 >= v12)
            goto LABEL_26;
          v17 = *(_QWORD *)(v8 + 8 * v7);
          if (!v17)
          {
            v7 = v16 + 4;
            if (v16 + 4 >= v12)
              goto LABEL_26;
            v17 = *(_QWORD *)(v8 + 8 * v7);
            if (!v17)
              break;
          }
        }
      }
    }
LABEL_25:
    v11 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v7 << 6);
  }
  v18 = v16 + 5;
  if (v18 >= v12)
    goto LABEL_26;
  v17 = *(_QWORD *)(v8 + 8 * v18);
  if (v17)
  {
    v7 = v18;
    goto LABEL_25;
  }
  while (1)
  {
    v7 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v7 >= v12)
      goto LABEL_26;
    v17 = *(_QWORD *)(v8 + 8 * v7);
    ++v18;
    if (v17)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1CA29FE70@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t, uint64_t, uint64_t);
  void (*v19)(char *, char *, uint64_t);
  uint64_t v20;
  void (*v21)(char *, unint64_t, uint64_t);
  char *v22;
  char *v23;
  uint64_t v24;
  unint64_t v26;
  char v27;
  void (*v28)(char *, uint64_t);
  char *v29;
  unint64_t v30;
  uint64_t v31;
  void (*v32)(char *, unint64_t, uint64_t);
  uint64_t v33;
  unsigned int (*v34)(char *, uint64_t, uint64_t);

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8711C0);
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v29 - v8;
  v10 = sub_1CA85A5B0();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v29 - v15;
  v17 = *(_QWORD *)(a1 + 16);
  if (!v17)
  {
    v18 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
    v18(v9, 1, 1, v10);
    goto LABEL_7;
  }
  v30 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v32 = *(void (**)(char *, unint64_t, uint64_t))(v11 + 16);
  v32(v9, a1 + v30, v10);
  v18 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
  v18(v9, 0, 1, v10);
  v34 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  if (v34(v9, 1, v10) == 1)
  {
LABEL_7:
    sub_1CA29DFF0((uint64_t)v9);
    v23 = a2;
    v24 = 1;
    return ((uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))v18)(v23, v24, 1, v10);
  }
  v29 = a2;
  v19 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
  v19(v16, v9, v10);
  v31 = a1;
  swift_bridgeObjectRetain();
  v20 = v17 - 1;
  v21 = v32;
  if (v20)
  {
    v33 = *(_QWORD *)(v11 + 72);
    v26 = v31 + v33 + v30;
    while (1)
    {
      v21(v7, v26, v10);
      v18(v7, 0, 1, v10);
      if (v34(v7, 1, v10) == 1)
        break;
      v19(v14, v7, v10);
      sub_1CA2A13E0();
      v27 = sub_1CA85B4E0();
      v28 = *(void (**)(char *, uint64_t))(v11 + 8);
      if ((v27 & 1) != 0)
      {
        v28(v16, v10);
        v19(v16, v14, v10);
      }
      else
      {
        v28(v14, v10);
      }
      v26 += v33;
      if (!--v20)
        goto LABEL_4;
    }
  }
  else
  {
LABEL_4:
    v18(v7, 1, 1, v10);
  }
  swift_bridgeObjectRelease();
  sub_1CA29DFF0((uint64_t)v7);
  v22 = v29;
  v19(v29, v16, v10);
  v23 = v22;
  v24 = 0;
  return ((uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))v18)(v23, v24, 1, v10);
}

unint64_t sub_1CA2A0138(uint64_t a1)
{
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  float v11;
  unint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  unsigned __int8 v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v1 = a1 + 64;
  v2 = *(_BYTE *)(a1 + 32);
  v3 = 1 << v2;
  v4 = -1;
  if (1 << v2 < 64)
    v4 = ~(-1 << (1 << v2));
  v5 = v4 & *(_QWORD *)(a1 + 64);
  if (v5)
  {
    v6 = 0;
    v7 = __clz(__rbit64(v5));
    v8 = (v5 - 1) & v5;
    v9 = (unint64_t)(v3 + 63) >> 6;
  }
  else
  {
    LODWORD(v6) = v2 & 0x3F;
    if (v6 <= 6)
      goto LABEL_49;
    v9 = (unint64_t)(v3 + 63) >> 6;
    v19 = *(_QWORD *)(a1 + 72);
    if (v19)
    {
      v6 = 1;
    }
    else
    {
      if (v6 < 8)
        goto LABEL_49;
      v19 = *(_QWORD *)(a1 + 80);
      if (v19)
      {
        v6 = 2;
      }
      else
      {
        v19 = *(_QWORD *)(a1 + 88);
        if (v19)
        {
          v6 = 3;
        }
        else
        {
LABEL_37:
          if (v6 < 9)
            goto LABEL_49;
          v19 = *(_QWORD *)(a1 + 96);
          if (v19)
          {
            v6 = 4;
          }
          else
          {
            v19 = *(_QWORD *)(a1 + 104);
            if (!v19)
              goto LABEL_43;
            v6 = 5;
          }
        }
      }
    }
LABEL_30:
    v8 = (v19 - 1) & v19;
    v7 = __clz(__rbit64(v19)) + (v6 << 6);
  }
  v10 = *(_QWORD *)(a1 + 56);
  v11 = *(float *)(v10 + 4 * v7);
  while (v8)
  {
    v12 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    v13 = v12 | (v6 << 6);
LABEL_7:
    if (*(float *)(v10 + 4 * v13) < v11)
      v11 = *(float *)(v10 + 4 * v13);
  }
  v14 = v6 + 1;
  if (__OFADD__(v6, 1))
  {
    __break(1u);
    goto LABEL_37;
  }
  if (v14 >= v9)
    goto LABEL_26;
  v15 = *(_QWORD *)(v1 + 8 * v14);
  ++v6;
  if (v15)
    goto LABEL_25;
  v6 = v14 + 1;
  if (v14 + 1 >= v9)
    goto LABEL_26;
  v15 = *(_QWORD *)(v1 + 8 * v6);
  if (v15)
    goto LABEL_25;
  v6 = v14 + 2;
  if (v14 + 2 >= v9)
    goto LABEL_26;
  v15 = *(_QWORD *)(v1 + 8 * v6);
  if (v15)
    goto LABEL_25;
  v6 = v14 + 3;
  if (v14 + 3 >= v9)
    goto LABEL_26;
  v15 = *(_QWORD *)(v1 + 8 * v6);
  if (v15)
  {
LABEL_25:
    v8 = (v15 - 1) & v15;
    v13 = __clz(__rbit64(v15)) + (v6 << 6);
    goto LABEL_7;
  }
  v16 = v14 + 4;
  if (v16 >= v9)
  {
LABEL_26:
    v17 = 0;
    v18 = LODWORD(v11);
    return v18 | ((unint64_t)v17 << 32);
  }
  v15 = *(_QWORD *)(v1 + 8 * v16);
  if (v15)
  {
    v6 = v16;
    goto LABEL_25;
  }
  while (1)
  {
    v6 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v6 >= v9)
      goto LABEL_26;
    v15 = *(_QWORD *)(v1 + 8 * v6);
    ++v16;
    if (v15)
      goto LABEL_25;
  }
  __break(1u);
LABEL_43:
  v20 = 0;
  v21 = 6;
  if (v9 > 6)
    v21 = v9;
  v22 = v21 - 6;
  while (v22 != v20)
  {
    v19 = *(_QWORD *)(a1 + 112 + 8 * v20++);
    if (v19)
    {
      v6 = v20 + 5;
      goto LABEL_30;
    }
  }
LABEL_49:
  v18 = 0;
  v17 = 1;
  return v18 | ((unint64_t)v17 << 32);
}

uint64_t sub_1CA2A0348@<X0>(uint64_t a1@<X0>, void (*a2)(_QWORD, _QWORD, _QWORD)@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  void (*v28)(char *, uint64_t, uint64_t, uint64_t, __n128);
  uint64_t result;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  char v35;
  void (*v36)(char *, uint64_t);
  unsigned int v37;
  unint64_t v38;
  void (*v39)(_QWORD, _QWORD, _QWORD);
  void (*v40)(_QWORD, _QWORD, _QWORD);
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  void (*v45)(_QWORD, _QWORD, _QWORD);
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  void (*v50)(char *, unint64_t, uint64_t, __n128);
  uint64_t v51;
  void (*v52)(char *, uint64_t, uint64_t, uint64_t, __n128);

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8711C0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v45 - v8;
  v10 = sub_1CA85A5B0();
  v11 = *(_QWORD **)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v45 - v16;
  v18 = *(_QWORD *)(a1 + 56);
  v48 = a1 + 56;
  v19 = *(_BYTE *)(a1 + 32);
  v20 = 1 << v19;
  v21 = -1;
  if (1 << v19 < 64)
    v21 = ~(-1 << (1 << v19));
  v22 = v21 & v18;
  if (!v22)
  {
    v37 = v19 & 0x3F;
    if (v37 > 6)
    {
      v38 = *(_QWORD *)(a1 + 64);
      if (v38)
      {
        v47 = v20;
        v23 = 1;
        goto LABEL_34;
      }
      if (v37 >= 8)
      {
        v38 = *(_QWORD *)(a1 + 72);
        v47 = v20;
        if (v38)
        {
          v23 = 2;
          goto LABEL_34;
        }
        v38 = *(_QWORD *)(a1 + 80);
        if (v38)
        {
          v23 = 3;
          goto LABEL_34;
        }
        if (v37 >= 9)
        {
          v38 = *(_QWORD *)(a1 + 88);
          if (!v38)
            goto LABEL_47;
          v23 = 4;
          goto LABEL_34;
        }
      }
    }
LABEL_55:
    v28 = (void (*)(char *, uint64_t, uint64_t, uint64_t, __n128))v11[7];
    v28(v9, 1, 1, v10, v15);
    goto LABEL_56;
  }
  v47 = 1 << v19;
  v23 = 0;
  v24 = __clz(__rbit64(v22));
  v25 = (v22 - 1) & v22;
  while (1)
  {
    v26 = v11[9];
    v27 = *(_QWORD *)(a1 + 48) + v26 * v24;
    v46 = (_QWORD *)a1;
    v50 = (void (*)(char *, unint64_t, uint64_t, __n128))v11[2];
    v51 = v26;
    v50(v9, v27, v10, v15);
    v52 = (void (*)(char *, uint64_t, uint64_t, uint64_t, __n128))v11[7];
    ((void (*)(char *, _QWORD, uint64_t, uint64_t))v52)(v9, 0, 1, v10);
    a1 = v11[6];
    if (((unsigned int (*)(char *, uint64_t, uint64_t))a1)(v9, 1, v10) == 1)
    {
      v28 = v52;
LABEL_56:
      sub_1CA29DFF0((uint64_t)v9);
      v40 = a2;
      v41 = 1;
      return ((uint64_t (*)(void (*)(_QWORD, _QWORD, _QWORD), uint64_t, uint64_t, uint64_t))v28)(v40, v41, 1, v10);
    }
    v45 = a2;
    v49 = v11;
    a2 = (void (*)(_QWORD, _QWORD, _QWORD))v11[4];
    a2(v17, v9, v10);
    v9 = (char *)((unint64_t)(v47 + 63) >> 6);
    v11 = v46;
    result = swift_bridgeObjectRetain();
    if (v25)
    {
      while (1)
      {
        v30 = __clz(__rbit64(v25));
        v25 &= v25 - 1;
        v31 = v30 | (v23 << 6);
LABEL_27:
        ((void (*)(char *, unint64_t, uint64_t))v50)(v6, v11[6] + v31 * v51, v10);
        ((void (*)(char *, _QWORD, uint64_t, uint64_t))v52)(v6, 0, 1, v10);
        if (((unsigned int (*)(char *, uint64_t, uint64_t))a1)(v6, 1, v10) == 1)
          break;
        a2(v13, v6, v10);
        sub_1CA2A13E0();
        v35 = sub_1CA85B4E0();
        v36 = (void (*)(char *, uint64_t))v49[1];
        if ((v35 & 1) != 0)
        {
          v36(v17, v10);
          result = ((uint64_t (*)(char *, char *, uint64_t))a2)(v17, v13, v10);
          if (!v25)
            goto LABEL_11;
        }
        else
        {
          result = ((uint64_t (*)(char *, uint64_t))v36)(v13, v10);
          if (!v25)
            goto LABEL_11;
        }
      }
      swift_release();
      v28 = v52;
      goto LABEL_37;
    }
LABEL_11:
    v32 = v23 + 1;
    if (!__OFADD__(v23, 1))
      break;
    __break(1u);
LABEL_47:
    v38 = *(_QWORD *)(a1 + 96);
    if (v38)
    {
      v23 = 5;
    }
    else
    {
      v42 = 0;
      v43 = (unint64_t)(v20 + 63) >> 6;
      if (v43 <= 6)
        v43 = 6;
      v44 = v43 - 6;
      do
      {
        if (v44 == v42)
          goto LABEL_55;
        v38 = *(_QWORD *)(a1 + 104 + 8 * v42++);
      }
      while (!v38);
      v23 = v42 + 5;
    }
LABEL_34:
    v25 = (v38 - 1) & v38;
    v24 = __clz(__rbit64(v38)) + (v23 << 6);
  }
  if (v32 >= (uint64_t)v9)
    goto LABEL_36;
  v33 = *(_QWORD *)(v48 + 8 * v32);
  ++v23;
  if (v33)
  {
LABEL_26:
    v25 = (v33 - 1) & v33;
    v31 = __clz(__rbit64(v33)) + (v23 << 6);
    goto LABEL_27;
  }
  v23 = v32 + 1;
  if (v32 + 1 >= (uint64_t)v9)
  {
LABEL_36:
    v28 = v52;
    ((void (*)(char *, uint64_t, uint64_t, uint64_t))v52)(v6, 1, 1, v10);
    swift_release();
LABEL_37:
    sub_1CA29DFF0((uint64_t)v6);
    v39 = v45;
    a2(v45, v17, v10);
    v40 = v39;
    v41 = 0;
    return ((uint64_t (*)(void (*)(_QWORD, _QWORD, _QWORD), uint64_t, uint64_t, uint64_t))v28)(v40, v41, 1, v10);
  }
  v33 = *(_QWORD *)(v48 + 8 * v23);
  if (v33)
    goto LABEL_26;
  v23 = v32 + 2;
  if (v32 + 2 >= (uint64_t)v9)
    goto LABEL_36;
  v33 = *(_QWORD *)(v48 + 8 * v23);
  if (v33)
    goto LABEL_26;
  v23 = v32 + 3;
  if (v32 + 3 >= (uint64_t)v9)
    goto LABEL_36;
  v33 = *(_QWORD *)(v48 + 8 * v23);
  if (v33)
    goto LABEL_26;
  v34 = v32 + 4;
  if (v34 >= (uint64_t)v9)
    goto LABEL_36;
  v33 = *(_QWORD *)(v48 + 8 * v34);
  if (v33)
  {
    v23 = v34;
    goto LABEL_26;
  }
  while (1)
  {
    v23 = v34 + 1;
    if (__OFADD__(v34, 1))
      break;
    if (v23 >= (uint64_t)v9)
      goto LABEL_36;
    v33 = *(_QWORD *)(v48 + 8 * v23);
    ++v34;
    if (v33)
      goto LABEL_26;
  }
  __break(1u);
  return result;
}

uint64_t sub_1CA2A07FC@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t, uint64_t, uint64_t);
  void (*v19)(char *, char *, uint64_t);
  uint64_t v20;
  void (*v21)(char *, unint64_t, uint64_t);
  char *v22;
  char *v23;
  uint64_t v24;
  unint64_t v26;
  char v27;
  void (*v28)(char *, uint64_t);
  char *v29;
  unint64_t v30;
  uint64_t v31;
  void (*v32)(char *, unint64_t, uint64_t);
  uint64_t v33;
  unsigned int (*v34)(char *, uint64_t, uint64_t);

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8711C0);
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v29 - v8;
  v10 = sub_1CA85A5B0();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v29 - v15;
  v17 = *(_QWORD *)(a1 + 16);
  if (!v17)
  {
    v18 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
    v18(v9, 1, 1, v10);
    goto LABEL_7;
  }
  v30 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v32 = *(void (**)(char *, unint64_t, uint64_t))(v11 + 16);
  v32(v9, a1 + v30, v10);
  v18 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
  v18(v9, 0, 1, v10);
  v34 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  if (v34(v9, 1, v10) == 1)
  {
LABEL_7:
    sub_1CA29DFF0((uint64_t)v9);
    v23 = a2;
    v24 = 1;
    return ((uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))v18)(v23, v24, 1, v10);
  }
  v29 = a2;
  v19 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
  v19(v16, v9, v10);
  v31 = a1;
  swift_bridgeObjectRetain();
  v20 = v17 - 1;
  v21 = v32;
  if (v20)
  {
    v33 = *(_QWORD *)(v11 + 72);
    v26 = v31 + v33 + v30;
    while (1)
    {
      v21(v7, v26, v10);
      v18(v7, 0, 1, v10);
      if (v34(v7, 1, v10) == 1)
        break;
      v19(v14, v7, v10);
      sub_1CA2A13E0();
      v27 = sub_1CA85B4E0();
      v28 = *(void (**)(char *, uint64_t))(v11 + 8);
      if ((v27 & 1) != 0)
      {
        v28(v16, v10);
        v19(v16, v14, v10);
      }
      else
      {
        v28(v14, v10);
      }
      v26 += v33;
      if (!--v20)
        goto LABEL_4;
    }
  }
  else
  {
LABEL_4:
    v18(v7, 1, 1, v10);
  }
  swift_bridgeObjectRelease();
  sub_1CA29DFF0((uint64_t)v7);
  v22 = v29;
  v19(v29, v16, v10);
  v23 = v22;
  v24 = 0;
  return ((uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))v18)(v23, v24, 1, v10);
}

unint64_t sub_1CA2A0AC4(uint64_t a1)
{
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  float v11;
  unint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  unsigned __int8 v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v1 = a1 + 64;
  v2 = *(_BYTE *)(a1 + 32);
  v3 = 1 << v2;
  v4 = -1;
  if (1 << v2 < 64)
    v4 = ~(-1 << (1 << v2));
  v5 = v4 & *(_QWORD *)(a1 + 64);
  if (v5)
  {
    v6 = 0;
    v7 = __clz(__rbit64(v5));
    v8 = (v5 - 1) & v5;
    v9 = (unint64_t)(v3 + 63) >> 6;
  }
  else
  {
    LODWORD(v6) = v2 & 0x3F;
    if (v6 <= 6)
      goto LABEL_49;
    v9 = (unint64_t)(v3 + 63) >> 6;
    v19 = *(_QWORD *)(a1 + 72);
    if (v19)
    {
      v6 = 1;
    }
    else
    {
      if (v6 < 8)
        goto LABEL_49;
      v19 = *(_QWORD *)(a1 + 80);
      if (v19)
      {
        v6 = 2;
      }
      else
      {
        v19 = *(_QWORD *)(a1 + 88);
        if (v19)
        {
          v6 = 3;
        }
        else
        {
LABEL_37:
          if (v6 < 9)
            goto LABEL_49;
          v19 = *(_QWORD *)(a1 + 96);
          if (v19)
          {
            v6 = 4;
          }
          else
          {
            v19 = *(_QWORD *)(a1 + 104);
            if (!v19)
              goto LABEL_43;
            v6 = 5;
          }
        }
      }
    }
LABEL_30:
    v8 = (v19 - 1) & v19;
    v7 = __clz(__rbit64(v19)) + (v6 << 6);
  }
  v10 = *(_QWORD *)(a1 + 56);
  v11 = *(float *)(v10 + 4 * v7);
  while (v8)
  {
    v12 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    v13 = v12 | (v6 << 6);
LABEL_7:
    if (v11 < *(float *)(v10 + 4 * v13))
      v11 = *(float *)(v10 + 4 * v13);
  }
  v14 = v6 + 1;
  if (__OFADD__(v6, 1))
  {
    __break(1u);
    goto LABEL_37;
  }
  if (v14 >= v9)
    goto LABEL_26;
  v15 = *(_QWORD *)(v1 + 8 * v14);
  ++v6;
  if (v15)
    goto LABEL_25;
  v6 = v14 + 1;
  if (v14 + 1 >= v9)
    goto LABEL_26;
  v15 = *(_QWORD *)(v1 + 8 * v6);
  if (v15)
    goto LABEL_25;
  v6 = v14 + 2;
  if (v14 + 2 >= v9)
    goto LABEL_26;
  v15 = *(_QWORD *)(v1 + 8 * v6);
  if (v15)
    goto LABEL_25;
  v6 = v14 + 3;
  if (v14 + 3 >= v9)
    goto LABEL_26;
  v15 = *(_QWORD *)(v1 + 8 * v6);
  if (v15)
  {
LABEL_25:
    v8 = (v15 - 1) & v15;
    v13 = __clz(__rbit64(v15)) + (v6 << 6);
    goto LABEL_7;
  }
  v16 = v14 + 4;
  if (v16 >= v9)
  {
LABEL_26:
    v17 = 0;
    v18 = LODWORD(v11);
    return v18 | ((unint64_t)v17 << 32);
  }
  v15 = *(_QWORD *)(v1 + 8 * v16);
  if (v15)
  {
    v6 = v16;
    goto LABEL_25;
  }
  while (1)
  {
    v6 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v6 >= v9)
      goto LABEL_26;
    v15 = *(_QWORD *)(v1 + 8 * v6);
    ++v16;
    if (v15)
      goto LABEL_25;
  }
  __break(1u);
LABEL_43:
  v20 = 0;
  v21 = 6;
  if (v9 > 6)
    v21 = v9;
  v22 = v21 - 6;
  while (v22 != v20)
  {
    v19 = *(_QWORD *)(a1 + 112 + 8 * v20++);
    if (v19)
    {
      v6 = v20 + 5;
      goto LABEL_30;
    }
  }
LABEL_49:
  v18 = 0;
  v17 = 1;
  return v18 | ((unint64_t)v17 << 32);
}

unint64_t sub_1CA2A0CD4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED873168;
  if (!qword_1ED873168)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED873160);
    result = MEMORY[0x1CAA4F1A4](MEMORY[0x1E0DEB3D0], v1);
    atomic_store(result, (unint64_t *)&qword_1ED873168);
  }
  return result;
}

uint64_t sub_1CA2A0D20@<X0>(uint64_t a1@<X0>, void (*a2)(_QWORD, _QWORD, _QWORD)@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  void (*v28)(char *, uint64_t, uint64_t, uint64_t, __n128);
  uint64_t result;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  char v35;
  void (*v36)(char *, uint64_t);
  unsigned int v37;
  unint64_t v38;
  void (*v39)(_QWORD, _QWORD, _QWORD);
  void (*v40)(_QWORD, _QWORD, _QWORD);
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  void (*v45)(_QWORD, _QWORD, _QWORD);
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  void (*v50)(char *, unint64_t, uint64_t, __n128);
  uint64_t v51;
  void (*v52)(char *, uint64_t, uint64_t, uint64_t, __n128);

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8711C0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v45 - v8;
  v10 = sub_1CA85A5B0();
  v11 = *(_QWORD **)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v45 - v16;
  v18 = *(_QWORD *)(a1 + 56);
  v48 = a1 + 56;
  v19 = *(_BYTE *)(a1 + 32);
  v20 = 1 << v19;
  v21 = -1;
  if (1 << v19 < 64)
    v21 = ~(-1 << (1 << v19));
  v22 = v21 & v18;
  if (!v22)
  {
    v37 = v19 & 0x3F;
    if (v37 > 6)
    {
      v38 = *(_QWORD *)(a1 + 64);
      if (v38)
      {
        v47 = v20;
        v23 = 1;
        goto LABEL_34;
      }
      if (v37 >= 8)
      {
        v38 = *(_QWORD *)(a1 + 72);
        v47 = v20;
        if (v38)
        {
          v23 = 2;
          goto LABEL_34;
        }
        v38 = *(_QWORD *)(a1 + 80);
        if (v38)
        {
          v23 = 3;
          goto LABEL_34;
        }
        if (v37 >= 9)
        {
          v38 = *(_QWORD *)(a1 + 88);
          if (!v38)
            goto LABEL_47;
          v23 = 4;
          goto LABEL_34;
        }
      }
    }
LABEL_55:
    v28 = (void (*)(char *, uint64_t, uint64_t, uint64_t, __n128))v11[7];
    v28(v9, 1, 1, v10, v15);
    goto LABEL_56;
  }
  v47 = 1 << v19;
  v23 = 0;
  v24 = __clz(__rbit64(v22));
  v25 = (v22 - 1) & v22;
  while (1)
  {
    v26 = v11[9];
    v27 = *(_QWORD *)(a1 + 48) + v26 * v24;
    v46 = (_QWORD *)a1;
    v50 = (void (*)(char *, unint64_t, uint64_t, __n128))v11[2];
    v51 = v26;
    v50(v9, v27, v10, v15);
    v52 = (void (*)(char *, uint64_t, uint64_t, uint64_t, __n128))v11[7];
    ((void (*)(char *, _QWORD, uint64_t, uint64_t))v52)(v9, 0, 1, v10);
    a1 = v11[6];
    if (((unsigned int (*)(char *, uint64_t, uint64_t))a1)(v9, 1, v10) == 1)
    {
      v28 = v52;
LABEL_56:
      sub_1CA29DFF0((uint64_t)v9);
      v40 = a2;
      v41 = 1;
      return ((uint64_t (*)(void (*)(_QWORD, _QWORD, _QWORD), uint64_t, uint64_t, uint64_t))v28)(v40, v41, 1, v10);
    }
    v45 = a2;
    v49 = v11;
    a2 = (void (*)(_QWORD, _QWORD, _QWORD))v11[4];
    a2(v17, v9, v10);
    v9 = (char *)((unint64_t)(v47 + 63) >> 6);
    v11 = v46;
    result = swift_bridgeObjectRetain();
    if (v25)
    {
      while (1)
      {
        v30 = __clz(__rbit64(v25));
        v25 &= v25 - 1;
        v31 = v30 | (v23 << 6);
LABEL_27:
        ((void (*)(char *, unint64_t, uint64_t))v50)(v6, v11[6] + v31 * v51, v10);
        ((void (*)(char *, _QWORD, uint64_t, uint64_t))v52)(v6, 0, 1, v10);
        if (((unsigned int (*)(char *, uint64_t, uint64_t))a1)(v6, 1, v10) == 1)
          break;
        a2(v13, v6, v10);
        sub_1CA2A13E0();
        v35 = sub_1CA85B4E0();
        v36 = (void (*)(char *, uint64_t))v49[1];
        if ((v35 & 1) != 0)
        {
          v36(v17, v10);
          result = ((uint64_t (*)(char *, char *, uint64_t))a2)(v17, v13, v10);
          if (!v25)
            goto LABEL_11;
        }
        else
        {
          result = ((uint64_t (*)(char *, uint64_t))v36)(v13, v10);
          if (!v25)
            goto LABEL_11;
        }
      }
      swift_release();
      v28 = v52;
      goto LABEL_37;
    }
LABEL_11:
    v32 = v23 + 1;
    if (!__OFADD__(v23, 1))
      break;
    __break(1u);
LABEL_47:
    v38 = *(_QWORD *)(a1 + 96);
    if (v38)
    {
      v23 = 5;
    }
    else
    {
      v42 = 0;
      v43 = (unint64_t)(v20 + 63) >> 6;
      if (v43 <= 6)
        v43 = 6;
      v44 = v43 - 6;
      do
      {
        if (v44 == v42)
          goto LABEL_55;
        v38 = *(_QWORD *)(a1 + 104 + 8 * v42++);
      }
      while (!v38);
      v23 = v42 + 5;
    }
LABEL_34:
    v25 = (v38 - 1) & v38;
    v24 = __clz(__rbit64(v38)) + (v23 << 6);
  }
  if (v32 >= (uint64_t)v9)
    goto LABEL_36;
  v33 = *(_QWORD *)(v48 + 8 * v32);
  ++v23;
  if (v33)
  {
LABEL_26:
    v25 = (v33 - 1) & v33;
    v31 = __clz(__rbit64(v33)) + (v23 << 6);
    goto LABEL_27;
  }
  v23 = v32 + 1;
  if (v32 + 1 >= (uint64_t)v9)
  {
LABEL_36:
    v28 = v52;
    ((void (*)(char *, uint64_t, uint64_t, uint64_t))v52)(v6, 1, 1, v10);
    swift_release();
LABEL_37:
    sub_1CA29DFF0((uint64_t)v6);
    v39 = v45;
    a2(v45, v17, v10);
    v40 = v39;
    v41 = 0;
    return ((uint64_t (*)(void (*)(_QWORD, _QWORD, _QWORD), uint64_t, uint64_t, uint64_t))v28)(v40, v41, 1, v10);
  }
  v33 = *(_QWORD *)(v48 + 8 * v23);
  if (v33)
    goto LABEL_26;
  v23 = v32 + 2;
  if (v32 + 2 >= (uint64_t)v9)
    goto LABEL_36;
  v33 = *(_QWORD *)(v48 + 8 * v23);
  if (v33)
    goto LABEL_26;
  v23 = v32 + 3;
  if (v32 + 3 >= (uint64_t)v9)
    goto LABEL_36;
  v33 = *(_QWORD *)(v48 + 8 * v23);
  if (v33)
    goto LABEL_26;
  v34 = v32 + 4;
  if (v34 >= (uint64_t)v9)
    goto LABEL_36;
  v33 = *(_QWORD *)(v48 + 8 * v34);
  if (v33)
  {
    v23 = v34;
    goto LABEL_26;
  }
  while (1)
  {
    v23 = v34 + 1;
    if (__OFADD__(v34, 1))
      break;
    if (v23 >= (uint64_t)v9)
      goto LABEL_36;
    v33 = *(_QWORD *)(v48 + 8 * v23);
    ++v34;
    if (v33)
      goto LABEL_26;
  }
  __break(1u);
  return result;
}

Swift::Bool __swiftcall MusicCurationFeatures.isConcertMemoryWithPerformers()()
{
  uint64_t v0;
  uint64_t v1;

  return ((*(_QWORD *)(v0 + OBJC_IVAR___PGMusicCurationFeatures_memoryCategory) & 0xFFFFFFFFFFFFFFFELL) == 0x10
       || (unint64_t)(*(_QWORD *)(v0 + OBJC_IVAR___PGMusicCurationFeatures_memorySubcategory) - 213) <= 1)
      && (v1 = *(_QWORD *)(v0 + OBJC_IVAR___PGMusicCurationFeatures_performerIdentifiers)) != 0
      && *(_QWORD *)(v1 + 16) != 0;
}

id MusicCurationFeatures.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void MusicCurationFeatures.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id MusicCurationFeatures.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for MusicCurationFeatures()
{
  return objc_opt_self();
}

uint64_t method lookup function for MusicCurationFeatures()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MusicCurationFeatures.__allocating_init(memoryCategory:memorySubcategory:curatorEvents:eventCollectionDuration:eventRatioByLanguageCode:mostFrequentMeaningLabel:performerIdentifiers:inferredUserLanguageCodes:maestroSongScoresBySongID:scoreByAssetCollectionMaestroKeyword:consistentHash:location:shouldAvoidColorGrading:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v5;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))(v5 + 184))(a1, a2, a3, a4, a5 & 1);
}

unint64_t sub_1CA2A13E0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED8711A0;
  if (!qword_1ED8711A0)
  {
    v1 = sub_1CA85A5B0();
    result = MEMORY[0x1CAA4F1A4](MEMORY[0x1E0CB08B0], v1);
    atomic_store(result, (unint64_t *)&qword_1ED8711A0);
  }
  return result;
}

id EventLabelingFeaturesFileCache.__allocating_init(graphServiceURL:featureExtractorsForCaching:)(uint64_t a1, uint64_t *a2)
{
  objc_class *v2;
  id v5;

  v5 = objc_allocWithZone(v2);
  return EventLabelingFeaturesFileCache.init(graphServiceURL:featureExtractorsForCaching:)(a1, a2);
}

id EventLabelingFeaturesFileCache.init(graphServiceURL:featureExtractorsForCaching:)(uint64_t a1, uint64_t *a2)
{
  void *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  __int16 v21;
  __int16 v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  void *v29;
  unsigned __int8 v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  void (*v35)(uint64_t, uint64_t);
  id v36;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  objc_class *ObjectType;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  objc_super v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t v55;

  v47 = a1;
  ObjectType = (objc_class *)swift_getObjectType();
  v42 = sub_1CA85A37C();
  v4 = *(_QWORD *)(v42 - 8);
  MEMORY[0x1E0C80A78](v42);
  v6 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1CA85A424();
  v45 = *(_QWORD *)(v7 - 8);
  v46 = v7;
  v8 = MEMORY[0x1E0C80A78](v7);
  v43 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v42 - v10;
  v12 = sub_1CA85B57C();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = *a2;
  v16 = a2[1];
  v50 = a2[2];
  v51 = v16;
  v49 = a2[3];
  v17 = v2;
  sub_1CA85B570();
  v18 = sub_1CA85B540();
  v20 = v19;
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  if (v20 >> 60 == 15 || (sub_1CA289968(v18, v20), v22 = v21, sub_1CA2A1980(v18, v20), (v22 & 0x100) != 0))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1CA2A193C();
    swift_allocError();
    swift_willThrow();
    (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v47, v46);
    goto LABEL_9;
  }
  v17[OBJC_IVAR___PGEventLabelingFeaturesFileCache_delimiterByte] = v22;
  v53 = 0xD000000000000022;
  v54 = 0x80000001CA88A4C0;
  v23 = v42;
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E0CAFD78], v42);
  sub_1CA281DC0();
  v24 = v47;
  sub_1CA85A418();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v23);
  swift_bridgeObjectRelease();
  v25 = &v17[OBJC_IVAR___PGEventLabelingFeaturesFileCache_cacheFileURL];
  v26 = v45;
  v27 = v46;
  (*(void (**)(_BYTE *, char *, uint64_t))(v45 + 32))(&v17[OBJC_IVAR___PGEventLabelingFeaturesFileCache_cacheFileURL], v11, v46);
  v28 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3620]), sel_init);
  sub_1CA85A400();
  v29 = (void *)sub_1CA85B510();
  swift_bridgeObjectRelease();
  v30 = objc_msgSend(v28, sel_fileExistsAtPath_, v29);

  if ((v30 & 1) == 0)
  {
    sub_1CA85A400();
    v31 = (void *)sub_1CA85B510();
    swift_bridgeObjectRelease();
    objc_msgSend(v28, sel_createFileAtPath_contents_attributes_, v31, 0, 0);

  }
  sub_1CA2A1994();
  v32 = (uint64_t)v43;
  (*(void (**)(char *, char *, uint64_t))(v26 + 16))(v43, v25, v27);
  v33 = v44;
  v34 = sub_1CA2A2ADC(v32, (SEL *)&selRef_fileHandleForWritingToURL_error_);
  if (v33)
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v35 = *(void (**)(uint64_t, uint64_t))(v26 + 8);
    v35(v24, v27);
    v35((uint64_t)v25, v27);
LABEL_9:
    v41 = ObjectType;

    swift_deallocPartialClassInstance();
    return v41;
  }
  *(_QWORD *)&v17[OBJC_IVAR___PGEventLabelingFeaturesFileCache_cacheFile] = v34;
  v36 = v34;
  sub_1CA85BAA4();

  v38 = &v17[OBJC_IVAR___PGEventLabelingFeaturesFileCache_featureExtractorsForCaching];
  v39 = v51;
  *v38 = v55;
  v38[1] = v39;
  v40 = v49;
  v38[2] = v50;
  v38[3] = v40;

  v52.receiver = v17;
  v52.super_class = ObjectType;
  v41 = objc_msgSendSuper2(&v52, sel_init);
  (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v24, v27);
  return v41;
}

unint64_t sub_1CA2A193C()
{
  unint64_t result;

  result = qword_1EF94C460;
  if (!qword_1EF94C460)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8D6348, &type metadata for EventLabelingFeaturesFileCache.Error);
    atomic_store(result, (unint64_t *)&qword_1EF94C460);
  }
  return result;
}

uint64_t sub_1CA2A1980(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_1CA260204(a1, a2);
  return a1;
}

unint64_t sub_1CA2A1994()
{
  unint64_t result;

  result = qword_1EF94C478;
  if (!qword_1EF94C478)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF94C478);
  }
  return result;
}

_QWORD *static EventLabelingFeaturesFileCache.cacheForMomentGraphRebuild(graphServiceURL:graph:)(uint64_t a1, uint64_t a2)
{
  return sub_1CA2A3144(a1, a2);
}

void EventLabelingFeaturesFileCache.writeFeatures(momentNode:assetFetchResult:photoLibrary:progressReporter:)(void *a1, void *a2)
{
  sub_1CA2A35FC(a1, a2);
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> EventLabelingFeaturesFileCache.write(eventFeatures:)(PhotosGraph::CachedEventFeatures eventFeatures)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t countAndFlagsBits;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(char *, uint64_t, uint64_t);
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  void *v15;
  void *v16;
  __int128 v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;

  countAndFlagsBits = eventFeatures.identifier._countAndFlagsBits;
  v20 = *MEMORY[0x1E0C80C00];
  v4 = sub_1CA85A07C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)countAndFlagsBits;
  sub_1CA85A0AC();
  swift_allocObject();
  sub_1CA85A0A0();
  v9 = *MEMORY[0x1E0CAE128];
  v10 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 104);
  v17 = *(_OWORD *)(countAndFlagsBits + 8);
  v10(v7, v9, v4);
  sub_1CA85A088();
  v18 = v8;
  v19 = v17;
  sub_1CA2A3888();
  v11 = sub_1CA85A094();
  if (!v2)
  {
    v13 = v11;
    v14 = v12;
    v15 = *(void **)(v1 + OBJC_IVAR___PGEventLabelingFeaturesFileCache_cacheFile);
    v18 = v11;
    *(_QWORD *)&v19 = v12;
    sub_1CA28B758();
    sub_1CA85BA98();
    v16 = (void *)sub_1CA85A478();
    objc_msgSend(v15, sel_writeData_, v16);

    sub_1CA260204(v13, v14);
  }
  swift_release();
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> EventLabelingFeaturesFileCache.clearCache()()
{
  id v0;
  void *v1;
  unsigned int v2;
  void *v3;
  unsigned int v4;
  id v5;
  id v6;
  id v7[2];

  v7[1] = *(id *)MEMORY[0x1E0C80C00];
  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3620]), sel_init);
  sub_1CA85A400();
  v1 = (void *)sub_1CA85B510();
  swift_bridgeObjectRelease();
  v2 = objc_msgSend(v0, sel_fileExistsAtPath_, v1);

  if (v2)
  {
    v3 = (void *)sub_1CA85A3C4();
    v7[0] = 0;
    v4 = objc_msgSend(v0, sel_removeItemAtURL_error_, v3, v7);

    if (v4)
    {
      v5 = v7[0];
    }
    else
    {
      v6 = v7[0];
      sub_1CA85A364();

      swift_willThrow();
    }
  }

}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> EventLabelingFeaturesFileCache.synchronize()()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  id v4[2];

  v4[1] = *(id *)MEMORY[0x1E0C80C00];
  v1 = *(void **)(v0 + OBJC_IVAR___PGEventLabelingFeaturesFileCache_cacheFile);
  v4[0] = 0;
  if (objc_msgSend(v1, sel_synchronizeAndReturnError_, v4))
  {
    v2 = v4[0];
  }
  else
  {
    v3 = v4[0];
    sub_1CA85A364();

    swift_willThrow();
  }
}

uint64_t EventLabelingFeaturesFileCache.isCacheEmpty(graphServiceURL:)()
{
  id v0;
  void *v1;
  unsigned int v2;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3620]), sel_init);
  sub_1CA85A400();
  v1 = (void *)sub_1CA85B510();
  swift_bridgeObjectRelease();
  v2 = objc_msgSend(v0, sel_fileExistsAtPath_, v1);

  return v2 ^ 1;
}

uint64_t EventLabelingFeaturesFileCache.readFeatures()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  id v15;
  void *v16;
  unint64_t v17;
  __int128 v19;
  __int128 v20;
  id v21;
  __int128 v22;

  v1 = v0;
  v2 = sub_1CA85A424();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v20 - v7;
  v9 = sub_1CA85A028();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1CA85A070();
  swift_allocObject();
  sub_1CA85A064();
  (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v12, *MEMORY[0x1E0CAE018], v9);
  sub_1CA85A040();
  v13 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  v13(v8, v0 + OBJC_IVAR___PGEventLabelingFeaturesFileCache_cacheFileURL, v2);
  sub_1CA2A1994();
  v13(v5, (uint64_t)v8, v2);
  v14 = v20;
  v15 = sub_1CA2A2ADC((uint64_t)v5, (SEL *)&selRef_fileHandleForReadingFromURL_error_);
  if (v14)
  {
    (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
    swift_release();
  }
  else
  {
    v16 = v15;
    (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
    v21 = v16;
    v22 = xmmword_1CA8D6270;
    sub_1CA2A2584(*(unsigned __int8 *)(v1 + OBJC_IVAR___PGEventLabelingFeaturesFileCache_delimiterByte));
    v1 = MEMORY[0x1E0DEE9D8];
    if (v17 >> 60 != 15)
      __asm { BR              X9 }
    v19 = v22;

    sub_1CA260204(v19, *((unint64_t *)&v19 + 1));
    swift_release();
  }
  return v1;
}

uint64_t sub_1CA2A2584(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  unint64_t v6;
  char v7;
  char v8;
  unint64_t v9;

  v3 = v1;
  v5 = *(_QWORD *)(v1 + 8);
  v6 = *(_QWORD *)(v3 + 16);
  sub_1CA28B714(v5, v6);
  sub_1CA2A2BF0(a1, v5, v6);
  v8 = v7;
  sub_1CA260204(v5, v6);
  if ((v8 & 1) == 0)
    __asm { BR              X9 }
  sub_1CA85BA8C();
  if (v2)
    return sub_1CA2A1980(0, 0xF000000000000000);
  if (v9 >> 60 != 15)
    __asm { BR              X8 }
  return 0;
}

id EventLabelingFeaturesFileCache.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void EventLabelingFeaturesFileCache.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id EventLabelingFeaturesFileCache.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_1CA2A2ADC(uint64_t a1, SEL *a2)
{
  void *v4;
  id v5;
  id v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t);
  id v9;
  id v10;
  uint64_t v11;
  id v13[2];

  v13[1] = *(id *)MEMORY[0x1E0C80C00];
  v4 = (void *)sub_1CA85A3C4();
  v13[0] = 0;
  v5 = objc_msgSend((id)swift_getObjCClassFromMetadata(), *a2, v4, v13);

  v6 = v13[0];
  if (v5)
  {
    v7 = sub_1CA85A424();
    v8 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8);
    v9 = v6;
    v8(a1, v7);
  }
  else
  {
    v10 = v13[0];
    sub_1CA85A364();

    swift_willThrow();
    v11 = sub_1CA85A424();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(a1, v11);
  }
  return v5;
}

void sub_1CA2A2BF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __asm { BR              X9 }
}

uint64_t sub_1CA2A2C54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  unint64_t v22;
  unint64_t v23;
  int v24;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t))((char *)&loc_1CA2A2CC8 + dword_1CA2A2E8C[v24]))(a1, a2, a3, a4, a5, a6, a7, a8, a22, v22 >> 40, HIDWORD(v22), v22 >> 24, v22 >> 16, v22 >> 8, HIBYTE(v23));
}

uint64_t sub_1CA2A2CDC()
{
  char v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v14;
  char v15;
  char v16;
  char v17;
  char v18;
  char v19;
  char v20;
  char v21;
  char v22;
  char v23;
  char v24;
  char v25;
  uint64_t v26;
  uint64_t v27;

  if (v2 == v27)
    return 0;
  if (!v4)
  {
    if (v2 < v5)
    {
      *(_BYTE *)(v6 - 102) = v1;
      *(_BYTE *)(v6 - 101) = v25;
      *(_BYTE *)(v6 - 100) = v24;
      *(_BYTE *)(v6 - 99) = v23;
      *(_BYTE *)(v6 - 98) = v22;
      *(_BYTE *)(v6 - 97) = v21;
      *(_BYTE *)(v6 - 96) = v20;
      *(_BYTE *)(v6 - 95) = v19;
      *(_BYTE *)(v6 - 94) = v0;
      *(_BYTE *)(v6 - 93) = v18;
      *(_BYTE *)(v6 - 92) = v17;
      *(_BYTE *)(v6 - 91) = v16;
      *(_BYTE *)(v6 - 90) = v15;
      *(_BYTE *)(v6 - 89) = v14;
      if (*(unsigned __int8 *)(v6 - 102 + v2) != v3)
        goto LABEL_30;
      return v2;
    }
    goto LABEL_22;
  }
  if (v4 != 1)
  {
    if (v2 >= *(_QWORD *)(v1 + 16))
    {
      if (v2 >= *(_QWORD *)(v1 + 24))
      {
LABEL_25:
        __break(1u);
        goto LABEL_26;
      }
      v11 = sub_1CA85A1E4();
      if (v11)
      {
        v8 = v11;
        v12 = sub_1CA85A1FC();
        v10 = v2 - v12;
        if (!__OFSUB__(v2, v12))
          goto LABEL_17;
LABEL_26:
        __break(1u);
        JUMPOUT(0x1CA2A2E6CLL);
      }
LABEL_28:
      __break(1u);
    }
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  if (v2 < v26 || v2 >= v27)
  {
    __break(1u);
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v7 = sub_1CA85A1E4();
  if (!v7)
  {
    __break(1u);
    goto LABEL_28;
  }
  v8 = v7;
  v9 = sub_1CA85A1FC();
  v10 = v2 - v9;
  if (__OFSUB__(v2, v9))
    goto LABEL_24;
LABEL_17:
  if (*(unsigned __int8 *)(v8 + v10) != v3)
LABEL_30:
    JUMPOUT(0x1CA2A2CC0);
  return v2;
}

void sub_1CA2A2E9C(uint64_t a1, uint64_t a2)
{
  char *v2;
  _QWORD v3[6];

  v3[5] = *MEMORY[0x1E0C80C00];
  v3[3] = MEMORY[0x1E0CB0338];
  v3[4] = MEMORY[0x1E0CB0318];
  v3[0] = a1;
  v3[1] = a2;
  v2 = (char *)&loc_1CA2A2F00
     + dword_1CA2A30A4[__swift_project_boxed_opaque_existential_1(v3, MEMORY[0x1E0CB0338])[1] >> 62];
  __asm { BR              X10 }
}

uint64_t sub_1CA2A2F10()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v3;

  sub_1CA28B714(v1, v0);
  sub_1CA85A454();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v3);
}

uint64_t sub_1CA2A30B4(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = sub_1CA85A1E4();
  if (!result || (result = sub_1CA85A1FC(), !__OFSUB__(a1, result)))
  {
    if (!__OFSUB__(a2, a1))
    {
      sub_1CA85A1F0();
      return sub_1CA85A454();
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

_QWORD *sub_1CA2A3144(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  id v13;
  id v14;
  void *v15;
  uint64_t v16;
  _QWORD *v17;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  char v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  Swift::String v28;
  uint64_t v29;
  char v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  id v36;
  uint64_t v37;
  unsigned __int8 *v38;
  unint64_t v39;
  unint64_t v40;
  char v41;
  unsigned int v42;
  char isUniquelyReferenced_nonNull_native;
  id v44;
  id v45;
  uint64_t v47;
  id v48;
  uint64_t v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  char v61;
  uint64_t v62;

  v62 = *MEMORY[0x1E0C80C00];
  v6 = sub_1CA85A424();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  _s11PhotosGraph26EventLabelingConfigurationC10bundlePathSSSgvgZ_0();
  if (v10)
  {
    v54 = v7;
    v55 = a2;
    v2 = objc_allocWithZone((Class)PGEventLabelerE5Model);
    v11 = sub_1CA328798();
    v12 = v3;
    if (!v3)
    {
      v13 = v11;
      *(_QWORD *)&v59 = 0;
      v14 = objc_msgSend(v11, sel_inputNamesWithError_, &v59);
      v2 = (_QWORD *)v59;
      if (!v14)
      {
        v36 = (id)v59;
        sub_1CA85A364();

        swift_willThrow();
LABEL_31:

        return v2;
      }
      v15 = v14;
      v53 = v9;
      v16 = sub_1CA85B984();
      v17 = v2;

      v18 = *(_QWORD *)(v16 + 16);
      v51 = v6;
      v52 = a1;
      if (v18)
      {
        v50 = v13;
        *(_QWORD *)&v59 = MEMORY[0x1E0DEE9D8];
        sub_1CA3FB8D8(0, v18, 0);
        v19 = v59;
        v20 = sub_1CA31D160(v16);
        v22 = v21;
        v24 = v23 & 1;
        v56 = v16;
        *(_QWORD *)&v57 = v16 + 56;
        do
        {
          if (v20 < 0 || v20 >= 1 << *(_BYTE *)(v16 + 32))
          {
            __break(1u);
LABEL_35:
            __break(1u);
LABEL_36:
            __break(1u);
          }
          if (((*(_QWORD *)(v57 + (((unint64_t)v20 >> 3) & 0xFFFFFFFFFFFFF8)) >> v20) & 1) == 0)
            goto LABEL_35;
          if (*(_DWORD *)(v16 + 36) != (_DWORD)v22)
            goto LABEL_36;
          v25 = v19;
          v26 = (uint64_t *)(*(_QWORD *)(v16 + 48) + 16 * v20);
          v27 = *v26;
          v2 = (_QWORD *)v26[1];
          swift_bridgeObjectRetain_n();
          v28._countAndFlagsBits = v27;
          v28._object = v2;
          MomentGraphFeature.init(featureName:)(v28);
          if (v29)
          {
            swift_bridgeObjectRelease();

            swift_release();
            swift_bridgeObjectRelease();
            return v2;
          }
          *(_QWORD *)&v58 = 0;
          swift_bridgeObjectRelease();
          v30 = v61;
          v19 = v25;
          *(_QWORD *)&v59 = v25;
          v32 = *(_QWORD *)(v25 + 16);
          v31 = *(_QWORD *)(v25 + 24);
          if (v32 >= v31 >> 1)
          {
            sub_1CA3FB8D8(v31 > 1, v32 + 1, 1);
            v19 = v59;
          }
          *(_QWORD *)(v19 + 16) = v32 + 1;
          *(_BYTE *)(v19 + v32 + 32) = v30;
          v16 = v56;
          v33 = sub_1CA31D204(v20, v22, v24 & 1, v56);
          v20 = v33;
          v22 = v34;
          v24 = v35 & 1;
          --v18;
          v12 = v58;
        }
        while (v18);
        sub_1CA2685C4(v33, v34, v35 & 1);
        swift_bridgeObjectRelease();
        v13 = v50;
        v37 = *(_QWORD *)(v19 + 16);
        if (!v37)
          goto LABEL_28;
      }
      else
      {
        swift_bridgeObjectRelease();
        v19 = MEMORY[0x1E0DEE9D8];
        v37 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
        if (!v37)
        {
LABEL_28:
          v2 = (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_29:
          swift_bridgeObjectRelease();
          v44 = objc_allocWithZone((Class)PGGraphMomentNodeCollection);
          v45 = objc_msgSend(v44, sel_initWithGraph_, v55);
          static MomentGraphFeature.extractors(for:with:in:)((uint64_t)v2, (uint64_t *)&v59);
          if (!v12)
          {

            swift_release();
            v57 = v60;
            v58 = v59;
            v47 = (uint64_t)v53;
            (*(void (**)(char *, uint64_t, uint64_t))(v54 + 16))(v53, v52, v51);
            v59 = v58;
            v60 = v57;
            v48 = objc_allocWithZone((Class)type metadata accessor for EventLabelingFeaturesFileCache());
            v2 = EventLabelingFeaturesFileCache.init(graphServiceURL:featureExtractorsForCaching:)(v47, (uint64_t *)&v59);

            return v2;
          }

          swift_release();
          goto LABEL_31;
        }
      }
      v38 = (unsigned __int8 *)(v19 + 32);
      v2 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      do
      {
        v42 = *v38++;
        v41 = v42;
        if (v42 >= 0xC)
        {
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          *(_QWORD *)&v59 = v2;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            sub_1CA3FB8D8(0, v2[2] + 1, 1);
            v2 = (_QWORD *)v59;
          }
          v40 = v2[2];
          v39 = v2[3];
          if (v40 >= v39 >> 1)
          {
            sub_1CA3FB8D8(v39 > 1, v40 + 1, 1);
            v2 = (_QWORD *)v59;
          }
          v2[2] = v40 + 1;
          *((_BYTE *)v2 + v40 + 32) = v41;
        }
        --v37;
      }
      while (v37);
      goto LABEL_29;
    }
  }
  else
  {
    sub_1CA2A3B30();
    swift_allocError();
    swift_willThrow();
  }
  return v2;
}

void sub_1CA2A35FC(void *a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *inited;
  id v14;
  id v15;
  void *v16;
  id v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  void *v25;
  _QWORD v26[3];
  uint64_t v27;
  PhotosGraph::CachedEventFeatures v28;

  v3 = v2;
  v6 = (void *)sub_1CA85BB7C();
  v25 = v7;
  v8 = v3 + OBJC_IVAR___PGEventLabelingFeaturesFileCache_featureExtractorsForCaching;
  v9 = *(_QWORD *)(v3 + OBJC_IVAR___PGEventLabelingFeaturesFileCache_featureExtractorsForCaching);
  v10 = *(_QWORD *)(v3 + OBJC_IVAR___PGEventLabelingFeaturesFileCache_featureExtractorsForCaching + 8);
  v11 = *(_QWORD *)(v3 + OBJC_IVAR___PGEventLabelingFeaturesFileCache_featureExtractorsForCaching + 16);
  v12 = *(_QWORD *)(v8 + 24);
  type metadata accessor for MomentGraphCluster();
  inited = (_QWORD *)swift_initStackObject();
  inited[2] = a1;
  inited[3] = a2;
  inited[4] = v9;
  inited[5] = v10;
  inited[6] = v11;
  inited[7] = v12;
  v14 = a1;
  v15 = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v16 = sub_1CA51666C();
  if (v27)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    return;
  }
  v27 = (uint64_t)v16;
  v17 = objc_msgSend(v14, sel_UUID);
  if (!v17)
  {
    sub_1CA2A3AEC();
    swift_allocError();
    *v24 = 0;
    v24[1] = 0;
    v24[2] = 0x8000000000000000;
    swift_willThrow();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  v18 = v17;
  v19 = sub_1CA85B534();
  v21 = v20;

  v22 = sub_1CA28A774(v27);
  swift_bridgeObjectRelease();
  v26[0] = v19;
  v26[1] = v21;
  v26[2] = v22;
  v28.identifier._countAndFlagsBits = (uint64_t)v26;
  EventLabelingFeaturesFileCache.write(eventFeatures:)(v28);
  if (v23)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_release();
LABEL_7:

    return;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1CA85BB70();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

}

unint64_t sub_1CA2A3888()
{
  unint64_t result;

  result = qword_1EF94C490;
  if (!qword_1EF94C490)
  {
    result = MEMORY[0x1CAA4F1A4](&protocol conformance descriptor for CachedEventFeatures, &type metadata for CachedEventFeatures);
    atomic_store(result, (unint64_t *)&qword_1EF94C490);
  }
  return result;
}

unint64_t sub_1CA2A38CC()
{
  unint64_t result;

  result = qword_1EF94C498;
  if (!qword_1EF94C498)
  {
    result = MEMORY[0x1CAA4F1A4](&protocol conformance descriptor for CachedEventFeatures, &type metadata for CachedEventFeatures);
    atomic_store(result, (unint64_t *)&qword_1EF94C498);
  }
  return result;
}

uint64_t sub_1CA2A3910()
{
  return type metadata accessor for EventLabelingFeaturesFileCache();
}

uint64_t type metadata accessor for EventLabelingFeaturesFileCache()
{
  uint64_t result;

  result = qword_1EF94C4C8;
  if (!qword_1EF94C4C8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1CA2A3954()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1CA85A424();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for EventLabelingFeaturesFileCache()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of EventLabelingFeaturesFileCache.__allocating_init(graphServiceURL:featureExtractorsForCaching:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t storeEnumTagSinglePayload for EventLabelingFeaturesFileCache.Error(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1CA2A3A48 + 4 * byte_1CA8D6280[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1CA2A3A68 + 4 * byte_1CA8D6285[v4]))();
}

_BYTE *sub_1CA2A3A48(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1CA2A3A68(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1CA2A3A70(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1CA2A3A78(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1CA2A3A80(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1CA2A3A88(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for EventLabelingFeaturesFileCache.Error()
{
  return &type metadata for EventLabelingFeaturesFileCache.Error;
}

unint64_t sub_1CA2A3AA8()
{
  unint64_t result;

  result = qword_1EF94C4D8;
  if (!qword_1EF94C4D8)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8D6320, &type metadata for EventLabelingFeaturesFileCache.Error);
    atomic_store(result, (unint64_t *)&qword_1EF94C4D8);
  }
  return result;
}

unint64_t sub_1CA2A3AEC()
{
  unint64_t result;

  result = qword_1EF94C4E0;
  if (!qword_1EF94C4E0)
  {
    result = MEMORY[0x1CAA4F1A4](&protocol conformance descriptor for EventClusterFeaturizerError, &type metadata for EventClusterFeaturizerError);
    atomic_store(result, (unint64_t *)&qword_1EF94C4E0);
  }
  return result;
}

unint64_t sub_1CA2A3B30()
{
  unint64_t result;

  result = qword_1EF94C4E8;
  if (!qword_1EF94C4E8)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8DC9A4, &type metadata for EspressoEventLabeler.Error);
    atomic_store(result, (unint64_t *)&qword_1EF94C4E8);
  }
  return result;
}

uint64_t sub_1CA2A3B74()
{
  return 0x6C706D4920746F4ELL;
}

id _s11PhotosGraph27FlexMusicCurationParametersCfD_0()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for SpecificationBasedFlexMusicCurator()
{
  return objc_opt_self();
}

unint64_t sub_1CA2A3DA0()
{
  unint64_t result;

  result = qword_1EF94C520;
  if (!qword_1EF94C520)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8D647C, &type metadata for SpecificationBasedFlexMusicCurator.Error);
    atomic_store(result, (unint64_t *)&qword_1EF94C520);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for SpecificationBasedFlexMusicCurator.Error(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1CA2A3E24 + 4 * byte_1CA8D6390[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1CA2A3E44 + 4 * byte_1CA8D6395[v4]))();
}

_BYTE *sub_1CA2A3E24(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1CA2A3E44(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1CA2A3E4C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1CA2A3E54(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1CA2A3E5C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1CA2A3E64(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for SpecificationBasedFlexMusicCurator.Error()
{
  return &type metadata for SpecificationBasedFlexMusicCurator.Error;
}

unint64_t sub_1CA2A3E88()
{
  unint64_t result;

  result = qword_1EF94C528;
  if (!qword_1EF94C528)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8D6454, &type metadata for SpecificationBasedFlexMusicCurator.Error);
    atomic_store(result, (unint64_t *)&qword_1EF94C528);
  }
  return result;
}

uint64_t MusicCuratorBlocklistConfiguration.blocklistAdamIds.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t MusicCuratorBlocklistConfiguration.blockedGenreNames.getter()
{
  return swift_bridgeObjectRetain();
}

unint64_t sub_1CA2A3EDC()
{
  _BYTE *v0;

  if (*v0)
    return 0xD000000000000011;
  else
    return 0xD000000000000010;
}

uint64_t sub_1CA2A3F1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1CA2A4A98(a1, a2);
  *a3 = result;
  return result;
}

void sub_1CA2A3F40(_BYTE *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_1CA2A3F4C()
{
  sub_1CA2A41A0();
  return sub_1CA85C3E0();
}

uint64_t sub_1CA2A3F74()
{
  sub_1CA2A41A0();
  return sub_1CA85C3EC();
}

uint64_t MusicCuratorBlocklistConfiguration.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  char v13;
  uint64_t v14;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED872698);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1CA2A41A0();
  sub_1CA85C3C8();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED872270);
  v13 = 0;
  sub_1CA2A41E4(&qword_1ED872288, &qword_1ED872270, MEMORY[0x1E0DEAF40]);
  sub_1CA85C1A0();
  v9 = v14;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED873160);
  v13 = 1;
  sub_1CA2A41E4(&qword_1ED873170, &qword_1ED873160, MEMORY[0x1E0DEB3D8]);
  swift_bridgeObjectRetain();
  sub_1CA85C14C();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v10 = v14;
  *a2 = v9;
  a2[1] = v10;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

unint64_t sub_1CA2A41A0()
{
  unint64_t result;

  result = qword_1ED871C08;
  if (!qword_1ED871C08)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8D66A4, &type metadata for MusicCuratorBlocklistConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED871C08);
  }
  return result;
}

uint64_t sub_1CA2A41E4(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v7 = MEMORY[0x1E0DEA9A0];
    result = MEMORY[0x1CAA4F1A4](a3, v6, &v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1CA2A423C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return MusicCuratorBlocklistConfiguration.init(from:)(a1, a2);
}

void static MusicCuratorBlocklistConfiguration.defaultConfiguration()(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t ObjCClassFromMetadata;
  id v14;
  void *v15;
  void *v16;
  id v17;
  void (*v18)(char *, char *, uint64_t);
  char *v19;
  char *v20;
  void *v21;
  void *v22;
  id v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  void (*v30)(char *, uint64_t);
  void (*v31)(char *, uint64_t);
  uint64_t v32;
  uint64_t v33;
  _QWORD v34[2];
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  id v39;

  v34[0] = a1;
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED871180);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)v34 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1CA85A424();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v34 - v9;
  MEMORY[0x1E0C80A78](v11);
  v35 = (char *)v34 - v12;
  sub_1CA85A070();
  swift_allocObject();
  v36 = sub_1CA85A064();
  v39 = objc_msgSend(objc_allocWithZone((Class)PGRemoteConfiguration), sel_initWithTrialNamespace_onDiskResourceFile_, 4, 0);
  type metadata accessor for MusicCurator();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v14 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v15 = (void *)sub_1CA85B510();
  v16 = (void *)sub_1CA85B510();
  v17 = objc_msgSend(v14, sel_URLForResource_withExtension_, v15, v16);

  if (!v17)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v3, 1, 1, v4);
    goto LABEL_6;
  }
  sub_1CA85A3F4();

  v18 = *(void (**)(char *, char *, uint64_t))(v5 + 32);
  v18(v3, v10, v4);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v5 + 56))(v3, 0, 1, v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {
LABEL_6:
    sub_1CA2A4640((uint64_t)v3);
    sub_1CA2A4680();
    swift_allocError();
    swift_willThrow();
    swift_release();

    return;
  }
  v19 = v7;
  v20 = v35;
  v18(v35, v3, v4);
  v21 = (void *)sub_1CA85B510();
  v22 = (void *)sub_1CA85A3C4();
  v23 = v39;
  v24 = objc_msgSend(v39, sel_fileValueForKey_withFallbackValue_, v21, v22);

  sub_1CA85A3F4();
  v25 = v34[1];
  v26 = sub_1CA85A430();
  if (v25)
  {
    swift_release();

    v30 = *(void (**)(char *, uint64_t))(v5 + 8);
    v30(v19, v4);
    v30(v20, v4);
  }
  else
  {
    v28 = v26;
    v29 = v27;
    sub_1CA2A46C4();
    sub_1CA85A058();
    sub_1CA260204(v28, v29);
    swift_release();

    v31 = *(void (**)(char *, uint64_t))(v5 + 8);
    v31(v19, v4);
    v31(v20, v4);
    v32 = v38;
    v33 = v34[0];
    *(_QWORD *)v34[0] = v37;
    *(_QWORD *)(v33 + 8) = v32;
  }
}

uint64_t sub_1CA2A4640(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED871180);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1CA2A4680()
{
  unint64_t result;

  result = qword_1EF94C530;
  if (!qword_1EF94C530)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8D6664, &type metadata for MusicCuratorBlocklistConfiguration.Error);
    atomic_store(result, (unint64_t *)&qword_1EF94C530);
  }
  return result;
}

unint64_t sub_1CA2A46C4()
{
  unint64_t result;

  result = qword_1ED871C20;
  if (!qword_1ED871C20)
  {
    result = MEMORY[0x1CAA4F1A4](&protocol conformance descriptor for MusicCuratorBlocklistConfiguration, &type metadata for MusicCuratorBlocklistConfiguration);
    atomic_store(result, (unint64_t *)&qword_1ED871C20);
  }
  return result;
}

uint64_t destroy for MusicCuratorBlocklistConfiguration()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *_s11PhotosGraph34MusicCuratorBlocklistConfigurationVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for MusicCuratorBlocklistConfiguration(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *assignWithTake for MusicCuratorBlocklistConfiguration(_OWORD *a1, _OWORD *a2)
{
  swift_bridgeObjectRelease();
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for MusicCuratorBlocklistConfiguration()
{
  return &type metadata for MusicCuratorBlocklistConfiguration;
}

uint64_t storeEnumTagSinglePayload for MusicCuratorBlocklistConfiguration.Error(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1CA2A4850 + 4 * byte_1CA8D64C0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1CA2A4870 + 4 * byte_1CA8D64C5[v4]))();
}

_BYTE *sub_1CA2A4850(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1CA2A4870(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1CA2A4878(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1CA2A4880(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1CA2A4888(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1CA2A4890(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for MusicCuratorBlocklistConfiguration.Error()
{
  return &type metadata for MusicCuratorBlocklistConfiguration.Error;
}

uint64_t storeEnumTagSinglePayload for MusicCuratorBlocklistConfiguration.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1CA2A48F8 + 4 * byte_1CA8D64CF[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1CA2A492C + 4 * byte_1CA8D64CA[v4]))();
}

uint64_t sub_1CA2A492C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CA2A4934(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1CA2A493CLL);
  return result;
}

uint64_t sub_1CA2A4948(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1CA2A4950);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1CA2A4954(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CA2A495C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MusicCuratorBlocklistConfiguration.CodingKeys()
{
  return &type metadata for MusicCuratorBlocklistConfiguration.CodingKeys;
}

unint64_t sub_1CA2A497C()
{
  unint64_t result;

  result = qword_1EF94C538;
  if (!qword_1EF94C538)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8D65D4, &type metadata for MusicCuratorBlocklistConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF94C538);
  }
  return result;
}

unint64_t sub_1CA2A49C4()
{
  unint64_t result;

  result = qword_1EF94C540;
  if (!qword_1EF94C540)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8D663C, &type metadata for MusicCuratorBlocklistConfiguration.Error);
    atomic_store(result, (unint64_t *)&qword_1EF94C540);
  }
  return result;
}

unint64_t sub_1CA2A4A0C()
{
  unint64_t result;

  result = qword_1ED871C18;
  if (!qword_1ED871C18)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8D6544, &type metadata for MusicCuratorBlocklistConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED871C18);
  }
  return result;
}

unint64_t sub_1CA2A4A54()
{
  unint64_t result;

  result = qword_1ED871C10;
  if (!qword_1ED871C10)
  {
    result = MEMORY[0x1CAA4F1A4](&unk_1CA8D656C, &type metadata for MusicCuratorBlocklistConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED871C10);
  }
  return result;
}

uint64_t sub_1CA2A4A98(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000010 && a2 == 0x80000001CA88A6B0 || (sub_1CA85C284() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001CA88A6D0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v5 = sub_1CA85C284();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1CA2A4B8C()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x746867696568;
  if (*v0 != 1)
    v1 = 7107189;
  if (*v0)
    return v1;
  else
    return 0x6874646977;
}

uint64_t sub_1CA2A4BD8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1CA2BEBF8(a1, a2);
  *a3 = result;
  return result;
}

void sub_1CA2A4BFC(_BYTE *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_1CA2A4C08()
{
  sub_1CA2B1D1C();
  return sub_1CA85C3E0();
}

uint64_t sub_1CA2A4C30()
{
  sub_1CA2B1D1C();
  return sub_1CA85C3EC();
}

uint64_t MusicKitCatalogSong.Attributes.Artwork.encode(to:)(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v10[4];
  char v11;
  char v12;
  char v13;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94C548);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = v1[1];
  v10[2] = v1[2];
  v10[3] = v8;
  v10[1] = v1[3];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1CA2B1D1C();
  sub_1CA85C3D4();
  v13 = 0;
  sub_1CA85C224();
  if (!v2)
  {
    v12 = 1;
    sub_1CA85C224();
    v11 = 2;
    sub_1CA85C1F4();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t MusicKitCatalogSong.Attributes.Artwork.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;
  char v19;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED872598);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1CA2B1D1C();
  sub_1CA85C3C8();
  if (!v2)
  {
    v19 = 0;
    v9 = sub_1CA85C188();
    v18 = 1;
    v10 = sub_1CA85C188();
    v17 = 2;
    v12 = sub_1CA85C158();
    v13 = v8;
    v15 = v14;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v13, v5);
    *a2 = v9;
    a2[1] = v10;
    a2[2] = v12;
    a2[3] = v15;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1CA2A4F30@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return MusicKitCatalogSong.Attributes.Artwork.init(from:)(a1, a2);
}

uint64_t sub_1CA2A4F44(_QWORD *a1)
{
  return MusicKitCatalogSong.Attributes.Artwork.encode(to:)(a1);
}

uint64_t sub_1CA2A4F64()
{
  return 7107189;
}

uint64_t sub_1CA2A4F74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 7107189 && a2 == 0xE300000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1CA85C284();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

void sub_1CA2A4FF8(_BYTE *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_1CA2A5004()
{
  sub_1CA2B1D60();
  return sub_1CA85C3E0();
}

uint64_t sub_1CA2A502C()
{
  sub_1CA2B1D60();
  return sub_1CA85C3EC();
}

uint64_t MusicKitCatalogSong.Attributes.Preview.encode(to:)(_QWORD *a1)
{
  return sub_1CA2AF94C(a1, &qword_1EF94C550, (void (*)(void))sub_1CA2B1D60, (uint64_t)&type metadata for MusicKitCatalogSong.Attributes.Preview.CodingKeys, (void (*)(uint64_t, uint64_t))MEMORY[0x1E0DED0F0]);
}

uint64_t MusicKitCatalogSong.Attributes.Preview.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1CA2AFA74(a1, &qword_1ED8725A0, (void (*)(void))sub_1CA2B1D60, a2);
}

uint64_t sub_1CA2A50B8@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return MusicKitCatalogSong.Attributes.Preview.init(from:)(a1, a2);
}

uint64_t sub_1CA2A50CC(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_1CA2AFBE4(a1, a2, a3, &qword_1EF94C550, (void (*)(void))sub_1CA2B1D60, (uint64_t)&type metadata for MusicKitCatalogSong.Attributes.Preview.CodingKeys, (void (*)(uint64_t, uint64_t))MEMORY[0x1E0DED0F0]);
}

uint64_t sub_1CA2A5104()
{
  _BYTE *v0;

  if (*v0)
    return 1684957547;
  else
    return 25705;
}

uint64_t sub_1CA2A512C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1CA2BED2C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1CA2A5150()
{
  sub_1CA2B1DA4();
  return sub_1CA85C3E0();
}

uint64_t sub_1CA2A5178()
{
  sub_1CA2B1DA4();
  return sub_1CA85C3EC();
}

uint64_t MusicKitCatalogSong.Attributes.PlayParams.encode(to:)(_QWORD *a1)
{
  return sub_1CA2A96BC(a1, &qword_1EF94C558, (void (*)(void))sub_1CA2B1DA4, (uint64_t)&type metadata for MusicKitCatalogSong.Attributes.PlayParams.CodingKeys, (void (*)(uint64_t, uint64_t, char *, uint64_t))MEMORY[0x1E0DED0F0]);
}

uint64_t MusicKitCatalogSong.Attributes.PlayParams.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t);
  uint64_t v16;
  uint64_t v18;
  char v19;
  char v20;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED872590);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1CA2B1DA4();
  sub_1CA85C3C8();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v20 = 0;
  v9 = sub_1CA85C158();
  v11 = v10;
  v19 = 1;
  swift_bridgeObjectRetain();
  v12 = sub_1CA85C158();
  v14 = v13;
  v15 = *(void (**)(char *, uint64_t))(v6 + 8);
  v16 = v12;
  v15(v8, v5);
  *a2 = v9;
  a2[1] = v11;
  a2[2] = v16;
  a2[3] = v14;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1CA2A5378@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return MusicKitCatalogSong.Attributes.PlayParams.init(from:)(a1, a2);
}

uint64_t sub_1CA2A538C(_QWORD *a1)
{
  return MusicKitCatalogSong.Attributes.PlayParams.encode(to:)(a1);
}

uint64_t sub_1CA2A53A4()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 6775156;
  if (*v0 != 1)
    v1 = 0x63617073656D616ELL;
  if (*v0)
    return v1;
  else
    return 0x65726F6373;
}

uint64_t sub_1CA2A53F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1CA2BEDF4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1CA2A541C()
{
  sub_1CA2B1DE8();
  return sub_1CA85C3E0();
}

uint64_t sub_1CA2A5444()
{
  sub_1CA2B1DE8();
  return sub_1CA85C3EC();
}

uint64_t MusicKitCatalogSong.Attributes.Unitag.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v12[6];
  char v13;
  char v14;
  char v15;
  char v16;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94C560);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_BYTE *)(v1 + 4);
  v8 = *(_QWORD *)(v1 + 8);
  v12[3] = *(_QWORD *)(v1 + 16);
  v12[4] = v8;
  v9 = *(_QWORD *)(v1 + 24);
  v12[1] = *(_QWORD *)(v1 + 32);
  v12[2] = v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1CA2B1DE8();
  sub_1CA85C3D4();
  v16 = 0;
  v13 = v7;
  v10 = v12[5];
  sub_1CA85C1D0();
  if (!v10)
  {
    v15 = 1;
    sub_1CA85C1AC();
    v14 = 2;
    sub_1CA85C1AC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t MusicKitCatalogSong.Attributes.Unitag.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t);
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char v22;
  char v23;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED874B88);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1CA2B1DE8();
  sub_1CA85C3C8();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v23 = 0;
  v9 = sub_1CA85C134();
  v22 = 1;
  v10 = sub_1CA85C110();
  v12 = v11;
  v20 = v10;
  v21 = 2;
  swift_bridgeObjectRetain();
  v13 = sub_1CA85C110();
  v15 = v14;
  v16 = *(void (**)(char *, uint64_t))(v6 + 8);
  v17 = v13;
  v16(v8, v5);
  *(_DWORD *)a2 = v9;
  *(_BYTE *)(a2 + 4) = BYTE4(v9) & 1;
  *(_QWORD *)(a2 + 8) = v20;
  *(_QWORD *)(a2 + 16) = v12;
  *(_QWORD *)(a2 + 24) = v17;
  *(_QWORD *)(a2 + 32) = v15;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1CA2A57BC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return MusicKitCatalogSong.Attributes.Unitag.init(from:)(a1, a2);
}

uint64_t sub_1CA2A57D0(_QWORD *a1)
{
  return MusicKitCatalogSong.Attributes.Unitag.encode(to:)(a1);
}

uint64_t sub_1CA2A57E8(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1CA2A581C + 4 * byte_1CA8D6700[a1]))(0x6B726F77747261, 0xE700000000000000);
}

uint64_t sub_1CA2A581C()
{
  return 7107189;
}

uint64_t sub_1CA2A582C()
{
  return 0x6572506F72746E69;
}

uint64_t sub_1CA2A584C()
{
  return 0x7377656976657270;
}

uint64_t sub_1CA2A5864()
{
  return 0x614E747369747261;
}

uint64_t sub_1CA2A5880()
{
  return 0x6D614E6D75626C61;
}

uint64_t sub_1CA2A589C()
{
  return 0x6E65726566657270;
}

uint64_t sub_1CA2A58C0()
{
  return 0x73676174696E75;
}

uint64_t sub_1CA2A58D4()
{
  return 1701667182;
}

uint64_t sub_1CA2A58E4()
{
  return 0x52746E65746E6F63;
}

unint64_t sub_1CA2A5908()
{
  return 0xD000000000000010;
}

uint64_t sub_1CA2A5924()
{
  return 0x6172615079616C70;
}

uint64_t sub_1CA2A5944()
{
  return 0x636F4C6F69647561;
}

unint64_t sub_1CA2A5964()
{
  return 0xD00000000000001ELL;
}

uint64_t sub_1CA2A5984()
{
  return 0x6D614E65726E6567;
}

uint64_t sub_1CA2A59A4()
{
  return 0x50746E65746E6F63;
}

uint64_t sub_1CA2A59C8()
{
  unsigned __int8 *v0;

  return sub_1CA2A57E8(*v0);
}

uint64_t sub_1CA2A59D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1CA2BEF3C(a1, a2);
  *a3 = result;
  return result;
}

void sub_1CA2A59F4(_BYTE *a1@<X8>)
{
  *a1 = 16;
}

uint64_t sub_1CA2A5A00()
{
  sub_1CA2B27B8();
  return sub_1CA85C3E0();
}

uint64_t sub_1CA2A5A28()
{
  sub_1CA2B27B8();
  return sub_1CA85C3EC();
}

uint64_t MusicKitCatalogSong.Attributes.encode(to:)(_QWORD *a1)
{
  __int128 *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD v22[3];
  uint64_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  __int128 v47;
  uint64_t v48;
  __int128 v49;
  uint64_t v50;
  uint64_t v51;
  int v52;
  char v53;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94C568);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = *v1;
  v8 = *((_QWORD *)v1 + 2);
  v7 = *((_QWORD *)v1 + 3);
  v9 = *((_QWORD *)v1 + 4);
  v45 = *((_QWORD *)v1 + 5);
  v46 = v9;
  v10 = *((_QWORD *)v1 + 6);
  v43 = *((_QWORD *)v1 + 7);
  v44 = v10;
  v11 = *((_QWORD *)v1 + 8);
  v41 = *((_QWORD *)v1 + 9);
  v42 = v11;
  v12 = *((_QWORD *)v1 + 10);
  v13 = *((_QWORD *)v1 + 11);
  v39 = *((_QWORD *)v1 + 12);
  v40 = v12;
  v37 = *((unsigned int *)v1 + 26);
  v38 = v13;
  v52 = *((unsigned __int8 *)v1 + 108);
  v14 = *((_QWORD *)v1 + 14);
  v35 = *((_QWORD *)v1 + 15);
  v36 = v14;
  v15 = *((_QWORD *)v1 + 16);
  v33 = *((_QWORD *)v1 + 17);
  v34 = v15;
  v32 = *((_QWORD *)v1 + 18);
  v31 = *((unsigned int *)v1 + 38);
  v30 = *((unsigned __int8 *)v1 + 156);
  v27 = v1[10];
  v29 = *((_QWORD *)v1 + 22);
  v28 = *((_QWORD *)v1 + 23);
  v25 = *((_QWORD *)v1 + 24);
  v26 = *((_QWORD *)v1 + 25);
  v24 = *((unsigned __int8 *)v1 + 208);
  v23 = *((_QWORD *)v1 + 27);
  v22[1] = *((_QWORD *)v1 + 28);
  v22[2] = *((_QWORD *)v1 + 29);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1CA2B27B8();
  v16 = v6;
  sub_1CA85C3D4();
  v49 = v47;
  v50 = v8;
  v51 = v7;
  v53 = 0;
  sub_1CA2B27FC();
  v17 = v48;
  sub_1CA85C1E8();
  if (v17)
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  v19 = v43;
  v18 = v44;
  v20 = v42;
  v48 = v4;
  LOBYTE(v49) = 1;
  sub_1CA85C1AC();
  *(_QWORD *)&v49 = v18;
  *((_QWORD *)&v49 + 1) = v19;
  v53 = 2;
  sub_1CA2B2840();
  sub_1CA85C1E8();
  *(_QWORD *)&v49 = v20;
  v53 = 3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED872200);
  sub_1CA2B6780(&qword_1EF94C580, &qword_1ED872200, (uint64_t (*)(void))sub_1CA2B2840, MEMORY[0x1E0DEAF10]);
  sub_1CA85C1E8();
  LOBYTE(v49) = 4;
  sub_1CA85C1AC();
  LOBYTE(v49) = 5;
  sub_1CA85C1AC();
  LOBYTE(v49) = 6;
  v53 = v52;
  sub_1CA85C1D0();
  *(_QWORD *)&v49 = v36;
  v53 = 7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8721F0);
  sub_1CA2B6780(&qword_1EF94C588, &qword_1ED8721F0, (uint64_t (*)(void))sub_1CA2B2884, MEMORY[0x1E0DEAF10]);
  sub_1CA85C1E8();
  LOBYTE(v49) = 8;
  sub_1CA85C1AC();
  LOBYTE(v49) = 9;
  sub_1CA85C1AC();
  LOBYTE(v49) = 10;
  v53 = v30;
  sub_1CA85C1D0();
  v49 = v27;
  v50 = v29;
  v51 = v28;
  v53 = 11;
  sub_1CA2B28C8();
  sub_1CA85C1E8();
  LOBYTE(v49) = 12;
  sub_1CA85C1AC();
  LOBYTE(v49) = 13;
  sub_1CA85C1B8();
  *(_QWORD *)&v49 = v23;
  v53 = 14;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED872270);
  sub_1CA2B5AA0(&qword_1ED872278, &qword_1ED872270, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEAF10]);
  sub_1CA85C1E8();
  LOBYTE(v49) = 15;
  sub_1CA85C1AC();
  return (*(uint64_t (**)(char *, uint64_t))(v48 + 8))(v16, v3);
}

uint64_t MusicKitCatalogSong.Attributes.init(from:)@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  __int128 v47;
  _OWORD *v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  int v60;
  __int128 v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  _OWORD *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  __int128 v99;
  __int128 v100;
  __int128 v101;
  __int128 v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  int v116;
  char v117;
  __int16 v118;
  char v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  int v125;
  char v126;
  __int16 v127;
  char v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  __int128 v133;
  char v134;
  _BYTE v135[7];
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  char v139;
  _BYTE v140[7];
  __int16 v141;
  char v142;
  char v143;
  __int16 v144;
  char v145;
  char v146;
  _QWORD *v147;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED872588);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v147 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v9);
  sub_1CA2B27B8();
  sub_1CA85C3C8();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v147);
  v81 = a2;
  LOBYTE(v88) = 0;
  sub_1CA2B293C();
  sub_1CA85C14C();
  v80 = v103;
  v11 = v104;
  v12 = v105;
  v13 = v106;
  LOBYTE(v103) = 1;
  swift_bridgeObjectRetain();
  v77 = sub_1CA85C110();
  v78 = v12;
  v79 = v11;
  LOBYTE(v88) = 2;
  v15 = v14;
  sub_1CA2B2980();
  swift_bridgeObjectRetain();
  sub_1CA85C14C();
  v85 = v15;
  v76 = v13;
  v16 = v103;
  v17 = v104;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED872200);
  LOBYTE(v88) = 3;
  sub_1CA2B6780(&qword_1ED872208, &qword_1ED872200, (uint64_t (*)(void))sub_1CA2B2980, MEMORY[0x1E0DEAF40]);
  swift_bridgeObjectRetain();
  sub_1CA85C14C();
  v75 = v17;
  v18 = v103;
  LOBYTE(v103) = 4;
  swift_bridgeObjectRetain();
  v73 = sub_1CA85C110();
  v74 = v18;
  v19 = v16;
  LOBYTE(v103) = 5;
  v21 = v20;
  swift_bridgeObjectRetain();
  v22 = sub_1CA85C110();
  v84 = v21;
  v72 = v22;
  LOBYTE(v103) = 6;
  v24 = v23;
  swift_bridgeObjectRetain();
  v25 = sub_1CA85C134();
  v83 = v24;
  v70 = HIDWORD(v25) & 1;
  v71 = v25;
  v146 = BYTE4(v25) & 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8721F0);
  LOBYTE(v88) = 7;
  sub_1CA2B6780(&qword_1ED8721F8, &qword_1ED8721F0, (uint64_t (*)(void))sub_1CA2B29C4, MEMORY[0x1E0DEAF40]);
  sub_1CA85C14C();
  v26 = v103;
  LOBYTE(v103) = 8;
  swift_bridgeObjectRetain();
  v69 = sub_1CA85C110();
  v87 = v26;
  LOBYTE(v103) = 9;
  v82 = v27;
  swift_bridgeObjectRetain();
  v28 = sub_1CA85C110();
  v86 = v29;
  v30 = v28;
  LOBYTE(v103) = 10;
  swift_bridgeObjectRetain();
  v68 = sub_1CA85C134();
  v63 = HIDWORD(v68) & 1;
  v143 = BYTE4(v68) & 1;
  LOBYTE(v88) = 11;
  sub_1CA2B2A08();
  sub_1CA85C14C();
  v31 = v103;
  LOBYTE(v103) = 12;
  v64 = v31;
  v65 = v106;
  v66 = v105;
  v67 = v104;
  sub_1CA2B2A4C(v31, v104);
  *(_QWORD *)&v61 = sub_1CA85C110();
  *((_QWORD *)&v61 + 1) = v32;
  LOBYTE(v103) = 13;
  swift_bridgeObjectRetain();
  v60 = sub_1CA85C11C();
  v62 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED872270);
  LOBYTE(v88) = 14;
  sub_1CA2B5AA0(&qword_1ED872288, &qword_1ED872270, MEMORY[0x1E0DEA9A0], MEMORY[0x1E0DEAF40]);
  v33 = v62;
  sub_1CA85C14C();
  v62 = v33;
  if (v33)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    swift_bridgeObjectRelease();
    sub_1CA2B290C(v64, v67);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v34 = 0;
  }
  else
  {
    v35 = v103;
    v139 = 15;
    swift_bridgeObjectRetain();
    v36 = v62;
    v59 = sub_1CA85C110();
    v62 = v36;
    if (!v36)
    {
      v38 = v37;
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      BYTE12(v94) = v70;
      BYTE12(v97) = v63;
      *(_QWORD *)&v88 = v80;
      *((_QWORD *)&v88 + 1) = v79;
      *(_QWORD *)&v89 = v78;
      *((_QWORD *)&v89 + 1) = v76;
      *(_QWORD *)&v90 = v77;
      *((_QWORD *)&v90 + 1) = v85;
      v56 = v19;
      *(_QWORD *)&v91 = v19;
      *((_QWORD *)&v91 + 1) = v75;
      *(_QWORD *)&v92 = v74;
      *((_QWORD *)&v92 + 1) = v73;
      *(_QWORD *)&v93 = v84;
      *((_QWORD *)&v93 + 1) = v72;
      *(_QWORD *)&v94 = v83;
      DWORD2(v94) = v71;
      *(_QWORD *)&v95 = v87;
      *((_QWORD *)&v95 + 1) = v69;
      *(_QWORD *)&v96 = v82;
      *((_QWORD *)&v96 + 1) = v30;
      v58 = v30;
      *(_QWORD *)&v97 = v86;
      v39 = v67;
      DWORD2(v97) = v68;
      v40 = v64;
      *(_QWORD *)&v98 = v64;
      *((_QWORD *)&v98 + 1) = v67;
      *(_QWORD *)&v99 = v66;
      *((_QWORD *)&v99 + 1) = v65;
      v100 = v61;
      LOBYTE(v101) = v60;
      *((_QWORD *)&v101 + 1) = v35;
      *(_QWORD *)&v102 = v59;
      v57 = v38;
      *((_QWORD *)&v102 + 1) = v38;
      sub_1CA2B2A7C((uint64_t)&v88);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1CA2B290C(v40, v39);
      swift_bridgeObjectRelease();
      v41 = v85;
      swift_bridgeObjectRelease();
      v42 = v75;
      swift_bridgeObjectRelease();
      v43 = v74;
      swift_bridgeObjectRelease();
      v44 = v84;
      swift_bridgeObjectRelease();
      v45 = v83;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v46 = v86;
      swift_bridgeObjectRelease();
      v47 = v101;
      v48 = v81;
      v81[12] = v100;
      v48[13] = v47;
      v48[14] = v102;
      v49 = v97;
      v48[8] = v96;
      v48[9] = v49;
      v50 = v99;
      v48[10] = v98;
      v48[11] = v50;
      v51 = v93;
      v48[4] = v92;
      v48[5] = v51;
      v52 = v95;
      v48[6] = v94;
      v48[7] = v52;
      v53 = v89;
      *v48 = v88;
      v48[1] = v53;
      v54 = v91;
      v48[2] = v90;
      v48[3] = v54;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v147);
      v103 = v80;
      v104 = v79;
      v105 = v78;
      v106 = v76;
      v107 = v77;
      v108 = v41;
      v109 = v56;
      v110 = v42;
      v111 = v43;
      v112 = v73;
      v113 = v44;
      v114 = v72;
      v115 = v45;
      v116 = v71;
      v117 = v146;
      v118 = v144;
      v119 = v145;
      v120 = v87;
      v121 = v69;
      v122 = v82;
      v123 = v58;
      v124 = v46;
      v125 = v68;
      v126 = v143;
      v127 = v141;
      v128 = v142;
      v129 = v64;
      v130 = v67;
      v131 = v66;
      v132 = v65;
      v133 = v61;
      v134 = v60;
      *(_DWORD *)&v135[3] = *(_DWORD *)&v140[3];
      *(_DWORD *)v135 = *(_DWORD *)v140;
      v136 = v35;
      v137 = v59;
      v138 = v57;
      return sub_1CA2B2B78((uint64_t)&v103);
    }
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1CA2B290C(v64, v67);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v34 = 1;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v147);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1CA2B290C(v64, v67);
  result = swift_bridgeObjectRelease();
  if ((v34 & 1) != 0)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_1CA2A6E08@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  return MusicKitCatalogSong.Attributes.init(from:)(a1, a2);
}

uint64_t sub_1CA2A6E1C(_QWORD *a1)
{
  return MusicKitCatalogSong.Attributes.encode(to:)(a1);
}

void sub_1CA2A6E30(char *a1)
{
  sub_1CA329130(*a1);
}

void sub_1CA2A6E3C()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1CA85C368();
  __asm { BR              X9 }
}

uint64_t sub_1CA2A6E90()
{
  sub_1CA85B4B0();
  swift_bridgeObjectRelease();
  return sub_1CA85C3B0();
}

void sub_1CA2A6F14()
{
  __asm { BR              X10 }
}

uint64_t sub_1CA2A6F58()
{
  sub_1CA85B4B0();
  return swift_bridgeObjectRelease();
}

void sub_1CA2A6FC8()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1CA85C368();
  __asm { BR              X9 }
}

uint64_t sub_1CA2A7018()
{
  sub_1CA85B4B0();
  swift_bridgeObjectRelease();
  return sub_1CA85C3B0();
}

uint64_t sub_1CA2A709C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1CA2BF624();
  *a1 = result;
  return result;
}

uint64_t sub_1CA2A70C8()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1CA2A7100 + 4 * byte_1CA8D671C[*v0]))();
}

void sub_1CA2A7100(_QWORD *a1@<X8>)
{
  *a1 = 0x73636972796CLL;
  a1[1] = 0xE600000000000000;
}

void sub_1CA2A7118(char *a1@<X8>)
{
  strcpy(a1, "audio-analysis");
  a1[15] = -18;
}

void sub_1CA2A7140(_QWORD *a1@<X8>)
{
  *a1 = 0x612D6C6D78656C66;
  a1[1] = 0xEF736973796C616ELL;
}

uint64_t sub_1CA2A7168()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1CA2A71A0 + 4 * byte_1CA8D6720[*v0]))(0x656C617669757165, 0xEB0000000073746ELL);
}

uint64_t sub_1CA2A71A0()
{
  return 0x73636972796CLL;
}

uint64_t sub_1CA2A71B4()
{
  return 0x6E612D6F69647561;
}

uint64_t sub_1CA2A71D8()
{
  return 0x612D6C6D78656C66;
}

uint64_t sub_1CA2A71FC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1CA2BF624();
  *a1 = result;
  return result;
}

void sub_1CA2A7220(_BYTE *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_1CA2A722C()
{
  sub_1CA2B6450();
  return sub_1CA85C3E0();
}

uint64_t sub_1CA2A7254()
{
  sub_1CA2B6450();
  return sub_1CA85C3EC();
}

uint64_t static MusicKitCatalogSong.Relationships.Equivalents.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  return sub_1CA2A7E3C(*a1, *a2) & 1;
}

uint64_t sub_1CA2A729C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (v2 && a1 != a2)
  {
    v3 = (uint64_t *)(a1 + 40);
    v4 = (uint64_t *)(a2 + 40);
    do
    {
      v6 = *(v3 - 1);
      v5 = *v3;
      v7 = *(v4 - 1);
      v8 = *v4;
      if (*v3 == 1)
      {
        if (v8 != 1)
          goto LABEL_20;
        sub_1CA2C13B8(*(v4 - 1), 1);
      }
      else
      {
        if (v8 == 1)
        {
          sub_1CA2C13B8(*(v3 - 1), *v3);
          sub_1CA2C13B8(v6, v5);
          sub_1CA2C13B8(v6, v5);
          sub_1CA2C13B8(v7, 1);
          swift_bridgeObjectRelease();
LABEL_20:
          sub_1CA2C13B8(v7, v8);
          sub_1CA2C13CC(v6, v5);
          sub_1CA2C13CC(v7, v8);
          sub_1CA2C13CC(v6, v5);
          return 0;
        }
        if (v5)
        {
          if (!v8)
          {
            sub_1CA2C13B8(*(v3 - 1), *v3);
            swift_bridgeObjectRelease();
            return 0;
          }
          if (v6 == v7 && v5 == v8)
          {
            sub_1CA2C13B8(*(v3 - 1), *v3);
            swift_bridgeObjectRelease();
          }
          else
          {
            v9 = sub_1CA85C284();
            sub_1CA2C13B8(v6, v5);
            swift_bridgeObjectRelease();
            if ((v9 & 1) == 0)
              return 0;
          }
        }
        else
        {
          sub_1CA2C13B8(*(v3 - 1), 0);
          if (v8)
            return 0;
        }
      }
      v3 += 2;
      v4 += 2;
      --v2;
    }
    while (v2);
  }
  return 1;
}

uint64_t sub_1CA2A743C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t *i;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int v46;
  char v47;
  uint64_t v48;
  int v49;
  char v50;
  uint64_t v51;
  int v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (!v2 || a1 == a2)
    return 1;
  v3 = (uint64_t *)(a2 + 56);
  for (i = (uint64_t *)(a1 + 56); ; i += 10)
  {
    v6 = *(i - 3);
    v5 = *(i - 2);
    v7 = *(i - 1);
    v40 = i[1];
    v41 = i[2];
    v43 = i[3];
    v44 = *i;
    v8 = i[5];
    v42 = i[4];
    v9 = i[6];
    v10 = *(v3 - 3);
    v11 = *(v3 - 2);
    v12 = *(v3 - 1);
    v13 = *v3;
    v14 = v3[1];
    v15 = v3[2];
    v16 = v3[3];
    v17 = v3[4];
    v18 = v3[5];
    v19 = v3[6];
    if (v6 != 1)
      break;
    if (v10 != 1)
      goto LABEL_15;
    sub_1CA2C0DBC(1, v11, v12, v13, v14, v15, v16, v17, v3[5]);
LABEL_7:
    v3 += 10;
    if (!--v2)
      return 1;
  }
  v58 = *(i - 3);
  v59 = v5;
  v60 = v7;
  v61 = v44;
  v62 = v40;
  v63 = v41;
  v64 = v43;
  v65 = v42;
  v66 = v8;
  v67 = v9;
  v35 = v15;
  v36 = v17;
  v30 = v14;
  v31 = v16;
  v28 = v12;
  v29 = v13;
  v34 = v11;
  v27 = v18;
  v39 = v19;
  v32 = v5;
  v33 = v8;
  v37 = v9;
  if (v10 != 1)
  {
    v45 = v10;
    v46 = v11;
    v47 = BYTE4(v11);
    v48 = v12;
    v49 = v13;
    v50 = BYTE4(v13);
    v51 = v14;
    v52 = v15;
    v53 = BYTE4(v15);
    v54 = v16;
    v55 = v17;
    v56 = v18;
    v57 = v19;
    v20 = v8;
    v38 = v10;
    v21 = v18;
    sub_1CA2C0DBC(v6, v5, v7, v44, v40, v41, v43, v42, v8);
    sub_1CA2C0DBC(v6, v32, v7, v44, v40, v41, v43, v42, v20);
    sub_1CA2C0DBC(v38, v34, v28, v29, v30, v35, v31, v36, v21);
    sub_1CA2C0DBC(v6, v32, v7, v44, v40, v41, v43, v42, v33);
    sub_1CA2C0DBC(v38, v34, v28, v29, v30, v35, v31, v36, v27);
    v26 = _s11PhotosGraph19MusicKitCatalogSongV13RelationshipsV26FlexMLAnalysisRelationshipV0hI4DataV0hI10AttributesV2eeoiySbAK_AKtFZ_0((uint64_t)&v58, (uint64_t)&v45);
    v22 = v66;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1CA2B5FC4(v22);
    sub_1CA2C0EDC(v38, v34, v28, v29, v30, v35, v31, v36, v27);
    sub_1CA2C0EDC(v6, v32, v7, v44, v40, v41, v43, v42, v33);
    sub_1CA2C0EDC(v38, v34, v28, v29, v30, v35, v31, v36, v27);
    sub_1CA2C0EDC(v6, v32, v7, v44, v40, v41, v43, v42, v33);
    if (!v26)
      return 0;
    goto LABEL_7;
  }
  sub_1CA2C0DBC(v6, v5, v7, v44, v40, v41, v43, v42, v8);
  sub_1CA2C0DBC(v6, v32, v7, v44, v40, v41, v43, v42, v33);
  sub_1CA2C0DBC(v6, v32, v7, v44, v40, v41, v43, v42, v33);
  sub_1CA2C0DBC(1, v34, v28, v29, v30, v35, v31, v36, v27);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1CA2B5FC4(v33);
  v10 = 1;
  v19 = v39;
  v18 = v27;
  v12 = v28;
  v11 = v34;
  v15 = v35;
  v13 = v29;
  v14 = v30;
  v16 = v31;
  v5 = v32;
  v17 = v36;
  v9 = v37;
  v8 = v33;
LABEL_15:
  v58 = v6;
  v59 = v5;
  v60 = v7;
  v61 = v44;
  v62 = v40;
  v63 = v41;
  v64 = v43;
  v65 = v42;
  v66 = v8;
  v67 = v9;
  v68 = v10;
  v69 = v11;
  v70 = v12;
  v71 = v13;
  v72 = v14;
  v73 = v15;
  v74 = v16;
  v75 = v17;
  v76 = v18;
  v77 = v19;
  v24 = v8;
  v25 = v5;
  sub_1CA2C0DBC(v10, v11, v12, v13, v14, v15, v16, v17, v18);
  sub_1CA2C0E34(&v58);
  sub_1CA2C0EDC(v6, v25, v7, v44, v40, v41, v43, v42, v24);
  return 0;
}

uint64_t sub_1CA2A7944(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  float v11;
  uint64_t v12;
  float v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  float *v17;
  float *v18;
  uint64_t j;
  float v20;
  float v21;
  float v22;
  float *v23;
  float *v24;
  uint64_t i;
  float v26;
  float v27;
  float v28;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (v2 && a1 != a2)
  {
    v3 = 0;
    v4 = a1 + 32;
    result = 1;
    while (1)
    {
      v6 = v4 + 32 * v3;
      v7 = a2 + 32 + 32 * v3;
      if (*(float *)v6 != *(float *)v7)
        break;
      v8 = *(_QWORD *)(v6 + 8);
      v9 = *(_QWORD *)(v7 + 8);
      v10 = *(_QWORD *)(v8 + 16);
      if (v10 != *(_QWORD *)(v9 + 16))
        break;
      v11 = *(float *)(v6 + 16);
      v12 = *(_QWORD *)(v6 + 24);
      v13 = *(float *)(v7 + 16);
      v14 = *(_QWORD *)(v7 + 24);
      if (v10)
        v15 = v8 == v9;
      else
        v15 = 1;
      if (!v15)
      {
        if (*(float *)(v8 + 32) != *(float *)(v9 + 32))
          return 0;
        if (v10 != 1)
        {
          if (*(float *)(v8 + 36) != *(float *)(v9 + 36))
            return 0;
          v23 = (float *)(v8 + 40);
          v24 = (float *)(v9 + 40);
          for (i = v10 - 2; i; --i)
          {
            v26 = *v23++;
            v27 = v26;
            v28 = *v24++;
            if (v27 != v28)
              return 0;
          }
        }
      }
      if (v11 != v13)
        break;
      v16 = *(_QWORD *)(v12 + 16);
      if (v16 != *(_QWORD *)(v14 + 16))
        break;
      if (v16 && v12 != v14)
      {
        if (*(float *)(v12 + 32) != *(float *)(v14 + 32))
          return 0;
        if (v16 != 1)
        {
          if (*(float *)(v12 + 36) != *(float *)(v14 + 36))
            return 0;
          v17 = (float *)(v12 + 40);
          v18 = (float *)(v14 + 40);
          for (j = v16 - 2; j; --j)
          {
            v20 = *v17++;
            v21 = v20;
            v22 = *v18++;
            if (v21 != v22)
              return 0;
          }
        }
      }
      if (++v3 == v2)
        return result;
    }
    return 0;
  }
  return 1;
}

BOOL sub_1CA2A7AA0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  float *v3;
  float *v4;
  uint64_t v5;
  _BOOL8 result;
  float v7;
  float v8;
  float v9;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (!v2 || a1 == a2)
    return 1;
  if (*(float *)(a1 + 32) != *(float *)(a2 + 32))
    return 0;
  v3 = (float *)(a1 + 36);
  v4 = (float *)(a2 + 36);
  v5 = v2 - 1;
  do
  {
    result = v5 == 0;
    if (!v5)
      break;
    v7 = *v3++;
    v8 = v7;
    v9 = *v4++;
    --v5;
  }
  while (v8 == v9);
  return result;
}

uint64_t sub_1CA2A7B0C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char *v3;
  char *v4;
  uint64_t i;
  char v6;
  _BYTE v8[360];
  _BYTE __src[360];
  uint64_t v10[45];
  _BYTE v11[360];
  _BYTE v12[360];
  uint64_t v13;
  _BYTE __dst[360];
  _BYTE v15[360];
  _BYTE v16[360];

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (!v2 || a1 == a2)
    return 1;
  v3 = (char *)(a1 + 32);
  v4 = (char *)(a2 + 32);
  for (i = v2 - 1; ; --i)
  {
    memcpy(__dst, v3, 0x162uLL);
    memcpy(v15, v4, 0x162uLL);
    sub_1CA24EEF8((uint64_t)__dst, (uint64_t)v16, &qword_1ED872D58);
    if (sub_1CA2C0F50((uint64_t)v16) != 1)
      break;
    sub_1CA24EEF8((uint64_t)v15, (uint64_t)v12, &qword_1ED872D58);
    if (sub_1CA2C0F50((uint64_t)v12) != 1)
      goto LABEL_14;
    sub_1CA2C124C((uint64_t)v15, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, __int16))sub_1CA2C0F6C);
LABEL_10:
    if (!i)
      return 1;
    v4 += 360;
    v3 += 360;
  }
  sub_1CA24EEF8((uint64_t)__dst, (uint64_t)v11, &qword_1ED872D58);
  sub_1CA24EEF8((uint64_t)v15, (uint64_t)v12, &qword_1ED872D58);
  if (sub_1CA2C0F50((uint64_t)v12) != 1)
  {
    sub_1CA24EEF8((uint64_t)v15, (uint64_t)__src, &qword_1ED872D58);
    memcpy(v8, __src, 0x162uLL);
    sub_1CA2C124C((uint64_t)__dst, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, __int16))sub_1CA2C0F6C);
    sub_1CA2C124C((uint64_t)__dst, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, __int16))sub_1CA2C0F6C);
    sub_1CA2C124C((uint64_t)v15, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, __int16))sub_1CA2C0F6C);
    sub_1CA2C124C((uint64_t)__dst, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, __int16))sub_1CA2C0F6C);
    sub_1CA2C124C((uint64_t)v15, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, __int16))sub_1CA2C0F6C);
    v6 = _s11PhotosGraph19MusicKitCatalogSongV13RelationshipsV25AudioAnalysisRelationshipV0hI4DataV0hI10AttributesV2eeoiySbAK_AKtFZ_0((uint64_t)v11, (uint64_t)v8);
    memcpy(v10, v11, 0x162uLL);
    sub_1CA2B5850(v10, (void (*)(void))sub_1CA2B525C, (void (*)(uint64_t, uint64_t))sub_1CA2B5604);
    sub_1CA2C124C((uint64_t)v15, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, __int16))sub_1CA2C11D8);
    sub_1CA2C124C((uint64_t)__dst, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, __int16))sub_1CA2C11D8);
    sub_1CA2C124C((uint64_t)v15, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, __int16))sub_1CA2C11D8);
    sub_1CA2C124C((uint64_t)__dst, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, __int16))sub_1CA2C11D8);
    if ((v6 & 1) == 0)
      return 0;
    goto LABEL_10;
  }
  memcpy(v10, v11, 0x162uLL);
  sub_1CA2C124C((uint64_t)__dst, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, __int16))sub_1CA2C0F6C);
  sub_1CA2C124C((uint64_t)__dst, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, __int16))sub_1CA2C0F6C);
  sub_1CA2C124C((uint64_t)__dst, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, __int16))sub_1CA2C0F6C);
  sub_1CA2C124C((uint64_t)v15, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, __int16))sub_1CA2C0F6C);
  sub_1CA2B5850(v10, (void (*)(void))sub_1CA2B525C, (void (*)(uint64_t, uint64_t))sub_1CA2B5604);
LABEL_14:
  sub_1CA24EEF8((uint64_t)__dst, (uint64_t)v12, &qword_1ED872D58);
  sub_1CA24EEF8((uint64_t)v15, (uint64_t)&v13, &qword_1ED872D58);
  sub_1CA2C124C((uint64_t)v15, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, __int16))sub_1CA2C0F6C);
  sub_1CA2C0FE0((uint64_t)v12);
  sub_1CA2C124C((uint64_t)__dst, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, __int16))sub_1CA2C11D8);
  return 0;
}

BOOL sub_1CA2A7DD0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v5;
  _BOOL8 result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2 = a1[2];
  if (v2 != a2[2])
    return 0;
  if (!v2 || a1 == a2)
    return 1;
  if (a1[4] != a2[4])
    return 0;
  v3 = a1 + 5;
  v4 = a2 + 5;
  v5 = v2 - 1;
  do
  {
    result = v5 == 0;
    if (!v5)
      break;
    v8 = *v3++;
    v7 = v8;
    v9 = *v4++;
    --v5;
  }
  while (v7 == v9);
  return result;
}

uint64_t sub_1CA2A7E3C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *i;
  BOOL v5;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (v2 && a1 != a2)
  {
    v3 = (_QWORD *)(a1 + 40);
    for (i = (_QWORD *)(a2 + 40); ; i += 2)
    {
      v5 = *(v3 - 1) == *(i - 1) && *v3 == *i;
      if (!v5 && (sub_1CA85C284() & 1) == 0)
        break;
      v3 += 2;
      if (!--v2)
        return 1;
    }
    return 0;
  }
  return 1;
}

uint64_t sub_1CA2A7EC0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  float *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (v2 && a1 != a2)
  {
    v3 = (_QWORD *)(a2 + 64);
    v4 = (float *)(a1 + 64);
    do
    {
      v5 = *((_QWORD *)v4 - 2);
      v6 = *((_QWORD *)v4 - 1);
      v7 = *(_QWORD *)v4;
      v8 = *((_BYTE *)v3 - 28);
      v9 = *(v3 - 2);
      v11 = *(v3 - 1);
      v10 = *v3;
      if ((*(_BYTE *)(v4 - 7) & 1) != 0)
      {
        if (!*((_BYTE *)v3 - 28))
          return 0;
      }
      else
      {
        if (*(v4 - 8) != *((float *)v3 - 8))
          v8 = 1;
        if ((v8 & 1) != 0)
          return 0;
      }
      if (v5)
      {
        if (!v9 || (*((_QWORD *)v4 - 3) != *(v3 - 3) || v5 != v9) && (sub_1CA85C284() & 1) == 0)
          return 0;
      }
      else if (v9)
      {
        return 0;
      }
      if (v7)
      {
        if (!v10 || (v6 != v11 || v7 != v10) && (sub_1CA85C284() & 1) == 0)
          return 0;
      }
      else if (v10)
      {
        return 0;
      }
      v3 += 5;
      v4 += 10;
      --v2;
    }
    while (v2);
  }
  return 1;
}

uint64_t sub_1CA2A7FD0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  BOOL v5;
  char v6;
  uint64_t result;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *i;
  BOOL v11;

  v2 = a1[2];
  if (v2 != a2[2])
    return 0;
  if (!v2 || a1 == a2)
    return 1;
  v5 = a1[4] == a2[4] && a1[5] == a2[5];
  if (v5 || (v6 = sub_1CA85C284(), result = 0, (v6 & 1) != 0))
  {
    v8 = v2 - 1;
    if (!v8)
      return 1;
    v9 = a2 + 7;
    for (i = a1 + 7; ; i += 2)
    {
      v11 = *(i - 1) == *(v9 - 1) && *i == *v9;
      if (!v11 && (sub_1CA85C284() & 1) == 0)
        break;
      v9 += 2;
      if (!--v8)
        return 1;
    }
    return 0;
  }
  return result;
}

uint64_t sub_1CA2A8094(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  BOOL v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t *v30;
  uint64_t i;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  BOOL v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  int v45;
  int v46;
  _QWORD *v47;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (v2 && a1 != a2)
  {
    v3 = 0;
    v43 = a2 + 32;
    v44 = a1 + 32;
    v38 = *(_QWORD *)(a1 + 16);
    while (1)
    {
      v4 = v44 + 80 * v3;
      v6 = *(_QWORD **)(v4 + 16);
      v5 = *(_QWORD *)(v4 + 24);
      v8 = *(_QWORD *)(v4 + 32);
      v7 = *(_QWORD *)(v4 + 40);
      v10 = *(_QWORD *)(v4 + 48);
      v9 = *(_QWORD *)(v4 + 56);
      v47 = *(_QWORD **)(v4 + 64);
      v11 = v43 + 80 * v3;
      v13 = *(_QWORD **)(v11 + 16);
      v12 = *(_QWORD *)(v11 + 24);
      v14 = *(_QWORD *)(v11 + 32);
      v15 = *(_QWORD *)(v11 + 40);
      v16 = *(_QWORD *)(v11 + 48);
      v17 = *(_QWORD *)(v11 + 56);
      v18 = *(_QWORD **)(v11 + 64);
      v45 = *(unsigned __int8 *)(v11 + 72);
      v46 = *(unsigned __int8 *)(v4 + 72);
      if (*(_QWORD *)v4 != *(_QWORD *)v11 || *(_QWORD *)(v4 + 8) != *(_QWORD *)(v11 + 8))
      {
        v41 = *(_QWORD *)(v11 + 48);
        v42 = v3;
        v39 = *(_QWORD *)(v11 + 32);
        v40 = *(_QWORD **)(v11 + 64);
        v19 = *(_QWORD *)(v4 + 56);
        v20 = *(_QWORD *)(v4 + 40);
        v21 = *(_QWORD *)(v4 + 24);
        v22 = *(_QWORD *)(v11 + 24);
        v23 = sub_1CA85C284();
        v12 = v22;
        v5 = v21;
        v16 = v41;
        v3 = v42;
        v7 = v20;
        v2 = v38;
        v9 = v19;
        v14 = v39;
        v18 = v40;
        if ((v23 & 1) == 0)
          return 0;
      }
      v24 = v6[2];
      if (v24 != v13[2])
        return 0;
      if (v24)
        v25 = v6 == v13;
      else
        v25 = 1;
      if (!v25)
      {
        if (v6[4] != v13[4])
          return 0;
        if (v24 != 1)
        {
          if (v6[5] != v13[5])
            return 0;
          v29 = v6 + 6;
          v30 = v13 + 6;
          for (i = v24 - 2; i; --i)
          {
            v33 = *v29++;
            v32 = v33;
            v34 = *v30++;
            if (v32 != v34)
              return 0;
          }
        }
      }
      result = 0;
      if (v5 != v12 || v8 != v14 || v7 != v15)
        return result;
      if ((v10 != v16 || v9 != v17) && (sub_1CA85C284() & 1) == 0)
        return 0;
      v27 = v47[2];
      if (v27 != v18[2])
        return 0;
      if (v27 && v47 != v18)
      {
        if ((v47[4] != v18[4] || v47[5] != v18[5]) && (sub_1CA85C284() & 1) == 0)
          return 0;
        v28 = v27 - 1;
        if (v28)
        {
          v35 = v18 + 7;
          v36 = v47 + 7;
          do
          {
            v37 = *(v36 - 1) == *(v35 - 1) && *v36 == *v35;
            if (!v37 && (sub_1CA85C284() & 1) == 0)
              return 0;
            v35 += 2;
            v36 += 2;
          }
          while (--v28);
        }
      }
      if (v46 != v45)
        return 0;
      ++v3;
      result = 1;
      if (v3 == v2)
        return result;
    }
  }
  return 1;
}

uint64_t sub_1CA2A8314(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  float **v6;
  float *v7;
  float32x2_t *v8;
  float *v9;
  uint64_t v10;
  float *v11;
  float32x2_t v12;
  float32x2_t v13;
  BOOL v14;
  int32x2_t v15;
  uint64_t v16;
  float *v17;
  float *v18;
  uint64_t j;
  float v20;
  float v21;
  float v22;
  float *v23;
  float *v24;
  uint64_t i;
  float v26;
  float v27;
  float v28;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (v2 && a1 != a2)
  {
    v3 = 0;
    v4 = a1 + 32;
    result = 1;
    while (1)
    {
      v6 = (float **)(v4 + 24 * v3);
      v7 = *v6;
      v8 = (float32x2_t *)(a2 + 32 + 24 * v3);
      v9 = (float *)*v8;
      v10 = *((_QWORD *)*v6 + 2);
      if (v10 != *(_QWORD *)(*(_QWORD *)v8 + 16))
        break;
      v11 = v6[2];
      v12 = (float32x2_t)v6[1];
      v13 = v8[2];
      if (v10)
        v14 = v7 == v9;
      else
        v14 = 1;
      if (!v14)
      {
        if (v7[8] != v9[8])
          return 0;
        if (v10 != 1)
        {
          if (v7[9] != v9[9])
            return 0;
          v23 = v7 + 10;
          v24 = v9 + 10;
          for (i = v10 - 2; i; --i)
          {
            v26 = *v23++;
            v27 = v26;
            v28 = *v24++;
            if (v27 != v28)
              return 0;
          }
        }
      }
      v15 = vceq_f32(v12, v8[1]);
      if ((v15.i32[0] & v15.i32[1] & 1) == 0)
        break;
      v16 = *((_QWORD *)v11 + 2);
      if (v16 != *(_QWORD *)(*(_QWORD *)&v13 + 16))
        break;
      if (v16 && v11 != (float *)v13)
      {
        if (v11[8] != *(float *)(*(_QWORD *)&v13 + 32))
          return 0;
        if (v16 != 1)
        {
          if (v11[9] != *(float *)(*(_QWORD *)&v13 + 36))
            return 0;
          v17 = v11 + 10;
          v18 = (float *)(*(_QWORD *)&v13 + 40);
          for (j = v16 - 2; j; --j)
          {
            v20 = *v17++;
            v21 = v20;
            v22 = *v18++;
            if (v21 != v22)
              return 0;
          }
        }
      }
      if (++v3 == v2)
        return result;
    }
    return 0;
  }
  return 1;
}

uint64_t sub_1CA2A8474(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  float *v7;
  uint64_t v8;
  float *v9;
  uint64_t v10;
  float v11;
  uint64_t v12;
  float v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  float *v17;
  float *v18;
  uint64_t j;
  float v20;
  float v21;
  float v22;
  float *v23;
  float *v24;
  uint64_t i;
  float v26;
  float v27;
  float v28;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (v2 && a1 != a2)
  {
    v3 = 0;
    v4 = a1 + 32;
    result = 1;
    while (1)
    {
      v6 = v4 + 24 * v3;
      v7 = *(float **)v6;
      v8 = a2 + 32 + 24 * v3;
      v9 = *(float **)v8;
      v10 = *(_QWORD *)(*(_QWORD *)v6 + 16);
      if (v10 != *(_QWORD *)(*(_QWORD *)v8 + 16))
        break;
      v11 = *(float *)(v6 + 8);
      v12 = *(_QWORD *)(v6 + 16);
      v13 = *(float *)(v8 + 8);
      v14 = *(_QWORD *)(v8 + 16);
      if (v10)
        v15 = v7 == v9;
      else
        v15 = 1;
      if (!v15)
      {
        if (v7[8] != v9[8])
          return 0;
        if (v10 != 1)
        {
          if (v7[9] != v9[9])
            return 0;
          v23 = v7 + 10;
          v24 = v9 + 10;
          for (i = v10 - 2; i; --i)
          {
            v26 = *v23++;
            v27 = v26;
            v28 = *v24++;
            if (v27 != v28)
              return 0;
          }
        }
      }
      if (v11 != v13)
        break;
      v16 = *(_QWORD *)(v12 + 16);
      if (v16 != *(_QWORD *)(v14 + 16))
        break;
      if (v16 && v12 != v14)
      {
        if (*(float *)(v12 + 32) != *(float *)(v14 + 32))
          return 0;
        if (v16 != 1)
        {
          if (*(float *)(v12 + 36) != *(float *)(v14 + 36))
            return 0;
          v17 = (float *)(v12 + 40);
          v18 = (float *)(v14 + 40);
          for (j = v16 - 2; j; --j)
          {
            v20 = *v17++;
            v21 = v20;
            v22 = *v18++;
            if (v21 != v22)
              return 0;
          }
        }
      }
      if (++v3 == v2)
        return result;
    }
    return 0;
  }
  return 1;
}

uint64_t sub_1CA2A85C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  char v15;
  uint64_t v17;

  v4 = type metadata accessor for Song();
  MEMORY[0x1E0C80A78](v4);
  v6 = (uint64_t *)((char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v7);
  v10 = (uint64_t *)((char *)&v17 - v9);
  v11 = *(_QWORD *)(a1 + 16);
  if (v11 != *(_QWORD *)(a2 + 16))
    return 0;
  if (v11 && a1 != a2)
  {
    v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    v13 = *(_QWORD *)(v8 + 72);
    do
    {
      sub_1CA268434(a1 + v12, (uint64_t)v10);
      sub_1CA268434(a2 + v12, (uint64_t)v6);
      if (*v10 == *v6 && v10[1] == v6[1])
      {
        sub_1CA268588((uint64_t)v6);
        sub_1CA268588((uint64_t)v10);
      }
      else
      {
        v15 = sub_1CA85C284();
        sub_1CA268588((uint64_t)v6);
        sub_1CA268588((uint64_t)v10);
        if ((v15 & 1) == 0)
          return 0;
      }
      v12 += v13;
      --v11;
    }
    while (v11);
  }
  return 1;
}

id sub_1CA2A86F4(unint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id result;
  void *v12;
  id v13;
  void *v14;
  char v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  id v19;
  void *v20;
  id v21;
  void *v22;
  unint64_t v24;
  unint64_t v25;
  void **v26;
  void *v27;
  void *v28;
  void *v29;
  uint64_t v30;
  unint64_t v31;

  v2 = a2;
  v3 = a1;
  v4 = a1 >> 62;
  if (!(a1 >> 62))
  {
    v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    v6 = a2 >> 62;
    if (!(a2 >> 62))
      goto LABEL_3;
LABEL_47:
    swift_bridgeObjectRetain();
    v30 = sub_1CA85C08C();
    swift_bridgeObjectRelease();
    if (v5 == v30)
      goto LABEL_4;
LABEL_48:
    LOBYTE(v5) = 0;
    return (id)(v5 & 1);
  }
  swift_bridgeObjectRetain();
  v5 = sub_1CA85C08C();
  swift_bridgeObjectRelease();
  v6 = (unint64_t)v2 >> 62;
  if ((unint64_t)v2 >> 62)
    goto LABEL_47;
LABEL_3:
  if (v5 != *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_48;
LABEL_4:
  if (!v5)
    goto LABEL_37;
  v7 = v3 & 0xFFFFFFFFFFFFFF8;
  if (v3 < 0)
    v7 = v3;
  if (!v4)
    v7 = (v3 & 0xFFFFFFFFFFFFFF8) + 32;
  v8 = v2 & 0xFFFFFFFFFFFFFF8;
  v9 = (v2 & 0xFFFFFFFFFFFFFF8) + 32;
  if (v2 < 0)
    v10 = v2;
  else
    v10 = v2 & 0xFFFFFFFFFFFFFF8;
  if (v6)
    v9 = v10;
  if (v7 == v9)
  {
LABEL_37:
    LOBYTE(v5) = 1;
    return (id)(v5 & 1);
  }
  if ((v5 & 0x8000000000000000) != 0)
    goto LABEL_54;
  v31 = v3 & 0xC000000000000001;
  if ((v3 & 0xC000000000000001) != 0)
    goto LABEL_55;
  for (result = *(id *)(v3 + 32); ; result = (id)MEMORY[0x1CAA4DD64](0, v3))
  {
    v12 = result;
    if ((v2 & 0xC000000000000001) == 0)
      break;
    v13 = (id)MEMORY[0x1CAA4DD64](0, v2);
LABEL_21:
    v14 = v13;
    sub_1CA2C0D80();
    v15 = sub_1CA85BC84();

    if ((v15 & 1) == 0)
      goto LABEL_48;
    v16 = v5 - 1;
    if (v5 == 1)
      return (id)(v5 & 1);
    if (((v2 | v3) & 0xC000000000000001) != 0)
    {
      v17 = 0;
      v18 = v5 - 2;
      while (v16 != v17)
      {
        v5 = v17 + 1;
        if (v31)
          v19 = (id)MEMORY[0x1CAA4DD64](v17 + 1, v3);
        else
          v19 = *(id *)(v3 + 40 + 8 * v17);
        v20 = v19;
        if ((v2 & 0xC000000000000001) != 0)
        {
          v21 = (id)MEMORY[0x1CAA4DD64](v17 + 1, v2);
        }
        else
        {
          if (v5 >= *(_QWORD *)(v8 + 16))
            goto LABEL_53;
          v21 = *(id *)(v2 + 40 + 8 * v17);
        }
        v22 = v21;
        v5 = sub_1CA85BC84();

        if ((v5 & 1) != 0 && v18 != v17++)
          continue;
        return (id)(v5 & 1);
      }
      __break(1u);
    }
    else
    {
      v24 = *(_QWORD *)(v8 + 16);
      if (v24 <= 1)
        v24 = 1;
      v25 = v24 - 1;
      v26 = (void **)(v3 + 40);
      v8 = v2 + 40;
      while (v16)
      {
        if (!v25)
          goto LABEL_52;
        v28 = *v26++;
        v27 = v28;
        v29 = *(void **)v8;
        v8 += 8;
        v2 = v27;
        v3 = v29;
        v5 = sub_1CA85BC84();

        if ((v5 & 1) != 0)
        {
          --v25;
          if (--v16)
            continue;
        }
        return (id)(v5 & 1);
      }
    }
    __break(1u);
LABEL_52:
    __break(1u);
LABEL_53:
    __break(1u);
LABEL_54:
    __break(1u);
LABEL_55:
    ;
  }
  if (*(_QWORD *)(v8 + 16))
  {
    v13 = *(id *)(v2 + 32);
    goto LABEL_21;
  }
  __break(1u);
  return result;
}

uint64_t sub_1CA2A89D8()
{
  return 1635017060;
}

uint64_t sub_1CA2A89EC()
{
  sub_1CA2B2C74();
  return sub_1CA85C3E0();
}

uint64_t sub_1CA2A8A14()
{
  sub_1CA2B2C74();
  return sub_1CA85C3EC();
}

uint64_t MusicKitCatalogSong.Relationships.Equivalents.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _QWORD v9[2];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94C5A0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1CA2B2C74();
  sub_1CA85C3D4();
  v9[1] = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94C5B0);
  sub_1CA2B6780(&qword_1EF94C5B8, &qword_1EF94C5B0, (uint64_t (*)(void))sub_1CA2B2CB8, MEMORY[0x1E0DEAF10]);
  sub_1CA85C23C();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t MusicKitCatalogSong.Relationships.Equivalents.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _QWORD v10[2];

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94C5C8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1CA2B2C74();
  sub_1CA85C3C8();
  if (!v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94C5B0);
    sub_1CA2B6780(&qword_1EF94C5D0, &qword_1EF94C5B0, (uint64_t (*)(void))sub_1CA2B2CFC, MEMORY[0x1E0DEAF40]);
    sub_1CA85C1A0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v10[1];
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1CA2A8CAC(uint64_t *a1, uint64_t *a2)
{
  return sub_1CA2A7E3C(*a1, *a2) & 1;
}

uint64_t sub_1CA2A8CCC@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return MusicKitCatalogSong.Relationships.Equivalents.init(from:)(a1, a2);
}

uint64_t sub_1CA2A8CE0(_QWORD *a1)
{
  return MusicKitCatalogSong.Relationships.Equivalents.encode(to:)(a1);
}

uint64_t static MusicKitCatalogSong.Relationships.Lyrics.LyricsData.LyricAttributes.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  BOOL v5;

  v3 = a1[1];
  v4 = a2[1];
  if (v3)
  {
    if (v4)
    {
      v5 = *a1 == *a2 && v3 == v4;
      if (v5 || (sub_1CA85C284() & 1) != 0)
        return 1;
    }
  }
  else if (!v4)
  {
    return 1;
  }
  return 0;
}

uint64_t sub_1CA2A8D4C()
{
  return 1819112564;
}

uint64_t sub_1CA2A8D5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 1819112564 && a2 == 0xE400000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1CA85C284();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1CA2A8DE0()
{
  sub_1CA2B2D40();
  return sub_1CA85C3E0();
}

uint64_t sub_1CA2A8E08()
{
  sub_1CA2B2D40();
  return sub_1CA85C3EC();
}

uint64_t MusicKitCatalogSong.Relationships.Lyrics.LyricsData.LyricAttributes.encode(to:)(_QWORD *a1)
{
  return sub_1CA2AF94C(a1, &qword_1EF94C5E0, (void (*)(void))sub_1CA2B2D40, (uint64_t)&type metadata for MusicKitCatalogSong.Relationships.Lyrics.LyricsData.LyricAttributes.CodingKeys, (void (*)(uint64_t, uint64_t))MEMORY[0x1E0DED090]);
}

uint64_t MusicKitCatalogSong.Relationships.Lyrics.LyricsData.LyricAttributes.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94C5F0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1CA2B2D40();
  sub_1CA85C3C8();
  if (!v2)
  {
    v9 = sub_1CA85C110();
    v11 = v10;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v9;
    a2[1] = v11;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1CA2A8F80(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  BOOL v5;

  v3 = a1[1];
  v4 = a2[1];
  if (v3)
  {
    if (v4)
    {
      v5 = *a1 == *a2 && v3 == v4;
      if (v5 || (sub_1CA85C284() & 1) != 0)
        return 1;
    }
  }
  else if (!v4)
  {
    return 1;
  }
  return 0;
}

uint64_t sub_1CA2A8FD8@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return MusicKitCatalogSong.Relationships.Lyrics.LyricsData.LyricAttributes.init(from:)(a1, a2);
}

uint64_t sub_1CA2A8FEC(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_1CA2AFBE4(a1, a2, a3, &qword_1EF94C5E0, (void (*)(void))sub_1CA2B2D40, (uint64_t)&type metadata for MusicKitCatalogSong.Relationships.Lyrics.LyricsData.LyricAttributes.CodingKeys, (void (*)(uint64_t, uint64_t))MEMORY[0x1E0DED090]);
}

uint64_t sub_1CA2A9024()
{
  return 0x7475626972747461;
}

uint64_t sub_1CA2A9044()
{
  sub_1CA2B4F80();
  return sub_1CA85C3E0();
}

uint64_t sub_1CA2A906C()
{
  sub_1CA2B4F80();
  return sub_1CA85C3EC();
}

uint64_t MusicKitCatalogSong.Relationships.Lyrics.LyricsData.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v10[2];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94C5F8);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v1;
  v7 = v1[1];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1CA2B4F80();
  sub_1CA85C3D4();
  v10[0] = v8;
  v10[1] = v7;
  sub_1CA2B4FC4();
  sub_1CA85C1E8();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t MusicKitCatalogSong.Relationships.Lyrics.LyricsData.init(from:)@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  __int128 v10;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94C610);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1CA2B4F80();
  sub_1CA85C3C8();
  if (!v2)
  {
    sub_1CA2B5008();
    sub_1CA85C14C();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v10;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1CA2A92B8@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  return MusicKitCatalogSong.Relationships.Lyrics.LyricsData.init(from:)(a1, a2);
}

uint64_t sub_1CA2A92CC(_QWORD *a1)
{
  return MusicKitCatalogSong.Relationships.Lyrics.LyricsData.encode(to:)(a1);
}

uint64_t static MusicKitCatalogSong.Relationships.Lyrics.== infix(_:_:)(_QWORD *a1, uint64_t *a2)
{
  return sub_1CA2AF3AC(a1, a2, sub_1CA2A729C);
}

uint64_t sub_1CA2A92EC()
{
  sub_1CA2B504C();
  return sub_1CA85C3E0();
}

uint64_t sub_1CA2A9314()
{
  sub_1CA2B504C();
  return sub_1CA85C3EC();
}

uint64_t MusicKitCatalogSong.Relationships.Lyrics.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _QWORD v9[2];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94C620);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1CA2B504C();
  sub_1CA85C3D4();
  v9[1] = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94C630);
  sub_1CA2B6780(&qword_1EF94C638, &qword_1EF94C630, (uint64_t (*)(void))sub_1CA2B5090, MEMORY[0x1E0DEAF10]);
  sub_1CA85C1E8();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t MusicKitCatalogSong.Relationships.Lyrics.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _QWORD v10[2];

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94C648);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1CA2B504C();
  sub_1CA85C3C8();
  if (!v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94C630);
    sub_1CA2B6780(&qword_1EF94C650, &qword_1EF94C630, (uint64_t (*)(void))sub_1CA2B50D4, MEMORY[0x1E0DEAF40]);
    sub_1CA85C14C();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v10[1];
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1CA2A95AC(_QWORD *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_1CA2AF770(a1, a2, a3, a4, sub_1CA2A729C);
}

uint64_t sub_1CA2A95B8@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return MusicKitCatalogSong.Relationships.Lyrics.init(from:)(a1, a2);
}

uint64_t sub_1CA2A95CC(_QWORD *a1)
{
  return MusicKitCatalogSong.Relationships.Lyrics.encode(to:)(a1);
}

uint64_t sub_1CA2A95E4()
{
  _BYTE *v0;

  if (*v0)
    return 1701080941;
  else
    return 0x63696E6F74;
}

uint64_t sub_1CA2A9614@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1CA2BF66C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1CA2A9638()
{
  sub_1CA2B5118();
  return sub_1CA85C3E0();
}

uint64_t sub_1CA2A9660()
{
  sub_1CA2B5118();
  return sub_1CA85C3EC();
}

uint64_t MusicKitCatalogSong.Relationships.AudioAnalysisRelationship.AudioAnalysisData.AudioAnalysisAttributes.AudioAnalysisKey.AudioAnalysisKeyAttributes.encode(to:)(_QWORD *a1)
{
  return sub_1CA2A96BC(a1, &qword_1EF94C660, (void (*)(void))sub_1CA2B5118, (uint64_t)&type metadata for MusicKitCatalogSong.Relationships.AudioAnalysisRelationship.AudioAnalysisData.AudioAnalysisAttributes.AudioAnalysisKey.AudioAnalysisKeyAttributes.CodingKeys, (void (*)(uint64_t, uint64_t, char *, uint64_t))MEMORY[0x1E0DED090]);
}

uint64_t sub_1CA2A96BC(_QWORD *a1, uint64_t *a2, void (*a3)(void), uint64_t a4, void (*a5)(uint64_t, uint64_t, char *, uint64_t))
{
  uint64_t *v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, char *, uint64_t);
  uint64_t v17;
  uint64_t v18;
  void (*v19)(void);
  uint64_t v20;
  void (*v21)(uint64_t, uint64_t, char *, uint64_t);
  uint64_t v22;
  char v23;
  char v24;

  v21 = a5;
  v19 = a3;
  v7 = __swift_instantiateConcreteTypeFromMangledName(a2);
  v22 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *v5;
  v10 = v5[1];
  v12 = v5[2];
  v17 = v5[3];
  v18 = v12;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v19();
  sub_1CA85C3D4();
  v24 = 0;
  v13 = v10;
  v14 = v20;
  v15 = v21;
  v21(v11, v13, &v24, v7);
  if (!v14)
  {
    v23 = 1;
    v15(v18, v17, &v23, v7);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v9, v7);
}

uint64_t MusicKitCatalogSong.Relationships.AudioAnalysisRelationship.AudioAnalysisData.AudioAnalysisAttributes.AudioAnalysisKey.AudioAnalysisKeyAttributes.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t);
  uint64_t v16;
  uint64_t v18;
  char v19;
  char v20;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94C670);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1CA2B5118();
  sub_1CA85C3C8();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v20 = 0;
  v9 = sub_1CA85C110();
  v11 = v10;
  v19 = 1;
  swift_bridgeObjectRetain();
  v12 = sub_1CA85C110();
  v14 = v13;
  v15 = *(void (**)(char *, uint64_t))(v6 + 8);
  v16 = v12;
  v15(v8, v5);
  *a2 = v9;
  a2[1] = v11;
  a2[2] = v16;
  a2[3] = v14;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1CA2A9998@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return MusicKitCatalogSong.Relationships.AudioAnalysisRelationship.AudioAnalysisData.AudioAnalysisAttributes.AudioAnalysisKey.AudioAnalysisKeyAttributes.init(from:)(a1, a2);
}

uint64_t sub_1CA2A99AC(_QWORD *a1)
{
  return MusicKitCatalogSong.Relationships.AudioAnalysisRelationship.AudioAnalysisData.AudioAnalysisAttributes.AudioAnalysisKey.AudioAnalysisKeyAttributes.encode(to:)(a1);
}

uint64_t sub_1CA2A99C4()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x6E696E6E69676562;
  if (*v0 != 1)
    v1 = 0x676E69646E65;
  if (*v0)
    return v1;
  else
    return 1852399981;
}

uint64_t sub_1CA2A9A18@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1CA2BF878(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1CA2A9A3C()
{
  sub_1CA2B515C();
  return sub_1CA85C3E0();
}

uint64_t sub_1CA2A9A64()
{
  sub_1CA2B515C();
  return sub_1CA85C3EC();
}

uint64_t MusicKitCatalogSong.Relationships.AudioAnalysisRelationship.AudioAnalysisData.AudioAnalysisAttributes.AudioAnalysisKey.encode(to:)(_QWORD *a1)
{
  __int128 *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  char v31;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94C678);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = *v1;
  v8 = *((_QWORD *)v1 + 2);
  v7 = *((_QWORD *)v1 + 3);
  v9 = *((_QWORD *)v1 + 4);
  v24 = *((_QWORD *)v1 + 5);
  v25 = v9;
  v10 = *((_QWORD *)v1 + 6);
  v22 = *((_QWORD *)v1 + 7);
  v23 = v10;
  v11 = *((_QWORD *)v1 + 8);
  v20 = *((_QWORD *)v1 + 9);
  v21 = v11;
  v12 = *((_QWORD *)v1 + 10);
  v18 = *((_QWORD *)v1 + 11);
  v19 = v12;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1CA2B515C();
  sub_1CA85C3D4();
  v28 = v26;
  v29 = v8;
  v30 = v7;
  v31 = 0;
  sub_1CA2B51A0();
  v13 = v27;
  sub_1CA85C1E8();
  if (!v13)
  {
    v15 = v19;
    v14 = v20;
    *(_QWORD *)&v28 = v25;
    *((_QWORD *)&v28 + 1) = v24;
    v16 = v21;
    v29 = v23;
    v30 = v22;
    v31 = 1;
    sub_1CA85C1E8();
    *(_QWORD *)&v28 = v16;
    *((_QWORD *)&v28 + 1) = v14;
    v29 = v15;
    v30 = v18;
    v31 = 2;
    sub_1CA85C1E8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t MusicKitCatalogSong.Relationships.AudioAnalysisRelationship.AudioAnalysisData.AudioAnalysisAttributes.AudioAnalysisKey.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94C690);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1CA2B515C();
  sub_1CA85C3C8();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v45 = 0;
  sub_1CA2B51E4();
  sub_1CA85C14C();
  v38 = a2;
  v10 = v43;
  v9 = v44;
  v45 = 1;
  v39 = v41;
  v40 = v42;
  sub_1CA2B5228(v41, v42);
  sub_1CA85C14C();
  v36 = v10;
  v37 = v9;
  v11 = v44;
  v45 = 2;
  v12 = v41;
  v34 = v43;
  v35 = v42;
  sub_1CA2B5228(v41, v42);
  v32 = 0;
  sub_1CA85C14C();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v33 = v12;
  v13 = v41;
  v14 = v42;
  v15 = v43;
  v31 = v42;
  v32 = v44;
  sub_1CA2B5228(v39, v40);
  v16 = v12;
  v17 = v12;
  v18 = v35;
  sub_1CA2B5228(v17, v35);
  v29 = v15;
  v30 = v13;
  sub_1CA2B5228(v13, v14);
  sub_1CA2B525C(v16, v18);
  v20 = v39;
  v19 = v40;
  v22 = v36;
  v21 = v37;
  sub_1CA2B525C(v39, v40);
  v23 = v38;
  *v38 = v20;
  v23[1] = v19;
  v23[2] = v22;
  v23[3] = v21;
  v25 = v33;
  v24 = v34;
  v26 = v35;
  v23[4] = v33;
  v23[5] = v26;
  v23[6] = v24;
  v23[7] = v11;
  v23[8] = v13;
  v27 = v31;
  v23[9] = v31;
  v23[10] = v15;
  v23[11] = v32;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  sub_1CA2B525C(v39, v40);
  sub_1CA2B525C(v25, v26);
  return sub_1CA2B525C(v30, v27);
}

uint64_t sub_1CA2A9FE0@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return MusicKitCatalogSong.Relationships.AudioAnalysisRelationship.AudioAnalysisData.AudioAnalysisAttributes.AudioAnalysisKey.init(from:)(a1, a2);
}

uint64_t sub_1CA2A9FF4(_QWORD *a1)
{
  return MusicKitCatalogSong.Relationships.AudioAnalysisRelationship.AudioAnalysisData.AudioAnalysisAttributes.AudioAnalysisKey.encode(to:)(a1);
}

BOOL static MusicKitCatalogSong.Relationships.AudioAnalysisRelationship.AudioAnalysisData.AudioAnalysisAttributes.AudioAnalysisSavoyAttributes.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_1CA2B3688(a1, a2);
}

uint64_t sub_1CA2AA020()
{
  sub_1CA2B5290();
  return sub_1CA85C3E0();
}

uint64_t sub_1CA2AA048()
{
  sub_1CA2B5290();
  return sub_1CA85C3EC();
}

uint64_t MusicKitCatalogSong.Relationships.AudioAnalysisRelationship.AudioAnalysisData.AudioAnalysisAttributes.AudioAnalysisSavoyAttributes.encode(to:)(_QWORD *a1)
{
  return sub_1CA2AA20C(a1, &qword_1EF94C6A0, (void (*)(void))sub_1CA2B5290);
}

uint64_t MusicKitCatalogSong.Relationships.AudioAnalysisRelationship.AudioAnalysisData.AudioAnalysisAttributes.AudioAnalysisSavoyAttributes.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1CA2AA3D0(a1, &qword_1EF94C6B0, (void (*)(void))sub_1CA2B5290, a2);
}

BOOL sub_1CA2AA0C8(uint64_t a1, uint64_t a2)
{
  return sub_1CA2B3688(a1, a2);
}

uint64_t sub_1CA2AA0E0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return MusicKitCatalogSong.Relationships.AudioAnalysisRelationship.AudioAnalysisData.AudioAnalysisAttributes.AudioAnalysisSavoyAttributes.init(from:)(a1, a2);
}

uint64_t sub_1CA2AA0F4(_QWORD *a1)
{
  return MusicKitCatalogSong.Relationships.AudioAnalysisRelationship.AudioAnalysisData.AudioAnalysisAttributes.AudioAnalysisSavoyAttributes.encode(to:)(a1);
}

BOOL static MusicKitCatalogSong.Relationships.AudioAnalysisRelationship.AudioAnalysisData.AudioAnalysisAttributes.AudioAnalysisTimeSeriesAttributes.AveragedTimeSeriesAttributes.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_1CA2B3688(a1, a2);
}

uint64_t sub_1CA2AA120()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 1801545072;
  if (*v0 != 1)
    v1 = 0x65676E6172;
  if (*v0)
    return v1;
  else
    return 0x65756C6176;
}

uint64_t sub_1CA2AA16C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1CA2BF744(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1CA2AA190()
{
  sub_1CA2B52D4();
  return sub_1CA85C3E0();
}

uint64_t sub_1CA2AA1B8()
{
  sub_1CA2B52D4();
  return sub_1CA85C3EC();
}

uint64_t MusicKitCatalogSong.Relationships.AudioAnalysisRelationship.AudioAnalysisData.AudioAnalysisAttributes.AudioAnalysisTimeSeriesAttributes.AveragedTimeSeriesAttributes.encode(to:)(_QWORD *a1)
{
  return sub_1CA2AA20C(a1, &qword_1EF94C6B8, (void (*)(void))sub_1CA2B52D4);
}

uint64_t sub_1CA2AA20C(_QWORD *a1, uint64_t *a2, void (*a3)(void))
{
  unsigned int *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  uint64_t v10;
  char v11;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(void);
  uint64_t v19;
  char v20;
  char v21;
  char v22;
  char v23;
  char v24;
  char v25;

  v18 = a3;
  v5 = __swift_instantiateConcreteTypeFromMangledName(a2);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = *v3;
  v9 = *((_BYTE *)v3 + 4);
  v16 = v3[2];
  v15 = *((unsigned __int8 *)v3 + 12);
  v14 = v3[4];
  HIDWORD(v13) = *((unsigned __int8 *)v3 + 20);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v18();
  sub_1CA85C3D4();
  v25 = 0;
  v22 = v9;
  v10 = v19;
  sub_1CA85C1D0();
  if (!v10)
  {
    v11 = BYTE4(v13);
    v24 = 1;
    v21 = v15;
    sub_1CA85C1D0();
    v23 = 2;
    v20 = v11;
    sub_1CA85C1D0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t MusicKitCatalogSong.Relationships.AudioAnalysisRelationship.AudioAnalysisData.AudioAnalysisAttributes.AudioAnalysisTimeSeriesAttributes.AveragedTimeSeriesAttributes.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1CA2AA3D0(a1, &qword_1ED8725B8, (void (*)(void))sub_1CA2B52D4, a2);
}

uint64_t sub_1CA2AA3D0@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X1>, void (*a3)(void)@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;
  char v21;

  v17 = a4;
  v18 = __swift_instantiateConcreteTypeFromMangledName(a2);
  v7 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  a3();
  sub_1CA85C3C8();
  if (!v4)
  {
    v10 = v7;
    v11 = v17;
    v12 = v18;
    v21 = 0;
    v13 = sub_1CA85C134();
    v20 = 1;
    v14 = sub_1CA85C134();
    v19 = 2;
    v16 = sub_1CA85C134();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v9, v12);
    *(_DWORD *)v11 = v13;
    *(_BYTE *)(v11 + 4) = BYTE4(v13) & 1;
    *(_DWORD *)(v11 + 8) = v14;
    *(_BYTE *)(v11 + 12) = BYTE4(v14) & 1;
    *(_DWORD *)(v11 + 16) = v16;
    *(_BYTE *)(v11 + 20) = BYTE4(v16) & 1;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1CA2AA56C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return MusicKitCatalogSong.Relationships.AudioAnalysisRelationship.AudioAnalysisData.AudioAnalysisAttributes.AudioAnalysisTimeSeriesAttributes.AveragedTimeSeriesAttributes.init(from:)(a1, a2);
}

uint64_t sub_1CA2AA580(_QWORD *a1)
{
  return MusicKitCatalogSong.Relationships.AudioAnalysisRelationship.AudioAnalysisData.AudioAnalysisAttributes.AudioAnalysisTimeSeriesAttributes.AveragedTimeSeriesAttributes.encode(to:)(a1);
}

uint64_t sub_1CA2AA598()
{
  sub_1CA2B5318();
  return sub_1CA85C3E0();
}

uint64_t sub_1CA2AA5C0()
{
  sub_1CA2B5318();
  return sub_1CA85C3EC();
}

uint64_t MusicKitCatalogSong.Relationships.AudioAnalysisRelationship.AudioAnalysisData.AudioAnalysisAttributes.AudioAnalysisTimeSeriesAttributes.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  char v33;
  char v34;
  int v35;
  char v36;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94C6C0);
  v28 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v1;
  v6 = v1[1];
  v27 = *((unsigned int *)v1 + 4);
  v8 = *((_BYTE *)v1 + 20);
  v35 = *((unsigned __int8 *)v1 + 21);
  v9 = v1[3];
  v24 = v1[4];
  v25 = v9;
  v23 = *((unsigned __int8 *)v1 + 44);
  v22 = *((unsigned int *)v1 + 10);
  v26 = *((unsigned __int8 *)v1 + 45);
  v10 = v1[6];
  v20 = v1[7];
  v21 = v10;
  v19 = *((unsigned __int8 *)v1 + 68);
  v17 = *((unsigned int *)v1 + 16);
  v18 = *((unsigned __int8 *)v1 + 69);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1CA2B5318();
  sub_1CA85C3D4();
  v30 = v7;
  v31 = v6;
  v33 = v8;
  v32 = v27;
  v34 = v35;
  v36 = 0;
  sub_1CA2B535C();
  v11 = v29;
  sub_1CA85C1E8();
  if (v11)
    return (*(uint64_t (**)(char *, uint64_t))(v28 + 8))(v5, v3);
  v13 = v19;
  v14 = v20;
  v15 = v21;
  v16 = v28;
  v30 = v25;
  v31 = v24;
  v33 = (v22 | (unint64_t)(v23 << 32)) >> 32;
  v32 = v22;
  v34 = v26;
  v36 = 1;
  sub_1CA85C1E8();
  v30 = v15;
  v31 = v14;
  v33 = (v17 | (unint64_t)(v13 << 32)) >> 32;
  v32 = v17;
  v34 = v18;
  v36 = 2;
  sub_1CA85C1E8();
  return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v5, v3);
}

uint64_t MusicKitCatalogSong.Relationships.AudioAnalysisRelationship.AudioAnalysisData.AudioAnalysisAttributes.AudioAnalysisTimeSeriesAttributes.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int v9;
  unsigned int v11;
  uint64_t v12;
  unsigned __int8 v13;
  uint64_t v14;
  unsigned __int8 v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  unsigned int v27;
  unsigned __int8 v28;
  unsigned __int8 v29;
  int v30;
  char v31;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8725C0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1CA2B5318();
  sub_1CA85C3C8();
  if (!v2)
  {
    v31 = 0;
    sub_1CA2B53A0();
    sub_1CA85C14C();
    v24 = *((_QWORD *)&v26 + 1);
    v25 = v26;
    v23 = v28;
    v22 = v27;
    v9 = v29;
    v31 = 1;
    sub_1CA85C14C();
    v30 = v9;
    v20 = *((_QWORD *)&v26 + 1);
    v21 = v26;
    v19 = v28;
    v18 = v27;
    LOBYTE(v9) = v29;
    v31 = 2;
    sub_1CA85C14C();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v11 = v27;
    v12 = v22 | (v23 << 32);
    v13 = v28;
    v14 = v18 | (v19 << 32);
    v15 = v29;
    v16 = v26;
    v17 = v24;
    *(_QWORD *)a2 = v25;
    *(_QWORD *)(a2 + 8) = v17;
    *(_BYTE *)(a2 + 20) = BYTE4(v12);
    *(_DWORD *)(a2 + 16) = v12;
    *(_BYTE *)(a2 + 21) = v30;
    *(_QWORD *)(a2 + 24) = v21;
    *(_QWORD *)(a2 + 32) = v20;
    *(_BYTE *)(a2 + 44) = BYTE4(v14);
    *(_DWORD *)(a2 + 40) = v14;
    *(_BYTE *)(a2 + 45) = v9;
    *(_OWORD *)(a2 + 48) = v16;
    *(_BYTE *)(a2 + 68) = v13;
    *(_DWORD *)(a2 + 64) = v11;
    *(_BYTE *)(a2 + 69) = v15;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1CA2AAA90@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return MusicKitCatalogSong.Relationships.AudioAnalysisRelationship.AudioAnalysisData.AudioAnalysisAttributes.AudioAnalysisTimeSeriesAttributes.init(from:)(a1, a2);
}

uint64_t sub_1CA2AAAA4(_QWORD *a1)
{
  return MusicKitCatalogSong.Relationships.AudioAnalysisRelationship.AudioAnalysisData.AudioAnalysisAttributes.AudioAnalysisTimeSeriesAttributes.encode(to:)(a1);
}

unint64_t sub_1CA2AAABC()
{
  _BYTE *v0;

  if (*v0)
    return 0xD000000000000012;
  else
    return 0xD000000000000013;
}

uint64_t sub_1CA2AAAFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1CA2BF9C0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1CA2AAB20()
{
  sub_1CA2B53E4();
  return sub_1CA85C3E0();
}

uint64_t sub_1CA2AAB48()
{
  sub_1CA2B53E4();
  return sub_1CA85C3EC();
}

uint64_t MusicKitCatalogSong.Relationships.AudioAnalysisRelationship.AudioAnalysisData.AudioAnalysisAttributes.AudioAnalysisBeats.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;
  char v11;
  uint64_t v12;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94C6D0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v1;
  v10 = v1[1];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1CA2B53E4();
  sub_1CA85C3D4();
  v12 = v8;
  v11 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8722B8);
  sub_1CA2B5AA0(&qword_1EF94C6E0, &qword_1ED8722B8, MEMORY[0x1E0DEB420], MEMORY[0x1E0DEAF10]);
  sub_1CA85C1E8();
  if (!v2)
  {
    v12 = v10;
    v11 = 1;
    sub_1CA85C1E8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t MusicKitCatalogSong.Relationships.AudioAnalysisRelationship.AudioAnalysisData.AudioAnalysisAttributes.AudioAnalysisBeats.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v13;
  char v14;
  uint64_t v15;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94C6E8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1CA2B53E4();
  sub_1CA85C3C8();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v13 = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8722B8);
  v14 = 0;
  sub_1CA2B5AA0(&qword_1EF94C6F0, &qword_1ED8722B8, MEMORY[0x1E0DEB448], MEMORY[0x1E0DEAF40]);
  sub_1CA85C14C();
  v9 = v15;
  v14 = 1;
  swift_bridgeObjectRetain();
  sub_1CA85C14C();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v10 = v15;
  v11 = v13;
  *v13 = v9;
  v11[1] = v10;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1CA2AAED0@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return MusicKitCatalogSong.Relationships.AudioAnalysisRelationship.AudioAnalysisData.AudioAnalysisAttributes.AudioAnalysisBeats.init(from:)(a1, a2);
}

uint64_t sub_1CA2AAEE4(_QWORD *a1)
{
  return MusicKitCatalogSong.Relationships.AudioAnalysisRelationship.AudioAnalysisData.AudioAnalysisAttributes.AudioAnalysisBeats.encode(to:)(a1);
}

uint64_t sub_1CA2AAEFC()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1CA2AAF24 + 4 * byte_1CA8D6724[*v0]))(1852399981, 0xE400000000000000);
}

uint64_t sub_1CA2AAF24()
{
  return 0x6E696E6E69676562;
}

uint64_t sub_1CA2AAF40()
{
  return 0x676E69646E65;
}

unint64_t sub_1CA2AAF54()
{
  return 0xD000000000000010;
}

uint64_t sub_1CA2AAF70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1CA2BFAA8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1CA2AAF94()
{
  sub_1CA2B5428();
  return sub_1CA85C3E0();
}

uint64_t sub_1CA2AAFBC()
{
  sub_1CA2B5428();
  return sub_1CA85C3EC();
}

uint64_t MusicKitCatalogSong.Relationships.AudioAnalysisRelationship.AudioAnalysisData.AudioAnalysisAttributes.AudioAnalysisBPM.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char v8;
  uint64_t v10;
  int v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  char v20;
  char v21;
  char v22;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94C6F8);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *(_QWORD *)(v1 + 16);
  v15 = *(unsigned __int8 *)(v1 + 24);
  v14 = *(_QWORD *)(v1 + 32);
  v13 = *(unsigned __int8 *)(v1 + 40);
  v12 = *(unsigned int *)(v1 + 44);
  v11 = *(unsigned __int8 *)(v1 + 48);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1CA2B5428();
  sub_1CA85C3D4();
  v22 = 0;
  v7 = v17;
  sub_1CA85C1DC();
  if (!v7)
  {
    v8 = v11;
    v21 = 1;
    sub_1CA85C1DC();
    v20 = 2;
    sub_1CA85C1DC();
    v19 = 3;
    v18 = v8;
    sub_1CA85C1D0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t MusicKitCatalogSong.Relationships.AudioAnalysisRelationship.AudioAnalysisData.AudioAnalysisAttributes.AudioAnalysisBPM.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  int v15;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  char v23;
  char v24;
  char v25;
  char v26;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94C708);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1CA2B5428();
  sub_1CA85C3C8();
  if (!v2)
  {
    v26 = 0;
    v9 = sub_1CA85C140();
    v11 = v10;
    v25 = 1;
    v12 = sub_1CA85C140();
    v22 = v13;
    v21 = v12;
    v24 = 2;
    v14 = sub_1CA85C140();
    v19 = v15;
    v20 = v14;
    v23 = 3;
    v17 = sub_1CA85C134();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *(_QWORD *)a2 = v9;
    *(_BYTE *)(a2 + 8) = v11 & 1;
    *(_QWORD *)(a2 + 16) = v21;
    *(_BYTE *)(a2 + 24) = v22 & 1;
    *(_QWORD *)(a2 + 32) = v20;
    *(_BYTE *)(a2 + 40) = v19 & 1;
    *(_DWORD *)(a2 + 44) = v17;
    *(_BYTE *)(a2 + 48) = BYTE4(v17) & 1;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1CA2AB390@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return MusicKitCatalogSong.Relationships.AudioAnalysisRelationship.AudioAnalysisData.AudioAnalysisAttributes.AudioAnalysisBPM.init(from:)(a1, a2);
}

uint64_t sub_1CA2AB3A4(_QWORD *a1)
{
  return MusicKitCatalogSong.Relationships.AudioAnalysisRelationship.AudioAnalysisData.AudioAnalysisAttributes.AudioAnalysisBPM.encode(to:)(a1);
}

uint64_t sub_1CA2AB3BC(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1CA2AB3E8 + 4 * byte_1CA8D6728[a1]))(7955819, 0xE300000000000000);
}

uint64_t sub_1CA2AB3E8()
{
  return 0x6E6369646F6C656DLL;
}

uint64_t sub_1CA2AB408()
{
  return 0x63697473756F6361;
}

uint64_t sub_1CA2AB428()
{
  return 0x65636E656C6176;
}

uint64_t sub_1CA2AB440()
{
  return 0x796772656E65;
}

uint64_t sub_1CA2AB454()
{
  return 0x7373656E64756F6CLL;
}

uint64_t sub_1CA2AB46C()
{
  return 0x69626165636E6164;
}

uint64_t sub_1CA2AB48C()
{
  return 0x7374616562;
}

uint64_t sub_1CA2AB4A0()
{
  return 7172194;
}

uint64_t sub_1CA2AB4AC()
{
  unsigned __int8 *v0;

  return sub_1CA2AB3BC(*v0);
}

uint64_t sub_1CA2AB4B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1CA2BFC50(a1, a2);
  *a3 = result;
  return result;
}

void sub_1CA2AB4D8(_BYTE *a1@<X8>)
{
  *a1 = 9;
}

uint64_t sub_1CA2AB4E4()
{
  sub_1CA2B546C();
  return sub_1CA85C3E0();
}

uint64_t sub_1CA2AB50C()
{
  sub_1CA2B546C();
  return sub_1CA85C3EC();
}

uint64_t MusicKitCatalogSong.Relationships.AudioAnalysisRelationship.AudioAnalysisData.AudioAnalysisAttributes.encode(to:)(_QWORD *a1)
{
  __int128 *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  int v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __int128 v42;
  uint64_t v43;
  uint64_t v44;
  int v45;
  __int128 v46;
  uint64_t v47;
  uint64_t v48;
  int v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  uint64_t v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  uint64_t v70;
  uint64_t v71;
  int v72;
  char v73;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94C710);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v1;
  v62 = v1[1];
  v63 = v7;
  v8 = v1[2];
  v60 = v1[3];
  v61 = v8;
  v59 = v1[4];
  v10 = *((_QWORD *)v1 + 10);
  v9 = *((_QWORD *)v1 + 11);
  v58 = *((_QWORD *)v1 + 12);
  v57 = *((_QWORD *)v1 + 13);
  v56 = *((unsigned __int8 *)v1 + 116);
  v55 = *((unsigned int *)v1 + 28);
  v72 = *((unsigned __int8 *)v1 + 117);
  v54 = *((_QWORD *)v1 + 15);
  v53 = *((_QWORD *)v1 + 16);
  v52 = *((unsigned __int8 *)v1 + 140);
  v51 = *((unsigned int *)v1 + 34);
  v50 = *((unsigned __int8 *)v1 + 141);
  v46 = v1[9];
  v48 = *((unsigned __int8 *)v1 + 164);
  v47 = *((unsigned int *)v1 + 40);
  v49 = *((unsigned __int8 *)v1 + 165);
  v42 = *(__int128 *)((char *)v1 + 168);
  v43 = *((unsigned __int8 *)v1 + 188);
  v44 = *((unsigned int *)v1 + 46);
  v45 = *((unsigned __int8 *)v1 + 189);
  v32 = v1[12];
  v41 = *((_QWORD *)v1 + 26);
  v40 = *((_QWORD *)v1 + 27);
  v39 = *((_QWORD *)v1 + 28);
  v38 = *((_QWORD *)v1 + 29);
  v37 = *((_QWORD *)v1 + 30);
  v36 = *((_QWORD *)v1 + 31);
  v35 = *((unsigned __int16 *)v1 + 130);
  v34 = *((unsigned int *)v1 + 64);
  v28 = *(__int128 *)((char *)v1 + 264);
  v31 = *((unsigned __int8 *)v1 + 284);
  v30 = *((unsigned int *)v1 + 70);
  v27 = v1[18];
  v20 = v1[19];
  v26 = *((_QWORD *)v1 + 40);
  v25 = *((_QWORD *)v1 + 41);
  v24 = *((_QWORD *)v1 + 42);
  v23 = *((_QWORD *)v1 + 43);
  v22 = *((unsigned __int8 *)v1 + 352);
  v33 = *((unsigned __int8 *)v1 + 262);
  v29 = *((unsigned __int8 *)v1 + 285);
  v21 = *((unsigned __int8 *)v1 + 353);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1CA2B546C();
  v11 = v3;
  sub_1CA85C3D4();
  v65 = v63;
  v66 = v62;
  v67 = v61;
  v68 = v60;
  v69 = v59;
  v70 = v10;
  v71 = v9;
  v73 = 0;
  sub_1CA2B54B0();
  v12 = v64;
  sub_1CA85C1E8();
  if (v12)
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  v14 = v51;
  v15 = v52;
  v16 = v53;
  v17 = v54;
  v64 = v4;
  *(_QWORD *)&v65 = v58;
  *((_QWORD *)&v65 + 1) = v57;
  BYTE4(v66) = (v55 | (unint64_t)(v56 << 32)) >> 32;
  LODWORD(v66) = v55;
  BYTE5(v66) = v72;
  v73 = 1;
  sub_1CA2B54F4();
  sub_1CA85C1E8();
  *(_QWORD *)&v65 = v17;
  *((_QWORD *)&v65 + 1) = v16;
  BYTE4(v66) = (v14 | (unint64_t)(v15 << 32)) >> 32;
  LODWORD(v66) = v14;
  BYTE5(v66) = v50;
  v73 = 2;
  sub_1CA85C1E8();
  v65 = v46;
  BYTE4(v66) = (v47 | (unint64_t)(v48 << 32)) >> 32;
  LODWORD(v66) = v47;
  BYTE5(v66) = v49;
  v73 = 3;
  sub_1CA85C1E8();
  v65 = v42;
  BYTE4(v66) = (v44 | (unint64_t)(v43 << 32)) >> 32;
  LODWORD(v66) = v44;
  BYTE5(v66) = v45;
  v73 = 4;
  sub_1CA85C1E8();
  v65 = v32;
  *(_QWORD *)&v66 = v41;
  *((_QWORD *)&v66 + 1) = v40;
  *(_QWORD *)&v67 = v39;
  *((_QWORD *)&v67 + 1) = v38;
  *(_QWORD *)&v68 = v37;
  *((_QWORD *)&v68 + 1) = v36;
  WORD2(v69) = (v34 | (unint64_t)(v35 << 32)) >> 32;
  LODWORD(v69) = v34;
  BYTE6(v69) = v33;
  v73 = 5;
  sub_1CA2B5538();
  sub_1CA85C1E8();
  v65 = v28;
  BYTE4(v66) = (v30 | (unint64_t)(v31 << 32)) >> 32;
  LODWORD(v66) = v30;
  BYTE5(v66) = v29;
  v73 = 6;
  sub_1CA85C1E8();
  v65 = v27;
  v73 = 7;
  sub_1CA2B557C();
  sub_1CA85C1E8();
  v18 = v64;
  v65 = v20;
  *(_QWORD *)&v66 = v26;
  *((_QWORD *)&v66 + 1) = v25;
  *(_QWORD *)&v67 = v24;
  *((_QWORD *)&v67 + 1) = v23;
  LOBYTE(v68) = v22;
  BYTE1(v68) = v21;
  v73 = 8;
  sub_1CA2B55C0();
  sub_1CA85C1E8();
  return (*(uint64_t (**)(_QWORD, uint64_t))(v18 + 8))(0, v11);
}

uint64_t *MusicKitCatalogSong.Relationships.AudioAnalysisRelationship.AudioAnalysisData.AudioAnalysisAttributes.init(from:)@<X0>(_QWORD *a1@<X0>, void *a2@<X8>)
{
  uint64_t v2;
  unint64_t v5;
  uint64_t v6;
  char *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _BYTE *v47;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _BYTE *v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  int v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  unint64_t v81;
  unint64_t v82;
  uint64_t v83;
  unint64_t v84;
  unint64_t v85;
  unint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  _QWORD *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  void *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107[45];
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  int v122;
  char v123;
  char v124;
  uint64_t v125;
  uint64_t v126;
  int v127;
  char v128;
  char v129;
  uint64_t v130;
  uint64_t v131;
  int v132;
  char v133;
  char v134;
  uint64_t v135;
  uint64_t v136;
  int v137;
  char v138;
  char v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  _BYTE v148[8];
  uint64_t v149;
  uint64_t v150;
  char v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  char v160;
  char v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  __int16 v168;
  char v169;
  char v170;
  char v171;
  char v172;
  char v173;
  char v174;
  char v175;
  char v176;

  v106 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8725C8);
  v5 = *(_QWORD *)(v106 - 8);
  MEMORY[0x1E0C80A78](v106);
  v7 = (char *)&v51 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1CA2B546C();
  sub_1CA85C3C8();
  if (v2)
    return (uint64_t *)__swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v8 = v5;
  v99 = a2;
  LOBYTE(v107[0]) = 0;
  sub_1CA2B5634();
  sub_1CA85C14C();
  v9 = v115;
  LOBYTE(v107[0]) = 1;
  v104 = v119;
  v105 = v118;
  v100 = v117;
  v101 = v116;
  v102 = v108;
  v103 = v109;
  v96 = v110;
  v97 = v112;
  v10 = v111;
  v98 = v113;
  v95 = v114;
  sub_1CA2B5678(v108, v109, v110, v111, v112, v113, v114, v115, v116, v117, v118, v119, (void (*)(void))sub_1CA2B5228);
  v11 = sub_1CA2B570C();
  sub_1CA85C14C();
  v91 = v8;
  v92 = a1;
  v93 = v9;
  v94 = v10;
  v90 = v108;
  v12 = v109;
  v13 = BYTE4(v110);
  v14 = v110;
  LODWORD(v9) = BYTE5(v110);
  v176 = BYTE5(v110);
  LOBYTE(v107[0]) = 2;
  sub_1CA85C14C();
  v84 = v14;
  v85 = v13;
  LODWORD(v86) = v9;
  v88 = v108;
  v89 = v12;
  v87 = v109;
  v15 = BYTE4(v110);
  v16 = v110;
  LODWORD(v14) = BYTE5(v110);
  v175 = BYTE5(v110);
  LOBYTE(v107[0]) = 3;
  sub_1CA85C14C();
  v80 = v16;
  v81 = v15;
  LODWORD(v82) = v14;
  v83 = v108;
  v17 = v109;
  v18 = v11;
  v19 = BYTE4(v110);
  v20 = v110;
  LODWORD(v16) = BYTE5(v110);
  v174 = BYTE5(v110);
  LOBYTE(v107[0]) = 4;
  sub_1CA85C14C();
  LODWORD(v77) = v16;
  v78 = v17;
  v79 = v18;
  v75 = v19;
  v76 = v20;
  v21 = v108;
  v22 = v109;
  v23 = BYTE4(v110);
  v24 = v110;
  LODWORD(v19) = BYTE5(v110);
  v173 = BYTE5(v110);
  LOBYTE(v107[0]) = 5;
  sub_1CA2B5750();
  sub_1CA85C14C();
  v64 = v24;
  v65 = v23;
  LODWORD(v66) = v19;
  v73 = v22;
  v74 = v21;
  v25 = v109;
  v71 = v110;
  v72 = v108;
  v69 = v112;
  v70 = v111;
  v67 = v114;
  v68 = v113;
  v26 = v115;
  v27 = WORD2(v116);
  v28 = v116;
  LODWORD(v19) = BYTE6(v116);
  v171 = BYTE6(v116);
  LOBYTE(v107[0]) = 6;
  sub_1CA85C14C();
  v58 = v28;
  v59 = v27;
  LODWORD(v63) = v19;
  v79 = v26;
  v29 = v108;
  v30 = v109;
  v60 = BYTE4(v110);
  v61 = v110;
  v62 = BYTE5(v110);
  v172 = BYTE5(v110);
  LOBYTE(v107[0]) = 7;
  sub_1CA2B5794();
  sub_1CA85C14C();
  v54 = v30;
  v55 = v29;
  v56 = v25;
  v31 = v109;
  v169 = 8;
  v32 = v108;
  sub_1CA2B57D8(v108);
  sub_1CA2B580C();
  sub_1CA85C14C();
  v57 = v31;
  v52 = v148;
  v53 = v84 | (v85 << 32);
  v84 = v76 | (v75 << 32);
  v85 = v64 | (v65 << 32);
  v80 |= v81 << 32;
  v81 = v58 | (v59 << 32);
  v33 = *(void (**)(char *, uint64_t))(v91 + 8);
  v91 = v61 | (v60 << 32);
  v33(v7, v106);
  v60 = v162;
  v61 = v163;
  v64 = v164;
  v65 = v165;
  v75 = v166;
  v76 = v167;
  BYTE5(v107[14]) = v86;
  LODWORD(v59) = v168;
  BYTE5(v107[17]) = v82;
  v170 = HIBYTE(v168);
  v34 = v101;
  v107[0] = v102;
  v107[1] = v103;
  v35 = v94;
  v107[2] = v96;
  v107[3] = v94;
  v107[4] = v97;
  v107[5] = v98;
  v107[6] = v95;
  v36 = v95;
  v107[7] = v93;
  v107[8] = v101;
  v37 = v100;
  v107[9] = v100;
  v107[10] = v105;
  v107[11] = v104;
  v107[12] = v90;
  v107[13] = v89;
  BYTE5(v107[20]) = v77;
  v106 = HIDWORD(v53);
  BYTE4(v107[14]) = BYTE4(v53);
  LODWORD(v107[14]) = v53;
  v107[15] = v88;
  v107[16] = v87;
  BYTE5(v107[23]) = v66;
  v86 = HIDWORD(v80);
  BYTE4(v107[17]) = BYTE4(v80);
  LODWORD(v107[17]) = v80;
  v107[18] = v83;
  v107[19] = v78;
  BYTE6(v107[32]) = v63;
  v82 = HIDWORD(v84);
  BYTE4(v107[20]) = BYTE4(v84);
  LODWORD(v107[20]) = v84;
  v107[21] = v74;
  v107[22] = v73;
  BYTE5(v107[35]) = v62;
  v77 = HIDWORD(v81);
  WORD2(v107[32]) = WORD2(v81);
  LODWORD(v107[32]) = v81;
  v66 = HIDWORD(v91);
  BYTE4(v107[35]) = BYTE4(v91);
  LODWORD(v107[35]) = v91;
  v63 = HIDWORD(v85);
  BYTE4(v107[23]) = BYTE4(v85);
  LODWORD(v107[23]) = v85;
  v107[24] = v72;
  v107[25] = v56;
  v107[26] = v71;
  v107[27] = v70;
  v107[28] = v69;
  v107[29] = v68;
  v107[30] = v67;
  v107[31] = v79;
  v107[33] = v55;
  v107[34] = v54;
  v107[36] = v32;
  v51 = v32;
  v107[37] = v31;
  v107[38] = v162;
  v107[39] = v163;
  v107[40] = v164;
  v107[41] = v165;
  v107[42] = v166;
  v107[43] = v167;
  LOWORD(v107[44]) = v168;
  sub_1CA2B5850(v107, (void (*)(void))sub_1CA2B5228, (void (*)(uint64_t, uint64_t))sub_1CA2B57D8);
  sub_1CA2B5604(v32);
  v50 = v37;
  v49 = v34;
  v38 = v102;
  v39 = v103;
  v41 = v96;
  v40 = v97;
  v42 = v35;
  v43 = v98;
  v44 = v36;
  v45 = v36;
  v46 = v93;
  sub_1CA2B5678(v102, v103, v96, v42, v97, v98, v45, v93, v49, v50, v105, v104, (void (*)(void))sub_1CA2B525C);
  memcpy(v99, v107, 0x162uLL);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v92);
  v108 = v38;
  v109 = v39;
  v110 = v41;
  v111 = v94;
  v112 = v40;
  v113 = v43;
  v114 = v44;
  v115 = v46;
  v116 = v101;
  v117 = v100;
  v118 = v105;
  v119 = v104;
  v120 = v90;
  v121 = v89;
  v123 = v106;
  v122 = v53;
  v125 = v88;
  v126 = v87;
  v128 = v86;
  v127 = v80;
  v130 = v83;
  v131 = v78;
  v124 = v176;
  v129 = v175;
  v133 = v82;
  v132 = v84;
  v134 = v174;
  v135 = v74;
  v136 = v73;
  v138 = v63;
  v137 = v85;
  v139 = v173;
  v140 = v72;
  v141 = v56;
  v142 = v71;
  v143 = v70;
  v144 = v69;
  v145 = v68;
  v146 = v67;
  v147 = v79;
  v47 = v52;
  *((_WORD *)v52 + 2) = v77;
  *(_DWORD *)v47 = v81;
  v148[6] = v171;
  v149 = v55;
  v150 = v54;
  *((_DWORD *)v47 + 6) = v91;
  v47[28] = v66;
  v151 = v172;
  v152 = v51;
  v153 = v57;
  v154 = v60;
  v155 = v61;
  v156 = v64;
  v157 = v65;
  v158 = v75;
  v159 = v76;
  v160 = v59;
  v161 = v170;
  return sub_1CA2B5850(&v108, (void (*)(void))sub_1CA2B525C, (void (*)(uint64_t, uint64_t))sub_1CA2B5604);
}

uint64_t *sub_1CA2AC86C@<X0>(_QWORD *a1@<X0>, void *a2@<X8>)
{
  return MusicKitCatalogSong.Relationships.AudioAnalysisRelationship.AudioAnalysisData.AudioAnalysisAttributes.init(from:)(a1, a2);
}

uint64_t sub_1CA2AC880(_QWORD *a1)
{
  return MusicKitCatalogSong.Relationships.AudioAnalysisRelationship.AudioAnalysisData.AudioAnalysisAttributes.encode(to:)(a1);
}

uint64_t sub_1CA2AC898()
{
  sub_1CA2B58C4();
  return sub_1CA85C3E0();
}

uint64_t sub_1CA2AC8C0()
{
  sub_1CA2B58C4();
  return sub_1CA85C3EC();
}

uint64_t MusicKitCatalogSong.Relationships.AudioAnalysisRelationship.AudioAnalysisData.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;
  uint64_t v9;
  _BYTE v10[368];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94C740);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1CA24EEF8(v1, (uint64_t)v10, &qword_1ED872D58);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1CA2B58C4();
  sub_1CA85C3D4();
  sub_1CA24EEF8((uint64_t)v10, (uint64_t)&v9, &qword_1ED872D58);
  sub_1CA2B5908();
  sub_1CA85C1E8();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t MusicKitCatalogSong.Relationships.AudioAnalysisRelationship.AudioAnalysisData.init(from:)@<X0>(_QWORD *a1@<X0>, void *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  void *v8;
  _BYTE v10[360];
  _BYTE v11[360];
  uint64_t v12;
  void *v13;

  v13 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8725D0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = &v10[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1CA2B58C4();
  sub_1CA85C3C8();
  if (!v2)
  {
    v8 = v13;
    sub_1CA2B594C();
    sub_1CA85C14C();
    (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
    sub_1CA24EEF8((uint64_t)&v12, (uint64_t)v10, &qword_1ED872D58);
    sub_1CA24EEF8((uint64_t)v10, (uint64_t)v11, &qword_1ED872D58);
    memcpy(v8, v11, 0x162uLL);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1CA2ACB7C@<X0>(_QWORD *a1@<X0>, void *a2@<X8>)
{
  return MusicKitCatalogSong.Relationships.AudioAnalysisRelationship.AudioAnalysisData.init(from:)(a1, a2);
}

uint64_t sub_1CA2ACB90(_QWORD *a1)
{
  return MusicKitCatalogSong.Relationships.AudioAnalysisRelationship.AudioAnalysisData.encode(to:)(a1);
}

uint64_t static MusicKitCatalogSong.Relationships.AudioAnalysisRelationship.== infix(_:_:)(_QWORD *a1, uint64_t *a2)
{
  return sub_1CA2AF3AC(a1, a2, sub_1CA2A7B0C);
}

uint64_t sub_1CA2ACBB0()
{
  sub_1CA2B5990();
  return sub_1CA85C3E0();
}

uint64_t sub_1CA2ACBD8()
{
  sub_1CA2B5990();
  return sub_1CA85C3EC();
}

uint64_t MusicKitCatalogSong.Relationships.AudioAnalysisRelationship.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _QWORD v9[2];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF94C750);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1CA2B5990();
  sub_1CA85C3D4();
  v9[1] = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED872210);
  sub_1CA2B6780(&qword_1EF94C758, &qword_1ED872210, (uint64_t (*)(void))sub_1CA2B59D4, MEMORY[0x1E0DEAF10]);
  sub_1CA85C1E8();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t MusicKitCatalogSong.Relationships.AudioAnalysisRelationship.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _QWORD v10[2];

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8725D8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1CA2B5990();
  sub_1CA85C3C8();
  if (!v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED872210);
    sub_1CA2B6780(&qword_1ED872218, &qword_1ED872210, (uint64_t (*)(void))sub_1CA2B5A18, MEMORY[0x1E0DEAF40]);
    sub_1CA85C14C();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v10[1];
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1CA2ACE70(_QWORD *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_1CA2AF770(a1, a2, a3, a4, sub_1CA2A7B0C);
}

uint64_t sub_1CA2ACE7C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return MusicKitCatalogSong.Relationships.AudioAnalysisRelationship.init(from:)(a1, a2);
}

uint64_t sub_1CA2ACE90(_QWORD *a1)
{
  return MusicKitCatalogSong.Relationships.AudioAnalysisRelationship.encode(to:)(a1);
}

uint64_t sub_1CA2ACEA8()
{
  sub_1CA2B5A5C();
  return sub_1CA85C3E0();
}

uint64_t sub_1CA2ACED0()
{
  sub_1CA2B5A5C();
  return sub_1CA85C3EC();
}

uint64_t MusicKitCatalogSong.Relationships.FlexMLAnalysisRelationship.FlexMLAnalysisData.FlexMLAnalysisAttributes.Valence.encode(to:)(_QWORD *a1)
{
  return sub_1CA2ACFFC(a1, &qword_1EF94C768, (void (*)(void))sub_1CA2B5A5C);
}

uint64_t MusicKitCatalogSong.Relationships.FlexMLAnalysisRelationship.FlexMLAnalysisData.FlexMLAnalysisAttributes.Valence.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1CA2AD1AC(a1, &qword_1ED872608, (void (*)(void))sub_1CA2B5A5C, a2);
}

uint64_t sub_1CA2ACF54@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return MusicKitCatalogSong.Relationships.FlexMLAnalysisRelationship.FlexMLAnalysisData.FlexMLAnalysisAttributes.Valence.init(from:)(a1, a2);
}

uint64_t sub_1CA2ACF68(_QWORD *a1)
{
  return MusicKitCatalogSong.Relationships.FlexMLAnalysisRelationship.FlexMLAnalysisData.FlexMLAnalysisAttributes.Valence.encode(to:)(a1);
}

uint64_t sub_1CA2ACF80()
{
  sub_1CA2B5AFC();
  return sub_1CA85C3E0();
}

uint64_t sub_1CA2ACFA8()
{
  sub_1CA2B5AFC();
  return sub_1CA85C3EC();
}

uint64_t MusicKitCatalogSong.Relationships.FlexMLAnalysisRelationship.FlexMLAnalysisData.FlexMLAnalysisAttributes.Arousal.encode(to:)(_QWORD *a1)
{
  return sub_1CA2ACFFC(a1, &qword_1EF94C770, (void (*)(void))sub_1CA2B5AFC);
}

uint64_t sub_1CA2ACFFC(_QWORD *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;
  char v19;
  uint64_t v20;

  v6 = __swift_instantiateConcreteTypeFromMangledName(a2);
  v16 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v3;
  v14 = *((unsigned int *)v3 + 2);
  v13 = *((unsigned __int8 *)v3 + 12);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  a3();
  sub_1CA85C3D4();
  v20 = v9;
  v19 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED872298);
  sub_1CA2B5AA0(&qword_1ED8722A0, &qword_1ED872298, MEMORY[0x1E0DEB198], MEMORY[0x1E0DEAF10]);
  v10 = v15;
  sub_1CA85C23C();
  if (!v10)
  {
    v18 = 1;
    v17 = v13;
    sub_1CA85C1D0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v8, v6);
}

uint64_t MusicKitCatalogSong.Relationships.FlexMLAnalysisRelationship.FlexMLAnalysisData.FlexMLAnalysisAttributes.Arousal.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1CA2AD1AC(a1, &qword_1ED872600, (void (*)(void))sub_1CA2B5AFC, a2);
}

uint64_t sub_1CA2AD1AC@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X1>, void (*a3)(void)@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;
  uint64_t v21;

  v17 = a4;
  v18 = __swift_instantiateConcreteTypeFromMangledName(a2);
  v7 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  a3();
  sub_1CA85C3C8();
  if (v4)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v10 = v7;
  v11 = v17;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED872298);
  v20 = 0;
  sub_1CA2B5AA0(&qword_1ED8722B0, &qword_1ED872298, MEMORY[0x1E0DEB1C0], MEMORY[0x1E0DEAF40]);
  v12 = v18;
  sub_1CA85C1A0();
  v13 = v21;
  v19 = 1;
  swift_bridgeObjectRetain();
  v14 = sub_1CA85C134();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v9, v12);
  *(_QWORD *)v11 = v13;
  *(_DWORD *)(v11 + 8) = v14;
  *(_BYTE *)(v11 + 12) = BYTE4(v14) & 1;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

