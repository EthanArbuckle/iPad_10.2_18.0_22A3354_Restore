@implementation NPKPaymentWebServiceCompanionTargetDevice

- (BOOL)_isUnifiedAccessProvisioningSupported
{
  void *v2;
  void *v3;
  char v4;

  NPKPairedOrPairingDevice();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = (void *)objc_msgSend(objc_alloc(MEMORY[0x24BDD1880]), "initWithUUIDString:", CFSTR("AD3C8B62-1FB2-4A7A-ABF1-EBD5AF574209"));
  v4 = objc_msgSend(v2, "supportsCapability:", v3);

  return v4;
}

- (BOOL)_isParallelProvisioningSupported
{
  void *v2;
  void *v3;
  char v4;

  NPKPairedOrPairingDevice();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = (void *)objc_msgSend(objc_alloc(MEMORY[0x24BDD1880]), "initWithUUIDString:", CFSTR("94251CFF-6FD3-4126-9C80-71C8FC8F9F6C"));
  v4 = objc_msgSend(v2, "supportsCapability:", v3);

  return v4;
}

- (BOOL)_isAutoTopUpSupported
{
  void *v2;
  void *v3;
  char v4;

  NPKPairedOrPairingDevice();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = (void *)objc_msgSend(objc_alloc(MEMORY[0x24BDD1880]), "initWithUUIDString:", CFSTR("763A8A6B-1D96-4298-878A-A0FF3C627D79"));
  v4 = objc_msgSend(v2, "supportsCapability:", v3);

  return v4;
}

+ (id)bridgedClientInfoHTTPHeader
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;

  NPKPairedOrPairingDevice();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "valueForProperty:", *MEMORY[0x24BE6B3B0]);
  v21 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "valueForProperty:", *MEMORY[0x24BE6B3E8]);
  v20 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "valueForProperty:", *MEMORY[0x24BE6B3F0]);
  v19 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "valueForProperty:", *MEMORY[0x24BE6B3E0]);
  v18 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x24BDD17C8], "stringWithFormat:", CFSTR("%@"), v21);
  v17 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x24BDD17C8], "stringWithFormat:", CFSTR("%@;%@;%@"), v20, v19, v18);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x24BDD1488], "bundleForClass:", objc_opt_class());
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "infoDictionary");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = *MEMORY[0x24BDBD2A0];
  objc_msgSend(v5, "objectForKey:", *MEMORY[0x24BDBD2A0]);
  v7 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(MEMORY[0x24BDD1488], "mainBundle");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "infoDictionary");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "objectForKey:", v6);
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  v11 = (void *)MEMORY[0x24BDD17C8];
  objc_msgSend(v4, "bundleIdentifier");
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "bundleIdentifier");
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v11, "stringWithFormat:", CFSTR("%@/%@ (%@/%@)"), v12, v7, v13, v10);
  v14 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(MEMORY[0x24BDD17C8], "stringWithFormat:", CFSTR("<%@> <%@> <%@>"), v17, v3, v14);
  v15 = (void *)objc_claimAutoreleasedReturnValue();

  return v15;
}

- (NPKPaymentWebServiceCompanionTargetDevice)init
{
  return -[NPKPaymentWebServiceCompanionTargetDevice initWithContext:responseQueue:](self, "initWithContext:responseQueue:", 0, MEMORY[0x24BDAC9B8]);
}

- (NPKPaymentWebServiceCompanionTargetDevice)initWithContext:(unint64_t)a3 responseQueue:(id)a4
{
  id v6;
  NPKPaymentWebServiceCompanionTargetDevice *v7;
  NPKPaymentWebServiceCompanionTargetDevice *v8;
  const __CFString *v9;
  void *v10;
  NPKTargetDeviceAssertionManager *v11;
  NPKTargetDeviceAssertionManager *remoteDeviceAssertionManager;
  void *v13;
  dispatch_queue_t v14;
  objc_super v16;

  v6 = a4;
  v16.receiver = self;
  v16.super_class = (Class)NPKPaymentWebServiceCompanionTargetDevice;
  v7 = -[NPKPaymentWebServiceCompanionTargetDevice init](&v16, sel_init);
  v8 = v7;
  if (v7)
  {
    -[NPKPaymentWebServiceCompanionTargetDevice setResponseQueue:](v7, "setResponseQueue:", v6);
    -[NPKPaymentWebServiceCompanionTargetDevice setContext:](v8, "setContext:", a3);
    if (a3 == 1)
      v9 = CFSTR("com.apple.private.alloy.passbook.maintenance");
    else
      v9 = CFSTR("com.apple.private.alloy.passbook.provisioning");
    v10 = (void *)objc_msgSend(objc_alloc(MEMORY[0x24BE4FCB8]), "initWithService:", v9);
    objc_msgSend(v10, "setProtobufAction:forIncomingResponsesOfType:", sel_queueTSMConnectionResponse_, 1);
    objc_msgSend(v10, "setProtobufAction:forIncomingResponsesOfType:", sel_provisioningDataResponse_, 2);
    objc_msgSend(v10, "setProtobufAction:forIncomingResponsesOfType:", sel_registrationDataResponse_, 3);
    objc_msgSend(v10, "setProtobufAction:forIncomingResponsesOfType:", sel_configurationDataResponse_, 4);
    objc_msgSend(v10, "setProtobufAction:forIncomingResponsesOfType:", sel_signDataResponse_, 14);
    objc_msgSend(v10, "setProtobufAction:forIncomingResponsesOfType:", sel_secureElementGetAppletsResponse_, 5);
    objc_msgSend(v10, "setProtobufAction:forIncomingResponsesOfType:", sel_secureElementRemoveAppletsResponse_, 6);
    objc_msgSend(v10, "setProtobufAction:forIncomingResponsesOfType:", sel_setNewAuthRandomResponse_, 7);
    objc_msgSend(v10, "setProtobufAction:forIncomingResponsesOfType:", sel_didRegisterResponse_, 8);
    objc_msgSend(v10, "setProtobufAction:forIncomingResponsesOfType:", sel_dumpLogsResponse_, 9);
    objc_msgSend(v10, "setProtobufAction:forIncomingResponsesOfType:", sel_pendingRemovalResponse_, 12);
    objc_msgSend(v10, "setProtobufAction:forIncomingRequestsOfType:", sel_updatePaymentPass_, 10);
    objc_msgSend(v10, "setProtobufAction:forIncomingRequestsOfType:", sel_updatePushToken_, 11);
    objc_msgSend(v10, "setProtobufAction:forIncomingRequestsOfType:", sel_preconditionNotMet_, 13);
    objc_msgSend(v10, "setProtobufAction:forIncomingRequestsOfType:", sel_handleValueAddedServiceTransactions_, 15);
    objc_msgSend(v10, "setProtobufAction:forIncomingRequestsOfType:", sel_preferredAIDRequest_, 16);
    objc_msgSend(v10, "setProtobufAction:forIncomingResponsesOfType:", sel_preferredAIDResponse_, 16);
    objc_msgSend(v10, "setProtobufAction:forIncomingRequestsOfType:", sel_handleWebServiceContextDidChangeRequest_, 17);
    objc_msgSend(v10, "setProtobufAction:forIncomingRequestsOfType:", sel_handleWebServiceContextNeededRequest_, 18);
    objc_msgSend(v10, "setProtobufAction:forIncomingRequestsOfType:", sel_handlePaymentTransactions_, 19);
    objc_msgSend(v10, "setProtobufAction:forIncomingResponsesOfType:", sel_handlePaymentTransactions_, 20);
    objc_msgSend(v10, "setProtobufAction:forIncomingRequestsOfType:", sel_handleRemovedTransaction_, 26);
    objc_msgSend(v10, "setProtobufAction:forIncomingResponsesOfType:", sel_setExpressPassResponse_, 22);
    objc_msgSend(v10, "setProtobufAction:forIncomingResponsesOfType:", sel_removeExpressPassWithUniqueIdentifierResponse_, 46);
    objc_msgSend(v10, "setProtobufAction:forIncomingResponsesOfType:", sel_conflictingExpressPassIdentifiersForPassInformationResponse_, 53);
    objc_msgSend(v10, "setProtobufAction:forIncomingRequestsOfType:", sel_handleBalanceReminderWithBalanceAndPassRequest_, 57);
    objc_msgSend(v10, "setProtobufAction:forIncomingResponsesOfType:", sel_setBalanceReminderWithBalanceAndPassResponse_, 57);
    objc_msgSend(v10, "setProtobufAction:forIncomingResponsesOfType:", sel_setCommutePlanReminderWithCommutePlanAndPassResponse_, 58);
    objc_msgSend(v10, "setProtobufAction:forIncomingResponsesOfType:", sel_balanceReminderWithBalanceAndPassResponse_, 65);
    objc_msgSend(v10, "setProtobufAction:forIncomingResponsesOfType:", sel_commutePlanReminderWithCommutePlanAndPassResponse_, 66);
    objc_msgSend(v10, "setProtobufAction:forIncomingRequestsOfType:", sel_handleUpdatedAppletState_, 25);
    objc_msgSend(v10, "setProtobufAction:forIncomingResponsesOfType:", sel_getPairingInfoResponse_, 21);
    objc_msgSend(v10, "setProtobufAction:forIncomingRequestsOfType:", sel_handleShowPaymentSetupRequest_, 24);
    objc_msgSend(v10, "setProtobufAction:forIncomingResponsesOfType:", sel_enableServiceModeResponse_, 27);
    objc_msgSend(v10, "setProtobufAction:forIncomingRequestsOfType:", sel_handleTransactionDefaultsNeededRequest_, 28);
    objc_msgSend(v10, "setProtobufAction:forIncomingResponsesOfType:", sel_handleCompanionMigrationResponse_, 30);
    objc_msgSend(v10, "setProtobufAction:forIncomingResponsesOfType:", sel_peerPaymentRegisterResponse_, 31);
    objc_msgSend(v10, "setProtobufAction:forIncomingResponsesOfType:", sel_peerPaymentUnregisterResponse_, 32);
    objc_msgSend(v10, "setProtobufAction:forIncomingRequestsOfType:", sel_handleUpdatedPeerPaymentWebServiceContext_, 33);
    objc_msgSend(v10, "setProtobufAction:forIncomingResponsesOfType:", sel_provisionPeerPaymentPassResponse_, 34);
    objc_msgSend(v10, "setProtobufAction:forIncomingResponsesOfType:", sel_updatePeerPaymentAccountResponse_, 48);
    objc_msgSend(v10, "setProtobufAction:forIncomingResponsesOfType:", sel_setPeerPaymentPreferencesResponse_, 88);
    objc_msgSend(v10, "setProtobufAction:forIncomingResponsesOfType:", sel_triggerCloudStoreZoneCreationForAccountResponse_, 130);
    objc_msgSend(v10, "setProtobufAction:forIncomingResponsesOfType:", sel_provisionPassForRemoteCredentialWithTypeAndIdentifierResponse_, 131);
    objc_msgSend(v10, "setProtobufAction:forIncomingRequestsOfType:", sel_openURLWithRequest_, 60);
    objc_msgSend(v10, "setProtobufAction:forIncomingRequestsOfType:", sel_handlePeerPaymentTermsAndConditionsAcceptanceRequest_, 40);
    objc_msgSend(v10, "setProtobufAction:forIncomingResponsesOfType:", sel_deviceMetadataResponse_, 54);
    objc_msgSend(v10, "setProtobufAction:forIncomingResponsesOfType:", sel_updateAccountWithIdentifierResponse_, 55);
    objc_msgSend(v10, "setProtobufAction:forIncomingResponsesOfType:", sel_accountWithIdentifierResponse_, 133);
    objc_msgSend(v10, "setProtobufAction:forIncomingRequestsOfType:", sel_handleDeviceUnlockedForPendingProvisioningRequest_, 56);
    objc_msgSend(v10, "setProtobufAction:forIncomingResponsesOfType:", sel_performDeviceCheckInResponse_, 62);
    objc_msgSend(v10, "setProtobufAction:forIncomingResponsesOfType:", sel_availableProductsResponse_, 63);
    objc_msgSend(v10, "setProtobufAction:forIncomingResponsesOfType:", sel_performProductActionResponse_, 64);
    objc_msgSend(v10, "setProtobufAction:forIncomingResponsesOfType:", sel_checkTLKsMissingResponse_, 41);
    objc_msgSend(v10, "setProtobufAction:forIncomingResponsesOfType:", sel_initializeCloudStoreIfNecessaryWithHandlerResponse_, 42);
    objc_msgSend(v10, "setProtobufAction:forIncomingResponsesOfType:", sel_resetApplePayManateeViewResponse_, 43);
    objc_msgSend(v10, "setProtobufAction:forIncomingRequestsOfType:", sel_downloadAllPaymentPasses_, 35);
    objc_msgSend(v10, "setProtobufAction:forIncomingRequestsOfType:", sel_checkCompanionPeerPaymentRegistrationState_, 37);
    objc_msgSend(v10, "setProtobufAction:forIncomingResponsesOfType:", sel_initializeCloudStoreIfNecessaryResponse_, 38);
    objc_msgSend(v10, "setProtobufAction:forIncomingResponsesOfType:", sel_cloudStoreStatusResponse_, 39);
    objc_msgSend(v10, "setProtobufAction:forIncomingResponsesOfType:", sel_markAllAppletsForDeletionResponse_, 44);
    objc_msgSend(v10, "setProtobufAction:forIncomingRequestsOfType:", sel_handleBalanceChange_, 47);
    objc_msgSend(v10, "setProtobufAction:forIncomingResponsesOfType:", sel_remotePassUpgradeResponse_, 50);
    objc_msgSend(v10, "setProtobufAction:forIncomingResponsesOfType:", sel_handleCheckUpgradedPasscodePolicyResponse_, 61);
    objc_msgSend(v10, "setProtobufAction:forIncomingResponsesOfType:", sel_handleRemoteDevicePasscodeUpgradePresentationPromptResponse_, 108);
    objc_msgSend(v10, "setProtobufAction:forIncomingRequestsOfType:", sel_handlePasscodeUpgradeFlowShouldExitRequest_, 67);
    objc_msgSend(v10, "setProtobufAction:forIncomingResponsesOfType:", sel_handleApplyRestrictionsForPasscodeUpgradeFlowControllerResponse_, 68);
    objc_msgSend(v10, "setProtobufAction:forIncomingResponsesOfType:", sel_handleRemoteDevicePasscodeStateResponse_, 109);
    objc_msgSend(v10, "setProtobufAction:forIncomingResponsesOfType:", sel_subcredentialInvitationsResponse_, 70);
    objc_msgSend(v10, "setProtobufAction:forIncomingResponsesOfType:", sel_acceptSubcredentialInvitationResponse_, 71);
    objc_msgSend(v10, "setProtobufAction:forIncomingResponsesOfType:", sel_acceptSubcredentialInvitationResponse_, 122);
    objc_msgSend(v10, "setProtobufAction:forIncomingResponsesOfType:", sel_matchingCredentialOnDeviceResponse_, 72);
    objc_msgSend(v10, "setProtobufAction:forIncomingResponsesOfType:", sel_canAddSecureElementPassWithConfigurationResponse_, 90);
    objc_msgSend(v10, "setProtobufAction:forIncomingRequestsOfType:", sel_canAcceptInvitationRequest_, 73);
    objc_msgSend(v10, "setProtobufAction:forIncomingResponsesOfType:", sel_canAcceptInvitationResponse_, 73);
    objc_msgSend(v10, "setProtobufAction:forIncomingRequestsOfType:", sel_handleAcceptSubcredentialProvisioningRequest_, 122);
    objc_msgSend(v10, "setProtobufAction:forIncomingRequestsOfType:", sel_handleAcceptSubcredentialProvisioningRequest_, 71);
    objc_msgSend(v10, "setProtobufAction:forIncomingRequestsOfType:", sel_fetchOrInitializeAccountAttestationAnonymizationSaltRequest_, 74);
    objc_msgSend(v10, "setProtobufAction:forIncomingResponsesOfType:", sel_accountAttestationAnonymizationSaltResponse_, 74);
    objc_msgSend(v10, "setProtobufAction:forIncomingResponsesOfType:", sel_setAccountAttestationAnonymizationSaltResponse_, 75);
    objc_msgSend(v10, "setProtobufAction:forIncomingResponsesOfType:", sel_requestSubcredentialInvitationResponse_, 76);
    objc_msgSend(v10, "setProtobufAction:forIncomingResponsesOfType:", sel_updateSubcredentialMetadataResponse_, 77);
    objc_msgSend(v10, "setProtobufAction:forIncomingResponsesOfType:", sel_registerCredentialsResponse_, 78);
    objc_msgSend(v10, "setProtobufAction:forIncomingResponsesOfType:", sel_revokeCredentialsResponse_, 79);
    objc_msgSend(v10, "setProtobufAction:forIncomingResponsesOfType:", sel_removeSharingInvitationResponse_, 80);
    objc_msgSend(v10, "setProtobufAction:forIncomingRequestsOfType:", sel_handleCredentialsChange_, 81);
    objc_msgSend(v10, "setProtobufAction:forIncomingRequestsOfType:", sel_declineRelatedSharingInvitationsIfNecessaryRequest_, 82);
    objc_msgSend(v10, "setProtobufAction:forIncomingResponsesOfType:", sel_declineRelatedSharingInvitationsIfNecessaryResponse_, 82);
    objc_msgSend(v10, "setProtobufAction:forIncomingResponsesOfType:", sel_photosForFamilyMembersWithDSIDsResponse_, 87);
    objc_msgSend(v10, "setProtobufAction:forIncomingResponsesOfType:", sel_featureApplicationsForAccountIdentifierResponse_, 89);
    objc_msgSend(v10, "setProtobufAction:forIncomingResponsesOfType:", sel_provisionHomeKeyPassForSerialNumbersResponse_, 92);
    objc_msgSend(v10, "setProtobufAction:forIncomingResponsesOfType:", sel_availableHomeKeyPassesResponse_, 93);
    objc_msgSend(v10, "setProtobufAction:forIncomingResponsesOfType:", sel_paymentWebServiceRegisterResponse_, 94);
    objc_msgSend(v10, "setProtobufAction:forIncomingResponsesOfType:", sel_createFidoKeyResponse_, 95);
    objc_msgSend(v10, "setProtobufAction:forIncomingResponsesOfType:", sel_checkFidoKeyResponse_, 96);
    objc_msgSend(v10, "setProtobufAction:forIncomingResponsesOfType:", sel_signWithFidoKeyResponse_, 97);
    objc_msgSend(v10, "setProtobufAction:forIncomingResponsesOfType:", sel_generateISOEncryptionCertificateForSubCredentialIdResponse_, 98);
    objc_msgSend(v10, "setProtobufAction:forIncomingResponsesOfType:", sel_requestAndStoreExternalizedAuthWithCompletionResponse_, 99);
    objc_msgSend(v10, "setProtobufAction:forIncomingResponsesOfType:", sel_generateTransactionKeyWithParametersResponse_, 100);
    objc_msgSend(v10, "setProtobufAction:forIncomingResponsesOfType:", sel_generateSEEncryptionCertificateForSubCredentialIdResponse_, 101);
    objc_msgSend(v10, "setProtobufAction:forIncomingResponsesOfType:", sel_addISO18013BlobsResponse_, 107);
    objc_msgSend(v10, "setProtobufAction:forIncomingResponsesOfType:", sel_presentStandaloneTransactionForPassUniqueIdentifierResponse_, 103);
    objc_msgSend(v10, "setProtobufAction:forIncomingResponsesOfType:", sel_serviceProviderDataForPassWithUniqueIdentifierResponse_, 104);
    objc_msgSend(v10, "setProtobufAction:forIncomingResponsesOfType:", sel_generateAuxiliaryCapabilitiesResponse_, 152);
    objc_msgSend(v10, "setProtobufAction:forIncomingResponsesOfType:", sel_longTermPrivacyKeyForCredentialGroupIdentifierResponse_, 110);
    objc_msgSend(v10, "setProtobufAction:forIncomingResponsesOfType:", sel_retrieveShareInvitationForMailboxAddressResponse_, 111);
    objc_msgSend(v10, "setProtobufAction:forIncomingResponsesOfType:", sel_revokeShareForPassIdentifierResponse_, 112);
    objc_msgSend(v10, "setProtobufAction:forIncomingResponsesOfType:", sel_passSharesForCredentialIdentifierResponse_, 113);
    objc_msgSend(v10, "setProtobufAction:forIncomingResponsesOfType:", sel_displayableSharesForPassIdentifierResponse_, 114);
    objc_msgSend(v10, "setProtobufAction:forIncomingResponsesOfType:", sel_displayableEntitlementsForPassIdentifierResponse_, 115);
    objc_msgSend(v10, "setProtobufAction:forIncomingResponsesOfType:", sel_createShareForPartialShareInvitationResponse_, 116);
    objc_msgSend(v10, "setProtobufAction:forIncomingResponsesOfType:", sel_prewarmCreateShareForPassIdentifierResponse_, 127);
    objc_msgSend(v10, "setProtobufAction:forIncomingResponsesOfType:", sel_statusForShareableCredentialsResponse_, 117);
    objc_msgSend(v10, "setProtobufAction:forIncomingResponsesOfType:", sel_prepareProvisioningTargetResponse_, 118);
    objc_msgSend(v10, "setProtobufAction:forIncomingResponsesOfType:", sel_acceptCarKeyShareForMessageResponse_, 121);
    objc_msgSend(v10, "setProtobufAction:forIncomingResponsesOfType:", sel_checkInvitationStatusForMailboxAddress_completion_, 123);
    objc_msgSend(v10, "setProtobufAction:forIncomingResponsesOfType:", sel_updateShareForPassIdentifier_share_authorization_completion_, 124);
    objc_msgSend(v10, "setProtobufAction:forIncomingRequestsOfType:", sel_handleAcceptSubcredentialProvisioningForMailboxAddressRequest_, 126);
    objc_msgSend(v10, "setProtobufAction:forIncomingResponsesOfType:", sel_carKeyStartShareAcceptanceFlowResponse_, 140);
    objc_msgSend(v10, "setProtobufAction:forIncomingResponsesOfType:", sel_carKeyRoutingInformationResponse_, 141);
    objc_msgSend(v10, "setProtobufAction:forIncomingResponsesOfType:", sel_carKeyGetProductPlanIdentifierResponse_, 142);
    objc_msgSend(v10, "setProtobufAction:forIncomingResponsesOfType:", sel_carKeySetEncryptedProductPlanIdentifierContainerResponse_, 143);
    objc_msgSend(v10, "setProtobufAction:forIncomingResponsesOfType:", sel_carKeyAccountAttestationResponse_, 144);
    objc_msgSend(v10, "setProtobufAction:forIncomingResponsesOfType:", sel_carKeyGetPretrackResponse_, 145);
    objc_msgSend(v10, "setProtobufAction:forIncomingResponsesOfType:", sel_carKeySetAccountAttestationResponse_, 146);
    objc_msgSend(v10, "setProtobufAction:forIncomingResponsesOfType:", sel_carKeyUpdateTrackingAttestationResponse_, 147);
    objc_msgSend(v10, "setProtobufAction:forIncomingResponsesOfType:", sel_carKeyAcceptInvitationResponse_, 148);
    objc_msgSend(v10, "setProtobufAction:forIncomingResponsesOfType:", sel_carKeyHandleRecipientMessageResponse_, 149);
    objc_msgSend(v10, "setProtobufAction:forIncomingResponsesOfType:", sel_carKeyRetryActivationCodeResponse_, 150);
    objc_msgSend(v10, "setProtobufAction:forIncomingResponsesOfType:", sel_carKeyDecryptDataResponse_, 151);
    objc_msgSend(v10, "setProtobufAction:forIncomingResponsesOfType:", sel_carKeyRejectInvitationResponse_, 153);
    objc_msgSend(v10, "setProtobufAction:forIncomingResponsesOfType:", sel_addSecureElementPassWithPropertiesResponse_, 154);
    objc_msgSend(v10, "setProtobufAction:forIncomingResponsesOfType:", sel_paymentWebServiceOwnershipTokenResponse_, 119);
    objc_msgSend(v10, "setProtobufAction:forIncomingResponsesOfType:", sel_paymentSetupFeaturesForConfigurationResponse_, 120);
    objc_msgSend(v10, "setProtobufAction:forIncomingResponsesOfType:", sel_hasActiveExternallySharedPassesResponse_, 132);
    objc_msgSend(v10, "setProtobufAction:forIncomingResponsesOfType:", sel_currentSecureElementSnapshotResponse_, 134);
    objc_msgSend(v10, "setProtobufAction:forIncomingResponsesOfType:", sel_reserveStorageForAppletTypesResponse_, 135);
    objc_msgSend(v10, "setProtobufAction:forIncomingResponsesOfType:", sel_deleteReservationResponse_, 136);
    objc_msgSend(v10, "setProtobufAction:forIncomingRequestsOfType:", sel_addPendingProvisioningsRequest_, 137);
    objc_msgSend(v10, "setProtobufAction:forIncomingResponsesOfType:", sel_addPendingProvisioningsResponse_, 137);
    objc_msgSend(v10, "setProtobufAction:forIncomingResponsesOfType:", sel_cancelAutoTopUpResponse_, 138);
    objc_msgSend(v10, "addDelegate:queue:", v8, v6);
    -[NPKPaymentWebServiceCompanionTargetDevice setProvisioningService:](v8, "setProvisioningService:", v10);
    v11 = -[NPKTargetDeviceAssertionManager initWithTransportationService:]([NPKTargetDeviceAssertionManager alloc], "initWithTransportationService:", v10);
    remoteDeviceAssertionManager = v8->_remoteDeviceAssertionManager;
    v8->_remoteDeviceAssertionManager = v11;

    objc_msgSend(MEMORY[0x24BDBCED8], "dictionary");
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    -[NPKPaymentWebServiceCompanionTargetDevice setOutstandingRequests:](v8, "setOutstandingRequests:", v13);

    v14 = dispatch_queue_create("com.apple.NPKPaymentWebServiceCompanionTargetDevice", 0);
    -[NPKPaymentWebServiceCompanionTargetDevice setInternalQueue:](v8, "setInternalQueue:", v14);

  }
  return v8;
}

- (void)service:(id)a3 activeAccountsChanged:(id)a4
{
  id v4;
  NSObject *v5;
  _BOOL4 v6;
  NSObject *v7;
  int v8;
  id v9;
  uint64_t v10;

  v10 = *MEMORY[0x24BDAC8D0];
  v4 = a4;
  pk_Payment_log();
  v5 = objc_claimAutoreleasedReturnValue();
  v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    pk_Payment_log();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      v8 = 138412290;
      v9 = v4;
      _os_log_impl(&dword_213518000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Active accounts changed: %@", (uint8_t *)&v8, 0xCu);
    }

  }
}

- (void)service:(id)a3 devicesChanged:(id)a4
{
  id v4;
  NSObject *v5;
  _BOOL4 v6;
  NSObject *v7;
  int v8;
  id v9;
  uint64_t v10;

  v10 = *MEMORY[0x24BDAC8D0];
  v4 = a4;
  pk_Payment_log();
  v5 = objc_claimAutoreleasedReturnValue();
  v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    pk_Payment_log();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      v8 = 138412290;
      v9 = v4;
      _os_log_impl(&dword_213518000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Devices changed: %@", (uint8_t *)&v8, 0xCu);
    }

  }
}

- (void)service:(id)a3 account:(id)a4 incomingUnhandledProtobuf:(id)a5 fromID:(id)a6 context:(id)a7
{
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  NSObject *v16;
  _BOOL4 v17;
  NSObject *v18;
  int v19;
  id v20;
  __int16 v21;
  id v22;
  __int16 v23;
  id v24;
  __int16 v25;
  id v26;
  __int16 v27;
  id v28;
  uint64_t v29;

  v29 = *MEMORY[0x24BDAC8D0];
  v11 = a3;
  v12 = a4;
  v13 = a5;
  v14 = a6;
  v15 = a7;
  pk_Payment_log();
  v16 = objc_claimAutoreleasedReturnValue();
  v17 = os_log_type_enabled(v16, OS_LOG_TYPE_ERROR);

  if (v17)
  {
    pk_Payment_log();
    v18 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR))
    {
      v19 = 138413314;
      v20 = v11;
      v21 = 2112;
      v22 = v12;
      v23 = 2112;
      v24 = v13;
      v25 = 2112;
      v26 = v14;
      v27 = 2112;
      v28 = v15;
      _os_log_impl(&dword_213518000, v18, OS_LOG_TYPE_ERROR, "Error: Incoming unhandled protobuf: %@ %@ %@ %@ %@", (uint8_t *)&v19, 0x34u);
    }

  }
}

- (void)service:(id)a3 account:(id)a4 identifier:(id)a5 didSendWithSuccess:(BOOL)a6 error:(id)a7
{
  _BOOL4 v8;
  id v12;
  id v13;
  id v14;
  id v15;
  NSObject *v16;
  _BOOL4 v17;
  NSObject *v18;
  NSObject *v19;
  id v20;
  id v21;
  _QWORD v22[5];
  id v23;
  id v24;
  BOOL v25;
  uint8_t buf[4];
  id v27;
  __int16 v28;
  id v29;
  __int16 v30;
  id v31;
  __int16 v32;
  _BOOL4 v33;
  __int16 v34;
  id v35;
  uint64_t v36;

  v8 = a6;
  v36 = *MEMORY[0x24BDAC8D0];
  v12 = a3;
  v13 = a4;
  v14 = a5;
  v15 = a7;
  pk_Payment_log();
  v16 = objc_claimAutoreleasedReturnValue();
  v17 = os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT);

  if (v17)
  {
    pk_Payment_log();
    v18 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138413314;
      v27 = v12;
      v28 = 2112;
      v29 = v13;
      v30 = 2112;
      v31 = v14;
      v32 = 1024;
      v33 = v8;
      v34 = 2112;
      v35 = v15;
      _os_log_impl(&dword_213518000, v18, OS_LOG_TYPE_DEFAULT, "Notice: Service sent with success: %@ %@ %@ %d %@", buf, 0x30u);
    }

  }
  -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
  v19 = objc_claimAutoreleasedReturnValue();
  v22[0] = MEMORY[0x24BDAC760];
  v22[1] = 3221225472;
  v22[2] = __97__NPKPaymentWebServiceCompanionTargetDevice_service_account_identifier_didSendWithSuccess_error___block_invoke;
  v22[3] = &unk_24CFECEF8;
  v22[4] = self;
  v23 = v14;
  v25 = v8;
  v24 = v15;
  v20 = v15;
  v21 = v14;
  dispatch_async(v19, v22);

}

void __97__NPKPaymentWebServiceCompanionTargetDevice_service_account_identifier_didSendWithSuccess_error___block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;
  NSObject *v4;
  _BOOL4 v5;
  NSObject *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  NSObject *v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(uint64_t);
  void *v24;
  id v25;
  id v26;
  _QWORD v27[2];
  _QWORD v28[2];
  uint8_t buf[4];
  uint64_t v30;
  __int16 v31;
  void *v32;
  __int16 v33;
  void *v34;
  uint64_t v35;

  v35 = *MEMORY[0x24BDAC8D0];
  objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "objectForKey:", *(_QWORD *)(a1 + 40));
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  pk_Payment_log();
  v4 = objc_claimAutoreleasedReturnValue();
  v5 = os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT);

  if (v5)
  {
    pk_Payment_log();
    v6 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      v7 = *(_QWORD *)(a1 + 40);
      objc_msgSend(v3, "errorHandler");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      v9 = (void *)MEMORY[0x2199B6780]();
      *(_DWORD *)buf = 138412802;
      v30 = v7;
      v31 = 2112;
      v32 = v3;
      v33 = 2112;
      v34 = v9;
      _os_log_impl(&dword_213518000, v6, OS_LOG_TYPE_DEFAULT, "Notice: identifier %@ request %@ error handler %@", buf, 0x20u);

    }
  }
  if (v3 && !*(_BYTE *)(a1 + 56))
  {
    NPKGetIDSCommunicationError();
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    v11 = *MEMORY[0x24BDD1398];
    v28[0] = *(_QWORD *)(a1 + 48);
    v12 = *MEMORY[0x24BDD0FC8];
    v27[0] = v11;
    v27[1] = v12;
    objc_msgSend(v10, "localizedDescription");
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    v28[1] = v13;
    objc_msgSend(MEMORY[0x24BDBCE70], "dictionaryWithObjects:forKeys:count:", v28, v27, 2);
    v14 = (void *)objc_claimAutoreleasedReturnValue();

    v15 = (void *)MEMORY[0x24BDD1540];
    objc_msgSend(v10, "domain");
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v15, "errorWithDomain:code:userInfo:", v16, objc_msgSend(v10, "code"), v14);
    v17 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend(v3, "errorHandler");
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    if (v18)
    {
      dispatch_get_global_queue(0, 0);
      v19 = objc_claimAutoreleasedReturnValue();
      v21 = MEMORY[0x24BDAC760];
      v22 = 3221225472;
      v23 = __97__NPKPaymentWebServiceCompanionTargetDevice_service_account_identifier_didSendWithSuccess_error___block_invoke_326;
      v24 = &unk_24CFE9188;
      v26 = v18;
      v25 = v17;
      dispatch_async(v19, &v21);

    }
    objc_msgSend(*(id *)(a1 + 32), "outstandingRequests", v21, v22, v23, v24);
    v20 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v20, "removeObjectForKey:", *(_QWORD *)(a1 + 40));

  }
}

uint64_t __97__NPKPaymentWebServiceCompanionTargetDevice_service_account_identifier_didSendWithSuccess_error___block_invoke_326(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(a1 + 40) + 16))(*(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 32));
}

- (BOOL)supportsAutomaticPassPresentation
{
  return 0;
}

- (id)bridgedClientInfo
{
  return (id)objc_msgSend((id)objc_opt_class(), "bridgedClientInfoHTTPHeader");
}

- (unint64_t)currentPassbookState
{
  void *v2;
  void *v3;
  int v4;

  if (!PKPassbookIsSupported())
    return 0;
  NPKPairedOrPairingDevice();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = (void *)objc_msgSend(objc_alloc(MEMORY[0x24BDD1880]), "initWithUUIDString:", CFSTR("A3D877D2-408A-43F1-9CA4-39C9F3609A93"));
  v4 = objc_msgSend(v2, "supportsCapability:", v3);

  if (!v4)
    return 1;
  if (NPKPairedWatchHasWalletInstalled())
    return 1;
  return 3;
}

- (void)noteProvisioningDidBegin
{
  NSObject *v3;
  _BOOL4 v4;
  NSObject *v5;
  uint8_t v6[16];

  pk_Payment_log();
  v3 = objc_claimAutoreleasedReturnValue();
  v4 = os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT);

  if (v4)
  {
    pk_Payment_log();
    v5 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)v6 = 0;
      _os_log_impl(&dword_213518000, v5, OS_LOG_TYPE_DEFAULT, "Notice: Noting that provisioning began", v6, 2u);
    }

  }
  -[NPKPaymentWebServiceCompanionTargetDevice _acquireAssertionOfType:](self, "_acquireAssertionOfType:", 1);
}

- (void)noteProvisioningDidEnd
{
  NSObject *v3;
  _BOOL4 v4;
  NSObject *v5;
  uint8_t v6[16];

  pk_Payment_log();
  v3 = objc_claimAutoreleasedReturnValue();
  v4 = os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT);

  if (v4)
  {
    pk_Payment_log();
    v5 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)v6 = 0;
      _os_log_impl(&dword_213518000, v5, OS_LOG_TYPE_DEFAULT, "Notice: Noting that provisioning ended", v6, 2u);
    }

  }
  -[NPKPaymentWebServiceCompanionTargetDevice _invalidateAssertionOfType:](self, "_invalidateAssertionOfType:", 1);
}

- (void)startBackgroundVerificationObserverForPass:(id)a3 verificationMethod:(id)a4
{
  id v6;
  id v7;
  NSObject *v8;
  _BOOL4 v9;
  NSObject *v10;
  void *v11;
  void *v12;
  void *v13;
  int v14;
  void *v15;
  __int16 v16;
  void *v17;
  uint64_t v18;

  v18 = *MEMORY[0x24BDAC8D0];
  v6 = a3;
  v7 = a4;
  pk_Payment_log();
  v8 = objc_claimAutoreleasedReturnValue();
  v9 = os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT);

  if (v9)
  {
    pk_Payment_log();
    v10 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend(v6, "uniqueID");
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v7, "identifier");
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      v14 = 138412546;
      v15 = v11;
      v16 = 2112;
      v17 = v12;
      _os_log_impl(&dword_213518000, v10, OS_LOG_TYPE_DEFAULT, "Notice: Starting background verification observer for %@ with verification method %@", (uint8_t *)&v14, 0x16u);

    }
  }
  -[NPKPaymentWebServiceCompanionTargetDevice delegate](self, "delegate");
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v13, "startBackgroundVerificationObserverForPass:verificationMethod:", v6, v7);

}

- (void)noteForegroundVerificationObserverActive:(BOOL)a3
{
  _BOOL8 v3;
  NSObject *v5;
  _BOOL4 v6;
  NSObject *v7;
  void *v8;
  _DWORD v9[2];
  uint64_t v10;

  v3 = a3;
  v10 = *MEMORY[0x24BDAC8D0];
  pk_Payment_log();
  v5 = objc_claimAutoreleasedReturnValue();
  v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    pk_Payment_log();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      v9[0] = 67109120;
      v9[1] = v3;
      _os_log_impl(&dword_213518000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Noting foreground verification observer active: %d", (uint8_t *)v9, 8u);
    }

  }
  -[NPKPaymentWebServiceCompanionTargetDevice delegate](self, "delegate");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "noteForegroundVerificationObserverActive:", v3);

}

- (void)noteProvisioningUserInterfaceDidAppear
{
  NSObject *v3;
  _BOOL4 v4;
  NSObject *v5;
  void *v6;
  void *v7;
  _QWORD v8[5];
  uint8_t buf[16];

  pk_Payment_log();
  v3 = objc_claimAutoreleasedReturnValue();
  v4 = os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT);

  if (v4)
  {
    pk_Payment_log();
    v5 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl(&dword_213518000, v5, OS_LOG_TYPE_DEFAULT, "Notice: Noting that the provisioning UI appeared", buf, 2u);
    }

  }
  NPKPairedOrPairingDevice();
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  if (v6)
  {
    objc_msgSend(MEMORY[0x24BE6B4E0], "sharedInstance");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v8[0] = MEMORY[0x24BDAC760];
    v8[1] = 3221225472;
    v8[2] = __83__NPKPaymentWebServiceCompanionTargetDevice_noteProvisioningUserInterfaceDidAppear__block_invoke;
    v8[3] = &unk_24CFECF20;
    v8[4] = self;
    objc_msgSend(v7, "setActivePairedDevice:withActiveDeviceAssertionHandler:", v6, v8);

  }
}

void __83__NPKPaymentWebServiceCompanionTargetDevice_noteProvisioningUserInterfaceDidAppear__block_invoke(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  NSObject *v7;
  _BOOL4 v8;
  NSObject *v9;
  void *v10;
  int v11;
  id v12;
  __int16 v13;
  id v14;
  uint64_t v15;

  v15 = *MEMORY[0x24BDAC8D0];
  v5 = a2;
  v6 = a3;
  pk_Payment_log();
  v7 = objc_claimAutoreleasedReturnValue();
  v8 = os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT);

  if (v8)
  {
    pk_Payment_log();
    v9 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      v11 = 138412546;
      v12 = v5;
      v13 = 2112;
      v14 = v6;
      _os_log_impl(&dword_213518000, v9, OS_LOG_TYPE_DEFAULT, "Notice: error %@ assertion %@", (uint8_t *)&v11, 0x16u);
    }

  }
  if (v6)
  {
    objc_msgSend(*(id *)(a1 + 32), "provisioningActiveDeviceAssertion");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "invalidate");

    objc_msgSend(*(id *)(a1 + 32), "setProvisioningActiveDeviceAssertion:", v6);
  }

}

- (void)noteProvisioningUserInterfaceDidDisappear
{
  NSObject *v3;
  _BOOL4 v4;
  NSObject *v5;
  void *v6;
  uint8_t v7[16];

  pk_Payment_log();
  v3 = objc_claimAutoreleasedReturnValue();
  v4 = os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT);

  if (v4)
  {
    pk_Payment_log();
    v5 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)v7 = 0;
      _os_log_impl(&dword_213518000, v5, OS_LOG_TYPE_DEFAULT, "Notice: Noting that the provisioning UI disappeared", v7, 2u);
    }

  }
  -[NPKPaymentWebServiceCompanionTargetDevice provisioningActiveDeviceAssertion](self, "provisioningActiveDeviceAssertion");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "invalidate");

  -[NPKPaymentWebServiceCompanionTargetDevice setProvisioningActiveDeviceAssertion:](self, "setProvisioningActiveDeviceAssertion:", 0);
}

- (void)setMaximumPaymentCards:(unint64_t)a3
{
  NPKSetMaxPaymentCards(a3);
}

- (void)archiveContext:(id)a3
{
  id v4;
  NSObject *v5;
  _BOOL4 v6;
  NSObject *v7;
  void *v8;
  void *v9;
  int v10;
  id v11;
  uint64_t v12;

  v12 = *MEMORY[0x24BDAC8D0];
  v4 = a3;
  pk_Payment_log();
  v5 = objc_claimAutoreleasedReturnValue();
  v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    pk_Payment_log();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      v10 = 138412290;
      v11 = v4;
      _os_log_impl(&dword_213518000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Archiving web service context: %@", (uint8_t *)&v10, 0xCu);
    }

  }
  -[NPKPaymentWebServiceCompanionTargetDevice delegate](self, "delegate");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "archiveWebServiceContext:", v4);

  -[NPKPaymentWebServiceCompanionTargetDevice delegate](self, "delegate");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "sendWebServiceContextToWatch");

}

- (void)archiveBackgroundContext:(id)a3
{
  id v4;
  NSObject *v5;
  _BOOL4 v6;
  NSObject *v7;
  void *v8;
  int v9;
  id v10;
  uint64_t v11;

  v11 = *MEMORY[0x24BDAC8D0];
  v4 = a3;
  pk_Payment_log();
  v5 = objc_claimAutoreleasedReturnValue();
  v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    pk_Payment_log();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      v9 = 138412290;
      v10 = v4;
      _os_log_impl(&dword_213518000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Archiving web service background context: %@", (uint8_t *)&v9, 0xCu);
    }

  }
  -[NPKPaymentWebServiceCompanionTargetDevice delegate](self, "delegate");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "archiveWebServiceBackgroundContext:", v4);

}

- (BOOL)paymentWebService:(id)a3 hasPassesOfType:(unint64_t)a4
{
  id v6;
  void *v7;
  NSObject *v8;
  _BOOL4 v9;
  NSObject *v10;
  int v11;
  BOOL v12;
  _QWORD v14[5];
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  char v18;
  uint8_t buf[4];
  unint64_t v20;
  __int16 v21;
  int v22;
  uint64_t v23;

  v23 = *MEMORY[0x24BDAC8D0];
  v6 = a3;
  v15 = 0;
  v16 = &v15;
  v17 = 0x2020000000;
  v18 = 0;
  if (a4 == 1)
  {
    -[NPKPaymentWebServiceCompanionTargetDevice companionAgentConnection](self, "companionAgentConnection");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v14[0] = MEMORY[0x24BDAC760];
    v14[1] = 3221225472;
    v14[2] = __79__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_hasPassesOfType___block_invoke;
    v14[3] = &unk_24CFECF48;
    v14[4] = &v15;
    objc_msgSend(v7, "paymentPassUniqueIDsSynchronous:reply:", 1, v14);

  }
  pk_Payment_log();
  v8 = objc_claimAutoreleasedReturnValue();
  v9 = os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT);

  if (v9)
  {
    pk_Payment_log();
    v10 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
    {
      v11 = *((unsigned __int8 *)v16 + 24);
      *(_DWORD *)buf = 134218240;
      v20 = a4;
      v21 = 1024;
      v22 = v11;
      _os_log_impl(&dword_213518000, v10, OS_LOG_TYPE_DEFAULT, "Notice: Payment web service has passes of type %lu? %d", buf, 0x12u);
    }

  }
  v12 = *((_BYTE *)v16 + 24) != 0;
  _Block_object_dispose(&v15, 8);

  return v12;
}

uint64_t __79__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_hasPassesOfType___block_invoke(uint64_t a1, void *a2)
{
  uint64_t result;

  result = objc_msgSend(a2, "count");
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result != 0;
  return result;
}

- (id)paymentWebService:(id)a3 passesOfType:(unint64_t)a4
{
  void *v6;
  void *v7;
  _QWORD v9[5];
  id v10;

  objc_msgSend(MEMORY[0x24BDBCEB8], "array", a3);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  if (a4 == 1)
  {
    -[NPKPaymentWebServiceCompanionTargetDevice companionAgentConnection](self, "companionAgentConnection");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v9[0] = MEMORY[0x24BDAC760];
    v9[1] = 3221225472;
    v9[2] = __76__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_passesOfType___block_invoke;
    v9[3] = &unk_24CFEAB88;
    v9[4] = self;
    v10 = v6;
    objc_msgSend(v7, "paymentPassUniqueIDsSynchronous:reply:", 1, v9);

  }
  return v6;
}

void __76__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_passesOfType___block_invoke(uint64_t a1, void *a2)
{
  void *v3;
  _QWORD v4[5];
  id v5;

  v4[0] = MEMORY[0x24BDAC760];
  v4[1] = 3221225472;
  v4[2] = __76__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_passesOfType___block_invoke_2;
  v4[3] = &unk_24CFEC558;
  v3 = *(void **)(a1 + 40);
  v4[4] = *(_QWORD *)(a1 + 32);
  v5 = v3;
  objc_msgSend(a2, "enumerateObjectsUsingBlock:", v4);

}

void __76__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_passesOfType___block_invoke_2(uint64_t a1, void *a2)
{
  void *v3;
  id v4;
  void *v5;
  _QWORD v6[4];
  id v7;

  v3 = *(void **)(a1 + 32);
  v4 = a2;
  objc_msgSend(v3, "companionAgentConnection");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6[0] = MEMORY[0x24BDAC760];
  v6[1] = 3221225472;
  v6[2] = __76__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_passesOfType___block_invoke_3;
  v6[3] = &unk_24CFECF70;
  v7 = *(id *)(a1 + 40);
  objc_msgSend(v5, "paymentPassWithUniqueID:synchronous:reply:", v4, 1, v6);

}

uint64_t __76__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_passesOfType___block_invoke_3(uint64_t result, uint64_t a2)
{
  if (a2)
    return objc_msgSend(*(id *)(result + 32), "addObject:", a2);
  return result;
}

- (BOOL)paymentWebService:(id)a3 canProvisionPaymentPassWithPrimaryAccountIdentifier:(id)a4
{
  id v6;
  id v7;
  NSObject *v8;
  _BOOL4 v9;
  NSObject *v10;
  void *v11;
  dispatch_semaphore_t v12;
  NSObject *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t i;
  BOOL v18;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  _QWORD v24[4];
  NSObject *v25;
  __int128 *p_buf;
  uint8_t v27[128];
  __int128 buf;
  uint64_t v29;
  uint64_t (*v30)(uint64_t, uint64_t);
  void (*v31)(uint64_t);
  id v32;
  uint64_t v33;

  v33 = *MEMORY[0x24BDAC8D0];
  v6 = a3;
  v7 = a4;
  pk_Payment_log();
  v8 = objc_claimAutoreleasedReturnValue();
  v9 = os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT);

  if (v9)
  {
    pk_Payment_log();
    v10 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
    {
      LODWORD(buf) = 138412290;
      *(_QWORD *)((char *)&buf + 4) = v7;
      _os_log_impl(&dword_213518000, v10, OS_LOG_TYPE_DEFAULT, "Notice: Can provision payment pass with primary account identifier %@", (uint8_t *)&buf, 0xCu);
    }

  }
  if (v7)
  {
    -[NPKPaymentWebServiceCompanionTargetDevice companionAgentConnection](self, "companionAgentConnection");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    v12 = dispatch_semaphore_create(0);
    *(_QWORD *)&buf = 0;
    *((_QWORD *)&buf + 1) = &buf;
    v29 = 0x3032000000;
    v30 = __Block_byref_object_copy__23;
    v31 = __Block_byref_object_dispose__23;
    v32 = 0;
    v24[0] = MEMORY[0x24BDAC760];
    v24[1] = 3221225472;
    v24[2] = __115__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_canProvisionPaymentPassWithPrimaryAccountIdentifier___block_invoke;
    v24[3] = &unk_24CFECF98;
    p_buf = &buf;
    v13 = v12;
    v25 = v13;
    objc_msgSend(v11, "paymentPassesWithPrimaryAccountIdentifier:completion:", v7, v24);
    dispatch_semaphore_wait(v13, 0xFFFFFFFFFFFFFFFFLL);
    v22 = 0u;
    v23 = 0u;
    v20 = 0u;
    v21 = 0u;
    v14 = *(id *)(*((_QWORD *)&buf + 1) + 40);
    v15 = objc_msgSend(v14, "countByEnumeratingWithState:objects:count:", &v20, v27, 16);
    if (v15)
    {
      v16 = *(_QWORD *)v21;
      while (2)
      {
        for (i = 0; i != v15; ++i)
        {
          if (*(_QWORD *)v21 != v16)
            objc_enumerationMutation(v14);
          if ((unint64_t)objc_msgSend(*(id *)(*((_QWORD *)&v20 + 1) + 8 * i), "activationState", (_QWORD)v20) < 4)
          {
            v18 = 0;
            goto LABEL_16;
          }
        }
        v15 = objc_msgSend(v14, "countByEnumeratingWithState:objects:count:", &v20, v27, 16);
        if (v15)
          continue;
        break;
      }
    }
    v18 = 1;
LABEL_16:

    _Block_object_dispose(&buf, 8);
  }
  else
  {
    v18 = 1;
  }

  return v18;
}

void __115__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_canProvisionPaymentPassWithPrimaryAccountIdentifier___block_invoke(uint64_t a1, void *a2)
{
  id v4;

  objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), a2);
  v4 = a2;
  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));

}

- (void)paymentWebService:(id)a3 validateAddPreconditionsWithCompletion:(id)a4
{
  id v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  _QWORD v11[4];
  id v12;
  NPKPaymentWebServiceCompanionTargetDevice *v13;
  id v14;

  v6 = a3;
  v7 = a4;
  v8 = (void *)MEMORY[0x24BE6ECE0];
  v11[0] = MEMORY[0x24BDAC760];
  v11[1] = 3221225472;
  v11[2] = __102__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_validateAddPreconditionsWithCompletion___block_invoke;
  v11[3] = &unk_24CFE7B30;
  v12 = v6;
  v13 = self;
  v14 = v7;
  v9 = v7;
  v10 = v6;
  objc_msgSend(v8, "configureWebServiceIfNecessary:completion:", v10, v11);

}

void __102__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_validateAddPreconditionsWithCompletion___block_invoke(_QWORD *a1, void *a2)
{
  id v3;
  NSObject *v4;
  _BOOL4 v5;
  NSObject *v6;
  NPKPaymentPreflighter *v7;
  uint64_t v8;
  void *v9;
  void *v10;
  NPKPaymentPreflighter *v11;
  int v12;
  id v13;
  uint64_t v14;

  v14 = *MEMORY[0x24BDAC8D0];
  v3 = a2;
  if (v3)
  {
    pk_Payment_log();
    v4 = objc_claimAutoreleasedReturnValue();
    v5 = os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT);

    if (v5)
    {
      pk_Payment_log();
      v6 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
      {
        v12 = 138412290;
        v13 = v3;
        _os_log_impl(&dword_213518000, v6, OS_LOG_TYPE_DEFAULT, "Warning: Web service configuration failed (%@). Continuing preflight anyway.", (uint8_t *)&v12, 0xCu);
      }

    }
  }
  v7 = [NPKPaymentPreflighter alloc];
  v8 = a1[4];
  v9 = (void *)a1[5];
  objc_msgSend(v9, "companionAgentConnection");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v11 = -[NPKPaymentPreflighter initWithWebService:targetDevice:companionAgentConnection:](v7, "initWithWebService:targetDevice:companionAgentConnection:", v8, v9, v10);

  -[NPKPaymentPreflighter addCardPreflightWithCompletion:](v11, "addCardPreflightWithCompletion:", a1[6]);
}

- (void)paymentWebService:(id)a3 validateTransferPreconditionsWithCompletion:(id)a4
{
  id v6;
  id v7;
  NPKPaymentPreflighter *v8;
  void *v9;
  NPKPaymentPreflighter *v10;

  v6 = a4;
  v7 = a3;
  v8 = [NPKPaymentPreflighter alloc];
  -[NPKPaymentWebServiceCompanionTargetDevice companionAgentConnection](self, "companionAgentConnection");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v10 = -[NPKPaymentPreflighter initWithWebService:targetDevice:companionAgentConnection:](v8, "initWithWebService:targetDevice:companionAgentConnection:", v7, self, v9);

  -[NPKPaymentPreflighter transferToCompanionPreflightWithCompletion:](v10, "transferToCompanionPreflightWithCompletion:", v6);
}

- (void)paymentWebService:(id)a3 validateAddBiometricPassPreconditionsWithCompletion:(id)a4
{
  id v6;
  id v7;
  NSObject *v8;
  _BOOL4 v9;
  NSObject *v10;
  void *v11;
  id v12;
  id v13;
  _QWORD v14[4];
  id v15;
  NPKPaymentWebServiceCompanionTargetDevice *v16;
  id v17;
  uint8_t buf[16];

  v6 = a3;
  v7 = a4;
  pk_Payment_log();
  v8 = objc_claimAutoreleasedReturnValue();
  v9 = os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT);

  if (v9)
  {
    pk_Payment_log();
    v10 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl(&dword_213518000, v10, OS_LOG_TYPE_DEFAULT, "Notice: Requested BiometricPassPreconditions", buf, 2u);
    }

  }
  v11 = (void *)MEMORY[0x24BE6ECE0];
  v14[0] = MEMORY[0x24BDAC760];
  v14[1] = 3221225472;
  v14[2] = __115__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_validateAddBiometricPassPreconditionsWithCompletion___block_invoke;
  v14[3] = &unk_24CFE7B30;
  v15 = v6;
  v16 = self;
  v17 = v7;
  v12 = v7;
  v13 = v6;
  objc_msgSend(v11, "configureWebServiceIfNecessary:completion:", v13, v14);

}

void __115__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_validateAddBiometricPassPreconditionsWithCompletion___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  _BOOL4 v5;
  NSObject *v6;
  NPKPaymentPreflighter *v7;
  uint64_t v8;
  void *v9;
  void *v10;
  NPKPaymentPreflighter *v11;
  _QWORD v12[4];
  id v13;
  uint8_t buf[4];
  id v15;
  uint64_t v16;

  v16 = *MEMORY[0x24BDAC8D0];
  v3 = a2;
  if (v3)
  {
    pk_Payment_log();
    v4 = objc_claimAutoreleasedReturnValue();
    v5 = os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT);

    if (v5)
    {
      pk_Payment_log();
      v6 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 138412290;
        v15 = v3;
        _os_log_impl(&dword_213518000, v6, OS_LOG_TYPE_DEFAULT, "Warning: Web service configuration for Biometric Pass Precondition failed (%@). Continue preflight anyway", buf, 0xCu);
      }

    }
  }
  v7 = [NPKPaymentPreflighter alloc];
  v8 = *(_QWORD *)(a1 + 32);
  v9 = *(void **)(a1 + 40);
  objc_msgSend(v9, "companionAgentConnection");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v11 = -[NPKPaymentPreflighter initWithWebService:targetDevice:companionAgentConnection:](v7, "initWithWebService:targetDevice:companionAgentConnection:", v8, v9, v10);

  v12[0] = MEMORY[0x24BDAC760];
  v12[1] = 3221225472;
  v12[2] = __115__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_validateAddBiometricPassPreconditionsWithCompletion___block_invoke_340;
  v12[3] = &unk_24CFE7940;
  v13 = *(id *)(a1 + 48);
  -[NPKPaymentPreflighter addBiometricPassPreflightWithCompletion:](v11, "addBiometricPassPreflightWithCompletion:", v12);

}

void __115__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_validateAddBiometricPassPreconditionsWithCompletion___block_invoke_340(uint64_t a1, int a2, void *a3)
{
  id v5;
  NSObject *v6;
  _BOOL4 v7;
  NSObject *v8;
  _DWORD v9[2];
  __int16 v10;
  id v11;
  uint64_t v12;

  v12 = *MEMORY[0x24BDAC8D0];
  v5 = a3;
  pk_Payment_log();
  v6 = objc_claimAutoreleasedReturnValue();
  v7 = os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT);

  if (v7)
  {
    pk_Payment_log();
    v8 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      v9[0] = 67109378;
      v9[1] = a2;
      v10 = 2112;
      v11 = v5;
      _os_log_impl(&dword_213518000, v8, OS_LOG_TYPE_DEFAULT, "Notice: Finish BiometricPassPreconditions successful:%d error:%@", (uint8_t *)v9, 0x12u);
    }

  }
  (*(void (**)(void))(*(_QWORD *)(a1 + 32) + 16))();

}

- (void)setNewAuthRandomResponse:(id)a3
{
  id v4;
  NSObject *v5;
  _BOOL4 v6;
  NSObject *v7;
  void *v8;
  void *v9;
  void *v10;
  NSObject *v11;
  NSObject *v12;
  _BOOL4 v13;
  NSObject *v14;
  uint64_t v15;
  uint8_t v16[8];
  _QWORD block[5];
  id v18;
  id v19;
  uint64_t *v20;
  uint64_t *v21;
  uint64_t *v22;
  __int128 *p_buf;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t (*v27)(uint64_t, uint64_t);
  void (*v28)(uint64_t);
  id v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t (*v33)(uint64_t, uint64_t);
  void (*v34)(uint64_t);
  id v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  char v39;
  __int128 buf;
  uint64_t v41;
  uint64_t (*v42)(uint64_t, uint64_t);
  void (*v43)(uint64_t);
  id v44;
  uint64_t v45;

  v45 = *MEMORY[0x24BDAC8D0];
  v4 = a3;
  pk_Payment_log();
  v5 = objc_claimAutoreleasedReturnValue();
  v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    pk_Payment_log();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend(v4, "npkDescription");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      LODWORD(buf) = 138412290;
      *(_QWORD *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_213518000, v7, OS_LOG_TYPE_DEFAULT, "Notice: incoming protobuf %@", (uint8_t *)&buf, 0xCu);

    }
  }
  objc_msgSend(v4, "context");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "incomingResponseIdentifier");
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  *(_QWORD *)&buf = 0;
  *((_QWORD *)&buf + 1) = &buf;
  v41 = 0x3032000000;
  v42 = __Block_byref_object_copy__342;
  v43 = __Block_byref_object_dispose__343;
  v44 = 0;
  v36 = 0;
  v37 = &v36;
  v38 = 0x2020000000;
  v39 = 0;
  v30 = 0;
  v31 = &v30;
  v32 = 0x3032000000;
  v33 = __Block_byref_object_copy__23;
  v34 = __Block_byref_object_dispose__23;
  v35 = 0;
  v24 = 0;
  v25 = &v24;
  v26 = 0x3032000000;
  v27 = __Block_byref_object_copy__23;
  v28 = __Block_byref_object_dispose__23;
  v29 = 0;
  if (v10)
  {
    -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
    v11 = objc_claimAutoreleasedReturnValue();
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 3221225472;
    block[2] = __70__NPKPaymentWebServiceCompanionTargetDevice_setNewAuthRandomResponse___block_invoke;
    block[3] = &unk_24CFECFC0;
    block[4] = self;
    v18 = v10;
    v19 = v4;
    v20 = &v36;
    v21 = &v30;
    v22 = &v24;
    p_buf = &buf;
    dispatch_sync(v11, block);

  }
  else
  {
    pk_Payment_log();
    v12 = objc_claimAutoreleasedReturnValue();
    v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      pk_Payment_log();
      v14 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)v16 = 0;
        _os_log_impl(&dword_213518000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v16, 2u);
      }

    }
  }
  v15 = *(_QWORD *)(*((_QWORD *)&buf + 1) + 40);
  if (v15)
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t, _QWORD))(v15 + 16))(v15, *((unsigned __int8 *)v37 + 24), v31[5], v25[5], 0);
  _Block_object_dispose(&v24, 8);

  _Block_object_dispose(&v30, 8);
  _Block_object_dispose(&v36, 8);
  _Block_object_dispose(&buf, 8);

}

void __70__NPKPaymentWebServiceCompanionTargetDevice_setNewAuthRandomResponse___block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;
  NPKProtoSecureElementSetNewAuthRandomResponse *v4;
  void *v5;
  NPKProtoSecureElementSetNewAuthRandomResponse *v6;
  NSObject *v7;
  _BOOL4 v8;
  NSObject *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint8_t v20[16];

  objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "objectForKey:", *(_QWORD *)(a1 + 40));
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  if (v3)
  {
    v4 = [NPKProtoSecureElementSetNewAuthRandomResponse alloc];
    objc_msgSend(*(id *)(a1 + 48), "data");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    v6 = -[NPKProtoSecureElementSetNewAuthRandomResponse initWithData:](v4, "initWithData:", v5);

    if (-[NPKProtoSecureElementSetNewAuthRandomResponse pending](v6, "pending"))
    {
      objc_msgSend(v3, "setOrResetCleanupTimer");
    }
    else
    {
      *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 24) = -[NPKProtoSecureElementSetNewAuthRandomResponse success](v6, "success");
      -[NPKProtoSecureElementSetNewAuthRandomResponse cryptogram](v6, "cryptogram");
      v10 = objc_claimAutoreleasedReturnValue();
      v11 = *(_QWORD *)(*(_QWORD *)(a1 + 64) + 8);
      v12 = *(void **)(v11 + 40);
      *(_QWORD *)(v11 + 40) = v10;

      -[NPKProtoSecureElementSetNewAuthRandomResponse challengeResponse](v6, "challengeResponse");
      v13 = objc_claimAutoreleasedReturnValue();
      v14 = *(_QWORD *)(*(_QWORD *)(a1 + 72) + 8);
      v15 = *(void **)(v14 + 40);
      *(_QWORD *)(v14 + 40) = v13;

      objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
      v16 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v16, "removeObjectForKey:", *(_QWORD *)(a1 + 40));

      objc_msgSend(v3, "completionHandler");
      v17 = objc_claimAutoreleasedReturnValue();
      v18 = *(_QWORD *)(*(_QWORD *)(a1 + 80) + 8);
      v19 = *(void **)(v18 + 40);
      *(_QWORD *)(v18 + 40) = v17;

    }
  }
  else
  {
    pk_Payment_log();
    v7 = objc_claimAutoreleasedReturnValue();
    v8 = os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT);

    if (v8)
    {
      pk_Payment_log();
      v9 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)v20 = 0;
        _os_log_impl(&dword_213518000, v9, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", v20, 2u);
      }

    }
  }

}

- (void)_setNewAuthRandomReturningPairingState:(id)a3
{
  id v4;
  NSObject *v5;
  id v6;
  _QWORD block[5];
  id v8;

  v4 = a3;
  -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
  v5 = objc_claimAutoreleasedReturnValue();
  block[0] = MEMORY[0x24BDAC760];
  block[1] = 3221225472;
  block[2] = __84__NPKPaymentWebServiceCompanionTargetDevice__setNewAuthRandomReturningPairingState___block_invoke;
  block[3] = &unk_24CFE7E90;
  block[4] = self;
  v8 = v4;
  v6 = v4;
  dispatch_sync(v5, block);

}

void __84__NPKPaymentWebServiceCompanionTargetDevice__setNewAuthRandomReturningPairingState___block_invoke(uint64_t a1)
{
  NPKProtoSecureElementSetNewAuthRandomRequest *v2;
  id v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  NSObject *v13;
  _BOOL4 v14;
  NSObject *v15;
  uint64_t v16;
  NSObject *v17;
  _BOOL4 v18;
  NSObject *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(uint64_t);
  void *v23;
  id v24;
  _QWORD v25[4];
  id v26;
  uint8_t buf[4];
  void *v28;
  uint64_t v29;

  v29 = *MEMORY[0x24BDAC8D0];
  v2 = objc_alloc_init(NPKProtoSecureElementSetNewAuthRandomRequest);
  v3 = objc_alloc(MEMORY[0x24BE4FE40]);
  -[NPKProtoSecureElementSetNewAuthRandomRequest data](v2, "data");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = (void *)objc_msgSend(v3, "initWithProtobufData:type:isResponse:", v4, 7, 0);

  objc_msgSend(*(id *)(a1 + 32), "_sendProtobuf:responseExpected:", v5, 1);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  if (v6)
  {
    v7 = *(void **)(a1 + 40);
    if (v7)
    {
      v8 = MEMORY[0x24BDAC760];
      v25[0] = MEMORY[0x24BDAC760];
      v25[1] = 3221225472;
      v25[2] = __84__NPKPaymentWebServiceCompanionTargetDevice__setNewAuthRandomReturningPairingState___block_invoke_2;
      v25[3] = &unk_24CFECFE8;
      v26 = v7;
      v9 = (void *)MEMORY[0x2199B6780](v25);
      v20 = v8;
      v21 = 3221225472;
      v22 = __84__NPKPaymentWebServiceCompanionTargetDevice__setNewAuthRandomReturningPairingState___block_invoke_3;
      v23 = &unk_24CFE7B80;
      v24 = *(id *)(a1 + 40);
      v10 = (void *)MEMORY[0x2199B6780](&v20);
      v11 = *(void **)(a1 + 32);
      v12 = (void *)MEMORY[0x2199B6780](v9);
      objc_msgSend(v11, "_trackOutstandingRequestWithMessageIdentifier:completionHandler:errorHandler:", v6, v12, v10, v20, v21, v22, v23);

    }
    else
    {
      pk_Payment_log();
      v17 = objc_claimAutoreleasedReturnValue();
      v18 = os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT);

      if (v18)
      {
        pk_Payment_log();
        v19 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)buf = 138412290;
          v28 = v6;
          _os_log_impl(&dword_213518000, v19, OS_LOG_TYPE_DEFAULT, "Warning: No response identifier for message with identifier %@", buf, 0xCu);
        }

      }
    }
  }
  else
  {
    pk_Payment_log();
    v13 = objc_claimAutoreleasedReturnValue();
    v14 = os_log_type_enabled(v13, OS_LOG_TYPE_ERROR);

    if (v14)
    {
      pk_Payment_log();
      v15 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 138412290;
        v28 = v5;
        _os_log_impl(&dword_213518000, v15, OS_LOG_TYPE_ERROR, "Error: No message identifier for protobuf %@", buf, 0xCu);
      }

    }
    v16 = *(_QWORD *)(a1 + 40);
    if (v16)
      (*(void (**)(uint64_t, _QWORD, _QWORD, _QWORD))(v16 + 16))(v16, 0, 0, 0);
  }

}

uint64_t __84__NPKPaymentWebServiceCompanionTargetDevice__setNewAuthRandomReturningPairingState___block_invoke_2(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

uint64_t __84__NPKPaymentWebServiceCompanionTargetDevice__setNewAuthRandomReturningPairingState___block_invoke_3(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

- (void)getPairingInfoResponse:(id)a3
{
  id v4;
  NSObject *v5;
  _BOOL4 v6;
  NSObject *v7;
  void *v8;
  void *v9;
  void *v10;
  NSObject *v11;
  NSObject *v12;
  _BOOL4 v13;
  NSObject *v14;
  uint64_t v15;
  uint8_t v16[8];
  _QWORD block[5];
  id v18;
  id v19;
  uint64_t *v20;
  uint64_t *v21;
  uint64_t *v22;
  __int128 *p_buf;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t (*v27)(uint64_t, uint64_t);
  void (*v28)(uint64_t);
  id v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t (*v33)(uint64_t, uint64_t);
  void (*v34)(uint64_t);
  id v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  char v39;
  __int128 buf;
  uint64_t v41;
  uint64_t (*v42)(uint64_t, uint64_t);
  void (*v43)(uint64_t);
  id v44;
  uint64_t v45;

  v45 = *MEMORY[0x24BDAC8D0];
  v4 = a3;
  pk_Payment_log();
  v5 = objc_claimAutoreleasedReturnValue();
  v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    pk_Payment_log();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend(v4, "npkDescription");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      LODWORD(buf) = 138412290;
      *(_QWORD *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_213518000, v7, OS_LOG_TYPE_DEFAULT, "Notice: incoming protobuf %@", (uint8_t *)&buf, 0xCu);

    }
  }
  objc_msgSend(v4, "context");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "incomingResponseIdentifier");
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  *(_QWORD *)&buf = 0;
  *((_QWORD *)&buf + 1) = &buf;
  v41 = 0x3032000000;
  v42 = __Block_byref_object_copy__342;
  v43 = __Block_byref_object_dispose__343;
  v44 = 0;
  v36 = 0;
  v37 = &v36;
  v38 = 0x2020000000;
  v39 = 0;
  v30 = 0;
  v31 = &v30;
  v32 = 0x3032000000;
  v33 = __Block_byref_object_copy__23;
  v34 = __Block_byref_object_dispose__23;
  v35 = 0;
  v24 = 0;
  v25 = &v24;
  v26 = 0x3032000000;
  v27 = __Block_byref_object_copy__23;
  v28 = __Block_byref_object_dispose__23;
  v29 = 0;
  if (v10)
  {
    -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
    v11 = objc_claimAutoreleasedReturnValue();
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 3221225472;
    block[2] = __68__NPKPaymentWebServiceCompanionTargetDevice_getPairingInfoResponse___block_invoke;
    block[3] = &unk_24CFECFC0;
    block[4] = self;
    v18 = v10;
    v19 = v4;
    v20 = &v36;
    v21 = &v30;
    v22 = &v24;
    p_buf = &buf;
    dispatch_sync(v11, block);

  }
  else
  {
    pk_Payment_log();
    v12 = objc_claimAutoreleasedReturnValue();
    v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      pk_Payment_log();
      v14 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)v16 = 0;
        _os_log_impl(&dword_213518000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v16, 2u);
      }

    }
  }
  v15 = *(_QWORD *)(*((_QWORD *)&buf + 1) + 40);
  if (v15)
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t, _QWORD))(v15 + 16))(v15, *((unsigned __int8 *)v37 + 24), v31[5], v25[5], 0);
  _Block_object_dispose(&v24, 8);

  _Block_object_dispose(&v30, 8);
  _Block_object_dispose(&v36, 8);
  _Block_object_dispose(&buf, 8);

}

void __68__NPKPaymentWebServiceCompanionTargetDevice_getPairingInfoResponse___block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;
  NPKProtoSecureElementGetPairingInfoResponse *v4;
  void *v5;
  NSObject *v6;
  NSObject *v7;
  _BOOL4 v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  NSObject *v15;
  _BOOL4 v16;
  NSObject *v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  _DWORD v22[2];
  uint64_t v23;

  v23 = *MEMORY[0x24BDAC8D0];
  objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "objectForKey:", *(_QWORD *)(a1 + 40));
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  if (v3)
  {
    v4 = [NPKProtoSecureElementGetPairingInfoResponse alloc];
    objc_msgSend(*(id *)(a1 + 48), "data");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    v6 = -[NPKProtoSecureElementGetPairingInfoResponse initWithData:](v4, "initWithData:", v5);

    if (-[NSObject pending](v6, "pending"))
    {
      objc_msgSend(v3, "setOrResetCleanupTimer");
    }
    else
    {
      *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 24) = -[NSObject success](v6, "success");
      -[NSObject cryptogram](v6, "cryptogram");
      v9 = objc_claimAutoreleasedReturnValue();
      v10 = *(_QWORD *)(*(_QWORD *)(a1 + 64) + 8);
      v11 = *(void **)(v10 + 40);
      *(_QWORD *)(v10 + 40) = v9;

      -[NSObject challengeResponse](v6, "challengeResponse");
      v12 = objc_claimAutoreleasedReturnValue();
      v13 = *(_QWORD *)(*(_QWORD *)(a1 + 72) + 8);
      v14 = *(void **)(v13 + 40);
      *(_QWORD *)(v13 + 40) = v12;

      pk_Payment_log();
      v15 = objc_claimAutoreleasedReturnValue();
      v16 = os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT);

      if (v16)
      {
        pk_Payment_log();
        v17 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
        {
          v22[0] = 67109120;
          v22[1] = -[NSObject authRandomSet](v6, "authRandomSet");
          _os_log_impl(&dword_213518000, v17, OS_LOG_TYPE_DEFAULT, "Notice: Pairing info response: set auth random %d", (uint8_t *)v22, 8u);
        }

      }
      objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
      v18 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v18, "removeObjectForKey:", *(_QWORD *)(a1 + 40));

      objc_msgSend(v3, "completionHandler");
      v19 = objc_claimAutoreleasedReturnValue();
      v20 = *(_QWORD *)(*(_QWORD *)(a1 + 80) + 8);
      v21 = *(void **)(v20 + 40);
      *(_QWORD *)(v20 + 40) = v19;

    }
LABEL_12:

    goto LABEL_13;
  }
  pk_Payment_log();
  v7 = objc_claimAutoreleasedReturnValue();
  v8 = os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT);

  if (v8)
  {
    pk_Payment_log();
    v6 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      LOWORD(v22[0]) = 0;
      _os_log_impl(&dword_213518000, v6, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", (uint8_t *)v22, 2u);
    }
    goto LABEL_12;
  }
LABEL_13:

}

- (void)_getPairingInfoAndSetAuthRandomIfNotPaired:(BOOL)a3 completion:(id)a4
{
  id v6;
  NSObject *v7;
  id v8;
  _QWORD block[5];
  id v10;
  BOOL v11;

  v6 = a4;
  -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
  v7 = objc_claimAutoreleasedReturnValue();
  block[0] = MEMORY[0x24BDAC760];
  block[1] = 3221225472;
  block[2] = __99__NPKPaymentWebServiceCompanionTargetDevice__getPairingInfoAndSetAuthRandomIfNotPaired_completion___block_invoke;
  block[3] = &unk_24CFE87E0;
  v11 = a3;
  block[4] = self;
  v10 = v6;
  v8 = v6;
  dispatch_sync(v7, block);

}

void __99__NPKPaymentWebServiceCompanionTargetDevice__getPairingInfoAndSetAuthRandomIfNotPaired_completion___block_invoke(uint64_t a1)
{
  NPKProtoSecureElementGetPairingInfoRequest *v2;
  id v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  NSObject *v13;
  _BOOL4 v14;
  NSObject *v15;
  uint64_t v16;
  NSObject *v17;
  _BOOL4 v18;
  NSObject *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(uint64_t);
  void *v23;
  id v24;
  _QWORD v25[4];
  id v26;
  uint8_t buf[4];
  void *v28;
  uint64_t v29;

  v29 = *MEMORY[0x24BDAC8D0];
  v2 = objc_alloc_init(NPKProtoSecureElementGetPairingInfoRequest);
  -[NPKProtoSecureElementGetPairingInfoRequest setSetAuthRandomIfNotPaired:](v2, "setSetAuthRandomIfNotPaired:", *(unsigned __int8 *)(a1 + 48));
  v3 = objc_alloc(MEMORY[0x24BE4FE40]);
  -[NPKProtoSecureElementGetPairingInfoRequest data](v2, "data");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = (void *)objc_msgSend(v3, "initWithProtobufData:type:isResponse:", v4, 21, 0);

  objc_msgSend(*(id *)(a1 + 32), "_sendProtobuf:responseExpected:", v5, 1);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  if (v6)
  {
    v7 = *(void **)(a1 + 40);
    if (v7)
    {
      v8 = MEMORY[0x24BDAC760];
      v25[0] = MEMORY[0x24BDAC760];
      v25[1] = 3221225472;
      v25[2] = __99__NPKPaymentWebServiceCompanionTargetDevice__getPairingInfoAndSetAuthRandomIfNotPaired_completion___block_invoke_2;
      v25[3] = &unk_24CFECFE8;
      v26 = v7;
      v9 = (void *)MEMORY[0x2199B6780](v25);
      v20 = v8;
      v21 = 3221225472;
      v22 = __99__NPKPaymentWebServiceCompanionTargetDevice__getPairingInfoAndSetAuthRandomIfNotPaired_completion___block_invoke_3;
      v23 = &unk_24CFE7B80;
      v24 = *(id *)(a1 + 40);
      v10 = (void *)MEMORY[0x2199B6780](&v20);
      v11 = *(void **)(a1 + 32);
      v12 = (void *)MEMORY[0x2199B6780](v9);
      objc_msgSend(v11, "_trackOutstandingRequestWithMessageIdentifier:completionHandler:errorHandler:", v6, v12, v10, v20, v21, v22, v23);

    }
    else
    {
      pk_Payment_log();
      v17 = objc_claimAutoreleasedReturnValue();
      v18 = os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT);

      if (v18)
      {
        pk_Payment_log();
        v19 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)buf = 138412290;
          v28 = v6;
          _os_log_impl(&dword_213518000, v19, OS_LOG_TYPE_DEFAULT, "Warning: No response identifier for message with identifier %@", buf, 0xCu);
        }

      }
    }
  }
  else
  {
    pk_Payment_log();
    v13 = objc_claimAutoreleasedReturnValue();
    v14 = os_log_type_enabled(v13, OS_LOG_TYPE_ERROR);

    if (v14)
    {
      pk_Payment_log();
      v15 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 138412290;
        v28 = v5;
        _os_log_impl(&dword_213518000, v15, OS_LOG_TYPE_ERROR, "Error: No message identifier for protobuf %@", buf, 0xCu);
      }

    }
    v16 = *(_QWORD *)(a1 + 40);
    if (v16)
      (*(void (**)(uint64_t, _QWORD, _QWORD, _QWORD))(v16 + 16))(v16, 0, 0, 0);
  }

}

uint64_t __99__NPKPaymentWebServiceCompanionTargetDevice__getPairingInfoAndSetAuthRandomIfNotPaired_completion___block_invoke_2(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

uint64_t __99__NPKPaymentWebServiceCompanionTargetDevice__getPairingInfoAndSetAuthRandomIfNotPaired_completion___block_invoke_3(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

- (void)_setNewAuthRandomIfNecessaryReturningPairingState:(id)a3
{
  -[NPKPaymentWebServiceCompanionTargetDevice _getPairingInfoAndSetAuthRandomIfNotPaired:completion:](self, "_getPairingInfoAndSetAuthRandomIfNotPaired:completion:", 1, a3);
}

- (void)setNewAuthRandomIfNecessaryAtBeginningOfProvisioningFlow:(id)a3
{
  id v4;
  id v5;
  _QWORD v6[4];
  id v7;

  v4 = a3;
  v6[0] = MEMORY[0x24BDAC760];
  v6[1] = 3221225472;
  v6[2] = __102__NPKPaymentWebServiceCompanionTargetDevice_setNewAuthRandomIfNecessaryAtBeginningOfProvisioningFlow___block_invoke;
  v6[3] = &unk_24CFED010;
  v7 = v4;
  v5 = v4;
  -[NPKPaymentWebServiceCompanionTargetDevice _setNewAuthRandomIfNecessaryReturningPairingState:](self, "_setNewAuthRandomIfNecessaryReturningPairingState:", v6);

}

uint64_t __102__NPKPaymentWebServiceCompanionTargetDevice_setNewAuthRandomIfNecessaryAtBeginningOfProvisioningFlow___block_invoke(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 32);
  if (result)
    return (*(uint64_t (**)(void))(result + 16))();
  return result;
}

- (void)paymentWebService:(id)a3 setNewAuthRandomIfNecessaryReturningPairingState:(id)a4
{
  id v5;
  int v6;
  NSObject *v7;
  _BOOL4 v8;
  NSObject *v9;
  NSObject *v10;
  _BOOL4 v11;
  NSObject *v12;
  _DWORD v13[2];
  uint64_t v14;

  v14 = *MEMORY[0x24BDAC8D0];
  v5 = a4;
  v6 = NPKIsCurrentlyPairing();
  pk_Payment_log();
  v7 = objc_claimAutoreleasedReturnValue();
  v8 = os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT);

  if (v8)
  {
    pk_Payment_log();
    v9 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      v13[0] = 67109120;
      v13[1] = v6;
      _os_log_impl(&dword_213518000, v9, OS_LOG_TYPE_DEFAULT, "Notice: currentlyPairing %d", (uint8_t *)v13, 8u);
    }

  }
  if (v6)
  {
    -[NPKPaymentWebServiceCompanionTargetDevice _setNewAuthRandomIfNecessaryReturningPairingState:](self, "_setNewAuthRandomIfNecessaryReturningPairingState:", v5);
  }
  else
  {
    pk_Payment_log();
    v10 = objc_claimAutoreleasedReturnValue();
    v11 = os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT);

    if (v11)
    {
      pk_Payment_log();
      v12 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
      {
        LOWORD(v13[0]) = 0;
        _os_log_impl(&dword_213518000, v12, OS_LOG_TYPE_DEFAULT, "Notice: Do not need to set auth random from PassKit request; returning pairing info",
          (uint8_t *)v13,
          2u);
      }

    }
    -[NPKPaymentWebServiceCompanionTargetDevice _getPairingInfoAndSetAuthRandomIfNotPaired:completion:](self, "_getPairingInfoAndSetAuthRandomIfNotPaired:completion:", 0, v5);
  }

}

- (void)paymentWebService:(id)a3 setNewAuthRandom:(id)a4
{
  id v5;
  id v6;
  _QWORD v7[4];
  id v8;

  v5 = a4;
  v7[0] = MEMORY[0x24BDAC760];
  v7[1] = 3221225472;
  v7[2] = __80__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_setNewAuthRandom___block_invoke;
  v7[3] = &unk_24CFED010;
  v8 = v5;
  v6 = v5;
  -[NPKPaymentWebServiceCompanionTargetDevice _setNewAuthRandomReturningPairingState:](self, "_setNewAuthRandomReturningPairingState:", v7);

}

uint64_t __80__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_setNewAuthRandom___block_invoke(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 32);
  if (result)
    return (*(uint64_t (**)(void))(result + 16))();
  return result;
}

- (void)queueTSMConnectionResponse:(id)a3
{
  id v4;
  NSObject *v5;
  _BOOL4 v6;
  NSObject *v7;
  void *v8;
  void *v9;
  void *v10;
  NSObject *v11;
  NSObject *v12;
  _BOOL4 v13;
  NSObject *v14;
  uint64_t v15;
  uint8_t v16[16];
  _QWORD block[5];
  id v18;
  id v19;
  __int128 *p_buf;
  __int128 buf;
  uint64_t v22;
  uint64_t (*v23)(uint64_t, uint64_t);
  void (*v24)(uint64_t);
  id v25;
  uint64_t v26;

  v26 = *MEMORY[0x24BDAC8D0];
  v4 = a3;
  pk_Payment_log();
  v5 = objc_claimAutoreleasedReturnValue();
  v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    pk_Payment_log();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend(v4, "npkDescription");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      LODWORD(buf) = 138412290;
      *(_QWORD *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_213518000, v7, OS_LOG_TYPE_DEFAULT, "Notice: incoming protobuf %@", (uint8_t *)&buf, 0xCu);

    }
  }
  objc_msgSend(v4, "context");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "incomingResponseIdentifier");
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  *(_QWORD *)&buf = 0;
  *((_QWORD *)&buf + 1) = &buf;
  v22 = 0x3032000000;
  v23 = __Block_byref_object_copy__342;
  v24 = __Block_byref_object_dispose__343;
  v25 = 0;
  if (v10)
  {
    -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
    v11 = objc_claimAutoreleasedReturnValue();
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 3221225472;
    block[2] = __72__NPKPaymentWebServiceCompanionTargetDevice_queueTSMConnectionResponse___block_invoke;
    block[3] = &unk_24CFED038;
    block[4] = self;
    v18 = v10;
    v19 = v4;
    p_buf = &buf;
    dispatch_sync(v11, block);

  }
  else
  {
    pk_Payment_log();
    v12 = objc_claimAutoreleasedReturnValue();
    v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      pk_Payment_log();
      v14 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)v16 = 0;
        _os_log_impl(&dword_213518000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v16, 2u);
      }

    }
  }
  v15 = *(_QWORD *)(*((_QWORD *)&buf + 1) + 40);
  if (v15)
    (*(void (**)(uint64_t, uint64_t, _QWORD))(v15 + 16))(v15, 1, 0);
  _Block_object_dispose(&buf, 8);

}

void __72__NPKPaymentWebServiceCompanionTargetDevice_queueTSMConnectionResponse___block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;
  NPKProtoQueueTSMConnectionResponse *v4;
  void *v5;
  NPKProtoQueueTSMConnectionResponse *v6;
  NSObject *v7;
  _BOOL4 v8;
  NSObject *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint8_t v14[16];

  objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "objectForKey:", *(_QWORD *)(a1 + 40));
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  if (v3)
  {
    v4 = [NPKProtoQueueTSMConnectionResponse alloc];
    objc_msgSend(*(id *)(a1 + 48), "data");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    v6 = -[NPKProtoQueueTSMConnectionResponse initWithData:](v4, "initWithData:", v5);

    if (-[NPKProtoQueueTSMConnectionResponse pending](v6, "pending"))
    {
      objc_msgSend(v3, "setOrResetCleanupTimer");
    }
    else
    {
      objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v10, "removeObjectForKey:", *(_QWORD *)(a1 + 40));

      objc_msgSend(v3, "completionHandler");
      v11 = objc_claimAutoreleasedReturnValue();
      v12 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
      v13 = *(void **)(v12 + 40);
      *(_QWORD *)(v12 + 40) = v11;

    }
  }
  else
  {
    pk_Payment_log();
    v7 = objc_claimAutoreleasedReturnValue();
    v8 = os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT);

    if (v8)
    {
      pk_Payment_log();
      v9 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)v14 = 0;
        _os_log_impl(&dword_213518000, v9, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", v14, 2u);
      }

    }
  }

}

- (void)paymentWebService:(id)a3 queueConnectionToTrustedServiceManagerForPushTopic:(id)a4 withCompletion:(id)a5
{
  id v7;
  id v8;
  NSObject *v9;
  id v10;
  id v11;
  _QWORD block[4];
  id v13;
  NPKPaymentWebServiceCompanionTargetDevice *v14;
  id v15;

  v7 = a4;
  v8 = a5;
  -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
  v9 = objc_claimAutoreleasedReturnValue();
  block[0] = MEMORY[0x24BDAC760];
  block[1] = 3221225472;
  block[2] = __129__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_queueConnectionToTrustedServiceManagerForPushTopic_withCompletion___block_invoke;
  block[3] = &unk_24CFE84E8;
  v13 = v7;
  v14 = self;
  v15 = v8;
  v10 = v8;
  v11 = v7;
  dispatch_sync(v9, block);

}

void __129__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_queueConnectionToTrustedServiceManagerForPushTopic_withCompletion___block_invoke(uint64_t a1)
{
  NPKProtoQueueTSMConnectionRequest *v2;
  id v3;
  void *v4;
  void *v5;
  void *v6;
  NSObject *v7;
  void *v8;
  void *v9;
  void *v10;
  NSObject *v11;
  _BOOL4 v12;
  NSObject *v13;
  uint64_t v14;
  NSObject *v15;
  _BOOL4 v16;
  _QWORD v17[4];
  id v18;
  uint8_t buf[4];
  void *v20;
  uint64_t v21;

  v21 = *MEMORY[0x24BDAC8D0];
  v2 = objc_alloc_init(NPKProtoQueueTSMConnectionRequest);
  -[NPKProtoQueueTSMConnectionRequest setPushTopic:](v2, "setPushTopic:", *(_QWORD *)(a1 + 32));
  v3 = objc_alloc(MEMORY[0x24BE4FE40]);
  -[NPKProtoQueueTSMConnectionRequest data](v2, "data");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = (void *)objc_msgSend(v3, "initWithProtobufData:type:isResponse:", v4, 1, 0);

  objc_msgSend(*(id *)(a1 + 40), "_sendProtobuf:responseExpected:", v5, 1);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  if (v6)
  {
    if (*(_QWORD *)(a1 + 48))
    {
      v7 = MEMORY[0x2199B6780]();
      v17[0] = MEMORY[0x24BDAC760];
      v17[1] = 3221225472;
      v17[2] = __129__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_queueConnectionToTrustedServiceManagerForPushTopic_withCompletion___block_invoke_2;
      v17[3] = &unk_24CFE7B80;
      v18 = *(id *)(a1 + 48);
      v8 = (void *)MEMORY[0x2199B6780](v17);
      v9 = *(void **)(a1 + 40);
      v10 = (void *)MEMORY[0x2199B6780](v7);
      objc_msgSend(v9, "_trackOutstandingRequestWithMessageIdentifier:completionHandler:errorHandler:", v6, v10, v8);

    }
    else
    {
      pk_Payment_log();
      v15 = objc_claimAutoreleasedReturnValue();
      v16 = os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT);

      if (!v16)
        goto LABEL_11;
      pk_Payment_log();
      v7 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 138412290;
        v20 = v6;
        _os_log_impl(&dword_213518000, v7, OS_LOG_TYPE_DEFAULT, "Warning: No response identifier for message with identifier %@", buf, 0xCu);
      }
    }
    goto LABEL_10;
  }
  pk_Payment_log();
  v11 = objc_claimAutoreleasedReturnValue();
  v12 = os_log_type_enabled(v11, OS_LOG_TYPE_ERROR);

  if (v12)
  {
    pk_Payment_log();
    v13 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 138412290;
      v20 = v5;
      _os_log_impl(&dword_213518000, v13, OS_LOG_TYPE_ERROR, "Error: No message identifier for protobuf %@", buf, 0xCu);
    }

  }
  v14 = *(_QWORD *)(a1 + 48);
  if (v14)
  {
    NPKGetIDSCommunicationError();
    v7 = objc_claimAutoreleasedReturnValue();
    (*(void (**)(uint64_t, _QWORD, NSObject *))(v14 + 16))(v14, 0, v7);
LABEL_10:

  }
LABEL_11:

}

uint64_t __129__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_queueConnectionToTrustedServiceManagerForPushTopic_withCompletion___block_invoke_2(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 32);
  if (result)
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(result + 16))(result, 0, a2);
  return result;
}

- (void)markAllAppletsForDeletionResponse:(id)a3
{
  id v4;
  NSObject *v5;
  _BOOL4 v6;
  NSObject *v7;
  void *v8;
  void *v9;
  void *v10;
  NSObject *v11;
  NSObject *v12;
  _BOOL4 v13;
  NSObject *v14;
  uint64_t v15;
  uint8_t v16[16];
  _QWORD block[5];
  id v18;
  id v19;
  __int128 *p_buf;
  uint64_t *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t (*v26)(uint64_t, uint64_t);
  void (*v27)(uint64_t);
  id v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  char v32;
  __int128 buf;
  uint64_t v34;
  uint64_t (*v35)(uint64_t, uint64_t);
  void (*v36)(uint64_t);
  id v37;
  uint64_t v38;

  v38 = *MEMORY[0x24BDAC8D0];
  v4 = a3;
  pk_Payment_log();
  v5 = objc_claimAutoreleasedReturnValue();
  v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    pk_Payment_log();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend(v4, "npkDescription");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      LODWORD(buf) = 138412290;
      *(_QWORD *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_213518000, v7, OS_LOG_TYPE_DEFAULT, "Notice: incoming protobuf %@", (uint8_t *)&buf, 0xCu);

    }
  }
  objc_msgSend(v4, "context");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "incomingResponseIdentifier");
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  *(_QWORD *)&buf = 0;
  *((_QWORD *)&buf + 1) = &buf;
  v34 = 0x3032000000;
  v35 = __Block_byref_object_copy__342;
  v36 = __Block_byref_object_dispose__343;
  v37 = 0;
  v29 = 0;
  v30 = &v29;
  v31 = 0x2020000000;
  v32 = 0;
  v23 = 0;
  v24 = &v23;
  v25 = 0x3032000000;
  v26 = __Block_byref_object_copy__23;
  v27 = __Block_byref_object_dispose__23;
  v28 = 0;
  if (v10)
  {
    -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
    v11 = objc_claimAutoreleasedReturnValue();
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 3221225472;
    block[2] = __79__NPKPaymentWebServiceCompanionTargetDevice_markAllAppletsForDeletionResponse___block_invoke;
    block[3] = &unk_24CFED060;
    block[4] = self;
    v18 = v10;
    v19 = v4;
    p_buf = &buf;
    v21 = &v29;
    v22 = &v23;
    dispatch_sync(v11, block);

  }
  else
  {
    pk_Payment_log();
    v12 = objc_claimAutoreleasedReturnValue();
    v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      pk_Payment_log();
      v14 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)v16 = 0;
        _os_log_impl(&dword_213518000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v16, 2u);
      }

    }
  }
  v15 = *(_QWORD *)(*((_QWORD *)&buf + 1) + 40);
  if (v15)
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v15 + 16))(v15, *((unsigned __int8 *)v30 + 24), v24[5]);
  _Block_object_dispose(&v23, 8);

  _Block_object_dispose(&v29, 8);
  _Block_object_dispose(&buf, 8);

}

void __79__NPKPaymentWebServiceCompanionTargetDevice_markAllAppletsForDeletionResponse___block_invoke(uint64_t a1)
{
  void *v1;
  void *v3;
  void *v4;
  NPKProtoMarkAllAppletsForDeletionResponse *v5;
  void *v6;
  NPKProtoMarkAllAppletsForDeletionResponse *v7;
  NSObject *v8;
  _BOOL4 v9;
  NSObject *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  _BOOL4 v15;
  NSObject *v16;
  void *v17;
  __int16 v18[8];

  objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "objectForKey:", *(_QWORD *)(a1 + 40));
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  if (v4)
  {
    v5 = [NPKProtoMarkAllAppletsForDeletionResponse alloc];
    objc_msgSend(*(id *)(a1 + 48), "data");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    v7 = -[NPKProtoMarkAllAppletsForDeletionResponse initWithData:](v5, "initWithData:", v6);

    if (-[NPKProtoMarkAllAppletsForDeletionResponse pending](v7, "pending"))
    {
      objc_msgSend(v4, "setOrResetCleanupTimer");
    }
    else
    {
      objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v11, "removeObjectForKey:", *(_QWORD *)(a1 + 40));

      objc_msgSend(v4, "completionHandler");
      v12 = objc_claimAutoreleasedReturnValue();
      v13 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
      v14 = *(void **)(v13 + 40);
      *(_QWORD *)(v13 + 40) = v12;

      *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 24) = -[NPKProtoMarkAllAppletsForDeletionResponse success](v7, "success");
      v15 = -[NPKProtoMarkAllAppletsForDeletionResponse hasErrorData](v7, "hasErrorData");
      if (v15)
      {
        -[NPKProtoMarkAllAppletsForDeletionResponse errorData](v7, "errorData");
        v1 = (void *)objc_claimAutoreleasedReturnValue();
        v16 = objc_opt_class();
        NPKSecureUnarchiveObject(v1, v16);
        v17 = (void *)objc_claimAutoreleasedReturnValue();
      }
      else
      {
        v17 = 0;
      }
      objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 72) + 8) + 40), v17);
      if (v15)
      {

      }
    }

  }
  else
  {
    pk_Payment_log();
    v8 = objc_claimAutoreleasedReturnValue();
    v9 = os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT);

    if (v9)
    {
      pk_Payment_log();
      v10 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
      {
        v18[0] = 0;
        _os_log_impl(&dword_213518000, v10, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", (uint8_t *)v18, 2u);
      }

    }
  }

}

- (void)markAllAppletsForDeletionWithCompletion:(id)a3
{
  id v4;
  NSObject *v5;
  id v6;
  _QWORD block[5];
  id v8;

  v4 = a3;
  -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
  v5 = objc_claimAutoreleasedReturnValue();
  block[0] = MEMORY[0x24BDAC760];
  block[1] = 3221225472;
  block[2] = __85__NPKPaymentWebServiceCompanionTargetDevice_markAllAppletsForDeletionWithCompletion___block_invoke;
  block[3] = &unk_24CFE7E90;
  block[4] = self;
  v8 = v4;
  v6 = v4;
  dispatch_sync(v5, block);

}

void __85__NPKPaymentWebServiceCompanionTargetDevice_markAllAppletsForDeletionWithCompletion___block_invoke(uint64_t a1)
{
  NPKProtoMarkAllAppletsForDeletionRequest *v2;
  id v3;
  void *v4;
  void *v5;
  void *v6;
  NSObject *v7;
  void *v8;
  void *v9;
  void *v10;
  NSObject *v11;
  _BOOL4 v12;
  NSObject *v13;
  uint64_t v14;
  NSObject *v15;
  _BOOL4 v16;
  _QWORD v17[4];
  id v18;
  uint8_t buf[4];
  void *v20;
  uint64_t v21;

  v21 = *MEMORY[0x24BDAC8D0];
  v2 = objc_alloc_init(NPKProtoMarkAllAppletsForDeletionRequest);
  v3 = objc_alloc(MEMORY[0x24BE4FE40]);
  -[NPKProtoMarkAllAppletsForDeletionRequest data](v2, "data");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = (void *)objc_msgSend(v3, "initWithProtobufData:type:isResponse:", v4, 44, 0);

  objc_msgSend(*(id *)(a1 + 32), "_sendProtobuf:responseExpected:", v5, 1);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  if (v6)
  {
    if (*(_QWORD *)(a1 + 40))
    {
      v7 = MEMORY[0x2199B6780]();
      v17[0] = MEMORY[0x24BDAC760];
      v17[1] = 3221225472;
      v17[2] = __85__NPKPaymentWebServiceCompanionTargetDevice_markAllAppletsForDeletionWithCompletion___block_invoke_2;
      v17[3] = &unk_24CFE7B80;
      v18 = *(id *)(a1 + 40);
      v8 = (void *)MEMORY[0x2199B6780](v17);
      v9 = *(void **)(a1 + 32);
      v10 = (void *)MEMORY[0x2199B6780](v7);
      objc_msgSend(v9, "_trackOutstandingRequestWithMessageIdentifier:completionHandler:errorHandler:", v6, v10, v8);

    }
    else
    {
      pk_Payment_log();
      v15 = objc_claimAutoreleasedReturnValue();
      v16 = os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT);

      if (!v16)
        goto LABEL_11;
      pk_Payment_log();
      v7 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 138412290;
        v20 = v6;
        _os_log_impl(&dword_213518000, v7, OS_LOG_TYPE_DEFAULT, "Warning: No response identifier for message with identifier %@", buf, 0xCu);
      }
    }
    goto LABEL_10;
  }
  pk_Payment_log();
  v11 = objc_claimAutoreleasedReturnValue();
  v12 = os_log_type_enabled(v11, OS_LOG_TYPE_ERROR);

  if (v12)
  {
    pk_Payment_log();
    v13 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 138412290;
      v20 = v5;
      _os_log_impl(&dword_213518000, v13, OS_LOG_TYPE_ERROR, "Error: No message identifier for protobuf %@", buf, 0xCu);
    }

  }
  v14 = *(_QWORD *)(a1 + 40);
  if (v14)
  {
    NPKGetIDSCommunicationError();
    v7 = objc_claimAutoreleasedReturnValue();
    (*(void (**)(uint64_t, _QWORD, NSObject *))(v14 + 16))(v14, 0, v7);
LABEL_10:

  }
LABEL_11:

}

uint64_t __85__NPKPaymentWebServiceCompanionTargetDevice_markAllAppletsForDeletionWithCompletion___block_invoke_2(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 32);
  if (result)
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(result + 16))(result, 0, a2);
  return result;
}

- (void)handleBalanceChange:(id)a3
{
  id v4;
  NPKProtoHandleBalanceChangeRequest *v5;
  void *v6;
  NPKProtoHandleBalanceChangeRequest *v7;
  void *v8;
  void *v9;
  NSObject *v10;
  _BOOL4 v11;
  NSObject *v12;
  void *v13;
  id v14;
  NSObject *v15;
  _BOOL4 v16;
  NSObject *v17;
  void *v18;
  _QWORD v19[4];
  id v20;
  uint8_t buf[4];
  id v22;
  __int16 v23;
  void *v24;
  uint64_t v25;

  v25 = *MEMORY[0x24BDAC8D0];
  v4 = a3;
  v5 = [NPKProtoHandleBalanceChangeRequest alloc];
  objc_msgSend(v4, "data");
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  v7 = -[NPKProtoHandleBalanceChangeRequest initWithData:](v5, "initWithData:", v6);
  -[NPKProtoHandleBalanceChangeRequest passID](v7, "passID");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x24BDBCEF0], "set");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  pk_Payment_log();
  v10 = objc_claimAutoreleasedReturnValue();
  v11 = os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT);

  if (v11)
  {
    pk_Payment_log();
    v12 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138412546;
      v22 = v8;
      v23 = 1024;
      LODWORD(v24) = -[NPKProtoHandleBalanceChangeRequest balanceBytesCount](v7, "balanceBytesCount");
      _os_log_impl(&dword_213518000, v12, OS_LOG_TYPE_DEFAULT, "Notice: Got balance update for unique ID %@ with %u balances", buf, 0x12u);
    }

  }
  -[NPKProtoHandleBalanceChangeRequest balanceBytes](v7, "balanceBytes");
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  v19[0] = MEMORY[0x24BDAC760];
  v19[1] = 3221225472;
  v19[2] = __65__NPKPaymentWebServiceCompanionTargetDevice_handleBalanceChange___block_invoke;
  v19[3] = &unk_24CFED088;
  v14 = v9;
  v20 = v14;
  objc_msgSend(v13, "enumerateObjectsUsingBlock:", v19);

  pk_General_log();
  v15 = objc_claimAutoreleasedReturnValue();
  v16 = os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT);

  if (v16)
  {
    pk_General_log();
    v17 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138412546;
      v22 = v14;
      v23 = 2112;
      v24 = v8;
      _os_log_impl(&dword_213518000, v17, OS_LOG_TYPE_DEFAULT, "Notice: Handling balance update %@ for unique ID %@", buf, 0x16u);
    }

  }
  -[NPKPaymentWebServiceCompanionTargetDevice delegate](self, "delegate");
  v18 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v18, "handleBalanceUpdate:forUniqueID:", v14, v8);

}

void __65__NPKPaymentWebServiceCompanionTargetDevice_handleBalanceChange___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  void *v5;
  id v6;

  v3 = a2;
  v4 = objc_opt_class();
  NPKSecureUnarchiveObject(v3, v4);
  v6 = (id)objc_claimAutoreleasedReturnValue();

  v5 = v6;
  if (v6)
  {
    objc_msgSend(*(id *)(a1 + 32), "addObject:", v6);
    v5 = v6;
  }

}

- (void)registrationDataResponse:(id)a3
{
  id v4;
  NSObject *v5;
  _BOOL4 v6;
  NSObject *v7;
  void *v8;
  void *v9;
  void *v10;
  NSObject *v11;
  NSObject *v12;
  _BOOL4 v13;
  NSObject *v14;
  uint64_t v15;
  uint8_t v16[16];
  _QWORD block[5];
  id v18;
  id v19;
  uint64_t *v20;
  uint64_t *v21;
  __int128 *p_buf;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t (*v26)(uint64_t, uint64_t);
  void (*v27)(uint64_t);
  id v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t (*v32)(uint64_t, uint64_t);
  void (*v33)(uint64_t);
  id v34;
  __int128 buf;
  uint64_t v36;
  uint64_t (*v37)(uint64_t, uint64_t);
  void (*v38)(uint64_t);
  id v39;
  uint64_t v40;

  v40 = *MEMORY[0x24BDAC8D0];
  v4 = a3;
  pk_Payment_log();
  v5 = objc_claimAutoreleasedReturnValue();
  v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    pk_Payment_log();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend(v4, "npkDescription");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      LODWORD(buf) = 138412290;
      *(_QWORD *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_213518000, v7, OS_LOG_TYPE_DEFAULT, "Notice: incoming protobuf %@", (uint8_t *)&buf, 0xCu);

    }
  }
  objc_msgSend(v4, "context");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "incomingResponseIdentifier");
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  *(_QWORD *)&buf = 0;
  *((_QWORD *)&buf + 1) = &buf;
  v36 = 0x3032000000;
  v37 = __Block_byref_object_copy__342;
  v38 = __Block_byref_object_dispose__343;
  v39 = 0;
  v29 = 0;
  v30 = &v29;
  v31 = 0x3032000000;
  v32 = __Block_byref_object_copy__23;
  v33 = __Block_byref_object_dispose__23;
  v34 = 0;
  v23 = 0;
  v24 = &v23;
  v25 = 0x3032000000;
  v26 = __Block_byref_object_copy__23;
  v27 = __Block_byref_object_dispose__23;
  v28 = 0;
  if (v10)
  {
    -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
    v11 = objc_claimAutoreleasedReturnValue();
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 3221225472;
    block[2] = __70__NPKPaymentWebServiceCompanionTargetDevice_registrationDataResponse___block_invoke;
    block[3] = &unk_24CFED060;
    block[4] = self;
    v18 = v10;
    v19 = v4;
    v20 = &v23;
    v21 = &v29;
    p_buf = &buf;
    dispatch_sync(v11, block);

  }
  else
  {
    pk_Payment_log();
    v12 = objc_claimAutoreleasedReturnValue();
    v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      pk_Payment_log();
      v14 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)v16 = 0;
        _os_log_impl(&dword_213518000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v16, 2u);
      }

    }
  }
  v15 = *(_QWORD *)(*((_QWORD *)&buf + 1) + 40);
  if (v15)
    (*(void (**)(uint64_t, uint64_t, uint64_t, _QWORD))(v15 + 16))(v15, v30[5], v24[5], 0);
  _Block_object_dispose(&v23, 8);

  _Block_object_dispose(&v29, 8);
  _Block_object_dispose(&buf, 8);

}

void __70__NPKPaymentWebServiceCompanionTargetDevice_registrationDataResponse___block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;
  NPKProtoRegistrationDataResponse *v4;
  void *v5;
  NSObject *v6;
  NSObject *v7;
  _BOOL4 v8;
  NSObject *v9;
  _BOOL4 v10;
  NSObject *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  void *v16;
  NSObject *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  NSObject *v21;
  _BOOL4 v22;
  NSObject *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  int v33;
  void *v34;
  uint64_t v35;

  v35 = *MEMORY[0x24BDAC8D0];
  objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "objectForKey:", *(_QWORD *)(a1 + 40));
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  if (v3)
  {
    v4 = [NPKProtoRegistrationDataResponse alloc];
    objc_msgSend(*(id *)(a1 + 48), "data");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    v6 = -[NPKProtoRegistrationDataResponse initWithData:](v4, "initWithData:", v5);

    if (-[NSObject pending](v6, "pending"))
    {
      objc_msgSend(v3, "setOrResetCleanupTimer");
    }
    else
    {
      pk_Payment_log();
      v9 = objc_claimAutoreleasedReturnValue();
      v10 = os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT);

      if (v10)
      {
        pk_Payment_log();
        v11 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
        {
          -[NSObject pushToken](v6, "pushToken");
          v12 = (void *)objc_claimAutoreleasedReturnValue();
          v33 = 138412290;
          v34 = v12;
          _os_log_impl(&dword_213518000, v11, OS_LOG_TYPE_DEFAULT, "Notice: Push token from gizmo is %@", (uint8_t *)&v33, 0xCu);

        }
      }
      -[NSObject pushToken](v6, "pushToken");
      v13 = objc_claimAutoreleasedReturnValue();
      v14 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
      v15 = *(void **)(v14 + 40);
      *(_QWORD *)(v14 + 40) = v13;

      -[NSObject registrationDataBytes](v6, "registrationDataBytes");
      v16 = (void *)objc_claimAutoreleasedReturnValue();
      v17 = objc_opt_class();
      NPKSecureUnarchiveObject(v16, v17);
      v18 = objc_claimAutoreleasedReturnValue();
      v19 = *(_QWORD *)(*(_QWORD *)(a1 + 64) + 8);
      v20 = *(void **)(v19 + 40);
      *(_QWORD *)(v19 + 40) = v18;

      if (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 40))
      {
        pk_Payment_log();
        v21 = objc_claimAutoreleasedReturnValue();
        v22 = os_log_type_enabled(v21, OS_LOG_TYPE_ERROR);

        if (v22)
        {
          pk_Payment_log();
          v23 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v23, OS_LOG_TYPE_ERROR))
          {
            LOWORD(v33) = 0;
            _os_log_impl(&dword_213518000, v23, OS_LOG_TYPE_ERROR, "Error: Received nil SE registration data!", (uint8_t *)&v33, 2u);
          }

        }
      }
      v24 = (void *)MGCopyAnswer();
      objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 40), "setCompanionSerialNumber:", v24);

      objc_msgSend(*(id *)(a1 + 32), "_serialNumbersOfAllPairedDevices");
      v25 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 40), "deviceSerialNumber");
      v26 = (void *)objc_claimAutoreleasedReturnValue();

      if (v26)
      {
        objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 40), "deviceSerialNumber");
        v27 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v25, "pk_arrayByRemovingObject:", v27);
        v28 = objc_claimAutoreleasedReturnValue();

        v25 = (void *)v28;
      }
      objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 40), "setAdditionalDeviceSerialNumbers:", v25);
      objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
      v29 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v29, "removeObjectForKey:", *(_QWORD *)(a1 + 40));

      objc_msgSend(v3, "completionHandler");
      v30 = objc_claimAutoreleasedReturnValue();
      v31 = *(_QWORD *)(*(_QWORD *)(a1 + 72) + 8);
      v32 = *(void **)(v31 + 40);
      *(_QWORD *)(v31 + 40) = v30;

    }
LABEL_19:

    goto LABEL_20;
  }
  pk_Payment_log();
  v7 = objc_claimAutoreleasedReturnValue();
  v8 = os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT);

  if (v8)
  {
    pk_Payment_log();
    v6 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      LOWORD(v33) = 0;
      _os_log_impl(&dword_213518000, v6, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", (uint8_t *)&v33, 2u);
    }
    goto LABEL_19;
  }
LABEL_20:

}

- (id)appleAccountInformation
{
  void *v2;
  void *v3;

  objc_msgSend(MEMORY[0x24BE6E9D8], "sharedInstance");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "appleAccountInformation");
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  return v3;
}

- (void)renewAppleAccountWithCompletionHandler:(id)a3
{
  void *v3;
  id v4;
  id v5;

  v3 = (void *)MEMORY[0x24BE6E9D8];
  v4 = a3;
  objc_msgSend(v3, "sharedInstance");
  v5 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "renewAppleAccountWithCompletionHandler:", v4);

}

- (void)paymentWebService:(id)a3 registrationDataWithCompletionHandler:(id)a4
{
  id v6;
  id v7;
  void *v8;
  id v9;

  v6 = a4;
  v7 = a3;
  -[NPKPaymentWebServiceCompanionTargetDevice appleAccountInformation](self, "appleAccountInformation");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "authorizationHeader");
  v9 = (id)objc_claimAutoreleasedReturnValue();

  -[NPKPaymentWebServiceCompanionTargetDevice _paymentWebService:registrationDataWithAuthToken:completionHandler:](self, "_paymentWebService:registrationDataWithAuthToken:completionHandler:", v7, v9, v6);
}

- (void)_paymentWebService:(id)a3 registrationDataWithAuthToken:(id)a4 completionHandler:(id)a5
{
  id v7;
  id v8;
  NSObject *v9;
  id v10;
  id v11;
  _QWORD block[4];
  id v13;
  NPKPaymentWebServiceCompanionTargetDevice *v14;
  id v15;

  v7 = a4;
  v8 = a5;
  -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
  v9 = objc_claimAutoreleasedReturnValue();
  block[0] = MEMORY[0x24BDAC760];
  block[1] = 3221225472;
  block[2] = __112__NPKPaymentWebServiceCompanionTargetDevice__paymentWebService_registrationDataWithAuthToken_completionHandler___block_invoke;
  block[3] = &unk_24CFE84E8;
  v13 = v7;
  v14 = self;
  v15 = v8;
  v10 = v8;
  v11 = v7;
  dispatch_sync(v9, block);

}

void __112__NPKPaymentWebServiceCompanionTargetDevice__paymentWebService_registrationDataWithAuthToken_completionHandler___block_invoke(uint64_t a1)
{
  NPKProtoRegistrationDataRequest *v2;
  id v3;
  void *v4;
  void *v5;
  void *v6;
  void **v7;
  uint64_t v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  NSObject *v13;
  _BOOL4 v14;
  NSObject *v15;
  uint64_t v16;
  void *v17;
  NSObject *v18;
  _BOOL4 v19;
  NSObject *v20;
  _QWORD v21[4];
  id v22;
  _QWORD v23[4];
  id v24;
  id v25;
  id location[4];

  location[3] = *(id *)MEMORY[0x24BDAC8D0];
  v2 = objc_alloc_init(NPKProtoRegistrationDataRequest);
  -[NPKProtoRegistrationDataRequest setAuthToken:](v2, "setAuthToken:", *(_QWORD *)(a1 + 32));
  v3 = objc_alloc(MEMORY[0x24BE4FE40]);
  -[NPKProtoRegistrationDataRequest data](v2, "data");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = (void *)objc_msgSend(v3, "initWithProtobufData:type:isResponse:", v4, 3, 0);

  objc_msgSend(*(id *)(a1 + 40), "_sendProtobuf:responseExpected:", v5, 1);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  if (v6)
  {
    if (*(_QWORD *)(a1 + 48))
    {
      v7 = (void **)(a1 + 40);
      objc_initWeak(location, *(id *)(a1 + 40));
      v8 = MEMORY[0x24BDAC760];
      v23[0] = MEMORY[0x24BDAC760];
      v23[1] = 3221225472;
      v23[2] = __112__NPKPaymentWebServiceCompanionTargetDevice__paymentWebService_registrationDataWithAuthToken_completionHandler___block_invoke_2;
      v23[3] = &unk_24CFED0B0;
      objc_copyWeak(&v25, location);
      v24 = *(id *)(a1 + 48);
      v9 = (void *)MEMORY[0x2199B6780](v23);
      v21[0] = v8;
      v21[1] = 3221225472;
      v21[2] = __112__NPKPaymentWebServiceCompanionTargetDevice__paymentWebService_registrationDataWithAuthToken_completionHandler___block_invoke_3;
      v21[3] = &unk_24CFE7B80;
      v22 = *(id *)(a1 + 48);
      v10 = (void *)MEMORY[0x2199B6780](v21);
      v11 = *v7;
      v12 = (void *)MEMORY[0x2199B6780](v9);
      objc_msgSend(v11, "_trackOutstandingRequestWithMessageIdentifier:completionHandler:errorHandler:", v6, v12, v10);

      objc_destroyWeak(&v25);
      objc_destroyWeak(location);
    }
    else
    {
      pk_Payment_log();
      v18 = objc_claimAutoreleasedReturnValue();
      v19 = os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT);

      if (v19)
      {
        pk_Payment_log();
        v20 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v20, OS_LOG_TYPE_DEFAULT))
        {
          LODWORD(location[0]) = 138412290;
          *(id *)((char *)location + 4) = v6;
          _os_log_impl(&dword_213518000, v20, OS_LOG_TYPE_DEFAULT, "Warning: No response identifier for message with identifier %@", (uint8_t *)location, 0xCu);
        }

      }
    }
  }
  else
  {
    pk_Payment_log();
    v13 = objc_claimAutoreleasedReturnValue();
    v14 = os_log_type_enabled(v13, OS_LOG_TYPE_ERROR);

    if (v14)
    {
      pk_Payment_log();
      v15 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
      {
        LODWORD(location[0]) = 138412290;
        *(id *)((char *)location + 4) = v5;
        _os_log_impl(&dword_213518000, v15, OS_LOG_TYPE_ERROR, "Error: No message identifier for protobuf %@", (uint8_t *)location, 0xCu);
      }

    }
    v16 = *(_QWORD *)(a1 + 48);
    if (v16)
    {
      NPKGetIDSCommunicationError();
      v17 = (void *)objc_claimAutoreleasedReturnValue();
      (*(void (**)(uint64_t, _QWORD, void *))(v16 + 16))(v16, 0, v17);

    }
  }

}

void __112__NPKPaymentWebServiceCompanionTargetDevice__paymentWebService_registrationDataWithAuthToken_completionHandler___block_invoke_2(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7;
  id v8;
  id WeakRetained;
  void *v10;
  uint64_t v11;
  id v12;

  v12 = a2;
  v7 = a3;
  v8 = a4;
  if (v7)
  {
    WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
    objc_msgSend(WeakRetained, "delegate");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "handlePushToken:", v7);

  }
  v11 = *(_QWORD *)(a1 + 32);
  if (v11)
    (*(void (**)(uint64_t, id, id))(v11 + 16))(v11, v12, v8);

}

uint64_t __112__NPKPaymentWebServiceCompanionTargetDevice__paymentWebService_registrationDataWithAuthToken_completionHandler___block_invoke_3(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 32);
  if (result)
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(result + 16))(result, 0, a2);
  return result;
}

- (void)provisioningDataResponse:(id)a3
{
  id v4;
  NSObject *v5;
  _BOOL4 v6;
  NSObject *v7;
  void *v8;
  void *v9;
  void *v10;
  NSObject *v11;
  NSObject *v12;
  _BOOL4 v13;
  NSObject *v14;
  uint64_t v15;
  uint8_t v16[8];
  _QWORD block[5];
  id v18;
  id v19;
  uint64_t *v20;
  __int128 *p_buf;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t (*v25)(uint64_t, uint64_t);
  void (*v26)(uint64_t);
  id v27;
  __int128 buf;
  uint64_t v29;
  uint64_t (*v30)(uint64_t, uint64_t);
  void (*v31)(uint64_t);
  id v32;
  uint64_t v33;

  v33 = *MEMORY[0x24BDAC8D0];
  v4 = a3;
  pk_Payment_log();
  v5 = objc_claimAutoreleasedReturnValue();
  v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    pk_Payment_log();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend(v4, "npkDescription");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      LODWORD(buf) = 138412290;
      *(_QWORD *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_213518000, v7, OS_LOG_TYPE_DEFAULT, "Notice: incoming protobuf %@", (uint8_t *)&buf, 0xCu);

    }
  }
  objc_msgSend(v4, "context");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "incomingResponseIdentifier");
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  *(_QWORD *)&buf = 0;
  *((_QWORD *)&buf + 1) = &buf;
  v29 = 0x3032000000;
  v30 = __Block_byref_object_copy__342;
  v31 = __Block_byref_object_dispose__343;
  v32 = 0;
  v22 = 0;
  v23 = &v22;
  v24 = 0x3032000000;
  v25 = __Block_byref_object_copy__23;
  v26 = __Block_byref_object_dispose__23;
  v27 = 0;
  if (v10)
  {
    -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
    v11 = objc_claimAutoreleasedReturnValue();
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 3221225472;
    block[2] = __70__NPKPaymentWebServiceCompanionTargetDevice_provisioningDataResponse___block_invoke;
    block[3] = &unk_24CFED0D8;
    block[4] = self;
    v18 = v10;
    v19 = v4;
    v20 = &v22;
    p_buf = &buf;
    dispatch_sync(v11, block);

  }
  else
  {
    pk_Payment_log();
    v12 = objc_claimAutoreleasedReturnValue();
    v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      pk_Payment_log();
      v14 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)v16 = 0;
        _os_log_impl(&dword_213518000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v16, 2u);
      }

    }
  }
  v15 = *(_QWORD *)(*((_QWORD *)&buf + 1) + 40);
  if (v15)
    (*(void (**)(uint64_t, uint64_t, _QWORD))(v15 + 16))(v15, v23[5], 0);
  _Block_object_dispose(&v22, 8);

  _Block_object_dispose(&buf, 8);
}

void __70__NPKPaymentWebServiceCompanionTargetDevice_provisioningDataResponse___block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;
  NPKProtoProvisioningDataResponse *v4;
  void *v5;
  NPKProtoProvisioningDataResponse *v6;
  NSObject *v7;
  _BOOL4 v8;
  NSObject *v9;
  void *v10;
  NSObject *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint8_t v19[16];

  objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "objectForKey:", *(_QWORD *)(a1 + 40));
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  if (v3)
  {
    v4 = [NPKProtoProvisioningDataResponse alloc];
    objc_msgSend(*(id *)(a1 + 48), "data");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    v6 = -[NPKProtoProvisioningDataResponse initWithData:](v4, "initWithData:", v5);

    if (-[NPKProtoProvisioningDataResponse pending](v6, "pending"))
    {
      objc_msgSend(v3, "setOrResetCleanupTimer");
    }
    else
    {
      -[NPKProtoProvisioningDataResponse provisioningDataBytes](v6, "provisioningDataBytes");
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      v11 = objc_opt_class();
      NPKSecureUnarchiveObject(v10, v11);
      v12 = objc_claimAutoreleasedReturnValue();
      v13 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
      v14 = *(void **)(v13 + 40);
      *(_QWORD *)(v13 + 40) = v12;

      objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
      v15 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v15, "removeObjectForKey:", *(_QWORD *)(a1 + 40));

      objc_msgSend(v3, "completionHandler");
      v16 = objc_claimAutoreleasedReturnValue();
      v17 = *(_QWORD *)(*(_QWORD *)(a1 + 64) + 8);
      v18 = *(void **)(v17 + 40);
      *(_QWORD *)(v17 + 40) = v16;

    }
  }
  else
  {
    pk_Payment_log();
    v7 = objc_claimAutoreleasedReturnValue();
    v8 = os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT);

    if (v8)
    {
      pk_Payment_log();
      v9 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)v19 = 0;
        _os_log_impl(&dword_213518000, v9, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", v19, 2u);
      }

    }
  }

}

- (void)paymentWebService:(id)a3 provisioningDataIncludingDeviceMetadata:(BOOL)a4 withCompletionHandler:(id)a5
{
  id v7;
  NSObject *v8;
  id v9;
  _QWORD block[5];
  id v11;
  BOOL v12;

  v7 = a5;
  -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
  v8 = objc_claimAutoreleasedReturnValue();
  block[0] = MEMORY[0x24BDAC760];
  block[1] = 3221225472;
  block[2] = __125__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_provisioningDataIncludingDeviceMetadata_withCompletionHandler___block_invoke;
  block[3] = &unk_24CFE87E0;
  v12 = a4;
  block[4] = self;
  v11 = v7;
  v9 = v7;
  dispatch_sync(v8, block);

}

void __125__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_provisioningDataIncludingDeviceMetadata_withCompletionHandler___block_invoke(uint64_t a1)
{
  NPKProtoProvisioningDataRequest *v2;
  id v3;
  void *v4;
  void *v5;
  void *v6;
  NSObject *v7;
  uint64_t v8;
  NPKOneShotLocationFetcher *v9;
  NPKOneShotLocationFetcher *v10;
  NSObject *v11;
  void *v12;
  NSObject *v13;
  void *v14;
  NSObject *v15;
  void *v16;
  void *v17;
  NSObject *v18;
  _BOOL4 v19;
  NSObject *v20;
  uint64_t v21;
  void *v22;
  NSObject *v23;
  _BOOL4 v24;
  NSObject *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)(uint64_t);
  void *v29;
  id v30;
  _QWORD *v31;
  __int128 *v32;
  _QWORD *v33;
  char v34;
  _QWORD v35[4];
  NSObject *v36;
  _QWORD *v37;
  _QWORD v38[4];
  NSObject *v39;
  _QWORD *v40;
  _QWORD v41[4];
  NPKOneShotLocationFetcher *v42;
  NSObject *v43;
  __int128 *p_buf;
  _QWORD v45[5];
  id v46;
  _QWORD v47[5];
  id v48;
  __int128 buf;
  uint64_t v50;
  uint64_t (*v51)(uint64_t, uint64_t);
  void (*v52)(uint64_t);
  id v53;
  uint64_t v54;

  v54 = *MEMORY[0x24BDAC8D0];
  v2 = objc_alloc_init(NPKProtoProvisioningDataRequest);
  -[NPKProtoProvisioningDataRequest setIncludeDeviceMetadata:](v2, "setIncludeDeviceMetadata:", *(unsigned __int8 *)(a1 + 48));
  v3 = objc_alloc(MEMORY[0x24BE4FE40]);
  -[NPKProtoProvisioningDataRequest data](v2, "data");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = (void *)objc_msgSend(v3, "initWithProtobufData:type:isResponse:", v4, 2, 0);

  objc_msgSend(*(id *)(a1 + 32), "_sendProtobuf:responseExpected:", v5, 1);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  if (v6)
  {
    if (*(_QWORD *)(a1 + 40))
    {
      *(_QWORD *)&buf = 0;
      *((_QWORD *)&buf + 1) = &buf;
      v50 = 0x3032000000;
      v51 = __Block_byref_object_copy__23;
      v52 = __Block_byref_object_dispose__23;
      v53 = 0;
      v47[0] = 0;
      v47[1] = v47;
      v47[2] = 0x3032000000;
      v47[3] = __Block_byref_object_copy__23;
      v47[4] = __Block_byref_object_dispose__23;
      v48 = 0;
      v45[0] = 0;
      v45[1] = v45;
      v45[2] = 0x3032000000;
      v45[3] = __Block_byref_object_copy__23;
      v45[4] = __Block_byref_object_dispose__23;
      v46 = 0;
      v7 = dispatch_group_create();
      v8 = MEMORY[0x24BDAC760];
      if (*(_BYTE *)(a1 + 48))
      {
        v9 = objc_alloc_init(NPKOneShotLocationFetcher);
        dispatch_group_enter(v7);
        v41[0] = v8;
        v41[1] = 3221225472;
        v41[2] = __125__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_provisioningDataIncludingDeviceMetadata_withCompletionHandler___block_invoke_2;
        v41[3] = &unk_24CFED100;
        p_buf = &buf;
        v10 = v9;
        v42 = v10;
        v43 = v7;
        -[NPKOneShotLocationFetcher fetchLocationWithCompletion:](v10, "fetchLocationWithCompletion:", v41);

      }
      dispatch_group_enter(v7);
      v38[0] = v8;
      v38[1] = 3221225472;
      v38[2] = __125__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_provisioningDataIncludingDeviceMetadata_withCompletionHandler___block_invoke_371;
      v38[3] = &unk_24CFED128;
      v40 = v47;
      v11 = v7;
      v39 = v11;
      v12 = (void *)MEMORY[0x2199B6780](v38);
      v35[0] = v8;
      v35[1] = 3221225472;
      v35[2] = __125__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_provisioningDataIncludingDeviceMetadata_withCompletionHandler___block_invoke_373;
      v35[3] = &unk_24CFED150;
      v37 = v45;
      v13 = v11;
      v36 = v13;
      v14 = (void *)MEMORY[0x2199B6780](v35);
      objc_msgSend(*(id *)(a1 + 32), "responseQueue");
      v15 = objc_claimAutoreleasedReturnValue();
      v26 = v8;
      v27 = 3221225472;
      v28 = __125__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_provisioningDataIncludingDeviceMetadata_withCompletionHandler___block_invoke_374;
      v29 = &unk_24CFED188;
      v34 = *(_BYTE *)(a1 + 48);
      v31 = v47;
      v32 = &buf;
      v30 = *(id *)(a1 + 40);
      v33 = v45;
      dispatch_group_notify(v13, v15, &v26);

      v16 = *(void **)(a1 + 32);
      v17 = (void *)MEMORY[0x2199B6780](v12);
      objc_msgSend(v16, "_trackOutstandingRequestWithMessageIdentifier:completionHandler:errorHandler:", v6, v17, v14, v26, v27, v28, v29);

      _Block_object_dispose(v45, 8);
      _Block_object_dispose(v47, 8);

      _Block_object_dispose(&buf, 8);
    }
    else
    {
      pk_Payment_log();
      v23 = objc_claimAutoreleasedReturnValue();
      v24 = os_log_type_enabled(v23, OS_LOG_TYPE_DEFAULT);

      if (v24)
      {
        pk_Payment_log();
        v25 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v25, OS_LOG_TYPE_DEFAULT))
        {
          LODWORD(buf) = 138412290;
          *(_QWORD *)((char *)&buf + 4) = v6;
          _os_log_impl(&dword_213518000, v25, OS_LOG_TYPE_DEFAULT, "Warning: No response identifier for message with identifier %@", (uint8_t *)&buf, 0xCu);
        }

      }
    }
  }
  else
  {
    pk_Payment_log();
    v18 = objc_claimAutoreleasedReturnValue();
    v19 = os_log_type_enabled(v18, OS_LOG_TYPE_ERROR);

    if (v19)
    {
      pk_Payment_log();
      v20 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR))
      {
        LODWORD(buf) = 138412290;
        *(_QWORD *)((char *)&buf + 4) = v5;
        _os_log_impl(&dword_213518000, v20, OS_LOG_TYPE_ERROR, "Error: No message identifier for protobuf %@", (uint8_t *)&buf, 0xCu);
      }

    }
    v21 = *(_QWORD *)(a1 + 40);
    if (v21)
    {
      NPKGetIDSCommunicationError();
      v22 = (void *)objc_claimAutoreleasedReturnValue();
      (*(void (**)(uint64_t, _QWORD, void *))(v21 + 16))(v21, 0, v22);

    }
  }

}

void __125__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_provisioningDataIncludingDeviceMetadata_withCompletionHandler___block_invoke_2(uint64_t a1, void *a2)
{
  id v4;
  NSObject *v5;
  _BOOL4 v6;
  NSObject *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  __int16 v12;
  uint64_t v13;
  uint64_t v14;

  v14 = *MEMORY[0x24BDAC8D0];
  v4 = a2;
  objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40), a2);
  pk_Payment_log();
  v5 = objc_claimAutoreleasedReturnValue();
  v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    pk_Payment_log();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      v8 = *(_QWORD *)(a1 + 32);
      v9 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40);
      v10 = 138412546;
      v11 = v8;
      v12 = 2112;
      v13 = v9;
      _os_log_impl(&dword_213518000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Fetcher %@ fetched location %@", (uint8_t *)&v10, 0x16u);
    }

  }
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 40));

}

void __125__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_provisioningDataIncludingDeviceMetadata_withCompletionHandler___block_invoke_371(uint64_t a1, void *a2)
{
  id v4;
  NSObject *v5;
  _BOOL4 v6;
  NSObject *v7;
  int v8;
  id v9;
  uint64_t v10;

  v10 = *MEMORY[0x24BDAC8D0];
  v4 = a2;
  objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), a2);
  pk_Payment_log();
  v5 = objc_claimAutoreleasedReturnValue();
  v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    pk_Payment_log();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      v8 = 138412290;
      v9 = v4;
      _os_log_impl(&dword_213518000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Fetched provisioning data %@", (uint8_t *)&v8, 0xCu);
    }

  }
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));

}

void __125__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_provisioningDataIncludingDeviceMetadata_withCompletionHandler___block_invoke_373(uint64_t a1, void *a2)
{
  id v4;
  NSObject *v5;
  _BOOL4 v6;
  NSObject *v7;
  int v8;
  id v9;
  uint64_t v10;

  v10 = *MEMORY[0x24BDAC8D0];
  v4 = a2;
  objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), a2);
  pk_Payment_log();
  v5 = objc_claimAutoreleasedReturnValue();
  v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    pk_Payment_log();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      v8 = 138412290;
      v9 = v4;
      _os_log_impl(&dword_213518000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Got provisioning error %@", (uint8_t *)&v8, 0xCu);
    }

  }
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));

}

uint64_t __125__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_provisioningDataIncludingDeviceMetadata_withCompletionHandler___block_invoke_374(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  NSObject *v7;
  _BOOL4 v8;
  NSObject *v9;
  char *v10;
  char *v11;
  char *v12;
  uint64_t result;
  int v14;
  char *v15;
  __int16 v16;
  char *v17;
  __int16 v18;
  char *v19;
  uint64_t v20;

  v20 = *MEMORY[0x24BDAC8D0];
  v2 = *(void **)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40);
  if (v2 && *(_BYTE *)(a1 + 64))
  {
    if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40))
    {
      objc_msgSend(v2, "setLocation:");
      v2 = *(void **)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40);
    }
    PKDevicePhoneNumber();
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "setPhoneNumber:", v3);

    v2 = *(void **)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40);
  }
  objc_msgSend(v2, "deviceName");
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), "phoneNumber");
  v5 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), "location");
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  pk_Payment_log();
  v7 = objc_claimAutoreleasedReturnValue();
  v8 = os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT);

  if (v8)
  {
    pk_Payment_log();
    v9 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      v10 = off_24CFED170[v4 != 0];
      v11 = off_24CFED170[v5 != 0];
      v12 = off_24CFED170[v6 != 0];
      v14 = 136315650;
      v15 = v10;
      v16 = 2080;
      v17 = v11;
      v18 = 2080;
      v19 = v12;
      _os_log_impl(&dword_213518000, v9, OS_LOG_TYPE_DEFAULT, "Notice: Device provisioning data:\n\tdevice name is %s\n\tphone number is %s\n\tlocation is %s", (uint8_t *)&v14, 0x20u);
    }

  }
  result = *(_QWORD *)(a1 + 32);
  if (result)
    return (*(uint64_t (**)(uint64_t, _QWORD, _QWORD))(result + 16))(result, *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40));
  return result;
}

- (void)configurationDataResponse:(id)a3
{
  id v4;
  NSObject *v5;
  _BOOL4 v6;
  NSObject *v7;
  void *v8;
  void *v9;
  void *v10;
  NSObject *v11;
  NSObject *v12;
  _BOOL4 v13;
  NSObject *v14;
  uint64_t v15;
  uint8_t v16[8];
  _QWORD block[5];
  id v18;
  id v19;
  uint64_t *v20;
  __int128 *p_buf;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t (*v25)(uint64_t, uint64_t);
  void (*v26)(uint64_t);
  id v27;
  __int128 buf;
  uint64_t v29;
  uint64_t (*v30)(uint64_t, uint64_t);
  void (*v31)(uint64_t);
  id v32;
  uint64_t v33;

  v33 = *MEMORY[0x24BDAC8D0];
  v4 = a3;
  pk_Payment_log();
  v5 = objc_claimAutoreleasedReturnValue();
  v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    pk_Payment_log();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend(v4, "npkDescription");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      LODWORD(buf) = 138412290;
      *(_QWORD *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_213518000, v7, OS_LOG_TYPE_DEFAULT, "Notice: incoming protobuf %@", (uint8_t *)&buf, 0xCu);

    }
  }
  objc_msgSend(v4, "context");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "incomingResponseIdentifier");
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  *(_QWORD *)&buf = 0;
  *((_QWORD *)&buf + 1) = &buf;
  v29 = 0x3032000000;
  v30 = __Block_byref_object_copy__342;
  v31 = __Block_byref_object_dispose__343;
  v32 = 0;
  v22 = 0;
  v23 = &v22;
  v24 = 0x3032000000;
  v25 = __Block_byref_object_copy__23;
  v26 = __Block_byref_object_dispose__23;
  v27 = 0;
  if (v10)
  {
    -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
    v11 = objc_claimAutoreleasedReturnValue();
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 3221225472;
    block[2] = __71__NPKPaymentWebServiceCompanionTargetDevice_configurationDataResponse___block_invoke;
    block[3] = &unk_24CFED0D8;
    block[4] = self;
    v18 = v10;
    v19 = v4;
    v20 = &v22;
    p_buf = &buf;
    dispatch_sync(v11, block);

  }
  else
  {
    pk_Payment_log();
    v12 = objc_claimAutoreleasedReturnValue();
    v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      pk_Payment_log();
      v14 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)v16 = 0;
        _os_log_impl(&dword_213518000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v16, 2u);
      }

    }
  }
  v15 = *(_QWORD *)(*((_QWORD *)&buf + 1) + 40);
  if (v15)
    (*(void (**)(uint64_t, uint64_t, _QWORD))(v15 + 16))(v15, v23[5], 0);
  _Block_object_dispose(&v22, 8);

  _Block_object_dispose(&buf, 8);
}

void __71__NPKPaymentWebServiceCompanionTargetDevice_configurationDataResponse___block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;
  NPKProtoConfigurationDataResponse *v4;
  void *v5;
  NPKProtoConfigurationDataResponse *v6;
  NSObject *v7;
  _BOOL4 v8;
  NSObject *v9;
  void *v10;
  NSObject *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint8_t v19[16];

  objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "objectForKey:", *(_QWORD *)(a1 + 40));
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  if (v3)
  {
    v4 = [NPKProtoConfigurationDataResponse alloc];
    objc_msgSend(*(id *)(a1 + 48), "data");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    v6 = -[NPKProtoConfigurationDataResponse initWithData:](v4, "initWithData:", v5);

    if (-[NPKProtoConfigurationDataResponse pending](v6, "pending"))
    {
      objc_msgSend(v3, "setOrResetCleanupTimer");
    }
    else
    {
      -[NPKProtoConfigurationDataResponse configurationDataBytes](v6, "configurationDataBytes");
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      v11 = objc_opt_class();
      NPKSecureUnarchiveObject(v10, v11);
      v12 = objc_claimAutoreleasedReturnValue();
      v13 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
      v14 = *(void **)(v13 + 40);
      *(_QWORD *)(v13 + 40) = v12;

      objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
      v15 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v15, "removeObjectForKey:", *(_QWORD *)(a1 + 40));

      objc_msgSend(v3, "completionHandler");
      v16 = objc_claimAutoreleasedReturnValue();
      v17 = *(_QWORD *)(*(_QWORD *)(a1 + 64) + 8);
      v18 = *(void **)(v17 + 40);
      *(_QWORD *)(v17 + 40) = v16;

    }
  }
  else
  {
    pk_Payment_log();
    v7 = objc_claimAutoreleasedReturnValue();
    v8 = os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT);

    if (v8)
    {
      pk_Payment_log();
      v9 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)v19 = 0;
        _os_log_impl(&dword_213518000, v9, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", v19, 2u);
      }

    }
  }

}

- (void)paymentWebService:(id)a3 configurationDataWithCompletionHandler:(id)a4
{
  id v5;
  NSObject *v6;
  id v7;
  _QWORD block[5];
  id v9;

  v5 = a4;
  -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
  v6 = objc_claimAutoreleasedReturnValue();
  block[0] = MEMORY[0x24BDAC760];
  block[1] = 3221225472;
  block[2] = __102__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_configurationDataWithCompletionHandler___block_invoke;
  block[3] = &unk_24CFE7E90;
  block[4] = self;
  v9 = v5;
  v7 = v5;
  dispatch_sync(v6, block);

}

void __102__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_configurationDataWithCompletionHandler___block_invoke(uint64_t a1)
{
  NPKProtoConfigurationDataRequest *v2;
  id v3;
  void *v4;
  void *v5;
  void *v6;
  NSObject *v7;
  void *v8;
  void *v9;
  void *v10;
  NSObject *v11;
  _BOOL4 v12;
  NSObject *v13;
  uint64_t v14;
  NSObject *v15;
  _BOOL4 v16;
  _QWORD v17[4];
  id v18;
  uint8_t buf[4];
  void *v20;
  uint64_t v21;

  v21 = *MEMORY[0x24BDAC8D0];
  v2 = objc_alloc_init(NPKProtoConfigurationDataRequest);
  v3 = objc_alloc(MEMORY[0x24BE4FE40]);
  -[NPKProtoConfigurationDataRequest data](v2, "data");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = (void *)objc_msgSend(v3, "initWithProtobufData:type:isResponse:", v4, 4, 0);

  objc_msgSend(*(id *)(a1 + 32), "_sendProtobuf:responseExpected:", v5, 1);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  if (v6)
  {
    if (*(_QWORD *)(a1 + 40))
    {
      v7 = MEMORY[0x2199B6780]();
      v17[0] = MEMORY[0x24BDAC760];
      v17[1] = 3221225472;
      v17[2] = __102__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_configurationDataWithCompletionHandler___block_invoke_2;
      v17[3] = &unk_24CFE7B80;
      v18 = *(id *)(a1 + 40);
      v8 = (void *)MEMORY[0x2199B6780](v17);
      v9 = *(void **)(a1 + 32);
      v10 = (void *)MEMORY[0x2199B6780](v7);
      objc_msgSend(v9, "_trackOutstandingRequestWithMessageIdentifier:completionHandler:errorHandler:", v6, v10, v8);

    }
    else
    {
      pk_Payment_log();
      v15 = objc_claimAutoreleasedReturnValue();
      v16 = os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT);

      if (!v16)
        goto LABEL_11;
      pk_Payment_log();
      v7 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 138412290;
        v20 = v6;
        _os_log_impl(&dword_213518000, v7, OS_LOG_TYPE_DEFAULT, "Warning: No response identifier for message with identifier %@", buf, 0xCu);
      }
    }
    goto LABEL_10;
  }
  pk_Payment_log();
  v11 = objc_claimAutoreleasedReturnValue();
  v12 = os_log_type_enabled(v11, OS_LOG_TYPE_ERROR);

  if (v12)
  {
    pk_Payment_log();
    v13 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 138412290;
      v20 = v5;
      _os_log_impl(&dword_213518000, v13, OS_LOG_TYPE_ERROR, "Error: No message identifier for protobuf %@", buf, 0xCu);
    }

  }
  v14 = *(_QWORD *)(a1 + 40);
  if (v14)
  {
    NPKGetIDSCommunicationError();
    v7 = objc_claimAutoreleasedReturnValue();
    (*(void (**)(uint64_t, _QWORD, NSObject *))(v14 + 16))(v14, 0, v7);
LABEL_10:

  }
LABEL_11:

}

uint64_t __102__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_configurationDataWithCompletionHandler___block_invoke_2(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 32);
  if (result)
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(result + 16))(result, 0, a2);
  return result;
}

- (id)trustedDeviceEnrollmentInfoForWebService:(id)a3
{
  id v3;
  NSObject *v4;
  _BOOL4 v5;
  NSObject *v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  int v17;
  id v18;
  uint64_t v19;

  v19 = *MEMORY[0x24BDAC8D0];
  v3 = a3;
  pk_Payment_log();
  v4 = objc_claimAutoreleasedReturnValue();
  v5 = os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT);

  if (v5)
  {
    pk_Payment_log();
    v6 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      v17 = 138412290;
      v18 = v3;
      _os_log_impl(&dword_213518000, v6, OS_LOG_TYPE_DEFAULT, "Notice: Requested Trusted Device Enrollment Info for WebService: %@", (uint8_t *)&v17, 0xCu);
    }

  }
  objc_msgSend(MEMORY[0x24BE6B4E0], "sharedInstance");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "getActivePairedDevice");
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  if (v8)
  {
    v9 = objc_alloc_init(MEMORY[0x24BE6EF58]);
    objc_msgSend(v8, "valueForProperty:", *MEMORY[0x24BE6B398]);
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v9, "setDeviceName:", v10);

    objc_msgSend(v8, "valueForProperty:", *MEMORY[0x24BE6B3D0]);
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v9, "setDeviceSerialNumber:", v11);

    objc_msgSend(v8, "valueForProperty:", *MEMORY[0x24BE6B400]);
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v9, "setDeviceUDID:", v12);

    objc_msgSend(v8, "valueForProperty:", *MEMORY[0x24BE6B3B0]);
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v9, "setProductType:", v13);

    objc_msgSend(v8, "valueForProperty:", *MEMORY[0x24BE6B3B8]);
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v9, "setSecureElementIdentifier:", v14);

    v15 = (void *)objc_msgSend(objc_alloc(MEMORY[0x24BDD1880]), "initWithUUIDString:", CFSTR("6BD289D4-EFF7-4E48-A3AD-776E924C8723"));
    objc_msgSend(v9, "setSupportsAccessExpressMode:", objc_msgSend(v8, "supportsCapability:", v15));

  }
  else
  {
    v9 = 0;
  }

  return v9;
}

- (void)signDataResponse:(id)a3
{
  id v4;
  NSObject *v5;
  _BOOL4 v6;
  NSObject *v7;
  void *v8;
  void *v9;
  void *v10;
  NSObject *v11;
  NSObject *v12;
  _BOOL4 v13;
  NSObject *v14;
  uint64_t v15;
  uint8_t v16[16];
  _QWORD block[5];
  id v18;
  id v19;
  uint64_t *v20;
  uint64_t *v21;
  __int128 *p_buf;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t (*v26)(uint64_t, uint64_t);
  void (*v27)(uint64_t);
  id v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t (*v32)(uint64_t, uint64_t);
  void (*v33)(uint64_t);
  id v34;
  __int128 buf;
  uint64_t v36;
  uint64_t (*v37)(uint64_t, uint64_t);
  void (*v38)(uint64_t);
  id v39;
  uint64_t v40;

  v40 = *MEMORY[0x24BDAC8D0];
  v4 = a3;
  pk_Payment_log();
  v5 = objc_claimAutoreleasedReturnValue();
  v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    pk_Payment_log();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend(v4, "npkDescription");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      LODWORD(buf) = 138412290;
      *(_QWORD *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_213518000, v7, OS_LOG_TYPE_DEFAULT, "Notice: incoming protobuf %@", (uint8_t *)&buf, 0xCu);

    }
  }
  objc_msgSend(v4, "context");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "incomingResponseIdentifier");
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  *(_QWORD *)&buf = 0;
  *((_QWORD *)&buf + 1) = &buf;
  v36 = 0x3032000000;
  v37 = __Block_byref_object_copy__342;
  v38 = __Block_byref_object_dispose__343;
  v39 = 0;
  v29 = 0;
  v30 = &v29;
  v31 = 0x3032000000;
  v32 = __Block_byref_object_copy__23;
  v33 = __Block_byref_object_dispose__23;
  v34 = 0;
  v23 = 0;
  v24 = &v23;
  v25 = 0x3032000000;
  v26 = __Block_byref_object_copy__23;
  v27 = __Block_byref_object_dispose__23;
  v28 = 0;
  if (v10)
  {
    -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
    v11 = objc_claimAutoreleasedReturnValue();
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 3221225472;
    block[2] = __62__NPKPaymentWebServiceCompanionTargetDevice_signDataResponse___block_invoke;
    block[3] = &unk_24CFED060;
    block[4] = self;
    v18 = v10;
    v19 = v4;
    v20 = &v29;
    v21 = &v23;
    p_buf = &buf;
    dispatch_sync(v11, block);

  }
  else
  {
    pk_Payment_log();
    v12 = objc_claimAutoreleasedReturnValue();
    v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      pk_Payment_log();
      v14 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)v16 = 0;
        _os_log_impl(&dword_213518000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v16, 2u);
      }

    }
  }
  v15 = *(_QWORD *)(*((_QWORD *)&buf + 1) + 40);
  if (v15)
    (*(void (**)(uint64_t, uint64_t, uint64_t, _QWORD))(v15 + 16))(v15, v30[5], v24[5], 0);
  _Block_object_dispose(&v23, 8);

  _Block_object_dispose(&v29, 8);
  _Block_object_dispose(&buf, 8);

}

void __62__NPKPaymentWebServiceCompanionTargetDevice_signDataResponse___block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;
  NPKProtoSignDataResponse *v4;
  void *v5;
  NPKProtoSignDataResponse *v6;
  NSObject *v7;
  _BOOL4 v8;
  NSObject *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  NSObject *v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint8_t v22[16];

  objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "objectForKey:", *(_QWORD *)(a1 + 40));
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  if (v3)
  {
    v4 = [NPKProtoSignDataResponse alloc];
    objc_msgSend(*(id *)(a1 + 48), "data");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    v6 = -[NPKProtoSignDataResponse initWithData:](v4, "initWithData:", v5);

    if (-[NPKProtoSignDataResponse pending](v6, "pending"))
    {
      objc_msgSend(v3, "setOrResetCleanupTimer");
    }
    else
    {
      -[NPKProtoSignDataResponse signedData](v6, "signedData");
      v10 = objc_claimAutoreleasedReturnValue();
      v11 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
      v12 = *(void **)(v11 + 40);
      *(_QWORD *)(v11 + 40) = v10;

      if (-[NPKProtoSignDataResponse hasSignatureInfoBytes](v6, "hasSignatureInfoBytes"))
      {
        -[NPKProtoSignDataResponse signatureInfoBytes](v6, "signatureInfoBytes");
        v13 = (void *)objc_claimAutoreleasedReturnValue();
        v14 = objc_opt_class();
        NPKSecureUnarchiveObject(v13, v14);
        v15 = objc_claimAutoreleasedReturnValue();
        v16 = *(_QWORD *)(*(_QWORD *)(a1 + 64) + 8);
        v17 = *(void **)(v16 + 40);
        *(_QWORD *)(v16 + 40) = v15;

      }
      objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
      v18 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v18, "removeObjectForKey:", *(_QWORD *)(a1 + 40));

      objc_msgSend(v3, "completionHandler");
      v19 = objc_claimAutoreleasedReturnValue();
      v20 = *(_QWORD *)(*(_QWORD *)(a1 + 72) + 8);
      v21 = *(void **)(v20 + 40);
      *(_QWORD *)(v20 + 40) = v19;

    }
  }
  else
  {
    pk_Payment_log();
    v7 = objc_claimAutoreleasedReturnValue();
    v8 = os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT);

    if (v8)
    {
      pk_Payment_log();
      v9 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)v22 = 0;
        _os_log_impl(&dword_213518000, v9, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", v22, 2u);
      }

    }
  }

}

- (void)paymentWebService:(id)a3 signData:(id)a4 signatureEntanglementMode:(unint64_t)a5 withCompletionHandler:(id)a6
{
  id v9;
  id v10;
  NSObject *v11;
  _BOOL4 v12;
  NSObject *v13;
  NSObject *v14;
  id v15;
  id v16;
  _QWORD v17[4];
  id v18;
  NPKPaymentWebServiceCompanionTargetDevice *v19;
  id v20;
  unint64_t v21;
  uint8_t buf[4];
  uint64_t v23;
  __int16 v24;
  int v25;
  uint64_t v26;

  v26 = *MEMORY[0x24BDAC8D0];
  v9 = a4;
  v10 = a6;
  pk_Payment_log();
  v11 = objc_claimAutoreleasedReturnValue();
  v12 = os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT);

  if (v12)
  {
    pk_Payment_log();
    v13 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 134218240;
      v23 = objc_msgSend(v9, "length");
      v24 = 1024;
      v25 = a5;
      _os_log_impl(&dword_213518000, v13, OS_LOG_TYPE_DEFAULT, "Notice: Request to sign data of length %lu with signature entanglement mode %d", buf, 0x12u);
    }

  }
  -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
  v14 = objc_claimAutoreleasedReturnValue();
  v17[0] = MEMORY[0x24BDAC760];
  v17[1] = 3221225472;
  v17[2] = __120__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_signData_signatureEntanglementMode_withCompletionHandler___block_invoke;
  v17[3] = &unk_24CFEBE90;
  v18 = v9;
  v19 = self;
  v20 = v10;
  v21 = a5;
  v15 = v10;
  v16 = v9;
  dispatch_sync(v14, v17);

}

void __120__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_signData_signatureEntanglementMode_withCompletionHandler___block_invoke(uint64_t a1)
{
  NPKProtoSignDataRequest *v2;
  id v3;
  void *v4;
  void *v5;
  void *v6;
  NSObject *v7;
  void *v8;
  void *v9;
  void *v10;
  NSObject *v11;
  _BOOL4 v12;
  NSObject *v13;
  uint64_t v14;
  NSObject *v15;
  _BOOL4 v16;
  _QWORD v17[4];
  id v18;
  uint8_t buf[4];
  void *v20;
  uint64_t v21;

  v21 = *MEMORY[0x24BDAC8D0];
  v2 = objc_alloc_init(NPKProtoSignDataRequest);
  -[NPKProtoSignDataRequest setDataToSign:](v2, "setDataToSign:", *(_QWORD *)(a1 + 32));
  -[NPKProtoSignDataRequest setEntanglementMode:](v2, "setEntanglementMode:", *(_QWORD *)(a1 + 56) == 1);
  v3 = objc_alloc(MEMORY[0x24BE4FE40]);
  -[NPKProtoSignDataRequest data](v2, "data");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = (void *)objc_msgSend(v3, "initWithProtobufData:type:isResponse:", v4, 14, 0);

  objc_msgSend(*(id *)(a1 + 40), "_sendProtobuf:responseExpected:", v5, 1);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  if (v6)
  {
    if (*(_QWORD *)(a1 + 48))
    {
      v7 = MEMORY[0x2199B6780]();
      v17[0] = MEMORY[0x24BDAC760];
      v17[1] = 3221225472;
      v17[2] = __120__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_signData_signatureEntanglementMode_withCompletionHandler___block_invoke_2;
      v17[3] = &unk_24CFE7B80;
      v18 = *(id *)(a1 + 48);
      v8 = (void *)MEMORY[0x2199B6780](v17);
      v9 = *(void **)(a1 + 40);
      v10 = (void *)MEMORY[0x2199B6780](v7);
      objc_msgSend(v9, "_trackOutstandingRequestWithMessageIdentifier:completionHandler:errorHandler:", v6, v10, v8);

    }
    else
    {
      pk_Payment_log();
      v15 = objc_claimAutoreleasedReturnValue();
      v16 = os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT);

      if (!v16)
        goto LABEL_11;
      pk_Payment_log();
      v7 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 138412290;
        v20 = v6;
        _os_log_impl(&dword_213518000, v7, OS_LOG_TYPE_DEFAULT, "Warning: No response identifier for message with identifier %@", buf, 0xCu);
      }
    }
    goto LABEL_10;
  }
  pk_Payment_log();
  v11 = objc_claimAutoreleasedReturnValue();
  v12 = os_log_type_enabled(v11, OS_LOG_TYPE_ERROR);

  if (v12)
  {
    pk_Payment_log();
    v13 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 138412290;
      v20 = v5;
      _os_log_impl(&dword_213518000, v13, OS_LOG_TYPE_ERROR, "Error: No message identifier for protobuf %@", buf, 0xCu);
    }

  }
  v14 = *(_QWORD *)(a1 + 48);
  if (v14)
  {
    NPKGetIDSCommunicationError();
    v7 = objc_claimAutoreleasedReturnValue();
    (*(void (**)(uint64_t, _QWORD, _QWORD, NSObject *))(v14 + 16))(v14, 0, 0, v7);
LABEL_10:

  }
LABEL_11:

}

uint64_t __120__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_signData_signatureEntanglementMode_withCompletionHandler___block_invoke_2(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 32);
  if (result)
    return (*(uint64_t (**)(uint64_t, _QWORD, _QWORD, uint64_t))(result + 16))(result, 0, 0, a2);
  return result;
}

- (void)paymentWebService:(id)a3 signData:(id)a4 withCompletionHandler:(id)a5
{
  id v7;
  id v8;
  NSObject *v9;
  _BOOL4 v10;
  NSObject *v11;
  NSObject *v12;
  id v13;
  id v14;
  _QWORD block[4];
  id v16;
  NPKPaymentWebServiceCompanionTargetDevice *v17;
  id v18;
  uint8_t buf[4];
  uint64_t v20;
  uint64_t v21;

  v21 = *MEMORY[0x24BDAC8D0];
  v7 = a4;
  v8 = a5;
  pk_Payment_log();
  v9 = objc_claimAutoreleasedReturnValue();
  v10 = os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT);

  if (v10)
  {
    pk_Payment_log();
    v11 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 134217984;
      v20 = objc_msgSend(v7, "length");
      _os_log_impl(&dword_213518000, v11, OS_LOG_TYPE_DEFAULT, "Notice: Request to sign data of length %lu", buf, 0xCu);
    }

  }
  -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
  v12 = objc_claimAutoreleasedReturnValue();
  block[0] = MEMORY[0x24BDAC760];
  block[1] = 3221225472;
  block[2] = __94__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_signData_withCompletionHandler___block_invoke;
  block[3] = &unk_24CFE84E8;
  v16 = v7;
  v17 = self;
  v18 = v8;
  v13 = v8;
  v14 = v7;
  dispatch_sync(v12, block);

}

void __94__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_signData_withCompletionHandler___block_invoke(id *a1)
{
  NPKProtoSignDataRequest *v2;
  void *v3;
  id v4;
  void *v5;
  void *v6;
  void *v7;
  NSObject *v8;
  void *v9;
  id v10;
  void *v11;
  NSObject *v12;
  _BOOL4 v13;
  NSObject *v14;
  id v15;
  NSObject *v16;
  _BOOL4 v17;
  _QWORD v18[4];
  id v19;
  uint8_t buf[4];
  void *v21;
  uint64_t v22;

  v22 = *MEMORY[0x24BDAC8D0];
  v2 = objc_alloc_init(NPKProtoSignDataRequest);
  objc_msgSend(a1[4], "SHA256Hash");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  -[NPKProtoSignDataRequest setDigestToSign:](v2, "setDigestToSign:", v3);

  v4 = objc_alloc(MEMORY[0x24BE4FE40]);
  -[NPKProtoSignDataRequest data](v2, "data");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = (void *)objc_msgSend(v4, "initWithProtobufData:type:isResponse:", v5, 14, 0);

  objc_msgSend(a1[5], "_sendProtobuf:responseExpected:", v6, 1);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  if (v7)
  {
    if (a1[6])
    {
      v8 = MEMORY[0x2199B6780]();
      v18[0] = MEMORY[0x24BDAC760];
      v18[1] = 3221225472;
      v18[2] = __94__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_signData_withCompletionHandler___block_invoke_2;
      v18[3] = &unk_24CFE7B80;
      v19 = a1[6];
      v9 = (void *)MEMORY[0x2199B6780](v18);
      v10 = a1[5];
      v11 = (void *)MEMORY[0x2199B6780](v8);
      objc_msgSend(v10, "_trackOutstandingRequestWithMessageIdentifier:completionHandler:errorHandler:", v7, v11, v9);

    }
    else
    {
      pk_Payment_log();
      v16 = objc_claimAutoreleasedReturnValue();
      v17 = os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT);

      if (!v17)
        goto LABEL_11;
      pk_Payment_log();
      v8 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 138412290;
        v21 = v7;
        _os_log_impl(&dword_213518000, v8, OS_LOG_TYPE_DEFAULT, "Warning: No response identifier for message with identifier %@", buf, 0xCu);
      }
    }
    goto LABEL_10;
  }
  pk_Payment_log();
  v12 = objc_claimAutoreleasedReturnValue();
  v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

  if (v13)
  {
    pk_Payment_log();
    v14 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 138412290;
      v21 = v6;
      _os_log_impl(&dword_213518000, v14, OS_LOG_TYPE_ERROR, "Error: No message identifier for protobuf %@", buf, 0xCu);
    }

  }
  v15 = a1[6];
  if (v15)
  {
    NPKGetIDSCommunicationError();
    v8 = objc_claimAutoreleasedReturnValue();
    (*((void (**)(id, _QWORD, _QWORD, NSObject *))v15 + 2))(v15, 0, 0, v8);
LABEL_10:

  }
LABEL_11:

}

uint64_t __94__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_signData_withCompletionHandler___block_invoke_2(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 32);
  if (result)
    return (*(uint64_t (**)(uint64_t, _QWORD, _QWORD, uint64_t))(result + 16))(result, 0, 0, a2);
  return result;
}

- (void)didRegisterResponse:(id)a3
{
  id v4;
  NSObject *v5;
  _BOOL4 v6;
  NSObject *v7;
  void *v8;
  void *v9;
  void *v10;
  NSObject *v11;
  NSObject *v12;
  _BOOL4 v13;
  NSObject *v14;
  uint64_t v15;
  uint8_t v16[8];
  _QWORD block[5];
  id v18;
  id v19;
  uint64_t *v20;
  __int128 *p_buf;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  char v25;
  __int128 buf;
  uint64_t v27;
  uint64_t (*v28)(uint64_t, uint64_t);
  void (*v29)(uint64_t);
  id v30;
  uint64_t v31;

  v31 = *MEMORY[0x24BDAC8D0];
  v4 = a3;
  pk_Payment_log();
  v5 = objc_claimAutoreleasedReturnValue();
  v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    pk_Payment_log();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend(v4, "npkDescription");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      LODWORD(buf) = 138412290;
      *(_QWORD *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_213518000, v7, OS_LOG_TYPE_DEFAULT, "Notice: incoming protobuf %@", (uint8_t *)&buf, 0xCu);

    }
  }
  objc_msgSend(v4, "context");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "incomingResponseIdentifier");
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  *(_QWORD *)&buf = 0;
  *((_QWORD *)&buf + 1) = &buf;
  v27 = 0x3032000000;
  v28 = __Block_byref_object_copy__342;
  v29 = __Block_byref_object_dispose__343;
  v30 = 0;
  v22 = 0;
  v23 = &v22;
  v24 = 0x2020000000;
  v25 = 0;
  if (v10)
  {
    -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
    v11 = objc_claimAutoreleasedReturnValue();
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 3221225472;
    block[2] = __65__NPKPaymentWebServiceCompanionTargetDevice_didRegisterResponse___block_invoke;
    block[3] = &unk_24CFED0D8;
    block[4] = self;
    v18 = v10;
    v19 = v4;
    v20 = &v22;
    p_buf = &buf;
    dispatch_sync(v11, block);

  }
  else
  {
    pk_Payment_log();
    v12 = objc_claimAutoreleasedReturnValue();
    v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      pk_Payment_log();
      v14 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)v16 = 0;
        _os_log_impl(&dword_213518000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v16, 2u);
      }

    }
  }
  v15 = *(_QWORD *)(*((_QWORD *)&buf + 1) + 40);
  if (v15)
    (*(void (**)(uint64_t, _QWORD, _QWORD))(v15 + 16))(v15, *((unsigned __int8 *)v23 + 24), 0);
  _Block_object_dispose(&v22, 8);
  _Block_object_dispose(&buf, 8);

}

void __65__NPKPaymentWebServiceCompanionTargetDevice_didRegisterResponse___block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;
  NPKProtoDeviceDidRegisterResponse *v4;
  void *v5;
  NPKProtoDeviceDidRegisterResponse *v6;
  NSObject *v7;
  _BOOL4 v8;
  NSObject *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint8_t v14[16];

  objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "objectForKey:", *(_QWORD *)(a1 + 40));
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  if (v3)
  {
    v4 = [NPKProtoDeviceDidRegisterResponse alloc];
    objc_msgSend(*(id *)(a1 + 48), "data");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    v6 = -[NPKProtoDeviceDidRegisterResponse initWithData:](v4, "initWithData:", v5);

    if (-[NPKProtoDeviceDidRegisterResponse pending](v6, "pending"))
    {
      objc_msgSend(v3, "setOrResetCleanupTimer");
    }
    else
    {
      *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 24) = -[NPKProtoDeviceDidRegisterResponse success](v6, "success");
      objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v10, "removeObjectForKey:", *(_QWORD *)(a1 + 40));

      objc_msgSend(v3, "completionHandler");
      v11 = objc_claimAutoreleasedReturnValue();
      v12 = *(_QWORD *)(*(_QWORD *)(a1 + 64) + 8);
      v13 = *(void **)(v12 + 40);
      *(_QWORD *)(v12 + 40) = v11;

    }
  }
  else
  {
    pk_Payment_log();
    v7 = objc_claimAutoreleasedReturnValue();
    v8 = os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT);

    if (v8)
    {
      pk_Payment_log();
      v9 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)v14 = 0;
        _os_log_impl(&dword_213518000, v9, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", v14, 2u);
      }

    }
  }

}

- (void)paymentWebService:(id)a3 didRegisterWithRegionMap:(id)a4
{
  -[NPKPaymentWebServiceCompanionTargetDevice paymentWebService:didRegisterWithRegionMap:primaryRegionTopic:](self, "paymentWebService:didRegisterWithRegionMap:primaryRegionTopic:", a3, a4, 0);
}

- (void)paymentWebService:(id)a3 didRegisterWithRegionMap:(id)a4 primaryRegionTopic:(id)a5
{
  id v8;
  id v9;
  id v10;
  NSObject *v11;
  id v12;
  id v13;
  id v14;
  _QWORD block[4];
  id v16;
  id v17;
  id v18;
  NPKPaymentWebServiceCompanionTargetDevice *v19;

  v8 = a3;
  v9 = a4;
  v10 = a5;
  -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
  v11 = objc_claimAutoreleasedReturnValue();
  block[0] = MEMORY[0x24BDAC760];
  block[1] = 3221225472;
  block[2] = __107__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_didRegisterWithRegionMap_primaryRegionTopic___block_invoke;
  block[3] = &unk_24CFE8D78;
  v16 = v9;
  v17 = v10;
  v18 = v8;
  v19 = self;
  v12 = v8;
  v13 = v10;
  v14 = v9;
  dispatch_sync(v11, block);

}

void __107__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_didRegisterWithRegionMap_primaryRegionTopic___block_invoke(uint64_t a1)
{
  NSObject *v2;
  _BOOL4 v3;
  NSObject *v4;
  void *v5;
  uint64_t v6;
  NPKProtoDeviceDidRegisterRequest *v7;
  void *v8;
  NPKProtoDeviceDidRegisterRequest *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  id v14;
  void *v15;
  void *v16;
  void *v17;
  NSObject *v18;
  _BOOL4 v19;
  NSObject *v20;
  _QWORD v21[4];
  NPKProtoDeviceDidRegisterRequest *v22;
  uint8_t buf[4];
  void *v24;
  __int16 v25;
  uint64_t v26;
  uint64_t v27;

  v27 = *MEMORY[0x24BDAC8D0];
  pk_Payment_log();
  v2 = objc_claimAutoreleasedReturnValue();
  v3 = os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT);

  if (v3)
  {
    pk_Payment_log();
    v4 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      v5 = *(void **)(a1 + 32);
      v6 = *(_QWORD *)(a1 + 40);
      *(_DWORD *)buf = 138412546;
      v24 = v5;
      v25 = 2112;
      v26 = v6;
      _os_log_impl(&dword_213518000, v4, OS_LOG_TYPE_DEFAULT, "Notice: did register with region map %@ (primary topic %@)", buf, 0x16u);
    }

  }
  v7 = objc_alloc_init(NPKProtoDeviceDidRegisterRequest);
  v8 = *(void **)(a1 + 32);
  v21[0] = MEMORY[0x24BDAC760];
  v21[1] = 3221225472;
  v21[2] = __107__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_didRegisterWithRegionMap_primaryRegionTopic___block_invoke_388;
  v21[3] = &unk_24CFEC0B0;
  v9 = v7;
  v22 = v9;
  objc_msgSend(v8, "enumerateKeysAndObjectsUsingBlock:", v21);
  -[NPKProtoDeviceDidRegisterRequest setPrimaryRegionTopic:](v9, "setPrimaryRegionTopic:", *(_QWORD *)(a1 + 40));
  objc_msgSend(*(id *)(a1 + 48), "context");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v10, "regions");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v11, "allKeys");
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  v13 = (void *)objc_msgSend(v12, "mutableCopy");
  -[NPKProtoDeviceDidRegisterRequest setBrokerRegionPushTopics:](v9, "setBrokerRegionPushTopics:", v13);

  v14 = objc_alloc(MEMORY[0x24BE4FE40]);
  -[NPKProtoDeviceDidRegisterRequest data](v9, "data");
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  v16 = (void *)objc_msgSend(v14, "initWithProtobufData:type:isResponse:", v15, 8, 0);

  objc_msgSend(*(id *)(a1 + 56), "_sendProtobuf:responseExpected:", v16, 1);
  v17 = (void *)objc_claimAutoreleasedReturnValue();
  if (v17)
  {
    objc_msgSend(*(id *)(a1 + 56), "_trackOutstandingRequestWithMessageIdentifier:completionHandler:errorHandler:", v17, &__block_literal_global_29, &__block_literal_global_391);
  }
  else
  {
    pk_Payment_log();
    v18 = objc_claimAutoreleasedReturnValue();
    v19 = os_log_type_enabled(v18, OS_LOG_TYPE_ERROR);

    if (v19)
    {
      pk_Payment_log();
      v20 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 138412290;
        v24 = v16;
        _os_log_impl(&dword_213518000, v20, OS_LOG_TYPE_ERROR, "Error: No message identifier for protobuf %@", buf, 0xCu);
      }

    }
  }

}

void __107__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_didRegisterWithRegionMap_primaryRegionTopic___block_invoke_388(uint64_t a1, uint64_t a2, void *a3)
{
  void *v5;
  id v6;

  v5 = *(void **)(a1 + 32);
  v6 = a3;
  objc_msgSend(v5, "addTsmRegionPushTopics:", a2);
  objc_msgSend(*(id *)(a1 + 32), "addTsmRegionURLs:", v6);

}

void __107__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_didRegisterWithRegionMap_primaryRegionTopic___block_invoke_2(uint64_t a1, int a2, void *a3)
{
  id v4;
  NSObject *v5;
  _BOOL4 v6;
  NSObject *v7;
  _DWORD v8[2];
  __int16 v9;
  id v10;
  uint64_t v11;

  v11 = *MEMORY[0x24BDAC8D0];
  v4 = a3;
  pk_Payment_log();
  v5 = objc_claimAutoreleasedReturnValue();
  v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    pk_Payment_log();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      v8[0] = 67109378;
      v8[1] = a2;
      v9 = 2112;
      v10 = v4;
      _os_log_impl(&dword_213518000, v7, OS_LOG_TYPE_DEFAULT, "Notice: completed %d %@", (uint8_t *)v8, 0x12u);
    }

  }
}

void __107__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_didRegisterWithRegionMap_primaryRegionTopic___block_invoke_390(uint64_t a1, void *a2)
{
  id v2;
  NSObject *v3;
  _BOOL4 v4;
  NSObject *v5;
  int v6;
  id v7;
  uint64_t v8;

  v8 = *MEMORY[0x24BDAC8D0];
  v2 = a2;
  pk_Payment_log();
  v3 = objc_claimAutoreleasedReturnValue();
  v4 = os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT);

  if (v4)
  {
    pk_Payment_log();
    v5 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      v6 = 138412290;
      v7 = v2;
      _os_log_impl(&dword_213518000, v5, OS_LOG_TYPE_DEFAULT, "Notice: error %@", (uint8_t *)&v6, 0xCu);
    }

  }
}

- (id)_supportedRegionsForWebService:(id)a3
{
  void *v3;
  void *v4;
  void *v5;

  objc_msgSend(a3, "context");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "configuration");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  NPKSupportedRegionsForWebServiceConfiguration(v4);
  v5 = (void *)objc_claimAutoreleasedReturnValue();

  return v5;
}

- (BOOL)_supportsFeaturesForWebService:(id)a3
{
  void *v3;
  void *v4;
  char v5;

  objc_msgSend(a3, "context");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "configuration");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = NPKSupportsFeaturesForWebServiceConfiguration(v4);

  return v5;
}

- (void)paymentWebServiceDidUpdateConfiguration:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  NSObject *v9;
  NSObject *v10;
  void *v11;
  void *v12;
  uint64_t v13;
  id v14;
  id v15;
  void *v16;
  void *v17;
  void *v18;
  _QWORD v19[2];
  uint8_t buf[4];
  void *v21;
  uint64_t v22;

  v22 = *MEMORY[0x24BDAC8D0];
  v4 = a3;
  -[NPKPaymentWebServiceCompanionTargetDevice _supportedRegionsForWebService:](self, "_supportedRegionsForWebService:", v4);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "context");
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v6, "configuration");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "configuration");
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  pk_Payment_log();
  v9 = objc_claimAutoreleasedReturnValue();
  LODWORD(v7) = os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT);

  if ((_DWORD)v7)
  {
    pk_Payment_log();
    v10 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138412290;
      v21 = v8;
      _os_log_impl(&dword_213518000, v10, OS_LOG_TYPE_DEFAULT, "Notice: Payment web service updated configuration: %@", buf, 0xCu);
    }

  }
  NPKDomainAccessorForDomain(CFSTR("com.apple.nanopassbook"));
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  v12 = v11;
  if (v5)
  {
    objc_msgSend(v11, "setObject:forKey:", v8, CFSTR("Configuration"));
    v13 = *MEMORY[0x24BE6F898];
    objc_msgSend(v12, "setObject:forKey:", v5, *MEMORY[0x24BE6F898]);
  }
  else
  {
    objc_msgSend(v11, "removeObjectForKey:", CFSTR("Configuration"));
    v13 = *MEMORY[0x24BE6F898];
    objc_msgSend(v12, "removeObjectForKey:", *MEMORY[0x24BE6F898]);
  }
  v14 = (id)objc_msgSend(v12, "synchronize");
  v15 = objc_alloc_init(MEMORY[0x24BE6B2C8]);
  v16 = (void *)MEMORY[0x24BDBCF20];
  v19[0] = CFSTR("Configuration");
  v19[1] = v13;
  objc_msgSend(MEMORY[0x24BDBCE30], "arrayWithObjects:count:", v19, 2);
  v17 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v16, "setWithArray:", v17);
  v18 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v15, "synchronizeNanoDomain:keys:", CFSTR("com.apple.nanopassbook"), v18);

}

- (id)paymentWebService:(id)a3 filterVerificationChannels:(id)a4
{
  return a4;
}

- (unint64_t)paymentSupportedInCurrentRegionForWebService:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  unint64_t v7;
  NSObject *v8;
  _BOOL4 v9;
  NSObject *v10;
  const __CFString *v11;
  int v13;
  void *v14;
  __int16 v15;
  const __CFString *v16;
  uint64_t v17;

  v17 = *MEMORY[0x24BDAC8D0];
  v4 = a3;
  -[NPKPaymentWebServiceCompanionTargetDevice deviceRegion](self, "deviceRegion");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  if (v5)
  {
    -[NPKPaymentWebServiceCompanionTargetDevice _supportedRegionsForWebService:](self, "_supportedRegionsForWebService:", v4);
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    if (v6)
      v7 = PKStockholmSetupSupportedInRegion();
    else
      v7 = 0;

  }
  else
  {
    v7 = 0;
  }
  pk_Payment_log();
  v8 = objc_claimAutoreleasedReturnValue();
  v9 = os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT);

  if (v9)
  {
    pk_Payment_log();
    v10 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
    {
      if (v7 > 2)
        v11 = CFSTR("unknown");
      else
        v11 = off_24CFEDDE0[v7];
      v13 = 138412546;
      v14 = v5;
      v15 = 2112;
      v16 = v11;
      _os_log_impl(&dword_213518000, v10, OS_LOG_TYPE_DEFAULT, "Notice: region %@ support %@", (uint8_t *)&v13, 0x16u);
    }

  }
  return v7;
}

- (unint64_t)registrationSupportedInCurrentRegionForWebService:(id)a3
{
  id v4;
  unint64_t v5;

  v4 = a3;
  if (-[NPKPaymentWebServiceCompanionTargetDevice paymentSupportedInCurrentRegionForWebService:](self, "paymentSupportedInCurrentRegionForWebService:", v4) == 1)
  {
    v5 = 1;
  }
  else if (-[NPKPaymentWebServiceCompanionTargetDevice _supportsFeaturesForWebService:](self, "_supportsFeaturesForWebService:", v4))
  {
    v5 = 1;
  }
  else
  {
    v5 = 2;
  }

  return v5;
}

- (id)paymentWebService:(id)a3 supportedRegionFeatureOfType:(int64_t)a4
{
  void *v6;
  void *v7;
  NSObject *v8;
  void *v9;
  void *v10;
  NSObject *v11;
  void *v12;
  int v13;
  id v14;
  NSObject *v15;
  _BOOL4 v16;
  NSObject *v17;
  _BOOL4 v18;
  NSObject *v19;
  _BOOL4 v20;
  NSObject *v21;
  int v23;
  int64_t v24;
  uint64_t v25;

  v25 = *MEMORY[0x24BDAC8D0];
  objc_msgSend(a3, "context");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "configuration");
  v7 = (void *)objc_claimAutoreleasedReturnValue();

  if (v7)
  {
    -[NPKPaymentWebServiceCompanionTargetDevice deviceRegion](self, "deviceRegion");
    v8 = objc_claimAutoreleasedReturnValue();
    -[NPKPaymentWebServiceCompanionTargetDevice deviceClass](self, "deviceClass");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "featureWithType:inRegion:", a4, v8);
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    if (v10)
    {
      -[NPKPaymentWebServiceCompanionTargetDevice deviceVersion](self, "deviceVersion");
      v11 = objc_claimAutoreleasedReturnValue();
      objc_msgSend(v10, "versionRange");
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      v13 = objc_msgSend(v12, "versionMeetsRequirements:deviceClass:", v11, v9);

      if (v13)
      {
        v14 = v10;
LABEL_17:

LABEL_18:
        goto LABEL_19;
      }
      pk_Payment_log();
      v19 = objc_claimAutoreleasedReturnValue();
      v20 = os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT);

      if (v20)
      {
        pk_Payment_log();
        v21 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v21, OS_LOG_TYPE_DEFAULT))
        {
          v23 = 134217984;
          v24 = a4;
          _os_log_impl(&dword_213518000, v21, OS_LOG_TYPE_DEFAULT, "Notice: Unsupported OS version for feature with type %ld", (uint8_t *)&v23, 0xCu);
        }

      }
    }
    else
    {
      pk_Payment_log();
      v17 = objc_claimAutoreleasedReturnValue();
      v18 = os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT);

      if (!v18)
      {
        v14 = 0;
        goto LABEL_18;
      }
      pk_Payment_log();
      v11 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
      {
        v23 = 134217984;
        v24 = a4;
        _os_log_impl(&dword_213518000, v11, OS_LOG_TYPE_DEFAULT, "Notice: No feature of type %ld found", (uint8_t *)&v23, 0xCu);
      }
    }
    v14 = 0;
    goto LABEL_17;
  }
  pk_Payment_log();
  v15 = objc_claimAutoreleasedReturnValue();
  v16 = os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT);

  if (!v16)
  {
    v14 = 0;
    goto LABEL_20;
  }
  pk_Payment_log();
  v8 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
  {
    v23 = 134217984;
    v24 = a4;
    _os_log_impl(&dword_213518000, v8, OS_LOG_TYPE_DEFAULT, "Notice: No feature of type %ld found - device not registered", (uint8_t *)&v23, 0xCu);
  }
  v14 = 0;
LABEL_19:

LABEL_20:
  return v14;
}

- (id)deviceDescriptionForPaymentWebService:(id)a3
{
  void *v3;
  void *v4;

  NPKPairedOrPairingDevice();
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "valueForProperty:", *MEMORY[0x24BE6B398]);
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  return v4;
}

- (id)deviceName
{
  void *v2;
  void *v3;

  NPKPairedOrPairingDevice();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "valueForProperty:", *MEMORY[0x24BE6B380]);
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  return v3;
}

- (id)deviceSerialNumber
{
  void *v2;
  void *v3;

  NPKPairedOrPairingDevice();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "valueForProperty:", *MEMORY[0x24BE6B3D0]);
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  return v3;
}

- (id)deviceClass
{
  void *v2;
  void *v3;

  NPKPairedOrPairingDevice();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  NPKDeviceClassFromDevice(v2);
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  return v3;
}

- (id)osVersion
{
  void *v2;
  void *v3;

  NPKPairedOrPairingDevice();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "valueForProperty:", *MEMORY[0x24BE6B3F0]);
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  return v3;
}

- (id)deviceVersion
{
  void *v2;
  void *v3;

  NPKPairedOrPairingDevice();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  NPKDeviceOSVersionRequirementFromDevice(v2);
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  return v3;
}

- (void)paymentWebService:(id)a3 deleteApplicationWithAID:(id)a4
{
  id v5;
  NSObject *v6;
  _BOOL4 v7;
  NSObject *v8;
  void *v9;
  _QWORD v10[4];
  id v11;
  id v12;
  uint8_t buf[4];
  id v14;
  uint64_t v15;

  v15 = *MEMORY[0x24BDAC8D0];
  v5 = a4;
  pk_Payment_log();
  v6 = objc_claimAutoreleasedReturnValue();
  v7 = os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT);

  if (v7)
  {
    pk_Payment_log();
    v8 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138412290;
      v14 = v5;
      _os_log_impl(&dword_213518000, v8, OS_LOG_TYPE_DEFAULT, "Notice: Delete application with AID %@", buf, 0xCu);
    }

  }
  if (v5)
  {
    v12 = v5;
    objc_msgSend(MEMORY[0x24BDBCE30], "arrayWithObjects:count:", &v12, 1);
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    v10[0] = MEMORY[0x24BDAC760];
    v10[1] = 3221225472;
    v10[2] = __88__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_deleteApplicationWithAID___block_invoke;
    v10[3] = &unk_24CFED210;
    v11 = v5;
    -[NPKPaymentWebServiceCompanionTargetDevice removeAIDsFromSecureElement:withCompletion:](self, "removeAIDsFromSecureElement:withCompletion:", v9, v10);

  }
}

void __88__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_deleteApplicationWithAID___block_invoke(uint64_t a1, int a2, void *a3)
{
  id v5;
  NSObject *v6;
  _BOOL4 v7;
  NSObject *v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  __int16 v12;
  int v13;
  __int16 v14;
  id v15;
  uint64_t v16;

  v16 = *MEMORY[0x24BDAC8D0];
  v5 = a3;
  pk_Payment_log();
  v6 = objc_claimAutoreleasedReturnValue();
  v7 = os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT);

  if (v7)
  {
    pk_Payment_log();
    v8 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      v9 = *(_QWORD *)(a1 + 32);
      v10 = 138412802;
      v11 = v9;
      v12 = 1024;
      v13 = a2;
      v14 = 2112;
      v15 = v5;
      _os_log_impl(&dword_213518000, v8, OS_LOG_TYPE_DEFAULT, "Notice: Delete AID %@ completed %d %@", (uint8_t *)&v10, 0x1Cu);
    }

  }
}

- (void)paymentWebService:(id)a3 addPaymentPass:(id)a4 withCompletionHandler:(id)a5
{
  id v8;
  id v9;
  id v10;
  NSObject *v11;
  _BOOL4 v12;
  NSObject *v13;
  void *v14;
  void *v15;
  double v16;
  void *v17;
  void *v18;
  void *v19;
  id v20;
  id v21;
  id v22;
  _QWORD v23[4];
  id v24;
  id v25;
  id v26;
  uint8_t buf[4];
  void *v28;
  uint64_t v29;

  v29 = *MEMORY[0x24BDAC8D0];
  v8 = a3;
  v9 = a4;
  v10 = a5;
  pk_Payment_log();
  v11 = objc_claimAutoreleasedReturnValue();
  v12 = os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT);

  if (v12)
  {
    pk_Payment_log();
    v13 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend(v9, "uniqueID");
      v14 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138412290;
      v28 = v14;
      _os_log_impl(&dword_213518000, v13, OS_LOG_TYPE_DEFAULT, "Notice: Add payment pass: %@", buf, 0xCu);

    }
  }
  objc_msgSend(v8, "context");
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  -[NPKPaymentWebServiceCompanionTargetDevice archiveContext:](self, "archiveContext:", v15);

  v16 = NPKGizmoScreenScale();
  -[NPKPaymentWebServiceCompanionTargetDevice companionAgentConnection](self, "companionAgentConnection");
  v17 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v17, "setQueueAppropriateFailedActions:", 1);
  objc_msgSend(MEMORY[0x24BE6EA80], "sharedInstance");
  v18 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "dataAccessor");
  v19 = (void *)objc_claimAutoreleasedReturnValue();
  v23[0] = MEMORY[0x24BDAC760];
  v23[1] = 3221225472;
  v23[2] = __100__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_addPaymentPass_withCompletionHandler___block_invoke;
  v23[3] = &unk_24CFE91B0;
  v24 = v17;
  v25 = v9;
  v26 = v10;
  v20 = v10;
  v21 = v9;
  v22 = v17;
  objc_msgSend(v19, "downloadRemoteAssetsWithScreenScale:suffix:cloudStoreCoordinatorDelegate:completion:", CFSTR("~watch"), v18, v23, v16);

}

void __100__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_addPaymentPass_withCompletionHandler___block_invoke(uint64_t a1, int a2, void *a3, float a4)
{
  id v7;
  NSObject *v8;
  _BOOL4 v9;
  NSObject *v10;
  void *v11;
  uint64_t v12;
  void *v13;
  _QWORD v14[4];
  id v15;
  uint8_t buf[4];
  int v17;
  __int16 v18;
  double v19;
  __int16 v20;
  id v21;
  uint64_t v22;

  v22 = *MEMORY[0x24BDAC8D0];
  v7 = a3;
  pk_General_log();
  v8 = objc_claimAutoreleasedReturnValue();
  v9 = os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT);

  if (v9)
  {
    pk_General_log();
    v10 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 67109634;
      v17 = a2;
      v18 = 2048;
      v19 = a4;
      v20 = 2112;
      v21 = v7;
      _os_log_impl(&dword_213518000, v10, OS_LOG_TYPE_DEFAULT, "Notice: finished %d progress %f error %@", buf, 0x1Cu);
    }

  }
  if (a2)
  {
    v11 = *(void **)(a1 + 32);
    v12 = *(_QWORD *)(a1 + 40);
    NPKPairedOrPairingDevice();
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    v14[0] = MEMORY[0x24BDAC760];
    v14[1] = 3221225472;
    v14[2] = __100__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_addPaymentPass_withCompletionHandler___block_invoke_398;
    v14[3] = &unk_24CFE9328;
    v15 = *(id *)(a1 + 48);
    objc_msgSend(v11, "savePaymentPass:forDevice:completion:", v12, v13, v14);

  }
}

void __100__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_addPaymentPass_withCompletionHandler___block_invoke_398(uint64_t a1)
{
  NSObject *v2;
  _QWORD block[4];
  id v4;

  dispatch_get_global_queue(0, 0);
  v2 = objc_claimAutoreleasedReturnValue();
  block[0] = MEMORY[0x24BDAC760];
  block[1] = 3221225472;
  block[2] = __100__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_addPaymentPass_withCompletionHandler___block_invoke_2;
  block[3] = &unk_24CFE7B00;
  v4 = *(id *)(a1 + 32);
  dispatch_async(v2, block);

}

uint64_t __100__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_addPaymentPass_withCompletionHandler___block_invoke_2(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 32);
  if (result)
    return (*(uint64_t (**)(void))(result + 16))();
  return result;
}

- (void)paymentWebService:(id)a3 addSecureElementPass:(id)a4 properties:(id)a5 completion:(id)a6
{
  id v10;
  id v11;
  NSObject *v12;
  _BOOL4 v13;
  NSObject *v14;
  void *v15;
  int v16;
  NSObject *v17;
  _BOOL4 v18;
  NSObject *v19;
  void *v20;
  uint64_t v21;
  id v22;
  id v23;
  void *v24;
  void *v25;
  NSObject *v26;
  NSObject *v27;
  NSObject *v28;
  NSObject *v29;
  id v30;
  id v31;
  _QWORD v32[4];
  id v33;
  NSObject *v34;
  _QWORD v35[4];
  id v36;
  NPKPaymentWebServiceCompanionTargetDevice *v37;
  id v38;
  _BYTE *v39;
  _QWORD block[4];
  id v41;
  id v42;
  NSObject *v43;
  NPKPaymentWebServiceCompanionTargetDevice *v44;
  id v45;
  _BYTE *v46;
  _QWORD v47[4];
  NSObject *v48;
  _QWORD v49[4];
  id v50;
  id v51;
  id v52;
  id location;
  _BYTE buf[24];
  uint64_t (*v55)(uint64_t, uint64_t);
  void (*v56)(uint64_t);
  id v57;
  uint64_t v58;

  v58 = *MEMORY[0x24BDAC8D0];
  v31 = a3;
  v10 = a4;
  v30 = a5;
  v11 = a6;
  pk_Payment_log();
  v12 = objc_claimAutoreleasedReturnValue();
  v13 = os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT);

  if (v13)
  {
    pk_Payment_log();
    v14 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend(v10, "uniqueID");
      v15 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138412546;
      *(_QWORD *)&buf[4] = v15;
      *(_WORD *)&buf[12] = 2112;
      *(_QWORD *)&buf[14] = v30;
      _os_log_impl(&dword_213518000, v14, OS_LOG_TYPE_DEFAULT, "Notice: Add secure element pass pass: %@, with properties: %@", buf, 0x16u);

    }
  }
  if (v10)
  {
    if (-[NPKPaymentWebServiceCompanionTargetDevice supportsSharingInAChain](self, "supportsSharingInAChain"))
      v16 = objc_msgSend(v10, "isCarKeyPass");
    else
      v16 = 0;
    objc_msgSend(v10, "paymentPass");
    v20 = (void *)objc_claimAutoreleasedReturnValue();
    objc_initWeak(&location, self);
    v21 = MEMORY[0x24BDAC760];
    v49[0] = MEMORY[0x24BDAC760];
    v49[1] = 3221225472;
    v49[2] = __106__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_addSecureElementPass_properties_completion___block_invoke;
    v49[3] = &unk_24CFED260;
    objc_copyWeak(&v52, &location);
    v22 = v20;
    v50 = v22;
    v23 = v11;
    v51 = v23;
    v24 = (void *)MEMORY[0x2199B6780](v49);
    v25 = v24;
    if (v16)
    {
      v26 = dispatch_group_create();
      dispatch_group_enter(v26);
      v47[0] = v21;
      v47[1] = 3221225472;
      v47[2] = __106__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_addSecureElementPass_properties_completion___block_invoke_402;
      v47[3] = &unk_24CFE7998;
      v27 = v26;
      v48 = v27;
      -[NPKPaymentWebServiceCompanionTargetDevice paymentWebService:addPaymentPass:withCompletionHandler:](self, "paymentWebService:addPaymentPass:withCompletionHandler:", v31, v22, v47);
      *(_QWORD *)buf = 0;
      *(_QWORD *)&buf[8] = buf;
      *(_QWORD *)&buf[16] = 0x3032000000;
      v55 = __Block_byref_object_copy__23;
      v56 = __Block_byref_object_dispose__23;
      v57 = 0;
      dispatch_group_enter(v27);
      -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
      v28 = objc_claimAutoreleasedReturnValue();
      block[0] = v21;
      block[1] = 3221225472;
      block[2] = __106__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_addSecureElementPass_properties_completion___block_invoke_2;
      block[3] = &unk_24CFED2F0;
      v41 = v10;
      v42 = v30;
      v43 = v27;
      v44 = self;
      v45 = v23;
      v46 = buf;
      v29 = v27;
      dispatch_sync(v28, block);

      v35[0] = v21;
      v35[1] = 3221225472;
      v35[2] = __106__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_addSecureElementPass_properties_completion___block_invoke_412;
      v35[3] = &unk_24CFED340;
      v39 = buf;
      v36 = v22;
      v37 = self;
      v38 = v25;
      dispatch_group_notify(v29, MEMORY[0x24BDAC9B8], v35);

      _Block_object_dispose(buf, 8);
    }
    else
    {
      v32[0] = v21;
      v32[1] = 3221225472;
      v32[2] = __106__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_addSecureElementPass_properties_completion___block_invoke_414;
      v32[3] = &unk_24CFE9188;
      v34 = v24;
      v33 = v22;
      -[NPKPaymentWebServiceCompanionTargetDevice paymentWebService:addPaymentPass:withCompletionHandler:](self, "paymentWebService:addPaymentPass:withCompletionHandler:", v31, v33, v32);

      v29 = v34;
    }

    objc_destroyWeak(&v52);
    objc_destroyWeak(&location);

  }
  else
  {
    pk_Payment_log();
    v17 = objc_claimAutoreleasedReturnValue();
    v18 = os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT);

    if (v18)
    {
      pk_Payment_log();
      v19 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)buf = 0;
        _os_log_impl(&dword_213518000, v19, OS_LOG_TYPE_DEFAULT, "Notice: Unable to find pass to add!", buf, 2u);
      }

    }
    if (v11)
      (*((void (**)(id, _QWORD))v11 + 2))(v11, 0);
  }

}

void __106__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_addSecureElementPass_properties_completion___block_invoke(id *a1)
{
  id WeakRetained;
  void *v3;
  NSObject *v4;
  _BOOL4 v5;
  NSObject *v6;
  void *v7;
  _QWORD v8[4];
  id v9;
  id v10;
  uint8_t buf[4];
  void *v12;
  uint64_t v13;

  v13 = *MEMORY[0x24BDAC8D0];
  WeakRetained = objc_loadWeakRetained(a1 + 6);
  objc_msgSend(a1[4], "uniqueID");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  pk_Payment_log();
  v4 = objc_claimAutoreleasedReturnValue();
  v5 = os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT);

  if (v5)
  {
    pk_Payment_log();
    v6 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138412290;
      v12 = v3;
      _os_log_impl(&dword_213518000, v6, OS_LOG_TYPE_DEFAULT, "Notice: Target Device - Add secure element pass: %@ did finish.", buf, 0xCu);
    }

  }
  objc_msgSend(WeakRetained, "companionAgentConnection");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v8[0] = MEMORY[0x24BDAC760];
  v8[1] = 3221225472;
  v8[2] = __106__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_addSecureElementPass_properties_completion___block_invoke_401;
  v8[3] = &unk_24CFED238;
  v10 = a1[5];
  v9 = a1[4];
  objc_msgSend(v7, "paymentPassWithUniqueID:synchronous:reply:", v3, 0, v8);

}

void __106__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_addSecureElementPass_properties_completion___block_invoke_401(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  _BOOL4 v5;
  NSObject *v6;
  uint64_t v7;
  void (*v8)(void);
  NSObject *v9;
  void *v10;
  uint64_t v11;
  int v12;
  id v13;
  uint64_t v14;

  v14 = *MEMORY[0x24BDAC8D0];
  v3 = a2;
  pk_Payment_log();
  v4 = objc_claimAutoreleasedReturnValue();
  v5 = os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT);

  if (v3)
  {
    if (v5)
    {
      pk_Payment_log();
      v6 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
      {
        v12 = 138412290;
        v13 = v3;
        _os_log_impl(&dword_213518000, v6, OS_LOG_TYPE_DEFAULT, "Notice: Target Device - Replying with updated payment pass: %@", (uint8_t *)&v12, 0xCu);
      }

    }
    v7 = *(_QWORD *)(a1 + 40);
    if (v7)
    {
      v8 = *(void (**)(void))(v7 + 16);
LABEL_14:
      v8();
    }
  }
  else
  {
    if (v5)
    {
      pk_Payment_log();
      v9 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
      {
        v10 = *(void **)(a1 + 32);
        v12 = 138412290;
        v13 = v10;
        _os_log_impl(&dword_213518000, v9, OS_LOG_TYPE_DEFAULT, "Notice: Target Device - Unable to fetch updated payment pass; Replying with original payment pass: %@",
          (uint8_t *)&v12,
          0xCu);
      }

    }
    v11 = *(_QWORD *)(a1 + 40);
    if (v11)
    {
      v8 = *(void (**)(void))(v11 + 16);
      goto LABEL_14;
    }
  }

}

void __106__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_addSecureElementPass_properties_completion___block_invoke_402(uint64_t a1)
{
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
}

void __106__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_addSecureElementPass_properties_completion___block_invoke_2(uint64_t a1)
{
  NSObject *v2;
  _BOOL4 v3;
  NSObject *v4;
  void *v5;
  uint64_t v6;
  NPKProtoAddSecureElementPassWithPropertiesRequest *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  id v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  uint64_t v20;
  void *v21;
  id v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  NSObject *v30;
  NSObject *v31;
  _BOOL4 v32;
  NSObject *v33;
  uint64_t v34;
  NSObject *v35;
  _BOOL4 v36;
  const char *v37;
  NSObject *v38;
  os_log_type_t v39;
  NSObject *v40;
  _BOOL4 v41;
  id v42;
  _QWORD v43[4];
  id v44;
  _QWORD v45[4];
  id v46;
  uint64_t v47;
  _QWORD v48[4];
  NSObject *v49;
  id v50;
  uint64_t v51;
  void *v52;
  void *v53;
  uint8_t buf[4];
  void *v55;
  __int16 v56;
  uint64_t v57;
  uint64_t v58;

  v58 = *MEMORY[0x24BDAC8D0];
  pk_Payment_log();
  v2 = objc_claimAutoreleasedReturnValue();
  v3 = os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT);

  if (v3)
  {
    pk_Payment_log();
    v4 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend(*(id *)(a1 + 32), "uniqueID");
      v5 = (void *)objc_claimAutoreleasedReturnValue();
      v6 = *(_QWORD *)(a1 + 40);
      *(_DWORD *)buf = 138412546;
      v55 = v5;
      v56 = 2112;
      v57 = v6;
      _os_log_impl(&dword_213518000, v4, OS_LOG_TYPE_DEFAULT, "Notice: Target device - Request to add secure element pass: %@, with properties: %@", buf, 0x16u);

    }
  }
  v7 = objc_alloc_init(NPKProtoAddSecureElementPassWithPropertiesRequest);
  objc_msgSend(*(id *)(a1 + 32), "uniqueID");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  -[NPKProtoAddSecureElementPassWithPropertiesRequest setPassUniqueID:](v7, "setPassUniqueID:", v8);

  objc_msgSend(*(id *)(a1 + 32), "flushLoadedImageSets");
  v9 = (void *)objc_msgSend(objc_alloc(MEMORY[0x24BE6EBF8]), "initWithPass:", *(_QWORD *)(a1 + 32));
  v10 = v9;
  if (v9)
  {
    objc_msgSend(v9, "setProperties:", *(_QWORD *)(a1 + 40));
    v53 = v10;
    objc_msgSend(MEMORY[0x24BDBCE30], "arrayWithObjects:count:", &v53, 1);
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v11, "pk_arrayBySafelyApplyingBlock:", &__block_literal_global_407);
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    v13 = (void *)objc_msgSend(v12, "mutableCopy");
    -[NPKProtoAddSecureElementPassWithPropertiesRequest setPayloadDatas:](v7, "setPayloadDatas:", v13);

    v14 = objc_alloc(MEMORY[0x24BE4FE40]);
    -[NPKProtoAddSecureElementPassWithPropertiesRequest data](v7, "data");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    v16 = (void *)objc_msgSend(v14, "initWithProtobufData:type:isResponse:", v15, 154, 0);

    v17 = *(void **)(a1 + 56);
    v51 = *MEMORY[0x24BE4FB30];
    v52 = &unk_24D0566F0;
    objc_msgSend(MEMORY[0x24BDBCE70], "dictionaryWithObjects:forKeys:count:", &v52, &v51, 1);
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v17, "_sendProtobuf:responseExpected:extraOptions:priority:", v16, 1, v18, 200);
    v19 = (void *)objc_claimAutoreleasedReturnValue();

    if (v19)
    {
      if (*(_QWORD *)(a1 + 64))
      {
        v20 = MEMORY[0x24BDAC760];
        v48[0] = MEMORY[0x24BDAC760];
        v48[1] = 3221225472;
        v48[2] = __106__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_addSecureElementPass_properties_completion___block_invoke_408;
        v48[3] = &unk_24CFE8FD0;
        v49 = *(id *)(a1 + 32);
        v50 = *(id *)(a1 + 48);
        v21 = (void *)MEMORY[0x2199B6780](v48);
        v45[0] = v20;
        v45[1] = 3221225472;
        v45[2] = __106__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_addSecureElementPass_properties_completion___block_invoke_409;
        v45[3] = &unk_24CFED2C8;
        v47 = *(_QWORD *)(a1 + 72);
        v22 = v21;
        v46 = v22;
        v23 = (void *)MEMORY[0x2199B6780](v45);
        v43[0] = v20;
        v43[1] = 3221225472;
        v43[2] = __106__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_addSecureElementPass_properties_completion___block_invoke_2_411;
        v43[3] = &unk_24CFE7B80;
        v44 = v22;
        v42 = v22;
        v24 = v16;
        v25 = v12;
        v26 = v11;
        v27 = (void *)MEMORY[0x2199B6780](v43);
        v28 = *(void **)(a1 + 56);
        v29 = (void *)MEMORY[0x2199B6780](v23);
        objc_msgSend(v28, "_trackOutstandingRequestWithMessageIdentifier:completionHandler:errorHandler:", v19, v29, v27);

        v11 = v26;
        v12 = v25;
        v16 = v24;

        v30 = v49;
LABEL_23:

        goto LABEL_24;
      }
      pk_Payment_log();
      v40 = objc_claimAutoreleasedReturnValue();
      v41 = os_log_type_enabled(v40, OS_LOG_TYPE_DEFAULT);

      if (v41)
      {
        pk_Payment_log();
        v30 = objc_claimAutoreleasedReturnValue();
        if (!os_log_type_enabled(v30, OS_LOG_TYPE_DEFAULT))
          goto LABEL_23;
        *(_DWORD *)buf = 138412290;
        v55 = v19;
        v37 = "Warning: No response expected for message with identifier %@";
        v38 = v30;
        v39 = OS_LOG_TYPE_DEFAULT;
        goto LABEL_22;
      }
    }
    else
    {
      pk_Payment_log();
      v35 = objc_claimAutoreleasedReturnValue();
      v36 = os_log_type_enabled(v35, OS_LOG_TYPE_ERROR);

      if (v36)
      {
        pk_Payment_log();
        v30 = objc_claimAutoreleasedReturnValue();
        if (!os_log_type_enabled(v30, OS_LOG_TYPE_ERROR))
          goto LABEL_23;
        *(_DWORD *)buf = 138412290;
        v55 = v16;
        v37 = "Error: No message identifier for protobuf %@";
        v38 = v30;
        v39 = OS_LOG_TYPE_ERROR;
LABEL_22:
        _os_log_impl(&dword_213518000, v38, v39, v37, buf, 0xCu);
        goto LABEL_23;
      }
    }
LABEL_24:

    goto LABEL_25;
  }
  pk_General_log();
  v31 = objc_claimAutoreleasedReturnValue();
  v32 = os_log_type_enabled(v31, OS_LOG_TYPE_ERROR);

  if (v32)
  {
    pk_General_log();
    v33 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v33, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)buf = 0;
      _os_log_impl(&dword_213518000, v33, OS_LOG_TYPE_ERROR, "Error: Target device - unable to add secure element pass - no payload found", buf, 2u);
    }

  }
  v34 = *(_QWORD *)(a1 + 64);
  if (v34)
    (*(void (**)(uint64_t, _QWORD))(v34 + 16))(v34, 0);
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 48));
LABEL_25:

}

id __106__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_addSecureElementPass_properties_completion___block_invoke_405(uint64_t a1, void *a2)
{
  return NPKSecureArchiveObject(a2);
}

void __106__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_addSecureElementPass_properties_completion___block_invoke_408(uint64_t a1)
{
  NSObject *v2;
  _BOOL4 v3;
  NSObject *v4;
  uint64_t v5;
  void *v6;
  int v7;
  uint64_t v8;
  __int16 v9;
  void *v10;
  uint64_t v11;

  v11 = *MEMORY[0x24BDAC8D0];
  pk_Payment_log();
  v2 = objc_claimAutoreleasedReturnValue();
  v3 = os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT);

  if (v3)
  {
    pk_Payment_log();
    v4 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      v5 = *(_QWORD *)(a1 + 32);
      NSStringFromBOOL();
      v6 = (void *)objc_claimAutoreleasedReturnValue();
      v7 = 138412546;
      v8 = v5;
      v9 = 2112;
      v10 = v6;
      _os_log_impl(&dword_213518000, v4, OS_LOG_TYPE_DEFAULT, "Notice: Target Device - Finished handling request to add secure element pass: %@ with success: %@", (uint8_t *)&v7, 0x16u);

    }
  }
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 40));
}

void __106__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_addSecureElementPass_properties_completion___block_invoke_409(uint64_t a1, int a2, id obj)
{
  id v5;

  objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), obj);
  v5 = obj;
  (*(void (**)(void))(*(_QWORD *)(a1 + 32) + 16))();

}

void __106__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_addSecureElementPass_properties_completion___block_invoke_2_411(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  _BOOL4 v5;
  NSObject *v6;
  int v7;
  id v8;
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  v3 = a2;
  pk_Payment_log();
  v4 = objc_claimAutoreleasedReturnValue();
  v5 = os_log_type_enabled(v4, OS_LOG_TYPE_ERROR);

  if (v5)
  {
    pk_Payment_log();
    v6 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      v7 = 138412290;
      v8 = v3;
      _os_log_impl(&dword_213518000, v6, OS_LOG_TYPE_ERROR, "Error: Provisioning service outstanding request error handler invoked: %@", (uint8_t *)&v7, 0xCu);
    }

  }
  (*(void (**)(void))(*(_QWORD *)(a1 + 32) + 16))();

}

void __106__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_addSecureElementPass_properties_completion___block_invoke_412(uint64_t a1)
{
  void *v2;
  NSObject *v3;
  _BOOL4 v4;
  NSObject *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  _QWORD v13[4];
  id v14;
  id v15;
  id v16;
  uint64_t v17;
  uint8_t buf[4];
  uint64_t v19;
  __int16 v20;
  void *v21;
  uint64_t v22;

  v22 = *MEMORY[0x24BDAC8D0];
  if (objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40), "count"))
  {
    objc_msgSend(*(id *)(a1 + 32), "uniqueID");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    pk_General_log();
    v3 = objc_claimAutoreleasedReturnValue();
    v4 = os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT);

    if (v4)
    {
      pk_General_log();
      v5 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
      {
        v6 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40);
        *(_DWORD *)buf = 138412546;
        v19 = v6;
        v20 = 2112;
        v21 = v2;
        _os_log_impl(&dword_213518000, v5, OS_LOG_TYPE_DEFAULT, "Notice: Handling credentials update %@ for unique ID %@", buf, 0x16u);
      }

    }
    objc_msgSend(*(id *)(a1 + 40), "delegate");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v9 = *(void **)(a1 + 48);
    v8 = *(_QWORD *)(a1 + 56);
    v10 = *(_QWORD *)(v8 + 8);
    v13[0] = MEMORY[0x24BDAC760];
    v13[2] = __106__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_addSecureElementPass_properties_completion___block_invoke_413;
    v13[3] = &unk_24CFED318;
    v11 = *(_QWORD *)(v10 + 40);
    v13[1] = 3221225472;
    v17 = v8;
    v14 = v2;
    v16 = v9;
    v15 = *(id *)(a1 + 32);
    v12 = v2;
    objc_msgSend(v7, "handleCredentialsUpdate:forUniqueID:completion:", v11, v12, v13);

  }
  else
  {
    (*(void (**)(_QWORD, BOOL))(*(_QWORD *)(a1 + 48) + 16))(*(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 32) != 0);
  }
}

void __106__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_addSecureElementPass_properties_completion___block_invoke_413(_QWORD *a1, void *a2)
{
  id v3;
  NSObject *v4;
  _BOOL4 v5;
  NSObject *v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  __int16 v11;
  uint64_t v12;
  __int16 v13;
  id v14;
  uint64_t v15;

  v15 = *MEMORY[0x24BDAC8D0];
  v3 = a2;
  pk_General_log();
  v4 = objc_claimAutoreleasedReturnValue();
  v5 = os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT);

  if (v5)
  {
    pk_General_log();
    v6 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      v7 = *(_QWORD *)(*(_QWORD *)(a1[7] + 8) + 40);
      v8 = a1[4];
      v9 = 138412802;
      v10 = v7;
      v11 = 2112;
      v12 = v8;
      v13 = 2112;
      v14 = v3;
      _os_log_impl(&dword_213518000, v6, OS_LOG_TYPE_DEFAULT, "Notice: Did complete credentials update %@ for unique ID %@. Error: %@", (uint8_t *)&v9, 0x20u);
    }

  }
  (*(void (**)(_QWORD, BOOL))(a1[6] + 16))(a1[6], a1[5] != 0);

}

uint64_t __106__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_addSecureElementPass_properties_completion___block_invoke_414(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD, BOOL))(*(_QWORD *)(a1 + 40) + 16))(*(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 32) != 0);
}

- (void)addSecureElementPassWithPropertiesResponse:(id)a3
{
  id v4;
  NSObject *v5;
  _BOOL4 v6;
  NSObject *v7;
  void *v8;
  void *v9;
  void *v10;
  NSObject *v11;
  NSObject *v12;
  _BOOL4 v13;
  NSObject *v14;
  uint64_t v15;
  uint8_t v16[16];
  _QWORD block[5];
  id v18;
  id v19;
  __int128 *p_buf;
  uint64_t *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t (*v26)(uint64_t, uint64_t);
  void (*v27)(uint64_t);
  id v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  char v32;
  __int128 buf;
  uint64_t v34;
  uint64_t (*v35)(uint64_t, uint64_t);
  void (*v36)(uint64_t);
  id v37;
  uint64_t v38;

  v38 = *MEMORY[0x24BDAC8D0];
  v4 = a3;
  pk_Payment_log();
  v5 = objc_claimAutoreleasedReturnValue();
  v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    pk_Payment_log();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend(v4, "npkDescription");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      LODWORD(buf) = 138412290;
      *(_QWORD *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_213518000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Target addSecureElementPassWithPropertiesResponse: incoming protobuf %@", (uint8_t *)&buf, 0xCu);

    }
  }
  objc_msgSend(v4, "context");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "incomingResponseIdentifier");
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  *(_QWORD *)&buf = 0;
  *((_QWORD *)&buf + 1) = &buf;
  v34 = 0x3032000000;
  v35 = __Block_byref_object_copy__342;
  v36 = __Block_byref_object_dispose__343;
  v37 = 0;
  v29 = 0;
  v30 = &v29;
  v31 = 0x2020000000;
  v32 = 0;
  v23 = 0;
  v24 = &v23;
  v25 = 0x3032000000;
  v26 = __Block_byref_object_copy__23;
  v27 = __Block_byref_object_dispose__23;
  v28 = 0;
  if (v10)
  {
    -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
    v11 = objc_claimAutoreleasedReturnValue();
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 3221225472;
    block[2] = __88__NPKPaymentWebServiceCompanionTargetDevice_addSecureElementPassWithPropertiesResponse___block_invoke;
    block[3] = &unk_24CFED060;
    block[4] = self;
    v18 = v10;
    v19 = v4;
    p_buf = &buf;
    v21 = &v29;
    v22 = &v23;
    dispatch_sync(v11, block);

  }
  else
  {
    pk_Payment_log();
    v12 = objc_claimAutoreleasedReturnValue();
    v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      pk_Payment_log();
      v14 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)v16 = 0;
        _os_log_impl(&dword_213518000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v16, 2u);
      }

    }
  }
  v15 = *(_QWORD *)(*((_QWORD *)&buf + 1) + 40);
  if (v15)
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v15 + 16))(v15, *((unsigned __int8 *)v30 + 24), v24[5]);
  _Block_object_dispose(&v23, 8);

  _Block_object_dispose(&v29, 8);
  _Block_object_dispose(&buf, 8);

}

void __88__NPKPaymentWebServiceCompanionTargetDevice_addSecureElementPassWithPropertiesResponse___block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;
  NPKProtoAddSecureElementPassWithPropertiesResponse *v4;
  void *v5;
  NPKProtoAddSecureElementPassWithPropertiesResponse *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  void *v12;
  id v13;
  uint64_t v14;
  void *v15;
  id v16;
  NSObject *v17;
  _BOOL4 v18;
  NSObject *v19;
  uint8_t v20[8];
  _QWORD v21[4];
  id v22;

  objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "objectForKey:", *(_QWORD *)(a1 + 40));
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  if (v3)
  {
    v4 = [NPKProtoAddSecureElementPassWithPropertiesResponse alloc];
    objc_msgSend(*(id *)(a1 + 48), "data");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    v6 = -[NPKProtoAddSecureElementPassWithPropertiesResponse initWithData:](v4, "initWithData:", v5);

    objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "removeObjectForKey:", *(_QWORD *)(a1 + 40));

    objc_msgSend(v3, "completionHandler");
    v8 = objc_claimAutoreleasedReturnValue();
    v9 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
    v10 = *(void **)(v9 + 40);
    *(_QWORD *)(v9 + 40) = v8;

    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 24) = -[NPKProtoAddSecureElementPassWithPropertiesResponse success](v6, "success");
    objc_msgSend(MEMORY[0x24BDBCEF0], "set");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    -[NPKProtoAddSecureElementPassWithPropertiesResponse credentialsBytes](v6, "credentialsBytes");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    v21[0] = MEMORY[0x24BDAC760];
    v21[1] = 3221225472;
    v21[2] = __88__NPKPaymentWebServiceCompanionTargetDevice_addSecureElementPassWithPropertiesResponse___block_invoke_2;
    v21[3] = &unk_24CFED088;
    v13 = v11;
    v22 = v13;
    objc_msgSend(v12, "enumerateObjectsUsingBlock:", v21);

    v14 = *(_QWORD *)(*(_QWORD *)(a1 + 72) + 8);
    v15 = *(void **)(v14 + 40);
    *(_QWORD *)(v14 + 40) = v13;
    v16 = v13;

  }
  else
  {
    pk_Payment_log();
    v17 = objc_claimAutoreleasedReturnValue();
    v18 = os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT);

    if (v18)
    {
      pk_Payment_log();
      v19 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)v20 = 0;
        _os_log_impl(&dword_213518000, v19, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", v20, 2u);
      }

    }
  }

}

void __88__NPKPaymentWebServiceCompanionTargetDevice_addSecureElementPassWithPropertiesResponse___block_invoke_2(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  void *v5;
  id v6;

  v3 = a2;
  v4 = objc_opt_class();
  NPKSecureUnarchiveObject(v3, v4);
  v6 = (id)objc_claimAutoreleasedReturnValue();

  v5 = v6;
  if (v6)
  {
    objc_msgSend(*(id *)(a1 + 32), "addObject:", v6);
    v5 = v6;
  }

}

- (void)paymentWebService:(id)a3 removePass:(id)a4 withCompletionHandler:(id)a5
{
  id v7;
  id v8;
  void *v9;
  void *v10;
  id v11;

  v7 = a5;
  v8 = a4;
  -[NPKPaymentWebServiceCompanionTargetDevice companionAgentConnection](self, "companionAgentConnection");
  v11 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v11, "setQueueAppropriateFailedActions:", 1);
  objc_msgSend(v8, "uniqueID");
  v9 = (void *)objc_claimAutoreleasedReturnValue();

  NPKPairedOrPairingDevice();
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v11, "removePaymentPassWithUniqueID:forDevice:waitForConfirmation:completion:", v9, v10, 0, v7);

}

- (void)downloadAllPaymentPassesForPaymentWebService:(id)a3
{
  id v4;
  void *v5;
  NSObject *v6;
  _BOOL4 v7;
  NSObject *v8;
  id v9;
  _QWORD v10[4];
  id v11;
  uint8_t buf[4];
  id v13;
  uint64_t v14;

  v14 = *MEMORY[0x24BDAC8D0];
  v4 = a3;
  -[NPKPaymentWebServiceCompanionTargetDevice companionAgentConnection](self, "companionAgentConnection");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  pk_Payment_log();
  v6 = objc_claimAutoreleasedReturnValue();
  v7 = os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT);

  if (v7)
  {
    pk_Payment_log();
    v8 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138412290;
      v13 = v4;
      _os_log_impl(&dword_213518000, v8, OS_LOG_TYPE_DEFAULT, "Notice: Redownloading all payment passes as requested by web service %@", buf, 0xCu);
    }

  }
  v10[0] = MEMORY[0x24BDAC760];
  v10[1] = 3221225472;
  v10[2] = __90__NPKPaymentWebServiceCompanionTargetDevice_downloadAllPaymentPassesForPaymentWebService___block_invoke;
  v10[3] = &unk_24CFE7998;
  v11 = v4;
  v9 = v4;
  objc_msgSend(v5, "redownloadAllPaymentPassesWithCompletion:", v10);

}

void __90__NPKPaymentWebServiceCompanionTargetDevice_downloadAllPaymentPassesForPaymentWebService___block_invoke(uint64_t a1)
{
  NSObject *v2;
  _BOOL4 v3;
  NSObject *v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;

  v8 = *MEMORY[0x24BDAC8D0];
  pk_Payment_log();
  v2 = objc_claimAutoreleasedReturnValue();
  v3 = os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT);

  if (v3)
  {
    pk_Payment_log();
    v4 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      v5 = *(_QWORD *)(a1 + 32);
      v6 = 138412290;
      v7 = v5;
      _os_log_impl(&dword_213518000, v4, OS_LOG_TYPE_DEFAULT, "Notice: Redownload of all payment passes complete as requested by web service %@", (uint8_t *)&v6, 0xCu);
    }

  }
}

- (BOOL)claimSecureElementForCurrentUser
{
  return 1;
}

- (unint64_t)secureElementOwnershipStateForCurrentUser
{
  return 3;
}

- (BOOL)secureElementIsAvailable
{
  return 1;
}

- (void)secureElementGetAppletsResponse:(id)a3
{
  id v4;
  NSObject *v5;
  _BOOL4 v6;
  NSObject *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  NSObject *v12;
  NSObject *v13;
  _BOOL4 v14;
  NSObject *v15;
  uint64_t v16;
  uint8_t v17[8];
  _QWORD block[5];
  id v19;
  id v20;
  id v21;
  __int128 *p_buf;
  __int128 buf;
  uint64_t v24;
  uint64_t (*v25)(uint64_t, uint64_t);
  void (*v26)(uint64_t);
  id v27;
  uint64_t v28;

  v28 = *MEMORY[0x24BDAC8D0];
  v4 = a3;
  pk_Payment_log();
  v5 = objc_claimAutoreleasedReturnValue();
  v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    pk_Payment_log();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend(v4, "npkDescription");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      LODWORD(buf) = 138412290;
      *(_QWORD *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_213518000, v7, OS_LOG_TYPE_DEFAULT, "Notice: incoming protobuf %@", (uint8_t *)&buf, 0xCu);

    }
  }
  objc_msgSend(v4, "context");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "incomingResponseIdentifier");
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  *(_QWORD *)&buf = 0;
  *((_QWORD *)&buf + 1) = &buf;
  v24 = 0x3032000000;
  v25 = __Block_byref_object_copy__342;
  v26 = __Block_byref_object_dispose__343;
  v27 = 0;
  objc_msgSend(MEMORY[0x24BDBCEB8], "array");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  if (v10)
  {
    -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
    v12 = objc_claimAutoreleasedReturnValue();
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 3221225472;
    block[2] = __77__NPKPaymentWebServiceCompanionTargetDevice_secureElementGetAppletsResponse___block_invoke;
    block[3] = &unk_24CFED368;
    block[4] = self;
    v19 = v10;
    v20 = v4;
    v21 = v11;
    p_buf = &buf;
    dispatch_sync(v12, block);

  }
  else
  {
    pk_Payment_log();
    v13 = objc_claimAutoreleasedReturnValue();
    v14 = os_log_type_enabled(v13, OS_LOG_TYPE_ERROR);

    if (v14)
    {
      pk_Payment_log();
      v15 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)v17 = 0;
        _os_log_impl(&dword_213518000, v15, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v17, 2u);
      }

    }
  }
  v16 = *(_QWORD *)(*((_QWORD *)&buf + 1) + 40);
  if (v16)
    (*(void (**)(uint64_t, void *, _QWORD))(v16 + 16))(v16, v11, 0);

  _Block_object_dispose(&buf, 8);
}

void __77__NPKPaymentWebServiceCompanionTargetDevice_secureElementGetAppletsResponse___block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;
  NPKProtoSecureElementGetAppletsResponse *v4;
  void *v5;
  NPKProtoSecureElementGetAppletsResponse *v6;
  NSObject *v7;
  _BOOL4 v8;
  NSObject *v9;
  unint64_t v10;
  void *v11;
  void *v12;
  NSObject *v13;
  void *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint8_t v19[16];

  objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "objectForKey:", *(_QWORD *)(a1 + 40));
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  if (v3)
  {
    v4 = [NPKProtoSecureElementGetAppletsResponse alloc];
    objc_msgSend(*(id *)(a1 + 48), "data");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    v6 = -[NPKProtoSecureElementGetAppletsResponse initWithData:](v4, "initWithData:", v5);

    if (-[NPKProtoSecureElementGetAppletsResponse pending](v6, "pending"))
    {
      objc_msgSend(v3, "setOrResetCleanupTimer");
    }
    else
    {
      if (-[NPKProtoSecureElementGetAppletsResponse appletsBytesCount](v6, "appletsBytesCount"))
      {
        v10 = 0;
        do
        {
          -[NPKProtoSecureElementGetAppletsResponse appletsBytes](v6, "appletsBytes");
          v11 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v11, "objectAtIndexedSubscript:", v10);
          v12 = (void *)objc_claimAutoreleasedReturnValue();
          v13 = objc_opt_class();
          NPKSecureUnarchiveObject(v12, v13);
          v14 = (void *)objc_claimAutoreleasedReturnValue();

          if (v14)
            objc_msgSend(*(id *)(a1 + 56), "addObject:", v14);

          ++v10;
        }
        while (v10 < -[NPKProtoSecureElementGetAppletsResponse appletsBytesCount](v6, "appletsBytesCount"));
      }
      objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
      v15 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v15, "removeObjectForKey:", *(_QWORD *)(a1 + 40));

      objc_msgSend(v3, "completionHandler");
      v16 = objc_claimAutoreleasedReturnValue();
      v17 = *(_QWORD *)(*(_QWORD *)(a1 + 64) + 8);
      v18 = *(void **)(v17 + 40);
      *(_QWORD *)(v17 + 40) = v16;

    }
  }
  else
  {
    pk_Payment_log();
    v7 = objc_claimAutoreleasedReturnValue();
    v8 = os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT);

    if (v8)
    {
      pk_Payment_log();
      v9 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)v19 = 0;
        _os_log_impl(&dword_213518000, v9, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", v19, 2u);
      }

    }
  }

}

- (void)secureElementAppletsWithCompletion:(id)a3
{
  id v4;
  NSObject *v5;
  id v6;
  _QWORD block[5];
  id v8;

  v4 = a3;
  -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
  v5 = objc_claimAutoreleasedReturnValue();
  block[0] = MEMORY[0x24BDAC760];
  block[1] = 3221225472;
  block[2] = __80__NPKPaymentWebServiceCompanionTargetDevice_secureElementAppletsWithCompletion___block_invoke;
  block[3] = &unk_24CFE7E90;
  block[4] = self;
  v8 = v4;
  v6 = v4;
  dispatch_sync(v5, block);

}

void __80__NPKPaymentWebServiceCompanionTargetDevice_secureElementAppletsWithCompletion___block_invoke(uint64_t a1)
{
  NPKProtoSecureElementGetAppletsRequest *v2;
  id v3;
  void *v4;
  void *v5;
  void *v6;
  NSObject *v7;
  void *v8;
  void *v9;
  void *v10;
  NSObject *v11;
  _BOOL4 v12;
  NSObject *v13;
  uint64_t v14;
  NSObject *v15;
  _BOOL4 v16;
  _QWORD v17[4];
  id v18;
  uint8_t buf[4];
  void *v20;
  uint64_t v21;

  v21 = *MEMORY[0x24BDAC8D0];
  v2 = objc_alloc_init(NPKProtoSecureElementGetAppletsRequest);
  v3 = objc_alloc(MEMORY[0x24BE4FE40]);
  -[NPKProtoSecureElementGetAppletsRequest data](v2, "data");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = (void *)objc_msgSend(v3, "initWithProtobufData:type:isResponse:", v4, 5, 0);

  objc_msgSend(*(id *)(a1 + 32), "_sendProtobuf:responseExpected:", v5, 1);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  if (v6)
  {
    if (*(_QWORD *)(a1 + 40))
    {
      v7 = MEMORY[0x2199B6780]();
      v17[0] = MEMORY[0x24BDAC760];
      v17[1] = 3221225472;
      v17[2] = __80__NPKPaymentWebServiceCompanionTargetDevice_secureElementAppletsWithCompletion___block_invoke_2;
      v17[3] = &unk_24CFE7B80;
      v18 = *(id *)(a1 + 40);
      v8 = (void *)MEMORY[0x2199B6780](v17);
      v9 = *(void **)(a1 + 32);
      v10 = (void *)MEMORY[0x2199B6780](v7);
      objc_msgSend(v9, "_trackOutstandingRequestWithMessageIdentifier:completionHandler:errorHandler:", v6, v10, v8);

    }
    else
    {
      pk_Payment_log();
      v15 = objc_claimAutoreleasedReturnValue();
      v16 = os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT);

      if (!v16)
        goto LABEL_11;
      pk_Payment_log();
      v7 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 138412290;
        v20 = v6;
        _os_log_impl(&dword_213518000, v7, OS_LOG_TYPE_DEFAULT, "Warning: No response identifier for message with identifier %@", buf, 0xCu);
      }
    }
    goto LABEL_10;
  }
  pk_Payment_log();
  v11 = objc_claimAutoreleasedReturnValue();
  v12 = os_log_type_enabled(v11, OS_LOG_TYPE_ERROR);

  if (v12)
  {
    pk_Payment_log();
    v13 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 138412290;
      v20 = v5;
      _os_log_impl(&dword_213518000, v13, OS_LOG_TYPE_ERROR, "Error: No message identifier for protobuf %@", buf, 0xCu);
    }

  }
  v14 = *(_QWORD *)(a1 + 40);
  if (v14)
  {
    NPKGetIDSCommunicationError();
    v7 = objc_claimAutoreleasedReturnValue();
    (*(void (**)(uint64_t, _QWORD, NSObject *))(v14 + 16))(v14, 0, v7);
LABEL_10:

  }
LABEL_11:

}

uint64_t __80__NPKPaymentWebServiceCompanionTargetDevice_secureElementAppletsWithCompletion___block_invoke_2(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 32);
  if (result)
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(result + 16))(result, 0, a2);
  return result;
}

- (void)secureElementRemoveAppletsResponse:(id)a3
{
  id v4;
  NSObject *v5;
  _BOOL4 v6;
  NSObject *v7;
  void *v8;
  void *v9;
  void *v10;
  NSObject *v11;
  NSObject *v12;
  _BOOL4 v13;
  NSObject *v14;
  uint64_t v15;
  uint8_t v16[8];
  _QWORD block[5];
  id v18;
  id v19;
  uint64_t *v20;
  __int128 *p_buf;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  char v25;
  __int128 buf;
  uint64_t v27;
  uint64_t (*v28)(uint64_t, uint64_t);
  void (*v29)(uint64_t);
  id v30;
  uint64_t v31;

  v31 = *MEMORY[0x24BDAC8D0];
  v4 = a3;
  pk_Payment_log();
  v5 = objc_claimAutoreleasedReturnValue();
  v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    pk_Payment_log();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend(v4, "npkDescription");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      LODWORD(buf) = 138412290;
      *(_QWORD *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_213518000, v7, OS_LOG_TYPE_DEFAULT, "Notice: incoming protobuf %@", (uint8_t *)&buf, 0xCu);

    }
  }
  objc_msgSend(v4, "context");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "incomingResponseIdentifier");
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  *(_QWORD *)&buf = 0;
  *((_QWORD *)&buf + 1) = &buf;
  v27 = 0x3032000000;
  v28 = __Block_byref_object_copy__342;
  v29 = __Block_byref_object_dispose__343;
  v30 = 0;
  v22 = 0;
  v23 = &v22;
  v24 = 0x2020000000;
  v25 = 0;
  if (v10)
  {
    -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
    v11 = objc_claimAutoreleasedReturnValue();
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 3221225472;
    block[2] = __80__NPKPaymentWebServiceCompanionTargetDevice_secureElementRemoveAppletsResponse___block_invoke;
    block[3] = &unk_24CFED0D8;
    block[4] = self;
    v18 = v10;
    v19 = v4;
    v20 = &v22;
    p_buf = &buf;
    dispatch_sync(v11, block);

  }
  else
  {
    pk_Payment_log();
    v12 = objc_claimAutoreleasedReturnValue();
    v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      pk_Payment_log();
      v14 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)v16 = 0;
        _os_log_impl(&dword_213518000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v16, 2u);
      }

    }
  }
  v15 = *(_QWORD *)(*((_QWORD *)&buf + 1) + 40);
  if (v15)
    (*(void (**)(uint64_t, _QWORD, _QWORD))(v15 + 16))(v15, *((unsigned __int8 *)v23 + 24), 0);
  _Block_object_dispose(&v22, 8);
  _Block_object_dispose(&buf, 8);

}

void __80__NPKPaymentWebServiceCompanionTargetDevice_secureElementRemoveAppletsResponse___block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;
  NPKProtoSecureElementRemoveAppletsResponse *v4;
  void *v5;
  NPKProtoSecureElementRemoveAppletsResponse *v6;
  NSObject *v7;
  _BOOL4 v8;
  NSObject *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint8_t v14[16];

  objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "objectForKey:", *(_QWORD *)(a1 + 40));
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  if (v3)
  {
    v4 = [NPKProtoSecureElementRemoveAppletsResponse alloc];
    objc_msgSend(*(id *)(a1 + 48), "data");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    v6 = -[NPKProtoSecureElementRemoveAppletsResponse initWithData:](v4, "initWithData:", v5);

    if (-[NPKProtoSecureElementRemoveAppletsResponse pending](v6, "pending"))
    {
      objc_msgSend(v3, "setOrResetCleanupTimer");
    }
    else
    {
      *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 24) = -[NPKProtoSecureElementRemoveAppletsResponse success](v6, "success");
      objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v10, "removeObjectForKey:", *(_QWORD *)(a1 + 40));

      objc_msgSend(v3, "completionHandler");
      v11 = objc_claimAutoreleasedReturnValue();
      v12 = *(_QWORD *)(*(_QWORD *)(a1 + 64) + 8);
      v13 = *(void **)(v12 + 40);
      *(_QWORD *)(v12 + 40) = v11;

    }
  }
  else
  {
    pk_Payment_log();
    v7 = objc_claimAutoreleasedReturnValue();
    v8 = os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT);

    if (v8)
    {
      pk_Payment_log();
      v9 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)v14 = 0;
        _os_log_impl(&dword_213518000, v9, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", v14, 2u);
      }

    }
  }

}

- (void)removeAIDsFromSecureElement:(id)a3 withCompletion:(id)a4
{
  id v6;
  id v7;
  NSObject *v8;
  id v9;
  id v10;
  _QWORD block[4];
  id v12;
  NPKPaymentWebServiceCompanionTargetDevice *v13;
  id v14;

  v6 = a3;
  v7 = a4;
  -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
  v8 = objc_claimAutoreleasedReturnValue();
  block[0] = MEMORY[0x24BDAC760];
  block[1] = 3221225472;
  block[2] = __88__NPKPaymentWebServiceCompanionTargetDevice_removeAIDsFromSecureElement_withCompletion___block_invoke;
  block[3] = &unk_24CFE84E8;
  v12 = v6;
  v13 = self;
  v14 = v7;
  v9 = v7;
  v10 = v6;
  dispatch_sync(v8, block);

}

void __88__NPKPaymentWebServiceCompanionTargetDevice_removeAIDsFromSecureElement_withCompletion___block_invoke(id *a1)
{
  NPKProtoSecureElementRemoveAppletsRequest *v2;
  void *v3;
  id v4;
  void *v5;
  void *v6;
  void *v7;
  NSObject *v8;
  void *v9;
  id v10;
  void *v11;
  NSObject *v12;
  _BOOL4 v13;
  NSObject *v14;
  void (**v15)(id, _QWORD, NSObject *);
  NSObject *v16;
  _BOOL4 v17;
  _QWORD v18[4];
  id v19;
  uint8_t buf[4];
  void *v21;
  uint64_t v22;

  v22 = *MEMORY[0x24BDAC8D0];
  v2 = objc_alloc_init(NPKProtoSecureElementRemoveAppletsRequest);
  v3 = (void *)objc_msgSend(a1[4], "mutableCopy");
  -[NPKProtoSecureElementRemoveAppletsRequest setCardAIDs:](v2, "setCardAIDs:", v3);

  v4 = objc_alloc(MEMORY[0x24BE4FE40]);
  -[NPKProtoSecureElementRemoveAppletsRequest data](v2, "data");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = (void *)objc_msgSend(v4, "initWithProtobufData:type:isResponse:", v5, 6, 0);

  objc_msgSend(a1[5], "_sendProtobuf:responseExpected:", v6, 1);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  if (v7)
  {
    if (a1[6])
    {
      v8 = MEMORY[0x2199B6780]();
      v18[0] = MEMORY[0x24BDAC760];
      v18[1] = 3221225472;
      v18[2] = __88__NPKPaymentWebServiceCompanionTargetDevice_removeAIDsFromSecureElement_withCompletion___block_invoke_2;
      v18[3] = &unk_24CFE7B80;
      v19 = a1[6];
      v9 = (void *)MEMORY[0x2199B6780](v18);
      v10 = a1[5];
      v11 = (void *)MEMORY[0x2199B6780](v8);
      objc_msgSend(v10, "_trackOutstandingRequestWithMessageIdentifier:completionHandler:errorHandler:", v7, v11, v9);

    }
    else
    {
      pk_Payment_log();
      v16 = objc_claimAutoreleasedReturnValue();
      v17 = os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT);

      if (!v17)
        goto LABEL_11;
      pk_Payment_log();
      v8 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 138412290;
        v21 = v7;
        _os_log_impl(&dword_213518000, v8, OS_LOG_TYPE_DEFAULT, "Warning: No response identifier for message with identifier %@", buf, 0xCu);
      }
    }
    goto LABEL_10;
  }
  pk_Payment_log();
  v12 = objc_claimAutoreleasedReturnValue();
  v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

  if (v13)
  {
    pk_Payment_log();
    v14 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 138412290;
      v21 = v6;
      _os_log_impl(&dword_213518000, v14, OS_LOG_TYPE_ERROR, "Error: No message identifier for protobuf %@", buf, 0xCu);
    }

  }
  v15 = (void (**)(id, _QWORD, NSObject *))a1[6];
  if (v15)
  {
    NPKGetIDSCommunicationError();
    v8 = objc_claimAutoreleasedReturnValue();
    v15[2](v15, 0, v8);
LABEL_10:

  }
LABEL_11:

}

uint64_t __88__NPKPaymentWebServiceCompanionTargetDevice_removeAIDsFromSecureElement_withCompletion___block_invoke_2(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 32);
  if (result)
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(result + 16))(result, 0, a2);
  return result;
}

- (void)dumpLogsResponse:(id)a3
{
  id v4;
  NSObject *v5;
  _BOOL4 v6;
  NSObject *v7;
  void *v8;
  void *v9;
  void *v10;
  NSObject *v11;
  NSObject *v12;
  _BOOL4 v13;
  NSObject *v14;
  uint64_t v15;
  uint8_t v16[8];
  _QWORD block[5];
  id v18;
  __int128 *p_buf;
  __int128 buf;
  uint64_t v21;
  uint64_t (*v22)(uint64_t, uint64_t);
  void (*v23)(uint64_t);
  id v24;
  uint64_t v25;

  v25 = *MEMORY[0x24BDAC8D0];
  v4 = a3;
  pk_Payment_log();
  v5 = objc_claimAutoreleasedReturnValue();
  v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    pk_Payment_log();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend(v4, "npkDescription");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      LODWORD(buf) = 138412290;
      *(_QWORD *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_213518000, v7, OS_LOG_TYPE_DEFAULT, "Notice: incoming protobuf %@", (uint8_t *)&buf, 0xCu);

    }
  }
  objc_msgSend(v4, "context");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "incomingResponseIdentifier");
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  *(_QWORD *)&buf = 0;
  *((_QWORD *)&buf + 1) = &buf;
  v21 = 0x3032000000;
  v22 = __Block_byref_object_copy__342;
  v23 = __Block_byref_object_dispose__343;
  v24 = 0;
  if (v10)
  {
    -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
    v11 = objc_claimAutoreleasedReturnValue();
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 3221225472;
    block[2] = __62__NPKPaymentWebServiceCompanionTargetDevice_dumpLogsResponse___block_invoke;
    block[3] = &unk_24CFEB0F8;
    block[4] = self;
    v18 = v10;
    p_buf = &buf;
    dispatch_sync(v11, block);

  }
  else
  {
    pk_Payment_log();
    v12 = objc_claimAutoreleasedReturnValue();
    v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      pk_Payment_log();
      v14 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)v16 = 0;
        _os_log_impl(&dword_213518000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v16, 2u);
      }

    }
  }
  v15 = *(_QWORD *)(*((_QWORD *)&buf + 1) + 40);
  if (v15)
    (*(void (**)(uint64_t, uint64_t, _QWORD))(v15 + 16))(v15, 1, 0);
  _Block_object_dispose(&buf, 8);

}

void __62__NPKPaymentWebServiceCompanionTargetDevice_dumpLogsResponse___block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  NSObject *v8;
  _BOOL4 v9;
  NSObject *v10;
  uint8_t v11[16];

  objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "objectForKey:", *(_QWORD *)(a1 + 40));
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  if (v3)
  {
    objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "removeObjectForKey:", *(_QWORD *)(a1 + 40));

    objc_msgSend(v3, "completionHandler");
    v5 = objc_claimAutoreleasedReturnValue();
    v6 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
    v7 = *(void **)(v6 + 40);
    *(_QWORD *)(v6 + 40) = v5;

  }
  else
  {
    pk_Payment_log();
    v8 = objc_claimAutoreleasedReturnValue();
    v9 = os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT);

    if (v9)
    {
      pk_Payment_log();
      v10 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)v11 = 0;
        _os_log_impl(&dword_213518000, v10, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", v11, 2u);
      }

    }
  }

}

- (void)dumpLogsWithCompletion:(id)a3
{
  id v4;
  NSObject *v5;
  id v6;
  _QWORD block[5];
  id v8;

  v4 = a3;
  -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
  v5 = objc_claimAutoreleasedReturnValue();
  block[0] = MEMORY[0x24BDAC760];
  block[1] = 3221225472;
  block[2] = __68__NPKPaymentWebServiceCompanionTargetDevice_dumpLogsWithCompletion___block_invoke;
  block[3] = &unk_24CFE7E90;
  block[4] = self;
  v8 = v4;
  v6 = v4;
  dispatch_sync(v5, block);

}

void __68__NPKPaymentWebServiceCompanionTargetDevice_dumpLogsWithCompletion___block_invoke(uint64_t a1)
{
  NPKProtoDumpLogsRequest *v2;
  id v3;
  void *v4;
  void *v5;
  void *v6;
  NSObject *v7;
  void *v8;
  void *v9;
  void *v10;
  NSObject *v11;
  _BOOL4 v12;
  NSObject *v13;
  uint64_t v14;
  NSObject *v15;
  _BOOL4 v16;
  _QWORD v17[4];
  id v18;
  uint8_t buf[4];
  void *v20;
  uint64_t v21;

  v21 = *MEMORY[0x24BDAC8D0];
  v2 = objc_alloc_init(NPKProtoDumpLogsRequest);
  v3 = objc_alloc(MEMORY[0x24BE4FE40]);
  -[NPKProtoDumpLogsRequest data](v2, "data");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = (void *)objc_msgSend(v3, "initWithProtobufData:type:isResponse:", v4, 9, 0);

  objc_msgSend(*(id *)(a1 + 32), "_sendProtobuf:responseExpected:", v5, 1);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  if (v6)
  {
    if (*(_QWORD *)(a1 + 40))
    {
      v7 = MEMORY[0x2199B6780]();
      v17[0] = MEMORY[0x24BDAC760];
      v17[1] = 3221225472;
      v17[2] = __68__NPKPaymentWebServiceCompanionTargetDevice_dumpLogsWithCompletion___block_invoke_2;
      v17[3] = &unk_24CFE7B80;
      v18 = *(id *)(a1 + 40);
      v8 = (void *)MEMORY[0x2199B6780](v17);
      v9 = *(void **)(a1 + 32);
      v10 = (void *)MEMORY[0x2199B6780](v7);
      objc_msgSend(v9, "_trackOutstandingRequestWithMessageIdentifier:completionHandler:errorHandler:", v6, v10, v8);

    }
    else
    {
      pk_Payment_log();
      v15 = objc_claimAutoreleasedReturnValue();
      v16 = os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT);

      if (!v16)
        goto LABEL_11;
      pk_Payment_log();
      v7 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 138412290;
        v20 = v6;
        _os_log_impl(&dword_213518000, v7, OS_LOG_TYPE_DEFAULT, "Warning: No response identifier for message with identifier %@", buf, 0xCu);
      }
    }
    goto LABEL_10;
  }
  pk_Payment_log();
  v11 = objc_claimAutoreleasedReturnValue();
  v12 = os_log_type_enabled(v11, OS_LOG_TYPE_ERROR);

  if (v12)
  {
    pk_Payment_log();
    v13 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 138412290;
      v20 = v5;
      _os_log_impl(&dword_213518000, v13, OS_LOG_TYPE_ERROR, "Error: No message identifier for protobuf %@", buf, 0xCu);
    }

  }
  v14 = *(_QWORD *)(a1 + 40);
  if (v14)
  {
    NPKGetIDSCommunicationError();
    v7 = objc_claimAutoreleasedReturnValue();
    (*(void (**)(uint64_t, _QWORD, NSObject *))(v14 + 16))(v14, 0, v7);
LABEL_10:

  }
LABEL_11:

}

uint64_t __68__NPKPaymentWebServiceCompanionTargetDevice_dumpLogsWithCompletion___block_invoke_2(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 32);
  if (result)
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(result + 16))(result, 0, a2);
  return result;
}

- (void)pendingRemovalResponse:(id)a3
{
  id v4;
  NSObject *v5;
  _BOOL4 v6;
  NSObject *v7;
  void *v8;
  void *v9;
  void *v10;
  NSObject *v11;
  NSObject *v12;
  _BOOL4 v13;
  NSObject *v14;
  uint64_t v15;
  uint8_t v16[8];
  _QWORD block[5];
  id v18;
  id v19;
  __int128 *p_buf;
  uint64_t *v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  char v25;
  __int128 buf;
  uint64_t v27;
  uint64_t (*v28)(uint64_t, uint64_t);
  void (*v29)(uint64_t);
  id v30;
  uint64_t v31;

  v31 = *MEMORY[0x24BDAC8D0];
  v4 = a3;
  pk_Payment_log();
  v5 = objc_claimAutoreleasedReturnValue();
  v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    pk_Payment_log();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend(v4, "npkDescription");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      LODWORD(buf) = 138412290;
      *(_QWORD *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_213518000, v7, OS_LOG_TYPE_DEFAULT, "Notice: incoming protobuf %@", (uint8_t *)&buf, 0xCu);

    }
  }
  objc_msgSend(v4, "context");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "incomingResponseIdentifier");
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  *(_QWORD *)&buf = 0;
  *((_QWORD *)&buf + 1) = &buf;
  v27 = 0x3032000000;
  v28 = __Block_byref_object_copy__342;
  v29 = __Block_byref_object_dispose__343;
  v30 = 0;
  v22 = 0;
  v23 = &v22;
  v24 = 0x2020000000;
  v25 = 0;
  if (v10)
  {
    -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
    v11 = objc_claimAutoreleasedReturnValue();
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 3221225472;
    block[2] = __68__NPKPaymentWebServiceCompanionTargetDevice_pendingRemovalResponse___block_invoke;
    block[3] = &unk_24CFED0D8;
    block[4] = self;
    v18 = v10;
    v19 = v4;
    p_buf = &buf;
    v21 = &v22;
    dispatch_sync(v11, block);

  }
  else
  {
    pk_Payment_log();
    v12 = objc_claimAutoreleasedReturnValue();
    v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      pk_Payment_log();
      v14 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)v16 = 0;
        _os_log_impl(&dword_213518000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v16, 2u);
      }

    }
  }
  v15 = *(_QWORD *)(*((_QWORD *)&buf + 1) + 40);
  if (v15)
    (*(void (**)(uint64_t, _QWORD, _QWORD))(v15 + 16))(v15, *((unsigned __int8 *)v23 + 24), 0);
  _Block_object_dispose(&v22, 8);
  _Block_object_dispose(&buf, 8);

}

void __68__NPKPaymentWebServiceCompanionTargetDevice_pendingRemovalResponse___block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;
  NPKProtoMarkPaymentPassForDeleteResponse *v4;
  void *v5;
  NPKProtoMarkPaymentPassForDeleteResponse *v6;
  NSObject *v7;
  _BOOL4 v8;
  NSObject *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint8_t v14[16];

  objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "objectForKey:", *(_QWORD *)(a1 + 40));
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  if (v3)
  {
    v4 = [NPKProtoMarkPaymentPassForDeleteResponse alloc];
    objc_msgSend(*(id *)(a1 + 48), "data");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    v6 = -[NPKProtoMarkPaymentPassForDeleteResponse initWithData:](v4, "initWithData:", v5);

    if (-[NPKProtoMarkPaymentPassForDeleteResponse pending](v6, "pending"))
    {
      objc_msgSend(v3, "setOrResetCleanupTimer");
    }
    else
    {
      objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v10, "removeObjectForKey:", *(_QWORD *)(a1 + 40));

      objc_msgSend(v3, "completionHandler");
      v11 = objc_claimAutoreleasedReturnValue();
      v12 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
      v13 = *(void **)(v12 + 40);
      *(_QWORD *)(v12 + 40) = v11;

      *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 24) = -[NPKProtoMarkPaymentPassForDeleteResponse success](v6, "success");
    }

  }
  else
  {
    pk_Payment_log();
    v7 = objc_claimAutoreleasedReturnValue();
    v8 = os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT);

    if (v8)
    {
      pk_Payment_log();
      v9 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)v14 = 0;
        _os_log_impl(&dword_213518000, v9, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", v14, 2u);
      }

    }
  }

}

- (void)handlePendingRemovalOfPaymentPass:(id)a3 uniqueID:(id)a4 completion:(id)a5
{
  id v8;
  id v9;
  id v10;
  NSObject *v11;
  _BOOL4 v12;
  NSObject *v13;
  NSObject *v14;
  id v15;
  id v16;
  id v17;
  _QWORD v18[4];
  id v19;
  id v20;
  NPKPaymentWebServiceCompanionTargetDevice *v21;
  id v22;
  uint8_t buf[4];
  id v24;
  __int16 v25;
  id v26;
  uint64_t v27;

  v27 = *MEMORY[0x24BDAC8D0];
  v8 = a3;
  v9 = a4;
  v10 = a5;
  pk_Payment_log();
  v11 = objc_claimAutoreleasedReturnValue();
  v12 = os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT);

  if (v12)
  {
    pk_Payment_log();
    v13 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138412546;
      v24 = v8;
      v25 = 2112;
      v26 = v9;
      _os_log_impl(&dword_213518000, v13, OS_LOG_TYPE_DEFAULT, "Notice: Handle pending removal of pass %@ with unique ID %@", buf, 0x16u);
    }

  }
  -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
  v14 = objc_claimAutoreleasedReturnValue();
  v18[0] = MEMORY[0x24BDAC760];
  v18[1] = 3221225472;
  v18[2] = __99__NPKPaymentWebServiceCompanionTargetDevice_handlePendingRemovalOfPaymentPass_uniqueID_completion___block_invoke;
  v18[3] = &unk_24CFE86A0;
  v19 = v9;
  v20 = v8;
  v21 = self;
  v22 = v10;
  v15 = v10;
  v16 = v8;
  v17 = v9;
  dispatch_sync(v14, v18);

}

void __99__NPKPaymentWebServiceCompanionTargetDevice_handlePendingRemovalOfPaymentPass_uniqueID_completion___block_invoke(uint64_t a1)
{
  NPKProtoMarkPaymentPassForDeleteRequest *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t i;
  void *v8;
  NSObject *v9;
  _BOOL4 v10;
  NSObject *v11;
  id v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  NSObject *v18;
  void *v19;
  void *v20;
  void *v21;
  NSObject *v22;
  _BOOL4 v23;
  const char *v24;
  NSObject *v25;
  os_log_type_t v26;
  NSObject *v27;
  _BOOL4 v28;
  uint64_t v29;
  _QWORD v30[4];
  id v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;
  uint8_t buf[4];
  void *v39;
  _BYTE v40[128];
  uint64_t v41;

  v41 = *MEMORY[0x24BDAC8D0];
  v2 = objc_alloc_init(NPKProtoMarkPaymentPassForDeleteRequest);
  -[NPKProtoMarkPaymentPassForDeleteRequest setPassID:](v2, "setPassID:", *(_QWORD *)(a1 + 32));
  v34 = 0u;
  v35 = 0u;
  v32 = 0u;
  v33 = 0u;
  v29 = a1;
  objc_msgSend(*(id *)(a1 + 40), "devicePaymentApplications");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v32, v40, 16);
  if (v4)
  {
    v5 = v4;
    v6 = *(_QWORD *)v33;
    do
    {
      for (i = 0; i != v5; ++i)
      {
        if (*(_QWORD *)v33 != v6)
          objc_enumerationMutation(v3);
        objc_msgSend(*(id *)(*((_QWORD *)&v32 + 1) + 8 * i), "applicationIdentifier");
        v8 = (void *)objc_claimAutoreleasedReturnValue();
        if (v8)
        {
          -[NPKProtoMarkPaymentPassForDeleteRequest addPaymentApplicationAIDs:](v2, "addPaymentApplicationAIDs:", v8);
          pk_Payment_log();
          v9 = objc_claimAutoreleasedReturnValue();
          v10 = os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT);

          if (v10)
          {
            pk_Payment_log();
            v11 = objc_claimAutoreleasedReturnValue();
            if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
            {
              *(_DWORD *)buf = 138412290;
              v39 = v8;
              _os_log_impl(&dword_213518000, v11, OS_LOG_TYPE_DEFAULT, "Notice: Requesting deletion of AID %@", buf, 0xCu);
            }

          }
        }

      }
      v5 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v32, v40, 16);
    }
    while (v5);
  }

  v12 = objc_alloc(MEMORY[0x24BE4FE40]);
  -[NPKProtoMarkPaymentPassForDeleteRequest data](v2, "data");
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  v14 = (void *)objc_msgSend(v12, "initWithProtobufData:type:isResponse:", v13, 12, 0);

  v15 = *(void **)(v29 + 48);
  v36 = *MEMORY[0x24BE4FA90];
  v37 = MEMORY[0x24BDBD1C8];
  objc_msgSend(MEMORY[0x24BDBCE70], "dictionaryWithObjects:forKeys:count:", &v37, &v36, 1);
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v15, "_sendProtobuf:responseExpected:extraOptions:", v14, 1, v16);
  v17 = (void *)objc_claimAutoreleasedReturnValue();

  if (v17)
  {
    if (*(_QWORD *)(v29 + 56))
    {
      v18 = MEMORY[0x2199B6780]();
      v30[0] = MEMORY[0x24BDAC760];
      v30[1] = 3221225472;
      v30[2] = __99__NPKPaymentWebServiceCompanionTargetDevice_handlePendingRemovalOfPaymentPass_uniqueID_completion___block_invoke_425;
      v30[3] = &unk_24CFE7B80;
      v31 = *(id *)(v29 + 56);
      v19 = (void *)MEMORY[0x2199B6780](v30);
      v20 = *(void **)(v29 + 48);
      v21 = (void *)MEMORY[0x2199B6780](v18);
      objc_msgSend(v20, "_trackOutstandingRequestWithMessageIdentifier:completionHandler:errorHandler:", v17, v21, v19);

LABEL_23:
      goto LABEL_24;
    }
    pk_Payment_log();
    v27 = objc_claimAutoreleasedReturnValue();
    v28 = os_log_type_enabled(v27, OS_LOG_TYPE_DEFAULT);

    if (v28)
    {
      pk_Payment_log();
      v18 = objc_claimAutoreleasedReturnValue();
      if (!os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT))
        goto LABEL_23;
      *(_DWORD *)buf = 138412290;
      v39 = v17;
      v24 = "Warning: No response expected for message with identifier %@";
      v25 = v18;
      v26 = OS_LOG_TYPE_DEFAULT;
      goto LABEL_22;
    }
  }
  else
  {
    pk_Payment_log();
    v22 = objc_claimAutoreleasedReturnValue();
    v23 = os_log_type_enabled(v22, OS_LOG_TYPE_ERROR);

    if (v23)
    {
      pk_Payment_log();
      v18 = objc_claimAutoreleasedReturnValue();
      if (!os_log_type_enabled(v18, OS_LOG_TYPE_ERROR))
        goto LABEL_23;
      *(_DWORD *)buf = 138412290;
      v39 = v14;
      v24 = "Error: No message identifier for protobuf %@";
      v25 = v18;
      v26 = OS_LOG_TYPE_ERROR;
LABEL_22:
      _os_log_impl(&dword_213518000, v25, v26, v24, buf, 0xCu);
      goto LABEL_23;
    }
  }
LABEL_24:

}

uint64_t __99__NPKPaymentWebServiceCompanionTargetDevice_handlePendingRemovalOfPaymentPass_uniqueID_completion___block_invoke_425(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 32);
  if (result)
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(result + 16))(result, 0, a2);
  return result;
}

- (void)preferredAIDRequest:(id)a3
{
  id v4;
  NSObject *v5;
  _BOOL4 v6;
  NSObject *v7;
  void *v8;
  NPKProtoSetPreferredPaymentApplicationRequest *v9;
  void *v10;
  NPKProtoSetPreferredPaymentApplicationRequest *v11;
  void *v12;
  void *v13;
  NSObject *v14;
  _BOOL4 v15;
  NSObject *v16;
  void *v17;
  int v18;
  void *v19;
  __int16 v20;
  void *v21;
  uint64_t v22;

  v22 = *MEMORY[0x24BDAC8D0];
  v4 = a3;
  pk_Payment_log();
  v5 = objc_claimAutoreleasedReturnValue();
  v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    pk_Payment_log();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend(v4, "npkDescription");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      v18 = 138412290;
      v19 = v8;
      _os_log_impl(&dword_213518000, v7, OS_LOG_TYPE_DEFAULT, "Notice: incoming protobuf %@", (uint8_t *)&v18, 0xCu);

    }
  }
  v9 = [NPKProtoSetPreferredPaymentApplicationRequest alloc];
  objc_msgSend(v4, "data");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v11 = -[NPKProtoSetPreferredPaymentApplicationRequest initWithData:](v9, "initWithData:", v10);

  -[NPKProtoSetPreferredPaymentApplicationRequest passID](v11, "passID");
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  -[NPKProtoSetPreferredPaymentApplicationRequest preferredApplicationAID](v11, "preferredApplicationAID");
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  pk_Payment_log();
  v14 = objc_claimAutoreleasedReturnValue();
  v15 = os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT);

  if (v15)
  {
    pk_Payment_log();
    v16 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
    {
      v18 = 138412546;
      v19 = v12;
      v20 = 2112;
      v21 = v13;
      _os_log_impl(&dword_213518000, v16, OS_LOG_TYPE_DEFAULT, "Notice: unique ID %@ AID %@", (uint8_t *)&v18, 0x16u);
    }

  }
  if (v12)
  {
    -[NPKPaymentWebServiceCompanionTargetDevice delegate](self, "delegate");
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v17, "handlePreferredAID:forPassWithUniqueID:", v13, v12);

  }
}

- (void)preferredAIDResponse:(id)a3
{
  id v4;
  NSObject *v5;
  _BOOL4 v6;
  NSObject *v7;
  void *v8;
  void *v9;
  void *v10;
  NSObject *v11;
  NSObject *v12;
  _BOOL4 v13;
  NSObject *v14;
  uint64_t v15;
  uint8_t v16[8];
  _QWORD block[5];
  id v18;
  id v19;
  __int128 *p_buf;
  uint64_t *v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t (*v25)(uint64_t, uint64_t);
  void (*v26)(uint64_t);
  id v27;
  __int128 buf;
  uint64_t v29;
  uint64_t (*v30)(uint64_t, uint64_t);
  void (*v31)(uint64_t);
  id v32;
  uint64_t v33;

  v33 = *MEMORY[0x24BDAC8D0];
  v4 = a3;
  pk_Payment_log();
  v5 = objc_claimAutoreleasedReturnValue();
  v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    pk_Payment_log();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend(v4, "npkDescription");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      LODWORD(buf) = 138412290;
      *(_QWORD *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_213518000, v7, OS_LOG_TYPE_DEFAULT, "Notice: incoming protobuf %@", (uint8_t *)&buf, 0xCu);

    }
  }
  objc_msgSend(v4, "context");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "incomingResponseIdentifier");
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  *(_QWORD *)&buf = 0;
  *((_QWORD *)&buf + 1) = &buf;
  v29 = 0x3032000000;
  v30 = __Block_byref_object_copy__342;
  v31 = __Block_byref_object_dispose__343;
  v32 = 0;
  v22 = 0;
  v23 = &v22;
  v24 = 0x3032000000;
  v25 = __Block_byref_object_copy__23;
  v26 = __Block_byref_object_dispose__23;
  v27 = 0;
  if (v10)
  {
    -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
    v11 = objc_claimAutoreleasedReturnValue();
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 3221225472;
    block[2] = __66__NPKPaymentWebServiceCompanionTargetDevice_preferredAIDResponse___block_invoke;
    block[3] = &unk_24CFED390;
    block[4] = self;
    v18 = v10;
    p_buf = &buf;
    v19 = v4;
    v21 = &v22;
    dispatch_sync(v11, block);

  }
  else
  {
    pk_Payment_log();
    v12 = objc_claimAutoreleasedReturnValue();
    v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      pk_Payment_log();
      v14 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)v16 = 0;
        _os_log_impl(&dword_213518000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v16, 2u);
      }

    }
  }
  v15 = *(_QWORD *)(*((_QWORD *)&buf + 1) + 40);
  if (v15)
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v15, 1, v23[5]);
  _Block_object_dispose(&v22, 8);

  _Block_object_dispose(&buf, 8);
}

void __66__NPKPaymentWebServiceCompanionTargetDevice_preferredAIDResponse___block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  NPKProtoSetPreferredPaymentApplicationResponse *v8;
  void *v9;
  NPKProtoSetPreferredPaymentApplicationResponse *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  NSObject *v14;
  _BOOL4 v15;
  NSObject *v16;
  uint8_t v17[16];

  objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "objectForKey:", *(_QWORD *)(a1 + 40));
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  if (v3)
  {
    objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "removeObjectForKey:", *(_QWORD *)(a1 + 40));

    objc_msgSend(v3, "completionHandler");
    v5 = objc_claimAutoreleasedReturnValue();
    v6 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
    v7 = *(void **)(v6 + 40);
    *(_QWORD *)(v6 + 40) = v5;

    v8 = [NPKProtoSetPreferredPaymentApplicationResponse alloc];
    objc_msgSend(*(id *)(a1 + 48), "data");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    v10 = -[NPKProtoSetPreferredPaymentApplicationResponse initWithData:](v8, "initWithData:", v9);

    -[NPKProtoSetPreferredPaymentApplicationResponse preferredApplicationAID](v10, "preferredApplicationAID");
    v11 = objc_claimAutoreleasedReturnValue();
    v12 = *(_QWORD *)(*(_QWORD *)(a1 + 64) + 8);
    v13 = *(void **)(v12 + 40);
    *(_QWORD *)(v12 + 40) = v11;

  }
  else
  {
    pk_Payment_log();
    v14 = objc_claimAutoreleasedReturnValue();
    v15 = os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT);

    if (v15)
    {
      pk_Payment_log();
      v16 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)v17 = 0;
        _os_log_impl(&dword_213518000, v16, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", v17, 2u);
      }

    }
  }

}

- (void)handlePreferredAID:(id)a3 forPassWithUniqueID:(id)a4 completion:(id)a5
{
  id v8;
  id v9;
  id v10;
  NSObject *v11;
  _BOOL4 v12;
  NSObject *v13;
  NSObject *v14;
  id v15;
  id v16;
  id v17;
  _QWORD v18[4];
  id v19;
  id v20;
  NPKPaymentWebServiceCompanionTargetDevice *v21;
  id v22;
  uint8_t buf[4];
  id v24;
  __int16 v25;
  id v26;
  uint64_t v27;

  v27 = *MEMORY[0x24BDAC8D0];
  v8 = a3;
  v9 = a4;
  v10 = a5;
  pk_Payment_log();
  v11 = objc_claimAutoreleasedReturnValue();
  v12 = os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT);

  if (v12)
  {
    pk_Payment_log();
    v13 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138412546;
      v24 = v8;
      v25 = 2112;
      v26 = v9;
      _os_log_impl(&dword_213518000, v13, OS_LOG_TYPE_DEFAULT, "Notice: Handle preferred AID %@ for unique ID %@", buf, 0x16u);
    }

  }
  -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
  v14 = objc_claimAutoreleasedReturnValue();
  v18[0] = MEMORY[0x24BDAC760];
  v18[1] = 3221225472;
  v18[2] = __95__NPKPaymentWebServiceCompanionTargetDevice_handlePreferredAID_forPassWithUniqueID_completion___block_invoke;
  v18[3] = &unk_24CFE86A0;
  v19 = v9;
  v20 = v8;
  v21 = self;
  v22 = v10;
  v15 = v10;
  v16 = v8;
  v17 = v9;
  dispatch_sync(v14, v18);

}

void __95__NPKPaymentWebServiceCompanionTargetDevice_handlePreferredAID_forPassWithUniqueID_completion___block_invoke(uint64_t a1)
{
  NPKProtoSetPreferredPaymentApplicationRequest *v2;
  id v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  NSObject *v9;
  void *v10;
  void *v11;
  void *v12;
  NSObject *v13;
  _BOOL4 v14;
  const char *v15;
  NSObject *v16;
  os_log_type_t v17;
  NSObject *v18;
  _BOOL4 v19;
  _QWORD v20[4];
  id v21;
  uint8_t buf[4];
  void *v23;
  uint64_t v24;
  _QWORD v25[2];

  v25[1] = *MEMORY[0x24BDAC8D0];
  v2 = objc_alloc_init(NPKProtoSetPreferredPaymentApplicationRequest);
  -[NPKProtoSetPreferredPaymentApplicationRequest setPassID:](v2, "setPassID:", *(_QWORD *)(a1 + 32));
  -[NPKProtoSetPreferredPaymentApplicationRequest setPreferredApplicationAID:](v2, "setPreferredApplicationAID:", *(_QWORD *)(a1 + 40));
  v3 = objc_alloc(MEMORY[0x24BE4FE40]);
  -[NPKProtoSetPreferredPaymentApplicationRequest data](v2, "data");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = (void *)objc_msgSend(v3, "initWithProtobufData:type:isResponse:", v4, 16, 0);

  v6 = *(void **)(a1 + 48);
  v24 = *MEMORY[0x24BE4FA90];
  v25[0] = MEMORY[0x24BDBD1C8];
  objc_msgSend(MEMORY[0x24BDBCE70], "dictionaryWithObjects:forKeys:count:", v25, &v24, 1);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "_sendProtobuf:responseExpected:extraOptions:", v5, 1, v7);
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  if (v8)
  {
    if (*(_QWORD *)(a1 + 56))
    {
      v9 = MEMORY[0x2199B6780]();
      v20[0] = MEMORY[0x24BDAC760];
      v20[1] = 3221225472;
      v20[2] = __95__NPKPaymentWebServiceCompanionTargetDevice_handlePreferredAID_forPassWithUniqueID_completion___block_invoke_2;
      v20[3] = &unk_24CFE7B80;
      v21 = *(id *)(a1 + 56);
      v10 = (void *)MEMORY[0x2199B6780](v20);
      v11 = *(void **)(a1 + 48);
      v12 = (void *)MEMORY[0x2199B6780](v9);
      objc_msgSend(v11, "_trackOutstandingRequestWithMessageIdentifier:completionHandler:errorHandler:", v8, v12, v10);

LABEL_11:
      goto LABEL_12;
    }
    pk_Payment_log();
    v18 = objc_claimAutoreleasedReturnValue();
    v19 = os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT);

    if (v19)
    {
      pk_Payment_log();
      v9 = objc_claimAutoreleasedReturnValue();
      if (!os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
        goto LABEL_11;
      *(_DWORD *)buf = 138412290;
      v23 = v8;
      v15 = "Warning: No response expected for message with identifier %@";
      v16 = v9;
      v17 = OS_LOG_TYPE_DEFAULT;
      goto LABEL_10;
    }
  }
  else
  {
    pk_Payment_log();
    v13 = objc_claimAutoreleasedReturnValue();
    v14 = os_log_type_enabled(v13, OS_LOG_TYPE_ERROR);

    if (v14)
    {
      pk_Payment_log();
      v9 = objc_claimAutoreleasedReturnValue();
      if (!os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
        goto LABEL_11;
      *(_DWORD *)buf = 138412290;
      v23 = v5;
      v15 = "Error: No message identifier for protobuf %@";
      v16 = v9;
      v17 = OS_LOG_TYPE_ERROR;
LABEL_10:
      _os_log_impl(&dword_213518000, v16, v17, v15, buf, 0xCu);
      goto LABEL_11;
    }
  }
LABEL_12:

}

uint64_t __95__NPKPaymentWebServiceCompanionTargetDevice_handlePreferredAID_forPassWithUniqueID_completion___block_invoke_2(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 32);
  if (result)
    return (*(uint64_t (**)(uint64_t, _QWORD, _QWORD))(result + 16))(result, 0, 0);
  return result;
}

- (void)updatePaymentPass:(id)a3
{
  id v4;
  NPKProtoUpdatePaymentPassRequest *v5;
  void *v6;
  NPKProtoUpdatePaymentPassRequest *v7;
  void *v8;
  NSObject *v9;
  _BOOL4 v10;
  NSObject *v11;
  void *v12;
  void *v13;
  int v14;
  void *v15;
  uint64_t v16;

  v16 = *MEMORY[0x24BDAC8D0];
  v4 = a3;
  v5 = [NPKProtoUpdatePaymentPassRequest alloc];
  objc_msgSend(v4, "data");
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  v7 = -[NPKProtoUpdatePaymentPassRequest initWithData:](v5, "initWithData:", v6);
  -[NPKProtoUpdatePaymentPassRequest passTypeIdentifier](v7, "passTypeIdentifier");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  pk_Payment_log();
  v9 = objc_claimAutoreleasedReturnValue();
  v10 = os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT);

  if (v10)
  {
    pk_Payment_log();
    v11 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
    {
      v14 = 138412290;
      v15 = v8;
      _os_log_impl(&dword_213518000, v11, OS_LOG_TYPE_DEFAULT, "Notice: Incoming update payment pass protobuf: %@", (uint8_t *)&v14, 0xCu);
    }

  }
  -[NPKPaymentWebServiceCompanionTargetDevice delegate](self, "delegate");
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  -[NPKProtoUpdatePaymentPassRequest passTypeIdentifier](v7, "passTypeIdentifier");
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v12, "handleUpdatePaymentPassWithTypeIdentifier:", v13);

}

- (void)updatePushToken:(id)a3
{
  id v4;
  NPKProtoUpdatePushTokenRequest *v5;
  void *v6;
  NPKProtoUpdatePushTokenRequest *v7;
  void *v8;
  NSObject *v9;
  _BOOL4 v10;
  NSObject *v11;
  void *v12;
  int v13;
  void *v14;
  uint64_t v15;

  v15 = *MEMORY[0x24BDAC8D0];
  v4 = a3;
  v5 = [NPKProtoUpdatePushTokenRequest alloc];
  objc_msgSend(v4, "data");
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  v7 = -[NPKProtoUpdatePushTokenRequest initWithData:](v5, "initWithData:", v6);
  -[NPKProtoUpdatePushTokenRequest pushToken](v7, "pushToken");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  pk_Payment_log();
  v9 = objc_claimAutoreleasedReturnValue();
  v10 = os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT);

  if (v10)
  {
    pk_Payment_log();
    v11 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
    {
      v13 = 138412290;
      v14 = v8;
      _os_log_impl(&dword_213518000, v11, OS_LOG_TYPE_DEFAULT, "Notice: Incoming update push token protobuf: %@", (uint8_t *)&v13, 0xCu);
    }

  }
  -[NPKPaymentWebServiceCompanionTargetDevice delegate](self, "delegate");
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v12, "handlePushToken:", v8);

}

- (void)preconditionNotMet:(id)a3
{
  id v4;
  NPKProtoPaymentPreconditionsNotMetRequest *v5;
  void *v6;
  NPKProtoPaymentPreconditionsNotMetRequest *v7;
  unsigned int v8;
  void *v9;
  void *v10;
  NSObject *v11;
  _BOOL4 v12;
  NSObject *v13;
  __CFString *v14;
  void *v15;
  _DWORD v16[2];
  __int16 v17;
  void *v18;
  __int16 v19;
  _BOOL4 v20;
  uint64_t v21;

  v21 = *MEMORY[0x24BDAC8D0];
  v4 = a3;
  v5 = [NPKProtoPaymentPreconditionsNotMetRequest alloc];
  objc_msgSend(v4, "data");
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  v7 = -[NPKProtoPaymentPreconditionsNotMetRequest initWithData:](v5, "initWithData:", v6);
  v8 = -[NPKProtoPaymentPreconditionsNotMetRequest failedPrecondition](v7, "failedPrecondition");
  -[NPKProtoPaymentPreconditionsNotMetRequest passIDs](v7, "passIDs");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v10 = (void *)objc_msgSend(v9, "copy");

  pk_Payment_log();
  v11 = objc_claimAutoreleasedReturnValue();
  v12 = os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT);

  if (v12)
  {
    pk_Payment_log();
    v13 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
    {
      v16[0] = 67109634;
      v16[1] = v8;
      v17 = 2112;
      v18 = v10;
      v19 = 1024;
      v20 = v8 != 2;
      _os_log_impl(&dword_213518000, v13, OS_LOG_TYPE_DEFAULT, "Notice: Precondition not met: %d unique IDs %@ should unregister %d", (uint8_t *)v16, 0x18u);
    }

  }
  if (v8 > 2)
    v14 = 0;
  else
    v14 = off_24CFEDDF8[v8];
  -[NPKPaymentWebServiceCompanionTargetDevice delegate](self, "delegate");
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v15, "handlePreconditionNotMetWithUniqueIDs:preconditionDescription:shouldUnregister:", v10, v14, v8 != 2);

}

- (void)handleValueAddedServiceTransactions:(id)a3
{
  id v3;
  NPKProtoHandleValueAddedServiceTransactionsRequest *v4;
  void *v5;
  NPKProtoHandleValueAddedServiceTransactionsRequest *v6;
  void *v7;
  void *v8;
  NSObject *v9;
  _BOOL4 v10;
  NSObject *v11;
  unint64_t v12;
  void *v13;
  void *v14;
  NSObject *v15;
  void *v16;
  void *v17;
  void *v18;
  NSObject *v19;
  _BOOL4 v20;
  NSObject *v21;
  int v22;
  int v23;
  id v24;
  id v25;
  _QWORD v26[4];
  id v27;
  id v28;
  uint8_t buf[4];
  int v30;
  __int16 v31;
  int v32;
  uint64_t v33;

  v33 = *MEMORY[0x24BDAC8D0];
  v3 = a3;
  v4 = [NPKProtoHandleValueAddedServiceTransactionsRequest alloc];
  objc_msgSend(v3, "data");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = -[NPKProtoHandleValueAddedServiceTransactionsRequest initWithData:](v4, "initWithData:", v5);

  objc_msgSend(MEMORY[0x24BDBCEB8], "array");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x24BDBCEB8], "array");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  pk_Payment_log();
  v9 = objc_claimAutoreleasedReturnValue();
  v10 = os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT);

  if (v10)
  {
    pk_Payment_log();
    v11 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 67109120;
      v30 = -[NPKProtoHandleValueAddedServiceTransactionsRequest transactionsBytesCount](v6, "transactionsBytesCount");
      _os_log_impl(&dword_213518000, v11, OS_LOG_TYPE_DEFAULT, "Notice: %u transactions", buf, 8u);
    }

  }
  if (-[NPKProtoHandleValueAddedServiceTransactionsRequest transactionsBytesCount](v6, "transactionsBytesCount"))
  {
    v12 = 0;
    while (v12 < -[NPKProtoHandleValueAddedServiceTransactionsRequest transactionPassIDsCount](v6, "transactionPassIDsCount"))
    {
      -[NPKProtoHandleValueAddedServiceTransactionsRequest transactionsBytes](v6, "transactionsBytes");
      v13 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v13, "objectAtIndexedSubscript:", v12);
      v14 = (void *)objc_claimAutoreleasedReturnValue();
      v15 = objc_opt_class();
      NPKSecureUnarchiveObject(v14, v15);
      v16 = (void *)objc_claimAutoreleasedReturnValue();

      if (v16)
      {
        objc_msgSend(v7, "addObject:", v16);
        -[NPKProtoHandleValueAddedServiceTransactionsRequest transactionPassIDs](v6, "transactionPassIDs");
        v17 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v17, "objectAtIndexedSubscript:", v12);
        v18 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v8, "addObject:", v18);

      }
      if (++v12 >= -[NPKProtoHandleValueAddedServiceTransactionsRequest transactionsBytesCount](v6, "transactionsBytesCount"))goto LABEL_16;
    }
    pk_Payment_log();
    v19 = objc_claimAutoreleasedReturnValue();
    v20 = os_log_type_enabled(v19, OS_LOG_TYPE_ERROR);

    if (v20)
    {
      pk_Payment_log();
      v21 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR))
      {
        v22 = -[NPKProtoHandleValueAddedServiceTransactionsRequest transactionsBytesCount](v6, "transactionsBytesCount");
        v23 = -[NPKProtoHandleValueAddedServiceTransactionsRequest transactionPassIDsCount](v6, "transactionPassIDsCount");
        *(_DWORD *)buf = 67109376;
        v30 = v22;
        v31 = 1024;
        v32 = v23;
        _os_log_impl(&dword_213518000, v21, OS_LOG_TYPE_ERROR, "Error: VAS transaction protobuf does not have matching array lengths (%u %u)!", buf, 0xEu);
      }

    }
  }
LABEL_16:
  if (objc_msgSend(v7, "count"))
  {
    v24 = objc_alloc_init(MEMORY[0x24BE6ED30]);
    v26[0] = MEMORY[0x24BDAC760];
    v26[1] = 3221225472;
    v26[2] = __81__NPKPaymentWebServiceCompanionTargetDevice_handleValueAddedServiceTransactions___block_invoke;
    v26[3] = &unk_24CFE9B08;
    v27 = v8;
    v28 = v24;
    v25 = v24;
    objc_msgSend(v7, "enumerateObjectsUsingBlock:", v26);

  }
}

void __81__NPKPaymentWebServiceCompanionTargetDevice_handleValueAddedServiceTransactions___block_invoke(uint64_t a1, void *a2, uint64_t a3)
{
  void *v5;
  id v6;

  v6 = a2;
  objc_msgSend(*(id *)(a1 + 32), "objectAtIndexedSubscript:", a3);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  if (!objc_msgSend(v5, "length"))
  {

    v5 = 0;
  }
  objc_msgSend(*(id *)(a1 + 40), "insertOrUpdateValueAddedServiceTransaction:forPassUniqueIdentifier:paymentTransaction:completion:", v6, v5, 0, 0);

}

- (void)handlePaymentTransactions:(id)a3
{
  id v3;
  NPKProtoHandlePaymentTransactionsRequest *v4;
  void *v5;
  NPKProtoHandlePaymentTransactionsRequest *v6;
  void *v7;
  void *v8;
  void *v9;
  NSObject *v10;
  NSObject *v11;
  unint64_t v12;
  void *v13;
  void *v14;
  NSObject *v15;
  void *v16;
  void *v17;
  void *v18;
  NSObject *v19;
  _BOOL4 v20;
  NSObject *v21;
  NSObject *v22;
  _BOOL4 v23;
  NSObject *v24;
  int v25;
  int v26;
  unint64_t v27;
  void *v28;
  void *v29;
  void *v30;
  void *v31;
  NSObject *v32;
  void *v33;
  void *v34;
  void *v35;
  NSObject *v36;
  _BOOL4 v37;
  NSObject *v38;
  int v39;
  int v40;
  NSObject *v41;
  _BOOL4 v42;
  NSObject *v43;
  void *v44;
  void *v46;
  void *v47;
  uint8_t buf[4];
  _BYTE v49[10];
  void *v50;
  __int16 v51;
  void *v52;
  uint64_t v53;

  v53 = *MEMORY[0x24BDAC8D0];
  v3 = a3;
  v4 = [NPKProtoHandlePaymentTransactionsRequest alloc];
  v47 = v3;
  objc_msgSend(v3, "data");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = -[NPKProtoHandlePaymentTransactionsRequest initWithData:](v4, "initWithData:", v5);

  objc_msgSend(MEMORY[0x24BDBCEB8], "array");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x24BDBCEB8], "array");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x24BDBCED8], "dictionary");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  pk_Payment_log();
  v10 = objc_claimAutoreleasedReturnValue();
  LODWORD(v5) = os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT);

  if ((_DWORD)v5)
  {
    pk_Payment_log();
    v11 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 67109120;
      *(_DWORD *)v49 = -[NPKProtoHandlePaymentTransactionsRequest transactionsBytesCount](v6, "transactionsBytesCount");
      _os_log_impl(&dword_213518000, v11, OS_LOG_TYPE_DEFAULT, "Notice: %u transactions", buf, 8u);
    }

  }
  if (-[NPKProtoHandlePaymentTransactionsRequest transactionsBytesCount](v6, "transactionsBytesCount", self))
  {
    v12 = 0;
    while (v12 < -[NPKProtoHandlePaymentTransactionsRequest transactionPassIDsCount](v6, "transactionPassIDsCount"))
    {
      -[NPKProtoHandlePaymentTransactionsRequest transactionsBytes](v6, "transactionsBytes");
      v13 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v13, "objectAtIndexedSubscript:", v12);
      v14 = (void *)objc_claimAutoreleasedReturnValue();
      v15 = objc_opt_class();
      NPKSecureUnarchiveObject(v14, v15);
      v16 = (void *)objc_claimAutoreleasedReturnValue();

      if (v16)
      {
        -[NPKProtoHandlePaymentTransactionsRequest transactionPassIDs](v6, "transactionPassIDs");
        v17 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v17, "objectAtIndexedSubscript:", v12);
        v18 = (void *)objc_claimAutoreleasedReturnValue();

        objc_msgSend(v7, "addObject:", v16);
        objc_msgSend(v8, "addObject:", v18);
        pk_Payment_log();
        v19 = objc_claimAutoreleasedReturnValue();
        v20 = os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT);

        if (v20)
        {
          pk_Payment_log();
          v21 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v21, OS_LOG_TYPE_DEFAULT))
          {
            *(_DWORD *)buf = 138412546;
            *(_QWORD *)v49 = v16;
            *(_WORD *)&v49[8] = 2112;
            v50 = v18;
            _os_log_impl(&dword_213518000, v21, OS_LOG_TYPE_DEFAULT, "Notice: Transaction: %@ for unique ID %@", buf, 0x16u);
          }

        }
      }

      if (++v12 >= -[NPKProtoHandlePaymentTransactionsRequest transactionsBytesCount](v6, "transactionsBytesCount"))
        goto LABEL_20;
    }
    pk_Payment_log();
    v22 = objc_claimAutoreleasedReturnValue();
    v23 = os_log_type_enabled(v22, OS_LOG_TYPE_ERROR);

    if (v23)
    {
      pk_Payment_log();
      v24 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v24, OS_LOG_TYPE_ERROR))
      {
        v25 = -[NPKProtoHandlePaymentTransactionsRequest transactionsBytesCount](v6, "transactionsBytesCount");
        v26 = -[NPKProtoHandlePaymentTransactionsRequest transactionPassIDsCount](v6, "transactionPassIDsCount");
        *(_DWORD *)buf = 67109376;
        *(_DWORD *)v49 = v25;
        *(_WORD *)&v49[4] = 1024;
        *(_DWORD *)&v49[6] = v26;
        _os_log_impl(&dword_213518000, v24, OS_LOG_TYPE_ERROR, "Error: Payment transaction protobuf does not have matching array lengths (%u %u)!", buf, 0xEu);
      }

    }
  }
LABEL_20:
  if (-[NPKProtoHandlePaymentTransactionsRequest passAppletStatesCount](v6, "passAppletStatesCount"))
  {
    v27 = 0;
    while (v27 < -[NPKProtoHandlePaymentTransactionsRequest transactionPassIDsCount](v6, "transactionPassIDsCount"))
    {
      -[NPKProtoHandlePaymentTransactionsRequest passAppletStates](v6, "passAppletStates");
      v28 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v28, "objectAtIndexedSubscript:", v27);
      v29 = (void *)objc_claimAutoreleasedReturnValue();

      if (objc_msgSend(v29, "length"))
      {
        -[NPKProtoHandlePaymentTransactionsRequest passAppletStates](v6, "passAppletStates");
        v30 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v30, "objectAtIndexedSubscript:", v27);
        v31 = (void *)objc_claimAutoreleasedReturnValue();
        v32 = objc_opt_class();
        NPKSecureUnarchiveObject(v31, v32);
        v33 = (void *)objc_claimAutoreleasedReturnValue();

        if (v33)
        {
          -[NPKProtoHandlePaymentTransactionsRequest transactionPassIDs](v6, "transactionPassIDs");
          v34 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v34, "objectAtIndexedSubscript:", v27);
          v35 = (void *)objc_claimAutoreleasedReturnValue();

          objc_msgSend(v9, "setObject:forKey:", v33, v35);
        }
      }

      if (++v27 >= -[NPKProtoHandlePaymentTransactionsRequest passAppletStatesCount](v6, "passAppletStatesCount"))
        goto LABEL_32;
    }
    pk_Payment_log();
    v36 = objc_claimAutoreleasedReturnValue();
    v37 = os_log_type_enabled(v36, OS_LOG_TYPE_ERROR);

    if (v37)
    {
      pk_Payment_log();
      v38 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v38, OS_LOG_TYPE_ERROR))
      {
        v39 = -[NPKProtoHandlePaymentTransactionsRequest transactionsBytesCount](v6, "transactionsBytesCount");
        v40 = -[NPKProtoHandlePaymentTransactionsRequest transactionPassIDsCount](v6, "transactionPassIDsCount");
        *(_DWORD *)buf = 67109376;
        *(_DWORD *)v49 = v39;
        *(_WORD *)&v49[4] = 1024;
        *(_DWORD *)&v49[6] = v40;
        _os_log_impl(&dword_213518000, v38, OS_LOG_TYPE_ERROR, "Error: Applet state protobuf does not have matching array lengths (%u %u)!", buf, 0xEu);
      }

    }
  }
LABEL_32:
  if (objc_msgSend(v7, "count") || objc_msgSend(v9, "count"))
  {
    pk_General_log();
    v41 = objc_claimAutoreleasedReturnValue();
    v42 = os_log_type_enabled(v41, OS_LOG_TYPE_DEFAULT);

    if (v42)
    {
      pk_General_log();
      v43 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v43, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 138412802;
        *(_QWORD *)v49 = v7;
        *(_WORD *)&v49[8] = 2112;
        v50 = v9;
        v51 = 2112;
        v52 = v8;
        _os_log_impl(&dword_213518000, v43, OS_LOG_TYPE_DEFAULT, "Notice: Will handle Transactions: %@ appletStates: %@ for uniqueIDs:%@", buf, 0x20u);
      }

    }
    objc_msgSend(v46, "delegate");
    v44 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v44, "handlePaymentTransactions:appletStates:forUniqueIDs:", v7, v9, v8);

  }
}

- (void)handleRemovedTransaction:(id)a3
{
  id v4;
  NPKProtoHandleRemoveTransactionsRequest *v5;
  void *v6;
  NPKProtoHandleRemoveTransactionsRequest *v7;
  void *v8;
  NSObject *v9;
  _BOOL4 v10;
  NSObject *v11;
  void *v12;
  int v13;
  void *v14;
  uint64_t v15;

  v15 = *MEMORY[0x24BDAC8D0];
  v4 = a3;
  v5 = [NPKProtoHandleRemoveTransactionsRequest alloc];
  objc_msgSend(v4, "data");
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  v7 = -[NPKProtoHandleRemoveTransactionsRequest initWithData:](v5, "initWithData:", v6);
  -[NPKProtoHandleRemoveTransactionsRequest identifiers](v7, "identifiers");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  pk_General_log();
  v9 = objc_claimAutoreleasedReturnValue();
  v10 = os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT);

  if (v10)
  {
    pk_General_log();
    v11 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
    {
      v13 = 138412290;
      v14 = v8;
      _os_log_impl(&dword_213518000, v11, OS_LOG_TYPE_DEFAULT, "Notice: Request to remove transactions with identfiers: %@", (uint8_t *)&v13, 0xCu);
    }

  }
  -[NPKPaymentWebServiceCompanionTargetDevice delegate](self, "delegate");
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v12, "handleRemoveTransactionsWithIdentifiers:", v8);

}

- (void)retrieveTransactionsForPassWithUniqueID:(id)a3
{
  id v4;
  NSObject *v5;
  _BOOL4 v6;
  NSObject *v7;
  NPKProtoRetrievePaymentTransactionsRequest *v8;
  id v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  id v16;
  id v17;
  _QWORD v18[4];
  id v19;
  _QWORD v20[2];
  _QWORD v21[2];
  uint8_t buf[4];
  id v23;
  uint64_t v24;

  v24 = *MEMORY[0x24BDAC8D0];
  v4 = a3;
  pk_Payment_log();
  v5 = objc_claimAutoreleasedReturnValue();
  v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    pk_Payment_log();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138412290;
      v23 = v4;
      _os_log_impl(&dword_213518000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Retrieving transactions for unique ID %@", buf, 0xCu);
    }

  }
  v8 = objc_alloc_init(NPKProtoRetrievePaymentTransactionsRequest);
  -[NPKProtoRetrievePaymentTransactionsRequest setPassID:](v8, "setPassID:", v4);
  v9 = objc_alloc(MEMORY[0x24BE4FE40]);
  -[NPKProtoRetrievePaymentTransactionsRequest data](v8, "data");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v11 = (void *)objc_msgSend(v9, "initWithProtobufData:type:isResponse:", v10, 20, 0);

  v20[0] = *MEMORY[0x24BE4FB30];
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", *MEMORY[0x24BE4FD70]);
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  v21[0] = v12;
  v20[1] = *MEMORY[0x24BE4FB18];
  objc_msgSend(MEMORY[0x24BDD17C8], "stringWithFormat:", CFSTR("retrieveTransactions-%@"), v4);
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  v21[1] = v13;
  objc_msgSend(MEMORY[0x24BDBCE70], "dictionaryWithObjects:forKeys:count:", v21, v20, 2);
  v14 = (void *)objc_claimAutoreleasedReturnValue();

  -[NPKPaymentWebServiceCompanionTargetDevice provisioningService](self, "provisioningService");
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  v18[0] = MEMORY[0x24BDAC760];
  v18[1] = 3221225472;
  v18[2] = __85__NPKPaymentWebServiceCompanionTargetDevice_retrieveTransactionsForPassWithUniqueID___block_invoke;
  v18[3] = &unk_24CFE79C0;
  v19 = v11;
  v16 = v11;
  v17 = NPKProtoSendWithOptions(v15, v16, 200, 0, 0, v18, v14);

}

void __85__NPKPaymentWebServiceCompanionTargetDevice_retrieveTransactionsForPassWithUniqueID___block_invoke(uint64_t a1)
{
  NSObject *v2;
  _BOOL4 v3;
  NSObject *v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;

  v8 = *MEMORY[0x24BDAC8D0];
  pk_General_log();
  v2 = objc_claimAutoreleasedReturnValue();
  v3 = os_log_type_enabled(v2, OS_LOG_TYPE_ERROR);

  if (v3)
  {
    pk_General_log();
    v4 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    {
      v5 = *(_QWORD *)(a1 + 32);
      v6 = 138412290;
      v7 = v5;
      _os_log_impl(&dword_213518000, v4, OS_LOG_TYPE_ERROR, "Error: IDS failed to send protobuf %@", (uint8_t *)&v6, 0xCu);
    }

  }
}

- (void)handleDeletePaymentTransactionWithIdentifier:(id)a3 passUniqueIdentifier:(id)a4
{
  id v6;
  id v7;
  NSObject *v8;
  id v9;
  id v10;
  _QWORD block[4];
  id v12;
  id v13;
  NPKPaymentWebServiceCompanionTargetDevice *v14;

  v6 = a3;
  v7 = a4;
  -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
  v8 = objc_claimAutoreleasedReturnValue();
  block[0] = MEMORY[0x24BDAC760];
  block[1] = 3221225472;
  block[2] = __111__NPKPaymentWebServiceCompanionTargetDevice_handleDeletePaymentTransactionWithIdentifier_passUniqueIdentifier___block_invoke;
  block[3] = &unk_24CFE8288;
  v12 = v6;
  v13 = v7;
  v14 = self;
  v9 = v7;
  v10 = v6;
  dispatch_async(v8, block);

}

void __111__NPKPaymentWebServiceCompanionTargetDevice_handleDeletePaymentTransactionWithIdentifier_passUniqueIdentifier___block_invoke(_QWORD *a1)
{
  void *v2;
  void *v3;
  void *v4;
  id v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  NSObject *v11;
  _BOOL4 v12;
  NSObject *v13;
  uint8_t buf[4];
  void *v15;
  uint64_t v16;
  _QWORD v17[2];

  v17[1] = *MEMORY[0x24BDAC8D0];
  v2 = (void *)objc_opt_new();
  objc_msgSend(MEMORY[0x24BDBCEB8], "arrayWithObjects:", a1[4], 0);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "setIdentifiers:", v3);

  if (a1[5])
  {
    objc_msgSend(MEMORY[0x24BDBCEB8], "arrayWithObjects:", 0);
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "setPassIDs:", v4);

  }
  v5 = objc_alloc(MEMORY[0x24BE4FE40]);
  objc_msgSend(v2, "data");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = (void *)objc_msgSend(v5, "initWithProtobufData:type:isResponse:", v6, 26, 0);

  v8 = (void *)a1[6];
  v16 = *MEMORY[0x24BE4FB30];
  v17[0] = &unk_24D056650;
  objc_msgSend(MEMORY[0x24BDBCE70], "dictionaryWithObjects:forKeys:count:", v17, &v16, 1);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "_sendProtobuf:responseExpected:extraOptions:", v7, 0, v9);
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  if (!v10)
  {
    pk_Payment_log();
    v11 = objc_claimAutoreleasedReturnValue();
    v12 = os_log_type_enabled(v11, OS_LOG_TYPE_ERROR);

    if (v12)
    {
      pk_Payment_log();
      v13 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 138412290;
        v15 = v7;
        _os_log_impl(&dword_213518000, v13, OS_LOG_TYPE_ERROR, "Error: No message identifier for protobuf %@", buf, 0xCu);
      }

    }
  }

}

- (void)handleUpdatedAppletState:(id)a3
{
  id v4;
  NPKProtoHandleAppletStateChangeRequest *v5;
  void *v6;
  NPKProtoHandleAppletStateChangeRequest *v7;
  void *v8;
  NSObject *v9;
  _BOOL4 v10;
  NSObject *v11;
  void *v12;
  NSObject *v13;
  void *v14;
  NSObject *v15;
  _BOOL4 v16;
  NSObject *v17;
  void *v18;
  int v19;
  void *v20;
  uint64_t v21;

  v21 = *MEMORY[0x24BDAC8D0];
  v4 = a3;
  v5 = [NPKProtoHandleAppletStateChangeRequest alloc];
  objc_msgSend(v4, "data");
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  v7 = -[NPKProtoHandleAppletStateChangeRequest initWithData:](v5, "initWithData:", v6);
  -[NPKProtoHandleAppletStateChangeRequest passID](v7, "passID");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  pk_Payment_log();
  v9 = objc_claimAutoreleasedReturnValue();
  v10 = os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT);

  if (v10)
  {
    pk_Payment_log();
    v11 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
    {
      v19 = 138412290;
      v20 = v8;
      _os_log_impl(&dword_213518000, v11, OS_LOG_TYPE_DEFAULT, "Notice: Received updated applet state for pass with unique ID %@", (uint8_t *)&v19, 0xCu);
    }

  }
  -[NPKProtoHandleAppletStateChangeRequest passAppletState](v7, "passAppletState");
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  if (objc_msgSend(v12, "length"))
  {
    v13 = objc_opt_class();
    NPKSecureUnarchiveObject(v12, v13);
    v14 = (void *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    v14 = 0;
  }
  pk_Payment_log();
  v15 = objc_claimAutoreleasedReturnValue();
  v16 = os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT);

  if (v16)
  {
    pk_Payment_log();
    v17 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
    {
      v19 = 138412290;
      v20 = v14;
      _os_log_impl(&dword_213518000, v17, OS_LOG_TYPE_DEFAULT, "Notice: Decoded applet state: %@", (uint8_t *)&v19, 0xCu);
    }

  }
  if (v8)
  {
    -[NPKPaymentWebServiceCompanionTargetDevice delegate](self, "delegate");
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v18, "handleAppletState:forUniqueID:", v14, v8);

  }
}

- (void)setExpressPassResponse:(id)a3
{
  id v4;
  NSObject *v5;
  _BOOL4 v6;
  NSObject *v7;
  void *v8;
  void *v9;
  void *v10;
  NSObject *v11;
  NSObject *v12;
  _BOOL4 v13;
  NSObject *v14;
  uint64_t v15;
  uint8_t v16[8];
  _QWORD block[5];
  id v18;
  id v19;
  uint64_t *v20;
  uint64_t *v21;
  __int128 *p_buf;
  uint64_t *v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t (*v31)(uint64_t, uint64_t);
  void (*v32)(uint64_t);
  id v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t (*v37)(uint64_t, uint64_t);
  void (*v38)(uint64_t);
  id v39;
  __int128 buf;
  uint64_t v41;
  uint64_t (*v42)(uint64_t, uint64_t);
  void (*v43)(uint64_t);
  id v44;
  uint64_t v45;

  v45 = *MEMORY[0x24BDAC8D0];
  v4 = a3;
  pk_Payment_log();
  v5 = objc_claimAutoreleasedReturnValue();
  v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    pk_Payment_log();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend(v4, "npkDescription");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      LODWORD(buf) = 138412290;
      *(_QWORD *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_213518000, v7, OS_LOG_TYPE_DEFAULT, "Notice: incoming protobuf %@", (uint8_t *)&buf, 0xCu);

    }
  }
  objc_msgSend(v4, "context");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "incomingResponseIdentifier");
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  *(_QWORD *)&buf = 0;
  *((_QWORD *)&buf + 1) = &buf;
  v41 = 0x3032000000;
  v42 = __Block_byref_object_copy__23;
  v43 = __Block_byref_object_dispose__23;
  v44 = 0;
  v34 = 0;
  v35 = &v34;
  v36 = 0x3032000000;
  v37 = __Block_byref_object_copy__342;
  v38 = __Block_byref_object_dispose__343;
  v39 = 0;
  v28 = 0;
  v29 = &v28;
  v30 = 0x3032000000;
  v31 = __Block_byref_object_copy__23;
  v32 = __Block_byref_object_dispose__23;
  v33 = 0;
  v24 = 0;
  v25 = &v24;
  v26 = 0x2020000000;
  v27 = 0;
  if (v10)
  {
    -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
    v11 = objc_claimAutoreleasedReturnValue();
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 3221225472;
    block[2] = __68__NPKPaymentWebServiceCompanionTargetDevice_setExpressPassResponse___block_invoke;
    block[3] = &unk_24CFECFC0;
    block[4] = self;
    v18 = v10;
    v19 = v4;
    v20 = &v34;
    v21 = &v28;
    p_buf = &buf;
    v23 = &v24;
    dispatch_sync(v11, block);

  }
  else
  {
    pk_Payment_log();
    v12 = objc_claimAutoreleasedReturnValue();
    v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      pk_Payment_log();
      v14 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)v16 = 0;
        _os_log_impl(&dword_213518000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v16, 2u);
      }

    }
  }
  v15 = v35[5];
  if (v15)
    (*(void (**)(uint64_t, uint64_t, uint64_t, _QWORD))(v15 + 16))(v15, v25[3], v29[5], *(_QWORD *)(*((_QWORD *)&buf + 1) + 40));
  _Block_object_dispose(&v24, 8);
  _Block_object_dispose(&v28, 8);

  _Block_object_dispose(&v34, 8);
  _Block_object_dispose(&buf, 8);

}

void __68__NPKPaymentWebServiceCompanionTargetDevice_setExpressPassResponse___block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;
  NPKProtoSetExpressPassResponse *v4;
  void *v5;
  NPKProtoSetExpressPassResponse *v6;
  NSObject *v7;
  _BOOL4 v8;
  NSObject *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  void *v17;
  NSObject *v18;
  void *v19;
  void *v20;
  const char *v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  void *v26;
  const char *v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  _BOOL4 v33;
  __int16 v34[8];

  objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "objectForKey:", *(_QWORD *)(a1 + 40));
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  if (v3)
  {
    v4 = [NPKProtoSetExpressPassResponse alloc];
    objc_msgSend(*(id *)(a1 + 48), "data");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    v6 = -[NPKProtoSetExpressPassResponse initWithData:](v4, "initWithData:", v5);

    if (-[NPKProtoSetExpressPassResponse pending](v6, "pending"))
    {
      objc_msgSend(v3, "setOrResetCleanupTimer");
    }
    else
    {
      objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v10, "removeObjectForKey:", *(_QWORD *)(a1 + 40));

      objc_msgSend(v3, "completionHandler");
      v11 = objc_claimAutoreleasedReturnValue();
      v12 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
      v13 = *(void **)(v12 + 40);
      *(_QWORD *)(v12 + 40) = v11;

    }
    -[NPKProtoSetExpressPassResponse actualUniqueID](v6, "actualUniqueID");
    v14 = objc_claimAutoreleasedReturnValue();
    v15 = *(_QWORD *)(*(_QWORD *)(a1 + 64) + 8);
    v16 = *(void **)(v15 + 40);
    *(_QWORD *)(v15 + 40) = v14;

    -[NPKProtoSetExpressPassResponse actualExpressPassInformation](v6, "actualExpressPassInformation");
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    v18 = objc_opt_class();
    NPKSecureUnarchiveObject(v17, v18);
    v19 = (void *)objc_claimAutoreleasedReturnValue();

    if (v19)
    {
      objc_msgSend(MEMORY[0x24BDBCF20], "setWithObject:", v19);
      v20 = (void *)objc_claimAutoreleasedReturnValue();
      NPKExpressConfigurationFromInformation(v20, v21);
      v22 = objc_claimAutoreleasedReturnValue();
    }
    else
    {
      v25 = -[NPKProtoSetExpressPassResponse currentExpressPassesInformationsCount](v6, "currentExpressPassesInformationsCount");
      v26 = *(void **)(a1 + 32);
      if (v25)
      {
        -[NPKProtoSetExpressPassResponse currentExpressPassesInformations](v6, "currentExpressPassesInformations");
        v20 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v26, "_expressPassesInformationFromDataArray:", v20);
        v24 = (void *)objc_claimAutoreleasedReturnValue();
        NPKExpressConfigurationFromInformation(v24, v27);
        v28 = objc_claimAutoreleasedReturnValue();
        v29 = *(_QWORD *)(*(_QWORD *)(a1 + 72) + 8);
        v30 = *(void **)(v29 + 40);
        *(_QWORD *)(v29 + 40) = v28;

LABEL_14:
        if (-[NPKProtoSetExpressPassResponse success](v6, "success"))
        {
          v31 = *(_QWORD *)(*(_QWORD *)(a1 + 80) + 8);
          v32 = 1;
        }
        else if (-[NPKProtoSetExpressPassResponse cancelled](v6, "cancelled"))
        {
          v31 = *(_QWORD *)(*(_QWORD *)(a1 + 80) + 8);
          v32 = 2;
        }
        else
        {
          v33 = -[NPKProtoSetExpressPassResponse needsUnlock](v6, "needsUnlock");
          v31 = *(_QWORD *)(*(_QWORD *)(a1 + 80) + 8);
          if (!v33)
          {
            *(_QWORD *)(v31 + 24) = 0;
            goto LABEL_21;
          }
          v32 = 3;
        }
        *(_QWORD *)(v31 + 24) = v32;
LABEL_21:

        goto LABEL_22;
      }
      -[NPKProtoSetExpressPassResponse expressPassConfigurations](v6, "expressPassConfigurations");
      v20 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v26, "_expressPassesConfigurationFromDataArray:", v20);
      v22 = objc_claimAutoreleasedReturnValue();
    }
    v23 = *(_QWORD *)(*(_QWORD *)(a1 + 72) + 8);
    v24 = *(void **)(v23 + 40);
    *(_QWORD *)(v23 + 40) = v22;
    goto LABEL_14;
  }
  pk_Payment_log();
  v7 = objc_claimAutoreleasedReturnValue();
  v8 = os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT);

  if (v8)
  {
    pk_Payment_log();
    v9 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      v34[0] = 0;
      _os_log_impl(&dword_213518000, v9, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", (uint8_t *)v34, 2u);
    }

  }
LABEL_22:

}

- (void)setExpressWithPassConfiguration:(id)a3 requestAuthorization:(BOOL)a4 completion:(id)a5
{
  _BOOL4 v6;
  id v8;
  id v9;
  void *v10;
  NSObject *v11;
  _BOOL4 v12;
  NSObject *v13;
  void *v14;
  void *v15;
  void *v16;
  NSObject *v17;
  id v18;
  id v19;
  id v20;
  _QWORD block[4];
  id v22;
  id v23;
  NPKPaymentWebServiceCompanionTargetDevice *v24;
  id v25;
  BOOL v26;
  uint8_t buf[4];
  id v28;
  __int16 v29;
  void *v30;
  __int16 v31;
  void *v32;
  __int16 v33;
  void *v34;
  __int16 v35;
  _BOOL4 v36;
  uint64_t v37;

  v6 = a4;
  v37 = *MEMORY[0x24BDAC8D0];
  v8 = a3;
  v9 = a5;
  objc_msgSend(v8, "passInformation");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  pk_Payment_log();
  v11 = objc_claimAutoreleasedReturnValue();
  v12 = os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT);

  if (v12)
  {
    pk_Payment_log();
    v13 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend(v10, "expressMode");
      v14 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v10, "passUniqueIdentifier");
      v15 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v10, "paymentApplicationIdentifier");
      v16 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138413314;
      v28 = v8;
      v29 = 2112;
      v30 = v14;
      v31 = 2112;
      v32 = v15;
      v33 = 2112;
      v34 = v16;
      v35 = 1024;
      v36 = v6;
      _os_log_impl(&dword_213518000, v13, OS_LOG_TYPE_DEFAULT, "Notice: Target device: set express with configuration %@\n mode: %@\n unique ID %@\n, AID %@\n, request authorization %d", buf, 0x30u);

    }
  }
  -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
  v17 = objc_claimAutoreleasedReturnValue();
  block[0] = MEMORY[0x24BDAC760];
  block[1] = 3221225472;
  block[2] = __109__NPKPaymentWebServiceCompanionTargetDevice_setExpressWithPassConfiguration_requestAuthorization_completion___block_invoke;
  block[3] = &unk_24CFED3E0;
  v26 = v6;
  v22 = v10;
  v23 = v8;
  v24 = self;
  v25 = v9;
  v18 = v9;
  v19 = v8;
  v20 = v10;
  dispatch_sync(v17, block);

}

void __109__NPKPaymentWebServiceCompanionTargetDevice_setExpressWithPassConfiguration_requestAuthorization_completion___block_invoke(uint64_t a1)
{
  NPKProtoSetExpressPassRequest *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  id v10;
  void *v11;
  void *v12;
  void *v13;
  uint64_t v14;
  void *v15;
  void *v16;
  uint64_t v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  NSObject *v22;
  NSObject *v23;
  _BOOL4 v24;
  const char *v25;
  NSObject *v26;
  os_log_type_t v27;
  NSObject *v28;
  _BOOL4 v29;
  _QWORD v30[4];
  id v31;
  _QWORD v32[4];
  NSObject *v33;
  id v34;
  uint8_t buf[4];
  void *v36;
  _QWORD v37[2];
  _QWORD v38[3];

  v38[2] = *MEMORY[0x24BDAC8D0];
  v2 = objc_alloc_init(NPKProtoSetExpressPassRequest);
  objc_msgSend(*(id *)(a1 + 32), "passUniqueIdentifier");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  -[NPKProtoSetExpressPassRequest setUniqueID:](v2, "setUniqueID:", v3);

  objc_msgSend(*(id *)(a1 + 32), "paymentApplicationIdentifier");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  -[NPKProtoSetExpressPassRequest setApplicationIdentifier:](v2, "setApplicationIdentifier:", v4);

  -[NPKProtoSetExpressPassRequest setRequestAuthorization:](v2, "setRequestAuthorization:", *(unsigned __int8 *)(a1 + 64));
  NPKSecureArchiveObject(*(void **)(a1 + 32));
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  -[NPKProtoSetExpressPassRequest setExpressPassInformation:](v2, "setExpressPassInformation:", v5);

  NPKSecureArchiveObject(*(void **)(a1 + 40));
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  -[NPKProtoSetExpressPassRequest setExpressPassConfiguration:](v2, "setExpressPassConfiguration:", v6);

  v7 = (void *)MEMORY[0x24BDD17C8];
  objc_msgSend(*(id *)(a1 + 32), "expressMode");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "stringWithFormat:", CFSTR("SetExpressPassIdentifier-%@"), v8);
  v9 = (void *)objc_claimAutoreleasedReturnValue();

  v10 = objc_alloc(MEMORY[0x24BE4FE40]);
  -[NPKProtoSetExpressPassRequest data](v2, "data");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  v12 = (void *)objc_msgSend(v10, "initWithProtobufData:type:isResponse:", v11, 22, 0);

  v13 = *(void **)(a1 + 48);
  v14 = *MEMORY[0x24BE4FB18];
  v37[0] = *MEMORY[0x24BE4FA90];
  v37[1] = v14;
  v38[0] = MEMORY[0x24BDBD1C8];
  v38[1] = v9;
  objc_msgSend(MEMORY[0x24BDBCE70], "dictionaryWithObjects:forKeys:count:", v38, v37, 2);
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v13, "_sendProtobuf:responseExpected:extraOptions:", v12, 1, v15);
  v16 = (void *)objc_claimAutoreleasedReturnValue();

  if (v16)
  {
    if (*(_QWORD *)(a1 + 56))
    {
      v17 = MEMORY[0x24BDAC760];
      v32[0] = MEMORY[0x24BDAC760];
      v32[1] = 3221225472;
      v32[2] = __109__NPKPaymentWebServiceCompanionTargetDevice_setExpressWithPassConfiguration_requestAuthorization_completion___block_invoke_2;
      v32[3] = &unk_24CFED3B8;
      v33 = *(id *)(a1 + 32);
      v34 = *(id *)(a1 + 56);
      v18 = (void *)MEMORY[0x2199B6780](v32);
      v30[0] = v17;
      v30[1] = 3221225472;
      v30[2] = __109__NPKPaymentWebServiceCompanionTargetDevice_setExpressWithPassConfiguration_requestAuthorization_completion___block_invoke_3;
      v30[3] = &unk_24CFE7B80;
      v31 = *(id *)(a1 + 56);
      v19 = (void *)MEMORY[0x2199B6780](v30);
      v20 = *(void **)(a1 + 48);
      v21 = (void *)MEMORY[0x2199B6780](v18);
      objc_msgSend(v20, "_trackOutstandingRequestWithMessageIdentifier:completionHandler:errorHandler:", v16, v21, v19);

      v22 = v33;
LABEL_11:

      goto LABEL_12;
    }
    pk_Payment_log();
    v28 = objc_claimAutoreleasedReturnValue();
    v29 = os_log_type_enabled(v28, OS_LOG_TYPE_DEFAULT);

    if (v29)
    {
      pk_Payment_log();
      v22 = objc_claimAutoreleasedReturnValue();
      if (!os_log_type_enabled(v22, OS_LOG_TYPE_DEFAULT))
        goto LABEL_11;
      *(_DWORD *)buf = 138412290;
      v36 = v16;
      v25 = "Warning: No response expected for message with identifier %@";
      v26 = v22;
      v27 = OS_LOG_TYPE_DEFAULT;
      goto LABEL_10;
    }
  }
  else
  {
    pk_Payment_log();
    v23 = objc_claimAutoreleasedReturnValue();
    v24 = os_log_type_enabled(v23, OS_LOG_TYPE_ERROR);

    if (v24)
    {
      pk_Payment_log();
      v22 = objc_claimAutoreleasedReturnValue();
      if (!os_log_type_enabled(v22, OS_LOG_TYPE_ERROR))
        goto LABEL_11;
      *(_DWORD *)buf = 138412290;
      v36 = v12;
      v25 = "Error: No message identifier for protobuf %@";
      v26 = v22;
      v27 = OS_LOG_TYPE_ERROR;
LABEL_10:
      _os_log_impl(&dword_213518000, v26, v27, v25, buf, 0xCu);
      goto LABEL_11;
    }
  }
LABEL_12:

}

void __109__NPKPaymentWebServiceCompanionTargetDevice_setExpressWithPassConfiguration_requestAuthorization_completion___block_invoke_2(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  id v6;
  objc_class *v7;
  id v8;
  id v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  const char *v14;
  id v15;
  id v16;

  v6 = a4;
  if (!v6)
  {
    v7 = (objc_class *)MEMORY[0x24BE6EAF0];
    v8 = a3;
    v9 = [v7 alloc];
    objc_msgSend(*(id *)(a1 + 32), "expressMode");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(*(id *)(a1 + 32), "paymentApplicationIdentifier");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    v12 = (void *)objc_msgSend(v9, "initForExpressMode:withPassUniqueIdentifier:paymentApplicationIdentifier:", v10, v8, v11);

    if (v12)
    {
      objc_msgSend(MEMORY[0x24BDBCF20], "setWithObject:", v12);
      v13 = (void *)objc_claimAutoreleasedReturnValue();
      NPKExpressConfigurationFromInformation(v13, v14);
      v15 = (id)objc_claimAutoreleasedReturnValue();

    }
    else
    {
      v15 = 0;
    }

    v6 = v15;
  }
  v16 = v6;
  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();

}

uint64_t __109__NPKPaymentWebServiceCompanionTargetDevice_setExpressWithPassConfiguration_requestAuthorization_completion___block_invoke_3(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 32);
  if (result)
    return (*(uint64_t (**)(uint64_t, _QWORD, _QWORD))(result + 16))(result, 0, 0);
  return result;
}

- (void)removeExpressPassWithUniqueIdentifierResponse:(id)a3
{
  id v4;
  NSObject *v5;
  _BOOL4 v6;
  NSObject *v7;
  void *v8;
  void *v9;
  void *v10;
  NSObject *v11;
  NSObject *v12;
  _BOOL4 v13;
  NSObject *v14;
  uint64_t v15;
  uint8_t v16[16];
  _QWORD block[5];
  id v18;
  id v19;
  __int128 *p_buf;
  uint64_t *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t (*v30)(uint64_t, uint64_t);
  void (*v31)(uint64_t);
  id v32;
  __int128 buf;
  uint64_t v34;
  uint64_t (*v35)(uint64_t, uint64_t);
  void (*v36)(uint64_t);
  id v37;
  uint64_t v38;

  v38 = *MEMORY[0x24BDAC8D0];
  v4 = a3;
  pk_Payment_log();
  v5 = objc_claimAutoreleasedReturnValue();
  v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    pk_Payment_log();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend(v4, "npkDescription");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      LODWORD(buf) = 138412290;
      *(_QWORD *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_213518000, v7, OS_LOG_TYPE_DEFAULT, "Notice: remove express pass with unique identifier: incoming protobuf %@", (uint8_t *)&buf, 0xCu);

    }
  }
  objc_msgSend(v4, "context");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "incomingResponseIdentifier");
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  *(_QWORD *)&buf = 0;
  *((_QWORD *)&buf + 1) = &buf;
  v34 = 0x3032000000;
  v35 = __Block_byref_object_copy__342;
  v36 = __Block_byref_object_dispose__343;
  v37 = 0;
  v27 = 0;
  v28 = &v27;
  v29 = 0x3032000000;
  v30 = __Block_byref_object_copy__23;
  v31 = __Block_byref_object_dispose__23;
  v32 = 0;
  v23 = 0;
  v24 = &v23;
  v25 = 0x2020000000;
  v26 = 0;
  if (v10)
  {
    -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
    v11 = objc_claimAutoreleasedReturnValue();
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 3221225472;
    block[2] = __91__NPKPaymentWebServiceCompanionTargetDevice_removeExpressPassWithUniqueIdentifierResponse___block_invoke;
    block[3] = &unk_24CFED060;
    block[4] = self;
    v18 = v10;
    v19 = v4;
    p_buf = &buf;
    v21 = &v27;
    v22 = &v23;
    dispatch_sync(v11, block);

  }
  else
  {
    pk_Payment_log();
    v12 = objc_claimAutoreleasedReturnValue();
    v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      pk_Payment_log();
      v14 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)v16 = 0;
        _os_log_impl(&dword_213518000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v16, 2u);
      }

    }
  }
  v15 = *(_QWORD *)(*((_QWORD *)&buf + 1) + 40);
  if (v15)
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v15 + 16))(v15, *((unsigned __int8 *)v24 + 24), v28[5]);
  _Block_object_dispose(&v23, 8);
  _Block_object_dispose(&v27, 8);

  _Block_object_dispose(&buf, 8);
}

void __91__NPKPaymentWebServiceCompanionTargetDevice_removeExpressPassWithUniqueIdentifierResponse___block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;
  NPKProtoRemoveExpressPassWithUniqueIdentifierResponse *v4;
  void *v5;
  NPKProtoRemoveExpressPassWithUniqueIdentifierResponse *v6;
  NSObject *v7;
  _BOOL4 v8;
  NSObject *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  NSObject *v15;
  void *v16;
  void *v17;
  const char *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  void *v23;
  const char *v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint8_t v28[16];

  objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "objectForKey:", *(_QWORD *)(a1 + 40));
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  if (v3)
  {
    v4 = [NPKProtoRemoveExpressPassWithUniqueIdentifierResponse alloc];
    objc_msgSend(*(id *)(a1 + 48), "data");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    v6 = -[NPKProtoRemoveExpressPassWithUniqueIdentifierResponse initWithData:](v4, "initWithData:", v5);

    if (-[NPKProtoRemoveExpressPassWithUniqueIdentifierResponse pending](v6, "pending"))
    {
      objc_msgSend(v3, "setOrResetCleanupTimer");
    }
    else
    {
      objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v10, "removeObjectForKey:", *(_QWORD *)(a1 + 40));

      objc_msgSend(v3, "completionHandler");
      v11 = objc_claimAutoreleasedReturnValue();
      v12 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
      v13 = *(void **)(v12 + 40);
      *(_QWORD *)(v12 + 40) = v11;

    }
    -[NPKProtoRemoveExpressPassWithUniqueIdentifierResponse actualExpressPassInformation](v6, "actualExpressPassInformation");
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    v15 = objc_opt_class();
    NPKSecureUnarchiveObject(v14, v15);
    v16 = (void *)objc_claimAutoreleasedReturnValue();

    if (v16)
    {
      objc_msgSend(MEMORY[0x24BDBCF20], "setWithObject:", v16);
      v17 = (void *)objc_claimAutoreleasedReturnValue();
      NPKExpressConfigurationFromInformation(v17, v18);
      v19 = objc_claimAutoreleasedReturnValue();
    }
    else
    {
      v22 = -[NPKProtoRemoveExpressPassWithUniqueIdentifierResponse currentExpressPassesInformationsCount](v6, "currentExpressPassesInformationsCount");
      v23 = *(void **)(a1 + 32);
      if (v22)
      {
        -[NPKProtoRemoveExpressPassWithUniqueIdentifierResponse currentExpressPassesInformations](v6, "currentExpressPassesInformations");
        v17 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v23, "_expressPassesInformationFromDataArray:", v17);
        v21 = (void *)objc_claimAutoreleasedReturnValue();
        NPKExpressConfigurationFromInformation(v21, v24);
        v25 = objc_claimAutoreleasedReturnValue();
        v26 = *(_QWORD *)(*(_QWORD *)(a1 + 64) + 8);
        v27 = *(void **)(v26 + 40);
        *(_QWORD *)(v26 + 40) = v25;

        goto LABEL_14;
      }
      -[NPKProtoRemoveExpressPassWithUniqueIdentifierResponse expressPassConfigurations](v6, "expressPassConfigurations");
      v17 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v23, "_expressPassesConfigurationFromDataArray:", v17);
      v19 = objc_claimAutoreleasedReturnValue();
    }
    v20 = *(_QWORD *)(*(_QWORD *)(a1 + 64) + 8);
    v21 = *(void **)(v20 + 40);
    *(_QWORD *)(v20 + 40) = v19;
LABEL_14:

    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 72) + 8) + 24) = -[NPKProtoRemoveExpressPassWithUniqueIdentifierResponse success](v6, "success");
    goto LABEL_15;
  }
  pk_Payment_log();
  v7 = objc_claimAutoreleasedReturnValue();
  v8 = os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT);

  if (v8)
  {
    pk_Payment_log();
    v9 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)v28 = 0;
      _os_log_impl(&dword_213518000, v9, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", v28, 2u);
    }

  }
LABEL_15:

}

- (void)removeExpressPassWithUniqueIdentifier:(id)a3 completion:(id)a4
{
  id v6;
  id v7;
  NSObject *v8;
  _BOOL4 v9;
  NSObject *v10;
  NSObject *v11;
  id v12;
  id v13;
  _QWORD block[4];
  id v15;
  NPKPaymentWebServiceCompanionTargetDevice *v16;
  id v17;
  uint8_t buf[4];
  id v19;
  uint64_t v20;

  v20 = *MEMORY[0x24BDAC8D0];
  v6 = a3;
  v7 = a4;
  pk_Payment_log();
  v8 = objc_claimAutoreleasedReturnValue();
  v9 = os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT);

  if (v9)
  {
    pk_Payment_log();
    v10 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138412290;
      v19 = v6;
      _os_log_impl(&dword_213518000, v10, OS_LOG_TYPE_DEFAULT, "Notice: Target device: remove express pass with unique ID: %@", buf, 0xCu);
    }

  }
  -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
  v11 = objc_claimAutoreleasedReturnValue();
  block[0] = MEMORY[0x24BDAC760];
  block[1] = 3221225472;
  block[2] = __94__NPKPaymentWebServiceCompanionTargetDevice_removeExpressPassWithUniqueIdentifier_completion___block_invoke;
  block[3] = &unk_24CFE84E8;
  v15 = v6;
  v16 = self;
  v17 = v7;
  v12 = v7;
  v13 = v6;
  dispatch_sync(v11, block);

}

void __94__NPKPaymentWebServiceCompanionTargetDevice_removeExpressPassWithUniqueIdentifier_completion___block_invoke(uint64_t a1)
{
  NPKProtoRemoveExpressPassWithUniqueIdentifierRequest *v2;
  void *v3;
  id v4;
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  void *v9;
  void *v10;
  NSObject *v11;
  void *v12;
  void *v13;
  void *v14;
  NSObject *v15;
  _BOOL4 v16;
  const char *v17;
  NSObject *v18;
  os_log_type_t v19;
  NSObject *v20;
  _BOOL4 v21;
  _QWORD v22[4];
  id v23;
  uint8_t buf[4];
  void *v25;
  _QWORD v26[2];
  _QWORD v27[3];

  v27[2] = *MEMORY[0x24BDAC8D0];
  v2 = objc_alloc_init(NPKProtoRemoveExpressPassWithUniqueIdentifierRequest);
  -[NPKProtoRemoveExpressPassWithUniqueIdentifierRequest setUniqueID:](v2, "setUniqueID:", *(_QWORD *)(a1 + 32));
  objc_msgSend(MEMORY[0x24BDD17C8], "stringWithFormat:", CFSTR("RemoveExpressPass-%@"), *(_QWORD *)(a1 + 32));
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_alloc(MEMORY[0x24BE4FE40]);
  -[NPKProtoRemoveExpressPassWithUniqueIdentifierRequest data](v2, "data");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = (void *)objc_msgSend(v4, "initWithProtobufData:type:isResponse:", v5, 46, 0);

  v7 = *(void **)(a1 + 40);
  v8 = *MEMORY[0x24BE4FB18];
  v26[0] = *MEMORY[0x24BE4FA90];
  v26[1] = v8;
  v27[0] = MEMORY[0x24BDBD1C8];
  v27[1] = v3;
  objc_msgSend(MEMORY[0x24BDBCE70], "dictionaryWithObjects:forKeys:count:", v27, v26, 2);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "_sendProtobuf:responseExpected:extraOptions:", v6, 1, v9);
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  if (v10)
  {
    if (*(_QWORD *)(a1 + 48))
    {
      v11 = MEMORY[0x2199B6780]();
      v22[0] = MEMORY[0x24BDAC760];
      v22[1] = 3221225472;
      v22[2] = __94__NPKPaymentWebServiceCompanionTargetDevice_removeExpressPassWithUniqueIdentifier_completion___block_invoke_2;
      v22[3] = &unk_24CFE7B80;
      v23 = *(id *)(a1 + 48);
      v12 = (void *)MEMORY[0x2199B6780](v22);
      v13 = *(void **)(a1 + 40);
      v14 = (void *)MEMORY[0x2199B6780](v11);
      objc_msgSend(v13, "_trackOutstandingRequestWithMessageIdentifier:completionHandler:errorHandler:", v10, v14, v12);

LABEL_11:
      goto LABEL_12;
    }
    pk_Payment_log();
    v20 = objc_claimAutoreleasedReturnValue();
    v21 = os_log_type_enabled(v20, OS_LOG_TYPE_DEFAULT);

    if (v21)
    {
      pk_Payment_log();
      v11 = objc_claimAutoreleasedReturnValue();
      if (!os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
        goto LABEL_11;
      *(_DWORD *)buf = 138412290;
      v25 = v10;
      v17 = "Warning: No response expected for message with identifier %@";
      v18 = v11;
      v19 = OS_LOG_TYPE_DEFAULT;
      goto LABEL_10;
    }
  }
  else
  {
    pk_Payment_log();
    v15 = objc_claimAutoreleasedReturnValue();
    v16 = os_log_type_enabled(v15, OS_LOG_TYPE_ERROR);

    if (v16)
    {
      pk_Payment_log();
      v11 = objc_claimAutoreleasedReturnValue();
      if (!os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
        goto LABEL_11;
      *(_DWORD *)buf = 138412290;
      v25 = v6;
      v17 = "Error: No message identifier for protobuf %@";
      v18 = v11;
      v19 = OS_LOG_TYPE_ERROR;
LABEL_10:
      _os_log_impl(&dword_213518000, v18, v19, v17, buf, 0xCu);
      goto LABEL_11;
    }
  }
LABEL_12:

}

void __94__NPKPaymentWebServiceCompanionTargetDevice_removeExpressPassWithUniqueIdentifier_completion___block_invoke_2(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  id v5;

  v3 = a2;
  if (*(_QWORD *)(a1 + 32))
  {
    v5 = v3;
    if (v3)
    {
      v4 = 0;
    }
    else
    {
      objc_msgSend(MEMORY[0x24BDBCF20], "set");
      v4 = (void *)objc_claimAutoreleasedReturnValue();
    }
    (*(void (**)(void))(*(_QWORD *)(a1 + 32) + 16))();

    v3 = v5;
  }

}

- (void)conflictingExpressPassIdentifiersForPassConfiguration:(id)a3 completion:(id)a4
{
  id v6;
  void *v7;
  _QWORD v8[4];
  id v9;

  v6 = a4;
  v7 = v6;
  if (v6)
  {
    v8[0] = MEMORY[0x24BDAC760];
    v8[1] = 3221225472;
    v8[2] = __110__NPKPaymentWebServiceCompanionTargetDevice_conflictingExpressPassIdentifiersForPassConfiguration_completion___block_invoke;
    v8[3] = &unk_24CFED408;
    v9 = v6;
    -[NPKPaymentWebServiceCompanionTargetDevice conflictingExpressPassIdentifiersForPassConfiguration:withReferenceExpressState:completion:](self, "conflictingExpressPassIdentifiersForPassConfiguration:withReferenceExpressState:completion:", a3, 0, v8);

  }
}

uint64_t __110__NPKPaymentWebServiceCompanionTargetDevice_conflictingExpressPassIdentifiersForPassConfiguration_completion___block_invoke(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

- (void)conflictingExpressPassIdentifiersForPassConfiguration:(id)a3 withReferenceExpressState:(id)a4 completion:(id)a5
{
  id v8;
  id v9;
  id v10;
  NSObject *v11;
  _BOOL4 v12;
  NSObject *v13;
  NSObject *v14;
  id v15;
  id v16;
  id v17;
  _QWORD v18[4];
  id v19;
  id v20;
  NPKPaymentWebServiceCompanionTargetDevice *v21;
  id v22;
  uint8_t buf[4];
  id v24;
  __int16 v25;
  id v26;
  uint64_t v27;

  v27 = *MEMORY[0x24BDAC8D0];
  v8 = a3;
  v9 = a4;
  v10 = a5;
  pk_Payment_log();
  v11 = objc_claimAutoreleasedReturnValue();
  v12 = os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT);

  if (v12)
  {
    pk_Payment_log();
    v13 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138412546;
      v24 = v8;
      v25 = 2112;
      v26 = v9;
      _os_log_impl(&dword_213518000, v13, OS_LOG_TYPE_DEFAULT, "Notice: Target device: conflicting express pass identifiers with passConfig %@, referenceExpressPassConfigurations:%@", buf, 0x16u);
    }

  }
  -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
  v14 = objc_claimAutoreleasedReturnValue();
  v18[0] = MEMORY[0x24BDAC760];
  v18[1] = 3221225472;
  v18[2] = __136__NPKPaymentWebServiceCompanionTargetDevice_conflictingExpressPassIdentifiersForPassConfiguration_withReferenceExpressState_completion___block_invoke;
  v18[3] = &unk_24CFE86A0;
  v19 = v8;
  v20 = v9;
  v21 = self;
  v22 = v10;
  v15 = v10;
  v16 = v9;
  v17 = v8;
  dispatch_sync(v14, v18);

}

void __136__NPKPaymentWebServiceCompanionTargetDevice_conflictingExpressPassIdentifiersForPassConfiguration_withReferenceExpressState_completion___block_invoke(uint64_t a1)
{
  NPKProtoConflictingExpressPassIdentifiersForPassInformationRequest *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  NPKProtoConflictingExpressPassIdentifiersForPassInformationRequest *v8;
  void *v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  void *v14;
  void *v15;
  uint64_t v16;
  void *v17;
  void *v18;
  NSObject *v19;
  void *v20;
  void *v21;
  void *v22;
  NSObject *v23;
  _BOOL4 v24;
  const char *v25;
  NSObject *v26;
  os_log_type_t v27;
  NSObject *v28;
  _BOOL4 v29;
  _QWORD v30[4];
  id v31;
  _QWORD v32[4];
  NPKProtoConflictingExpressPassIdentifiersForPassInformationRequest *v33;
  uint8_t buf[4];
  void *v35;
  _QWORD v36[2];
  _QWORD v37[3];

  v37[2] = *MEMORY[0x24BDAC8D0];
  v2 = objc_alloc_init(NPKProtoConflictingExpressPassIdentifiersForPassInformationRequest);
  objc_msgSend(*(id *)(a1 + 32), "passInformation");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  NPKSecureArchiveObject(v3);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  -[NPKProtoConflictingExpressPassIdentifiersForPassInformationRequest setExpressPassInformation:](v2, "setExpressPassInformation:", v4);

  NPKSecureArchiveObject(*(void **)(a1 + 32));
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  -[NPKProtoConflictingExpressPassIdentifiersForPassInformationRequest setExpressPassConfiguration:](v2, "setExpressPassConfiguration:", v5);

  v6 = *(void **)(a1 + 40);
  v7 = MEMORY[0x24BDAC760];
  v32[0] = MEMORY[0x24BDAC760];
  v32[1] = 3221225472;
  v32[2] = __136__NPKPaymentWebServiceCompanionTargetDevice_conflictingExpressPassIdentifiersForPassConfiguration_withReferenceExpressState_completion___block_invoke_2;
  v32[3] = &unk_24CFED430;
  v8 = v2;
  v33 = v8;
  objc_msgSend(v6, "enumerateObjectsUsingBlock:", v32);
  v9 = (void *)MEMORY[0x24BDD17C8];
  objc_msgSend(*(id *)(a1 + 32), "passUniqueIdentifier");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "stringWithFormat:", CFSTR("ConflictingPassIdentifiers-%@"), v10);
  v11 = (void *)objc_claimAutoreleasedReturnValue();

  v12 = objc_alloc(MEMORY[0x24BE4FE40]);
  -[NPKProtoConflictingExpressPassIdentifiersForPassInformationRequest data](v8, "data");
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  v14 = (void *)objc_msgSend(v12, "initWithProtobufData:type:isResponse:", v13, 53, 0);

  v15 = *(void **)(a1 + 48);
  v16 = *MEMORY[0x24BE4FB18];
  v36[0] = *MEMORY[0x24BE4FA90];
  v36[1] = v16;
  v37[0] = MEMORY[0x24BDBD1C8];
  v37[1] = v11;
  objc_msgSend(MEMORY[0x24BDBCE70], "dictionaryWithObjects:forKeys:count:", v37, v36, 2);
  v17 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v15, "_sendProtobuf:responseExpected:extraOptions:", v14, 1, v17);
  v18 = (void *)objc_claimAutoreleasedReturnValue();

  if (v18)
  {
    if (*(_QWORD *)(a1 + 56))
    {
      v19 = MEMORY[0x2199B6780]();
      v30[0] = v7;
      v30[1] = 3221225472;
      v30[2] = __136__NPKPaymentWebServiceCompanionTargetDevice_conflictingExpressPassIdentifiersForPassConfiguration_withReferenceExpressState_completion___block_invoke_3;
      v30[3] = &unk_24CFE7B80;
      v31 = *(id *)(a1 + 56);
      v20 = (void *)MEMORY[0x2199B6780](v30);
      v21 = *(void **)(a1 + 48);
      v22 = (void *)MEMORY[0x2199B6780](v19);
      objc_msgSend(v21, "_trackOutstandingRequestWithMessageIdentifier:completionHandler:errorHandler:", v18, v22, v20);

LABEL_11:
      goto LABEL_12;
    }
    pk_Payment_log();
    v28 = objc_claimAutoreleasedReturnValue();
    v29 = os_log_type_enabled(v28, OS_LOG_TYPE_DEFAULT);

    if (v29)
    {
      pk_Payment_log();
      v19 = objc_claimAutoreleasedReturnValue();
      if (!os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT))
        goto LABEL_11;
      *(_DWORD *)buf = 138412290;
      v35 = v18;
      v25 = "Warning: No response expected for message with identifier %@";
      v26 = v19;
      v27 = OS_LOG_TYPE_DEFAULT;
      goto LABEL_10;
    }
  }
  else
  {
    pk_Payment_log();
    v23 = objc_claimAutoreleasedReturnValue();
    v24 = os_log_type_enabled(v23, OS_LOG_TYPE_ERROR);

    if (v24)
    {
      pk_Payment_log();
      v19 = objc_claimAutoreleasedReturnValue();
      if (!os_log_type_enabled(v19, OS_LOG_TYPE_ERROR))
        goto LABEL_11;
      *(_DWORD *)buf = 138412290;
      v35 = v14;
      v25 = "Error: No message identifier for protobuf %@";
      v26 = v19;
      v27 = OS_LOG_TYPE_ERROR;
LABEL_10:
      _os_log_impl(&dword_213518000, v26, v27, v25, buf, 0xCu);
      goto LABEL_11;
    }
  }
LABEL_12:

}

void __136__NPKPaymentWebServiceCompanionTargetDevice_conflictingExpressPassIdentifiersForPassConfiguration_withReferenceExpressState_completion___block_invoke_2(uint64_t a1, void *a2)
{
  void *v3;
  id v4;
  void *v5;
  void *v6;
  void *v7;
  id v8;

  v3 = *(void **)(a1 + 32);
  v4 = a2;
  NPKSecureArchiveObject(v4);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "addReferenceExpressPassConfigurations:", v5);

  v6 = *(void **)(a1 + 32);
  objc_msgSend(v4, "passInformation");
  v8 = (id)objc_claimAutoreleasedReturnValue();

  NPKSecureArchiveObject(v8);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "addReferenceExpressPassesInformation:", v7);

}

uint64_t __136__NPKPaymentWebServiceCompanionTargetDevice_conflictingExpressPassIdentifiersForPassConfiguration_withReferenceExpressState_completion___block_invoke_3(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 32);
  if (result)
    return (*(uint64_t (**)(uint64_t, _QWORD, _QWORD))(result + 16))(result, 0, 0);
  return result;
}

- (void)conflictingExpressPassIdentifiersForPassInformationResponse:(id)a3
{
  id v4;
  NSObject *v5;
  _BOOL4 v6;
  NSObject *v7;
  void *v8;
  void *v9;
  void *v10;
  NSObject *v11;
  NSObject *v12;
  _BOOL4 v13;
  NSObject *v14;
  NSObject *v15;
  _BOOL4 v16;
  NSObject *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD v21[5];
  id v22;
  id v23;
  __int128 *p_buf;
  uint64_t *v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t (*v30)(uint64_t, uint64_t);
  void (*v31)(uint64_t);
  id v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t (*v36)(uint64_t, uint64_t);
  void (*v37)(uint64_t);
  id v38;
  uint8_t v39[4];
  uint64_t v40;
  __int16 v41;
  uint64_t v42;
  __int128 buf;
  uint64_t v44;
  uint64_t (*v45)(uint64_t, uint64_t);
  void (*v46)(uint64_t);
  id v47;
  uint64_t v48;

  v48 = *MEMORY[0x24BDAC8D0];
  v4 = a3;
  pk_Payment_log();
  v5 = objc_claimAutoreleasedReturnValue();
  v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    pk_Payment_log();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend(v4, "npkDescription");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      LODWORD(buf) = 138412290;
      *(_QWORD *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_213518000, v7, OS_LOG_TYPE_DEFAULT, "Notice: conflicting express pass identifiers incoming protobuf %@", (uint8_t *)&buf, 0xCu);

    }
  }
  objc_msgSend(v4, "context");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "incomingResponseIdentifier");
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  *(_QWORD *)&buf = 0;
  *((_QWORD *)&buf + 1) = &buf;
  v44 = 0x3032000000;
  v45 = __Block_byref_object_copy__342;
  v46 = __Block_byref_object_dispose__343;
  v47 = 0;
  v33 = 0;
  v34 = &v33;
  v35 = 0x3032000000;
  v36 = __Block_byref_object_copy__23;
  v37 = __Block_byref_object_dispose__23;
  v38 = 0;
  v27 = 0;
  v28 = &v27;
  v29 = 0x3032000000;
  v30 = __Block_byref_object_copy__23;
  v31 = __Block_byref_object_dispose__23;
  v32 = 0;
  if (v10)
  {
    -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
    v11 = objc_claimAutoreleasedReturnValue();
    v21[0] = MEMORY[0x24BDAC760];
    v21[1] = 3221225472;
    v21[2] = __105__NPKPaymentWebServiceCompanionTargetDevice_conflictingExpressPassIdentifiersForPassInformationResponse___block_invoke;
    v21[3] = &unk_24CFED060;
    v21[4] = self;
    v22 = v10;
    v23 = v4;
    p_buf = &buf;
    v25 = &v33;
    v26 = &v27;
    dispatch_sync(v11, v21);

  }
  else
  {
    pk_Payment_log();
    v12 = objc_claimAutoreleasedReturnValue();
    v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      pk_Payment_log();
      v14 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)v39 = 0;
        _os_log_impl(&dword_213518000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v39, 2u);
      }

    }
  }
  pk_General_log();
  v15 = objc_claimAutoreleasedReturnValue();
  v16 = os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT);

  if (v16)
  {
    pk_General_log();
    v17 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
    {
      v18 = v34[5];
      v19 = v28[5];
      *(_DWORD *)v39 = 138412546;
      v40 = v18;
      v41 = 2112;
      v42 = v19;
      _os_log_impl(&dword_213518000, v17, OS_LOG_TYPE_DEFAULT, "Notice: Target device: Received conflictingPassesUniqueIDs:%@ conflictingReferencePassIdentifier:%@", v39, 0x16u);
    }

  }
  v20 = *(_QWORD *)(*((_QWORD *)&buf + 1) + 40);
  if (v20)
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 16))(v20, v34[5], v28[5]);
  _Block_object_dispose(&v27, 8);

  _Block_object_dispose(&v33, 8);
  _Block_object_dispose(&buf, 8);

}

void __105__NPKPaymentWebServiceCompanionTargetDevice_conflictingExpressPassIdentifiersForPassInformationResponse___block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;
  NPKProtoConflictingExpressPassIdentifiersForPassInformationResponse *v4;
  void *v5;
  NPKProtoConflictingExpressPassIdentifiersForPassInformationResponse *v6;
  NSObject *v7;
  _BOOL4 v8;
  NSObject *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint8_t v26[16];

  objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "objectForKey:", *(_QWORD *)(a1 + 40));
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  if (v3)
  {
    v4 = [NPKProtoConflictingExpressPassIdentifiersForPassInformationResponse alloc];
    objc_msgSend(*(id *)(a1 + 48), "data");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    v6 = -[NPKProtoConflictingExpressPassIdentifiersForPassInformationResponse initWithData:](v4, "initWithData:", v5);

    if (-[NPKProtoConflictingExpressPassIdentifiersForPassInformationResponse pending](v6, "pending"))
    {
      objc_msgSend(v3, "setOrResetCleanupTimer");
    }
    else
    {
      objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v10, "removeObjectForKey:", *(_QWORD *)(a1 + 40));

      objc_msgSend(v3, "completionHandler");
      v11 = objc_claimAutoreleasedReturnValue();
      v12 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
      v13 = *(void **)(v12 + 40);
      *(_QWORD *)(v12 + 40) = v11;

    }
    -[NPKProtoConflictingExpressPassIdentifiersForPassInformationResponse conflictingExpressPassIdentifiers](v6, "conflictingExpressPassIdentifiers");
    v14 = (void *)objc_claimAutoreleasedReturnValue();

    if (v14)
    {
      v15 = (void *)MEMORY[0x24BDBCF20];
      -[NPKProtoConflictingExpressPassIdentifiersForPassInformationResponse conflictingExpressPassIdentifiers](v6, "conflictingExpressPassIdentifiers");
      v16 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v15, "setWithArray:", v16);
      v17 = objc_claimAutoreleasedReturnValue();
      v18 = *(_QWORD *)(*(_QWORD *)(a1 + 64) + 8);
      v19 = *(void **)(v18 + 40);
      *(_QWORD *)(v18 + 40) = v17;

    }
    -[NPKProtoConflictingExpressPassIdentifiersForPassInformationResponse conflictingReferenceExpressPassIdentifiers](v6, "conflictingReferenceExpressPassIdentifiers");
    v20 = (void *)objc_claimAutoreleasedReturnValue();

    if (v20)
    {
      v21 = (void *)MEMORY[0x24BDBCF20];
      -[NPKProtoConflictingExpressPassIdentifiersForPassInformationResponse conflictingReferenceExpressPassIdentifiers](v6, "conflictingReferenceExpressPassIdentifiers");
      v22 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v21, "setWithArray:", v22);
      v23 = objc_claimAutoreleasedReturnValue();
      v24 = *(_QWORD *)(*(_QWORD *)(a1 + 72) + 8);
      v25 = *(void **)(v24 + 40);
      *(_QWORD *)(v24 + 40) = v23;

    }
  }
  else
  {
    pk_Payment_log();
    v7 = objc_claimAutoreleasedReturnValue();
    v8 = os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT);

    if (v8)
    {
      pk_Payment_log();
      v9 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)v26 = 0;
        _os_log_impl(&dword_213518000, v9, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", v26, 2u);
      }

    }
  }

}

- (void)handleBalanceReminderWithBalanceAndPassRequest:(id)a3
{
  id v4;
  NPKProtoSetBalanceReminderForBalanceAndPassRequest *v5;
  void *v6;
  NPKProtoSetBalanceReminderForBalanceAndPassRequest *v7;
  void *v8;
  void *v9;
  NSObject *v10;
  void *v11;
  void *v12;
  NSObject *v13;
  void *v14;
  NSObject *v15;
  _BOOL4 v16;
  NSObject *v17;
  void *v18;
  int v19;
  void *v20;
  __int16 v21;
  void *v22;
  __int16 v23;
  void *v24;
  uint64_t v25;

  v25 = *MEMORY[0x24BDAC8D0];
  v4 = a3;
  v5 = [NPKProtoSetBalanceReminderForBalanceAndPassRequest alloc];
  objc_msgSend(v4, "data");
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  v7 = -[NPKProtoSetBalanceReminderForBalanceAndPassRequest initWithData:](v5, "initWithData:", v6);
  -[NPKProtoSetBalanceReminderForBalanceAndPassRequest uniqueID](v7, "uniqueID");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  -[NPKProtoSetBalanceReminderForBalanceAndPassRequest balanceBytes](v7, "balanceBytes");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v10 = objc_opt_class();
  NPKSecureUnarchiveObject(v9, v10);
  v11 = (void *)objc_claimAutoreleasedReturnValue();

  -[NPKProtoSetBalanceReminderForBalanceAndPassRequest balanceReminderBytes](v7, "balanceReminderBytes");
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  v13 = objc_opt_class();
  NPKSecureUnarchiveObject(v12, v13);
  v14 = (void *)objc_claimAutoreleasedReturnValue();

  pk_Payment_log();
  v15 = objc_claimAutoreleasedReturnValue();
  v16 = os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT);

  if (v16)
  {
    pk_Payment_log();
    v17 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
    {
      v19 = 138412802;
      v20 = v14;
      v21 = 2112;
      v22 = v11;
      v23 = 2112;
      v24 = v8;
      _os_log_impl(&dword_213518000, v17, OS_LOG_TYPE_DEFAULT, "Notice: Handling balance reminder update %@ for balance %@ unique ID %@", (uint8_t *)&v19, 0x20u);
    }

  }
  -[NPKPaymentWebServiceCompanionTargetDevice delegate](self, "delegate");
  v18 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v18, "handleBalanceReminderUpdate:balance:forUniqueID:", v14, v11, v8);

}

- (void)setBalanceReminderWithBalanceAndPassResponse:(id)a3
{
  id v4;
  NSObject *v5;
  _BOOL4 v6;
  NSObject *v7;
  void *v8;
  void *v9;
  void *v10;
  NSObject *v11;
  NSObject *v12;
  _BOOL4 v13;
  NSObject *v14;
  uint64_t v15;
  uint8_t v16[8];
  _QWORD block[5];
  id v18;
  id v19;
  __int128 *p_buf;
  uint64_t *v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  char v25;
  __int128 buf;
  uint64_t v27;
  uint64_t (*v28)(uint64_t, uint64_t);
  void (*v29)(uint64_t);
  id v30;
  uint64_t v31;

  v31 = *MEMORY[0x24BDAC8D0];
  v4 = a3;
  pk_Payment_log();
  v5 = objc_claimAutoreleasedReturnValue();
  v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    pk_Payment_log();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend(v4, "npkDescription");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      LODWORD(buf) = 138412290;
      *(_QWORD *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_213518000, v7, OS_LOG_TYPE_DEFAULT, "Notice: set balance reminder incoming protobuf %@", (uint8_t *)&buf, 0xCu);

    }
  }
  objc_msgSend(v4, "context");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "incomingResponseIdentifier");
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  *(_QWORD *)&buf = 0;
  *((_QWORD *)&buf + 1) = &buf;
  v27 = 0x3032000000;
  v28 = __Block_byref_object_copy__342;
  v29 = __Block_byref_object_dispose__343;
  v30 = 0;
  v22 = 0;
  v23 = &v22;
  v24 = 0x2020000000;
  v25 = 0;
  if (v10)
  {
    -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
    v11 = objc_claimAutoreleasedReturnValue();
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 3221225472;
    block[2] = __90__NPKPaymentWebServiceCompanionTargetDevice_setBalanceReminderWithBalanceAndPassResponse___block_invoke;
    block[3] = &unk_24CFED0D8;
    block[4] = self;
    v18 = v10;
    v19 = v4;
    p_buf = &buf;
    v21 = &v22;
    dispatch_sync(v11, block);

  }
  else
  {
    pk_Payment_log();
    v12 = objc_claimAutoreleasedReturnValue();
    v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      pk_Payment_log();
      v14 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)v16 = 0;
        _os_log_impl(&dword_213518000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v16, 2u);
      }

    }
  }
  v15 = *(_QWORD *)(*((_QWORD *)&buf + 1) + 40);
  if (v15)
    (*(void (**)(uint64_t, _QWORD))(v15 + 16))(v15, *((unsigned __int8 *)v23 + 24));
  _Block_object_dispose(&v22, 8);
  _Block_object_dispose(&buf, 8);

}

void __90__NPKPaymentWebServiceCompanionTargetDevice_setBalanceReminderWithBalanceAndPassResponse___block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;
  NPKProtoSetBalanceReminderForBalanceAndPassResponse *v4;
  void *v5;
  NPKProtoSetBalanceReminderForBalanceAndPassResponse *v6;
  NSObject *v7;
  _BOOL4 v8;
  NSObject *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint8_t v14[16];

  objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "objectForKey:", *(_QWORD *)(a1 + 40));
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  if (v3)
  {
    v4 = [NPKProtoSetBalanceReminderForBalanceAndPassResponse alloc];
    objc_msgSend(*(id *)(a1 + 48), "data");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    v6 = -[NPKProtoSetBalanceReminderForBalanceAndPassResponse initWithData:](v4, "initWithData:", v5);

    if (-[NPKProtoSetBalanceReminderForBalanceAndPassResponse pending](v6, "pending"))
    {
      objc_msgSend(v3, "setOrResetCleanupTimer");
    }
    else
    {
      objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v10, "removeObjectForKey:", *(_QWORD *)(a1 + 40));

      objc_msgSend(v3, "completionHandler");
      v11 = objc_claimAutoreleasedReturnValue();
      v12 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
      v13 = *(void **)(v12 + 40);
      *(_QWORD *)(v12 + 40) = v11;

    }
    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 24) = -[NPKProtoSetBalanceReminderForBalanceAndPassResponse success](v6, "success");

  }
  else
  {
    pk_Payment_log();
    v7 = objc_claimAutoreleasedReturnValue();
    v8 = os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT);

    if (v8)
    {
      pk_Payment_log();
      v9 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)v14 = 0;
        _os_log_impl(&dword_213518000, v9, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", v14, 2u);
      }

    }
  }

}

- (void)setBalanceReminder:(id)a3 forBalance:(id)a4 pass:(id)a5 completion:(id)a6
{
  id v10;
  id v11;
  id v12;
  id v13;
  NSObject *v14;
  _BOOL4 v15;
  NSObject *v16;
  NSObject *v17;
  id v18;
  id v19;
  id v20;
  id v21;
  _QWORD block[4];
  id v23;
  id v24;
  id v25;
  NPKPaymentWebServiceCompanionTargetDevice *v26;
  id v27;
  uint8_t buf[4];
  id v29;
  __int16 v30;
  id v31;
  __int16 v32;
  id v33;
  uint64_t v34;

  v34 = *MEMORY[0x24BDAC8D0];
  v10 = a3;
  v11 = a4;
  v12 = a5;
  v13 = a6;
  pk_Payment_log();
  v14 = objc_claimAutoreleasedReturnValue();
  v15 = os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT);

  if (v15)
  {
    pk_Payment_log();
    v16 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138412802;
      v29 = v10;
      v30 = 2112;
      v31 = v11;
      v32 = 2112;
      v33 = v12;
      _os_log_impl(&dword_213518000, v16, OS_LOG_TYPE_DEFAULT, "Notice: Target device: setting balance reminder %@ for balance %@ with passInfo %@", buf, 0x20u);
    }

  }
  -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
  v17 = objc_claimAutoreleasedReturnValue();
  block[0] = MEMORY[0x24BDAC760];
  block[1] = 3221225472;
  block[2] = __91__NPKPaymentWebServiceCompanionTargetDevice_setBalanceReminder_forBalance_pass_completion___block_invoke;
  block[3] = &unk_24CFE9350;
  v23 = v12;
  v24 = v11;
  v25 = v10;
  v26 = self;
  v27 = v13;
  v18 = v13;
  v19 = v10;
  v20 = v11;
  v21 = v12;
  dispatch_sync(v17, block);

}

void __91__NPKPaymentWebServiceCompanionTargetDevice_setBalanceReminder_forBalance_pass_completion___block_invoke(uint64_t a1)
{
  NPKProtoSetBalanceReminderForBalanceAndPassRequest *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  id v10;
  void *v11;
  void *v12;
  void *v13;
  uint64_t v14;
  void *v15;
  void *v16;
  NSObject *v17;
  void *v18;
  void *v19;
  void *v20;
  NSObject *v21;
  _BOOL4 v22;
  const char *v23;
  NSObject *v24;
  os_log_type_t v25;
  NSObject *v26;
  _BOOL4 v27;
  _QWORD v28[4];
  id v29;
  uint8_t buf[4];
  void *v31;
  _QWORD v32[2];
  _QWORD v33[3];

  v33[2] = *MEMORY[0x24BDAC8D0];
  v2 = objc_alloc_init(NPKProtoSetBalanceReminderForBalanceAndPassRequest);
  objc_msgSend(*(id *)(a1 + 32), "uniqueID");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  -[NPKProtoSetBalanceReminderForBalanceAndPassRequest setUniqueID:](v2, "setUniqueID:", v3);

  NPKSecureArchiveObject(*(void **)(a1 + 40));
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  -[NPKProtoSetBalanceReminderForBalanceAndPassRequest setBalanceBytes:](v2, "setBalanceBytes:", v4);

  NPKSecureArchiveObject(*(void **)(a1 + 48));
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  -[NPKProtoSetBalanceReminderForBalanceAndPassRequest setBalanceReminderBytes:](v2, "setBalanceReminderBytes:", v5);

  v6 = (void *)MEMORY[0x24BDD17C8];
  objc_msgSend(*(id *)(a1 + 40), "identifiers");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "anyObject");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "stringWithFormat:", CFSTR("SetBalanceReminder-%@"), v8);
  v9 = (void *)objc_claimAutoreleasedReturnValue();

  v10 = objc_alloc(MEMORY[0x24BE4FE40]);
  -[NPKProtoSetBalanceReminderForBalanceAndPassRequest data](v2, "data");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  v12 = (void *)objc_msgSend(v10, "initWithProtobufData:type:isResponse:", v11, 57, 0);

  v13 = *(void **)(a1 + 56);
  v14 = *MEMORY[0x24BE4FB18];
  v32[0] = *MEMORY[0x24BE4FB30];
  v32[1] = v14;
  v33[0] = &unk_24D056650;
  v33[1] = v9;
  objc_msgSend(MEMORY[0x24BDBCE70], "dictionaryWithObjects:forKeys:count:", v33, v32, 2);
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v13, "_sendProtobuf:responseExpected:extraOptions:", v12, 1, v15);
  v16 = (void *)objc_claimAutoreleasedReturnValue();

  if (v16)
  {
    if (*(_QWORD *)(a1 + 64))
    {
      v17 = MEMORY[0x2199B6780]();
      v28[0] = MEMORY[0x24BDAC760];
      v28[1] = 3221225472;
      v28[2] = __91__NPKPaymentWebServiceCompanionTargetDevice_setBalanceReminder_forBalance_pass_completion___block_invoke_2;
      v28[3] = &unk_24CFE7B80;
      v29 = *(id *)(a1 + 64);
      v18 = (void *)MEMORY[0x2199B6780](v28);
      v19 = *(void **)(a1 + 56);
      v20 = (void *)MEMORY[0x2199B6780](v17);
      objc_msgSend(v19, "_trackOutstandingRequestWithMessageIdentifier:completionHandler:errorHandler:", v16, v20, v18);

LABEL_11:
      goto LABEL_12;
    }
    pk_Payment_log();
    v26 = objc_claimAutoreleasedReturnValue();
    v27 = os_log_type_enabled(v26, OS_LOG_TYPE_DEFAULT);

    if (v27)
    {
      pk_Payment_log();
      v17 = objc_claimAutoreleasedReturnValue();
      if (!os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
        goto LABEL_11;
      *(_DWORD *)buf = 138412290;
      v31 = v16;
      v23 = "Warning: No response expected for message with identifier %@";
      v24 = v17;
      v25 = OS_LOG_TYPE_DEFAULT;
      goto LABEL_10;
    }
  }
  else
  {
    pk_Payment_log();
    v21 = objc_claimAutoreleasedReturnValue();
    v22 = os_log_type_enabled(v21, OS_LOG_TYPE_ERROR);

    if (v22)
    {
      pk_Payment_log();
      v17 = objc_claimAutoreleasedReturnValue();
      if (!os_log_type_enabled(v17, OS_LOG_TYPE_ERROR))
        goto LABEL_11;
      *(_DWORD *)buf = 138412290;
      v31 = v12;
      v23 = "Error: No message identifier for protobuf %@";
      v24 = v17;
      v25 = OS_LOG_TYPE_ERROR;
LABEL_10:
      _os_log_impl(&dword_213518000, v24, v25, v23, buf, 0xCu);
      goto LABEL_11;
    }
  }
LABEL_12:

}

uint64_t __91__NPKPaymentWebServiceCompanionTargetDevice_setBalanceReminder_forBalance_pass_completion___block_invoke_2(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 32);
  if (result)
    return (*(uint64_t (**)(uint64_t, _QWORD))(result + 16))(result, 0);
  return result;
}

- (void)balanceReminderWithBalanceAndPassResponse:(id)a3
{
  id v4;
  NSObject *v5;
  _BOOL4 v6;
  NSObject *v7;
  void *v8;
  void *v9;
  void *v10;
  NSObject *v11;
  NSObject *v12;
  _BOOL4 v13;
  NSObject *v14;
  uint64_t v15;
  uint8_t v16[16];
  _QWORD block[5];
  id v18;
  id v19;
  __int128 *p_buf;
  uint64_t *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t (*v26)(uint64_t, uint64_t);
  void (*v27)(uint64_t);
  id v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t (*v32)(uint64_t, uint64_t);
  void (*v33)(uint64_t);
  id v34;
  __int128 buf;
  uint64_t v36;
  uint64_t (*v37)(uint64_t, uint64_t);
  void (*v38)(uint64_t);
  id v39;
  uint64_t v40;

  v40 = *MEMORY[0x24BDAC8D0];
  v4 = a3;
  pk_Payment_log();
  v5 = objc_claimAutoreleasedReturnValue();
  v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    pk_Payment_log();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend(v4, "npkDescription");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      LODWORD(buf) = 138412290;
      *(_QWORD *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_213518000, v7, OS_LOG_TYPE_DEFAULT, "Notice: balance reminder incoming protobuf %@", (uint8_t *)&buf, 0xCu);

    }
  }
  objc_msgSend(v4, "context");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "incomingResponseIdentifier");
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  *(_QWORD *)&buf = 0;
  *((_QWORD *)&buf + 1) = &buf;
  v36 = 0x3032000000;
  v37 = __Block_byref_object_copy__342;
  v38 = __Block_byref_object_dispose__343;
  v39 = 0;
  v29 = 0;
  v30 = &v29;
  v31 = 0x3032000000;
  v32 = __Block_byref_object_copy__23;
  v33 = __Block_byref_object_dispose__23;
  v34 = 0;
  v23 = 0;
  v24 = &v23;
  v25 = 0x3032000000;
  v26 = __Block_byref_object_copy__23;
  v27 = __Block_byref_object_dispose__23;
  v28 = 0;
  if (v10)
  {
    -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
    v11 = objc_claimAutoreleasedReturnValue();
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 3221225472;
    block[2] = __87__NPKPaymentWebServiceCompanionTargetDevice_balanceReminderWithBalanceAndPassResponse___block_invoke;
    block[3] = &unk_24CFED060;
    block[4] = self;
    v18 = v10;
    v19 = v4;
    p_buf = &buf;
    v21 = &v29;
    v22 = &v23;
    dispatch_sync(v11, block);

  }
  else
  {
    pk_Payment_log();
    v12 = objc_claimAutoreleasedReturnValue();
    v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      pk_Payment_log();
      v14 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)v16 = 0;
        _os_log_impl(&dword_213518000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v16, 2u);
      }

    }
  }
  v15 = *(_QWORD *)(*((_QWORD *)&buf + 1) + 40);
  if (v15)
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v15, v30[5], v24[5]);
  _Block_object_dispose(&v23, 8);

  _Block_object_dispose(&v29, 8);
  _Block_object_dispose(&buf, 8);

}

void __87__NPKPaymentWebServiceCompanionTargetDevice_balanceReminderWithBalanceAndPassResponse___block_invoke(uint64_t a1)
{
  void *v1;
  void *v3;
  void *v4;
  NPKProtoBalanceReminderForBalanceAndPassResponse *v5;
  void *v6;
  NPKProtoBalanceReminderForBalanceAndPassResponse *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  NSObject *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  _BOOL4 v17;
  NSObject *v18;
  void *v19;
  NSObject *v20;
  _BOOL4 v21;
  NSObject *v22;
  __int16 v23[8];

  objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "objectForKey:", *(_QWORD *)(a1 + 40));
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  if (v4)
  {
    v5 = [NPKProtoBalanceReminderForBalanceAndPassResponse alloc];
    objc_msgSend(*(id *)(a1 + 48), "data");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    v7 = -[NPKProtoBalanceReminderForBalanceAndPassResponse initWithData:](v5, "initWithData:", v6);

    objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "removeObjectForKey:", *(_QWORD *)(a1 + 40));

    objc_msgSend(v4, "completionHandler");
    v9 = objc_claimAutoreleasedReturnValue();
    v10 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
    v11 = *(void **)(v10 + 40);
    *(_QWORD *)(v10 + 40) = v9;

    -[NPKProtoBalanceReminderForBalanceAndPassResponse balanceReminderBytes](v7, "balanceReminderBytes");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    v13 = objc_opt_class();
    NPKSecureUnarchiveObject(v12, v13);
    v14 = objc_claimAutoreleasedReturnValue();
    v15 = *(_QWORD *)(*(_QWORD *)(a1 + 64) + 8);
    v16 = *(void **)(v15 + 40);
    *(_QWORD *)(v15 + 40) = v14;

    v17 = -[NPKProtoBalanceReminderForBalanceAndPassResponse hasErrorData](v7, "hasErrorData");
    if (v17)
    {
      -[NPKProtoBalanceReminderForBalanceAndPassResponse errorData](v7, "errorData");
      v1 = (void *)objc_claimAutoreleasedReturnValue();
      v18 = objc_opt_class();
      NPKSecureUnarchiveObject(v1, v18);
      v19 = (void *)objc_claimAutoreleasedReturnValue();
    }
    else
    {
      v19 = 0;
    }
    objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 72) + 8) + 40), v19);
    if (v17)
    {

    }
  }
  else
  {
    pk_Payment_log();
    v20 = objc_claimAutoreleasedReturnValue();
    v21 = os_log_type_enabled(v20, OS_LOG_TYPE_DEFAULT);

    if (v21)
    {
      pk_Payment_log();
      v22 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v22, OS_LOG_TYPE_DEFAULT))
      {
        v23[0] = 0;
        _os_log_impl(&dword_213518000, v22, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", (uint8_t *)v23, 2u);
      }

    }
  }

}

- (void)balanceReminderForBalance:(id)a3 pass:(id)a4 completion:(id)a5
{
  id v8;
  id v9;
  id v10;
  NSObject *v11;
  _BOOL4 v12;
  NSObject *v13;
  NSObject *v14;
  id v15;
  id v16;
  id v17;
  _QWORD v18[4];
  id v19;
  id v20;
  NPKPaymentWebServiceCompanionTargetDevice *v21;
  id v22;
  uint8_t buf[4];
  id v24;
  __int16 v25;
  id v26;
  uint64_t v27;

  v27 = *MEMORY[0x24BDAC8D0];
  v8 = a3;
  v9 = a4;
  v10 = a5;
  pk_Payment_log();
  v11 = objc_claimAutoreleasedReturnValue();
  v12 = os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT);

  if (v12)
  {
    pk_Payment_log();
    v13 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138412546;
      v24 = v8;
      v25 = 2112;
      v26 = v9;
      _os_log_impl(&dword_213518000, v13, OS_LOG_TYPE_DEFAULT, "Notice: Target device: getting balance reminder for balance %@ with passInfo %@", buf, 0x16u);
    }

  }
  -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
  v14 = objc_claimAutoreleasedReturnValue();
  v18[0] = MEMORY[0x24BDAC760];
  v18[1] = 3221225472;
  v18[2] = __87__NPKPaymentWebServiceCompanionTargetDevice_balanceReminderForBalance_pass_completion___block_invoke;
  v18[3] = &unk_24CFE86A0;
  v19 = v9;
  v20 = v8;
  v21 = self;
  v22 = v10;
  v15 = v10;
  v16 = v8;
  v17 = v9;
  dispatch_sync(v14, v18);

}

void __87__NPKPaymentWebServiceCompanionTargetDevice_balanceReminderForBalance_pass_completion___block_invoke(uint64_t a1)
{
  NPKProtoBalanceReminderForBalanceAndPassRequest *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  void *v12;
  uint64_t v13;
  void *v14;
  void *v15;
  NSObject *v16;
  void *v17;
  void *v18;
  void *v19;
  NSObject *v20;
  _BOOL4 v21;
  const char *v22;
  NSObject *v23;
  os_log_type_t v24;
  NSObject *v25;
  _BOOL4 v26;
  _QWORD v27[4];
  id v28;
  uint8_t buf[4];
  void *v30;
  _QWORD v31[2];
  _QWORD v32[3];

  v32[2] = *MEMORY[0x24BDAC8D0];
  v2 = objc_alloc_init(NPKProtoBalanceReminderForBalanceAndPassRequest);
  objc_msgSend(*(id *)(a1 + 32), "uniqueID");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  -[NPKProtoBalanceReminderForBalanceAndPassRequest setUniqueID:](v2, "setUniqueID:", v3);

  NPKSecureArchiveObject(*(void **)(a1 + 40));
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  -[NPKProtoBalanceReminderForBalanceAndPassRequest setBalanceBytes:](v2, "setBalanceBytes:", v4);

  v5 = (void *)MEMORY[0x24BDD17C8];
  objc_msgSend(*(id *)(a1 + 40), "identifiers");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "anyObject");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "stringWithFormat:", CFSTR("BalanceReminder-%@"), v7);
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  v9 = objc_alloc(MEMORY[0x24BE4FE40]);
  -[NPKProtoBalanceReminderForBalanceAndPassRequest data](v2, "data");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v11 = (void *)objc_msgSend(v9, "initWithProtobufData:type:isResponse:", v10, 65, 0);

  v12 = *(void **)(a1 + 48);
  v13 = *MEMORY[0x24BE4FB18];
  v31[0] = *MEMORY[0x24BE4FB30];
  v31[1] = v13;
  v32[0] = &unk_24D0566F0;
  v32[1] = v8;
  objc_msgSend(MEMORY[0x24BDBCE70], "dictionaryWithObjects:forKeys:count:", v32, v31, 2);
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v12, "_sendProtobuf:responseExpected:extraOptions:", v11, 1, v14);
  v15 = (void *)objc_claimAutoreleasedReturnValue();

  if (v15)
  {
    if (*(_QWORD *)(a1 + 56))
    {
      v16 = MEMORY[0x2199B6780]();
      v27[0] = MEMORY[0x24BDAC760];
      v27[1] = 3221225472;
      v27[2] = __87__NPKPaymentWebServiceCompanionTargetDevice_balanceReminderForBalance_pass_completion___block_invoke_2;
      v27[3] = &unk_24CFE7B80;
      v28 = *(id *)(a1 + 56);
      v17 = (void *)MEMORY[0x2199B6780](v27);
      v18 = *(void **)(a1 + 48);
      v19 = (void *)MEMORY[0x2199B6780](v16);
      objc_msgSend(v18, "_trackOutstandingRequestWithMessageIdentifier:completionHandler:errorHandler:", v15, v19, v17);

LABEL_11:
      goto LABEL_12;
    }
    pk_Payment_log();
    v25 = objc_claimAutoreleasedReturnValue();
    v26 = os_log_type_enabled(v25, OS_LOG_TYPE_DEFAULT);

    if (v26)
    {
      pk_Payment_log();
      v16 = objc_claimAutoreleasedReturnValue();
      if (!os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
        goto LABEL_11;
      *(_DWORD *)buf = 138412290;
      v30 = v15;
      v22 = "Warning: No response expected for message with identifier %@";
      v23 = v16;
      v24 = OS_LOG_TYPE_DEFAULT;
      goto LABEL_10;
    }
  }
  else
  {
    pk_Payment_log();
    v20 = objc_claimAutoreleasedReturnValue();
    v21 = os_log_type_enabled(v20, OS_LOG_TYPE_ERROR);

    if (v21)
    {
      pk_Payment_log();
      v16 = objc_claimAutoreleasedReturnValue();
      if (!os_log_type_enabled(v16, OS_LOG_TYPE_ERROR))
        goto LABEL_11;
      *(_DWORD *)buf = 138412290;
      v30 = v11;
      v22 = "Error: No message identifier for protobuf %@";
      v23 = v16;
      v24 = OS_LOG_TYPE_ERROR;
LABEL_10:
      _os_log_impl(&dword_213518000, v23, v24, v22, buf, 0xCu);
      goto LABEL_11;
    }
  }
LABEL_12:

}

uint64_t __87__NPKPaymentWebServiceCompanionTargetDevice_balanceReminderForBalance_pass_completion___block_invoke_2(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 32);
  if (result)
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(result + 16))(result, 0, a2);
  return result;
}

- (void)setCommutePlanReminderWithCommutePlanAndPassResponse:(id)a3
{
  id v4;
  NSObject *v5;
  _BOOL4 v6;
  NSObject *v7;
  void *v8;
  void *v9;
  void *v10;
  NSObject *v11;
  NSObject *v12;
  _BOOL4 v13;
  NSObject *v14;
  uint64_t v15;
  uint8_t v16[8];
  _QWORD block[5];
  id v18;
  id v19;
  __int128 *p_buf;
  uint64_t *v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  char v25;
  __int128 buf;
  uint64_t v27;
  uint64_t (*v28)(uint64_t, uint64_t);
  void (*v29)(uint64_t);
  id v30;
  uint64_t v31;

  v31 = *MEMORY[0x24BDAC8D0];
  v4 = a3;
  pk_Payment_log();
  v5 = objc_claimAutoreleasedReturnValue();
  v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    pk_Payment_log();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend(v4, "npkDescription");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      LODWORD(buf) = 138412290;
      *(_QWORD *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_213518000, v7, OS_LOG_TYPE_DEFAULT, "Notice: set commute plan reminder incoming protobuf %@", (uint8_t *)&buf, 0xCu);

    }
  }
  objc_msgSend(v4, "context");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "incomingResponseIdentifier");
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  *(_QWORD *)&buf = 0;
  *((_QWORD *)&buf + 1) = &buf;
  v27 = 0x3032000000;
  v28 = __Block_byref_object_copy__342;
  v29 = __Block_byref_object_dispose__343;
  v30 = 0;
  v22 = 0;
  v23 = &v22;
  v24 = 0x2020000000;
  v25 = 0;
  if (v10)
  {
    -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
    v11 = objc_claimAutoreleasedReturnValue();
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 3221225472;
    block[2] = __98__NPKPaymentWebServiceCompanionTargetDevice_setCommutePlanReminderWithCommutePlanAndPassResponse___block_invoke;
    block[3] = &unk_24CFED0D8;
    block[4] = self;
    v18 = v10;
    v19 = v4;
    p_buf = &buf;
    v21 = &v22;
    dispatch_sync(v11, block);

  }
  else
  {
    pk_Payment_log();
    v12 = objc_claimAutoreleasedReturnValue();
    v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      pk_Payment_log();
      v14 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)v16 = 0;
        _os_log_impl(&dword_213518000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v16, 2u);
      }

    }
  }
  v15 = *(_QWORD *)(*((_QWORD *)&buf + 1) + 40);
  if (v15)
    (*(void (**)(uint64_t, _QWORD))(v15 + 16))(v15, *((unsigned __int8 *)v23 + 24));
  _Block_object_dispose(&v22, 8);
  _Block_object_dispose(&buf, 8);

}

void __98__NPKPaymentWebServiceCompanionTargetDevice_setCommutePlanReminderWithCommutePlanAndPassResponse___block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;
  NPKProtoSetCommutePlanReminderForCommutePlanAndPassResponse *v4;
  void *v5;
  NPKProtoSetCommutePlanReminderForCommutePlanAndPassResponse *v6;
  NSObject *v7;
  _BOOL4 v8;
  NSObject *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint8_t v14[16];

  objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "objectForKey:", *(_QWORD *)(a1 + 40));
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  if (v3)
  {
    v4 = [NPKProtoSetCommutePlanReminderForCommutePlanAndPassResponse alloc];
    objc_msgSend(*(id *)(a1 + 48), "data");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    v6 = -[NPKProtoSetCommutePlanReminderForCommutePlanAndPassResponse initWithData:](v4, "initWithData:", v5);

    if (-[NPKProtoSetCommutePlanReminderForCommutePlanAndPassResponse pending](v6, "pending"))
    {
      objc_msgSend(v3, "setOrResetCleanupTimer");
    }
    else
    {
      objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v10, "removeObjectForKey:", *(_QWORD *)(a1 + 40));

      objc_msgSend(v3, "completionHandler");
      v11 = objc_claimAutoreleasedReturnValue();
      v12 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
      v13 = *(void **)(v12 + 40);
      *(_QWORD *)(v12 + 40) = v11;

    }
    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 24) = -[NPKProtoSetCommutePlanReminderForCommutePlanAndPassResponse success](v6, "success");

  }
  else
  {
    pk_Payment_log();
    v7 = objc_claimAutoreleasedReturnValue();
    v8 = os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT);

    if (v8)
    {
      pk_Payment_log();
      v9 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)v14 = 0;
        _os_log_impl(&dword_213518000, v9, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", v14, 2u);
      }

    }
  }

}

- (void)setCommutePlanReminder:(id)a3 forCommutePlan:(id)a4 pass:(id)a5 completion:(id)a6
{
  id v10;
  id v11;
  id v12;
  id v13;
  NSObject *v14;
  _BOOL4 v15;
  NSObject *v16;
  void *v17;
  NSObject *v18;
  id v19;
  id v20;
  id v21;
  id v22;
  _QWORD block[4];
  id v24;
  id v25;
  id v26;
  NPKPaymentWebServiceCompanionTargetDevice *v27;
  id v28;
  uint8_t buf[4];
  id v30;
  __int16 v31;
  void *v32;
  uint64_t v33;

  v33 = *MEMORY[0x24BDAC8D0];
  v10 = a3;
  v11 = a4;
  v12 = a5;
  v13 = a6;
  pk_Payment_log();
  v14 = objc_claimAutoreleasedReturnValue();
  v15 = os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT);

  if (v15)
  {
    pk_Payment_log();
    v16 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend(v12, "uniqueID");
      v17 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138412546;
      v30 = v10;
      v31 = 2112;
      v32 = v17;
      _os_log_impl(&dword_213518000, v16, OS_LOG_TYPE_DEFAULT, "Notice: Target device: setting commute plan reminder %@ for pass %@", buf, 0x16u);

    }
  }
  -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
  v18 = objc_claimAutoreleasedReturnValue();
  block[0] = MEMORY[0x24BDAC760];
  block[1] = 3221225472;
  block[2] = __99__NPKPaymentWebServiceCompanionTargetDevice_setCommutePlanReminder_forCommutePlan_pass_completion___block_invoke;
  block[3] = &unk_24CFE9350;
  v24 = v12;
  v25 = v10;
  v26 = v11;
  v27 = self;
  v28 = v13;
  v19 = v13;
  v20 = v11;
  v21 = v10;
  v22 = v12;
  dispatch_sync(v18, block);

}

void __99__NPKPaymentWebServiceCompanionTargetDevice_setCommutePlanReminder_forCommutePlan_pass_completion___block_invoke(uint64_t a1)
{
  NPKProtoSetCommutePlanReminderForCommutePlanAndPassRequest *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  id v8;
  void *v9;
  void *v10;
  void *v11;
  uint64_t v12;
  void *v13;
  void *v14;
  NSObject *v15;
  void *v16;
  void *v17;
  void *v18;
  NSObject *v19;
  _BOOL4 v20;
  const char *v21;
  NSObject *v22;
  os_log_type_t v23;
  NSObject *v24;
  _BOOL4 v25;
  _QWORD v26[4];
  id v27;
  uint8_t buf[4];
  void *v29;
  _QWORD v30[2];
  _QWORD v31[3];

  v31[2] = *MEMORY[0x24BDAC8D0];
  v2 = objc_alloc_init(NPKProtoSetCommutePlanReminderForCommutePlanAndPassRequest);
  objc_msgSend(*(id *)(a1 + 32), "uniqueID");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  -[NPKProtoSetCommutePlanReminderForCommutePlanAndPassRequest setUniqueID:](v2, "setUniqueID:", v3);

  objc_msgSend(*(id *)(a1 + 40), "timeInterval");
  -[NPKProtoSetCommutePlanReminderForCommutePlanAndPassRequest setReminderInterval:](v2, "setReminderInterval:");
  NPKSecureArchiveObject(*(void **)(a1 + 48));
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  -[NPKProtoSetCommutePlanReminderForCommutePlanAndPassRequest setCommutePlanBytes:](v2, "setCommutePlanBytes:", v4);

  v5 = (void *)MEMORY[0x24BDD17C8];
  objc_msgSend(*(id *)(a1 + 32), "uniqueID");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "stringWithFormat:", CFSTR("SetCommutePlanReminder-%@"), v6);
  v7 = (void *)objc_claimAutoreleasedReturnValue();

  v8 = objc_alloc(MEMORY[0x24BE4FE40]);
  -[NPKProtoSetCommutePlanReminderForCommutePlanAndPassRequest data](v2, "data");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v10 = (void *)objc_msgSend(v8, "initWithProtobufData:type:isResponse:", v9, 58, 0);

  v11 = *(void **)(a1 + 56);
  v12 = *MEMORY[0x24BE4FB18];
  v30[0] = *MEMORY[0x24BE4FB30];
  v30[1] = v12;
  v31[0] = &unk_24D056650;
  v31[1] = v7;
  objc_msgSend(MEMORY[0x24BDBCE70], "dictionaryWithObjects:forKeys:count:", v31, v30, 2);
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v11, "_sendProtobuf:responseExpected:extraOptions:", v10, 1, v13);
  v14 = (void *)objc_claimAutoreleasedReturnValue();

  if (v14)
  {
    if (*(_QWORD *)(a1 + 64))
    {
      v15 = MEMORY[0x2199B6780]();
      v26[0] = MEMORY[0x24BDAC760];
      v26[1] = 3221225472;
      v26[2] = __99__NPKPaymentWebServiceCompanionTargetDevice_setCommutePlanReminder_forCommutePlan_pass_completion___block_invoke_2;
      v26[3] = &unk_24CFE7B80;
      v27 = *(id *)(a1 + 64);
      v16 = (void *)MEMORY[0x2199B6780](v26);
      v17 = *(void **)(a1 + 56);
      v18 = (void *)MEMORY[0x2199B6780](v15);
      objc_msgSend(v17, "_trackOutstandingRequestWithMessageIdentifier:completionHandler:errorHandler:", v14, v18, v16);

LABEL_11:
      goto LABEL_12;
    }
    pk_Payment_log();
    v24 = objc_claimAutoreleasedReturnValue();
    v25 = os_log_type_enabled(v24, OS_LOG_TYPE_DEFAULT);

    if (v25)
    {
      pk_Payment_log();
      v15 = objc_claimAutoreleasedReturnValue();
      if (!os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
        goto LABEL_11;
      *(_DWORD *)buf = 138412290;
      v29 = v14;
      v21 = "Warning: No response expected for message with identifier %@";
      v22 = v15;
      v23 = OS_LOG_TYPE_DEFAULT;
      goto LABEL_10;
    }
  }
  else
  {
    pk_Payment_log();
    v19 = objc_claimAutoreleasedReturnValue();
    v20 = os_log_type_enabled(v19, OS_LOG_TYPE_ERROR);

    if (v20)
    {
      pk_Payment_log();
      v15 = objc_claimAutoreleasedReturnValue();
      if (!os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
        goto LABEL_11;
      *(_DWORD *)buf = 138412290;
      v29 = v10;
      v21 = "Error: No message identifier for protobuf %@";
      v22 = v15;
      v23 = OS_LOG_TYPE_ERROR;
LABEL_10:
      _os_log_impl(&dword_213518000, v22, v23, v21, buf, 0xCu);
      goto LABEL_11;
    }
  }
LABEL_12:

}

uint64_t __99__NPKPaymentWebServiceCompanionTargetDevice_setCommutePlanReminder_forCommutePlan_pass_completion___block_invoke_2(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 32);
  if (result)
    return (*(uint64_t (**)(uint64_t, _QWORD))(result + 16))(result, 0);
  return result;
}

- (void)commutePlanReminderWithCommutePlanAndPassResponse:(id)a3
{
  id v4;
  NSObject *v5;
  _BOOL4 v6;
  NSObject *v7;
  void *v8;
  void *v9;
  void *v10;
  NSObject *v11;
  NSObject *v12;
  _BOOL4 v13;
  NSObject *v14;
  id v15;
  void *v16;
  uint8_t v17[16];
  _QWORD block[5];
  id v19;
  id v20;
  __int128 *p_buf;
  uint64_t *v22;
  _QWORD *v23;
  _QWORD v24[5];
  id v25;
  uint64_t v26;
  double *v27;
  uint64_t v28;
  uint64_t v29;
  __int128 buf;
  uint64_t v31;
  uint64_t (*v32)(uint64_t, uint64_t);
  void (*v33)(uint64_t);
  id v34;
  uint64_t v35;

  v35 = *MEMORY[0x24BDAC8D0];
  v4 = a3;
  pk_Payment_log();
  v5 = objc_claimAutoreleasedReturnValue();
  v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    pk_Payment_log();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend(v4, "npkDescription");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      LODWORD(buf) = 138412290;
      *(_QWORD *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_213518000, v7, OS_LOG_TYPE_DEFAULT, "Notice: commute plan reminder incoming protobuf %@", (uint8_t *)&buf, 0xCu);

    }
  }
  objc_msgSend(v4, "context");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "incomingResponseIdentifier");
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  *(_QWORD *)&buf = 0;
  *((_QWORD *)&buf + 1) = &buf;
  v31 = 0x3032000000;
  v32 = __Block_byref_object_copy__342;
  v33 = __Block_byref_object_dispose__343;
  v34 = 0;
  v26 = 0;
  v27 = (double *)&v26;
  v28 = 0x2020000000;
  v29 = 0;
  v24[0] = 0;
  v24[1] = v24;
  v24[2] = 0x3032000000;
  v24[3] = __Block_byref_object_copy__23;
  v24[4] = __Block_byref_object_dispose__23;
  v25 = 0;
  if (v10)
  {
    -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
    v11 = objc_claimAutoreleasedReturnValue();
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 3221225472;
    block[2] = __95__NPKPaymentWebServiceCompanionTargetDevice_commutePlanReminderWithCommutePlanAndPassResponse___block_invoke;
    block[3] = &unk_24CFED060;
    block[4] = self;
    v19 = v10;
    v20 = v4;
    p_buf = &buf;
    v22 = &v26;
    v23 = v24;
    dispatch_sync(v11, block);

  }
  else
  {
    pk_Payment_log();
    v12 = objc_claimAutoreleasedReturnValue();
    v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      pk_Payment_log();
      v14 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)v17 = 0;
        _os_log_impl(&dword_213518000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v17, 2u);
      }

    }
  }
  if (*(_QWORD *)(*((_QWORD *)&buf + 1) + 40))
  {
    v15 = objc_alloc(MEMORY[0x24BE6EC50]);
    v16 = (void *)objc_msgSend(v15, "initWithTimeInterval:", v27[3]);
    (*(void (**)(void))(*(_QWORD *)(*((_QWORD *)&buf + 1) + 40) + 16))();

  }
  _Block_object_dispose(v24, 8);

  _Block_object_dispose(&v26, 8);
  _Block_object_dispose(&buf, 8);

}

void __95__NPKPaymentWebServiceCompanionTargetDevice_commutePlanReminderWithCommutePlanAndPassResponse___block_invoke(uint64_t a1)
{
  void *v1;
  void *v3;
  void *v4;
  NPKProtoCommutePlanReminderForCommutePlanAndPassResponse *v5;
  void *v6;
  NPKProtoCommutePlanReminderForCommutePlanAndPassResponse *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  _BOOL4 v13;
  NSObject *v14;
  void *v15;
  NSObject *v16;
  _BOOL4 v17;
  NSObject *v18;
  __int16 v19[8];

  objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "objectForKey:", *(_QWORD *)(a1 + 40));
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  if (v4)
  {
    v5 = [NPKProtoCommutePlanReminderForCommutePlanAndPassResponse alloc];
    objc_msgSend(*(id *)(a1 + 48), "data");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    v7 = -[NPKProtoCommutePlanReminderForCommutePlanAndPassResponse initWithData:](v5, "initWithData:", v6);

    objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "removeObjectForKey:", *(_QWORD *)(a1 + 40));

    objc_msgSend(v4, "completionHandler");
    v9 = objc_claimAutoreleasedReturnValue();
    v10 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
    v11 = *(void **)(v10 + 40);
    *(_QWORD *)(v10 + 40) = v9;

    -[NPKProtoCommutePlanReminderForCommutePlanAndPassResponse reminderInterval](v7, "reminderInterval");
    *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 24) = v12;
    v13 = -[NPKProtoCommutePlanReminderForCommutePlanAndPassResponse hasErrorData](v7, "hasErrorData");
    if (v13)
    {
      -[NPKProtoCommutePlanReminderForCommutePlanAndPassResponse errorData](v7, "errorData");
      v1 = (void *)objc_claimAutoreleasedReturnValue();
      v14 = objc_opt_class();
      NPKSecureUnarchiveObject(v1, v14);
      v15 = (void *)objc_claimAutoreleasedReturnValue();
    }
    else
    {
      v15 = 0;
    }
    objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 72) + 8) + 40), v15);
    if (v13)
    {

    }
  }
  else
  {
    pk_Payment_log();
    v16 = objc_claimAutoreleasedReturnValue();
    v17 = os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT);

    if (v17)
    {
      pk_Payment_log();
      v18 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT))
      {
        v19[0] = 0;
        _os_log_impl(&dword_213518000, v18, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", (uint8_t *)v19, 2u);
      }

    }
  }

}

- (void)commutePlanReminderForCommutePlan:(id)a3 pass:(id)a4 withCompletion:(id)a5
{
  id v8;
  id v9;
  id v10;
  NSObject *v11;
  _BOOL4 v12;
  NSObject *v13;
  void *v14;
  NSObject *v15;
  id v16;
  id v17;
  id v18;
  _QWORD v19[4];
  id v20;
  id v21;
  NPKPaymentWebServiceCompanionTargetDevice *v22;
  id v23;
  uint8_t buf[4];
  id v25;
  __int16 v26;
  void *v27;
  uint64_t v28;

  v28 = *MEMORY[0x24BDAC8D0];
  v8 = a3;
  v9 = a4;
  v10 = a5;
  pk_Payment_log();
  v11 = objc_claimAutoreleasedReturnValue();
  v12 = os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT);

  if (v12)
  {
    pk_Payment_log();
    v13 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend(v9, "uniqueID");
      v14 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138412546;
      v25 = v8;
      v26 = 2112;
      v27 = v14;
      _os_log_impl(&dword_213518000, v13, OS_LOG_TYPE_DEFAULT, "Notice: Target device: getting commute plan reminder for commute plan:%@ pass %@", buf, 0x16u);

    }
  }
  -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
  v15 = objc_claimAutoreleasedReturnValue();
  v19[0] = MEMORY[0x24BDAC760];
  v19[1] = 3221225472;
  v19[2] = __99__NPKPaymentWebServiceCompanionTargetDevice_commutePlanReminderForCommutePlan_pass_withCompletion___block_invoke;
  v19[3] = &unk_24CFE86A0;
  v20 = v9;
  v21 = v8;
  v22 = self;
  v23 = v10;
  v16 = v10;
  v17 = v8;
  v18 = v9;
  dispatch_sync(v15, v19);

}

void __99__NPKPaymentWebServiceCompanionTargetDevice_commutePlanReminderForCommutePlan_pass_withCompletion___block_invoke(uint64_t a1)
{
  NPKProtoCommutePlanReminderForCommutePlanAndPassRequest *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  id v8;
  void *v9;
  void *v10;
  void *v11;
  uint64_t v12;
  void *v13;
  void *v14;
  NSObject *v15;
  void *v16;
  void *v17;
  void *v18;
  NSObject *v19;
  _BOOL4 v20;
  const char *v21;
  NSObject *v22;
  os_log_type_t v23;
  NSObject *v24;
  _BOOL4 v25;
  _QWORD v26[4];
  id v27;
  uint8_t buf[4];
  void *v29;
  _QWORD v30[2];
  _QWORD v31[3];

  v31[2] = *MEMORY[0x24BDAC8D0];
  v2 = objc_alloc_init(NPKProtoCommutePlanReminderForCommutePlanAndPassRequest);
  objc_msgSend(*(id *)(a1 + 32), "uniqueID");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  -[NPKProtoCommutePlanReminderForCommutePlanAndPassRequest setUniqueID:](v2, "setUniqueID:", v3);

  NPKSecureArchiveObject(*(void **)(a1 + 40));
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  -[NPKProtoCommutePlanReminderForCommutePlanAndPassRequest setCommutePlanBytes:](v2, "setCommutePlanBytes:", v4);

  v5 = (void *)MEMORY[0x24BDD17C8];
  objc_msgSend(*(id *)(a1 + 32), "uniqueID");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "stringWithFormat:", CFSTR("CommutePlanReminder-%@"), v6);
  v7 = (void *)objc_claimAutoreleasedReturnValue();

  v8 = objc_alloc(MEMORY[0x24BE4FE40]);
  -[NPKProtoCommutePlanReminderForCommutePlanAndPassRequest data](v2, "data");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v10 = (void *)objc_msgSend(v8, "initWithProtobufData:type:isResponse:", v9, 66, 0);

  v11 = *(void **)(a1 + 48);
  v12 = *MEMORY[0x24BE4FB18];
  v30[0] = *MEMORY[0x24BE4FB30];
  v30[1] = v12;
  v31[0] = &unk_24D0566F0;
  v31[1] = v7;
  objc_msgSend(MEMORY[0x24BDBCE70], "dictionaryWithObjects:forKeys:count:", v31, v30, 2);
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v11, "_sendProtobuf:responseExpected:extraOptions:", v10, 1, v13);
  v14 = (void *)objc_claimAutoreleasedReturnValue();

  if (v14)
  {
    if (*(_QWORD *)(a1 + 56))
    {
      v15 = MEMORY[0x2199B6780]();
      v26[0] = MEMORY[0x24BDAC760];
      v26[1] = 3221225472;
      v26[2] = __99__NPKPaymentWebServiceCompanionTargetDevice_commutePlanReminderForCommutePlan_pass_withCompletion___block_invoke_2;
      v26[3] = &unk_24CFE7B80;
      v27 = *(id *)(a1 + 56);
      v16 = (void *)MEMORY[0x2199B6780](v26);
      v17 = *(void **)(a1 + 48);
      v18 = (void *)MEMORY[0x2199B6780](v15);
      objc_msgSend(v17, "_trackOutstandingRequestWithMessageIdentifier:completionHandler:errorHandler:", v14, v18, v16);

LABEL_11:
      goto LABEL_12;
    }
    pk_Payment_log();
    v24 = objc_claimAutoreleasedReturnValue();
    v25 = os_log_type_enabled(v24, OS_LOG_TYPE_DEFAULT);

    if (v25)
    {
      pk_Payment_log();
      v15 = objc_claimAutoreleasedReturnValue();
      if (!os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
        goto LABEL_11;
      *(_DWORD *)buf = 138412290;
      v29 = v14;
      v21 = "Warning: No response expected for message with identifier %@";
      v22 = v15;
      v23 = OS_LOG_TYPE_DEFAULT;
      goto LABEL_10;
    }
  }
  else
  {
    pk_Payment_log();
    v19 = objc_claimAutoreleasedReturnValue();
    v20 = os_log_type_enabled(v19, OS_LOG_TYPE_ERROR);

    if (v20)
    {
      pk_Payment_log();
      v15 = objc_claimAutoreleasedReturnValue();
      if (!os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
        goto LABEL_11;
      *(_DWORD *)buf = 138412290;
      v29 = v10;
      v21 = "Error: No message identifier for protobuf %@";
      v22 = v15;
      v23 = OS_LOG_TYPE_ERROR;
LABEL_10:
      _os_log_impl(&dword_213518000, v22, v23, v21, buf, 0xCu);
      goto LABEL_11;
    }
  }
LABEL_12:

}

uint64_t __99__NPKPaymentWebServiceCompanionTargetDevice_commutePlanReminderForCommutePlan_pass_withCompletion___block_invoke_2(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 32);
  if (result)
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(result + 16))(result, 0, a2);
  return result;
}

- (void)enableServiceModeResponse:(id)a3
{
  id v4;
  NSObject *v5;
  _BOOL4 v6;
  NSObject *v7;
  void *v8;
  void *v9;
  void *v10;
  NSObject *v11;
  NSObject *v12;
  _BOOL4 v13;
  NSObject *v14;
  uint64_t v15;
  uint8_t v16[8];
  _QWORD block[5];
  id v18;
  id v19;
  uint64_t *v20;
  __int128 *p_buf;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  char v25;
  __int128 buf;
  uint64_t v27;
  uint64_t (*v28)(uint64_t, uint64_t);
  void (*v29)(uint64_t);
  id v30;
  uint64_t v31;

  v31 = *MEMORY[0x24BDAC8D0];
  v4 = a3;
  pk_Payment_log();
  v5 = objc_claimAutoreleasedReturnValue();
  v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    pk_Payment_log();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend(v4, "npkDescription");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      LODWORD(buf) = 138412290;
      *(_QWORD *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_213518000, v7, OS_LOG_TYPE_DEFAULT, "Notice: incoming protobuf %@", (uint8_t *)&buf, 0xCu);

    }
  }
  objc_msgSend(v4, "context");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "incomingResponseIdentifier");
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  *(_QWORD *)&buf = 0;
  *((_QWORD *)&buf + 1) = &buf;
  v27 = 0x3032000000;
  v28 = __Block_byref_object_copy__342;
  v29 = __Block_byref_object_dispose__343;
  v30 = 0;
  v22 = 0;
  v23 = &v22;
  v24 = 0x2020000000;
  v25 = 0;
  if (v10)
  {
    -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
    v11 = objc_claimAutoreleasedReturnValue();
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 3221225472;
    block[2] = __71__NPKPaymentWebServiceCompanionTargetDevice_enableServiceModeResponse___block_invoke;
    block[3] = &unk_24CFED0D8;
    block[4] = self;
    v18 = v10;
    v19 = v4;
    v20 = &v22;
    p_buf = &buf;
    dispatch_sync(v11, block);

  }
  else
  {
    pk_Payment_log();
    v12 = objc_claimAutoreleasedReturnValue();
    v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      pk_Payment_log();
      v14 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)v16 = 0;
        _os_log_impl(&dword_213518000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v16, 2u);
      }

    }
  }
  v15 = *(_QWORD *)(*((_QWORD *)&buf + 1) + 40);
  if (v15)
    (*(void (**)(uint64_t, _QWORD))(v15 + 16))(v15, *((unsigned __int8 *)v23 + 24));
  _Block_object_dispose(&v22, 8);
  _Block_object_dispose(&buf, 8);

}

void __71__NPKPaymentWebServiceCompanionTargetDevice_enableServiceModeResponse___block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;
  NPKProtoEnableServiceModeResponse *v4;
  void *v5;
  NPKProtoEnableServiceModeResponse *v6;
  NSObject *v7;
  _BOOL4 v8;
  NSObject *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint8_t v14[16];

  objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "objectForKey:", *(_QWORD *)(a1 + 40));
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  if (v3)
  {
    v4 = [NPKProtoEnableServiceModeResponse alloc];
    objc_msgSend(*(id *)(a1 + 48), "data");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    v6 = -[NPKProtoEnableServiceModeResponse initWithData:](v4, "initWithData:", v5);

    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 24) = -[NPKProtoEnableServiceModeResponse unlockRequired](v6, "unlockRequired");
    if (-[NPKProtoEnableServiceModeResponse pending](v6, "pending"))
    {
      objc_msgSend(v3, "setOrResetCleanupTimer");
    }
    else
    {
      objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v10, "removeObjectForKey:", *(_QWORD *)(a1 + 40));

      objc_msgSend(v3, "completionHandler");
      v11 = objc_claimAutoreleasedReturnValue();
      v12 = *(_QWORD *)(*(_QWORD *)(a1 + 64) + 8);
      v13 = *(void **)(v12 + 40);
      *(_QWORD *)(v12 + 40) = v11;

    }
  }
  else
  {
    pk_Payment_log();
    v7 = objc_claimAutoreleasedReturnValue();
    v8 = os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT);

    if (v8)
    {
      pk_Payment_log();
      v9 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)v14 = 0;
        _os_log_impl(&dword_213518000, v9, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", v14, 2u);
      }

    }
  }

}

- (void)cancelOutstandingSetDefaultExpressPassRequestsWithExpressMode:(id)a3
{
  id v4;
  NSObject *v5;
  _BOOL4 v6;
  NSObject *v7;
  NSObject *v8;
  id v9;
  _QWORD v10[4];
  id v11;
  NPKPaymentWebServiceCompanionTargetDevice *v12;
  uint8_t buf[4];
  id v14;
  uint64_t v15;

  v15 = *MEMORY[0x24BDAC8D0];
  v4 = a3;
  pk_Payment_log();
  v5 = objc_claimAutoreleasedReturnValue();
  v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    pk_Payment_log();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138412290;
      v14 = v4;
      _os_log_impl(&dword_213518000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Sending message to cancel outstanding set default express pass requests with mode: %@", buf, 0xCu);
    }

  }
  -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
  v8 = objc_claimAutoreleasedReturnValue();
  v10[0] = MEMORY[0x24BDAC760];
  v10[1] = 3221225472;
  v10[2] = __107__NPKPaymentWebServiceCompanionTargetDevice_cancelOutstandingSetDefaultExpressPassRequestsWithExpressMode___block_invoke;
  v10[3] = &unk_24CFE7E40;
  v11 = v4;
  v12 = self;
  v9 = v4;
  dispatch_sync(v8, v10);

}

void __107__NPKPaymentWebServiceCompanionTargetDevice_cancelOutstandingSetDefaultExpressPassRequestsWithExpressMode___block_invoke(uint64_t a1)
{
  void *v2;
  NPKProtoSetExpressPassRequest *v3;
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  void *v11;
  void *v12;
  NSObject *v13;
  _BOOL4 v14;
  NSObject *v15;
  uint8_t buf[4];
  void *v17;
  _QWORD v18[2];
  _QWORD v19[3];

  v19[2] = *MEMORY[0x24BDAC8D0];
  v2 = (void *)objc_msgSend(objc_alloc(MEMORY[0x24BE6EAF0]), "initForExpressMode:withPassUniqueIdentifier:paymentApplicationIdentifier:", *(_QWORD *)(a1 + 32), 0, 0);
  v3 = objc_alloc_init(NPKProtoSetExpressPassRequest);
  -[NPKProtoSetExpressPassRequest setCancelOutstandingRequests:](v3, "setCancelOutstandingRequests:", 1);
  NPKSecureArchiveObject(v2);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  -[NPKProtoSetExpressPassRequest setExpressPassInformation:](v3, "setExpressPassInformation:", v4);

  objc_msgSend(MEMORY[0x24BDD17C8], "stringWithFormat:", CFSTR("SetExpressPassIdentifier-%@"), *(_QWORD *)(a1 + 32));
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = objc_alloc(MEMORY[0x24BE4FE40]);
  -[NPKProtoSetExpressPassRequest data](v3, "data");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = (void *)objc_msgSend(v6, "initWithProtobufData:type:isResponse:", v7, 22, 0);

  v9 = *(void **)(a1 + 40);
  v10 = *MEMORY[0x24BE4FB18];
  v18[0] = *MEMORY[0x24BE4FA90];
  v18[1] = v10;
  v19[0] = MEMORY[0x24BDBD1C8];
  v19[1] = v5;
  objc_msgSend(MEMORY[0x24BDBCE70], "dictionaryWithObjects:forKeys:count:", v19, v18, 2);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "_sendProtobuf:responseExpected:extraOptions:", v8, 0, v11);
  v12 = (void *)objc_claimAutoreleasedReturnValue();

  if (!v12)
  {
    pk_Payment_log();
    v13 = objc_claimAutoreleasedReturnValue();
    v14 = os_log_type_enabled(v13, OS_LOG_TYPE_ERROR);

    if (v14)
    {
      pk_Payment_log();
      v15 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 138412290;
        v17 = v8;
        _os_log_impl(&dword_213518000, v15, OS_LOG_TYPE_ERROR, "Error: No message identifier for protobuf %@", buf, 0xCu);
      }

    }
  }

}

- (void)enableServiceModeForPassWithUniqueIdentifier:(id)a3 completion:(id)a4
{
  id v6;
  id v7;
  NSObject *v8;
  _BOOL4 v9;
  NSObject *v10;
  NSObject *v11;
  id v12;
  id v13;
  _QWORD block[4];
  id v15;
  NPKPaymentWebServiceCompanionTargetDevice *v16;
  id v17;
  uint8_t buf[4];
  id v19;
  uint64_t v20;

  v20 = *MEMORY[0x24BDAC8D0];
  v6 = a3;
  v7 = a4;
  pk_Payment_log();
  v8 = objc_claimAutoreleasedReturnValue();
  v9 = os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT);

  if (v9)
  {
    pk_Payment_log();
    v10 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138412290;
      v19 = v6;
      _os_log_impl(&dword_213518000, v10, OS_LOG_TYPE_DEFAULT, "Notice: Target device: enable service mode for unique ID %@", buf, 0xCu);
    }

  }
  -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
  v11 = objc_claimAutoreleasedReturnValue();
  block[0] = MEMORY[0x24BDAC760];
  block[1] = 3221225472;
  block[2] = __101__NPKPaymentWebServiceCompanionTargetDevice_enableServiceModeForPassWithUniqueIdentifier_completion___block_invoke;
  block[3] = &unk_24CFE84E8;
  v15 = v6;
  v16 = self;
  v17 = v7;
  v12 = v7;
  v13 = v6;
  dispatch_sync(v11, block);

}

void __101__NPKPaymentWebServiceCompanionTargetDevice_enableServiceModeForPassWithUniqueIdentifier_completion___block_invoke(uint64_t a1)
{
  NPKProtoEnableServiceModeRequest *v2;
  id v3;
  void *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  NSObject *v10;
  void *v11;
  void *v12;
  void *v13;
  NSObject *v14;
  _BOOL4 v15;
  const char *v16;
  NSObject *v17;
  os_log_type_t v18;
  NSObject *v19;
  _BOOL4 v20;
  _QWORD v21[4];
  id v22;
  uint8_t buf[4];
  void *v24;
  _QWORD v25[2];
  _QWORD v26[3];

  v26[2] = *MEMORY[0x24BDAC8D0];
  v2 = objc_alloc_init(NPKProtoEnableServiceModeRequest);
  -[NPKProtoEnableServiceModeRequest setUniqueID:](v2, "setUniqueID:", *(_QWORD *)(a1 + 32));
  v3 = objc_alloc(MEMORY[0x24BE4FE40]);
  -[NPKProtoEnableServiceModeRequest data](v2, "data");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = (void *)objc_msgSend(v3, "initWithProtobufData:type:isResponse:", v4, 27, 0);

  v6 = *(void **)(a1 + 40);
  v7 = *MEMORY[0x24BE4FB18];
  v25[0] = *MEMORY[0x24BE4FA90];
  v25[1] = v7;
  v26[0] = MEMORY[0x24BDBD1C8];
  v26[1] = CFSTR("EnableServiceModeIdentifier");
  objc_msgSend(MEMORY[0x24BDBCE70], "dictionaryWithObjects:forKeys:count:", v26, v25, 2);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "_sendProtobuf:responseExpected:extraOptions:", v5, 1, v8);
  v9 = (void *)objc_claimAutoreleasedReturnValue();

  if (v9)
  {
    if (*(_QWORD *)(a1 + 48))
    {
      v10 = MEMORY[0x2199B6780]();
      v21[0] = MEMORY[0x24BDAC760];
      v21[1] = 3221225472;
      v21[2] = __101__NPKPaymentWebServiceCompanionTargetDevice_enableServiceModeForPassWithUniqueIdentifier_completion___block_invoke_2;
      v21[3] = &unk_24CFE7B80;
      v22 = *(id *)(a1 + 48);
      v11 = (void *)MEMORY[0x2199B6780](v21);
      v12 = *(void **)(a1 + 40);
      v13 = (void *)MEMORY[0x2199B6780](v10);
      objc_msgSend(v12, "_trackOutstandingRequestWithMessageIdentifier:completionHandler:errorHandler:", v9, v13, v11);

LABEL_11:
      goto LABEL_12;
    }
    pk_Payment_log();
    v19 = objc_claimAutoreleasedReturnValue();
    v20 = os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT);

    if (v20)
    {
      pk_Payment_log();
      v10 = objc_claimAutoreleasedReturnValue();
      if (!os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
        goto LABEL_11;
      *(_DWORD *)buf = 138412290;
      v24 = v9;
      v16 = "Warning: No response expected for message with identifier %@";
      v17 = v10;
      v18 = OS_LOG_TYPE_DEFAULT;
      goto LABEL_10;
    }
  }
  else
  {
    pk_Payment_log();
    v14 = objc_claimAutoreleasedReturnValue();
    v15 = os_log_type_enabled(v14, OS_LOG_TYPE_ERROR);

    if (v15)
    {
      pk_Payment_log();
      v10 = objc_claimAutoreleasedReturnValue();
      if (!os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
        goto LABEL_11;
      *(_DWORD *)buf = 138412290;
      v24 = v5;
      v16 = "Error: No message identifier for protobuf %@";
      v17 = v10;
      v18 = OS_LOG_TYPE_ERROR;
LABEL_10:
      _os_log_impl(&dword_213518000, v17, v18, v16, buf, 0xCu);
      goto LABEL_11;
    }
  }
LABEL_12:

}

uint64_t __101__NPKPaymentWebServiceCompanionTargetDevice_enableServiceModeForPassWithUniqueIdentifier_completion___block_invoke_2(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 32);
  if (result)
    return (*(uint64_t (**)(uint64_t, _QWORD))(result + 16))(result, 0);
  return result;
}

- (void)cancelOutstandingEnableServiceModeRequests
{
  NSObject *v3;
  _BOOL4 v4;
  NSObject *v5;
  NSObject *v6;
  _QWORD block[5];
  uint8_t buf[16];

  pk_Payment_log();
  v3 = objc_claimAutoreleasedReturnValue();
  v4 = os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT);

  if (v4)
  {
    pk_Payment_log();
    v5 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl(&dword_213518000, v5, OS_LOG_TYPE_DEFAULT, "Notice: Sending message to cancel outstanding service mode requests", buf, 2u);
    }

  }
  -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
  v6 = objc_claimAutoreleasedReturnValue();
  block[0] = MEMORY[0x24BDAC760];
  block[1] = 3221225472;
  block[2] = __87__NPKPaymentWebServiceCompanionTargetDevice_cancelOutstandingEnableServiceModeRequests__block_invoke;
  block[3] = &unk_24CFE7998;
  block[4] = self;
  dispatch_sync(v6, block);

}

void __87__NPKPaymentWebServiceCompanionTargetDevice_cancelOutstandingEnableServiceModeRequests__block_invoke(uint64_t a1)
{
  NPKProtoEnableServiceModeRequest *v2;
  id v3;
  void *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  NSObject *v10;
  _BOOL4 v11;
  NSObject *v12;
  int v13;
  void *v14;
  _QWORD v15[2];
  _QWORD v16[3];

  v16[2] = *MEMORY[0x24BDAC8D0];
  v2 = objc_alloc_init(NPKProtoEnableServiceModeRequest);
  -[NPKProtoEnableServiceModeRequest setCancelOutstandingRequests:](v2, "setCancelOutstandingRequests:", 1);
  v3 = objc_alloc(MEMORY[0x24BE4FE40]);
  -[NPKProtoEnableServiceModeRequest data](v2, "data");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = (void *)objc_msgSend(v3, "initWithProtobufData:type:isResponse:", v4, 27, 0);

  v6 = *(void **)(a1 + 32);
  v7 = *MEMORY[0x24BE4FB18];
  v15[0] = *MEMORY[0x24BE4FA90];
  v15[1] = v7;
  v16[0] = MEMORY[0x24BDBD1C8];
  v16[1] = CFSTR("EnableServiceModeIdentifier");
  objc_msgSend(MEMORY[0x24BDBCE70], "dictionaryWithObjects:forKeys:count:", v16, v15, 2);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "_sendProtobuf:responseExpected:extraOptions:", v5, 0, v8);
  v9 = (void *)objc_claimAutoreleasedReturnValue();

  if (!v9)
  {
    pk_Payment_log();
    v10 = objc_claimAutoreleasedReturnValue();
    v11 = os_log_type_enabled(v10, OS_LOG_TYPE_ERROR);

    if (v11)
    {
      pk_Payment_log();
      v12 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR))
      {
        v13 = 138412290;
        v14 = v5;
        _os_log_impl(&dword_213518000, v12, OS_LOG_TYPE_ERROR, "Error: No message identifier for protobuf %@", (uint8_t *)&v13, 0xCu);
      }

    }
  }

}

- (void)remotePassUpgradeResponse:(id)a3
{
  NSObject *v4;
  _BOOL4 v5;
  NSObject *v6;
  void *v7;
  void *v8;
  NSObject *v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  NSObject *v13;
  _BOOL4 v14;
  NSObject *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t i;
  void *v20;
  void *v21;
  void *v22;
  int v23;
  id v24;
  void *v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  void *v30;
  id v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  _QWORD block[5];
  id v37;
  id v38;
  __int128 *p_buf;
  uint64_t *v40;
  uint64_t *v41;
  uint64_t *v42;
  uint64_t *v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t (*v48)(uint64_t, uint64_t);
  void (*v49)(uint64_t);
  id v50;
  uint64_t v51;
  uint64_t *v52;
  uint64_t v53;
  uint64_t (*v54)(uint64_t, uint64_t);
  void (*v55)(uint64_t);
  id v56;
  uint64_t v57;
  uint64_t *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t *v62;
  uint64_t v63;
  uint64_t (*v64)(uint64_t, uint64_t);
  void (*v65)(uint64_t);
  id v66;
  uint64_t v67;
  uint64_t *v68;
  uint64_t v69;
  uint64_t (*v70)(uint64_t, uint64_t);
  void (*v71)(uint64_t);
  id v72;
  uint8_t v73[128];
  __int128 buf;
  uint64_t v75;
  uint64_t (*v76)(uint64_t, uint64_t);
  void (*v77)(uint64_t);
  id v78;
  uint64_t v79;

  v79 = *MEMORY[0x24BDAC8D0];
  v31 = a3;
  pk_General_log();
  v4 = objc_claimAutoreleasedReturnValue();
  v5 = os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT);

  if (v5)
  {
    pk_General_log();
    v6 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend(v31, "npkDescription");
      v7 = (void *)objc_claimAutoreleasedReturnValue();
      LODWORD(buf) = 138412290;
      *(_QWORD *)((char *)&buf + 4) = v7;
      _os_log_impl(&dword_213518000, v6, OS_LOG_TYPE_DEFAULT, "Notice: Remote update pass. Received response:%@", (uint8_t *)&buf, 0xCu);

    }
  }
  objc_msgSend(v31, "context");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "incomingResponseIdentifier");
  v30 = (void *)objc_claimAutoreleasedReturnValue();

  if (v30)
  {
    *(_QWORD *)&buf = 0;
    *((_QWORD *)&buf + 1) = &buf;
    v75 = 0x3032000000;
    v76 = __Block_byref_object_copy__342;
    v77 = __Block_byref_object_dispose__343;
    v78 = 0;
    v67 = 0;
    v68 = &v67;
    v69 = 0x3032000000;
    v70 = __Block_byref_object_copy__23;
    v71 = __Block_byref_object_dispose__23;
    v72 = 0;
    v61 = 0;
    v62 = &v61;
    v63 = 0x3032000000;
    v64 = __Block_byref_object_copy__23;
    v65 = __Block_byref_object_dispose__23;
    v66 = 0;
    v57 = 0;
    v58 = &v57;
    v59 = 0x2020000000;
    v60 = 0;
    v51 = 0;
    v52 = &v51;
    v53 = 0x3032000000;
    v54 = __Block_byref_object_copy__23;
    v55 = __Block_byref_object_dispose__23;
    v56 = 0;
    v45 = 0;
    v46 = &v45;
    v47 = 0x3032000000;
    v48 = __Block_byref_object_copy__23;
    v49 = __Block_byref_object_dispose__23;
    v50 = 0;
    -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
    v9 = objc_claimAutoreleasedReturnValue();
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 3221225472;
    block[2] = __71__NPKPaymentWebServiceCompanionTargetDevice_remotePassUpgradeResponse___block_invoke;
    block[3] = &unk_24CFED458;
    block[4] = self;
    v37 = v30;
    v38 = v31;
    p_buf = &buf;
    v40 = &v57;
    v41 = &v61;
    v42 = &v67;
    v43 = &v45;
    v44 = &v51;
    dispatch_sync(v9, block);

    if (*(_QWORD *)(*((_QWORD *)&buf + 1) + 40))
    {
      if (objc_msgSend((id)v52[5], "count"))
      {
        v10 = *(_QWORD *)(*((_QWORD *)&buf + 1) + 40);
        v11 = v62[5];
        objc_msgSend((id)v68[5], "paymentPass");
        v12 = (id)objc_claimAutoreleasedReturnValue();
        (*(void (**)(uint64_t, uint64_t, id, uint64_t, uint64_t))(v10 + 16))(v10, v11, v12, v52[5], v58[3]);
      }
      else
      {
        v12 = objc_alloc_init(MEMORY[0x24BDBCEF0]);
        v34 = 0u;
        v35 = 0u;
        v32 = 0u;
        v33 = 0u;
        v16 = (id)v46[5];
        v17 = objc_msgSend(v16, "countByEnumeratingWithState:objects:count:", &v32, v73, 16);
        if (v17)
        {
          v18 = *(_QWORD *)v33;
          do
          {
            for (i = 0; i != v17; ++i)
            {
              if (*(_QWORD *)v33 != v18)
                objc_enumerationMutation(v16);
              v20 = *(void **)(*((_QWORD *)&v32 + 1) + 8 * i);
              objc_msgSend(v20, "passUniqueIdentifier", v30);
              v21 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend((id)v68[5], "uniqueID");
              v22 = (void *)objc_claimAutoreleasedReturnValue();
              v23 = objc_msgSend(v21, "isEqualToString:", v22);

              if (v23)
              {
                v24 = objc_alloc(MEMORY[0x24BE6EAE8]);
                objc_msgSend((id)v68[5], "secureElementPass");
                v25 = (void *)objc_claimAutoreleasedReturnValue();
                v26 = (void *)objc_msgSend(v24, "initWithPassInformation:forSecureElementPass:", v20, v25);

              }
              else
              {
                v26 = (void *)objc_msgSend(objc_alloc(MEMORY[0x24BE6EAE8]), "initWithPassInformation:isNFCExpressEnabled:isUWBExpressEnabled:", v20, 1, 0);
              }
              objc_msgSend(v12, "pk_safelyAddObject:", v26);

            }
            v17 = objc_msgSend(v16, "countByEnumeratingWithState:objects:count:", &v32, v73, 16);
          }
          while (v17);
        }

        v27 = *(_QWORD *)(*((_QWORD *)&buf + 1) + 40);
        v28 = v62[5];
        objc_msgSend((id)v68[5], "paymentPass");
        v29 = (void *)objc_claimAutoreleasedReturnValue();
        (*(void (**)(uint64_t, uint64_t, void *, id, uint64_t))(v27 + 16))(v27, v28, v29, v12, v58[3]);

      }
    }

    _Block_object_dispose(&v45, 8);
    _Block_object_dispose(&v51, 8);

    _Block_object_dispose(&v57, 8);
    _Block_object_dispose(&v61, 8);

    _Block_object_dispose(&v67, 8);
    _Block_object_dispose(&buf, 8);

  }
  else
  {
    pk_Payment_log();
    v13 = objc_claimAutoreleasedReturnValue();
    v14 = os_log_type_enabled(v13, OS_LOG_TYPE_ERROR);

    if (v14)
    {
      pk_Payment_log();
      v15 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
      {
        LOWORD(buf) = 0;
        _os_log_impl(&dword_213518000, v15, OS_LOG_TYPE_ERROR, "Error: Remote update pass. No associated message ID in response", (uint8_t *)&buf, 2u);
      }

    }
  }

}

void __71__NPKPaymentWebServiceCompanionTargetDevice_remotePassUpgradeResponse___block_invoke(uint64_t a1)
{
  void *v1;
  void *v3;
  void *v4;
  NPKProtoRemotePassUpdateResponse *v5;
  void *v6;
  NPKProtoRemotePassUpdateResponse *v7;
  NSObject *v8;
  _BOOL4 v9;
  NSObject *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  _BOOL4 v19;
  NSObject *v20;
  void *v21;
  void *v22;
  void *v23;
  NSObject *v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  void *v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  void *v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  __int16 v38[8];

  objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "objectForKey:", *(_QWORD *)(a1 + 40));
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  if (v4)
  {
    v5 = [NPKProtoRemotePassUpdateResponse alloc];
    objc_msgSend(*(id *)(a1 + 48), "data");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    v7 = -[NPKProtoRemotePassUpdateResponse initWithData:](v5, "initWithData:", v6);

    if (-[NPKProtoRemotePassUpdateResponse pending](v7, "pending"))
    {
      objc_msgSend(v4, "setOrResetCleanupTimer");
    }
    else
    {
      objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v11, "removeObjectForKey:", *(_QWORD *)(a1 + 40));

    }
    objc_msgSend(v4, "completionHandler");
    v12 = objc_claimAutoreleasedReturnValue();
    v13 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
    v14 = *(void **)(v13 + 40);
    *(_QWORD *)(v13 + 40) = v12;

    switch(-[NPKProtoRemotePassUpdateResponse upgradeStatus](v7, "upgradeStatus"))
    {
      case 0:
        v15 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
        v16 = *(void **)(v15 + 40);
        *(_QWORD *)(v15 + 40) = 0;

        break;
      case 1:
        *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 24) = 0;
        break;
      case 2:
        v17 = *(_QWORD *)(*(_QWORD *)(a1 + 64) + 8);
        v18 = 1;
        goto LABEL_14;
      case 3:
        v17 = *(_QWORD *)(*(_QWORD *)(a1 + 64) + 8);
        v18 = 2;
LABEL_14:
        *(_QWORD *)(v17 + 24) = v18;
        break;
      default:
        break;
    }
    v19 = -[NPKProtoRemotePassUpdateResponse hasErrorData](v7, "hasErrorData");
    if (v19)
    {
      -[NPKProtoRemotePassUpdateResponse errorData](v7, "errorData");
      v1 = (void *)objc_claimAutoreleasedReturnValue();
      v20 = objc_opt_class();
      NPKSecureUnarchiveObject(v1, v20);
      v21 = (void *)objc_claimAutoreleasedReturnValue();
    }
    else
    {
      v21 = 0;
    }
    objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 72) + 8) + 40), v21);
    if (v19)
    {

    }
    -[NPKProtoRemotePassUpdateResponse pass](v7, "pass");
    v22 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v22, "passData");
    v23 = (void *)objc_claimAutoreleasedReturnValue();
    v24 = objc_opt_class();
    NPKSecureUnarchiveObject(v23, v24);
    v25 = objc_claimAutoreleasedReturnValue();
    v26 = *(_QWORD *)(*(_QWORD *)(a1 + 80) + 8);
    v27 = *(void **)(v26 + 40);
    *(_QWORD *)(v26 + 40) = v25;

    v28 = *(void **)(a1 + 32);
    -[NPKProtoRemotePassUpdateResponse expressPassInformations](v7, "expressPassInformations");
    v29 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v28, "_expressPassesInformationFromDataArray:", v29);
    v30 = objc_claimAutoreleasedReturnValue();
    v31 = *(_QWORD *)(*(_QWORD *)(a1 + 88) + 8);
    v32 = *(void **)(v31 + 40);
    *(_QWORD *)(v31 + 40) = v30;

    v33 = *(void **)(a1 + 32);
    -[NPKProtoRemotePassUpdateResponse expressPassConfigurations](v7, "expressPassConfigurations");
    v34 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v33, "_expressPassesConfigurationFromDataArray:", v34);
    v35 = objc_claimAutoreleasedReturnValue();
    v36 = *(_QWORD *)(*(_QWORD *)(a1 + 96) + 8);
    v37 = *(void **)(v36 + 40);
    *(_QWORD *)(v36 + 40) = v35;

  }
  else
  {
    pk_Payment_log();
    v8 = objc_claimAutoreleasedReturnValue();
    v9 = os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT);

    if (v9)
    {
      pk_Payment_log();
      v10 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
      {
        v38[0] = 0;
        _os_log_impl(&dword_213518000, v10, OS_LOG_TYPE_DEFAULT, "Warning: Remote update pass. Got response with no associated message handler", (uint8_t *)v38, 2u);
      }

    }
  }

}

- (void)remotePassUpgradeWithRequest:(id)a3 pass:(id)a4 requireAuthorization:(BOOL)a5 notifyUserOnPairedDevice:(BOOL)a6 updateBlock:(id)a7
{
  id v12;
  id v13;
  id v14;
  NSObject *v15;
  id v16;
  id v17;
  id v18;
  _QWORD block[4];
  id v20;
  id v21;
  NPKPaymentWebServiceCompanionTargetDevice *v22;
  id v23;
  BOOL v24;
  BOOL v25;

  v12 = a3;
  v13 = a4;
  v14 = a7;
  -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
  v15 = objc_claimAutoreleasedReturnValue();
  block[0] = MEMORY[0x24BDAC760];
  block[1] = 3221225472;
  block[2] = __137__NPKPaymentWebServiceCompanionTargetDevice_remotePassUpgradeWithRequest_pass_requireAuthorization_notifyUserOnPairedDevice_updateBlock___block_invoke;
  block[3] = &unk_24CFED480;
  v20 = v13;
  v21 = v12;
  v24 = a5;
  v25 = a6;
  v22 = self;
  v23 = v14;
  v16 = v14;
  v17 = v12;
  v18 = v13;
  dispatch_sync(v15, block);

}

void __137__NPKPaymentWebServiceCompanionTargetDevice_remotePassUpgradeWithRequest_pass_requireAuthorization_notifyUserOnPairedDevice_updateBlock___block_invoke(uint64_t a1)
{
  NSObject *v2;
  _BOOL4 v3;
  NSObject *v4;
  void *v5;
  NPKProtoPass *v6;
  void *v7;
  NPKProtoRemotePassUpdateRequest *v8;
  void *v9;
  void *v10;
  id v11;
  void *v12;
  void *v13;
  void *v14;
  uint64_t v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  NSObject *v20;
  NSObject *v21;
  _BOOL4 v22;
  void *v23;
  _QWORD v24[4];
  id v25;
  NSObject *v26;
  uint8_t buf[4];
  void *v28;
  __int16 v29;
  void *v30;
  _QWORD v31[2];
  _QWORD v32[3];

  v32[2] = *MEMORY[0x24BDAC8D0];
  pk_General_log();
  v2 = objc_claimAutoreleasedReturnValue();
  v3 = os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT);

  if (v3)
  {
    pk_General_log();
    v4 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend(*(id *)(a1 + 32), "uniqueID");
      v5 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138412290;
      v28 = v5;
      _os_log_impl(&dword_213518000, v4, OS_LOG_TYPE_DEFAULT, "Notice: Remote update pass with uniqueID:%@. Sending message", buf, 0xCu);

    }
  }
  v6 = objc_alloc_init(NPKProtoPass);
  objc_msgSend(*(id *)(a1 + 32), "flushLoadedImageSets");
  NPKSecureArchiveObject(*(void **)(a1 + 32));
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  -[NPKProtoPass setPassData:](v6, "setPassData:", v7);

  v8 = objc_alloc_init(NPKProtoRemotePassUpdateRequest);
  objc_msgSend(*(id *)(a1 + 32), "uniqueID");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  -[NPKProtoRemotePassUpdateRequest setPassID:](v8, "setPassID:", v9);

  -[NPKProtoRemotePassUpdateRequest setPass:](v8, "setPass:", v6);
  NPKSecureArchiveObject(*(void **)(a1 + 40));
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  -[NPKProtoRemotePassUpdateRequest setUpdateRequestData:](v8, "setUpdateRequestData:", v10);

  -[NPKProtoRemotePassUpdateRequest setRequestAuthorization:](v8, "setRequestAuthorization:", *(unsigned __int8 *)(a1 + 64));
  -[NPKProtoRemotePassUpdateRequest setShouldNotifyUser:](v8, "setShouldNotifyUser:", *(unsigned __int8 *)(a1 + 65));
  v11 = objc_alloc(MEMORY[0x24BE4FE40]);
  -[NPKProtoRemotePassUpdateRequest data](v8, "data");
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  v13 = (void *)objc_msgSend(v11, "initWithProtobufData:type:isResponse:", v12, 50, 0);

  v14 = *(void **)(a1 + 48);
  v15 = *MEMORY[0x24BE4FAC0];
  v31[0] = *MEMORY[0x24BE4FB18];
  v31[1] = v15;
  v32[0] = CFSTR("remotePassUpdate");
  v32[1] = MEMORY[0x24BDBD1C8];
  objc_msgSend(MEMORY[0x24BDBCE70], "dictionaryWithObjects:forKeys:count:", v32, v31, 2);
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v14, "_sendProtobuf:responseExpected:extraOptions:", v13, 1, v16);
  v17 = (void *)objc_claimAutoreleasedReturnValue();

  if (!v17)
  {
    pk_Payment_log();
    v21 = objc_claimAutoreleasedReturnValue();
    v22 = os_log_type_enabled(v21, OS_LOG_TYPE_ERROR);

    if (!v22)
      goto LABEL_12;
    pk_Payment_log();
    v20 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR))
    {
      objc_msgSend(*(id *)(a1 + 32), "uniqueID");
      v23 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138412546;
      v28 = v23;
      v29 = 2112;
      v30 = v13;
      _os_log_impl(&dword_213518000, v20, OS_LOG_TYPE_ERROR, "Error: Remote update pass with uniqueID:%@. No message identifier for protobuf %@", buf, 0x16u);

    }
    goto LABEL_8;
  }
  if (*(_QWORD *)(a1 + 56))
  {
    v18 = *(void **)(a1 + 48);
    v19 = (void *)MEMORY[0x2199B6780]();
    v24[0] = MEMORY[0x24BDAC760];
    v24[1] = 3221225472;
    v24[2] = __137__NPKPaymentWebServiceCompanionTargetDevice_remotePassUpgradeWithRequest_pass_requireAuthorization_notifyUserOnPairedDevice_updateBlock___block_invoke_496;
    v24[3] = &unk_24CFEAE00;
    v26 = *(id *)(a1 + 56);
    v25 = *(id *)(a1 + 32);
    objc_msgSend(v18, "_trackOutstandingRequestWithMessageIdentifier:completionHandler:errorHandler:", v17, v19, v24);

    v20 = v26;
LABEL_8:

  }
LABEL_12:

}

uint64_t __137__NPKPaymentWebServiceCompanionTargetDevice_remotePassUpgradeWithRequest_pass_requireAuthorization_notifyUserOnPairedDevice_updateBlock___block_invoke_496(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(_QWORD, uint64_t, _QWORD, _QWORD, uint64_t))(*(_QWORD *)(a1 + 40) + 16))(*(_QWORD *)(a1 + 40), a2, *(_QWORD *)(a1 + 32), 0, 1);
}

- (void)cancelOutstandingRemotePassUpdateRequest:(id)a3 pass:(id)a4
{
  id v6;
  id v7;
  NSObject *v8;
  _BOOL4 v9;
  NSObject *v10;
  void *v11;
  NSObject *v12;
  id v13;
  id v14;
  _QWORD block[4];
  id v16;
  id v17;
  NPKPaymentWebServiceCompanionTargetDevice *v18;
  uint8_t buf[4];
  void *v20;
  uint64_t v21;

  v21 = *MEMORY[0x24BDAC8D0];
  v6 = a3;
  v7 = a4;
  pk_Payment_log();
  v8 = objc_claimAutoreleasedReturnValue();
  v9 = os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT);

  if (v9)
  {
    pk_Payment_log();
    v10 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend(v7, "uniqueID");
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138412290;
      v20 = v11;
      _os_log_impl(&dword_213518000, v10, OS_LOG_TYPE_DEFAULT, "Notice: Sending message to cancel outstanding remote pass Update Reques for pass UniqueID:%@", buf, 0xCu);

    }
  }
  -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
  v12 = objc_claimAutoreleasedReturnValue();
  block[0] = MEMORY[0x24BDAC760];
  block[1] = 3221225472;
  block[2] = __91__NPKPaymentWebServiceCompanionTargetDevice_cancelOutstandingRemotePassUpdateRequest_pass___block_invoke;
  block[3] = &unk_24CFE8288;
  v16 = v7;
  v17 = v6;
  v18 = self;
  v13 = v6;
  v14 = v7;
  dispatch_sync(v12, block);

}

void __91__NPKPaymentWebServiceCompanionTargetDevice_cancelOutstandingRemotePassUpdateRequest_pass___block_invoke(uint64_t a1)
{
  NPKProtoRemotePassUpdateRequest *v2;
  void *v3;
  void *v4;
  id v5;
  void *v6;
  void *v7;
  void *v8;
  uint64_t v9;
  void *v10;
  void *v11;
  NSObject *v12;
  _BOOL4 v13;
  NSObject *v14;
  int v15;
  void *v16;
  _QWORD v17[2];
  _QWORD v18[3];

  v18[2] = *MEMORY[0x24BDAC8D0];
  v2 = objc_alloc_init(NPKProtoRemotePassUpdateRequest);
  objc_msgSend(*(id *)(a1 + 32), "uniqueID");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  -[NPKProtoRemotePassUpdateRequest setPassID:](v2, "setPassID:", v3);

  NPKSecureArchiveObject(*(void **)(a1 + 40));
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  -[NPKProtoRemotePassUpdateRequest setUpdateRequestData:](v2, "setUpdateRequestData:", v4);

  -[NPKProtoRemotePassUpdateRequest setCancelUpdate:](v2, "setCancelUpdate:", 1);
  v5 = objc_alloc(MEMORY[0x24BE4FE40]);
  -[NPKProtoRemotePassUpdateRequest data](v2, "data");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = (void *)objc_msgSend(v5, "initWithProtobufData:type:isResponse:", v6, 50, 0);

  v8 = *(void **)(a1 + 48);
  v9 = *MEMORY[0x24BE4FB18];
  v17[0] = *MEMORY[0x24BE4FA90];
  v17[1] = v9;
  v18[0] = MEMORY[0x24BDBD1C8];
  v18[1] = CFSTR("remotePassUpdate");
  objc_msgSend(MEMORY[0x24BDBCE70], "dictionaryWithObjects:forKeys:count:", v18, v17, 2);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "_sendProtobuf:responseExpected:extraOptions:", v7, 0, v10);
  v11 = (void *)objc_claimAutoreleasedReturnValue();

  if (!v11)
  {
    pk_Payment_log();
    v12 = objc_claimAutoreleasedReturnValue();
    v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      pk_Payment_log();
      v14 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        v15 = 138412290;
        v16 = v7;
        _os_log_impl(&dword_213518000, v14, OS_LOG_TYPE_ERROR, "Error: No message identifier for protobuf %@", (uint8_t *)&v15, 0xCu);
      }

    }
  }

}

- (void)peerPaymentRegisterResponse:(id)a3
{
  id v4;
  NSObject *v5;
  _BOOL4 v6;
  NSObject *v7;
  void *v8;
  void *v9;
  void *v10;
  NSObject *v11;
  NSObject *v12;
  _BOOL4 v13;
  NSObject *v14;
  uint64_t v15;
  uint8_t v16[16];
  _QWORD block[5];
  id v18;
  id v19;
  __int128 *p_buf;
  uint64_t *v21;
  uint64_t *v22;
  uint64_t *v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t (*v28)(uint64_t, uint64_t);
  void (*v29)(uint64_t);
  id v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t (*v34)(uint64_t, uint64_t);
  void (*v35)(uint64_t);
  id v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t (*v40)(uint64_t, uint64_t);
  void (*v41)(uint64_t);
  id v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  char v46;
  __int128 buf;
  uint64_t v48;
  uint64_t (*v49)(uint64_t, uint64_t);
  void (*v50)(uint64_t);
  id v51;
  uint64_t v52;

  v52 = *MEMORY[0x24BDAC8D0];
  v4 = a3;
  pk_Payment_log();
  v5 = objc_claimAutoreleasedReturnValue();
  v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    pk_Payment_log();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend(v4, "npkDescription");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      LODWORD(buf) = 138412290;
      *(_QWORD *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_213518000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Peer payment register: incoming protobuf %@", (uint8_t *)&buf, 0xCu);

    }
  }
  objc_msgSend(v4, "context");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "incomingResponseIdentifier");
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  *(_QWORD *)&buf = 0;
  *((_QWORD *)&buf + 1) = &buf;
  v48 = 0x3032000000;
  v49 = __Block_byref_object_copy__342;
  v50 = __Block_byref_object_dispose__343;
  v51 = 0;
  v43 = 0;
  v44 = &v43;
  v45 = 0x2020000000;
  v46 = 0;
  v37 = 0;
  v38 = &v37;
  v39 = 0x3032000000;
  v40 = __Block_byref_object_copy__23;
  v41 = __Block_byref_object_dispose__23;
  v42 = 0;
  v31 = 0;
  v32 = &v31;
  v33 = 0x3032000000;
  v34 = __Block_byref_object_copy__23;
  v35 = __Block_byref_object_dispose__23;
  v36 = 0;
  v25 = 0;
  v26 = &v25;
  v27 = 0x3032000000;
  v28 = __Block_byref_object_copy__23;
  v29 = __Block_byref_object_dispose__23;
  v30 = 0;
  if (v10)
  {
    -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
    v11 = objc_claimAutoreleasedReturnValue();
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 3221225472;
    block[2] = __73__NPKPaymentWebServiceCompanionTargetDevice_peerPaymentRegisterResponse___block_invoke;
    block[3] = &unk_24CFED4A8;
    block[4] = self;
    v18 = v10;
    v19 = v4;
    p_buf = &buf;
    v21 = &v43;
    v22 = &v37;
    v23 = &v31;
    v24 = &v25;
    dispatch_sync(v11, block);

  }
  else
  {
    pk_Payment_log();
    v12 = objc_claimAutoreleasedReturnValue();
    v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      pk_Payment_log();
      v14 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)v16 = 0;
        _os_log_impl(&dword_213518000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v16, 2u);
      }

    }
  }
  v15 = *(_QWORD *)(*((_QWORD *)&buf + 1) + 40);
  if (v15)
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t, uint64_t))(v15 + 16))(v15, *((unsigned __int8 *)v44 + 24), v38[5], v32[5], v26[5]);
  _Block_object_dispose(&v25, 8);

  _Block_object_dispose(&v31, 8);
  _Block_object_dispose(&v37, 8);

  _Block_object_dispose(&v43, 8);
  _Block_object_dispose(&buf, 8);

}

void __73__NPKPaymentWebServiceCompanionTargetDevice_peerPaymentRegisterResponse___block_invoke(uint64_t a1)
{
  void *v1;
  void *v3;
  void *v4;
  NPKProtoPeerPaymentRegistrationResponse *v5;
  void *v6;
  NPKProtoPeerPaymentRegistrationResponse *v7;
  NSObject *v8;
  _BOOL4 v9;
  NSObject *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  _BOOL4 v15;
  NSObject *v16;
  void *v17;
  void *v18;
  NSObject *v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  void *v23;
  NSObject *v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  __int16 v28[8];

  objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "objectForKey:", *(_QWORD *)(a1 + 40));
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  if (v4)
  {
    v5 = [NPKProtoPeerPaymentRegistrationResponse alloc];
    objc_msgSend(*(id *)(a1 + 48), "data");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    v7 = -[NPKProtoPeerPaymentRegistrationResponse initWithData:](v5, "initWithData:", v6);

    if (-[NPKProtoPeerPaymentRegistrationResponse pending](v7, "pending"))
    {
      objc_msgSend(v4, "setOrResetCleanupTimer");
    }
    else
    {
      objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v11, "removeObjectForKey:", *(_QWORD *)(a1 + 40));

      objc_msgSend(v4, "completionHandler");
      v12 = objc_claimAutoreleasedReturnValue();
      v13 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
      v14 = *(void **)(v13 + 40);
      *(_QWORD *)(v13 + 40) = v12;

      *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 24) = -[NPKProtoPeerPaymentRegistrationResponse success](v7, "success");
      v15 = -[NPKProtoPeerPaymentRegistrationResponse hasErrorData](v7, "hasErrorData");
      if (v15)
      {
        -[NPKProtoPeerPaymentRegistrationResponse errorData](v7, "errorData");
        v1 = (void *)objc_claimAutoreleasedReturnValue();
        v16 = objc_opt_class();
        NPKSecureUnarchiveObject(v1, v16);
        v17 = (void *)objc_claimAutoreleasedReturnValue();
      }
      else
      {
        v17 = 0;
      }
      objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 72) + 8) + 40), v17);
      if (v15)
      {

      }
      -[NPKProtoPeerPaymentRegistrationResponse peerPaymentWebServiceContextData](v7, "peerPaymentWebServiceContextData");
      v18 = (void *)objc_claimAutoreleasedReturnValue();
      v19 = objc_opt_class();
      NPKSecureUnarchiveObject(v18, v19);
      v20 = objc_claimAutoreleasedReturnValue();
      v21 = *(_QWORD *)(*(_QWORD *)(a1 + 80) + 8);
      v22 = *(void **)(v21 + 40);
      *(_QWORD *)(v21 + 40) = v20;

      -[NPKProtoPeerPaymentRegistrationResponse peerPaymentAccountData](v7, "peerPaymentAccountData");
      v23 = (void *)objc_claimAutoreleasedReturnValue();
      v24 = objc_opt_class();
      NPKSecureUnarchiveObject(v23, v24);
      v25 = objc_claimAutoreleasedReturnValue();
      v26 = *(_QWORD *)(*(_QWORD *)(a1 + 88) + 8);
      v27 = *(void **)(v26 + 40);
      *(_QWORD *)(v26 + 40) = v25;

    }
  }
  else
  {
    pk_Payment_log();
    v8 = objc_claimAutoreleasedReturnValue();
    v9 = os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT);

    if (v9)
    {
      pk_Payment_log();
      v10 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
      {
        v28[0] = 0;
        _os_log_impl(&dword_213518000, v10, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", (uint8_t *)v28, 2u);
      }

    }
  }

}

- (void)peerPaymentRegisterWithURL:(id)a3 forceReRegistration:(BOOL)a4 completion:(id)a5
{
  _BOOL4 v6;
  id v8;
  id v9;
  NSObject *v10;
  _BOOL4 v11;
  NSObject *v12;
  NSObject *v13;
  id v14;
  id v15;
  _QWORD v16[4];
  id v17;
  NPKPaymentWebServiceCompanionTargetDevice *v18;
  id v19;
  BOOL v20;
  uint8_t buf[4];
  id v22;
  __int16 v23;
  _BOOL4 v24;
  uint64_t v25;

  v6 = a4;
  v25 = *MEMORY[0x24BDAC8D0];
  v8 = a3;
  v9 = a5;
  pk_Payment_log();
  v10 = objc_claimAutoreleasedReturnValue();
  v11 = os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT);

  if (v11)
  {
    pk_Payment_log();
    v12 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138412546;
      v22 = v8;
      v23 = 1024;
      v24 = v6;
      _os_log_impl(&dword_213518000, v12, OS_LOG_TYPE_DEFAULT, "Notice: Peer payment register with URL %@ forceReRegistration %i", buf, 0x12u);
    }

  }
  -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
  v13 = objc_claimAutoreleasedReturnValue();
  v16[0] = MEMORY[0x24BDAC760];
  v16[1] = 3221225472;
  v16[2] = __103__NPKPaymentWebServiceCompanionTargetDevice_peerPaymentRegisterWithURL_forceReRegistration_completion___block_invoke;
  v16[3] = &unk_24CFED4D0;
  v20 = v6;
  v17 = v8;
  v18 = self;
  v19 = v9;
  v14 = v9;
  v15 = v8;
  dispatch_sync(v13, v16);

}

void __103__NPKPaymentWebServiceCompanionTargetDevice_peerPaymentRegisterWithURL_forceReRegistration_completion___block_invoke(uint64_t a1)
{
  NPKProtoPeerPaymentRegistrationRequest *v2;
  void *v3;
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  NSObject *v10;
  void *v11;
  void *v12;
  void *v13;
  NSObject *v14;
  _BOOL4 v15;
  const char *v16;
  NSObject *v17;
  os_log_type_t v18;
  NSObject *v19;
  _BOOL4 v20;
  _QWORD v21[4];
  id v22;
  uint8_t buf[4];
  void *v24;
  uint64_t v25;
  _QWORD v26[2];

  v26[1] = *MEMORY[0x24BDAC8D0];
  v2 = objc_alloc_init(NPKProtoPeerPaymentRegistrationRequest);
  objc_msgSend(*(id *)(a1 + 32), "absoluteString");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  -[NPKProtoPeerPaymentRegistrationRequest setServiceURL:](v2, "setServiceURL:", v3);

  -[NPKProtoPeerPaymentRegistrationRequest setForceReRegistration:](v2, "setForceReRegistration:", *(unsigned __int8 *)(a1 + 56));
  v4 = objc_alloc(MEMORY[0x24BE4FE40]);
  -[NPKProtoPeerPaymentRegistrationRequest data](v2, "data");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = (void *)objc_msgSend(v4, "initWithProtobufData:type:isResponse:", v5, 31, 0);

  v7 = *(void **)(a1 + 40);
  v25 = *MEMORY[0x24BE4FA90];
  v26[0] = MEMORY[0x24BDBD1C8];
  objc_msgSend(MEMORY[0x24BDBCE70], "dictionaryWithObjects:forKeys:count:", v26, &v25, 1);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "_sendProtobuf:responseExpected:extraOptions:", v6, 1, v8);
  v9 = (void *)objc_claimAutoreleasedReturnValue();

  if (v9)
  {
    if (*(_QWORD *)(a1 + 48))
    {
      v10 = MEMORY[0x2199B6780]();
      v21[0] = MEMORY[0x24BDAC760];
      v21[1] = 3221225472;
      v21[2] = __103__NPKPaymentWebServiceCompanionTargetDevice_peerPaymentRegisterWithURL_forceReRegistration_completion___block_invoke_2;
      v21[3] = &unk_24CFE7B80;
      v22 = *(id *)(a1 + 48);
      v11 = (void *)MEMORY[0x2199B6780](v21);
      v12 = *(void **)(a1 + 40);
      v13 = (void *)MEMORY[0x2199B6780](v10);
      objc_msgSend(v12, "_trackOutstandingRequestWithMessageIdentifier:completionHandler:errorHandler:", v9, v13, v11);

LABEL_11:
      goto LABEL_12;
    }
    pk_Payment_log();
    v19 = objc_claimAutoreleasedReturnValue();
    v20 = os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT);

    if (v20)
    {
      pk_Payment_log();
      v10 = objc_claimAutoreleasedReturnValue();
      if (!os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
        goto LABEL_11;
      *(_DWORD *)buf = 138412290;
      v24 = v9;
      v16 = "Warning: No response expected for message with identifier %@";
      v17 = v10;
      v18 = OS_LOG_TYPE_DEFAULT;
      goto LABEL_10;
    }
  }
  else
  {
    pk_Payment_log();
    v14 = objc_claimAutoreleasedReturnValue();
    v15 = os_log_type_enabled(v14, OS_LOG_TYPE_ERROR);

    if (v15)
    {
      pk_Payment_log();
      v10 = objc_claimAutoreleasedReturnValue();
      if (!os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
        goto LABEL_11;
      *(_DWORD *)buf = 138412290;
      v24 = v6;
      v16 = "Error: No message identifier for protobuf %@";
      v17 = v10;
      v18 = OS_LOG_TYPE_ERROR;
LABEL_10:
      _os_log_impl(&dword_213518000, v17, v18, v16, buf, 0xCu);
      goto LABEL_11;
    }
  }
LABEL_12:

}

uint64_t __103__NPKPaymentWebServiceCompanionTargetDevice_peerPaymentRegisterWithURL_forceReRegistration_completion___block_invoke_2(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 32);
  if (result)
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, _QWORD, _QWORD))(result + 16))(result, 0, a2, 0, 0);
  return result;
}

- (void)peerPaymentUnregisterResponse:(id)a3
{
  id v4;
  NSObject *v5;
  _BOOL4 v6;
  NSObject *v7;
  void *v8;
  void *v9;
  void *v10;
  NSObject *v11;
  NSObject *v12;
  _BOOL4 v13;
  NSObject *v14;
  uint64_t v15;
  uint8_t v16[8];
  _QWORD block[5];
  id v18;
  id v19;
  __int128 *p_buf;
  uint64_t *v21;
  uint64_t *v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t (*v27)(uint64_t, uint64_t);
  void (*v28)(uint64_t);
  id v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t (*v33)(uint64_t, uint64_t);
  void (*v34)(uint64_t);
  id v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  char v39;
  __int128 buf;
  uint64_t v41;
  uint64_t (*v42)(uint64_t, uint64_t);
  void (*v43)(uint64_t);
  id v44;
  uint64_t v45;

  v45 = *MEMORY[0x24BDAC8D0];
  v4 = a3;
  pk_Payment_log();
  v5 = objc_claimAutoreleasedReturnValue();
  v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    pk_Payment_log();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend(v4, "npkDescription");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      LODWORD(buf) = 138412290;
      *(_QWORD *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_213518000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Target device peer payment unregister: incoming protobuf %@", (uint8_t *)&buf, 0xCu);

    }
  }
  objc_msgSend(v4, "context");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "incomingResponseIdentifier");
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  *(_QWORD *)&buf = 0;
  *((_QWORD *)&buf + 1) = &buf;
  v41 = 0x3032000000;
  v42 = __Block_byref_object_copy__342;
  v43 = __Block_byref_object_dispose__343;
  v44 = 0;
  v36 = 0;
  v37 = &v36;
  v38 = 0x2020000000;
  v39 = 0;
  v30 = 0;
  v31 = &v30;
  v32 = 0x3032000000;
  v33 = __Block_byref_object_copy__23;
  v34 = __Block_byref_object_dispose__23;
  v35 = 0;
  v24 = 0;
  v25 = &v24;
  v26 = 0x3032000000;
  v27 = __Block_byref_object_copy__23;
  v28 = __Block_byref_object_dispose__23;
  v29 = 0;
  if (v10)
  {
    -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
    v11 = objc_claimAutoreleasedReturnValue();
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 3221225472;
    block[2] = __75__NPKPaymentWebServiceCompanionTargetDevice_peerPaymentUnregisterResponse___block_invoke;
    block[3] = &unk_24CFECFC0;
    block[4] = self;
    v18 = v10;
    v19 = v4;
    p_buf = &buf;
    v21 = &v36;
    v22 = &v30;
    v23 = &v24;
    dispatch_sync(v11, block);

  }
  else
  {
    pk_Payment_log();
    v12 = objc_claimAutoreleasedReturnValue();
    v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      pk_Payment_log();
      v14 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)v16 = 0;
        _os_log_impl(&dword_213518000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v16, 2u);
      }

    }
  }
  v15 = *(_QWORD *)(*((_QWORD *)&buf + 1) + 40);
  if (v15)
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t, _QWORD))(v15 + 16))(v15, *((unsigned __int8 *)v37 + 24), v31[5], v25[5], 0);
  _Block_object_dispose(&v24, 8);

  _Block_object_dispose(&v30, 8);
  _Block_object_dispose(&v36, 8);
  _Block_object_dispose(&buf, 8);

}

void __75__NPKPaymentWebServiceCompanionTargetDevice_peerPaymentUnregisterResponse___block_invoke(uint64_t a1)
{
  void *v1;
  void *v3;
  void *v4;
  NPKProtoPeerPaymentUnregistrationResponse *v5;
  void *v6;
  NPKProtoPeerPaymentUnregistrationResponse *v7;
  NSObject *v8;
  _BOOL4 v9;
  NSObject *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  _BOOL4 v15;
  NSObject *v16;
  void *v17;
  void *v18;
  NSObject *v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  __int16 v23[8];

  objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "objectForKey:", *(_QWORD *)(a1 + 40));
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  if (v4)
  {
    v5 = [NPKProtoPeerPaymentUnregistrationResponse alloc];
    objc_msgSend(*(id *)(a1 + 48), "data");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    v7 = -[NPKProtoPeerPaymentUnregistrationResponse initWithData:](v5, "initWithData:", v6);

    if (-[NPKProtoPeerPaymentUnregistrationResponse pending](v7, "pending"))
    {
      objc_msgSend(v4, "setOrResetCleanupTimer");
    }
    else
    {
      objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v11, "removeObjectForKey:", *(_QWORD *)(a1 + 40));

      objc_msgSend(v4, "completionHandler");
      v12 = objc_claimAutoreleasedReturnValue();
      v13 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
      v14 = *(void **)(v13 + 40);
      *(_QWORD *)(v13 + 40) = v12;

      *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 24) = -[NPKProtoPeerPaymentUnregistrationResponse success](v7, "success");
      v15 = -[NPKProtoPeerPaymentUnregistrationResponse hasErrorData](v7, "hasErrorData");
      if (v15)
      {
        -[NPKProtoPeerPaymentUnregistrationResponse errorData](v7, "errorData");
        v1 = (void *)objc_claimAutoreleasedReturnValue();
        v16 = objc_opt_class();
        NPKSecureUnarchiveObject(v1, v16);
        v17 = (void *)objc_claimAutoreleasedReturnValue();
      }
      else
      {
        v17 = 0;
      }
      objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 72) + 8) + 40), v17);
      if (v15)
      {

      }
      -[NPKProtoPeerPaymentUnregistrationResponse peerPaymentWebServiceContextData](v7, "peerPaymentWebServiceContextData");
      v18 = (void *)objc_claimAutoreleasedReturnValue();
      v19 = objc_opt_class();
      NPKSecureUnarchiveObject(v18, v19);
      v20 = objc_claimAutoreleasedReturnValue();
      v21 = *(_QWORD *)(*(_QWORD *)(a1 + 80) + 8);
      v22 = *(void **)(v21 + 40);
      *(_QWORD *)(v21 + 40) = v20;

    }
  }
  else
  {
    pk_Payment_log();
    v8 = objc_claimAutoreleasedReturnValue();
    v9 = os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT);

    if (v9)
    {
      pk_Payment_log();
      v10 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
      {
        v23[0] = 0;
        _os_log_impl(&dword_213518000, v10, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", (uint8_t *)v23, 2u);
      }

    }
  }

}

- (void)peerPaymentUnregisterWithCompletion:(id)a3
{
  id v4;
  NSObject *v5;
  _BOOL4 v6;
  NSObject *v7;
  NSObject *v8;
  id v9;
  _QWORD v10[5];
  id v11;
  uint8_t buf[16];

  v4 = a3;
  pk_Payment_log();
  v5 = objc_claimAutoreleasedReturnValue();
  v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    pk_Payment_log();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl(&dword_213518000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Target device peer payment unregister", buf, 2u);
    }

  }
  -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
  v8 = objc_claimAutoreleasedReturnValue();
  v10[0] = MEMORY[0x24BDAC760];
  v10[1] = 3221225472;
  v10[2] = __81__NPKPaymentWebServiceCompanionTargetDevice_peerPaymentUnregisterWithCompletion___block_invoke;
  v10[3] = &unk_24CFE7E90;
  v10[4] = self;
  v11 = v4;
  v9 = v4;
  dispatch_sync(v8, v10);

}

void __81__NPKPaymentWebServiceCompanionTargetDevice_peerPaymentUnregisterWithCompletion___block_invoke(uint64_t a1)
{
  NPKProtoPeerPaymentUnregistrationRequest *v2;
  id v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  NSObject *v9;
  void *v10;
  void *v11;
  void *v12;
  NSObject *v13;
  _BOOL4 v14;
  const char *v15;
  NSObject *v16;
  os_log_type_t v17;
  NSObject *v18;
  _BOOL4 v19;
  _QWORD v20[4];
  id v21;
  uint8_t buf[4];
  void *v23;
  uint64_t v24;
  _QWORD v25[2];

  v25[1] = *MEMORY[0x24BDAC8D0];
  v2 = objc_alloc_init(NPKProtoPeerPaymentUnregistrationRequest);
  v3 = objc_alloc(MEMORY[0x24BE4FE40]);
  -[NPKProtoPeerPaymentUnregistrationRequest data](v2, "data");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = (void *)objc_msgSend(v3, "initWithProtobufData:type:isResponse:", v4, 32, 0);

  v6 = *(void **)(a1 + 32);
  v24 = *MEMORY[0x24BE4FA90];
  v25[0] = MEMORY[0x24BDBD1C8];
  objc_msgSend(MEMORY[0x24BDBCE70], "dictionaryWithObjects:forKeys:count:", v25, &v24, 1);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "_sendProtobuf:responseExpected:extraOptions:", v5, 1, v7);
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  if (v8)
  {
    if (*(_QWORD *)(a1 + 40))
    {
      v9 = MEMORY[0x2199B6780]();
      v20[0] = MEMORY[0x24BDAC760];
      v20[1] = 3221225472;
      v20[2] = __81__NPKPaymentWebServiceCompanionTargetDevice_peerPaymentUnregisterWithCompletion___block_invoke_2;
      v20[3] = &unk_24CFE7B80;
      v21 = *(id *)(a1 + 40);
      v10 = (void *)MEMORY[0x2199B6780](v20);
      v11 = *(void **)(a1 + 32);
      v12 = (void *)MEMORY[0x2199B6780](v9);
      objc_msgSend(v11, "_trackOutstandingRequestWithMessageIdentifier:completionHandler:errorHandler:", v8, v12, v10);

LABEL_11:
      goto LABEL_12;
    }
    pk_Payment_log();
    v18 = objc_claimAutoreleasedReturnValue();
    v19 = os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT);

    if (v19)
    {
      pk_Payment_log();
      v9 = objc_claimAutoreleasedReturnValue();
      if (!os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
        goto LABEL_11;
      *(_DWORD *)buf = 138412290;
      v23 = v8;
      v15 = "Warning: No response expected for message with identifier %@";
      v16 = v9;
      v17 = OS_LOG_TYPE_DEFAULT;
      goto LABEL_10;
    }
  }
  else
  {
    pk_Payment_log();
    v13 = objc_claimAutoreleasedReturnValue();
    v14 = os_log_type_enabled(v13, OS_LOG_TYPE_ERROR);

    if (v14)
    {
      pk_Payment_log();
      v9 = objc_claimAutoreleasedReturnValue();
      if (!os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
        goto LABEL_11;
      *(_DWORD *)buf = 138412290;
      v23 = v5;
      v15 = "Error: No message identifier for protobuf %@";
      v16 = v9;
      v17 = OS_LOG_TYPE_ERROR;
LABEL_10:
      _os_log_impl(&dword_213518000, v16, v17, v15, buf, 0xCu);
      goto LABEL_11;
    }
  }
LABEL_12:

}

uint64_t __81__NPKPaymentWebServiceCompanionTargetDevice_peerPaymentUnregisterWithCompletion___block_invoke_2(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 32);
  if (result)
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, _QWORD, _QWORD))(result + 16))(result, 0, a2, 0, 0);
  return result;
}

- (void)provisionPeerPaymentPassResponse:(id)a3
{
  id v4;
  NSObject *v5;
  _BOOL4 v6;
  NSObject *v7;
  void *v8;
  void *v9;
  void *v10;
  NSObject *v11;
  NSObject *v12;
  _BOOL4 v13;
  NSObject *v14;
  uint64_t v15;
  uint8_t v16[16];
  _QWORD block[5];
  id v18;
  id v19;
  __int128 *p_buf;
  uint64_t *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t (*v26)(uint64_t, uint64_t);
  void (*v27)(uint64_t);
  id v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  char v32;
  __int128 buf;
  uint64_t v34;
  uint64_t (*v35)(uint64_t, uint64_t);
  void (*v36)(uint64_t);
  id v37;
  uint64_t v38;

  v38 = *MEMORY[0x24BDAC8D0];
  v4 = a3;
  pk_Payment_log();
  v5 = objc_claimAutoreleasedReturnValue();
  v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    pk_Payment_log();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend(v4, "npkDescription");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      LODWORD(buf) = 138412290;
      *(_QWORD *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_213518000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Target device provision peer payment pass: incoming protobuf %@", (uint8_t *)&buf, 0xCu);

    }
  }
  objc_msgSend(v4, "context");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "incomingResponseIdentifier");
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  *(_QWORD *)&buf = 0;
  *((_QWORD *)&buf + 1) = &buf;
  v34 = 0x3032000000;
  v35 = __Block_byref_object_copy__342;
  v36 = __Block_byref_object_dispose__343;
  v37 = 0;
  v29 = 0;
  v30 = &v29;
  v31 = 0x2020000000;
  v32 = 0;
  v23 = 0;
  v24 = &v23;
  v25 = 0x3032000000;
  v26 = __Block_byref_object_copy__23;
  v27 = __Block_byref_object_dispose__23;
  v28 = 0;
  if (v10)
  {
    -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
    v11 = objc_claimAutoreleasedReturnValue();
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 3221225472;
    block[2] = __78__NPKPaymentWebServiceCompanionTargetDevice_provisionPeerPaymentPassResponse___block_invoke;
    block[3] = &unk_24CFED060;
    block[4] = self;
    v18 = v10;
    v19 = v4;
    p_buf = &buf;
    v21 = &v29;
    v22 = &v23;
    dispatch_sync(v11, block);

  }
  else
  {
    pk_Payment_log();
    v12 = objc_claimAutoreleasedReturnValue();
    v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      pk_Payment_log();
      v14 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)v16 = 0;
        _os_log_impl(&dword_213518000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v16, 2u);
      }

    }
  }
  v15 = *(_QWORD *)(*((_QWORD *)&buf + 1) + 40);
  if (v15)
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v15 + 16))(v15, *((unsigned __int8 *)v30 + 24), v24[5]);
  _Block_object_dispose(&v23, 8);

  _Block_object_dispose(&v29, 8);
  _Block_object_dispose(&buf, 8);

}

void __78__NPKPaymentWebServiceCompanionTargetDevice_provisionPeerPaymentPassResponse___block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;
  NPKProtoProvisionPeerPaymentPassResponse *v4;
  void *v5;
  NPKProtoProvisionPeerPaymentPassResponse *v6;
  NSObject *v7;
  _BOOL4 v8;
  NSObject *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  void *v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint8_t buf[16];

  objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "objectForKey:", *(_QWORD *)(a1 + 40));
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  if (v3)
  {
    v4 = [NPKProtoProvisionPeerPaymentPassResponse alloc];
    objc_msgSend(*(id *)(a1 + 48), "data");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    v6 = -[NPKProtoProvisionPeerPaymentPassResponse initWithData:](v4, "initWithData:", v5);

    if (-[NPKProtoProvisionPeerPaymentPassResponse pending](v6, "pending"))
    {
      objc_msgSend(v3, "setOrResetCleanupTimer");
    }
    else
    {
      objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v10, "removeObjectForKey:", *(_QWORD *)(a1 + 40));

      objc_msgSend(v3, "completionHandler");
      v11 = objc_claimAutoreleasedReturnValue();
      v12 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
      v13 = *(void **)(v12 + 40);
      *(_QWORD *)(v12 + 40) = v11;

      *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 24) = -[NPKProtoProvisionPeerPaymentPassResponse success](v6, "success");
      -[NPKProtoProvisionPeerPaymentPassResponse errorData](v6, "errorData");
      v14 = (void *)objc_claimAutoreleasedReturnValue();
      v15 = (void *)MEMORY[0x24BDBCF20];
      v16 = objc_opt_class();
      objc_msgSend(v15, "setWithObjects:", v16, objc_opt_class(), 0);
      v17 = (void *)objc_claimAutoreleasedReturnValue();
      NPKSecureUnarchiveObjectOfClasses(v14, v17);
      v18 = objc_claimAutoreleasedReturnValue();
      v19 = *(_QWORD *)(*(_QWORD *)(a1 + 72) + 8);
      v20 = *(void **)(v19 + 40);
      *(_QWORD *)(v19 + 40) = v18;

    }
  }
  else
  {
    pk_Payment_log();
    v7 = objc_claimAutoreleasedReturnValue();
    v8 = os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT);

    if (v8)
    {
      pk_Payment_log();
      v9 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)buf = 0;
        _os_log_impl(&dword_213518000, v9, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", buf, 2u);
      }

    }
  }

}

- (void)provisionPeerPaymentPassWithCompletion:(id)a3
{
  id v4;
  NSObject *v5;
  _BOOL4 v6;
  NSObject *v7;
  NSObject *v8;
  id v9;
  _QWORD v10[5];
  id v11;
  uint8_t buf[16];

  v4 = a3;
  pk_Payment_log();
  v5 = objc_claimAutoreleasedReturnValue();
  v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    pk_Payment_log();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl(&dword_213518000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Target device provision peer payment pass", buf, 2u);
    }

  }
  -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
  v8 = objc_claimAutoreleasedReturnValue();
  v10[0] = MEMORY[0x24BDAC760];
  v10[1] = 3221225472;
  v10[2] = __84__NPKPaymentWebServiceCompanionTargetDevice_provisionPeerPaymentPassWithCompletion___block_invoke;
  v10[3] = &unk_24CFE7E90;
  v10[4] = self;
  v11 = v4;
  v9 = v4;
  dispatch_sync(v8, v10);

}

void __84__NPKPaymentWebServiceCompanionTargetDevice_provisionPeerPaymentPassWithCompletion___block_invoke(uint64_t a1)
{
  NPKProtoProvisionPeerPaymentPassRequest *v2;
  id v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  NSObject *v9;
  void *v10;
  void *v11;
  void *v12;
  NSObject *v13;
  _BOOL4 v14;
  const char *v15;
  NSObject *v16;
  os_log_type_t v17;
  NSObject *v18;
  _BOOL4 v19;
  _QWORD v20[4];
  id v21;
  uint8_t buf[4];
  void *v23;
  uint64_t v24;
  _QWORD v25[2];

  v25[1] = *MEMORY[0x24BDAC8D0];
  v2 = objc_alloc_init(NPKProtoProvisionPeerPaymentPassRequest);
  v3 = objc_alloc(MEMORY[0x24BE4FE40]);
  -[NPKProtoProvisionPeerPaymentPassRequest data](v2, "data");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = (void *)objc_msgSend(v3, "initWithProtobufData:type:isResponse:", v4, 34, 0);

  v6 = *(void **)(a1 + 32);
  v24 = *MEMORY[0x24BE4FA90];
  v25[0] = MEMORY[0x24BDBD1C8];
  objc_msgSend(MEMORY[0x24BDBCE70], "dictionaryWithObjects:forKeys:count:", v25, &v24, 1);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "_sendProtobuf:responseExpected:extraOptions:", v5, 1, v7);
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  if (v8)
  {
    if (*(_QWORD *)(a1 + 40))
    {
      v9 = MEMORY[0x2199B6780]();
      v20[0] = MEMORY[0x24BDAC760];
      v20[1] = 3221225472;
      v20[2] = __84__NPKPaymentWebServiceCompanionTargetDevice_provisionPeerPaymentPassWithCompletion___block_invoke_2;
      v20[3] = &unk_24CFE7B80;
      v21 = *(id *)(a1 + 40);
      v10 = (void *)MEMORY[0x2199B6780](v20);
      v11 = *(void **)(a1 + 32);
      v12 = (void *)MEMORY[0x2199B6780](v9);
      objc_msgSend(v11, "_trackOutstandingRequestWithMessageIdentifier:completionHandler:errorHandler:", v8, v12, v10);

LABEL_11:
      goto LABEL_12;
    }
    pk_Payment_log();
    v18 = objc_claimAutoreleasedReturnValue();
    v19 = os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT);

    if (v19)
    {
      pk_Payment_log();
      v9 = objc_claimAutoreleasedReturnValue();
      if (!os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
        goto LABEL_11;
      *(_DWORD *)buf = 138412290;
      v23 = v8;
      v15 = "Warning: No response expected for message with identifier %@";
      v16 = v9;
      v17 = OS_LOG_TYPE_DEFAULT;
      goto LABEL_10;
    }
  }
  else
  {
    pk_Payment_log();
    v13 = objc_claimAutoreleasedReturnValue();
    v14 = os_log_type_enabled(v13, OS_LOG_TYPE_ERROR);

    if (v14)
    {
      pk_Payment_log();
      v9 = objc_claimAutoreleasedReturnValue();
      if (!os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
        goto LABEL_11;
      *(_DWORD *)buf = 138412290;
      v23 = v5;
      v15 = "Error: No message identifier for protobuf %@";
      v16 = v9;
      v17 = OS_LOG_TYPE_ERROR;
LABEL_10:
      _os_log_impl(&dword_213518000, v16, v17, v15, buf, 0xCu);
      goto LABEL_11;
    }
  }
LABEL_12:

}

uint64_t __84__NPKPaymentWebServiceCompanionTargetDevice_provisionPeerPaymentPassWithCompletion___block_invoke_2(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 32);
  if (result)
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(result + 16))(result, 0, a2);
  return result;
}

- (void)updatePeerPaymentAccountResponse:(id)a3
{
  id v4;
  NSObject *v5;
  _BOOL4 v6;
  NSObject *v7;
  void *v8;
  void *v9;
  void *v10;
  NSObject *v11;
  NSObject *v12;
  _BOOL4 v13;
  NSObject *v14;
  uint64_t v15;
  uint8_t v16[8];
  _QWORD block[5];
  id v18;
  id v19;
  __int128 *p_buf;
  uint64_t *v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t (*v25)(uint64_t, uint64_t);
  void (*v26)(uint64_t);
  id v27;
  __int128 buf;
  uint64_t v29;
  uint64_t (*v30)(uint64_t, uint64_t);
  void (*v31)(uint64_t);
  id v32;
  uint64_t v33;

  v33 = *MEMORY[0x24BDAC8D0];
  v4 = a3;
  pk_Payment_log();
  v5 = objc_claimAutoreleasedReturnValue();
  v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    pk_Payment_log();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend(v4, "npkDescription");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      LODWORD(buf) = 138412290;
      *(_QWORD *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_213518000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Target device update peer payment account: incoming protobuf %@", (uint8_t *)&buf, 0xCu);

    }
  }
  objc_msgSend(v4, "context");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "incomingResponseIdentifier");
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  *(_QWORD *)&buf = 0;
  *((_QWORD *)&buf + 1) = &buf;
  v29 = 0x3032000000;
  v30 = __Block_byref_object_copy__342;
  v31 = __Block_byref_object_dispose__343;
  v32 = 0;
  v22 = 0;
  v23 = &v22;
  v24 = 0x3032000000;
  v25 = __Block_byref_object_copy__23;
  v26 = __Block_byref_object_dispose__23;
  v27 = 0;
  if (v10)
  {
    -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
    v11 = objc_claimAutoreleasedReturnValue();
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 3221225472;
    block[2] = __78__NPKPaymentWebServiceCompanionTargetDevice_updatePeerPaymentAccountResponse___block_invoke;
    block[3] = &unk_24CFED0D8;
    block[4] = self;
    v18 = v10;
    v19 = v4;
    p_buf = &buf;
    v21 = &v22;
    dispatch_sync(v11, block);

  }
  else
  {
    pk_Payment_log();
    v12 = objc_claimAutoreleasedReturnValue();
    v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      pk_Payment_log();
      v14 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)v16 = 0;
        _os_log_impl(&dword_213518000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v16, 2u);
      }

    }
  }
  v15 = *(_QWORD *)(*((_QWORD *)&buf + 1) + 40);
  if (v15)
    (*(void (**)(uint64_t, uint64_t))(v15 + 16))(v15, v23[5]);
  _Block_object_dispose(&v22, 8);

  _Block_object_dispose(&buf, 8);
}

void __78__NPKPaymentWebServiceCompanionTargetDevice_updatePeerPaymentAccountResponse___block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;
  NPKProtoUpdatePeerPaymentAccountResponse *v4;
  void *v5;
  NPKProtoUpdatePeerPaymentAccountResponse *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  NSObject *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  NSObject *v16;
  _BOOL4 v17;
  NSObject *v18;
  uint8_t v19[16];

  objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "objectForKey:", *(_QWORD *)(a1 + 40));
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  if (v3)
  {
    v4 = [NPKProtoUpdatePeerPaymentAccountResponse alloc];
    objc_msgSend(*(id *)(a1 + 48), "data");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    v6 = -[NPKProtoUpdatePeerPaymentAccountResponse initWithData:](v4, "initWithData:", v5);

    objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "removeObjectForKey:", *(_QWORD *)(a1 + 40));

    objc_msgSend(v3, "completionHandler");
    v8 = objc_claimAutoreleasedReturnValue();
    v9 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
    v10 = *(void **)(v9 + 40);
    *(_QWORD *)(v9 + 40) = v8;

    -[NPKProtoUpdatePeerPaymentAccountResponse peerPaymentAccountData](v6, "peerPaymentAccountData");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    v12 = objc_opt_class();
    NPKSecureUnarchiveObject(v11, v12);
    v13 = objc_claimAutoreleasedReturnValue();
    v14 = *(_QWORD *)(*(_QWORD *)(a1 + 64) + 8);
    v15 = *(void **)(v14 + 40);
    *(_QWORD *)(v14 + 40) = v13;

  }
  else
  {
    pk_Payment_log();
    v16 = objc_claimAutoreleasedReturnValue();
    v17 = os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT);

    if (v17)
    {
      pk_Payment_log();
      v18 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)v19 = 0;
        _os_log_impl(&dword_213518000, v18, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", v19, 2u);
      }

    }
  }

}

- (void)updatePeerPaymentAccountWithCompletion:(id)a3
{
  id v4;
  NSObject *v5;
  _BOOL4 v6;
  NSObject *v7;
  NSObject *v8;
  id v9;
  _QWORD v10[5];
  id v11;
  uint8_t buf[16];

  v4 = a3;
  pk_Payment_log();
  v5 = objc_claimAutoreleasedReturnValue();
  v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    pk_Payment_log();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl(&dword_213518000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Target device update peer payment account with completion", buf, 2u);
    }

  }
  -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
  v8 = objc_claimAutoreleasedReturnValue();
  v10[0] = MEMORY[0x24BDAC760];
  v10[1] = 3221225472;
  v10[2] = __84__NPKPaymentWebServiceCompanionTargetDevice_updatePeerPaymentAccountWithCompletion___block_invoke;
  v10[3] = &unk_24CFE7E90;
  v10[4] = self;
  v11 = v4;
  v9 = v4;
  dispatch_sync(v8, v10);

}

void __84__NPKPaymentWebServiceCompanionTargetDevice_updatePeerPaymentAccountWithCompletion___block_invoke(uint64_t a1)
{
  NPKProtoUpdatePeerPaymentAccountRequest *v2;
  id v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  NSObject *v9;
  void *v10;
  void *v11;
  void *v12;
  NSObject *v13;
  _BOOL4 v14;
  const char *v15;
  NSObject *v16;
  os_log_type_t v17;
  NSObject *v18;
  _BOOL4 v19;
  _QWORD v20[4];
  id v21;
  uint8_t buf[4];
  void *v23;
  uint64_t v24;
  _QWORD v25[2];

  v25[1] = *MEMORY[0x24BDAC8D0];
  v2 = objc_alloc_init(NPKProtoUpdatePeerPaymentAccountRequest);
  v3 = objc_alloc(MEMORY[0x24BE4FE40]);
  -[NPKProtoUpdatePeerPaymentAccountRequest data](v2, "data");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = (void *)objc_msgSend(v3, "initWithProtobufData:type:isResponse:", v4, 48, 0);

  v6 = *(void **)(a1 + 32);
  v24 = *MEMORY[0x24BE4FA90];
  v25[0] = MEMORY[0x24BDBD1C8];
  objc_msgSend(MEMORY[0x24BDBCE70], "dictionaryWithObjects:forKeys:count:", v25, &v24, 1);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "_sendProtobuf:responseExpected:extraOptions:", v5, 1, v7);
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  if (v8)
  {
    if (*(_QWORD *)(a1 + 40))
    {
      v9 = MEMORY[0x2199B6780]();
      v20[0] = MEMORY[0x24BDAC760];
      v20[1] = 3221225472;
      v20[2] = __84__NPKPaymentWebServiceCompanionTargetDevice_updatePeerPaymentAccountWithCompletion___block_invoke_2;
      v20[3] = &unk_24CFE7B80;
      v21 = *(id *)(a1 + 40);
      v10 = (void *)MEMORY[0x2199B6780](v20);
      v11 = *(void **)(a1 + 32);
      v12 = (void *)MEMORY[0x2199B6780](v9);
      objc_msgSend(v11, "_trackOutstandingRequestWithMessageIdentifier:completionHandler:errorHandler:", v8, v12, v10);

LABEL_11:
      goto LABEL_12;
    }
    pk_Payment_log();
    v18 = objc_claimAutoreleasedReturnValue();
    v19 = os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT);

    if (v19)
    {
      pk_Payment_log();
      v9 = objc_claimAutoreleasedReturnValue();
      if (!os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
        goto LABEL_11;
      *(_DWORD *)buf = 138412290;
      v23 = v8;
      v15 = "Warning: No response expected for message with identifier %@";
      v16 = v9;
      v17 = OS_LOG_TYPE_DEFAULT;
      goto LABEL_10;
    }
  }
  else
  {
    pk_Payment_log();
    v13 = objc_claimAutoreleasedReturnValue();
    v14 = os_log_type_enabled(v13, OS_LOG_TYPE_ERROR);

    if (v14)
    {
      pk_Payment_log();
      v9 = objc_claimAutoreleasedReturnValue();
      if (!os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
        goto LABEL_11;
      *(_DWORD *)buf = 138412290;
      v23 = v5;
      v15 = "Error: No message identifier for protobuf %@";
      v16 = v9;
      v17 = OS_LOG_TYPE_ERROR;
LABEL_10:
      _os_log_impl(&dword_213518000, v16, v17, v15, buf, 0xCu);
      goto LABEL_11;
    }
  }
LABEL_12:

}

uint64_t __84__NPKPaymentWebServiceCompanionTargetDevice_updatePeerPaymentAccountWithCompletion___block_invoke_2(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 32);
  if (result)
    return (*(uint64_t (**)(uint64_t, _QWORD))(result + 16))(result, 0);
  return result;
}

- (void)setPeerPaymentPreferencesResponse:(id)a3
{
  id v4;
  NSObject *v5;
  _BOOL4 v6;
  NSObject *v7;
  void *v8;
  void *v9;
  void *v10;
  NSObject *v11;
  NSObject *v12;
  _BOOL4 v13;
  NSObject *v14;
  uint64_t v15;
  uint8_t v16[16];
  _QWORD block[5];
  id v18;
  id v19;
  __int128 *p_buf;
  uint64_t *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t (*v26)(uint64_t, uint64_t);
  void (*v27)(uint64_t);
  id v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t (*v32)(uint64_t, uint64_t);
  void (*v33)(uint64_t);
  id v34;
  __int128 buf;
  uint64_t v36;
  uint64_t (*v37)(uint64_t, uint64_t);
  void (*v38)(uint64_t);
  id v39;
  uint64_t v40;

  v40 = *MEMORY[0x24BDAC8D0];
  v4 = a3;
  pk_Payment_log();
  v5 = objc_claimAutoreleasedReturnValue();
  v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    pk_Payment_log();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend(v4, "npkDescription");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      LODWORD(buf) = 138412290;
      *(_QWORD *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_213518000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Target device update peer payment preferences: incoming protobuf %@", (uint8_t *)&buf, 0xCu);

    }
  }
  objc_msgSend(v4, "context");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "incomingResponseIdentifier");
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  *(_QWORD *)&buf = 0;
  *((_QWORD *)&buf + 1) = &buf;
  v36 = 0x3032000000;
  v37 = __Block_byref_object_copy__342;
  v38 = __Block_byref_object_dispose__343;
  v39 = 0;
  v29 = 0;
  v30 = &v29;
  v31 = 0x3032000000;
  v32 = __Block_byref_object_copy__23;
  v33 = __Block_byref_object_dispose__23;
  v34 = 0;
  v23 = 0;
  v24 = &v23;
  v25 = 0x3032000000;
  v26 = __Block_byref_object_copy__23;
  v27 = __Block_byref_object_dispose__23;
  v28 = 0;
  if (v10)
  {
    -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
    v11 = objc_claimAutoreleasedReturnValue();
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 3221225472;
    block[2] = __79__NPKPaymentWebServiceCompanionTargetDevice_setPeerPaymentPreferencesResponse___block_invoke;
    block[3] = &unk_24CFED060;
    block[4] = self;
    v18 = v10;
    v19 = v4;
    p_buf = &buf;
    v21 = &v29;
    v22 = &v23;
    dispatch_sync(v11, block);

  }
  else
  {
    pk_Payment_log();
    v12 = objc_claimAutoreleasedReturnValue();
    v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      pk_Payment_log();
      v14 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)v16 = 0;
        _os_log_impl(&dword_213518000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v16, 2u);
      }

    }
  }
  v15 = *(_QWORD *)(*((_QWORD *)&buf + 1) + 40);
  if (v15)
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v15, v30[5], v24[5]);
  _Block_object_dispose(&v23, 8);

  _Block_object_dispose(&v29, 8);
  _Block_object_dispose(&buf, 8);

}

void __79__NPKPaymentWebServiceCompanionTargetDevice_setPeerPaymentPreferencesResponse___block_invoke(uint64_t a1)
{
  void *v1;
  void *v3;
  void *v4;
  NPKProtoSetPeerPaymentPreferencesResponse *v5;
  void *v6;
  NSObject *v7;
  NSObject *v8;
  _BOOL4 v9;
  NSObject *v10;
  NSObject *v11;
  _BOOL4 v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  void *v17;
  NSObject *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  int v22;
  NSObject *v23;
  void *v24;
  uint8_t v25[16];
  uint8_t buf[16];

  objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "objectForKey:", *(_QWORD *)(a1 + 40));
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  if (v4)
  {
    v5 = [NPKProtoSetPeerPaymentPreferencesResponse alloc];
    objc_msgSend(*(id *)(a1 + 48), "data");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    v7 = -[NPKProtoSetPeerPaymentPreferencesResponse initWithData:](v5, "initWithData:", v6);

    if (-[NSObject pending](v7, "pending"))
    {
      pk_Payment_log();
      v8 = objc_claimAutoreleasedReturnValue();
      v9 = os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT);

      if (v9)
      {
        pk_Payment_log();
        v10 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)buf = 0;
          _os_log_impl(&dword_213518000, v10, OS_LOG_TYPE_DEFAULT, "Notice: got pending response for update peer payment preferences.", buf, 2u);
        }

      }
      objc_msgSend(v4, "setOrResetCleanupTimer");
    }
    else
    {
      objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
      v13 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v13, "removeObjectForKey:", *(_QWORD *)(a1 + 40));

      objc_msgSend(v4, "completionHandler");
      v14 = objc_claimAutoreleasedReturnValue();
      v15 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
      v16 = *(void **)(v15 + 40);
      *(_QWORD *)(v15 + 40) = v14;

      -[NSObject peerPaymentPreferencesData](v7, "peerPaymentPreferencesData");
      v17 = (void *)objc_claimAutoreleasedReturnValue();
      v18 = objc_opt_class();
      NPKSecureUnarchiveObject(v17, v18);
      v19 = objc_claimAutoreleasedReturnValue();
      v20 = *(_QWORD *)(*(_QWORD *)(a1 + 64) + 8);
      v21 = *(void **)(v20 + 40);
      *(_QWORD *)(v20 + 40) = v19;

      v22 = -[NSObject hasErrorData](v7, "hasErrorData");
      if (v22)
      {
        -[NSObject errorData](v7, "errorData");
        v1 = (void *)objc_claimAutoreleasedReturnValue();
        v23 = objc_opt_class();
        NPKSecureUnarchiveObject(v1, v23);
        v24 = (void *)objc_claimAutoreleasedReturnValue();
      }
      else
      {
        v24 = 0;
      }
      objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 72) + 8) + 40), v24);
      if (v22)
      {

      }
    }
LABEL_16:

    goto LABEL_17;
  }
  pk_Payment_log();
  v11 = objc_claimAutoreleasedReturnValue();
  v12 = os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT);

  if (v12)
  {
    pk_Payment_log();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)v25 = 0;
      _os_log_impl(&dword_213518000, v7, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", v25, 2u);
    }
    goto LABEL_16;
  }
LABEL_17:

}

- (void)setPeerPaymentPreferences:(id)a3 completion:(id)a4
{
  id v6;
  id v7;
  NSObject *v8;
  _BOOL4 v9;
  NSObject *v10;
  NSObject *v11;
  id v12;
  id v13;
  _QWORD block[4];
  id v15;
  NPKPaymentWebServiceCompanionTargetDevice *v16;
  id v17;
  uint8_t buf[16];

  v6 = a3;
  v7 = a4;
  pk_Payment_log();
  v8 = objc_claimAutoreleasedReturnValue();
  v9 = os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT);

  if (v9)
  {
    pk_Payment_log();
    v10 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl(&dword_213518000, v10, OS_LOG_TYPE_DEFAULT, "Notice: Target device set peer payment preferences with completion", buf, 2u);
    }

  }
  -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
  v11 = objc_claimAutoreleasedReturnValue();
  block[0] = MEMORY[0x24BDAC760];
  block[1] = 3221225472;
  block[2] = __82__NPKPaymentWebServiceCompanionTargetDevice_setPeerPaymentPreferences_completion___block_invoke;
  block[3] = &unk_24CFE84E8;
  v15 = v6;
  v16 = self;
  v17 = v7;
  v12 = v7;
  v13 = v6;
  dispatch_sync(v11, block);

}

void __82__NPKPaymentWebServiceCompanionTargetDevice_setPeerPaymentPreferences_completion___block_invoke(uint64_t a1)
{
  NPKProtoSetPeerPaymentPreferencesRequest *v2;
  void *v3;
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  NSObject *v10;
  void *v11;
  void *v12;
  void *v13;
  NSObject *v14;
  _BOOL4 v15;
  const char *v16;
  NSObject *v17;
  os_log_type_t v18;
  NSObject *v19;
  _BOOL4 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(uint64_t, uint64_t);
  void *v24;
  id v25;
  id v26;
  uint8_t buf[4];
  void *v28;
  uint64_t v29;
  _QWORD v30[2];

  v30[1] = *MEMORY[0x24BDAC8D0];
  v2 = objc_alloc_init(NPKProtoSetPeerPaymentPreferencesRequest);
  NPKSecureArchiveObject(*(void **)(a1 + 32));
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  -[NPKProtoSetPeerPaymentPreferencesRequest setPeerPaymentPreferencesData:](v2, "setPeerPaymentPreferencesData:", v3);

  v4 = objc_alloc(MEMORY[0x24BE4FE40]);
  -[NPKProtoSetPeerPaymentPreferencesRequest data](v2, "data");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = (void *)objc_msgSend(v4, "initWithProtobufData:type:isResponse:", v5, 88, 0);

  v7 = *(void **)(a1 + 40);
  v29 = *MEMORY[0x24BE4FA90];
  v30[0] = MEMORY[0x24BDBD1C8];
  objc_msgSend(MEMORY[0x24BDBCE70], "dictionaryWithObjects:forKeys:count:", v30, &v29, 1);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "_sendProtobuf:responseExpected:extraOptions:", v6, 1, v8);
  v9 = (void *)objc_claimAutoreleasedReturnValue();

  if (v9)
  {
    if (*(_QWORD *)(a1 + 48))
    {
      v10 = MEMORY[0x2199B6780]();
      v21 = MEMORY[0x24BDAC760];
      v22 = 3221225472;
      v23 = __82__NPKPaymentWebServiceCompanionTargetDevice_setPeerPaymentPreferences_completion___block_invoke_2;
      v24 = &unk_24CFEAE00;
      v26 = *(id *)(a1 + 48);
      v25 = *(id *)(a1 + 32);
      v11 = (void *)MEMORY[0x2199B6780](&v21);
      v12 = *(void **)(a1 + 40);
      v13 = (void *)MEMORY[0x2199B6780](v10);
      objc_msgSend(v12, "_trackOutstandingRequestWithMessageIdentifier:completionHandler:errorHandler:", v9, v13, v11, v21, v22, v23, v24);

LABEL_11:
      goto LABEL_12;
    }
    pk_Payment_log();
    v19 = objc_claimAutoreleasedReturnValue();
    v20 = os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT);

    if (v20)
    {
      pk_Payment_log();
      v10 = objc_claimAutoreleasedReturnValue();
      if (!os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
        goto LABEL_11;
      *(_DWORD *)buf = 138412290;
      v28 = v9;
      v16 = "Warning: No response expected for message with identifier %@";
      v17 = v10;
      v18 = OS_LOG_TYPE_DEFAULT;
      goto LABEL_10;
    }
  }
  else
  {
    pk_Payment_log();
    v14 = objc_claimAutoreleasedReturnValue();
    v15 = os_log_type_enabled(v14, OS_LOG_TYPE_ERROR);

    if (v15)
    {
      pk_Payment_log();
      v10 = objc_claimAutoreleasedReturnValue();
      if (!os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
        goto LABEL_11;
      *(_DWORD *)buf = 138412290;
      v28 = v6;
      v16 = "Error: No message identifier for protobuf %@";
      v17 = v10;
      v18 = OS_LOG_TYPE_ERROR;
LABEL_10:
      _os_log_impl(&dword_213518000, v17, v18, v16, buf, 0xCu);
      goto LABEL_11;
    }
  }
LABEL_12:

}

uint64_t __82__NPKPaymentWebServiceCompanionTargetDevice_setPeerPaymentPreferences_completion___block_invoke_2(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 40);
  if (result)
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(result + 16))(result, *(_QWORD *)(a1 + 32), a2);
  return result;
}

- (void)openURLWithRequest:(id)a3
{
  id v4;
  NSObject *v5;
  _BOOL4 v6;
  NSObject *v7;
  NPKProtoOpenURLRequest *v8;
  void *v9;
  NPKProtoOpenURLRequest *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  int v16;
  NPKTapToRadarRequest *v17;
  void *v18;
  NSObject *v19;
  NSObject *v20;
  _BOOL4 v21;
  _QWORD v22[4];
  NPKTapToRadarRequest *v23;
  uint8_t buf[4];
  void *v25;
  uint64_t v26;

  v26 = *MEMORY[0x24BDAC8D0];
  v4 = a3;
  pk_Payment_log();
  v5 = objc_claimAutoreleasedReturnValue();
  v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    pk_Payment_log();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl(&dword_213518000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Requested to Open URL", buf, 2u);
    }

  }
  v8 = [NPKProtoOpenURLRequest alloc];
  objc_msgSend(v4, "data");
  v9 = (void *)objc_claimAutoreleasedReturnValue();

  v10 = -[NPKProtoOpenURLRequest initWithData:](v8, "initWithData:", v9);
  v11 = (void *)MEMORY[0x24BDBCF48];
  -[NPKProtoOpenURLRequest urlString](v10, "urlString");
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v11, "URLWithString:", v12);
  v13 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(MEMORY[0x24BDD1808], "componentsWithURL:resolvingAgainstBaseURL:", v13, 0);
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v14, "scheme");
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  v16 = objc_msgSend(v15, "isEqualToString:", CFSTR("tap-to-radar"));

  if (v16)
  {
    v17 = -[NPKTapToRadarRequest initWithURL:]([NPKTapToRadarRequest alloc], "initWithURL:", v13);
    -[NPKPaymentWebServiceCompanionTargetDevice manager](self, "manager");
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    v22[0] = MEMORY[0x24BDAC760];
    v22[1] = 3221225472;
    v22[2] = __64__NPKPaymentWebServiceCompanionTargetDevice_openURLWithRequest___block_invoke;
    v22[3] = &unk_24CFE79C0;
    v23 = v17;
    v19 = v17;
    objc_msgSend(v18, "fileRadarWithRequest:requestUserPermision:completion:", v19, 0, v22);

LABEL_10:
    goto LABEL_11;
  }
  pk_General_log();
  v20 = objc_claimAutoreleasedReturnValue();
  v21 = os_log_type_enabled(v20, OS_LOG_TYPE_DEFAULT);

  if (v21)
  {
    pk_General_log();
    v19 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138412290;
      v25 = v13;
      _os_log_impl(&dword_213518000, v19, OS_LOG_TYPE_DEFAULT, "Warning: Failed to open URL:%@", buf, 0xCu);
    }
    goto LABEL_10;
  }
LABEL_11:

}

void __64__NPKPaymentWebServiceCompanionTargetDevice_openURLWithRequest___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  _BOOL4 v5;
  NSObject *v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  __int16 v10;
  id v11;
  uint64_t v12;

  v12 = *MEMORY[0x24BDAC8D0];
  v3 = a2;
  pk_Payment_log();
  v4 = objc_claimAutoreleasedReturnValue();
  v5 = os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT);

  if (v5)
  {
    pk_Payment_log();
    v6 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      v7 = *(_QWORD *)(a1 + 32);
      v8 = 138412546;
      v9 = v7;
      v10 = 2112;
      v11 = v3;
      _os_log_impl(&dword_213518000, v6, OS_LOG_TYPE_DEFAULT, "Notice: Filed radar with request:%@  error:%@", (uint8_t *)&v8, 0x16u);
    }

  }
}

- (NPKTapToRadarManager)manager
{
  NPKTapToRadarManager *manager;
  NPKTapToRadarManager *v4;
  NPKTapToRadarManager *v5;

  manager = self->_manager;
  if (!manager)
  {
    v4 = objc_alloc_init(NPKTapToRadarManager);
    v5 = self->_manager;
    self->_manager = v4;

    manager = self->_manager;
  }
  return manager;
}

- (void)handlePeerPaymentTermsAndConditionsAcceptanceRequest:(id)a3
{
  NSObject *v4;
  _BOOL4 v5;
  NSObject *v6;
  void *v7;
  uint8_t v8[16];

  pk_Payment_log();
  v4 = objc_claimAutoreleasedReturnValue();
  v5 = os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT);

  if (v5)
  {
    pk_Payment_log();
    v6 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)v8 = 0;
      _os_log_impl(&dword_213518000, v6, OS_LOG_TYPE_DEFAULT, "Notice: Companion received handlePeerPaymentTermsAndConditionsAcceptanceRequest: message", v8, 2u);
    }

  }
  -[NPKPaymentWebServiceCompanionTargetDevice companionAgentConnection](self, "companionAgentConnection");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "handlePeerPaymentTermsAndConditionsRequestFromGizmo");

}

- (void)handleDeviceUnlockedForPendingProvisioningRequest:(id)a3
{
  NSObject *v4;
  _BOOL4 v5;
  NSObject *v6;
  void *v7;
  uint8_t v8[16];

  pk_Payment_log();
  v4 = objc_claimAutoreleasedReturnValue();
  v5 = os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT);

  if (v5)
  {
    pk_Payment_log();
    v6 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)v8 = 0;
      _os_log_impl(&dword_213518000, v6, OS_LOG_TYPE_DEFAULT, "Notice: (account-pass-provisioning) Companion received handleDeviceUnlockedForPendingProvisioningRequest: message", v8, 2u);
    }

  }
  -[NPKPaymentWebServiceCompanionTargetDevice companionAgentConnection](self, "companionAgentConnection");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "handleDeviceUnlockedForPendingProvisioningRequestFromGizmo");

}

- (BOOL)paymentWebServiceSupportsAccounts:(id)a3
{
  id v4;
  NSObject *v5;
  _BOOL4 v6;
  int v7;
  NSObject *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  int v14;
  void *v15;
  void *v16;
  void *v17;
  int v18;
  NSObject *v19;
  _BOOL4 v20;
  int v22;
  int v23;
  __int16 v24;
  int v25;
  __int16 v26;
  int v27;
  __int16 v28;
  _BOOL4 v29;
  uint64_t v30;

  v30 = *MEMORY[0x24BDAC8D0];
  v4 = a3;
  if ((objc_msgSend(v4, "needsRegistration") & 1) != 0)
  {
    pk_Payment_log();
    v5 = objc_claimAutoreleasedReturnValue();
    v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

    LOBYTE(v7) = 0;
    if (v6)
    {
      pk_Payment_log();
      v8 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
      {
        v22 = 67109120;
        v23 = 0;
        _os_log_impl(&dword_213518000, v8, OS_LOG_TYPE_DEFAULT, "Notice: Payment web service supports accounts = %d, webService needs registration", (uint8_t *)&v22, 8u);
      }
      LOBYTE(v7) = 0;
LABEL_12:

    }
  }
  else
  {
    objc_msgSend(v4, "context");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v9, "primaryRegion");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "accountServiceURL");
    v11 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend(v4, "context");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v12, "primaryRegion");
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    v14 = objc_msgSend(v13, "hasAccounts");

    objc_msgSend(v4, "context");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v15, "configuration");
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    -[NPKPaymentWebServiceCompanionTargetDevice deviceRegion](self, "deviceRegion");
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    v18 = objc_msgSend(v16, "accountServiceEnabledForRegion:", v17);

    if (v11)
      v7 = v14 | v18;
    else
      v7 = 0;
    pk_Payment_log();
    v19 = objc_claimAutoreleasedReturnValue();
    v20 = os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT);

    if (v20)
    {
      pk_Payment_log();
      v8 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
      {
        v22 = 67109888;
        v23 = v7;
        v24 = 1024;
        v25 = v14;
        v26 = 1024;
        v27 = v18;
        v28 = 1024;
        v29 = v11 != 0;
        _os_log_impl(&dword_213518000, v8, OS_LOG_TYPE_DEFAULT, "Notice: Payment web service supports accounts = %d, hasAccount: %d, regionEnabled: %d, hasURL: %d", (uint8_t *)&v22, 0x1Au);
      }
      goto LABEL_12;
    }
  }

  return v7;
}

- (void)updatedAccountsForProvisioningWithCompletion:(id)a3
{
  id v4;
  NSObject *v5;
  _BOOL4 v6;
  NSObject *v7;
  NSObject *v8;
  _QWORD v9[5];
  id v10;
  uint8_t buf[16];

  v4 = a3;
  pk_Payment_log();
  v5 = objc_claimAutoreleasedReturnValue();
  v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    pk_Payment_log();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl(&dword_213518000, v7, OS_LOG_TYPE_DEFAULT, "Notice: (account-pass-provisioning) Target device updatedAccountsForProvisioningWithCompletion", buf, 2u);
    }

  }
  if (v4)
  {
    -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
    v8 = objc_claimAutoreleasedReturnValue();
    v9[0] = MEMORY[0x24BDAC760];
    v9[1] = 3221225472;
    v9[2] = __90__NPKPaymentWebServiceCompanionTargetDevice_updatedAccountsForProvisioningWithCompletion___block_invoke;
    v9[3] = &unk_24CFE7E90;
    v9[4] = self;
    v10 = v4;
    dispatch_async(v8, v9);

  }
}

void __90__NPKPaymentWebServiceCompanionTargetDevice_updatedAccountsForProvisioningWithCompletion___block_invoke(uint64_t a1)
{
  NSObject *v1;
  _BOOL4 v2;
  NSObject *v3;
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  BOOL v15;
  id v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  void *v20;
  id v21;
  id v22;
  id v23;
  _QWORD v25[5];
  id v26;
  id v27;
  uint8_t *v28;
  _QWORD v29[4];
  id v30;
  uint64_t v31;
  id v32;
  uint8_t *v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  uint8_t buf[8];
  uint8_t *v39;
  uint64_t v40;
  uint64_t (*v41)(uint64_t, uint64_t);
  void (*v42)(uint64_t);
  id v43;
  _BYTE v44[128];
  uint64_t v45;

  v45 = *MEMORY[0x24BDAC8D0];
  pk_Payment_log();
  v1 = objc_claimAutoreleasedReturnValue();
  v2 = os_log_type_enabled(v1, OS_LOG_TYPE_DEFAULT);

  if (v2)
  {
    pk_Payment_log();
    v3 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl(&dword_213518000, v3, OS_LOG_TYPE_DEFAULT, "Notice: (account-pass-provisioning) performing accountsWithRequest", buf, 2u);
    }

  }
  *(_QWORD *)buf = 0;
  v39 = buf;
  v40 = 0x3032000000;
  v41 = __Block_byref_object_copy__23;
  v42 = __Block_byref_object_dispose__23;
  v43 = 0;
  v4 = objc_alloc_init(MEMORY[0x24BDBCEB8]);
  v23 = objc_alloc_init(MEMORY[0x24BE6EA18]);
  objc_msgSend(*(id *)(a1 + 32), "companionAgentConnection");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "watchPaymentWebService");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "context");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "regions");
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  v36 = 0u;
  v37 = 0u;
  v34 = 0u;
  v35 = 0u;
  v9 = v8;
  v10 = objc_msgSend(v9, "countByEnumeratingWithState:objects:count:", &v34, v44, 16);
  if (v10)
  {
    v11 = *(_QWORD *)v35;
    do
    {
      v12 = 0;
      do
      {
        if (*(_QWORD *)v35 != v11)
          objc_enumerationMutation(v9);
        objc_msgSend(v9, "objectForKey:", *(_QWORD *)(*((_QWORD *)&v34 + 1) + 8 * v12));
        v13 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v13, "accountServiceURL");
        v14 = (void *)objc_claimAutoreleasedReturnValue();
        v15 = v14 == 0;

        if (!v15)
        {
          v29[0] = MEMORY[0x24BDAC760];
          v29[1] = 3221225472;
          v29[2] = __90__NPKPaymentWebServiceCompanionTargetDevice_updatedAccountsForProvisioningWithCompletion___block_invoke_517;
          v29[3] = &unk_24CFED520;
          v16 = v13;
          v17 = *(_QWORD *)(a1 + 32);
          v30 = v16;
          v31 = v17;
          v33 = buf;
          v32 = v4;
          objc_msgSend(v23, "addOperation:", v29);

        }
        ++v12;
      }
      while (v10 != v12);
      v10 = objc_msgSend(v9, "countByEnumeratingWithState:objects:count:", &v34, v44, 16);
    }
    while (v10);
  }

  objc_msgSend(MEMORY[0x24BDBCEF8], "null");
  v18 = (void *)objc_claimAutoreleasedReturnValue();
  v25[0] = MEMORY[0x24BDAC760];
  v25[1] = 3221225472;
  v25[2] = __90__NPKPaymentWebServiceCompanionTargetDevice_updatedAccountsForProvisioningWithCompletion___block_invoke_3;
  v25[3] = &unk_24CFED548;
  v19 = *(_QWORD *)(a1 + 32);
  v20 = *(void **)(a1 + 40);
  v28 = buf;
  v25[4] = v19;
  v27 = v20;
  v21 = v4;
  v26 = v21;
  v22 = (id)objc_msgSend(v23, "evaluateWithInput:completion:", v18, v25);

  _Block_object_dispose(buf, 8);
}

void __90__NPKPaymentWebServiceCompanionTargetDevice_updatedAccountsForProvisioningWithCompletion___block_invoke_517(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  id v6;
  id v7;
  id v8;
  void *v9;
  void *v10;
  void *v11;
  uint64_t v12;
  void *v13;
  id v14;
  id v15;
  _QWORD v16[4];
  id v17;
  id v18;
  id v19;
  uint64_t v20;

  v6 = a3;
  v7 = a4;
  v8 = objc_alloc_init(MEMORY[0x24BE6E980]);
  objc_msgSend(*(id *)(a1 + 32), "accountServiceURL");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "setAccountServicesURL:", v9);

  objc_msgSend(*(id *)(a1 + 40), "companionAgentConnection");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v10, "watchPaymentWebService");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  v16[0] = MEMORY[0x24BDAC760];
  v16[1] = 3221225472;
  v16[2] = __90__NPKPaymentWebServiceCompanionTargetDevice_updatedAccountsForProvisioningWithCompletion___block_invoke_2;
  v16[3] = &unk_24CFED4F8;
  v13 = *(void **)(a1 + 48);
  v12 = *(_QWORD *)(a1 + 56);
  v19 = v7;
  v20 = v12;
  v17 = v6;
  v18 = v13;
  v14 = v6;
  v15 = v7;
  objc_msgSend(v11, "accountsWithRequest:completion:", v8, v16);

}

void __90__NPKPaymentWebServiceCompanionTargetDevice_updatedAccountsForProvisioningWithCompletion___block_invoke_2(_QWORD *a1, void *a2, void *a3)
{
  void *v6;
  void *v7;
  id v8;

  v8 = a3;
  if (v8)
  {
    objc_storeStrong((id *)(*(_QWORD *)(a1[7] + 8) + 40), a3);
  }
  else
  {
    v6 = (void *)a1[5];
    objc_msgSend(a2, "accounts");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "addObjectsFromArray:", v7);

  }
  (*(void (**)(void))(a1[6] + 16))();

}

void __90__NPKPaymentWebServiceCompanionTargetDevice_updatedAccountsForProvisioningWithCompletion___block_invoke_3(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t v6;
  NSObject *v7;
  _BOOL4 v8;
  NSObject *v9;
  uint64_t v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  NSObject *v15;
  _BOOL4 v16;
  NSObject *v17;
  uint64_t (*v18)(uint64_t, uint64_t);
  NSObject *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t i;
  void *v24;
  uint64_t v25;
  void *v26;
  void *v27;
  void *v28;
  NSObject *v29;
  _BOOL4 v30;
  void *v31;
  NSObject *v32;
  void *v33;
  BOOL v34;
  void *v35;
  void *v36;
  NSObject *v37;
  _BOOL4 v38;
  NSObject *v39;
  uint64_t v40;
  uint64_t v41;
  NSObject *v42;
  id v43;
  id v44;
  id v45;
  uint64_t v46;
  void *v47;
  id v48;
  id v49;
  id v50;
  id v51;
  _QWORD v52[4];
  id v53;
  id v54;
  id v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  _QWORD v60[5];
  _QWORD block[4];
  id v62;
  uint8_t v63[4];
  uint64_t v64;
  __int16 v65;
  uint64_t v66;
  uint8_t v67[128];
  _BYTE buf[24];
  uint64_t (*v69)(uint64_t, uint64_t);
  void (*v70)(uint64_t);
  id v71;
  uint64_t v72;

  v72 = *MEMORY[0x24BDAC8D0];
  v48 = a3;
  v49 = a4;
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40))
  {
    v6 = a1;
    pk_Payment_log();
    v7 = objc_claimAutoreleasedReturnValue();
    v8 = os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT);

    if (v8)
    {
      pk_Payment_log();
      v9 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
      {
        v10 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v6 + 56) + 8) + 40);
        *(_DWORD *)buf = 138412290;
        *(_QWORD *)&buf[4] = v10;
        _os_log_impl(&dword_213518000, v9, OS_LOG_TYPE_DEFAULT, "Notice: (account-pass-provisioning) error executing accountsWithRequest %@", buf, 0xCu);
      }

    }
    objc_msgSend(*(id *)(v6 + 32), "companionAgentConnection");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v11, "watchPaymentWebService");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v12, "context");
    v13 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend(v13, "primaryRegion");
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    pk_Payment_log();
    v15 = objc_claimAutoreleasedReturnValue();
    v16 = os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT);

    if (v16)
    {
      pk_Payment_log();
      v17 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
      {
        objc_msgSend(v14, "accountServiceURL");
        v18 = (uint64_t (*)(uint64_t, uint64_t))objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138412802;
        *(_QWORD *)&buf[4] = v13;
        *(_WORD *)&buf[12] = 2112;
        *(_QWORD *)&buf[14] = v14;
        *(_WORD *)&buf[22] = 2112;
        v69 = v18;
        _os_log_impl(&dword_213518000, v17, OS_LOG_TYPE_DEFAULT, "Notice: (account-pass-provisioning) context %@ primaryRegion %@ accountServiceURL %@", buf, 0x20u);

      }
    }
    dispatch_get_global_queue(0, 0);
    v19 = objc_claimAutoreleasedReturnValue();
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 3221225472;
    block[2] = __90__NPKPaymentWebServiceCompanionTargetDevice_updatedAccountsForProvisioningWithCompletion___block_invoke_522;
    block[3] = &unk_24CFE7B00;
    v62 = *(id *)(v6 + 48);
    dispatch_async(v19, block);

    goto LABEL_42;
  }
  v51 = objc_alloc_init(MEMORY[0x24BDBCEB8]);
  v50 = objc_alloc_init(MEMORY[0x24BDBCEB8]);
  *(_QWORD *)buf = 0;
  *(_QWORD *)&buf[8] = buf;
  *(_QWORD *)&buf[16] = 0x3032000000;
  v69 = __Block_byref_object_copy__23;
  v70 = __Block_byref_object_dispose__23;
  v71 = 0;
  objc_msgSend(*(id *)(a1 + 32), "companionAgentConnection");
  v47 = (void *)objc_claimAutoreleasedReturnValue();
  v60[0] = MEMORY[0x24BDAC760];
  v60[1] = 3221225472;
  v60[2] = __90__NPKPaymentWebServiceCompanionTargetDevice_updatedAccountsForProvisioningWithCompletion___block_invoke_2_523;
  v60[3] = &unk_24CFECF48;
  v60[4] = buf;
  objc_msgSend(v47, "paymentPassUniqueIDsSynchronous:reply:", 1, v60);
  v58 = 0u;
  v59 = 0u;
  v56 = 0u;
  v57 = 0u;
  v20 = *(id *)(a1 + 40);
  v21 = objc_msgSend(v20, "countByEnumeratingWithState:objects:count:", &v56, v67, 16);
  v46 = a1;
  if (!v21)
    goto LABEL_37;
  v22 = *(_QWORD *)v57;
  do
  {
    for (i = 0; i != v21; ++i)
    {
      if (*(_QWORD *)v57 != v22)
        objc_enumerationMutation(v20);
      v24 = *(void **)(*((_QWORD *)&v56 + 1) + 8 * i);
      v25 = objc_msgSend(v24, "state", v46);
      objc_msgSend(v24, "state");
      PKAccountStateToString();
      v26 = (void *)objc_claimAutoreleasedReturnValue();
      if ((objc_msgSend(v24, "provisioningAllowed") & 1) == 0)
      {
        PKLogFacilityTypeGetObject();
        v32 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v32, OS_LOG_TYPE_DEFAULT))
        {
          objc_msgSend(v24, "accountIdentifier");
          v33 = (void *)objc_claimAutoreleasedReturnValue();
          *(_DWORD *)v63 = 138412546;
          v64 = (uint64_t)v33;
          v65 = 2112;
          v66 = (uint64_t)v26;
          _os_log_impl(&dword_213518000, v32, OS_LOG_TYPE_DEFAULT, "(account-pass-provisioning) Account: %@ with state: %@ does not allow provisioning and will not be offered", v63, 0x16u);

        }
        goto LABEL_34;
      }
      if ((unint64_t)(v25 - 1) < 4)
      {
        v27 = *(void **)(*(_QWORD *)&buf[8] + 40);
        objc_msgSend(v24, "associatedPassUniqueID");
        v28 = (void *)objc_claimAutoreleasedReturnValue();
        LODWORD(v27) = objc_msgSend(v27, "containsObject:", v28);

        PKLogFacilityTypeGetObject();
        v29 = objc_claimAutoreleasedReturnValue();
        v30 = os_log_type_enabled(v29, OS_LOG_TYPE_DEFAULT);
        if ((_DWORD)v27)
        {
          if (v30)
          {
            objc_msgSend(v24, "accountIdentifier");
            v31 = (void *)objc_claimAutoreleasedReturnValue();
            *(_DWORD *)v63 = 138412546;
            v64 = (uint64_t)v31;
            v65 = 2112;
            v66 = (uint64_t)v26;
            _os_log_impl(&dword_213518000, v29, OS_LOG_TYPE_DEFAULT, "(account-pass-provisioning) Account: %@ with state: %@ is on device", v63, 0x16u);

          }
          v32 = objc_msgSend(v24, "copy");
          objc_msgSend(v50, "addObject:", v32);
        }
        else
        {
          if (v30)
          {
            objc_msgSend(v24, "accountIdentifier");
            v36 = (void *)objc_claimAutoreleasedReturnValue();
            *(_DWORD *)v63 = 138412546;
            v64 = (uint64_t)v36;
            v65 = 2112;
            v66 = (uint64_t)v26;
            _os_log_impl(&dword_213518000, v29, OS_LOG_TYPE_DEFAULT, "(account-pass-provisioning) Account: %@ with state: %@ is valid for provisioning", v63, 0x16u);

          }
          v32 = objc_msgSend(v24, "copy");
          objc_msgSend(v51, "addObject:", v32);
        }
LABEL_34:

        goto LABEL_35;
      }
      if (v25)
        v34 = v25 == 5;
      else
        v34 = 1;
      if (v34)
      {
        PKLogFacilityTypeGetObject();
        v32 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v32, OS_LOG_TYPE_DEFAULT))
        {
          objc_msgSend(v24, "accountIdentifier");
          v35 = (void *)objc_claimAutoreleasedReturnValue();
          *(_DWORD *)v63 = 138412546;
          v64 = (uint64_t)v35;
          v65 = 2112;
          v66 = (uint64_t)v26;
          _os_log_impl(&dword_213518000, v32, OS_LOG_TYPE_DEFAULT, "(account-pass-provisioning) Account: %@ with state: %@ is not valid for provisioning", v63, 0x16u);

        }
        goto LABEL_34;
      }
LABEL_35:

    }
    v21 = objc_msgSend(v20, "countByEnumeratingWithState:objects:count:", &v56, v67, 16);
  }
  while (v21);
LABEL_37:

  pk_General_log();
  v37 = objc_claimAutoreleasedReturnValue();
  v38 = os_log_type_enabled(v37, OS_LOG_TYPE_DEFAULT);

  if (v38)
  {
    pk_General_log();
    v39 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v39, OS_LOG_TYPE_DEFAULT))
    {
      v40 = objc_msgSend(v51, "count");
      v41 = objc_msgSend(v50, "count");
      *(_DWORD *)v63 = 134218240;
      v64 = v40;
      v65 = 2048;
      v66 = v41;
      _os_log_impl(&dword_213518000, v39, OS_LOG_TYPE_DEFAULT, "Notice: (account-pass-provisioning)updatedAccountsForProvisioningWithCompletion found %lu accounts requiring provision and %lu on device ", v63, 0x16u);
    }

  }
  dispatch_get_global_queue(0, 0);
  v42 = objc_claimAutoreleasedReturnValue();
  v52[0] = MEMORY[0x24BDAC760];
  v52[1] = 3221225472;
  v52[2] = __90__NPKPaymentWebServiceCompanionTargetDevice_updatedAccountsForProvisioningWithCompletion___block_invoke_524;
  v52[3] = &unk_24CFE92B8;
  v43 = *(id *)(v46 + 48);
  v53 = v51;
  v54 = v50;
  v55 = v43;
  v44 = v50;
  v45 = v51;
  dispatch_async(v42, v52);

  _Block_object_dispose(buf, 8);
LABEL_42:

}

uint64_t __90__NPKPaymentWebServiceCompanionTargetDevice_updatedAccountsForProvisioningWithCompletion___block_invoke_522(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

void __90__NPKPaymentWebServiceCompanionTargetDevice_updatedAccountsForProvisioningWithCompletion___block_invoke_2_523(uint64_t a1, void *a2)
{
  objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40), a2);
}

uint64_t __90__NPKPaymentWebServiceCompanionTargetDevice_updatedAccountsForProvisioningWithCompletion___block_invoke_524(_QWORD *a1)
{
  return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(a1[6] + 16))(a1[6], a1[4], a1[5]);
}

- (void)triggerCloudStoreZoneCreationForAccountResponse:(id)a3
{
  id v4;
  NSObject *v5;
  _BOOL4 v6;
  NSObject *v7;
  void *v8;
  void *v9;
  void *v10;
  NSObject *v11;
  NSObject *v12;
  _BOOL4 v13;
  NSObject *v14;
  uint64_t v15;
  uint8_t v16[8];
  _QWORD block[5];
  id v18;
  id v19;
  __int128 *p_buf;
  uint64_t *v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  char v25;
  __int128 buf;
  uint64_t v27;
  uint64_t (*v28)(uint64_t, uint64_t);
  void (*v29)(uint64_t);
  id v30;
  uint64_t v31;

  v31 = *MEMORY[0x24BDAC8D0];
  v4 = a3;
  pk_Payment_log();
  v5 = objc_claimAutoreleasedReturnValue();
  v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    pk_Payment_log();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend(v4, "npkDescription");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      LODWORD(buf) = 138412290;
      *(_QWORD *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_213518000, v7, OS_LOG_TYPE_DEFAULT, "Notice: (apple-balance-pass-provisioning) Target device triggerCloudStoreZoneCreationForAccount: incoming protobuf: %@", (uint8_t *)&buf, 0xCu);

    }
  }
  objc_msgSend(v4, "context");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "incomingResponseIdentifier");
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  *(_QWORD *)&buf = 0;
  *((_QWORD *)&buf + 1) = &buf;
  v27 = 0x3032000000;
  v28 = __Block_byref_object_copy__342;
  v29 = __Block_byref_object_dispose__343;
  v30 = 0;
  v22 = 0;
  v23 = &v22;
  v24 = 0x2020000000;
  v25 = 0;
  if (v10)
  {
    -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
    v11 = objc_claimAutoreleasedReturnValue();
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 3221225472;
    block[2] = __93__NPKPaymentWebServiceCompanionTargetDevice_triggerCloudStoreZoneCreationForAccountResponse___block_invoke;
    block[3] = &unk_24CFED0D8;
    block[4] = self;
    v18 = v10;
    v19 = v4;
    p_buf = &buf;
    v21 = &v22;
    dispatch_sync(v11, block);

  }
  else
  {
    pk_Payment_log();
    v12 = objc_claimAutoreleasedReturnValue();
    v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      pk_Payment_log();
      v14 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)v16 = 0;
        _os_log_impl(&dword_213518000, v14, OS_LOG_TYPE_ERROR, "Error: (apple-balance-pass-provisioning) No associated message ID in response", v16, 2u);
      }

    }
  }
  v15 = *(_QWORD *)(*((_QWORD *)&buf + 1) + 40);
  if (v15)
    (*(void (**)(uint64_t, _QWORD))(v15 + 16))(v15, *((unsigned __int8 *)v23 + 24));
  _Block_object_dispose(&v22, 8);
  _Block_object_dispose(&buf, 8);

}

void __93__NPKPaymentWebServiceCompanionTargetDevice_triggerCloudStoreZoneCreationForAccountResponse___block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;
  NPKProtoTriggerCloudStoreZoneCreationForAccountResponse *v4;
  void *v5;
  NPKProtoTriggerCloudStoreZoneCreationForAccountResponse *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  NSObject *v11;
  _BOOL4 v12;
  NSObject *v13;
  uint8_t v14[16];

  objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "objectForKey:", *(_QWORD *)(a1 + 40));
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  if (v3)
  {
    v4 = [NPKProtoTriggerCloudStoreZoneCreationForAccountResponse alloc];
    objc_msgSend(*(id *)(a1 + 48), "data");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    v6 = -[NPKProtoTriggerCloudStoreZoneCreationForAccountResponse initWithData:](v4, "initWithData:", v5);

    objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "removeObjectForKey:", *(_QWORD *)(a1 + 40));

    objc_msgSend(v3, "completionHandler");
    v8 = objc_claimAutoreleasedReturnValue();
    v9 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
    v10 = *(void **)(v9 + 40);
    *(_QWORD *)(v9 + 40) = v8;

    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 24) = -[NPKProtoTriggerCloudStoreZoneCreationForAccountResponse success](v6, "success");
  }
  else
  {
    pk_Payment_log();
    v11 = objc_claimAutoreleasedReturnValue();
    v12 = os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT);

    if (v12)
    {
      pk_Payment_log();
      v13 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)v14 = 0;
        _os_log_impl(&dword_213518000, v13, OS_LOG_TYPE_DEFAULT, "Warning: (apple-balance-pass-provisioning) got response with no associated message handler", v14, 2u);
      }

    }
  }

}

- (void)triggerCloudStoreZoneCreationForAccount:(id)a3 withCompletion:(id)a4
{
  id v6;
  id v7;
  int v8;
  NSObject *v9;
  _BOOL4 v10;
  NSObject *v11;
  const __CFString *v12;
  NSObject *v13;
  NSObject *v14;
  _BOOL4 v15;
  NSObject *v16;
  const char *v17;
  NSObject *v18;
  _BOOL4 v19;
  _QWORD block[4];
  id v21;
  NPKPaymentWebServiceCompanionTargetDevice *v22;
  id v23;
  uint8_t buf[4];
  const __CFString *v25;
  uint64_t v26;

  v26 = *MEMORY[0x24BDAC8D0];
  v6 = a3;
  v7 = a4;
  v8 = NPKPairedOrPairingDeviceSupportsAppleBalance();
  pk_Payment_log();
  v9 = objc_claimAutoreleasedReturnValue();
  v10 = os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT);

  if (v10)
  {
    pk_Payment_log();
    v11 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
    {
      v12 = CFSTR("NO");
      if (v8)
        v12 = CFSTR("YES");
      *(_DWORD *)buf = 138412290;
      v25 = v12;
      _os_log_impl(&dword_213518000, v11, OS_LOG_TYPE_DEFAULT, "Notice: (apple-balance-pass-provisioning) Target device triggerCloudStoreZoneCreationForAccount. Apple Balance card supported by device: %@", buf, 0xCu);
    }

  }
  if ((v8 & 1) == 0)
  {
    pk_General_log();
    v14 = objc_claimAutoreleasedReturnValue();
    v15 = os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT);

    if (!v15)
      goto LABEL_18;
    pk_General_log();
    v16 = objc_claimAutoreleasedReturnValue();
    if (!os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
      goto LABEL_17;
    *(_WORD *)buf = 0;
    v17 = "Notice: (apple-balance-pass-provisioning) triggerCloudStoreZoneCreationForAccount: Called on device with no su"
          "pport for Apple Balance card.";
    goto LABEL_16;
  }
  if (v6)
  {
    -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
    v13 = objc_claimAutoreleasedReturnValue();
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 3221225472;
    block[2] = __100__NPKPaymentWebServiceCompanionTargetDevice_triggerCloudStoreZoneCreationForAccount_withCompletion___block_invoke;
    block[3] = &unk_24CFE84E8;
    v21 = v6;
    v22 = self;
    v23 = v7;
    dispatch_sync(v13, block);

    goto LABEL_20;
  }
  pk_General_log();
  v18 = objc_claimAutoreleasedReturnValue();
  v19 = os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT);

  if (v19)
  {
    pk_General_log();
    v16 = objc_claimAutoreleasedReturnValue();
    if (!os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
    {
LABEL_17:

      goto LABEL_18;
    }
    *(_WORD *)buf = 0;
    v17 = "Notice: (apple-balance-pass-provisioning) triggerCloudStoreZoneCreationForAccount: Called with no account";
LABEL_16:
    _os_log_impl(&dword_213518000, v16, OS_LOG_TYPE_DEFAULT, v17, buf, 2u);
    goto LABEL_17;
  }
LABEL_18:
  if (v7)
    (*((void (**)(id, _QWORD))v7 + 2))(v7, 0);
LABEL_20:

}

void __100__NPKPaymentWebServiceCompanionTargetDevice_triggerCloudStoreZoneCreationForAccount_withCompletion___block_invoke(uint64_t a1)
{
  NPKProtoTriggerCloudStoreZoneCreationForAccountRequest *v2;
  void *v3;
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  NSObject *v10;
  void *v11;
  void *v12;
  void *v13;
  NSObject *v14;
  _BOOL4 v15;
  const char *v16;
  NSObject *v17;
  os_log_type_t v18;
  NSObject *v19;
  _BOOL4 v20;
  _QWORD v21[4];
  id v22;
  uint8_t buf[4];
  void *v24;
  uint64_t v25;
  _QWORD v26[2];

  v26[1] = *MEMORY[0x24BDAC8D0];
  v2 = objc_alloc_init(NPKProtoTriggerCloudStoreZoneCreationForAccountRequest);
  NPKSecureArchiveObject(*(void **)(a1 + 32));
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  -[NPKProtoTriggerCloudStoreZoneCreationForAccountRequest setAccountData:](v2, "setAccountData:", v3);

  v4 = objc_alloc(MEMORY[0x24BE4FE40]);
  -[NPKProtoTriggerCloudStoreZoneCreationForAccountRequest data](v2, "data");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = (void *)objc_msgSend(v4, "initWithProtobufData:type:isResponse:", v5, 130, 0);

  v7 = *(void **)(a1 + 40);
  v25 = *MEMORY[0x24BE4FA90];
  v26[0] = MEMORY[0x24BDBD1C8];
  objc_msgSend(MEMORY[0x24BDBCE70], "dictionaryWithObjects:forKeys:count:", v26, &v25, 1);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "_sendProtobuf:responseExpected:extraOptions:", v6, 1, v8);
  v9 = (void *)objc_claimAutoreleasedReturnValue();

  if (v9)
  {
    if (*(_QWORD *)(a1 + 48))
    {
      v10 = MEMORY[0x2199B6780]();
      v21[0] = MEMORY[0x24BDAC760];
      v21[1] = 3221225472;
      v21[2] = __100__NPKPaymentWebServiceCompanionTargetDevice_triggerCloudStoreZoneCreationForAccount_withCompletion___block_invoke_2;
      v21[3] = &unk_24CFE7B80;
      v22 = *(id *)(a1 + 48);
      v11 = (void *)MEMORY[0x2199B6780](v21);
      v12 = *(void **)(a1 + 40);
      v13 = (void *)MEMORY[0x2199B6780](v10);
      objc_msgSend(v12, "_trackOutstandingRequestWithMessageIdentifier:completionHandler:errorHandler:", v9, v13, v11);

LABEL_11:
      goto LABEL_12;
    }
    pk_Payment_log();
    v19 = objc_claimAutoreleasedReturnValue();
    v20 = os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT);

    if (v20)
    {
      pk_Payment_log();
      v10 = objc_claimAutoreleasedReturnValue();
      if (!os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
        goto LABEL_11;
      *(_DWORD *)buf = 138412290;
      v24 = v9;
      v16 = "Warning: (apple-balance-pass-provisioning) No response expected for message with identifier %@";
      v17 = v10;
      v18 = OS_LOG_TYPE_DEFAULT;
      goto LABEL_10;
    }
  }
  else
  {
    pk_Payment_log();
    v14 = objc_claimAutoreleasedReturnValue();
    v15 = os_log_type_enabled(v14, OS_LOG_TYPE_ERROR);

    if (v15)
    {
      pk_Payment_log();
      v10 = objc_claimAutoreleasedReturnValue();
      if (!os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
        goto LABEL_11;
      *(_DWORD *)buf = 138412290;
      v24 = v6;
      v16 = "Error: (apple-balance-pass-provisioning) No message identifier for protobuf %@";
      v17 = v10;
      v18 = OS_LOG_TYPE_ERROR;
LABEL_10:
      _os_log_impl(&dword_213518000, v17, v18, v16, buf, 0xCu);
      goto LABEL_11;
    }
  }
LABEL_12:

}

uint64_t __100__NPKPaymentWebServiceCompanionTargetDevice_triggerCloudStoreZoneCreationForAccount_withCompletion___block_invoke_2(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 32);
  if (result)
    return (*(uint64_t (**)(uint64_t, _QWORD))(result + 16))(result, 0);
  return result;
}

- (void)provisionPassForRemoteCredentialWithTypeAndIdentifierResponse:(id)a3
{
  id v4;
  NSObject *v5;
  _BOOL4 v6;
  NSObject *v7;
  void *v8;
  void *v9;
  void *v10;
  NSObject *v11;
  NSObject *v12;
  _BOOL4 v13;
  NSObject *v14;
  uint64_t v15;
  uint8_t v16[16];
  _QWORD block[5];
  id v18;
  id v19;
  __int128 *p_buf;
  uint64_t *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t (*v26)(uint64_t, uint64_t);
  void (*v27)(uint64_t);
  id v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  char v32;
  __int128 buf;
  uint64_t v34;
  uint64_t (*v35)(uint64_t, uint64_t);
  void (*v36)(uint64_t);
  id v37;
  uint64_t v38;

  v38 = *MEMORY[0x24BDAC8D0];
  v4 = a3;
  pk_Payment_log();
  v5 = objc_claimAutoreleasedReturnValue();
  v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    pk_Payment_log();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend(v4, "npkDescription");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      LODWORD(buf) = 138412290;
      *(_QWORD *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_213518000, v7, OS_LOG_TYPE_DEFAULT, "Notice: (apple-balance-pass-provisioning) Target device provisionPassForRemoteCredentialWithTypeAndIdentifierResponse: incoming protobuf: %@", (uint8_t *)&buf, 0xCu);

    }
  }
  objc_msgSend(v4, "context");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "incomingResponseIdentifier");
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  *(_QWORD *)&buf = 0;
  *((_QWORD *)&buf + 1) = &buf;
  v34 = 0x3032000000;
  v35 = __Block_byref_object_copy__342;
  v36 = __Block_byref_object_dispose__343;
  v37 = 0;
  v29 = 0;
  v30 = &v29;
  v31 = 0x2020000000;
  v32 = 0;
  v23 = 0;
  v24 = &v23;
  v25 = 0x3032000000;
  v26 = __Block_byref_object_copy__23;
  v27 = __Block_byref_object_dispose__23;
  v28 = 0;
  if (v10)
  {
    -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
    v11 = objc_claimAutoreleasedReturnValue();
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 3221225472;
    block[2] = __107__NPKPaymentWebServiceCompanionTargetDevice_provisionPassForRemoteCredentialWithTypeAndIdentifierResponse___block_invoke;
    block[3] = &unk_24CFED060;
    block[4] = self;
    v18 = v10;
    v19 = v4;
    p_buf = &buf;
    v21 = &v29;
    v22 = &v23;
    dispatch_sync(v11, block);

  }
  else
  {
    pk_Payment_log();
    v12 = objc_claimAutoreleasedReturnValue();
    v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      pk_Payment_log();
      v14 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)v16 = 0;
        _os_log_impl(&dword_213518000, v14, OS_LOG_TYPE_ERROR, "Error: (apple-balance-pass-provisioning) No associated message ID in response", v16, 2u);
      }

    }
  }
  v15 = *(_QWORD *)(*((_QWORD *)&buf + 1) + 40);
  if (v15)
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v15 + 16))(v15, *((unsigned __int8 *)v30 + 24), v24[5]);
  _Block_object_dispose(&v23, 8);

  _Block_object_dispose(&v29, 8);
  _Block_object_dispose(&buf, 8);

}

void __107__NPKPaymentWebServiceCompanionTargetDevice_provisionPassForRemoteCredentialWithTypeAndIdentifierResponse___block_invoke(uint64_t a1)
{
  void *v1;
  void *v3;
  void *v4;
  NPKProtoProvisionPassForRemoteCredentialWithTypeAndIdentifierResponse *v5;
  void *v6;
  NSObject *v7;
  NSObject *v8;
  _BOOL4 v9;
  NSObject *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  int v15;
  NSObject *v16;
  void *v17;
  NSObject *v18;
  _BOOL4 v19;
  uint8_t v20[16];
  uint8_t buf[16];

  objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "objectForKey:", *(_QWORD *)(a1 + 40));
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  if (v4)
  {
    v5 = [NPKProtoProvisionPassForRemoteCredentialWithTypeAndIdentifierResponse alloc];
    objc_msgSend(*(id *)(a1 + 48), "data");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    v7 = -[NPKProtoProvisionPassForRemoteCredentialWithTypeAndIdentifierResponse initWithData:](v5, "initWithData:", v6);

    if (-[NSObject hasPending](v7, "hasPending") && -[NSObject pending](v7, "pending"))
    {
      pk_Payment_log();
      v8 = objc_claimAutoreleasedReturnValue();
      v9 = os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT);

      if (v9)
      {
        pk_Payment_log();
        v10 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)buf = 0;
          _os_log_impl(&dword_213518000, v10, OS_LOG_TYPE_DEFAULT, "Notice: (apple-balance-pass-provisioning) Got pending response for provisionPassForRemoteCredentialWithTypeAndIdentifierResponse.", buf, 2u);
        }

      }
      objc_msgSend(v4, "setOrResetCleanupTimer");
    }
    else
    {
      objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v11, "removeObjectForKey:", *(_QWORD *)(a1 + 40));

      objc_msgSend(v4, "completionHandler");
      v12 = objc_claimAutoreleasedReturnValue();
      v13 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
      v14 = *(void **)(v13 + 40);
      *(_QWORD *)(v13 + 40) = v12;

      *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 24) = -[NSObject success](v7, "success");
      v15 = -[NSObject hasErrorData](v7, "hasErrorData");
      if (v15)
      {
        -[NSObject errorData](v7, "errorData");
        v1 = (void *)objc_claimAutoreleasedReturnValue();
        v16 = objc_opt_class();
        NPKSecureUnarchiveObject(v1, v16);
        v17 = (void *)objc_claimAutoreleasedReturnValue();
      }
      else
      {
        v17 = 0;
      }
      objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 72) + 8) + 40), v17);
      if (v15)
      {

      }
    }
LABEL_17:

    goto LABEL_18;
  }
  pk_Payment_log();
  v18 = objc_claimAutoreleasedReturnValue();
  v19 = os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT);

  if (v19)
  {
    pk_Payment_log();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)v20 = 0;
      _os_log_impl(&dword_213518000, v7, OS_LOG_TYPE_DEFAULT, "Warning: (apple-balance-pass-provisioning) got response with no associated message handler", v20, 2u);
    }
    goto LABEL_17;
  }
LABEL_18:

}

- (void)provisionPassForRemoteCredentialWithType:(int64_t)a3 andIdentifier:(id)a4 completion:(id)a5
{
  id v8;
  id v9;
  int v10;
  NSObject *v11;
  _BOOL4 v12;
  NSObject *v13;
  const __CFString *v14;
  NSObject *v15;
  void *v16;
  NSObject *v17;
  _BOOL4 v18;
  NSObject *v19;
  _QWORD v20[4];
  id v21;
  NPKPaymentWebServiceCompanionTargetDevice *v22;
  id v23;
  int64_t v24;
  uint8_t buf[4];
  const __CFString *v26;
  uint64_t v27;

  v27 = *MEMORY[0x24BDAC8D0];
  v8 = a4;
  v9 = a5;
  if (a3 != 135)
    goto LABEL_9;
  v10 = NPKPairedOrPairingDeviceSupportsAppleBalance();
  pk_Payment_log();
  v11 = objc_claimAutoreleasedReturnValue();
  v12 = os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT);

  if (v12)
  {
    pk_Payment_log();
    v13 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
    {
      v14 = CFSTR("NO");
      if (v10)
        v14 = CFSTR("YES");
      *(_DWORD *)buf = 138412290;
      v26 = v14;
      _os_log_impl(&dword_213518000, v13, OS_LOG_TYPE_DEFAULT, "Notice: (apple-balance-pass-provisioning) Target device provisionPassForRemoteCredentialWithType. Apple Balance card supported by device: %@", buf, 0xCu);
    }

  }
  if ((v10 & 1) != 0)
  {
LABEL_9:
    -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
    v15 = objc_claimAutoreleasedReturnValue();
    v20[0] = MEMORY[0x24BDAC760];
    v20[1] = 3221225472;
    v20[2] = __111__NPKPaymentWebServiceCompanionTargetDevice_provisionPassForRemoteCredentialWithType_andIdentifier_completion___block_invoke;
    v20[3] = &unk_24CFEBE90;
    v24 = a3;
    v21 = v8;
    v22 = self;
    v23 = v9;
    dispatch_sync(v15, v20);

    v16 = v21;
LABEL_10:

    goto LABEL_11;
  }
  pk_General_log();
  v17 = objc_claimAutoreleasedReturnValue();
  v18 = os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT);

  if (v18)
  {
    pk_General_log();
    v19 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl(&dword_213518000, v19, OS_LOG_TYPE_DEFAULT, "Warning: (apple-balance-pass-provisioning) provisionPassForRemoteCredentialWithType: Called on device with no support for Apple Balance card.", buf, 2u);
    }

  }
  if (v9)
  {
    objc_msgSend(MEMORY[0x24BDD1540], "errorWithDomain:code:userInfo:", CFSTR("com.apple.NPKErrorDomain"), -1006, 0);
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    (*((void (**)(id, _QWORD, void *))v9 + 2))(v9, 0, v16);
    goto LABEL_10;
  }
LABEL_11:

}

void __111__NPKPaymentWebServiceCompanionTargetDevice_provisionPassForRemoteCredentialWithType_andIdentifier_completion___block_invoke(uint64_t a1)
{
  NPKProtoProvisionPassForRemoteCredentialWithTypeAndIdentifierRequest *v2;
  id v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  NSObject *v9;
  void *v10;
  void *v11;
  void *v12;
  NSObject *v13;
  _BOOL4 v14;
  const char *v15;
  NSObject *v16;
  os_log_type_t v17;
  NSObject *v18;
  _BOOL4 v19;
  _QWORD v20[4];
  id v21;
  uint8_t buf[4];
  void *v23;
  uint64_t v24;
  _QWORD v25[2];

  v25[1] = *MEMORY[0x24BDAC8D0];
  v2 = objc_alloc_init(NPKProtoProvisionPassForRemoteCredentialWithTypeAndIdentifierRequest);
  -[NPKProtoProvisionPassForRemoteCredentialWithTypeAndIdentifierRequest setCredentialType:](v2, "setCredentialType:", *(_QWORD *)(a1 + 56));
  -[NPKProtoProvisionPassForRemoteCredentialWithTypeAndIdentifierRequest setCredentialIdentifier:](v2, "setCredentialIdentifier:", *(_QWORD *)(a1 + 32));
  v3 = objc_alloc(MEMORY[0x24BE4FE40]);
  -[NPKProtoProvisionPassForRemoteCredentialWithTypeAndIdentifierRequest data](v2, "data");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = (void *)objc_msgSend(v3, "initWithProtobufData:type:isResponse:", v4, 131, 0);

  v6 = *(void **)(a1 + 40);
  v24 = *MEMORY[0x24BE4FA90];
  v25[0] = MEMORY[0x24BDBD1C8];
  objc_msgSend(MEMORY[0x24BDBCE70], "dictionaryWithObjects:forKeys:count:", v25, &v24, 1);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "_sendProtobuf:responseExpected:extraOptions:", v5, 1, v7);
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  if (v8)
  {
    if (*(_QWORD *)(a1 + 48))
    {
      v9 = MEMORY[0x2199B6780]();
      v20[0] = MEMORY[0x24BDAC760];
      v20[1] = 3221225472;
      v20[2] = __111__NPKPaymentWebServiceCompanionTargetDevice_provisionPassForRemoteCredentialWithType_andIdentifier_completion___block_invoke_2;
      v20[3] = &unk_24CFE7B80;
      v21 = *(id *)(a1 + 48);
      v10 = (void *)MEMORY[0x2199B6780](v20);
      v11 = *(void **)(a1 + 40);
      v12 = (void *)MEMORY[0x2199B6780](v9);
      objc_msgSend(v11, "_trackOutstandingRequestWithMessageIdentifier:completionHandler:errorHandler:", v8, v12, v10);

LABEL_11:
      goto LABEL_12;
    }
    pk_Payment_log();
    v18 = objc_claimAutoreleasedReturnValue();
    v19 = os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT);

    if (v19)
    {
      pk_Payment_log();
      v9 = objc_claimAutoreleasedReturnValue();
      if (!os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
        goto LABEL_11;
      *(_DWORD *)buf = 138412290;
      v23 = v8;
      v15 = "Warning: (apple-balance-pass-provisioning) No response expected for message with identifier %@";
      v16 = v9;
      v17 = OS_LOG_TYPE_DEFAULT;
      goto LABEL_10;
    }
  }
  else
  {
    pk_Payment_log();
    v13 = objc_claimAutoreleasedReturnValue();
    v14 = os_log_type_enabled(v13, OS_LOG_TYPE_ERROR);

    if (v14)
    {
      pk_Payment_log();
      v9 = objc_claimAutoreleasedReturnValue();
      if (!os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
        goto LABEL_11;
      *(_DWORD *)buf = 138412290;
      v23 = v5;
      v15 = "Error: (apple-balance-pass-provisioning) No message identifier for protobuf %@";
      v16 = v9;
      v17 = OS_LOG_TYPE_ERROR;
LABEL_10:
      _os_log_impl(&dword_213518000, v16, v17, v15, buf, 0xCu);
      goto LABEL_11;
    }
  }
LABEL_12:

}

uint64_t __111__NPKPaymentWebServiceCompanionTargetDevice_provisionPassForRemoteCredentialWithType_andIdentifier_completion___block_invoke_2(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 32);
  if (result)
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(result + 16))(result, 0, a2);
  return result;
}

- (void)deviceMetadataResponse:(id)a3
{
  id v4;
  NSObject *v5;
  _BOOL4 v6;
  NSObject *v7;
  void *v8;
  void *v9;
  void *v10;
  NSObject *v11;
  NSObject *v12;
  _BOOL4 v13;
  NSObject *v14;
  uint64_t v15;
  uint8_t v16[8];
  _QWORD block[5];
  id v18;
  id v19;
  __int128 *p_buf;
  uint64_t *v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t (*v25)(uint64_t, uint64_t);
  void (*v26)(uint64_t);
  id v27;
  __int128 buf;
  uint64_t v29;
  uint64_t (*v30)(uint64_t, uint64_t);
  void (*v31)(uint64_t);
  id v32;
  uint64_t v33;

  v33 = *MEMORY[0x24BDAC8D0];
  v4 = a3;
  pk_Payment_log();
  v5 = objc_claimAutoreleasedReturnValue();
  v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    pk_Payment_log();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend(v4, "npkDescription");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      LODWORD(buf) = 138412290;
      *(_QWORD *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_213518000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Target deviceMetadataWithFields (account-pass-protobuf): incoming protobuf %@", (uint8_t *)&buf, 0xCu);

    }
  }
  objc_msgSend(v4, "context");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "incomingResponseIdentifier");
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  *(_QWORD *)&buf = 0;
  *((_QWORD *)&buf + 1) = &buf;
  v29 = 0x3032000000;
  v30 = __Block_byref_object_copy__342;
  v31 = __Block_byref_object_dispose__343;
  v32 = 0;
  v22 = 0;
  v23 = &v22;
  v24 = 0x3032000000;
  v25 = __Block_byref_object_copy__23;
  v26 = __Block_byref_object_dispose__23;
  v27 = 0;
  if (v10)
  {
    -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
    v11 = objc_claimAutoreleasedReturnValue();
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 3221225472;
    block[2] = __68__NPKPaymentWebServiceCompanionTargetDevice_deviceMetadataResponse___block_invoke;
    block[3] = &unk_24CFED0D8;
    block[4] = self;
    v18 = v10;
    v19 = v4;
    p_buf = &buf;
    v21 = &v22;
    dispatch_sync(v11, block);

  }
  else
  {
    pk_Payment_log();
    v12 = objc_claimAutoreleasedReturnValue();
    v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      pk_Payment_log();
      v14 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)v16 = 0;
        _os_log_impl(&dword_213518000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v16, 2u);
      }

    }
  }
  v15 = *(_QWORD *)(*((_QWORD *)&buf + 1) + 40);
  if (v15)
    (*(void (**)(uint64_t, uint64_t))(v15 + 16))(v15, v23[5]);
  _Block_object_dispose(&v22, 8);

  _Block_object_dispose(&buf, 8);
}

void __68__NPKPaymentWebServiceCompanionTargetDevice_deviceMetadataResponse___block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;
  NPKProtoDeviceMetadataWithFieldsReponse *v4;
  void *v5;
  NSObject *v6;
  NSObject *v7;
  _BOOL4 v8;
  NSObject *v9;
  NSObject *v10;
  _BOOL4 v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  void *v16;
  NSObject *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint8_t v21[16];
  uint8_t buf[16];

  objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "objectForKey:", *(_QWORD *)(a1 + 40));
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  if (v3)
  {
    v4 = [NPKProtoDeviceMetadataWithFieldsReponse alloc];
    objc_msgSend(*(id *)(a1 + 48), "data");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    v6 = -[NPKProtoDeviceMetadataWithFieldsReponse initWithData:](v4, "initWithData:", v5);

    if (-[NSObject pending](v6, "pending"))
    {
      pk_Payment_log();
      v7 = objc_claimAutoreleasedReturnValue();
      v8 = os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT);

      if (v8)
      {
        pk_Payment_log();
        v9 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)buf = 0;
          _os_log_impl(&dword_213518000, v9, OS_LOG_TYPE_DEFAULT, "Notice: got pending response for account-pass-protobuf: deviceMetadataWithFields", buf, 2u);
        }

      }
      objc_msgSend(v3, "setOrResetCleanupTimer");
    }
    else
    {
      objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v12, "removeObjectForKey:", *(_QWORD *)(a1 + 40));

      objc_msgSend(v3, "completionHandler");
      v13 = objc_claimAutoreleasedReturnValue();
      v14 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
      v15 = *(void **)(v14 + 40);
      *(_QWORD *)(v14 + 40) = v13;

      -[NSObject deviceMetadata](v6, "deviceMetadata");
      v16 = (void *)objc_claimAutoreleasedReturnValue();
      v17 = objc_opt_class();
      NPKSecureUnarchiveObject(v16, v17);
      v18 = objc_claimAutoreleasedReturnValue();
      v19 = *(_QWORD *)(*(_QWORD *)(a1 + 64) + 8);
      v20 = *(void **)(v19 + 40);
      *(_QWORD *)(v19 + 40) = v18;

    }
LABEL_12:

    goto LABEL_13;
  }
  pk_Payment_log();
  v10 = objc_claimAutoreleasedReturnValue();
  v11 = os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT);

  if (v11)
  {
    pk_Payment_log();
    v6 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)v21 = 0;
      _os_log_impl(&dword_213518000, v6, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", v21, 2u);
    }
    goto LABEL_12;
  }
LABEL_13:

}

- (void)paymentWebService:(id)a3 deviceMetadataWithFields:(unint64_t)a4 completion:(id)a5
{
  id v8;
  id v9;
  void *v10;
  void *v11;
  int v12;
  NSObject *v13;
  NSObject *v14;
  const __CFString *v15;
  NSObject *v16;
  id v17;
  void *v18;
  NSObject *v19;
  void *v20;
  void *v21;
  id v22;
  _QWORD v23[5];
  id v24;
  unint64_t v25;
  _QWORD v26[4];
  id v27;
  uint8_t buf[4];
  unint64_t v29;
  __int16 v30;
  const __CFString *v31;
  uint64_t v32;

  v32 = *MEMORY[0x24BDAC8D0];
  v8 = a3;
  v9 = a5;
  NPKPairedOrPairingDevice();
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v11 = (void *)objc_msgSend(objc_alloc(MEMORY[0x24BDD1880]), "initWithUUIDString:", CFSTR("DC264F98-B0E2-4D96-9248-663A801E4FB1"));
  v12 = objc_msgSend(v10, "supportsCapability:", v11);

  pk_Payment_log();
  v13 = objc_claimAutoreleasedReturnValue();
  LODWORD(v11) = os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT);

  if ((_DWORD)v11)
  {
    pk_Payment_log();
    v14 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
    {
      v15 = CFSTR("NO");
      if (v12)
        v15 = CFSTR("YES");
      *(_DWORD *)buf = 134218242;
      v29 = a4;
      v30 = 2112;
      v31 = v15;
      _os_log_impl(&dword_213518000, v14, OS_LOG_TYPE_DEFAULT, "Notice: Target device deviceMetadataWithFields: %lu. Apple Card support %@", buf, 0x16u);
    }

  }
  if ((v12 & 1) != 0)
  {
    -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
    v16 = objc_claimAutoreleasedReturnValue();
    v23[0] = MEMORY[0x24BDAC760];
    v23[1] = 3221225472;
    v23[2] = __99__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_deviceMetadataWithFields_completion___block_invoke_538;
    v23[3] = &unk_24CFED5C0;
    v24 = v9;
    v25 = a4;
    v23[4] = self;
    v17 = v9;
    dispatch_sync(v16, v23);

    v18 = v24;
  }
  else
  {
    PKLogFacilityTypeGetObject();
    v19 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT))
    {
      NPKPairedOrPairingDevice();
      v20 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v20, "valueForProperty:", *MEMORY[0x24BE6B3F0]);
      v21 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138412290;
      v29 = (unint64_t)v21;
      _os_log_impl(&dword_213518000, v19, OS_LOG_TYPE_DEFAULT, "(account-pass-feature-check) watchOSVersion %@ does not support Apple Card capability. We will invoke the older counterpart to this call.", buf, 0xCu);

    }
    v26[0] = MEMORY[0x24BDAC760];
    v26[1] = 3221225472;
    v26[2] = __99__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_deviceMetadataWithFields_completion___block_invoke;
    v26[3] = &unk_24CFED570;
    v27 = v9;
    v22 = v9;
    -[NPKPaymentWebServiceCompanionTargetDevice paymentWebService:provisioningDataIncludingDeviceMetadata:withCompletionHandler:](self, "paymentWebService:provisioningDataIncludingDeviceMetadata:withCompletionHandler:", v8, 1, v26);
    v18 = v27;
  }

}

void __99__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_deviceMetadataWithFields_completion___block_invoke(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  NSObject *v7;
  _BOOL4 v8;
  NSObject *v9;
  uint64_t v10;
  int v11;
  id v12;
  uint64_t v13;

  v13 = *MEMORY[0x24BDAC8D0];
  v5 = a2;
  v6 = a3;
  if (v6)
  {
    pk_Payment_log();
    v7 = objc_claimAutoreleasedReturnValue();
    v8 = os_log_type_enabled(v7, OS_LOG_TYPE_ERROR);

    if (v8)
    {
      pk_Payment_log();
      v9 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
      {
        v11 = 138412290;
        v12 = v6;
        _os_log_impl(&dword_213518000, v9, OS_LOG_TYPE_ERROR, "Error: provisioningDataIncludingDeviceMetadata: call encountered error: %@", (uint8_t *)&v11, 0xCu);
      }

    }
  }
  v10 = *(_QWORD *)(a1 + 32);
  if (v10)
    (*(void (**)(uint64_t, id))(v10 + 16))(v10, v5);

}

void __99__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_deviceMetadataWithFields_completion___block_invoke_538(uint64_t a1)
{
  NPKProtoDeviceMetadataWithFieldsRequest *v2;
  id v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void **v9;
  uint64_t v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  NSObject *v16;
  _BOOL4 v17;
  NSObject *v18;
  NSObject *v19;
  _BOOL4 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(uint64_t);
  void *v24;
  id v25;
  _QWORD v26[4];
  id v27;
  id v28[2];
  id location[3];
  uint64_t v30;
  _QWORD v31[2];

  v31[1] = *MEMORY[0x24BDAC8D0];
  v2 = objc_alloc_init(NPKProtoDeviceMetadataWithFieldsRequest);
  -[NPKProtoDeviceMetadataWithFieldsRequest setMetadataFields:](v2, "setMetadataFields:", *(unsigned int *)(a1 + 48));
  v3 = objc_alloc(MEMORY[0x24BE4FE40]);
  -[NPKProtoDeviceMetadataWithFieldsRequest data](v2, "data");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = (void *)objc_msgSend(v3, "initWithProtobufData:type:isResponse:", v4, 54, 0);

  v6 = *(void **)(a1 + 32);
  v30 = *MEMORY[0x24BE4FA90];
  v31[0] = MEMORY[0x24BDBD1C8];
  objc_msgSend(MEMORY[0x24BDBCE70], "dictionaryWithObjects:forKeys:count:", v31, &v30, 1);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "_sendProtobuf:responseExpected:extraOptions:", v5, 1, v7);
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  if (!v8)
  {
    pk_Payment_log();
    v16 = objc_claimAutoreleasedReturnValue();
    v17 = os_log_type_enabled(v16, OS_LOG_TYPE_ERROR);

    if (!v17)
      goto LABEL_12;
    pk_Payment_log();
    v18 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR))
    {
      LODWORD(location[0]) = 138412290;
      *(id *)((char *)location + 4) = v5;
      _os_log_impl(&dword_213518000, v18, OS_LOG_TYPE_ERROR, "Error: No message identifier for protobuf %@", (uint8_t *)location, 0xCu);
    }
LABEL_11:

    goto LABEL_12;
  }
  if (!*(_QWORD *)(a1 + 40))
  {
    pk_Payment_log();
    v19 = objc_claimAutoreleasedReturnValue();
    v20 = os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT);

    if (!v20)
      goto LABEL_12;
    pk_Payment_log();
    v18 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT))
    {
      LODWORD(location[0]) = 138412290;
      *(id *)((char *)location + 4) = v8;
      _os_log_impl(&dword_213518000, v18, OS_LOG_TYPE_DEFAULT, "Warning: No response expected for message with identifier %@", (uint8_t *)location, 0xCu);
    }
    goto LABEL_11;
  }
  v9 = (void **)(a1 + 32);
  objc_initWeak(location, *(id *)(a1 + 32));
  v10 = MEMORY[0x24BDAC760];
  v26[0] = MEMORY[0x24BDAC760];
  v26[1] = 3221225472;
  v26[2] = __99__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_deviceMetadataWithFields_completion___block_invoke_2;
  v26[3] = &unk_24CFED598;
  objc_copyWeak(v28, location);
  v11 = *(void **)(a1 + 40);
  v28[1] = *(id *)(a1 + 48);
  v27 = v11;
  v12 = (void *)MEMORY[0x2199B6780](v26);
  v21 = v10;
  v22 = 3221225472;
  v23 = __99__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_deviceMetadataWithFields_completion___block_invoke_3;
  v24 = &unk_24CFE7B80;
  v25 = *(id *)(a1 + 40);
  v13 = (void *)MEMORY[0x2199B6780](&v21);
  v14 = *v9;
  v15 = (void *)MEMORY[0x2199B6780](v12);
  objc_msgSend(v14, "_trackOutstandingRequestWithMessageIdentifier:completionHandler:errorHandler:", v8, v15, v13, v21, v22, v23, v24);

  objc_destroyWeak(v28);
  objc_destroyWeak(location);
LABEL_12:

}

void __99__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_deviceMetadataWithFields_completion___block_invoke_2(uint64_t a1, void *a2)
{
  id WeakRetained;
  uint64_t v4;
  id v5;

  v5 = a2;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  objc_msgSend(WeakRetained, "_addCompanionDevicePhoneNumberDataIfNeededWithFields:toDeviceMetadata:", *(unsigned int *)(a1 + 48), v5);

  v4 = *(_QWORD *)(a1 + 32);
  if (v4)
    (*(void (**)(uint64_t, id))(v4 + 16))(v4, v5);

}

uint64_t __99__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_deviceMetadataWithFields_completion___block_invoke_3(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 32);
  if (result)
    return (*(uint64_t (**)(uint64_t, _QWORD))(result + 16))(result, 0);
  return result;
}

- (id)supportedFeatureIdentifiersWithPaymentWebService:(id)a3
{
  id v3;
  NSObject *v4;
  _BOOL4 v5;
  NSObject *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  int v13;
  int v14;
  int v15;
  NSObject *v16;
  _BOOL4 v17;
  NSObject *v18;
  _BOOL4 v19;
  __CFString *v20;
  uint64_t v21;
  void *v22;
  void *v23;
  NSObject *v24;
  _BOOL4 v25;
  NSObject *v26;
  NSObject *v27;
  _BOOL4 v28;
  NSObject *v29;
  void *v30;
  void *v31;
  void *v32;
  NSObject *v33;
  _BOOL4 v34;
  NSObject *v35;
  NSObject *v36;
  _BOOL4 v37;
  NSObject *v38;
  void *v39;
  uint8_t buf[4];
  _BYTE v43[10];
  __int16 v44;
  int v45;
  __int16 v46;
  int v47;
  __int16 v48;
  _BOOL4 v49;
  __int16 v50;
  __CFString *v51;
  uint64_t v52;

  v52 = *MEMORY[0x24BDAC8D0];
  v3 = a3;
  pk_Payment_log();
  v4 = objc_claimAutoreleasedReturnValue();
  v5 = os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT);

  if (v5)
  {
    pk_Payment_log();
    v6 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl(&dword_213518000, v6, OS_LOG_TYPE_DEFAULT, "Notice: Target device supportedFeatureIdentifiersWithPaymentWebService", buf, 2u);
    }

  }
  objc_msgSend(v3, "context");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "primaryRegion");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "configuration");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "targetDevice");
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v10, "deviceRegion");
  v11 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v8, "applyServiceURL");
  v12 = (void *)objc_claimAutoreleasedReturnValue();

  v13 = objc_msgSend(v8, "hasApplications");
  v14 = objc_msgSend(v8, "hasAccounts");
  v15 = objc_msgSend(v9, "applyServiceEnabledForRegion:", v11);
  pk_Payment_log();
  v16 = objc_claimAutoreleasedReturnValue();
  v17 = os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT);

  if (v17)
  {
    pk_Payment_log();
    v18 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT))
    {
      v19 = v12 != 0;
      if (v12)
      {
        v20 = &stru_24CFF06D8;
      }
      else
      {
        objc_msgSend(MEMORY[0x24BDD17C8], "stringWithFormat:", CFSTR("primary region: %@"), v8);
        v21 = objc_claimAutoreleasedReturnValue();
        v19 = 0;
        v20 = (__CFString *)v21;
      }
      *(_DWORD *)buf = 67110402;
      *(_DWORD *)v43 = v13 | v14 | v15;
      *(_WORD *)&v43[4] = 1024;
      *(_DWORD *)&v43[6] = v13;
      v44 = 1024;
      v45 = v14;
      v46 = 1024;
      v47 = v15;
      v48 = 1024;
      v49 = v19;
      v50 = 2112;
      v51 = v20;
      _os_log_impl(&dword_213518000, v18, OS_LOG_TYPE_DEFAULT, "Notice: Payment web service supports apply service: %d, hasApplications: %d, hasAccounts: %d, regionEnabled: %d, hasURL: %d %@", buf, 0x2Au);
      if (!v12)

    }
  }
  if (v13 | v14 | v15)
  {
    objc_msgSend(v7, "applyServiceFeaturesForRegionMeetingEnablementThreshold:", v11);
    v22 = (void *)objc_claimAutoreleasedReturnValue();
    -[NPKPaymentWebServiceCompanionTargetDevice _deviceSupportedFeatureIdentifiers](self, "_deviceSupportedFeatureIdentifiers");
    v23 = (void *)objc_claimAutoreleasedReturnValue();
    pk_Payment_log();
    v24 = objc_claimAutoreleasedReturnValue();
    v25 = os_log_type_enabled(v24, OS_LOG_TYPE_DEFAULT);

    if (v25)
    {
      pk_Payment_log();
      v26 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v26, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 138412290;
        *(_QWORD *)v43 = v23;
        _os_log_impl(&dword_213518000, v26, OS_LOG_TYPE_DEFAULT, "Notice: Device supported feature identifiers: %@", buf, 0xCu);
      }

    }
    if (!objc_msgSend(v23, "count"))
    {
      pk_Payment_log();
      v27 = objc_claimAutoreleasedReturnValue();
      v28 = os_log_type_enabled(v27, OS_LOG_TYPE_DEFAULT);

      if (v28)
      {
        pk_Payment_log();
        v29 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v29, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)buf = 0;
          _os_log_impl(&dword_213518000, v29, OS_LOG_TYPE_DEFAULT, "Notice: NRDevicePropertySupportedFeatureIdentifiers returned a nil set", buf, 2u);
        }

      }
    }
    v30 = (void *)MEMORY[0x24BDBCEF0];
    objc_msgSend(v22, "allKeys");
    v31 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v30, "setWithArray:", v31);
    v32 = (void *)objc_claimAutoreleasedReturnValue();

    pk_Payment_log();
    v33 = objc_claimAutoreleasedReturnValue();
    v34 = os_log_type_enabled(v33, OS_LOG_TYPE_DEFAULT);

    if (v34)
    {
      pk_Payment_log();
      v35 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v35, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 138412290;
        *(_QWORD *)v43 = v32;
        _os_log_impl(&dword_213518000, v35, OS_LOG_TYPE_DEFAULT, "Notice: Config supported feature identifiers: %@", buf, 0xCu);
      }

    }
    objc_msgSend(v32, "intersectSet:", v23);
    pk_Payment_log();
    v36 = objc_claimAutoreleasedReturnValue();
    v37 = os_log_type_enabled(v36, OS_LOG_TYPE_DEFAULT);

    if (v37)
    {
      pk_Payment_log();
      v38 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v38, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 138412290;
        *(_QWORD *)v43 = v32;
        _os_log_impl(&dword_213518000, v38, OS_LOG_TYPE_DEFAULT, "Notice: Final supported feature identifiers: %@", buf, 0xCu);
      }

    }
    v39 = (void *)objc_msgSend(v32, "copy");

  }
  else
  {
    v39 = 0;
  }

  return v39;
}

- (id)supportedFeatureIdentifiersForAccountProvisioningWithPaymentWebService:(id)a3
{
  id v4;
  NSObject *v5;
  _BOOL4 v6;
  NSObject *v7;
  void *v8;
  void *v9;
  void *v10;
  NSObject *v11;
  _BOOL4 v12;
  NSObject *v13;
  const __CFString *v14;
  void *v15;
  NSObject *v16;
  NSObject *v17;
  _BOOL4 v18;
  NSObject *v19;
  NSObject *v20;
  _BOOL4 v21;
  NSObject *v22;
  id v23;
  NSObject *v24;
  _BOOL4 v25;
  int v27;
  void *v28;
  __int16 v29;
  void *v30;
  uint64_t v31;

  v31 = *MEMORY[0x24BDAC8D0];
  v4 = a3;
  pk_Payment_log();
  v5 = objc_claimAutoreleasedReturnValue();
  v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    pk_Payment_log();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      LOWORD(v27) = 0;
      _os_log_impl(&dword_213518000, v7, OS_LOG_TYPE_DEFAULT, "Notice: (account-pass-provisioning) Target device supportedFeatureIdentifiersForAccountProvisioningWithPaymentWebService", (uint8_t *)&v27, 2u);
    }

  }
  objc_msgSend(v4, "context");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "primaryRegion");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "accountServiceURL");
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  pk_Payment_log();
  v11 = objc_claimAutoreleasedReturnValue();
  v12 = os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT);

  if (v12)
  {
    pk_Payment_log();
    v13 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
    {
      if (v10)
        v14 = CFSTR("YES");
      else
        v14 = CFSTR("NO");
      objc_msgSend(v9, "accountServiceURL");
      v15 = (void *)objc_claimAutoreleasedReturnValue();
      v27 = 138412546;
      v28 = (void *)v14;
      v29 = 2112;
      v30 = v15;
      _os_log_impl(&dword_213518000, v13, OS_LOG_TYPE_DEFAULT, "Notice: (account-pass-provisioning) Payment web service supports account service: %@ accountServiceURL %@", (uint8_t *)&v27, 0x16u);

    }
  }
  if (v10)
  {
    -[NPKPaymentWebServiceCompanionTargetDevice _deviceSupportedFeatureIdentifiers](self, "_deviceSupportedFeatureIdentifiers");
    v16 = objc_claimAutoreleasedReturnValue();
    pk_Payment_log();
    v17 = objc_claimAutoreleasedReturnValue();
    v18 = os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT);

    if (v18)
    {
      pk_Payment_log();
      v19 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT))
      {
        v27 = 138412290;
        v28 = v16;
        _os_log_impl(&dword_213518000, v19, OS_LOG_TYPE_DEFAULT, "Notice: (account-pass-provisioning) Device supported feature identifiers: %@", (uint8_t *)&v27, 0xCu);
      }

    }
    if (!-[NSObject count](v16, "count"))
    {
      pk_Payment_log();
      v20 = objc_claimAutoreleasedReturnValue();
      v21 = os_log_type_enabled(v20, OS_LOG_TYPE_DEFAULT);

      if (v21)
      {
        pk_Payment_log();
        v22 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v22, OS_LOG_TYPE_DEFAULT))
        {
          LOWORD(v27) = 0;
          _os_log_impl(&dword_213518000, v22, OS_LOG_TYPE_DEFAULT, "Notice: (account-pass-provisioning) NRDevicePropertySupportedFeatureIdentifiers returned a nil set", (uint8_t *)&v27, 2u);
        }

      }
    }
    v23 = -[NSObject copy](v16, "copy");
  }
  else
  {
    pk_Payment_log();
    v24 = objc_claimAutoreleasedReturnValue();
    v25 = os_log_type_enabled(v24, OS_LOG_TYPE_DEFAULT);

    if (!v25)
    {
      v23 = 0;
      goto LABEL_28;
    }
    pk_Payment_log();
    v16 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
    {
      v27 = 138412290;
      v28 = v9;
      _os_log_impl(&dword_213518000, v16, OS_LOG_TYPE_DEFAULT, "Notice: primary region: %@", (uint8_t *)&v27, 0xCu);
    }
    v23 = 0;
  }

LABEL_28:
  return v23;
}

- (void)updateAccountWithIdentifierResponse:(id)a3
{
  id v4;
  NSObject *v5;
  _BOOL4 v6;
  NSObject *v7;
  void *v8;
  void *v9;
  void *v10;
  NSObject *v11;
  NSObject *v12;
  _BOOL4 v13;
  NSObject *v14;
  uint64_t v15;
  uint8_t v16[16];
  _QWORD block[5];
  id v18;
  id v19;
  __int128 *p_buf;
  uint64_t *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t (*v26)(uint64_t, uint64_t);
  void (*v27)(uint64_t);
  id v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t (*v32)(uint64_t, uint64_t);
  void (*v33)(uint64_t);
  id v34;
  __int128 buf;
  uint64_t v36;
  uint64_t (*v37)(uint64_t, uint64_t);
  void (*v38)(uint64_t);
  id v39;
  uint64_t v40;

  v40 = *MEMORY[0x24BDAC8D0];
  v4 = a3;
  pk_Payment_log();
  v5 = objc_claimAutoreleasedReturnValue();
  v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    pk_Payment_log();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend(v4, "npkDescription");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      LODWORD(buf) = 138412290;
      *(_QWORD *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_213518000, v7, OS_LOG_TYPE_DEFAULT, "Notice: (account-pass-provisioning) Target updateAccountWithIdentifier (account-pass-protobuf): incoming protobuf %@", (uint8_t *)&buf, 0xCu);

    }
  }
  objc_msgSend(v4, "context");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "incomingResponseIdentifier");
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  *(_QWORD *)&buf = 0;
  *((_QWORD *)&buf + 1) = &buf;
  v36 = 0x3032000000;
  v37 = __Block_byref_object_copy__342;
  v38 = __Block_byref_object_dispose__343;
  v39 = 0;
  v29 = 0;
  v30 = &v29;
  v31 = 0x3032000000;
  v32 = __Block_byref_object_copy__23;
  v33 = __Block_byref_object_dispose__23;
  v34 = 0;
  v23 = 0;
  v24 = &v23;
  v25 = 0x3032000000;
  v26 = __Block_byref_object_copy__23;
  v27 = __Block_byref_object_dispose__23;
  v28 = 0;
  if (v10)
  {
    -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
    v11 = objc_claimAutoreleasedReturnValue();
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 3221225472;
    block[2] = __81__NPKPaymentWebServiceCompanionTargetDevice_updateAccountWithIdentifierResponse___block_invoke;
    block[3] = &unk_24CFED060;
    block[4] = self;
    v18 = v10;
    v19 = v4;
    p_buf = &buf;
    v21 = &v29;
    v22 = &v23;
    dispatch_sync(v11, block);

  }
  else
  {
    pk_Payment_log();
    v12 = objc_claimAutoreleasedReturnValue();
    v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      pk_Payment_log();
      v14 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)v16 = 0;
        _os_log_impl(&dword_213518000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v16, 2u);
      }

    }
  }
  v15 = *(_QWORD *)(*((_QWORD *)&buf + 1) + 40);
  if (v15)
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v15, v30[5], v24[5]);
  _Block_object_dispose(&v23, 8);

  _Block_object_dispose(&v29, 8);
  _Block_object_dispose(&buf, 8);

}

void __81__NPKPaymentWebServiceCompanionTargetDevice_updateAccountWithIdentifierResponse___block_invoke(uint64_t a1)
{
  void *v1;
  void *v3;
  void *v4;
  NPKProtoUpdateAccountWithIdentifierResponse *v5;
  void *v6;
  NSObject *v7;
  NSObject *v8;
  _BOOL4 v9;
  NSObject *v10;
  NSObject *v11;
  _BOOL4 v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  void *v17;
  NSObject *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  int v22;
  NSObject *v23;
  void *v24;
  uint8_t v25[16];
  uint8_t buf[16];

  objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "objectForKey:", *(_QWORD *)(a1 + 40));
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  if (v4)
  {
    v5 = [NPKProtoUpdateAccountWithIdentifierResponse alloc];
    objc_msgSend(*(id *)(a1 + 48), "data");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    v7 = -[NPKProtoUpdateAccountWithIdentifierResponse initWithData:](v5, "initWithData:", v6);

    if (-[NSObject pending](v7, "pending"))
    {
      pk_Payment_log();
      v8 = objc_claimAutoreleasedReturnValue();
      v9 = os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT);

      if (v9)
      {
        pk_Payment_log();
        v10 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)buf = 0;
          _os_log_impl(&dword_213518000, v10, OS_LOG_TYPE_DEFAULT, "Notice: got pending response for account-pass-protobuf: updateAccountWithIdentifier", buf, 2u);
        }

      }
      objc_msgSend(v4, "setOrResetCleanupTimer");
    }
    else
    {
      objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
      v13 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v13, "removeObjectForKey:", *(_QWORD *)(a1 + 40));

      objc_msgSend(v4, "completionHandler");
      v14 = objc_claimAutoreleasedReturnValue();
      v15 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
      v16 = *(void **)(v15 + 40);
      *(_QWORD *)(v15 + 40) = v14;

      -[NSObject accountData](v7, "accountData");
      v17 = (void *)objc_claimAutoreleasedReturnValue();
      v18 = objc_opt_class();
      NPKSecureUnarchiveObject(v17, v18);
      v19 = objc_claimAutoreleasedReturnValue();
      v20 = *(_QWORD *)(*(_QWORD *)(a1 + 64) + 8);
      v21 = *(void **)(v20 + 40);
      *(_QWORD *)(v20 + 40) = v19;

      v22 = -[NSObject hasErrorData](v7, "hasErrorData");
      if (v22)
      {
        -[NSObject errorData](v7, "errorData");
        v1 = (void *)objc_claimAutoreleasedReturnValue();
        v23 = objc_opt_class();
        NPKSecureUnarchiveObject(v1, v23);
        v24 = (void *)objc_claimAutoreleasedReturnValue();
      }
      else
      {
        v24 = 0;
      }
      objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 72) + 8) + 40), v24);
      if (v22)
      {

      }
    }
LABEL_16:

    goto LABEL_17;
  }
  pk_Payment_log();
  v11 = objc_claimAutoreleasedReturnValue();
  v12 = os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT);

  if (v12)
  {
    pk_Payment_log();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)v25 = 0;
      _os_log_impl(&dword_213518000, v7, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", v25, 2u);
    }
    goto LABEL_16;
  }
LABEL_17:

}

- (void)paymentWebService:(id)a3 updateAccountWithIdentifier:(id)a4 completion:(id)a5
{
  id v7;
  id v8;
  NSObject *v9;
  _BOOL4 v10;
  NSObject *v11;
  NSObject *v12;
  id v13;
  id v14;
  _QWORD block[4];
  id v16;
  NPKPaymentWebServiceCompanionTargetDevice *v17;
  id v18;
  uint8_t buf[4];
  id v20;
  uint64_t v21;

  v21 = *MEMORY[0x24BDAC8D0];
  v7 = a4;
  v8 = a5;
  pk_Payment_log();
  v9 = objc_claimAutoreleasedReturnValue();
  v10 = os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT);

  if (v10)
  {
    pk_Payment_log();
    v11 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138412290;
      v20 = v7;
      _os_log_impl(&dword_213518000, v11, OS_LOG_TYPE_DEFAULT, "Notice: (account-pass-provisioning) Target device updateAccountWithIdentifier: %@", buf, 0xCu);
    }

  }
  -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
  v12 = objc_claimAutoreleasedReturnValue();
  block[0] = MEMORY[0x24BDAC760];
  block[1] = 3221225472;
  block[2] = __102__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_updateAccountWithIdentifier_completion___block_invoke;
  block[3] = &unk_24CFE84E8;
  v16 = v7;
  v17 = self;
  v18 = v8;
  v13 = v8;
  v14 = v7;
  dispatch_sync(v12, block);

}

void __102__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_updateAccountWithIdentifier_completion___block_invoke(uint64_t a1)
{
  NPKProtoUpdateAccountWithIdentifierRequest *v2;
  id v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  NSObject *v9;
  void *v10;
  void *v11;
  void *v12;
  NSObject *v13;
  _BOOL4 v14;
  const char *v15;
  NSObject *v16;
  os_log_type_t v17;
  NSObject *v18;
  _BOOL4 v19;
  _QWORD v20[4];
  id v21;
  uint8_t buf[4];
  void *v23;
  uint64_t v24;
  _QWORD v25[2];

  v25[1] = *MEMORY[0x24BDAC8D0];
  v2 = objc_alloc_init(NPKProtoUpdateAccountWithIdentifierRequest);
  -[NPKProtoUpdateAccountWithIdentifierRequest setAccountIdentifier:](v2, "setAccountIdentifier:", *(_QWORD *)(a1 + 32));
  v3 = objc_alloc(MEMORY[0x24BE4FE40]);
  -[NPKProtoUpdateAccountWithIdentifierRequest data](v2, "data");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = (void *)objc_msgSend(v3, "initWithProtobufData:type:isResponse:", v4, 55, 0);

  v6 = *(void **)(a1 + 40);
  v24 = *MEMORY[0x24BE4FA90];
  v25[0] = MEMORY[0x24BDBD1C8];
  objc_msgSend(MEMORY[0x24BDBCE70], "dictionaryWithObjects:forKeys:count:", v25, &v24, 1);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "_sendProtobuf:responseExpected:extraOptions:", v5, 1, v7);
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  if (v8)
  {
    if (*(_QWORD *)(a1 + 48))
    {
      v9 = MEMORY[0x2199B6780]();
      v20[0] = MEMORY[0x24BDAC760];
      v20[1] = 3221225472;
      v20[2] = __102__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_updateAccountWithIdentifier_completion___block_invoke_2;
      v20[3] = &unk_24CFE7B80;
      v21 = *(id *)(a1 + 48);
      v10 = (void *)MEMORY[0x2199B6780](v20);
      v11 = *(void **)(a1 + 40);
      v12 = (void *)MEMORY[0x2199B6780](v9);
      objc_msgSend(v11, "_trackOutstandingRequestWithMessageIdentifier:completionHandler:errorHandler:", v8, v12, v10);

LABEL_11:
      goto LABEL_12;
    }
    pk_Payment_log();
    v18 = objc_claimAutoreleasedReturnValue();
    v19 = os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT);

    if (v19)
    {
      pk_Payment_log();
      v9 = objc_claimAutoreleasedReturnValue();
      if (!os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
        goto LABEL_11;
      *(_DWORD *)buf = 138412290;
      v23 = v8;
      v15 = "Warning: No response expected for message with identifier %@";
      v16 = v9;
      v17 = OS_LOG_TYPE_DEFAULT;
      goto LABEL_10;
    }
  }
  else
  {
    pk_Payment_log();
    v13 = objc_claimAutoreleasedReturnValue();
    v14 = os_log_type_enabled(v13, OS_LOG_TYPE_ERROR);

    if (v14)
    {
      pk_Payment_log();
      v9 = objc_claimAutoreleasedReturnValue();
      if (!os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
        goto LABEL_11;
      *(_DWORD *)buf = 138412290;
      v23 = v5;
      v15 = "Error: No message identifier for protobuf %@";
      v16 = v9;
      v17 = OS_LOG_TYPE_ERROR;
LABEL_10:
      _os_log_impl(&dword_213518000, v16, v17, v15, buf, 0xCu);
      goto LABEL_11;
    }
  }
LABEL_12:

}

uint64_t __102__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_updateAccountWithIdentifier_completion___block_invoke_2(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 32);
  if (result)
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(result + 16))(result, 0, a2);
  return result;
}

- (void)accountWithIdentifierResponse:(id)a3
{
  id v4;
  NSObject *v5;
  _BOOL4 v6;
  NSObject *v7;
  void *v8;
  void *v9;
  void *v10;
  NSObject *v11;
  NSObject *v12;
  _BOOL4 v13;
  NSObject *v14;
  uint64_t v15;
  uint8_t v16[16];
  _QWORD block[5];
  id v18;
  id v19;
  __int128 *p_buf;
  uint64_t *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t (*v26)(uint64_t, uint64_t);
  void (*v27)(uint64_t);
  id v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t (*v32)(uint64_t, uint64_t);
  void (*v33)(uint64_t);
  id v34;
  __int128 buf;
  uint64_t v36;
  uint64_t (*v37)(uint64_t, uint64_t);
  void (*v38)(uint64_t);
  id v39;
  uint64_t v40;

  v40 = *MEMORY[0x24BDAC8D0];
  v4 = a3;
  pk_Payment_log();
  v5 = objc_claimAutoreleasedReturnValue();
  v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    pk_Payment_log();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend(v4, "npkDescription");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      LODWORD(buf) = 138412290;
      *(_QWORD *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_213518000, v7, OS_LOG_TYPE_DEFAULT, "Notice: (apple-balance-pass-provisioning) Target accountWithIdentifier: incoming protobuf %@", (uint8_t *)&buf, 0xCu);

    }
  }
  objc_msgSend(v4, "context");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "incomingResponseIdentifier");
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  *(_QWORD *)&buf = 0;
  *((_QWORD *)&buf + 1) = &buf;
  v36 = 0x3032000000;
  v37 = __Block_byref_object_copy__342;
  v38 = __Block_byref_object_dispose__343;
  v39 = 0;
  v29 = 0;
  v30 = &v29;
  v31 = 0x3032000000;
  v32 = __Block_byref_object_copy__23;
  v33 = __Block_byref_object_dispose__23;
  v34 = 0;
  v23 = 0;
  v24 = &v23;
  v25 = 0x3032000000;
  v26 = __Block_byref_object_copy__23;
  v27 = __Block_byref_object_dispose__23;
  v28 = 0;
  if (v10)
  {
    -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
    v11 = objc_claimAutoreleasedReturnValue();
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 3221225472;
    block[2] = __75__NPKPaymentWebServiceCompanionTargetDevice_accountWithIdentifierResponse___block_invoke;
    block[3] = &unk_24CFED060;
    block[4] = self;
    v18 = v10;
    v19 = v4;
    p_buf = &buf;
    v21 = &v29;
    v22 = &v23;
    dispatch_sync(v11, block);

  }
  else
  {
    pk_Payment_log();
    v12 = objc_claimAutoreleasedReturnValue();
    v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      pk_Payment_log();
      v14 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)v16 = 0;
        _os_log_impl(&dword_213518000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v16, 2u);
      }

    }
  }
  v15 = *(_QWORD *)(*((_QWORD *)&buf + 1) + 40);
  if (v15)
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v15, v30[5], v24[5]);
  _Block_object_dispose(&v23, 8);

  _Block_object_dispose(&v29, 8);
  _Block_object_dispose(&buf, 8);

}

void __75__NPKPaymentWebServiceCompanionTargetDevice_accountWithIdentifierResponse___block_invoke(uint64_t a1)
{
  void *v1;
  void *v3;
  void *v4;
  NPKProtoAccountWithIdentifierResponse *v5;
  void *v6;
  NPKProtoAccountWithIdentifierResponse *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  _BOOL4 v12;
  NSObject *v13;
  void *v14;
  NSObject *v15;
  _BOOL4 v16;
  NSObject *v17;
  _BOOL4 v18;
  NSObject *v19;
  void *v20;
  __int16 v21[8];

  objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "objectForKey:", *(_QWORD *)(a1 + 40));
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  if (v4)
  {
    v5 = [NPKProtoAccountWithIdentifierResponse alloc];
    objc_msgSend(*(id *)(a1 + 48), "data");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    v7 = -[NPKProtoAccountWithIdentifierResponse initWithData:](v5, "initWithData:", v6);

    objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "removeObjectForKey:", *(_QWORD *)(a1 + 40));

    objc_msgSend(v4, "completionHandler");
    v9 = objc_claimAutoreleasedReturnValue();
    v10 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
    v11 = *(void **)(v10 + 40);
    *(_QWORD *)(v10 + 40) = v9;

    v12 = -[NPKProtoAccountWithIdentifierResponse hasAccountData](v7, "hasAccountData");
    if (v12)
    {
      -[NPKProtoAccountWithIdentifierResponse accountData](v7, "accountData");
      v1 = (void *)objc_claimAutoreleasedReturnValue();
      v13 = objc_opt_class();
      NPKSecureUnarchiveObject(v1, v13);
      v14 = (void *)objc_claimAutoreleasedReturnValue();
    }
    else
    {
      v14 = 0;
    }
    objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 40), v14);
    if (v12)
    {

    }
    v18 = -[NPKProtoAccountWithIdentifierResponse hasErrorData](v7, "hasErrorData");
    if (v18)
    {
      -[NPKProtoAccountWithIdentifierResponse errorData](v7, "errorData");
      v1 = (void *)objc_claimAutoreleasedReturnValue();
      v19 = objc_opt_class();
      NPKSecureUnarchiveObject(v1, v19);
      v20 = (void *)objc_claimAutoreleasedReturnValue();
    }
    else
    {
      v20 = 0;
    }
    objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 72) + 8) + 40), v20);
    if (v18)
    {

    }
  }
  else
  {
    pk_Payment_log();
    v15 = objc_claimAutoreleasedReturnValue();
    v16 = os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT);

    if (v16)
    {
      pk_Payment_log();
      v17 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
      {
        v21[0] = 0;
        _os_log_impl(&dword_213518000, v17, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", (uint8_t *)v21, 2u);
      }

    }
  }

}

- (void)accountWithIdentifier:(id)a3 completion:(id)a4
{
  id v6;
  id v7;
  NSObject *v8;
  _BOOL4 v9;
  NSObject *v10;
  NSObject *v11;
  id v12;
  id v13;
  _QWORD block[4];
  id v15;
  NPKPaymentWebServiceCompanionTargetDevice *v16;
  id v17;
  uint8_t buf[4];
  id v19;
  uint64_t v20;

  v20 = *MEMORY[0x24BDAC8D0];
  v6 = a3;
  v7 = a4;
  pk_Payment_log();
  v8 = objc_claimAutoreleasedReturnValue();
  v9 = os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT);

  if (v9)
  {
    pk_Payment_log();
    v10 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138412290;
      v19 = v6;
      _os_log_impl(&dword_213518000, v10, OS_LOG_TYPE_DEFAULT, "Notice: (apple-balance-pass-provisioning) Target device accountWithIdentifier: %@", buf, 0xCu);
    }

  }
  -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
  v11 = objc_claimAutoreleasedReturnValue();
  block[0] = MEMORY[0x24BDAC760];
  block[1] = 3221225472;
  block[2] = __78__NPKPaymentWebServiceCompanionTargetDevice_accountWithIdentifier_completion___block_invoke;
  block[3] = &unk_24CFED5E8;
  v16 = self;
  v17 = v7;
  v15 = v6;
  v12 = v7;
  v13 = v6;
  dispatch_sync(v11, block);

}

void __78__NPKPaymentWebServiceCompanionTargetDevice_accountWithIdentifier_completion___block_invoke(uint64_t a1)
{
  NPKProtoAccountWithIdentifierRequest *v2;
  id v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  NSObject *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  NSObject *v16;
  _BOOL4 v17;
  void *v18;
  NSObject *v19;
  _BOOL4 v20;
  const char *v21;
  NSObject *v22;
  os_log_type_t v23;
  NSObject *v24;
  _BOOL4 v25;
  _QWORD v26[4];
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint8_t buf[4];
  void *v31;
  uint64_t v32;
  _QWORD v33[2];

  v33[1] = *MEMORY[0x24BDAC8D0];
  if (objc_msgSend(*(id *)(a1 + 32), "length"))
  {
    v2 = objc_alloc_init(NPKProtoAccountWithIdentifierRequest);
    -[NPKProtoAccountWithIdentifierRequest setAccountIdentifier:](v2, "setAccountIdentifier:", *(_QWORD *)(a1 + 32));
    v3 = objc_alloc(MEMORY[0x24BE4FE40]);
    -[NPKProtoAccountWithIdentifierRequest data](v2, "data");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    v5 = (void *)objc_msgSend(v3, "initWithProtobufData:type:isResponse:", v4, 133, 0);

    v6 = *(void **)(a1 + 40);
    v28 = *MEMORY[0x24BE4FA90];
    v29 = MEMORY[0x24BDBD1C8];
    objc_msgSend(MEMORY[0x24BDBCE70], "dictionaryWithObjects:forKeys:count:", &v29, &v28, 1);
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "_sendProtobuf:responseExpected:extraOptions:", v5, 1, v7);
    v8 = (void *)objc_claimAutoreleasedReturnValue();

    if (v8)
    {
      if (*(_QWORD *)(a1 + 48))
      {
        v9 = MEMORY[0x2199B6780]();
        v26[0] = MEMORY[0x24BDAC760];
        v26[1] = 3221225472;
        v26[2] = __78__NPKPaymentWebServiceCompanionTargetDevice_accountWithIdentifier_completion___block_invoke_552;
        v26[3] = &unk_24CFE7B80;
        v27 = *(id *)(a1 + 48);
        v10 = (void *)MEMORY[0x2199B6780](v26);
        v11 = *(void **)(a1 + 40);
        v12 = (void *)MEMORY[0x2199B6780](v9);
        objc_msgSend(v11, "_trackOutstandingRequestWithMessageIdentifier:completionHandler:errorHandler:", v8, v12, v10);

LABEL_17:
        goto LABEL_18;
      }
      pk_Payment_log();
      v24 = objc_claimAutoreleasedReturnValue();
      v25 = os_log_type_enabled(v24, OS_LOG_TYPE_DEFAULT);

      if (v25)
      {
        pk_Payment_log();
        v9 = objc_claimAutoreleasedReturnValue();
        if (!os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
          goto LABEL_17;
        *(_DWORD *)buf = 138412290;
        v31 = v8;
        v21 = "Warning: No response expected for message with identifier %@";
        v22 = v9;
        v23 = OS_LOG_TYPE_DEFAULT;
        goto LABEL_16;
      }
    }
    else
    {
      pk_Payment_log();
      v19 = objc_claimAutoreleasedReturnValue();
      v20 = os_log_type_enabled(v19, OS_LOG_TYPE_ERROR);

      if (v20)
      {
        pk_Payment_log();
        v9 = objc_claimAutoreleasedReturnValue();
        if (!os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
          goto LABEL_17;
        *(_DWORD *)buf = 138412290;
        v31 = v5;
        v21 = "Error: No message identifier for protobuf %@";
        v22 = v9;
        v23 = OS_LOG_TYPE_ERROR;
LABEL_16:
        _os_log_impl(&dword_213518000, v22, v23, v21, buf, 0xCu);
        goto LABEL_17;
      }
    }
LABEL_18:

LABEL_19:
    return;
  }
  if (*(_QWORD *)(a1 + 48))
  {
    v13 = (void *)MEMORY[0x24BDD1540];
    v32 = *MEMORY[0x24BDD0FD8];
    v33[0] = CFSTR("Invalid account identifier");
    objc_msgSend(MEMORY[0x24BDBCE70], "dictionaryWithObjects:forKeys:count:", v33, &v32, 1);
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v13, "errorWithDomain:code:userInfo:", CFSTR("com.apple.NPKErrorDomain"), 0, v14);
    v15 = (void *)objc_claimAutoreleasedReturnValue();

    (*(void (**)(void))(*(_QWORD *)(a1 + 48) + 16))();
  }
  pk_Payment_log();
  v16 = objc_claimAutoreleasedReturnValue();
  v17 = os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT);

  if (v17)
  {
    pk_Payment_log();
    v2 = (NPKProtoAccountWithIdentifierRequest *)objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(&v2->super.super.super, OS_LOG_TYPE_DEFAULT))
    {
      v18 = *(void **)(a1 + 32);
      *(_DWORD *)buf = 138412290;
      v31 = v18;
      _os_log_impl(&dword_213518000, &v2->super.super.super, OS_LOG_TYPE_DEFAULT, "Notice: (apple-balance-pass-provisioning) Invalid account identifier: %@", buf, 0xCu);
    }
    goto LABEL_19;
  }
}

uint64_t __78__NPKPaymentWebServiceCompanionTargetDevice_accountWithIdentifier_completion___block_invoke_552(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 32);
  if (result)
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(result + 16))(result, 0, a2);
  return result;
}

- (id)_deviceSupportedFeatureIdentifiers
{
  void *v2;
  NSObject *v3;
  void *v4;
  void *v5;
  void *v6;
  char v7;
  NSObject *v8;
  _BOOL4 v9;
  int v11;
  void *v12;
  __int16 v13;
  NSObject *v14;
  uint64_t v15;

  v15 = *MEMORY[0x24BDAC8D0];
  NPKPairedOrPairingDevice();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "valueForProperty:", *MEMORY[0x24BE6B3D8]);
  v3 = objc_claimAutoreleasedReturnValue();
  PKFeatureIdentifierToString();
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  if (-[NSObject containsObject:](v3, "containsObject:", v4))
  {
    objc_msgSend(v2, "valueForProperty:", *MEMORY[0x24BE6B3F0]);
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    v6 = (void *)objc_msgSend(objc_alloc(MEMORY[0x24BDD1880]), "initWithUUIDString:", CFSTR("DC264F98-B0E2-4D96-9248-663A801E4FB1"));
    v7 = objc_msgSend(v2, "supportsCapability:", v6);

    PKLogFacilityTypeGetObject();
    v8 = objc_claimAutoreleasedReturnValue();
    v9 = os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT);
    if ((v7 & 1) != 0)
    {
      if (v9)
      {
        v11 = 138412290;
        v12 = v5;
        _os_log_impl(&dword_213518000, v8, OS_LOG_TYPE_DEFAULT, "(account-pass-feature-check) watchOSVersion %@ does support Apple Card capability.", (uint8_t *)&v11, 0xCu);
      }
    }
    else
    {
      if (v9)
      {
        v11 = 138412546;
        v12 = v5;
        v13 = 2112;
        v14 = v3;
        _os_log_impl(&dword_213518000, v8, OS_LOG_TYPE_DEFAULT, "(account-pass-feature-check) watchOSVersion %@ does not support Apple Card capability. Removing from features %@", (uint8_t *)&v11, 0x16u);
      }

      -[NSObject pk_setByRemovingObject:](v3, "pk_setByRemovingObject:", v4);
      v8 = v3;
      v3 = objc_claimAutoreleasedReturnValue();
    }

  }
  return v3;
}

- (void)performDeviceCheckInResponse:(id)a3
{
  id v4;
  NSObject *v5;
  _BOOL4 v6;
  NSObject *v7;
  void *v8;
  void *v9;
  void *v10;
  NSObject *v11;
  NSObject *v12;
  _BOOL4 v13;
  NSObject *v14;
  uint64_t v15;
  uint8_t v16[16];
  _QWORD block[5];
  id v18;
  id v19;
  __int128 *p_buf;
  uint64_t *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t (*v30)(uint64_t, uint64_t);
  void (*v31)(uint64_t);
  id v32;
  __int128 buf;
  uint64_t v34;
  uint64_t (*v35)(uint64_t, uint64_t);
  void (*v36)(uint64_t);
  id v37;
  uint64_t v38;

  v38 = *MEMORY[0x24BDAC8D0];
  v4 = a3;
  pk_Payment_log();
  v5 = objc_claimAutoreleasedReturnValue();
  v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    pk_Payment_log();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend(v4, "npkDescription");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      LODWORD(buf) = 138412290;
      *(_QWORD *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_213518000, v7, OS_LOG_TYPE_DEFAULT, "Notice: (account-pass-provisioning) Target performDeviceCheckInResponse (account-pass-protobuf): incoming protobuf %@", (uint8_t *)&buf, 0xCu);

    }
  }
  objc_msgSend(v4, "context");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "incomingResponseIdentifier");
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  *(_QWORD *)&buf = 0;
  *((_QWORD *)&buf + 1) = &buf;
  v34 = 0x3032000000;
  v35 = __Block_byref_object_copy__342;
  v36 = __Block_byref_object_dispose__343;
  v37 = 0;
  v27 = 0;
  v28 = &v27;
  v29 = 0x3032000000;
  v30 = __Block_byref_object_copy__23;
  v31 = __Block_byref_object_dispose__23;
  v32 = 0;
  v23 = 0;
  v24 = &v23;
  v25 = 0x2020000000;
  v26 = 0;
  if (v10)
  {
    -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
    v11 = objc_claimAutoreleasedReturnValue();
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 3221225472;
    block[2] = __74__NPKPaymentWebServiceCompanionTargetDevice_performDeviceCheckInResponse___block_invoke;
    block[3] = &unk_24CFED060;
    block[4] = self;
    v18 = v10;
    v19 = v4;
    p_buf = &buf;
    v21 = &v27;
    v22 = &v23;
    dispatch_sync(v11, block);

  }
  else
  {
    pk_Payment_log();
    v12 = objc_claimAutoreleasedReturnValue();
    v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      pk_Payment_log();
      v14 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)v16 = 0;
        _os_log_impl(&dword_213518000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v16, 2u);
      }

    }
  }
  v15 = *(_QWORD *)(*((_QWORD *)&buf + 1) + 40);
  if (v15)
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v15 + 16))(v15, *((unsigned __int8 *)v24 + 24), v28[5]);
  _Block_object_dispose(&v23, 8);
  _Block_object_dispose(&v27, 8);

  _Block_object_dispose(&buf, 8);
}

void __74__NPKPaymentWebServiceCompanionTargetDevice_performDeviceCheckInResponse___block_invoke(uint64_t a1)
{
  void *v1;
  void *v3;
  void *v4;
  NPKProtoPerformDeviceCheckInResponse *v5;
  void *v6;
  NSObject *v7;
  NSObject *v8;
  _BOOL4 v9;
  NSObject *v10;
  NSObject *v11;
  _BOOL4 v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  int v17;
  NSObject *v18;
  void *v19;
  uint8_t v20[16];
  uint8_t buf[16];

  objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "objectForKey:", *(_QWORD *)(a1 + 40));
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  if (v4)
  {
    v5 = [NPKProtoPerformDeviceCheckInResponse alloc];
    objc_msgSend(*(id *)(a1 + 48), "data");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    v7 = -[NPKProtoPerformDeviceCheckInResponse initWithData:](v5, "initWithData:", v6);

    if (-[NSObject pending](v7, "pending"))
    {
      pk_Payment_log();
      v8 = objc_claimAutoreleasedReturnValue();
      v9 = os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT);

      if (v9)
      {
        pk_Payment_log();
        v10 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)buf = 0;
          _os_log_impl(&dword_213518000, v10, OS_LOG_TYPE_DEFAULT, "Notice: got pending response for account-pass-protobuf: performDeviceCheckInResponse", buf, 2u);
        }

      }
      objc_msgSend(v4, "setOrResetCleanupTimer");
    }
    else
    {
      objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
      v13 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v13, "removeObjectForKey:", *(_QWORD *)(a1 + 40));

      objc_msgSend(v4, "completionHandler");
      v14 = objc_claimAutoreleasedReturnValue();
      v15 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
      v16 = *(void **)(v15 + 40);
      *(_QWORD *)(v15 + 40) = v14;

      v17 = -[NSObject hasErrorData](v7, "hasErrorData");
      if (v17)
      {
        -[NSObject errorData](v7, "errorData");
        v1 = (void *)objc_claimAutoreleasedReturnValue();
        v18 = objc_opt_class();
        NPKSecureUnarchiveObject(v1, v18);
        v19 = (void *)objc_claimAutoreleasedReturnValue();
      }
      else
      {
        v19 = 0;
      }
      objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 40), v19);
      if (v17)
      {

      }
      *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 72) + 8) + 24) = -[NSObject success](v7, "success");
    }
LABEL_17:

    goto LABEL_18;
  }
  pk_Payment_log();
  v11 = objc_claimAutoreleasedReturnValue();
  v12 = os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT);

  if (v12)
  {
    pk_Payment_log();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)v20 = 0;
      _os_log_impl(&dword_213518000, v7, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", v20, 2u);
    }
    goto LABEL_17;
  }
LABEL_18:

}

- (void)performDeviceCheckInWithCompletion:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  int v7;
  NSObject *v8;
  NSObject *v9;
  const __CFString *v10;
  NSObject *v11;
  NSObject *v12;
  void *v13;
  __CFString *v14;
  _QWORD v15[5];
  id v16;
  uint8_t buf[4];
  const __CFString *v18;
  uint64_t v19;

  v19 = *MEMORY[0x24BDAC8D0];
  v4 = a3;
  NPKPairedOrPairingDevice();
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = (void *)objc_msgSend(objc_alloc(MEMORY[0x24BDD1880]), "initWithUUIDString:", CFSTR("DC264F98-B0E2-4D96-9248-663A801E4FB1"));
  v7 = objc_msgSend(v5, "supportsCapability:", v6);

  pk_Payment_log();
  v8 = objc_claimAutoreleasedReturnValue();
  LODWORD(v6) = os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT);

  if ((_DWORD)v6)
  {
    pk_Payment_log();
    v9 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      v10 = CFSTR("NO");
      if (v7)
        v10 = CFSTR("YES");
      *(_DWORD *)buf = 138412290;
      v18 = v10;
      _os_log_impl(&dword_213518000, v9, OS_LOG_TYPE_DEFAULT, "Notice: (account-pass-provisioning) Target device performDeviceCheckInWithCompletion, Apple Card support %@", buf, 0xCu);
    }

  }
  if ((v7 & 1) != 0)
  {
    -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
    v11 = objc_claimAutoreleasedReturnValue();
    v15[0] = MEMORY[0x24BDAC760];
    v15[1] = 3221225472;
    v15[2] = __80__NPKPaymentWebServiceCompanionTargetDevice_performDeviceCheckInWithCompletion___block_invoke;
    v15[3] = &unk_24CFE7E90;
    v15[4] = self;
    v16 = v4;
    dispatch_sync(v11, v15);

  }
  else
  {
    PKLogFacilityTypeGetObject();
    v12 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
    {
      NPKPairedOrPairingDevice();
      v13 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v13, "valueForProperty:", *MEMORY[0x24BE6B3F0]);
      v14 = (__CFString *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138412290;
      v18 = v14;
      _os_log_impl(&dword_213518000, v12, OS_LOG_TYPE_DEFAULT, "(account-pass-feature-check) watchOSVersion %@ does not support Apple Card capability.", buf, 0xCu);

    }
    if (v4)
      (*((void (**)(id, _QWORD, _QWORD))v4 + 2))(v4, 0, 0);
  }

}

void __80__NPKPaymentWebServiceCompanionTargetDevice_performDeviceCheckInWithCompletion___block_invoke(uint64_t a1)
{
  NPKProtoPerformDeviceCheckInRequest *v2;
  id v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  NSObject *v9;
  void *v10;
  void *v11;
  void *v12;
  NSObject *v13;
  _BOOL4 v14;
  const char *v15;
  NSObject *v16;
  os_log_type_t v17;
  NSObject *v18;
  _BOOL4 v19;
  _QWORD v20[4];
  id v21;
  uint8_t buf[4];
  void *v23;
  uint64_t v24;
  _QWORD v25[2];

  v25[1] = *MEMORY[0x24BDAC8D0];
  v2 = objc_alloc_init(NPKProtoPerformDeviceCheckInRequest);
  v3 = objc_alloc(MEMORY[0x24BE4FE40]);
  -[NPKProtoPerformDeviceCheckInRequest data](v2, "data");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = (void *)objc_msgSend(v3, "initWithProtobufData:type:isResponse:", v4, 62, 0);

  v6 = *(void **)(a1 + 32);
  v24 = *MEMORY[0x24BE4FA90];
  v25[0] = MEMORY[0x24BDBD1C8];
  objc_msgSend(MEMORY[0x24BDBCE70], "dictionaryWithObjects:forKeys:count:", v25, &v24, 1);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "_sendProtobuf:responseExpected:extraOptions:", v5, 1, v7);
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  if (v8)
  {
    if (*(_QWORD *)(a1 + 40))
    {
      v9 = MEMORY[0x2199B6780]();
      v20[0] = MEMORY[0x24BDAC760];
      v20[1] = 3221225472;
      v20[2] = __80__NPKPaymentWebServiceCompanionTargetDevice_performDeviceCheckInWithCompletion___block_invoke_2;
      v20[3] = &unk_24CFE7B80;
      v21 = *(id *)(a1 + 40);
      v10 = (void *)MEMORY[0x2199B6780](v20);
      v11 = *(void **)(a1 + 32);
      v12 = (void *)MEMORY[0x2199B6780](v9);
      objc_msgSend(v11, "_trackOutstandingRequestWithMessageIdentifier:completionHandler:errorHandler:", v8, v12, v10);

LABEL_11:
      goto LABEL_12;
    }
    pk_Payment_log();
    v18 = objc_claimAutoreleasedReturnValue();
    v19 = os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT);

    if (v19)
    {
      pk_Payment_log();
      v9 = objc_claimAutoreleasedReturnValue();
      if (!os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
        goto LABEL_11;
      *(_DWORD *)buf = 138412290;
      v23 = v8;
      v15 = "Warning: No response expected for message with identifier %@";
      v16 = v9;
      v17 = OS_LOG_TYPE_DEFAULT;
      goto LABEL_10;
    }
  }
  else
  {
    pk_Payment_log();
    v13 = objc_claimAutoreleasedReturnValue();
    v14 = os_log_type_enabled(v13, OS_LOG_TYPE_ERROR);

    if (v14)
    {
      pk_Payment_log();
      v9 = objc_claimAutoreleasedReturnValue();
      if (!os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
        goto LABEL_11;
      *(_DWORD *)buf = 138412290;
      v23 = v5;
      v15 = "Error: No message identifier for protobuf %@";
      v16 = v9;
      v17 = OS_LOG_TYPE_ERROR;
LABEL_10:
      _os_log_impl(&dword_213518000, v16, v17, v15, buf, 0xCu);
      goto LABEL_11;
    }
  }
LABEL_12:

}

uint64_t __80__NPKPaymentWebServiceCompanionTargetDevice_performDeviceCheckInWithCompletion___block_invoke_2(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 32);
  if (result)
    return (*(uint64_t (**)(uint64_t, _QWORD, _QWORD))(result + 16))(result, 0, 0);
  return result;
}

- (void)availableProductsResponse:(id)a3
{
  id v4;
  NSObject *v5;
  _BOOL4 v6;
  NSObject *v7;
  void *v8;
  void *v9;
  void *v10;
  NSObject *v11;
  NSObject *v12;
  _BOOL4 v13;
  NSObject *v14;
  NSObject *v15;
  _BOOL4 v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  void *v20;
  void *v21;
  uint64_t v22;
  _QWORD v23[5];
  id v24;
  id v25;
  __int128 *p_buf;
  uint64_t *v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t (*v32)(uint64_t, uint64_t);
  void (*v33)(uint64_t);
  id v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t (*v38)(uint64_t, uint64_t);
  void (*v39)(uint64_t);
  id v40;
  uint8_t v41[4];
  void *v42;
  __int16 v43;
  void *v44;
  __int16 v45;
  uint64_t v46;
  __int128 buf;
  uint64_t v48;
  uint64_t (*v49)(uint64_t, uint64_t);
  void (*v50)(uint64_t);
  id v51;
  uint64_t v52;

  v52 = *MEMORY[0x24BDAC8D0];
  v4 = a3;
  pk_Payment_log();
  v5 = objc_claimAutoreleasedReturnValue();
  v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    pk_Payment_log();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend(v4, "npkDescription");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      LODWORD(buf) = 138412290;
      *(_QWORD *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_213518000, v7, OS_LOG_TYPE_DEFAULT, "Notice: (account-pass-provisioning) Target availableProductsResponse (account-pass-protobuf): incoming protobuf %@", (uint8_t *)&buf, 0xCu);

    }
  }
  objc_msgSend(v4, "context");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "incomingResponseIdentifier");
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  *(_QWORD *)&buf = 0;
  *((_QWORD *)&buf + 1) = &buf;
  v48 = 0x3032000000;
  v49 = __Block_byref_object_copy__342;
  v50 = __Block_byref_object_dispose__343;
  v51 = 0;
  v35 = 0;
  v36 = &v35;
  v37 = 0x3032000000;
  v38 = __Block_byref_object_copy__23;
  v39 = __Block_byref_object_dispose__23;
  v40 = 0;
  v29 = 0;
  v30 = &v29;
  v31 = 0x3032000000;
  v32 = __Block_byref_object_copy__23;
  v33 = __Block_byref_object_dispose__23;
  v34 = 0;
  if (v10)
  {
    -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
    v11 = objc_claimAutoreleasedReturnValue();
    v23[0] = MEMORY[0x24BDAC760];
    v23[1] = 3221225472;
    v23[2] = __71__NPKPaymentWebServiceCompanionTargetDevice_availableProductsResponse___block_invoke;
    v23[3] = &unk_24CFED060;
    v23[4] = self;
    v24 = v10;
    v25 = v4;
    p_buf = &buf;
    v27 = &v35;
    v28 = &v29;
    dispatch_sync(v11, v23);

  }
  else
  {
    pk_Payment_log();
    v12 = objc_claimAutoreleasedReturnValue();
    v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      pk_Payment_log();
      v14 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)v41 = 0;
        _os_log_impl(&dword_213518000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v41, 2u);
      }

    }
  }
  if (*(_QWORD *)(*((_QWORD *)&buf + 1) + 40))
  {
    pk_Payment_log();
    v15 = objc_claimAutoreleasedReturnValue();
    v16 = os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT);

    if (v16)
    {
      pk_Payment_log();
      v19 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT))
      {
        v20 = (void *)v36[5];
        objc_msgSend(v20, "availableProducts");
        v21 = (void *)objc_claimAutoreleasedReturnValue();
        v22 = v30[5];
        *(_DWORD *)v41 = 138412802;
        v42 = v20;
        v43 = 2112;
        v44 = v21;
        v45 = 2112;
        v46 = v22;
        _os_log_impl(&dword_213518000, v19, OS_LOG_TYPE_DEFAULT, "Notice: (account-pass-provisioning) calling completion for availableProductsWithCompletion %@ (%@) %@", v41, 0x20u);

      }
    }
    (*(void (**)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(*((_QWORD *)&buf + 1) + 40) + 16))(*(_QWORD *)(*((_QWORD *)&buf + 1) + 40), v36[5], v30[5], v17, v18);
  }
  _Block_object_dispose(&v29, 8);

  _Block_object_dispose(&v35, 8);
  _Block_object_dispose(&buf, 8);

}

void __71__NPKPaymentWebServiceCompanionTargetDevice_availableProductsResponse___block_invoke(uint64_t a1)
{
  void *v1;
  void *v3;
  void *v4;
  NPKProtoAvailableProductsResponse *v5;
  void *v6;
  NSObject *v7;
  NSObject *v8;
  _BOOL4 v9;
  NSObject *v10;
  NSObject *v11;
  _BOOL4 v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  void *v17;
  NSObject *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  int v22;
  NSObject *v23;
  void *v24;
  uint8_t v25[16];
  uint8_t buf[16];

  objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "objectForKey:", *(_QWORD *)(a1 + 40));
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  if (v4)
  {
    v5 = [NPKProtoAvailableProductsResponse alloc];
    objc_msgSend(*(id *)(a1 + 48), "data");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    v7 = -[NPKProtoAvailableProductsResponse initWithData:](v5, "initWithData:", v6);

    if (-[NSObject pending](v7, "pending"))
    {
      pk_Payment_log();
      v8 = objc_claimAutoreleasedReturnValue();
      v9 = os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT);

      if (v9)
      {
        pk_Payment_log();
        v10 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)buf = 0;
          _os_log_impl(&dword_213518000, v10, OS_LOG_TYPE_DEFAULT, "Notice: got pending response for account-pass-protobuf: availableProductsResponse", buf, 2u);
        }

      }
      objc_msgSend(v4, "setOrResetCleanupTimer");
    }
    else
    {
      objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
      v13 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v13, "removeObjectForKey:", *(_QWORD *)(a1 + 40));

      objc_msgSend(v4, "completionHandler");
      v14 = objc_claimAutoreleasedReturnValue();
      v15 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
      v16 = *(void **)(v15 + 40);
      *(_QWORD *)(v15 + 40) = v14;

      -[NSObject availableProductsData](v7, "availableProductsData");
      v17 = (void *)objc_claimAutoreleasedReturnValue();
      v18 = objc_opt_class();
      NPKSecureUnarchiveObject(v17, v18);
      v19 = objc_claimAutoreleasedReturnValue();
      v20 = *(_QWORD *)(*(_QWORD *)(a1 + 64) + 8);
      v21 = *(void **)(v20 + 40);
      *(_QWORD *)(v20 + 40) = v19;

      v22 = -[NSObject hasErrorData](v7, "hasErrorData");
      if (v22)
      {
        -[NSObject errorData](v7, "errorData");
        v1 = (void *)objc_claimAutoreleasedReturnValue();
        v23 = objc_opt_class();
        NPKSecureUnarchiveObject(v1, v23);
        v24 = (void *)objc_claimAutoreleasedReturnValue();
      }
      else
      {
        v24 = 0;
      }
      objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 72) + 8) + 40), v24);
      if (v22)
      {

      }
    }
LABEL_16:

    goto LABEL_17;
  }
  pk_Payment_log();
  v11 = objc_claimAutoreleasedReturnValue();
  v12 = os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT);

  if (v12)
  {
    pk_Payment_log();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)v25 = 0;
      _os_log_impl(&dword_213518000, v7, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", v25, 2u);
    }
    goto LABEL_16;
  }
LABEL_17:

}

- (void)availableProductsWithCompletion:(id)a3
{
  -[NPKPaymentWebServiceCompanionTargetDevice productsWithRequest:completion:](self, "productsWithRequest:completion:", 0, a3);
}

- (void)productsWithRequest:(id)a3 completion:(id)a4
{
  __CFString *v6;
  id v7;
  NSObject *v8;
  _BOOL4 v9;
  NSObject *v10;
  void *v11;
  void *v12;
  int v13;
  NSObject *v14;
  NSObject *v15;
  const __CFString *v16;
  NSObject *v17;
  id *v18;
  id v19;
  NSObject *v20;
  void *v21;
  __CFString *v22;
  void *v23;
  void *v24;
  id v25;
  _QWORD v26[4];
  _QWORD v27[2];
  id v28;
  _QWORD v29[4];
  id v30;
  uint8_t buf[4];
  const __CFString *v32;
  uint64_t v33;

  v33 = *MEMORY[0x24BDAC8D0];
  v6 = (__CFString *)a3;
  v7 = a4;
  pk_Payment_log();
  v8 = objc_claimAutoreleasedReturnValue();
  v9 = os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT);

  if (v9)
  {
    pk_Payment_log();
    v10 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138412290;
      v32 = v6;
      _os_log_impl(&dword_213518000, v10, OS_LOG_TYPE_DEFAULT, "Notice: TargetDevice: products with request:%@", buf, 0xCu);
    }

  }
  NPKPairedOrPairingDevice();
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  v12 = (void *)objc_msgSend(objc_alloc(MEMORY[0x24BDD1880]), "initWithUUIDString:", CFSTR("DC264F98-B0E2-4D96-9248-663A801E4FB1"));
  v13 = objc_msgSend(v11, "supportsCapability:", v12);

  pk_Payment_log();
  v14 = objc_claimAutoreleasedReturnValue();
  LODWORD(v12) = os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT);

  if ((_DWORD)v12)
  {
    pk_Payment_log();
    v15 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
    {
      v16 = CFSTR("NO");
      if (v13)
        v16 = CFSTR("YES");
      *(_DWORD *)buf = 138412290;
      v32 = v16;
      _os_log_impl(&dword_213518000, v15, OS_LOG_TYPE_DEFAULT, "Notice: (account-pass-provisioning) Target device availableProductsWithCompletion, Apple Card support %@", buf, 0xCu);
    }

  }
  if ((v13 & 1) != 0)
  {
    -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
    v17 = objc_claimAutoreleasedReturnValue();
    v26[0] = MEMORY[0x24BDAC760];
    v26[1] = 3221225472;
    v26[2] = __76__NPKPaymentWebServiceCompanionTargetDevice_productsWithRequest_completion___block_invoke_559;
    v26[3] = &unk_24CFE84E8;
    v18 = (id *)v27;
    v6 = v6;
    v27[0] = v6;
    v27[1] = self;
    v28 = v7;
    v19 = v7;
    dispatch_sync(v17, v26);

  }
  else
  {
    PKLogFacilityTypeGetObject();
    v20 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v20, OS_LOG_TYPE_DEFAULT))
    {
      NPKPairedOrPairingDevice();
      v21 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v21, "valueForProperty:", *MEMORY[0x24BE6B3F0]);
      v22 = (__CFString *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138412290;
      v32 = v22;
      _os_log_impl(&dword_213518000, v20, OS_LOG_TYPE_DEFAULT, "(account-pass-feature-check) watchOSVersion %@ does not implement availableProductsWithCompletion, getting products from web service", buf, 0xCu);

    }
    if (!v6)
      v6 = (__CFString *)objc_alloc_init(MEMORY[0x24BE6EC30]);
    -[NPKPaymentWebServiceCompanionTargetDevice companionAgentConnection](self, "companionAgentConnection");
    v23 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v23, "watchPaymentWebService");
    v24 = (void *)objc_claimAutoreleasedReturnValue();
    v29[0] = MEMORY[0x24BDAC760];
    v29[1] = 3221225472;
    v29[2] = __76__NPKPaymentWebServiceCompanionTargetDevice_productsWithRequest_completion___block_invoke;
    v29[3] = &unk_24CFED610;
    v18 = &v30;
    v30 = v7;
    v25 = v7;
    objc_msgSend(v24, "availableProductsWithRequest:completion:", v6, v29);

  }
}

void __76__NPKPaymentWebServiceCompanionTargetDevice_productsWithRequest_completion___block_invoke(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  id v6;
  id v7;
  NSObject *v8;
  _BOOL4 v9;
  NSObject *v10;
  uint64_t v11;
  int v12;
  id v13;
  __int16 v14;
  id v15;
  uint64_t v16;

  v16 = *MEMORY[0x24BDAC8D0];
  v6 = a3;
  v7 = a4;
  pk_Payment_log();
  v8 = objc_claimAutoreleasedReturnValue();
  v9 = os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT);

  if (v9)
  {
    pk_Payment_log();
    v10 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
    {
      v12 = 138412546;
      v13 = v6;
      v14 = 2112;
      v15 = v7;
      _os_log_impl(&dword_213518000, v10, OS_LOG_TYPE_DEFAULT, "Notice: (account-pass-provisioning) availableProductsWithRequest returned %@ %@", (uint8_t *)&v12, 0x16u);
    }

  }
  v11 = *(_QWORD *)(a1 + 32);
  if (v11)
    (*(void (**)(uint64_t, id, id))(v11 + 16))(v11, v6, v7);

}

void __76__NPKPaymentWebServiceCompanionTargetDevice_productsWithRequest_completion___block_invoke_559(uint64_t a1)
{
  NPKProtoAvailableProductsRequest *v2;
  void *v3;
  void *v4;
  id v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  NSObject *v11;
  void *v12;
  void *v13;
  void *v14;
  NSObject *v15;
  _BOOL4 v16;
  const char *v17;
  NSObject *v18;
  os_log_type_t v19;
  NSObject *v20;
  _BOOL4 v21;
  _QWORD v22[4];
  id v23;
  uint8_t buf[4];
  void *v25;
  uint64_t v26;
  _QWORD v27[2];

  v27[1] = *MEMORY[0x24BDAC8D0];
  v2 = objc_alloc_init(NPKProtoAvailableProductsRequest);
  v3 = *(void **)(a1 + 32);
  if (v3)
  {
    NPKSecureArchiveObject(v3);
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    -[NPKProtoAvailableProductsRequest setProductsRequestData:](v2, "setProductsRequestData:", v4);

  }
  v5 = objc_alloc(MEMORY[0x24BE4FE40]);
  -[NPKProtoAvailableProductsRequest data](v2, "data");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = (void *)objc_msgSend(v5, "initWithProtobufData:type:isResponse:", v6, 63, 0);

  v8 = *(void **)(a1 + 40);
  v26 = *MEMORY[0x24BE4FA90];
  v27[0] = MEMORY[0x24BDBD1C8];
  objc_msgSend(MEMORY[0x24BDBCE70], "dictionaryWithObjects:forKeys:count:", v27, &v26, 1);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "_sendProtobuf:responseExpected:extraOptions:", v7, 1, v9);
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  if (v10)
  {
    if (*(_QWORD *)(a1 + 48))
    {
      v11 = MEMORY[0x2199B6780]();
      v22[0] = MEMORY[0x24BDAC760];
      v22[1] = 3221225472;
      v22[2] = __76__NPKPaymentWebServiceCompanionTargetDevice_productsWithRequest_completion___block_invoke_2;
      v22[3] = &unk_24CFE7B80;
      v23 = *(id *)(a1 + 48);
      v12 = (void *)MEMORY[0x2199B6780](v22);
      v13 = *(void **)(a1 + 40);
      v14 = (void *)MEMORY[0x2199B6780](v11);
      objc_msgSend(v13, "_trackOutstandingRequestWithMessageIdentifier:completionHandler:errorHandler:", v10, v14, v12);

LABEL_13:
      goto LABEL_14;
    }
    pk_Payment_log();
    v20 = objc_claimAutoreleasedReturnValue();
    v21 = os_log_type_enabled(v20, OS_LOG_TYPE_DEFAULT);

    if (v21)
    {
      pk_Payment_log();
      v11 = objc_claimAutoreleasedReturnValue();
      if (!os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
        goto LABEL_13;
      *(_DWORD *)buf = 138412290;
      v25 = v10;
      v17 = "Warning: No response expected for message with identifier %@";
      v18 = v11;
      v19 = OS_LOG_TYPE_DEFAULT;
      goto LABEL_12;
    }
  }
  else
  {
    pk_Payment_log();
    v15 = objc_claimAutoreleasedReturnValue();
    v16 = os_log_type_enabled(v15, OS_LOG_TYPE_ERROR);

    if (v16)
    {
      pk_Payment_log();
      v11 = objc_claimAutoreleasedReturnValue();
      if (!os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
        goto LABEL_13;
      *(_DWORD *)buf = 138412290;
      v25 = v7;
      v17 = "Error: No message identifier for protobuf %@";
      v18 = v11;
      v19 = OS_LOG_TYPE_ERROR;
LABEL_12:
      _os_log_impl(&dword_213518000, v18, v19, v17, buf, 0xCu);
      goto LABEL_13;
    }
  }
LABEL_14:

}

uint64_t __76__NPKPaymentWebServiceCompanionTargetDevice_productsWithRequest_completion___block_invoke_2(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 32);
  if (result)
    return (*(uint64_t (**)(uint64_t, _QWORD, _QWORD))(result + 16))(result, 0, 0);
  return result;
}

- (void)performProductActionResponse:(id)a3
{
  id v4;
  NSObject *v5;
  _BOOL4 v6;
  NSObject *v7;
  void *v8;
  void *v9;
  void *v10;
  NSObject *v11;
  NSObject *v12;
  _BOOL4 v13;
  NSObject *v14;
  NSObject *v15;
  _BOOL4 v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  void *v20;
  void *v21;
  uint64_t v22;
  _QWORD v23[5];
  id v24;
  id v25;
  __int128 *p_buf;
  uint64_t *v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t (*v32)(uint64_t, uint64_t);
  void (*v33)(uint64_t);
  id v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t (*v38)(uint64_t, uint64_t);
  void (*v39)(uint64_t);
  id v40;
  uint8_t v41[4];
  void *v42;
  __int16 v43;
  void *v44;
  __int16 v45;
  uint64_t v46;
  __int128 buf;
  uint64_t v48;
  uint64_t (*v49)(uint64_t, uint64_t);
  void (*v50)(uint64_t);
  id v51;
  uint64_t v52;

  v52 = *MEMORY[0x24BDAC8D0];
  v4 = a3;
  pk_Payment_log();
  v5 = objc_claimAutoreleasedReturnValue();
  v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    pk_Payment_log();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend(v4, "npkDescription");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      LODWORD(buf) = 138412290;
      *(_QWORD *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_213518000, v7, OS_LOG_TYPE_DEFAULT, "Notice: (account-pass-provisioning) Target performProductActionResponse (account-pass-protobuf): incoming protobuf %@", (uint8_t *)&buf, 0xCu);

    }
  }
  objc_msgSend(v4, "context");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "incomingResponseIdentifier");
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  *(_QWORD *)&buf = 0;
  *((_QWORD *)&buf + 1) = &buf;
  v48 = 0x3032000000;
  v49 = __Block_byref_object_copy__342;
  v50 = __Block_byref_object_dispose__343;
  v51 = 0;
  v35 = 0;
  v36 = &v35;
  v37 = 0x3032000000;
  v38 = __Block_byref_object_copy__23;
  v39 = __Block_byref_object_dispose__23;
  v40 = 0;
  v29 = 0;
  v30 = &v29;
  v31 = 0x3032000000;
  v32 = __Block_byref_object_copy__23;
  v33 = __Block_byref_object_dispose__23;
  v34 = 0;
  if (v10)
  {
    -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
    v11 = objc_claimAutoreleasedReturnValue();
    v23[0] = MEMORY[0x24BDAC760];
    v23[1] = 3221225472;
    v23[2] = __74__NPKPaymentWebServiceCompanionTargetDevice_performProductActionResponse___block_invoke;
    v23[3] = &unk_24CFED060;
    v23[4] = self;
    v24 = v10;
    v25 = v4;
    p_buf = &buf;
    v27 = &v35;
    v28 = &v29;
    dispatch_sync(v11, v23);

  }
  else
  {
    pk_Payment_log();
    v12 = objc_claimAutoreleasedReturnValue();
    v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      pk_Payment_log();
      v14 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)v41 = 0;
        _os_log_impl(&dword_213518000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v41, 2u);
      }

    }
  }
  if (*(_QWORD *)(*((_QWORD *)&buf + 1) + 40))
  {
    pk_Payment_log();
    v15 = objc_claimAutoreleasedReturnValue();
    v16 = os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT);

    if (v16)
    {
      pk_Payment_log();
      v19 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT))
      {
        v20 = (void *)v36[5];
        objc_msgSend(v20, "availableProducts");
        v21 = (void *)objc_claimAutoreleasedReturnValue();
        v22 = v30[5];
        *(_DWORD *)v41 = 138412802;
        v42 = v20;
        v43 = 2112;
        v44 = v21;
        v45 = 2112;
        v46 = v22;
        _os_log_impl(&dword_213518000, v19, OS_LOG_TYPE_DEFAULT, "Notice: (account-pass-provisioning) calling completion for performProductActionRequest %@ (%@) %@", v41, 0x20u);

      }
    }
    (*(void (**)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(*((_QWORD *)&buf + 1) + 40) + 16))(*(_QWORD *)(*((_QWORD *)&buf + 1) + 40), v36[5], v30[5], v17, v18);
  }
  _Block_object_dispose(&v29, 8);

  _Block_object_dispose(&v35, 8);
  _Block_object_dispose(&buf, 8);

}

void __74__NPKPaymentWebServiceCompanionTargetDevice_performProductActionResponse___block_invoke(uint64_t a1)
{
  void *v1;
  void *v3;
  void *v4;
  NPKProtoPerformProductActionResponse *v5;
  void *v6;
  NSObject *v7;
  NSObject *v8;
  _BOOL4 v9;
  NSObject *v10;
  NSObject *v11;
  _BOOL4 v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  void *v17;
  NSObject *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  int v22;
  NSObject *v23;
  void *v24;
  uint8_t v25[16];
  uint8_t buf[16];

  objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "objectForKey:", *(_QWORD *)(a1 + 40));
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  if (v4)
  {
    v5 = [NPKProtoPerformProductActionResponse alloc];
    objc_msgSend(*(id *)(a1 + 48), "data");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    v7 = -[NPKProtoPerformProductActionResponse initWithData:](v5, "initWithData:", v6);

    if (-[NSObject pending](v7, "pending"))
    {
      pk_Payment_log();
      v8 = objc_claimAutoreleasedReturnValue();
      v9 = os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT);

      if (v9)
      {
        pk_Payment_log();
        v10 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)buf = 0;
          _os_log_impl(&dword_213518000, v10, OS_LOG_TYPE_DEFAULT, "Notice: got pending response for account-pass-protobuf: performProductActionResponse", buf, 2u);
        }

      }
      objc_msgSend(v4, "setOrResetCleanupTimer");
    }
    else
    {
      objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
      v13 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v13, "removeObjectForKey:", *(_QWORD *)(a1 + 40));

      objc_msgSend(v4, "completionHandler");
      v14 = objc_claimAutoreleasedReturnValue();
      v15 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
      v16 = *(void **)(v15 + 40);
      *(_QWORD *)(v15 + 40) = v14;

      -[NSObject availableProductsData](v7, "availableProductsData");
      v17 = (void *)objc_claimAutoreleasedReturnValue();
      v18 = objc_opt_class();
      NPKSecureUnarchiveObject(v17, v18);
      v19 = objc_claimAutoreleasedReturnValue();
      v20 = *(_QWORD *)(*(_QWORD *)(a1 + 64) + 8);
      v21 = *(void **)(v20 + 40);
      *(_QWORD *)(v20 + 40) = v19;

      v22 = -[NSObject hasErrorData](v7, "hasErrorData");
      if (v22)
      {
        -[NSObject errorData](v7, "errorData");
        v1 = (void *)objc_claimAutoreleasedReturnValue();
        v23 = objc_opt_class();
        NPKSecureUnarchiveObject(v1, v23);
        v24 = (void *)objc_claimAutoreleasedReturnValue();
      }
      else
      {
        v24 = 0;
      }
      objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 72) + 8) + 40), v24);
      if (v22)
      {

      }
    }
LABEL_16:

    goto LABEL_17;
  }
  pk_Payment_log();
  v11 = objc_claimAutoreleasedReturnValue();
  v12 = os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT);

  if (v12)
  {
    pk_Payment_log();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)v25 = 0;
      _os_log_impl(&dword_213518000, v7, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", v25, 2u);
    }
    goto LABEL_16;
  }
LABEL_17:

}

- (void)performProductActionRequest:(id)a3 completion:(id)a4
{
  id v6;
  id v7;
  NSObject *v8;
  _BOOL4 v9;
  NSObject *v10;
  NSObject *v11;
  id v12;
  id v13;
  _QWORD block[4];
  id v15;
  NPKPaymentWebServiceCompanionTargetDevice *v16;
  id v17;
  uint8_t buf[4];
  id v19;
  uint64_t v20;

  v20 = *MEMORY[0x24BDAC8D0];
  v6 = a3;
  v7 = a4;
  pk_Payment_log();
  v8 = objc_claimAutoreleasedReturnValue();
  v9 = os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT);

  if (v9)
  {
    pk_Payment_log();
    v10 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138412290;
      v19 = v6;
      _os_log_impl(&dword_213518000, v10, OS_LOG_TYPE_DEFAULT, "Notice: (account-pass-provisioning) Target device performProductActionRequest %@", buf, 0xCu);
    }

  }
  -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
  v11 = objc_claimAutoreleasedReturnValue();
  block[0] = MEMORY[0x24BDAC760];
  block[1] = 3221225472;
  block[2] = __84__NPKPaymentWebServiceCompanionTargetDevice_performProductActionRequest_completion___block_invoke;
  block[3] = &unk_24CFE84E8;
  v15 = v6;
  v16 = self;
  v17 = v7;
  v12 = v7;
  v13 = v6;
  dispatch_sync(v11, block);

}

void __84__NPKPaymentWebServiceCompanionTargetDevice_performProductActionRequest_completion___block_invoke(uint64_t a1)
{
  NPKProtoPerformProductActionRequest *v2;
  void *v3;
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  NSObject *v10;
  void *v11;
  void *v12;
  void *v13;
  NSObject *v14;
  _BOOL4 v15;
  const char *v16;
  NSObject *v17;
  os_log_type_t v18;
  NSObject *v19;
  _BOOL4 v20;
  _QWORD v21[4];
  id v22;
  uint8_t buf[4];
  void *v24;
  uint64_t v25;
  _QWORD v26[2];

  v26[1] = *MEMORY[0x24BDAC8D0];
  v2 = objc_alloc_init(NPKProtoPerformProductActionRequest);
  NPKSecureArchiveObject(*(void **)(a1 + 32));
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  -[NPKProtoPerformProductActionRequest setProductsActionData:](v2, "setProductsActionData:", v3);

  v4 = objc_alloc(MEMORY[0x24BE4FE40]);
  -[NPKProtoPerformProductActionRequest data](v2, "data");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = (void *)objc_msgSend(v4, "initWithProtobufData:type:isResponse:", v5, 64, 0);

  v7 = *(void **)(a1 + 40);
  v25 = *MEMORY[0x24BE4FA90];
  v26[0] = MEMORY[0x24BDBD1C8];
  objc_msgSend(MEMORY[0x24BDBCE70], "dictionaryWithObjects:forKeys:count:", v26, &v25, 1);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "_sendProtobuf:responseExpected:extraOptions:", v6, 1, v8);
  v9 = (void *)objc_claimAutoreleasedReturnValue();

  if (v9)
  {
    if (*(_QWORD *)(a1 + 48))
    {
      v10 = MEMORY[0x2199B6780]();
      v21[0] = MEMORY[0x24BDAC760];
      v21[1] = 3221225472;
      v21[2] = __84__NPKPaymentWebServiceCompanionTargetDevice_performProductActionRequest_completion___block_invoke_2;
      v21[3] = &unk_24CFE7B80;
      v22 = *(id *)(a1 + 48);
      v11 = (void *)MEMORY[0x2199B6780](v21);
      v12 = *(void **)(a1 + 40);
      v13 = (void *)MEMORY[0x2199B6780](v10);
      objc_msgSend(v12, "_trackOutstandingRequestWithMessageIdentifier:completionHandler:errorHandler:", v9, v13, v11);

LABEL_11:
      goto LABEL_12;
    }
    pk_Payment_log();
    v19 = objc_claimAutoreleasedReturnValue();
    v20 = os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT);

    if (v20)
    {
      pk_Payment_log();
      v10 = objc_claimAutoreleasedReturnValue();
      if (!os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
        goto LABEL_11;
      *(_DWORD *)buf = 138412290;
      v24 = v9;
      v16 = "Warning: No response expected for message with identifier %@";
      v17 = v10;
      v18 = OS_LOG_TYPE_DEFAULT;
      goto LABEL_10;
    }
  }
  else
  {
    pk_Payment_log();
    v14 = objc_claimAutoreleasedReturnValue();
    v15 = os_log_type_enabled(v14, OS_LOG_TYPE_ERROR);

    if (v15)
    {
      pk_Payment_log();
      v10 = objc_claimAutoreleasedReturnValue();
      if (!os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
        goto LABEL_11;
      *(_DWORD *)buf = 138412290;
      v24 = v6;
      v16 = "Error: No message identifier for protobuf %@";
      v17 = v10;
      v18 = OS_LOG_TYPE_ERROR;
LABEL_10:
      _os_log_impl(&dword_213518000, v17, v18, v16, buf, 0xCu);
      goto LABEL_11;
    }
  }
LABEL_12:

}

uint64_t __84__NPKPaymentWebServiceCompanionTargetDevice_performProductActionRequest_completion___block_invoke_2(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 32);
  if (result)
    return (*(uint64_t (**)(uint64_t, _QWORD, _QWORD))(result + 16))(result, 0, 0);
  return result;
}

- (void)paymentWebService:(id)a3 setDefaultPaymentPassUniqueIdentifier:(id)a4
{
  id v5;
  NSObject *v6;
  _BOOL4 v7;
  NSObject *v8;
  void *v9;
  id v10;
  _QWORD v11[4];
  id v12;
  uint8_t buf[4];
  id v14;
  uint64_t v15;

  v15 = *MEMORY[0x24BDAC8D0];
  v5 = a4;
  pk_Payment_log();
  v6 = objc_claimAutoreleasedReturnValue();
  v7 = os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT);

  if (v7)
  {
    pk_Payment_log();
    v8 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138412290;
      v14 = v5;
      _os_log_impl(&dword_213518000, v8, OS_LOG_TYPE_DEFAULT, "Notice: (account-pass-provisioning) Target device setDefaultPaymentPassUniqueIdentifier: %@", buf, 0xCu);
    }

  }
  -[NPKPaymentWebServiceCompanionTargetDevice companionAgentConnection](self, "companionAgentConnection");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v11[0] = MEMORY[0x24BDAC760];
  v11[1] = 3221225472;
  v11[2] = __101__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_setDefaultPaymentPassUniqueIdentifier___block_invoke;
  v11[3] = &unk_24CFE9828;
  v12 = v5;
  v10 = v5;
  objc_msgSend(v9, "setDefaultCardUniqueID:completion:", v10, v11);

}

void __101__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_setDefaultPaymentPassUniqueIdentifier___block_invoke(uint64_t a1, int a2)
{
  NSObject *v4;
  _BOOL4 v5;
  NSObject *v6;
  const __CFString *v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  __int16 v11;
  const __CFString *v12;
  uint64_t v13;

  v13 = *MEMORY[0x24BDAC8D0];
  pk_Payment_log();
  v4 = objc_claimAutoreleasedReturnValue();
  v5 = os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT);

  if (v5)
  {
    pk_Payment_log();
    v6 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      v7 = CFSTR("NO");
      v8 = *(_QWORD *)(a1 + 32);
      if (a2)
        v7 = CFSTR("YES");
      v9 = 138412546;
      v10 = v8;
      v11 = 2112;
      v12 = v7;
      _os_log_impl(&dword_213518000, v6, OS_LOG_TYPE_DEFAULT, "Notice: (account-pass-provisioning) completion of setDefaultCardUniqueID %@ resulted in success = %@", (uint8_t *)&v9, 0x16u);
    }

  }
}

- (void)initializeCloudStoreIfNecessaryResponse:(id)a3
{
  id v4;
  NSObject *v5;
  _BOOL4 v6;
  NSObject *v7;
  void *v8;
  void *v9;
  void *v10;
  NSObject *v11;
  NSObject *v12;
  _BOOL4 v13;
  NSObject *v14;
  uint64_t v15;
  uint8_t v16[8];
  _QWORD block[5];
  id v18;
  id v19;
  __int128 *p_buf;
  uint64_t *v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  char v25;
  __int128 buf;
  uint64_t v27;
  uint64_t (*v28)(uint64_t, uint64_t);
  void (*v29)(uint64_t);
  id v30;
  uint64_t v31;

  v31 = *MEMORY[0x24BDAC8D0];
  v4 = a3;
  pk_Payment_log();
  v5 = objc_claimAutoreleasedReturnValue();
  v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    pk_Payment_log();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend(v4, "npkDescription");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      LODWORD(buf) = 138412290;
      *(_QWORD *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_213518000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Target device initialize cloud store if necessary: incoming protobuf %@", (uint8_t *)&buf, 0xCu);

    }
  }
  objc_msgSend(v4, "context");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "incomingResponseIdentifier");
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  *(_QWORD *)&buf = 0;
  *((_QWORD *)&buf + 1) = &buf;
  v27 = 0x3032000000;
  v28 = __Block_byref_object_copy__342;
  v29 = __Block_byref_object_dispose__343;
  v30 = 0;
  v22 = 0;
  v23 = &v22;
  v24 = 0x2020000000;
  v25 = 0;
  if (v10)
  {
    -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
    v11 = objc_claimAutoreleasedReturnValue();
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 3221225472;
    block[2] = __85__NPKPaymentWebServiceCompanionTargetDevice_initializeCloudStoreIfNecessaryResponse___block_invoke;
    block[3] = &unk_24CFED0D8;
    block[4] = self;
    v18 = v10;
    v19 = v4;
    p_buf = &buf;
    v21 = &v22;
    dispatch_sync(v11, block);

  }
  else
  {
    pk_Payment_log();
    v12 = objc_claimAutoreleasedReturnValue();
    v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      pk_Payment_log();
      v14 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)v16 = 0;
        _os_log_impl(&dword_213518000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v16, 2u);
      }

    }
  }
  v15 = *(_QWORD *)(*((_QWORD *)&buf + 1) + 40);
  if (v15)
    (*(void (**)(uint64_t, _QWORD))(v15 + 16))(v15, *((unsigned __int8 *)v23 + 24));
  _Block_object_dispose(&v22, 8);
  _Block_object_dispose(&buf, 8);

}

void __85__NPKPaymentWebServiceCompanionTargetDevice_initializeCloudStoreIfNecessaryResponse___block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;
  NPKProtoInitializeCloudStoreIfNecessaryResponse *v4;
  void *v5;
  NPKProtoInitializeCloudStoreIfNecessaryResponse *v6;
  NSObject *v7;
  _BOOL4 v8;
  NSObject *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint8_t v14[16];

  objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "objectForKey:", *(_QWORD *)(a1 + 40));
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  if (v3)
  {
    v4 = [NPKProtoInitializeCloudStoreIfNecessaryResponse alloc];
    objc_msgSend(*(id *)(a1 + 48), "data");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    v6 = -[NPKProtoInitializeCloudStoreIfNecessaryResponse initWithData:](v4, "initWithData:", v5);

    if (-[NPKProtoInitializeCloudStoreIfNecessaryResponse pending](v6, "pending"))
    {
      objc_msgSend(v3, "setOrResetCleanupTimer");
    }
    else
    {
      objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v10, "removeObjectForKey:", *(_QWORD *)(a1 + 40));

      objc_msgSend(v3, "completionHandler");
      v11 = objc_claimAutoreleasedReturnValue();
      v12 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
      v13 = *(void **)(v12 + 40);
      *(_QWORD *)(v12 + 40) = v11;

      *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 24) = -[NPKProtoInitializeCloudStoreIfNecessaryResponse success](v6, "success");
    }

  }
  else
  {
    pk_Payment_log();
    v7 = objc_claimAutoreleasedReturnValue();
    v8 = os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT);

    if (v8)
    {
      pk_Payment_log();
      v9 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)v14 = 0;
        _os_log_impl(&dword_213518000, v9, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", v14, 2u);
      }

    }
  }

}

- (void)initializeCloudStoreIfNecessaryWithCompletion:(id)a3
{
  id v4;
  NSObject *v5;
  _BOOL4 v6;
  NSObject *v7;
  NSObject *v8;
  id v9;
  _QWORD v10[5];
  id v11;
  uint8_t buf[16];

  v4 = a3;
  pk_Payment_log();
  v5 = objc_claimAutoreleasedReturnValue();
  v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    pk_Payment_log();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl(&dword_213518000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Target device initialize cloud store if necessary", buf, 2u);
    }

  }
  -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
  v8 = objc_claimAutoreleasedReturnValue();
  v10[0] = MEMORY[0x24BDAC760];
  v10[1] = 3221225472;
  v10[2] = __91__NPKPaymentWebServiceCompanionTargetDevice_initializeCloudStoreIfNecessaryWithCompletion___block_invoke;
  v10[3] = &unk_24CFE7E90;
  v10[4] = self;
  v11 = v4;
  v9 = v4;
  dispatch_sync(v8, v10);

}

void __91__NPKPaymentWebServiceCompanionTargetDevice_initializeCloudStoreIfNecessaryWithCompletion___block_invoke(uint64_t a1)
{
  NPKProtoInitializeCloudStoreIfNecessaryRequest *v2;
  id v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  NSObject *v9;
  void *v10;
  void *v11;
  void *v12;
  NSObject *v13;
  _BOOL4 v14;
  const char *v15;
  NSObject *v16;
  os_log_type_t v17;
  NSObject *v18;
  _BOOL4 v19;
  _QWORD v20[4];
  id v21;
  uint8_t buf[4];
  void *v23;
  uint64_t v24;
  _QWORD v25[2];

  v25[1] = *MEMORY[0x24BDAC8D0];
  v2 = objc_alloc_init(NPKProtoInitializeCloudStoreIfNecessaryRequest);
  v3 = objc_alloc(MEMORY[0x24BE4FE40]);
  -[NPKProtoInitializeCloudStoreIfNecessaryRequest data](v2, "data");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = (void *)objc_msgSend(v3, "initWithProtobufData:type:isResponse:", v4, 38, 0);

  v6 = *(void **)(a1 + 32);
  v24 = *MEMORY[0x24BE4FA90];
  v25[0] = MEMORY[0x24BDBD1C8];
  objc_msgSend(MEMORY[0x24BDBCE70], "dictionaryWithObjects:forKeys:count:", v25, &v24, 1);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "_sendProtobuf:responseExpected:extraOptions:", v5, 1, v7);
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  if (v8)
  {
    if (*(_QWORD *)(a1 + 40))
    {
      v9 = MEMORY[0x2199B6780]();
      v20[0] = MEMORY[0x24BDAC760];
      v20[1] = 3221225472;
      v20[2] = __91__NPKPaymentWebServiceCompanionTargetDevice_initializeCloudStoreIfNecessaryWithCompletion___block_invoke_2;
      v20[3] = &unk_24CFE7B80;
      v21 = *(id *)(a1 + 40);
      v10 = (void *)MEMORY[0x2199B6780](v20);
      v11 = *(void **)(a1 + 32);
      v12 = (void *)MEMORY[0x2199B6780](v9);
      objc_msgSend(v11, "_trackOutstandingRequestWithMessageIdentifier:completionHandler:errorHandler:", v8, v12, v10);

LABEL_11:
      goto LABEL_12;
    }
    pk_Payment_log();
    v18 = objc_claimAutoreleasedReturnValue();
    v19 = os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT);

    if (v19)
    {
      pk_Payment_log();
      v9 = objc_claimAutoreleasedReturnValue();
      if (!os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
        goto LABEL_11;
      *(_DWORD *)buf = 138412290;
      v23 = v8;
      v15 = "Warning: No response expected for message with identifier %@";
      v16 = v9;
      v17 = OS_LOG_TYPE_DEFAULT;
      goto LABEL_10;
    }
  }
  else
  {
    pk_Payment_log();
    v13 = objc_claimAutoreleasedReturnValue();
    v14 = os_log_type_enabled(v13, OS_LOG_TYPE_ERROR);

    if (v14)
    {
      pk_Payment_log();
      v9 = objc_claimAutoreleasedReturnValue();
      if (!os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
        goto LABEL_11;
      *(_DWORD *)buf = 138412290;
      v23 = v5;
      v15 = "Error: No message identifier for protobuf %@";
      v16 = v9;
      v17 = OS_LOG_TYPE_ERROR;
LABEL_10:
      _os_log_impl(&dword_213518000, v16, v17, v15, buf, 0xCu);
      goto LABEL_11;
    }
  }
LABEL_12:

}

uint64_t __91__NPKPaymentWebServiceCompanionTargetDevice_initializeCloudStoreIfNecessaryWithCompletion___block_invoke_2(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 32);
  if (result)
    return (*(uint64_t (**)(uint64_t, _QWORD))(result + 16))(result, 0);
  return result;
}

- (void)initializeCloudStoreIfNecessaryWithHandlerResponse:(id)a3
{
  id v4;
  NSObject *v5;
  _BOOL4 v6;
  NSObject *v7;
  void *v8;
  void *v9;
  void *v10;
  NSObject *v11;
  NSObject *v12;
  _BOOL4 v13;
  NSObject *v14;
  uint64_t v15;
  uint8_t v16[16];
  _QWORD block[5];
  id v18;
  id v19;
  __int128 *p_buf;
  uint64_t *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t (*v26)(uint64_t, uint64_t);
  void (*v27)(uint64_t);
  id v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  char v32;
  __int128 buf;
  uint64_t v34;
  uint64_t (*v35)(uint64_t, uint64_t);
  void (*v36)(uint64_t);
  id v37;
  uint64_t v38;

  v38 = *MEMORY[0x24BDAC8D0];
  v4 = a3;
  pk_Payment_log();
  v5 = objc_claimAutoreleasedReturnValue();
  v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    pk_Payment_log();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend(v4, "npkDescription");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      LODWORD(buf) = 138412290;
      *(_QWORD *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_213518000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Target device initialize cloud store if necessary with handler: incoming protobuf %@", (uint8_t *)&buf, 0xCu);

    }
  }
  objc_msgSend(v4, "context");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "incomingResponseIdentifier");
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  *(_QWORD *)&buf = 0;
  *((_QWORD *)&buf + 1) = &buf;
  v34 = 0x3032000000;
  v35 = __Block_byref_object_copy__342;
  v36 = __Block_byref_object_dispose__343;
  v37 = 0;
  v29 = 0;
  v30 = &v29;
  v31 = 0x2020000000;
  v32 = 0;
  v23 = 0;
  v24 = &v23;
  v25 = 0x3032000000;
  v26 = __Block_byref_object_copy__23;
  v27 = __Block_byref_object_dispose__23;
  v28 = 0;
  if (v10)
  {
    -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
    v11 = objc_claimAutoreleasedReturnValue();
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 3221225472;
    block[2] = __96__NPKPaymentWebServiceCompanionTargetDevice_initializeCloudStoreIfNecessaryWithHandlerResponse___block_invoke;
    block[3] = &unk_24CFED060;
    block[4] = self;
    v18 = v10;
    v19 = v4;
    p_buf = &buf;
    v21 = &v29;
    v22 = &v23;
    dispatch_sync(v11, block);

  }
  else
  {
    pk_Payment_log();
    v12 = objc_claimAutoreleasedReturnValue();
    v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      pk_Payment_log();
      v14 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)v16 = 0;
        _os_log_impl(&dword_213518000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v16, 2u);
      }

    }
  }
  v15 = *(_QWORD *)(*((_QWORD *)&buf + 1) + 40);
  if (v15)
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v15 + 16))(v15, *((unsigned __int8 *)v30 + 24), v24[5]);
  _Block_object_dispose(&v23, 8);

  _Block_object_dispose(&v29, 8);
  _Block_object_dispose(&buf, 8);

}

void __96__NPKPaymentWebServiceCompanionTargetDevice_initializeCloudStoreIfNecessaryWithHandlerResponse___block_invoke(uint64_t a1)
{
  void *v1;
  void *v3;
  void *v4;
  NPKProtoInitializeCloudStoreIfNecessaryWithHandlerResponse *v5;
  void *v6;
  NPKProtoInitializeCloudStoreIfNecessaryWithHandlerResponse *v7;
  NSObject *v8;
  _BOOL4 v9;
  NSObject *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  _BOOL4 v15;
  NSObject *v16;
  void *v17;
  __int16 v18[8];

  objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "objectForKey:", *(_QWORD *)(a1 + 40));
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  if (v4)
  {
    v5 = [NPKProtoInitializeCloudStoreIfNecessaryWithHandlerResponse alloc];
    objc_msgSend(*(id *)(a1 + 48), "data");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    v7 = -[NPKProtoInitializeCloudStoreIfNecessaryWithHandlerResponse initWithData:](v5, "initWithData:", v6);

    if (-[NPKProtoInitializeCloudStoreIfNecessaryWithHandlerResponse pending](v7, "pending"))
    {
      objc_msgSend(v4, "setOrResetCleanupTimer");
    }
    else
    {
      objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v11, "removeObjectForKey:", *(_QWORD *)(a1 + 40));

      objc_msgSend(v4, "completionHandler");
      v12 = objc_claimAutoreleasedReturnValue();
      v13 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
      v14 = *(void **)(v13 + 40);
      *(_QWORD *)(v13 + 40) = v12;

      *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 24) = -[NPKProtoInitializeCloudStoreIfNecessaryWithHandlerResponse success](v7, "success");
      v15 = -[NPKProtoInitializeCloudStoreIfNecessaryWithHandlerResponse hasErrorData](v7, "hasErrorData");
      if (v15)
      {
        -[NPKProtoInitializeCloudStoreIfNecessaryWithHandlerResponse errorData](v7, "errorData");
        v1 = (void *)objc_claimAutoreleasedReturnValue();
        v16 = objc_opt_class();
        NPKSecureUnarchiveObject(v1, v16);
        v17 = (void *)objc_claimAutoreleasedReturnValue();
      }
      else
      {
        v17 = 0;
      }
      objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 72) + 8) + 40), v17);
      if (v15)
      {

      }
    }

  }
  else
  {
    pk_Payment_log();
    v8 = objc_claimAutoreleasedReturnValue();
    v9 = os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT);

    if (v9)
    {
      pk_Payment_log();
      v10 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
      {
        v18[0] = 0;
        _os_log_impl(&dword_213518000, v10, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", (uint8_t *)v18, 2u);
      }

    }
  }

}

- (void)initializeCloudStoreIfNecessaryWithHandler:(id)a3
{
  id v4;
  NSObject *v5;
  _BOOL4 v6;
  NSObject *v7;
  NSObject *v8;
  id v9;
  _QWORD v10[5];
  id v11;
  uint8_t buf[16];

  v4 = a3;
  pk_Payment_log();
  v5 = objc_claimAutoreleasedReturnValue();
  v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    pk_Payment_log();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl(&dword_213518000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Target device initialize cloud store if necessary with handler", buf, 2u);
    }

  }
  -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
  v8 = objc_claimAutoreleasedReturnValue();
  v10[0] = MEMORY[0x24BDAC760];
  v10[1] = 3221225472;
  v10[2] = __88__NPKPaymentWebServiceCompanionTargetDevice_initializeCloudStoreIfNecessaryWithHandler___block_invoke;
  v10[3] = &unk_24CFE7E90;
  v10[4] = self;
  v11 = v4;
  v9 = v4;
  dispatch_sync(v8, v10);

}

void __88__NPKPaymentWebServiceCompanionTargetDevice_initializeCloudStoreIfNecessaryWithHandler___block_invoke(uint64_t a1)
{
  NPKProtoInitializeCloudStoreIfNecessaryWithHandlerRequest *v2;
  id v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  NSObject *v9;
  void *v10;
  void *v11;
  void *v12;
  NSObject *v13;
  _BOOL4 v14;
  const char *v15;
  NSObject *v16;
  os_log_type_t v17;
  NSObject *v18;
  _BOOL4 v19;
  _QWORD v20[4];
  id v21;
  uint8_t buf[4];
  void *v23;
  uint64_t v24;
  _QWORD v25[2];

  v25[1] = *MEMORY[0x24BDAC8D0];
  v2 = objc_alloc_init(NPKProtoInitializeCloudStoreIfNecessaryWithHandlerRequest);
  v3 = objc_alloc(MEMORY[0x24BE4FE40]);
  -[NPKProtoInitializeCloudStoreIfNecessaryWithHandlerRequest data](v2, "data");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = (void *)objc_msgSend(v3, "initWithProtobufData:type:isResponse:", v4, 42, 0);

  v6 = *(void **)(a1 + 32);
  v24 = *MEMORY[0x24BE4FA90];
  v25[0] = MEMORY[0x24BDBD1C8];
  objc_msgSend(MEMORY[0x24BDBCE70], "dictionaryWithObjects:forKeys:count:", v25, &v24, 1);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "_sendProtobuf:responseExpected:extraOptions:", v5, 1, v7);
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  if (v8)
  {
    if (*(_QWORD *)(a1 + 40))
    {
      v9 = MEMORY[0x2199B6780]();
      v20[0] = MEMORY[0x24BDAC760];
      v20[1] = 3221225472;
      v20[2] = __88__NPKPaymentWebServiceCompanionTargetDevice_initializeCloudStoreIfNecessaryWithHandler___block_invoke_2;
      v20[3] = &unk_24CFE7B80;
      v21 = *(id *)(a1 + 40);
      v10 = (void *)MEMORY[0x2199B6780](v20);
      v11 = *(void **)(a1 + 32);
      v12 = (void *)MEMORY[0x2199B6780](v9);
      objc_msgSend(v11, "_trackOutstandingRequestWithMessageIdentifier:completionHandler:errorHandler:", v8, v12, v10);

LABEL_11:
      goto LABEL_12;
    }
    pk_Payment_log();
    v18 = objc_claimAutoreleasedReturnValue();
    v19 = os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT);

    if (v19)
    {
      pk_Payment_log();
      v9 = objc_claimAutoreleasedReturnValue();
      if (!os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
        goto LABEL_11;
      *(_DWORD *)buf = 138412290;
      v23 = v8;
      v15 = "Warning: No response expected for message with identifier %@";
      v16 = v9;
      v17 = OS_LOG_TYPE_DEFAULT;
      goto LABEL_10;
    }
  }
  else
  {
    pk_Payment_log();
    v13 = objc_claimAutoreleasedReturnValue();
    v14 = os_log_type_enabled(v13, OS_LOG_TYPE_ERROR);

    if (v14)
    {
      pk_Payment_log();
      v9 = objc_claimAutoreleasedReturnValue();
      if (!os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
        goto LABEL_11;
      *(_DWORD *)buf = 138412290;
      v23 = v5;
      v15 = "Error: No message identifier for protobuf %@";
      v16 = v9;
      v17 = OS_LOG_TYPE_ERROR;
LABEL_10:
      _os_log_impl(&dword_213518000, v16, v17, v15, buf, 0xCu);
      goto LABEL_11;
    }
  }
LABEL_12:

}

uint64_t __88__NPKPaymentWebServiceCompanionTargetDevice_initializeCloudStoreIfNecessaryWithHandler___block_invoke_2(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 32);
  if (result)
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(result + 16))(result, 0, a2);
  return result;
}

- (void)checkTLKsMissingResponse:(id)a3
{
  id v4;
  NSObject *v5;
  _BOOL4 v6;
  NSObject *v7;
  void *v8;
  void *v9;
  void *v10;
  NSObject *v11;
  NSObject *v12;
  _BOOL4 v13;
  NSObject *v14;
  uint64_t v15;
  uint8_t v16[16];
  _QWORD block[5];
  id v18;
  id v19;
  __int128 *p_buf;
  uint64_t *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t (*v26)(uint64_t, uint64_t);
  void (*v27)(uint64_t);
  id v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  char v32;
  __int128 buf;
  uint64_t v34;
  uint64_t (*v35)(uint64_t, uint64_t);
  void (*v36)(uint64_t);
  id v37;
  uint64_t v38;

  v38 = *MEMORY[0x24BDAC8D0];
  v4 = a3;
  pk_Payment_log();
  v5 = objc_claimAutoreleasedReturnValue();
  v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    pk_Payment_log();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend(v4, "npkDescription");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      LODWORD(buf) = 138412290;
      *(_QWORD *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_213518000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Target device check TLKs missing: incoming protobuf %@", (uint8_t *)&buf, 0xCu);

    }
  }
  objc_msgSend(v4, "context");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "incomingResponseIdentifier");
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  *(_QWORD *)&buf = 0;
  *((_QWORD *)&buf + 1) = &buf;
  v34 = 0x3032000000;
  v35 = __Block_byref_object_copy__342;
  v36 = __Block_byref_object_dispose__343;
  v37 = 0;
  v29 = 0;
  v30 = &v29;
  v31 = 0x2020000000;
  v32 = 0;
  v23 = 0;
  v24 = &v23;
  v25 = 0x3032000000;
  v26 = __Block_byref_object_copy__23;
  v27 = __Block_byref_object_dispose__23;
  v28 = 0;
  if (v10)
  {
    -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
    v11 = objc_claimAutoreleasedReturnValue();
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 3221225472;
    block[2] = __70__NPKPaymentWebServiceCompanionTargetDevice_checkTLKsMissingResponse___block_invoke;
    block[3] = &unk_24CFED060;
    block[4] = self;
    v18 = v10;
    v19 = v4;
    p_buf = &buf;
    v21 = &v29;
    v22 = &v23;
    dispatch_sync(v11, block);

  }
  else
  {
    pk_Payment_log();
    v12 = objc_claimAutoreleasedReturnValue();
    v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      pk_Payment_log();
      v14 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)v16 = 0;
        _os_log_impl(&dword_213518000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v16, 2u);
      }

    }
  }
  v15 = *(_QWORD *)(*((_QWORD *)&buf + 1) + 40);
  if (v15)
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v15 + 16))(v15, *((unsigned __int8 *)v30 + 24), v24[5]);
  _Block_object_dispose(&v23, 8);

  _Block_object_dispose(&v29, 8);
  _Block_object_dispose(&buf, 8);

}

void __70__NPKPaymentWebServiceCompanionTargetDevice_checkTLKsMissingResponse___block_invoke(uint64_t a1)
{
  void *v1;
  void *v3;
  void *v4;
  NPKProtoCheckTLKsMissingResponse *v5;
  void *v6;
  NPKProtoCheckTLKsMissingResponse *v7;
  NSObject *v8;
  _BOOL4 v9;
  NSObject *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  _BOOL4 v15;
  NSObject *v16;
  void *v17;
  __int16 v18[8];

  objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "objectForKey:", *(_QWORD *)(a1 + 40));
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  if (v4)
  {
    v5 = [NPKProtoCheckTLKsMissingResponse alloc];
    objc_msgSend(*(id *)(a1 + 48), "data");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    v7 = -[NPKProtoCheckTLKsMissingResponse initWithData:](v5, "initWithData:", v6);

    if (-[NPKProtoCheckTLKsMissingResponse pending](v7, "pending"))
    {
      objc_msgSend(v4, "setOrResetCleanupTimer");
    }
    else
    {
      objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v11, "removeObjectForKey:", *(_QWORD *)(a1 + 40));

      objc_msgSend(v4, "completionHandler");
      v12 = objc_claimAutoreleasedReturnValue();
      v13 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
      v14 = *(void **)(v13 + 40);
      *(_QWORD *)(v13 + 40) = v12;

      *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 24) = -[NPKProtoCheckTLKsMissingResponse missing](v7, "missing");
      v15 = -[NPKProtoCheckTLKsMissingResponse hasErrorData](v7, "hasErrorData");
      if (v15)
      {
        -[NPKProtoCheckTLKsMissingResponse errorData](v7, "errorData");
        v1 = (void *)objc_claimAutoreleasedReturnValue();
        v16 = objc_opt_class();
        NPKSecureUnarchiveObject(v1, v16);
        v17 = (void *)objc_claimAutoreleasedReturnValue();
      }
      else
      {
        v17 = 0;
      }
      objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 72) + 8) + 40), v17);
      if (v15)
      {

      }
    }

  }
  else
  {
    pk_Payment_log();
    v8 = objc_claimAutoreleasedReturnValue();
    v9 = os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT);

    if (v9)
    {
      pk_Payment_log();
      v10 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
      {
        v18[0] = 0;
        _os_log_impl(&dword_213518000, v10, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", (uint8_t *)v18, 2u);
      }

    }
  }

}

- (void)checkTLKsMissingWithCompletion:(id)a3
{
  id v4;
  NSObject *v5;
  _BOOL4 v6;
  NSObject *v7;
  NSObject *v8;
  id v9;
  _QWORD v10[5];
  id v11;
  uint8_t buf[16];

  v4 = a3;
  pk_Payment_log();
  v5 = objc_claimAutoreleasedReturnValue();
  v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    pk_Payment_log();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl(&dword_213518000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Target device check TLK missing", buf, 2u);
    }

  }
  -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
  v8 = objc_claimAutoreleasedReturnValue();
  v10[0] = MEMORY[0x24BDAC760];
  v10[1] = 3221225472;
  v10[2] = __76__NPKPaymentWebServiceCompanionTargetDevice_checkTLKsMissingWithCompletion___block_invoke;
  v10[3] = &unk_24CFE7E90;
  v10[4] = self;
  v11 = v4;
  v9 = v4;
  dispatch_sync(v8, v10);

}

void __76__NPKPaymentWebServiceCompanionTargetDevice_checkTLKsMissingWithCompletion___block_invoke(uint64_t a1)
{
  NPKProtoCheckTLKsMissingRequest *v2;
  id v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  NSObject *v9;
  void *v10;
  void *v11;
  void *v12;
  NSObject *v13;
  _BOOL4 v14;
  const char *v15;
  NSObject *v16;
  os_log_type_t v17;
  NSObject *v18;
  _BOOL4 v19;
  _QWORD v20[4];
  id v21;
  uint8_t buf[4];
  void *v23;
  uint64_t v24;
  _QWORD v25[2];

  v25[1] = *MEMORY[0x24BDAC8D0];
  v2 = objc_alloc_init(NPKProtoCheckTLKsMissingRequest);
  v3 = objc_alloc(MEMORY[0x24BE4FE40]);
  -[NPKProtoCheckTLKsMissingRequest data](v2, "data");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = (void *)objc_msgSend(v3, "initWithProtobufData:type:isResponse:", v4, 41, 0);

  v6 = *(void **)(a1 + 32);
  v24 = *MEMORY[0x24BE4FA90];
  v25[0] = MEMORY[0x24BDBD1C8];
  objc_msgSend(MEMORY[0x24BDBCE70], "dictionaryWithObjects:forKeys:count:", v25, &v24, 1);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "_sendProtobuf:responseExpected:extraOptions:", v5, 1, v7);
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  if (v8)
  {
    if (*(_QWORD *)(a1 + 40))
    {
      v9 = MEMORY[0x2199B6780]();
      v20[0] = MEMORY[0x24BDAC760];
      v20[1] = 3221225472;
      v20[2] = __76__NPKPaymentWebServiceCompanionTargetDevice_checkTLKsMissingWithCompletion___block_invoke_2;
      v20[3] = &unk_24CFE7B80;
      v21 = *(id *)(a1 + 40);
      v10 = (void *)MEMORY[0x2199B6780](v20);
      v11 = *(void **)(a1 + 32);
      v12 = (void *)MEMORY[0x2199B6780](v9);
      objc_msgSend(v11, "_trackOutstandingRequestWithMessageIdentifier:completionHandler:errorHandler:", v8, v12, v10);

LABEL_11:
      goto LABEL_12;
    }
    pk_Payment_log();
    v18 = objc_claimAutoreleasedReturnValue();
    v19 = os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT);

    if (v19)
    {
      pk_Payment_log();
      v9 = objc_claimAutoreleasedReturnValue();
      if (!os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
        goto LABEL_11;
      *(_DWORD *)buf = 138412290;
      v23 = v8;
      v15 = "Warning: No response expected for message with identifier %@";
      v16 = v9;
      v17 = OS_LOG_TYPE_DEFAULT;
      goto LABEL_10;
    }
  }
  else
  {
    pk_Payment_log();
    v13 = objc_claimAutoreleasedReturnValue();
    v14 = os_log_type_enabled(v13, OS_LOG_TYPE_ERROR);

    if (v14)
    {
      pk_Payment_log();
      v9 = objc_claimAutoreleasedReturnValue();
      if (!os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
        goto LABEL_11;
      *(_DWORD *)buf = 138412290;
      v23 = v5;
      v15 = "Error: No message identifier for protobuf %@";
      v16 = v9;
      v17 = OS_LOG_TYPE_ERROR;
LABEL_10:
      _os_log_impl(&dword_213518000, v16, v17, v15, buf, 0xCu);
      goto LABEL_11;
    }
  }
LABEL_12:

}

uint64_t __76__NPKPaymentWebServiceCompanionTargetDevice_checkTLKsMissingWithCompletion___block_invoke_2(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 32);
  if (result)
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(result + 16))(result, 0, a2);
  return result;
}

- (void)resetApplePayManateeViewResponse:(id)a3
{
  id v4;
  NSObject *v5;
  _BOOL4 v6;
  NSObject *v7;
  void *v8;
  void *v9;
  void *v10;
  NSObject *v11;
  NSObject *v12;
  _BOOL4 v13;
  NSObject *v14;
  uint64_t v15;
  uint8_t v16[16];
  _QWORD block[5];
  id v18;
  id v19;
  __int128 *p_buf;
  uint64_t *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t (*v30)(uint64_t, uint64_t);
  void (*v31)(uint64_t);
  id v32;
  __int128 buf;
  uint64_t v34;
  uint64_t (*v35)(uint64_t, uint64_t);
  void (*v36)(uint64_t);
  id v37;
  uint64_t v38;

  v38 = *MEMORY[0x24BDAC8D0];
  v4 = a3;
  pk_Payment_log();
  v5 = objc_claimAutoreleasedReturnValue();
  v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    pk_Payment_log();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend(v4, "npkDescription");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      LODWORD(buf) = 138412290;
      *(_QWORD *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_213518000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Target device reset Apple Pay manetee view: incoming protobuf %@", (uint8_t *)&buf, 0xCu);

    }
  }
  objc_msgSend(v4, "context");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "incomingResponseIdentifier");
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  *(_QWORD *)&buf = 0;
  *((_QWORD *)&buf + 1) = &buf;
  v34 = 0x3032000000;
  v35 = __Block_byref_object_copy__342;
  v36 = __Block_byref_object_dispose__343;
  v37 = 0;
  v27 = 0;
  v28 = &v27;
  v29 = 0x3032000000;
  v30 = __Block_byref_object_copy__23;
  v31 = __Block_byref_object_dispose__23;
  v32 = 0;
  v23 = 0;
  v24 = &v23;
  v25 = 0x2020000000;
  v26 = 0;
  if (v10)
  {
    -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
    v11 = objc_claimAutoreleasedReturnValue();
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 3221225472;
    block[2] = __78__NPKPaymentWebServiceCompanionTargetDevice_resetApplePayManateeViewResponse___block_invoke;
    block[3] = &unk_24CFED060;
    block[4] = self;
    v18 = v10;
    v19 = v4;
    p_buf = &buf;
    v21 = &v23;
    v22 = &v27;
    dispatch_sync(v11, block);

  }
  else
  {
    pk_Payment_log();
    v12 = objc_claimAutoreleasedReturnValue();
    v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      pk_Payment_log();
      v14 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)v16 = 0;
        _os_log_impl(&dword_213518000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v16, 2u);
      }

    }
  }
  v15 = *(_QWORD *)(*((_QWORD *)&buf + 1) + 40);
  if (v15)
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v15 + 16))(v15, *((unsigned __int8 *)v24 + 24), v28[5]);
  _Block_object_dispose(&v23, 8);
  _Block_object_dispose(&v27, 8);

  _Block_object_dispose(&buf, 8);
}

void __78__NPKPaymentWebServiceCompanionTargetDevice_resetApplePayManateeViewResponse___block_invoke(uint64_t a1)
{
  void *v1;
  void *v3;
  void *v4;
  NPKProtoResetApplePayManateeViewResponse *v5;
  void *v6;
  NPKProtoResetApplePayManateeViewResponse *v7;
  NSObject *v8;
  _BOOL4 v9;
  NSObject *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  _BOOL4 v15;
  NSObject *v16;
  void *v17;
  __int16 v18[8];

  objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "objectForKey:", *(_QWORD *)(a1 + 40));
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  if (v4)
  {
    v5 = [NPKProtoResetApplePayManateeViewResponse alloc];
    objc_msgSend(*(id *)(a1 + 48), "data");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    v7 = -[NPKProtoResetApplePayManateeViewResponse initWithData:](v5, "initWithData:", v6);

    if (-[NPKProtoResetApplePayManateeViewResponse pending](v7, "pending"))
    {
      objc_msgSend(v4, "setOrResetCleanupTimer");
    }
    else
    {
      objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v11, "removeObjectForKey:", *(_QWORD *)(a1 + 40));

      objc_msgSend(v4, "completionHandler");
      v12 = objc_claimAutoreleasedReturnValue();
      v13 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
      v14 = *(void **)(v13 + 40);
      *(_QWORD *)(v13 + 40) = v12;

      *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 24) = -[NPKProtoResetApplePayManateeViewResponse success](v7, "success");
      v15 = -[NPKProtoResetApplePayManateeViewResponse hasErrorData](v7, "hasErrorData");
      if (v15)
      {
        -[NPKProtoResetApplePayManateeViewResponse errorData](v7, "errorData");
        v1 = (void *)objc_claimAutoreleasedReturnValue();
        v16 = objc_opt_class();
        NPKSecureUnarchiveObject(v1, v16);
        v17 = (void *)objc_claimAutoreleasedReturnValue();
      }
      else
      {
        v17 = 0;
      }
      objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 72) + 8) + 40), v17);
      if (v15)
      {

      }
    }

  }
  else
  {
    pk_Payment_log();
    v8 = objc_claimAutoreleasedReturnValue();
    v9 = os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT);

    if (v9)
    {
      pk_Payment_log();
      v10 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
      {
        v18[0] = 0;
        _os_log_impl(&dword_213518000, v10, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", (uint8_t *)v18, 2u);
      }

    }
  }

}

- (void)resetApplePayManateeViewWithCompletion:(id)a3
{
  id v4;
  NSObject *v5;
  _BOOL4 v6;
  NSObject *v7;
  NSObject *v8;
  id v9;
  _QWORD v10[5];
  id v11;
  uint8_t buf[16];

  v4 = a3;
  pk_Payment_log();
  v5 = objc_claimAutoreleasedReturnValue();
  v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    pk_Payment_log();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl(&dword_213518000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Target device reset Apple Pay manatee view", buf, 2u);
    }

  }
  -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
  v8 = objc_claimAutoreleasedReturnValue();
  v10[0] = MEMORY[0x24BDAC760];
  v10[1] = 3221225472;
  v10[2] = __84__NPKPaymentWebServiceCompanionTargetDevice_resetApplePayManateeViewWithCompletion___block_invoke;
  v10[3] = &unk_24CFE7E90;
  v10[4] = self;
  v11 = v4;
  v9 = v4;
  dispatch_sync(v8, v10);

}

void __84__NPKPaymentWebServiceCompanionTargetDevice_resetApplePayManateeViewWithCompletion___block_invoke(uint64_t a1)
{
  NPKProtoResetApplePayManateeViewRequest *v2;
  id v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  NSObject *v9;
  void *v10;
  void *v11;
  void *v12;
  NSObject *v13;
  _BOOL4 v14;
  const char *v15;
  NSObject *v16;
  os_log_type_t v17;
  NSObject *v18;
  _BOOL4 v19;
  _QWORD v20[4];
  id v21;
  uint8_t buf[4];
  void *v23;
  uint64_t v24;
  _QWORD v25[2];

  v25[1] = *MEMORY[0x24BDAC8D0];
  v2 = objc_alloc_init(NPKProtoResetApplePayManateeViewRequest);
  v3 = objc_alloc(MEMORY[0x24BE4FE40]);
  -[NPKProtoResetApplePayManateeViewRequest data](v2, "data");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = (void *)objc_msgSend(v3, "initWithProtobufData:type:isResponse:", v4, 43, 0);

  v6 = *(void **)(a1 + 32);
  v24 = *MEMORY[0x24BE4FA90];
  v25[0] = MEMORY[0x24BDBD1C8];
  objc_msgSend(MEMORY[0x24BDBCE70], "dictionaryWithObjects:forKeys:count:", v25, &v24, 1);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "_sendProtobuf:responseExpected:extraOptions:", v5, 1, v7);
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  if (v8)
  {
    if (*(_QWORD *)(a1 + 40))
    {
      v9 = MEMORY[0x2199B6780]();
      v20[0] = MEMORY[0x24BDAC760];
      v20[1] = 3221225472;
      v20[2] = __84__NPKPaymentWebServiceCompanionTargetDevice_resetApplePayManateeViewWithCompletion___block_invoke_2;
      v20[3] = &unk_24CFE7B80;
      v21 = *(id *)(a1 + 40);
      v10 = (void *)MEMORY[0x2199B6780](v20);
      v11 = *(void **)(a1 + 32);
      v12 = (void *)MEMORY[0x2199B6780](v9);
      objc_msgSend(v11, "_trackOutstandingRequestWithMessageIdentifier:completionHandler:errorHandler:", v8, v12, v10);

LABEL_11:
      goto LABEL_12;
    }
    pk_Payment_log();
    v18 = objc_claimAutoreleasedReturnValue();
    v19 = os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT);

    if (v19)
    {
      pk_Payment_log();
      v9 = objc_claimAutoreleasedReturnValue();
      if (!os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
        goto LABEL_11;
      *(_DWORD *)buf = 138412290;
      v23 = v8;
      v15 = "Warning: No response expected for message with identifier %@";
      v16 = v9;
      v17 = OS_LOG_TYPE_DEFAULT;
      goto LABEL_10;
    }
  }
  else
  {
    pk_Payment_log();
    v13 = objc_claimAutoreleasedReturnValue();
    v14 = os_log_type_enabled(v13, OS_LOG_TYPE_ERROR);

    if (v14)
    {
      pk_Payment_log();
      v9 = objc_claimAutoreleasedReturnValue();
      if (!os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
        goto LABEL_11;
      *(_DWORD *)buf = 138412290;
      v23 = v5;
      v15 = "Error: No message identifier for protobuf %@";
      v16 = v9;
      v17 = OS_LOG_TYPE_ERROR;
LABEL_10:
      _os_log_impl(&dword_213518000, v16, v17, v15, buf, 0xCu);
      goto LABEL_11;
    }
  }
LABEL_12:

}

uint64_t __84__NPKPaymentWebServiceCompanionTargetDevice_resetApplePayManateeViewWithCompletion___block_invoke_2(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 32);
  if (result)
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(result + 16))(result, 0, a2);
  return result;
}

- (void)cloudStoreStatusResponse:(id)a3
{
  id v4;
  NSObject *v5;
  _BOOL4 v6;
  NSObject *v7;
  void *v8;
  void *v9;
  void *v10;
  NSObject *v11;
  NSObject *v12;
  _BOOL4 v13;
  NSObject *v14;
  uint64_t v15;
  uint8_t v16[8];
  _QWORD block[5];
  id v18;
  id v19;
  __int128 *p_buf;
  uint64_t *v21;
  uint64_t *v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t (*v27)(uint64_t, uint64_t);
  void (*v28)(uint64_t);
  id v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t (*v37)(uint64_t, uint64_t);
  void (*v38)(uint64_t);
  id v39;
  __int128 buf;
  uint64_t v41;
  uint64_t (*v42)(uint64_t, uint64_t);
  void (*v43)(uint64_t);
  id v44;
  uint64_t v45;

  v45 = *MEMORY[0x24BDAC8D0];
  v4 = a3;
  pk_Payment_log();
  v5 = objc_claimAutoreleasedReturnValue();
  v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    pk_Payment_log();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend(v4, "npkDescription");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      LODWORD(buf) = 138412290;
      *(_QWORD *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_213518000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Target device cloud store status: incoming protobuf %@", (uint8_t *)&buf, 0xCu);

    }
  }
  objc_msgSend(v4, "context");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "incomingResponseIdentifier");
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  *(_QWORD *)&buf = 0;
  *((_QWORD *)&buf + 1) = &buf;
  v41 = 0x3032000000;
  v42 = __Block_byref_object_copy__342;
  v43 = __Block_byref_object_dispose__343;
  v44 = 0;
  v34 = 0;
  v35 = &v34;
  v36 = 0x3032000000;
  v37 = __Block_byref_object_copy__23;
  v38 = __Block_byref_object_dispose__23;
  v39 = 0;
  v30 = 0;
  v31 = &v30;
  v32 = 0x2020000000;
  v33 = 0;
  v24 = 0;
  v25 = &v24;
  v26 = 0x3032000000;
  v27 = __Block_byref_object_copy__23;
  v28 = __Block_byref_object_dispose__23;
  v29 = 0;
  if (v10)
  {
    -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
    v11 = objc_claimAutoreleasedReturnValue();
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 3221225472;
    block[2] = __70__NPKPaymentWebServiceCompanionTargetDevice_cloudStoreStatusResponse___block_invoke;
    block[3] = &unk_24CFECFC0;
    block[4] = self;
    v18 = v10;
    v19 = v4;
    p_buf = &buf;
    v21 = &v34;
    v22 = &v30;
    v23 = &v24;
    dispatch_sync(v11, block);

  }
  else
  {
    pk_Payment_log();
    v12 = objc_claimAutoreleasedReturnValue();
    v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      pk_Payment_log();
      v14 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)v16 = 0;
        _os_log_impl(&dword_213518000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v16, 2u);
      }

    }
  }
  v15 = *(_QWORD *)(*((_QWORD *)&buf + 1) + 40);
  if (v15)
    (*(void (**)(uint64_t, uint64_t, _QWORD, uint64_t))(v15 + 16))(v15, v35[5], *((unsigned __int8 *)v31 + 24), v25[5]);
  _Block_object_dispose(&v24, 8);

  _Block_object_dispose(&v30, 8);
  _Block_object_dispose(&v34, 8);

  _Block_object_dispose(&buf, 8);
}

void __70__NPKPaymentWebServiceCompanionTargetDevice_cloudStoreStatusResponse___block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;
  NPKProtoCloudStoreStatusResponse *v4;
  void *v5;
  NPKProtoCloudStoreStatusResponse *v6;
  NSObject *v7;
  _BOOL4 v8;
  NSObject *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  NSObject *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;
  void *v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint8_t buf[16];

  objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "objectForKey:", *(_QWORD *)(a1 + 40));
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  if (v3)
  {
    v4 = [NPKProtoCloudStoreStatusResponse alloc];
    objc_msgSend(*(id *)(a1 + 48), "data");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    v6 = -[NPKProtoCloudStoreStatusResponse initWithData:](v4, "initWithData:", v5);

    if (-[NPKProtoCloudStoreStatusResponse pending](v6, "pending"))
    {
      objc_msgSend(v3, "setOrResetCleanupTimer");
    }
    else
    {
      objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v10, "removeObjectForKey:", *(_QWORD *)(a1 + 40));

      objc_msgSend(v3, "completionHandler");
      v11 = objc_claimAutoreleasedReturnValue();
      v12 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
      v13 = *(void **)(v12 + 40);
      *(_QWORD *)(v12 + 40) = v11;

      -[NPKProtoCloudStoreStatusResponse accountInfoData](v6, "accountInfoData");
      v14 = (void *)objc_claimAutoreleasedReturnValue();
      v15 = objc_opt_class();
      NPKSecureUnarchiveObject(v14, v15);
      v16 = objc_claimAutoreleasedReturnValue();
      v17 = *(_QWORD *)(*(_QWORD *)(a1 + 64) + 8);
      v18 = *(void **)(v17 + 40);
      *(_QWORD *)(v17 + 40) = v16;

      *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 72) + 8) + 24) = -[NPKProtoCloudStoreStatusResponse cloudStoreIsSetup](v6, "cloudStoreIsSetup");
      -[NPKProtoCloudStoreStatusResponse errorData](v6, "errorData");
      v19 = (void *)objc_claimAutoreleasedReturnValue();
      v20 = (void *)MEMORY[0x24BDBCF20];
      v21 = objc_opt_class();
      objc_msgSend(v20, "setWithObjects:", v21, objc_opt_class(), 0);
      v22 = (void *)objc_claimAutoreleasedReturnValue();
      NPKSecureUnarchiveObjectOfClasses(v19, v22);
      v23 = objc_claimAutoreleasedReturnValue();
      v24 = *(_QWORD *)(*(_QWORD *)(a1 + 80) + 8);
      v25 = *(void **)(v24 + 40);
      *(_QWORD *)(v24 + 40) = v23;

    }
  }
  else
  {
    pk_Payment_log();
    v7 = objc_claimAutoreleasedReturnValue();
    v8 = os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT);

    if (v8)
    {
      pk_Payment_log();
      v9 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)buf = 0;
        _os_log_impl(&dword_213518000, v9, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", buf, 2u);
      }

    }
  }

}

- (void)cloudStoreStatusWithCompletion:(id)a3
{
  id v4;
  NSObject *v5;
  _BOOL4 v6;
  NSObject *v7;
  NSObject *v8;
  id v9;
  _QWORD v10[5];
  id v11;
  uint8_t buf[16];

  v4 = a3;
  pk_Payment_log();
  v5 = objc_claimAutoreleasedReturnValue();
  v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    pk_Payment_log();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl(&dword_213518000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Target device cloud store status", buf, 2u);
    }

  }
  -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
  v8 = objc_claimAutoreleasedReturnValue();
  v10[0] = MEMORY[0x24BDAC760];
  v10[1] = 3221225472;
  v10[2] = __76__NPKPaymentWebServiceCompanionTargetDevice_cloudStoreStatusWithCompletion___block_invoke;
  v10[3] = &unk_24CFE7E90;
  v10[4] = self;
  v11 = v4;
  v9 = v4;
  dispatch_sync(v8, v10);

}

void __76__NPKPaymentWebServiceCompanionTargetDevice_cloudStoreStatusWithCompletion___block_invoke(uint64_t a1)
{
  NPKProtoCloudStoreStatusRequest *v2;
  id v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  NSObject *v9;
  void *v10;
  void *v11;
  void *v12;
  NSObject *v13;
  _BOOL4 v14;
  const char *v15;
  NSObject *v16;
  os_log_type_t v17;
  NSObject *v18;
  _BOOL4 v19;
  _QWORD v20[4];
  id v21;
  uint8_t buf[4];
  void *v23;
  uint64_t v24;
  _QWORD v25[2];

  v25[1] = *MEMORY[0x24BDAC8D0];
  v2 = objc_alloc_init(NPKProtoCloudStoreStatusRequest);
  v3 = objc_alloc(MEMORY[0x24BE4FE40]);
  -[NPKProtoCloudStoreStatusRequest data](v2, "data");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = (void *)objc_msgSend(v3, "initWithProtobufData:type:isResponse:", v4, 39, 0);

  v6 = *(void **)(a1 + 32);
  v24 = *MEMORY[0x24BE4FA90];
  v25[0] = MEMORY[0x24BDBD1C8];
  objc_msgSend(MEMORY[0x24BDBCE70], "dictionaryWithObjects:forKeys:count:", v25, &v24, 1);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "_sendProtobuf:responseExpected:extraOptions:", v5, 1, v7);
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  if (v8)
  {
    if (*(_QWORD *)(a1 + 40))
    {
      v9 = MEMORY[0x2199B6780]();
      v20[0] = MEMORY[0x24BDAC760];
      v20[1] = 3221225472;
      v20[2] = __76__NPKPaymentWebServiceCompanionTargetDevice_cloudStoreStatusWithCompletion___block_invoke_2;
      v20[3] = &unk_24CFE7B80;
      v21 = *(id *)(a1 + 40);
      v10 = (void *)MEMORY[0x2199B6780](v20);
      v11 = *(void **)(a1 + 32);
      v12 = (void *)MEMORY[0x2199B6780](v9);
      objc_msgSend(v11, "_trackOutstandingRequestWithMessageIdentifier:completionHandler:errorHandler:", v8, v12, v10);

LABEL_11:
      goto LABEL_12;
    }
    pk_Payment_log();
    v18 = objc_claimAutoreleasedReturnValue();
    v19 = os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT);

    if (v19)
    {
      pk_Payment_log();
      v9 = objc_claimAutoreleasedReturnValue();
      if (!os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
        goto LABEL_11;
      *(_DWORD *)buf = 138412290;
      v23 = v8;
      v15 = "Warning: No response expected for message with identifier %@";
      v16 = v9;
      v17 = OS_LOG_TYPE_DEFAULT;
      goto LABEL_10;
    }
  }
  else
  {
    pk_Payment_log();
    v13 = objc_claimAutoreleasedReturnValue();
    v14 = os_log_type_enabled(v13, OS_LOG_TYPE_ERROR);

    if (v14)
    {
      pk_Payment_log();
      v9 = objc_claimAutoreleasedReturnValue();
      if (!os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
        goto LABEL_11;
      *(_DWORD *)buf = 138412290;
      v23 = v5;
      v15 = "Error: No message identifier for protobuf %@";
      v16 = v9;
      v17 = OS_LOG_TYPE_ERROR;
LABEL_10:
      _os_log_impl(&dword_213518000, v16, v17, v15, buf, 0xCu);
      goto LABEL_11;
    }
  }
LABEL_12:

}

uint64_t __76__NPKPaymentWebServiceCompanionTargetDevice_cloudStoreStatusWithCompletion___block_invoke_2(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 32);
  if (result)
    return (*(uint64_t (**)(uint64_t, _QWORD, _QWORD, uint64_t))(result + 16))(result, 0, 0, a2);
  return result;
}

- (void)downloadAllPaymentPasses:(id)a3
{
  id v4;
  NSObject *v5;
  _BOOL4 v6;
  NSObject *v7;
  void *v8;
  void *v9;
  int v10;
  void *v11;
  uint64_t v12;

  v12 = *MEMORY[0x24BDAC8D0];
  v4 = a3;
  pk_Payment_log();
  v5 = objc_claimAutoreleasedReturnValue();
  v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    pk_Payment_log();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend(v4, "npkDescription");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      v10 = 138412290;
      v11 = v8;
      _os_log_impl(&dword_213518000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Target device download all payment passes: incoming protobuf %@", (uint8_t *)&v10, 0xCu);

    }
  }
  -[NPKPaymentWebServiceCompanionTargetDevice delegate](self, "delegate");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "handleDownloadAllPaymentPasses");

}

- (void)checkCompanionPeerPaymentRegistrationState:(id)a3
{
  id v4;
  NSObject *v5;
  _BOOL4 v6;
  NSObject *v7;
  void *v8;
  void *v9;
  int v10;
  void *v11;
  uint64_t v12;

  v12 = *MEMORY[0x24BDAC8D0];
  v4 = a3;
  pk_Payment_log();
  v5 = objc_claimAutoreleasedReturnValue();
  v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    pk_Payment_log();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend(v4, "npkDescription");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      v10 = 138412290;
      v11 = v8;
      _os_log_impl(&dword_213518000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Target device check companion peer payment registration state: incoming protobuf %@", (uint8_t *)&v10, 0xCu);

    }
  }
  -[NPKPaymentWebServiceCompanionTargetDevice delegate](self, "delegate");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "checkCompanionPeerPaymentRegistrationState");

}

- (BOOL)felicaSecureElementIsAvailable
{
  void *v2;
  void *v3;
  char v4;

  NPKPairedOrPairingDevice();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = (void *)objc_msgSend(objc_alloc(MEMORY[0x24BDD1880]), "initWithUUIDString:", CFSTR("6C4614A2-1ECC-4405-9FEE-B5F0A5666961"));
  v4 = objc_msgSend(v2, "supportsCapability:", v3);

  return v4;
}

- (BOOL)supportsExpressForAutomaticSelectionTechnologyType:(int64_t)a3
{
  return NPKPairedOrPairingDeviceSupportsExpressForAutomaticSelectionTechnologyType(a3);
}

- (BOOL)supportsCredentialType:(int64_t)a3
{
  return NPKPairedOrPairingDeviceSupportsCredentialType(a3);
}

- (id)upgradeRequestForPass:(id)a3
{
  id v4;
  NSObject *v5;
  _BOOL4 v6;
  NSObject *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  NSObject *v11;
  _BOOL4 v12;
  NSObject *v13;
  void *v14;
  void *v15;
  NSObject *v16;
  void *v17;
  int v19;
  void *v20;
  __int16 v21;
  void *v22;
  uint64_t v23;

  v23 = *MEMORY[0x24BDAC8D0];
  v4 = a3;
  pk_Payment_log();
  v5 = objc_claimAutoreleasedReturnValue();
  v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    pk_Payment_log();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend(v4, "uniqueID");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      v19 = 138412290;
      v20 = v8;
      _os_log_impl(&dword_213518000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Target device: handling upgrade request for pass %@", (uint8_t *)&v19, 0xCu);

    }
  }
  -[NPKPaymentWebServiceCompanionTargetDevice _eligibleExpressUpgradeRequestsForPass:](self, "_eligibleExpressUpgradeRequestsForPass:", v4);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v10 = objc_msgSend(v9, "count");
  pk_Payment_log();
  v11 = objc_claimAutoreleasedReturnValue();
  v12 = os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT);

  if (v10)
  {
    if (v12)
    {
      pk_Payment_log();
      v13 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
      {
        objc_msgSend(v4, "uniqueID");
        v14 = (void *)objc_claimAutoreleasedReturnValue();
        v19 = 138412546;
        v20 = v9;
        v21 = 2112;
        v22 = v14;
        _os_log_impl(&dword_213518000, v13, OS_LOG_TYPE_DEFAULT, "Notice: Target device: found eligible requests (%@) for pass %@. Returning first object.", (uint8_t *)&v19, 0x16u);

      }
    }
    objc_msgSend(v9, "firstObject");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    if (v12)
    {
      pk_Payment_log();
      v16 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
      {
        objc_msgSend(v4, "uniqueID");
        v17 = (void *)objc_claimAutoreleasedReturnValue();
        v19 = 138412290;
        v20 = v17;
        _os_log_impl(&dword_213518000, v16, OS_LOG_TYPE_DEFAULT, "Notice: Target device: no eligible upgrade requests found for pass %@", (uint8_t *)&v19, 0xCu);

      }
    }
    v15 = 0;
  }

  return v15;
}

- (void)paymentWebService:(id)a3 handlePotentialExpressPass:(id)a4 withCompletionHandler:(id)a5
{
  id v8;
  id v9;
  id v10;
  NSObject *v11;
  _BOOL4 v12;
  NSObject *v13;
  void *v14;
  NSObject *v15;
  void *v16;
  int v17;
  void *v18;
  uint64_t v19;

  v19 = *MEMORY[0x24BDAC8D0];
  v8 = a3;
  v9 = a4;
  v10 = a5;
  pk_Payment_log();
  v11 = objc_claimAutoreleasedReturnValue();
  v12 = os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT);

  if (v10)
  {
    if (v12)
    {
      pk_Payment_log();
      v13 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
      {
        objc_msgSend(v9, "uniqueID");
        v14 = (void *)objc_claimAutoreleasedReturnValue();
        v17 = 138412290;
        v18 = v14;
        _os_log_impl(&dword_213518000, v13, OS_LOG_TYPE_DEFAULT, "Notice: Target device: handling potential express pass %@", (uint8_t *)&v17, 0xCu);

      }
    }
    -[NPKPaymentWebServiceCompanionTargetDevice _expressPassConfigurationForPaymentPass:](self, "_expressPassConfigurationForPaymentPass:", v9);
    v15 = objc_claimAutoreleasedReturnValue();
    if (-[NPKPaymentWebServiceCompanionTargetDevice deviceSupportMultipleExpressPasses](self, "deviceSupportMultipleExpressPasses"))
    {
      -[NPKPaymentWebServiceCompanionTargetDevice _multipleExpressTransitPassPaymentWebService:handlePotentialExpressPassConfiguration:pass:withCompletionHandler:](self, "_multipleExpressTransitPassPaymentWebService:handlePotentialExpressPassConfiguration:pass:withCompletionHandler:", v8, v15, v9, v10);
    }
    else
    {
      -[NPKPaymentWebServiceCompanionTargetDevice _singleExpressTransitPassPaymentWebService:handlePotentialExpressPassConfiguration:withCompletionHandler:](self, "_singleExpressTransitPassPaymentWebService:handlePotentialExpressPassConfiguration:withCompletionHandler:", v8, v15, v10);
    }
LABEL_12:

    goto LABEL_13;
  }
  if (v12)
  {
    pk_Payment_log();
    v15 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend(v9, "uniqueID");
      v16 = (void *)objc_claimAutoreleasedReturnValue();
      v17 = 138412290;
      v18 = v16;
      _os_log_impl(&dword_213518000, v15, OS_LOG_TYPE_DEFAULT, "Notice: Target device: missing complition block will not handling potential express pass %@", (uint8_t *)&v17, 0xCu);

    }
    goto LABEL_12;
  }
LABEL_13:

}

- (void)_multipleExpressTransitPassPaymentWebService:(id)a3 handlePotentialExpressPassConfiguration:(id)a4 pass:(id)a5 withCompletionHandler:(id)a6
{
  id v10;
  id v11;
  id v12;
  id v13;
  uint64_t v14;
  id v15;
  id v16;
  void *v17;
  void *v18;
  void *v19;
  int v20;
  _QWORD v21[4];
  id v22;
  id v23;
  id v24;
  _QWORD v25[4];
  id v26;
  id v27;
  id v28;
  id location;

  v10 = a3;
  v11 = a4;
  v12 = a5;
  v13 = a6;
  objc_initWeak(&location, self);
  v14 = MEMORY[0x24BDAC760];
  v25[0] = MEMORY[0x24BDAC760];
  v25[1] = 3221225472;
  v25[2] = __157__NPKPaymentWebServiceCompanionTargetDevice__multipleExpressTransitPassPaymentWebService_handlePotentialExpressPassConfiguration_pass_withCompletionHandler___block_invoke;
  v25[3] = &unk_24CFE8538;
  objc_copyWeak(&v28, &location);
  v15 = v11;
  v26 = v15;
  v16 = v13;
  v27 = v16;
  v17 = (void *)MEMORY[0x2199B6780](v25);
  v18 = v17;
  if (v15)
  {
    v21[0] = v14;
    v21[1] = 3221225472;
    v21[2] = __157__NPKPaymentWebServiceCompanionTargetDevice__multipleExpressTransitPassPaymentWebService_handlePotentialExpressPassConfiguration_pass_withCompletionHandler___block_invoke_577;
    v21[3] = &unk_24CFED660;
    v23 = v17;
    v22 = v12;
    v24 = v16;
    -[NPKPaymentWebServiceCompanionTargetDevice _checkConflictsForPass:withConfiguration:webService:hasDisqualifyingConflicts:](self, "_checkConflictsForPass:withConfiguration:webService:hasDisqualifyingConflicts:", v22, v15, v10, v21);

  }
  else
  {
    objc_msgSend(v12, "devicePrimaryContactlessPaymentApplication");
    v19 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v19, "paymentNetworkIdentifier");
    v20 = PKIsOpenLoopCredentialType();

    if (v20)
      -[NPKPaymentWebServiceCompanionTargetDevice _handleOpenLoopPassUpgradeWithPass:webService:completion:](self, "_handleOpenLoopPassUpgradeWithPass:webService:completion:", v12, v10, v16);
  }

  objc_destroyWeak(&v28);
  objc_destroyWeak(&location);

}

void __157__NPKPaymentWebServiceCompanionTargetDevice__multipleExpressTransitPassPaymentWebService_handlePotentialExpressPassConfiguration_pass_withCompletionHandler___block_invoke(uint64_t a1)
{
  id *v2;
  id WeakRetained;
  uint64_t v4;
  _QWORD v5[4];
  id v6;
  id v7;

  v2 = (id *)(a1 + 48);
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  if (WeakRetained)
  {
    v4 = *(_QWORD *)(a1 + 32);
    v5[0] = MEMORY[0x24BDAC760];
    v5[1] = 3221225472;
    v5[2] = __157__NPKPaymentWebServiceCompanionTargetDevice__multipleExpressTransitPassPaymentWebService_handlePotentialExpressPassConfiguration_pass_withCompletionHandler___block_invoke_2;
    v5[3] = &unk_24CFED638;
    objc_copyWeak(&v7, v2);
    v6 = *(id *)(a1 + 40);
    objc_msgSend(WeakRetained, "setExpressWithPassConfiguration:requestAuthorization:completion:", v4, 0, v5);

    objc_destroyWeak(&v7);
  }

}

void __157__NPKPaymentWebServiceCompanionTargetDevice__multipleExpressTransitPassPaymentWebService_handlePotentialExpressPassConfiguration_pass_withCompletionHandler___block_invoke_2(uint64_t a1, uint64_t a2, void *a3)
{
  id v5;
  id WeakRetained;
  NSObject *v7;
  _BOOL4 v8;
  NSObject *v9;
  void *v10;
  int v11;
  uint64_t v12;
  __int16 v13;
  id v14;
  uint64_t v15;

  v15 = *MEMORY[0x24BDAC8D0];
  v5 = a3;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  pk_General_log();
  v7 = objc_claimAutoreleasedReturnValue();
  v8 = os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT);

  if (v8)
  {
    pk_General_log();
    v9 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      v11 = 134218242;
      v12 = a2;
      v13 = 2112;
      v14 = v5;
      _os_log_impl(&dword_213518000, v9, OS_LOG_TYPE_DEFAULT, "Notice: did finish handle potential express pass with result %lu, current express passes information: %@", (uint8_t *)&v11, 0x16u);
    }

  }
  if (a2 == 1)
  {
    objc_msgSend(WeakRetained, "_expressModesFromExpressPassConfigurations:", v5);
    v10 = (void *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    v10 = 0;
  }
  (*(void (**)(void))(*(_QWORD *)(a1 + 32) + 16))();

}

uint64_t __157__NPKPaymentWebServiceCompanionTargetDevice__multipleExpressTransitPassPaymentWebService_handlePotentialExpressPassConfiguration_pass_withCompletionHandler___block_invoke_577(uint64_t a1, char a2)
{
  NSObject *v3;
  _BOOL4 v4;
  NSObject *v5;
  void *v6;
  int v8;
  void *v9;
  uint64_t v10;

  v10 = *MEMORY[0x24BDAC8D0];
  if ((a2 & 1) == 0)
    return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
  pk_General_log();
  v3 = objc_claimAutoreleasedReturnValue();
  v4 = os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT);

  if (v4)
  {
    pk_General_log();
    v5 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend(*(id *)(a1 + 32), "uniqueID");
      v6 = (void *)objc_claimAutoreleasedReturnValue();
      v8 = 138412290;
      v9 = v6;
      _os_log_impl(&dword_213518000, v5, OS_LOG_TYPE_DEFAULT, "Notice: Found conflicts for pass %@", (uint8_t *)&v8, 0xCu);

    }
  }
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 48) + 16))();
}

- (void)_singleExpressTransitPassPaymentWebService:(id)a3 handlePotentialExpressPassConfiguration:(id)a4 withCompletionHandler:(id)a5
{
  id v8;
  id v9;
  void (**v10)(id, _QWORD);
  NSObject *v11;
  _BOOL4 v12;
  NSObject *v13;
  void *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  NSObject *v19;
  _BOOL4 v20;
  NSObject *v21;
  uint64_t v22;
  void *v23;
  void *v24;
  void *v25;
  id v26;
  id v27;
  id v28;
  id v29;
  void *v30;
  uint64_t v31;
  NSObject *v32;
  _BOOL4 v33;
  NSObject *v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t i;
  void *v41;
  NSObject *v42;
  _BOOL4 v43;
  NSObject *v44;
  void *v45;
  NSObject *v46;
  _BOOL4 v47;
  NSObject *v48;
  void *v49;
  NSObject *v50;
  _BOOL4 v51;
  NSObject *v52;
  _BOOL4 v53;
  NSObject *v54;
  void *v55;
  void *v56;
  id v57;
  void (**v58)(id, _QWORD);
  _QWORD v59[5];
  void (**v60)(id, _QWORD);
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  _QWORD v65[4];
  id v66;
  id v67;
  uint8_t v68[128];
  uint8_t buf[4];
  uint64_t v70;
  uint64_t v71;

  v71 = *MEMORY[0x24BDAC8D0];
  v8 = a3;
  v9 = a4;
  v10 = (void (**)(id, _QWORD))a5;
  pk_Payment_log();
  v11 = objc_claimAutoreleasedReturnValue();
  v12 = os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT);

  if (v12)
  {
    pk_Payment_log();
    v13 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend(v9, "passUniqueIdentifier");
      v14 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138412290;
      v70 = (uint64_t)v14;
      _os_log_impl(&dword_213518000, v13, OS_LOG_TYPE_DEFAULT, "Notice: Target device: legacy handling potential express pass %@", buf, 0xCu);

    }
  }
  if (!v9)
  {
    pk_Payment_log();
    v50 = objc_claimAutoreleasedReturnValue();
    v51 = os_log_type_enabled(v50, OS_LOG_TYPE_DEFAULT);

    if (!v51)
    {
LABEL_36:
      v10[2](v10, 0);
      goto LABEL_43;
    }
    pk_Payment_log();
    v48 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v48, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl(&dword_213518000, v48, OS_LOG_TYPE_DEFAULT, "Notice: _singleExpressTransitPassPaymentWebService called with nil configuration", buf, 2u);
    }
LABEL_35:

    goto LABEL_36;
  }
  objc_msgSend(v9, "passInformation");
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  v16 = objc_msgSend(v15, "cardType");

  v17 = MEMORY[0x24BDAC760];
  if (v16 == 2)
  {
    v58 = v10;
    NPKPairedDeviceExpressPassConfigurationWithCardType(2);
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    if (objc_msgSend(v18, "count"))
    {
      pk_General_log();
      v19 = objc_claimAutoreleasedReturnValue();
      v20 = os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT);

      if (v20)
      {
        pk_General_log();
        v21 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v21, OS_LOG_TYPE_DEFAULT))
        {
          v22 = objc_msgSend(v18, "count");
          *(_DWORD *)buf = 134217984;
          v70 = v22;
          _os_log_impl(&dword_213518000, v21, OS_LOG_TYPE_DEFAULT, "Notice: Current existing express pass configuration count:%lu", buf, 0xCu);
        }

      }
      objc_msgSend(v9, "passUniqueIdentifier");
      v23 = (void *)objc_claimAutoreleasedReturnValue();
      -[NPKPaymentWebServiceCompanionTargetDevice paymentWebService:passesOfType:](self, "paymentWebService:passesOfType:", v8, 1);
      v24 = (void *)objc_claimAutoreleasedReturnValue();
      v25 = (void *)MEMORY[0x24BDD1758];
      v65[0] = v17;
      v65[1] = 3221225472;
      v65[2] = __150__NPKPaymentWebServiceCompanionTargetDevice__singleExpressTransitPassPaymentWebService_handlePotentialExpressPassConfiguration_withCompletionHandler___block_invoke;
      v65[3] = &unk_24CFED688;
      v66 = v23;
      v67 = v24;
      v26 = v9;
      v27 = v8;
      v28 = v24;
      v29 = v23;
      objc_msgSend(v25, "predicateWithBlock:", v65);
      v30 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v18, "filteredSetUsingPredicate:", v30);
      v31 = objc_claimAutoreleasedReturnValue();

      v8 = v27;
      v9 = v26;

      v18 = (void *)v31;
      v17 = MEMORY[0x24BDAC760];
    }
    pk_General_log();
    v32 = objc_claimAutoreleasedReturnValue();
    v33 = os_log_type_enabled(v32, OS_LOG_TYPE_DEFAULT);

    if (v33)
    {
      pk_General_log();
      v34 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v34, OS_LOG_TYPE_DEFAULT))
      {
        v35 = objc_msgSend(v18, "count");
        *(_DWORD *)buf = 134217984;
        v70 = v35;
        _os_log_impl(&dword_213518000, v34, OS_LOG_TYPE_DEFAULT, "Notice: filtered existing express pass information count:%lu", buf, 0xCu);
      }

    }
    if (objc_msgSend(v18, "count"))
    {
      v56 = v9;
      v57 = v8;
      v63 = 0u;
      v64 = 0u;
      v61 = 0u;
      v62 = 0u;
      v36 = v18;
      v37 = objc_msgSend(v36, "countByEnumeratingWithState:objects:count:", &v61, v68, 16);
      if (v37)
      {
        v38 = v37;
        v39 = *(_QWORD *)v62;
        do
        {
          for (i = 0; i != v38; ++i)
          {
            if (*(_QWORD *)v62 != v39)
              objc_enumerationMutation(v36);
            v41 = *(void **)(*((_QWORD *)&v61 + 1) + 8 * i);
            pk_Payment_log();
            v42 = objc_claimAutoreleasedReturnValue();
            v43 = os_log_type_enabled(v42, OS_LOG_TYPE_DEFAULT);

            if (v43)
            {
              pk_Payment_log();
              v44 = objc_claimAutoreleasedReturnValue();
              if (os_log_type_enabled(v44, OS_LOG_TYPE_DEFAULT))
              {
                objc_msgSend(v41, "passUniqueIdentifier");
                v45 = (void *)objc_claimAutoreleasedReturnValue();
                *(_DWORD *)buf = 138412290;
                v70 = (uint64_t)v45;
                _os_log_impl(&dword_213518000, v44, OS_LOG_TYPE_DEFAULT, "Notice: Not setting pass as express due to existing express pass with unique ID %@", buf, 0xCu);

              }
            }
          }
          v38 = objc_msgSend(v36, "countByEnumeratingWithState:objects:count:", &v61, v68, 16);
        }
        while (v38);
      }

      pk_Payment_log();
      v46 = objc_claimAutoreleasedReturnValue();
      v47 = os_log_type_enabled(v46, OS_LOG_TYPE_DEFAULT);

      v9 = v56;
      v8 = v57;
      v10 = v58;
      if (!v47)
        goto LABEL_36;
      pk_Payment_log();
      v48 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v48, OS_LOG_TYPE_DEFAULT))
      {
        objc_msgSend(v56, "passUniqueIdentifier");
        v49 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138412290;
        v70 = (uint64_t)v49;
        _os_log_impl(&dword_213518000, v48, OS_LOG_TYPE_DEFAULT, "Notice: Could not handle protential express pass with unique ID %@.", buf, 0xCu);

      }
      goto LABEL_35;
    }

    v10 = v58;
  }
  pk_General_log();
  v52 = objc_claimAutoreleasedReturnValue();
  v53 = os_log_type_enabled(v52, OS_LOG_TYPE_DEFAULT);

  if (v53)
  {
    pk_General_log();
    v54 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v54, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend(v9, "passUniqueIdentifier");
      v55 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138412290;
      v70 = (uint64_t)v55;
      _os_log_impl(&dword_213518000, v54, OS_LOG_TYPE_DEFAULT, "Notice: Will handle potential express pass with unique ID %@", buf, 0xCu);

    }
  }
  v59[0] = v17;
  v59[1] = 3221225472;
  v59[2] = __150__NPKPaymentWebServiceCompanionTargetDevice__singleExpressTransitPassPaymentWebService_handlePotentialExpressPassConfiguration_withCompletionHandler___block_invoke_582;
  v59[3] = &unk_24CFED6B0;
  v59[4] = self;
  v60 = v10;
  -[NPKPaymentWebServiceCompanionTargetDevice setExpressWithPassConfiguration:requestAuthorization:completion:](self, "setExpressWithPassConfiguration:requestAuthorization:completion:", v9, 0, v59);

LABEL_43:
}

BOOL __150__NPKPaymentWebServiceCompanionTargetDevice__singleExpressTransitPassPaymentWebService_handlePotentialExpressPassConfiguration_withCompletionHandler___block_invoke(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  void *v7;
  NSObject *v8;
  _BOOL4 v9;
  NSObject *v10;
  void *v11;
  NSObject *v12;
  NSObject *v13;
  _BOOL4 v14;
  NSObject *v15;
  void *v16;
  _BOOL8 v17;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t, void *, uint64_t, _BYTE *);
  void *v22;
  NSObject *v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  char v28;
  uint8_t buf[4];
  void *v30;
  uint64_t v31;

  v31 = *MEMORY[0x24BDAC8D0];
  v5 = a2;
  v6 = a3;
  objc_msgSend(v5, "passUniqueIdentifier");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v25 = 0;
  v26 = &v25;
  v27 = 0x2020000000;
  v28 = 0;
  if (!objc_msgSend(*(id *)(a1 + 32), "isEqualToString:", v7))
  {
    v11 = *(void **)(a1 + 40);
    v19 = MEMORY[0x24BDAC760];
    v20 = 3221225472;
    v21 = __150__NPKPaymentWebServiceCompanionTargetDevice__singleExpressTransitPassPaymentWebService_handlePotentialExpressPassConfiguration_withCompletionHandler___block_invoke_579;
    v22 = &unk_24CFE7C48;
    v12 = v5;
    v23 = v12;
    v24 = &v25;
    objc_msgSend(v11, "enumerateObjectsUsingBlock:", &v19);
    if (!*((_BYTE *)v26 + 24))
    {
      pk_Payment_log();
      v13 = objc_claimAutoreleasedReturnValue();
      v14 = os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT);

      if (v14)
      {
        pk_Payment_log();
        v15 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
        {
          -[NSObject passUniqueIdentifier](v12, "passUniqueIdentifier", v19, v20, v21, v22);
          v16 = (void *)objc_claimAutoreleasedReturnValue();
          *(_DWORD *)buf = 138412290;
          v30 = v16;
          _os_log_impl(&dword_213518000, v15, OS_LOG_TYPE_DEFAULT, "Notice: Inconsistency found. Pass with uniqueID: %@ not found in the DB, we will ignore it from the current express pass configuration", buf, 0xCu);

        }
      }
    }
    v10 = v23;
    goto LABEL_11;
  }
  pk_Payment_log();
  v8 = objc_claimAutoreleasedReturnValue();
  v9 = os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT);

  if (v9)
  {
    pk_Payment_log();
    v10 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138412290;
      v30 = v7;
      _os_log_impl(&dword_213518000, v10, OS_LOG_TYPE_DEFAULT, "Notice: Inconsistency found. express pass information with Pass uniqueID: %@ match potential express pass uniqueID, we will ignore it from the current express pass information", buf, 0xCu);
    }
LABEL_11:

  }
  v17 = *((_BYTE *)v26 + 24) != 0;
  _Block_object_dispose(&v25, 8);

  return v17;
}

void __150__NPKPaymentWebServiceCompanionTargetDevice__singleExpressTransitPassPaymentWebService_handlePotentialExpressPassConfiguration_withCompletionHandler___block_invoke_579(uint64_t a1, void *a2, uint64_t a3, _BYTE *a4)
{
  void *v6;
  void *v7;
  int v8;

  objc_msgSend(a2, "uniqueID");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(*(id *)(a1 + 32), "passUniqueIdentifier");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = objc_msgSend(v6, "isEqualToString:", v7);

  if (v8)
  {
    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = 1;
    *a4 = 1;
  }
}

void __150__NPKPaymentWebServiceCompanionTargetDevice__singleExpressTransitPassPaymentWebService_handlePotentialExpressPassConfiguration_withCompletionHandler___block_invoke_582(uint64_t a1, uint64_t a2, void *a3)
{
  id v5;
  NSObject *v6;
  _BOOL4 v7;
  NSObject *v8;
  uint64_t v9;
  void *v10;
  int v11;
  uint64_t v12;
  __int16 v13;
  id v14;
  uint64_t v15;

  v15 = *MEMORY[0x24BDAC8D0];
  v5 = a3;
  pk_General_log();
  v6 = objc_claimAutoreleasedReturnValue();
  v7 = os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT);

  if (v7)
  {
    pk_General_log();
    v8 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      v11 = 134218242;
      v12 = a2;
      v13 = 2112;
      v14 = v5;
      _os_log_impl(&dword_213518000, v8, OS_LOG_TYPE_DEFAULT, "Notice: did finish handle potential express pass with result %lu, current express passes configuration: %@", (uint8_t *)&v11, 0x16u);
    }

  }
  v9 = *(_QWORD *)(a1 + 40);
  if (v9)
  {
    if (a2 == 1)
    {
      objc_msgSend(*(id *)(a1 + 32), "_expressModesFromExpressPassConfigurations:", v5);
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      v9 = *(_QWORD *)(a1 + 40);
    }
    else
    {
      v10 = 0;
    }
    (*(void (**)(uint64_t, void *))(v9 + 16))(v9, v10);

  }
}

- (void)paymentWebService:(id)a3 canHandlePotentialExpressPass:(id)a4 withCompletionHandler:(id)a5
{
  id v8;
  id v9;
  void (**v10)(id, _QWORD);
  NSObject *v11;
  _BOOL4 v12;
  NSObject *v13;
  void *v14;
  NSObject *v15;
  _BOOL4 v16;
  NSObject *v17;
  NSObject *v18;
  NSObject *v19;
  _BOOL4 v20;
  void *v21;
  NSObject *v22;
  _BOOL4 v23;
  NSObject *v24;
  _QWORD v25[4];
  NSObject *v26;
  void (**v27)(id, _QWORD);
  uint8_t buf[4];
  id v29;
  uint64_t v30;

  v30 = *MEMORY[0x24BDAC8D0];
  v8 = a3;
  v9 = a4;
  v10 = (void (**)(id, _QWORD))a5;
  pk_Payment_log();
  v11 = objc_claimAutoreleasedReturnValue();
  v12 = os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT);

  if (v12)
  {
    pk_Payment_log();
    v13 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend(v9, "uniqueID");
      v14 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138412290;
      v29 = v14;
      _os_log_impl(&dword_213518000, v13, OS_LOG_TYPE_DEFAULT, "Notice: Target device: can handle potential express pass %@", buf, 0xCu);

    }
  }
  if (v10)
  {
    if (!-[NPKPaymentWebServiceCompanionTargetDevice deviceSupportMultipleExpressPasses](self, "deviceSupportMultipleExpressPasses"))
    {
      pk_Payment_log();
      v15 = objc_claimAutoreleasedReturnValue();
      v16 = os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT);

      if (v16)
      {
        pk_Payment_log();
        v17 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)buf = 0;
          _os_log_impl(&dword_213518000, v17, OS_LOG_TYPE_DEFAULT, "Notice: Target device doesn't support Multiple express passes, we will not handle this call.", buf, 2u);
        }

      }
      v10[2](v10, 0);
    }
    -[NPKPaymentWebServiceCompanionTargetDevice _expressPassConfigurationForPaymentPass:](self, "_expressPassConfigurationForPaymentPass:", v9);
    v18 = objc_claimAutoreleasedReturnValue();
    if (v18)
    {
      v25[0] = MEMORY[0x24BDAC760];
      v25[1] = 3221225472;
      v25[2] = __115__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_canHandlePotentialExpressPass_withCompletionHandler___block_invoke;
      v25[3] = &unk_24CFE7B58;
      v27 = v10;
      v18 = v18;
      v26 = v18;
      -[NPKPaymentWebServiceCompanionTargetDevice _checkConflictsForPass:withConfiguration:webService:hasDisqualifyingConflicts:](self, "_checkConflictsForPass:withConfiguration:webService:hasDisqualifyingConflicts:", v9, v18, v8, v25);

    }
    else
    {
      pk_Payment_log();
      v22 = objc_claimAutoreleasedReturnValue();
      v23 = os_log_type_enabled(v22, OS_LOG_TYPE_DEFAULT);

      if (v23)
      {
        pk_Payment_log();
        v24 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v24, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)buf = 138412290;
          v29 = v9;
          _os_log_impl(&dword_213518000, v24, OS_LOG_TYPE_DEFAULT, "Notice: Could not create configuration for pass %@", buf, 0xCu);
        }

      }
      v10[2](v10, 0);
    }
LABEL_22:

    goto LABEL_23;
  }
  pk_Payment_log();
  v19 = objc_claimAutoreleasedReturnValue();
  v20 = os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT);

  if (v20)
  {
    pk_Payment_log();
    v18 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend(v9, "uniqueID");
      v21 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138412290;
      v29 = v21;
      _os_log_impl(&dword_213518000, v18, OS_LOG_TYPE_DEFAULT, "Notice: Target device: missing completion block will not check if can handle potential express pass %@", buf, 0xCu);

    }
    goto LABEL_22;
  }
LABEL_23:

}

void __115__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_canHandlePotentialExpressPass_withCompletionHandler___block_invoke(uint64_t a1, int a2)
{
  uint64_t v2;
  id v3;

  v2 = *(_QWORD *)(a1 + 40);
  if (a2)
  {
    (*(void (**)(_QWORD, _QWORD))(v2 + 16))(*(_QWORD *)(a1 + 40), 0);
  }
  else
  {
    objc_msgSend(*(id *)(a1 + 32), "passInformation");
    v3 = (id)objc_claimAutoreleasedReturnValue();
    (*(void (**)(uint64_t, id))(v2 + 16))(v2, v3);

  }
}

- (id)_dummyExpressPassInformationForPass:(id)a3 fromUpgradeRequest:(id)a4
{
  id v6;
  id v7;
  id v8;
  void *v9;
  NSObject *v10;
  _BOOL4 v11;
  NSObject *v12;
  void *v13;
  _QWORD v15[5];
  uint8_t buf[4];
  void *v17;
  uint64_t v18;

  v18 = *MEMORY[0x24BDAC8D0];
  v6 = a3;
  v7 = a4;
  if (!v7)
  {
LABEL_8:
    v9 = 0;
    goto LABEL_9;
  }
  if (!objc_msgSend(MEMORY[0x24BE6EAF0], "instancesRespondToSelector:", sel_initDummyExpressInfoForAutomaticSelectionCriteriaUpgradeRequest_paymentPass_withTechologyTest_))
  {
    pk_General_log();
    v10 = objc_claimAutoreleasedReturnValue();
    v11 = os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT);

    if (v11)
    {
      pk_General_log();
      v12 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
      {
        objc_msgSend(v6, "uniqueID");
        v13 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138412290;
        v17 = v13;
        _os_log_impl(&dword_213518000, v12, OS_LOG_TYPE_DEFAULT, "Notice: SPI not available. Can't create dummy express pass information for pass with uniqueID:%@", buf, 0xCu);

      }
    }
    goto LABEL_8;
  }
  v8 = objc_alloc(MEMORY[0x24BE6EAF0]);
  v15[0] = MEMORY[0x24BDAC760];
  v15[1] = 3221225472;
  v15[2] = __100__NPKPaymentWebServiceCompanionTargetDevice__dummyExpressPassInformationForPass_fromUpgradeRequest___block_invoke;
  v15[3] = &unk_24CFED6D8;
  v15[4] = self;
  v9 = (void *)objc_msgSend(v8, "initDummyExpressInfoForAutomaticSelectionCriteriaUpgradeRequest:paymentPass:withTechologyTest:", v7, v6, v15);
LABEL_9:

  return v9;
}

uint64_t __100__NPKPaymentWebServiceCompanionTargetDevice__dummyExpressPassInformationForPass_fromUpgradeRequest___block_invoke(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(a1 + 32), "supportsExpressForAutomaticSelectionTechnologyType:", a2);
}

- (id)_synthesizedExpressPassStateForExpressPassConfiguration:(id)a3 otherPaymentPasses:(id)a4
{
  id v5;
  id v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t i;
  void *v13;
  void *v14;
  void *v15;
  char v16;
  void *v17;
  NSObject *v18;
  _BOOL4 v19;
  NSObject *v20;
  id v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  uint8_t buf[4];
  id v28;
  _BYTE v29[128];
  uint64_t v30;

  v30 = *MEMORY[0x24BDAC8D0];
  v5 = a3;
  v6 = a4;
  v22 = objc_alloc_init(MEMORY[0x24BDBCEF0]);
  objc_msgSend(v5, "passUniqueIdentifier");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v23 = 0u;
  v24 = 0u;
  v25 = 0u;
  v26 = 0u;
  v8 = v6;
  v9 = objc_msgSend(v8, "countByEnumeratingWithState:objects:count:", &v23, v29, 16);
  if (v9)
  {
    v10 = v9;
    v11 = *(_QWORD *)v24;
    do
    {
      for (i = 0; i != v10; ++i)
      {
        if (*(_QWORD *)v24 != v11)
          objc_enumerationMutation(v8);
        v13 = *(void **)(*((_QWORD *)&v23 + 1) + 8 * i);
        v14 = (void *)objc_msgSend(objc_alloc(MEMORY[0x24BE6EAF0]), "initForPaymentPass:withTechologyTest:", v13, 0);
        objc_msgSend(v13, "uniqueID");
        v15 = (void *)objc_claimAutoreleasedReturnValue();
        v16 = objc_msgSend(v15, "isEqualToString:", v7);

        if ((v16 & 1) == 0 && v14)
        {
          v17 = (void *)objc_msgSend(objc_alloc(MEMORY[0x24BE6EAE8]), "initWithPassInformation:forSecureElementPass:", v14, v13);
          if (v17)
            objc_msgSend(v22, "addObject:", v17);

        }
      }
      v10 = objc_msgSend(v8, "countByEnumeratingWithState:objects:count:", &v23, v29, 16);
    }
    while (v10);
  }

  pk_General_log();
  v18 = objc_claimAutoreleasedReturnValue();
  v19 = os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT);

  if (v19)
  {
    pk_General_log();
    v20 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v20, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138412290;
      v28 = v22;
      _os_log_impl(&dword_213518000, v20, OS_LOG_TYPE_DEFAULT, "Notice: Express passes information to use as reference:%@ from local DB", buf, 0xCu);
    }

  }
  return v22;
}

- (id)_expressPassConfigurationForPaymentPass:(id)a3
{
  id v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  NSObject *v9;
  _BOOL4 v10;
  NSObject *v11;
  void *v12;
  void *v13;
  NSObject *v14;
  _BOOL4 v15;
  NSObject *v16;
  void *v17;
  void *v18;
  NSObject *v19;
  _BOOL4 v20;
  NSObject *v21;
  _QWORD v23[5];
  _QWORD v24[5];
  uint8_t buf[4];
  void *v26;
  __int16 v27;
  void *v28;
  uint64_t v29;

  v29 = *MEMORY[0x24BDAC8D0];
  v4 = a3;
  v5 = objc_alloc(MEMORY[0x24BE6EAF0]);
  v6 = MEMORY[0x24BDAC760];
  v24[0] = MEMORY[0x24BDAC760];
  v24[1] = 3221225472;
  v24[2] = __85__NPKPaymentWebServiceCompanionTargetDevice__expressPassConfigurationForPaymentPass___block_invoke;
  v24[3] = &unk_24CFED6D8;
  v24[4] = self;
  v7 = objc_msgSend(v5, "initForPaymentPass:withTechologyTest:", v4, v24);
  if (v7)
  {
    v8 = (void *)v7;
    pk_Payment_log();
    v9 = objc_claimAutoreleasedReturnValue();
    v10 = os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT);

    if (v10)
    {
      pk_Payment_log();
      v11 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
      {
        objc_msgSend(v4, "devicePrimaryPaymentApplication");
        v12 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138412546;
        v26 = v12;
        v27 = 2112;
        v28 = v8;
        _os_log_impl(&dword_213518000, v11, OS_LOG_TYPE_DEFAULT, "Notice: Target device: found at given pass with primary payment application:%@ express pass information:%@", buf, 0x16u);

      }
    }
  }
  else
  {
    NPKPairedDeviceSecureElementIdentifiers();
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    NPKIdentifyDevicePaymentApplicationsForPass(v4, v13);

    v23[0] = v6;
    v23[1] = 3221225472;
    v23[2] = __85__NPKPaymentWebServiceCompanionTargetDevice__expressPassConfigurationForPaymentPass___block_invoke_2;
    v23[3] = &unk_24CFED6D8;
    v23[4] = self;
    v8 = (void *)objc_msgSend(objc_alloc(MEMORY[0x24BE6EAF0]), "initForPaymentPass:withTechologyTest:", v4, v23);
    pk_Payment_log();
    v14 = objc_claimAutoreleasedReturnValue();
    v15 = os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT);

    if (v15)
    {
      pk_Payment_log();
      v16 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
      {
        objc_msgSend(v4, "devicePrimaryPaymentApplication");
        v17 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138412546;
        v26 = v17;
        v27 = 2112;
        v28 = v8;
        _os_log_impl(&dword_213518000, v16, OS_LOG_TYPE_DEFAULT, "Notice: Target device: found at updated pass with primary payment application:%@ express pass information:%@", buf, 0x16u);

      }
    }
    if (!v8)
    {
      v18 = 0;
      goto LABEL_16;
    }
  }
  v18 = (void *)objc_msgSend(objc_alloc(MEMORY[0x24BE6EAE8]), "initWithPassInformation:forSecureElementPass:", v8, v4);
  pk_General_log();
  v19 = objc_claimAutoreleasedReturnValue();
  v20 = os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT);

  if (v20)
  {
    pk_General_log();
    v21 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v21, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138412290;
      v26 = v18;
      _os_log_impl(&dword_213518000, v21, OS_LOG_TYPE_DEFAULT, "Notice: _expressPassConfigurationForPaymentPass created config %@", buf, 0xCu);
    }

  }
LABEL_16:

  return v18;
}

uint64_t __85__NPKPaymentWebServiceCompanionTargetDevice__expressPassConfigurationForPaymentPass___block_invoke(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(a1 + 32), "supportsExpressForAutomaticSelectionTechnologyType:", a2);
}

uint64_t __85__NPKPaymentWebServiceCompanionTargetDevice__expressPassConfigurationForPaymentPass___block_invoke_2(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(a1 + 32), "supportsExpressForAutomaticSelectionTechnologyType:", a2);
}

- (id)_eligibleExpressUpgradeRequestsForPass:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  NSObject *v9;
  _BOOL4 v10;
  NSObject *v11;
  _QWORD v13[5];
  uint8_t buf[4];
  const char *v15;
  uint64_t v16;

  v16 = *MEMORY[0x24BDAC8D0];
  v4 = a3;
  -[NPKPaymentWebServiceCompanionTargetDevice deviceClass](self, "deviceClass");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  -[NPKPaymentWebServiceCompanionTargetDevice deviceVersion](self, "deviceVersion");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  -[NPKPaymentWebServiceCompanionTargetDevice secureElementIdentifiers](self, "secureElementIdentifiers");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  if (objc_msgSend(v7, "count"))
  {
    v13[0] = MEMORY[0x24BDAC760];
    v13[1] = 3221225472;
    v13[2] = __84__NPKPaymentWebServiceCompanionTargetDevice__eligibleExpressUpgradeRequestsForPass___block_invoke;
    v13[3] = &unk_24CFED6D8;
    v13[4] = self;
    objc_msgSend(v4, "eligibleExpressUpgradeRequestsForDeviceClass:deviceSEIDs:deviceVersion:technologyTest:", v5, v7, v6, v13);
    v8 = (void *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    pk_General_log();
    v9 = objc_claimAutoreleasedReturnValue();
    v10 = os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT);

    if (v10)
    {
      pk_General_log();
      v11 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 136315138;
        v15 = "-[NPKPaymentWebServiceCompanionTargetDevice _eligibleExpressUpgradeRequestsForPass:]";
        _os_log_impl(&dword_213518000, v11, OS_LOG_TYPE_DEFAULT, "Warning: Unable to get device SEID in %s", buf, 0xCu);
      }

    }
    v8 = 0;
  }

  return v8;
}

uint64_t __84__NPKPaymentWebServiceCompanionTargetDevice__eligibleExpressUpgradeRequestsForPass___block_invoke(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(a1 + 32), "supportsExpressForAutomaticSelectionTechnologyType:", a2);
}

- (void)_checkConflictsForPass:(id)a3 withConfiguration:(id)a4 webService:(id)a5 hasDisqualifyingConflicts:(id)a6
{
  id v10;
  id v11;
  id v12;
  NSObject *v13;
  void *v14;
  NSObject *v15;
  _BOOL4 v16;
  NSObject *v17;
  _BOOL4 v18;
  NSObject *v19;
  _QWORD v20[5];
  id v21;
  NSObject *v22;
  id v23;
  id v24;
  uint8_t buf[4];
  const char *v26;
  uint64_t v27;

  v27 = *MEMORY[0x24BDAC8D0];
  v10 = a3;
  v11 = a4;
  v12 = a6;
  if (v12)
  {
    -[NPKPaymentWebServiceCompanionTargetDevice paymentWebService:passesOfType:](self, "paymentWebService:passesOfType:", a5, 1);
    v13 = objc_claimAutoreleasedReturnValue();
    if (-[NSObject count](v13, "count"))
    {
      -[NPKPaymentWebServiceCompanionTargetDevice _synthesizedExpressPassStateForExpressPassConfiguration:otherPaymentPasses:](self, "_synthesizedExpressPassStateForExpressPassConfiguration:otherPaymentPasses:", v11, v13);
      v14 = (void *)objc_claimAutoreleasedReturnValue();
      v20[0] = MEMORY[0x24BDAC760];
      v20[1] = 3221225472;
      v20[2] = __123__NPKPaymentWebServiceCompanionTargetDevice__checkConflictsForPass_withConfiguration_webService_hasDisqualifyingConflicts___block_invoke;
      v20[3] = &unk_24CFED700;
      v20[4] = self;
      v21 = v10;
      v13 = v13;
      v22 = v13;
      v23 = v11;
      v24 = v12;
      -[NPKPaymentWebServiceCompanionTargetDevice conflictingExpressPassIdentifiersForPassConfiguration:withReferenceExpressState:completion:](self, "conflictingExpressPassIdentifiersForPassConfiguration:withReferenceExpressState:completion:", v23, v14, v20);

    }
    else
    {
      pk_General_log();
      v17 = objc_claimAutoreleasedReturnValue();
      v18 = os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT);

      if (v18)
      {
        pk_General_log();
        v19 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)buf = 0;
          _os_log_impl(&dword_213518000, v19, OS_LOG_TYPE_DEFAULT, "Notice: No payment passes found, should be no conflicts.", buf, 2u);
        }

      }
      (*((void (**)(id, _QWORD))v12 + 2))(v12, 0);
    }
LABEL_12:

    goto LABEL_13;
  }
  pk_General_log();
  v15 = objc_claimAutoreleasedReturnValue();
  v16 = os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT);

  if (v16)
  {
    pk_General_log();
    v13 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 136315138;
      v26 = "-[NPKPaymentWebServiceCompanionTargetDevice _checkConflictsForPass:withConfiguration:webService:hasDisqualifyingConflicts:]";
      _os_log_impl(&dword_213518000, v13, OS_LOG_TYPE_DEFAULT, "Warning: %s will not proceed with nil completion.", buf, 0xCu);
    }
    goto LABEL_12;
  }
LABEL_13:

}

void __123__NPKPaymentWebServiceCompanionTargetDevice__checkConflictsForPass_withConfiguration_webService_hasDisqualifyingConflicts___block_invoke(uint64_t a1, void *a2, void *a3)
{
  NSObject *v5;
  id v6;
  NSObject *v7;
  _BOOL4 v8;
  NSObject *v9;
  void *v10;
  NSObject *v11;
  _BOOL4 v12;
  NSObject *v13;
  uint64_t v14;
  NSObject *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t i;
  void *v20;
  void *v21;
  int v22;
  NSObject *v23;
  NSObject *v24;
  int v25;
  NSObject *v26;
  _BOOL4 v27;
  NSObject *v28;
  NSObject *v29;
  NSObject *v30;
  _BOOL4 v31;
  NSObject *v32;
  NSObject *v33;
  void *v34;
  NSObject *v35;
  void *v36;
  NSObject *v37;
  NSObject *v38;
  id v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  uint8_t buf[4];
  NSObject *v45;
  __int16 v46;
  void *v47;
  _BYTE v48[128];
  uint64_t v49;

  v49 = *MEMORY[0x24BDAC8D0];
  v5 = a2;
  v6 = a3;
  if (-[NSObject count](v5, "count"))
  {
    pk_Payment_log();
    v7 = objc_claimAutoreleasedReturnValue();
    v8 = os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT);

    if (!v8)
      goto LABEL_39;
    pk_Payment_log();
    v9 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend(*(id *)(a1 + 56), "passUniqueIdentifier");
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138412546;
      v45 = v5;
      v46 = 2112;
      v47 = v10;
      _os_log_impl(&dword_213518000, v9, OS_LOG_TYPE_DEFAULT, "Notice: express passes setup in express mode:%@ conflict with given pass. Will not set in express mode pass with uniqueID:%@", buf, 0x16u);

    }
  }
  else
  {
    if (!objc_msgSend(v6, "count"))
      goto LABEL_39;
    pk_General_log();
    v11 = objc_claimAutoreleasedReturnValue();
    v12 = os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT);

    if (v12)
    {
      pk_General_log();
      v13 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)buf = 0;
        _os_log_impl(&dword_213518000, v13, OS_LOG_TYPE_DEFAULT, "Notice: Checking Conflicting reference passes", buf, 2u);
      }

    }
    v37 = v5;
    objc_msgSend(*(id *)(a1 + 32), "_categoryIdentifierForPass:", *(_QWORD *)(a1 + 40));
    v14 = objc_claimAutoreleasedReturnValue();
    v40 = 0u;
    v41 = 0u;
    v42 = 0u;
    v43 = 0u;
    v15 = *(id *)(a1 + 48);
    v16 = -[NSObject countByEnumeratingWithState:objects:count:](v15, "countByEnumeratingWithState:objects:count:", &v40, v48, 16);
    v38 = v14;
    if (v16)
    {
      v17 = v16;
      v18 = *(_QWORD *)v41;
      v39 = v6;
      while (2)
      {
        for (i = 0; i != v17; ++i)
        {
          if (*(_QWORD *)v41 != v18)
            objc_enumerationMutation(v15);
          v20 = *(void **)(*((_QWORD *)&v40 + 1) + 8 * i);
          objc_msgSend(v20, "uniqueID");
          v21 = (void *)objc_claimAutoreleasedReturnValue();
          v22 = objc_msgSend(v6, "containsObject:", v21);

          if (v22)
          {
            objc_msgSend(*(id *)(a1 + 32), "_categoryIdentifierForPass:", v20);
            v23 = objc_claimAutoreleasedReturnValue();
            if (PKEqualObjects())
            {
              v24 = v15;
              v25 = objc_msgSend(v20, "isPeerPaymentPass");
              pk_General_log();
              v26 = objc_claimAutoreleasedReturnValue();
              v27 = os_log_type_enabled(v26, OS_LOG_TYPE_DEFAULT);

              if (!v25)
              {
                v5 = v37;
                v9 = v38;
                v32 = v24;
                if (v27)
                {
                  pk_General_log();
                  v35 = objc_claimAutoreleasedReturnValue();
                  if (os_log_type_enabled(v35, OS_LOG_TYPE_DEFAULT))
                  {
                    objc_msgSend(v20, "uniqueID");
                    v36 = (void *)objc_claimAutoreleasedReturnValue();
                    *(_DWORD *)buf = 138412546;
                    v45 = v23;
                    v46 = 2112;
                    v47 = v36;
                    _os_log_impl(&dword_213518000, v35, OS_LOG_TYPE_DEFAULT, "Notice: Found conflicting category:%@ for pass with unique ID:%@", buf, 0x16u);

                    v32 = v24;
                  }

                }
                v6 = v39;
                goto LABEL_36;
              }
              v15 = v24;
              if (v27)
              {
                pk_General_log();
                v28 = objc_claimAutoreleasedReturnValue();
                if (os_log_type_enabled(v28, OS_LOG_TYPE_DEFAULT))
                {
                  objc_msgSend(v20, "uniqueID");
                  v29 = objc_claimAutoreleasedReturnValue();
                  *(_DWORD *)buf = 138412290;
                  v45 = v29;
                  _os_log_impl(&dword_213518000, v28, OS_LOG_TYPE_DEFAULT, "Notice: Found peer payment pass with uniqueID:%@ conflicting with new pass. Will ignore it", buf, 0xCu);

                  v15 = v24;
                }

              }
            }

            v6 = v39;
          }
        }
        v17 = -[NSObject countByEnumeratingWithState:objects:count:](v15, "countByEnumeratingWithState:objects:count:", &v40, v48, 16);
        if (v17)
          continue;
        break;
      }
    }

    pk_General_log();
    v30 = objc_claimAutoreleasedReturnValue();
    v31 = os_log_type_enabled(v30, OS_LOG_TYPE_DEFAULT);

    if (v31)
    {
      pk_General_log();
      v32 = objc_claimAutoreleasedReturnValue();
      v5 = v37;
      if (os_log_type_enabled(v32, OS_LOG_TYPE_DEFAULT))
      {
        objc_msgSend(*(id *)(a1 + 56), "passUniqueIdentifier");
        v33 = v32;
        v34 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138412546;
        v9 = v38;
        v45 = v38;
        v46 = 2112;
        v47 = v34;
        _os_log_impl(&dword_213518000, v33, OS_LOG_TYPE_DEFAULT, "Notice: Conflicting reference passes doesn't belong to the same express category:%@. Will handle potential express pass with unique ID %@", buf, 0x16u);

        v32 = v33;
      }
      else
      {
        v9 = v38;
      }
LABEL_36:

    }
    else
    {
      v5 = v37;
      v9 = v38;
    }
  }

LABEL_39:
  (*(void (**)(void))(*(_QWORD *)(a1 + 64) + 16))();

}

- (void)_handleOpenLoopPassUpgradeWithPass:(id)a3 webService:(id)a4 completion:(id)a5
{
  id v8;
  id v9;
  id v10;
  NSObject *v11;
  void *v12;
  id v13;
  void *v14;
  void *v15;
  id v16;
  NSObject *v17;
  _BOOL4 v18;
  NSObject *v19;
  _BOOL4 v20;
  NSObject *v21;
  char *v22;
  NSObject *v23;
  _BOOL4 v24;
  NSObject *v25;
  char *v26;
  _QWORD v27[4];
  id v28;
  NPKPaymentWebServiceCompanionTargetDevice *v29;
  NSObject *v30;
  id v31;
  id v32;
  uint8_t buf[4];
  const char *v34;
  uint64_t v35;

  v35 = *MEMORY[0x24BDAC8D0];
  v8 = a3;
  v9 = a4;
  v10 = a5;
  if (v10)
  {
    -[NPKPaymentWebServiceCompanionTargetDevice upgradeRequestForPass:](self, "upgradeRequestForPass:", v8);
    v11 = objc_claimAutoreleasedReturnValue();
    if (v11)
    {
      -[NPKPaymentWebServiceCompanionTargetDevice _dummyExpressPassInformationForPass:fromUpgradeRequest:](self, "_dummyExpressPassInformationForPass:fromUpgradeRequest:", v8, v11);
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      if (v12)
      {
        v13 = objc_alloc(MEMORY[0x24BE6EAE8]);
        objc_msgSend(v8, "devicePaymentApplications");
        v14 = (void *)objc_claimAutoreleasedReturnValue();
        v15 = (void *)objc_msgSend(v13, "initWithPassInformation:forPaymentApplications:", v12, v14);

        v27[0] = MEMORY[0x24BDAC760];
        v27[1] = 3221225472;
        v27[2] = __102__NPKPaymentWebServiceCompanionTargetDevice__handleOpenLoopPassUpgradeWithPass_webService_completion___block_invoke;
        v27[3] = &unk_24CFED750;
        v28 = v8;
        v29 = self;
        v30 = v11;
        v31 = v15;
        v32 = v10;
        v16 = v15;
        -[NPKPaymentWebServiceCompanionTargetDevice _checkConflictsForPass:withConfiguration:webService:hasDisqualifyingConflicts:](self, "_checkConflictsForPass:withConfiguration:webService:hasDisqualifyingConflicts:", v28, v16, v9, v27);

      }
      else
      {
        pk_General_log();
        v23 = objc_claimAutoreleasedReturnValue();
        v24 = os_log_type_enabled(v23, OS_LOG_TYPE_DEFAULT);

        if (v24)
        {
          pk_General_log();
          v25 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v25, OS_LOG_TYPE_DEFAULT))
          {
            objc_msgSend(v8, "uniqueID");
            v26 = (char *)objc_claimAutoreleasedReturnValue();
            *(_DWORD *)buf = 138412290;
            v34 = v26;
            _os_log_impl(&dword_213518000, v25, OS_LOG_TYPE_DEFAULT, "Notice: Invalid upgrade request on pass %@, could not create test express info", buf, 0xCu);

          }
        }
        (*((void (**)(id, _QWORD))v10 + 2))(v10, 0);
      }

    }
    else
    {
      pk_General_log();
      v19 = objc_claimAutoreleasedReturnValue();
      v20 = os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT);

      if (v20)
      {
        pk_General_log();
        v21 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v21, OS_LOG_TYPE_DEFAULT))
        {
          objc_msgSend(v8, "uniqueID");
          v22 = (char *)objc_claimAutoreleasedReturnValue();
          *(_DWORD *)buf = 138412290;
          v34 = v22;
          _os_log_impl(&dword_213518000, v21, OS_LOG_TYPE_DEFAULT, "Notice: No upgrade request for pass %@", buf, 0xCu);

        }
      }
      (*((void (**)(id, _QWORD))v10 + 2))(v10, 0);
    }
LABEL_19:

    goto LABEL_20;
  }
  pk_General_log();
  v17 = objc_claimAutoreleasedReturnValue();
  v18 = os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT);

  if (v18)
  {
    pk_General_log();
    v11 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 136315138;
      v34 = "-[NPKPaymentWebServiceCompanionTargetDevice _handleOpenLoopPassUpgradeWithPass:webService:completion:]";
      _os_log_impl(&dword_213518000, v11, OS_LOG_TYPE_DEFAULT, "Warning: %s will not continue with nil completion.", buf, 0xCu);
    }
    goto LABEL_19;
  }
LABEL_20:

}

void __102__NPKPaymentWebServiceCompanionTargetDevice__handleOpenLoopPassUpgradeWithPass_webService_completion___block_invoke(uint64_t a1, char a2)
{
  NSObject *v3;
  _BOOL4 v4;
  NSObject *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  _QWORD v13[5];
  id v14;
  id v15;
  __int128 *p_buf;
  __int128 buf;
  uint64_t v18;
  char v19;
  uint64_t v20;

  v20 = *MEMORY[0x24BDAC8D0];
  if ((a2 & 1) != 0)
  {
    pk_General_log();
    v3 = objc_claimAutoreleasedReturnValue();
    v4 = os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT);

    if (v4)
    {
      pk_General_log();
      v5 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
      {
        objc_msgSend(*(id *)(a1 + 32), "uniqueID");
        v6 = (void *)objc_claimAutoreleasedReturnValue();
        LODWORD(buf) = 138412290;
        *(_QWORD *)((char *)&buf + 4) = v6;
        _os_log_impl(&dword_213518000, v5, OS_LOG_TYPE_DEFAULT, "Notice: Pass %@ upgrade request has potential conflicts, not upgrading for express", (uint8_t *)&buf, 0xCu);

      }
    }
    (*(void (**)(void))(*(_QWORD *)(a1 + 64) + 16))();
  }
  else
  {
    if (NPKIsRunningInNPKCompanionAgent())
      v7 = objc_msgSend(*(id *)(a1 + 32), "isAppleCardPass");
    else
      v7 = 0;
    *(_QWORD *)&buf = 0;
    *((_QWORD *)&buf + 1) = &buf;
    v18 = 0x2020000000;
    v19 = 0;
    v9 = *(void **)(a1 + 40);
    v8 = *(_QWORD *)(a1 + 48);
    v10 = *(_QWORD *)(a1 + 32);
    v13[0] = MEMORY[0x24BDAC760];
    v13[1] = 3221225472;
    v13[2] = __102__NPKPaymentWebServiceCompanionTargetDevice__handleOpenLoopPassUpgradeWithPass_webService_completion___block_invoke_2;
    v13[3] = &unk_24CFED728;
    p_buf = &buf;
    v11 = *(id *)(a1 + 64);
    v12 = *(_QWORD *)(a1 + 40);
    v15 = v11;
    v13[4] = v12;
    v14 = *(id *)(a1 + 56);
    objc_msgSend(v9, "remotePassUpgradeWithRequest:pass:requireAuthorization:notifyUserOnPairedDevice:updateBlock:", v8, v10, 0, v7, v13);

    _Block_object_dispose(&buf, 8);
  }
}

void __102__NPKPaymentWebServiceCompanionTargetDevice__handleOpenLoopPassUpgradeWithPass_webService_completion___block_invoke_2(_QWORD *a1, void *a2, void *a3, uint64_t a4, unint64_t a5)
{
  id v8;
  id v9;
  NSObject *v10;
  _BOOL4 v11;
  NSObject *v12;
  void *v13;
  void *v14;
  uint64_t v15;
  void *v16;
  void *v17;
  void *v18;
  int v19;
  void *v20;
  __int16 v21;
  void *v22;
  __int16 v23;
  id v24;
  __int16 v25;
  id v26;
  uint64_t v27;

  v27 = *MEMORY[0x24BDAC8D0];
  v8 = a2;
  v9 = a3;
  pk_General_log();
  v10 = objc_claimAutoreleasedReturnValue();
  v11 = os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT);

  if (v11)
  {
    pk_General_log();
    v12 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend(v9, "uniqueID");
      v13 = (void *)objc_claimAutoreleasedReturnValue();
      NSStringFromNPKRemotePassUpgradeStatus(a5);
      v14 = (void *)objc_claimAutoreleasedReturnValue();
      v19 = 138413058;
      v20 = v13;
      v21 = 2112;
      v22 = v14;
      v23 = 2112;
      v24 = v9;
      v25 = 2112;
      v26 = v8;
      _os_log_impl(&dword_213518000, v12, OS_LOG_TYPE_DEFAULT, "Notice: Target Device: handle potential express pass received Remote pass upgrade updated for pass with uniqueID:%@ received, Status:%@ updatedPass:%@ error:%@", (uint8_t *)&v19, 0x2Au);

    }
  }
  v15 = *(_QWORD *)(a1[7] + 8);
  if (!*(_BYTE *)(v15 + 24) && a1[6])
  {
    *(_BYTE *)(v15 + 24) = 1;
    if (v8)
    {
      v16 = 0;
    }
    else
    {
      v17 = (void *)a1[4];
      objc_msgSend(MEMORY[0x24BDBCF20], "setWithObject:", a1[5]);
      v18 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v17, "_expressModesFromExpressPassConfigurations:", v18);
      v16 = (void *)objc_claimAutoreleasedReturnValue();

    }
    (*(void (**)(void))(a1[6] + 16))();

  }
}

- (void)sendPaymentOptionsDefaultsToWatch
{
  NSObject *v3;
  _BOOL4 v4;
  NSObject *v5;
  void *v6;
  id v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  NSObject *v14;
  _BOOL4 v15;
  NSObject *v16;
  int v17;
  void *v18;
  _QWORD v19[2];
  _QWORD v20[3];

  v20[2] = *MEMORY[0x24BDAC8D0];
  pk_Payment_log();
  v3 = objc_claimAutoreleasedReturnValue();
  v4 = os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT);

  if (v4)
  {
    pk_Payment_log();
    v5 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      LOWORD(v17) = 0;
      _os_log_impl(&dword_213518000, v5, OS_LOG_TYPE_DEFAULT, "Notice: Sending updated payment options defaults to watch", (uint8_t *)&v17, 2u);
    }

  }
  +[NPKPaymentOptionsSerialization setTransactionDefaultsRequest](NPKPaymentOptionsSerialization, "setTransactionDefaultsRequest");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = objc_alloc(MEMORY[0x24BE4FE40]);
  objc_msgSend(v6, "data");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v9 = (void *)objc_msgSend(v7, "initWithProtobufData:type:isResponse:", v8, 23, 0);

  v19[0] = *MEMORY[0x24BE4FB30];
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", *MEMORY[0x24BE4FD70]);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v19[1] = *MEMORY[0x24BE4FB18];
  v20[0] = v10;
  v20[1] = CFSTR("NPKTransactionDefaultsQueueOne");
  objc_msgSend(MEMORY[0x24BDBCE70], "dictionaryWithObjects:forKeys:count:", v20, v19, 2);
  v11 = (void *)objc_claimAutoreleasedReturnValue();

  -[NPKPaymentWebServiceCompanionTargetDevice provisioningService](self, "provisioningService");
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  NPKProtoSendWithOptions(v12, v9, 200, 0, 0, &__block_literal_global_590, v11);
  v13 = (void *)objc_claimAutoreleasedReturnValue();

  pk_Payment_log();
  v14 = objc_claimAutoreleasedReturnValue();
  v15 = os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT);

  if (v15)
  {
    pk_Payment_log();
    v16 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
    {
      v17 = 138412290;
      v18 = v13;
      _os_log_impl(&dword_213518000, v16, OS_LOG_TYPE_DEFAULT, "Notice: Sent updated payment options defaults to watch with message ID %@", (uint8_t *)&v17, 0xCu);
    }

  }
}

void __78__NPKPaymentWebServiceCompanionTargetDevice_sendPaymentOptionsDefaultsToWatch__block_invoke(uint64_t a1, void *a2)
{
  id v2;
  NSObject *v3;
  _BOOL4 v4;
  NSObject *v5;
  int v6;
  id v7;
  uint64_t v8;

  v8 = *MEMORY[0x24BDAC8D0];
  v2 = a2;
  pk_Payment_log();
  v3 = objc_claimAutoreleasedReturnValue();
  v4 = os_log_type_enabled(v3, OS_LOG_TYPE_ERROR);

  if (v4)
  {
    pk_Payment_log();
    v5 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
    {
      v6 = 138412290;
      v7 = v2;
      _os_log_impl(&dword_213518000, v5, OS_LOG_TYPE_ERROR, "Error: Failed to send updated payment options defaults to watch %@!", (uint8_t *)&v6, 0xCu);
    }

  }
}

- (void)sendWebServiceContextToWatch:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  char v7;
  NSObject *v8;
  _BOOL4 v9;
  NSObject *v10;
  void *v11;
  void *v12;
  void *v13;
  const __CFString *v14;
  NPKProtoWebServiceContextDidChangeRequest *v15;
  void *v16;
  id v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  NSObject *v24;
  _BOOL4 v25;
  NSObject *v26;
  const char *v27;
  NSObject *v28;
  _BOOL4 v29;
  _QWORD v30[2];
  _QWORD v31[2];
  uint8_t buf[4];
  id v33;
  __int16 v34;
  void *v35;
  __int16 v36;
  const __CFString *v37;
  uint64_t v38;

  v38 = *MEMORY[0x24BDAC8D0];
  v4 = a3;
  if (NPKIsCompanionMigrationNeeded()
    && (objc_msgSend(v4, "registrationDate"), v5 = (void *)objc_claimAutoreleasedReturnValue(), v5, !v5))
  {
    pk_Payment_log();
    v28 = objc_claimAutoreleasedReturnValue();
    v29 = os_log_type_enabled(v28, OS_LOG_TYPE_DEFAULT);

    if (v29)
    {
      pk_Payment_log();
      v15 = (NPKProtoWebServiceContextDidChangeRequest *)objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(&v15->super.super.super, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 138412290;
        v33 = v4;
        v27 = "Warning: Not sending unregistered web service context to watch (%@) while companion migration is needed";
        goto LABEL_23;
      }
LABEL_24:

    }
  }
  else
  {
    NPKPairedDeviceSecureElementIdentifiers();
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    v7 = NPKValidatePaymentWebServiceContextAgainstWatchSEIDs(v4, v6);

    pk_Payment_log();
    v8 = objc_claimAutoreleasedReturnValue();
    v9 = os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT);

    if ((v7 & 1) != 0)
    {
      if (v9)
      {
        pk_Payment_log();
        v10 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
        {
          objc_msgSend(v4, "primaryRegion");
          v11 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v11, "applyServiceURL");
          v12 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v4, "primaryRegion");
          v13 = (void *)objc_claimAutoreleasedReturnValue();
          v14 = CFSTR("YES");
          *(_DWORD *)buf = 138412802;
          v33 = v4;
          v34 = 2112;
          if (!v13)
            v14 = CFSTR("NO");
          v35 = v12;
          v36 = 2112;
          v37 = v14;
          _os_log_impl(&dword_213518000, v10, OS_LOG_TYPE_DEFAULT, "Notice: (account-pass-context) Sending web service context to watch: %@ applyServiceURL %@ primaryRegion %@", buf, 0x20u);

        }
      }
      v15 = objc_alloc_init(NPKProtoWebServiceContextDidChangeRequest);
      NPKSecureArchiveObject(v4);
      v16 = (void *)objc_claimAutoreleasedReturnValue();
      if (v16)
        -[NPKProtoWebServiceContextDidChangeRequest setWebServiceContextBytes:](v15, "setWebServiceContextBytes:", v16);
      v17 = objc_alloc(MEMORY[0x24BE4FE40]);
      -[NPKProtoWebServiceContextDidChangeRequest data](v15, "data");
      v18 = (void *)objc_claimAutoreleasedReturnValue();
      v19 = (void *)objc_msgSend(v17, "initWithProtobufData:type:isResponse:", v18, 17, 0);

      objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", *MEMORY[0x24BE4FD70], *MEMORY[0x24BE4FB30]);
      v20 = (void *)objc_claimAutoreleasedReturnValue();
      v30[1] = *MEMORY[0x24BE4FB18];
      v31[0] = v20;
      v31[1] = CFSTR("NPKWebServiceContextQueueOne");
      objc_msgSend(MEMORY[0x24BDBCE70], "dictionaryWithObjects:forKeys:count:", v31, v30, 2);
      v21 = (void *)objc_claimAutoreleasedReturnValue();

      -[NPKPaymentWebServiceCompanionTargetDevice provisioningService](self, "provisioningService");
      v22 = (void *)objc_claimAutoreleasedReturnValue();
      NPKProtoSendWithOptions(v22, v19, 200, 0, 0, &__block_literal_global_594, v21);
      v23 = (void *)objc_claimAutoreleasedReturnValue();

      pk_Payment_log();
      v24 = objc_claimAutoreleasedReturnValue();
      v25 = os_log_type_enabled(v24, OS_LOG_TYPE_DEFAULT);

      if (v25)
      {
        pk_Payment_log();
        v26 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v26, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)buf = 138412290;
          v33 = v23;
          _os_log_impl(&dword_213518000, v26, OS_LOG_TYPE_DEFAULT, "Notice: Sent web service context to watch with message ID %@", buf, 0xCu);
        }

      }
      goto LABEL_24;
    }
    if (v9)
    {
      pk_Payment_log();
      v15 = (NPKProtoWebServiceContextDidChangeRequest *)objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(&v15->super.super.super, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 138412290;
        v33 = v4;
        v27 = "Warning: Not sending invalid web service context to watch (%@)";
LABEL_23:
        _os_log_impl(&dword_213518000, &v15->super.super.super, OS_LOG_TYPE_DEFAULT, v27, buf, 0xCu);
        goto LABEL_24;
      }
      goto LABEL_24;
    }
  }

}

void __74__NPKPaymentWebServiceCompanionTargetDevice_sendWebServiceContextToWatch___block_invoke(uint64_t a1, void *a2)
{
  id v2;
  NSObject *v3;
  _BOOL4 v4;
  NSObject *v5;
  int v6;
  id v7;
  uint64_t v8;

  v8 = *MEMORY[0x24BDAC8D0];
  v2 = a2;
  pk_Payment_log();
  v3 = objc_claimAutoreleasedReturnValue();
  v4 = os_log_type_enabled(v3, OS_LOG_TYPE_ERROR);

  if (v4)
  {
    pk_Payment_log();
    v5 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
    {
      v6 = 138412290;
      v7 = v2;
      _os_log_impl(&dword_213518000, v5, OS_LOG_TYPE_ERROR, "Error: Failed to send web service context to watch %@!", (uint8_t *)&v6, 0xCu);
    }

  }
}

- (void)handleCompanionMigrationResponse:(id)a3
{
  id v4;
  NSObject *v5;
  _BOOL4 v6;
  NSObject *v7;
  void *v8;
  void *v9;
  void *v10;
  NSObject *v11;
  NSObject *v12;
  _BOOL4 v13;
  NSObject *v14;
  uint64_t v15;
  uint8_t v16[8];
  _QWORD block[5];
  id v18;
  id v19;
  __int128 *p_buf;
  uint64_t *v21;
  uint64_t *v22;
  uint64_t *v23;
  uint64_t *v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t (*v29)(uint64_t, uint64_t);
  void (*v30)(uint64_t);
  id v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t (*v35)(uint64_t, uint64_t);
  void (*v36)(uint64_t);
  id v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t (*v41)(uint64_t, uint64_t);
  void (*v42)(uint64_t);
  id v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t (*v47)(uint64_t, uint64_t);
  void (*v48)(uint64_t);
  id v49;
  uint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  char v53;
  __int128 buf;
  uint64_t v55;
  uint64_t (*v56)(uint64_t, uint64_t);
  void (*v57)(uint64_t);
  id v58;
  uint64_t v59;

  v59 = *MEMORY[0x24BDAC8D0];
  v4 = a3;
  pk_Payment_log();
  v5 = objc_claimAutoreleasedReturnValue();
  v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    pk_Payment_log();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend(v4, "npkDescription");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      LODWORD(buf) = 138412290;
      *(_QWORD *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_213518000, v7, OS_LOG_TYPE_DEFAULT, "Notice: incoming protobuf %@", (uint8_t *)&buf, 0xCu);

    }
  }
  objc_msgSend(v4, "context");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "incomingResponseIdentifier");
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  *(_QWORD *)&buf = 0;
  *((_QWORD *)&buf + 1) = &buf;
  v55 = 0x3032000000;
  v56 = __Block_byref_object_copy__342;
  v57 = __Block_byref_object_dispose__343;
  v58 = 0;
  v50 = 0;
  v51 = &v50;
  v52 = 0x2020000000;
  v53 = 0;
  v44 = 0;
  v45 = &v44;
  v46 = 0x3032000000;
  v47 = __Block_byref_object_copy__23;
  v48 = __Block_byref_object_dispose__23;
  v49 = 0;
  v38 = 0;
  v39 = &v38;
  v40 = 0x3032000000;
  v41 = __Block_byref_object_copy__23;
  v42 = __Block_byref_object_dispose__23;
  v43 = 0;
  v32 = 0;
  v33 = &v32;
  v34 = 0x3032000000;
  v35 = __Block_byref_object_copy__23;
  v36 = __Block_byref_object_dispose__23;
  v37 = 0;
  v26 = 0;
  v27 = &v26;
  v28 = 0x3032000000;
  v29 = __Block_byref_object_copy__23;
  v30 = __Block_byref_object_dispose__23;
  v31 = 0;
  if (v10)
  {
    -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
    v11 = objc_claimAutoreleasedReturnValue();
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 3221225472;
    block[2] = __78__NPKPaymentWebServiceCompanionTargetDevice_handleCompanionMigrationResponse___block_invoke;
    block[3] = &unk_24CFED458;
    block[4] = self;
    v18 = v10;
    v19 = v4;
    p_buf = &buf;
    v21 = &v50;
    v22 = &v44;
    v23 = &v38;
    v24 = &v32;
    v25 = &v26;
    dispatch_sync(v11, block);

  }
  else
  {
    pk_Payment_log();
    v12 = objc_claimAutoreleasedReturnValue();
    v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      pk_Payment_log();
      v14 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)v16 = 0;
        _os_log_impl(&dword_213518000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v16, 2u);
      }

    }
  }
  v15 = *(_QWORD *)(*((_QWORD *)&buf + 1) + 40);
  if (v15)
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 16))(v15, *((unsigned __int8 *)v51 + 24), v45[5], v39[5], v33[5], v27[5]);
  _Block_object_dispose(&v26, 8);

  _Block_object_dispose(&v32, 8);
  _Block_object_dispose(&v38, 8);

  _Block_object_dispose(&v44, 8);
  _Block_object_dispose(&v50, 8);
  _Block_object_dispose(&buf, 8);

}

void __78__NPKPaymentWebServiceCompanionTargetDevice_handleCompanionMigrationResponse___block_invoke(uint64_t a1)
{
  void *v1;
  void *v3;
  void *v4;
  NPKProtoCompanionMigratedResponse *v5;
  void *v6;
  NPKProtoCompanionMigratedResponse *v7;
  NSObject *v8;
  _BOOL4 v9;
  NSObject *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  _BOOL4 v15;
  NSObject *v16;
  void *v17;
  void *v18;
  NSObject *v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  void *v23;
  NSObject *v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  void *v28;
  NSObject *v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  __int16 v33[8];

  objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "objectForKey:", *(_QWORD *)(a1 + 40));
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  if (v4)
  {
    v5 = [NPKProtoCompanionMigratedResponse alloc];
    objc_msgSend(*(id *)(a1 + 48), "data");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    v7 = -[NPKProtoCompanionMigratedResponse initWithData:](v5, "initWithData:", v6);

    if (-[NPKProtoCompanionMigratedResponse pending](v7, "pending"))
    {
      objc_msgSend(v4, "setOrResetCleanupTimer");
    }
    else
    {
      objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v11, "removeObjectForKey:", *(_QWORD *)(a1 + 40));

      objc_msgSend(v4, "completionHandler");
      v12 = objc_claimAutoreleasedReturnValue();
      v13 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
      v14 = *(void **)(v13 + 40);
      *(_QWORD *)(v13 + 40) = v12;

      *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 24) = -[NPKProtoCompanionMigratedResponse success](v7, "success");
      v15 = -[NPKProtoCompanionMigratedResponse hasErrorData](v7, "hasErrorData");
      if (v15)
      {
        -[NPKProtoCompanionMigratedResponse errorData](v7, "errorData");
        v1 = (void *)objc_claimAutoreleasedReturnValue();
        v16 = objc_opt_class();
        NPKSecureUnarchiveObject(v1, v16);
        v17 = (void *)objc_claimAutoreleasedReturnValue();
      }
      else
      {
        v17 = 0;
      }
      objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 72) + 8) + 40), v17);
      if (v15)
      {

      }
      -[NPKProtoCompanionMigratedResponse paymentWebServiceContextData](v7, "paymentWebServiceContextData");
      v18 = (void *)objc_claimAutoreleasedReturnValue();
      v19 = objc_opt_class();
      NPKSecureUnarchiveObject(v18, v19);
      v20 = objc_claimAutoreleasedReturnValue();
      v21 = *(_QWORD *)(*(_QWORD *)(a1 + 80) + 8);
      v22 = *(void **)(v21 + 40);
      *(_QWORD *)(v21 + 40) = v20;

      -[NPKProtoCompanionMigratedResponse peerPaymentWebServiceContextData](v7, "peerPaymentWebServiceContextData");
      v23 = (void *)objc_claimAutoreleasedReturnValue();
      v24 = objc_opt_class();
      NPKSecureUnarchiveObject(v23, v24);
      v25 = objc_claimAutoreleasedReturnValue();
      v26 = *(_QWORD *)(*(_QWORD *)(a1 + 88) + 8);
      v27 = *(void **)(v26 + 40);
      *(_QWORD *)(v26 + 40) = v25;

      -[NPKProtoCompanionMigratedResponse peerPaymentAccountData](v7, "peerPaymentAccountData");
      v28 = (void *)objc_claimAutoreleasedReturnValue();
      v29 = objc_opt_class();
      NPKSecureUnarchiveObject(v28, v29);
      v30 = objc_claimAutoreleasedReturnValue();
      v31 = *(_QWORD *)(*(_QWORD *)(a1 + 96) + 8);
      v32 = *(void **)(v31 + 40);
      *(_QWORD *)(v31 + 40) = v30;

    }
  }
  else
  {
    pk_Payment_log();
    v8 = objc_claimAutoreleasedReturnValue();
    v9 = os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT);

    if (v9)
    {
      pk_Payment_log();
      v10 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
      {
        v33[0] = 0;
        _os_log_impl(&dword_213518000, v10, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", (uint8_t *)v33, 2u);
      }

    }
  }

}

- (void)handleCompanionMigrationWithCompletion:(id)a3
{
  id v4;
  NSObject *v5;
  _BOOL4 v6;
  NSObject *v7;
  NSObject *v8;
  id v9;
  _QWORD v10[5];
  id v11;
  uint8_t buf[16];

  v4 = a3;
  pk_Payment_log();
  v5 = objc_claimAutoreleasedReturnValue();
  v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    pk_Payment_log();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl(&dword_213518000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Telling watch to handle companion migration", buf, 2u);
    }

  }
  -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
  v8 = objc_claimAutoreleasedReturnValue();
  v10[0] = MEMORY[0x24BDAC760];
  v10[1] = 3221225472;
  v10[2] = __84__NPKPaymentWebServiceCompanionTargetDevice_handleCompanionMigrationWithCompletion___block_invoke;
  v10[3] = &unk_24CFE7E90;
  v10[4] = self;
  v11 = v4;
  v9 = v4;
  dispatch_sync(v8, v10);

}

void __84__NPKPaymentWebServiceCompanionTargetDevice_handleCompanionMigrationWithCompletion___block_invoke(uint64_t a1)
{
  NPKProtoCompanionMigratedRequest *v2;
  id v3;
  void *v4;
  void *v5;
  void *v6;
  NSObject *v7;
  void *v8;
  void *v9;
  void *v10;
  NSObject *v11;
  NSObject *v12;
  NSObject *v13;
  _BOOL4 v14;
  NSObject *v15;
  uint64_t v16;
  NSObject *v17;
  _BOOL4 v18;
  _QWORD v19[4];
  id v20;
  uint8_t buf[4];
  void *v22;
  uint64_t v23;

  v23 = *MEMORY[0x24BDAC8D0];
  v2 = objc_alloc_init(NPKProtoCompanionMigratedRequest);
  v3 = objc_alloc(MEMORY[0x24BE4FE40]);
  -[NPKProtoCompanionMigratedRequest data](v2, "data");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = (void *)objc_msgSend(v3, "initWithProtobufData:type:isResponse:", v4, 30, 0);

  objc_msgSend(*(id *)(a1 + 32), "_sendProtobuf:responseExpected:", v5, 1);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  if (v6)
  {
    if (*(_QWORD *)(a1 + 40))
    {
      v7 = MEMORY[0x2199B6780]();
      v19[0] = MEMORY[0x24BDAC760];
      v19[1] = 3221225472;
      v19[2] = __84__NPKPaymentWebServiceCompanionTargetDevice_handleCompanionMigrationWithCompletion___block_invoke_2;
      v19[3] = &unk_24CFE7B80;
      v20 = *(id *)(a1 + 40);
      v8 = (void *)MEMORY[0x2199B6780](v19);
      v9 = *(void **)(a1 + 32);
      v10 = (void *)MEMORY[0x2199B6780](v7);
      objc_msgSend(v9, "_trackOutstandingRequestWithMessageIdentifier:completionHandler:errorHandler:", v6, v10, v8);

      pk_Payment_log();
      v11 = objc_claimAutoreleasedReturnValue();
      LODWORD(v10) = os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT);

      if ((_DWORD)v10)
      {
        pk_Payment_log();
        v12 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)buf = 138412290;
          v22 = v6;
          _os_log_impl(&dword_213518000, v12, OS_LOG_TYPE_DEFAULT, "Notice: Sent companion migration event to watch with message ID %@", buf, 0xCu);
        }

      }
    }
    else
    {
      pk_Payment_log();
      v17 = objc_claimAutoreleasedReturnValue();
      v18 = os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT);

      if (!v18)
        goto LABEL_15;
      pk_Payment_log();
      v7 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 138412290;
        v22 = v6;
        _os_log_impl(&dword_213518000, v7, OS_LOG_TYPE_DEFAULT, "Warning: No response identifier for message with identifier %@", buf, 0xCu);
      }
    }
    goto LABEL_14;
  }
  pk_Payment_log();
  v13 = objc_claimAutoreleasedReturnValue();
  v14 = os_log_type_enabled(v13, OS_LOG_TYPE_ERROR);

  if (v14)
  {
    pk_Payment_log();
    v15 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 138412290;
      v22 = v5;
      _os_log_impl(&dword_213518000, v15, OS_LOG_TYPE_ERROR, "Error: No message identifier for protobuf %@", buf, 0xCu);
    }

  }
  v16 = *(_QWORD *)(a1 + 40);
  if (v16)
  {
    NPKGetIDSCommunicationError();
    v7 = objc_claimAutoreleasedReturnValue();
    (*(void (**)(uint64_t, _QWORD, NSObject *, _QWORD, _QWORD, _QWORD))(v16 + 16))(v16, 0, v7, 0, 0, 0);
LABEL_14:

  }
LABEL_15:

}

uint64_t __84__NPKPaymentWebServiceCompanionTargetDevice_handleCompanionMigrationWithCompletion___block_invoke_2(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 32);
  if (result)
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, _QWORD, _QWORD, _QWORD))(result + 16))(result, 0, a2, 0, 0, 0);
  return result;
}

- (void)handleCompanionPeerPaymentRegistration
{
  NSObject *v3;
  _BOOL4 v4;
  NSObject *v5;
  NPKProtoHandleCompanionPeerPaymentRegistrationRequest *v6;
  id v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  NSObject *v14;
  _BOOL4 v15;
  NSObject *v16;
  int v17;
  void *v18;
  _QWORD v19[2];
  _QWORD v20[3];

  v20[2] = *MEMORY[0x24BDAC8D0];
  pk_Payment_log();
  v3 = objc_claimAutoreleasedReturnValue();
  v4 = os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT);

  if (v4)
  {
    pk_Payment_log();
    v5 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      LOWORD(v17) = 0;
      _os_log_impl(&dword_213518000, v5, OS_LOG_TYPE_DEFAULT, "Notice: Sending companion peer payment registration event to watch", (uint8_t *)&v17, 2u);
    }

  }
  v6 = objc_alloc_init(NPKProtoHandleCompanionPeerPaymentRegistrationRequest);
  v7 = objc_alloc(MEMORY[0x24BE4FE40]);
  -[NPKProtoHandleCompanionPeerPaymentRegistrationRequest data](v6, "data");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v9 = (void *)objc_msgSend(v7, "initWithProtobufData:type:isResponse:", v8, 36, 0);

  v19[0] = *MEMORY[0x24BE4FB30];
  objc_msgSend(MEMORY[0x24BDD16E0], "numberWithDouble:", *MEMORY[0x24BE4FD70]);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v19[1] = *MEMORY[0x24BE4FB18];
  v20[0] = v10;
  v20[1] = CFSTR("NPKCompanionPeerPaymentRegistrationQueueOne");
  objc_msgSend(MEMORY[0x24BDBCE70], "dictionaryWithObjects:forKeys:count:", v20, v19, 2);
  v11 = (void *)objc_claimAutoreleasedReturnValue();

  -[NPKPaymentWebServiceCompanionTargetDevice provisioningService](self, "provisioningService");
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  NPKProtoSendWithOptions(v12, v9, 200, 0, 0, &__block_literal_global_601, v11);
  v13 = (void *)objc_claimAutoreleasedReturnValue();

  pk_Payment_log();
  v14 = objc_claimAutoreleasedReturnValue();
  v15 = os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT);

  if (v15)
  {
    pk_Payment_log();
    v16 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
    {
      v17 = 138412290;
      v18 = v13;
      _os_log_impl(&dword_213518000, v16, OS_LOG_TYPE_DEFAULT, "Notice: Sent companion peer payment registration event to watch with message ID %@", (uint8_t *)&v17, 0xCu);
    }

  }
}

void __83__NPKPaymentWebServiceCompanionTargetDevice_handleCompanionPeerPaymentRegistration__block_invoke(uint64_t a1, void *a2)
{
  id v2;
  NSObject *v3;
  _BOOL4 v4;
  NSObject *v5;
  int v6;
  id v7;
  uint64_t v8;

  v8 = *MEMORY[0x24BDAC8D0];
  v2 = a2;
  pk_Payment_log();
  v3 = objc_claimAutoreleasedReturnValue();
  v4 = os_log_type_enabled(v3, OS_LOG_TYPE_ERROR);

  if (v4)
  {
    pk_Payment_log();
    v5 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
    {
      v6 = 138412290;
      v7 = v2;
      _os_log_impl(&dword_213518000, v5, OS_LOG_TYPE_ERROR, "Error: Failed to send companion peer payment registration event to watch %@!", (uint8_t *)&v6, 0xCu);
    }

  }
}

- (void)handleCompanioniCloudSignout
{
  NSObject *v3;
  _BOOL4 v4;
  NSObject *v5;
  NPKProtoHandleCompanioniCloudSignoutRequest *v6;
  id v7;
  void *v8;
  void *v9;
  uint64_t v10;
  void *v11;
  void *v12;
  void *v13;
  NSObject *v14;
  _BOOL4 v15;
  NSObject *v16;
  int v17;
  void *v18;
  _QWORD v19[2];
  _QWORD v20[3];

  v20[2] = *MEMORY[0x24BDAC8D0];
  pk_Payment_log();
  v3 = objc_claimAutoreleasedReturnValue();
  v4 = os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT);

  if (v4)
  {
    pk_Payment_log();
    v5 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      LOWORD(v17) = 0;
      _os_log_impl(&dword_213518000, v5, OS_LOG_TYPE_DEFAULT, "Notice: Sending companion iCloud signout event to watch", (uint8_t *)&v17, 2u);
    }

  }
  v6 = objc_alloc_init(NPKProtoHandleCompanioniCloudSignoutRequest);
  v7 = objc_alloc(MEMORY[0x24BE4FE40]);
  -[NPKProtoHandleCompanioniCloudSignoutRequest data](v6, "data");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v9 = (void *)objc_msgSend(v7, "initWithProtobufData:type:isResponse:", v8, 49, 0);

  v10 = *MEMORY[0x24BE4FB18];
  v19[0] = *MEMORY[0x24BE4FB30];
  v19[1] = v10;
  v20[0] = &unk_24D056668;
  v20[1] = CFSTR("NPKCompanioniCloudSignoutQueueOne");
  objc_msgSend(MEMORY[0x24BDBCE70], "dictionaryWithObjects:forKeys:count:", v20, v19, 2);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  -[NPKPaymentWebServiceCompanionTargetDevice provisioningService](self, "provisioningService");
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  NPKProtoSendWithOptions(v12, v9, 200, 0, 0, &__block_literal_global_606, v11);
  v13 = (void *)objc_claimAutoreleasedReturnValue();

  pk_Payment_log();
  v14 = objc_claimAutoreleasedReturnValue();
  v15 = os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT);

  if (v15)
  {
    pk_Payment_log();
    v16 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
    {
      v17 = 138412290;
      v18 = v13;
      _os_log_impl(&dword_213518000, v16, OS_LOG_TYPE_DEFAULT, "Notice: Sent companion iCloud signout event to watch with message ID %@", (uint8_t *)&v17, 0xCu);
    }

  }
}

void __73__NPKPaymentWebServiceCompanionTargetDevice_handleCompanioniCloudSignout__block_invoke(uint64_t a1, void *a2)
{
  id v2;
  NSObject *v3;
  _BOOL4 v4;
  NSObject *v5;
  int v6;
  id v7;
  uint64_t v8;

  v8 = *MEMORY[0x24BDAC8D0];
  v2 = a2;
  pk_Payment_log();
  v3 = objc_claimAutoreleasedReturnValue();
  v4 = os_log_type_enabled(v3, OS_LOG_TYPE_ERROR);

  if (v4)
  {
    pk_Payment_log();
    v5 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
    {
      v6 = 138412290;
      v7 = v2;
      _os_log_impl(&dword_213518000, v5, OS_LOG_TYPE_ERROR, "Error: Failed to send iCloud signout event to watch %@!", (uint8_t *)&v6, 0xCu);
    }

  }
}

- (void)handleWebServiceContextDidChangeRequest:(id)a3
{
  id v4;
  NPKProtoWebServiceContextDidChangeRequest *v5;
  void *v6;
  NPKProtoWebServiceContextDidChangeRequest *v7;
  void *v8;
  NSObject *v9;
  void *v10;
  NSObject *v11;
  _BOOL4 v12;
  NSObject *v13;
  NSObject *v14;
  _BOOL4 v15;
  NSObject *v16;
  void *v17;
  void *v18;
  void *v19;
  const __CFString *v20;
  void *v21;
  int v22;
  void *v23;
  __int16 v24;
  const __CFString *v25;
  uint64_t v26;

  v26 = *MEMORY[0x24BDAC8D0];
  v4 = a3;
  v5 = [NPKProtoWebServiceContextDidChangeRequest alloc];
  objc_msgSend(v4, "data");
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  v7 = -[NPKProtoWebServiceContextDidChangeRequest initWithData:](v5, "initWithData:", v6);
  -[NPKProtoWebServiceContextDidChangeRequest webServiceContextBytes](v7, "webServiceContextBytes");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v9 = objc_opt_class();
  NPKSecureUnarchiveObject(v8, v9);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  pk_Payment_log();
  v11 = objc_claimAutoreleasedReturnValue();
  v12 = os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT);

  if (v12)
  {
    pk_Payment_log();
    v13 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
    {
      v22 = 138412290;
      v23 = v10;
      _os_log_impl(&dword_213518000, v13, OS_LOG_TYPE_DEFAULT, "Notice: Got updated web service context from watch: %@", (uint8_t *)&v22, 0xCu);
    }

  }
  if (v10)
  {
    pk_Payment_log();
    v14 = objc_claimAutoreleasedReturnValue();
    v15 = os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT);

    if (v15)
    {
      pk_Payment_log();
      v16 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
      {
        objc_msgSend(v10, "primaryRegion");
        v17 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v17, "applyServiceURL");
        v18 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v10, "primaryRegion");
        v19 = (void *)objc_claimAutoreleasedReturnValue();
        v20 = CFSTR("YES");
        if (!v19)
          v20 = CFSTR("NO");
        v22 = 138412546;
        v23 = v18;
        v24 = 2112;
        v25 = v20;
        _os_log_impl(&dword_213518000, v16, OS_LOG_TYPE_DEFAULT, "Notice: (account-pass-context) received updated web service context applyServiceURL %@ primaryRegion %@", (uint8_t *)&v22, 0x16u);

      }
    }
    -[NPKPaymentWebServiceCompanionTargetDevice delegate](self, "delegate");
    v21 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v21, "handlePaymentWebServiceContextFromWatch:", v10);

  }
}

- (void)handleWebServiceContextNeededRequest:(id)a3
{
  NSObject *v4;
  _BOOL4 v5;
  NSObject *v6;
  void *v7;
  uint8_t v8[16];

  pk_Payment_log();
  v4 = objc_claimAutoreleasedReturnValue();
  v5 = os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT);

  if (v5)
  {
    pk_Payment_log();
    v6 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)v8 = 0;
      _os_log_impl(&dword_213518000, v6, OS_LOG_TYPE_DEFAULT, "Notice: Watch requested web service context", v8, 2u);
    }

  }
  -[NPKPaymentWebServiceCompanionTargetDevice delegate](self, "delegate");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "sendWebServiceContextToWatch");

}

- (void)handleShowPaymentSetupRequest:(id)a3
{
  id v4;
  NPKProtoShowPaymentSetupRequest *v5;
  void *v6;
  NPKProtoShowPaymentSetupRequest *v7;
  void *v8;
  NSObject *v9;
  _BOOL4 v10;
  NSObject *v11;
  void *v12;
  int v13;
  void *v14;
  uint64_t v15;

  v15 = *MEMORY[0x24BDAC8D0];
  v4 = a3;
  v5 = [NPKProtoShowPaymentSetupRequest alloc];
  objc_msgSend(v4, "data");
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  v7 = -[NPKProtoShowPaymentSetupRequest initWithData:](v5, "initWithData:", v6);
  -[NPKProtoShowPaymentSetupRequest appDisplayName](v7, "appDisplayName");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  pk_Payment_log();
  v9 = objc_claimAutoreleasedReturnValue();
  v10 = os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT);

  if (v10)
  {
    pk_Payment_log();
    v11 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
    {
      v13 = 138412290;
      v14 = v8;
      _os_log_impl(&dword_213518000, v11, OS_LOG_TYPE_DEFAULT, "Notice: Watch requested that we show payment setup for app %@", (uint8_t *)&v13, 0xCu);
    }

  }
  -[NPKPaymentWebServiceCompanionTargetDevice delegate](self, "delegate");
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v12, "showPaymentSetupForAppDisplayName:", v8);

}

- (void)handleTransactionDefaultsNeededRequest:(id)a3
{
  NSObject *v4;
  _BOOL4 v5;
  NSObject *v6;
  void *v7;
  uint8_t v8[16];

  pk_Payment_log();
  v4 = objc_claimAutoreleasedReturnValue();
  v5 = os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT);

  if (v5)
  {
    pk_Payment_log();
    v6 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)v8 = 0;
      _os_log_impl(&dword_213518000, v6, OS_LOG_TYPE_DEFAULT, "Notice: Watch requested transaction defaults", v8, 2u);
    }

  }
  -[NPKPaymentWebServiceCompanionTargetDevice delegate](self, "delegate");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "sendPaymentOptionsDefaultsToWatch");

}

- (void)handleUpdatedPeerPaymentWebServiceContext:(id)a3
{
  id v4;
  NSObject *v5;
  _BOOL4 v6;
  NSObject *v7;
  NPKProtoPeerPaymentWebServiceContextDidChangeRequest *v8;
  void *v9;
  NPKProtoPeerPaymentWebServiceContextDidChangeRequest *v10;
  void *v11;
  NSObject *v12;
  void *v13;
  void *v14;
  NSObject *v15;
  void *v16;
  NSObject *v17;
  NSObject *v18;
  _BOOL4 v19;
  uint8_t v20[16];
  uint8_t buf[16];

  v4 = a3;
  pk_Payment_log();
  v5 = objc_claimAutoreleasedReturnValue();
  v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    pk_Payment_log();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl(&dword_213518000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Watch provided updated peer payment context and account", buf, 2u);
    }

  }
  v8 = [NPKProtoPeerPaymentWebServiceContextDidChangeRequest alloc];
  objc_msgSend(v4, "data");
  v9 = (void *)objc_claimAutoreleasedReturnValue();

  v10 = -[NPKProtoPeerPaymentWebServiceContextDidChangeRequest initWithData:](v8, "initWithData:", v9);
  -[NPKProtoPeerPaymentWebServiceContextDidChangeRequest peerPaymentWebServiceContextData](v10, "peerPaymentWebServiceContextData");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  v12 = objc_opt_class();
  NPKSecureUnarchiveObject(v11, v12);
  v13 = (void *)objc_claimAutoreleasedReturnValue();

  -[NPKProtoPeerPaymentWebServiceContextDidChangeRequest peerPaymentAccountData](v10, "peerPaymentAccountData");
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  v15 = objc_opt_class();
  NPKSecureUnarchiveObject(v14, v15);
  v16 = (void *)objc_claimAutoreleasedReturnValue();

  if (v13)
  {
    -[NPKPaymentWebServiceCompanionTargetDevice delegate](self, "delegate");
    v17 = objc_claimAutoreleasedReturnValue();
    -[NSObject handleUpdatedPeerPaymentWebServiceContext:account:](v17, "handleUpdatedPeerPaymentWebServiceContext:account:", v13, v16);
  }
  else
  {
    pk_Payment_log();
    v18 = objc_claimAutoreleasedReturnValue();
    v19 = os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT);

    if (!v19)
      goto LABEL_8;
    pk_Payment_log();
    v17 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)v20 = 0;
      _os_log_impl(&dword_213518000, v17, OS_LOG_TYPE_DEFAULT, "Warning: Got updated peer payment web service message, but could not decode context", v20, 2u);
    }
  }

LABEL_8:
}

- (BOOL)paymentWebServiceSupportsPeerPaymentRegistration:(id)a3
{
  id v4;
  void *v5;
  char v6;

  v4 = a3;
  -[NPKPaymentWebServiceCompanionTargetDevice deviceRegion](self, "deviceRegion");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = NPKShouldAllowPeerPaymentRegistrationForWebService(v4, v5);

  return v6;
}

- (void)claimSecureElementForCurrentUserWithCompletion:(id)a3
{
  if (a3)
    (*((void (**)(id, uint64_t))a3 + 2))(a3, 1);
}

- (void)paymentWebService:(id)a3 requestPassUpgrade:(id)a4 pass:(id)a5 completion:(id)a6
{
  id v9;
  id v10;
  id v11;
  id v12;
  _QWORD v13[4];
  id v14;
  id v15;

  v9 = a5;
  v10 = a6;
  v13[0] = MEMORY[0x24BDAC760];
  v13[1] = 3221225472;
  v13[2] = __98__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_requestPassUpgrade_pass_completion___block_invoke;
  v13[3] = &unk_24CFED7F8;
  v14 = v9;
  v15 = v10;
  v11 = v10;
  v12 = v9;
  -[NPKPaymentWebServiceCompanionTargetDevice remotePassUpgradeWithRequest:pass:requireAuthorization:notifyUserOnPairedDevice:updateBlock:](self, "remotePassUpgradeWithRequest:pass:requireAuthorization:notifyUserOnPairedDevice:updateBlock:", a4, v12, 1, 0, v13);

}

void __98__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_requestPassUpgrade_pass_completion___block_invoke(uint64_t a1, void *a2, void *a3, uint64_t a4, unint64_t a5)
{
  id v8;
  id v9;
  NSObject *v10;
  _BOOL4 v11;
  NSObject *v12;
  void *v13;
  void *v14;
  uint64_t v15;
  int v16;
  void *v17;
  __int16 v18;
  void *v19;
  __int16 v20;
  id v21;
  __int16 v22;
  id v23;
  uint64_t v24;

  v24 = *MEMORY[0x24BDAC8D0];
  v8 = a2;
  v9 = a3;
  pk_General_log();
  v10 = objc_claimAutoreleasedReturnValue();
  v11 = os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT);

  if (v11)
  {
    pk_General_log();
    v12 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend(*(id *)(a1 + 32), "uniqueID");
      v13 = (void *)objc_claimAutoreleasedReturnValue();
      NSStringFromNPKRemotePassUpgradeStatus(a5);
      v14 = (void *)objc_claimAutoreleasedReturnValue();
      v16 = 138413058;
      v17 = v13;
      v18 = 2112;
      v19 = v14;
      v20 = 2112;
      v21 = v9;
      v22 = 2112;
      v23 = v8;
      _os_log_impl(&dword_213518000, v12, OS_LOG_TYPE_DEFAULT, "Notice: Target Device: Received Remote pass upgrade updated for  pass with uniqueID:%@ received, Status:%@ updatedPass:%@ error:%@", (uint8_t *)&v16, 0x2Au);

    }
  }
  v15 = *(_QWORD *)(a1 + 40);
  if (v15 && (v8 || a5 == 2))
    (*(void (**)(uint64_t, id, id))(v15 + 16))(v15, v8, v9);

}

- (BOOL)willPassWithUniqueIdentifierAutomaticallyBecomeDefault:(id)a3
{
  id v4;
  void *v5;
  NSObject *v6;
  _BOOL4 v7;
  NSObject *v8;
  const __CFString *v9;
  BOOL v10;
  _QWORD v12[5];
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  char v16;
  uint8_t buf[4];
  id v18;
  __int16 v19;
  const __CFString *v20;
  uint64_t v21;

  v21 = *MEMORY[0x24BDAC8D0];
  v4 = a3;
  v13 = 0;
  v14 = &v13;
  v15 = 0x2020000000;
  v16 = 0;
  -[NPKPaymentWebServiceCompanionTargetDevice companionAgentConnection](self, "companionAgentConnection");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v12[0] = MEMORY[0x24BDAC760];
  v12[1] = 3221225472;
  v12[2] = __100__NPKPaymentWebServiceCompanionTargetDevice_willPassWithUniqueIdentifierAutomaticallyBecomeDefault___block_invoke;
  v12[3] = &unk_24CFED820;
  v12[4] = &v13;
  objc_msgSend(v5, "willPassWithUniqueIdentifierAutomaticallyBecomeDefault:completion:", v4, v12);
  pk_Payment_log();
  v6 = objc_claimAutoreleasedReturnValue();
  v7 = os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT);

  if (v7)
  {
    pk_Payment_log();
    v8 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      if (*((_BYTE *)v14 + 24))
        v9 = CFSTR("YES");
      else
        v9 = CFSTR("NO");
      *(_DWORD *)buf = 138412546;
      v18 = v4;
      v19 = 2112;
      v20 = v9;
      _os_log_impl(&dword_213518000, v8, OS_LOG_TYPE_DEFAULT, "Notice: Target Device willPassWithUniqueIdentifierAutomaticallyBecomeDefault for %@ returns %@", buf, 0x16u);
    }

  }
  v10 = *((_BYTE *)v14 + 24) != 0;

  _Block_object_dispose(&v13, 8);
  return v10;
}

uint64_t __100__NPKPaymentWebServiceCompanionTargetDevice_willPassWithUniqueIdentifierAutomaticallyBecomeDefault___block_invoke(uint64_t result, char a2)
{
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(result + 32) + 8) + 24) = a2;
  return result;
}

- (void)consistencyCheck
{
  id v2;

  -[NPKPaymentWebServiceCompanionTargetDevice companionAgentConnection](self, "companionAgentConnection");
  v2 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "consistencyCheckWithCompletion:", 0);

}

- (void)currentPasscodeMeetsUpgradedPasscodePolicy:(id)a3
{
  id v4;
  NSObject *v5;
  _BOOL4 v6;
  NSObject *v7;
  id v8;
  _QWORD v9[4];
  id v10;
  uint8_t buf[16];

  v4 = a3;
  pk_Payment_log();
  v5 = objc_claimAutoreleasedReturnValue();
  v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    pk_Payment_log();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl(&dword_213518000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Target device currentPasscodeMeetsUpgradedPasscodePolicy:", buf, 2u);
    }

  }
  v9[0] = MEMORY[0x24BDAC760];
  v9[1] = 3221225472;
  v9[2] = __88__NPKPaymentWebServiceCompanionTargetDevice_currentPasscodeMeetsUpgradedPasscodePolicy___block_invoke;
  v9[3] = &unk_24CFE7940;
  v10 = v4;
  v8 = v4;
  -[NPKPaymentWebServiceCompanionTargetDevice _checkUpgradedPasscodePolicyByApplyingRestrictions:applyBackgroundEnforcementIfNecessary:completion:](self, "_checkUpgradedPasscodePolicyByApplyingRestrictions:applyBackgroundEnforcementIfNecessary:completion:", 0, 0, v9);

}

uint64_t __88__NPKPaymentWebServiceCompanionTargetDevice_currentPasscodeMeetsUpgradedPasscodePolicy___block_invoke(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 32);
  if (result)
    return (*(uint64_t (**)(void))(result + 16))();
  return result;
}

- (void)enforceUpgradedPasscodePolicyWithCompletion:(id)a3
{
  id v4;
  NSObject *v5;
  _BOOL4 v6;
  NSObject *v7;
  uint8_t v8[16];

  v4 = a3;
  pk_Payment_log();
  v5 = objc_claimAutoreleasedReturnValue();
  v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    pk_Payment_log();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)v8 = 0;
      _os_log_impl(&dword_213518000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Target device enforceUpgradedPasscodePolicyWithCompletion", v8, 2u);
    }

  }
  -[NPKPaymentWebServiceCompanionTargetDevice _checkUpgradedPasscodePolicyByApplyingRestrictions:applyBackgroundEnforcementIfNecessary:completion:](self, "_checkUpgradedPasscodePolicyByApplyingRestrictions:applyBackgroundEnforcementIfNecessary:completion:", NPKIsCurrentlyPairing(), 1, v4);

}

- (void)_checkUpgradedPasscodePolicyByApplyingRestrictions:(BOOL)a3 applyBackgroundEnforcementIfNecessary:(BOOL)a4 completion:(id)a5
{
  id v8;
  void *v9;
  void *v10;
  int v11;
  NSObject *v12;
  NSObject *v13;
  void *v14;
  NSObject *v15;
  NSObject *v16;
  _BOOL4 v17;
  NSObject *v18;
  _QWORD block[5];
  id v20;
  BOOL v21;
  BOOL v22;
  uint8_t buf[4];
  void *v24;
  uint64_t v25;

  v25 = *MEMORY[0x24BDAC8D0];
  v8 = a5;
  NPKPairedOrPairingDevice();
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v10 = (void *)objc_msgSend(objc_alloc(MEMORY[0x24BDD1880]), "initWithUUIDString:", CFSTR("B68E1DBD-8CE4-4684-8F65-FF0AF2040D4E"));
  v11 = objc_msgSend(v9, "supportsCapability:", v10);

  pk_Payment_log();
  v12 = objc_claimAutoreleasedReturnValue();
  LODWORD(v10) = os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT);

  if ((_DWORD)v10)
  {
    pk_Payment_log();
    v13 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
    {
      NSStringFromBOOL();
      v14 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138412290;
      v24 = v14;
      _os_log_impl(&dword_213518000, v13, OS_LOG_TYPE_DEFAULT, "Notice: Supports inline passcode policy enforcement: %@", buf, 0xCu);

    }
  }
  if (v11)
  {
    -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
    v15 = objc_claimAutoreleasedReturnValue();
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 3221225472;
    block[2] = __145__NPKPaymentWebServiceCompanionTargetDevice__checkUpgradedPasscodePolicyByApplyingRestrictions_applyBackgroundEnforcementIfNecessary_completion___block_invoke;
    block[3] = &unk_24CFED848;
    v21 = a3;
    v22 = a4;
    block[4] = self;
    v20 = v8;
    dispatch_sync(v15, block);

  }
  else
  {
    pk_Payment_log();
    v16 = objc_claimAutoreleasedReturnValue();
    v17 = os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT);

    if (v17)
    {
      pk_Payment_log();
      v18 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)buf = 0;
        _os_log_impl(&dword_213518000, v18, OS_LOG_TYPE_DEFAULT, "Notice: Cannot enforce passcode policy on an unsupported OS. Advancing the flow by indicating that the device meets the policy.", buf, 2u);
      }

    }
    (*((void (**)(id, uint64_t, _QWORD))v8 + 2))(v8, 1, 0);
  }

}

void __145__NPKPaymentWebServiceCompanionTargetDevice__checkUpgradedPasscodePolicyByApplyingRestrictions_applyBackgroundEnforcementIfNecessary_completion___block_invoke(uint64_t a1)
{
  NPKProtoCheckPasscodePolicyComplianceRequest *v2;
  id v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  NSObject *v9;
  void *v10;
  void *v11;
  void *v12;
  NSObject *v13;
  _BOOL4 v14;
  const char *v15;
  NSObject *v16;
  os_log_type_t v17;
  NSObject *v18;
  _BOOL4 v19;
  _QWORD v20[4];
  id v21;
  uint8_t buf[4];
  void *v23;
  uint64_t v24;
  _QWORD v25[2];

  v25[1] = *MEMORY[0x24BDAC8D0];
  v2 = objc_alloc_init(NPKProtoCheckPasscodePolicyComplianceRequest);
  -[NPKProtoCheckPasscodePolicyComplianceRequest setEnforcedPolicy:](v2, "setEnforcedPolicy:", 0);
  -[NPKProtoCheckPasscodePolicyComplianceRequest setApplyRestrictions:](v2, "setApplyRestrictions:", *(unsigned __int8 *)(a1 + 48));
  -[NPKProtoCheckPasscodePolicyComplianceRequest setApplyBackgroundEnforcementIfNecessary:](v2, "setApplyBackgroundEnforcementIfNecessary:", *(unsigned __int8 *)(a1 + 49));
  v3 = objc_alloc(MEMORY[0x24BE4FE40]);
  -[NPKProtoCheckPasscodePolicyComplianceRequest data](v2, "data");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = (void *)objc_msgSend(v3, "initWithProtobufData:type:isResponse:", v4, 61, 0);

  v6 = *(void **)(a1 + 32);
  v24 = *MEMORY[0x24BE4FB30];
  v25[0] = &unk_24D0566F0;
  objc_msgSend(MEMORY[0x24BDBCE70], "dictionaryWithObjects:forKeys:count:", v25, &v24, 1);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "_sendProtobuf:responseExpected:extraOptions:", v5, 1, v7);
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  if (v8)
  {
    if (*(_QWORD *)(a1 + 40))
    {
      v9 = MEMORY[0x2199B6780]();
      v20[0] = MEMORY[0x24BDAC760];
      v20[1] = 3221225472;
      v20[2] = __145__NPKPaymentWebServiceCompanionTargetDevice__checkUpgradedPasscodePolicyByApplyingRestrictions_applyBackgroundEnforcementIfNecessary_completion___block_invoke_2;
      v20[3] = &unk_24CFE7B80;
      v21 = *(id *)(a1 + 40);
      v10 = (void *)MEMORY[0x2199B6780](v20);
      v11 = *(void **)(a1 + 32);
      v12 = (void *)MEMORY[0x2199B6780](v9);
      objc_msgSend(v11, "_trackOutstandingRequestWithMessageIdentifier:completionHandler:errorHandler:", v8, v12, v10);

LABEL_11:
      goto LABEL_12;
    }
    pk_Payment_log();
    v18 = objc_claimAutoreleasedReturnValue();
    v19 = os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT);

    if (v19)
    {
      pk_Payment_log();
      v9 = objc_claimAutoreleasedReturnValue();
      if (!os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
        goto LABEL_11;
      *(_DWORD *)buf = 138412290;
      v23 = v8;
      v15 = "Warning: No response expected for message with identifier %@";
      v16 = v9;
      v17 = OS_LOG_TYPE_DEFAULT;
      goto LABEL_10;
    }
  }
  else
  {
    pk_Payment_log();
    v13 = objc_claimAutoreleasedReturnValue();
    v14 = os_log_type_enabled(v13, OS_LOG_TYPE_ERROR);

    if (v14)
    {
      pk_Payment_log();
      v9 = objc_claimAutoreleasedReturnValue();
      if (!os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
        goto LABEL_11;
      *(_DWORD *)buf = 138412290;
      v23 = v5;
      v15 = "Error: No message identifier for protobuf %@";
      v16 = v9;
      v17 = OS_LOG_TYPE_ERROR;
LABEL_10:
      _os_log_impl(&dword_213518000, v16, v17, v15, buf, 0xCu);
      goto LABEL_11;
    }
  }
LABEL_12:

}

uint64_t __145__NPKPaymentWebServiceCompanionTargetDevice__checkUpgradedPasscodePolicyByApplyingRestrictions_applyBackgroundEnforcementIfNecessary_completion___block_invoke_2(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 32);
  if (result)
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(result + 16))(result, 0, a2);
  return result;
}

- (void)handleCheckUpgradedPasscodePolicyResponse:(id)a3
{
  id v4;
  NSObject *v5;
  _BOOL4 v6;
  NSObject *v7;
  void *v8;
  void *v9;
  void *v10;
  NSObject *v11;
  NSObject *v12;
  _BOOL4 v13;
  NSObject *v14;
  NSObject *v15;
  _BOOL4 v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  const __CFString *v20;
  uint64_t v21;
  _QWORD v22[5];
  id v23;
  id v24;
  __int128 *p_buf;
  uint64_t *v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t (*v31)(uint64_t, uint64_t);
  void (*v32)(uint64_t);
  id v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  char v37;
  uint8_t v38[4];
  const __CFString *v39;
  __int16 v40;
  uint64_t v41;
  __int128 buf;
  uint64_t v43;
  uint64_t (*v44)(uint64_t, uint64_t);
  void (*v45)(uint64_t);
  id v46;
  uint64_t v47;

  v47 = *MEMORY[0x24BDAC8D0];
  v4 = a3;
  pk_Payment_log();
  v5 = objc_claimAutoreleasedReturnValue();
  v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    pk_Payment_log();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend(v4, "npkDescription");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      LODWORD(buf) = 138412290;
      *(_QWORD *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_213518000, v7, OS_LOG_TYPE_DEFAULT, "Notice: handleCheckUpgradedPasscodePolicyResponse: incoming protobuf %@", (uint8_t *)&buf, 0xCu);

    }
  }
  objc_msgSend(v4, "context");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "incomingResponseIdentifier");
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  *(_QWORD *)&buf = 0;
  *((_QWORD *)&buf + 1) = &buf;
  v43 = 0x3032000000;
  v44 = __Block_byref_object_copy__342;
  v45 = __Block_byref_object_dispose__343;
  v46 = 0;
  v34 = 0;
  v35 = &v34;
  v36 = 0x2020000000;
  v37 = 0;
  v28 = 0;
  v29 = &v28;
  v30 = 0x3032000000;
  v31 = __Block_byref_object_copy__23;
  v32 = __Block_byref_object_dispose__23;
  v33 = 0;
  if (v10)
  {
    -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
    v11 = objc_claimAutoreleasedReturnValue();
    v22[0] = MEMORY[0x24BDAC760];
    v22[1] = 3221225472;
    v22[2] = __87__NPKPaymentWebServiceCompanionTargetDevice_handleCheckUpgradedPasscodePolicyResponse___block_invoke;
    v22[3] = &unk_24CFED060;
    v22[4] = self;
    v23 = v10;
    v24 = v4;
    p_buf = &buf;
    v26 = &v34;
    v27 = &v28;
    dispatch_sync(v11, v22);

  }
  else
  {
    pk_Payment_log();
    v12 = objc_claimAutoreleasedReturnValue();
    v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      pk_Payment_log();
      v14 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)v38 = 0;
        _os_log_impl(&dword_213518000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v38, 2u);
      }

    }
  }
  if (*(_QWORD *)(*((_QWORD *)&buf + 1) + 40))
  {
    pk_Payment_log();
    v15 = objc_claimAutoreleasedReturnValue();
    v16 = os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT);

    if (v16)
    {
      pk_Payment_log();
      v19 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT))
      {
        if (*((_BYTE *)v35 + 24))
          v20 = CFSTR("YES");
        else
          v20 = CFSTR("NO");
        v21 = v29[5];
        *(_DWORD *)v38 = 138412546;
        v39 = v20;
        v40 = 2112;
        v41 = v21;
        _os_log_impl(&dword_213518000, v19, OS_LOG_TYPE_DEFAULT, "Notice: handleCheckUpgradedPasscodePolicyResponse: invoking completion with passcodeMeetsPolicy: %@, error: %@", v38, 0x16u);
      }

    }
    (*(void (**)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(*((_QWORD *)&buf + 1) + 40) + 16))(*(_QWORD *)(*((_QWORD *)&buf + 1) + 40), *((unsigned __int8 *)v35 + 24), v29[5], v17, v18);
  }
  _Block_object_dispose(&v28, 8);

  _Block_object_dispose(&v34, 8);
  _Block_object_dispose(&buf, 8);

}

void __87__NPKPaymentWebServiceCompanionTargetDevice_handleCheckUpgradedPasscodePolicyResponse___block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;
  NPKProtoCheckPasscodePolicyComplianceResponse *v4;
  void *v5;
  NSObject *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  NSObject *v12;
  void *v13;
  NSObject *v14;
  _BOOL4 v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  void *v27;
  uint8_t buf[8];
  _QWORD v29[2];
  _QWORD v30[3];

  v30[2] = *MEMORY[0x24BDAC8D0];
  objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "objectForKey:", *(_QWORD *)(a1 + 40));
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  if (v3)
  {
    v4 = [NPKProtoCheckPasscodePolicyComplianceResponse alloc];
    objc_msgSend(*(id *)(a1 + 48), "data");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    v6 = -[NPKProtoCheckPasscodePolicyComplianceResponse initWithData:](v4, "initWithData:", v5);

    objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "removeObjectForKey:", *(_QWORD *)(a1 + 40));

    objc_msgSend(v3, "completionHandler");
    v8 = objc_claimAutoreleasedReturnValue();
    v9 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
    v10 = *(void **)(v9 + 40);
    *(_QWORD *)(v9 + 40) = v8;

    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 24) = -[NSObject passcodeMeetsPolicy](v6, "passcodeMeetsPolicy");
    if (-[NSObject hasErrorData](v6, "hasErrorData"))
    {
      -[NSObject errorData](v6, "errorData");
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      v12 = objc_opt_class();
      NPKSecureUnarchiveObject(v11, v12);
      v13 = (void *)objc_claimAutoreleasedReturnValue();

    }
    else
    {
      v13 = 0;
    }
    objc_msgSend(v13, "domain");
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    if (objc_msgSend(v16, "isEqualToString:", CFSTR("com.apple.NPKErrorDomain")))
    {
      v17 = objc_msgSend(v13, "code");

      if (v17 == -1004)
      {
        v27 = (void *)MEMORY[0x24BDD1540];
        v18 = *MEMORY[0x24BE6F2A8];
        v29[0] = *MEMORY[0x24BDD0FD8];
        objc_msgSend(MEMORY[0x24BDD1488], "bundleForClass:", objc_opt_class());
        v19 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v19, "localizedStringForKey:value:table:", CFSTR("UNLOCK_REQUIRED_ALERT_TITLE"), &stru_24CFF06D8, CFSTR("NanoPassKit"));
        v20 = (void *)objc_claimAutoreleasedReturnValue();
        v30[0] = v20;
        v29[1] = *MEMORY[0x24BDD0FF0];
        objc_msgSend(MEMORY[0x24BDD1488], "bundleForClass:", objc_opt_class());
        v21 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v21, "localizedStringForKey:value:table:", CFSTR("UNLOCK_REQUIRED_ALERT_MESSAGE"), &stru_24CFF06D8, CFSTR("NanoPassKit"));
        v22 = (void *)objc_claimAutoreleasedReturnValue();
        v30[1] = v22;
        objc_msgSend(MEMORY[0x24BDBCE70], "dictionaryWithObjects:forKeys:count:", v30, v29, 2);
        v23 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v27, "errorWithDomain:code:userInfo:", v18, 0, v23);
        v24 = objc_claimAutoreleasedReturnValue();

        v13 = (void *)v24;
      }
    }
    else
    {

    }
    v25 = *(_QWORD *)(*(_QWORD *)(a1 + 72) + 8);
    v26 = *(void **)(v25 + 40);
    *(_QWORD *)(v25 + 40) = v13;

LABEL_13:
    goto LABEL_14;
  }
  pk_Payment_log();
  v14 = objc_claimAutoreleasedReturnValue();
  v15 = os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT);

  if (v15)
  {
    pk_Payment_log();
    v6 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl(&dword_213518000, v6, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", buf, 2u);
    }
    goto LABEL_13;
  }
LABEL_14:

}

- (void)requestPasscodeUpgradeForPasscodeUpgradeFlowController:(id)a3 withVisibleViewController:(id)a4 completion:(id)a5
{
  id v8;
  id v9;
  id v10;
  NSObject *v11;
  _BOOL4 v12;
  NSObject *v13;
  uint64_t v14;
  id v15;
  id v16;
  void (**v17)(_QWORD, _QWORD, _QWORD);
  void *v18;
  void *v19;
  int v20;
  NSObject *v21;
  NSObject *v22;
  const __CFString *v23;
  NSObject *v24;
  NSObject *v25;
  _BOOL4 v26;
  NSObject *v27;
  _QWORD v28[5];
  void (**v29)(_QWORD, _QWORD, _QWORD);
  _QWORD v30[4];
  id v31;
  id v32;
  id v33;
  id location;
  uint8_t buf[4];
  const __CFString *v36;
  uint64_t v37;

  v37 = *MEMORY[0x24BDAC8D0];
  v8 = a3;
  v9 = a4;
  v10 = a5;
  pk_Payment_log();
  v11 = objc_claimAutoreleasedReturnValue();
  v12 = os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT);

  if (v12)
  {
    pk_Payment_log();
    v13 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl(&dword_213518000, v13, OS_LOG_TYPE_DEFAULT, "Notice: Target device requestPasscodeUpgradeForPasscodeUpgradeFlowController:withVisibleViewController:completion:", buf, 2u);
    }

  }
  -[NPKPaymentWebServiceCompanionTargetDevice setPasscodeUpgradeFlowController:](self, "setPasscodeUpgradeFlowController:", v8);
  objc_initWeak(&location, self);
  v14 = MEMORY[0x24BDAC760];
  v30[0] = MEMORY[0x24BDAC760];
  v30[1] = 3221225472;
  v30[2] = __137__NPKPaymentWebServiceCompanionTargetDevice_requestPasscodeUpgradeForPasscodeUpgradeFlowController_withVisibleViewController_completion___block_invoke;
  v30[3] = &unk_24CFED870;
  objc_copyWeak(&v33, &location);
  v15 = v9;
  v31 = v15;
  v16 = v10;
  v32 = v16;
  v17 = (void (**)(_QWORD, _QWORD, _QWORD))MEMORY[0x2199B6780](v30);
  NPKPairedOrPairingDevice();
  v18 = (void *)objc_claimAutoreleasedReturnValue();
  v19 = (void *)objc_msgSend(objc_alloc(MEMORY[0x24BDD1880]), "initWithUUIDString:", CFSTR("B68E1DBD-8CE4-4684-8F65-FF0AF2040D4E"));
  v20 = objc_msgSend(v18, "supportsCapability:", v19);

  pk_Payment_log();
  v21 = objc_claimAutoreleasedReturnValue();
  LODWORD(v19) = os_log_type_enabled(v21, OS_LOG_TYPE_DEFAULT);

  if ((_DWORD)v19)
  {
    pk_Payment_log();
    v22 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v22, OS_LOG_TYPE_DEFAULT))
    {
      v23 = CFSTR("NO");
      if (v20)
        v23 = CFSTR("YES");
      *(_DWORD *)buf = 138412290;
      v36 = v23;
      _os_log_impl(&dword_213518000, v22, OS_LOG_TYPE_DEFAULT, "Notice: Supports inline passcode policy enforcement: %@", buf, 0xCu);
    }

  }
  if (v20)
  {
    -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
    v24 = objc_claimAutoreleasedReturnValue();
    v28[0] = v14;
    v28[1] = 3221225472;
    v28[2] = __137__NPKPaymentWebServiceCompanionTargetDevice_requestPasscodeUpgradeForPasscodeUpgradeFlowController_withVisibleViewController_completion___block_invoke_619;
    v28[3] = &unk_24CFE7E90;
    v28[4] = self;
    v29 = v17;
    dispatch_sync(v24, v28);

  }
  else
  {
    pk_Payment_log();
    v25 = objc_claimAutoreleasedReturnValue();
    v26 = os_log_type_enabled(v25, OS_LOG_TYPE_DEFAULT);

    if (v26)
    {
      pk_Payment_log();
      v27 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v27, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)buf = 0;
        _os_log_impl(&dword_213518000, v27, OS_LOG_TYPE_DEFAULT, "Notice: Cannot apply passcode restrictions on an unsupported OS. Advancing the flow by indicating that all is well.", buf, 2u);
      }

    }
    v17[2](v17, 1, 0);
  }

  objc_destroyWeak(&v33);
  objc_destroyWeak(&location);

}

void __137__NPKPaymentWebServiceCompanionTargetDevice_requestPasscodeUpgradeForPasscodeUpgradeFlowController_withVisibleViewController_completion___block_invoke(uint64_t a1, uint64_t a2, void *a3)
{
  id v5;
  id WeakRetained;
  void *v7;
  void *v8;
  uint64_t v9;
  id v10;
  NSObject *v11;
  _BOOL4 v12;
  NSObject *v13;
  uint64_t v14;
  uint8_t v15[16];
  _QWORD v16[5];
  id v17;

  v5 = a3;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  v7 = WeakRetained;
  if (WeakRetained)
  {
    if (v5 || !(_DWORD)a2)
    {
      pk_Payment_log();
      v11 = objc_claimAutoreleasedReturnValue();
      v12 = os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT);

      if (v12)
      {
        pk_Payment_log();
        v13 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)v15 = 0;
          _os_log_impl(&dword_213518000, v13, OS_LOG_TYPE_DEFAULT, "Warning: Failed to apply passcode restrictions.", v15, 2u);
        }

      }
      v14 = *(_QWORD *)(a1 + 40);
      if (v14)
        (*(void (**)(uint64_t, uint64_t, id))(v14 + 16))(v14, a2, v5);
      objc_msgSend(v7, "setPasscodeUpgradeFlowController:", 0);
    }
    else
    {
      objc_msgSend(WeakRetained, "passcodeChangeCoordinator");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      v16[0] = MEMORY[0x24BDAC760];
      v16[1] = 3221225472;
      v16[2] = __137__NPKPaymentWebServiceCompanionTargetDevice_requestPasscodeUpgradeForPasscodeUpgradeFlowController_withVisibleViewController_completion___block_invoke_2;
      v16[3] = &unk_24CFE92E0;
      v9 = *(_QWORD *)(a1 + 32);
      v10 = *(id *)(a1 + 40);
      v16[4] = v7;
      v17 = v10;
      objc_msgSend(v8, "handleGizmoPasscodeChangeWithVisibleViewController:completion:", v9, v16);

    }
  }

}

uint64_t __137__NPKPaymentWebServiceCompanionTargetDevice_requestPasscodeUpgradeForPasscodeUpgradeFlowController_withVisibleViewController_completion___block_invoke_2(uint64_t a1)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 40);
  if (v2)
    (*(void (**)(void))(v2 + 16))();
  objc_msgSend(*(id *)(a1 + 32), "setPasscodeUpgradeFlowController:", 0);
  return objc_msgSend(*(id *)(a1 + 32), "setPasscodeChangeCoordinator:", 0);
}

void __137__NPKPaymentWebServiceCompanionTargetDevice_requestPasscodeUpgradeForPasscodeUpgradeFlowController_withVisibleViewController_completion___block_invoke_619(uint64_t a1)
{
  NPKProtoPasscodeUpgradeFlowApplyPasscodeRestrictionsRequest *v2;
  id v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  NSObject *v9;
  void *v10;
  void *v11;
  void *v12;
  NSObject *v13;
  _BOOL4 v14;
  const char *v15;
  NSObject *v16;
  os_log_type_t v17;
  NSObject *v18;
  _BOOL4 v19;
  _QWORD v20[4];
  id v21;
  uint8_t buf[4];
  void *v23;
  uint64_t v24;
  _QWORD v25[2];

  v25[1] = *MEMORY[0x24BDAC8D0];
  v2 = objc_alloc_init(NPKProtoPasscodeUpgradeFlowApplyPasscodeRestrictionsRequest);
  -[NPKProtoPasscodeUpgradeFlowApplyPasscodeRestrictionsRequest setEnforcedPolicy:](v2, "setEnforcedPolicy:", 0);
  v3 = objc_alloc(MEMORY[0x24BE4FE40]);
  -[NPKProtoPasscodeUpgradeFlowApplyPasscodeRestrictionsRequest data](v2, "data");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = (void *)objc_msgSend(v3, "initWithProtobufData:type:isResponse:", v4, 68, 0);

  v6 = *(void **)(a1 + 32);
  v24 = *MEMORY[0x24BE4FB30];
  v25[0] = &unk_24D0566F0;
  objc_msgSend(MEMORY[0x24BDBCE70], "dictionaryWithObjects:forKeys:count:", v25, &v24, 1);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "_sendProtobuf:responseExpected:extraOptions:", v5, 1, v7);
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  if (v8)
  {
    if (*(_QWORD *)(a1 + 40))
    {
      v9 = MEMORY[0x2199B6780]();
      v20[0] = MEMORY[0x24BDAC760];
      v20[1] = 3221225472;
      v20[2] = __137__NPKPaymentWebServiceCompanionTargetDevice_requestPasscodeUpgradeForPasscodeUpgradeFlowController_withVisibleViewController_completion___block_invoke_2_621;
      v20[3] = &unk_24CFE7B80;
      v21 = *(id *)(a1 + 40);
      v10 = (void *)MEMORY[0x2199B6780](v20);
      v11 = *(void **)(a1 + 32);
      v12 = (void *)MEMORY[0x2199B6780](v9);
      objc_msgSend(v11, "_trackOutstandingRequestWithMessageIdentifier:completionHandler:errorHandler:", v8, v12, v10);

LABEL_11:
      goto LABEL_12;
    }
    pk_Payment_log();
    v18 = objc_claimAutoreleasedReturnValue();
    v19 = os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT);

    if (v19)
    {
      pk_Payment_log();
      v9 = objc_claimAutoreleasedReturnValue();
      if (!os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
        goto LABEL_11;
      *(_DWORD *)buf = 138412290;
      v23 = v8;
      v15 = "Warning: No response expected for message with identifier %@";
      v16 = v9;
      v17 = OS_LOG_TYPE_DEFAULT;
      goto LABEL_10;
    }
  }
  else
  {
    pk_Payment_log();
    v13 = objc_claimAutoreleasedReturnValue();
    v14 = os_log_type_enabled(v13, OS_LOG_TYPE_ERROR);

    if (v14)
    {
      pk_Payment_log();
      v9 = objc_claimAutoreleasedReturnValue();
      if (!os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
        goto LABEL_11;
      *(_DWORD *)buf = 138412290;
      v23 = v5;
      v15 = "Error: No message identifier for protobuf %@";
      v16 = v9;
      v17 = OS_LOG_TYPE_ERROR;
LABEL_10:
      _os_log_impl(&dword_213518000, v16, v17, v15, buf, 0xCu);
      goto LABEL_11;
    }
  }
LABEL_12:

}

uint64_t __137__NPKPaymentWebServiceCompanionTargetDevice_requestPasscodeUpgradeForPasscodeUpgradeFlowController_withVisibleViewController_completion___block_invoke_2_621(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 32);
  if (result)
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(result + 16))(result, 0, a2);
  return result;
}

- (void)handleApplyRestrictionsForPasscodeUpgradeFlowControllerResponse:(id)a3
{
  id v4;
  NSObject *v5;
  _BOOL4 v6;
  NSObject *v7;
  void *v8;
  void *v9;
  void *v10;
  NSObject *v11;
  NSObject *v12;
  _BOOL4 v13;
  NSObject *v14;
  NSObject *v15;
  _BOOL4 v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  const __CFString *v20;
  uint64_t v21;
  _QWORD v22[5];
  id v23;
  id v24;
  __int128 *p_buf;
  uint64_t *v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t (*v31)(uint64_t, uint64_t);
  void (*v32)(uint64_t);
  id v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  char v37;
  uint8_t v38[4];
  const __CFString *v39;
  __int16 v40;
  uint64_t v41;
  __int128 buf;
  uint64_t v43;
  uint64_t (*v44)(uint64_t, uint64_t);
  void (*v45)(uint64_t);
  id v46;
  uint64_t v47;

  v47 = *MEMORY[0x24BDAC8D0];
  v4 = a3;
  pk_Payment_log();
  v5 = objc_claimAutoreleasedReturnValue();
  v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    pk_Payment_log();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend(v4, "npkDescription");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      LODWORD(buf) = 138412290;
      *(_QWORD *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_213518000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Target handleApplyRestrictionsForPasscodeUpgradeFlowControllerResponse: incoming protobuf %@", (uint8_t *)&buf, 0xCu);

    }
  }
  objc_msgSend(v4, "context");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "incomingResponseIdentifier");
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  *(_QWORD *)&buf = 0;
  *((_QWORD *)&buf + 1) = &buf;
  v43 = 0x3032000000;
  v44 = __Block_byref_object_copy__342;
  v45 = __Block_byref_object_dispose__343;
  v46 = 0;
  v34 = 0;
  v35 = &v34;
  v36 = 0x2020000000;
  v37 = 0;
  v28 = 0;
  v29 = &v28;
  v30 = 0x3032000000;
  v31 = __Block_byref_object_copy__23;
  v32 = __Block_byref_object_dispose__23;
  v33 = 0;
  if (v10)
  {
    -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
    v11 = objc_claimAutoreleasedReturnValue();
    v22[0] = MEMORY[0x24BDAC760];
    v22[1] = 3221225472;
    v22[2] = __109__NPKPaymentWebServiceCompanionTargetDevice_handleApplyRestrictionsForPasscodeUpgradeFlowControllerResponse___block_invoke;
    v22[3] = &unk_24CFED060;
    v22[4] = self;
    v23 = v10;
    v24 = v4;
    p_buf = &buf;
    v26 = &v34;
    v27 = &v28;
    dispatch_sync(v11, v22);

  }
  else
  {
    pk_Payment_log();
    v12 = objc_claimAutoreleasedReturnValue();
    v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      pk_Payment_log();
      v14 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)v38 = 0;
        _os_log_impl(&dword_213518000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v38, 2u);
      }

    }
  }
  if (*(_QWORD *)(*((_QWORD *)&buf + 1) + 40))
  {
    pk_Payment_log();
    v15 = objc_claimAutoreleasedReturnValue();
    v16 = os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT);

    if (v16)
    {
      pk_Payment_log();
      v19 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT))
      {
        if (*((_BYTE *)v35 + 24))
          v20 = CFSTR("YES");
        else
          v20 = CFSTR("NO");
        v21 = v29[5];
        *(_DWORD *)v38 = 138412546;
        v39 = v20;
        v40 = 2112;
        v41 = v21;
        _os_log_impl(&dword_213518000, v19, OS_LOG_TYPE_DEFAULT, "Notice: Calling completion with success: %@ error: %@", v38, 0x16u);
      }

    }
    (*(void (**)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(*((_QWORD *)&buf + 1) + 40) + 16))(*(_QWORD *)(*((_QWORD *)&buf + 1) + 40), *((unsigned __int8 *)v35 + 24), v29[5], v17, v18);
  }
  _Block_object_dispose(&v28, 8);

  _Block_object_dispose(&v34, 8);
  _Block_object_dispose(&buf, 8);

}

void __109__NPKPaymentWebServiceCompanionTargetDevice_handleApplyRestrictionsForPasscodeUpgradeFlowControllerResponse___block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;
  NPKProtoPasscodeUpgradeFlowApplyPasscodeRestrictionsResponse *v4;
  void *v5;
  NSObject *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  NSObject *v12;
  void *v13;
  NSObject *v14;
  _BOOL4 v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  void *v27;
  uint8_t buf[8];
  _QWORD v29[2];
  _QWORD v30[3];

  v30[2] = *MEMORY[0x24BDAC8D0];
  objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "objectForKey:", *(_QWORD *)(a1 + 40));
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  if (v3)
  {
    v4 = [NPKProtoPasscodeUpgradeFlowApplyPasscodeRestrictionsResponse alloc];
    objc_msgSend(*(id *)(a1 + 48), "data");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    v6 = -[NPKProtoPasscodeUpgradeFlowApplyPasscodeRestrictionsResponse initWithData:](v4, "initWithData:", v5);

    objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "removeObjectForKey:", *(_QWORD *)(a1 + 40));

    objc_msgSend(v3, "completionHandler");
    v8 = objc_claimAutoreleasedReturnValue();
    v9 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
    v10 = *(void **)(v9 + 40);
    *(_QWORD *)(v9 + 40) = v8;

    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 24) = -[NSObject success](v6, "success");
    if (-[NSObject hasErrorData](v6, "hasErrorData"))
    {
      -[NSObject errorData](v6, "errorData");
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      v12 = objc_opt_class();
      NPKSecureUnarchiveObject(v11, v12);
      v13 = (void *)objc_claimAutoreleasedReturnValue();

    }
    else
    {
      v13 = 0;
    }
    objc_msgSend(v13, "domain");
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    if (objc_msgSend(v16, "isEqualToString:", CFSTR("com.apple.NPKErrorDomain")))
    {
      v17 = objc_msgSend(v13, "code");

      if (v17 == -1004)
      {
        v27 = (void *)MEMORY[0x24BDD1540];
        v18 = *MEMORY[0x24BE6F2A8];
        v29[0] = *MEMORY[0x24BDD0FD8];
        objc_msgSend(MEMORY[0x24BDD1488], "bundleForClass:", objc_opt_class());
        v19 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v19, "localizedStringForKey:value:table:", CFSTR("UNLOCK_REQUIRED_ALERT_TITLE"), &stru_24CFF06D8, CFSTR("NanoPassKit"));
        v20 = (void *)objc_claimAutoreleasedReturnValue();
        v30[0] = v20;
        v29[1] = *MEMORY[0x24BDD0FF0];
        objc_msgSend(MEMORY[0x24BDD1488], "bundleForClass:", objc_opt_class());
        v21 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v21, "localizedStringForKey:value:table:", CFSTR("UNLOCK_REQUIRED_ALERT_MESSAGE"), &stru_24CFF06D8, CFSTR("NanoPassKit"));
        v22 = (void *)objc_claimAutoreleasedReturnValue();
        v30[1] = v22;
        objc_msgSend(MEMORY[0x24BDBCE70], "dictionaryWithObjects:forKeys:count:", v30, v29, 2);
        v23 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v27, "errorWithDomain:code:userInfo:", v18, 0, v23);
        v24 = objc_claimAutoreleasedReturnValue();

        v13 = (void *)v24;
      }
    }
    else
    {

    }
    v25 = *(_QWORD *)(*(_QWORD *)(a1 + 72) + 8);
    v26 = *(void **)(v25 + 40);
    *(_QWORD *)(v25 + 40) = v13;

LABEL_13:
    goto LABEL_14;
  }
  pk_Payment_log();
  v14 = objc_claimAutoreleasedReturnValue();
  v15 = os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT);

  if (v15)
  {
    pk_Payment_log();
    v6 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl(&dword_213518000, v6, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", buf, 2u);
    }
    goto LABEL_13;
  }
LABEL_14:

}

- (void)presentRemoteDevicePasscodeUpgradePromptForChangeType:(unint64_t)a3 completion:(id)a4
{
  id v6;
  NSObject *v7;
  _BOOL4 v8;
  NSObject *v9;
  void *v10;
  void *v11;
  int v12;
  NSObject *v13;
  NSObject *v14;
  const __CFString *v15;
  NSObject *v16;
  NSObject *v17;
  _BOOL4 v18;
  NSObject *v19;
  void *v20;
  _QWORD block[5];
  id v22;
  unint64_t v23;
  uint8_t buf[4];
  const __CFString *v25;
  uint64_t v26;

  v26 = *MEMORY[0x24BDAC8D0];
  v6 = a4;
  pk_Payment_log();
  v7 = objc_claimAutoreleasedReturnValue();
  v8 = os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT);

  if (v8)
  {
    pk_Payment_log();
    v9 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl(&dword_213518000, v9, OS_LOG_TYPE_DEFAULT, "Notice: Target device presentRemoteDevicePasscodeUpgradePromptForChangeType:completion:", buf, 2u);
    }

  }
  NPKPairedOrPairingDevice();
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v11 = (void *)objc_msgSend(objc_alloc(MEMORY[0x24BDD1880]), "initWithUUIDString:", CFSTR("C3FD35B9-C30A-4893-B94B-56080B5FD9B7"));
  v12 = objc_msgSend(v10, "supportsCapability:", v11);

  pk_Payment_log();
  v13 = objc_claimAutoreleasedReturnValue();
  LODWORD(v11) = os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT);

  if ((_DWORD)v11)
  {
    pk_Payment_log();
    v14 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
    {
      v15 = CFSTR("NO");
      if (v12)
        v15 = CFSTR("YES");
      *(_DWORD *)buf = 138412290;
      v25 = v15;
      _os_log_impl(&dword_213518000, v14, OS_LOG_TYPE_DEFAULT, "Notice: Supports remote device passcode upgrade prompt: %@", buf, 0xCu);
    }

  }
  if (v12)
  {
    -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
    v16 = objc_claimAutoreleasedReturnValue();
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 3221225472;
    block[2] = __110__NPKPaymentWebServiceCompanionTargetDevice_presentRemoteDevicePasscodeUpgradePromptForChangeType_completion___block_invoke;
    block[3] = &unk_24CFED5C0;
    v23 = a3;
    block[4] = self;
    v22 = v6;
    dispatch_sync(v16, block);

  }
  else
  {
    pk_Payment_log();
    v17 = objc_claimAutoreleasedReturnValue();
    v18 = os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT);

    if (v18)
    {
      pk_Payment_log();
      v19 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)buf = 0;
        _os_log_impl(&dword_213518000, v19, OS_LOG_TYPE_DEFAULT, "Notice: Cannot present passcode upgrade prompt on an unsupported OS.", buf, 2u);
      }

    }
    objc_msgSend(MEMORY[0x24BDD1540], "errorWithDomain:code:userInfo:", CFSTR("com.apple.NPKErrorDomain"), -1006, 0);
    v20 = (void *)objc_claimAutoreleasedReturnValue();
    (*((void (**)(id, _QWORD, void *))v6 + 2))(v6, 0, v20);

  }
}

void __110__NPKPaymentWebServiceCompanionTargetDevice_presentRemoteDevicePasscodeUpgradePromptForChangeType_completion___block_invoke(uint64_t a1)
{
  NPKProtoPasscodeUpgradeFlowPresentationRequest *v2;
  id v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  NSObject *v9;
  void *v10;
  void *v11;
  void *v12;
  NSObject *v13;
  _BOOL4 v14;
  const char *v15;
  NSObject *v16;
  os_log_type_t v17;
  NSObject *v18;
  _BOOL4 v19;
  _QWORD v20[4];
  id v21;
  uint8_t buf[4];
  void *v23;
  uint64_t v24;
  _QWORD v25[2];

  v25[1] = *MEMORY[0x24BDAC8D0];
  v2 = objc_alloc_init(NPKProtoPasscodeUpgradeFlowPresentationRequest);
  -[NPKProtoPasscodeUpgradeFlowPresentationRequest setChangeType:](v2, "setChangeType:", NPKPasscodeUpgradeChangeTypeProtoFromPasscodeUpgradeChangeType(*(_QWORD *)(a1 + 48)));
  v3 = objc_alloc(MEMORY[0x24BE4FE40]);
  -[NPKProtoPasscodeUpgradeFlowPresentationRequest data](v2, "data");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = (void *)objc_msgSend(v3, "initWithProtobufData:type:isResponse:", v4, 108, 0);

  v6 = *(void **)(a1 + 32);
  v24 = *MEMORY[0x24BE4FB30];
  v25[0] = &unk_24D0566F0;
  objc_msgSend(MEMORY[0x24BDBCE70], "dictionaryWithObjects:forKeys:count:", v25, &v24, 1);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "_sendProtobuf:responseExpected:extraOptions:priority:", v5, 1, v7, 300);
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  if (v8)
  {
    if (*(_QWORD *)(a1 + 40))
    {
      v9 = MEMORY[0x2199B6780]();
      v20[0] = MEMORY[0x24BDAC760];
      v20[1] = 3221225472;
      v20[2] = __110__NPKPaymentWebServiceCompanionTargetDevice_presentRemoteDevicePasscodeUpgradePromptForChangeType_completion___block_invoke_2;
      v20[3] = &unk_24CFE7B80;
      v21 = *(id *)(a1 + 40);
      v10 = (void *)MEMORY[0x2199B6780](v20);
      v11 = *(void **)(a1 + 32);
      v12 = (void *)MEMORY[0x2199B6780](v9);
      objc_msgSend(v11, "_trackOutstandingRequestWithMessageIdentifier:completionHandler:errorHandler:", v8, v12, v10);

LABEL_11:
      goto LABEL_12;
    }
    pk_Payment_log();
    v18 = objc_claimAutoreleasedReturnValue();
    v19 = os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT);

    if (v19)
    {
      pk_Payment_log();
      v9 = objc_claimAutoreleasedReturnValue();
      if (!os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
        goto LABEL_11;
      *(_DWORD *)buf = 138412290;
      v23 = v8;
      v15 = "Warning: No response expected for message with identifier %@";
      v16 = v9;
      v17 = OS_LOG_TYPE_DEFAULT;
      goto LABEL_10;
    }
  }
  else
  {
    pk_Payment_log();
    v13 = objc_claimAutoreleasedReturnValue();
    v14 = os_log_type_enabled(v13, OS_LOG_TYPE_ERROR);

    if (v14)
    {
      pk_Payment_log();
      v9 = objc_claimAutoreleasedReturnValue();
      if (!os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
        goto LABEL_11;
      *(_DWORD *)buf = 138412290;
      v23 = v5;
      v15 = "Error: No message identifier for protobuf %@";
      v16 = v9;
      v17 = OS_LOG_TYPE_ERROR;
LABEL_10:
      _os_log_impl(&dword_213518000, v16, v17, v15, buf, 0xCu);
      goto LABEL_11;
    }
  }
LABEL_12:

}

uint64_t __110__NPKPaymentWebServiceCompanionTargetDevice_presentRemoteDevicePasscodeUpgradePromptForChangeType_completion___block_invoke_2(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 32);
  if (result)
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(result + 16))(result, 0, a2);
  return result;
}

- (void)handleRemoteDevicePasscodeUpgradePresentationPromptResponse:(id)a3
{
  id v4;
  NSObject *v5;
  _BOOL4 v6;
  NSObject *v7;
  void *v8;
  void *v9;
  void *v10;
  NSObject *v11;
  NSObject *v12;
  _BOOL4 v13;
  NSObject *v14;
  NSObject *v15;
  _BOOL4 v16;
  NSObject *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t);
  void *v24;
  NPKPaymentWebServiceCompanionTargetDevice *v25;
  id v26;
  id v27;
  __int128 *p_buf;
  uint64_t *v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t (*v34)(uint64_t, uint64_t);
  void (*v35)(uint64_t);
  id v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  char v40;
  uint8_t v41[4];
  uint64_t v42;
  __int16 v43;
  uint64_t v44;
  __int128 buf;
  uint64_t v46;
  uint64_t (*v47)(uint64_t, uint64_t);
  void (*v48)(uint64_t);
  id v49;
  uint64_t v50;

  v50 = *MEMORY[0x24BDAC8D0];
  v4 = a3;
  pk_Payment_log();
  v5 = objc_claimAutoreleasedReturnValue();
  v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    pk_Payment_log();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend(v4, "npkDescription");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      LODWORD(buf) = 138412290;
      *(_QWORD *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_213518000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Target handleRemoteDevicePasscodeUpgradePresentationPromptResponse: incoming protobuf %@", (uint8_t *)&buf, 0xCu);

    }
  }
  objc_msgSend(v4, "context");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "incomingResponseIdentifier");
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  *(_QWORD *)&buf = 0;
  *((_QWORD *)&buf + 1) = &buf;
  v46 = 0x3032000000;
  v47 = __Block_byref_object_copy__342;
  v48 = __Block_byref_object_dispose__343;
  v49 = 0;
  v37 = 0;
  v38 = &v37;
  v39 = 0x2020000000;
  v40 = 0;
  v31 = 0;
  v32 = &v31;
  v33 = 0x3032000000;
  v34 = __Block_byref_object_copy__23;
  v35 = __Block_byref_object_dispose__23;
  v36 = 0;
  if (v10)
  {
    -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
    v11 = objc_claimAutoreleasedReturnValue();
    v21 = MEMORY[0x24BDAC760];
    v22 = 3221225472;
    v23 = __105__NPKPaymentWebServiceCompanionTargetDevice_handleRemoteDevicePasscodeUpgradePresentationPromptResponse___block_invoke;
    v24 = &unk_24CFED060;
    v25 = self;
    v26 = v10;
    v27 = v4;
    p_buf = &buf;
    v29 = &v37;
    v30 = &v31;
    dispatch_sync(v11, &v21);

  }
  else
  {
    pk_Payment_log();
    v12 = objc_claimAutoreleasedReturnValue();
    v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      pk_Payment_log();
      v14 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)v41 = 0;
        _os_log_impl(&dword_213518000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v41, 2u);
      }

    }
  }
  if (*(_QWORD *)(*((_QWORD *)&buf + 1) + 40))
  {
    pk_Payment_log();
    v15 = objc_claimAutoreleasedReturnValue();
    v16 = os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT);

    if (v16)
    {
      pk_Payment_log();
      v17 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
      {
        v18 = *((unsigned __int8 *)v38 + 24);
        v19 = v32[5];
        *(_DWORD *)v41 = 134218242;
        v42 = v18;
        v43 = 2112;
        v44 = v19;
        _os_log_impl(&dword_213518000, v17, OS_LOG_TYPE_DEFAULT, "Notice: Request to exit passcode change flow with passcode changed: %ld error: %@", v41, 0x16u);
      }

    }
    -[NPKPaymentWebServiceCompanionTargetDevice passcodeChangeCoordinator](self, "passcodeChangeCoordinator", v21, v22, v23, v24, v25);
    v20 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v20, "exitPasscodeChangeFlowWithPasscodeChanged:error:", *((unsigned __int8 *)v38 + 24), v32[5]);

    (*(void (**)(void))(*(_QWORD *)(*((_QWORD *)&buf + 1) + 40) + 16))();
  }
  _Block_object_dispose(&v31, 8);

  _Block_object_dispose(&v37, 8);
  _Block_object_dispose(&buf, 8);

}

void __105__NPKPaymentWebServiceCompanionTargetDevice_handleRemoteDevicePasscodeUpgradePresentationPromptResponse___block_invoke(uint64_t a1)
{
  void *v1;
  void *v3;
  void *v4;
  NPKProtoPasscodeUpgradeFlowShouldExitRequest *v5;
  void *v6;
  NSObject *v7;
  NSObject *v8;
  _BOOL4 v9;
  NSObject *v10;
  NSObject *v11;
  _BOOL4 v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  int v16;
  NSObject *v17;
  void *v18;
  uint8_t v19[16];
  uint8_t buf[16];

  objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "objectForKey:", *(_QWORD *)(a1 + 40));
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  if (v4)
  {
    v5 = [NPKProtoPasscodeUpgradeFlowShouldExitRequest alloc];
    objc_msgSend(*(id *)(a1 + 48), "data");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    v7 = -[NPKProtoPasscodeUpgradeFlowShouldExitRequest initWithData:](v5, "initWithData:", v6);

    if (-[NSObject pending](v7, "pending"))
    {
      pk_Payment_log();
      v8 = objc_claimAutoreleasedReturnValue();
      v9 = os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT);

      if (v9)
      {
        pk_Payment_log();
        v10 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)buf = 0;
          _os_log_impl(&dword_213518000, v10, OS_LOG_TYPE_DEFAULT, "Notice: Passcode upgrade request still pending", buf, 2u);
        }

      }
      objc_msgSend(v4, "setOrResetCleanupTimer");
    }
    else
    {
      objc_msgSend(v4, "completionHandler");
      v13 = objc_claimAutoreleasedReturnValue();
      v14 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
      v15 = *(void **)(v14 + 40);
      *(_QWORD *)(v14 + 40) = v13;

      *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 24) = -[NSObject passcodeChanged](v7, "passcodeChanged");
      v16 = -[NSObject hasErrorData](v7, "hasErrorData");
      if (v16)
      {
        -[NSObject errorData](v7, "errorData");
        v1 = (void *)objc_claimAutoreleasedReturnValue();
        v17 = objc_opt_class();
        NPKSecureUnarchiveObject(v1, v17);
        v18 = (void *)objc_claimAutoreleasedReturnValue();
      }
      else
      {
        v18 = 0;
      }
      objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 72) + 8) + 40), v18);
      if (v16)
      {

      }
    }
LABEL_16:

    goto LABEL_17;
  }
  pk_Payment_log();
  v11 = objc_claimAutoreleasedReturnValue();
  v12 = os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT);

  if (v12)
  {
    pk_Payment_log();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)v19 = 0;
      _os_log_impl(&dword_213518000, v7, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", v19, 2u);
    }
    goto LABEL_16;
  }
LABEL_17:

}

- (void)dismissRemoteDevicePasscodeUpgradePromptWithCompletion:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  int v7;
  NSObject *v8;
  NSObject *v9;
  const __CFString *v10;
  NSObject *v11;
  NSObject *v12;
  _BOOL4 v13;
  NSObject *v14;
  void *v15;
  _QWORD v16[5];
  id v17;
  uint8_t buf[4];
  const __CFString *v19;
  uint64_t v20;

  v20 = *MEMORY[0x24BDAC8D0];
  v4 = a3;
  NPKPairedOrPairingDevice();
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = (void *)objc_msgSend(objc_alloc(MEMORY[0x24BDD1880]), "initWithUUIDString:", CFSTR("C3FD35B9-C30A-4893-B94B-56080B5FD9B7"));
  v7 = objc_msgSend(v5, "supportsCapability:", v6);

  pk_Payment_log();
  v8 = objc_claimAutoreleasedReturnValue();
  LODWORD(v6) = os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT);

  if ((_DWORD)v6)
  {
    pk_Payment_log();
    v9 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      v10 = CFSTR("NO");
      if (v7)
        v10 = CFSTR("YES");
      *(_DWORD *)buf = 138412290;
      v19 = v10;
      _os_log_impl(&dword_213518000, v9, OS_LOG_TYPE_DEFAULT, "Notice: Supports remote device passcode upgrade prompt: %@", buf, 0xCu);
    }

  }
  if (v7)
  {
    -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
    v11 = objc_claimAutoreleasedReturnValue();
    v16[0] = MEMORY[0x24BDAC760];
    v16[1] = 3221225472;
    v16[2] = __100__NPKPaymentWebServiceCompanionTargetDevice_dismissRemoteDevicePasscodeUpgradePromptWithCompletion___block_invoke;
    v16[3] = &unk_24CFE7E90;
    v16[4] = self;
    v17 = v4;
    dispatch_sync(v11, v16);

  }
  else
  {
    pk_Payment_log();
    v12 = objc_claimAutoreleasedReturnValue();
    v13 = os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT);

    if (v13)
    {
      pk_Payment_log();
      v14 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)buf = 0;
        _os_log_impl(&dword_213518000, v14, OS_LOG_TYPE_DEFAULT, "Notice: Cannot present passcode upgrade prompt on an unsupported OS.", buf, 2u);
      }

    }
    objc_msgSend(MEMORY[0x24BDD1540], "errorWithDomain:code:userInfo:", CFSTR("com.apple.NPKErrorDomain"), -1006, 0);
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    (*((void (**)(id, _QWORD, void *))v4 + 2))(v4, 0, v15);

  }
}

void __100__NPKPaymentWebServiceCompanionTargetDevice_dismissRemoteDevicePasscodeUpgradePromptWithCompletion___block_invoke(uint64_t a1)
{
  NPKProtoPasscodeUpgradeFlowShouldExitRequest *v2;
  id v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  uint64_t v9;
  NSObject *v10;
  _BOOL4 v11;
  NSObject *v12;
  const char *v13;
  NSObject *v14;
  os_log_type_t v15;
  NSObject *v16;
  _BOOL4 v17;
  int v18;
  void *v19;
  uint64_t v20;
  _QWORD v21[2];

  v21[1] = *MEMORY[0x24BDAC8D0];
  v2 = objc_alloc_init(NPKProtoPasscodeUpgradeFlowShouldExitRequest);
  -[NPKProtoPasscodeUpgradeFlowShouldExitRequest setPasscodeChanged:](v2, "setPasscodeChanged:", 0);
  -[NPKProtoPasscodeUpgradeFlowShouldExitRequest setErrorData:](v2, "setErrorData:", 0);
  v3 = objc_alloc(MEMORY[0x24BE4FE40]);
  -[NPKProtoPasscodeUpgradeFlowShouldExitRequest data](v2, "data");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = (void *)objc_msgSend(v3, "initWithProtobufData:type:isResponse:", v4, 67, 0);

  v6 = *(void **)(a1 + 32);
  v20 = *MEMORY[0x24BE4FB30];
  v21[0] = &unk_24D0566F0;
  objc_msgSend(MEMORY[0x24BDBCE70], "dictionaryWithObjects:forKeys:count:", v21, &v20, 1);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "_sendProtobuf:responseExpected:extraOptions:priority:", v5, 0, v7, 300);
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  if (!v8)
  {
    pk_Payment_log();
    v10 = objc_claimAutoreleasedReturnValue();
    v11 = os_log_type_enabled(v10, OS_LOG_TYPE_ERROR);

    if (!v11)
      goto LABEL_12;
    pk_Payment_log();
    v12 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR))
    {
      v18 = 138412290;
      v19 = v5;
      v13 = "Error: No message identifier for protobuf %@";
      v14 = v12;
      v15 = OS_LOG_TYPE_ERROR;
LABEL_10:
      _os_log_impl(&dword_213518000, v14, v15, v13, (uint8_t *)&v18, 0xCu);
    }
LABEL_11:

    goto LABEL_12;
  }
  v9 = *(_QWORD *)(a1 + 40);
  if (!v9)
  {
    pk_Payment_log();
    v16 = objc_claimAutoreleasedReturnValue();
    v17 = os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT);

    if (!v17)
      goto LABEL_12;
    pk_Payment_log();
    v12 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
    {
      v18 = 138412290;
      v19 = v8;
      v13 = "Warning: No response expected for message with identifier %@";
      v14 = v12;
      v15 = OS_LOG_TYPE_DEFAULT;
      goto LABEL_10;
    }
    goto LABEL_11;
  }
  (*(void (**)(uint64_t, BOOL, _QWORD))(v9 + 16))(v9, -[NPKProtoPasscodeUpgradeFlowShouldExitRequest passcodeChanged](v2, "passcodeChanged"), 0);
LABEL_12:

}

- (void)exitPasscodeUpgradeForPasscodeUpgradeFlowController:(id)a3 withShouldContinue:(BOOL)a4 error:(id)a5
{
  _BOOL8 v5;
  void *v7;
  void *v8;
  NPKCompanionPasscodeChangeCoordinatorProtocol *passcodeChangeCoordinator;
  id v10;

  v5 = a4;
  v10 = a5;
  -[NPKPaymentWebServiceCompanionTargetDevice passcodeChangeCoordinator](self, "passcodeChangeCoordinator");
  v7 = (void *)objc_claimAutoreleasedReturnValue();

  if (v7)
  {
    -[NPKPaymentWebServiceCompanionTargetDevice passcodeChangeCoordinator](self, "passcodeChangeCoordinator");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "exitPasscodeChangeFlowWithPasscodeChanged:error:", v5, v10);

  }
  passcodeChangeCoordinator = self->_passcodeChangeCoordinator;
  self->_passcodeChangeCoordinator = 0;

}

- (void)handlePasscodeUpgradeFlowShouldExitRequest:(id)a3
{
  id v4;
  NSObject *v5;
  _BOOL4 v6;
  NSObject *v7;
  void *v8;
  NPKProtoPasscodeUpgradeFlowShouldExitRequest *v9;
  void *v10;
  NPKProtoPasscodeUpgradeFlowShouldExitRequest *v11;
  uint64_t v12;
  void *v13;
  NSObject *v14;
  void *v15;
  NSObject *v16;
  _BOOL4 v17;
  NSObject *v18;
  void *v19;
  int v20;
  unint64_t v21;
  __int16 v22;
  void *v23;
  uint64_t v24;

  v24 = *MEMORY[0x24BDAC8D0];
  v4 = a3;
  pk_Payment_log();
  v5 = objc_claimAutoreleasedReturnValue();
  v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    pk_Payment_log();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend(v4, "npkDescription");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      v20 = 138412290;
      v21 = (unint64_t)v8;
      _os_log_impl(&dword_213518000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Target handlePasscodeUpgradeFlowShouldExitRequest: incoming protobuf %@", (uint8_t *)&v20, 0xCu);

    }
  }
  v9 = [NPKProtoPasscodeUpgradeFlowShouldExitRequest alloc];
  objc_msgSend(v4, "data");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v11 = -[NPKProtoPasscodeUpgradeFlowShouldExitRequest initWithData:](v9, "initWithData:", v10);

  v12 = -[NPKProtoPasscodeUpgradeFlowShouldExitRequest passcodeChanged](v11, "passcodeChanged");
  if (-[NPKProtoPasscodeUpgradeFlowShouldExitRequest hasErrorData](v11, "hasErrorData"))
  {
    -[NPKProtoPasscodeUpgradeFlowShouldExitRequest errorData](v11, "errorData");
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    v14 = objc_opt_class();
    NPKSecureUnarchiveObject(v13, v14);
    v15 = (void *)objc_claimAutoreleasedReturnValue();

  }
  else
  {
    v15 = 0;
  }
  pk_Payment_log();
  v16 = objc_claimAutoreleasedReturnValue();
  v17 = os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT);

  if (v17)
  {
    pk_Payment_log();
    v18 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT))
    {
      v20 = 134218242;
      v21 = v12;
      v22 = 2112;
      v23 = v15;
      _os_log_impl(&dword_213518000, v18, OS_LOG_TYPE_DEFAULT, "Notice: Request to exit passcode change flow with passcode changed: %ld error: %@", (uint8_t *)&v20, 0x16u);
    }

  }
  -[NPKPaymentWebServiceCompanionTargetDevice passcodeChangeCoordinator](self, "passcodeChangeCoordinator");
  v19 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v19, "exitPasscodeChangeFlowWithPasscodeChanged:error:", v12, v15);

}

- (void)startRequiringUpgradedPasscodeWithPasscodeMeetsPolicy:(BOOL)a3
{
  void *v4;
  void *v5;
  int v6;
  NSObject *v7;
  _BOOL4 v8;
  NSObject *v9;
  uint8_t v10[16];

  NPKPairedOrPairingDevice();
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = (void *)objc_msgSend(objc_alloc(MEMORY[0x24BDD1880]), "initWithUUIDString:", CFSTR("B68E1DBD-8CE4-4684-8F65-FF0AF2040D4E"));
  v6 = objc_msgSend(v4, "supportsCapability:", v5);

  if (v6)
  {
    pk_Payment_log();
    v7 = objc_claimAutoreleasedReturnValue();
    v8 = os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT);

    if (v8)
    {
      pk_Payment_log();
      v9 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)v10 = 0;
        _os_log_impl(&dword_213518000, v9, OS_LOG_TYPE_DEFAULT, "Notice: Noting that provisioning did start requiring upgraded passcode", v10, 2u);
      }

    }
    -[NPKPaymentWebServiceCompanionTargetDevice _acquireAssertionOfType:](self, "_acquireAssertionOfType:", 6);
  }
}

- (void)endRequiringUpgradedPasscodeIfNecessary
{
  void *v3;
  void *v4;
  int v5;
  NSObject *v6;
  _BOOL4 v7;
  NSObject *v8;
  uint8_t v9[16];

  NPKPairedOrPairingDevice();
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = (void *)objc_msgSend(objc_alloc(MEMORY[0x24BDD1880]), "initWithUUIDString:", CFSTR("B68E1DBD-8CE4-4684-8F65-FF0AF2040D4E"));
  v5 = objc_msgSend(v3, "supportsCapability:", v4);

  if (v5)
  {
    pk_Payment_log();
    v6 = objc_claimAutoreleasedReturnValue();
    v7 = os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT);

    if (v7)
    {
      pk_Payment_log();
      v8 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)v9 = 0;
        _os_log_impl(&dword_213518000, v8, OS_LOG_TYPE_DEFAULT, "Notice: Noting that provisioning did end requiring upgraded passcode", v9, 2u);
      }

    }
    -[NPKPaymentWebServiceCompanionTargetDevice _invalidateAssertionOfType:](self, "_invalidateAssertionOfType:", 6);
  }
}

- (void)fetchRemoteDevicePasscodeStateWithCompletion:(id)a3
{
  id v4;
  NSObject *v5;
  _BOOL4 v6;
  NSObject *v7;
  void *v8;
  void *v9;
  int v10;
  NSObject *v11;
  NSObject *v12;
  _BOOL4 v13;
  NSObject *v14;
  _QWORD v15[5];
  id v16;
  uint8_t buf[16];

  v4 = a3;
  pk_Payment_log();
  v5 = objc_claimAutoreleasedReturnValue();
  v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    pk_Payment_log();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl(&dword_213518000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Target device fetchRemoteDevicePasscodeStateWithCompletion:", buf, 2u);
    }

  }
  NPKPairedOrPairingDevice();
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v9 = (void *)objc_msgSend(objc_alloc(MEMORY[0x24BDD1880]), "initWithUUIDString:", CFSTR("C3FD35B9-C30A-4893-B94B-56080B5FD9B7"));
  v10 = objc_msgSend(v8, "supportsCapability:", v9);

  if (v10)
  {
    -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
    v11 = objc_claimAutoreleasedReturnValue();
    v15[0] = MEMORY[0x24BDAC760];
    v15[1] = 3221225472;
    v15[2] = __90__NPKPaymentWebServiceCompanionTargetDevice_fetchRemoteDevicePasscodeStateWithCompletion___block_invoke;
    v15[3] = &unk_24CFE7E90;
    v15[4] = self;
    v16 = v4;
    dispatch_sync(v11, v15);

  }
  else
  {
    pk_Payment_log();
    v12 = objc_claimAutoreleasedReturnValue();
    v13 = os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT);

    if (v13)
    {
      pk_Payment_log();
      v14 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)buf = 0;
        _os_log_impl(&dword_213518000, v14, OS_LOG_TYPE_DEFAULT, "Notice: The remote device's OS does not support this call. Pretend all is well so we don't fail here.", buf, 2u);
      }

    }
    (*((void (**)(id, uint64_t, _QWORD, _QWORD))v4 + 2))(v4, 1, 0, 0);
  }

}

void __90__NPKPaymentWebServiceCompanionTargetDevice_fetchRemoteDevicePasscodeStateWithCompletion___block_invoke(uint64_t a1)
{
  NPKProtoRemoteDevicePasscodeStateRequest *v2;
  id v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  NSObject *v9;
  void *v10;
  void *v11;
  void *v12;
  NSObject *v13;
  _BOOL4 v14;
  const char *v15;
  NSObject *v16;
  os_log_type_t v17;
  NSObject *v18;
  _BOOL4 v19;
  _QWORD v20[4];
  id v21;
  uint8_t buf[4];
  void *v23;
  uint64_t v24;
  _QWORD v25[2];

  v25[1] = *MEMORY[0x24BDAC8D0];
  v2 = objc_alloc_init(NPKProtoRemoteDevicePasscodeStateRequest);
  v3 = objc_alloc(MEMORY[0x24BE4FE40]);
  -[NPKProtoRemoteDevicePasscodeStateRequest data](v2, "data");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = (void *)objc_msgSend(v3, "initWithProtobufData:type:isResponse:", v4, 109, 0);

  v6 = *(void **)(a1 + 32);
  v24 = *MEMORY[0x24BE4FB30];
  v25[0] = &unk_24D0566F0;
  objc_msgSend(MEMORY[0x24BDBCE70], "dictionaryWithObjects:forKeys:count:", v25, &v24, 1);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "_sendProtobuf:responseExpected:extraOptions:", v5, 1, v7);
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  if (v8)
  {
    if (*(_QWORD *)(a1 + 40))
    {
      v9 = MEMORY[0x2199B6780]();
      v20[0] = MEMORY[0x24BDAC760];
      v20[1] = 3221225472;
      v20[2] = __90__NPKPaymentWebServiceCompanionTargetDevice_fetchRemoteDevicePasscodeStateWithCompletion___block_invoke_2;
      v20[3] = &unk_24CFE7B80;
      v21 = *(id *)(a1 + 40);
      v10 = (void *)MEMORY[0x2199B6780](v20);
      v11 = *(void **)(a1 + 32);
      v12 = (void *)MEMORY[0x2199B6780](v9);
      objc_msgSend(v11, "_trackOutstandingRequestWithMessageIdentifier:completionHandler:errorHandler:", v8, v12, v10);

LABEL_11:
      goto LABEL_12;
    }
    pk_Payment_log();
    v18 = objc_claimAutoreleasedReturnValue();
    v19 = os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT);

    if (v19)
    {
      pk_Payment_log();
      v9 = objc_claimAutoreleasedReturnValue();
      if (!os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
        goto LABEL_11;
      *(_DWORD *)buf = 138412290;
      v23 = v8;
      v15 = "Warning: No response expected for message with identifier %@";
      v16 = v9;
      v17 = OS_LOG_TYPE_DEFAULT;
      goto LABEL_10;
    }
  }
  else
  {
    pk_Payment_log();
    v13 = objc_claimAutoreleasedReturnValue();
    v14 = os_log_type_enabled(v13, OS_LOG_TYPE_ERROR);

    if (v14)
    {
      pk_Payment_log();
      v9 = objc_claimAutoreleasedReturnValue();
      if (!os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
        goto LABEL_11;
      *(_DWORD *)buf = 138412290;
      v23 = v5;
      v15 = "Error: No message identifier for protobuf %@";
      v16 = v9;
      v17 = OS_LOG_TYPE_ERROR;
LABEL_10:
      _os_log_impl(&dword_213518000, v16, v17, v15, buf, 0xCu);
      goto LABEL_11;
    }
  }
LABEL_12:

}

uint64_t __90__NPKPaymentWebServiceCompanionTargetDevice_fetchRemoteDevicePasscodeStateWithCompletion___block_invoke_2(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 32);
  if (result)
    return (*(uint64_t (**)(uint64_t, _QWORD, _QWORD, uint64_t))(result + 16))(result, 0, 0, a2);
  return result;
}

- (void)handleRemoteDevicePasscodeStateResponse:(id)a3
{
  id v4;
  NSObject *v5;
  _BOOL4 v6;
  NSObject *v7;
  void *v8;
  void *v9;
  void *v10;
  NSObject *v11;
  NSObject *v12;
  _BOOL4 v13;
  NSObject *v14;
  uint64_t v15;
  uint8_t v16[8];
  _QWORD block[5];
  id v18;
  id v19;
  __int128 *p_buf;
  uint64_t *v21;
  uint64_t *v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t (*v27)(uint64_t, uint64_t);
  void (*v28)(uint64_t);
  id v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  char v37;
  __int128 buf;
  uint64_t v39;
  uint64_t (*v40)(uint64_t, uint64_t);
  void (*v41)(uint64_t);
  id v42;
  uint64_t v43;

  v43 = *MEMORY[0x24BDAC8D0];
  v4 = a3;
  pk_Payment_log();
  v5 = objc_claimAutoreleasedReturnValue();
  v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    pk_Payment_log();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend(v4, "npkDescription");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      LODWORD(buf) = 138412290;
      *(_QWORD *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_213518000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Target handleRemoteDevicePasscodeStateResponse: incoming protobuf %@", (uint8_t *)&buf, 0xCu);

    }
  }
  objc_msgSend(v4, "context");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "incomingResponseIdentifier");
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  *(_QWORD *)&buf = 0;
  *((_QWORD *)&buf + 1) = &buf;
  v39 = 0x3032000000;
  v40 = __Block_byref_object_copy__342;
  v41 = __Block_byref_object_dispose__343;
  v42 = 0;
  v34 = 0;
  v35 = &v34;
  v36 = 0x2020000000;
  v37 = 0;
  v30 = 0;
  v31 = &v30;
  v32 = 0x2020000000;
  v33 = 0;
  v24 = 0;
  v25 = &v24;
  v26 = 0x3032000000;
  v27 = __Block_byref_object_copy__23;
  v28 = __Block_byref_object_dispose__23;
  v29 = 0;
  if (v10)
  {
    -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
    v11 = objc_claimAutoreleasedReturnValue();
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 3221225472;
    block[2] = __85__NPKPaymentWebServiceCompanionTargetDevice_handleRemoteDevicePasscodeStateResponse___block_invoke;
    block[3] = &unk_24CFECFC0;
    block[4] = self;
    v18 = v10;
    v19 = v4;
    p_buf = &buf;
    v21 = &v34;
    v22 = &v30;
    v23 = &v24;
    dispatch_sync(v11, block);

  }
  else
  {
    pk_Payment_log();
    v12 = objc_claimAutoreleasedReturnValue();
    v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      pk_Payment_log();
      v14 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)v16 = 0;
        _os_log_impl(&dword_213518000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v16, 2u);
      }

    }
  }
  v15 = *(_QWORD *)(*((_QWORD *)&buf + 1) + 40);
  if (v15)
    (*(void (**)(uint64_t, _QWORD, _QWORD, uint64_t))(v15 + 16))(v15, *((unsigned __int8 *)v35 + 24), *((unsigned __int8 *)v31 + 24), v25[5]);
  _Block_object_dispose(&v24, 8);

  _Block_object_dispose(&v30, 8);
  _Block_object_dispose(&v34, 8);
  _Block_object_dispose(&buf, 8);

}

void __85__NPKPaymentWebServiceCompanionTargetDevice_handleRemoteDevicePasscodeStateResponse___block_invoke(uint64_t a1)
{
  void *v1;
  void *v3;
  void *v4;
  NPKProtoRemoteDevicePasscodeStateResponse *v5;
  void *v6;
  NPKProtoRemoteDevicePasscodeStateResponse *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  _BOOL4 v11;
  NSObject *v12;
  void *v13;
  NSObject *v14;
  _BOOL4 v15;
  NSObject *v16;
  __int16 v17[8];

  objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "objectForKey:", *(_QWORD *)(a1 + 40));
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  if (v4)
  {
    v5 = [NPKProtoRemoteDevicePasscodeStateResponse alloc];
    objc_msgSend(*(id *)(a1 + 48), "data");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    v7 = -[NPKProtoRemoteDevicePasscodeStateResponse initWithData:](v5, "initWithData:", v6);

    objc_msgSend(v4, "completionHandler");
    v8 = objc_claimAutoreleasedReturnValue();
    v9 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
    v10 = *(void **)(v9 + 40);
    *(_QWORD *)(v9 + 40) = v8;

    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 24) = -[NPKProtoRemoteDevicePasscodeStateResponse hasPasscodeSet](v7, "hasPasscodeSet");
    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 72) + 8) + 24) = -[NPKProtoRemoteDevicePasscodeStateResponse isPasscodeLocked](v7, "isPasscodeLocked");
    v11 = -[NPKProtoRemoteDevicePasscodeStateResponse hasErrorData](v7, "hasErrorData");
    if (v11)
    {
      -[NPKProtoRemoteDevicePasscodeStateResponse errorData](v7, "errorData");
      v1 = (void *)objc_claimAutoreleasedReturnValue();
      v12 = objc_opt_class();
      NPKSecureUnarchiveObject(v1, v12);
      v13 = (void *)objc_claimAutoreleasedReturnValue();
    }
    else
    {
      v13 = 0;
    }
    objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 80) + 8) + 40), v13);
    if (v11)
    {

    }
  }
  else
  {
    pk_Payment_log();
    v14 = objc_claimAutoreleasedReturnValue();
    v15 = os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT);

    if (v15)
    {
      pk_Payment_log();
      v16 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
      {
        v17[0] = 0;
        _os_log_impl(&dword_213518000, v16, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", (uint8_t *)v17, 2u);
      }

    }
  }

}

- (id)deviceIDSIdentifier
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;

  objc_msgSend(MEMORY[0x24BE6B4E0], "sharedInstance");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  NPKPairedOrPairingDevice();
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  -[NPKPaymentWebServiceCompanionTargetDevice provisioningService](self, "provisioningService");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "devices");
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v3, "deviceForNRDevice:fromIDSDevices:", v4, v6);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "uniqueIDOverride");
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  return v8;
}

- (void)paymentWebService:(id)a3 canAddSecureElementPassWithConfiguration:(id)a4 completion:(id)a5
{
  id v8;
  id v9;
  NSObject *v10;
  _BOOL4 v11;
  NSObject *v12;
  void *v13;
  dispatch_queue_t v14;
  uint64_t v15;
  NSObject *v16;
  id v17;
  void *v18;
  NPKPaymentPreflighter *v19;
  void *v20;
  NPKPaymentPreflighter *v21;
  NSObject *v22;
  id v23;
  NSObject *v24;
  id v25;
  id v26;
  _QWORD v27[4];
  NSObject *v28;
  id v29;
  _QWORD *v30;
  _BYTE *v31;
  _QWORD *v32;
  _QWORD v33[4];
  NSObject *v34;
  id v35;
  _QWORD *v36;
  _BYTE *v37;
  _QWORD *v38;
  _QWORD v39[3];
  char v40;
  _QWORD v41[4];
  NSObject *v42;
  id v43;
  _QWORD *v44;
  _QWORD *v45;
  _QWORD *v46;
  _QWORD v47[3];
  char v48;
  _QWORD v49[3];
  char v50;
  _QWORD v51[3];
  char v52;
  _BYTE buf[24];
  uint64_t (*v54)(uint64_t, uint64_t);
  void (*v55)(uint64_t);
  id v56;
  uint64_t v57;

  v57 = *MEMORY[0x24BDAC8D0];
  v26 = a3;
  v8 = a4;
  v9 = a5;
  pk_Payment_log();
  v10 = objc_claimAutoreleasedReturnValue();
  v11 = os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT);

  if (v11)
  {
    pk_Payment_log();
    v12 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
    {
      v13 = (void *)MEMORY[0x2199B6780](v9);
      *(_DWORD *)buf = 138412546;
      *(_QWORD *)&buf[4] = v8;
      *(_WORD *)&buf[12] = 2112;
      *(_QWORD *)&buf[14] = v13;
      _os_log_impl(&dword_213518000, v12, OS_LOG_TYPE_DEFAULT, "Notice: Target device - can add secure element pass with configuration %@ completion: %@", buf, 0x16u);

    }
  }
  v14 = dispatch_queue_create("com.apple.NPKCanAddSecureElementPass", 0);
  v51[0] = 0;
  v51[1] = v51;
  v51[2] = 0x2020000000;
  v52 = 0;
  v49[0] = 0;
  v49[1] = v49;
  v49[2] = 0x2020000000;
  v50 = 0;
  v47[0] = 0;
  v47[1] = v47;
  v47[2] = 0x2020000000;
  v48 = 0;
  v15 = MEMORY[0x24BDAC760];
  v41[0] = MEMORY[0x24BDAC760];
  v41[1] = 3221225472;
  v41[2] = __115__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_canAddSecureElementPassWithConfiguration_completion___block_invoke;
  v41[3] = &unk_24CFED898;
  v44 = v49;
  v45 = v47;
  v16 = v14;
  v42 = v16;
  v17 = v9;
  v43 = v17;
  v46 = v51;
  v18 = (void *)MEMORY[0x2199B6780](v41);
  v39[0] = 0;
  v39[1] = v39;
  v39[2] = 0x2020000000;
  v40 = 1;
  *(_QWORD *)buf = 0;
  *(_QWORD *)&buf[8] = buf;
  *(_QWORD *)&buf[16] = 0x3032000000;
  v54 = __Block_byref_object_copy__23;
  v55 = __Block_byref_object_dispose__23;
  v56 = 0;
  v19 = [NPKPaymentPreflighter alloc];
  -[NPKPaymentWebServiceCompanionTargetDevice companionAgentConnection](self, "companionAgentConnection");
  v20 = (void *)objc_claimAutoreleasedReturnValue();
  v21 = -[NPKPaymentPreflighter initWithWebService:targetDevice:companionAgentConnection:](v19, "initWithWebService:targetDevice:companionAgentConnection:", v26, self, v20);

  v33[0] = v15;
  v33[1] = 3221225472;
  v33[2] = __115__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_canAddSecureElementPassWithConfiguration_completion___block_invoke_630;
  v33[3] = &unk_24CFED8E8;
  v22 = v16;
  v34 = v22;
  v36 = v39;
  v37 = buf;
  v38 = v49;
  v23 = v18;
  v35 = v23;
  -[NPKPaymentPreflighter addSecureElementPassPreflightWithCompletion:](v21, "addSecureElementPassPreflightWithCompletion:", v33);
  v27[0] = v15;
  v27[1] = 3221225472;
  v27[2] = __115__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_canAddSecureElementPassWithConfiguration_completion___block_invoke_3;
  v27[3] = &unk_24CFED8E8;
  v24 = v22;
  v28 = v24;
  v30 = v39;
  v31 = buf;
  v32 = v47;
  v25 = v23;
  v29 = v25;
  -[NPKPaymentWebServiceCompanionTargetDevice _canAddSecureElementPassWithConfiguration:completion:](self, "_canAddSecureElementPassWithConfiguration:completion:", v8, v27);

  _Block_object_dispose(buf, 8);
  _Block_object_dispose(v39, 8);

  _Block_object_dispose(v47, 8);
  _Block_object_dispose(v49, 8);
  _Block_object_dispose(v51, 8);

}

void __115__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_canAddSecureElementPassWithConfiguration_completion___block_invoke(uint64_t a1, int a2, void *a3)
{
  __CFString *v5;
  NSObject *v6;
  _BOOL4 v7;
  NSObject *v8;
  const __CFString *v9;
  const __CFString *v10;
  const __CFString *v11;
  uint64_t v12;
  NSObject *v13;
  _BOOL4 v14;
  NSObject *v15;
  const __CFString *v16;
  NSObject *v17;
  _BOOL4 v18;
  NSObject *v19;
  const __CFString *v20;
  void (*v21)(void);
  NSObject *v22;
  _BOOL4 v23;
  NSObject *v24;
  int v25;
  const __CFString *v26;
  __int16 v27;
  const __CFString *v28;
  __int16 v29;
  const __CFString *v30;
  __int16 v31;
  __CFString *v32;
  uint64_t v33;

  v33 = *MEMORY[0x24BDAC8D0];
  v5 = a3;
  pk_Payment_log();
  v6 = objc_claimAutoreleasedReturnValue();
  v7 = os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT);

  if (v7)
  {
    pk_Payment_log();
    v8 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      v9 = CFSTR("YES");
      if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24))
        v10 = CFSTR("YES");
      else
        v10 = CFSTR("NO");
      if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 24))
        v11 = CFSTR("YES");
      else
        v11 = CFSTR("NO");
      if (!a2)
        v9 = CFSTR("NO");
      v25 = 138413058;
      v26 = v10;
      v27 = 2112;
      v28 = v11;
      v29 = 2112;
      v30 = v9;
      v31 = 2112;
      v32 = v5;
      _os_log_impl(&dword_213518000, v8, OS_LOG_TYPE_DEFAULT, "Notice: Target device - can add secure element pass called common completion with checkedPreflight: %@ checkedWatch: %@ for canAddPass: %@ error: %@", (uint8_t *)&v25, 0x2Au);
    }

  }
  dispatch_assert_queue_V2(*(dispatch_queue_t *)(a1 + 32));
  if (*(_QWORD *)(a1 + 40))
  {
    v12 = *(_QWORD *)(*(_QWORD *)(a1 + 64) + 8);
    if (!*(_BYTE *)(v12 + 24))
    {
      if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24))
      {
        if (!*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 24))
          goto LABEL_38;
        *(_BYTE *)(v12 + 24) = 1;
        pk_Payment_log();
        v17 = objc_claimAutoreleasedReturnValue();
        v18 = os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT);

        if (v18)
        {
          pk_Payment_log();
          v19 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT))
          {
            v20 = CFSTR("NO");
            if (a2)
              v20 = CFSTR("YES");
            v25 = 138412546;
            v26 = v20;
            v27 = 2112;
            v28 = v5;
            _os_log_impl(&dword_213518000, v19, OS_LOG_TYPE_DEFAULT, "Notice: Target device - can add secure element pass finished with canAddPass: %@ error: %@", (uint8_t *)&v25, 0x16u);
          }

        }
        v21 = *(void (**)(void))(*(_QWORD *)(a1 + 40) + 16);
      }
      else
      {
        if (!*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 24) || (a2 & 1) != 0)
          goto LABEL_38;
        *(_BYTE *)(v12 + 24) = 1;
        pk_Payment_log();
        v22 = objc_claimAutoreleasedReturnValue();
        v23 = os_log_type_enabled(v22, OS_LOG_TYPE_DEFAULT);

        if (v23)
        {
          pk_Payment_log();
          v24 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v24, OS_LOG_TYPE_DEFAULT))
          {
            v25 = 138412546;
            v26 = CFSTR("NO");
            v27 = 2112;
            v28 = v5;
            _os_log_impl(&dword_213518000, v24, OS_LOG_TYPE_DEFAULT, "Notice: Target device - can add secure element pass finished early with canAddPass: %@ error: %@", (uint8_t *)&v25, 0x16u);
          }

        }
        v21 = *(void (**)(void))(*(_QWORD *)(a1 + 40) + 16);
      }
      v21();
      goto LABEL_38;
    }
    pk_Payment_log();
    v13 = objc_claimAutoreleasedReturnValue();
    v14 = os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT);

    if (v14)
    {
      pk_Payment_log();
      v15 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
      {
        v16 = CFSTR("NO");
        if (a2)
          v16 = CFSTR("YES");
        v25 = 138412546;
        v26 = v16;
        v27 = 2112;
        v28 = v5;
        _os_log_impl(&dword_213518000, v15, OS_LOG_TYPE_DEFAULT, "Notice: Target device - can add secure element pass already completed with canAddPass: %@ error: %@", (uint8_t *)&v25, 0x16u);
      }

    }
  }
LABEL_38:

}

void __115__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_canAddSecureElementPassWithConfiguration_completion___block_invoke_630(uint64_t a1, char a2, void *a3)
{
  id v5;
  NSObject *v6;
  id v7;
  id v8;
  __int128 v9;
  _QWORD block[4];
  id v11;
  __int128 v12;
  __int128 v13;
  char v14;

  v5 = a3;
  v6 = *(NSObject **)(a1 + 32);
  block[0] = MEMORY[0x24BDAC760];
  block[1] = 3221225472;
  block[2] = __115__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_canAddSecureElementPassWithConfiguration_completion___block_invoke_2;
  block[3] = &unk_24CFED8C0;
  v14 = a2;
  v11 = v5;
  v13 = *(_OWORD *)(a1 + 56);
  v9 = *(_OWORD *)(a1 + 40);
  v7 = (id)v9;
  v12 = v9;
  v8 = v5;
  dispatch_async(v6, block);

}

uint64_t __115__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_canAddSecureElementPassWithConfiguration_completion___block_invoke_2(uint64_t a1)
{
  uint64_t v2;
  char v3;
  uint64_t v4;
  id *v5;
  void *v6;
  void *v7;

  v2 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
  v3 = *(_BYTE *)(v2 + 24);
  if (v3)
    v3 = *(_BYTE *)(a1 + 72) != 0;
  *(_BYTE *)(v2 + 24) = v3;
  v4 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
  v7 = *(void **)(v4 + 40);
  v5 = (id *)(v4 + 40);
  v6 = v7;
  if (!v7)
    v6 = *(void **)(a1 + 32);
  objc_storeStrong(v5, v6);
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 24) = 1;
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

void __115__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_canAddSecureElementPassWithConfiguration_completion___block_invoke_3(uint64_t a1, char a2, void *a3)
{
  id v5;
  NSObject *v6;
  id v7;
  id v8;
  __int128 v9;
  _QWORD block[4];
  id v11;
  __int128 v12;
  __int128 v13;
  char v14;

  v5 = a3;
  v6 = *(NSObject **)(a1 + 32);
  block[0] = MEMORY[0x24BDAC760];
  block[1] = 3221225472;
  block[2] = __115__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_canAddSecureElementPassWithConfiguration_completion___block_invoke_4;
  block[3] = &unk_24CFED8C0;
  v14 = a2;
  v11 = v5;
  v13 = *(_OWORD *)(a1 + 56);
  v9 = *(_OWORD *)(a1 + 40);
  v7 = (id)v9;
  v12 = v9;
  v8 = v5;
  dispatch_async(v6, block);

}

uint64_t __115__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_canAddSecureElementPassWithConfiguration_completion___block_invoke_4(uint64_t a1)
{
  uint64_t v2;
  char v3;
  void *v4;
  uint64_t v5;

  v2 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
  v3 = *(_BYTE *)(v2 + 24);
  if (v3)
    v3 = *(_BYTE *)(a1 + 72) != 0;
  *(_BYTE *)(v2 + 24) = v3;
  v4 = *(void **)(a1 + 32);
  v5 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
  if (!v4)
    v4 = *(void **)(v5 + 40);
  objc_storeStrong((id *)(v5 + 40), v4);
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 24) = 1;
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

- (void)_canAddSecureElementPassWithConfiguration:(id)a3 completion:(id)a4
{
  id v6;
  void (**v7)(id, uint64_t, void *);
  void *v8;
  void *v9;
  uint64_t v10;
  _BOOL4 v11;
  NSObject *v12;
  _BOOL4 v13;
  NSObject *v14;
  void *v15;
  NSObject *v16;
  void *v17;
  uint64_t v18;
  void *v19;
  void *v20;
  NSObject *v21;
  _BOOL4 v22;
  NSObject *v23;
  NSObject *v24;
  void *v25;
  uint64_t v26;
  void *v27;
  _QWORD block[4];
  id v29;
  NPKPaymentWebServiceCompanionTargetDevice *v30;
  void (**v31)(id, uint64_t, void *);
  uint64_t v32;
  const __CFString *v33;
  uint64_t v34;
  const __CFString *v35;
  uint8_t buf[4];
  id v37;
  __int16 v38;
  void *v39;
  uint64_t v40;

  v40 = *MEMORY[0x24BDAC8D0];
  v6 = a3;
  v7 = (void (**)(id, uint64_t, void *))a4;
  objc_msgSend(MEMORY[0x24BE6EC00], "sharedInstanceWithRemoteLibrary");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "_remoteLibrary");
  v9 = (void *)objc_claimAutoreleasedReturnValue();

  v10 = objc_msgSend(v9, "canAddSecureElementPassWithConfiguration:", v6);
  if (!(_DWORD)v10)
  {
    if (!v7)
      goto LABEL_16;
    v17 = (void *)MEMORY[0x24BDD1540];
    v18 = *MEMORY[0x24BE6F2A8];
    v32 = *MEMORY[0x24BDD0FD8];
    v33 = CFSTR("Target device does not support secure element configuration.");
    objc_msgSend(MEMORY[0x24BDBCE70], "dictionaryWithObjects:forKeys:count:", &v33, &v32, 1);
    v19 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v17, "errorWithDomain:code:userInfo:", v18, 4, v19);
    v20 = (void *)objc_claimAutoreleasedReturnValue();

    goto LABEL_14;
  }
  if (objc_msgSend(v6, "configurationType") != 1)
  {
    if (!v7)
      goto LABEL_16;
    v20 = 0;
LABEL_14:
    v7[2](v7, v10, v20);
LABEL_15:

    goto LABEL_16;
  }
  if (-[NPKPaymentWebServiceCompanionTargetDevice _isUWBSubcredentialProvisioningSupported](self, "_isUWBSubcredentialProvisioningSupported"))
  {
    v11 = -[NPKPaymentWebServiceCompanionTargetDevice _deviceIsConnected](self, "_deviceIsConnected");
    pk_Payment_log();
    v12 = objc_claimAutoreleasedReturnValue();
    v13 = os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT);

    if (v11)
    {
      if (v13)
      {
        pk_Payment_log();
        v14 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
        {
          v15 = (void *)MEMORY[0x2199B6780](v7);
          *(_DWORD *)buf = 138412546;
          v37 = v6;
          v38 = 2112;
          v39 = v15;
          _os_log_impl(&dword_213518000, v14, OS_LOG_TYPE_DEFAULT, "Notice: Target device - sending canAddSecureElementPassWithConfiguration request for configuration: %@ completion: %@", buf, 0x16u);

        }
      }
      -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
      v16 = objc_claimAutoreleasedReturnValue();
      block[0] = MEMORY[0x24BDAC760];
      block[1] = 3221225472;
      block[2] = __98__NPKPaymentWebServiceCompanionTargetDevice__canAddSecureElementPassWithConfiguration_completion___block_invoke;
      block[3] = &unk_24CFE84E8;
      v29 = v6;
      v30 = self;
      v31 = v7;
      dispatch_sync(v16, block);

      goto LABEL_16;
    }
    if (v13)
    {
      pk_Payment_log();
      v24 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v24, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)buf = 0;
        _os_log_impl(&dword_213518000, v24, OS_LOG_TYPE_DEFAULT, "Notice: Target device - not sending canAddSecureElementPassWithConfiguration request; watch not immediately reachable.",
          buf,
          2u);
      }

    }
    if (v7)
    {
      v25 = (void *)MEMORY[0x24BDD1540];
      v26 = *MEMORY[0x24BE6F8A0];
      v34 = *MEMORY[0x24BDD0FD8];
      v35 = CFSTR("Target device is not reachable.");
      objc_msgSend(MEMORY[0x24BDBCE70], "dictionaryWithObjects:forKeys:count:", &v35, &v34, 1);
      v27 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v25, "errorWithDomain:code:userInfo:", v26, 19, v27);
      v20 = (void *)objc_claimAutoreleasedReturnValue();

      v7[2](v7, 0, v20);
      goto LABEL_15;
    }
  }
  else
  {
    pk_Payment_log();
    v21 = objc_claimAutoreleasedReturnValue();
    v22 = os_log_type_enabled(v21, OS_LOG_TYPE_DEFAULT);

    if (v22)
    {
      pk_Payment_log();
      v23 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v23, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)buf = 0;
        _os_log_impl(&dword_213518000, v23, OS_LOG_TYPE_DEFAULT, "Warning: The expected capability was not found; continuing immediately.",
          buf,
          2u);
      }

    }
    if (v7)
      v7[2](v7, 1, 0);
  }
LABEL_16:

}

void __98__NPKPaymentWebServiceCompanionTargetDevice__canAddSecureElementPassWithConfiguration_completion___block_invoke(uint64_t a1)
{
  NPKProtoCanAddSecureElementPassWithConfigurationRequest *v2;
  void *v3;
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  NSObject *v10;
  void *v11;
  void *v12;
  void *v13;
  NSObject *v14;
  _BOOL4 v15;
  const char *v16;
  NSObject *v17;
  os_log_type_t v18;
  NSObject *v19;
  _BOOL4 v20;
  _QWORD v21[4];
  id v22;
  uint8_t buf[4];
  void *v24;
  __int16 v25;
  int v26;
  uint64_t v27;
  _QWORD v28[2];

  v28[1] = *MEMORY[0x24BDAC8D0];
  v2 = objc_alloc_init(NPKProtoCanAddSecureElementPassWithConfigurationRequest);
  NPKSecureArchiveObject(*(void **)(a1 + 32));
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  -[NPKProtoCanAddSecureElementPassWithConfigurationRequest setConfigurationData:](v2, "setConfigurationData:", v3);

  v4 = objc_alloc(MEMORY[0x24BE4FE40]);
  -[NPKProtoCanAddSecureElementPassWithConfigurationRequest data](v2, "data");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = (void *)objc_msgSend(v4, "initWithProtobufData:type:isResponse:", v5, 90, 0);

  v7 = *(void **)(a1 + 40);
  v27 = *MEMORY[0x24BE4FB30];
  v28[0] = &unk_24D056700;
  objc_msgSend(MEMORY[0x24BDBCE70], "dictionaryWithObjects:forKeys:count:", v28, &v27, 1);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "_sendProtobuf:responseExpected:extraOptions:", v6, 1, v8);
  v9 = (void *)objc_claimAutoreleasedReturnValue();

  if (v9)
  {
    if (*(_QWORD *)(a1 + 48))
    {
      v10 = MEMORY[0x2199B6780]();
      v21[0] = MEMORY[0x24BDAC760];
      v21[1] = 3221225472;
      v21[2] = __98__NPKPaymentWebServiceCompanionTargetDevice__canAddSecureElementPassWithConfiguration_completion___block_invoke_634;
      v21[3] = &unk_24CFE7B80;
      v22 = *(id *)(a1 + 48);
      v11 = (void *)MEMORY[0x2199B6780](v21);
      v12 = *(void **)(a1 + 40);
      v13 = (void *)MEMORY[0x2199B6780](v10);
      objc_msgSend(v12, "_trackOutstandingRequestWithMessageIdentifier:completionHandler:errorHandler:", v9, v13, v11);

LABEL_11:
      goto LABEL_12;
    }
    pk_Payment_log();
    v19 = objc_claimAutoreleasedReturnValue();
    v20 = os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT);

    if (v20)
    {
      pk_Payment_log();
      v10 = objc_claimAutoreleasedReturnValue();
      if (!os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
        goto LABEL_11;
      *(_DWORD *)buf = 138412546;
      v24 = v9;
      v25 = 1024;
      v26 = objc_msgSend(v6, "type");
      v16 = "Warning: No response expected for message with identifier %@ of type %hu";
      v17 = v10;
      v18 = OS_LOG_TYPE_DEFAULT;
      goto LABEL_10;
    }
  }
  else
  {
    pk_Payment_log();
    v14 = objc_claimAutoreleasedReturnValue();
    v15 = os_log_type_enabled(v14, OS_LOG_TYPE_ERROR);

    if (v15)
    {
      pk_Payment_log();
      v10 = objc_claimAutoreleasedReturnValue();
      if (!os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
        goto LABEL_11;
      *(_DWORD *)buf = 138412546;
      v24 = v6;
      v25 = 1024;
      v26 = objc_msgSend(v6, "type");
      v16 = "Error: No message identifier for protobuf %@ with type %hu";
      v17 = v10;
      v18 = OS_LOG_TYPE_ERROR;
LABEL_10:
      _os_log_impl(&dword_213518000, v17, v18, v16, buf, 0x12u);
      goto LABEL_11;
    }
  }
LABEL_12:

}

uint64_t __98__NPKPaymentWebServiceCompanionTargetDevice__canAddSecureElementPassWithConfiguration_completion___block_invoke_634(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 32);
  if (result)
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(result + 16))(result, 0, a2);
  return result;
}

- (void)canAddSecureElementPassWithConfigurationResponse:(id)a3
{
  id v4;
  NSObject *v5;
  _BOOL4 v6;
  NSObject *v7;
  void *v8;
  void *v9;
  void *v10;
  NSObject *v11;
  NSObject *v12;
  _BOOL4 v13;
  NSObject *v14;
  uint64_t v15;
  uint8_t v16[16];
  _QWORD block[5];
  id v18;
  id v19;
  __int128 *p_buf;
  uint64_t *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t (*v26)(uint64_t, uint64_t);
  void (*v27)(uint64_t);
  id v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  char v32;
  __int128 buf;
  uint64_t v34;
  uint64_t (*v35)(uint64_t, uint64_t);
  void (*v36)(uint64_t);
  id v37;
  uint64_t v38;

  v38 = *MEMORY[0x24BDAC8D0];
  v4 = a3;
  pk_Payment_log();
  v5 = objc_claimAutoreleasedReturnValue();
  v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    pk_Payment_log();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend(v4, "npkDescription");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      LODWORD(buf) = 138412290;
      *(_QWORD *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_213518000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Target canAddSecureElementPassWithConfigurationResponse: incoming protobuf %@", (uint8_t *)&buf, 0xCu);

    }
  }
  objc_msgSend(v4, "context");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "incomingResponseIdentifier");
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  *(_QWORD *)&buf = 0;
  *((_QWORD *)&buf + 1) = &buf;
  v34 = 0x3032000000;
  v35 = __Block_byref_object_copy__342;
  v36 = __Block_byref_object_dispose__343;
  v37 = 0;
  v29 = 0;
  v30 = &v29;
  v31 = 0x2020000000;
  v32 = 0;
  v23 = 0;
  v24 = &v23;
  v25 = 0x3032000000;
  v26 = __Block_byref_object_copy__23;
  v27 = __Block_byref_object_dispose__23;
  v28 = 0;
  if (v10)
  {
    -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
    v11 = objc_claimAutoreleasedReturnValue();
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 3221225472;
    block[2] = __94__NPKPaymentWebServiceCompanionTargetDevice_canAddSecureElementPassWithConfigurationResponse___block_invoke;
    block[3] = &unk_24CFED060;
    block[4] = self;
    v18 = v10;
    v19 = v4;
    p_buf = &buf;
    v21 = &v29;
    v22 = &v23;
    dispatch_sync(v11, block);

  }
  else
  {
    pk_Payment_log();
    v12 = objc_claimAutoreleasedReturnValue();
    v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      pk_Payment_log();
      v14 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)v16 = 0;
        _os_log_impl(&dword_213518000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v16, 2u);
      }

    }
  }
  v15 = *(_QWORD *)(*((_QWORD *)&buf + 1) + 40);
  if (v15)
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v15 + 16))(v15, *((unsigned __int8 *)v30 + 24), v24[5]);
  _Block_object_dispose(&v23, 8);

  _Block_object_dispose(&v29, 8);
  _Block_object_dispose(&buf, 8);

}

void __94__NPKPaymentWebServiceCompanionTargetDevice_canAddSecureElementPassWithConfigurationResponse___block_invoke(uint64_t a1)
{
  void *v1;
  void *v3;
  void *v4;
  NPKProtoCanAddSecureElementPassWithConfigurationResponse *v5;
  void *v6;
  NPKProtoCanAddSecureElementPassWithConfigurationResponse *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  _BOOL4 v12;
  NSObject *v13;
  void *v14;
  NSObject *v15;
  _BOOL4 v16;
  NSObject *v17;
  __int16 v18[8];

  objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "objectForKey:", *(_QWORD *)(a1 + 40));
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  if (v4)
  {
    v5 = [NPKProtoCanAddSecureElementPassWithConfigurationResponse alloc];
    objc_msgSend(*(id *)(a1 + 48), "data");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    v7 = -[NPKProtoCanAddSecureElementPassWithConfigurationResponse initWithData:](v5, "initWithData:", v6);

    objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "removeObjectForKey:", *(_QWORD *)(a1 + 40));

    objc_msgSend(v4, "completionHandler");
    v9 = objc_claimAutoreleasedReturnValue();
    v10 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
    v11 = *(void **)(v10 + 40);
    *(_QWORD *)(v10 + 40) = v9;

    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 24) = -[NPKProtoCanAddSecureElementPassWithConfigurationResponse canAddPass](v7, "canAddPass");
    v12 = -[NPKProtoCanAddSecureElementPassWithConfigurationResponse hasErrorData](v7, "hasErrorData");
    if (v12)
    {
      -[NPKProtoCanAddSecureElementPassWithConfigurationResponse errorData](v7, "errorData");
      v1 = (void *)objc_claimAutoreleasedReturnValue();
      v13 = objc_opt_class();
      NPKSecureUnarchiveObject(v1, v13);
      v14 = (void *)objc_claimAutoreleasedReturnValue();
    }
    else
    {
      v14 = 0;
    }
    objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 72) + 8) + 40), v14);
    if (v12)
    {

    }
  }
  else
  {
    pk_Payment_log();
    v15 = objc_claimAutoreleasedReturnValue();
    v16 = os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT);

    if (v16)
    {
      pk_Payment_log();
      v17 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
      {
        v18[0] = 0;
        _os_log_impl(&dword_213518000, v17, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", (uint8_t *)v18, 2u);
      }

    }
  }

}

- (void)paymentWebService:(id)a3 canAcceptInvitation:(id)a4 withCompletionV2:(id)a5
{
  id v7;
  id v8;
  NSObject *v9;
  _BOOL4 v10;
  NSObject *v11;
  void *v12;
  NSObject *v13;
  void *v14;
  NSObject *v15;
  _BOOL4 v16;
  NSObject *v17;
  void *v18;
  uint64_t v19;
  void *v20;
  _QWORD block[4];
  id v22;
  NPKPaymentWebServiceCompanionTargetDevice *v23;
  id v24;
  uint64_t v25;
  const __CFString *v26;
  uint8_t buf[4];
  id v28;
  __int16 v29;
  void *v30;
  uint64_t v31;

  v31 = *MEMORY[0x24BDAC8D0];
  v7 = a4;
  v8 = a5;
  pk_Payment_log();
  v9 = objc_claimAutoreleasedReturnValue();
  v10 = os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT);

  if (v10)
  {
    pk_Payment_log();
    v11 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
    {
      v12 = (void *)MEMORY[0x2199B6780](v8);
      *(_DWORD *)buf = 138412546;
      v28 = v7;
      v29 = 2112;
      v30 = v12;
      _os_log_impl(&dword_213518000, v11, OS_LOG_TYPE_DEFAULT, "Notice: Target device - can accept invitation request with invitation: %@ completion: %@", buf, 0x16u);

    }
  }
  if (-[NPKPaymentWebServiceCompanionTargetDevice _isSubcredentialProvisioningSupported](self, "_isSubcredentialProvisioningSupported"))
  {
    -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
    v13 = objc_claimAutoreleasedReturnValue();
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 3221225472;
    block[2] = __100__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_canAcceptInvitation_withCompletionV2___block_invoke;
    block[3] = &unk_24CFE84E8;
    v22 = v7;
    v23 = self;
    v24 = v8;
    dispatch_sync(v13, block);

    v14 = v22;
LABEL_13:

    goto LABEL_14;
  }
  pk_Payment_log();
  v15 = objc_claimAutoreleasedReturnValue();
  v16 = os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT);

  if (v16)
  {
    pk_Payment_log();
    v17 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl(&dword_213518000, v17, OS_LOG_TYPE_DEFAULT, "Notice: Target device does not support subcredential provisioning.", buf, 2u);
    }

  }
  if (v8)
  {
    v18 = (void *)MEMORY[0x24BDD1540];
    v19 = *MEMORY[0x24BE6F8A0];
    v25 = *MEMORY[0x24BDD0FD8];
    v26 = CFSTR("Target device does not support subcredential provisioning.");
    objc_msgSend(MEMORY[0x24BDBCE70], "dictionaryWithObjects:forKeys:count:", &v26, &v25, 1);
    v20 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v18, "errorWithDomain:code:userInfo:", v19, 21, v20);
    v14 = (void *)objc_claimAutoreleasedReturnValue();

    (*((void (**)(id, void *))v8 + 2))(v8, v14);
    goto LABEL_13;
  }
LABEL_14:

}

void __100__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_canAcceptInvitation_withCompletionV2___block_invoke(uint64_t a1)
{
  NPKProtoCanAcceptInvitationRequest *v2;
  void *v3;
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  NSObject *v10;
  void *v11;
  void *v12;
  void *v13;
  NSObject *v14;
  _BOOL4 v15;
  const char *v16;
  NSObject *v17;
  os_log_type_t v18;
  NSObject *v19;
  _BOOL4 v20;
  _QWORD v21[4];
  id v22;
  uint8_t buf[4];
  void *v24;
  __int16 v25;
  int v26;
  uint64_t v27;
  _QWORD v28[2];

  v28[1] = *MEMORY[0x24BDAC8D0];
  v2 = objc_alloc_init(NPKProtoCanAcceptInvitationRequest);
  NPKSecureArchiveObject(*(void **)(a1 + 32));
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  -[NPKProtoCanAcceptInvitationRequest setInvitationData:](v2, "setInvitationData:", v3);

  v4 = objc_alloc(MEMORY[0x24BE4FE40]);
  -[NPKProtoCanAcceptInvitationRequest data](v2, "data");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = (void *)objc_msgSend(v4, "initWithProtobufData:type:isResponse:", v5, 73, 0);

  v7 = *(void **)(a1 + 40);
  v27 = *MEMORY[0x24BE4FB30];
  v28[0] = &unk_24D0566F0;
  objc_msgSend(MEMORY[0x24BDBCE70], "dictionaryWithObjects:forKeys:count:", v28, &v27, 1);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "_sendProtobuf:responseExpected:extraOptions:", v6, 1, v8);
  v9 = (void *)objc_claimAutoreleasedReturnValue();

  if (v9)
  {
    if (*(_QWORD *)(a1 + 48))
    {
      v10 = MEMORY[0x2199B6780]();
      v21[0] = MEMORY[0x24BDAC760];
      v21[1] = 3221225472;
      v21[2] = __100__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_canAcceptInvitation_withCompletionV2___block_invoke_2;
      v21[3] = &unk_24CFE7B80;
      v22 = *(id *)(a1 + 48);
      v11 = (void *)MEMORY[0x2199B6780](v21);
      v12 = *(void **)(a1 + 40);
      v13 = (void *)MEMORY[0x2199B6780](v10);
      objc_msgSend(v12, "_trackOutstandingRequestWithMessageIdentifier:completionHandler:errorHandler:", v9, v13, v11);

LABEL_11:
      goto LABEL_12;
    }
    pk_Payment_log();
    v19 = objc_claimAutoreleasedReturnValue();
    v20 = os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT);

    if (v20)
    {
      pk_Payment_log();
      v10 = objc_claimAutoreleasedReturnValue();
      if (!os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
        goto LABEL_11;
      *(_DWORD *)buf = 138412546;
      v24 = v9;
      v25 = 1024;
      v26 = objc_msgSend(v6, "type");
      v16 = "Warning: No response expected for message with identifier %@ of type %hu";
      v17 = v10;
      v18 = OS_LOG_TYPE_DEFAULT;
      goto LABEL_10;
    }
  }
  else
  {
    pk_Payment_log();
    v14 = objc_claimAutoreleasedReturnValue();
    v15 = os_log_type_enabled(v14, OS_LOG_TYPE_ERROR);

    if (v15)
    {
      pk_Payment_log();
      v10 = objc_claimAutoreleasedReturnValue();
      if (!os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
        goto LABEL_11;
      *(_DWORD *)buf = 138412546;
      v24 = v6;
      v25 = 1024;
      v26 = objc_msgSend(v6, "type");
      v16 = "Error: No message identifier for protobuf %@ with type %hu";
      v17 = v10;
      v18 = OS_LOG_TYPE_ERROR;
LABEL_10:
      _os_log_impl(&dword_213518000, v17, v18, v16, buf, 0x12u);
      goto LABEL_11;
    }
  }
LABEL_12:

}

uint64_t __100__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_canAcceptInvitation_withCompletionV2___block_invoke_2(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 32);
  if (result)
    return (*(uint64_t (**)(void))(result + 16))();
  return result;
}

- (void)canAcceptInvitationResponse:(id)a3
{
  id v4;
  NSObject *v5;
  _BOOL4 v6;
  NSObject *v7;
  void *v8;
  void *v9;
  void *v10;
  NSObject *v11;
  NSObject *v12;
  _BOOL4 v13;
  NSObject *v14;
  uint64_t v15;
  uint8_t v16[8];
  _QWORD block[5];
  id v18;
  id v19;
  __int128 *p_buf;
  uint64_t *v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t (*v25)(uint64_t, uint64_t);
  void (*v26)(uint64_t);
  id v27;
  __int128 buf;
  uint64_t v29;
  uint64_t (*v30)(uint64_t, uint64_t);
  void (*v31)(uint64_t);
  id v32;
  uint64_t v33;

  v33 = *MEMORY[0x24BDAC8D0];
  v4 = a3;
  pk_Payment_log();
  v5 = objc_claimAutoreleasedReturnValue();
  v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    pk_Payment_log();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend(v4, "npkDescription");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      LODWORD(buf) = 138412290;
      *(_QWORD *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_213518000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Target canAcceptInvitationResponse: incoming protobuf %@", (uint8_t *)&buf, 0xCu);

    }
  }
  objc_msgSend(v4, "context");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "incomingResponseIdentifier");
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  *(_QWORD *)&buf = 0;
  *((_QWORD *)&buf + 1) = &buf;
  v29 = 0x3032000000;
  v30 = __Block_byref_object_copy__342;
  v31 = __Block_byref_object_dispose__343;
  v32 = 0;
  v22 = 0;
  v23 = &v22;
  v24 = 0x3032000000;
  v25 = __Block_byref_object_copy__23;
  v26 = __Block_byref_object_dispose__23;
  v27 = 0;
  if (v10)
  {
    -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
    v11 = objc_claimAutoreleasedReturnValue();
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 3221225472;
    block[2] = __73__NPKPaymentWebServiceCompanionTargetDevice_canAcceptInvitationResponse___block_invoke;
    block[3] = &unk_24CFED0D8;
    block[4] = self;
    v18 = v10;
    v19 = v4;
    p_buf = &buf;
    v21 = &v22;
    dispatch_sync(v11, block);

  }
  else
  {
    pk_Payment_log();
    v12 = objc_claimAutoreleasedReturnValue();
    v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      pk_Payment_log();
      v14 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)v16 = 0;
        _os_log_impl(&dword_213518000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v16, 2u);
      }

    }
  }
  v15 = *(_QWORD *)(*((_QWORD *)&buf + 1) + 40);
  if (v15)
    (*(void (**)(uint64_t, uint64_t))(v15 + 16))(v15, v23[5]);
  _Block_object_dispose(&v22, 8);

  _Block_object_dispose(&buf, 8);
}

void __73__NPKPaymentWebServiceCompanionTargetDevice_canAcceptInvitationResponse___block_invoke(uint64_t a1)
{
  void *v1;
  void *v3;
  void *v4;
  NPKProtoCanAcceptInvitationResponse *v5;
  void *v6;
  NPKProtoCanAcceptInvitationResponse *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  _BOOL4 v12;
  NSObject *v13;
  void *v14;
  NSObject *v15;
  _BOOL4 v16;
  NSObject *v17;
  __int16 v18[8];

  objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "objectForKey:", *(_QWORD *)(a1 + 40));
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  if (v4)
  {
    v5 = [NPKProtoCanAcceptInvitationResponse alloc];
    objc_msgSend(*(id *)(a1 + 48), "data");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    v7 = -[NPKProtoCanAcceptInvitationResponse initWithData:](v5, "initWithData:", v6);

    objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "removeObjectForKey:", *(_QWORD *)(a1 + 40));

    objc_msgSend(v4, "completionHandler");
    v9 = objc_claimAutoreleasedReturnValue();
    v10 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
    v11 = *(void **)(v10 + 40);
    *(_QWORD *)(v10 + 40) = v9;

    v12 = -[NPKProtoCanAcceptInvitationResponse hasErrorData](v7, "hasErrorData");
    if (v12)
    {
      -[NPKProtoCanAcceptInvitationResponse errorData](v7, "errorData");
      v1 = (void *)objc_claimAutoreleasedReturnValue();
      v13 = objc_opt_class();
      NPKSecureUnarchiveObject(v1, v13);
      v14 = (void *)objc_claimAutoreleasedReturnValue();
    }
    else
    {
      v14 = 0;
    }
    objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 40), v14);
    if (v12)
    {

    }
  }
  else
  {
    pk_Payment_log();
    v15 = objc_claimAutoreleasedReturnValue();
    v16 = os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT);

    if (v16)
    {
      pk_Payment_log();
      v17 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
      {
        v18[0] = 0;
        _os_log_impl(&dword_213518000, v17, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", (uint8_t *)v18, 2u);
      }

    }
  }

}

- (void)canAcceptInvitationRequest:(id)a3
{
  id v4;
  NSObject *v5;
  _BOOL4 v6;
  NSObject *v7;
  void *v8;
  void *v9;
  void *v10;
  NPKProtoCanAcceptInvitationRequest *v11;
  void *v12;
  NPKProtoCanAcceptInvitationRequest *v13;
  void *v14;
  NSObject *v15;
  void *v16;
  void *v17;
  id v18;
  _QWORD v19[4];
  id v20;
  id v21;
  uint8_t buf[4];
  void *v23;
  uint64_t v24;

  v24 = *MEMORY[0x24BDAC8D0];
  v4 = a3;
  pk_Payment_log();
  v5 = objc_claimAutoreleasedReturnValue();
  v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    pk_Payment_log();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend(v4, "npkDescription");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138412290;
      v23 = v8;
      _os_log_impl(&dword_213518000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Target device - received can accept invitation request: %@", buf, 0xCu);

    }
  }
  objc_msgSend(v4, "context");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "outgoingResponseIdentifier");
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  v11 = [NPKProtoCanAcceptInvitationRequest alloc];
  objc_msgSend(v4, "data");
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  v13 = -[NPKProtoCanAcceptInvitationRequest initWithData:](v11, "initWithData:", v12);

  -[NPKProtoCanAcceptInvitationRequest invitationData](v13, "invitationData");
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  v15 = objc_opt_class();
  NPKSecureUnarchiveObject(v14, v15);
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  objc_initWeak((id *)buf, self);
  -[NPKPaymentWebServiceCompanionTargetDevice subcredentialInvitationCoordinator](self, "subcredentialInvitationCoordinator");
  v17 = (void *)objc_claimAutoreleasedReturnValue();
  v19[0] = MEMORY[0x24BDAC760];
  v19[1] = 3221225472;
  v19[2] = __72__NPKPaymentWebServiceCompanionTargetDevice_canAcceptInvitationRequest___block_invoke;
  v19[3] = &unk_24CFED910;
  objc_copyWeak(&v21, (id *)buf);
  v18 = v10;
  v20 = v18;
  objc_msgSend(v17, "canAcceptInvitation:completion:", v16, v19);

  objc_destroyWeak(&v21);
  objc_destroyWeak((id *)buf);

}

void __72__NPKPaymentWebServiceCompanionTargetDevice_canAcceptInvitationRequest___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  id WeakRetained;
  NSObject *v5;
  id v6;
  _QWORD block[4];
  id v8;
  id v9;
  id v10;

  v3 = a2;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  objc_msgSend(WeakRetained, "internalQueue");
  v5 = objc_claimAutoreleasedReturnValue();
  block[0] = MEMORY[0x24BDAC760];
  block[1] = 3221225472;
  block[2] = __72__NPKPaymentWebServiceCompanionTargetDevice_canAcceptInvitationRequest___block_invoke_2;
  block[3] = &unk_24CFE8650;
  objc_copyWeak(&v10, (id *)(a1 + 40));
  v8 = v3;
  v9 = *(id *)(a1 + 32);
  v6 = v3;
  dispatch_sync(v5, block);

  objc_destroyWeak(&v10);
}

void __72__NPKPaymentWebServiceCompanionTargetDevice_canAcceptInvitationRequest___block_invoke_2(uint64_t a1)
{
  id WeakRetained;
  NPKProtoCanAcceptInvitationResponse *v3;
  void *v4;
  id v5;
  void *v6;
  void *v7;
  void *v8;
  NSObject *v9;
  _BOOL4 v10;
  NSObject *v11;
  int v12;
  void *v13;
  uint64_t v14;

  v14 = *MEMORY[0x24BDAC8D0];
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  v3 = objc_alloc_init(NPKProtoCanAcceptInvitationResponse);
  NPKSecureArchiveObject(*(void **)(a1 + 32));
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  -[NPKProtoCanAcceptInvitationResponse setErrorData:](v3, "setErrorData:", v4);

  v5 = objc_alloc(MEMORY[0x24BE4FE40]);
  -[NPKProtoCanAcceptInvitationResponse data](v3, "data");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = (void *)objc_msgSend(v5, "initWithProtobufData:type:isResponse:", v6, 73, 1);

  objc_msgSend(WeakRetained, "_sendProtobuf:responseIdentifier:", v7, *(_QWORD *)(a1 + 40));
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  if (!v8)
  {
    pk_Payment_log();
    v9 = objc_claimAutoreleasedReturnValue();
    v10 = os_log_type_enabled(v9, OS_LOG_TYPE_ERROR);

    if (v10)
    {
      pk_Payment_log();
      v11 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
      {
        v12 = 138412290;
        v13 = v7;
        _os_log_impl(&dword_213518000, v11, OS_LOG_TYPE_ERROR, "Error: No message identifier for protobuf %@", (uint8_t *)&v12, 0xCu);
      }

    }
  }

}

- (void)paymentWebService:(id)a3 subcredentialInvitationsWithCompletion:(id)a4
{
  id v5;
  NSObject *v6;
  _BOOL4 v7;
  NSObject *v8;
  NSObject *v9;
  NSObject *v10;
  _BOOL4 v11;
  NSObject *v12;
  _QWORD v13[5];
  id v14;
  uint8_t buf[16];

  v5 = a4;
  pk_Payment_log();
  v6 = objc_claimAutoreleasedReturnValue();
  v7 = os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT);

  if (v7)
  {
    pk_Payment_log();
    v8 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl(&dword_213518000, v8, OS_LOG_TYPE_DEFAULT, "Notice: Target device - subcredential invitations request", buf, 2u);
    }

  }
  if (-[NPKPaymentWebServiceCompanionTargetDevice _isSubcredentialProvisioningSupported](self, "_isSubcredentialProvisioningSupported"))
  {
    -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
    v9 = objc_claimAutoreleasedReturnValue();
    v13[0] = MEMORY[0x24BDAC760];
    v13[1] = 3221225472;
    v13[2] = __102__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_subcredentialInvitationsWithCompletion___block_invoke;
    v13[3] = &unk_24CFE7E90;
    v13[4] = self;
    v14 = v5;
    dispatch_sync(v9, v13);

  }
  else
  {
    pk_Payment_log();
    v10 = objc_claimAutoreleasedReturnValue();
    v11 = os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT);

    if (v11)
    {
      pk_Payment_log();
      v12 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)buf = 0;
        _os_log_impl(&dword_213518000, v12, OS_LOG_TYPE_DEFAULT, "Notice: Target device does not support subcredential provisioning.", buf, 2u);
      }

    }
    if (v5)
      (*((void (**)(id, _QWORD))v5 + 2))(v5, 0);
  }

}

void __102__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_subcredentialInvitationsWithCompletion___block_invoke(uint64_t a1)
{
  NPKProtoListSubcredentialInvitationsRequest *v2;
  id v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  NSObject *v9;
  void *v10;
  void *v11;
  void *v12;
  NSObject *v13;
  _BOOL4 v14;
  const char *v15;
  NSObject *v16;
  os_log_type_t v17;
  NSObject *v18;
  _BOOL4 v19;
  _QWORD v20[4];
  id v21;
  uint8_t buf[4];
  void *v23;
  uint64_t v24;
  _QWORD v25[2];

  v25[1] = *MEMORY[0x24BDAC8D0];
  v2 = objc_alloc_init(NPKProtoListSubcredentialInvitationsRequest);
  v3 = objc_alloc(MEMORY[0x24BE4FE40]);
  -[NPKProtoListSubcredentialInvitationsRequest data](v2, "data");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = (void *)objc_msgSend(v3, "initWithProtobufData:type:isResponse:", v4, 70, 0);

  v6 = *(void **)(a1 + 32);
  v24 = *MEMORY[0x24BE4FB30];
  v25[0] = &unk_24D0566F0;
  objc_msgSend(MEMORY[0x24BDBCE70], "dictionaryWithObjects:forKeys:count:", v25, &v24, 1);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "_sendProtobuf:responseExpected:extraOptions:", v5, 1, v7);
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  if (v8)
  {
    if (*(_QWORD *)(a1 + 40))
    {
      v9 = MEMORY[0x2199B6780]();
      v20[0] = MEMORY[0x24BDAC760];
      v20[1] = 3221225472;
      v20[2] = __102__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_subcredentialInvitationsWithCompletion___block_invoke_2;
      v20[3] = &unk_24CFE7B80;
      v21 = *(id *)(a1 + 40);
      v10 = (void *)MEMORY[0x2199B6780](v20);
      v11 = *(void **)(a1 + 32);
      v12 = (void *)MEMORY[0x2199B6780](v9);
      objc_msgSend(v11, "_trackOutstandingRequestWithMessageIdentifier:completionHandler:errorHandler:", v8, v12, v10);

LABEL_11:
      goto LABEL_12;
    }
    pk_Payment_log();
    v18 = objc_claimAutoreleasedReturnValue();
    v19 = os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT);

    if (v19)
    {
      pk_Payment_log();
      v9 = objc_claimAutoreleasedReturnValue();
      if (!os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
        goto LABEL_11;
      *(_DWORD *)buf = 138412290;
      v23 = v8;
      v15 = "Warning: No response expected for message with identifier %@";
      v16 = v9;
      v17 = OS_LOG_TYPE_DEFAULT;
      goto LABEL_10;
    }
  }
  else
  {
    pk_Payment_log();
    v13 = objc_claimAutoreleasedReturnValue();
    v14 = os_log_type_enabled(v13, OS_LOG_TYPE_ERROR);

    if (v14)
    {
      pk_Payment_log();
      v9 = objc_claimAutoreleasedReturnValue();
      if (!os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
        goto LABEL_11;
      *(_DWORD *)buf = 138412290;
      v23 = v5;
      v15 = "Error: No message identifier for protobuf %@";
      v16 = v9;
      v17 = OS_LOG_TYPE_ERROR;
LABEL_10:
      _os_log_impl(&dword_213518000, v16, v17, v15, buf, 0xCu);
      goto LABEL_11;
    }
  }
LABEL_12:

}

uint64_t __102__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_subcredentialInvitationsWithCompletion___block_invoke_2(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 32);
  if (result)
    return (*(uint64_t (**)(uint64_t, _QWORD))(result + 16))(result, 0);
  return result;
}

- (void)subcredentialInvitationsResponse:(id)a3
{
  id v4;
  NSObject *v5;
  _BOOL4 v6;
  NSObject *v7;
  void *v8;
  void *v9;
  void *v10;
  NSObject *v11;
  NSObject *v12;
  _BOOL4 v13;
  NSObject *v14;
  uint64_t v15;
  uint8_t v16[8];
  _QWORD block[5];
  id v18;
  id v19;
  __int128 *p_buf;
  uint64_t *v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t (*v25)(uint64_t, uint64_t);
  void (*v26)(uint64_t);
  id v27;
  __int128 buf;
  uint64_t v29;
  uint64_t (*v30)(uint64_t, uint64_t);
  void (*v31)(uint64_t);
  id v32;
  uint64_t v33;

  v33 = *MEMORY[0x24BDAC8D0];
  v4 = a3;
  pk_Payment_log();
  v5 = objc_claimAutoreleasedReturnValue();
  v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    pk_Payment_log();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend(v4, "npkDescription");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      LODWORD(buf) = 138412290;
      *(_QWORD *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_213518000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Target subcredentialInvitationsResponse: incoming protobuf %@", (uint8_t *)&buf, 0xCu);

    }
  }
  objc_msgSend(v4, "context");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "incomingResponseIdentifier");
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  *(_QWORD *)&buf = 0;
  *((_QWORD *)&buf + 1) = &buf;
  v29 = 0x3032000000;
  v30 = __Block_byref_object_copy__342;
  v31 = __Block_byref_object_dispose__343;
  v32 = 0;
  v22 = 0;
  v23 = &v22;
  v24 = 0x3032000000;
  v25 = __Block_byref_object_copy__23;
  v26 = __Block_byref_object_dispose__23;
  v27 = 0;
  if (v10)
  {
    -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
    v11 = objc_claimAutoreleasedReturnValue();
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 3221225472;
    block[2] = __78__NPKPaymentWebServiceCompanionTargetDevice_subcredentialInvitationsResponse___block_invoke;
    block[3] = &unk_24CFED0D8;
    block[4] = self;
    v18 = v10;
    v19 = v4;
    p_buf = &buf;
    v21 = &v22;
    dispatch_sync(v11, block);

  }
  else
  {
    pk_Payment_log();
    v12 = objc_claimAutoreleasedReturnValue();
    v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      pk_Payment_log();
      v14 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)v16 = 0;
        _os_log_impl(&dword_213518000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v16, 2u);
      }

    }
  }
  v15 = *(_QWORD *)(*((_QWORD *)&buf + 1) + 40);
  if (v15)
    (*(void (**)(uint64_t, uint64_t))(v15 + 16))(v15, v23[5]);
  _Block_object_dispose(&v22, 8);

  _Block_object_dispose(&buf, 8);
}

void __78__NPKPaymentWebServiceCompanionTargetDevice_subcredentialInvitationsResponse___block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;
  NPKProtoListSubcredentialInvitationsResponse *v4;
  void *v5;
  NSObject *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  NSObject *v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  NSObject *v23;
  _BOOL4 v24;
  uint8_t v25[16];
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  _BYTE v30[128];
  uint64_t v31;

  v31 = *MEMORY[0x24BDAC8D0];
  objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "objectForKey:", *(_QWORD *)(a1 + 40));
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  if (v3)
  {
    v4 = [NPKProtoListSubcredentialInvitationsResponse alloc];
    objc_msgSend(*(id *)(a1 + 48), "data");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    v6 = -[NPKProtoListSubcredentialInvitationsResponse initWithData:](v4, "initWithData:", v5);

    objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "removeObjectForKey:", *(_QWORD *)(a1 + 40));

    objc_msgSend(v3, "completionHandler");
    v8 = objc_claimAutoreleasedReturnValue();
    v9 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
    v10 = *(void **)(v9 + 40);
    *(_QWORD *)(v9 + 40) = v8;

    objc_msgSend(MEMORY[0x24BDBCEF0], "setWithCapacity:", -[NSObject subcredentialInvitationsDatasCount](v6, "subcredentialInvitationsDatasCount"));
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    v26 = 0u;
    v27 = 0u;
    v28 = 0u;
    v29 = 0u;
    -[NSObject subcredentialInvitationsDatas](v6, "subcredentialInvitationsDatas");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    v13 = objc_msgSend(v12, "countByEnumeratingWithState:objects:count:", &v26, v30, 16);
    if (v13)
    {
      v14 = v13;
      v15 = *(_QWORD *)v27;
      do
      {
        v16 = 0;
        do
        {
          if (*(_QWORD *)v27 != v15)
            objc_enumerationMutation(v12);
          v17 = *(void **)(*((_QWORD *)&v26 + 1) + 8 * v16);
          v18 = objc_opt_class();
          NPKSecureUnarchiveObject(v17, v18);
          v19 = (void *)objc_claimAutoreleasedReturnValue();
          if (v19)
            objc_msgSend(v11, "addObject:", v19);

          ++v16;
        }
        while (v14 != v16);
        v14 = objc_msgSend(v12, "countByEnumeratingWithState:objects:count:", &v26, v30, 16);
      }
      while (v14);
    }

    v20 = objc_msgSend(v11, "copy");
    v21 = *(_QWORD *)(*(_QWORD *)(a1 + 64) + 8);
    v22 = *(void **)(v21 + 40);
    *(_QWORD *)(v21 + 40) = v20;

  }
  else
  {
    pk_Payment_log();
    v23 = objc_claimAutoreleasedReturnValue();
    v24 = os_log_type_enabled(v23, OS_LOG_TYPE_DEFAULT);

    if (!v24)
      goto LABEL_13;
    pk_Payment_log();
    v6 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)v25 = 0;
      _os_log_impl(&dword_213518000, v6, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", v25, 2u);
    }
  }

LABEL_13:
}

- (void)paymentWebService:(id)a3 acceptSubcredentialInvitationWithIdentifier:(id)a4 metadata:(id)a5 completion:(id)a6
{
  id v9;
  id v10;
  id v11;
  NSObject *v12;
  _BOOL4 v13;
  NSObject *v14;
  NSObject *v15;
  void *v16;
  NSObject *v17;
  _BOOL4 v18;
  NSObject *v19;
  void *v20;
  uint64_t v21;
  void *v22;
  _QWORD v23[4];
  id v24;
  id v25;
  NPKPaymentWebServiceCompanionTargetDevice *v26;
  id v27;
  uint64_t v28;
  const __CFString *v29;
  uint8_t buf[4];
  id v31;
  __int16 v32;
  id v33;
  uint64_t v34;

  v34 = *MEMORY[0x24BDAC8D0];
  v9 = a4;
  v10 = a5;
  v11 = a6;
  pk_Payment_log();
  v12 = objc_claimAutoreleasedReturnValue();
  v13 = os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT);

  if (v13)
  {
    pk_Payment_log();
    v14 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138412546;
      v31 = v9;
      v32 = 2112;
      v33 = v10;
      _os_log_impl(&dword_213518000, v14, OS_LOG_TYPE_DEFAULT, "Notice: Target device - accept subcredential invitation request with identifier: %@ metadata: %@", buf, 0x16u);
    }

  }
  if (-[NPKPaymentWebServiceCompanionTargetDevice _isSubcredentialProvisioningSupported](self, "_isSubcredentialProvisioningSupported"))
  {
    -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
    v15 = objc_claimAutoreleasedReturnValue();
    v23[0] = MEMORY[0x24BDAC760];
    v23[1] = 3221225472;
    v23[2] = __127__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_acceptSubcredentialInvitationWithIdentifier_metadata_completion___block_invoke;
    v23[3] = &unk_24CFE86A0;
    v24 = v9;
    v25 = v10;
    v26 = self;
    v27 = v11;
    dispatch_sync(v15, v23);

    v16 = v24;
LABEL_13:

    goto LABEL_14;
  }
  pk_Payment_log();
  v17 = objc_claimAutoreleasedReturnValue();
  v18 = os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT);

  if (v18)
  {
    pk_Payment_log();
    v19 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl(&dword_213518000, v19, OS_LOG_TYPE_DEFAULT, "Notice: Target device does not support subcredential provisioning.", buf, 2u);
    }

  }
  if (v11)
  {
    v20 = (void *)MEMORY[0x24BDD1540];
    v21 = *MEMORY[0x24BE6F8A0];
    v28 = *MEMORY[0x24BDD0FD8];
    v29 = CFSTR("Target device does not support subcredential provisioning.");
    objc_msgSend(MEMORY[0x24BDBCE70], "dictionaryWithObjects:forKeys:count:", &v29, &v28, 1);
    v22 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v20, "errorWithDomain:code:userInfo:", v21, 21, v22);
    v16 = (void *)objc_claimAutoreleasedReturnValue();

    (*((void (**)(id, _QWORD, void *))v11 + 2))(v11, 0, v16);
    goto LABEL_13;
  }
LABEL_14:

}

void __127__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_acceptSubcredentialInvitationWithIdentifier_metadata_completion___block_invoke(uint64_t a1)
{
  NPKProtoAcceptSubcredentialInvitationWithIdentifierRequest *v2;
  void *v3;
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  NSObject *v10;
  void *v11;
  void *v12;
  void *v13;
  NSObject *v14;
  _BOOL4 v15;
  const char *v16;
  NSObject *v17;
  os_log_type_t v18;
  NSObject *v19;
  _BOOL4 v20;
  _QWORD v21[4];
  id v22;
  uint8_t buf[4];
  void *v24;
  uint64_t v25;
  _QWORD v26[2];

  v26[1] = *MEMORY[0x24BDAC8D0];
  v2 = objc_alloc_init(NPKProtoAcceptSubcredentialInvitationWithIdentifierRequest);
  -[NPKProtoAcceptSubcredentialInvitationWithIdentifierRequest setInvitationIdentifier:](v2, "setInvitationIdentifier:", *(_QWORD *)(a1 + 32));
  NPKSecureArchiveObject(*(void **)(a1 + 40));
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  -[NPKProtoAcceptSubcredentialInvitationWithIdentifierRequest setMetadataData:](v2, "setMetadataData:", v3);

  v4 = objc_alloc(MEMORY[0x24BE4FE40]);
  -[NPKProtoAcceptSubcredentialInvitationWithIdentifierRequest data](v2, "data");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = (void *)objc_msgSend(v4, "initWithProtobufData:type:isResponse:", v5, 71, 0);

  v7 = *(void **)(a1 + 48);
  v25 = *MEMORY[0x24BE4FB30];
  v26[0] = &unk_24D0566F0;
  objc_msgSend(MEMORY[0x24BDBCE70], "dictionaryWithObjects:forKeys:count:", v26, &v25, 1);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "_sendProtobuf:responseExpected:extraOptions:", v6, 1, v8);
  v9 = (void *)objc_claimAutoreleasedReturnValue();

  if (v9)
  {
    if (*(_QWORD *)(a1 + 56))
    {
      v10 = MEMORY[0x2199B6780]();
      v21[0] = MEMORY[0x24BDAC760];
      v21[1] = 3221225472;
      v21[2] = __127__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_acceptSubcredentialInvitationWithIdentifier_metadata_completion___block_invoke_2;
      v21[3] = &unk_24CFE7B80;
      v22 = *(id *)(a1 + 56);
      v11 = (void *)MEMORY[0x2199B6780](v21);
      v12 = *(void **)(a1 + 48);
      v13 = (void *)MEMORY[0x2199B6780](v10);
      objc_msgSend(v12, "_trackOutstandingRequestWithMessageIdentifier:completionHandler:errorHandler:", v9, v13, v11);

LABEL_11:
      goto LABEL_12;
    }
    pk_Payment_log();
    v19 = objc_claimAutoreleasedReturnValue();
    v20 = os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT);

    if (v20)
    {
      pk_Payment_log();
      v10 = objc_claimAutoreleasedReturnValue();
      if (!os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
        goto LABEL_11;
      *(_DWORD *)buf = 138412290;
      v24 = v9;
      v16 = "Warning: No response expected for message with identifier %@";
      v17 = v10;
      v18 = OS_LOG_TYPE_DEFAULT;
      goto LABEL_10;
    }
  }
  else
  {
    pk_Payment_log();
    v14 = objc_claimAutoreleasedReturnValue();
    v15 = os_log_type_enabled(v14, OS_LOG_TYPE_ERROR);

    if (v15)
    {
      pk_Payment_log();
      v10 = objc_claimAutoreleasedReturnValue();
      if (!os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
        goto LABEL_11;
      *(_DWORD *)buf = 138412290;
      v24 = v6;
      v16 = "Error: No message identifier for protobuf %@";
      v17 = v10;
      v18 = OS_LOG_TYPE_ERROR;
LABEL_10:
      _os_log_impl(&dword_213518000, v17, v18, v16, buf, 0xCu);
      goto LABEL_11;
    }
  }
LABEL_12:

}

uint64_t __127__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_acceptSubcredentialInvitationWithIdentifier_metadata_completion___block_invoke_2(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 32);
  if (result)
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(result + 16))(result, 0, a2);
  return result;
}

- (void)paymentWebService:(id)a3 acceptSubcredentialInvitation:(id)a4 completion:(id)a5
{
  id v7;
  id v8;
  NSObject *v9;
  _BOOL4 v10;
  NSObject *v11;
  NSObject *v12;
  void *v13;
  NSObject *v14;
  _BOOL4 v15;
  NSObject *v16;
  _QWORD block[4];
  id v18;
  NPKPaymentWebServiceCompanionTargetDevice *v19;
  id v20;
  uint8_t buf[4];
  id v22;
  uint64_t v23;

  v23 = *MEMORY[0x24BDAC8D0];
  v7 = a4;
  v8 = a5;
  pk_Payment_log();
  v9 = objc_claimAutoreleasedReturnValue();
  v10 = os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT);

  if (v10)
  {
    pk_Payment_log();
    v11 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138412290;
      v22 = v7;
      _os_log_impl(&dword_213518000, v11, OS_LOG_TYPE_DEFAULT, "Notice: Target device - accept subcredential invitation request with invitation: %@", buf, 0xCu);
    }

  }
  if (-[NPKPaymentWebServiceCompanionTargetDevice _isSharedInvitationProvisioningSupported](self, "_isSharedInvitationProvisioningSupported"))
  {
    -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
    v12 = objc_claimAutoreleasedReturnValue();
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 3221225472;
    block[2] = __104__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_acceptSubcredentialInvitation_completion___block_invoke;
    block[3] = &unk_24CFE84E8;
    v18 = v7;
    v19 = self;
    v20 = v8;
    dispatch_sync(v12, block);

    v13 = v18;
LABEL_13:

    goto LABEL_14;
  }
  pk_Payment_log();
  v14 = objc_claimAutoreleasedReturnValue();
  v15 = os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT);

  if (v15)
  {
    pk_Payment_log();
    v16 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl(&dword_213518000, v16, OS_LOG_TYPE_DEFAULT, "Notice: Target device does not support share invitation provisioning.", buf, 2u);
    }

  }
  if (v8)
  {
    PKDisplayableErrorForCommonType();
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    (*((void (**)(id, _QWORD, void *))v8 + 2))(v8, 0, v13);
    goto LABEL_13;
  }
LABEL_14:

}

void __104__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_acceptSubcredentialInvitation_completion___block_invoke(uint64_t a1)
{
  NPKProtoAcceptSubcredentialInvitationRequest *v2;
  void *v3;
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  NSObject *v10;
  void *v11;
  void *v12;
  void *v13;
  NSObject *v14;
  _BOOL4 v15;
  const char *v16;
  NSObject *v17;
  os_log_type_t v18;
  NSObject *v19;
  _BOOL4 v20;
  _QWORD v21[4];
  id v22;
  uint8_t buf[4];
  void *v24;
  uint64_t v25;
  _QWORD v26[2];

  v26[1] = *MEMORY[0x24BDAC8D0];
  v2 = objc_alloc_init(NPKProtoAcceptSubcredentialInvitationRequest);
  NPKSecureArchiveObject(*(void **)(a1 + 32));
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  -[NPKProtoAcceptSubcredentialInvitationRequest setInvitationData:](v2, "setInvitationData:", v3);

  v4 = objc_alloc(MEMORY[0x24BE4FE40]);
  -[NPKProtoAcceptSubcredentialInvitationRequest data](v2, "data");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = (void *)objc_msgSend(v4, "initWithProtobufData:type:isResponse:", v5, 122, 0);

  v7 = *(void **)(a1 + 40);
  v25 = *MEMORY[0x24BE4FB30];
  v26[0] = &unk_24D0566F0;
  objc_msgSend(MEMORY[0x24BDBCE70], "dictionaryWithObjects:forKeys:count:", v26, &v25, 1);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "_sendProtobuf:responseExpected:extraOptions:", v6, 1, v8);
  v9 = (void *)objc_claimAutoreleasedReturnValue();

  if (v9)
  {
    if (*(_QWORD *)(a1 + 48))
    {
      v10 = MEMORY[0x2199B6780]();
      v21[0] = MEMORY[0x24BDAC760];
      v21[1] = 3221225472;
      v21[2] = __104__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_acceptSubcredentialInvitation_completion___block_invoke_2;
      v21[3] = &unk_24CFE7B80;
      v22 = *(id *)(a1 + 48);
      v11 = (void *)MEMORY[0x2199B6780](v21);
      v12 = *(void **)(a1 + 40);
      v13 = (void *)MEMORY[0x2199B6780](v10);
      objc_msgSend(v12, "_trackOutstandingRequestWithMessageIdentifier:completionHandler:errorHandler:", v9, v13, v11);

LABEL_11:
      goto LABEL_12;
    }
    pk_Payment_log();
    v19 = objc_claimAutoreleasedReturnValue();
    v20 = os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT);

    if (v20)
    {
      pk_Payment_log();
      v10 = objc_claimAutoreleasedReturnValue();
      if (!os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
        goto LABEL_11;
      *(_DWORD *)buf = 138412290;
      v24 = v9;
      v16 = "Warning: No response expected for message with identifier %@";
      v17 = v10;
      v18 = OS_LOG_TYPE_DEFAULT;
      goto LABEL_10;
    }
  }
  else
  {
    pk_Payment_log();
    v14 = objc_claimAutoreleasedReturnValue();
    v15 = os_log_type_enabled(v14, OS_LOG_TYPE_ERROR);

    if (v15)
    {
      pk_Payment_log();
      v10 = objc_claimAutoreleasedReturnValue();
      if (!os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
        goto LABEL_11;
      *(_DWORD *)buf = 138412290;
      v24 = v6;
      v16 = "Error: No message identifier for protobuf %@";
      v17 = v10;
      v18 = OS_LOG_TYPE_ERROR;
LABEL_10:
      _os_log_impl(&dword_213518000, v17, v18, v16, buf, 0xCu);
      goto LABEL_11;
    }
  }
LABEL_12:

}

uint64_t __104__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_acceptSubcredentialInvitation_completion___block_invoke_2(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 32);
  if (result)
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(result + 16))(result, 0, a2);
  return result;
}

- (void)acceptSubcredentialInvitationResponse:(id)a3
{
  id v4;
  NSObject *v5;
  _BOOL4 v6;
  NSObject *v7;
  void *v8;
  void *v9;
  void *v10;
  NSObject *v11;
  NSObject *v12;
  _BOOL4 v13;
  NSObject *v14;
  uint64_t v15;
  uint8_t v16[16];
  _QWORD block[5];
  id v18;
  id v19;
  __int128 *p_buf;
  uint64_t *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t (*v26)(uint64_t, uint64_t);
  void (*v27)(uint64_t);
  id v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t (*v32)(uint64_t, uint64_t);
  void (*v33)(uint64_t);
  id v34;
  __int128 buf;
  uint64_t v36;
  uint64_t (*v37)(uint64_t, uint64_t);
  void (*v38)(uint64_t);
  id v39;
  uint64_t v40;

  v40 = *MEMORY[0x24BDAC8D0];
  v4 = a3;
  pk_Payment_log();
  v5 = objc_claimAutoreleasedReturnValue();
  v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    pk_Payment_log();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend(v4, "npkDescription");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      LODWORD(buf) = 138412290;
      *(_QWORD *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_213518000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Target acceptSubcredentialInvitationResponse: incoming protobuf %@", (uint8_t *)&buf, 0xCu);

    }
  }
  objc_msgSend(v4, "context");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "incomingResponseIdentifier");
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  *(_QWORD *)&buf = 0;
  *((_QWORD *)&buf + 1) = &buf;
  v36 = 0x3032000000;
  v37 = __Block_byref_object_copy__342;
  v38 = __Block_byref_object_dispose__343;
  v39 = 0;
  v29 = 0;
  v30 = &v29;
  v31 = 0x3032000000;
  v32 = __Block_byref_object_copy__23;
  v33 = __Block_byref_object_dispose__23;
  v34 = 0;
  v23 = 0;
  v24 = &v23;
  v25 = 0x3032000000;
  v26 = __Block_byref_object_copy__23;
  v27 = __Block_byref_object_dispose__23;
  v28 = 0;
  if (v10)
  {
    -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
    v11 = objc_claimAutoreleasedReturnValue();
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 3221225472;
    block[2] = __83__NPKPaymentWebServiceCompanionTargetDevice_acceptSubcredentialInvitationResponse___block_invoke;
    block[3] = &unk_24CFED060;
    block[4] = self;
    v18 = v10;
    v19 = v4;
    p_buf = &buf;
    v21 = &v29;
    v22 = &v23;
    dispatch_sync(v11, block);

  }
  else
  {
    pk_Payment_log();
    v12 = objc_claimAutoreleasedReturnValue();
    v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      pk_Payment_log();
      v14 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)v16 = 0;
        _os_log_impl(&dword_213518000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v16, 2u);
      }

    }
  }
  v15 = *(_QWORD *)(*((_QWORD *)&buf + 1) + 40);
  if (v15)
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v15, v30[5], v24[5]);
  _Block_object_dispose(&v23, 8);

  _Block_object_dispose(&v29, 8);
  _Block_object_dispose(&buf, 8);

}

void __83__NPKPaymentWebServiceCompanionTargetDevice_acceptSubcredentialInvitationResponse___block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;
  NPKProtoAcceptSubcredentialInvitationResponse *v4;
  void *v5;
  NPKProtoAcceptSubcredentialInvitationResponse *v6;
  NSObject *v7;
  _BOOL4 v8;
  NSObject *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  void *v15;
  NSObject *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  void *v20;
  NSObject *v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint8_t v25[16];

  objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "objectForKey:", *(_QWORD *)(a1 + 40));
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  if (v3)
  {
    v4 = [NPKProtoAcceptSubcredentialInvitationResponse alloc];
    objc_msgSend(*(id *)(a1 + 48), "data");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    v6 = -[NPKProtoAcceptSubcredentialInvitationResponse initWithData:](v4, "initWithData:", v5);

    if (-[NPKProtoAcceptSubcredentialInvitationResponse pending](v6, "pending"))
    {
      objc_msgSend(v3, "setOrResetCleanupTimer");
    }
    else
    {
      objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v10, "removeObjectForKey:", *(_QWORD *)(a1 + 40));

      objc_msgSend(v3, "completionHandler");
      v11 = objc_claimAutoreleasedReturnValue();
      v12 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
      v13 = *(void **)(v12 + 40);
      *(_QWORD *)(v12 + 40) = v11;

      -[NPKProtoAcceptSubcredentialInvitationResponse passForInvitation](v6, "passForInvitation");
      v14 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v14, "passData");
      v15 = (void *)objc_claimAutoreleasedReturnValue();
      v16 = objc_opt_class();
      NPKSecureUnarchiveObject(v15, v16);
      v17 = objc_claimAutoreleasedReturnValue();
      v18 = *(_QWORD *)(*(_QWORD *)(a1 + 64) + 8);
      v19 = *(void **)(v18 + 40);
      *(_QWORD *)(v18 + 40) = v17;

      if (-[NPKProtoAcceptSubcredentialInvitationResponse hasErrorData](v6, "hasErrorData"))
      {
        -[NPKProtoAcceptSubcredentialInvitationResponse errorData](v6, "errorData");
        v20 = (void *)objc_claimAutoreleasedReturnValue();
        v21 = objc_opt_class();
        NPKSecureUnarchiveObject(v20, v21);
        v22 = objc_claimAutoreleasedReturnValue();

      }
      else
      {
        v22 = 0;
      }
      v23 = *(_QWORD *)(*(_QWORD *)(a1 + 72) + 8);
      v24 = *(void **)(v23 + 40);
      *(_QWORD *)(v23 + 40) = v22;

    }
  }
  else
  {
    pk_Payment_log();
    v7 = objc_claimAutoreleasedReturnValue();
    v8 = os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT);

    if (v8)
    {
      pk_Payment_log();
      v9 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)v25 = 0;
        _os_log_impl(&dword_213518000, v9, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", v25, 2u);
      }

    }
  }

}

- (void)paymentWebService:(id)a3 matchingInvitationOnDevice:(id)a4 withTimeout:(unint64_t)a5 completion:(id)a6
{
  id v9;
  id v10;
  NSObject *v11;
  _BOOL4 v12;
  NSObject *v13;
  NSObject *v14;
  void *v15;
  NSObject *v16;
  _BOOL4 v17;
  NSObject *v18;
  void *v19;
  uint64_t v20;
  void *v21;
  _QWORD v22[4];
  id v23;
  NPKPaymentWebServiceCompanionTargetDevice *v24;
  id v25;
  unint64_t v26;
  uint8_t buf[8];
  uint64_t v28;
  _QWORD v29[2];

  v29[1] = *MEMORY[0x24BDAC8D0];
  v9 = a4;
  v10 = a6;
  pk_Payment_log();
  v11 = objc_claimAutoreleasedReturnValue();
  v12 = os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT);

  if (v12)
  {
    pk_Payment_log();
    v13 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl(&dword_213518000, v13, OS_LOG_TYPE_DEFAULT, "Notice: Target device - matching invitation on device request", buf, 2u);
    }

  }
  if (-[NPKPaymentWebServiceCompanionTargetDevice _isSubcredentialProvisioningSupported](self, "_isSubcredentialProvisioningSupported"))
  {
    -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
    v14 = objc_claimAutoreleasedReturnValue();
    v22[0] = MEMORY[0x24BDAC760];
    v22[1] = 3221225472;
    v22[2] = __113__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_matchingInvitationOnDevice_withTimeout_completion___block_invoke;
    v22[3] = &unk_24CFEBE90;
    v26 = a5;
    v23 = v9;
    v24 = self;
    v25 = v10;
    dispatch_sync(v14, v22);

    v15 = v23;
LABEL_13:

    goto LABEL_14;
  }
  pk_Payment_log();
  v16 = objc_claimAutoreleasedReturnValue();
  v17 = os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT);

  if (v17)
  {
    pk_Payment_log();
    v18 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl(&dword_213518000, v18, OS_LOG_TYPE_DEFAULT, "Notice: Target device does not support subcredential provisioning.", buf, 2u);
    }

  }
  if (v10)
  {
    v19 = (void *)MEMORY[0x24BDD1540];
    v20 = *MEMORY[0x24BE6F8A0];
    v28 = *MEMORY[0x24BDD0FD8];
    v29[0] = CFSTR("Target device does not support subcredential provisioning.");
    objc_msgSend(MEMORY[0x24BDBCE70], "dictionaryWithObjects:forKeys:count:", v29, &v28, 1);
    v21 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v19, "errorWithDomain:code:userInfo:", v20, 21, v21);
    v15 = (void *)objc_claimAutoreleasedReturnValue();

    (*((void (**)(id, _QWORD, void *))v10 + 2))(v10, 0, v15);
    goto LABEL_13;
  }
LABEL_14:

}

void __113__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_matchingInvitationOnDevice_withTimeout_completion___block_invoke(uint64_t a1)
{
  NPKProtoMatchingInvitationOnDeviceRequest *v2;
  void *v3;
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  NSObject *v10;
  void *v11;
  void *v12;
  void *v13;
  NSObject *v14;
  _BOOL4 v15;
  const char *v16;
  NSObject *v17;
  os_log_type_t v18;
  NSObject *v19;
  _BOOL4 v20;
  _QWORD v21[4];
  id v22;
  uint8_t buf[4];
  void *v24;
  uint64_t v25;
  _QWORD v26[2];

  v26[1] = *MEMORY[0x24BDAC8D0];
  v2 = objc_alloc_init(NPKProtoMatchingInvitationOnDeviceRequest);
  NPKSecureArchiveObject(*(void **)(a1 + 32));
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  -[NPKProtoMatchingInvitationOnDeviceRequest setInvitationData:](v2, "setInvitationData:", v3);

  -[NPKProtoMatchingInvitationOnDeviceRequest setTimeoutInSeconds:](v2, "setTimeoutInSeconds:", *(_QWORD *)(a1 + 56));
  v4 = objc_alloc(MEMORY[0x24BE4FE40]);
  -[NPKProtoMatchingInvitationOnDeviceRequest data](v2, "data");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = (void *)objc_msgSend(v4, "initWithProtobufData:type:isResponse:", v5, 72, 0);

  v7 = *(void **)(a1 + 40);
  v25 = *MEMORY[0x24BE4FB30];
  v26[0] = &unk_24D0566F0;
  objc_msgSend(MEMORY[0x24BDBCE70], "dictionaryWithObjects:forKeys:count:", v26, &v25, 1);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "_sendProtobuf:responseExpected:extraOptions:", v6, 1, v8);
  v9 = (void *)objc_claimAutoreleasedReturnValue();

  if (v9)
  {
    if (*(_QWORD *)(a1 + 48))
    {
      v10 = MEMORY[0x2199B6780]();
      v21[0] = MEMORY[0x24BDAC760];
      v21[1] = 3221225472;
      v21[2] = __113__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_matchingInvitationOnDevice_withTimeout_completion___block_invoke_2;
      v21[3] = &unk_24CFE7B80;
      v22 = *(id *)(a1 + 48);
      v11 = (void *)MEMORY[0x2199B6780](v21);
      v12 = *(void **)(a1 + 40);
      v13 = (void *)MEMORY[0x2199B6780](v10);
      objc_msgSend(v12, "_trackOutstandingRequestWithMessageIdentifier:completionHandler:errorHandler:", v9, v13, v11);

LABEL_11:
      goto LABEL_12;
    }
    pk_Payment_log();
    v19 = objc_claimAutoreleasedReturnValue();
    v20 = os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT);

    if (v20)
    {
      pk_Payment_log();
      v10 = objc_claimAutoreleasedReturnValue();
      if (!os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
        goto LABEL_11;
      *(_DWORD *)buf = 138412290;
      v24 = v9;
      v16 = "Warning: No response expected for message with identifier %@";
      v17 = v10;
      v18 = OS_LOG_TYPE_DEFAULT;
      goto LABEL_10;
    }
  }
  else
  {
    pk_Payment_log();
    v14 = objc_claimAutoreleasedReturnValue();
    v15 = os_log_type_enabled(v14, OS_LOG_TYPE_ERROR);

    if (v15)
    {
      pk_Payment_log();
      v10 = objc_claimAutoreleasedReturnValue();
      if (!os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
        goto LABEL_11;
      *(_DWORD *)buf = 138412290;
      v24 = v6;
      v16 = "Error: No message identifier for protobuf %@";
      v17 = v10;
      v18 = OS_LOG_TYPE_ERROR;
LABEL_10:
      _os_log_impl(&dword_213518000, v17, v18, v16, buf, 0xCu);
      goto LABEL_11;
    }
  }
LABEL_12:

}

uint64_t __113__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_matchingInvitationOnDevice_withTimeout_completion___block_invoke_2(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 32);
  if (result)
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(result + 16))(result, 0, a2);
  return result;
}

- (void)matchingCredentialOnDeviceResponse:(id)a3
{
  id v4;
  NSObject *v5;
  _BOOL4 v6;
  NSObject *v7;
  void *v8;
  void *v9;
  void *v10;
  NSObject *v11;
  NSObject *v12;
  _BOOL4 v13;
  NSObject *v14;
  uint64_t v15;
  uint8_t v16[16];
  _QWORD block[5];
  id v18;
  id v19;
  __int128 *p_buf;
  uint64_t *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t (*v26)(uint64_t, uint64_t);
  void (*v27)(uint64_t);
  id v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t (*v32)(uint64_t, uint64_t);
  void (*v33)(uint64_t);
  id v34;
  __int128 buf;
  uint64_t v36;
  uint64_t (*v37)(uint64_t, uint64_t);
  void (*v38)(uint64_t);
  id v39;
  uint64_t v40;

  v40 = *MEMORY[0x24BDAC8D0];
  v4 = a3;
  pk_Payment_log();
  v5 = objc_claimAutoreleasedReturnValue();
  v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    pk_Payment_log();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend(v4, "npkDescription");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      LODWORD(buf) = 138412290;
      *(_QWORD *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_213518000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Target matchingCredentialOnDeviceResponse: incoming protobuf %@", (uint8_t *)&buf, 0xCu);

    }
  }
  objc_msgSend(v4, "context");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "incomingResponseIdentifier");
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  *(_QWORD *)&buf = 0;
  *((_QWORD *)&buf + 1) = &buf;
  v36 = 0x3032000000;
  v37 = __Block_byref_object_copy__342;
  v38 = __Block_byref_object_dispose__343;
  v39 = 0;
  v29 = 0;
  v30 = &v29;
  v31 = 0x3032000000;
  v32 = __Block_byref_object_copy__23;
  v33 = __Block_byref_object_dispose__23;
  v34 = 0;
  v23 = 0;
  v24 = &v23;
  v25 = 0x3032000000;
  v26 = __Block_byref_object_copy__23;
  v27 = __Block_byref_object_dispose__23;
  v28 = 0;
  if (v10)
  {
    -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
    v11 = objc_claimAutoreleasedReturnValue();
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 3221225472;
    block[2] = __80__NPKPaymentWebServiceCompanionTargetDevice_matchingCredentialOnDeviceResponse___block_invoke;
    block[3] = &unk_24CFED060;
    block[4] = self;
    v18 = v10;
    v19 = v4;
    p_buf = &buf;
    v21 = &v29;
    v22 = &v23;
    dispatch_sync(v11, block);

  }
  else
  {
    pk_Payment_log();
    v12 = objc_claimAutoreleasedReturnValue();
    v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      pk_Payment_log();
      v14 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)v16 = 0;
        _os_log_impl(&dword_213518000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v16, 2u);
      }

    }
  }
  v15 = *(_QWORD *)(*((_QWORD *)&buf + 1) + 40);
  if (v15)
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v15, v30[5], v24[5]);
  _Block_object_dispose(&v23, 8);

  _Block_object_dispose(&v29, 8);
  _Block_object_dispose(&buf, 8);

}

void __80__NPKPaymentWebServiceCompanionTargetDevice_matchingCredentialOnDeviceResponse___block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;
  NPKProtoMatchingInvitationOnDeviceResponse *v4;
  void *v5;
  NPKProtoMatchingInvitationOnDeviceResponse *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  NSObject *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  void *v16;
  NSObject *v17;
  uint64_t v18;
  NSObject *v19;
  _BOOL4 v20;
  NSObject *v21;
  uint64_t v22;
  void *v23;
  uint8_t v24[16];

  objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "objectForKey:", *(_QWORD *)(a1 + 40));
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  if (v3)
  {
    v4 = [NPKProtoMatchingInvitationOnDeviceResponse alloc];
    objc_msgSend(*(id *)(a1 + 48), "data");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    v6 = -[NPKProtoMatchingInvitationOnDeviceResponse initWithData:](v4, "initWithData:", v5);

    objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "removeObjectForKey:", *(_QWORD *)(a1 + 40));

    objc_msgSend(v3, "completionHandler");
    v8 = objc_claimAutoreleasedReturnValue();
    v9 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
    v10 = *(void **)(v9 + 40);
    *(_QWORD *)(v9 + 40) = v8;

    -[NPKProtoMatchingInvitationOnDeviceResponse invitationData](v6, "invitationData");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    v12 = objc_opt_class();
    NPKSecureUnarchiveObject(v11, v12);
    v13 = objc_claimAutoreleasedReturnValue();
    v14 = *(_QWORD *)(*(_QWORD *)(a1 + 64) + 8);
    v15 = *(void **)(v14 + 40);
    *(_QWORD *)(v14 + 40) = v13;

    if (-[NPKProtoMatchingInvitationOnDeviceResponse hasErrorData](v6, "hasErrorData"))
    {
      -[NPKProtoMatchingInvitationOnDeviceResponse errorData](v6, "errorData");
      v16 = (void *)objc_claimAutoreleasedReturnValue();
      v17 = objc_opt_class();
      NPKSecureUnarchiveObject(v16, v17);
      v18 = objc_claimAutoreleasedReturnValue();

    }
    else
    {
      v18 = 0;
    }
    v22 = *(_QWORD *)(*(_QWORD *)(a1 + 72) + 8);
    v23 = *(void **)(v22 + 40);
    *(_QWORD *)(v22 + 40) = v18;

  }
  else
  {
    pk_Payment_log();
    v19 = objc_claimAutoreleasedReturnValue();
    v20 = os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT);

    if (v20)
    {
      pk_Payment_log();
      v21 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v21, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)v24 = 0;
        _os_log_impl(&dword_213518000, v21, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", v24, 2u);
      }

    }
  }

}

- (void)handleAcceptSubcredentialProvisioningRequest:(id)a3
{
  id v4;
  NSObject *v5;
  _BOOL4 v6;
  NSObject *v7;
  void *v8;
  NPKProtoAcceptSubcredentialInvitationRequest *v9;
  void *v10;
  NPKProtoAcceptSubcredentialInvitationRequest *v11;
  void *v12;
  NSObject *v13;
  void *v14;
  void *v15;
  NSObject *v16;
  void *v17;
  NSObject *v18;
  _BOOL4 v19;
  NSObject *v20;
  objc_class *v21;
  void *v22;
  void *v23;
  id v24;
  _QWORD v25[5];
  id v26;
  uint8_t buf[4];
  void *v28;
  __int16 v29;
  void *v30;
  __int16 v31;
  void *v32;
  uint64_t v33;

  v33 = *MEMORY[0x24BDAC8D0];
  v4 = a3;
  pk_Payment_log();
  v5 = objc_claimAutoreleasedReturnValue();
  v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    pk_Payment_log();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend(v4, "npkDescription");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138412290;
      v28 = v8;
      _os_log_impl(&dword_213518000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Target handleSubcredentialProvisioningRequest: incoming protobuf %@", buf, 0xCu);

    }
  }
  v9 = [NPKProtoAcceptSubcredentialInvitationRequest alloc];
  objc_msgSend(v4, "data");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v11 = -[NPKProtoAcceptSubcredentialInvitationRequest initWithData:](v9, "initWithData:", v10);

  -[NPKProtoAcceptSubcredentialInvitationRequest invitationData](v11, "invitationData");
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  v13 = objc_opt_class();
  NPKSecureUnarchiveObject(v12, v13);
  v14 = (void *)objc_claimAutoreleasedReturnValue();

  if (-[NPKProtoAcceptSubcredentialInvitationRequest hasMetadataData](v11, "hasMetadataData"))
  {
    -[NPKProtoAcceptSubcredentialInvitationRequest metadataData](v11, "metadataData");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    v16 = objc_opt_class();
    NPKSecureUnarchiveObject(v15, v16);
    v17 = (void *)objc_claimAutoreleasedReturnValue();

  }
  else
  {
    v17 = 0;
  }
  pk_General_log();
  v18 = objc_claimAutoreleasedReturnValue();
  v19 = os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT);

  if (v19)
  {
    pk_General_log();
    v20 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v20, OS_LOG_TYPE_DEFAULT))
    {
      v21 = (objc_class *)objc_opt_class();
      NSStringFromClass(v21);
      v22 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138543874;
      v28 = v22;
      v29 = 2112;
      v30 = v14;
      v31 = 2112;
      v32 = v17;
      _os_log_impl(&dword_213518000, v20, OS_LOG_TYPE_DEFAULT, "Notice: %{public}@: Received handle provisioning request with invitation: %@ metadata: %@", buf, 0x20u);

    }
  }
  -[NPKPaymentWebServiceCompanionTargetDevice subcredentialInvitationCoordinator](self, "subcredentialInvitationCoordinator");
  v23 = (void *)objc_claimAutoreleasedReturnValue();
  v25[0] = MEMORY[0x24BDAC760];
  v25[1] = 3221225472;
  v25[2] = __90__NPKPaymentWebServiceCompanionTargetDevice_handleAcceptSubcredentialProvisioningRequest___block_invoke;
  v25[3] = &unk_24CFED938;
  v25[4] = self;
  v26 = v14;
  v24 = v14;
  objc_msgSend(v23, "startProvisioningWithInvitation:metadata:completion:", v24, v17, v25);

}

void __90__NPKPaymentWebServiceCompanionTargetDevice_handleAcceptSubcredentialProvisioningRequest___block_invoke(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  NSObject *v7;
  _BOOL4 v8;
  NSObject *v9;
  objc_class *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  int v15;
  void *v16;
  __int16 v17;
  void *v18;
  __int16 v19;
  void *v20;
  __int16 v21;
  void *v22;
  uint64_t v23;

  v23 = *MEMORY[0x24BDAC8D0];
  v5 = a2;
  v6 = a3;
  pk_General_log();
  v7 = objc_claimAutoreleasedReturnValue();
  v8 = os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT);

  if (v8)
  {
    pk_General_log();
    v9 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      v10 = (objc_class *)objc_opt_class();
      NSStringFromClass(v10);
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(*(id *)(a1 + 40), "description");
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v5, "description");
      v13 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v6, "description");
      v14 = (void *)objc_claimAutoreleasedReturnValue();
      v15 = 138544130;
      v16 = v11;
      v17 = 2112;
      v18 = v12;
      v19 = 2112;
      v20 = v13;
      v21 = 2112;
      v22 = v14;
      _os_log_impl(&dword_213518000, v9, OS_LOG_TYPE_DEFAULT, "Notice: %{public}@: Subcredential provisioning for invitation: %@ completed with pass: %@ error %@", (uint8_t *)&v15, 0x2Au);

    }
  }

}

- (void)handleAcceptSubcredentialProvisioningForMailboxAddressRequest:(id)a3
{
  id v4;
  NSObject *v5;
  _BOOL4 v6;
  NSObject *v7;
  void *v8;
  NPKProtoAcceptSubcredentialInvitationWithMailboxAddressRequest *v9;
  void *v10;
  NPKProtoAcceptSubcredentialInvitationWithMailboxAddressRequest *v11;
  void *v12;
  void *v13;
  NSObject *v14;
  _BOOL4 v15;
  NSObject *v16;
  objc_class *v17;
  void *v18;
  void *v19;
  id v20;
  _QWORD v21[5];
  id v22;
  uint8_t buf[4];
  void *v24;
  __int16 v25;
  void *v26;
  __int16 v27;
  void *v28;
  uint64_t v29;

  v29 = *MEMORY[0x24BDAC8D0];
  v4 = a3;
  pk_Payment_log();
  v5 = objc_claimAutoreleasedReturnValue();
  v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    pk_Payment_log();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend(v4, "npkDescription");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138412290;
      v24 = v8;
      _os_log_impl(&dword_213518000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Target handleAcceptSubcredentialProvisioningForMailboxAddressRequest: incoming protobuf %@", buf, 0xCu);

    }
  }
  v9 = [NPKProtoAcceptSubcredentialInvitationWithMailboxAddressRequest alloc];
  objc_msgSend(v4, "data");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v11 = -[NPKProtoAcceptSubcredentialInvitationWithMailboxAddressRequest initWithData:](v9, "initWithData:", v10);

  -[NPKProtoAcceptSubcredentialInvitationWithMailboxAddressRequest mailboxAddress](v11, "mailboxAddress");
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  -[NPKProtoAcceptSubcredentialInvitationWithMailboxAddressRequest activationCode](v11, "activationCode");
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  pk_General_log();
  v14 = objc_claimAutoreleasedReturnValue();
  v15 = os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT);

  if (v15)
  {
    pk_General_log();
    v16 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
    {
      v17 = (objc_class *)objc_opt_class();
      NSStringFromClass(v17);
      v18 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138543875;
      v24 = v18;
      v25 = 2113;
      v26 = v12;
      v27 = 2113;
      v28 = v13;
      _os_log_impl(&dword_213518000, v16, OS_LOG_TYPE_DEFAULT, "Notice: %{public}@: Received handle provisioning request with mailboxAddress: %{private}@, activationCode: %{private}@", buf, 0x20u);

    }
  }
  -[NPKPaymentWebServiceCompanionTargetDevice subcredentialInvitationCoordinator](self, "subcredentialInvitationCoordinator");
  v19 = (void *)objc_claimAutoreleasedReturnValue();
  v21[0] = MEMORY[0x24BDAC760];
  v21[1] = 3221225472;
  v21[2] = __107__NPKPaymentWebServiceCompanionTargetDevice_handleAcceptSubcredentialProvisioningForMailboxAddressRequest___block_invoke;
  v21[3] = &unk_24CFED938;
  v21[4] = self;
  v22 = v12;
  v20 = v12;
  objc_msgSend(v19, "startProvisioningWithMailboxAddress:activationCode:completion:", v20, v13, v21);

}

void __107__NPKPaymentWebServiceCompanionTargetDevice_handleAcceptSubcredentialProvisioningForMailboxAddressRequest___block_invoke(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  NSObject *v7;
  _BOOL4 v8;
  NSObject *v9;
  objc_class *v10;
  void *v11;
  uint64_t v12;
  void *v13;
  void *v14;
  int v15;
  void *v16;
  __int16 v17;
  uint64_t v18;
  __int16 v19;
  void *v20;
  __int16 v21;
  void *v22;
  uint64_t v23;

  v23 = *MEMORY[0x24BDAC8D0];
  v5 = a2;
  v6 = a3;
  pk_General_log();
  v7 = objc_claimAutoreleasedReturnValue();
  v8 = os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT);

  if (v8)
  {
    pk_General_log();
    v9 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      v10 = (objc_class *)objc_opt_class();
      NSStringFromClass(v10);
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      v12 = *(_QWORD *)(a1 + 40);
      objc_msgSend(v5, "description");
      v13 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v6, "description");
      v14 = (void *)objc_claimAutoreleasedReturnValue();
      v15 = 138544131;
      v16 = v11;
      v17 = 2113;
      v18 = v12;
      v19 = 2112;
      v20 = v13;
      v21 = 2112;
      v22 = v14;
      _os_log_impl(&dword_213518000, v9, OS_LOG_TYPE_DEFAULT, "Notice: %{public}@: Subcredential provisioning for mailbox address: %{private}@ completed with pass: %@ error %@", (uint8_t *)&v15, 0x2Au);

    }
  }

}

- (void)paymentWebService:(id)a3 accountAttestationAnonymizationSaltWithCompletion:(id)a4
{
  id v5;
  NSObject *v6;
  _BOOL4 v7;
  NSObject *v8;
  void *v9;
  NSObject *v10;
  NSObject *v11;
  _BOOL4 v12;
  NSObject *v13;
  void *v14;
  uint64_t v15;
  void *v16;
  void *v17;
  _QWORD v18[5];
  id v19;
  uint64_t v20;
  const __CFString *v21;
  uint8_t buf[4];
  void *v23;
  uint64_t v24;

  v24 = *MEMORY[0x24BDAC8D0];
  v5 = a4;
  pk_Payment_log();
  v6 = objc_claimAutoreleasedReturnValue();
  v7 = os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT);

  if (v7)
  {
    pk_Payment_log();
    v8 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      v9 = (void *)MEMORY[0x2199B6780](v5);
      *(_DWORD *)buf = 138412290;
      v23 = v9;
      _os_log_impl(&dword_213518000, v8, OS_LOG_TYPE_DEFAULT, "Notice: Target device - account attestation anonymization salt request with completion: %@", buf, 0xCu);

    }
  }
  if (-[NPKPaymentWebServiceCompanionTargetDevice _isSubcredentialProvisioningSupported](self, "_isSubcredentialProvisioningSupported"))
  {
    -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
    v10 = objc_claimAutoreleasedReturnValue();
    v18[0] = MEMORY[0x24BDAC760];
    v18[1] = 3221225472;
    v18[2] = __113__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_accountAttestationAnonymizationSaltWithCompletion___block_invoke;
    v18[3] = &unk_24CFE7E90;
    v18[4] = self;
    v19 = v5;
    dispatch_sync(v10, v18);

  }
  else
  {
    pk_Payment_log();
    v11 = objc_claimAutoreleasedReturnValue();
    v12 = os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT);

    if (v12)
    {
      pk_Payment_log();
      v13 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)buf = 0;
        _os_log_impl(&dword_213518000, v13, OS_LOG_TYPE_DEFAULT, "Notice: Target device does not support subcredential provisioning.", buf, 2u);
      }

    }
    if (v5)
    {
      v14 = (void *)MEMORY[0x24BDD1540];
      v15 = *MEMORY[0x24BE6F8A0];
      v20 = *MEMORY[0x24BDD0FD8];
      v21 = CFSTR("Target device does not support subcredential provisioning.");
      objc_msgSend(MEMORY[0x24BDBCE70], "dictionaryWithObjects:forKeys:count:", &v21, &v20, 1);
      v16 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v14, "errorWithDomain:code:userInfo:", v15, 21, v16);
      v17 = (void *)objc_claimAutoreleasedReturnValue();

      (*((void (**)(id, _QWORD, void *))v5 + 2))(v5, 0, v17);
    }
  }

}

void __113__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_accountAttestationAnonymizationSaltWithCompletion___block_invoke(uint64_t a1)
{
  NPKProtoAccountAttestationAnonymizationSaltRequest *v2;
  id v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  NSObject *v9;
  void *v10;
  void *v11;
  void *v12;
  NSObject *v13;
  _BOOL4 v14;
  const char *v15;
  NSObject *v16;
  os_log_type_t v17;
  NSObject *v18;
  _BOOL4 v19;
  _QWORD v20[4];
  id v21;
  uint8_t buf[4];
  void *v23;
  uint64_t v24;
  _QWORD v25[2];

  v25[1] = *MEMORY[0x24BDAC8D0];
  v2 = objc_alloc_init(NPKProtoAccountAttestationAnonymizationSaltRequest);
  v3 = objc_alloc(MEMORY[0x24BE4FE40]);
  -[NPKProtoAccountAttestationAnonymizationSaltRequest data](v2, "data");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = (void *)objc_msgSend(v3, "initWithProtobufData:type:isResponse:", v4, 74, 0);

  v6 = *(void **)(a1 + 32);
  v24 = *MEMORY[0x24BE4FB30];
  v25[0] = &unk_24D0566F0;
  objc_msgSend(MEMORY[0x24BDBCE70], "dictionaryWithObjects:forKeys:count:", v25, &v24, 1);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "_sendProtobuf:responseExpected:extraOptions:", v5, 1, v7);
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  if (v8)
  {
    if (*(_QWORD *)(a1 + 40))
    {
      v9 = MEMORY[0x2199B6780]();
      v20[0] = MEMORY[0x24BDAC760];
      v20[1] = 3221225472;
      v20[2] = __113__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_accountAttestationAnonymizationSaltWithCompletion___block_invoke_2;
      v20[3] = &unk_24CFE7B80;
      v21 = *(id *)(a1 + 40);
      v10 = (void *)MEMORY[0x2199B6780](v20);
      v11 = *(void **)(a1 + 32);
      v12 = (void *)MEMORY[0x2199B6780](v9);
      objc_msgSend(v11, "_trackOutstandingRequestWithMessageIdentifier:completionHandler:errorHandler:", v8, v12, v10);

LABEL_11:
      goto LABEL_12;
    }
    pk_Payment_log();
    v18 = objc_claimAutoreleasedReturnValue();
    v19 = os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT);

    if (v19)
    {
      pk_Payment_log();
      v9 = objc_claimAutoreleasedReturnValue();
      if (!os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
        goto LABEL_11;
      *(_DWORD *)buf = 138412290;
      v23 = v8;
      v15 = "Warning: No response expected for message with identifier %@";
      v16 = v9;
      v17 = OS_LOG_TYPE_DEFAULT;
      goto LABEL_10;
    }
  }
  else
  {
    pk_Payment_log();
    v13 = objc_claimAutoreleasedReturnValue();
    v14 = os_log_type_enabled(v13, OS_LOG_TYPE_ERROR);

    if (v14)
    {
      pk_Payment_log();
      v9 = objc_claimAutoreleasedReturnValue();
      if (!os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
        goto LABEL_11;
      *(_DWORD *)buf = 138412290;
      v23 = v5;
      v15 = "Error: No message identifier for protobuf %@";
      v16 = v9;
      v17 = OS_LOG_TYPE_ERROR;
LABEL_10:
      _os_log_impl(&dword_213518000, v16, v17, v15, buf, 0xCu);
      goto LABEL_11;
    }
  }
LABEL_12:

}

void __113__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_accountAttestationAnonymizationSaltWithCompletion___block_invoke_2(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  _BOOL4 v5;
  NSObject *v6;
  void *v7;
  int v8;
  void *v9;
  uint64_t v10;

  v10 = *MEMORY[0x24BDAC8D0];
  v3 = a2;
  if (*(_QWORD *)(a1 + 32))
  {
    pk_Payment_log();
    v4 = objc_claimAutoreleasedReturnValue();
    v5 = os_log_type_enabled(v4, OS_LOG_TYPE_ERROR);

    if (v5)
    {
      pk_Payment_log();
      v6 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
      {
        objc_msgSend(v3, "description");
        v7 = (void *)objc_claimAutoreleasedReturnValue();
        v8 = 138412290;
        v9 = v7;
        _os_log_impl(&dword_213518000, v6, OS_LOG_TYPE_ERROR, "Error: %@", (uint8_t *)&v8, 0xCu);

      }
    }
    (*(void (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
  }

}

- (void)accountAttestationAnonymizationSaltResponse:(id)a3
{
  id v4;
  NSObject *v5;
  _BOOL4 v6;
  NSObject *v7;
  void *v8;
  void *v9;
  void *v10;
  NSObject *v11;
  NSObject *v12;
  _BOOL4 v13;
  NSObject *v14;
  uint64_t v15;
  uint8_t v16[16];
  _QWORD block[5];
  id v18;
  id v19;
  __int128 *p_buf;
  uint64_t *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t (*v26)(uint64_t, uint64_t);
  void (*v27)(uint64_t);
  id v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t (*v32)(uint64_t, uint64_t);
  void (*v33)(uint64_t);
  id v34;
  __int128 buf;
  uint64_t v36;
  uint64_t (*v37)(uint64_t, uint64_t);
  void (*v38)(uint64_t);
  id v39;
  uint64_t v40;

  v40 = *MEMORY[0x24BDAC8D0];
  v4 = a3;
  pk_Payment_log();
  v5 = objc_claimAutoreleasedReturnValue();
  v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    pk_Payment_log();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend(v4, "npkDescription");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      LODWORD(buf) = 138412290;
      *(_QWORD *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_213518000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Target accountAttestationAnonymizationSaltResponse: incoming protobuf %@", (uint8_t *)&buf, 0xCu);

    }
  }
  objc_msgSend(v4, "context");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "incomingResponseIdentifier");
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  *(_QWORD *)&buf = 0;
  *((_QWORD *)&buf + 1) = &buf;
  v36 = 0x3032000000;
  v37 = __Block_byref_object_copy__342;
  v38 = __Block_byref_object_dispose__343;
  v39 = 0;
  v29 = 0;
  v30 = &v29;
  v31 = 0x3032000000;
  v32 = __Block_byref_object_copy__23;
  v33 = __Block_byref_object_dispose__23;
  v34 = 0;
  v23 = 0;
  v24 = &v23;
  v25 = 0x3032000000;
  v26 = __Block_byref_object_copy__23;
  v27 = __Block_byref_object_dispose__23;
  v28 = 0;
  if (v10)
  {
    -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
    v11 = objc_claimAutoreleasedReturnValue();
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 3221225472;
    block[2] = __89__NPKPaymentWebServiceCompanionTargetDevice_accountAttestationAnonymizationSaltResponse___block_invoke;
    block[3] = &unk_24CFED060;
    block[4] = self;
    v18 = v10;
    v19 = v4;
    p_buf = &buf;
    v21 = &v29;
    v22 = &v23;
    dispatch_sync(v11, block);

  }
  else
  {
    pk_Payment_log();
    v12 = objc_claimAutoreleasedReturnValue();
    v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      pk_Payment_log();
      v14 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)v16 = 0;
        _os_log_impl(&dword_213518000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v16, 2u);
      }

    }
  }
  v15 = *(_QWORD *)(*((_QWORD *)&buf + 1) + 40);
  if (v15)
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v15, v30[5], v24[5]);
  _Block_object_dispose(&v23, 8);

  _Block_object_dispose(&v29, 8);
  _Block_object_dispose(&buf, 8);

}

void __89__NPKPaymentWebServiceCompanionTargetDevice_accountAttestationAnonymizationSaltResponse___block_invoke(uint64_t a1)
{
  void *v1;
  void *v3;
  void *v4;
  NPKProtoAccountAttestationAnonymizationSaltResponse *v5;
  void *v6;
  NPKProtoAccountAttestationAnonymizationSaltResponse *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  _BOOL4 v15;
  NSObject *v16;
  void *v17;
  NSObject *v18;
  _BOOL4 v19;
  NSObject *v20;
  __int16 v21[8];

  objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "objectForKey:", *(_QWORD *)(a1 + 40));
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  if (v4)
  {
    v5 = [NPKProtoAccountAttestationAnonymizationSaltResponse alloc];
    objc_msgSend(*(id *)(a1 + 48), "data");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    v7 = -[NPKProtoAccountAttestationAnonymizationSaltResponse initWithData:](v5, "initWithData:", v6);

    objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "removeObjectForKey:", *(_QWORD *)(a1 + 40));

    objc_msgSend(v4, "completionHandler");
    v9 = objc_claimAutoreleasedReturnValue();
    v10 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
    v11 = *(void **)(v10 + 40);
    *(_QWORD *)(v10 + 40) = v9;

    -[NPKProtoAccountAttestationAnonymizationSaltResponse anonymizationSalt](v7, "anonymizationSalt");
    v12 = objc_claimAutoreleasedReturnValue();
    v13 = *(_QWORD *)(*(_QWORD *)(a1 + 64) + 8);
    v14 = *(void **)(v13 + 40);
    *(_QWORD *)(v13 + 40) = v12;

    v15 = -[NPKProtoAccountAttestationAnonymizationSaltResponse hasErrorData](v7, "hasErrorData");
    if (v15)
    {
      -[NPKProtoAccountAttestationAnonymizationSaltResponse errorData](v7, "errorData");
      v1 = (void *)objc_claimAutoreleasedReturnValue();
      v16 = objc_opt_class();
      NPKSecureUnarchiveObject(v1, v16);
      v17 = (void *)objc_claimAutoreleasedReturnValue();
    }
    else
    {
      v17 = 0;
    }
    objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 72) + 8) + 40), v17);
    if (v15)
    {

    }
  }
  else
  {
    pk_Payment_log();
    v18 = objc_claimAutoreleasedReturnValue();
    v19 = os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT);

    if (v19)
    {
      pk_Payment_log();
      v20 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v20, OS_LOG_TYPE_DEFAULT))
      {
        v21[0] = 0;
        _os_log_impl(&dword_213518000, v20, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", (uint8_t *)v21, 2u);
      }

    }
  }

}

- (void)fetchOrInitializeAccountAttestationAnonymizationSaltRequest:(id)a3
{
  id v4;
  NSObject *v5;
  _BOOL4 v6;
  NSObject *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  id v12;
  _QWORD v13[4];
  id v14;
  id v15;
  uint8_t buf[4];
  void *v17;
  uint64_t v18;

  v18 = *MEMORY[0x24BDAC8D0];
  v4 = a3;
  pk_Payment_log();
  v5 = objc_claimAutoreleasedReturnValue();
  v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    pk_Payment_log();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend(v4, "npkDescription");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138412290;
      v17 = v8;
      _os_log_impl(&dword_213518000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Target device - received account attestation anonymization salt request: %@", buf, 0xCu);

    }
  }
  objc_msgSend(v4, "context");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "outgoingResponseIdentifier");
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  objc_initWeak((id *)buf, self);
  -[NPKPaymentWebServiceCompanionTargetDevice subcredentialInvitationCoordinator](self, "subcredentialInvitationCoordinator");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  v13[0] = MEMORY[0x24BDAC760];
  v13[1] = 3221225472;
  v13[2] = __105__NPKPaymentWebServiceCompanionTargetDevice_fetchOrInitializeAccountAttestationAnonymizationSaltRequest___block_invoke;
  v13[3] = &unk_24CFE8830;
  objc_copyWeak(&v15, (id *)buf);
  v12 = v10;
  v14 = v12;
  objc_msgSend(v11, "fetchOrInitializeAccountAttestationAnonymizationSaltIfNecessaryWithCompletion:", v13);

  objc_destroyWeak(&v15);
  objc_destroyWeak((id *)buf);

}

void __105__NPKPaymentWebServiceCompanionTargetDevice_fetchOrInitializeAccountAttestationAnonymizationSaltRequest___block_invoke(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id WeakRetained;
  NSObject *v8;
  id v9;
  id v10;
  _QWORD v11[4];
  id v12;
  id v13;
  id v14;
  id v15;

  v5 = a2;
  v6 = a3;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  objc_msgSend(WeakRetained, "internalQueue");
  v8 = objc_claimAutoreleasedReturnValue();
  v11[0] = MEMORY[0x24BDAC760];
  v11[1] = 3221225472;
  v11[2] = __105__NPKPaymentWebServiceCompanionTargetDevice_fetchOrInitializeAccountAttestationAnonymizationSaltRequest___block_invoke_2;
  v11[3] = &unk_24CFE85B0;
  objc_copyWeak(&v15, (id *)(a1 + 40));
  v12 = v5;
  v13 = v6;
  v14 = *(id *)(a1 + 32);
  v9 = v6;
  v10 = v5;
  dispatch_sync(v8, v11);

  objc_destroyWeak(&v15);
}

void __105__NPKPaymentWebServiceCompanionTargetDevice_fetchOrInitializeAccountAttestationAnonymizationSaltRequest___block_invoke_2(uint64_t a1)
{
  id WeakRetained;
  NPKProtoAccountAttestationAnonymizationSaltResponse *v3;
  void *v4;
  id v5;
  void *v6;
  void *v7;
  void *v8;
  NSObject *v9;
  _BOOL4 v10;
  NSObject *v11;
  int v12;
  void *v13;
  uint64_t v14;

  v14 = *MEMORY[0x24BDAC8D0];
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  v3 = objc_alloc_init(NPKProtoAccountAttestationAnonymizationSaltResponse);
  -[NPKProtoAccountAttestationAnonymizationSaltResponse setAnonymizationSalt:](v3, "setAnonymizationSalt:", *(_QWORD *)(a1 + 32));
  NPKSecureArchiveObject(*(void **)(a1 + 40));
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  -[NPKProtoAccountAttestationAnonymizationSaltResponse setErrorData:](v3, "setErrorData:", v4);

  v5 = objc_alloc(MEMORY[0x24BE4FE40]);
  -[NPKProtoAccountAttestationAnonymizationSaltResponse data](v3, "data");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = (void *)objc_msgSend(v5, "initWithProtobufData:type:isResponse:", v6, 74, 1);

  objc_msgSend(WeakRetained, "_sendProtobuf:responseIdentifier:", v7, *(_QWORD *)(a1 + 48));
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  if (!v8)
  {
    pk_Payment_log();
    v9 = objc_claimAutoreleasedReturnValue();
    v10 = os_log_type_enabled(v9, OS_LOG_TYPE_ERROR);

    if (v10)
    {
      pk_Payment_log();
      v11 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
      {
        v12 = 138412290;
        v13 = v7;
        _os_log_impl(&dword_213518000, v11, OS_LOG_TYPE_ERROR, "Error: No message identifier for protobuf %@", (uint8_t *)&v12, 0xCu);
      }

    }
  }

}

- (void)paymentWebService:(id)a3 setAccountAttestationAnonymizationSalt:(id)a4 withCompletion:(id)a5
{
  id v7;
  id v8;
  NSObject *v9;
  _BOOL4 v10;
  NSObject *v11;
  void *v12;
  NSObject *v13;
  void *v14;
  NSObject *v15;
  _BOOL4 v16;
  NSObject *v17;
  void *v18;
  uint64_t v19;
  void *v20;
  _QWORD block[4];
  id v22;
  NPKPaymentWebServiceCompanionTargetDevice *v23;
  id v24;
  uint64_t v25;
  const __CFString *v26;
  uint8_t buf[4];
  void *v28;
  uint64_t v29;

  v29 = *MEMORY[0x24BDAC8D0];
  v7 = a4;
  v8 = a5;
  pk_Payment_log();
  v9 = objc_claimAutoreleasedReturnValue();
  v10 = os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT);

  if (v10)
  {
    pk_Payment_log();
    v11 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
    {
      v12 = (void *)MEMORY[0x2199B6780](v8);
      *(_DWORD *)buf = 138412290;
      v28 = v12;
      _os_log_impl(&dword_213518000, v11, OS_LOG_TYPE_DEFAULT, "Notice: Target device - set account attestation anonymization salt request with completion: %@", buf, 0xCu);

    }
  }
  if (-[NPKPaymentWebServiceCompanionTargetDevice _isSubcredentialProvisioningSupported](self, "_isSubcredentialProvisioningSupported"))
  {
    -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
    v13 = objc_claimAutoreleasedReturnValue();
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 3221225472;
    block[2] = __117__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_setAccountAttestationAnonymizationSalt_withCompletion___block_invoke;
    block[3] = &unk_24CFE84E8;
    v22 = v7;
    v23 = self;
    v24 = v8;
    dispatch_sync(v13, block);

    v14 = v22;
LABEL_13:

    goto LABEL_14;
  }
  pk_Payment_log();
  v15 = objc_claimAutoreleasedReturnValue();
  v16 = os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT);

  if (v16)
  {
    pk_Payment_log();
    v17 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl(&dword_213518000, v17, OS_LOG_TYPE_DEFAULT, "Notice: Target device does not support subcredential provisioning.", buf, 2u);
    }

  }
  if (v8)
  {
    v18 = (void *)MEMORY[0x24BDD1540];
    v19 = *MEMORY[0x24BE6F8A0];
    v25 = *MEMORY[0x24BDD0FD8];
    v26 = CFSTR("Target device does not support subcredential provisioning.");
    objc_msgSend(MEMORY[0x24BDBCE70], "dictionaryWithObjects:forKeys:count:", &v26, &v25, 1);
    v20 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v18, "errorWithDomain:code:userInfo:", v19, 21, v20);
    v14 = (void *)objc_claimAutoreleasedReturnValue();

    (*((void (**)(id, void *))v8 + 2))(v8, v14);
    goto LABEL_13;
  }
LABEL_14:

}

void __117__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_setAccountAttestationAnonymizationSalt_withCompletion___block_invoke(uint64_t a1)
{
  NPKProtoSetAccountAttestationAnonymizationSaltRequest *v2;
  id v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  NSObject *v9;
  void *v10;
  void *v11;
  void *v12;
  NSObject *v13;
  _BOOL4 v14;
  const char *v15;
  NSObject *v16;
  os_log_type_t v17;
  NSObject *v18;
  _BOOL4 v19;
  _QWORD v20[4];
  id v21;
  uint8_t buf[4];
  void *v23;
  uint64_t v24;
  _QWORD v25[2];

  v25[1] = *MEMORY[0x24BDAC8D0];
  v2 = objc_alloc_init(NPKProtoSetAccountAttestationAnonymizationSaltRequest);
  -[NPKProtoSetAccountAttestationAnonymizationSaltRequest setAnonymizationSalt:](v2, "setAnonymizationSalt:", *(_QWORD *)(a1 + 32));
  v3 = objc_alloc(MEMORY[0x24BE4FE40]);
  -[NPKProtoSetAccountAttestationAnonymizationSaltRequest data](v2, "data");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = (void *)objc_msgSend(v3, "initWithProtobufData:type:isResponse:", v4, 75, 0);

  v6 = *(void **)(a1 + 40);
  v24 = *MEMORY[0x24BE4FB30];
  v25[0] = &unk_24D0566F0;
  objc_msgSend(MEMORY[0x24BDBCE70], "dictionaryWithObjects:forKeys:count:", v25, &v24, 1);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "_sendProtobuf:responseExpected:extraOptions:", v5, 1, v7);
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  if (v8)
  {
    if (*(_QWORD *)(a1 + 48))
    {
      v9 = MEMORY[0x2199B6780]();
      v20[0] = MEMORY[0x24BDAC760];
      v20[1] = 3221225472;
      v20[2] = __117__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_setAccountAttestationAnonymizationSalt_withCompletion___block_invoke_2;
      v20[3] = &unk_24CFE7B80;
      v21 = *(id *)(a1 + 48);
      v10 = (void *)MEMORY[0x2199B6780](v20);
      v11 = *(void **)(a1 + 40);
      v12 = (void *)MEMORY[0x2199B6780](v9);
      objc_msgSend(v11, "_trackOutstandingRequestWithMessageIdentifier:completionHandler:errorHandler:", v8, v12, v10);

LABEL_11:
      goto LABEL_12;
    }
    pk_Payment_log();
    v18 = objc_claimAutoreleasedReturnValue();
    v19 = os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT);

    if (v19)
    {
      pk_Payment_log();
      v9 = objc_claimAutoreleasedReturnValue();
      if (!os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
        goto LABEL_11;
      *(_DWORD *)buf = 138412290;
      v23 = v8;
      v15 = "Warning: No response expected for message with identifier %@";
      v16 = v9;
      v17 = OS_LOG_TYPE_DEFAULT;
      goto LABEL_10;
    }
  }
  else
  {
    pk_Payment_log();
    v13 = objc_claimAutoreleasedReturnValue();
    v14 = os_log_type_enabled(v13, OS_LOG_TYPE_ERROR);

    if (v14)
    {
      pk_Payment_log();
      v9 = objc_claimAutoreleasedReturnValue();
      if (!os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
        goto LABEL_11;
      *(_DWORD *)buf = 138412290;
      v23 = v5;
      v15 = "Error: No message identifier for protobuf %@";
      v16 = v9;
      v17 = OS_LOG_TYPE_ERROR;
LABEL_10:
      _os_log_impl(&dword_213518000, v16, v17, v15, buf, 0xCu);
      goto LABEL_11;
    }
  }
LABEL_12:

}

uint64_t __117__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_setAccountAttestationAnonymizationSalt_withCompletion___block_invoke_2(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 32);
  if (result)
    return (*(uint64_t (**)(void))(result + 16))();
  return result;
}

- (void)setAccountAttestationAnonymizationSaltResponse:(id)a3
{
  id v4;
  NSObject *v5;
  _BOOL4 v6;
  NSObject *v7;
  void *v8;
  void *v9;
  void *v10;
  NSObject *v11;
  NSObject *v12;
  _BOOL4 v13;
  NSObject *v14;
  uint64_t v15;
  uint8_t v16[8];
  _QWORD block[5];
  id v18;
  id v19;
  __int128 *p_buf;
  uint64_t *v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t (*v25)(uint64_t, uint64_t);
  void (*v26)(uint64_t);
  id v27;
  __int128 buf;
  uint64_t v29;
  uint64_t (*v30)(uint64_t, uint64_t);
  void (*v31)(uint64_t);
  id v32;
  uint64_t v33;

  v33 = *MEMORY[0x24BDAC8D0];
  v4 = a3;
  pk_Payment_log();
  v5 = objc_claimAutoreleasedReturnValue();
  v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    pk_Payment_log();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend(v4, "npkDescription");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      LODWORD(buf) = 138412290;
      *(_QWORD *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_213518000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Target setAccountAttestationAnonymizationSaltResponse: incoming protobuf %@", (uint8_t *)&buf, 0xCu);

    }
  }
  objc_msgSend(v4, "context");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "incomingResponseIdentifier");
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  *(_QWORD *)&buf = 0;
  *((_QWORD *)&buf + 1) = &buf;
  v29 = 0x3032000000;
  v30 = __Block_byref_object_copy__342;
  v31 = __Block_byref_object_dispose__343;
  v32 = 0;
  v22 = 0;
  v23 = &v22;
  v24 = 0x3032000000;
  v25 = __Block_byref_object_copy__23;
  v26 = __Block_byref_object_dispose__23;
  v27 = 0;
  if (v10)
  {
    -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
    v11 = objc_claimAutoreleasedReturnValue();
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 3221225472;
    block[2] = __92__NPKPaymentWebServiceCompanionTargetDevice_setAccountAttestationAnonymizationSaltResponse___block_invoke;
    block[3] = &unk_24CFED0D8;
    block[4] = self;
    v18 = v10;
    v19 = v4;
    p_buf = &buf;
    v21 = &v22;
    dispatch_sync(v11, block);

  }
  else
  {
    pk_Payment_log();
    v12 = objc_claimAutoreleasedReturnValue();
    v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      pk_Payment_log();
      v14 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)v16 = 0;
        _os_log_impl(&dword_213518000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v16, 2u);
      }

    }
  }
  v15 = *(_QWORD *)(*((_QWORD *)&buf + 1) + 40);
  if (v15)
    (*(void (**)(uint64_t, uint64_t))(v15 + 16))(v15, v23[5]);
  _Block_object_dispose(&v22, 8);

  _Block_object_dispose(&buf, 8);
}

void __92__NPKPaymentWebServiceCompanionTargetDevice_setAccountAttestationAnonymizationSaltResponse___block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;
  NPKProtoSetAccountAttestationAnonymizationSaltResponse *v4;
  void *v5;
  NPKProtoSetAccountAttestationAnonymizationSaltResponse *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  NSObject *v12;
  uint64_t v13;
  NSObject *v14;
  _BOOL4 v15;
  NSObject *v16;
  uint64_t v17;
  void *v18;
  uint8_t v19[16];

  objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "objectForKey:", *(_QWORD *)(a1 + 40));
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  if (v3)
  {
    v4 = [NPKProtoSetAccountAttestationAnonymizationSaltResponse alloc];
    objc_msgSend(*(id *)(a1 + 48), "data");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    v6 = -[NPKProtoSetAccountAttestationAnonymizationSaltResponse initWithData:](v4, "initWithData:", v5);

    objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "removeObjectForKey:", *(_QWORD *)(a1 + 40));

    objc_msgSend(v3, "completionHandler");
    v8 = objc_claimAutoreleasedReturnValue();
    v9 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
    v10 = *(void **)(v9 + 40);
    *(_QWORD *)(v9 + 40) = v8;

    if (-[NPKProtoSetAccountAttestationAnonymizationSaltResponse hasErrorData](v6, "hasErrorData"))
    {
      -[NPKProtoSetAccountAttestationAnonymizationSaltResponse errorData](v6, "errorData");
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      v12 = objc_opt_class();
      NPKSecureUnarchiveObject(v11, v12);
      v13 = objc_claimAutoreleasedReturnValue();

    }
    else
    {
      v13 = 0;
    }
    v17 = *(_QWORD *)(*(_QWORD *)(a1 + 64) + 8);
    v18 = *(void **)(v17 + 40);
    *(_QWORD *)(v17 + 40) = v13;

  }
  else
  {
    pk_Payment_log();
    v14 = objc_claimAutoreleasedReturnValue();
    v15 = os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT);

    if (v15)
    {
      pk_Payment_log();
      v16 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)v19 = 0;
        _os_log_impl(&dword_213518000, v16, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", v19, 2u);
      }

    }
  }

}

- (void)paymentWebService:(id)a3 requestSubcredentialInvitation:(id)a4 completion:(id)a5
{
  id v7;
  id v8;
  NSObject *v9;
  _BOOL4 v10;
  NSObject *v11;
  void *v12;
  NSObject *v13;
  void *v14;
  NSObject *v15;
  _BOOL4 v16;
  NSObject *v17;
  void *v18;
  uint64_t v19;
  void *v20;
  _QWORD block[4];
  id v22;
  NPKPaymentWebServiceCompanionTargetDevice *v23;
  id v24;
  uint64_t v25;
  const __CFString *v26;
  uint8_t buf[4];
  id v28;
  __int16 v29;
  void *v30;
  uint64_t v31;

  v31 = *MEMORY[0x24BDAC8D0];
  v7 = a4;
  v8 = a5;
  pk_Payment_log();
  v9 = objc_claimAutoreleasedReturnValue();
  v10 = os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT);

  if (v10)
  {
    pk_Payment_log();
    v11 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
    {
      v12 = (void *)MEMORY[0x2199B6780](v8);
      *(_DWORD *)buf = 138412546;
      v28 = v7;
      v29 = 2112;
      v30 = v12;
      _os_log_impl(&dword_213518000, v11, OS_LOG_TYPE_DEFAULT, "Notice: Target device - request subcredential invitation %@ with completion %@", buf, 0x16u);

    }
  }
  if (-[NPKPaymentWebServiceCompanionTargetDevice _isSubcredentialProvisioningSupported](self, "_isSubcredentialProvisioningSupported"))
  {
    -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
    v13 = objc_claimAutoreleasedReturnValue();
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 3221225472;
    block[2] = __105__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_requestSubcredentialInvitation_completion___block_invoke;
    block[3] = &unk_24CFE84E8;
    v22 = v7;
    v23 = self;
    v24 = v8;
    dispatch_sync(v13, block);

    v14 = v22;
LABEL_13:

    goto LABEL_14;
  }
  pk_Payment_log();
  v15 = objc_claimAutoreleasedReturnValue();
  v16 = os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT);

  if (v16)
  {
    pk_Payment_log();
    v17 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl(&dword_213518000, v17, OS_LOG_TYPE_DEFAULT, "Notice: Target device does not support subcredential provisioning.", buf, 2u);
    }

  }
  if (v8)
  {
    v18 = (void *)MEMORY[0x24BDD1540];
    v19 = *MEMORY[0x24BE6F8A0];
    v25 = *MEMORY[0x24BDD0FD8];
    v26 = CFSTR("Target device does not support subcredential provisioning.");
    objc_msgSend(MEMORY[0x24BDBCE70], "dictionaryWithObjects:forKeys:count:", &v26, &v25, 1);
    v20 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v18, "errorWithDomain:code:userInfo:", v19, 21, v20);
    v14 = (void *)objc_claimAutoreleasedReturnValue();

    (*((void (**)(id, void *))v8 + 2))(v8, v14);
    goto LABEL_13;
  }
LABEL_14:

}

void __105__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_requestSubcredentialInvitation_completion___block_invoke(uint64_t a1)
{
  NPKProtoRequestSubcredentialInvitationRequest *v2;
  void *v3;
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  NSObject *v10;
  void *v11;
  void *v12;
  void *v13;
  NSObject *v14;
  _BOOL4 v15;
  const char *v16;
  NSObject *v17;
  os_log_type_t v18;
  NSObject *v19;
  _BOOL4 v20;
  _QWORD v21[4];
  id v22;
  uint8_t buf[4];
  void *v24;
  uint64_t v25;
  _QWORD v26[2];

  v26[1] = *MEMORY[0x24BDAC8D0];
  v2 = objc_alloc_init(NPKProtoRequestSubcredentialInvitationRequest);
  NPKSecureArchiveObject(*(void **)(a1 + 32));
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  -[NPKProtoRequestSubcredentialInvitationRequest setInvitationData:](v2, "setInvitationData:", v3);

  v4 = objc_alloc(MEMORY[0x24BE4FE40]);
  -[NPKProtoRequestSubcredentialInvitationRequest data](v2, "data");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = (void *)objc_msgSend(v4, "initWithProtobufData:type:isResponse:", v5, 76, 0);

  v7 = *(void **)(a1 + 40);
  v25 = *MEMORY[0x24BE4FB30];
  v26[0] = &unk_24D0566F0;
  objc_msgSend(MEMORY[0x24BDBCE70], "dictionaryWithObjects:forKeys:count:", v26, &v25, 1);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "_sendProtobuf:responseExpected:extraOptions:", v6, 1, v8);
  v9 = (void *)objc_claimAutoreleasedReturnValue();

  if (v9)
  {
    if (*(_QWORD *)(a1 + 48))
    {
      v10 = MEMORY[0x2199B6780]();
      v21[0] = MEMORY[0x24BDAC760];
      v21[1] = 3221225472;
      v21[2] = __105__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_requestSubcredentialInvitation_completion___block_invoke_2;
      v21[3] = &unk_24CFE7B80;
      v22 = *(id *)(a1 + 48);
      v11 = (void *)MEMORY[0x2199B6780](v21);
      v12 = *(void **)(a1 + 40);
      v13 = (void *)MEMORY[0x2199B6780](v10);
      objc_msgSend(v12, "_trackOutstandingRequestWithMessageIdentifier:completionHandler:errorHandler:", v9, v13, v11);

LABEL_11:
      goto LABEL_12;
    }
    pk_Payment_log();
    v19 = objc_claimAutoreleasedReturnValue();
    v20 = os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT);

    if (v20)
    {
      pk_Payment_log();
      v10 = objc_claimAutoreleasedReturnValue();
      if (!os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
        goto LABEL_11;
      *(_DWORD *)buf = 138412290;
      v24 = v9;
      v16 = "Warning: No response expected for message with identifier %@";
      v17 = v10;
      v18 = OS_LOG_TYPE_DEFAULT;
      goto LABEL_10;
    }
  }
  else
  {
    pk_Payment_log();
    v14 = objc_claimAutoreleasedReturnValue();
    v15 = os_log_type_enabled(v14, OS_LOG_TYPE_ERROR);

    if (v15)
    {
      pk_Payment_log();
      v10 = objc_claimAutoreleasedReturnValue();
      if (!os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
        goto LABEL_11;
      *(_DWORD *)buf = 138412290;
      v24 = v6;
      v16 = "Error: No message identifier for protobuf %@";
      v17 = v10;
      v18 = OS_LOG_TYPE_ERROR;
LABEL_10:
      _os_log_impl(&dword_213518000, v17, v18, v16, buf, 0xCu);
      goto LABEL_11;
    }
  }
LABEL_12:

}

uint64_t __105__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_requestSubcredentialInvitation_completion___block_invoke_2(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 32);
  if (result)
    return (*(uint64_t (**)(void))(result + 16))();
  return result;
}

- (void)requestSubcredentialInvitationResponse:(id)a3
{
  id v4;
  NSObject *v5;
  _BOOL4 v6;
  NSObject *v7;
  void *v8;
  void *v9;
  void *v10;
  NSObject *v11;
  NSObject *v12;
  _BOOL4 v13;
  NSObject *v14;
  uint64_t v15;
  uint8_t v16[8];
  _QWORD block[5];
  id v18;
  id v19;
  __int128 *p_buf;
  uint64_t *v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t (*v25)(uint64_t, uint64_t);
  void (*v26)(uint64_t);
  id v27;
  __int128 buf;
  uint64_t v29;
  uint64_t (*v30)(uint64_t, uint64_t);
  void (*v31)(uint64_t);
  id v32;
  uint64_t v33;

  v33 = *MEMORY[0x24BDAC8D0];
  v4 = a3;
  pk_Payment_log();
  v5 = objc_claimAutoreleasedReturnValue();
  v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    pk_Payment_log();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend(v4, "npkDescription");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      LODWORD(buf) = 138412290;
      *(_QWORD *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_213518000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Target requestSubcredentialInvitationResponse: incoming protobuf %@", (uint8_t *)&buf, 0xCu);

    }
  }
  objc_msgSend(v4, "context");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "incomingResponseIdentifier");
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  *(_QWORD *)&buf = 0;
  *((_QWORD *)&buf + 1) = &buf;
  v29 = 0x3032000000;
  v30 = __Block_byref_object_copy__342;
  v31 = __Block_byref_object_dispose__343;
  v32 = 0;
  v22 = 0;
  v23 = &v22;
  v24 = 0x3032000000;
  v25 = __Block_byref_object_copy__23;
  v26 = __Block_byref_object_dispose__23;
  v27 = 0;
  if (v10)
  {
    -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
    v11 = objc_claimAutoreleasedReturnValue();
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 3221225472;
    block[2] = __84__NPKPaymentWebServiceCompanionTargetDevice_requestSubcredentialInvitationResponse___block_invoke;
    block[3] = &unk_24CFED0D8;
    block[4] = self;
    v18 = v10;
    v19 = v4;
    p_buf = &buf;
    v21 = &v22;
    dispatch_sync(v11, block);

  }
  else
  {
    pk_Payment_log();
    v12 = objc_claimAutoreleasedReturnValue();
    v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      pk_Payment_log();
      v14 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)v16 = 0;
        _os_log_impl(&dword_213518000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v16, 2u);
      }

    }
  }
  v15 = *(_QWORD *)(*((_QWORD *)&buf + 1) + 40);
  if (v15)
    (*(void (**)(uint64_t, uint64_t))(v15 + 16))(v15, v23[5]);
  _Block_object_dispose(&v22, 8);

  _Block_object_dispose(&buf, 8);
}

void __84__NPKPaymentWebServiceCompanionTargetDevice_requestSubcredentialInvitationResponse___block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;
  NPKProtoRequestSubcredentialInvitationResponse *v4;
  void *v5;
  NPKProtoRequestSubcredentialInvitationResponse *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  NSObject *v12;
  uint64_t v13;
  NSObject *v14;
  _BOOL4 v15;
  NSObject *v16;
  uint64_t v17;
  void *v18;
  uint8_t v19[16];

  objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "objectForKey:", *(_QWORD *)(a1 + 40));
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  if (v3)
  {
    v4 = [NPKProtoRequestSubcredentialInvitationResponse alloc];
    objc_msgSend(*(id *)(a1 + 48), "data");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    v6 = -[NPKProtoRequestSubcredentialInvitationResponse initWithData:](v4, "initWithData:", v5);

    objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "removeObjectForKey:", *(_QWORD *)(a1 + 40));

    objc_msgSend(v3, "completionHandler");
    v8 = objc_claimAutoreleasedReturnValue();
    v9 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
    v10 = *(void **)(v9 + 40);
    *(_QWORD *)(v9 + 40) = v8;

    if (-[NPKProtoRequestSubcredentialInvitationResponse hasErrorData](v6, "hasErrorData"))
    {
      -[NPKProtoRequestSubcredentialInvitationResponse errorData](v6, "errorData");
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      v12 = objc_opt_class();
      NPKSecureUnarchiveObject(v11, v12);
      v13 = objc_claimAutoreleasedReturnValue();

    }
    else
    {
      v13 = 0;
    }
    v17 = *(_QWORD *)(*(_QWORD *)(a1 + 64) + 8);
    v18 = *(void **)(v17 + 40);
    *(_QWORD *)(v17 + 40) = v13;

  }
  else
  {
    pk_Payment_log();
    v14 = objc_claimAutoreleasedReturnValue();
    v15 = os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT);

    if (v15)
    {
      pk_Payment_log();
      v16 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)v19 = 0;
        _os_log_impl(&dword_213518000, v16, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", v19, 2u);
      }

    }
  }

}

- (void)paymentWebService:(id)a3 updateMetadataOnPass:(id)a4 withCredential:(id)a5 completion:(id)a6
{
  id v9;
  id v10;
  id v11;
  NSObject *v12;
  _BOOL4 v13;
  NSObject *v14;
  void *v15;
  NSObject *v16;
  NSObject *v17;
  _BOOL4 v18;
  NSObject *v19;
  _QWORD v20[4];
  id v21;
  id v22;
  NPKPaymentWebServiceCompanionTargetDevice *v23;
  id v24;
  uint8_t buf[4];
  id v26;
  __int16 v27;
  id v28;
  __int16 v29;
  void *v30;
  uint64_t v31;

  v31 = *MEMORY[0x24BDAC8D0];
  v9 = a4;
  v10 = a5;
  v11 = a6;
  pk_Payment_log();
  v12 = objc_claimAutoreleasedReturnValue();
  v13 = os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT);

  if (v13)
  {
    pk_Payment_log();
    v14 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
    {
      v15 = (void *)MEMORY[0x2199B6780](v11);
      *(_DWORD *)buf = 138412802;
      v26 = v9;
      v27 = 2112;
      v28 = v10;
      v29 = 2112;
      v30 = v15;
      _os_log_impl(&dword_213518000, v14, OS_LOG_TYPE_DEFAULT, "Notice: Target device - update metadata on pass %@ with credential %@ completion %@", buf, 0x20u);

    }
  }
  if (-[NPKPaymentWebServiceCompanionTargetDevice _isSubcredentialProvisioningSupported](self, "_isSubcredentialProvisioningSupported"))
  {
    -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
    v16 = objc_claimAutoreleasedReturnValue();
    v20[0] = MEMORY[0x24BDAC760];
    v20[1] = 3221225472;
    v20[2] = __110__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_updateMetadataOnPass_withCredential_completion___block_invoke;
    v20[3] = &unk_24CFE86A0;
    v21 = v9;
    v22 = v10;
    v23 = self;
    v24 = v11;
    dispatch_sync(v16, v20);

  }
  else
  {
    pk_Payment_log();
    v17 = objc_claimAutoreleasedReturnValue();
    v18 = os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT);

    if (v18)
    {
      pk_Payment_log();
      v19 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)buf = 0;
        _os_log_impl(&dword_213518000, v19, OS_LOG_TYPE_DEFAULT, "Notice: Target device does not support subcredential provisioning.", buf, 2u);
      }

    }
    if (v11)
      (*((void (**)(id, _QWORD))v11 + 2))(v11, 0);
  }

}

void __110__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_updateMetadataOnPass_withCredential_completion___block_invoke(uint64_t a1)
{
  NPKProtoUpdateSubcredentialMetadataRequest *v2;
  void *v3;
  void *v4;
  id v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  NSObject *v11;
  void *v12;
  void *v13;
  void *v14;
  NSObject *v15;
  _BOOL4 v16;
  const char *v17;
  NSObject *v18;
  os_log_type_t v19;
  NSObject *v20;
  _BOOL4 v21;
  _QWORD v22[4];
  id v23;
  uint8_t buf[4];
  void *v25;
  uint64_t v26;
  _QWORD v27[2];

  v27[1] = *MEMORY[0x24BDAC8D0];
  v2 = objc_alloc_init(NPKProtoUpdateSubcredentialMetadataRequest);
  NPKSecureArchiveObject(*(void **)(a1 + 32));
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  -[NPKProtoUpdateSubcredentialMetadataRequest setPassData:](v2, "setPassData:", v3);

  NPKSecureArchiveObject(*(void **)(a1 + 40));
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  -[NPKProtoUpdateSubcredentialMetadataRequest setCredentialData:](v2, "setCredentialData:", v4);

  v5 = objc_alloc(MEMORY[0x24BE4FE40]);
  -[NPKProtoUpdateSubcredentialMetadataRequest data](v2, "data");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = (void *)objc_msgSend(v5, "initWithProtobufData:type:isResponse:", v6, 77, 0);

  v8 = *(void **)(a1 + 48);
  v26 = *MEMORY[0x24BE4FB30];
  v27[0] = &unk_24D0566F0;
  objc_msgSend(MEMORY[0x24BDBCE70], "dictionaryWithObjects:forKeys:count:", v27, &v26, 1);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "_sendProtobuf:responseExpected:extraOptions:", v7, 1, v9);
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  if (v10)
  {
    if (*(_QWORD *)(a1 + 56))
    {
      v11 = MEMORY[0x2199B6780]();
      v22[0] = MEMORY[0x24BDAC760];
      v22[1] = 3221225472;
      v22[2] = __110__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_updateMetadataOnPass_withCredential_completion___block_invoke_2;
      v22[3] = &unk_24CFE7B80;
      v23 = *(id *)(a1 + 56);
      v12 = (void *)MEMORY[0x2199B6780](v22);
      v13 = *(void **)(a1 + 48);
      v14 = (void *)MEMORY[0x2199B6780](v11);
      objc_msgSend(v13, "_trackOutstandingRequestWithMessageIdentifier:completionHandler:errorHandler:", v10, v14, v12);

LABEL_11:
      goto LABEL_12;
    }
    pk_Payment_log();
    v20 = objc_claimAutoreleasedReturnValue();
    v21 = os_log_type_enabled(v20, OS_LOG_TYPE_DEFAULT);

    if (v21)
    {
      pk_Payment_log();
      v11 = objc_claimAutoreleasedReturnValue();
      if (!os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
        goto LABEL_11;
      *(_DWORD *)buf = 138412290;
      v25 = v10;
      v17 = "Warning: No response expected for message with identifier %@";
      v18 = v11;
      v19 = OS_LOG_TYPE_DEFAULT;
      goto LABEL_10;
    }
  }
  else
  {
    pk_Payment_log();
    v15 = objc_claimAutoreleasedReturnValue();
    v16 = os_log_type_enabled(v15, OS_LOG_TYPE_ERROR);

    if (v16)
    {
      pk_Payment_log();
      v11 = objc_claimAutoreleasedReturnValue();
      if (!os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
        goto LABEL_11;
      *(_DWORD *)buf = 138412290;
      v25 = v7;
      v17 = "Error: No message identifier for protobuf %@";
      v18 = v11;
      v19 = OS_LOG_TYPE_ERROR;
LABEL_10:
      _os_log_impl(&dword_213518000, v18, v19, v17, buf, 0xCu);
      goto LABEL_11;
    }
  }
LABEL_12:

}

uint64_t __110__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_updateMetadataOnPass_withCredential_completion___block_invoke_2(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 32);
  if (result)
    return (*(uint64_t (**)(uint64_t, _QWORD))(result + 16))(result, 0);
  return result;
}

- (void)updateSubcredentialMetadataResponse:(id)a3
{
  id v4;
  NSObject *v5;
  _BOOL4 v6;
  NSObject *v7;
  void *v8;
  void *v9;
  void *v10;
  NSObject *v11;
  NSObject *v12;
  _BOOL4 v13;
  NSObject *v14;
  uint64_t v15;
  uint8_t v16[8];
  _QWORD block[5];
  id v18;
  id v19;
  __int128 *p_buf;
  uint64_t *v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t (*v25)(uint64_t, uint64_t);
  void (*v26)(uint64_t);
  id v27;
  __int128 buf;
  uint64_t v29;
  uint64_t (*v30)(uint64_t, uint64_t);
  void (*v31)(uint64_t);
  id v32;
  uint64_t v33;

  v33 = *MEMORY[0x24BDAC8D0];
  v4 = a3;
  pk_Payment_log();
  v5 = objc_claimAutoreleasedReturnValue();
  v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    pk_Payment_log();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend(v4, "npkDescription");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      LODWORD(buf) = 138412290;
      *(_QWORD *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_213518000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Target updateSubcredentialMetadataResponse: incoming protobuf %@", (uint8_t *)&buf, 0xCu);

    }
  }
  objc_msgSend(v4, "context");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "incomingResponseIdentifier");
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  *(_QWORD *)&buf = 0;
  *((_QWORD *)&buf + 1) = &buf;
  v29 = 0x3032000000;
  v30 = __Block_byref_object_copy__342;
  v31 = __Block_byref_object_dispose__343;
  v32 = 0;
  v22 = 0;
  v23 = &v22;
  v24 = 0x3032000000;
  v25 = __Block_byref_object_copy__23;
  v26 = __Block_byref_object_dispose__23;
  v27 = 0;
  if (v10)
  {
    -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
    v11 = objc_claimAutoreleasedReturnValue();
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 3221225472;
    block[2] = __81__NPKPaymentWebServiceCompanionTargetDevice_updateSubcredentialMetadataResponse___block_invoke;
    block[3] = &unk_24CFED0D8;
    block[4] = self;
    v18 = v10;
    v19 = v4;
    p_buf = &buf;
    v21 = &v22;
    dispatch_sync(v11, block);

  }
  else
  {
    pk_Payment_log();
    v12 = objc_claimAutoreleasedReturnValue();
    v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      pk_Payment_log();
      v14 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)v16 = 0;
        _os_log_impl(&dword_213518000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v16, 2u);
      }

    }
  }
  v15 = *(_QWORD *)(*((_QWORD *)&buf + 1) + 40);
  if (v15)
    (*(void (**)(uint64_t, uint64_t))(v15 + 16))(v15, v23[5]);
  _Block_object_dispose(&v22, 8);

  _Block_object_dispose(&buf, 8);
}

void __81__NPKPaymentWebServiceCompanionTargetDevice_updateSubcredentialMetadataResponse___block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;
  NPKProtoUpdateSubcredentialMetadataResponse *v4;
  void *v5;
  NPKProtoUpdateSubcredentialMetadataResponse *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  NSObject *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  NSObject *v16;
  _BOOL4 v17;
  NSObject *v18;
  uint8_t v19[16];

  objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "objectForKey:", *(_QWORD *)(a1 + 40));
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  if (v3)
  {
    v4 = [NPKProtoUpdateSubcredentialMetadataResponse alloc];
    objc_msgSend(*(id *)(a1 + 48), "data");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    v6 = -[NPKProtoUpdateSubcredentialMetadataResponse initWithData:](v4, "initWithData:", v5);

    objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "removeObjectForKey:", *(_QWORD *)(a1 + 40));

    objc_msgSend(v3, "completionHandler");
    v8 = objc_claimAutoreleasedReturnValue();
    v9 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
    v10 = *(void **)(v9 + 40);
    *(_QWORD *)(v9 + 40) = v8;

    -[NPKProtoUpdateSubcredentialMetadataResponse passData](v6, "passData");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    v12 = objc_opt_class();
    NPKSecureUnarchiveObject(v11, v12);
    v13 = objc_claimAutoreleasedReturnValue();

    v14 = *(_QWORD *)(*(_QWORD *)(a1 + 64) + 8);
    v15 = *(void **)(v14 + 40);
    *(_QWORD *)(v14 + 40) = v13;

  }
  else
  {
    pk_Payment_log();
    v16 = objc_claimAutoreleasedReturnValue();
    v17 = os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT);

    if (v17)
    {
      pk_Payment_log();
      v18 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)v19 = 0;
        _os_log_impl(&dword_213518000, v18, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", v19, 2u);
      }

    }
  }

}

- (void)registerCredentialsWithIdentifiers:(id)a3 completion:(id)a4
{
  id v6;
  id v7;
  NSObject *v8;
  _BOOL4 v9;
  NSObject *v10;
  NSObject *v11;
  void *v12;
  NSObject *v13;
  _BOOL4 v14;
  NSObject *v15;
  void *v16;
  uint64_t v17;
  void *v18;
  void *v19;
  _QWORD block[4];
  id v21;
  NPKPaymentWebServiceCompanionTargetDevice *v22;
  id v23;
  uint64_t v24;
  const __CFString *v25;
  uint8_t buf[4];
  id v27;
  uint64_t v28;

  v28 = *MEMORY[0x24BDAC8D0];
  v6 = a3;
  v7 = a4;
  pk_Payment_log();
  v8 = objc_claimAutoreleasedReturnValue();
  v9 = os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT);

  if (v9)
  {
    pk_Payment_log();
    v10 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138412290;
      v27 = v6;
      _os_log_impl(&dword_213518000, v10, OS_LOG_TYPE_DEFAULT, "Notice: Target device - register credentials with identifiers %@", buf, 0xCu);
    }

  }
  if (-[NPKPaymentWebServiceCompanionTargetDevice _isSubcredentialProvisioningSupported](self, "_isSubcredentialProvisioningSupported"))
  {
    -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
    v11 = objc_claimAutoreleasedReturnValue();
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 3221225472;
    block[2] = __91__NPKPaymentWebServiceCompanionTargetDevice_registerCredentialsWithIdentifiers_completion___block_invoke;
    block[3] = &unk_24CFE84E8;
    v21 = v6;
    v22 = self;
    v23 = v7;
    dispatch_sync(v11, block);

    v12 = v21;
LABEL_13:

    goto LABEL_14;
  }
  pk_Payment_log();
  v13 = objc_claimAutoreleasedReturnValue();
  v14 = os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT);

  if (v14)
  {
    pk_Payment_log();
    v15 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl(&dword_213518000, v15, OS_LOG_TYPE_DEFAULT, "Notice: Target device does not support subcredential provisioning.", buf, 2u);
    }

  }
  if (v7)
  {
    v16 = (void *)MEMORY[0x24BDD1540];
    v17 = *MEMORY[0x24BE6F8A0];
    v24 = *MEMORY[0x24BDD0FD8];
    v25 = CFSTR("Target device does not support subcredential provisioning.");
    objc_msgSend(MEMORY[0x24BDBCE70], "dictionaryWithObjects:forKeys:count:", &v25, &v24, 1);
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v16, "errorWithDomain:code:userInfo:", v17, 21, v18);
    v12 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend(MEMORY[0x24BDBCF20], "setWithObject:", v12);
    v19 = (void *)objc_claimAutoreleasedReturnValue();
    (*((void (**)(id, _QWORD, void *))v7 + 2))(v7, 0, v19);

    goto LABEL_13;
  }
LABEL_14:

}

void __91__NPKPaymentWebServiceCompanionTargetDevice_registerCredentialsWithIdentifiers_completion___block_invoke(uint64_t a1)
{
  NPKProtoRegisterSubcredentialsRequest *v2;
  void *v3;
  uint64_t v4;
  NPKProtoRegisterSubcredentialsRequest *v5;
  id v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  NSObject *v12;
  void *v13;
  void *v14;
  void *v15;
  NSObject *v16;
  _BOOL4 v17;
  const char *v18;
  NSObject *v19;
  os_log_type_t v20;
  NSObject *v21;
  _BOOL4 v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t, uint64_t);
  void *v26;
  id v27;
  _QWORD v28[4];
  NPKProtoRegisterSubcredentialsRequest *v29;
  uint8_t buf[4];
  void *v31;
  uint64_t v32;
  _QWORD v33[2];

  v33[1] = *MEMORY[0x24BDAC8D0];
  v2 = objc_alloc_init(NPKProtoRegisterSubcredentialsRequest);
  v3 = *(void **)(a1 + 32);
  v4 = MEMORY[0x24BDAC760];
  v28[0] = MEMORY[0x24BDAC760];
  v28[1] = 3221225472;
  v28[2] = __91__NPKPaymentWebServiceCompanionTargetDevice_registerCredentialsWithIdentifiers_completion___block_invoke_2;
  v28[3] = &unk_24CFEBC28;
  v5 = v2;
  v29 = v5;
  objc_msgSend(v3, "enumerateObjectsUsingBlock:", v28);
  v6 = objc_alloc(MEMORY[0x24BE4FE40]);
  -[NPKProtoRegisterSubcredentialsRequest data](v5, "data");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = (void *)objc_msgSend(v6, "initWithProtobufData:type:isResponse:", v7, 78, 0);

  v9 = *(void **)(a1 + 40);
  v32 = *MEMORY[0x24BE4FB30];
  v33[0] = &unk_24D0566F0;
  objc_msgSend(MEMORY[0x24BDBCE70], "dictionaryWithObjects:forKeys:count:", v33, &v32, 1);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "_sendProtobuf:responseExpected:extraOptions:", v8, 1, v10);
  v11 = (void *)objc_claimAutoreleasedReturnValue();

  if (v11)
  {
    if (*(_QWORD *)(a1 + 48))
    {
      v12 = MEMORY[0x2199B6780]();
      v23 = v4;
      v24 = 3221225472;
      v25 = __91__NPKPaymentWebServiceCompanionTargetDevice_registerCredentialsWithIdentifiers_completion___block_invoke_3;
      v26 = &unk_24CFE7B80;
      v27 = *(id *)(a1 + 48);
      v13 = (void *)MEMORY[0x2199B6780](&v23);
      v14 = *(void **)(a1 + 40);
      v15 = (void *)MEMORY[0x2199B6780](v12);
      objc_msgSend(v14, "_trackOutstandingRequestWithMessageIdentifier:completionHandler:errorHandler:", v11, v15, v13, v23, v24, v25, v26);

LABEL_11:
      goto LABEL_12;
    }
    pk_Payment_log();
    v21 = objc_claimAutoreleasedReturnValue();
    v22 = os_log_type_enabled(v21, OS_LOG_TYPE_DEFAULT);

    if (v22)
    {
      pk_Payment_log();
      v12 = objc_claimAutoreleasedReturnValue();
      if (!os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
        goto LABEL_11;
      *(_DWORD *)buf = 138412290;
      v31 = v11;
      v18 = "Warning: No response expected for message with identifier %@";
      v19 = v12;
      v20 = OS_LOG_TYPE_DEFAULT;
      goto LABEL_10;
    }
  }
  else
  {
    pk_Payment_log();
    v16 = objc_claimAutoreleasedReturnValue();
    v17 = os_log_type_enabled(v16, OS_LOG_TYPE_ERROR);

    if (v17)
    {
      pk_Payment_log();
      v12 = objc_claimAutoreleasedReturnValue();
      if (!os_log_type_enabled(v12, OS_LOG_TYPE_ERROR))
        goto LABEL_11;
      *(_DWORD *)buf = 138412290;
      v31 = v8;
      v18 = "Error: No message identifier for protobuf %@";
      v19 = v12;
      v20 = OS_LOG_TYPE_ERROR;
LABEL_10:
      _os_log_impl(&dword_213518000, v19, v20, v18, buf, 0xCu);
      goto LABEL_11;
    }
  }
LABEL_12:

}

uint64_t __91__NPKPaymentWebServiceCompanionTargetDevice_registerCredentialsWithIdentifiers_completion___block_invoke_2(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(a1 + 32), "addIdentifiers:", a2);
}

void __91__NPKPaymentWebServiceCompanionTargetDevice_registerCredentialsWithIdentifiers_completion___block_invoke_3(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  id v3;

  v2 = *(_QWORD *)(a1 + 32);
  if (v2)
  {
    objc_msgSend(MEMORY[0x24BDBCF20], "setWithObject:", a2);
    v3 = (id)objc_claimAutoreleasedReturnValue();
    (*(void (**)(uint64_t, _QWORD, id))(v2 + 16))(v2, 0, v3);

  }
}

- (void)registerCredentialsResponse:(id)a3
{
  id v4;
  NSObject *v5;
  _BOOL4 v6;
  NSObject *v7;
  void *v8;
  void *v9;
  void *v10;
  NSObject *v11;
  NSObject *v12;
  _BOOL4 v13;
  NSObject *v14;
  uint64_t v15;
  uint8_t v16[16];
  _QWORD block[5];
  id v18;
  id v19;
  uint64_t *v20;
  uint64_t *v21;
  __int128 *p_buf;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t (*v26)(uint64_t, uint64_t);
  void (*v27)(uint64_t);
  id v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t (*v32)(uint64_t, uint64_t);
  void (*v33)(uint64_t);
  id v34;
  __int128 buf;
  uint64_t v36;
  uint64_t (*v37)(uint64_t, uint64_t);
  void (*v38)(uint64_t);
  id v39;
  uint64_t v40;

  v40 = *MEMORY[0x24BDAC8D0];
  v4 = a3;
  pk_Payment_log();
  v5 = objc_claimAutoreleasedReturnValue();
  v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    pk_Payment_log();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend(v4, "npkDescription");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      LODWORD(buf) = 138412290;
      *(_QWORD *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_213518000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Target registerCredentialsResponse: incoming protobuf %@", (uint8_t *)&buf, 0xCu);

    }
  }
  objc_msgSend(v4, "context");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "incomingResponseIdentifier");
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  *(_QWORD *)&buf = 0;
  *((_QWORD *)&buf + 1) = &buf;
  v36 = 0x3032000000;
  v37 = __Block_byref_object_copy__342;
  v38 = __Block_byref_object_dispose__343;
  v39 = 0;
  v29 = 0;
  v30 = &v29;
  v31 = 0x3032000000;
  v32 = __Block_byref_object_copy__23;
  v33 = __Block_byref_object_dispose__23;
  v34 = 0;
  v23 = 0;
  v24 = &v23;
  v25 = 0x3032000000;
  v26 = __Block_byref_object_copy__23;
  v27 = __Block_byref_object_dispose__23;
  v28 = 0;
  if (v10)
  {
    -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
    v11 = objc_claimAutoreleasedReturnValue();
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 3221225472;
    block[2] = __73__NPKPaymentWebServiceCompanionTargetDevice_registerCredentialsResponse___block_invoke;
    block[3] = &unk_24CFED060;
    block[4] = self;
    v18 = v10;
    v19 = v4;
    v20 = &v29;
    v21 = &v23;
    p_buf = &buf;
    dispatch_sync(v11, block);

  }
  else
  {
    pk_Payment_log();
    v12 = objc_claimAutoreleasedReturnValue();
    v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      pk_Payment_log();
      v14 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)v16 = 0;
        _os_log_impl(&dword_213518000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v16, 2u);
      }

    }
  }
  v15 = *(_QWORD *)(*((_QWORD *)&buf + 1) + 40);
  if (v15)
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v15, v30[5], v24[5]);
  _Block_object_dispose(&v23, 8);

  _Block_object_dispose(&v29, 8);
  _Block_object_dispose(&buf, 8);

}

void __73__NPKPaymentWebServiceCompanionTargetDevice_registerCredentialsResponse___block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;
  NPKProtoRegisterSubcredentialsResponse *v4;
  void *v5;
  NSObject *v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  NSObject *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  NSObject *v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  NSObject *v36;
  _BOOL4 v37;
  void *v38;
  uint8_t buf[16];
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  _BYTE v48[128];
  _BYTE v49[128];
  uint64_t v50;

  v50 = *MEMORY[0x24BDAC8D0];
  objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "objectForKey:", *(_QWORD *)(a1 + 40));
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  if (v3)
  {
    v38 = v3;
    v4 = [NPKProtoRegisterSubcredentialsResponse alloc];
    objc_msgSend(*(id *)(a1 + 48), "data");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    v6 = -[NPKProtoRegisterSubcredentialsResponse initWithData:](v4, "initWithData:", v5);

    objc_msgSend(MEMORY[0x24BDBCEF0], "setWithCapacity:", -[NSObject passesDatasCount](v6, "passesDatasCount"));
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v44 = 0u;
    v45 = 0u;
    v46 = 0u;
    v47 = 0u;
    -[NSObject passesDatas](v6, "passesDatas");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    v9 = objc_msgSend(v8, "countByEnumeratingWithState:objects:count:", &v44, v49, 16);
    if (v9)
    {
      v10 = v9;
      v11 = *(_QWORD *)v45;
      do
      {
        v12 = 0;
        do
        {
          if (*(_QWORD *)v45 != v11)
            objc_enumerationMutation(v8);
          v13 = *(void **)(*((_QWORD *)&v44 + 1) + 8 * v12);
          v14 = objc_opt_class();
          NPKSecureUnarchiveObject(v13, v14);
          v15 = (void *)objc_claimAutoreleasedReturnValue();
          if (v15)
            objc_msgSend(v7, "addObject:", v15);

          ++v12;
        }
        while (v10 != v12);
        v10 = objc_msgSend(v8, "countByEnumeratingWithState:objects:count:", &v44, v49, 16);
      }
      while (v10);
    }

    v16 = objc_msgSend(v7, "copy");
    v17 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
    v18 = *(void **)(v17 + 40);
    *(_QWORD *)(v17 + 40) = v16;

    objc_msgSend(MEMORY[0x24BDBCEF0], "setWithCapacity:", -[NSObject errorsDatasCount](v6, "errorsDatasCount"));
    v19 = (void *)objc_claimAutoreleasedReturnValue();
    v40 = 0u;
    v41 = 0u;
    v42 = 0u;
    v43 = 0u;
    -[NSObject errorsDatas](v6, "errorsDatas");
    v20 = (void *)objc_claimAutoreleasedReturnValue();
    v21 = objc_msgSend(v20, "countByEnumeratingWithState:objects:count:", &v40, v48, 16);
    if (v21)
    {
      v22 = v21;
      v23 = *(_QWORD *)v41;
      do
      {
        v24 = 0;
        do
        {
          if (*(_QWORD *)v41 != v23)
            objc_enumerationMutation(v20);
          v25 = *(void **)(*((_QWORD *)&v40 + 1) + 8 * v24);
          if (v25)
          {
            v26 = objc_opt_class();
            NPKSecureUnarchiveObject(v25, v26);
            v27 = objc_claimAutoreleasedReturnValue();
            if (v27)
            {
              v28 = (void *)v27;
              objc_msgSend(v19, "addObject:", v27);

            }
          }
          ++v24;
        }
        while (v22 != v24);
        v22 = objc_msgSend(v20, "countByEnumeratingWithState:objects:count:", &v40, v48, 16);
      }
      while (v22);
    }

    v29 = objc_msgSend(v19, "copy");
    v30 = *(_QWORD *)(*(_QWORD *)(a1 + 64) + 8);
    v31 = *(void **)(v30 + 40);
    *(_QWORD *)(v30 + 40) = v29;

    objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
    v32 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v32, "removeObjectForKey:", *(_QWORD *)(a1 + 40));

    v3 = v38;
    objc_msgSend(v38, "completionHandler");
    v33 = objc_claimAutoreleasedReturnValue();
    v34 = *(_QWORD *)(*(_QWORD *)(a1 + 72) + 8);
    v35 = *(void **)(v34 + 40);
    *(_QWORD *)(v34 + 40) = v33;

  }
  else
  {
    pk_Payment_log();
    v36 = objc_claimAutoreleasedReturnValue();
    v37 = os_log_type_enabled(v36, OS_LOG_TYPE_DEFAULT);

    if (!v37)
      goto LABEL_23;
    pk_Payment_log();
    v6 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl(&dword_213518000, v6, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", buf, 2u);
    }
  }

LABEL_23:
}

- (void)revokeCredentialsWithIdentifiers:(id)a3 completion:(id)a4
{
  id v6;
  id v7;
  NSObject *v8;
  _BOOL4 v9;
  NSObject *v10;
  void *v11;
  NSObject *v12;
  NSObject *v13;
  _BOOL4 v14;
  NSObject *v15;
  _QWORD block[4];
  id v17;
  NPKPaymentWebServiceCompanionTargetDevice *v18;
  id v19;
  uint8_t buf[4];
  id v21;
  __int16 v22;
  void *v23;
  uint64_t v24;

  v24 = *MEMORY[0x24BDAC8D0];
  v6 = a3;
  v7 = a4;
  pk_Payment_log();
  v8 = objc_claimAutoreleasedReturnValue();
  v9 = os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT);

  if (v9)
  {
    pk_Payment_log();
    v10 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
    {
      v11 = (void *)MEMORY[0x2199B6780](v7);
      *(_DWORD *)buf = 138412546;
      v21 = v6;
      v22 = 2112;
      v23 = v11;
      _os_log_impl(&dword_213518000, v10, OS_LOG_TYPE_DEFAULT, "Notice: Target device - revoke credentials with identifiers %@ completion %@", buf, 0x16u);

    }
  }
  if (-[NPKPaymentWebServiceCompanionTargetDevice _isSubcredentialProvisioningSupported](self, "_isSubcredentialProvisioningSupported"))
  {
    -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
    v12 = objc_claimAutoreleasedReturnValue();
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 3221225472;
    block[2] = __89__NPKPaymentWebServiceCompanionTargetDevice_revokeCredentialsWithIdentifiers_completion___block_invoke;
    block[3] = &unk_24CFE84E8;
    v17 = v6;
    v18 = self;
    v19 = v7;
    dispatch_sync(v12, block);

  }
  else
  {
    pk_Payment_log();
    v13 = objc_claimAutoreleasedReturnValue();
    v14 = os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT);

    if (v14)
    {
      pk_Payment_log();
      v15 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)buf = 0;
        _os_log_impl(&dword_213518000, v15, OS_LOG_TYPE_DEFAULT, "Notice: Target device does not support subcredential provisioning.", buf, 2u);
      }

    }
    if (v7)
      (*((void (**)(id, _QWORD))v7 + 2))(v7, 0);
  }

}

void __89__NPKPaymentWebServiceCompanionTargetDevice_revokeCredentialsWithIdentifiers_completion___block_invoke(uint64_t a1)
{
  NPKProtoRevokeSubcredentialsRequest *v2;
  void *v3;
  uint64_t v4;
  NPKProtoRevokeSubcredentialsRequest *v5;
  id v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  NSObject *v12;
  void *v13;
  void *v14;
  void *v15;
  NSObject *v16;
  _BOOL4 v17;
  const char *v18;
  NSObject *v19;
  os_log_type_t v20;
  NSObject *v21;
  _BOOL4 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(uint64_t);
  void *v26;
  id v27;
  _QWORD v28[4];
  NPKProtoRevokeSubcredentialsRequest *v29;
  uint8_t buf[4];
  void *v31;
  uint64_t v32;
  _QWORD v33[2];

  v33[1] = *MEMORY[0x24BDAC8D0];
  v2 = objc_alloc_init(NPKProtoRevokeSubcredentialsRequest);
  v3 = *(void **)(a1 + 32);
  v4 = MEMORY[0x24BDAC760];
  v28[0] = MEMORY[0x24BDAC760];
  v28[1] = 3221225472;
  v28[2] = __89__NPKPaymentWebServiceCompanionTargetDevice_revokeCredentialsWithIdentifiers_completion___block_invoke_2;
  v28[3] = &unk_24CFEBC28;
  v5 = v2;
  v29 = v5;
  objc_msgSend(v3, "enumerateObjectsUsingBlock:", v28);
  v6 = objc_alloc(MEMORY[0x24BE4FE40]);
  -[NPKProtoRevokeSubcredentialsRequest data](v5, "data");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = (void *)objc_msgSend(v6, "initWithProtobufData:type:isResponse:", v7, 79, 0);

  v9 = *(void **)(a1 + 40);
  v32 = *MEMORY[0x24BE4FB30];
  v33[0] = &unk_24D0566F0;
  objc_msgSend(MEMORY[0x24BDBCE70], "dictionaryWithObjects:forKeys:count:", v33, &v32, 1);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "_sendProtobuf:responseExpected:extraOptions:", v8, 1, v10);
  v11 = (void *)objc_claimAutoreleasedReturnValue();

  if (v11)
  {
    if (*(_QWORD *)(a1 + 48))
    {
      v12 = MEMORY[0x2199B6780]();
      v23 = v4;
      v24 = 3221225472;
      v25 = __89__NPKPaymentWebServiceCompanionTargetDevice_revokeCredentialsWithIdentifiers_completion___block_invoke_3;
      v26 = &unk_24CFE7B80;
      v27 = *(id *)(a1 + 48);
      v13 = (void *)MEMORY[0x2199B6780](&v23);
      v14 = *(void **)(a1 + 40);
      v15 = (void *)MEMORY[0x2199B6780](v12);
      objc_msgSend(v14, "_trackOutstandingRequestWithMessageIdentifier:completionHandler:errorHandler:", v11, v15, v13, v23, v24, v25, v26);

LABEL_11:
      goto LABEL_12;
    }
    pk_Payment_log();
    v21 = objc_claimAutoreleasedReturnValue();
    v22 = os_log_type_enabled(v21, OS_LOG_TYPE_DEFAULT);

    if (v22)
    {
      pk_Payment_log();
      v12 = objc_claimAutoreleasedReturnValue();
      if (!os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
        goto LABEL_11;
      *(_DWORD *)buf = 138412290;
      v31 = v11;
      v18 = "Warning: No response expected for message with identifier %@";
      v19 = v12;
      v20 = OS_LOG_TYPE_DEFAULT;
      goto LABEL_10;
    }
  }
  else
  {
    pk_Payment_log();
    v16 = objc_claimAutoreleasedReturnValue();
    v17 = os_log_type_enabled(v16, OS_LOG_TYPE_ERROR);

    if (v17)
    {
      pk_Payment_log();
      v12 = objc_claimAutoreleasedReturnValue();
      if (!os_log_type_enabled(v12, OS_LOG_TYPE_ERROR))
        goto LABEL_11;
      *(_DWORD *)buf = 138412290;
      v31 = v8;
      v18 = "Error: No message identifier for protobuf %@";
      v19 = v12;
      v20 = OS_LOG_TYPE_ERROR;
LABEL_10:
      _os_log_impl(&dword_213518000, v19, v20, v18, buf, 0xCu);
      goto LABEL_11;
    }
  }
LABEL_12:

}

uint64_t __89__NPKPaymentWebServiceCompanionTargetDevice_revokeCredentialsWithIdentifiers_completion___block_invoke_2(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(a1 + 32), "addIdentifiers:", a2);
}

uint64_t __89__NPKPaymentWebServiceCompanionTargetDevice_revokeCredentialsWithIdentifiers_completion___block_invoke_3(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 32);
  if (result)
    return (*(uint64_t (**)(uint64_t, _QWORD))(result + 16))(result, 0);
  return result;
}

- (void)revokeCredentialsResponse:(id)a3
{
  id v4;
  NSObject *v5;
  _BOOL4 v6;
  NSObject *v7;
  void *v8;
  void *v9;
  void *v10;
  NSObject *v11;
  NSObject *v12;
  _BOOL4 v13;
  NSObject *v14;
  uint64_t v15;
  uint8_t v16[8];
  _QWORD block[5];
  id v18;
  id v19;
  uint64_t *v20;
  __int128 *p_buf;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  char v25;
  __int128 buf;
  uint64_t v27;
  uint64_t (*v28)(uint64_t, uint64_t);
  void (*v29)(uint64_t);
  id v30;
  uint64_t v31;

  v31 = *MEMORY[0x24BDAC8D0];
  v4 = a3;
  pk_Payment_log();
  v5 = objc_claimAutoreleasedReturnValue();
  v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    pk_Payment_log();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend(v4, "npkDescription");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      LODWORD(buf) = 138412290;
      *(_QWORD *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_213518000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Target revokeCredentialsResponse: incoming protobuf %@", (uint8_t *)&buf, 0xCu);

    }
  }
  objc_msgSend(v4, "context");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "incomingResponseIdentifier");
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  *(_QWORD *)&buf = 0;
  *((_QWORD *)&buf + 1) = &buf;
  v27 = 0x3032000000;
  v28 = __Block_byref_object_copy__342;
  v29 = __Block_byref_object_dispose__343;
  v30 = 0;
  v22 = 0;
  v23 = &v22;
  v24 = 0x2020000000;
  v25 = 0;
  if (v10)
  {
    -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
    v11 = objc_claimAutoreleasedReturnValue();
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 3221225472;
    block[2] = __71__NPKPaymentWebServiceCompanionTargetDevice_revokeCredentialsResponse___block_invoke;
    block[3] = &unk_24CFED0D8;
    block[4] = self;
    v18 = v10;
    v19 = v4;
    v20 = &v22;
    p_buf = &buf;
    dispatch_sync(v11, block);

  }
  else
  {
    pk_Payment_log();
    v12 = objc_claimAutoreleasedReturnValue();
    v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      pk_Payment_log();
      v14 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)v16 = 0;
        _os_log_impl(&dword_213518000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v16, 2u);
      }

    }
  }
  v15 = *(_QWORD *)(*((_QWORD *)&buf + 1) + 40);
  if (v15)
    (*(void (**)(uint64_t, _QWORD))(v15 + 16))(v15, *((unsigned __int8 *)v23 + 24));
  _Block_object_dispose(&v22, 8);
  _Block_object_dispose(&buf, 8);

}

void __71__NPKPaymentWebServiceCompanionTargetDevice_revokeCredentialsResponse___block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;
  NPKProtoRevokeSubcredentialsResponse *v4;
  void *v5;
  NPKProtoRevokeSubcredentialsResponse *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  NSObject *v11;
  _BOOL4 v12;
  NSObject *v13;
  uint8_t v14[16];

  objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "objectForKey:", *(_QWORD *)(a1 + 40));
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  if (v3)
  {
    v4 = [NPKProtoRevokeSubcredentialsResponse alloc];
    objc_msgSend(*(id *)(a1 + 48), "data");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    v6 = -[NPKProtoRevokeSubcredentialsResponse initWithData:](v4, "initWithData:", v5);

    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 24) = -[NPKProtoRevokeSubcredentialsResponse success](v6, "success");
    objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "removeObjectForKey:", *(_QWORD *)(a1 + 40));

    objc_msgSend(v3, "completionHandler");
    v8 = objc_claimAutoreleasedReturnValue();
    v9 = *(_QWORD *)(*(_QWORD *)(a1 + 64) + 8);
    v10 = *(void **)(v9 + 40);
    *(_QWORD *)(v9 + 40) = v8;

  }
  else
  {
    pk_Payment_log();
    v11 = objc_claimAutoreleasedReturnValue();
    v12 = os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT);

    if (v12)
    {
      pk_Payment_log();
      v13 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)v14 = 0;
        _os_log_impl(&dword_213518000, v13, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", v14, 2u);
      }

    }
  }

}

- (void)paymentWebService:(id)a3 removeSharingInvitation:(id)a4 withCompletion:(id)a5
{
  id v7;
  id v8;
  NSObject *v9;
  _BOOL4 v10;
  NSObject *v11;
  void *v12;
  NSObject *v13;
  void *v14;
  NSObject *v15;
  _BOOL4 v16;
  NSObject *v17;
  void *v18;
  uint64_t v19;
  void *v20;
  _QWORD block[4];
  id v22;
  NPKPaymentWebServiceCompanionTargetDevice *v23;
  id v24;
  uint64_t v25;
  const __CFString *v26;
  uint8_t buf[4];
  id v28;
  __int16 v29;
  void *v30;
  uint64_t v31;

  v31 = *MEMORY[0x24BDAC8D0];
  v7 = a4;
  v8 = a5;
  pk_Payment_log();
  v9 = objc_claimAutoreleasedReturnValue();
  v10 = os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT);

  if (v10)
  {
    pk_Payment_log();
    v11 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
    {
      v12 = (void *)MEMORY[0x2199B6780](v8);
      *(_DWORD *)buf = 138412546;
      v28 = v7;
      v29 = 2112;
      v30 = v12;
      _os_log_impl(&dword_213518000, v11, OS_LOG_TYPE_DEFAULT, "Notice: Target device - remove sharing invitation %@ with completion %@", buf, 0x16u);

    }
  }
  if (-[NPKPaymentWebServiceCompanionTargetDevice _isSubcredentialProvisioningSupported](self, "_isSubcredentialProvisioningSupported"))
  {
    -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
    v13 = objc_claimAutoreleasedReturnValue();
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 3221225472;
    block[2] = __102__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_removeSharingInvitation_withCompletion___block_invoke;
    block[3] = &unk_24CFE84E8;
    v22 = v7;
    v23 = self;
    v24 = v8;
    dispatch_sync(v13, block);

    v14 = v22;
LABEL_13:

    goto LABEL_14;
  }
  pk_Payment_log();
  v15 = objc_claimAutoreleasedReturnValue();
  v16 = os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT);

  if (v16)
  {
    pk_Payment_log();
    v17 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl(&dword_213518000, v17, OS_LOG_TYPE_DEFAULT, "Notice: Target device does not support subcredential provisioning.", buf, 2u);
    }

  }
  if (v8)
  {
    v18 = (void *)MEMORY[0x24BDD1540];
    v19 = *MEMORY[0x24BE6F8A0];
    v25 = *MEMORY[0x24BDD0FD8];
    v26 = CFSTR("Target device does not support subcredential provisioning.");
    objc_msgSend(MEMORY[0x24BDBCE70], "dictionaryWithObjects:forKeys:count:", &v26, &v25, 1);
    v20 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v18, "errorWithDomain:code:userInfo:", v19, 21, v20);
    v14 = (void *)objc_claimAutoreleasedReturnValue();

    (*((void (**)(id, BOOL))v8 + 2))(v8, v14 != 0);
    goto LABEL_13;
  }
LABEL_14:

}

void __102__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_removeSharingInvitation_withCompletion___block_invoke(uint64_t a1)
{
  NPKProtoRemoveSharingInvitationRequest *v2;
  void *v3;
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  NSObject *v10;
  void *v11;
  void *v12;
  void *v13;
  NSObject *v14;
  _BOOL4 v15;
  const char *v16;
  NSObject *v17;
  os_log_type_t v18;
  NSObject *v19;
  _BOOL4 v20;
  _QWORD v21[4];
  id v22;
  uint8_t buf[4];
  void *v24;
  uint64_t v25;
  _QWORD v26[2];

  v26[1] = *MEMORY[0x24BDAC8D0];
  v2 = objc_alloc_init(NPKProtoRemoveSharingInvitationRequest);
  NPKSecureArchiveObject(*(void **)(a1 + 32));
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  -[NPKProtoRemoveSharingInvitationRequest setInvitationData:](v2, "setInvitationData:", v3);

  v4 = objc_alloc(MEMORY[0x24BE4FE40]);
  -[NPKProtoRemoveSharingInvitationRequest data](v2, "data");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = (void *)objc_msgSend(v4, "initWithProtobufData:type:isResponse:", v5, 80, 0);

  v7 = *(void **)(a1 + 40);
  v25 = *MEMORY[0x24BE4FB30];
  v26[0] = &unk_24D0566F0;
  objc_msgSend(MEMORY[0x24BDBCE70], "dictionaryWithObjects:forKeys:count:", v26, &v25, 1);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "_sendProtobuf:responseExpected:extraOptions:", v6, 1, v8);
  v9 = (void *)objc_claimAutoreleasedReturnValue();

  if (v9)
  {
    if (*(_QWORD *)(a1 + 48))
    {
      v10 = MEMORY[0x2199B6780]();
      v21[0] = MEMORY[0x24BDAC760];
      v21[1] = 3221225472;
      v21[2] = __102__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_removeSharingInvitation_withCompletion___block_invoke_2;
      v21[3] = &unk_24CFE7B80;
      v22 = *(id *)(a1 + 48);
      v11 = (void *)MEMORY[0x2199B6780](v21);
      v12 = *(void **)(a1 + 40);
      v13 = (void *)MEMORY[0x2199B6780](v10);
      objc_msgSend(v12, "_trackOutstandingRequestWithMessageIdentifier:completionHandler:errorHandler:", v9, v13, v11);

LABEL_11:
      goto LABEL_12;
    }
    pk_Payment_log();
    v19 = objc_claimAutoreleasedReturnValue();
    v20 = os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT);

    if (v20)
    {
      pk_Payment_log();
      v10 = objc_claimAutoreleasedReturnValue();
      if (!os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
        goto LABEL_11;
      *(_DWORD *)buf = 138412290;
      v24 = v9;
      v16 = "Warning: No response expected for message with identifier %@";
      v17 = v10;
      v18 = OS_LOG_TYPE_DEFAULT;
      goto LABEL_10;
    }
  }
  else
  {
    pk_Payment_log();
    v14 = objc_claimAutoreleasedReturnValue();
    v15 = os_log_type_enabled(v14, OS_LOG_TYPE_ERROR);

    if (v15)
    {
      pk_Payment_log();
      v10 = objc_claimAutoreleasedReturnValue();
      if (!os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
        goto LABEL_11;
      *(_DWORD *)buf = 138412290;
      v24 = v6;
      v16 = "Error: No message identifier for protobuf %@";
      v17 = v10;
      v18 = OS_LOG_TYPE_ERROR;
LABEL_10:
      _os_log_impl(&dword_213518000, v17, v18, v16, buf, 0xCu);
      goto LABEL_11;
    }
  }
LABEL_12:

}

uint64_t __102__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_removeSharingInvitation_withCompletion___block_invoke_2(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 32);
  if (result)
    return (*(uint64_t (**)(uint64_t, BOOL))(result + 16))(result, a2 != 0);
  return result;
}

- (void)removeSharingInvitationResponse:(id)a3
{
  id v4;
  NSObject *v5;
  _BOOL4 v6;
  NSObject *v7;
  void *v8;
  void *v9;
  void *v10;
  NSObject *v11;
  NSObject *v12;
  _BOOL4 v13;
  NSObject *v14;
  uint64_t v15;
  uint8_t v16[8];
  _QWORD block[5];
  id v18;
  id v19;
  __int128 *p_buf;
  uint64_t *v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  char v25;
  __int128 buf;
  uint64_t v27;
  uint64_t (*v28)(uint64_t, uint64_t);
  void (*v29)(uint64_t);
  id v30;
  uint64_t v31;

  v31 = *MEMORY[0x24BDAC8D0];
  v4 = a3;
  pk_Payment_log();
  v5 = objc_claimAutoreleasedReturnValue();
  v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    pk_Payment_log();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend(v4, "npkDescription");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      LODWORD(buf) = 138412290;
      *(_QWORD *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_213518000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Target removeSharingInvitationResponse: incoming protobuf %@", (uint8_t *)&buf, 0xCu);

    }
  }
  objc_msgSend(v4, "context");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "incomingResponseIdentifier");
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  *(_QWORD *)&buf = 0;
  *((_QWORD *)&buf + 1) = &buf;
  v27 = 0x3032000000;
  v28 = __Block_byref_object_copy__342;
  v29 = __Block_byref_object_dispose__343;
  v30 = 0;
  v22 = 0;
  v23 = &v22;
  v24 = 0x2020000000;
  v25 = 0;
  if (v10)
  {
    -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
    v11 = objc_claimAutoreleasedReturnValue();
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 3221225472;
    block[2] = __77__NPKPaymentWebServiceCompanionTargetDevice_removeSharingInvitationResponse___block_invoke;
    block[3] = &unk_24CFED0D8;
    block[4] = self;
    v18 = v10;
    v19 = v4;
    p_buf = &buf;
    v21 = &v22;
    dispatch_sync(v11, block);

  }
  else
  {
    pk_Payment_log();
    v12 = objc_claimAutoreleasedReturnValue();
    v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      pk_Payment_log();
      v14 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)v16 = 0;
        _os_log_impl(&dword_213518000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v16, 2u);
      }

    }
  }
  v15 = *(_QWORD *)(*((_QWORD *)&buf + 1) + 40);
  if (v15)
    (*(void (**)(uint64_t, _QWORD))(v15 + 16))(v15, *((unsigned __int8 *)v23 + 24));
  _Block_object_dispose(&v22, 8);
  _Block_object_dispose(&buf, 8);

}

void __77__NPKPaymentWebServiceCompanionTargetDevice_removeSharingInvitationResponse___block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;
  NPKProtoRemoveSharingInvitationResponse *v4;
  void *v5;
  NPKProtoRemoveSharingInvitationResponse *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  NSObject *v11;
  _BOOL4 v12;
  NSObject *v13;
  uint8_t v14[16];

  objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "objectForKey:", *(_QWORD *)(a1 + 40));
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  if (v3)
  {
    v4 = [NPKProtoRemoveSharingInvitationResponse alloc];
    objc_msgSend(*(id *)(a1 + 48), "data");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    v6 = -[NPKProtoRemoveSharingInvitationResponse initWithData:](v4, "initWithData:", v5);

    objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "removeObjectForKey:", *(_QWORD *)(a1 + 40));

    objc_msgSend(v3, "completionHandler");
    v8 = objc_claimAutoreleasedReturnValue();
    v9 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
    v10 = *(void **)(v9 + 40);
    *(_QWORD *)(v9 + 40) = v8;

    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 24) = -[NPKProtoRemoveSharingInvitationResponse success](v6, "success");
  }
  else
  {
    pk_Payment_log();
    v11 = objc_claimAutoreleasedReturnValue();
    v12 = os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT);

    if (v12)
    {
      pk_Payment_log();
      v13 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)v14 = 0;
        _os_log_impl(&dword_213518000, v13, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", v14, 2u);
      }

    }
  }

}

- (void)handleCredentialsChange:(id)a3
{
  id v4;
  NSObject *v5;
  _BOOL4 v6;
  NSObject *v7;
  void *v8;
  NPKProtoHandleCredentialsChangeRequest *v9;
  void *v10;
  NPKProtoHandleCredentialsChangeRequest *v11;
  void *v12;
  void *v13;
  NSObject *v14;
  _BOOL4 v15;
  NSObject *v16;
  int v17;
  void *v18;
  uint64_t v19;
  id v20;
  NSObject *v21;
  _BOOL4 v22;
  NSObject *v23;
  void *v24;
  id v25;
  id v26;
  _QWORD v27[4];
  id v28;
  id v29;
  _QWORD v30[4];
  id v31;
  uint8_t buf[4];
  id v33;
  __int16 v34;
  void *v35;
  uint64_t v36;

  v36 = *MEMORY[0x24BDAC8D0];
  v4 = a3;
  pk_Payment_log();
  v5 = objc_claimAutoreleasedReturnValue();
  v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    pk_Payment_log();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend(v4, "npkDescription");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138412290;
      v33 = v8;
      _os_log_impl(&dword_213518000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Target handleCredentialsChange: incoming protobuf %@", buf, 0xCu);

    }
  }
  v9 = [NPKProtoHandleCredentialsChangeRequest alloc];
  objc_msgSend(v4, "data");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v11 = -[NPKProtoHandleCredentialsChangeRequest initWithData:](v9, "initWithData:", v10);

  -[NPKProtoHandleCredentialsChangeRequest passID](v11, "passID");
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x24BDBCEF0], "set");
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  pk_Payment_log();
  v14 = objc_claimAutoreleasedReturnValue();
  v15 = os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT);

  if (v15)
  {
    pk_Payment_log();
    v16 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
    {
      v17 = -[NPKProtoHandleCredentialsChangeRequest credentialsBytesCount](v11, "credentialsBytesCount");
      *(_DWORD *)buf = 138412546;
      v33 = v12;
      v34 = 1024;
      LODWORD(v35) = v17;
      _os_log_impl(&dword_213518000, v16, OS_LOG_TYPE_DEFAULT, "Notice: Got credentials update for unique ID %@ with %u credentials", buf, 0x12u);
    }

  }
  -[NPKProtoHandleCredentialsChangeRequest credentialsBytes](v11, "credentialsBytes");
  v18 = (void *)objc_claimAutoreleasedReturnValue();
  v19 = MEMORY[0x24BDAC760];
  v30[0] = MEMORY[0x24BDAC760];
  v30[1] = 3221225472;
  v30[2] = __69__NPKPaymentWebServiceCompanionTargetDevice_handleCredentialsChange___block_invoke;
  v30[3] = &unk_24CFED088;
  v20 = v13;
  v31 = v20;
  objc_msgSend(v18, "enumerateObjectsUsingBlock:", v30);

  pk_General_log();
  v21 = objc_claimAutoreleasedReturnValue();
  v22 = os_log_type_enabled(v21, OS_LOG_TYPE_DEFAULT);

  if (v22)
  {
    pk_General_log();
    v23 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v23, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138412546;
      v33 = v20;
      v34 = 2112;
      v35 = v12;
      _os_log_impl(&dword_213518000, v23, OS_LOG_TYPE_DEFAULT, "Notice: Handling credentials update %@ for unique ID %@", buf, 0x16u);
    }

  }
  -[NPKPaymentWebServiceCompanionTargetDevice delegate](self, "delegate");
  v24 = (void *)objc_claimAutoreleasedReturnValue();
  v27[0] = v19;
  v27[1] = 3221225472;
  v27[2] = __69__NPKPaymentWebServiceCompanionTargetDevice_handleCredentialsChange___block_invoke_672;
  v27[3] = &unk_24CFE8F58;
  v28 = v20;
  v29 = v12;
  v25 = v12;
  v26 = v20;
  objc_msgSend(v24, "handleCredentialsUpdate:forUniqueID:completion:", v26, v25, v27);

}

void __69__NPKPaymentWebServiceCompanionTargetDevice_handleCredentialsChange___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  void *v5;
  id v6;

  v3 = a2;
  v4 = objc_opt_class();
  NPKSecureUnarchiveObject(v3, v4);
  v6 = (id)objc_claimAutoreleasedReturnValue();

  v5 = v6;
  if (v6)
  {
    objc_msgSend(*(id *)(a1 + 32), "addObject:", v6);
    v5 = v6;
  }

}

void __69__NPKPaymentWebServiceCompanionTargetDevice_handleCredentialsChange___block_invoke_672(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  _BOOL4 v5;
  NSObject *v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  __int16 v11;
  uint64_t v12;
  __int16 v13;
  id v14;
  uint64_t v15;

  v15 = *MEMORY[0x24BDAC8D0];
  v3 = a2;
  pk_General_log();
  v4 = objc_claimAutoreleasedReturnValue();
  v5 = os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT);

  if (v5)
  {
    pk_General_log();
    v6 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      v7 = *(_QWORD *)(a1 + 32);
      v8 = *(_QWORD *)(a1 + 40);
      v9 = 138412802;
      v10 = v7;
      v11 = 2112;
      v12 = v8;
      v13 = 2112;
      v14 = v3;
      _os_log_impl(&dword_213518000, v6, OS_LOG_TYPE_DEFAULT, "Notice: Handled credentials update %@ for unique ID %@ with error: %@", (uint8_t *)&v9, 0x20u);
    }

  }
}

- (void)paymentWebService:(id)a3 declineRelatedSharingInvitationsIfNecessary:(id)a4 withCompletion:(id)a5
{
  id v7;
  id v8;
  NSObject *v9;
  _BOOL4 v10;
  NSObject *v11;
  void *v12;
  NSObject *v13;
  void *v14;
  NSObject *v15;
  _BOOL4 v16;
  NSObject *v17;
  void *v18;
  uint64_t v19;
  void *v20;
  _QWORD block[4];
  id v22;
  NPKPaymentWebServiceCompanionTargetDevice *v23;
  id v24;
  uint64_t v25;
  const __CFString *v26;
  uint8_t buf[4];
  id v28;
  __int16 v29;
  void *v30;
  uint64_t v31;

  v31 = *MEMORY[0x24BDAC8D0];
  v7 = a4;
  v8 = a5;
  pk_Payment_log();
  v9 = objc_claimAutoreleasedReturnValue();
  v10 = os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT);

  if (v10)
  {
    pk_Payment_log();
    v11 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
    {
      v12 = (void *)MEMORY[0x2199B6780](v8);
      *(_DWORD *)buf = 138412546;
      v28 = v7;
      v29 = 2112;
      v30 = v12;
      _os_log_impl(&dword_213518000, v11, OS_LOG_TYPE_DEFAULT, "Notice: Target device - decline related invitations if necessary for invitation %@ with completion %@", buf, 0x16u);

    }
  }
  if (-[NPKPaymentWebServiceCompanionTargetDevice _isSubcredentialProvisioningSupported](self, "_isSubcredentialProvisioningSupported"))
  {
    -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
    v13 = objc_claimAutoreleasedReturnValue();
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 3221225472;
    block[2] = __122__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_declineRelatedSharingInvitationsIfNecessary_withCompletion___block_invoke;
    block[3] = &unk_24CFE84E8;
    v22 = v7;
    v23 = self;
    v24 = v8;
    dispatch_sync(v13, block);

    v14 = v22;
LABEL_13:

    goto LABEL_14;
  }
  pk_Payment_log();
  v15 = objc_claimAutoreleasedReturnValue();
  v16 = os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT);

  if (v16)
  {
    pk_Payment_log();
    v17 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl(&dword_213518000, v17, OS_LOG_TYPE_DEFAULT, "Notice: Target device does not support subcredential provisioning.", buf, 2u);
    }

  }
  if (v8)
  {
    v18 = (void *)MEMORY[0x24BDD1540];
    v19 = *MEMORY[0x24BE6F8A0];
    v25 = *MEMORY[0x24BDD0FD8];
    v26 = CFSTR("Target device does not support subcredential provisioning.");
    objc_msgSend(MEMORY[0x24BDBCE70], "dictionaryWithObjects:forKeys:count:", &v26, &v25, 1);
    v20 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v18, "errorWithDomain:code:userInfo:", v19, 21, v20);
    v14 = (void *)objc_claimAutoreleasedReturnValue();

    (*((void (**)(id, BOOL))v8 + 2))(v8, v14 != 0);
    goto LABEL_13;
  }
LABEL_14:

}

void __122__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_declineRelatedSharingInvitationsIfNecessary_withCompletion___block_invoke(uint64_t a1)
{
  NPKProtoDeclineRelatedInvitationsIfNecessaryRequest *v2;
  void *v3;
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  NSObject *v10;
  void *v11;
  void *v12;
  void *v13;
  NSObject *v14;
  _BOOL4 v15;
  const char *v16;
  NSObject *v17;
  os_log_type_t v18;
  NSObject *v19;
  _BOOL4 v20;
  _QWORD v21[4];
  id v22;
  uint8_t buf[4];
  void *v24;
  uint64_t v25;
  _QWORD v26[2];

  v26[1] = *MEMORY[0x24BDAC8D0];
  v2 = objc_alloc_init(NPKProtoDeclineRelatedInvitationsIfNecessaryRequest);
  NPKSecureArchiveObject(*(void **)(a1 + 32));
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  -[NPKProtoDeclineRelatedInvitationsIfNecessaryRequest setInvitationData:](v2, "setInvitationData:", v3);

  v4 = objc_alloc(MEMORY[0x24BE4FE40]);
  -[NPKProtoDeclineRelatedInvitationsIfNecessaryRequest data](v2, "data");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = (void *)objc_msgSend(v4, "initWithProtobufData:type:isResponse:", v5, 82, 0);

  v7 = *(void **)(a1 + 40);
  v25 = *MEMORY[0x24BE4FB30];
  v26[0] = &unk_24D0566F0;
  objc_msgSend(MEMORY[0x24BDBCE70], "dictionaryWithObjects:forKeys:count:", v26, &v25, 1);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "_sendProtobuf:responseExpected:extraOptions:", v6, 1, v8);
  v9 = (void *)objc_claimAutoreleasedReturnValue();

  if (v9)
  {
    if (*(_QWORD *)(a1 + 48))
    {
      v10 = MEMORY[0x2199B6780]();
      v21[0] = MEMORY[0x24BDAC760];
      v21[1] = 3221225472;
      v21[2] = __122__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_declineRelatedSharingInvitationsIfNecessary_withCompletion___block_invoke_2;
      v21[3] = &unk_24CFE7B80;
      v22 = *(id *)(a1 + 48);
      v11 = (void *)MEMORY[0x2199B6780](v21);
      v12 = *(void **)(a1 + 40);
      v13 = (void *)MEMORY[0x2199B6780](v10);
      objc_msgSend(v12, "_trackOutstandingRequestWithMessageIdentifier:completionHandler:errorHandler:", v9, v13, v11);

LABEL_11:
      goto LABEL_12;
    }
    pk_Payment_log();
    v19 = objc_claimAutoreleasedReturnValue();
    v20 = os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT);

    if (v20)
    {
      pk_Payment_log();
      v10 = objc_claimAutoreleasedReturnValue();
      if (!os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
        goto LABEL_11;
      *(_DWORD *)buf = 138412290;
      v24 = v9;
      v16 = "Warning: No response expected for message with identifier %@";
      v17 = v10;
      v18 = OS_LOG_TYPE_DEFAULT;
      goto LABEL_10;
    }
  }
  else
  {
    pk_Payment_log();
    v14 = objc_claimAutoreleasedReturnValue();
    v15 = os_log_type_enabled(v14, OS_LOG_TYPE_ERROR);

    if (v15)
    {
      pk_Payment_log();
      v10 = objc_claimAutoreleasedReturnValue();
      if (!os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
        goto LABEL_11;
      *(_DWORD *)buf = 138412290;
      v24 = v6;
      v16 = "Error: No message identifier for protobuf %@";
      v17 = v10;
      v18 = OS_LOG_TYPE_ERROR;
LABEL_10:
      _os_log_impl(&dword_213518000, v17, v18, v16, buf, 0xCu);
      goto LABEL_11;
    }
  }
LABEL_12:

}

uint64_t __122__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_declineRelatedSharingInvitationsIfNecessary_withCompletion___block_invoke_2(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 32);
  if (result)
    return (*(uint64_t (**)(uint64_t, _QWORD))(result + 16))(result, 0);
  return result;
}

- (void)declineRelatedSharingInvitationsIfNecessaryRequest:(id)a3
{
  id v4;
  NSObject *v5;
  _BOOL4 v6;
  NSObject *v7;
  void *v8;
  NPKProtoDeclineRelatedInvitationsIfNecessaryRequest *v9;
  void *v10;
  NPKProtoDeclineRelatedInvitationsIfNecessaryRequest *v11;
  void *v12;
  NSObject *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  id v18;
  _QWORD v19[4];
  id v20;
  id v21;
  uint8_t buf[4];
  void *v23;
  uint64_t v24;

  v24 = *MEMORY[0x24BDAC8D0];
  v4 = a3;
  pk_Payment_log();
  v5 = objc_claimAutoreleasedReturnValue();
  v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    pk_Payment_log();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend(v4, "npkDescription");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138412290;
      v23 = v8;
      _os_log_impl(&dword_213518000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Target device - received decline related sharing invitations if necessary request: %@", buf, 0xCu);

    }
  }
  v9 = [NPKProtoDeclineRelatedInvitationsIfNecessaryRequest alloc];
  objc_msgSend(v4, "data");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v11 = -[NPKProtoDeclineRelatedInvitationsIfNecessaryRequest initWithData:](v9, "initWithData:", v10);

  -[NPKProtoDeclineRelatedInvitationsIfNecessaryRequest invitationData](v11, "invitationData");
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  v13 = objc_opt_class();
  NPKSecureUnarchiveObject(v12, v13);
  v14 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v4, "context");
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v15, "outgoingResponseIdentifier");
  v16 = (void *)objc_claimAutoreleasedReturnValue();

  objc_initWeak((id *)buf, self);
  -[NPKPaymentWebServiceCompanionTargetDevice subcredentialInvitationCoordinator](self, "subcredentialInvitationCoordinator");
  v17 = (void *)objc_claimAutoreleasedReturnValue();
  v19[0] = MEMORY[0x24BDAC760];
  v19[1] = 3221225472;
  v19[2] = __96__NPKPaymentWebServiceCompanionTargetDevice_declineRelatedSharingInvitationsIfNecessaryRequest___block_invoke;
  v19[3] = &unk_24CFED988;
  objc_copyWeak(&v21, (id *)buf);
  v18 = v16;
  v20 = v18;
  objc_msgSend(v17, "declineRelatedInvitationsIfNecessaryForInvitation:completion:", v14, v19);

  objc_destroyWeak(&v21);
  objc_destroyWeak((id *)buf);

}

void __96__NPKPaymentWebServiceCompanionTargetDevice_declineRelatedSharingInvitationsIfNecessaryRequest___block_invoke(uint64_t a1, char a2)
{
  id *v4;
  id WeakRetained;
  NSObject *v6;
  _QWORD block[4];
  id v8;
  id v9;
  char v10;

  v4 = (id *)(a1 + 40);
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  objc_msgSend(WeakRetained, "internalQueue");
  v6 = objc_claimAutoreleasedReturnValue();
  block[0] = MEMORY[0x24BDAC760];
  block[1] = 3221225472;
  block[2] = __96__NPKPaymentWebServiceCompanionTargetDevice_declineRelatedSharingInvitationsIfNecessaryRequest___block_invoke_2;
  block[3] = &unk_24CFED960;
  objc_copyWeak(&v9, v4);
  v10 = a2;
  v8 = *(id *)(a1 + 32);
  dispatch_sync(v6, block);

  objc_destroyWeak(&v9);
}

void __96__NPKPaymentWebServiceCompanionTargetDevice_declineRelatedSharingInvitationsIfNecessaryRequest___block_invoke_2(uint64_t a1)
{
  id WeakRetained;
  NPKProtoDeclineRelatedInvitationsIfNecessaryResponse *v3;
  id v4;
  void *v5;
  void *v6;
  void *v7;
  NSObject *v8;
  _BOOL4 v9;
  NSObject *v10;
  int v11;
  void *v12;
  uint64_t v13;

  v13 = *MEMORY[0x24BDAC8D0];
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v3 = objc_alloc_init(NPKProtoDeclineRelatedInvitationsIfNecessaryResponse);
  -[NPKProtoDeclineRelatedInvitationsIfNecessaryResponse setDidDeclineInvitations:](v3, "setDidDeclineInvitations:", *(unsigned __int8 *)(a1 + 48));
  v4 = objc_alloc(MEMORY[0x24BE4FE40]);
  -[NPKProtoDeclineRelatedInvitationsIfNecessaryResponse data](v3, "data");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = (void *)objc_msgSend(v4, "initWithProtobufData:type:isResponse:", v5, 82, 1);

  objc_msgSend(WeakRetained, "_sendProtobuf:responseIdentifier:", v6, *(_QWORD *)(a1 + 32));
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  if (!v7)
  {
    pk_Payment_log();
    v8 = objc_claimAutoreleasedReturnValue();
    v9 = os_log_type_enabled(v8, OS_LOG_TYPE_ERROR);

    if (v9)
    {
      pk_Payment_log();
      v10 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
      {
        v11 = 138412290;
        v12 = v6;
        _os_log_impl(&dword_213518000, v10, OS_LOG_TYPE_ERROR, "Error: No message identifier for protobuf %@", (uint8_t *)&v11, 0xCu);
      }

    }
  }

}

- (void)declineRelatedSharingInvitationsIfNecessaryResponse:(id)a3
{
  id v4;
  NSObject *v5;
  _BOOL4 v6;
  NSObject *v7;
  void *v8;
  void *v9;
  void *v10;
  NSObject *v11;
  NSObject *v12;
  _BOOL4 v13;
  NSObject *v14;
  uint64_t v15;
  uint8_t v16[8];
  _QWORD block[5];
  id v18;
  id v19;
  __int128 *p_buf;
  uint64_t *v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  char v25;
  __int128 buf;
  uint64_t v27;
  uint64_t (*v28)(uint64_t, uint64_t);
  void (*v29)(uint64_t);
  id v30;
  uint64_t v31;

  v31 = *MEMORY[0x24BDAC8D0];
  v4 = a3;
  pk_Payment_log();
  v5 = objc_claimAutoreleasedReturnValue();
  v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    pk_Payment_log();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend(v4, "npkDescription");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      LODWORD(buf) = 138412290;
      *(_QWORD *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_213518000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Target declineRelatedSharingInvitationsIfNecessaryResponse: incoming protobuf %@", (uint8_t *)&buf, 0xCu);

    }
  }
  objc_msgSend(v4, "context");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "incomingResponseIdentifier");
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  *(_QWORD *)&buf = 0;
  *((_QWORD *)&buf + 1) = &buf;
  v27 = 0x3032000000;
  v28 = __Block_byref_object_copy__342;
  v29 = __Block_byref_object_dispose__343;
  v30 = 0;
  v22 = 0;
  v23 = &v22;
  v24 = 0x2020000000;
  v25 = 0;
  if (v10)
  {
    -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
    v11 = objc_claimAutoreleasedReturnValue();
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 3221225472;
    block[2] = __97__NPKPaymentWebServiceCompanionTargetDevice_declineRelatedSharingInvitationsIfNecessaryResponse___block_invoke;
    block[3] = &unk_24CFED0D8;
    block[4] = self;
    v18 = v10;
    v19 = v4;
    p_buf = &buf;
    v21 = &v22;
    dispatch_sync(v11, block);

  }
  else
  {
    pk_Payment_log();
    v12 = objc_claimAutoreleasedReturnValue();
    v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      pk_Payment_log();
      v14 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)v16 = 0;
        _os_log_impl(&dword_213518000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v16, 2u);
      }

    }
  }
  v15 = *(_QWORD *)(*((_QWORD *)&buf + 1) + 40);
  if (v15)
    (*(void (**)(uint64_t, _QWORD))(v15 + 16))(v15, *((unsigned __int8 *)v23 + 24));
  _Block_object_dispose(&v22, 8);
  _Block_object_dispose(&buf, 8);

}

void __97__NPKPaymentWebServiceCompanionTargetDevice_declineRelatedSharingInvitationsIfNecessaryResponse___block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;
  NPKProtoDeclineRelatedInvitationsIfNecessaryResponse *v4;
  void *v5;
  NPKProtoDeclineRelatedInvitationsIfNecessaryResponse *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  NSObject *v11;
  _BOOL4 v12;
  NSObject *v13;
  uint8_t v14[16];

  objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "objectForKey:", *(_QWORD *)(a1 + 40));
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  if (v3)
  {
    v4 = [NPKProtoDeclineRelatedInvitationsIfNecessaryResponse alloc];
    objc_msgSend(*(id *)(a1 + 48), "data");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    v6 = -[NPKProtoDeclineRelatedInvitationsIfNecessaryResponse initWithData:](v4, "initWithData:", v5);

    objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "removeObjectForKey:", *(_QWORD *)(a1 + 40));

    objc_msgSend(v3, "completionHandler");
    v8 = objc_claimAutoreleasedReturnValue();
    v9 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
    v10 = *(void **)(v9 + 40);
    *(_QWORD *)(v9 + 40) = v8;

    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 24) = -[NPKProtoDeclineRelatedInvitationsIfNecessaryResponse didDeclineInvitations](v6, "didDeclineInvitations");
  }
  else
  {
    pk_Payment_log();
    v11 = objc_claimAutoreleasedReturnValue();
    v12 = os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT);

    if (v12)
    {
      pk_Payment_log();
      v13 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)v14 = 0;
        _os_log_impl(&dword_213518000, v13, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", v14, 2u);
      }

    }
  }

}

- (void)paymentWebService:(id)a3 presentStandaloneTransaction:(int64_t)a4 forPassUniqueIdentifier:(id)a5 completion:(id)a6
{
  id v10;
  uint64_t (*v11)(uint64_t, uint64_t);
  id v12;
  NSObject *v13;
  _BOOL4 v14;
  NSObject *v15;
  void *v16;
  NSObject *v17;
  _BOOL4 v18;
  NSObject *v19;
  id v20;
  void *v21;
  dispatch_time_t v22;
  id v23;
  uint64_t (*v24)(uint64_t, uint64_t);
  id v25;
  NSObject *v26;
  void *v27;
  id v28;
  id v29;
  NSObject *v30;
  void *v31;
  id v32;
  uint64_t (*v33)(uint64_t, uint64_t);
  id v34;
  void *v35;
  void *v36;
  void *v37;
  NSObject *v38;
  NSObject *v39;
  id v40;
  NSObject *v41;
  _BOOL4 v42;
  NSObject *v43;
  NSObject *v44;
  _BOOL4 v45;
  NSObject *v46;
  NSObject *v47;
  _BOOL4 v48;
  id v49;
  void *v50;
  dispatch_group_t group;
  void *v52;
  _QWORD v53[4];
  id v54;
  uint64_t (*v55)(uint64_t, uint64_t);
  id v56;
  _BYTE *v57;
  _QWORD *v58;
  _QWORD v59[4];
  NSObject *v60;
  id v61;
  NSObject *v62;
  id v63;
  _BYTE *v64;
  _QWORD *v65;
  _QWORD v66[4];
  id v67;
  uint64_t (*v68)(uint64_t, uint64_t);
  dispatch_group_t v69;
  id v70;
  _BYTE *v71;
  _QWORD *v72;
  _QWORD v73[4];
  id v74;
  NSObject *v75;
  id v76;
  _QWORD *v77;
  _BYTE *v78;
  _QWORD v79[3];
  char v80;
  _QWORD block[4];
  id v82;
  uint64_t (*v83)(uint64_t, uint64_t);
  id v84;
  _QWORD *v85;
  _QWORD v86[4];
  id v87;
  NPKPaymentWebServiceCompanionTargetDevice *v88;
  id v89;
  id v90;
  _QWORD *v91;
  uint64_t v92;
  int64_t v93;
  _QWORD v94[3];
  char v95;
  uint8_t v96[4];
  id v97;
  __int16 v98;
  uint64_t v99;
  _BYTE buf[24];
  uint64_t (*v101)(uint64_t, uint64_t);
  __int128 v102;
  uint64_t v103;

  v103 = *MEMORY[0x24BDAC8D0];
  v10 = a3;
  v11 = (uint64_t (*)(uint64_t, uint64_t))a5;
  v12 = a6;
  objc_msgSend(MEMORY[0x24BDBCE60], "date");
  v52 = (void *)objc_claimAutoreleasedReturnValue();
  pk_Payment_log();
  v13 = objc_claimAutoreleasedReturnValue();
  v14 = os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT);

  if (v14)
  {
    pk_Payment_log();
    v15 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
    {
      v16 = (void *)MEMORY[0x2199B6780](v12);
      *(_DWORD *)buf = 138413058;
      *(_QWORD *)&buf[4] = v52;
      *(_WORD *)&buf[12] = 2048;
      *(_QWORD *)&buf[14] = a4;
      *(_WORD *)&buf[22] = 2112;
      v101 = v11;
      LOWORD(v102) = 2112;
      *(_QWORD *)((char *)&v102 + 2) = v16;
      _os_log_impl(&dword_213518000, v15, OS_LOG_TYPE_DEFAULT, "Notice: Target device (%@) - present standalone transaction %lu for pass unique ID %@ with completion %@", buf, 0x2Au);

    }
  }
  if (!NPKPairedOrPairingDeviceIsTinker())
  {
    if (!-[NPKPaymentWebServiceCompanionTargetDevice _isUWBSubcredentialProvisioningSupported](self, "_isUWBSubcredentialProvisioningSupported"))
    {
      pk_Payment_log();
      v41 = objc_claimAutoreleasedReturnValue();
      v42 = os_log_type_enabled(v41, OS_LOG_TYPE_DEFAULT);

      if (v42)
      {
        pk_Payment_log();
        v43 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v43, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)buf = 138412546;
          *(_QWORD *)&buf[4] = v52;
          *(_WORD *)&buf[12] = 2112;
          *(_QWORD *)&buf[14] = v11;
          _os_log_impl(&dword_213518000, v43, OS_LOG_TYPE_DEFAULT, "Notice: Target device (%@) - will not present standalone transaction for pass %@; watch is not on supported software.",
            buf,
            0x16u);
        }

      }
      if (v12)
        goto LABEL_29;
      goto LABEL_30;
    }
    if (!-[NPKPaymentWebServiceCompanionTargetDevice _deviceIsConnected](self, "_deviceIsConnected"))
    {
      pk_Payment_log();
      v44 = objc_claimAutoreleasedReturnValue();
      v45 = os_log_type_enabled(v44, OS_LOG_TYPE_DEFAULT);

      if (v45)
      {
        pk_Payment_log();
        v46 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v46, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)buf = 138412546;
          *(_QWORD *)&buf[4] = v52;
          *(_WORD *)&buf[12] = 2112;
          *(_QWORD *)&buf[14] = v11;
          _os_log_impl(&dword_213518000, v46, OS_LOG_TYPE_DEFAULT, "Notice: Target device (%@) - will not present standalone transaction for pass %@; watch is not immediately reachable.",
            buf,
            0x16u);
        }

      }
      if (v12)
        goto LABEL_29;
      goto LABEL_30;
    }
    v94[0] = 0;
    v94[1] = v94;
    v94[2] = 0x2020000000;
    v95 = 0;
    v86[0] = MEMORY[0x24BDAC760];
    v86[1] = 3221225472;
    v86[2] = __127__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_presentStandaloneTransaction_forPassUniqueIdentifier_completion___block_invoke;
    v86[3] = &unk_24CFED9B0;
    v91 = v94;
    v20 = v52;
    v92 = 0x3FF0000000000000;
    v87 = v20;
    v88 = self;
    v89 = v10;
    v93 = a4;
    v90 = v12;
    v21 = (void *)MEMORY[0x2199B6780](v86);
    v22 = dispatch_time(0, 1000000000);
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 3221225472;
    block[2] = __127__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_presentStandaloneTransaction_forPassUniqueIdentifier_completion___block_invoke_3;
    block[3] = &unk_24CFED9D8;
    v23 = v20;
    v82 = v23;
    v24 = v11;
    v83 = v24;
    v85 = v94;
    v25 = v21;
    v84 = v25;
    dispatch_after(v22, MEMORY[0x24BDAC9B8], block);
    v26 = dispatch_group_create();
    v79[0] = 0;
    v79[1] = v79;
    v79[2] = 0x2020000000;
    v80 = 0;
    *(_QWORD *)buf = 0;
    *(_QWORD *)&buf[8] = buf;
    *(_QWORD *)&buf[16] = 0x3032000000;
    v101 = __Block_byref_object_copy__23;
    *(_QWORD *)&v102 = __Block_byref_object_dispose__23;
    *((_QWORD *)&v102 + 1) = 0;
    dispatch_group_enter(v26);
    -[NPKPaymentWebServiceCompanionTargetDevice passcodeConnection](self, "passcodeConnection");
    v27 = (void *)objc_claimAutoreleasedReturnValue();
    v73[0] = MEMORY[0x24BDAC760];
    v73[1] = 3221225472;
    v73[2] = __127__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_presentStandaloneTransaction_forPassUniqueIdentifier_completion___block_invoke_677;
    v73[3] = &unk_24CFEDA00;
    v28 = v23;
    v74 = v28;
    v77 = v79;
    v29 = v25;
    v76 = v29;
    v78 = buf;
    v30 = v26;
    v75 = v30;
    objc_msgSend(v27, "getRemoteDeviceState:", v73);

    dispatch_group_enter(v30);
    -[NPKPaymentWebServiceCompanionTargetDevice companionAgentConnection](self, "companionAgentConnection");
    v31 = (void *)objc_claimAutoreleasedReturnValue();
    v66[0] = MEMORY[0x24BDAC760];
    v66[1] = 3221225472;
    v66[2] = __127__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_presentStandaloneTransaction_forPassUniqueIdentifier_completion___block_invoke_679;
    v66[3] = &unk_24CFEDA28;
    v32 = v28;
    v67 = v32;
    v33 = v24;
    v68 = v33;
    v71 = buf;
    v72 = v79;
    v34 = v29;
    v70 = v34;
    group = v30;
    v69 = group;
    objc_msgSend(v31, "paymentPassWithUniqueID:synchronous:reply:", v33, 0, v66);

    v49 = objc_alloc_init(MEMORY[0x24BE6EC00]);
    objc_msgSend(v49, "passWithUniqueID:", v33);
    v50 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v50, "secureElementPass");
    v35 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v35, "pairedTerminalIdentifier");
    v36 = (void *)objc_claimAutoreleasedReturnValue();

    if (v36)
    {
      dispatch_group_enter(group);
      -[NPKPaymentWebServiceCompanionTargetDevice companionAgentConnection](self, "companionAgentConnection");
      v37 = (void *)objc_claimAutoreleasedReturnValue();
      v59[0] = MEMORY[0x24BDAC760];
      v59[1] = 3221225472;
      v59[2] = __127__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_presentStandaloneTransaction_forPassUniqueIdentifier_completion___block_invoke_680;
      v59[3] = &unk_24CFEDA28;
      v60 = v32;
      v61 = v36;
      v64 = buf;
      v65 = v79;
      v63 = v34;
      v62 = group;
      objc_msgSend(v37, "paymentPassWithPairedTerminalIdentifier:completion:", v61, v59);

      v38 = v60;
    }
    else
    {
      pk_Payment_log();
      v47 = objc_claimAutoreleasedReturnValue();
      v48 = os_log_type_enabled(v47, OS_LOG_TYPE_DEFAULT);

      if (!v48)
        goto LABEL_17;
      pk_Payment_log();
      v38 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v38, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)v96 = 138412546;
        v97 = v32;
        v98 = 2112;
        v99 = 0;
        _os_log_impl(&dword_213518000, v38, OS_LOG_TYPE_DEFAULT, "Notice: Target device (%@) - present standalone transaction not considering paired reader identifier matches as no pairedReaderID was found on companion pass. %@", v96, 0x16u);
      }
    }

LABEL_17:
    -[NPKPaymentWebServiceCompanionTargetDevice responseQueue](self, "responseQueue");
    v39 = objc_claimAutoreleasedReturnValue();
    v53[0] = MEMORY[0x24BDAC760];
    v53[1] = 3221225472;
    v53[2] = __127__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_presentStandaloneTransaction_forPassUniqueIdentifier_completion___block_invoke_681;
    v53[3] = &unk_24CFEDA50;
    v57 = buf;
    v58 = v79;
    v54 = v32;
    v55 = v33;
    v56 = v34;
    v40 = v34;
    dispatch_group_notify(group, v39, v53);

    _Block_object_dispose(buf, 8);
    _Block_object_dispose(v79, 8);

    _Block_object_dispose(v94, 8);
    goto LABEL_30;
  }
  pk_Payment_log();
  v17 = objc_claimAutoreleasedReturnValue();
  v18 = os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT);

  if (v18)
  {
    pk_Payment_log();
    v19 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl(&dword_213518000, v19, OS_LOG_TYPE_DEFAULT, "Notice: Paired device is tinker; we won't forward to tinker devices.",
        buf,
        2u);
    }

  }
  if (v12)
LABEL_29:
    (*((void (**)(id, _QWORD))v12 + 2))(v12, 0);
LABEL_30:

}

void __127__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_presentStandaloneTransaction_forPassUniqueIdentifier_completion___block_invoke(uint64_t a1, int a2, void *a3)
{
  id v5;
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v12[4];
  id v13;

  v5 = a3;
  v6 = *(_QWORD *)(*(_QWORD *)(a1 + 64) + 8);
  if (!*(_BYTE *)(v6 + 24))
  {
    *(_BYTE *)(v6 + 24) = 1;
    if (a2)
    {
      objc_msgSend(*(id *)(a1 + 32), "dateByAddingTimeInterval:", *(double *)(a1 + 72));
      v7 = (void *)objc_claimAutoreleasedReturnValue();
      v8 = *(void **)(a1 + 40);
      v9 = *(_QWORD *)(a1 + 48);
      v10 = *(_QWORD *)(a1 + 80);
      v12[0] = MEMORY[0x24BDAC760];
      v12[1] = 3221225472;
      v12[2] = __127__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_presentStandaloneTransaction_forPassUniqueIdentifier_completion___block_invoke_2;
      v12[3] = &unk_24CFE9328;
      v13 = *(id *)(a1 + 56);
      objc_msgSend(v8, "_paymentWebService:presentStandaloneTransaction:forPassUniqueIdentifier:validUntilDate:completion:", v9, v10, v5, v7, v12);

    }
    else
    {
      v11 = *(_QWORD *)(a1 + 56);
      if (v11)
        (*(void (**)(uint64_t, _QWORD))(v11 + 16))(v11, 0);
    }
  }

}

uint64_t __127__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_presentStandaloneTransaction_forPassUniqueIdentifier_completion___block_invoke_2(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 32);
  if (result)
    return (*(uint64_t (**)(void))(result + 16))();
  return result;
}

uint64_t __127__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_presentStandaloneTransaction_forPassUniqueIdentifier_completion___block_invoke_3(_QWORD *a1)
{
  NSObject *v2;
  _BOOL4 v3;
  NSObject *v4;
  uint64_t v5;
  uint64_t v6;
  const __CFString *v7;
  int v9;
  uint64_t v10;
  __int16 v11;
  uint64_t v12;
  __int16 v13;
  const __CFString *v14;
  uint64_t v15;

  v15 = *MEMORY[0x24BDAC8D0];
  pk_Payment_log();
  v2 = objc_claimAutoreleasedReturnValue();
  v3 = os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT);

  if (v3)
  {
    pk_Payment_log();
    v4 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      v5 = a1[4];
      v6 = a1[5];
      if (*(_BYTE *)(*(_QWORD *)(a1[7] + 8) + 24))
        v7 = CFSTR("NO");
      else
        v7 = CFSTR("YES");
      v9 = 138412802;
      v10 = v5;
      v11 = 2112;
      v12 = v6;
      v13 = 2112;
      v14 = v7;
      _os_log_impl(&dword_213518000, v4, OS_LOG_TYPE_DEFAULT, "Notice: Target device (%@) - firing standalone transaction timer for pass unique id: %@. Is result pending? %@", (uint8_t *)&v9, 0x20u);
    }

  }
  return (*(uint64_t (**)(void))(a1[6] + 16))();
}

void __127__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_presentStandaloneTransaction_forPassUniqueIdentifier_completion___block_invoke_677(uint64_t a1, int a2, int a3, int a4, void *a5)
{
  id v9;
  NSObject *v10;
  _BOOL4 v11;
  NSObject *v12;
  uint64_t v13;
  void (*v14)(void);
  int v15;
  uint64_t v16;
  __int16 v17;
  int v18;
  __int16 v19;
  int v20;
  __int16 v21;
  int v22;
  __int16 v23;
  id v24;
  uint64_t v25;

  v25 = *MEMORY[0x24BDAC8D0];
  v9 = a5;
  pk_Payment_log();
  v10 = objc_claimAutoreleasedReturnValue();
  v11 = os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT);

  if (v11)
  {
    pk_Payment_log();
    v12 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
    {
      v13 = *(_QWORD *)(a1 + 32);
      v15 = 138413314;
      v16 = v13;
      v17 = 1024;
      v18 = a2;
      v19 = 1024;
      v20 = a3;
      v21 = 1024;
      v22 = a4;
      v23 = 2112;
      v24 = v9;
      _os_log_impl(&dword_213518000, v12, OS_LOG_TYPE_DEFAULT, "Notice: Target device (%@) - present standalone transaction got remote device state hasPasscodeSet:%d\nisPasscodeLocked:%d\nisUnlockOnly:%d\nerror:%@", (uint8_t *)&v15, 0x28u);
    }

  }
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 24) = a2 & ~(_BYTE)a3;
  if (!*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 24))
  {
    v14 = *(void (**)(void))(*(_QWORD *)(a1 + 48) + 16);
    goto LABEL_9;
  }
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 40))
  {
    v14 = *(void (**)(void))(*(_QWORD *)(a1 + 48) + 16);
LABEL_9:
    v14();
  }
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 40));

}

void __127__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_presentStandaloneTransaction_forPassUniqueIdentifier_completion___block_invoke_679(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  int IsPersonalized;
  NSObject *v7;
  _BOOL4 v8;
  NSObject *v9;
  uint64_t v10;
  uint64_t v11;
  const __CFString *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  int v16;
  uint64_t v17;
  __int16 v18;
  uint64_t v19;
  __int16 v20;
  const __CFString *v21;
  uint64_t v22;

  v22 = *MEMORY[0x24BDAC8D0];
  v3 = a2;
  v4 = v3;
  if (v3)
  {
    objc_msgSend(v3, "devicePrimaryPaymentApplication");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "state");
    IsPersonalized = PKPaymentApplicationStateIsPersonalized();

    pk_Payment_log();
    v7 = objc_claimAutoreleasedReturnValue();
    v8 = os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT);

    if (v8)
    {
      pk_Payment_log();
      v9 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
      {
        v10 = *(_QWORD *)(a1 + 32);
        v11 = *(_QWORD *)(a1 + 40);
        v12 = CFSTR("YES");
        if (!IsPersonalized)
          v12 = CFSTR("NO");
        v16 = 138412802;
        v17 = v10;
        v18 = 2112;
        v19 = v11;
        v20 = 2112;
        v21 = v12;
        _os_log_impl(&dword_213518000, v9, OS_LOG_TYPE_DEFAULT, "Notice: Target device (%@) - present standalone transaction got pass unique ID matching %@. Is personalized? %@", (uint8_t *)&v16, 0x20u);
      }

    }
    if (IsPersonalized)
    {
      objc_msgSend(v4, "uniqueID");
      v13 = objc_claimAutoreleasedReturnValue();
      v14 = *(_QWORD *)(*(_QWORD *)(a1 + 64) + 8);
      v15 = *(void **)(v14 + 40);
      *(_QWORD *)(v14 + 40) = v13;

      if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 72) + 8) + 24))
        (*(void (**)(void))(*(_QWORD *)(a1 + 56) + 16))();
    }
  }
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 48));

}

void __127__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_presentStandaloneTransaction_forPassUniqueIdentifier_completion___block_invoke_680(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  int IsPersonalized;
  NSObject *v7;
  _BOOL4 v8;
  NSObject *v9;
  uint64_t v10;
  uint64_t v11;
  const __CFString *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  int v16;
  uint64_t v17;
  __int16 v18;
  uint64_t v19;
  __int16 v20;
  const __CFString *v21;
  uint64_t v22;

  v22 = *MEMORY[0x24BDAC8D0];
  v3 = a2;
  v4 = v3;
  if (v3)
  {
    objc_msgSend(v3, "devicePrimaryPaymentApplication");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "state");
    IsPersonalized = PKPaymentApplicationStateIsPersonalized();

    pk_Payment_log();
    v7 = objc_claimAutoreleasedReturnValue();
    v8 = os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT);

    if (v8)
    {
      pk_Payment_log();
      v9 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
      {
        v10 = *(_QWORD *)(a1 + 32);
        v11 = *(_QWORD *)(a1 + 40);
        v12 = CFSTR("YES");
        if (!IsPersonalized)
          v12 = CFSTR("NO");
        v16 = 138412802;
        v17 = v10;
        v18 = 2112;
        v19 = v11;
        v20 = 2112;
        v21 = v12;
        _os_log_impl(&dword_213518000, v9, OS_LOG_TYPE_DEFAULT, "Notice: Target device (%@) - present standalone transaction got paired reader ID matching %@. Is personalized? %@", (uint8_t *)&v16, 0x20u);
      }

    }
    if (IsPersonalized)
    {
      objc_msgSend(v4, "uniqueID");
      v13 = objc_claimAutoreleasedReturnValue();
      v14 = *(_QWORD *)(*(_QWORD *)(a1 + 64) + 8);
      v15 = *(void **)(v14 + 40);
      *(_QWORD *)(v14 + 40) = v13;

      if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 72) + 8) + 24))
        (*(void (**)(void))(*(_QWORD *)(a1 + 56) + 16))();
    }
  }
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 48));

}

uint64_t __127__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_presentStandaloneTransaction_forPassUniqueIdentifier_completion___block_invoke_681(_QWORD *a1)
{
  uint64_t v2;
  BOOL v3;
  int v4;
  NSObject *v5;
  _BOOL4 v6;
  NSObject *v7;
  uint64_t v8;
  uint64_t v9;
  const __CFString *v10;
  const __CFString *v11;
  const __CFString *v12;
  int v14;
  uint64_t v15;
  __int16 v16;
  uint64_t v17;
  __int16 v18;
  const __CFString *v19;
  __int16 v20;
  const __CFString *v21;
  __int16 v22;
  const __CFString *v23;
  uint64_t v24;

  v24 = *MEMORY[0x24BDAC8D0];
  v2 = *(_QWORD *)(*(_QWORD *)(a1[7] + 8) + 40);
  if (*(_BYTE *)(*(_QWORD *)(a1[8] + 8) + 24))
    v3 = v2 == 0;
  else
    v3 = 1;
  v4 = !v3;
  pk_Payment_log();
  v5 = objc_claimAutoreleasedReturnValue();
  v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    pk_Payment_log();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      v8 = a1[4];
      v9 = a1[5];
      v10 = CFSTR("NO");
      if (v4)
        v11 = CFSTR("YES");
      else
        v11 = CFSTR("NO");
      if (*(_BYTE *)(*(_QWORD *)(a1[8] + 8) + 24))
        v12 = CFSTR("YES");
      else
        v12 = CFSTR("NO");
      if (v2)
        v10 = CFSTR("YES");
      v14 = 138413314;
      v15 = v8;
      v16 = 2112;
      v17 = v9;
      v18 = 2112;
      v19 = v11;
      v20 = 2112;
      v21 = v12;
      v22 = 2112;
      v23 = v10;
      _os_log_impl(&dword_213518000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Target device (%@) - present standalone transaction request for pass %@ yielded result: %@. isRemoteDeviceUnlocked: %@; watchHasMatchingPass: %@",
        (uint8_t *)&v14,
        0x34u);
    }

  }
  return (*(uint64_t (**)(void))(a1[6] + 16))();
}

- (void)_paymentWebService:(id)a3 presentStandaloneTransaction:(int64_t)a4 forPassUniqueIdentifier:(id)a5 validUntilDate:(id)a6 completion:(id)a7
{
  char *v11;
  id v12;
  id v13;
  NSObject *v14;
  _BOOL4 v15;
  NSObject *v16;
  NSObject *v17;
  _BOOL4 v18;
  NSObject *v19;
  NSObject *v20;
  id v21;
  id v22;
  char *v23;
  _QWORD block[4];
  char *v25;
  id v26;
  NPKPaymentWebServiceCompanionTargetDevice *v27;
  id v28;
  int64_t v29;
  uint8_t buf[4];
  const char *v31;
  __int16 v32;
  const char *v33;
  __int16 v34;
  uint64_t v35;
  uint64_t v36;

  v36 = *MEMORY[0x24BDAC8D0];
  v11 = (char *)a5;
  v12 = a6;
  v13 = a7;
  if (!-[NPKPaymentWebServiceCompanionTargetDevice _isUWBSubcredentialProvisioningSupported](self, "_isUWBSubcredentialProvisioningSupported"))
  {
    pk_General_log();
    v14 = objc_claimAutoreleasedReturnValue();
    v15 = os_log_type_enabled(v14, OS_LOG_TYPE_ERROR);

    if (v15)
    {
      pk_General_log();
      v16 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 136446722;
        v31 = "-[NPKPaymentWebServiceCompanionTargetDevice _paymentWebService:presentStandaloneTransaction:forPassUniqueI"
              "dentifier:validUntilDate:completion:]";
        v32 = 2082;
        v33 = "/Library/Caches/com.apple.xbs/Sources/NanoPassbook_Frameworks/NanoPassKit/NPKPaymentWebServiceCompanionTargetDevice.m";
        v34 = 2048;
        v35 = 7033;
        _os_log_impl(&dword_213518000, v16, OS_LOG_TYPE_ERROR, "Error: *** NPKAssertion failure in %{public}s, %{public}s:%ld (reason: We should only invoke this method after verifying the watch is on supported software.)", buf, 0x20u);
      }

    }
    _NPKAssertAbort();
  }
  pk_Payment_log();
  v17 = objc_claimAutoreleasedReturnValue();
  v18 = os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT);

  if (v18)
  {
    pk_Payment_log();
    v19 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 134218242;
      v31 = (const char *)a4;
      v32 = 2112;
      v33 = v11;
      _os_log_impl(&dword_213518000, v19, OS_LOG_TYPE_DEFAULT, "Notice: Target device - sending presentStandaloneTransaction request for transactionType: %ld passUniqueIdentifier: %@", buf, 0x16u);
    }

  }
  -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
  v20 = objc_claimAutoreleasedReturnValue();
  block[0] = MEMORY[0x24BDAC760];
  block[1] = 3221225472;
  block[2] = __143__NPKPaymentWebServiceCompanionTargetDevice__paymentWebService_presentStandaloneTransaction_forPassUniqueIdentifier_validUntilDate_completion___block_invoke;
  block[3] = &unk_24CFEDA78;
  v28 = v13;
  v29 = a4;
  v25 = v11;
  v26 = v12;
  v27 = self;
  v21 = v13;
  v22 = v12;
  v23 = v11;
  dispatch_sync(v20, block);

}

void __143__NPKPaymentWebServiceCompanionTargetDevice__paymentWebService_presentStandaloneTransaction_forPassUniqueIdentifier_validUntilDate_completion___block_invoke(uint64_t a1)
{
  NPKProtoPresentStandaloneTransactionRequest *v2;
  id v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  NSObject *v9;
  void *v10;
  void *v11;
  void *v12;
  NSObject *v13;
  _BOOL4 v14;
  const char *v15;
  NSObject *v16;
  os_log_type_t v17;
  uint32_t v18;
  NSObject *v19;
  _BOOL4 v20;
  _QWORD v21[4];
  id v22;
  uint8_t buf[4];
  void *v24;
  __int16 v25;
  int v26;
  uint64_t v27;
  _QWORD v28[2];

  v28[1] = *MEMORY[0x24BDAC8D0];
  v2 = objc_alloc_init(NPKProtoPresentStandaloneTransactionRequest);
  -[NPKProtoPresentStandaloneTransactionRequest setTransactionType:](v2, "setTransactionType:", *(unsigned int *)(a1 + 64));
  -[NPKProtoPresentStandaloneTransactionRequest setWatchPassUniqueID:](v2, "setWatchPassUniqueID:", *(_QWORD *)(a1 + 32));
  objc_msgSend(*(id *)(a1 + 40), "timeIntervalSince1970");
  -[NPKProtoPresentStandaloneTransactionRequest setValidUntilEpochTimeInterval:](v2, "setValidUntilEpochTimeInterval:");
  v3 = objc_alloc(MEMORY[0x24BE4FE40]);
  -[NPKProtoPresentStandaloneTransactionRequest data](v2, "data");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = (void *)objc_msgSend(v3, "initWithProtobufData:type:isResponse:", v4, 103, 0);

  v6 = *(void **)(a1 + 48);
  v27 = *MEMORY[0x24BE4FB30];
  v28[0] = &unk_24D056700;
  objc_msgSend(MEMORY[0x24BDBCE70], "dictionaryWithObjects:forKeys:count:", v28, &v27, 1);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "_sendProtobuf:responseExpected:extraOptions:priority:", v5, 1, v7, 300);
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  if (v8)
  {
    if (*(_QWORD *)(a1 + 56))
    {
      v9 = MEMORY[0x2199B6780]();
      v21[0] = MEMORY[0x24BDAC760];
      v21[1] = 3221225472;
      v21[2] = __143__NPKPaymentWebServiceCompanionTargetDevice__paymentWebService_presentStandaloneTransaction_forPassUniqueIdentifier_validUntilDate_completion___block_invoke_2;
      v21[3] = &unk_24CFE7B80;
      v22 = *(id *)(a1 + 56);
      v10 = (void *)MEMORY[0x2199B6780](v21);
      v11 = *(void **)(a1 + 48);
      v12 = (void *)MEMORY[0x2199B6780](v9);
      objc_msgSend(v11, "_trackOutstandingRequestWithMessageIdentifier:completionHandler:errorHandler:", v8, v12, v10);

LABEL_11:
      goto LABEL_12;
    }
    pk_Payment_log();
    v19 = objc_claimAutoreleasedReturnValue();
    v20 = os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT);

    if (v20)
    {
      pk_Payment_log();
      v9 = objc_claimAutoreleasedReturnValue();
      if (!os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
        goto LABEL_11;
      *(_DWORD *)buf = 138412290;
      v24 = v8;
      v15 = "Warning: No response expected for message with identifier %@";
      v16 = v9;
      v17 = OS_LOG_TYPE_DEFAULT;
      v18 = 12;
      goto LABEL_10;
    }
  }
  else
  {
    pk_Payment_log();
    v13 = objc_claimAutoreleasedReturnValue();
    v14 = os_log_type_enabled(v13, OS_LOG_TYPE_ERROR);

    if (v14)
    {
      pk_Payment_log();
      v9 = objc_claimAutoreleasedReturnValue();
      if (!os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
        goto LABEL_11;
      *(_DWORD *)buf = 138412546;
      v24 = v5;
      v25 = 1024;
      v26 = objc_msgSend(v5, "type");
      v15 = "Error: No message identifier for protobuf %@ with type %hu";
      v16 = v9;
      v17 = OS_LOG_TYPE_ERROR;
      v18 = 18;
LABEL_10:
      _os_log_impl(&dword_213518000, v16, v17, v15, buf, v18);
      goto LABEL_11;
    }
  }
LABEL_12:

}

uint64_t __143__NPKPaymentWebServiceCompanionTargetDevice__paymentWebService_presentStandaloneTransaction_forPassUniqueIdentifier_validUntilDate_completion___block_invoke_2(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(_QWORD, BOOL))(*(_QWORD *)(a1 + 32) + 16))(*(_QWORD *)(a1 + 32), a2 == 0);
}

- (void)presentStandaloneTransactionForPassUniqueIdentifierResponse:(id)a3
{
  id v4;
  NSObject *v5;
  _BOOL4 v6;
  NSObject *v7;
  void *v8;
  void *v9;
  void *v10;
  NSObject *v11;
  NSObject *v12;
  _BOOL4 v13;
  NSObject *v14;
  uint64_t v15;
  uint8_t v16[8];
  _QWORD block[5];
  id v18;
  id v19;
  __int128 *p_buf;
  uint64_t *v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  char v25;
  __int128 buf;
  uint64_t v27;
  uint64_t (*v28)(uint64_t, uint64_t);
  void (*v29)(uint64_t);
  id v30;
  uint64_t v31;

  v31 = *MEMORY[0x24BDAC8D0];
  v4 = a3;
  pk_Payment_log();
  v5 = objc_claimAutoreleasedReturnValue();
  v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    pk_Payment_log();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend(v4, "npkDescription");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      LODWORD(buf) = 138412290;
      *(_QWORD *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_213518000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Target presentStandaloneTransactionForPassUniqueIdentifierResponse: incoming protobuf %@", (uint8_t *)&buf, 0xCu);

    }
  }
  objc_msgSend(v4, "context");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "incomingResponseIdentifier");
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  *(_QWORD *)&buf = 0;
  *((_QWORD *)&buf + 1) = &buf;
  v27 = 0x3032000000;
  v28 = __Block_byref_object_copy__342;
  v29 = __Block_byref_object_dispose__343;
  v30 = 0;
  v22 = 0;
  v23 = &v22;
  v24 = 0x2020000000;
  v25 = 0;
  if (v10)
  {
    -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
    v11 = objc_claimAutoreleasedReturnValue();
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 3221225472;
    block[2] = __105__NPKPaymentWebServiceCompanionTargetDevice_presentStandaloneTransactionForPassUniqueIdentifierResponse___block_invoke;
    block[3] = &unk_24CFED0D8;
    block[4] = self;
    v18 = v10;
    v19 = v4;
    p_buf = &buf;
    v21 = &v22;
    dispatch_sync(v11, block);

  }
  else
  {
    pk_Payment_log();
    v12 = objc_claimAutoreleasedReturnValue();
    v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      pk_Payment_log();
      v14 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)v16 = 0;
        _os_log_impl(&dword_213518000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v16, 2u);
      }

    }
  }
  v15 = *(_QWORD *)(*((_QWORD *)&buf + 1) + 40);
  if (v15)
    (*(void (**)(uint64_t, _QWORD))(v15 + 16))(v15, *((unsigned __int8 *)v23 + 24));
  _Block_object_dispose(&v22, 8);
  _Block_object_dispose(&buf, 8);

}

void __105__NPKPaymentWebServiceCompanionTargetDevice_presentStandaloneTransactionForPassUniqueIdentifierResponse___block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;
  NPKProtoPresentStandaloneTransactionResponse *v4;
  void *v5;
  NPKProtoPresentStandaloneTransactionResponse *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  NSObject *v11;
  _BOOL4 v12;
  NSObject *v13;
  uint8_t v14[16];

  objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "objectForKey:", *(_QWORD *)(a1 + 40));
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  if (v3)
  {
    v4 = [NPKProtoPresentStandaloneTransactionResponse alloc];
    objc_msgSend(*(id *)(a1 + 48), "data");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    v6 = -[NPKProtoPresentStandaloneTransactionResponse initWithData:](v4, "initWithData:", v5);

    objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "removeObjectForKey:", *(_QWORD *)(a1 + 40));

    objc_msgSend(v3, "completionHandler");
    v8 = objc_claimAutoreleasedReturnValue();
    v9 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
    v10 = *(void **)(v9 + 40);
    *(_QWORD *)(v9 + 40) = v8;

    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 24) = -[NPKProtoPresentStandaloneTransactionResponse success](v6, "success");
  }
  else
  {
    pk_Payment_log();
    v11 = objc_claimAutoreleasedReturnValue();
    v12 = os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT);

    if (v12)
    {
      pk_Payment_log();
      v13 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)v14 = 0;
        _os_log_impl(&dword_213518000, v13, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", v14, 2u);
      }

    }
  }

}

- (void)paymentWebServiceOwnershipTokenResponse:(id)a3
{
  id v4;
  NSObject *v5;
  _BOOL4 v6;
  NSObject *v7;
  void *v8;
  void *v9;
  void *v10;
  NSObject *v11;
  NSObject *v12;
  _BOOL4 v13;
  NSObject *v14;
  uint64_t v15;
  _QWORD v16[5];
  id v17;
  id v18;
  __int128 *p_buf;
  _QWORD *v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t (*v25)(uint64_t, uint64_t);
  void (*v26)(uint64_t);
  id v27;
  _QWORD v28[5];
  id v29;
  uint8_t v30[4];
  const char *v31;
  __int128 buf;
  uint64_t v33;
  uint64_t (*v34)(uint64_t, uint64_t);
  void (*v35)(uint64_t);
  id v36;
  uint64_t v37;

  v37 = *MEMORY[0x24BDAC8D0];
  v4 = a3;
  pk_Payment_log();
  v5 = objc_claimAutoreleasedReturnValue();
  v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    pk_Payment_log();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend(v4, "npkDescription");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      LODWORD(buf) = 138412290;
      *(_QWORD *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_213518000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Payment web service OwnershipToken token request: incoming protobuf %@", (uint8_t *)&buf, 0xCu);

    }
  }
  objc_msgSend(v4, "context");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "incomingResponseIdentifier");
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  *(_QWORD *)&buf = 0;
  *((_QWORD *)&buf + 1) = &buf;
  v33 = 0x3032000000;
  v34 = __Block_byref_object_copy__342;
  v35 = __Block_byref_object_dispose__343;
  v36 = 0;
  v28[0] = 0;
  v28[1] = v28;
  v28[2] = 0x3032000000;
  v28[3] = __Block_byref_object_copy__23;
  v28[4] = __Block_byref_object_dispose__23;
  v29 = 0;
  v22 = 0;
  v23 = &v22;
  v24 = 0x3032000000;
  v25 = __Block_byref_object_copy__23;
  v26 = __Block_byref_object_dispose__23;
  v27 = 0;
  if (v10)
  {
    -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
    v11 = objc_claimAutoreleasedReturnValue();
    v16[0] = MEMORY[0x24BDAC760];
    v16[1] = 3221225472;
    v16[2] = __85__NPKPaymentWebServiceCompanionTargetDevice_paymentWebServiceOwnershipTokenResponse___block_invoke;
    v16[3] = &unk_24CFEDAA0;
    v16[4] = self;
    v17 = v10;
    p_buf = &buf;
    v18 = v4;
    v20 = v28;
    v21 = &v22;
    dispatch_sync(v11, v16);

  }
  else
  {
    pk_Payment_log();
    v12 = objc_claimAutoreleasedReturnValue();
    v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      pk_Payment_log();
      v14 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)v30 = 136315138;
        v31 = "-[NPKPaymentWebServiceCompanionTargetDevice paymentWebServiceOwnershipTokenResponse:]";
        _os_log_impl(&dword_213518000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response, %s", v30, 0xCu);
      }

    }
  }
  v15 = *(_QWORD *)(*((_QWORD *)&buf + 1) + 40);
  if (v15)
    (*(void (**)(uint64_t, uint64_t))(v15 + 16))(v15, v23[5]);
  _Block_object_dispose(&v22, 8);

  _Block_object_dispose(v28, 8);
  _Block_object_dispose(&buf, 8);

}

void __85__NPKPaymentWebServiceCompanionTargetDevice_paymentWebServiceOwnershipTokenResponse___block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  NPKProtoOwnershipTokenResponse *v8;
  void *v9;
  NSObject *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  NSObject *v17;
  _BOOL4 v18;
  NSObject *v19;
  uint64_t v20;
  const char *v21;
  uint64_t v22;
  NSObject *v23;
  _BOOL4 v24;
  int v25;
  const char *v26;
  __int16 v27;
  _BOOL4 v28;
  uint64_t v29;

  v29 = *MEMORY[0x24BDAC8D0];
  objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "objectForKey:", *(_QWORD *)(a1 + 40));
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v3, "completionHandler");
  v4 = objc_claimAutoreleasedReturnValue();
  v5 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
  v6 = *(void **)(v5 + 40);
  *(_QWORD *)(v5 + 40) = v4;

  if (v3)
  {
    objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "removeObjectForKey:", *(_QWORD *)(a1 + 40));

    v8 = [NPKProtoOwnershipTokenResponse alloc];
    objc_msgSend(*(id *)(a1 + 48), "data");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    v10 = -[NPKProtoOwnershipTokenResponse initWithData:](v8, "initWithData:", v9);

    -[NSObject identifier](v10, "identifier");
    v11 = objc_claimAutoreleasedReturnValue();
    v12 = *(_QWORD *)(*(_QWORD *)(a1 + 64) + 8);
    v13 = *(void **)(v12 + 40);
    *(_QWORD *)(v12 + 40) = v11;

    -[NSObject token](v10, "token");
    v14 = objc_claimAutoreleasedReturnValue();
    v15 = *(_QWORD *)(*(_QWORD *)(a1 + 72) + 8);
    v16 = *(void **)(v15 + 40);
    *(_QWORD *)(v15 + 40) = v14;

    pk_Payment_log();
    v17 = objc_claimAutoreleasedReturnValue();
    v18 = os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT);

    if (v18)
    {
      pk_Payment_log();
      v19 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT))
      {
        v20 = *(_QWORD *)(a1 + 72);
        v21 = *(const char **)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 40);
        v22 = objc_msgSend(*(id *)(*(_QWORD *)(v20 + 8) + 40), "length");
        v25 = 138412546;
        v26 = v21;
        v27 = 1024;
        v28 = v22 != 0;
        _os_log_impl(&dword_213518000, v19, OS_LOG_TYPE_DEFAULT, "Notice: Finish Payment web service OwnershipToken token request with identifier:%@ hasToken:%d", (uint8_t *)&v25, 0x12u);
      }

    }
LABEL_9:

    goto LABEL_10;
  }
  pk_Payment_log();
  v23 = objc_claimAutoreleasedReturnValue();
  v24 = os_log_type_enabled(v23, OS_LOG_TYPE_DEFAULT);

  if (v24)
  {
    pk_Payment_log();
    v10 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
    {
      v25 = 136315138;
      v26 = "-[NPKPaymentWebServiceCompanionTargetDevice paymentWebServiceOwnershipTokenResponse:]_block_invoke";
      _os_log_impl(&dword_213518000, v10, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler, %s", (uint8_t *)&v25, 0xCu);
    }
    goto LABEL_9;
  }
LABEL_10:

}

- (void)paymentWebService:(id)a3 passOwnershipTokenWithIdentifier:(id)a4 completion:(id)a5
{
  id v7;
  id v8;
  uint64_t v9;
  id v10;
  void (**v11)(_QWORD, _QWORD);
  void *v12;
  void *v13;
  int v14;
  NSObject *v15;
  NSObject *v16;
  _BOOL4 v17;
  NSObject *v18;
  uint8_t v19[8];
  _QWORD block[4];
  id v21;
  NPKPaymentWebServiceCompanionTargetDevice *v22;
  id v23;
  void (**v24)(_QWORD, _QWORD);
  _QWORD v25[4];
  id v26;

  v7 = a4;
  v8 = a5;
  v9 = MEMORY[0x24BDAC760];
  v25[0] = MEMORY[0x24BDAC760];
  v25[1] = 3221225472;
  v25[2] = __107__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_passOwnershipTokenWithIdentifier_completion___block_invoke;
  v25[3] = &unk_24CFEDAC8;
  v10 = v8;
  v26 = v10;
  v11 = (void (**)(_QWORD, _QWORD))MEMORY[0x2199B6780](v25);
  NPKPairedOrPairingDevice();
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  v13 = (void *)objc_msgSend(objc_alloc(MEMORY[0x24BDD1880]), "initWithUUIDString:", CFSTR("45D167B6-F5A6-469D-A81B-3146DE124929"));
  v14 = objc_msgSend(v12, "supportsCapability:", v13);

  if (v14)
  {
    -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
    v15 = objc_claimAutoreleasedReturnValue();
    block[0] = v9;
    block[1] = 3221225472;
    block[2] = __107__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_passOwnershipTokenWithIdentifier_completion___block_invoke_689;
    block[3] = &unk_24CFEDAF0;
    v21 = v7;
    v22 = self;
    v23 = v10;
    v24 = v11;
    dispatch_async(v15, block);

  }
  else
  {
    pk_Payment_log();
    v16 = objc_claimAutoreleasedReturnValue();
    v17 = os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT);

    if (v17)
    {
      pk_Payment_log();
      v18 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)v19 = 0;
        _os_log_impl(&dword_213518000, v18, OS_LOG_TYPE_DEFAULT, "Notice: Paired device doesn't support Super easy provisioning", v19, 2u);
      }

    }
    v11[2](v11, 0);
  }

}

void __107__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_passOwnershipTokenWithIdentifier_completion___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  _BOOL4 v5;
  NSObject *v6;
  uint64_t v7;
  _DWORD v8[2];
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  v3 = a2;
  pk_Payment_log();
  v4 = objc_claimAutoreleasedReturnValue();
  v5 = os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT);

  if (v5)
  {
    pk_Payment_log();
    v6 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      v8[0] = 67109120;
      v8[1] = v3 != 0;
      _os_log_impl(&dword_213518000, v6, OS_LOG_TYPE_DEFAULT, "Notice: Found ownership token:%d", (uint8_t *)v8, 8u);
    }

  }
  v7 = *(_QWORD *)(a1 + 32);
  if (v7)
    (*(void (**)(uint64_t, id))(v7 + 16))(v7, v3);

}

void __107__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_passOwnershipTokenWithIdentifier_completion___block_invoke_689(uint64_t a1)
{
  NPKProtoOwnershipTokenRequest *v2;
  id v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  NSObject *v10;
  NSObject *v11;
  _BOOL4 v12;
  const char *v13;
  NSObject *v14;
  os_log_type_t v15;
  NSObject *v16;
  _BOOL4 v17;
  _QWORD v18[4];
  NSObject *v19;
  uint8_t buf[4];
  const char *v21;
  __int16 v22;
  void *v23;
  uint64_t v24;

  v24 = *MEMORY[0x24BDAC8D0];
  v2 = objc_alloc_init(NPKProtoOwnershipTokenRequest);
  -[NPKProtoOwnershipTokenRequest setIdentifier:](v2, "setIdentifier:", *(_QWORD *)(a1 + 32));
  v3 = objc_alloc(MEMORY[0x24BE4FE40]);
  -[NPKProtoOwnershipTokenRequest data](v2, "data");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = (void *)objc_msgSend(v3, "initWithProtobufData:type:isResponse:", v4, 119, 0);

  objc_msgSend(*(id *)(a1 + 40), "_sendProtobuf:responseExpected:extraOptions:", v5, 1, 0);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  if (v6)
  {
    if (*(_QWORD *)(a1 + 48))
    {
      v18[0] = MEMORY[0x24BDAC760];
      v18[1] = 3221225472;
      v18[2] = __107__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_passOwnershipTokenWithIdentifier_completion___block_invoke_2;
      v18[3] = &unk_24CFE7B80;
      v19 = *(id *)(a1 + 56);
      v7 = (void *)MEMORY[0x2199B6780](v18);
      v8 = *(void **)(a1 + 40);
      v9 = (void *)MEMORY[0x2199B6780](*(_QWORD *)(a1 + 56));
      objc_msgSend(v8, "_trackOutstandingRequestWithMessageIdentifier:completionHandler:errorHandler:", v6, v9, v7);

      v10 = v19;
LABEL_11:

      goto LABEL_12;
    }
    pk_Payment_log();
    v16 = objc_claimAutoreleasedReturnValue();
    v17 = os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT);

    if (v17)
    {
      pk_Payment_log();
      v10 = objc_claimAutoreleasedReturnValue();
      if (!os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
        goto LABEL_11;
      *(_DWORD *)buf = 136315394;
      v21 = "-[NPKPaymentWebServiceCompanionTargetDevice paymentWebService:passOwnershipTokenWithIdentifier:completion:]_block_invoke";
      v22 = 2112;
      v23 = v6;
      v13 = "Warning: %s No response expected for message with identifier %@";
      v14 = v10;
      v15 = OS_LOG_TYPE_DEFAULT;
      goto LABEL_10;
    }
  }
  else
  {
    pk_Payment_log();
    v11 = objc_claimAutoreleasedReturnValue();
    v12 = os_log_type_enabled(v11, OS_LOG_TYPE_ERROR);

    if (v12)
    {
      pk_Payment_log();
      v10 = objc_claimAutoreleasedReturnValue();
      if (!os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
        goto LABEL_11;
      *(_DWORD *)buf = 136315394;
      v21 = "-[NPKPaymentWebServiceCompanionTargetDevice paymentWebService:passOwnershipTokenWithIdentifier:completion:]_block_invoke";
      v22 = 2112;
      v23 = v5;
      v13 = "Error: %s No message identifier for protobuf %@";
      v14 = v10;
      v15 = OS_LOG_TYPE_ERROR;
LABEL_10:
      _os_log_impl(&dword_213518000, v14, v15, v13, buf, 0x16u);
      goto LABEL_11;
    }
  }
LABEL_12:

}

uint64_t __107__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_passOwnershipTokenWithIdentifier_completion___block_invoke_2(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

- (void)requestAutomaticProvisioningForCompanionPaymentPass:(id)a3
{
  id v4;
  NSObject *v5;
  _BOOL4 v6;
  NSObject *v7;
  NSObject *v8;
  id v9;
  _QWORD v10[4];
  id v11;
  NPKPaymentWebServiceCompanionTargetDevice *v12;
  uint8_t buf[4];
  id v14;
  uint64_t v15;

  v15 = *MEMORY[0x24BDAC8D0];
  v4 = a3;
  pk_Payment_log();
  v5 = objc_claimAutoreleasedReturnValue();
  v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    pk_Payment_log();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138412290;
      v14 = v4;
      _os_log_impl(&dword_213518000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Requesting automatic provisioning for companion payment pass with unique ID: %@", buf, 0xCu);
    }

  }
  -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
  v8 = objc_claimAutoreleasedReturnValue();
  v10[0] = MEMORY[0x24BDAC760];
  v10[1] = 3221225472;
  v10[2] = __97__NPKPaymentWebServiceCompanionTargetDevice_requestAutomaticProvisioningForCompanionPaymentPass___block_invoke;
  v10[3] = &unk_24CFE7E40;
  v11 = v4;
  v12 = self;
  v9 = v4;
  dispatch_sync(v8, v10);

}

void __97__NPKPaymentWebServiceCompanionTargetDevice_requestAutomaticProvisioningForCompanionPaymentPass___block_invoke(uint64_t a1)
{
  NPKProtoAutomaticProvisioningRequest *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  unint64_t v8;
  uint64_t v9;
  id v10;
  void *v11;
  void *v12;
  void *v13;
  NSObject *v14;
  _BOOL4 v15;
  NSObject *v16;
  int v17;
  void *v18;
  uint64_t v19;

  v19 = *MEMORY[0x24BDAC8D0];
  v2 = objc_alloc_init(NPKProtoAutomaticProvisioningRequest);
  objc_msgSend(*(id *)(a1 + 32), "passTypeIdentifier");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  -[NPKProtoAutomaticProvisioningRequest setPassTypeIdentifier:](v2, "setPassTypeIdentifier:", v3);

  objc_msgSend(*(id *)(a1 + 32), "serialNumber");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  -[NPKProtoAutomaticProvisioningRequest setSerialNumber:](v2, "setSerialNumber:", v4);

  objc_msgSend(*(id *)(a1 + 32), "devicePrimaryPaymentApplication");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  -[NPKProtoAutomaticProvisioningRequest setCredentialType:](v2, "setCredentialType:", objc_msgSend(v5, "paymentNetworkIdentifier"));

  objc_msgSend(*(id *)(a1 + 32), "primaryAccountNumberSuffix");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  -[NPKProtoAutomaticProvisioningRequest setPrimaryAccountNumberSuffix:](v2, "setPrimaryAccountNumberSuffix:", v6);

  objc_msgSend(*(id *)(a1 + 32), "localizedName");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  -[NPKProtoAutomaticProvisioningRequest setLocalizedName:](v2, "setLocalizedName:", v7);

  v8 = objc_msgSend(*(id *)(a1 + 32), "cardType") - 1;
  if (v8 < 3)
    v9 = (v8 + 1);
  else
    v9 = 0;
  -[NPKProtoAutomaticProvisioningRequest setCardType:](v2, "setCardType:", v9);
  v10 = objc_alloc(MEMORY[0x24BE4FE40]);
  -[NPKProtoAutomaticProvisioningRequest data](v2, "data");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  v12 = (void *)objc_msgSend(v10, "initWithProtobufData:type:isResponse:", v11, 83, 0);

  objc_msgSend(*(id *)(a1 + 40), "_sendProtobuf:responseExpected:", v12, 0);
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  if (!v13)
  {
    pk_Payment_log();
    v14 = objc_claimAutoreleasedReturnValue();
    v15 = os_log_type_enabled(v14, OS_LOG_TYPE_ERROR);

    if (v15)
    {
      pk_Payment_log();
      v16 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR))
      {
        v17 = 138412290;
        v18 = v12;
        _os_log_impl(&dword_213518000, v16, OS_LOG_TYPE_ERROR, "Error: No message identifier for protobuf %@", (uint8_t *)&v17, 0xCu);
      }

    }
  }

}

- (void)familyMembersWithCompletion:(id)a3
{
  id v3;
  int IsTinker;
  char v5;
  void *v6;
  const char *v7;
  void *v8;
  NSObject *v9;
  _BOOL4 v10;
  NSObject *v11;
  id v12;
  id v13;
  id v14;
  _QWORD v15[4];
  id v16;
  id v17;
  char v18;
  uint8_t buf[4];
  void *v20;
  uint64_t v21;

  v21 = *MEMORY[0x24BDAC8D0];
  v3 = a3;
  IsTinker = NPKPairedOrPairingDeviceIsTinker();
  v5 = IsTinker;
  if (IsTinker)
  {
    NPKPairedOrPairingDevice();
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    NPKPairingDeviceAccountAltDSID(v6, v7);
    v8 = (void *)objc_claimAutoreleasedReturnValue();

    pk_Payment_log();
    v9 = objc_claimAutoreleasedReturnValue();
    v10 = os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT);

    if (v10)
    {
      pk_Payment_log();
      v11 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 138412290;
        v20 = v8;
        _os_log_impl(&dword_213518000, v11, OS_LOG_TYPE_DEFAULT, "Notice: Target familyMembersResponse: child altDSID:%@", buf, 0xCu);
      }

    }
  }
  else
  {
    v8 = 0;
  }
  v12 = objc_alloc_init(MEMORY[0x24BE6ED30]);
  v15[0] = MEMORY[0x24BDAC760];
  v15[1] = 3221225472;
  v15[2] = __73__NPKPaymentWebServiceCompanionTargetDevice_familyMembersWithCompletion___block_invoke;
  v15[3] = &unk_24CFEDB18;
  v18 = v5;
  v16 = v8;
  v17 = v3;
  v13 = v3;
  v14 = v8;
  objc_msgSend(v12, "familyMembersWithCompletion:", v15);

}

void __73__NPKPaymentWebServiceCompanionTargetDevice_familyMembersWithCompletion___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t i;
  void *v9;
  void *v10;
  NSObject *v11;
  _BOOL4 v12;
  NSObject *v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  uint8_t buf[4];
  void *v19;
  _BYTE v20[128];
  uint64_t v21;

  v21 = *MEMORY[0x24BDAC8D0];
  v3 = a2;
  v4 = v3;
  if (*(_BYTE *)(a1 + 48))
  {
    v16 = 0u;
    v17 = 0u;
    v14 = 0u;
    v15 = 0u;
    v5 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v14, v20, 16);
    if (v5)
    {
      v6 = v5;
      v7 = *(_QWORD *)v15;
      do
      {
        for (i = 0; i != v6; ++i)
        {
          if (*(_QWORD *)v15 != v7)
            objc_enumerationMutation(v4);
          v9 = *(void **)(*((_QWORD *)&v14 + 1) + 8 * i);
          objc_msgSend(v9, "altDSID");
          v10 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v9, "setMe:", objc_msgSend(v10, "isEqualToString:", *(_QWORD *)(a1 + 32)));

        }
        v6 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v14, v20, 16);
      }
      while (v6);
    }
    pk_Payment_log();
    v11 = objc_claimAutoreleasedReturnValue();
    v12 = os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT);

    if (v12)
    {
      pk_Payment_log();
      v13 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 138412290;
        v19 = v4;
        _os_log_impl(&dword_213518000, v13, OS_LOG_TYPE_DEFAULT, "Notice: Target familyMembersResponse: family members after:%@", buf, 0xCu);
      }

    }
  }
  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();

}

- (void)paymentWebServiceRegisterResponse:(id)a3
{
  id v4;
  NSObject *v5;
  _BOOL4 v6;
  NSObject *v7;
  void *v8;
  void *v9;
  void *v10;
  NSObject *v11;
  NSObject *v12;
  _BOOL4 v13;
  NSObject *v14;
  uint64_t v15;
  _QWORD v16[5];
  id v17;
  id v18;
  __int128 *p_buf;
  uint64_t *v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t (*v25)(uint64_t, uint64_t);
  void (*v26)(uint64_t);
  id v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint8_t v32[4];
  const char *v33;
  __int128 buf;
  uint64_t v35;
  uint64_t (*v36)(uint64_t, uint64_t);
  void (*v37)(uint64_t);
  id v38;
  uint64_t v39;

  v39 = *MEMORY[0x24BDAC8D0];
  v4 = a3;
  pk_Payment_log();
  v5 = objc_claimAutoreleasedReturnValue();
  v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    pk_Payment_log();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend(v4, "npkDescription");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      LODWORD(buf) = 138412290;
      *(_QWORD *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_213518000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Payment web service registration request: incoming protobuf %@", (uint8_t *)&buf, 0xCu);

    }
  }
  objc_msgSend(v4, "context");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "incomingResponseIdentifier");
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  *(_QWORD *)&buf = 0;
  *((_QWORD *)&buf + 1) = &buf;
  v35 = 0x3032000000;
  v36 = __Block_byref_object_copy__342;
  v37 = __Block_byref_object_dispose__343;
  v38 = 0;
  v28 = 0;
  v29 = &v28;
  v30 = 0x2020000000;
  v31 = 1;
  v22 = 0;
  v23 = &v22;
  v24 = 0x3032000000;
  v25 = __Block_byref_object_copy__23;
  v26 = __Block_byref_object_dispose__23;
  v27 = 0;
  if (v10)
  {
    -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
    v11 = objc_claimAutoreleasedReturnValue();
    v16[0] = MEMORY[0x24BDAC760];
    v16[1] = 3221225472;
    v16[2] = __79__NPKPaymentWebServiceCompanionTargetDevice_paymentWebServiceRegisterResponse___block_invoke;
    v16[3] = &unk_24CFED060;
    v16[4] = self;
    v17 = v10;
    v18 = v4;
    p_buf = &buf;
    v20 = &v28;
    v21 = &v22;
    dispatch_sync(v11, v16);

  }
  else
  {
    pk_Payment_log();
    v12 = objc_claimAutoreleasedReturnValue();
    v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      pk_Payment_log();
      v14 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)v32 = 136315138;
        v33 = "-[NPKPaymentWebServiceCompanionTargetDevice paymentWebServiceRegisterResponse:]";
        _os_log_impl(&dword_213518000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response, %s", v32, 0xCu);
      }

    }
  }
  v15 = *(_QWORD *)(*((_QWORD *)&buf + 1) + 40);
  if (v15)
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v15, v29[3], v23[5]);
  _Block_object_dispose(&v22, 8);

  _Block_object_dispose(&v28, 8);
  _Block_object_dispose(&buf, 8);

}

void __79__NPKPaymentWebServiceCompanionTargetDevice_paymentWebServiceRegisterResponse___block_invoke(uint64_t a1)
{
  void *v1;
  void *v3;
  void *v4;
  NPKProtoPaymentWebServiceRegistrationResponse *v5;
  void *v6;
  NSObject *v7;
  NSObject *v8;
  _BOOL4 v9;
  NSObject *v10;
  NSObject *v11;
  _BOOL4 v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  int v17;
  NSObject *v18;
  void *v19;
  NSObject *v20;
  _BOOL4 v21;
  NSObject *v22;
  const char *v23;
  const __CFString *v24;
  void *v25;
  NSObject *v26;
  char *v27;
  NSObject *v28;
  _BOOL4 v29;
  NSObject *v30;
  NSObject *v31;
  _BOOL4 v32;
  NSObject *v33;
  void *v34;
  char *v35;
  void *v36;
  const __CFString *v37;
  void *v38;
  int v39;
  const char *v40;
  __int16 v41;
  const __CFString *v42;
  uint64_t v43;

  v43 = *MEMORY[0x24BDAC8D0];
  objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "objectForKey:", *(_QWORD *)(a1 + 40));
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  if (v4)
  {
    v5 = [NPKProtoPaymentWebServiceRegistrationResponse alloc];
    objc_msgSend(*(id *)(a1 + 48), "data");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    v7 = -[NPKProtoPaymentWebServiceRegistrationResponse initWithData:](v5, "initWithData:", v6);

    if (-[NSObject pending](v7, "pending"))
    {
      pk_Payment_log();
      v8 = objc_claimAutoreleasedReturnValue();
      v9 = os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT);

      if (v9)
      {
        pk_Payment_log();
        v10 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
        {
          LOWORD(v39) = 0;
          _os_log_impl(&dword_213518000, v10, OS_LOG_TYPE_DEFAULT, "Notice: Payment web service registration request still pending", (uint8_t *)&v39, 2u);
        }

      }
      objc_msgSend(v4, "setOrResetCleanupTimer");
    }
    else
    {
      objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
      v13 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v13, "removeObjectForKey:", *(_QWORD *)(a1 + 40));

      objc_msgSend(v4, "completionHandler");
      v14 = objc_claimAutoreleasedReturnValue();
      v15 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
      v16 = *(void **)(v15 + 40);
      *(_QWORD *)(v15 + 40) = v14;

      *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 24) = -[NSObject registrationResult](v7, "registrationResult");
      v17 = -[NSObject hasErrorData](v7, "hasErrorData");
      if (v17)
      {
        -[NSObject errorData](v7, "errorData");
        v1 = (void *)objc_claimAutoreleasedReturnValue();
        v18 = objc_opt_class();
        NPKSecureUnarchiveObject(v1, v18);
        v19 = (void *)objc_claimAutoreleasedReturnValue();
      }
      else
      {
        v19 = 0;
      }
      objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 72) + 8) + 40), v19);
      if (v17)
      {

      }
      pk_Payment_log();
      v20 = objc_claimAutoreleasedReturnValue();
      v21 = os_log_type_enabled(v20, OS_LOG_TYPE_DEFAULT);

      if (v21)
      {
        pk_Payment_log();
        v22 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v22, OS_LOG_TYPE_DEFAULT))
        {
          v23 = *(const char **)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 24);
          v24 = *(const __CFString **)(*(_QWORD *)(*(_QWORD *)(a1 + 72) + 8) + 40);
          v39 = 134218242;
          v40 = v23;
          v41 = 2112;
          v42 = v24;
          _os_log_impl(&dword_213518000, v22, OS_LOG_TYPE_DEFAULT, "Notice: Finish Payment web service registration request result:%lu error:%@", (uint8_t *)&v39, 0x16u);
        }

      }
      -[NSObject webServiceContextData](v7, "webServiceContextData");
      v25 = (void *)objc_claimAutoreleasedReturnValue();
      v26 = objc_opt_class();
      NPKSecureUnarchiveObject(v25, v26);
      v27 = (char *)objc_claimAutoreleasedReturnValue();

      pk_Payment_log();
      v28 = objc_claimAutoreleasedReturnValue();
      v29 = os_log_type_enabled(v28, OS_LOG_TYPE_DEFAULT);

      if (v29)
      {
        pk_Payment_log();
        v30 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v30, OS_LOG_TYPE_DEFAULT))
        {
          v39 = 138412290;
          v40 = v27;
          _os_log_impl(&dword_213518000, v30, OS_LOG_TYPE_DEFAULT, "Notice: Got updated web service context from watch: %@", (uint8_t *)&v39, 0xCu);
        }

      }
      if (v27)
      {
        pk_Payment_log();
        v31 = objc_claimAutoreleasedReturnValue();
        v32 = os_log_type_enabled(v31, OS_LOG_TYPE_DEFAULT);

        if (v32)
        {
          pk_Payment_log();
          v33 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v33, OS_LOG_TYPE_DEFAULT))
          {
            objc_msgSend(v27, "primaryRegion");
            v34 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v34, "applyServiceURL");
            v35 = (char *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v27, "primaryRegion");
            v36 = (void *)objc_claimAutoreleasedReturnValue();
            v37 = CFSTR("YES");
            if (!v36)
              v37 = CFSTR("NO");
            v39 = 138412546;
            v40 = v35;
            v41 = 2112;
            v42 = v37;
            _os_log_impl(&dword_213518000, v33, OS_LOG_TYPE_DEFAULT, "Notice: (account-pass-context) received updated web service context applyServiceURL %@ primaryRegion %@", (uint8_t *)&v39, 0x16u);

          }
        }
        objc_msgSend(*(id *)(a1 + 32), "delegate");
        v38 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v38, "handlePaymentWebServiceContextFromWatch:", v27);

      }
    }
LABEL_33:

    goto LABEL_34;
  }
  pk_Payment_log();
  v11 = objc_claimAutoreleasedReturnValue();
  v12 = os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT);

  if (v12)
  {
    pk_Payment_log();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      v39 = 136315138;
      v40 = "-[NPKPaymentWebServiceCompanionTargetDevice paymentWebServiceRegisterResponse:]_block_invoke";
      _os_log_impl(&dword_213518000, v7, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler, %s", (uint8_t *)&v39, 0xCu);
    }
    goto LABEL_33;
  }
LABEL_34:

}

- (void)performDeviceRegistrationForReason:(id)a3 brokerURL:(id)a4 completion:(id)a5
{
  id v8;
  id v9;
  id v10;
  void *v11;
  NSObject *v12;
  _BOOL4 v13;
  NSObject *v14;
  void *v15;
  void *v16;
  char v17;
  NSObject *v18;
  _BOOL4 v19;
  NSObject *v20;
  NSObject *v21;
  void *v22;
  void *v23;
  NSObject *v24;
  _BOOL4 v25;
  NSObject *v26;
  uint64_t v27;
  void (**v28)(_QWORD, _QWORD, _QWORD, _QWORD);
  void (**v29)(_QWORD, _QWORD, _QWORD, _QWORD);
  void *v30;
  NSObject *v31;
  _BOOL4 v32;
  NSObject *v33;
  _QWORD v34[4];
  id v35;
  id v36;
  NPKPaymentWebServiceCompanionTargetDevice *v37;
  id v38;
  id v39;
  _QWORD v40[4];
  void (**v41)(_QWORD, _QWORD, _QWORD, _QWORD);
  _QWORD v42[4];
  void (**v43)(_QWORD, _QWORD, _QWORD, _QWORD);
  _QWORD v44[4];
  id v45;
  uint8_t buf[4];
  id v47;
  __int16 v48;
  id v49;
  __int16 v50;
  void *v51;
  uint64_t v52;

  v52 = *MEMORY[0x24BDAC8D0];
  v8 = a3;
  v9 = a4;
  v10 = a5;
  objc_msgSend(MEMORY[0x24BDD1880], "UUID");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  pk_General_log();
  v12 = objc_claimAutoreleasedReturnValue();
  v13 = os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT);

  if (v13)
  {
    pk_General_log();
    v14 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138412802;
      v47 = v8;
      v48 = 2112;
      v49 = v9;
      v50 = 2112;
      v51 = v11;
      _os_log_impl(&dword_213518000, v14, OS_LOG_TYPE_DEFAULT, "Notice: target Device: requested register device with reason:%@ brokerURL:%@ UUID:%@", buf, 0x20u);
    }

  }
  NPKPairedOrPairingDevice();
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  v16 = (void *)objc_msgSend(objc_alloc(MEMORY[0x24BDD1880]), "initWithUUIDString:", CFSTR("79770938-0C49-40BD-B593-4E04E7557E01"));
  v17 = objc_msgSend(v15, "supportsCapability:", v16);

  if ((v17 & 1) != 0)
  {
    pk_General_log();
    v18 = objc_claimAutoreleasedReturnValue();
    v19 = os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT);

    if (v19)
    {
      pk_General_log();
      v20 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v20, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)buf = 0;
        _os_log_impl(&dword_213518000, v20, OS_LOG_TYPE_DEFAULT, "Notice: target Device: Will forward registration request to gizmo", buf, 2u);
      }

    }
    -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
    v21 = objc_claimAutoreleasedReturnValue();
    v34[0] = MEMORY[0x24BDAC760];
    v34[1] = 3221225472;
    v34[2] = __101__NPKPaymentWebServiceCompanionTargetDevice_performDeviceRegistrationForReason_brokerURL_completion___block_invoke_699;
    v34[3] = &unk_24CFE9350;
    v35 = v9;
    v36 = v8;
    v37 = self;
    v38 = v11;
    v39 = v10;
    dispatch_sync(v21, v34);

    v22 = v35;
  }
  else
  {
    +[NPKSharedWebServiceProvider sharedWebServiceProvider](NPKSharedWebServiceProvider, "sharedWebServiceProvider");
    v23 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v23, "webService");
    v22 = (void *)objc_claimAutoreleasedReturnValue();

    pk_General_log();
    v24 = objc_claimAutoreleasedReturnValue();
    v25 = os_log_type_enabled(v24, OS_LOG_TYPE_DEFAULT);

    if (v25)
    {
      pk_General_log();
      v26 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v26, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 138412290;
        v47 = v22;
        _os_log_impl(&dword_213518000, v26, OS_LOG_TYPE_DEFAULT, "Notice: target Device: Active device can't forward registration we will do it locally with webService:%@", buf, 0xCu);
      }

    }
    v27 = MEMORY[0x24BDAC760];
    v44[0] = MEMORY[0x24BDAC760];
    v44[1] = 3221225472;
    v44[2] = __101__NPKPaymentWebServiceCompanionTargetDevice_performDeviceRegistrationForReason_brokerURL_completion___block_invoke;
    v44[3] = &unk_24CFEDB40;
    v45 = v10;
    v28 = (void (**)(_QWORD, _QWORD, _QWORD, _QWORD))MEMORY[0x2199B6780](v44);
    v29 = v28;
    if (v22)
    {
      if (v9)
      {
        v40[0] = v27;
        v40[1] = 3221225472;
        v40[2] = __101__NPKPaymentWebServiceCompanionTargetDevice_performDeviceRegistrationForReason_brokerURL_completion___block_invoke_2;
        v40[3] = &unk_24CFEDB40;
        v41 = v28;
        objc_msgSend(v22, "registerDeviceAtBrokerURL:consistencyCheckResults:completion:", v9, 0, v40);
        v30 = v41;
      }
      else
      {
        v42[0] = v27;
        v42[1] = 3221225472;
        v42[2] = __101__NPKPaymentWebServiceCompanionTargetDevice_performDeviceRegistrationForReason_brokerURL_completion___block_invoke_698;
        v42[3] = &unk_24CFEDB40;
        v43 = v28;
        objc_msgSend(v22, "registerDeviceWithCompletion:", v42);
        v30 = v43;
      }
    }
    else
    {
      pk_General_log();
      v31 = objc_claimAutoreleasedReturnValue();
      v32 = os_log_type_enabled(v31, OS_LOG_TYPE_ERROR);

      if (v32)
      {
        pk_General_log();
        v33 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v33, OS_LOG_TYPE_ERROR))
        {
          *(_DWORD *)buf = 138412290;
          v47 = 0;
          _os_log_impl(&dword_213518000, v33, OS_LOG_TYPE_ERROR, "Error: target Device: Unexpected. No deviceWebService (%@) found with which to register the device", buf, 0xCu);
        }

      }
      PKDisplayableErrorForCommonType();
      v30 = (void *)objc_claimAutoreleasedReturnValue();
      ((void (**)(_QWORD, _QWORD, uint64_t, void *))v29)[2](v29, 0, 0x7FFFFFFFFFFFFFFFLL, v30);
    }

  }
}

void __101__NPKPaymentWebServiceCompanionTargetDevice_performDeviceRegistrationForReason_brokerURL_completion___block_invoke(uint64_t a1, unint64_t a2, void *a3, void *a4)
{
  id v7;
  NSObject *v8;
  _BOOL4 v9;
  NSObject *v10;
  unint64_t v11;
  NSObject *v12;
  _BOOL4 v13;
  NSObject *v14;
  NSObject *v15;
  _BOOL4 v16;
  NSObject *v17;
  int v18;
  unint64_t v19;
  __int16 v20;
  id v21;
  __int16 v22;
  id v23;
  uint64_t v24;

  v24 = *MEMORY[0x24BDAC8D0];
  v7 = a4;
  pk_General_log();
  v8 = objc_claimAutoreleasedReturnValue();
  v9 = os_log_type_enabled(v8, OS_LOG_TYPE_DEBUG);

  if (v9)
  {
    pk_General_log();
    v10 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEBUG))
    {
      v18 = 134218498;
      v19 = a2;
      v20 = 2048;
      v21 = a3;
      v22 = 2112;
      v23 = v7;
      _os_log_impl(&dword_213518000, v10, OS_LOG_TYPE_DEBUG, "Debug: target Device: register device completion. Result: %lu, cardsOnFile: %lu, error: %@", (uint8_t *)&v18, 0x20u);
    }

  }
  if (*(_QWORD *)(a1 + 32))
  {
    if (a2 > 3)
      v11 = 0;
    else
      v11 = qword_213772338[a2];
    pk_General_log();
    v15 = objc_claimAutoreleasedReturnValue();
    v16 = os_log_type_enabled(v15, OS_LOG_TYPE_DEBUG);

    if (v16)
    {
      pk_General_log();
      v17 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v17, OS_LOG_TYPE_DEBUG))
      {
        v18 = 134218242;
        v19 = v11;
        v20 = 2112;
        v21 = v7;
        _os_log_impl(&dword_213518000, v17, OS_LOG_TYPE_DEBUG, "Debug: target Device: Calling completion with registration result: %lu, error: %@", (uint8_t *)&v18, 0x16u);
      }

    }
    (*(void (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
  }
  else
  {
    pk_General_log();
    v12 = objc_claimAutoreleasedReturnValue();
    v13 = os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT);

    if (v13)
    {
      pk_General_log();
      v14 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
      {
        LOWORD(v18) = 0;
        _os_log_impl(&dword_213518000, v14, OS_LOG_TYPE_DEFAULT, "Warning: target Device: Unexpected. No completion block", (uint8_t *)&v18, 2u);
      }

    }
  }

}

uint64_t __101__NPKPaymentWebServiceCompanionTargetDevice_performDeviceRegistrationForReason_brokerURL_completion___block_invoke_698(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

uint64_t __101__NPKPaymentWebServiceCompanionTargetDevice_performDeviceRegistrationForReason_brokerURL_completion___block_invoke_2(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

void __101__NPKPaymentWebServiceCompanionTargetDevice_performDeviceRegistrationForReason_brokerURL_completion___block_invoke_699(uint64_t a1)
{
  NPKProtoPaymentWebServiceRegistrationRequest *v2;
  void *v3;
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  char *v10;
  NSObject *v11;
  void *v12;
  void *v13;
  void *v14;
  NSObject *v15;
  _BOOL4 v16;
  const char *v17;
  NSObject *v18;
  os_log_type_t v19;
  uint32_t v20;
  NSObject *v21;
  _BOOL4 v22;
  _QWORD v23[4];
  id v24;
  uint8_t buf[4];
  const char *v26;
  __int16 v27;
  void *v28;
  _QWORD v29[2];
  _QWORD v30[3];

  v30[2] = *MEMORY[0x24BDAC8D0];
  v2 = objc_alloc_init(NPKProtoPaymentWebServiceRegistrationRequest);
  objc_msgSend(*(id *)(a1 + 32), "absoluteString");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  -[NPKProtoPaymentWebServiceRegistrationRequest setBrokerURLString:](v2, "setBrokerURLString:", v3);

  -[NPKProtoPaymentWebServiceRegistrationRequest setReason:](v2, "setReason:", *(_QWORD *)(a1 + 40));
  v4 = objc_alloc(MEMORY[0x24BE4FE40]);
  -[NPKProtoPaymentWebServiceRegistrationRequest data](v2, "data");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = (void *)objc_msgSend(v4, "initWithProtobufData:type:isResponse:", v5, 94, 0);

  v29[0] = *MEMORY[0x24BE4FB18];
  v7 = *(void **)(a1 + 48);
  objc_msgSend(MEMORY[0x24BDD17C8], "stringWithFormat:", CFSTR("PaymentWebServiceRegisterRequest-%@"), *(_QWORD *)(a1 + 56));
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v29[1] = *MEMORY[0x24BE4FAC0];
  v30[0] = v8;
  v30[1] = MEMORY[0x24BDBD1C8];
  objc_msgSend(MEMORY[0x24BDBCE70], "dictionaryWithObjects:forKeys:count:", v30, v29, 2);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "_sendProtobuf:responseExpected:extraOptions:", v6, 1, v9);
  v10 = (char *)objc_claimAutoreleasedReturnValue();

  if (v10)
  {
    if (*(_QWORD *)(a1 + 64))
    {
      v11 = MEMORY[0x2199B6780]();
      v23[0] = MEMORY[0x24BDAC760];
      v23[1] = 3221225472;
      v23[2] = __101__NPKPaymentWebServiceCompanionTargetDevice_performDeviceRegistrationForReason_brokerURL_completion___block_invoke_2_703;
      v23[3] = &unk_24CFE7B80;
      v24 = *(id *)(a1 + 64);
      v12 = (void *)MEMORY[0x2199B6780](v23);
      v13 = *(void **)(a1 + 48);
      v14 = (void *)MEMORY[0x2199B6780](v11);
      objc_msgSend(v13, "_trackOutstandingRequestWithMessageIdentifier:completionHandler:errorHandler:", v10, v14, v12);

LABEL_11:
      goto LABEL_12;
    }
    pk_Payment_log();
    v21 = objc_claimAutoreleasedReturnValue();
    v22 = os_log_type_enabled(v21, OS_LOG_TYPE_DEFAULT);

    if (v22)
    {
      pk_Payment_log();
      v11 = objc_claimAutoreleasedReturnValue();
      if (!os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
        goto LABEL_11;
      *(_DWORD *)buf = 138412290;
      v26 = v10;
      v17 = "Warning: No response expected for message with identifier %@";
      v18 = v11;
      v19 = OS_LOG_TYPE_DEFAULT;
      v20 = 12;
      goto LABEL_10;
    }
  }
  else
  {
    pk_Payment_log();
    v15 = objc_claimAutoreleasedReturnValue();
    v16 = os_log_type_enabled(v15, OS_LOG_TYPE_ERROR);

    if (v16)
    {
      pk_Payment_log();
      v11 = objc_claimAutoreleasedReturnValue();
      if (!os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
        goto LABEL_11;
      *(_DWORD *)buf = 136315394;
      v26 = "-[NPKPaymentWebServiceCompanionTargetDevice performDeviceRegistrationForReason:brokerURL:completion:]_block_invoke";
      v27 = 2112;
      v28 = v6;
      v17 = "Error: %s No message identifier for protobuf %@";
      v18 = v11;
      v19 = OS_LOG_TYPE_ERROR;
      v20 = 22;
LABEL_10:
      _os_log_impl(&dword_213518000, v18, v19, v17, buf, v20);
      goto LABEL_11;
    }
  }
LABEL_12:

}

uint64_t __101__NPKPaymentWebServiceCompanionTargetDevice_performDeviceRegistrationForReason_brokerURL_completion___block_invoke_2_703(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 32);
  if (result)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(result + 16))(result, 1, a2);
  return result;
}

- (void)photosForFamilyMembersWithDSIDsResponse:(id)a3
{
  id v4;
  NSObject *v5;
  _BOOL4 v6;
  NSObject *v7;
  void *v8;
  void *v9;
  void *v10;
  NSObject *v11;
  NSObject *v12;
  _BOOL4 v13;
  NSObject *v14;
  uint64_t v15;
  uint8_t v16[8];
  _QWORD block[5];
  id v18;
  id v19;
  __int128 *p_buf;
  uint64_t *v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t (*v25)(uint64_t, uint64_t);
  void (*v26)(uint64_t);
  id v27;
  __int128 buf;
  uint64_t v29;
  uint64_t (*v30)(uint64_t, uint64_t);
  void (*v31)(uint64_t);
  id v32;
  uint64_t v33;

  v33 = *MEMORY[0x24BDAC8D0];
  v4 = a3;
  pk_Payment_log();
  v5 = objc_claimAutoreleasedReturnValue();
  v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    pk_Payment_log();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend(v4, "npkDescription");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      LODWORD(buf) = 138412290;
      *(_QWORD *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_213518000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Target photosForFamilyMembersWithDSIDsResponse: incoming protobuf %@", (uint8_t *)&buf, 0xCu);

    }
  }
  objc_msgSend(v4, "context");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "incomingResponseIdentifier");
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  *(_QWORD *)&buf = 0;
  *((_QWORD *)&buf + 1) = &buf;
  v29 = 0x3032000000;
  v30 = __Block_byref_object_copy__342;
  v31 = __Block_byref_object_dispose__343;
  v32 = 0;
  v22 = 0;
  v23 = &v22;
  v24 = 0x3032000000;
  v25 = __Block_byref_object_copy__23;
  v26 = __Block_byref_object_dispose__23;
  v27 = 0;
  if (v10)
  {
    -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
    v11 = objc_claimAutoreleasedReturnValue();
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 3221225472;
    block[2] = __85__NPKPaymentWebServiceCompanionTargetDevice_photosForFamilyMembersWithDSIDsResponse___block_invoke;
    block[3] = &unk_24CFED0D8;
    block[4] = self;
    v18 = v10;
    v19 = v4;
    p_buf = &buf;
    v21 = &v22;
    dispatch_sync(v11, block);

  }
  else
  {
    pk_Payment_log();
    v12 = objc_claimAutoreleasedReturnValue();
    v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      pk_Payment_log();
      v14 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)v16 = 0;
        _os_log_impl(&dword_213518000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v16, 2u);
      }

    }
  }
  v15 = *(_QWORD *)(*((_QWORD *)&buf + 1) + 40);
  if (v15)
    (*(void (**)(uint64_t, uint64_t))(v15 + 16))(v15, v23[5]);
  _Block_object_dispose(&v22, 8);

  _Block_object_dispose(&buf, 8);
}

void __85__NPKPaymentWebServiceCompanionTargetDevice_photosForFamilyMembersWithDSIDsResponse___block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;
  NPKProtoPhotosForFamilyMembersWithDSIDsResponse *v4;
  void *v5;
  NPKProtoPhotosForFamilyMembersWithDSIDsResponse *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  uint64_t v12;
  void *v13;
  unint64_t v14;
  void *v15;
  void *v16;
  NSObject *v17;
  void *v18;
  void *v19;
  void *v20;
  NSObject *v21;
  void *v22;
  NSObject *v23;
  _BOOL4 v24;
  NSObject *v25;
  uint8_t v26[16];

  objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "objectForKey:", *(_QWORD *)(a1 + 40));
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  if (v3)
  {
    v4 = [NPKProtoPhotosForFamilyMembersWithDSIDsResponse alloc];
    objc_msgSend(*(id *)(a1 + 48), "data");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    v6 = -[NPKProtoPhotosForFamilyMembersWithDSIDsResponse initWithData:](v4, "initWithData:", v5);

    objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "removeObjectForKey:", *(_QWORD *)(a1 + 40));

    objc_msgSend(v3, "completionHandler");
    v8 = objc_claimAutoreleasedReturnValue();
    v9 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
    v10 = *(void **)(v9 + 40);
    *(_QWORD *)(v9 + 40) = v8;

    v11 = objc_alloc_init(MEMORY[0x24BDBCED8]);
    v12 = *(_QWORD *)(*(_QWORD *)(a1 + 64) + 8);
    v13 = *(void **)(v12 + 40);
    *(_QWORD *)(v12 + 40) = v11;

    if (-[NPKProtoPhotosForFamilyMembersWithDSIDsResponse familyPhotosIDsCount](v6, "familyPhotosIDsCount"))
    {
      v14 = 0;
      do
      {
        -[NPKProtoPhotosForFamilyMembersWithDSIDsResponse familyPhotosIDs](v6, "familyPhotosIDs");
        v15 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v15, "objectAtIndexedSubscript:", v14);
        v16 = (void *)objc_claimAutoreleasedReturnValue();
        v17 = objc_opt_class();
        NPKSecureUnarchiveObject(v16, v17);
        v18 = (void *)objc_claimAutoreleasedReturnValue();

        -[NPKProtoPhotosForFamilyMembersWithDSIDsResponse familyPhotos](v6, "familyPhotos");
        v19 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v19, "objectAtIndexedSubscript:", v14);
        v20 = (void *)objc_claimAutoreleasedReturnValue();
        v21 = objc_opt_class();
        NPKSecureUnarchiveObject(v20, v21);
        v22 = (void *)objc_claimAutoreleasedReturnValue();

        if (v18 && v22)
          objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 40), "setObject:forKey:", v22, v18);

        ++v14;
      }
      while (v14 < -[NPKProtoPhotosForFamilyMembersWithDSIDsResponse familyPhotosIDsCount](v6, "familyPhotosIDsCount"));
    }

  }
  else
  {
    pk_Payment_log();
    v23 = objc_claimAutoreleasedReturnValue();
    v24 = os_log_type_enabled(v23, OS_LOG_TYPE_DEFAULT);

    if (v24)
    {
      pk_Payment_log();
      v25 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v25, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)v26 = 0;
        _os_log_impl(&dword_213518000, v25, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", v26, 2u);
      }

    }
  }

}

- (void)photosForFamilyMembersWithDSIDs:(id)a3 completion:(id)a4
{
  id v6;
  NSObject *v7;
  id v8;
  id v9;
  _QWORD block[4];
  id v11;
  NPKPaymentWebServiceCompanionTargetDevice *v12;
  id v13;

  v9 = a3;
  v6 = a4;
  if (NPKPairedOrPairingDeviceIsTinker())
  {
    -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
    v7 = objc_claimAutoreleasedReturnValue();
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 3221225472;
    block[2] = __88__NPKPaymentWebServiceCompanionTargetDevice_photosForFamilyMembersWithDSIDs_completion___block_invoke;
    block[3] = &unk_24CFE84E8;
    v11 = v9;
    v12 = self;
    v13 = v6;
    dispatch_sync(v7, block);

    v8 = v11;
  }
  else
  {
    v8 = objc_alloc_init(MEMORY[0x24BE6ED30]);
    objc_msgSend(v8, "photosForFamilyMembersWithDSIDs:completion:", v9, v6);
  }

}

void __88__NPKPaymentWebServiceCompanionTargetDevice_photosForFamilyMembersWithDSIDs_completion___block_invoke(uint64_t a1)
{
  NSObject *v2;
  _BOOL4 v3;
  NSObject *v4;
  void *v5;
  NPKProtoPhotosForFamilyMembersWithDSIDsRequest *v6;
  void *v7;
  uint64_t v8;
  NPKProtoPhotosForFamilyMembersWithDSIDsRequest *v9;
  id v10;
  void *v11;
  void *v12;
  void *v13;
  uint64_t v14;
  void *v15;
  void *v16;
  NSObject *v17;
  void *v18;
  void *v19;
  void *v20;
  NSObject *v21;
  _BOOL4 v22;
  const char *v23;
  NSObject *v24;
  os_log_type_t v25;
  NSObject *v26;
  _BOOL4 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t (*v30)(uint64_t);
  void *v31;
  id v32;
  _QWORD v33[4];
  NPKProtoPhotosForFamilyMembersWithDSIDsRequest *v34;
  _QWORD v35[2];
  _QWORD v36[2];
  uint8_t buf[4];
  void *v38;
  uint64_t v39;

  v39 = *MEMORY[0x24BDAC8D0];
  pk_General_log();
  v2 = objc_claimAutoreleasedReturnValue();
  v3 = os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT);

  if (v3)
  {
    pk_General_log();
    v4 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      v5 = *(void **)(a1 + 32);
      *(_DWORD *)buf = 138412290;
      v38 = v5;
      _os_log_impl(&dword_213518000, v4, OS_LOG_TYPE_DEFAULT, "Notice: Photos for family members with IDs %@. Sending message", buf, 0xCu);
    }

  }
  v6 = objc_alloc_init(NPKProtoPhotosForFamilyMembersWithDSIDsRequest);
  v7 = *(void **)(a1 + 32);
  v8 = MEMORY[0x24BDAC760];
  v33[0] = MEMORY[0x24BDAC760];
  v33[1] = 3221225472;
  v33[2] = __88__NPKPaymentWebServiceCompanionTargetDevice_photosForFamilyMembersWithDSIDs_completion___block_invoke_707;
  v33[3] = &unk_24CFEDB68;
  v9 = v6;
  v34 = v9;
  objc_msgSend(v7, "enumerateObjectsUsingBlock:", v33);
  v10 = objc_alloc(MEMORY[0x24BE4FE40]);
  -[NPKProtoPhotosForFamilyMembersWithDSIDsRequest data](v9, "data");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  v12 = (void *)objc_msgSend(v10, "initWithProtobufData:type:isResponse:", v11, 87, 0);

  v13 = *(void **)(a1 + 40);
  v14 = *MEMORY[0x24BE4FAC0];
  v35[0] = *MEMORY[0x24BE4FB18];
  v35[1] = v14;
  v36[0] = CFSTR("familyMembersPhotos");
  v36[1] = MEMORY[0x24BDBD1C8];
  objc_msgSend(MEMORY[0x24BDBCE70], "dictionaryWithObjects:forKeys:count:", v36, v35, 2);
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v13, "_sendProtobuf:responseExpected:extraOptions:", v12, 1, v15);
  v16 = (void *)objc_claimAutoreleasedReturnValue();

  if (v16)
  {
    if (*(_QWORD *)(a1 + 48))
    {
      v17 = MEMORY[0x2199B6780]();
      v28 = v8;
      v29 = 3221225472;
      v30 = __88__NPKPaymentWebServiceCompanionTargetDevice_photosForFamilyMembersWithDSIDs_completion___block_invoke_2;
      v31 = &unk_24CFE7B80;
      v32 = *(id *)(a1 + 48);
      v18 = (void *)MEMORY[0x2199B6780](&v28);
      v19 = *(void **)(a1 + 40);
      v20 = (void *)MEMORY[0x2199B6780](v17);
      objc_msgSend(v19, "_trackOutstandingRequestWithMessageIdentifier:completionHandler:errorHandler:", v16, v20, v18, v28, v29, v30, v31);

LABEL_15:
      goto LABEL_16;
    }
    pk_Payment_log();
    v26 = objc_claimAutoreleasedReturnValue();
    v27 = os_log_type_enabled(v26, OS_LOG_TYPE_DEFAULT);

    if (v27)
    {
      pk_Payment_log();
      v17 = objc_claimAutoreleasedReturnValue();
      if (!os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
        goto LABEL_15;
      *(_DWORD *)buf = 138412290;
      v38 = v16;
      v23 = "Warning: No response expected for message with identifier %@";
      v24 = v17;
      v25 = OS_LOG_TYPE_DEFAULT;
      goto LABEL_14;
    }
  }
  else
  {
    pk_Payment_log();
    v21 = objc_claimAutoreleasedReturnValue();
    v22 = os_log_type_enabled(v21, OS_LOG_TYPE_ERROR);

    if (v22)
    {
      pk_Payment_log();
      v17 = objc_claimAutoreleasedReturnValue();
      if (!os_log_type_enabled(v17, OS_LOG_TYPE_ERROR))
        goto LABEL_15;
      *(_DWORD *)buf = 138412290;
      v38 = v12;
      v23 = "Error: No message identifier for protobuf %@";
      v24 = v17;
      v25 = OS_LOG_TYPE_ERROR;
LABEL_14:
      _os_log_impl(&dword_213518000, v24, v25, v23, buf, 0xCu);
      goto LABEL_15;
    }
  }
LABEL_16:

}

void __88__NPKPaymentWebServiceCompanionTargetDevice_photosForFamilyMembersWithDSIDs_completion___block_invoke_707(uint64_t a1, void *a2)
{
  void *v3;
  void *v4;

  NPKSecureArchiveObject(a2);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  if (v3)
  {
    v4 = v3;
    objc_msgSend(*(id *)(a1 + 32), "addRequestDSIDs:", v3);
    v3 = v4;
  }

}

uint64_t __88__NPKPaymentWebServiceCompanionTargetDevice_photosForFamilyMembersWithDSIDs_completion___block_invoke_2(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 32);
  if (result)
    return (*(uint64_t (**)(uint64_t, _QWORD))(result + 16))(result, 0);
  return result;
}

- (void)featureApplicationsForAccountIdentifierResponse:(id)a3
{
  id v4;
  NSObject *v5;
  _BOOL4 v6;
  NSObject *v7;
  void *v8;
  void *v9;
  void *v10;
  NSObject *v11;
  NSObject *v12;
  _BOOL4 v13;
  NSObject *v14;
  uint64_t v15;
  uint8_t v16[8];
  _QWORD block[5];
  id v18;
  id v19;
  __int128 *p_buf;
  uint64_t *v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t (*v25)(uint64_t, uint64_t);
  void (*v26)(uint64_t);
  id v27;
  __int128 buf;
  uint64_t v29;
  uint64_t (*v30)(uint64_t, uint64_t);
  void (*v31)(uint64_t);
  id v32;
  uint64_t v33;

  v33 = *MEMORY[0x24BDAC8D0];
  v4 = a3;
  pk_Payment_log();
  v5 = objc_claimAutoreleasedReturnValue();
  v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    pk_Payment_log();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend(v4, "npkDescription");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      LODWORD(buf) = 138412290;
      *(_QWORD *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_213518000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Target featureApplicationsForAccountIdentifierResponse: incoming protobuf %@", (uint8_t *)&buf, 0xCu);

    }
  }
  objc_msgSend(v4, "context");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "incomingResponseIdentifier");
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  *(_QWORD *)&buf = 0;
  *((_QWORD *)&buf + 1) = &buf;
  v29 = 0x3032000000;
  v30 = __Block_byref_object_copy__342;
  v31 = __Block_byref_object_dispose__343;
  v32 = 0;
  v22 = 0;
  v23 = &v22;
  v24 = 0x3032000000;
  v25 = __Block_byref_object_copy__23;
  v26 = __Block_byref_object_dispose__23;
  v27 = 0;
  if (v10)
  {
    -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
    v11 = objc_claimAutoreleasedReturnValue();
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 3221225472;
    block[2] = __93__NPKPaymentWebServiceCompanionTargetDevice_featureApplicationsForAccountIdentifierResponse___block_invoke;
    block[3] = &unk_24CFED0D8;
    block[4] = self;
    v18 = v10;
    v19 = v4;
    p_buf = &buf;
    v21 = &v22;
    dispatch_sync(v11, block);

  }
  else
  {
    pk_Payment_log();
    v12 = objc_claimAutoreleasedReturnValue();
    v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      pk_Payment_log();
      v14 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)v16 = 0;
        _os_log_impl(&dword_213518000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v16, 2u);
      }

    }
  }
  v15 = *(_QWORD *)(*((_QWORD *)&buf + 1) + 40);
  if (v15)
    (*(void (**)(uint64_t, uint64_t))(v15 + 16))(v15, v23[5]);
  _Block_object_dispose(&v22, 8);

  _Block_object_dispose(&buf, 8);
}

void __93__NPKPaymentWebServiceCompanionTargetDevice_featureApplicationsForAccountIdentifierResponse___block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;
  NPKProtoFeatureApplicationsForAccountIdentifierResponse *v4;
  void *v5;
  NPKProtoFeatureApplicationsForAccountIdentifierResponse *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  uint64_t v12;
  void *v13;
  unint64_t v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  unint64_t v19;
  void *v20;
  void *v21;
  NSObject *v22;
  void *v23;
  NSObject *v24;
  _BOOL4 v25;
  NSObject *v26;
  uint8_t v27[16];

  objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "objectForKey:", *(_QWORD *)(a1 + 40));
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  if (v3)
  {
    v4 = [NPKProtoFeatureApplicationsForAccountIdentifierResponse alloc];
    objc_msgSend(*(id *)(a1 + 48), "data");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    v6 = -[NPKProtoFeatureApplicationsForAccountIdentifierResponse initWithData:](v4, "initWithData:", v5);

    objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "removeObjectForKey:", *(_QWORD *)(a1 + 40));

    objc_msgSend(v3, "completionHandler");
    v8 = objc_claimAutoreleasedReturnValue();
    v9 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
    v10 = *(void **)(v9 + 40);
    *(_QWORD *)(v9 + 40) = v8;

    v11 = objc_alloc_init(MEMORY[0x24BDBCEB8]);
    v12 = *(_QWORD *)(*(_QWORD *)(a1 + 64) + 8);
    v13 = *(void **)(v12 + 40);
    *(_QWORD *)(v12 + 40) = v11;

    if (-[NPKProtoFeatureApplicationsForAccountIdentifierResponse deprecatedFeatureApplicationsCount](v6, "deprecatedFeatureApplicationsCount"))
    {
      v14 = 0;
      do
      {
        -[NPKProtoFeatureApplicationsForAccountIdentifierResponse deprecatedFeatureApplications](v6, "deprecatedFeatureApplications");
        v15 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v15, "objectAtIndexedSubscript:", v14);
        v16 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(MEMORY[0x24BDBCF20], "setWithObject:", objc_opt_class());
        v17 = (void *)objc_claimAutoreleasedReturnValue();
        NPKSecureUnarchiveArrayOfObjectsOfClasses(v16, v17);
        v18 = (void *)objc_claimAutoreleasedReturnValue();

        if (v18)
          objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 40), "addObjectsFromArray:", v18);

        ++v14;
      }
      while (v14 < -[NPKProtoFeatureApplicationsForAccountIdentifierResponse deprecatedFeatureApplicationsCount](v6, "deprecatedFeatureApplicationsCount"));
    }
    if (-[NPKProtoFeatureApplicationsForAccountIdentifierResponse featureApplicationsCount](v6, "featureApplicationsCount"))
    {
      v19 = 0;
      do
      {
        -[NPKProtoFeatureApplicationsForAccountIdentifierResponse featureApplications](v6, "featureApplications");
        v20 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v20, "objectAtIndexedSubscript:", v19);
        v21 = (void *)objc_claimAutoreleasedReturnValue();
        v22 = objc_opt_class();
        NPKSecureUnarchiveObject(v21, v22);
        v23 = (void *)objc_claimAutoreleasedReturnValue();

        if (v23)
          objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 40), "addObject:", v23);

        ++v19;
      }
      while (v19 < -[NPKProtoFeatureApplicationsForAccountIdentifierResponse featureApplicationsCount](v6, "featureApplicationsCount"));
    }

  }
  else
  {
    pk_Payment_log();
    v24 = objc_claimAutoreleasedReturnValue();
    v25 = os_log_type_enabled(v24, OS_LOG_TYPE_DEFAULT);

    if (v25)
    {
      pk_Payment_log();
      v26 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v26, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)v27 = 0;
        _os_log_impl(&dword_213518000, v26, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", v27, 2u);
      }

    }
  }

}

- (void)featureApplicationsForAccountIdentifier:(id)a3 completion:(id)a4
{
  id v6;
  id v7;
  NSObject *v8;
  id v9;
  id v10;
  _QWORD block[4];
  id v12;
  NPKPaymentWebServiceCompanionTargetDevice *v13;
  id v14;

  v6 = a3;
  v7 = a4;
  -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
  v8 = objc_claimAutoreleasedReturnValue();
  block[0] = MEMORY[0x24BDAC760];
  block[1] = 3221225472;
  block[2] = __96__NPKPaymentWebServiceCompanionTargetDevice_featureApplicationsForAccountIdentifier_completion___block_invoke;
  block[3] = &unk_24CFE84E8;
  v12 = v6;
  v13 = self;
  v14 = v7;
  v9 = v7;
  v10 = v6;
  dispatch_sync(v8, block);

}

void __96__NPKPaymentWebServiceCompanionTargetDevice_featureApplicationsForAccountIdentifier_completion___block_invoke(uint64_t a1)
{
  NSObject *v2;
  _BOOL4 v3;
  NSObject *v4;
  void *v5;
  NPKProtoFeatureApplicationsForAccountIdentifierRequest *v6;
  id v7;
  void *v8;
  void *v9;
  void *v10;
  uint64_t v11;
  void *v12;
  void *v13;
  NSObject *v14;
  void *v15;
  void *v16;
  void *v17;
  NSObject *v18;
  _BOOL4 v19;
  const char *v20;
  NSObject *v21;
  os_log_type_t v22;
  NSObject *v23;
  _BOOL4 v24;
  _QWORD v25[4];
  id v26;
  _QWORD v27[2];
  _QWORD v28[2];
  uint8_t buf[4];
  void *v30;
  uint64_t v31;

  v31 = *MEMORY[0x24BDAC8D0];
  pk_General_log();
  v2 = objc_claimAutoreleasedReturnValue();
  v3 = os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT);

  if (v3)
  {
    pk_General_log();
    v4 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      v5 = *(void **)(a1 + 32);
      *(_DWORD *)buf = 138412290;
      v30 = v5;
      _os_log_impl(&dword_213518000, v4, OS_LOG_TYPE_DEFAULT, "Notice: Feature applications for account with identifier %@. Sending message", buf, 0xCu);
    }

  }
  v6 = objc_alloc_init(NPKProtoFeatureApplicationsForAccountIdentifierRequest);
  -[NPKProtoFeatureApplicationsForAccountIdentifierRequest setAccountIdentifier:](v6, "setAccountIdentifier:", *(_QWORD *)(a1 + 32));
  v7 = objc_alloc(MEMORY[0x24BE4FE40]);
  -[NPKProtoFeatureApplicationsForAccountIdentifierRequest data](v6, "data");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v9 = (void *)objc_msgSend(v7, "initWithProtobufData:type:isResponse:", v8, 89, 0);

  v10 = *(void **)(a1 + 40);
  v11 = *MEMORY[0x24BE4FAC0];
  v27[0] = *MEMORY[0x24BE4FB18];
  v27[1] = v11;
  v28[0] = CFSTR("featureApplications");
  v28[1] = MEMORY[0x24BDBD1C8];
  objc_msgSend(MEMORY[0x24BDBCE70], "dictionaryWithObjects:forKeys:count:", v28, v27, 2);
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v10, "_sendProtobuf:responseExpected:extraOptions:", v9, 1, v12);
  v13 = (void *)objc_claimAutoreleasedReturnValue();

  if (v13)
  {
    if (*(_QWORD *)(a1 + 48))
    {
      v14 = MEMORY[0x2199B6780]();
      v25[0] = MEMORY[0x24BDAC760];
      v25[1] = 3221225472;
      v25[2] = __96__NPKPaymentWebServiceCompanionTargetDevice_featureApplicationsForAccountIdentifier_completion___block_invoke_716;
      v25[3] = &unk_24CFE7B80;
      v26 = *(id *)(a1 + 48);
      v15 = (void *)MEMORY[0x2199B6780](v25);
      v16 = *(void **)(a1 + 40);
      v17 = (void *)MEMORY[0x2199B6780](v14);
      objc_msgSend(v16, "_trackOutstandingRequestWithMessageIdentifier:completionHandler:errorHandler:", v13, v17, v15);

LABEL_15:
      goto LABEL_16;
    }
    pk_Payment_log();
    v23 = objc_claimAutoreleasedReturnValue();
    v24 = os_log_type_enabled(v23, OS_LOG_TYPE_DEFAULT);

    if (v24)
    {
      pk_Payment_log();
      v14 = objc_claimAutoreleasedReturnValue();
      if (!os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
        goto LABEL_15;
      *(_DWORD *)buf = 138412290;
      v30 = v13;
      v20 = "Warning: No response expected for message with identifier %@";
      v21 = v14;
      v22 = OS_LOG_TYPE_DEFAULT;
      goto LABEL_14;
    }
  }
  else
  {
    pk_Payment_log();
    v18 = objc_claimAutoreleasedReturnValue();
    v19 = os_log_type_enabled(v18, OS_LOG_TYPE_ERROR);

    if (v19)
    {
      pk_Payment_log();
      v14 = objc_claimAutoreleasedReturnValue();
      if (!os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
        goto LABEL_15;
      *(_DWORD *)buf = 138412290;
      v30 = v9;
      v20 = "Error: No message identifier for protobuf %@";
      v21 = v14;
      v22 = OS_LOG_TYPE_ERROR;
LABEL_14:
      _os_log_impl(&dword_213518000, v21, v22, v20, buf, 0xCu);
      goto LABEL_15;
    }
  }
LABEL_16:

}

void __96__NPKPaymentWebServiceCompanionTargetDevice_featureApplicationsForAccountIdentifier_completion___block_invoke_716(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  _BOOL4 v5;
  NSObject *v6;
  uint64_t v7;
  int v8;
  id v9;
  uint64_t v10;

  v10 = *MEMORY[0x24BDAC8D0];
  v3 = a2;
  pk_Payment_log();
  v4 = objc_claimAutoreleasedReturnValue();
  v5 = os_log_type_enabled(v4, OS_LOG_TYPE_ERROR);

  if (v5)
  {
    pk_Payment_log();
    v6 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      v8 = 138412290;
      v9 = v3;
      _os_log_impl(&dword_213518000, v6, OS_LOG_TYPE_ERROR, "Error: Provisioning service outstanding request error handler invoked: %@", (uint8_t *)&v8, 0xCu);
    }

  }
  v7 = *(_QWORD *)(a1 + 32);
  if (v7)
    (*(void (**)(uint64_t, _QWORD))(v7 + 16))(v7, 0);

}

- (void)provisionHomeKeyPassForSerialNumbers:(id)a3 completionHandler:(id)a4
{
  id v6;
  id v7;
  NSObject *v8;
  _BOOL4 v9;
  NSObject *v10;
  void *v11;
  NSObject *v12;
  void *v13;
  NSObject *v14;
  _BOOL4 v15;
  NSObject *v16;
  void *v17;
  uint64_t v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  _QWORD block[4];
  id v25;
  NPKPaymentWebServiceCompanionTargetDevice *v26;
  id v27;
  _QWORD v28[2];
  _QWORD v29[2];
  uint8_t buf[4];
  id v31;
  __int16 v32;
  void *v33;
  uint64_t v34;

  v34 = *MEMORY[0x24BDAC8D0];
  v6 = a3;
  v7 = a4;
  pk_Payment_log();
  v8 = objc_claimAutoreleasedReturnValue();
  v9 = os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT);

  if (v9)
  {
    pk_Payment_log();
    v10 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
    {
      v11 = (void *)MEMORY[0x2199B6780](v7);
      *(_DWORD *)buf = 138412546;
      v31 = v6;
      v32 = 2112;
      v33 = v11;
      _os_log_impl(&dword_213518000, v10, OS_LOG_TYPE_DEFAULT, "Notice: Target device - provision home key pass for serial numbers: %@ completion: %@", buf, 0x16u);

    }
  }
  if (-[NPKPaymentWebServiceCompanionTargetDevice _isHomeKeyProvisioningSupported](self, "_isHomeKeyProvisioningSupported"))
  {
    -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
    v12 = objc_claimAutoreleasedReturnValue();
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 3221225472;
    block[2] = __100__NPKPaymentWebServiceCompanionTargetDevice_provisionHomeKeyPassForSerialNumbers_completionHandler___block_invoke;
    block[3] = &unk_24CFE84E8;
    v25 = v6;
    v26 = self;
    v27 = v7;
    dispatch_sync(v12, block);

    v13 = v25;
LABEL_13:

    goto LABEL_14;
  }
  pk_Payment_log();
  v14 = objc_claimAutoreleasedReturnValue();
  v15 = os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT);

  if (v15)
  {
    pk_Payment_log();
    v16 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl(&dword_213518000, v16, OS_LOG_TYPE_DEFAULT, "Notice: Target device does not support home key provisioning.", buf, 2u);
    }

  }
  if (v7)
  {
    v17 = (void *)MEMORY[0x24BDD1540];
    v18 = *MEMORY[0x24BE6F2A8];
    v28[0] = *MEMORY[0x24BDD0FD8];
    objc_msgSend(MEMORY[0x24BDD1488], "bundleForClass:", objc_opt_class());
    v19 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v19, "localizedStringForKey:value:table:", CFSTR("HOMEKEY_ERROR_ALERT_CANNOT_ADD_KEY_UNSUPPORTED_ERROR_TITLE"), &stru_24CFF06D8, CFSTR("NanoPassKit-HomeKey"));
    v20 = (void *)objc_claimAutoreleasedReturnValue();
    v29[0] = v20;
    v28[1] = *MEMORY[0x24BDD0FF0];
    objc_msgSend(MEMORY[0x24BDD1488], "bundleForClass:", objc_opt_class());
    v21 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v21, "localizedStringForKey:value:table:", CFSTR("HOMEKEY_ERROR_ALERT_CANNOT_ADD_KEY_UNSUPPORTED_ERROR_MESSAGE"), &stru_24CFF06D8, CFSTR("NanoPassKit-HomeKey"));
    v22 = (void *)objc_claimAutoreleasedReturnValue();
    v29[1] = v22;
    objc_msgSend(MEMORY[0x24BDBCE70], "dictionaryWithObjects:forKeys:count:", v29, v28, 2);
    v23 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v17, "errorWithDomain:code:userInfo:", v18, 0, v23);
    v13 = (void *)objc_claimAutoreleasedReturnValue();

    (*((void (**)(id, _QWORD, void *))v7 + 2))(v7, 0, v13);
    goto LABEL_13;
  }
LABEL_14:

}

void __100__NPKPaymentWebServiceCompanionTargetDevice_provisionHomeKeyPassForSerialNumbers_completionHandler___block_invoke(uint64_t a1)
{
  NPKProtoProvisionHomeKeyPassForSerialNumbersRequest *v2;
  void *v3;
  uint64_t v4;
  NPKProtoProvisionHomeKeyPassForSerialNumbersRequest *v5;
  id v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  NSObject *v12;
  void *v13;
  void *v14;
  void *v15;
  NSObject *v16;
  _BOOL4 v17;
  int v18;
  const char *v19;
  NSObject *v20;
  os_log_type_t v21;
  NSObject *v22;
  _BOOL4 v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(uint64_t, uint64_t);
  void *v28;
  id v29;
  _QWORD v30[4];
  NPKProtoProvisionHomeKeyPassForSerialNumbersRequest *v31;
  uint8_t buf[4];
  void *v33;
  __int16 v34;
  int v35;
  uint64_t v36;
  _QWORD v37[2];

  v37[1] = *MEMORY[0x24BDAC8D0];
  v2 = objc_alloc_init(NPKProtoProvisionHomeKeyPassForSerialNumbersRequest);
  v3 = *(void **)(a1 + 32);
  v4 = MEMORY[0x24BDAC760];
  v30[0] = MEMORY[0x24BDAC760];
  v30[1] = 3221225472;
  v30[2] = __100__NPKPaymentWebServiceCompanionTargetDevice_provisionHomeKeyPassForSerialNumbers_completionHandler___block_invoke_2;
  v30[3] = &unk_24CFE8260;
  v5 = v2;
  v31 = v5;
  objc_msgSend(v3, "enumerateObjectsUsingBlock:", v30);
  v6 = objc_alloc(MEMORY[0x24BE4FE40]);
  -[NPKProtoProvisionHomeKeyPassForSerialNumbersRequest data](v5, "data");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = (void *)objc_msgSend(v6, "initWithProtobufData:type:isResponse:", v7, 92, 0);

  v9 = *(void **)(a1 + 40);
  v36 = *MEMORY[0x24BE4FB30];
  v37[0] = &unk_24D0566F0;
  objc_msgSend(MEMORY[0x24BDBCE70], "dictionaryWithObjects:forKeys:count:", v37, &v36, 1);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "_sendProtobuf:responseExpected:extraOptions:", v8, 1, v10);
  v11 = (void *)objc_claimAutoreleasedReturnValue();

  if (v11)
  {
    if (*(_QWORD *)(a1 + 48))
    {
      v12 = MEMORY[0x2199B6780]();
      v25 = v4;
      v26 = 3221225472;
      v27 = __100__NPKPaymentWebServiceCompanionTargetDevice_provisionHomeKeyPassForSerialNumbers_completionHandler___block_invoke_3;
      v28 = &unk_24CFE7B80;
      v29 = *(id *)(a1 + 48);
      v13 = (void *)MEMORY[0x2199B6780](&v25);
      v14 = *(void **)(a1 + 40);
      v15 = (void *)MEMORY[0x2199B6780](v12);
      objc_msgSend(v14, "_trackOutstandingRequestWithMessageIdentifier:completionHandler:errorHandler:", v11, v15, v13, v25, v26, v27, v28);

LABEL_11:
      goto LABEL_12;
    }
    pk_Payment_log();
    v22 = objc_claimAutoreleasedReturnValue();
    v23 = os_log_type_enabled(v22, OS_LOG_TYPE_DEFAULT);

    if (v23)
    {
      pk_Payment_log();
      v12 = objc_claimAutoreleasedReturnValue();
      if (!os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
        goto LABEL_11;
      v24 = objc_msgSend(v8, "type");
      *(_DWORD *)buf = 138412546;
      v33 = v11;
      v34 = 1024;
      v35 = v24;
      v19 = "Warning: No response expected for message with identifier %@ of type %hu";
      v20 = v12;
      v21 = OS_LOG_TYPE_DEFAULT;
      goto LABEL_10;
    }
  }
  else
  {
    pk_Payment_log();
    v16 = objc_claimAutoreleasedReturnValue();
    v17 = os_log_type_enabled(v16, OS_LOG_TYPE_ERROR);

    if (v17)
    {
      pk_Payment_log();
      v12 = objc_claimAutoreleasedReturnValue();
      if (!os_log_type_enabled(v12, OS_LOG_TYPE_ERROR))
        goto LABEL_11;
      v18 = objc_msgSend(v8, "type");
      *(_DWORD *)buf = 138412546;
      v33 = v8;
      v34 = 1024;
      v35 = v18;
      v19 = "Error: No message identifier for protobuf %@ with type %hu";
      v20 = v12;
      v21 = OS_LOG_TYPE_ERROR;
LABEL_10:
      _os_log_impl(&dword_213518000, v20, v21, v19, buf, 0x12u);
      goto LABEL_11;
    }
  }
LABEL_12:

}

uint64_t __100__NPKPaymentWebServiceCompanionTargetDevice_provisionHomeKeyPassForSerialNumbers_completionHandler___block_invoke_2(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(a1 + 32), "addSerialNumbers:", a2);
}

uint64_t __100__NPKPaymentWebServiceCompanionTargetDevice_provisionHomeKeyPassForSerialNumbers_completionHandler___block_invoke_3(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 32);
  if (result)
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(result + 16))(result, 0, a2);
  return result;
}

- (void)provisionHomeKeyPassForSerialNumbersResponse:(id)a3
{
  id v4;
  NSObject *v5;
  _BOOL4 v6;
  NSObject *v7;
  void *v8;
  void *v9;
  void *v10;
  NSObject *v11;
  NSObject *v12;
  _BOOL4 v13;
  NSObject *v14;
  uint64_t v15;
  uint8_t v16[16];
  _QWORD block[5];
  id v18;
  id v19;
  __int128 *p_buf;
  uint64_t *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t (*v26)(uint64_t, uint64_t);
  void (*v27)(uint64_t);
  id v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t (*v32)(uint64_t, uint64_t);
  void (*v33)(uint64_t);
  id v34;
  __int128 buf;
  uint64_t v36;
  uint64_t (*v37)(uint64_t, uint64_t);
  void (*v38)(uint64_t);
  id v39;
  uint64_t v40;

  v40 = *MEMORY[0x24BDAC8D0];
  v4 = a3;
  pk_Payment_log();
  v5 = objc_claimAutoreleasedReturnValue();
  v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    pk_Payment_log();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend(v4, "npkDescription");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      LODWORD(buf) = 138412290;
      *(_QWORD *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_213518000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Target provisionHomeKeyPassForSerialNumbersResponse: incoming protobuf %@", (uint8_t *)&buf, 0xCu);

    }
  }
  objc_msgSend(v4, "context");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "incomingResponseIdentifier");
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  *(_QWORD *)&buf = 0;
  *((_QWORD *)&buf + 1) = &buf;
  v36 = 0x3032000000;
  v37 = __Block_byref_object_copy__342;
  v38 = __Block_byref_object_dispose__343;
  v39 = 0;
  v29 = 0;
  v30 = &v29;
  v31 = 0x3032000000;
  v32 = __Block_byref_object_copy__23;
  v33 = __Block_byref_object_dispose__23;
  v34 = 0;
  v23 = 0;
  v24 = &v23;
  v25 = 0x3032000000;
  v26 = __Block_byref_object_copy__23;
  v27 = __Block_byref_object_dispose__23;
  v28 = 0;
  if (v10)
  {
    -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
    v11 = objc_claimAutoreleasedReturnValue();
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 3221225472;
    block[2] = __90__NPKPaymentWebServiceCompanionTargetDevice_provisionHomeKeyPassForSerialNumbersResponse___block_invoke;
    block[3] = &unk_24CFED060;
    block[4] = self;
    v18 = v10;
    v19 = v4;
    p_buf = &buf;
    v21 = &v29;
    v22 = &v23;
    dispatch_sync(v11, block);

  }
  else
  {
    pk_Payment_log();
    v12 = objc_claimAutoreleasedReturnValue();
    v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      pk_Payment_log();
      v14 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)v16 = 0;
        _os_log_impl(&dword_213518000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v16, 2u);
      }

    }
  }
  v15 = *(_QWORD *)(*((_QWORD *)&buf + 1) + 40);
  if (v15)
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v15, v30[5], v24[5]);
  _Block_object_dispose(&v23, 8);

  _Block_object_dispose(&v29, 8);
  _Block_object_dispose(&buf, 8);

}

void __90__NPKPaymentWebServiceCompanionTargetDevice_provisionHomeKeyPassForSerialNumbersResponse___block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;
  NPKProtoProvisionHomeKeyPassForSerialNumbersResponse *v4;
  NSObject *v5;
  NPKProtoProvisionHomeKeyPassForSerialNumbersResponse *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t i;
  uint64_t v16;
  id v17;
  void *v18;
  id v19;
  BOOL v20;
  id v21;
  _BOOL4 v22;
  void *v23;
  unint64_t v24;
  NSObject *v25;
  _BOOL4 v26;
  NSObject *v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  NSObject *v31;
  int v32;
  NSObject *v33;
  void *v34;
  NSObject *v35;
  _BOOL4 v36;
  uint64_t v37;
  NSObject *p_super;
  void *v39;
  void *v40;
  id obj;
  id v42;
  id v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  uint8_t buf[4];
  const char *v49;
  __int16 v50;
  id v51;
  __int16 v52;
  id v53;
  _BYTE v54[128];
  uint64_t v55;

  v55 = *MEMORY[0x24BDAC8D0];
  objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "objectForKey:", *(_QWORD *)(a1 + 40));
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  if (v3)
  {
    v4 = [NPKProtoProvisionHomeKeyPassForSerialNumbersResponse alloc];
    objc_msgSend(*(id *)(a1 + 48), "data");
    v5 = objc_claimAutoreleasedReturnValue();
    v6 = -[NPKProtoProvisionHomeKeyPassForSerialNumbersResponse initWithData:](v4, "initWithData:", v5);

    objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "removeObjectForKey:", *(_QWORD *)(a1 + 40));

    v39 = v3;
    objc_msgSend(v3, "completionHandler");
    v8 = objc_claimAutoreleasedReturnValue();
    v37 = a1;
    v9 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
    v10 = *(void **)(v9 + 40);
    *(_QWORD *)(v9 + 40) = v8;

    objc_msgSend(MEMORY[0x24BDBCEB8], "arrayWithCapacity:", -[NPKProtoProvisionHomeKeyPassForSerialNumbersResponse provisionedPassesDatasCount](v6, "provisionedPassesDatasCount"));
    v40 = (void *)objc_claimAutoreleasedReturnValue();
    v44 = 0u;
    v45 = 0u;
    v46 = 0u;
    v47 = 0u;
    p_super = &v6->super.super;
    -[NPKProtoProvisionHomeKeyPassForSerialNumbersResponse provisionedPassesDatas](v6, "provisionedPassesDatas");
    obj = (id)objc_claimAutoreleasedReturnValue();
    v11 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v44, v54, 16);
    if (!v11)
      goto LABEL_25;
    v12 = v11;
    v13 = *(_QWORD *)v45;
    v14 = 0x24BE6E000uLL;
    while (1)
    {
      for (i = 0; i != v12; ++i)
      {
        if (*(_QWORD *)v45 != v13)
          objc_enumerationMutation(obj);
        v16 = *(_QWORD *)(*((_QWORD *)&v44 + 1) + 8 * i);
        v17 = objc_alloc(*(Class *)(v14 + 3752));
        v43 = 0;
        v18 = (void *)objc_msgSend(v17, "initWithData:error:", v16, &v43);
        v19 = v43;
        if (v18)
          v20 = v19 == 0;
        else
          v20 = 0;
        if (v20)
        {
          v42 = 0;
          v5 = objc_msgSend(MEMORY[0x24BE6EBD8], "createWithFileDataAccessor:validationOptions:warnings:error:", v18, 2, 0, &v42);
          v21 = v42;
          -[NSObject paymentPass](v5, "paymentPass");
          v23 = (void *)objc_claimAutoreleasedReturnValue();
          if (v23)
          {
            objc_msgSend(v40, "addObject:", v23);
          }
          else
          {
            pk_Payment_log();
            v24 = v14;
            v25 = objc_claimAutoreleasedReturnValue();
            v26 = os_log_type_enabled(v25, OS_LOG_TYPE_ERROR);

            v14 = v24;
            if (v26)
            {
              pk_Payment_log();
              v27 = objc_claimAutoreleasedReturnValue();
              if (os_log_type_enabled(v27, OS_LOG_TYPE_ERROR))
              {
                *(_DWORD *)buf = 136315394;
                v49 = "-[NPKPaymentWebServiceCompanionTargetDevice provisionHomeKeyPassForSerialNumbersResponse:]_block_invoke";
                v50 = 2112;
                v51 = v21;
                _os_log_impl(&dword_213518000, v27, OS_LOG_TYPE_ERROR, "Error: %s Problem recreating pass from received pass data. Error: %@", buf, 0x16u);
              }

              v14 = v24;
            }
          }

          goto LABEL_22;
        }
        v21 = v19;
        if (v19)
        {
          pk_Payment_log();
          v5 = objc_claimAutoreleasedReturnValue();
          v22 = os_log_type_enabled(v5, OS_LOG_TYPE_ERROR);

          if (v22)
          {
            pk_Payment_log();
            v5 = objc_claimAutoreleasedReturnValue();
            if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
            {
              *(_DWORD *)buf = 136315650;
              v49 = "-[NPKPaymentWebServiceCompanionTargetDevice provisionHomeKeyPassForSerialNumbersResponse:]_block_invoke";
              v50 = 2112;
              v51 = v18;
              v52 = 2112;
              v53 = v21;
              _os_log_impl(&dword_213518000, v5, OS_LOG_TYPE_ERROR, "Error: %s Error creating data accessor (%@). Error: %@", buf, 0x20u);
            }
LABEL_22:

          }
        }

      }
      v12 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v44, v54, 16);
      if (!v12)
      {
LABEL_25:

        v28 = objc_msgSend(v40, "copy");
        v29 = *(_QWORD *)(*(_QWORD *)(v37 + 64) + 8);
        v30 = *(void **)(v29 + 40);
        *(_QWORD *)(v29 + 40) = v28;

        v31 = p_super;
        v32 = -[NSObject hasErrorData](p_super, "hasErrorData");
        if (v32)
        {
          -[NSObject errorData](p_super, "errorData");
          v5 = objc_claimAutoreleasedReturnValue();
          v33 = objc_opt_class();
          NPKSecureUnarchiveObject(v5, v33);
          v34 = (void *)objc_claimAutoreleasedReturnValue();
        }
        else
        {
          v34 = 0;
        }
        objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(v37 + 72) + 8) + 40), v34);
        if (v32)
        {

        }
        v3 = v39;
        goto LABEL_34;
      }
    }
  }
  pk_Payment_log();
  v35 = objc_claimAutoreleasedReturnValue();
  v36 = os_log_type_enabled(v35, OS_LOG_TYPE_DEFAULT);

  if (v36)
  {
    pk_Payment_log();
    v31 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v31, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl(&dword_213518000, v31, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", buf, 2u);
    }
LABEL_34:

  }
}

- (void)availableHomeKeyPassesWithCompletionHandler:(id)a3
{
  id v4;
  NSObject *v5;
  _BOOL4 v6;
  NSObject *v7;
  void *v8;
  NSObject *v9;
  NSObject *v10;
  _BOOL4 v11;
  NSObject *v12;
  void *v13;
  uint64_t v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  _QWORD v21[5];
  id v22;
  _QWORD v23[2];
  _QWORD v24[2];
  uint8_t buf[4];
  void *v26;
  uint64_t v27;

  v27 = *MEMORY[0x24BDAC8D0];
  v4 = a3;
  pk_Payment_log();
  v5 = objc_claimAutoreleasedReturnValue();
  v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    pk_Payment_log();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      v8 = (void *)MEMORY[0x2199B6780](v4);
      *(_DWORD *)buf = 138412290;
      v26 = v8;
      _os_log_impl(&dword_213518000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Target device - available home key passes with completion: %@", buf, 0xCu);

    }
  }
  if (-[NPKPaymentWebServiceCompanionTargetDevice _isHomeKeyProvisioningSupported](self, "_isHomeKeyProvisioningSupported"))
  {
    -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
    v9 = objc_claimAutoreleasedReturnValue();
    v21[0] = MEMORY[0x24BDAC760];
    v21[1] = 3221225472;
    v21[2] = __89__NPKPaymentWebServiceCompanionTargetDevice_availableHomeKeyPassesWithCompletionHandler___block_invoke;
    v21[3] = &unk_24CFE7E90;
    v21[4] = self;
    v22 = v4;
    dispatch_sync(v9, v21);

  }
  else
  {
    pk_Payment_log();
    v10 = objc_claimAutoreleasedReturnValue();
    v11 = os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT);

    if (v11)
    {
      pk_Payment_log();
      v12 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)buf = 0;
        _os_log_impl(&dword_213518000, v12, OS_LOG_TYPE_DEFAULT, "Notice: Target device does not support home key provisioning.", buf, 2u);
      }

    }
    if (v4)
    {
      v13 = (void *)MEMORY[0x24BDD1540];
      v14 = *MEMORY[0x24BE6F2A8];
      v23[0] = *MEMORY[0x24BDD0FD8];
      objc_msgSend(MEMORY[0x24BDD1488], "bundleForClass:", objc_opt_class());
      v15 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v15, "localizedStringForKey:value:table:", CFSTR("HOMEKEY_ERROR_ALERT_CANNOT_ADD_KEY_UNSUPPORTED_ERROR_TITLE"), &stru_24CFF06D8, CFSTR("NanoPassKit-HomeKey"));
      v16 = (void *)objc_claimAutoreleasedReturnValue();
      v24[0] = v16;
      v23[1] = *MEMORY[0x24BDD0FF0];
      objc_msgSend(MEMORY[0x24BDD1488], "bundleForClass:", objc_opt_class());
      v17 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v17, "localizedStringForKey:value:table:", CFSTR("HOMEKEY_ERROR_ALERT_CANNOT_ADD_KEY_UNSUPPORTED_ERROR_MESSAGE"), &stru_24CFF06D8, CFSTR("NanoPassKit-HomeKey"));
      v18 = (void *)objc_claimAutoreleasedReturnValue();
      v24[1] = v18;
      objc_msgSend(MEMORY[0x24BDBCE70], "dictionaryWithObjects:forKeys:count:", v24, v23, 2);
      v19 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v13, "errorWithDomain:code:userInfo:", v14, 0, v19);
      v20 = (void *)objc_claimAutoreleasedReturnValue();

      (*((void (**)(id, _QWORD, void *))v4 + 2))(v4, 0, v20);
    }
  }

}

void __89__NPKPaymentWebServiceCompanionTargetDevice_availableHomeKeyPassesWithCompletionHandler___block_invoke(uint64_t a1)
{
  NPKProtoAvailableHomeKeyPassesRequest *v2;
  id v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  NSObject *v9;
  void *v10;
  void *v11;
  void *v12;
  NSObject *v13;
  _BOOL4 v14;
  const char *v15;
  NSObject *v16;
  os_log_type_t v17;
  NSObject *v18;
  _BOOL4 v19;
  _QWORD v20[4];
  id v21;
  uint8_t buf[4];
  void *v23;
  __int16 v24;
  int v25;
  uint64_t v26;
  _QWORD v27[2];

  v27[1] = *MEMORY[0x24BDAC8D0];
  v2 = objc_alloc_init(NPKProtoAvailableHomeKeyPassesRequest);
  v3 = objc_alloc(MEMORY[0x24BE4FE40]);
  -[NPKProtoAvailableHomeKeyPassesRequest data](v2, "data");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = (void *)objc_msgSend(v3, "initWithProtobufData:type:isResponse:", v4, 93, 0);

  v6 = *(void **)(a1 + 32);
  v26 = *MEMORY[0x24BE4FB30];
  v27[0] = &unk_24D0566F0;
  objc_msgSend(MEMORY[0x24BDBCE70], "dictionaryWithObjects:forKeys:count:", v27, &v26, 1);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "_sendProtobuf:responseExpected:extraOptions:", v5, 1, v7);
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  if (v8)
  {
    if (*(_QWORD *)(a1 + 40))
    {
      v9 = MEMORY[0x2199B6780]();
      v20[0] = MEMORY[0x24BDAC760];
      v20[1] = 3221225472;
      v20[2] = __89__NPKPaymentWebServiceCompanionTargetDevice_availableHomeKeyPassesWithCompletionHandler___block_invoke_2;
      v20[3] = &unk_24CFE7B80;
      v21 = *(id *)(a1 + 40);
      v10 = (void *)MEMORY[0x2199B6780](v20);
      v11 = *(void **)(a1 + 32);
      v12 = (void *)MEMORY[0x2199B6780](v9);
      objc_msgSend(v11, "_trackOutstandingRequestWithMessageIdentifier:completionHandler:errorHandler:", v8, v12, v10);

LABEL_11:
      goto LABEL_12;
    }
    pk_Payment_log();
    v18 = objc_claimAutoreleasedReturnValue();
    v19 = os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT);

    if (v19)
    {
      pk_Payment_log();
      v9 = objc_claimAutoreleasedReturnValue();
      if (!os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
        goto LABEL_11;
      *(_DWORD *)buf = 138412546;
      v23 = v8;
      v24 = 1024;
      v25 = objc_msgSend(v5, "type");
      v15 = "Warning: No response expected for message with identifier %@ of type %hu";
      v16 = v9;
      v17 = OS_LOG_TYPE_DEFAULT;
      goto LABEL_10;
    }
  }
  else
  {
    pk_Payment_log();
    v13 = objc_claimAutoreleasedReturnValue();
    v14 = os_log_type_enabled(v13, OS_LOG_TYPE_ERROR);

    if (v14)
    {
      pk_Payment_log();
      v9 = objc_claimAutoreleasedReturnValue();
      if (!os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
        goto LABEL_11;
      *(_DWORD *)buf = 138412546;
      v23 = v5;
      v24 = 1024;
      v25 = objc_msgSend(v5, "type");
      v15 = "Error: No message identifier for protobuf %@ with type %hu";
      v16 = v9;
      v17 = OS_LOG_TYPE_ERROR;
LABEL_10:
      _os_log_impl(&dword_213518000, v16, v17, v15, buf, 0x12u);
      goto LABEL_11;
    }
  }
LABEL_12:

}

uint64_t __89__NPKPaymentWebServiceCompanionTargetDevice_availableHomeKeyPassesWithCompletionHandler___block_invoke_2(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 32);
  if (result)
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(result + 16))(result, 0, a2);
  return result;
}

- (void)availableHomeKeyPassesResponse:(id)a3
{
  id v4;
  NSObject *v5;
  _BOOL4 v6;
  NSObject *v7;
  void *v8;
  void *v9;
  void *v10;
  NSObject *v11;
  NSObject *v12;
  _BOOL4 v13;
  NSObject *v14;
  uint64_t v15;
  uint8_t v16[16];
  _QWORD block[5];
  id v18;
  id v19;
  __int128 *p_buf;
  uint64_t *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t (*v26)(uint64_t, uint64_t);
  void (*v27)(uint64_t);
  id v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t (*v32)(uint64_t, uint64_t);
  void (*v33)(uint64_t);
  id v34;
  __int128 buf;
  uint64_t v36;
  uint64_t (*v37)(uint64_t, uint64_t);
  void (*v38)(uint64_t);
  id v39;
  uint64_t v40;

  v40 = *MEMORY[0x24BDAC8D0];
  v4 = a3;
  pk_Payment_log();
  v5 = objc_claimAutoreleasedReturnValue();
  v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    pk_Payment_log();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend(v4, "npkDescription");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      LODWORD(buf) = 138412290;
      *(_QWORD *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_213518000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Target availableHomeKeyPassesResponse: incoming protobuf %@", (uint8_t *)&buf, 0xCu);

    }
  }
  objc_msgSend(v4, "context");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "incomingResponseIdentifier");
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  *(_QWORD *)&buf = 0;
  *((_QWORD *)&buf + 1) = &buf;
  v36 = 0x3032000000;
  v37 = __Block_byref_object_copy__342;
  v38 = __Block_byref_object_dispose__343;
  v39 = 0;
  v29 = 0;
  v30 = &v29;
  v31 = 0x3032000000;
  v32 = __Block_byref_object_copy__23;
  v33 = __Block_byref_object_dispose__23;
  v34 = 0;
  v23 = 0;
  v24 = &v23;
  v25 = 0x3032000000;
  v26 = __Block_byref_object_copy__23;
  v27 = __Block_byref_object_dispose__23;
  v28 = 0;
  if (v10)
  {
    -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
    v11 = objc_claimAutoreleasedReturnValue();
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 3221225472;
    block[2] = __76__NPKPaymentWebServiceCompanionTargetDevice_availableHomeKeyPassesResponse___block_invoke;
    block[3] = &unk_24CFED060;
    block[4] = self;
    v18 = v10;
    v19 = v4;
    p_buf = &buf;
    v21 = &v29;
    v22 = &v23;
    dispatch_sync(v11, block);

  }
  else
  {
    pk_Payment_log();
    v12 = objc_claimAutoreleasedReturnValue();
    v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      pk_Payment_log();
      v14 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)v16 = 0;
        _os_log_impl(&dword_213518000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v16, 2u);
      }

    }
  }
  v15 = *(_QWORD *)(*((_QWORD *)&buf + 1) + 40);
  if (v15)
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v15, v30[5], v24[5]);
  _Block_object_dispose(&v23, 8);

  _Block_object_dispose(&v29, 8);
  _Block_object_dispose(&buf, 8);

}

void __76__NPKPaymentWebServiceCompanionTargetDevice_availableHomeKeyPassesResponse___block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;
  NPKProtoAvailableHomeKeyPassesResponse *v4;
  NSObject *v5;
  NPKProtoAvailableHomeKeyPassesResponse *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t i;
  uint64_t v16;
  id v17;
  void *v18;
  id v19;
  BOOL v20;
  id v21;
  _BOOL4 v22;
  void *v23;
  unint64_t v24;
  NSObject *v25;
  _BOOL4 v26;
  NSObject *v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  NSObject *v31;
  int v32;
  NSObject *v33;
  void *v34;
  NSObject *v35;
  _BOOL4 v36;
  uint64_t v37;
  NSObject *p_super;
  void *v39;
  void *v40;
  id obj;
  id v42;
  id v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  uint8_t buf[4];
  const char *v49;
  __int16 v50;
  id v51;
  __int16 v52;
  id v53;
  _BYTE v54[128];
  uint64_t v55;

  v55 = *MEMORY[0x24BDAC8D0];
  objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "objectForKey:", *(_QWORD *)(a1 + 40));
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  if (v3)
  {
    v4 = [NPKProtoAvailableHomeKeyPassesResponse alloc];
    objc_msgSend(*(id *)(a1 + 48), "data");
    v5 = objc_claimAutoreleasedReturnValue();
    v6 = -[NPKProtoAvailableHomeKeyPassesResponse initWithData:](v4, "initWithData:", v5);

    objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "removeObjectForKey:", *(_QWORD *)(a1 + 40));

    v39 = v3;
    objc_msgSend(v3, "completionHandler");
    v8 = objc_claimAutoreleasedReturnValue();
    v37 = a1;
    v9 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
    v10 = *(void **)(v9 + 40);
    *(_QWORD *)(v9 + 40) = v8;

    objc_msgSend(MEMORY[0x24BDBCEB8], "arrayWithCapacity:", -[NPKProtoAvailableHomeKeyPassesResponse passesDatasCount](v6, "passesDatasCount"));
    v40 = (void *)objc_claimAutoreleasedReturnValue();
    v44 = 0u;
    v45 = 0u;
    v46 = 0u;
    v47 = 0u;
    p_super = &v6->super.super;
    -[NPKProtoAvailableHomeKeyPassesResponse passesDatas](v6, "passesDatas");
    obj = (id)objc_claimAutoreleasedReturnValue();
    v11 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v44, v54, 16);
    if (!v11)
      goto LABEL_25;
    v12 = v11;
    v13 = *(_QWORD *)v45;
    v14 = 0x24BE6E000uLL;
    while (1)
    {
      for (i = 0; i != v12; ++i)
      {
        if (*(_QWORD *)v45 != v13)
          objc_enumerationMutation(obj);
        v16 = *(_QWORD *)(*((_QWORD *)&v44 + 1) + 8 * i);
        v17 = objc_alloc(*(Class *)(v14 + 3752));
        v43 = 0;
        v18 = (void *)objc_msgSend(v17, "initWithData:error:", v16, &v43);
        v19 = v43;
        if (v18)
          v20 = v19 == 0;
        else
          v20 = 0;
        if (v20)
        {
          v42 = 0;
          v5 = objc_msgSend(MEMORY[0x24BE6EBD8], "createWithFileDataAccessor:validationOptions:warnings:error:", v18, 2, 0, &v42);
          v21 = v42;
          -[NSObject paymentPass](v5, "paymentPass");
          v23 = (void *)objc_claimAutoreleasedReturnValue();
          if (v23)
          {
            objc_msgSend(v40, "addObject:", v23);
          }
          else
          {
            pk_Payment_log();
            v24 = v14;
            v25 = objc_claimAutoreleasedReturnValue();
            v26 = os_log_type_enabled(v25, OS_LOG_TYPE_ERROR);

            v14 = v24;
            if (v26)
            {
              pk_Payment_log();
              v27 = objc_claimAutoreleasedReturnValue();
              if (os_log_type_enabled(v27, OS_LOG_TYPE_ERROR))
              {
                *(_DWORD *)buf = 136315394;
                v49 = "-[NPKPaymentWebServiceCompanionTargetDevice availableHomeKeyPassesResponse:]_block_invoke";
                v50 = 2112;
                v51 = v21;
                _os_log_impl(&dword_213518000, v27, OS_LOG_TYPE_ERROR, "Error: %s Problem recreating pass from received pass data. Error: %@", buf, 0x16u);
              }

              v14 = v24;
            }
          }

          goto LABEL_22;
        }
        v21 = v19;
        if (v19)
        {
          pk_Payment_log();
          v5 = objc_claimAutoreleasedReturnValue();
          v22 = os_log_type_enabled(v5, OS_LOG_TYPE_ERROR);

          if (v22)
          {
            pk_Payment_log();
            v5 = objc_claimAutoreleasedReturnValue();
            if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
            {
              *(_DWORD *)buf = 136315650;
              v49 = "-[NPKPaymentWebServiceCompanionTargetDevice availableHomeKeyPassesResponse:]_block_invoke";
              v50 = 2112;
              v51 = v18;
              v52 = 2112;
              v53 = v21;
              _os_log_impl(&dword_213518000, v5, OS_LOG_TYPE_ERROR, "Error: %s Error creating data accessor (%@). Error: %@", buf, 0x20u);
            }
LABEL_22:

          }
        }

      }
      v12 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v44, v54, 16);
      if (!v12)
      {
LABEL_25:

        v28 = objc_msgSend(v40, "copy");
        v29 = *(_QWORD *)(*(_QWORD *)(v37 + 64) + 8);
        v30 = *(void **)(v29 + 40);
        *(_QWORD *)(v29 + 40) = v28;

        v31 = p_super;
        v32 = -[NSObject hasErrorData](p_super, "hasErrorData");
        if (v32)
        {
          -[NSObject errorData](p_super, "errorData");
          v5 = objc_claimAutoreleasedReturnValue();
          v33 = objc_opt_class();
          NPKSecureUnarchiveObject(v5, v33);
          v34 = (void *)objc_claimAutoreleasedReturnValue();
        }
        else
        {
          v34 = 0;
        }
        objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(v37 + 72) + 8) + 40), v34);
        if (v32)
        {

        }
        v3 = v39;
        goto LABEL_34;
      }
    }
  }
  pk_Payment_log();
  v35 = objc_claimAutoreleasedReturnValue();
  v36 = os_log_type_enabled(v35, OS_LOG_TYPE_DEFAULT);

  if (v36)
  {
    pk_Payment_log();
    v31 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v31, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl(&dword_213518000, v31, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", buf, 2u);
    }
LABEL_34:

  }
}

- (void)generateAuxiliaryCapabilitiesForRequirements:(id)a3 completion:(id)a4
{
  id v6;
  id v7;
  NSObject *v8;
  NSObject *v9;
  _BOOL4 v10;
  NSObject *v11;
  void *v12;
  uint8_t v13[8];
  _QWORD block[4];
  id v15;
  NPKPaymentWebServiceCompanionTargetDevice *v16;
  id v17;

  v6 = a3;
  v7 = a4;
  if (-[NPKPaymentWebServiceCompanionTargetDevice _isAuxiliaryRegistrationSupported](self, "_isAuxiliaryRegistrationSupported"))
  {
    -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
    v8 = objc_claimAutoreleasedReturnValue();
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 3221225472;
    block[2] = __101__NPKPaymentWebServiceCompanionTargetDevice_generateAuxiliaryCapabilitiesForRequirements_completion___block_invoke;
    block[3] = &unk_24CFED5E8;
    v15 = v6;
    v16 = self;
    v17 = v7;
    dispatch_sync(v8, block);

  }
  else
  {
    pk_Payment_log();
    v9 = objc_claimAutoreleasedReturnValue();
    v10 = os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT);

    if (v10)
    {
      pk_Payment_log();
      v11 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)v13 = 0;
        _os_log_impl(&dword_213518000, v11, OS_LOG_TYPE_DEFAULT, "Notice: Target device does not support generateAuxiliaryCapabilitiesForRequirements:completion: message.", v13, 2u);
      }

    }
    if (v7)
    {
      objc_msgSend(MEMORY[0x24BDD1540], "errorWithDomain:code:userInfo:", CFSTR("com.apple.NPKErrorDomain"), -1006, 0);
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      (*((void (**)(id, _QWORD, void *))v7 + 2))(v7, 0, v12);

    }
  }

}

void __101__NPKPaymentWebServiceCompanionTargetDevice_generateAuxiliaryCapabilitiesForRequirements_completion___block_invoke(uint64_t a1)
{
  NSObject *v2;
  _BOOL4 v3;
  NSObject *v4;
  void *v5;
  void *v6;
  NPKProtoGenerateAuxiliaryCapabilitiesRequest *v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t i;
  void *v14;
  id v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  NSObject *v21;
  void *v22;
  void *v23;
  void *v24;
  NSObject *v25;
  _BOOL4 v26;
  const char *v27;
  NSObject *v28;
  os_log_type_t v29;
  NSObject *v30;
  _BOOL4 v31;
  _QWORD v32[4];
  id v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  uint64_t v38;
  void *v39;
  uint8_t v40[128];
  uint8_t buf[4];
  void *v42;
  __int16 v43;
  void *v44;
  uint64_t v45;

  v45 = *MEMORY[0x24BDAC8D0];
  pk_General_log();
  v2 = objc_claimAutoreleasedReturnValue();
  v3 = os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT);

  if (v3)
  {
    pk_General_log();
    v4 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      v5 = *(void **)(a1 + 32);
      v6 = (void *)MEMORY[0x2199B6780](*(_QWORD *)(a1 + 48));
      *(_DWORD *)buf = 138478083;
      v42 = v5;
      v43 = 2112;
      v44 = v6;
      _os_log_impl(&dword_213518000, v4, OS_LOG_TYPE_DEFAULT, "Notice: Target device - Request to generate auxiliary capabilities for requirements: %{private}@, completion: %@", buf, 0x16u);

    }
  }
  v7 = objc_alloc_init(NPKProtoGenerateAuxiliaryCapabilitiesRequest);
  v8 = objc_alloc_init(MEMORY[0x24BDBCEB8]);
  v34 = 0u;
  v35 = 0u;
  v36 = 0u;
  v37 = 0u;
  v9 = *(id *)(a1 + 32);
  v10 = objc_msgSend(v9, "countByEnumeratingWithState:objects:count:", &v34, v40, 16);
  if (v10)
  {
    v11 = v10;
    v12 = *(_QWORD *)v35;
    do
    {
      for (i = 0; i != v11; ++i)
      {
        if (*(_QWORD *)v35 != v12)
          objc_enumerationMutation(v9);
        NPKSecureArchiveObject(*(void **)(*((_QWORD *)&v34 + 1) + 8 * i));
        v14 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v8, "addObject:", v14);

      }
      v11 = objc_msgSend(v9, "countByEnumeratingWithState:objects:count:", &v34, v40, 16);
    }
    while (v11);
  }

  -[NPKProtoGenerateAuxiliaryCapabilitiesRequest setRegistrationRequirements:](v7, "setRegistrationRequirements:", v8);
  v15 = objc_alloc(MEMORY[0x24BE4FE40]);
  -[NPKProtoGenerateAuxiliaryCapabilitiesRequest data](v7, "data");
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  v17 = (void *)objc_msgSend(v15, "initWithProtobufData:type:isResponse:", v16, 152, 0);

  v18 = *(void **)(a1 + 40);
  v38 = *MEMORY[0x24BE4FB30];
  v39 = &unk_24D0566F0;
  objc_msgSend(MEMORY[0x24BDBCE70], "dictionaryWithObjects:forKeys:count:", &v39, &v38, 1);
  v19 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v18, "_sendProtobuf:responseExpected:extraOptions:", v17, 1, v19);
  v20 = (void *)objc_claimAutoreleasedReturnValue();

  if (v20)
  {
    if (*(_QWORD *)(a1 + 48))
    {
      v21 = MEMORY[0x2199B6780]();
      v32[0] = MEMORY[0x24BDAC760];
      v32[1] = 3221225472;
      v32[2] = __101__NPKPaymentWebServiceCompanionTargetDevice_generateAuxiliaryCapabilitiesForRequirements_completion___block_invoke_730;
      v32[3] = &unk_24CFE7B80;
      v33 = *(id *)(a1 + 48);
      v22 = (void *)MEMORY[0x2199B6780](v32);
      v23 = *(void **)(a1 + 40);
      v24 = (void *)MEMORY[0x2199B6780](v21);
      objc_msgSend(v23, "_trackOutstandingRequestWithMessageIdentifier:completionHandler:errorHandler:", v20, v24, v22);

LABEL_22:
      goto LABEL_23;
    }
    pk_Payment_log();
    v30 = objc_claimAutoreleasedReturnValue();
    v31 = os_log_type_enabled(v30, OS_LOG_TYPE_DEFAULT);

    if (v31)
    {
      pk_Payment_log();
      v21 = objc_claimAutoreleasedReturnValue();
      if (!os_log_type_enabled(v21, OS_LOG_TYPE_DEFAULT))
        goto LABEL_22;
      *(_DWORD *)buf = 138412290;
      v42 = v20;
      v27 = "Warning: No response expected for message with identifier %@";
      v28 = v21;
      v29 = OS_LOG_TYPE_DEFAULT;
      goto LABEL_21;
    }
  }
  else
  {
    pk_Payment_log();
    v25 = objc_claimAutoreleasedReturnValue();
    v26 = os_log_type_enabled(v25, OS_LOG_TYPE_ERROR);

    if (v26)
    {
      pk_Payment_log();
      v21 = objc_claimAutoreleasedReturnValue();
      if (!os_log_type_enabled(v21, OS_LOG_TYPE_ERROR))
        goto LABEL_22;
      *(_DWORD *)buf = 138412290;
      v42 = v17;
      v27 = "Error: No message identifier for protobuf %@";
      v28 = v21;
      v29 = OS_LOG_TYPE_ERROR;
LABEL_21:
      _os_log_impl(&dword_213518000, v28, v29, v27, buf, 0xCu);
      goto LABEL_22;
    }
  }
LABEL_23:

}

void __101__NPKPaymentWebServiceCompanionTargetDevice_generateAuxiliaryCapabilitiesForRequirements_completion___block_invoke_730(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  _BOOL4 v5;
  NSObject *v6;
  uint64_t v7;
  int v8;
  id v9;
  uint64_t v10;

  v10 = *MEMORY[0x24BDAC8D0];
  v3 = a2;
  pk_Payment_log();
  v4 = objc_claimAutoreleasedReturnValue();
  v5 = os_log_type_enabled(v4, OS_LOG_TYPE_ERROR);

  if (v5)
  {
    pk_Payment_log();
    v6 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      v8 = 138412290;
      v9 = v3;
      _os_log_impl(&dword_213518000, v6, OS_LOG_TYPE_ERROR, "Error: Provisioning service outstanding request error handler invoked: %@", (uint8_t *)&v8, 0xCu);
    }

  }
  v7 = *(_QWORD *)(a1 + 32);
  if (v7)
    (*(void (**)(uint64_t, _QWORD, id))(v7 + 16))(v7, 0, v3);

}

- (void)generateAuxiliaryCapabilitiesResponse:(id)a3
{
  id v4;
  NSObject *v5;
  _BOOL4 v6;
  NSObject *v7;
  void *v8;
  void *v9;
  void *v10;
  NSObject *v11;
  NSObject *v12;
  _BOOL4 v13;
  NSObject *v14;
  uint64_t v15;
  uint8_t v16[16];
  _QWORD block[5];
  id v18;
  id v19;
  __int128 *p_buf;
  uint64_t *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t (*v26)(uint64_t, uint64_t);
  void (*v27)(uint64_t);
  id v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t (*v32)(uint64_t, uint64_t);
  void (*v33)(uint64_t);
  id v34;
  __int128 buf;
  uint64_t v36;
  uint64_t (*v37)(uint64_t, uint64_t);
  void (*v38)(uint64_t);
  id v39;
  uint64_t v40;

  v40 = *MEMORY[0x24BDAC8D0];
  v4 = a3;
  pk_Payment_log();
  v5 = objc_claimAutoreleasedReturnValue();
  v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    pk_Payment_log();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend(v4, "npkDescription");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      LODWORD(buf) = 138412290;
      *(_QWORD *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_213518000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Target generateAuxiliaryCapabilitiesResponse: incoming protobuf %@", (uint8_t *)&buf, 0xCu);

    }
  }
  objc_msgSend(v4, "context");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "incomingResponseIdentifier");
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  *(_QWORD *)&buf = 0;
  *((_QWORD *)&buf + 1) = &buf;
  v36 = 0x3032000000;
  v37 = __Block_byref_object_copy__342;
  v38 = __Block_byref_object_dispose__343;
  v39 = 0;
  v29 = 0;
  v30 = &v29;
  v31 = 0x3032000000;
  v32 = __Block_byref_object_copy__23;
  v33 = __Block_byref_object_dispose__23;
  v34 = 0;
  v23 = 0;
  v24 = &v23;
  v25 = 0x3032000000;
  v26 = __Block_byref_object_copy__23;
  v27 = __Block_byref_object_dispose__23;
  v28 = 0;
  if (v10)
  {
    -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
    v11 = objc_claimAutoreleasedReturnValue();
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 3221225472;
    block[2] = __83__NPKPaymentWebServiceCompanionTargetDevice_generateAuxiliaryCapabilitiesResponse___block_invoke;
    block[3] = &unk_24CFED060;
    block[4] = self;
    v18 = v10;
    v19 = v4;
    p_buf = &buf;
    v21 = &v29;
    v22 = &v23;
    dispatch_sync(v11, block);

  }
  else
  {
    pk_Payment_log();
    v12 = objc_claimAutoreleasedReturnValue();
    v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      pk_Payment_log();
      v14 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)v16 = 0;
        _os_log_impl(&dword_213518000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v16, 2u);
      }

    }
  }
  v15 = *(_QWORD *)(*((_QWORD *)&buf + 1) + 40);
  if (v15)
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v15, v30[5], v24[5]);
  _Block_object_dispose(&v23, 8);

  _Block_object_dispose(&v29, 8);
  _Block_object_dispose(&buf, 8);

}

void __83__NPKPaymentWebServiceCompanionTargetDevice_generateAuxiliaryCapabilitiesResponse___block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;
  NPKProtoGenerateAuxiliaryCapabilitiesResponse *v4;
  void *v5;
  NPKProtoGenerateAuxiliaryCapabilitiesResponse *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  uint64_t v12;
  void *v13;
  void *v14;
  uint64_t v15;
  char *i;
  uint64_t v17;
  void *v18;
  void *v19;
  NSObject *v20;
  void *v21;
  void *v22;
  void *v23;
  NSObject *v24;
  uint64_t v25;
  void *v26;
  _BOOL4 v27;
  NSObject *v28;
  void *v29;
  NSObject *v30;
  _BOOL4 v31;
  NSObject *v32;
  uint8_t buf[16];

  objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "objectForKey:", *(_QWORD *)(a1 + 40));
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  if (v3)
  {
    v4 = [NPKProtoGenerateAuxiliaryCapabilitiesResponse alloc];
    objc_msgSend(*(id *)(a1 + 48), "data");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    v6 = -[NPKProtoGenerateAuxiliaryCapabilitiesResponse initWithData:](v4, "initWithData:", v5);

    objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "removeObjectForKey:", *(_QWORD *)(a1 + 40));

    objc_msgSend(v3, "completionHandler");
    v8 = objc_claimAutoreleasedReturnValue();
    v9 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
    v10 = *(void **)(v9 + 40);
    *(_QWORD *)(v9 + 40) = v8;

    v11 = objc_alloc_init(MEMORY[0x24BDD1650]);
    v12 = *(_QWORD *)(*(_QWORD *)(a1 + 64) + 8);
    v13 = *(void **)(v12 + 40);
    *(_QWORD *)(v12 + 40) = v11;

    -[NPKProtoGenerateAuxiliaryCapabilitiesResponse keyMaterialValues](v6, "keyMaterialValues");
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    v15 = objc_msgSend(v14, "count");

    -[NPKProtoGenerateAuxiliaryCapabilitiesResponse requirementKeys](v6, "requirementKeys");
    i = (char *)objc_claimAutoreleasedReturnValue();
    v17 = objc_msgSend(i, "count");

    if (v17 == v15 && v15)
    {
      for (i = 0; i != (char *)v15; ++i)
      {
        -[NPKProtoGenerateAuxiliaryCapabilitiesResponse requirementKeys](v6, "requirementKeys");
        v18 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v18, "objectAtIndexedSubscript:", i);
        v19 = (void *)objc_claimAutoreleasedReturnValue();

        if (v19)
        {
          v20 = objc_opt_class();
          NPKSecureUnarchiveObject(v19, v20);
          v21 = (void *)objc_claimAutoreleasedReturnValue();
          -[NPKProtoGenerateAuxiliaryCapabilitiesResponse keyMaterialValues](v6, "keyMaterialValues");
          v22 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v22, "objectAtIndexedSubscript:", i);
          v23 = (void *)objc_claimAutoreleasedReturnValue();

          if (v23)
          {
            v24 = objc_opt_class();
            NPKSecureUnarchiveObject(v23, v24);
            v25 = objc_claimAutoreleasedReturnValue();
            if (v25)
            {
              v26 = (void *)v25;
              objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 40), "setObject:forKey:", v25, v21);

            }
          }

        }
      }
    }
    v27 = -[NPKProtoGenerateAuxiliaryCapabilitiesResponse hasErrorData](v6, "hasErrorData");
    if (v27)
    {
      -[NPKProtoGenerateAuxiliaryCapabilitiesResponse errorData](v6, "errorData");
      i = (char *)objc_claimAutoreleasedReturnValue();
      v28 = objc_opt_class();
      NPKSecureUnarchiveObject(i, v28);
      v29 = (void *)objc_claimAutoreleasedReturnValue();
    }
    else
    {
      v29 = 0;
    }
    objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 72) + 8) + 40), v29);
    if (v27)
    {

    }
  }
  else
  {
    pk_Payment_log();
    v30 = objc_claimAutoreleasedReturnValue();
    v31 = os_log_type_enabled(v30, OS_LOG_TYPE_DEFAULT);

    if (v31)
    {
      pk_Payment_log();
      v32 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v32, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)buf = 0;
        _os_log_impl(&dword_213518000, v32, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", buf, 2u);
      }

    }
  }

}

- (void)createFidoKeyForRelyingParty:(id)a3 relyingPartyAccountHash:(id)a4 challenge:(id)a5 externalizedAuth:(id)a6 completion:(id)a7
{
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  NSObject *v17;
  NSObject *v18;
  _BOOL4 v19;
  NSObject *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  uint64_t v27;
  void *v28;
  id v29;
  uint8_t buf[16];
  _QWORD block[4];
  id v32;
  id v33;
  id v34;
  id v35;
  NPKPaymentWebServiceCompanionTargetDevice *v36;
  id v37;
  _QWORD v38[2];
  _QWORD v39[4];

  v39[2] = *MEMORY[0x24BDAC8D0];
  v12 = a3;
  v13 = a4;
  v14 = a5;
  v15 = a6;
  v16 = a7;
  if (-[NPKPaymentWebServiceCompanionTargetDevice _isUnifiedAccessProvisioningSupported](self, "_isUnifiedAccessProvisioningSupported"))
  {
    -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
    v17 = objc_claimAutoreleasedReturnValue();
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 3221225472;
    block[2] = __136__NPKPaymentWebServiceCompanionTargetDevice_createFidoKeyForRelyingParty_relyingPartyAccountHash_challenge_externalizedAuth_completion___block_invoke;
    block[3] = &unk_24CFEDB90;
    v32 = v12;
    v33 = v13;
    v34 = v14;
    v35 = v15;
    v36 = self;
    v37 = v16;
    dispatch_sync(v17, block);

  }
  else
  {
    pk_Payment_log();
    v18 = objc_claimAutoreleasedReturnValue();
    v19 = os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT);

    if (v19)
    {
      pk_Payment_log();
      v20 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v20, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)buf = 0;
        _os_log_impl(&dword_213518000, v20, OS_LOG_TYPE_DEFAULT, "Notice: Target device does not support unified access provisioning.", buf, 2u);
      }

    }
    if (v16)
    {
      v28 = (void *)MEMORY[0x24BDD1540];
      v27 = *MEMORY[0x24BE6F2A8];
      v38[0] = *MEMORY[0x24BDD0FD8];
      v29 = v12;
      objc_msgSend(MEMORY[0x24BDD1488], "bundleForClass:", objc_opt_class());
      v21 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v21, "localizedStringForKey:value:table:", CFSTR("UNIFIED_ACCESS_ERROR_ALERT_CANNOT_ADD_KEY_TITLE"), &stru_24CFF06D8, CFSTR("NanoPassKitUI-Hydra"));
      v22 = (void *)objc_claimAutoreleasedReturnValue();
      v39[0] = v22;
      v38[1] = *MEMORY[0x24BDD0FF0];
      objc_msgSend(MEMORY[0x24BDD1488], "bundleForClass:", objc_opt_class());
      v23 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v23, "localizedStringForKey:value:table:", CFSTR("UNIFIED_ACCESS_ERROR_ALERT_CANNOT_ADD_KEY_MESSAGE"), &stru_24CFF06D8, CFSTR("NanoPassKitUI-Hydra"));
      v24 = (void *)objc_claimAutoreleasedReturnValue();
      v39[1] = v24;
      objc_msgSend(MEMORY[0x24BDBCE70], "dictionaryWithObjects:forKeys:count:", v39, v38, 2);
      v25 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v28, "errorWithDomain:code:userInfo:", v27, 4, v25);
      v26 = (void *)objc_claimAutoreleasedReturnValue();

      v12 = v29;
      (*((void (**)(id, _QWORD, _QWORD, _QWORD, void *))v16 + 2))(v16, 0, 0, 0, v26);

    }
  }

}

void __136__NPKPaymentWebServiceCompanionTargetDevice_createFidoKeyForRelyingParty_relyingPartyAccountHash_challenge_externalizedAuth_completion___block_invoke(uint64_t a1)
{
  NSObject *v2;
  _BOOL4 v3;
  NSObject *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  NPKProtoCreateFidoKeyRequest *v10;
  id v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  NSObject *v17;
  void *v18;
  void *v19;
  void *v20;
  NSObject *v21;
  _BOOL4 v22;
  const char *v23;
  NSObject *v24;
  os_log_type_t v25;
  NSObject *v26;
  _BOOL4 v27;
  _QWORD v28[4];
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint8_t buf[4];
  void *v33;
  __int16 v34;
  uint64_t v35;
  __int16 v36;
  uint64_t v37;
  __int16 v38;
  uint64_t v39;
  __int16 v40;
  void *v41;
  uint64_t v42;

  v42 = *MEMORY[0x24BDAC8D0];
  pk_General_log();
  v2 = objc_claimAutoreleasedReturnValue();
  v3 = os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT);

  if (v3)
  {
    pk_General_log();
    v4 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      v5 = *(void **)(a1 + 32);
      v6 = *(_QWORD *)(a1 + 40);
      v7 = *(_QWORD *)(a1 + 48);
      v8 = *(_QWORD *)(a1 + 56);
      v9 = (void *)MEMORY[0x2199B6780](*(_QWORD *)(a1 + 72));
      *(_DWORD *)buf = 138413314;
      v33 = v5;
      v34 = 2112;
      v35 = v6;
      v36 = 2112;
      v37 = v7;
      v38 = 2112;
      v39 = v8;
      v40 = 2112;
      v41 = v9;
      _os_log_impl(&dword_213518000, v4, OS_LOG_TYPE_DEFAULT, "Notice: Target create fido key for relying party %@ accountHash %@ challenge %@ externalizedauth %@ with completion %@", buf, 0x34u);

    }
  }
  v10 = objc_alloc_init(NPKProtoCreateFidoKeyRequest);
  -[NPKProtoCreateFidoKeyRequest setRelyingParty:](v10, "setRelyingParty:", *(_QWORD *)(a1 + 32));
  -[NPKProtoCreateFidoKeyRequest setRelyingPartyAccountHash:](v10, "setRelyingPartyAccountHash:", *(_QWORD *)(a1 + 40));
  -[NPKProtoCreateFidoKeyRequest setChallenge:](v10, "setChallenge:", *(_QWORD *)(a1 + 48));
  -[NPKProtoCreateFidoKeyRequest setExternalizedAuth:](v10, "setExternalizedAuth:", *(_QWORD *)(a1 + 56));
  v11 = objc_alloc(MEMORY[0x24BE4FE40]);
  -[NPKProtoCreateFidoKeyRequest data](v10, "data");
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  v13 = (void *)objc_msgSend(v11, "initWithProtobufData:type:isResponse:", v12, 95, 0);

  v14 = *(void **)(a1 + 64);
  v30 = *MEMORY[0x24BE4FAC0];
  v31 = MEMORY[0x24BDBD1C8];
  objc_msgSend(MEMORY[0x24BDBCE70], "dictionaryWithObjects:forKeys:count:", &v31, &v30, 1);
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v14, "_sendProtobuf:responseExpected:extraOptions:", v13, 1, v15);
  v16 = (void *)objc_claimAutoreleasedReturnValue();

  if (v16)
  {
    if (*(_QWORD *)(a1 + 72))
    {
      v17 = MEMORY[0x2199B6780]();
      v28[0] = MEMORY[0x24BDAC760];
      v28[1] = 3221225472;
      v28[2] = __136__NPKPaymentWebServiceCompanionTargetDevice_createFidoKeyForRelyingParty_relyingPartyAccountHash_challenge_externalizedAuth_completion___block_invoke_736;
      v28[3] = &unk_24CFE7B80;
      v29 = *(id *)(a1 + 72);
      v18 = (void *)MEMORY[0x2199B6780](v28);
      v19 = *(void **)(a1 + 64);
      v20 = (void *)MEMORY[0x2199B6780](v17);
      objc_msgSend(v19, "_trackOutstandingRequestWithMessageIdentifier:completionHandler:errorHandler:", v16, v20, v18);

LABEL_15:
      goto LABEL_16;
    }
    pk_Payment_log();
    v26 = objc_claimAutoreleasedReturnValue();
    v27 = os_log_type_enabled(v26, OS_LOG_TYPE_DEFAULT);

    if (v27)
    {
      pk_Payment_log();
      v17 = objc_claimAutoreleasedReturnValue();
      if (!os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
        goto LABEL_15;
      *(_DWORD *)buf = 138412290;
      v33 = v16;
      v23 = "Warning: No response expected for message with identifier %@";
      v24 = v17;
      v25 = OS_LOG_TYPE_DEFAULT;
      goto LABEL_14;
    }
  }
  else
  {
    pk_Payment_log();
    v21 = objc_claimAutoreleasedReturnValue();
    v22 = os_log_type_enabled(v21, OS_LOG_TYPE_ERROR);

    if (v22)
    {
      pk_Payment_log();
      v17 = objc_claimAutoreleasedReturnValue();
      if (!os_log_type_enabled(v17, OS_LOG_TYPE_ERROR))
        goto LABEL_15;
      *(_DWORD *)buf = 138412290;
      v33 = v13;
      v23 = "Error: No message identifier for protobuf %@";
      v24 = v17;
      v25 = OS_LOG_TYPE_ERROR;
LABEL_14:
      _os_log_impl(&dword_213518000, v24, v25, v23, buf, 0xCu);
      goto LABEL_15;
    }
  }
LABEL_16:

}

void __136__NPKPaymentWebServiceCompanionTargetDevice_createFidoKeyForRelyingParty_relyingPartyAccountHash_challenge_externalizedAuth_completion___block_invoke_736(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  _BOOL4 v5;
  NSObject *v6;
  uint64_t v7;
  int v8;
  id v9;
  uint64_t v10;

  v10 = *MEMORY[0x24BDAC8D0];
  v3 = a2;
  pk_Payment_log();
  v4 = objc_claimAutoreleasedReturnValue();
  v5 = os_log_type_enabled(v4, OS_LOG_TYPE_ERROR);

  if (v5)
  {
    pk_Payment_log();
    v6 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      v8 = 138412290;
      v9 = v3;
      _os_log_impl(&dword_213518000, v6, OS_LOG_TYPE_ERROR, "Error: Provisioning service outstanding request error handler invoked: %@", (uint8_t *)&v8, 0xCu);
    }

  }
  v7 = *(_QWORD *)(a1 + 32);
  if (v7)
    (*(void (**)(uint64_t, _QWORD, _QWORD, _QWORD, id))(v7 + 16))(v7, 0, 0, 0, v3);

}

- (void)createFidoKeyResponse:(id)a3
{
  id v4;
  NSObject *v5;
  _BOOL4 v6;
  NSObject *v7;
  void *v8;
  void *v9;
  void *v10;
  NSObject *v11;
  NSObject *v12;
  _BOOL4 v13;
  NSObject *v14;
  uint64_t v15;
  uint8_t v16[16];
  _QWORD block[5];
  id v18;
  id v19;
  __int128 *p_buf;
  uint64_t *v21;
  uint64_t *v22;
  uint64_t *v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t (*v28)(uint64_t, uint64_t);
  void (*v29)(uint64_t);
  id v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t (*v34)(uint64_t, uint64_t);
  void (*v35)(uint64_t);
  id v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t (*v40)(uint64_t, uint64_t);
  void (*v41)(uint64_t);
  id v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t (*v46)(uint64_t, uint64_t);
  void (*v47)(uint64_t);
  id v48;
  __int128 buf;
  uint64_t v50;
  uint64_t (*v51)(uint64_t, uint64_t);
  void (*v52)(uint64_t);
  id v53;
  uint64_t v54;

  v54 = *MEMORY[0x24BDAC8D0];
  v4 = a3;
  pk_Payment_log();
  v5 = objc_claimAutoreleasedReturnValue();
  v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    pk_Payment_log();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend(v4, "npkDescription");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      LODWORD(buf) = 138412290;
      *(_QWORD *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_213518000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Target createFidoKeyResponse: incoming protobuf %@", (uint8_t *)&buf, 0xCu);

    }
  }
  objc_msgSend(v4, "context");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "incomingResponseIdentifier");
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  *(_QWORD *)&buf = 0;
  *((_QWORD *)&buf + 1) = &buf;
  v50 = 0x3032000000;
  v51 = __Block_byref_object_copy__342;
  v52 = __Block_byref_object_dispose__343;
  v53 = 0;
  v43 = 0;
  v44 = &v43;
  v45 = 0x3032000000;
  v46 = __Block_byref_object_copy__23;
  v47 = __Block_byref_object_dispose__23;
  v48 = 0;
  v37 = 0;
  v38 = &v37;
  v39 = 0x3032000000;
  v40 = __Block_byref_object_copy__23;
  v41 = __Block_byref_object_dispose__23;
  v42 = 0;
  v31 = 0;
  v32 = &v31;
  v33 = 0x3032000000;
  v34 = __Block_byref_object_copy__23;
  v35 = __Block_byref_object_dispose__23;
  v36 = 0;
  v25 = 0;
  v26 = &v25;
  v27 = 0x3032000000;
  v28 = __Block_byref_object_copy__23;
  v29 = __Block_byref_object_dispose__23;
  v30 = 0;
  if (v10)
  {
    -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
    v11 = objc_claimAutoreleasedReturnValue();
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 3221225472;
    block[2] = __67__NPKPaymentWebServiceCompanionTargetDevice_createFidoKeyResponse___block_invoke;
    block[3] = &unk_24CFED4A8;
    block[4] = self;
    v18 = v10;
    v19 = v4;
    p_buf = &buf;
    v21 = &v43;
    v22 = &v37;
    v23 = &v31;
    v24 = &v25;
    dispatch_sync(v11, block);

  }
  else
  {
    pk_Payment_log();
    v12 = objc_claimAutoreleasedReturnValue();
    v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      pk_Payment_log();
      v14 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)v16 = 0;
        _os_log_impl(&dword_213518000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v16, 2u);
      }

    }
  }
  v15 = *(_QWORD *)(*((_QWORD *)&buf + 1) + 40);
  if (v15)
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 16))(v15, v44[5], v38[5], v32[5], v26[5]);
  _Block_object_dispose(&v25, 8);

  _Block_object_dispose(&v31, 8);
  _Block_object_dispose(&v37, 8);

  _Block_object_dispose(&v43, 8);
  _Block_object_dispose(&buf, 8);

}

void __67__NPKPaymentWebServiceCompanionTargetDevice_createFidoKeyResponse___block_invoke(uint64_t a1)
{
  void *v1;
  void *v3;
  void *v4;
  NPKProtoCreateFidoKeyResponse *v5;
  void *v6;
  NPKProtoCreateFidoKeyResponse *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  _BOOL4 v21;
  NSObject *v22;
  void *v23;
  NSObject *v24;
  _BOOL4 v25;
  NSObject *v26;
  __int16 v27[8];

  objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "objectForKey:", *(_QWORD *)(a1 + 40));
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  if (v4)
  {
    v5 = [NPKProtoCreateFidoKeyResponse alloc];
    objc_msgSend(*(id *)(a1 + 48), "data");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    v7 = -[NPKProtoCreateFidoKeyResponse initWithData:](v5, "initWithData:", v6);

    objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "removeObjectForKey:", *(_QWORD *)(a1 + 40));

    objc_msgSend(v4, "completionHandler");
    v9 = objc_claimAutoreleasedReturnValue();
    v10 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
    v11 = *(void **)(v10 + 40);
    *(_QWORD *)(v10 + 40) = v9;

    -[NPKProtoCreateFidoKeyResponse fidoKey](v7, "fidoKey");
    v12 = objc_claimAutoreleasedReturnValue();
    v13 = *(_QWORD *)(*(_QWORD *)(a1 + 64) + 8);
    v14 = *(void **)(v13 + 40);
    *(_QWORD *)(v13 + 40) = v12;

    -[NPKProtoCreateFidoKeyResponse fidoAttestation](v7, "fidoAttestation");
    v15 = objc_claimAutoreleasedReturnValue();
    v16 = *(_QWORD *)(*(_QWORD *)(a1 + 72) + 8);
    v17 = *(void **)(v16 + 40);
    *(_QWORD *)(v16 + 40) = v15;

    -[NPKProtoCreateFidoKeyResponse keyHash](v7, "keyHash");
    v18 = objc_claimAutoreleasedReturnValue();
    v19 = *(_QWORD *)(*(_QWORD *)(a1 + 80) + 8);
    v20 = *(void **)(v19 + 40);
    *(_QWORD *)(v19 + 40) = v18;

    v21 = -[NPKProtoCreateFidoKeyResponse hasErrorData](v7, "hasErrorData");
    if (v21)
    {
      -[NPKProtoCreateFidoKeyResponse errorData](v7, "errorData");
      v1 = (void *)objc_claimAutoreleasedReturnValue();
      v22 = objc_opt_class();
      NPKSecureUnarchiveObject(v1, v22);
      v23 = (void *)objc_claimAutoreleasedReturnValue();
    }
    else
    {
      v23 = 0;
    }
    objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 88) + 8) + 40), v23);
    if (v21)
    {

    }
  }
  else
  {
    pk_Payment_log();
    v24 = objc_claimAutoreleasedReturnValue();
    v25 = os_log_type_enabled(v24, OS_LOG_TYPE_DEFAULT);

    if (v25)
    {
      pk_Payment_log();
      v26 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v26, OS_LOG_TYPE_DEFAULT))
      {
        v27[0] = 0;
        _os_log_impl(&dword_213518000, v26, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", (uint8_t *)v27, 2u);
      }

    }
  }

}

- (void)checkFidoKeyPresenceForRelyingParty:(id)a3 relyingPartyAccountHash:(id)a4 fidoKeyHash:(id)a5 completion:(id)a6
{
  id v10;
  id v11;
  id v12;
  id v13;
  NSObject *v14;
  NSObject *v15;
  _BOOL4 v16;
  NSObject *v17;
  uint8_t v18[8];
  _QWORD block[4];
  id v20;
  id v21;
  id v22;
  NPKPaymentWebServiceCompanionTargetDevice *v23;
  id v24;

  v10 = a3;
  v11 = a4;
  v12 = a5;
  v13 = a6;
  if (-[NPKPaymentWebServiceCompanionTargetDevice _isUnifiedAccessProvisioningSupported](self, "_isUnifiedAccessProvisioningSupported"))
  {
    -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
    v14 = objc_claimAutoreleasedReturnValue();
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 3221225472;
    block[2] = __128__NPKPaymentWebServiceCompanionTargetDevice_checkFidoKeyPresenceForRelyingParty_relyingPartyAccountHash_fidoKeyHash_completion___block_invoke;
    block[3] = &unk_24CFEDBB8;
    v20 = v10;
    v21 = v11;
    v22 = v12;
    v23 = self;
    v24 = v13;
    dispatch_sync(v14, block);

  }
  else
  {
    pk_Payment_log();
    v15 = objc_claimAutoreleasedReturnValue();
    v16 = os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT);

    if (v16)
    {
      pk_Payment_log();
      v17 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)v18 = 0;
        _os_log_impl(&dword_213518000, v17, OS_LOG_TYPE_DEFAULT, "Notice: Target device does not support unified access provisioning.", v18, 2u);
      }

    }
    if (v13)
      (*((void (**)(id, _QWORD))v13 + 2))(v13, 0);
  }

}

void __128__NPKPaymentWebServiceCompanionTargetDevice_checkFidoKeyPresenceForRelyingParty_relyingPartyAccountHash_fidoKeyHash_completion___block_invoke(uint64_t a1)
{
  NSObject *v2;
  _BOOL4 v3;
  NSObject *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  NPKProtoCheckFidoKeyPresenceRequest *v9;
  id v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  NSObject *v16;
  void *v17;
  void *v18;
  void *v19;
  NSObject *v20;
  _BOOL4 v21;
  const char *v22;
  NSObject *v23;
  os_log_type_t v24;
  NSObject *v25;
  _BOOL4 v26;
  _QWORD v27[4];
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint8_t buf[4];
  void *v32;
  __int16 v33;
  uint64_t v34;
  __int16 v35;
  uint64_t v36;
  __int16 v37;
  void *v38;
  uint64_t v39;

  v39 = *MEMORY[0x24BDAC8D0];
  pk_General_log();
  v2 = objc_claimAutoreleasedReturnValue();
  v3 = os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT);

  if (v3)
  {
    pk_General_log();
    v4 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      v5 = *(void **)(a1 + 32);
      v6 = *(_QWORD *)(a1 + 40);
      v7 = *(_QWORD *)(a1 + 48);
      v8 = (void *)MEMORY[0x2199B6780](*(_QWORD *)(a1 + 64));
      *(_DWORD *)buf = 138413058;
      v32 = v5;
      v33 = 2112;
      v34 = v6;
      v35 = 2112;
      v36 = v7;
      v37 = 2112;
      v38 = v8;
      _os_log_impl(&dword_213518000, v4, OS_LOG_TYPE_DEFAULT, "Notice: Target check fido key presence for relayingParty %@ accountHash %@ fidoKeyHash %@ completion %@", buf, 0x2Au);

    }
  }
  v9 = objc_alloc_init(NPKProtoCheckFidoKeyPresenceRequest);
  -[NPKProtoCheckFidoKeyPresenceRequest setRelyingParty:](v9, "setRelyingParty:", *(_QWORD *)(a1 + 32));
  -[NPKProtoCheckFidoKeyPresenceRequest setRelyingPartyAccountHash:](v9, "setRelyingPartyAccountHash:", *(_QWORD *)(a1 + 40));
  -[NPKProtoCheckFidoKeyPresenceRequest setFidoKeyHash:](v9, "setFidoKeyHash:", *(_QWORD *)(a1 + 48));
  v10 = objc_alloc(MEMORY[0x24BE4FE40]);
  -[NPKProtoCheckFidoKeyPresenceRequest data](v9, "data");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  v12 = (void *)objc_msgSend(v10, "initWithProtobufData:type:isResponse:", v11, 96, 0);

  v13 = *(void **)(a1 + 56);
  v29 = *MEMORY[0x24BE4FAC0];
  v30 = MEMORY[0x24BDBD1C8];
  objc_msgSend(MEMORY[0x24BDBCE70], "dictionaryWithObjects:forKeys:count:", &v30, &v29, 1);
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v13, "_sendProtobuf:responseExpected:extraOptions:", v12, 1, v14);
  v15 = (void *)objc_claimAutoreleasedReturnValue();

  if (v15)
  {
    if (*(_QWORD *)(a1 + 64))
    {
      v16 = MEMORY[0x2199B6780]();
      v27[0] = MEMORY[0x24BDAC760];
      v27[1] = 3221225472;
      v27[2] = __128__NPKPaymentWebServiceCompanionTargetDevice_checkFidoKeyPresenceForRelyingParty_relyingPartyAccountHash_fidoKeyHash_completion___block_invoke_745;
      v27[3] = &unk_24CFE7B80;
      v28 = *(id *)(a1 + 64);
      v17 = (void *)MEMORY[0x2199B6780](v27);
      v18 = *(void **)(a1 + 56);
      v19 = (void *)MEMORY[0x2199B6780](v16);
      objc_msgSend(v18, "_trackOutstandingRequestWithMessageIdentifier:completionHandler:errorHandler:", v15, v19, v17);

LABEL_15:
      goto LABEL_16;
    }
    pk_Payment_log();
    v25 = objc_claimAutoreleasedReturnValue();
    v26 = os_log_type_enabled(v25, OS_LOG_TYPE_DEFAULT);

    if (v26)
    {
      pk_Payment_log();
      v16 = objc_claimAutoreleasedReturnValue();
      if (!os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
        goto LABEL_15;
      *(_DWORD *)buf = 138412290;
      v32 = v15;
      v22 = "Warning: No response expected for message with identifier %@";
      v23 = v16;
      v24 = OS_LOG_TYPE_DEFAULT;
      goto LABEL_14;
    }
  }
  else
  {
    pk_Payment_log();
    v20 = objc_claimAutoreleasedReturnValue();
    v21 = os_log_type_enabled(v20, OS_LOG_TYPE_ERROR);

    if (v21)
    {
      pk_Payment_log();
      v16 = objc_claimAutoreleasedReturnValue();
      if (!os_log_type_enabled(v16, OS_LOG_TYPE_ERROR))
        goto LABEL_15;
      *(_DWORD *)buf = 138412290;
      v32 = v12;
      v22 = "Error: No message identifier for protobuf %@";
      v23 = v16;
      v24 = OS_LOG_TYPE_ERROR;
LABEL_14:
      _os_log_impl(&dword_213518000, v23, v24, v22, buf, 0xCu);
      goto LABEL_15;
    }
  }
LABEL_16:

}

void __128__NPKPaymentWebServiceCompanionTargetDevice_checkFidoKeyPresenceForRelyingParty_relyingPartyAccountHash_fidoKeyHash_completion___block_invoke_745(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  _BOOL4 v5;
  NSObject *v6;
  uint64_t v7;
  int v8;
  id v9;
  uint64_t v10;

  v10 = *MEMORY[0x24BDAC8D0];
  v3 = a2;
  pk_Payment_log();
  v4 = objc_claimAutoreleasedReturnValue();
  v5 = os_log_type_enabled(v4, OS_LOG_TYPE_ERROR);

  if (v5)
  {
    pk_Payment_log();
    v6 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      v8 = 138412290;
      v9 = v3;
      _os_log_impl(&dword_213518000, v6, OS_LOG_TYPE_ERROR, "Error: Provisioning service outstanding request error handler invoked: %@", (uint8_t *)&v8, 0xCu);
    }

  }
  v7 = *(_QWORD *)(a1 + 32);
  if (v7)
    (*(void (**)(uint64_t, _QWORD))(v7 + 16))(v7, 0);

}

- (void)checkFidoKeyResponse:(id)a3
{
  id v4;
  NSObject *v5;
  _BOOL4 v6;
  NSObject *v7;
  void *v8;
  void *v9;
  void *v10;
  NSObject *v11;
  NSObject *v12;
  _BOOL4 v13;
  NSObject *v14;
  uint64_t v15;
  uint8_t v16[8];
  _QWORD block[5];
  id v18;
  id v19;
  __int128 *p_buf;
  uint64_t *v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  char v25;
  __int128 buf;
  uint64_t v27;
  uint64_t (*v28)(uint64_t, uint64_t);
  void (*v29)(uint64_t);
  id v30;
  uint64_t v31;

  v31 = *MEMORY[0x24BDAC8D0];
  v4 = a3;
  pk_Payment_log();
  v5 = objc_claimAutoreleasedReturnValue();
  v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    pk_Payment_log();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend(v4, "npkDescription");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      LODWORD(buf) = 138412290;
      *(_QWORD *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_213518000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Target checkFidoKeyResponse: incoming protobuf %@", (uint8_t *)&buf, 0xCu);

    }
  }
  objc_msgSend(v4, "context");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "incomingResponseIdentifier");
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  *(_QWORD *)&buf = 0;
  *((_QWORD *)&buf + 1) = &buf;
  v27 = 0x3032000000;
  v28 = __Block_byref_object_copy__342;
  v29 = __Block_byref_object_dispose__343;
  v30 = 0;
  v22 = 0;
  v23 = &v22;
  v24 = 0x2020000000;
  v25 = 0;
  if (v10)
  {
    -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
    v11 = objc_claimAutoreleasedReturnValue();
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 3221225472;
    block[2] = __66__NPKPaymentWebServiceCompanionTargetDevice_checkFidoKeyResponse___block_invoke;
    block[3] = &unk_24CFED0D8;
    block[4] = self;
    v18 = v10;
    v19 = v4;
    p_buf = &buf;
    v21 = &v22;
    dispatch_sync(v11, block);

  }
  else
  {
    pk_Payment_log();
    v12 = objc_claimAutoreleasedReturnValue();
    v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      pk_Payment_log();
      v14 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)v16 = 0;
        _os_log_impl(&dword_213518000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v16, 2u);
      }

    }
  }
  v15 = *(_QWORD *)(*((_QWORD *)&buf + 1) + 40);
  if (v15)
    (*(void (**)(uint64_t, _QWORD))(v15 + 16))(v15, *((unsigned __int8 *)v23 + 24));
  _Block_object_dispose(&v22, 8);
  _Block_object_dispose(&buf, 8);

}

void __66__NPKPaymentWebServiceCompanionTargetDevice_checkFidoKeyResponse___block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;
  NPKProtoCheckFidoKeyPresenceResponse *v4;
  void *v5;
  NPKProtoCheckFidoKeyPresenceResponse *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  NSObject *v11;
  _BOOL4 v12;
  NSObject *v13;
  uint8_t v14[16];

  objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "objectForKey:", *(_QWORD *)(a1 + 40));
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  if (v3)
  {
    v4 = [NPKProtoCheckFidoKeyPresenceResponse alloc];
    objc_msgSend(*(id *)(a1 + 48), "data");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    v6 = -[NPKProtoCheckFidoKeyPresenceResponse initWithData:](v4, "initWithData:", v5);

    objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "removeObjectForKey:", *(_QWORD *)(a1 + 40));

    objc_msgSend(v3, "completionHandler");
    v8 = objc_claimAutoreleasedReturnValue();
    v9 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
    v10 = *(void **)(v9 + 40);
    *(_QWORD *)(v9 + 40) = v8;

    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 24) = -[NPKProtoCheckFidoKeyPresenceResponse keyExists](v6, "keyExists");
  }
  else
  {
    pk_Payment_log();
    v11 = objc_claimAutoreleasedReturnValue();
    v12 = os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT);

    if (v12)
    {
      pk_Payment_log();
      v13 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)v14 = 0;
        _os_log_impl(&dword_213518000, v13, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", v14, 2u);
      }

    }
  }

}

- (void)signWithFidoKeyForRelyingParty:(id)a3 relyingPartyAccountHash:(id)a4 fidoKeyHash:(id)a5 challenge:(id)a6 publicKeyIdentifier:(id)a7 externalizedAuth:(id)a8 completion:(id)a9
{
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  NSObject *v22;
  id v23;
  NSObject *v24;
  _BOOL4 v25;
  NSObject *v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  uint64_t v33;
  void *v34;
  id v35;
  id v36;
  void *v37;
  uint8_t buf[16];
  _QWORD block[4];
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  NPKPaymentWebServiceCompanionTargetDevice *v46;
  id v47;
  _QWORD v48[2];
  _QWORD v49[4];

  v49[2] = *MEMORY[0x24BDAC8D0];
  v15 = a3;
  v16 = a4;
  v17 = a5;
  v18 = a6;
  v19 = a7;
  v20 = a8;
  v21 = a9;
  v37 = v18;
  if (-[NPKPaymentWebServiceCompanionTargetDevice _isUnifiedAccessProvisioningSupported](self, "_isUnifiedAccessProvisioningSupported"))
  {
    -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
    v22 = objc_claimAutoreleasedReturnValue();
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 3221225472;
    block[2] = __170__NPKPaymentWebServiceCompanionTargetDevice_signWithFidoKeyForRelyingParty_relyingPartyAccountHash_fidoKeyHash_challenge_publicKeyIdentifier_externalizedAuth_completion___block_invoke;
    block[3] = &unk_24CFEDBE0;
    v40 = v15;
    v41 = v16;
    v42 = v17;
    v43 = v18;
    v44 = v19;
    v45 = v20;
    v46 = self;
    v47 = v21;
    dispatch_sync(v22, block);

  }
  else
  {
    v23 = v15;
    pk_Payment_log();
    v24 = objc_claimAutoreleasedReturnValue();
    v25 = os_log_type_enabled(v24, OS_LOG_TYPE_DEFAULT);

    if (v25)
    {
      pk_Payment_log();
      v26 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v26, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)buf = 0;
        _os_log_impl(&dword_213518000, v26, OS_LOG_TYPE_DEFAULT, "Notice: Target device does not support unified access provisioning.", buf, 2u);
      }

    }
    v15 = v23;
    if (v21)
    {
      v34 = (void *)MEMORY[0x24BDD1540];
      v33 = *MEMORY[0x24BE6F2A8];
      v48[0] = *MEMORY[0x24BDD0FD8];
      v35 = v17;
      objc_msgSend(MEMORY[0x24BDD1488], "bundleForClass:", objc_opt_class());
      v27 = (void *)objc_claimAutoreleasedReturnValue();
      v36 = v16;
      objc_msgSend(v27, "localizedStringForKey:value:table:", CFSTR("UNIFIED_ACCESS_ERROR_ALERT_CANNOT_ADD_KEY_TITLE"), &stru_24CFF06D8, CFSTR("NanoPassKitUI-Hydra"));
      v28 = (void *)objc_claimAutoreleasedReturnValue();
      v49[0] = v28;
      v48[1] = *MEMORY[0x24BDD0FF0];
      objc_msgSend(MEMORY[0x24BDD1488], "bundleForClass:", objc_opt_class());
      v29 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v29, "localizedStringForKey:value:table:", CFSTR("UNIFIED_ACCESS_ERROR_ALERT_CANNOT_ADD_KEY_MESSAGE"), &stru_24CFF06D8, CFSTR("NanoPassKitUI-Hydra"));
      v30 = (void *)objc_claimAutoreleasedReturnValue();
      v49[1] = v30;
      objc_msgSend(MEMORY[0x24BDBCE70], "dictionaryWithObjects:forKeys:count:", v49, v48, 2);
      v31 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v34, "errorWithDomain:code:userInfo:", v33, 4, v31);
      v32 = (void *)objc_claimAutoreleasedReturnValue();

      v16 = v36;
      v17 = v35;

      v15 = v23;
      (*((void (**)(id, _QWORD, void *))v21 + 2))(v21, 0, v32);

    }
  }

}

void __170__NPKPaymentWebServiceCompanionTargetDevice_signWithFidoKeyForRelyingParty_relyingPartyAccountHash_fidoKeyHash_challenge_publicKeyIdentifier_externalizedAuth_completion___block_invoke(uint64_t a1)
{
  NSObject *v2;
  _BOOL4 v3;
  NSObject *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  NPKProtoSignWithFidoKeyRequest *v12;
  id v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  NSObject *v19;
  void *v20;
  void *v21;
  void *v22;
  NSObject *v23;
  _BOOL4 v24;
  const char *v25;
  NSObject *v26;
  os_log_type_t v27;
  NSObject *v28;
  _BOOL4 v29;
  _QWORD v30[4];
  id v31;
  uint64_t v32;
  void *v33;
  uint8_t buf[4];
  void *v35;
  __int16 v36;
  uint64_t v37;
  __int16 v38;
  uint64_t v39;
  __int16 v40;
  uint64_t v41;
  __int16 v42;
  uint64_t v43;
  __int16 v44;
  uint64_t v45;
  __int16 v46;
  void *v47;
  uint64_t v48;

  v48 = *MEMORY[0x24BDAC8D0];
  pk_General_log();
  v2 = objc_claimAutoreleasedReturnValue();
  v3 = os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT);

  if (v3)
  {
    pk_General_log();
    v4 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      v5 = *(void **)(a1 + 32);
      v6 = *(_QWORD *)(a1 + 40);
      v7 = *(_QWORD *)(a1 + 48);
      v8 = *(_QWORD *)(a1 + 56);
      v9 = *(_QWORD *)(a1 + 64);
      v10 = *(_QWORD *)(a1 + 72);
      v11 = (void *)MEMORY[0x2199B6780](*(_QWORD *)(a1 + 88));
      *(_DWORD *)buf = 138413826;
      v35 = v5;
      v36 = 2112;
      v37 = v6;
      v38 = 2112;
      v39 = v7;
      v40 = 2112;
      v41 = v8;
      v42 = 2112;
      v43 = v9;
      v44 = 2112;
      v45 = v10;
      v46 = 2112;
      v47 = v11;
      _os_log_impl(&dword_213518000, v4, OS_LOG_TYPE_DEFAULT, "Notice: Target sign with fido key for relaying party %@ accountHash %@ fidoKeyHash %@ challenge %@ publicKeyIdentifier %@ externalizedAuth %@ completion %@", buf, 0x48u);

    }
  }
  v12 = objc_alloc_init(NPKProtoSignWithFidoKeyRequest);
  -[NPKProtoSignWithFidoKeyRequest setRelyingParty:](v12, "setRelyingParty:", *(_QWORD *)(a1 + 32));
  -[NPKProtoSignWithFidoKeyRequest setRelyingPartyAccountHash:](v12, "setRelyingPartyAccountHash:", *(_QWORD *)(a1 + 40));
  -[NPKProtoSignWithFidoKeyRequest setFidoKeyHash:](v12, "setFidoKeyHash:", *(_QWORD *)(a1 + 48));
  -[NPKProtoSignWithFidoKeyRequest setChallenge:](v12, "setChallenge:", *(_QWORD *)(a1 + 56));
  -[NPKProtoSignWithFidoKeyRequest setPublicKeyIdentifier:](v12, "setPublicKeyIdentifier:", *(_QWORD *)(a1 + 64));
  -[NPKProtoSignWithFidoKeyRequest setExternalizedAuth:](v12, "setExternalizedAuth:", *(_QWORD *)(a1 + 72));
  v13 = objc_alloc(MEMORY[0x24BE4FE40]);
  -[NPKProtoSignWithFidoKeyRequest data](v12, "data");
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  v15 = (void *)objc_msgSend(v13, "initWithProtobufData:type:isResponse:", v14, 97, 0);

  v16 = *(void **)(a1 + 80);
  v32 = *MEMORY[0x24BE4FB30];
  v33 = &unk_24D0566F0;
  objc_msgSend(MEMORY[0x24BDBCE70], "dictionaryWithObjects:forKeys:count:", &v33, &v32, 1);
  v17 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v16, "_sendProtobuf:responseExpected:extraOptions:", v15, 1, v17);
  v18 = (void *)objc_claimAutoreleasedReturnValue();

  if (v18)
  {
    if (*(_QWORD *)(a1 + 88))
    {
      v19 = MEMORY[0x2199B6780]();
      v30[0] = MEMORY[0x24BDAC760];
      v30[1] = 3221225472;
      v30[2] = __170__NPKPaymentWebServiceCompanionTargetDevice_signWithFidoKeyForRelyingParty_relyingPartyAccountHash_fidoKeyHash_challenge_publicKeyIdentifier_externalizedAuth_completion___block_invoke_748;
      v30[3] = &unk_24CFE7B80;
      v31 = *(id *)(a1 + 88);
      v20 = (void *)MEMORY[0x2199B6780](v30);
      v21 = *(void **)(a1 + 80);
      v22 = (void *)MEMORY[0x2199B6780](v19);
      objc_msgSend(v21, "_trackOutstandingRequestWithMessageIdentifier:completionHandler:errorHandler:", v18, v22, v20);

LABEL_15:
      goto LABEL_16;
    }
    pk_Payment_log();
    v28 = objc_claimAutoreleasedReturnValue();
    v29 = os_log_type_enabled(v28, OS_LOG_TYPE_DEFAULT);

    if (v29)
    {
      pk_Payment_log();
      v19 = objc_claimAutoreleasedReturnValue();
      if (!os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT))
        goto LABEL_15;
      *(_DWORD *)buf = 138412290;
      v35 = v18;
      v25 = "Warning: No response expected for message with identifier %@";
      v26 = v19;
      v27 = OS_LOG_TYPE_DEFAULT;
      goto LABEL_14;
    }
  }
  else
  {
    pk_Payment_log();
    v23 = objc_claimAutoreleasedReturnValue();
    v24 = os_log_type_enabled(v23, OS_LOG_TYPE_ERROR);

    if (v24)
    {
      pk_Payment_log();
      v19 = objc_claimAutoreleasedReturnValue();
      if (!os_log_type_enabled(v19, OS_LOG_TYPE_ERROR))
        goto LABEL_15;
      *(_DWORD *)buf = 138412290;
      v35 = v15;
      v25 = "Error: No message identifier for protobuf %@";
      v26 = v19;
      v27 = OS_LOG_TYPE_ERROR;
LABEL_14:
      _os_log_impl(&dword_213518000, v26, v27, v25, buf, 0xCu);
      goto LABEL_15;
    }
  }
LABEL_16:

}

void __170__NPKPaymentWebServiceCompanionTargetDevice_signWithFidoKeyForRelyingParty_relyingPartyAccountHash_fidoKeyHash_challenge_publicKeyIdentifier_externalizedAuth_completion___block_invoke_748(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  _BOOL4 v5;
  NSObject *v6;
  uint64_t v7;
  int v8;
  id v9;
  uint64_t v10;

  v10 = *MEMORY[0x24BDAC8D0];
  v3 = a2;
  pk_Payment_log();
  v4 = objc_claimAutoreleasedReturnValue();
  v5 = os_log_type_enabled(v4, OS_LOG_TYPE_ERROR);

  if (v5)
  {
    pk_Payment_log();
    v6 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      v8 = 138412290;
      v9 = v3;
      _os_log_impl(&dword_213518000, v6, OS_LOG_TYPE_ERROR, "Error: Provisioning service outstanding request error handler invoked: %@", (uint8_t *)&v8, 0xCu);
    }

  }
  v7 = *(_QWORD *)(a1 + 32);
  if (v7)
    (*(void (**)(uint64_t, _QWORD, id))(v7 + 16))(v7, 0, v3);

}

- (void)signWithFidoKeyResponse:(id)a3
{
  id v4;
  NSObject *v5;
  _BOOL4 v6;
  NSObject *v7;
  void *v8;
  void *v9;
  void *v10;
  NSObject *v11;
  NSObject *v12;
  _BOOL4 v13;
  NSObject *v14;
  uint64_t v15;
  uint8_t v16[16];
  _QWORD block[5];
  id v18;
  id v19;
  __int128 *p_buf;
  uint64_t *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t (*v26)(uint64_t, uint64_t);
  void (*v27)(uint64_t);
  id v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t (*v32)(uint64_t, uint64_t);
  void (*v33)(uint64_t);
  id v34;
  __int128 buf;
  uint64_t v36;
  uint64_t (*v37)(uint64_t, uint64_t);
  void (*v38)(uint64_t);
  id v39;
  uint64_t v40;

  v40 = *MEMORY[0x24BDAC8D0];
  v4 = a3;
  pk_Payment_log();
  v5 = objc_claimAutoreleasedReturnValue();
  v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    pk_Payment_log();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend(v4, "npkDescription");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      LODWORD(buf) = 138412290;
      *(_QWORD *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_213518000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Target signWithFidoKeyResponse: incoming protobuf %@", (uint8_t *)&buf, 0xCu);

    }
  }
  objc_msgSend(v4, "context");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "incomingResponseIdentifier");
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  *(_QWORD *)&buf = 0;
  *((_QWORD *)&buf + 1) = &buf;
  v36 = 0x3032000000;
  v37 = __Block_byref_object_copy__342;
  v38 = __Block_byref_object_dispose__343;
  v39 = 0;
  v29 = 0;
  v30 = &v29;
  v31 = 0x3032000000;
  v32 = __Block_byref_object_copy__23;
  v33 = __Block_byref_object_dispose__23;
  v34 = 0;
  v23 = 0;
  v24 = &v23;
  v25 = 0x3032000000;
  v26 = __Block_byref_object_copy__23;
  v27 = __Block_byref_object_dispose__23;
  v28 = 0;
  if (v10)
  {
    -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
    v11 = objc_claimAutoreleasedReturnValue();
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 3221225472;
    block[2] = __69__NPKPaymentWebServiceCompanionTargetDevice_signWithFidoKeyResponse___block_invoke;
    block[3] = &unk_24CFED060;
    block[4] = self;
    v18 = v10;
    v19 = v4;
    p_buf = &buf;
    v21 = &v29;
    v22 = &v23;
    dispatch_sync(v11, block);

  }
  else
  {
    pk_Payment_log();
    v12 = objc_claimAutoreleasedReturnValue();
    v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      pk_Payment_log();
      v14 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)v16 = 0;
        _os_log_impl(&dword_213518000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v16, 2u);
      }

    }
  }
  v15 = *(_QWORD *)(*((_QWORD *)&buf + 1) + 40);
  if (v15)
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v15, v30[5], v24[5]);
  _Block_object_dispose(&v23, 8);

  _Block_object_dispose(&v29, 8);
  _Block_object_dispose(&buf, 8);

}

void __69__NPKPaymentWebServiceCompanionTargetDevice_signWithFidoKeyResponse___block_invoke(uint64_t a1)
{
  void *v1;
  void *v3;
  void *v4;
  NPKProtoSignWithFidoKeyResponse *v5;
  void *v6;
  NPKProtoSignWithFidoKeyResponse *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  _BOOL4 v15;
  NSObject *v16;
  void *v17;
  NSObject *v18;
  _BOOL4 v19;
  NSObject *v20;
  __int16 v21[8];

  objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "objectForKey:", *(_QWORD *)(a1 + 40));
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  if (v4)
  {
    v5 = [NPKProtoSignWithFidoKeyResponse alloc];
    objc_msgSend(*(id *)(a1 + 48), "data");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    v7 = -[NPKProtoSignWithFidoKeyResponse initWithData:](v5, "initWithData:", v6);

    objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "removeObjectForKey:", *(_QWORD *)(a1 + 40));

    objc_msgSend(v4, "completionHandler");
    v9 = objc_claimAutoreleasedReturnValue();
    v10 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
    v11 = *(void **)(v10 + 40);
    *(_QWORD *)(v10 + 40) = v9;

    -[NPKProtoSignWithFidoKeyResponse fidoAttestation](v7, "fidoAttestation");
    v12 = objc_claimAutoreleasedReturnValue();
    v13 = *(_QWORD *)(*(_QWORD *)(a1 + 64) + 8);
    v14 = *(void **)(v13 + 40);
    *(_QWORD *)(v13 + 40) = v12;

    v15 = -[NPKProtoSignWithFidoKeyResponse hasErrorData](v7, "hasErrorData");
    if (v15)
    {
      -[NPKProtoSignWithFidoKeyResponse errorData](v7, "errorData");
      v1 = (void *)objc_claimAutoreleasedReturnValue();
      v16 = objc_opt_class();
      NPKSecureUnarchiveObject(v1, v16);
      v17 = (void *)objc_claimAutoreleasedReturnValue();
    }
    else
    {
      v17 = 0;
    }
    objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 72) + 8) + 40), v17);
    if (v15)
    {

    }
  }
  else
  {
    pk_Payment_log();
    v18 = objc_claimAutoreleasedReturnValue();
    v19 = os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT);

    if (v19)
    {
      pk_Payment_log();
      v20 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v20, OS_LOG_TYPE_DEFAULT))
      {
        v21[0] = 0;
        _os_log_impl(&dword_213518000, v20, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", (uint8_t *)v21, 2u);
      }

    }
  }

}

- (void)generateISOEncryptionCertificateForSubCredentialId:(id)a3 completion:(id)a4
{
  id v6;
  id v7;
  NSObject *v8;
  NSObject *v9;
  _BOOL4 v10;
  NSObject *v11;
  void *v12;
  uint64_t v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  uint8_t v20[16];
  _QWORD block[4];
  id v22;
  NPKPaymentWebServiceCompanionTargetDevice *v23;
  id v24;
  _QWORD v25[2];
  _QWORD v26[3];

  v26[2] = *MEMORY[0x24BDAC8D0];
  v6 = a3;
  v7 = a4;
  if (-[NPKPaymentWebServiceCompanionTargetDevice _isUnifiedAccessProvisioningSupported](self, "_isUnifiedAccessProvisioningSupported"))
  {
    -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
    v8 = objc_claimAutoreleasedReturnValue();
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 3221225472;
    block[2] = __107__NPKPaymentWebServiceCompanionTargetDevice_generateISOEncryptionCertificateForSubCredentialId_completion___block_invoke;
    block[3] = &unk_24CFED5E8;
    v22 = v6;
    v23 = self;
    v24 = v7;
    dispatch_sync(v8, block);

  }
  else
  {
    pk_Payment_log();
    v9 = objc_claimAutoreleasedReturnValue();
    v10 = os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT);

    if (v10)
    {
      pk_Payment_log();
      v11 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)v20 = 0;
        _os_log_impl(&dword_213518000, v11, OS_LOG_TYPE_DEFAULT, "Notice: Target device does not support unified access provisioning.", v20, 2u);
      }

    }
    if (v7)
    {
      v12 = (void *)MEMORY[0x24BDD1540];
      v13 = *MEMORY[0x24BE6F2A8];
      v25[0] = *MEMORY[0x24BDD0FD8];
      objc_msgSend(MEMORY[0x24BDD1488], "bundleForClass:", objc_opt_class());
      v14 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v14, "localizedStringForKey:value:table:", CFSTR("UNIFIED_ACCESS_ERROR_ALERT_CANNOT_ADD_KEY_TITLE"), &stru_24CFF06D8, CFSTR("NanoPassKitUI-Hydra"));
      v15 = (void *)objc_claimAutoreleasedReturnValue();
      v26[0] = v15;
      v25[1] = *MEMORY[0x24BDD0FF0];
      objc_msgSend(MEMORY[0x24BDD1488], "bundleForClass:", objc_opt_class());
      v16 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v16, "localizedStringForKey:value:table:", CFSTR("UNIFIED_ACCESS_ERROR_ALERT_CANNOT_ADD_KEY_MESSAGE"), &stru_24CFF06D8, CFSTR("NanoPassKitUI-Hydra"));
      v17 = (void *)objc_claimAutoreleasedReturnValue();
      v26[1] = v17;
      objc_msgSend(MEMORY[0x24BDBCE70], "dictionaryWithObjects:forKeys:count:", v26, v25, 2);
      v18 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v12, "errorWithDomain:code:userInfo:", v13, 4, v18);
      v19 = (void *)objc_claimAutoreleasedReturnValue();

      (*((void (**)(id, _QWORD, _QWORD, void *))v7 + 2))(v7, 0, 0, v19);
    }
  }

}

void __107__NPKPaymentWebServiceCompanionTargetDevice_generateISOEncryptionCertificateForSubCredentialId_completion___block_invoke(uint64_t a1)
{
  NSObject *v2;
  _BOOL4 v3;
  NSObject *v4;
  void *v5;
  void *v6;
  NPKProtoGenerateISOEncryptionCertificateForSubCredentialIdRequest *v7;
  id v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  NSObject *v14;
  void *v15;
  void *v16;
  void *v17;
  NSObject *v18;
  _BOOL4 v19;
  const char *v20;
  NSObject *v21;
  os_log_type_t v22;
  NSObject *v23;
  _BOOL4 v24;
  _QWORD v25[4];
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint8_t buf[4];
  void *v30;
  __int16 v31;
  void *v32;
  uint64_t v33;

  v33 = *MEMORY[0x24BDAC8D0];
  pk_General_log();
  v2 = objc_claimAutoreleasedReturnValue();
  v3 = os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT);

  if (v3)
  {
    pk_General_log();
    v4 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      v5 = *(void **)(a1 + 32);
      v6 = (void *)MEMORY[0x2199B6780](*(_QWORD *)(a1 + 48));
      *(_DWORD *)buf = 138412546;
      v30 = v5;
      v31 = 2112;
      v32 = v6;
      _os_log_impl(&dword_213518000, v4, OS_LOG_TYPE_DEFAULT, "Notice: Target generate ISO encryption certificate for subcredential ID %@ completion %@", buf, 0x16u);

    }
  }
  v7 = objc_alloc_init(NPKProtoGenerateISOEncryptionCertificateForSubCredentialIdRequest);
  -[NPKProtoGenerateISOEncryptionCertificateForSubCredentialIdRequest setSubCredentialId:](v7, "setSubCredentialId:", *(_QWORD *)(a1 + 32));
  v8 = objc_alloc(MEMORY[0x24BE4FE40]);
  -[NPKProtoGenerateISOEncryptionCertificateForSubCredentialIdRequest data](v7, "data");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v10 = (void *)objc_msgSend(v8, "initWithProtobufData:type:isResponse:", v9, 98, 0);

  v11 = *(void **)(a1 + 40);
  v27 = *MEMORY[0x24BE4FAC0];
  v28 = MEMORY[0x24BDBD1C8];
  objc_msgSend(MEMORY[0x24BDBCE70], "dictionaryWithObjects:forKeys:count:", &v28, &v27, 1);
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v11, "_sendProtobuf:responseExpected:extraOptions:", v10, 1, v12);
  v13 = (void *)objc_claimAutoreleasedReturnValue();

  if (v13)
  {
    if (*(_QWORD *)(a1 + 48))
    {
      v14 = MEMORY[0x2199B6780]();
      v25[0] = MEMORY[0x24BDAC760];
      v25[1] = 3221225472;
      v25[2] = __107__NPKPaymentWebServiceCompanionTargetDevice_generateISOEncryptionCertificateForSubCredentialId_completion___block_invoke_751;
      v25[3] = &unk_24CFE7B80;
      v26 = *(id *)(a1 + 48);
      v15 = (void *)MEMORY[0x2199B6780](v25);
      v16 = *(void **)(a1 + 40);
      v17 = (void *)MEMORY[0x2199B6780](v14);
      objc_msgSend(v16, "_trackOutstandingRequestWithMessageIdentifier:completionHandler:errorHandler:", v13, v17, v15);

LABEL_15:
      goto LABEL_16;
    }
    pk_Payment_log();
    v23 = objc_claimAutoreleasedReturnValue();
    v24 = os_log_type_enabled(v23, OS_LOG_TYPE_DEFAULT);

    if (v24)
    {
      pk_Payment_log();
      v14 = objc_claimAutoreleasedReturnValue();
      if (!os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
        goto LABEL_15;
      *(_DWORD *)buf = 138412290;
      v30 = v13;
      v20 = "Warning: No response expected for message with identifier %@";
      v21 = v14;
      v22 = OS_LOG_TYPE_DEFAULT;
      goto LABEL_14;
    }
  }
  else
  {
    pk_Payment_log();
    v18 = objc_claimAutoreleasedReturnValue();
    v19 = os_log_type_enabled(v18, OS_LOG_TYPE_ERROR);

    if (v19)
    {
      pk_Payment_log();
      v14 = objc_claimAutoreleasedReturnValue();
      if (!os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
        goto LABEL_15;
      *(_DWORD *)buf = 138412290;
      v30 = v10;
      v20 = "Error: No message identifier for protobuf %@";
      v21 = v14;
      v22 = OS_LOG_TYPE_ERROR;
LABEL_14:
      _os_log_impl(&dword_213518000, v21, v22, v20, buf, 0xCu);
      goto LABEL_15;
    }
  }
LABEL_16:

}

void __107__NPKPaymentWebServiceCompanionTargetDevice_generateISOEncryptionCertificateForSubCredentialId_completion___block_invoke_751(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  _BOOL4 v5;
  NSObject *v6;
  uint64_t v7;
  int v8;
  id v9;
  uint64_t v10;

  v10 = *MEMORY[0x24BDAC8D0];
  v3 = a2;
  pk_Payment_log();
  v4 = objc_claimAutoreleasedReturnValue();
  v5 = os_log_type_enabled(v4, OS_LOG_TYPE_ERROR);

  if (v5)
  {
    pk_Payment_log();
    v6 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      v8 = 138412290;
      v9 = v3;
      _os_log_impl(&dword_213518000, v6, OS_LOG_TYPE_ERROR, "Error: Provisioning service outstanding request error handler invoked: %@", (uint8_t *)&v8, 0xCu);
    }

  }
  v7 = *(_QWORD *)(a1 + 32);
  if (v7)
    (*(void (**)(uint64_t, _QWORD, _QWORD, id))(v7 + 16))(v7, 0, 0, v3);

}

- (void)generateISOEncryptionCertificateForSubCredentialIdResponse:(id)a3
{
  id v4;
  NSObject *v5;
  _BOOL4 v6;
  NSObject *v7;
  void *v8;
  void *v9;
  void *v10;
  NSObject *v11;
  NSObject *v12;
  _BOOL4 v13;
  NSObject *v14;
  uint64_t v15;
  uint8_t v16[8];
  _QWORD block[5];
  id v18;
  id v19;
  __int128 *p_buf;
  uint64_t *v21;
  uint64_t *v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t (*v27)(uint64_t, uint64_t);
  void (*v28)(uint64_t);
  id v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t (*v33)(uint64_t, uint64_t);
  void (*v34)(uint64_t);
  id v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t (*v39)(uint64_t, uint64_t);
  void (*v40)(uint64_t);
  id v41;
  __int128 buf;
  uint64_t v43;
  uint64_t (*v44)(uint64_t, uint64_t);
  void (*v45)(uint64_t);
  id v46;
  uint64_t v47;

  v47 = *MEMORY[0x24BDAC8D0];
  v4 = a3;
  pk_Payment_log();
  v5 = objc_claimAutoreleasedReturnValue();
  v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    pk_Payment_log();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend(v4, "npkDescription");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      LODWORD(buf) = 138412290;
      *(_QWORD *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_213518000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Target generateISOEncryptionCertificateForSubCredentialIdResponse: incoming protobuf %@", (uint8_t *)&buf, 0xCu);

    }
  }
  objc_msgSend(v4, "context");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "incomingResponseIdentifier");
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  *(_QWORD *)&buf = 0;
  *((_QWORD *)&buf + 1) = &buf;
  v43 = 0x3032000000;
  v44 = __Block_byref_object_copy__342;
  v45 = __Block_byref_object_dispose__343;
  v46 = 0;
  v36 = 0;
  v37 = &v36;
  v38 = 0x3032000000;
  v39 = __Block_byref_object_copy__23;
  v40 = __Block_byref_object_dispose__23;
  v41 = 0;
  v30 = 0;
  v31 = &v30;
  v32 = 0x3032000000;
  v33 = __Block_byref_object_copy__23;
  v34 = __Block_byref_object_dispose__23;
  v35 = 0;
  v24 = 0;
  v25 = &v24;
  v26 = 0x3032000000;
  v27 = __Block_byref_object_copy__23;
  v28 = __Block_byref_object_dispose__23;
  v29 = 0;
  if (v10)
  {
    -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
    v11 = objc_claimAutoreleasedReturnValue();
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 3221225472;
    block[2] = __104__NPKPaymentWebServiceCompanionTargetDevice_generateISOEncryptionCertificateForSubCredentialIdResponse___block_invoke;
    block[3] = &unk_24CFECFC0;
    block[4] = self;
    v18 = v10;
    v19 = v4;
    p_buf = &buf;
    v21 = &v36;
    v22 = &v30;
    v23 = &v24;
    dispatch_sync(v11, block);

  }
  else
  {
    pk_Payment_log();
    v12 = objc_claimAutoreleasedReturnValue();
    v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      pk_Payment_log();
      v14 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)v16 = 0;
        _os_log_impl(&dword_213518000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v16, 2u);
      }

    }
  }
  v15 = *(_QWORD *)(*((_QWORD *)&buf + 1) + 40);
  if (v15)
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 16))(v15, v37[5], v31[5], v25[5]);
  _Block_object_dispose(&v24, 8);

  _Block_object_dispose(&v30, 8);
  _Block_object_dispose(&v36, 8);

  _Block_object_dispose(&buf, 8);
}

void __104__NPKPaymentWebServiceCompanionTargetDevice_generateISOEncryptionCertificateForSubCredentialIdResponse___block_invoke(uint64_t a1)
{
  void *v1;
  void *v3;
  void *v4;
  NPKProtoGenerateISOEncryptionCertificateForSubCredentialIdResponse *v5;
  void *v6;
  NPKProtoGenerateISOEncryptionCertificateForSubCredentialIdResponse *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  _BOOL4 v18;
  NSObject *v19;
  void *v20;
  NSObject *v21;
  _BOOL4 v22;
  NSObject *v23;
  __int16 v24[8];

  objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "objectForKey:", *(_QWORD *)(a1 + 40));
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  if (v4)
  {
    v5 = [NPKProtoGenerateISOEncryptionCertificateForSubCredentialIdResponse alloc];
    objc_msgSend(*(id *)(a1 + 48), "data");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    v7 = -[NPKProtoGenerateISOEncryptionCertificateForSubCredentialIdResponse initWithData:](v5, "initWithData:", v6);

    objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "removeObjectForKey:", *(_QWORD *)(a1 + 40));

    objc_msgSend(v4, "completionHandler");
    v9 = objc_claimAutoreleasedReturnValue();
    v10 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
    v11 = *(void **)(v10 + 40);
    *(_QWORD *)(v10 + 40) = v9;

    -[NPKProtoGenerateISOEncryptionCertificateForSubCredentialIdResponse attestations](v7, "attestations");
    v12 = objc_claimAutoreleasedReturnValue();
    v13 = *(_QWORD *)(*(_QWORD *)(a1 + 64) + 8);
    v14 = *(void **)(v13 + 40);
    *(_QWORD *)(v13 + 40) = v12;

    -[NPKProtoGenerateISOEncryptionCertificateForSubCredentialIdResponse authorization](v7, "authorization");
    v15 = objc_claimAutoreleasedReturnValue();
    v16 = *(_QWORD *)(*(_QWORD *)(a1 + 72) + 8);
    v17 = *(void **)(v16 + 40);
    *(_QWORD *)(v16 + 40) = v15;

    v18 = -[NPKProtoGenerateISOEncryptionCertificateForSubCredentialIdResponse hasErrorData](v7, "hasErrorData");
    if (v18)
    {
      -[NPKProtoGenerateISOEncryptionCertificateForSubCredentialIdResponse errorData](v7, "errorData");
      v1 = (void *)objc_claimAutoreleasedReturnValue();
      v19 = objc_opt_class();
      NPKSecureUnarchiveObject(v1, v19);
      v20 = (void *)objc_claimAutoreleasedReturnValue();
    }
    else
    {
      v20 = 0;
    }
    objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 80) + 8) + 40), v20);
    if (v18)
    {

    }
  }
  else
  {
    pk_Payment_log();
    v21 = objc_claimAutoreleasedReturnValue();
    v22 = os_log_type_enabled(v21, OS_LOG_TYPE_DEFAULT);

    if (v22)
    {
      pk_Payment_log();
      v23 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v23, OS_LOG_TYPE_DEFAULT))
      {
        v24[0] = 0;
        _os_log_impl(&dword_213518000, v23, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", (uint8_t *)v24, 2u);
      }

    }
  }

}

- (void)requestAndStoreExternalizedAuthWithCompletion:(id)a3
{
  id v4;
  NSObject *v5;
  NSObject *v6;
  _BOOL4 v7;
  NSObject *v8;
  void *v9;
  uint64_t v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  uint8_t v17[8];
  _QWORD block[5];
  id v19;
  _QWORD v20[2];
  _QWORD v21[3];

  v21[2] = *MEMORY[0x24BDAC8D0];
  v4 = a3;
  if (-[NPKPaymentWebServiceCompanionTargetDevice _isUnifiedAccessProvisioningSupported](self, "_isUnifiedAccessProvisioningSupported"))
  {
    -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
    v5 = objc_claimAutoreleasedReturnValue();
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 3221225472;
    block[2] = __91__NPKPaymentWebServiceCompanionTargetDevice_requestAndStoreExternalizedAuthWithCompletion___block_invoke;
    block[3] = &unk_24CFE9188;
    block[4] = self;
    v19 = v4;
    dispatch_sync(v5, block);

  }
  else
  {
    pk_Payment_log();
    v6 = objc_claimAutoreleasedReturnValue();
    v7 = os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT);

    if (v7)
    {
      pk_Payment_log();
      v8 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)v17 = 0;
        _os_log_impl(&dword_213518000, v8, OS_LOG_TYPE_DEFAULT, "Notice: Target device does not support unified access provisioning.", v17, 2u);
      }

    }
    if (v4)
    {
      v9 = (void *)MEMORY[0x24BDD1540];
      v10 = *MEMORY[0x24BE6F2A8];
      v20[0] = *MEMORY[0x24BDD0FD8];
      objc_msgSend(MEMORY[0x24BDD1488], "bundleForClass:", objc_opt_class());
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v11, "localizedStringForKey:value:table:", CFSTR("UNIFIED_ACCESS_ERROR_ALERT_CANNOT_ADD_KEY_TITLE"), &stru_24CFF06D8, CFSTR("NanoPassKitUI-Hydra"));
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      v21[0] = v12;
      v20[1] = *MEMORY[0x24BDD0FF0];
      objc_msgSend(MEMORY[0x24BDD1488], "bundleForClass:", objc_opt_class());
      v13 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v13, "localizedStringForKey:value:table:", CFSTR("UNIFIED_ACCESS_ERROR_ALERT_CANNOT_ADD_KEY_MESSAGE"), &stru_24CFF06D8, CFSTR("NanoPassKitUI-Hydra"));
      v14 = (void *)objc_claimAutoreleasedReturnValue();
      v21[1] = v14;
      objc_msgSend(MEMORY[0x24BDBCE70], "dictionaryWithObjects:forKeys:count:", v21, v20, 2);
      v15 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v9, "errorWithDomain:code:userInfo:", v10, 4, v15);
      v16 = (void *)objc_claimAutoreleasedReturnValue();

      (*((void (**)(id, void *))v4 + 2))(v4, v16);
    }
  }

}

void __91__NPKPaymentWebServiceCompanionTargetDevice_requestAndStoreExternalizedAuthWithCompletion___block_invoke(uint64_t a1)
{
  NSObject *v2;
  _BOOL4 v3;
  NSObject *v4;
  void *v5;
  NPKProtoFidoExternalizedAuthRequest *v6;
  id v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  NSObject *v13;
  void *v14;
  void *v15;
  void *v16;
  NSObject *v17;
  _BOOL4 v18;
  const char *v19;
  NSObject *v20;
  os_log_type_t v21;
  NSObject *v22;
  _BOOL4 v23;
  _QWORD v24[4];
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint8_t buf[4];
  void *v29;
  uint64_t v30;

  v30 = *MEMORY[0x24BDAC8D0];
  pk_General_log();
  v2 = objc_claimAutoreleasedReturnValue();
  v3 = os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT);

  if (v3)
  {
    pk_General_log();
    v4 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      v5 = (void *)MEMORY[0x2199B6780](*(_QWORD *)(a1 + 40));
      *(_DWORD *)buf = 138412290;
      v29 = v5;
      _os_log_impl(&dword_213518000, v4, OS_LOG_TYPE_DEFAULT, "Notice: Target request and store externalized auth with completion %@", buf, 0xCu);

    }
  }
  v6 = objc_alloc_init(NPKProtoFidoExternalizedAuthRequest);
  v7 = objc_alloc(MEMORY[0x24BE4FE40]);
  -[NPKProtoFidoExternalizedAuthRequest data](v6, "data");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v9 = (void *)objc_msgSend(v7, "initWithProtobufData:type:isResponse:", v8, 99, 0);

  v10 = *(void **)(a1 + 32);
  v26 = *MEMORY[0x24BE4FAC0];
  v27 = MEMORY[0x24BDBD1C8];
  objc_msgSend(MEMORY[0x24BDBCE70], "dictionaryWithObjects:forKeys:count:", &v27, &v26, 1);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v10, "_sendProtobuf:responseExpected:extraOptions:", v9, 1, v11);
  v12 = (void *)objc_claimAutoreleasedReturnValue();

  if (v12)
  {
    if (*(_QWORD *)(a1 + 40))
    {
      v13 = MEMORY[0x2199B6780]();
      v24[0] = MEMORY[0x24BDAC760];
      v24[1] = 3221225472;
      v24[2] = __91__NPKPaymentWebServiceCompanionTargetDevice_requestAndStoreExternalizedAuthWithCompletion___block_invoke_754;
      v24[3] = &unk_24CFE7B80;
      v25 = *(id *)(a1 + 40);
      v14 = (void *)MEMORY[0x2199B6780](v24);
      v15 = *(void **)(a1 + 32);
      v16 = (void *)MEMORY[0x2199B6780](v13);
      objc_msgSend(v15, "_trackOutstandingRequestWithMessageIdentifier:completionHandler:errorHandler:", v12, v16, v14);

LABEL_15:
      goto LABEL_16;
    }
    pk_Payment_log();
    v22 = objc_claimAutoreleasedReturnValue();
    v23 = os_log_type_enabled(v22, OS_LOG_TYPE_DEFAULT);

    if (v23)
    {
      pk_Payment_log();
      v13 = objc_claimAutoreleasedReturnValue();
      if (!os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
        goto LABEL_15;
      *(_DWORD *)buf = 138412290;
      v29 = v12;
      v19 = "Warning: No response expected for message with identifier %@";
      v20 = v13;
      v21 = OS_LOG_TYPE_DEFAULT;
      goto LABEL_14;
    }
  }
  else
  {
    pk_Payment_log();
    v17 = objc_claimAutoreleasedReturnValue();
    v18 = os_log_type_enabled(v17, OS_LOG_TYPE_ERROR);

    if (v18)
    {
      pk_Payment_log();
      v13 = objc_claimAutoreleasedReturnValue();
      if (!os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
        goto LABEL_15;
      *(_DWORD *)buf = 138412290;
      v29 = v9;
      v19 = "Error: No message identifier for protobuf %@";
      v20 = v13;
      v21 = OS_LOG_TYPE_ERROR;
LABEL_14:
      _os_log_impl(&dword_213518000, v20, v21, v19, buf, 0xCu);
      goto LABEL_15;
    }
  }
LABEL_16:

}

void __91__NPKPaymentWebServiceCompanionTargetDevice_requestAndStoreExternalizedAuthWithCompletion___block_invoke_754(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  _BOOL4 v5;
  NSObject *v6;
  uint64_t v7;
  int v8;
  id v9;
  uint64_t v10;

  v10 = *MEMORY[0x24BDAC8D0];
  v3 = a2;
  pk_Payment_log();
  v4 = objc_claimAutoreleasedReturnValue();
  v5 = os_log_type_enabled(v4, OS_LOG_TYPE_ERROR);

  if (v5)
  {
    pk_Payment_log();
    v6 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      v8 = 138412290;
      v9 = v3;
      _os_log_impl(&dword_213518000, v6, OS_LOG_TYPE_ERROR, "Error: Provisioning service outstanding request error handler invoked: %@", (uint8_t *)&v8, 0xCu);
    }

  }
  v7 = *(_QWORD *)(a1 + 32);
  if (v7)
    (*(void (**)(uint64_t, id))(v7 + 16))(v7, v3);

}

- (void)requestAndStoreExternalizedAuthWithCompletionResponse:(id)a3
{
  id v4;
  NSObject *v5;
  _BOOL4 v6;
  NSObject *v7;
  void *v8;
  void *v9;
  void *v10;
  NSObject *v11;
  NSObject *v12;
  _BOOL4 v13;
  NSObject *v14;
  uint64_t v15;
  uint8_t v16[8];
  _QWORD block[5];
  id v18;
  id v19;
  __int128 *p_buf;
  uint64_t *v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t (*v25)(uint64_t, uint64_t);
  void (*v26)(uint64_t);
  id v27;
  __int128 buf;
  uint64_t v29;
  uint64_t (*v30)(uint64_t, uint64_t);
  void (*v31)(uint64_t);
  id v32;
  uint64_t v33;

  v33 = *MEMORY[0x24BDAC8D0];
  v4 = a3;
  pk_Payment_log();
  v5 = objc_claimAutoreleasedReturnValue();
  v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    pk_Payment_log();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend(v4, "npkDescription");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      LODWORD(buf) = 138412290;
      *(_QWORD *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_213518000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Target requestAndStoreExternalizedAuthWithCompletionResponse: incoming protobuf %@", (uint8_t *)&buf, 0xCu);

    }
  }
  objc_msgSend(v4, "context");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "incomingResponseIdentifier");
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  *(_QWORD *)&buf = 0;
  *((_QWORD *)&buf + 1) = &buf;
  v29 = 0x3032000000;
  v30 = __Block_byref_object_copy__342;
  v31 = __Block_byref_object_dispose__343;
  v32 = 0;
  v22 = 0;
  v23 = &v22;
  v24 = 0x3032000000;
  v25 = __Block_byref_object_copy__23;
  v26 = __Block_byref_object_dispose__23;
  v27 = 0;
  if (v10)
  {
    -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
    v11 = objc_claimAutoreleasedReturnValue();
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 3221225472;
    block[2] = __99__NPKPaymentWebServiceCompanionTargetDevice_requestAndStoreExternalizedAuthWithCompletionResponse___block_invoke;
    block[3] = &unk_24CFED0D8;
    block[4] = self;
    v18 = v10;
    v19 = v4;
    p_buf = &buf;
    v21 = &v22;
    dispatch_sync(v11, block);

  }
  else
  {
    pk_Payment_log();
    v12 = objc_claimAutoreleasedReturnValue();
    v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      pk_Payment_log();
      v14 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)v16 = 0;
        _os_log_impl(&dword_213518000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v16, 2u);
      }

    }
  }
  v15 = *(_QWORD *)(*((_QWORD *)&buf + 1) + 40);
  if (v15)
    (*(void (**)(uint64_t, uint64_t))(v15 + 16))(v15, v23[5]);
  _Block_object_dispose(&v22, 8);

  _Block_object_dispose(&buf, 8);
}

void __99__NPKPaymentWebServiceCompanionTargetDevice_requestAndStoreExternalizedAuthWithCompletionResponse___block_invoke(uint64_t a1)
{
  void *v1;
  void *v3;
  void *v4;
  NPKProtoFidoExternalizedAuthResponse *v5;
  void *v6;
  NPKProtoFidoExternalizedAuthResponse *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  _BOOL4 v12;
  NSObject *v13;
  void *v14;
  NSObject *v15;
  _BOOL4 v16;
  NSObject *v17;
  __int16 v18[8];

  objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "objectForKey:", *(_QWORD *)(a1 + 40));
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  if (v4)
  {
    v5 = [NPKProtoFidoExternalizedAuthResponse alloc];
    objc_msgSend(*(id *)(a1 + 48), "data");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    v7 = -[NPKProtoFidoExternalizedAuthResponse initWithData:](v5, "initWithData:", v6);

    objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "removeObjectForKey:", *(_QWORD *)(a1 + 40));

    objc_msgSend(v4, "completionHandler");
    v9 = objc_claimAutoreleasedReturnValue();
    v10 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
    v11 = *(void **)(v10 + 40);
    *(_QWORD *)(v10 + 40) = v9;

    v12 = -[NPKProtoFidoExternalizedAuthResponse hasErrorData](v7, "hasErrorData");
    if (v12)
    {
      -[NPKProtoFidoExternalizedAuthResponse errorData](v7, "errorData");
      v1 = (void *)objc_claimAutoreleasedReturnValue();
      v13 = objc_opt_class();
      NPKSecureUnarchiveObject(v1, v13);
      v14 = (void *)objc_claimAutoreleasedReturnValue();
    }
    else
    {
      v14 = 0;
    }
    objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 40), v14);
    if (v12)
    {

    }
  }
  else
  {
    pk_Payment_log();
    v15 = objc_claimAutoreleasedReturnValue();
    v16 = os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT);

    if (v16)
    {
      pk_Payment_log();
      v17 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
      {
        v18[0] = 0;
        _os_log_impl(&dword_213518000, v17, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", (uint8_t *)v18, 2u);
      }

    }
  }

}

- (void)paymentWebService:(id)a3 generateTransactionKeyWithParameters:(id)a4 withCompletion:(id)a5
{
  id v7;
  id v8;
  NSObject *v9;
  NSObject *v10;
  _BOOL4 v11;
  NSObject *v12;
  void *v13;
  uint64_t v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  uint8_t v21[16];
  _QWORD block[4];
  id v23;
  NPKPaymentWebServiceCompanionTargetDevice *v24;
  id v25;
  _QWORD v26[2];
  _QWORD v27[3];

  v27[2] = *MEMORY[0x24BDAC8D0];
  v7 = a4;
  v8 = a5;
  if (-[NPKPaymentWebServiceCompanionTargetDevice _isUnifiedAccessProvisioningSupported](self, "_isUnifiedAccessProvisioningSupported"))
  {
    -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
    v9 = objc_claimAutoreleasedReturnValue();
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 3221225472;
    block[2] = __115__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_generateTransactionKeyWithParameters_withCompletion___block_invoke;
    block[3] = &unk_24CFED5E8;
    v23 = v7;
    v24 = self;
    v25 = v8;
    dispatch_sync(v9, block);

  }
  else
  {
    pk_Payment_log();
    v10 = objc_claimAutoreleasedReturnValue();
    v11 = os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT);

    if (v11)
    {
      pk_Payment_log();
      v12 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)v21 = 0;
        _os_log_impl(&dword_213518000, v12, OS_LOG_TYPE_DEFAULT, "Notice: Target device does not support unified access provisioning.", v21, 2u);
      }

    }
    if (v8)
    {
      v13 = (void *)MEMORY[0x24BDD1540];
      v14 = *MEMORY[0x24BE6F2A8];
      v26[0] = *MEMORY[0x24BDD0FD8];
      objc_msgSend(MEMORY[0x24BDD1488], "bundleForClass:", objc_opt_class());
      v15 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v15, "localizedStringForKey:value:table:", CFSTR("UNIFIED_ACCESS_ERROR_ALERT_CANNOT_ADD_KEY_TITLE"), &stru_24CFF06D8, CFSTR("NanoPassKitUI-Hydra"));
      v16 = (void *)objc_claimAutoreleasedReturnValue();
      v27[0] = v16;
      v26[1] = *MEMORY[0x24BDD0FF0];
      objc_msgSend(MEMORY[0x24BDD1488], "bundleForClass:", objc_opt_class());
      v17 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v17, "localizedStringForKey:value:table:", CFSTR("UNIFIED_ACCESS_ERROR_ALERT_CANNOT_ADD_KEY_MESSAGE"), &stru_24CFF06D8, CFSTR("NanoPassKitUI-Hydra"));
      v18 = (void *)objc_claimAutoreleasedReturnValue();
      v27[1] = v18;
      objc_msgSend(MEMORY[0x24BDBCE70], "dictionaryWithObjects:forKeys:count:", v27, v26, 2);
      v19 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v13, "errorWithDomain:code:userInfo:", v14, 4, v19);
      v20 = (void *)objc_claimAutoreleasedReturnValue();

      (*((void (**)(id, _QWORD, _QWORD, _QWORD, void *))v8 + 2))(v8, 0, 0, 0, v20);
    }
  }

}

void __115__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_generateTransactionKeyWithParameters_withCompletion___block_invoke(uint64_t a1)
{
  NSObject *v2;
  _BOOL4 v3;
  NSObject *v4;
  void *v5;
  void *v6;
  NPKProtoGenerateTransactionKeyWithParametersRequest *v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  NSObject *v15;
  void *v16;
  void *v17;
  void *v18;
  NSObject *v19;
  _BOOL4 v20;
  const char *v21;
  NSObject *v22;
  os_log_type_t v23;
  NSObject *v24;
  _BOOL4 v25;
  _QWORD v26[4];
  id v27;
  uint64_t v28;
  void *v29;
  uint8_t buf[4];
  void *v31;
  __int16 v32;
  void *v33;
  uint64_t v34;

  v34 = *MEMORY[0x24BDAC8D0];
  pk_General_log();
  v2 = objc_claimAutoreleasedReturnValue();
  v3 = os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT);

  if (v3)
  {
    pk_General_log();
    v4 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      v5 = *(void **)(a1 + 32);
      v6 = (void *)MEMORY[0x2199B6780](*(_QWORD *)(a1 + 48));
      *(_DWORD *)buf = 138412546;
      v31 = v5;
      v32 = 2112;
      v33 = v6;
      _os_log_impl(&dword_213518000, v4, OS_LOG_TYPE_DEFAULT, "Notice: Target generate transaction key with parameters %@ completion %@", buf, 0x16u);

    }
  }
  v7 = objc_alloc_init(NPKProtoGenerateTransactionKeyWithParametersRequest);
  objc_msgSend(MEMORY[0x24BDD1618], "archivedDataWithRootObject:requiringSecureCoding:error:", *(_QWORD *)(a1 + 32), 1, 0);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  -[NPKProtoGenerateTransactionKeyWithParametersRequest setParameters:](v7, "setParameters:", v8);
  v9 = objc_alloc(MEMORY[0x24BE4FE40]);
  -[NPKProtoGenerateTransactionKeyWithParametersRequest data](v7, "data");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v11 = (void *)objc_msgSend(v9, "initWithProtobufData:type:isResponse:", v10, 100, 0);

  v12 = *(void **)(a1 + 40);
  v28 = *MEMORY[0x24BE4FB30];
  v29 = &unk_24D0566F0;
  objc_msgSend(MEMORY[0x24BDBCE70], "dictionaryWithObjects:forKeys:count:", &v29, &v28, 1);
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v12, "_sendProtobuf:responseExpected:extraOptions:", v11, 1, v13);
  v14 = (void *)objc_claimAutoreleasedReturnValue();

  if (v14)
  {
    if (*(_QWORD *)(a1 + 48))
    {
      v15 = MEMORY[0x2199B6780]();
      v26[0] = MEMORY[0x24BDAC760];
      v26[1] = 3221225472;
      v26[2] = __115__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_generateTransactionKeyWithParameters_withCompletion___block_invoke_758;
      v26[3] = &unk_24CFE7B80;
      v27 = *(id *)(a1 + 48);
      v16 = (void *)MEMORY[0x2199B6780](v26);
      v17 = *(void **)(a1 + 40);
      v18 = (void *)MEMORY[0x2199B6780](v15);
      objc_msgSend(v17, "_trackOutstandingRequestWithMessageIdentifier:completionHandler:errorHandler:", v14, v18, v16);

LABEL_15:
      goto LABEL_16;
    }
    pk_Payment_log();
    v24 = objc_claimAutoreleasedReturnValue();
    v25 = os_log_type_enabled(v24, OS_LOG_TYPE_DEFAULT);

    if (v25)
    {
      pk_Payment_log();
      v15 = objc_claimAutoreleasedReturnValue();
      if (!os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
        goto LABEL_15;
      *(_DWORD *)buf = 138412290;
      v31 = v14;
      v21 = "Warning: No response expected for message with identifier %@";
      v22 = v15;
      v23 = OS_LOG_TYPE_DEFAULT;
      goto LABEL_14;
    }
  }
  else
  {
    pk_Payment_log();
    v19 = objc_claimAutoreleasedReturnValue();
    v20 = os_log_type_enabled(v19, OS_LOG_TYPE_ERROR);

    if (v20)
    {
      pk_Payment_log();
      v15 = objc_claimAutoreleasedReturnValue();
      if (!os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
        goto LABEL_15;
      *(_DWORD *)buf = 138412290;
      v31 = v11;
      v21 = "Error: No message identifier for protobuf %@";
      v22 = v15;
      v23 = OS_LOG_TYPE_ERROR;
LABEL_14:
      _os_log_impl(&dword_213518000, v22, v23, v21, buf, 0xCu);
      goto LABEL_15;
    }
  }
LABEL_16:

}

void __115__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_generateTransactionKeyWithParameters_withCompletion___block_invoke_758(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  _BOOL4 v5;
  NSObject *v6;
  uint64_t v7;
  int v8;
  id v9;
  uint64_t v10;

  v10 = *MEMORY[0x24BDAC8D0];
  v3 = a2;
  pk_Payment_log();
  v4 = objc_claimAutoreleasedReturnValue();
  v5 = os_log_type_enabled(v4, OS_LOG_TYPE_ERROR);

  if (v5)
  {
    pk_Payment_log();
    v6 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      v8 = 138412290;
      v9 = v3;
      _os_log_impl(&dword_213518000, v6, OS_LOG_TYPE_ERROR, "Error: Provisioning service outstanding request error handler invoked: %@", (uint8_t *)&v8, 0xCu);
    }

  }
  v7 = *(_QWORD *)(a1 + 32);
  if (v7)
    (*(void (**)(uint64_t, _QWORD, _QWORD, _QWORD, id))(v7 + 16))(v7, 0, 0, 0, v3);

}

- (void)generateTransactionKeyWithParametersResponse:(id)a3
{
  id v4;
  NSObject *v5;
  _BOOL4 v6;
  NSObject *v7;
  void *v8;
  void *v9;
  void *v10;
  NSObject *v11;
  NSObject *v12;
  _BOOL4 v13;
  NSObject *v14;
  uint64_t v15;
  uint8_t v16[16];
  _QWORD block[5];
  id v18;
  id v19;
  __int128 *p_buf;
  uint64_t *v21;
  uint64_t *v22;
  uint64_t *v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t (*v28)(uint64_t, uint64_t);
  void (*v29)(uint64_t);
  id v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t (*v34)(uint64_t, uint64_t);
  void (*v35)(uint64_t);
  id v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t (*v40)(uint64_t, uint64_t);
  void (*v41)(uint64_t);
  id v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t (*v46)(uint64_t, uint64_t);
  void (*v47)(uint64_t);
  id v48;
  __int128 buf;
  uint64_t v50;
  uint64_t (*v51)(uint64_t, uint64_t);
  void (*v52)(uint64_t);
  id v53;
  uint64_t v54;

  v54 = *MEMORY[0x24BDAC8D0];
  v4 = a3;
  pk_Payment_log();
  v5 = objc_claimAutoreleasedReturnValue();
  v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    pk_Payment_log();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend(v4, "npkDescription");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      LODWORD(buf) = 138412290;
      *(_QWORD *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_213518000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Target generateTransactionKeyWithParametersResponse: incoming protobuf %@", (uint8_t *)&buf, 0xCu);

    }
  }
  objc_msgSend(v4, "context");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "incomingResponseIdentifier");
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  *(_QWORD *)&buf = 0;
  *((_QWORD *)&buf + 1) = &buf;
  v50 = 0x3032000000;
  v51 = __Block_byref_object_copy__342;
  v52 = __Block_byref_object_dispose__343;
  v53 = 0;
  v43 = 0;
  v44 = &v43;
  v45 = 0x3032000000;
  v46 = __Block_byref_object_copy__23;
  v47 = __Block_byref_object_dispose__23;
  v48 = 0;
  v37 = 0;
  v38 = &v37;
  v39 = 0x3032000000;
  v40 = __Block_byref_object_copy__23;
  v41 = __Block_byref_object_dispose__23;
  v42 = 0;
  v31 = 0;
  v32 = &v31;
  v33 = 0x3032000000;
  v34 = __Block_byref_object_copy__23;
  v35 = __Block_byref_object_dispose__23;
  v36 = 0;
  v25 = 0;
  v26 = &v25;
  v27 = 0x3032000000;
  v28 = __Block_byref_object_copy__23;
  v29 = __Block_byref_object_dispose__23;
  v30 = 0;
  if (v10)
  {
    -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
    v11 = objc_claimAutoreleasedReturnValue();
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 3221225472;
    block[2] = __90__NPKPaymentWebServiceCompanionTargetDevice_generateTransactionKeyWithParametersResponse___block_invoke;
    block[3] = &unk_24CFED4A8;
    block[4] = self;
    v18 = v10;
    v19 = v4;
    p_buf = &buf;
    v21 = &v43;
    v22 = &v37;
    v23 = &v31;
    v24 = &v25;
    dispatch_sync(v11, block);

  }
  else
  {
    pk_Payment_log();
    v12 = objc_claimAutoreleasedReturnValue();
    v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      pk_Payment_log();
      v14 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)v16 = 0;
        _os_log_impl(&dword_213518000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v16, 2u);
      }

    }
  }
  v15 = *(_QWORD *)(*((_QWORD *)&buf + 1) + 40);
  if (v15)
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 16))(v15, v44[5], v38[5], v32[5], v26[5]);
  _Block_object_dispose(&v25, 8);

  _Block_object_dispose(&v31, 8);
  _Block_object_dispose(&v37, 8);

  _Block_object_dispose(&v43, 8);
  _Block_object_dispose(&buf, 8);

}

void __90__NPKPaymentWebServiceCompanionTargetDevice_generateTransactionKeyWithParametersResponse___block_invoke(uint64_t a1)
{
  void *v1;
  void *v3;
  void *v4;
  NPKProtoGenerateTransactionKeyWithParametersResponse *v5;
  void *v6;
  NPKProtoGenerateTransactionKeyWithParametersResponse *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  _BOOL4 v21;
  NSObject *v22;
  void *v23;
  NSObject *v24;
  _BOOL4 v25;
  NSObject *v26;
  __int16 v27[8];

  objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "objectForKey:", *(_QWORD *)(a1 + 40));
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  if (v4)
  {
    v5 = [NPKProtoGenerateTransactionKeyWithParametersResponse alloc];
    objc_msgSend(*(id *)(a1 + 48), "data");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    v7 = -[NPKProtoGenerateTransactionKeyWithParametersResponse initWithData:](v5, "initWithData:", v6);

    objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "removeObjectForKey:", *(_QWORD *)(a1 + 40));

    objc_msgSend(v4, "completionHandler");
    v9 = objc_claimAutoreleasedReturnValue();
    v10 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
    v11 = *(void **)(v10 + 40);
    *(_QWORD *)(v10 + 40) = v9;

    -[NPKProtoGenerateTransactionKeyWithParametersResponse transactionKeyIdentifier](v7, "transactionKeyIdentifier");
    v12 = objc_claimAutoreleasedReturnValue();
    v13 = *(_QWORD *)(*(_QWORD *)(a1 + 64) + 8);
    v14 = *(void **)(v13 + 40);
    *(_QWORD *)(v13 + 40) = v12;

    -[NPKProtoGenerateTransactionKeyWithParametersResponse transactionKeyCertChains](v7, "transactionKeyCertChains");
    v15 = objc_claimAutoreleasedReturnValue();
    v16 = *(_QWORD *)(*(_QWORD *)(a1 + 72) + 8);
    v17 = *(void **)(v16 + 40);
    *(_QWORD *)(v16 + 40) = v15;

    -[NPKProtoGenerateTransactionKeyWithParametersResponse appletIdentifier](v7, "appletIdentifier");
    v18 = objc_claimAutoreleasedReturnValue();
    v19 = *(_QWORD *)(*(_QWORD *)(a1 + 80) + 8);
    v20 = *(void **)(v19 + 40);
    *(_QWORD *)(v19 + 40) = v18;

    v21 = -[NPKProtoGenerateTransactionKeyWithParametersResponse hasErrorData](v7, "hasErrorData");
    if (v21)
    {
      -[NPKProtoGenerateTransactionKeyWithParametersResponse errorData](v7, "errorData");
      v1 = (void *)objc_claimAutoreleasedReturnValue();
      v22 = objc_opt_class();
      NPKSecureUnarchiveObject(v1, v22);
      v23 = (void *)objc_claimAutoreleasedReturnValue();
    }
    else
    {
      v23 = 0;
    }
    objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 88) + 8) + 40), v23);
    if (v21)
    {

    }
  }
  else
  {
    pk_Payment_log();
    v24 = objc_claimAutoreleasedReturnValue();
    v25 = os_log_type_enabled(v24, OS_LOG_TYPE_DEFAULT);

    if (v25)
    {
      pk_Payment_log();
      v26 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v26, OS_LOG_TYPE_DEFAULT))
      {
        v27[0] = 0;
        _os_log_impl(&dword_213518000, v26, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", (uint8_t *)v27, 2u);
      }

    }
  }

}

- (void)generateSEEncryptionCertificateForSubCredentialId:(id)a3 completion:(id)a4
{
  id v6;
  id v7;
  NSObject *v8;
  NSObject *v9;
  _BOOL4 v10;
  NSObject *v11;
  void *v12;
  uint64_t v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  uint8_t v20[16];
  _QWORD block[4];
  id v22;
  NPKPaymentWebServiceCompanionTargetDevice *v23;
  id v24;
  _QWORD v25[2];
  _QWORD v26[3];

  v26[2] = *MEMORY[0x24BDAC8D0];
  v6 = a3;
  v7 = a4;
  if (-[NPKPaymentWebServiceCompanionTargetDevice _isUnifiedAccessProvisioningSupported](self, "_isUnifiedAccessProvisioningSupported"))
  {
    -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
    v8 = objc_claimAutoreleasedReturnValue();
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 3221225472;
    block[2] = __106__NPKPaymentWebServiceCompanionTargetDevice_generateSEEncryptionCertificateForSubCredentialId_completion___block_invoke;
    block[3] = &unk_24CFED5E8;
    v22 = v6;
    v23 = self;
    v24 = v7;
    dispatch_sync(v8, block);

  }
  else
  {
    pk_Payment_log();
    v9 = objc_claimAutoreleasedReturnValue();
    v10 = os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT);

    if (v10)
    {
      pk_Payment_log();
      v11 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)v20 = 0;
        _os_log_impl(&dword_213518000, v11, OS_LOG_TYPE_DEFAULT, "Notice: Target device does not support unified access provisioning.", v20, 2u);
      }

    }
    if (v7)
    {
      v12 = (void *)MEMORY[0x24BDD1540];
      v13 = *MEMORY[0x24BE6F2A8];
      v25[0] = *MEMORY[0x24BDD0FD8];
      objc_msgSend(MEMORY[0x24BDD1488], "bundleForClass:", objc_opt_class());
      v14 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v14, "localizedStringForKey:value:table:", CFSTR("UNIFIED_ACCESS_ERROR_ALERT_CANNOT_ADD_KEY_TITLE"), &stru_24CFF06D8, CFSTR("NanoPassKitUI-Hydra"));
      v15 = (void *)objc_claimAutoreleasedReturnValue();
      v26[0] = v15;
      v25[1] = *MEMORY[0x24BDD0FF0];
      objc_msgSend(MEMORY[0x24BDD1488], "bundleForClass:", objc_opt_class());
      v16 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v16, "localizedStringForKey:value:table:", CFSTR("UNIFIED_ACCESS_ERROR_ALERT_CANNOT_ADD_KEY_MESSAGE"), &stru_24CFF06D8, CFSTR("NanoPassKitUI-Hydra"));
      v17 = (void *)objc_claimAutoreleasedReturnValue();
      v26[1] = v17;
      objc_msgSend(MEMORY[0x24BDBCE70], "dictionaryWithObjects:forKeys:count:", v26, v25, 2);
      v18 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v12, "errorWithDomain:code:userInfo:", v13, 4, v18);
      v19 = (void *)objc_claimAutoreleasedReturnValue();

      (*((void (**)(id, _QWORD, void *))v7 + 2))(v7, 0, v19);
    }
  }

}

void __106__NPKPaymentWebServiceCompanionTargetDevice_generateSEEncryptionCertificateForSubCredentialId_completion___block_invoke(uint64_t a1)
{
  NSObject *v2;
  _BOOL4 v3;
  NSObject *v4;
  void *v5;
  void *v6;
  NPKProtoGenerateSEEncryptionCertificateForSubCredentialIdRequest *v7;
  id v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  NSObject *v14;
  void *v15;
  void *v16;
  void *v17;
  NSObject *v18;
  _BOOL4 v19;
  const char *v20;
  NSObject *v21;
  os_log_type_t v22;
  NSObject *v23;
  _BOOL4 v24;
  _QWORD v25[4];
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint8_t buf[4];
  void *v30;
  __int16 v31;
  void *v32;
  uint64_t v33;

  v33 = *MEMORY[0x24BDAC8D0];
  pk_General_log();
  v2 = objc_claimAutoreleasedReturnValue();
  v3 = os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT);

  if (v3)
  {
    pk_General_log();
    v4 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      v5 = *(void **)(a1 + 32);
      v6 = (void *)MEMORY[0x2199B6780](*(_QWORD *)(a1 + 48));
      *(_DWORD *)buf = 138412546;
      v30 = v5;
      v31 = 2112;
      v32 = v6;
      _os_log_impl(&dword_213518000, v4, OS_LOG_TYPE_DEFAULT, "Notice: Target generate SE encryption certificate for subcredential ID %@ completion %@", buf, 0x16u);

    }
  }
  v7 = objc_alloc_init(NPKProtoGenerateSEEncryptionCertificateForSubCredentialIdRequest);
  -[NPKProtoGenerateSEEncryptionCertificateForSubCredentialIdRequest setSubCredentialId:](v7, "setSubCredentialId:", *(_QWORD *)(a1 + 32));
  v8 = objc_alloc(MEMORY[0x24BE4FE40]);
  -[NPKProtoGenerateSEEncryptionCertificateForSubCredentialIdRequest data](v7, "data");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v10 = (void *)objc_msgSend(v8, "initWithProtobufData:type:isResponse:", v9, 101, 0);

  v11 = *(void **)(a1 + 40);
  v27 = *MEMORY[0x24BE4FAC0];
  v28 = MEMORY[0x24BDBD1C8];
  objc_msgSend(MEMORY[0x24BDBCE70], "dictionaryWithObjects:forKeys:count:", &v28, &v27, 1);
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v11, "_sendProtobuf:responseExpected:extraOptions:", v10, 1, v12);
  v13 = (void *)objc_claimAutoreleasedReturnValue();

  if (v13)
  {
    if (*(_QWORD *)(a1 + 48))
    {
      v14 = MEMORY[0x2199B6780]();
      v25[0] = MEMORY[0x24BDAC760];
      v25[1] = 3221225472;
      v25[2] = __106__NPKPaymentWebServiceCompanionTargetDevice_generateSEEncryptionCertificateForSubCredentialId_completion___block_invoke_761;
      v25[3] = &unk_24CFE7B80;
      v26 = *(id *)(a1 + 48);
      v15 = (void *)MEMORY[0x2199B6780](v25);
      v16 = *(void **)(a1 + 40);
      v17 = (void *)MEMORY[0x2199B6780](v14);
      objc_msgSend(v16, "_trackOutstandingRequestWithMessageIdentifier:completionHandler:errorHandler:", v13, v17, v15);

LABEL_15:
      goto LABEL_16;
    }
    pk_Payment_log();
    v23 = objc_claimAutoreleasedReturnValue();
    v24 = os_log_type_enabled(v23, OS_LOG_TYPE_DEFAULT);

    if (v24)
    {
      pk_Payment_log();
      v14 = objc_claimAutoreleasedReturnValue();
      if (!os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
        goto LABEL_15;
      *(_DWORD *)buf = 138412290;
      v30 = v13;
      v20 = "Warning: No response expected for message with identifier %@";
      v21 = v14;
      v22 = OS_LOG_TYPE_DEFAULT;
      goto LABEL_14;
    }
  }
  else
  {
    pk_Payment_log();
    v18 = objc_claimAutoreleasedReturnValue();
    v19 = os_log_type_enabled(v18, OS_LOG_TYPE_ERROR);

    if (v19)
    {
      pk_Payment_log();
      v14 = objc_claimAutoreleasedReturnValue();
      if (!os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
        goto LABEL_15;
      *(_DWORD *)buf = 138412290;
      v30 = v10;
      v20 = "Error: No message identifier for protobuf %@";
      v21 = v14;
      v22 = OS_LOG_TYPE_ERROR;
LABEL_14:
      _os_log_impl(&dword_213518000, v21, v22, v20, buf, 0xCu);
      goto LABEL_15;
    }
  }
LABEL_16:

}

void __106__NPKPaymentWebServiceCompanionTargetDevice_generateSEEncryptionCertificateForSubCredentialId_completion___block_invoke_761(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  _BOOL4 v5;
  NSObject *v6;
  uint64_t v7;
  int v8;
  id v9;
  uint64_t v10;

  v10 = *MEMORY[0x24BDAC8D0];
  v3 = a2;
  pk_Payment_log();
  v4 = objc_claimAutoreleasedReturnValue();
  v5 = os_log_type_enabled(v4, OS_LOG_TYPE_ERROR);

  if (v5)
  {
    pk_Payment_log();
    v6 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      v8 = 138412290;
      v9 = v3;
      _os_log_impl(&dword_213518000, v6, OS_LOG_TYPE_ERROR, "Error: Provisioning service outstanding request error handler invoked: %@", (uint8_t *)&v8, 0xCu);
    }

  }
  v7 = *(_QWORD *)(a1 + 32);
  if (v7)
    (*(void (**)(uint64_t, _QWORD, id))(v7 + 16))(v7, 0, v3);

}

- (void)generateSEEncryptionCertificateForSubCredentialIdResponse:(id)a3
{
  id v4;
  NSObject *v5;
  _BOOL4 v6;
  NSObject *v7;
  void *v8;
  void *v9;
  void *v10;
  NSObject *v11;
  NSObject *v12;
  _BOOL4 v13;
  NSObject *v14;
  uint64_t v15;
  uint8_t v16[16];
  _QWORD block[5];
  id v18;
  id v19;
  __int128 *p_buf;
  uint64_t *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t (*v26)(uint64_t, uint64_t);
  void (*v27)(uint64_t);
  id v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t (*v32)(uint64_t, uint64_t);
  void (*v33)(uint64_t);
  id v34;
  __int128 buf;
  uint64_t v36;
  uint64_t (*v37)(uint64_t, uint64_t);
  void (*v38)(uint64_t);
  id v39;
  uint64_t v40;

  v40 = *MEMORY[0x24BDAC8D0];
  v4 = a3;
  pk_Payment_log();
  v5 = objc_claimAutoreleasedReturnValue();
  v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    pk_Payment_log();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend(v4, "npkDescription");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      LODWORD(buf) = 138412290;
      *(_QWORD *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_213518000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Target generateSEEncryptionCertificateForSubCredentialIdResponse: incoming protobuf %@", (uint8_t *)&buf, 0xCu);

    }
  }
  objc_msgSend(v4, "context");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "incomingResponseIdentifier");
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  *(_QWORD *)&buf = 0;
  *((_QWORD *)&buf + 1) = &buf;
  v36 = 0x3032000000;
  v37 = __Block_byref_object_copy__342;
  v38 = __Block_byref_object_dispose__343;
  v39 = 0;
  v29 = 0;
  v30 = &v29;
  v31 = 0x3032000000;
  v32 = __Block_byref_object_copy__23;
  v33 = __Block_byref_object_dispose__23;
  v34 = 0;
  v23 = 0;
  v24 = &v23;
  v25 = 0x3032000000;
  v26 = __Block_byref_object_copy__23;
  v27 = __Block_byref_object_dispose__23;
  v28 = 0;
  if (v10)
  {
    -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
    v11 = objc_claimAutoreleasedReturnValue();
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 3221225472;
    block[2] = __103__NPKPaymentWebServiceCompanionTargetDevice_generateSEEncryptionCertificateForSubCredentialIdResponse___block_invoke;
    block[3] = &unk_24CFED060;
    block[4] = self;
    v18 = v10;
    v19 = v4;
    p_buf = &buf;
    v21 = &v29;
    v22 = &v23;
    dispatch_sync(v11, block);

  }
  else
  {
    pk_Payment_log();
    v12 = objc_claimAutoreleasedReturnValue();
    v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      pk_Payment_log();
      v14 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)v16 = 0;
        _os_log_impl(&dword_213518000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v16, 2u);
      }

    }
  }
  v15 = *(_QWORD *)(*((_QWORD *)&buf + 1) + 40);
  if (v15)
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v15, v30[5], v24[5]);
  _Block_object_dispose(&v23, 8);

  _Block_object_dispose(&v29, 8);
  _Block_object_dispose(&buf, 8);

}

void __103__NPKPaymentWebServiceCompanionTargetDevice_generateSEEncryptionCertificateForSubCredentialIdResponse___block_invoke(uint64_t a1)
{
  void *v1;
  void *v3;
  void *v4;
  NPKProtoGenerateSEEncryptionCertificateForSubCredentialIdResponse *v5;
  void *v6;
  NPKProtoGenerateSEEncryptionCertificateForSubCredentialIdResponse *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  _BOOL4 v15;
  NSObject *v16;
  void *v17;
  NSObject *v18;
  _BOOL4 v19;
  NSObject *v20;
  __int16 v21[8];

  objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "objectForKey:", *(_QWORD *)(a1 + 40));
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  if (v4)
  {
    v5 = [NPKProtoGenerateSEEncryptionCertificateForSubCredentialIdResponse alloc];
    objc_msgSend(*(id *)(a1 + 48), "data");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    v7 = -[NPKProtoGenerateSEEncryptionCertificateForSubCredentialIdResponse initWithData:](v5, "initWithData:", v6);

    objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "removeObjectForKey:", *(_QWORD *)(a1 + 40));

    objc_msgSend(v4, "completionHandler");
    v9 = objc_claimAutoreleasedReturnValue();
    v10 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
    v11 = *(void **)(v10 + 40);
    *(_QWORD *)(v10 + 40) = v9;

    -[NPKProtoGenerateSEEncryptionCertificateForSubCredentialIdResponse certificate](v7, "certificate");
    v12 = objc_claimAutoreleasedReturnValue();
    v13 = *(_QWORD *)(*(_QWORD *)(a1 + 64) + 8);
    v14 = *(void **)(v13 + 40);
    *(_QWORD *)(v13 + 40) = v12;

    v15 = -[NPKProtoGenerateSEEncryptionCertificateForSubCredentialIdResponse hasErrorData](v7, "hasErrorData");
    if (v15)
    {
      -[NPKProtoGenerateSEEncryptionCertificateForSubCredentialIdResponse errorData](v7, "errorData");
      v1 = (void *)objc_claimAutoreleasedReturnValue();
      v16 = objc_opt_class();
      NPKSecureUnarchiveObject(v1, v16);
      v17 = (void *)objc_claimAutoreleasedReturnValue();
    }
    else
    {
      v17 = 0;
    }
    objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 72) + 8) + 40), v17);
    if (v15)
    {

    }
  }
  else
  {
    pk_Payment_log();
    v18 = objc_claimAutoreleasedReturnValue();
    v19 = os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT);

    if (v19)
    {
      pk_Payment_log();
      v20 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v20, OS_LOG_TYPE_DEFAULT))
      {
        v21[0] = 0;
        _os_log_impl(&dword_213518000, v20, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", (uint8_t *)v21, 2u);
      }

    }
  }

}

- (void)deleteKeyMaterialForSubCredentialId:(id)a3
{
  id v4;
  NSObject *v5;
  NSObject *v6;
  _BOOL4 v7;
  NSObject *v8;
  uint8_t v9[16];
  _QWORD block[4];
  id v11;
  NPKPaymentWebServiceCompanionTargetDevice *v12;

  v4 = a3;
  if (-[NPKPaymentWebServiceCompanionTargetDevice _isUnifiedAccessProvisioningSupported](self, "_isUnifiedAccessProvisioningSupported"))
  {
    -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
    v5 = objc_claimAutoreleasedReturnValue();
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 3221225472;
    block[2] = __81__NPKPaymentWebServiceCompanionTargetDevice_deleteKeyMaterialForSubCredentialId___block_invoke;
    block[3] = &unk_24CFE7E40;
    v11 = v4;
    v12 = self;
    dispatch_sync(v5, block);

  }
  else
  {
    pk_Payment_log();
    v6 = objc_claimAutoreleasedReturnValue();
    v7 = os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT);

    if (v7)
    {
      pk_Payment_log();
      v8 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)v9 = 0;
        _os_log_impl(&dword_213518000, v8, OS_LOG_TYPE_DEFAULT, "Notice: Target device does not support unified access provisioning.", v9, 2u);
      }

    }
  }

}

void __81__NPKPaymentWebServiceCompanionTargetDevice_deleteKeyMaterialForSubCredentialId___block_invoke(uint64_t a1)
{
  NSObject *v2;
  _BOOL4 v3;
  NSObject *v4;
  void *v5;
  NPKProtoDeleteKeyMaterialForSubCredentialIdRequest *v6;
  id v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  NSObject *v13;
  _BOOL4 v14;
  NSObject *v15;
  uint64_t v16;
  uint64_t v17;
  uint8_t buf[4];
  void *v19;
  uint64_t v20;

  v20 = *MEMORY[0x24BDAC8D0];
  pk_General_log();
  v2 = objc_claimAutoreleasedReturnValue();
  v3 = os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT);

  if (v3)
  {
    pk_General_log();
    v4 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      v5 = *(void **)(a1 + 32);
      *(_DWORD *)buf = 138412290;
      v19 = v5;
      _os_log_impl(&dword_213518000, v4, OS_LOG_TYPE_DEFAULT, "Notice: Target delete key material for subcredential ID %@", buf, 0xCu);
    }

  }
  v6 = objc_alloc_init(NPKProtoDeleteKeyMaterialForSubCredentialIdRequest);
  -[NPKProtoDeleteKeyMaterialForSubCredentialIdRequest setCredentialIdentifier:](v6, "setCredentialIdentifier:", *(_QWORD *)(a1 + 32));
  v7 = objc_alloc(MEMORY[0x24BE4FE40]);
  -[NPKProtoDeleteKeyMaterialForSubCredentialIdRequest data](v6, "data");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v9 = (void *)objc_msgSend(v7, "initWithProtobufData:type:isResponse:", v8, 102, 0);

  v10 = *(void **)(a1 + 40);
  v16 = *MEMORY[0x24BE4FAC0];
  v17 = MEMORY[0x24BDBD1C8];
  objc_msgSend(MEMORY[0x24BDBCE70], "dictionaryWithObjects:forKeys:count:", &v17, &v16, 1);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v10, "_sendProtobuf:responseExpected:extraOptions:", v9, 0, v11);
  v12 = (void *)objc_claimAutoreleasedReturnValue();

  if (!v12)
  {
    pk_Payment_log();
    v13 = objc_claimAutoreleasedReturnValue();
    v14 = os_log_type_enabled(v13, OS_LOG_TYPE_ERROR);

    if (v14)
    {
      pk_Payment_log();
      v15 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 138412290;
        v19 = v9;
        _os_log_impl(&dword_213518000, v15, OS_LOG_TYPE_ERROR, "Error: No message identifier for protobuf %@", buf, 0xCu);
      }

    }
  }

}

- (void)addISO18013Blobs:(id)a3 cardType:(int64_t)a4 completion:(id)a5
{
  id v8;
  id v9;
  NSObject *v10;
  NSObject *v11;
  _BOOL4 v12;
  NSObject *v13;
  void *v14;
  uint64_t v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  uint8_t v22[8];
  _QWORD block[4];
  id v24;
  NPKPaymentWebServiceCompanionTargetDevice *v25;
  id v26;
  int64_t v27;
  _QWORD v28[2];
  _QWORD v29[3];

  v29[2] = *MEMORY[0x24BDAC8D0];
  v8 = a3;
  v9 = a5;
  if (-[NPKPaymentWebServiceCompanionTargetDevice _isUnifiedAccessProvisioningSupported](self, "_isUnifiedAccessProvisioningSupported"))
  {
    -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
    v10 = objc_claimAutoreleasedReturnValue();
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 3221225472;
    block[2] = __82__NPKPaymentWebServiceCompanionTargetDevice_addISO18013Blobs_cardType_completion___block_invoke;
    block[3] = &unk_24CFEDC08;
    v24 = v8;
    v27 = a4;
    v25 = self;
    v26 = v9;
    dispatch_sync(v10, block);

  }
  else
  {
    pk_Payment_log();
    v11 = objc_claimAutoreleasedReturnValue();
    v12 = os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT);

    if (v12)
    {
      pk_Payment_log();
      v13 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)v22 = 0;
        _os_log_impl(&dword_213518000, v13, OS_LOG_TYPE_DEFAULT, "Notice: Target device does not support unified access provisioning.", v22, 2u);
      }

    }
    if (v9)
    {
      v14 = (void *)MEMORY[0x24BDD1540];
      v15 = *MEMORY[0x24BE6F2A8];
      v28[0] = *MEMORY[0x24BDD0FD8];
      objc_msgSend(MEMORY[0x24BDD1488], "bundleForClass:", objc_opt_class());
      v16 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v16, "localizedStringForKey:value:table:", CFSTR("UNIFIED_ACCESS_ERROR_ALERT_CANNOT_ADD_KEY_TITLE"), &stru_24CFF06D8, CFSTR("NanoPassKitUI-Hydra"));
      v17 = (void *)objc_claimAutoreleasedReturnValue();
      v29[0] = v17;
      v28[1] = *MEMORY[0x24BDD0FF0];
      objc_msgSend(MEMORY[0x24BDD1488], "bundleForClass:", objc_opt_class());
      v18 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v18, "localizedStringForKey:value:table:", CFSTR("UNIFIED_ACCESS_ERROR_ALERT_CANNOT_ADD_KEY_MESSAGE"), &stru_24CFF06D8, CFSTR("NanoPassKitUI-Hydra"));
      v19 = (void *)objc_claimAutoreleasedReturnValue();
      v29[1] = v19;
      objc_msgSend(MEMORY[0x24BDBCE70], "dictionaryWithObjects:forKeys:count:", v29, v28, 2);
      v20 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v14, "errorWithDomain:code:userInfo:", v15, 4, v20);
      v21 = (void *)objc_claimAutoreleasedReturnValue();

      (*((void (**)(id, void *))v9 + 2))(v9, v21);
    }
  }

}

void __82__NPKPaymentWebServiceCompanionTargetDevice_addISO18013Blobs_cardType_completion___block_invoke(uint64_t a1)
{
  NSObject *v2;
  _BOOL4 v3;
  NSObject *v4;
  void *v5;
  uint64_t v6;
  void *v7;
  NPKProtoAddISO18013BlobsRequest *v8;
  id v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t i;
  void *v16;
  void *v17;
  void *v18;
  uint64_t v19;
  id v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  NSObject *v26;
  void *v27;
  void *v28;
  void *v29;
  NSObject *v30;
  _BOOL4 v31;
  const char *v32;
  NSObject *v33;
  os_log_type_t v34;
  NSObject *v35;
  _BOOL4 v36;
  _QWORD v37[4];
  id v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  uint64_t v43;
  uint64_t v44;
  uint8_t v45[128];
  uint8_t buf[4];
  void *v47;
  __int16 v48;
  uint64_t v49;
  __int16 v50;
  void *v51;
  uint64_t v52;

  v52 = *MEMORY[0x24BDAC8D0];
  pk_General_log();
  v2 = objc_claimAutoreleasedReturnValue();
  v3 = os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT);

  if (v3)
  {
    pk_General_log();
    v4 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      v5 = *(void **)(a1 + 32);
      v6 = *(_QWORD *)(a1 + 56);
      v7 = (void *)MEMORY[0x2199B6780](*(_QWORD *)(a1 + 48));
      *(_DWORD *)buf = 138412802;
      v47 = v5;
      v48 = 2048;
      v49 = v6;
      v50 = 2112;
      v51 = v7;
      _os_log_impl(&dword_213518000, v4, OS_LOG_TYPE_DEFAULT, "Notice: Target add ISO18013 blobs %@ with card type %ld, completion %@", buf, 0x20u);

    }
  }
  v8 = objc_alloc_init(NPKProtoAddISO18013BlobsRequest);
  v9 = objc_alloc_init(MEMORY[0x24BDBCEB8]);
  v10 = objc_alloc_init(MEMORY[0x24BDBCEB8]);
  v39 = 0u;
  v40 = 0u;
  v41 = 0u;
  v42 = 0u;
  v11 = *(id *)(a1 + 32);
  v12 = objc_msgSend(v11, "countByEnumeratingWithState:objects:count:", &v39, v45, 16);
  if (v12)
  {
    v13 = v12;
    v14 = *(_QWORD *)v40;
    do
    {
      for (i = 0; i != v13; ++i)
      {
        if (*(_QWORD *)v40 != v14)
          objc_enumerationMutation(v11);
        v16 = *(void **)(*((_QWORD *)&v39 + 1) + 8 * i);
        NPKSecureArchiveObject(v16);
        v17 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v9, "addObject:", v17);

        objc_msgSend(*(id *)(a1 + 32), "objectForKey:", v16);
        v18 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v10, "addObject:", v18);

      }
      v13 = objc_msgSend(v11, "countByEnumeratingWithState:objects:count:", &v39, v45, 16);
    }
    while (v13);
  }

  -[NPKProtoAddISO18013BlobsRequest setSubcredentialDatas:](v8, "setSubcredentialDatas:", v9);
  -[NPKProtoAddISO18013BlobsRequest setIsoblobs:](v8, "setIsoblobs:", v10);
  if ((unint64_t)(*(_QWORD *)(a1 + 56) - 1) < 4)
    v19 = *(unsigned int *)(a1 + 56);
  else
    v19 = 0;
  -[NPKProtoAddISO18013BlobsRequest setCardType:](v8, "setCardType:", v19);
  v20 = objc_alloc(MEMORY[0x24BE4FE40]);
  -[NPKProtoAddISO18013BlobsRequest data](v8, "data");
  v21 = (void *)objc_claimAutoreleasedReturnValue();
  v22 = (void *)objc_msgSend(v20, "initWithProtobufData:type:isResponse:", v21, 107, 0);

  v23 = *(void **)(a1 + 40);
  v43 = *MEMORY[0x24BE4FAC0];
  v44 = MEMORY[0x24BDBD1C8];
  objc_msgSend(MEMORY[0x24BDBCE70], "dictionaryWithObjects:forKeys:count:", &v44, &v43, 1);
  v24 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v23, "_sendProtobuf:responseExpected:extraOptions:", v22, 1, v24);
  v25 = (void *)objc_claimAutoreleasedReturnValue();

  if (v25)
  {
    if (*(_QWORD *)(a1 + 48))
    {
      v26 = MEMORY[0x2199B6780]();
      v37[0] = MEMORY[0x24BDAC760];
      v37[1] = 3221225472;
      v37[2] = __82__NPKPaymentWebServiceCompanionTargetDevice_addISO18013Blobs_cardType_completion___block_invoke_765;
      v37[3] = &unk_24CFE7B80;
      v38 = *(id *)(a1 + 48);
      v27 = (void *)MEMORY[0x2199B6780](v37);
      v28 = *(void **)(a1 + 40);
      v29 = (void *)MEMORY[0x2199B6780](v26);
      objc_msgSend(v28, "_trackOutstandingRequestWithMessageIdentifier:completionHandler:errorHandler:", v25, v29, v27);

LABEL_25:
      goto LABEL_26;
    }
    pk_Payment_log();
    v35 = objc_claimAutoreleasedReturnValue();
    v36 = os_log_type_enabled(v35, OS_LOG_TYPE_DEFAULT);

    if (v36)
    {
      pk_Payment_log();
      v26 = objc_claimAutoreleasedReturnValue();
      if (!os_log_type_enabled(v26, OS_LOG_TYPE_DEFAULT))
        goto LABEL_25;
      *(_DWORD *)buf = 138412290;
      v47 = v25;
      v32 = "Warning: No response expected for message with identifier %@";
      v33 = v26;
      v34 = OS_LOG_TYPE_DEFAULT;
      goto LABEL_24;
    }
  }
  else
  {
    pk_Payment_log();
    v30 = objc_claimAutoreleasedReturnValue();
    v31 = os_log_type_enabled(v30, OS_LOG_TYPE_ERROR);

    if (v31)
    {
      pk_Payment_log();
      v26 = objc_claimAutoreleasedReturnValue();
      if (!os_log_type_enabled(v26, OS_LOG_TYPE_ERROR))
        goto LABEL_25;
      *(_DWORD *)buf = 138412290;
      v47 = v22;
      v32 = "Error: No message identifier for protobuf %@";
      v33 = v26;
      v34 = OS_LOG_TYPE_ERROR;
LABEL_24:
      _os_log_impl(&dword_213518000, v33, v34, v32, buf, 0xCu);
      goto LABEL_25;
    }
  }
LABEL_26:

}

void __82__NPKPaymentWebServiceCompanionTargetDevice_addISO18013Blobs_cardType_completion___block_invoke_765(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  _BOOL4 v5;
  NSObject *v6;
  uint64_t v7;
  int v8;
  id v9;
  uint64_t v10;

  v10 = *MEMORY[0x24BDAC8D0];
  v3 = a2;
  pk_Payment_log();
  v4 = objc_claimAutoreleasedReturnValue();
  v5 = os_log_type_enabled(v4, OS_LOG_TYPE_ERROR);

  if (v5)
  {
    pk_Payment_log();
    v6 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      v8 = 138412290;
      v9 = v3;
      _os_log_impl(&dword_213518000, v6, OS_LOG_TYPE_ERROR, "Error: Provisioning service outstanding request error handler invoked: %@", (uint8_t *)&v8, 0xCu);
    }

  }
  v7 = *(_QWORD *)(a1 + 32);
  if (v7)
    (*(void (**)(uint64_t, id))(v7 + 16))(v7, v3);

}

- (void)addISO18013BlobsResponse:(id)a3
{
  id v4;
  NSObject *v5;
  _BOOL4 v6;
  NSObject *v7;
  void *v8;
  void *v9;
  void *v10;
  NSObject *v11;
  NSObject *v12;
  _BOOL4 v13;
  NSObject *v14;
  uint64_t v15;
  uint8_t v16[8];
  _QWORD block[5];
  id v18;
  id v19;
  __int128 *p_buf;
  uint64_t *v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t (*v25)(uint64_t, uint64_t);
  void (*v26)(uint64_t);
  id v27;
  __int128 buf;
  uint64_t v29;
  uint64_t (*v30)(uint64_t, uint64_t);
  void (*v31)(uint64_t);
  id v32;
  uint64_t v33;

  v33 = *MEMORY[0x24BDAC8D0];
  v4 = a3;
  pk_Payment_log();
  v5 = objc_claimAutoreleasedReturnValue();
  v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    pk_Payment_log();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend(v4, "npkDescription");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      LODWORD(buf) = 138412290;
      *(_QWORD *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_213518000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Target addISO18013BlobsResponse: incoming protobuf %@", (uint8_t *)&buf, 0xCu);

    }
  }
  objc_msgSend(v4, "context");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "incomingResponseIdentifier");
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  *(_QWORD *)&buf = 0;
  *((_QWORD *)&buf + 1) = &buf;
  v29 = 0x3032000000;
  v30 = __Block_byref_object_copy__342;
  v31 = __Block_byref_object_dispose__343;
  v32 = 0;
  v22 = 0;
  v23 = &v22;
  v24 = 0x3032000000;
  v25 = __Block_byref_object_copy__23;
  v26 = __Block_byref_object_dispose__23;
  v27 = 0;
  if (v10)
  {
    -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
    v11 = objc_claimAutoreleasedReturnValue();
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 3221225472;
    block[2] = __70__NPKPaymentWebServiceCompanionTargetDevice_addISO18013BlobsResponse___block_invoke;
    block[3] = &unk_24CFED0D8;
    block[4] = self;
    v18 = v10;
    v19 = v4;
    p_buf = &buf;
    v21 = &v22;
    dispatch_sync(v11, block);

  }
  else
  {
    pk_Payment_log();
    v12 = objc_claimAutoreleasedReturnValue();
    v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      pk_Payment_log();
      v14 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)v16 = 0;
        _os_log_impl(&dword_213518000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v16, 2u);
      }

    }
  }
  v15 = *(_QWORD *)(*((_QWORD *)&buf + 1) + 40);
  if (v15)
    (*(void (**)(uint64_t, uint64_t))(v15 + 16))(v15, v23[5]);
  _Block_object_dispose(&v22, 8);

  _Block_object_dispose(&buf, 8);
}

void __70__NPKPaymentWebServiceCompanionTargetDevice_addISO18013BlobsResponse___block_invoke(uint64_t a1)
{
  void *v1;
  void *v3;
  void *v4;
  NPKProtoAddISO18013BlobsResponse *v5;
  void *v6;
  NPKProtoAddISO18013BlobsResponse *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  _BOOL4 v12;
  NSObject *v13;
  void *v14;
  NSObject *v15;
  _BOOL4 v16;
  NSObject *v17;
  __int16 v18[8];

  objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "objectForKey:", *(_QWORD *)(a1 + 40));
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  if (v4)
  {
    v5 = [NPKProtoAddISO18013BlobsResponse alloc];
    objc_msgSend(*(id *)(a1 + 48), "data");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    v7 = -[NPKProtoAddISO18013BlobsResponse initWithData:](v5, "initWithData:", v6);

    objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "removeObjectForKey:", *(_QWORD *)(a1 + 40));

    objc_msgSend(v4, "completionHandler");
    v9 = objc_claimAutoreleasedReturnValue();
    v10 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
    v11 = *(void **)(v10 + 40);
    *(_QWORD *)(v10 + 40) = v9;

    v12 = -[NPKProtoAddISO18013BlobsResponse hasErrorData](v7, "hasErrorData");
    if (v12)
    {
      -[NPKProtoAddISO18013BlobsResponse errorData](v7, "errorData");
      v1 = (void *)objc_claimAutoreleasedReturnValue();
      v13 = objc_opt_class();
      NPKSecureUnarchiveObject(v1, v13);
      v14 = (void *)objc_claimAutoreleasedReturnValue();
    }
    else
    {
      v14 = 0;
    }
    objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 40), v14);
    if (v12)
    {

    }
  }
  else
  {
    pk_Payment_log();
    v15 = objc_claimAutoreleasedReturnValue();
    v16 = os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT);

    if (v16)
    {
      pk_Payment_log();
      v17 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
      {
        v18[0] = 0;
        _os_log_impl(&dword_213518000, v17, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", (uint8_t *)v18, 2u);
      }

    }
  }

}

- (BOOL)areUnifiedAccessPassesSupported
{
  void *v2;
  void *v3;
  char v4;

  NPKPairedOrPairingDevice();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = (void *)objc_msgSend(objc_alloc(MEMORY[0x24BDD1880]), "initWithUUIDString:", CFSTR("BA0452A1-075E-4E13-B48F-E36DF2F88980"));
  v4 = objc_msgSend(v2, "supportsCapability:", v3);

  return v4;
}

- (void)longTermPrivacyKeyForCredentialGroupIdentifier:(id)a3 reuseExisting:(BOOL)a4 completion:(id)a5
{
  id v8;
  id v9;
  NSObject *v10;
  NSObject *v11;
  _BOOL4 v12;
  NSObject *v13;
  void *v14;
  uint8_t v15[16];
  _QWORD block[4];
  id v17;
  NPKPaymentWebServiceCompanionTargetDevice *v18;
  id v19;
  BOOL v20;

  v8 = a3;
  v9 = a5;
  if (-[NPKPaymentWebServiceCompanionTargetDevice _isSharedInvitationProvisioningSupported](self, "_isSharedInvitationProvisioningSupported"))
  {
    -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
    v10 = objc_claimAutoreleasedReturnValue();
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 3221225472;
    block[2] = __117__NPKPaymentWebServiceCompanionTargetDevice_longTermPrivacyKeyForCredentialGroupIdentifier_reuseExisting_completion___block_invoke;
    block[3] = &unk_24CFEDC30;
    v17 = v8;
    v20 = a4;
    v18 = self;
    v19 = v9;
    dispatch_sync(v10, block);

  }
  else
  {
    pk_Payment_log();
    v11 = objc_claimAutoreleasedReturnValue();
    v12 = os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT);

    if (v12)
    {
      pk_Payment_log();
      v13 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)v15 = 0;
        _os_log_impl(&dword_213518000, v13, OS_LOG_TYPE_DEFAULT, "Notice: Target device does not support share invitation provisioning.", v15, 2u);
      }

    }
    if (v9)
    {
      PKDisplayableErrorForCommonType();
      v14 = (void *)objc_claimAutoreleasedReturnValue();
      (*((void (**)(id, _QWORD, void *))v9 + 2))(v9, 0, v14);

    }
  }

}

void __117__NPKPaymentWebServiceCompanionTargetDevice_longTermPrivacyKeyForCredentialGroupIdentifier_reuseExisting_completion___block_invoke(uint64_t a1)
{
  NSObject *v2;
  _BOOL4 v3;
  NSObject *v4;
  void *v5;
  const __CFString *v6;
  void *v7;
  NPKProtoLongTermPrivacyKeyRequest *v8;
  id v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  NSObject *v15;
  void *v16;
  void *v17;
  void *v18;
  NSObject *v19;
  _BOOL4 v20;
  NSObject *v21;
  NSObject *v22;
  _BOOL4 v23;
  const char *v24;
  NSObject *v25;
  os_log_type_t v26;
  NSObject *v27;
  _BOOL4 v28;
  _QWORD v29[4];
  id v30;
  uint64_t v31;
  void *v32;
  uint8_t buf[4];
  void *v34;
  __int16 v35;
  const __CFString *v36;
  __int16 v37;
  void *v38;
  uint64_t v39;

  v39 = *MEMORY[0x24BDAC8D0];
  pk_General_log();
  v2 = objc_claimAutoreleasedReturnValue();
  v3 = os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT);

  if (v3)
  {
    pk_General_log();
    v4 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      v5 = *(void **)(a1 + 32);
      if (*(_BYTE *)(a1 + 56))
        v6 = CFSTR("YES");
      else
        v6 = CFSTR("NO");
      v7 = (void *)MEMORY[0x2199B6780](*(_QWORD *)(a1 + 48));
      *(_DWORD *)buf = 138412802;
      v34 = v5;
      v35 = 2112;
      v36 = v6;
      v37 = 2112;
      v38 = v7;
      _os_log_impl(&dword_213518000, v4, OS_LOG_TYPE_DEFAULT, "Notice: Target device - Request for long term privacy key for credential with group identifier: %@, reuseExisting: %@, completion: %@", buf, 0x20u);

    }
  }
  if (*(_QWORD *)(a1 + 32))
  {
    v8 = objc_alloc_init(NPKProtoLongTermPrivacyKeyRequest);
    -[NPKProtoLongTermPrivacyKeyRequest setCredentialGroupIdentifier:](v8, "setCredentialGroupIdentifier:", *(_QWORD *)(a1 + 32));
    -[NPKProtoLongTermPrivacyKeyRequest setReuseExisting:](v8, "setReuseExisting:", *(unsigned __int8 *)(a1 + 56));
    v9 = objc_alloc(MEMORY[0x24BE4FE40]);
    -[NPKProtoLongTermPrivacyKeyRequest data](v8, "data");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    v11 = (void *)objc_msgSend(v9, "initWithProtobufData:type:isResponse:", v10, 110, 0);

    v12 = *(void **)(a1 + 40);
    v31 = *MEMORY[0x24BE4FB30];
    v32 = &unk_24D0566F0;
    objc_msgSend(MEMORY[0x24BDBCE70], "dictionaryWithObjects:forKeys:count:", &v32, &v31, 1);
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v12, "_sendProtobuf:responseExpected:extraOptions:", v11, 1, v13);
    v14 = (void *)objc_claimAutoreleasedReturnValue();

    if (v14)
    {
      if (*(_QWORD *)(a1 + 48))
      {
        v15 = MEMORY[0x2199B6780]();
        v29[0] = MEMORY[0x24BDAC760];
        v29[1] = 3221225472;
        v29[2] = __117__NPKPaymentWebServiceCompanionTargetDevice_longTermPrivacyKeyForCredentialGroupIdentifier_reuseExisting_completion___block_invoke_770;
        v29[3] = &unk_24CFE7B80;
        v30 = *(id *)(a1 + 48);
        v16 = (void *)MEMORY[0x2199B6780](v29);
        v17 = *(void **)(a1 + 40);
        v18 = (void *)MEMORY[0x2199B6780](v15);
        objc_msgSend(v17, "_trackOutstandingRequestWithMessageIdentifier:completionHandler:errorHandler:", v14, v18, v16);

LABEL_25:
        goto LABEL_26;
      }
      pk_Payment_log();
      v27 = objc_claimAutoreleasedReturnValue();
      v28 = os_log_type_enabled(v27, OS_LOG_TYPE_DEFAULT);

      if (v28)
      {
        pk_Payment_log();
        v15 = objc_claimAutoreleasedReturnValue();
        if (!os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
          goto LABEL_25;
        *(_DWORD *)buf = 138412290;
        v34 = v14;
        v24 = "Warning: No response expected for message with identifier %@";
        v25 = v15;
        v26 = OS_LOG_TYPE_DEFAULT;
        goto LABEL_24;
      }
    }
    else
    {
      pk_Payment_log();
      v22 = objc_claimAutoreleasedReturnValue();
      v23 = os_log_type_enabled(v22, OS_LOG_TYPE_ERROR);

      if (v23)
      {
        pk_Payment_log();
        v15 = objc_claimAutoreleasedReturnValue();
        if (!os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
          goto LABEL_25;
        *(_DWORD *)buf = 138412290;
        v34 = v11;
        v24 = "Error: No message identifier for protobuf %@";
        v25 = v15;
        v26 = OS_LOG_TYPE_ERROR;
LABEL_24:
        _os_log_impl(&dword_213518000, v25, v26, v24, buf, 0xCu);
        goto LABEL_25;
      }
    }
LABEL_26:

    goto LABEL_27;
  }
  pk_General_log();
  v19 = objc_claimAutoreleasedReturnValue();
  v20 = os_log_type_enabled(v19, OS_LOG_TYPE_ERROR);

  if (v20)
  {
    pk_General_log();
    v21 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)buf = 0;
      _os_log_impl(&dword_213518000, v21, OS_LOG_TYPE_ERROR, "Error: Unable to access long term privacy key without specified group identifier", buf, 2u);
    }

  }
  if (*(_QWORD *)(a1 + 48))
  {
    PKDisplayableErrorForCommonType();
    v8 = (NPKProtoLongTermPrivacyKeyRequest *)objc_claimAutoreleasedReturnValue();
    (*(void (**)(void))(*(_QWORD *)(a1 + 48) + 16))();
LABEL_27:

  }
}

void __117__NPKPaymentWebServiceCompanionTargetDevice_longTermPrivacyKeyForCredentialGroupIdentifier_reuseExisting_completion___block_invoke_770(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  _BOOL4 v5;
  NSObject *v6;
  uint64_t v7;
  int v8;
  id v9;
  uint64_t v10;

  v10 = *MEMORY[0x24BDAC8D0];
  v3 = a2;
  pk_Payment_log();
  v4 = objc_claimAutoreleasedReturnValue();
  v5 = os_log_type_enabled(v4, OS_LOG_TYPE_ERROR);

  if (v5)
  {
    pk_Payment_log();
    v6 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      v8 = 138412290;
      v9 = v3;
      _os_log_impl(&dword_213518000, v6, OS_LOG_TYPE_ERROR, "Error: Provisioning service outstanding request error handler invoked: %@", (uint8_t *)&v8, 0xCu);
    }

  }
  v7 = *(_QWORD *)(a1 + 32);
  if (v7)
    (*(void (**)(uint64_t, _QWORD, id))(v7 + 16))(v7, 0, v3);

}

- (void)longTermPrivacyKeyForCredentialGroupIdentifierResponse:(id)a3
{
  id v4;
  NSObject *v5;
  _BOOL4 v6;
  NSObject *v7;
  void *v8;
  void *v9;
  void *v10;
  NSObject *v11;
  NSObject *v12;
  _BOOL4 v13;
  NSObject *v14;
  uint64_t v15;
  uint8_t v16[16];
  _QWORD block[5];
  id v18;
  id v19;
  __int128 *p_buf;
  uint64_t *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t (*v26)(uint64_t, uint64_t);
  void (*v27)(uint64_t);
  id v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t (*v32)(uint64_t, uint64_t);
  void (*v33)(uint64_t);
  id v34;
  __int128 buf;
  uint64_t v36;
  uint64_t (*v37)(uint64_t, uint64_t);
  void (*v38)(uint64_t);
  id v39;
  uint64_t v40;

  v40 = *MEMORY[0x24BDAC8D0];
  v4 = a3;
  pk_Payment_log();
  v5 = objc_claimAutoreleasedReturnValue();
  v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    pk_Payment_log();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend(v4, "npkDescription");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      LODWORD(buf) = 138412290;
      *(_QWORD *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_213518000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Target longTermPrivacyKeyForCredentialGroupIdentifierResponse: incoming protobuf %@", (uint8_t *)&buf, 0xCu);

    }
  }
  objc_msgSend(v4, "context");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "incomingResponseIdentifier");
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  *(_QWORD *)&buf = 0;
  *((_QWORD *)&buf + 1) = &buf;
  v36 = 0x3032000000;
  v37 = __Block_byref_object_copy__342;
  v38 = __Block_byref_object_dispose__343;
  v39 = 0;
  v29 = 0;
  v30 = &v29;
  v31 = 0x3032000000;
  v32 = __Block_byref_object_copy__23;
  v33 = __Block_byref_object_dispose__23;
  v34 = 0;
  v23 = 0;
  v24 = &v23;
  v25 = 0x3032000000;
  v26 = __Block_byref_object_copy__23;
  v27 = __Block_byref_object_dispose__23;
  v28 = 0;
  if (v10)
  {
    -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
    v11 = objc_claimAutoreleasedReturnValue();
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 3221225472;
    block[2] = __100__NPKPaymentWebServiceCompanionTargetDevice_longTermPrivacyKeyForCredentialGroupIdentifierResponse___block_invoke;
    block[3] = &unk_24CFED060;
    block[4] = self;
    v18 = v10;
    v19 = v4;
    p_buf = &buf;
    v21 = &v29;
    v22 = &v23;
    dispatch_sync(v11, block);

  }
  else
  {
    pk_Payment_log();
    v12 = objc_claimAutoreleasedReturnValue();
    v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      pk_Payment_log();
      v14 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)v16 = 0;
        _os_log_impl(&dword_213518000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v16, 2u);
      }

    }
  }
  v15 = *(_QWORD *)(*((_QWORD *)&buf + 1) + 40);
  if (v15)
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v15, v30[5], v24[5]);
  _Block_object_dispose(&v23, 8);

  _Block_object_dispose(&v29, 8);
  _Block_object_dispose(&buf, 8);

}

void __100__NPKPaymentWebServiceCompanionTargetDevice_longTermPrivacyKeyForCredentialGroupIdentifierResponse___block_invoke(uint64_t a1)
{
  void *v1;
  void *v3;
  void *v4;
  NPKProtoLongTermPrivacyKeyResponse *v5;
  void *v6;
  NPKProtoLongTermPrivacyKeyResponse *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  _BOOL4 v15;
  NSObject *v16;
  void *v17;
  NSObject *v18;
  _BOOL4 v19;
  NSObject *v20;
  __int16 v21[8];

  objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "objectForKey:", *(_QWORD *)(a1 + 40));
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  if (v4)
  {
    v5 = [NPKProtoLongTermPrivacyKeyResponse alloc];
    objc_msgSend(*(id *)(a1 + 48), "data");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    v7 = -[NPKProtoLongTermPrivacyKeyResponse initWithData:](v5, "initWithData:", v6);

    objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "removeObjectForKey:", *(_QWORD *)(a1 + 40));

    objc_msgSend(v4, "completionHandler");
    v9 = objc_claimAutoreleasedReturnValue();
    v10 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
    v11 = *(void **)(v10 + 40);
    *(_QWORD *)(v10 + 40) = v9;

    -[NPKProtoLongTermPrivacyKeyResponse keyData](v7, "keyData");
    v12 = objc_claimAutoreleasedReturnValue();
    v13 = *(_QWORD *)(*(_QWORD *)(a1 + 64) + 8);
    v14 = *(void **)(v13 + 40);
    *(_QWORD *)(v13 + 40) = v12;

    v15 = -[NPKProtoLongTermPrivacyKeyResponse hasErrorData](v7, "hasErrorData");
    if (v15)
    {
      -[NPKProtoLongTermPrivacyKeyResponse errorData](v7, "errorData");
      v1 = (void *)objc_claimAutoreleasedReturnValue();
      v16 = objc_opt_class();
      NPKSecureUnarchiveObject(v1, v16);
      v17 = (void *)objc_claimAutoreleasedReturnValue();
    }
    else
    {
      v17 = 0;
    }
    objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 72) + 8) + 40), v17);
    if (v15)
    {

    }
  }
  else
  {
    pk_Payment_log();
    v18 = objc_claimAutoreleasedReturnValue();
    v19 = os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT);

    if (v19)
    {
      pk_Payment_log();
      v20 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v20, OS_LOG_TYPE_DEFAULT))
      {
        v21[0] = 0;
        _os_log_impl(&dword_213518000, v20, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", (uint8_t *)v21, 2u);
      }

    }
  }

}

- (void)retrieveShareInvitationForMailboxAddress:(id)a3 completion:(id)a4
{
  id v6;
  id v7;
  NSObject *v8;
  NSObject *v9;
  _BOOL4 v10;
  NSObject *v11;
  void *v12;
  uint8_t v13[8];
  _QWORD block[4];
  id v15;
  NPKPaymentWebServiceCompanionTargetDevice *v16;
  id v17;

  v6 = a3;
  v7 = a4;
  if (-[NPKPaymentWebServiceCompanionTargetDevice _isSharedInvitationProvisioningSupported](self, "_isSharedInvitationProvisioningSupported"))
  {
    -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
    v8 = objc_claimAutoreleasedReturnValue();
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 3221225472;
    block[2] = __97__NPKPaymentWebServiceCompanionTargetDevice_retrieveShareInvitationForMailboxAddress_completion___block_invoke;
    block[3] = &unk_24CFED5E8;
    v15 = v6;
    v16 = self;
    v17 = v7;
    dispatch_sync(v8, block);

  }
  else
  {
    pk_Payment_log();
    v9 = objc_claimAutoreleasedReturnValue();
    v10 = os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT);

    if (v10)
    {
      pk_Payment_log();
      v11 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)v13 = 0;
        _os_log_impl(&dword_213518000, v11, OS_LOG_TYPE_DEFAULT, "Notice: Target device does not support share invitation provisioning.", v13, 2u);
      }

    }
    if (v7)
    {
      PKDisplayableErrorForCommonType();
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      (*((void (**)(id, _QWORD, void *))v7 + 2))(v7, 0, v12);

    }
  }

}

void __97__NPKPaymentWebServiceCompanionTargetDevice_retrieveShareInvitationForMailboxAddress_completion___block_invoke(uint64_t a1)
{
  NSObject *v2;
  _BOOL4 v3;
  NSObject *v4;
  void *v5;
  void *v6;
  NPKProtoRetrieveShareInvitationForMailboxAddressRequest *v7;
  id v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  NSObject *v14;
  void *v15;
  void *v16;
  void *v17;
  NSObject *v18;
  _BOOL4 v19;
  NSObject *v20;
  NSObject *v21;
  _BOOL4 v22;
  const char *v23;
  NSObject *v24;
  os_log_type_t v25;
  NSObject *v26;
  _BOOL4 v27;
  _QWORD v28[4];
  id v29;
  uint64_t v30;
  void *v31;
  uint8_t buf[4];
  void *v33;
  __int16 v34;
  void *v35;
  uint64_t v36;

  v36 = *MEMORY[0x24BDAC8D0];
  pk_General_log();
  v2 = objc_claimAutoreleasedReturnValue();
  v3 = os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT);

  if (v3)
  {
    pk_General_log();
    v4 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      v5 = *(void **)(a1 + 32);
      v6 = (void *)MEMORY[0x2199B6780](*(_QWORD *)(a1 + 48));
      *(_DWORD *)buf = 138478083;
      v33 = v5;
      v34 = 2112;
      v35 = v6;
      _os_log_impl(&dword_213518000, v4, OS_LOG_TYPE_DEFAULT, "Notice: Target device - Request to retrieve share invitation for mailbox address: %{private}@, completion: %@", buf, 0x16u);

    }
  }
  if (*(_QWORD *)(a1 + 32))
  {
    v7 = objc_alloc_init(NPKProtoRetrieveShareInvitationForMailboxAddressRequest);
    -[NPKProtoRetrieveShareInvitationForMailboxAddressRequest setMailboxAddress:](v7, "setMailboxAddress:", *(_QWORD *)(a1 + 32));
    v8 = objc_alloc(MEMORY[0x24BE4FE40]);
    -[NPKProtoRetrieveShareInvitationForMailboxAddressRequest data](v7, "data");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    v10 = (void *)objc_msgSend(v8, "initWithProtobufData:type:isResponse:", v9, 111, 0);

    v11 = *(void **)(a1 + 40);
    v30 = *MEMORY[0x24BE4FB30];
    v31 = &unk_24D056700;
    objc_msgSend(MEMORY[0x24BDBCE70], "dictionaryWithObjects:forKeys:count:", &v31, &v30, 1);
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v11, "_sendProtobuf:responseExpected:extraOptions:priority:", v10, 1, v12, 300);
    v13 = (void *)objc_claimAutoreleasedReturnValue();

    if (v13)
    {
      if (*(_QWORD *)(a1 + 48))
      {
        v14 = MEMORY[0x2199B6780]();
        v28[0] = MEMORY[0x24BDAC760];
        v28[1] = 3221225472;
        v28[2] = __97__NPKPaymentWebServiceCompanionTargetDevice_retrieveShareInvitationForMailboxAddress_completion___block_invoke_773;
        v28[3] = &unk_24CFE7B80;
        v29 = *(id *)(a1 + 48);
        v15 = (void *)MEMORY[0x2199B6780](v28);
        v16 = *(void **)(a1 + 40);
        v17 = (void *)MEMORY[0x2199B6780](v14);
        objc_msgSend(v16, "_trackOutstandingRequestWithMessageIdentifier:completionHandler:errorHandler:", v13, v17, v15);

LABEL_22:
        goto LABEL_23;
      }
      pk_Payment_log();
      v26 = objc_claimAutoreleasedReturnValue();
      v27 = os_log_type_enabled(v26, OS_LOG_TYPE_DEFAULT);

      if (v27)
      {
        pk_Payment_log();
        v14 = objc_claimAutoreleasedReturnValue();
        if (!os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
          goto LABEL_22;
        *(_DWORD *)buf = 138412290;
        v33 = v13;
        v23 = "Warning: No response expected for message with identifier %@";
        v24 = v14;
        v25 = OS_LOG_TYPE_DEFAULT;
        goto LABEL_21;
      }
    }
    else
    {
      pk_Payment_log();
      v21 = objc_claimAutoreleasedReturnValue();
      v22 = os_log_type_enabled(v21, OS_LOG_TYPE_ERROR);

      if (v22)
      {
        pk_Payment_log();
        v14 = objc_claimAutoreleasedReturnValue();
        if (!os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
          goto LABEL_22;
        *(_DWORD *)buf = 138412290;
        v33 = v10;
        v23 = "Error: No message identifier for protobuf %@";
        v24 = v14;
        v25 = OS_LOG_TYPE_ERROR;
LABEL_21:
        _os_log_impl(&dword_213518000, v24, v25, v23, buf, 0xCu);
        goto LABEL_22;
      }
    }
LABEL_23:

    goto LABEL_24;
  }
  pk_General_log();
  v18 = objc_claimAutoreleasedReturnValue();
  v19 = os_log_type_enabled(v18, OS_LOG_TYPE_ERROR);

  if (v19)
  {
    pk_General_log();
    v20 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)buf = 0;
      _os_log_impl(&dword_213518000, v20, OS_LOG_TYPE_ERROR, "Error: Unable to retrieve share invitation without specified mailbox address", buf, 2u);
    }

  }
  if (*(_QWORD *)(a1 + 48))
  {
    PKDisplayableErrorForCommonType();
    v7 = (NPKProtoRetrieveShareInvitationForMailboxAddressRequest *)objc_claimAutoreleasedReturnValue();
    (*(void (**)(void))(*(_QWORD *)(a1 + 48) + 16))();
LABEL_24:

  }
}

void __97__NPKPaymentWebServiceCompanionTargetDevice_retrieveShareInvitationForMailboxAddress_completion___block_invoke_773(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  _BOOL4 v5;
  NSObject *v6;
  uint64_t v7;
  int v8;
  id v9;
  uint64_t v10;

  v10 = *MEMORY[0x24BDAC8D0];
  v3 = a2;
  pk_Payment_log();
  v4 = objc_claimAutoreleasedReturnValue();
  v5 = os_log_type_enabled(v4, OS_LOG_TYPE_ERROR);

  if (v5)
  {
    pk_Payment_log();
    v6 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      v8 = 138412290;
      v9 = v3;
      _os_log_impl(&dword_213518000, v6, OS_LOG_TYPE_ERROR, "Error: Provisioning service outstanding request error handler invoked: %@", (uint8_t *)&v8, 0xCu);
    }

  }
  v7 = *(_QWORD *)(a1 + 32);
  if (v7)
    (*(void (**)(uint64_t, _QWORD, id))(v7 + 16))(v7, 0, v3);

}

- (void)retrieveShareInvitationForMailboxAddressResponse:(id)a3
{
  id v4;
  NSObject *v5;
  _BOOL4 v6;
  NSObject *v7;
  void *v8;
  void *v9;
  void *v10;
  NSObject *v11;
  NSObject *v12;
  _BOOL4 v13;
  NSObject *v14;
  uint64_t v15;
  uint8_t v16[16];
  _QWORD block[5];
  id v18;
  id v19;
  __int128 *p_buf;
  uint64_t *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t (*v26)(uint64_t, uint64_t);
  void (*v27)(uint64_t);
  id v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t (*v32)(uint64_t, uint64_t);
  void (*v33)(uint64_t);
  id v34;
  __int128 buf;
  uint64_t v36;
  uint64_t (*v37)(uint64_t, uint64_t);
  void (*v38)(uint64_t);
  id v39;
  uint64_t v40;

  v40 = *MEMORY[0x24BDAC8D0];
  v4 = a3;
  pk_Payment_log();
  v5 = objc_claimAutoreleasedReturnValue();
  v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    pk_Payment_log();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend(v4, "npkDescription");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      LODWORD(buf) = 138412290;
      *(_QWORD *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_213518000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Target retrieveShareInvitationForMailboxAddressResponse: incoming protobuf %@", (uint8_t *)&buf, 0xCu);

    }
  }
  objc_msgSend(v4, "context");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "incomingResponseIdentifier");
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  *(_QWORD *)&buf = 0;
  *((_QWORD *)&buf + 1) = &buf;
  v36 = 0x3032000000;
  v37 = __Block_byref_object_copy__342;
  v38 = __Block_byref_object_dispose__343;
  v39 = 0;
  v29 = 0;
  v30 = &v29;
  v31 = 0x3032000000;
  v32 = __Block_byref_object_copy__23;
  v33 = __Block_byref_object_dispose__23;
  v34 = 0;
  v23 = 0;
  v24 = &v23;
  v25 = 0x3032000000;
  v26 = __Block_byref_object_copy__23;
  v27 = __Block_byref_object_dispose__23;
  v28 = 0;
  if (v10)
  {
    -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
    v11 = objc_claimAutoreleasedReturnValue();
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 3221225472;
    block[2] = __94__NPKPaymentWebServiceCompanionTargetDevice_retrieveShareInvitationForMailboxAddressResponse___block_invoke;
    block[3] = &unk_24CFED060;
    block[4] = self;
    v18 = v10;
    v19 = v4;
    p_buf = &buf;
    v21 = &v29;
    v22 = &v23;
    dispatch_sync(v11, block);

  }
  else
  {
    pk_Payment_log();
    v12 = objc_claimAutoreleasedReturnValue();
    v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      pk_Payment_log();
      v14 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)v16 = 0;
        _os_log_impl(&dword_213518000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v16, 2u);
      }

    }
  }
  v15 = *(_QWORD *)(*((_QWORD *)&buf + 1) + 40);
  if (v15)
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v15, v30[5], v24[5]);
  _Block_object_dispose(&v23, 8);

  _Block_object_dispose(&v29, 8);
  _Block_object_dispose(&buf, 8);

}

void __94__NPKPaymentWebServiceCompanionTargetDevice_retrieveShareInvitationForMailboxAddressResponse___block_invoke(uint64_t a1)
{
  void *v1;
  void *v3;
  void *v4;
  NPKProtoRetrieveShareInvitationForMailboxAddressResponse *v5;
  void *v6;
  NPKProtoRetrieveShareInvitationForMailboxAddressResponse *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  _BOOL4 v12;
  NSObject *v13;
  void *v14;
  NSObject *v15;
  _BOOL4 v16;
  NSObject *v17;
  _BOOL4 v18;
  NSObject *v19;
  void *v20;
  __int16 v21[8];

  objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "objectForKey:", *(_QWORD *)(a1 + 40));
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  if (v4)
  {
    v5 = [NPKProtoRetrieveShareInvitationForMailboxAddressResponse alloc];
    objc_msgSend(*(id *)(a1 + 48), "data");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    v7 = -[NPKProtoRetrieveShareInvitationForMailboxAddressResponse initWithData:](v5, "initWithData:", v6);

    objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "removeObjectForKey:", *(_QWORD *)(a1 + 40));

    objc_msgSend(v4, "completionHandler");
    v9 = objc_claimAutoreleasedReturnValue();
    v10 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
    v11 = *(void **)(v10 + 40);
    *(_QWORD *)(v10 + 40) = v9;

    v12 = -[NPKProtoRetrieveShareInvitationForMailboxAddressResponse hasInvitationData](v7, "hasInvitationData");
    if (v12)
    {
      -[NPKProtoRetrieveShareInvitationForMailboxAddressResponse invitationData](v7, "invitationData");
      v1 = (void *)objc_claimAutoreleasedReturnValue();
      v13 = objc_opt_class();
      NPKSecureUnarchiveObject(v1, v13);
      v14 = (void *)objc_claimAutoreleasedReturnValue();
    }
    else
    {
      v14 = 0;
    }
    objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 40), v14);
    if (v12)
    {

    }
    v18 = -[NPKProtoRetrieveShareInvitationForMailboxAddressResponse hasErrorData](v7, "hasErrorData");
    if (v18)
    {
      -[NPKProtoRetrieveShareInvitationForMailboxAddressResponse errorData](v7, "errorData");
      v1 = (void *)objc_claimAutoreleasedReturnValue();
      v19 = objc_opt_class();
      NPKSecureUnarchiveObject(v1, v19);
      v20 = (void *)objc_claimAutoreleasedReturnValue();
    }
    else
    {
      v20 = 0;
    }
    objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 72) + 8) + 40), v20);
    if (v18)
    {

    }
  }
  else
  {
    pk_Payment_log();
    v15 = objc_claimAutoreleasedReturnValue();
    v16 = os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT);

    if (v16)
    {
      pk_Payment_log();
      v17 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
      {
        v21[0] = 0;
        _os_log_impl(&dword_213518000, v17, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", (uint8_t *)v21, 2u);
      }

    }
  }

}

- (void)revokeShareForPassIdentifier:(id)a3 share:(id)a4 shouldCascade:(BOOL)a5 completion:(id)a6
{
  id v10;
  id v11;
  id v12;
  NSObject *v13;
  NSObject *v14;
  _BOOL4 v15;
  NSObject *v16;
  void *v17;
  uint8_t v18[8];
  _QWORD block[4];
  id v20;
  id v21;
  NPKPaymentWebServiceCompanionTargetDevice *v22;
  id v23;
  BOOL v24;

  v10 = a3;
  v11 = a4;
  v12 = a6;
  if (-[NPKPaymentWebServiceCompanionTargetDevice _isSharedInvitationProvisioningSupported](self, "_isSharedInvitationProvisioningSupported"))
  {
    -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
    v13 = objc_claimAutoreleasedReturnValue();
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 3221225472;
    block[2] = __105__NPKPaymentWebServiceCompanionTargetDevice_revokeShareForPassIdentifier_share_shouldCascade_completion___block_invoke;
    block[3] = &unk_24CFEDC58;
    v20 = v11;
    v21 = v10;
    v24 = a5;
    v22 = self;
    v23 = v12;
    dispatch_sync(v13, block);

  }
  else
  {
    pk_Payment_log();
    v14 = objc_claimAutoreleasedReturnValue();
    v15 = os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT);

    if (v15)
    {
      pk_Payment_log();
      v16 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)v18 = 0;
        _os_log_impl(&dword_213518000, v16, OS_LOG_TYPE_DEFAULT, "Notice: Target device does not support share invitation provisioning.", v18, 2u);
      }

    }
    if (v12)
    {
      PKDisplayableErrorForCommonType();
      v17 = (void *)objc_claimAutoreleasedReturnValue();
      (*((void (**)(id, _QWORD, void *))v12 + 2))(v12, 0, v17);

    }
  }

}

void __105__NPKPaymentWebServiceCompanionTargetDevice_revokeShareForPassIdentifier_share_shouldCascade_completion___block_invoke(uint64_t a1)
{
  NSObject *v2;
  _BOOL4 v3;
  NSObject *v4;
  void *v5;
  uint64_t v6;
  const __CFString *v7;
  void *v8;
  NPKProtoRevokeShareForPassIdentifierRequest *v9;
  void *v10;
  id v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  NSObject *v17;
  void *v18;
  void *v19;
  void *v20;
  NSObject *v21;
  _BOOL4 v22;
  NSObject *v23;
  void *v24;
  uint64_t v25;
  NSObject *v26;
  _BOOL4 v27;
  const char *v28;
  NSObject *v29;
  os_log_type_t v30;
  NSObject *v31;
  _BOOL4 v32;
  _QWORD v33[4];
  id v34;
  uint64_t v35;
  void *v36;
  uint8_t buf[4];
  void *v38;
  __int16 v39;
  uint64_t v40;
  __int16 v41;
  const __CFString *v42;
  __int16 v43;
  void *v44;
  uint64_t v45;

  v45 = *MEMORY[0x24BDAC8D0];
  pk_General_log();
  v2 = objc_claimAutoreleasedReturnValue();
  v3 = os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT);

  if (v3)
  {
    pk_General_log();
    v4 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      v5 = *(void **)(a1 + 32);
      v6 = *(_QWORD *)(a1 + 40);
      if (*(_BYTE *)(a1 + 64))
        v7 = CFSTR("YES");
      else
        v7 = CFSTR("NO");
      v8 = (void *)MEMORY[0x2199B6780](*(_QWORD *)(a1 + 56));
      *(_DWORD *)buf = 138413058;
      v38 = v5;
      v39 = 2112;
      v40 = v6;
      v41 = 2112;
      v42 = v7;
      v43 = 2112;
      v44 = v8;
      _os_log_impl(&dword_213518000, v4, OS_LOG_TYPE_DEFAULT, "Notice: Target device - Request to revoke share %@ for pass identifier: %@ cascading: %@, completion: %@", buf, 0x2Au);

    }
  }
  if (*(_QWORD *)(a1 + 40) && *(_QWORD *)(a1 + 32))
  {
    v9 = objc_alloc_init(NPKProtoRevokeShareForPassIdentifierRequest);
    -[NPKProtoRevokeShareForPassIdentifierRequest setPassIdentifier:](v9, "setPassIdentifier:", *(_QWORD *)(a1 + 40));
    NPKSecureArchiveObject(*(void **)(a1 + 32));
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    -[NPKProtoRevokeShareForPassIdentifierRequest setShareData:](v9, "setShareData:", v10);

    -[NPKProtoRevokeShareForPassIdentifierRequest setShouldCascade:](v9, "setShouldCascade:", *(unsigned __int8 *)(a1 + 64));
    v11 = objc_alloc(MEMORY[0x24BE4FE40]);
    -[NPKProtoRevokeShareForPassIdentifierRequest data](v9, "data");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    v13 = (void *)objc_msgSend(v11, "initWithProtobufData:type:isResponse:", v12, 112, 0);

    v14 = *(void **)(a1 + 48);
    v35 = *MEMORY[0x24BE4FB30];
    v36 = &unk_24D0566F0;
    objc_msgSend(MEMORY[0x24BDBCE70], "dictionaryWithObjects:forKeys:count:", &v36, &v35, 1);
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v14, "_sendProtobuf:responseExpected:extraOptions:", v13, 1, v15);
    v16 = (void *)objc_claimAutoreleasedReturnValue();

    if (v16)
    {
      if (*(_QWORD *)(a1 + 56))
      {
        v17 = MEMORY[0x2199B6780]();
        v33[0] = MEMORY[0x24BDAC760];
        v33[1] = 3221225472;
        v33[2] = __105__NPKPaymentWebServiceCompanionTargetDevice_revokeShareForPassIdentifier_share_shouldCascade_completion___block_invoke_777;
        v33[3] = &unk_24CFE7B80;
        v34 = *(id *)(a1 + 56);
        v18 = (void *)MEMORY[0x2199B6780](v33);
        v19 = *(void **)(a1 + 48);
        v20 = (void *)MEMORY[0x2199B6780](v17);
        objc_msgSend(v19, "_trackOutstandingRequestWithMessageIdentifier:completionHandler:errorHandler:", v16, v20, v18);

LABEL_26:
        goto LABEL_27;
      }
      pk_Payment_log();
      v31 = objc_claimAutoreleasedReturnValue();
      v32 = os_log_type_enabled(v31, OS_LOG_TYPE_DEFAULT);

      if (v32)
      {
        pk_Payment_log();
        v17 = objc_claimAutoreleasedReturnValue();
        if (!os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
          goto LABEL_26;
        *(_DWORD *)buf = 138412290;
        v38 = v16;
        v28 = "Warning: No response expected for message with identifier %@";
        v29 = v17;
        v30 = OS_LOG_TYPE_DEFAULT;
        goto LABEL_25;
      }
    }
    else
    {
      pk_Payment_log();
      v26 = objc_claimAutoreleasedReturnValue();
      v27 = os_log_type_enabled(v26, OS_LOG_TYPE_ERROR);

      if (v27)
      {
        pk_Payment_log();
        v17 = objc_claimAutoreleasedReturnValue();
        if (!os_log_type_enabled(v17, OS_LOG_TYPE_ERROR))
          goto LABEL_26;
        *(_DWORD *)buf = 138412290;
        v38 = v13;
        v28 = "Error: No message identifier for protobuf %@";
        v29 = v17;
        v30 = OS_LOG_TYPE_ERROR;
LABEL_25:
        _os_log_impl(&dword_213518000, v29, v30, v28, buf, 0xCu);
        goto LABEL_26;
      }
    }
LABEL_27:

    goto LABEL_28;
  }
  pk_General_log();
  v21 = objc_claimAutoreleasedReturnValue();
  v22 = os_log_type_enabled(v21, OS_LOG_TYPE_ERROR);

  if (v22)
  {
    pk_General_log();
    v23 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v23, OS_LOG_TYPE_ERROR))
    {
      v24 = *(void **)(a1 + 32);
      v25 = *(_QWORD *)(a1 + 40);
      *(_DWORD *)buf = 138412546;
      v38 = v24;
      v39 = 2112;
      v40 = v25;
      _os_log_impl(&dword_213518000, v23, OS_LOG_TYPE_ERROR, "Error: Unable to revoke share without specified share (%@) or pass identifier (%@)", buf, 0x16u);
    }

  }
  if (*(_QWORD *)(a1 + 56))
  {
    PKDisplayableErrorForCommonType();
    v9 = (NPKProtoRevokeShareForPassIdentifierRequest *)objc_claimAutoreleasedReturnValue();
    (*(void (**)(void))(*(_QWORD *)(a1 + 56) + 16))();
LABEL_28:

  }
}

void __105__NPKPaymentWebServiceCompanionTargetDevice_revokeShareForPassIdentifier_share_shouldCascade_completion___block_invoke_777(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  _BOOL4 v5;
  NSObject *v6;
  uint64_t v7;
  int v8;
  id v9;
  uint64_t v10;

  v10 = *MEMORY[0x24BDAC8D0];
  v3 = a2;
  pk_Payment_log();
  v4 = objc_claimAutoreleasedReturnValue();
  v5 = os_log_type_enabled(v4, OS_LOG_TYPE_ERROR);

  if (v5)
  {
    pk_Payment_log();
    v6 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      v8 = 138412290;
      v9 = v3;
      _os_log_impl(&dword_213518000, v6, OS_LOG_TYPE_ERROR, "Error: Provisioning service outstanding request error handler invoked: %@", (uint8_t *)&v8, 0xCu);
    }

  }
  v7 = *(_QWORD *)(a1 + 32);
  if (v7)
    (*(void (**)(uint64_t, _QWORD, id))(v7 + 16))(v7, 0, v3);

}

- (void)revokeShareForPassIdentifierResponse:(id)a3
{
  id v4;
  NSObject *v5;
  _BOOL4 v6;
  NSObject *v7;
  void *v8;
  void *v9;
  void *v10;
  NSObject *v11;
  NSObject *v12;
  _BOOL4 v13;
  NSObject *v14;
  uint64_t v15;
  uint8_t v16[16];
  _QWORD block[5];
  id v18;
  id v19;
  __int128 *p_buf;
  uint64_t *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t (*v26)(uint64_t, uint64_t);
  void (*v27)(uint64_t);
  id v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  char v32;
  __int128 buf;
  uint64_t v34;
  uint64_t (*v35)(uint64_t, uint64_t);
  void (*v36)(uint64_t);
  id v37;
  uint64_t v38;

  v38 = *MEMORY[0x24BDAC8D0];
  v4 = a3;
  pk_Payment_log();
  v5 = objc_claimAutoreleasedReturnValue();
  v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    pk_Payment_log();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend(v4, "npkDescription");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      LODWORD(buf) = 138412290;
      *(_QWORD *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_213518000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Target revokeShareForPassIdentifierResponse: incoming protobuf %@", (uint8_t *)&buf, 0xCu);

    }
  }
  objc_msgSend(v4, "context");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "incomingResponseIdentifier");
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  *(_QWORD *)&buf = 0;
  *((_QWORD *)&buf + 1) = &buf;
  v34 = 0x3032000000;
  v35 = __Block_byref_object_copy__342;
  v36 = __Block_byref_object_dispose__343;
  v37 = 0;
  v29 = 0;
  v30 = &v29;
  v31 = 0x2020000000;
  v32 = 0;
  v23 = 0;
  v24 = &v23;
  v25 = 0x3032000000;
  v26 = __Block_byref_object_copy__23;
  v27 = __Block_byref_object_dispose__23;
  v28 = 0;
  if (v10)
  {
    -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
    v11 = objc_claimAutoreleasedReturnValue();
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 3221225472;
    block[2] = __82__NPKPaymentWebServiceCompanionTargetDevice_revokeShareForPassIdentifierResponse___block_invoke;
    block[3] = &unk_24CFED060;
    block[4] = self;
    v18 = v10;
    v19 = v4;
    p_buf = &buf;
    v21 = &v29;
    v22 = &v23;
    dispatch_sync(v11, block);

  }
  else
  {
    pk_Payment_log();
    v12 = objc_claimAutoreleasedReturnValue();
    v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      pk_Payment_log();
      v14 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)v16 = 0;
        _os_log_impl(&dword_213518000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v16, 2u);
      }

    }
  }
  v15 = *(_QWORD *)(*((_QWORD *)&buf + 1) + 40);
  if (v15)
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v15 + 16))(v15, *((unsigned __int8 *)v30 + 24), v24[5]);
  _Block_object_dispose(&v23, 8);

  _Block_object_dispose(&v29, 8);
  _Block_object_dispose(&buf, 8);

}

void __82__NPKPaymentWebServiceCompanionTargetDevice_revokeShareForPassIdentifierResponse___block_invoke(uint64_t a1)
{
  void *v1;
  void *v3;
  void *v4;
  NPKProtoRevokeShareForPassIdentifierResponse *v5;
  void *v6;
  NPKProtoRevokeShareForPassIdentifierResponse *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  _BOOL4 v12;
  NSObject *v13;
  void *v14;
  NSObject *v15;
  _BOOL4 v16;
  NSObject *v17;
  __int16 v18[8];

  objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "objectForKey:", *(_QWORD *)(a1 + 40));
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  if (v4)
  {
    v5 = [NPKProtoRevokeShareForPassIdentifierResponse alloc];
    objc_msgSend(*(id *)(a1 + 48), "data");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    v7 = -[NPKProtoRevokeShareForPassIdentifierResponse initWithData:](v5, "initWithData:", v6);

    objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "removeObjectForKey:", *(_QWORD *)(a1 + 40));

    objc_msgSend(v4, "completionHandler");
    v9 = objc_claimAutoreleasedReturnValue();
    v10 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
    v11 = *(void **)(v10 + 40);
    *(_QWORD *)(v10 + 40) = v9;

    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 24) = -[NPKProtoRevokeShareForPassIdentifierResponse success](v7, "success");
    v12 = -[NPKProtoRevokeShareForPassIdentifierResponse hasErrorData](v7, "hasErrorData");
    if (v12)
    {
      -[NPKProtoRevokeShareForPassIdentifierResponse errorData](v7, "errorData");
      v1 = (void *)objc_claimAutoreleasedReturnValue();
      v13 = objc_opt_class();
      NPKSecureUnarchiveObject(v1, v13);
      v14 = (void *)objc_claimAutoreleasedReturnValue();
    }
    else
    {
      v14 = 0;
    }
    objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 72) + 8) + 40), v14);
    if (v12)
    {

    }
  }
  else
  {
    pk_Payment_log();
    v15 = objc_claimAutoreleasedReturnValue();
    v16 = os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT);

    if (v16)
    {
      pk_Payment_log();
      v17 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
      {
        v18[0] = 0;
        _os_log_impl(&dword_213518000, v17, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", (uint8_t *)v18, 2u);
      }

    }
  }

}

- (void)paymentWebService:(id)a3 passSharesForCredentialIdentifier:(id)a4 completion:(id)a5
{
  id v7;
  id v8;
  NSObject *v9;
  NSObject *v10;
  _BOOL4 v11;
  NSObject *v12;
  uint8_t v13[8];
  _QWORD block[4];
  id v15;
  NPKPaymentWebServiceCompanionTargetDevice *v16;
  id v17;

  v7 = a4;
  v8 = a5;
  if (-[NPKPaymentWebServiceCompanionTargetDevice _isSharedInvitationProvisioningSupported](self, "_isSharedInvitationProvisioningSupported"))
  {
    -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
    v9 = objc_claimAutoreleasedReturnValue();
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 3221225472;
    block[2] = __108__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_passSharesForCredentialIdentifier_completion___block_invoke;
    block[3] = &unk_24CFED5E8;
    v15 = v7;
    v16 = self;
    v17 = v8;
    dispatch_sync(v9, block);

  }
  else
  {
    pk_Payment_log();
    v10 = objc_claimAutoreleasedReturnValue();
    v11 = os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT);

    if (v11)
    {
      pk_Payment_log();
      v12 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)v13 = 0;
        _os_log_impl(&dword_213518000, v12, OS_LOG_TYPE_DEFAULT, "Notice: Target device does not support share invitation provisioning.", v13, 2u);
      }

    }
    if (v8)
      (*((void (**)(id, _QWORD))v8 + 2))(v8, 0);
  }

}

void __108__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_passSharesForCredentialIdentifier_completion___block_invoke(uint64_t a1)
{
  NSObject *v2;
  _BOOL4 v3;
  NSObject *v4;
  void *v5;
  void *v6;
  NPKProtoPassSharesForCredentialIdentifierRequest *v7;
  id v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  NSObject *v14;
  void *v15;
  void *v16;
  void *v17;
  NSObject *v18;
  _BOOL4 v19;
  NSObject *v20;
  void *v21;
  uint64_t v22;
  NSObject *v23;
  _BOOL4 v24;
  const char *v25;
  NSObject *v26;
  os_log_type_t v27;
  NSObject *v28;
  _BOOL4 v29;
  _QWORD v30[4];
  id v31;
  uint64_t v32;
  void *v33;
  uint8_t buf[4];
  void *v35;
  __int16 v36;
  void *v37;
  uint64_t v38;

  v38 = *MEMORY[0x24BDAC8D0];
  pk_General_log();
  v2 = objc_claimAutoreleasedReturnValue();
  v3 = os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT);

  if (v3)
  {
    pk_General_log();
    v4 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      v5 = *(void **)(a1 + 32);
      v6 = (void *)MEMORY[0x2199B6780](*(_QWORD *)(a1 + 48));
      *(_DWORD *)buf = 138412546;
      v35 = v5;
      v36 = 2112;
      v37 = v6;
      _os_log_impl(&dword_213518000, v4, OS_LOG_TYPE_DEFAULT, "Notice: Target device - Request for pass shares for credential identifier: %@, completion: %@", buf, 0x16u);

    }
  }
  if (*(_QWORD *)(a1 + 32))
  {
    v7 = objc_alloc_init(NPKProtoPassSharesForCredentialIdentifierRequest);
    -[NPKProtoPassSharesForCredentialIdentifierRequest setCredentialIdentifier:](v7, "setCredentialIdentifier:", *(_QWORD *)(a1 + 32));
    v8 = objc_alloc(MEMORY[0x24BE4FE40]);
    -[NPKProtoPassSharesForCredentialIdentifierRequest data](v7, "data");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    v10 = (void *)objc_msgSend(v8, "initWithProtobufData:type:isResponse:", v9, 113, 0);

    v11 = *(void **)(a1 + 40);
    v32 = *MEMORY[0x24BE4FB30];
    v33 = &unk_24D0566F0;
    objc_msgSend(MEMORY[0x24BDBCE70], "dictionaryWithObjects:forKeys:count:", &v33, &v32, 1);
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v11, "_sendProtobuf:responseExpected:extraOptions:", v10, 1, v12);
    v13 = (void *)objc_claimAutoreleasedReturnValue();

    if (v13)
    {
      if (*(_QWORD *)(a1 + 48))
      {
        v14 = MEMORY[0x2199B6780]();
        v30[0] = MEMORY[0x24BDAC760];
        v30[1] = 3221225472;
        v30[2] = __108__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_passSharesForCredentialIdentifier_completion___block_invoke_780;
        v30[3] = &unk_24CFE7B80;
        v31 = *(id *)(a1 + 48);
        v15 = (void *)MEMORY[0x2199B6780](v30);
        v16 = *(void **)(a1 + 40);
        v17 = (void *)MEMORY[0x2199B6780](v14);
        objc_msgSend(v16, "_trackOutstandingRequestWithMessageIdentifier:completionHandler:errorHandler:", v13, v17, v15);

LABEL_22:
        goto LABEL_23;
      }
      pk_Payment_log();
      v28 = objc_claimAutoreleasedReturnValue();
      v29 = os_log_type_enabled(v28, OS_LOG_TYPE_DEFAULT);

      if (v29)
      {
        pk_Payment_log();
        v14 = objc_claimAutoreleasedReturnValue();
        if (!os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
          goto LABEL_22;
        *(_DWORD *)buf = 138412290;
        v35 = v13;
        v25 = "Warning: No response expected for message with identifier %@";
        v26 = v14;
        v27 = OS_LOG_TYPE_DEFAULT;
        goto LABEL_21;
      }
    }
    else
    {
      pk_Payment_log();
      v23 = objc_claimAutoreleasedReturnValue();
      v24 = os_log_type_enabled(v23, OS_LOG_TYPE_ERROR);

      if (v24)
      {
        pk_Payment_log();
        v14 = objc_claimAutoreleasedReturnValue();
        if (!os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
          goto LABEL_22;
        *(_DWORD *)buf = 138412290;
        v35 = v10;
        v25 = "Error: No message identifier for protobuf %@";
        v26 = v14;
        v27 = OS_LOG_TYPE_ERROR;
LABEL_21:
        _os_log_impl(&dword_213518000, v26, v27, v25, buf, 0xCu);
        goto LABEL_22;
      }
    }
LABEL_23:

    return;
  }
  pk_General_log();
  v18 = objc_claimAutoreleasedReturnValue();
  v19 = os_log_type_enabled(v18, OS_LOG_TYPE_ERROR);

  if (v19)
  {
    pk_General_log();
    v20 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR))
    {
      v21 = *(void **)(a1 + 32);
      *(_DWORD *)buf = 138412290;
      v35 = v21;
      _os_log_impl(&dword_213518000, v20, OS_LOG_TYPE_ERROR, "Error: Unable to fetch pass shares without credential identifier (%@)", buf, 0xCu);
    }

  }
  v22 = *(_QWORD *)(a1 + 48);
  if (v22)
    (*(void (**)(uint64_t, _QWORD))(v22 + 16))(v22, 0);
}

void __108__NPKPaymentWebServiceCompanionTargetDevice_paymentWebService_passSharesForCredentialIdentifier_completion___block_invoke_780(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  _BOOL4 v5;
  NSObject *v6;
  uint64_t v7;
  int v8;
  id v9;
  uint64_t v10;

  v10 = *MEMORY[0x24BDAC8D0];
  v3 = a2;
  pk_Payment_log();
  v4 = objc_claimAutoreleasedReturnValue();
  v5 = os_log_type_enabled(v4, OS_LOG_TYPE_ERROR);

  if (v5)
  {
    pk_Payment_log();
    v6 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      v8 = 138412290;
      v9 = v3;
      _os_log_impl(&dword_213518000, v6, OS_LOG_TYPE_ERROR, "Error: Provisioning service outstanding request error handler invoked: %@", (uint8_t *)&v8, 0xCu);
    }

  }
  v7 = *(_QWORD *)(a1 + 32);
  if (v7)
    (*(void (**)(uint64_t, _QWORD))(v7 + 16))(v7, 0);

}

- (void)passSharesForCredentialIdentifierResponse:(id)a3
{
  id v4;
  NSObject *v5;
  _BOOL4 v6;
  NSObject *v7;
  void *v8;
  void *v9;
  void *v10;
  NSObject *v11;
  NSObject *v12;
  _BOOL4 v13;
  NSObject *v14;
  uint64_t v15;
  uint8_t v16[8];
  _QWORD block[5];
  id v18;
  id v19;
  __int128 *p_buf;
  uint64_t *v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t (*v25)(uint64_t, uint64_t);
  void (*v26)(uint64_t);
  id v27;
  __int128 buf;
  uint64_t v29;
  uint64_t (*v30)(uint64_t, uint64_t);
  void (*v31)(uint64_t);
  id v32;
  uint64_t v33;

  v33 = *MEMORY[0x24BDAC8D0];
  v4 = a3;
  pk_Payment_log();
  v5 = objc_claimAutoreleasedReturnValue();
  v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    pk_Payment_log();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend(v4, "npkDescription");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      LODWORD(buf) = 138412290;
      *(_QWORD *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_213518000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Target passSharesForCredentialIdentifierResponse: incoming protobuf %@", (uint8_t *)&buf, 0xCu);

    }
  }
  objc_msgSend(v4, "context");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "incomingResponseIdentifier");
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  *(_QWORD *)&buf = 0;
  *((_QWORD *)&buf + 1) = &buf;
  v29 = 0x3032000000;
  v30 = __Block_byref_object_copy__342;
  v31 = __Block_byref_object_dispose__343;
  v32 = 0;
  v22 = 0;
  v23 = &v22;
  v24 = 0x3032000000;
  v25 = __Block_byref_object_copy__23;
  v26 = __Block_byref_object_dispose__23;
  v27 = 0;
  if (v10)
  {
    -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
    v11 = objc_claimAutoreleasedReturnValue();
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 3221225472;
    block[2] = __87__NPKPaymentWebServiceCompanionTargetDevice_passSharesForCredentialIdentifierResponse___block_invoke;
    block[3] = &unk_24CFED0D8;
    block[4] = self;
    v18 = v10;
    v19 = v4;
    p_buf = &buf;
    v21 = &v22;
    dispatch_sync(v11, block);

  }
  else
  {
    pk_Payment_log();
    v12 = objc_claimAutoreleasedReturnValue();
    v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      pk_Payment_log();
      v14 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)v16 = 0;
        _os_log_impl(&dword_213518000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v16, 2u);
      }

    }
  }
  v15 = *(_QWORD *)(*((_QWORD *)&buf + 1) + 40);
  if (v15)
    (*(void (**)(uint64_t, uint64_t))(v15 + 16))(v15, v23[5]);
  _Block_object_dispose(&v22, 8);

  _Block_object_dispose(&buf, 8);
}

void __87__NPKPaymentWebServiceCompanionTargetDevice_passSharesForCredentialIdentifierResponse___block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;
  NPKProtoPassSharesForCredentialIdentifierResponse *v4;
  void *v5;
  NPKProtoPassSharesForCredentialIdentifierResponse *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  NSObject *v17;
  _BOOL4 v18;
  NSObject *v19;
  uint8_t v20[8];
  _QWORD v21[4];
  id v22;

  objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "objectForKey:", *(_QWORD *)(a1 + 40));
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  if (v3)
  {
    v4 = [NPKProtoPassSharesForCredentialIdentifierResponse alloc];
    objc_msgSend(*(id *)(a1 + 48), "data");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    v6 = -[NPKProtoPassSharesForCredentialIdentifierResponse initWithData:](v4, "initWithData:", v5);

    objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "removeObjectForKey:", *(_QWORD *)(a1 + 40));

    objc_msgSend(v3, "completionHandler");
    v8 = objc_claimAutoreleasedReturnValue();
    v9 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
    v10 = *(void **)(v9 + 40);
    *(_QWORD *)(v9 + 40) = v8;

    v11 = (void *)objc_msgSend(objc_alloc(MEMORY[0x24BDBCEB8]), "initWithCapacity:", -[NPKProtoPassSharesForCredentialIdentifierResponse sharesDatasCount](v6, "sharesDatasCount"));
    -[NPKProtoPassSharesForCredentialIdentifierResponse sharesDatas](v6, "sharesDatas");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    v21[0] = MEMORY[0x24BDAC760];
    v21[1] = 3221225472;
    v21[2] = __87__NPKPaymentWebServiceCompanionTargetDevice_passSharesForCredentialIdentifierResponse___block_invoke_2;
    v21[3] = &unk_24CFED088;
    v22 = v11;
    v13 = v11;
    objc_msgSend(v12, "enumerateObjectsUsingBlock:", v21);

    v14 = objc_msgSend(v13, "copy");
    v15 = *(_QWORD *)(*(_QWORD *)(a1 + 64) + 8);
    v16 = *(void **)(v15 + 40);
    *(_QWORD *)(v15 + 40) = v14;

  }
  else
  {
    pk_Payment_log();
    v17 = objc_claimAutoreleasedReturnValue();
    v18 = os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT);

    if (v18)
    {
      pk_Payment_log();
      v19 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)v20 = 0;
        _os_log_impl(&dword_213518000, v19, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", v20, 2u);
      }

    }
  }

}

void __87__NPKPaymentWebServiceCompanionTargetDevice_passSharesForCredentialIdentifierResponse___block_invoke_2(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  void *v5;
  id v6;

  v3 = a2;
  v4 = objc_opt_class();
  NPKSecureUnarchiveObject(v3, v4);
  v6 = (id)objc_claimAutoreleasedReturnValue();

  v5 = v6;
  if (v6)
  {
    objc_msgSend(*(id *)(a1 + 32), "addObject:", v6);
    v5 = v6;
  }

}

- (void)displayableSharesForPassIdentifier:(id)a3 completion:(id)a4
{
  id v6;
  id v7;
  NSObject *v8;
  _BOOL4 v9;
  NSObject *v10;
  void *v11;
  id v12;
  id v13;
  id v14;
  _QWORD v15[5];
  id v16;
  id v17;
  uint8_t buf[4];
  id v19;
  __int16 v20;
  void *v21;
  uint64_t v22;

  v22 = *MEMORY[0x24BDAC8D0];
  v6 = a3;
  v7 = a4;
  pk_General_log();
  v8 = objc_claimAutoreleasedReturnValue();
  v9 = os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT);

  if (v9)
  {
    pk_General_log();
    v10 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
    {
      v11 = (void *)MEMORY[0x2199B6780](v7);
      *(_DWORD *)buf = 138412546;
      v19 = v6;
      v20 = 2112;
      v21 = v11;
      _os_log_impl(&dword_213518000, v10, OS_LOG_TYPE_DEFAULT, "Notice: Target device - Request for displayable shares for pass identifier: %@, completion: %@\nChecking for displayable shares from the corresponding companion pass first...", buf, 0x16u);

    }
  }
  v12 = objc_alloc_init(MEMORY[0x24BE6ED30]);
  v15[0] = MEMORY[0x24BDAC760];
  v15[1] = 3221225472;
  v15[2] = __91__NPKPaymentWebServiceCompanionTargetDevice_displayableSharesForPassIdentifier_completion___block_invoke;
  v15[3] = &unk_24CFEDC80;
  v16 = v6;
  v17 = v7;
  v15[4] = self;
  v13 = v6;
  v14 = v7;
  objc_msgSend(v12, "displayableSharesForPassIdentifier:completion:", v13, v15);

}

void __91__NPKPaymentWebServiceCompanionTargetDevice_displayableSharesForPassIdentifier_completion___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  _BOOL4 v5;
  NSObject *v6;
  uint64_t v7;
  int v8;
  id v9;
  uint64_t v10;

  v10 = *MEMORY[0x24BDAC8D0];
  v3 = a2;
  if (v3)
  {
    pk_General_log();
    v4 = objc_claimAutoreleasedReturnValue();
    v5 = os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT);

    if (v5)
    {
      pk_General_log();
      v6 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
      {
        v8 = 138412290;
        v9 = v3;
        _os_log_impl(&dword_213518000, v6, OS_LOG_TYPE_DEFAULT, "Notice: Target device - Returning displayable shares (%@) for companion pass", (uint8_t *)&v8, 0xCu);
      }

    }
    v7 = *(_QWORD *)(a1 + 48);
    if (v7)
      (*(void (**)(uint64_t, id))(v7 + 16))(v7, v3);
  }
  else
  {
    objc_msgSend(*(id *)(a1 + 32), "_displayableSharesForPassIdentifier:completion:", *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48));
  }

}

- (void)_displayableSharesForPassIdentifier:(id)a3 completion:(id)a4
{
  id v6;
  id v7;
  NSObject *v8;
  NSObject *v9;
  _BOOL4 v10;
  NSObject *v11;
  uint8_t v12[8];
  _QWORD block[4];
  id v14;
  NPKPaymentWebServiceCompanionTargetDevice *v15;
  id v16;

  v6 = a3;
  v7 = a4;
  if (-[NPKPaymentWebServiceCompanionTargetDevice _isSharedInvitationProvisioningSupported](self, "_isSharedInvitationProvisioningSupported"))
  {
    -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
    v8 = objc_claimAutoreleasedReturnValue();
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 3221225472;
    block[2] = __92__NPKPaymentWebServiceCompanionTargetDevice__displayableSharesForPassIdentifier_completion___block_invoke;
    block[3] = &unk_24CFED5E8;
    v14 = v6;
    v15 = self;
    v16 = v7;
    dispatch_sync(v8, block);

  }
  else
  {
    pk_Payment_log();
    v9 = objc_claimAutoreleasedReturnValue();
    v10 = os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT);

    if (v10)
    {
      pk_Payment_log();
      v11 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)v12 = 0;
        _os_log_impl(&dword_213518000, v11, OS_LOG_TYPE_DEFAULT, "Notice: Target device does not support share invitation provisioning.", v12, 2u);
      }

    }
    if (v7)
      (*((void (**)(id, _QWORD))v7 + 2))(v7, 0);
  }

}

void __92__NPKPaymentWebServiceCompanionTargetDevice__displayableSharesForPassIdentifier_completion___block_invoke(uint64_t a1)
{
  NSObject *v2;
  _BOOL4 v3;
  NSObject *v4;
  void *v5;
  void *v6;
  NPKProtoDisplayableSharesForPassIdentifierRequest *v7;
  id v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  NSObject *v14;
  void *v15;
  void *v16;
  void *v17;
  NSObject *v18;
  _BOOL4 v19;
  NSObject *v20;
  void *v21;
  uint64_t v22;
  NSObject *v23;
  _BOOL4 v24;
  const char *v25;
  NSObject *v26;
  os_log_type_t v27;
  NSObject *v28;
  _BOOL4 v29;
  _QWORD v30[4];
  id v31;
  uint64_t v32;
  void *v33;
  uint8_t buf[4];
  void *v35;
  __int16 v36;
  void *v37;
  uint64_t v38;

  v38 = *MEMORY[0x24BDAC8D0];
  pk_General_log();
  v2 = objc_claimAutoreleasedReturnValue();
  v3 = os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT);

  if (v3)
  {
    pk_General_log();
    v4 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      v5 = *(void **)(a1 + 32);
      v6 = (void *)MEMORY[0x2199B6780](*(_QWORD *)(a1 + 48));
      *(_DWORD *)buf = 138412546;
      v35 = v5;
      v36 = 2112;
      v37 = v6;
      _os_log_impl(&dword_213518000, v4, OS_LOG_TYPE_DEFAULT, "Notice: Target device - Request for displayable shares from watch for pass identifier: %@, completion: %@", buf, 0x16u);

    }
  }
  if (*(_QWORD *)(a1 + 32))
  {
    v7 = objc_alloc_init(NPKProtoDisplayableSharesForPassIdentifierRequest);
    -[NPKProtoDisplayableSharesForPassIdentifierRequest setPassIdentifier:](v7, "setPassIdentifier:", *(_QWORD *)(a1 + 32));
    v8 = objc_alloc(MEMORY[0x24BE4FE40]);
    -[NPKProtoDisplayableSharesForPassIdentifierRequest data](v7, "data");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    v10 = (void *)objc_msgSend(v8, "initWithProtobufData:type:isResponse:", v9, 114, 0);

    v11 = *(void **)(a1 + 40);
    v32 = *MEMORY[0x24BE4FB30];
    v33 = &unk_24D0566F0;
    objc_msgSend(MEMORY[0x24BDBCE70], "dictionaryWithObjects:forKeys:count:", &v33, &v32, 1);
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v11, "_sendProtobuf:responseExpected:extraOptions:", v10, 1, v12);
    v13 = (void *)objc_claimAutoreleasedReturnValue();

    if (v13)
    {
      if (*(_QWORD *)(a1 + 48))
      {
        v14 = MEMORY[0x2199B6780]();
        v30[0] = MEMORY[0x24BDAC760];
        v30[1] = 3221225472;
        v30[2] = __92__NPKPaymentWebServiceCompanionTargetDevice__displayableSharesForPassIdentifier_completion___block_invoke_784;
        v30[3] = &unk_24CFE7B80;
        v31 = *(id *)(a1 + 48);
        v15 = (void *)MEMORY[0x2199B6780](v30);
        v16 = *(void **)(a1 + 40);
        v17 = (void *)MEMORY[0x2199B6780](v14);
        objc_msgSend(v16, "_trackOutstandingRequestWithMessageIdentifier:completionHandler:errorHandler:", v13, v17, v15);

LABEL_22:
        goto LABEL_23;
      }
      pk_Payment_log();
      v28 = objc_claimAutoreleasedReturnValue();
      v29 = os_log_type_enabled(v28, OS_LOG_TYPE_DEFAULT);

      if (v29)
      {
        pk_Payment_log();
        v14 = objc_claimAutoreleasedReturnValue();
        if (!os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
          goto LABEL_22;
        *(_DWORD *)buf = 138412290;
        v35 = v13;
        v25 = "Warning: No response expected for message with identifier %@";
        v26 = v14;
        v27 = OS_LOG_TYPE_DEFAULT;
        goto LABEL_21;
      }
    }
    else
    {
      pk_Payment_log();
      v23 = objc_claimAutoreleasedReturnValue();
      v24 = os_log_type_enabled(v23, OS_LOG_TYPE_ERROR);

      if (v24)
      {
        pk_Payment_log();
        v14 = objc_claimAutoreleasedReturnValue();
        if (!os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
          goto LABEL_22;
        *(_DWORD *)buf = 138412290;
        v35 = v10;
        v25 = "Error: No message identifier for protobuf %@";
        v26 = v14;
        v27 = OS_LOG_TYPE_ERROR;
LABEL_21:
        _os_log_impl(&dword_213518000, v26, v27, v25, buf, 0xCu);
        goto LABEL_22;
      }
    }
LABEL_23:

    return;
  }
  pk_General_log();
  v18 = objc_claimAutoreleasedReturnValue();
  v19 = os_log_type_enabled(v18, OS_LOG_TYPE_ERROR);

  if (v19)
  {
    pk_General_log();
    v20 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR))
    {
      v21 = *(void **)(a1 + 32);
      *(_DWORD *)buf = 138412290;
      v35 = v21;
      _os_log_impl(&dword_213518000, v20, OS_LOG_TYPE_ERROR, "Error: Unable to fetch displayable shares without pass identifier (%@)", buf, 0xCu);
    }

  }
  v22 = *(_QWORD *)(a1 + 48);
  if (v22)
    (*(void (**)(uint64_t, _QWORD))(v22 + 16))(v22, 0);
}

void __92__NPKPaymentWebServiceCompanionTargetDevice__displayableSharesForPassIdentifier_completion___block_invoke_784(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  _BOOL4 v5;
  NSObject *v6;
  uint64_t v7;
  int v8;
  id v9;
  uint64_t v10;

  v10 = *MEMORY[0x24BDAC8D0];
  v3 = a2;
  pk_Payment_log();
  v4 = objc_claimAutoreleasedReturnValue();
  v5 = os_log_type_enabled(v4, OS_LOG_TYPE_ERROR);

  if (v5)
  {
    pk_Payment_log();
    v6 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      v8 = 138412290;
      v9 = v3;
      _os_log_impl(&dword_213518000, v6, OS_LOG_TYPE_ERROR, "Error: Provisioning service outstanding request error handler invoked: %@", (uint8_t *)&v8, 0xCu);
    }

  }
  v7 = *(_QWORD *)(a1 + 32);
  if (v7)
    (*(void (**)(uint64_t, _QWORD))(v7 + 16))(v7, 0);

}

- (void)displayableSharesForPassIdentifierResponse:(id)a3
{
  id v4;
  NSObject *v5;
  _BOOL4 v6;
  NSObject *v7;
  void *v8;
  void *v9;
  void *v10;
  NSObject *v11;
  NSObject *v12;
  _BOOL4 v13;
  NSObject *v14;
  uint64_t v15;
  uint8_t v16[8];
  _QWORD block[5];
  id v18;
  id v19;
  __int128 *p_buf;
  uint64_t *v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t (*v25)(uint64_t, uint64_t);
  void (*v26)(uint64_t);
  id v27;
  __int128 buf;
  uint64_t v29;
  uint64_t (*v30)(uint64_t, uint64_t);
  void (*v31)(uint64_t);
  id v32;
  uint64_t v33;

  v33 = *MEMORY[0x24BDAC8D0];
  v4 = a3;
  pk_Payment_log();
  v5 = objc_claimAutoreleasedReturnValue();
  v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    pk_Payment_log();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend(v4, "npkDescription");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      LODWORD(buf) = 138412290;
      *(_QWORD *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_213518000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Target displayableSharesForPassIdentifierResponse: incoming protobuf %@", (uint8_t *)&buf, 0xCu);

    }
  }
  objc_msgSend(v4, "context");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "incomingResponseIdentifier");
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  *(_QWORD *)&buf = 0;
  *((_QWORD *)&buf + 1) = &buf;
  v29 = 0x3032000000;
  v30 = __Block_byref_object_copy__342;
  v31 = __Block_byref_object_dispose__343;
  v32 = 0;
  v22 = 0;
  v23 = &v22;
  v24 = 0x3032000000;
  v25 = __Block_byref_object_copy__23;
  v26 = __Block_byref_object_dispose__23;
  v27 = 0;
  if (v10)
  {
    -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
    v11 = objc_claimAutoreleasedReturnValue();
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 3221225472;
    block[2] = __88__NPKPaymentWebServiceCompanionTargetDevice_displayableSharesForPassIdentifierResponse___block_invoke;
    block[3] = &unk_24CFED0D8;
    block[4] = self;
    v18 = v10;
    v19 = v4;
    p_buf = &buf;
    v21 = &v22;
    dispatch_sync(v11, block);

  }
  else
  {
    pk_Payment_log();
    v12 = objc_claimAutoreleasedReturnValue();
    v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      pk_Payment_log();
      v14 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)v16 = 0;
        _os_log_impl(&dword_213518000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v16, 2u);
      }

    }
  }
  v15 = *(_QWORD *)(*((_QWORD *)&buf + 1) + 40);
  if (v15)
    (*(void (**)(uint64_t, uint64_t))(v15 + 16))(v15, v23[5]);
  _Block_object_dispose(&v22, 8);

  _Block_object_dispose(&buf, 8);
}

void __88__NPKPaymentWebServiceCompanionTargetDevice_displayableSharesForPassIdentifierResponse___block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;
  NPKProtoDisplayableSharesForPassIdentifierResponse *v4;
  void *v5;
  NPKProtoDisplayableSharesForPassIdentifierResponse *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  NSObject *v17;
  _BOOL4 v18;
  NSObject *v19;
  uint8_t v20[8];
  _QWORD v21[4];
  id v22;

  objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "objectForKey:", *(_QWORD *)(a1 + 40));
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  if (v3)
  {
    v4 = [NPKProtoDisplayableSharesForPassIdentifierResponse alloc];
    objc_msgSend(*(id *)(a1 + 48), "data");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    v6 = -[NPKProtoDisplayableSharesForPassIdentifierResponse initWithData:](v4, "initWithData:", v5);

    objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "removeObjectForKey:", *(_QWORD *)(a1 + 40));

    objc_msgSend(v3, "completionHandler");
    v8 = objc_claimAutoreleasedReturnValue();
    v9 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
    v10 = *(void **)(v9 + 40);
    *(_QWORD *)(v9 + 40) = v8;

    v11 = (void *)objc_msgSend(objc_alloc(MEMORY[0x24BDBCEB8]), "initWithCapacity:", -[NPKProtoDisplayableSharesForPassIdentifierResponse sharesDatasCount](v6, "sharesDatasCount"));
    -[NPKProtoDisplayableSharesForPassIdentifierResponse sharesDatas](v6, "sharesDatas");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    v21[0] = MEMORY[0x24BDAC760];
    v21[1] = 3221225472;
    v21[2] = __88__NPKPaymentWebServiceCompanionTargetDevice_displayableSharesForPassIdentifierResponse___block_invoke_2;
    v21[3] = &unk_24CFED088;
    v22 = v11;
    v13 = v11;
    objc_msgSend(v12, "enumerateObjectsUsingBlock:", v21);

    v14 = objc_msgSend(v13, "copy");
    v15 = *(_QWORD *)(*(_QWORD *)(a1 + 64) + 8);
    v16 = *(void **)(v15 + 40);
    *(_QWORD *)(v15 + 40) = v14;

  }
  else
  {
    pk_Payment_log();
    v17 = objc_claimAutoreleasedReturnValue();
    v18 = os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT);

    if (v18)
    {
      pk_Payment_log();
      v19 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)v20 = 0;
        _os_log_impl(&dword_213518000, v19, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", v20, 2u);
      }

    }
  }

}

void __88__NPKPaymentWebServiceCompanionTargetDevice_displayableSharesForPassIdentifierResponse___block_invoke_2(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  void *v5;
  id v6;

  v3 = a2;
  v4 = objc_opt_class();
  NPKSecureUnarchiveObject(v3, v4);
  v6 = (id)objc_claimAutoreleasedReturnValue();

  v5 = v6;
  if (v6)
  {
    objc_msgSend(*(id *)(a1 + 32), "addObject:", v6);
    v5 = v6;
  }

}

- (void)displayableEntitlementsForPassIdentifier:(id)a3 completion:(id)a4
{
  id v6;
  id v7;
  NSObject *v8;
  _BOOL4 v9;
  NSObject *v10;
  void *v11;
  id v12;
  id v13;
  id v14;
  _QWORD v15[5];
  id v16;
  id v17;
  uint8_t buf[4];
  id v19;
  __int16 v20;
  void *v21;
  uint64_t v22;

  v22 = *MEMORY[0x24BDAC8D0];
  v6 = a3;
  v7 = a4;
  pk_General_log();
  v8 = objc_claimAutoreleasedReturnValue();
  v9 = os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT);

  if (v9)
  {
    pk_General_log();
    v10 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
    {
      v11 = (void *)MEMORY[0x2199B6780](v7);
      *(_DWORD *)buf = 138412546;
      v19 = v6;
      v20 = 2112;
      v21 = v11;
      _os_log_impl(&dword_213518000, v10, OS_LOG_TYPE_DEFAULT, "Notice: Target device - Request for displayable entitlements for pass identifier: %@, completion: %@\nChecking for displayable entitlements from the corresponding companion pass first...", buf, 0x16u);

    }
  }
  v12 = objc_alloc_init(MEMORY[0x24BE6ED30]);
  v15[0] = MEMORY[0x24BDAC760];
  v15[1] = 3221225472;
  v15[2] = __97__NPKPaymentWebServiceCompanionTargetDevice_displayableEntitlementsForPassIdentifier_completion___block_invoke;
  v15[3] = &unk_24CFEDC80;
  v16 = v6;
  v17 = v7;
  v15[4] = self;
  v13 = v6;
  v14 = v7;
  objc_msgSend(v12, "displayableEntitlementsForPassIdentifier:completion:", v13, v15);

}

void __97__NPKPaymentWebServiceCompanionTargetDevice_displayableEntitlementsForPassIdentifier_completion___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  _BOOL4 v5;
  NSObject *v6;
  uint64_t v7;
  int v8;
  id v9;
  uint64_t v10;

  v10 = *MEMORY[0x24BDAC8D0];
  v3 = a2;
  if (v3)
  {
    pk_General_log();
    v4 = objc_claimAutoreleasedReturnValue();
    v5 = os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT);

    if (v5)
    {
      pk_General_log();
      v6 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
      {
        v8 = 138412290;
        v9 = v3;
        _os_log_impl(&dword_213518000, v6, OS_LOG_TYPE_DEFAULT, "Notice: Target device - Returning displayable entitlements (%@) for companion pass", (uint8_t *)&v8, 0xCu);
      }

    }
    v7 = *(_QWORD *)(a1 + 48);
    if (v7)
      (*(void (**)(uint64_t, id))(v7 + 16))(v7, v3);
  }
  else
  {
    objc_msgSend(*(id *)(a1 + 32), "_displayableEntitlementsForPassIdentifier:completion:", *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48));
  }

}

- (void)_displayableEntitlementsForPassIdentifier:(id)a3 completion:(id)a4
{
  id v6;
  id v7;
  NSObject *v8;
  NSObject *v9;
  _BOOL4 v10;
  NSObject *v11;
  uint8_t v12[8];
  _QWORD block[4];
  id v14;
  NPKPaymentWebServiceCompanionTargetDevice *v15;
  id v16;

  v6 = a3;
  v7 = a4;
  if (-[NPKPaymentWebServiceCompanionTargetDevice _isSharedInvitationProvisioningSupported](self, "_isSharedInvitationProvisioningSupported"))
  {
    -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
    v8 = objc_claimAutoreleasedReturnValue();
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 3221225472;
    block[2] = __98__NPKPaymentWebServiceCompanionTargetDevice__displayableEntitlementsForPassIdentifier_completion___block_invoke;
    block[3] = &unk_24CFED5E8;
    v14 = v6;
    v15 = self;
    v16 = v7;
    dispatch_sync(v8, block);

  }
  else
  {
    pk_Payment_log();
    v9 = objc_claimAutoreleasedReturnValue();
    v10 = os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT);

    if (v10)
    {
      pk_Payment_log();
      v11 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)v12 = 0;
        _os_log_impl(&dword_213518000, v11, OS_LOG_TYPE_DEFAULT, "Notice: Target device does not support share invitation provisioning.", v12, 2u);
      }

    }
    if (v7)
      (*((void (**)(id, _QWORD))v7 + 2))(v7, 0);
  }

}

void __98__NPKPaymentWebServiceCompanionTargetDevice__displayableEntitlementsForPassIdentifier_completion___block_invoke(uint64_t a1)
{
  NSObject *v2;
  _BOOL4 v3;
  NSObject *v4;
  void *v5;
  void *v6;
  NPKProtoDisplayableEntitlementsForPassIdentifierRequest *v7;
  id v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  NSObject *v14;
  void *v15;
  void *v16;
  void *v17;
  NSObject *v18;
  _BOOL4 v19;
  NSObject *v20;
  void *v21;
  uint64_t v22;
  NSObject *v23;
  _BOOL4 v24;
  const char *v25;
  NSObject *v26;
  os_log_type_t v27;
  NSObject *v28;
  _BOOL4 v29;
  _QWORD v30[4];
  id v31;
  uint64_t v32;
  void *v33;
  uint8_t buf[4];
  void *v35;
  __int16 v36;
  void *v37;
  uint64_t v38;

  v38 = *MEMORY[0x24BDAC8D0];
  pk_General_log();
  v2 = objc_claimAutoreleasedReturnValue();
  v3 = os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT);

  if (v3)
  {
    pk_General_log();
    v4 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      v5 = *(void **)(a1 + 32);
      v6 = (void *)MEMORY[0x2199B6780](*(_QWORD *)(a1 + 48));
      *(_DWORD *)buf = 138412546;
      v35 = v5;
      v36 = 2112;
      v37 = v6;
      _os_log_impl(&dword_213518000, v4, OS_LOG_TYPE_DEFAULT, "Notice: Target device - Request for displayable entitlements from watch for pass identifier: %@, completion: %@", buf, 0x16u);

    }
  }
  if (*(_QWORD *)(a1 + 32))
  {
    v7 = objc_alloc_init(NPKProtoDisplayableEntitlementsForPassIdentifierRequest);
    -[NPKProtoDisplayableEntitlementsForPassIdentifierRequest setPassIdentifier:](v7, "setPassIdentifier:", *(_QWORD *)(a1 + 32));
    v8 = objc_alloc(MEMORY[0x24BE4FE40]);
    -[NPKProtoDisplayableEntitlementsForPassIdentifierRequest data](v7, "data");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    v10 = (void *)objc_msgSend(v8, "initWithProtobufData:type:isResponse:", v9, 115, 0);

    v11 = *(void **)(a1 + 40);
    v32 = *MEMORY[0x24BE4FB30];
    v33 = &unk_24D0566F0;
    objc_msgSend(MEMORY[0x24BDBCE70], "dictionaryWithObjects:forKeys:count:", &v33, &v32, 1);
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v11, "_sendProtobuf:responseExpected:extraOptions:", v10, 1, v12);
    v13 = (void *)objc_claimAutoreleasedReturnValue();

    if (v13)
    {
      if (*(_QWORD *)(a1 + 48))
      {
        v14 = MEMORY[0x2199B6780]();
        v30[0] = MEMORY[0x24BDAC760];
        v30[1] = 3221225472;
        v30[2] = __98__NPKPaymentWebServiceCompanionTargetDevice__displayableEntitlementsForPassIdentifier_completion___block_invoke_787;
        v30[3] = &unk_24CFE7B80;
        v31 = *(id *)(a1 + 48);
        v15 = (void *)MEMORY[0x2199B6780](v30);
        v16 = *(void **)(a1 + 40);
        v17 = (void *)MEMORY[0x2199B6780](v14);
        objc_msgSend(v16, "_trackOutstandingRequestWithMessageIdentifier:completionHandler:errorHandler:", v13, v17, v15);

LABEL_22:
        goto LABEL_23;
      }
      pk_Payment_log();
      v28 = objc_claimAutoreleasedReturnValue();
      v29 = os_log_type_enabled(v28, OS_LOG_TYPE_DEFAULT);

      if (v29)
      {
        pk_Payment_log();
        v14 = objc_claimAutoreleasedReturnValue();
        if (!os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
          goto LABEL_22;
        *(_DWORD *)buf = 138412290;
        v35 = v13;
        v25 = "Warning: No response expected for message with identifier %@";
        v26 = v14;
        v27 = OS_LOG_TYPE_DEFAULT;
        goto LABEL_21;
      }
    }
    else
    {
      pk_Payment_log();
      v23 = objc_claimAutoreleasedReturnValue();
      v24 = os_log_type_enabled(v23, OS_LOG_TYPE_ERROR);

      if (v24)
      {
        pk_Payment_log();
        v14 = objc_claimAutoreleasedReturnValue();
        if (!os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
          goto LABEL_22;
        *(_DWORD *)buf = 138412290;
        v35 = v10;
        v25 = "Error: No message identifier for protobuf %@";
        v26 = v14;
        v27 = OS_LOG_TYPE_ERROR;
LABEL_21:
        _os_log_impl(&dword_213518000, v26, v27, v25, buf, 0xCu);
        goto LABEL_22;
      }
    }
LABEL_23:

    return;
  }
  pk_General_log();
  v18 = objc_claimAutoreleasedReturnValue();
  v19 = os_log_type_enabled(v18, OS_LOG_TYPE_ERROR);

  if (v19)
  {
    pk_General_log();
    v20 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR))
    {
      v21 = *(void **)(a1 + 32);
      *(_DWORD *)buf = 138412290;
      v35 = v21;
      _os_log_impl(&dword_213518000, v20, OS_LOG_TYPE_ERROR, "Error: Unable to fetch displayable entitlements without pass identifier (%@)", buf, 0xCu);
    }

  }
  v22 = *(_QWORD *)(a1 + 48);
  if (v22)
    (*(void (**)(uint64_t, _QWORD))(v22 + 16))(v22, 0);
}

void __98__NPKPaymentWebServiceCompanionTargetDevice__displayableEntitlementsForPassIdentifier_completion___block_invoke_787(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  _BOOL4 v5;
  NSObject *v6;
  uint64_t v7;
  int v8;
  id v9;
  uint64_t v10;

  v10 = *MEMORY[0x24BDAC8D0];
  v3 = a2;
  pk_Payment_log();
  v4 = objc_claimAutoreleasedReturnValue();
  v5 = os_log_type_enabled(v4, OS_LOG_TYPE_ERROR);

  if (v5)
  {
    pk_Payment_log();
    v6 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      v8 = 138412290;
      v9 = v3;
      _os_log_impl(&dword_213518000, v6, OS_LOG_TYPE_ERROR, "Error: Provisioning service outstanding request error handler invoked: %@", (uint8_t *)&v8, 0xCu);
    }

  }
  v7 = *(_QWORD *)(a1 + 32);
  if (v7)
    (*(void (**)(uint64_t, _QWORD))(v7 + 16))(v7, 0);

}

- (void)displayableEntitlementsForPassIdentifierResponse:(id)a3
{
  id v4;
  NSObject *v5;
  _BOOL4 v6;
  NSObject *v7;
  void *v8;
  void *v9;
  void *v10;
  NSObject *v11;
  NSObject *v12;
  _BOOL4 v13;
  NSObject *v14;
  uint64_t v15;
  uint8_t v16[8];
  _QWORD block[5];
  id v18;
  id v19;
  __int128 *p_buf;
  uint64_t *v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t (*v25)(uint64_t, uint64_t);
  void (*v26)(uint64_t);
  id v27;
  __int128 buf;
  uint64_t v29;
  uint64_t (*v30)(uint64_t, uint64_t);
  void (*v31)(uint64_t);
  id v32;
  uint64_t v33;

  v33 = *MEMORY[0x24BDAC8D0];
  v4 = a3;
  pk_Payment_log();
  v5 = objc_claimAutoreleasedReturnValue();
  v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    pk_Payment_log();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend(v4, "npkDescription");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      LODWORD(buf) = 138412290;
      *(_QWORD *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_213518000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Target displayableEntitlementsForPassIdentifierResponse: incoming protobuf %@", (uint8_t *)&buf, 0xCu);

    }
  }
  objc_msgSend(v4, "context");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "incomingResponseIdentifier");
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  *(_QWORD *)&buf = 0;
  *((_QWORD *)&buf + 1) = &buf;
  v29 = 0x3032000000;
  v30 = __Block_byref_object_copy__342;
  v31 = __Block_byref_object_dispose__343;
  v32 = 0;
  v22 = 0;
  v23 = &v22;
  v24 = 0x3032000000;
  v25 = __Block_byref_object_copy__23;
  v26 = __Block_byref_object_dispose__23;
  v27 = 0;
  if (v10)
  {
    -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
    v11 = objc_claimAutoreleasedReturnValue();
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 3221225472;
    block[2] = __94__NPKPaymentWebServiceCompanionTargetDevice_displayableEntitlementsForPassIdentifierResponse___block_invoke;
    block[3] = &unk_24CFED0D8;
    block[4] = self;
    v18 = v10;
    v19 = v4;
    p_buf = &buf;
    v21 = &v22;
    dispatch_sync(v11, block);

  }
  else
  {
    pk_Payment_log();
    v12 = objc_claimAutoreleasedReturnValue();
    v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      pk_Payment_log();
      v14 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)v16 = 0;
        _os_log_impl(&dword_213518000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v16, 2u);
      }

    }
  }
  v15 = *(_QWORD *)(*((_QWORD *)&buf + 1) + 40);
  if (v15)
    (*(void (**)(uint64_t, uint64_t))(v15 + 16))(v15, v23[5]);
  _Block_object_dispose(&v22, 8);

  _Block_object_dispose(&buf, 8);
}

void __94__NPKPaymentWebServiceCompanionTargetDevice_displayableEntitlementsForPassIdentifierResponse___block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;
  NPKProtoDisplayableEntitlementsForPassIdentifierResponse *v4;
  void *v5;
  NPKProtoDisplayableEntitlementsForPassIdentifierResponse *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  NSObject *v17;
  _BOOL4 v18;
  NSObject *v19;
  uint8_t v20[8];
  _QWORD v21[4];
  id v22;

  objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "objectForKey:", *(_QWORD *)(a1 + 40));
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  if (v3)
  {
    v4 = [NPKProtoDisplayableEntitlementsForPassIdentifierResponse alloc];
    objc_msgSend(*(id *)(a1 + 48), "data");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    v6 = -[NPKProtoDisplayableEntitlementsForPassIdentifierResponse initWithData:](v4, "initWithData:", v5);

    objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "removeObjectForKey:", *(_QWORD *)(a1 + 40));

    objc_msgSend(v3, "completionHandler");
    v8 = objc_claimAutoreleasedReturnValue();
    v9 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
    v10 = *(void **)(v9 + 40);
    *(_QWORD *)(v9 + 40) = v8;

    v11 = (void *)objc_msgSend(objc_alloc(MEMORY[0x24BDBCEB8]), "initWithCapacity:", -[NPKProtoDisplayableEntitlementsForPassIdentifierResponse entitlementsDatasCount](v6, "entitlementsDatasCount"));
    -[NPKProtoDisplayableEntitlementsForPassIdentifierResponse entitlementsDatas](v6, "entitlementsDatas");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    v21[0] = MEMORY[0x24BDAC760];
    v21[1] = 3221225472;
    v21[2] = __94__NPKPaymentWebServiceCompanionTargetDevice_displayableEntitlementsForPassIdentifierResponse___block_invoke_2;
    v21[3] = &unk_24CFED088;
    v22 = v11;
    v13 = v11;
    objc_msgSend(v12, "enumerateObjectsUsingBlock:", v21);

    v14 = objc_msgSend(v13, "copy");
    v15 = *(_QWORD *)(*(_QWORD *)(a1 + 64) + 8);
    v16 = *(void **)(v15 + 40);
    *(_QWORD *)(v15 + 40) = v14;

  }
  else
  {
    pk_Payment_log();
    v17 = objc_claimAutoreleasedReturnValue();
    v18 = os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT);

    if (v18)
    {
      pk_Payment_log();
      v19 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)v20 = 0;
        _os_log_impl(&dword_213518000, v19, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", v20, 2u);
      }

    }
  }

}

void __94__NPKPaymentWebServiceCompanionTargetDevice_displayableEntitlementsForPassIdentifierResponse___block_invoke_2(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  void *v5;
  id v6;

  v3 = a2;
  v4 = objc_opt_class();
  NPKSecureUnarchiveObject(v3, v4);
  v6 = (id)objc_claimAutoreleasedReturnValue();

  v5 = v6;
  if (v6)
  {
    objc_msgSend(*(id *)(a1 + 32), "addObject:", v6);
    v5 = v6;
  }

}

- (void)prewarmCreateShareForPassIdentifier:(id)a3 completion:(id)a4
{
  id v6;
  id v7;
  NSObject *v8;
  NSObject *v9;
  _BOOL4 v10;
  NSObject *v11;
  uint8_t v12[8];
  _QWORD block[4];
  id v14;
  NPKPaymentWebServiceCompanionTargetDevice *v15;
  id v16;

  v6 = a3;
  v7 = a4;
  if (-[NPKPaymentWebServiceCompanionTargetDevice _isSharedInvitationProvisioningSupported](self, "_isSharedInvitationProvisioningSupported"))
  {
    -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
    v8 = objc_claimAutoreleasedReturnValue();
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 3221225472;
    block[2] = __92__NPKPaymentWebServiceCompanionTargetDevice_prewarmCreateShareForPassIdentifier_completion___block_invoke;
    block[3] = &unk_24CFED5E8;
    v14 = v6;
    v15 = self;
    v16 = v7;
    dispatch_sync(v8, block);

  }
  else
  {
    pk_Payment_log();
    v9 = objc_claimAutoreleasedReturnValue();
    v10 = os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT);

    if (v10)
    {
      pk_Payment_log();
      v11 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)v12 = 0;
        _os_log_impl(&dword_213518000, v11, OS_LOG_TYPE_DEFAULT, "Notice: Target device does not support share invitation provisioning.", v12, 2u);
      }

    }
    if (v7)
      (*((void (**)(id, _QWORD))v7 + 2))(v7, 0);
  }

}

void __92__NPKPaymentWebServiceCompanionTargetDevice_prewarmCreateShareForPassIdentifier_completion___block_invoke(uint64_t a1)
{
  NSObject *v2;
  _BOOL4 v3;
  NSObject *v4;
  void *v5;
  void *v6;
  NPKProtoPrewarmCreateShareForPassIdentifierRequest *v7;
  id v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  NSObject *v14;
  void *v15;
  void *v16;
  void *v17;
  NSObject *v18;
  _BOOL4 v19;
  NSObject *v20;
  void *v21;
  uint64_t v22;
  NSObject *v23;
  _BOOL4 v24;
  const char *v25;
  NSObject *v26;
  os_log_type_t v27;
  NSObject *v28;
  _BOOL4 v29;
  _QWORD v30[4];
  id v31;
  uint64_t v32;
  void *v33;
  uint8_t buf[4];
  void *v35;
  __int16 v36;
  void *v37;
  uint64_t v38;

  v38 = *MEMORY[0x24BDAC8D0];
  pk_General_log();
  v2 = objc_claimAutoreleasedReturnValue();
  v3 = os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT);

  if (v3)
  {
    pk_General_log();
    v4 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      v5 = *(void **)(a1 + 32);
      v6 = (void *)MEMORY[0x2199B6780](*(_QWORD *)(a1 + 48));
      *(_DWORD *)buf = 138412546;
      v35 = v5;
      v36 = 2112;
      v37 = v6;
      _os_log_impl(&dword_213518000, v4, OS_LOG_TYPE_DEFAULT, "Notice: Target device - Request to prewarm share creation for pass identifier: %@, completion: %@", buf, 0x16u);

    }
  }
  if (*(_QWORD *)(a1 + 32))
  {
    v7 = objc_alloc_init(NPKProtoPrewarmCreateShareForPassIdentifierRequest);
    -[NPKProtoPrewarmCreateShareForPassIdentifierRequest setPassIdentifier:](v7, "setPassIdentifier:", *(_QWORD *)(a1 + 32));
    v8 = objc_alloc(MEMORY[0x24BE4FE40]);
    -[NPKProtoPrewarmCreateShareForPassIdentifierRequest data](v7, "data");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    v10 = (void *)objc_msgSend(v8, "initWithProtobufData:type:isResponse:", v9, 127, 0);

    v11 = *(void **)(a1 + 40);
    v32 = *MEMORY[0x24BE4FB30];
    v33 = &unk_24D0566F0;
    objc_msgSend(MEMORY[0x24BDBCE70], "dictionaryWithObjects:forKeys:count:", &v33, &v32, 1);
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v11, "_sendProtobuf:responseExpected:extraOptions:", v10, 1, v12);
    v13 = (void *)objc_claimAutoreleasedReturnValue();

    if (v13)
    {
      if (*(_QWORD *)(a1 + 48))
      {
        v14 = MEMORY[0x2199B6780]();
        v30[0] = MEMORY[0x24BDAC760];
        v30[1] = 3221225472;
        v30[2] = __92__NPKPaymentWebServiceCompanionTargetDevice_prewarmCreateShareForPassIdentifier_completion___block_invoke_791;
        v30[3] = &unk_24CFE7B80;
        v31 = *(id *)(a1 + 48);
        v15 = (void *)MEMORY[0x2199B6780](v30);
        v16 = *(void **)(a1 + 40);
        v17 = (void *)MEMORY[0x2199B6780](v14);
        objc_msgSend(v16, "_trackOutstandingRequestWithMessageIdentifier:completionHandler:errorHandler:", v13, v17, v15);

LABEL_22:
        goto LABEL_23;
      }
      pk_Payment_log();
      v28 = objc_claimAutoreleasedReturnValue();
      v29 = os_log_type_enabled(v28, OS_LOG_TYPE_DEFAULT);

      if (v29)
      {
        pk_Payment_log();
        v14 = objc_claimAutoreleasedReturnValue();
        if (!os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
          goto LABEL_22;
        *(_DWORD *)buf = 138412290;
        v35 = v13;
        v25 = "Warning: No response expected for message with identifier %@";
        v26 = v14;
        v27 = OS_LOG_TYPE_DEFAULT;
        goto LABEL_21;
      }
    }
    else
    {
      pk_Payment_log();
      v23 = objc_claimAutoreleasedReturnValue();
      v24 = os_log_type_enabled(v23, OS_LOG_TYPE_ERROR);

      if (v24)
      {
        pk_Payment_log();
        v14 = objc_claimAutoreleasedReturnValue();
        if (!os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
          goto LABEL_22;
        *(_DWORD *)buf = 138412290;
        v35 = v10;
        v25 = "Error: No message identifier for protobuf %@";
        v26 = v14;
        v27 = OS_LOG_TYPE_ERROR;
LABEL_21:
        _os_log_impl(&dword_213518000, v26, v27, v25, buf, 0xCu);
        goto LABEL_22;
      }
    }
LABEL_23:

    return;
  }
  pk_General_log();
  v18 = objc_claimAutoreleasedReturnValue();
  v19 = os_log_type_enabled(v18, OS_LOG_TYPE_ERROR);

  if (v19)
  {
    pk_General_log();
    v20 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR))
    {
      v21 = *(void **)(a1 + 32);
      *(_DWORD *)buf = 138412290;
      v35 = v21;
      _os_log_impl(&dword_213518000, v20, OS_LOG_TYPE_ERROR, "Error: Unable to prewarm share without a pass identifier (%@)", buf, 0xCu);
    }

  }
  v22 = *(_QWORD *)(a1 + 48);
  if (v22)
    (*(void (**)(uint64_t, _QWORD))(v22 + 16))(v22, 0);
}

void __92__NPKPaymentWebServiceCompanionTargetDevice_prewarmCreateShareForPassIdentifier_completion___block_invoke_791(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  _BOOL4 v5;
  NSObject *v6;
  uint64_t v7;
  int v8;
  id v9;
  uint64_t v10;

  v10 = *MEMORY[0x24BDAC8D0];
  v3 = a2;
  pk_Payment_log();
  v4 = objc_claimAutoreleasedReturnValue();
  v5 = os_log_type_enabled(v4, OS_LOG_TYPE_ERROR);

  if (v5)
  {
    pk_Payment_log();
    v6 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      v8 = 138412290;
      v9 = v3;
      _os_log_impl(&dword_213518000, v6, OS_LOG_TYPE_ERROR, "Error: Provisioning service outstanding request error handler invoked: %@", (uint8_t *)&v8, 0xCu);
    }

  }
  v7 = *(_QWORD *)(a1 + 32);
  if (v7)
    (*(void (**)(uint64_t, _QWORD))(v7 + 16))(v7, 0);

}

- (void)prewarmCreateShareForPassIdentifierResponse:(id)a3
{
  id v4;
  NSObject *v5;
  _BOOL4 v6;
  NSObject *v7;
  void *v8;
  void *v9;
  void *v10;
  NSObject *v11;
  NSObject *v12;
  _BOOL4 v13;
  NSObject *v14;
  uint64_t v15;
  uint8_t v16[8];
  _QWORD block[5];
  id v18;
  id v19;
  __int128 *p_buf;
  uint64_t *v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  char v25;
  __int128 buf;
  uint64_t v27;
  uint64_t (*v28)(uint64_t, uint64_t);
  void (*v29)(uint64_t);
  id v30;
  uint64_t v31;

  v31 = *MEMORY[0x24BDAC8D0];
  v4 = a3;
  pk_Payment_log();
  v5 = objc_claimAutoreleasedReturnValue();
  v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    pk_Payment_log();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend(v4, "npkDescription");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      LODWORD(buf) = 138412290;
      *(_QWORD *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_213518000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Target prewarmCreateShareForPassIdentifierResponse: incoming protobuf %@", (uint8_t *)&buf, 0xCu);

    }
  }
  objc_msgSend(v4, "context");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "incomingResponseIdentifier");
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  *(_QWORD *)&buf = 0;
  *((_QWORD *)&buf + 1) = &buf;
  v27 = 0x3032000000;
  v28 = __Block_byref_object_copy__342;
  v29 = __Block_byref_object_dispose__343;
  v30 = 0;
  v22 = 0;
  v23 = &v22;
  v24 = 0x2020000000;
  v25 = 0;
  if (v10)
  {
    -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
    v11 = objc_claimAutoreleasedReturnValue();
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 3221225472;
    block[2] = __89__NPKPaymentWebServiceCompanionTargetDevice_prewarmCreateShareForPassIdentifierResponse___block_invoke;
    block[3] = &unk_24CFED0D8;
    block[4] = self;
    v18 = v10;
    v19 = v4;
    p_buf = &buf;
    v21 = &v22;
    dispatch_sync(v11, block);

  }
  else
  {
    pk_Payment_log();
    v12 = objc_claimAutoreleasedReturnValue();
    v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      pk_Payment_log();
      v14 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)v16 = 0;
        _os_log_impl(&dword_213518000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v16, 2u);
      }

    }
  }
  v15 = *(_QWORD *)(*((_QWORD *)&buf + 1) + 40);
  if (v15)
    (*(void (**)(uint64_t, _QWORD))(v15 + 16))(v15, *((unsigned __int8 *)v23 + 24));
  _Block_object_dispose(&v22, 8);
  _Block_object_dispose(&buf, 8);

}

void __89__NPKPaymentWebServiceCompanionTargetDevice_prewarmCreateShareForPassIdentifierResponse___block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;
  NPKProtoPrewarmCreateShareForPassIdentifierResponse *v4;
  void *v5;
  NPKProtoPrewarmCreateShareForPassIdentifierResponse *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  NSObject *v11;
  _BOOL4 v12;
  NSObject *v13;
  uint8_t v14[16];

  objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "objectForKey:", *(_QWORD *)(a1 + 40));
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  if (v3)
  {
    v4 = [NPKProtoPrewarmCreateShareForPassIdentifierResponse alloc];
    objc_msgSend(*(id *)(a1 + 48), "data");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    v6 = -[NPKProtoPrewarmCreateShareForPassIdentifierResponse initWithData:](v4, "initWithData:", v5);

    objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "removeObjectForKey:", *(_QWORD *)(a1 + 40));

    objc_msgSend(v3, "completionHandler");
    v8 = objc_claimAutoreleasedReturnValue();
    v9 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
    v10 = *(void **)(v9 + 40);
    *(_QWORD *)(v9 + 40) = v8;

    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 24) = -[NPKProtoPrewarmCreateShareForPassIdentifierResponse success](v6, "success");
  }
  else
  {
    pk_Payment_log();
    v11 = objc_claimAutoreleasedReturnValue();
    v12 = os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT);

    if (v12)
    {
      pk_Payment_log();
      v13 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)v14 = 0;
        _os_log_impl(&dword_213518000, v13, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", v14, 2u);
      }

    }
  }

}

- (void)createShareForPartialShareInvitation:(id)a3 authorization:(id)a4 completion:(id)a5
{
  id v8;
  id v9;
  id v10;
  NSObject *v11;
  NSObject *v12;
  _BOOL4 v13;
  NSObject *v14;
  void *v15;
  uint8_t v16[16];
  _QWORD block[4];
  id v18;
  id v19;
  NPKPaymentWebServiceCompanionTargetDevice *v20;
  id v21;

  v8 = a3;
  v9 = a4;
  v10 = a5;
  if (-[NPKPaymentWebServiceCompanionTargetDevice _isSharedInvitationProvisioningSupported](self, "_isSharedInvitationProvisioningSupported"))
  {
    -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
    v11 = objc_claimAutoreleasedReturnValue();
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 3221225472;
    block[2] = __107__NPKPaymentWebServiceCompanionTargetDevice_createShareForPartialShareInvitation_authorization_completion___block_invoke;
    block[3] = &unk_24CFE8740;
    v18 = v8;
    v19 = v9;
    v20 = self;
    v21 = v10;
    dispatch_sync(v11, block);

  }
  else
  {
    pk_Payment_log();
    v12 = objc_claimAutoreleasedReturnValue();
    v13 = os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT);

    if (v13)
    {
      pk_Payment_log();
      v14 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)v16 = 0;
        _os_log_impl(&dword_213518000, v14, OS_LOG_TYPE_DEFAULT, "Notice: Target device does not support share invitation provisioning.", v16, 2u);
      }

    }
    if (v10)
    {
      PKDisplayableErrorForCommonType();
      v15 = (void *)objc_claimAutoreleasedReturnValue();
      (*((void (**)(id, _QWORD, void *))v10 + 2))(v10, 0, v15);

    }
  }

}

void __107__NPKPaymentWebServiceCompanionTargetDevice_createShareForPartialShareInvitation_authorization_completion___block_invoke(uint64_t a1)
{
  NSObject *v2;
  _BOOL4 v3;
  NSObject *v4;
  void *v5;
  uint64_t v6;
  void *v7;
  NPKProtoCreateShareForPartialShareInvitationRequest *v8;
  void *v9;
  id v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  NSObject *v16;
  void *v17;
  void *v18;
  void *v19;
  NSObject *v20;
  _BOOL4 v21;
  NSObject *v22;
  void *v23;
  NSObject *v24;
  _BOOL4 v25;
  const char *v26;
  NSObject *v27;
  os_log_type_t v28;
  NSObject *v29;
  _BOOL4 v30;
  _QWORD v31[4];
  id v32;
  uint64_t v33;
  void *v34;
  uint8_t buf[4];
  void *v36;
  __int16 v37;
  uint64_t v38;
  __int16 v39;
  void *v40;
  uint64_t v41;

  v41 = *MEMORY[0x24BDAC8D0];
  pk_General_log();
  v2 = objc_claimAutoreleasedReturnValue();
  v3 = os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT);

  if (v3)
  {
    pk_General_log();
    v4 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      v5 = *(void **)(a1 + 32);
      v6 = *(_QWORD *)(a1 + 40);
      v7 = (void *)MEMORY[0x2199B6780](*(_QWORD *)(a1 + 56));
      *(_DWORD *)buf = 138412802;
      v36 = v5;
      v37 = 2112;
      v38 = v6;
      v39 = 2112;
      v40 = v7;
      _os_log_impl(&dword_213518000, v4, OS_LOG_TYPE_DEFAULT, "Notice: Target device - Request to create share for partial share invitation: %@, authorization: %@, completion: %@", buf, 0x20u);

    }
  }
  if (*(_QWORD *)(a1 + 32))
  {
    v8 = objc_alloc_init(NPKProtoCreateShareForPartialShareInvitationRequest);
    NPKSecureArchiveObject(*(void **)(a1 + 32));
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    -[NPKProtoCreateShareForPartialShareInvitationRequest setInviteData:](v8, "setInviteData:", v9);

    -[NPKProtoCreateShareForPartialShareInvitationRequest setAuthorizationData:](v8, "setAuthorizationData:", *(_QWORD *)(a1 + 40));
    v10 = objc_alloc(MEMORY[0x24BE4FE40]);
    -[NPKProtoCreateShareForPartialShareInvitationRequest data](v8, "data");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    v12 = (void *)objc_msgSend(v10, "initWithProtobufData:type:isResponse:", v11, 116, 0);

    v13 = *(void **)(a1 + 48);
    v33 = *MEMORY[0x24BE4FB30];
    v34 = &unk_24D0566F0;
    objc_msgSend(MEMORY[0x24BDBCE70], "dictionaryWithObjects:forKeys:count:", &v34, &v33, 1);
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v13, "_sendProtobuf:responseExpected:extraOptions:", v12, 1, v14);
    v15 = (void *)objc_claimAutoreleasedReturnValue();

    if (v15)
    {
      if (*(_QWORD *)(a1 + 56))
      {
        v16 = MEMORY[0x2199B6780]();
        v31[0] = MEMORY[0x24BDAC760];
        v31[1] = 3221225472;
        v31[2] = __107__NPKPaymentWebServiceCompanionTargetDevice_createShareForPartialShareInvitation_authorization_completion___block_invoke_794;
        v31[3] = &unk_24CFE7B80;
        v32 = *(id *)(a1 + 56);
        v17 = (void *)MEMORY[0x2199B6780](v31);
        v18 = *(void **)(a1 + 48);
        v19 = (void *)MEMORY[0x2199B6780](v16);
        objc_msgSend(v18, "_trackOutstandingRequestWithMessageIdentifier:completionHandler:errorHandler:", v15, v19, v17);

LABEL_22:
        goto LABEL_23;
      }
      pk_Payment_log();
      v29 = objc_claimAutoreleasedReturnValue();
      v30 = os_log_type_enabled(v29, OS_LOG_TYPE_DEFAULT);

      if (v30)
      {
        pk_Payment_log();
        v16 = objc_claimAutoreleasedReturnValue();
        if (!os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
          goto LABEL_22;
        *(_DWORD *)buf = 138412290;
        v36 = v15;
        v26 = "Warning: No response expected for message with identifier %@";
        v27 = v16;
        v28 = OS_LOG_TYPE_DEFAULT;
        goto LABEL_21;
      }
    }
    else
    {
      pk_Payment_log();
      v24 = objc_claimAutoreleasedReturnValue();
      v25 = os_log_type_enabled(v24, OS_LOG_TYPE_ERROR);

      if (v25)
      {
        pk_Payment_log();
        v16 = objc_claimAutoreleasedReturnValue();
        if (!os_log_type_enabled(v16, OS_LOG_TYPE_ERROR))
          goto LABEL_22;
        *(_DWORD *)buf = 138412290;
        v36 = v12;
        v26 = "Error: No message identifier for protobuf %@";
        v27 = v16;
        v28 = OS_LOG_TYPE_ERROR;
LABEL_21:
        _os_log_impl(&dword_213518000, v27, v28, v26, buf, 0xCu);
        goto LABEL_22;
      }
    }
LABEL_23:

    goto LABEL_24;
  }
  pk_General_log();
  v20 = objc_claimAutoreleasedReturnValue();
  v21 = os_log_type_enabled(v20, OS_LOG_TYPE_ERROR);

  if (v21)
  {
    pk_General_log();
    v22 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR))
    {
      v23 = *(void **)(a1 + 32);
      *(_DWORD *)buf = 138412290;
      v36 = v23;
      _os_log_impl(&dword_213518000, v22, OS_LOG_TYPE_ERROR, "Error: Unable to create share without a partial share invitation (%@)", buf, 0xCu);
    }

  }
  if (*(_QWORD *)(a1 + 56))
  {
    PKDisplayableErrorForCommonType();
    v8 = (NPKProtoCreateShareForPartialShareInvitationRequest *)objc_claimAutoreleasedReturnValue();
    (*(void (**)(void))(*(_QWORD *)(a1 + 56) + 16))();
LABEL_24:

  }
}

void __107__NPKPaymentWebServiceCompanionTargetDevice_createShareForPartialShareInvitation_authorization_completion___block_invoke_794(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  _BOOL4 v5;
  NSObject *v6;
  void *v7;
  int v8;
  id v9;
  uint64_t v10;

  v10 = *MEMORY[0x24BDAC8D0];
  v3 = a2;
  pk_Payment_log();
  v4 = objc_claimAutoreleasedReturnValue();
  v5 = os_log_type_enabled(v4, OS_LOG_TYPE_ERROR);

  if (v5)
  {
    pk_Payment_log();
    v6 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      v8 = 138412290;
      v9 = v3;
      _os_log_impl(&dword_213518000, v6, OS_LOG_TYPE_ERROR, "Error: Provisioning service outstanding request error handler invoked: %@", (uint8_t *)&v8, 0xCu);
    }

  }
  if (*(_QWORD *)(a1 + 32))
  {
    PKDisplayableErrorForCommonType();
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    (*(void (**)(void))(*(_QWORD *)(a1 + 32) + 16))();

  }
}

- (void)createShareForPartialShareInvitationResponse:(id)a3
{
  id v4;
  NSObject *v5;
  _BOOL4 v6;
  NSObject *v7;
  void *v8;
  void *v9;
  void *v10;
  NSObject *v11;
  NSObject *v12;
  _BOOL4 v13;
  NSObject *v14;
  uint64_t v15;
  uint8_t v16[16];
  _QWORD block[5];
  id v18;
  id v19;
  __int128 *p_buf;
  uint64_t *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t (*v26)(uint64_t, uint64_t);
  void (*v27)(uint64_t);
  id v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t (*v32)(uint64_t, uint64_t);
  void (*v33)(uint64_t);
  id v34;
  __int128 buf;
  uint64_t v36;
  uint64_t (*v37)(uint64_t, uint64_t);
  void (*v38)(uint64_t);
  id v39;
  uint64_t v40;

  v40 = *MEMORY[0x24BDAC8D0];
  v4 = a3;
  pk_Payment_log();
  v5 = objc_claimAutoreleasedReturnValue();
  v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    pk_Payment_log();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend(v4, "npkDescription");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      LODWORD(buf) = 138412290;
      *(_QWORD *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_213518000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Target createShareForPartialShareInvitationResponse: incoming protobuf %@", (uint8_t *)&buf, 0xCu);

    }
  }
  objc_msgSend(v4, "context");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "incomingResponseIdentifier");
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  *(_QWORD *)&buf = 0;
  *((_QWORD *)&buf + 1) = &buf;
  v36 = 0x3032000000;
  v37 = __Block_byref_object_copy__342;
  v38 = __Block_byref_object_dispose__343;
  v39 = 0;
  v29 = 0;
  v30 = &v29;
  v31 = 0x3032000000;
  v32 = __Block_byref_object_copy__23;
  v33 = __Block_byref_object_dispose__23;
  v34 = 0;
  v23 = 0;
  v24 = &v23;
  v25 = 0x3032000000;
  v26 = __Block_byref_object_copy__23;
  v27 = __Block_byref_object_dispose__23;
  v28 = 0;
  if (v10)
  {
    -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
    v11 = objc_claimAutoreleasedReturnValue();
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 3221225472;
    block[2] = __90__NPKPaymentWebServiceCompanionTargetDevice_createShareForPartialShareInvitationResponse___block_invoke;
    block[3] = &unk_24CFED060;
    block[4] = self;
    v18 = v10;
    v19 = v4;
    p_buf = &buf;
    v21 = &v29;
    v22 = &v23;
    dispatch_sync(v11, block);

  }
  else
  {
    pk_Payment_log();
    v12 = objc_claimAutoreleasedReturnValue();
    v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      pk_Payment_log();
      v14 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)v16 = 0;
        _os_log_impl(&dword_213518000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v16, 2u);
      }

    }
  }
  v15 = *(_QWORD *)(*((_QWORD *)&buf + 1) + 40);
  if (v15)
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v15, v30[5], v24[5]);
  _Block_object_dispose(&v23, 8);

  _Block_object_dispose(&v29, 8);
  _Block_object_dispose(&buf, 8);

}

void __90__NPKPaymentWebServiceCompanionTargetDevice_createShareForPartialShareInvitationResponse___block_invoke(uint64_t a1)
{
  void *v1;
  void *v3;
  void *v4;
  NPKProtoCreateShareForPartialShareInvitationResponse *v5;
  void *v6;
  NPKProtoCreateShareForPartialShareInvitationResponse *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  _BOOL4 v12;
  NSObject *v13;
  void *v14;
  NSObject *v15;
  _BOOL4 v16;
  NSObject *v17;
  _BOOL4 v18;
  NSObject *v19;
  void *v20;
  __int16 v21[8];

  objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "objectForKey:", *(_QWORD *)(a1 + 40));
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  if (v4)
  {
    v5 = [NPKProtoCreateShareForPartialShareInvitationResponse alloc];
    objc_msgSend(*(id *)(a1 + 48), "data");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    v7 = -[NPKProtoCreateShareForPartialShareInvitationResponse initWithData:](v5, "initWithData:", v6);

    objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "removeObjectForKey:", *(_QWORD *)(a1 + 40));

    objc_msgSend(v4, "completionHandler");
    v9 = objc_claimAutoreleasedReturnValue();
    v10 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
    v11 = *(void **)(v10 + 40);
    *(_QWORD *)(v10 + 40) = v9;

    v12 = -[NPKProtoCreateShareForPartialShareInvitationResponse hasShareURLData](v7, "hasShareURLData");
    if (v12)
    {
      -[NPKProtoCreateShareForPartialShareInvitationResponse shareURLData](v7, "shareURLData");
      v1 = (void *)objc_claimAutoreleasedReturnValue();
      v13 = objc_opt_class();
      NPKSecureUnarchiveObject(v1, v13);
      v14 = (void *)objc_claimAutoreleasedReturnValue();
    }
    else
    {
      v14 = 0;
    }
    objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 40), v14);
    if (v12)
    {

    }
    v18 = -[NPKProtoCreateShareForPartialShareInvitationResponse hasErrorData](v7, "hasErrorData");
    if (v18)
    {
      -[NPKProtoCreateShareForPartialShareInvitationResponse errorData](v7, "errorData");
      v1 = (void *)objc_claimAutoreleasedReturnValue();
      v19 = objc_opt_class();
      NPKSecureUnarchiveObject(v1, v19);
      v20 = (void *)objc_claimAutoreleasedReturnValue();
    }
    else
    {
      v20 = 0;
    }
    objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 72) + 8) + 40), v20);
    if (v18)
    {

    }
  }
  else
  {
    pk_Payment_log();
    v15 = objc_claimAutoreleasedReturnValue();
    v16 = os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT);

    if (v16)
    {
      pk_Payment_log();
      v17 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
      {
        v21[0] = 0;
        _os_log_impl(&dword_213518000, v17, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", (uint8_t *)v21, 2u);
      }

    }
  }

}

- (void)checkInvitationStatusForMailboxAddress:(id)a3 completion:(id)a4
{
  id v6;
  id v7;
  NSObject *v8;
  NSObject *v9;
  _BOOL4 v10;
  NSObject *v11;
  void *v12;
  uint8_t v13[8];
  _QWORD block[4];
  id v15;
  NPKPaymentWebServiceCompanionTargetDevice *v16;
  id v17;

  v6 = a3;
  v7 = a4;
  if (-[NPKPaymentWebServiceCompanionTargetDevice _isSharedInvitationProvisioningSupported](self, "_isSharedInvitationProvisioningSupported"))
  {
    -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
    v8 = objc_claimAutoreleasedReturnValue();
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 3221225472;
    block[2] = __95__NPKPaymentWebServiceCompanionTargetDevice_checkInvitationStatusForMailboxAddress_completion___block_invoke;
    block[3] = &unk_24CFED5E8;
    v15 = v6;
    v16 = self;
    v17 = v7;
    dispatch_sync(v8, block);

  }
  else
  {
    pk_Payment_log();
    v9 = objc_claimAutoreleasedReturnValue();
    v10 = os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT);

    if (v10)
    {
      pk_Payment_log();
      v11 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)v13 = 0;
        _os_log_impl(&dword_213518000, v11, OS_LOG_TYPE_DEFAULT, "Notice: Target device does not support share invitation provisioning.", v13, 2u);
      }

    }
    if (v7)
    {
      PKDisplayableErrorForCommonType();
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      (*((void (**)(id, _QWORD, void *))v7 + 2))(v7, 0, v12);

    }
  }

}

void __95__NPKPaymentWebServiceCompanionTargetDevice_checkInvitationStatusForMailboxAddress_completion___block_invoke(uint64_t a1)
{
  NSObject *v2;
  _BOOL4 v3;
  NSObject *v4;
  void *v5;
  void *v6;
  NPKProtoCheckInvitationStatusForMailboxAddressRequest *v7;
  id v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  NSObject *v14;
  void *v15;
  void *v16;
  void *v17;
  NSObject *v18;
  _BOOL4 v19;
  NSObject *v20;
  NSObject *v21;
  _BOOL4 v22;
  const char *v23;
  NSObject *v24;
  os_log_type_t v25;
  NSObject *v26;
  _BOOL4 v27;
  _QWORD v28[4];
  id v29;
  uint64_t v30;
  void *v31;
  uint8_t buf[4];
  void *v33;
  __int16 v34;
  void *v35;
  uint64_t v36;

  v36 = *MEMORY[0x24BDAC8D0];
  pk_General_log();
  v2 = objc_claimAutoreleasedReturnValue();
  v3 = os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT);

  if (v3)
  {
    pk_General_log();
    v4 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      v5 = *(void **)(a1 + 32);
      v6 = (void *)MEMORY[0x2199B6780](*(_QWORD *)(a1 + 48));
      *(_DWORD *)buf = 138478083;
      v33 = v5;
      v34 = 2112;
      v35 = v6;
      _os_log_impl(&dword_213518000, v4, OS_LOG_TYPE_DEFAULT, "Notice: Target device - Request to check invitation status for mailbox address: %{private}@, completion: %@", buf, 0x16u);

    }
  }
  if (objc_msgSend(*(id *)(a1 + 32), "length"))
  {
    v7 = objc_alloc_init(NPKProtoCheckInvitationStatusForMailboxAddressRequest);
    -[NPKProtoCheckInvitationStatusForMailboxAddressRequest setMailboxAddress:](v7, "setMailboxAddress:", *(_QWORD *)(a1 + 32));
    v8 = objc_alloc(MEMORY[0x24BE4FE40]);
    -[NPKProtoCheckInvitationStatusForMailboxAddressRequest data](v7, "data");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    v10 = (void *)objc_msgSend(v8, "initWithProtobufData:type:isResponse:", v9, 123, 0);

    v11 = *(void **)(a1 + 40);
    v30 = *MEMORY[0x24BE4FB30];
    v31 = &unk_24D0566F0;
    objc_msgSend(MEMORY[0x24BDBCE70], "dictionaryWithObjects:forKeys:count:", &v31, &v30, 1);
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v11, "_sendProtobuf:responseExpected:extraOptions:", v10, 1, v12);
    v13 = (void *)objc_claimAutoreleasedReturnValue();

    if (v13)
    {
      if (*(_QWORD *)(a1 + 48))
      {
        v14 = MEMORY[0x2199B6780]();
        v28[0] = MEMORY[0x24BDAC760];
        v28[1] = 3221225472;
        v28[2] = __95__NPKPaymentWebServiceCompanionTargetDevice_checkInvitationStatusForMailboxAddress_completion___block_invoke_798;
        v28[3] = &unk_24CFE7B80;
        v29 = *(id *)(a1 + 48);
        v15 = (void *)MEMORY[0x2199B6780](v28);
        v16 = *(void **)(a1 + 40);
        v17 = (void *)MEMORY[0x2199B6780](v14);
        objc_msgSend(v16, "_trackOutstandingRequestWithMessageIdentifier:completionHandler:errorHandler:", v13, v17, v15);

LABEL_22:
        goto LABEL_23;
      }
      pk_Payment_log();
      v26 = objc_claimAutoreleasedReturnValue();
      v27 = os_log_type_enabled(v26, OS_LOG_TYPE_DEFAULT);

      if (v27)
      {
        pk_Payment_log();
        v14 = objc_claimAutoreleasedReturnValue();
        if (!os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
          goto LABEL_22;
        *(_DWORD *)buf = 138412290;
        v33 = v13;
        v23 = "Warning: No response expected for message with identifier %@";
        v24 = v14;
        v25 = OS_LOG_TYPE_DEFAULT;
        goto LABEL_21;
      }
    }
    else
    {
      pk_Payment_log();
      v21 = objc_claimAutoreleasedReturnValue();
      v22 = os_log_type_enabled(v21, OS_LOG_TYPE_ERROR);

      if (v22)
      {
        pk_Payment_log();
        v14 = objc_claimAutoreleasedReturnValue();
        if (!os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
          goto LABEL_22;
        *(_DWORD *)buf = 138412290;
        v33 = v10;
        v23 = "Error: No message identifier for protobuf %@";
        v24 = v14;
        v25 = OS_LOG_TYPE_ERROR;
LABEL_21:
        _os_log_impl(&dword_213518000, v24, v25, v23, buf, 0xCu);
        goto LABEL_22;
      }
    }
LABEL_23:

    goto LABEL_24;
  }
  pk_General_log();
  v18 = objc_claimAutoreleasedReturnValue();
  v19 = os_log_type_enabled(v18, OS_LOG_TYPE_ERROR);

  if (v19)
  {
    pk_General_log();
    v20 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)buf = 0;
      _os_log_impl(&dword_213518000, v20, OS_LOG_TYPE_ERROR, "Error: Unable to fetch invitation status without mailbox address", buf, 2u);
    }

  }
  if (*(_QWORD *)(a1 + 48))
  {
    PKDisplayableErrorForCommonType();
    v7 = (NPKProtoCheckInvitationStatusForMailboxAddressRequest *)objc_claimAutoreleasedReturnValue();
    (*(void (**)(void))(*(_QWORD *)(a1 + 48) + 16))();
LABEL_24:

  }
}

void __95__NPKPaymentWebServiceCompanionTargetDevice_checkInvitationStatusForMailboxAddress_completion___block_invoke_798(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  _BOOL4 v5;
  NSObject *v6;
  void *v7;
  int v8;
  id v9;
  uint64_t v10;

  v10 = *MEMORY[0x24BDAC8D0];
  v3 = a2;
  pk_Payment_log();
  v4 = objc_claimAutoreleasedReturnValue();
  v5 = os_log_type_enabled(v4, OS_LOG_TYPE_ERROR);

  if (v5)
  {
    pk_Payment_log();
    v6 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      v8 = 138412290;
      v9 = v3;
      _os_log_impl(&dword_213518000, v6, OS_LOG_TYPE_ERROR, "Error: Provisioning service outstanding request error handler invoked: %@", (uint8_t *)&v8, 0xCu);
    }

  }
  if (*(_QWORD *)(a1 + 32))
  {
    PKDisplayableErrorForCommonType();
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    (*(void (**)(void))(*(_QWORD *)(a1 + 32) + 16))();

  }
}

- (void)checkInvitationStatusForMailboxAddressResponse:(id)a3
{
  id v4;
  NSObject *v5;
  _BOOL4 v6;
  NSObject *v7;
  void *v8;
  void *v9;
  void *v10;
  NSObject *v11;
  NSObject *v12;
  _BOOL4 v13;
  NSObject *v14;
  uint64_t v15;
  uint8_t v16[16];
  _QWORD block[5];
  id v18;
  id v19;
  __int128 *p_buf;
  uint64_t *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t (*v26)(uint64_t, uint64_t);
  void (*v27)(uint64_t);
  id v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  char v32;
  __int128 buf;
  uint64_t v34;
  uint64_t (*v35)(uint64_t, uint64_t);
  void (*v36)(uint64_t);
  id v37;
  uint64_t v38;

  v38 = *MEMORY[0x24BDAC8D0];
  v4 = a3;
  pk_Payment_log();
  v5 = objc_claimAutoreleasedReturnValue();
  v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    pk_Payment_log();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend(v4, "npkDescription");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      LODWORD(buf) = 138412290;
      *(_QWORD *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_213518000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Target checkInvitationStatusForMailboxAddressResponse: incoming protobuf %@", (uint8_t *)&buf, 0xCu);

    }
  }
  objc_msgSend(v4, "context");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "incomingResponseIdentifier");
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  *(_QWORD *)&buf = 0;
  *((_QWORD *)&buf + 1) = &buf;
  v34 = 0x3032000000;
  v35 = __Block_byref_object_copy__342;
  v36 = __Block_byref_object_dispose__343;
  v37 = 0;
  v29 = 0;
  v30 = &v29;
  v31 = 0x2020000000;
  v32 = 0;
  v23 = 0;
  v24 = &v23;
  v25 = 0x3032000000;
  v26 = __Block_byref_object_copy__23;
  v27 = __Block_byref_object_dispose__23;
  v28 = 0;
  if (v10)
  {
    -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
    v11 = objc_claimAutoreleasedReturnValue();
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 3221225472;
    block[2] = __92__NPKPaymentWebServiceCompanionTargetDevice_checkInvitationStatusForMailboxAddressResponse___block_invoke;
    block[3] = &unk_24CFED060;
    block[4] = self;
    v18 = v10;
    v19 = v4;
    p_buf = &buf;
    v21 = &v29;
    v22 = &v23;
    dispatch_sync(v11, block);

  }
  else
  {
    pk_Payment_log();
    v12 = objc_claimAutoreleasedReturnValue();
    v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      pk_Payment_log();
      v14 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)v16 = 0;
        _os_log_impl(&dword_213518000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v16, 2u);
      }

    }
  }
  v15 = *(_QWORD *)(*((_QWORD *)&buf + 1) + 40);
  if (v15)
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v15 + 16))(v15, *((unsigned __int8 *)v30 + 24), v24[5]);
  _Block_object_dispose(&v23, 8);

  _Block_object_dispose(&v29, 8);
  _Block_object_dispose(&buf, 8);

}

void __92__NPKPaymentWebServiceCompanionTargetDevice_checkInvitationStatusForMailboxAddressResponse___block_invoke(uint64_t a1)
{
  void *v1;
  void *v3;
  void *v4;
  NPKProtoCheckInvitationStatusForMailboxAddressResponse *v5;
  void *v6;
  NPKProtoCheckInvitationStatusForMailboxAddressResponse *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  _BOOL4 v12;
  NSObject *v13;
  void *v14;
  NSObject *v15;
  _BOOL4 v16;
  NSObject *v17;
  __int16 v18[8];

  objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "objectForKey:", *(_QWORD *)(a1 + 40));
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  if (v4)
  {
    v5 = [NPKProtoCheckInvitationStatusForMailboxAddressResponse alloc];
    objc_msgSend(*(id *)(a1 + 48), "data");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    v7 = -[NPKProtoCheckInvitationStatusForMailboxAddressResponse initWithData:](v5, "initWithData:", v6);

    objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "removeObjectForKey:", *(_QWORD *)(a1 + 40));

    objc_msgSend(v4, "completionHandler");
    v9 = objc_claimAutoreleasedReturnValue();
    v10 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
    v11 = *(void **)(v10 + 40);
    *(_QWORD *)(v10 + 40) = v9;

    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 24) = -[NPKProtoCheckInvitationStatusForMailboxAddressResponse valid](v7, "valid");
    v12 = -[NPKProtoCheckInvitationStatusForMailboxAddressResponse hasErrorData](v7, "hasErrorData");
    if (v12)
    {
      -[NPKProtoCheckInvitationStatusForMailboxAddressResponse errorData](v7, "errorData");
      v1 = (void *)objc_claimAutoreleasedReturnValue();
      v13 = objc_opt_class();
      NPKSecureUnarchiveObject(v1, v13);
      v14 = (void *)objc_claimAutoreleasedReturnValue();
    }
    else
    {
      v14 = 0;
    }
    objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 72) + 8) + 40), v14);
    if (v12)
    {

    }
  }
  else
  {
    pk_Payment_log();
    v15 = objc_claimAutoreleasedReturnValue();
    v16 = os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT);

    if (v16)
    {
      pk_Payment_log();
      v17 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
      {
        v18[0] = 0;
        _os_log_impl(&dword_213518000, v17, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", (uint8_t *)v18, 2u);
      }

    }
  }

}

- (void)statusForShareableCredentials:(id)a3 completion:(id)a4
{
  id v6;
  id v7;
  NSObject *v8;
  NSObject *v9;
  _BOOL4 v10;
  NSObject *v11;
  void *v12;
  uint8_t v13[8];
  _QWORD block[4];
  id v15;
  NPKPaymentWebServiceCompanionTargetDevice *v16;
  id v17;

  v6 = a3;
  v7 = a4;
  if (-[NPKPaymentWebServiceCompanionTargetDevice _isSharedInvitationProvisioningSupported](self, "_isSharedInvitationProvisioningSupported"))
  {
    -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
    v8 = objc_claimAutoreleasedReturnValue();
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 3221225472;
    block[2] = __86__NPKPaymentWebServiceCompanionTargetDevice_statusForShareableCredentials_completion___block_invoke;
    block[3] = &unk_24CFED5E8;
    v15 = v6;
    v16 = self;
    v17 = v7;
    dispatch_sync(v8, block);

  }
  else
  {
    pk_Payment_log();
    v9 = objc_claimAutoreleasedReturnValue();
    v10 = os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT);

    if (v10)
    {
      pk_Payment_log();
      v11 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)v13 = 0;
        _os_log_impl(&dword_213518000, v11, OS_LOG_TYPE_DEFAULT, "Notice: Target device does not support share invitation provisioning.", v13, 2u);
      }

    }
    if (v7)
    {
      PKDisplayableErrorForCommonType();
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      (*((void (**)(id, _QWORD, _QWORD, void *))v7 + 2))(v7, 0, 0, v12);

    }
  }

}

void __86__NPKPaymentWebServiceCompanionTargetDevice_statusForShareableCredentials_completion___block_invoke(uint64_t a1)
{
  NSObject *v2;
  _BOOL4 v3;
  NSObject *v4;
  void *v5;
  void *v6;
  NPKProtoStatusForShareableCredentialsRequest *v7;
  void *v8;
  uint64_t v9;
  NPKProtoStatusForShareableCredentialsRequest *v10;
  id v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  NSObject *v17;
  void *v18;
  void *v19;
  void *v20;
  NSObject *v21;
  _BOOL4 v22;
  NSObject *v23;
  void *v24;
  NSObject *v25;
  _BOOL4 v26;
  const char *v27;
  NSObject *v28;
  os_log_type_t v29;
  NSObject *v30;
  _BOOL4 v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(uint64_t, void *);
  void *v35;
  id v36;
  _QWORD v37[4];
  NPKProtoStatusForShareableCredentialsRequest *v38;
  uint64_t v39;
  void *v40;
  uint8_t buf[4];
  void *v42;
  __int16 v43;
  void *v44;
  uint64_t v45;

  v45 = *MEMORY[0x24BDAC8D0];
  pk_General_log();
  v2 = objc_claimAutoreleasedReturnValue();
  v3 = os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT);

  if (v3)
  {
    pk_General_log();
    v4 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      v5 = *(void **)(a1 + 32);
      v6 = (void *)MEMORY[0x2199B6780](*(_QWORD *)(a1 + 48));
      *(_DWORD *)buf = 138412546;
      v42 = v5;
      v43 = 2112;
      v44 = v6;
      _os_log_impl(&dword_213518000, v4, OS_LOG_TYPE_DEFAULT, "Notice: Target device - Request for status for shareable credentials: %@, completion: %@", buf, 0x16u);

    }
  }
  if (objc_msgSend(*(id *)(a1 + 32), "count"))
  {
    v7 = objc_alloc_init(NPKProtoStatusForShareableCredentialsRequest);
    v8 = *(void **)(a1 + 32);
    v9 = MEMORY[0x24BDAC760];
    v37[0] = MEMORY[0x24BDAC760];
    v37[1] = 3221225472;
    v37[2] = __86__NPKPaymentWebServiceCompanionTargetDevice_statusForShareableCredentials_completion___block_invoke_801;
    v37[3] = &unk_24CFEDCA8;
    v10 = v7;
    v38 = v10;
    objc_msgSend(v8, "enumerateObjectsUsingBlock:", v37);
    v11 = objc_alloc(MEMORY[0x24BE4FE40]);
    -[NPKProtoStatusForShareableCredentialsRequest data](v10, "data");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    v13 = (void *)objc_msgSend(v11, "initWithProtobufData:type:isResponse:", v12, 117, 0);

    v14 = *(void **)(a1 + 40);
    v39 = *MEMORY[0x24BE4FB30];
    v40 = &unk_24D0566F0;
    objc_msgSend(MEMORY[0x24BDBCE70], "dictionaryWithObjects:forKeys:count:", &v40, &v39, 1);
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v14, "_sendProtobuf:responseExpected:extraOptions:", v13, 1, v15);
    v16 = (void *)objc_claimAutoreleasedReturnValue();

    if (v16)
    {
      if (*(_QWORD *)(a1 + 48))
      {
        v17 = MEMORY[0x2199B6780]();
        v32 = v9;
        v33 = 3221225472;
        v34 = __86__NPKPaymentWebServiceCompanionTargetDevice_statusForShareableCredentials_completion___block_invoke_2;
        v35 = &unk_24CFE7B80;
        v36 = *(id *)(a1 + 48);
        v18 = (void *)MEMORY[0x2199B6780](&v32);
        v19 = *(void **)(a1 + 40);
        v20 = (void *)MEMORY[0x2199B6780](v17);
        objc_msgSend(v19, "_trackOutstandingRequestWithMessageIdentifier:completionHandler:errorHandler:", v16, v20, v18, v32, v33, v34, v35);

LABEL_22:
        goto LABEL_23;
      }
      pk_Payment_log();
      v30 = objc_claimAutoreleasedReturnValue();
      v31 = os_log_type_enabled(v30, OS_LOG_TYPE_DEFAULT);

      if (v31)
      {
        pk_Payment_log();
        v17 = objc_claimAutoreleasedReturnValue();
        if (!os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
          goto LABEL_22;
        *(_DWORD *)buf = 138412290;
        v42 = v16;
        v27 = "Warning: No response expected for message with identifier %@";
        v28 = v17;
        v29 = OS_LOG_TYPE_DEFAULT;
        goto LABEL_21;
      }
    }
    else
    {
      pk_Payment_log();
      v25 = objc_claimAutoreleasedReturnValue();
      v26 = os_log_type_enabled(v25, OS_LOG_TYPE_ERROR);

      if (v26)
      {
        pk_Payment_log();
        v17 = objc_claimAutoreleasedReturnValue();
        if (!os_log_type_enabled(v17, OS_LOG_TYPE_ERROR))
          goto LABEL_22;
        *(_DWORD *)buf = 138412290;
        v42 = v13;
        v27 = "Error: No message identifier for protobuf %@";
        v28 = v17;
        v29 = OS_LOG_TYPE_ERROR;
LABEL_21:
        _os_log_impl(&dword_213518000, v28, v29, v27, buf, 0xCu);
        goto LABEL_22;
      }
    }
LABEL_23:

    goto LABEL_24;
  }
  pk_General_log();
  v21 = objc_claimAutoreleasedReturnValue();
  v22 = os_log_type_enabled(v21, OS_LOG_TYPE_ERROR);

  if (v22)
  {
    pk_General_log();
    v23 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v23, OS_LOG_TYPE_ERROR))
    {
      v24 = *(void **)(a1 + 32);
      *(_DWORD *)buf = 138412290;
      v42 = v24;
      _os_log_impl(&dword_213518000, v23, OS_LOG_TYPE_ERROR, "Error: Unable to fetch credential status without credentials (%@)", buf, 0xCu);
    }

  }
  if (*(_QWORD *)(a1 + 48))
  {
    PKDisplayableErrorForCommonType();
    v10 = (NPKProtoStatusForShareableCredentialsRequest *)objc_claimAutoreleasedReturnValue();
    (*(void (**)(void))(*(_QWORD *)(a1 + 48) + 16))();
LABEL_24:

  }
}

void __86__NPKPaymentWebServiceCompanionTargetDevice_statusForShareableCredentials_completion___block_invoke_801(uint64_t a1, void *a2)
{
  void *v3;
  void *v4;

  NPKSecureArchiveObject(a2);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  if (v3)
  {
    v4 = v3;
    objc_msgSend(*(id *)(a1 + 32), "addShareableCredentialsData:", v3);
    v3 = v4;
  }

}

void __86__NPKPaymentWebServiceCompanionTargetDevice_statusForShareableCredentials_completion___block_invoke_2(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  _BOOL4 v5;
  NSObject *v6;
  void *v7;
  int v8;
  id v9;
  uint64_t v10;

  v10 = *MEMORY[0x24BDAC8D0];
  v3 = a2;
  pk_Payment_log();
  v4 = objc_claimAutoreleasedReturnValue();
  v5 = os_log_type_enabled(v4, OS_LOG_TYPE_ERROR);

  if (v5)
  {
    pk_Payment_log();
    v6 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      v8 = 138412290;
      v9 = v3;
      _os_log_impl(&dword_213518000, v6, OS_LOG_TYPE_ERROR, "Error: Provisioning service outstanding request error handler invoked: %@", (uint8_t *)&v8, 0xCu);
    }

  }
  if (*(_QWORD *)(a1 + 32))
  {
    PKDisplayableErrorForCommonType();
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    (*(void (**)(void))(*(_QWORD *)(a1 + 32) + 16))();

  }
}

- (void)statusForShareableCredentialsResponse:(id)a3
{
  id v4;
  NSObject *v5;
  _BOOL4 v6;
  NSObject *v7;
  void *v8;
  void *v9;
  void *v10;
  NSObject *v11;
  NSObject *v12;
  _BOOL4 v13;
  NSObject *v14;
  uint64_t v15;
  uint8_t v16[8];
  _QWORD block[5];
  id v18;
  id v19;
  __int128 *p_buf;
  uint64_t *v21;
  uint64_t *v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t (*v27)(uint64_t, uint64_t);
  void (*v28)(uint64_t);
  id v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t (*v33)(uint64_t, uint64_t);
  void (*v34)(uint64_t);
  id v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  __int128 buf;
  uint64_t v41;
  uint64_t (*v42)(uint64_t, uint64_t);
  void (*v43)(uint64_t);
  id v44;
  uint64_t v45;

  v45 = *MEMORY[0x24BDAC8D0];
  v4 = a3;
  pk_Payment_log();
  v5 = objc_claimAutoreleasedReturnValue();
  v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    pk_Payment_log();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend(v4, "npkDescription");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      LODWORD(buf) = 138412290;
      *(_QWORD *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_213518000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Target statusForShareableCredentialsResponse: incoming protobuf %@", (uint8_t *)&buf, 0xCu);

    }
  }
  objc_msgSend(v4, "context");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "incomingResponseIdentifier");
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  *(_QWORD *)&buf = 0;
  *((_QWORD *)&buf + 1) = &buf;
  v41 = 0x3032000000;
  v42 = __Block_byref_object_copy__342;
  v43 = __Block_byref_object_dispose__343;
  v44 = 0;
  v36 = 0;
  v37 = &v36;
  v38 = 0x2020000000;
  v39 = 0;
  v30 = 0;
  v31 = &v30;
  v32 = 0x3032000000;
  v33 = __Block_byref_object_copy__23;
  v34 = __Block_byref_object_dispose__23;
  v35 = 0;
  v24 = 0;
  v25 = &v24;
  v26 = 0x3032000000;
  v27 = __Block_byref_object_copy__23;
  v28 = __Block_byref_object_dispose__23;
  v29 = 0;
  if (v10)
  {
    -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
    v11 = objc_claimAutoreleasedReturnValue();
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 3221225472;
    block[2] = __83__NPKPaymentWebServiceCompanionTargetDevice_statusForShareableCredentialsResponse___block_invoke;
    block[3] = &unk_24CFECFC0;
    block[4] = self;
    v18 = v10;
    v19 = v4;
    p_buf = &buf;
    v21 = &v36;
    v22 = &v30;
    v23 = &v24;
    dispatch_sync(v11, block);

  }
  else
  {
    pk_Payment_log();
    v12 = objc_claimAutoreleasedReturnValue();
    v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      pk_Payment_log();
      v14 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)v16 = 0;
        _os_log_impl(&dword_213518000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v16, 2u);
      }

    }
  }
  v15 = *(_QWORD *)(*((_QWORD *)&buf + 1) + 40);
  if (v15)
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 16))(v15, v37[3], v31[5], v25[5]);
  _Block_object_dispose(&v24, 8);

  _Block_object_dispose(&v30, 8);
  _Block_object_dispose(&v36, 8);
  _Block_object_dispose(&buf, 8);

}

void __83__NPKPaymentWebServiceCompanionTargetDevice_statusForShareableCredentialsResponse___block_invoke(uint64_t a1)
{
  void *v1;
  void *v3;
  void *v4;
  NPKProtoStatusForShareableCredentialsResponse *v5;
  void *v6;
  NPKProtoStatusForShareableCredentialsResponse *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  unsigned int v12;
  void *v13;
  void *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  _BOOL4 v19;
  NSObject *v20;
  void *v21;
  NSObject *v22;
  _BOOL4 v23;
  NSObject *v24;
  __int16 v25;
  _QWORD v26[4];
  id v27;

  objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "objectForKey:", *(_QWORD *)(a1 + 40));
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  if (v4)
  {
    v5 = [NPKProtoStatusForShareableCredentialsResponse alloc];
    objc_msgSend(*(id *)(a1 + 48), "data");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    v7 = -[NPKProtoStatusForShareableCredentialsResponse initWithData:](v5, "initWithData:", v6);

    objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "removeObjectForKey:", *(_QWORD *)(a1 + 40));

    objc_msgSend(v4, "completionHandler");
    v9 = objc_claimAutoreleasedReturnValue();
    v10 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
    v11 = *(void **)(v10 + 40);
    *(_QWORD *)(v10 + 40) = v9;

    v12 = -[NPKProtoStatusForShareableCredentialsResponse aggregateStatus](v7, "aggregateStatus");
    if (v12 <= 4)
      *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 24) = v12;
    v13 = (void *)objc_msgSend(objc_alloc(MEMORY[0x24BDBCEB8]), "initWithCapacity:", -[NPKProtoStatusForShareableCredentialsResponse updatedCredentialsDatasCount](v7, "updatedCredentialsDatasCount"));
    -[NPKProtoStatusForShareableCredentialsResponse updatedCredentialsDatas](v7, "updatedCredentialsDatas");
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    v26[0] = MEMORY[0x24BDAC760];
    v26[1] = 3221225472;
    v26[2] = __83__NPKPaymentWebServiceCompanionTargetDevice_statusForShareableCredentialsResponse___block_invoke_2;
    v26[3] = &unk_24CFED088;
    v15 = v13;
    v27 = v15;
    objc_msgSend(v14, "enumerateObjectsUsingBlock:", v26);

    v16 = objc_msgSend(v15, "copy");
    v17 = *(_QWORD *)(*(_QWORD *)(a1 + 72) + 8);
    v18 = *(void **)(v17 + 40);
    *(_QWORD *)(v17 + 40) = v16;

    v19 = -[NPKProtoStatusForShareableCredentialsResponse hasErrorData](v7, "hasErrorData");
    if (v19)
    {
      -[NPKProtoStatusForShareableCredentialsResponse errorData](v7, "errorData");
      v1 = (void *)objc_claimAutoreleasedReturnValue();
      v20 = objc_opt_class();
      NPKSecureUnarchiveObject(v1, v20);
      v21 = (void *)objc_claimAutoreleasedReturnValue();
    }
    else
    {
      v21 = 0;
    }
    objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 80) + 8) + 40), v21);
    if (v19)
    {

    }
  }
  else
  {
    pk_Payment_log();
    v22 = objc_claimAutoreleasedReturnValue();
    v23 = os_log_type_enabled(v22, OS_LOG_TYPE_DEFAULT);

    if (v23)
    {
      pk_Payment_log();
      v24 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v24, OS_LOG_TYPE_DEFAULT))
      {
        v25 = 0;
        _os_log_impl(&dword_213518000, v24, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", (uint8_t *)&v25, 2u);
      }

    }
  }

}

void __83__NPKPaymentWebServiceCompanionTargetDevice_statusForShareableCredentialsResponse___block_invoke_2(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  void *v5;
  id v6;

  v3 = a2;
  v4 = objc_opt_class();
  NPKSecureUnarchiveObject(v3, v4);
  v6 = (id)objc_claimAutoreleasedReturnValue();

  v5 = v6;
  if (v6)
  {
    objc_msgSend(*(id *)(a1 + 32), "addObject:", v6);
    v5 = v6;
  }

}

- (void)prepareProvisioningTarget:(id)a3 checkFamilyCircle:(BOOL)a4 completion:(id)a5
{
  id v8;
  id v9;
  NSObject *v10;
  NSObject *v11;
  _BOOL4 v12;
  NSObject *v13;
  void *v14;
  uint8_t v15[16];
  _QWORD block[4];
  id v17;
  NPKPaymentWebServiceCompanionTargetDevice *v18;
  id v19;
  BOOL v20;

  v8 = a3;
  v9 = a5;
  if (-[NPKPaymentWebServiceCompanionTargetDevice _isSharedInvitationProvisioningSupported](self, "_isSharedInvitationProvisioningSupported"))
  {
    -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
    v10 = objc_claimAutoreleasedReturnValue();
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 3221225472;
    block[2] = __100__NPKPaymentWebServiceCompanionTargetDevice_prepareProvisioningTarget_checkFamilyCircle_completion___block_invoke;
    block[3] = &unk_24CFEDC30;
    v17 = v8;
    v20 = a4;
    v18 = self;
    v19 = v9;
    dispatch_sync(v10, block);

  }
  else
  {
    pk_Payment_log();
    v11 = objc_claimAutoreleasedReturnValue();
    v12 = os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT);

    if (v12)
    {
      pk_Payment_log();
      v13 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)v15 = 0;
        _os_log_impl(&dword_213518000, v13, OS_LOG_TYPE_DEFAULT, "Notice: Target device does not support share invitation provisioning.", v15, 2u);
      }

    }
    if (v9)
    {
      PKDisplayableErrorForCommonType();
      v14 = (void *)objc_claimAutoreleasedReturnValue();
      (*((void (**)(id, _QWORD, _QWORD, void *))v9 + 2))(v9, 0, 0, v14);

    }
  }

}

void __100__NPKPaymentWebServiceCompanionTargetDevice_prepareProvisioningTarget_checkFamilyCircle_completion___block_invoke(uint64_t a1)
{
  NSObject *v2;
  _BOOL4 v3;
  NSObject *v4;
  void *v5;
  const __CFString *v6;
  void *v7;
  NPKProtoPrepareProvisioningTargetRequest *v8;
  void *v9;
  id v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  NSObject *v16;
  void *v17;
  void *v18;
  void *v19;
  NSObject *v20;
  _BOOL4 v21;
  NSObject *v22;
  void *v23;
  NSObject *v24;
  _BOOL4 v25;
  const char *v26;
  NSObject *v27;
  os_log_type_t v28;
  NSObject *v29;
  _BOOL4 v30;
  _QWORD v31[4];
  id v32;
  uint64_t v33;
  void *v34;
  uint8_t buf[4];
  void *v36;
  __int16 v37;
  const __CFString *v38;
  __int16 v39;
  void *v40;
  uint64_t v41;

  v41 = *MEMORY[0x24BDAC8D0];
  pk_General_log();
  v2 = objc_claimAutoreleasedReturnValue();
  v3 = os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT);

  if (v3)
  {
    pk_General_log();
    v4 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      v5 = *(void **)(a1 + 32);
      if (*(_BYTE *)(a1 + 56))
        v6 = CFSTR("YES");
      else
        v6 = CFSTR("NO");
      v7 = (void *)MEMORY[0x2199B6780](*(_QWORD *)(a1 + 48));
      *(_DWORD *)buf = 138412802;
      v36 = v5;
      v37 = 2112;
      v38 = v6;
      v39 = 2112;
      v40 = v7;
      _os_log_impl(&dword_213518000, v4, OS_LOG_TYPE_DEFAULT, "Notice: Target device - Request to prepare provisioning target: %@, checkingFamilyCircle: %@, completion: %@", buf, 0x20u);

    }
  }
  if (*(_QWORD *)(a1 + 32))
  {
    v8 = objc_alloc_init(NPKProtoPrepareProvisioningTargetRequest);
    NPKSecureArchiveObject(*(void **)(a1 + 32));
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    -[NPKProtoPrepareProvisioningTargetRequest setTargetData:](v8, "setTargetData:", v9);

    -[NPKProtoPrepareProvisioningTargetRequest setCheckFamilyCircle:](v8, "setCheckFamilyCircle:", *(unsigned __int8 *)(a1 + 56));
    v10 = objc_alloc(MEMORY[0x24BE4FE40]);
    -[NPKProtoPrepareProvisioningTargetRequest data](v8, "data");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    v12 = (void *)objc_msgSend(v10, "initWithProtobufData:type:isResponse:", v11, 118, 0);

    v13 = *(void **)(a1 + 40);
    v33 = *MEMORY[0x24BE4FB30];
    v34 = &unk_24D0566F0;
    objc_msgSend(MEMORY[0x24BDBCE70], "dictionaryWithObjects:forKeys:count:", &v34, &v33, 1);
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v13, "_sendProtobuf:responseExpected:extraOptions:", v12, 1, v14);
    v15 = (void *)objc_claimAutoreleasedReturnValue();

    if (v15)
    {
      if (*(_QWORD *)(a1 + 48))
      {
        v16 = MEMORY[0x2199B6780]();
        v31[0] = MEMORY[0x24BDAC760];
        v31[1] = 3221225472;
        v31[2] = __100__NPKPaymentWebServiceCompanionTargetDevice_prepareProvisioningTarget_checkFamilyCircle_completion___block_invoke_806;
        v31[3] = &unk_24CFE7B80;
        v32 = *(id *)(a1 + 48);
        v17 = (void *)MEMORY[0x2199B6780](v31);
        v18 = *(void **)(a1 + 40);
        v19 = (void *)MEMORY[0x2199B6780](v16);
        objc_msgSend(v18, "_trackOutstandingRequestWithMessageIdentifier:completionHandler:errorHandler:", v15, v19, v17);

LABEL_25:
        goto LABEL_26;
      }
      pk_Payment_log();
      v29 = objc_claimAutoreleasedReturnValue();
      v30 = os_log_type_enabled(v29, OS_LOG_TYPE_DEFAULT);

      if (v30)
      {
        pk_Payment_log();
        v16 = objc_claimAutoreleasedReturnValue();
        if (!os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
          goto LABEL_25;
        *(_DWORD *)buf = 138412290;
        v36 = v15;
        v26 = "Warning: No response expected for message with identifier %@";
        v27 = v16;
        v28 = OS_LOG_TYPE_DEFAULT;
        goto LABEL_24;
      }
    }
    else
    {
      pk_Payment_log();
      v24 = objc_claimAutoreleasedReturnValue();
      v25 = os_log_type_enabled(v24, OS_LOG_TYPE_ERROR);

      if (v25)
      {
        pk_Payment_log();
        v16 = objc_claimAutoreleasedReturnValue();
        if (!os_log_type_enabled(v16, OS_LOG_TYPE_ERROR))
          goto LABEL_25;
        *(_DWORD *)buf = 138412290;
        v36 = v12;
        v26 = "Error: No message identifier for protobuf %@";
        v27 = v16;
        v28 = OS_LOG_TYPE_ERROR;
LABEL_24:
        _os_log_impl(&dword_213518000, v27, v28, v26, buf, 0xCu);
        goto LABEL_25;
      }
    }
LABEL_26:

    goto LABEL_27;
  }
  pk_General_log();
  v20 = objc_claimAutoreleasedReturnValue();
  v21 = os_log_type_enabled(v20, OS_LOG_TYPE_ERROR);

  if (v21)
  {
    pk_General_log();
    v22 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR))
    {
      v23 = *(void **)(a1 + 32);
      *(_DWORD *)buf = 138412290;
      v36 = v23;
      _os_log_impl(&dword_213518000, v22, OS_LOG_TYPE_ERROR, "Error: Unable to prepare provisioning target without a provisioning target (%@)", buf, 0xCu);
    }

  }
  if (*(_QWORD *)(a1 + 48))
  {
    PKDisplayableErrorForCommonType();
    v8 = (NPKProtoPrepareProvisioningTargetRequest *)objc_claimAutoreleasedReturnValue();
    (*(void (**)(void))(*(_QWORD *)(a1 + 48) + 16))();
LABEL_27:

  }
}

void __100__NPKPaymentWebServiceCompanionTargetDevice_prepareProvisioningTarget_checkFamilyCircle_completion___block_invoke_806(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  _BOOL4 v5;
  NSObject *v6;
  void *v7;
  int v8;
  id v9;
  uint64_t v10;

  v10 = *MEMORY[0x24BDAC8D0];
  v3 = a2;
  pk_Payment_log();
  v4 = objc_claimAutoreleasedReturnValue();
  v5 = os_log_type_enabled(v4, OS_LOG_TYPE_ERROR);

  if (v5)
  {
    pk_Payment_log();
    v6 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      v8 = 138412290;
      v9 = v3;
      _os_log_impl(&dword_213518000, v6, OS_LOG_TYPE_ERROR, "Error: Provisioning service outstanding request error handler invoked: %@", (uint8_t *)&v8, 0xCu);
    }

  }
  if (*(_QWORD *)(a1 + 32))
  {
    PKDisplayableErrorForCommonType();
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    (*(void (**)(void))(*(_QWORD *)(a1 + 32) + 16))();

  }
}

- (void)prepareProvisioningTargetResponse:(id)a3
{
  id v4;
  NSObject *v5;
  _BOOL4 v6;
  NSObject *v7;
  void *v8;
  void *v9;
  void *v10;
  NSObject *v11;
  NSObject *v12;
  _BOOL4 v13;
  NSObject *v14;
  uint64_t v15;
  uint8_t v16[8];
  _QWORD block[5];
  id v18;
  id v19;
  __int128 *p_buf;
  uint64_t *v21;
  uint64_t *v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t (*v27)(uint64_t, uint64_t);
  void (*v28)(uint64_t);
  id v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t (*v37)(uint64_t, uint64_t);
  void (*v38)(uint64_t);
  id v39;
  __int128 buf;
  uint64_t v41;
  uint64_t (*v42)(uint64_t, uint64_t);
  void (*v43)(uint64_t);
  id v44;
  uint64_t v45;

  v45 = *MEMORY[0x24BDAC8D0];
  v4 = a3;
  pk_Payment_log();
  v5 = objc_claimAutoreleasedReturnValue();
  v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    pk_Payment_log();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend(v4, "npkDescription");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      LODWORD(buf) = 138412290;
      *(_QWORD *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_213518000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Target prepareProvisioningTargetResponse: incoming protobuf %@", (uint8_t *)&buf, 0xCu);

    }
  }
  objc_msgSend(v4, "context");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "incomingResponseIdentifier");
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  *(_QWORD *)&buf = 0;
  *((_QWORD *)&buf + 1) = &buf;
  v41 = 0x3032000000;
  v42 = __Block_byref_object_copy__342;
  v43 = __Block_byref_object_dispose__343;
  v44 = 0;
  v34 = 0;
  v35 = &v34;
  v36 = 0x3032000000;
  v37 = __Block_byref_object_copy__23;
  v38 = __Block_byref_object_dispose__23;
  v39 = 0;
  v30 = 0;
  v31 = &v30;
  v32 = 0x2020000000;
  v33 = 0;
  v24 = 0;
  v25 = &v24;
  v26 = 0x3032000000;
  v27 = __Block_byref_object_copy__23;
  v28 = __Block_byref_object_dispose__23;
  v29 = 0;
  if (v10)
  {
    -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
    v11 = objc_claimAutoreleasedReturnValue();
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 3221225472;
    block[2] = __79__NPKPaymentWebServiceCompanionTargetDevice_prepareProvisioningTargetResponse___block_invoke;
    block[3] = &unk_24CFECFC0;
    block[4] = self;
    v18 = v10;
    v19 = v4;
    p_buf = &buf;
    v21 = &v34;
    v22 = &v30;
    v23 = &v24;
    dispatch_sync(v11, block);

  }
  else
  {
    pk_Payment_log();
    v12 = objc_claimAutoreleasedReturnValue();
    v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      pk_Payment_log();
      v14 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)v16 = 0;
        _os_log_impl(&dword_213518000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v16, 2u);
      }

    }
  }
  v15 = *(_QWORD *)(*((_QWORD *)&buf + 1) + 40);
  if (v15)
    (*(void (**)(uint64_t, uint64_t, _QWORD, uint64_t))(v15 + 16))(v15, v35[5], *((unsigned __int8 *)v31 + 24), v25[5]);
  _Block_object_dispose(&v24, 8);

  _Block_object_dispose(&v30, 8);
  _Block_object_dispose(&v34, 8);

  _Block_object_dispose(&buf, 8);
}

void __79__NPKPaymentWebServiceCompanionTargetDevice_prepareProvisioningTargetResponse___block_invoke(uint64_t a1)
{
  void *v1;
  void *v3;
  void *v4;
  NPKProtoPrepareProvisioningTargetResponse *v5;
  void *v6;
  NPKProtoPrepareProvisioningTargetResponse *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  _BOOL4 v12;
  NSObject *v13;
  void *v14;
  NSObject *v15;
  _BOOL4 v16;
  NSObject *v17;
  _BOOL4 v18;
  NSObject *v19;
  void *v20;
  __int16 v21[8];

  objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "objectForKey:", *(_QWORD *)(a1 + 40));
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  if (v4)
  {
    v5 = [NPKProtoPrepareProvisioningTargetResponse alloc];
    objc_msgSend(*(id *)(a1 + 48), "data");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    v7 = -[NPKProtoPrepareProvisioningTargetResponse initWithData:](v5, "initWithData:", v6);

    objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "removeObjectForKey:", *(_QWORD *)(a1 + 40));

    objc_msgSend(v4, "completionHandler");
    v9 = objc_claimAutoreleasedReturnValue();
    v10 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
    v11 = *(void **)(v10 + 40);
    *(_QWORD *)(v10 + 40) = v9;

    v12 = -[NPKProtoPrepareProvisioningTargetResponse hasEncryptedTargetData](v7, "hasEncryptedTargetData");
    if (v12)
    {
      -[NPKProtoPrepareProvisioningTargetResponse encryptedTargetData](v7, "encryptedTargetData");
      v1 = (void *)objc_claimAutoreleasedReturnValue();
      v13 = objc_opt_class();
      NPKSecureUnarchiveObject(v1, v13);
      v14 = (void *)objc_claimAutoreleasedReturnValue();
    }
    else
    {
      v14 = 0;
    }
    objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 40), v14);
    if (v12)
    {

    }
    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 72) + 8) + 24) = -[NPKProtoPrepareProvisioningTargetResponse wasFamilyCircle](v7, "wasFamilyCircle");
    v18 = -[NPKProtoPrepareProvisioningTargetResponse hasErrorData](v7, "hasErrorData");
    if (v18)
    {
      -[NPKProtoPrepareProvisioningTargetResponse errorData](v7, "errorData");
      v1 = (void *)objc_claimAutoreleasedReturnValue();
      v19 = objc_opt_class();
      NPKSecureUnarchiveObject(v1, v19);
      v20 = (void *)objc_claimAutoreleasedReturnValue();
    }
    else
    {
      v20 = 0;
    }
    objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 80) + 8) + 40), v20);
    if (v18)
    {

    }
  }
  else
  {
    pk_Payment_log();
    v15 = objc_claimAutoreleasedReturnValue();
    v16 = os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT);

    if (v16)
    {
      pk_Payment_log();
      v17 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
      {
        v21[0] = 0;
        _os_log_impl(&dword_213518000, v17, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", (uint8_t *)v21, 2u);
      }

    }
  }

}

- (void)cacheSharingMessageFromMailboxAddress:(id)a3 message:(id)a4
{
  id v6;
  id v7;
  NSObject *v8;
  NSObject *v9;
  _BOOL4 v10;
  NSObject *v11;
  uint8_t v12[8];
  _QWORD block[4];
  id v14;
  id v15;
  NPKPaymentWebServiceCompanionTargetDevice *v16;

  v6 = a3;
  v7 = a4;
  if (-[NPKPaymentWebServiceCompanionTargetDevice _isSharedInvitationProvisioningSupported](self, "_isSharedInvitationProvisioningSupported"))
  {
    -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
    v8 = objc_claimAutoreleasedReturnValue();
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 3221225472;
    block[2] = __91__NPKPaymentWebServiceCompanionTargetDevice_cacheSharingMessageFromMailboxAddress_message___block_invoke;
    block[3] = &unk_24CFE8288;
    v14 = v6;
    v15 = v7;
    v16 = self;
    dispatch_sync(v8, block);

  }
  else
  {
    pk_Payment_log();
    v9 = objc_claimAutoreleasedReturnValue();
    v10 = os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT);

    if (v10)
    {
      pk_Payment_log();
      v11 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)v12 = 0;
        _os_log_impl(&dword_213518000, v11, OS_LOG_TYPE_DEFAULT, "Notice: Target device does not support share invitation provisioning.", v12, 2u);
      }

    }
  }

}

void __91__NPKPaymentWebServiceCompanionTargetDevice_cacheSharingMessageFromMailboxAddress_message___block_invoke(uint64_t a1)
{
  NSObject *v2;
  _BOOL4 v3;
  NSObject *v4;
  void *v5;
  uint64_t v6;
  NPKProtoCacheSharingMessageFromMailboxAddressRequest *v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  NSObject *v15;
  NSObject *v16;
  _BOOL4 v17;
  NSObject *v18;
  const char *v19;
  NSObject *v20;
  os_log_type_t v21;
  NSObject *v22;
  _BOOL4 v23;
  void *v24;
  uint64_t v25;
  _BOOL4 v26;
  uint64_t v27;
  void *v28;
  uint8_t buf[4];
  void *v30;
  __int16 v31;
  uint64_t v32;
  uint64_t v33;

  v33 = *MEMORY[0x24BDAC8D0];
  pk_General_log();
  v2 = objc_claimAutoreleasedReturnValue();
  v3 = os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT);

  if (v3)
  {
    pk_General_log();
    v4 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      v5 = *(void **)(a1 + 32);
      v6 = *(_QWORD *)(a1 + 40);
      *(_DWORD *)buf = 138478083;
      v30 = v5;
      v31 = 2113;
      v32 = v6;
      _os_log_impl(&dword_213518000, v4, OS_LOG_TYPE_DEFAULT, "Notice: Target device - Request to cache sharing message from mailbox address: %{private}@, message: %{private}@", buf, 0x16u);
    }

  }
  if (*(_QWORD *)(a1 + 32) && *(_QWORD *)(a1 + 40))
  {
    v7 = objc_alloc_init(NPKProtoCacheSharingMessageFromMailboxAddressRequest);
    -[NPKProtoCacheSharingMessageFromMailboxAddressRequest setMailboxAddress:](v7, "setMailboxAddress:", *(_QWORD *)(a1 + 32));
    NPKSecureArchiveObject(*(void **)(a1 + 40));
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    -[NPKProtoCacheSharingMessageFromMailboxAddressRequest setSharingMessageData:](v7, "setSharingMessageData:", v8);

    v9 = objc_alloc(MEMORY[0x24BE4FE40]);
    -[NPKProtoCacheSharingMessageFromMailboxAddressRequest data](v7, "data");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    v11 = (void *)objc_msgSend(v9, "initWithProtobufData:type:isResponse:", v10, 125, 0);

    v12 = *(void **)(a1 + 48);
    v27 = *MEMORY[0x24BE4FB30];
    v28 = &unk_24D0566F0;
    objc_msgSend(MEMORY[0x24BDBCE70], "dictionaryWithObjects:forKeys:count:", &v28, &v27, 1);
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v12, "_sendProtobuf:responseExpected:extraOptions:", v11, 0, v13);
    v14 = (void *)objc_claimAutoreleasedReturnValue();

    pk_Payment_log();
    v15 = objc_claimAutoreleasedReturnValue();
    v16 = v15;
    if (v14)
    {
      v17 = os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT);

      if (v17)
      {
        pk_Payment_log();
        v18 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)buf = 138412290;
          v30 = v14;
          v19 = "Warning: No response expected for message with identifier %@";
          v20 = v18;
          v21 = OS_LOG_TYPE_DEFAULT;
LABEL_17:
          _os_log_impl(&dword_213518000, v20, v21, v19, buf, 0xCu);
          goto LABEL_18;
        }
        goto LABEL_18;
      }
    }
    else
    {
      v26 = os_log_type_enabled(v15, OS_LOG_TYPE_ERROR);

      if (v26)
      {
        pk_Payment_log();
        v18 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR))
        {
          *(_DWORD *)buf = 138412290;
          v30 = v11;
          v19 = "Error: No message identifier for protobuf %@";
          v20 = v18;
          v21 = OS_LOG_TYPE_ERROR;
          goto LABEL_17;
        }
LABEL_18:

      }
    }

    goto LABEL_20;
  }
  pk_General_log();
  v22 = objc_claimAutoreleasedReturnValue();
  v23 = os_log_type_enabled(v22, OS_LOG_TYPE_ERROR);

  if (!v23)
    return;
  pk_General_log();
  v7 = (NPKProtoCacheSharingMessageFromMailboxAddressRequest *)objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(&v7->super.super.super, OS_LOG_TYPE_ERROR))
  {
    v25 = *(_QWORD *)(a1 + 32);
    v24 = *(void **)(a1 + 40);
    *(_DWORD *)buf = 138478083;
    v30 = v24;
    v31 = 2113;
    v32 = v25;
    _os_log_impl(&dword_213518000, &v7->super.super.super, OS_LOG_TYPE_ERROR, "Error: Unable to cache sharing message (%{private}@) for mailbox address (%{private}@)", buf, 0x16u);
  }
LABEL_20:

}

- (void)updateShareForPassIdentifier:(id)a3 share:(id)a4 authorization:(id)a5 completion:(id)a6
{
  id v10;
  id v11;
  id v12;
  id v13;
  NSObject *v14;
  NSObject *v15;
  _BOOL4 v16;
  NSObject *v17;
  void *v18;
  uint8_t v19[8];
  _QWORD block[4];
  id v21;
  id v22;
  id v23;
  NPKPaymentWebServiceCompanionTargetDevice *v24;
  id v25;

  v10 = a3;
  v11 = a4;
  v12 = a5;
  v13 = a6;
  if (-[NPKPaymentWebServiceCompanionTargetDevice _isSharedInvitationProvisioningSupported](self, "_isSharedInvitationProvisioningSupported"))
  {
    -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
    v14 = objc_claimAutoreleasedReturnValue();
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 3221225472;
    block[2] = __105__NPKPaymentWebServiceCompanionTargetDevice_updateShareForPassIdentifier_share_authorization_completion___block_invoke;
    block[3] = &unk_24CFEDBB8;
    v21 = v10;
    v22 = v11;
    v23 = v12;
    v24 = self;
    v25 = v13;
    dispatch_sync(v14, block);

  }
  else
  {
    pk_Payment_log();
    v15 = objc_claimAutoreleasedReturnValue();
    v16 = os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT);

    if (v16)
    {
      pk_Payment_log();
      v17 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)v19 = 0;
        _os_log_impl(&dword_213518000, v17, OS_LOG_TYPE_DEFAULT, "Notice: Target device does not support share invitation provisioning.", v19, 2u);
      }

    }
    if (v13)
    {
      PKDisplayableErrorForCommonType();
      v18 = (void *)objc_claimAutoreleasedReturnValue();
      (*((void (**)(id, _QWORD, void *))v13 + 2))(v13, 0, v18);

    }
  }

}

void __105__NPKPaymentWebServiceCompanionTargetDevice_updateShareForPassIdentifier_share_authorization_completion___block_invoke(uint64_t a1)
{
  NSObject *v2;
  _BOOL4 v3;
  NSObject *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  NPKProtoUpdateShareForPassIdentifierRequest *v9;
  void *v10;
  id v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  NSObject *v17;
  void *v18;
  void *v19;
  void *v20;
  NSObject *v21;
  _BOOL4 v22;
  NSObject *v23;
  void *v24;
  uint64_t v25;
  NSObject *v26;
  _BOOL4 v27;
  const char *v28;
  NSObject *v29;
  os_log_type_t v30;
  NSObject *v31;
  _BOOL4 v32;
  _QWORD v33[4];
  id v34;
  uint64_t v35;
  void *v36;
  uint8_t buf[4];
  void *v38;
  __int16 v39;
  uint64_t v40;
  __int16 v41;
  uint64_t v42;
  __int16 v43;
  void *v44;
  uint64_t v45;

  v45 = *MEMORY[0x24BDAC8D0];
  pk_General_log();
  v2 = objc_claimAutoreleasedReturnValue();
  v3 = os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT);

  if (v3)
  {
    pk_General_log();
    v4 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      v5 = *(void **)(a1 + 32);
      v6 = *(_QWORD *)(a1 + 40);
      v7 = *(_QWORD *)(a1 + 48);
      v8 = (void *)MEMORY[0x2199B6780](*(_QWORD *)(a1 + 64));
      *(_DWORD *)buf = 138413058;
      v38 = v5;
      v39 = 2112;
      v40 = v6;
      v41 = 2112;
      v42 = v7;
      v43 = 2112;
      v44 = v8;
      _os_log_impl(&dword_213518000, v4, OS_LOG_TYPE_DEFAULT, "Notice: Target device - Request to update share for pass identifier: %@, share: %@, authorization: %@, completion: %@", buf, 0x2Au);

    }
  }
  if (*(_QWORD *)(a1 + 32) && *(_QWORD *)(a1 + 40))
  {
    v9 = objc_alloc_init(NPKProtoUpdateShareForPassIdentifierRequest);
    -[NPKProtoUpdateShareForPassIdentifierRequest setPassIdentifier:](v9, "setPassIdentifier:", *(_QWORD *)(a1 + 32));
    NPKSecureArchiveObject(*(void **)(a1 + 40));
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    -[NPKProtoUpdateShareForPassIdentifierRequest setShareData:](v9, "setShareData:", v10);

    -[NPKProtoUpdateShareForPassIdentifierRequest setAuthorization:](v9, "setAuthorization:", *(_QWORD *)(a1 + 48));
    v11 = objc_alloc(MEMORY[0x24BE4FE40]);
    -[NPKProtoUpdateShareForPassIdentifierRequest data](v9, "data");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    v13 = (void *)objc_msgSend(v11, "initWithProtobufData:type:isResponse:", v12, 124, 0);

    v14 = *(void **)(a1 + 56);
    v35 = *MEMORY[0x24BE4FB30];
    v36 = &unk_24D0566F0;
    objc_msgSend(MEMORY[0x24BDBCE70], "dictionaryWithObjects:forKeys:count:", &v36, &v35, 1);
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v14, "_sendProtobuf:responseExpected:extraOptions:", v13, 1, v15);
    v16 = (void *)objc_claimAutoreleasedReturnValue();

    if (v16)
    {
      if (*(_QWORD *)(a1 + 64))
      {
        v17 = MEMORY[0x2199B6780]();
        v33[0] = MEMORY[0x24BDAC760];
        v33[1] = 3221225472;
        v33[2] = __105__NPKPaymentWebServiceCompanionTargetDevice_updateShareForPassIdentifier_share_authorization_completion___block_invoke_811;
        v33[3] = &unk_24CFE7B80;
        v34 = *(id *)(a1 + 64);
        v18 = (void *)MEMORY[0x2199B6780](v33);
        v19 = *(void **)(a1 + 56);
        v20 = (void *)MEMORY[0x2199B6780](v17);
        objc_msgSend(v19, "_trackOutstandingRequestWithMessageIdentifier:completionHandler:errorHandler:", v16, v20, v18);

LABEL_23:
        goto LABEL_24;
      }
      pk_Payment_log();
      v31 = objc_claimAutoreleasedReturnValue();
      v32 = os_log_type_enabled(v31, OS_LOG_TYPE_DEFAULT);

      if (v32)
      {
        pk_Payment_log();
        v17 = objc_claimAutoreleasedReturnValue();
        if (!os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
          goto LABEL_23;
        *(_DWORD *)buf = 138412290;
        v38 = v16;
        v28 = "Warning: No response expected for message with identifier %@";
        v29 = v17;
        v30 = OS_LOG_TYPE_DEFAULT;
        goto LABEL_22;
      }
    }
    else
    {
      pk_Payment_log();
      v26 = objc_claimAutoreleasedReturnValue();
      v27 = os_log_type_enabled(v26, OS_LOG_TYPE_ERROR);

      if (v27)
      {
        pk_Payment_log();
        v17 = objc_claimAutoreleasedReturnValue();
        if (!os_log_type_enabled(v17, OS_LOG_TYPE_ERROR))
          goto LABEL_23;
        *(_DWORD *)buf = 138412290;
        v38 = v13;
        v28 = "Error: No message identifier for protobuf %@";
        v29 = v17;
        v30 = OS_LOG_TYPE_ERROR;
LABEL_22:
        _os_log_impl(&dword_213518000, v29, v30, v28, buf, 0xCu);
        goto LABEL_23;
      }
    }
LABEL_24:

    goto LABEL_25;
  }
  pk_General_log();
  v21 = objc_claimAutoreleasedReturnValue();
  v22 = os_log_type_enabled(v21, OS_LOG_TYPE_ERROR);

  if (v22)
  {
    pk_General_log();
    v23 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v23, OS_LOG_TYPE_ERROR))
    {
      v25 = *(_QWORD *)(a1 + 32);
      v24 = *(void **)(a1 + 40);
      *(_DWORD *)buf = 138412546;
      v38 = v24;
      v39 = 2112;
      v40 = v25;
      _os_log_impl(&dword_213518000, v23, OS_LOG_TYPE_ERROR, "Error: Unable to update share (%@) for pass identifier %@", buf, 0x16u);
    }

  }
  if (*(_QWORD *)(a1 + 64))
  {
    PKDisplayableErrorForCommonType();
    v9 = (NPKProtoUpdateShareForPassIdentifierRequest *)objc_claimAutoreleasedReturnValue();
    (*(void (**)(void))(*(_QWORD *)(a1 + 64) + 16))();
LABEL_25:

  }
}

void __105__NPKPaymentWebServiceCompanionTargetDevice_updateShareForPassIdentifier_share_authorization_completion___block_invoke_811(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  _BOOL4 v5;
  NSObject *v6;
  void *v7;
  int v8;
  id v9;
  uint64_t v10;

  v10 = *MEMORY[0x24BDAC8D0];
  v3 = a2;
  pk_Payment_log();
  v4 = objc_claimAutoreleasedReturnValue();
  v5 = os_log_type_enabled(v4, OS_LOG_TYPE_ERROR);

  if (v5)
  {
    pk_Payment_log();
    v6 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      v8 = 138412290;
      v9 = v3;
      _os_log_impl(&dword_213518000, v6, OS_LOG_TYPE_ERROR, "Error: Provisioning service outstanding request error handler invoked: %@", (uint8_t *)&v8, 0xCu);
    }

  }
  if (*(_QWORD *)(a1 + 32))
  {
    PKDisplayableErrorForCommonType();
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    (*(void (**)(void))(*(_QWORD *)(a1 + 32) + 16))();

  }
}

- (void)updateShareForPassIdentifierResponse:(id)a3
{
  id v4;
  NSObject *v5;
  _BOOL4 v6;
  NSObject *v7;
  void *v8;
  void *v9;
  void *v10;
  NSObject *v11;
  NSObject *v12;
  _BOOL4 v13;
  NSObject *v14;
  uint64_t v15;
  uint8_t v16[16];
  _QWORD block[5];
  id v18;
  id v19;
  __int128 *p_buf;
  uint64_t *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t (*v26)(uint64_t, uint64_t);
  void (*v27)(uint64_t);
  id v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  char v32;
  __int128 buf;
  uint64_t v34;
  uint64_t (*v35)(uint64_t, uint64_t);
  void (*v36)(uint64_t);
  id v37;
  uint64_t v38;

  v38 = *MEMORY[0x24BDAC8D0];
  v4 = a3;
  pk_Payment_log();
  v5 = objc_claimAutoreleasedReturnValue();
  v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    pk_Payment_log();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend(v4, "npkDescription");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      LODWORD(buf) = 138412290;
      *(_QWORD *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_213518000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Target updateShareForPassIdentifierResponse: incoming protobuf %@", (uint8_t *)&buf, 0xCu);

    }
  }
  objc_msgSend(v4, "context");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "incomingResponseIdentifier");
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  *(_QWORD *)&buf = 0;
  *((_QWORD *)&buf + 1) = &buf;
  v34 = 0x3032000000;
  v35 = __Block_byref_object_copy__342;
  v36 = __Block_byref_object_dispose__343;
  v37 = 0;
  v29 = 0;
  v30 = &v29;
  v31 = 0x2020000000;
  v32 = 0;
  v23 = 0;
  v24 = &v23;
  v25 = 0x3032000000;
  v26 = __Block_byref_object_copy__23;
  v27 = __Block_byref_object_dispose__23;
  v28 = 0;
  if (v10)
  {
    -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
    v11 = objc_claimAutoreleasedReturnValue();
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 3221225472;
    block[2] = __82__NPKPaymentWebServiceCompanionTargetDevice_updateShareForPassIdentifierResponse___block_invoke;
    block[3] = &unk_24CFED060;
    block[4] = self;
    v18 = v10;
    v19 = v4;
    p_buf = &buf;
    v21 = &v29;
    v22 = &v23;
    dispatch_sync(v11, block);

  }
  else
  {
    pk_Payment_log();
    v12 = objc_claimAutoreleasedReturnValue();
    v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      pk_Payment_log();
      v14 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)v16 = 0;
        _os_log_impl(&dword_213518000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v16, 2u);
      }

    }
  }
  v15 = *(_QWORD *)(*((_QWORD *)&buf + 1) + 40);
  if (v15)
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v15 + 16))(v15, *((unsigned __int8 *)v30 + 24), v24[5]);
  _Block_object_dispose(&v23, 8);

  _Block_object_dispose(&v29, 8);
  _Block_object_dispose(&buf, 8);

}

void __82__NPKPaymentWebServiceCompanionTargetDevice_updateShareForPassIdentifierResponse___block_invoke(uint64_t a1)
{
  void *v1;
  void *v3;
  void *v4;
  NPKProtoUpdateShareForPassIdentifierResponse *v5;
  void *v6;
  NPKProtoUpdateShareForPassIdentifierResponse *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  _BOOL4 v12;
  NSObject *v13;
  void *v14;
  NSObject *v15;
  _BOOL4 v16;
  NSObject *v17;
  __int16 v18[8];

  objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "objectForKey:", *(_QWORD *)(a1 + 40));
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  if (v4)
  {
    v5 = [NPKProtoUpdateShareForPassIdentifierResponse alloc];
    objc_msgSend(*(id *)(a1 + 48), "data");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    v7 = -[NPKProtoUpdateShareForPassIdentifierResponse initWithData:](v5, "initWithData:", v6);

    objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "removeObjectForKey:", *(_QWORD *)(a1 + 40));

    objc_msgSend(v4, "completionHandler");
    v9 = objc_claimAutoreleasedReturnValue();
    v10 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
    v11 = *(void **)(v10 + 40);
    *(_QWORD *)(v10 + 40) = v9;

    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 24) = -[NPKProtoUpdateShareForPassIdentifierResponse success](v7, "success");
    v12 = -[NPKProtoUpdateShareForPassIdentifierResponse hasErrorData](v7, "hasErrorData");
    if (v12)
    {
      -[NPKProtoUpdateShareForPassIdentifierResponse errorData](v7, "errorData");
      v1 = (void *)objc_claimAutoreleasedReturnValue();
      v13 = objc_opt_class();
      NPKSecureUnarchiveObject(v1, v13);
      v14 = (void *)objc_claimAutoreleasedReturnValue();
    }
    else
    {
      v14 = 0;
    }
    objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 72) + 8) + 40), v14);
    if (v12)
    {

    }
  }
  else
  {
    pk_Payment_log();
    v15 = objc_claimAutoreleasedReturnValue();
    v16 = os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT);

    if (v16)
    {
      pk_Payment_log();
      v17 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
      {
        v18[0] = 0;
        _os_log_impl(&dword_213518000, v17, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", (uint8_t *)v18, 2u);
      }

    }
  }

}

- (void)acceptCarKeyShareForMessage:(id)a3 activationCode:(id)a4 completion:(id)a5
{
  id v8;
  id v9;
  id v10;
  NSObject *v11;
  NSObject *v12;
  _BOOL4 v13;
  NSObject *v14;
  void *v15;
  uint8_t v16[16];
  _QWORD block[4];
  id v18;
  id v19;
  NPKPaymentWebServiceCompanionTargetDevice *v20;
  id v21;

  v8 = a3;
  v9 = a4;
  v10 = a5;
  if (-[NPKPaymentWebServiceCompanionTargetDevice _isSharedInvitationProvisioningSupported](self, "_isSharedInvitationProvisioningSupported"))
  {
    -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
    v11 = objc_claimAutoreleasedReturnValue();
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 3221225472;
    block[2] = __99__NPKPaymentWebServiceCompanionTargetDevice_acceptCarKeyShareForMessage_activationCode_completion___block_invoke;
    block[3] = &unk_24CFE8740;
    v18 = v8;
    v19 = v9;
    v20 = self;
    v21 = v10;
    dispatch_sync(v11, block);

  }
  else
  {
    pk_Payment_log();
    v12 = objc_claimAutoreleasedReturnValue();
    v13 = os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT);

    if (v13)
    {
      pk_Payment_log();
      v14 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)v16 = 0;
        _os_log_impl(&dword_213518000, v14, OS_LOG_TYPE_DEFAULT, "Notice: Target device does not support share invitation provisioning.", v16, 2u);
      }

    }
    if (v10)
    {
      PKDisplayableErrorForCommonType();
      v15 = (void *)objc_claimAutoreleasedReturnValue();
      (*((void (**)(id, _QWORD, void *))v10 + 2))(v10, 0, v15);

    }
  }

}

void __99__NPKPaymentWebServiceCompanionTargetDevice_acceptCarKeyShareForMessage_activationCode_completion___block_invoke(uint64_t a1)
{
  NSObject *v2;
  _BOOL4 v3;
  NSObject *v4;
  void *v5;
  uint64_t v6;
  void *v7;
  NPKProtoAcceptCarKeyShareForMessageWithActivationCodeRequest *v8;
  void *v9;
  id v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  NSObject *v16;
  void *v17;
  void *v18;
  void *v19;
  NSObject *v20;
  _BOOL4 v21;
  NSObject *v22;
  void *v23;
  NSObject *v24;
  _BOOL4 v25;
  const char *v26;
  NSObject *v27;
  os_log_type_t v28;
  NSObject *v29;
  _BOOL4 v30;
  _QWORD v31[4];
  id v32;
  uint64_t v33;
  void *v34;
  uint8_t buf[4];
  void *v36;
  __int16 v37;
  uint64_t v38;
  __int16 v39;
  void *v40;
  uint64_t v41;

  v41 = *MEMORY[0x24BDAC8D0];
  pk_General_log();
  v2 = objc_claimAutoreleasedReturnValue();
  v3 = os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT);

  if (v3)
  {
    pk_General_log();
    v4 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      v5 = *(void **)(a1 + 32);
      v6 = *(_QWORD *)(a1 + 40);
      v7 = (void *)MEMORY[0x2199B6780](*(_QWORD *)(a1 + 56));
      *(_DWORD *)buf = 138478339;
      v36 = v5;
      v37 = 2113;
      v38 = v6;
      v39 = 2112;
      v40 = v7;
      _os_log_impl(&dword_213518000, v4, OS_LOG_TYPE_DEFAULT, "Notice: Target device - Request to accept car key share for message: %{private}@, activation code: %{private}@, completion: %@", buf, 0x20u);

    }
  }
  if (*(_QWORD *)(a1 + 32))
  {
    v8 = objc_alloc_init(NPKProtoAcceptCarKeyShareForMessageWithActivationCodeRequest);
    NPKSecureArchiveObject(*(void **)(a1 + 32));
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    -[NPKProtoAcceptCarKeyShareForMessageWithActivationCodeRequest setSharingMessageData:](v8, "setSharingMessageData:", v9);

    -[NPKProtoAcceptCarKeyShareForMessageWithActivationCodeRequest setActivationCode:](v8, "setActivationCode:", *(_QWORD *)(a1 + 40));
    v10 = objc_alloc(MEMORY[0x24BE4FE40]);
    -[NPKProtoAcceptCarKeyShareForMessageWithActivationCodeRequest data](v8, "data");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    v12 = (void *)objc_msgSend(v10, "initWithProtobufData:type:isResponse:", v11, 121, 0);

    v13 = *(void **)(a1 + 48);
    v33 = *MEMORY[0x24BE4FB30];
    v34 = &unk_24D0566F0;
    objc_msgSend(MEMORY[0x24BDBCE70], "dictionaryWithObjects:forKeys:count:", &v34, &v33, 1);
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v13, "_sendProtobuf:responseExpected:extraOptions:", v12, 1, v14);
    v15 = (void *)objc_claimAutoreleasedReturnValue();

    if (v15)
    {
      if (*(_QWORD *)(a1 + 56))
      {
        v16 = MEMORY[0x2199B6780]();
        v31[0] = MEMORY[0x24BDAC760];
        v31[1] = 3221225472;
        v31[2] = __99__NPKPaymentWebServiceCompanionTargetDevice_acceptCarKeyShareForMessage_activationCode_completion___block_invoke_814;
        v31[3] = &unk_24CFE7B80;
        v32 = *(id *)(a1 + 56);
        v17 = (void *)MEMORY[0x2199B6780](v31);
        v18 = *(void **)(a1 + 48);
        v19 = (void *)MEMORY[0x2199B6780](v16);
        objc_msgSend(v18, "_trackOutstandingRequestWithMessageIdentifier:completionHandler:errorHandler:", v15, v19, v17);

LABEL_22:
        goto LABEL_23;
      }
      pk_Payment_log();
      v29 = objc_claimAutoreleasedReturnValue();
      v30 = os_log_type_enabled(v29, OS_LOG_TYPE_DEFAULT);

      if (v30)
      {
        pk_Payment_log();
        v16 = objc_claimAutoreleasedReturnValue();
        if (!os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
          goto LABEL_22;
        *(_DWORD *)buf = 138412290;
        v36 = v15;
        v26 = "Warning: No response expected for message with identifier %@";
        v27 = v16;
        v28 = OS_LOG_TYPE_DEFAULT;
        goto LABEL_21;
      }
    }
    else
    {
      pk_Payment_log();
      v24 = objc_claimAutoreleasedReturnValue();
      v25 = os_log_type_enabled(v24, OS_LOG_TYPE_ERROR);

      if (v25)
      {
        pk_Payment_log();
        v16 = objc_claimAutoreleasedReturnValue();
        if (!os_log_type_enabled(v16, OS_LOG_TYPE_ERROR))
          goto LABEL_22;
        *(_DWORD *)buf = 138412290;
        v36 = v12;
        v26 = "Error: No message identifier for protobuf %@";
        v27 = v16;
        v28 = OS_LOG_TYPE_ERROR;
LABEL_21:
        _os_log_impl(&dword_213518000, v27, v28, v26, buf, 0xCu);
        goto LABEL_22;
      }
    }
LABEL_23:

    goto LABEL_24;
  }
  pk_General_log();
  v20 = objc_claimAutoreleasedReturnValue();
  v21 = os_log_type_enabled(v20, OS_LOG_TYPE_ERROR);

  if (v21)
  {
    pk_General_log();
    v22 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR))
    {
      v23 = *(void **)(a1 + 32);
      *(_DWORD *)buf = 138412290;
      v36 = v23;
      _os_log_impl(&dword_213518000, v22, OS_LOG_TYPE_ERROR, "Error: Unable to accept car key share with nil message (%@)", buf, 0xCu);
    }

  }
  if (*(_QWORD *)(a1 + 56))
  {
    PKDisplayableErrorForCommonType();
    v8 = (NPKProtoAcceptCarKeyShareForMessageWithActivationCodeRequest *)objc_claimAutoreleasedReturnValue();
    (*(void (**)(void))(*(_QWORD *)(a1 + 56) + 16))();
LABEL_24:

  }
}

void __99__NPKPaymentWebServiceCompanionTargetDevice_acceptCarKeyShareForMessage_activationCode_completion___block_invoke_814(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  _BOOL4 v5;
  NSObject *v6;
  void *v7;
  int v8;
  id v9;
  uint64_t v10;

  v10 = *MEMORY[0x24BDAC8D0];
  v3 = a2;
  pk_Payment_log();
  v4 = objc_claimAutoreleasedReturnValue();
  v5 = os_log_type_enabled(v4, OS_LOG_TYPE_ERROR);

  if (v5)
  {
    pk_Payment_log();
    v6 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      v8 = 138412290;
      v9 = v3;
      _os_log_impl(&dword_213518000, v6, OS_LOG_TYPE_ERROR, "Error: Provisioning service outstanding request error handler invoked: %@", (uint8_t *)&v8, 0xCu);
    }

  }
  if (*(_QWORD *)(a1 + 32))
  {
    PKDisplayableErrorForCommonType();
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    (*(void (**)(void))(*(_QWORD *)(a1 + 32) + 16))();

  }
}

- (void)acceptCarKeyShareForMessageResponse:(id)a3
{
  id v4;
  NSObject *v5;
  _BOOL4 v6;
  NSObject *v7;
  void *v8;
  void *v9;
  void *v10;
  NSObject *v11;
  NSObject *v12;
  _BOOL4 v13;
  NSObject *v14;
  uint64_t v15;
  uint8_t v16[16];
  _QWORD block[5];
  id v18;
  id v19;
  __int128 *p_buf;
  uint64_t *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t (*v26)(uint64_t, uint64_t);
  void (*v27)(uint64_t);
  id v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t (*v32)(uint64_t, uint64_t);
  void (*v33)(uint64_t);
  id v34;
  __int128 buf;
  uint64_t v36;
  uint64_t (*v37)(uint64_t, uint64_t);
  void (*v38)(uint64_t);
  id v39;
  uint64_t v40;

  v40 = *MEMORY[0x24BDAC8D0];
  v4 = a3;
  pk_Payment_log();
  v5 = objc_claimAutoreleasedReturnValue();
  v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    pk_Payment_log();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend(v4, "npkDescription");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      LODWORD(buf) = 138412290;
      *(_QWORD *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_213518000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Target acceptCarKeyShareForMessageResponse: incoming protobuf %@", (uint8_t *)&buf, 0xCu);

    }
  }
  objc_msgSend(v4, "context");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "incomingResponseIdentifier");
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  *(_QWORD *)&buf = 0;
  *((_QWORD *)&buf + 1) = &buf;
  v36 = 0x3032000000;
  v37 = __Block_byref_object_copy__342;
  v38 = __Block_byref_object_dispose__343;
  v39 = 0;
  v29 = 0;
  v30 = &v29;
  v31 = 0x3032000000;
  v32 = __Block_byref_object_copy__23;
  v33 = __Block_byref_object_dispose__23;
  v34 = 0;
  v23 = 0;
  v24 = &v23;
  v25 = 0x3032000000;
  v26 = __Block_byref_object_copy__23;
  v27 = __Block_byref_object_dispose__23;
  v28 = 0;
  if (v10)
  {
    -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
    v11 = objc_claimAutoreleasedReturnValue();
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 3221225472;
    block[2] = __81__NPKPaymentWebServiceCompanionTargetDevice_acceptCarKeyShareForMessageResponse___block_invoke;
    block[3] = &unk_24CFED060;
    block[4] = self;
    v18 = v10;
    v19 = v4;
    p_buf = &buf;
    v21 = &v29;
    v22 = &v23;
    dispatch_sync(v11, block);

  }
  else
  {
    pk_Payment_log();
    v12 = objc_claimAutoreleasedReturnValue();
    v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      pk_Payment_log();
      v14 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)v16 = 0;
        _os_log_impl(&dword_213518000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v16, 2u);
      }

    }
  }
  v15 = *(_QWORD *)(*((_QWORD *)&buf + 1) + 40);
  if (v15)
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v15, v30[5], v24[5]);
  _Block_object_dispose(&v23, 8);

  _Block_object_dispose(&v29, 8);
  _Block_object_dispose(&buf, 8);

}

void __81__NPKPaymentWebServiceCompanionTargetDevice_acceptCarKeyShareForMessageResponse___block_invoke(uint64_t a1)
{
  void *v1;
  void *v3;
  void *v4;
  NPKProtoAcceptCarKeyShareForMessageWithActivationCodeResponse *v5;
  void *v6;
  NPKProtoAcceptCarKeyShareForMessageWithActivationCodeResponse *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  _BOOL4 v12;
  NSObject *v13;
  void *v14;
  NSObject *v15;
  _BOOL4 v16;
  NSObject *v17;
  _BOOL4 v18;
  NSObject *v19;
  void *v20;
  __int16 v21[8];

  objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "objectForKey:", *(_QWORD *)(a1 + 40));
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  if (v4)
  {
    v5 = [NPKProtoAcceptCarKeyShareForMessageWithActivationCodeResponse alloc];
    objc_msgSend(*(id *)(a1 + 48), "data");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    v7 = -[NPKProtoAcceptCarKeyShareForMessageWithActivationCodeResponse initWithData:](v5, "initWithData:", v6);

    objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "removeObjectForKey:", *(_QWORD *)(a1 + 40));

    objc_msgSend(v4, "completionHandler");
    v9 = objc_claimAutoreleasedReturnValue();
    v10 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
    v11 = *(void **)(v10 + 40);
    *(_QWORD *)(v10 + 40) = v9;

    v12 = -[NPKProtoAcceptCarKeyShareForMessageWithActivationCodeResponse hasCarShareAcceptanceResponseData](v7, "hasCarShareAcceptanceResponseData");
    if (v12)
    {
      -[NPKProtoAcceptCarKeyShareForMessageWithActivationCodeResponse carShareAcceptanceResponseData](v7, "carShareAcceptanceResponseData");
      v1 = (void *)objc_claimAutoreleasedReturnValue();
      v13 = objc_opt_class();
      NPKSecureUnarchiveObject(v1, v13);
      v14 = (void *)objc_claimAutoreleasedReturnValue();
    }
    else
    {
      v14 = 0;
    }
    objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 40), v14);
    if (v12)
    {

    }
    v18 = -[NPKProtoAcceptCarKeyShareForMessageWithActivationCodeResponse hasErrorData](v7, "hasErrorData");
    if (v18)
    {
      -[NPKProtoAcceptCarKeyShareForMessageWithActivationCodeResponse errorData](v7, "errorData");
      v1 = (void *)objc_claimAutoreleasedReturnValue();
      v19 = objc_opt_class();
      NPKSecureUnarchiveObject(v1, v19);
      v20 = (void *)objc_claimAutoreleasedReturnValue();
    }
    else
    {
      v20 = 0;
    }
    objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 72) + 8) + 40), v20);
    if (v18)
    {

    }
  }
  else
  {
    pk_Payment_log();
    v15 = objc_claimAutoreleasedReturnValue();
    v16 = os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT);

    if (v16)
    {
      pk_Payment_log();
      v17 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
      {
        v21[0] = 0;
        _os_log_impl(&dword_213518000, v17, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", (uint8_t *)v21, 2u);
      }

    }
  }

}

- (void)carKeyStartShareAcceptanceFlow:(id)a3 transportIdentifier:(id)a4 completion:(id)a5
{
  id v8;
  id v9;
  id v10;
  NSObject *v11;
  NSObject *v12;
  _BOOL4 v13;
  NSObject *v14;
  void *v15;
  uint8_t v16[16];
  _QWORD block[4];
  id v18;
  id v19;
  NPKPaymentWebServiceCompanionTargetDevice *v20;
  id v21;

  v8 = a3;
  v9 = a4;
  v10 = a5;
  if (-[NPKPaymentWebServiceCompanionTargetDevice _isSharingInAChainSupported](self, "_isSharingInAChainSupported"))
  {
    -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
    v11 = objc_claimAutoreleasedReturnValue();
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 3221225472;
    block[2] = __107__NPKPaymentWebServiceCompanionTargetDevice_carKeyStartShareAcceptanceFlow_transportIdentifier_completion___block_invoke;
    block[3] = &unk_24CFE8740;
    v18 = v8;
    v19 = v9;
    v20 = self;
    v21 = v10;
    dispatch_sync(v11, block);

  }
  else
  {
    pk_Payment_log();
    v12 = objc_claimAutoreleasedReturnValue();
    v13 = os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT);

    if (v13)
    {
      pk_Payment_log();
      v14 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)v16 = 0;
        _os_log_impl(&dword_213518000, v14, OS_LOG_TYPE_DEFAULT, "Notice: Target device does not support carKeyStartShareAcceptanceFlow:transportIdentifier:completion: message.", v16, 2u);
      }

    }
    if (v10)
    {
      objc_msgSend(MEMORY[0x24BDD1540], "errorWithDomain:code:userInfo:", CFSTR("com.apple.NPKErrorDomain"), -1006, 0);
      v15 = (void *)objc_claimAutoreleasedReturnValue();
      (*((void (**)(id, void *))v10 + 2))(v10, v15);

    }
  }

}

void __107__NPKPaymentWebServiceCompanionTargetDevice_carKeyStartShareAcceptanceFlow_transportIdentifier_completion___block_invoke(uint64_t a1)
{
  NSObject *v2;
  _BOOL4 v3;
  NSObject *v4;
  void *v5;
  uint64_t v6;
  void *v7;
  NPKProtoCarKeyStartShareAcceptanceFlowRequest *v8;
  void *v9;
  id v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  NSObject *v16;
  void *v17;
  void *v18;
  void *v19;
  NSObject *v20;
  _BOOL4 v21;
  NSObject *v22;
  void *v23;
  uint64_t v24;
  NSObject *v25;
  _BOOL4 v26;
  const char *v27;
  NSObject *v28;
  os_log_type_t v29;
  NSObject *v30;
  _BOOL4 v31;
  _QWORD v32[4];
  id v33;
  uint64_t v34;
  void *v35;
  uint8_t buf[4];
  void *v37;
  __int16 v38;
  uint64_t v39;
  __int16 v40;
  void *v41;
  uint64_t v42;

  v42 = *MEMORY[0x24BDAC8D0];
  pk_General_log();
  v2 = objc_claimAutoreleasedReturnValue();
  v3 = os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT);

  if (v3)
  {
    pk_General_log();
    v4 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      v5 = *(void **)(a1 + 32);
      v6 = *(_QWORD *)(a1 + 40);
      v7 = (void *)MEMORY[0x2199B6780](*(_QWORD *)(a1 + 56));
      *(_DWORD *)buf = 138478339;
      v37 = v5;
      v38 = 2113;
      v39 = v6;
      v40 = 2112;
      v41 = v7;
      _os_log_impl(&dword_213518000, v4, OS_LOG_TYPE_DEFAULT, "Notice: Target device - Request to start car key share acceptance for invitation: %{private}@, transportIdentifier: %{private}@, completion: %@", buf, 0x20u);

    }
  }
  if (*(_QWORD *)(a1 + 32))
  {
    v8 = objc_alloc_init(NPKProtoCarKeyStartShareAcceptanceFlowRequest);
    NPKSecureArchiveObject(*(void **)(a1 + 32));
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    -[NPKProtoCarKeyStartShareAcceptanceFlowRequest setInvitationData:](v8, "setInvitationData:", v9);

    -[NPKProtoCarKeyStartShareAcceptanceFlowRequest setTransportationIdentifier:](v8, "setTransportationIdentifier:", *(_QWORD *)(a1 + 40));
    v10 = objc_alloc(MEMORY[0x24BE4FE40]);
    -[NPKProtoCarKeyStartShareAcceptanceFlowRequest data](v8, "data");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    v12 = (void *)objc_msgSend(v10, "initWithProtobufData:type:isResponse:", v11, 140, 0);

    v13 = *(void **)(a1 + 48);
    v34 = *MEMORY[0x24BE4FB30];
    v35 = &unk_24D0566F0;
    objc_msgSend(MEMORY[0x24BDBCE70], "dictionaryWithObjects:forKeys:count:", &v35, &v34, 1);
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v13, "_sendProtobuf:responseExpected:extraOptions:", v12, 1, v14);
    v15 = (void *)objc_claimAutoreleasedReturnValue();

    if (v15)
    {
      if (*(_QWORD *)(a1 + 56))
      {
        v16 = MEMORY[0x2199B6780]();
        v32[0] = MEMORY[0x24BDAC760];
        v32[1] = 3221225472;
        v32[2] = __107__NPKPaymentWebServiceCompanionTargetDevice_carKeyStartShareAcceptanceFlow_transportIdentifier_completion___block_invoke_818;
        v32[3] = &unk_24CFE7B80;
        v33 = *(id *)(a1 + 56);
        v17 = (void *)MEMORY[0x2199B6780](v32);
        v18 = *(void **)(a1 + 48);
        v19 = (void *)MEMORY[0x2199B6780](v16);
        objc_msgSend(v18, "_trackOutstandingRequestWithMessageIdentifier:completionHandler:errorHandler:", v15, v19, v17);

LABEL_22:
        goto LABEL_23;
      }
      pk_Payment_log();
      v30 = objc_claimAutoreleasedReturnValue();
      v31 = os_log_type_enabled(v30, OS_LOG_TYPE_DEFAULT);

      if (v31)
      {
        pk_Payment_log();
        v16 = objc_claimAutoreleasedReturnValue();
        if (!os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
          goto LABEL_22;
        *(_DWORD *)buf = 138412290;
        v37 = v15;
        v27 = "Warning: No response expected for message with identifier %@";
        v28 = v16;
        v29 = OS_LOG_TYPE_DEFAULT;
        goto LABEL_21;
      }
    }
    else
    {
      pk_Payment_log();
      v25 = objc_claimAutoreleasedReturnValue();
      v26 = os_log_type_enabled(v25, OS_LOG_TYPE_ERROR);

      if (v26)
      {
        pk_Payment_log();
        v16 = objc_claimAutoreleasedReturnValue();
        if (!os_log_type_enabled(v16, OS_LOG_TYPE_ERROR))
          goto LABEL_22;
        *(_DWORD *)buf = 138412290;
        v37 = v12;
        v27 = "Error: No message identifier for protobuf %@";
        v28 = v16;
        v29 = OS_LOG_TYPE_ERROR;
LABEL_21:
        _os_log_impl(&dword_213518000, v28, v29, v27, buf, 0xCu);
        goto LABEL_22;
      }
    }
LABEL_23:

    return;
  }
  pk_General_log();
  v20 = objc_claimAutoreleasedReturnValue();
  v21 = os_log_type_enabled(v20, OS_LOG_TYPE_ERROR);

  if (v21)
  {
    pk_General_log();
    v22 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR))
    {
      v23 = *(void **)(a1 + 32);
      *(_DWORD *)buf = 138477827;
      v37 = v23;
      _os_log_impl(&dword_213518000, v22, OS_LOG_TYPE_ERROR, "Error: Unable to start car key acceptance flow with nil invitation (%{private}@)", buf, 0xCu);
    }

  }
  v24 = *(_QWORD *)(a1 + 56);
  if (v24)
    (*(void (**)(uint64_t, _QWORD))(v24 + 16))(v24, 0);
}

void __107__NPKPaymentWebServiceCompanionTargetDevice_carKeyStartShareAcceptanceFlow_transportIdentifier_completion___block_invoke_818(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  _BOOL4 v5;
  NSObject *v6;
  uint64_t v7;
  int v8;
  id v9;
  uint64_t v10;

  v10 = *MEMORY[0x24BDAC8D0];
  v3 = a2;
  pk_Payment_log();
  v4 = objc_claimAutoreleasedReturnValue();
  v5 = os_log_type_enabled(v4, OS_LOG_TYPE_ERROR);

  if (v5)
  {
    pk_Payment_log();
    v6 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      v8 = 138412290;
      v9 = v3;
      _os_log_impl(&dword_213518000, v6, OS_LOG_TYPE_ERROR, "Error: Provisioning service outstanding request error handler invoked: %@", (uint8_t *)&v8, 0xCu);
    }

  }
  v7 = *(_QWORD *)(a1 + 32);
  if (v7)
    (*(void (**)(uint64_t, _QWORD))(v7 + 16))(v7, 0);

}

- (void)carKeyStartShareAcceptanceFlowResponse:(id)a3
{
  id v4;
  NSObject *v5;
  _BOOL4 v6;
  NSObject *v7;
  void *v8;
  void *v9;
  void *v10;
  NSObject *v11;
  NSObject *v12;
  _BOOL4 v13;
  NSObject *v14;
  uint64_t v15;
  uint8_t v16[8];
  _QWORD block[5];
  id v18;
  id v19;
  __int128 *p_buf;
  uint64_t *v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t (*v25)(uint64_t, uint64_t);
  void (*v26)(uint64_t);
  id v27;
  __int128 buf;
  uint64_t v29;
  uint64_t (*v30)(uint64_t, uint64_t);
  void (*v31)(uint64_t);
  id v32;
  uint64_t v33;

  v33 = *MEMORY[0x24BDAC8D0];
  v4 = a3;
  pk_Payment_log();
  v5 = objc_claimAutoreleasedReturnValue();
  v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    pk_Payment_log();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend(v4, "npkDescription");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      LODWORD(buf) = 138412290;
      *(_QWORD *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_213518000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Target carKeyStartShareAcceptanceFlowResponse: incoming protobuf %@", (uint8_t *)&buf, 0xCu);

    }
  }
  objc_msgSend(v4, "context");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "incomingResponseIdentifier");
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  *(_QWORD *)&buf = 0;
  *((_QWORD *)&buf + 1) = &buf;
  v29 = 0x3032000000;
  v30 = __Block_byref_object_copy__342;
  v31 = __Block_byref_object_dispose__343;
  v32 = 0;
  v22 = 0;
  v23 = &v22;
  v24 = 0x3032000000;
  v25 = __Block_byref_object_copy__23;
  v26 = __Block_byref_object_dispose__23;
  v27 = 0;
  if (v10)
  {
    -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
    v11 = objc_claimAutoreleasedReturnValue();
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 3221225472;
    block[2] = __84__NPKPaymentWebServiceCompanionTargetDevice_carKeyStartShareAcceptanceFlowResponse___block_invoke;
    block[3] = &unk_24CFED0D8;
    block[4] = self;
    v18 = v10;
    v19 = v4;
    p_buf = &buf;
    v21 = &v22;
    dispatch_sync(v11, block);

  }
  else
  {
    pk_Payment_log();
    v12 = objc_claimAutoreleasedReturnValue();
    v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      pk_Payment_log();
      v14 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)v16 = 0;
        _os_log_impl(&dword_213518000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v16, 2u);
      }

    }
  }
  v15 = *(_QWORD *)(*((_QWORD *)&buf + 1) + 40);
  if (v15)
    (*(void (**)(uint64_t, uint64_t))(v15 + 16))(v15, v23[5]);
  _Block_object_dispose(&v22, 8);

  _Block_object_dispose(&buf, 8);
}

void __84__NPKPaymentWebServiceCompanionTargetDevice_carKeyStartShareAcceptanceFlowResponse___block_invoke(uint64_t a1)
{
  void *v1;
  void *v3;
  void *v4;
  NPKProtoCarKeyStartShareAcceptanceFlowResponse *v5;
  void *v6;
  NPKProtoCarKeyStartShareAcceptanceFlowResponse *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  _BOOL4 v12;
  NSObject *v13;
  void *v14;
  NSObject *v15;
  _BOOL4 v16;
  NSObject *v17;
  __int16 v18[8];

  objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "objectForKey:", *(_QWORD *)(a1 + 40));
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  if (v4)
  {
    v5 = [NPKProtoCarKeyStartShareAcceptanceFlowResponse alloc];
    objc_msgSend(*(id *)(a1 + 48), "data");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    v7 = -[NPKProtoCarKeyStartShareAcceptanceFlowResponse initWithData:](v5, "initWithData:", v6);

    objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "removeObjectForKey:", *(_QWORD *)(a1 + 40));

    objc_msgSend(v4, "completionHandler");
    v9 = objc_claimAutoreleasedReturnValue();
    v10 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
    v11 = *(void **)(v10 + 40);
    *(_QWORD *)(v10 + 40) = v9;

    v12 = -[NPKProtoCarKeyStartShareAcceptanceFlowResponse hasErrorData](v7, "hasErrorData");
    if (v12)
    {
      -[NPKProtoCarKeyStartShareAcceptanceFlowResponse errorData](v7, "errorData");
      v1 = (void *)objc_claimAutoreleasedReturnValue();
      v13 = objc_opt_class();
      NPKSecureUnarchiveObject(v1, v13);
      v14 = (void *)objc_claimAutoreleasedReturnValue();
    }
    else
    {
      v14 = 0;
    }
    objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 40), v14);
    if (v12)
    {

    }
  }
  else
  {
    pk_Payment_log();
    v15 = objc_claimAutoreleasedReturnValue();
    v16 = os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT);

    if (v16)
    {
      pk_Payment_log();
      v17 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
      {
        v18[0] = 0;
        _os_log_impl(&dword_213518000, v17, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", (uint8_t *)v18, 2u);
      }

    }
  }

}

- (void)carKeyRoutingInformationForInvitationWithIdentifier:(id)a3 transportIdentifier:(id)a4 completion:(id)a5
{
  id v8;
  id v9;
  id v10;
  NSObject *v11;
  NSObject *v12;
  _BOOL4 v13;
  NSObject *v14;
  void *v15;
  uint8_t v16[16];
  _QWORD block[4];
  id v18;
  id v19;
  NPKPaymentWebServiceCompanionTargetDevice *v20;
  id v21;

  v8 = a3;
  v9 = a4;
  v10 = a5;
  if (-[NPKPaymentWebServiceCompanionTargetDevice _isSharingInAChainSupported](self, "_isSharingInAChainSupported"))
  {
    -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
    v11 = objc_claimAutoreleasedReturnValue();
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 3221225472;
    block[2] = __128__NPKPaymentWebServiceCompanionTargetDevice_carKeyRoutingInformationForInvitationWithIdentifier_transportIdentifier_completion___block_invoke;
    block[3] = &unk_24CFE8740;
    v18 = v8;
    v19 = v9;
    v20 = self;
    v21 = v10;
    dispatch_sync(v11, block);

  }
  else
  {
    pk_Payment_log();
    v12 = objc_claimAutoreleasedReturnValue();
    v13 = os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT);

    if (v13)
    {
      pk_Payment_log();
      v14 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)v16 = 0;
        _os_log_impl(&dword_213518000, v14, OS_LOG_TYPE_DEFAULT, "Notice: Target device does not support carKeyRoutingInformationForInvitationWithIdentifier:transportIdentifier:completion: message.", v16, 2u);
      }

    }
    if (v10)
    {
      objc_msgSend(MEMORY[0x24BDD1540], "errorWithDomain:code:userInfo:", CFSTR("com.apple.NPKErrorDomain"), -1006, 0);
      v15 = (void *)objc_claimAutoreleasedReturnValue();
      (*((void (**)(id, _QWORD, void *))v10 + 2))(v10, 0, v15);

    }
  }

}

void __128__NPKPaymentWebServiceCompanionTargetDevice_carKeyRoutingInformationForInvitationWithIdentifier_transportIdentifier_completion___block_invoke(uint64_t a1)
{
  NSObject *v2;
  _BOOL4 v3;
  NSObject *v4;
  void *v5;
  uint64_t v6;
  void *v7;
  NPKProtoCarKeyRoutingInformationRequest *v8;
  id v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  NSObject *v15;
  void *v16;
  void *v17;
  void *v18;
  NSObject *v19;
  _BOOL4 v20;
  NSObject *v21;
  void *v22;
  uint64_t v23;
  NSObject *v24;
  _BOOL4 v25;
  const char *v26;
  NSObject *v27;
  os_log_type_t v28;
  NSObject *v29;
  _BOOL4 v30;
  _QWORD v31[4];
  id v32;
  uint64_t v33;
  void *v34;
  uint8_t buf[4];
  void *v36;
  __int16 v37;
  uint64_t v38;
  __int16 v39;
  void *v40;
  uint64_t v41;

  v41 = *MEMORY[0x24BDAC8D0];
  pk_General_log();
  v2 = objc_claimAutoreleasedReturnValue();
  v3 = os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT);

  if (v3)
  {
    pk_General_log();
    v4 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      v5 = *(void **)(a1 + 32);
      v6 = *(_QWORD *)(a1 + 40);
      v7 = (void *)MEMORY[0x2199B6780](*(_QWORD *)(a1 + 56));
      *(_DWORD *)buf = 138478339;
      v36 = v5;
      v37 = 2113;
      v38 = v6;
      v39 = 2112;
      v40 = v7;
      _os_log_impl(&dword_213518000, v4, OS_LOG_TYPE_DEFAULT, "Notice: Target device - Request to fetch car key routing information for invitationIdentifier: (%{private}@), transportIdentifier: (%{private}@), completion: %@", buf, 0x20u);

    }
  }
  if (objc_msgSend(*(id *)(a1 + 32), "length"))
    goto LABEL_6;
  pk_General_log();
  v19 = objc_claimAutoreleasedReturnValue();
  v20 = os_log_type_enabled(v19, OS_LOG_TYPE_ERROR);

  if (v20)
  {
    pk_General_log();
    v21 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR))
    {
      v22 = *(void **)(a1 + 32);
      *(_DWORD *)buf = 138477827;
      v36 = v22;
      _os_log_impl(&dword_213518000, v21, OS_LOG_TYPE_ERROR, "Error: Unable to fetch car key routing information with nil empty invitationIdentifier (%{private}@)", buf, 0xCu);
    }

  }
  v23 = *(_QWORD *)(a1 + 56);
  if (!v23)
  {
LABEL_6:
    v8 = objc_alloc_init(NPKProtoCarKeyRoutingInformationRequest);
    -[NPKProtoCarKeyRoutingInformationRequest setInvitationIdentifier:](v8, "setInvitationIdentifier:", *(_QWORD *)(a1 + 32));
    -[NPKProtoCarKeyRoutingInformationRequest setTransportIdentifier:](v8, "setTransportIdentifier:", *(_QWORD *)(a1 + 40));
    v9 = objc_alloc(MEMORY[0x24BE4FE40]);
    -[NPKProtoCarKeyRoutingInformationRequest data](v8, "data");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    v11 = (void *)objc_msgSend(v9, "initWithProtobufData:type:isResponse:", v10, 141, 0);

    v12 = *(void **)(a1 + 48);
    v33 = *MEMORY[0x24BE4FB30];
    v34 = &unk_24D0566F0;
    objc_msgSend(MEMORY[0x24BDBCE70], "dictionaryWithObjects:forKeys:count:", &v34, &v33, 1);
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v12, "_sendProtobuf:responseExpected:extraOptions:", v11, 1, v13);
    v14 = (void *)objc_claimAutoreleasedReturnValue();

    if (v14)
    {
      if (*(_QWORD *)(a1 + 56))
      {
        v15 = MEMORY[0x2199B6780]();
        v31[0] = MEMORY[0x24BDAC760];
        v31[1] = 3221225472;
        v31[2] = __128__NPKPaymentWebServiceCompanionTargetDevice_carKeyRoutingInformationForInvitationWithIdentifier_transportIdentifier_completion___block_invoke_821;
        v31[3] = &unk_24CFE7B80;
        v32 = *(id *)(a1 + 56);
        v16 = (void *)MEMORY[0x2199B6780](v31);
        v17 = *(void **)(a1 + 48);
        v18 = (void *)MEMORY[0x2199B6780](v15);
        objc_msgSend(v17, "_trackOutstandingRequestWithMessageIdentifier:completionHandler:errorHandler:", v14, v18, v16);

LABEL_22:
        goto LABEL_23;
      }
      pk_Payment_log();
      v29 = objc_claimAutoreleasedReturnValue();
      v30 = os_log_type_enabled(v29, OS_LOG_TYPE_DEFAULT);

      if (v30)
      {
        pk_Payment_log();
        v15 = objc_claimAutoreleasedReturnValue();
        if (!os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
          goto LABEL_22;
        *(_DWORD *)buf = 138412290;
        v36 = v14;
        v26 = "Warning: No response expected for message with identifier %@";
        v27 = v15;
        v28 = OS_LOG_TYPE_DEFAULT;
        goto LABEL_21;
      }
    }
    else
    {
      pk_Payment_log();
      v24 = objc_claimAutoreleasedReturnValue();
      v25 = os_log_type_enabled(v24, OS_LOG_TYPE_ERROR);

      if (v25)
      {
        pk_Payment_log();
        v15 = objc_claimAutoreleasedReturnValue();
        if (!os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
          goto LABEL_22;
        *(_DWORD *)buf = 138412290;
        v36 = v11;
        v26 = "Error: No message identifier for protobuf %@";
        v27 = v15;
        v28 = OS_LOG_TYPE_ERROR;
LABEL_21:
        _os_log_impl(&dword_213518000, v27, v28, v26, buf, 0xCu);
        goto LABEL_22;
      }
    }
LABEL_23:

    goto LABEL_24;
  }
  PKDisplayableErrorForCommonType();
  v8 = (NPKProtoCarKeyRoutingInformationRequest *)objc_claimAutoreleasedReturnValue();
  (*(void (**)(uint64_t, _QWORD, NPKProtoCarKeyRoutingInformationRequest *))(v23 + 16))(v23, 0, v8);
LABEL_24:

}

void __128__NPKPaymentWebServiceCompanionTargetDevice_carKeyRoutingInformationForInvitationWithIdentifier_transportIdentifier_completion___block_invoke_821(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  _BOOL4 v5;
  NSObject *v6;
  uint64_t v7;
  int v8;
  id v9;
  uint64_t v10;

  v10 = *MEMORY[0x24BDAC8D0];
  v3 = a2;
  pk_Payment_log();
  v4 = objc_claimAutoreleasedReturnValue();
  v5 = os_log_type_enabled(v4, OS_LOG_TYPE_ERROR);

  if (v5)
  {
    pk_Payment_log();
    v6 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      v8 = 138412290;
      v9 = v3;
      _os_log_impl(&dword_213518000, v6, OS_LOG_TYPE_ERROR, "Error: Provisioning service outstanding request error handler invoked: %@", (uint8_t *)&v8, 0xCu);
    }

  }
  v7 = *(_QWORD *)(a1 + 32);
  if (v7)
    (*(void (**)(uint64_t, _QWORD, id))(v7 + 16))(v7, 0, v3);

}

- (void)carKeyRoutingInformationResponse:(id)a3
{
  id v4;
  NSObject *v5;
  _BOOL4 v6;
  NSObject *v7;
  void *v8;
  void *v9;
  void *v10;
  NSObject *v11;
  NSObject *v12;
  _BOOL4 v13;
  NSObject *v14;
  uint64_t v15;
  uint8_t v16[16];
  _QWORD block[5];
  id v18;
  id v19;
  __int128 *p_buf;
  uint64_t *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t (*v26)(uint64_t, uint64_t);
  void (*v27)(uint64_t);
  id v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t (*v32)(uint64_t, uint64_t);
  void (*v33)(uint64_t);
  id v34;
  __int128 buf;
  uint64_t v36;
  uint64_t (*v37)(uint64_t, uint64_t);
  void (*v38)(uint64_t);
  id v39;
  uint64_t v40;

  v40 = *MEMORY[0x24BDAC8D0];
  v4 = a3;
  pk_Payment_log();
  v5 = objc_claimAutoreleasedReturnValue();
  v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    pk_Payment_log();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend(v4, "npkDescription");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      LODWORD(buf) = 138412290;
      *(_QWORD *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_213518000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Target carKeyRoutingInformationResponse: incoming protobuf %@", (uint8_t *)&buf, 0xCu);

    }
  }
  objc_msgSend(v4, "context");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "incomingResponseIdentifier");
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  *(_QWORD *)&buf = 0;
  *((_QWORD *)&buf + 1) = &buf;
  v36 = 0x3032000000;
  v37 = __Block_byref_object_copy__342;
  v38 = __Block_byref_object_dispose__343;
  v39 = 0;
  v29 = 0;
  v30 = &v29;
  v31 = 0x3032000000;
  v32 = __Block_byref_object_copy__23;
  v33 = __Block_byref_object_dispose__23;
  v34 = 0;
  v23 = 0;
  v24 = &v23;
  v25 = 0x3032000000;
  v26 = __Block_byref_object_copy__23;
  v27 = __Block_byref_object_dispose__23;
  v28 = 0;
  if (v10)
  {
    -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
    v11 = objc_claimAutoreleasedReturnValue();
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 3221225472;
    block[2] = __78__NPKPaymentWebServiceCompanionTargetDevice_carKeyRoutingInformationResponse___block_invoke;
    block[3] = &unk_24CFED060;
    block[4] = self;
    v18 = v10;
    v19 = v4;
    p_buf = &buf;
    v21 = &v29;
    v22 = &v23;
    dispatch_sync(v11, block);

  }
  else
  {
    pk_Payment_log();
    v12 = objc_claimAutoreleasedReturnValue();
    v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      pk_Payment_log();
      v14 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)v16 = 0;
        _os_log_impl(&dword_213518000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v16, 2u);
      }

    }
  }
  v15 = *(_QWORD *)(*((_QWORD *)&buf + 1) + 40);
  if (v15)
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v15, v30[5], v24[5]);
  _Block_object_dispose(&v23, 8);

  _Block_object_dispose(&v29, 8);
  _Block_object_dispose(&buf, 8);

}

void __78__NPKPaymentWebServiceCompanionTargetDevice_carKeyRoutingInformationResponse___block_invoke(uint64_t a1)
{
  void *v1;
  void *v3;
  void *v4;
  NPKProtoCarKeyRoutingInformationResponse *v5;
  void *v6;
  NPKProtoCarKeyRoutingInformationResponse *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  _BOOL4 v15;
  NSObject *v16;
  void *v17;
  NSObject *v18;
  _BOOL4 v19;
  NSObject *v20;
  __int16 v21[8];

  objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "objectForKey:", *(_QWORD *)(a1 + 40));
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  if (v4)
  {
    v5 = [NPKProtoCarKeyRoutingInformationResponse alloc];
    objc_msgSend(*(id *)(a1 + 48), "data");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    v7 = -[NPKProtoCarKeyRoutingInformationResponse initWithData:](v5, "initWithData:", v6);

    objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "removeObjectForKey:", *(_QWORD *)(a1 + 40));

    objc_msgSend(v4, "completionHandler");
    v9 = objc_claimAutoreleasedReturnValue();
    v10 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
    v11 = *(void **)(v10 + 40);
    *(_QWORD *)(v10 + 40) = v9;

    -[NPKProtoCarKeyRoutingInformationResponse routingInformation](v7, "routingInformation");
    v12 = objc_claimAutoreleasedReturnValue();
    v13 = *(_QWORD *)(*(_QWORD *)(a1 + 64) + 8);
    v14 = *(void **)(v13 + 40);
    *(_QWORD *)(v13 + 40) = v12;

    v15 = -[NPKProtoCarKeyRoutingInformationResponse hasErrorData](v7, "hasErrorData");
    if (v15)
    {
      -[NPKProtoCarKeyRoutingInformationResponse errorData](v7, "errorData");
      v1 = (void *)objc_claimAutoreleasedReturnValue();
      v16 = objc_opt_class();
      NPKSecureUnarchiveObject(v1, v16);
      v17 = (void *)objc_claimAutoreleasedReturnValue();
    }
    else
    {
      v17 = 0;
    }
    objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 72) + 8) + 40), v17);
    if (v15)
    {

    }
  }
  else
  {
    pk_Payment_log();
    v18 = objc_claimAutoreleasedReturnValue();
    v19 = os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT);

    if (v19)
    {
      pk_Payment_log();
      v20 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v20, OS_LOG_TYPE_DEFAULT))
      {
        v21[0] = 0;
        _os_log_impl(&dword_213518000, v20, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", (uint8_t *)v21, 2u);
      }

    }
  }

}

- (void)carKeyGetProductPlanIdentifierRequestForInvitationWithIdentifier:(id)a3 transportIdentifier:(id)a4 completion:(id)a5
{
  id v8;
  id v9;
  id v10;
  NSObject *v11;
  NSObject *v12;
  _BOOL4 v13;
  NSObject *v14;
  void *v15;
  uint8_t v16[16];
  _QWORD block[4];
  id v18;
  id v19;
  NPKPaymentWebServiceCompanionTargetDevice *v20;
  id v21;

  v8 = a3;
  v9 = a4;
  v10 = a5;
  if (-[NPKPaymentWebServiceCompanionTargetDevice _isSharingInAChainSupported](self, "_isSharingInAChainSupported"))
  {
    -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
    v11 = objc_claimAutoreleasedReturnValue();
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 3221225472;
    block[2] = __141__NPKPaymentWebServiceCompanionTargetDevice_carKeyGetProductPlanIdentifierRequestForInvitationWithIdentifier_transportIdentifier_completion___block_invoke;
    block[3] = &unk_24CFE8740;
    v18 = v8;
    v19 = v9;
    v20 = self;
    v21 = v10;
    dispatch_sync(v11, block);

  }
  else
  {
    pk_Payment_log();
    v12 = objc_claimAutoreleasedReturnValue();
    v13 = os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT);

    if (v13)
    {
      pk_Payment_log();
      v14 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)v16 = 0;
        _os_log_impl(&dword_213518000, v14, OS_LOG_TYPE_DEFAULT, "Notice: Target device does not support carKeyGetProductPlanIdentifierRequestForInvitationWithIdentifier:transportIdentifier:completion: message.", v16, 2u);
      }

    }
    if (v10)
    {
      objc_msgSend(MEMORY[0x24BDD1540], "errorWithDomain:code:userInfo:", CFSTR("com.apple.NPKErrorDomain"), -1006, 0);
      v15 = (void *)objc_claimAutoreleasedReturnValue();
      (*((void (**)(id, _QWORD, void *))v10 + 2))(v10, 0, v15);

    }
  }

}

void __141__NPKPaymentWebServiceCompanionTargetDevice_carKeyGetProductPlanIdentifierRequestForInvitationWithIdentifier_transportIdentifier_completion___block_invoke(uint64_t a1)
{
  NSObject *v2;
  _BOOL4 v3;
  NSObject *v4;
  void *v5;
  uint64_t v6;
  void *v7;
  NPKProtoCarKeyGetProductPlanIdentifierRequest *v8;
  id v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  NSObject *v15;
  void *v16;
  void *v17;
  void *v18;
  NSObject *v19;
  _BOOL4 v20;
  NSObject *v21;
  void *v22;
  uint64_t v23;
  NSObject *v24;
  _BOOL4 v25;
  const char *v26;
  NSObject *v27;
  os_log_type_t v28;
  NSObject *v29;
  _BOOL4 v30;
  _QWORD v31[4];
  id v32;
  uint64_t v33;
  void *v34;
  uint8_t buf[4];
  void *v36;
  __int16 v37;
  uint64_t v38;
  __int16 v39;
  void *v40;
  uint64_t v41;

  v41 = *MEMORY[0x24BDAC8D0];
  pk_General_log();
  v2 = objc_claimAutoreleasedReturnValue();
  v3 = os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT);

  if (v3)
  {
    pk_General_log();
    v4 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      v5 = *(void **)(a1 + 32);
      v6 = *(_QWORD *)(a1 + 40);
      v7 = (void *)MEMORY[0x2199B6780](*(_QWORD *)(a1 + 56));
      *(_DWORD *)buf = 138478339;
      v36 = v5;
      v37 = 2113;
      v38 = v6;
      v39 = 2112;
      v40 = v7;
      _os_log_impl(&dword_213518000, v4, OS_LOG_TYPE_DEFAULT, "Notice: Target device - Request to get car key product plan identifier for invitationIdentifier: (%{private}@), transportIdentifier: (%{private}@), completion: %@", buf, 0x20u);

    }
  }
  if (objc_msgSend(*(id *)(a1 + 32), "length"))
  {
    v8 = objc_alloc_init(NPKProtoCarKeyGetProductPlanIdentifierRequest);
    -[NPKProtoCarKeyGetProductPlanIdentifierRequest setInvitationIdentifier:](v8, "setInvitationIdentifier:", *(_QWORD *)(a1 + 32));
    -[NPKProtoCarKeyGetProductPlanIdentifierRequest setTransportIdentifier:](v8, "setTransportIdentifier:", *(_QWORD *)(a1 + 40));
    v9 = objc_alloc(MEMORY[0x24BE4FE40]);
    -[NPKProtoCarKeyGetProductPlanIdentifierRequest data](v8, "data");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    v11 = (void *)objc_msgSend(v9, "initWithProtobufData:type:isResponse:", v10, 142, 0);

    v12 = *(void **)(a1 + 48);
    v33 = *MEMORY[0x24BE4FB30];
    v34 = &unk_24D0566F0;
    objc_msgSend(MEMORY[0x24BDBCE70], "dictionaryWithObjects:forKeys:count:", &v34, &v33, 1);
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v12, "_sendProtobuf:responseExpected:extraOptions:", v11, 1, v13);
    v14 = (void *)objc_claimAutoreleasedReturnValue();

    if (v14)
    {
      if (*(_QWORD *)(a1 + 56))
      {
        v15 = MEMORY[0x2199B6780]();
        v31[0] = MEMORY[0x24BDAC760];
        v31[1] = 3221225472;
        v31[2] = __141__NPKPaymentWebServiceCompanionTargetDevice_carKeyGetProductPlanIdentifierRequestForInvitationWithIdentifier_transportIdentifier_completion___block_invoke_824;
        v31[3] = &unk_24CFE7B80;
        v32 = *(id *)(a1 + 56);
        v16 = (void *)MEMORY[0x2199B6780](v31);
        v17 = *(void **)(a1 + 48);
        v18 = (void *)MEMORY[0x2199B6780](v15);
        objc_msgSend(v17, "_trackOutstandingRequestWithMessageIdentifier:completionHandler:errorHandler:", v14, v18, v16);

LABEL_22:
        goto LABEL_23;
      }
      pk_Payment_log();
      v29 = objc_claimAutoreleasedReturnValue();
      v30 = os_log_type_enabled(v29, OS_LOG_TYPE_DEFAULT);

      if (v30)
      {
        pk_Payment_log();
        v15 = objc_claimAutoreleasedReturnValue();
        if (!os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
          goto LABEL_22;
        *(_DWORD *)buf = 138412290;
        v36 = v14;
        v26 = "Warning: No response expected for message with identifier %@";
        v27 = v15;
        v28 = OS_LOG_TYPE_DEFAULT;
        goto LABEL_21;
      }
    }
    else
    {
      pk_Payment_log();
      v24 = objc_claimAutoreleasedReturnValue();
      v25 = os_log_type_enabled(v24, OS_LOG_TYPE_ERROR);

      if (v25)
      {
        pk_Payment_log();
        v15 = objc_claimAutoreleasedReturnValue();
        if (!os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
          goto LABEL_22;
        *(_DWORD *)buf = 138412290;
        v36 = v11;
        v26 = "Error: No message identifier for protobuf %@";
        v27 = v15;
        v28 = OS_LOG_TYPE_ERROR;
LABEL_21:
        _os_log_impl(&dword_213518000, v27, v28, v26, buf, 0xCu);
        goto LABEL_22;
      }
    }
LABEL_23:

    goto LABEL_24;
  }
  pk_General_log();
  v19 = objc_claimAutoreleasedReturnValue();
  v20 = os_log_type_enabled(v19, OS_LOG_TYPE_ERROR);

  if (v20)
  {
    pk_General_log();
    v21 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR))
    {
      v22 = *(void **)(a1 + 32);
      *(_DWORD *)buf = 138477827;
      v36 = v22;
      _os_log_impl(&dword_213518000, v21, OS_LOG_TYPE_ERROR, "Error: Unable to get car key product plan identifier with nil invitationIdentifier (%{private}@)", buf, 0xCu);
    }

  }
  v23 = *(_QWORD *)(a1 + 56);
  if (v23)
  {
    PKDisplayableErrorForCommonType();
    v8 = (NPKProtoCarKeyGetProductPlanIdentifierRequest *)objc_claimAutoreleasedReturnValue();
    (*(void (**)(uint64_t, _QWORD, NPKProtoCarKeyGetProductPlanIdentifierRequest *))(v23 + 16))(v23, 0, v8);
LABEL_24:

  }
}

void __141__NPKPaymentWebServiceCompanionTargetDevice_carKeyGetProductPlanIdentifierRequestForInvitationWithIdentifier_transportIdentifier_completion___block_invoke_824(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  _BOOL4 v5;
  NSObject *v6;
  uint64_t v7;
  int v8;
  id v9;
  uint64_t v10;

  v10 = *MEMORY[0x24BDAC8D0];
  v3 = a2;
  pk_Payment_log();
  v4 = objc_claimAutoreleasedReturnValue();
  v5 = os_log_type_enabled(v4, OS_LOG_TYPE_ERROR);

  if (v5)
  {
    pk_Payment_log();
    v6 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      v8 = 138412290;
      v9 = v3;
      _os_log_impl(&dword_213518000, v6, OS_LOG_TYPE_ERROR, "Error: Provisioning service outstanding request error handler invoked: %@", (uint8_t *)&v8, 0xCu);
    }

  }
  v7 = *(_QWORD *)(a1 + 32);
  if (v7)
    (*(void (**)(uint64_t, _QWORD, id))(v7 + 16))(v7, 0, v3);

}

- (void)carKeyGetProductPlanIdentifierResponse:(id)a3
{
  id v4;
  NSObject *v5;
  _BOOL4 v6;
  NSObject *v7;
  void *v8;
  void *v9;
  void *v10;
  NSObject *v11;
  NSObject *v12;
  _BOOL4 v13;
  NSObject *v14;
  uint64_t v15;
  uint8_t v16[16];
  _QWORD block[5];
  id v18;
  id v19;
  __int128 *p_buf;
  uint64_t *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t (*v26)(uint64_t, uint64_t);
  void (*v27)(uint64_t);
  id v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t (*v32)(uint64_t, uint64_t);
  void (*v33)(uint64_t);
  id v34;
  __int128 buf;
  uint64_t v36;
  uint64_t (*v37)(uint64_t, uint64_t);
  void (*v38)(uint64_t);
  id v39;
  uint64_t v40;

  v40 = *MEMORY[0x24BDAC8D0];
  v4 = a3;
  pk_Payment_log();
  v5 = objc_claimAutoreleasedReturnValue();
  v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    pk_Payment_log();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend(v4, "npkDescription");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      LODWORD(buf) = 138412290;
      *(_QWORD *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_213518000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Target carKeyGetProductPlanIdentifierResponse: incoming protobuf %@", (uint8_t *)&buf, 0xCu);

    }
  }
  objc_msgSend(v4, "context");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "incomingResponseIdentifier");
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  *(_QWORD *)&buf = 0;
  *((_QWORD *)&buf + 1) = &buf;
  v36 = 0x3032000000;
  v37 = __Block_byref_object_copy__342;
  v38 = __Block_byref_object_dispose__343;
  v39 = 0;
  v29 = 0;
  v30 = &v29;
  v31 = 0x3032000000;
  v32 = __Block_byref_object_copy__23;
  v33 = __Block_byref_object_dispose__23;
  v34 = 0;
  v23 = 0;
  v24 = &v23;
  v25 = 0x3032000000;
  v26 = __Block_byref_object_copy__23;
  v27 = __Block_byref_object_dispose__23;
  v28 = 0;
  if (v10)
  {
    -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
    v11 = objc_claimAutoreleasedReturnValue();
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 3221225472;
    block[2] = __84__NPKPaymentWebServiceCompanionTargetDevice_carKeyGetProductPlanIdentifierResponse___block_invoke;
    block[3] = &unk_24CFED060;
    block[4] = self;
    v18 = v10;
    v19 = v4;
    p_buf = &buf;
    v21 = &v29;
    v22 = &v23;
    dispatch_sync(v11, block);

  }
  else
  {
    pk_Payment_log();
    v12 = objc_claimAutoreleasedReturnValue();
    v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      pk_Payment_log();
      v14 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)v16 = 0;
        _os_log_impl(&dword_213518000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v16, 2u);
      }

    }
  }
  v15 = *(_QWORD *)(*((_QWORD *)&buf + 1) + 40);
  if (v15)
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v15, v30[5], v24[5]);
  _Block_object_dispose(&v23, 8);

  _Block_object_dispose(&v29, 8);
  _Block_object_dispose(&buf, 8);

}

void __84__NPKPaymentWebServiceCompanionTargetDevice_carKeyGetProductPlanIdentifierResponse___block_invoke(uint64_t a1)
{
  void *v1;
  void *v3;
  void *v4;
  NPKProtoCarKeyGetProductPlanIdentifierResponse *v5;
  void *v6;
  NPKProtoCarKeyGetProductPlanIdentifierResponse *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  _BOOL4 v12;
  NSObject *v13;
  void *v14;
  NSObject *v15;
  _BOOL4 v16;
  NSObject *v17;
  _BOOL4 v18;
  NSObject *v19;
  void *v20;
  __int16 v21[8];

  objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "objectForKey:", *(_QWORD *)(a1 + 40));
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  if (v4)
  {
    v5 = [NPKProtoCarKeyGetProductPlanIdentifierResponse alloc];
    objc_msgSend(*(id *)(a1 + 48), "data");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    v7 = -[NPKProtoCarKeyGetProductPlanIdentifierResponse initWithData:](v5, "initWithData:", v6);

    objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "removeObjectForKey:", *(_QWORD *)(a1 + 40));

    objc_msgSend(v4, "completionHandler");
    v9 = objc_claimAutoreleasedReturnValue();
    v10 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
    v11 = *(void **)(v10 + 40);
    *(_QWORD *)(v10 + 40) = v9;

    v12 = -[NPKProtoCarKeyGetProductPlanIdentifierResponse hasContainerData](v7, "hasContainerData");
    if (v12)
    {
      -[NPKProtoCarKeyGetProductPlanIdentifierResponse containerData](v7, "containerData");
      v1 = (void *)objc_claimAutoreleasedReturnValue();
      v13 = objc_opt_class();
      NPKSecureUnarchiveObject(v1, v13);
      v14 = (void *)objc_claimAutoreleasedReturnValue();
    }
    else
    {
      v14 = 0;
    }
    objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 40), v14);
    if (v12)
    {

    }
    v18 = -[NPKProtoCarKeyGetProductPlanIdentifierResponse hasErrorData](v7, "hasErrorData");
    if (v18)
    {
      -[NPKProtoCarKeyGetProductPlanIdentifierResponse errorData](v7, "errorData");
      v1 = (void *)objc_claimAutoreleasedReturnValue();
      v19 = objc_opt_class();
      NPKSecureUnarchiveObject(v1, v19);
      v20 = (void *)objc_claimAutoreleasedReturnValue();
    }
    else
    {
      v20 = 0;
    }
    objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 72) + 8) + 40), v20);
    if (v18)
    {

    }
  }
  else
  {
    pk_Payment_log();
    v15 = objc_claimAutoreleasedReturnValue();
    v16 = os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT);

    if (v16)
    {
      pk_Payment_log();
      v17 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
      {
        v21[0] = 0;
        _os_log_impl(&dword_213518000, v17, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", (uint8_t *)v21, 2u);
      }

    }
  }

}

- (void)carKeySetEncryptedProductPlanIdentifierContainer:(id)a3 invitationIdentifier:(id)a4 completion:(id)a5
{
  id v8;
  id v9;
  id v10;
  NSObject *v11;
  NSObject *v12;
  _BOOL4 v13;
  NSObject *v14;
  void *v15;
  uint8_t v16[16];
  _QWORD block[4];
  id v18;
  id v19;
  NPKPaymentWebServiceCompanionTargetDevice *v20;
  id v21;

  v8 = a3;
  v9 = a4;
  v10 = a5;
  if (-[NPKPaymentWebServiceCompanionTargetDevice _isSharingInAChainSupported](self, "_isSharingInAChainSupported"))
  {
    -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
    v11 = objc_claimAutoreleasedReturnValue();
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 3221225472;
    block[2] = __126__NPKPaymentWebServiceCompanionTargetDevice_carKeySetEncryptedProductPlanIdentifierContainer_invitationIdentifier_completion___block_invoke;
    block[3] = &unk_24CFE8740;
    v18 = v8;
    v19 = v9;
    v20 = self;
    v21 = v10;
    dispatch_sync(v11, block);

  }
  else
  {
    pk_Payment_log();
    v12 = objc_claimAutoreleasedReturnValue();
    v13 = os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT);

    if (v13)
    {
      pk_Payment_log();
      v14 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)v16 = 0;
        _os_log_impl(&dword_213518000, v14, OS_LOG_TYPE_DEFAULT, "Notice: Target device does not support carKeySetEncryptedProductPlanIdentifierContainer:invitationIdentifier:completion: message.", v16, 2u);
      }

    }
    if (v10)
    {
      objc_msgSend(MEMORY[0x24BDD1540], "errorWithDomain:code:userInfo:", CFSTR("com.apple.NPKErrorDomain"), -1006, 0);
      v15 = (void *)objc_claimAutoreleasedReturnValue();
      (*((void (**)(id, void *))v10 + 2))(v10, v15);

    }
  }

}

void __126__NPKPaymentWebServiceCompanionTargetDevice_carKeySetEncryptedProductPlanIdentifierContainer_invitationIdentifier_completion___block_invoke(uint64_t a1)
{
  NSObject *v2;
  _BOOL4 v3;
  NSObject *v4;
  void *v5;
  uint64_t v6;
  void *v7;
  NPKProtoCarKeySetEncryptedProductPlanIdentifierContainerRequest *v8;
  void *v9;
  id v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  NSObject *v16;
  void *v17;
  void *v18;
  void *v19;
  NSObject *v20;
  _BOOL4 v21;
  NSObject *v22;
  void *v23;
  uint64_t v24;
  NSObject *v25;
  _BOOL4 v26;
  const char *v27;
  NSObject *v28;
  os_log_type_t v29;
  NSObject *v30;
  _BOOL4 v31;
  _QWORD v32[4];
  id v33;
  uint64_t v34;
  void *v35;
  uint8_t buf[4];
  void *v37;
  __int16 v38;
  uint64_t v39;
  __int16 v40;
  void *v41;
  uint64_t v42;

  v42 = *MEMORY[0x24BDAC8D0];
  pk_General_log();
  v2 = objc_claimAutoreleasedReturnValue();
  v3 = os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT);

  if (v3)
  {
    pk_General_log();
    v4 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      v5 = *(void **)(a1 + 32);
      v6 = *(_QWORD *)(a1 + 40);
      v7 = (void *)MEMORY[0x2199B6780](*(_QWORD *)(a1 + 56));
      *(_DWORD *)buf = 138478339;
      v37 = v5;
      v38 = 2113;
      v39 = v6;
      v40 = 2112;
      v41 = v7;
      _os_log_impl(&dword_213518000, v4, OS_LOG_TYPE_DEFAULT, "Notice: Target device - Request to set car key encrypted product plan container: (%{private}@), invitationIdentifier: (%{private}@), completion: %@", buf, 0x20u);

    }
  }
  if (objc_msgSend(*(id *)(a1 + 40), "length"))
  {
    v8 = objc_alloc_init(NPKProtoCarKeySetEncryptedProductPlanIdentifierContainerRequest);
    NPKSecureArchiveObject(*(void **)(a1 + 32));
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    -[NPKProtoCarKeySetEncryptedProductPlanIdentifierContainerRequest setContainerData:](v8, "setContainerData:", v9);

    -[NPKProtoCarKeySetEncryptedProductPlanIdentifierContainerRequest setInvitationIdentifier:](v8, "setInvitationIdentifier:", *(_QWORD *)(a1 + 40));
    v10 = objc_alloc(MEMORY[0x24BE4FE40]);
    -[NPKProtoCarKeySetEncryptedProductPlanIdentifierContainerRequest data](v8, "data");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    v12 = (void *)objc_msgSend(v10, "initWithProtobufData:type:isResponse:", v11, 143, 0);

    v13 = *(void **)(a1 + 48);
    v34 = *MEMORY[0x24BE4FB30];
    v35 = &unk_24D0566F0;
    objc_msgSend(MEMORY[0x24BDBCE70], "dictionaryWithObjects:forKeys:count:", &v35, &v34, 1);
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v13, "_sendProtobuf:responseExpected:extraOptions:", v12, 1, v14);
    v15 = (void *)objc_claimAutoreleasedReturnValue();

    if (v15)
    {
      if (*(_QWORD *)(a1 + 56))
      {
        v16 = MEMORY[0x2199B6780]();
        v32[0] = MEMORY[0x24BDAC760];
        v32[1] = 3221225472;
        v32[2] = __126__NPKPaymentWebServiceCompanionTargetDevice_carKeySetEncryptedProductPlanIdentifierContainer_invitationIdentifier_completion___block_invoke_828;
        v32[3] = &unk_24CFE7B80;
        v33 = *(id *)(a1 + 56);
        v17 = (void *)MEMORY[0x2199B6780](v32);
        v18 = *(void **)(a1 + 48);
        v19 = (void *)MEMORY[0x2199B6780](v16);
        objc_msgSend(v18, "_trackOutstandingRequestWithMessageIdentifier:completionHandler:errorHandler:", v15, v19, v17);

LABEL_22:
        goto LABEL_23;
      }
      pk_Payment_log();
      v30 = objc_claimAutoreleasedReturnValue();
      v31 = os_log_type_enabled(v30, OS_LOG_TYPE_DEFAULT);

      if (v31)
      {
        pk_Payment_log();
        v16 = objc_claimAutoreleasedReturnValue();
        if (!os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
          goto LABEL_22;
        *(_DWORD *)buf = 138412290;
        v37 = v15;
        v27 = "Warning: No response expected for message with identifier %@";
        v28 = v16;
        v29 = OS_LOG_TYPE_DEFAULT;
        goto LABEL_21;
      }
    }
    else
    {
      pk_Payment_log();
      v25 = objc_claimAutoreleasedReturnValue();
      v26 = os_log_type_enabled(v25, OS_LOG_TYPE_ERROR);

      if (v26)
      {
        pk_Payment_log();
        v16 = objc_claimAutoreleasedReturnValue();
        if (!os_log_type_enabled(v16, OS_LOG_TYPE_ERROR))
          goto LABEL_22;
        *(_DWORD *)buf = 138412290;
        v37 = v12;
        v27 = "Error: No message identifier for protobuf %@";
        v28 = v16;
        v29 = OS_LOG_TYPE_ERROR;
LABEL_21:
        _os_log_impl(&dword_213518000, v28, v29, v27, buf, 0xCu);
        goto LABEL_22;
      }
    }
LABEL_23:

    goto LABEL_24;
  }
  pk_General_log();
  v20 = objc_claimAutoreleasedReturnValue();
  v21 = os_log_type_enabled(v20, OS_LOG_TYPE_ERROR);

  if (v21)
  {
    pk_General_log();
    v22 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR))
    {
      v23 = *(void **)(a1 + 40);
      *(_DWORD *)buf = 138477827;
      v37 = v23;
      _os_log_impl(&dword_213518000, v22, OS_LOG_TYPE_ERROR, "Error: Unable to set car key encrypted product plan container with empty invitationIdentifier (%{private}@)", buf, 0xCu);
    }

  }
  v24 = *(_QWORD *)(a1 + 56);
  if (v24)
  {
    PKDisplayableErrorForCommonType();
    v8 = (NPKProtoCarKeySetEncryptedProductPlanIdentifierContainerRequest *)objc_claimAutoreleasedReturnValue();
    (*(void (**)(uint64_t, NPKProtoCarKeySetEncryptedProductPlanIdentifierContainerRequest *))(v24 + 16))(v24, v8);
LABEL_24:

  }
}

void __126__NPKPaymentWebServiceCompanionTargetDevice_carKeySetEncryptedProductPlanIdentifierContainer_invitationIdentifier_completion___block_invoke_828(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  _BOOL4 v5;
  NSObject *v6;
  uint64_t v7;
  int v8;
  id v9;
  uint64_t v10;

  v10 = *MEMORY[0x24BDAC8D0];
  v3 = a2;
  pk_Payment_log();
  v4 = objc_claimAutoreleasedReturnValue();
  v5 = os_log_type_enabled(v4, OS_LOG_TYPE_ERROR);

  if (v5)
  {
    pk_Payment_log();
    v6 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      v8 = 138412290;
      v9 = v3;
      _os_log_impl(&dword_213518000, v6, OS_LOG_TYPE_ERROR, "Error: Provisioning service outstanding request error handler invoked: %@", (uint8_t *)&v8, 0xCu);
    }

  }
  v7 = *(_QWORD *)(a1 + 32);
  if (v7)
    (*(void (**)(uint64_t, id))(v7 + 16))(v7, v3);

}

- (void)carKeySetEncryptedProductPlanIdentifierContainerResponse:(id)a3
{
  id v4;
  NSObject *v5;
  _BOOL4 v6;
  NSObject *v7;
  void *v8;
  void *v9;
  void *v10;
  NSObject *v11;
  NSObject *v12;
  _BOOL4 v13;
  NSObject *v14;
  uint64_t v15;
  uint8_t v16[8];
  _QWORD block[5];
  id v18;
  id v19;
  __int128 *p_buf;
  uint64_t *v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t (*v25)(uint64_t, uint64_t);
  void (*v26)(uint64_t);
  id v27;
  __int128 buf;
  uint64_t v29;
  uint64_t (*v30)(uint64_t, uint64_t);
  void (*v31)(uint64_t);
  id v32;
  uint64_t v33;

  v33 = *MEMORY[0x24BDAC8D0];
  v4 = a3;
  pk_Payment_log();
  v5 = objc_claimAutoreleasedReturnValue();
  v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    pk_Payment_log();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend(v4, "npkDescription");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      LODWORD(buf) = 138412290;
      *(_QWORD *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_213518000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Target carKeySetEncryptedProductPlanIdentifierContainerResponse: incoming protobuf %@", (uint8_t *)&buf, 0xCu);

    }
  }
  objc_msgSend(v4, "context");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "incomingResponseIdentifier");
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  *(_QWORD *)&buf = 0;
  *((_QWORD *)&buf + 1) = &buf;
  v29 = 0x3032000000;
  v30 = __Block_byref_object_copy__342;
  v31 = __Block_byref_object_dispose__343;
  v32 = 0;
  v22 = 0;
  v23 = &v22;
  v24 = 0x3032000000;
  v25 = __Block_byref_object_copy__23;
  v26 = __Block_byref_object_dispose__23;
  v27 = 0;
  if (v10)
  {
    -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
    v11 = objc_claimAutoreleasedReturnValue();
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 3221225472;
    block[2] = __102__NPKPaymentWebServiceCompanionTargetDevice_carKeySetEncryptedProductPlanIdentifierContainerResponse___block_invoke;
    block[3] = &unk_24CFED0D8;
    block[4] = self;
    v18 = v10;
    v19 = v4;
    p_buf = &buf;
    v21 = &v22;
    dispatch_sync(v11, block);

  }
  else
  {
    pk_Payment_log();
    v12 = objc_claimAutoreleasedReturnValue();
    v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      pk_Payment_log();
      v14 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)v16 = 0;
        _os_log_impl(&dword_213518000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v16, 2u);
      }

    }
  }
  v15 = *(_QWORD *)(*((_QWORD *)&buf + 1) + 40);
  if (v15)
    (*(void (**)(uint64_t, uint64_t))(v15 + 16))(v15, v23[5]);
  _Block_object_dispose(&v22, 8);

  _Block_object_dispose(&buf, 8);
}

void __102__NPKPaymentWebServiceCompanionTargetDevice_carKeySetEncryptedProductPlanIdentifierContainerResponse___block_invoke(uint64_t a1)
{
  void *v1;
  void *v3;
  void *v4;
  NPKProtoCarKeySetEncryptedProductPlanIdentifierContainerResponse *v5;
  void *v6;
  NPKProtoCarKeySetEncryptedProductPlanIdentifierContainerResponse *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  _BOOL4 v12;
  NSObject *v13;
  void *v14;
  NSObject *v15;
  _BOOL4 v16;
  NSObject *v17;
  __int16 v18[8];

  objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "objectForKey:", *(_QWORD *)(a1 + 40));
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  if (v4)
  {
    v5 = [NPKProtoCarKeySetEncryptedProductPlanIdentifierContainerResponse alloc];
    objc_msgSend(*(id *)(a1 + 48), "data");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    v7 = -[NPKProtoCarKeySetEncryptedProductPlanIdentifierContainerResponse initWithData:](v5, "initWithData:", v6);

    objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "removeObjectForKey:", *(_QWORD *)(a1 + 40));

    objc_msgSend(v4, "completionHandler");
    v9 = objc_claimAutoreleasedReturnValue();
    v10 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
    v11 = *(void **)(v10 + 40);
    *(_QWORD *)(v10 + 40) = v9;

    v12 = -[NPKProtoCarKeySetEncryptedProductPlanIdentifierContainerResponse hasErrorData](v7, "hasErrorData");
    if (v12)
    {
      -[NPKProtoCarKeySetEncryptedProductPlanIdentifierContainerResponse errorData](v7, "errorData");
      v1 = (void *)objc_claimAutoreleasedReturnValue();
      v13 = objc_opt_class();
      NPKSecureUnarchiveObject(v1, v13);
      v14 = (void *)objc_claimAutoreleasedReturnValue();
    }
    else
    {
      v14 = 0;
    }
    objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 40), v14);
    if (v12)
    {

    }
  }
  else
  {
    pk_Payment_log();
    v15 = objc_claimAutoreleasedReturnValue();
    v16 = os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT);

    if (v16)
    {
      pk_Payment_log();
      v17 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
      {
        v18[0] = 0;
        _os_log_impl(&dword_213518000, v17, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", (uint8_t *)v18, 2u);
      }

    }
  }

}

- (void)carKeyAccountAttestationRequestForCredential:(id)a3 completion:(id)a4
{
  id v6;
  id v7;
  NSObject *v8;
  NSObject *v9;
  _BOOL4 v10;
  NSObject *v11;
  void *v12;
  uint8_t v13[8];
  _QWORD block[4];
  id v15;
  NPKPaymentWebServiceCompanionTargetDevice *v16;
  id v17;

  v6 = a3;
  v7 = a4;
  if (-[NPKPaymentWebServiceCompanionTargetDevice _isSharingInAChainSupported](self, "_isSharingInAChainSupported"))
  {
    -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
    v8 = objc_claimAutoreleasedReturnValue();
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 3221225472;
    block[2] = __101__NPKPaymentWebServiceCompanionTargetDevice_carKeyAccountAttestationRequestForCredential_completion___block_invoke;
    block[3] = &unk_24CFED5E8;
    v15 = v6;
    v16 = self;
    v17 = v7;
    dispatch_sync(v8, block);

  }
  else
  {
    pk_Payment_log();
    v9 = objc_claimAutoreleasedReturnValue();
    v10 = os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT);

    if (v10)
    {
      pk_Payment_log();
      v11 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)v13 = 0;
        _os_log_impl(&dword_213518000, v11, OS_LOG_TYPE_DEFAULT, "Notice: Target device does not support carKeyAccountAttestationRequestForCredential:completion: message.", v13, 2u);
      }

    }
    if (v7)
    {
      objc_msgSend(MEMORY[0x24BDD1540], "errorWithDomain:code:userInfo:", CFSTR("com.apple.NPKErrorDomain"), -1006, 0);
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      (*((void (**)(id, _QWORD, void *))v7 + 2))(v7, 0, v12);

    }
  }

}

void __101__NPKPaymentWebServiceCompanionTargetDevice_carKeyAccountAttestationRequestForCredential_completion___block_invoke(uint64_t a1)
{
  NSObject *v2;
  _BOOL4 v3;
  NSObject *v4;
  void *v5;
  void *v6;
  NPKProtoCarKeyAccountAttestationRequest *v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  NSObject *v15;
  void *v16;
  void *v17;
  void *v18;
  NSObject *v19;
  _BOOL4 v20;
  NSObject *v21;
  void *v22;
  uint64_t v23;
  NSObject *v24;
  _BOOL4 v25;
  const char *v26;
  NSObject *v27;
  os_log_type_t v28;
  NSObject *v29;
  _BOOL4 v30;
  _QWORD v31[4];
  id v32;
  uint64_t v33;
  void *v34;
  uint8_t buf[4];
  void *v36;
  __int16 v37;
  void *v38;
  uint64_t v39;

  v39 = *MEMORY[0x24BDAC8D0];
  pk_General_log();
  v2 = objc_claimAutoreleasedReturnValue();
  v3 = os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT);

  if (v3)
  {
    pk_General_log();
    v4 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      v5 = *(void **)(a1 + 32);
      v6 = (void *)MEMORY[0x2199B6780](*(_QWORD *)(a1 + 48));
      *(_DWORD *)buf = 138478083;
      v36 = v5;
      v37 = 2112;
      v38 = v6;
      _os_log_impl(&dword_213518000, v4, OS_LOG_TYPE_DEFAULT, "Notice: Target device - Request to fetch car key account attestation for credential: (%{private}@), completion: %@", buf, 0x16u);

    }
  }
  if (*(_QWORD *)(a1 + 32))
  {
    v7 = objc_alloc_init(NPKProtoCarKeyAccountAttestationRequest);
    NPKSecureArchiveObject(*(void **)(a1 + 32));
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    -[NPKProtoCarKeyAccountAttestationRequest setCredentialData:](v7, "setCredentialData:", v8);

    v9 = objc_alloc(MEMORY[0x24BE4FE40]);
    -[NPKProtoCarKeyAccountAttestationRequest data](v7, "data");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    v11 = (void *)objc_msgSend(v9, "initWithProtobufData:type:isResponse:", v10, 144, 0);

    v12 = *(void **)(a1 + 40);
    v33 = *MEMORY[0x24BE4FB30];
    v34 = &unk_24D0566F0;
    objc_msgSend(MEMORY[0x24BDBCE70], "dictionaryWithObjects:forKeys:count:", &v34, &v33, 1);
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v12, "_sendProtobuf:responseExpected:extraOptions:", v11, 1, v13);
    v14 = (void *)objc_claimAutoreleasedReturnValue();

    if (v14)
    {
      if (*(_QWORD *)(a1 + 48))
      {
        v15 = MEMORY[0x2199B6780]();
        v31[0] = MEMORY[0x24BDAC760];
        v31[1] = 3221225472;
        v31[2] = __101__NPKPaymentWebServiceCompanionTargetDevice_carKeyAccountAttestationRequestForCredential_completion___block_invoke_831;
        v31[3] = &unk_24CFE7B80;
        v32 = *(id *)(a1 + 48);
        v16 = (void *)MEMORY[0x2199B6780](v31);
        v17 = *(void **)(a1 + 40);
        v18 = (void *)MEMORY[0x2199B6780](v15);
        objc_msgSend(v17, "_trackOutstandingRequestWithMessageIdentifier:completionHandler:errorHandler:", v14, v18, v16);

LABEL_22:
        goto LABEL_23;
      }
      pk_Payment_log();
      v29 = objc_claimAutoreleasedReturnValue();
      v30 = os_log_type_enabled(v29, OS_LOG_TYPE_DEFAULT);

      if (v30)
      {
        pk_Payment_log();
        v15 = objc_claimAutoreleasedReturnValue();
        if (!os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
          goto LABEL_22;
        *(_DWORD *)buf = 138412290;
        v36 = v14;
        v26 = "Warning: No response expected for message with identifier %@";
        v27 = v15;
        v28 = OS_LOG_TYPE_DEFAULT;
        goto LABEL_21;
      }
    }
    else
    {
      pk_Payment_log();
      v24 = objc_claimAutoreleasedReturnValue();
      v25 = os_log_type_enabled(v24, OS_LOG_TYPE_ERROR);

      if (v25)
      {
        pk_Payment_log();
        v15 = objc_claimAutoreleasedReturnValue();
        if (!os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
          goto LABEL_22;
        *(_DWORD *)buf = 138412290;
        v36 = v11;
        v26 = "Error: No message identifier for protobuf %@";
        v27 = v15;
        v28 = OS_LOG_TYPE_ERROR;
LABEL_21:
        _os_log_impl(&dword_213518000, v27, v28, v26, buf, 0xCu);
        goto LABEL_22;
      }
    }
LABEL_23:

    goto LABEL_24;
  }
  pk_General_log();
  v19 = objc_claimAutoreleasedReturnValue();
  v20 = os_log_type_enabled(v19, OS_LOG_TYPE_ERROR);

  if (v20)
  {
    pk_General_log();
    v21 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR))
    {
      v22 = *(void **)(a1 + 32);
      *(_DWORD *)buf = 138477827;
      v36 = v22;
      _os_log_impl(&dword_213518000, v21, OS_LOG_TYPE_ERROR, "Error: Unable to fetch car key account attestation with nil credential (%{private}@)", buf, 0xCu);
    }

  }
  v23 = *(_QWORD *)(a1 + 48);
  if (v23)
  {
    PKDisplayableErrorForCommonType();
    v7 = (NPKProtoCarKeyAccountAttestationRequest *)objc_claimAutoreleasedReturnValue();
    (*(void (**)(uint64_t, _QWORD, NPKProtoCarKeyAccountAttestationRequest *))(v23 + 16))(v23, 0, v7);
LABEL_24:

  }
}

void __101__NPKPaymentWebServiceCompanionTargetDevice_carKeyAccountAttestationRequestForCredential_completion___block_invoke_831(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  _BOOL4 v5;
  NSObject *v6;
  uint64_t v7;
  int v8;
  id v9;
  uint64_t v10;

  v10 = *MEMORY[0x24BDAC8D0];
  v3 = a2;
  pk_Payment_log();
  v4 = objc_claimAutoreleasedReturnValue();
  v5 = os_log_type_enabled(v4, OS_LOG_TYPE_ERROR);

  if (v5)
  {
    pk_Payment_log();
    v6 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      v8 = 138412290;
      v9 = v3;
      _os_log_impl(&dword_213518000, v6, OS_LOG_TYPE_ERROR, "Error: Provisioning service outstanding request error handler invoked: %@", (uint8_t *)&v8, 0xCu);
    }

  }
  v7 = *(_QWORD *)(a1 + 32);
  if (v7)
    (*(void (**)(uint64_t, _QWORD, id))(v7 + 16))(v7, 0, v3);

}

- (void)carKeyAccountAttestationResponse:(id)a3
{
  id v4;
  NSObject *v5;
  _BOOL4 v6;
  NSObject *v7;
  void *v8;
  void *v9;
  void *v10;
  NSObject *v11;
  NSObject *v12;
  _BOOL4 v13;
  NSObject *v14;
  uint64_t v15;
  uint8_t v16[16];
  _QWORD block[5];
  id v18;
  id v19;
  __int128 *p_buf;
  uint64_t *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t (*v26)(uint64_t, uint64_t);
  void (*v27)(uint64_t);
  id v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t (*v32)(uint64_t, uint64_t);
  void (*v33)(uint64_t);
  id v34;
  __int128 buf;
  uint64_t v36;
  uint64_t (*v37)(uint64_t, uint64_t);
  void (*v38)(uint64_t);
  id v39;
  uint64_t v40;

  v40 = *MEMORY[0x24BDAC8D0];
  v4 = a3;
  pk_Payment_log();
  v5 = objc_claimAutoreleasedReturnValue();
  v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    pk_Payment_log();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend(v4, "npkDescription");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      LODWORD(buf) = 138412290;
      *(_QWORD *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_213518000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Target carKeyAccountAttestationResponse: incoming protobuf %@", (uint8_t *)&buf, 0xCu);

    }
  }
  objc_msgSend(v4, "context");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "incomingResponseIdentifier");
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  *(_QWORD *)&buf = 0;
  *((_QWORD *)&buf + 1) = &buf;
  v36 = 0x3032000000;
  v37 = __Block_byref_object_copy__342;
  v38 = __Block_byref_object_dispose__343;
  v39 = 0;
  v29 = 0;
  v30 = &v29;
  v31 = 0x3032000000;
  v32 = __Block_byref_object_copy__23;
  v33 = __Block_byref_object_dispose__23;
  v34 = 0;
  v23 = 0;
  v24 = &v23;
  v25 = 0x3032000000;
  v26 = __Block_byref_object_copy__23;
  v27 = __Block_byref_object_dispose__23;
  v28 = 0;
  if (v10)
  {
    -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
    v11 = objc_claimAutoreleasedReturnValue();
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 3221225472;
    block[2] = __78__NPKPaymentWebServiceCompanionTargetDevice_carKeyAccountAttestationResponse___block_invoke;
    block[3] = &unk_24CFED060;
    block[4] = self;
    v18 = v10;
    v19 = v4;
    p_buf = &buf;
    v21 = &v29;
    v22 = &v23;
    dispatch_sync(v11, block);

  }
  else
  {
    pk_Payment_log();
    v12 = objc_claimAutoreleasedReturnValue();
    v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      pk_Payment_log();
      v14 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)v16 = 0;
        _os_log_impl(&dword_213518000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v16, 2u);
      }

    }
  }
  v15 = *(_QWORD *)(*((_QWORD *)&buf + 1) + 40);
  if (v15)
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v15, v30[5], v24[5]);
  _Block_object_dispose(&v23, 8);

  _Block_object_dispose(&v29, 8);
  _Block_object_dispose(&buf, 8);

}

void __78__NPKPaymentWebServiceCompanionTargetDevice_carKeyAccountAttestationResponse___block_invoke(uint64_t a1)
{
  void *v1;
  void *v3;
  void *v4;
  NPKProtoCarKeyAccountAttestationResponse *v5;
  void *v6;
  NPKProtoCarKeyAccountAttestationResponse *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  _BOOL4 v12;
  NSObject *v13;
  void *v14;
  NSObject *v15;
  _BOOL4 v16;
  NSObject *v17;
  _BOOL4 v18;
  NSObject *v19;
  void *v20;
  __int16 v21[8];

  objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "objectForKey:", *(_QWORD *)(a1 + 40));
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  if (v4)
  {
    v5 = [NPKProtoCarKeyAccountAttestationResponse alloc];
    objc_msgSend(*(id *)(a1 + 48), "data");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    v7 = -[NPKProtoCarKeyAccountAttestationResponse initWithData:](v5, "initWithData:", v6);

    objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "removeObjectForKey:", *(_QWORD *)(a1 + 40));

    objc_msgSend(v4, "completionHandler");
    v9 = objc_claimAutoreleasedReturnValue();
    v10 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
    v11 = *(void **)(v10 + 40);
    *(_QWORD *)(v10 + 40) = v9;

    v12 = -[NPKProtoCarKeyAccountAttestationResponse hasAttestationRequestData](v7, "hasAttestationRequestData");
    if (v12)
    {
      -[NPKProtoCarKeyAccountAttestationResponse attestationRequestData](v7, "attestationRequestData");
      v1 = (void *)objc_claimAutoreleasedReturnValue();
      v13 = objc_opt_class();
      NPKSecureUnarchiveObject(v1, v13);
      v14 = (void *)objc_claimAutoreleasedReturnValue();
    }
    else
    {
      v14 = 0;
    }
    objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 40), v14);
    if (v12)
    {

    }
    v18 = -[NPKProtoCarKeyAccountAttestationResponse hasErrorData](v7, "hasErrorData");
    if (v18)
    {
      -[NPKProtoCarKeyAccountAttestationResponse errorData](v7, "errorData");
      v1 = (void *)objc_claimAutoreleasedReturnValue();
      v19 = objc_opt_class();
      NPKSecureUnarchiveObject(v1, v19);
      v20 = (void *)objc_claimAutoreleasedReturnValue();
    }
    else
    {
      v20 = 0;
    }
    objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 72) + 8) + 40), v20);
    if (v18)
    {

    }
  }
  else
  {
    pk_Payment_log();
    v15 = objc_claimAutoreleasedReturnValue();
    v16 = os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT);

    if (v16)
    {
      pk_Payment_log();
      v17 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
      {
        v21[0] = 0;
        _os_log_impl(&dword_213518000, v17, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", (uint8_t *)v21, 2u);
      }

    }
  }

}

- (void)carKeyGetPretrackRequestForKeyWithInvitationIdentifier:(id)a3 completion:(id)a4
{
  id v6;
  id v7;
  NSObject *v8;
  NSObject *v9;
  _BOOL4 v10;
  NSObject *v11;
  void *v12;
  uint8_t v13[8];
  _QWORD block[4];
  id v15;
  NPKPaymentWebServiceCompanionTargetDevice *v16;
  id v17;

  v6 = a3;
  v7 = a4;
  if (-[NPKPaymentWebServiceCompanionTargetDevice _isSharingInAChainSupported](self, "_isSharingInAChainSupported"))
  {
    -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
    v8 = objc_claimAutoreleasedReturnValue();
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 3221225472;
    block[2] = __111__NPKPaymentWebServiceCompanionTargetDevice_carKeyGetPretrackRequestForKeyWithInvitationIdentifier_completion___block_invoke;
    block[3] = &unk_24CFED5E8;
    v15 = v6;
    v16 = self;
    v17 = v7;
    dispatch_sync(v8, block);

  }
  else
  {
    pk_Payment_log();
    v9 = objc_claimAutoreleasedReturnValue();
    v10 = os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT);

    if (v10)
    {
      pk_Payment_log();
      v11 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)v13 = 0;
        _os_log_impl(&dword_213518000, v11, OS_LOG_TYPE_DEFAULT, "Notice: Target device does not support carKeyGetPretrackRequestForKeyWithInvitationIdentifier:completion: message.", v13, 2u);
      }

    }
    if (v7)
    {
      objc_msgSend(MEMORY[0x24BDD1540], "errorWithDomain:code:userInfo:", CFSTR("com.apple.NPKErrorDomain"), -1006, 0);
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      (*((void (**)(id, _QWORD, void *))v7 + 2))(v7, 0, v12);

    }
  }

}

void __111__NPKPaymentWebServiceCompanionTargetDevice_carKeyGetPretrackRequestForKeyWithInvitationIdentifier_completion___block_invoke(uint64_t a1)
{
  NSObject *v2;
  _BOOL4 v3;
  NSObject *v4;
  void *v5;
  void *v6;
  NPKProtoCarKeyGetPretrackRequest *v7;
  id v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  NSObject *v14;
  void *v15;
  void *v16;
  void *v17;
  NSObject *v18;
  _BOOL4 v19;
  NSObject *v20;
  void *v21;
  uint64_t v22;
  NSObject *v23;
  _BOOL4 v24;
  const char *v25;
  NSObject *v26;
  os_log_type_t v27;
  NSObject *v28;
  _BOOL4 v29;
  _QWORD v30[4];
  id v31;
  uint64_t v32;
  void *v33;
  uint8_t buf[4];
  void *v35;
  __int16 v36;
  void *v37;
  uint64_t v38;

  v38 = *MEMORY[0x24BDAC8D0];
  pk_General_log();
  v2 = objc_claimAutoreleasedReturnValue();
  v3 = os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT);

  if (v3)
  {
    pk_General_log();
    v4 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      v5 = *(void **)(a1 + 32);
      v6 = (void *)MEMORY[0x2199B6780](*(_QWORD *)(a1 + 48));
      *(_DWORD *)buf = 138478083;
      v35 = v5;
      v36 = 2112;
      v37 = v6;
      _os_log_impl(&dword_213518000, v4, OS_LOG_TYPE_DEFAULT, "Notice: Target device - Request to get pretrack request for car key with invitationIdentifier: (%{private}@), completion: %@", buf, 0x16u);

    }
  }
  if (objc_msgSend(*(id *)(a1 + 32), "length"))
  {
    v7 = objc_alloc_init(NPKProtoCarKeyGetPretrackRequest);
    -[NPKProtoCarKeyGetPretrackRequest setInvitationIdentifier:](v7, "setInvitationIdentifier:", *(_QWORD *)(a1 + 32));
    v8 = objc_alloc(MEMORY[0x24BE4FE40]);
    -[NPKProtoCarKeyGetPretrackRequest data](v7, "data");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    v10 = (void *)objc_msgSend(v8, "initWithProtobufData:type:isResponse:", v9, 145, 0);

    v11 = *(void **)(a1 + 40);
    v32 = *MEMORY[0x24BE4FB30];
    v33 = &unk_24D0566F0;
    objc_msgSend(MEMORY[0x24BDBCE70], "dictionaryWithObjects:forKeys:count:", &v33, &v32, 1);
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v11, "_sendProtobuf:responseExpected:extraOptions:", v10, 1, v12);
    v13 = (void *)objc_claimAutoreleasedReturnValue();

    if (v13)
    {
      if (*(_QWORD *)(a1 + 48))
      {
        v14 = MEMORY[0x2199B6780]();
        v30[0] = MEMORY[0x24BDAC760];
        v30[1] = 3221225472;
        v30[2] = __111__NPKPaymentWebServiceCompanionTargetDevice_carKeyGetPretrackRequestForKeyWithInvitationIdentifier_completion___block_invoke_835;
        v30[3] = &unk_24CFE7B80;
        v31 = *(id *)(a1 + 48);
        v15 = (void *)MEMORY[0x2199B6780](v30);
        v16 = *(void **)(a1 + 40);
        v17 = (void *)MEMORY[0x2199B6780](v14);
        objc_msgSend(v16, "_trackOutstandingRequestWithMessageIdentifier:completionHandler:errorHandler:", v13, v17, v15);

LABEL_22:
        goto LABEL_23;
      }
      pk_Payment_log();
      v28 = objc_claimAutoreleasedReturnValue();
      v29 = os_log_type_enabled(v28, OS_LOG_TYPE_DEFAULT);

      if (v29)
      {
        pk_Payment_log();
        v14 = objc_claimAutoreleasedReturnValue();
        if (!os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
          goto LABEL_22;
        *(_DWORD *)buf = 138412290;
        v35 = v13;
        v25 = "Warning: No response expected for message with identifier %@";
        v26 = v14;
        v27 = OS_LOG_TYPE_DEFAULT;
        goto LABEL_21;
      }
    }
    else
    {
      pk_Payment_log();
      v23 = objc_claimAutoreleasedReturnValue();
      v24 = os_log_type_enabled(v23, OS_LOG_TYPE_ERROR);

      if (v24)
      {
        pk_Payment_log();
        v14 = objc_claimAutoreleasedReturnValue();
        if (!os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
          goto LABEL_22;
        *(_DWORD *)buf = 138412290;
        v35 = v10;
        v25 = "Error: No message identifier for protobuf %@";
        v26 = v14;
        v27 = OS_LOG_TYPE_ERROR;
LABEL_21:
        _os_log_impl(&dword_213518000, v26, v27, v25, buf, 0xCu);
        goto LABEL_22;
      }
    }
LABEL_23:

    goto LABEL_24;
  }
  pk_General_log();
  v18 = objc_claimAutoreleasedReturnValue();
  v19 = os_log_type_enabled(v18, OS_LOG_TYPE_ERROR);

  if (v19)
  {
    pk_General_log();
    v20 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR))
    {
      v21 = *(void **)(a1 + 32);
      *(_DWORD *)buf = 138477827;
      v35 = v21;
      _os_log_impl(&dword_213518000, v20, OS_LOG_TYPE_ERROR, "Error: Unable to get pretrack request for car key with nil invitationIdentifier (%{private}@)", buf, 0xCu);
    }

  }
  v22 = *(_QWORD *)(a1 + 48);
  if (v22)
  {
    PKDisplayableErrorForCommonType();
    v7 = (NPKProtoCarKeyGetPretrackRequest *)objc_claimAutoreleasedReturnValue();
    (*(void (**)(uint64_t, _QWORD, NPKProtoCarKeyGetPretrackRequest *))(v22 + 16))(v22, 0, v7);
LABEL_24:

  }
}

void __111__NPKPaymentWebServiceCompanionTargetDevice_carKeyGetPretrackRequestForKeyWithInvitationIdentifier_completion___block_invoke_835(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  _BOOL4 v5;
  NSObject *v6;
  uint64_t v7;
  int v8;
  id v9;
  uint64_t v10;

  v10 = *MEMORY[0x24BDAC8D0];
  v3 = a2;
  pk_Payment_log();
  v4 = objc_claimAutoreleasedReturnValue();
  v5 = os_log_type_enabled(v4, OS_LOG_TYPE_ERROR);

  if (v5)
  {
    pk_Payment_log();
    v6 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      v8 = 138412290;
      v9 = v3;
      _os_log_impl(&dword_213518000, v6, OS_LOG_TYPE_ERROR, "Error: Provisioning service outstanding request error handler invoked: %@", (uint8_t *)&v8, 0xCu);
    }

  }
  v7 = *(_QWORD *)(a1 + 32);
  if (v7)
    (*(void (**)(uint64_t, _QWORD, id))(v7 + 16))(v7, 0, v3);

}

- (void)carKeyGetPretrackResponse:(id)a3
{
  id v4;
  NSObject *v5;
  _BOOL4 v6;
  NSObject *v7;
  void *v8;
  void *v9;
  void *v10;
  NSObject *v11;
  NSObject *v12;
  _BOOL4 v13;
  NSObject *v14;
  uint64_t v15;
  uint8_t v16[16];
  _QWORD block[5];
  id v18;
  id v19;
  __int128 *p_buf;
  uint64_t *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t (*v26)(uint64_t, uint64_t);
  void (*v27)(uint64_t);
  id v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t (*v32)(uint64_t, uint64_t);
  void (*v33)(uint64_t);
  id v34;
  __int128 buf;
  uint64_t v36;
  uint64_t (*v37)(uint64_t, uint64_t);
  void (*v38)(uint64_t);
  id v39;
  uint64_t v40;

  v40 = *MEMORY[0x24BDAC8D0];
  v4 = a3;
  pk_Payment_log();
  v5 = objc_claimAutoreleasedReturnValue();
  v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    pk_Payment_log();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend(v4, "npkDescription");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      LODWORD(buf) = 138412290;
      *(_QWORD *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_213518000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Target carKeyGetPretrackResponse: incoming protobuf %@", (uint8_t *)&buf, 0xCu);

    }
  }
  objc_msgSend(v4, "context");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "incomingResponseIdentifier");
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  *(_QWORD *)&buf = 0;
  *((_QWORD *)&buf + 1) = &buf;
  v36 = 0x3032000000;
  v37 = __Block_byref_object_copy__342;
  v38 = __Block_byref_object_dispose__343;
  v39 = 0;
  v29 = 0;
  v30 = &v29;
  v31 = 0x3032000000;
  v32 = __Block_byref_object_copy__23;
  v33 = __Block_byref_object_dispose__23;
  v34 = 0;
  v23 = 0;
  v24 = &v23;
  v25 = 0x3032000000;
  v26 = __Block_byref_object_copy__23;
  v27 = __Block_byref_object_dispose__23;
  v28 = 0;
  if (v10)
  {
    -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
    v11 = objc_claimAutoreleasedReturnValue();
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 3221225472;
    block[2] = __71__NPKPaymentWebServiceCompanionTargetDevice_carKeyGetPretrackResponse___block_invoke;
    block[3] = &unk_24CFED060;
    block[4] = self;
    v18 = v10;
    v19 = v4;
    p_buf = &buf;
    v21 = &v29;
    v22 = &v23;
    dispatch_sync(v11, block);

  }
  else
  {
    pk_Payment_log();
    v12 = objc_claimAutoreleasedReturnValue();
    v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      pk_Payment_log();
      v14 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)v16 = 0;
        _os_log_impl(&dword_213518000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v16, 2u);
      }

    }
  }
  v15 = *(_QWORD *)(*((_QWORD *)&buf + 1) + 40);
  if (v15)
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v15, v30[5], v24[5]);
  _Block_object_dispose(&v23, 8);

  _Block_object_dispose(&v29, 8);
  _Block_object_dispose(&buf, 8);

}

void __71__NPKPaymentWebServiceCompanionTargetDevice_carKeyGetPretrackResponse___block_invoke(uint64_t a1)
{
  void *v1;
  void *v3;
  void *v4;
  NPKProtoCarKeyGetPretrackResponse *v5;
  void *v6;
  NPKProtoCarKeyGetPretrackResponse *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  _BOOL4 v12;
  NSObject *v13;
  void *v14;
  NSObject *v15;
  _BOOL4 v16;
  NSObject *v17;
  _BOOL4 v18;
  NSObject *v19;
  void *v20;
  __int16 v21[8];

  objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "objectForKey:", *(_QWORD *)(a1 + 40));
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  if (v4)
  {
    v5 = [NPKProtoCarKeyGetPretrackResponse alloc];
    objc_msgSend(*(id *)(a1 + 48), "data");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    v7 = -[NPKProtoCarKeyGetPretrackResponse initWithData:](v5, "initWithData:", v6);

    objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "removeObjectForKey:", *(_QWORD *)(a1 + 40));

    objc_msgSend(v4, "completionHandler");
    v9 = objc_claimAutoreleasedReturnValue();
    v10 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
    v11 = *(void **)(v10 + 40);
    *(_QWORD *)(v10 + 40) = v9;

    v12 = -[NPKProtoCarKeyGetPretrackResponse hasPreTrackRequestData](v7, "hasPreTrackRequestData");
    if (v12)
    {
      -[NPKProtoCarKeyGetPretrackResponse preTrackRequestData](v7, "preTrackRequestData");
      v1 = (void *)objc_claimAutoreleasedReturnValue();
      v13 = objc_opt_class();
      NPKSecureUnarchiveObject(v1, v13);
      v14 = (void *)objc_claimAutoreleasedReturnValue();
    }
    else
    {
      v14 = 0;
    }
    objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 40), v14);
    if (v12)
    {

    }
    v18 = -[NPKProtoCarKeyGetPretrackResponse hasErrorData](v7, "hasErrorData");
    if (v18)
    {
      -[NPKProtoCarKeyGetPretrackResponse errorData](v7, "errorData");
      v1 = (void *)objc_claimAutoreleasedReturnValue();
      v19 = objc_opt_class();
      NPKSecureUnarchiveObject(v1, v19);
      v20 = (void *)objc_claimAutoreleasedReturnValue();
    }
    else
    {
      v20 = 0;
    }
    objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 72) + 8) + 40), v20);
    if (v18)
    {

    }
  }
  else
  {
    pk_Payment_log();
    v15 = objc_claimAutoreleasedReturnValue();
    v16 = os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT);

    if (v16)
    {
      pk_Payment_log();
      v17 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
      {
        v21[0] = 0;
        _os_log_impl(&dword_213518000, v17, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", (uint8_t *)v21, 2u);
      }

    }
  }

}

- (void)carKeySetAccountAttestation:(id)a3 forCredential:(id)a4 completion:(id)a5
{
  id v8;
  id v9;
  id v10;
  NSObject *v11;
  NSObject *v12;
  _BOOL4 v13;
  NSObject *v14;
  void *v15;
  uint8_t v16[16];
  _QWORD block[4];
  id v18;
  id v19;
  NPKPaymentWebServiceCompanionTargetDevice *v20;
  id v21;

  v8 = a3;
  v9 = a4;
  v10 = a5;
  if (-[NPKPaymentWebServiceCompanionTargetDevice _isSharingInAChainSupported](self, "_isSharingInAChainSupported"))
  {
    -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
    v11 = objc_claimAutoreleasedReturnValue();
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 3221225472;
    block[2] = __98__NPKPaymentWebServiceCompanionTargetDevice_carKeySetAccountAttestation_forCredential_completion___block_invoke;
    block[3] = &unk_24CFE8740;
    v18 = v8;
    v19 = v9;
    v20 = self;
    v21 = v10;
    dispatch_sync(v11, block);

  }
  else
  {
    pk_Payment_log();
    v12 = objc_claimAutoreleasedReturnValue();
    v13 = os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT);

    if (v13)
    {
      pk_Payment_log();
      v14 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)v16 = 0;
        _os_log_impl(&dword_213518000, v14, OS_LOG_TYPE_DEFAULT, "Notice: Target device does not support carKeySetAccountAttestation:forCredential:completion: message.", v16, 2u);
      }

    }
    if (v10)
    {
      objc_msgSend(MEMORY[0x24BDD1540], "errorWithDomain:code:userInfo:", CFSTR("com.apple.NPKErrorDomain"), -1006, 0);
      v15 = (void *)objc_claimAutoreleasedReturnValue();
      (*((void (**)(id, void *))v10 + 2))(v10, v15);

    }
  }

}

void __98__NPKPaymentWebServiceCompanionTargetDevice_carKeySetAccountAttestation_forCredential_completion___block_invoke(uint64_t a1)
{
  NSObject *v2;
  _BOOL4 v3;
  NSObject *v4;
  void *v5;
  uint64_t v6;
  void *v7;
  NPKProtoCarKeySetAccountAttestationRequest *v8;
  void *v9;
  id v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  NSObject *v16;
  void *v17;
  void *v18;
  void *v19;
  NSObject *v20;
  _BOOL4 v21;
  NSObject *v22;
  void *v23;
  uint64_t v24;
  NSObject *v25;
  _BOOL4 v26;
  const char *v27;
  NSObject *v28;
  os_log_type_t v29;
  NSObject *v30;
  _BOOL4 v31;
  _QWORD v32[4];
  id v33;
  uint64_t v34;
  void *v35;
  uint8_t buf[4];
  void *v37;
  __int16 v38;
  uint64_t v39;
  __int16 v40;
  void *v41;
  uint64_t v42;

  v42 = *MEMORY[0x24BDAC8D0];
  pk_General_log();
  v2 = objc_claimAutoreleasedReturnValue();
  v3 = os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT);

  if (v3)
  {
    pk_General_log();
    v4 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      v5 = *(void **)(a1 + 32);
      v6 = *(_QWORD *)(a1 + 40);
      v7 = (void *)MEMORY[0x2199B6780](*(_QWORD *)(a1 + 56));
      *(_DWORD *)buf = 138478339;
      v37 = v5;
      v38 = 2113;
      v39 = v6;
      v40 = 2112;
      v41 = v7;
      _os_log_impl(&dword_213518000, v4, OS_LOG_TYPE_DEFAULT, "Notice: Target device - Request to set car key account attestation: (%{private}@), credential: (%{private}@), completion: %@", buf, 0x20u);

    }
  }
  if (*(_QWORD *)(a1 + 40))
  {
    v8 = objc_alloc_init(NPKProtoCarKeySetAccountAttestationRequest);
    -[NPKProtoCarKeySetAccountAttestationRequest setAttestation:](v8, "setAttestation:", *(_QWORD *)(a1 + 32));
    NPKSecureArchiveObject(*(void **)(a1 + 40));
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    -[NPKProtoCarKeySetAccountAttestationRequest setCredentialData:](v8, "setCredentialData:", v9);

    v10 = objc_alloc(MEMORY[0x24BE4FE40]);
    -[NPKProtoCarKeySetAccountAttestationRequest data](v8, "data");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    v12 = (void *)objc_msgSend(v10, "initWithProtobufData:type:isResponse:", v11, 146, 0);

    v13 = *(void **)(a1 + 48);
    v34 = *MEMORY[0x24BE4FB30];
    v35 = &unk_24D0566F0;
    objc_msgSend(MEMORY[0x24BDBCE70], "dictionaryWithObjects:forKeys:count:", &v35, &v34, 1);
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v13, "_sendProtobuf:responseExpected:extraOptions:", v12, 1, v14);
    v15 = (void *)objc_claimAutoreleasedReturnValue();

    if (v15)
    {
      if (*(_QWORD *)(a1 + 56))
      {
        v16 = MEMORY[0x2199B6780]();
        v32[0] = MEMORY[0x24BDAC760];
        v32[1] = 3221225472;
        v32[2] = __98__NPKPaymentWebServiceCompanionTargetDevice_carKeySetAccountAttestation_forCredential_completion___block_invoke_838;
        v32[3] = &unk_24CFE7B80;
        v33 = *(id *)(a1 + 56);
        v17 = (void *)MEMORY[0x2199B6780](v32);
        v18 = *(void **)(a1 + 48);
        v19 = (void *)MEMORY[0x2199B6780](v16);
        objc_msgSend(v18, "_trackOutstandingRequestWithMessageIdentifier:completionHandler:errorHandler:", v15, v19, v17);

LABEL_22:
        goto LABEL_23;
      }
      pk_Payment_log();
      v30 = objc_claimAutoreleasedReturnValue();
      v31 = os_log_type_enabled(v30, OS_LOG_TYPE_DEFAULT);

      if (v31)
      {
        pk_Payment_log();
        v16 = objc_claimAutoreleasedReturnValue();
        if (!os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
          goto LABEL_22;
        *(_DWORD *)buf = 138412290;
        v37 = v15;
        v27 = "Warning: No response expected for message with identifier %@";
        v28 = v16;
        v29 = OS_LOG_TYPE_DEFAULT;
        goto LABEL_21;
      }
    }
    else
    {
      pk_Payment_log();
      v25 = objc_claimAutoreleasedReturnValue();
      v26 = os_log_type_enabled(v25, OS_LOG_TYPE_ERROR);

      if (v26)
      {
        pk_Payment_log();
        v16 = objc_claimAutoreleasedReturnValue();
        if (!os_log_type_enabled(v16, OS_LOG_TYPE_ERROR))
          goto LABEL_22;
        *(_DWORD *)buf = 138412290;
        v37 = v12;
        v27 = "Error: No message identifier for protobuf %@";
        v28 = v16;
        v29 = OS_LOG_TYPE_ERROR;
LABEL_21:
        _os_log_impl(&dword_213518000, v28, v29, v27, buf, 0xCu);
        goto LABEL_22;
      }
    }
LABEL_23:

    goto LABEL_24;
  }
  pk_General_log();
  v20 = objc_claimAutoreleasedReturnValue();
  v21 = os_log_type_enabled(v20, OS_LOG_TYPE_ERROR);

  if (v21)
  {
    pk_General_log();
    v22 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR))
    {
      v23 = *(void **)(a1 + 40);
      *(_DWORD *)buf = 138477827;
      v37 = v23;
      _os_log_impl(&dword_213518000, v22, OS_LOG_TYPE_ERROR, "Error: Unable to  set car key account attestation with nil credential (%{private}@)", buf, 0xCu);
    }

  }
  v24 = *(_QWORD *)(a1 + 56);
  if (v24)
  {
    PKDisplayableErrorForCommonType();
    v8 = (NPKProtoCarKeySetAccountAttestationRequest *)objc_claimAutoreleasedReturnValue();
    (*(void (**)(uint64_t, NPKProtoCarKeySetAccountAttestationRequest *))(v24 + 16))(v24, v8);
LABEL_24:

  }
}

void __98__NPKPaymentWebServiceCompanionTargetDevice_carKeySetAccountAttestation_forCredential_completion___block_invoke_838(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  _BOOL4 v5;
  NSObject *v6;
  uint64_t v7;
  int v8;
  id v9;
  uint64_t v10;

  v10 = *MEMORY[0x24BDAC8D0];
  v3 = a2;
  pk_Payment_log();
  v4 = objc_claimAutoreleasedReturnValue();
  v5 = os_log_type_enabled(v4, OS_LOG_TYPE_ERROR);

  if (v5)
  {
    pk_Payment_log();
    v6 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      v8 = 138412290;
      v9 = v3;
      _os_log_impl(&dword_213518000, v6, OS_LOG_TYPE_ERROR, "Error: Provisioning service outstanding request error handler invoked: %@", (uint8_t *)&v8, 0xCu);
    }

  }
  v7 = *(_QWORD *)(a1 + 32);
  if (v7)
    (*(void (**)(uint64_t, id))(v7 + 16))(v7, v3);

}

- (void)carKeySetAccountAttestationResponse:(id)a3
{
  id v4;
  NSObject *v5;
  _BOOL4 v6;
  NSObject *v7;
  void *v8;
  void *v9;
  void *v10;
  NSObject *v11;
  NSObject *v12;
  _BOOL4 v13;
  NSObject *v14;
  uint64_t v15;
  uint8_t v16[8];
  _QWORD block[5];
  id v18;
  id v19;
  __int128 *p_buf;
  uint64_t *v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t (*v25)(uint64_t, uint64_t);
  void (*v26)(uint64_t);
  id v27;
  __int128 buf;
  uint64_t v29;
  uint64_t (*v30)(uint64_t, uint64_t);
  void (*v31)(uint64_t);
  id v32;
  uint64_t v33;

  v33 = *MEMORY[0x24BDAC8D0];
  v4 = a3;
  pk_Payment_log();
  v5 = objc_claimAutoreleasedReturnValue();
  v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    pk_Payment_log();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend(v4, "npkDescription");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      LODWORD(buf) = 138412290;
      *(_QWORD *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_213518000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Target carKeySetAccountAttestationResponse: incoming protobuf %@", (uint8_t *)&buf, 0xCu);

    }
  }
  objc_msgSend(v4, "context");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "incomingResponseIdentifier");
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  *(_QWORD *)&buf = 0;
  *((_QWORD *)&buf + 1) = &buf;
  v29 = 0x3032000000;
  v30 = __Block_byref_object_copy__342;
  v31 = __Block_byref_object_dispose__343;
  v32 = 0;
  v22 = 0;
  v23 = &v22;
  v24 = 0x3032000000;
  v25 = __Block_byref_object_copy__23;
  v26 = __Block_byref_object_dispose__23;
  v27 = 0;
  if (v10)
  {
    -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
    v11 = objc_claimAutoreleasedReturnValue();
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 3221225472;
    block[2] = __81__NPKPaymentWebServiceCompanionTargetDevice_carKeySetAccountAttestationResponse___block_invoke;
    block[3] = &unk_24CFED0D8;
    block[4] = self;
    v18 = v10;
    v19 = v4;
    p_buf = &buf;
    v21 = &v22;
    dispatch_sync(v11, block);

  }
  else
  {
    pk_Payment_log();
    v12 = objc_claimAutoreleasedReturnValue();
    v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      pk_Payment_log();
      v14 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)v16 = 0;
        _os_log_impl(&dword_213518000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v16, 2u);
      }

    }
  }
  v15 = *(_QWORD *)(*((_QWORD *)&buf + 1) + 40);
  if (v15)
    (*(void (**)(uint64_t, uint64_t))(v15 + 16))(v15, v23[5]);
  _Block_object_dispose(&v22, 8);

  _Block_object_dispose(&buf, 8);
}

void __81__NPKPaymentWebServiceCompanionTargetDevice_carKeySetAccountAttestationResponse___block_invoke(uint64_t a1)
{
  void *v1;
  void *v3;
  void *v4;
  NPKProtoCarKeySetAccountAttestationResponse *v5;
  void *v6;
  NPKProtoCarKeySetAccountAttestationResponse *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  _BOOL4 v12;
  NSObject *v13;
  void *v14;
  NSObject *v15;
  _BOOL4 v16;
  NSObject *v17;
  __int16 v18[8];

  objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "objectForKey:", *(_QWORD *)(a1 + 40));
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  if (v4)
  {
    v5 = [NPKProtoCarKeySetAccountAttestationResponse alloc];
    objc_msgSend(*(id *)(a1 + 48), "data");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    v7 = -[NPKProtoCarKeySetAccountAttestationResponse initWithData:](v5, "initWithData:", v6);

    objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "removeObjectForKey:", *(_QWORD *)(a1 + 40));

    objc_msgSend(v4, "completionHandler");
    v9 = objc_claimAutoreleasedReturnValue();
    v10 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
    v11 = *(void **)(v10 + 40);
    *(_QWORD *)(v10 + 40) = v9;

    v12 = -[NPKProtoCarKeySetAccountAttestationResponse hasErrorData](v7, "hasErrorData");
    if (v12)
    {
      -[NPKProtoCarKeySetAccountAttestationResponse errorData](v7, "errorData");
      v1 = (void *)objc_claimAutoreleasedReturnValue();
      v13 = objc_opt_class();
      NPKSecureUnarchiveObject(v1, v13);
      v14 = (void *)objc_claimAutoreleasedReturnValue();
    }
    else
    {
      v14 = 0;
    }
    objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 40), v14);
    if (v12)
    {

    }
  }
  else
  {
    pk_Payment_log();
    v15 = objc_claimAutoreleasedReturnValue();
    v16 = os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT);

    if (v16)
    {
      pk_Payment_log();
      v17 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
      {
        v18[0] = 0;
        _os_log_impl(&dword_213518000, v17, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", (uint8_t *)v18, 2u);
      }

    }
  }

}

- (void)carKeyUpdateTrackingAttestation:(id)a3 forCredential:(id)a4 encryptedContainer:(id)a5 completion:(id)a6
{
  id v10;
  id v11;
  id v12;
  id v13;
  NSObject *v14;
  NSObject *v15;
  _BOOL4 v16;
  NSObject *v17;
  uint8_t v18[8];
  _QWORD block[4];
  id v20;
  id v21;
  id v22;
  NPKPaymentWebServiceCompanionTargetDevice *v23;
  id v24;

  v10 = a3;
  v11 = a4;
  v12 = a5;
  v13 = a6;
  if (-[NPKPaymentWebServiceCompanionTargetDevice _isSharingInAChainSupported](self, "_isSharingInAChainSupported"))
  {
    -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
    v14 = objc_claimAutoreleasedReturnValue();
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 3221225472;
    block[2] = __121__NPKPaymentWebServiceCompanionTargetDevice_carKeyUpdateTrackingAttestation_forCredential_encryptedContainer_completion___block_invoke;
    block[3] = &unk_24CFEDBB8;
    v20 = v10;
    v21 = v11;
    v22 = v12;
    v23 = self;
    v24 = v13;
    dispatch_sync(v14, block);

  }
  else
  {
    pk_Payment_log();
    v15 = objc_claimAutoreleasedReturnValue();
    v16 = os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT);

    if (v16)
    {
      pk_Payment_log();
      v17 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)v18 = 0;
        _os_log_impl(&dword_213518000, v17, OS_LOG_TYPE_DEFAULT, "Notice: Target device does not support carKeyUpdateTrackingAttestation:forCredential:encryptedContainer:completion: message.", v18, 2u);
      }

    }
    if (v13)
      (*((void (**)(id, _QWORD))v13 + 2))(v13, 0);
  }

}

void __121__NPKPaymentWebServiceCompanionTargetDevice_carKeyUpdateTrackingAttestation_forCredential_encryptedContainer_completion___block_invoke(uint64_t a1)
{
  NSObject *v2;
  _BOOL4 v3;
  NSObject *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  NPKProtoCarKeyUpdateTrackingAttestationRequest *v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  NSObject *v18;
  void *v19;
  void *v20;
  void *v21;
  NSObject *v22;
  _BOOL4 v23;
  NSObject *v24;
  void *v25;
  uint64_t v26;
  NSObject *v27;
  _BOOL4 v28;
  const char *v29;
  NSObject *v30;
  os_log_type_t v31;
  NSObject *v32;
  _BOOL4 v33;
  _QWORD v34[4];
  id v35;
  uint64_t v36;
  void *v37;
  uint8_t buf[4];
  void *v39;
  __int16 v40;
  uint64_t v41;
  __int16 v42;
  uint64_t v43;
  __int16 v44;
  void *v45;
  uint64_t v46;

  v46 = *MEMORY[0x24BDAC8D0];
  pk_General_log();
  v2 = objc_claimAutoreleasedReturnValue();
  v3 = os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT);

  if (v3)
  {
    pk_General_log();
    v4 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      v5 = *(void **)(a1 + 32);
      v6 = *(_QWORD *)(a1 + 40);
      v7 = *(_QWORD *)(a1 + 48);
      v8 = (void *)MEMORY[0x2199B6780](*(_QWORD *)(a1 + 64));
      *(_DWORD *)buf = 138478595;
      v39 = v5;
      v40 = 2113;
      v41 = v6;
      v42 = 2113;
      v43 = v7;
      v44 = 2112;
      v45 = v8;
      _os_log_impl(&dword_213518000, v4, OS_LOG_TYPE_DEFAULT, "Notice: Target device - Request to update car key tracking attestation: (%{private}@), credential: (%{private}@), container: (%{private}@), completion: %@", buf, 0x2Au);

    }
  }
  if (*(_QWORD *)(a1 + 40))
  {
    v9 = objc_alloc_init(NPKProtoCarKeyUpdateTrackingAttestationRequest);
    -[NPKProtoCarKeyUpdateTrackingAttestationRequest setAttestation:](v9, "setAttestation:", *(_QWORD *)(a1 + 32));
    NPKSecureArchiveObject(*(void **)(a1 + 40));
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    -[NPKProtoCarKeyUpdateTrackingAttestationRequest setCredentialData:](v9, "setCredentialData:", v10);

    NPKSecureArchiveObject(*(void **)(a1 + 48));
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    -[NPKProtoCarKeyUpdateTrackingAttestationRequest setContainerData:](v9, "setContainerData:", v11);

    v12 = objc_alloc(MEMORY[0x24BE4FE40]);
    -[NPKProtoCarKeyUpdateTrackingAttestationRequest data](v9, "data");
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    v14 = (void *)objc_msgSend(v12, "initWithProtobufData:type:isResponse:", v13, 147, 0);

    v15 = *(void **)(a1 + 56);
    v36 = *MEMORY[0x24BE4FB30];
    v37 = &unk_24D0566F0;
    objc_msgSend(MEMORY[0x24BDBCE70], "dictionaryWithObjects:forKeys:count:", &v37, &v36, 1);
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v15, "_sendProtobuf:responseExpected:extraOptions:", v14, 1, v16);
    v17 = (void *)objc_claimAutoreleasedReturnValue();

    if (v17)
    {
      if (*(_QWORD *)(a1 + 64))
      {
        v18 = MEMORY[0x2199B6780]();
        v34[0] = MEMORY[0x24BDAC760];
        v34[1] = 3221225472;
        v34[2] = __121__NPKPaymentWebServiceCompanionTargetDevice_carKeyUpdateTrackingAttestation_forCredential_encryptedContainer_completion___block_invoke_841;
        v34[3] = &unk_24CFE7B80;
        v35 = *(id *)(a1 + 64);
        v19 = (void *)MEMORY[0x2199B6780](v34);
        v20 = *(void **)(a1 + 56);
        v21 = (void *)MEMORY[0x2199B6780](v18);
        objc_msgSend(v20, "_trackOutstandingRequestWithMessageIdentifier:completionHandler:errorHandler:", v17, v21, v19);

LABEL_22:
        goto LABEL_23;
      }
      pk_Payment_log();
      v32 = objc_claimAutoreleasedReturnValue();
      v33 = os_log_type_enabled(v32, OS_LOG_TYPE_DEFAULT);

      if (v33)
      {
        pk_Payment_log();
        v18 = objc_claimAutoreleasedReturnValue();
        if (!os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT))
          goto LABEL_22;
        *(_DWORD *)buf = 138412290;
        v39 = v17;
        v29 = "Warning: No response expected for message with identifier %@";
        v30 = v18;
        v31 = OS_LOG_TYPE_DEFAULT;
        goto LABEL_21;
      }
    }
    else
    {
      pk_Payment_log();
      v27 = objc_claimAutoreleasedReturnValue();
      v28 = os_log_type_enabled(v27, OS_LOG_TYPE_ERROR);

      if (v28)
      {
        pk_Payment_log();
        v18 = objc_claimAutoreleasedReturnValue();
        if (!os_log_type_enabled(v18, OS_LOG_TYPE_ERROR))
          goto LABEL_22;
        *(_DWORD *)buf = 138412290;
        v39 = v14;
        v29 = "Error: No message identifier for protobuf %@";
        v30 = v18;
        v31 = OS_LOG_TYPE_ERROR;
LABEL_21:
        _os_log_impl(&dword_213518000, v30, v31, v29, buf, 0xCu);
        goto LABEL_22;
      }
    }
LABEL_23:

    return;
  }
  pk_General_log();
  v22 = objc_claimAutoreleasedReturnValue();
  v23 = os_log_type_enabled(v22, OS_LOG_TYPE_ERROR);

  if (v23)
  {
    pk_General_log();
    v24 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v24, OS_LOG_TYPE_ERROR))
    {
      v25 = *(void **)(a1 + 40);
      *(_DWORD *)buf = 138477827;
      v39 = v25;
      _os_log_impl(&dword_213518000, v24, OS_LOG_TYPE_ERROR, "Error: Unable to update car key tracking attestation with nil credential (%{private}@)", buf, 0xCu);
    }

  }
  v26 = *(_QWORD *)(a1 + 64);
  if (v26)
    (*(void (**)(uint64_t, _QWORD))(v26 + 16))(v26, 0);
}

void __121__NPKPaymentWebServiceCompanionTargetDevice_carKeyUpdateTrackingAttestation_forCredential_encryptedContainer_completion___block_invoke_841(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  _BOOL4 v5;
  NSObject *v6;
  uint64_t v7;
  int v8;
  id v9;
  uint64_t v10;

  v10 = *MEMORY[0x24BDAC8D0];
  v3 = a2;
  pk_Payment_log();
  v4 = objc_claimAutoreleasedReturnValue();
  v5 = os_log_type_enabled(v4, OS_LOG_TYPE_ERROR);

  if (v5)
  {
    pk_Payment_log();
    v6 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      v8 = 138412290;
      v9 = v3;
      _os_log_impl(&dword_213518000, v6, OS_LOG_TYPE_ERROR, "Error: Provisioning service outstanding request error handler invoked: %@", (uint8_t *)&v8, 0xCu);
    }

  }
  v7 = *(_QWORD *)(a1 + 32);
  if (v7)
    (*(void (**)(uint64_t, BOOL))(v7 + 16))(v7, v3 == 0);

}

- (void)carKeyUpdateTrackingAttestationResponse:(id)a3
{
  id v4;
  NSObject *v5;
  _BOOL4 v6;
  NSObject *v7;
  void *v8;
  void *v9;
  void *v10;
  NSObject *v11;
  NSObject *v12;
  _BOOL4 v13;
  NSObject *v14;
  uint64_t v15;
  uint8_t v16[8];
  _QWORD block[5];
  id v18;
  id v19;
  __int128 *p_buf;
  uint64_t *v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  char v25;
  __int128 buf;
  uint64_t v27;
  uint64_t (*v28)(uint64_t, uint64_t);
  void (*v29)(uint64_t);
  id v30;
  uint64_t v31;

  v31 = *MEMORY[0x24BDAC8D0];
  v4 = a3;
  pk_Payment_log();
  v5 = objc_claimAutoreleasedReturnValue();
  v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    pk_Payment_log();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend(v4, "npkDescription");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      LODWORD(buf) = 138412290;
      *(_QWORD *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_213518000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Target carKeyUpdateTrackingAttestationResponse: incoming protobuf %@", (uint8_t *)&buf, 0xCu);

    }
  }
  objc_msgSend(v4, "context");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "incomingResponseIdentifier");
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  *(_QWORD *)&buf = 0;
  *((_QWORD *)&buf + 1) = &buf;
  v27 = 0x3032000000;
  v28 = __Block_byref_object_copy__342;
  v29 = __Block_byref_object_dispose__343;
  v30 = 0;
  v22 = 0;
  v23 = &v22;
  v24 = 0x2020000000;
  v25 = 0;
  if (v10)
  {
    -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
    v11 = objc_claimAutoreleasedReturnValue();
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 3221225472;
    block[2] = __85__NPKPaymentWebServiceCompanionTargetDevice_carKeyUpdateTrackingAttestationResponse___block_invoke;
    block[3] = &unk_24CFED0D8;
    block[4] = self;
    v18 = v10;
    v19 = v4;
    p_buf = &buf;
    v21 = &v22;
    dispatch_sync(v11, block);

  }
  else
  {
    pk_Payment_log();
    v12 = objc_claimAutoreleasedReturnValue();
    v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      pk_Payment_log();
      v14 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)v16 = 0;
        _os_log_impl(&dword_213518000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v16, 2u);
      }

    }
  }
  v15 = *(_QWORD *)(*((_QWORD *)&buf + 1) + 40);
  if (v15)
    (*(void (**)(uint64_t, _QWORD))(v15 + 16))(v15, *((unsigned __int8 *)v23 + 24));
  _Block_object_dispose(&v22, 8);
  _Block_object_dispose(&buf, 8);

}

void __85__NPKPaymentWebServiceCompanionTargetDevice_carKeyUpdateTrackingAttestationResponse___block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;
  NPKProtoCarKeyUpdateTrackingAttestationResponse *v4;
  void *v5;
  NPKProtoCarKeyUpdateTrackingAttestationResponse *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  _BOOL4 v11;
  NSObject *v12;
  _BOOL4 v13;
  NSObject *v14;
  __int16 v15[8];

  objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "objectForKey:", *(_QWORD *)(a1 + 40));
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  if (v3)
  {
    v4 = [NPKProtoCarKeyUpdateTrackingAttestationResponse alloc];
    objc_msgSend(*(id *)(a1 + 48), "data");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    v6 = -[NPKProtoCarKeyUpdateTrackingAttestationResponse initWithData:](v4, "initWithData:", v5);

    objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "removeObjectForKey:", *(_QWORD *)(a1 + 40));

    objc_msgSend(v3, "completionHandler");
    v8 = objc_claimAutoreleasedReturnValue();
    v9 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
    v10 = *(void **)(v9 + 40);
    *(_QWORD *)(v9 + 40) = v8;

    v11 = -[NPKProtoCarKeyUpdateTrackingAttestationResponse hasSuccess](v6, "hasSuccess");
    if (v11)
      LOBYTE(v11) = -[NPKProtoCarKeyUpdateTrackingAttestationResponse success](v6, "success");
    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 24) = v11;

  }
  else
  {
    pk_Payment_log();
    v12 = objc_claimAutoreleasedReturnValue();
    v13 = os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT);

    if (v13)
    {
      pk_Payment_log();
      v14 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
      {
        v15[0] = 0;
        _os_log_impl(&dword_213518000, v14, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", (uint8_t *)v15, 2u);
      }

    }
  }

}

- (void)carKeyAcceptInvitationWithInvitationIdentifier:(id)a3 activationCode:(id)a4 completion:(id)a5
{
  id v8;
  id v9;
  id v10;
  NSObject *v11;
  NSObject *v12;
  _BOOL4 v13;
  NSObject *v14;
  uint8_t v15[16];
  _QWORD block[4];
  id v17;
  id v18;
  NPKPaymentWebServiceCompanionTargetDevice *v19;
  id v20;

  v8 = a3;
  v9 = a4;
  v10 = a5;
  if (-[NPKPaymentWebServiceCompanionTargetDevice _isSharingInAChainSupported](self, "_isSharingInAChainSupported"))
  {
    -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
    v11 = objc_claimAutoreleasedReturnValue();
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 3221225472;
    block[2] = __118__NPKPaymentWebServiceCompanionTargetDevice_carKeyAcceptInvitationWithInvitationIdentifier_activationCode_completion___block_invoke;
    block[3] = &unk_24CFE8740;
    v17 = v8;
    v18 = v9;
    v19 = self;
    v20 = v10;
    dispatch_sync(v11, block);

  }
  else
  {
    pk_Payment_log();
    v12 = objc_claimAutoreleasedReturnValue();
    v13 = os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT);

    if (v13)
    {
      pk_Payment_log();
      v14 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)v15 = 0;
        _os_log_impl(&dword_213518000, v14, OS_LOG_TYPE_DEFAULT, "Notice: Target device does not support acceptSharingMessage:activationCode:completion: message.", v15, 2u);
      }

    }
    if (v10)
      (*((void (**)(id, _QWORD))v10 + 2))(v10, 0);
  }

}

void __118__NPKPaymentWebServiceCompanionTargetDevice_carKeyAcceptInvitationWithInvitationIdentifier_activationCode_completion___block_invoke(uint64_t a1)
{
  NSObject *v2;
  _BOOL4 v3;
  NSObject *v4;
  void *v5;
  uint64_t v6;
  void *v7;
  NPKProtoCarKeyAcceptInvitationRequest *v8;
  id v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  NSObject *v15;
  void *v16;
  void *v17;
  void *v18;
  NSObject *v19;
  _BOOL4 v20;
  NSObject *v21;
  void *v22;
  uint64_t v23;
  NSObject *v24;
  _BOOL4 v25;
  const char *v26;
  NSObject *v27;
  os_log_type_t v28;
  NSObject *v29;
  _BOOL4 v30;
  _QWORD v31[4];
  id v32;
  uint64_t v33;
  void *v34;
  uint8_t buf[4];
  void *v36;
  __int16 v37;
  uint64_t v38;
  __int16 v39;
  void *v40;
  uint64_t v41;

  v41 = *MEMORY[0x24BDAC8D0];
  pk_General_log();
  v2 = objc_claimAutoreleasedReturnValue();
  v3 = os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT);

  if (v3)
  {
    pk_General_log();
    v4 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      v5 = *(void **)(a1 + 32);
      v6 = *(_QWORD *)(a1 + 40);
      v7 = (void *)MEMORY[0x2199B6780](*(_QWORD *)(a1 + 56));
      *(_DWORD *)buf = 138478339;
      v36 = v5;
      v37 = 2113;
      v38 = v6;
      v39 = 2112;
      v40 = v7;
      _os_log_impl(&dword_213518000, v4, OS_LOG_TYPE_DEFAULT, "Notice: Target device - Request to accept car key invitation with identifier: %{private}@, activation code: %{private}@, completion: %@", buf, 0x20u);

    }
  }
  if (*(_QWORD *)(a1 + 32))
  {
    v8 = objc_alloc_init(NPKProtoCarKeyAcceptInvitationRequest);
    -[NPKProtoCarKeyAcceptInvitationRequest setInvitationIdentifier:](v8, "setInvitationIdentifier:", *(_QWORD *)(a1 + 32));
    -[NPKProtoCarKeyAcceptInvitationRequest setActivationCode:](v8, "setActivationCode:", *(_QWORD *)(a1 + 40));
    v9 = objc_alloc(MEMORY[0x24BE4FE40]);
    -[NPKProtoCarKeyAcceptInvitationRequest data](v8, "data");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    v11 = (void *)objc_msgSend(v9, "initWithProtobufData:type:isResponse:", v10, 148, 0);

    v12 = *(void **)(a1 + 48);
    v33 = *MEMORY[0x24BE4FB30];
    v34 = &unk_24D0566F0;
    objc_msgSend(MEMORY[0x24BDBCE70], "dictionaryWithObjects:forKeys:count:", &v34, &v33, 1);
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v12, "_sendProtobuf:responseExpected:extraOptions:", v11, 1, v13);
    v14 = (void *)objc_claimAutoreleasedReturnValue();

    if (v14)
    {
      if (*(_QWORD *)(a1 + 56))
      {
        v15 = MEMORY[0x2199B6780]();
        v31[0] = MEMORY[0x24BDAC760];
        v31[1] = 3221225472;
        v31[2] = __118__NPKPaymentWebServiceCompanionTargetDevice_carKeyAcceptInvitationWithInvitationIdentifier_activationCode_completion___block_invoke_844;
        v31[3] = &unk_24CFE7B80;
        v32 = *(id *)(a1 + 56);
        v16 = (void *)MEMORY[0x2199B6780](v31);
        v17 = *(void **)(a1 + 48);
        v18 = (void *)MEMORY[0x2199B6780](v15);
        objc_msgSend(v17, "_trackOutstandingRequestWithMessageIdentifier:completionHandler:errorHandler:", v14, v18, v16);

LABEL_22:
        goto LABEL_23;
      }
      pk_Payment_log();
      v29 = objc_claimAutoreleasedReturnValue();
      v30 = os_log_type_enabled(v29, OS_LOG_TYPE_DEFAULT);

      if (v30)
      {
        pk_Payment_log();
        v15 = objc_claimAutoreleasedReturnValue();
        if (!os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
          goto LABEL_22;
        *(_DWORD *)buf = 138412290;
        v36 = v14;
        v26 = "Warning: No response expected for message with identifier %@";
        v27 = v15;
        v28 = OS_LOG_TYPE_DEFAULT;
        goto LABEL_21;
      }
    }
    else
    {
      pk_Payment_log();
      v24 = objc_claimAutoreleasedReturnValue();
      v25 = os_log_type_enabled(v24, OS_LOG_TYPE_ERROR);

      if (v25)
      {
        pk_Payment_log();
        v15 = objc_claimAutoreleasedReturnValue();
        if (!os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
          goto LABEL_22;
        *(_DWORD *)buf = 138412290;
        v36 = v11;
        v26 = "Error: No message identifier for protobuf %@";
        v27 = v15;
        v28 = OS_LOG_TYPE_ERROR;
LABEL_21:
        _os_log_impl(&dword_213518000, v27, v28, v26, buf, 0xCu);
        goto LABEL_22;
      }
    }
LABEL_23:

    return;
  }
  pk_General_log();
  v19 = objc_claimAutoreleasedReturnValue();
  v20 = os_log_type_enabled(v19, OS_LOG_TYPE_ERROR);

  if (v20)
  {
    pk_General_log();
    v21 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR))
    {
      v22 = *(void **)(a1 + 32);
      *(_DWORD *)buf = 138477827;
      v36 = v22;
      _os_log_impl(&dword_213518000, v21, OS_LOG_TYPE_ERROR, "Error: Unable to accept car key invitation with nil invitationIdentifier (%{private}@)", buf, 0xCu);
    }

  }
  v23 = *(_QWORD *)(a1 + 56);
  if (v23)
    (*(void (**)(uint64_t, _QWORD))(v23 + 16))(v23, 0);
}

void __118__NPKPaymentWebServiceCompanionTargetDevice_carKeyAcceptInvitationWithInvitationIdentifier_activationCode_completion___block_invoke_844(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  _BOOL4 v5;
  NSObject *v6;
  uint64_t v7;
  int v8;
  id v9;
  uint64_t v10;

  v10 = *MEMORY[0x24BDAC8D0];
  v3 = a2;
  pk_Payment_log();
  v4 = objc_claimAutoreleasedReturnValue();
  v5 = os_log_type_enabled(v4, OS_LOG_TYPE_ERROR);

  if (v5)
  {
    pk_Payment_log();
    v6 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      v8 = 138412290;
      v9 = v3;
      _os_log_impl(&dword_213518000, v6, OS_LOG_TYPE_ERROR, "Error: Provisioning service outstanding request error handler invoked: %@", (uint8_t *)&v8, 0xCu);
    }

  }
  v7 = *(_QWORD *)(a1 + 32);
  if (v7)
    (*(void (**)(uint64_t, _QWORD))(v7 + 16))(v7, 0);

}

- (void)carKeyAcceptInvitationResponse:(id)a3
{
  id v4;
  NSObject *v5;
  _BOOL4 v6;
  NSObject *v7;
  void *v8;
  void *v9;
  void *v10;
  NSObject *v11;
  NSObject *v12;
  _BOOL4 v13;
  NSObject *v14;
  uint64_t v15;
  uint8_t v16[8];
  _QWORD block[5];
  id v18;
  id v19;
  __int128 *p_buf;
  uint64_t *v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t (*v25)(uint64_t, uint64_t);
  void (*v26)(uint64_t);
  id v27;
  __int128 buf;
  uint64_t v29;
  uint64_t (*v30)(uint64_t, uint64_t);
  void (*v31)(uint64_t);
  id v32;
  uint64_t v33;

  v33 = *MEMORY[0x24BDAC8D0];
  v4 = a3;
  pk_Payment_log();
  v5 = objc_claimAutoreleasedReturnValue();
  v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    pk_Payment_log();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend(v4, "npkDescription");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      LODWORD(buf) = 138412290;
      *(_QWORD *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_213518000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Target carKeyAcceptInvitationWithInvitationIdentifierResponse: incoming protobuf %@", (uint8_t *)&buf, 0xCu);

    }
  }
  objc_msgSend(v4, "context");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "incomingResponseIdentifier");
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  *(_QWORD *)&buf = 0;
  *((_QWORD *)&buf + 1) = &buf;
  v29 = 0x3032000000;
  v30 = __Block_byref_object_copy__342;
  v31 = __Block_byref_object_dispose__343;
  v32 = 0;
  v22 = 0;
  v23 = &v22;
  v24 = 0x3032000000;
  v25 = __Block_byref_object_copy__23;
  v26 = __Block_byref_object_dispose__23;
  v27 = 0;
  if (v10)
  {
    -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
    v11 = objc_claimAutoreleasedReturnValue();
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 3221225472;
    block[2] = __76__NPKPaymentWebServiceCompanionTargetDevice_carKeyAcceptInvitationResponse___block_invoke;
    block[3] = &unk_24CFED0D8;
    block[4] = self;
    v18 = v10;
    v19 = v4;
    p_buf = &buf;
    v21 = &v22;
    dispatch_sync(v11, block);

  }
  else
  {
    pk_Payment_log();
    v12 = objc_claimAutoreleasedReturnValue();
    v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      pk_Payment_log();
      v14 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)v16 = 0;
        _os_log_impl(&dword_213518000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v16, 2u);
      }

    }
  }
  v15 = *(_QWORD *)(*((_QWORD *)&buf + 1) + 40);
  if (v15)
    (*(void (**)(uint64_t, uint64_t))(v15 + 16))(v15, v23[5]);
  _Block_object_dispose(&v22, 8);

  _Block_object_dispose(&buf, 8);
}

void __76__NPKPaymentWebServiceCompanionTargetDevice_carKeyAcceptInvitationResponse___block_invoke(uint64_t a1)
{
  void *v1;
  void *v3;
  void *v4;
  NPKProtoCarKeyAcceptInvitationResponse *v5;
  void *v6;
  NPKProtoCarKeyAcceptInvitationResponse *v7;
  NSObject *v8;
  _BOOL4 v9;
  NSObject *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  _BOOL4 v15;
  NSObject *v16;
  void *v17;
  __int16 v18[8];

  objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "objectForKey:", *(_QWORD *)(a1 + 40));
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  if (v4)
  {
    v5 = [NPKProtoCarKeyAcceptInvitationResponse alloc];
    objc_msgSend(*(id *)(a1 + 48), "data");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    v7 = -[NPKProtoCarKeyAcceptInvitationResponse initWithData:](v5, "initWithData:", v6);

    if (-[NPKProtoCarKeyAcceptInvitationResponse pending](v7, "pending"))
    {
      objc_msgSend(v4, "setOrResetCleanupTimer");
    }
    else
    {
      objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v11, "removeObjectForKey:", *(_QWORD *)(a1 + 40));

      objc_msgSend(v4, "completionHandler");
      v12 = objc_claimAutoreleasedReturnValue();
      v13 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
      v14 = *(void **)(v13 + 40);
      *(_QWORD *)(v13 + 40) = v12;

      v15 = -[NPKProtoCarKeyAcceptInvitationResponse hasResultData](v7, "hasResultData");
      if (v15)
      {
        -[NPKProtoCarKeyAcceptInvitationResponse resultData](v7, "resultData");
        v1 = (void *)objc_claimAutoreleasedReturnValue();
        v16 = objc_opt_class();
        NPKSecureUnarchiveObject(v1, v16);
        v17 = (void *)objc_claimAutoreleasedReturnValue();
      }
      else
      {
        v17 = 0;
      }
      objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 40), v17);
      if (v15)
      {

      }
    }

  }
  else
  {
    pk_Payment_log();
    v8 = objc_claimAutoreleasedReturnValue();
    v9 = os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT);

    if (v9)
    {
      pk_Payment_log();
      v10 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
      {
        v18[0] = 0;
        _os_log_impl(&dword_213518000, v10, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", (uint8_t *)v18, 2u);
      }

    }
  }

}

- (void)carKeyHandleRecipientMessage:(id)a3 forInvitationIdentifier:(id)a4 completion:(id)a5
{
  id v8;
  id v9;
  id v10;
  NSObject *v11;
  NSObject *v12;
  _BOOL4 v13;
  NSObject *v14;
  uint8_t v15[16];
  _QWORD block[4];
  id v17;
  id v18;
  NPKPaymentWebServiceCompanionTargetDevice *v19;
  id v20;

  v8 = a3;
  v9 = a4;
  v10 = a5;
  if (-[NPKPaymentWebServiceCompanionTargetDevice _isSharingInAChainSupported](self, "_isSharingInAChainSupported"))
  {
    -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
    v11 = objc_claimAutoreleasedReturnValue();
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 3221225472;
    block[2] = __109__NPKPaymentWebServiceCompanionTargetDevice_carKeyHandleRecipientMessage_forInvitationIdentifier_completion___block_invoke;
    block[3] = &unk_24CFE8740;
    v17 = v8;
    v18 = v9;
    v19 = self;
    v20 = v10;
    dispatch_sync(v11, block);

  }
  else
  {
    pk_Payment_log();
    v12 = objc_claimAutoreleasedReturnValue();
    v13 = os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT);

    if (v13)
    {
      pk_Payment_log();
      v14 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)v15 = 0;
        _os_log_impl(&dword_213518000, v14, OS_LOG_TYPE_DEFAULT, "Notice: Target device does not support carKeyHandleRecipientMessage:forInvitationIdentifier:completion: message.", v15, 2u);
      }

    }
    if (v10)
      (*((void (**)(id, _QWORD))v10 + 2))(v10, 0);
  }

}

void __109__NPKPaymentWebServiceCompanionTargetDevice_carKeyHandleRecipientMessage_forInvitationIdentifier_completion___block_invoke(uint64_t a1)
{
  NSObject *v2;
  _BOOL4 v3;
  NSObject *v4;
  void *v5;
  uint64_t v6;
  void *v7;
  NPKProtoCarKeyHandleRecipientMessageRequest *v8;
  void *v9;
  id v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  NSObject *v16;
  void *v17;
  void *v18;
  void *v19;
  NSObject *v20;
  _BOOL4 v21;
  NSObject *v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  _BOOL4 v27;
  const char *v28;
  NSObject *v29;
  os_log_type_t v30;
  NSObject *v31;
  _BOOL4 v32;
  _QWORD v33[4];
  id v34;
  uint64_t v35;
  void *v36;
  uint8_t buf[4];
  void *v38;
  __int16 v39;
  uint64_t v40;
  __int16 v41;
  void *v42;
  uint64_t v43;

  v43 = *MEMORY[0x24BDAC8D0];
  pk_General_log();
  v2 = objc_claimAutoreleasedReturnValue();
  v3 = os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT);

  if (v3)
  {
    pk_General_log();
    v4 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      v5 = *(void **)(a1 + 32);
      v6 = *(_QWORD *)(a1 + 40);
      v7 = (void *)MEMORY[0x2199B6780](*(_QWORD *)(a1 + 56));
      *(_DWORD *)buf = 138478339;
      v38 = v5;
      v39 = 2113;
      v40 = v6;
      v41 = 2112;
      v42 = v7;
      _os_log_impl(&dword_213518000, v4, OS_LOG_TYPE_DEFAULT, "Notice: Target device - Handle car key recipient message: %{private}@, for invitationIdentifier: %{private}@, completion: %@", buf, 0x20u);

    }
  }
  if (*(_QWORD *)(a1 + 32) && objc_msgSend(*(id *)(a1 + 40), "length"))
  {
    v8 = objc_alloc_init(NPKProtoCarKeyHandleRecipientMessageRequest);
    NPKSecureArchiveObject(*(void **)(a1 + 32));
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    -[NPKProtoCarKeyHandleRecipientMessageRequest setMessageData:](v8, "setMessageData:", v9);

    -[NPKProtoCarKeyHandleRecipientMessageRequest setInvitationIdentifier:](v8, "setInvitationIdentifier:", *(_QWORD *)(a1 + 40));
    v10 = objc_alloc(MEMORY[0x24BE4FE40]);
    -[NPKProtoCarKeyHandleRecipientMessageRequest data](v8, "data");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    v12 = (void *)objc_msgSend(v10, "initWithProtobufData:type:isResponse:", v11, 149, 0);

    v13 = *(void **)(a1 + 48);
    v35 = *MEMORY[0x24BE4FB30];
    v36 = &unk_24D0566F0;
    objc_msgSend(MEMORY[0x24BDBCE70], "dictionaryWithObjects:forKeys:count:", &v36, &v35, 1);
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v13, "_sendProtobuf:responseExpected:extraOptions:", v12, 1, v14);
    v15 = (void *)objc_claimAutoreleasedReturnValue();

    if (v15)
    {
      if (*(_QWORD *)(a1 + 56))
      {
        v16 = MEMORY[0x2199B6780]();
        v33[0] = MEMORY[0x24BDAC760];
        v33[1] = 3221225472;
        v33[2] = __109__NPKPaymentWebServiceCompanionTargetDevice_carKeyHandleRecipientMessage_forInvitationIdentifier_completion___block_invoke_848;
        v33[3] = &unk_24CFE7B80;
        v34 = *(id *)(a1 + 56);
        v17 = (void *)MEMORY[0x2199B6780](v33);
        v18 = *(void **)(a1 + 48);
        v19 = (void *)MEMORY[0x2199B6780](v16);
        objc_msgSend(v18, "_trackOutstandingRequestWithMessageIdentifier:completionHandler:errorHandler:", v15, v19, v17);

LABEL_23:
        goto LABEL_24;
      }
      pk_Payment_log();
      v31 = objc_claimAutoreleasedReturnValue();
      v32 = os_log_type_enabled(v31, OS_LOG_TYPE_DEFAULT);

      if (v32)
      {
        pk_Payment_log();
        v16 = objc_claimAutoreleasedReturnValue();
        if (!os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
          goto LABEL_23;
        *(_DWORD *)buf = 138412290;
        v38 = v15;
        v28 = "Warning: No response expected for message with identifier %@";
        v29 = v16;
        v30 = OS_LOG_TYPE_DEFAULT;
        goto LABEL_22;
      }
    }
    else
    {
      pk_Payment_log();
      v26 = objc_claimAutoreleasedReturnValue();
      v27 = os_log_type_enabled(v26, OS_LOG_TYPE_ERROR);

      if (v27)
      {
        pk_Payment_log();
        v16 = objc_claimAutoreleasedReturnValue();
        if (!os_log_type_enabled(v16, OS_LOG_TYPE_ERROR))
          goto LABEL_23;
        *(_DWORD *)buf = 138412290;
        v38 = v12;
        v28 = "Error: No message identifier for protobuf %@";
        v29 = v16;
        v30 = OS_LOG_TYPE_ERROR;
LABEL_22:
        _os_log_impl(&dword_213518000, v29, v30, v28, buf, 0xCu);
        goto LABEL_23;
      }
    }
LABEL_24:

    return;
  }
  pk_General_log();
  v20 = objc_claimAutoreleasedReturnValue();
  v21 = os_log_type_enabled(v20, OS_LOG_TYPE_ERROR);

  if (v21)
  {
    pk_General_log();
    v22 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR))
    {
      v23 = *(void **)(a1 + 32);
      v24 = *(_QWORD *)(a1 + 40);
      *(_DWORD *)buf = 138478083;
      v38 = v23;
      v39 = 2113;
      v40 = v24;
      _os_log_impl(&dword_213518000, v22, OS_LOG_TYPE_ERROR, "Error: Unable to handle nil message (%{private}@) or empty invitation identifier (%{private}@)", buf, 0x16u);
    }

  }
  v25 = *(_QWORD *)(a1 + 56);
  if (v25)
    (*(void (**)(uint64_t, _QWORD))(v25 + 16))(v25, 0);
}

void __109__NPKPaymentWebServiceCompanionTargetDevice_carKeyHandleRecipientMessage_forInvitationIdentifier_completion___block_invoke_848(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  _BOOL4 v5;
  NSObject *v6;
  uint64_t v7;
  int v8;
  id v9;
  uint64_t v10;

  v10 = *MEMORY[0x24BDAC8D0];
  v3 = a2;
  pk_Payment_log();
  v4 = objc_claimAutoreleasedReturnValue();
  v5 = os_log_type_enabled(v4, OS_LOG_TYPE_ERROR);

  if (v5)
  {
    pk_Payment_log();
    v6 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      v8 = 138412290;
      v9 = v3;
      _os_log_impl(&dword_213518000, v6, OS_LOG_TYPE_ERROR, "Error: Provisioning service outstanding request error handler invoked: %@", (uint8_t *)&v8, 0xCu);
    }

  }
  v7 = *(_QWORD *)(a1 + 32);
  if (v7)
    (*(void (**)(uint64_t, _QWORD))(v7 + 16))(v7, 0);

}

- (void)carKeyHandleRecipientMessageResponse:(id)a3
{
  id v4;
  NSObject *v5;
  _BOOL4 v6;
  NSObject *v7;
  void *v8;
  void *v9;
  void *v10;
  NSObject *v11;
  NSObject *v12;
  _BOOL4 v13;
  NSObject *v14;
  uint64_t v15;
  uint8_t v16[8];
  _QWORD block[5];
  id v18;
  id v19;
  __int128 *p_buf;
  uint64_t *v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t (*v25)(uint64_t, uint64_t);
  void (*v26)(uint64_t);
  id v27;
  __int128 buf;
  uint64_t v29;
  uint64_t (*v30)(uint64_t, uint64_t);
  void (*v31)(uint64_t);
  id v32;
  uint64_t v33;

  v33 = *MEMORY[0x24BDAC8D0];
  v4 = a3;
  pk_Payment_log();
  v5 = objc_claimAutoreleasedReturnValue();
  v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    pk_Payment_log();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend(v4, "npkDescription");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      LODWORD(buf) = 138412290;
      *(_QWORD *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_213518000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Target carKeyHandleRecipientMessageResponse: incoming protobuf %@", (uint8_t *)&buf, 0xCu);

    }
  }
  objc_msgSend(v4, "context");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "incomingResponseIdentifier");
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  *(_QWORD *)&buf = 0;
  *((_QWORD *)&buf + 1) = &buf;
  v29 = 0x3032000000;
  v30 = __Block_byref_object_copy__342;
  v31 = __Block_byref_object_dispose__343;
  v32 = 0;
  v22 = 0;
  v23 = &v22;
  v24 = 0x3032000000;
  v25 = __Block_byref_object_copy__23;
  v26 = __Block_byref_object_dispose__23;
  v27 = 0;
  if (v10)
  {
    -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
    v11 = objc_claimAutoreleasedReturnValue();
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 3221225472;
    block[2] = __82__NPKPaymentWebServiceCompanionTargetDevice_carKeyHandleRecipientMessageResponse___block_invoke;
    block[3] = &unk_24CFED390;
    block[4] = self;
    v18 = v10;
    p_buf = &buf;
    v19 = v4;
    v21 = &v22;
    dispatch_sync(v11, block);

  }
  else
  {
    pk_Payment_log();
    v12 = objc_claimAutoreleasedReturnValue();
    v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      pk_Payment_log();
      v14 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)v16 = 0;
        _os_log_impl(&dword_213518000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v16, 2u);
      }

    }
  }
  v15 = *(_QWORD *)(*((_QWORD *)&buf + 1) + 40);
  if (v15)
    (*(void (**)(uint64_t, uint64_t))(v15 + 16))(v15, v23[5]);
  _Block_object_dispose(&v22, 8);

  _Block_object_dispose(&buf, 8);
}

void __82__NPKPaymentWebServiceCompanionTargetDevice_carKeyHandleRecipientMessageResponse___block_invoke(uint64_t a1)
{
  void *v1;
  void *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  NPKProtoCarKeyHandleRecipientMessageResponse *v9;
  void *v10;
  NPKProtoCarKeyHandleRecipientMessageResponse *v11;
  _BOOL4 v12;
  NSObject *v13;
  void *v14;
  NSObject *v15;
  _BOOL4 v16;
  NSObject *v17;
  __int16 v18[8];

  objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "objectForKey:", *(_QWORD *)(a1 + 40));
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  if (v4)
  {
    objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "removeObjectForKey:", *(_QWORD *)(a1 + 40));

    objc_msgSend(v4, "completionHandler");
    v6 = objc_claimAutoreleasedReturnValue();
    v7 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
    v8 = *(void **)(v7 + 40);
    *(_QWORD *)(v7 + 40) = v6;

    v9 = [NPKProtoCarKeyHandleRecipientMessageResponse alloc];
    objc_msgSend(*(id *)(a1 + 48), "data");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    v11 = -[NPKProtoCarKeyHandleRecipientMessageResponse initWithData:](v9, "initWithData:", v10);

    v12 = -[NPKProtoCarKeyHandleRecipientMessageResponse hasResultData](v11, "hasResultData");
    if (v12)
    {
      -[NPKProtoCarKeyHandleRecipientMessageResponse resultData](v11, "resultData");
      v1 = (void *)objc_claimAutoreleasedReturnValue();
      v13 = objc_opt_class();
      NPKSecureUnarchiveObject(v1, v13);
      v14 = (void *)objc_claimAutoreleasedReturnValue();
    }
    else
    {
      v14 = 0;
    }
    objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 40), v14);
    if (v12)
    {

    }
  }
  else
  {
    pk_Payment_log();
    v15 = objc_claimAutoreleasedReturnValue();
    v16 = os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT);

    if (v16)
    {
      pk_Payment_log();
      v17 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
      {
        v18[0] = 0;
        _os_log_impl(&dword_213518000, v17, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", (uint8_t *)v18, 2u);
      }

    }
  }

}

- (void)carKeyRetryActivationCodeWithInvitationIdentifier:(id)a3 activationCode:(id)a4 completion:(id)a5
{
  id v8;
  id v9;
  id v10;
  NSObject *v11;
  NSObject *v12;
  _BOOL4 v13;
  NSObject *v14;
  uint8_t v15[16];
  _QWORD block[4];
  id v17;
  id v18;
  NPKPaymentWebServiceCompanionTargetDevice *v19;
  id v20;

  v8 = a3;
  v9 = a4;
  v10 = a5;
  if (-[NPKPaymentWebServiceCompanionTargetDevice _isSharingInAChainSupported](self, "_isSharingInAChainSupported"))
  {
    -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
    v11 = objc_claimAutoreleasedReturnValue();
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 3221225472;
    block[2] = __121__NPKPaymentWebServiceCompanionTargetDevice_carKeyRetryActivationCodeWithInvitationIdentifier_activationCode_completion___block_invoke;
    block[3] = &unk_24CFE8740;
    v17 = v9;
    v18 = v8;
    v19 = self;
    v20 = v10;
    dispatch_sync(v11, block);

  }
  else
  {
    pk_Payment_log();
    v12 = objc_claimAutoreleasedReturnValue();
    v13 = os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT);

    if (v13)
    {
      pk_Payment_log();
      v14 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)v15 = 0;
        _os_log_impl(&dword_213518000, v14, OS_LOG_TYPE_DEFAULT, "Notice: Target device does not support carKeyRetryActivationCodeWithInvitationIdentifier:activationCode:completion: message.", v15, 2u);
      }

    }
    if (v10)
      (*((void (**)(id, _QWORD))v10 + 2))(v10, 0);
  }

}

void __121__NPKPaymentWebServiceCompanionTargetDevice_carKeyRetryActivationCodeWithInvitationIdentifier_activationCode_completion___block_invoke(uint64_t a1)
{
  NSObject *v2;
  _BOOL4 v3;
  NSObject *v4;
  void *v5;
  uint64_t v6;
  void *v7;
  NPKProtoCarKeyRetryActivationCodeRequest *v8;
  id v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  NSObject *v15;
  void *v16;
  void *v17;
  void *v18;
  NSObject *v19;
  _BOOL4 v20;
  NSObject *v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  NSObject *v25;
  _BOOL4 v26;
  const char *v27;
  NSObject *v28;
  os_log_type_t v29;
  NSObject *v30;
  _BOOL4 v31;
  _QWORD v32[4];
  id v33;
  uint64_t v34;
  void *v35;
  uint8_t buf[4];
  void *v37;
  __int16 v38;
  uint64_t v39;
  __int16 v40;
  void *v41;
  uint64_t v42;

  v42 = *MEMORY[0x24BDAC8D0];
  pk_General_log();
  v2 = objc_claimAutoreleasedReturnValue();
  v3 = os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT);

  if (v3)
  {
    pk_General_log();
    v4 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      v5 = *(void **)(a1 + 32);
      v6 = *(_QWORD *)(a1 + 40);
      v7 = (void *)MEMORY[0x2199B6780](*(_QWORD *)(a1 + 56));
      *(_DWORD *)buf = 138478339;
      v37 = v5;
      v38 = 2113;
      v39 = v6;
      v40 = 2112;
      v41 = v7;
      _os_log_impl(&dword_213518000, v4, OS_LOG_TYPE_DEFAULT, "Notice: Target device - Request to retry activation code: %{private}@, for invitation identifier: %{private}@, completion: %@", buf, 0x20u);

    }
  }
  if (objc_msgSend(*(id *)(a1 + 32), "length") && objc_msgSend(*(id *)(a1 + 40), "length"))
  {
    v8 = objc_alloc_init(NPKProtoCarKeyRetryActivationCodeRequest);
    -[NPKProtoCarKeyRetryActivationCodeRequest setInvitationIdentifier:](v8, "setInvitationIdentifier:", *(_QWORD *)(a1 + 40));
    -[NPKProtoCarKeyRetryActivationCodeRequest setActivationCode:](v8, "setActivationCode:", *(_QWORD *)(a1 + 32));
    v9 = objc_alloc(MEMORY[0x24BE4FE40]);
    -[NPKProtoCarKeyRetryActivationCodeRequest data](v8, "data");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    v11 = (void *)objc_msgSend(v9, "initWithProtobufData:type:isResponse:", v10, 150, 0);

    v12 = *(void **)(a1 + 48);
    v34 = *MEMORY[0x24BE4FB30];
    v35 = &unk_24D0566F0;
    objc_msgSend(MEMORY[0x24BDBCE70], "dictionaryWithObjects:forKeys:count:", &v35, &v34, 1);
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v12, "_sendProtobuf:responseExpected:extraOptions:", v11, 1, v13);
    v14 = (void *)objc_claimAutoreleasedReturnValue();

    if (v14)
    {
      if (*(_QWORD *)(a1 + 56))
      {
        v15 = MEMORY[0x2199B6780]();
        v32[0] = MEMORY[0x24BDAC760];
        v32[1] = 3221225472;
        v32[2] = __121__NPKPaymentWebServiceCompanionTargetDevice_carKeyRetryActivationCodeWithInvitationIdentifier_activationCode_completion___block_invoke_851;
        v32[3] = &unk_24CFE7B80;
        v33 = *(id *)(a1 + 56);
        v16 = (void *)MEMORY[0x2199B6780](v32);
        v17 = *(void **)(a1 + 48);
        v18 = (void *)MEMORY[0x2199B6780](v15);
        objc_msgSend(v17, "_trackOutstandingRequestWithMessageIdentifier:completionHandler:errorHandler:", v14, v18, v16);

LABEL_23:
        goto LABEL_24;
      }
      pk_Payment_log();
      v30 = objc_claimAutoreleasedReturnValue();
      v31 = os_log_type_enabled(v30, OS_LOG_TYPE_DEFAULT);

      if (v31)
      {
        pk_Payment_log();
        v15 = objc_claimAutoreleasedReturnValue();
        if (!os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
          goto LABEL_23;
        *(_DWORD *)buf = 138412290;
        v37 = v14;
        v27 = "Warning: No response expected for message with identifier %@";
        v28 = v15;
        v29 = OS_LOG_TYPE_DEFAULT;
        goto LABEL_22;
      }
    }
    else
    {
      pk_Payment_log();
      v25 = objc_claimAutoreleasedReturnValue();
      v26 = os_log_type_enabled(v25, OS_LOG_TYPE_ERROR);

      if (v26)
      {
        pk_Payment_log();
        v15 = objc_claimAutoreleasedReturnValue();
        if (!os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
          goto LABEL_23;
        *(_DWORD *)buf = 138412290;
        v37 = v11;
        v27 = "Error: No message identifier for protobuf %@";
        v28 = v15;
        v29 = OS_LOG_TYPE_ERROR;
LABEL_22:
        _os_log_impl(&dword_213518000, v28, v29, v27, buf, 0xCu);
        goto LABEL_23;
      }
    }
LABEL_24:

    return;
  }
  pk_General_log();
  v19 = objc_claimAutoreleasedReturnValue();
  v20 = os_log_type_enabled(v19, OS_LOG_TYPE_ERROR);

  if (v20)
  {
    pk_General_log();
    v21 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR))
    {
      v22 = *(void **)(a1 + 32);
      v23 = *(_QWORD *)(a1 + 40);
      *(_DWORD *)buf = 138478083;
      v37 = v22;
      v38 = 2113;
      v39 = v23;
      _os_log_impl(&dword_213518000, v21, OS_LOG_TYPE_ERROR, "Error: Unable to retry activation code with nil code (%{private}@) or invitation identifier (%{private}@)", buf, 0x16u);
    }

  }
  v24 = *(_QWORD *)(a1 + 56);
  if (v24)
    (*(void (**)(uint64_t, _QWORD))(v24 + 16))(v24, 0);
}

void __121__NPKPaymentWebServiceCompanionTargetDevice_carKeyRetryActivationCodeWithInvitationIdentifier_activationCode_completion___block_invoke_851(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  _BOOL4 v5;
  NSObject *v6;
  uint64_t v7;
  int v8;
  id v9;
  uint64_t v10;

  v10 = *MEMORY[0x24BDAC8D0];
  v3 = a2;
  pk_Payment_log();
  v4 = objc_claimAutoreleasedReturnValue();
  v5 = os_log_type_enabled(v4, OS_LOG_TYPE_ERROR);

  if (v5)
  {
    pk_Payment_log();
    v6 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      v8 = 138412290;
      v9 = v3;
      _os_log_impl(&dword_213518000, v6, OS_LOG_TYPE_ERROR, "Error: Provisioning service outstanding request error handler invoked: %@", (uint8_t *)&v8, 0xCu);
    }

  }
  v7 = *(_QWORD *)(a1 + 32);
  if (v7)
    (*(void (**)(uint64_t, _QWORD))(v7 + 16))(v7, 0);

}

- (void)carKeyRetryActivationCodeResponse:(id)a3
{
  id v4;
  NSObject *v5;
  _BOOL4 v6;
  NSObject *v7;
  void *v8;
  void *v9;
  void *v10;
  NSObject *v11;
  NSObject *v12;
  _BOOL4 v13;
  NSObject *v14;
  uint64_t v15;
  uint8_t v16[8];
  _QWORD block[5];
  id v18;
  id v19;
  __int128 *p_buf;
  _QWORD *v21;
  _QWORD v22[5];
  id v23;
  __int128 buf;
  uint64_t v25;
  uint64_t (*v26)(uint64_t, uint64_t);
  void (*v27)(uint64_t);
  id v28;
  uint64_t v29;

  v29 = *MEMORY[0x24BDAC8D0];
  v4 = a3;
  pk_Payment_log();
  v5 = objc_claimAutoreleasedReturnValue();
  v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    pk_Payment_log();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend(v4, "npkDescription");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      LODWORD(buf) = 138412290;
      *(_QWORD *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_213518000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Target carKeyRetryActivationCodeResponse: incoming protobuf %@", (uint8_t *)&buf, 0xCu);

    }
  }
  objc_msgSend(v4, "context");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "incomingResponseIdentifier");
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  *(_QWORD *)&buf = 0;
  *((_QWORD *)&buf + 1) = &buf;
  v25 = 0x3032000000;
  v26 = __Block_byref_object_copy__342;
  v27 = __Block_byref_object_dispose__343;
  v28 = 0;
  v22[0] = 0;
  v22[1] = v22;
  v22[2] = 0x3032000000;
  v22[3] = __Block_byref_object_copy__23;
  v22[4] = __Block_byref_object_dispose__23;
  v23 = 0;
  if (v10)
  {
    -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
    v11 = objc_claimAutoreleasedReturnValue();
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 3221225472;
    block[2] = __79__NPKPaymentWebServiceCompanionTargetDevice_carKeyRetryActivationCodeResponse___block_invoke;
    block[3] = &unk_24CFED390;
    block[4] = self;
    v18 = v10;
    p_buf = &buf;
    v19 = v4;
    v21 = v22;
    dispatch_sync(v11, block);

  }
  else
  {
    pk_Payment_log();
    v12 = objc_claimAutoreleasedReturnValue();
    v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      pk_Payment_log();
      v14 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)v16 = 0;
        _os_log_impl(&dword_213518000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v16, 2u);
      }

    }
  }
  v15 = *(_QWORD *)(*((_QWORD *)&buf + 1) + 40);
  if (v15)
    (*(void (**)(uint64_t, _QWORD))(v15 + 16))(v15, 0);
  _Block_object_dispose(v22, 8);

  _Block_object_dispose(&buf, 8);
}

void __79__NPKPaymentWebServiceCompanionTargetDevice_carKeyRetryActivationCodeResponse___block_invoke(uint64_t a1)
{
  void *v1;
  void *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  NPKProtoCarKeyRetryActivationCodeResponse *v9;
  void *v10;
  NPKProtoCarKeyRetryActivationCodeResponse *v11;
  _BOOL4 v12;
  NSObject *v13;
  void *v14;
  NSObject *v15;
  _BOOL4 v16;
  NSObject *v17;
  __int16 v18[8];

  objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "objectForKey:", *(_QWORD *)(a1 + 40));
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  if (v4)
  {
    objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "removeObjectForKey:", *(_QWORD *)(a1 + 40));

    objc_msgSend(v4, "completionHandler");
    v6 = objc_claimAutoreleasedReturnValue();
    v7 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
    v8 = *(void **)(v7 + 40);
    *(_QWORD *)(v7 + 40) = v6;

    v9 = [NPKProtoCarKeyRetryActivationCodeResponse alloc];
    objc_msgSend(*(id *)(a1 + 48), "data");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    v11 = -[NPKProtoCarKeyRetryActivationCodeResponse initWithData:](v9, "initWithData:", v10);

    v12 = -[NPKProtoCarKeyRetryActivationCodeResponse hasResultData](v11, "hasResultData");
    if (v12)
    {
      -[NPKProtoCarKeyRetryActivationCodeResponse resultData](v11, "resultData");
      v1 = (void *)objc_claimAutoreleasedReturnValue();
      v13 = objc_opt_class();
      NPKSecureUnarchiveObject(v1, v13);
      v14 = (void *)objc_claimAutoreleasedReturnValue();
    }
    else
    {
      v14 = 0;
    }
    objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 40), v14);
    if (v12)
    {

    }
  }
  else
  {
    pk_Payment_log();
    v15 = objc_claimAutoreleasedReturnValue();
    v16 = os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT);

    if (v16)
    {
      pk_Payment_log();
      v17 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
      {
        v18[0] = 0;
        _os_log_impl(&dword_213518000, v17, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", (uint8_t *)v18, 2u);
      }

    }
  }

}

- (void)carKeyDecryptData:(id)a3 credential:(id)a4 ephemeralPublicKey:(id)a5 completion:(id)a6
{
  id v10;
  id v11;
  id v12;
  id v13;
  NSObject *v14;
  NSObject *v15;
  _BOOL4 v16;
  NSObject *v17;
  void *v18;
  uint8_t v19[8];
  _QWORD block[4];
  id v21;
  id v22;
  id v23;
  NPKPaymentWebServiceCompanionTargetDevice *v24;
  id v25;

  v10 = a3;
  v11 = a4;
  v12 = a5;
  v13 = a6;
  if (-[NPKPaymentWebServiceCompanionTargetDevice _isSharingInAChainSupported](self, "_isSharingInAChainSupported"))
  {
    -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
    v14 = objc_claimAutoreleasedReturnValue();
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 3221225472;
    block[2] = __104__NPKPaymentWebServiceCompanionTargetDevice_carKeyDecryptData_credential_ephemeralPublicKey_completion___block_invoke;
    block[3] = &unk_24CFEDBB8;
    v21 = v10;
    v22 = v11;
    v23 = v12;
    v24 = self;
    v25 = v13;
    dispatch_sync(v14, block);

  }
  else
  {
    pk_Payment_log();
    v15 = objc_claimAutoreleasedReturnValue();
    v16 = os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT);

    if (v16)
    {
      pk_Payment_log();
      v17 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)v19 = 0;
        _os_log_impl(&dword_213518000, v17, OS_LOG_TYPE_DEFAULT, "Notice: Target device does not support carKeyDecryptData:credential:ephemeralPublicKey:completion: message.", v19, 2u);
      }

    }
    if (v13)
    {
      objc_msgSend(MEMORY[0x24BDD1540], "errorWithDomain:code:userInfo:", CFSTR("com.apple.NPKErrorDomain"), -1006, 0);
      v18 = (void *)objc_claimAutoreleasedReturnValue();
      (*((void (**)(id, _QWORD, void *))v13 + 2))(v13, 0, v18);

    }
  }

}

void __104__NPKPaymentWebServiceCompanionTargetDevice_carKeyDecryptData_credential_ephemeralPublicKey_completion___block_invoke(uint64_t a1)
{
  NSObject *v2;
  _BOOL4 v3;
  NSObject *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  NPKProtoCarKeyDecryptDataRequest *v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  NSObject *v18;
  void *v19;
  void *v20;
  void *v21;
  NSObject *v22;
  _BOOL4 v23;
  NSObject *v24;
  void *v25;
  uint64_t v26;
  NSObject *v27;
  _BOOL4 v28;
  const char *v29;
  NSObject *v30;
  os_log_type_t v31;
  NSObject *v32;
  _BOOL4 v33;
  _QWORD v34[4];
  id v35;
  uint64_t v36;
  void *v37;
  uint8_t buf[4];
  void *v39;
  __int16 v40;
  uint64_t v41;
  __int16 v42;
  uint64_t v43;
  __int16 v44;
  void *v45;
  uint64_t v46;

  v46 = *MEMORY[0x24BDAC8D0];
  pk_General_log();
  v2 = objc_claimAutoreleasedReturnValue();
  v3 = os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT);

  if (v3)
  {
    pk_General_log();
    v4 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      v5 = *(void **)(a1 + 32);
      v6 = *(_QWORD *)(a1 + 40);
      v7 = *(_QWORD *)(a1 + 48);
      v8 = (void *)MEMORY[0x2199B6780](*(_QWORD *)(a1 + 64));
      *(_DWORD *)buf = 138478595;
      v39 = v5;
      v40 = 2113;
      v41 = v6;
      v42 = 2113;
      v43 = v7;
      v44 = 2112;
      v45 = v8;
      _os_log_impl(&dword_213518000, v4, OS_LOG_TYPE_DEFAULT, "Notice: Target device - Request to decrypt car key data: (%{private}@), credential: (%{private}@), ephemeralPublicKey: (%{private}@), completion: %@", buf, 0x2Au);

    }
  }
  if (*(_QWORD *)(a1 + 40))
  {
    v9 = objc_alloc_init(NPKProtoCarKeyDecryptDataRequest);
    -[NPKProtoCarKeyDecryptDataRequest setEncryptedData:](v9, "setEncryptedData:", *(_QWORD *)(a1 + 32));
    NPKSecureArchiveObject(*(void **)(a1 + 40));
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    -[NPKProtoCarKeyDecryptDataRequest setCredentialData:](v9, "setCredentialData:", v10);

    NPKSecureArchiveObject(*(void **)(a1 + 48));
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    -[NPKProtoCarKeyDecryptDataRequest setEphemeralPublicKeyData:](v9, "setEphemeralPublicKeyData:", v11);

    v12 = objc_alloc(MEMORY[0x24BE4FE40]);
    -[NPKProtoCarKeyDecryptDataRequest data](v9, "data");
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    v14 = (void *)objc_msgSend(v12, "initWithProtobufData:type:isResponse:", v13, 151, 0);

    v15 = *(void **)(a1 + 56);
    v36 = *MEMORY[0x24BE4FB30];
    v37 = &unk_24D0566F0;
    objc_msgSend(MEMORY[0x24BDBCE70], "dictionaryWithObjects:forKeys:count:", &v37, &v36, 1);
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v15, "_sendProtobuf:responseExpected:extraOptions:", v14, 1, v16);
    v17 = (void *)objc_claimAutoreleasedReturnValue();

    if (v17)
    {
      if (*(_QWORD *)(a1 + 64))
      {
        v18 = MEMORY[0x2199B6780]();
        v34[0] = MEMORY[0x24BDAC760];
        v34[1] = 3221225472;
        v34[2] = __104__NPKPaymentWebServiceCompanionTargetDevice_carKeyDecryptData_credential_ephemeralPublicKey_completion___block_invoke_854;
        v34[3] = &unk_24CFE7B80;
        v35 = *(id *)(a1 + 64);
        v19 = (void *)MEMORY[0x2199B6780](v34);
        v20 = *(void **)(a1 + 56);
        v21 = (void *)MEMORY[0x2199B6780](v18);
        objc_msgSend(v20, "_trackOutstandingRequestWithMessageIdentifier:completionHandler:errorHandler:", v17, v21, v19);

LABEL_22:
        goto LABEL_23;
      }
      pk_Payment_log();
      v32 = objc_claimAutoreleasedReturnValue();
      v33 = os_log_type_enabled(v32, OS_LOG_TYPE_DEFAULT);

      if (v33)
      {
        pk_Payment_log();
        v18 = objc_claimAutoreleasedReturnValue();
        if (!os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT))
          goto LABEL_22;
        *(_DWORD *)buf = 138412290;
        v39 = v17;
        v29 = "Warning: No response expected for message with identifier %@";
        v30 = v18;
        v31 = OS_LOG_TYPE_DEFAULT;
        goto LABEL_21;
      }
    }
    else
    {
      pk_Payment_log();
      v27 = objc_claimAutoreleasedReturnValue();
      v28 = os_log_type_enabled(v27, OS_LOG_TYPE_ERROR);

      if (v28)
      {
        pk_Payment_log();
        v18 = objc_claimAutoreleasedReturnValue();
        if (!os_log_type_enabled(v18, OS_LOG_TYPE_ERROR))
          goto LABEL_22;
        *(_DWORD *)buf = 138412290;
        v39 = v14;
        v29 = "Error: No message identifier for protobuf %@";
        v30 = v18;
        v31 = OS_LOG_TYPE_ERROR;
LABEL_21:
        _os_log_impl(&dword_213518000, v30, v31, v29, buf, 0xCu);
        goto LABEL_22;
      }
    }
LABEL_23:

    goto LABEL_24;
  }
  pk_General_log();
  v22 = objc_claimAutoreleasedReturnValue();
  v23 = os_log_type_enabled(v22, OS_LOG_TYPE_ERROR);

  if (v23)
  {
    pk_General_log();
    v24 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v24, OS_LOG_TYPE_ERROR))
    {
      v25 = *(void **)(a1 + 40);
      *(_DWORD *)buf = 138477827;
      v39 = v25;
      _os_log_impl(&dword_213518000, v24, OS_LOG_TYPE_ERROR, "Error: Unable to decrypt car key data with nil credential (%{private}@)", buf, 0xCu);
    }

  }
  v26 = *(_QWORD *)(a1 + 64);
  if (v26)
  {
    PKDisplayableErrorForCommonType();
    v9 = (NPKProtoCarKeyDecryptDataRequest *)objc_claimAutoreleasedReturnValue();
    (*(void (**)(uint64_t, _QWORD, NPKProtoCarKeyDecryptDataRequest *))(v26 + 16))(v26, 0, v9);
LABEL_24:

  }
}

void __104__NPKPaymentWebServiceCompanionTargetDevice_carKeyDecryptData_credential_ephemeralPublicKey_completion___block_invoke_854(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  _BOOL4 v5;
  NSObject *v6;
  uint64_t v7;
  int v8;
  id v9;
  uint64_t v10;

  v10 = *MEMORY[0x24BDAC8D0];
  v3 = a2;
  pk_Payment_log();
  v4 = objc_claimAutoreleasedReturnValue();
  v5 = os_log_type_enabled(v4, OS_LOG_TYPE_ERROR);

  if (v5)
  {
    pk_Payment_log();
    v6 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      v8 = 138412290;
      v9 = v3;
      _os_log_impl(&dword_213518000, v6, OS_LOG_TYPE_ERROR, "Error: Provisioning service outstanding request error handler invoked: %@", (uint8_t *)&v8, 0xCu);
    }

  }
  v7 = *(_QWORD *)(a1 + 32);
  if (v7)
    (*(void (**)(uint64_t, _QWORD, id))(v7 + 16))(v7, 0, v3);

}

- (void)carKeyDecryptDataResponse:(id)a3
{
  id v4;
  NSObject *v5;
  _BOOL4 v6;
  NSObject *v7;
  void *v8;
  void *v9;
  void *v10;
  NSObject *v11;
  NSObject *v12;
  _BOOL4 v13;
  NSObject *v14;
  uint64_t v15;
  uint8_t v16[16];
  _QWORD block[5];
  id v18;
  id v19;
  __int128 *p_buf;
  uint64_t *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t (*v26)(uint64_t, uint64_t);
  void (*v27)(uint64_t);
  id v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t (*v32)(uint64_t, uint64_t);
  void (*v33)(uint64_t);
  id v34;
  __int128 buf;
  uint64_t v36;
  uint64_t (*v37)(uint64_t, uint64_t);
  void (*v38)(uint64_t);
  id v39;
  uint64_t v40;

  v40 = *MEMORY[0x24BDAC8D0];
  v4 = a3;
  pk_Payment_log();
  v5 = objc_claimAutoreleasedReturnValue();
  v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    pk_Payment_log();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend(v4, "npkDescription");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      LODWORD(buf) = 138412290;
      *(_QWORD *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_213518000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Target carKeyDecryptDataResponse: incoming protobuf %@", (uint8_t *)&buf, 0xCu);

    }
  }
  objc_msgSend(v4, "context");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "incomingResponseIdentifier");
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  *(_QWORD *)&buf = 0;
  *((_QWORD *)&buf + 1) = &buf;
  v36 = 0x3032000000;
  v37 = __Block_byref_object_copy__342;
  v38 = __Block_byref_object_dispose__343;
  v39 = 0;
  v29 = 0;
  v30 = &v29;
  v31 = 0x3032000000;
  v32 = __Block_byref_object_copy__23;
  v33 = __Block_byref_object_dispose__23;
  v34 = 0;
  v23 = 0;
  v24 = &v23;
  v25 = 0x3032000000;
  v26 = __Block_byref_object_copy__23;
  v27 = __Block_byref_object_dispose__23;
  v28 = 0;
  if (v10)
  {
    -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
    v11 = objc_claimAutoreleasedReturnValue();
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 3221225472;
    block[2] = __71__NPKPaymentWebServiceCompanionTargetDevice_carKeyDecryptDataResponse___block_invoke;
    block[3] = &unk_24CFED060;
    block[4] = self;
    v18 = v10;
    v19 = v4;
    p_buf = &buf;
    v21 = &v29;
    v22 = &v23;
    dispatch_sync(v11, block);

  }
  else
  {
    pk_Payment_log();
    v12 = objc_claimAutoreleasedReturnValue();
    v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      pk_Payment_log();
      v14 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)v16 = 0;
        _os_log_impl(&dword_213518000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v16, 2u);
      }

    }
  }
  v15 = *(_QWORD *)(*((_QWORD *)&buf + 1) + 40);
  if (v15)
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v15, v30[5], v24[5]);
  _Block_object_dispose(&v23, 8);

  _Block_object_dispose(&v29, 8);
  _Block_object_dispose(&buf, 8);

}

void __71__NPKPaymentWebServiceCompanionTargetDevice_carKeyDecryptDataResponse___block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;
  NPKProtoCarKeyDecryptDataResponse *v4;
  void *v5;
  NPKProtoCarKeyDecryptDataResponse *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  _BOOL4 v11;
  void *v12;
  NSObject *v13;
  _BOOL4 v14;
  NSObject *v15;
  _BOOL4 v16;
  NSObject *v17;
  void *v18;
  __int16 v19[8];

  objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "objectForKey:", *(_QWORD *)(a1 + 40));
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  if (v3)
  {
    v4 = [NPKProtoCarKeyDecryptDataResponse alloc];
    objc_msgSend(*(id *)(a1 + 48), "data");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    v6 = -[NPKProtoCarKeyDecryptDataResponse initWithData:](v4, "initWithData:", v5);

    objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "removeObjectForKey:", *(_QWORD *)(a1 + 40));

    objc_msgSend(v3, "completionHandler");
    v8 = objc_claimAutoreleasedReturnValue();
    v9 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
    v10 = *(void **)(v9 + 40);
    *(_QWORD *)(v9 + 40) = v8;

    v11 = -[NPKProtoCarKeyDecryptDataResponse hasEncryptedData](v6, "hasEncryptedData");
    if (v11)
    {
      -[NPKProtoCarKeyDecryptDataResponse encryptedData](v6, "encryptedData");
      v12 = (void *)objc_claimAutoreleasedReturnValue();
    }
    else
    {
      v12 = 0;
    }
    objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 40), v12);
    if (v11)

    v16 = -[NPKProtoCarKeyDecryptDataResponse hasErrorData](v6, "hasErrorData");
    if (v16)
    {
      -[NPKProtoCarKeyDecryptDataResponse errorData](v6, "errorData");
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      v17 = objc_opt_class();
      NPKSecureUnarchiveObject(v12, v17);
      v18 = (void *)objc_claimAutoreleasedReturnValue();
    }
    else
    {
      v18 = 0;
    }
    objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 72) + 8) + 40), v18);
    if (v16)
    {

    }
  }
  else
  {
    pk_Payment_log();
    v13 = objc_claimAutoreleasedReturnValue();
    v14 = os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT);

    if (v14)
    {
      pk_Payment_log();
      v15 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
      {
        v19[0] = 0;
        _os_log_impl(&dword_213518000, v15, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", (uint8_t *)v19, 2u);
      }

    }
  }

}

- (void)carKeyRejectInvitation:(id)a3 completion:(id)a4
{
  id v6;
  id v7;
  NSObject *v8;
  NSObject *v9;
  _BOOL4 v10;
  NSObject *v11;
  void *v12;
  uint8_t v13[8];
  _QWORD block[4];
  id v15;
  NPKPaymentWebServiceCompanionTargetDevice *v16;
  id v17;

  v6 = a3;
  v7 = a4;
  if (-[NPKPaymentWebServiceCompanionTargetDevice _isSharingInAChainSupported](self, "_isSharingInAChainSupported"))
  {
    -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
    v8 = objc_claimAutoreleasedReturnValue();
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 3221225472;
    block[2] = __79__NPKPaymentWebServiceCompanionTargetDevice_carKeyRejectInvitation_completion___block_invoke;
    block[3] = &unk_24CFED5E8;
    v15 = v6;
    v16 = self;
    v17 = v7;
    dispatch_sync(v8, block);

  }
  else
  {
    pk_Payment_log();
    v9 = objc_claimAutoreleasedReturnValue();
    v10 = os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT);

    if (v10)
    {
      pk_Payment_log();
      v11 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)v13 = 0;
        _os_log_impl(&dword_213518000, v11, OS_LOG_TYPE_DEFAULT, "Notice: Target device does not support carKeyRejectInvitation:completion: message.", v13, 2u);
      }

    }
    if (v7)
    {
      objc_msgSend(MEMORY[0x24BDD1540], "errorWithDomain:code:userInfo:", CFSTR("com.apple.NPKErrorDomain"), -1006, 0);
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      (*((void (**)(id, _QWORD, void *))v7 + 2))(v7, 0, v12);

    }
  }

}

void __79__NPKPaymentWebServiceCompanionTargetDevice_carKeyRejectInvitation_completion___block_invoke(uint64_t a1)
{
  NSObject *v2;
  _BOOL4 v3;
  NSObject *v4;
  void *v5;
  void *v6;
  NPKProtoCarKeyRejectInvitationRequest *v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  NSObject *v15;
  void *v16;
  void *v17;
  void *v18;
  NSObject *v19;
  _BOOL4 v20;
  NSObject *v21;
  void *v22;
  uint64_t v23;
  NSObject *v24;
  _BOOL4 v25;
  const char *v26;
  NSObject *v27;
  os_log_type_t v28;
  NSObject *v29;
  _BOOL4 v30;
  _QWORD v31[4];
  id v32;
  uint64_t v33;
  void *v34;
  uint8_t buf[4];
  void *v36;
  __int16 v37;
  void *v38;
  uint64_t v39;

  v39 = *MEMORY[0x24BDAC8D0];
  pk_General_log();
  v2 = objc_claimAutoreleasedReturnValue();
  v3 = os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT);

  if (v3)
  {
    pk_General_log();
    v4 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      v5 = *(void **)(a1 + 32);
      v6 = (void *)MEMORY[0x2199B6780](*(_QWORD *)(a1 + 48));
      *(_DWORD *)buf = 138478083;
      v36 = v5;
      v37 = 2112;
      v38 = v6;
      _os_log_impl(&dword_213518000, v4, OS_LOG_TYPE_DEFAULT, "Notice: Target device - Request to reject car key invitation: (%{private}@), completion: %@", buf, 0x16u);

    }
  }
  if (*(_QWORD *)(a1 + 32))
  {
    v7 = objc_alloc_init(NPKProtoCarKeyRejectInvitationRequest);
    NPKSecureArchiveObject(*(void **)(a1 + 32));
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    -[NPKProtoCarKeyRejectInvitationRequest setMessageData:](v7, "setMessageData:", v8);

    v9 = objc_alloc(MEMORY[0x24BE4FE40]);
    -[NPKProtoCarKeyRejectInvitationRequest data](v7, "data");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    v11 = (void *)objc_msgSend(v9, "initWithProtobufData:type:isResponse:", v10, 153, 0);

    v12 = *(void **)(a1 + 40);
    v33 = *MEMORY[0x24BE4FB30];
    v34 = &unk_24D0566F0;
    objc_msgSend(MEMORY[0x24BDBCE70], "dictionaryWithObjects:forKeys:count:", &v34, &v33, 1);
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v12, "_sendProtobuf:responseExpected:extraOptions:", v11, 1, v13);
    v14 = (void *)objc_claimAutoreleasedReturnValue();

    if (v14)
    {
      if (*(_QWORD *)(a1 + 48))
      {
        v15 = MEMORY[0x2199B6780]();
        v31[0] = MEMORY[0x24BDAC760];
        v31[1] = 3221225472;
        v31[2] = __79__NPKPaymentWebServiceCompanionTargetDevice_carKeyRejectInvitation_completion___block_invoke_857;
        v31[3] = &unk_24CFE7B80;
        v32 = *(id *)(a1 + 48);
        v16 = (void *)MEMORY[0x2199B6780](v31);
        v17 = *(void **)(a1 + 40);
        v18 = (void *)MEMORY[0x2199B6780](v15);
        objc_msgSend(v17, "_trackOutstandingRequestWithMessageIdentifier:completionHandler:errorHandler:", v14, v18, v16);

LABEL_22:
        goto LABEL_23;
      }
      pk_Payment_log();
      v29 = objc_claimAutoreleasedReturnValue();
      v30 = os_log_type_enabled(v29, OS_LOG_TYPE_DEFAULT);

      if (v30)
      {
        pk_Payment_log();
        v15 = objc_claimAutoreleasedReturnValue();
        if (!os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
          goto LABEL_22;
        *(_DWORD *)buf = 138412290;
        v36 = v14;
        v26 = "Warning: No response expected for message with identifier %@";
        v27 = v15;
        v28 = OS_LOG_TYPE_DEFAULT;
        goto LABEL_21;
      }
    }
    else
    {
      pk_Payment_log();
      v24 = objc_claimAutoreleasedReturnValue();
      v25 = os_log_type_enabled(v24, OS_LOG_TYPE_ERROR);

      if (v25)
      {
        pk_Payment_log();
        v15 = objc_claimAutoreleasedReturnValue();
        if (!os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
          goto LABEL_22;
        *(_DWORD *)buf = 138412290;
        v36 = v11;
        v26 = "Error: No message identifier for protobuf %@";
        v27 = v15;
        v28 = OS_LOG_TYPE_ERROR;
LABEL_21:
        _os_log_impl(&dword_213518000, v27, v28, v26, buf, 0xCu);
        goto LABEL_22;
      }
    }
LABEL_23:

    goto LABEL_24;
  }
  pk_General_log();
  v19 = objc_claimAutoreleasedReturnValue();
  v20 = os_log_type_enabled(v19, OS_LOG_TYPE_ERROR);

  if (v20)
  {
    pk_General_log();
    v21 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR))
    {
      v22 = *(void **)(a1 + 32);
      *(_DWORD *)buf = 138477827;
      v36 = v22;
      _os_log_impl(&dword_213518000, v21, OS_LOG_TYPE_ERROR, "Error: Unable to reject car key invitation with nil message (%{private}@)", buf, 0xCu);
    }

  }
  v23 = *(_QWORD *)(a1 + 48);
  if (v23)
  {
    PKDisplayableErrorForCommonType();
    v7 = (NPKProtoCarKeyRejectInvitationRequest *)objc_claimAutoreleasedReturnValue();
    (*(void (**)(uint64_t, _QWORD, NPKProtoCarKeyRejectInvitationRequest *))(v23 + 16))(v23, 0, v7);
LABEL_24:

  }
}

void __79__NPKPaymentWebServiceCompanionTargetDevice_carKeyRejectInvitation_completion___block_invoke_857(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  _BOOL4 v5;
  NSObject *v6;
  uint64_t v7;
  int v8;
  id v9;
  uint64_t v10;

  v10 = *MEMORY[0x24BDAC8D0];
  v3 = a2;
  pk_Payment_log();
  v4 = objc_claimAutoreleasedReturnValue();
  v5 = os_log_type_enabled(v4, OS_LOG_TYPE_ERROR);

  if (v5)
  {
    pk_Payment_log();
    v6 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      v8 = 138412290;
      v9 = v3;
      _os_log_impl(&dword_213518000, v6, OS_LOG_TYPE_ERROR, "Error: Provisioning service outstanding request error handler invoked: %@", (uint8_t *)&v8, 0xCu);
    }

  }
  v7 = *(_QWORD *)(a1 + 32);
  if (v7)
    (*(void (**)(uint64_t, _QWORD, id))(v7 + 16))(v7, 0, v3);

}

- (void)carKeyRejectInvitationResponse:(id)a3
{
  id v4;
  NSObject *v5;
  _BOOL4 v6;
  NSObject *v7;
  void *v8;
  void *v9;
  void *v10;
  NSObject *v11;
  NSObject *v12;
  _BOOL4 v13;
  NSObject *v14;
  uint64_t v15;
  uint8_t v16[16];
  _QWORD block[5];
  id v18;
  id v19;
  __int128 *p_buf;
  uint64_t *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t (*v26)(uint64_t, uint64_t);
  void (*v27)(uint64_t);
  id v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t (*v32)(uint64_t, uint64_t);
  void (*v33)(uint64_t);
  id v34;
  __int128 buf;
  uint64_t v36;
  uint64_t (*v37)(uint64_t, uint64_t);
  void (*v38)(uint64_t);
  id v39;
  uint64_t v40;

  v40 = *MEMORY[0x24BDAC8D0];
  v4 = a3;
  pk_Payment_log();
  v5 = objc_claimAutoreleasedReturnValue();
  v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    pk_Payment_log();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend(v4, "npkDescription");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      LODWORD(buf) = 138412290;
      *(_QWORD *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_213518000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Target carKeyRejectInvitationResponse: incoming protobuf %@", (uint8_t *)&buf, 0xCu);

    }
  }
  objc_msgSend(v4, "context");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "incomingResponseIdentifier");
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  *(_QWORD *)&buf = 0;
  *((_QWORD *)&buf + 1) = &buf;
  v36 = 0x3032000000;
  v37 = __Block_byref_object_copy__342;
  v38 = __Block_byref_object_dispose__343;
  v39 = 0;
  v29 = 0;
  v30 = &v29;
  v31 = 0x3032000000;
  v32 = __Block_byref_object_copy__23;
  v33 = __Block_byref_object_dispose__23;
  v34 = 0;
  v23 = 0;
  v24 = &v23;
  v25 = 0x3032000000;
  v26 = __Block_byref_object_copy__23;
  v27 = __Block_byref_object_dispose__23;
  v28 = 0;
  if (v10)
  {
    -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
    v11 = objc_claimAutoreleasedReturnValue();
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 3221225472;
    block[2] = __76__NPKPaymentWebServiceCompanionTargetDevice_carKeyRejectInvitationResponse___block_invoke;
    block[3] = &unk_24CFED060;
    block[4] = self;
    v18 = v10;
    v19 = v4;
    p_buf = &buf;
    v21 = &v29;
    v22 = &v23;
    dispatch_sync(v11, block);

  }
  else
  {
    pk_Payment_log();
    v12 = objc_claimAutoreleasedReturnValue();
    v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      pk_Payment_log();
      v14 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)v16 = 0;
        _os_log_impl(&dword_213518000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v16, 2u);
      }

    }
  }
  v15 = *(_QWORD *)(*((_QWORD *)&buf + 1) + 40);
  if (v15)
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v15, v30[5], v24[5]);
  _Block_object_dispose(&v23, 8);

  _Block_object_dispose(&v29, 8);
  _Block_object_dispose(&buf, 8);

}

void __76__NPKPaymentWebServiceCompanionTargetDevice_carKeyRejectInvitationResponse___block_invoke(uint64_t a1)
{
  void *v1;
  void *v3;
  void *v4;
  NPKProtoCarKeyRejectInvitationResponse *v5;
  void *v6;
  NPKProtoCarKeyRejectInvitationResponse *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  _BOOL4 v12;
  NSObject *v13;
  void *v14;
  NSObject *v15;
  _BOOL4 v16;
  NSObject *v17;
  _BOOL4 v18;
  NSObject *v19;
  void *v20;
  __int16 v21[8];

  objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "objectForKey:", *(_QWORD *)(a1 + 40));
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  if (v4)
  {
    v5 = [NPKProtoCarKeyRejectInvitationResponse alloc];
    objc_msgSend(*(id *)(a1 + 48), "data");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    v7 = -[NPKProtoCarKeyRejectInvitationResponse initWithData:](v5, "initWithData:", v6);

    objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "removeObjectForKey:", *(_QWORD *)(a1 + 40));

    objc_msgSend(v4, "completionHandler");
    v9 = objc_claimAutoreleasedReturnValue();
    v10 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
    v11 = *(void **)(v10 + 40);
    *(_QWORD *)(v10 + 40) = v9;

    v12 = -[NPKProtoCarKeyRejectInvitationResponse hasCancelationMessageData](v7, "hasCancelationMessageData");
    if (v12)
    {
      -[NPKProtoCarKeyRejectInvitationResponse cancelationMessageData](v7, "cancelationMessageData");
      v1 = (void *)objc_claimAutoreleasedReturnValue();
      v13 = objc_opt_class();
      NPKSecureUnarchiveObject(v1, v13);
      v14 = (void *)objc_claimAutoreleasedReturnValue();
    }
    else
    {
      v14 = 0;
    }
    objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 40), v14);
    if (v12)
    {

    }
    v18 = -[NPKProtoCarKeyRejectInvitationResponse hasErrorData](v7, "hasErrorData");
    if (v18)
    {
      -[NPKProtoCarKeyRejectInvitationResponse errorData](v7, "errorData");
      v1 = (void *)objc_claimAutoreleasedReturnValue();
      v19 = objc_opt_class();
      NPKSecureUnarchiveObject(v1, v19);
      v20 = (void *)objc_claimAutoreleasedReturnValue();
    }
    else
    {
      v20 = 0;
    }
    objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 72) + 8) + 40), v20);
    if (v18)
    {

    }
  }
  else
  {
    pk_Payment_log();
    v15 = objc_claimAutoreleasedReturnValue();
    v16 = os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT);

    if (v16)
    {
      pk_Payment_log();
      v17 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
      {
        v21[0] = 0;
        _os_log_impl(&dword_213518000, v17, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", (uint8_t *)v21, 2u);
      }

    }
  }

}

- (void)cancelAutoTopUpForPassWithUniqueIdentifier:(id)a3 balanceIdentifiers:(id)a4 completion:(id)a5
{
  id v8;
  id v9;
  id v10;
  NSObject *v11;
  NSObject *v12;
  _BOOL4 v13;
  NSObject *v14;
  uint8_t v15[16];
  _QWORD block[4];
  id v17;
  id v18;
  NPKPaymentWebServiceCompanionTargetDevice *v19;
  id v20;

  v8 = a3;
  v9 = a4;
  v10 = a5;
  if (-[NPKPaymentWebServiceCompanionTargetDevice _isAutoTopUpSupported](self, "_isAutoTopUpSupported"))
  {
    -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
    v11 = objc_claimAutoreleasedReturnValue();
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 3221225472;
    block[2] = __118__NPKPaymentWebServiceCompanionTargetDevice_cancelAutoTopUpForPassWithUniqueIdentifier_balanceIdentifiers_completion___block_invoke;
    block[3] = &unk_24CFE8740;
    v17 = v8;
    v18 = v9;
    v19 = self;
    v20 = v10;
    dispatch_sync(v11, block);

  }
  else
  {
    pk_Payment_log();
    v12 = objc_claimAutoreleasedReturnValue();
    v13 = os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT);

    if (v13)
    {
      pk_Payment_log();
      v14 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)v15 = 0;
        _os_log_impl(&dword_213518000, v14, OS_LOG_TYPE_DEFAULT, "Notice: Target device does not support auto top up.", v15, 2u);
      }

    }
    if (v10)
      (*((void (**)(id, _QWORD))v10 + 2))(v10, 0);
  }

}

void __118__NPKPaymentWebServiceCompanionTargetDevice_cancelAutoTopUpForPassWithUniqueIdentifier_balanceIdentifiers_completion___block_invoke(uint64_t a1)
{
  NSObject *v2;
  _BOOL4 v3;
  NSObject *v4;
  void *v5;
  uint64_t v6;
  void *v7;
  NPKProtoCancelAutoTopUpRequest *v8;
  void *v9;
  uint64_t v10;
  NPKProtoCancelAutoTopUpRequest *v11;
  id v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  NSObject *v18;
  void *v19;
  void *v20;
  void *v21;
  NSObject *v22;
  _BOOL4 v23;
  NSObject *v24;
  void *v25;
  uint64_t v26;
  NSObject *v27;
  _BOOL4 v28;
  const char *v29;
  NSObject *v30;
  os_log_type_t v31;
  NSObject *v32;
  _BOOL4 v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(uint64_t, void *);
  void *v37;
  id v38;
  _QWORD v39[4];
  NPKProtoCancelAutoTopUpRequest *v40;
  uint64_t v41;
  void *v42;
  uint8_t buf[4];
  void *v44;
  __int16 v45;
  uint64_t v46;
  __int16 v47;
  void *v48;
  uint64_t v49;

  v49 = *MEMORY[0x24BDAC8D0];
  pk_General_log();
  v2 = objc_claimAutoreleasedReturnValue();
  v3 = os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT);

  if (v3)
  {
    pk_General_log();
    v4 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      v5 = *(void **)(a1 + 32);
      v6 = *(_QWORD *)(a1 + 40);
      v7 = (void *)MEMORY[0x2199B6780](*(_QWORD *)(a1 + 56));
      *(_DWORD *)buf = 138412802;
      v44 = v5;
      v45 = 2112;
      v46 = v6;
      v47 = 2112;
      v48 = v7;
      _os_log_impl(&dword_213518000, v4, OS_LOG_TYPE_DEFAULT, "Notice: Target device - Request to cancel auto top up for pass with id: %@, balanceIdentifiers : %@, completion: %@", buf, 0x20u);

    }
  }
  if (*(_QWORD *)(a1 + 32))
  {
    v8 = objc_alloc_init(NPKProtoCancelAutoTopUpRequest);
    -[NPKProtoCancelAutoTopUpRequest setUniqueID:](v8, "setUniqueID:", *(_QWORD *)(a1 + 32));
    v9 = *(void **)(a1 + 40);
    v10 = MEMORY[0x24BDAC760];
    v39[0] = MEMORY[0x24BDAC760];
    v39[1] = 3221225472;
    v39[2] = __118__NPKPaymentWebServiceCompanionTargetDevice_cancelAutoTopUpForPassWithUniqueIdentifier_balanceIdentifiers_completion___block_invoke_861;
    v39[3] = &unk_24CFEBC28;
    v11 = v8;
    v40 = v11;
    objc_msgSend(v9, "enumerateObjectsUsingBlock:", v39);
    v12 = objc_alloc(MEMORY[0x24BE4FE40]);
    -[NPKProtoCancelAutoTopUpRequest data](v11, "data");
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    v14 = (void *)objc_msgSend(v12, "initWithProtobufData:type:isResponse:", v13, 138, 0);

    v15 = *(void **)(a1 + 48);
    v41 = *MEMORY[0x24BE4FB30];
    v42 = &unk_24D0566F0;
    objc_msgSend(MEMORY[0x24BDBCE70], "dictionaryWithObjects:forKeys:count:", &v42, &v41, 1);
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v15, "_sendProtobuf:responseExpected:extraOptions:", v14, 1, v16);
    v17 = (void *)objc_claimAutoreleasedReturnValue();

    if (v17)
    {
      if (*(_QWORD *)(a1 + 56))
      {
        v18 = MEMORY[0x2199B6780]();
        v34 = v10;
        v35 = 3221225472;
        v36 = __118__NPKPaymentWebServiceCompanionTargetDevice_cancelAutoTopUpForPassWithUniqueIdentifier_balanceIdentifiers_completion___block_invoke_2;
        v37 = &unk_24CFE7B80;
        v38 = *(id *)(a1 + 56);
        v19 = (void *)MEMORY[0x2199B6780](&v34);
        v20 = *(void **)(a1 + 48);
        v21 = (void *)MEMORY[0x2199B6780](v18);
        objc_msgSend(v20, "_trackOutstandingRequestWithMessageIdentifier:completionHandler:errorHandler:", v17, v21, v19, v34, v35, v36, v37);

LABEL_22:
        goto LABEL_23;
      }
      pk_Payment_log();
      v32 = objc_claimAutoreleasedReturnValue();
      v33 = os_log_type_enabled(v32, OS_LOG_TYPE_DEFAULT);

      if (v33)
      {
        pk_Payment_log();
        v18 = objc_claimAutoreleasedReturnValue();
        if (!os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT))
          goto LABEL_22;
        *(_DWORD *)buf = 138412290;
        v44 = v17;
        v29 = "Warning: No response expected for message with identifier %@";
        v30 = v18;
        v31 = OS_LOG_TYPE_DEFAULT;
        goto LABEL_21;
      }
    }
    else
    {
      pk_Payment_log();
      v27 = objc_claimAutoreleasedReturnValue();
      v28 = os_log_type_enabled(v27, OS_LOG_TYPE_ERROR);

      if (v28)
      {
        pk_Payment_log();
        v18 = objc_claimAutoreleasedReturnValue();
        if (!os_log_type_enabled(v18, OS_LOG_TYPE_ERROR))
          goto LABEL_22;
        *(_DWORD *)buf = 138412290;
        v44 = v14;
        v29 = "Error: No message identifier for protobuf %@";
        v30 = v18;
        v31 = OS_LOG_TYPE_ERROR;
LABEL_21:
        _os_log_impl(&dword_213518000, v30, v31, v29, buf, 0xCu);
        goto LABEL_22;
      }
    }
LABEL_23:

    return;
  }
  pk_General_log();
  v22 = objc_claimAutoreleasedReturnValue();
  v23 = os_log_type_enabled(v22, OS_LOG_TYPE_ERROR);

  if (v23)
  {
    pk_General_log();
    v24 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v24, OS_LOG_TYPE_ERROR))
    {
      v25 = *(void **)(a1 + 32);
      *(_DWORD *)buf = 138412290;
      v44 = v25;
      _os_log_impl(&dword_213518000, v24, OS_LOG_TYPE_ERROR, "Error: Unable to fetch pass with unique identifier (%@)", buf, 0xCu);
    }

  }
  v26 = *(_QWORD *)(a1 + 56);
  if (v26)
    (*(void (**)(uint64_t, _QWORD))(v26 + 16))(v26, 0);
}

uint64_t __118__NPKPaymentWebServiceCompanionTargetDevice_cancelAutoTopUpForPassWithUniqueIdentifier_balanceIdentifiers_completion___block_invoke_861(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(a1 + 32), "addBalanceIdentifiers:", a2);
}

void __118__NPKPaymentWebServiceCompanionTargetDevice_cancelAutoTopUpForPassWithUniqueIdentifier_balanceIdentifiers_completion___block_invoke_2(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  _BOOL4 v5;
  NSObject *v6;
  uint64_t v7;
  int v8;
  id v9;
  uint64_t v10;

  v10 = *MEMORY[0x24BDAC8D0];
  v3 = a2;
  pk_Payment_log();
  v4 = objc_claimAutoreleasedReturnValue();
  v5 = os_log_type_enabled(v4, OS_LOG_TYPE_ERROR);

  if (v5)
  {
    pk_Payment_log();
    v6 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      v8 = 138412290;
      v9 = v3;
      _os_log_impl(&dword_213518000, v6, OS_LOG_TYPE_ERROR, "Error: Provisioning service outstanding request error handler invoked: %@", (uint8_t *)&v8, 0xCu);
    }

  }
  v7 = *(_QWORD *)(a1 + 32);
  if (v7)
    (*(void (**)(uint64_t, _QWORD))(v7 + 16))(v7, 0);

}

- (void)cancelAutoTopUpResponse:(id)a3
{
  id v4;
  NSObject *v5;
  _BOOL4 v6;
  NSObject *v7;
  void *v8;
  void *v9;
  void *v10;
  NSObject *v11;
  NSObject *v12;
  _BOOL4 v13;
  NSObject *v14;
  uint64_t v15;
  uint8_t v16[8];
  _QWORD block[5];
  id v18;
  id v19;
  uint64_t *v20;
  __int128 *p_buf;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  char v25;
  __int128 buf;
  uint64_t v27;
  uint64_t (*v28)(uint64_t, uint64_t);
  void (*v29)(uint64_t);
  id v30;
  uint64_t v31;

  v31 = *MEMORY[0x24BDAC8D0];
  v4 = a3;
  pk_Payment_log();
  v5 = objc_claimAutoreleasedReturnValue();
  v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    pk_Payment_log();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend(v4, "npkDescription");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      LODWORD(buf) = 138412290;
      *(_QWORD *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_213518000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Cancel auto top up incoming protobuf %@", (uint8_t *)&buf, 0xCu);

    }
  }
  objc_msgSend(v4, "context");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "incomingResponseIdentifier");
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  *(_QWORD *)&buf = 0;
  *((_QWORD *)&buf + 1) = &buf;
  v27 = 0x3032000000;
  v28 = __Block_byref_object_copy__342;
  v29 = __Block_byref_object_dispose__343;
  v30 = 0;
  v22 = 0;
  v23 = &v22;
  v24 = 0x2020000000;
  v25 = 0;
  if (v10)
  {
    -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
    v11 = objc_claimAutoreleasedReturnValue();
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 3221225472;
    block[2] = __69__NPKPaymentWebServiceCompanionTargetDevice_cancelAutoTopUpResponse___block_invoke;
    block[3] = &unk_24CFED0D8;
    block[4] = self;
    v18 = v10;
    v19 = v4;
    v20 = &v22;
    p_buf = &buf;
    dispatch_sync(v11, block);

  }
  else
  {
    pk_Payment_log();
    v12 = objc_claimAutoreleasedReturnValue();
    v13 = os_log_type_enabled(v12, OS_LOG_TYPE_ERROR);

    if (v13)
    {
      pk_Payment_log();
      v14 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)v16 = 0;
        _os_log_impl(&dword_213518000, v14, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v16, 2u);
      }

    }
  }
  v15 = *(_QWORD *)(*((_QWORD *)&buf + 1) + 40);
  if (v15)
    (*(void (**)(uint64_t, _QWORD))(v15 + 16))(v15, *((unsigned __int8 *)v23 + 24));
  _Block_object_dispose(&v22, 8);
  _Block_object_dispose(&buf, 8);

}

void __69__NPKPaymentWebServiceCompanionTargetDevice_cancelAutoTopUpResponse___block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;
  NPKProtoCancelAutoTopUpResponse *v4;
  void *v5;
  NPKProtoCancelAutoTopUpResponse *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  NSObject *v10;
  _BOOL4 v11;
  NSObject *v12;
  uint8_t v13[16];

  objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "objectForKey:", *(_QWORD *)(a1 + 40));
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  if (v3)
  {
    v4 = [NPKProtoCancelAutoTopUpResponse alloc];
    objc_msgSend(*(id *)(a1 + 48), "data");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    v6 = -[NPKProtoCancelAutoTopUpResponse initWithData:](v4, "initWithData:", v5);

    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 24) = -[NPKProtoCancelAutoTopUpResponse success](v6, "success");
    objc_msgSend(v3, "completionHandler");
    v7 = objc_claimAutoreleasedReturnValue();
    v8 = *(_QWORD *)(*(_QWORD *)(a1 + 64) + 8);
    v9 = *(void **)(v8 + 40);
    *(_QWORD *)(v8 + 40) = v7;

  }
  else
  {
    pk_Payment_log();
    v10 = objc_claimAutoreleasedReturnValue();
    v11 = os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT);

    if (v11)
    {
      pk_Payment_log();
      v12 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)v13 = 0;
        _os_log_impl(&dword_213518000, v12, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", v13, 2u);
      }

    }
  }

}

- (void)serviceProviderDataForPassWithUniqueIdentifierResponse:(id)a3
{
  id v4;
  NSObject *v5;
  _BOOL4 v6;
  NSObject *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  NSObject *v12;
  NSObject *v13;
  _BOOL4 v14;
  NSObject *v15;
  NSObject *v16;
  _BOOL4 v17;
  NSObject *v18;
  NSObject *v19;
  _BOOL4 v20;
  NSObject *v21;
  uint8_t v22[8];
  _QWORD block[5];
  id v24;
  id v25;
  _BYTE *v26;
  _QWORD *v27;
  _QWORD *v28;
  _QWORD *v29;
  _QWORD v30[5];
  id v31;
  _QWORD v32[3];
  char v33;
  _QWORD v34[5];
  id v35;
  _BYTE buf[24];
  uint64_t (*v37)(uint64_t, uint64_t);
  void (*v38)(uint64_t);
  id v39;
  uint64_t v40;

  v40 = *MEMORY[0x24BDAC8D0];
  v4 = a3;
  pk_Payment_log();
  v5 = objc_claimAutoreleasedReturnValue();
  v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    pk_Payment_log();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend(v4, "npkDescription");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v4, "data");
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138412546;
      *(_QWORD *)&buf[4] = v8;
      *(_WORD *)&buf[12] = 2048;
      *(_QWORD *)&buf[14] = objc_msgSend(v9, "length");
      _os_log_impl(&dword_213518000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Target serviceProviderDataForPassWithUniqueIdentifierResponse: incoming protobuf %@. Data size: %lu", buf, 0x16u);

    }
  }
  objc_msgSend(v4, "context");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v10, "incomingResponseIdentifier");
  v11 = (void *)objc_claimAutoreleasedReturnValue();

  *(_QWORD *)buf = 0;
  *(_QWORD *)&buf[8] = buf;
  *(_QWORD *)&buf[16] = 0x3032000000;
  v37 = __Block_byref_object_copy__342;
  v38 = __Block_byref_object_dispose__343;
  v39 = 0;
  v34[0] = 0;
  v34[1] = v34;
  v34[2] = 0x3032000000;
  v34[3] = __Block_byref_object_copy__23;
  v34[4] = __Block_byref_object_dispose__23;
  v35 = 0;
  v32[0] = 0;
  v32[1] = v32;
  v32[2] = 0x2020000000;
  v33 = 0;
  v30[0] = 0;
  v30[1] = v30;
  v30[2] = 0x3032000000;
  v30[3] = __Block_byref_object_copy__23;
  v30[4] = __Block_byref_object_dispose__23;
  v31 = 0;
  if (v11)
  {
    -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
    v12 = objc_claimAutoreleasedReturnValue();
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 3221225472;
    block[2] = __100__NPKPaymentWebServiceCompanionTargetDevice_serviceProviderDataForPassWithUniqueIdentifierResponse___block_invoke;
    block[3] = &unk_24CFECFC0;
    block[4] = self;
    v24 = v11;
    v25 = v4;
    v26 = buf;
    v27 = v34;
    v28 = v32;
    v29 = v30;
    dispatch_sync(v12, block);

  }
  else
  {
    pk_Payment_log();
    v13 = objc_claimAutoreleasedReturnValue();
    v14 = os_log_type_enabled(v13, OS_LOG_TYPE_ERROR);

    if (v14)
    {
      pk_Payment_log();
      v15 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)v22 = 0;
        _os_log_impl(&dword_213518000, v15, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v22, 2u);
      }

    }
  }
  if (*(_QWORD *)(*(_QWORD *)&buf[8] + 40))
  {
    pk_Payment_log();
    v16 = objc_claimAutoreleasedReturnValue();
    v17 = os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT);

    if (v17)
    {
      pk_Payment_log();
      v18 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)v22 = 0;
        _os_log_impl(&dword_213518000, v18, OS_LOG_TYPE_DEFAULT, "Notice: Target serviceProviderDataForPassWithUniqueIdentifierResponse. Calling completion block", v22, 2u);
      }

    }
    (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)&buf[8] + 40) + 16))();
  }
  else
  {
    pk_Payment_log();
    v19 = objc_claimAutoreleasedReturnValue();
    v20 = os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT);

    if (v20)
    {
      pk_Payment_log();
      v21 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v21, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)v22 = 0;
        _os_log_impl(&dword_213518000, v21, OS_LOG_TYPE_DEFAULT, "Warning: Target serviceProviderDataForPassWithUniqueIdentifierResponse. No completion block to call, unexpected.", v22, 2u);
      }

    }
  }
  _Block_object_dispose(v30, 8);

  _Block_object_dispose(v32, 8);
  _Block_object_dispose(v34, 8);

  _Block_object_dispose(buf, 8);
}

void __100__NPKPaymentWebServiceCompanionTargetDevice_serviceProviderDataForPassWithUniqueIdentifierResponse___block_invoke(uint64_t a1)
{
  void *v1;
  void *v3;
  void *v4;
  NPKProtoServiceProviderDataForPassWithUniqueIdentifierResponse *v5;
  void *v6;
  NPKProtoServiceProviderDataForPassWithUniqueIdentifierResponse *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  _BOOL4 v15;
  NSObject *v16;
  void *v17;
  NSObject *v18;
  _BOOL4 v19;
  NSObject *v20;
  __int16 v21[8];

  objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "objectForKey:", *(_QWORD *)(a1 + 40));
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  if (v4)
  {
    v5 = [NPKProtoServiceProviderDataForPassWithUniqueIdentifierResponse alloc];
    objc_msgSend(*(id *)(a1 + 48), "data");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    v7 = -[NPKProtoServiceProviderDataForPassWithUniqueIdentifierResponse initWithData:](v5, "initWithData:", v6);

    objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "removeObjectForKey:", *(_QWORD *)(a1 + 40));

    objc_msgSend(v4, "completionHandler");
    v9 = objc_claimAutoreleasedReturnValue();
    v10 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
    v11 = *(void **)(v10 + 40);
    *(_QWORD *)(v10 + 40) = v9;

    -[NPKProtoServiceProviderDataForPassWithUniqueIdentifierResponse serviceProviderData](v7, "serviceProviderData");
    v12 = objc_claimAutoreleasedReturnValue();
    v13 = *(_QWORD *)(*(_QWORD *)(a1 + 64) + 8);
    v14 = *(void **)(v13 + 40);
    *(_QWORD *)(v13 + 40) = v12;

    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 72) + 8) + 24) = -[NPKProtoServiceProviderDataForPassWithUniqueIdentifierResponse encrypted](v7, "encrypted");
    v15 = -[NPKProtoServiceProviderDataForPassWithUniqueIdentifierResponse hasErrorData](v7, "hasErrorData");
    if (v15)
    {
      -[NPKProtoServiceProviderDataForPassWithUniqueIdentifierResponse errorData](v7, "errorData");
      v1 = (void *)objc_claimAutoreleasedReturnValue();
      v16 = objc_opt_class();
      NPKSecureUnarchiveObject(v1, v16);
      v17 = (void *)objc_claimAutoreleasedReturnValue();
    }
    else
    {
      v17 = 0;
    }
    objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 80) + 8) + 40), v17);
    if (v15)
    {

    }
  }
  else
  {
    pk_Payment_log();
    v18 = objc_claimAutoreleasedReturnValue();
    v19 = os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT);

    if (v19)
    {
      pk_Payment_log();
      v20 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v20, OS_LOG_TYPE_DEFAULT))
      {
        v21[0] = 0;
        _os_log_impl(&dword_213518000, v20, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", (uint8_t *)v21, 2u);
      }

    }
  }

}

- (void)serviceProviderDataForPassWithUniqueIdentifier:(id)a3 encrypted:(BOOL)a4 completion:(id)a5
{
  __CFString *v8;
  id v9;
  void *v10;
  void *v11;
  int v12;
  void *v13;
  void *v14;
  NSObject *v15;
  _BOOL4 v16;
  NSObject *v17;
  const __CFString *v18;
  NSObject *v19;
  void *v20;
  NSObject *v21;
  _BOOL4 v22;
  NSObject *v23;
  _QWORD v24[4];
  __CFString *v25;
  NPKPaymentWebServiceCompanionTargetDevice *v26;
  id v27;
  BOOL v28;
  uint8_t buf[4];
  const __CFString *v30;
  uint64_t v31;

  v31 = *MEMORY[0x24BDAC8D0];
  v8 = (__CFString *)a3;
  v9 = a5;
  NPKPairedOrPairingDevice();
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v11 = (void *)objc_msgSend(objc_alloc(MEMORY[0x24BDD1880]), "initWithUUIDString:", CFSTR("674FD660-822D-4A0A-8A10-7ED7299FB8F7"));
  if ((objc_msgSend(v10, "supportsCapability:", v11) & 1) != 0)
  {
    v12 = 1;
  }
  else
  {
    v13 = (void *)objc_msgSend(objc_alloc(MEMORY[0x24BDD1880]), "initWithUUIDString:", CFSTR("FA784EAB-0396-4E07-B68A-66815BB84E3E"));
    if ((objc_msgSend(v10, "supportsCapability:", v13) & 1) != 0)
    {
      v12 = 1;
    }
    else
    {
      v14 = (void *)objc_msgSend(objc_alloc(MEMORY[0x24BDD1880]), "initWithUUIDString:", CFSTR("D3581A95-1F64-4EBD-8F71-0CD6B696D766"));
      v12 = objc_msgSend(v10, "supportsCapability:", v14);

    }
  }

  pk_General_log();
  v15 = objc_claimAutoreleasedReturnValue();
  v16 = os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT);

  if (v16)
  {
    pk_General_log();
    v17 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
    {
      v18 = CFSTR("NO");
      if (v12)
        v18 = CFSTR("YES");
      *(_DWORD *)buf = 138412290;
      v30 = v18;
      _os_log_impl(&dword_213518000, v17, OS_LOG_TYPE_DEFAULT, "Notice: Target device serviceProviderDataForPassWithUniqueIdentifier, Service Provider Data support %@", buf, 0xCu);
    }

  }
  if ((v12 & 1) != 0)
  {
    -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
    v19 = objc_claimAutoreleasedReturnValue();
    v24[0] = MEMORY[0x24BDAC760];
    v24[1] = 3221225472;
    v24[2] = __113__NPKPaymentWebServiceCompanionTargetDevice_serviceProviderDataForPassWithUniqueIdentifier_encrypted_completion___block_invoke;
    v24[3] = &unk_24CFED4D0;
    v28 = a4;
    v25 = v8;
    v26 = self;
    v27 = v9;
    dispatch_sync(v19, v24);

    v20 = v25;
LABEL_21:

    goto LABEL_22;
  }
  pk_General_log();
  v21 = objc_claimAutoreleasedReturnValue();
  v22 = os_log_type_enabled(v21, OS_LOG_TYPE_DEFAULT);

  if (v22)
  {
    pk_General_log();
    v23 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v23, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138412290;
      v30 = v8;
      _os_log_impl(&dword_213518000, v23, OS_LOG_TYPE_DEFAULT, "Notice: Target device does not support the message. Not sending message to get Service Provider data for pass with unique ID %@.", buf, 0xCu);
    }

  }
  if (v9)
  {
    objc_msgSend(MEMORY[0x24BDD1540], "errorWithDomain:code:userInfo:", CFSTR("com.apple.NPKErrorDomain"), -1006, 0);
    v20 = (void *)objc_claimAutoreleasedReturnValue();
    (*((void (**)(id, _QWORD, void *))v9 + 2))(v9, 0, v20);
    goto LABEL_21;
  }
LABEL_22:

}

void __113__NPKPaymentWebServiceCompanionTargetDevice_serviceProviderDataForPassWithUniqueIdentifier_encrypted_completion___block_invoke(uint64_t a1)
{
  NSObject *v2;
  _BOOL4 v3;
  NSObject *v4;
  void *v5;
  NPKProtoServiceProviderDataForPassWithUniqueIdentifierRequest *v6;
  id v7;
  void *v8;
  void *v9;
  uint64_t v10;
  void *v11;
  void *v12;
  void *v13;
  uint64_t v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  NSObject *v19;
  NSObject *v20;
  _BOOL4 v21;
  const char *v22;
  NSObject *v23;
  os_log_type_t v24;
  NSObject *v25;
  _BOOL4 v26;
  _QWORD v27[4];
  id v28;
  _QWORD v29[4];
  NSObject *v30;
  char v31;
  _QWORD v32[2];
  _QWORD v33[2];
  uint8_t buf[4];
  void *v35;
  uint64_t v36;

  v36 = *MEMORY[0x24BDAC8D0];
  pk_General_log();
  v2 = objc_claimAutoreleasedReturnValue();
  v3 = os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT);

  if (v3)
  {
    pk_General_log();
    v4 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      v5 = *(void **)(a1 + 32);
      *(_DWORD *)buf = 138412290;
      v35 = v5;
      _os_log_impl(&dword_213518000, v4, OS_LOG_TYPE_DEFAULT, "Notice: Service Provider data for pass with unique ID %@. Sending message", buf, 0xCu);
    }

  }
  v6 = objc_alloc_init(NPKProtoServiceProviderDataForPassWithUniqueIdentifierRequest);
  -[NPKProtoServiceProviderDataForPassWithUniqueIdentifierRequest setPassUniqueID:](v6, "setPassUniqueID:", *(_QWORD *)(a1 + 32));
  -[NPKProtoServiceProviderDataForPassWithUniqueIdentifierRequest setEncrypted:](v6, "setEncrypted:", *(unsigned __int8 *)(a1 + 56));
  v7 = objc_alloc(MEMORY[0x24BE4FE40]);
  -[NPKProtoServiceProviderDataForPassWithUniqueIdentifierRequest data](v6, "data");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v9 = (void *)objc_msgSend(v7, "initWithProtobufData:type:isResponse:", v8, 104, 0);

  v10 = *MEMORY[0x24BE4FA78];
  v32[0] = *MEMORY[0x24BE4FAC0];
  v32[1] = v10;
  v33[0] = MEMORY[0x24BDBD1C8];
  v33[1] = MEMORY[0x24BDBD1C8];
  objc_msgSend(MEMORY[0x24BDBCE70], "dictionaryWithObjects:forKeys:count:", v33, v32, 2);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(*(id *)(a1 + 40), "_sendProtobuf:responseExpected:extraOptions:priority:", v9, 1, v11, 300);
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  if (v12)
  {
    v13 = *(void **)(a1 + 48);
    if (v13)
    {
      v14 = MEMORY[0x24BDAC760];
      v29[0] = MEMORY[0x24BDAC760];
      v29[1] = 3221225472;
      v29[2] = __113__NPKPaymentWebServiceCompanionTargetDevice_serviceProviderDataForPassWithUniqueIdentifier_encrypted_completion___block_invoke_871;
      v29[3] = &unk_24CFEDCD0;
      v31 = *(_BYTE *)(a1 + 56);
      v30 = v13;
      v15 = (void *)MEMORY[0x2199B6780](v29);
      v27[0] = v14;
      v27[1] = 3221225472;
      v27[2] = __113__NPKPaymentWebServiceCompanionTargetDevice_serviceProviderDataForPassWithUniqueIdentifier_encrypted_completion___block_invoke_873;
      v27[3] = &unk_24CFE7B80;
      v28 = *(id *)(a1 + 48);
      v16 = (void *)MEMORY[0x2199B6780](v27);
      v17 = *(void **)(a1 + 40);
      v18 = (void *)MEMORY[0x2199B6780](v15);
      objc_msgSend(v17, "_trackOutstandingRequestWithMessageIdentifier:completionHandler:errorHandler:", v12, v18, v16);

      v19 = v30;
LABEL_15:

      goto LABEL_16;
    }
    pk_Payment_log();
    v25 = objc_claimAutoreleasedReturnValue();
    v26 = os_log_type_enabled(v25, OS_LOG_TYPE_DEFAULT);

    if (v26)
    {
      pk_Payment_log();
      v19 = objc_claimAutoreleasedReturnValue();
      if (!os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT))
        goto LABEL_15;
      *(_DWORD *)buf = 138412290;
      v35 = v12;
      v22 = "Warning: No response expected for message with identifier %@";
      v23 = v19;
      v24 = OS_LOG_TYPE_DEFAULT;
      goto LABEL_14;
    }
  }
  else
  {
    pk_Payment_log();
    v20 = objc_claimAutoreleasedReturnValue();
    v21 = os_log_type_enabled(v20, OS_LOG_TYPE_ERROR);

    if (v21)
    {
      pk_Payment_log();
      v19 = objc_claimAutoreleasedReturnValue();
      if (!os_log_type_enabled(v19, OS_LOG_TYPE_ERROR))
        goto LABEL_15;
      *(_DWORD *)buf = 138412290;
      v35 = v9;
      v22 = "Error: No message identifier for protobuf %@";
      v23 = v19;
      v24 = OS_LOG_TYPE_ERROR;
LABEL_14:
      _os_log_impl(&dword_213518000, v23, v24, v22, buf, 0xCu);
      goto LABEL_15;
    }
  }
LABEL_16:

}

void __113__NPKPaymentWebServiceCompanionTargetDevice_serviceProviderDataForPassWithUniqueIdentifier_encrypted_completion___block_invoke_871(uint64_t a1, void *a2, int a3, void *a4)
{
  id v7;
  id v8;
  NSObject *v9;
  _BOOL4 v10;
  NSObject *v11;
  uint64_t v12;
  uint64_t v13;
  uint8_t v14[16];

  v7 = a2;
  v8 = a4;
  if (*(unsigned __int8 *)(a1 + 40) != a3)
  {
    pk_Payment_log();
    v9 = objc_claimAutoreleasedReturnValue();
    v10 = os_log_type_enabled(v9, OS_LOG_TYPE_ERROR);

    if (v10)
    {
      pk_Payment_log();
      v11 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)v14 = 0;
        _os_log_impl(&dword_213518000, v11, OS_LOG_TYPE_ERROR, "Error: Got result back that didn't match requested encryption status", v14, 2u);
      }

    }
    objc_msgSend(MEMORY[0x24BDD1540], "errorWithDomain:code:userInfo:", CFSTR("com.apple.NPKErrorDomain"), -1006, 0);
    v12 = objc_claimAutoreleasedReturnValue();

    v7 = 0;
    v8 = (id)v12;
  }
  v13 = *(_QWORD *)(a1 + 32);
  if (v13)
    (*(void (**)(uint64_t, id, id))(v13 + 16))(v13, v7, v8);

}

void __113__NPKPaymentWebServiceCompanionTargetDevice_serviceProviderDataForPassWithUniqueIdentifier_encrypted_completion___block_invoke_873(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  _BOOL4 v5;
  NSObject *v6;
  uint64_t v7;
  int v8;
  id v9;
  uint64_t v10;

  v10 = *MEMORY[0x24BDAC8D0];
  v3 = a2;
  pk_Payment_log();
  v4 = objc_claimAutoreleasedReturnValue();
  v5 = os_log_type_enabled(v4, OS_LOG_TYPE_ERROR);

  if (v5)
  {
    pk_Payment_log();
    v6 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      v8 = 138412290;
      v9 = v3;
      _os_log_impl(&dword_213518000, v6, OS_LOG_TYPE_ERROR, "Error: Provisioning service outstanding request error handler invoked: %@", (uint8_t *)&v8, 0xCu);
    }

  }
  v7 = *(_QWORD *)(a1 + 32);
  if (v7)
    (*(void (**)(uint64_t, _QWORD, id))(v7 + 16))(v7, 0, v3);

}

- (void)encryptedServiceProviderDataForSecureElementPass:(id)a3 completion:(id)a4
{
  -[NPKPaymentWebServiceCompanionTargetDevice serviceProviderDataForSecureElementPass:encrypted:completion:](self, "serviceProviderDataForSecureElementPass:encrypted:completion:", a3, 1, a4);
}

- (void)serviceProviderDataForSecureElementPass:(id)a3 encrypted:(BOOL)a4 completion:(id)a5
{
  _BOOL8 v5;
  id v8;
  void *v9;
  id v10;
  _QWORD v11[4];
  id v12;

  v5 = a4;
  v8 = a5;
  objc_msgSend(a3, "uniqueID");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v11[0] = MEMORY[0x24BDAC760];
  v11[1] = 3221225472;
  v11[2] = __106__NPKPaymentWebServiceCompanionTargetDevice_serviceProviderDataForSecureElementPass_encrypted_completion___block_invoke;
  v11[3] = &unk_24CFEDCF8;
  v12 = v8;
  v10 = v8;
  -[NPKPaymentWebServiceCompanionTargetDevice serviceProviderDataForPassWithUniqueIdentifier:encrypted:completion:](self, "serviceProviderDataForPassWithUniqueIdentifier:encrypted:completion:", v9, v5, v11);

}

void __106__NPKPaymentWebServiceCompanionTargetDevice_serviceProviderDataForSecureElementPass_encrypted_completion___block_invoke(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  uint64_t v7;
  void *v8;
  NSObject *v9;
  _BOOL4 v10;
  NSObject *v11;
  NSObject *v12;
  _BOOL4 v13;
  NSObject *v14;
  id v15;
  id v16;
  uint8_t buf[4];
  id v18;
  uint64_t v19;

  v19 = *MEMORY[0x24BDAC8D0];
  v5 = a2;
  v6 = a3;
  v7 = *(_QWORD *)(a1 + 32);
  if (v7)
  {
    if (!v5 || v6)
    {
      (*(void (**)(uint64_t, _QWORD, id))(v7 + 16))(v7, 0, v6);
    }
    else
    {
      v16 = 0;
      objc_msgSend(MEMORY[0x24BDD1608], "JSONObjectWithData:options:error:", v5, 0, &v16);
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      v6 = v16;
      pk_General_log();
      v9 = objc_claimAutoreleasedReturnValue();
      v10 = os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT);

      if (v10)
      {
        pk_General_log();
        v11 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)buf = 138412290;
          v18 = v8;
          _os_log_impl(&dword_213518000, v11, OS_LOG_TYPE_DEFAULT, "Notice: Received encrypted payload %@", buf, 0xCu);
        }

      }
      if (v6)
      {
        pk_General_log();
        v12 = objc_claimAutoreleasedReturnValue();
        v13 = os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT);

        if (v13)
        {
          pk_General_log();
          v14 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
          {
            *(_DWORD *)buf = 138412290;
            v18 = v6;
            _os_log_impl(&dword_213518000, v14, OS_LOG_TYPE_DEFAULT, "Notice: Error converting encrypted payload to JSON string: %@", buf, 0xCu);
          }

        }
        v15 = v6;
      }
      (*(void (**)(void))(*(_QWORD *)(a1 + 32) + 16))();

    }
  }

}

- (void)paymentSetupFeaturesForConfigurationResponse:(id)a3
{
  id v4;
  NSObject *v5;
  _BOOL4 v6;
  NSObject *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  NSObject *v12;
  NSObject *v13;
  _BOOL4 v14;
  NSObject *v15;
  NSObject *v16;
  _BOOL4 v17;
  NSObject *v18;
  uint64_t v19;
  NSObject *v20;
  _BOOL4 v21;
  NSObject *v22;
  _QWORD block[5];
  id v24;
  id v25;
  _BYTE *v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t (*v31)(uint64_t, uint64_t);
  void (*v32)(uint64_t);
  id v33;
  uint8_t v34[4];
  uint64_t v35;
  _BYTE buf[24];
  uint64_t (*v37)(uint64_t, uint64_t);
  void (*v38)(uint64_t);
  id v39;
  uint64_t v40;

  v40 = *MEMORY[0x24BDAC8D0];
  v4 = a3;
  pk_Payment_log();
  v5 = objc_claimAutoreleasedReturnValue();
  v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    pk_Payment_log();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend(v4, "npkDescription");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v4, "data");
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138412546;
      *(_QWORD *)&buf[4] = v8;
      *(_WORD *)&buf[12] = 2048;
      *(_QWORD *)&buf[14] = objc_msgSend(v9, "length");
      _os_log_impl(&dword_213518000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Target paymentSetupFeaturesForConfigurationResponse: incoming protobuf %@. Data size: %lu", buf, 0x16u);

    }
  }
  objc_msgSend(v4, "context");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v10, "incomingResponseIdentifier");
  v11 = (void *)objc_claimAutoreleasedReturnValue();

  *(_QWORD *)buf = 0;
  *(_QWORD *)&buf[8] = buf;
  *(_QWORD *)&buf[16] = 0x3032000000;
  v37 = __Block_byref_object_copy__342;
  v38 = __Block_byref_object_dispose__343;
  v39 = 0;
  v28 = 0;
  v29 = &v28;
  v30 = 0x3032000000;
  v31 = __Block_byref_object_copy__23;
  v32 = __Block_byref_object_dispose__23;
  v33 = 0;
  if (v11)
  {
    -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
    v12 = objc_claimAutoreleasedReturnValue();
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 3221225472;
    block[2] = __90__NPKPaymentWebServiceCompanionTargetDevice_paymentSetupFeaturesForConfigurationResponse___block_invoke;
    block[3] = &unk_24CFED0D8;
    block[4] = self;
    v24 = v11;
    v25 = v4;
    v26 = buf;
    v27 = &v28;
    dispatch_sync(v12, block);

  }
  else
  {
    pk_Payment_log();
    v13 = objc_claimAutoreleasedReturnValue();
    v14 = os_log_type_enabled(v13, OS_LOG_TYPE_ERROR);

    if (v14)
    {
      pk_Payment_log();
      v15 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)v34 = 0;
        _os_log_impl(&dword_213518000, v15, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v34, 2u);
      }

    }
  }
  if (*(_QWORD *)(*(_QWORD *)&buf[8] + 40))
  {
    pk_Payment_log();
    v16 = objc_claimAutoreleasedReturnValue();
    v17 = os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT);

    if (v17)
    {
      pk_Payment_log();
      v18 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT))
      {
        v19 = v29[5];
        *(_DWORD *)v34 = 138412290;
        v35 = v19;
        _os_log_impl(&dword_213518000, v18, OS_LOG_TYPE_DEFAULT, "Notice: Target paymentSetupFeaturesForConfigurationResponse. Calling completion block with response %@", v34, 0xCu);
      }

    }
    (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)&buf[8] + 40) + 16))();
  }
  else
  {
    pk_Payment_log();
    v20 = objc_claimAutoreleasedReturnValue();
    v21 = os_log_type_enabled(v20, OS_LOG_TYPE_DEFAULT);

    if (v21)
    {
      pk_Payment_log();
      v22 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v22, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)v34 = 0;
        _os_log_impl(&dword_213518000, v22, OS_LOG_TYPE_DEFAULT, "Warning: Target paymentSetupFeaturesForConfigurationResponse. No completion block to call, unexpected.", v34, 2u);
      }

    }
  }
  _Block_object_dispose(&v28, 8);

  _Block_object_dispose(buf, 8);
}

void __90__NPKPaymentWebServiceCompanionTargetDevice_paymentSetupFeaturesForConfigurationResponse___block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;
  NPKProtoPaymentSetupFeaturesForConfigurationResponse *v4;
  void *v5;
  NPKProtoPaymentSetupFeaturesForConfigurationResponse *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  NSObject *v15;
  _BOOL4 v16;
  NSObject *v17;
  uint8_t v18[16];

  objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "objectForKey:", *(_QWORD *)(a1 + 40));
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  if (v3)
  {
    v4 = [NPKProtoPaymentSetupFeaturesForConfigurationResponse alloc];
    objc_msgSend(*(id *)(a1 + 48), "data");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    v6 = -[NPKProtoPaymentSetupFeaturesForConfigurationResponse initWithData:](v4, "initWithData:", v5);

    objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "removeObjectForKey:", *(_QWORD *)(a1 + 40));

    objc_msgSend(v3, "completionHandler");
    v8 = objc_claimAutoreleasedReturnValue();
    v9 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
    v10 = *(void **)(v9 + 40);
    *(_QWORD *)(v9 + 40) = v8;

    -[NPKProtoPaymentSetupFeaturesForConfigurationResponse paymentSetupFeatureDatas](v6, "paymentSetupFeatureDatas");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v11, "pk_arrayBySafelyApplyingBlock:", &__block_literal_global_878);
    v12 = objc_claimAutoreleasedReturnValue();
    v13 = *(_QWORD *)(*(_QWORD *)(a1 + 64) + 8);
    v14 = *(void **)(v13 + 40);
    *(_QWORD *)(v13 + 40) = v12;

  }
  else
  {
    pk_Payment_log();
    v15 = objc_claimAutoreleasedReturnValue();
    v16 = os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT);

    if (v16)
    {
      pk_Payment_log();
      v17 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)v18 = 0;
        _os_log_impl(&dword_213518000, v17, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", v18, 2u);
      }

    }
  }

}

id __90__NPKPaymentWebServiceCompanionTargetDevice_paymentSetupFeaturesForConfigurationResponse___block_invoke_2(uint64_t a1, void *a2)
{
  id v2;
  NSObject *v3;
  void *v4;

  v2 = a2;
  v3 = objc_opt_class();
  NPKSecureUnarchiveObject(v2, v3);
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  return v4;
}

- (void)paymentSetupFeaturesForConfiguration:(id)a3 completion:(id)a4
{
  id v6;
  id v7;
  void *v8;
  void *v9;
  char v10;
  NSObject *v11;
  NSObject *v12;
  _BOOL4 v13;
  NSObject *v14;
  _QWORD block[5];
  id v16;
  id v17;
  uint8_t buf[4];
  id v19;
  uint64_t v20;

  v20 = *MEMORY[0x24BDAC8D0];
  v6 = a3;
  v7 = a4;
  NPKPairedOrPairingDevice();
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v9 = (void *)objc_msgSend(objc_alloc(MEMORY[0x24BDD1880]), "initWithUUIDString:", CFSTR("C990FB84-055B-467E-B7AD-EB88FCE19825"));
  v10 = objc_msgSend(v8, "supportsCapability:", v9);

  if ((v10 & 1) != 0)
  {
    -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
    v11 = objc_claimAutoreleasedReturnValue();
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 3221225472;
    block[2] = __93__NPKPaymentWebServiceCompanionTargetDevice_paymentSetupFeaturesForConfiguration_completion___block_invoke;
    block[3] = &unk_24CFE84E8;
    block[4] = self;
    v16 = v6;
    v17 = v7;
    dispatch_sync(v11, block);

  }
  else
  {
    pk_General_log();
    v12 = objc_claimAutoreleasedReturnValue();
    v13 = os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT);

    if (v13)
    {
      pk_General_log();
      v14 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 138412290;
        v19 = v6;
        _os_log_impl(&dword_213518000, v14, OS_LOG_TYPE_DEFAULT, "Notice: Target device does not support the message. Not sending message to get payment setup features for configuration %@.", buf, 0xCu);
      }

    }
    if (v7)
      (*((void (**)(id, _QWORD))v7 + 2))(v7, 0);
  }

}

void __93__NPKPaymentWebServiceCompanionTargetDevice_paymentSetupFeaturesForConfiguration_completion___block_invoke(id *a1)
{
  void *v2;
  char CanSendMessage;
  NSObject *v4;
  _BOOL4 v5;
  NSObject *v6;
  id v7;
  NPKProtoPaymentSetupFeaturesForConfigurationRequest *v8;
  void *v9;
  id v10;
  void *v11;
  void *v12;
  uint64_t v13;
  void *v14;
  void *v15;
  NSObject *v16;
  void *v17;
  id v18;
  void *v19;
  NSObject *v20;
  id v21;
  void (**v22)(id, _QWORD);
  NSObject *v23;
  _BOOL4 v24;
  const char *v25;
  NSObject *v26;
  os_log_type_t v27;
  NSObject *v28;
  _BOOL4 v29;
  _QWORD v30[4];
  id v31;
  _QWORD v32[3];
  _QWORD v33[3];
  uint8_t buf[4];
  void *v35;
  uint64_t v36;

  v36 = *MEMORY[0x24BDAC8D0];
  objc_msgSend(a1[4], "provisioningService");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  CanSendMessage = NPKProtoCanSendMessage(v2);

  pk_General_log();
  v4 = objc_claimAutoreleasedReturnValue();
  v5 = os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT);

  if ((CanSendMessage & 1) != 0)
  {
    if (v5)
    {
      pk_General_log();
      v6 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
      {
        v7 = a1[5];
        *(_DWORD *)buf = 138412290;
        v35 = v7;
        _os_log_impl(&dword_213518000, v6, OS_LOG_TYPE_DEFAULT, "Notice: Payment setup features for configuration %@. Sending message", buf, 0xCu);
      }

    }
    v8 = objc_alloc_init(NPKProtoPaymentSetupFeaturesForConfigurationRequest);
    NPKSecureArchiveObject(a1[5]);
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    -[NPKProtoPaymentSetupFeaturesForConfigurationRequest setConfigurationData:](v8, "setConfigurationData:", v9);

    v10 = objc_alloc(MEMORY[0x24BE4FE40]);
    -[NPKProtoPaymentSetupFeaturesForConfigurationRequest data](v8, "data");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    v12 = (void *)objc_msgSend(v10, "initWithProtobufData:type:isResponse:", v11, 120, 0);

    v13 = *MEMORY[0x24BE4FA78];
    v32[0] = *MEMORY[0x24BE4FAC0];
    v32[1] = v13;
    v33[0] = MEMORY[0x24BDBD1C8];
    v33[1] = MEMORY[0x24BDBD1C8];
    v32[2] = *MEMORY[0x24BE4FB30];
    v33[2] = &unk_24D056700;
    objc_msgSend(MEMORY[0x24BDBCE70], "dictionaryWithObjects:forKeys:count:", v33, v32, 3);
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(a1[4], "_sendProtobuf:responseExpected:extraOptions:priority:", v12, 1, v14, 300);
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    if (v15)
    {
      if (a1[6])
      {
        v16 = MEMORY[0x2199B6780]();
        v30[0] = MEMORY[0x24BDAC760];
        v30[1] = 3221225472;
        v30[2] = __93__NPKPaymentWebServiceCompanionTargetDevice_paymentSetupFeaturesForConfiguration_completion___block_invoke_883;
        v30[3] = &unk_24CFE7B80;
        v31 = a1[6];
        v17 = (void *)MEMORY[0x2199B6780](v30);
        v18 = a1[4];
        v19 = (void *)MEMORY[0x2199B6780](v16);
        objc_msgSend(v18, "_trackOutstandingRequestWithMessageIdentifier:completionHandler:errorHandler:", v15, v19, v17);

LABEL_22:
        goto LABEL_23;
      }
      pk_Payment_log();
      v28 = objc_claimAutoreleasedReturnValue();
      v29 = os_log_type_enabled(v28, OS_LOG_TYPE_DEFAULT);

      if (v29)
      {
        pk_Payment_log();
        v16 = objc_claimAutoreleasedReturnValue();
        if (!os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
          goto LABEL_22;
        *(_DWORD *)buf = 138412290;
        v35 = v15;
        v25 = "Warning: No response expected for message with identifier %@";
        v26 = v16;
        v27 = OS_LOG_TYPE_DEFAULT;
        goto LABEL_21;
      }
    }
    else
    {
      pk_Payment_log();
      v23 = objc_claimAutoreleasedReturnValue();
      v24 = os_log_type_enabled(v23, OS_LOG_TYPE_ERROR);

      if (v24)
      {
        pk_Payment_log();
        v16 = objc_claimAutoreleasedReturnValue();
        if (!os_log_type_enabled(v16, OS_LOG_TYPE_ERROR))
          goto LABEL_22;
        *(_DWORD *)buf = 138412290;
        v35 = v12;
        v25 = "Error: No message identifier for protobuf %@";
        v26 = v16;
        v27 = OS_LOG_TYPE_ERROR;
LABEL_21:
        _os_log_impl(&dword_213518000, v26, v27, v25, buf, 0xCu);
        goto LABEL_22;
      }
    }
LABEL_23:

    return;
  }
  if (v5)
  {
    pk_General_log();
    v20 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v20, OS_LOG_TYPE_DEFAULT))
    {
      v21 = a1[5];
      *(_DWORD *)buf = 138412290;
      v35 = v21;
      _os_log_impl(&dword_213518000, v20, OS_LOG_TYPE_DEFAULT, "Notice: Payment setup features for configuration %@, device is not connected, will not send message", buf, 0xCu);
    }

  }
  v22 = (void (**)(id, _QWORD))a1[6];
  if (v22)
    v22[2](v22, 0);
}

void __93__NPKPaymentWebServiceCompanionTargetDevice_paymentSetupFeaturesForConfiguration_completion___block_invoke_883(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  _BOOL4 v5;
  NSObject *v6;
  uint64_t v7;
  int v8;
  id v9;
  uint64_t v10;

  v10 = *MEMORY[0x24BDAC8D0];
  v3 = a2;
  pk_Payment_log();
  v4 = objc_claimAutoreleasedReturnValue();
  v5 = os_log_type_enabled(v4, OS_LOG_TYPE_ERROR);

  if (v5)
  {
    pk_Payment_log();
    v6 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      v8 = 138412290;
      v9 = v3;
      _os_log_impl(&dword_213518000, v6, OS_LOG_TYPE_ERROR, "Error: Provisioning service outstanding request error handler invoked: %@", (uint8_t *)&v8, 0xCu);
    }

  }
  v7 = *(_QWORD *)(a1 + 32);
  if (v7)
    (*(void (**)(uint64_t, _QWORD))(v7 + 16))(v7, 0);

}

- (void)hasActiveExternallySharedPassesResponse:(id)a3
{
  id v4;
  NSObject *v5;
  _BOOL4 v6;
  NSObject *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  NSObject *v12;
  NSObject *v13;
  _BOOL4 v14;
  NSObject *v15;
  NSObject *v16;
  _BOOL4 v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  int v21;
  NSObject *v22;
  _BOOL4 v23;
  NSObject *v24;
  _QWORD v25[5];
  id v26;
  id v27;
  _BYTE *v28;
  uint64_t *v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t (*v34)(uint64_t, uint64_t);
  void (*v35)(uint64_t);
  id v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  char v40;
  uint8_t v41[4];
  int v42;
  _BYTE buf[24];
  uint64_t (*v44)(uint64_t, uint64_t);
  void (*v45)(uint64_t);
  id v46;
  uint64_t v47;

  v47 = *MEMORY[0x24BDAC8D0];
  v4 = a3;
  pk_Payment_log();
  v5 = objc_claimAutoreleasedReturnValue();
  v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    pk_Payment_log();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend(v4, "npkDescription");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v4, "data");
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138412546;
      *(_QWORD *)&buf[4] = v8;
      *(_WORD *)&buf[12] = 2048;
      *(_QWORD *)&buf[14] = objc_msgSend(v9, "length");
      _os_log_impl(&dword_213518000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Target hasActiveExternallySharedPassesResponse: incoming protobuf %@. Data size: %lu", buf, 0x16u);

    }
  }
  objc_msgSend(v4, "context");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v10, "incomingResponseIdentifier");
  v11 = (void *)objc_claimAutoreleasedReturnValue();

  *(_QWORD *)buf = 0;
  *(_QWORD *)&buf[8] = buf;
  *(_QWORD *)&buf[16] = 0x3032000000;
  v44 = __Block_byref_object_copy__342;
  v45 = __Block_byref_object_dispose__343;
  v46 = 0;
  v37 = 0;
  v38 = &v37;
  v39 = 0x2020000000;
  v40 = 0;
  v31 = 0;
  v32 = &v31;
  v33 = 0x3032000000;
  v34 = __Block_byref_object_copy__23;
  v35 = __Block_byref_object_dispose__23;
  v36 = 0;
  if (v11)
  {
    -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
    v12 = objc_claimAutoreleasedReturnValue();
    v25[0] = MEMORY[0x24BDAC760];
    v25[1] = 3221225472;
    v25[2] = __85__NPKPaymentWebServiceCompanionTargetDevice_hasActiveExternallySharedPassesResponse___block_invoke;
    v25[3] = &unk_24CFED060;
    v25[4] = self;
    v26 = v11;
    v27 = v4;
    v28 = buf;
    v29 = &v37;
    v30 = &v31;
    dispatch_sync(v12, v25);

  }
  else
  {
    pk_Payment_log();
    v13 = objc_claimAutoreleasedReturnValue();
    v14 = os_log_type_enabled(v13, OS_LOG_TYPE_ERROR);

    if (v14)
    {
      pk_Payment_log();
      v15 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)v41 = 0;
        _os_log_impl(&dword_213518000, v15, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", v41, 2u);
      }

    }
  }
  if (*(_QWORD *)(*(_QWORD *)&buf[8] + 40))
  {
    pk_Payment_log();
    v16 = objc_claimAutoreleasedReturnValue();
    v17 = os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT);

    if (v17)
    {
      pk_Payment_log();
      v20 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v20, OS_LOG_TYPE_DEFAULT))
      {
        v21 = *((unsigned __int8 *)v38 + 24);
        *(_DWORD *)v41 = 67109120;
        v42 = v21;
        _os_log_impl(&dword_213518000, v20, OS_LOG_TYPE_DEFAULT, "Notice: Target hasActiveExternallySharedPassesResponse. Calling completion block with response %d", v41, 8u);
      }

    }
    (*(void (**)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)&buf[8] + 40) + 16))(*(_QWORD *)(*(_QWORD *)&buf[8] + 40), *((unsigned __int8 *)v38 + 24), v32[5], v18, v19);
  }
  else
  {
    pk_Payment_log();
    v22 = objc_claimAutoreleasedReturnValue();
    v23 = os_log_type_enabled(v22, OS_LOG_TYPE_DEFAULT);

    if (v23)
    {
      pk_Payment_log();
      v24 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v24, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)v41 = 0;
        _os_log_impl(&dword_213518000, v24, OS_LOG_TYPE_DEFAULT, "Warning: Target hasActiveExternallySharedPassesResponse. No completion block to call, unexpected.", v41, 2u);
      }

    }
  }
  _Block_object_dispose(&v31, 8);

  _Block_object_dispose(&v37, 8);
  _Block_object_dispose(buf, 8);

}

void __85__NPKPaymentWebServiceCompanionTargetDevice_hasActiveExternallySharedPassesResponse___block_invoke(uint64_t a1)
{
  void *v1;
  void *v3;
  void *v4;
  NPKProtoHasActiveExternallySharedPassesResponse *v5;
  void *v6;
  NPKProtoHasActiveExternallySharedPassesResponse *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  _BOOL4 v12;
  NSObject *v13;
  void *v14;
  NSObject *v15;
  _BOOL4 v16;
  NSObject *v17;
  __int16 v18[8];

  objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "objectForKey:", *(_QWORD *)(a1 + 40));
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  if (v4)
  {
    v5 = [NPKProtoHasActiveExternallySharedPassesResponse alloc];
    objc_msgSend(*(id *)(a1 + 48), "data");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    v7 = -[NPKProtoHasActiveExternallySharedPassesResponse initWithData:](v5, "initWithData:", v6);

    objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "removeObjectForKey:", *(_QWORD *)(a1 + 40));

    objc_msgSend(v4, "completionHandler");
    v9 = objc_claimAutoreleasedReturnValue();
    v10 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
    v11 = *(void **)(v10 + 40);
    *(_QWORD *)(v10 + 40) = v9;

    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 24) = -[NPKProtoHasActiveExternallySharedPassesResponse hasActiveExternallySharedPasses](v7, "hasActiveExternallySharedPasses");
    v12 = -[NPKProtoHasActiveExternallySharedPassesResponse hasErrorData](v7, "hasErrorData");
    if (v12)
    {
      -[NPKProtoHasActiveExternallySharedPassesResponse errorData](v7, "errorData");
      v1 = (void *)objc_claimAutoreleasedReturnValue();
      v13 = objc_opt_class();
      NPKSecureUnarchiveObject(v1, v13);
      v14 = (void *)objc_claimAutoreleasedReturnValue();
    }
    else
    {
      v14 = 0;
    }
    objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 72) + 8) + 40), v14);
    if (v12)
    {

    }
  }
  else
  {
    pk_Payment_log();
    v15 = objc_claimAutoreleasedReturnValue();
    v16 = os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT);

    if (v16)
    {
      pk_Payment_log();
      v17 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
      {
        v18[0] = 0;
        _os_log_impl(&dword_213518000, v17, OS_LOG_TYPE_DEFAULT, "Warning: got response with no associated message handler", (uint8_t *)v18, 2u);
      }

    }
  }

}

- (void)hasActiveExternallySharedPasses:(id)a3
{
  id v4;
  id v5;
  _QWORD v6[4];
  id v7;

  v4 = a3;
  v6[0] = MEMORY[0x24BDAC760];
  v6[1] = 3221225472;
  v6[2] = __77__NPKPaymentWebServiceCompanionTargetDevice_hasActiveExternallySharedPasses___block_invoke;
  v6[3] = &unk_24CFE7940;
  v7 = v4;
  v5 = v4;
  -[NPKPaymentWebServiceCompanionTargetDevice hasActiveExternallySharedPassesWithCompletion:](self, "hasActiveExternallySharedPassesWithCompletion:", v6);

}

uint64_t __77__NPKPaymentWebServiceCompanionTargetDevice_hasActiveExternallySharedPasses___block_invoke(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 32);
  if (result)
    return (*(uint64_t (**)(void))(result + 16))();
  return result;
}

- (void)currentSecureElementSnapshot:(id)a3
{
  id v4;
  NSObject *v5;
  NSObject *v6;
  _BOOL4 v7;
  NSObject *v8;
  NSObject *v9;
  _BOOL4 v10;
  NSObject *v11;
  _QWORD v12[5];
  id v13;
  uint8_t buf[4];
  const char *v15;
  uint64_t v16;

  v16 = *MEMORY[0x24BDAC8D0];
  v4 = a3;
  if (v4)
  {
    if (-[NPKPaymentWebServiceCompanionTargetDevice _isParallelProvisioningSupported](self, "_isParallelProvisioningSupported"))
    {
      -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
      v5 = objc_claimAutoreleasedReturnValue();
      v12[0] = MEMORY[0x24BDAC760];
      v12[1] = 3221225472;
      v12[2] = __74__NPKPaymentWebServiceCompanionTargetDevice_currentSecureElementSnapshot___block_invoke;
      v12[3] = &unk_24CFE7E90;
      v12[4] = self;
      v13 = v4;
      dispatch_sync(v5, v12);

    }
    else
    {
      pk_General_log();
      v9 = objc_claimAutoreleasedReturnValue();
      v10 = os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT);

      if (v10)
      {
        pk_General_log();
        v11 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)buf = 136315138;
          v15 = "-[NPKPaymentWebServiceCompanionTargetDevice currentSecureElementSnapshot:]";
          _os_log_impl(&dword_213518000, v11, OS_LOG_TYPE_DEFAULT, "Notice: %s, not supported, will not send message", buf, 0xCu);
        }

      }
      (*((void (**)(id, _QWORD, _QWORD))v4 + 2))(v4, 0, 0);
    }
  }
  else
  {
    pk_General_log();
    v6 = objc_claimAutoreleasedReturnValue();
    v7 = os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT);

    if (v7)
    {
      pk_General_log();
      v8 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 136315138;
        v15 = "-[NPKPaymentWebServiceCompanionTargetDevice currentSecureElementSnapshot:]";
        _os_log_impl(&dword_213518000, v8, OS_LOG_TYPE_DEFAULT, "Notice: %s, nil completion, will not send message", buf, 0xCu);
      }

    }
  }

}

void __74__NPKPaymentWebServiceCompanionTargetDevice_currentSecureElementSnapshot___block_invoke(uint64_t a1)
{
  NPKProtoCurrentSecureElementSnapshotRequest *v2;
  id v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  NSObject *v12;
  NSObject *v13;
  _BOOL4 v14;
  _QWORD v15[4];
  NSObject *v16;
  uint8_t buf[4];
  const char *v18;
  __int16 v19;
  void *v20;
  uint64_t v21;

  v21 = *MEMORY[0x24BDAC8D0];
  v2 = objc_alloc_init(NPKProtoCurrentSecureElementSnapshotRequest);
  v3 = objc_alloc(MEMORY[0x24BE4FE40]);
  -[NPKProtoCurrentSecureElementSnapshotRequest data](v2, "data");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = (void *)objc_msgSend(v3, "initWithProtobufData:type:isResponse:", v4, 134, 0);

  v6 = *(void **)(a1 + 32);
  objc_msgSend(v6, "_idsShortSendTimeoutProvisioningOptions");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "_sendProtobuf:responseExpected:extraOptions:priority:", v5, 1, v7, 300);
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  if (v8)
  {
    v15[0] = MEMORY[0x24BDAC760];
    v15[1] = 3221225472;
    v15[2] = __74__NPKPaymentWebServiceCompanionTargetDevice_currentSecureElementSnapshot___block_invoke_2;
    v15[3] = &unk_24CFE7B80;
    v16 = *(id *)(a1 + 40);
    v9 = (void *)MEMORY[0x2199B6780](v15);
    v10 = *(void **)(a1 + 32);
    v11 = (void *)MEMORY[0x2199B6780](*(_QWORD *)(a1 + 40));
    objc_msgSend(v10, "_trackOutstandingRequestWithMessageIdentifier:completionHandler:errorHandler:", v8, v11, v9);

    v12 = v16;
  }
  else
  {
    pk_General_log();
    v13 = objc_claimAutoreleasedReturnValue();
    v14 = os_log_type_enabled(v13, OS_LOG_TYPE_ERROR);

    if (!v14)
      goto LABEL_4;
    pk_General_log();
    v12 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 136315394;
      v18 = "-[NPKPaymentWebServiceCompanionTargetDevice currentSecureElementSnapshot:]_block_invoke";
      v19 = 2112;
      v20 = v5;
      _os_log_impl(&dword_213518000, v12, OS_LOG_TYPE_ERROR, "Error: %s, No message identifier for protobuf %@", buf, 0x16u);
    }
  }

LABEL_4:
}

void __74__NPKPaymentWebServiceCompanionTargetDevice_currentSecureElementSnapshot___block_invoke_2(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  _BOOL4 v5;
  NSObject *v6;
  int v7;
  id v8;
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  v3 = a2;
  pk_General_log();
  v4 = objc_claimAutoreleasedReturnValue();
  v5 = os_log_type_enabled(v4, OS_LOG_TYPE_ERROR);

  if (v5)
  {
    pk_General_log();
    v6 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      v7 = 138412290;
      v8 = v3;
      _os_log_impl(&dword_213518000, v6, OS_LOG_TYPE_ERROR, "Error: Provisioning service outstanding request error handler invoked: %@ for currentSecureElementSnapshot", (uint8_t *)&v7, 0xCu);
    }

  }
  (*(void (**)(void))(*(_QWORD *)(a1 + 32) + 16))();

}

- (void)currentSecureElementSnapshotResponse:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  NSObject *v7;
  NSObject *v8;
  _BOOL4 v9;
  NSObject *v10;
  uint64_t v11;
  NSObject *v12;
  _BOOL4 v13;
  NSObject *v14;
  _QWORD v15[5];
  id v16;
  id v17;
  uint64_t *v18;
  uint64_t *v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t (*v24)(uint64_t, uint64_t);
  void (*v25)(uint64_t);
  id v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t (*v30)(uint64_t, uint64_t);
  void (*v31)(uint64_t);
  id v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t (*v36)(uint64_t, uint64_t);
  void (*v37)(uint64_t);
  id v38;
  uint8_t buf[4];
  const char *v40;
  uint64_t v41;

  v41 = *MEMORY[0x24BDAC8D0];
  v4 = a3;
  objc_msgSend(v4, "context");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "incomingResponseIdentifier");
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  v33 = 0;
  v34 = &v33;
  v35 = 0x3032000000;
  v36 = __Block_byref_object_copy__342;
  v37 = __Block_byref_object_dispose__343;
  v38 = 0;
  v27 = 0;
  v28 = &v27;
  v29 = 0x3032000000;
  v30 = __Block_byref_object_copy__23;
  v31 = __Block_byref_object_dispose__23;
  v32 = 0;
  v21 = 0;
  v22 = &v21;
  v23 = 0x3032000000;
  v24 = __Block_byref_object_copy__23;
  v25 = __Block_byref_object_dispose__23;
  v26 = 0;
  if (v6)
  {
    -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
    v7 = objc_claimAutoreleasedReturnValue();
    v15[0] = MEMORY[0x24BDAC760];
    v15[1] = 3221225472;
    v15[2] = __82__NPKPaymentWebServiceCompanionTargetDevice_currentSecureElementSnapshotResponse___block_invoke;
    v15[3] = &unk_24CFED060;
    v15[4] = self;
    v16 = v6;
    v17 = v4;
    v18 = &v33;
    v19 = &v27;
    v20 = &v21;
    dispatch_sync(v7, v15);

  }
  else
  {
    pk_General_log();
    v8 = objc_claimAutoreleasedReturnValue();
    v9 = os_log_type_enabled(v8, OS_LOG_TYPE_ERROR);

    if (v9)
    {
      pk_General_log();
      v10 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)buf = 0;
        _os_log_impl(&dword_213518000, v10, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", buf, 2u);
      }

    }
  }
  v11 = v34[5];
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v11, v28[5], v22[5]);
  }
  else
  {
    pk_General_log();
    v12 = objc_claimAutoreleasedReturnValue();
    v13 = os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT);

    if (v13)
    {
      pk_General_log();
      v14 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 136315138;
        v40 = "-[NPKPaymentWebServiceCompanionTargetDevice currentSecureElementSnapshotResponse:]";
        _os_log_impl(&dword_213518000, v14, OS_LOG_TYPE_DEFAULT, "Warning: %s No completion block to call, unexpected.", buf, 0xCu);
      }

    }
  }
  _Block_object_dispose(&v21, 8);

  _Block_object_dispose(&v27, 8);
  _Block_object_dispose(&v33, 8);

}

void __82__NPKPaymentWebServiceCompanionTargetDevice_currentSecureElementSnapshotResponse___block_invoke(uint64_t a1)
{
  void *v1;
  void *v3;
  void *v4;
  NPKProtoCurrentSecureElementSnapshotResponse *v5;
  void *v6;
  NPKProtoCurrentSecureElementSnapshotResponse *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  NSObject *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  _BOOL4 v17;
  NSObject *v18;
  void *v19;
  NSObject *v20;
  _BOOL4 v21;
  NSObject *v22;
  int v23;
  const char *v24;
  uint64_t v25;

  v25 = *MEMORY[0x24BDAC8D0];
  objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "objectForKey:", *(_QWORD *)(a1 + 40));
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  if (v4)
  {
    v5 = [NPKProtoCurrentSecureElementSnapshotResponse alloc];
    objc_msgSend(*(id *)(a1 + 48), "data");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    v7 = -[NPKProtoCurrentSecureElementSnapshotResponse initWithData:](v5, "initWithData:", v6);

    objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "removeObjectForKey:", *(_QWORD *)(a1 + 40));

    objc_msgSend(v4, "completionHandler");
    v9 = objc_claimAutoreleasedReturnValue();
    v10 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
    v11 = *(void **)(v10 + 40);
    *(_QWORD *)(v10 + 40) = v9;

    -[NPKProtoCurrentSecureElementSnapshotResponse snapshot](v7, "snapshot");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    v13 = objc_opt_class();
    NPKSecureUnarchiveObject(v12, v13);
    v14 = objc_claimAutoreleasedReturnValue();
    v15 = *(_QWORD *)(*(_QWORD *)(a1 + 64) + 8);
    v16 = *(void **)(v15 + 40);
    *(_QWORD *)(v15 + 40) = v14;

    v17 = -[NPKProtoCurrentSecureElementSnapshotResponse hasErrorData](v7, "hasErrorData");
    if (v17)
    {
      -[NPKProtoCurrentSecureElementSnapshotResponse errorData](v7, "errorData");
      v1 = (void *)objc_claimAutoreleasedReturnValue();
      v18 = objc_opt_class();
      NPKSecureUnarchiveObject(v1, v18);
      v19 = (void *)objc_claimAutoreleasedReturnValue();
    }
    else
    {
      v19 = 0;
    }
    objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 72) + 8) + 40), v19);
    if (v17)
    {

    }
  }
  else
  {
    pk_General_log();
    v20 = objc_claimAutoreleasedReturnValue();
    v21 = os_log_type_enabled(v20, OS_LOG_TYPE_DEFAULT);

    if (v21)
    {
      pk_General_log();
      v22 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v22, OS_LOG_TYPE_DEFAULT))
      {
        v23 = 136315138;
        v24 = "-[NPKPaymentWebServiceCompanionTargetDevice currentSecureElementSnapshotResponse:]_block_invoke";
        _os_log_impl(&dword_213518000, v22, OS_LOG_TYPE_DEFAULT, "Warning: %s got response with no associated message handler", (uint8_t *)&v23, 0xCu);
      }

    }
  }

}

- (void)reserveStorageForAppletTypes:(id)a3 metadata:(id)a4 completion:(id)a5
{
  id v8;
  id v9;
  id v10;
  NSObject *v11;
  NSObject *v12;
  _BOOL4 v13;
  NSObject *v14;
  _QWORD v15[4];
  id v16;
  id v17;
  NPKPaymentWebServiceCompanionTargetDevice *v18;
  id v19;
  uint8_t buf[4];
  const char *v21;
  uint64_t v22;

  v22 = *MEMORY[0x24BDAC8D0];
  v8 = a3;
  v9 = a4;
  v10 = a5;
  if (v10)
  {
    if (-[NPKPaymentWebServiceCompanionTargetDevice _isParallelProvisioningSupported](self, "_isParallelProvisioningSupported"))
    {
      -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
      v11 = objc_claimAutoreleasedReturnValue();
      v15[0] = MEMORY[0x24BDAC760];
      v15[1] = 3221225472;
      v15[2] = __94__NPKPaymentWebServiceCompanionTargetDevice_reserveStorageForAppletTypes_metadata_completion___block_invoke;
      v15[3] = &unk_24CFE86A0;
      v16 = v8;
      v17 = v9;
      v18 = self;
      v19 = v10;
      dispatch_sync(v11, v15);

    }
    else
    {
      (*((void (**)(id, _QWORD, _QWORD, _QWORD))v10 + 2))(v10, 0, 0, 0);
    }
  }
  else
  {
    pk_General_log();
    v12 = objc_claimAutoreleasedReturnValue();
    v13 = os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT);

    if (v13)
    {
      pk_General_log();
      v14 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 136315138;
        v21 = "-[NPKPaymentWebServiceCompanionTargetDevice reserveStorageForAppletTypes:metadata:completion:]";
        _os_log_impl(&dword_213518000, v14, OS_LOG_TYPE_DEFAULT, "Notice: %s, nil completion, will not send message", buf, 0xCu);
      }

    }
  }

}

void __94__NPKPaymentWebServiceCompanionTargetDevice_reserveStorageForAppletTypes_metadata_completion___block_invoke(uint64_t a1)
{
  NPKProtoReserveStorageForAppletTypesRequest *v2;
  void *v3;
  void *v4;
  id v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  NSObject *v14;
  NSObject *v15;
  _BOOL4 v16;
  _QWORD v17[4];
  NSObject *v18;
  uint8_t buf[4];
  const char *v20;
  __int16 v21;
  void *v22;
  uint64_t v23;

  v23 = *MEMORY[0x24BDAC8D0];
  v2 = objc_alloc_init(NPKProtoReserveStorageForAppletTypesRequest);
  v3 = (void *)objc_msgSend(*(id *)(a1 + 32), "mutableCopy");
  -[NPKProtoReserveStorageForAppletTypesRequest setAppletTypes:](v2, "setAppletTypes:", v3);

  NPKSecureArchiveObject(*(void **)(a1 + 40));
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  -[NPKProtoReserveStorageForAppletTypesRequest setMetadata:](v2, "setMetadata:", v4);

  v5 = objc_alloc(MEMORY[0x24BE4FE40]);
  -[NPKProtoReserveStorageForAppletTypesRequest data](v2, "data");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = (void *)objc_msgSend(v5, "initWithProtobufData:type:isResponse:", v6, 135, 0);

  v8 = *(void **)(a1 + 48);
  objc_msgSend(v8, "_idsShortSendTimeoutProvisioningOptions");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "_sendProtobuf:responseExpected:extraOptions:priority:", v7, 1, v9, 300);
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  if (v10)
  {
    v17[0] = MEMORY[0x24BDAC760];
    v17[1] = 3221225472;
    v17[2] = __94__NPKPaymentWebServiceCompanionTargetDevice_reserveStorageForAppletTypes_metadata_completion___block_invoke_2;
    v17[3] = &unk_24CFE7B80;
    v18 = *(id *)(a1 + 56);
    v11 = (void *)MEMORY[0x2199B6780](v17);
    v12 = *(void **)(a1 + 48);
    v13 = (void *)MEMORY[0x2199B6780](*(_QWORD *)(a1 + 56));
    objc_msgSend(v12, "_trackOutstandingRequestWithMessageIdentifier:completionHandler:errorHandler:", v10, v13, v11);

    v14 = v18;
  }
  else
  {
    pk_General_log();
    v15 = objc_claimAutoreleasedReturnValue();
    v16 = os_log_type_enabled(v15, OS_LOG_TYPE_ERROR);

    if (!v16)
      goto LABEL_4;
    pk_General_log();
    v14 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 136315394;
      v20 = "-[NPKPaymentWebServiceCompanionTargetDevice reserveStorageForAppletTypes:metadata:completion:]_block_invoke";
      v21 = 2112;
      v22 = v7;
      _os_log_impl(&dword_213518000, v14, OS_LOG_TYPE_ERROR, "Error: %s, No message identifier for protobuf %@", buf, 0x16u);
    }
  }

LABEL_4:
}

void __94__NPKPaymentWebServiceCompanionTargetDevice_reserveStorageForAppletTypes_metadata_completion___block_invoke_2(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  _BOOL4 v5;
  NSObject *v6;
  int v7;
  id v8;
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  v3 = a2;
  pk_General_log();
  v4 = objc_claimAutoreleasedReturnValue();
  v5 = os_log_type_enabled(v4, OS_LOG_TYPE_ERROR);

  if (v5)
  {
    pk_General_log();
    v6 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      v7 = 138412290;
      v8 = v3;
      _os_log_impl(&dword_213518000, v6, OS_LOG_TYPE_ERROR, "Error: Provisioning service outstanding request error handler invoked: %@ for reserveStorageForAppletTypes", (uint8_t *)&v7, 0xCu);
    }

  }
  (*(void (**)(void))(*(_QWORD *)(a1 + 32) + 16))();

}

- (void)reserveStorageForAppletTypesResponse:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  NSObject *v7;
  NSObject *v8;
  _BOOL4 v9;
  NSObject *v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  _BOOL4 v14;
  NSObject *v15;
  _QWORD block[5];
  id v17;
  id v18;
  uint64_t *v19;
  uint64_t *v20;
  uint64_t *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t (*v26)(uint64_t, uint64_t);
  void (*v27)(uint64_t);
  id v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t (*v36)(uint64_t, uint64_t);
  void (*v37)(uint64_t);
  id v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t (*v42)(uint64_t, uint64_t);
  void (*v43)(uint64_t);
  id v44;
  uint8_t buf[4];
  const char *v46;
  uint64_t v47;

  v47 = *MEMORY[0x24BDAC8D0];
  v4 = a3;
  objc_msgSend(v4, "context");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "incomingResponseIdentifier");
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  v39 = 0;
  v40 = &v39;
  v41 = 0x3032000000;
  v42 = __Block_byref_object_copy__342;
  v43 = __Block_byref_object_dispose__343;
  v44 = 0;
  v33 = 0;
  v34 = &v33;
  v35 = 0x3032000000;
  v36 = __Block_byref_object_copy__23;
  v37 = __Block_byref_object_dispose__23;
  v38 = 0;
  v29 = 0;
  v30 = &v29;
  v31 = 0x2020000000;
  v32 = 0;
  v23 = 0;
  v24 = &v23;
  v25 = 0x3032000000;
  v26 = __Block_byref_object_copy__23;
  v27 = __Block_byref_object_dispose__23;
  v28 = 0;
  if (v6)
  {
    -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
    v7 = objc_claimAutoreleasedReturnValue();
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 3221225472;
    block[2] = __82__NPKPaymentWebServiceCompanionTargetDevice_reserveStorageForAppletTypesResponse___block_invoke;
    block[3] = &unk_24CFECFC0;
    block[4] = self;
    v17 = v6;
    v18 = v4;
    v19 = &v39;
    v20 = &v33;
    v21 = &v29;
    v22 = &v23;
    dispatch_sync(v7, block);

  }
  else
  {
    pk_General_log();
    v8 = objc_claimAutoreleasedReturnValue();
    v9 = os_log_type_enabled(v8, OS_LOG_TYPE_ERROR);

    if (v9)
    {
      pk_General_log();
      v10 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)buf = 0;
        _os_log_impl(&dword_213518000, v10, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", buf, 2u);
      }

    }
  }
  v11 = v40[5];
  if (v11)
  {
    if (objc_msgSend((id)v34[5], "count"))
      v12 = v34[5];
    else
      v12 = 0;
    (*(void (**)(uint64_t, uint64_t, _QWORD, uint64_t))(v11 + 16))(v11, v12, *((unsigned __int8 *)v30 + 24), v24[5]);
  }
  else
  {
    pk_General_log();
    v13 = objc_claimAutoreleasedReturnValue();
    v14 = os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT);

    if (v14)
    {
      pk_General_log();
      v15 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 136315138;
        v46 = "-[NPKPaymentWebServiceCompanionTargetDevice reserveStorageForAppletTypesResponse:]";
        _os_log_impl(&dword_213518000, v15, OS_LOG_TYPE_DEFAULT, "Warning: %s No completion block to call, unexpected.", buf, 0xCu);
      }

    }
  }
  _Block_object_dispose(&v23, 8);

  _Block_object_dispose(&v29, 8);
  _Block_object_dispose(&v33, 8);

  _Block_object_dispose(&v39, 8);
}

void __82__NPKPaymentWebServiceCompanionTargetDevice_reserveStorageForAppletTypesResponse___block_invoke(uint64_t a1)
{
  void *v1;
  void *v3;
  void *v4;
  NPKProtoReserveStorageForAppletTypesResponse *v5;
  void *v6;
  NSObject *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  uint64_t v13;
  void *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  void *i;
  void *v19;
  NSObject *v20;
  void *v21;
  int v22;
  NSObject *v23;
  void *v24;
  NSObject *v25;
  _BOOL4 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  uint8_t buf[4];
  const char *v32;
  _BYTE v33[128];
  uint64_t v34;

  v34 = *MEMORY[0x24BDAC8D0];
  objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "objectForKey:", *(_QWORD *)(a1 + 40));
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  if (v4)
  {
    v5 = [NPKProtoReserveStorageForAppletTypesResponse alloc];
    objc_msgSend(*(id *)(a1 + 48), "data");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    v7 = -[NPKProtoReserveStorageForAppletTypesResponse initWithData:](v5, "initWithData:", v6);

    objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "removeObjectForKey:", *(_QWORD *)(a1 + 40));

    objc_msgSend(v4, "completionHandler");
    v9 = objc_claimAutoreleasedReturnValue();
    v10 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
    v11 = *(void **)(v10 + 40);
    *(_QWORD *)(v10 + 40) = v9;

    v12 = objc_alloc_init(MEMORY[0x24BDBCEB8]);
    v13 = *(_QWORD *)(*(_QWORD *)(a1 + 64) + 8);
    v14 = *(void **)(v13 + 40);
    *(_QWORD *)(v13 + 40) = v12;

    v29 = 0u;
    v30 = 0u;
    v27 = 0u;
    v28 = 0u;
    -[NSObject reservationIDs](v7, "reservationIDs", 0);
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    v16 = objc_msgSend(v15, "countByEnumeratingWithState:objects:count:", &v27, v33, 16);
    if (v16)
    {
      v1 = (void *)v16;
      v17 = *(_QWORD *)v28;
      do
      {
        for (i = 0; i != v1; i = (char *)i + 1)
        {
          if (*(_QWORD *)v28 != v17)
            objc_enumerationMutation(v15);
          v19 = *(void **)(*((_QWORD *)&v27 + 1) + 8 * (_QWORD)i);
          v20 = objc_opt_class();
          NPKSecureUnarchiveObject(v19, v20);
          v21 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 40), "npkSafelyAddObject:", v21);

        }
        v1 = (void *)objc_msgSend(v15, "countByEnumeratingWithState:objects:count:", &v27, v33, 16);
      }
      while (v1);
    }

    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 72) + 8) + 24) = -[NSObject isFull](v7, "isFull");
    v22 = -[NSObject hasErrorData](v7, "hasErrorData");
    if (v22)
    {
      -[NSObject errorData](v7, "errorData");
      v1 = (void *)objc_claimAutoreleasedReturnValue();
      v23 = objc_opt_class();
      NPKSecureUnarchiveObject(v1, v23);
      v24 = (void *)objc_claimAutoreleasedReturnValue();
    }
    else
    {
      v24 = 0;
    }
    objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 80) + 8) + 40), v24);
    if (v22)
    {

    }
LABEL_17:

    goto LABEL_18;
  }
  pk_General_log();
  v25 = objc_claimAutoreleasedReturnValue();
  v26 = os_log_type_enabled(v25, OS_LOG_TYPE_DEFAULT);

  if (v26)
  {
    pk_General_log();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 136315138;
      v32 = "-[NPKPaymentWebServiceCompanionTargetDevice reserveStorageForAppletTypesResponse:]_block_invoke";
      _os_log_impl(&dword_213518000, v7, OS_LOG_TYPE_DEFAULT, "Warning: %s got response with no associated message handler", buf, 0xCu);
    }
    goto LABEL_17;
  }
LABEL_18:

}

- (void)deleteReservation:(id)a3 completion:(id)a4
{
  id v6;
  void (**v7)(_QWORD);
  NSObject *v8;
  NSObject *v9;
  _BOOL4 v10;
  NSObject *v11;
  NSObject *v12;
  _BOOL4 v13;
  NSObject *v14;
  _QWORD block[4];
  id v16;
  NPKPaymentWebServiceCompanionTargetDevice *v17;
  void (**v18)(_QWORD);
  uint8_t buf[4];
  const char *v20;
  uint64_t v21;

  v21 = *MEMORY[0x24BDAC8D0];
  v6 = a3;
  v7 = (void (**)(_QWORD))a4;
  if (v7)
  {
    if (-[NPKPaymentWebServiceCompanionTargetDevice _isParallelProvisioningSupported](self, "_isParallelProvisioningSupported"))
    {
      -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
      v8 = objc_claimAutoreleasedReturnValue();
      block[0] = MEMORY[0x24BDAC760];
      block[1] = 3221225472;
      block[2] = __74__NPKPaymentWebServiceCompanionTargetDevice_deleteReservation_completion___block_invoke;
      block[3] = &unk_24CFE84E8;
      v16 = v6;
      v17 = self;
      v18 = v7;
      dispatch_sync(v8, block);

    }
    else
    {
      pk_General_log();
      v12 = objc_claimAutoreleasedReturnValue();
      v13 = os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT);

      if (v13)
      {
        pk_General_log();
        v14 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)buf = 136315138;
          v20 = "-[NPKPaymentWebServiceCompanionTargetDevice deleteReservation:completion:]";
          _os_log_impl(&dword_213518000, v14, OS_LOG_TYPE_DEFAULT, "Notice: %s, not supported, will not send message", buf, 0xCu);
        }

      }
      v7[2](v7);
    }
  }
  else
  {
    pk_General_log();
    v9 = objc_claimAutoreleasedReturnValue();
    v10 = os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT);

    if (v10)
    {
      pk_General_log();
      v11 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 136315138;
        v20 = "-[NPKPaymentWebServiceCompanionTargetDevice deleteReservation:completion:]";
        _os_log_impl(&dword_213518000, v11, OS_LOG_TYPE_DEFAULT, "Notice: %s, nil completion, will not send message", buf, 0xCu);
      }

    }
  }

}

void __74__NPKPaymentWebServiceCompanionTargetDevice_deleteReservation_completion___block_invoke(uint64_t a1)
{
  NPKProtoDeleteReservationRequest *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t i;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  NSObject *v18;
  NSObject *v19;
  _BOOL4 v20;
  _QWORD v21[4];
  NSObject *v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  uint8_t buf[4];
  const char *v28;
  __int16 v29;
  void *v30;
  _BYTE v31[128];
  uint64_t v32;

  v32 = *MEMORY[0x24BDAC8D0];
  v2 = objc_alloc_init(NPKProtoDeleteReservationRequest);
  v23 = 0u;
  v24 = 0u;
  v25 = 0u;
  v26 = 0u;
  v3 = *(id *)(a1 + 32);
  v4 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v23, v31, 16);
  if (v4)
  {
    v5 = v4;
    v6 = *(_QWORD *)v24;
    do
    {
      for (i = 0; i != v5; ++i)
      {
        if (*(_QWORD *)v24 != v6)
          objc_enumerationMutation(v3);
        NPKSecureArchiveObject(*(void **)(*((_QWORD *)&v23 + 1) + 8 * i));
        v8 = (void *)objc_claimAutoreleasedReturnValue();
        -[NPKProtoDeleteReservationRequest addReservationID:](v2, "addReservationID:", v8);

      }
      v5 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v23, v31, 16);
    }
    while (v5);
  }

  v9 = objc_alloc(MEMORY[0x24BE4FE40]);
  -[NPKProtoDeleteReservationRequest data](v2, "data");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v11 = (void *)objc_msgSend(v9, "initWithProtobufData:type:isResponse:", v10, 136, 0);

  v12 = *(void **)(a1 + 40);
  objc_msgSend(v12, "_idsShortSendTimeoutProvisioningOptions");
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v12, "_sendProtobuf:responseExpected:extraOptions:priority:", v11, 1, v13, 300);
  v14 = (void *)objc_claimAutoreleasedReturnValue();

  if (v14)
  {
    v21[0] = MEMORY[0x24BDAC760];
    v21[1] = 3221225472;
    v21[2] = __74__NPKPaymentWebServiceCompanionTargetDevice_deleteReservation_completion___block_invoke_2;
    v21[3] = &unk_24CFE7B80;
    v22 = *(id *)(a1 + 48);
    v15 = (void *)MEMORY[0x2199B6780](v21);
    v16 = *(void **)(a1 + 40);
    v17 = (void *)MEMORY[0x2199B6780](*(_QWORD *)(a1 + 48));
    objc_msgSend(v16, "_trackOutstandingRequestWithMessageIdentifier:completionHandler:errorHandler:", v14, v17, v15);

    v18 = v22;
  }
  else
  {
    pk_General_log();
    v19 = objc_claimAutoreleasedReturnValue();
    v20 = os_log_type_enabled(v19, OS_LOG_TYPE_ERROR);

    if (!v20)
      goto LABEL_11;
    pk_General_log();
    v18 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 136315394;
      v28 = "-[NPKPaymentWebServiceCompanionTargetDevice deleteReservation:completion:]_block_invoke";
      v29 = 2112;
      v30 = v11;
      _os_log_impl(&dword_213518000, v18, OS_LOG_TYPE_ERROR, "Error: %s, No message identifier for protobuf %@", buf, 0x16u);
    }
  }

LABEL_11:
}

void __74__NPKPaymentWebServiceCompanionTargetDevice_deleteReservation_completion___block_invoke_2(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  _BOOL4 v5;
  NSObject *v6;
  int v7;
  id v8;
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  v3 = a2;
  pk_General_log();
  v4 = objc_claimAutoreleasedReturnValue();
  v5 = os_log_type_enabled(v4, OS_LOG_TYPE_ERROR);

  if (v5)
  {
    pk_General_log();
    v6 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      v7 = 138412290;
      v8 = v3;
      _os_log_impl(&dword_213518000, v6, OS_LOG_TYPE_ERROR, "Error: Provisioning service outstanding request error handler invoked: %@ for deleteReservation", (uint8_t *)&v7, 0xCu);
    }

  }
  (*(void (**)(void))(*(_QWORD *)(a1 + 32) + 16))();

}

- (void)deleteReservationResponse:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  NSObject *v7;
  NSObject *v8;
  _BOOL4 v9;
  NSObject *v10;
  uint64_t v11;
  NSObject *v12;
  _BOOL4 v13;
  NSObject *v14;
  _QWORD block[5];
  id v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t (*v21)(uint64_t, uint64_t);
  void (*v22)(uint64_t);
  id v23;
  uint8_t buf[4];
  const char *v25;
  uint64_t v26;

  v26 = *MEMORY[0x24BDAC8D0];
  v4 = a3;
  objc_msgSend(v4, "context");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "incomingResponseIdentifier");
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  v18 = 0;
  v19 = &v18;
  v20 = 0x3032000000;
  v21 = __Block_byref_object_copy__342;
  v22 = __Block_byref_object_dispose__343;
  v23 = 0;
  if (v6)
  {
    -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
    v7 = objc_claimAutoreleasedReturnValue();
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 3221225472;
    block[2] = __71__NPKPaymentWebServiceCompanionTargetDevice_deleteReservationResponse___block_invoke;
    block[3] = &unk_24CFEB0F8;
    block[4] = self;
    v16 = v6;
    v17 = &v18;
    dispatch_sync(v7, block);

  }
  else
  {
    pk_General_log();
    v8 = objc_claimAutoreleasedReturnValue();
    v9 = os_log_type_enabled(v8, OS_LOG_TYPE_ERROR);

    if (v9)
    {
      pk_General_log();
      v10 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)buf = 0;
        _os_log_impl(&dword_213518000, v10, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", buf, 2u);
      }

    }
  }
  v11 = v19[5];
  if (v11)
  {
    (*(void (**)(void))(v11 + 16))();
  }
  else
  {
    pk_General_log();
    v12 = objc_claimAutoreleasedReturnValue();
    v13 = os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT);

    if (v13)
    {
      pk_General_log();
      v14 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 136315138;
        v25 = "-[NPKPaymentWebServiceCompanionTargetDevice deleteReservationResponse:]";
        _os_log_impl(&dword_213518000, v14, OS_LOG_TYPE_DEFAULT, "Warning: %s No completion block to call, unexpected.", buf, 0xCu);
      }

    }
  }
  _Block_object_dispose(&v18, 8);

}

void __71__NPKPaymentWebServiceCompanionTargetDevice_deleteReservationResponse___block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  NSObject *v8;
  _BOOL4 v9;
  NSObject *v10;
  int v11;
  const char *v12;
  uint64_t v13;

  v13 = *MEMORY[0x24BDAC8D0];
  objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "objectForKey:", *(_QWORD *)(a1 + 40));
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  if (v3)
  {
    objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "removeObjectForKey:", *(_QWORD *)(a1 + 40));

    objc_msgSend(v3, "completionHandler");
    v5 = objc_claimAutoreleasedReturnValue();
    v6 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
    v7 = *(void **)(v6 + 40);
    *(_QWORD *)(v6 + 40) = v5;

  }
  else
  {
    pk_General_log();
    v8 = objc_claimAutoreleasedReturnValue();
    v9 = os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT);

    if (v9)
    {
      pk_General_log();
      v10 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
      {
        v11 = 136315138;
        v12 = "-[NPKPaymentWebServiceCompanionTargetDevice deleteReservationResponse:]_block_invoke";
        _os_log_impl(&dword_213518000, v10, OS_LOG_TYPE_DEFAULT, "Warning: %s got response with no associated message handler", (uint8_t *)&v11, 0xCu);
      }

    }
  }

}

- (id)_idsShortSendTimeoutProvisioningOptions
{
  uint64_t v2;
  _QWORD v4[3];
  _QWORD v5[4];

  v5[3] = *MEMORY[0x24BDAC8D0];
  v2 = *MEMORY[0x24BE4FA78];
  v4[0] = *MEMORY[0x24BE4FAC0];
  v4[1] = v2;
  v5[0] = MEMORY[0x24BDBD1C8];
  v5[1] = MEMORY[0x24BDBD1C8];
  v4[2] = *MEMORY[0x24BE4FB30];
  v5[2] = &unk_24D056700;
  objc_msgSend(MEMORY[0x24BDBCE70], "dictionaryWithObjects:forKeys:count:", v5, v4, 3);
  return (id)objc_claimAutoreleasedReturnValue();
}

- (void)addPendingProvisionings:(id)a3 completion:(id)a4
{
  id v6;
  id v7;
  NSObject *v8;
  void *v9;
  void *v10;
  void *v11;
  _QWORD v12[4];
  id v13;
  NPKPaymentWebServiceCompanionTargetDevice *v14;
  id v15;
  uint64_t v16;
  _QWORD v17[2];

  v17[1] = *MEMORY[0x24BDAC8D0];
  v6 = a3;
  v7 = a4;
  if (-[NPKPaymentWebServiceCompanionTargetDevice _isParallelProvisioningSupported](self, "_isParallelProvisioningSupported"))
  {
    -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
    v8 = objc_claimAutoreleasedReturnValue();
    v12[0] = MEMORY[0x24BDAC760];
    v12[1] = 3221225472;
    v12[2] = __80__NPKPaymentWebServiceCompanionTargetDevice_addPendingProvisionings_completion___block_invoke;
    v12[3] = &unk_24CFE84E8;
    v13 = v6;
    v14 = self;
    v15 = v7;
    dispatch_sync(v8, v12);

  }
  else
  {
    v9 = (void *)MEMORY[0x24BDD1540];
    v16 = *MEMORY[0x24BDD0BA0];
    v17[0] = CFSTR("Parallel provisioning not supported on this device.");
    objc_msgSend(MEMORY[0x24BDBCE70], "dictionaryWithObjects:forKeys:count:", v17, &v16, 1);
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v9, "errorWithDomain:code:userInfo:", CFSTR("com.apple.NPKErrorDomain"), -1006, v10);
    v11 = (void *)objc_claimAutoreleasedReturnValue();

    (*((void (**)(id, void *))v7 + 2))(v7, v11);
  }

}

void __80__NPKPaymentWebServiceCompanionTargetDevice_addPendingProvisionings_completion___block_invoke(uint64_t a1)
{
  NPKProtoAddPendingProvisioningRequest *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t i;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  _QWORD v18[4];
  id v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  _BYTE v24[128];
  uint64_t v25;

  v25 = *MEMORY[0x24BDAC8D0];
  v2 = objc_alloc_init(NPKProtoAddPendingProvisioningRequest);
  v20 = 0u;
  v21 = 0u;
  v22 = 0u;
  v23 = 0u;
  v3 = *(id *)(a1 + 32);
  v4 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v20, v24, 16);
  if (v4)
  {
    v5 = v4;
    v6 = *(_QWORD *)v21;
    do
    {
      for (i = 0; i != v5; ++i)
      {
        if (*(_QWORD *)v21 != v6)
          objc_enumerationMutation(v3);
        NPKSecureArchiveObject(*(void **)(*((_QWORD *)&v20 + 1) + 8 * i));
        v8 = (void *)objc_claimAutoreleasedReturnValue();
        -[NPKProtoAddPendingProvisioningRequest addPendingProvisioning:](v2, "addPendingProvisioning:", v8);

      }
      v5 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v20, v24, 16);
    }
    while (v5);
  }

  v9 = objc_alloc(MEMORY[0x24BE4FE40]);
  -[NPKProtoAddPendingProvisioningRequest data](v2, "data");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v11 = (void *)objc_msgSend(v9, "initWithProtobufData:type:isResponse:", v10, 137, 0);

  v12 = *(void **)(a1 + 40);
  objc_msgSend(v12, "_idsShortSendTimeoutProvisioningOptions");
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v12, "_sendProtobuf:responseExpected:extraOptions:priority:", v11, 1, v13, 300);
  v14 = (void *)objc_claimAutoreleasedReturnValue();

  v18[0] = MEMORY[0x24BDAC760];
  v18[1] = 3221225472;
  v18[2] = __80__NPKPaymentWebServiceCompanionTargetDevice_addPendingProvisionings_completion___block_invoke_2;
  v18[3] = &unk_24CFE7B80;
  v19 = *(id *)(a1 + 48);
  v15 = (void *)MEMORY[0x2199B6780](v18);
  v16 = *(void **)(a1 + 40);
  v17 = (void *)MEMORY[0x2199B6780](*(_QWORD *)(a1 + 48));
  objc_msgSend(v16, "_trackOutstandingRequestWithMessageIdentifier:completionHandler:errorHandler:", v14, v17, v15);

}

void __80__NPKPaymentWebServiceCompanionTargetDevice_addPendingProvisionings_completion___block_invoke_2(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  _BOOL4 v5;
  NSObject *v6;
  int v7;
  id v8;
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  v3 = a2;
  pk_General_log();
  v4 = objc_claimAutoreleasedReturnValue();
  v5 = os_log_type_enabled(v4, OS_LOG_TYPE_ERROR);

  if (v5)
  {
    pk_General_log();
    v6 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      v7 = 138412290;
      v8 = v3;
      _os_log_impl(&dword_213518000, v6, OS_LOG_TYPE_ERROR, "Error: Provisioning service outstanding request error handler invoked: %@ for addPendingProvisionings", (uint8_t *)&v7, 0xCu);
    }

  }
  (*(void (**)(void))(*(_QWORD *)(a1 + 32) + 16))();

}

- (void)addPendingProvisioningsResponse:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  NSObject *v7;
  NSObject *v8;
  _BOOL4 v9;
  NSObject *v10;
  uint64_t v11;
  NSObject *v12;
  _BOOL4 v13;
  NSObject *v14;
  _QWORD block[5];
  id v16;
  id v17;
  uint64_t *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t (*v23)(uint64_t, uint64_t);
  void (*v24)(uint64_t);
  id v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t (*v29)(uint64_t, uint64_t);
  void (*v30)(uint64_t);
  id v31;
  uint8_t buf[4];
  const char *v33;
  uint64_t v34;

  v34 = *MEMORY[0x24BDAC8D0];
  v4 = a3;
  objc_msgSend(v4, "context");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "incomingResponseIdentifier");
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  v26 = 0;
  v27 = &v26;
  v28 = 0x3032000000;
  v29 = __Block_byref_object_copy__342;
  v30 = __Block_byref_object_dispose__343;
  v31 = 0;
  v20 = 0;
  v21 = &v20;
  v22 = 0x3032000000;
  v23 = __Block_byref_object_copy__23;
  v24 = __Block_byref_object_dispose__23;
  v25 = 0;
  if (v6)
  {
    -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
    v7 = objc_claimAutoreleasedReturnValue();
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 3221225472;
    block[2] = __77__NPKPaymentWebServiceCompanionTargetDevice_addPendingProvisioningsResponse___block_invoke;
    block[3] = &unk_24CFED0D8;
    block[4] = self;
    v16 = v6;
    v17 = v4;
    v18 = &v20;
    v19 = &v26;
    dispatch_sync(v7, block);

  }
  else
  {
    pk_General_log();
    v8 = objc_claimAutoreleasedReturnValue();
    v9 = os_log_type_enabled(v8, OS_LOG_TYPE_ERROR);

    if (v9)
    {
      pk_General_log();
      v10 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)buf = 0;
        _os_log_impl(&dword_213518000, v10, OS_LOG_TYPE_ERROR, "Error: No associated message ID in response", buf, 2u);
      }

    }
  }
  v11 = v27[5];
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t))(v11 + 16))(v11, v21[5]);
  }
  else
  {
    pk_General_log();
    v12 = objc_claimAutoreleasedReturnValue();
    v13 = os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT);

    if (v13)
    {
      pk_General_log();
      v14 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 136315138;
        v33 = "-[NPKPaymentWebServiceCompanionTargetDevice addPendingProvisioningsResponse:]";
        _os_log_impl(&dword_213518000, v14, OS_LOG_TYPE_DEFAULT, "Warning: %s No completion block to call, unexpected.", buf, 0xCu);
      }

    }
  }
  _Block_object_dispose(&v20, 8);

  _Block_object_dispose(&v26, 8);
}

void __77__NPKPaymentWebServiceCompanionTargetDevice_addPendingProvisioningsResponse___block_invoke(uint64_t a1)
{
  void *v1;
  void *v3;
  void *v4;
  NPKProtoAddPendingProvisioningResponse *v5;
  void *v6;
  NPKProtoAddPendingProvisioningResponse *v7;
  _BOOL4 v8;
  NSObject *v9;
  void *v10;
  NSObject *v11;
  _BOOL4 v12;
  NSObject *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  int v18;
  const char *v19;
  uint64_t v20;

  v20 = *MEMORY[0x24BDAC8D0];
  objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "objectForKey:", *(_QWORD *)(a1 + 40));
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  if (v4)
  {
    v5 = [NPKProtoAddPendingProvisioningResponse alloc];
    objc_msgSend(*(id *)(a1 + 48), "data");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    v7 = -[NPKProtoAddPendingProvisioningResponse initWithData:](v5, "initWithData:", v6);

    v8 = -[NPKProtoAddPendingProvisioningResponse hasErrorData](v7, "hasErrorData");
    if (v8)
    {
      -[NPKProtoAddPendingProvisioningResponse errorData](v7, "errorData");
      v1 = (void *)objc_claimAutoreleasedReturnValue();
      v9 = objc_opt_class();
      NPKSecureUnarchiveObject(v1, v9);
      v10 = (void *)objc_claimAutoreleasedReturnValue();
    }
    else
    {
      v10 = 0;
    }
    objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40), v10);
    if (v8)
    {

    }
    objc_msgSend(*(id *)(a1 + 32), "outstandingRequests");
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v14, "removeObjectForKey:", *(_QWORD *)(a1 + 40));

    objc_msgSend(v4, "completionHandler");
    v15 = objc_claimAutoreleasedReturnValue();
    v16 = *(_QWORD *)(*(_QWORD *)(a1 + 64) + 8);
    v17 = *(void **)(v16 + 40);
    *(_QWORD *)(v16 + 40) = v15;

  }
  else
  {
    pk_General_log();
    v11 = objc_claimAutoreleasedReturnValue();
    v12 = os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT);

    if (v12)
    {
      pk_General_log();
      v13 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
      {
        v18 = 136315138;
        v19 = "-[NPKPaymentWebServiceCompanionTargetDevice addPendingProvisioningsResponse:]_block_invoke";
        _os_log_impl(&dword_213518000, v13, OS_LOG_TYPE_DEFAULT, "Warning: %s got response with no associated message handler", (uint8_t *)&v18, 0xCu);
      }

    }
  }

}

- (void)addPendingProvisioningsRequest:(id)a3
{
  id v3;
  NSObject *v4;
  _BOOL4 v5;
  NSObject *v6;
  void *v7;
  NPKProtoAddPendingProvisioningRequest *v8;
  void *v9;
  NPKProtoAddPendingProvisioningRequest *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  void *v22;
  NSObject *v23;
  _BOOL4 v24;
  NSObject *v25;
  id v26;
  NPKProtoAddPendingProvisioningRequest *v27;
  void *v28;
  id obj;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  void *v33;
  void *v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  uint8_t v39[128];
  uint8_t buf[4];
  void *v41;
  uint64_t v42;

  v42 = *MEMORY[0x24BDAC8D0];
  v3 = a3;
  pk_Payment_log();
  v4 = objc_claimAutoreleasedReturnValue();
  v5 = os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT);

  if (v5)
  {
    pk_Payment_log();
    v6 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend(v3, "npkDescription");
      v7 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138412290;
      v41 = v7;
      _os_log_impl(&dword_213518000, v6, OS_LOG_TYPE_DEFAULT, "Notice: Target device - received add pending provisionings request: %@", buf, 0xCu);

    }
  }
  v8 = [NPKProtoAddPendingProvisioningRequest alloc];
  v28 = v3;
  objc_msgSend(v3, "data");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v10 = -[NPKProtoAddPendingProvisioningRequest initWithData:](v8, "initWithData:", v9);

  v31 = (void *)objc_msgSend(objc_alloc(MEMORY[0x24BDBCEB8]), "initWithCapacity:", -[NPKProtoAddPendingProvisioningRequest pendingProvisioningsCount](v10, "pendingProvisioningsCount"));
  v35 = 0u;
  v36 = 0u;
  v37 = 0u;
  v38 = 0u;
  v27 = v10;
  -[NPKProtoAddPendingProvisioningRequest pendingProvisionings](v10, "pendingProvisionings");
  obj = (id)objc_claimAutoreleasedReturnValue();
  v32 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v35, v39, 16);
  if (v32)
  {
    v30 = *(_QWORD *)v36;
    do
    {
      v11 = 0;
      do
      {
        if (*(_QWORD *)v36 != v30)
          objc_enumerationMutation(obj);
        v33 = (void *)MEMORY[0x24BDBCF20];
        v34 = *(void **)(*((_QWORD *)&v35 + 1) + 8 * v11);
        v12 = objc_opt_class();
        v13 = objc_opt_class();
        v14 = objc_opt_class();
        v15 = objc_opt_class();
        v16 = objc_opt_class();
        v17 = objc_opt_class();
        v18 = objc_opt_class();
        v19 = objc_opt_class();
        v20 = objc_opt_class();
        objc_msgSend(v33, "setWithObjects:", v12, v13, v14, v15, v16, v17, v18, v19, v20, objc_opt_class(), 0);
        v21 = (void *)objc_claimAutoreleasedReturnValue();
        NPKSecureUnarchiveObjectOfClasses(v34, v21);
        v22 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v31, "npkSafelyAddObject:", v22);

        ++v11;
      }
      while (v32 != v11);
      v32 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v35, v39, 16);
    }
    while (v32);
  }

  pk_General_log();
  v23 = objc_claimAutoreleasedReturnValue();
  v24 = os_log_type_enabled(v23, OS_LOG_TYPE_DEFAULT);

  if (v24)
  {
    pk_General_log();
    v25 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v25, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138412290;
      v41 = v31;
      _os_log_impl(&dword_213518000, v25, OS_LOG_TYPE_DEFAULT, "Notice: Will add pending provisionings: %@", buf, 0xCu);
    }

  }
  v26 = objc_alloc_init(MEMORY[0x24BE6ED30]);
  objc_msgSend(v26, "addPendingProvisionings:completion:", v31, &__block_literal_global_904);

}

void __76__NPKPaymentWebServiceCompanionTargetDevice_addPendingProvisioningsRequest___block_invoke(uint64_t a1, void *a2)
{
  id v2;
  NSObject *v3;
  NSObject *v4;
  _BOOL4 v5;
  NSObject *v6;
  const char *v7;
  NSObject *v8;
  os_log_type_t v9;
  uint32_t v10;
  _BOOL4 v11;
  int v12;
  id v13;
  uint64_t v14;

  v14 = *MEMORY[0x24BDAC8D0];
  v2 = a2;
  pk_General_log();
  v3 = objc_claimAutoreleasedReturnValue();
  v4 = v3;
  if (v2)
  {
    v5 = os_log_type_enabled(v3, OS_LOG_TYPE_ERROR);

    if (v5)
    {
      pk_General_log();
      v6 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
      {
        v12 = 138412290;
        v13 = v2;
        v7 = "Error: addPendingProvisionings: failed with error: %@";
        v8 = v6;
        v9 = OS_LOG_TYPE_ERROR;
        v10 = 12;
LABEL_8:
        _os_log_impl(&dword_213518000, v8, v9, v7, (uint8_t *)&v12, v10);
        goto LABEL_9;
      }
      goto LABEL_9;
    }
  }
  else
  {
    v11 = os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT);

    if (v11)
    {
      pk_General_log();
      v6 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
      {
        LOWORD(v12) = 0;
        v7 = "Notice: addPendingProvisionings: completed with success!";
        v8 = v6;
        v9 = OS_LOG_TYPE_DEFAULT;
        v10 = 2;
        goto LABEL_8;
      }
LABEL_9:

    }
  }

}

- (void)hasActiveExternallySharedPassesWithCompletion:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  char v7;
  NSObject *v8;
  NSObject *v9;
  _BOOL4 v10;
  NSObject *v11;
  void *v12;
  _QWORD v13[5];
  id v14;
  uint8_t buf[16];

  v4 = a3;
  NPKPairedOrPairingDevice();
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = (void *)objc_msgSend(objc_alloc(MEMORY[0x24BDD1880]), "initWithUUIDString:", CFSTR("FD975695-3B94-465A-86E1-26276C5835A8"));
  v7 = objc_msgSend(v5, "supportsCapability:", v6);

  if ((v7 & 1) != 0)
  {
    -[NPKPaymentWebServiceCompanionTargetDevice internalQueue](self, "internalQueue");
    v8 = objc_claimAutoreleasedReturnValue();
    v13[0] = MEMORY[0x24BDAC760];
    v13[1] = 3221225472;
    v13[2] = __91__NPKPaymentWebServiceCompanionTargetDevice_hasActiveExternallySharedPassesWithCompletion___block_invoke;
    v13[3] = &unk_24CFE7E90;
    v13[4] = self;
    v14 = v4;
    dispatch_sync(v8, v13);

  }
  else
  {
    pk_General_log();
    v9 = objc_claimAutoreleasedReturnValue();
    v10 = os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT);

    if (v10)
    {
      pk_General_log();
      v11 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)buf = 0;
        _os_log_impl(&dword_213518000, v11, OS_LOG_TYPE_DEFAULT, "Notice: Target device does not support the message. Not sending message to get has active externally shared passes.", buf, 2u);
      }

    }
    if (v4)
    {
      objc_msgSend(MEMORY[0x24BDD1540], "errorWithDomain:code:userInfo:", CFSTR("com.apple.NPKErrorDomain"), -1006, 0);
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      (*((void (**)(id, _QWORD, void *))v4 + 2))(v4, 0, v12);

    }
  }

}

void __91__NPKPaymentWebServiceCompanionTargetDevice_hasActiveExternallySharedPassesWithCompletion___block_invoke(uint64_t a1)
{
  void *v2;
  char CanSendMessage;
  NSObject *v4;
  _BOOL4 v5;
  NSObject *v6;
  NPKProtoHasActiveExternallySharedPassesRequest *v7;
  id v8;
  void *v9;
  void *v10;
  uint64_t v11;
  void *v12;
  void *v13;
  NSObject *v14;
  void *v15;
  void *v16;
  void *v17;
  NSObject *v18;
  uint64_t v19;
  NSObject *v20;
  _BOOL4 v21;
  const char *v22;
  NSObject *v23;
  os_log_type_t v24;
  NSObject *v25;
  _BOOL4 v26;
  _QWORD v27[4];
  id v28;
  uint8_t buf[4];
  void *v30;
  _QWORD v31[3];
  _QWORD v32[4];

  v32[3] = *MEMORY[0x24BDAC8D0];
  objc_msgSend(*(id *)(a1 + 32), "provisioningService");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  CanSendMessage = NPKProtoCanSendMessage(v2);

  pk_General_log();
  v4 = objc_claimAutoreleasedReturnValue();
  v5 = os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT);

  if ((CanSendMessage & 1) != 0)
  {
    if (v5)
    {
      pk_General_log();
      v6 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)buf = 0;
        _os_log_impl(&dword_213518000, v6, OS_LOG_TYPE_DEFAULT, "Notice: Has active externally shared passes: sending message", buf, 2u);
      }

    }
    v7 = objc_alloc_init(NPKProtoHasActiveExternallySharedPassesRequest);
    v8 = objc_alloc(MEMORY[0x24BE4FE40]);
    -[NPKProtoHasActiveExternallySharedPassesRequest data](v7, "data");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    v10 = (void *)objc_msgSend(v8, "initWithProtobufData:type:isResponse:", v9, 132, 0);

    v11 = *MEMORY[0x24BE4FA78];
    v31[0] = *MEMORY[0x24BE4FAC0];
    v31[1] = v11;
    v32[0] = MEMORY[0x24BDBD1C8];
    v32[1] = MEMORY[0x24BDBD1C8];
    v31[2] = *MEMORY[0x24BE4FB30];
    v32[2] = &unk_24D056700;
    objc_msgSend(MEMORY[0x24BDBCE70], "dictionaryWithObjects:forKeys:count:", v32, v31, 3);
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(*(id *)(a1 + 32), "_sendProtobuf:responseExpected:extraOptions:priority:", v10, 1, v12, 300);
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    if (v13)
    {
      if (*(_QWORD *)(a1 + 40))
      {
        v14 = MEMORY[0x2199B6780]();
        v27[0] = MEMORY[0x24BDAC760];
        v27[1] = 3221225472;
        v27[2] = __91__NPKPaymentWebServiceCompanionTargetDevice_hasActiveExternallySharedPassesWithCompletion___block_invoke_908;
        v27[3] = &unk_24CFE7B80;
        v28 = *(id *)(a1 + 40);
        v15 = (void *)MEMORY[0x2199B6780](v27);
        v16 = *(void **)(a1 + 32);
        v17 = (void *)MEMORY[0x2199B6780](v14);
        objc_msgSend(v16, "_trackOutstandingRequestWithMessageIdentifier:completionHandler:errorHandler:", v13, v17, v15);

LABEL_22:
        goto LABEL_23;
      }
      pk_Payment_log();
      v25 = objc_claimAutoreleasedReturnValue();
      v26 = os_log_type_enabled(v25, OS_LOG_TYPE_DEFAULT);

      if (v26)
      {
        pk_Payment_log();
        v14 = objc_claimAutoreleasedReturnValue();
        if (!os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
          goto LABEL_22;
        *(_DWORD *)buf = 138412290;
        v30 = v13;
        v22 = "Warning: No response expected for message with identifier %@";
        v23 = v14;
        v24 = OS_LOG_TYPE_DEFAULT;
        goto LABEL_21;
      }
    }
    else
    {
      pk_Payment_log();
      v20 = objc_claimAutoreleasedReturnValue();
      v21 = os_log_type_enabled(v20, OS_LOG_TYPE_ERROR);

      if (v21)
      {
        pk_Payment_log();
        v14 = objc_claimAutoreleasedReturnValue();
        if (!os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
          goto LABEL_22;
        *(_DWORD *)buf = 138412290;
        v30 = v10;
        v22 = "Error: No message identifier for protobuf %@";
        v23 = v14;
        v24 = OS_LOG_TYPE_ERROR;
LABEL_21:
        _os_log_impl(&dword_213518000, v23, v24, v22, buf, 0xCu);
        goto LABEL_22;
      }
    }
LABEL_23:

    goto LABEL_24;
  }
  if (v5)
  {
    pk_General_log();
    v18 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl(&dword_213518000, v18, OS_LOG_TYPE_DEFAULT, "Notice: Has active externally shared passes, device is not connected, will not send message", buf, 2u);
    }

  }
  objc_msgSend(MEMORY[0x24BDD1540], "errorWithDomain:code:userInfo:", CFSTR("com.apple.NPKErrorDomain"), -1001, 0);
  v7 = (NPKProtoHasActiveExternallySharedPassesRequest *)objc_claimAutoreleasedReturnValue();
  v19 = *(_QWORD *)(a1 + 40);
  if (v19)
    (*(void (**)(uint64_t, _QWORD, NPKProtoHasActiveExternallySharedPassesRequest *))(v19 + 16))(v19, 0, v7);
LABEL_24:

}

void __91__NPKPaymentWebServiceCompanionTargetDevice_hasActiveExternallySharedPassesWithCompletion___block_invoke_908(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  _BOOL4 v5;
  NSObject *v6;
  uint64_t v7;
  void *v8;
  int v9;
  id v10;
  uint64_t v11;

  v11 = *MEMORY[0x24BDAC8D0];
  v3 = a2;
  pk_Payment_log();
  v4 = objc_claimAutoreleasedReturnValue();
  v5 = os_log_type_enabled(v4, OS_LOG_TYPE_ERROR);

  if (v5)
  {
    pk_Payment_log();
    v6 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      v9 = 138412290;
      v10 = v3;
      _os_log_impl(&dword_213518000, v6, OS_LOG_TYPE_ERROR, "Error: Provisioning service outstanding request error handler invoked: %@", (uint8_t *)&v9, 0xCu);
    }

  }
  v7 = *(_QWORD *)(a1 + 32);
  if (v7)
  {
    objc_msgSend(MEMORY[0x24BDD1540], "errorWithDomain:code:userInfo:", CFSTR("com.apple.NPKErrorDomain"), -1001, 0);
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    (*(void (**)(uint64_t, _QWORD, void *))(v7 + 16))(v7, 0, v8);

  }
}

- (void)expressModeEnabledForPassIdentifier:(id)a3 completion:(id)a4
{
  id v5;
  void (**v6)(id, _QWORD);
  void *v7;
  id v8;
  _QWORD v9[4];
  id v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  char v15;

  v5 = a3;
  v6 = (void (**)(id, _QWORD))a4;
  v12 = 0;
  v13 = &v12;
  v14 = 0x2020000000;
  v15 = 0;
  NPKPairedDeviceCurrentExpressPassConfiguration();
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v9[0] = MEMORY[0x24BDAC760];
  v9[1] = 3221225472;
  v9[2] = __92__NPKPaymentWebServiceCompanionTargetDevice_expressModeEnabledForPassIdentifier_completion___block_invoke;
  v9[3] = &unk_24CFEB920;
  v8 = v5;
  v10 = v8;
  v11 = &v12;
  objc_msgSend(v7, "enumerateObjectsUsingBlock:", v9);
  if (v6)
    v6[2](v6, *((unsigned __int8 *)v13 + 24));

  _Block_object_dispose(&v12, 8);
}

void __92__NPKPaymentWebServiceCompanionTargetDevice_expressModeEnabledForPassIdentifier_completion___block_invoke(uint64_t a1, void *a2, _BYTE *a3)
{
  void *v5;
  int v6;

  objc_msgSend(a2, "passUniqueIdentifier");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = objc_msgSend(v5, "isEqualToString:", *(_QWORD *)(a1 + 32));

  if (v6)
  {
    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = 1;
    *a3 = 1;
  }
}

- (void)passcodeChangeCoordinator:(id)a3 remoteDeviceShouldInitiatePasscodeChangeForType:(unint64_t)a4 completion:(id)a5
{
  id v7;
  id v8;
  _QWORD v9[4];
  id v10;
  unint64_t v11;

  v7 = a5;
  v9[0] = MEMORY[0x24BDAC760];
  v9[1] = 3221225472;
  v9[2] = __130__NPKPaymentWebServiceCompanionTargetDevice_passcodeChangeCoordinator_remoteDeviceShouldInitiatePasscodeChangeForType_completion___block_invoke;
  v9[3] = &unk_24CFEDD80;
  v10 = v7;
  v11 = a4;
  v8 = v7;
  -[NPKPaymentWebServiceCompanionTargetDevice presentRemoteDevicePasscodeUpgradePromptForChangeType:completion:](self, "presentRemoteDevicePasscodeUpgradePromptForChangeType:completion:", a4, v9);

}

void __130__NPKPaymentWebServiceCompanionTargetDevice_passcodeChangeCoordinator_remoteDeviceShouldInitiatePasscodeChangeForType_completion___block_invoke(uint64_t a1, uint64_t a2, void *a3)
{
  id v5;
  NSObject *v6;
  _BOOL4 v7;
  NSObject *v8;
  void *v9;
  const __CFString *v10;
  uint64_t v11;
  int v12;
  void *v13;
  __int16 v14;
  const __CFString *v15;
  __int16 v16;
  id v17;
  uint64_t v18;

  v18 = *MEMORY[0x24BDAC8D0];
  v5 = a3;
  pk_Payment_log();
  v6 = objc_claimAutoreleasedReturnValue();
  v7 = os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT);

  if (v7)
  {
    pk_Payment_log();
    v8 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      NSStringFromNPKPasscodeUpgradeChangeType(*(_QWORD *)(a1 + 40));
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      v10 = CFSTR("NO");
      v12 = 138412802;
      v13 = v9;
      v14 = 2112;
      if ((_DWORD)a2)
        v10 = CFSTR("YES");
      v15 = v10;
      v16 = 2112;
      v17 = v5;
      _os_log_impl(&dword_213518000, v8, OS_LOG_TYPE_DEFAULT, "Notice: Remote device prompted for passcode change (%@) with success: %@, error: %@", (uint8_t *)&v12, 0x20u);

    }
  }
  v11 = *(_QWORD *)(a1 + 32);
  if (v11)
    (*(void (**)(uint64_t, uint64_t, id))(v11 + 16))(v11, a2, v5);

}

- (void)passcodeChangeCoordinator:(id)a3 remoteDeviceShouldCancelPasscodeChangeWithCompletion:(id)a4
{
  id v5;
  id v6;
  _QWORD v7[4];
  id v8;

  v5 = a4;
  v7[0] = MEMORY[0x24BDAC760];
  v7[1] = 3221225472;
  v7[2] = __124__NPKPaymentWebServiceCompanionTargetDevice_passcodeChangeCoordinator_remoteDeviceShouldCancelPasscodeChangeWithCompletion___block_invoke;
  v7[3] = &unk_24CFE7940;
  v8 = v5;
  v6 = v5;
  -[NPKPaymentWebServiceCompanionTargetDevice dismissRemoteDevicePasscodeUpgradePromptWithCompletion:](self, "dismissRemoteDevicePasscodeUpgradePromptWithCompletion:", v7);

}

void __124__NPKPaymentWebServiceCompanionTargetDevice_passcodeChangeCoordinator_remoteDeviceShouldCancelPasscodeChangeWithCompletion___block_invoke(uint64_t a1, uint64_t a2, void *a3)
{
  id v5;
  NSObject *v6;
  _BOOL4 v7;
  NSObject *v8;
  const __CFString *v9;
  uint64_t v10;
  int v11;
  const __CFString *v12;
  __int16 v13;
  id v14;
  uint64_t v15;

  v15 = *MEMORY[0x24BDAC8D0];
  v5 = a3;
  pk_Payment_log();
  v6 = objc_claimAutoreleasedReturnValue();
  v7 = os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT);

  if (v7)
  {
    pk_Payment_log();
    v8 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      v9 = CFSTR("NO");
      if ((_DWORD)a2)
        v9 = CFSTR("YES");
      v11 = 138412546;
      v12 = v9;
      v13 = 2112;
      v14 = v5;
      _os_log_impl(&dword_213518000, v8, OS_LOG_TYPE_DEFAULT, "Notice: Remote device dismissed passcode upgrade prompt with success: %@, error: %@", (uint8_t *)&v11, 0x16u);
    }

  }
  v10 = *(_QWORD *)(a1 + 32);
  if (v10)
    (*(void (**)(uint64_t, uint64_t, id))(v10 + 16))(v10, a2, v5);

}

- (void)passcodeChangeCoordinator:(id)a3 checkRemoteDeviceLockStateWithCompletion:(id)a4
{
  id v5;
  id v6;
  _QWORD v7[4];
  id v8;

  v5 = a4;
  v7[0] = MEMORY[0x24BDAC760];
  v7[1] = 3221225472;
  v7[2] = __112__NPKPaymentWebServiceCompanionTargetDevice_passcodeChangeCoordinator_checkRemoteDeviceLockStateWithCompletion___block_invoke;
  v7[3] = &unk_24CFE97D8;
  v8 = v5;
  v6 = v5;
  -[NPKPaymentWebServiceCompanionTargetDevice fetchRemoteDevicePasscodeStateWithCompletion:](self, "fetchRemoteDevicePasscodeStateWithCompletion:", v7);

}

void __112__NPKPaymentWebServiceCompanionTargetDevice_passcodeChangeCoordinator_checkRemoteDeviceLockStateWithCompletion___block_invoke(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v6;
  NSObject *v7;
  _BOOL4 v8;
  NSObject *v9;
  const __CFString *v10;
  uint64_t v11;
  int v12;
  const __CFString *v13;
  __int16 v14;
  id v15;
  uint64_t v16;

  v16 = *MEMORY[0x24BDAC8D0];
  v6 = a4;
  pk_Payment_log();
  v7 = objc_claimAutoreleasedReturnValue();
  v8 = os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT);

  if (v8)
  {
    pk_Payment_log();
    v9 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      v10 = CFSTR("NO");
      if ((_DWORD)a3)
        v10 = CFSTR("YES");
      v12 = 138412546;
      v13 = v10;
      v14 = 2112;
      v15 = v6;
      _os_log_impl(&dword_213518000, v9, OS_LOG_TYPE_DEFAULT, "Notice: Remote device is passcode locked: %@, error: %@", (uint8_t *)&v12, 0x16u);
    }

  }
  v11 = *(_QWORD *)(a1 + 32);
  if (v11)
    (*(void (**)(uint64_t, uint64_t, id))(v11 + 16))(v11, a3, v6);

}

- (void)_addCompanionDevicePhoneNumberDataIfNeededWithFields:(unint64_t)a3 toDeviceMetadata:(id)a4
{
  id v5;
  NSObject *v6;
  _BOOL4 v7;
  NSObject *v8;
  NSObject *v9;
  _BOOL4 v10;
  NSObject *v11;
  void *v12;
  NSObject *v13;
  _BOOL4 v14;
  NSObject *v15;
  NSObject *v16;
  void *v17;
  void *v18;
  NSObject *v19;
  _BOOL4 v20;
  NSObject *v21;
  uint64_t v22;
  int v23;
  unint64_t v24;
  __int16 v25;
  void *v26;
  uint64_t v27;

  v27 = *MEMORY[0x24BDAC8D0];
  v5 = a4;
  pk_Payment_log();
  v6 = objc_claimAutoreleasedReturnValue();
  v7 = os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT);

  if (v7)
  {
    pk_Payment_log();
    v8 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      v23 = 134217984;
      v24 = a3;
      _os_log_impl(&dword_213518000, v8, OS_LOG_TYPE_DEFAULT, "Notice: Device Metadata: Verifying whether phone number data needs to be added for fields: %lu", (uint8_t *)&v23, 0xCu);
    }

  }
  if (v5)
  {
    if (NPKPairedOrPairingDeviceIsTinker())
    {
      pk_Payment_log();
      v9 = objc_claimAutoreleasedReturnValue();
      v10 = os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT);

      if (v10)
      {
        pk_Payment_log();
        v11 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
        {
          LOWORD(v23) = 0;
          _os_log_impl(&dword_213518000, v11, OS_LOG_TYPE_DEFAULT, "Notice: Device Metadata: Phone number data not applicable for family device", (uint8_t *)&v23, 2u);
        }
LABEL_27:

      }
    }
    else
    {
      if ((a3 & 0x20) != 0)
      {
        PKDevicePhoneNumber();
        v12 = (void *)objc_claimAutoreleasedReturnValue();
        if (objc_msgSend(v12, "length"))
          objc_msgSend(v5, "setPhoneNumber:", v12);
        pk_Payment_log();
        v13 = objc_claimAutoreleasedReturnValue();
        v14 = os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT);

        if (v14)
        {
          pk_Payment_log();
          v15 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
          {
            v23 = 138412290;
            v24 = (unint64_t)v12;
            _os_log_impl(&dword_213518000, v15, OS_LOG_TYPE_DEFAULT, "Notice: Device Metadata: Phone number %@ to be added", (uint8_t *)&v23, 0xCu);
          }

        }
      }
      if ((a3 & 0x40) != 0)
      {
        PKDevicePhoneNumberSignature();
        v16 = objc_claimAutoreleasedReturnValue();
        v11 = v16;
        if (v16)
        {
          -[NSObject objectForKeyedSubscript:](v16, "objectForKeyedSubscript:", *MEMORY[0x24BDC3150]);
          v17 = (void *)objc_claimAutoreleasedReturnValue();
          -[NSObject objectForKeyedSubscript:](v11, "objectForKeyedSubscript:", *MEMORY[0x24BDC3158]);
          v18 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v5, "setSignedPhoneNumber:", v17);
          objc_msgSend(v5, "setSignedPhoneNumberVersion:", v18);
        }
        else
        {
          v17 = 0;
          v18 = 0;
        }
        pk_Payment_log();
        v19 = objc_claimAutoreleasedReturnValue();
        v20 = os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT);

        if (v20)
        {
          pk_Payment_log();
          v21 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v21, OS_LOG_TYPE_DEFAULT))
          {
            v22 = objc_msgSend(v17, "length");
            v23 = 134218242;
            v24 = v22;
            v25 = 2112;
            v26 = v18;
            _os_log_impl(&dword_213518000, v21, OS_LOG_TYPE_DEFAULT, "Notice: Device Metadata: Phone number signature (%lu characters long) and version %@ to be added", (uint8_t *)&v23, 0x16u);
          }

        }
        goto LABEL_27;
      }
    }
  }

}

- (void)_acquireAssertionOfType:(unint64_t)a3
{
  NSObject *v5;
  _BOOL4 v6;
  NSObject *v7;
  void *v8;
  id v9;
  int v10;
  unint64_t v11;
  uint64_t v12;

  v12 = *MEMORY[0x24BDAC8D0];
  pk_Payment_log();
  v5 = objc_claimAutoreleasedReturnValue();
  v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);

  if (v6)
  {
    pk_Payment_log();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      v10 = 134217984;
      v11 = a3;
      _os_log_impl(&dword_213518000, v7, OS_LOG_TYPE_DEFAULT, "Notice: Acquiring assertion of type:%lu", (uint8_t *)&v10, 0xCu);
    }

  }
  -[NPKPaymentWebServiceCompanionTargetDevice remoteDeviceAssertionManager](self, "remoteDeviceAssertionManager");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v9 = (id)objc_msgSend(v8, "acquireAssertionOfType:", a3);

}

- (void)_invalidateAssertionOfType:(unint64_t)a3
{
  void *v5;
  void *v6;
  void *v7;
  NSObject *v8;
  NSObject *v9;
  NSObject *v10;
  NSObject *v11;
  _BOOL4 v12;
  int v13;
  unint64_t v14;
  __int16 v15;
  void *v16;
  uint64_t v17;

  v17 = *MEMORY[0x24BDAC8D0];
  -[NPKPaymentWebServiceCompanionTargetDevice remoteDeviceAssertionManager](self, "remoteDeviceAssertionManager");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "assertionsUUIDsOfType:", a3);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "lastObject");
  v7 = (void *)objc_claimAutoreleasedReturnValue();

  pk_Payment_log();
  v8 = objc_claimAutoreleasedReturnValue();
  LODWORD(v6) = os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT);

  if ((_DWORD)v6)
  {
    pk_Payment_log();
    v9 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      v13 = 134218242;
      v14 = a3;
      v15 = 2112;
      v16 = v7;
      _os_log_impl(&dword_213518000, v9, OS_LOG_TYPE_DEFAULT, "Notice: Invalidating assertion of type:%lu UUID:%@", (uint8_t *)&v13, 0x16u);
    }

  }
  if (v7)
  {
    -[NPKPaymentWebServiceCompanionTargetDevice remoteDeviceAssertionManager](self, "remoteDeviceAssertionManager");
    v10 = objc_claimAutoreleasedReturnValue();
    -[NSObject invalidateAssertionWithUUID:](v10, "invalidateAssertionWithUUID:", v7);
  }
  else
  {
    pk_Payment_log();
    v11 = objc_claimAutoreleasedReturnValue();
    v12 = os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT);

    if (!v12)
      goto LABEL_8;
    pk_Payment_log();
    v10 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
    {
      LOWORD(v13) = 0;
      _os_log_impl(&dword_213518000, v10, OS_LOG_TYPE_DEFAULT, "Warning: We don't have any assertion to invalidate", (uint8_t *)&v13, 2u);
    }
  }

LABEL_8:
}

- (void)_trackOutstandingRequestWithMessageIdentifier:(id)a3 completionHandler:(id)a4 errorHandler:(id)a5
{
  id v8;
  id v9;
  id v10;
  NPKProvisioningServiceOutstandingRequest *v11;
  id v12;
  id v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t);
  void *v18;
  id v19;
  id v20;
  id v21;
  id location;

  v8 = a3;
  v9 = a4;
  v10 = a5;
  v11 = objc_alloc_init(NPKProvisioningServiceOutstandingRequest);
  -[NPKProvisioningServiceOutstandingRequest setCompletionHandler:](v11, "setCompletionHandler:", v9);
  -[NPKProvisioningServiceOutstandingRequest setErrorHandler:](v11, "setErrorHandler:", v10);
  -[NPKProvisioningServiceOutstandingRequest setMessageIdentifier:](v11, "setMessageIdentifier:", v8);
  objc_initWeak(&location, self);
  v15 = MEMORY[0x24BDAC760];
  v16 = 3221225472;
  v17 = __122__NPKPaymentWebServiceCompanionTargetDevice__trackOutstandingRequestWithMessageIdentifier_completionHandler_errorHandler___block_invoke;
  v18 = &unk_24CFE8538;
  objc_copyWeak(&v21, &location);
  v12 = v8;
  v19 = v12;
  v13 = v10;
  v20 = v13;
  -[NPKProvisioningServiceOutstandingRequest setTimeoutHandler:](v11, "setTimeoutHandler:", &v15);
  -[NPKProvisioningServiceOutstandingRequest setTimeoutQueue:](v11, "setTimeoutQueue:", self->_internalQueue, v15, v16, v17, v18);
  -[NPKPaymentWebServiceCompanionTargetDevice outstandingRequests](self, "outstandingRequests");
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v14, "setObject:forKey:", v11, v12);

  -[NPKProvisioningServiceOutstandingRequest setOrResetCleanupTimer](v11, "setOrResetCleanupTimer");
  objc_destroyWeak(&v21);
  objc_destroyWeak(&location);

}

void __122__NPKPaymentWebServiceCompanionTargetDevice__trackOutstandingRequestWithMessageIdentifier_completionHandler_errorHandler___block_invoke(uint64_t a1)
{
  dispatch_queue_t *WeakRetained;
  dispatch_queue_t *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  NSObject *v8;
  _BOOL4 v9;
  NSObject *v10;
  uint64_t v11;
  void *v12;
  id v13;
  _QWORD v14[4];
  id v15;
  id v16;
  uint8_t buf[4];
  uint64_t v18;
  uint64_t v19;

  v19 = *MEMORY[0x24BDAC8D0];
  WeakRetained = (dispatch_queue_t *)objc_loadWeakRetained((id *)(a1 + 48));
  v3 = WeakRetained;
  if (WeakRetained)
  {
    dispatch_assert_queue_V2(WeakRetained[6]);
    -[dispatch_queue_t outstandingRequests](v3, "outstandingRequests");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "objectForKeyedSubscript:", *(_QWORD *)(a1 + 32));
    v5 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend(v5, "errorHandler");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    -[dispatch_queue_t outstandingRequests](v3, "outstandingRequests");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "removeObjectForKey:", *(_QWORD *)(a1 + 32));

    if (*(_QWORD *)(a1 + 40))
    {
      pk_Payment_log();
      v8 = objc_claimAutoreleasedReturnValue();
      v9 = os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT);

      if (v9)
      {
        pk_Payment_log();
        v10 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
        {
          v11 = *(_QWORD *)(a1 + 32);
          *(_DWORD *)buf = 138412290;
          v18 = v11;
          _os_log_impl(&dword_213518000, v10, OS_LOG_TYPE_DEFAULT, "Notice: Timed out waiting for response; invoking error handler for message %@",
            buf,
            0xCu);
        }

      }
      NPKGetIDSCommunicationError();
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      v14[0] = MEMORY[0x24BDAC760];
      v14[1] = 3221225472;
      v14[2] = __122__NPKPaymentWebServiceCompanionTargetDevice__trackOutstandingRequestWithMessageIdentifier_completionHandler_errorHandler___block_invoke_911;
      v14[3] = &unk_24CFE9188;
      v15 = v12;
      v16 = v6;
      v13 = v12;
      dispatch_async(MEMORY[0x24BDAC9B8], v14);

    }
  }

}

uint64_t __122__NPKPaymentWebServiceCompanionTargetDevice__trackOutstandingRequestWithMessageIdentifier_completionHandler_errorHandler___block_invoke_911(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(a1 + 40) + 16))(*(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 32));
}

- (id)_sendProtobuf:(id)a3 responseIdentifier:(id)a4
{
  id v6;
  void *v7;
  id v8;
  void *v9;
  uint64_t v11;
  _QWORD v12[2];

  v12[1] = *MEMORY[0x24BDAC8D0];
  v6 = a3;
  if (a4)
  {
    v11 = *MEMORY[0x24BE4FAF0];
    v12[0] = a4;
    v7 = (void *)MEMORY[0x24BDBCE70];
    v8 = a4;
    objc_msgSend(v7, "dictionaryWithObjects:forKeys:count:", v12, &v11, 1);
    a4 = (id)objc_claimAutoreleasedReturnValue();

  }
  -[NPKPaymentWebServiceCompanionTargetDevice _sendProtobuf:responseExpected:extraOptions:](self, "_sendProtobuf:responseExpected:extraOptions:", v6, 0, a4);
  v9 = (void *)objc_claimAutoreleasedReturnValue();

  return v9;
}

- (id)_sendProtobuf:(id)a3 responseExpected:(BOOL)a4
{
  return -[NPKPaymentWebServiceCompanionTargetDevice _sendProtobuf:responseExpected:extraOptions:](self, "_sendProtobuf:responseExpected:extraOptions:", a3, a4, 0);
}

- (id)_sendProtobuf:(id)a3 responseExpected:(BOOL)a4 extraOptions:(id)a5
{
  return -[NPKPaymentWebServiceCompanionTargetDevice _sendProtobuf:responseExpected:extraOptions:priority:](self, "_sendProtobuf:responseExpected:extraOptions:priority:", a3, a4, a5, 200);
}

- (id)_sendProtobuf:(id)a3 responseExpected:(BOOL)a4 extraOptions:(id)a5 priority:(int64_t)a6
{
  _BOOL8 v8;
  id v10;
  id v11;
  void *v12;
  void *v13;
  void *v14;
  uint64_t v15;
  void *v16;
  unint64_t v17;
  void *v18;
  id v19;
  void *v20;
  _QWORD v22[4];
  id v23;

  v8 = a4;
  v10 = a3;
  v11 = a5;
  objc_msgSend(MEMORY[0x24BDBCED8], "dictionary");
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  v13 = v12;
  if (v8)
    v14 = &unk_24D0566F0;
  else
    v14 = &unk_24D056710;
  objc_msgSend(v12, "setObject:forKey:", v14, *MEMORY[0x24BE4FB30]);
  if (v11)
    objc_msgSend(v13, "addEntriesFromDictionary:", v11);
  if (!-[NPKPaymentWebServiceCompanionTargetDevice context](self, "context"))
  {
    v15 = MEMORY[0x24BDBD1C8];
    objc_msgSend(v13, "setObject:forKey:", MEMORY[0x24BDBD1C8], *MEMORY[0x24BE4FAC0]);
    objc_msgSend(v13, "setObject:forKey:", v15, *MEMORY[0x24BE4FA78]);
    objc_msgSend(v10, "data");
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    v17 = objc_msgSend(v16, "length");

    if (v17 <= 0x100000)
      a6 = 300;
  }
  -[NPKPaymentWebServiceCompanionTargetDevice provisioningService](self, "provisioningService");
  v18 = (void *)objc_claimAutoreleasedReturnValue();
  v22[0] = MEMORY[0x24BDAC760];
  v22[1] = 3221225472;
  v22[2] = __98__NPKPaymentWebServiceCompanionTargetDevice__sendProtobuf_responseExpected_extraOptions_priority___block_invoke;
  v22[3] = &unk_24CFE79C0;
  v23 = v10;
  v19 = v10;
  NPKProtoSendWithOptions(v18, v19, a6, 0, v8, v22, v13);
  v20 = (void *)objc_claimAutoreleasedReturnValue();

  return v20;
}

void __98__NPKPaymentWebServiceCompanionTargetDevice__sendProtobuf_responseExpected_extraOptions_priority___block_invoke(uint64_t a1)
{
  NSObject *v2;
  _BOOL4 v3;
  NSObject *v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;

  v8 = *MEMORY[0x24BDAC8D0];
  pk_Payment_log();
  v2 = objc_claimAutoreleasedReturnValue();
  v3 = os_log_type_enabled(v2, OS_LOG_TYPE_ERROR);

  if (v3)
  {
    pk_Payment_log();
    v4 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    {
      v5 = *(_QWORD *)(a1 + 32);
      v6 = 138412290;
      v7 = v5;
      _os_log_impl(&dword_213518000, v4, OS_LOG_TYPE_ERROR, "Error: IDS failed to send protobuf %@", (uint8_t *)&v6, 0xCu);
    }

  }
}

- (id)_serialNumbersOfAllPairedDevices
{
  void *v2;
  void *v3;
  void *v4;
  id v5;
  _QWORD v7[4];
  id v8;

  objc_msgSend(MEMORY[0x24BE6B4E0], "sharedInstance");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x24BDBCEB8], "array");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "getAllDevices");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v7[0] = MEMORY[0x24BDAC760];
  v7[1] = 3221225472;
  v7[2] = __77__NPKPaymentWebServiceCompanionTargetDevice__serialNumbersOfAllPairedDevices__block_invoke;
  v7[3] = &unk_24CFE9658;
  v5 = v3;
  v8 = v5;
  objc_msgSend(v4, "enumerateObjectsUsingBlock:", v7);

  return v5;
}

void __77__NPKPaymentWebServiceCompanionTargetDevice__serialNumbersOfAllPairedDevices__block_invoke(uint64_t a1, void *a2)
{
  void *v3;
  void *v4;

  objc_msgSend(a2, "valueForProperty:", *MEMORY[0x24BE6B3D0]);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  if (v3)
  {
    v4 = v3;
    objc_msgSend(*(id *)(a1 + 32), "addObject:", v3);
    v3 = v4;
  }

}

- (BOOL)deviceSupportMultipleExpressPasses
{
  void *v2;
  void *v3;
  char v4;

  NPKPairedOrPairingDevice();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  if (v2)
  {
    v3 = (void *)objc_msgSend(objc_alloc(MEMORY[0x24BDD1880]), "initWithUUIDString:", CFSTR("AB2653AC-2D55-4D7D-9BFB-7D99AA89708B"));
    v4 = objc_msgSend(v2, "supportsCapability:", v3);

  }
  else
  {
    v4 = 0;
  }

  return v4;
}

- (BOOL)deviceSupportTransitReminderSetting
{
  void *v2;
  void *v3;
  char v4;

  NPKPairedOrPairingDevice();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = (void *)objc_msgSend(objc_alloc(MEMORY[0x24BDD1880]), "initWithUUIDString:", CFSTR("66A5B423-7CBE-423C-A13B-6389E27D63B9"));
  v4 = objc_msgSend(v2, "supportsCapability:", v3);

  return v4;
}

- (BOOL)_deviceIsConnected
{
  void *v2;
  char v3;

  -[NPKPaymentWebServiceCompanionTargetDevice provisioningService](self, "provisioningService");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = NPKIsConnectedToPairedOrPairingDeviceFromService(v2);

  return v3;
}

- (NPKCompanionAgentConnection)companionAgentConnection
{
  NPKCompanionAgentConnection *companionAgentConnection;
  NPKCompanionAgentConnection *v4;
  NPKCompanionAgentConnection *v5;

  companionAgentConnection = self->_companionAgentConnection;
  if (!companionAgentConnection)
  {
    v4 = objc_alloc_init(NPKCompanionAgentConnection);
    v5 = self->_companionAgentConnection;
    self->_companionAgentConnection = v4;

    companionAgentConnection = self->_companionAgentConnection;
  }
  return companionAgentConnection;
}

- (id)_expressPassesInformationFromDataArray:(id)a3
{
  void *v3;
  id v4;
  void *v5;
  id v6;
  _QWORD v8[4];
  id v9;

  if (!a3)
    return 0;
  v3 = (void *)MEMORY[0x24BDBCEF0];
  v4 = a3;
  objc_msgSend(v3, "set");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v8[0] = MEMORY[0x24BDAC760];
  v8[1] = 3221225472;
  v8[2] = __84__NPKPaymentWebServiceCompanionTargetDevice__expressPassesInformationFromDataArray___block_invoke;
  v8[3] = &unk_24CFED088;
  v6 = v5;
  v9 = v6;
  objc_msgSend(v4, "enumerateObjectsUsingBlock:", v8);

  return v6;
}

void __84__NPKPaymentWebServiceCompanionTargetDevice__expressPassesInformationFromDataArray___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  void *v5;
  id v6;

  v3 = a2;
  v4 = objc_opt_class();
  NPKSecureUnarchiveObject(v3, v4);
  v6 = (id)objc_claimAutoreleasedReturnValue();

  v5 = v6;
  if (v6)
  {
    objc_msgSend(*(id *)(a1 + 32), "addObject:", v6);
    v5 = v6;
  }

}

- (id)_expressPassesConfigurationFromDataArray:(id)a3
{
  void *v3;
  id v4;
  void *v5;
  id v6;
  _QWORD v8[4];
  id v9;

  if (!a3)
    return 0;
  v3 = (void *)MEMORY[0x24BDBCEF0];
  v4 = a3;
  objc_msgSend(v3, "set");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v8[0] = MEMORY[0x24BDAC760];
  v8[1] = 3221225472;
  v8[2] = __86__NPKPaymentWebServiceCompanionTargetDevice__expressPassesConfigurationFromDataArray___block_invoke;
  v8[3] = &unk_24CFED088;
  v6 = v5;
  v9 = v6;
  objc_msgSend(v4, "enumerateObjectsUsingBlock:", v8);

  return v6;
}

void __86__NPKPaymentWebServiceCompanionTargetDevice__expressPassesConfigurationFromDataArray___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  id v5;

  v3 = a2;
  v4 = objc_opt_class();
  NPKSecureUnarchiveObject(v3, v4);
  v5 = (id)objc_claimAutoreleasedReturnValue();

  if (v3)
    objc_msgSend(*(id *)(a1 + 32), "addObject:", v5);

}

- (id)_expressModesFromExpressPassConfigurations:(id)a3
{
  void *v3;
  id v4;
  void *v5;
  id v6;
  _QWORD v8[4];
  id v9;

  v3 = (void *)MEMORY[0x24BDBCEF0];
  v4 = a3;
  objc_msgSend(v3, "set");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v8[0] = MEMORY[0x24BDAC760];
  v8[1] = 3221225472;
  v8[2] = __88__NPKPaymentWebServiceCompanionTargetDevice__expressModesFromExpressPassConfigurations___block_invoke;
  v8[3] = &unk_24CFED430;
  v6 = v5;
  v9 = v6;
  objc_msgSend(v4, "enumerateObjectsUsingBlock:", v8);

  return v6;
}

void __88__NPKPaymentWebServiceCompanionTargetDevice__expressModesFromExpressPassConfigurations___block_invoke(uint64_t a1, void *a2)
{
  void *v3;
  void *v4;
  void *v5;
  id v6;
  _QWORD v7[4];
  id v8;

  v6 = a2;
  objc_msgSend(v6, "passInformation");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "expressMode");
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  if (v4)
  {
    objc_msgSend(*(id *)(a1 + 32), "addObject:", v4);
  }
  else
  {
    objc_msgSend(v6, "passInformation");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    v7[0] = MEMORY[0x24BDAC760];
    v7[1] = 3221225472;
    v7[2] = __88__NPKPaymentWebServiceCompanionTargetDevice__expressModesFromExpressPassConfigurations___block_invoke_2;
    v7[3] = &unk_24CFEDDA8;
    v8 = *(id *)(a1 + 32);
    objc_msgSend(v5, "enumerateCriteriaWithHandler:", v7);

  }
}

void __88__NPKPaymentWebServiceCompanionTargetDevice__expressModesFromExpressPassConfigurations___block_invoke_2(uint64_t a1, uint64_t a2, void *a3)
{
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  _BYTE v14[128];
  uint64_t v15;

  v15 = *MEMORY[0x24BDAC8D0];
  v4 = a3;
  v10 = 0u;
  v11 = 0u;
  v12 = 0u;
  v13 = 0u;
  v5 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v10, v14, 16);
  if (v5)
  {
    v6 = v5;
    v7 = *(_QWORD *)v11;
    do
    {
      v8 = 0;
      do
      {
        if (*(_QWORD *)v11 != v7)
          objc_enumerationMutation(v4);
        objc_msgSend(*(id *)(*((_QWORD *)&v10 + 1) + 8 * v8), "type");
        v9 = (void *)objc_claimAutoreleasedReturnValue();
        if (v9)
          objc_msgSend(*(id *)(a1 + 32), "addObject:", v9);

        ++v8;
      }
      while (v6 != v8);
      v6 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v10, v14, 16);
    }
    while (v6);
  }

}

- (id)_categoryIdentifierForPass:(id)a3
{
  return (id)PKExpressPassCategoryIdentifier();
}

- (NPKCompanionPasscodeChangeCoordinatorProtocol)passcodeChangeCoordinator
{
  NPKCompanionPasscodeChangeCoordinatorProtocol *passcodeChangeCoordinator;
  void *v4;
  NPKCompanionPasscodeChangeCoordinatorProtocol *v5;
  NPKCompanionPasscodeChangeCoordinatorProtocol *v6;
  void *v7;

  passcodeChangeCoordinator = self->_passcodeChangeCoordinator;
  if (!passcodeChangeCoordinator)
  {
    objc_msgSend(MEMORY[0x24BDD1488], "bundleWithPath:", CFSTR("/System/Library/NanoPreferenceBundles/Applications/NanoPassbookBridgeSettings.bundle"));
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    v5 = (NPKCompanionPasscodeChangeCoordinatorProtocol *)objc_alloc_init((Class)objc_msgSend(v4, "classNamed:", CFSTR("NPKCompanionPasscodeChangeCoordinator")));
    v6 = self->_passcodeChangeCoordinator;
    self->_passcodeChangeCoordinator = v5;

    -[NPKPaymentWebServiceCompanionTargetDevice passcodeUpgradeFlowController](self, "passcodeUpgradeFlowController");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    -[NPKCompanionPasscodeChangeCoordinatorProtocol setFlowController:](self->_passcodeChangeCoordinator, "setFlowController:", v7);

    -[NPKCompanionPasscodeChangeCoordinatorProtocol setDelegate:](self->_passcodeChangeCoordinator, "setDelegate:", self);
    passcodeChangeCoordinator = self->_passcodeChangeCoordinator;
  }
  return passcodeChangeCoordinator;
}

- (void)setPasscodeUpgradeFlowController:(id)a3
{
  id *p_passcodeUpgradeFlowController;
  id v5;
  id v6;

  p_passcodeUpgradeFlowController = &self->_passcodeUpgradeFlowController;
  v5 = a3;
  objc_storeWeak(p_passcodeUpgradeFlowController, v5);
  -[NPKPaymentWebServiceCompanionTargetDevice passcodeChangeCoordinator](self, "passcodeChangeCoordinator");
  v6 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "setFlowController:", v5);

}

- (id)_statusUpdaterWithResponseClass:(Class)a3 type:(unsigned __int16)a4 responseIdentifier:(id)a5
{
  uint64_t v5;
  id v8;
  id v9;
  void *v10;
  id v11;
  void *v12;
  void *v13;
  NPKIDSHeartbeat *v14;
  void *v15;
  NPKIDSHeartbeat *v16;

  v5 = a4;
  v8 = a5;
  v9 = objc_alloc_init(a3);
  if ((objc_opt_respondsToSelector() & 1) != 0)
    objc_msgSend(v9, "setPending:", 1);
  objc_msgSend(MEMORY[0x24BDBCED8], "dictionary");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  if (!-[NPKPaymentWebServiceCompanionTargetDevice context](self, "context"))
    objc_msgSend(v10, "setObject:forKey:", MEMORY[0x24BDBD1C8], *MEMORY[0x24BE4FAC0]);
  v11 = objc_alloc(MEMORY[0x24BE4FE40]);
  objc_msgSend(v9, "data");
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  v13 = (void *)objc_msgSend(v11, "initWithProtobufData:type:isResponse:", v12, v5, 1);

  v14 = [NPKIDSHeartbeat alloc];
  -[NPKPaymentWebServiceCompanionTargetDevice provisioningService](self, "provisioningService");
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  v16 = -[NPKIDSHeartbeat initWithPendingStatusProtobuf:service:priority:maxUpdates:responseIdentifier:sendOptions:queue:](v14, "initWithPendingStatusProtobuf:service:priority:maxUpdates:responseIdentifier:sendOptions:queue:", v13, v15, 200, -1, v8, v10, self->_internalQueue);

  return v16;
}

- (NPKSubcredentialInvitationCoordinator)subcredentialInvitationCoordinator
{
  NPKSubcredentialInvitationCoordinator *subcredentialInvitationCoordinator;
  NPKSubcredentialInvitationCoordinator *v4;
  NPKSubcredentialInvitationCoordinator *v5;

  subcredentialInvitationCoordinator = self->_subcredentialInvitationCoordinator;
  if (!subcredentialInvitationCoordinator)
  {
    v4 = objc_alloc_init(NPKSubcredentialInvitationCoordinator);
    v5 = self->_subcredentialInvitationCoordinator;
    self->_subcredentialInvitationCoordinator = v4;

    subcredentialInvitationCoordinator = self->_subcredentialInvitationCoordinator;
  }
  return subcredentialInvitationCoordinator;
}

- (PUConnection)passcodeConnection
{
  PUConnection *passcodeConnection;
  void *v4;
  objc_class *v5;
  PUConnection *v6;
  PUConnection *v7;
  _QWORD v9[5];
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;

  passcodeConnection = self->_passcodeConnection;
  if (!passcodeConnection)
  {
    v10 = 0;
    v11 = &v10;
    v12 = 0x2050000000;
    v4 = (void *)getPUConnectionClass_softClass_0;
    v13 = getPUConnectionClass_softClass_0;
    if (!getPUConnectionClass_softClass_0)
    {
      v9[0] = MEMORY[0x24BDAC760];
      v9[1] = 3221225472;
      v9[2] = __getPUConnectionClass_block_invoke_0;
      v9[3] = &unk_24CFE81D0;
      v9[4] = &v10;
      __getPUConnectionClass_block_invoke_0((uint64_t)v9);
      v4 = (void *)v11[3];
    }
    v5 = objc_retainAutorelease(v4);
    _Block_object_dispose(&v10, 8);
    v6 = (PUConnection *)objc_alloc_init(v5);
    v7 = self->_passcodeConnection;
    self->_passcodeConnection = v6;

    passcodeConnection = self->_passcodeConnection;
  }
  return passcodeConnection;
}

- (NPKPaymentWebServiceCompanionTargetDeviceDelegate)delegate
{
  return (NPKPaymentWebServiceCompanionTargetDeviceDelegate *)objc_loadWeakRetained((id *)&self->_delegate);
}

- (void)setDelegate:(id)a3
{
  objc_storeWeak((id *)&self->_delegate, a3);
}

- (unint64_t)context
{
  return self->_context;
}

- (void)setContext:(unint64_t)a3
{
  self->_context = a3;
}

- (IDSService)provisioningService
{
  return self->_provisioningService;
}

- (void)setProvisioningService:(id)a3
{
  objc_storeStrong((id *)&self->_provisioningService, a3);
}

- (void)setCompanionAgentConnection:(id)a3
{
  objc_storeStrong((id *)&self->_companionAgentConnection, a3);
}

- (NSMutableDictionary)outstandingRequests
{
  return self->_outstandingRequests;
}

- (void)setOutstandingRequests:(id)a3
{
  objc_storeStrong((id *)&self->_outstandingRequests, a3);
}

- (OS_dispatch_queue)internalQueue
{
  return self->_internalQueue;
}

- (void)setInternalQueue:(id)a3
{
  objc_storeStrong((id *)&self->_internalQueue, a3);
}

- (OS_dispatch_queue)responseQueue
{
  return self->_responseQueue;
}

- (void)setResponseQueue:(id)a3
{
  objc_storeStrong((id *)&self->_responseQueue, a3);
}

- (NRActiveDeviceAssertion)provisioningActiveDeviceAssertion
{
  return self->_provisioningActiveDeviceAssertion;
}

- (void)setProvisioningActiveDeviceAssertion:(id)a3
{
  objc_storeStrong((id *)&self->_provisioningActiveDeviceAssertion, a3);
}

- (NPKTargetDeviceAssertionManager)remoteDeviceAssertionManager
{
  return self->_remoteDeviceAssertionManager;
}

- (void)setRemoteDeviceAssertionManager:(id)a3
{
  objc_storeStrong((id *)&self->_remoteDeviceAssertionManager, a3);
}

- (void)setManager:(id)a3
{
  objc_storeStrong((id *)&self->_manager, a3);
}

- (void)setPasscodeChangeCoordinator:(id)a3
{
  objc_storeStrong((id *)&self->_passcodeChangeCoordinator, a3);
}

- (id)passcodeUpgradeFlowController
{
  return objc_loadWeakRetained(&self->_passcodeUpgradeFlowController);
}

- (void)setSubcredentialInvitationCoordinator:(id)a3
{
  objc_storeStrong((id *)&self->_subcredentialInvitationCoordinator, a3);
}

- (void)setPasscodeConnection:(id)a3
{
  objc_storeStrong((id *)&self->_passcodeConnection, a3);
}

- (void).cxx_destruct
{
  objc_storeStrong((id *)&self->_passcodeConnection, 0);
  objc_storeStrong((id *)&self->_subcredentialInvitationCoordinator, 0);
  objc_destroyWeak(&self->_passcodeUpgradeFlowController);
  objc_storeStrong((id *)&self->_passcodeChangeCoordinator, 0);
  objc_storeStrong((id *)&self->_manager, 0);
  objc_storeStrong((id *)&self->_remoteDeviceAssertionManager, 0);
  objc_storeStrong((id *)&self->_provisioningActiveDeviceAssertion, 0);
  objc_storeStrong((id *)&self->_responseQueue, 0);
  objc_storeStrong((id *)&self->_internalQueue, 0);
  objc_storeStrong((id *)&self->_outstandingRequests, 0);
  objc_storeStrong((id *)&self->_companionAgentConnection, 0);
  objc_storeStrong((id *)&self->_provisioningService, 0);
  objc_destroyWeak((id *)&self->_delegate);
}

@end
